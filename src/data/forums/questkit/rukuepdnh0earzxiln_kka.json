{
  "Topic": {
    "TopicId": "rukuepdnh0earzxiln_kka",
    "ForumId": "15",
    "Title": "Quest 6: Check for profanity without using any profanity in your code (for family games)",
    "LastUpdated": "2021-06-07T22:22:59.2194708Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "12665a13-c919-45dd-823b-e94f104aaf05",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\nconst profanity = \"~ç$|²\\u0018­|¦+,|u©§|réí|·\\u0006­|v'$|Á©ä|r\\u0087$\";\r\nlet swearJar = {\r\n  counter:0,\r\n  list:[]\r\n};\r\n\r\nfunction profanityChecker(data){\r\n  let rgx = profanity;\r\n  rgx = rgx.split(\"|\").map(rgx => btoa(rgx)).join(\"|\");\r\n  rgx = new RegExp(rgx, \"gi\");\r\n  if (rgx.exec(data)){\r\n    //console.log(\"Profanity!\")\r\n    swearJar.counter++;\r\n    swearJar.list.push(data)\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>const profanity = \"~ç$|²\\u0018­|¦+,|u©§|réí|·\\u0006­|v'$|Á©ä|r\\u0087$\";\nlet swearJar = {\n  counter:0,\n  list:[]\n};\n\nfunction profanityChecker(data){\n  let rgx = profanity;\n  rgx = rgx.split(\"|\").map(rgx =&gt; btoa(rgx)).join(\"|\");\n  rgx = new RegExp(rgx, \"gi\");\n  if (rgx.exec(data)){\n    //console.log(\"Profanity!\")\n    swearJar.counter++;\n    swearJar.list.push(data)\n    return true;\n  }\n  return false;\n}\n</code></pre>\n\n",
      "PostDate": "2021-06-07T22:22:59.2194708Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0c82ac91-2d25-45fd-906f-3185a9cb8af5",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That is really cool. I dad not come across btoa before; what a bizarre name for a function.\r\n\r\nI suggest modifying the second line of the function to this:\r\n```\r\nrgx = \"\\\\b(?:\" + rgx.split(\"|\").map(rgx => btoa(rgx)).join(\"|\") + \")\";\r\n```\r\nAs it is, you will catch Scunthorpe, a town in NE England, probably most famous for just this issue, which even has its own Wiki page:\r\nhttps://en.wikipedia.org/wiki/Scunthorpe_problem\r\n\r\nIt checks the rude word is at the start of the a word, but not necessarily the end. You might want to adjust the profanity string to include MF therefore.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>That is really cool. I dad not come across btoa before; what a bizarre name for a function.</p>\n<p>I suggest modifying the second line of the function to this:</p>\n<pre><code>rgx = \"\\\\b(?:\" + rgx.split(\"|\").map(rgx =&gt; btoa(rgx)).join(\"|\") + \")\";\n</code></pre>\n<p>As it is, you will catch Scunthorpe, a town in NE England, probably most famous for just this issue, which even has its own Wiki page:<br>\nhttps://en.wikipedia.org/wiki/Scunthorpe_problem</p>\n<p>It checks the rude word is at the start of the a word, but not necessarily the end. You might want to adjust the profanity string to include MF therefore.</p>\n\n",
      "PostDate": "2021-06-08T07:08:59.1039977Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ec5b9e6f-e447-4a71-8530-64ed119f15e9",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ha! I was unaware of the Scunthorpeans.\r\n\r\nI don't know. . .\r\n\r\nIf someone were to walk up to me and say, \"Scunthorpe,\" out of the blue, I'd probably reply, \"watch your mouth, damn it!\"\r\n\r\n---\r\n> It checks [if] the rude word is at the start of the [...] word, but not necessarily the end. You might want to adjust the profanity string to include MF therefore.\r\n\r\nSo, we either need a definitive list of profanity (impossible), or a list of innocent words which happen to include a profanity string (also impossible).\r\n\r\nOr, we can just let 'em curse without awarding extra points for profanity.\r\n\r\n(The game I actually use a swear jar in does in fact award the player extra points from the swear jar, but only if the player finished the story without getting the max score.)",
      "EditableFormat": "markdown",
      "HTML": "<p>Ha! I was unaware of the Scunthorpeans.</p>\n<p>I don't know. . .</p>\n<p>If someone were to walk up to me and say, \"Scunthorpe,\" out of the blue, I'd probably reply, \"watch your mouth, damn it!\"</p>\n<hr>\n<blockquote>\n<p>It checks [if] the rude word is at the start of the [...] word, but not necessarily the end. You might want to adjust the profanity string to include MF therefore.</p>\n</blockquote>\n<p>So, we either need a definitive list of profanity (impossible), or a list of innocent words which happen to include a profanity string (also impossible).</p>\n<p>Or, we can just let 'em curse without awarding extra points for profanity.</p>\n<p>(The game I actually use a swear jar in does in fact award the player extra points from the swear jar, but only if the player finished the story without getting the max score.)</p>\n\n",
      "PostDate": "2021-06-08T12:04:09.0970872Z",
      "LastEditDate": "2021-06-08T20:09:21.089849Z",
      "link": null
    },
    {
      "PostId": "cc492d54-0eca-4cb8-a3cc-332684ec8fe3",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The modified version might still reject Penistone, another English town.\r\n\r\nAs for offensive terms, you'd probabably need a list of all the likely compound words. Hyphenated terms (like some of your examples) should work; as `\\b` matches a position between a word character (`\\w`, being all alphabetic characters, modifying diacritics (accents), and the underscore) and either a nonword character (`\\W`, anything else) or the beginning/end of the string.\r\n\r\nIf I remembered correctly.",
      "EditableFormat": "markdown",
      "HTML": "<p>The modified version might still reject Penistone, another English town.</p>\n<p>As for offensive terms, you'd probabably need a list of all the likely compound words. Hyphenated terms (like some of your examples) should work; as <code>\\b</code> matches a position between a word character (<code>\\w</code>, being all alphabetic characters, modifying diacritics (accents), and the underscore) and either a nonword character (<code>\\W</code>, anything else) or the beginning/end of the string.</p>\n<p>If I remembered correctly.</p>\n\n",
      "PostDate": "2021-06-08T19:48:21.2553109Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
