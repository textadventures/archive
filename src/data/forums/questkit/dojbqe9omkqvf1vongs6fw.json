{
  "Topic": {
    "TopicId": "dojbqe9omkqvf1vongs6fw",
    "ForumId": "15",
    "Title": "Quest 6: Creating a list of known words",
    "LastUpdated": "2021-06-06T18:46:01.9457623Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "6f647965-a6e3-48e4-8b95-2a05365b0da5",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\n//version 2\r\nconst wordsKnown = [];\r\ncommands.forEach(cmd => {\r\n  cmd.regexes.forEach(rgx => {\r\n    //console.log(rgx.source)\r\n    let regexP = /\\w+/g;\r\n    const result = [...rgx.source.matchAll(regexP)]\r\n    //console.log(result)\r\n    result.forEach(word => {\r\n      if (!wordsKnown.includes(word[0])){\r\n        wordsKnown.push(word[0]);\r\n        wordsKnown.sort(Intl.Collator().compare); //updated this line to perform non case-sensitive sort\r\n      }\r\n    })\r\n  })\r\n})\r\n```\r\n\r\n---\r\nQuestJS has 225 words in its command patterns.\r\n\r\n<details>\r\n\r\n```\r\n[0…99]\r\n​0: \"about\"\r\n​​\r\n1: \"active\"\r\n​​\r\n2: \"again\"\r\n​​\r\n3: \"anti\"\r\n​​\r\n4: \"anticlockwise\"\r\n​​\r\n5: \"ask\"\r\n​​\r\n6: \"at\"\r\n​​\r\n7: \"attach\"\r\n​​\r\n8: \"back\"\r\n​​\r\n9: \"behind\"\r\n​​\r\n10: \"break\"\r\n​​\r\n11: \"brief\"\r\n​​\r\n12: \"burst\"\r\n​​\r\n13: \"buy\"\r\n​​\r\n14: \"check\"\r\n​​\r\n15: \"chug\"\r\n​​\r\n16: \"clear\"\r\n​​\r\n17: \"clockwise\"\r\n​​\r\n18: \"close\"\r\n​​\r\n19: \"clue\"\r\n​​\r\n20: \"consume\"\r\n​​\r\n21: \"converse\"\r\n​​\r\n22: \"credits\"\r\n​​\r\n23: \"d\"\r\n​​\r\n24: \"dark\"\r\n​​\r\n25: \"deactivate\"\r\n​​\r\n26: \"decant\"\r\n​​\r\n27: \"del\"\r\n​​\r\n28: \"delete\"\r\n​​\r\n29: \"destroy\"\r\n​​\r\n30: \"detach\"\r\n​​\r\n31: \"dine\"\r\n​​\r\n32: \"dir\"\r\n​​\r\n33: \"directory\"\r\n​​\r\n34: \"disable\"\r\n​​\r\n35: \"discharge\"\r\n​​\r\n36: \"dn\"\r\n​​\r\n37: \"doff\"\r\n​​\r\n38: \"don\"\r\n​​\r\n39: \"down\"\r\n​​\r\n40: \"drag\"\r\n​​\r\n41: \"drink\"\r\n​​\r\n42: \"drop\"\r\n​​\r\n43: \"e\"\r\n​​\r\n44: \"east\"\r\n​​\r\n45: \"eat\"\r\n​​\r\n46: \"empty\"\r\n​​\r\n47: \"enable\"\r\n​​\r\n48: \"enter\"\r\n​​\r\n49: \"ex\"\r\n​​\r\n50: \"exam\"\r\n​​\r\n51: \"examine\"\r\n​​\r\n52: \"exit\"\r\n​​\r\n53: \"exits\"\r\n​​\r\n54: \"fasten\"\r\n​​\r\n55: \"feed\"\r\n​​\r\n56: \"fill\"\r\n​​\r\n57: \"follow\"\r\n​​\r\n58: \"following\"\r\n​​\r\n59: \"font\"\r\n​​\r\n60: \"fonts\"\r\n​​\r\n61: \"for\"\r\n​​\r\n62: \"frm\"\r\n​​\r\n63: \"from\"\r\n​​\r\n64: \"g\"\r\n​​\r\n65: \"get\"\r\n​​\r\n66: \"give\"\r\n​​\r\n67: \"go\"\r\n​​\r\n68: \"goto\"\r\n​​\r\n69: \"grab\"\r\n​​\r\n70: \"guzzle\"\r\n​​\r\n71: \"head\"\r\n​​\r\n72: \"help\"\r\n​​\r\n73: \"her\"\r\n​​\r\n74: \"here\"\r\n​​\r\n75: \"hint\"\r\n​​\r\n76: \"his\"\r\n​​\r\n77: \"holler\"\r\n​​\r\n78: \"how\"\r\n​​\r\n79: \"i\"\r\n​​\r\n80: \"imbibe\"\r\n​​\r\n81: \"in\"\r\n​​\r\n82: \"info\"\r\n​​\r\n83: \"ing\"\r\n​​\r\n84: \"ingest\"\r\n​​\r\n85: \"ings\"\r\n​​\r\n86: \"insert\"\r\n​​\r\n87: \"inside\"\r\n​​\r\n88: \"into\"\r\n​​\r\n89: \"intro\"\r\n​​\r\n90: \"inv\"\r\n​​\r\n91: \"inventory\"\r\n​​\r\n92: \"knock\"\r\n​​\r\n93: \"l\"\r\n​​\r\n94: \"left\"\r\n​​\r\n95: \"lie\"\r\n​​\r\n96: \"listen\"\r\n​​\r\n97: \"load\"\r\n​​\r\n98: \"lock\"\r\n​​\r\n99: \"look\"\r\n[100…199]\r\n​​\r\n100: \"ls\"\r\n​​\r\n101: \"map\"\r\n​​\r\n102: \"me\"\r\n​​\r\n103: \"mode\"\r\n​​\r\n104: \"move\"\r\n​​\r\n105: \"my\"\r\n​​\r\n106: \"n\"\r\n​​\r\n107: \"ne\"\r\n​​\r\n108: \"north\"\r\n​​\r\n109: \"northeast\"\r\n​​\r\n110: \"northwest\"\r\n​​\r\n111: \"nw\"\r\n​​\r\n112: \"o\"\r\n​​\r\n113: \"of\"\r\n​​\r\n114: \"off\"\r\n​​\r\n115: \"offer\"\r\n​​\r\n116: \"on\"\r\n​​\r\n117: \"onto\"\r\n​​\r\n118: \"oops\"\r\n​​\r\n119: \"open\"\r\n​​\r\n120: \"out\"\r\n​​\r\n121: \"overwrite\"\r\n​​\r\n122: \"ow\"\r\n​​\r\n123: \"partake\"\r\n​​\r\n124: \"peek\"\r\n​​\r\n125: \"peer\"\r\n​​\r\n126: \"pick\"\r\n​​\r\n127: \"pierce\"\r\n​​\r\n128: \"place\"\r\n​​\r\n129: \"plain\"\r\n​​\r\n130: \"pour\"\r\n​​\r\n131: \"press\"\r\n​​\r\n132: \"proffer\"\r\n​​\r\n133: \"pronouns\"\r\n​​\r\n134: \"pull\"\r\n​​\r\n135: \"puncture\"\r\n​​\r\n136: \"purchase\"\r\n​​\r\n137: \"push\"\r\n​​\r\n138: \"put\"\r\n​​\r\n139: \"quaff\"\r\n​​\r\n140: \"r\"\r\n​​\r\n141: \"read\"\r\n​​\r\n142: \"recline\"\r\n​​\r\n143: \"reload\"\r\n​​\r\n144: \"remove\"\r\n​​\r\n145: \"restart\"\r\n​​\r\n146: \"restore\"\r\n​​\r\n147: \"right\"\r\n​​\r\n148: \"rotate\"\r\n​​\r\n149: \"s\"\r\n​​\r\n150: \"save\"\r\n​​\r\n151: \"say\"\r\n​​\r\n152: \"scoop\"\r\n​​\r\n153: \"score\"\r\n​​\r\n154: \"scream\"\r\n​​\r\n155: \"script\"\r\n​​\r\n156: \"se\"\r\n​​\r\n157: \"search\"\r\n​​\r\n158: \"sell\"\r\n​​\r\n159: \"sh\"\r\n​​\r\n160: \"shift\"\r\n​​\r\n161: \"shout\"\r\n​​\r\n162: \"show\"\r\n​​\r\n163: \"silent\"\r\n​​\r\n164: \"sip\"\r\n​​\r\n165: \"sit\"\r\n​​\r\n166: \"smash\"\r\n​​\r\n167: \"smell\"\r\n​​\r\n168: \"sniff\"\r\n​​\r\n169: \"south\"\r\n​​\r\n170: \"southeast\"\r\n​​\r\n171: \"southwest\"\r\n​​\r\n172: \"speak\"\r\n​​\r\n173: \"spoken\"\r\n​​\r\n174: \"stand\"\r\n​​\r\n175: \"stop\"\r\n​​\r\n176: \"sw\"\r\n​​\r\n177: \"swallow\"\r\n​​\r\n178: \"swig\"\r\n​​\r\n179: \"swill\"\r\n​​\r\n180: \"switch\"\r\n​​\r\n181: \"t\"\r\n​​\r\n182: \"take\"\r\n​​\r\n183: \"talk\"\r\n​​\r\n184: \"tell\"\r\n​​\r\n185: \"terse\"\r\n​​\r\n186: \"through\"\r\n​​\r\n187: \"tie\"\r\n​​\r\n188: \"to\"\r\n​​\r\n189: \"toggle\"\r\n​​\r\n190: \"topics\"\r\n​​\r\n191: \"transcript\"\r\n​​\r\n192: \"turn\"\r\n​​\r\n193: \"twist\"\r\n​​\r\n194: \"u\"\r\n​​\r\n195: \"under\"\r\n​​\r\n196: \"undo\"\r\n​​\r\n197: \"unfasten\"\r\n​​\r\n198: \"unlock\"\r\n​​\r\n199: \"untie\"\r\n​\r\n[200…224]\r\n​​\r\n200: \"up\"\r\n​​\r\n201: \"upon\"\r\n​​\r\n202: \"use\"\r\n​​\r\n203: \"verbose\"\r\n​​\r\n204: \"version\"\r\n​​\r\n205: \"w\"\r\n​​\r\n206: \"wait\"\r\n​​\r\n207: \"walk\"\r\n​​\r\n208: \"walkthrough\"\r\n​​\r\n209: \"warn\"\r\n​​\r\n210: \"wear\"\r\n​​\r\n211: \"west\"\r\n​​\r\n212: \"what\"\r\n​​\r\n213: \"when\"\r\n​​\r\n214: \"where\"\r\n​​\r\n215: \"whisper\"\r\n​​\r\n216: \"who\"\r\n​​\r\n217: \"why\"\r\n​​\r\n218: \"widdershins\"\r\n​​\r\n219: \"with\"\r\n​​\r\n220: \"wt\"\r\n​​\r\n221: \"x\"\r\n​​\r\n222: \"yell\"\r\n​​\r\n223: \"your\"\r\n​​\r\n224: \"z\"\r\n​\r\nlength: 225\r\n```\r\n\r\n</details>\r\n\r\n---\r\nI don't know what to do with that (if anything), but I'm posting it here so I can't lose it.",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>//version 2\nconst wordsKnown = [];\ncommands.forEach(cmd =&gt; {\n  cmd.regexes.forEach(rgx =&gt; {\n    //console.log(rgx.source)\n    let regexP = /\\w+/g;\n    const result = [...rgx.source.matchAll(regexP)]\n    //console.log(result)\n    result.forEach(word =&gt; {\n      if (!wordsKnown.includes(word[0])){\n        wordsKnown.push(word[0]);\n        wordsKnown.sort(Intl.Collator().compare); //updated this line to perform non case-sensitive sort\n      }\n    })\n  })\n})\n</code></pre>\n<hr>\n<p>QuestJS has 225 words in its command patterns.</p>\n<details>\n<pre><code>[0…99]\n​0: \"about\"\n​​\n1: \"active\"\n​​\n2: \"again\"\n​​\n3: \"anti\"\n​​\n4: \"anticlockwise\"\n​​\n5: \"ask\"\n​​\n6: \"at\"\n​​\n7: \"attach\"\n​​\n8: \"back\"\n​​\n9: \"behind\"\n​​\n10: \"break\"\n​​\n11: \"brief\"\n​​\n12: \"burst\"\n​​\n13: \"buy\"\n​​\n14: \"check\"\n​​\n15: \"chug\"\n​​\n16: \"clear\"\n​​\n17: \"clockwise\"\n​​\n18: \"close\"\n​​\n19: \"clue\"\n​​\n20: \"consume\"\n​​\n21: \"converse\"\n​​\n22: \"credits\"\n​​\n23: \"d\"\n​​\n24: \"dark\"\n​​\n25: \"deactivate\"\n​​\n26: \"decant\"\n​​\n27: \"del\"\n​​\n28: \"delete\"\n​​\n29: \"destroy\"\n​​\n30: \"detach\"\n​​\n31: \"dine\"\n​​\n32: \"dir\"\n​​\n33: \"directory\"\n​​\n34: \"disable\"\n​​\n35: \"discharge\"\n​​\n36: \"dn\"\n​​\n37: \"doff\"\n​​\n38: \"don\"\n​​\n39: \"down\"\n​​\n40: \"drag\"\n​​\n41: \"drink\"\n​​\n42: \"drop\"\n​​\n43: \"e\"\n​​\n44: \"east\"\n​​\n45: \"eat\"\n​​\n46: \"empty\"\n​​\n47: \"enable\"\n​​\n48: \"enter\"\n​​\n49: \"ex\"\n​​\n50: \"exam\"\n​​\n51: \"examine\"\n​​\n52: \"exit\"\n​​\n53: \"exits\"\n​​\n54: \"fasten\"\n​​\n55: \"feed\"\n​​\n56: \"fill\"\n​​\n57: \"follow\"\n​​\n58: \"following\"\n​​\n59: \"font\"\n​​\n60: \"fonts\"\n​​\n61: \"for\"\n​​\n62: \"frm\"\n​​\n63: \"from\"\n​​\n64: \"g\"\n​​\n65: \"get\"\n​​\n66: \"give\"\n​​\n67: \"go\"\n​​\n68: \"goto\"\n​​\n69: \"grab\"\n​​\n70: \"guzzle\"\n​​\n71: \"head\"\n​​\n72: \"help\"\n​​\n73: \"her\"\n​​\n74: \"here\"\n​​\n75: \"hint\"\n​​\n76: \"his\"\n​​\n77: \"holler\"\n​​\n78: \"how\"\n​​\n79: \"i\"\n​​\n80: \"imbibe\"\n​​\n81: \"in\"\n​​\n82: \"info\"\n​​\n83: \"ing\"\n​​\n84: \"ingest\"\n​​\n85: \"ings\"\n​​\n86: \"insert\"\n​​\n87: \"inside\"\n​​\n88: \"into\"\n​​\n89: \"intro\"\n​​\n90: \"inv\"\n​​\n91: \"inventory\"\n​​\n92: \"knock\"\n​​\n93: \"l\"\n​​\n94: \"left\"\n​​\n95: \"lie\"\n​​\n96: \"listen\"\n​​\n97: \"load\"\n​​\n98: \"lock\"\n​​\n99: \"look\"\n[100…199]\n​​\n100: \"ls\"\n​​\n101: \"map\"\n​​\n102: \"me\"\n​​\n103: \"mode\"\n​​\n104: \"move\"\n​​\n105: \"my\"\n​​\n106: \"n\"\n​​\n107: \"ne\"\n​​\n108: \"north\"\n​​\n109: \"northeast\"\n​​\n110: \"northwest\"\n​​\n111: \"nw\"\n​​\n112: \"o\"\n​​\n113: \"of\"\n​​\n114: \"off\"\n​​\n115: \"offer\"\n​​\n116: \"on\"\n​​\n117: \"onto\"\n​​\n118: \"oops\"\n​​\n119: \"open\"\n​​\n120: \"out\"\n​​\n121: \"overwrite\"\n​​\n122: \"ow\"\n​​\n123: \"partake\"\n​​\n124: \"peek\"\n​​\n125: \"peer\"\n​​\n126: \"pick\"\n​​\n127: \"pierce\"\n​​\n128: \"place\"\n​​\n129: \"plain\"\n​​\n130: \"pour\"\n​​\n131: \"press\"\n​​\n132: \"proffer\"\n​​\n133: \"pronouns\"\n​​\n134: \"pull\"\n​​\n135: \"puncture\"\n​​\n136: \"purchase\"\n​​\n137: \"push\"\n​​\n138: \"put\"\n​​\n139: \"quaff\"\n​​\n140: \"r\"\n​​\n141: \"read\"\n​​\n142: \"recline\"\n​​\n143: \"reload\"\n​​\n144: \"remove\"\n​​\n145: \"restart\"\n​​\n146: \"restore\"\n​​\n147: \"right\"\n​​\n148: \"rotate\"\n​​\n149: \"s\"\n​​\n150: \"save\"\n​​\n151: \"say\"\n​​\n152: \"scoop\"\n​​\n153: \"score\"\n​​\n154: \"scream\"\n​​\n155: \"script\"\n​​\n156: \"se\"\n​​\n157: \"search\"\n​​\n158: \"sell\"\n​​\n159: \"sh\"\n​​\n160: \"shift\"\n​​\n161: \"shout\"\n​​\n162: \"show\"\n​​\n163: \"silent\"\n​​\n164: \"sip\"\n​​\n165: \"sit\"\n​​\n166: \"smash\"\n​​\n167: \"smell\"\n​​\n168: \"sniff\"\n​​\n169: \"south\"\n​​\n170: \"southeast\"\n​​\n171: \"southwest\"\n​​\n172: \"speak\"\n​​\n173: \"spoken\"\n​​\n174: \"stand\"\n​​\n175: \"stop\"\n​​\n176: \"sw\"\n​​\n177: \"swallow\"\n​​\n178: \"swig\"\n​​\n179: \"swill\"\n​​\n180: \"switch\"\n​​\n181: \"t\"\n​​\n182: \"take\"\n​​\n183: \"talk\"\n​​\n184: \"tell\"\n​​\n185: \"terse\"\n​​\n186: \"through\"\n​​\n187: \"tie\"\n​​\n188: \"to\"\n​​\n189: \"toggle\"\n​​\n190: \"topics\"\n​​\n191: \"transcript\"\n​​\n192: \"turn\"\n​​\n193: \"twist\"\n​​\n194: \"u\"\n​​\n195: \"under\"\n​​\n196: \"undo\"\n​​\n197: \"unfasten\"\n​​\n198: \"unlock\"\n​​\n199: \"untie\"\n​\n[200…224]\n​​\n200: \"up\"\n​​\n201: \"upon\"\n​​\n202: \"use\"\n​​\n203: \"verbose\"\n​​\n204: \"version\"\n​​\n205: \"w\"\n​​\n206: \"wait\"\n​​\n207: \"walk\"\n​​\n208: \"walkthrough\"\n​​\n209: \"warn\"\n​​\n210: \"wear\"\n​​\n211: \"west\"\n​​\n212: \"what\"\n​​\n213: \"when\"\n​​\n214: \"where\"\n​​\n215: \"whisper\"\n​​\n216: \"who\"\n​​\n217: \"why\"\n​​\n218: \"widdershins\"\n​​\n219: \"with\"\n​​\n220: \"wt\"\n​​\n221: \"x\"\n​​\n222: \"yell\"\n​​\n223: \"your\"\n​​\n224: \"z\"\n​\nlength: 225\n</code></pre>\n</details>\n<hr>\n<p>I don't know what to do with that (if anything), but I'm posting it here so I can't lose it.</p>\n\n",
      "PostDate": "2021-06-06T18:46:01.9457623Z",
      "LastEditDate": "2021-06-06T19:45:40.9880226Z",
      "link": null
    },
    {
      "PostId": "ddfe9f92-1cfd-42b5-baa5-e96fae591c12",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "PS\r\n\r\nI just learned the word \"widdershins\". So, I got at least one thing out of this. :)",
      "EditableFormat": "markdown",
      "HTML": "<p>PS</p>\n<p>I just learned the word \"widdershins\". So, I got at least one thing out of this. :)</p>\n\n",
      "PostDate": "2021-06-06T18:50:58.510479Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7d790bfb-f76b-4d51-a263-d79e3e3e908d",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\nconst pronounsKnown = [];\r\nObject.values(lang.pronouns).forEach(val => {\r\n  Object.values(val).forEach(v => {\r\n    if (!pronounsKnown.includes(v)){\r\n      pronounsKnown.push(v)\r\n    }\r\n  })\r\n})\r\npronounsKnown.sort(Intl.Collator().compare);\r\n```\r\n\r\n---\r\nNow we have a list of known pronouns.",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>const pronounsKnown = [];\nObject.values(lang.pronouns).forEach(val =&gt; {\n  Object.values(val).forEach(v =&gt; {\n    if (!pronounsKnown.includes(v)){\n      pronounsKnown.push(v)\n    }\n  })\n})\npronounsKnown.sort(Intl.Collator().compare);\n</code></pre>\n<hr>\n<p>Now we have a list of known pronouns.</p>\n\n",
      "PostDate": "2021-06-06T19:46:09.2556743Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b2bacbdd-89fc-44fb-9cfa-a0dade2c9622",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**EDIT**\r\n\r\nOkay, now it finds all the words in all the patterns, the pronouns, the object aliases, and any object ```regex``` attributes. Plus, it adds the articles.\r\n\r\n```\r\nconst articlesKnown = [\"a\", \"an\", \"some\", \"the\"];\r\n\r\nconst nounsKnown = [];\r\nObject.keys(w).forEach(key => {\r\n  let regexen = [];\r\n  nounsKnown.push(w[key].alias)\r\n  if (w.regex){\r\n    let regexP = /\\w+/g;\r\n    w.regex.forEach(rgx => {\r\n        const result = [...rgx.source.matchAll(regexP)]\r\n        //console.log(result)\r\n        result.forEach(word => {\r\n            if (!nounsKnown.includes(word[0])){\r\n                nounsKnown.push(word[0]);\r\n            }\r\n        })\r\n    })\r\n  }\r\n})\r\nnounsKnown.sort(Intl.Collator().compare)\r\n\r\nconst wordsKnown = [];\r\ncommands.forEach(cmd => {\r\n  cmd.regexes.forEach(rgx => {\r\n    //console.log(rgx.source)\r\n    let regexP = /\\w+/g;\r\n    const result = [...rgx.source.matchAll(regexP)]\r\n    //console.log(result)\r\n    result.forEach(word => {\r\n      if (!wordsKnown.includes(word[0])){\r\n        wordsKnown.push(word[0]);\r\n      }\r\n    })\r\n  })\r\n})\r\nwordsKnown.sort(Intl.Collator().compare); //updated this line to perform non case-sensitive sort\r\n\r\n\r\nconst pronounsKnown = [];\r\nObject.values(lang.pronouns).forEach(val => {\r\n  Object.values(val).forEach(v => {\r\n    if (!pronounsKnown.includes(v)){\r\n      pronounsKnown.push(v)\r\n    }\r\n  })\r\n})\r\npronounsKnown.sort(Intl.Collator().compare);\r\n\r\nconst funkAndWagnalls = [...nounsKnown, ...pronounsKnown, ...wordsKnown, ...articlesKnown];\r\n\r\nfunkAndWagnalls.sort(Intl.Collator().compare);\r\n```\r\n\r\n---\r\n\r\n```funkAndWagnalls```\r\n\r\n<details>\r\n​\r\n\r\n```\r\n[0…99]\r\n​​\r\n0: \"a\"\r\n​​\r\n1: \"about\"\r\n​​\r\n2: \"active\"\r\n​​\r\n3: \"again\"\r\n​​\r\n4: \"an\"\r\n​​\r\n5: \"anti\"\r\n​​\r\n6: \"anticlockwise\"\r\n​​\r\n7: \"ask\"\r\n​​\r\n8: \"at\"\r\n​​\r\n9: \"attach\"\r\n​​\r\n10: \"back\"\r\n​​\r\n11: \"behind\"\r\n​​\r\n12: \"break\"\r\n​​\r\n13: \"brief\"\r\n​​\r\n14: \"burst\"\r\n​​\r\n15: \"buy\"\r\n​​\r\n16: \"check\"\r\n​​\r\n17: \"chug\"\r\n​​\r\n18: \"clear\"\r\n​​\r\n19: \"clockwise\"\r\n​​\r\n20: \"close\"\r\n​​\r\n21: \"clue\"\r\n​​\r\n22: \"consume\"\r\n​​\r\n23: \"converse\"\r\n​​\r\n24: \"credits\"\r\n​​\r\n25: \"d\"\r\n​​\r\n26: \"dark\"\r\n​​\r\n27: \"deactivate\"\r\n​​\r\n28: \"decant\"\r\n​​\r\n29: \"del\"\r\n​​\r\n30: \"delete\"\r\n​​\r\n31: \"destroy\"\r\n​​\r\n32: \"detach\"\r\n​​\r\n33: \"dine\"\r\n​​\r\n34: \"dir\"\r\n​​\r\n35: \"directory\"\r\n​​\r\n36: \"disable\"\r\n​​\r\n37: \"discharge\"\r\n​​\r\n38: \"dn\"\r\n​​\r\n39: \"doff\"\r\n​​\r\n40: \"don\"\r\n​​\r\n41: \"down\"\r\n​​\r\n42: \"drag\"\r\n​​\r\n43: \"drink\"\r\n​​\r\n44: \"drop\"\r\n​​\r\n45: \"e\"\r\n​​\r\n46: \"east\"\r\n​​\r\n47: \"eat\"\r\n​​\r\n48: \"empty\"\r\n​​\r\n49: \"enable\"\r\n​​\r\n50: \"enter\"\r\n​​\r\n51: \"ex\"\r\n​​\r\n52: \"exam\"\r\n​​\r\n53: \"examine\"\r\n​​\r\n54: \"exit\"\r\n​​\r\n55: \"exits\"\r\n​​\r\n56: \"fasten\"\r\n​​\r\n57: \"feed\"\r\n​​\r\n58: \"fill\"\r\n​​\r\n59: \"follow\"\r\n​​\r\n60: \"following\"\r\n​​\r\n61: \"font\"\r\n​​\r\n62: \"fonts\"\r\n​​\r\n63: \"for\"\r\n​​\r\n64: \"frm\"\r\n​​\r\n65: \"from\"\r\n​​\r\n66: \"g\"\r\n​​\r\n67: \"get\"\r\n​​\r\n68: \"give\"\r\n​​\r\n69: \"go\"\r\n​​\r\n70: \"goto\"\r\n​​\r\n71: \"grab\"\r\n​​\r\n72: \"guzzle\"\r\n​​\r\n73: \"he\"\r\n​​\r\n74: \"head\"\r\n​​\r\n75: \"help\"\r\n​​\r\n76: \"her\"\r\n​​\r\n77: \"her\"\r\n​​\r\n78: \"here\"\r\n​​\r\n79: \"hers\"\r\n​​\r\n80: \"herself\"\r\n​​\r\n81: \"him\"\r\n​​\r\n82: \"himself\"\r\n​​\r\n83: \"hint\"\r\n​​\r\n84: \"his\"\r\n​​\r\n85: \"his\"\r\n​​\r\n86: \"holler\"\r\n​​\r\n87: \"how\"\r\n​​\r\n88: \"i\"\r\n​​\r\n89: \"I\"\r\n​​\r\n90: \"imbibe\"\r\n​​\r\n91: \"in\"\r\n​​\r\n92: \"info\"\r\n​​\r\n93: \"ing\"\r\n​​\r\n94: \"ingest\"\r\n​​\r\n95: \"ings\"\r\n​​\r\n96: \"insert\"\r\n​​\r\n97: \"inside\"\r\n​​\r\n98: \"into\"\r\n​​\r\n99: \"intro\"\r\n​\r\n[100…199]\r\n​​\r\n100: \"inv\"\r\n​​\r\n101: \"inventory\"\r\n​​\r\n102: \"it\"\r\n​​\r\n103: \"its\"\r\n​​\r\n104: \"itself\"\r\n​​\r\n105: \"knock\"\r\n​​\r\n106: \"l\"\r\n​​\r\n107: \"left\"\r\n​​\r\n108: \"lie\"\r\n​​\r\n109: \"listen\"\r\n​​\r\n110: \"load\"\r\n​​\r\n111: \"lock\"\r\n​​\r\n112: \"look\"\r\n​​\r\n113: \"lounge\"\r\n​​\r\n114: \"ls\"\r\n​​\r\n115: \"map\"\r\n​​\r\n116: \"me\"\r\n​​\r\n117: \"me\"\r\n​​\r\n118: \"me\"\r\n​​\r\n119: \"mine\"\r\n​​\r\n120: \"mode\"\r\n​​\r\n121: \"move\"\r\n​​\r\n122: \"my\"\r\n​​\r\n123: \"my\"\r\n​​\r\n124: \"myself\"\r\n​​\r\n125: \"n\"\r\n​​\r\n126: \"ne\"\r\n​​\r\n127: \"north\"\r\n​​\r\n128: \"northeast\"\r\n​​\r\n129: \"northwest\"\r\n​​\r\n130: \"nw\"\r\n​​\r\n131: \"o\"\r\n​​\r\n132: \"of\"\r\n​​\r\n133: \"off\"\r\n​​\r\n134: \"offer\"\r\n​​\r\n135: \"on\"\r\n​​\r\n136: \"onto\"\r\n​​\r\n137: \"oops\"\r\n​​\r\n138: \"open\"\r\n​​\r\n139: \"out\"\r\n​​\r\n140: \"overwrite\"\r\n​​\r\n141: \"ow\"\r\n​​\r\n142: \"partake\"\r\n​​\r\n143: \"peek\"\r\n​​\r\n144: \"peer\"\r\n​​\r\n145: \"pick\"\r\n​​\r\n146: \"pierce\"\r\n​​\r\n147: \"place\"\r\n​​\r\n148: \"plain\"\r\n​​\r\n149: \"pour\"\r\n​​\r\n150: \"press\"\r\n​​\r\n151: \"proffer\"\r\n​​\r\n152: \"pronouns\"\r\n​​\r\n153: \"pull\"\r\n​​\r\n154: \"puncture\"\r\n​​\r\n155: \"purchase\"\r\n​​\r\n156: \"push\"\r\n​​\r\n157: \"put\"\r\n​​\r\n158: \"quaff\"\r\n​​\r\n159: \"r\"\r\n​​\r\n160: \"read\"\r\n​​\r\n161: \"recline\"\r\n​​\r\n162: \"reload\"\r\n​​\r\n163: \"remove\"\r\n​​\r\n164: \"restart\"\r\n​​\r\n165: \"restore\"\r\n​​\r\n166: \"right\"\r\n​​\r\n167: \"rotate\"\r\n​​\r\n168: \"s\"\r\n​​\r\n169: \"save\"\r\n​​\r\n170: \"say\"\r\n​​\r\n171: \"scoop\"\r\n​​\r\n172: \"score\"\r\n​​\r\n173: \"scream\"\r\n​​\r\n174: \"script\"\r\n​​\r\n175: \"se\"\r\n​​\r\n176: \"search\"\r\n​​\r\n177: \"sell\"\r\n​​\r\n178: \"sh\"\r\n​​\r\n179: \"she\"\r\n​​\r\n180: \"shift\"\r\n​​\r\n181: \"shout\"\r\n​​\r\n182: \"show\"\r\n​​\r\n183: \"silent\"\r\n​​\r\n184: \"sip\"\r\n​​\r\n185: \"sit\"\r\n​​\r\n186: \"smash\"\r\n​​\r\n187: \"smell\"\r\n​​\r\n188: \"sniff\"\r\n​​\r\n189: \"some\"\r\n​​\r\n190: \"south\"\r\n​​\r\n191: \"southeast\"\r\n​​\r\n192: \"southwest\"\r\n​​\r\n193: \"speak\"\r\n​​\r\n194: \"spoken\"\r\n​​\r\n195: \"stand\"\r\n​​\r\n196: \"stop\"\r\n​​\r\n197: \"sw\"\r\n​​\r\n198: \"swallow\"\r\n​​\r\n199: \"swig\"\r\n​\r\n[200…255]\r\n​​\r\n200: \"swill\"\r\n​​\r\n201: \"switch\"\r\n​​\r\n202: \"t\"\r\n​​\r\n203: \"take\"\r\n​​\r\n204: \"talk\"\r\n​​\r\n205: \"tell\"\r\n​​\r\n206: \"terse\"\r\n​​\r\n207: \"the\"\r\n​​\r\n208: \"their\"\r\n​​\r\n209: \"theirs\"\r\n​​\r\n210: \"them\"\r\n​​\r\n211: \"themselves\"\r\n​​\r\n212: \"they\"\r\n​​\r\n213: \"through\"\r\n​​\r\n214: \"tie\"\r\n​​\r\n215: \"to\"\r\n​​\r\n216: \"toggle\"\r\n​​\r\n217: \"topics\"\r\n​​\r\n218: \"transcript\"\r\n​​\r\n219: \"turn\"\r\n​​\r\n220: \"twist\"\r\n​​\r\n221: \"u\"\r\n​​\r\n222: \"under\"\r\n​​\r\n223: \"undo\"\r\n​​\r\n224: \"unfasten\"\r\n​​\r\n225: \"unlock\"\r\n​​\r\n226: \"untie\"\r\n​​\r\n227: \"up\"\r\n​​\r\n228: \"upon\"\r\n​​\r\n229: \"use\"\r\n​​\r\n230: \"verbose\"\r\n​​\r\n231: \"version\"\r\n​​\r\n232: \"w\"\r\n​​\r\n233: \"wait\"\r\n​​\r\n234: \"walk\"\r\n​​\r\n235: \"walkthrough\"\r\n​​\r\n236: \"warn\"\r\n​​\r\n237: \"wear\"\r\n​​\r\n238: \"west\"\r\n​​\r\n239: \"what\"\r\n​​\r\n240: \"when\"\r\n​​\r\n241: \"where\"\r\n​​\r\n242: \"whisper\"\r\n​​\r\n243: \"who\"\r\n​​\r\n244: \"why\"\r\n​​\r\n245: \"widdershins\"\r\n​​\r\n246: \"with\"\r\n​​\r\n247: \"wt\"\r\n​​\r\n248: \"x\"\r\n​​\r\n249: \"yell\"\r\n​​\r\n250: \"you\"\r\n​​\r\n251: \"your\"\r\n​​\r\n252: \"your\"\r\n​​\r\n253: \"yours\"\r\n​​\r\n254: \"yourself\"\r\n​​\r\n255: \"z\"\r\n​\r\nlength: 256\r\n\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>EDIT</strong></p>\n<p>Okay, now it finds all the words in all the patterns, the pronouns, the object aliases, and any object <code>regex</code> attributes. Plus, it adds the articles.</p>\n<pre><code>const articlesKnown = [\"a\", \"an\", \"some\", \"the\"];\n\nconst nounsKnown = [];\nObject.keys(w).forEach(key =&gt; {\n  let regexen = [];\n  nounsKnown.push(w[key].alias)\n  if (w.regex){\n    let regexP = /\\w+/g;\n    w.regex.forEach(rgx =&gt; {\n        const result = [...rgx.source.matchAll(regexP)]\n        //console.log(result)\n        result.forEach(word =&gt; {\n            if (!nounsKnown.includes(word[0])){\n                nounsKnown.push(word[0]);\n            }\n        })\n    })\n  }\n})\nnounsKnown.sort(Intl.Collator().compare)\n\nconst wordsKnown = [];\ncommands.forEach(cmd =&gt; {\n  cmd.regexes.forEach(rgx =&gt; {\n    //console.log(rgx.source)\n    let regexP = /\\w+/g;\n    const result = [...rgx.source.matchAll(regexP)]\n    //console.log(result)\n    result.forEach(word =&gt; {\n      if (!wordsKnown.includes(word[0])){\n        wordsKnown.push(word[0]);\n      }\n    })\n  })\n})\nwordsKnown.sort(Intl.Collator().compare); //updated this line to perform non case-sensitive sort\n\n\nconst pronounsKnown = [];\nObject.values(lang.pronouns).forEach(val =&gt; {\n  Object.values(val).forEach(v =&gt; {\n    if (!pronounsKnown.includes(v)){\n      pronounsKnown.push(v)\n    }\n  })\n})\npronounsKnown.sort(Intl.Collator().compare);\n\nconst funkAndWagnalls = [...nounsKnown, ...pronounsKnown, ...wordsKnown, ...articlesKnown];\n\nfunkAndWagnalls.sort(Intl.Collator().compare);\n</code></pre>\n<hr>\n<p><code>funkAndWagnalls</code></p>\n<details>\n​\n<pre><code>[0…99]\n​​\n0: \"a\"\n​​\n1: \"about\"\n​​\n2: \"active\"\n​​\n3: \"again\"\n​​\n4: \"an\"\n​​\n5: \"anti\"\n​​\n6: \"anticlockwise\"\n​​\n7: \"ask\"\n​​\n8: \"at\"\n​​\n9: \"attach\"\n​​\n10: \"back\"\n​​\n11: \"behind\"\n​​\n12: \"break\"\n​​\n13: \"brief\"\n​​\n14: \"burst\"\n​​\n15: \"buy\"\n​​\n16: \"check\"\n​​\n17: \"chug\"\n​​\n18: \"clear\"\n​​\n19: \"clockwise\"\n​​\n20: \"close\"\n​​\n21: \"clue\"\n​​\n22: \"consume\"\n​​\n23: \"converse\"\n​​\n24: \"credits\"\n​​\n25: \"d\"\n​​\n26: \"dark\"\n​​\n27: \"deactivate\"\n​​\n28: \"decant\"\n​​\n29: \"del\"\n​​\n30: \"delete\"\n​​\n31: \"destroy\"\n​​\n32: \"detach\"\n​​\n33: \"dine\"\n​​\n34: \"dir\"\n​​\n35: \"directory\"\n​​\n36: \"disable\"\n​​\n37: \"discharge\"\n​​\n38: \"dn\"\n​​\n39: \"doff\"\n​​\n40: \"don\"\n​​\n41: \"down\"\n​​\n42: \"drag\"\n​​\n43: \"drink\"\n​​\n44: \"drop\"\n​​\n45: \"e\"\n​​\n46: \"east\"\n​​\n47: \"eat\"\n​​\n48: \"empty\"\n​​\n49: \"enable\"\n​​\n50: \"enter\"\n​​\n51: \"ex\"\n​​\n52: \"exam\"\n​​\n53: \"examine\"\n​​\n54: \"exit\"\n​​\n55: \"exits\"\n​​\n56: \"fasten\"\n​​\n57: \"feed\"\n​​\n58: \"fill\"\n​​\n59: \"follow\"\n​​\n60: \"following\"\n​​\n61: \"font\"\n​​\n62: \"fonts\"\n​​\n63: \"for\"\n​​\n64: \"frm\"\n​​\n65: \"from\"\n​​\n66: \"g\"\n​​\n67: \"get\"\n​​\n68: \"give\"\n​​\n69: \"go\"\n​​\n70: \"goto\"\n​​\n71: \"grab\"\n​​\n72: \"guzzle\"\n​​\n73: \"he\"\n​​\n74: \"head\"\n​​\n75: \"help\"\n​​\n76: \"her\"\n​​\n77: \"her\"\n​​\n78: \"here\"\n​​\n79: \"hers\"\n​​\n80: \"herself\"\n​​\n81: \"him\"\n​​\n82: \"himself\"\n​​\n83: \"hint\"\n​​\n84: \"his\"\n​​\n85: \"his\"\n​​\n86: \"holler\"\n​​\n87: \"how\"\n​​\n88: \"i\"\n​​\n89: \"I\"\n​​\n90: \"imbibe\"\n​​\n91: \"in\"\n​​\n92: \"info\"\n​​\n93: \"ing\"\n​​\n94: \"ingest\"\n​​\n95: \"ings\"\n​​\n96: \"insert\"\n​​\n97: \"inside\"\n​​\n98: \"into\"\n​​\n99: \"intro\"\n​\n[100…199]\n​​\n100: \"inv\"\n​​\n101: \"inventory\"\n​​\n102: \"it\"\n​​\n103: \"its\"\n​​\n104: \"itself\"\n​​\n105: \"knock\"\n​​\n106: \"l\"\n​​\n107: \"left\"\n​​\n108: \"lie\"\n​​\n109: \"listen\"\n​​\n110: \"load\"\n​​\n111: \"lock\"\n​​\n112: \"look\"\n​​\n113: \"lounge\"\n​​\n114: \"ls\"\n​​\n115: \"map\"\n​​\n116: \"me\"\n​​\n117: \"me\"\n​​\n118: \"me\"\n​​\n119: \"mine\"\n​​\n120: \"mode\"\n​​\n121: \"move\"\n​​\n122: \"my\"\n​​\n123: \"my\"\n​​\n124: \"myself\"\n​​\n125: \"n\"\n​​\n126: \"ne\"\n​​\n127: \"north\"\n​​\n128: \"northeast\"\n​​\n129: \"northwest\"\n​​\n130: \"nw\"\n​​\n131: \"o\"\n​​\n132: \"of\"\n​​\n133: \"off\"\n​​\n134: \"offer\"\n​​\n135: \"on\"\n​​\n136: \"onto\"\n​​\n137: \"oops\"\n​​\n138: \"open\"\n​​\n139: \"out\"\n​​\n140: \"overwrite\"\n​​\n141: \"ow\"\n​​\n142: \"partake\"\n​​\n143: \"peek\"\n​​\n144: \"peer\"\n​​\n145: \"pick\"\n​​\n146: \"pierce\"\n​​\n147: \"place\"\n​​\n148: \"plain\"\n​​\n149: \"pour\"\n​​\n150: \"press\"\n​​\n151: \"proffer\"\n​​\n152: \"pronouns\"\n​​\n153: \"pull\"\n​​\n154: \"puncture\"\n​​\n155: \"purchase\"\n​​\n156: \"push\"\n​​\n157: \"put\"\n​​\n158: \"quaff\"\n​​\n159: \"r\"\n​​\n160: \"read\"\n​​\n161: \"recline\"\n​​\n162: \"reload\"\n​​\n163: \"remove\"\n​​\n164: \"restart\"\n​​\n165: \"restore\"\n​​\n166: \"right\"\n​​\n167: \"rotate\"\n​​\n168: \"s\"\n​​\n169: \"save\"\n​​\n170: \"say\"\n​​\n171: \"scoop\"\n​​\n172: \"score\"\n​​\n173: \"scream\"\n​​\n174: \"script\"\n​​\n175: \"se\"\n​​\n176: \"search\"\n​​\n177: \"sell\"\n​​\n178: \"sh\"\n​​\n179: \"she\"\n​​\n180: \"shift\"\n​​\n181: \"shout\"\n​​\n182: \"show\"\n​​\n183: \"silent\"\n​​\n184: \"sip\"\n​​\n185: \"sit\"\n​​\n186: \"smash\"\n​​\n187: \"smell\"\n​​\n188: \"sniff\"\n​​\n189: \"some\"\n​​\n190: \"south\"\n​​\n191: \"southeast\"\n​​\n192: \"southwest\"\n​​\n193: \"speak\"\n​​\n194: \"spoken\"\n​​\n195: \"stand\"\n​​\n196: \"stop\"\n​​\n197: \"sw\"\n​​\n198: \"swallow\"\n​​\n199: \"swig\"\n​\n[200…255]\n​​\n200: \"swill\"\n​​\n201: \"switch\"\n​​\n202: \"t\"\n​​\n203: \"take\"\n​​\n204: \"talk\"\n​​\n205: \"tell\"\n​​\n206: \"terse\"\n​​\n207: \"the\"\n​​\n208: \"their\"\n​​\n209: \"theirs\"\n​​\n210: \"them\"\n​​\n211: \"themselves\"\n​​\n212: \"they\"\n​​\n213: \"through\"\n​​\n214: \"tie\"\n​​\n215: \"to\"\n​​\n216: \"toggle\"\n​​\n217: \"topics\"\n​​\n218: \"transcript\"\n​​\n219: \"turn\"\n​​\n220: \"twist\"\n​​\n221: \"u\"\n​​\n222: \"under\"\n​​\n223: \"undo\"\n​​\n224: \"unfasten\"\n​​\n225: \"unlock\"\n​​\n226: \"untie\"\n​​\n227: \"up\"\n​​\n228: \"upon\"\n​​\n229: \"use\"\n​​\n230: \"verbose\"\n​​\n231: \"version\"\n​​\n232: \"w\"\n​​\n233: \"wait\"\n​​\n234: \"walk\"\n​​\n235: \"walkthrough\"\n​​\n236: \"warn\"\n​​\n237: \"wear\"\n​​\n238: \"west\"\n​​\n239: \"what\"\n​​\n240: \"when\"\n​​\n241: \"where\"\n​​\n242: \"whisper\"\n​​\n243: \"who\"\n​​\n244: \"why\"\n​​\n245: \"widdershins\"\n​​\n246: \"with\"\n​​\n247: \"wt\"\n​​\n248: \"x\"\n​​\n249: \"yell\"\n​​\n250: \"you\"\n​​\n251: \"your\"\n​​\n252: \"your\"\n​​\n253: \"yours\"\n​​\n254: \"yourself\"\n​​\n255: \"z\"\n​\nlength: 256\n\n</code></pre>\n</details>\n\n",
      "PostDate": "2021-06-06T20:05:59.4162141Z",
      "LastEditDate": "2021-06-06T20:39:50.2688585Z",
      "link": null
    }
  ]
}
