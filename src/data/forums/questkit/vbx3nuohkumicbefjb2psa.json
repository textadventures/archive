{
  "Topic": {
    "TopicId": "vbx3nuohkumicbefjb2psa",
    "ForumId": "15",
    "Title": "Version 1.0 released",
    "LastUpdated": "2022-04-05T07:07:34.7562578Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "9bacafb4-5782-40fc-aa1c-7b0cb86278f9",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have uploaded version 1.0.\r\n\r\nThere was no particular milestone; it just seemed to get to the point where it was about done. There have been no big changes for a while, and bug fixes have been getting fewer too. That is not to say it is bug-free, but we have to get to a full release at some point.\r\n\r\nIt can be found here:\r\nhttps://github.com/ThePix/QuestJS/releases/tag/v1.0.0\r\n\r\nYou just need the QuestJS-1-0.zip file; the other two are added by GitHub and include some unnecessary files.\r\n\r\n_ETA:_ Version 1.1 now out, use this instead:\r\nhttps://github.com/ThePix/QuestJS/releases/tag/v1.1.0",
      "EditableFormat": "markdown",
      "HTML": "<p>I have uploaded version 1.0.</p>\n<p>There was no particular milestone; it just seemed to get to the point where it was about done. There have been no big changes for a while, and bug fixes have been getting fewer too. That is not to say it is bug-free, but we have to get to a full release at some point.</p>\n<p>It can be found here:<br>\nhttps://github.com/ThePix/QuestJS/releases/tag/v1.0.0</p>\n<p>You just need the QuestJS-1-0.zip file; the other two are added by GitHub and include some unnecessary files.</p>\n<p><em>ETA:</em> Version 1.1 now out, use this instead:<br>\nhttps://github.com/ThePix/QuestJS/releases/tag/v1.1.0</p>\n\n",
      "PostDate": "2022-04-05T07:07:34.7562578Z",
      "LastEditDate": "2022-05-01T07:12:03.1062686Z",
      "link": null
    },
    {
      "PostId": "0da9464f-c31f-4b0b-bb58-d0d548b526c1",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Now to create an editor...",
      "EditableFormat": "markdown",
      "HTML": "<p>Now to create an editor...</p>\n\n",
      "PostDate": "2022-04-05T07:07:59.6719123Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "edda1d79-6ab7-4744-b7be-e1c85833c147",
      "UserId": 420406,
      "Username": "Starrigger",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Awesome! And Congrats! Moving over to the official 1.0!\r\n\r\nAh yes, the editor... I must admit though, I have been having fun cracking open Notepad++. It's been awhile.\r\n\r\nSteve",
      "EditableFormat": "markdown",
      "HTML": "<p>Awesome! And Congrats! Moving over to the official 1.0!</p>\n<p>Ah yes, the editor... I must admit though, I have been having fun cracking open Notepad++. It's been awhile.</p>\n<p>Steve</p>\n\n",
      "PostDate": "2022-04-06T01:38:45.4683303Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "15f82915-cf6d-4ac5-89da-b9a86e93128c",
      "UserId": 438905,
      "Username": "Honoriam",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b865620f96adee94a79fceb9f25fed3d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Congrats! It sure does feel good (to me at least) to get to stamp that 1.0 on something.\r\nLooking forward to seeing how that editor works out, even if it probably won't be compatible with the heavily edited v0.7 I've been using haha.",
      "EditableFormat": "markdown",
      "HTML": "<p>Congrats! It sure does feel good (to me at least) to get to stamp that 1.0 on something.<br>\nLooking forward to seeing how that editor works out, even if it probably won't be compatible with the heavily edited v0.7 I've been using haha.</p>\n\n",
      "PostDate": "2022-04-06T05:22:38.7049237Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a874b4f7-0149-464c-bd2d-2ca87cc8137e",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have uploaded version 1.1 (already!) in part due to bugs pointed out on this forum. Also updates RPG lib for setting NPCs to guard.\r\nhttps://github.com/ThePix/QuestJS/releases/tag/v1.1.0\r\n\r\nIn addition, this release significantly modified the \"respond\" function, which is used by other things, the most important being the NPC reactions system. If you do not use the \"respond\" function and do not use NPC reactions, this will not affect you. If you do, read on.\r\nhttps://github.com/ThePix/QuestJS/wiki/The-respond-function\r\n\r\nIf you use the \"respond\" function with a default - the third parameter to the function - this will no longer work. You need to add an \"extraScript\" attribute to the first parameter.\r\n\r\n```\r\n// previously this worked\r\nconst params = {\r\n  text:text1,\r\n  text2:text2,\r\n  actor:this,\r\n  action:action,      \r\n}\r\nreturn respond(params, list, this.askTellDone)\r\n```\r\n\r\n```\r\n// now should be this\r\nconst params = {\r\n  text:text1,\r\n  text2:text2,\r\n  actor:this,\r\n  action:action,\r\n  extraScript:this.askTellDone,\r\n}\r\nreturn respond(params, list)\r\n```\r\n\r\nYou can also add an \"extraTest\" attribute; this will be used with every response, in addition to its \"test\" function, if it exists.\r\n\r\nBoth \"extraTest\" and \"extraScript\" will be passed the params and the relevant response. Note that response could be undefined for \"extraScript\".\r\n\r\nTo illustrate, here is the new code for handling reactions. First the params are set up, with these new attributes. Then \"respond\" is called.\r\n\r\n```\r\n    const params = {\r\n      char:this,\r\n      noResponseNotError:true,\r\n      extraScript:function(params, response) {\r\n        if (!response) return\r\n        if (!response.allowRepeat) params.char.reactionFlags.push(response.name)\r\n        if (!response.noPause) params.char.pause()\r\n        if (response.override) params.char.reactionFlags = params.char.reactionFlags.concat(response.override)\r\n      },\r\n      extraTest:function(params, response, ) {\r\n        return !params.char.reactionFlags.includes(response.name)\r\n      },\r\n    }\r\n    respond(params, this.reactions)\r\n```\r\n\r\n\r\nThe built-in ASK/TELL system uses the \"respond\" function with a default, but that is all updated in the library, so there is nothing to do there.\r\n\r\nThe NPC reaction system now uses the \"respond\" function, which means that the \"action\" attribute needs to be changed to \"script\".\r\nhttps://github.com/ThePix/QuestJS/wiki/NPCs:-Reactions\r\n\r\n```\r\n// previously this worked\r\n    reactions:[\r\n      {\r\n        name:'bigHat',\r\n        test:function() {\r\n          return game.player.getOuterWearable(\"hat\") === w.bigHat\r\n        },\r\n        action:function() { \r\n          msg(\"'Wow, what a great hat,' Mary says.\") \r\n        },\r\n        override:[\"smallHat\"],\r\n      },\r\n\r\n      {\r\n        name:'smallHat',\r\n        test:function() {\r\n          return game.player.getOuterWearable(\"hat\") === w.smallHat\r\n        },\r\n        action:function(npc) {\r\n          msg(\"'What a lovely hat,' \" + lang.getName(npc) + \" says.\") \r\n        },\r\n      },\r\n    ],\r\n```\r\n\r\n```\r\n// now should be this\r\n    reactions:[\r\n      {\r\n        name:'bigHat',\r\n        test:function() {\r\n          return game.player.getOuterWearable(\"hat\") === w.bigHat\r\n        },\r\n        script:function() { \r\n          msg(\"'Wow, what a great hat,' Mary says.\") \r\n        },\r\n        override:[\"smallHat\"],\r\n      },\r\n\r\n      {\r\n        name:'smallHat',\r\n        test:function() {\r\n          return game.player.getOuterWearable(\"hat\") === w.smallHat\r\n        },\r\n        script:function(npc) {\r\n          msg(\"'What a lovely hat,' \" + lang.getName(npc) + \" says.\") \r\n        },\r\n      },\r\n    ],\r\n```\r\n\r\nApologies if all this is a big headache to anyone, but to be honest I would be surprised if anyone is using these things. That said, you really should, if you want to create great NPCs!",
      "EditableFormat": "markdown",
      "HTML": "<p>I have uploaded version 1.1 (already!) in part due to bugs pointed out on this forum. Also updates RPG lib for setting NPCs to guard.<br>\nhttps://github.com/ThePix/QuestJS/releases/tag/v1.1.0</p>\n<p>In addition, this release significantly modified the \"respond\" function, which is used by other things, the most important being the NPC reactions system. If you do not use the \"respond\" function and do not use NPC reactions, this will not affect you. If you do, read on.<br>\nhttps://github.com/ThePix/QuestJS/wiki/The-respond-function</p>\n<p>If you use the \"respond\" function with a default - the third parameter to the function - this will no longer work. You need to add an \"extraScript\" attribute to the first parameter.</p>\n<pre><code>// previously this worked\nconst params = {\n  text:text1,\n  text2:text2,\n  actor:this,\n  action:action,      \n}\nreturn respond(params, list, this.askTellDone)\n</code></pre>\n<pre><code>// now should be this\nconst params = {\n  text:text1,\n  text2:text2,\n  actor:this,\n  action:action,\n  extraScript:this.askTellDone,\n}\nreturn respond(params, list)\n</code></pre>\n<p>You can also add an \"extraTest\" attribute; this will be used with every response, in addition to its \"test\" function, if it exists.</p>\n<p>Both \"extraTest\" and \"extraScript\" will be passed the params and the relevant response. Note that response could be undefined for \"extraScript\".</p>\n<p>To illustrate, here is the new code for handling reactions. First the params are set up, with these new attributes. Then \"respond\" is called.</p>\n<pre><code>    const params = {\n      char:this,\n      noResponseNotError:true,\n      extraScript:function(params, response) {\n        if (!response) return\n        if (!response.allowRepeat) params.char.reactionFlags.push(response.name)\n        if (!response.noPause) params.char.pause()\n        if (response.override) params.char.reactionFlags = params.char.reactionFlags.concat(response.override)\n      },\n      extraTest:function(params, response, ) {\n        return !params.char.reactionFlags.includes(response.name)\n      },\n    }\n    respond(params, this.reactions)\n</code></pre>\n<p>The built-in ASK/TELL system uses the \"respond\" function with a default, but that is all updated in the library, so there is nothing to do there.</p>\n<p>The NPC reaction system now uses the \"respond\" function, which means that the \"action\" attribute needs to be changed to \"script\".<br>\nhttps://github.com/ThePix/QuestJS/wiki/NPCs:-Reactions</p>\n<pre><code>// previously this worked\n    reactions:[\n      {\n        name:'bigHat',\n        test:function() {\n          return game.player.getOuterWearable(\"hat\") === w.bigHat\n        },\n        action:function() { \n          msg(\"'Wow, what a great hat,' Mary says.\") \n        },\n        override:[\"smallHat\"],\n      },\n\n      {\n        name:'smallHat',\n        test:function() {\n          return game.player.getOuterWearable(\"hat\") === w.smallHat\n        },\n        action:function(npc) {\n          msg(\"'What a lovely hat,' \" + lang.getName(npc) + \" says.\") \n        },\n      },\n    ],\n</code></pre>\n<pre><code>// now should be this\n    reactions:[\n      {\n        name:'bigHat',\n        test:function() {\n          return game.player.getOuterWearable(\"hat\") === w.bigHat\n        },\n        script:function() { \n          msg(\"'Wow, what a great hat,' Mary says.\") \n        },\n        override:[\"smallHat\"],\n      },\n\n      {\n        name:'smallHat',\n        test:function() {\n          return game.player.getOuterWearable(\"hat\") === w.smallHat\n        },\n        script:function(npc) {\n          msg(\"'What a lovely hat,' \" + lang.getName(npc) + \" says.\") \n        },\n      },\n    ],\n</code></pre>\n<p>Apologies if all this is a big headache to anyone, but to be honest I would be surprised if anyone is using these things. That said, you really should, if you want to create great NPCs!</p>\n\n",
      "PostDate": "2022-05-01T07:11:14.6088663Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d1b92f3c-c274-4ab9-8cd7-851d83160e75",
      "UserId": 420406,
      "Username": "Starrigger",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Awesome! Onward and upward!\r\n\r\nThanks for the official release\r\n\r\nSteve",
      "EditableFormat": "markdown",
      "HTML": "<p>Awesome! Onward and upward!</p>\n<p>Thanks for the official release</p>\n<p>Steve</p>\n\n",
      "PostDate": "2022-05-02T17:38:21.176346Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
