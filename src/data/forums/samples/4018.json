{
  "Topic": {
    "TopicId": "4018",
    "ForumId": "18",
    "Title": "Look At Current Room",
    "LastUpdated": "2013-11-26T10:12:54+00:00",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "26923",
      "UserId": 0,
      "Username": "Liam315",
      "UserAvatar": null,
      "UserGravatar": "ded290a24d340d761d42c897d08111aa",
      "EditableText": "While watching my game being tested I noticed that a player may try to examine the room by name and in some cases there was no response. e.g. The player is told that they are in a kitchen, but when they type &quot;examine kitchen,&quot; Quest responds that it can't see a kitchen. Rather than create a scenery item to take care of every room, I coded a cover-all response in one of the default functions that just reprints the current room description, and I thought I'd share it here in case anyone else might want to make use of it.\n\nDetails:\n\n- The following code returns the current room description when a player enters &quot;look at/examine [object]&quot; and [object] is a match for the name of the current room.\n\n- Negates the need to create a scenery object that responds to the player trying to examine the room like an object.\n\n- Priority is given to objects in the room, only when a match is not found will the attempt be made to compare the player's input with the name of the current room.\n\n- You must copy and paste the code over the default function UnresolvedCommand.\n\n- The relevant lines here that have been added/modified from the original are 4-16.\n\n[code:2qo7kirg]// TO DO&#58; Update names below, we don't need these two variables\nunresolvedobject = objectname\nunresolvedkey = varname\nlookhere = False\nif (game&#46;pov&#46;currentcommandpattern = lookat) {\n  candidateroomname = LCase(Replace(StringDictionaryItem(game&#46;pov&#46;currentcommandvarlist,&quot;object&quot;),&quot; &quot;,&quot;&quot;))\n  matchtoroomname = LCase(Replace(GetDisplayAlias(game&#46;pov&#46;parent),&quot; &quot;,&quot;&quot;))\n  if (Instr(matchtoroomname,candidateroomname) &gt; 0) {\n    lookhere = True\n  }\n}\nif (lookhere) {\n  msg (&quot;&quot;)\n  ShowRoomDescription\n}\nelse if (HasString(game&#46;pov&#46;currentcommandpattern, &quot;unresolved&quot;)) {\n  if (ListCount(game&#46;pov&#46;currentcommandvarlist) &gt; 1) {\n    msg (game&#46;pov&#46;currentcommandpattern&#46;unresolved + &quot; (&quot; + unresolvedobject + &quot;)&quot;)\n  }\n  else {\n    msg (game&#46;pov&#46;currentcommandpattern&#46;unresolved)\n  }\n}\nelse {\n  if (ListCount(game&#46;pov&#46;currentcommandvarlist) &gt; 1) {\n    msg (Template(&quot;UnresolvedObject&quot;) + &quot; (&quot; + unresolvedobject + &quot;)&quot;)\n  }\n  else {\n    msg (Template(&quot;UnresolvedObject&quot;))\n  }\n}\ngame&#46;unresolvedcommand = game&#46;pov&#46;currentcommandpattern\ngame&#46;unresolvedcommandvarlist = game&#46;pov&#46;currentcommandvarlist\ngame&#46;unresolvedcommandkey = unresolvedkey[/code:2qo7kirg]",
      "EditableFormat": "bbcode",
      "HTML": "While watching my game being tested I noticed that a player may try to examine the room by name and in some cases there was no response. e.g. The player is told that they are in a kitchen, but when they type &quot;examine kitchen,&quot; Quest responds that it can't see a kitchen. Rather than create a scenery item to take care of every room, I coded a cover-all response in one of the default functions that just reprints the current room description, and I thought I'd share it here in case anyone else might want to make use of it.<br/><br/>Details:<br/><br/>- The following code returns the current room description when a player enters &quot;look at/examine [object]&quot; and [object] is a match for the name of the current room.<br/><br/>- Negates the need to create a scenery object that responds to the player trying to examine the room like an object.<br/><br/>- Priority is given to objects in the room, only when a match is not found will the attempt be made to compare the player's input with the name of the current room.<br/><br/>- You must copy and paste the code over the default function UnresolvedCommand.<br/><br/>- The relevant lines here that have been added/modified from the original are 4-16.<br/><br/><pre><code>// TO DO&#58; Update names below, we don't need these two variables<br/>unresolvedobject = objectname<br/>unresolvedkey = varname<br/>lookhere = False<br/>if (game&#46;pov&#46;currentcommandpattern = lookat) {<br/>  candidateroomname = LCase(Replace(StringDictionaryItem(game&#46;pov&#46;currentcommandvarlist,&quot;object&quot;),&quot; &quot;,&quot;&quot;))<br/>  matchtoroomname = LCase(Replace(GetDisplayAlias(game&#46;pov&#46;parent),&quot; &quot;,&quot;&quot;))<br/>  if (Instr(matchtoroomname,candidateroomname) &gt; 0) {<br/>    lookhere = True<br/>  }<br/>}<br/>if (lookhere) {<br/>  msg (&quot;&quot;)<br/>  ShowRoomDescription<br/>}<br/>else if (HasString(game&#46;pov&#46;currentcommandpattern, &quot;unresolved&quot;)) {<br/>  if (ListCount(game&#46;pov&#46;currentcommandvarlist) &gt; 1) {<br/>    msg (game&#46;pov&#46;currentcommandpattern&#46;unresolved + &quot; (&quot; + unresolvedobject + &quot;)&quot;)<br/>  }<br/>  else {<br/>    msg (game&#46;pov&#46;currentcommandpattern&#46;unresolved)<br/>  }<br/>}<br/>else {<br/>  if (ListCount(game&#46;pov&#46;currentcommandvarlist) &gt; 1) {<br/>    msg (Template(&quot;UnresolvedObject&quot;) + &quot; (&quot; + unresolvedobject + &quot;)&quot;)<br/>  }<br/>  else {<br/>    msg (Template(&quot;UnresolvedObject&quot;))<br/>  }<br/>}<br/>game&#46;unresolvedcommand = game&#46;pov&#46;currentcommandpattern<br/>game&#46;unresolvedcommandvarlist = game&#46;pov&#46;currentcommandvarlist<br/>game&#46;unresolvedcommandkey = unresolvedkey</code></pre>",
      "PostDate": "2013-11-26T10:12:54+00:00",
      "LastEditDate": null
    }
  ]
}
