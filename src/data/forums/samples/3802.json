{
  "Topic": {
    "TopicId": "3802",
    "ForumId": "18",
    "Title": "Hint System",
    "LastUpdated": "2013-07-19T14:44:19+01:00",
    "ReplyCount": 2
  },
  "Posts": [
    {
      "PostId": "25438",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Tried to upload this but &quot;The upload was rejected because the uploaded file was identified as a possible attack vector.&quot; It is only short, so here is the code:\n\n[code:24tjbfrf]&lt;library&gt;\n  &lt;command name=&quot;Hint&quot;&gt;\n    &lt;pattern&gt;hint;clue&lt;/pattern&gt;\n    &lt;script&gt;\n      if (HasScript (game&#46;pov&#46;parent, &quot;hint&quot;)) {\n        game&#46;pov&#46;parent&#46;hintflag = false\n        do (game&#46;pov&#46;parent, &quot;hint&quot;)\n      }\n      if (not GetBoolean(game&#46;pov&#46;parent, &quot;hintflag&quot;)) {\n\t      sl = NewStringList ()\n\t      foreach (obj, GetDirectChildren (hints)) {\n\t        list add (sl, obj&#46;name)\n\t      }\n\t      sl = StringListSort (sl)\n\t      flag = false\n\t      foreach (s, sl) {\n\t        if (not flag) {\n\t          hint = GetObject (s)\n\t          if (not GetBoolean(hint, &quot;passed&quot;)) {\n\t            flag = true\n\t            hint&#46;done = true\n\t            if (HasScript (hint, &quot;look&quot;)) do (hint, &quot;look&quot;)\n\t            if (HasString (hint, &quot;look&quot;)) msg (hint&#46;look)\n\t          }\n\t        }\n\t      }\n\t      if (not flag) {\n\t        msg (&quot;Sorry, no more clues&quot;)\n\t      }\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;function name=&quot;HintCount&quot;&gt;\n    total = 0\n    passed = 0\n    used = 0\n    foreach (obj, GetDirectChildren (hints)) {\n      total = total + 1\n      if (GetBoolean(obj, &quot;passed&quot;)) passed = passed + 1\n      if (GetBoolean(obj, &quot;done&quot;)) used = used + 1\n    }\n    msg (&quot;You have used &quot; + used + &quot; hints out of &quot; + total + &quot; (&quot; + passed + &quot; stage-gates passed)&quot;)\n  &lt;/function&gt;\n&lt;/library&gt;[/code:24tjbfrf]\n\nETA: I have created a Wiki page with better instructions and a slightly improved script too, so recommend going there, rather than using this page:\n[url:24tjbfrf]http&#58;//quest5&#46;net/wiki/A_Hint_System[/url:24tjbfrf]",
      "EditableFormat": "bbcode",
      "HTML": "Tried to upload this but &quot;The upload was rejected because the uploaded file was identified as a possible attack vector.&quot; It is only short, so here is the code:<br/><br/><pre><code>&lt;library&gt;<br/>  &lt;command name=&quot;Hint&quot;&gt;<br/>    &lt;pattern&gt;hint;clue&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      if (HasScript (game&#46;pov&#46;parent, &quot;hint&quot;)) {<br/>        game&#46;pov&#46;parent&#46;hintflag = false<br/>        do (game&#46;pov&#46;parent, &quot;hint&quot;)<br/>      }<br/>      if (not GetBoolean(game&#46;pov&#46;parent, &quot;hintflag&quot;)) {<br/>\t      sl = NewStringList ()<br/>\t      foreach (obj, GetDirectChildren (hints)) {<br/>\t        list add (sl, obj&#46;name)<br/>\t      }<br/>\t      sl = StringListSort (sl)<br/>\t      flag = false<br/>\t      foreach (s, sl) {<br/>\t        if (not flag) {<br/>\t          hint = GetObject (s)<br/>\t          if (not GetBoolean(hint, &quot;passed&quot;)) {<br/>\t            flag = true<br/>\t            hint&#46;done = true<br/>\t            if (HasScript (hint, &quot;look&quot;)) do (hint, &quot;look&quot;)<br/>\t            if (HasString (hint, &quot;look&quot;)) msg (hint&#46;look)<br/>\t          }<br/>\t        }<br/>\t      }<br/>\t      if (not flag) {<br/>\t        msg (&quot;Sorry, no more clues&quot;)<br/>\t      }<br/>      }<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;function name=&quot;HintCount&quot;&gt;<br/>    total = 0<br/>    passed = 0<br/>    used = 0<br/>    foreach (obj, GetDirectChildren (hints)) {<br/>      total = total + 1<br/>      if (GetBoolean(obj, &quot;passed&quot;)) passed = passed + 1<br/>      if (GetBoolean(obj, &quot;done&quot;)) used = used + 1<br/>    }<br/>    msg (&quot;You have used &quot; + used + &quot; hints out of &quot; + total + &quot; (&quot; + passed + &quot; stage-gates passed)&quot;)<br/>  &lt;/function&gt;<br/>&lt;/library&gt;</code></pre><br/><br/>ETA: I have created a Wiki page with better instructions and a slightly improved script too, so recommend going there, rather than using this page:<br/><a href=\"http&#58;//quest5&#46;net/wiki/A_Hint_System\" rel=\"nofollow\">http&#58;//quest5&#46;net/wiki/A_Hint_System</a>",
      "PostDate": "2013-07-15T11:59:07+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25439",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Here is a demo, which is not considered an attack vector!\n\n[attachment=0:21jhep3g]<!-- ia0 -->HintDemo.aslx<!-- ia0 -->[/attachment:21jhep3g]\n\n\n[b:21jhep3g][size=150:21jhep3g]The Pixie Hint System[/size:21jhep3g][/b:21jhep3g]\n\nIf players are likely to get stuck in your game, a hint system is a good way to get them going again. A good hint system is context-sensitive (otherwise it is a walk-through), and that could be based on the location (if you are in room A, give hint X) or on the player's progress (if you have completed B, give hint y). This system is designed for the latter.\n\n[b:21jhep3g]To use[/b:21jhep3g]\n\n1. First, include the HintLib library\n2. Create an object called &quot;hints&quot;\n3. For each hint, create an object inside the &quot;hints&quot; object, and give it a &quot;look at&quot; description\n4. At each stage-gate, set the &quot;passed&quot; attribute of the appropriate hint to true.\n\nNote: Do not put anything else in the hints object - it will be taken as a hint\n\n\n[b:21jhep3g]Naming Hints[/b:21jhep3g]\n\nThe way you name hints is important, because they are sorted alphabetically - the order the player might need them must be arranged as Quest will sort them.\n\nIn the demo, I name hints according to the scheme hint010, hint020, hint030, etc. potentially all the way up to hint990. The advantage of this system is that when I subsequently decided to add another hint I could insert it into the sequence as hint035.\n\nIf your game naturally falls into sections, you might prefer a system that reflects that, eg 01sword010, 01sword020... 02princess010, 02princess020...\n\n\n[b:21jhep3g]Stage-gates?[/b:21jhep3g]\n\nSo what are stage-gates? A stage-gate is where the player goes from one part of the game, where one hint is relevant, to the next, where the next hint applies. Presumably that first hint indicates how to achieve that. It could be killing the goblin, getting to a certain room, unlocking a door, finding a vital item.\n\nIn the demo, the first stage-gate is going into the second room, the next is picking up the key, the third is unlocking the door and the last is going into the last room. This is to show hints in action; in a real game you would not have a hint for each and every step.\n\n\n[b:21jhep3g]Progressive hints[/b:21jhep3g]\n\nYou can set up a series of hints for one stage gate, so that each time the player types hint he gets a more obvious clue (pick up the key in the demo and type hint twice to see this in action). To set this up, you obviously need a hint object for each hint. Each of these hints except the last should have a &quot;look at&quot; script, rather than text, and in the script, as well as displaying a message, should set its &quot;passed&quot; value to true.\n\nHere is the code from the demo:\n\n[code:21jhep3g]    &lt;object name=&quot;hint030&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;look type=&quot;script&quot;&gt;\n        msg (&quot;Now you have the key, what can you do with it?&quot;)\n        this&#46;passed = true\n      &lt;/look&gt;\n    &lt;/object&gt;\n    &lt;object name=&quot;hint035&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;look&gt;Type UNLOCK to unlock the door&#46;&lt;/look&gt;\n    &lt;/object&gt;[/code:21jhep3g]\n\nIn addition, the stage-gate itself must set the &quot;passed&quot; value to true for [i:21jhep3g]all[/i:21jhep3g] the hints.\n\n[code:21jhep3g]        msg (&quot;You unlock the door&quot;)\n        hint030&#46;passed = true\n        hint035&#46;passed = true\n        exit_to_room3&#46;locked = false[/code:21jhep3g]",
      "EditableFormat": "bbcode",
      "HTML": "Here is a demo, which is not considered an attack vector!<br/><br/><div><a href=\"/forumattachments/664/HintDemo.aslx\">HintDemo.aslx</a></div><br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-size:150\">The Pixie Hint System</span></span><br/><br/>If players are likely to get stuck in your game, a hint system is a good way to get them going again. A good hint system is context-sensitive (otherwise it is a walk-through), and that could be based on the location (if you are in room A, give hint X) or on the player's progress (if you have completed B, give hint y). This system is designed for the latter.<br/><br/><span style=\"font-weight:bold;\">To use</span><br/><br/>1. First, include the HintLib library<br/>2. Create an object called &quot;hints&quot;<br/>3. For each hint, create an object inside the &quot;hints&quot; object, and give it a &quot;look at&quot; description<br/>4. At each stage-gate, set the &quot;passed&quot; attribute of the appropriate hint to true.<br/><br/>Note: Do not put anything else in the hints object - it will be taken as a hint<br/><br/><br/><span style=\"font-weight:bold;\">Naming Hints</span><br/><br/>The way you name hints is important, because they are sorted alphabetically - the order the player might need them must be arranged as Quest will sort them.<br/><br/>In the demo, I name hints according to the scheme hint010, hint020, hint030, etc. potentially all the way up to hint990. The advantage of this system is that when I subsequently decided to add another hint I could insert it into the sequence as hint035.<br/><br/>If your game naturally falls into sections, you might prefer a system that reflects that, eg 01sword010, 01sword020... 02princess010, 02princess020...<br/><br/><br/><span style=\"font-weight:bold;\">Stage-gates?</span><br/><br/>So what are stage-gates? A stage-gate is where the player goes from one part of the game, where one hint is relevant, to the next, where the next hint applies. Presumably that first hint indicates how to achieve that. It could be killing the goblin, getting to a certain room, unlocking a door, finding a vital item.<br/><br/>In the demo, the first stage-gate is going into the second room, the next is picking up the key, the third is unlocking the door and the last is going into the last room. This is to show hints in action; in a real game you would not have a hint for each and every step.<br/><br/><br/><span style=\"font-weight:bold;\">Progressive hints</span><br/><br/>You can set up a series of hints for one stage gate, so that each time the player types hint he gets a more obvious clue (pick up the key in the demo and type hint twice to see this in action). To set this up, you obviously need a hint object for each hint. Each of these hints except the last should have a &quot;look at&quot; script, rather than text, and in the script, as well as displaying a message, should set its &quot;passed&quot; value to true.<br/><br/>Here is the code from the demo:<br/><br/><pre><code>    &lt;object name=&quot;hint030&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;look type=&quot;script&quot;&gt;<br/>        msg (&quot;Now you have the key, what can you do with it?&quot;)<br/>        this&#46;passed = true<br/>      &lt;/look&gt;<br/>    &lt;/object&gt;<br/>    &lt;object name=&quot;hint035&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;look&gt;Type UNLOCK to unlock the door&#46;&lt;/look&gt;<br/>    &lt;/object&gt;</code></pre><br/><br/>In addition, the stage-gate itself must set the &quot;passed&quot; value to true for <span style=\"font-style:italic;\">all</span> the hints.<br/><br/><pre><code>        msg (&quot;You unlock the door&quot;)<br/>        hint030&#46;passed = true<br/>        hint035&#46;passed = true<br/>        exit_to_room3&#46;locked = false</code></pre>",
      "PostDate": "2013-07-15T12:00:39+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25495",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[b:1aapw2h6]Local Hints[/b:1aapw2h6]\n\nFrom version 2 you can have local hints. If a room has a script called &quot;hint&quot; this will be run. If the script sets the attribute hintflag on the room to true, then no other hints are given. Here is an example:\n\n[code:1aapw2h6]  &lt;object name=&quot;room4&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;hint type=&quot;script&quot;&gt;\n      if (exit_to_room3&#46;locked) {\n        msg (&quot;Try unlocking the door in room2&quot;)\n        this&#46;hintflag = true\n      }\n    &lt;/hint&gt;\n    &lt;exit alias=&quot;west&quot; to=&quot;room&quot;&gt;\n      &lt;inherit name=&quot;westdirection&quot; /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;[/code:1aapw2h6]\n\nThe script tests a condition. If the condition is met, a hint is given, and the hintflag set. If te condition is not met, the flag is not set and the standard hint system comes into play.\n\nThis would be useful in rooms off the main quest. Player can get a hint to solve the puzzle when in the room. However, if that puzzle is solved, the player gets a hint towards the main quest as usual.",
      "EditableFormat": "bbcode",
      "HTML": "<span style=\"font-weight:bold;\">Local Hints</span><br/><br/>From version 2 you can have local hints. If a room has a script called &quot;hint&quot; this will be run. If the script sets the attribute hintflag on the room to true, then no other hints are given. Here is an example:<br/><br/><pre><code>  &lt;object name=&quot;room4&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;hint type=&quot;script&quot;&gt;<br/>      if (exit_to_room3&#46;locked) {<br/>        msg (&quot;Try unlocking the door in room2&quot;)<br/>        this&#46;hintflag = true<br/>      }<br/>    &lt;/hint&gt;<br/>    &lt;exit alias=&quot;west&quot; to=&quot;room&quot;&gt;<br/>      &lt;inherit name=&quot;westdirection&quot; /&gt;<br/>    &lt;/exit&gt;<br/>  &lt;/object&gt;</code></pre><br/><br/>The script tests a condition. If the condition is met, a hint is given, and the hintflag set. If te condition is not met, the flag is not set and the standard hint system comes into play.<br/><br/>This would be useful in rooms off the main quest. Player can get a hint to solve the puzzle when in the room. However, if that puzzle is solved, the player gets a hint towards the main quest as usual.",
      "PostDate": "2013-07-19T14:44:19+01:00",
      "LastEditDate": null
    }
  ]
}