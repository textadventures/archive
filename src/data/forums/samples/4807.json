{
  "Topic": {
    "TopicId": "4807",
    "ForumId": "18",
    "Title": "How to make descriptions that change",
    "LastUpdated": "2014-11-24T21:47:34+00:00",
    "ReplyCount": 5
  },
  "Posts": [
    {
      "PostId": "31887",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Note: [i:88zg2goq]In Quest, everything is an object, even rooms. To try to avoid confusion, I will use &quot;item&quot; to refer to things the player can manipulate, &quot;room&quot; to refer to rooms (obviously) and &quot;object&quot; to refer to everything, including the game and the player![/i:88zg2goq]\n\nOften you want the description of an object to change, depending on what the player has done. Perhaps she has blown a hole in the wall, and the room description needs to reflect that. Perhaps she has turning on the bizarre machine, and the item description needs to mention that.\n\n\n[b:88zg2goq][i:88zg2goq]Step 1[/i:88zg2goq][/b:88zg2goq]\n\nFirst you need a Boolean attribute, also called a flag, which will be used to remember the state of the room or item. Attributes are attached to objects, and it does not matter what object you pick. It could be the game object, it could be the player object, it could be some other object. Generally, it is easiest to set an attribute on the object in question (the room or item). Whatever you choose, the procedure is more or less the same.\n\nGo to the Attributes tab of the object, and look at the lower section, also called Attributes. Click on Add, and type a suitable name. If this is a room or item, &quot;flag&quot; is probably good enough, if this is the game or player object, choose something more descriptive so you know what it is for in three months time.\n\nRight at the bottom, click on the button that says &quot;String&quot;, and set it to &quot;Boolean&quot; instead.\n\nA Boolean, by the way, is an attribute that is either True or False.\n\n\n[b:88zg2goq][i:88zg2goq]Step 2[/i:88zg2goq][/b:88zg2goq]\n\nFor now, I am assuming we have a Boolean flag called &quot;flag&quot;, on the object itself.\n\nGo to the description for the item (on the Setup tab) or room (Room tab). If you have already typed something there, copy-and-paste it somewhere first. Click on &quot;Text&quot;, and select instead &quot;Run script&quot;.\n\nClick the &quot;Add new script&quot; button, and select &quot;If...&quot;, and then click the &quot;Add&quot; button. A box with lots of stuff will appear within the object description area, with &quot;If: expression&quot; at the top. In the text box to the right of that type &quot;this.flag&quot; (no quotes).\n\nClick &quot;Add new script&quot;, select &quot;Print a message&quot;, and in the new text box type in the description the player should see after the flag has been set.\n\nClick &quot;Add Else&quot;, then click the new &quot;Add new script&quot; button, and select &quot;Print a message&quot; again. In the new text box type in the description the player shoud see before the flag has been set.\n\nIt should look like this:\n\n[attachment=1:88zg2goq]<!-- ia1 -->desc1.png<!-- ia1 -->[/attachment:88zg2goq]\n\nSo what does it mean?\n\nThe expression is what Quest will use to decide what to do. Quest has a special word, &quot;this&quot;, that refers to the current object (the object that the script belongs to), in this case your room or object. It does not matter what you called the object, &quot;this&quot; will refer to it. The dot indicates that what follows will be an attribute, and &quot;flag&quot; is just the name of the attribute we set up in step 1.\n\nSo if the flag is set to True, the top section of the box is done, and if it is set to False, the bottom section (the &quot;Else&quot; section) is done. And all each section does is print a message.\n\nWhile we are here, look just under &quot;Run script&quot;, and click on the seventh icon, &quot;Code view&quot;. You will see this:\n\n[code:88zg2goq]if (this&#46;flag) {\n  msg (&quot;A big room, with wood-panelled walls&#46; There is a large hole in the west wall, where the wood is blackeden&#46;&quot;)\n}\nelse {\n  msg (&quot;A big room, with wood-panelled walls&#46;&quot;)\n}[/code:88zg2goq]\n\nIt is exactly same set of instructions, just displayed differently. If the flag is True do the first bit, if it is False, do the other bit. It is useful to get familiar withy this code view, as it is much easier to use on the forums.\n\n\n[b:88zg2goq][i:88zg2goq]Step 3[/i:88zg2goq][/b:88zg2goq]\n\nThe final set is to have something trigger the change. You are kind of on your own here as there are so many ways this might happen, but I will go through an example.\n\nLet us suppose breaking a teapot causes something to explode in a room called &quot;room&quot;. On the Verb tab of the teapot, &quot;Add&quot; a new verb, and change &quot;Print a message&quot; to &quot;Run a script&quot;. From the &quot;Add new script&quot; menu, select &quot;Set object flag&quot;, set the object to be the room (because that is trhe object with the flag attribute), and the flag name to &quot;flag&quot;. You will probably want to print a message too.\n\n[attachment=0:88zg2goq]<!-- ia0 -->desc2.png<!-- ia0 -->[/attachment:88zg2goq]\n\nFor reference, the code view looks like this:\n\n[code:88zg2goq]SetObjectFlagOn (room, &quot;flag&quot;)\nmsg (&quot;As the teapot breaks, the chamberpot suddenly explodes in a suicidal act of sympathy&#46;&quot;)[/code:88zg2goq]\n\nAnd if I was typing it in,I would write this:\n\n[code:88zg2goq]room&#46;flag = true\nmsg (&quot;As the teapot breaks, the chamberpot suddenly explodes in a suicidal act of sympathy&#46;&quot;)[/code:88zg2goq]\n\nIt is all the same, the first line is setting the flag to have a have of true.",
      "EditableFormat": "bbcode",
      "HTML": "Note: <span style=\"font-style:italic;\">In Quest, everything is an object, even rooms. To try to avoid confusion, I will use &quot;item&quot; to refer to things the player can manipulate, &quot;room&quot; to refer to rooms (obviously) and &quot;object&quot; to refer to everything, including the game and the player!</span><br/><br/>Often you want the description of an object to change, depending on what the player has done. Perhaps she has blown a hole in the wall, and the room description needs to reflect that. Perhaps she has turning on the bizarre machine, and the item description needs to mention that.<br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Step 1</span></span><br/><br/>First you need a Boolean attribute, also called a flag, which will be used to remember the state of the room or item. Attributes are attached to objects, and it does not matter what object you pick. It could be the game object, it could be the player object, it could be some other object. Generally, it is easiest to set an attribute on the object in question (the room or item). Whatever you choose, the procedure is more or less the same.<br/><br/>Go to the Attributes tab of the object, and look at the lower section, also called Attributes. Click on Add, and type a suitable name. If this is a room or item, &quot;flag&quot; is probably good enough, if this is the game or player object, choose something more descriptive so you know what it is for in three months time.<br/><br/>Right at the bottom, click on the button that says &quot;String&quot;, and set it to &quot;Boolean&quot; instead.<br/><br/>A Boolean, by the way, is an attribute that is either True or False.<br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Step 2</span></span><br/><br/>For now, I am assuming we have a Boolean flag called &quot;flag&quot;, on the object itself.<br/><br/>Go to the description for the item (on the Setup tab) or room (Room tab). If you have already typed something there, copy-and-paste it somewhere first. Click on &quot;Text&quot;, and select instead &quot;Run script&quot;.<br/><br/>Click the &quot;Add new script&quot; button, and select &quot;If...&quot;, and then click the &quot;Add&quot; button. A box with lots of stuff will appear within the object description area, with &quot;If: expression&quot; at the top. In the text box to the right of that type &quot;this.flag&quot; (no quotes).<br/><br/>Click &quot;Add new script&quot;, select &quot;Print a message&quot;, and in the new text box type in the description the player should see after the flag has been set.<br/><br/>Click &quot;Add Else&quot;, then click the new &quot;Add new script&quot; button, and select &quot;Print a message&quot; again. In the new text box type in the description the player shoud see before the flag has been set.<br/><br/>It should look like this:<br/><br/><div><img src=\"/forumattachments/1073/desc1.png\" alt=\"desc1.png\" /></div><br/><br/>So what does it mean?<br/><br/>The expression is what Quest will use to decide what to do. Quest has a special word, &quot;this&quot;, that refers to the current object (the object that the script belongs to), in this case your room or object. It does not matter what you called the object, &quot;this&quot; will refer to it. The dot indicates that what follows will be an attribute, and &quot;flag&quot; is just the name of the attribute we set up in step 1.<br/><br/>So if the flag is set to True, the top section of the box is done, and if it is set to False, the bottom section (the &quot;Else&quot; section) is done. And all each section does is print a message.<br/><br/>While we are here, look just under &quot;Run script&quot;, and click on the seventh icon, &quot;Code view&quot;. You will see this:<br/><br/><pre><code>if (this&#46;flag) {<br/>  msg (&quot;A big room, with wood-panelled walls&#46; There is a large hole in the west wall, where the wood is blackeden&#46;&quot;)<br/>}<br/>else {<br/>  msg (&quot;A big room, with wood-panelled walls&#46;&quot;)<br/>}</code></pre><br/><br/>It is exactly same set of instructions, just displayed differently. If the flag is True do the first bit, if it is False, do the other bit. It is useful to get familiar withy this code view, as it is much easier to use on the forums.<br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Step 3</span></span><br/><br/>The final set is to have something trigger the change. You are kind of on your own here as there are so many ways this might happen, but I will go through an example.<br/><br/>Let us suppose breaking a teapot causes something to explode in a room called &quot;room&quot;. On the Verb tab of the teapot, &quot;Add&quot; a new verb, and change &quot;Print a message&quot; to &quot;Run a script&quot;. From the &quot;Add new script&quot; menu, select &quot;Set object flag&quot;, set the object to be the room (because that is trhe object with the flag attribute), and the flag name to &quot;flag&quot;. You will probably want to print a message too.<br/><br/><div><img src=\"/forumattachments/1074/desc2.png\" alt=\"desc2.png\" /></div><br/><br/>For reference, the code view looks like this:<br/><br/><pre><code>SetObjectFlagOn (room, &quot;flag&quot;)<br/>msg (&quot;As the teapot breaks, the chamberpot suddenly explodes in a suicidal act of sympathy&#46;&quot;)</code></pre><br/><br/>And if I was typing it in,I would write this:<br/><br/><pre><code>room&#46;flag = true<br/>msg (&quot;As the teapot breaks, the chamberpot suddenly explodes in a suicidal act of sympathy&#46;&quot;)</code></pre><br/><br/>It is all the same, the first line is setting the flag to have a have of true.",
      "PostDate": "2014-11-24T09:23:15+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "31888",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[b:3blud2ko][i:3blud2ko]I want one flag to affect several descriptions[/i:3blud2ko][/b:3blud2ko]\n\nThis is easy, you just select one object as the master object, and have all the other objects check the flag on that.\n\nFor example, a table in the room might have a description like this (note that &quot;this&quot; in the first line has been replaced by &quot;room&quot;):\n\n[code:3blud2ko]if (room&#46;flag) {\n  msg (&quot;A mahogany table, now showing some scorching and soot&#46;&quot;)\n}\nelse {\n  msg (&quot;A mahogany table in excellent condition&#46;&quot;)\n}[/code:3blud2ko]\n\n\n\n\n[b:3blud2ko][i:3blud2ko]I want several different states[/i:3blud2ko][/b:3blud2ko]\n\nLet us say you want your external locations to change depending on the time of day and weather. In this case you are prbably better setting an attribute on the game object. You do this just the same as before, but give it a meaningful name, let us say &quot;external_state&quot;, and set it to be an integer, rather than a Boolean. It will default to zero, which is fine.\n\nThis attribute will track the state of the game, so a value of 0 might indicate that it is sunny, 1 could be dusk and 3 could be nighttime (4 could be thunderstorm, etc.).\n\nNow go to your room description, and change &quot;Text&quot; to &quot;Run script&quot;. This time, select &quot;Switch...&quot; from the &quot;add new script&quot; menu. In the switch text box, type &quot;game.external_state&quot; (no quotes).\n\nFor each possibility, you need to click on the Add button, type in a number for the key, then click Add new script, select &quot;Print a message&quot;, and type in the room description for that state.\n\n[attachment=1:3blud2ko]<!-- ia1 -->desc3.png<!-- ia1 -->[/attachment:3blud2ko]\n\nHere is the code view:\n\n[code:3blud2ko]switch (game&#46;external_state) {\n  case (0) {\n    msg (&quot;The path looks pretty in the sunshine&#46;&quot;)\n  }\n  case (1) {\n    msg (&quot;The path stetched west towards the setting sun&#46;&quot;)\n  }\n  case (3) {\n    msg (&quot;There was something spooky about the path now it was night time,&quot;)\n  }\n}[/code:3blud2ko]\n\nNow you need some triggers. Perhaps as the player gets to a certain location, the game state is updated, and time moves on. The possibilities are endless, but here, briefly, is one way:\n\n[attachment=0:3blud2ko]<!-- ia0 -->desc4.png<!-- ia0 -->[/attachment:3blud2ko]\n\nCode view:\n\n[code:3blud2ko]game&#46;external_state = 1[/code:3blud2ko]",
      "EditableFormat": "bbcode",
      "HTML": "<span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">I want one flag to affect several descriptions</span></span><br/><br/>This is easy, you just select one object as the master object, and have all the other objects check the flag on that.<br/><br/>For example, a table in the room might have a description like this (note that &quot;this&quot; in the first line has been replaced by &quot;room&quot;):<br/><br/><pre><code>if (room&#46;flag) {<br/>  msg (&quot;A mahogany table, now showing some scorching and soot&#46;&quot;)<br/>}<br/>else {<br/>  msg (&quot;A mahogany table in excellent condition&#46;&quot;)<br/>}</code></pre><br/><br/><br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">I want several different states</span></span><br/><br/>Let us say you want your external locations to change depending on the time of day and weather. In this case you are prbably better setting an attribute on the game object. You do this just the same as before, but give it a meaningful name, let us say &quot;external_state&quot;, and set it to be an integer, rather than a Boolean. It will default to zero, which is fine.<br/><br/>This attribute will track the state of the game, so a value of 0 might indicate that it is sunny, 1 could be dusk and 3 could be nighttime (4 could be thunderstorm, etc.).<br/><br/>Now go to your room description, and change &quot;Text&quot; to &quot;Run script&quot;. This time, select &quot;Switch...&quot; from the &quot;add new script&quot; menu. In the switch text box, type &quot;game.external_state&quot; (no quotes).<br/><br/>For each possibility, you need to click on the Add button, type in a number for the key, then click Add new script, select &quot;Print a message&quot;, and type in the room description for that state.<br/><br/><div><img src=\"/forumattachments/1076/desc3.png\" alt=\"desc3.png\" /></div><br/><br/>Here is the code view:<br/><br/><pre><code>switch (game&#46;external_state) {<br/>  case (0) {<br/>    msg (&quot;The path looks pretty in the sunshine&#46;&quot;)<br/>  }<br/>  case (1) {<br/>    msg (&quot;The path stetched west towards the setting sun&#46;&quot;)<br/>  }<br/>  case (3) {<br/>    msg (&quot;There was something spooky about the path now it was night time,&quot;)<br/>  }<br/>}</code></pre><br/><br/>Now you need some triggers. Perhaps as the player gets to a certain location, the game state is updated, and time moves on. The possibilities are endless, but here, briefly, is one way:<br/><br/><div><img src=\"/forumattachments/1077/desc4.png\" alt=\"desc4.png\" /></div><br/><br/>Code view:<br/><br/><pre><code>game&#46;external_state = 1</code></pre>",
      "PostDate": "2014-11-24T09:25:21+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "31891",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "You can also use {if:} conditionals in the text processor if you don't want to write the conditional code in script.",
      "EditableFormat": "bbcode",
      "HTML": "You can also use {if:} conditionals in the text processor if you don't want to write the conditional code in script.",
      "PostDate": "2014-11-24T12:33:22+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "31899",
      "UserId": 0,
      "Username": "Marzipan",
      "UserAvatar": null,
      "UserGravatar": "96db8d4d178365a7065b1872e874bc83",
      "EditableText": "I gushed about this already in the other thread but just wanted to say thanks again. Though I think I'm learning more than ever now that I just can't wrap my head around some of this stuff, I was basically approaching it completely backwards...the little I did pick up about variables and things on another site I think I'd better unlearn ASAP. \n\nAlso I'm curious now if there's a game on the site that's made good use of your 'several different states' example, having rooms change based on weather or other factors would be one way to really draw a player in.",
      "EditableFormat": "bbcode",
      "HTML": "I gushed about this already in the other thread but just wanted to say thanks again. Though I think I'm learning more than ever now that I just can't wrap my head around some of this stuff, I was basically approaching it completely backwards...the little I did pick up about variables and things on another site I think I'd better unlearn ASAP. <br/><br/>Also I'm curious now if there's a game on the site that's made good use of your 'several different states' example, having rooms change based on weather or other factors would be one way to really draw a player in.",
      "PostDate": "2014-11-24T16:00:49+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "31903",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "90% of everything that you want to do in your games, is done with 'checks' (the 'if' Script) and 'indicators' (the 'set a variable or attribute' Script; aka setting~altering Attributes).\n\n(I know this is code, well pseudo-code, but just see if the logic makes sense to you)\n\nSetting and~or Altering an Attribute: Object_name.Attribute_name = Value_or_Expression\n\nExamples\n\nexamples of simple '=Value' Attributes:\n\nString Attribute: player.haircolor = &quot;black&quot;\nString Attribute: player.life = &quot;999&quot;\nInteger Attribute: player.life = 999\nDouble (Float;Floating Point) Attribute: player.damage = 58.194\nBoolean (a true~false Flag) Attribute: orc.dead = false\nBoolean Attribute: player.flying = false\nObject Attribute: player.head = helmet\n\nexample of a simple '=Expression', using a Stringlist Attribute:\n\nStringlist Attribute: player.favorite_colors = split (&quot;black;red&quot;, &quot;;&quot;)\n\nexample of a complex '=Expression' Integer Atrtibute:\n\nplayer.damage = player.weapon.damage + player.weapon.damage * player.strength / 100 - orc.armor.defense - orc.armor.defense * orc.endurance / 100\n\nor, in the GUI~Editor, JUST TO SET 'INITIALLY (at~for game start)' ONLY:\n\n'whatever' (Object) -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt; (see below\n\n(Object Name: player)\n\nAttribute Name: strength\nAttribute Type: int (integer)\nAttribute Value: 100\n\nAttribute Name: condition (or statuseffect)\nAttribute Type: string\nAttribute Value: normal (or 'poisoned' or 'silenced' or 'confused' or 'petrified' or 'dead' or 'paralyzed' or 'asleep' or etc etc etc)\n\nAttribute Name: head\nAttribute Type: object\nAttribute Value: helmet (an Object in your game)\n\nAttribute Name: flying\nAttribute Type: boolean (a True~false Flag)\nAttribute Value: false\n\n-------\n\nObject_name.Attribute_name = Value_or_Expression\n\nif (Object_name.Attribute_name = Value_or_Expression) {\n-&gt; msg (&quot;1&quot;)\n} else if (Object_name.Attribute_name = Value_or_Expression) {\n-&gt; msg (&quot;2&quot;)\n} else {\n-&gt; msg (&quot;3&quot;)\n}\n\nexamples:\n\nplayer.strength = GetRandomInt (0,2)\n\nif (player.strength = 0) {\n-&gt; msg (&quot;You are weak in strength.&quot;)\n} else if (player.strength = 1) {\n-&gt; msg (&quot;You are average in strength.&quot;)\n} else {\n-&gt; msg (&quot;You're strong in strength.&quot;)\n}\n\n---\n\norc.dead = false\n\nif (orc.dead = true) {\n-&gt; msg (&quot;The orc is already dead, silly.&quot;)\n} else if (orc.dead = false) {\n-&gt; msg (&quot;You attack and kill the orc.&quot;)\n-&gt; orc.dead = true\n}\n\n----\n\nplayer.cash = 0\nplayer.life = 999\nplayer.damage = 100\n\norc.dead = false\norc.cash = 100\norc.life = 500\norc.damage = 50\n\nif (orc.dead = true) {\n-&gt; if (orc.cash &gt; 0) {\n-&gt;-&gt; msg (&quot;The orc is dead, you loot its corpse of cash.&quot;)\n-&gt;-&gt; player.cash = player.cash + orc.cash\n-&gt;-&gt; orc.cash = 0\n-&gt; } else {\n-&gt;-&gt; msg (&quot;The orc is dead, and you've already looted its corpse, silly.&quot;)\n-&gt; }\n} else if (orc.dead = false) {\n-&gt; msg (&quot;You attack the orc.&quot;)\n-&gt; orc.life = orc.life - player.damage\n-&gt; if (orc.life &lt;= 0) {\n-&gt;-&gt; msg (&quot;You killed the orc.&quot;)\n-&gt;-&gt; orc.dead = true\n-&gt; } else {\n-&gt;-&gt; msg (&quot;The orc attacks you.&quot;)\n-&gt;-&gt; player.life = player.life - orc.damage\n-&gt;-&gt; if (player.life &lt;= 0) {\n-&gt;-&gt;-&gt; msg (&quot;The orc has killed you.&quot;)\n-&gt;-&gt;-&gt; msg (&quot;GAME OVER&quot;)\n-&gt;-&gt;-&gt; finish\n-&gt;-&gt; }\n-&gt; }\n}\n\n-----\n\nroom.description_flag = 0\nroom2.description_flag = 0\n\nroom.description_flag = GetRandomInt (0,2)\nroom2.description_flag = GetRandomInt (0,4)\n\n'room'  Description (run as script):\nif (room.description_flag = 0) {\n-&gt; msg (&quot;sunny&quot;)\n} else if (room.description_flag = 1) {\n-&gt; msg (&quot;cloudy&quot;)\n} else {\n-&gt; msg (&quot;dark: night time&quot;)\n}\n\n'room2' Description (run as script):\nif (room2.description_flag = 0)\n-&gt; msg (&quot;forest&quot;)\n} else if (room.description_flag = 1) {\n-&gt; msg (&quot;dungeon&quot;)\n} else if (room2.description_flag = 2) {\n-&gt; msg (&quot;cave&quot;)\n} else if (room2.description_flag = 3) {\n-&gt; msg (&quot;town&quot;)\n} else {\n-&gt; msg (&quot;inside a shop&quot;)\n}",
      "EditableFormat": "bbcode",
      "HTML": "90% of everything that you want to do in your games, is done with 'checks' (the 'if' Script) and 'indicators' (the 'set a variable or attribute' Script; aka setting~altering Attributes).<br/><br/>(I know this is code, well pseudo-code, but just see if the logic makes sense to you)<br/><br/>Setting and~or Altering an Attribute: Object_name.Attribute_name = Value_or_Expression<br/><br/>Examples<br/><br/>examples of simple '=Value' Attributes:<br/><br/>String Attribute: player.haircolor = &quot;black&quot;<br/>String Attribute: player.life = &quot;999&quot;<br/>Integer Attribute: player.life = 999<br/>Double (Float;Floating Point) Attribute: player.damage = 58.194<br/>Boolean (a true~false Flag) Attribute: orc.dead = false<br/>Boolean Attribute: player.flying = false<br/>Object Attribute: player.head = helmet<br/><br/>example of a simple '=Expression', using a Stringlist Attribute:<br/><br/>Stringlist Attribute: player.favorite_colors = split (&quot;black;red&quot;, &quot;;&quot;)<br/><br/>example of a complex '=Expression' Integer Atrtibute:<br/><br/>player.damage = player.weapon.damage + player.weapon.damage * player.strength / 100 - orc.armor.defense - orc.armor.defense * orc.endurance / 100<br/><br/>or, in the GUI~Editor, JUST TO SET 'INITIALLY (at~for game start)' ONLY:<br/><br/>'whatever' (Object) -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt; (see below<br/><br/>(Object Name: player)<br/><br/>Attribute Name: strength<br/>Attribute Type: int (integer)<br/>Attribute Value: 100<br/><br/>Attribute Name: condition (or statuseffect)<br/>Attribute Type: string<br/>Attribute Value: normal (or 'poisoned' or 'silenced' or 'confused' or 'petrified' or 'dead' or 'paralyzed' or 'asleep' or etc etc etc)<br/><br/>Attribute Name: head<br/>Attribute Type: object<br/>Attribute Value: helmet (an Object in your game)<br/><br/>Attribute Name: flying<br/>Attribute Type: boolean (a True~false Flag)<br/>Attribute Value: false<br/><br/>-------<br/><br/>Object_name.Attribute_name = Value_or_Expression<br/><br/>if (Object_name.Attribute_name = Value_or_Expression) {<br/>-&gt; msg (&quot;1&quot;)<br/>} else if (Object_name.Attribute_name = Value_or_Expression) {<br/>-&gt; msg (&quot;2&quot;)<br/>} else {<br/>-&gt; msg (&quot;3&quot;)<br/>}<br/><br/>examples:<br/><br/>player.strength = GetRandomInt (0,2)<br/><br/>if (player.strength = 0) {<br/>-&gt; msg (&quot;You are weak in strength.&quot;)<br/>} else if (player.strength = 1) {<br/>-&gt; msg (&quot;You are average in strength.&quot;)<br/>} else {<br/>-&gt; msg (&quot;You're strong in strength.&quot;)<br/>}<br/><br/>---<br/><br/>orc.dead = false<br/><br/>if (orc.dead = true) {<br/>-&gt; msg (&quot;The orc is already dead, silly.&quot;)<br/>} else if (orc.dead = false) {<br/>-&gt; msg (&quot;You attack and kill the orc.&quot;)<br/>-&gt; orc.dead = true<br/>}<br/><br/>----<br/><br/>player.cash = 0<br/>player.life = 999<br/>player.damage = 100<br/><br/>orc.dead = false<br/>orc.cash = 100<br/>orc.life = 500<br/>orc.damage = 50<br/><br/>if (orc.dead = true) {<br/>-&gt; if (orc.cash &gt; 0) {<br/>-&gt;-&gt; msg (&quot;The orc is dead, you loot its corpse of cash.&quot;)<br/>-&gt;-&gt; player.cash = player.cash + orc.cash<br/>-&gt;-&gt; orc.cash = 0<br/>-&gt; } else {<br/>-&gt;-&gt; msg (&quot;The orc is dead, and you've already looted its corpse, silly.&quot;)<br/>-&gt; }<br/>} else if (orc.dead = false) {<br/>-&gt; msg (&quot;You attack the orc.&quot;)<br/>-&gt; orc.life = orc.life - player.damage<br/>-&gt; if (orc.life &lt;= 0) {<br/>-&gt;-&gt; msg (&quot;You killed the orc.&quot;)<br/>-&gt;-&gt; orc.dead = true<br/>-&gt; } else {<br/>-&gt;-&gt; msg (&quot;The orc attacks you.&quot;)<br/>-&gt;-&gt; player.life = player.life - orc.damage<br/>-&gt;-&gt; if (player.life &lt;= 0) {<br/>-&gt;-&gt;-&gt; msg (&quot;The orc has killed you.&quot;)<br/>-&gt;-&gt;-&gt; msg (&quot;GAME OVER&quot;)<br/>-&gt;-&gt;-&gt; finish<br/>-&gt;-&gt; }<br/>-&gt; }<br/>}<br/><br/>-----<br/><br/>room.description_flag = 0<br/>room2.description_flag = 0<br/><br/>room.description_flag = GetRandomInt (0,2)<br/>room2.description_flag = GetRandomInt (0,4)<br/><br/>'room'  Description (run as script):<br/>if (room.description_flag = 0) {<br/>-&gt; msg (&quot;sunny&quot;)<br/>} else if (room.description_flag = 1) {<br/>-&gt; msg (&quot;cloudy&quot;)<br/>} else {<br/>-&gt; msg (&quot;dark: night time&quot;)<br/>}<br/><br/>'room2' Description (run as script):<br/>if (room2.description_flag = 0)<br/>-&gt; msg (&quot;forest&quot;)<br/>} else if (room.description_flag = 1) {<br/>-&gt; msg (&quot;dungeon&quot;)<br/>} else if (room2.description_flag = 2) {<br/>-&gt; msg (&quot;cave&quot;)<br/>} else if (room2.description_flag = 3) {<br/>-&gt; msg (&quot;town&quot;)<br/>} else {<br/>-&gt; msg (&quot;inside a shop&quot;)<br/>",
      "PostDate": "2014-11-24T21:12:28+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "31904",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "also, there's a bit of confusion of terms in~with quest:\n\nVARIABLES:\n-&gt; Variables (local, not 'attached' to Objects, so they're not 'saved'~stored, and thus can't be 'loaded'~used within another different script block)\n-&gt;-&gt; Examples:\n-&gt;-&gt; value = (whatever)\n-&gt;-&gt; result = (whatever)\n-&gt;-&gt; y = (whatever)\n-&gt;-&gt; handled = false // (or: true)\n-&gt;-&gt; you_go_first = true // (or: false)\n-&gt; Attributes (global, are 'attached' to Objects, so as long as the Object exists, they're 'saved'~stored, and thus can be 'loaded'~used within another different script block)\n-&gt;-&gt; Examples:\n-&gt;-&gt; player.strength = 100\n-&gt;-&gt; orc.strength = 10\n-&gt;-&gt; game.event_flag = 0\n-&gt;-&gt; game.turns = 0\n-&gt;-&gt; table.material = &quot;wood&quot;\n-&gt;-&gt; game.player_flying = false\n-&gt;-&gt; game.player_strength = 100\n-&gt;-&gt; game.orc_strength = 10\n\nthe 'NAME' String Attribute is the 'ID' Attribute for quest, so the 'NAMES' must be unique\n\n-----------\n\nELEMENTS (the 'things' in quest):\n\nthey all have the 'tag blocks' in code, an example (horizontally shown): &lt;xxx xxx=&quot;xxx&quot;&gt;xxx&lt;/xxx&gt;\n\nObjects (holds other Objects and~or Attributes) (the special Game Object, Player Objects, Room Objects, Other-Object Objects, and for Gamebook quest: Pages)\nVerbs (local Commands: for that specific Object only. Uses the hyperlinks or Object's buttons)\nCommands (Global Commands: uses input by the person playing the game)\nFunctions (holds scripts)\nAttributes (but they must be within another different ELEMENT)\nObject Types (a group: holds Attributes) (confusingly shortened to 'TYPES', as don't confuse this with the use of 'type' in the tags, for example: &lt;attr name=&quot;strength&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt; )\nTurnscripts (a Function, but also able to hold Attributes, and internally coded to use a 'turns' feature)\nTimers (a Function, but also able to hold Attributes, and internally coded to use 'tick~clock' time)\nExits (connectors for the Room Objects)\n\nAttributes (data ~ Game Mechanics):\n\nString\nInteger (int)\nDouble (Float; Floating Point)\nBoolean (a true~false Flag)\nObject\nScript\nList (Stringlist or Objectlist)\nDictionaries (arrays) (Stringdictionary, Objectdictionary, or Scriptdictionary)\n\nScripting (actions~events):\n\nVerbs (Objects' Script Type Attributes)\nCommands\nFunctions\nTimers\nTurnscripts\nObject Types (Script Type Attributes)\n\n-----------\n\nand a lot more stuff too... but I'm tired now, lol.",
      "EditableFormat": "bbcode",
      "HTML": "also, there's a bit of confusion of terms in~with quest:<br/><br/>VARIABLES:<br/>-&gt; Variables (local, not 'attached' to Objects, so they're not 'saved'~stored, and thus can't be 'loaded'~used within another different script block)<br/>-&gt;-&gt; Examples:<br/>-&gt;-&gt; value = (whatever)<br/>-&gt;-&gt; result = (whatever)<br/>-&gt;-&gt; y = (whatever)<br/>-&gt;-&gt; handled = false // (or: true)<br/>-&gt;-&gt; you_go_first = true // (or: false)<br/>-&gt; Attributes (global, are 'attached' to Objects, so as long as the Object exists, they're 'saved'~stored, and thus can be 'loaded'~used within another different script block)<br/>-&gt;-&gt; Examples:<br/>-&gt;-&gt; player.strength = 100<br/>-&gt;-&gt; orc.strength = 10<br/>-&gt;-&gt; game.event_flag = 0<br/>-&gt;-&gt; game.turns = 0<br/>-&gt;-&gt; table.material = &quot;wood&quot;<br/>-&gt;-&gt; game.player_flying = false<br/>-&gt;-&gt; game.player_strength = 100<br/>-&gt;-&gt; game.orc_strength = 10<br/><br/>the 'NAME' String Attribute is the 'ID' Attribute for quest, so the 'NAMES' must be unique<br/><br/>-----------<br/><br/>ELEMENTS (the 'things' in quest):<br/><br/>they all have the 'tag blocks' in code, an example (horizontally shown): &lt;xxx xxx=&quot;xxx&quot;&gt;xxx&lt;/xxx&gt;<br/><br/>Objects (holds other Objects and~or Attributes) (the special Game Object, Player Objects, Room Objects, Other-Object Objects, and for Gamebook quest: Pages)<br/>Verbs (local Commands: for that specific Object only. Uses the hyperlinks or Object's buttons)<br/>Commands (Global Commands: uses input by the person playing the game)<br/>Functions (holds scripts)<br/>Attributes (but they must be within another different ELEMENT)<br/>Object Types (a group: holds Attributes) (confusingly shortened to 'TYPES', as don't confuse this with the use of 'type' in the tags, for example: &lt;attr name=&quot;strength&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt; )<br/>Turnscripts (a Function, but also able to hold Attributes, and internally coded to use a 'turns' feature)<br/>Timers (a Function, but also able to hold Attributes, and internally coded to use 'tick~clock' time)<br/>Exits (connectors for the Room Objects)<br/><br/>Attributes (data ~ Game Mechanics):<br/><br/>String<br/>Integer (int)<br/>Double (Float; Floating Point)<br/>Boolean (a true~false Flag)<br/>Object<br/>Script<br/>List (Stringlist or Objectlist)<br/>Dictionaries (arrays) (Stringdictionary, Objectdictionary, or Scriptdictionary)<br/><br/>Scripting (actions~events):<br/><br/>Verbs (Objects' Script Type Attributes)<br/>Commands<br/>Functions<br/>Timers<br/>Turnscripts<br/>Object Types (Script Type Attributes)<br/><br/>-----------<br/><br/>and a lot more stuff too... but I'm tired now, lol.",
      "PostDate": "2014-11-24T21:47:34+00:00",
      "LastEditDate": null
    }
  ]
}