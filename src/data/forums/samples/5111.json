{
  "Topic": {
    "TopicId": "5111",
    "ForumId": "18",
    "Title": "How to modify the user interface",
    "LastUpdated": "2016-02-10T14:40:12+00:00",
    "ReplyCount": 9
  },
  "Posts": [
    {
      "PostId": "35346",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Quest sets up the User Interface in the InitInterface function, which is defined in Core.aslx. The last thing it does is call another function, InitUserInterface, which is empty (after which game.start will run, unless the player is resuming with a saved game). The best way to modify the user interface, then, is to define your own InitUserInterface function.\n\n[Note, however, that you should not print anything from the InitUserInterface function (you might feel tempted to output CSS or some JavaScripts using [i:28e25di9]msg[/i:28e25di9] or [i:28e25di9]OutputTextRawNoBr[/i:28e25di9]). If you do, when a saved game is reloaded, all the new text will get inserted into the top of the existing text.]\n\nThe big advantage of doing it this way is that this will be called whenever Quest thinks the interface needs updating, which is not just at the start of the game (for example, when the screen is cleared). You also get the bonus of having all your interface stuff in the same place, which keeps it neat.\n\nUnfortunately, this will not work if you are editing on-line, as the on-line editor will not let you create a function with the same name as one already in the game. The moral here is that if you want to do fancy stuff, use the off-line editor! If you are editing on-line, put the code in the start script on the game object, and make sure you do not clear the screen.\n\nTo create the function, right click in the left pane, and select &quot;New function&quot;. Call it &quot;InitUserInterface&quot; (no quotes, no spaces, exact capitalisation).\n\nBecause it is easier to show on a forum post, all the tricks here will be in code. In the script section at the bottom, click on the seventh icon, &quot;Code view&quot;, and a text box will appear. Just copy-and-paste code into here. You can paste in as many code blocks as you like, and it should work fine (note that that is not necessarily true of all code).\n\n\n[b:28e25di9][i:28e25di9]Rename the interface features[/i:28e25di9][/b:28e25di9]\n\nYou can rename the features of the interface using the request script command. it takes two parameters, the first is SetInterfaceString (note that this is not a string, so has no quote marks), the second is the instruction, i.e, the name of the feature, an equals sign and the new text. That is a string, so needs to be in double quotes. Like this:\n[code:28e25di9]  request (SetInterfaceString, &quot;InventoryLabel=You are holding&quot;)\n  request (SetInterfaceString, &quot;StatusLabel=How you are doing&quot;)\n  request (SetInterfaceString, &quot;PlacesObjectsLabel=Things you can see&quot;)\n  request (SetInterfaceString, &quot;CompassLabel=Directions you can go&quot;)\n  request (SetInterfaceString, &quot;InButtonLabel=In&quot;)\n  request (SetInterfaceString, &quot;OutButtonLabel=out&quot;)\n  request (SetInterfaceString, &quot;EmptyListLabel=Stuff all&quot;)\n  request (SetInterfaceString, &quot;NothingSelectedLabel=-&quot;)\n  request (SetInterfaceString, &quot;TypeHereLabel=Now what?&quot;)\n  request (SetInterfaceString, &quot;ContinueLabel=Just press a button to get on with it&quot;)[/code:28e25di9]\nNot sure when you see EmptyListLabel or NothingSelectedLabel, but the rest are obvious enough.\n\n[i:28e25di9]As of Quest 5.6, this seems to be broken.[/i:28e25di9]\n\nA simple alternative is to change the templates.\n\nAt the bottom left, click Filter - Show Library Elements. In the search box just above the left pane, type &quot;label&quot; (no quotes), and press Enter. Select the label you want to change, and its template will appear on the right. Click copy at the far right, then type your own text in the Text field.\n\n\n[b:28e25di9][i:28e25di9]Change the look and feel with Built-in Functions[/i:28e25di9][/b:28e25di9]\n\nThere are some built-in functions to change the UI.\n[code:28e25di9]  SetFramePicture (filename)\n  ClearFramePicture\n  SetBackgroundOpacity (opacity)\n  SetBackgroundColour(string colour)\n  SetBackgroundImage (filename)\n  SetAlignment(string alignment)\n  SetFontName\n  SetFontSize\n  SetForegroundColour\n  SetWebFontName[/code:28e25di9]\nThen there are a set of options available through the request script command, allowing you to turn on or off the location at the top, the panes at the right and the command bar at the bottom.\n[code:28e25di9]  // The panels on the right\n  request (Show, &quot;Panes&quot;)\n  request (Hide, &quot;Panes&quot;)\n  // The text input\n  request (Show, &quot;Command&quot;)\n  request (Hide, &quot;Command&quot;)\n  // the status bar at the top\n  request (Show, &quot;Location&quot;)\n  request (Hide, &quot;Location&quot;)[/code:28e25di9]\n  Most of these can be done by setting options on the game object, and that is generally a better way to do, unless you want to make changes during play.\n  \n\n[i:28e25di9][b:28e25di9]Using the JS object[/b:28e25di9][/i:28e25di9]\n\nThe JS object (JavaScript) has a bunch of functions (or methods, they should probably be called).\n[code:28e25di9]  JS&#46;setGameWidth(width)\n  JS&#46;hideBorder()\n  JS&#46;showBorder()\n  JS&#46;setGamePadding(top, bottom, left, right)\n  JS&#46;addExternalStyleheet(stylesheet)\n  // I think the stylesheet should be a file name (or perhaps a URL) as the parameter\n  JS&#46;SetMenuBackground(colour)\n  JS&#46;SetMenuForeground(colour)\n  JS&#46;SetMenuHoverBackground(colour)\n  JS&#46;SetMenuHoverForeground(colour)\n  JS&#46;SetMenuFontName(fontname)\n  // these refer to the menu that appears when the player clicks on a hyperlink in the text\n  JS&#46;SetMenuFontSize(size)\n  // the size must be a string that is a number followed by &quot;pt&quot;\n  JS&#46;TurnOffHyperlinksUnderline()\n  JS&#46;TurnOnHyperlinksUnderline()[/code:28e25di9]\n\n\n[b:28e25di9][i:28e25di9]Using JavaScript[/i:28e25di9][/b:28e25di9]\n\nWhen you have exhausted those possibilities you are delving into the murky would of CSS and JQuery, via the eval method of JS. To understand how that fits together, we will look at each technology in turn.\n\n\n[i:28e25di9][b:28e25di9]Using CSS[/b:28e25di9][/i:28e25di9]\n\nCascading style sheets (CSS) is the primary way for web pages to define the style, as opposed to the content; what font to use, colours, etc. An example might looks like this:\n[code:28e25di9]#gameBorder {\n  background-color&#58; #800080;\n}[/code:28e25di9]\nThe first line determines what is controlled - in this case an element with the ID gameBorder (the # indicates ID rather than a class or element type). The second line defines the settings. There can be several lines, before we get to the close brace (this is the conventional way to layout CSS). For the second line, there are two parts, the name, in this case &quot;background-color&quot;, and the value, &quot;#800080&quot; (which is a dark magenta).\n\nIn summary, then this CSS code will set the background colour of something with the ID &quot;gameBorder&quot; to be dark magenta.\n\n\n[b:28e25di9][i:28e25di9]Using JQuery[/i:28e25di9][/b:28e25di9]\n\nStatic web pages use CSS like that, but it you want things to change, you need JavaScript, and JQuery is a quick way to access an element in JavaScript. To do the above in JavaScript/JQuery, you would do this:\n[code:28e25di9]  $('#gameBorder')&#46;css('background-color', '#800080');[/code:28e25di9]\nNotice that all the same information is there, just arranged differently, according to the syntax of JavaScript/JQuery. The $ at the start signifies this is JQuery, and $('#gameBorder') will grab the thing with the ID &quot;gameBorder&quot; (again, the # indicates this is an ID). Once we have that we call a method (function) called &quot;css&quot;, and send it two parameters, the thing we want to change and the new value.\n\n\n[b:28e25di9][i:28e25di9]Using JQuery in Quest[/i:28e25di9][/b:28e25di9]\n  \nTo do it is Quest, you have to send that as a string to the JS.eval function:\n[code:28e25di9]  JS&#46;eval(&quot;$('#gameBorder')&#46;css('background-color', '#800080');&quot;)[/code:28e25di9]\nOnce you have that template, you can change a shed load of setting, you just need to know what each bit (like &quot;gameBorder&quot;) is called, what the CSS property (like &quot;background-color&quot;) is called and what value (like &quot;#800080&quot;) is allowed.",
      "EditableFormat": "bbcode",
      "HTML": "Quest sets up the User Interface in the InitInterface function, which is defined in Core.aslx. The last thing it does is call another function, InitUserInterface, which is empty (after which game.start will run, unless the player is resuming with a saved game). The best way to modify the user interface, then, is to define your own InitUserInterface function.<br/><br/>[Note, however, that you should not print anything from the InitUserInterface function (you might feel tempted to output CSS or some JavaScripts using <span style=\"font-style:italic;\">msg</span> or <span style=\"font-style:italic;\">OutputTextRawNoBr</span>). If you do, when a saved game is reloaded, all the new text will get inserted into the top of the existing text.]<br/><br/>The big advantage of doing it this way is that this will be called whenever Quest thinks the interface needs updating, which is not just at the start of the game (for example, when the screen is cleared). You also get the bonus of having all your interface stuff in the same place, which keeps it neat.<br/><br/>Unfortunately, this will not work if you are editing on-line, as the on-line editor will not let you create a function with the same name as one already in the game. The moral here is that if you want to do fancy stuff, use the off-line editor! If you are editing on-line, put the code in the start script on the game object, and make sure you do not clear the screen.<br/><br/>To create the function, right click in the left pane, and select &quot;New function&quot;. Call it &quot;InitUserInterface&quot; (no quotes, no spaces, exact capitalisation).<br/><br/>Because it is easier to show on a forum post, all the tricks here will be in code. In the script section at the bottom, click on the seventh icon, &quot;Code view&quot;, and a text box will appear. Just copy-and-paste code into here. You can paste in as many code blocks as you like, and it should work fine (note that that is not necessarily true of all code).<br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Rename the interface features</span></span><br/><br/>You can rename the features of the interface using the request script command. it takes two parameters, the first is SetInterfaceString (note that this is not a string, so has no quote marks), the second is the instruction, i.e, the name of the feature, an equals sign and the new text. That is a string, so needs to be in double quotes. Like this:<br/><pre><code>  request (SetInterfaceString, &quot;InventoryLabel=You are holding&quot;)<br/>  request (SetInterfaceString, &quot;StatusLabel=How you are doing&quot;)<br/>  request (SetInterfaceString, &quot;PlacesObjectsLabel=Things you can see&quot;)<br/>  request (SetInterfaceString, &quot;CompassLabel=Directions you can go&quot;)<br/>  request (SetInterfaceString, &quot;InButtonLabel=In&quot;)<br/>  request (SetInterfaceString, &quot;OutButtonLabel=out&quot;)<br/>  request (SetInterfaceString, &quot;EmptyListLabel=Stuff all&quot;)<br/>  request (SetInterfaceString, &quot;NothingSelectedLabel=-&quot;)<br/>  request (SetInterfaceString, &quot;TypeHereLabel=Now what?&quot;)<br/>  request (SetInterfaceString, &quot;ContinueLabel=Just press a button to get on with it&quot;)</code></pre><br/>Not sure when you see EmptyListLabel or NothingSelectedLabel, but the rest are obvious enough.<br/><br/><span style=\"font-style:italic;\">As of Quest 5.6, this seems to be broken.</span><br/><br/>A simple alternative is to change the templates.<br/><br/>At the bottom left, click Filter - Show Library Elements. In the search box just above the left pane, type &quot;label&quot; (no quotes), and press Enter. Select the label you want to change, and its template will appear on the right. Click copy at the far right, then type your own text in the Text field.<br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Change the look and feel with Built-in Functions</span></span><br/><br/>There are some built-in functions to change the UI.<br/><pre><code>  SetFramePicture (filename)<br/>  ClearFramePicture<br/>  SetBackgroundOpacity (opacity)<br/>  SetBackgroundColour(string colour)<br/>  SetBackgroundImage (filename)<br/>  SetAlignment(string alignment)<br/>  SetFontName<br/>  SetFontSize<br/>  SetForegroundColour<br/>  SetWebFontName</code></pre><br/>Then there are a set of options available through the request script command, allowing you to turn on or off the location at the top, the panes at the right and the command bar at the bottom.<br/><pre><code>  // The panels on the right<br/>  request (Show, &quot;Panes&quot;)<br/>  request (Hide, &quot;Panes&quot;)<br/>  // The text input<br/>  request (Show, &quot;Command&quot;)<br/>  request (Hide, &quot;Command&quot;)<br/>  // the status bar at the top<br/>  request (Show, &quot;Location&quot;)<br/>  request (Hide, &quot;Location&quot;)</code></pre><br/>  Most of these can be done by setting options on the game object, and that is generally a better way to do, unless you want to make changes during play.<br/>  <br/><br/><span style=\"font-style:italic;\"><span style=\"font-weight:bold;\">Using the JS object</span></span><br/><br/>The JS object (JavaScript) has a bunch of functions (or methods, they should probably be called).<br/><pre><code>  JS&#46;setGameWidth(width)<br/>  JS&#46;hideBorder()<br/>  JS&#46;showBorder()<br/>  JS&#46;setGamePadding(top, bottom, left, right)<br/>  JS&#46;addExternalStyleheet(stylesheet)<br/>  // I think the stylesheet should be a file name (or perhaps a URL) as the parameter<br/>  JS&#46;SetMenuBackground(colour)<br/>  JS&#46;SetMenuForeground(colour)<br/>  JS&#46;SetMenuHoverBackground(colour)<br/>  JS&#46;SetMenuHoverForeground(colour)<br/>  JS&#46;SetMenuFontName(fontname)<br/>  // these refer to the menu that appears when the player clicks on a hyperlink in the text<br/>  JS&#46;SetMenuFontSize(size)<br/>  // the size must be a string that is a number followed by &quot;pt&quot;<br/>  JS&#46;TurnOffHyperlinksUnderline()<br/>  JS&#46;TurnOnHyperlinksUnderline()</code></pre><br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Using JavaScript</span></span><br/><br/>When you have exhausted those possibilities you are delving into the murky would of CSS and JQuery, via the eval method of JS. To understand how that fits together, we will look at each technology in turn.<br/><br/><br/><span style=\"font-style:italic;\"><span style=\"font-weight:bold;\">Using CSS</span></span><br/><br/>Cascading style sheets (CSS) is the primary way for web pages to define the style, as opposed to the content; what font to use, colours, etc. An example might looks like this:<br/><pre><code>#gameBorder {<br/>  background-color&#58; #800080;<br/>}</code></pre><br/>The first line determines what is controlled - in this case an element with the ID gameBorder (the # indicates ID rather than a class or element type). The second line defines the settings. There can be several lines, before we get to the close brace (this is the conventional way to layout CSS). For the second line, there are two parts, the name, in this case &quot;background-color&quot;, and the value, &quot;#800080&quot; (which is a dark magenta).<br/><br/>In summary, then this CSS code will set the background colour of something with the ID &quot;gameBorder&quot; to be dark magenta.<br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Using JQuery</span></span><br/><br/>Static web pages use CSS like that, but it you want things to change, you need JavaScript, and JQuery is a quick way to access an element in JavaScript. To do the above in JavaScript/JQuery, you would do this:<br/><pre><code>  $('#gameBorder')&#46;css('background-color', '#800080');</code></pre><br/>Notice that all the same information is there, just arranged differently, according to the syntax of JavaScript/JQuery. The $ at the start signifies this is JQuery, and $('#gameBorder') will grab the thing with the ID &quot;gameBorder&quot; (again, the # indicates this is an ID). Once we have that we call a method (function) called &quot;css&quot;, and send it two parameters, the thing we want to change and the new value.<br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Using JQuery in Quest</span></span><br/>  <br/>To do it is Quest, you have to send that as a string to the JS.eval function:<br/><pre><code>  JS&#46;eval(&quot;$('#gameBorder')&#46;css('background-color', '#800080');&quot;)</code></pre><br/>Once you have that template, you can change a shed load of setting, you just need to know what each bit (like &quot;gameBorder&quot;) is called, what the CSS property (like &quot;background-color&quot;) is called and what value (like &quot;#800080&quot;) is allowed.",
      "PostDate": "2015-03-17T08:01:29+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "35347",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[b:27ce2z02][i:27ce2z02]Elements[/i:27ce2z02][/b:27ce2z02]\n  \nBits of an HTML page are called elements, and &quot;gameBorder&quot; is just one of them. All HTML documents have an &quot;html&quot; element that contains everything else, and inside that it has a &quot;head&quot; and a &quot;body&quot; elements. Quest then has a few dozen elements that make up the interface inside the &quot;body&quot; element.\n\nYou can look at those elements as you play a game. In the off-line editor, click on HTML Tools (on-line, your browser will probably have the facility to do this too). On the left you will see a hierarchy of elements (you will need to expand them to see them all), and on the right a list of properties. Click on an element, and it will be highlighted in your game so you can see what it refers to.\n\nMost of the interesting elements are of the type &quot;div&quot;, and each is identified by an &quot;id&quot;. The gameBorder one looks like this:\n[attachment=0:27ce2z02]<!-- ia0 -->html-tools.png<!-- ia0 -->[/attachment:27ce2z02]\n\n\n[b:27ce2z02][i:27ce2z02]CSS Properties and Values[/i:27ce2z02][/b:27ce2z02]\n\nThere are a large number of CSS properties, to get a full list, use the internet. I will mention of of the interesting ones. You do need to be careful that you supply the right type of value, but we will look at that too. Also, be aware that CSS uses America spelling for &quot;center&quot; and &quot;color&quot;.\n\n[i:27ce2z02]color[/i:27ce2z02]\n\nThe colour of text is determined by the &quot;color&quot; property. You can set colours in a number of ways, the easiest is to use a name. This Wiki page has a full list of available names (note that there are no spaces in the name; for once, capitalisation does not matter):\n<!-- m --><a class=\"postlink\" href=\"http://en.wikipedia.org/wiki/Web_colors\">http://en.wikipedia.org/wiki/Web_colors</a><!-- m -->\n\n[code:27ce2z02] JS&#46;eval(&quot;$('#gameBorder')&#46;css('color', 'blueviolet');&quot;)[/code:27ce2z02]\n\nYou can also set colours by using the RGB code. These both set the colour to red.\n\n[code:27ce2z02] JS&#46;eval(&quot;$('#gameBorder')&#46;css('color', 'rgb(255, 0, 0)');&quot;)\n JS&#46;eval(&quot;$('#gameBorder')&#46;css('color', '#ff0000');&quot;)[/code:27ce2z02]\n\nEach splits colours in to three components: red, green, blue. In the first, each component is a number from 0 to 255. In the second, if is a hexadecimal number from 00 to ff. If you do not know what hexadecimal is, use the other format.\n\n[i:27ce2z02]background-color[/i:27ce2z02]\n\nThis works just the same as color, but changes the background for this element.\n\n[code:27ce2z02] JS&#46;eval(&quot;$('#gameBorder')&#46;css('background-color', 'blueviolet');&quot;)[/code:27ce2z02]\n\n[i:27ce2z02]background-image[/i:27ce2z02]\n\nIn theory, you should be able to set the background image for each element, but I have not got that to work. You can set it for the entire page using the SetBackgroundImage function. If anyone can do it with CSS/JQuery, let me know how!\n\nThe status bar at the top uses an image. If you want to stop that image displaying, do this:\n\n[code:27ce2z02] JS&#46;eval(&quot;$('#status')&#46;css('background-image', 'none');&quot;)[/code:27ce2z02]\n\n[i:27ce2z02]width[/i:27ce2z02]\n\nThis will change the width of the element. You have the potential to mess up big time here, so change one element at a time and see what happens. Elements do impact on each other, so you may not see any difference. When experimenting, change the width of Quest itself to see what effect that has too.\n\nNote that the value must include &quot;px&quot;, which says the units are pixels.\n\n[code:27ce2z02] JS&#46;eval(&quot;$('#gameBorder')&#46;css('width', '950px');&quot;)[/code:27ce2z02]\n\n[i:27ce2z02]opacity[/i:27ce2z02]\n\nThe opacity property defines how much this element covers the one below (the reverse of transparency). It can range from 0.0 (this element is not visible) to 1.0 (this element is completely opaque).\n[code:27ce2z02]\n JS&#46;eval(&quot;$('#gameBorder')&#46;css('opacity', '0&#46;5');&quot;)[/code:27ce2z02]\n\n[i:27ce2z02]border[/i:27ce2z02]\n\nThe border property lets you set borders. You can set various aspects in one go, so in this example a dashed line, 5 px wide and blue, will be added.\n\n[code:27ce2z02]  JS&#46;eval(&quot;$('#gameBorder')&#46;css('border', 'dashed 5px blue');&quot;)[/code:27ce2z02]\n\nThe status bar at the top has a blue border. If you want to remove it, do this (also set the width to 950px to keep it aligned):\n\n[code:27ce2z02] JS&#46;eval(&quot;$('#status')&#46;css('border', 'none');&quot;)[/code:27ce2z02]\n\n\n\n[b:27ce2z02][i:27ce2z02]Fonts[/i:27ce2z02][/b:27ce2z02]\n\nThere are about a dozen &quot;base fonts&quot; available in Quest. These are fonts that are pretty much guaranteed to be available on any computer (or at least equivalents, so we have Arial on PC, or Helvetica on Mac or failing that sans-serif).\n\nIf you want to change the font during a game, use the SetFontName function. This allows you to list the equivalent fonts, so will ensure users on other operating systems see more-or-less the same thing.\n\n[code:27ce2z02]SetFontName(&quot;Arial, Heletica, sans-serif&quot;)\nmsg(&quot;This is in Heletica&quot;)\nSetFontName(&quot;'Courier New', Courier, monospace&quot;)\nmsg(&quot;This is in Courier&quot;)\nSetFontName(&quot;Impact, Charcoal, sans-serif&quot;)\nmsg(&quot;This is in Charcoal&quot;)[/code:27ce2z02]\n\nThe sans-serif and monospace as generic fonts; there are also serif, cursive and fantasy. They will all map to [i:27ce2z02]something [/i:27ce2z02]on every computer, though the cursive and fantasy tend to fall well short of the names.\n\nYou also have access to web fonts. These are provided on-line by Google, and by default you can access just one in your game. To use any more, you need to call the SetWebFontName to pull the font off the internet, and then SetFontName as normal to actually use it.\n\n[code:27ce2z02]// Pull the fonts off the internet\nSetWebFontName(&quot;Wallpoet&quot;)\nSetWebFontName(&quot;Admina&quot;)\n\n// Now we can swap between them as much as we like\nSetFontName(&quot;Wallpoet&quot;)\nmsg(&quot;This is in Wallpoet&quot;)\nSetFontName(&quot;Admina&quot;)\nmsg(&quot;This is in Admina&quot;)\nSetFontName(&quot;Wallpoet&quot;)\nmsg(&quot;This is in Wallpoet&quot;)[/code:27ce2z02]\n\n\n[b:27ce2z02][i:27ce2z02]The &quot;Continue&quot; link[/i:27ce2z02][/b:27ce2z02]\n\nYou can change in the colour of hyperlinks on the Display tab of the game object, but it does not affect the &quot;Continue&quot; message when the game waits for the player to press a button, because that is actually part of the command line, not the output text. However, you can change it with JQuery, like this:\n\n[code:27ce2z02]JS&#46;eval (&quot;$('#txtCommandDiv a')&#46;css('color', 'orange');&quot;)[/code:27ce2z02]\n\n[b:27ce2z02][i:27ce2z02]Where and When To Do Stuff[/i:27ce2z02][/b:27ce2z02]\n\nWhen changing the styles of existing elements, put the code the InitUserInterface function. However, if you are adding new elements that may not work.\n\nTo add a new element, you need to output the HTML code, and Quest only offers one way to do that - using the [i:27ce2z02]msg [/i:27ce2z02]command (okay, there are also some [i:27ce2z02]OutputXxx [/i:27ce2z02]functions, but they are also essentially the same). We have no control when the text will appear in the HTML source, it will go at the end of the output section.\n\nNote that the HTML code will get saved when the player clicks the save button, because it is part of the output text. For this reason it may be better in game.start, rather than [i:27ce2z02]InitUserInterface [/i:27ce2z02](if it is in [i:27ce2z02]InitUserInterface[/i:27ce2z02], when the player resumes play from a save, the HTML code will be added a second time.\n\nHowever, it is important to remember that if you try to change the CSS values of your new HTML code before it has been added, it will not work. If you have JavaScript telling it to be in blue in [i:27ce2z02]InitUserInterface[/i:27ce2z02], but your [i:27ce2z02]msg[/i:27ce2z02] command in in game.start, the text will not be blue because the JavaScript will try to change it before it exists. You should, therefore, try to have all the styling included in the HTML.\n\nIf you find you need to change CSS styles before adding the elements, the way to do that is to add a new style element to the HTML source, and in there define the styles for a class. When you later add your new HTML code, use that class. A fair knowledge of HTML and CSS is useful here!\n\nAnother approach is to move the HTML after it has been added, using the JQuery functions  [i:27ce2z02]insertAfter [/i:27ce2z02]or [i:27ce2z02]insertBefore [/i:27ce2z02]for example. If the code gets moved out of the divOutput part then it will not be saved. In this case it should be safe to put it into [i:27ce2z02]InitUserInterface[/i:27ce2z02].\n\nThat said, using [i:27ce2z02]insertAfter [/i:27ce2z02]or [i:27ce2z02]insertBefore [/i:27ce2z02]in [i:27ce2z02]InitUserInterface [/i:27ce2z02]can have problems of its own, and you can find that after the player reloads a saved game, new output text appears above the old text instead of below it. I have yet to establish under what conditions this happens, so it is vital that after you upload your game you play it, then save it, then reload a save game and play that too and see if it still works as it should.",
      "EditableFormat": "bbcode",
      "HTML": "<span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Elements</span></span><br/>  <br/>Bits of an HTML page are called elements, and &quot;gameBorder&quot; is just one of them. All HTML documents have an &quot;html&quot; element that contains everything else, and inside that it has a &quot;head&quot; and a &quot;body&quot; elements. Quest then has a few dozen elements that make up the interface inside the &quot;body&quot; element.<br/><br/>You can look at those elements as you play a game. In the off-line editor, click on HTML Tools (on-line, your browser will probably have the facility to do this too). On the left you will see a hierarchy of elements (you will need to expand them to see them all), and on the right a list of properties. Click on an element, and it will be highlighted in your game so you can see what it refers to.<br/><br/>Most of the interesting elements are of the type &quot;div&quot;, and each is identified by an &quot;id&quot;. The gameBorder one looks like this:<br/><div><img src=\"/forumattachments/1180/html-tools.png\" alt=\"html-tools.png\" /></div><br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">CSS Properties and Values</span></span><br/><br/>There are a large number of CSS properties, to get a full list, use the internet. I will mention of of the interesting ones. You do need to be careful that you supply the right type of value, but we will look at that too. Also, be aware that CSS uses America spelling for &quot;center&quot; and &quot;color&quot;.<br/><br/><span style=\"font-style:italic;\">color</span><br/><br/>The colour of text is determined by the &quot;color&quot; property. You can set colours in a number of ways, the easiest is to use a name. This Wiki page has a full list of available names (note that there are no spaces in the name; for once, capitalisation does not matter):<br/><!-- m --><a class=\"postlink\" href=\"http://en.wikipedia.org/wiki/Web_colors\">http://en.wikipedia.org/wiki/Web_colors</a><!-- m --><br/><br/><pre><code> JS&#46;eval(&quot;$('#gameBorder')&#46;css('color', 'blueviolet');&quot;)</code></pre><br/><br/>You can also set colours by using the RGB code. These both set the colour to red.<br/><br/><pre><code> JS&#46;eval(&quot;$('#gameBorder')&#46;css('color', 'rgb(255, 0, 0)');&quot;)<br/> JS&#46;eval(&quot;$('#gameBorder')&#46;css('color', '#ff0000');&quot;)</code></pre><br/><br/>Each splits colours in to three components: red, green, blue. In the first, each component is a number from 0 to 255. In the second, if is a hexadecimal number from 00 to ff. If you do not know what hexadecimal is, use the other format.<br/><br/><span style=\"font-style:italic;\">background-color</span><br/><br/>This works just the same as color, but changes the background for this element.<br/><br/><pre><code> JS&#46;eval(&quot;$('#gameBorder')&#46;css('background-color', 'blueviolet');&quot;)</code></pre><br/><br/><span style=\"font-style:italic;\">background-image</span><br/><br/>In theory, you should be able to set the background image for each element, but I have not got that to work. You can set it for the entire page using the SetBackgroundImage function. If anyone can do it with CSS/JQuery, let me know how!<br/><br/>The status bar at the top uses an image. If you want to stop that image displaying, do this:<br/><br/><pre><code> JS&#46;eval(&quot;$('#status')&#46;css('background-image', 'none');&quot;)</code></pre><br/><br/><span style=\"font-style:italic;\">width</span><br/><br/>This will change the width of the element. You have the potential to mess up big time here, so change one element at a time and see what happens. Elements do impact on each other, so you may not see any difference. When experimenting, change the width of Quest itself to see what effect that has too.<br/><br/>Note that the value must include &quot;px&quot;, which says the units are pixels.<br/><br/><pre><code> JS&#46;eval(&quot;$('#gameBorder')&#46;css('width', '950px');&quot;)</code></pre><br/><br/><span style=\"font-style:italic;\">opacity</span><br/><br/>The opacity property defines how much this element covers the one below (the reverse of transparency). It can range from 0.0 (this element is not visible) to 1.0 (this element is completely opaque).<br/><pre><code><br/> JS&#46;eval(&quot;$('#gameBorder')&#46;css('opacity', '0&#46;5');&quot;)</code></pre><br/><br/><span style=\"font-style:italic;\">border</span><br/><br/>The border property lets you set borders. You can set various aspects in one go, so in this example a dashed line, 5 px wide and blue, will be added.<br/><br/><pre><code>  JS&#46;eval(&quot;$('#gameBorder')&#46;css('border', 'dashed 5px blue');&quot;)</code></pre><br/><br/>The status bar at the top has a blue border. If you want to remove it, do this (also set the width to 950px to keep it aligned):<br/><br/><pre><code> JS&#46;eval(&quot;$('#status')&#46;css('border', 'none');&quot;)</code></pre><br/><br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Fonts</span></span><br/><br/>There are about a dozen &quot;base fonts&quot; available in Quest. These are fonts that are pretty much guaranteed to be available on any computer (or at least equivalents, so we have Arial on PC, or Helvetica on Mac or failing that sans-serif).<br/><br/>If you want to change the font during a game, use the SetFontName function. This allows you to list the equivalent fonts, so will ensure users on other operating systems see more-or-less the same thing.<br/><br/><pre><code>SetFontName(&quot;Arial, Heletica, sans-serif&quot;)<br/>msg(&quot;This is in Heletica&quot;)<br/>SetFontName(&quot;'Courier New', Courier, monospace&quot;)<br/>msg(&quot;This is in Courier&quot;)<br/>SetFontName(&quot;Impact, Charcoal, sans-serif&quot;)<br/>msg(&quot;This is in Charcoal&quot;)</code></pre><br/><br/>The sans-serif and monospace as generic fonts; there are also serif, cursive and fantasy. They will all map to <span style=\"font-style:italic;\">something </span>on every computer, though the cursive and fantasy tend to fall well short of the names.<br/><br/>You also have access to web fonts. These are provided on-line by Google, and by default you can access just one in your game. To use any more, you need to call the SetWebFontName to pull the font off the internet, and then SetFontName as normal to actually use it.<br/><br/><pre><code>// Pull the fonts off the internet<br/>SetWebFontName(&quot;Wallpoet&quot;)<br/>SetWebFontName(&quot;Admina&quot;)<br/><br/>// Now we can swap between them as much as we like<br/>SetFontName(&quot;Wallpoet&quot;)<br/>msg(&quot;This is in Wallpoet&quot;)<br/>SetFontName(&quot;Admina&quot;)<br/>msg(&quot;This is in Admina&quot;)<br/>SetFontName(&quot;Wallpoet&quot;)<br/>msg(&quot;This is in Wallpoet&quot;)</code></pre><br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">The &quot;Continue&quot; link</span></span><br/><br/>You can change in the colour of hyperlinks on the Display tab of the game object, but it does not affect the &quot;Continue&quot; message when the game waits for the player to press a button, because that is actually part of the command line, not the output text. However, you can change it with JQuery, like this:<br/><br/><pre><code>JS&#46;eval (&quot;$('#txtCommandDiv a')&#46;css('color', 'orange');&quot;)</code></pre><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Where and When To Do Stuff</span></span><br/><br/>When changing the styles of existing elements, put the code the InitUserInterface function. However, if you are adding new elements that may not work.<br/><br/>To add a new element, you need to output the HTML code, and Quest only offers one way to do that - using the <span style=\"font-style:italic;\">msg </span>command (okay, there are also some <span style=\"font-style:italic;\">OutputXxx </span>functions, but they are also essentially the same). We have no control when the text will appear in the HTML source, it will go at the end of the output section.<br/><br/>Note that the HTML code will get saved when the player clicks the save button, because it is part of the output text. For this reason it may be better in game.start, rather than <span style=\"font-style:italic;\">InitUserInterface </span>(if it is in <span style=\"font-style:italic;\">InitUserInterface</span>, when the player resumes play from a save, the HTML code will be added a second time.<br/><br/>However, it is important to remember that if you try to change the CSS values of your new HTML code before it has been added, it will not work. If you have JavaScript telling it to be in blue in <span style=\"font-style:italic;\">InitUserInterface</span>, but your <span style=\"font-style:italic;\">msg</span> command in in game.start, the text will not be blue because the JavaScript will try to change it before it exists. You should, therefore, try to have all the styling included in the HTML.<br/><br/>If you find you need to change CSS styles before adding the elements, the way to do that is to add a new style element to the HTML source, and in there define the styles for a class. When you later add your new HTML code, use that class. A fair knowledge of HTML and CSS is useful here!<br/><br/>Another approach is to move the HTML after it has been added, using the JQuery functions  <span style=\"font-style:italic;\">insertAfter </span>or <span style=\"font-style:italic;\">insertBefore </span>for example. If the code gets moved out of the divOutput part then it will not be saved. In this case it should be safe to put it into <span style=\"font-style:italic;\">InitUserInterface</span>.<br/><br/>That said, using <span style=\"font-style:italic;\">insertAfter </span>or <span style=\"font-style:italic;\">insertBefore </span>in <span style=\"font-style:italic;\">InitUserInterface </span>can have problems of its own, and you can find that after the player reloads a saved game, new output text appears above the old text instead of below it. I have yet to establish under what conditions this happens, so it is vital that after you upload your game you play it, then save it, then reload a save game and play that too and see if it still works as it should.",
      "PostDate": "2015-03-17T08:05:56+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "35351",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[b:lrqz3hmy][i:lrqz3hmy]Reordering the Panes[/i:lrqz3hmy][/b:lrqz3hmy]\n\nYou can use JQuery to rearrange the panes on the right. Why would you want to do that? If you put the compass rose a the top, then it will stay in the same place. The way it is set out normally, the compass rose jumps around depending on how many items are in the location and inventory and what the player is doing with them.\n\nThe JQuery we are going to use looks like this:\n[code:lrqz3hmy]$('#compassLabel')&#46;insertBefore('#inventoryLabel')[/code:lrqz3hmy]\nAs before, the $ flags this as JQuery, and then we grab the element with the ID &quot;compassLabel&quot;. Then we invoke the &quot;insertBefore&quot; method (function), telling JQuery it want the elemet to go before the inventoryLabel element.\n\nIn Quest, it will look like this (I am moving the status variables up as well, they they do not change their height much either):\n[code:lrqz3hmy]JS&#46;eval (&quot;$('#compassLabel')&#46;insertBefore('#inventoryLabel')&quot;)\nJS&#46;eval (&quot;$('#compassAccordion')&#46;insertBefore('#inventoryLabel')&quot;)\nJS&#46;eval (&quot;$('#statusVarsLabel')&#46;insertBefore('#inventoryLabel')&quot;)\nJS&#46;eval (&quot;$('#statusVarsAccordion')&#46;insertBefore('#inventoryLabel')&quot;)[/code:lrqz3hmy]\n\n\n[b:lrqz3hmy][i:lrqz3hmy]Removing Just One Pane[/i:lrqz3hmy][/b:lrqz3hmy]\n\nPerhaps you just want to get rid of one of the panes altogether. This example removes he compass by setting the CSS &quot;display&quot; property to &quot;none&quot;:\n[code:lrqz3hmy]JS&#46;eval (&quot;$('#compassLabel')&#46;css('display', 'none')&quot;)\nJS&#46;eval (&quot;$('#compassAccordion')&#46;css('display', 'none')&quot;)[/code:lrqz3hmy]\n\n\n[b:lrqz3hmy][i:lrqz3hmy]Changing the Ending[/i:lrqz3hmy][/b:lrqz3hmy]\n\nThe &quot;finish&quot; script command terminates the game, and replaces the panes on the right with a message. You can change the default font using JQuery again, to make it consistent with your game:\n[code:lrqz3hmy]JS&#46;eval (&quot;$('#gamePanesFinished')&#46;css('font-family', 'Berkshire Swash');&quot;)[/code:lrqz3hmy]\nYou can also change what gets displayed, using the JQuery [i:lrqz3hmy]html[/i:lrqz3hmy] method. In this example, I am modifying the text, and adding an image (and we have to use GetFileURL to do that). I am also building the string first, and then calling JS.eval.\n[code:lrqz3hmy]s = &quot;$('#gamePanesFinished')&#46;html('&lt;h2&gt;Game Over&lt;/h2&gt;&quot;\ns = s + &quot;&lt;p&gt;This game has finished and you are dead!&quot;&#46;&lt;/p&gt;&lt;img src=\\&quot;&quot;\ns = s + GetFileURL(&quot;gravestone&#46;png&quot;)\ns = s + &quot;\\&quot; /&gt;');&quot;\nJS&#46;eval (s)\nfinish[/code:lrqz3hmy]\n\n\n[b:lrqz3hmy][i:lrqz3hmy]Changing the Arrows[/i:lrqz3hmy][/b:lrqz3hmy]\n\nThe arrows in the compass rose and the triangles to the left of the panes are icons that are defined in JQuery. To change their color, you need to replace the image file (they are all in one file).\n \nYou an get an image file with the right colours, from here:\n<!-- m --><a class=\"postlink\" href=\"http://download.jqueryui.com/themeroller/images/ui-icons_800080_256x240.png\">http://download.jqueryui.com/themerolle ... 56x240.png</a><!-- m -->\n\nYou can change the number 800080 to the RGB colour what you want (I guess the file server creates the images on the fly, and will accept any value, but that may not be the case), this is a dark purple I was trying. Save the file in your game folder.\n\nThen you just need to do this to get the new icons in your game (again, modifying the number for your downloaded file):\n[code:lrqz3hmy]    JS&#46;eval (&quot;$('&#46;ui-icon')&#46;css('background-image', 'url(&quot; + GetFileURL(&quot;ui-icons_800080_256x240&#46;png&quot;) + &quot;)')&quot;)[/code:lrqz3hmy]\nOnce you have the file, you could edit it to change the shape of the arrows too, or make them multicoloured.\n\n\n[b:lrqz3hmy][i:lrqz3hmy]Changing the Status Bar[/i:lrqz3hmy][/b:lrqz3hmy]\n\nHow do you change the colour of the status bar across the top? Its identity is &quot;status&quot;, but if you set its background color like this, nothing will happen:\n[code:lrqz3hmy]JS&#46;eval (&quot;$('#status')&#46;css('background-color', 'black')&quot;)[/code:lrqz3hmy]\nThe reason is that there is an image there, and you need to get rid of that first:\n[code:lrqz3hmy]JS&#46;eval (&quot;$('#status')&#46;css('background-image', 'none')&quot;)[/code:lrqz3hmy]\n\n\n[i:lrqz3hmy][b:lrqz3hmy]Turning the Map On and Off[/b:lrqz3hmy][/i:lrqz3hmy]\n\nThese lines of code will turn the grid/map on and off respectively in game.\n[code:lrqz3hmy]JS&#46;eval (&quot;$('#gridPanel')&#46;css('display', 'block')&quot;)\nJS&#46;eval (&quot;$('#gridPanel')&#46;css('display', 'none')&quot;)[/code:lrqz3hmy]\n\n\n[i:lrqz3hmy][b:lrqz3hmy]Sticking the command bar to the bottom of the screen.[/b:lrqz3hmy][/i:lrqz3hmy]\n\nYou can use this to keep the box where the player types pinned to the bottom of the screen. The first line sets its position to &quot;fixed&quot;, this means it will stay in one place relative to the screen. The second line specifies where it will be fixed. The third line stops the game printing messages behind the input box.\n[code:lrqz3hmy]JS&#46;eval(&quot;$('#txtCommandDiv')&#46;css('position', 'fixed');&quot;)\nJS&#46;eval(&quot;$('#txtCommandDiv')&#46;css('bottom', '10px');&quot;)\nJS&#46;eval(&quot;$('#gameContent')&#46;css('margin-bottom', '70px');&quot;)[/code:lrqz3hmy]\n\n\n[i:lrqz3hmy][b:lrqz3hmy]Colour blend background[/b:lrqz3hmy][/i:lrqz3hmy]\n\nThis will give a background that fades from colour1 at the top to colour2 at the bottom of the window.\n[code:lrqz3hmy]    JS&#46;eval (&quot;$('#gamePanes')&#46;css('background-color', 'transparent');&quot;)\n    JS&#46;eval (&quot;$('#gameBorder')&#46;css('background-color', 'transparent');&quot;)\n    JS&#46;eval (&quot;$('body')&#46;css('background-color', '&quot; + colour1 + &quot;');&quot;)\n    JS&#46;eval (&quot;$('body')&#46;css('background-image', 'linear-gradient(to bottom,  &quot; + colour1 + &quot;, &quot; + colour2 + &quot;)');&quot;)\n    JS&#46;eval (&quot;$('body')&#46;css('background-image', '-webkit-linear-gradient(top,  &quot; + colour1 + &quot;, &quot; + colour2 + &quot;)');&quot;)\n    JS&#46;eval (&quot;$('body')&#46;css('background-attachment', 'fixed');&quot;)\n    JS&#46;eval (&quot;$('body')&#46;css('background-position', 'left bottom');&quot;)[/code:lrqz3hmy]\n\n\n[b:lrqz3hmy][i:lrqz3hmy]Other Tricks[/i:lrqz3hmy][/b:lrqz3hmy]\n\n&quot;Classic&quot; look:\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=4760&amp;hilit=background&amp;start=15#p31389\">viewtopic.php?f=10&amp;t=4760&amp;hilit=background&amp;start=15#p31389</a><!-- l -->\n\nMake a certain letter disappear and reappear:\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=5121\">viewtopic.php?f=10&amp;t=5121</a><!-- l -->\n\nBlurring text (getting drunk):\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=4947\">viewtopic.php?f=10&amp;t=4947</a><!-- l -->\n\nInjecting stylesheets (CSS in a string attribute on the game object):\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4747\">viewtopic.php?f=18&amp;t=4747</a><!-- l -->\n\nAdding command links to the bottom of the screen:\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4681\">viewtopic.php?f=18&amp;t=4681</a><!-- l -->\n\nJQuery dialogue box:\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4822\">viewtopic.php?f=18&amp;t=4822</a><!-- l -->\n\nAdditional inventory pane:\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=3789\">viewtopic.php?f=18&amp;t=3789</a><!-- l -->\n\nAdding a progress bar\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5770\">viewtopic.php?f=18&amp;t=5770</a><!-- l -->\n\nImage fade-in\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=5796&amp;p=40225#p40192\">viewtopic.php?f=10&amp;t=5796&amp;p=40225#p40192</a><!-- l -->\n\nControl how images are displayed\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5566\">viewtopic.php?f=18&amp;t=5566</a><!-- l -->\n\nCreate images on the fly\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5875\">viewtopic.php?f=18&amp;t=5875</a><!-- l -->",
      "EditableFormat": "bbcode",
      "HTML": "<span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Reordering the Panes</span></span><br/><br/>You can use JQuery to rearrange the panes on the right. Why would you want to do that? If you put the compass rose a the top, then it will stay in the same place. The way it is set out normally, the compass rose jumps around depending on how many items are in the location and inventory and what the player is doing with them.<br/><br/>The JQuery we are going to use looks like this:<br/><pre><code>$('#compassLabel')&#46;insertBefore('#inventoryLabel')</code></pre><br/>As before, the $ flags this as JQuery, and then we grab the element with the ID &quot;compassLabel&quot;. Then we invoke the &quot;insertBefore&quot; method (function), telling JQuery it want the elemet to go before the inventoryLabel element.<br/><br/>In Quest, it will look like this (I am moving the status variables up as well, they they do not change their height much either):<br/><pre><code>JS&#46;eval (&quot;$('#compassLabel')&#46;insertBefore('#inventoryLabel')&quot;)<br/>JS&#46;eval (&quot;$('#compassAccordion')&#46;insertBefore('#inventoryLabel')&quot;)<br/>JS&#46;eval (&quot;$('#statusVarsLabel')&#46;insertBefore('#inventoryLabel')&quot;)<br/>JS&#46;eval (&quot;$('#statusVarsAccordion')&#46;insertBefore('#inventoryLabel')&quot;)</code></pre><br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Removing Just One Pane</span></span><br/><br/>Perhaps you just want to get rid of one of the panes altogether. This example removes he compass by setting the CSS &quot;display&quot; property to &quot;none&quot;:<br/><pre><code>JS&#46;eval (&quot;$('#compassLabel')&#46;css('display', 'none')&quot;)<br/>JS&#46;eval (&quot;$('#compassAccordion')&#46;css('display', 'none')&quot;)</code></pre><br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Changing the Ending</span></span><br/><br/>The &quot;finish&quot; script command terminates the game, and replaces the panes on the right with a message. You can change the default font using JQuery again, to make it consistent with your game:<br/><pre><code>JS&#46;eval (&quot;$('#gamePanesFinished')&#46;css('font-family', 'Berkshire Swash');&quot;)</code></pre><br/>You can also change what gets displayed, using the JQuery <span style=\"font-style:italic;\">html</span> method. In this example, I am modifying the text, and adding an image (and we have to use GetFileURL to do that). I am also building the string first, and then calling JS.eval.<br/><pre><code>s = &quot;$('#gamePanesFinished')&#46;html('&lt;h2&gt;Game Over&lt;/h2&gt;&quot;<br/>s = s + &quot;&lt;p&gt;This game has finished and you are dead!&quot;&#46;&lt;/p&gt;&lt;img src=\\&quot;&quot;<br/>s = s + GetFileURL(&quot;gravestone&#46;png&quot;)<br/>s = s + &quot;\\&quot; /&gt;');&quot;<br/>JS&#46;eval (s)<br/>finish</code></pre><br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Changing the Arrows</span></span><br/><br/>The arrows in the compass rose and the triangles to the left of the panes are icons that are defined in JQuery. To change their color, you need to replace the image file (they are all in one file).<br/> <br/>You an get an image file with the right colours, from here:<br/><!-- m --><a class=\"postlink\" href=\"http://download.jqueryui.com/themeroller/images/ui-icons_800080_256x240.png\">http://download.jqueryui.com/themerolle ... 56x240.png</a><!-- m --><br/><br/>You can change the number 800080 to the RGB colour what you want (I guess the file server creates the images on the fly, and will accept any value, but that may not be the case), this is a dark purple I was trying. Save the file in your game folder.<br/><br/>Then you just need to do this to get the new icons in your game (again, modifying the number for your downloaded file):<br/><pre><code>    JS&#46;eval (&quot;$('&#46;ui-icon')&#46;css('background-image', 'url(&quot; + GetFileURL(&quot;ui-icons_800080_256x240&#46;png&quot;) + &quot;)')&quot;)</code></pre><br/>Once you have the file, you could edit it to change the shape of the arrows too, or make them multicoloured.<br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Changing the Status Bar</span></span><br/><br/>How do you change the colour of the status bar across the top? Its identity is &quot;status&quot;, but if you set its background color like this, nothing will happen:<br/><pre><code>JS&#46;eval (&quot;$('#status')&#46;css('background-color', 'black')&quot;)</code></pre><br/>The reason is that there is an image there, and you need to get rid of that first:<br/><pre><code>JS&#46;eval (&quot;$('#status')&#46;css('background-image', 'none')&quot;)</code></pre><br/><br/><br/><span style=\"font-style:italic;\"><span style=\"font-weight:bold;\">Turning the Map On and Off</span></span><br/><br/>These lines of code will turn the grid/map on and off respectively in game.<br/><pre><code>JS&#46;eval (&quot;$('#gridPanel')&#46;css('display', 'block')&quot;)<br/>JS&#46;eval (&quot;$('#gridPanel')&#46;css('display', 'none')&quot;)</code></pre><br/><br/><br/><span style=\"font-style:italic;\"><span style=\"font-weight:bold;\">Sticking the command bar to the bottom of the screen.</span></span><br/><br/>You can use this to keep the box where the player types pinned to the bottom of the screen. The first line sets its position to &quot;fixed&quot;, this means it will stay in one place relative to the screen. The second line specifies where it will be fixed. The third line stops the game printing messages behind the input box.<br/><pre><code>JS&#46;eval(&quot;$('#txtCommandDiv')&#46;css('position', 'fixed');&quot;)<br/>JS&#46;eval(&quot;$('#txtCommandDiv')&#46;css('bottom', '10px');&quot;)<br/>JS&#46;eval(&quot;$('#gameContent')&#46;css('margin-bottom', '70px');&quot;)</code></pre><br/><br/><br/><span style=\"font-style:italic;\"><span style=\"font-weight:bold;\">Colour blend background</span></span><br/><br/>This will give a background that fades from colour1 at the top to colour2 at the bottom of the window.<br/><pre><code>    JS&#46;eval (&quot;$('#gamePanes')&#46;css('background-color', 'transparent');&quot;)<br/>    JS&#46;eval (&quot;$('#gameBorder')&#46;css('background-color', 'transparent');&quot;)<br/>    JS&#46;eval (&quot;$('body')&#46;css('background-color', '&quot; + colour1 + &quot;');&quot;)<br/>    JS&#46;eval (&quot;$('body')&#46;css('background-image', 'linear-gradient(to bottom,  &quot; + colour1 + &quot;, &quot; + colour2 + &quot;)');&quot;)<br/>    JS&#46;eval (&quot;$('body')&#46;css('background-image', '-webkit-linear-gradient(top,  &quot; + colour1 + &quot;, &quot; + colour2 + &quot;)');&quot;)<br/>    JS&#46;eval (&quot;$('body')&#46;css('background-attachment', 'fixed');&quot;)<br/>    JS&#46;eval (&quot;$('body')&#46;css('background-position', 'left bottom');&quot;)</code></pre><br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Other Tricks</span></span><br/><br/>&quot;Classic&quot; look:<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=4760&amp;hilit=background&amp;start=15#p31389\">viewtopic.php?f=10&amp;t=4760&amp;hilit=background&amp;start=15#p31389</a><!-- l --><br/><br/>Make a certain letter disappear and reappear:<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=5121\">viewtopic.php?f=10&amp;t=5121</a><!-- l --><br/><br/>Blurring text (getting drunk):<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=4947\">viewtopic.php?f=10&amp;t=4947</a><!-- l --><br/><br/>Injecting stylesheets (CSS in a string attribute on the game object):<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4747\">viewtopic.php?f=18&amp;t=4747</a><!-- l --><br/><br/>Adding command links to the bottom of the screen:<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4681\">viewtopic.php?f=18&amp;t=4681</a><!-- l --><br/><br/>JQuery dialogue box:<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4822\">viewtopic.php?f=18&amp;t=4822</a><!-- l --><br/><br/>Additional inventory pane:<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=3789\">viewtopic.php?f=18&amp;t=3789</a><!-- l --><br/><br/>Adding a progress bar<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5770\">viewtopic.php?f=18&amp;t=5770</a><!-- l --><br/><br/>Image fade-in<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=5796&amp;p=40225#p40192\">viewtopic.php?f=10&amp;t=5796&amp;p=40225#p40192</a><!-- l --><br/><br/>Control how images are displayed<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5566\">viewtopic.php?f=18&amp;t=5566</a><!-- l --><br/><br/>Create images on the fly<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5875\">viewtopic.php?f=18&amp;t=5875</a><!-- l -->",
      "PostDate": "2015-03-17T10:29:08+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "35439",
      "UserId": 0,
      "Username": "Forgewright",
      "UserAvatar": "6526_1436782372.jpg",
      "UserGravatar": "7cd39eda147e41376a7192dbd0bb386e",
      "EditableText": "ohh, This is a nice little nugget of knowledge......",
      "EditableFormat": "bbcode",
      "HTML": "ohh, This is a nice little nugget of knowledge......",
      "PostDate": "2015-03-22T20:00:13+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "35440",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "just to add this link here, as it goes better with Pixie's GUI modification guide, than not realizing it as another thread (never knowing about it, and it show-cases a cool design (this person did a good job):\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4410\">viewtopic.php?f=18&amp;t=4410</a><!-- l -->\n\npretty impressive colors+design used, at least if you like black (my fav color), lol <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "EditableFormat": "bbcode",
      "HTML": "just to add this link here, as it goes better with Pixie's GUI modification guide, than not realizing it as another thread (never knowing about it, and it show-cases a cool design (this person did a good job):<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4410\">viewtopic.php?f=18&amp;t=4410</a><!-- l --><br/><br/>pretty impressive colors+design used, at least if you like black (my fav color), lol <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "PostDate": "2015-03-22T21:05:12+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "36310",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "I have had a play around with some JavaScript, and created a tiny example game with commands above the panes on the right, and a help pop-up. You can see it in action here:\n\n<!-- m --><a class=\"postlink\" href=\"http://textadventures.co.uk/games/view/aspfn1yddk6i6cllr5xapa/ui-example\">http://textadventures.co.uk/games/view/ ... ui-example</a><!-- m -->\n\nMy motivation was to keep the narrative flowing. There is no chance for the player to mistype something and with [url=http&#58;//forum&#46;textadventures&#46;co&#46;uk/viewtopic&#46;php?f=18&amp;t=5023:18tcqbeo]careful use of verbs[/url:18tcqbeo] you can ensure that the player has no opportunity to try something the parser cannot handle. Everything the player sees in the output is what happens to the player character in the game world.\n\nHere is the code:\n[code:18tcqbeo]&lt;!--Saved by Quest 5&#46;6&#46;5510&#46;29036--&gt;\n&lt;asl version=&quot;550&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;UI Example&quot;&gt;\n    &lt;gameid&gt;df6b8f30-03fa-444f-9a57-639b6dc5ceee&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2015&lt;/firstpublished&gt;\n    &lt;stuff&gt;&lt;!&#91;CDATA&#91;\n       &lt;div id=&quot;spacer&quot;&gt;\n            &lt;br/&gt;\n            &lt;br/&gt;\n            &lt;br/&gt;\n       &lt;/div&gt;\n       &lt;div id=&quot;command_buttons&quot; style=&quot;border&#58;#79b7e7 thin solid; padding&#58; 5px;font-weight&#58; bold;border-radius&#58; 5px;text-align&#58;center;margin-top&#58;50 px;&quot;&gt;\n            &lt;span id=&quot;look_button&quot;  class=&quot;ui-widget&quot;&gt;&lt;a id=&quot;verblink1&quot; style=&quot;text-decoration&#58; none;color&#58;Orange;font-size&#58;12pt;&quot; class=&quot;cmdlink commandlink&quot; data-elementid=&quot;look&quot; data-command=&quot;look&quot;&gt;Look&lt;/a&gt;&lt;/span&gt;\n            &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\n            &lt;span id=&quot;wait_button&quot;  class=&quot;ui-widget&quot;&gt;&lt;a id=&quot;verblink1&quot; style=&quot;text-decoration&#58; none;color&#58;Orange;font-size&#58;12pt;&quot; class=&quot;cmdlink commandlink&quot; data-elementid=&quot;wait&quot; data-command=&quot;wait&quot;&gt;Wait&lt;/a&gt;&lt;/span&gt;\n            &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\n            &lt;span id=&quot;help_button&quot;  class=&quot;ui-widget&quot;&gt;&lt;a id=&quot;verblink1&quot; style=&quot;text-decoration&#58; none;color&#58;Orange;font-size&#58;12pt;&quot; class=&quot;cmdlink commandlink&quot; data-elementid=&quot;help&quot; data-command=&quot;help&quot;&gt;Help&lt;/a&gt;&lt;/span&gt;\n       &lt;/div&gt;\n       &lt;div id=&quot;dialog_window_1&quot; class=&quot;dialog_window&quot; title=&quot;Help&quot;&gt;\n            &lt;p id=&quot;page0&quot;&gt;Welcome to &lt;i&gt;UI Example&lt;/i&gt; help system&#46; Click the buttons at the bottom to see different stuff!&lt;/p&gt;\n            &lt;p id=&quot;page1&quot; style=&quot;display&#58;none;&quot;&gt;Click on an object or person in the lists on the right to see what actions you can perform with them&#46;&lt;br/&gt;&lt;br/&gt;If you are reading this, you probably already found the &lt;i&gt;HELP&lt;/i&gt; coomand, with &lt;i&gt;LOOK&lt;/i&gt; and &lt;i&gt;WAIT&lt;/i&gt;&#46;&lt;/p&gt;\n            &lt;p id=&quot;page2&quot; style=&quot;display&#58;none;&quot;&gt;Just try clicking stuff&#46; Seriously, how hard can it be?&lt;/p&gt;\n            &lt;p id=&quot;page3&quot; style=&quot;display&#58;none;&quot;&gt;Created by The Pixie&#46;&lt;br/&gt;&lt;br/&gt;Thanks to Alex Warren for creating Quest, and to members of the forum for various bits of code, in particular The Pixie for this interface stuff (bits of which originate with Jay Nabonne)&#46;&lt;br/&gt;&lt;br/&gt;Feel free to use and abuse this in your own games!&lt;/p&gt;\n       &lt;/div&gt;\n       &lt;script&gt;\n            function setPage(page) {\n                $('#page0')&#46;css('display', 'none');\n                $('#page1')&#46;css('display', 'none');\n                $('#page2')&#46;css('display', 'none');\n                $('#page3')&#46;css('display', 'none');\n                $('#page' + page)&#46;css('display', 'block');\n            }\n       \n            $(document)&#46;ready(function () {\n                $('#dialog_window_1')&#46;dialog({\n\t                autoOpen&#58; false,\n                   height&#58; 400,\n                   width&#58; 640,\n                   buttons&#58; {\n\t                   &quot;Intro&quot;&#58; function() { setPage(0);},\n\t                   &quot;Commands&quot;&#58; function() { setPage(1);},  \n\t                   &quot;Hints&quot;&#58; function() { setPage(2);},  \n\t                   &quot;Credits&quot;&#58; function() { setPage(3);},  \n\t                   &quot;Done&quot;&#58; function() { $(this)&#46;dialog(&quot;close&quot;);} \n\t               }\n               });\n            });\n       &lt;/script&gt;\n            &#93;&#93;&gt;&lt;/stuff&gt;\n    &lt;showcommandbar type=&quot;boolean&quot;&gt;false&lt;/showcommandbar&gt;\n    &lt;autodescription type=&quot;boolean&quot;&gt;false&lt;/autodescription&gt;\n    &lt;echohyperlinks type=&quot;boolean&quot;&gt;false&lt;/echohyperlinks&gt;\n    &lt;autodisplayverbs type=&quot;boolean&quot;&gt;false&lt;/autodisplayverbs&gt;\n    &lt;start type=&quot;script&quot;&gt;\n      OutputTextNoBr (game&#46;stuff)\n      JS&#46;eval (&quot;$('#spacer')&#46;insertBefore('#inventoryLabel')&quot;)\n      JS&#46;eval (&quot;$('#command_buttons')&#46;insertBefore('#inventoryLabel')&quot;)\n      JS&#46;eval (&quot;$('#compassLabel')&#46;insertBefore('#inventoryLabel')&quot;)\n      JS&#46;eval (&quot;$('#compassAccordion')&#46;insertBefore('#inventoryLabel')&quot;)\n      JS&#46;eval (&quot;$('#statusVarsLabel')&#46;insertBefore('#inventoryLabel')&quot;)\n      JS&#46;eval (&quot;$('#statusVarsAccordion')&#46;insertBefore('#inventoryLabel')&quot;)\n      request (SetInterfaceString, &quot;PlacesObjectsLabel=People and Objects&quot;)\n      request (Hide, &quot;Command&quot;)\n      game&#46;echocommand = false\n    &lt;/start&gt;\n    &lt;author&gt;The Pixie&lt;/author&gt;\n  &lt;/game&gt;\n  &lt;command&gt;\n    &lt;pattern&gt;help&lt;/pattern&gt;\n    &lt;script&gt;\n      JS&#46;eval (&quot;$('#dialog_window_1')&#46;dialog('open')&quot;)\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;object name=&quot;big_room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;description&gt;This is a big room with lots of space&#46;&lt;/description&gt;\n    &lt;alias&gt;Big Room&lt;/alias&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=&quot;south&quot; to=&quot;small_room&quot;&gt;\n      &lt;inherit name=&quot;southdirection&quot; /&gt;\n    &lt;/exit&gt;\n    &lt;object name=&quot;teapot&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;alias&gt;Teapot&lt;/alias&gt;\n      &lt;take /&gt;\n      &lt;look&gt;A funny little teapot with a broken spout&#46;&lt;/look&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;small_room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;description&gt;A room so small you barely fit in it&#46;&lt;/description&gt;\n    &lt;alias&gt;Small room&lt;/alias&gt;\n    &lt;exit alias=&quot;north&quot; to=&quot;big_room&quot;&gt;\n      &lt;inherit name=&quot;northdirection&quot; /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;[/code:18tcqbeo]",
      "EditableFormat": "bbcode",
      "HTML": "I have had a play around with some JavaScript, and created a tiny example game with commands above the panes on the right, and a help pop-up. You can see it in action here:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://textadventures.co.uk/games/view/aspfn1yddk6i6cllr5xapa/ui-example\">http://textadventures.co.uk/games/view/ ... ui-example</a><!-- m --><br/><br/>My motivation was to keep the narrative flowing. There is no chance for the player to mistype something and with <a href=\"http&#58;//forum&#46;textadventures&#46;co&#46;uk/viewtopic&#46;php?f=18&amp;t=5023\" rel=\"nofollow\">careful use of verbs</a> you can ensure that the player has no opportunity to try something the parser cannot handle. Everything the player sees in the output is what happens to the player character in the game world.<br/><br/>Here is the code:<br/><pre><code>&lt;!--Saved by Quest 5&#46;6&#46;5510&#46;29036--&gt;<br/>&lt;asl version=&quot;550&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;UI Example&quot;&gt;<br/>    &lt;gameid&gt;df6b8f30-03fa-444f-9a57-639b6dc5ceee&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2015&lt;/firstpublished&gt;<br/>    &lt;stuff&gt;&lt;!&#91;CDATA&#91;<br/>       &lt;div id=&quot;spacer&quot;&gt;<br/>            &lt;br/&gt;<br/>            &lt;br/&gt;<br/>            &lt;br/&gt;<br/>       &lt;/div&gt;<br/>       &lt;div id=&quot;command_buttons&quot; style=&quot;border&#58;#79b7e7 thin solid; padding&#58; 5px;font-weight&#58; bold;border-radius&#58; 5px;text-align&#58;center;margin-top&#58;50 px;&quot;&gt;<br/>            &lt;span id=&quot;look_button&quot;  class=&quot;ui-widget&quot;&gt;&lt;a id=&quot;verblink1&quot; style=&quot;text-decoration&#58; none;color&#58;Orange;font-size&#58;12pt;&quot; class=&quot;cmdlink commandlink&quot; data-elementid=&quot;look&quot; data-command=&quot;look&quot;&gt;Look&lt;/a&gt;&lt;/span&gt;<br/>            &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br/>            &lt;span id=&quot;wait_button&quot;  class=&quot;ui-widget&quot;&gt;&lt;a id=&quot;verblink1&quot; style=&quot;text-decoration&#58; none;color&#58;Orange;font-size&#58;12pt;&quot; class=&quot;cmdlink commandlink&quot; data-elementid=&quot;wait&quot; data-command=&quot;wait&quot;&gt;Wait&lt;/a&gt;&lt;/span&gt;<br/>            &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br/>            &lt;span id=&quot;help_button&quot;  class=&quot;ui-widget&quot;&gt;&lt;a id=&quot;verblink1&quot; style=&quot;text-decoration&#58; none;color&#58;Orange;font-size&#58;12pt;&quot; class=&quot;cmdlink commandlink&quot; data-elementid=&quot;help&quot; data-command=&quot;help&quot;&gt;Help&lt;/a&gt;&lt;/span&gt;<br/>       &lt;/div&gt;<br/>       &lt;div id=&quot;dialog_window_1&quot; class=&quot;dialog_window&quot; title=&quot;Help&quot;&gt;<br/>            &lt;p id=&quot;page0&quot;&gt;Welcome to &lt;i&gt;UI Example&lt;/i&gt; help system&#46; Click the buttons at the bottom to see different stuff!&lt;/p&gt;<br/>            &lt;p id=&quot;page1&quot; style=&quot;display&#58;none;&quot;&gt;Click on an object or person in the lists on the right to see what actions you can perform with them&#46;&lt;br/&gt;&lt;br/&gt;If you are reading this, you probably already found the &lt;i&gt;HELP&lt;/i&gt; coomand, with &lt;i&gt;LOOK&lt;/i&gt; and &lt;i&gt;WAIT&lt;/i&gt;&#46;&lt;/p&gt;<br/>            &lt;p id=&quot;page2&quot; style=&quot;display&#58;none;&quot;&gt;Just try clicking stuff&#46; Seriously, how hard can it be?&lt;/p&gt;<br/>            &lt;p id=&quot;page3&quot; style=&quot;display&#58;none;&quot;&gt;Created by The Pixie&#46;&lt;br/&gt;&lt;br/&gt;Thanks to Alex Warren for creating Quest, and to members of the forum for various bits of code, in particular The Pixie for this interface stuff (bits of which originate with Jay Nabonne)&#46;&lt;br/&gt;&lt;br/&gt;Feel free to use and abuse this in your own games!&lt;/p&gt;<br/>       &lt;/div&gt;<br/>       &lt;script&gt;<br/>            function setPage(page) {<br/>                $('#page0')&#46;css('display', 'none');<br/>                $('#page1')&#46;css('display', 'none');<br/>                $('#page2')&#46;css('display', 'none');<br/>                $('#page3')&#46;css('display', 'none');<br/>                $('#page' + page)&#46;css('display', 'block');<br/>            }<br/>       <br/>            $(document)&#46;ready(function () {<br/>                $('#dialog_window_1')&#46;dialog({<br/>\t                autoOpen&#58; false,<br/>                   height&#58; 400,<br/>                   width&#58; 640,<br/>                   buttons&#58; {<br/>\t                   &quot;Intro&quot;&#58; function() { setPage(0);},<br/>\t                   &quot;Commands&quot;&#58; function() { setPage(1);},  <br/>\t                   &quot;Hints&quot;&#58; function() { setPage(2);},  <br/>\t                   &quot;Credits&quot;&#58; function() { setPage(3);},  <br/>\t                   &quot;Done&quot;&#58; function() { $(this)&#46;dialog(&quot;close&quot;);} <br/>\t               }<br/>               });<br/>            });<br/>       &lt;/script&gt;<br/>            &#93;&#93;&gt;&lt;/stuff&gt;<br/>    &lt;showcommandbar type=&quot;boolean&quot;&gt;false&lt;/showcommandbar&gt;<br/>    &lt;autodescription type=&quot;boolean&quot;&gt;false&lt;/autodescription&gt;<br/>    &lt;echohyperlinks type=&quot;boolean&quot;&gt;false&lt;/echohyperlinks&gt;<br/>    &lt;autodisplayverbs type=&quot;boolean&quot;&gt;false&lt;/autodisplayverbs&gt;<br/>    &lt;start type=&quot;script&quot;&gt;<br/>      OutputTextNoBr (game&#46;stuff)<br/>      JS&#46;eval (&quot;$('#spacer')&#46;insertBefore('#inventoryLabel')&quot;)<br/>      JS&#46;eval (&quot;$('#command_buttons')&#46;insertBefore('#inventoryLabel')&quot;)<br/>      JS&#46;eval (&quot;$('#compassLabel')&#46;insertBefore('#inventoryLabel')&quot;)<br/>      JS&#46;eval (&quot;$('#compassAccordion')&#46;insertBefore('#inventoryLabel')&quot;)<br/>      JS&#46;eval (&quot;$('#statusVarsLabel')&#46;insertBefore('#inventoryLabel')&quot;)<br/>      JS&#46;eval (&quot;$('#statusVarsAccordion')&#46;insertBefore('#inventoryLabel')&quot;)<br/>      request (SetInterfaceString, &quot;PlacesObjectsLabel=People and Objects&quot;)<br/>      request (Hide, &quot;Command&quot;)<br/>      game&#46;echocommand = false<br/>    &lt;/start&gt;<br/>    &lt;author&gt;The Pixie&lt;/author&gt;<br/>  &lt;/game&gt;<br/>  &lt;command&gt;<br/>    &lt;pattern&gt;help&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      JS&#46;eval (&quot;$('#dialog_window_1')&#46;dialog('open')&quot;)<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;object name=&quot;big_room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;description&gt;This is a big room with lots of space&#46;&lt;/description&gt;<br/>    &lt;alias&gt;Big Room&lt;/alias&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>    &lt;exit alias=&quot;south&quot; to=&quot;small_room&quot;&gt;<br/>      &lt;inherit name=&quot;southdirection&quot; /&gt;<br/>    &lt;/exit&gt;<br/>    &lt;object name=&quot;teapot&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;alias&gt;Teapot&lt;/alias&gt;<br/>      &lt;take /&gt;<br/>      &lt;look&gt;A funny little teapot with a broken spout&#46;&lt;/look&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;small_room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;description&gt;A room so small you barely fit in it&#46;&lt;/description&gt;<br/>    &lt;alias&gt;Small room&lt;/alias&gt;<br/>    &lt;exit alias=&quot;north&quot; to=&quot;big_room&quot;&gt;<br/>      &lt;inherit name=&quot;northdirection&quot; /&gt;<br/>    &lt;/exit&gt;<br/>  &lt;/object&gt;<br/>&lt;/asl&gt;</code></pre>",
      "PostDate": "2015-06-01T14:34:08+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36437",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Here is a way to add CSS into a game, devised by [url=http&#58;//forum&#46;textadventures&#46;co&#46;uk/viewtopic&#46;php?f=18&amp;t=4747&amp;p=32949&amp;hilit=css#p32949:1vii2byk]Jay Nabonne[/url:1vii2byk].\n\nYou need to add a couple of functions to your game (go to [i:1vii2byk]Tools - Code view[/i:1vii2byk], and insert this code just [i:1vii2byk]above [/i:1vii2byk]the very last line).\n[code:1vii2byk]  &lt;function name=&quot;addStyleSheet&quot; parameters=&quot;css&quot;&gt;\n    AddExternalStylesheet (&quot;data&#58;text/css,&quot; + urlEncode(css))\n  &lt;/function&gt;\n  &lt;function name=&quot;urlEncode&quot; parameters=&quot;s&quot; type=&quot;string&quot;&gt;&lt;!&#91;CDATA&#91;\n    s = Replace(s, &quot;%&quot;, &quot;%25&quot;)\n    s = Replace(s, &quot; &quot;, &quot;%20&quot;)\n    s = Replace(s, &quot;\\&quot;&quot;, &quot;%22&quot;)\n    s = Replace(s, &quot;#&quot;, &quot;%23&quot;)\n    s = Replace(s, &quot;$&quot;, &quot;%24&quot;)\n    s = Replace(s, &quot;&amp;&quot;, &quot;%26&quot;)\n    s = Replace(s, &quot;'&quot;, &quot;%27&quot;)\n    s = Replace(s, &quot;,&quot;, &quot;%2C&quot;)\n    s = Replace(s, &quot;&#58;&quot;, &quot;%3A&quot;)\n    s = Replace(s, &quot;;&quot;, &quot;%3B&quot;)\n    s = Replace(s, &quot;&lt;&quot;, &quot;%3C&quot;)\n    s = Replace(s, &quot;=&quot;, &quot;%3D&quot;)\n    s = Replace(s, &quot;&gt;&quot;, &quot;%3E&quot;)\n    s = Replace(s, &quot;&gt;&quot;, &quot;%3F&quot;)\n    s = Replace(s, &quot;{&quot;, &quot;%7B&quot;)\n      s = Replace(s, &quot;}&quot;, &quot;%7D&quot;)\n    return (s)\n  &#93;&#93;&gt;&lt;/function&gt;[/code:1vii2byk]\nPut your CSS into a string attribute; an attribute called &quot;css&quot; on the game object for example.\n[code:1vii2byk]    &lt;css&gt;\n        img {\n          float&#58;left;\n          padding&#58;5px;\n        }\n        body {\n          background-color&#58;yellow;\n        }\n    &lt;/css&gt;[/code:1vii2byk]\nThen you can do this in the start script on the game object:\n[code:1vii2byk]addStyleSheet (game&#46;css)[/code:1vii2byk]\nAlternatively, you can put the data in a standard CSS file, and then retrieve it using GetFileData.\n[code:1vii2byk]addStyleSheet (GetFileData(&quot;styles&#46;css&quot;))[/code:1vii2byk]",
      "EditableFormat": "bbcode",
      "HTML": "Here is a way to add CSS into a game, devised by <a href=\"http&#58;//forum&#46;textadventures&#46;co&#46;uk/viewtopic&#46;php?f=18&amp;t=4747&amp;p=32949&amp;hilit=css#p32949\" rel=\"nofollow\">Jay Nabonne</a>.<br/><br/>You need to add a couple of functions to your game (go to <span style=\"font-style:italic;\">Tools - Code view</span>, and insert this code just <span style=\"font-style:italic;\">above </span>the very last line).<br/><pre><code>  &lt;function name=&quot;addStyleSheet&quot; parameters=&quot;css&quot;&gt;<br/>    AddExternalStylesheet (&quot;data&#58;text/css,&quot; + urlEncode(css))<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;urlEncode&quot; parameters=&quot;s&quot; type=&quot;string&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    s = Replace(s, &quot;%&quot;, &quot;%25&quot;)<br/>    s = Replace(s, &quot; &quot;, &quot;%20&quot;)<br/>    s = Replace(s, &quot;\\&quot;&quot;, &quot;%22&quot;)<br/>    s = Replace(s, &quot;#&quot;, &quot;%23&quot;)<br/>    s = Replace(s, &quot;$&quot;, &quot;%24&quot;)<br/>    s = Replace(s, &quot;&amp;&quot;, &quot;%26&quot;)<br/>    s = Replace(s, &quot;'&quot;, &quot;%27&quot;)<br/>    s = Replace(s, &quot;,&quot;, &quot;%2C&quot;)<br/>    s = Replace(s, &quot;&#58;&quot;, &quot;%3A&quot;)<br/>    s = Replace(s, &quot;;&quot;, &quot;%3B&quot;)<br/>    s = Replace(s, &quot;&lt;&quot;, &quot;%3C&quot;)<br/>    s = Replace(s, &quot;=&quot;, &quot;%3D&quot;)<br/>    s = Replace(s, &quot;&gt;&quot;, &quot;%3E&quot;)<br/>    s = Replace(s, &quot;&gt;&quot;, &quot;%3F&quot;)<br/>    s = Replace(s, &quot;{&quot;, &quot;%7B&quot;)<br/>      s = Replace(s, &quot;}&quot;, &quot;%7D&quot;)<br/>    return (s)<br/>  &#93;&#93;&gt;&lt;/function&gt;</code></pre><br/>Put your CSS into a string attribute; an attribute called &quot;css&quot; on the game object for example.<br/><pre><code>    &lt;css&gt;<br/>        img {<br/>          float&#58;left;<br/>          padding&#58;5px;<br/>        }<br/>        body {<br/>          background-color&#58;yellow;<br/>        }<br/>    &lt;/css&gt;</code></pre><br/>Then you can do this in the start script on the game object:<br/><pre><code>addStyleSheet (game&#46;css)</code></pre><br/>Alternatively, you can put the data in a standard CSS file, and then retrieve it using GetFileData.<br/><pre><code>addStyleSheet (GetFileData(&quot;styles&#46;css&quot;))</code></pre>",
      "PostDate": "2015-06-13T12:01:11+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "41062",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[b:18ta5dwt][i:18ta5dwt]How to add a status box[/i:18ta5dwt][/b:18ta5dwt]\n\nSo you want to display some kind of status values in a cool way (say like [url=http&#58;//textadventures&#46;co&#46;uk/games/view/em15b32xd0o-y-ysvgrtcg/deeper:18ta5dwt]this[/url:18ta5dwt]). There are two parts to the process, the first is to put the box on the screen, the second is updating it during the game. Some knowledge of CSS is going to be useful here!\n\n\n[b:18ta5dwt][i:18ta5dwt]Putting the box on the screen[/i:18ta5dwt][/b:18ta5dwt]\n\nFor the first part we have to go to [i:18ta5dwt]File - Code view[/i:18ta5dwt], which generally I would advise against, but here is is necessary. At the top you will see something like this:\n[code:18ta5dwt]&lt;asl version=&quot;550&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;test&quot;&gt;[/code:18ta5dwt]\nThere may be more lines if you have added libraries (or are using another language), and the name will be different. You need to insert this text into the very next line:\n[code:18ta5dwt]    &lt;statusbox&gt;&lt;!&#91;CDATA&#91;\n       &lt;div id=&quot;status_div&quot; style=&quot;padding&#58; 5px;font-weight&#58; bold;border-radius&#58; 5px;text-align&#58;center;margin-top&#58;50 px;color&#58;maroon;font-size&#58;14pt;position&#58;fixed;left&#58;5px;top&#58;40px;border&#58;grey solid thin;background-color&#58;#FCF0EA;width&#58;200px;&quot;&gt;\n         This is your status!\n       &lt;/div&gt;\n        &#93;&#93;&gt;&lt;/statusbox&gt;[/code:18ta5dwt]\nBy the way, if you have to come back and edit this later, you may find Quest has moved it down a bit; if it has, that is not a problem, you can leave it there, and edit away.\n\nNow go back to the GUI. Go to the Script tab of the game object, and add this as your starting script&#058;\n[code:18ta5dwt]OutputTextNoBr (game&#46;statusbox)[/code:18ta5dwt]\nGo in game, and you should see your new status box at the top left.\n\nUsually you put fancy formatting stuff in [i:18ta5dwt]InitUserInterface[/i:18ta5dwt], but in this case we are printing to screen, not styling existing content.\n\n\n[b:18ta5dwt][i:18ta5dwt]How does it work?[/i:18ta5dwt][/b:18ta5dwt]\n\nThe [i:18ta5dwt]OutputTextNoBr [/i:18ta5dwt]just prints out the text; you can use [i:18ta5dwt]msg[/i:18ta5dwt], and get the same effect, but you will get a new line at the end. The text that is printed out is a new HTML DIV, i.e., a section of text that we can format. It is given the name (or [i:18ta5dwt]id[/i:18ta5dwt]) &quot;status_div&quot;, so we can handle it later. It is also given a bunch of CSS styling.\n\nThe important stylings are &quot;position&quot;, &quot;left&quot; and &quot;top&quot;. The &quot;position&quot; is set to &quot;fixed&quot;, so this text area will have the same position on the screen all the time. The &quot;left&quot; and &quot;top&quot; are used to define what that position is (and you can also use &quot;right&quot; and &quot;bottom&quot; to set it relative to the right or bottom).\n\nThe rest of the styling gives a nice border, etc. Giving it a &quot;width&quot; means it stays the same size when the text changes (you might want to add a &quot;height&quot; too).\n\n\n[b:18ta5dwt][i:18ta5dwt]Updating[/i:18ta5dwt][/b:18ta5dwt]\n\nTo change the status, we can use a JQuery method called [i:18ta5dwt]html[/i:18ta5dwt], which changes the content of an HTML element. The JavaScript looks like this:\n\n$('#status_div').html('The status has changed!');\n\nFor Quest, to change the status to the value of a string, s, do this:\n[code:18ta5dwt]JS&#46;eval (&quot;$('#status_div')&#46;html('&quot; + s + &quot;');&quot;)[/code:18ta5dwt]\nProbably the best way is to create a new function, [i:18ta5dwt]UpdateStatus[/i:18ta5dwt], set its return type to none, give is a single parameter, s, then paste the above code into the script. Now you can do this:\n[code:18ta5dwt]UpdateStatus(&quot;You are feeling hungry&quot;)[/code:18ta5dwt]\n\n\n[b:18ta5dwt][i:18ta5dwt]Finally[/i:18ta5dwt][/b:18ta5dwt]\n\nIf you put the status bar at the bottom, you should change the margin of the gameContent element. All the text gets output into this, and you do not want it appearing behind your status box, so set the bottom margin to perhaps 70 px in [i:18ta5dwt]InitUserInterface[/i:18ta5dwt]:\n[code:18ta5dwt]JS&#46;eval(&quot;$('#gameContent')&#46;css('margin-bottom', '70px');&quot;)[/code:18ta5dwt]",
      "EditableFormat": "bbcode",
      "HTML": "<span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">How to add a status box</span></span><br/><br/>So you want to display some kind of status values in a cool way (say like <a href=\"http&#58;//textadventures&#46;co&#46;uk/games/view/em15b32xd0o-y-ysvgrtcg/deeper\" rel=\"nofollow\">this</a>). There are two parts to the process, the first is to put the box on the screen, the second is updating it during the game. Some knowledge of CSS is going to be useful here!<br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Putting the box on the screen</span></span><br/><br/>For the first part we have to go to <span style=\"font-style:italic;\">File - Code view</span>, which generally I would advise against, but here is is necessary. At the top you will see something like this:<br/><pre><code>&lt;asl version=&quot;550&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;test&quot;&gt;</code></pre><br/>There may be more lines if you have added libraries (or are using another language), and the name will be different. You need to insert this text into the very next line:<br/><pre><code>    &lt;statusbox&gt;&lt;!&#91;CDATA&#91;<br/>       &lt;div id=&quot;status_div&quot; style=&quot;padding&#58; 5px;font-weight&#58; bold;border-radius&#58; 5px;text-align&#58;center;margin-top&#58;50 px;color&#58;maroon;font-size&#58;14pt;position&#58;fixed;left&#58;5px;top&#58;40px;border&#58;grey solid thin;background-color&#58;#FCF0EA;width&#58;200px;&quot;&gt;<br/>         This is your status!<br/>       &lt;/div&gt;<br/>        &#93;&#93;&gt;&lt;/statusbox&gt;</code></pre><br/>By the way, if you have to come back and edit this later, you may find Quest has moved it down a bit; if it has, that is not a problem, you can leave it there, and edit away.<br/><br/>Now go back to the GUI. Go to the Script tab of the game object, and add this as your starting script&#058;<br/><pre><code>OutputTextNoBr (game&#46;statusbox)</code></pre><br/>Go in game, and you should see your new status box at the top left.<br/><br/>Usually you put fancy formatting stuff in <span style=\"font-style:italic;\">InitUserInterface</span>, but in this case we are printing to screen, not styling existing content.<br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">How does it work?</span></span><br/><br/>The <span style=\"font-style:italic;\">OutputTextNoBr </span>just prints out the text; you can use <span style=\"font-style:italic;\">msg</span>, and get the same effect, but you will get a new line at the end. The text that is printed out is a new HTML DIV, i.e., a section of text that we can format. It is given the name (or <span style=\"font-style:italic;\">id</span>) &quot;status_div&quot;, so we can handle it later. It is also given a bunch of CSS styling.<br/><br/>The important stylings are &quot;position&quot;, &quot;left&quot; and &quot;top&quot;. The &quot;position&quot; is set to &quot;fixed&quot;, so this text area will have the same position on the screen all the time. The &quot;left&quot; and &quot;top&quot; are used to define what that position is (and you can also use &quot;right&quot; and &quot;bottom&quot; to set it relative to the right or bottom).<br/><br/>The rest of the styling gives a nice border, etc. Giving it a &quot;width&quot; means it stays the same size when the text changes (you might want to add a &quot;height&quot; too).<br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Updating</span></span><br/><br/>To change the status, we can use a JQuery method called <span style=\"font-style:italic;\">html</span>, which changes the content of an HTML element. The JavaScript looks like this:<br/><br/>$('#status_div').html('The status has changed!');<br/><br/>For Quest, to change the status to the value of a string, s, do this:<br/><pre><code>JS&#46;eval (&quot;$('#status_div')&#46;html('&quot; + s + &quot;');&quot;)</code></pre><br/>Probably the best way is to create a new function, <span style=\"font-style:italic;\">UpdateStatus</span>, set its return type to none, give is a single parameter, s, then paste the above code into the script. Now you can do this:<br/><pre><code>UpdateStatus(&quot;You are feeling hungry&quot;)</code></pre><br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Finally</span></span><br/><br/>If you put the status bar at the bottom, you should change the margin of the gameContent element. All the text gets output into this, and you do not want it appearing behind your status box, so set the bottom margin to perhaps 70 px in <span style=\"font-style:italic;\">InitUserInterface</span>:<br/><pre><code>JS&#46;eval(&quot;$('#gameContent')&#46;css('margin-bottom', '70px');&quot;)</code></pre>",
      "PostDate": "2016-01-29T08:57:54+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "41118",
      "UserId": 0,
      "Username": "jung706",
      "UserAvatar": null,
      "UserGravatar": "4e84b8a4fba11f2e7863ac60d463322f",
      "EditableText": "Let's say I started a gamebook game and I wanted to add a file image as background. How would i do that? I'm not a smart man and I was confused by all the code talk <!-- s:?: --><img src=\"{SMILIES_PATH}/icon_question.gif\" alt=\":?:\" title=\"Question\" /><!-- s:?: -->",
      "EditableFormat": "bbcode",
      "HTML": "Let's say I started a gamebook game and I wanted to add a file image as background. How would i do that? I'm not a smart man and I was confused by all the code talk <!-- s:?: --><img src=\"{SMILIES_PATH}/icon_question.gif\" alt=\":?:\" title=\"Question\" /><!-- s:?: -->",
      "PostDate": "2016-02-05T21:14:18+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "41157",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Game books have a very stripped-down engine, designed to keep them simple, but makes it more complicated when you try to do anything fancy. As far as I can see your best option is to modify the existing InitInterface function; game books do not seem to have a InitUserFunction. You would only be able to do that if you are working off-line, as the on-line editor has its own set of restrictions, but the basic principles are the same as above.",
      "EditableFormat": "bbcode",
      "HTML": "Game books have a very stripped-down engine, designed to keep them simple, but makes it more complicated when you try to do anything fancy. As far as I can see your best option is to modify the existing InitInterface function; game books do not seem to have a InitUserFunction. You would only be able to do that if you are working off-line, as the on-line editor has its own set of restrictions, but the basic principles are the same as above.",
      "PostDate": "2016-02-10T14:40:12+00:00",
      "LastEditDate": null
    }
  ]
}