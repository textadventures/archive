{
  "Topic": {
    "TopicId": "3154",
    "ForumId": "18",
    "Title": "Ubiquitous objects",
    "LastUpdated": "2012-09-05T20:43:10+01:00",
    "ReplyCount": 20
  },
  "Posts": [
    {
      "PostId": "21190",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Players are awkward things, and for no reason at all they will try to interact with anything you mention, and indeed things you do not mention, in your rooms. It would be great if Quest had a way to catch this. For example, the player may decide to look at the wall or the sky, and it would be far better to have an appropriate response rather than to get an error message back.\n\nInform does this though what it calls &quot;backdrops&quot; (see [url=http&#58;//inform7&#46;com/learn/man/doc129&#46;html:3tb4lexc]here[/url:3tb4lexc]), and I would like to think about how something similar could be done in Quest.\n\nThese objects would all be visible, but not takeable, and they would all be common to many (but perhaps not all) rooms. Here are my thoughts:\n\nThere would seem to be potentially two mechanisms for handling these objects. The first is to use object types, and put the scenery object in a object type (so a room could have the &quot;cave&quot; type, which has a cave wall object. Unfortunately you cannot put objects into object types, so that is out.\n\nThe second is to have rooms inside regions (which are really just rooms). The scenery objects go into the regions, and the scope methods check for objects in the parent (or indeed any ancester) room if appropriate.  So inside the &quot;Object&quot; object, you might have &quot;inside region&quot; and &quot;outside region&quot;, and in &quot;inside region&quot; you have &quot;cave region&quot;, and inside that you have &quot;cave entrance&quot;. The player can only get to the &quot;cave entrance&quot; room, but could look at any object in &quot;inside region&quot;, &quot;cave region&quot; and &quot;cave entrance&quot;.\n\n\nGiven these objects are not reachable (at least, not takeable), not held, are scenery and are visible they should appear in these lists:\n\nScopeVisible\nScopeVisibleForRoom\nScopeVisibleNotHeld\nScopeVisibleNotHeldForRoom\nScopeVisibleNotReachable\nScopeVisibleNotReachableForRoom\n\nAs far as I can see, these all ultimately rely on the last, so it would only be that one that needs changing. I will have a go at making a new version of ScopeVisibleNotReachableForRoom, but first I thought I would see what others think.",
      "EditableFormat": "bbcode",
      "HTML": "Players are awkward things, and for no reason at all they will try to interact with anything you mention, and indeed things you do not mention, in your rooms. It would be great if Quest had a way to catch this. For example, the player may decide to look at the wall or the sky, and it would be far better to have an appropriate response rather than to get an error message back.<br/><br/>Inform does this though what it calls &quot;backdrops&quot; (see <a href=\"http&#58;//inform7&#46;com/learn/man/doc129&#46;html\" rel=\"nofollow\">here</a>), and I would like to think about how something similar could be done in Quest.<br/><br/>These objects would all be visible, but not takeable, and they would all be common to many (but perhaps not all) rooms. Here are my thoughts:<br/><br/>There would seem to be potentially two mechanisms for handling these objects. The first is to use object types, and put the scenery object in a object type (so a room could have the &quot;cave&quot; type, which has a cave wall object. Unfortunately you cannot put objects into object types, so that is out.<br/><br/>The second is to have rooms inside regions (which are really just rooms). The scenery objects go into the regions, and the scope methods check for objects in the parent (or indeed any ancester) room if appropriate.  So inside the &quot;Object&quot; object, you might have &quot;inside region&quot; and &quot;outside region&quot;, and in &quot;inside region&quot; you have &quot;cave region&quot;, and inside that you have &quot;cave entrance&quot;. The player can only get to the &quot;cave entrance&quot; room, but could look at any object in &quot;inside region&quot;, &quot;cave region&quot; and &quot;cave entrance&quot;.<br/><br/><br/>Given these objects are not reachable (at least, not takeable), not held, are scenery and are visible they should appear in these lists:<br/><br/>ScopeVisible<br/>ScopeVisibleForRoom<br/>ScopeVisibleNotHeld<br/>ScopeVisibleNotHeldForRoom<br/>ScopeVisibleNotReachable<br/>ScopeVisibleNotReachableForRoom<br/><br/>As far as I can see, these all ultimately rely on the last, so it would only be that one that needs changing. I will have a go at making a new version of ScopeVisibleNotReachableForRoom, but first I thought I would see what others think.",
      "PostDate": "2012-08-13T14:04:10+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21191",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "It a good thing to start brainstorming about this problem!\n\nThere is already a way to do this. If you have an &quot;outer region&quot; room with an object and an &quot;inner region&quot;  in it, you can set the attribute &quot;transparent&quot;=true to the &quot;inner region&quot; then you can examine the object in the &quot;outer region&quot; from the &quot;inner region&quot;. But this messes up the room description and the take command <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->  . So I fear that only changing the visible scope is not enough. Perhaps this will mess up other thing like the container objects. \n\nPerhaps Alex should tell us, what would be the best way to do it",
      "EditableFormat": "bbcode",
      "HTML": "It a good thing to start brainstorming about this problem!<br/><br/>There is already a way to do this. If you have an &quot;outer region&quot; room with an object and an &quot;inner region&quot;  in it, you can set the attribute &quot;transparent&quot;=true to the &quot;inner region&quot; then you can examine the object in the &quot;outer region&quot; from the &quot;inner region&quot;. But this messes up the room description and the take command <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->  . So I fear that only changing the visible scope is not enough. Perhaps this will mess up other thing like the container objects. <br/><br/>Perhaps Alex should tell us, what would be the best way to do it",
      "PostDate": "2012-08-13T15:07:17+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21203",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "I am wondering if a better way than using the object hierarchy would be to go via an attribute, say environment. If the object is not in this location, check the location in the environment attribute, then check the location is that object's environment attribute.\n\nMy thinking is that it is useful to use the object hierarchy to break up a large game. You can collapse all the other regions when you focus on just the current one (and I did this with Myothioan Falcon). However, there might be caves in each region, there might be outside in each region, so the regions do not correspond.\n\nThe downside is that it would take slightly more effort to set up for a author, and is not as intuitive, but I think the long term benefits would outweigh that, bearing in mind this is only of interest to &quot;serious&quot; authors (and possibly only me!).",
      "EditableFormat": "bbcode",
      "HTML": "I am wondering if a better way than using the object hierarchy would be to go via an attribute, say environment. If the object is not in this location, check the location in the environment attribute, then check the location is that object's environment attribute.<br/><br/>My thinking is that it is useful to use the object hierarchy to break up a large game. You can collapse all the other regions when you focus on just the current one (and I did this with Myothioan Falcon). However, there might be caves in each region, there might be outside in each region, so the regions do not correspond.<br/><br/>The downside is that it would take slightly more effort to set up for a author, and is not as intuitive, but I think the long term benefits would outweigh that, bearing in mind this is only of interest to &quot;serious&quot; authors (and possibly only me!).",
      "PostDate": "2012-08-16T13:45:45+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21205",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "There is another question: Do you only want to examine objects in the outer region or should it be possible to manipulate them (take, use,...)?",
      "EditableFormat": "bbcode",
      "HTML": "There is another question: Do you only want to examine objects in the outer region or should it be possible to manipulate them (take, use,...)?",
      "PostDate": "2012-08-17T10:54:51+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21207",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "I was assuming you cannot take them. Are you thinking about a stick in a forest? I think if I was going to do that, I would still use the same system. You have your forest region, which contains a stick and a tree, so you can examine both. To be able to take the stick, I would put a special implementation of take on the stick so it spawns a clone in your inventory.\n\nHaving said that, that means they must be reachable, so the scoping is wrong. But if you have the stick as reachable, then take all will get you a stick. Hmm, maybe not so straightforward...\n\nThe other side is do you think players will expect to be able to &quot;take stick&quot; if they are in a forest, but no mention is made of sticks?",
      "EditableFormat": "bbcode",
      "HTML": "I was assuming you cannot take them. Are you thinking about a stick in a forest? I think if I was going to do that, I would still use the same system. You have your forest region, which contains a stick and a tree, so you can examine both. To be able to take the stick, I would put a special implementation of take on the stick so it spawns a clone in your inventory.<br/><br/>Having said that, that means they must be reachable, so the scoping is wrong. But if you have the stick as reachable, then take all will get you a stick. Hmm, maybe not so straightforward...<br/><br/>The other side is do you think players will expect to be able to &quot;take stick&quot; if they are in a forest, but no mention is made of sticks?",
      "PostDate": "2012-08-17T21:55:06+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21208",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "If you have several beach rooms you could use a bucket to take some water. But why only using scenery object? If you are in the forest,  a tree could be shown in the &quot;You can see&quot; list.",
      "EditableFormat": "bbcode",
      "HTML": "If you have several beach rooms you could use a bucket to take some water. But why only using scenery object? If you are in the forest,  a tree could be shown in the &quot;You can see&quot; list.",
      "PostDate": "2012-08-18T14:07:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21211",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "You are in a forest.\nYou can see a tree.\n\nThat seems  bit odd to me. You are in a forest, so of course there are trees. If this is unusual in some way, then sure:\n\nYou are in a forest.\nYou can see a gnarled oak tree with a power glyph carved in it.\n\nBut then it is not a ubiquitous oject, it is a specific object, so can be handled normally.\n\n\n\n&gt;fill bucket with water\n\nHow does Quest handle that command? Can it cope with the second object not being reachable (and allow te author to decide how it will be checked)? I woul guess so, but will have to check.",
      "EditableFormat": "bbcode",
      "HTML": "You are in a forest.<br/>You can see a tree.<br/><br/>That seems  bit odd to me. You are in a forest, so of course there are trees. If this is unusual in some way, then sure:<br/><br/>You are in a forest.<br/>You can see a gnarled oak tree with a power glyph carved in it.<br/><br/>But then it is not a ubiquitous oject, it is a specific object, so can be handled normally.<br/><br/><br/><br/>&gt;fill bucket with water<br/><br/>How does Quest handle that command? Can it cope with the second object not being reachable (and allow te author to decide how it will be checked)? I woul guess so, but will have to check.",
      "PostDate": "2012-08-18T19:46:35+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21212",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "[quote=&quot;The Pixie&quot;:2scq3hlf]That seems  bit odd to me. You are in a forest, so of course there are trees. [/quote:2scq3hlf]\nYes it may not work with a forest but when developing a gameengine you must think more global. What feature could be used by an user in any way. So here is an example where an object is used in several rooms:\n\nYou are in a spaceship.\nYou can see a cable which is attached to the metall ceiling.\n\n[quote=&quot;The Pixie&quot;:2scq3hlf]\n&gt;fill bucket with water\n\nHow does Quest handle that command? Can it cope with the second object not being reachable (and allow te author to decide how it will be checked)? I woul guess so, but will have to check.[/quote:2scq3hlf]\nWhy should the second object be not reachable?",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>The Pixie wrote:</cite>That seems  bit odd to me. You are in a forest, so of course there are trees. </blockquote><br/>Yes it may not work with a forest but when developing a gameengine you must think more global. What feature could be used by an user in any way. So here is an example where an object is used in several rooms:<br/><br/>You are in a spaceship.<br/>You can see a cable which is attached to the metall ceiling.<br/><br/><blockquote><cite>The Pixie wrote:</cite><br/>&gt;fill bucket with water<br/><br/>How does Quest handle that command? Can it cope with the second object not being reachable (and allow te author to decide how it will be checked)? I woul guess so, but will have to check.</blockquote><br/>Why should the second object be not reachable?",
      "PostDate": "2012-08-18T21:07:34+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21213",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote:h4h0cwsa]Yes it may not work with a forest but when developing a gameengine you must think more global. What feature could be used by an user in any way. So here is an example where an object is used in several rooms:\n\nYou are in a spaceship.\nYou can see a cable which is attached to the metall ceiling.[/quote:h4h0cwsa]\nIf it is listed explicitly like this (if you mean the cable), then I think it should be handled normally; an object inside this room. You take the cable in this room, it is then gone from this room, but is still present in the other rooms\n[quote:h4h0cwsa]Why should the second object be not reachable?[/quote:h4h0cwsa]\nOnly because that is how I am currently thinking of implementing ubiquious items - so their scope is &quot;visible&quot; but not &quot;reachable&quot;. You would want to have it so the water [i:h4h0cwsa]could[/i:h4h0cwsa] actually be reached (in the fill command perhaps: check the bucket is held, and the water is &quot;VisibleNotReachable&quot;; the water object never moves, but the status of the bucket changes).",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>Yes it may not work with a forest but when developing a gameengine you must think more global. What feature could be used by an user in any way. So here is an example where an object is used in several rooms:<br/><br/>You are in a spaceship.<br/>You can see a cable which is attached to the metall ceiling.</p></blockquote><br/>If it is listed explicitly like this (if you mean the cable), then I think it should be handled normally; an object inside this room. You take the cable in this room, it is then gone from this room, but is still present in the other rooms<br/><blockquote><p>Why should the second object be not reachable?</p></blockquote><br/>Only because that is how I am currently thinking of implementing ubiquious items - so their scope is &quot;visible&quot; but not &quot;reachable&quot;. You would want to have it so the water <span style=\"font-style:italic;\">could</span> actually be reached (in the fill command perhaps: check the bucket is held, and the water is &quot;VisibleNotReachable&quot;; the water object never moves, but the status of the bucket changes).",
      "PostDate": "2012-08-18T22:56:13+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21217",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Here is a first stab at this.\n\n[attachment=0:1q0hjn86]<!-- ia0 -->EnvironmentDemo.aslx<!-- ia0 -->[/attachment:1q0hjn86]\n\nI set up the environment by creating a room &quot;environment&quot;, and putting objects inside it representing each environment. Each room in the game can be linked to an environment object through the &quot;enviro&quot; attribute, and environment objects can link to each other in the same way.\n\nIf you pick up the cup and go w and w, you will be in a forest by a stream. This room is connected to e_forest_river (which has a water object), which is linked to e_forest (with a tree object), linked to e_outside (with a sky object). The player can look at any of these items.\n\nYou can fill the cup from the water here, showing the ability to interact with ubiquous items at least in some way.\n\nGo e and you can look at the odd tree, overriding the normal tree for e_forest.\n\nGo w and w, and the dance, and you change the sky for all outside rooms.\n\nYou can &quot;listen&quot; and &quot;smell&quot; in each room too.\n\n\nI have not tested this well, it may well be that when the game gets more complicated things break, so I offer this for comment at this stage not for use (not yey ready to be s[lit off into a library). We discussed ealier how to handle picking up a stick in the forest, and I am still not sure of the best way to do that (eg, do you let the player pick up as many sticks as he wants?).",
      "EditableFormat": "bbcode",
      "HTML": "Here is a first stab at this.<br/><br/><div><a href=\"/forumattachments/344/EnvironmentDemo.aslx\">EnvironmentDemo.aslx</a></div><br/><br/>I set up the environment by creating a room &quot;environment&quot;, and putting objects inside it representing each environment. Each room in the game can be linked to an environment object through the &quot;enviro&quot; attribute, and environment objects can link to each other in the same way.<br/><br/>If you pick up the cup and go w and w, you will be in a forest by a stream. This room is connected to e_forest_river (which has a water object), which is linked to e_forest (with a tree object), linked to e_outside (with a sky object). The player can look at any of these items.<br/><br/>You can fill the cup from the water here, showing the ability to interact with ubiquous items at least in some way.<br/><br/>Go e and you can look at the odd tree, overriding the normal tree for e_forest.<br/><br/>Go w and w, and the dance, and you change the sky for all outside rooms.<br/><br/>You can &quot;listen&quot; and &quot;smell&quot; in each room too.<br/><br/><br/>I have not tested this well, it may well be that when the game gets more complicated things break, so I offer this for comment at this stage not for use (not yey ready to be s[lit off into a library). We discussed ealier how to handle picking up a stick in the forest, and I am still not sure of the best way to do that (eg, do you let the player pick up as many sticks as he wants?).",
      "PostDate": "2012-08-20T13:40:09+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21221",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "Nice! I think this could be the right way. But I would like to see the environment as a kind of object. You can define e_objects in an environment section (as you did it) and then you can drag &amp; drop them to the real objects. So you don't need to work with attribs.",
      "EditableFormat": "bbcode",
      "HTML": "Nice! I think this could be the right way. But I would like to see the environment as a kind of object. You can define e_objects in an environment section (as you did it) and then you can drag &amp; drop them to the real objects. So you don't need to work with attribs.",
      "PostDate": "2012-08-22T07:34:17+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21222",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Not sure quite what you mean here. Are you talking about how it would appear in the GUI (i.e., behind the scenes you are setting attributes, but this is set by drag-and-drop)? If so, then yes, I agree, but that is beyond what I can do myself.",
      "EditableFormat": "bbcode",
      "HTML": "Not sure quite what you mean here. Are you talking about how it would appear in the GUI (i.e., behind the scenes you are setting attributes, but this is set by drag-and-drop)? If so, then yes, I agree, but that is beyond what I can do myself.",
      "PostDate": "2012-08-22T08:20:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21225",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I've been looking over the code (nice recursive function! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> ), and it looks straightforward. But I was wondering if it could be generalized a bit (conceptually at first, coding later) to cover more cases.\n\nIt seems we want to be able to include objects that we can see but not reach, and also be able to share them in multiple places. In my own story, I was coming up with places where I wanted to be able to have such objects, but I don't know if they'd be considered &quot;environment.&quot; For example:\n\n1) You are on an elevator. When you get to the fourth floor, the doors open, and you can see the foyer. There are objects there (e.g. &quot;look foyer&quot;). If you exit the elevator at that point, you can reach the objects. However, when you're on the elevator, you can see but not reach them. But you'd like them to be the same objects, especially if they may come and go (so you don't have to duplicate everything).\n\n2) You are in a kitchen and there is a window. Through the window you can see a sunflower plant. If you go outside, you want to see the same sunflower plant (but now be able to reach it).\n\n3) You enter a fancy conservatory, with a broad clear skylight. Through it, you can see the sky, the sun, the twin moons of Calera, etc. That's environment, but you're not technically outside.\n\nAll of these seem to have a common thread - being able to see into another room or to a &quot;place&quot; that is outside or larger than the room you're in.\n\nI don't have a definitive strategy for this yet, but I wanted to throw it out there in case either it works with what you have in mind or if what you have in mind could be expanded to cover that. (And just spurring ideas is fun. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> ) I am a newbie to Quest, so perhaps there are other ways to do what I'm talking about that aren't even related to this.\n\nUpdate: another thought... it would be cool (to follow your example) that if you opened the window in the kitchen, you'd be able to smell the sunflower or the crisp afternoon air. But if the window were closed, you could not.",
      "EditableFormat": "bbcode",
      "HTML": "I've been looking over the code (nice recursive function! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> ), and it looks straightforward. But I was wondering if it could be generalized a bit (conceptually at first, coding later) to cover more cases.<br/><br/>It seems we want to be able to include objects that we can see but not reach, and also be able to share them in multiple places. In my own story, I was coming up with places where I wanted to be able to have such objects, but I don't know if they'd be considered &quot;environment.&quot; For example:<br/><br/>1) You are on an elevator. When you get to the fourth floor, the doors open, and you can see the foyer. There are objects there (e.g. &quot;look foyer&quot;). If you exit the elevator at that point, you can reach the objects. However, when you're on the elevator, you can see but not reach them. But you'd like them to be the same objects, especially if they may come and go (so you don't have to duplicate everything).<br/><br/>2) You are in a kitchen and there is a window. Through the window you can see a sunflower plant. If you go outside, you want to see the same sunflower plant (but now be able to reach it).<br/><br/>3) You enter a fancy conservatory, with a broad clear skylight. Through it, you can see the sky, the sun, the twin moons of Calera, etc. That's environment, but you're not technically outside.<br/><br/>All of these seem to have a common thread - being able to see into another room or to a &quot;place&quot; that is outside or larger than the room you're in.<br/><br/>I don't have a definitive strategy for this yet, but I wanted to throw it out there in case either it works with what you have in mind or if what you have in mind could be expanded to cover that. (And just spurring ideas is fun. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> ) I am a newbie to Quest, so perhaps there are other ways to do what I'm talking about that aren't even related to this.<br/><br/>Update: another thought... it would be cool (to follow your example) that if you opened the window in the kitchen, you'd be able to smell the sunflower or the crisp afternoon air. But if the window were closed, you could not.",
      "PostDate": "2012-08-22T15:14:24+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21226",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Good to have someone else looking at this!\n\nQuest already has a look direction facility. I have not used it at all, but that is where I would want to handle looking from one room to another and seeing the objects there, it might even do that already.\n\nFor the conservatory, I would call that outside if it has the same features as outside (or have stuff that is really outside linked to e_really_outside, where you can feel the rain, which in turn is linked to e_outside, as is the conservatory, which has the sky object).\n\nFor the smell in the kitchen, probably best to just change the &quot;smell&quot; property on that room when the window opens and closes (if you like, do kitchen.smell = e_garden.smell when the window is opened).",
      "EditableFormat": "bbcode",
      "HTML": "Good to have someone else looking at this!<br/><br/>Quest already has a look direction facility. I have not used it at all, but that is where I would want to handle looking from one room to another and seeing the objects there, it might even do that already.<br/><br/>For the conservatory, I would call that outside if it has the same features as outside (or have stuff that is really outside linked to e_really_outside, where you can feel the rain, which in turn is linked to e_outside, as is the conservatory, which has the sky object).<br/><br/>For the smell in the kitchen, probably best to just change the &quot;smell&quot; property on that room when the window opens and closes (if you like, do kitchen.smell = e_garden.smell when the window is opened).",
      "PostDate": "2012-08-22T15:45:28+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21239",
      "UserId": 0,
      "Username": "jsg",
      "UserAvatar": null,
      "UserGravatar": "9881823600f5c21c843d23b2b3116ef5",
      "EditableText": "Pixie,\n\nI've been following this with some interest. I've done something similar for my own use which pertains to the lookat command using lists and dictionaries. Had the idea a while back. I'll post a demo if anyone is interested in looking at it.\n\nYou might not be aware that the inherited types &quot;editor_room&quot; and &quot;editor_object&quot; go away in published games. In fact, all &quot;editor*&quot; types disappear. When running a published game, any refrences to them, will produce an error running script message. Just FYI. Noticed you used a few DoesInherit calls used those types.",
      "EditableFormat": "bbcode",
      "HTML": "Pixie,<br/><br/>I've been following this with some interest. I've done something similar for my own use which pertains to the lookat command using lists and dictionaries. Had the idea a while back. I'll post a demo if anyone is interested in looking at it.<br/><br/>You might not be aware that the inherited types &quot;editor_room&quot; and &quot;editor_object&quot; go away in published games. In fact, all &quot;editor*&quot; types disappear. When running a published game, any refrences to them, will produce an error running script message. Just FYI. Noticed you used a few DoesInherit calls used those types.",
      "PostDate": "2012-08-23T20:38:53+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21240",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "I had not realised that. Thanks for the warning.",
      "EditableFormat": "bbcode",
      "HTML": "I had not realised that. Thanks for the warning.",
      "PostDate": "2012-08-23T21:17:18+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21248",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[attachment=0:38v5door]<!-- ia0 -->EnvironmentDemo.zip<!-- ia0 -->[/attachment:38v5door]\n\nOkay, this version does not check for editor_object or editor_room.\n\nAlso, it adds a new tab to rooms and objects so the various attributes can be set rather more easily.",
      "EditableFormat": "bbcode",
      "HTML": "<div><a href=\"/forumattachments/351/EnvironmentDemo.zip\">EnvironmentDemo.zip</a></div><br/><br/>Okay, this version does not check for editor_object or editor_room.<br/><br/>Also, it adds a new tab to rooms and objects so the various attributes can be set rather more easily.",
      "PostDate": "2012-08-24T15:25:12+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21311",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[attachment=0:wrsediov]<!-- ia0 -->Environment.zip<!-- ia0 -->[/attachment:wrsediov]\n\nThis version now handles darkness and light-giving objects. Set an environment object to &quot;Dark area&quot;, and all rooms linked to it will be dark. Set an object to &quot;Object provides light&quot; and when the attribute &quot;turnedon&quot; is True, you can see in the dark. Or set &quot;seeinthedark&quot; on the player (when it is daytime or has cast a nightvision spell or whatever), and the player can see.",
      "EditableFormat": "bbcode",
      "HTML": "<div><a href=\"/forumattachments/358/Environment.zip\">Environment.zip</a></div><br/><br/>This version now handles darkness and light-giving objects. Set an environment object to &quot;Dark area&quot;, and all rooms linked to it will be dark. Set an object to &quot;Object provides light&quot; and when the attribute &quot;turnedon&quot; is True, you can see in the dark. Or set &quot;seeinthedark&quot; on the player (when it is daytime or has cast a nightvision spell or whatever), and the player can see.",
      "PostDate": "2012-09-05T14:23:34+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21313",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "Ah yes  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->  I am just trying to integrate dark/light into Q5.3",
      "EditableFormat": "bbcode",
      "HTML": "Ah yes  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->  I am just trying to integrate dark/light into Q5.3",
      "PostDate": "2012-09-05T15:44:27+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21314",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "What does that mean? Will what you implement be compatible with this (or even based on this)? It would be useful to know so we can plan to accomodate that when 5.3 is released.",
      "EditableFormat": "bbcode",
      "HTML": "What does that mean? Will what you implement be compatible with this (or even based on this)? It would be useful to know so we can plan to accomodate that when 5.3 is released.",
      "PostDate": "2012-09-05T17:36:27+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21316",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "I started working on it last week so it's not compatible with your lib. I am not working with lighttypes, only normal attributes.",
      "EditableFormat": "bbcode",
      "HTML": "I started working on it last week so it's not compatible with your lib. I am not working with lighttypes, only normal attributes.",
      "PostDate": "2012-09-05T20:43:10+01:00",
      "LastEditDate": null
    }
  ]
}