{
  "Topic": {
    "TopicId": "3807",
    "ForumId": "18",
    "Title": "Commands with unsual scopes",
    "LastUpdated": "2013-07-17T17:04:20+01:00",
    "ReplyCount": 1
  },
  "Posts": [
    {
      "PostId": "25478",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[attachment=0:390h6mjk]<!-- ia0 -->ScopeLib.aslx<!-- ia0 -->[/attachment:390h6mjk]\nThis is for occasions when you want a command to access a different scope. A couple of examples I have come across:\n\nA shop inventory. I want the player to be able to type BUY BREAD, and Quest will look though the shop inventory object for the bread object.\n\nA spell book.  I want the player to be able to type CAST UNLOCK, and Quest will look though the spell book object for the unlock object.\n\nThe function is called ProcessScopeCommand and takes these parameters\n\n  [i:390h6mjk]script[/i:390h6mjk]:       A string that gives the name of the script to call on the object\n  [i:390h6mjk]scope[/i:390h6mjk]:        An object list from which to get objects\n  [i:390h6mjk]text[/i:390h6mjk]:         The text variable from command\n  [i:390h6mjk]noobject[/i:390h6mjk]:     A string to display if no object is found\n  [i:390h6mjk]noscript[/i:390h6mjk]:     A string to display if the object is found, but it does not have the named script\n\nHere it is in action for the second example (&quot;castspell&quot; is the name of a script that must be present on each spell item, and gets invoked when a spell is cast):\n\n[code:390h6mjk]  &lt;command name=&quot;Cast&quot;&gt;\n    &lt;pattern&gt;cast #text#&lt;/pattern&gt;\n    &lt;script&gt;\n      ProcessScopeCommand (&quot;castspell&quot;, GetDirectChildren (spellbook), text, &quot;No such spell in your book&quot;, &quot;That's not a spell; it should not even be in your book&quot;)\n    &lt;/script&gt;\n  &lt;/command&gt;[/code:390h6mjk]\n\nHere is an example (you will also need Jay's InvPane2 library file to get it to work):\n[attachment=1:390h6mjk]<!-- ia1 -->AdditionalPane2.aslx<!-- ia1 -->[/attachment:390h6mjk]\n\nNote that this cannot handle multiple objects in one command.",
      "EditableFormat": "bbcode",
      "HTML": "<div><a href=\"/attachment/670\">ScopeLib.aslx</a></div><br/>This is for occasions when you want a command to access a different scope. A couple of examples I have come across:<br/><br/>A shop inventory. I want the player to be able to type BUY BREAD, and Quest will look though the shop inventory object for the bread object.<br/><br/>A spell book.  I want the player to be able to type CAST UNLOCK, and Quest will look though the spell book object for the unlock object.<br/><br/>The function is called ProcessScopeCommand and takes these parameters<br/><br/>  <span style=\"font-style:italic;\">script</span>:       A string that gives the name of the script to call on the object<br/>  <span style=\"font-style:italic;\">scope</span>:        An object list from which to get objects<br/>  <span style=\"font-style:italic;\">text</span>:         The text variable from command<br/>  <span style=\"font-style:italic;\">noobject</span>:     A string to display if no object is found<br/>  <span style=\"font-style:italic;\">noscript</span>:     A string to display if the object is found, but it does not have the named script<br/><br/>Here it is in action for the second example (&quot;castspell&quot; is the name of a script that must be present on each spell item, and gets invoked when a spell is cast):<br/><br/><pre><code>  &lt;command name=&quot;Cast&quot;&gt;<br/>    &lt;pattern&gt;cast #text#&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      ProcessScopeCommand (&quot;castspell&quot;, GetDirectChildren (spellbook), text, &quot;No such spell in your book&quot;, &quot;That's not a spell; it should not even be in your book&quot;)<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;</code></pre><br/><br/>Here is an example (you will also need Jay's InvPane2 library file to get it to work):<br/><div><a href=\"/attachment/668\">AdditionalPane2.aslx</a></div><br/><br/>Note that this cannot handle multiple objects in one command.",
      "PostDate": "2013-07-17T09:35:56+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25488",
      "UserId": 0,
      "Username": "Entropic Pen",
      "UserAvatar": null,
      "UserGravatar": "e5f002e803b6ffc8146a20f6f4777d33",
      "EditableText": "Okay, that explained a lot as I attempted to perform the equivalent of a simultaneous open-heart and brain surgeries.  Now just one last kink:\n\nIn-game, the list alias (what is displayed in the &quot;Equipment&quot; section) of each object gets constantly updated.  Armor is one of the biggest as players can change what armor they wear, and displays their armor's condition on the list alias.  This is not the case when I moved the &quot;player_armor&quot; object to the secondary inventory pane.  If there is a way to update the list alias for the &quot;Equipment&quot; pane, then it would be complete!\n\nOkay, I'm beginning to sense a pattern in Jay's Javascript, I just need to add a function that updates the alias of just one object without resetting the entire list...",
      "EditableFormat": "bbcode",
      "HTML": "Okay, that explained a lot as I attempted to perform the equivalent of a simultaneous open-heart and brain surgeries.  Now just one last kink:<br/><br/>In-game, the list alias (what is displayed in the &quot;Equipment&quot; section) of each object gets constantly updated.  Armor is one of the biggest as players can change what armor they wear, and displays their armor's condition on the list alias.  This is not the case when I moved the &quot;player_armor&quot; object to the secondary inventory pane.  If there is a way to update the list alias for the &quot;Equipment&quot; pane, then it would be complete!<br/><br/>Okay, I'm beginning to sense a pattern in Jay's Javascript, I just need to add a function that updates the alias of just one object without resetting the entire list...",
      "PostDate": "2013-07-17T17:04:20+01:00",
      "LastEditDate": null
    }
  ]
}
