{
  "Topic": {
    "TopicId": "3536",
    "ForumId": "18",
    "Title": "Lights and switches library",
    "LastUpdated": "2013-03-24T12:55:29+00:00",
    "ReplyCount": 4
  },
  "Posts": [
    {
      "PostId": "23382",
      "UserId": 0,
      "Username": "levicki",
      "UserAvatar": null,
      "UserGravatar": "be743462cd257b8490bed6cc0d3795ea",
      "EditableText": "Here is a simple and compact library for handling lights and switches which I have just written.\n\nIn order to use it, you have to do the following:\n\n1. Add the Lights.aslx library to your game\n2. Create object [b:2f387pmr]light[/b:2f387pmr] which will inherit from [b:2f387pmr]light_source[/b:2f387pmr] type.\n3. Create object [b:2f387pmr]switch[/b:2f387pmr] which will inherit from [b:2f387pmr]light_switch[/b:2f387pmr] type.\n4. On the object [b:2f387pmr]switch[/b:2f387pmr] add the attribute [b:2f387pmr]source[/b:2f387pmr] of type [b:2f387pmr]object[/b:2f387pmr] and assign the object [b:2f387pmr]light[/b:2f387pmr] to it.\n5. On the object [b:2f387pmr]light[/b:2f387pmr] add the attribute [b:2f387pmr]room[/b:2f387pmr] of type [b:2f387pmr]object[/b:2f387pmr] and assign the object [b:2f387pmr]room[/b:2f387pmr] (where &quot;room&quot; is the one containing light) to it.\n\n[b:2f387pmr]Features and limitations:[/b:2f387pmr]\n\n1. You cannot turn the lights on if the room is not dark.\n\n[i:2f387pmr]If you want the lights to work, you need to call SetDark(room) or set it to an initial dark state from the editor.[/i:2f387pmr]\n\n2. You can have multiple light sources in the same room but each requires its own switch.\n\n[i:2f387pmr]Reason for this is that it would be much more complicated to write code to deal with one switch that controls multiple lights (yes I was lazy).[/i:2f387pmr]\n\n3. You can have multiple light sources in the same room but only one can be active at a time.\n\n[i:2f387pmr]Reason for this is the way how Quest CheckDarkness() function works -- one strong light source is enough to illuminate the room and there is no code in Quest to handle addition of weak lights and checking if they together make strong light. If you don't like it you can always ignore darkness status of the room but then why did you want lights in the first place?[/i:2f387pmr]\n\n4. You can have a switch in one room and light in another room.\n\n[i:2f387pmr]This comes in handy when part of puzzle.[/i:2f387pmr]\n\n5. You can have more than one light switch in different locations controlling the same light.\n\n[i:2f387pmr]For example, you can have a bedside switch for a central bedroom light, and one by the entrance. That way player could reach the light if they are in bed.[/i:2f387pmr]\n\n[b:2f387pmr]Final notes:[/b:2f387pmr]\n[i:2f387pmr]\n- If you have time keeping in your game and you want to make some rooms dark at night using a turn script, the proper thing to do is to use SetDark(room) and SetLight(room) for each room affected by global illumination (i.e. the one that has windows and is not underground).\n- This library overrides default behavior of CheckDarkness() function -- keep that in mind if you notice any weird behavior with light sources in game.\n- If you do not assign light to a switch or if you do not assign parent room to a light, you will get a runtime error message saying which object you forgot to assign something to.\n- If you want to translate or otherwise change the messages, they are all in templates and dynamic templates at the beginning of the library code.\n[/i:2f387pmr]\n\nCode is free for non-commercial purposes provided that you mention me in your project as its author.\n\nCriticism, comments, and suggestions are welcome.\n\n[b:2f387pmr]UPDATE:[/b:2f387pmr]\n\n2013-03-24 - Version 1.1 - [i:2f387pmr]There is a new boolean attribute &quot;disabled&quot; for light switches so you can control whether they can be used or not without having to make code editable. Also, there is a new script attribute &quot;disabled_message&quot; for light switches which gets executed when the player tries to switch the disabled light on or off.[/i:2f387pmr]\n\n[attachment=0:2f387pmr]<!-- ia0 -->Lights.aslx<!-- ia0 -->[/attachment:2f387pmr]\n[attachment=1:2f387pmr]<!-- ia1 -->Lights Demo.aslx<!-- ia1 -->[/attachment:2f387pmr]\n\nP.S. For those curious: the reason why light must &quot;know&quot; about its parent room is because otherwise you have to perform extensive search of light's parents and override even more Quest code to make things work. Quest by default doesn't &quot;see&quot; the light which is not a direct descendant of the room. For example, if you turn on the light which is on a table, CheckDarkness() won't change the darklevel attribute of the room, and the room will for all purposes and intents stay dark even though the light is on. This will probably be fixed in Quest 5.4 release so expect an update afterwards.",
      "EditableFormat": "bbcode",
      "HTML": "Here is a simple and compact library for handling lights and switches which I have just written.<br/><br/>In order to use it, you have to do the following:<br/><br/>1. Add the Lights.aslx library to your game<br/>2. Create object <span style=\"font-weight:bold;\">light</span> which will inherit from <span style=\"font-weight:bold;\">light_source</span> type.<br/>3. Create object <span style=\"font-weight:bold;\">switch</span> which will inherit from <span style=\"font-weight:bold;\">light_switch</span> type.<br/>4. On the object <span style=\"font-weight:bold;\">switch</span> add the attribute <span style=\"font-weight:bold;\">source</span> of type <span style=\"font-weight:bold;\">object</span> and assign the object <span style=\"font-weight:bold;\">light</span> to it.<br/>5. On the object <span style=\"font-weight:bold;\">light</span> add the attribute <span style=\"font-weight:bold;\">room</span> of type <span style=\"font-weight:bold;\">object</span> and assign the object <span style=\"font-weight:bold;\">room</span> (where &quot;room&quot; is the one containing light) to it.<br/><br/><span style=\"font-weight:bold;\">Features and limitations:</span><br/><br/>1. You cannot turn the lights on if the room is not dark.<br/><br/><span style=\"font-style:italic;\">If you want the lights to work, you need to call SetDark(room) or set it to an initial dark state from the editor.</span><br/><br/>2. You can have multiple light sources in the same room but each requires its own switch.<br/><br/><span style=\"font-style:italic;\">Reason for this is that it would be much more complicated to write code to deal with one switch that controls multiple lights (yes I was lazy).</span><br/><br/>3. You can have multiple light sources in the same room but only one can be active at a time.<br/><br/><span style=\"font-style:italic;\">Reason for this is the way how Quest CheckDarkness() function works -- one strong light source is enough to illuminate the room and there is no code in Quest to handle addition of weak lights and checking if they together make strong light. If you don't like it you can always ignore darkness status of the room but then why did you want lights in the first place?</span><br/><br/>4. You can have a switch in one room and light in another room.<br/><br/><span style=\"font-style:italic;\">This comes in handy when part of puzzle.</span><br/><br/>5. You can have more than one light switch in different locations controlling the same light.<br/><br/><span style=\"font-style:italic;\">For example, you can have a bedside switch for a central bedroom light, and one by the entrance. That way player could reach the light if they are in bed.</span><br/><br/><span style=\"font-weight:bold;\">Final notes:</span><br/><span style=\"font-style:italic;\"><br/>- If you have time keeping in your game and you want to make some rooms dark at night using a turn script, the proper thing to do is to use SetDark(room) and SetLight(room) for each room affected by global illumination (i.e. the one that has windows and is not underground).<br/>- This library overrides default behavior of CheckDarkness() function -- keep that in mind if you notice any weird behavior with light sources in game.<br/>- If you do not assign light to a switch or if you do not assign parent room to a light, you will get a runtime error message saying which object you forgot to assign something to.<br/>- If you want to translate or otherwise change the messages, they are all in templates and dynamic templates at the beginning of the library code.<br/></span><br/><br/>Code is free for non-commercial purposes provided that you mention me in your project as its author.<br/><br/>Criticism, comments, and suggestions are welcome.<br/><br/><span style=\"font-weight:bold;\">UPDATE:</span><br/><br/>2013-03-24 - Version 1.1 - <span style=\"font-style:italic;\">There is a new boolean attribute &quot;disabled&quot; for light switches so you can control whether they can be used or not without having to make code editable. Also, there is a new script attribute &quot;disabled_message&quot; for light switches which gets executed when the player tries to switch the disabled light on or off.</span><br/><br/><div><a href=\"/attachment/566\">Lights.aslx</a></div><br/><div><a href=\"/attachment/548\">Lights Demo.aslx</a></div><br/><br/>P.S. For those curious: the reason why light must &quot;know&quot; about its parent room is because otherwise you have to perform extensive search of light's parents and override even more Quest code to make things work. Quest by default doesn't &quot;see&quot; the light which is not a direct descendant of the room. For example, if you turn on the light which is on a table, CheckDarkness() won't change the darklevel attribute of the room, and the room will for all purposes and intents stay dark even though the light is on. This will probably be fixed in Quest 5.4 release so expect an update afterwards.",
      "PostDate": "2013-03-14T18:07:25+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23393",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Another excellent library! thank you levicki! Now, I need to study it, hehe <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->\n(the more code I can look at, the better, as I try to learn to code, and its logic~methods, more and more!)",
      "EditableFormat": "bbcode",
      "HTML": "Another excellent library! thank you levicki! Now, I need to study it, hehe <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) --><br/>(the more code I can look at, the better, as I try to learn to code, and its logic~methods, more and more!)",
      "PostDate": "2013-03-15T00:07:54+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23412",
      "UserId": 0,
      "Username": "levicki",
      "UserAvatar": null,
      "UserGravatar": "be743462cd257b8490bed6cc0d3795ea",
      "EditableText": "[quote=&quot;HegemonKhan&quot;:2z30cc95]Another excellent library! thank you levicki![/quote:2z30cc95]\n\nYou are welcome, let me know your thoughts if you actually end up using it.\n\n[quote=&quot;HegemonKhan&quot;:2z30cc95]Now, I need to study it, hehe <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->[/quote:2z30cc95]\n\nGood luck with that <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\nJoking aside, if you really want to master Quest coding I suggest also looking at Quest library code -- a lot can be learned from there. That is what I did when I was writing this library. Your ability to write good code and make amazing things for a certain platform is directly proportional to your understanding of said platform.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>HegemonKhan wrote:</cite>Another excellent library! thank you levicki!</blockquote><br/><br/>You are welcome, let me know your thoughts if you actually end up using it.<br/><br/><blockquote><cite>HegemonKhan wrote:</cite>Now, I need to study it, hehe <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) --></blockquote><br/><br/>Good luck with that <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>Joking aside, if you really want to master Quest coding I suggest also looking at Quest library code -- a lot can be learned from there. That is what I did when I was writing this library. Your ability to write good code and make amazing things for a certain platform is directly proportional to your understanding of said platform.",
      "PostDate": "2013-03-15T12:58:33+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23453",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "you mean the quest engine's core (or core library anyways) code, right? Or, do you just mean anyone's created libraries' codes?\n\nI've looked at the core library code, and it's really fascinating to see how Alex coding it to do all these things, though it's a bit beyond my level at this point, to even understand. I'm still just trying to learn a lot of the &quot;basic&quot; codings, like of your light switch library, spell~magic systems, combat systems, equipment (equiping) systems, (eventually) that journal making library, and etc people's libraries. I've never worked with any code ever before, so I'm really just still trying to learn, understand, and get used to doing all of these &quot;simple&quot; coding structures, logic, methods, and etc.\n\nI am interested in taking some programming classes eventually, though I wished I had started on this as a kid, as it's so late for me now, so old, more tired, less energy, and more difficult to learn this new stuff now too, sighs. But I really like quest, as I'm able to slowly learn at least it's coding, laughs. Then, I can start making some games here, for people to play, hehe. I don't want to make bad games though, so that's why I'm trying to learn the programming side, so I can do cool stuff in my quest games. (I actually have more trouble with the GUI, as my brain does seem to be stronger with working with the code, for me). As I'm not too great of a story teller. I can write pretty well, but not that good at actual writing stories, lol. I don't have the art or other media abilities, so the programming ~ coding is my best bet of being able to improve upon it, and, at least, do this part of game making, eventually decently (hopefully), lol.\n\nAs I've been pretty good in math a science, and I'm very methodical, I get the general logic of thinking that is involved, but it is hard to translate that into how to actually code it, as I just don't know coding and its logic or way of doing things, and of in thinking of how to do the things via the ways the code can do it, when I don't know code very well, though I'm slowly learning.\n\nBut, the &quot;if&quot; and other type of structures~logic, I get pretty well, for the most part. I still have a bit of trouble of whether or not, I need to do a &quot;check&quot; on an object (or whatever).",
      "EditableFormat": "bbcode",
      "HTML": "you mean the quest engine's core (or core library anyways) code, right? Or, do you just mean anyone's created libraries' codes?<br/><br/>I've looked at the core library code, and it's really fascinating to see how Alex coding it to do all these things, though it's a bit beyond my level at this point, to even understand. I'm still just trying to learn a lot of the &quot;basic&quot; codings, like of your light switch library, spell~magic systems, combat systems, equipment (equiping) systems, (eventually) that journal making library, and etc people's libraries. I've never worked with any code ever before, so I'm really just still trying to learn, understand, and get used to doing all of these &quot;simple&quot; coding structures, logic, methods, and etc.<br/><br/>I am interested in taking some programming classes eventually, though I wished I had started on this as a kid, as it's so late for me now, so old, more tired, less energy, and more difficult to learn this new stuff now too, sighs. But I really like quest, as I'm able to slowly learn at least it's coding, laughs. Then, I can start making some games here, for people to play, hehe. I don't want to make bad games though, so that's why I'm trying to learn the programming side, so I can do cool stuff in my quest games. (I actually have more trouble with the GUI, as my brain does seem to be stronger with working with the code, for me). As I'm not too great of a story teller. I can write pretty well, but not that good at actual writing stories, lol. I don't have the art or other media abilities, so the programming ~ coding is my best bet of being able to improve upon it, and, at least, do this part of game making, eventually decently (hopefully), lol.<br/><br/>As I've been pretty good in math a science, and I'm very methodical, I get the general logic of thinking that is involved, but it is hard to translate that into how to actually code it, as I just don't know coding and its logic or way of doing things, and of in thinking of how to do the things via the ways the code can do it, when I don't know code very well, though I'm slowly learning.<br/><br/>But, the &quot;if&quot; and other type of structures~logic, I get pretty well, for the most part. I still have a bit of trouble of whether or not, I need to do a &quot;check&quot; on an object (or whatever).",
      "PostDate": "2013-03-16T04:57:30+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23664",
      "UserId": 0,
      "Username": "levicki",
      "UserAvatar": null,
      "UserGravatar": "be743462cd257b8490bed6cc0d3795ea",
      "EditableText": "Library has been updated to version 1.1.",
      "EditableFormat": "bbcode",
      "HTML": "Library has been updated to version 1.1.",
      "PostDate": "2013-03-24T12:55:29+00:00",
      "LastEditDate": null
    }
  ]
}
