{
  "Topic": {
    "TopicId": "nx0lkvwy50qgupkqgvmqyw",
    "ForumId": "10",
    "Title": "One, last, crazy question - Setting a script attribute",
    "LastUpdated": "2017-08-30T04:19:39.3254053Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "428f4e1f-7572-4825-b334-5e05b13cf112",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```^cheat (?<text1>setscript) (?<text2>.+)$```\r\n\r\n\r\nI'd like to be able to enter:\r\n\r\n>cheat setscript box.flip => {msg (\"You flip it.\");box.alias = \"upside-down box\"}\r\n\r\nI think it can be done by altering this:\r\n\r\n\r\n\r\n```\r\nmsg (\"Doing \" + text2)\r\n          regex = \"(?<object>.+)\\\\.(?<attribute>\\\\S+)\\\\s*=\\\\s*(?<value>.+)\"\r\n          if (not IsRegexMatch(regex, text2)) {\r\n            error (\"Sorry, wrong format\")\r\n          }\r\n          dict = Populate(regex, text2)\r\n          obj = GetObject(StringDictionaryItem(dict, \"object\"))\r\n          if (obj = null) {\r\n            error (\"Sorry, object not recognised\")\r\n          }\r\n          att = StringDictionaryItem(dict, \"attribute\")\r\n          value = Eval(StringDictionaryItem(dict, \"value\"))\r\n          set (obj, att, value)\r\n          msg (\"Done\")\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p><code>^cheat (?&lt;text1&gt;setscript) (?&lt;text2&gt;.+)$</code></p>\n<p>I'd like to be able to enter:</p>\n<blockquote>\n<p>cheat setscript box.flip =&gt; {msg (\"You flip it.\");box.alias = \"upside-down box\"}</p>\n</blockquote>\n<p>I think it can be done by altering this:</p>\n<pre><code>msg (\"Doing \" + text2)\n          regex = \"(?&lt;object&gt;.+)\\\\.(?&lt;attribute&gt;\\\\S+)\\\\s*=\\\\s*(?&lt;value&gt;.+)\"\n          if (not IsRegexMatch(regex, text2)) {\n            error (\"Sorry, wrong format\")\n          }\n          dict = Populate(regex, text2)\n          obj = GetObject(StringDictionaryItem(dict, \"object\"))\n          if (obj = null) {\n            error (\"Sorry, object not recognised\")\n          }\n          att = StringDictionaryItem(dict, \"attribute\")\n          value = Eval(StringDictionaryItem(dict, \"value\"))\n          set (obj, att, value)\n          msg (\"Done\")\n</code></pre>\n\n",
      "PostDate": "2017-08-30T04:19:39.3254053Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d21667b5-fe69-4cb6-a596-17b7ad942aeb",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "As far as I know, you cannot convert a string to a script, so you cannot do it the first way. However, you can use the `Eval` function to run a string. I am not sure if there are limitations on that, but I think it needs to return a value, and may only cope with a single command.",
      "EditableFormat": "markdown",
      "HTML": "<p>As far as I know, you cannot convert a string to a script, so you cannot do it the first way. However, you can use the <code>Eval</code> function to run a string. I am not sure if there are limitations on that, but I think it needs to return a value, and may only cope with a single command.</p>\n\n",
      "PostDate": "2017-08-30T06:54:22.9867966Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "351db301-9a40-4cd4-bbd0-ff1d6cee5479",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ThePix\r\n\r\nHrmm...\r\n\r\n\r\n```\r\nmsg (\"Doing \" + text2)\r\nregex = \"(?<object>.+)\\\\.(?<attribute>\\\\S+)\\\\s*=>\\\\s*(?<value>.+)\"\r\nif (not IsRegexMatch(regex, text2)) {\r\n  error (\"Sorry, wrong format\")\r\n}\r\ndict = Populate(regex, text2)\r\nobj = GetObject(StringDictionaryItem(dict, \"object\"))\r\nif (obj = null) {\r\n  error (\"Sorry, object not recognised\")\r\n}\r\natt = StringDictionaryItem(dict, \"attribute\")\r\ngame.value = Eval(StringDictionaryItem(dict, \"value\"))\r\nobj.att => {\r\n  game.value\r\n}\r\nmsg (\"Done\")\r\n```\r\n\r\n\\> cheat set kv_token.push => msg (\"FF\")\r\nDoing kv_token.push => msg (\"FF\")\r\nError running script: Error evaluating expression 'Eval(StringDictionaryItem(dict, \"value\"))': Error compiling expression 'msg (\"FF\")': FunctionCallElement: Could find not function 'msg(String)'\r\n\r\n\r\n\\> cheat set kv_token.push => {msg (\"FF\")}\r\nDoing kv_token.push => {msg (\"FF\")}\r\nError running script: Error evaluating expression 'Eval(StringDictionaryItem(dict, \"value\"))': Error compiling expression '{msg (\"FF\")}': SyntaxError: Unexpected character: {Line: 1, Column: 1Unexpected character: }Line: 1, Column: 12\r\n\r\n\r\n\r\n## I think this one's pretty awesome. (Hehehe)\r\n\r\nWe just invented a calculator:\r\n\r\n\\> cheat set kv_token.pull => 1 + 2\r\nDoing kv_token.pull => 1 + 2\r\n3\r\nError running script: Function not found: 'game.value'",
      "EditableFormat": "markdown",
      "HTML": "<p>@ThePix</p>\n<p>Hrmm...</p>\n<pre><code>msg (\"Doing \" + text2)\nregex = \"(?&lt;object&gt;.+)\\\\.(?&lt;attribute&gt;\\\\S+)\\\\s*=&gt;\\\\s*(?&lt;value&gt;.+)\"\nif (not IsRegexMatch(regex, text2)) {\n  error (\"Sorry, wrong format\")\n}\ndict = Populate(regex, text2)\nobj = GetObject(StringDictionaryItem(dict, \"object\"))\nif (obj = null) {\n  error (\"Sorry, object not recognised\")\n}\natt = StringDictionaryItem(dict, \"attribute\")\ngame.value = Eval(StringDictionaryItem(dict, \"value\"))\nobj.att =&gt; {\n  game.value\n}\nmsg (\"Done\")\n</code></pre>\n<p>&gt; cheat set kv_token.push =&gt; msg (\"FF\")<br>\nDoing kv_token.push =&gt; msg (\"FF\")<br>\nError running script: Error evaluating expression 'Eval(StringDictionaryItem(dict, \"value\"))': Error compiling expression 'msg (\"FF\")': FunctionCallElement: Could find not function 'msg(String)'</p>\n<p>&gt; cheat set kv_token.push =&gt; {msg (\"FF\")}<br>\nDoing kv_token.push =&gt; {msg (\"FF\")}<br>\nError running script: Error evaluating expression 'Eval(StringDictionaryItem(dict, \"value\"))': Error compiling expression '{msg (\"FF\")}': SyntaxError: Unexpected character: {Line: 1, Column: 1Unexpected character: }Line: 1, Column: 12</p>\n<h2>I think this one's pretty awesome. (Hehehe)</h2>\n<p>We just invented a calculator:</p>\n<p>&gt; cheat set kv_token.pull =&gt; 1 + 2<br>\nDoing kv_token.pull =&gt; 1 + 2<br>\n3<br>\nError running script: Function not found: 'game.value'</p>\n\n",
      "PostDate": "2017-08-30T07:45:56.3683553Z",
      "LastEditDate": "2017-08-30T07:47:25.7854148Z",
      "link": null
    },
    {
      "PostId": "2230343a-c615-4866-99b2-2f4a36e69c45",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Maybe ... hmm …\r\n```\r\nsetscriptcommand = obj.name + \".\" + att + \" => {\" + StringDictionaryItem(dict, \"value\") + \"}\"\r\nEval (setscriptcommand)\r\n```\r\nor something along those lines?\r\nSo you're eval'ing the whole \"obj.attr => { msg(something) }\" block. Haven't tried using Eval, but that would be my first attempt at making it do what I think you're aiming for.\r\n\r\nor just\r\n```\r\nEval (text2)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Maybe ... hmm …</p>\n<pre><code>setscriptcommand = obj.name + \".\" + att + \" =&gt; {\" + StringDictionaryItem(dict, \"value\") + \"}\"\nEval (setscriptcommand)\n</code></pre>\n<p>or something along those lines?<br>\nSo you're eval'ing the whole \"obj.attr =&gt; { msg(something) }\" block. Haven't tried using Eval, but that would be my first attempt at making it do what I think you're aiming for.</p>\n<p>or just</p>\n<pre><code>Eval (text2)\n</code></pre>\n\n",
      "PostDate": "2017-08-30T22:33:57.8096947Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "55080d9f-40aa-4fce-9457-a0a744b7ed5c",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't know if I'm getting colder or warmer, but I'd be inclined to bet that Pixie would have already found a way to convert a string to a script if it could be done.\r\n\r\n---\r\nEval doesn't like 'value':\r\n\r\n```\r\nmsg (\"Enter the your one line script now. Example:#object#.#attribute# =>  @@@open@@@msg (\\\"Hello, Forum!\\\")@@@close@@@<br/>\")\r\nget input {\r\n  msg (\"Doing \" + result)\r\n  regex = \"(?<object>.+)\\\\.(?<attribute>\\\\S+)\\\\s*=>\\\\s*(?<value>.+)\"\r\n  if (not IsRegexMatch(regex, result)) {\r\n    error (\"Sorry, wrong format\")\r\n  }\r\n  dict = Populate(regex, result)\r\n  msg (dict)\r\n  obj = GetObject(StringDictionaryItem(dict, \"object\"))\r\n  if (obj = null) {\r\n    error (\"Sorry, object not recognised\")\r\n  }\r\n  att = StringDictionaryItem(dict, \"attribute\")\r\n  value = Eval(StringDictionaryItem(dict, \"value\"))\r\n  msg (obj)\r\n  msg (\"att: \" + att)\r\n  msg (\"value: \" + value)\r\n\r\n...the script continues, but it has already thrown an error.\r\n```\r\n\r\n---\r\n\\> script\r\nEnter the your one line script now. Example:#object#.#attribute# => {msg (\"Hello, Forum!\")}\r\n\r\nDoing box.jump => msg (\"hello\")\r\nDictionary: object = box;attribute = jump;value = msg (\"hello\")\r\nError running script: Error evaluating expression 'Eval(StringDictionaryItem(dict, \"value\"))': Error compiling expression 'msg (\"hello\")': FunctionCallElement: Could find not function 'msg(String)'\r\n\r\n\r\n\r\n\r\n---\r\n\r\nThis seems to get a little closer:\r\n\r\n```\r\nmsg (\"Enter the your one line script now. Example:#object#.#attribute# =>  @@@open@@@msg (\\\"Hello, Forum!\\\")@@@close@@@<br/>\")\r\nget input {\r\n  msg (\"Doing \" + result)\r\n  regex = \"(?<object>.+)\\\\.(?<attribute>\\\\S+)\\\\s*=>\\\\s*(?<value>.+)\"\r\n  if (not IsRegexMatch(regex, result)) {\r\n    error (\"Sorry, wrong format\")\r\n  }\r\n  dict = Populate(regex, result)\r\n  msg (dict)\r\n  obj = GetObject(StringDictionaryItem(dict, \"object\"))\r\n  if (obj = null) {\r\n    error (\"Sorry, object not recognised\")\r\n  }\r\n  att = StringDictionaryItem(dict, \"attribute\")\r\n  value = StringDictionaryItem(dict, \"value\")\r\n  msg (obj)\r\n  msg (\"att: \" + att)\r\n  msg (\"value: \" + value)\r\n  \r\n  set (obj, att, value)\r\n  //At this point, obj.att is set up with whatever value holds as the string.\r\n  setscriptcommand = obj.name + \".\" + att + \" => {\" + StringDictionaryItem(dict, \"value\") + \"}\"\r\n  msg (\"setscriptcommand: \" + setscriptcommand)\r\n  objatt = obj.name + \".\" + att\r\n  msg (\"objatt: \" + objatt)\r\n  objattdict = NewScriptDictionary()\r\n  msg (\"objattdict: \" + objattdict)\r\n  valuescript => value\r\n  msg (\"valuescript: \" + valuescript)\r\n  dictionary add (objattdict, att, valuescript))\r\n  msg (\"objattdict: \" + objattdict)\r\n  msg (\"ScriptDictionaryItem(objattdict, att): \" + ScriptDictionaryItem(objattdict, att))\r\n  msg (\"Done\")\r\n\r\n}\r\n```\r\n\r\n\r\n\\> script\r\nEnter the your one line script now. Example:#object#.#attribute# => {msg (\"Hello, Forum!\")}\r\n\r\nDoing box.push => msg (\"HELLO\")\r\nDictionary: object = box;attribute = push;value = msg (\"HELLO\")\r\nObject: box\r\natt: push\r\nvalue: msg (\"HELLO\")\r\nsetscriptcommand: box.push => {msg (\"HELLO\")}\r\nobjatt: box.push\r\nobjattdict: Dictionary: \r\nvaluescript: { value }\r\nobjattdict: Dictionary: push = { value }\r\nScriptDictionaryItem(objattdict, att): { value }\r\nDone\r\n\r\n\\> push box\r\nmsg (\"HELLO\")\r\n\r\n\r\n---\r\n\r\n```obj.att```\r\n\r\nThis creates ```box.att```. Hehehe.\r\n\r\nAnd it doesn't like ```obj.+ att``` or ```obj.\" + att + \"```...\r\n\r\n\r\nThat's why I changed the line to ``` value = StringDictionaryItem(dict, \"value\")``` and made it a string attribute first with ```set (obj, att, value)``` (which is directly from the SET case in Pixie's cheat script).\r\n\r\nI thought I could just make that a NewScriptDictionary afterwards, but I'd still need to use ```obj.att``` to pull it off.\r\n\r\n...unless I used a Switch script, and utilized ```foreach (cmd, AllCommands())``` to add each available verb as a CASE...\r\n\r\n```\r\ncase (\"push\") {\r\n  obj.push => value\r\n}\r\n```\r\n\r\nThat probably still wouldn't work though...",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't know if I'm getting colder or warmer, but I'd be inclined to bet that Pixie would have already found a way to convert a string to a script if it could be done.</p>\n<hr>\n<p>Eval doesn't like 'value':</p>\n<pre><code>msg (\"Enter the your one line script now. Example:#object#.#attribute# =&gt;  @@@open@@@msg (\\\"Hello, Forum!\\\")@@@close@@@&lt;br/&gt;\")\nget input {\n  msg (\"Doing \" + result)\n  regex = \"(?&lt;object&gt;.+)\\\\.(?&lt;attribute&gt;\\\\S+)\\\\s*=&gt;\\\\s*(?&lt;value&gt;.+)\"\n  if (not IsRegexMatch(regex, result)) {\n    error (\"Sorry, wrong format\")\n  }\n  dict = Populate(regex, result)\n  msg (dict)\n  obj = GetObject(StringDictionaryItem(dict, \"object\"))\n  if (obj = null) {\n    error (\"Sorry, object not recognised\")\n  }\n  att = StringDictionaryItem(dict, \"attribute\")\n  value = Eval(StringDictionaryItem(dict, \"value\"))\n  msg (obj)\n  msg (\"att: \" + att)\n  msg (\"value: \" + value)\n\n...the script continues, but it has already thrown an error.\n</code></pre>\n<hr>\n<p>&gt; script<br>\nEnter the your one line script now. Example:#object#.#attribute# =&gt; {msg (\"Hello, Forum!\")}</p>\n<p>Doing box.jump =&gt; msg (\"hello\")<br>\nDictionary: object = box;attribute = jump;value = msg (\"hello\")<br>\nError running script: Error evaluating expression 'Eval(StringDictionaryItem(dict, \"value\"))': Error compiling expression 'msg (\"hello\")': FunctionCallElement: Could find not function 'msg(String)'</p>\n<hr>\n<p>This seems to get a little closer:</p>\n<pre><code>msg (\"Enter the your one line script now. Example:#object#.#attribute# =&gt;  @@@open@@@msg (\\\"Hello, Forum!\\\")@@@close@@@&lt;br/&gt;\")\nget input {\n  msg (\"Doing \" + result)\n  regex = \"(?&lt;object&gt;.+)\\\\.(?&lt;attribute&gt;\\\\S+)\\\\s*=&gt;\\\\s*(?&lt;value&gt;.+)\"\n  if (not IsRegexMatch(regex, result)) {\n    error (\"Sorry, wrong format\")\n  }\n  dict = Populate(regex, result)\n  msg (dict)\n  obj = GetObject(StringDictionaryItem(dict, \"object\"))\n  if (obj = null) {\n    error (\"Sorry, object not recognised\")\n  }\n  att = StringDictionaryItem(dict, \"attribute\")\n  value = StringDictionaryItem(dict, \"value\")\n  msg (obj)\n  msg (\"att: \" + att)\n  msg (\"value: \" + value)\n  \n  set (obj, att, value)\n  //At this point, obj.att is set up with whatever value holds as the string.\n  setscriptcommand = obj.name + \".\" + att + \" =&gt; {\" + StringDictionaryItem(dict, \"value\") + \"}\"\n  msg (\"setscriptcommand: \" + setscriptcommand)\n  objatt = obj.name + \".\" + att\n  msg (\"objatt: \" + objatt)\n  objattdict = NewScriptDictionary()\n  msg (\"objattdict: \" + objattdict)\n  valuescript =&gt; value\n  msg (\"valuescript: \" + valuescript)\n  dictionary add (objattdict, att, valuescript))\n  msg (\"objattdict: \" + objattdict)\n  msg (\"ScriptDictionaryItem(objattdict, att): \" + ScriptDictionaryItem(objattdict, att))\n  msg (\"Done\")\n\n}\n</code></pre>\n<p>&gt; script<br>\nEnter the your one line script now. Example:#object#.#attribute# =&gt; {msg (\"Hello, Forum!\")}</p>\n<p>Doing box.push =&gt; msg (\"HELLO\")<br>\nDictionary: object = box;attribute = push;value = msg (\"HELLO\")<br>\nObject: box<br>\natt: push<br>\nvalue: msg (\"HELLO\")<br>\nsetscriptcommand: box.push =&gt; {msg (\"HELLO\")}<br>\nobjatt: box.push<br>\nobjattdict: Dictionary:<br>\nvaluescript: { value }<br>\nobjattdict: Dictionary: push = { value }<br>\nScriptDictionaryItem(objattdict, att): { value }<br>\nDone</p>\n<p>&gt; push box<br>\nmsg (\"HELLO\")</p>\n<hr>\n<p><code>obj.att</code></p>\n<p>This creates <code>box.att</code>. Hehehe.</p>\n<p>And it doesn't like <code>obj.+ att</code> or <code>obj.\" + att + \"</code>...</p>\n<p>That's why I changed the line to <code>value = StringDictionaryItem(dict, \"value\")</code> and made it a string attribute first with <code>set (obj, att, value)</code> (which is directly from the SET case in Pixie's cheat script).</p>\n<p>I thought I could just make that a NewScriptDictionary afterwards, but I'd still need to use <code>obj.att</code> to pull it off.</p>\n<p>...unless I used a Switch script, and utilized <code>foreach (cmd, AllCommands())</code> to add each available verb as a CASE...</p>\n<pre><code>case (\"push\") {\n  obj.push =&gt; value\n}\n</code></pre>\n<p>That probably still wouldn't work though...</p>\n\n",
      "PostDate": "2017-09-01T21:50:42.749911Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2152d229-b530-4f13-bd83-05a68be9af66",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "this is way beyond my ability already, KV, and thus I'm not really able to follow along with it... but...\r\n\r\nhave you tried...\r\n\r\ndo (obj, att, value)\r\n\r\nor maybe...\r\n\r\ndo (obj, att, Eval (value))\r\n\r\nor maybe....\r\n\r\nevaluate_variable = Eval (value)\r\ndo (obj, att, evaluate_variable)\r\n\r\nor maybe....\r\n\r\nscript_variable => { Eval (value) }\r\ndo (obj, att, script_variable)\r\n\r\nor maybe....\r\n\r\nevaluate_variable = Eval (value) \r\nscript_variable => { evaluate_variable }\r\ndo (obj, att, script_variable)\r\n\r\nor maybe....\r\n\r\nscript_variable => Eval (\"{\" + value + \"}\")\r\ndo (obj, att, script_variable)",
      "EditableFormat": "markdown",
      "HTML": "<p>this is way beyond my ability already, KV, and thus I'm not really able to follow along with it... but...</p>\n<p>have you tried...</p>\n<p>do (obj, att, value)</p>\n<p>or maybe...</p>\n<p>do (obj, att, Eval (value))</p>\n<p>or maybe....</p>\n<p>evaluate_variable = Eval (value)<br>\ndo (obj, att, evaluate_variable)</p>\n<p>or maybe....</p>\n<p>script_variable =&gt; { Eval (value) }<br>\ndo (obj, att, script_variable)</p>\n<p>or maybe....</p>\n<p>evaluate_variable = Eval (value)<br>\nscript_variable =&gt; { evaluate_variable }<br>\ndo (obj, att, script_variable)</p>\n<p>or maybe....</p>\n<p>script_variable =&gt; Eval (\"{\" + value + \"}\")<br>\ndo (obj, att, script_variable)</p>\n\n",
      "PostDate": "2017-09-02T00:17:49.825621Z",
      "LastEditDate": "2017-09-02T00:26:28.5867496Z",
      "link": null
    },
    {
      "PostId": "bb252f97-e1f0-46da-a5bd-348c9839eaa3",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I tried all of those but ```script_variable => Eval (\"{\" + value + \"}\")```, but it doesn't like that either:\r\n\r\n/> script\r\nEnter the your one line script now. Example:#object#.#attribute# => {msg (\"Hello, Forum!\")}\r\n\r\nDoing box.push => msg (\"HELLO\")\r\nDictionary: object = box;attribute = push;value = msg (\"HELLO\")\r\nObject: box\r\natt: push\r\nvalue: { Eval (\"{\" + value + \"}\") }\r\nError running script: Function not found: 'Eval'\r\n\r\n---\r\n>As far as I know, you cannot convert a string to a script, so you cannot do it the first way. However, you can use the Eval function to run a string. I am not sure if there are limitations on that, but I think it needs to return a value, and may only cope with a single command.\r\n\r\nbox.push => msg (\"NO!\")\r\n\r\n\r\n```obj = GetObject(StringDictionaryItem(dict, \"object\"))```\r\n\r\nObject = box\r\n\r\n```att = StringDictionaryItem(dict, \"attribute\")```\r\n\r\natt = push\r\n\r\n```  value = Eval(StringDictionaryItem(dict, \"value\"))```\r\n\r\nvalue = msg (\"NO!\")\r\n\r\n\r\nBut:\r\n\r\n```obj.att => msg (\"NO!\")``` \r\n\r\nI get **box.att** which returns the string \"msg (\"NO!\")\"\r\n\r\nset (box, att, value)\r\n\r\nI get:\r\n\r\n**box.push** which returns the string \"msg (\"NO!\")\"\r\n\r\n---\r\nI just had one more idea:\r\n\r\n\r\n**#object#.#text1# => #text2#**\r\n\r\n```\r\nmsg (object)\r\nmsg (text1)\r\nmsg (text2)\r\nobject.text1 => {\r\n  msg (text2)\r\n}\r\n```\r\n\r\nHa! This sets it as a script! It doesn't put text2 in there, but it's a little bit of progress; right?\r\n\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/29992599-5a8f6942-8f65-11e7-98a4-03bca8d1e65b.png)\r\n\r\n\r\n---\r\nNow, title1 is the problem...\r\n\r\nI'm gonna try\r\n\r\n ```\r\nset (object, title1, value)\r\n```\r\n\r\nNow, if there's a way to create a new script dictionary without having to use the ```object.attribute = NewScriptDictionary()``` format, I bet we may be able to do this!\r\n\r\n---\r\n## UPDATE\r\n\r\nThe box.text1 attribute was a string that displayed \"Script: msg (text1)\".\r\n\r\nHa! That's funny!\r\n\r\nI give up.\r\n\r\n(Should have listened to ThePix in the first place...)\r\n\r\n\r\nThanks for all the help though, everyone!",
      "EditableFormat": "markdown",
      "HTML": "<p>I tried all of those but <code>script_variable =&gt; Eval (\"{\" + value + \"}\")</code>, but it doesn't like that either:</p>\n<p>/&gt; script<br>\nEnter the your one line script now. Example:#object#.#attribute# =&gt; {msg (\"Hello, Forum!\")}</p>\n<p>Doing box.push =&gt; msg (\"HELLO\")<br>\nDictionary: object = box;attribute = push;value = msg (\"HELLO\")<br>\nObject: box<br>\natt: push<br>\nvalue: { Eval (\"{\" + value + \"}\") }<br>\nError running script: Function not found: 'Eval'</p>\n<hr>\n<blockquote>\n<p>As far as I know, you cannot convert a string to a script, so you cannot do it the first way. However, you can use the Eval function to run a string. I am not sure if there are limitations on that, but I think it needs to return a value, and may only cope with a single command.</p>\n</blockquote>\n<p>box.push =&gt; msg (\"NO!\")</p>\n<p><code>obj = GetObject(StringDictionaryItem(dict, \"object\"))</code></p>\n<p>Object = box</p>\n<p><code>att = StringDictionaryItem(dict, \"attribute\")</code></p>\n<p>att = push</p>\n<p><code>value = Eval(StringDictionaryItem(dict, \"value\"))</code></p>\n<p>value = msg (\"NO!\")</p>\n<p>But:</p>\n<p><code>obj.att =&gt; msg (\"NO!\")</code></p>\n<p>I get <strong>box.att</strong> which returns the string \"msg (\"NO!\")\"</p>\n<p>set (box, att, value)</p>\n<p>I get:</p>\n<p><strong>box.push</strong> which returns the string \"msg (\"NO!\")\"</p>\n<hr>\n<p>I just had one more idea:</p>\n<p><strong>#object#.#text1# =&gt; #text2#</strong></p>\n<pre><code>msg (object)\nmsg (text1)\nmsg (text2)\nobject.text1 =&gt; {\n  msg (text2)\n}\n</code></pre>\n<p>Ha! This sets it as a script! It doesn't put text2 in there, but it's a little bit of progress; right?</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/29992599-5a8f6942-8f65-11e7-98a4-03bca8d1e65b.png\" alt=\"image\"></p>\n<hr>\n<p>Now, title1 is the problem...</p>\n<p>I'm gonna try</p>\n<pre><code>set (object, title1, value)\n</code></pre>\n<p>Now, if there's a way to create a new script dictionary without having to use the <code>object.attribute = NewScriptDictionary()</code> format, I bet we may be able to do this!</p>\n<hr>\n<h2>UPDATE</h2>\n<p>The box.text1 attribute was a string that displayed \"Script: msg (text1)\".</p>\n<p>Ha! That's funny!</p>\n<p>I give up.</p>\n<p>(Should have listened to ThePix in the first place...)</p>\n<p>Thanks for all the help though, everyone!</p>\n\n",
      "PostDate": "2017-09-02T04:06:38.9643601Z",
      "LastEditDate": "2017-09-02T04:40:34.8072707Z",
      "link": null
    },
    {
      "PostId": "f752115b-06c4-443d-8d82-a5afc720a9a8",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\nI get box.att which returns the string \"msg (\"NO!\")\"\r\n\r\nset (box, att, value)\r\n\r\nI get:\r\n\r\nbox.push which returns the string \"msg (\"NO!\")\"\r\n\r\n(by KV)\r\n```\r\n\r\nmaybe try this:\r\n\r\nEval (box.push)\r\n\r\nor this:\r\n\r\ninvoke (box.push)\r\n\r\nor this:\r\n\r\ndo (box, \"push\")\r\n\r\nor this:\r\n\r\ndo (box, \"push\", value)\r\n\r\n----------\r\n\r\n\"(Should have listened to ThePix in the first place...) (KV)\"\r\n\r\nya, but it'd be cool to figure out how to do something that Pixie couldn't .... if only we could though... failure so far...\r\n\r\n-----------------\r\n\r\nand I forgot that the 'msg' Function is special, as there's all of the underlying and/or built-in coding for it (as it can be seen as a String Value or as a Script Value). The 'msg' Function is kinda like a universal/general/super Function, maybe the 'Eval' Function is programmed into the 'msg' Function...\r\n\r\nSo, maybe you're on to something... maybe you can figure it out via some way of using the 'msg' Function.\r\n\r\n------------------\r\n\r\nP.S.\r\n\r\nalso, noticed within your post about a Script Dictionary:\r\n\r\nwhy not just use a Script Dictionary (if it can work)?\r\n\r\n// obj = box\r\n// att = \"push\"\r\n// value => { msg (\"hello\") }\r\nset (obj, att, value) // box.push = \"msg (\\\"hello\\\")\"\r\nset (obj, \"script_dictionary_attribute\", value)\r\ndo (obj, \"script_dictionary_attribute\")\r\n\r\n--------\r\n\r\nactually.. why doesn't/wouldn't this work?\r\n\r\nobj = box\r\natt = \"push\"\r\ntext = \"msg (\\\"hello\\\")\"\r\nvalue => { text }\r\nset (obj, att, value)\r\ndo (obj, att)\r\n\r\nor maybe this:\r\n\r\nobj = box\r\natt = \"push\"\r\ntext = \"msg (\\\"hello\\\")\"\r\nstring_variable = \"{\" + text + \"}\"\r\nvalue => string_variable\r\nset (obj, att, value)\r\ndo (obj, att)\r\n\r\n--------------------\r\n\r\nLastly....\r\n\r\nJay found a trick where you can use a 2nd Dictionary as a VARIABLE for/within your 1st Dictionary, which awesomely-somehow causes the 2nd Dictionary's 'keys' and 'values' to be VARIABLES/Parameters that can be used by the 1st Dictionary's scripting...\r\n\r\nmaybe you could use this for getting a string into a script...",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>I get box.att which returns the string \"msg (\"NO!\")\"\n\nset (box, att, value)\n\nI get:\n\nbox.push which returns the string \"msg (\"NO!\")\"\n\n(by KV)\n</code></pre>\n<p>maybe try this:</p>\n<p>Eval (box.push)</p>\n<p>or this:</p>\n<p>invoke (box.push)</p>\n<p>or this:</p>\n<p>do (box, \"push\")</p>\n<p>or this:</p>\n<p>do (box, \"push\", value)</p>\n<hr>\n<p>\"(Should have listened to ThePix in the first place...) (KV)\"</p>\n<p>ya, but it'd be cool to figure out how to do something that Pixie couldn't .... if only we could though... failure so far...</p>\n<hr>\n<p>and I forgot that the 'msg' Function is special, as there's all of the underlying and/or built-in coding for it (as it can be seen as a String Value or as a Script Value). The 'msg' Function is kinda like a universal/general/super Function, maybe the 'Eval' Function is programmed into the 'msg' Function...</p>\n<p>So, maybe you're on to something... maybe you can figure it out via some way of using the 'msg' Function.</p>\n<hr>\n<p>P.S.</p>\n<p>also, noticed within your post about a Script Dictionary:</p>\n<p>why not just use a Script Dictionary (if it can work)?</p>\n<p>// obj = box<br>\n// att = \"push\"<br>\n// value =&gt; { msg (\"hello\") }<br>\nset (obj, att, value) // box.push = \"msg (\"hello\")\"<br>\nset (obj, \"script_dictionary_attribute\", value)<br>\ndo (obj, \"script_dictionary_attribute\")</p>\n<hr>\n<p>actually.. why doesn't/wouldn't this work?</p>\n<p>obj = box<br>\natt = \"push\"<br>\ntext = \"msg (\"hello\")\"<br>\nvalue =&gt; { text }<br>\nset (obj, att, value)<br>\ndo (obj, att)</p>\n<p>or maybe this:</p>\n<p>obj = box<br>\natt = \"push\"<br>\ntext = \"msg (\"hello\")\"<br>\nstring_variable = \"{\" + text + \"}\"<br>\nvalue =&gt; string_variable<br>\nset (obj, att, value)<br>\ndo (obj, att)</p>\n<hr>\n<p>Lastly....</p>\n<p>Jay found a trick where you can use a 2nd Dictionary as a VARIABLE for/within your 1st Dictionary, which awesomely-somehow causes the 2nd Dictionary's 'keys' and 'values' to be VARIABLES/Parameters that can be used by the 1st Dictionary's scripting...</p>\n<p>maybe you could use this for getting a string into a script...</p>\n\n",
      "PostDate": "2017-09-02T07:37:10.6356347Z",
      "LastEditDate": "2017-09-02T08:06:50.9221376Z",
      "link": null
    },
    {
      "PostId": "0730c4b3-8804-4388-a10b-561f642b927e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "HK,\r\n\r\nYeah... I tried all those, unfortunately.\r\n\r\n...and here's the dictionary bits that work with strings but not scripts:\r\n\r\n```C++\r\nmsg (obj)\r\n  msg (\"att: \" + att)\r\n  msg (\"value: \" + value)\r\n  \r\n  set (obj, att, value)\r\n  //At this point, obj.att is set up with whatever value holds as the string.\r\n  setscriptcommand = obj.name + \".\" + att + \" => {\" + StringDictionaryItem(dict, \"value\") + \"}\"\r\n  msg (\"setscriptcommand: \" + setscriptcommand)\r\n  objatt = obj.name + \".\" + att\r\n  msg (\"objatt: \" + objatt)\r\n  objattdict = NewScriptDictionary()\r\n  msg (\"objattdict: \" + objattdict)\r\n  valuescript => value\r\n  msg (\"valuescript: \" + valuescript)\r\n  dictionary add (objattdict, att, valuescript))\r\n  msg (\"objattdict: \" + objattdict)\r\n  msg (\"ScriptDictionaryItem(objattdict, att): \" + ScriptDictionaryItem(objattdict, att))\r\n```\r\n\r\n\r\nEval seems to just return a string, too, but I honestly have no idea what the heck Eval is doing!\r\n\r\nI know it can display a string and perform mathematical operations. It doesn't seem to like the string within ```msg (\"WHATEVER\")``` though...\r\n\r\n\r\n---\r\nI can too post this here!!!",
      "EditableFormat": "markdown",
      "HTML": "<p>HK,</p>\n<p>Yeah... I tried all those, unfortunately.</p>\n<p>...and here's the dictionary bits that work with strings but not scripts:</p>\n<pre><code>msg (obj)\n  msg (\"att: \" + att)\n  msg (\"value: \" + value)\n  \n  set (obj, att, value)\n  //At this point, obj.att is set up with whatever value holds as the string.\n  setscriptcommand = obj.name + \".\" + att + \" =&gt; {\" + StringDictionaryItem(dict, \"value\") + \"}\"\n  msg (\"setscriptcommand: \" + setscriptcommand)\n  objatt = obj.name + \".\" + att\n  msg (\"objatt: \" + objatt)\n  objattdict = NewScriptDictionary()\n  msg (\"objattdict: \" + objattdict)\n  valuescript =&gt; value\n  msg (\"valuescript: \" + valuescript)\n  dictionary add (objattdict, att, valuescript))\n  msg (\"objattdict: \" + objattdict)\n  msg (\"ScriptDictionaryItem(objattdict, att): \" + ScriptDictionaryItem(objattdict, att))\n</code></pre>\n<p>Eval seems to just return a string, too, but I honestly have no idea what the heck Eval is doing!</p>\n<p>I know it can display a string and perform mathematical operations. It doesn't seem to like the string within <code>msg (\"WHATEVER\")</code> though...</p>\n<hr>\n<p>I can too post this here!!!</p>\n\n",
      "PostDate": "2017-09-02T08:12:41.3841616Z",
      "LastEditDate": "2017-09-02T08:20:36.7292413Z",
      "link": null
    },
    {
      "PostId": "483f3c27-4c54-4b5c-8cb5-f32beb2e4417",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Jay found a trick where you can use a 2nd Dictionary as a VARIABLE for/within your 1st Dictionary, which awesomely-somehow causes the 2nd Dictionary's 'keys' and 'values' to be VARIABLES/Parameters that can be used by the 1st Dictionary's scripting...\r\n\r\nThat guy was crazier than I am! (Plus, he seemed to know what the hell he was doing!)\r\n\r\nIf you find a post with Jay and Pixie collaborating on something, just go on ahead and download/copy & paste everything towards the bottom of the thread, because that stuff is ALWAYS awesome!\r\n\r\n---\r\nI've been wondering if there's a way to download all of the old forum attachments. I found the folder's URL, but I never ran the BASH! script that would download the entire directory. (I'd hate to overload the server. Plus, there's NO TELLING what all I'd end up with! Probably more screenshots than anything...)\r\n\r\n\r\n---\r\n\r\n\r\n---\r\nBUT...\r\n\r\n\r\nI already stole that trick from Pixie's CHEAT SET script:\r\n\r\n```\r\nregex = \"(?<object>.+)\\\\.(?<attribute>\\\\S+)\\\\s*=>\\\\s*(?<value>.+)\"\r\n  if (not IsRegexMatch(regex, result)) {\r\n    error (\"Sorry, wrong format\")\r\n  }\r\n  dict = Populate(regex, result)\r\n  msg (dict)\r\n  obj = GetObject(StringDictionaryItem(dict, \"object\"))\r\n  if (obj = null) {\r\n    error (\"Sorry, object not recognised\")\r\n  }\r\n  att = StringDictionaryItem(dict, \"attribute\")\r\n  value = StringDictionaryItem(dict, \"value\")\r\n  msg (obj)\r\n  msg (\"att: \" + att)\r\n  msg (\"value: \" + value)\r\n  //All of these print out correctly.\r\n  set (obj, att, value)\r\n  //At this point, obj.att is set up with whatever its value holds as the string.\r\n```\r\n\r\n\r\n---\r\nNow, at this point, if ```att``` is an actual command or verb (like push), you can enter PUSH BOX and it will print the string like you set it up to give a text only response.\r\n\r\nMaybe populating a Script Dictionary with ```value``` is the key...",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Jay found a trick where you can use a 2nd Dictionary as a VARIABLE for/within your 1st Dictionary, which awesomely-somehow causes the 2nd Dictionary's 'keys' and 'values' to be VARIABLES/Parameters that can be used by the 1st Dictionary's scripting...</p>\n</blockquote>\n<p>That guy was crazier than I am! (Plus, he seemed to know what the hell he was doing!)</p>\n<p>If you find a post with Jay and Pixie collaborating on something, just go on ahead and download/copy &amp; paste everything towards the bottom of the thread, because that stuff is ALWAYS awesome!</p>\n<hr>\n<p>I've been wondering if there's a way to download all of the old forum attachments. I found the folder's URL, but I never ran the BASH! script that would download the entire directory. (I'd hate to overload the server. Plus, there's NO TELLING what all I'd end up with! Probably more screenshots than anything...)</p>\n<hr>\n<hr>\n<p>BUT...</p>\n<p>I already stole that trick from Pixie's CHEAT SET script:</p>\n<pre><code>regex = \"(?&lt;object&gt;.+)\\\\.(?&lt;attribute&gt;\\\\S+)\\\\s*=&gt;\\\\s*(?&lt;value&gt;.+)\"\n  if (not IsRegexMatch(regex, result)) {\n    error (\"Sorry, wrong format\")\n  }\n  dict = Populate(regex, result)\n  msg (dict)\n  obj = GetObject(StringDictionaryItem(dict, \"object\"))\n  if (obj = null) {\n    error (\"Sorry, object not recognised\")\n  }\n  att = StringDictionaryItem(dict, \"attribute\")\n  value = StringDictionaryItem(dict, \"value\")\n  msg (obj)\n  msg (\"att: \" + att)\n  msg (\"value: \" + value)\n  //All of these print out correctly.\n  set (obj, att, value)\n  //At this point, obj.att is set up with whatever its value holds as the string.\n</code></pre>\n<hr>\n<p>Now, at this point, if <code>att</code> is an actual command or verb (like push), you can enter PUSH BOX and it will print the string like you set it up to give a text only response.</p>\n<p>Maybe populating a Script Dictionary with <code>value</code> is the key...</p>\n\n",
      "PostDate": "2017-09-02T08:17:28.5459336Z",
      "LastEditDate": "2017-09-02T08:23:49.9024918Z",
      "link": null
    },
    {
      "PostId": "03523730-e9c5-4e66-9755-883e236f5e40",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "script_variable => { msg (\"hello\") }\r\nscript_dictionarys_items_key_value_string_variable = \"1 = \" + script_variable\r\nset (obj, \"script_dictionary_attribute\", script_dictionarys_items_key_value_string_variable)\r\ndo (obj, \"script_dictionary_attribute\", \"1\")\r\n\r\nor:\r\n\r\nstring_variable = \"msg (\" + \"hello\" + \")\"\r\nscript_dictionarys_items_key_value_string_variable = \"1 = \" + string_variable\r\nset (obj, \"script_dictionary_attribute\", script_dictionarys_items_key_value_string_variable)\r\ndo (obj, \"script_dictionary_attribute\", \"1\")\r\n\r\n--------------------\r\n\r\nor, if you can't use 'set' to create a Script Dictionary:\r\n\r\n--\r\n\r\nscript_variable => { msg (\"hello\") }\r\nscript_dictionarys_items_key_value_string_variable = \"1 = \" + script_variable\r\nbox.script_dictionary_attribute = NewScriptDictionary ()\r\ndictionary add (box.script_dictionary_attribute, script_dictionarys_items_key_value_string_variable)\r\ndo (box, \"script_dictionary_attribute\", \"1\") // or: invoke (box.script_dictionary_attribute, \"1\")\r\n\r\nor:\r\n\r\nstring_variable = \"msg (\" + \"hello\" + \")\"\r\nscript_dictionarys_items_key_value_string_variable = \"1 = \" + string_variable\r\nbox.script_dictionary_attribute = NewScriptDictionary ()\r\ndictionary add (box.script_dictionary_attribute, script_dictionarys_items_key_value_string_variable)\r\ndo (box, \"script_dictionary_attribute\", \"1\") // or: invoke (box.script_dictionary_attribute, \"1\")",
      "EditableFormat": "markdown",
      "HTML": "<p>script_variable =&gt; { msg (\"hello\") }<br>\nscript_dictionarys_items_key_value_string_variable = \"1 = \" + script_variable<br>\nset (obj, \"script_dictionary_attribute\", script_dictionarys_items_key_value_string_variable)<br>\ndo (obj, \"script_dictionary_attribute\", \"1\")</p>\n<p>or:</p>\n<p>string_variable = \"msg (\" + \"hello\" + \")\"<br>\nscript_dictionarys_items_key_value_string_variable = \"1 = \" + string_variable<br>\nset (obj, \"script_dictionary_attribute\", script_dictionarys_items_key_value_string_variable)<br>\ndo (obj, \"script_dictionary_attribute\", \"1\")</p>\n<hr>\n<p>or, if you can't use 'set' to create a Script Dictionary:</p>\n<p>--</p>\n<p>script_variable =&gt; { msg (\"hello\") }<br>\nscript_dictionarys_items_key_value_string_variable = \"1 = \" + script_variable<br>\nbox.script_dictionary_attribute = NewScriptDictionary ()<br>\ndictionary add (box.script_dictionary_attribute, script_dictionarys_items_key_value_string_variable)<br>\ndo (box, \"script_dictionary_attribute\", \"1\") // or: invoke (box.script_dictionary_attribute, \"1\")</p>\n<p>or:</p>\n<p>string_variable = \"msg (\" + \"hello\" + \")\"<br>\nscript_dictionarys_items_key_value_string_variable = \"1 = \" + string_variable<br>\nbox.script_dictionary_attribute = NewScriptDictionary ()<br>\ndictionary add (box.script_dictionary_attribute, script_dictionarys_items_key_value_string_variable)<br>\ndo (box, \"script_dictionary_attribute\", \"1\") // or: invoke (box.script_dictionary_attribute, \"1\")</p>\n\n",
      "PostDate": "2017-09-02T08:45:13.980835Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
