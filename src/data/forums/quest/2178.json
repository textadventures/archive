{
  "Topic": {
    "TopicId": "2178",
    "ForumId": "10",
    "Title": "Enumerate Exits with their destination?",
    "LastUpdated": "2009-10-01T21:24:25+01:00",
    "ReplyCount": 5
  },
  "Posts": [
    {
      "PostId": "16960",
      "UserId": 0,
      "Username": "MaxVK",
      "UserAvatar": null,
      "UserGravatar": "6d7b766f542038f043882f5634574754",
      "EditableText": "Hi, I'm trying to list all of the exits in a room, along with their destinations so that I can format the text nicely myself, however I have run into a problem with the latest change to the way exits are handled.\n\nThe code Iv found with searching is all related to the '.places. etc, but this has changed and I cant work out how to do it.\n\nExample: the player enters Room1. I manually print the name of the room and the description, but I would like to also list the exits like this:\n\nYou may go:\nNorth to Room2\nWest to Room3\nUP the stairs\n\nThis would (hopefully) include the ability to format the output so that the directions are in Bold and the destination name is in blue. Iv seen the information that I want in the debug window, but for the life of me I cant work out how to get to it myself.\n\nAny help please?\n\nregards\n\nMax",
      "EditableFormat": "bbcode",
      "HTML": "Hi, I'm trying to list all of the exits in a room, along with their destinations so that I can format the text nicely myself, however I have run into a problem with the latest change to the way exits are handled.<br/><br/>The code Iv found with searching is all related to the '.places. etc, but this has changed and I cant work out how to do it.<br/><br/>Example: the player enters Room1. I manually print the name of the room and the description, but I would like to also list the exits like this:<br/><br/>You may go:<br/>North to Room2<br/>West to Room3<br/>UP the stairs<br/><br/>This would (hopefully) include the ability to format the output so that the directions are in Bold and the destination name is in blue. Iv seen the information that I want in the debug window, but for the life of me I cant work out how to get to it myself.<br/><br/>Any help please?<br/><br/>regards<br/><br/>Max",
      "PostDate": "2009-08-24T10:35:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16967",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Hi Max\n\nBecause Quest doesn't have a way of easily reading where a directional exit leads to, I can only think of two ways to get the effect you want.\n\nOne is to move the player around invisibly  - visiting all the adjacent rooms to collect the location detail - but that is messy and creates a lot of potential for nasty problems.\n\nTwo, (and what I'd do if i wanted to create this effect) is to create properties for each potential location at design time, then read them to output below the room description.  I've mocked up a three location example (code below) which only deals with the four main points of the compass, but it could easily be extended for the intermediate directions and up/down.\n\n[code:1ovs5qhq]\n\n' Quest 4&#46;1 ASL Template\n\ndefine game &lt;Exit Demo&gt;\n\tasl-version &lt;410&gt;\n\tgametype singleplayer\n\tgame version &lt;1&#46;0&gt;\n\tgame author &lt;MaDbRiT&gt;\n\tgame copyright &lt;© 2009 AGB&gt;\n\tgame info &lt;Demo&#46;&gt;\n\tstart &lt;library&gt;\n\n  description {\n    do &lt;Describe_Proc&gt;\n  }\nend define\n\ndefine room &lt;library&gt;\n  prefix &lt;the&gt;\n  properties &lt;northto=the |cl|bstoreroom&#46;|xb|cb; southto=z; westto=z; eastto=z&gt;\n  north &lt;storeroom&gt;\nend define\n\ndefine room &lt;storeroom&gt;\n  prefix &lt;the&gt;\n  properties &lt;northto=z; southto=the |cl|blibrary&#46;|xb|cb; westto=the |cl|bboilehouse&#46;|xb|cb; eastto=z&gt;\n  south &lt;library&gt;\n  west &lt;boilerhouse&gt;\nend define\n\ndefine room &lt;boilerhouse&gt;\n  prefix &lt;the&gt;\n  properties &lt;eastto=the |cl|bstoreroom&#46;|xb|cb; southto=z; northto=z; westto=z&gt;\n  east &lt;storeroom&gt;\nend define\n\ndefine procedure &lt;Describe_Proc&gt;\n  set string &lt;Proc_indescription;$gettag(#quest&#46;currentroom#;indescription)$&gt;\n  if is &lt;#Proc_indescription#;&gt; then {\n    msg &lt;|nYou are in $gettag(#quest&#46;currentroom#;prefix)$ |b|cl#quest&#46;currentroom#&#46;|cb|xb|xn&gt;\n  }\n  else {\n      msg &lt;|n#Proc_indescription#$gettag(#quest&#46;currentroom#;prefix)$ |b|cl#quest&#46;currentroom#&#46;|cb|xb|xn&gt; \n  }\t\n  msg &lt;|n&gt;\n  set string &lt;My_Exits;You can go&#46;&#46;&#46;&gt; \n  if (#(quest&#46;currentroom)&#58;northto#&lt;&gt;z) then {\n     set &lt;My_Exits;#My_Exits# |n|i|crNorth |cb|xito #(quest&#46;currentroom)&#58;northto#&gt;\n  }\n  if (#(quest&#46;currentroom)&#58;southto#&lt;&gt;z) then {\n     set &lt;My_Exits;#My_Exits# |n|i|crSouth |cb|xito #(quest&#46;currentroom)&#58;southto#&gt;\n  } \n   if (#(quest&#46;currentroom)&#58;eastto#&lt;&gt;z) then {\n     set &lt;My_Exits;#My_Exits# |n|i|crEast |cb|xito #(quest&#46;currentroom)&#58;eastto#&gt;\n  }\n  if (#(quest&#46;currentroom)&#58;westto#&lt;&gt;z) then {\n     set &lt;My_Exits;#My_Exits# |n|i|crWest |cb|xito #(quest&#46;currentroom)&#58;westto#&gt;\n  } \n  if not ( #My_Exits# = You can go&#46;&#46;&#46;) then {\n    msg &lt;#My_Exits#&gt;\n  }\nend define\n\ndefine text &lt;intro&gt;\nEnter intro text here\nend define\n\ndefine text &lt;win&gt;\nEnter win text here\nend define\n\ndefine text &lt;lose&gt;\nEnter lose text here\nend define\n[/code:1ovs5qhq]\n\nHopefully how this works is pretty easy to follow, but do feel free to ask if it isn't clear.\n\nAl (MaDbRiT)\n\nif you save  all the code as an .asl file it should be a runnable demo in Quest",
      "EditableFormat": "bbcode",
      "HTML": "Hi Max<br/><br/>Because Quest doesn't have a way of easily reading where a directional exit leads to, I can only think of two ways to get the effect you want.<br/><br/>One is to move the player around invisibly  - visiting all the adjacent rooms to collect the location detail - but that is messy and creates a lot of potential for nasty problems.<br/><br/>Two, (and what I'd do if i wanted to create this effect) is to create properties for each potential location at design time, then read them to output below the room description.  I've mocked up a three location example (code below) which only deals with the four main points of the compass, but it could easily be extended for the intermediate directions and up/down.<br/><br/><pre><code><br/><br/>' Quest 4&#46;1 ASL Template<br/><br/>define game &lt;Exit Demo&gt;<br/>\tasl-version &lt;410&gt;<br/>\tgametype singleplayer<br/>\tgame version &lt;1&#46;0&gt;<br/>\tgame author &lt;MaDbRiT&gt;<br/>\tgame copyright &lt;© 2009 AGB&gt;<br/>\tgame info &lt;Demo&#46;&gt;<br/>\tstart &lt;library&gt;<br/><br/>  description {<br/>    do &lt;Describe_Proc&gt;<br/>  }<br/>end define<br/><br/>define room &lt;library&gt;<br/>  prefix &lt;the&gt;<br/>  properties &lt;northto=the |cl|bstoreroom&#46;|xb|cb; southto=z; westto=z; eastto=z&gt;<br/>  north &lt;storeroom&gt;<br/>end define<br/><br/>define room &lt;storeroom&gt;<br/>  prefix &lt;the&gt;<br/>  properties &lt;northto=z; southto=the |cl|blibrary&#46;|xb|cb; westto=the |cl|bboilehouse&#46;|xb|cb; eastto=z&gt;<br/>  south &lt;library&gt;<br/>  west &lt;boilerhouse&gt;<br/>end define<br/><br/>define room &lt;boilerhouse&gt;<br/>  prefix &lt;the&gt;<br/>  properties &lt;eastto=the |cl|bstoreroom&#46;|xb|cb; southto=z; northto=z; westto=z&gt;<br/>  east &lt;storeroom&gt;<br/>end define<br/><br/>define procedure &lt;Describe_Proc&gt;<br/>  set string &lt;Proc_indescription;$gettag(#quest&#46;currentroom#;indescription)$&gt;<br/>  if is &lt;#Proc_indescription#;&gt; then {<br/>    msg &lt;|nYou are in $gettag(#quest&#46;currentroom#;prefix)$ |b|cl#quest&#46;currentroom#&#46;|cb|xb|xn&gt;<br/>  }<br/>  else {<br/>      msg &lt;|n#Proc_indescription#$gettag(#quest&#46;currentroom#;prefix)$ |b|cl#quest&#46;currentroom#&#46;|cb|xb|xn&gt; <br/>  }\t<br/>  msg &lt;|n&gt;<br/>  set string &lt;My_Exits;You can go&#46;&#46;&#46;&gt; <br/>  if (#(quest&#46;currentroom)&#58;northto#&lt;&gt;z) then {<br/>     set &lt;My_Exits;#My_Exits# |n|i|crNorth |cb|xito #(quest&#46;currentroom)&#58;northto#&gt;<br/>  }<br/>  if (#(quest&#46;currentroom)&#58;southto#&lt;&gt;z) then {<br/>     set &lt;My_Exits;#My_Exits# |n|i|crSouth |cb|xito #(quest&#46;currentroom)&#58;southto#&gt;<br/>  } <br/>   if (#(quest&#46;currentroom)&#58;eastto#&lt;&gt;z) then {<br/>     set &lt;My_Exits;#My_Exits# |n|i|crEast |cb|xito #(quest&#46;currentroom)&#58;eastto#&gt;<br/>  }<br/>  if (#(quest&#46;currentroom)&#58;westto#&lt;&gt;z) then {<br/>     set &lt;My_Exits;#My_Exits# |n|i|crWest |cb|xito #(quest&#46;currentroom)&#58;westto#&gt;<br/>  } <br/>  if not ( #My_Exits# = You can go&#46;&#46;&#46;) then {<br/>    msg &lt;#My_Exits#&gt;<br/>  }<br/>end define<br/><br/>define text &lt;intro&gt;<br/>Enter intro text here<br/>end define<br/><br/>define text &lt;win&gt;<br/>Enter win text here<br/>end define<br/><br/>define text &lt;lose&gt;<br/>Enter lose text here<br/>end define<br/></code></pre><br/><br/>Hopefully how this works is pretty easy to follow, but do feel free to ask if it isn't clear.<br/><br/>Al (MaDbRiT)<br/><br/>if you save  all the code as an .asl file it should be a runnable demo in Quest",
      "PostDate": "2009-08-27T20:47:28+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16970",
      "UserId": 0,
      "Username": "MaxVK",
      "UserAvatar": null,
      "UserGravatar": "6d7b766f542038f043882f5634574754",
      "EditableText": "Thanks Al, Ill give that a go later on.\n\nregards\n\nMax",
      "EditableFormat": "bbcode",
      "HTML": "Thanks Al, Ill give that a go later on.<br/><br/>regards<br/><br/>Max",
      "PostDate": "2009-08-27T21:45:49+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "17016",
      "UserId": 0,
      "Username": "Arbutus",
      "UserAvatar": null,
      "UserGravatar": "8592c0fe872d1d1e7468550ad6cf381c",
      "EditableText": "I threw this together in QDK for fun. For each exit in the current room, it sets variables so you can access the names of the rooms to which they point.\n\nBecause Quest can only have one variable in a property read (eg. #(variable):property# NOT #(variable1):(variable2)#) I had to use a Select Case to hard code the exit directions to read those properties. The code does not account for missing room prefixes and fails if the exit is a SCRIPT instead of a room name. But if you have room prefixes and all exits are just room names it works fine. You can even use this to read room descriptions or any other room property if you wanted.\n\n[code:1b3ur6t4]Print &quot;You may go&#58;&quot; \nFor each exit in &quot;#quest&#46;currentroom#&quot; \nChange the contents of numeric variable &quot;i&quot; to &quot;$instr(#quest&#46;thing#;&#46;)$&quot; \nDecrement &quot;i&quot; \nChange the contents of string &quot;room&quot; to &quot;$left(#quest&#46;thing#;%i%)$&quot; \nIncrement &quot;i&quot; by &quot;2&quot; \nChange the contents of string &quot;exit&quot; to &quot;$mid(#quest&#46;thing#;%i%)$&quot; \nPrint &quot;#exit# to #(room)&#58;prefix# &#91;NO NEW LINE&#93;&quot; \nSelect Case &quot;#exit#&quot; { \nCase &quot;north&quot; &#58; Print &quot;#(room)&#58;north#&quot; \nCase &quot;south&quot; &#58; Print &quot;#(room)&#58;south#&quot; \nCase &quot;east&quot; &#58; Print &quot;#(room)&#58;east#&quot; \nCase &quot;west&quot; &#58; Print &quot;#(room)&#58;west#&quot; \nCase &quot;northeast&quot; &#58; Print &quot;#(room)&#58;northeast#&quot; \nCase &quot;southeast&quot; &#58; Print &quot;#(room)&#58;southeast#&quot; \nCase &quot;northwest&quot; &#58; Print &quot;#(room)&#58;northwest#&quot; \nCase &quot;southwest&quot; &#58; Print &quot;#(room)&#58;southwest#&quot; \nCase &quot;up&quot; &#58; Print &quot;#(room)&#58;up#&quot; \nCase &quot;down&quot; &#58; Print &quot;#(room)&#58;down#&quot; \nCase &quot;out&quot; &#58; Print &quot;#(room)&#58;out#&quot; \n} } [/code:1b3ur6t4]",
      "EditableFormat": "bbcode",
      "HTML": "I threw this together in QDK for fun. For each exit in the current room, it sets variables so you can access the names of the rooms to which they point.<br/><br/>Because Quest can only have one variable in a property read (eg. #(variable):property# NOT #(variable1):(variable2)#) I had to use a Select Case to hard code the exit directions to read those properties. The code does not account for missing room prefixes and fails if the exit is a SCRIPT instead of a room name. But if you have room prefixes and all exits are just room names it works fine. You can even use this to read room descriptions or any other room property if you wanted.<br/><br/><pre><code>Print &quot;You may go&#58;&quot; <br/>For each exit in &quot;#quest&#46;currentroom#&quot; <br/>Change the contents of numeric variable &quot;i&quot; to &quot;$instr(#quest&#46;thing#;&#46;)$&quot; <br/>Decrement &quot;i&quot; <br/>Change the contents of string &quot;room&quot; to &quot;$left(#quest&#46;thing#;%i%)$&quot; <br/>Increment &quot;i&quot; by &quot;2&quot; <br/>Change the contents of string &quot;exit&quot; to &quot;$mid(#quest&#46;thing#;%i%)$&quot; <br/>Print &quot;#exit# to #(room)&#58;prefix# &#91;NO NEW LINE&#93;&quot; <br/>Select Case &quot;#exit#&quot; { <br/>Case &quot;north&quot; &#58; Print &quot;#(room)&#58;north#&quot; <br/>Case &quot;south&quot; &#58; Print &quot;#(room)&#58;south#&quot; <br/>Case &quot;east&quot; &#58; Print &quot;#(room)&#58;east#&quot; <br/>Case &quot;west&quot; &#58; Print &quot;#(room)&#58;west#&quot; <br/>Case &quot;northeast&quot; &#58; Print &quot;#(room)&#58;northeast#&quot; <br/>Case &quot;southeast&quot; &#58; Print &quot;#(room)&#58;southeast#&quot; <br/>Case &quot;northwest&quot; &#58; Print &quot;#(room)&#58;northwest#&quot; <br/>Case &quot;southwest&quot; &#58; Print &quot;#(room)&#58;southwest#&quot; <br/>Case &quot;up&quot; &#58; Print &quot;#(room)&#58;up#&quot; <br/>Case &quot;down&quot; &#58; Print &quot;#(room)&#58;down#&quot; <br/>Case &quot;out&quot; &#58; Print &quot;#(room)&#58;out#&quot; <br/>} } </code></pre>",
      "PostDate": "2009-10-01T07:01:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "17017",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "[quote:3mgrswkw]Because Quest can only have one variable in a property read (eg. #(variable):property# NOT #(variable1):(variable2)#) ...[/quote:3mgrswkw]\n\nActually, in the ASL Documentation -&gt; Built-in Functions -&gt; Obsolete Functions there is this:\n\n[quote:3mgrswkw][b:3mgrswkw]$objectproperty(object name; property name)$[/b:3mgrswkw]\nReturns the value of the specified property of the specified object. Returns &quot;!&quot; and reports an ASL error if the specified object or property does not exist. This function is obsolete as it is equivalent to using #object:property# - see Reading Properties for more information.[/quote:3mgrswkw]\n\nThis function is far from obsolete (as has been pointed out before), for exactly the reason you've described above.  Now both the [i:3mgrswkw]object[/i:3mgrswkw] and the [i:3mgrswkw]property[/i:3mgrswkw] can be variables:\n\n$objectproperty(#object#; #property#)$\n\nI can see, however, that you are using QDK, so I'm not sure (since the function is designated as obsolete) if $objectproperty$ is available through the GUI.  Here's a shortened, hand-coded version, using your same technique, Arbutus:\n\n[code:3mgrswkw]description {\n\t\n\t\tmsg &lt;|b#(quest&#46;currentroom)&#58;alias#|xb|n&gt;\n\t\tmsg &lt;#(quest&#46;currentroom)&#58;look#|n&gt;\n\t\t\n\t\tfor each exit in &lt;#quest&#46;currentroom#&gt; {\n\t\t\tset numeric &lt;i; $lengthof(#quest&#46;thing#)$ - $instr(#quest&#46;thing#;&#46;)$&gt;\n\t\t\tset string &lt;s; $right(#quest&#46;thing#; %i%)$&gt;\n\t\t\tmsg &lt;|b$capfirst(#s#)$&#58;|xb |cl#(quest&#46;thing)&#58;to#|cb&gt;\n\t\t}\n\t}\n}[/code:3mgrswkw]\n\nGranted, I haven't had to use $objectproperty()$ in this case, because exits have a &quot;to&quot; property.  Below is an attached demo ASL file, which anyone interested can just run, and then take a peek into.  Very simple!",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>Because Quest can only have one variable in a property read (eg. #(variable):property# NOT #(variable1):(variable2)#) ...</p></blockquote><br/><br/>Actually, in the ASL Documentation -&gt; Built-in Functions -&gt; Obsolete Functions there is this:<br/><br/><blockquote><p><span style=\"font-weight:bold;\">$objectproperty(object name; property name)$</span><br/>Returns the value of the specified property of the specified object. Returns &quot;!&quot; and reports an ASL error if the specified object or property does not exist. This function is obsolete as it is equivalent to using #object:property# - see Reading Properties for more information.</p></blockquote><br/><br/>This function is far from obsolete (as has been pointed out before), for exactly the reason you've described above.  Now both the <span style=\"font-style:italic;\">object</span> and the <span style=\"font-style:italic;\">property</span> can be variables:<br/><br/>$objectproperty(#object#; #property#)$<br/><br/>I can see, however, that you are using QDK, so I'm not sure (since the function is designated as obsolete) if $objectproperty$ is available through the GUI.  Here's a shortened, hand-coded version, using your same technique, Arbutus:<br/><br/><pre><code>description {<br/>\t<br/>\t\tmsg &lt;|b#(quest&#46;currentroom)&#58;alias#|xb|n&gt;<br/>\t\tmsg &lt;#(quest&#46;currentroom)&#58;look#|n&gt;<br/>\t\t<br/>\t\tfor each exit in &lt;#quest&#46;currentroom#&gt; {<br/>\t\t\tset numeric &lt;i; $lengthof(#quest&#46;thing#)$ - $instr(#quest&#46;thing#;&#46;)$&gt;<br/>\t\t\tset string &lt;s; $right(#quest&#46;thing#; %i%)$&gt;<br/>\t\t\tmsg &lt;|b$capfirst(#s#)$&#58;|xb |cl#(quest&#46;thing)&#58;to#|cb&gt;<br/>\t\t}<br/>\t}<br/>}</code></pre><br/><br/>Granted, I haven't had to use $objectproperty()$ in this case, because exits have a &quot;to&quot; property.  Below is an attached demo ASL file, which anyone interested can just run, and then take a peek into.  Very simple!<div><a href=\"/forumattachments/27/RoomExits.asl\">RoomExits.asl</a></div>",
      "PostDate": "2009-10-01T13:33:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "17018",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "Oh, and by the way, Al - what is $gettag$?  T'isn't in the documentation.  Same functionality as $objectproperty$?\n\nAnd &quot;if is &lt;#var#;#value#&gt;&quot; ain't in the documentation either...I assume this is equivalent to &quot;if (#var# = #value#)&quot;?",
      "EditableFormat": "bbcode",
      "HTML": "Oh, and by the way, Al - what is $gettag$?  T'isn't in the documentation.  Same functionality as $objectproperty$?<br/><br/>And &quot;if is &lt;#var#;#value#&gt;&quot; ain't in the documentation either...I assume this is equivalent to &quot;if (#var# = #value#)&quot;?",
      "PostDate": "2009-10-01T21:24:25+01:00",
      "LastEditDate": null
    }
  ]
}