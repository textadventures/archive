{
  "Topic": {
    "TopicId": "2400",
    "ForumId": "10",
    "Title": "Function name in a variable",
    "LastUpdated": "2011-04-12T12:13:52+01:00",
    "ReplyCount": 3
  },
  "Posts": [
    {
      "PostId": "17737",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "Is it possible to call a function, if the functionname is in a variable? Something like\n\n&lt;function name=&quot;test1&quot; &gt;\n\t\tmsg(&quot;test&quot;)\n\t&lt;/function&gt; \n&lt;function name=&quot;test2&quot; &gt;\n\t\tmsg(&quot;test2&quot;)\n\t&lt;/function&gt; \n\nif(i=0) { skript=&quot;test1&quot;}\nelse { skript=&quot;test2&quot;}\ncall skript\n\nI discovered the Request(RunScript...)-command but it seams not to do something like this.",
      "EditableFormat": "bbcode",
      "HTML": "Is it possible to call a function, if the functionname is in a variable? Something like<br/><br/>&lt;function name=&quot;test1&quot; &gt;<br/>\t\tmsg(&quot;test&quot;)<br/>\t&lt;/function&gt; <br/>&lt;function name=&quot;test2&quot; &gt;<br/>\t\tmsg(&quot;test2&quot;)<br/>\t&lt;/function&gt; <br/><br/>if(i=0) { skript=&quot;test1&quot;}<br/>else { skript=&quot;test2&quot;}<br/>call skript<br/><br/>I discovered the Request(RunScript...)-command but it seams not to do something like this.",
      "PostDate": "2011-02-04T13:52:13+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17738",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "This is not possible, and I also think it's not desirable - I can't think of a good reason to add that feature.\n\nI need to document the Request command a bit better, but the idea is that it's for raising requests to the GUI. The RunScript option is for executing a JavaScript function in the interface HTML, not for Quest functions.",
      "EditableFormat": "bbcode",
      "HTML": "This is not possible, and I also think it's not desirable - I can't think of a good reason to add that feature.<br/><br/>I need to document the Request command a bit better, but the idea is that it's for raising requests to the GUI. The RunScript option is for executing a JavaScript function in the interface HTML, not for Quest functions.",
      "PostDate": "2011-02-04T17:45:17+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17977",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "See &quot;function pointers&quot;.\n\nFor example, sort functions usually take a function pointer as an argument:\n\nDefine a function &quot;compare_weights&quot; that takes two objects and returns 1 if the first object is heavier, -1 if the second is, and 0 if they have the same weight.  Pass it to a sort function, and you'll sort the array by weight.\n\nDefine a function &quot;compare_alphabetically&quot; that takes two objects and returns positive, negative, or 0, depending on whether the printed name of the first is alphabetically before, after, or the same as, the second.  Pass it to a sort function, and you'll sort them alphabetically.\n\n(OTOH, Quest's lack of a typing mechanism and treatment of the string names as true identities wrecks most of the protections such a system would have.)",
      "EditableFormat": "bbcode",
      "HTML": "See &quot;function pointers&quot;.<br/><br/>For example, sort functions usually take a function pointer as an argument:<br/><br/>Define a function &quot;compare_weights&quot; that takes two objects and returns 1 if the first object is heavier, -1 if the second is, and 0 if they have the same weight.  Pass it to a sort function, and you'll sort the array by weight.<br/><br/>Define a function &quot;compare_alphabetically&quot; that takes two objects and returns positive, negative, or 0, depending on whether the printed name of the first is alphabetically before, after, or the same as, the second.  Pass it to a sort function, and you'll sort them alphabetically.<br/><br/>(OTOH, Quest's lack of a typing mechanism and treatment of the string names as true identities wrecks most of the protections such a system would have.)",
      "PostDate": "2011-04-10T16:51:02+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "17995",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "Well in fact we do have delegates in Quest 5. It's currently only implemented for object properties but could easily be expanded to variables as well.\n\nIt's basically an extension of the fact that an object property or variable can be a script. So you can have an apple's &quot;eat&quot; property as a script, and that's what runs when you eat the apple - exactly the same as you can do in Quest 4.\n\nIn Quest 5 you can declare that these script properties are delegate implementations. So far we're only using this for &quot;adding to a container&quot; functionality - take a look at the references to &quot;AddScript&quot; in the core libraries.\n\nThe declaration of the delegate is at the top of Core.aslx:\n[code:3k7b6j3e]\n&lt;delegate name=&quot;AddScript&quot; parameters=&quot;object&quot; /&gt;\n[/code:3k7b6j3e]\n\nThen the container_limited type has the following for its &quot;addscript&quot; property. Instead of type=&quot;script&quot;, we have type=&quot;AddScript&quot;:\n\n[code:3k7b6j3e]\n    &lt;addscript type=&quot;AddScript&quot;&gt;\n      children = GetDirectChildren(this)\n      if (listcount(children) &gt;= this&#46;maxobjects) {\n        msg (DynamicTemplate(&quot;ContainerFull&quot;, this))\n      }\n      else {\n        object&#46;parent = this\n        msg (Template(&quot;Done&quot;))\n      }\n    &lt;/addscript&gt;\n[/code:3k7b6j3e]\n\nWe're using a delegate here so that we can pass an object into the script. But the delegate declaration lets you specify a return value as well, just like any &quot;normal&quot; function, so you can return values from a delegate too.\n\nTo run a delegate, you can use the &quot;rundelegate&quot; script command (if it doesn't return a value) or the &quot;RunDelegateFunction&quot; function (if it does return a value).\n\nAt the moment, running a delegate with rundelegate/RunDelegateFunction requires you to pass in an object name and property name, but there's no reason why we couldn't overload these to allow you to pass in a variable instead.",
      "EditableFormat": "bbcode",
      "HTML": "Well in fact we do have delegates in Quest 5. It's currently only implemented for object properties but could easily be expanded to variables as well.<br/><br/>It's basically an extension of the fact that an object property or variable can be a script. So you can have an apple's &quot;eat&quot; property as a script, and that's what runs when you eat the apple - exactly the same as you can do in Quest 4.<br/><br/>In Quest 5 you can declare that these script properties are delegate implementations. So far we're only using this for &quot;adding to a container&quot; functionality - take a look at the references to &quot;AddScript&quot; in the core libraries.<br/><br/>The declaration of the delegate is at the top of Core.aslx:<br/><pre><code><br/>&lt;delegate name=&quot;AddScript&quot; parameters=&quot;object&quot; /&gt;<br/></code></pre><br/><br/>Then the container_limited type has the following for its &quot;addscript&quot; property. Instead of type=&quot;script&quot;, we have type=&quot;AddScript&quot;:<br/><br/><pre><code><br/>    &lt;addscript type=&quot;AddScript&quot;&gt;<br/>      children = GetDirectChildren(this)<br/>      if (listcount(children) &gt;= this&#46;maxobjects) {<br/>        msg (DynamicTemplate(&quot;ContainerFull&quot;, this))<br/>      }<br/>      else {<br/>        object&#46;parent = this<br/>        msg (Template(&quot;Done&quot;))<br/>      }<br/>    &lt;/addscript&gt;<br/></code></pre><br/><br/>We're using a delegate here so that we can pass an object into the script. But the delegate declaration lets you specify a return value as well, just like any &quot;normal&quot; function, so you can return values from a delegate too.<br/><br/>To run a delegate, you can use the &quot;rundelegate&quot; script command (if it doesn't return a value) or the &quot;RunDelegateFunction&quot; function (if it does return a value).<br/><br/>At the moment, running a delegate with rundelegate/RunDelegateFunction requires you to pass in an object name and property name, but there's no reason why we couldn't overload these to allow you to pass in a variable instead.",
      "PostDate": "2011-04-12T12:13:52+01:00",
      "LastEditDate": null
    }
  ]
}
