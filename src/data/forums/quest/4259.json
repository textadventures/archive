{
  "Topic": {
    "TopicId": "4259",
    "ForumId": "10",
    "Title": "Few simple questions - eat / exit name changing",
    "LastUpdated": "2014-04-04T03:03:20+01:00",
    "ReplyCount": 3
  },
  "Posts": [
    {
      "PostId": "28329",
      "UserId": 0,
      "Username": "Novirtue",
      "UserAvatar": null,
      "UserGravatar": "68b8bdb5de42a3d2824c5d45ddb79e9d",
      "EditableText": "For now I have two questions which I hope are simple questions.\n\nI am trying to make a zombie game, where the player is a zombie, I have a hunger counter that increases over time.\n\n1) Is there a way that after I eat a person to reduce hunger as well as restore health? On the browser version the edible tab only allows me to make a change to the health, is it possible to customize it to change a different variable in the game, such as the hunger stat?\n\n2) Also, another quick question when it comes to naming exits, I want to have a hallway with multiple west exits, I can't figure out when someone tries to go west, how to make them read different from the game interface, I've tried changing suffix/prefix/alias, but when I write: &quot;West&quot; it says:\n\n1. west\n2. west\n3. west",
      "EditableFormat": "bbcode",
      "HTML": "For now I have two questions which I hope are simple questions.<br/><br/>I am trying to make a zombie game, where the player is a zombie, I have a hunger counter that increases over time.<br/><br/>1) Is there a way that after I eat a person to reduce hunger as well as restore health? On the browser version the edible tab only allows me to make a change to the health, is it possible to customize it to change a different variable in the game, such as the hunger stat?<br/><br/>2) Also, another quick question when it comes to naming exits, I want to have a hallway with multiple west exits, I can't figure out when someone tries to go west, how to make them read different from the game interface, I've tried changing suffix/prefix/alias, but when I write: &quot;West&quot; it says:<br/><br/>1. west<br/>2. west<br/>3. west",
      "PostDate": "2014-04-02T14:59:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28353",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "there's only the &quot;score&quot; and &quot;health&quot; built-in functions which use a percentile (which I still have trouble in understanding, lol).\n\nso, you simply have to create your own (custom) attributes yourself.\n\nI'm not familiar with the browser~on-line version, but I think you got to use the &quot;game&quot; Object's &quot;start&quot; script to create attributes.\n\nIn the GUI~Editor (off-line~desktop) version:\n\n&quot;game&quot; -&gt; Scripts (Tab) -&gt; Start -&gt; Add a script -&gt; Variables -&gt; Set a variable or an attribute -&gt; (see examples below)\n\nObject.Attribute = Value_or_Expression\ngame.Attribute = Value_or_Expression\n\ngame.player_health = 999\ngame.player_hunger = 99\ngame.player_damage = 100\ngame.player_agility = 75\ngame.zombie_dead = false\ngame.zombie_health = 500\ngame.zombie_dexterity = 25\ngame.zombie_damage = 50\n\n(if you can use~have other Objects, then you can use them instead of the &quot;game&quot; object, again I never used the browser version before. for example, it would look like this: player.agility = 75)\n\nand then to change it, you use the same syntax in a script, an example (in code, as I'm lazy) of a bit more advanced scripting:\n\n&quot;fight&quot; Verb Scripting (not sure how this is done in the browser version):\n\n(my arrows ' -&gt; ' on the far left, merely indicate the indenting~nesting required, so you don't actually write them into the code)\n\nif (game.zombie_dead = false) {\n-&gt; if (game.zombie_dexterity &gt; game.player_agility) {\n-&gt;-&gt; game.player_health = game.player_health - game.zombie_damage\n-&gt;-&gt; msg (&quot;The zombie hits you for &quot; + game.zombie_damage + &quot; damage, and you now have only &quot; + game.player_health + &quot; health left.&quot;)\n-&gt;-&gt; if (game.player_health &lt;= 0) {\n-&gt;-&gt;-&gt; msg (&quot;You were killed by the zombie.&quot;)\n-&gt;-&gt;-&gt; msg (&quot;GAME OVER&quot;)\n-&gt;-&gt;-&gt; finish\n-&gt;-&gt; }\n-&gt; } else if (game.zombie_dexterity &lt;= game.player_agility) {\n-&gt;-&gt; game.zombie_health = game.zombie_health - game.player_damage\n-&gt;-&gt; msg (&quot;You damage the zombie for &quot; + game.player_damage + &quot; health, and now it only has &quot; + game.zombie_health + &quot; health left.&quot;)\n-&gt;-&gt; if (game.zombie_health &lt;= 0) {\n-&gt;-&gt;-&gt; game.zombie_dead = true\n-&gt;-&gt;-&gt; msg (&quot;You killed the zombie.&quot;)\n-&gt;-&gt; }\n-&gt; }\n} else if (game.zombie_dead = true) {\n-&gt; msg (&quot;The zombie is already dead, silly.&quot;)\n}\n\n----------------------\n\nin the desktop~offline version, you can type in (change) the name that is given to the direction in one of the Editor's boxes (I don't have the editor up, so I don't know exactly what the text box is called for it), while still maintaining the same assigned direction. So, maybe if you can't see~find it, then the browser~on-line version doesn't have that option... (though you may be able to still change it, via the &quot;start&quot; script possibly, though you'd need to know the coding to do so, if it is possible).\n\n--------------------\n\nfor the desktop~off-line version:\n\nin code:\n\nObject.Attribute = Value_or_Expression\n\nexamples of 'as Values':\n\nplayer.current_hit_points = 999\nplayer.maximum_hit_points = 999\n\nexamples of 'as Expressions' (for these examples, computational Expressions):\n\nAddition:\n\nplayer.current_hit_points = player.current_hit_points + 100\n// conceptually: player.current_hit_points (new) = 999 (old) + 100 (Value)\n// new 'cur hp': 1099\n\nSubtraction:\n\nplayer.current_hit_points = player.current_hit_points - 500\n// conceptually: player.current_hit_points (new) = 999 (old) - 500 (Value)\n// new 'cur hp': 499\n\nMultiplication:\n\nplayer.current_hit_points = player.current_hit_points * 2\n// conceptually: player.current_hit_points (new) = 999 (old) * 2 (Value)\n// new 'cur hp': ~ 2000\n\nDivision:\n\nplayer.current_hit_points = player.current_hit_points / 10\n// conceptually: player.current_hit_points (new) = 999 (old) / 10 (Value)\n// new 'cur hp': ~ 100\n\n---------\n\nif (player.current_hit_points &gt; 999) {\n-&gt; player.current_hit_points = 999\n}\n\nif (player.current_hit_points &gt; player.maximum_hit_points) {\n-&gt; player.current_hit_points = player.maximum_hit_points\n}\n\nusing a '50 hp potion', it's &quot;drink&quot; Verb scripting:\n\nplayer.current_hit_points = player.current_hit_points + 50\nmsg (&quot;You drank the potion, restoring 50 of your hp.&quot;)\n\n&quot;eating&quot; Verb (of a &quot;zombie&quot; Object):\n\n(remember that you have to create~add~set the Object.Attribute, ie &quot;player.hunger = 99&quot;, before the below script can work)\n\nplayer.hunger = player.hunger + 50\nmsg (&quot;You ate the zombie, restoring 50 points back to your hunger level.&quot;)\n\nin the GUI~Editor (again for the desktop~off-line version), to create~add~set Attributes:\n\n&quot;whatever&quot; Object -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt; (some examples below)\n\nObject: &quot;player&quot; (the default Player Object)\nAttribute Name: health_x (this, the added &quot;_x&quot;, is so that I don't over-write the built-in &quot;health&quot; functioning, in case I want to still use it too)\nAttribute Type: int (integer)\nValue: 999\n\nObject: &quot;game&quot; (the Game Object)\nAttribute Name: hunger\nAttribute Type: int\nAttribute Value: 99\n\nObject: &quot;zombie&quot;\nAttribute Name: dead\nAttribute Type: boolean\nAttribute Value: false\n\nObject: &quot;HK&quot;\nAttribute Name: favorite_color_string\nAttribute Type: string\nAttribute Value: black\n\nObject: &quot;HK&quot;\nAttribute Name: favorite_colors_string_list\nAttribute Type: stringlist\nAttribute Value: black; red",
      "EditableFormat": "bbcode",
      "HTML": "there's only the &quot;score&quot; and &quot;health&quot; built-in functions which use a percentile (which I still have trouble in understanding, lol).<br/><br/>so, you simply have to create your own (custom) attributes yourself.<br/><br/>I'm not familiar with the browser~on-line version, but I think you got to use the &quot;game&quot; Object's &quot;start&quot; script to create attributes.<br/><br/>In the GUI~Editor (off-line~desktop) version:<br/><br/>&quot;game&quot; -&gt; Scripts (Tab) -&gt; Start -&gt; Add a script -&gt; Variables -&gt; Set a variable or an attribute -&gt; (see examples below)<br/><br/>Object.Attribute = Value_or_Expression<br/>game.Attribute = Value_or_Expression<br/><br/>game.player_health = 999<br/>game.player_hunger = 99<br/>game.player_damage = 100<br/>game.player_agility = 75<br/>game.zombie_dead = false<br/>game.zombie_health = 500<br/>game.zombie_dexterity = 25<br/>game.zombie_damage = 50<br/><br/>(if you can use~have other Objects, then you can use them instead of the &quot;game&quot; object, again I never used the browser version before. for example, it would look like this: player.agility = 75)<br/><br/>and then to change it, you use the same syntax in a script, an example (in code, as I'm lazy) of a bit more advanced scripting:<br/><br/>&quot;fight&quot; Verb Scripting (not sure how this is done in the browser version):<br/><br/>(my arrows ' -&gt; ' on the far left, merely indicate the indenting~nesting required, so you don't actually write them into the code)<br/><br/>if (game.zombie_dead = false) {<br/>-&gt; if (game.zombie_dexterity &gt; game.player_agility) {<br/>-&gt;-&gt; game.player_health = game.player_health - game.zombie_damage<br/>-&gt;-&gt; msg (&quot;The zombie hits you for &quot; + game.zombie_damage + &quot; damage, and you now have only &quot; + game.player_health + &quot; health left.&quot;)<br/>-&gt;-&gt; if (game.player_health &lt;= 0) {<br/>-&gt;-&gt;-&gt; msg (&quot;You were killed by the zombie.&quot;)<br/>-&gt;-&gt;-&gt; msg (&quot;GAME OVER&quot;)<br/>-&gt;-&gt;-&gt; finish<br/>-&gt;-&gt; }<br/>-&gt; } else if (game.zombie_dexterity &lt;= game.player_agility) {<br/>-&gt;-&gt; game.zombie_health = game.zombie_health - game.player_damage<br/>-&gt;-&gt; msg (&quot;You damage the zombie for &quot; + game.player_damage + &quot; health, and now it only has &quot; + game.zombie_health + &quot; health left.&quot;)<br/>-&gt;-&gt; if (game.zombie_health &lt;= 0) {<br/>-&gt;-&gt;-&gt; game.zombie_dead = true<br/>-&gt;-&gt;-&gt; msg (&quot;You killed the zombie.&quot;)<br/>-&gt;-&gt; }<br/>-&gt; }<br/>} else if (game.zombie_dead = true) {<br/>-&gt; msg (&quot;The zombie is already dead, silly.&quot;)<br/>}<br/><br/>----------------------<br/><br/>in the desktop~offline version, you can type in (change) the name that is given to the direction in one of the Editor's boxes (I don't have the editor up, so I don't know exactly what the text box is called for it), while still maintaining the same assigned direction. So, maybe if you can't see~find it, then the browser~on-line version doesn't have that option... (though you may be able to still change it, via the &quot;start&quot; script possibly, though you'd need to know the coding to do so, if it is possible).<br/><br/>--------------------<br/><br/>for the desktop~off-line version:<br/><br/>in code:<br/><br/>Object.Attribute = Value_or_Expression<br/><br/>examples of 'as Values':<br/><br/>player.current_hit_points = 999<br/>player.maximum_hit_points = 999<br/><br/>examples of 'as Expressions' (for these examples, computational Expressions):<br/><br/>Addition:<br/><br/>player.current_hit_points = player.current_hit_points + 100<br/>// conceptually: player.current_hit_points (new) = 999 (old) + 100 (Value)<br/>// new 'cur hp': 1099<br/><br/>Subtraction:<br/><br/>player.current_hit_points = player.current_hit_points - 500<br/>// conceptually: player.current_hit_points (new) = 999 (old) - 500 (Value)<br/>// new 'cur hp': 499<br/><br/>Multiplication:<br/><br/>player.current_hit_points = player.current_hit_points * 2<br/>// conceptually: player.current_hit_points (new) = 999 (old) * 2 (Value)<br/>// new 'cur hp': ~ 2000<br/><br/>Division:<br/><br/>player.current_hit_points = player.current_hit_points / 10<br/>// conceptually: player.current_hit_points (new) = 999 (old) / 10 (Value)<br/>// new 'cur hp': ~ 100<br/><br/>---------<br/><br/>if (player.current_hit_points &gt; 999) {<br/>-&gt; player.current_hit_points = 999<br/>}<br/><br/>if (player.current_hit_points &gt; player.maximum_hit_points) {<br/>-&gt; player.current_hit_points = player.maximum_hit_points<br/>}<br/><br/>using a '50 hp potion', it's &quot;drink&quot; Verb scripting:<br/><br/>player.current_hit_points = player.current_hit_points + 50<br/>msg (&quot;You drank the potion, restoring 50 of your hp.&quot;)<br/><br/>&quot;eating&quot; Verb (of a &quot;zombie&quot; Object):<br/><br/>(remember that you have to create~add~set the Object.Attribute, ie &quot;player.hunger = 99&quot;, before the below script can work)<br/><br/>player.hunger = player.hunger + 50<br/>msg (&quot;You ate the zombie, restoring 50 points back to your hunger level.&quot;)<br/><br/>in the GUI~Editor (again for the desktop~off-line version), to create~add~set Attributes:<br/><br/>&quot;whatever&quot; Object -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt; (some examples below)<br/><br/>Object: &quot;player&quot; (the default Player Object)<br/>Attribute Name: health_x (this, the added &quot;_x&quot;, is so that I don't over-write the built-in &quot;health&quot; functioning, in case I want to still use it too)<br/>Attribute Type: int (integer)<br/>Value: 999<br/><br/>Object: &quot;game&quot; (the Game Object)<br/>Attribute Name: hunger<br/>Attribute Type: int<br/>Attribute Value: 99<br/><br/>Object: &quot;zombie&quot;<br/>Attribute Name: dead<br/>Attribute Type: boolean<br/>Attribute Value: false<br/><br/>Object: &quot;HK&quot;<br/>Attribute Name: favorite_color_string<br/>Attribute Type: string<br/>Attribute Value: black<br/><br/>Object: &quot;HK&quot;<br/>Attribute Name: favorite_colors_string_list<br/>Attribute Type: stringlist<br/>Attribute Value: black; red",
      "PostDate": "2014-04-03T19:56:29+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28354",
      "UserId": 0,
      "Username": "Novirtue",
      "UserAvatar": null,
      "UserGravatar": "68b8bdb5de42a3d2824c5d45ddb79e9d",
      "EditableText": "This helps, thanks a lot.",
      "EditableFormat": "bbcode",
      "HTML": "This helps, thanks a lot.",
      "PostDate": "2014-04-03T21:24:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28356",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "let me know if you got any questions, or need any help with anything. I don't explain things clearly, so if you're confused by anything, feel free to say so, and I'll try to make it more clear for you so you can understand it.\n\nbecause the &quot;&gt;&quot; and &quot;&lt;&quot; characters are used for the 'tagging' in coding, when you want to use these characters for their computational meaning (greater than and lesser than), you need to add this (only when typing in your code directly):\n\n&lt;![CDATA[ (your scriptings) ]]&gt;\n\n(an example)\n\n[code:r9uxhoeq]&lt;object name=&quot;zombie_1&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;alias&gt;zombie&lt;/alias&gt;\n  &lt;attr name=&quot;dead&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;\n  &lt;attr name=&quot;hit_points&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;fight&quot; type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n    if (this&#46;dead = true) {\n      msg (&quot;The zombie is already dead, silly&#46;&quot;)\n    } else if (this&#46;dead = false) {\n      if (player&#46;speed &gt; this&#46;speed) {\n        this&#46;hit_points = this&#46;hit_points - player&#46;damage\n        msg (&quot;You damage the &quot; + this&#46;alias + &quot; for &quot; + player&#46;damage + &quot; points, and this&#46;article now has only &quot; + this&#46;hit_points + &quot; HPs left&#46;&quot;)\n        if (this&#46;hit_points &lt;= 0) {\n          this&#46;dead = true\n        }\n      } else {\n        player&#46;hit_points = player&#46;hit_points - this&#46;damage\n        msg (&quot;You're damaged for &quot; + this&#46;damage + &quot; points, and you now have only &quot; + player&#46;hit_points + &quot; HPs left&#46;&quot;)\n        if (player&#46;hit_points &lt;= 0) {\n          msg (&quot;GAME OVER&quot;)\n        }\n      }\n    }\n  &#93;&#93;&gt;&lt;/attr&gt;\n  &lt;attr name=&quot;ingest&quot; type=&quot;script&quot;&gt;\n    if (this&#46;dead = true) {\n      player&#46;hit_points = player&#46;hit_points + 50\n      player&#46;hunger = player&#46;hunger + 10\n      msg (&quot;You eat the zombie, restoring 50 of your HPs and 10 of your hunger level&#46;&quot;)\n    } else if (this&#46;dead = false) {\n      msg (&quot;The zombie is still alive, you'll have to kill it first, before you can eat it&#46;&quot;)\n    }\n  &lt;/attr&gt;\n  &lt;attr name=&quot;displayverbs&quot; type=&quot;listextend&quot;&gt;Fight;Eat&lt;/attr&gt;\n&lt;/object&gt;[/code:r9uxhoeq]",
      "EditableFormat": "bbcode",
      "HTML": "let me know if you got any questions, or need any help with anything. I don't explain things clearly, so if you're confused by anything, feel free to say so, and I'll try to make it more clear for you so you can understand it.<br/><br/>because the &quot;&gt;&quot; and &quot;&lt;&quot; characters are used for the 'tagging' in coding, when you want to use these characters for their computational meaning (greater than and lesser than), you need to add this (only when typing in your code directly):<br/><br/>&lt;![CDATA[ (your scriptings) ]]&gt;<br/><br/>(an example)<br/><br/><pre><code>&lt;object name=&quot;zombie_1&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;alias&gt;zombie&lt;/alias&gt;<br/>  &lt;attr name=&quot;dead&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;<br/>  &lt;attr name=&quot;hit_points&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;fight&quot; type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    if (this&#46;dead = true) {<br/>      msg (&quot;The zombie is already dead, silly&#46;&quot;)<br/>    } else if (this&#46;dead = false) {<br/>      if (player&#46;speed &gt; this&#46;speed) {<br/>        this&#46;hit_points = this&#46;hit_points - player&#46;damage<br/>        msg (&quot;You damage the &quot; + this&#46;alias + &quot; for &quot; + player&#46;damage + &quot; points, and this&#46;article now has only &quot; + this&#46;hit_points + &quot; HPs left&#46;&quot;)<br/>        if (this&#46;hit_points &lt;= 0) {<br/>          this&#46;dead = true<br/>        }<br/>      } else {<br/>        player&#46;hit_points = player&#46;hit_points - this&#46;damage<br/>        msg (&quot;You're damaged for &quot; + this&#46;damage + &quot; points, and you now have only &quot; + player&#46;hit_points + &quot; HPs left&#46;&quot;)<br/>        if (player&#46;hit_points &lt;= 0) {<br/>          msg (&quot;GAME OVER&quot;)<br/>        }<br/>      }<br/>    }<br/>  &#93;&#93;&gt;&lt;/attr&gt;<br/>  &lt;attr name=&quot;ingest&quot; type=&quot;script&quot;&gt;<br/>    if (this&#46;dead = true) {<br/>      player&#46;hit_points = player&#46;hit_points + 50<br/>      player&#46;hunger = player&#46;hunger + 10<br/>      msg (&quot;You eat the zombie, restoring 50 of your HPs and 10 of your hunger level&#46;&quot;)<br/>    } else if (this&#46;dead = false) {<br/>      msg (&quot;The zombie is still alive, you'll have to kill it first, before you can eat it&#46;&quot;)<br/>    }<br/>  &lt;/attr&gt;<br/>  &lt;attr name=&quot;displayverbs&quot; type=&quot;listextend&quot;&gt;Fight;Eat&lt;/attr&gt;<br/>&lt;/object&gt;</code></pre>",
      "PostDate": "2014-04-04T03:03:20+01:00",
      "LastEditDate": null
    }
  ]
}
