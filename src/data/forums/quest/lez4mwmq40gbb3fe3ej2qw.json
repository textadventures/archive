{
  "Topic": {
    "TopicId": "lez4mwmq40gbb3fe3ej2qw",
    "ForumId": "10",
    "Title": "Checking if reachable objects have attribute",
    "LastUpdated": "2018-06-30T18:25:39.8940978Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "657c6184-7b46-4813-b824-c6b01654a5c1",
      "UserId": 366405,
      "Username": "Tibor",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6f863dce8acb8ab86b1040531fac5a8c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi guys, how are you all?\r\n\r\nI'm a bit new on quest, and for my first game i was creating a system where you can smoke cigarettes from a pack (yeah yeah I know :p). So far I created one object called Pack of Cigarettes,  that has an atributte that counts how many cigarettes are in it, and everytime you take one, I clone the object Cigarette  from outside the game (my \"limbo\" room) and put it in the inventory, and decrease one in the cigarrete from the pack. I wanted to make it as realistic as possible, because that's the goal of my game, but I though that it was better doing like this, instead of making the pack a mini container that holds twenty one separate cigarette objects.. I didn't have any other idea about this, so any opinions are welcome. \r\n\r\nThe real issue is, now I want the player to light the cigarette, and for this he needs a source of fire. I created one object \"Lighter\" and set an atribute \"sourceoffire\" in it. I plan to make everything that has fire , like a fireplace,  a candle, etc, to have this atributte, so i can use it in other ways later.\r\n\r\nNow for the player to light his cigarette he needs to have in reach some object that has this atributte \"sourceoffire\", be it in his inventory or in the same room, and if so, he can light his cigarette (and an apropriate msg appears), so I need to check if all the  reachable objects have this atributte, and I don't have any Idea how to do that. \r\n\r\nI dont want to use \"if player has object lighter\" i want \"if player have in inventory or in the same room an object with the atributte sourceoffire\"\r\n\r\n I was trying to understand the ScopeReachable function, if it has something to do with my issue, but I don't know. \r\n\r\nMaybe I'm trying too hard, and I could just make the lighter the only source of fire and check if I have one in inventory, but like I said, i want it to be realistic, and do something like that.\r\n\r\nAny ideas how i can check if reachable objects have atributte? Or any workarounds or other ideas?\r\n\r\nthanks in advance, and sorry for my english, i'm brazilian :)",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi guys, how are you all?</p>\n<p>I'm a bit new on quest, and for my first game i was creating a system where you can smoke cigarettes from a pack (yeah yeah I know :p). So far I created one object called Pack of Cigarettes,  that has an atributte that counts how many cigarettes are in it, and everytime you take one, I clone the object Cigarette  from outside the game (my \"limbo\" room) and put it in the inventory, and decrease one in the cigarrete from the pack. I wanted to make it as realistic as possible, because that's the goal of my game, but I though that it was better doing like this, instead of making the pack a mini container that holds twenty one separate cigarette objects.. I didn't have any other idea about this, so any opinions are welcome.</p>\n<p>The real issue is, now I want the player to light the cigarette, and for this he needs a source of fire. I created one object \"Lighter\" and set an atribute \"sourceoffire\" in it. I plan to make everything that has fire , like a fireplace,  a candle, etc, to have this atributte, so i can use it in other ways later.</p>\n<p>Now for the player to light his cigarette he needs to have in reach some object that has this atributte \"sourceoffire\", be it in his inventory or in the same room, and if so, he can light his cigarette (and an apropriate msg appears), so I need to check if all the  reachable objects have this atributte, and I don't have any Idea how to do that.</p>\n<p>I dont want to use \"if player has object lighter\" i want \"if player have in inventory or in the same room an object with the atributte sourceoffire\"</p>\n<p>I was trying to understand the ScopeReachable function, if it has something to do with my issue, but I don't know.</p>\n<p>Maybe I'm trying too hard, and I could just make the lighter the only source of fire and check if I have one in inventory, but like I said, i want it to be realistic, and do something like that.</p>\n<p>Any ideas how i can check if reachable objects have atributte? Or any workarounds or other ideas?</p>\n<p>thanks in advance, and sorry for my english, i'm brazilian :)</p>\n\n",
      "PostDate": "2018-06-30T18:25:39.8940978Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2f368dcd-aeeb-4704-aa9f-c3e137f4fb4d",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> container that holds twenty one separate cigarette objects\r\n\r\n21?  American packs only contain 20.  (I feel cheated!)\r\n\r\n---\r\nAssuming you set the boolean attribute \"sourceoffire\" to ```true``` on the lighter (and other fire sources):\r\n\r\n```\r\n// First, assume we have no fire source.\r\nhasfire = false\r\n// Iterate through all reachable objects.\r\nforeach (obj, ScopeReachable()){\r\n  // Check if object has the boolean attribute \"sourceoffire\" set to true\r\n  if (GetBoolean (obj, \"sourceoffire\")){\r\n    // If even one object that is reachable has \"sourceoffire\" set to true, we have fire!\r\n    hasfire = true\r\n  }\r\n}\r\nif (hasfire){\r\n  msg (\"You light it.\")\r\n  // Maybe do more stuff here.\r\n}\r\nelse {\r\n  msg (\"You have no fire source.\")\r\n  // Maybe do more stuff here.\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>container that holds twenty one separate cigarette objects</p>\n</blockquote>\n<p>21?  American packs only contain 20.  (I feel cheated!)</p>\n<hr>\n<p>Assuming you set the boolean attribute \"sourceoffire\" to <code>true</code> on the lighter (and other fire sources):</p>\n<pre><code>// First, assume we have no fire source.\nhasfire = false\n// Iterate through all reachable objects.\nforeach (obj, ScopeReachable()){\n  // Check if object has the boolean attribute \"sourceoffire\" set to true\n  if (GetBoolean (obj, \"sourceoffire\")){\n    // If even one object that is reachable has \"sourceoffire\" set to true, we have fire!\n    hasfire = true\n  }\n}\nif (hasfire){\n  msg (\"You light it.\")\n  // Maybe do more stuff here.\n}\nelse {\n  msg (\"You have no fire source.\")\n  // Maybe do more stuff here.\n}\n</code></pre>\n\n",
      "PostDate": "2018-06-30T19:18:45.7402211Z",
      "LastEditDate": "2018-06-30T19:34:33.5512588Z",
      "link": null
    },
    {
      "PostId": "a351f9a4-90c6-4840-9a70-5215fdfeac23",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you've actually got everything right (might be able to do a bit more efficient system/design, but that's not that important)!\r\n\r\nI'll use 'ScopeReachable()' as it returns an Object List of all Objects you can directly/immediately (it's not within some other Object for example, which you would have to open up, and/or unlock and then open up, first) interact with: objects within the room you can directly interact with and/or Objects within your inventory (contained within/on you, usually the default 'player' Player Object) that you can directly/immediately interact with:\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/corelibrary/scopereachable.html\r\n\r\nalso, I show a few methods/designs/concepts/ideas for you to know about and use if you want to for this or for later other stuff you want/need to do within your game, so you don't need all of them, as they do the same thing, or they're ideas for other uses within your game\r\n\r\nAlso, the above makes it a bit messy, and not the most efficient, and confusing too, so...\r\n\r\nif you need help understanding any of it, let me know\r\n\r\n```\r\n<object name=\"room\">\r\n\r\n  <inherit name=\"editor_room\" />\r\n\r\n</object>\r\n\r\n<object name=\"limbo\">\r\n\r\n  <inherit name=\"editor_room\" />\r\n\r\n</object>\r\n\r\n<object name=\"player\">\r\n\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n</object>\r\n\r\n<object name=\"lighter\">\r\n\r\n  <inherit name=\"lightable_type\" />\r\n\r\n  <inherit name=\"source_of_fire\" />\r\n\r\n  <attr name=\"parent\" type=\"object\">player</attr>\r\n\r\n</object>\r\n\r\n<object name=\"pack_of_cigarettes\">\r\n\r\n  <inherit name=\"editor_object\" />\r\n\r\n  <attr name=\"parent\" type=\"object\">player</attr>\r\n\r\n  <attr name=\"quantity\" type=\"int\">10</attr>\r\n\r\n  <attr name=\"take\" type=\"script\">\r\n\r\n    if (this.quantity = 0) {\r\n      msg (\"You're out of cigarettes\")\r\n    } else {\r\n      this.quantity = this.quantity - 1\r\n      object_variable = CloneObject (this)\r\n      object_variable.prototype = this // http://docs.textadventures.co.uk/quest/functions/corelibrary/cloneobject.html\r\n      object_variable.parent = player\r\n    }\r\n\r\n  </attr>\r\n\r\n</object>\r\n\r\n<object name=\"cigarette\">\r\n\r\n  <inherit name=\"editor_object\" />\r\n\r\n  <inherit name=\"flammable_type\" />\r\n\r\n  <attr name=\"parent\" type=\"object\">limbo</attr>\r\n\r\n  <attr name=\"alias\" type=\"string\">cigarette</attr>\r\n\r\n  <attr name=\"example_script_attribute\" type=\"script\">\r\n\r\n    msg (\"You light your cigarette, and start smoking it\")\r\n\r\n  </attr>\r\n\r\n</object>\r\n\r\n<type name=\"source_of_fire\">\r\n\r\n  <attr name=\"light\" type=\"script\">\r\n\r\n    if (DoesInherit (this, \"lightable_type\") or GetString (this, \"type_string\") = \"lightable\") {\r\n      foreach (object_variable, ScopeReachable ()) {\r\n        if (DoesInherit (object_variable, \"flammable_type\") or GetString (object_variable, \"type_string\") = \"flammable\") {\r\n          do (object_variable, \"example_script_attribute\")\r\n        }\r\n      }\r\n    }\r\n\r\n  </attr>\r\n\r\n</type>\r\n\r\n<type name=\"lightable_type\">\r\n\r\n  <attr name=\"type_string\" type=\"string\">lightable</attr>\r\n\r\n</type>\r\n\r\n<type name=\"flammable_type\">\r\n\r\n  <attr name=\"type_string\" type=\"string\">flammable</attr>\r\n\r\n</type>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>you've actually got everything right (might be able to do a bit more efficient system/design, but that's not that important)!</p>\n<p>I'll use 'ScopeReachable()' as it returns an Object List of all Objects you can directly/immediately (it's not within some other Object for example, which you would have to open up, and/or unlock and then open up, first) interact with: objects within the room you can directly interact with and/or Objects within your inventory (contained within/on you, usually the default 'player' Player Object) that you can directly/immediately interact with:</p>\n<p>http://docs.textadventures.co.uk/quest/functions/corelibrary/scopereachable.html</p>\n<p>also, I show a few methods/designs/concepts/ideas for you to know about and use if you want to for this or for later other stuff you want/need to do within your game, so you don't need all of them, as they do the same thing, or they're ideas for other uses within your game</p>\n<p>Also, the above makes it a bit messy, and not the most efficient, and confusing too, so...</p>\n<p>if you need help understanding any of it, let me know</p>\n<pre><code>&lt;object name=\"room\"&gt;\n\n  &lt;inherit name=\"editor_room\" /&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"limbo\"&gt;\n\n  &lt;inherit name=\"editor_room\" /&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"lighter\"&gt;\n\n  &lt;inherit name=\"lightable_type\" /&gt;\n\n  &lt;inherit name=\"source_of_fire\" /&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;player&lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"pack_of_cigarettes\"&gt;\n\n  &lt;inherit name=\"editor_object\" /&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;player&lt;/attr&gt;\n\n  &lt;attr name=\"quantity\" type=\"int\"&gt;10&lt;/attr&gt;\n\n  &lt;attr name=\"take\" type=\"script\"&gt;\n\n    if (this.quantity = 0) {\n      msg (\"You're out of cigarettes\")\n    } else {\n      this.quantity = this.quantity - 1\n      object_variable = CloneObject (this)\n      object_variable.prototype = this // http://docs.textadventures.co.uk/quest/functions/corelibrary/cloneobject.html\n      object_variable.parent = player\n    }\n\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"cigarette\"&gt;\n\n  &lt;inherit name=\"editor_object\" /&gt;\n\n  &lt;inherit name=\"flammable_type\" /&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;limbo&lt;/attr&gt;\n\n  &lt;attr name=\"alias\" type=\"string\"&gt;cigarette&lt;/attr&gt;\n\n  &lt;attr name=\"example_script_attribute\" type=\"script\"&gt;\n\n    msg (\"You light your cigarette, and start smoking it\")\n\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;type name=\"source_of_fire\"&gt;\n\n  &lt;attr name=\"light\" type=\"script\"&gt;\n\n    if (DoesInherit (this, \"lightable_type\") or GetString (this, \"type_string\") = \"lightable\") {\n      foreach (object_variable, ScopeReachable ()) {\n        if (DoesInherit (object_variable, \"flammable_type\") or GetString (object_variable, \"type_string\") = \"flammable\") {\n          do (object_variable, \"example_script_attribute\")\n        }\n      }\n    }\n\n  &lt;/attr&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"lightable_type\"&gt;\n\n  &lt;attr name=\"type_string\" type=\"string\"&gt;lightable&lt;/attr&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"flammable_type\"&gt;\n\n  &lt;attr name=\"type_string\" type=\"string\"&gt;flammable&lt;/attr&gt;\n\n&lt;/type&gt;\n</code></pre>\n\n",
      "PostDate": "2018-06-30T19:28:52.8628635Z",
      "LastEditDate": "2018-06-30T19:40:33.782143Z",
      "link": null
    },
    {
      "PostId": "a2c8a7ee-1df4-47b4-9e07-662d4d100c99",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Richard has the right answer :)\r\n\r\nIf you want, you could do the check on a single line (if you don't mind it being a little less intuitive)\r\n\r\n1.  `ScopeReachable()` is a list of everything the player can reach\r\n2. `FilterByAttribute (ScopeReachable(), \"sourceoffire\", true)` is a list of all reachable objects which have the \"sourceoffire\" attribute set to true\r\n3. `ListCount (FilterByAttribute (ScopeReachable(), \"sourceoffire\", true))` counts the objects in that list\r\n\r\nSo you can do:\r\n```\r\nif (ListCount (FilterByAttribute (ScopeReachable(), \"sourceoffire\", true)) > 0) {\r\n  msg (\"You light it.\")\r\n}\r\nelse {\r\n  msg (\"You have no fire source.\")\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Richard has the right answer :)</p>\n<p>If you want, you could do the check on a single line (if you don't mind it being a little less intuitive)</p>\n<ol>\n<li><code>ScopeReachable()</code> is a list of everything the player can reach</li>\n<li><code>FilterByAttribute (ScopeReachable(), \"sourceoffire\", true)</code> is a list of all reachable objects which have the \"sourceoffire\" attribute set to true</li>\n<li><code>ListCount (FilterByAttribute (ScopeReachable(), \"sourceoffire\", true))</code> counts the objects in that list</li>\n</ol>\n<p>So you can do:</p>\n<pre><code>if (ListCount (FilterByAttribute (ScopeReachable(), \"sourceoffire\", true)) &gt; 0) {\n  msg (\"You light it.\")\n}\nelse {\n  msg (\"You have no fire source.\")\n}\n</code></pre>\n\n",
      "PostDate": "2018-06-30T19:31:16.5425219Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "20e8d142-58a1-4ecf-ae25-a4c0444f3c06",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Have you seen Pixies guide to handling water\r\n\r\nhttp://docs.textadventures.co.uk/quest/handling_water.html\r\n\r\nThe same structure of coding used to handle water, could be used to handle fire. \r\nEqually, a similar 'look at' code, could be used to 'look at pack of cigarettes' or 'look at matchbox'.\r\n```\r\nVerb: Light (match)\r\n\r\nif (matchbox.matchlit = 0) {\r\n  msg (\"the matchbox is empty.\")\r\n}\r\nelse {\r\n  msg (\"You light a match.\")\r\n  matchbox.matchlit = matchbox.matchlit - 1\r\n}\r\n```\r\n```\r\nLook at Description:\r\n\r\nif (this.matchlit = 0) {\r\n  msg (\"It's an empty matchbox.\")\r\n}\r\nelse if (this.matchlit = 1) {\r\n  msg (\"It is a matchbox containing 1 match.\")\r\n}\r\nelse {\r\n  msg (\"It is a matchbox containing \" + matchbox.matchlit + \" matches.\")\r\n}\r\n```\r\n```\r\nThis is what I've used in my text adventure to enable a turnscript as well.\r\n\r\nVerbs - Light Candle\r\n\r\nif (Got(matchbox)) {\r\n  if (matchbox.matchlit = 0) {\r\n    msg (\"There are no matches left to light the candle.\")\r\n  }\r\n  else {\r\n    msg (\"You light the candle.\")\r\n    matchbox.matchlit = matchbox.matchlit - 1\r\n    candle.moves = 3\r\n    this.lightsource = true\r\n    SetObjectFlagOn (candle, \"lit\")\r\n    EnableTurnScript (candlelight)\r\n  }\r\n}\r\nelse {\r\n  msg (\"You have nothing to light the candle with.\")\r\n}\r\n```\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Have you seen Pixies guide to handling water</p>\n<p>http://docs.textadventures.co.uk/quest/handling_water.html</p>\n<p>The same structure of coding used to handle water, could be used to handle fire.<br>\nEqually, a similar 'look at' code, could be used to 'look at pack of cigarettes' or 'look at matchbox'.</p>\n<pre><code>Verb: Light (match)\n\nif (matchbox.matchlit = 0) {\n&nbsp;&nbsp;msg (\"the matchbox is empty.\")\n}\nelse {\n&nbsp;&nbsp;msg (\"You light a match.\")\n&nbsp;&nbsp;matchbox.matchlit = matchbox.matchlit - 1\n}\n</code></pre>\n<pre><code>Look at Description:\n\nif (this.matchlit = 0) {\n&nbsp;&nbsp;msg (\"It's an empty matchbox.\")\n}\nelse if (this.matchlit = 1) {\n&nbsp;&nbsp;msg (\"It is a matchbox containing 1 match.\")\n}\nelse {\n&nbsp;&nbsp;msg (\"It is a matchbox containing \" + matchbox.matchlit + \" matches.\")\n}\n</code></pre>\n<pre><code>This is what I've used in my text adventure to enable a turnscript as well.\n\nVerbs - Light Candle\n\nif (Got(matchbox)) {\n&nbsp;&nbsp;if (matchbox.matchlit = 0) {\n&nbsp;&nbsp;&nbsp;&nbsp;msg (\"There are no matches left to light the candle.\")\n&nbsp;&nbsp;}\n&nbsp;&nbsp;else {\n&nbsp;&nbsp;&nbsp;&nbsp;msg (\"You light the candle.\")\n&nbsp;&nbsp;&nbsp;&nbsp;matchbox.matchlit = matchbox.matchlit - 1\n&nbsp;&nbsp;&nbsp;&nbsp;candle.moves = 3\n&nbsp;&nbsp;&nbsp;&nbsp;this.lightsource = true\n&nbsp;&nbsp;&nbsp;&nbsp;SetObjectFlagOn (candle, \"lit\")\n&nbsp;&nbsp;&nbsp;&nbsp;EnableTurnScript (candlelight)\n&nbsp;&nbsp;}\n}\nelse {\n&nbsp;&nbsp;msg (\"You have nothing to light the candle with.\")\n}\n</code></pre>\n\n",
      "PostDate": "2018-07-01T07:03:49.2188718Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fd106414-9da3-4138-bdac-e098c4b0d7a7",
      "UserId": 366405,
      "Username": "Tibor",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6f863dce8acb8ab86b1040531fac5a8c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank You for all the answers, it was actually very simple to do what I wanted, and now I have some new ideas to work with too... and sorry Richard I mistyped lol, there's only 20 cigarretes in a pack here in Brazil too :) Thx guys",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank You for all the answers, it was actually very simple to do what I wanted, and now I have some new ideas to work with too... and sorry Richard I mistyped lol, there's only 20 cigarretes in a pack here in Brazil too :) Thx guys</p>\n\n",
      "PostDate": "2018-07-02T19:03:22.7808174Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
