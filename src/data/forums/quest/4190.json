{
  "Topic": {
    "TopicId": "4190",
    "ForumId": "10",
    "Title": "Checking \"light\" status moving between rooms",
    "LastUpdated": "2014-02-25T20:14:39+00:00",
    "ReplyCount": 9
  },
  "Posts": [
    {
      "PostId": "27845",
      "UserId": 0,
      "Username": "ken412",
      "UserAvatar": "7120_1392594844.gif",
      "UserGravatar": "4eeeba0f354c25f259da0d132166dc60",
      "EditableText": "Hello all,\n\nYears ago I wrote an IF game on an IBM mainframe in REXX to run in a TSO/ISPF environment.  I've recently been asked if I can recreate the game for a web environment for a wider audiance.  I have just found [b:2wag6p5t]QUEST [/b:2wag6p5t] which looks like it could be the tool I need to prepare the game.  I have not started the game yet, but think I might have come across a show-stopping problem whilst reading the documentation and looking through this forum.  A very key feature to the game is [b:2wag6p5t]&quot;light&quot;.[/b:2wag6p5t]  At the start it is [i:2wag6p5t]daylight[/i:2wag6p5t] and all rooms will be [i:2wag6p5t]lit[/i:2wag6p5t] by default.  But after a fixed number of turns I want it to become [i:2wag6p5t]night,[/i:2wag6p5t] where many (not all) rooms will become [i:2wag6p5t]dark.[/i:2wag6p5t]  The player must have found a light-source by then.  If the player moves from one room to another room and [b:2wag6p5t]BOTH[/b:2wag6p5t] rooms are &quot;dark&quot; then the player dies.  So I need the &quot;move&quot; routine to be able to tell if:\n1) the room the player is in is a light source itself\n2) an object in the room is a light source\n3) an object the player is carrying is a light source\n4) the room the player is moving to is a light source\n5) the room the player is moving to contains a light source.\nIf any condition is true the move is allowed, but if ALL are false the player will be killed off.\nI have read that the &quot;current room&quot; can be tested for a light source, and I think it is possible to check if it contains a light source.  But I'm not sure if it is possible to tell if an object the player is carrying (i.e. in the inventory) is a light source.  More importantly  have not read anything that looks like a way that will tell me if the &quot;next room&quot; is; or contains; a light source.\nBefore I start on the writing the game, can someone tell me if all this is possible or not?  &quot;Light&quot; is very key to several puzzles in the game plan.\n\nSorry if this happens to be a very basic question, but I have only discovered QUEST yesterday and haven't even started a game yet.\nThanks in anticipation of your support <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->\nKen",
      "EditableFormat": "bbcode",
      "HTML": "Hello all,<br/><br/>Years ago I wrote an IF game on an IBM mainframe in REXX to run in a TSO/ISPF environment.  I've recently been asked if I can recreate the game for a web environment for a wider audiance.  I have just found <span style=\"font-weight:bold;\">QUEST </span> which looks like it could be the tool I need to prepare the game.  I have not started the game yet, but think I might have come across a show-stopping problem whilst reading the documentation and looking through this forum.  A very key feature to the game is <span style=\"font-weight:bold;\">&quot;light&quot;.</span>  At the start it is <span style=\"font-style:italic;\">daylight</span> and all rooms will be <span style=\"font-style:italic;\">lit</span> by default.  But after a fixed number of turns I want it to become <span style=\"font-style:italic;\">night,</span> where many (not all) rooms will become <span style=\"font-style:italic;\">dark.</span>  The player must have found a light-source by then.  If the player moves from one room to another room and <span style=\"font-weight:bold;\">BOTH</span> rooms are &quot;dark&quot; then the player dies.  So I need the &quot;move&quot; routine to be able to tell if:<br/>1) the room the player is in is a light source itself<br/>2) an object in the room is a light source<br/>3) an object the player is carrying is a light source<br/>4) the room the player is moving to is a light source<br/>5) the room the player is moving to contains a light source.<br/>If any condition is true the move is allowed, but if ALL are false the player will be killed off.<br/>I have read that the &quot;current room&quot; can be tested for a light source, and I think it is possible to check if it contains a light source.  But I'm not sure if it is possible to tell if an object the player is carrying (i.e. in the inventory) is a light source.  More importantly  have not read anything that looks like a way that will tell me if the &quot;next room&quot; is; or contains; a light source.<br/>Before I start on the writing the game, can someone tell me if all this is possible or not?  &quot;Light&quot; is very key to several puzzles in the game plan.<br/><br/>Sorry if this happens to be a very basic question, but I have only discovered QUEST yesterday and haven't even started a game yet.<br/>Thanks in anticipation of your support <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --><br/>Ken",
      "PostDate": "2014-02-14T11:12:36+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27846",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "yes, this can be done with quest.\n\nAre you familiar with coding in general? (if not, let me know, and I'll help you through the GUI~Editor or through the Coding)\n\n1. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)\n2. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=SetExitLightstrength#mw-pages\">http://quest5.net/w/index.php?title=Cat ... h#mw-pages</a><!-- m --> (page 2, range: S-Z)\n\n---------\n\nthis allows us to set the scripts that happen, for when the player changes rooms:\n\n&lt;attr name=&quot;changedparent&quot; type=&quot;script&quot;&gt;your_various_scripts&lt;/attr&gt;\n\n[code:12t0wwzd]&lt;object name=&quot;player&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;inherit name=&quot;editor_player&quot; /&gt;\n  &lt;attr name=&quot;changedparent&quot; type=&quot;script&quot;&gt;\n    // your various scripts here\n  &lt;/attr&gt;\n&lt;/object&gt;[/code:12t0wwzd]\n\nhere's our game turns:\n\n[code:12t0wwzd]&lt;game name=&quot;whatever&quot;&gt;\n  // blah code lines\n  &lt;attr name=&quot;turns&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt; attr name=&quot;changedturns&quot; type=&quot;Script&quot;&gt;\n    // scripting for changing day~night attributes\n  &lt;/attr&gt;\n  &lt;attr name=&quot;statusattributes&quot; type=&quot;simplestringdictionary&quot;&gt;turns = Turns&#58; !&lt;/attr&gt;\n  // blah code lines\n&lt;/game&gt;\n\n&lt;turnscript name=&quot;global_turn_script&quot;&gt;\n  &lt;attr name=&quot;enabled&quot; type=&quot;boolean&quot;&gt;true&lt;/attr&gt;\n  &lt;script&gt;\n    game&#46;turns = game&#46;turns + 1\n  &lt;/script&gt;\n&lt;/turnscript&gt;[/code:12t0wwzd]\n\nthe darkness~light scripts~functions~attributes:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/SetDark\">http://quest5.net/wiki/SetDark</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/SetLight\">http://quest5.net/wiki/SetLight</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/SetObjectLightstrength\">http://quest5.net/wiki/SetObjectLightstrength</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/SetExitLightstrength\">http://quest5.net/wiki/SetExitLightstrength</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Dark\">http://quest5.net/wiki/Dark</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Darklevel\">http://quest5.net/wiki/Darklevel</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Lightstrength\">http://quest5.net/wiki/Lightstrength</a><!-- m -->\n\nthis allows you to get all the child (sub) objects within their parent objects:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeInventory\">http://quest5.net/wiki/ScopeInventory</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeExitsForRoom\">http://quest5.net/wiki/ScopeExitsForRoom</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Foreach\">http://quest5.net/wiki/Foreach</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/AllObjects\">http://quest5.net/wiki/AllObjects</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/AllExits\">http://quest5.net/wiki/AllExits</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeExits\">http://quest5.net/wiki/ScopeExits</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeReachableForRoom\">http://quest5.net/wiki/ScopeReachableForRoom</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeReachable\">http://quest5.net/wiki/ScopeReachable</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeReachableNotHeld\">http://quest5.net/wiki/ScopeReachableNotHeld</a><!-- m -->\n(etc scopes...)\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetAllChildObjects\">http://quest5.net/wiki/GetAllChildObjects</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetDirectChildren\">http://quest5.net/wiki/GetDirectChildren</a><!-- m -->\n\netc stuff (checking for darkness~light manually):\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/HasBoolean\">http://quest5.net/wiki/HasBoolean</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/HasAttribute\">http://quest5.net/wiki/HasAttribute</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/HasString\">http://quest5.net/wiki/HasString</a><!-- m -->\n\n-------------\n\nchecking a room that you're not in, which you plan to move to, is a bit more complex... you could do it with commands, if you don't mind typing in where you want to go in your game design, otherwise, it's a bit beyond my ability, you'll need to get some one else's help, to work with the default exiting moving aspect...\n\n---------\n\nbasically briefly, one way to do it, is like this (conceptual only and quasi code):\n\n[code:12t0wwzd]&lt;object name=&quot;player&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;inherit name=&quot;editor_player&quot; /&gt;\n  &lt;attr name=&quot;changedparent&quot; type=&quot;script&quot; parameters=&quot;current_location,desired_destination&quot;&gt;\n    if (HasBoolean (current_location, &quot;light&quot;) or HasBoolean (desired_destination, &quot;light&quot;) or HasBoolean (player, &quot;light&quot;)) {\n      // you don't die\n    } else {\n      foreach (player_object_x, ScopeInventory) {\n        if (HasBoolean (player_object_x, &quot;light&quot;)) {\n          // you don't die\n        } else {\n          room_objects_list = GetAllChildObjects (desired_destination)\n          foreach (room_object_x, room_objects_list) {\n            if (HasBoolean (room_object_x, &quot;light&quot;) {\n              // you don't die\n            }\n          }\n        }\n      }\n    }\n  &lt;/attr&gt;\n&lt;/object&gt;[/code:12t0wwzd]\n\nthe scripting for the &quot;changedparent&quot;, can be used elsewhere (in other scripting), as it (the &quot;changedparent&quot; script) requires for the player to have moved rooms, which conflicts with the scripting, as it uses &quot;desired_destination&quot;.",
      "EditableFormat": "bbcode",
      "HTML": "yes, this can be done with quest.<br/><br/>Are you familiar with coding in general? (if not, let me know, and I'll help you through the GUI~Editor or through the Coding)<br/><br/>1. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)<br/>2. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=SetExitLightstrength#mw-pages\">http://quest5.net/w/index.php?title=Cat ... h#mw-pages</a><!-- m --> (page 2, range: S-Z)<br/><br/>---------<br/><br/>this allows us to set the scripts that happen, for when the player changes rooms:<br/><br/>&lt;attr name=&quot;changedparent&quot; type=&quot;script&quot;&gt;your_various_scripts&lt;/attr&gt;<br/><br/><pre><code>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>  &lt;attr name=&quot;changedparent&quot; type=&quot;script&quot;&gt;<br/>    // your various scripts here<br/>  &lt;/attr&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>here's our game turns:<br/><br/><pre><code>&lt;game name=&quot;whatever&quot;&gt;<br/>  // blah code lines<br/>  &lt;attr name=&quot;turns&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt; attr name=&quot;changedturns&quot; type=&quot;Script&quot;&gt;<br/>    // scripting for changing day~night attributes<br/>  &lt;/attr&gt;<br/>  &lt;attr name=&quot;statusattributes&quot; type=&quot;simplestringdictionary&quot;&gt;turns = Turns&#58; !&lt;/attr&gt;<br/>  // blah code lines<br/>&lt;/game&gt;<br/><br/>&lt;turnscript name=&quot;global_turn_script&quot;&gt;<br/>  &lt;attr name=&quot;enabled&quot; type=&quot;boolean&quot;&gt;true&lt;/attr&gt;<br/>  &lt;script&gt;<br/>    game&#46;turns = game&#46;turns + 1<br/>  &lt;/script&gt;<br/>&lt;/turnscript&gt;</code></pre><br/><br/>the darkness~light scripts~functions~attributes:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/SetDark\">http://quest5.net/wiki/SetDark</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/SetLight\">http://quest5.net/wiki/SetLight</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/SetObjectLightstrength\">http://quest5.net/wiki/SetObjectLightstrength</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/SetExitLightstrength\">http://quest5.net/wiki/SetExitLightstrength</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Dark\">http://quest5.net/wiki/Dark</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Darklevel\">http://quest5.net/wiki/Darklevel</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Lightstrength\">http://quest5.net/wiki/Lightstrength</a><!-- m --><br/><br/>this allows you to get all the child (sub) objects within their parent objects:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeInventory\">http://quest5.net/wiki/ScopeInventory</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeExitsForRoom\">http://quest5.net/wiki/ScopeExitsForRoom</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Foreach\">http://quest5.net/wiki/Foreach</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/AllObjects\">http://quest5.net/wiki/AllObjects</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/AllExits\">http://quest5.net/wiki/AllExits</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeExits\">http://quest5.net/wiki/ScopeExits</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeReachableForRoom\">http://quest5.net/wiki/ScopeReachableForRoom</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeReachable\">http://quest5.net/wiki/ScopeReachable</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeReachableNotHeld\">http://quest5.net/wiki/ScopeReachableNotHeld</a><!-- m --><br/>(etc scopes...)<br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetAllChildObjects\">http://quest5.net/wiki/GetAllChildObjects</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetDirectChildren\">http://quest5.net/wiki/GetDirectChildren</a><!-- m --><br/><br/>etc stuff (checking for darkness~light manually):<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/HasBoolean\">http://quest5.net/wiki/HasBoolean</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/HasAttribute\">http://quest5.net/wiki/HasAttribute</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/HasString\">http://quest5.net/wiki/HasString</a><!-- m --><br/><br/>-------------<br/><br/>checking a room that you're not in, which you plan to move to, is a bit more complex... you could do it with commands, if you don't mind typing in where you want to go in your game design, otherwise, it's a bit beyond my ability, you'll need to get some one else's help, to work with the default exiting moving aspect...<br/><br/>---------<br/><br/>basically briefly, one way to do it, is like this (conceptual only and quasi code):<br/><br/><pre><code>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>  &lt;attr name=&quot;changedparent&quot; type=&quot;script&quot; parameters=&quot;current_location,desired_destination&quot;&gt;<br/>    if (HasBoolean (current_location, &quot;light&quot;) or HasBoolean (desired_destination, &quot;light&quot;) or HasBoolean (player, &quot;light&quot;)) {<br/>      // you don't die<br/>    } else {<br/>      foreach (player_object_x, ScopeInventory) {<br/>        if (HasBoolean (player_object_x, &quot;light&quot;)) {<br/>          // you don't die<br/>        } else {<br/>          room_objects_list = GetAllChildObjects (desired_destination)<br/>          foreach (room_object_x, room_objects_list) {<br/>            if (HasBoolean (room_object_x, &quot;light&quot;) {<br/>              // you don't die<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  &lt;/attr&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>the scripting for the &quot;changedparent&quot;, can be used elsewhere (in other scripting), as it (the &quot;changedparent&quot; script) requires for the player to have moved rooms, which conflicts with the scripting, as it uses &quot;desired_destination&quot;.",
      "PostDate": "2014-02-14T12:26:47+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27847",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "Here is an example how to do it",
      "EditableFormat": "bbcode",
      "HTML": "Here is an example how to do it<div><a href=\"/forumattachments/852/light.aslx\">light.aslx</a></div>",
      "PostDate": "2014-02-14T14:23:09+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27848",
      "UserId": 0,
      "Username": "ken412",
      "UserAvatar": "7120_1392594844.gif",
      "UserGravatar": "4eeeba0f354c25f259da0d132166dc60",
      "EditableText": "@HegemonKhan and Pertex,\n\nWow, Thanks for the rapid reply chaps!  And such a detailed responses as well, thank you very much.\n\nMy profession for many years was a mainframe systems programmer, but I have done some &quot;real&quot; programming over the years.  I am proficient in REXX (looks a bit like BASIC), but only dabbled in C+ years ago.  I also hand-code HTML (since 1995) and have been teaching myself a little JavaScript and PHP in recent years, though only enough to do what I need, so I wouldn't consider myself anything like an expert in either.\n\nI was hoping to use the GUI functions of QUEST.  I've watched the video tutorial and understand the GUI (I think! <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->)  But I haven't got going yet, so don't yet know how to get into the native code to start with the coding solutions you have provided. It all looks rather like XML to me, which I haven't really used before, but I do understand the structure (not that far from HTML of course).\n\nSo you have both given me a lot to take in here, thank you, and I will see what I can do with all this information now.\n\nSo I guess that means I don't have an excuse to get started....! <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->\n\nThanks again,\nKen",
      "EditableFormat": "bbcode",
      "HTML": "@HegemonKhan and Pertex,<br/><br/>Wow, Thanks for the rapid reply chaps!  And such a detailed responses as well, thank you very much.<br/><br/>My profession for many years was a mainframe systems programmer, but I have done some &quot;real&quot; programming over the years.  I am proficient in REXX (looks a bit like BASIC), but only dabbled in C+ years ago.  I also hand-code HTML (since 1995) and have been teaching myself a little JavaScript and PHP in recent years, though only enough to do what I need, so I wouldn't consider myself anything like an expert in either.<br/><br/>I was hoping to use the GUI functions of QUEST.  I've watched the video tutorial and understand the GUI (I think! <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->)  But I haven't got going yet, so don't yet know how to get into the native code to start with the coding solutions you have provided. It all looks rather like XML to me, which I haven't really used before, but I do understand the structure (not that far from HTML of course).<br/><br/>So you have both given me a lot to take in here, thank you, and I will see what I can do with all this information now.<br/><br/>So I guess that means I don't have an excuse to get started....! <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --><br/><br/>Thanks again,<br/>Ken",
      "PostDate": "2014-02-14T14:38:39+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27853",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "let us know if you need help, you can download pertex' game file, and open it up into the GUI~Editor mode, to see how it looks (is done) in~via the GUI~Editor.\n\n------\n\nExplaining how to do things through~via the GUI~Editor is much more work, than simply writing, copying, and pasting it in code, laughs, so if you want it shown step by step through using the GUI~Editor, it'll take me a lot more time to do (as I'm also very new to coding myself, I actually started knowing ZERO about coding, but thanks to Alex' Quest program and his coding language, and all the excellent resources and help here, I've been able to slowly learn some basic &quot;coding&quot; for over a year now at this, trying to branch out a bit into the most basic programming that I knew of, a computer's command line prompt, lol, but it's slow. I hope to eventually expand out to the other and real programming languages eventually, though I'm still trying to learn how to code and understand the general coding logic and tactics, mainly in terms of doing so towards making an RPG, but it's slow as it is more limited and frustrating than quest's language, as I have a hard time grasping this totally new stuff and ways of thinking, but I'm making some progress! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> For example, I'm glad for quest's use of &quot;lists&quot; and &quot;dictionaries&quot;, as *I think* these do the same functionality as &quot;arrays&quot;, which totally confuse me, whereas I mostly understand fully with in using &quot;lists&quot; and &quot;dictionaries&quot; now, lol, heh <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> )\n\n-------\n\nwhat pertex is doing conceptually (if I understand it myself) is setting a current room and a previous room, checking if they're both dark (by matching texts, including the dark~light state of the room), and if they are, then you die. Though this requires you to move to the new room (not sure if this matters actually in terms of playing the game ~ game design, verses using more fancy coding to get the desired destination's room dark~light level~state before you move to it ~ ie: before you're now within that new room).\n\n-------\n\nif you want to work with the code, there's two ways to get at it:\n\n1. simply opening up the file with notepad, wordpad, notepad++ ( <!-- m --><a class=\"postlink\" href=\"http://notepad-plus-plus.org/\">http://notepad-plus-plus.org/</a><!-- m --> ), or whatever else there is (being a programmer, you may know of and~or have a more advanced program than notepad++, I use notepad++ as it's free and quite good enough for me for my level, if you use notepad++, select &quot;XML&quot; for it's code language to use)\n\ngame files' name+extension (replace the asterisks with what you want to name the file as):\n\n*.aslx\n\ngame files' code tags:\n\n[code:3iwad6wi]&lt;asl version=&quot;whatever quest version you're using, ie for me still&#58; 540&quot;&gt;\n  // your massive game coding, lol\n&lt;/asl&gt;[/code:3iwad6wi]\n\nlibrary files' name+extension:\n\n*.aslx\n\nlibrary files' code tags:\n\n[code:3iwad6wi]&lt;library&gt;\n  // your massive coding, lol\n&lt;/library&gt;[/code:3iwad6wi]\n\nwithin a game file (it remains only within scripting, scripts ~ functions ~ commands ~ etc, only) comment code:\n\n// your comments\n\nwithin a library file:\n\n// your comments\n\n~and~\n\n&lt;!-- label ~ comments --&gt;\n\n~or~\n\n&lt;!--\ncomments\n--&gt;\n\n2. within the GUI~Editor mode, at the top horizontal menu bar, there's a notepaper-like button, between the &quot;play&quot; and &quot;?~help&quot; buttons, this notepaper-like button is a toggle, to switch between the GUI~Editor mode and Code View (in-code) mode.\n\n---------\n\nI will try to help you, but I'm still not familiar with the coding for light~dark yet, nor am I that good at programming, so use Pertex' help, if he's willing, as he's a very good programmer, or the other mods (they too are all good programmers), or some of the members, who're good programmers. I can try to help myself, but I'll be fumbling along at it, doing it messily compared to one who knows programming well, if I can even do it myself, lol, and so it'll be harder for you to understand too if I were to help, because of that (me being still new to coding).\n\n----------\n\nResources:\n\n(if any links don't work, it's likely that the ending &quot;)&quot; got cut off when pasting this here ~ not sure why this happens, lol, so just add that back into the url to fix it)\n\n01. <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/index.php\">index.php</a><!-- l --> (this site's main page)\n02. <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewforum.php?f=10\">viewforum.php?f=10</a><!-- l --> (the site's forum, what we're on right now, lol)\n03. <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewforum.php?f=18\">viewforum.php?f=18</a><!-- l --> (the site's library board)\n04. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Main_Page\">http://quest5.net/wiki/Main_Page</a><!-- m -->\n05. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Tutorial\">http://quest5.net/wiki/Tutorial</a><!-- m -->\n06. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/How_to\">http://quest5.net/wiki/How_to</a><!-- m -->\n07. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Libraries\">http://quest5.net/wiki/Libraries</a><!-- m -->\n08. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)\n09. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=SetExitLightstrength#mw-pages\">http://quest5.net/w/index.php?title=Cat ... h#mw-pages</a><!-- m --> (page 2, range: S-Z)\n10. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Object_element\">http://quest5.net/wiki/Object_element</a><!-- m -->\n11. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Attribute_Types\">http://quest5.net/wiki/Attribute_Types</a><!-- m -->\n12. <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewforum.php?f=15\">viewforum.php?f=15</a><!-- l --> (the site's quest software developer board)\n13. <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewforum.php?f=20\">viewforum.php?f=20</a><!-- l --> (IF and Game Design board of this site)\n14. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Upgrade_Notes\">http://quest5.net/wiki/Upgrade_Notes</a><!-- m --> (very useful for converting older versions coding syntax~format to newer versions coding syntax~format)\n\nenjoy <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\n-----------------\n\nalso, I'd recommend that you actually go through the entire tutorial yourself (actually within your own game file using the GUI~Editor, trying to do the tutorial's contents), as I'm sure you know, reading~watching something doesn't translate into actually trying to do it yourself, practice at actually using the GUI~Editor.\n\n----------------\n\nI myself, moved off of using the GUI~Editor quickly, as I found that I was able to work with the code and understand it more quickly then I could figure out how to do more advanced stuff through the GUI~Editor (there's so many pull downs and options, that it was hard for me to find them and~or understood what they did, and~or how to use them together to get what I needed, compared to simply doing it on~in code), you can do I think mostly everything in the GUI~Editor that you can directly in code, but for me, I like (as I was better at) simply using the direct coding instead. Though, without the GUI~Editor and the tutorial, I've never have been able to grasp the coding, it allowed me to understand coding and to move into using the coding directly.\n\n~ I also WANTED to learn to code finally (I wish I had started when I was very young, sighs. I could've been Bill Gates or created google, ... RIGHT... I wish... heh), lol, so that's a huge part of why I moved off of using the GUI~Editor too... lol.\n\n(stupid U.S. school system... practically zero tech classes... liberal arts ~ huge waste of time ~ life ~ mostly not geared much towards getting jobs ~ making a living-salary, especially today, which has gone tech ~ our modern world. seriously, you need to know programming easily as much as even math and science, let alone all the other useless other liberal arts classes we had to take... knowledge is nice, but we need to live ~ survival ~ make money, as few of us have rich parents or are born into rich carreers: movie stars or other professional entertainers - athletes - musicians - etc, the actual real world outside of the elitist education~university~professors~government~school utopia bubbles... sighs. Behind everything we love or have, is tech, IT, programming, our modern world is only possible through programming, as our just robots that build cars, requires programming, for just a single example of just of Automation alone, nothing could exist in the modern world that we have and enjoy, without programmers! All engineering, requires computer modeling programs, which requires programming and programers!)\n\nThe GUI~Editor is very good, I just personally found it &quot;easier&quot; (I got A LOT to learn) for myself to directly code in the stuff.",
      "EditableFormat": "bbcode",
      "HTML": "let us know if you need help, you can download pertex' game file, and open it up into the GUI~Editor mode, to see how it looks (is done) in~via the GUI~Editor.<br/><br/>------<br/><br/>Explaining how to do things through~via the GUI~Editor is much more work, than simply writing, copying, and pasting it in code, laughs, so if you want it shown step by step through using the GUI~Editor, it'll take me a lot more time to do (as I'm also very new to coding myself, I actually started knowing ZERO about coding, but thanks to Alex' Quest program and his coding language, and all the excellent resources and help here, I've been able to slowly learn some basic &quot;coding&quot; for over a year now at this, trying to branch out a bit into the most basic programming that I knew of, a computer's command line prompt, lol, but it's slow. I hope to eventually expand out to the other and real programming languages eventually, though I'm still trying to learn how to code and understand the general coding logic and tactics, mainly in terms of doing so towards making an RPG, but it's slow as it is more limited and frustrating than quest's language, as I have a hard time grasping this totally new stuff and ways of thinking, but I'm making some progress! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> For example, I'm glad for quest's use of &quot;lists&quot; and &quot;dictionaries&quot;, as *I think* these do the same functionality as &quot;arrays&quot;, which totally confuse me, whereas I mostly understand fully with in using &quot;lists&quot; and &quot;dictionaries&quot; now, lol, heh <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> )<br/><br/>-------<br/><br/>what pertex is doing conceptually (if I understand it myself) is setting a current room and a previous room, checking if they're both dark (by matching texts, including the dark~light state of the room), and if they are, then you die. Though this requires you to move to the new room (not sure if this matters actually in terms of playing the game ~ game design, verses using more fancy coding to get the desired destination's room dark~light level~state before you move to it ~ ie: before you're now within that new room).<br/><br/>-------<br/><br/>if you want to work with the code, there's two ways to get at it:<br/><br/>1. simply opening up the file with notepad, wordpad, notepad++ ( <!-- m --><a class=\"postlink\" href=\"http://notepad-plus-plus.org/\">http://notepad-plus-plus.org/</a><!-- m --> ), or whatever else there is (being a programmer, you may know of and~or have a more advanced program than notepad++, I use notepad++ as it's free and quite good enough for me for my level, if you use notepad++, select &quot;XML&quot; for it's code language to use)<br/><br/>game files' name+extension (replace the asterisks with what you want to name the file as):<br/><br/>*.aslx<br/><br/>game files' code tags:<br/><br/><pre><code>&lt;asl version=&quot;whatever quest version you're using, ie for me still&#58; 540&quot;&gt;<br/>  // your massive game coding, lol<br/>&lt;/asl&gt;</code></pre><br/><br/>library files' name+extension:<br/><br/>*.aslx<br/><br/>library files' code tags:<br/><br/><pre><code>&lt;library&gt;<br/>  // your massive coding, lol<br/>&lt;/library&gt;</code></pre><br/><br/>within a game file (it remains only within scripting, scripts ~ functions ~ commands ~ etc, only) comment code:<br/><br/>// your comments<br/><br/>within a library file:<br/><br/>// your comments<br/><br/>~and~<br/><br/>&lt;!-- label ~ comments --&gt;<br/><br/>~or~<br/><br/>&lt;!--<br/>comments<br/>--&gt;<br/><br/>2. within the GUI~Editor mode, at the top horizontal menu bar, there's a notepaper-like button, between the &quot;play&quot; and &quot;?~help&quot; buttons, this notepaper-like button is a toggle, to switch between the GUI~Editor mode and Code View (in-code) mode.<br/><br/>---------<br/><br/>I will try to help you, but I'm still not familiar with the coding for light~dark yet, nor am I that good at programming, so use Pertex' help, if he's willing, as he's a very good programmer, or the other mods (they too are all good programmers), or some of the members, who're good programmers. I can try to help myself, but I'll be fumbling along at it, doing it messily compared to one who knows programming well, if I can even do it myself, lol, and so it'll be harder for you to understand too if I were to help, because of that (me being still new to coding).<br/><br/>----------<br/><br/>Resources:<br/><br/>(if any links don't work, it's likely that the ending &quot;)&quot; got cut off when pasting this here ~ not sure why this happens, lol, so just add that back into the url to fix it)<br/><br/>01. <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/index.php\">index.php</a><!-- l --> (this site's main page)<br/>02. <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewforum.php?f=10\">viewforum.php?f=10</a><!-- l --> (the site's forum, what we're on right now, lol)<br/>03. <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewforum.php?f=18\">viewforum.php?f=18</a><!-- l --> (the site's library board)<br/>04. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Main_Page\">http://quest5.net/wiki/Main_Page</a><!-- m --><br/>05. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Tutorial\">http://quest5.net/wiki/Tutorial</a><!-- m --><br/>06. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/How_to\">http://quest5.net/wiki/How_to</a><!-- m --><br/>07. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Libraries\">http://quest5.net/wiki/Libraries</a><!-- m --><br/>08. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)<br/>09. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=SetExitLightstrength#mw-pages\">http://quest5.net/w/index.php?title=Cat ... h#mw-pages</a><!-- m --> (page 2, range: S-Z)<br/>10. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Object_element\">http://quest5.net/wiki/Object_element</a><!-- m --><br/>11. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Attribute_Types\">http://quest5.net/wiki/Attribute_Types</a><!-- m --><br/>12. <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewforum.php?f=15\">viewforum.php?f=15</a><!-- l --> (the site's quest software developer board)<br/>13. <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewforum.php?f=20\">viewforum.php?f=20</a><!-- l --> (IF and Game Design board of this site)<br/>14. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Upgrade_Notes\">http://quest5.net/wiki/Upgrade_Notes</a><!-- m --> (very useful for converting older versions coding syntax~format to newer versions coding syntax~format)<br/><br/>enjoy <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>-----------------<br/><br/>also, I'd recommend that you actually go through the entire tutorial yourself (actually within your own game file using the GUI~Editor, trying to do the tutorial's contents), as I'm sure you know, reading~watching something doesn't translate into actually trying to do it yourself, practice at actually using the GUI~Editor.<br/><br/>----------------<br/><br/>I myself, moved off of using the GUI~Editor quickly, as I found that I was able to work with the code and understand it more quickly then I could figure out how to do more advanced stuff through the GUI~Editor (there's so many pull downs and options, that it was hard for me to find them and~or understood what they did, and~or how to use them together to get what I needed, compared to simply doing it on~in code), you can do I think mostly everything in the GUI~Editor that you can directly in code, but for me, I like (as I was better at) simply using the direct coding instead. Though, without the GUI~Editor and the tutorial, I've never have been able to grasp the coding, it allowed me to understand coding and to move into using the coding directly.<br/><br/>~ I also WANTED to learn to code finally (I wish I had started when I was very young, sighs. I could've been Bill Gates or created google, ... RIGHT... I wish... heh), lol, so that's a huge part of why I moved off of using the GUI~Editor too... lol.<br/><br/>(stupid U.S. school system... practically zero tech classes... liberal arts ~ huge waste of time ~ life ~ mostly not geared much towards getting jobs ~ making a living-salary, especially today, which has gone tech ~ our modern world. seriously, you need to know programming easily as much as even math and science, let alone all the other useless other liberal arts classes we had to take... knowledge is nice, but we need to live ~ survival ~ make money, as few of us have rich parents or are born into rich carreers: movie stars or other professional entertainers - athletes - musicians - etc, the actual real world outside of the elitist education~university~professors~government~school utopia bubbles... sighs. Behind everything we love or have, is tech, IT, programming, our modern world is only possible through programming, as our just robots that build cars, requires programming, for just a single example of just of Automation alone, nothing could exist in the modern world that we have and enjoy, without programmers! All engineering, requires computer modeling programs, which requires programming and programers!)<br/><br/>The GUI~Editor is very good, I just personally found it &quot;easier&quot; (I got A LOT to learn) for myself to directly code in the stuff.",
      "PostDate": "2014-02-14T19:54:03+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27859",
      "UserId": 0,
      "Username": "ken412",
      "UserAvatar": "7120_1392594844.gif",
      "UserGravatar": "4eeeba0f354c25f259da0d132166dc60",
      "EditableText": "Hi HegemonKhan\n\nI have downloaded the (Windows) version, and am working through the tutorials (just as you also suggested).  These are very useful.  Having downloaded the application has allowed me to find the &quot;notepad&quot; icon to take me directly to the code.  I've also downloaded Pertex's example file and used that.  It does indeed show the workings of moving between light and dark rooms.  I'm sure given time I will be able to expand that to include light sources in the rooms and being carried.  But now I have an excellent start (many thanks Pertex <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --> )   FYI: The suggestion of &quot;moving&quot; to the net room will actually work for me, because if the two rooms are dark, then the player is killed off anyway, so it doesn't matter whether the move actually took place or not, and if there is any light, then the player will be allowed to move.  So win-win here for me.  I can see other people may want a different solution if they want to force the player to stay in the same room.\n\nI also use Notepadd++ and it is fine for my needs, so I'm comfortable working with that and I'm sure I will become comfortable working within QUEST.\n\nThank you for the basics in structuring a game.  I'm sure I will pick things up as I continue.  I don't mind working in code.  I just don't know the code structure yet, so going by all the QUEST &quot;advertising&quot; of how the GUI makes things easy, I thought I would start there.  But having a bit of a programming background I'm also happy to work in code format.  This XML programming format is new to me though, but like yourself, I'm sure I will pick it up as I go along.  And if that also makes it easier to help others, I'm more than happy to use this method.\n\nOnce I've finished the tutorials and sample game I will make a start.  I already have other coding problems I will need to solve within QUEST, like I want to give a &quot;long&quot; room listing the first time a room is visited, but only a &quot;short&quot; description if the player returns, but having a verb of &quot;LOOK&quot; to display the long description again, and in other rooms (effectively a &quot;maze&quot;) where a room exit may return to the same room , but I still want the engine to give the description (so it is not obvious the player is still in the same room).  But I will have a go at solving these coding problems myself once I understand the code format and engine a bit better.  If I get stuck, I will return to the forum, where I now know there is an active community and people like yourself and Pertex willing to pass on their experience.  One day I hope to have gained enough knowledge and skill within QUEST to pass on some of my own!  But a long way to go yet! <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->\n\nThe concept of libraries is interesting.  I will have to understand these better.  I see there is a section on these in the tutorials.\n\nThanks again.",
      "EditableFormat": "bbcode",
      "HTML": "Hi HegemonKhan<br/><br/>I have downloaded the (Windows) version, and am working through the tutorials (just as you also suggested).  These are very useful.  Having downloaded the application has allowed me to find the &quot;notepad&quot; icon to take me directly to the code.  I've also downloaded Pertex's example file and used that.  It does indeed show the workings of moving between light and dark rooms.  I'm sure given time I will be able to expand that to include light sources in the rooms and being carried.  But now I have an excellent start (many thanks Pertex <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --> )   FYI: The suggestion of &quot;moving&quot; to the net room will actually work for me, because if the two rooms are dark, then the player is killed off anyway, so it doesn't matter whether the move actually took place or not, and if there is any light, then the player will be allowed to move.  So win-win here for me.  I can see other people may want a different solution if they want to force the player to stay in the same room.<br/><br/>I also use Notepadd++ and it is fine for my needs, so I'm comfortable working with that and I'm sure I will become comfortable working within QUEST.<br/><br/>Thank you for the basics in structuring a game.  I'm sure I will pick things up as I continue.  I don't mind working in code.  I just don't know the code structure yet, so going by all the QUEST &quot;advertising&quot; of how the GUI makes things easy, I thought I would start there.  But having a bit of a programming background I'm also happy to work in code format.  This XML programming format is new to me though, but like yourself, I'm sure I will pick it up as I go along.  And if that also makes it easier to help others, I'm more than happy to use this method.<br/><br/>Once I've finished the tutorials and sample game I will make a start.  I already have other coding problems I will need to solve within QUEST, like I want to give a &quot;long&quot; room listing the first time a room is visited, but only a &quot;short&quot; description if the player returns, but having a verb of &quot;LOOK&quot; to display the long description again, and in other rooms (effectively a &quot;maze&quot;) where a room exit may return to the same room , but I still want the engine to give the description (so it is not obvious the player is still in the same room).  But I will have a go at solving these coding problems myself once I understand the code format and engine a bit better.  If I get stuck, I will return to the forum, where I now know there is an active community and people like yourself and Pertex willing to pass on their experience.  One day I hope to have gained enough knowledge and skill within QUEST to pass on some of my own!  But a long way to go yet! <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --><br/><br/>The concept of libraries is interesting.  I will have to understand these better.  I see there is a section on these in the tutorials.<br/><br/>Thanks again.",
      "PostDate": "2014-02-16T15:27:13+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27860",
      "UserId": 0,
      "Username": "ken412",
      "UserAvatar": "7120_1392594844.gif",
      "UserGravatar": "4eeeba0f354c25f259da0d132166dc60",
      "EditableText": "Actually I have just found that jaynabonne and yourself have already answered a question from [url=http&#58;//forum&#46;textadventures&#46;co&#46;uk/viewtopic&#46;php?f=10&amp;t=4178:32mpqo0d]cybernetsurfer7[/url:32mpqo0d] about different descriptions for first time or revisiting a room.  That was useful, thanks.  I just need to alter the &quot;LOOK&quot; script to force the room to be &quot;Not visited&quot; so the long description is used with look.  But it is becoming obvious I can override many default actions, if I know how.\n\nA thought strikes me.  If I want all rooms to have both a long (first time) and short (re-visit) description, is it possible to alter the template for a room to have two boxes for descriptions, then alter the default room description script to display the appropriate one, so I don't have to add the code (as described in cybernetsurfer7's solution) to every room description?  I'm assuming this would be via a &quot;template&quot; or is that wrong?  I'd also need to alter the default action of the &quot;LOOK&quot; verb somehow?",
      "EditableFormat": "bbcode",
      "HTML": "Actually I have just found that jaynabonne and yourself have already answered a question from <a href=\"http&#58;//forum&#46;textadventures&#46;co&#46;uk/viewtopic&#46;php?f=10&amp;t=4178\" rel=\"nofollow\">cybernetsurfer7</a> about different descriptions for first time or revisiting a room.  That was useful, thanks.  I just need to alter the &quot;LOOK&quot; script to force the room to be &quot;Not visited&quot; so the long description is used with look.  But it is becoming obvious I can override many default actions, if I know how.<br/><br/>A thought strikes me.  If I want all rooms to have both a long (first time) and short (re-visit) description, is it possible to alter the template for a room to have two boxes for descriptions, then alter the default room description script to display the appropriate one, so I don't have to add the code (as described in cybernetsurfer7's solution) to every room description?  I'm assuming this would be via a &quot;template&quot; or is that wrong?  I'd also need to alter the default action of the &quot;LOOK&quot; verb somehow?",
      "PostDate": "2014-02-16T17:42:53+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27864",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "you can simply copy and paste any code posted into a game file (and save), then switch to the GUI~Editor mode, to see how it is done through the editor (GUI), though it is a bit time-consuming and the GUI~Editor doesn't intuitively match up well with how it is syntaxed~formated (done) in code, lol. It's a lot of work learning to match up coding with the editor's style... at least it was for me... (see example directly below)\n\nfor example:\n\n[b:22fuosej]in code:[/b:22fuosej]\n\nas tag creation:\n\n&lt;object name=&quot;orc&quot;&gt;\n-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;\n-&gt; &lt;attr name=&quot;dead&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;\n&lt;/object&gt;\n\nor in scripting creation:\n\norc.dead = false\n\nand then to change it (via scripting):\n\norc.dead = true\n\nto change it back (via scripting):\n\norc.dead = false\n\n[b:22fuosej]whereas, in GUI~Editor:[/b:22fuosej]\n\nto create it via an attribute of an object:\n\n&quot;orc&quot; (Object) -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;\n\nAttribute Name: dead\nAttribute Type: boolean\nAttribute Value: false\n\nto create it (via scripting):\n\nRun as script -&gt; Add a script -&gt; Variables -&gt; Set a variable or attribute -&gt; orc.dead=false\n\nto change it:\n\nRun as script -&gt; Add a script -&gt; ??? (whatever it's category, 'Objects', I think) -&gt; SetObjectFlagOn -&gt; (set it up)\n\nto change it back:\n\nRun as script -&gt; Add a script -&gt; ??? (whatever it's category, 'Objects', I think) -&gt; SetObjectFlagOff -&gt; (set it up)\n\n---------\n\nI'm more than willing to guide with with using the GUI~Editor, if you don't want to work with code, but the main problem is time, as it takes more work~time to write out explanations and step by step instructions in using the GUI~Editor, vs just pasting in code, lol, and unfortunately, I am busy with real life, so if you don't mind to wait for when I got the time, I'd gladly help you with doing things in the GUI~Editor, when I got the time for doing it.\n\nuntil then, (or until others are able to help you), the main sources of GUI~Editor help (with nice pictures of it too) are:\n\nthe tutorial ( <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Tutorial\">http://quest5.net/wiki/Tutorial</a><!-- m --> )\nthe wiki guides ( <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/How_to\">http://quest5.net/wiki/How_to</a><!-- m --> )\nand some of the libraries ( <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewforum.php?f=18\">viewforum.php?f=18</a><!-- l --> )\n\nthough, it is a bit more limited, compared to the amount of coding help that exists.\n\n----------\n\noh indeed, learning a new language is not easy, as you're used to the old format, and when you learn the new language, then you'll have a new problem of mxing up the two languages, not remembering what syntax~format goes with which language, lol.\n\nhowever, quest's language is really noobie-friendly, so you should be able to pick it up quickly in-of-itself, though it does take time to adjust to any new language.\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:ASLX_Elements\">http://quest5.net/wiki/Category:ASLX_Elements</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ASLX_Elements\">http://quest5.net/wiki/ASLX_Elements</a><!-- m -->\n\nthe various elements: \n\nObjects, Exits, Verbs, Commands, Timers, Turnscripts, Functions, Game, Object Type ( it's shortened in the tags to just: &lt;type name=&quot;blah&quot;&gt;attributes&lt;/type&gt; ) (grouping~inheritance), Templates, Libraries, Walkthroughs, etc\n\nbasically, you do this (ignoring the optional attributes):\n\n(can be written horizontally or vertically)\n\nThe Elements:\n\n&lt;object name=&quot;blah&quot;&gt;attributes&lt;/object&gt;\n&lt;verb name=&quot;blah&quot;&gt;scripting&lt;/verb&gt;\n&lt;command name=&quot;blah&quot;&gt;scripting&lt;/command&gt;\n&lt;type name=&quot;blah&quot;&gt;attributes&lt;/type&gt; // &lt;type&gt; is short for: Object Type\n&lt;turnscript name=&quot;blah&quot;&gt;scripting&lt;/turnscript&gt;\n&lt;timer name=&quot;blah&quot;&gt;scripting&lt;/timer&gt;\n&lt;function name=&quot;blah&quot;&gt;scripting&lt;/function&gt;\n&lt;exit name=&quot;blah&quot;&gt;attributes&lt;/exit&gt;\n&lt;attr name=&quot;blah&quot; type=&quot;blah&quot;&gt;values&lt;/attr&gt;\n\nattr = Attribute\n\nThe Attributes:\n\nint = integer\nboolean = specifically in terms of quest's coding usage, just &quot;true~false&quot; flags\n\ncoding conceptuality (no &quot;flag&quot; element~attribute actually exists, you create effect by~via scripting): 'flags' are binary: 0~1 and more expansively, dualism: 5~10, on~off, yes~no, in~out, up~down, hot~cold, red~blue, etc ~ aka: only two options~settings\n\n(these are just custom ones, using my own labeling system~structure, for examples)\n\n[code:22fuosej]&lt;object name=&quot;HK&quot;&gt;\n  &lt;attr name=&quot;parent&quot; type=&quot;object&quot;&gt;room&lt;/attr&gt;\n  &lt;attr name=&quot;gender_string&quot; type=&quot;string&quot;&gt;male&lt;/attr&gt;\n  &lt;attr name=&quot;strength_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;dead_boolean&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;\n  &lt;attr name=&quot;damage_double&quot; type=&quot;double&quot;&gt;156&#46;84&lt;/attr&gt;\n  &lt;attr name=&quot;favorite_colors_string_list&quot; type=&quot;simplestringlist&quot;&gt;black;red&lt;/attr&gt;\n  &lt;attr name=&quot;clothes_object_list&quot; type=&quot;objectlist&quot;&gt;shirt;socks;shoes;pants&lt;/attr&gt;\n  &lt;attr name=&quot;fight_script&quot; type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n    if (HK&#46;dead_boolean=true) {\n      msg (&quot;He's already dead, silly!&quot;)\n    } else if (HK&#46;dead_boolean=false) {\n      player&#46;hp = player&#46;hp - HK&#46;damage_double\n      msg (&quot;HK attacked you&#46;&quot;)\n      if (player&#46;hp &lt;= 0) {\n        finish // this ends the game\n      } else {\n        HK&#46;hp = HK&#46;hp - player&#46;damage_double\n        msg (&quot;You attack HK, &#46;&#46;&#46; (but you can NEVER kill him, muwahaha!)&quot;)\n        if (HK&#46;hp &lt;= 0) {\n          HK&#46;dead_boolean=true\n        }\n      }\n    }\n  &#93;&#93;&gt;&lt;/attr&gt;\n  // etc attribute types\n&lt;/object&gt;[/code:22fuosej]\n\n-----------\n\nthere's a few ways to do different outcomes:\n\n1. firsttime~otherwise script ( <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Firsttime\">http://quest5.net/wiki/Firsttime</a><!-- m --> and <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Otherwise\">http://quest5.net/wiki/Otherwise</a><!-- m --> )\n2. the built-in boolean attribute: &quot;visited&quot; (only for &quot;type: room&quot; Objects though, I think...)\n3. basic &quot;if coding&quot; or just &quot;coding&quot;: your own flag effect of scripting, a simple example below:\n\ngame.count = 5\n\nif (game.count = 5) {\n-&gt; msg (&quot;hi&quot;)\n-&gt; game.count = 10\n} else if (game.count = 10) {\n-&gt; msg (&quot;bye&quot;)\n-&gt; game.count = 5\n}\n\nthe &quot;Value&quot; (5,10,red,blue, etc) doesn't matter, if you only have two outcomes, than only two options~settings are needed, for another example:\n\ngame.count = red\n\nif (game.count = &quot;red&quot;) {\n-&gt; msg (&quot;hi&quot;)\n-&gt; game.count = &quot;blue&quot;\n} else if (game.count = &quot;blue&quot;) {\n-&gt; msg (&quot;bye&quot;)\n-&gt; game.count = &quot;red&quot;\n}\n\nthe built-in boolean attribute:\n\nroom.visited = true\n\nif (room.visited = false) {\n-&gt; msg (&quot;hi&quot;)\n-&gt; room.visited = true\n} else if (room.visited = true) {\n-&gt; msg (&quot;bye&quot;)\n-&gt; room.visisted = false\n}\n\nusing the &quot;firsttime~otherwise&quot; script~function (it probably does and uses the same thing~method as above for you ~ it probably changes~resets the built-in &quot;visited&quot; boolean attribute between &quot;true&quot; and &quot;false&quot;):\n\nfirsttime {\n-&gt; msg (&quot;hi&quot;)\n} otherwise {\n-&gt; msg (&quot;bye&quot;)\n}\n\n----------\n\nthe simpliest method is using the &quot;firsttime~otherwise&quot; script&#058;\n\n[code:22fuosej]&lt;object name=&quot;room&quot;&gt;\n  &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;attr name=&quot;look at&quot; type=&quot;script&quot;&gt; // I believe this built in script attribute, is the 'room description', but I'm not exactly sure how the GUI~Editor works, as there's also the &quot;onenterroom&quot; or &quot;onenterroomfirsttime&quot; (a possible option too if it exists ~ can't remember off top of my head) and etc 'room description' scripts&#46;&#46;&#46;\n    firsttime {\n      msg (&quot;a long room description of all the scenery and etc stuff&quot;)\n    } otherwise {\n      msg (&quot;a shorter description, without all the fluff&quot;)\n    }\n  &lt;/attr&gt;\n&lt;/object&gt;[/code:22fuosej]\n\n-----------\n\n[quote=&quot;ken&quot;:22fuosej]A thought strikes me. If I want all rooms to have both a long (first time) and short (re-visit) description, is it possible to alter the template for a room to have two boxes for descriptions, then alter the default room description script to display the appropriate one, so I don't have to add the code (as described in cybernetsurfer7's solution) to every room description? I'm assuming this would be via a &quot;template&quot; or is that wrong? I'd also need to alter the default action of the &quot;LOOK&quot; verb somehow?[/quote:22fuosej]\n\n&quot;Templates&quot; are more for responses (messages ~ msg), if you want to change the default or error_exception response, or it also makes it easier to translate the game into another (speaking, not programming lol) language (of font used), as they can be used as a 'called upon' (like you do with functions) or &quot;invoke&quot; (for scripts), but for a response (msg), instead.\n\nhowever, what you want, is achieved by changing the scripting (script or function) itself of the built-in &quot;room description&quot; or &quot;look at&quot; scripts~functions, which can be done by:\n\nan example:\n\nFilter -&gt; Show Library Objects~Elements (whatever it is called) (so it is toggled &quot;on&quot; obviously)\n\n(Verb) eat (greyed font~text) -&gt; copy -&gt; alter it as you want\n\nyou can see all the built-in stuff by just clicking on &quot;filter&quot; to bring up the toggle button &quot;show library objects~elements&quot; within the GUI~Editor:\n\n[code:22fuosej]New Game's &quot;Tree of Stuff&quot;&#58;\n\nObjects\n  Game\n    Verbs\n    Commands\n  Room\n    Player\nFunctions\nTimers\nWalkthrough\nAdvanced\n  Included Libraries\n    English&#46;aslx\n    Core&#46;aslx\n  Templates\n  Dynamic Templates\n  Object Types\n  Javascript\nFilter -&gt; Show Library Objects~elements (whatever it is)[/code:22fuosej]\n\n\n***** AND *****\n\n\nyou can then alter~change these default built-in stuff by click on it (the light grey font'ed things) in the &quot;tree of stuff&quot; (so that it is highlighted) allowing you to see the coding of it and also to change it (via the &quot;change&quot; button in the upper right),\n\nTHOUGH do understand that these are global changes to the built-in stuff, which the underlying coding uses too, so be careful, as you may not want the global effect or it might cause the underlying code to not be able to work with your changes to these built-in things.\n\nHOWEVER, by doing it this way, the quest engine is protected, as you're copying it, making changes to the copy, and thus not messing up the actual quest engine of coding (though your specific game file may not work because of your changes ~ but you don't have to re-download the quest program~software)\n\n-------------------\n\nquest itself uses a default of two libraries (codings):\n\nCore.aslx\nEnglish.aslx\n\n(see the ' &lt;include ref=&quot;blah&quot; /&gt; ' below)\n\n[code:22fuosej]&lt;!-- New Game Code --&gt;\n\n&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot;/&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot;/&gt;\n  &lt;game name=&quot;Testing Game Stuff&quot;&gt;\n    &lt;gameid&gt;d67ec73f-f879-4911-9d88-c02ea527c534&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2014&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;[/code:22fuosej]\n\nwhich makes it easy to add more libraries (codings) too:\n\n[code:22fuosej]&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot;/&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot;/&gt;\n  &lt;include ref=&quot;Chase's Wearables Library File&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Pixie's Spell Library File&#46;aslx&quot; /&gt;\n  // etc library files\n  &lt;game name=&quot;Testing Game Stuff&quot;&gt;\n    &lt;gameid&gt;d67ec73f-f879-4911-9d88-c02ea527c534&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2014&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;[/code:22fuosej]\n\nheck, let's completely re-customize quest, lol:\n\n[code:22fuosej]&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot;/&gt;\n  &lt;include ref=&quot;HK's New Core (haha maybe 50 years later I'd have this coding ability lol) Library File&#46;aslx&quot;/&gt;\n  // it's architecture is completely different, HK's own creation&#46;&#46;&#46; my long long long term programming goal&#46;&#46;&#46; lol\n&lt;/asl&gt;[/code:22fuosej]\n\nso literally, libraries are &quot;patches&quot;, &quot;expansion packs&quot;, or even &quot;the quest source~core code itself&quot; of code (adds, changes, or removes code) that can be added to quest. Alex made quest extremely (easily) customizable for those good at programming.\n\nlibraries can be extremly simple, adding a single object to a game, or it can literally be a totally new source~engine code, lol.\n\nI believe in the programming world, libraries are like your &quot;data files&quot; ???\n\naka:\n\nactor(PCs~NPCs)_data_file\nphysics_data_file\nmedia_data_file\ngame_mechanics_data_file\nobjects(NON-PCs~NON-NPCs)_data_file\nscripts~events~flags_data_file\nand etc data files\n\nwhich are combined (or called upon) from a single: global data file or *.exe game file\n\n----------------\n\nhere's an example of a library, and also how works and what are &quot;templates&quot;:\n\nPixie's Spell Library:\n\n[code:22fuosej]&lt;?xml version=&quot;1&#46;0&quot;?&gt;\n&lt;library&gt;\n\n\n  &lt;!--\n  This library adds a basic magic system to quest&#46; It allows for three types of spells&#58;\n\n  nonattackspell&#58; Instant effect\n  lastingspell&#58; An on-going spell&#46; These last until another spell is cast\n  attackspell&#58; Instant effect, attacking anything of the &quot;monster&quot; type that is not dead\n\n  Attack spells must be of an element, and eight are already set up&#46; Monsters\n  can be assigned to elements too; they will be immune to that element, but take\n  four-fold damage from the opposed element&#46;\n\n  A &quot;Magic&quot; tab is added to the editor to make setting up spells and monsters as easy as possible&#46;\n  --&gt;\n\n  &lt;!--\n  Adding new elements involves a bit of effort&#46; This system requires that elements are added in pairs or opposites,\n  such as fire and frost&#46;\n  1&#46; Create a new type for both elements, named &#91;elemem&#93;_type\n  2&#46; In the data section, the object element_struct needs both elements added to both &quot;elements&quot; and\n      &quot;opposedelements&quot;, and for the latter you need to put them in both ways around (look at existing entries)\n  3&#46; You need to add both elements to the tab, both for &quot;monster&quot; and for &quot;attackspell&quot;&#46; Again, see existing\n      entries&#46;\n  --&gt;\n\n\n  &lt;!-- =================================================== --&gt;\n  &lt;!-- Templates --&gt;\n\n  &lt;!--\n  Using templates makes it easier to convert to other languages, but also for other users to word it how they want it&#46;\n  When templates are in the library that uses them (as here) the way to change the language is to\n  modify the template in the library, so really the only benefit is that all the text is together here&#46;\n  Also modify the default responses in the verbs!\n  --&gt;\n\n  &lt;template name=&quot;Learn&quot;&gt;learn&lt;/template&gt;\n  &lt;template name=&quot;Cast&quot;&gt;cast&lt;/template&gt;\n\n  &lt;template name=&quot;LookDead&quot;&gt;Oh, and it is dead&#46;&lt;/template&gt;\n  &lt;template name=&quot;SpellAlreadyKnown&quot;&gt;Er, you already know that one!&lt;/template&gt;\n  &lt;template name=&quot;SpellNotKnown&quot;&gt;Er, you don't know that one!&lt;/template&gt;\n  &lt;template name=&quot;NoMonstersPresent&quot;&gt;No monsters present&lt;/template&gt;\n\n  &lt;dynamictemplate name=&quot;SpellEnds&quot;&gt;&lt;!&#91;CDATA&#91;&quot;The &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt; spell ends&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;\n  &lt;dynamictemplate name=&quot;SpellCast&quot;&gt;&lt;!&#91;CDATA&#91;&quot;You cast &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt;&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;\n  &lt;dynamictemplate name=&quot;SpellLearnt&quot;&gt;&lt;!&#91;CDATA&#91;&quot;In a process that seems at once unfathomable, and yet familiar, the spell fades away, and you realise you are now able to cast the &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt; spell&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;\n\n\n\n  &lt;!-- =================================================== --&gt;\n  &lt;!-- Verbs --&gt;\n\n  &lt;verb&gt;\n    &lt;property&gt;learn&lt;/property&gt;\n    &lt;pattern&gt;&#91;Learn&#93;&lt;/pattern&gt;\n    &lt;defaultexpression&gt;&quot;You can't learn &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;verb&gt;\n    &lt;property&gt;cast&lt;/property&gt;\n    &lt;pattern&gt;&#91;Cast&#93;&lt;/pattern&gt;\n    &lt;defaultexpression&gt;&quot;You can't cast &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n\n\n  &lt;!-- =================================================== --&gt;\n  &lt;!-- Functions --&gt;\n\n  &lt;!--\n  Handles an attack on the given monster, using the given spell&#46;\n  Monster loses hit points according to the spell's powerrating&#46;\n  If they share an element, then no damage, if elements are opposed, damage is multplied by 4\n  Handles monsters with no elements too, but spell must have an element set&#46;\n  --&gt;\n  &lt;function name=&quot;SpellAttackMonster&quot; parameters=&quot;monster, spell&quot;&gt;&lt;!&#91;CDATA&#91;\n    element = GetElement (monster)\n    handled = False\n    if (not element = Null) {\n      if (DoesInherit (spell, element + &quot;_type&quot;)) {\n        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;ignoreselement)\n        handled = True\n      }\n      if (DoesInherit (spell, StringDictionaryItem (element_struct&#46;opposedelements, element) + &quot;_type&quot;)) {\n        monster&#46;hitpoints = monster&#46;hitpoints -  4 * spell&#46;powerrating\n        handled = True\n        if (monster&#46;hitpoints &gt; 0) {\n          msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;hurtbyelement)\n        }\n        else {\n          msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;deathbyelement)\n          Death (monster)\n        }\n      }\n    }\n\n    if (not handled) {\n      monster&#46;hitpoints = monster&#46;hitpoints -  spell&#46;powerrating\n      if (monster&#46;hitpoints &gt; 0) {\n        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;hurt)\n      }\n      else {\n        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;death)\n        Death (monster)\n      }\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n\n\n  &lt;!--\n  Call this when a spell is cast, to ensure any on-going spells\n  are terminated&#46;\n  --&gt;\n  &lt;function name=&quot;CancelSpell&quot;&gt;&lt;!&#91;CDATA&#91;\n    if (HasObject (player, &quot;currentspell&quot;)) {\n      spell = player&#46;currentspell\n      msg (DynamicTemplate(&quot;SpellEnds&quot;, spell))\n      player&#46;currentspell = null\n      if (HasScript (spell, &quot;terminate&quot;)) {\n        do (spell, &quot;terminate&quot;)\n      }\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n\n\n  &lt;!--\n  Call this when a monster dies for some housekeeping&#46;\n  --&gt;\n  &lt;function name=&quot;Death&quot; parameters=&quot;monster&quot;&gt;&lt;!&#91;CDATA&#91;\n    monster&#46;alias = monster&#46;alias + &quot; (dead)&quot;\n    if (HasString (monster, &quot;lookwhendead&quot;)) {\n      monster&#46;look = monster&#46;lookwhendead\n    }\n    else {\n      monster&#46;look = monster&#46;look + &quot; &#91;LookDead&#93;&quot;\n    }\n    monster&#46;dead = True\n  &#93;&#93;&gt;&lt;/function&gt;\n\n\n  &lt;!--\n  Returns as a string the name of this object's element (or null)&#46;\n  --&gt;\n  &lt;function name=&quot;GetElement&quot; parameters=&quot;obj&quot; type=&quot;string&quot;&gt;&lt;!&#91;CDATA&#91;\n    result = Null\n    foreach (element, element_struct&#46;elements) {\n     type = element + &quot;_type&quot;\n      if (DoesInherit (obj, type)) {\n        result = element\n      }\n    }\n    return (result)\n  &#93;&#93;&gt;&lt;/function&gt;\n\n\n  &lt;!--\n  Describes casting\n  --&gt;\n  &lt;function name=&quot;DescribeCast&quot; parameters=&quot;spell&quot;&gt;&lt;!&#91;CDATA&#91;\n        if (HasString (spell, &quot;description&quot;)) {\n          msg (DynamicTemplate(&quot;SpellCast&quot;, spell) + &quot; &quot; + spell&#46;description)\n        }\n        else {\n          msg (DynamicTemplate(&quot;SpellCast&quot;, spell))\n        }\n  &#93;&#93;&gt;&lt;/function&gt;\n\n\n  &lt;!-- =================================================== --&gt;\n  &lt;!-- Object types --&gt;\n\n  &lt;type name=&quot;spell&quot;&gt;\n    &lt;inventoryverbs type=&quot;list&quot;&gt;Learn&lt;/inventoryverbs&gt;\n    &lt;displayverbs type=&quot;list&quot;&gt;Learn&lt;/displayverbs&gt;\n    &lt;drop type=&quot;boolean&quot;&gt;false&lt;/drop&gt;\n    &lt;take type=&quot;boolean&quot;&gt;false&lt;/take&gt;\n    &lt;usedefaultprefix type=&quot;boolean&quot;&gt;false&lt;/usedefaultprefix&gt;\n    &lt;learn type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n      if (not this&#46;parent = player) {\n        this&#46;parent = player\n        this&#46;inventoryverbs = Split (&quot;Cast&quot;, &quot; &quot;)\n        msg (DynamicTemplate(&quot;SpellLearnt&quot;, this))\n      }\n      else {\n        msg (&quot;&#91;SpellAlreadyKnown&#93;&quot;)\n      }\n    &#93;&#93;&gt;&lt;/learn&gt;\n  &lt;/type&gt;\n\n\n\n  &lt;type name=&quot;attackspell&quot;&gt;\n    &lt;inherit name=&quot;spell&quot;/&gt;\n    &lt;cast type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n      // Check the player has the spell\n      // If so iterate through all objects in the room\n      // Apply attack to those with the monster type that are not dead\n      if (this&#46;parent = player) {\n        DescribeCast (this)\n        flag = False\n        foreach (obj, ScopeVisibleNotHeld ()) {\n          if (DoesInherit (obj, &quot;monster&quot;) and not GetBoolean (obj, &quot;dead&quot;)) {\n            SpellAttackMonster (obj, this)\n            flag = True\n          }\n        }\n        if (not flag) {\n          msg (&quot;&#46;&#46;&#46; &#91;NoMonstersPresent&#93;&quot;)\n        }\n        CancelSpell ()\n      }\n      else {\n        msg (&quot;&#91;SpellNotKnown&#93;&quot;)\n      }\n    &#93;&#93;&gt;&lt;/cast&gt;\n  &lt;/type&gt;\n\n\n  &lt;type name=&quot;nonattackspell&quot;&gt;\n    &lt;inherit name=&quot;spell&quot;/&gt;\n    &lt;cast type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n      if (this&#46;parent = player) {\n        DescribeCast (this)\n        do (this, &quot;spelleffect&quot;)\n        CancelSpell ()\n      }\n      else {\n        msg (&quot;&#91;SpellNotKnown&#93;&quot;)\n      }\n    &#93;&#93;&gt;&lt;/cast&gt;\n  &lt;/type&gt;\n\n\n  &lt;type name=&quot;lastingspell&quot;&gt;\n    &lt;inherit name=&quot;spell&quot;/&gt;\n    &lt;cast type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n      if (this&#46;parent = player) {\n        DescribeCast (this)\n        do (this, &quot;spelleffect&quot;)\n        CancelSpell ()\n        player&#46;currentspell = this\n        player&#46;status = this&#46;status\n      }\n      else {\n        msg (&quot;&#91;SpellNotKnown&#93;&quot;)\n      }\n    &#93;&#93;&gt;&lt;/cast&gt;\n  &lt;/type&gt;\n\n\n  &lt;type name=&quot;fire_type&quot;&gt;\n  &lt;/type&gt;\n\n  &lt;type name=&quot;frost_type&quot;&gt;\n  &lt;/type&gt;\n\n  &lt;type name=&quot;storm_type&quot;&gt;\n  &lt;/type&gt;\n\n  &lt;type name=&quot;earthmight_type&quot;&gt;\n  &lt;/type&gt;\n\n  &lt;type name=&quot;shadow_type&quot;&gt;\n  &lt;/type&gt;\n\n  &lt;type name=&quot;rainbow_type&quot;&gt;\n  &lt;/type&gt;\n\n  &lt;type name=&quot;divine_type&quot;&gt;\n  &lt;/type&gt;\n\n  &lt;type name=&quot;necrotic_type&quot;&gt;\n  &lt;/type&gt;\n\n  &lt;type name=&quot;monster&quot;&gt;\n  &lt;/type&gt;\n\n\n  &lt;!-- =================================================== --&gt;\n  &lt;!-- Data --&gt;\n\n  &lt;!--\n  This is a data store for elements (I call it a &quot;struct&quot; after the keyword in the C programming language)\n  If you add more elements to the name, you need to add them to both lists as well as creating a new type&#46;\n  Note that your new type must end &quot;_type&quot;, but that must not be included on these lists&#46;\n  --&gt;\n  &lt;object name=&quot;element_struct&quot;&gt;\n    &lt;elements type=&quot;list&quot;&gt;fire; frost; storm; earthmight; shadow; rainbow; divine; necrotic&lt;/elements&gt;\n    &lt;opposedelements type=&quot;stringdictionary&quot;&gt;fire = frost;frost = fire;storm = earthmight;earthmight = storm;shadow = rainbow;rainbow = shadow;necrotic = divine;divine=necrotic&lt;/opposedelements&gt;\n  &lt;/object&gt;\n\n\n  &lt;!-- =================================================== --&gt;\n  &lt;!-- Tabs --&gt;\n\n  &lt;tab&gt;\n    &lt;parent&gt;_ObjectEditor&lt;/parent&gt;\n    &lt;caption&gt;Magic&lt;/caption&gt;\n    &lt;mustnotinherit&gt;editor_room; defaultplayer&lt;/mustnotinherit&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;dropdowntypes&lt;/controltype&gt;\n      &lt;caption&gt;Spell type&lt;/caption&gt;\n      &lt;types&gt;*=None; nonattackspell=Non-attack spell; lastingspell=Lasting spell; attackspell=Attack spell; monster=Monster&lt;/types&gt;\n      &lt;width&gt;150&lt;/width&gt;\n    &lt;/control&gt;\n\n\n\n    &lt;control&gt;\n      &lt;controltype&gt;title&lt;/controltype&gt;\n      &lt;caption&gt;Non-Attack Spell&lt;/caption&gt;\n      &lt;mustinherit&gt;nonattackspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Description (optional)&lt;/caption&gt;\n      &lt;attribute&gt;description&lt;/attribute&gt;\n      &lt;mustinherit&gt;nonattackspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;script&lt;/controltype&gt;\n      &lt;caption&gt;Spell effect&lt;/caption&gt;\n      &lt;attribute&gt;spelleffect&lt;/attribute&gt;\n      &lt;mustinherit&gt;nonattackspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n\n\n    &lt;control&gt;\n      &lt;controltype&gt;title&lt;/controltype&gt;\n      &lt;caption&gt;Lasting Spell&lt;/caption&gt;\n      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Description (optional)&lt;/caption&gt;\n      &lt;attribute&gt;description&lt;/attribute&gt;\n      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Status when active&lt;/caption&gt;\n      &lt;attribute&gt;status&lt;/attribute&gt;\n      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;script&lt;/controltype&gt;\n      &lt;caption&gt;Spell effect&lt;/caption&gt;\n      &lt;attribute&gt;spelleffect&lt;/attribute&gt;\n      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;script&lt;/controltype&gt;\n      &lt;caption&gt;Cacel spell effect&lt;/caption&gt;\n      &lt;attribute&gt;terminate&lt;/attribute&gt;\n      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n\n\n    &lt;control&gt;\n      &lt;controltype&gt;title&lt;/controltype&gt;\n      &lt;caption&gt;Attack Spell&lt;/caption&gt;\n      &lt;mustinherit&gt;attackspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;number&lt;/controltype&gt;\n      &lt;caption&gt;Power of attack (1-10)&lt;/caption&gt;\n      &lt;attribute&gt;powerrating&lt;/attribute&gt;\n      &lt;width&gt;100&lt;/width&gt;\n      &lt;mustinherit&gt;attackspell&lt;/mustinherit&gt;\n      &lt;minimum&gt;0&lt;/minimum&gt;\n      &lt;maximum&gt;10&lt;/maximum&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Description (optional)&lt;/caption&gt;\n      &lt;attribute&gt;description&lt;/attribute&gt;\n      &lt;mustinherit&gt;attackspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;dropdowntypes&lt;/controltype&gt;\n      &lt;caption&gt;Element&lt;/caption&gt;\n      &lt;types&gt;*=None; fire_type=Fire; frost_type=Frost; storm_type=Storm; earthmight_type=Earthmight; shadow_type=Shadow; rainbow_type=Rainbow; necrotic_type=Necrotic; divine_type=Divine&lt;/types&gt;\n      &lt;width&gt;150&lt;/width&gt;\n      &lt;mustinherit&gt;attackspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n\n\n    &lt;control&gt;\n      &lt;controltype&gt;title&lt;/controltype&gt;\n      &lt;caption&gt;Monster&lt;/caption&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;dropdowntypes&lt;/controltype&gt;\n      &lt;caption&gt;Element&lt;/caption&gt;\n      &lt;types&gt;*=None; fire_type=Fire; frost_type=Frost; storm_type=Storm; earthmight_type=Earthmight; shadow_type=Shadow; rainbow_type=Rainbow; necrotic_type=Necrotic; divine_type=Divine&lt;/types&gt;\n      &lt;width&gt;150&lt;/width&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;number&lt;/controltype&gt;\n      &lt;caption&gt;Hit points&lt;/caption&gt;\n      &lt;attribute&gt;hitpoints&lt;/attribute&gt;\n      &lt;width&gt;100&lt;/width&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n      &lt;minimum&gt;0&lt;/minimum&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Description on injury&lt;/caption&gt;\n      &lt;attribute&gt;hurt&lt;/attribute&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Description on death&lt;/caption&gt;\n      &lt;attribute&gt;death&lt;/attribute&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Description on injury by opposed element&lt;/caption&gt;\n      &lt;attribute&gt;hurtbyelement&lt;/attribute&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Description on death by opposed element&lt;/caption&gt;\n      &lt;attribute&gt;deathbyelement&lt;/attribute&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Description on ignore&lt;/caption&gt;\n      &lt;attribute&gt;ignoreselement&lt;/attribute&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Look (when dead)&lt;/caption&gt;\n      &lt;attribute&gt;lookwhendead&lt;/attribute&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n  &lt;/tab&gt;\n&lt;/library&gt;[/code:22fuosej]",
      "EditableFormat": "bbcode",
      "HTML": "you can simply copy and paste any code posted into a game file (and save), then switch to the GUI~Editor mode, to see how it is done through the editor (GUI), though it is a bit time-consuming and the GUI~Editor doesn't intuitively match up well with how it is syntaxed~formated (done) in code, lol. It's a lot of work learning to match up coding with the editor's style... at least it was for me... (see example directly below)<br/><br/>for example:<br/><br/><span style=\"font-weight:bold;\">in code:</span><br/><br/>as tag creation:<br/><br/>&lt;object name=&quot;orc&quot;&gt;<br/>-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>-&gt; &lt;attr name=&quot;dead&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>or in scripting creation:<br/><br/>orc.dead = false<br/><br/>and then to change it (via scripting):<br/><br/>orc.dead = true<br/><br/>to change it back (via scripting):<br/><br/>orc.dead = false<br/><br/><span style=\"font-weight:bold;\">whereas, in GUI~Editor:</span><br/><br/>to create it via an attribute of an object:<br/><br/>&quot;orc&quot; (Object) -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;<br/><br/>Attribute Name: dead<br/>Attribute Type: boolean<br/>Attribute Value: false<br/><br/>to create it (via scripting):<br/><br/>Run as script -&gt; Add a script -&gt; Variables -&gt; Set a variable or attribute -&gt; orc.dead=false<br/><br/>to change it:<br/><br/>Run as script -&gt; Add a script -&gt; ??? (whatever it's category, 'Objects', I think) -&gt; SetObjectFlagOn -&gt; (set it up)<br/><br/>to change it back:<br/><br/>Run as script -&gt; Add a script -&gt; ??? (whatever it's category, 'Objects', I think) -&gt; SetObjectFlagOff -&gt; (set it up)<br/><br/>---------<br/><br/>I'm more than willing to guide with with using the GUI~Editor, if you don't want to work with code, but the main problem is time, as it takes more work~time to write out explanations and step by step instructions in using the GUI~Editor, vs just pasting in code, lol, and unfortunately, I am busy with real life, so if you don't mind to wait for when I got the time, I'd gladly help you with doing things in the GUI~Editor, when I got the time for doing it.<br/><br/>until then, (or until others are able to help you), the main sources of GUI~Editor help (with nice pictures of it too) are:<br/><br/>the tutorial ( <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Tutorial\">http://quest5.net/wiki/Tutorial</a><!-- m --> )<br/>the wiki guides ( <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/How_to\">http://quest5.net/wiki/How_to</a><!-- m --> )<br/>and some of the libraries ( <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewforum.php?f=18\">viewforum.php?f=18</a><!-- l --> )<br/><br/>though, it is a bit more limited, compared to the amount of coding help that exists.<br/><br/>----------<br/><br/>oh indeed, learning a new language is not easy, as you're used to the old format, and when you learn the new language, then you'll have a new problem of mxing up the two languages, not remembering what syntax~format goes with which language, lol.<br/><br/>however, quest's language is really noobie-friendly, so you should be able to pick it up quickly in-of-itself, though it does take time to adjust to any new language.<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:ASLX_Elements\">http://quest5.net/wiki/Category:ASLX_Elements</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ASLX_Elements\">http://quest5.net/wiki/ASLX_Elements</a><!-- m --><br/><br/>the various elements: <br/><br/>Objects, Exits, Verbs, Commands, Timers, Turnscripts, Functions, Game, Object Type ( it's shortened in the tags to just: &lt;type name=&quot;blah&quot;&gt;attributes&lt;/type&gt; ) (grouping~inheritance), Templates, Libraries, Walkthroughs, etc<br/><br/>basically, you do this (ignoring the optional attributes):<br/><br/>(can be written horizontally or vertically)<br/><br/>The Elements:<br/><br/>&lt;object name=&quot;blah&quot;&gt;attributes&lt;/object&gt;<br/>&lt;verb name=&quot;blah&quot;&gt;scripting&lt;/verb&gt;<br/>&lt;command name=&quot;blah&quot;&gt;scripting&lt;/command&gt;<br/>&lt;type name=&quot;blah&quot;&gt;attributes&lt;/type&gt; // &lt;type&gt; is short for: Object Type<br/>&lt;turnscript name=&quot;blah&quot;&gt;scripting&lt;/turnscript&gt;<br/>&lt;timer name=&quot;blah&quot;&gt;scripting&lt;/timer&gt;<br/>&lt;function name=&quot;blah&quot;&gt;scripting&lt;/function&gt;<br/>&lt;exit name=&quot;blah&quot;&gt;attributes&lt;/exit&gt;<br/>&lt;attr name=&quot;blah&quot; type=&quot;blah&quot;&gt;values&lt;/attr&gt;<br/><br/>attr = Attribute<br/><br/>The Attributes:<br/><br/>int = integer<br/>boolean = specifically in terms of quest's coding usage, just &quot;true~false&quot; flags<br/><br/>coding conceptuality (no &quot;flag&quot; element~attribute actually exists, you create effect by~via scripting): 'flags' are binary: 0~1 and more expansively, dualism: 5~10, on~off, yes~no, in~out, up~down, hot~cold, red~blue, etc ~ aka: only two options~settings<br/><br/>(these are just custom ones, using my own labeling system~structure, for examples)<br/><br/><pre><code>&lt;object name=&quot;HK&quot;&gt;<br/>  &lt;attr name=&quot;parent&quot; type=&quot;object&quot;&gt;room&lt;/attr&gt;<br/>  &lt;attr name=&quot;gender_string&quot; type=&quot;string&quot;&gt;male&lt;/attr&gt;<br/>  &lt;attr name=&quot;strength_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;dead_boolean&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;<br/>  &lt;attr name=&quot;damage_double&quot; type=&quot;double&quot;&gt;156&#46;84&lt;/attr&gt;<br/>  &lt;attr name=&quot;favorite_colors_string_list&quot; type=&quot;simplestringlist&quot;&gt;black;red&lt;/attr&gt;<br/>  &lt;attr name=&quot;clothes_object_list&quot; type=&quot;objectlist&quot;&gt;shirt;socks;shoes;pants&lt;/attr&gt;<br/>  &lt;attr name=&quot;fight_script&quot; type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    if (HK&#46;dead_boolean=true) {<br/>      msg (&quot;He's already dead, silly!&quot;)<br/>    } else if (HK&#46;dead_boolean=false) {<br/>      player&#46;hp = player&#46;hp - HK&#46;damage_double<br/>      msg (&quot;HK attacked you&#46;&quot;)<br/>      if (player&#46;hp &lt;= 0) {<br/>        finish // this ends the game<br/>      } else {<br/>        HK&#46;hp = HK&#46;hp - player&#46;damage_double<br/>        msg (&quot;You attack HK, &#46;&#46;&#46; (but you can NEVER kill him, muwahaha!)&quot;)<br/>        if (HK&#46;hp &lt;= 0) {<br/>          HK&#46;dead_boolean=true<br/>        }<br/>      }<br/>    }<br/>  &#93;&#93;&gt;&lt;/attr&gt;<br/>  // etc attribute types<br/>&lt;/object&gt;</code></pre><br/><br/>-----------<br/><br/>there's a few ways to do different outcomes:<br/><br/>1. firsttime~otherwise script ( <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Firsttime\">http://quest5.net/wiki/Firsttime</a><!-- m --> and <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Otherwise\">http://quest5.net/wiki/Otherwise</a><!-- m --> )<br/>2. the built-in boolean attribute: &quot;visited&quot; (only for &quot;type: room&quot; Objects though, I think...)<br/>3. basic &quot;if coding&quot; or just &quot;coding&quot;: your own flag effect of scripting, a simple example below:<br/><br/>game.count = 5<br/><br/>if (game.count = 5) {<br/>-&gt; msg (&quot;hi&quot;)<br/>-&gt; game.count = 10<br/>} else if (game.count = 10) {<br/>-&gt; msg (&quot;bye&quot;)<br/>-&gt; game.count = 5<br/>}<br/><br/>the &quot;Value&quot; (5,10,red,blue, etc) doesn't matter, if you only have two outcomes, than only two options~settings are needed, for another example:<br/><br/>game.count = red<br/><br/>if (game.count = &quot;red&quot;) {<br/>-&gt; msg (&quot;hi&quot;)<br/>-&gt; game.count = &quot;blue&quot;<br/>} else if (game.count = &quot;blue&quot;) {<br/>-&gt; msg (&quot;bye&quot;)<br/>-&gt; game.count = &quot;red&quot;<br/>}<br/><br/>the built-in boolean attribute:<br/><br/>room.visited = true<br/><br/>if (room.visited = false) {<br/>-&gt; msg (&quot;hi&quot;)<br/>-&gt; room.visited = true<br/>} else if (room.visited = true) {<br/>-&gt; msg (&quot;bye&quot;)<br/>-&gt; room.visisted = false<br/>}<br/><br/>using the &quot;firsttime~otherwise&quot; script~function (it probably does and uses the same thing~method as above for you ~ it probably changes~resets the built-in &quot;visited&quot; boolean attribute between &quot;true&quot; and &quot;false&quot;):<br/><br/>firsttime {<br/>-&gt; msg (&quot;hi&quot;)<br/>} otherwise {<br/>-&gt; msg (&quot;bye&quot;)<br/>}<br/><br/>----------<br/><br/>the simpliest method is using the &quot;firsttime~otherwise&quot; script&#058;<br/><br/><pre><code>&lt;object name=&quot;room&quot;&gt;<br/>  &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;attr name=&quot;look at&quot; type=&quot;script&quot;&gt; // I believe this built in script attribute, is the 'room description', but I'm not exactly sure how the GUI~Editor works, as there's also the &quot;onenterroom&quot; or &quot;onenterroomfirsttime&quot; (a possible option too if it exists ~ can't remember off top of my head) and etc 'room description' scripts&#46;&#46;&#46;<br/>    firsttime {<br/>      msg (&quot;a long room description of all the scenery and etc stuff&quot;)<br/>    } otherwise {<br/>      msg (&quot;a shorter description, without all the fluff&quot;)<br/>    }<br/>  &lt;/attr&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>-----------<br/><br/><blockquote><cite>ken wrote:</cite>A thought strikes me. If I want all rooms to have both a long (first time) and short (re-visit) description, is it possible to alter the template for a room to have two boxes for descriptions, then alter the default room description script to display the appropriate one, so I don't have to add the code (as described in cybernetsurfer7's solution) to every room description? I'm assuming this would be via a &quot;template&quot; or is that wrong? I'd also need to alter the default action of the &quot;LOOK&quot; verb somehow?</blockquote><br/><br/>&quot;Templates&quot; are more for responses (messages ~ msg), if you want to change the default or error_exception response, or it also makes it easier to translate the game into another (speaking, not programming lol) language (of font used), as they can be used as a 'called upon' (like you do with functions) or &quot;invoke&quot; (for scripts), but for a response (msg), instead.<br/><br/>however, what you want, is achieved by changing the scripting (script or function) itself of the built-in &quot;room description&quot; or &quot;look at&quot; scripts~functions, which can be done by:<br/><br/>an example:<br/><br/>Filter -&gt; Show Library Objects~Elements (whatever it is called) (so it is toggled &quot;on&quot; obviously)<br/><br/>(Verb) eat (greyed font~text) -&gt; copy -&gt; alter it as you want<br/><br/>you can see all the built-in stuff by just clicking on &quot;filter&quot; to bring up the toggle button &quot;show library objects~elements&quot; within the GUI~Editor:<br/><br/><pre><code>New Game's &quot;Tree of Stuff&quot;&#58;<br/><br/>Objects<br/>  Game<br/>    Verbs<br/>    Commands<br/>  Room<br/>    Player<br/>Functions<br/>Timers<br/>Walkthrough<br/>Advanced<br/>  Included Libraries<br/>    English&#46;aslx<br/>    Core&#46;aslx<br/>  Templates<br/>  Dynamic Templates<br/>  Object Types<br/>  Javascript<br/>Filter -&gt; Show Library Objects~elements (whatever it is)</code></pre><br/><br/><br/>***** AND *****<br/><br/><br/>you can then alter~change these default built-in stuff by click on it (the light grey font'ed things) in the &quot;tree of stuff&quot; (so that it is highlighted) allowing you to see the coding of it and also to change it (via the &quot;change&quot; button in the upper right),<br/><br/>THOUGH do understand that these are global changes to the built-in stuff, which the underlying coding uses too, so be careful, as you may not want the global effect or it might cause the underlying code to not be able to work with your changes to these built-in things.<br/><br/>HOWEVER, by doing it this way, the quest engine is protected, as you're copying it, making changes to the copy, and thus not messing up the actual quest engine of coding (though your specific game file may not work because of your changes ~ but you don't have to re-download the quest program~software)<br/><br/>-------------------<br/><br/>quest itself uses a default of two libraries (codings):<br/><br/>Core.aslx<br/>English.aslx<br/><br/>(see the ' &lt;include ref=&quot;blah&quot; /&gt; ' below)<br/><br/><pre><code>&lt;!-- New Game Code --&gt;<br/><br/>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot;/&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot;/&gt;<br/>  &lt;game name=&quot;Testing Game Stuff&quot;&gt;<br/>    &lt;gameid&gt;d67ec73f-f879-4911-9d88-c02ea527c534&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2014&lt;/firstpublished&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>&lt;/asl&gt;</code></pre><br/><br/>which makes it easy to add more libraries (codings) too:<br/><br/><pre><code>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot;/&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot;/&gt;<br/>  &lt;include ref=&quot;Chase's Wearables Library File&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Pixie's Spell Library File&#46;aslx&quot; /&gt;<br/>  // etc library files<br/>  &lt;game name=&quot;Testing Game Stuff&quot;&gt;<br/>    &lt;gameid&gt;d67ec73f-f879-4911-9d88-c02ea527c534&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2014&lt;/firstpublished&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>&lt;/asl&gt;</code></pre><br/><br/>heck, let's completely re-customize quest, lol:<br/><br/><pre><code>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot;/&gt;<br/>  &lt;include ref=&quot;HK's New Core (haha maybe 50 years later I'd have this coding ability lol) Library File&#46;aslx&quot;/&gt;<br/>  // it's architecture is completely different, HK's own creation&#46;&#46;&#46; my long long long term programming goal&#46;&#46;&#46; lol<br/>&lt;/asl&gt;</code></pre><br/><br/>so literally, libraries are &quot;patches&quot;, &quot;expansion packs&quot;, or even &quot;the quest source~core code itself&quot; of code (adds, changes, or removes code) that can be added to quest. Alex made quest extremely (easily) customizable for those good at programming.<br/><br/>libraries can be extremly simple, adding a single object to a game, or it can literally be a totally new source~engine code, lol.<br/><br/>I believe in the programming world, libraries are like your &quot;data files&quot; ???<br/><br/>aka:<br/><br/>actor(PCs~NPCs)_data_file<br/>physics_data_file<br/>media_data_file<br/>game_mechanics_data_file<br/>objects(NON-PCs~NON-NPCs)_data_file<br/>scripts~events~flags_data_file<br/>and etc data files<br/><br/>which are combined (or called upon) from a single: global data file or *.exe game file<br/><br/>----------------<br/><br/>here's an example of a library, and also how works and what are &quot;templates&quot;:<br/><br/>Pixie's Spell Library:<br/><br/><pre><code>&lt;?xml version=&quot;1&#46;0&quot;?&gt;<br/>&lt;library&gt;<br/><br/><br/>  &lt;!--<br/>  This library adds a basic magic system to quest&#46; It allows for three types of spells&#58;<br/><br/>  nonattackspell&#58; Instant effect<br/>  lastingspell&#58; An on-going spell&#46; These last until another spell is cast<br/>  attackspell&#58; Instant effect, attacking anything of the &quot;monster&quot; type that is not dead<br/><br/>  Attack spells must be of an element, and eight are already set up&#46; Monsters<br/>  can be assigned to elements too; they will be immune to that element, but take<br/>  four-fold damage from the opposed element&#46;<br/><br/>  A &quot;Magic&quot; tab is added to the editor to make setting up spells and monsters as easy as possible&#46;<br/>  --&gt;<br/><br/>  &lt;!--<br/>  Adding new elements involves a bit of effort&#46; This system requires that elements are added in pairs or opposites,<br/>  such as fire and frost&#46;<br/>  1&#46; Create a new type for both elements, named &#91;elemem&#93;_type<br/>  2&#46; In the data section, the object element_struct needs both elements added to both &quot;elements&quot; and<br/>      &quot;opposedelements&quot;, and for the latter you need to put them in both ways around (look at existing entries)<br/>  3&#46; You need to add both elements to the tab, both for &quot;monster&quot; and for &quot;attackspell&quot;&#46; Again, see existing<br/>      entries&#46;<br/>  --&gt;<br/><br/><br/>  &lt;!-- =================================================== --&gt;<br/>  &lt;!-- Templates --&gt;<br/><br/>  &lt;!--<br/>  Using templates makes it easier to convert to other languages, but also for other users to word it how they want it&#46;<br/>  When templates are in the library that uses them (as here) the way to change the language is to<br/>  modify the template in the library, so really the only benefit is that all the text is together here&#46;<br/>  Also modify the default responses in the verbs!<br/>  --&gt;<br/><br/>  &lt;template name=&quot;Learn&quot;&gt;learn&lt;/template&gt;<br/>  &lt;template name=&quot;Cast&quot;&gt;cast&lt;/template&gt;<br/><br/>  &lt;template name=&quot;LookDead&quot;&gt;Oh, and it is dead&#46;&lt;/template&gt;<br/>  &lt;template name=&quot;SpellAlreadyKnown&quot;&gt;Er, you already know that one!&lt;/template&gt;<br/>  &lt;template name=&quot;SpellNotKnown&quot;&gt;Er, you don't know that one!&lt;/template&gt;<br/>  &lt;template name=&quot;NoMonstersPresent&quot;&gt;No monsters present&lt;/template&gt;<br/><br/>  &lt;dynamictemplate name=&quot;SpellEnds&quot;&gt;&lt;!&#91;CDATA&#91;&quot;The &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt; spell ends&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;<br/>  &lt;dynamictemplate name=&quot;SpellCast&quot;&gt;&lt;!&#91;CDATA&#91;&quot;You cast &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt;&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;<br/>  &lt;dynamictemplate name=&quot;SpellLearnt&quot;&gt;&lt;!&#91;CDATA&#91;&quot;In a process that seems at once unfathomable, and yet familiar, the spell fades away, and you realise you are now able to cast the &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt; spell&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;<br/><br/><br/><br/>  &lt;!-- =================================================== --&gt;<br/>  &lt;!-- Verbs --&gt;<br/><br/>  &lt;verb&gt;<br/>    &lt;property&gt;learn&lt;/property&gt;<br/>    &lt;pattern&gt;&#91;Learn&#93;&lt;/pattern&gt;<br/>    &lt;defaultexpression&gt;&quot;You can't learn &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;<br/>  &lt;/verb&gt;<br/>  &lt;verb&gt;<br/>    &lt;property&gt;cast&lt;/property&gt;<br/>    &lt;pattern&gt;&#91;Cast&#93;&lt;/pattern&gt;<br/>    &lt;defaultexpression&gt;&quot;You can't cast &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;<br/>  &lt;/verb&gt;<br/><br/><br/>  &lt;!-- =================================================== --&gt;<br/>  &lt;!-- Functions --&gt;<br/><br/>  &lt;!--<br/>  Handles an attack on the given monster, using the given spell&#46;<br/>  Monster loses hit points according to the spell's powerrating&#46;<br/>  If they share an element, then no damage, if elements are opposed, damage is multplied by 4<br/>  Handles monsters with no elements too, but spell must have an element set&#46;<br/>  --&gt;<br/>  &lt;function name=&quot;SpellAttackMonster&quot; parameters=&quot;monster, spell&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    element = GetElement (monster)<br/>    handled = False<br/>    if (not element = Null) {<br/>      if (DoesInherit (spell, element + &quot;_type&quot;)) {<br/>        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;ignoreselement)<br/>        handled = True<br/>      }<br/>      if (DoesInherit (spell, StringDictionaryItem (element_struct&#46;opposedelements, element) + &quot;_type&quot;)) {<br/>        monster&#46;hitpoints = monster&#46;hitpoints -  4 * spell&#46;powerrating<br/>        handled = True<br/>        if (monster&#46;hitpoints &gt; 0) {<br/>          msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;hurtbyelement)<br/>        }<br/>        else {<br/>          msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;deathbyelement)<br/>          Death (monster)<br/>        }<br/>      }<br/>    }<br/><br/>    if (not handled) {<br/>      monster&#46;hitpoints = monster&#46;hitpoints -  spell&#46;powerrating<br/>      if (monster&#46;hitpoints &gt; 0) {<br/>        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;hurt)<br/>      }<br/>      else {<br/>        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;death)<br/>        Death (monster)<br/>      }<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/><br/><br/>  &lt;!--<br/>  Call this when a spell is cast, to ensure any on-going spells<br/>  are terminated&#46;<br/>  --&gt;<br/>  &lt;function name=&quot;CancelSpell&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    if (HasObject (player, &quot;currentspell&quot;)) {<br/>      spell = player&#46;currentspell<br/>      msg (DynamicTemplate(&quot;SpellEnds&quot;, spell))<br/>      player&#46;currentspell = null<br/>      if (HasScript (spell, &quot;terminate&quot;)) {<br/>        do (spell, &quot;terminate&quot;)<br/>      }<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/><br/><br/>  &lt;!--<br/>  Call this when a monster dies for some housekeeping&#46;<br/>  --&gt;<br/>  &lt;function name=&quot;Death&quot; parameters=&quot;monster&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    monster&#46;alias = monster&#46;alias + &quot; (dead)&quot;<br/>    if (HasString (monster, &quot;lookwhendead&quot;)) {<br/>      monster&#46;look = monster&#46;lookwhendead<br/>    }<br/>    else {<br/>      monster&#46;look = monster&#46;look + &quot; &#91;LookDead&#93;&quot;<br/>    }<br/>    monster&#46;dead = True<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/><br/><br/>  &lt;!--<br/>  Returns as a string the name of this object's element (or null)&#46;<br/>  --&gt;<br/>  &lt;function name=&quot;GetElement&quot; parameters=&quot;obj&quot; type=&quot;string&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    result = Null<br/>    foreach (element, element_struct&#46;elements) {<br/>     type = element + &quot;_type&quot;<br/>      if (DoesInherit (obj, type)) {<br/>        result = element<br/>      }<br/>    }<br/>    return (result)<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/><br/><br/>  &lt;!--<br/>  Describes casting<br/>  --&gt;<br/>  &lt;function name=&quot;DescribeCast&quot; parameters=&quot;spell&quot;&gt;&lt;!&#91;CDATA&#91;<br/>        if (HasString (spell, &quot;description&quot;)) {<br/>          msg (DynamicTemplate(&quot;SpellCast&quot;, spell) + &quot; &quot; + spell&#46;description)<br/>        }<br/>        else {<br/>          msg (DynamicTemplate(&quot;SpellCast&quot;, spell))<br/>        }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/><br/><br/>  &lt;!-- =================================================== --&gt;<br/>  &lt;!-- Object types --&gt;<br/><br/>  &lt;type name=&quot;spell&quot;&gt;<br/>    &lt;inventoryverbs type=&quot;list&quot;&gt;Learn&lt;/inventoryverbs&gt;<br/>    &lt;displayverbs type=&quot;list&quot;&gt;Learn&lt;/displayverbs&gt;<br/>    &lt;drop type=&quot;boolean&quot;&gt;false&lt;/drop&gt;<br/>    &lt;take type=&quot;boolean&quot;&gt;false&lt;/take&gt;<br/>    &lt;usedefaultprefix type=&quot;boolean&quot;&gt;false&lt;/usedefaultprefix&gt;<br/>    &lt;learn type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>      if (not this&#46;parent = player) {<br/>        this&#46;parent = player<br/>        this&#46;inventoryverbs = Split (&quot;Cast&quot;, &quot; &quot;)<br/>        msg (DynamicTemplate(&quot;SpellLearnt&quot;, this))<br/>      }<br/>      else {<br/>        msg (&quot;&#91;SpellAlreadyKnown&#93;&quot;)<br/>      }<br/>    &#93;&#93;&gt;&lt;/learn&gt;<br/>  &lt;/type&gt;<br/><br/><br/><br/>  &lt;type name=&quot;attackspell&quot;&gt;<br/>    &lt;inherit name=&quot;spell&quot;/&gt;<br/>    &lt;cast type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>      // Check the player has the spell<br/>      // If so iterate through all objects in the room<br/>      // Apply attack to those with the monster type that are not dead<br/>      if (this&#46;parent = player) {<br/>        DescribeCast (this)<br/>        flag = False<br/>        foreach (obj, ScopeVisibleNotHeld ()) {<br/>          if (DoesInherit (obj, &quot;monster&quot;) and not GetBoolean (obj, &quot;dead&quot;)) {<br/>            SpellAttackMonster (obj, this)<br/>            flag = True<br/>          }<br/>        }<br/>        if (not flag) {<br/>          msg (&quot;&#46;&#46;&#46; &#91;NoMonstersPresent&#93;&quot;)<br/>        }<br/>        CancelSpell ()<br/>      }<br/>      else {<br/>        msg (&quot;&#91;SpellNotKnown&#93;&quot;)<br/>      }<br/>    &#93;&#93;&gt;&lt;/cast&gt;<br/>  &lt;/type&gt;<br/><br/><br/>  &lt;type name=&quot;nonattackspell&quot;&gt;<br/>    &lt;inherit name=&quot;spell&quot;/&gt;<br/>    &lt;cast type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>      if (this&#46;parent = player) {<br/>        DescribeCast (this)<br/>        do (this, &quot;spelleffect&quot;)<br/>        CancelSpell ()<br/>      }<br/>      else {<br/>        msg (&quot;&#91;SpellNotKnown&#93;&quot;)<br/>      }<br/>    &#93;&#93;&gt;&lt;/cast&gt;<br/>  &lt;/type&gt;<br/><br/><br/>  &lt;type name=&quot;lastingspell&quot;&gt;<br/>    &lt;inherit name=&quot;spell&quot;/&gt;<br/>    &lt;cast type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>      if (this&#46;parent = player) {<br/>        DescribeCast (this)<br/>        do (this, &quot;spelleffect&quot;)<br/>        CancelSpell ()<br/>        player&#46;currentspell = this<br/>        player&#46;status = this&#46;status<br/>      }<br/>      else {<br/>        msg (&quot;&#91;SpellNotKnown&#93;&quot;)<br/>      }<br/>    &#93;&#93;&gt;&lt;/cast&gt;<br/>  &lt;/type&gt;<br/><br/><br/>  &lt;type name=&quot;fire_type&quot;&gt;<br/>  &lt;/type&gt;<br/><br/>  &lt;type name=&quot;frost_type&quot;&gt;<br/>  &lt;/type&gt;<br/><br/>  &lt;type name=&quot;storm_type&quot;&gt;<br/>  &lt;/type&gt;<br/><br/>  &lt;type name=&quot;earthmight_type&quot;&gt;<br/>  &lt;/type&gt;<br/><br/>  &lt;type name=&quot;shadow_type&quot;&gt;<br/>  &lt;/type&gt;<br/><br/>  &lt;type name=&quot;rainbow_type&quot;&gt;<br/>  &lt;/type&gt;<br/><br/>  &lt;type name=&quot;divine_type&quot;&gt;<br/>  &lt;/type&gt;<br/><br/>  &lt;type name=&quot;necrotic_type&quot;&gt;<br/>  &lt;/type&gt;<br/><br/>  &lt;type name=&quot;monster&quot;&gt;<br/>  &lt;/type&gt;<br/><br/><br/>  &lt;!-- =================================================== --&gt;<br/>  &lt;!-- Data --&gt;<br/><br/>  &lt;!--<br/>  This is a data store for elements (I call it a &quot;struct&quot; after the keyword in the C programming language)<br/>  If you add more elements to the name, you need to add them to both lists as well as creating a new type&#46;<br/>  Note that your new type must end &quot;_type&quot;, but that must not be included on these lists&#46;<br/>  --&gt;<br/>  &lt;object name=&quot;element_struct&quot;&gt;<br/>    &lt;elements type=&quot;list&quot;&gt;fire; frost; storm; earthmight; shadow; rainbow; divine; necrotic&lt;/elements&gt;<br/>    &lt;opposedelements type=&quot;stringdictionary&quot;&gt;fire = frost;frost = fire;storm = earthmight;earthmight = storm;shadow = rainbow;rainbow = shadow;necrotic = divine;divine=necrotic&lt;/opposedelements&gt;<br/>  &lt;/object&gt;<br/><br/><br/>  &lt;!-- =================================================== --&gt;<br/>  &lt;!-- Tabs --&gt;<br/><br/>  &lt;tab&gt;<br/>    &lt;parent&gt;_ObjectEditor&lt;/parent&gt;<br/>    &lt;caption&gt;Magic&lt;/caption&gt;<br/>    &lt;mustnotinherit&gt;editor_room; defaultplayer&lt;/mustnotinherit&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;dropdowntypes&lt;/controltype&gt;<br/>      &lt;caption&gt;Spell type&lt;/caption&gt;<br/>      &lt;types&gt;*=None; nonattackspell=Non-attack spell; lastingspell=Lasting spell; attackspell=Attack spell; monster=Monster&lt;/types&gt;<br/>      &lt;width&gt;150&lt;/width&gt;<br/>    &lt;/control&gt;<br/><br/><br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;title&lt;/controltype&gt;<br/>      &lt;caption&gt;Non-Attack Spell&lt;/caption&gt;<br/>      &lt;mustinherit&gt;nonattackspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Description (optional)&lt;/caption&gt;<br/>      &lt;attribute&gt;description&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;nonattackspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;script&lt;/controltype&gt;<br/>      &lt;caption&gt;Spell effect&lt;/caption&gt;<br/>      &lt;attribute&gt;spelleffect&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;nonattackspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/><br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;title&lt;/controltype&gt;<br/>      &lt;caption&gt;Lasting Spell&lt;/caption&gt;<br/>      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Description (optional)&lt;/caption&gt;<br/>      &lt;attribute&gt;description&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Status when active&lt;/caption&gt;<br/>      &lt;attribute&gt;status&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;script&lt;/controltype&gt;<br/>      &lt;caption&gt;Spell effect&lt;/caption&gt;<br/>      &lt;attribute&gt;spelleffect&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;script&lt;/controltype&gt;<br/>      &lt;caption&gt;Cacel spell effect&lt;/caption&gt;<br/>      &lt;attribute&gt;terminate&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/><br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;title&lt;/controltype&gt;<br/>      &lt;caption&gt;Attack Spell&lt;/caption&gt;<br/>      &lt;mustinherit&gt;attackspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;number&lt;/controltype&gt;<br/>      &lt;caption&gt;Power of attack (1-10)&lt;/caption&gt;<br/>      &lt;attribute&gt;powerrating&lt;/attribute&gt;<br/>      &lt;width&gt;100&lt;/width&gt;<br/>      &lt;mustinherit&gt;attackspell&lt;/mustinherit&gt;<br/>      &lt;minimum&gt;0&lt;/minimum&gt;<br/>      &lt;maximum&gt;10&lt;/maximum&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Description (optional)&lt;/caption&gt;<br/>      &lt;attribute&gt;description&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;attackspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;dropdowntypes&lt;/controltype&gt;<br/>      &lt;caption&gt;Element&lt;/caption&gt;<br/>      &lt;types&gt;*=None; fire_type=Fire; frost_type=Frost; storm_type=Storm; earthmight_type=Earthmight; shadow_type=Shadow; rainbow_type=Rainbow; necrotic_type=Necrotic; divine_type=Divine&lt;/types&gt;<br/>      &lt;width&gt;150&lt;/width&gt;<br/>      &lt;mustinherit&gt;attackspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/><br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;title&lt;/controltype&gt;<br/>      &lt;caption&gt;Monster&lt;/caption&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;dropdowntypes&lt;/controltype&gt;<br/>      &lt;caption&gt;Element&lt;/caption&gt;<br/>      &lt;types&gt;*=None; fire_type=Fire; frost_type=Frost; storm_type=Storm; earthmight_type=Earthmight; shadow_type=Shadow; rainbow_type=Rainbow; necrotic_type=Necrotic; divine_type=Divine&lt;/types&gt;<br/>      &lt;width&gt;150&lt;/width&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;number&lt;/controltype&gt;<br/>      &lt;caption&gt;Hit points&lt;/caption&gt;<br/>      &lt;attribute&gt;hitpoints&lt;/attribute&gt;<br/>      &lt;width&gt;100&lt;/width&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>      &lt;minimum&gt;0&lt;/minimum&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Description on injury&lt;/caption&gt;<br/>      &lt;attribute&gt;hurt&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Description on death&lt;/caption&gt;<br/>      &lt;attribute&gt;death&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Description on injury by opposed element&lt;/caption&gt;<br/>      &lt;attribute&gt;hurtbyelement&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Description on death by opposed element&lt;/caption&gt;<br/>      &lt;attribute&gt;deathbyelement&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Description on ignore&lt;/caption&gt;<br/>      &lt;attribute&gt;ignoreselement&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Look (when dead)&lt;/caption&gt;<br/>      &lt;attribute&gt;lookwhendead&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>  &lt;/tab&gt;<br/>&lt;/library&gt;</code></pre>",
      "PostDate": "2014-02-17T00:28:12+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27950",
      "UserId": 0,
      "Username": "ken412",
      "UserAvatar": "7120_1392594844.gif",
      "UserGravatar": "4eeeba0f354c25f259da0d132166dc60",
      "EditableText": "Sorry, I've not had an opportunity to come back to this for a while.\n\nMany thanks for all the information.  I am more than happy to deal with the code rather than the GUI, now that i have started to get into it and use it for a little bit.  The code is much easier to describe here, for sure.  You have given me plenty to look into now, and I'll try to find time to do more on this project.\n\nYes, my meaning of &quot;template&quot; comes from my web-building background.  I now understand what a &quot;template&quot; in QUEST is now, and also how it makes it very customisable.\n\nOkay, back to the code, and thanks again.",
      "EditableFormat": "bbcode",
      "HTML": "Sorry, I've not had an opportunity to come back to this for a while.<br/><br/>Many thanks for all the information.  I am more than happy to deal with the code rather than the GUI, now that i have started to get into it and use it for a little bit.  The code is much easier to describe here, for sure.  You have given me plenty to look into now, and I'll try to find time to do more on this project.<br/><br/>Yes, my meaning of &quot;template&quot; comes from my web-building background.  I now understand what a &quot;template&quot; in QUEST is now, and also how it makes it very customisable.<br/><br/>Okay, back to the code, and thanks again.",
      "PostDate": "2014-02-25T17:52:47+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27951",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "While I don't know what templates are in web building, I'm going to take a guess anyways, and mention about&#058;\n\nObject Types (shortened to &quot;Types&quot;) are like &quot;groups~groupings&quot;, a &quot;Type basket&quot; holding a bunch of &quot;Attribute eggs&quot;\n\n&lt;type name=&quot;blah&quot;&gt;\n-&gt; // your attributes\n&lt;/type&gt;\n\n&lt;type name=&quot;character_object_type&quot;&gt;\n-&gt; &lt;attr name=&quot;strength_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;endurance_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;dexterity_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;agility_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;speed_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;piety_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;intelligence_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;spirituality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;mentality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;luck_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n&lt;/type&gt;\n\n&lt;object name=&quot;HK&quot;&gt;\n-&gt; &lt;inherited name=&quot;editor_object&quot; /&gt;\n-&gt; &lt;inherited name=&quot;character_object_type&quot; /&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;orc&quot;&gt;\n-&gt; &lt;inherited name=&quot;editor_object&quot; /&gt;\n-&gt; &lt;inherited name=&quot;character_object_type&quot; /&gt;\n&lt;/object&gt;\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Types\">http://quest5.net/wiki/Types</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Type_element\">http://quest5.net/wiki/Type_element</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Inherit_element\">http://quest5.net/wiki/Inherit_element</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_inherited_types\">http://quest5.net/wiki/Using_inherited_types</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_Types\">http://quest5.net/wiki/Using_Types</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_Types_and_Tabs_(Advanced\">http://quest5.net/wiki/Using_Types_and_Tabs_(Advanced</a><!-- m -->) ~ add the &quot;)&quot; in the url for it to work ~ maybe as a web builder you might know why this, the &quot;)&quot;, gets cut off when within a post, as can be seen with this post, lol\n\nbut, do note, that there's a bit of an issue with using Object Types, with trying to alter an inherited (from the Object Type) Attribute. I however don't know all the details~pecularities about this though myself.",
      "EditableFormat": "bbcode",
      "HTML": "While I don't know what templates are in web building, I'm going to take a guess anyways, and mention about&#058;<br/><br/>Object Types (shortened to &quot;Types&quot;) are like &quot;groups~groupings&quot;, a &quot;Type basket&quot; holding a bunch of &quot;Attribute eggs&quot;<br/><br/>&lt;type name=&quot;blah&quot;&gt;<br/>-&gt; // your attributes<br/>&lt;/type&gt;<br/><br/>&lt;type name=&quot;character_object_type&quot;&gt;<br/>-&gt; &lt;attr name=&quot;strength_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;endurance_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;dexterity_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;agility_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;speed_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;piety_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;intelligence_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;spirituality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;mentality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;luck_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>&lt;/type&gt;<br/><br/>&lt;object name=&quot;HK&quot;&gt;<br/>-&gt; &lt;inherited name=&quot;editor_object&quot; /&gt;<br/>-&gt; &lt;inherited name=&quot;character_object_type&quot; /&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;orc&quot;&gt;<br/>-&gt; &lt;inherited name=&quot;editor_object&quot; /&gt;<br/>-&gt; &lt;inherited name=&quot;character_object_type&quot; /&gt;<br/>&lt;/object&gt;<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Types\">http://quest5.net/wiki/Types</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Type_element\">http://quest5.net/wiki/Type_element</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Inherit_element\">http://quest5.net/wiki/Inherit_element</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_inherited_types\">http://quest5.net/wiki/Using_inherited_types</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_Types\">http://quest5.net/wiki/Using_Types</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_Types_and_Tabs_(Advanced\">http://quest5.net/wiki/Using_Types_and_Tabs_(Advanced</a><!-- m -->) ~ add the &quot;)&quot; in the url for it to work ~ maybe as a web builder you might know why this, the &quot;)&quot;, gets cut off when within a post, as can be seen with this post, lol<br/><br/>but, do note, that there's a bit of an issue with using Object Types, with trying to alter an inherited (from the Object Type) Attribute. I however don't know all the details~pecularities about this though myself.",
      "PostDate": "2014-02-25T20:14:39+00:00",
      "LastEditDate": null
    }
  ]
}