{
  "Topic": {
    "TopicId": "-9hemypr8kw2gsufald3qa",
    "ForumId": "10",
    "Title": "Synonyms to built-in commands",
    "LastUpdated": "2020-07-07T19:33:52.1153041Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "8f96ccc6-faff-4cfa-bd0d-7229f08ec848",
      "UserId": 431937,
      "Username": "datsforrest",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello! I am trying to implement a _grab_ verb/command (or really just synonyms to built-in verbs), in this case, a synonym for _take_. However, I can't figure out how to implement it with all of the same functionality as _take_, such as if the object is in the same room as the player and if it is in an open container then it should also be possible to grab it. I would like to pass the parameters of _grab_ to _take_ and let the existing take scripts do the work. something like \r\n\r\n````\r\n<command>\r\n    <pattern>grab #object#</pattern>\r\n    <script>\r\n      take object\r\n    </script>\r\n</command>\r\n````\r\nThank you so much!",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello! I am trying to implement a <em>grab</em> verb/command (or really just synonyms to built-in verbs), in this case, a synonym for <em>take</em>. However, I can't figure out how to implement it with all of the same functionality as <em>take</em>, such as if the object is in the same room as the player and if it is in an open container then it should also be possible to grab it. I would like to pass the parameters of <em>grab</em> to <em>take</em> and let the existing take scripts do the work. something like</p>\n<pre><code>&lt;command&gt;\n    &lt;pattern&gt;grab #object#&lt;/pattern&gt;\n    &lt;script&gt;\n      take object\n    &lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n<p>Thank you so much!</p>\n\n",
      "PostDate": "2020-07-07T19:33:52.1153041Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e2ea7ba3-c6b7-4688-a679-ffd168907e6f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There's a few ways to do this.\r\n\r\nIn general, you can run another command by doing something like:\r\n```\r\nHandleSingleCommand (\"take ball\")\r\n```\r\n\r\nHowever, if there are multiple balls in the room, that would present a disambiguation menu just as if the player typed it.\r\nTo specify a particular item, you could use the 'metadata' parameter to HandleCommand. For example:\r\n```\r\ncommand = \"take \" + GetDisplayAlias (object)\r\nmetadata = NewStringDictionary()\r\ndictionary add (metadata, GetDisplayAlias (object), object.name)\r\nHandleCommand (command, metadata)\r\n```\r\n\r\nHowever, this is quite inefficient. It makes the engine go through all the work of deciding which command you want to use. So in most cases, you can run the script associated with one of the core commands. For example:\r\n```\r\nparams = NewObjectDictionary()\r\ndictionary add (params, \"object\", object)\r\ndo (take, \"script\", params)\r\n```\r\n\r\nOr in this case, you could look at the code of the core \"take\" command, and see how it works. In this case, it would be:\r\n```\r\nDoTake (object)\r\n```\r\nbecause the 'take' command has a function to process all of its built-in stuff.\r\n\r\nOr, if you're only interested in creating a synonym, then you could just change the pattern of the existing command.\r\nIn your start script, you could just do:\r\n```\r\ntake.pattern = \"^(take|get|pick up|grab) (?<object>.*?)$\"\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>There's a few ways to do this.</p>\n<p>In general, you can run another command by doing something like:</p>\n<pre><code>HandleSingleCommand (\"take ball\")\n</code></pre>\n<p>However, if there are multiple balls in the room, that would present a disambiguation menu just as if the player typed it.<br>\nTo specify a particular item, you could use the 'metadata' parameter to HandleCommand. For example:</p>\n<pre><code>command = \"take \" + GetDisplayAlias (object)\nmetadata = NewStringDictionary()\ndictionary add (metadata, GetDisplayAlias (object), object.name)\nHandleCommand (command, metadata)\n</code></pre>\n<p>However, this is quite inefficient. It makes the engine go through all the work of deciding which command you want to use. So in most cases, you can run the script associated with one of the core commands. For example:</p>\n<pre><code>params = NewObjectDictionary()\ndictionary add (params, \"object\", object)\ndo (take, \"script\", params)\n</code></pre>\n<p>Or in this case, you could look at the code of the core \"take\" command, and see how it works. In this case, it would be:</p>\n<pre><code>DoTake (object)\n</code></pre>\n<p>because the 'take' command has a function to process all of its built-in stuff.</p>\n<p>Or, if you're only interested in creating a synonym, then you could just change the pattern of the existing command.<br>\nIn your start script, you could just do:</p>\n<pre><code>take.pattern = \"^(take|get|pick up|grab) (?&lt;object&gt;.*?)$\"\n</code></pre>\n\n",
      "PostDate": "2020-07-07T19:55:22.8254634Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
