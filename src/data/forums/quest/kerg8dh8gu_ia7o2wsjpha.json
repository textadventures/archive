{
  "Topic": {
    "TopicId": "kerg8dh8gu_ia7o2wsjpha",
    "ForumId": "10",
    "Title": "Problems with clothing",
    "LastUpdated": "2018-04-07T19:23:00.2939706Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "4f49217d-f843-4673-99b7-3893e6c7fc3b",
      "UserId": 317380,
      "Username": "Skarnisk",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8f75fa016b0e53ef53921491413be161?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't know if this topic has already been discussed; I have no time to browse all this forum and the search function has given me nothing useful. There are some problems I noticed with wearable items.\r\na) Layers and slots are not taken into account; I can wear anything over anything else and remove garments without removing higher layers first.\r\nb) In inventory, an item that is worn appears with a \"(worn)\" after its name. I'd want to modify it (i.e., it has to be translated in Italian) or remove it completely.\r\nc) Even if I disable the \"removeable\" option I can remove the item.\r\nd) Even if I remove all display and inventory verbs from a wearable item, when I click on it in the inventory it shows some verbs; in my interface I need inventory to be a simple list, because I put all commands elsewhere.\r\n\r\nThanks.",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't know if this topic has already been discussed; I have no time to browse all this forum and the search function has given me nothing useful. There are some problems I noticed with wearable items.<br>\na) Layers and slots are not taken into account; I can wear anything over anything else and remove garments without removing higher layers first.<br>\nb) In inventory, an item that is worn appears with a \"(worn)\" after its name. I'd want to modify it (i.e., it has to be translated in Italian) or remove it completely.<br>\nc) Even if I disable the \"removeable\" option I can remove the item.<br>\nd) Even if I remove all display and inventory verbs from a wearable item, when I click on it in the inventory it shows some verbs; in my interface I need inventory to be a simple list, because I put all commands elsewhere.</p>\n<p>Thanks.</p>\n\n",
      "PostDate": "2018-04-07T19:23:00.2939706Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4da035d6-7a7a-4058-be41-b45ce684cb76",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> a) Layers and slots are not taken into account; I can wear anything over anything else and remove garments without removing higher layers first.\r\nc) Even if I disable the \"removeable\" option I can remove the item.\r\n\r\nThis should not happen. Can you share an example game so we can see the problem?\r\n\r\n> b) In inventory, an item that is worn appears with a \"(worn)\" after its name. I'd want to modify it (i.e., it has to be translated in Italian) or remove it completely.\r\n\r\nIn the file Italiano.aslx (the language pack) there should be a line:\r\n  `<template name=\"wornmodifier\">`whatever the Italian word for \"worn\" is`</template>`\r\nThis seems to be missing for the Italian one.\r\n\r\n> d) Even if I remove all display and inventory verbs from a wearable item, when I click on it in the inventory it shows some verbs; in my interface I need inventory to be a simple list, because I put all commands elsewhere.\r\n\r\nYou mean like if you set:\r\n `JS.eval(\"verbButtonCount = 0\")`\r\n?",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>a) Layers and slots are not taken into account; I can wear anything over anything else and remove garments without removing higher layers first.<br>\nc) Even if I disable the \"removeable\" option I can remove the item.</p>\n</blockquote>\n<p>This should not happen. Can you share an example game so we can see the problem?</p>\n<blockquote>\n<p>b) In inventory, an item that is worn appears with a \"(worn)\" after its name. I'd want to modify it (i.e., it has to be translated in Italian) or remove it completely.</p>\n</blockquote>\n<p>In the file Italiano.aslx (the language pack) there should be a line:<br>\n<code>&lt;template name=\"wornmodifier\"&gt;</code>whatever the Italian word for \"worn\" is<code>&lt;/template&gt;</code><br>\nThis seems to be missing for the Italian one.</p>\n<blockquote>\n<p>d) Even if I remove all display and inventory verbs from a wearable item, when I click on it in the inventory it shows some verbs; in my interface I need inventory to be a simple list, because I put all commands elsewhere.</p>\n</blockquote>\n<p>You mean like if you set:<br>\n<code>JS.eval(\"verbButtonCount = 0\")</code><br>\n?</p>\n\n",
      "PostDate": "2018-04-07T22:03:19.3249364Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b31fd911-0112-417c-9ca6-c16acf454db7",
      "UserId": 317380,
      "Username": "Skarnisk",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8f75fa016b0e53ef53921491413be161?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Regarding a) and c): may it be because I make my player wear  and remove things by script, using functions ```WearGarment()``` and ```RemoveGarment()``` instead of verbs \"wear\" and \"remove\"? Shouldn't these functions take into account layers and slots as well? (I can't share my game; at the moment it's an utter mess with many other things I have to fix.)\r\nRegarding b): Yeah, The Pixie himself said Italian language pack is not complete. I could contribute to it, if I knew where to put my hands.\r\nRegarding d): <strike>I didn't think to that javascript command. I'll try it; right now, all I have done is removing display and inventory verbs from any object I create.</strike> This is not working. Verbs for garments keep appearing when I select them in the inventory, and don't disappear when I select something else.",
      "EditableFormat": "markdown",
      "HTML": "<p>Regarding a) and c): may it be because I make my player wear  and remove things by script, using functions <code>WearGarment()</code> and <code>RemoveGarment()</code> instead of verbs \"wear\" and \"remove\"? Shouldn't these functions take into account layers and slots as well? (I can't share my game; at the moment it's an utter mess with many other things I have to fix.)<br>\nRegarding b): Yeah, The Pixie himself said Italian language pack is not complete. I could contribute to it, if I knew where to put my hands.<br>\nRegarding d): <strike>I didn't think to that javascript command. I'll try it; right now, all I have done is removing display and inventory verbs from any object I create.</strike> This is not working. Verbs for garments keep appearing when I select them in the inventory, and don't disappear when I select something else.</p>\n\n",
      "PostDate": "2018-04-08T06:29:08.7295094Z",
      "LastEditDate": "2018-04-08T06:46:51.434645Z",
      "link": null
    },
    {
      "PostId": "d8e26cfe-2ade-4713-9f80-508ccfab1ecf",
      "UserId": 317380,
      "Username": "Skarnisk",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8f75fa016b0e53ef53921491413be161?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Solved d) by creating a function that is been called every time I update my interface (i.e., every turn and whenever I enter a room); it gets an object as parameter and does this:\r\n```\r\ndoomedVerbs = NewStringList()\r\nif (obj.inventoryverbs <> null) {\r\n  foreach (dVerb, obj.inventoryverbs) {\r\n    list add (doomedVerbs, dVerb)\r\n  }\r\n  foreach (dVerb, doomedVerbs) {\r\n    list remove (obj.inventoryverbs, dVerb)\r\n  }\r\n}\r\n```\r\n(damn this ```foreach``` glitch that compels me to use two loops.)",
      "EditableFormat": "markdown",
      "HTML": "<p>Solved d) by creating a function that is been called every time I update my interface (i.e., every turn and whenever I enter a room); it gets an object as parameter and does this:</p>\n<pre><code>doomedVerbs = NewStringList()\nif (obj.inventoryverbs &lt;&gt; null) {\n  foreach (dVerb, obj.inventoryverbs) {\n    list add (doomedVerbs, dVerb)\n  }\n  foreach (dVerb, doomedVerbs) {\n    list remove (obj.inventoryverbs, dVerb)\n  }\n}\n</code></pre>\n<p>(damn this <code>foreach</code> glitch that compels me to use two loops.)</p>\n\n",
      "PostDate": "2018-04-08T09:17:53.5432288Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "95e0885b-0275-4cba-8823-dcd75b07f60f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\r\n\r\nI'm not sure why you need 2 loops. In that case, it might be easier just to do `obj.inventoryverbs = NewStringList()`.\r\n\r\nOr if you're using the desktop version of Quest, it would be possible to override the function `GetDisplayVerbs` to return an empty list right away if the object is in your inventory.\r\n\r\nAlternatively, overriding the function `_SetVerbsForGarment` could prevent the clothing library from adding verbs.\r\n\r\n> Regarding a) and c): may it be because I make my player wear and remove things by script, using functions WearGarment() and RemoveGarment() instead of verbs \"wear\" and \"remove\"? Shouldn't these functions take into account layers and slots as well?\r\n\r\nNo. Those functions allow you to override normal checks; because an event where an NPC forces you to wear an item (for example) normally wouldn't want to back off and force you to adjust your clothing before continuing. If you want to test the garment (and give an error message if the slot is already full, for example) you want to use the functions `_DoWear()` and `_DoRemove()`.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not sure why you need 2 loops. In that case, it might be easier just to do <code>obj.inventoryverbs = NewStringList()</code>.</p>\n<p>Or if you're using the desktop version of Quest, it would be possible to override the function <code>GetDisplayVerbs</code> to return an empty list right away if the object is in your inventory.</p>\n<p>Alternatively, overriding the function <code>_SetVerbsForGarment</code> could prevent the clothing library from adding verbs.</p>\n<blockquote>\n<p>Regarding a) and c): may it be because I make my player wear and remove things by script, using functions WearGarment() and RemoveGarment() instead of verbs \"wear\" and \"remove\"? Shouldn't these functions take into account layers and slots as well?</p>\n</blockquote>\n<p>No. Those functions allow you to override normal checks; because an event where an NPC forces you to wear an item (for example) normally wouldn't want to back off and force you to adjust your clothing before continuing. If you want to test the garment (and give an error message if the slot is already full, for example) you want to use the functions <code>_DoWear()</code> and <code>_DoRemove()</code>.</p>\n\n",
      "PostDate": "2018-04-08T11:51:33.4493822Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "254a7168-22a9-431e-be5b-367de7fb05ab",
      "UserId": 317380,
      "Username": "Skarnisk",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8f75fa016b0e53ef53921491413be161?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "2 loops are needed because of the glitch reported <a href=\"http://docs.textadventures.co.uk/quest/using_lists.html\">here</a>, i.e. you can't modify a list inside a ```foreach``` loop referring to the same list. Overriding these functions would require more code, I think; this loop is simple enough. I was unsure about setting it to a ```NewStringList()``` because it's a built-in attribute, but it worked, and that's simplier.\r\nDo ```_DoWear()``` and ```_DoRemove()``` take the same parameter as ```WearGarment()``` and ```RemoveGarment()```?",
      "EditableFormat": "markdown",
      "HTML": "<p>2 loops are needed because of the glitch reported <a href=\"http://docs.textadventures.co.uk/quest/using_lists.html\">here</a>, i.e. you can't modify a list inside a <code>foreach</code> loop referring to the same list. Overriding these functions would require more code, I think; this loop is simple enough. I was unsure about setting it to a <code>NewStringList()</code> because it's a built-in attribute, but it worked, and that's simplier.<br>\nDo <code>_DoWear()</code> and <code>_DoRemove()</code> take the same parameter as <code>WearGarment()</code> and <code>RemoveGarment()</code>?</p>\n\n",
      "PostDate": "2018-04-08T12:48:13.5319346Z",
      "LastEditDate": "2018-04-08T12:49:03.9396143Z",
      "link": null
    },
    {
      "PostId": "e9434b25-ddc8-4209-b8ca-4c6ccbf5f4b7",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "No, you don't need 2 loops.\r\n`obj.inventoryverbs = NewStringList()` does the same thing without using a loop at all.",
      "EditableFormat": "markdown",
      "HTML": "<p>No, you don't need 2 loops.<br>\n<code>obj.inventoryverbs = NewStringList()</code> does the same thing without using a loop at all.</p>\n\n",
      "PostDate": "2018-04-08T16:40:44.0847102Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6f5fb9ea-d6ce-4ce4-9a57-b70bbf18ca43",
      "UserId": 317380,
      "Username": "Skarnisk",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8f75fa016b0e53ef53921491413be161?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Agreed. What I meant was: before trying to use ```obj.inventoryverbs = NewStringList()``` and finding it successful, the only choice I had was using the double loop. Have pity on me; too many times I can't phrase my concepts the way I'd want to.",
      "EditableFormat": "markdown",
      "HTML": "<p>Agreed. What I meant was: before trying to use <code>obj.inventoryverbs = NewStringList()</code> and finding it successful, the only choice I had was using the double loop. Have pity on me; too many times I can't phrase my concepts the way I'd want to.</p>\n\n",
      "PostDate": "2018-04-08T19:27:44.5682517Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "75db38e2-131f-4ff5-a1a4-4f82b9059592",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(I have used the double loop method before, in a situation where simply replacing the list with an empty one wouldn't work. Not really relevant, but you might be interested to know there's still a more efficient way to do it in one loop:\r\n```\r\nwhile (ListCount(somelist) > 0) {\r\n  list remove (items, ListItem(items, 0))\r\n}\r\n```\r\nThis can also be tweaked to only remove some items from a list:\r\n```\r\ni = 0\r\nwhile (ListCount(somelist) > i) {\r\n  item = ListItem(somelist, i)\r\n  if (ShouldIRemoveThis(item)) {\r\n    list remove (somelist, item)\r\n  }\r\n  else {\r\n    i = i + 1\r\n  }\r\n}\r\n```\r\n)",
      "EditableFormat": "markdown",
      "HTML": "<p>(I have used the double loop method before, in a situation where simply replacing the list with an empty one wouldn't work. Not really relevant, but you might be interested to know there's still a more efficient way to do it in one loop:</p>\n<pre><code>while (ListCount(somelist) &gt; 0) {\n  list remove (items, ListItem(items, 0))\n}\n</code></pre>\n<p>This can also be tweaked to only remove some items from a list:</p>\n<pre><code>i = 0\nwhile (ListCount(somelist) &gt; i) {\n  item = ListItem(somelist, i)\n  if (ShouldIRemoveThis(item)) {\n    list remove (somelist, item)\n  }\n  else {\n    i = i + 1\n  }\n}\n</code></pre>\n<p>)</p>\n\n",
      "PostDate": "2018-04-08T19:44:41.2136009Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
