{
  "Topic": {
    "TopicId": "nhazqjedsu6ejpx4f1ntsq",
    "ForumId": "10",
    "Title": "Function Calling Script Attribute from Target [SOLVED, TY!]",
    "LastUpdated": "2018-06-20T09:45:33.17321Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "d9f6daf4-3da1-4f66-8cae-00190523b051",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey all!\r\n\r\nSo I have a Function that gets called from an enemy that's part of an enemy_type group during a particular scenario. On that Function, I have parameters as \"target\" and \"object\" to reference the current enemy.\r\n\r\nI was wondering if it was possible for that Function to call back to that specific enemy_type for an attribute to fire/proc under a certain circumstance. Would it be something like...\r\n```\r\ntarget.specificscriptnamehere = Print <--- I know that isn't right but I'm not sure how to do it.\r\nScript gets printed during the function.\r\n```\r\nAm I making sense or talking crazy talk. Here's what I mean.\r\n```\r\nFemale_Zombie_Type\r\nAttribute\r\nSpecificScriptNameHere Script\r\n\r\nDuring a fight with a Female Zombie, certain scenario procs the Function. \r\n\r\nDuring the Function, I need that SpecificScriptNameHere script to Print from the zombie_type enemy/female zombie object. \r\n```\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey all!</p>\n<p>So I have a Function that gets called from an enemy that's part of an enemy_type group during a particular scenario. On that Function, I have parameters as \"target\" and \"object\" to reference the current enemy.</p>\n<p>I was wondering if it was possible for that Function to call back to that specific enemy_type for an attribute to fire/proc under a certain circumstance. Would it be something like...</p>\n<pre><code>target.specificscriptnamehere = Print &lt;--- I know that isn't right but I'm not sure how to do it.\nScript gets printed during the function.\n</code></pre>\n<p>Am I making sense or talking crazy talk. Here's what I mean.</p>\n<pre><code>Female_Zombie_Type\nAttribute\nSpecificScriptNameHere Script\n\nDuring a fight with a Female Zombie, certain scenario procs the Function. \n\nDuring the Function, I need that SpecificScriptNameHere script to Print from the zombie_type enemy/female zombie object. \n</code></pre>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-06-20T09:45:33.17321Z",
      "LastEditDate": "2018-06-21T02:46:38.9032588Z",
      "link": null
    },
    {
      "PostId": "47e8e3b8-2bb6-4a77-90ce-e75ce73c42e1",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm not sure I understand you right.\r\n\r\nYou want a function to run a script attribute on an object passed to it as a parameter?\r\nLike `do (target, \"scriptname\")`?\r\n\r\nOr something more complex that I'm missing?",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not sure I understand you right.</p>\n<p>You want a function to run a script attribute on an object passed to it as a parameter?<br>\nLike <code>do (target, \"scriptname\")</code>?</p>\n<p>Or something more complex that I'm missing?</p>\n\n",
      "PostDate": "2018-06-20T10:04:40.521393Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b5326180-7ae9-4f56-b702-3eff378639ae",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "to do/use/fire/proc/activate within scripting:\r\n\r\n-------------\r\n\r\nFunctions (with a return type or not):\r\n\r\nNAME_OF_FUNCTION\r\nor\r\nNAME_OF_FUNCTION (ARGUMENTS/PARAMETERS)\r\n\r\n----------------------------------------\r\n\r\nScript Attributes (no return type and no custom arguments/parameters):\r\n\r\ndo (NAME_OF_OBJECT, \"NAME_OF_SCRIPT_ATTRIBUTE\")\r\nor\r\ndo (NAME_OF_OBJECT, \"NAME_OF_SCRIPT_ATTRIBUTE\", DICTIONARY_VARIABLE_AS_THE_ARGUMENT/PARAMETER)\r\n\r\nor\r\n\r\n// (the 'invoke' is more limited than 'do', as 'invoke' uses dot notation scripting, so no dynamic usage like can be done with 'do')\r\n\r\ninvoke (NAME_OF_OBJECT.NAME_OF_SCRIPT_ATTRIBUTE)\r\nor\r\ninvoke (NAME_OF_OBJECT.NAME_OF_SCRIPT_ATTRIBUTE, DICTIONARY_VARIABLE_AS_THE_ARGUMENT/PARAMETER)\r\n\r\n--------------\r\n\r\nDelegates + Script_Attributes (able to have custom arguments/parameters and/or a return type):\r\n\r\n// (Delegates+Script_Attributes is basically a localized/attached-to-object/contained-within-an-object Function)\r\n\r\n// with no return type:\r\nrundelegate (NAME_OF_OBJECT, \"NAME_OF_SCRIPT_ATTRIBUTE\", ARGUMENTS/PARAMETERS)\r\n\r\n// with a return type:\r\nRunDelegateFunction (NAME_OF_OBJECT, \"NAME_OF_SCRIPT_ATTRIBUTE\", ARGUMENTS/PARAMETERS)",
      "EditableFormat": "markdown",
      "HTML": "<p>to do/use/fire/proc/activate within scripting:</p>\n<hr>\n<p>Functions (with a return type or not):</p>\n<p>NAME_OF_FUNCTION<br>\nor<br>\nNAME_OF_FUNCTION (ARGUMENTS/PARAMETERS)</p>\n<hr>\n<p>Script Attributes (no return type and no custom arguments/parameters):</p>\n<p>do (NAME_OF_OBJECT, \"NAME_OF_SCRIPT_ATTRIBUTE\")<br>\nor<br>\ndo (NAME_OF_OBJECT, \"NAME_OF_SCRIPT_ATTRIBUTE\", DICTIONARY_VARIABLE_AS_THE_ARGUMENT/PARAMETER)</p>\n<p>or</p>\n<p>// (the 'invoke' is more limited than 'do', as 'invoke' uses dot notation scripting, so no dynamic usage like can be done with 'do')</p>\n<p>invoke (NAME_OF_OBJECT.NAME_OF_SCRIPT_ATTRIBUTE)<br>\nor<br>\ninvoke (NAME_OF_OBJECT.NAME_OF_SCRIPT_ATTRIBUTE, DICTIONARY_VARIABLE_AS_THE_ARGUMENT/PARAMETER)</p>\n<hr>\n<p>Delegates + Script_Attributes (able to have custom arguments/parameters and/or a return type):</p>\n<p>// (Delegates+Script_Attributes is basically a localized/attached-to-object/contained-within-an-object Function)</p>\n<p>// with no return type:<br>\nrundelegate (NAME_OF_OBJECT, \"NAME_OF_SCRIPT_ATTRIBUTE\", ARGUMENTS/PARAMETERS)</p>\n<p>// with a return type:<br>\nRunDelegateFunction (NAME_OF_OBJECT, \"NAME_OF_SCRIPT_ATTRIBUTE\", ARGUMENTS/PARAMETERS)</p>\n\n",
      "PostDate": "2018-06-20T10:58:08.5982221Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3ece3256-62e3-4a1a-a09f-98fb4616b70d",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "if you just want to print something, you can just have it be a String Attribute (unless you need to do concatenation or whatever), instead of as a Script Attribute\r\n\r\nhere's examples of some of the various methods:\r\n\r\n```\r\n<game name=\"EXAMPLE\">\r\n\r\n  <attr name=\"start\" type=\"script\">\r\n    msg (female_zombie.appearance_string_attribute)\r\n    // or\r\n    invoke (female_zombie.appearance_script_attribute)\r\n    // or\r\n    do (female_zombie, \"appearance_script_attribute\")\r\n  </attr>\r\n\r\n</game>\r\n\r\n<object name=\"female_zombie\">\r\n  <inherit name=\"female_zombie_type\" />\r\n</object>\r\n\r\n<type name=\"female_zombie_type\">\r\n\r\n  <attr name=\"appearance_string_attribute\" type=\"string\">APPEARANCE</attr>\r\n\r\n  <attr name=\"appearance_script_attribute\" type=\"script\">\r\n    msg (\"APPEARANCE\")\r\n    // or\r\n    // invoke (female_zombie.appearance_script_attribute)\r\n    // or\r\n    // do (female_zombie, \"appearance_script_attribute\")\r\n  </attr>\r\n\r\n</type>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>if you just want to print something, you can just have it be a String Attribute (unless you need to do concatenation or whatever), instead of as a Script Attribute</p>\n<p>here's examples of some of the various methods:</p>\n<pre><code>&lt;game name=\"EXAMPLE\"&gt;\n\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    msg (female_zombie.appearance_string_attribute)\n    // or\n    invoke (female_zombie.appearance_script_attribute)\n    // or\n    do (female_zombie, \"appearance_script_attribute\")\n  &lt;/attr&gt;\n\n&lt;/game&gt;\n\n&lt;object name=\"female_zombie\"&gt;\n  &lt;inherit name=\"female_zombie_type\" /&gt;\n&lt;/object&gt;\n\n&lt;type name=\"female_zombie_type\"&gt;\n\n  &lt;attr name=\"appearance_string_attribute\" type=\"string\"&gt;APPEARANCE&lt;/attr&gt;\n\n  &lt;attr name=\"appearance_script_attribute\" type=\"script\"&gt;\n    msg (\"APPEARANCE\")\n    // or\n    // invoke (female_zombie.appearance_script_attribute)\n    // or\n    // do (female_zombie, \"appearance_script_attribute\")\n  &lt;/attr&gt;\n\n&lt;/type&gt;\n</code></pre>\n\n",
      "PostDate": "2018-06-20T11:07:58.4298806Z",
      "LastEditDate": "2018-06-20T11:08:31.767066Z",
      "link": null
    },
    {
      "PostId": "e853387b-fd8b-4b70-962a-913979b0d49e",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\ndo (target, \"scriptname\")\r\n```\r\n^ that sounds correct and like it would work but I'm not sure. \r\n\r\nIt's to have a Function call a script attribute from an enemy_type of an enemy object\r\n\r\nLOL\r\n```\r\nIt's not as complicated as I'm making it sound. I have an enemy object that is part of a enemy_type. The script is on the enemy_type and I want the Function to fire it under a specific circumstance. Is that better?\r\n```\r\nIf ... do (target, \"scriptname\") might work I can try it. \r\n\r\nHey HK :) I know how to do all with the firing in normal scripting but I don't know how to do it in reverse essentially. I explained it in the small blurb above xD\r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>do (target, \"scriptname\")\n</code></pre>\n<p>^ that sounds correct and like it would work but I'm not sure.</p>\n<p>It's to have a Function call a script attribute from an enemy_type of an enemy object</p>\n<p>LOL</p>\n<pre><code>It's not as complicated as I'm making it sound. I have an enemy object that is part of a enemy_type. The script is on the enemy_type and I want the Function to fire it under a specific circumstance. Is that better?\n</code></pre>\n<p>If ... do (target, \"scriptname\") might work I can try it.</p>\n<p>Hey HK :) I know how to do all with the firing in normal scripting but I don't know how to do it in reverse essentially. I explained it in the small blurb above xD</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-06-20T18:15:38.3559999Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "df272719-9a4e-4c05-a1ff-668057b4096c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\n<game name=\"EXAMPLE\">\r\n  <attr name=\"start\" type=\"script\">\r\n    example_function (female_zombie.appearance_script_attribute)\r\n    example_function (female_zombie.appearance_string_attribute)\r\n  </attr>\r\n</game>\r\n\r\n<object name=\"female_zombie\">\r\n  <inherit name=\"female_zombie_type\" />\r\n</object>\r\n\r\n<type name=\"female_zombie_type\">\r\n\r\n  <attr name=\"appearance_string_attribute\" type=\"string\">APPEARANCE</attr>\r\n\r\n  <attr name=\"appearance_script_attribute\" type=\"script\">\r\n    msg (\"APPEARANCE\")\r\n    msg (this.appearance_string_attribute)\r\n  </attr>\r\n\r\n</type>\r\n\r\n<function name=\"example_function\" parameters=\"attribute_parameter\">\r\n\r\n  attribute_type_string_variable = TypeOf (attribute_parameter)\r\n\r\n  if (attribute_type_string_variable = \"string\") {\r\n    msg (attribute_parameter)\r\n  } else if (attribute_type_string_variable = \"script\") {\r\n    invoke (attribute_parameter)\r\n  } else {\r\n    msg (\"ERROR\")\r\n  }\r\n\r\n</function>",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>&lt;game name=\"EXAMPLE\"&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    example_function (female_zombie.appearance_script_attribute)\n    example_function (female_zombie.appearance_string_attribute)\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;object name=\"female_zombie\"&gt;\n  &lt;inherit name=\"female_zombie_type\" /&gt;\n&lt;/object&gt;\n\n&lt;type name=\"female_zombie_type\"&gt;\n\n  &lt;attr name=\"appearance_string_attribute\" type=\"string\"&gt;APPEARANCE&lt;/attr&gt;\n\n  &lt;attr name=\"appearance_script_attribute\" type=\"script\"&gt;\n    msg (\"APPEARANCE\")\n    msg (this.appearance_string_attribute)\n  &lt;/attr&gt;\n\n&lt;/type&gt;\n\n&lt;function name=\"example_function\" parameters=\"attribute_parameter\"&gt;\n\n  attribute_type_string_variable = TypeOf (attribute_parameter)\n\n  if (attribute_type_string_variable = \"string\") {\n    msg (attribute_parameter)\n  } else if (attribute_type_string_variable = \"script\") {\n    invoke (attribute_parameter)\n  } else {\n    msg (\"ERROR\")\n  }\n\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2018-06-20T19:00:41.7007583Z",
      "LastEditDate": "2018-06-20T19:07:52.4926825Z",
      "link": null
    },
    {
      "PostId": "a98c931a-dcba-435c-b519-f999e7739581",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So you're saying I should add an attribute parameter to the Function? For example...\r\ntarget\r\nobject\r\nattribute\r\n\r\nand then make the script on the zombie_type as a script and have an if-script on the Function invoke it?\r\n```\r\nif (attribute_type_string_variable = \"script\") {\r\ninvoke (attribute_parameter)\r\n}\r\n```\r\n?\r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>So you're saying I should add an attribute parameter to the Function? For example...<br>\ntarget<br>\nobject<br>\nattribute</p>\n<p>and then make the script on the zombie_type as a script and have an if-script on the Function invoke it?</p>\n<pre><code>if (attribute_type_string_variable = \"script\") {\ninvoke (attribute_parameter)\n}\n</code></pre>\n<p>?</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-06-20T20:53:08.1541056Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "dce60f28-f25a-429c-9cd8-42f6bc5fce1d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> So you're saying I should add an attribute parameter to the Function?\r\n\r\nI don't see any reason that should be a parameter to the function.\r\n\r\nHK's last function is designed to look at a variable, print it if it's a string, and run it if it's a script.\r\nThis might sometimes be useful; for example if different objects have a different type of attribute.\r\n\r\nIf the attribute can have multiple types, it's better to use TypeOf() than to store the type separately. If it's always the same type, you can just use 'do'.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>So you're saying I should add an attribute parameter to the Function?</p>\n</blockquote>\n<p>I don't see any reason that should be a parameter to the function.</p>\n<p>HK's last function is designed to look at a variable, print it if it's a string, and run it if it's a script.<br>\nThis might sometimes be useful; for example if different objects have a different type of attribute.</p>\n<p>If the attribute can have multiple types, it's better to use TypeOf() than to store the type separately. If it's always the same type, you can just use 'do'.</p>\n\n",
      "PostDate": "2018-06-20T21:03:23.9460643Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a52bb0bf-42b3-4eb5-98c7-b747382478e1",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey Mr.Angel :D\r\n\r\nI have multiple types, for example...\r\nfemale_zombie_type\r\nmale_zombie_type\r\nmale_minotaur_type etc \r\n\r\nSo I should do...\r\n```\r\nTypeOf (target, \"scriptname\") ?\r\n```\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey Mr.Angel :D</p>\n<p>I have multiple types, for example...<br>\nfemale_zombie_type<br>\nmale_zombie_type<br>\nmale_minotaur_type etc</p>\n<p>So I should do...</p>\n<pre><code>TypeOf (target, \"scriptname\") ?\n</code></pre>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-06-20T21:18:09.1193951Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4b5c4b43-f5f6-4695-ba1d-83ed0436007f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@HK\r\n> // (the 'invoke' is more limited than 'do', as 'invoke' uses dot notation scripting, so no dynamic usage like can be done with 'do')\r\n\r\n<details>\r\n<summary>Not relevant to the OP, I just feel obliged to correct incorrect information</summary>\r\n\r\nNot quite. 'do' is more limited because it can only be used on scripts that are attributes.\r\n\r\nYou could in fact replicate the behaviour of 'do' using 'invoke'; but you can't do the opposite\r\n```\r\n<function name=\"custom_do\" parameters=\"object, attribute_name, parameters\">\r\n  if (HasScript (object, attribute_name)) {\r\n    script = GetAttribute(object, attribute_name)\r\n    if (parameters = null) {\r\n      parameters = NewObjectDictionary()\r\n    }\r\n    if (DictionaryContains (parameters, \"this\")) {\r\n      dictionary remove (parameters, \"this\")\r\n    }\r\n    dictionary add (parameters, \"this\", object)\r\n    invoke (script, parameters)\r\n  }\r\n  else {\r\n    error (\"No such script attribute: \"+object.name+\".\"+attribute_name)\r\n  }\r\n</function>\r\n```\r\n(Note: I'd never recommend actually doing this; as it's just replicating the functionality of the built-in function `do`. But it's a demonstration that 'do' is a special case of 'invoke', and therefore more limited)\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>@HK</p>\n<blockquote>\n<p>// (the 'invoke' is more limited than 'do', as 'invoke' uses dot notation scripting, so no dynamic usage like can be done with 'do')</p>\n</blockquote>\n<details>\n<summary>Not relevant to the OP, I just feel obliged to correct incorrect information</summary>\n<p>Not quite. 'do' is more limited because it can only be used on scripts that are attributes.</p>\n<p>You could in fact replicate the behaviour of 'do' using 'invoke'; but you can't do the opposite</p>\n<pre><code>&lt;function name=\"custom_do\" parameters=\"object, attribute_name, parameters\"&gt;\n  if (HasScript (object, attribute_name)) {\n    script = GetAttribute(object, attribute_name)\n    if (parameters = null) {\n      parameters = NewObjectDictionary()\n    }\n    if (DictionaryContains (parameters, \"this\")) {\n      dictionary remove (parameters, \"this\")\n    }\n    dictionary add (parameters, \"this\", object)\n    invoke (script, parameters)\n  }\n  else {\n    error (\"No such script attribute: \"+object.name+\".\"+attribute_name)\n  }\n&lt;/function&gt;\n</code></pre>\n<p>(Note: I'd never recommend actually doing this; as it's just replicating the functionality of the built-in function <code>do</code>. But it's a demonstration that 'do' is a special case of 'invoke', and therefore more limited)</p>\n</details>\n\n",
      "PostDate": "2018-06-20T21:18:25.6400379Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8391b53f-d0e5-4fd1-8e84-5ff3581897c0",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> So I should do...\r\n\r\nAre the attributes the same type?\r\n\r\nYou only need use TypeOf() if, for example, `female_zombie_type.attributename` is a script you want to run, but `male_minotaur_type.attributename` is a string you want to print.\r\n\r\nThis is how Quest does things like the `look` attribute, which can either be a string description or a script.\r\n\r\nIf the attribute is always a script, you can just use `do`.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>So I should do...</p>\n</blockquote>\n<p>Are the attributes the same type?</p>\n<p>You only need use TypeOf() if, for example, <code>female_zombie_type.attributename</code> is a script you want to run, but <code>male_minotaur_type.attributename</code> is a string you want to print.</p>\n<p>This is how Quest does things like the <code>look</code> attribute, which can either be a string description or a script.</p>\n<p>If the attribute is always a script, you can just use <code>do</code>.</p>\n\n",
      "PostDate": "2018-06-20T21:24:19.4897319Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bf1f209a-f8e5-457d-a414-c375d9cce780",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah they will all have the same attribute name. For example...\r\n```\r\nfemale_zombie_type.specialattribute\r\nmale_zombie_type.specialattribute\r\nmale_minotaur_type.specialattribute\r\n```\r\nall scripts which will run on the specific enemies when fired from the Function. \r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah they will all have the same attribute name. For example...</p>\n<pre><code>female_zombie_type.specialattribute\nmale_zombie_type.specialattribute\nmale_minotaur_type.specialattribute\n</code></pre>\n<p>all scripts which will run on the specific enemies when fired from the Function.</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-06-20T21:30:07.0420169Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "aca06ff7-437c-4f7e-aa5b-95f95185025d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think then you can just do:\r\n```\r\n  do (target, \"specialattribute\")\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I think then you can just do:</p>\n<pre><code>  do (target, \"specialattribute\")\n</code></pre>\n\n",
      "PostDate": "2018-06-20T22:35:27.0057483Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "265cb517-41dd-4881-870b-02ddb852b94e",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n\r\n------------------------\r\n\r\n@ Anonynn:\r\n\r\nthe 'Object Types / Types / Inherited Attributes' merely add those Attributes to the Object that you give the 'Object Types / Types / Inherited Attributes' to:\r\n\r\n```\r\n<object name=\"player\">\r\n  <attr name=\"example_script\" type=\"script\">\r\n    msg (\"EXAMPLE\")\r\n  </attr>\r\n</object>\r\n\r\n// is the exact same as:\r\n\r\n<object name=\"player\">\r\n  <inherit name=\"example_type\" />\r\n</object>\r\n\r\n<type name=\"example_type\">\r\n  <attr name=\"example_script\" type=\"script\">\r\n    msg (\"EXAMPLE\")\r\n  </attr>\r\n</type>\r\n```\r\n\r\n------------------\r\n\r\nso, what this means is that, for this example, CORRECT:\r\n\r\ndo (player, \"example_script\")\r\ninvoke (player.example_script)\r\n\r\n```\r\n<game name=\"EXAMPLE\">\r\n  <attr name=\"start\" type=\"script\">\r\n    do (zombie_1, \"example_script\")\r\n    invoke (zombie_1.example_script)\r\n    do (zombie_2, \"example_script\")\r\n    invoke (zombie_2.example_script)\r\n  </attr>\r\n</game>\r\n\r\n<object name=\"zombie_1\">\r\n  <inherit name=\"female_zombie_type\" />\r\n</object>\r\n\r\n<object name=\"zombie_2\">\r\n  <inherit name=\"male_zombie_type\" />\r\n</object>\r\n\r\n<type name=\"male_zombie_type\">\r\n  <attr name=\"example_script\" type=\"script\">\r\n    msg (\"MALE\")\r\n  </attr>\r\n</type>\r\n\r\n<type name=\"female_zombie_type\">\r\n  <attr name=\"example_script\" type=\"script\">\r\n    msg (\"FEMALE\")\r\n  </attr>\r\n</type>\r\n```\r\n\r\n----------------\r\n\r\nwhereas... WRONG:\r\n\r\ndo (example_type, \"example_script\")\r\ndo (player.example_type, \"example_script\")\r\ninvoke (example_type.example_script)\r\ninvoke (player.example_type.example_script)\r\n\r\ninvoke (female_zombie_type.specialattribute)\r\ninvoke (male_zombie_type.specialattribute)\r\ninvoke (male_minotaur_type.specialattribute)\r\n\r\ndo (female_zombie_type, \"specialattribute\")\r\ndo (male_zombie_type, \"specialattribute\")\r\ndo (male_minotaur_type, \"specialattribute\")\r\n\r\ndo (female_zombie_type, specialattribute)\r\ndo (male_zombie_type, specialattribute)\r\ndo (male_minotaur_type, specialattribute)",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>@ Anonynn:</p>\n<p>the 'Object Types / Types / Inherited Attributes' merely add those Attributes to the Object that you give the 'Object Types / Types / Inherited Attributes' to:</p>\n<pre><code>&lt;object name=\"player\"&gt;\n  &lt;attr name=\"example_script\" type=\"script\"&gt;\n    msg (\"EXAMPLE\")\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n// is the exact same as:\n\n&lt;object name=\"player\"&gt;\n  &lt;inherit name=\"example_type\" /&gt;\n&lt;/object&gt;\n\n&lt;type name=\"example_type\"&gt;\n  &lt;attr name=\"example_script\" type=\"script\"&gt;\n    msg (\"EXAMPLE\")\n  &lt;/attr&gt;\n&lt;/type&gt;\n</code></pre>\n<hr>\n<p>so, what this means is that, for this example, CORRECT:</p>\n<p>do (player, \"example_script\")<br>\ninvoke (player.example_script)</p>\n<pre><code>&lt;game name=\"EXAMPLE\"&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    do (zombie_1, \"example_script\")\n    invoke (zombie_1.example_script)\n    do (zombie_2, \"example_script\")\n    invoke (zombie_2.example_script)\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;object name=\"zombie_1\"&gt;\n  &lt;inherit name=\"female_zombie_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"zombie_2\"&gt;\n  &lt;inherit name=\"male_zombie_type\" /&gt;\n&lt;/object&gt;\n\n&lt;type name=\"male_zombie_type\"&gt;\n  &lt;attr name=\"example_script\" type=\"script\"&gt;\n    msg (\"MALE\")\n  &lt;/attr&gt;\n&lt;/type&gt;\n\n&lt;type name=\"female_zombie_type\"&gt;\n  &lt;attr name=\"example_script\" type=\"script\"&gt;\n    msg (\"FEMALE\")\n  &lt;/attr&gt;\n&lt;/type&gt;\n</code></pre>\n<hr>\n<p>whereas... WRONG:</p>\n<p>do (example_type, \"example_script\")<br>\ndo (player.example_type, \"example_script\")<br>\ninvoke (example_type.example_script)<br>\ninvoke (player.example_type.example_script)</p>\n<p>invoke (female_zombie_type.specialattribute)<br>\ninvoke (male_zombie_type.specialattribute)<br>\ninvoke (male_minotaur_type.specialattribute)</p>\n<p>do (female_zombie_type, \"specialattribute\")<br>\ndo (male_zombie_type, \"specialattribute\")<br>\ndo (male_minotaur_type, \"specialattribute\")</p>\n<p>do (female_zombie_type, specialattribute)<br>\ndo (male_zombie_type, specialattribute)<br>\ndo (male_minotaur_type, specialattribute)</p>\n\n",
      "PostDate": "2018-06-20T22:53:24.9769145Z",
      "LastEditDate": "2018-06-20T23:01:13.4376297Z",
      "link": null
    },
    {
      "PostId": "72cc96db-2c33-43cd-8160-a0ffcb61302a",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks HK and Mr.Angel! I appreciate all of your time in helping me figure that out! If you two need anything lemme know!\r\n\r\nThis works...\r\n\r\ndo (target, \"whatever_attribute\")\r\n\r\nAs long as \"target\" is part of the Function's parameters. \r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks HK and Mr.Angel! I appreciate all of your time in helping me figure that out! If you two need anything lemme know!</p>\n<p>This works...</p>\n<p>do (target, \"whatever_attribute\")</p>\n<p>As long as \"target\" is part of the Function's parameters.</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-06-21T02:45:20.6860759Z",
      "LastEditDate": "2018-06-21T02:46:16.2396573Z",
      "link": null
    }
  ]
}
