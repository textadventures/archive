{
  "Topic": {
    "TopicId": "9hwslgjkbeuxo7jqhh5b2a",
    "ForumId": "10",
    "Title": "Alternative Scope Not Work with Object List?  [Solved]",
    "LastUpdated": "2018-12-16T05:36:58.1630263Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "bfc24e8c-a585-46fe-8926-258c73d2bc42",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm back already :P\r\n\r\nTitle actually says it all -- Made a barebones game with room1 and room2.  Player starts in room1 and there is a generic object ```gizmo``` in room2.  Made a ```kick``` command.  Under the ```Start``` tab, I created a couple of object lists that each contain ```gizmo``` (```game.MyObjectList;game.MyObjectList2```).  The ```kick``` command has in its ```Scope``` both object lists.\r\n\r\nWhen the player tries to ```kick``` the ```gizmo``` from room1, it doesn't work as ```gizmo``` can't be seen.  The player can, of course, kick the gizmo in room2.  What gives?\r\n\r\nBarebones game code:\r\n```\r\n<!--Saved by Quest 5.8.6809.15141-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"TEST Alternative Scope\">\r\n    <gameid>ae561d54-bde5-4866-8ca0-2e44978c97c5</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <start type=\"script\">\r\n      game.MyObjectList = NewObjectList()\r\n      list add (game.MyObjectList, gizmo)\r\n      game.MyObjectList2 = GetAllChildObjects(room2)\r\n    </start>\r\n  </game>\r\n  <object name=\"room1\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"south\" to=\"room2\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"room2\">\r\n    <inherit name=\"editor_object\" />\r\n    <object name=\"gizmo\">\r\n      <inherit name=\"editor_object\" />\r\n      <take />\r\n      <displayverbs type=\"stringlist\">\r\n        <value>Look at</value>\r\n        <value>Take</value>\r\n        <value>Kick</value>\r\n      </displayverbs>\r\n    </object>\r\n    <exit alias=\"north\" to=\"room1\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <command name=\"kick\">\r\n    <pattern>kick #object#</pattern>\r\n    <scope>game.MyObjectList;game.MyObjectList2</scope>\r\n    <script>\r\n      msg (\"You kick the crap out of it!\")\r\n    </script>\r\n  </command>\r\n</asl>\r\n```\r\nObject lists (in the form of attributes) should be acceptable in alternative scopes.  Here's the official Quest documentation (near the bottom):\r\n\r\nhttp://docs.textadventures.co.uk/quest/advanced_scope.html",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm back already :P</p>\n<p>Title actually says it all -- Made a barebones game with room1 and room2.  Player starts in room1 and there is a generic object <code>gizmo</code> in room2.  Made a <code>kick</code> command.  Under the <code>Start</code> tab, I created a couple of object lists that each contain <code>gizmo</code> (<code>game.MyObjectList;game.MyObjectList2</code>).  The <code>kick</code> command has in its <code>Scope</code> both object lists.</p>\n<p>When the player tries to <code>kick</code> the <code>gizmo</code> from room1, it doesn't work as <code>gizmo</code> can't be seen.  The player can, of course, kick the gizmo in room2.  What gives?</p>\n<p>Barebones game code:</p>\n<pre><code>&lt;!--Saved by Quest 5.8.6809.15141--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"TEST Alternative Scope\"&gt;\n    &lt;gameid&gt;ae561d54-bde5-4866-8ca0-2e44978c97c5&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;start type=\"script\"&gt;\n      game.MyObjectList = NewObjectList()\n      list add (game.MyObjectList, gizmo)\n      game.MyObjectList2 = GetAllChildObjects(room2)\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room1\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"south\" to=\"room2\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room2\"&gt;\n    &lt;inherit name=\"editor_object\" /&gt;\n    &lt;object name=\"gizmo\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;take /&gt;\n      &lt;displayverbs type=\"stringlist\"&gt;\n        &lt;value&gt;Look at&lt;/value&gt;\n        &lt;value&gt;Take&lt;/value&gt;\n        &lt;value&gt;Kick&lt;/value&gt;\n      &lt;/displayverbs&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"north\" to=\"room1\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;command name=\"kick\"&gt;\n    &lt;pattern&gt;kick #object#&lt;/pattern&gt;\n    &lt;scope&gt;game.MyObjectList;game.MyObjectList2&lt;/scope&gt;\n    &lt;script&gt;\n      msg (\"You kick the crap out of it!\")\n    &lt;/script&gt;\n  &lt;/command&gt;\n&lt;/asl&gt;\n</code></pre>\n<p>Object lists (in the form of attributes) should be acceptable in alternative scopes.  Here's the official Quest documentation (near the bottom):</p>\n<p>http://docs.textadventures.co.uk/quest/advanced_scope.html</p>\n\n",
      "PostDate": "2018-12-16T05:36:58.1630263Z",
      "LastEditDate": "2018-12-16T21:31:00.1204576Z",
      "link": null
    },
    {
      "PostId": "9afa707f-835f-4f11-bbb4-66ca1945fa29",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You can't use `game.MyObjectList` in scope. Looking at the code, it doesn't seem to parse the dot. (The version I was playing around with did, but I think Pixie wanted to make it simpler).\r\n\r\nYou can have `<scope>MyObjectList;MyObjectList2</scope>`, as long as the lists are either attributes of the player, or attributes of the current room. (Note that in this case they must be objectlists. You can also use object attributes of the room, but not of the player)",
      "EditableFormat": "markdown",
      "HTML": "<p>You can't use <code>game.MyObjectList</code> in scope. Looking at the code, it doesn't seem to parse the dot. (The version I was playing around with did, but I think Pixie wanted to make it simpler).</p>\n<p>You can have <code>&lt;scope&gt;MyObjectList;MyObjectList2&lt;/scope&gt;</code>, as long as the lists are either attributes of the player, or attributes of the current room. (Note that in this case they must be objectlists. You can also use object attributes of the room, but not of the player)</p>\n\n",
      "PostDate": "2018-12-16T10:09:56.4553645Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2c91fcf7-3dea-491c-ae54-f2dca10abcca",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok, thanks.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok, thanks.</p>\n\n",
      "PostDate": "2018-12-16T11:23:40.6279902Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "63b71ddb-905e-4ba6-aa42-d9c3063e3e4b",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "MrAngel's explanation should probably be incorporated into the documentation...",
      "EditableFormat": "markdown",
      "HTML": "<p>MrAngel's explanation should probably be incorporated into the documentation...</p>\n\n",
      "PostDate": "2018-12-17T02:10:17.7414265Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
