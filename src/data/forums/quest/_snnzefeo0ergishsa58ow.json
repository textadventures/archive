{
  "Topic": {
    "TopicId": "_snnzefeo0ergishsa58ow",
    "ForumId": "10",
    "Title": "help with machine that lets you manufacture custom items",
    "LastUpdated": "2021-05-14T01:49:20.1519407Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "e4860786-2f6e-4c4a-958b-8c8fca3532bb",
      "UserId": 491098,
      "Username": "TiberianEuanOfficial",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6bf2c36e22edb5a71a693c6746ac93e6?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "trying to make a machine that lets you make custom swords, not looking for balance in gameplay, as I'm making another text adventure that is testing quest capabilities.\r\nExample:\r\nYou: \"Machine, generate new sword.\"\r\nMachine: *whirrs to life*\r\n(script starts)\r\ngame creates new object\r\ngame asks what you want the sword to be called, sets alias to answer.\r\ngame asks you to describe the sword as if you were looking at it.\r\ngame asks you to set sword stats like durability, damage and that stuff, makes you use the money feature to pay for the sword's increased ability, so if you're poor you have a weak sword as you don't pay that much\r\ngame moves sword from inside the machine to container\r\n(script ends)\r\n_The sword you requested leaves an output, and falls into a bucket._\r\n>pick up the sword\r\nYou pick up the sword.",
      "EditableFormat": "markdown",
      "HTML": "<p>trying to make a machine that lets you make custom swords, not looking for balance in gameplay, as I'm making another text adventure that is testing quest capabilities.<br>\nExample:<br>\nYou: \"Machine, generate new sword.\"<br>\nMachine: <em>whirrs to life</em><br>\n(script starts)<br>\ngame creates new object<br>\ngame asks what you want the sword to be called, sets alias to answer.<br>\ngame asks you to describe the sword as if you were looking at it.<br>\ngame asks you to set sword stats like durability, damage and that stuff, makes you use the money feature to pay for the sword's increased ability, so if you're poor you have a weak sword as you don't pay that much<br>\ngame moves sword from inside the machine to container<br>\n(script ends)<br>\n<em>The sword you requested leaves an output, and falls into a bucket.</em></p>\n<blockquote>\n<p>pick up the sword<br>\nYou pick up the sword.</p>\n</blockquote>\n\n",
      "PostDate": "2021-05-14T01:49:20.1519407Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "86f487c3-9f2e-4a43-8677-cbf08e90b423",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This kind of pretty much handles everything but figuring the price and making the player pay for it. (I set a ```take``` script on the sword which says \"You haven't paid for it.\" and the player can't pick it up until that is changed.)\r\n\r\nI don't know how your money system works.\r\n\r\nIt shouldn't be too hard to add that part once you see how this works.\r\n\r\nPaste it into a new game to play around with it and make it behave like you want it to behave.\r\n\r\n```\r\nhandled = false\r\nmsg (\"Name the sword.\")\r\nget input {\r\n  result = Trim(result)\r\n  create (result)\r\n  obj = GetObject(result)\r\n  game.new_sword = obj\r\n  msg (\"Describe what it looks like.\")\r\n  get input {\r\n    obj.description = result\r\n    msg (\"Enter durability (1 -10) (or whatever)\")\r\n    get input {\r\n      if (not IsNumeric(result)) {\r\n        msg (\"You messed that all up. No sword for you!\")\r\n        destroy (obj.name)\r\n        return (false)\r\n      }\r\n      result = ToInt(result)\r\n      if (result > 0 and result < 11) {\r\n        obj.durability = result\r\n        msg (\"What's the damage? [1 - 10]\")\r\n        get input {\r\n          if (IsNumeric(result)) {\r\n            result = ToInt(result)\r\n            if (result > 0 and result < 11) {\r\n              obj.damage = result\r\n              msg (\"You hear a resounding WHIRRR.\")\r\n              MoveObjectHere (obj)\r\n              msg (CapFirst(obj.name) + \" is here.\")\r\n              obj.take => {\r\n                msg (\"You haven't paid for it yet!\")\r\n              }\r\n              handled = true\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\non ready {\r\n  if (not handled) {\r\n    msg (\"You messed that all up. No sword for you!\")\r\n    destroy (obj.name)\r\n  }\r\n}\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>This kind of pretty much handles everything but figuring the price and making the player pay for it. (I set a <code>take</code> script on the sword which says \"You haven't paid for it.\" and the player can't pick it up until that is changed.)</p>\n<p>I don't know how your money system works.</p>\n<p>It shouldn't be too hard to add that part once you see how this works.</p>\n<p>Paste it into a new game to play around with it and make it behave like you want it to behave.</p>\n<pre><code>handled = false\nmsg (\"Name the sword.\")\nget input {\n  result = Trim(result)\n  create (result)\n  obj = GetObject(result)\n  game.new_sword = obj\n  msg (\"Describe what it looks like.\")\n  get input {\n    obj.description = result\n    msg (\"Enter durability (1 -10) (or whatever)\")\n    get input {\n      if (not IsNumeric(result)) {\n        msg (\"You messed that all up. No sword for you!\")\n        destroy (obj.name)\n        return (false)\n      }\n      result = ToInt(result)\n      if (result &gt; 0 and result &lt; 11) {\n        obj.durability = result\n        msg (\"What's the damage? [1 - 10]\")\n        get input {\n          if (IsNumeric(result)) {\n            result = ToInt(result)\n            if (result &gt; 0 and result &lt; 11) {\n              obj.damage = result\n              msg (\"You hear a resounding WHIRRR.\")\n              MoveObjectHere (obj)\n              msg (CapFirst(obj.name) + \" is here.\")\n              obj.take =&gt; {\n                msg (\"You haven't paid for it yet!\")\n              }\n              handled = true\n            }\n          }\n        }\n      }\n    }\n  }\n}\non ready {\n  if (not handled) {\n    msg (\"You messed that all up. No sword for you!\")\n    destroy (obj.name)\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2021-05-14T03:06:15.7797103Z",
      "LastEditDate": "2021-05-14T03:07:40.6058546Z",
      "link": null
    },
    {
      "PostId": "271d7a63-27cb-4634-8d9e-c70ac02d6702",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> <pre><code>get input {\r\n>   result = Trim(result)\r\n>   create (result)\r\n>   obj = GetObject(result)</code></pre>\r\n\r\nThis is problematic. If the player enters the name of an object that already exists (like \"player\") the `create` will fail and you end up giving the player the ability to change the description and stats of any object.\r\n\r\nBetter to use:\r\n```\r\nswordname = GetUniqueElementName (\"sword\")\r\nmsg (\"Name the sword.\")\r\nget input {\r\n  alias = Trim(result)\r\n  if (LengthOf (alias) = 0)) {\r\n    alias = \"The sword with no name\"\r\n  }\r\n  msg (\"Describe what it looks like.\")\r\n  get input {\r\n    description = Trim (result)\r\n    msg (\"Enter durability (1 -10) (or whatever)\")\r\n    get input {\r\n      if (not IsInt(result)) {\r\n        msg (\"That's not a number!\")\r\n      }\r\n      else {\r\n        durability = ToInt(result)\r\n        if (durability < 1 or durability > 10) {\r\n          msg (\"That's not a legal durability.\")\r\n        }\r\n        else {\r\n          msg (\"Enter damage (1+)\")\r\n          get input {\r\n            if (not IsInt(result)) {\r\n              msg (\"That's not a number!\")\r\n            }\r\n            else {\r\n              damage = ToInt(result)\r\n              if (damage < 1) {\r\n                msg (\"That's not a legal damage.\")\r\n              }\r\n              else {\r\n                create (swordname)\r\n                newsword = GetObject (swordname)\r\n                newsword.look = description\r\n                newsword.durability = durability\r\n                newsword.damage = damage\r\n                newsword.price = durability * (2 + damage) + GetRandomInt (-2, 6)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\non ready {\r\n  newsword = GetObject (swordname)\r\n  if (newsword = null) {\r\n    msg (\"The machine clatters to a halt and a red light flashes. You might need to start over if you want a sword.\")\r\n  }\r\n  else {\r\n    MoveObject (newsword, bucket)\r\n    msg (\"The machine whirrs, and a {object:\" + swordname + \"} drops out into the {object:bucket}. If you want to buy it, it will cost \" + FormatMoney (newsword.price) + \".\")\r\n    newsword.take => {\r\n      msg (\"It will cost \" +FormatMoney (this.price) + \" to take this.\")\r\n      if (game.pov.money >= this.price) {\r\n        game.buying = this\r\n        Ask (\"Would you like to buy \" + GetDisplayName (this) + \"?\") {\r\n          if (result) {\r\n            game.pov.money = game.pov.money - game.buying.price\r\n            game.buying.parent = game.pov\r\n            game.pov.buying.take = true\r\n            msg (\"You take it.\")\r\n          }\r\n          else {\r\n            msg (\"You leave it.\")\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        msg (\"You can't afford it.\")\r\n      }\r\n    }\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<pre><code>get input {\n  result = Trim(result)\n  create (result)\n  obj = GetObject(result)</code></pre>\n</blockquote>\n<p>This is problematic. If the player enters the name of an object that already exists (like \"player\") the <code>create</code> will fail and you end up giving the player the ability to change the description and stats of any object.</p>\n<p>Better to use:</p>\n<pre><code>swordname = GetUniqueElementName (\"sword\")\nmsg (\"Name the sword.\")\nget input {\n  alias = Trim(result)\n  if (LengthOf (alias) = 0)) {\n    alias = \"The sword with no name\"\n  }\n  msg (\"Describe what it looks like.\")\n  get input {\n    description = Trim (result)\n    msg (\"Enter durability (1 -10) (or whatever)\")\n    get input {\n      if (not IsInt(result)) {\n        msg (\"That's not a number!\")\n      }\n      else {\n        durability = ToInt(result)\n        if (durability &lt; 1 or durability &gt; 10) {\n          msg (\"That's not a legal durability.\")\n        }\n        else {\n          msg (\"Enter damage (1+)\")\n          get input {\n            if (not IsInt(result)) {\n              msg (\"That's not a number!\")\n            }\n            else {\n              damage = ToInt(result)\n              if (damage &lt; 1) {\n                msg (\"That's not a legal damage.\")\n              }\n              else {\n                create (swordname)\n                newsword = GetObject (swordname)\n                newsword.look = description\n                newsword.durability = durability\n                newsword.damage = damage\n                newsword.price = durability * (2 + damage) + GetRandomInt (-2, 6)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\non ready {\n  newsword = GetObject (swordname)\n  if (newsword = null) {\n    msg (\"The machine clatters to a halt and a red light flashes. You might need to start over if you want a sword.\")\n  }\n  else {\n    MoveObject (newsword, bucket)\n    msg (\"The machine whirrs, and a {object:\" + swordname + \"} drops out into the {object:bucket}. If you want to buy it, it will cost \" + FormatMoney (newsword.price) + \".\")\n    newsword.take =&gt; {\n      msg (\"It will cost \" +FormatMoney (this.price) + \" to take this.\")\n      if (game.pov.money &gt;= this.price) {\n        game.buying = this\n        Ask (\"Would you like to buy \" + GetDisplayName (this) + \"?\") {\n          if (result) {\n            game.pov.money = game.pov.money - game.buying.price\n            game.buying.parent = game.pov\n            game.pov.buying.take = true\n            msg (\"You take it.\")\n          }\n          else {\n            msg (\"You leave it.\")\n          }\n        }\n      }\n      else {\n        msg (\"You can't afford it.\")\n      }\n    }\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2021-05-14T18:07:06.8431027Z",
      "LastEditDate": "2021-05-14T18:08:05.431214Z",
      "link": null
    }
  ]
}
