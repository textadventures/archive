{
  "Topic": {
    "TopicId": "4195",
    "ForumId": "10",
    "Title": "Random Object Movement",
    "LastUpdated": "2014-02-20T00:23:02+00:00",
    "ReplyCount": 5
  },
  "Posts": [
    {
      "PostId": "27875",
      "UserId": 0,
      "Username": "venzen2K",
      "UserAvatar": null,
      "UserGravatar": "4dc578879b0d529a7f10a71edbe40b8e",
      "EditableText": "Hi all. I've been working with Quest for about a week now, and am curious about a couple things that I would like to make random. Any help or suggestions would be appreciated.\n\n1. At the start of the game I would like to run a script that selects 3 random objects and moves them to a specified room. //edit: Okay, I figured out how to select my three objects and move them to the room I want. Now on to question 2...\n\n2. During the game I would like to randomly select an object that will move to a random room every certain number of turns (I have the turn script set up, but I am not sure if/how to select a random object and move it to a random room - i.e. a poltergeist is stealing something random and moving it someplace random.)\n\nI have a hunch that it will have something to do with lists, but I can't seem to make heads nor tails of what I'm reading about creating lists on the Wikis and tutorials.\n\nAny help i could get would be much appreciated. The past week I have just been toying with the tutorial game, trying to gain as deep an understanding as I can get of Quest (I love it so far!). I've been testing the opening script part just using object1, object2, object3, object4, object5 and object6 and room1, room2, room3, and lockedroom (where I want my 3 random objects selected at the beginning of the game to go). The rest of the game is still blank, so I don't really have anything workable to give you.\n\nThanks again!",
      "EditableFormat": "bbcode",
      "HTML": "Hi all. I've been working with Quest for about a week now, and am curious about a couple things that I would like to make random. Any help or suggestions would be appreciated.<br/><br/>1. At the start of the game I would like to run a script that selects 3 random objects and moves them to a specified room. //edit: Okay, I figured out how to select my three objects and move them to the room I want. Now on to question 2...<br/><br/>2. During the game I would like to randomly select an object that will move to a random room every certain number of turns (I have the turn script set up, but I am not sure if/how to select a random object and move it to a random room - i.e. a poltergeist is stealing something random and moving it someplace random.)<br/><br/>I have a hunch that it will have something to do with lists, but I can't seem to make heads nor tails of what I'm reading about creating lists on the Wikis and tutorials.<br/><br/>Any help i could get would be much appreciated. The past week I have just been toying with the tutorial game, trying to gain as deep an understanding as I can get of Quest (I love it so far!). I've been testing the opening script part just using object1, object2, object3, object4, object5 and object6 and room1, room2, room3, and lockedroom (where I want my 3 random objects selected at the beginning of the game to go). The rest of the game is still blank, so I don't really have anything workable to give you.<br/><br/>Thanks again!",
      "PostDate": "2014-02-18T16:07:53+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27877",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I know this is code stuff, and being a new person you're probably using the GUI~Editor, but it's easier for me to try to explain stuff this way, hopefully, you can figure out how to do this stuff in the GUI~Editor on your own, but if not I can help you, but it takes a lot longer (more work) to explain how to do things via the GUI~Editor, than it does with code.\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=SetExitLightstrength#mw-pages\">http://quest5.net/w/index.php?title=Cat ... h#mw-pages</a><!-- m --> (page 2, range: S-Z)\n\n-----------\n\nI'm still trying to learn how Object Lists work... (Jayna explained it to me), but I'm not able to get them to work, I don't know if you have to actually have the Objects within the same place as your Object List or not, I haven't had much time to work on figuring out how Object Lists work yet.\n\nso hopefully someone else can help you, who knows exactly how to do this for you, but I can still offer some help (even if it doesn't exactly work correctly)\n\n-------------------\n\nLists (String Lists and Object Lists) and Dictionaries (String Dictionaries, Object Dictionaries, and Script Dictionaries) are not easy for new people to understand. And, what you're asking for, is pretty complicated too.\n\nthink of a list as a 'pot or basket' which holds options~choices of &quot;Strings&quot; or &quot;Objects&quot;, which you can grab-n-use: all of them, some of them specifically, some of them randomly, or all of them randomly.\n\nA 'String' is a collection of characters (not all though), for examples:\n\na\n1\nabc\n3716\na_3jn_3d8_redblueyellow\n\nA 'String List' is a collection of choices~options (strings), for example:\n\n1, 2, 3\na, b, c\nred, blue, yellow\n\n----------------\n\nconceptually about &quot;Spliting&quot; and &quot;Joining&quot;, for example:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Split\">http://quest5.net/wiki/Split</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Join\">http://quest5.net/wiki/Join</a><!-- m -->\n\nString: redblueyellow\nString List: (1) red, (2) blue, or (3) yellow\n\na &quot;String&quot; is &quot;split (apart)&quot; into multiple separate strings to make a &quot;String List&quot;\na &quot;String List&quot; (multiple separated strings) is &quot;joined (together)&quot; to make a single (long) &quot;String&quot;\n\n(You shouldn't be using &quot;Join&quot; much, as it doesn't have much use for basic stuff, unless you're doing much more complex code stuff, lol)\n\n-------------\n\nfor yourself to do this later on, I'd first work on learning to use lists and dictionaries as basic and simple as you can, for example:\n\ntry to do the character creation as it uses lists:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Character_Creation\">http://quest5.net/wiki/Character_Creation</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Showing_a_menu\">http://quest5.net/wiki/Showing_a_menu</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_Lists\">http://quest5.net/wiki/Using_Lists</a><!-- m -->\n\nthere's 3 ways to create a String List or Object List:\n\nsplit (&quot;option_1;option_2;option_3;etc&quot; , &quot;;&quot;)\n\nsplit (&quot;object_1;object_2;object_3;etc&quot; , &quot;;&quot;)\n\n~or~\n\nmy_string_list = NewStringList ()\nlist add (my_string_list, option_1)\nlist add (my_string_list, option_2)\nlist add (my_string_list, option_3)\netc list add (my_string_list, etc)\n\nmy_object_list = NewObjectList ()\nlist add (my_object_list, object_1)\nlist add (my_object_list, object_2)\nlist add (my_object_list, object_3)\netc list add (my_object_list, etc)\n\n~or~\n\n(for objects, you can also get them from a room, other objects, or entire game, and put them into your list, for example...)my_object_list = ScopeInventory () // or 'AllObjects ()', or 'ScopeVisibleNotHeld ()', or etc Scopes\n\n-------------------\n\n&quot;foreach&quot; and &quot;for&quot;\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Foreach\">http://quest5.net/wiki/Foreach</a><!-- m -->\n\nforeach (team_member_x, team_members_string_list) {\n-&gt; team_member_x.run_laps\n}\n\nEvery~All~(*Each*) team member (&quot;team_member_x&quot;), on the team (&quot;team_members_string_list), is to run laps.\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/For\">http://quest5.net/wiki/For</a><!-- m -->\n\nit's basically the same thing, except you can specify which 'team members', to do the action ('run laps') upon~with.\n\nso for example:\n\nteam_members_string_list: (0) john, (1) jim; (2) jeff; (3) jake; (4) julius\n(String List items start their counting~listing with 0, not 1, and starts from left to right as seen above)\n\nforeach (all~every~*each*): john.run_laps, jim.run_laps, jeff.run_laps, jake.run_laps, and julius.run_laps\nfor (2,2): jeff.run_laps\nfor (1,3): jim.run_laps, jeff.run_laps, and jake.run_laps\nfor (1,3,2): jim.run_laps and jake.run_laps\nfor (0,4,2): john.run_laps, jeff.run_laps, and julius.run_laps\nfor (0,4,3): john.run_laps and jake.run_laps\nfor (0,4,4): john.run_laps and julis.run_laps\n(I think you get the idea now)\n\n-----------------\n\ndictionaries are a bit more complicated to understand than lists.\n\nthink of dictionaries as 'tables' (or whatever you call it, lol):\n\n(pretend that there's an expedition and there's only so much food, that to feed everyone ~keep everyone alive, food must be properly rations and divided, as an example)\n\n(pretend that I made a table~grid~spread sheet ~ whatever you call it, lol)\n\nfamily size: 1 ~ 2 ~ 3 ~~ 4\nfish given: 5 ~ 10~ 15 ~ 20\n\n1 = 5\n2 = 10\n3 = 15\n4 = 20\n\n(input) families of 1, (output) get 5 fish\n(input) families of 2, (output) get 10 fish\n(input) families of 3, (output) get 15 fish\n(input) families of 4, (output) get 20 fish\n\nA String Dictionary is literally: string_1 = string_2\n\nan example of it's application:\n\n1 = hi\n2 = bye\n\n1 ---&gt; hi\n2 ---&gt; bye\n\nif input is &quot;1&quot;, then output is &quot;hi&quot;\nif input is &quot;2&quot;, then output is &quot;bye&quot;\n\na useful application of this is in a game with magic elements (doing more damage against opposite element, and less damage or no damage or damage gets absorbs or reflected ~lol~ against same element), though it's full scripting is a bit more complex.\n\nfire = water\nwater = fire\n\nfire ---&gt; water\nwater ---&gt; fire\n\nmonster.elemental = water\nspell.elemental = fire\n\nif cast fire spell (spell.elemental), fire -&gt; water, if (water=monster.elemental), then you do x2 damage, else if (spell.elemental = monster.elemental), then do zero damage, else do x1 damage\n\nObject Dictionary is the same thing, but it's equal to an object:\n\nstring_1 = object_1\n\n1 = soccer ball\n2 = baseball ball\nred = apple\nyellow = lemon\n\nScript Dictionary is the same thing, but it's equal to a script&#058;\n\nstring_1 = script_1\n\n1 = msg (&quot;hi&quot;)\n2 = msg (&quot;bye&quot;)\n\nred = msg (&quot;apple&quot;)\nyellow = msg (&quot;lemon&quot;)\n\n--------------\n\nif you want to take a look at a &quot;game&quot; that uses lists and dictionaries, though it's not exactly for what you need as it deals with traveling, it's got many of the same aspects:\n\n[code:28l2fh4j]&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;Testing Game Stuff&quot;&gt;\n    &lt;gameid&gt;eef801a1-4e6b-4b0a-bdbf-8f3ecfa8389c&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n    &lt;turns type=&quot;int&quot;&gt;0&lt;/turns&gt;\n    &lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;turns=&lt;/statusattributes&gt;\n\t&lt;start type=&quot;script&quot;&gt;\n\t  msg (&quot;Important Note&#58;&quot;)\n\t  msg (&quot;Type in&#58; help&quot;)\n\t&lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;homeland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;grassland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;plains&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;desert&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;tundra&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;swampland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;mountains&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;forest&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;wasteland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;coastland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;hills&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;command name=&quot;help_command&quot;&gt;\n    &lt;pattern&gt;help&lt;/pattern&gt;\n\t&lt;script&gt;\n\t  help_function\n\t&lt;/script&gt;\n  &lt;/command&gt;\n  &lt;command name=&quot;explore_command&quot;&gt;\n    &lt;pattern&gt;explore&lt;/pattern&gt;\n    &lt;script&gt;\n      explore_function\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;command name=&quot;travel_command&quot;&gt;\n    &lt;pattern&gt;travel&lt;/pattern&gt;\n\t&lt;script&gt;\n\t  travel_function\n\t&lt;/script&gt;\n  &lt;/command&gt;\n  &lt;object name=&quot;data_object&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n\t&lt;travel_string_list type=&quot;simplestringlist&quot;&gt;homeland&lt;/travel_string_list&gt;\n    &lt;homeland_events_string_list type=&quot;simplestringlist&quot;&gt;grassland_discovery;plains_discovery;desert_discovery;tundra_discovery;swampland_discovery;forest_discovery;mountains_discovery;hills_discovery;wasteland_discovery;coastland_discovery&lt;/homeland_events_string_list&gt;\n    &lt;homeland_events_script_dictionary type=&quot;scriptdictionary&quot;&gt;\n\t  &lt;item key=&quot;grassland_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;grassland&quot;)\n\t\tmsg (&quot;You've discovered the grassland! Now, you can travel to the grassland and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;plains_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;plains&quot;)\n\t\tmsg (&quot;You've discovered the plains! Now, you can travel to the plains and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;desert_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;desert&quot;)\n\t\tmsg (&quot;You've discovered the desert! Now, you can travel to the desert and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;tundra_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;tundra&quot;)\n\t\tmsg (&quot;You've discovered the tundra! Now, you can travel to the tundra and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;swampland_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;swampland&quot;)\n\t\tmsg (&quot;You've discovered the swampland! Now, you can travel to the swampland and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;forest_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;forest&quot;)\n\t\tmsg (&quot;You've discovered the forest! Now, you can travel to the forest and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;mountains_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;mountains&quot;)\n\t\tmsg (&quot;You've discovered the mountains! Now, you can travel to the mountains and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;hills_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;hills&quot;)\n\t\tmsg (&quot;You've discovered the hills! Now, you can travel to the hills and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;wasteland_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;wasteland&quot;)\n\t\tmsg (&quot;You've discovered the wasteland! Now, you can travel to the wasteland and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;coastland_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;coastland&quot;)\n\t\tmsg (&quot;You've discovered the coastland! Now, you can travel to the coastland and explore it!&quot;)\n\t  &lt;/item&gt;\n\t&lt;/homeland_events_script_dictionary&gt;\n  &lt;/object&gt;\n  &lt;turnscript name=&quot;global_turnscript&quot;&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      game&#46;turns = game&#46;turns + 1\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;function name=&quot;help_function&quot;&gt;\n    msg (&quot;Type 'explore' to explore your area&#46;&quot;)\n\tmsg (&quot;Type 'travel' to travel to different areas&#46;&quot;)\n  &lt;/function&gt;\n  &lt;function name=&quot;explore_function&quot;&gt;&lt;!&#91;CDATA&#91;\n    switch (game&#46;pov&#46;parent) {\n\t  case (homeland) {\n\t\tresult_1 = ListCount (data_object&#46;homeland_events_string_list) - 1\n\t\tif (result_1 &gt;= 0) {\n          result_2 = StringListItem (data_object&#46;homeland_events_string_list,GetRandomInt(0,result_1))\n          invoke (ScriptDictionaryItem (data_object&#46;homeland_events_script_dictionary,result_2))\n\t\t  on ready {\n\t\t    foreach (item_x, split (&quot;grassland_discovery;plains_discovery;desert_discovery;tundra_discovery;swampland_discovery;forest_discovery;mountains_discovery;hills_discovery;wasteland_discovery;coastland_discovery&quot;,&quot;;&quot;)) {\n\t\t      if (result_2 = item_x) {\n\t\t\t    list remove (data_object&#46;homeland_events_string_list, result_2)\n\t\t\t  }\n\t\t\t}\n\t\t  }\n\t\t} else {\n\t\t  msg (&quot;There seemingly is nothing left to explore in this area&#46;&quot;)\n\t\t}\n\t  }\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n  &lt;function name=&quot;travel_function&quot;&gt;\n    show menu (&quot;Where do you wish to travel?&quot;,data_object&#46;travel_string_list,false) {\n\t  if (not game&#46;pov&#46;parent = GetObject (result)) {\n\t    game&#46;pov&#46;parent = GetObject (result)\n\t  } else {\n\t    msg (&quot;You are already at this area&#46;&quot;)\n\t\task (&quot;Try again?&quot;) {\n\t\t  if (result=true) {\n\t\t    travel_function\n\t\t  } else {\n\t\t    msg (&quot;You realize that you need to discover a new area to travel to first, before you can travel to that place&#46;&quot;)\n\t\t  }\n\t\t}\n\t  }\n\t}\n  &lt;/function&gt;\n&lt;/asl&gt;[/code:28l2fh4j]\n\nor, the game file is an attachment at the bottom, you can download.\n\n-----------\n\nconceptually what you want~need~are to do~doing is this:\n\nhave a Non-Room (and Non-Player) Object existing by itself like it's a room (the Object isn't within a room). This will be our secret 'storage' (or 'data object') object that the game player doesn't know about. We use this secret Object to hold our needed Attributes and (the will be randomly selected) Objects. So, put~create~add your random objects into this secret Object, and then we'll need to make~add the Attributes needed as well.\n\nIf you want your &quot;turns&quot; Attribute to be shown in the right pane during game play, then you'll to create~add it to either the &quot;game&quot; Object or to a Player Object, such as your default &quot;player&quot; Player Object. Or, we can still display the &quot;turns&quot; via a similar effect of like a &quot;stats screen&quot;, which we can do with a Command (you type in something to see your turns and~or other info) or via buttons~hyperlinks. I don't know how you want it done, lol.\n\nAs for 'after x turns move object here', this is achieved either via a Turnscript or the special 'changed' Script, and our 'turns' Attribute (and a turns increasing script). Also, in the scripting, we'll use the % sign to achieve the 'after x turns'.\n\nI know you said this already, but for completeness, to randomly select three objects to move to 3 specific rooms:\n\nyou need an Object List Attribute, and the 'GetRandomInt' Script, and a 'moving' Script. You'll also need 'list remove' script too, so for the 2nd and 3rd time the 'GetRanomInt' script is run, you're not selecting the same object that you already selected and moved. And, you'll need to re-add the objects back to the object list too with 'list add' script.\n\nas for moving random objects to random rooms (can you specify whether its the same objects and rooms that you acted upon at the start of the game, or are you talknig about after x turns moving randomly new objects to new rooms), you're basically using 'GetRandomInt' Script with: an Object List Script for the Objects and also an Object List Script for the Rooms.\n\n--------------\n\nif you still need help, let me know, and I can try to craft coding for you ~ what you want, but it'd take me some time to do so.\n\n---------------\n.",
      "EditableFormat": "bbcode",
      "HTML": "I know this is code stuff, and being a new person you're probably using the GUI~Editor, but it's easier for me to try to explain stuff this way, hopefully, you can figure out how to do this stuff in the GUI~Editor on your own, but if not I can help you, but it takes a lot longer (more work) to explain how to do things via the GUI~Editor, than it does with code.<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=SetExitLightstrength#mw-pages\">http://quest5.net/w/index.php?title=Cat ... h#mw-pages</a><!-- m --> (page 2, range: S-Z)<br/><br/>-----------<br/><br/>I'm still trying to learn how Object Lists work... (Jayna explained it to me), but I'm not able to get them to work, I don't know if you have to actually have the Objects within the same place as your Object List or not, I haven't had much time to work on figuring out how Object Lists work yet.<br/><br/>so hopefully someone else can help you, who knows exactly how to do this for you, but I can still offer some help (even if it doesn't exactly work correctly)<br/><br/>-------------------<br/><br/>Lists (String Lists and Object Lists) and Dictionaries (String Dictionaries, Object Dictionaries, and Script Dictionaries) are not easy for new people to understand. And, what you're asking for, is pretty complicated too.<br/><br/>think of a list as a 'pot or basket' which holds options~choices of &quot;Strings&quot; or &quot;Objects&quot;, which you can grab-n-use: all of them, some of them specifically, some of them randomly, or all of them randomly.<br/><br/>A 'String' is a collection of characters (not all though), for examples:<br/><br/>a<br/>1<br/>abc<br/>3716<br/>a_3jn_3d8_redblueyellow<br/><br/>A 'String List' is a collection of choices~options (strings), for example:<br/><br/>1, 2, 3<br/>a, b, c<br/>red, blue, yellow<br/><br/>----------------<br/><br/>conceptually about &quot;Spliting&quot; and &quot;Joining&quot;, for example:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Split\">http://quest5.net/wiki/Split</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Join\">http://quest5.net/wiki/Join</a><!-- m --><br/><br/>String: redblueyellow<br/>String List: (1) red, (2) blue, or (3) yellow<br/><br/>a &quot;String&quot; is &quot;split (apart)&quot; into multiple separate strings to make a &quot;String List&quot;<br/>a &quot;String List&quot; (multiple separated strings) is &quot;joined (together)&quot; to make a single (long) &quot;String&quot;<br/><br/>(You shouldn't be using &quot;Join&quot; much, as it doesn't have much use for basic stuff, unless you're doing much more complex code stuff, lol)<br/><br/>-------------<br/><br/>for yourself to do this later on, I'd first work on learning to use lists and dictionaries as basic and simple as you can, for example:<br/><br/>try to do the character creation as it uses lists:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Character_Creation\">http://quest5.net/wiki/Character_Creation</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Showing_a_menu\">http://quest5.net/wiki/Showing_a_menu</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_Lists\">http://quest5.net/wiki/Using_Lists</a><!-- m --><br/><br/>there's 3 ways to create a String List or Object List:<br/><br/>split (&quot;option_1;option_2;option_3;etc&quot; , &quot;;&quot;)<br/><br/>split (&quot;object_1;object_2;object_3;etc&quot; , &quot;;&quot;)<br/><br/>~or~<br/><br/>my_string_list = NewStringList ()<br/>list add (my_string_list, option_1)<br/>list add (my_string_list, option_2)<br/>list add (my_string_list, option_3)<br/>etc list add (my_string_list, etc)<br/><br/>my_object_list = NewObjectList ()<br/>list add (my_object_list, object_1)<br/>list add (my_object_list, object_2)<br/>list add (my_object_list, object_3)<br/>etc list add (my_object_list, etc)<br/><br/>~or~<br/><br/>(for objects, you can also get them from a room, other objects, or entire game, and put them into your list, for example...)my_object_list = ScopeInventory () // or 'AllObjects ()', or 'ScopeVisibleNotHeld ()', or etc Scopes<br/><br/>-------------------<br/><br/>&quot;foreach&quot; and &quot;for&quot;<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Foreach\">http://quest5.net/wiki/Foreach</a><!-- m --><br/><br/>foreach (team_member_x, team_members_string_list) {<br/>-&gt; team_member_x.run_laps<br/>}<br/><br/>Every~All~(*Each*) team member (&quot;team_member_x&quot;), on the team (&quot;team_members_string_list), is to run laps.<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/For\">http://quest5.net/wiki/For</a><!-- m --><br/><br/>it's basically the same thing, except you can specify which 'team members', to do the action ('run laps') upon~with.<br/><br/>so for example:<br/><br/>team_members_string_list: (0) john, (1) jim; (2) jeff; (3) jake; (4) julius<br/>(String List items start their counting~listing with 0, not 1, and starts from left to right as seen above)<br/><br/>foreach (all~every~*each*): john.run_laps, jim.run_laps, jeff.run_laps, jake.run_laps, and julius.run_laps<br/>for (2,2): jeff.run_laps<br/>for (1,3): jim.run_laps, jeff.run_laps, and jake.run_laps<br/>for (1,3,2): jim.run_laps and jake.run_laps<br/>for (0,4,2): john.run_laps, jeff.run_laps, and julius.run_laps<br/>for (0,4,3): john.run_laps and jake.run_laps<br/>for (0,4,4): john.run_laps and julis.run_laps<br/>(I think you get the idea now)<br/><br/>-----------------<br/><br/>dictionaries are a bit more complicated to understand than lists.<br/><br/>think of dictionaries as 'tables' (or whatever you call it, lol):<br/><br/>(pretend that there's an expedition and there's only so much food, that to feed everyone ~keep everyone alive, food must be properly rations and divided, as an example)<br/><br/>(pretend that I made a table~grid~spread sheet ~ whatever you call it, lol)<br/><br/>family size: 1 ~ 2 ~ 3 ~~ 4<br/>fish given: 5 ~ 10~ 15 ~ 20<br/><br/>1 = 5<br/>2 = 10<br/>3 = 15<br/>4 = 20<br/><br/>(input) families of 1, (output) get 5 fish<br/>(input) families of 2, (output) get 10 fish<br/>(input) families of 3, (output) get 15 fish<br/>(input) families of 4, (output) get 20 fish<br/><br/>A String Dictionary is literally: string_1 = string_2<br/><br/>an example of it's application:<br/><br/>1 = hi<br/>2 = bye<br/><br/>1 ---&gt; hi<br/>2 ---&gt; bye<br/><br/>if input is &quot;1&quot;, then output is &quot;hi&quot;<br/>if input is &quot;2&quot;, then output is &quot;bye&quot;<br/><br/>a useful application of this is in a game with magic elements (doing more damage against opposite element, and less damage or no damage or damage gets absorbs or reflected ~lol~ against same element), though it's full scripting is a bit more complex.<br/><br/>fire = water<br/>water = fire<br/><br/>fire ---&gt; water<br/>water ---&gt; fire<br/><br/>monster.elemental = water<br/>spell.elemental = fire<br/><br/>if cast fire spell (spell.elemental), fire -&gt; water, if (water=monster.elemental), then you do x2 damage, else if (spell.elemental = monster.elemental), then do zero damage, else do x1 damage<br/><br/>Object Dictionary is the same thing, but it's equal to an object:<br/><br/>string_1 = object_1<br/><br/>1 = soccer ball<br/>2 = baseball ball<br/>red = apple<br/>yellow = lemon<br/><br/>Script Dictionary is the same thing, but it's equal to a script&#058;<br/><br/>string_1 = script_1<br/><br/>1 = msg (&quot;hi&quot;)<br/>2 = msg (&quot;bye&quot;)<br/><br/>red = msg (&quot;apple&quot;)<br/>yellow = msg (&quot;lemon&quot;)<br/><br/>--------------<br/><br/>if you want to take a look at a &quot;game&quot; that uses lists and dictionaries, though it's not exactly for what you need as it deals with traveling, it's got many of the same aspects:<br/><br/><pre><code>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;Testing Game Stuff&quot;&gt;<br/>    &lt;gameid&gt;eef801a1-4e6b-4b0a-bdbf-8f3ecfa8389c&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;<br/>    &lt;turns type=&quot;int&quot;&gt;0&lt;/turns&gt;<br/>    &lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;turns=&lt;/statusattributes&gt;<br/>\t&lt;start type=&quot;script&quot;&gt;<br/>\t  msg (&quot;Important Note&#58;&quot;)<br/>\t  msg (&quot;Type in&#58; help&quot;)<br/>\t&lt;/start&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;homeland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;grassland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;plains&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;desert&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;tundra&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;swampland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;mountains&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;forest&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;wasteland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;coastland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;hills&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;command name=&quot;help_command&quot;&gt;<br/>    &lt;pattern&gt;help&lt;/pattern&gt;<br/>\t&lt;script&gt;<br/>\t  help_function<br/>\t&lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;command name=&quot;explore_command&quot;&gt;<br/>    &lt;pattern&gt;explore&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      explore_function<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;command name=&quot;travel_command&quot;&gt;<br/>    &lt;pattern&gt;travel&lt;/pattern&gt;<br/>\t&lt;script&gt;<br/>\t  travel_function<br/>\t&lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;object name=&quot;data_object&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>\t&lt;travel_string_list type=&quot;simplestringlist&quot;&gt;homeland&lt;/travel_string_list&gt;<br/>    &lt;homeland_events_string_list type=&quot;simplestringlist&quot;&gt;grassland_discovery;plains_discovery;desert_discovery;tundra_discovery;swampland_discovery;forest_discovery;mountains_discovery;hills_discovery;wasteland_discovery;coastland_discovery&lt;/homeland_events_string_list&gt;<br/>    &lt;homeland_events_script_dictionary type=&quot;scriptdictionary&quot;&gt;<br/>\t  &lt;item key=&quot;grassland_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;grassland&quot;)<br/>\t\tmsg (&quot;You've discovered the grassland! Now, you can travel to the grassland and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;plains_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;plains&quot;)<br/>\t\tmsg (&quot;You've discovered the plains! Now, you can travel to the plains and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;desert_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;desert&quot;)<br/>\t\tmsg (&quot;You've discovered the desert! Now, you can travel to the desert and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;tundra_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;tundra&quot;)<br/>\t\tmsg (&quot;You've discovered the tundra! Now, you can travel to the tundra and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;swampland_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;swampland&quot;)<br/>\t\tmsg (&quot;You've discovered the swampland! Now, you can travel to the swampland and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;forest_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;forest&quot;)<br/>\t\tmsg (&quot;You've discovered the forest! Now, you can travel to the forest and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;mountains_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;mountains&quot;)<br/>\t\tmsg (&quot;You've discovered the mountains! Now, you can travel to the mountains and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;hills_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;hills&quot;)<br/>\t\tmsg (&quot;You've discovered the hills! Now, you can travel to the hills and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;wasteland_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;wasteland&quot;)<br/>\t\tmsg (&quot;You've discovered the wasteland! Now, you can travel to the wasteland and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;coastland_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;coastland&quot;)<br/>\t\tmsg (&quot;You've discovered the coastland! Now, you can travel to the coastland and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t&lt;/homeland_events_script_dictionary&gt;<br/>  &lt;/object&gt;<br/>  &lt;turnscript name=&quot;global_turnscript&quot;&gt;<br/>    &lt;enabled /&gt;<br/>    &lt;script&gt;<br/>      game&#46;turns = game&#46;turns + 1<br/>    &lt;/script&gt;<br/>  &lt;/turnscript&gt;<br/>  &lt;function name=&quot;help_function&quot;&gt;<br/>    msg (&quot;Type 'explore' to explore your area&#46;&quot;)<br/>\tmsg (&quot;Type 'travel' to travel to different areas&#46;&quot;)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;explore_function&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    switch (game&#46;pov&#46;parent) {<br/>\t  case (homeland) {<br/>\t\tresult_1 = ListCount (data_object&#46;homeland_events_string_list) - 1<br/>\t\tif (result_1 &gt;= 0) {<br/>          result_2 = StringListItem (data_object&#46;homeland_events_string_list,GetRandomInt(0,result_1))<br/>          invoke (ScriptDictionaryItem (data_object&#46;homeland_events_script_dictionary,result_2))<br/>\t\t  on ready {<br/>\t\t    foreach (item_x, split (&quot;grassland_discovery;plains_discovery;desert_discovery;tundra_discovery;swampland_discovery;forest_discovery;mountains_discovery;hills_discovery;wasteland_discovery;coastland_discovery&quot;,&quot;;&quot;)) {<br/>\t\t      if (result_2 = item_x) {<br/>\t\t\t    list remove (data_object&#46;homeland_events_string_list, result_2)<br/>\t\t\t  }<br/>\t\t\t}<br/>\t\t  }<br/>\t\t} else {<br/>\t\t  msg (&quot;There seemingly is nothing left to explore in this area&#46;&quot;)<br/>\t\t}<br/>\t  }<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/>  &lt;function name=&quot;travel_function&quot;&gt;<br/>    show menu (&quot;Where do you wish to travel?&quot;,data_object&#46;travel_string_list,false) {<br/>\t  if (not game&#46;pov&#46;parent = GetObject (result)) {<br/>\t    game&#46;pov&#46;parent = GetObject (result)<br/>\t  } else {<br/>\t    msg (&quot;You are already at this area&#46;&quot;)<br/>\t\task (&quot;Try again?&quot;) {<br/>\t\t  if (result=true) {<br/>\t\t    travel_function<br/>\t\t  } else {<br/>\t\t    msg (&quot;You realize that you need to discover a new area to travel to first, before you can travel to that place&#46;&quot;)<br/>\t\t  }<br/>\t\t}<br/>\t  }<br/>\t}<br/>  &lt;/function&gt;<br/>&lt;/asl&gt;</code></pre><br/><br/>or, the game file is an attachment at the bottom, you can download.<br/><br/>-----------<br/><br/>conceptually what you want~need~are to do~doing is this:<br/><br/>have a Non-Room (and Non-Player) Object existing by itself like it's a room (the Object isn't within a room). This will be our secret 'storage' (or 'data object') object that the game player doesn't know about. We use this secret Object to hold our needed Attributes and (the will be randomly selected) Objects. So, put~create~add your random objects into this secret Object, and then we'll need to make~add the Attributes needed as well.<br/><br/>If you want your &quot;turns&quot; Attribute to be shown in the right pane during game play, then you'll to create~add it to either the &quot;game&quot; Object or to a Player Object, such as your default &quot;player&quot; Player Object. Or, we can still display the &quot;turns&quot; via a similar effect of like a &quot;stats screen&quot;, which we can do with a Command (you type in something to see your turns and~or other info) or via buttons~hyperlinks. I don't know how you want it done, lol.<br/><br/>As for 'after x turns move object here', this is achieved either via a Turnscript or the special 'changed' Script, and our 'turns' Attribute (and a turns increasing script). Also, in the scripting, we'll use the % sign to achieve the 'after x turns'.<br/><br/>I know you said this already, but for completeness, to randomly select three objects to move to 3 specific rooms:<br/><br/>you need an Object List Attribute, and the 'GetRandomInt' Script, and a 'moving' Script. You'll also need 'list remove' script too, so for the 2nd and 3rd time the 'GetRanomInt' script is run, you're not selecting the same object that you already selected and moved. And, you'll need to re-add the objects back to the object list too with 'list add' script.<br/><br/>as for moving random objects to random rooms (can you specify whether its the same objects and rooms that you acted upon at the start of the game, or are you talknig about after x turns moving randomly new objects to new rooms), you're basically using 'GetRandomInt' Script with: an Object List Script for the Objects and also an Object List Script for the Rooms.<br/><br/>--------------<br/><br/>if you still need help, let me know, and I can try to craft coding for you ~ what you want, but it'd take me some time to do so.<br/><br/>---------------<br/><div><a href=\"/attachment/854\">HK Testing Travel.aslx</a></div>",
      "PostDate": "2014-02-18T21:48:56+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27881",
      "UserId": 0,
      "Username": "Liam315",
      "UserAvatar": null,
      "UserGravatar": "ded290a24d340d761d42c897d08111aa",
      "EditableText": "Yes, you will need to create object lists in order to make this work. You will need an object list for the potential items that can be moved, and another for the rooms they can be moved to. Here is a script that can be used to select objects and move them.\n\n[code:2txz5ps5]moveable = NewObjectList()\nlist add (moveable, object1)\nlist add (moveable, object2)\nlist add (moveable, object3)\nlist add (moveable, object4)\nmoveable = ListExclude(moveable,ScopeInventory())\nrooms = NewObjectList()\nlist add (rooms, room1)\nlist add (rooms, room2)\nlist add (rooms, room3)\npickobject = GetRandomInt(0,ListCount(moveable) - 1)\npickroom = GetRandomInt(0,2)\nMoveObject (ObjectListItem(moveable,pickobject), ObjectListItem(rooms,pickroom))[/code:2txz5ps5]\n\nSo to explain what happens:\nThe first part makes a new object list, and adds all of the objects that can potentially be moved to it. Because I'm assuming that some of these objects may be able to be picked up by the player, I've put in a line that will stop anything the player has from being the object selected to be moved. If you wanted the theft from the player to be a part of it though, you'd just have to remove this line. (There are many techniques to have certain objects only able to be moved under different circumstances.)\n\nThe next part adds all the potential rooms, which is quite straightforward. Obviously you'd have to replace object1, room1, etc. with the actual object and room names.\n\nAfter that, 2 random numbers are selected based on the number of objects or rooms in each list. Note that it's important to use 0 as a potential number due to the way the ObjectListItem function works. The upper limit of the random number to be picked should be the number of items in the list minus 1. These numbers are represented by the variables &quot;pickobject&quot; and &quot;pickroom&quot;.\n\nFinally, these numbers are used to pluck an object and room from the list and perform the move. The reason the random number must be 0 to (1 less than the total number of items in the list) is to do with the way the ObjectListItem function operates.\n\nPaste that script into whatever turn script you have and see how you get on, any further questions feel free to ask.\n\nEDIT: I've also assumed that the number of objects that are able to be moved around is fairly small, so I've used the &quot;list add&quot; method to select all of the appropriate objects and rooms. If the number of objects and/or rooms is quite large, there are more elegant ways of creating those object lists. If you post the specifics (or a copy of your game file) I can provide a more tailored script.",
      "EditableFormat": "bbcode",
      "HTML": "Yes, you will need to create object lists in order to make this work. You will need an object list for the potential items that can be moved, and another for the rooms they can be moved to. Here is a script that can be used to select objects and move them.<br/><br/><pre><code>moveable = NewObjectList()<br/>list add (moveable, object1)<br/>list add (moveable, object2)<br/>list add (moveable, object3)<br/>list add (moveable, object4)<br/>moveable = ListExclude(moveable,ScopeInventory())<br/>rooms = NewObjectList()<br/>list add (rooms, room1)<br/>list add (rooms, room2)<br/>list add (rooms, room3)<br/>pickobject = GetRandomInt(0,ListCount(moveable) - 1)<br/>pickroom = GetRandomInt(0,2)<br/>MoveObject (ObjectListItem(moveable,pickobject), ObjectListItem(rooms,pickroom))</code></pre><br/><br/>So to explain what happens:<br/>The first part makes a new object list, and adds all of the objects that can potentially be moved to it. Because I'm assuming that some of these objects may be able to be picked up by the player, I've put in a line that will stop anything the player has from being the object selected to be moved. If you wanted the theft from the player to be a part of it though, you'd just have to remove this line. (There are many techniques to have certain objects only able to be moved under different circumstances.)<br/><br/>The next part adds all the potential rooms, which is quite straightforward. Obviously you'd have to replace object1, room1, etc. with the actual object and room names.<br/><br/>After that, 2 random numbers are selected based on the number of objects or rooms in each list. Note that it's important to use 0 as a potential number due to the way the ObjectListItem function works. The upper limit of the random number to be picked should be the number of items in the list minus 1. These numbers are represented by the variables &quot;pickobject&quot; and &quot;pickroom&quot;.<br/><br/>Finally, these numbers are used to pluck an object and room from the list and perform the move. The reason the random number must be 0 to (1 less than the total number of items in the list) is to do with the way the ObjectListItem function operates.<br/><br/>Paste that script into whatever turn script you have and see how you get on, any further questions feel free to ask.<br/><br/>EDIT: I've also assumed that the number of objects that are able to be moved around is fairly small, so I've used the &quot;list add&quot; method to select all of the appropriate objects and rooms. If the number of objects and/or rooms is quite large, there are more elegant ways of creating those object lists. If you post the specifics (or a copy of your game file) I can provide a more tailored script.",
      "PostDate": "2014-02-19T02:05:11+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27891",
      "UserId": 0,
      "Username": "venzen2K",
      "UserAvatar": null,
      "UserGravatar": "4dc578879b0d529a7f10a71edbe40b8e",
      "EditableText": "Perfect. Both those posts helped. I think I got it licked. The actual list will be between 8 and 15 objects/rooms. Figuring out object lists was a big help. \n\nI do have one other question though. Do the lists not save for later use? Or at least is there a way to do that b/c if i create the list in a function early in the game, then try to call another object from the list later in the game, it says the list variable is unknown. I would like to be able to create the lists at the beginning of the game, and then call it up for various situations, like having a NPC move away after being spoken to, or something like that, but what I am running into is that if in the NPCs &quot;Speak to/ask scripts if I just try to call from a list I made earlier in the game a random room that the NPC should move to, i get an error saying the roomlist is and unknown variable.\n\nThanks again! I can see many uses for learning the NewObjectList and NewStringList.",
      "EditableFormat": "bbcode",
      "HTML": "Perfect. Both those posts helped. I think I got it licked. The actual list will be between 8 and 15 objects/rooms. Figuring out object lists was a big help. <br/><br/>I do have one other question though. Do the lists not save for later use? Or at least is there a way to do that b/c if i create the list in a function early in the game, then try to call another object from the list later in the game, it says the list variable is unknown. I would like to be able to create the lists at the beginning of the game, and then call it up for various situations, like having a NPC move away after being spoken to, or something like that, but what I am running into is that if in the NPCs &quot;Speak to/ask scripts if I just try to call from a list I made earlier in the game a random room that the NPC should move to, i get an error saying the roomlist is and unknown variable.<br/><br/>Thanks again! I can see many uses for learning the NewObjectList and NewStringList.",
      "PostDate": "2014-02-19T20:26:54+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27893",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "(Just a guess here...)\n\nThe only way to persist variables is to attach them to objects. Any bare variables in scripts exist only within those scripts. So if you do:\n\n[code:asf0c8mc]list = NewObjectList()[/code:asf0c8mc]\nthen the list will disappear when the script exits. If you want to have it persist and be available later, you need to attach it to an object. The game object is a good one:\n\n[code:asf0c8mc]game&#46;list = NewObjectList()[/code:asf0c8mc]\nThen you can access wherever you like.\n\nHope that helps.",
      "EditableFormat": "bbcode",
      "HTML": "(Just a guess here...)<br/><br/>The only way to persist variables is to attach them to objects. Any bare variables in scripts exist only within those scripts. So if you do:<br/><br/><pre><code>list = NewObjectList()</code></pre><br/>then the list will disappear when the script exits. If you want to have it persist and be available later, you need to attach it to an object. The game object is a good one:<br/><br/><pre><code>game&#46;list = NewObjectList()</code></pre><br/>Then you can access wherever you like.<br/><br/>Hope that helps.",
      "PostDate": "2014-02-19T21:00:05+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27895",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "as I forgot to explain in my post, jayna has done so for you, hehe.\n\nso, as jayna said already (just further explanation~commentary by me):\n\nVariable (local, temporary, non-saved ~ non-load'able, only usable within its scripting, NOT attached to an Object):\n\nVariable = Expression_or_Value\n\ncustom example (&quot;you_go_first&quot;):\n\nyou_go_first = false\nif (self.speed &gt; enemy.speed) {\n-&gt; you_go_first = true\n}\nif (you_go_first = true) {\n-&gt; enemy.hp = enemy.hp - self.damage\n-&gt; msg (&quot;You get to go first, and damage the enemy.&quot;)\n} else if (you_go_first = false) {\n-&gt; self.hp = self.hp - enemy.damage\n-&gt; msg (&quot;The enemy got to go first and damaged you.,&quot;)\n}\n\n// notice that &quot;enemy.hp&quot;, &quot;self.hp&quot;, &quot;self.damage&quot;, &quot;enemy.damage&quot;, &quot;self.speed&quot;, and &quot;enemy.speed&quot; are Attributes, NOT Variables. They can be used in other scripts, but &quot;you_go_first&quot; can not: ~ &quot;ERROR, missing or unknown variable&quot;\n\na built-in example (&quot;result&quot;):\n\nshow menu (&quot;What is your gender?&quot;, split (&quot;male;female&quot;,&quot;;&quot;), false) {\n-&gt; // you choose &quot;male&quot;\n-&gt; // quest automatically sets: result = &quot;male&quot;\n-&gt; msg (&quot;You are a &quot; + result + &quot;.&quot;)\n-&gt; // outputs: You are a male.\n}\n\n// by the way: ' split (male;female&quot;,&quot;;&quot;) ' is also a variable too, as it also is not attached to an Object\n\n--------\n\nif you want to use &quot;male&quot; elsewhere (in other scripts), then you have to do this (an example):\n\nshow menu (&quot;What is your gender?&quot;, split (&quot;male;female&quot;,&quot;;&quot;), false) {\n-&gt; // you choose &quot;male&quot;\n-&gt; // quest automatically sets: result = &quot;male&quot;\n[b:2l2eo6sy]-&gt; player.gender_string = result[/b:2l2eo6sy]\n-&gt; msg (&quot;You are a &quot; + result + &quot;.&quot;)\n-&gt; // outputs: You are a male.\n}\n\nin your (for example) &quot;look at ~ look ~ pov_description ~ whatever it called&quot; other script&#058;\n\nmsg (&quot;Gender: &quot; + player.gender_string)\n// outputs: Gender: male\n\n----------\n\nAttributes (global, permanent, saved ~ load'able, usable in any script within the game, attached to an Object):\n\n(so long as the object, that the attribute is attached to, still exists, of course, lol)\n\nObject.Attribute = Expression_or_Value\n\ncustom examples:\n\nHK.strength_integer = 100\nHK.clothes_object_list = split (&quot;shirt;pants;shoes;socks&quot;,&quot;;&quot;)\nHK.gender_string = &quot;male&quot;\nHK.damage_double = 593.72\nHK.dead_boolean = false\nHK.favorite_colors_string_list = split (&quot;black;red&quot;,&quot;;&quot;)\nHK.fight_script = (see below)\netc...\n\n&lt;object name=&quot;HK&quot;&gt;\n-&gt; &lt;inherit name=&quot;editor_object&quot;&gt;\n-&gt; &lt;attr name=&quot;strength_integer&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;clothes_object_list&quot; type=&quot;simpleobjectlist&quot;&gt;shirt;pants;socks;shoes&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;gender_string&quot; type=&quot;string&quot;&gt;male&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;damage_double&quot; type=&quot;double&quot;&gt;593.72&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;dead_boolean&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;favorite_colors_string_list&quot; type=&quot;simplestringlist&quot;&gt;black;red&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;fight_script&quot; type=&quot;script&quot;&gt;&lt;![CDATA[\n-&gt;-&gt; if (HK.dead=true) {\n-&gt;-&gt;-&gt; msg (&quot;HK is already dead, silly.&quot;)\n-&gt;-&gt; } else if (HK.dead=false) {\n-&gt;-&gt;-&gt; HK.hp_integer = HK.hp_integer - venzen.damage_integer\n-&gt;-&gt;-&gt; if (HK.hp &lt;= 0) {\n-&gt;-&gt;-&gt;-&gt; HK.dead_boolean = true\n-&gt;-&gt;-&gt;-&gt; msg (&quot;You killed HK&quot;)\n-&gt;-&gt;-&gt; }\n-&gt;-&gt; }\n-&gt; &lt;/attr&gt;\n&lt;/object&gt;\n\nan &quot;Analyze&quot; Spell's Verb's partial and quasi Script&#058;\n\n(it's able to 'call upon ~ load' &quot;HK's&quot; attributes, even though it's a different script from a different source)\n\nmsg (&quot;Dead: &quot; + HK.dead_boolean)\nmsg (&quot;Gender: &quot; + HK.gender_string)\nmsg (&quot;Damage: &quot; + HK.damage_integer)\netc etc etc\n\n// outputs:\n// Dead: false_or_true (depending whether you already killed HK or not, lol)\n// Gender: male\n// Damage: 593.72\n// etc etc etc\n\n------------------------------\n\nin the GUI~Editor:\n\njust &quot;add&quot; the attributes to an Object\n\n&quot;whatever&quot; Object -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt; (set it up)\n\nand~or within the scripting, for making~using Attributes:\n\n&quot;whatever&quot; Object -&gt; Verb (Tab) -&gt; Add a script -&gt; variables -&gt; set a variable or attribute -&gt; Object.Attribute = Expression_or_Value\n\nas for variables, they can only be created within~via the scripting, for example:\n\n&quot;whatever&quot; Object -&gt; Verb (Tab) -&gt; Add a script -&gt; variables -&gt; set a variable or attribute -&gt; Variable = Expression_or_Value\n\n-----------------------------\n\nif you want to display the attributes during game play on the pane on the right side, then you must create~add~attach the Attributes to the &quot;game&quot; Object or the Player Objects, such as the default &quot;player&quot; Player Object, or your own custom (such as &quot;HK&quot; and &quot;venzen&quot;) Player Objects, as these are the only Objects that the built-in special &quot;statusattributes&quot; (string dictionary) Attributes are attached to, which causes the Attributes' displayment during game play on the right pane.\n\n&quot;game&quot; Object -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;\n\nAttribute Name: turns\nAttribute Type: int (integer)\nAttribute Value: 0\n\n&quot;game&quot; Object -&gt; Attributes (Tab) -&gt; Status Attributes -&gt; Add -&gt;\n\nName: turns\nField...whatever it is called (Value): Turns: !\n\n// ouputs in the right pane, during game play: Turns: 0\n\nor\n\nreplace the &quot;game&quot; Object with the default &quot;player&quot; Player Object, or a custom Player Object, such as &quot;HK&quot; or &quot;venzen&quot;.",
      "EditableFormat": "bbcode",
      "HTML": "as I forgot to explain in my post, jayna has done so for you, hehe.<br/><br/>so, as jayna said already (just further explanation~commentary by me):<br/><br/>Variable (local, temporary, non-saved ~ non-load'able, only usable within its scripting, NOT attached to an Object):<br/><br/>Variable = Expression_or_Value<br/><br/>custom example (&quot;you_go_first&quot;):<br/><br/>you_go_first = false<br/>if (self.speed &gt; enemy.speed) {<br/>-&gt; you_go_first = true<br/>}<br/>if (you_go_first = true) {<br/>-&gt; enemy.hp = enemy.hp - self.damage<br/>-&gt; msg (&quot;You get to go first, and damage the enemy.&quot;)<br/>} else if (you_go_first = false) {<br/>-&gt; self.hp = self.hp - enemy.damage<br/>-&gt; msg (&quot;The enemy got to go first and damaged you.,&quot;)<br/>}<br/><br/>// notice that &quot;enemy.hp&quot;, &quot;self.hp&quot;, &quot;self.damage&quot;, &quot;enemy.damage&quot;, &quot;self.speed&quot;, and &quot;enemy.speed&quot; are Attributes, NOT Variables. They can be used in other scripts, but &quot;you_go_first&quot; can not: ~ &quot;ERROR, missing or unknown variable&quot;<br/><br/>a built-in example (&quot;result&quot;):<br/><br/>show menu (&quot;What is your gender?&quot;, split (&quot;male;female&quot;,&quot;;&quot;), false) {<br/>-&gt; // you choose &quot;male&quot;<br/>-&gt; // quest automatically sets: result = &quot;male&quot;<br/>-&gt; msg (&quot;You are a &quot; + result + &quot;.&quot;)<br/>-&gt; // outputs: You are a male.<br/>}<br/><br/>// by the way: ' split (male;female&quot;,&quot;;&quot;) ' is also a variable too, as it also is not attached to an Object<br/><br/>--------<br/><br/>if you want to use &quot;male&quot; elsewhere (in other scripts), then you have to do this (an example):<br/><br/>show menu (&quot;What is your gender?&quot;, split (&quot;male;female&quot;,&quot;;&quot;), false) {<br/>-&gt; // you choose &quot;male&quot;<br/>-&gt; // quest automatically sets: result = &quot;male&quot;<br/><span style=\"font-weight:bold;\">-&gt; player.gender_string = result</span><br/>-&gt; msg (&quot;You are a &quot; + result + &quot;.&quot;)<br/>-&gt; // outputs: You are a male.<br/>}<br/><br/>in your (for example) &quot;look at ~ look ~ pov_description ~ whatever it called&quot; other script&#058;<br/><br/>msg (&quot;Gender: &quot; + player.gender_string)<br/>// outputs: Gender: male<br/><br/>----------<br/><br/>Attributes (global, permanent, saved ~ load'able, usable in any script within the game, attached to an Object):<br/><br/>(so long as the object, that the attribute is attached to, still exists, of course, lol)<br/><br/>Object.Attribute = Expression_or_Value<br/><br/>custom examples:<br/><br/>HK.strength_integer = 100<br/>HK.clothes_object_list = split (&quot;shirt;pants;shoes;socks&quot;,&quot;;&quot;)<br/>HK.gender_string = &quot;male&quot;<br/>HK.damage_double = 593.72<br/>HK.dead_boolean = false<br/>HK.favorite_colors_string_list = split (&quot;black;red&quot;,&quot;;&quot;)<br/>HK.fight_script = (see below)<br/>etc...<br/><br/>&lt;object name=&quot;HK&quot;&gt;<br/>-&gt; &lt;inherit name=&quot;editor_object&quot;&gt;<br/>-&gt; &lt;attr name=&quot;strength_integer&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;clothes_object_list&quot; type=&quot;simpleobjectlist&quot;&gt;shirt;pants;socks;shoes&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;gender_string&quot; type=&quot;string&quot;&gt;male&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;damage_double&quot; type=&quot;double&quot;&gt;593.72&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;dead_boolean&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;favorite_colors_string_list&quot; type=&quot;simplestringlist&quot;&gt;black;red&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;fight_script&quot; type=&quot;script&quot;&gt;&lt;![CDATA[<br/>-&gt;-&gt; if (HK.dead=true) {<br/>-&gt;-&gt;-&gt; msg (&quot;HK is already dead, silly.&quot;)<br/>-&gt;-&gt; } else if (HK.dead=false) {<br/>-&gt;-&gt;-&gt; HK.hp_integer = HK.hp_integer - venzen.damage_integer<br/>-&gt;-&gt;-&gt; if (HK.hp &lt;= 0) {<br/>-&gt;-&gt;-&gt;-&gt; HK.dead_boolean = true<br/>-&gt;-&gt;-&gt;-&gt; msg (&quot;You killed HK&quot;)<br/>-&gt;-&gt;-&gt; }<br/>-&gt;-&gt; }<br/>-&gt; &lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>an &quot;Analyze&quot; Spell's Verb's partial and quasi Script&#058;<br/><br/>(it's able to 'call upon ~ load' &quot;HK's&quot; attributes, even though it's a different script from a different source)<br/><br/>msg (&quot;Dead: &quot; + HK.dead_boolean)<br/>msg (&quot;Gender: &quot; + HK.gender_string)<br/>msg (&quot;Damage: &quot; + HK.damage_integer)<br/>etc etc etc<br/><br/>// outputs:<br/>// Dead: false_or_true (depending whether you already killed HK or not, lol)<br/>// Gender: male<br/>// Damage: 593.72<br/>// etc etc etc<br/><br/>------------------------------<br/><br/>in the GUI~Editor:<br/><br/>just &quot;add&quot; the attributes to an Object<br/><br/>&quot;whatever&quot; Object -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt; (set it up)<br/><br/>and~or within the scripting, for making~using Attributes:<br/><br/>&quot;whatever&quot; Object -&gt; Verb (Tab) -&gt; Add a script -&gt; variables -&gt; set a variable or attribute -&gt; Object.Attribute = Expression_or_Value<br/><br/>as for variables, they can only be created within~via the scripting, for example:<br/><br/>&quot;whatever&quot; Object -&gt; Verb (Tab) -&gt; Add a script -&gt; variables -&gt; set a variable or attribute -&gt; Variable = Expression_or_Value<br/><br/>-----------------------------<br/><br/>if you want to display the attributes during game play on the pane on the right side, then you must create~add~attach the Attributes to the &quot;game&quot; Object or the Player Objects, such as the default &quot;player&quot; Player Object, or your own custom (such as &quot;HK&quot; and &quot;venzen&quot;) Player Objects, as these are the only Objects that the built-in special &quot;statusattributes&quot; (string dictionary) Attributes are attached to, which causes the Attributes' displayment during game play on the right pane.<br/><br/>&quot;game&quot; Object -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;<br/><br/>Attribute Name: turns<br/>Attribute Type: int (integer)<br/>Attribute Value: 0<br/><br/>&quot;game&quot; Object -&gt; Attributes (Tab) -&gt; Status Attributes -&gt; Add -&gt;<br/><br/>Name: turns<br/>Field...whatever it is called (Value): Turns: !<br/><br/>// ouputs in the right pane, during game play: Turns: 0<br/><br/>or<br/><br/>replace the &quot;game&quot; Object with the default &quot;player&quot; Player Object, or a custom Player Object, such as &quot;HK&quot; or &quot;venzen&quot;.",
      "PostDate": "2014-02-20T00:23:02+00:00",
      "LastEditDate": null
    }
  ]
}
