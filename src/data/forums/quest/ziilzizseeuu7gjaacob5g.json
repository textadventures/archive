{
  "Topic": {
    "TopicId": "ziilzizseeuu7gjaacob5g",
    "ForumId": "10",
    "Title": "Making 2 Sequential Menus, Program Forgets Choice from 1st menu",
    "LastUpdated": "2016-12-10T01:17:29.01736Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "82d971b4-7fd1-4d5e-ade2-9218deb85315",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6bf915571362451733db8730696fe55d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is a continuation of my previous post from yesterday --\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/cvl4pkshieugtcn80rjkyg/how-to-make-showmenu-display-inventory-objectlists\r\n\r\nFirst of all, thank you Pertex for your help.  I incorporated your code and it works.  After some tinkering, both menus show up.\r\n\r\nTo recap: I've made a \"trade\" verb that brings up 2 menus: one displays the player's inventory (asking what the player offers) and the other displays a merchant's sell list (asking what the player wants). Here's the updated code:\r\n\r\n```\r\ngivableList = NewStringList()\r\nforeach (item, ScopeInventory()) {\r\n  list add (givableList, item.name)\r\n}\r\nShowMenu (\"What do you offer?\", givableList, true) {\r\n  OfferedItem = GetObject(result)\r\n  receivableList = NewStringList()\r\n  foreach (item, ScopeVisible()) {\r\n    if (HasAttribute(item, \"MerchantSell\")) {\r\n      list add (receivableList, item.name)\r\n    }\r\n  }\r\n  ShowMenu (\"What do you want?\", receivableList, true) {\r\n    WantedItem = GetObject(result)\r\n    if (OfferedItem = \"fuzzy_moss\" or OfferedItem = \"fragrant_herbs\") {\r\n      MoveObject (OfferedItem, Inactive)\r\n      AddToInventory (WantedItem)\r\n    }\r\n    else {\r\n      msg (\"The merchant does not want that.\")\r\n    }\r\n  }\r\n}\r\n```\r\nThe only snag now is that I get this error after I make the 2nd choice (WantedItem):\r\n\r\nError running script: Error compiling expression 'OfferedItem = \"fuzzy_moss\" or OfferedItem = \"fragrant_herbs\"': Unknown object or variable 'OfferedItem'\r\n\r\nI'm assuming that this error comes up because Quest has already forgotten what \"OfferedItem\" is from the 1st menu choice.  So I need a way to make Quest remember both the \"OfferedItem\" and \"WantedItem\" data simultaneously in order to finish the trade.  Is there a way(s) to do that?  Any code would be helpful.  Thanks in advance.",
      "EditableFormat": "markdown",
      "HTML": "<p>This is a continuation of my previous post from yesterday --</p>\n<p>http://textadventures.co.uk/forum/quest/topic/cvl4pkshieugtcn80rjkyg/how-to-make-showmenu-display-inventory-objectlists</p>\n<p>First of all, thank you Pertex for your help.  I incorporated your code and it works.  After some tinkering, both menus show up.</p>\n<p>To recap: I've made a \"trade\" verb that brings up 2 menus: one displays the player's inventory (asking what the player offers) and the other displays a merchant's sell list (asking what the player wants). Here's the updated code:</p>\n<pre><code>givableList = NewStringList()\nforeach (item, ScopeInventory()) {\n  list add (givableList, item.name)\n}\nShowMenu (\"What do you offer?\", givableList, true) {\n  OfferedItem = GetObject(result)\n  receivableList = NewStringList()\n  foreach (item, ScopeVisible()) {\n    if (HasAttribute(item, \"MerchantSell\")) {\n      list add (receivableList, item.name)\n    }\n  }\n  ShowMenu (\"What do you want?\", receivableList, true) {\n    WantedItem = GetObject(result)\n    if (OfferedItem = \"fuzzy_moss\" or OfferedItem = \"fragrant_herbs\") {\n      MoveObject (OfferedItem, Inactive)\n      AddToInventory (WantedItem)\n    }\n    else {\n      msg (\"The merchant does not want that.\")\n    }\n  }\n}\n</code></pre>\n<p>The only snag now is that I get this error after I make the 2nd choice (WantedItem):</p>\n<p>Error running script: Error compiling expression 'OfferedItem = \"fuzzy_moss\" or OfferedItem = \"fragrant_herbs\"': Unknown object or variable 'OfferedItem'</p>\n<p>I'm assuming that this error comes up because Quest has already forgotten what \"OfferedItem\" is from the 1st menu choice.  So I need a way to make Quest remember both the \"OfferedItem\" and \"WantedItem\" data simultaneously in order to finish the trade.  Is there a way(s) to do that?  Any code would be helpful.  Thanks in advance.</p>\n\n",
      "PostDate": "2016-12-10T01:17:29.01736Z",
      "LastEditDate": null
    },
    {
      "PostId": "e06453e4-8f24-4012-970e-f25313e70125",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "your 'Offered_Item' Object Variable holds an Object Value // because it's Value is an Object reference, the Variable is thus an Object Variable (quest is able to parse the Value and thus determine/make the Variable's Type to be matching its Value), just for your information/understanding\r\n\r\nwhereas, when you do, OfferedItem = \"fuzzy_moss\" or OfferedItem = \"fragrant_herbs\", the \"fuzzy_moss\" and \"fragrant_herbs are String Values, thus you've got a mismatch of data/Attribute Types, so either do, OfferedItem.name = \"fuzzy_moss\" or OfferedItem.name = \"fragrant_herbs\", or, OfferedItem = fuzzy_moss or OfferedItem = fragrant_herbs\r\n\r\nif you still get an error, then you got a scope issue, which means you got to use Attribute VARIABLES (NAME_OF_OBJECT.NAME_OF_ATTRIBUTE ---or--- NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = VALUE_OR_EXPRESSION), as they're global/permanent (so long as the Object containing them exists of course), for example:\r\n\r\n(Variable VARIABLES are local: NAME_OF_Variable ---or--- NAME_OF_Variable = VALUE_OR_EXPRESSION)\r\n\r\n```\r\ngame.givableList = NewStringList()\r\nforeach (item, ScopeInventory()) {\r\n  list add (game.givableList, item.name)\r\n}\r\nShowMenu (\"What do you offer?\", game.givableList, true) {\r\n  game.OfferedItem = GetObject(result)\r\n  game.receivableList = NewStringList()\r\n  foreach (item, ScopeVisible()) {\r\n    if (HasAttribute(item, \"MerchantSell\")) {\r\n      list add (game.receivableList, item.name)\r\n    }\r\n  }\r\n  ShowMenu (\"What do you want?\", game.receivableList, true) {\r\n    game.WantedItem = GetObject(result)\r\n    if (game.OfferedItem.name = \"fuzzy_moss\" or game.OfferedItem.name = \"fragrant_herbs\") {\r\n      MoveObject (game.OfferedItem, Inactive)\r\n      AddToInventory (game.WantedItem)\r\n    }\r\n    else {\r\n      msg (\"The merchant does not want that.\")\r\n    }\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>your 'Offered_Item' Object Variable holds an Object Value // because it's Value is an Object reference, the Variable is thus an Object Variable (quest is able to parse the Value and thus determine/make the Variable's Type to be matching its Value), just for your information/understanding</p>\n<p>whereas, when you do, OfferedItem = \"fuzzy_moss\" or OfferedItem = \"fragrant_herbs\", the \"fuzzy_moss\" and \"fragrant_herbs are String Values, thus you've got a mismatch of data/Attribute Types, so either do, OfferedItem.name = \"fuzzy_moss\" or OfferedItem.name = \"fragrant_herbs\", or, OfferedItem = fuzzy_moss or OfferedItem = fragrant_herbs</p>\n<p>if you still get an error, then you got a scope issue, which means you got to use Attribute VARIABLES (NAME_OF_OBJECT.NAME_OF_ATTRIBUTE ---or--- NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = VALUE_OR_EXPRESSION), as they're global/permanent (so long as the Object containing them exists of course), for example:</p>\n<p>(Variable VARIABLES are local: NAME_OF_Variable ---or--- NAME_OF_Variable = VALUE_OR_EXPRESSION)</p>\n<pre><code>game.givableList = NewStringList()\nforeach (item, ScopeInventory()) {\n  list add (game.givableList, item.name)\n}\nShowMenu (\"What do you offer?\", game.givableList, true) {\n  game.OfferedItem = GetObject(result)\n  game.receivableList = NewStringList()\n  foreach (item, ScopeVisible()) {\n    if (HasAttribute(item, \"MerchantSell\")) {\n      list add (game.receivableList, item.name)\n    }\n  }\n  ShowMenu (\"What do you want?\", game.receivableList, true) {\n    game.WantedItem = GetObject(result)\n    if (game.OfferedItem.name = \"fuzzy_moss\" or game.OfferedItem.name = \"fragrant_herbs\") {\n      MoveObject (game.OfferedItem, Inactive)\n      AddToInventory (game.WantedItem)\n    }\n    else {\n      msg (\"The merchant does not want that.\")\n    }\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2016-12-10T07:10:13.0018353Z",
      "LastEditDate": "2016-12-10T07:16:34.8432688Z"
    },
    {
      "PostId": "219905a0-ed71-4788-98c3-99587a79c3fe",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6bf915571362451733db8730696fe55d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you much, Hegemon.  The second solution worked!  I also implemented your first correction, making string values consistent with themselves, and the same with object values.  So anytime I see quotes or \".name\", that indicates a string value.\r\n\r\nAnd adding the prefix \"game.\" makes something a global attribute or attribute variable.  Just out of curiosity, do you know where the \"game.givableList\", \"game.OfferedItem\", etc. attribute variables are stored in the editor program?  I didn't see them under the game or player attributes tab.\r\n\r\nThanks again for your help.  I know it must get repetitive explaining the same concepts over and over again!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you much, Hegemon.  The second solution worked!  I also implemented your first correction, making string values consistent with themselves, and the same with object values.  So anytime I see quotes or \".name\", that indicates a string value.</p>\n<p>And adding the prefix \"game.\" makes something a global attribute or attribute variable.  Just out of curiosity, do you know where the \"game.givableList\", \"game.OfferedItem\", etc. attribute variables are stored in the editor program?  I didn't see them under the game or player attributes tab.</p>\n<p>Thanks again for your help.  I know it must get repetitive explaining the same concepts over and over again!</p>\n\n",
      "PostDate": "2016-12-10T08:53:10.4789436Z",
      "LastEditDate": null
    },
    {
      "PostId": "b1eea055-727e-4345-95be-efce0c7eb80e",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you can use/have any Object contain Attributes, for examples:\r\n\r\ngame.state = 0\r\nplayer.life = 999\r\norc.dead = false\r\nHK.strength = 100\r\nDcoder.endurance = 100\r\nglobal_data_object.sex_list = split (\"male;female\", \";\")\r\n\r\nAttribute VARIABLE's syntax:\r\n\r\nNAME_OF_OBJECT.NAME_OF_ATTRIBUTE\r\n~or~\r\nNAME_OF_OBJECT.NAME_OF_ATTRIBUTE = VALUE_OR_EXPRESSION\r\n\r\n---------\r\n\r\nI believe you can't find them under the 'whatever/game' Object's 'Attribute' Tab's 'Attribute' Box, as you're doing them as scripting (they'll get created+set when the scripts are run/executed/activated. scripting = runtime)\r\n\r\nif you want to create them prior to and thus for/at compile-time:\r\n\r\ndirectly in code:\r\n\r\n```\r\n<game name=\"example_game\">\r\n  <attr name=\"state\" type=\"int\">0</attr>\r\n</game>\r\n\r\n<object name=\"room\">\r\n  <object name=\"player\">\r\n    <attr name=\"life\" type=\"int\">999</attr>\r\n  </object>\r\n</object>\r\n\r\n<object name=\"orc\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"dead\" type=\"boolean\">false</attr>\r\n</object>\r\n\r\n<object name=\"HK\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"strength\" type=\"int\">100</attr>\r\n</object>\r\n\r\n<object name=\"Dcoder\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"endurance\" type=\"int\">100</attr>\r\n</object>\r\n\r\n<object name=\"global_data_object\">\r\n  <attr name=\"sex_list\" type=\"simplestringlist\">male;female</attr>\r\n</object>\r\n```\r\n\r\n---------\r\n\r\nor, via the GUI/Editor: 'whatever' Object -> 'Attributes' Tab -> Attributes -> Add -> (set it up)\r\n\r\n----------\r\n\r\nusing either of these methods, should have them showing up in the GUI/Editor's 'whatever' Object's 'Attribute' Tab's 'Attribute' Box\r\n\r\n------------\r\n\r\nP.S.\r\n\r\nyou don't have to have all of your VARIABLES be Attributes, I just did that in my example of your code, to be safe. You can just find the Variable/s causing the issue, and jsut have those be Attributes.\r\n\r\nVariables are local, onc their containing scripting is finished/terminated, they're deleted/destroyed (so they can't be used outside of their containing scripting), and thus they have what is called: local scope.\r\n\r\n----------\r\n\r\nP.S.S.\r\n\r\nyes, quest recognizes/parses anything within/encased-in double quotes as a String Value\r\n\r\nanything not in double quotes is recognized/parsed as an Object Value, except for the special/reserved keywords of 'true' and 'false' as these are for a Boolean Attribute's Values, and maybe a few other exceptions too, but let's keep this simple/brief, lol.\r\n\r\n--------\r\n\r\nP.S.S.S.\r\n\r\nVARIABLES: 3 types (keeping this simple)\r\n-> Variables (local): NAME_OF_Variable --or-- NAME_OF_Variable = VALUE_OR_EXPRESSION\r\n-> Attributes (global - so long as the Object exists/still exists): NAME_OF_OBJECT.NAME_OF_Attribute --or-- NAME_OF_OBJECT.NAME_OF_Attribute = VALUE_OR_EXPRESSION\r\n-> Parameters: deals with Functions and Commands",
      "EditableFormat": "markdown",
      "HTML": "<p>you can use/have any Object contain Attributes, for examples:</p>\n<p>game.state = 0<br>\nplayer.life = 999<br>\norc.dead = false<br>\nHK.strength = 100<br>\nDcoder.endurance = 100<br>\nglobal_data_object.sex_list = split (\"male;female\", \";\")</p>\n<p>Attribute VARIABLE's syntax:</p>\n<p>NAME_OF_OBJECT.NAME_OF_ATTRIBUTE<br>\n~or~<br>\nNAME_OF_OBJECT.NAME_OF_ATTRIBUTE = VALUE_OR_EXPRESSION</p>\n<hr>\n<p>I believe you can't find them under the 'whatever/game' Object's 'Attribute' Tab's 'Attribute' Box, as you're doing them as scripting (they'll get created+set when the scripts are run/executed/activated. scripting = runtime)</p>\n<p>if you want to create them prior to and thus for/at compile-time:</p>\n<p>directly in code:</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"state\" type=\"int\"&gt;0&lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;object name=\"room\"&gt;\n  &lt;object name=\"player\"&gt;\n    &lt;attr name=\"life\" type=\"int\"&gt;999&lt;/attr&gt;\n  &lt;/object&gt;\n&lt;/object&gt;\n\n&lt;object name=\"orc\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"dead\" type=\"boolean\"&gt;false&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"HK\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"strength\" type=\"int\"&gt;100&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"Dcoder\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"endurance\" type=\"int\"&gt;100&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"global_data_object\"&gt;\n  &lt;attr name=\"sex_list\" type=\"simplestringlist\"&gt;male;female&lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p>or, via the GUI/Editor: 'whatever' Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (set it up)</p>\n<hr>\n<p>using either of these methods, should have them showing up in the GUI/Editor's 'whatever' Object's 'Attribute' Tab's 'Attribute' Box</p>\n<hr>\n<p>P.S.</p>\n<p>you don't have to have all of your VARIABLES be Attributes, I just did that in my example of your code, to be safe. You can just find the Variable/s causing the issue, and jsut have those be Attributes.</p>\n<p>Variables are local, onc their containing scripting is finished/terminated, they're deleted/destroyed (so they can't be used outside of their containing scripting), and thus they have what is called: local scope.</p>\n<hr>\n<p>P.S.S.</p>\n<p>yes, quest recognizes/parses anything within/encased-in double quotes as a String Value</p>\n<p>anything not in double quotes is recognized/parsed as an Object Value, except for the special/reserved keywords of 'true' and 'false' as these are for a Boolean Attribute's Values, and maybe a few other exceptions too, but let's keep this simple/brief, lol.</p>\n<hr>\n<p>P.S.S.S.</p>\n<p>VARIABLES: 3 types (keeping this simple)<br>\n-&gt; Variables (local): NAME_OF_Variable --or-- NAME_OF_Variable = VALUE_OR_EXPRESSION<br>\n-&gt; Attributes (global - so long as the Object exists/still exists): NAME_OF_OBJECT.NAME_OF_Attribute --or-- NAME_OF_OBJECT.NAME_OF_Attribute = VALUE_OR_EXPRESSION<br>\n-&gt; Parameters: deals with Functions and Commands</p>\n\n",
      "PostDate": "2016-12-10T14:59:49.6525808Z",
      "LastEditDate": "2016-12-10T15:23:04.8664746Z"
    },
    {
      "PostId": "7820f2e1-6600-4cfa-8c99-639edce7cead",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6bf915571362451733db8730696fe55d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you, sensei!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you, sensei!</p>\n\n",
      "PostDate": "2016-12-11T01:20:04.719716Z",
      "LastEditDate": null
    }
  ]
}
