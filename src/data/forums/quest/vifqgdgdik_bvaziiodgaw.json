{
  "Topic": {
    "TopicId": "vifqgdgdik_bvaziiodgaw",
    "ForumId": "10",
    "Title": "Renaming the 'Give' Command?",
    "LastUpdated": "2016-07-27T16:21:56.6901356Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "1826d917-d6a0-4f2d-9c10-0b632a04d7d2",
      "UserId": 30958,
      "Username": "nellanutella",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cd2bea6ad9adddd12983f06d37f1bd8a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is there a way to rename the 'give' command? The way the 'Ask about' command functions doesn't work for the gameplay i'm looking for, so I thought that using 'give' instead of 'ask' and making topics of conversation objects that could be collected in the inventory would be ideal.\r\n\r\nI'm very new to this, so I'm not totally sure if this is possible. Any help would be much appreciated. Thanks in advance!",
      "EditableFormat": "markdown",
      "HTML": "<p>Is there a way to rename the 'give' command? The way the 'Ask about' command functions doesn't work for the gameplay i'm looking for, so I thought that using 'give' instead of 'ask' and making topics of conversation objects that could be collected in the inventory would be ideal.</p>\n<p>I'm very new to this, so I'm not totally sure if this is possible. Any help would be much appreciated. Thanks in advance!</p>\n\n",
      "PostDate": "2016-07-27T16:21:56.6901356Z",
      "LastEditDate": null
    },
    {
      "PostId": "677f5e71-a1d0-4750-88a5-9a42ee24b3f0",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm not sure I entirely understand your goal.  You want the player to type 'give sword to fred' and that start a conversation or illicit a response with Fred?\r\n\r\nIf so, you can run any script you want when you try to give objects to any NPC.  Clarify for me and I'd be glad to help further.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not sure I entirely understand your goal.  You want the player to type 'give sword to fred' and that start a conversation or illicit a response with Fred?</p>\n<p>If so, you can run any script you want when you try to give objects to any NPC.  Clarify for me and I'd be glad to help further.</p>\n\n",
      "PostDate": "2016-07-27T18:58:16.7781338Z",
      "LastEditDate": null
    },
    {
      "PostId": "4e4f8a06-ef5c-45ef-9461-d95dcf8d35b8",
      "UserId": 30958,
      "Username": "nellanutella",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cd2bea6ad9adddd12983f06d37f1bd8a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What I wanted to do was to make the results of talking to someone change based on what the player has already done or discovered. I'm making a mystery game, so I wanted to make sure characters couldn't get tests done on evidence they haven't collected or ask about the death of characters that haven't died yet. \r\n\r\nMy plan was to make a lot of objects, and when the player 'gives' an item to a character, they would respond with a conversation. So if i make an object named 'Footprints' and 'Give footprints to Officer Jack' He would tell the player about the footprints. The reason I want to rename 'give' is so the player will be able to review what they know so they don't forget to ask about any pieces of evidence they find, and also so talking about concepts instead of objects makes more sense, for instance 'Give motive to David' versus 'Ask David about motive'\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>What I wanted to do was to make the results of talking to someone change based on what the player has already done or discovered. I'm making a mystery game, so I wanted to make sure characters couldn't get tests done on evidence they haven't collected or ask about the death of characters that haven't died yet.</p>\n<p>My plan was to make a lot of objects, and when the player 'gives' an item to a character, they would respond with a conversation. So if i make an object named 'Footprints' and 'Give footprints to Officer Jack' He would tell the player about the footprints. The reason I want to rename 'give' is so the player will be able to review what they know so they don't forget to ask about any pieces of evidence they find, and also so talking about concepts instead of objects makes more sense, for instance 'Give motive to David' versus 'Ask David about motive'</p>\n\n",
      "PostDate": "2016-07-28T00:19:18.690753Z",
      "LastEditDate": null
    },
    {
      "PostId": "7ca2b1fd-ad6c-4e8c-8b21-1304f5c2f8e9",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There's many ways of doing dialogue/conversion, from very simple design to very advanced design. I'd recommend taking a look at the libraries by Pixie and Jay, and see if you like any of them and/or just study them, to examine how conversation/dialogue can be done, from simple design to advacned design, to get an idea of what you want for your game. Jay has a really advanced dialogue / conversion game, along with his game/source code publically available, called 'Spondre' (its name is a re-arranging of the letters in 'respond'), that you can play and/or study. It's a really awesome/interesting game, btw. Pixie also has some really good libraries  and/or games on conversation/dialogue that you want to look at as well.\r\n\r\nDialogue/Conversion is not easy to implement, as it is very complex with lots of topics and in trying to handle them, unless you keep it extremely simple. If you're not a good coder, it can get very messy, if you try to do advanced conversion/dialogue, as you need to be able to use List/Dictionary Attributes, and, Functions+Parameters or Objects+Delegates, to handle and work with, the topics, adding/removing them, based upon what's already been asked about or not asked about and etc, to keep the code from being a horrible mess.\r\n\r\nHowever, I'm too lazy to dig through my posts for some examples of how to do simple (but bad/poor/inefficient) designs using String/Integer Attributes as indicators/flags for determining the responses.\r\n\r\nthe basic idea is this (using Integer Attributes for this example):\r\n\r\n```\r\n<object name=\"room\">\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <attr name=\"gold\" type=\"int\">0</attr>\r\n   <attr name=\"parent\" type=\"object\">room</attr>\r\n</object>\r\n\r\n<object name=\"npc1\">\r\n  <attr name=\"dialogue\" type=\"int\">0</attr>\r\n  <attr name=\"alias\" type=\"string\">john</attr>\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"dialogue\" type=\"script\">\r\n    // (see below)\r\n  </attr>\r\n  <attr name=\"displayverbs\"type=\"simplestringlist\">dialogue</attr>\r\n</object>\r\n\r\n<object name=\"npc2\">\r\n  <attr name=\"dialogue\" type=\"int\">0</attr>\r\n  <attr name=\"alias\" type=\"string\">jeff</attr>\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"dialogue\" type=\"script\">\r\n    // (see below)\r\n  </attr>\r\n  <attr name=\"displayverbs\"type=\"simplestringlist\">dialogue</attr>\r\n</object>\r\n\r\n<command name=\"dialogue_command\">\r\n  <pattern>dialogue #object#</pattern>\r\n  <script>\r\n    // excluding a few changes needed, see below \r\n  </script>\r\n</command>\r\n\r\n<verb>\r\n  <property>dialogue</property>\r\n  <pattern>dialogue</property>\r\n  <defaultexpression>You can't have a dialogue with that!</defaultexpression>\r\n</verb>\r\n\r\n'npc1' Object's 'dialogue' Verb/Command:\r\n\r\nif (npc1.dialogue = 0) {\r\n  msg (\"Hi, I'm \" + npc1.alias + \". What's you name?\")\r\n  npc1.dialogue = 1\r\n} else if (npc1.dialogue = 1) {\r\n  if (npc2.dialogue = 0) {\r\n    msg (\"If you first go talk to npc1, and then come back, I've got a request for you to do.\")\r\n  } else if (npc2.dialogue = 1) {\r\n    msg (\"Ah, so you've talked to \" + npc2.alias + \". Would you go ask for some water from \" + npc2.gender + \" for me?\")\r\n  } else if (npc2.dialogue = 2) {\r\n    player.gold = player.gold + 100\r\n    msg (\"Thank you for the getting the water, here's your reward: 100 gold\")\r\n    npc1.dialogue = 2\r\n  }\r\n} else if (npc1.dialogue = 2) {\r\n  // blah blah blah\r\n}\r\n\r\n'npc2' Object's 'dialogue' Verb/Command:\r\n\r\n// etc etc etc .... hopefully you get the idea...\r\n```\r\n\r\nsee, this is very messy/cumbersome... using Lists/Dictionaries and Functions+Parameters/Objects+Delegates will make this much more clean/concise and just better in code design, but you got to be a good coder to do/use this of stuff well.",
      "EditableFormat": "markdown",
      "HTML": "<p>There's many ways of doing dialogue/conversion, from very simple design to very advanced design. I'd recommend taking a look at the libraries by Pixie and Jay, and see if you like any of them and/or just study them, to examine how conversation/dialogue can be done, from simple design to advacned design, to get an idea of what you want for your game. Jay has a really advanced dialogue / conversion game, along with his game/source code publically available, called 'Spondre' (its name is a re-arranging of the letters in 'respond'), that you can play and/or study. It's a really awesome/interesting game, btw. Pixie also has some really good libraries  and/or games on conversation/dialogue that you want to look at as well.</p>\n<p>Dialogue/Conversion is not easy to implement, as it is very complex with lots of topics and in trying to handle them, unless you keep it extremely simple. If you're not a good coder, it can get very messy, if you try to do advanced conversion/dialogue, as you need to be able to use List/Dictionary Attributes, and, Functions+Parameters or Objects+Delegates, to handle and work with, the topics, adding/removing them, based upon what's already been asked about or not asked about and etc, to keep the code from being a horrible mess.</p>\n<p>However, I'm too lazy to dig through my posts for some examples of how to do simple (but bad/poor/inefficient) designs using String/Integer Attributes as indicators/flags for determining the responses.</p>\n<p>the basic idea is this (using Integer Attributes for this example):</p>\n<pre><code>&lt;object name=\"room\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;attr name=\"gold\" type=\"int\"&gt;0&lt;/attr&gt;\n   &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"npc1\"&gt;\n  &lt;attr name=\"dialogue\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"alias\" type=\"string\"&gt;john&lt;/attr&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"dialogue\" type=\"script\"&gt;\n    // (see below)\n  &lt;/attr&gt;\n  &lt;attr name=\"displayverbs\"type=\"simplestringlist\"&gt;dialogue&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"npc2\"&gt;\n  &lt;attr name=\"dialogue\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"alias\" type=\"string\"&gt;jeff&lt;/attr&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"dialogue\" type=\"script\"&gt;\n    // (see below)\n  &lt;/attr&gt;\n  &lt;attr name=\"displayverbs\"type=\"simplestringlist\"&gt;dialogue&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;command name=\"dialogue_command\"&gt;\n  &lt;pattern&gt;dialogue #object#&lt;/pattern&gt;\n  &lt;script&gt;\n    // excluding a few changes needed, see below \n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;dialogue&lt;/property&gt;\n  &lt;pattern&gt;dialogue&lt;/property&gt;\n  &lt;defaultexpression&gt;You can't have a dialogue with that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n\n'npc1' Object's 'dialogue' Verb/Command:\n\nif (npc1.dialogue = 0) {\n  msg (\"Hi, I'm \" + npc1.alias + \". What's you name?\")\n  npc1.dialogue = 1\n} else if (npc1.dialogue = 1) {\n  if (npc2.dialogue = 0) {\n    msg (\"If you first go talk to npc1, and then come back, I've got a request for you to do.\")\n  } else if (npc2.dialogue = 1) {\n    msg (\"Ah, so you've talked to \" + npc2.alias + \". Would you go ask for some water from \" + npc2.gender + \" for me?\")\n  } else if (npc2.dialogue = 2) {\n    player.gold = player.gold + 100\n    msg (\"Thank you for the getting the water, here's your reward: 100 gold\")\n    npc1.dialogue = 2\n  }\n} else if (npc1.dialogue = 2) {\n  // blah blah blah\n}\n\n'npc2' Object's 'dialogue' Verb/Command:\n\n// etc etc etc .... hopefully you get the idea...\n</code></pre>\n<p>see, this is very messy/cumbersome... using Lists/Dictionaries and Functions+Parameters/Objects+Delegates will make this much more clean/concise and just better in code design, but you got to be a good coder to do/use this of stuff well.</p>\n\n",
      "PostDate": "2016-07-28T05:22:53.1574617Z",
      "LastEditDate": "2016-07-28T05:34:33.7690726Z"
    },
    {
      "PostId": "06630d43-afff-4662-b17e-b4cfbf4f8ec1",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, you can do this, if you are using the off-line editor.\r\n\r\nAt the bottom left of the screen in a \"Filter\" button, click it and select \"Show library elements\". The list of stuff on the right will suddenly get much bigger. Select the GIVE command, and click the \"copy\" button, top right.\r\n\r\nYou can then rename it, edit the pattern and change the script as you like.\r\n\r\nHave you thought about how you will handle DROP FOOTPRINTS or PUT FOOTPRINTS IN BAG?",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, you can do this, if you are using the off-line editor.</p>\n<p>At the bottom left of the screen in a \"Filter\" button, click it and select \"Show library elements\". The list of stuff on the right will suddenly get much bigger. Select the GIVE command, and click the \"copy\" button, top right.</p>\n<p>You can then rename it, edit the pattern and change the script as you like.</p>\n<p>Have you thought about how you will handle DROP FOOTPRINTS or PUT FOOTPRINTS IN BAG?</p>\n\n",
      "PostDate": "2016-07-28T07:11:14.6112466Z",
      "LastEditDate": null
    },
    {
      "PostId": "17e35419-9442-4619-a4b9-c24e708dae3a",
      "UserId": 30958,
      "Username": "nellanutella",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cd2bea6ad9adddd12983f06d37f1bd8a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks for the leads hegemonkhan! I am not very much of a coder, but i'm trying to be, so studying other code is really helpful.\r\n\r\nI assumed that the offline editor was the same as the online one! Thanks for telling me otherwise, it's a big help! Reviewing my problem again, I found out that the 'ask about' feature has an 'if' script for whether or not an object is in the inventory. That fixes my problems with 'give' but unfortunately i still have issues with the 'inv' command. Can you edit what the 'inv' command is called with the offline editor too?  \r\nAs for dropping and bagging items, since there's no in-game reason to drop evidence, i'm making the evidence undroppable to keep the player from losing anything. Concepts (like motive or time of death) I'm going to have automatically added to the inventory using scripts so the player doesn't need to 'take' them. Oversized or normally unmovable things like a car or footprints are going to be marked as impossible to pick up (so nobody puts a truck in a bag), they'll get added as a topic of conversation instead.  I'm debating whether or not to alert the player that they can ask about a new topic. I'm afraid it would be to obnoxious to be told so frequently, but at the same time without notifications topics might go unnoticed and new players might not figure out the main mechanic is speech rather than pure evidence collecting.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks for the leads hegemonkhan! I am not very much of a coder, but i'm trying to be, so studying other code is really helpful.</p>\n<p>I assumed that the offline editor was the same as the online one! Thanks for telling me otherwise, it's a big help! Reviewing my problem again, I found out that the 'ask about' feature has an 'if' script for whether or not an object is in the inventory. That fixes my problems with 'give' but unfortunately i still have issues with the 'inv' command. Can you edit what the 'inv' command is called with the offline editor too?<br>\nAs for dropping and bagging items, since there's no in-game reason to drop evidence, i'm making the evidence undroppable to keep the player from losing anything. Concepts (like motive or time of death) I'm going to have automatically added to the inventory using scripts so the player doesn't need to 'take' them. Oversized or normally unmovable things like a car or footprints are going to be marked as impossible to pick up (so nobody puts a truck in a bag), they'll get added as a topic of conversation instead.  I'm debating whether or not to alert the player that they can ask about a new topic. I'm afraid it would be to obnoxious to be told so frequently, but at the same time without notifications topics might go unnoticed and new players might not figure out the main mechanic is speech rather than pure evidence collecting.</p>\n\n",
      "PostDate": "2016-07-28T21:42:57.3995465Z",
      "LastEditDate": null
    },
    {
      "PostId": "d02a5e0d-362b-4fcb-b35d-3a4caf04a888",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "if you're interested in learning to code, I can with experience say that quest is an absolutely magnificient way to learn to code, as I myself found quest 4 years ago, having ZERO knowledge in programming, and now I'm taking programming classes in college for my major, and I've been shocked at how well quest has prepared me for them!\r\n\r\nif you want to see my struggles as I quickly jumped into trying to learn to code 4 years ago when I first stumbled upon quest:\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread\r\n\r\nit's a good laugh, looking back on it.",
      "EditableFormat": "markdown",
      "HTML": "<p>if you're interested in learning to code, I can with experience say that quest is an absolutely magnificient way to learn to code, as I myself found quest 4 years ago, having ZERO knowledge in programming, and now I'm taking programming classes in college for my major, and I've been shocked at how well quest has prepared me for them!</p>\n<p>if you want to see my struggles as I quickly jumped into trying to learn to code 4 years ago when I first stumbled upon quest:</p>\n<p>http://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread</p>\n<p>it's a good laugh, looking back on it.</p>\n\n",
      "PostDate": "2016-07-29T01:36:54.0585526Z",
      "LastEditDate": "2016-07-29T01:44:48.6559648Z"
    },
    {
      "PostId": "59e45c00-c60c-4fd0-a3d4-d424809a22dd",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Just a related aside, you could fairly easily incorporate a notebook in the player inventory that could be read.  Then they could read the notebook to\r\nRemember their clues.  Just a thought.",
      "EditableFormat": "markdown",
      "HTML": "<p>Just a related aside, you could fairly easily incorporate a notebook in the player inventory that could be read.  Then they could read the notebook to<br>\nRemember their clues.  Just a thought.</p>\n\n",
      "PostDate": "2016-07-29T02:40:58.7130554Z",
      "LastEditDate": null
    }
  ]
}
