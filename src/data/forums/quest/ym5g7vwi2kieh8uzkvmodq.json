{
  "Topic": {
    "TopicId": "ym5g7vwi2kieh8uzkvmodq",
    "ForumId": "10",
    "Title": "Gamebook: Handling page links based on variables",
    "LastUpdated": "2018-07-27T20:11:16.4245548Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "ee0449e7-375a-4f80-abe7-97dbcacd9be9",
      "UserId": 369653,
      "Username": "Blindtextdev",
      "AvatarUrl": "https://secure.gravatar.com/avatar/c624d7b41e98373bec23831a1834b649?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi,\r\nnext question. I'm working on a gamebook with a status page. If you flip to that page, all essential character stati get displayed. Of course, the player should be able to flip back to where they left. So, I tried to do this:\r\n    AddPageLink(Status, game.current_page, \"Back to game\")\r\nThis is, at least in my imagination, very intuitive; AddPageLink() gets from which page to which page a link should be added with a link text as defined in the 3rd parameter. Funny thing is that the link doesn't get displayed; Neiter if I add this code on the Status page itself, nor on another page. game.current_page would contain a valid page object, for example Start if I had a page named Start.\r\nAlternatively, I tried printing the expression:\r\n    Msg(\"{page:\" + game.current_page + \":Back to game}\")\r\nThis leads to a funny result: Link gets displayed as Start:Back to game (if variable contained Start). \r\nIf I click on the link, an error occurs stating that there's no page named Object. Apparently, my expression doesn't get interpreted correctly.\r\nCan someone tell me how to fix either of those issues?\r\nThanks in advance.\r\nPS. I can't find the AddPageLink()-function in the docs. Looked in functions, and javascript... Neiter contained that function.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi,<br>\nnext question. I'm working on a gamebook with a status page. If you flip to that page, all essential character stati get displayed. Of course, the player should be able to flip back to where they left. So, I tried to do this:<br>\nAddPageLink(Status, game.current_page, \"Back to game\")<br>\nThis is, at least in my imagination, very intuitive; AddPageLink() gets from which page to which page a link should be added with a link text as defined in the 3rd parameter. Funny thing is that the link doesn't get displayed; Neiter if I add this code on the Status page itself, nor on another page. game.current_page would contain a valid page object, for example Start if I had a page named Start.<br>\nAlternatively, I tried printing the expression:<br>\nMsg(\"{page:\" + game.current_page + \":Back to game}\")<br>\nThis leads to a funny result: Link gets displayed as Start:Back to game (if variable contained Start).<br>\nIf I click on the link, an error occurs stating that there's no page named Object. Apparently, my expression doesn't get interpreted correctly.<br>\nCan someone tell me how to fix either of those issues?<br>\nThanks in advance.<br>\nPS. I can't find the AddPageLink()-function in the docs. Looked in functions, and javascript... Neiter contained that function.</p>\n\n",
      "PostDate": "2018-07-27T20:11:16.4245548Z",
      "LastEditDate": "2018-07-27T21:03:35.0148071Z",
      "link": null
    },
    {
      "PostId": "9cc3560d-32e9-4dd6-99bb-471546296bfa",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "On the latter one, you are trying to add strings together with the `+` operator, but one of them isn't a string.\r\n\r\n`game.current_page` is apparently an object (page), so when it gets added to a string, it is converted to the string \"Object: Start\".\r\nSo the message that gets passed to the text processor is: `\"{page:Object: Start:Back to game}\"`\r\n\r\nIf you want the text to contain the name of the page, look at its name attribute.\r\nSo:\r\n```\r\nmsg(\"{page:\" + game.current_page.name + \":Back to game}\")\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>On the latter one, you are trying to add strings together with the <code>+</code> operator, but one of them isn't a string.</p>\n<p><code>game.current_page</code> is apparently an object (page), so when it gets added to a string, it is converted to the string \"Object: Start\".<br>\nSo the message that gets passed to the text processor is: <code>\"{page:Object: Start:Back to game}\"</code></p>\n<p>If you want the text to contain the name of the page, look at its name attribute.<br>\nSo:</p>\n<pre><code>msg(\"{page:\" + game.current_page.name + \":Back to game}\")\n</code></pre>\n\n",
      "PostDate": "2018-07-27T21:35:57.672249Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c2d76643-466e-4865-aada-f9208b7c8cd8",
      "UserId": 369653,
      "Username": "Blindtextdev",
      "AvatarUrl": "https://secure.gravatar.com/avatar/c624d7b41e98373bec23831a1834b649?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "UGH! Type convertion. Of course! (Should've used msg(\"\" + game.current_page) to see the result first...)\r\nThanks. Feel like a moro now, but at least I can move on xD",
      "EditableFormat": "markdown",
      "HTML": "<p>UGH! Type convertion. Of course! (Should've used msg(\"\" + game.current_page) to see the result first...)<br>\nThanks. Feel like a moro now, but at least I can move on xD</p>\n\n",
      "PostDate": "2018-07-27T21:45:13.0164385Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f184925d-83f5-4412-87c3-803cb46fdb32",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ya, it's a bit confusing at first, especially for new people who don't know coding, in trying to learn/understand/deal-with Data Types (usually its using a Value without the double quotes, making it an Object reference/pointer Value instead of a String Value that they're trying to script with using and not understanding the differences/nuances between them in terms of with their scripting syntax --- see below example)\r\n\r\nfor example of your mistake with Types (Type Conversions):\r\n\r\ncreate (\"katana\") // creates a 'katana' Object\r\n\r\nplayer.weapon = katana // creates/sets an 'Object' (reference/pointer) Attribute\r\n\r\n// CORRECT usages (Data Type Match):\r\n\r\nif (player.weapon = katana) { /*scripting */ } // Object (reference/pointer) ~ ~ Object / Object (reference/pointer) --- gets more confusing with the internal structure / underlying code, lol (I think technically all of quest's internal structure / underlying code, are pointers/references, but I'm still a programming noobie with understanding this level of stuff --- don't really know/understand it that well yet --- it's still beyond me a bit)\r\n\r\n// or:\r\n\r\nif (player.weapon.name = \"katana\") { /*scripting */ } // String ~ String\r\n\r\n// IN-correct usages (Data Type MIS-match):\r\n\r\nif (player.weapon = \"katana\") { /*scripting */ } // Object (reference/pointer) ~ String\r\n\r\n// or:\r\n\r\nif (player.weapon.name = katana) { /*scripting */ } // String ~ Object / Object (reference/pointer) --- gets more confusing with the internal structure / underlying code, lol (I think technically all of quest's internal structure / underlying code, are pointers/references, but I'm still a programming noobie with understanding this level of stuff --- don't really know/understand it that well yet --- it's still beyond me a bit)\r\n\r\n------------\r\n\r\nConverting Functions/Scripts between Objects and Strings:\r\n\r\nSTRING_VARIABLE = ToString (NAME_OF_OBJECT)\r\n// and:\r\nOBJECT_(POINTER/REFERENCE)_VARIABLE = GetObject (\"NAME_OF_OBJECT\") // the 'GetObject' Script/Function returns 'null' if no Object (of the inputted String Value) exists\r\n\r\n----------\r\n\r\nother various Data Type Conversions:\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/ (categorical order)\r\nhttp://docs.textadventures.co.uk/quest/functions/index_allfunctions.html (alphabetical order)\r\n\r\n// and also (NOT related to Type Conversions, but they're more built-in Scripts/Functions that are available for use): http://docs.textadventures.co.uk/quest/scripts/\r\n\r\n(I might miss some things in my below list, so scan through especially the 'alphabetical order' link above, to see full list)\r\n\r\nGetObject\r\nToString\r\nToInt\r\nToDouble\r\n\r\nchecking Data Types:\r\n\r\nIsNumeric\r\nIsInt\r\nIsDouble\r\nIsScript // err... maybe this was removed or it never existed\r\nIsString // err... maybe this was removed or it never existed --- (quest might handle this automatically/internally for you)\r\n\r\nDoesInherit // (Object Types /Types, and their use via/as Inherited Attributes --- these are like a user level's 'classes/groups')\r\n\r\nTypeOf // returns the Type of the Value's/VARIABLE'S Data Type (string, int --- Integer, double, object, boolean, script, stringlist, objectlist, stringdictionary, objectdictionary, scriptdictionary, etc?)\r\n\r\n// checking existence of an Attribute of a Specific Data Type\r\n\r\nHasAttribute // this is the generic/dynamic (NOT specific), I think this will work with/for lists and dictionaries\r\nHasObject\r\nHasString\r\nHasScript\r\nHasBoolean\r\nHasInt\r\nHasDouble\r\n\r\n// and lastly, there's also (it doesn't deal with Data Types, but it's useful for programmers who know how to use/work with it, as its one of quest's internal functionalities that can be very useful for programmers --- I still need to learn exactly how to use this, along with all of the regex stuff... HK is lazy, lots of things to learn with quest and programming in general, sighs):\r\n\r\neval // http://docs.textadventures.co.uk/quest/functions/eval.html\r\n\r\n----------\r\n\r\nother useful/related links:\r\n\r\nhttp://docs.textadventures.co.uk/quest/elements/ ('Elements' = Quest's OBJECTS:programming level, not to be confused with the sub/user-level's 'Object' Element, and the various other sub-types of Elements)\r\n\r\nhttp://docs.textadventures.co.uk/quest/types/ (Data Types, at least the user's level, anyways --- see comment about the Elements above)\r\n\r\nhttp://docs.textadventures.co.uk/quest/elements/object.html // the built-in Attributes for the 'Object' Element (gotten to from the 'object' hyperlink in the elements link above)\r\n\r\nhttp://docs.textadventures.co.uk/quest/null.html (how quest handles/functionality of 'null')\r\n\r\nhttp://docs.textadventures.co.uk/quest/asl_requirements.html (the quest software/engine has some requirements)\r\n\r\nhttp://docs.textadventures.co.uk/quest/expressions.html (useful link)\r\n\r\nhttp://docs.textadventures.co.uk/quest/scripts/setting_variables.html (useful link)\r\n\r\nhttp://docs.textadventures.co.uk/quest/scopes.html (conveniently separated out --- found also within the 'Function' Links: alphabetical order and categorical order)\r\n\r\nthere's also these for generating/finding/populating/returning various Object Lists:\r\n\r\n( http://docs.textadventures.co.uk/quest/functions/index_allfunctions.html )\r\n\r\nAllObjects ()\r\nAllExits ()\r\nAllCommands ()\r\n\r\n---------\r\n\r\nand a lot of etc useful stuff (especially look through the 'Script', http://docs.textadventures.co.uk/quest/scripts/ , 'Function', http://docs.textadventures.co.uk/quest/functions/ or http://docs.textadventures.co.uk/quest/functions/index_allfunctions.html , and the 'Object' Element's built-in Attributes, http://docs.textadventures.co.uk/quest/elements/object.html ,  links)",
      "EditableFormat": "markdown",
      "HTML": "<p>ya, it's a bit confusing at first, especially for new people who don't know coding, in trying to learn/understand/deal-with Data Types (usually its using a Value without the double quotes, making it an Object reference/pointer Value instead of a String Value that they're trying to script with using and not understanding the differences/nuances between them in terms of with their scripting syntax --- see below example)</p>\n<p>for example of your mistake with Types (Type Conversions):</p>\n<p>create (\"katana\") // creates a 'katana' Object</p>\n<p>player.weapon = katana // creates/sets an 'Object' (reference/pointer) Attribute</p>\n<p>// CORRECT usages (Data Type Match):</p>\n<p>if (player.weapon = katana) { /*scripting */ } // Object (reference/pointer) ~ ~ Object / Object (reference/pointer) --- gets more confusing with the internal structure / underlying code, lol (I think technically all of quest's internal structure / underlying code, are pointers/references, but I'm still a programming noobie with understanding this level of stuff --- don't really know/understand it that well yet --- it's still beyond me a bit)</p>\n<p>// or:</p>\n<p>if (player.weapon.name = \"katana\") { /*scripting */ } // String ~ String</p>\n<p>// IN-correct usages (Data Type MIS-match):</p>\n<p>if (player.weapon = \"katana\") { /*scripting */ } // Object (reference/pointer) ~ String</p>\n<p>// or:</p>\n<p>if (player.weapon.name = katana) { /*scripting */ } // String ~ Object / Object (reference/pointer) --- gets more confusing with the internal structure / underlying code, lol (I think technically all of quest's internal structure / underlying code, are pointers/references, but I'm still a programming noobie with understanding this level of stuff --- don't really know/understand it that well yet --- it's still beyond me a bit)</p>\n<hr>\n<p>Converting Functions/Scripts between Objects and Strings:</p>\n<p>STRING_VARIABLE = ToString (NAME_OF_OBJECT)<br>\n// and:<br>\nOBJECT_(POINTER/REFERENCE)_VARIABLE = GetObject (\"NAME_OF_OBJECT\") // the 'GetObject' Script/Function returns 'null' if no Object (of the inputted String Value) exists</p>\n<hr>\n<p>other various Data Type Conversions:</p>\n<p>http://docs.textadventures.co.uk/quest/functions/ (categorical order)<br>\nhttp://docs.textadventures.co.uk/quest/functions/index_allfunctions.html (alphabetical order)</p>\n<p>// and also (NOT related to Type Conversions, but they're more built-in Scripts/Functions that are available for use): http://docs.textadventures.co.uk/quest/scripts/</p>\n<p>(I might miss some things in my below list, so scan through especially the 'alphabetical order' link above, to see full list)</p>\n<p>GetObject<br>\nToString<br>\nToInt<br>\nToDouble</p>\n<p>checking Data Types:</p>\n<p>IsNumeric<br>\nIsInt<br>\nIsDouble<br>\nIsScript // err... maybe this was removed or it never existed<br>\nIsString // err... maybe this was removed or it never existed --- (quest might handle this automatically/internally for you)</p>\n<p>DoesInherit // (Object Types /Types, and their use via/as Inherited Attributes --- these are like a user level's 'classes/groups')</p>\n<p>TypeOf // returns the Type of the Value's/VARIABLE'S Data Type (string, int --- Integer, double, object, boolean, script, stringlist, objectlist, stringdictionary, objectdictionary, scriptdictionary, etc?)</p>\n<p>// checking existence of an Attribute of a Specific Data Type</p>\n<p>HasAttribute // this is the generic/dynamic (NOT specific), I think this will work with/for lists and dictionaries<br>\nHasObject<br>\nHasString<br>\nHasScript<br>\nHasBoolean<br>\nHasInt<br>\nHasDouble</p>\n<p>// and lastly, there's also (it doesn't deal with Data Types, but it's useful for programmers who know how to use/work with it, as its one of quest's internal functionalities that can be very useful for programmers --- I still need to learn exactly how to use this, along with all of the regex stuff... HK is lazy, lots of things to learn with quest and programming in general, sighs):</p>\n<p>eval // http://docs.textadventures.co.uk/quest/functions/eval.html</p>\n<hr>\n<p>other useful/related links:</p>\n<p>http://docs.textadventures.co.uk/quest/elements/ ('Elements' = Quest's OBJECTS:programming level, not to be confused with the sub/user-level's 'Object' Element, and the various other sub-types of Elements)</p>\n<p>http://docs.textadventures.co.uk/quest/types/ (Data Types, at least the user's level, anyways --- see comment about the Elements above)</p>\n<p>http://docs.textadventures.co.uk/quest/elements/object.html // the built-in Attributes for the 'Object' Element (gotten to from the 'object' hyperlink in the elements link above)</p>\n<p>http://docs.textadventures.co.uk/quest/null.html (how quest handles/functionality of 'null')</p>\n<p>http://docs.textadventures.co.uk/quest/asl_requirements.html (the quest software/engine has some requirements)</p>\n<p>http://docs.textadventures.co.uk/quest/expressions.html (useful link)</p>\n<p>http://docs.textadventures.co.uk/quest/scripts/setting_variables.html (useful link)</p>\n<p>http://docs.textadventures.co.uk/quest/scopes.html (conveniently separated out --- found also within the 'Function' Links: alphabetical order and categorical order)</p>\n<p>there's also these for generating/finding/populating/returning various Object Lists:</p>\n<p>( http://docs.textadventures.co.uk/quest/functions/index_allfunctions.html )</p>\n<p>AllObjects ()<br>\nAllExits ()<br>\nAllCommands ()</p>\n<hr>\n<p>and a lot of etc useful stuff (especially look through the 'Script', http://docs.textadventures.co.uk/quest/scripts/ , 'Function', http://docs.textadventures.co.uk/quest/functions/ or http://docs.textadventures.co.uk/quest/functions/index_allfunctions.html , and the 'Object' Element's built-in Attributes, http://docs.textadventures.co.uk/quest/elements/object.html ,  links)</p>\n\n",
      "PostDate": "2018-07-28T04:38:53.2376117Z",
      "LastEditDate": "2018-07-28T04:55:02.5574412Z",
      "link": null
    },
    {
      "PostId": "c04ec32a-d2ff-4595-9cf6-d40bed98a18c",
      "UserId": 369653,
      "Username": "Blindtextdev",
      "AvatarUrl": "https://secure.gravatar.com/avatar/c624d7b41e98373bec23831a1834b649?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you, will come in handy.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you, will come in handy.</p>\n\n",
      "PostDate": "2018-07-28T18:49:29.0011022Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2a80ebb0-37dc-4c55-bcf4-9c597c11d9f0",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the 'HasXXX' just checks if the Attribute exists (if the Object has the Attribute or not --- it doesn't care at all about what the Value of the Attribute is)\r\n\r\nwhereas,\r\n\r\nthe 'GetXXX' not only checks if the Attribute exists, but ALSO, it checks the Value of the Attribute, as well\r\n\r\n-------\r\n\r\n```\r\nplayer.strength = 50\r\n\r\nif (HasInt (player, \"strength\")) {\r\n  msg (\"Yes, the 'player' Object has a 'strength' Integer Attribute\")\r\n} else {\r\n  msg (\"Fail 1\")\r\n}\r\n\r\nif (GetInt (player, \"strength\") = 100) {\r\n  msg (\"Yes, the 'player' Object has a 'strength' Integer Attribute with the Value of '100'\")\r\n} else {\r\n  msg (\"Fail 2\")\r\n}\r\n\r\n// results:\r\n\r\nYes, the 'player' Object has a 'strength' Integer Attribute\r\nFail 2\r\n\r\n// -------------------------------------\r\n\r\nplayer.strength = 100\r\nplayer.strength = null // (hehe)\r\n\r\nif (HasInt (player, \"strength\")) {\r\n  msg (\"Yes, the 'player' Object has a 'strength' Integer Attribute\")\r\n} else {\r\n  msg (\"Fail 1\")\r\n}\r\n\r\nif (GetInt (player, \"strength\") = 100) {\r\n  msg (\"Yes, the 'player' Object has a 'strength' Integer Attribute with the Value of '100'\")\r\n} else {\r\n  msg (\"Fail 2\")\r\n}\r\n\r\n// results:\r\n\r\nFail 1\r\nFail 2\r\n\r\n// -------------------------------------\r\n\r\nplayer.strength = 100\r\n\r\nif (HasInt (player, \"strength\")) {\r\n  msg (\"Yes, the 'player' Object has a 'strength' Integer Attribute\")\r\n} else {\r\n  msg (\"Fail 1\")\r\n}\r\n\r\nif (GetInt (player, \"strength\") = 100) {\r\n  msg (\"Yes, the 'player' Object has a 'strength' Integer Attribute with the Value of '100'\")\r\n} else {\r\n  msg (\"Fail 2\")\r\n}\r\n\r\n// results:\r\n\r\nYes, the 'player' Object has a 'strength' Integer Attribute\r\nYes, the 'player' Object has a 'strength' Integer Attribute with the Value of '100'\r\n\r\n// ------------------\r\n\r\nplayer.strength = 100\r\n\r\nvariable = HasInt (player, \"strength\")\r\nmsg (variable)\r\n\r\n// result/display/output:\r\n\r\ntrue\r\n\r\n// ------------------\r\n\r\nplayer.strength = 100\r\nplayer.strength = null\r\n\r\nvariable = HasInt (player, \"strength\")\r\nmsg (variable)\r\n\r\n// result/display/output:\r\n\r\nfalse\r\n\r\n// ------------------\r\n\r\nplayer.strength = 100\r\n\r\nvariable = GetInt (player, \"strength\")\r\nmsg (variable)\r\n\r\n// result/display/output:\r\n\r\n100\r\n\r\n// ------------------\r\n\r\nplayer.strength = 50\r\n\r\nvariable = GetInt (player, \"strength\")\r\nmsg (variable)\r\n\r\n// result/display/output:\r\n\r\nnull\r\n// or:\r\n// (it's blank: nothing is returned/outputted/displayed, aka null)\r\n\r\n// ---------------\r\n\r\nplayer.strength = 100\r\nplayer.strength = null\r\n\r\nvariable = GetInt (player, \"strength\")\r\nmsg (variable)\r\n\r\n// result/display/output:\r\n\r\nnull\r\n// or:\r\n// (it's blank: nothing is returned/outputted/displayed, aka null)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>the 'HasXXX' just checks if the Attribute exists (if the Object has the Attribute or not --- it doesn't care at all about what the Value of the Attribute is)</p>\n<p>whereas,</p>\n<p>the 'GetXXX' not only checks if the Attribute exists, but ALSO, it checks the Value of the Attribute, as well</p>\n<hr>\n<pre><code>player.strength = 50\n\nif (HasInt (player, \"strength\")) {\n  msg (\"Yes, the 'player' Object has a 'strength' Integer Attribute\")\n} else {\n  msg (\"Fail 1\")\n}\n\nif (GetInt (player, \"strength\") = 100) {\n  msg (\"Yes, the 'player' Object has a 'strength' Integer Attribute with the Value of '100'\")\n} else {\n  msg (\"Fail 2\")\n}\n\n// results:\n\nYes, the 'player' Object has a 'strength' Integer Attribute\nFail 2\n\n// -------------------------------------\n\nplayer.strength = 100\nplayer.strength = null // (hehe)\n\nif (HasInt (player, \"strength\")) {\n  msg (\"Yes, the 'player' Object has a 'strength' Integer Attribute\")\n} else {\n  msg (\"Fail 1\")\n}\n\nif (GetInt (player, \"strength\") = 100) {\n  msg (\"Yes, the 'player' Object has a 'strength' Integer Attribute with the Value of '100'\")\n} else {\n  msg (\"Fail 2\")\n}\n\n// results:\n\nFail 1\nFail 2\n\n// -------------------------------------\n\nplayer.strength = 100\n\nif (HasInt (player, \"strength\")) {\n  msg (\"Yes, the 'player' Object has a 'strength' Integer Attribute\")\n} else {\n  msg (\"Fail 1\")\n}\n\nif (GetInt (player, \"strength\") = 100) {\n  msg (\"Yes, the 'player' Object has a 'strength' Integer Attribute with the Value of '100'\")\n} else {\n  msg (\"Fail 2\")\n}\n\n// results:\n\nYes, the 'player' Object has a 'strength' Integer Attribute\nYes, the 'player' Object has a 'strength' Integer Attribute with the Value of '100'\n\n// ------------------\n\nplayer.strength = 100\n\nvariable = HasInt (player, \"strength\")\nmsg (variable)\n\n// result/display/output:\n\ntrue\n\n// ------------------\n\nplayer.strength = 100\nplayer.strength = null\n\nvariable = HasInt (player, \"strength\")\nmsg (variable)\n\n// result/display/output:\n\nfalse\n\n// ------------------\n\nplayer.strength = 100\n\nvariable = GetInt (player, \"strength\")\nmsg (variable)\n\n// result/display/output:\n\n100\n\n// ------------------\n\nplayer.strength = 50\n\nvariable = GetInt (player, \"strength\")\nmsg (variable)\n\n// result/display/output:\n\nnull\n// or:\n// (it's blank: nothing is returned/outputted/displayed, aka null)\n\n// ---------------\n\nplayer.strength = 100\nplayer.strength = null\n\nvariable = GetInt (player, \"strength\")\nmsg (variable)\n\n// result/display/output:\n\nnull\n// or:\n// (it's blank: nothing is returned/outputted/displayed, aka null)\n</code></pre>\n\n",
      "PostDate": "2018-07-29T00:01:49.4929191Z",
      "LastEditDate": "2018-07-29T00:24:15.5447986Z",
      "link": null
    }
  ]
}
