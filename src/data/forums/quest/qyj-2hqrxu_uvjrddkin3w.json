{
  "Topic": {
    "TopicId": "qyj-2hqrxu_uvjrddkin3w",
    "ForumId": "10",
    "Title": "Adding to Scope",
    "LastUpdated": "2024-07-17T21:02:12.2075154Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "e6a9ffef-872e-45a0-9b3a-d7e5f5637983",
      "UserId": 227864,
      "Username": "Talon",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3b6191c9adc337e83fec8e293e3fc584?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I get the feeling this is so obvious I'm just trying to hard,  I wand to add the inventory of a backpack a player is carrying to their scope. \r\n\r\nThe basic effect I want is a backpack that can be closed to hide  all of its contents and clean up the inventory pane, however I want those items to also be reachable for various checks . For example if you have a shovel in your backpack you'll be able to dig a hole even if it's not in your hand at the moment",
      "EditableFormat": "markdown",
      "HTML": "<p>I get the feeling this is so obvious I'm just trying to hard,  I wand to add the inventory of a backpack a player is carrying to their scope.</p>\n<p>The basic effect I want is a backpack that can be closed to hide  all of its contents and clean up the inventory pane, however I want those items to also be reachable for various checks . For example if you have a shovel in your backpack you'll be able to dig a hole even if it's not in your hand at the moment</p>\n\n",
      "PostDate": "2024-07-17T21:02:12.2075154Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6acf5b6c-48da-4969-824a-dc71e5388a2c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you're using the desktop editor, look for the hidden function `CanReachThrough` and modify it.\r\n\r\nThe default code is:\r\n```\r\n  <function name=\"CanReachThrough\" type=\"boolean\" parameters=\"obj\">\r\n    return (GetBoolean(obj, \"isopen\") and not GetBoolean(obj, \"hidechildren\"))\r\n  </function>\r\n```\r\n\r\nfor this specific case, you could do something like:\r\n```\r\n  <function name=\"CanReachThrough\" type=\"boolean\" parameters=\"obj\">\r\n    return (obj = backpack or (GetBoolean(obj, \"isopen\") and not GetBoolean(obj, \"hidechildren\")))\r\n  </function>\r\n```\r\n\r\nIf you're using the online editor, you can't edit the core functions. So you'll have to use one of the extra features added in Quest 5.8. In your start script, you can put something like:\r\n```\r\ngame.changecommandscope => {\r\n  if (ListContains (items, backpack) and not GetBoolean (backpack, \"isopen\")) {\r\n    foreach (obj, GetAllChildObjects (backpack)) {\r\n      if (ContainsReachable (backpack, obj)) {\r\n        list add (items, obj)\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\nThis adds a script attribute which will be run after determining the list of objects in scope for a command. Its code basically breaks down to:\r\n* If the backpack is in the list of available items and is closed\r\n    * Repeat for every object in the backpack\r\n        * If the object is reachable within the backpack (visible and not inside another closed container in there)\r\n            * Add that object to `items`\r\n\r\nHope that helps! I've not tested this, but I'm pretty confident it should work.",
      "EditableFormat": "markdown",
      "HTML": "<p>If you're using the desktop editor, look for the hidden function <code>CanReachThrough</code> and modify it.</p>\n<p>The default code is:</p>\n<pre><code>  &lt;function name=\"CanReachThrough\" type=\"boolean\" parameters=\"obj\"&gt;\n    return (GetBoolean(obj, \"isopen\") and not GetBoolean(obj, \"hidechildren\"))\n  &lt;/function&gt;\n</code></pre>\n<p>for this specific case, you could do something like:</p>\n<pre><code>  &lt;function name=\"CanReachThrough\" type=\"boolean\" parameters=\"obj\"&gt;\n    return (obj = backpack or (GetBoolean(obj, \"isopen\") and not GetBoolean(obj, \"hidechildren\")))\n  &lt;/function&gt;\n</code></pre>\n<p>If you're using the online editor, you can't edit the core functions. So you'll have to use one of the extra features added in Quest 5.8. In your start script, you can put something like:</p>\n<pre><code>game.changecommandscope =&gt; {\n  if (ListContains (items, backpack) and not GetBoolean (backpack, \"isopen\")) {\n    foreach (obj, GetAllChildObjects (backpack)) {\n      if (ContainsReachable (backpack, obj)) {\n        list add (items, obj)\n      }\n    }\n  }\n}\n</code></pre>\n<p>This adds a script attribute which will be run after determining the list of objects in scope for a command. Its code basically breaks down to:</p>\n<ul>\n<li>If the backpack is in the list of available items and is closed\n<ul>\n<li>Repeat for every object in the backpack\n<ul>\n<li>If the object is reachable within the backpack (visible and not inside another closed container in there)\n<ul>\n<li>Add that object to <code>items</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Hope that helps! I've not tested this, but I'm pretty confident it should work.</p>\n\n",
      "PostDate": "2024-07-18T07:49:54.387846Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e97a319f-7196-4a6c-9f6b-3af117826443",
      "UserId": 227864,
      "Username": "Talon",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3b6191c9adc337e83fec8e293e3fc584?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh that sounds good, and don't feel quite as foolish, did not think to look for the already present hidden functions, will work on it today\r\n\r\n_edit Well. that brought up a very odd issue,  for some reason adding that code broke the hiding effect of closing the backpack, Tried to get around that by fiddling with scripts to make anything put into the pack become scenery but  still appears in the inventory list_",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh that sounds good, and don't feel quite as foolish, did not think to look for the already present hidden functions, will work on it today</p>\n<p><em>edit Well. that brought up a very odd issue,  for some reason adding that code broke the hiding effect of closing the backpack, Tried to get around that by fiddling with scripts to make anything put into the pack become scenery but  still appears in the inventory list</em></p>\n\n",
      "PostDate": "2024-07-18T12:07:21.3062985Z",
      "LastEditDate": "2024-07-18T13:07:17.715045Z",
      "link": null
    },
    {
      "PostId": "fce7da51-c2fb-4ba6-9b25-21cfde474630",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah… I didn't think about that. Yeah, you'd probably also need to change the logic in `CanSeeThrough`.\r\n\r\nThe second method, the one I suggested for the online editor, might have a different problem… The script attribute `game.changecommandscope` basically adds objects to scope after the usual scope stuff is done… although it wouldn't work with commands which check in their own script if an object is reachable.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah… I didn't think about that. Yeah, you'd probably also need to change the logic in <code>CanSeeThrough</code>.</p>\n<p>The second method, the one I suggested for the online editor, might have a different problem… The script attribute <code>game.changecommandscope</code> basically adds objects to scope after the usual scope stuff is done… although it wouldn't work with commands which check in their own script if an object is reachable.</p>\n\n",
      "PostDate": "2024-07-18T19:21:20.6800184Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
