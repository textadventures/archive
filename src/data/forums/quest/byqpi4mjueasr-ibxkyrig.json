{
  "Topic": {
    "TopicId": "byqpi4mjueasr-ibxkyrig",
    "ForumId": "10",
    "Title": "some beginner questions",
    "LastUpdated": "2019-03-23T16:00:36.6948194Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "34a4d209-d4c1-475b-9fbc-69ae797aa025",
      "UserId": 409914,
      "Username": "Varg66",
      "AvatarUrl": "https://secure.gravatar.com/avatar/74befc7110e18e61f2e9111f70518a77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello, im learning to use it from 2 days, my english is not perfect, especially in computer language, so i tried to understand it alone on a \"trial and error method\". I use game adventure, text looked to complicated and i wanted to have some pictures. Anyway, thats my questions do i making right the follows:\r\n- for example, i want to have a sword. So i create flag on \"sword\" with new link \"take the sword\". Since that i posses sword until flag sword will be off. So i use scripts IF flag sword on i kill the beast or IF flag sword off i run. Is it correct?\r\n- for the same think as above i use counters, for exaple if counter power is 1 i can climb the mountain. if 2 higher etc.\r\n- than i tried add some currency with that counter but it doesnt look good. I created counter money and setting its value with scripts for example when collecting 5 money i set that value to 5.  Problem is when i try to show how much money i have in any situation: {if countername=value:text} - ok but i need to enter that value at anytime - is there any possibility that counter can show exact value of money on its own? \r\nThats all what i menaged to learn myself.\r\n- i dont understand at all that variables (set a variable or atrribute), how to using expression (and what it is?), functions? (dont know anything)\r\nCan u please explain me how to use it in some very simple examples? Thank u very much in advance",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello, im learning to use it from 2 days, my english is not perfect, especially in computer language, so i tried to understand it alone on a \"trial and error method\". I use game adventure, text looked to complicated and i wanted to have some pictures. Anyway, thats my questions do i making right the follows:</p>\n<ul>\n<li>for example, i want to have a sword. So i create flag on \"sword\" with new link \"take the sword\". Since that i posses sword until flag sword will be off. So i use scripts IF flag sword on i kill the beast or IF flag sword off i run. Is it correct?</li>\n<li>for the same think as above i use counters, for exaple if counter power is 1 i can climb the mountain. if 2 higher etc.</li>\n<li>than i tried add some currency with that counter but it doesnt look good. I created counter money and setting its value with scripts for example when collecting 5 money i set that value to 5.  Problem is when i try to show how much money i have in any situation: {if countername=value:text} - ok but i need to enter that value at anytime - is there any possibility that counter can show exact value of money on its own?<br>\nThats all what i menaged to learn myself.</li>\n<li>i dont understand at all that variables (set a variable or atrribute), how to using expression (and what it is?), functions? (dont know anything)<br>\nCan u please explain me how to use it in some very simple examples? Thank u very much in advance</li>\n</ul>\n\n",
      "PostDate": "2019-03-23T16:00:36.6948194Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d949a3fb-9b15-4d86-a0ff-e87de3cdd918",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Best advice I can give:\r\n1.  Go through the tutorial completely.\r\n2.  Start small.  The stuff you are asking about is a bit more advanced.  \r\n3.  Make a bunch of small games and just mess around with simple things first.  You’ll be surprised how quickly you’ll catch on.\r\n\r\nAnd, what is your native language?",
      "EditableFormat": "markdown",
      "HTML": "<p>Best advice I can give:</p>\n<ol>\n<li>Go through the tutorial completely.</li>\n<li>Start small.  The stuff you are asking about is a bit more advanced.</li>\n<li>Make a bunch of small games and just mess around with simple things first.  You’ll be surprised how quickly you’ll catch on.</li>\n</ol>\n<p>And, what is your native language?</p>\n\n",
      "PostDate": "2019-03-23T19:11:39.8900158Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d2ec0d97-1bb0-4c5c-81df-802729677789",
      "UserId": 409914,
      "Username": "Varg66",
      "AvatarUrl": "https://secure.gravatar.com/avatar/74befc7110e18e61f2e9111f70518a77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank u XanMag.\r\n\r\n1.Of course i tried to understands tutorials. But there are 2 problems: its mostly about text adventure not gamebook, my knowledge about scripts and computer language egual zero. I wouldnt understand it even in my native language (its polish). All what i learned is from examples.\r\n2. Yes i started it with very small things to understand mechanics\r\n3. Yes i think i catched some things. Just tell me is it right direction what i wrote? That things about sword, flags, counters? Is it ok how i used it? Maybe u can give me some very simple examples of how that expression work? Any other simple things? Yes u right, functions can be to much complicated for the start. \r\n\r\nMaybe one simple story...how would u add currency to the game?",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank u XanMag.</p>\n<p>1.Of course i tried to understands tutorials. But there are 2 problems: its mostly about text adventure not gamebook, my knowledge about scripts and computer language egual zero. I wouldnt understand it even in my native language (its polish). All what i learned is from examples.</p>\n<ol start=\"2\">\n<li>Yes i started it with very small things to understand mechanics</li>\n<li>Yes i think i catched some things. Just tell me is it right direction what i wrote? That things about sword, flags, counters? Is it ok how i used it? Maybe u can give me some very simple examples of how that expression work? Any other simple things? Yes u right, functions can be to much complicated for the start.</li>\n</ol>\n<p>Maybe one simple story...how would u add currency to the game?</p>\n\n",
      "PostDate": "2019-03-23T20:06:46.9764596Z",
      "LastEditDate": "2019-03-23T20:07:42.3406233Z",
      "link": null
    },
    {
      "PostId": "3edbe339-0024-4838-afe6-afcf73ef899d",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Welcome:\r\nFirst off... go with text adventure, it is not any harder than gamebook, and you get MANY more tools to use.\r\nText adventure can do everything gamebook can do, AND LOTS more.\r\nMoney: there is a check box that enables it.\r\nFirst, a few terms:\r\nOne the left side of the screen (Quest window) is the tree of objects.\r\nSelect game.\r\nOn the tab \"Features\", check Money.\r\n\r\nOn the tab \"Player\", there is a \"Format for money\" and a long box.\r\nIn the box is how you format the money.\r\nTry this\r\n! gold\r\nNow your money is counted in gold coins.\r\nWant dollars?\r\n$!\r\nThe \"!\" will be replaced by the amount of money you have...\r\nLike:\r\n25 gold\r\nor\r\n$25.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Welcome:<br>\nFirst off... go with text adventure, it is not any harder than gamebook, and you get MANY more tools to use.<br>\nText adventure can do everything gamebook can do, AND LOTS more.<br>\nMoney: there is a check box that enables it.<br>\nFirst, a few terms:<br>\nOne the left side of the screen (Quest window) is the tree of objects.<br>\nSelect game.<br>\nOn the tab \"Features\", check Money.</p>\n<p>On the tab \"Player\", there is a \"Format for money\" and a long box.<br>\nIn the box is how you format the money.<br>\nTry this<br>\n! gold<br>\nNow your money is counted in gold coins.<br>\nWant dollars?<br>\n$!<br>\nThe \"!\" will be replaced by the amount of money you have...<br>\nLike:<br>\n25 gold<br>\nor<br>\n$25.</p>\n\n",
      "PostDate": "2019-03-23T22:34:16.3850759Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "453e00b5-2f3b-4f6e-b126-1b622a564bb6",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n\r\n------------------\r\n\r\nData Types:\r\n\r\nhttp://docs.textadventures.co.uk/quest/types/\r\n\r\n---------\r\n\r\nAmount Data Types:\r\n\r\nable to do arithmetic/math (addition, subtraction, multiplication, division, modulus) on them\r\n\r\nintegers (int): ..., -999, -1, 0, 1, 999, ...\r\n\r\ndoubles: ..., -999.123, -1.00004, 0.0, 5.9983, 999.123987, ...\r\n\r\n----------\r\n\r\nNon-Amount Data Types:\r\n\r\nnot able to do arithmetic/math on them\r\n\r\nstrings:\r\n\r\n\"a\"\r\n\"abc\"\r\n\"1\"\r\n\"123\"\r\n\"abc123\"\r\n\"abc_123\"\r\n\"hi, my name is HK, what is your name?\"\r\n\r\nbooleans:\r\n\r\ntrue\r\nfalse\r\n\r\nobject memory address/location references/pointers:\r\n\r\n(ignoring these for now)\r\n\r\nlists:\r\n\r\n(ignoring these for now)\r\n\r\ndictionaries:\r\n\r\n(ignoring these for now)\r\n\r\nscripts:\r\n\r\n(will get into these further down)\r\n\r\n---------------\r\n\r\nVARIABLES (3 types):\r\n\r\nthese are sub-containers, able to store/hold values (and the 'Script' VARIABLE: actions/scripting)\r\n\r\n1. Attributes: stored/held by/within a container, so they're global and permanent (so long as the container exists / still exists)\r\n2. Variables: not stored/held by/within a container, so they're local and temporary, only\r\n3. Parameters: VARIABLES specifically for Functions and Commands\r\n\r\nexamples (in-code):\r\n\r\nAttributes:\r\n\r\n// the 'player' is an existing 'Object' Element\r\n\r\nplayer.strength = 100\r\nplayer.alias = \"HegemonKhan\"\r\nplayer.dead = false\r\n\r\nVariables:\r\n\r\nstrength = 100\r\nalias = \"HegemonKhan\"\r\ndead = false\r\n\r\nParameters:\r\n\r\n(ignoring these for now)\r\n\r\n------------\r\n\r\nCONTAINERS:\r\n\r\nthese are known as the \"Elements\" in quest: http://docs.textadventures.co.uk/quest/elements/\r\n\r\nElements: Objects, Verbs, Functions, Commands, Timers, Turnscripts, Exits, etc\r\n\r\nthe 'Elements' are your main \"physical things\" in quest\r\n\r\nbeing containers, they can hold/store data (Attributes) and/or actions (direct scripting or Script Attributes)\r\n\r\nalso, VARIABLES are a type of sub-container as well (they do hold/store values): http://docs.textadventures.co.uk/quest/types/\r\n\r\n-----------\r\n\r\nfor the Text Adventure:\r\n\r\n-----------\r\n\r\nin the GUI/Editor:\r\n\r\nto add/create an 'Object' Element, there's many menu bar options, drop downs, right clicking, and etc methods of doing so (see tutorial) -> Name: NAME_OF_YOUR_OBJECT\r\n\r\nadd Object -> Name: ball // creates/adds a 'ball' Object to the game\r\nadd Object -> Name: npc // creates/adds a 'npc' Object to the game\r\n\r\nto add/create Attributes and set their initial values, within an Object:\r\n\r\n'ball' Object -> 'Attributes' Tab -> Attributes Box (at the bottom) -> Add -> (see below, repeat as needed)\r\n\r\n(Object name: ball)\r\nAttribute Name: color\r\nAttribute Type: string\r\nAttribute Value: red\r\n\r\n(Object name: ball)\r\nAttribute Name: quantity\r\nAttribute Type: int\r\nAttribute Value: 1\r\n\r\n(Object name: ball)\r\nAttribute Name: inflated\r\nAttribute Type: boolean\r\nAttribute Value: true\r\n\r\n---------------\r\n\r\nor, in the GUI/Editor's scripting:\r\n\r\n'WHATEVER' scripting Element -> add new script -> 'objects' (I think) category/section -> 'create/add object' (or something like this) Script -> Name: NAME_OF_YOUR_OBJECT\r\n\r\nto add/create Attributes and set their initial values, within an Object:\r\n\r\n'WHATEVER' scripting Element -> add new script -> 'variables' section/category -> 'set a variable or attribute' Script -> (see below)\r\n\r\nset variable VARIABLE = [EXPRESSION] VALUE_OR_EXPRESSION\r\n\r\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION\r\nset variable NAME_OF_Variable = [EXPRESSION] VALUE_OR_EXPRESSION\r\n\r\nset variable ball.color = [EXPRESSION] \"red\"\r\nset variable ball.quantity = [EXPRESSION] 1\r\nset variable ball.inflated = [EXPRESSION] true\r\n\r\n------------\r\n\r\nor, directly in-code scripting:\r\n\r\nto add/create an 'Object' Element:\r\n\r\ncreate (\"NAME_OF_YOUR_OBJECT\")\r\n\r\ncreate (\"ball\") // creates/adds a 'ball' Object to the game\r\ncreate (\"npc\") // creates/adds a 'npc' Object to the game\r\n\r\nto add/create Attributes and set their initial values, within an Object:\r\n\r\nVARIABLE = VALUE_OR_EXPRESSION\r\n\r\nNAME_OF_OBJECT.NAME_OF_ATTRIBUTE = VALUE_OR_EXPRESSION\r\nNAME_OF_Variable = VALUE_OR_EXPRESSION\r\n\r\nball.color = \"red\"\r\nball.quantity = 1\r\nball.inflated = true\r\n\r\n--------------------------------\r\n\r\nScripting:\r\n\r\n------------\r\n\r\nProgramming Scripting:\r\n\r\nthe Assignment Operator/Operation:\r\n\r\nVARIABLE = FINAL_VALUE\r\n\r\nthe 'FINAL_VALUE' on the right side of the '=' symbol is STORED INTO the 'VARIABLE' on the left side of the '=' symbol\r\n\r\nyou can't reverse the expression like you can in math (as it's just not programmed to understand/parse it in reverse):\r\n\r\n// math is actually doing a comparison operation: \"equal to\", such as with Algebra, so that's why it's okay to reverse it in math, but NOT in programming's Assignment operation, unless you're doing a Comparison operation: if (CONDITIONAL_EXPRESSION):\r\n\r\nAssignment operations:\r\n\r\n```\r\nx = 10 // NO error\r\n10 = x // ERROR!\r\n\r\nplayer.strength = 10 // NO error\r\n10 = player.strength // ERROR!\r\n```\r\n\r\nComparison Operations:\r\n\r\n```\r\nif (x = 10) { /* scripting */ } // NO error\r\nif (10 = x) { /* scripting */ } // NO error\r\n\r\nif (player.strength = 10) { /* scripting */ } // NO error\r\nif (10 = player.strength) { /* scripting */ } // NO error\r\n```\r\n\r\nexamples:\r\n\r\nplayer.strength = 0\r\n\r\nthe '0' final value is stored into the 'strength' Integer Attribute of the 'player' Player Object\r\n\r\nplayer.strength =  5 + 12\r\n\r\nthe '17' final value is stored into the 'strength' Integer Attribute of the 'player' Player Object\r\n\r\ngame.introduction = \"Welcome\" + \" \" + \"to\" + \" \" + \"my game\" + \", I hope your enjoy it!\"\r\n\r\nthe 'Welcome to my game, I hope you enjoy it!' final value is stored into the 'introduction' String Attribute of the 'game' special and required Game Settings and Publishing Info Object\r\n\r\n-------------\r\n\r\nArithmetic Scripting:\r\n\r\nin the GUI/Editor's scripting:\r\n\r\n'WHATEVER' scripting Element -> add new script -> 'variables' section/category -> 'set a variable or attribute' Script -> (see below)\r\n\r\nsimple examples:\r\n\r\nAddition:\r\n\r\nset variable player.strength = [EXPRESSION]  player.strength + 5\r\n\r\nSubtraction:\r\n\r\nset variable player.strength = [EXPRESSION]  player.strength - 7\r\n\r\nMultiplication:\r\n\r\nset variable player.strength = [EXPRESSION]  player.strength * 3\r\n\r\nDivision:\r\n\r\nset variable player.strength = [EXPRESSION]  player.strength / 2\r\n\r\nModulus (division, but it gets/finds/returns the REMAINDER: cyclic usage, and factors/divisibility of numbers, which includes number being 'odd' or 'even'):\r\n\r\n// Modulus' cyclic usage examples:\r\n\r\nset variable time.civilian_clock_hours = [EXPRESSION]  time.hours % 12 // time.civilian_clock_hours = [0 to 11]\r\nset variable time.military_clock_hours = [EXPRESSION]  time.hours % 24 // time.military_clock_hours = [0 to 23]\r\n\r\nset variable time.clock_minutes = [EXPRESSION]  time.minutes % 60 // time.clock_minutes = [0 to 59]\r\nset variable time.clock_seconds = [EXPRESSION]  time.seconds % 60 // time.clock_seconds = [0 to 59]\r\n\r\n// Modulus' factors/divisibility (including odd/even of a number) example:\r\n\r\n```\r\nnumber = GetRandomInt (0,100) // number = [randomly selects a number in this inclusive range: 0 to 100]\r\n\r\nif (number % 2 = 0) {\r\n  msg (\"The number (\" +number + \") is an even number\")\r\n} else if (number % 2 = 1) {\r\n  msg (\"The number (\" +number + \") is an odd number\")\r\n}\r\n\r\n// only checking for prime number divisibilty/factors for example below to avoid having to handle with logic issues with the coding (too lazy to deal with it, lol):\r\n// (challenge: can you understand why there's logic issues to handle with the coding if I was checking also for non-prime numbers?)\r\nif (number % 2 = 0) {\r\n  msg (\"The number (\" +number + \") is divisible by 2, or to say it differently, 2 is a factor of the number (\" + number + \")\" )\r\n} else if (number % 3 = 0) {\r\n  msg (\"The number (\" +number + \") is divisible by 3, or to say it differently, 3 is a factor of the number (\" + number + \")\" )\r\n} else if (number % 5 = 0) {\r\n  msg (\"The number (\" +number + \") is divisible by 5, or to say it differently, 5 is a factor of the number (\" + number + \")\" )\r\n} else if (number % 7 = 0) {\r\n  msg (\"The number (\" +number + \") is divisible by 7, or to say it differently, 7 is a factor of the number (\" + number + \")\" )\r\n} else if (number % 11 = 0) {\r\n  msg (\"The number (\" +number + \") is divisible by 11, or to say it differently, 11 is a factor of the number (\" + number + \")\" )\r\n} else if (number % 13 = 0) {\r\n  msg (\"The number (\" +number + \") is divisible by 13, or to say it differently, 13 is a factor of the number (\" + number + \")\" )\r\n}\r\n// etc 'else ifs' to infinity\r\n```\r\n\r\ncomplex expression example (using a Data/Attribute Type that I didn't explain in this post, so if don't understand the below example, don't worry about it):\r\n\r\n```\r\ncreate (\"katana\")\r\nset variable katana.damage = [EXPRESSION] 50\r\n\r\ncreate (\"dagger\")\r\nset variable dagger.damage = [EXPRESSION] 25\r\n\r\n--------\r\n\r\nset variable player.strength = [EXPRESSION] 100\r\nset variable player.weapon = [EXPRESSION] katana\r\nset variable player.damage = [EXPRESSION] player.weapon.damage + player.weapon.damage * player.strength / 100\r\n// player.damage = [50] + [50] * [100] / 100\r\n// player.damage = 100\r\n\r\n--------\r\n\r\nset variable player.strength = [EXPRESSION] 75\r\nset variable player.weapon = [EXPRESSION] katana\r\nset variable player.damage = [EXPRESSION] player.weapon.damage + player.weapon.damage * player.strength / 100\r\n// player.damage = [50] + [50] * [75] / 100\r\n// player.damage = ~ 88\r\n\r\n----------\r\n\r\nset variable player.strength = [EXPRESSION] 100\r\nset variable player.weapon = [EXPRESSION] dagger\r\nset variable player.damage = [EXPRESSION] player.weapon.damage + player.weapon.damage * player.strength / 100\r\n// player.damage = [25] + [25] * [100] / 100\r\n// player.damage = ~ 50\r\n\r\n---------\r\n\r\nset variable player.strength = [EXPRESSION] 50\r\nset variable player.weapon = [EXPRESSION] dagger\r\nset variable player.damage = [EXPRESSION] player.weapon.damage + player.weapon.damage * player.strength / 100\r\n// player.damage = [25] + [25] * [50] / 100\r\n// player.damage = ~ 37\r\n```\r\n\r\n--------------\r\n\r\nthe 'if' Script:\r\n\r\nin the GUI/Editor scripting:\r\n\r\n'WHATEVER' scripting Element -> add new script -> 'scripts' section/category -> 'if' Script -> (see below)\r\n\r\nif [EXPRESSION] CONDITIONAL_EXPRESSION\r\n\r\n-------------\r\n\r\n// Boolean examples for the conditional expression:\r\n\r\nif [EXPRESSION] ball.inflated // if (TRUE) // if (ball.inflated = true)\r\n\r\n-> then -> add new script -> 'output' section/category -> 'print a message' Script -> (see below)\r\n\r\nprint [EXPRESSION] \"You play with your friend, kicking the ball back and forth\"\r\n\r\n-> add new script -> 'output' section/category -> 'print a message' Script -> (see below)\r\n\r\nprint [EXPRESSION] \"After kicking the ball so much, it has lost too much air, and has become deflated (flat), so let's actually make it deflated, see below\"\r\n\r\n-> add new script -> 'variables' section/category -> 'set a variable or attribute' Script -> (see below)\r\n\r\nset variable ball.inflated = [EXPRESSION] false\r\n\r\nelse // if (FALSE) // if (ball.inflated = false)\r\n\r\n-> add new script -> 'output' section/category -> 'print a message' Script -> (see below)\r\n\r\nprint [EXPRESSION] \"Your ball is deflated (flat), you need to pump it back up with air, so it's inflated again, before you can play with it, kicking it back and forth, with your friend\"\r\n\r\n-> add new script -> 'output' section/category -> 'print a message' Script -> (see below)\r\n\r\nprint [EXPRESSION] \"So, let'sinflate the ball (pump up the ball with air), see below\"\r\n\r\n-> add new script -> 'variables' section/category -> 'set a variable or attribute' Script -> (see below)\r\n\r\nset variable ball.inflated = [EXPRESSION] true\r\n\r\n--------\r\n\r\nmore examples for the 'if' Script (tired/lazy now, so just showing these examples in-code, hopefully you can understand them and match it up with doing it in the GUI/Editor):\r\n\r\n```\r\nstring_variable = \"dragon\"\r\n\r\nif (string_variable = \"dragon\")\r\n  msg (\"TRUE\")\r\n} else {\r\n  msg (\"FALSE\")\r\n}\r\n\r\n// result/output: TRUE\r\n\r\n---------\r\n\r\n// quest is upper-lower case sensitive\r\n\r\nstring_variable = \"dragoN\"\r\n\r\nif (string_variable = \"dragon\")\r\n  msg (\"TRUE\")\r\n} else {\r\n  msg (\"FALSE\")\r\n}\r\n\r\n// result/output: FALSE\r\n\r\n---------\r\n\r\n// quest is upper-lower case sensitive\r\n\r\nstring_variable = \"dragon\"\r\n\r\nif (string_variable = \"dragoN\")\r\n  msg (\"TRUE\")\r\n} else {\r\n  msg (\"FALSE\")\r\n}\r\n\r\n// result/output: FALSE\r\n\r\n--------------\r\n\r\ninteger_variable = GetRandomInt (0,2)\r\n\r\nif (integer_variable = 0)\r\n  msg (\"zero\")\r\n} else if (integer_variable = 1) {\r\n  msg (\"one\")\r\n} else if (integer_variable = 2) {\r\n  msg (\"two\")\r\n}\r\n\r\n// result/output: [depends on the random selection of the 'GetRandomInt' Function, which randomly selects a number in the inclusive range: 0 to 2, which will through the 'if' block, output/display its matched up result: zero, one, or two]\r\n\r\n---------------\r\n\r\n// high to low checking:\r\n\r\nif (test.score >= 90) {\r\n  test.grade = \"A\"\r\n} else if (test.score >= 80) {\r\n  test.grade = \"B\"\r\n} else if (test.score >= 70) {\r\n  test.grade = \"C\"\r\n} else if (test.score >= 60) {\r\n  test.grade = \"D\"\r\n}  else {\r\n  test.grade = \"F\"\r\n}\r\n\r\n// same as above, but a bit more efficient:\r\n\r\nif (test.score > 89) {\r\n  test.grade = \"A\"\r\n} else if (test.score > 79) {\r\n  test.grade = \"B\"\r\n} else if (test.score > 69) {\r\n  test.grade = \"C\"\r\n} else if (test.score > 59) {\r\n  test.grade = \"D\"\r\n}  else {\r\n  test.grade = \"F\"\r\n}\r\n\r\n// low to high checking:\r\n\r\nif (test.score < 60) {\r\n  test.grade = \"F\"\r\n} else if (test.score < 70) {\r\n  test.grade = \"D\"\r\n} else if (test.score < 80) {\r\n  test.grade = \"C\"\r\n} else if (test.score < 90) {\r\n  test.grade = \"B\"\r\n}  else {\r\n  test.grade = \"A\"\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>Data Types:</p>\n<p>http://docs.textadventures.co.uk/quest/types/</p>\n<hr>\n<p>Amount Data Types:</p>\n<p>able to do arithmetic/math (addition, subtraction, multiplication, division, modulus) on them</p>\n<p>integers (int): ..., -999, -1, 0, 1, 999, ...</p>\n<p>doubles: ..., -999.123, -1.00004, 0.0, 5.9983, 999.123987, ...</p>\n<hr>\n<p>Non-Amount Data Types:</p>\n<p>not able to do arithmetic/math on them</p>\n<p>strings:</p>\n<p>\"a\"<br>\n\"abc\"<br>\n\"1\"<br>\n\"123\"<br>\n\"abc123\"<br>\n\"abc_123\"<br>\n\"hi, my name is HK, what is your name?\"</p>\n<p>booleans:</p>\n<p>true<br>\nfalse</p>\n<p>object memory address/location references/pointers:</p>\n<p>(ignoring these for now)</p>\n<p>lists:</p>\n<p>(ignoring these for now)</p>\n<p>dictionaries:</p>\n<p>(ignoring these for now)</p>\n<p>scripts:</p>\n<p>(will get into these further down)</p>\n<hr>\n<p>VARIABLES (3 types):</p>\n<p>these are sub-containers, able to store/hold values (and the 'Script' VARIABLE: actions/scripting)</p>\n<ol>\n<li>Attributes: stored/held by/within a container, so they're global and permanent (so long as the container exists / still exists)</li>\n<li>Variables: not stored/held by/within a container, so they're local and temporary, only</li>\n<li>Parameters: VARIABLES specifically for Functions and Commands</li>\n</ol>\n<p>examples (in-code):</p>\n<p>Attributes:</p>\n<p>// the 'player' is an existing 'Object' Element</p>\n<p>player.strength = 100<br>\nplayer.alias = \"HegemonKhan\"<br>\nplayer.dead = false</p>\n<p>Variables:</p>\n<p>strength = 100<br>\nalias = \"HegemonKhan\"<br>\ndead = false</p>\n<p>Parameters:</p>\n<p>(ignoring these for now)</p>\n<hr>\n<p>CONTAINERS:</p>\n<p>these are known as the \"Elements\" in quest: http://docs.textadventures.co.uk/quest/elements/</p>\n<p>Elements: Objects, Verbs, Functions, Commands, Timers, Turnscripts, Exits, etc</p>\n<p>the 'Elements' are your main \"physical things\" in quest</p>\n<p>being containers, they can hold/store data (Attributes) and/or actions (direct scripting or Script Attributes)</p>\n<p>also, VARIABLES are a type of sub-container as well (they do hold/store values): http://docs.textadventures.co.uk/quest/types/</p>\n<hr>\n<p>for the Text Adventure:</p>\n<hr>\n<p>in the GUI/Editor:</p>\n<p>to add/create an 'Object' Element, there's many menu bar options, drop downs, right clicking, and etc methods of doing so (see tutorial) -&gt; Name: NAME_OF_YOUR_OBJECT</p>\n<p>add Object -&gt; Name: ball // creates/adds a 'ball' Object to the game<br>\nadd Object -&gt; Name: npc // creates/adds a 'npc' Object to the game</p>\n<p>to add/create Attributes and set their initial values, within an Object:</p>\n<p>'ball' Object -&gt; 'Attributes' Tab -&gt; Attributes Box (at the bottom) -&gt; Add -&gt; (see below, repeat as needed)</p>\n<p>(Object name: ball)<br>\nAttribute Name: color<br>\nAttribute Type: string<br>\nAttribute Value: red</p>\n<p>(Object name: ball)<br>\nAttribute Name: quantity<br>\nAttribute Type: int<br>\nAttribute Value: 1</p>\n<p>(Object name: ball)<br>\nAttribute Name: inflated<br>\nAttribute Type: boolean<br>\nAttribute Value: true</p>\n<hr>\n<p>or, in the GUI/Editor's scripting:</p>\n<p>'WHATEVER' scripting Element -&gt; add new script -&gt; 'objects' (I think) category/section -&gt; 'create/add object' (or something like this) Script -&gt; Name: NAME_OF_YOUR_OBJECT</p>\n<p>to add/create Attributes and set their initial values, within an Object:</p>\n<p>'WHATEVER' scripting Element -&gt; add new script -&gt; 'variables' section/category -&gt; 'set a variable or attribute' Script -&gt; (see below)</p>\n<p>set variable VARIABLE = [EXPRESSION] VALUE_OR_EXPRESSION</p>\n<p>set variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION<br>\nset variable NAME_OF_Variable = [EXPRESSION] VALUE_OR_EXPRESSION</p>\n<p>set variable ball.color = [EXPRESSION] \"red\"<br>\nset variable ball.quantity = [EXPRESSION] 1<br>\nset variable ball.inflated = [EXPRESSION] true</p>\n<hr>\n<p>or, directly in-code scripting:</p>\n<p>to add/create an 'Object' Element:</p>\n<p>create (\"NAME_OF_YOUR_OBJECT\")</p>\n<p>create (\"ball\") // creates/adds a 'ball' Object to the game<br>\ncreate (\"npc\") // creates/adds a 'npc' Object to the game</p>\n<p>to add/create Attributes and set their initial values, within an Object:</p>\n<p>VARIABLE = VALUE_OR_EXPRESSION</p>\n<p>NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = VALUE_OR_EXPRESSION<br>\nNAME_OF_Variable = VALUE_OR_EXPRESSION</p>\n<p>ball.color = \"red\"<br>\nball.quantity = 1<br>\nball.inflated = true</p>\n<hr>\n<p>Scripting:</p>\n<hr>\n<p>Programming Scripting:</p>\n<p>the Assignment Operator/Operation:</p>\n<p>VARIABLE = FINAL_VALUE</p>\n<p>the 'FINAL_VALUE' on the right side of the '=' symbol is STORED INTO the 'VARIABLE' on the left side of the '=' symbol</p>\n<p>you can't reverse the expression like you can in math (as it's just not programmed to understand/parse it in reverse):</p>\n<p>// math is actually doing a comparison operation: \"equal to\", such as with Algebra, so that's why it's okay to reverse it in math, but NOT in programming's Assignment operation, unless you're doing a Comparison operation: if (CONDITIONAL_EXPRESSION):</p>\n<p>Assignment operations:</p>\n<pre><code>x = 10 // NO error\n10 = x // ERROR!\n\nplayer.strength = 10 // NO error\n10 = player.strength // ERROR!\n</code></pre>\n<p>Comparison Operations:</p>\n<pre><code>if (x = 10) { /* scripting */ } // NO error\nif (10 = x) { /* scripting */ } // NO error\n\nif (player.strength = 10) { /* scripting */ } // NO error\nif (10 = player.strength) { /* scripting */ } // NO error\n</code></pre>\n<p>examples:</p>\n<p>player.strength = 0</p>\n<p>the '0' final value is stored into the 'strength' Integer Attribute of the 'player' Player Object</p>\n<p>player.strength =  5 + 12</p>\n<p>the '17' final value is stored into the 'strength' Integer Attribute of the 'player' Player Object</p>\n<p>game.introduction = \"Welcome\" + \" \" + \"to\" + \" \" + \"my game\" + \", I hope your enjoy it!\"</p>\n<p>the 'Welcome to my game, I hope you enjoy it!' final value is stored into the 'introduction' String Attribute of the 'game' special and required Game Settings and Publishing Info Object</p>\n<hr>\n<p>Arithmetic Scripting:</p>\n<p>in the GUI/Editor's scripting:</p>\n<p>'WHATEVER' scripting Element -&gt; add new script -&gt; 'variables' section/category -&gt; 'set a variable or attribute' Script -&gt; (see below)</p>\n<p>simple examples:</p>\n<p>Addition:</p>\n<p>set variable player.strength = [EXPRESSION]  player.strength + 5</p>\n<p>Subtraction:</p>\n<p>set variable player.strength = [EXPRESSION]  player.strength - 7</p>\n<p>Multiplication:</p>\n<p>set variable player.strength = [EXPRESSION]  player.strength * 3</p>\n<p>Division:</p>\n<p>set variable player.strength = [EXPRESSION]  player.strength / 2</p>\n<p>Modulus (division, but it gets/finds/returns the REMAINDER: cyclic usage, and factors/divisibility of numbers, which includes number being 'odd' or 'even'):</p>\n<p>// Modulus' cyclic usage examples:</p>\n<p>set variable time.civilian_clock_hours = [EXPRESSION]  time.hours % 12 // time.civilian_clock_hours = [0 to 11]<br>\nset variable time.military_clock_hours = [EXPRESSION]  time.hours % 24 // time.military_clock_hours = [0 to 23]</p>\n<p>set variable time.clock_minutes = [EXPRESSION]  time.minutes % 60 // time.clock_minutes = [0 to 59]<br>\nset variable time.clock_seconds = [EXPRESSION]  time.seconds % 60 // time.clock_seconds = [0 to 59]</p>\n<p>// Modulus' factors/divisibility (including odd/even of a number) example:</p>\n<pre><code>number = GetRandomInt (0,100) // number = [randomly selects a number in this inclusive range: 0 to 100]\n\nif (number % 2 = 0) {\n  msg (\"The number (\" +number + \") is an even number\")\n} else if (number % 2 = 1) {\n  msg (\"The number (\" +number + \") is an odd number\")\n}\n\n// only checking for prime number divisibilty/factors for example below to avoid having to handle with logic issues with the coding (too lazy to deal with it, lol):\n// (challenge: can you understand why there's logic issues to handle with the coding if I was checking also for non-prime numbers?)\nif (number % 2 = 0) {\n  msg (\"The number (\" +number + \") is divisible by 2, or to say it differently, 2 is a factor of the number (\" + number + \")\" )\n} else if (number % 3 = 0) {\n  msg (\"The number (\" +number + \") is divisible by 3, or to say it differently, 3 is a factor of the number (\" + number + \")\" )\n} else if (number % 5 = 0) {\n  msg (\"The number (\" +number + \") is divisible by 5, or to say it differently, 5 is a factor of the number (\" + number + \")\" )\n} else if (number % 7 = 0) {\n  msg (\"The number (\" +number + \") is divisible by 7, or to say it differently, 7 is a factor of the number (\" + number + \")\" )\n} else if (number % 11 = 0) {\n  msg (\"The number (\" +number + \") is divisible by 11, or to say it differently, 11 is a factor of the number (\" + number + \")\" )\n} else if (number % 13 = 0) {\n  msg (\"The number (\" +number + \") is divisible by 13, or to say it differently, 13 is a factor of the number (\" + number + \")\" )\n}\n// etc 'else ifs' to infinity\n</code></pre>\n<p>complex expression example (using a Data/Attribute Type that I didn't explain in this post, so if don't understand the below example, don't worry about it):</p>\n<pre><code>create (\"katana\")\nset variable katana.damage = [EXPRESSION] 50\n\ncreate (\"dagger\")\nset variable dagger.damage = [EXPRESSION] 25\n\n--------\n\nset variable player.strength = [EXPRESSION] 100\nset variable player.weapon = [EXPRESSION] katana\nset variable player.damage = [EXPRESSION] player.weapon.damage + player.weapon.damage * player.strength / 100\n// player.damage = [50] + [50] * [100] / 100\n// player.damage = 100\n\n--------\n\nset variable player.strength = [EXPRESSION] 75\nset variable player.weapon = [EXPRESSION] katana\nset variable player.damage = [EXPRESSION] player.weapon.damage + player.weapon.damage * player.strength / 100\n// player.damage = [50] + [50] * [75] / 100\n// player.damage = ~ 88\n\n----------\n\nset variable player.strength = [EXPRESSION] 100\nset variable player.weapon = [EXPRESSION] dagger\nset variable player.damage = [EXPRESSION] player.weapon.damage + player.weapon.damage * player.strength / 100\n// player.damage = [25] + [25] * [100] / 100\n// player.damage = ~ 50\n\n---------\n\nset variable player.strength = [EXPRESSION] 50\nset variable player.weapon = [EXPRESSION] dagger\nset variable player.damage = [EXPRESSION] player.weapon.damage + player.weapon.damage * player.strength / 100\n// player.damage = [25] + [25] * [50] / 100\n// player.damage = ~ 37\n</code></pre>\n<hr>\n<p>the 'if' Script:</p>\n<p>in the GUI/Editor scripting:</p>\n<p>'WHATEVER' scripting Element -&gt; add new script -&gt; 'scripts' section/category -&gt; 'if' Script -&gt; (see below)</p>\n<p>if [EXPRESSION] CONDITIONAL_EXPRESSION</p>\n<hr>\n<p>// Boolean examples for the conditional expression:</p>\n<p>if [EXPRESSION] ball.inflated // if (TRUE) // if (ball.inflated = true)</p>\n<p>-&gt; then -&gt; add new script -&gt; 'output' section/category -&gt; 'print a message' Script -&gt; (see below)</p>\n<p>print [EXPRESSION] \"You play with your friend, kicking the ball back and forth\"</p>\n<p>-&gt; add new script -&gt; 'output' section/category -&gt; 'print a message' Script -&gt; (see below)</p>\n<p>print [EXPRESSION] \"After kicking the ball so much, it has lost too much air, and has become deflated (flat), so let's actually make it deflated, see below\"</p>\n<p>-&gt; add new script -&gt; 'variables' section/category -&gt; 'set a variable or attribute' Script -&gt; (see below)</p>\n<p>set variable ball.inflated = [EXPRESSION] false</p>\n<p>else // if (FALSE) // if (ball.inflated = false)</p>\n<p>-&gt; add new script -&gt; 'output' section/category -&gt; 'print a message' Script -&gt; (see below)</p>\n<p>print [EXPRESSION] \"Your ball is deflated (flat), you need to pump it back up with air, so it's inflated again, before you can play with it, kicking it back and forth, with your friend\"</p>\n<p>-&gt; add new script -&gt; 'output' section/category -&gt; 'print a message' Script -&gt; (see below)</p>\n<p>print [EXPRESSION] \"So, let'sinflate the ball (pump up the ball with air), see below\"</p>\n<p>-&gt; add new script -&gt; 'variables' section/category -&gt; 'set a variable or attribute' Script -&gt; (see below)</p>\n<p>set variable ball.inflated = [EXPRESSION] true</p>\n<hr>\n<p>more examples for the 'if' Script (tired/lazy now, so just showing these examples in-code, hopefully you can understand them and match it up with doing it in the GUI/Editor):</p>\n<pre><code>string_variable = \"dragon\"\n\nif (string_variable = \"dragon\")\n  msg (\"TRUE\")\n} else {\n  msg (\"FALSE\")\n}\n\n// result/output: TRUE\n\n---------\n\n// quest is upper-lower case sensitive\n\nstring_variable = \"dragoN\"\n\nif (string_variable = \"dragon\")\n  msg (\"TRUE\")\n} else {\n  msg (\"FALSE\")\n}\n\n// result/output: FALSE\n\n---------\n\n// quest is upper-lower case sensitive\n\nstring_variable = \"dragon\"\n\nif (string_variable = \"dragoN\")\n  msg (\"TRUE\")\n} else {\n  msg (\"FALSE\")\n}\n\n// result/output: FALSE\n\n--------------\n\ninteger_variable = GetRandomInt (0,2)\n\nif (integer_variable = 0)\n  msg (\"zero\")\n} else if (integer_variable = 1) {\n  msg (\"one\")\n} else if (integer_variable = 2) {\n  msg (\"two\")\n}\n\n// result/output: [depends on the random selection of the 'GetRandomInt' Function, which randomly selects a number in the inclusive range: 0 to 2, which will through the 'if' block, output/display its matched up result: zero, one, or two]\n\n---------------\n\n// high to low checking:\n\nif (test.score &gt;= 90) {\n  test.grade = \"A\"\n} else if (test.score &gt;= 80) {\n  test.grade = \"B\"\n} else if (test.score &gt;= 70) {\n  test.grade = \"C\"\n} else if (test.score &gt;= 60) {\n  test.grade = \"D\"\n}  else {\n  test.grade = \"F\"\n}\n\n// same as above, but a bit more efficient:\n\nif (test.score &gt; 89) {\n  test.grade = \"A\"\n} else if (test.score &gt; 79) {\n  test.grade = \"B\"\n} else if (test.score &gt; 69) {\n  test.grade = \"C\"\n} else if (test.score &gt; 59) {\n  test.grade = \"D\"\n}  else {\n  test.grade = \"F\"\n}\n\n// low to high checking:\n\nif (test.score &lt; 60) {\n  test.grade = \"F\"\n} else if (test.score &lt; 70) {\n  test.grade = \"D\"\n} else if (test.score &lt; 80) {\n  test.grade = \"C\"\n} else if (test.score &lt; 90) {\n  test.grade = \"B\"\n}  else {\n  test.grade = \"A\"\n}\n</code></pre>\n\n",
      "PostDate": "2019-03-23T23:10:19.8329268Z",
      "LastEditDate": "2019-03-23T23:50:47.7552825Z",
      "link": null
    },
    {
      "PostId": "8bcf4d69-fffc-4839-97ee-d4c33f59886d",
      "UserId": 409914,
      "Username": "Varg66",
      "AvatarUrl": "https://secure.gravatar.com/avatar/74befc7110e18e61f2e9111f70518a77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank u all for u effort to help, but i didnt understand a word. I think it all applies to text adventure, in gamebook it looks diffrent and doesnt explain me anything i asked. Also noone answered to any of my question.\r\n\r\nThanks anyway, regards",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank u all for u effort to help, but i didnt understand a word. I think it all applies to text adventure, in gamebook it looks diffrent and doesnt explain me anything i asked. Also noone answered to any of my question.</p>\n<p>Thanks anyway, regards</p>\n\n",
      "PostDate": "2019-03-24T21:48:31.4561958Z",
      "LastEditDate": "2019-03-24T21:55:01.0008183Z",
      "link": null
    },
    {
      "PostId": "08fb6250-0729-4e2f-945b-1bc51cda1809",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I hope you're still here. You cannot make flags or attributes or variables on gamebooks, except for the player and the game. Maybe the pages too, but don't quote me on that. The gamebooks work like standard gamebooks: you write a story, you make a set of choices for the player to choose, the player picks the page link, and so on.\r\n\r\nHere's a description of the book forms of gamebooks:\r\n\"A gamebook is a work of printed fiction that allows the reader to participate in the story by making choices. The narrative branches along various paths, typically through the use of numbered paragraphs or pages. Gamebooks are sometimes called choose your own adventure books or CYOA after the influential Choose Your Own Adventure series originally published by US company Bantam Books.\"\r\n-Wikipedia\r\n\r\nSo the game forms of it are extremely similar, except it's a game. The game book setting is not what you want for making attributes and objects and complicated scripts. You will most likely need to start over, and choose the text adventure format next time.",
      "EditableFormat": "markdown",
      "HTML": "<p>I hope you're still here. You cannot make flags or attributes or variables on gamebooks, except for the player and the game. Maybe the pages too, but don't quote me on that. The gamebooks work like standard gamebooks: you write a story, you make a set of choices for the player to choose, the player picks the page link, and so on.</p>\n<p>Here's a description of the book forms of gamebooks:<br>\n\"A gamebook is a work of printed fiction that allows the reader to participate in the story by making choices. The narrative branches along various paths, typically through the use of numbered paragraphs or pages. Gamebooks are sometimes called choose your own adventure books or CYOA after the influential Choose Your Own Adventure series originally published by US company Bantam Books.\"<br>\n-Wikipedia</p>\n<p>So the game forms of it are extremely similar, except it's a game. The game book setting is not what you want for making attributes and objects and complicated scripts. You will most likely need to start over, and choose the text adventure format next time.</p>\n\n",
      "PostDate": "2019-03-25T04:20:40.53723Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fe6c36b3-af1a-4ecf-96e2-6b5bf863d6f8",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> * for example, i want to have a sword. So i create flag on \"sword\" with new link \"take the sword\". Since that i posses sword until flag sword will be off. So i use scripts IF flag sword on i kill the beast or IF flag sword off i run. Is it correct?\r\n\r\nIt looks like you understand that well enough.\r\n\r\n> * Problem is when i try to show how much money i have in any situation: {if countername=value:text} - ok but i need to enter that value at anytime - is there any possibility that counter can show exact value of money on its own?\r\n\r\nTo display the value of a counter in a 'text' page (not within a script), you use the text processor directives `{counter:countername}` or `{=game.countername}`.\r\n\r\n> * i dont understand at all that variables (set a variable or atrribute), how to using expression (and what it is?), functions? (dont know anything)\r\n\r\nYou probably don't need to use variables, attributes, and functions unless you are doing complex scripting.\r\n\r\nIt seems that you already understand flags and counters. Flags and counters are a simplified form of attributes, designed for use with gamebooks. For example, a flag named \"sword\" is actually an attribute called `game.sword`. And a counter called \"money\" is actually an attribute `game.money`.\r\n\r\nIf you have some problem you can't solve just using flags and counters, then let us know what that problem is. Then someone can show you how to do it.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<ul>\n<li>for example, i want to have a sword. So i create flag on \"sword\" with new link \"take the sword\". Since that i posses sword until flag sword will be off. So i use scripts IF flag sword on i kill the beast or IF flag sword off i run. Is it correct?</li>\n</ul>\n</blockquote>\n<p>It looks like you understand that well enough.</p>\n<blockquote>\n<ul>\n<li>Problem is when i try to show how much money i have in any situation: {if countername=value:text} - ok but i need to enter that value at anytime - is there any possibility that counter can show exact value of money on its own?</li>\n</ul>\n</blockquote>\n<p>To display the value of a counter in a 'text' page (not within a script), you use the text processor directives <code>{counter:countername}</code> or <code>{=game.countername}</code>.</p>\n<blockquote>\n<ul>\n<li>i dont understand at all that variables (set a variable or atrribute), how to using expression (and what it is?), functions? (dont know anything)</li>\n</ul>\n</blockquote>\n<p>You probably don't need to use variables, attributes, and functions unless you are doing complex scripting.</p>\n<p>It seems that you already understand flags and counters. Flags and counters are a simplified form of attributes, designed for use with gamebooks. For example, a flag named \"sword\" is actually an attribute called <code>game.sword</code>. And a counter called \"money\" is actually an attribute <code>game.money</code>.</p>\n<p>If you have some problem you can't solve just using flags and counters, then let us know what that problem is. Then someone can show you how to do it.</p>\n\n",
      "PostDate": "2019-03-25T10:31:24.8885659Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f36867c9-9b49-43f6-817c-7bd998b8ceca",
      "UserId": 409914,
      "Username": "Varg66",
      "AvatarUrl": "https://secure.gravatar.com/avatar/74befc7110e18e61f2e9111f70518a77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello, sorry i wasnt here a while :)\r\njmnevil54 - yes, thats the definition of game i want play (gamebook), thank you :)\r\nmrangel - yes, that was help what i really expected, thank you for it very much. That script {counter:countername} was exactly what i needed and asked for, i didnt find it at tutorial (but i admit i could missed it in that huge book).\r\nYes i have 1 problem, but not sure should i ask here or make other topic, but i try:\r\n\r\n- i have problems with connecting text scripts:\r\n {if not sword: here is my text nr 1} {if sword:here is my text nr 2}  - thats clear, sword is my flag\r\nand...problem is how to connect it with scripts such as {once:text}, {random:text 1:text 2:text 3}, {notfirst:text}\r\nI just mean (really sorry for my poor english) is it at all possible? \r\nwhat i want is \"if sword random text is....if not sword random text is....\" or if sword not first text is...if not sword not first text is...\" i really tried to connect it in many ways using { and } in many directions but game didnt understand it.\r\nVery sorry i know it must very hard to understand what im writing but maybe someone understanded what i meant :) best regards, and its really fun and great application :)\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello, sorry i wasnt here a while :)<br>\njmnevil54 - yes, thats the definition of game i want play (gamebook), thank you :)<br>\nmrangel - yes, that was help what i really expected, thank you for it very much. That script {counter:countername} was exactly what i needed and asked for, i didnt find it at tutorial (but i admit i could missed it in that huge book).<br>\nYes i have 1 problem, but not sure should i ask here or make other topic, but i try:</p>\n<ul>\n<li>i have problems with connecting text scripts:<br>\n{if not sword: here is my text nr 1} {if sword:here is my text nr 2}  - thats clear, sword is my flag<br>\nand...problem is how to connect it with scripts such as {once:text}, {random:text 1:text 2:text 3}, {notfirst:text}<br>\nI just mean (really sorry for my poor english) is it at all possible?<br>\nwhat i want is \"if sword random text is....if not sword random text is....\" or if sword not first text is...if not sword not first text is...\" i really tried to connect it in many ways using { and } in many directions but game didnt understand it.<br>\nVery sorry i know it must very hard to understand what im writing but maybe someone understanded what i meant :) best regards, and its really fun and great application :)</li>\n</ul>\n\n",
      "PostDate": "2019-03-27T00:06:34.9094436Z",
      "LastEditDate": "2019-03-27T00:10:16.8630629Z",
      "link": null
    },
    {
      "PostId": "8907f5be-6c94-4495-95c9-44fb7565c812",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> {if not sword: here is my text nr 1} {if sword:here is my text nr 2} - thats clear, sword is my flag\r\n\r\nIt's more efficient to use `either` in that case. Like:\r\n`{either game.sword:This text will appear if you have a sword:This text will appear if you don't have a sword}`.\r\n\r\n(`{if` has some special behaviours, like letting you miss out the `game.` before a flag or counter name. But the way this is done introduces some other problems. When you find that an `{if` gives strange errors, try using `{either` instead.)\r\n\r\n> \"if sword random text is....if not sword random text is....\"\r\n\r\nYou mean if the player has a sword it will randomly show text A or text B, but if they don't have a sword it will show text C or text D?\r\n\r\n`{either game.sword:{random:text A:text B}:{random:text C:text D}}`",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>{if not sword: here is my text nr 1} {if sword:here is my text nr 2} - thats clear, sword is my flag</p>\n</blockquote>\n<p>It's more efficient to use <code>either</code> in that case. Like:<br>\n<code>{either game.sword:This text will appear if you have a sword:This text will appear if you don't have a sword}</code>.</p>\n<p>(<code>{if</code> has some special behaviours, like letting you miss out the <code>game.</code> before a flag or counter name. But the way this is done introduces some other problems. When you find that an <code>{if</code> gives strange errors, try using <code>{either</code> instead.)</p>\n<blockquote>\n<p>\"if sword random text is....if not sword random text is....\"</p>\n</blockquote>\n<p>You mean if the player has a sword it will randomly show text A or text B, but if they don't have a sword it will show text C or text D?</p>\n<p><code>{either game.sword:{random:text A:text B}:{random:text C:text D}}</code></p>\n\n",
      "PostDate": "2019-03-27T01:05:03.332645Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6d892469-ab3b-4431-8850-896b8311bf19",
      "UserId": 409914,
      "Username": "Varg66",
      "AvatarUrl": "https://secure.gravatar.com/avatar/74befc7110e18e61f2e9111f70518a77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "i need some time to practice what u wrote but...are u sure u talking about gamebook not text adventure?  How u can exchange command IF for EITHER on gamebook?  I think either means something other than if\r\n\r\nWell not exactly, i meant in some specific locations if sword(flag) is on random text is {random:eee:beeee:veeee} and if not sword (flag) random text is {random:aaaa:uuuuu:kaaaaa}",
      "EditableFormat": "markdown",
      "HTML": "<p>i need some time to practice what u wrote but...are u sure u talking about gamebook not text adventure?  How u can exchange command IF for EITHER on gamebook?  I think either means something other than if</p>\n<p>Well not exactly, i meant in some specific locations if sword(flag) is on random text is {random:eee:beeee:veeee} and if not sword (flag) random text is {random:aaaa:uuuuu:kaaaaa}</p>\n\n",
      "PostDate": "2019-03-27T01:27:59.958529Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8ecb5eac-fd28-489f-8490-3bffdc5368a1",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> are u sure u talking about gamebook not text adventure?\r\n\r\nYes. I checked the source.\r\n\r\n> How u can exchange command IF for EITHER on gamebook?\r\n\r\nYou type `{either` instead of `{if`.\r\n\r\n> I think either means something other than if\r\n\r\n`{either` is an `{if` and an `{if not` put together.\r\n\r\nFor example:\r\n`{either game.aaaa:bbbb}` is the same as `{if aaaa:bbbb}`.\r\n\r\n`{either game.aaaa:bbbb:cccc}` is the same as `{if aaaa:bbbb}{if not aaaa:cccc}`\r\n\r\nI prefer to use either, because `{if` sometimes does odd things you don't expect.\r\n\r\n> Well not exactly, i meant in some specific locations if sword(flag) is on random text is {random:eee:beeee:veeee} and if not sword (flag) random text is {random:aaaa:uuuuu:kaaaaa}\r\n\r\n`{either game.sword:{random:eee:beeee:veeee}:{random:aaaa:uuuuu:kaaaaa}}` should work.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>are u sure u talking about gamebook not text adventure?</p>\n</blockquote>\n<p>Yes. I checked the source.</p>\n<blockquote>\n<p>How u can exchange command IF for EITHER on gamebook?</p>\n</blockquote>\n<p>You type <code>{either</code> instead of <code>{if</code>.</p>\n<blockquote>\n<p>I think either means something other than if</p>\n</blockquote>\n<p><code>{either</code> is an <code>{if</code> and an <code>{if not</code> put together.</p>\n<p>For example:<br>\n<code>{either game.aaaa:bbbb}</code> is the same as <code>{if aaaa:bbbb}</code>.</p>\n<p><code>{either game.aaaa:bbbb:cccc}</code> is the same as <code>{if aaaa:bbbb}{if not aaaa:cccc}</code></p>\n<p>I prefer to use either, because <code>{if</code> sometimes does odd things you don't expect.</p>\n<blockquote>\n<p>Well not exactly, i meant in some specific locations if sword(flag) is on random text is {random:eee:beeee:veeee} and if not sword (flag) random text is {random:aaaa:uuuuu:kaaaaa}</p>\n</blockquote>\n<p><code>{either game.sword:{random:eee:beeee:veeee}:{random:aaaa:uuuuu:kaaaaa}}</code> should work.</p>\n\n",
      "PostDate": "2019-03-27T19:13:18.7652269Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3dbaaeb2-adf7-41b7-b7ae-a1ed55795be0",
      "UserId": 409914,
      "Username": "Varg66",
      "AvatarUrl": "https://secure.gravatar.com/avatar/74befc7110e18e61f2e9111f70518a77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks again mrangel for u time. That doesnt work for me with that either, and what is \"game\" in u instruction? I suppose sword is flag. But with further trying i discover such connection myself what works:\r\n\r\n{if sword:{random:text 1:text 2:text 3}}  {if not sword:{random:text 4:text 5:text 6}}\r\n\r\ni still cant connect that \"if sword and if not sword\" with things like {notfirst:text} or {once:text}",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks again mrangel for u time. That doesnt work for me with that either, and what is \"game\" in u instruction? I suppose sword is flag. But with further trying i discover such connection myself what works:</p>\n<p>{if sword:{random:text 1:text 2:text 3}}  {if not sword:{random:text 4:text 5:text 6}}</p>\n<p>i still cant connect that \"if sword and if not sword\" with things like {notfirst:text} or {once:text}</p>\n\n",
      "PostDate": "2019-03-27T21:08:42.6034932Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "542b1bae-c51b-4a6f-8b32-1e218b122ce7",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "`game` is the game element. It's a special element in Quest. `game.sword` is a flag named \"sword\".\r\n\r\nIt tells Quest where to find a particular piece of data. In a text adventure, the part before the dot could be a room, an NPC, an object, or the player.\r\nIn gamebooks it's simpler. You don't have any other objects to worry about, so the part before the dot is always `game`. Some instructions (`{if` and `{counter`) automatically add the `game.` so you don't need to include it.",
      "EditableFormat": "markdown",
      "HTML": "<p><code>game</code> is the game element. It's a special element in Quest. <code>game.sword</code> is a flag named \"sword\".</p>\n<p>It tells Quest where to find a particular piece of data. In a text adventure, the part before the dot could be a room, an NPC, an object, or the player.<br>\nIn gamebooks it's simpler. You don't have any other objects to worry about, so the part before the dot is always <code>game</code>. Some instructions (<code>{if</code> and <code>{counter</code>) automatically add the <code>game.</code> so you don't need to include it.</p>\n\n",
      "PostDate": "2019-03-27T21:51:08.994078Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
