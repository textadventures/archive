{
  "Topic": {
    "TopicId": "uou7-jgpdksuakrnc9yuoq",
    "ForumId": "10",
    "Title": "A couple questions about Store and Containers",
    "LastUpdated": "2018-08-01T04:25:52.5506399Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "718e5a56-5560-449b-bf22-547d638f1742",
      "UserId": 232787,
      "Username": "RobBronson",
      "AvatarUrl": "https://graph.facebook.com/10206073401859041/picture?width=80&height=80",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So, setting up a store (as per Pixies post) I realized something was not quite right.  My player is set to only carry \"X\" amount of items. Yet if he is at max on items carried, and I buy stuff from a store, it adds those items to inventory anyway. How do I make it check to make sure my player can carry those extra items before letting him buy them?\r\n\r\nSecond question:\r\nI have a Backpack...it is a container. I have the container set to hold a max number of items as well as a max volume weight of each item. Yet...It doesn't work. I can still put unlimited items of unlimited volume in the pack. I thought by setting those values it would work. It works when I set my player object to only carry so many items. What am I missing?\r\n\r\nI appreciate everyone that has helped my this far. I hope not to be a burden much longer.  I do thank you all.",
      "EditableFormat": "markdown",
      "HTML": "<p>So, setting up a store (as per Pixies post) I realized something was not quite right.  My player is set to only carry \"X\" amount of items. Yet if he is at max on items carried, and I buy stuff from a store, it adds those items to inventory anyway. How do I make it check to make sure my player can carry those extra items before letting him buy them?</p>\n<p>Second question:<br>\nI have a Backpack...it is a container. I have the container set to hold a max number of items as well as a max volume weight of each item. Yet...It doesn't work. I can still put unlimited items of unlimited volume in the pack. I thought by setting those values it would work. It works when I set my player object to only carry so many items. What am I missing?</p>\n<p>I appreciate everyone that has helped my this far. I hope not to be a burden much longer.  I do thank you all.</p>\n\n",
      "PostDate": "2018-08-01T04:25:52.5506399Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ccb3c6cf-8471-4ec7-ac81-6f58a05e8d8b",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Are you do this from the tutorial here:\r\nhttp://docs.textadventures.co.uk/quest/shop.html\r\n\r\nIf so, you would need to modify the `BuyObject`function to test if anything else can be taken. If starts like this:\r\n```\r\nif (obj.price > game.pov.money) {\r\n  msg (\"You can't afford that!\")\r\n}\r\nelse {\r\n```\r\n\r\nReplace those lines, with these:\r\n\r\n```\r\nvolume = 0\r\ncontinue = true\r\nforeach (o, GetAllChildObjects(game.pov)) {\r\n  if (HasInt(o \"volume\")) {\r\n    volume = volume + o.volume\r\n  }\r\n}\r\nvolume = volume + GetVolume(obj,true)\r\nif (HasInt(game.pov, \"maxvolume\")) {\r\n  if (volume > game.pov.maxvolume) {\r\n    continue = false\r\n    message = \"Insufficient volume to buy anything now.\"\r\n  }\r\n}\r\nchildren = GetDirectChildren(game.pov)\r\nif (HasInt(game.pov, \"maxobjects\")) {\r\n  if (game.pov.maxobjects > 0) {\r\n    if (ListCount(children) >= game.pov.maxobjects) {\r\n      continue = false\r\n      message = \"Carrying too many items to buy anything now.\"\r\n    }\r\n  }\r\n}\r\nif (continue = false) {\r\n  msg (message)\r\n}\r\nelse if (obj.price > game.pov.money) {\r\n  msg (\"You can't afford that!\")\r\n}\r\nelse {\r\n```\r\n\r\nI have not tested it, but it is mostly from the `DoTake` function, so _should_ work.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Are you do this from the tutorial here:<br>\nhttp://docs.textadventures.co.uk/quest/shop.html</p>\n<p>If so, you would need to modify the <code>BuyObject</code>function to test if anything else can be taken. If starts like this:</p>\n<pre><code>if (obj.price &gt; game.pov.money) {\n  msg (\"You can't afford that!\")\n}\nelse {\n</code></pre>\n<p>Replace those lines, with these:</p>\n<pre><code>volume = 0\ncontinue = true\nforeach (o, GetAllChildObjects(game.pov)) {\n  if (HasInt(o \"volume\")) {\n    volume = volume + o.volume\n  }\n}\nvolume = volume + GetVolume(obj,true)\nif (HasInt(game.pov, \"maxvolume\")) {\n  if (volume &gt; game.pov.maxvolume) {\n    continue = false\n    message = \"Insufficient volume to buy anything now.\"\n  }\n}\nchildren = GetDirectChildren(game.pov)\nif (HasInt(game.pov, \"maxobjects\")) {\n  if (game.pov.maxobjects &gt; 0) {\n    if (ListCount(children) &gt;= game.pov.maxobjects) {\n      continue = false\n      message = \"Carrying too many items to buy anything now.\"\n    }\n  }\n}\nif (continue = false) {\n  msg (message)\n}\nelse if (obj.price &gt; game.pov.money) {\n  msg (\"You can't afford that!\")\n}\nelse {\n</code></pre>\n<p>I have not tested it, but it is mostly from the <code>DoTake</code> function, so <em>should</em> work.</p>\n\n",
      "PostDate": "2018-08-01T08:15:39.991315Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f8b80a7f-4d5c-488f-be60-9ae301f3c085",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Or you could be lazy and change\r\n```\r\nobj.parent = game.pov\r\n```\r\nto\r\n```\r\nobj.parent = game.pov.parent\r\nDoTake (obj, false)\r\n```\r\n\r\n(Which means that you can buy an object when your inventory is full, but it gets left on the counter until you drop something else to pick it up)",
      "EditableFormat": "markdown",
      "HTML": "<p>Or you could be lazy and change</p>\n<pre><code>obj.parent = game.pov\n</code></pre>\n<p>to</p>\n<pre><code>obj.parent = game.pov.parent\nDoTake (obj, false)\n</code></pre>\n<p>(Which means that you can buy an object when your inventory is full, but it gets left on the counter until you drop something else to pick it up)</p>\n\n",
      "PostDate": "2018-08-01T10:33:35.1763777Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "28335f7c-ba8c-40b6-af59-cde74f5ba3eb",
      "UserId": 232787,
      "Username": "RobBronson",
      "AvatarUrl": "https://graph.facebook.com/10206073401859041/picture?width=80&height=80",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Excellent...that works great. Thank you both.\r\nNow for my second question...I currently have my Put In verb as follows:\r\n```\r\nif (GetBoolean(Small_Backpack, \"bpack\")) {\r\n  msg (\"You can not reach to put things in the backpack while you are wearing it,genius.\")\r\n}\r\nif (not Small_Backpack.isopen) {\r\n  msg (\"You must open the backpack in order to add or remove items, Einstein.\")\r\n}\r\nelse {\r\n  MoveObject (Ammo_45_Lg, Small_Backpack)\r\n  msg (\"You have put the Ammo into your backpack.\")\r\n```\r\nHow do I add to that, in order for it to recognize the max item and volume that is allowed into the backpack?\r\nI thought it would be automatic when I set the item max and volume of the pack and the items.",
      "EditableFormat": "markdown",
      "HTML": "<p>Excellent...that works great. Thank you both.<br>\nNow for my second question...I currently have my Put In verb as follows:</p>\n<pre><code>if (GetBoolean(Small_Backpack, \"bpack\")) {\n  msg (\"You can not reach to put things in the backpack while you are wearing it,genius.\")\n}\nif (not Small_Backpack.isopen) {\n  msg (\"You must open the backpack in order to add or remove items, Einstein.\")\n}\nelse {\n  MoveObject (Ammo_45_Lg, Small_Backpack)\n  msg (\"You have put the Ammo into your backpack.\")\n</code></pre>\n<p>How do I add to that, in order for it to recognize the max item and volume that is allowed into the backpack?<br>\nI thought it would be automatic when I set the item max and volume of the pack and the items.</p>\n\n",
      "PostDate": "2018-08-01T18:20:59.5781646Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "64c707ad-9f94-4ad3-98ca-cfc289854cd2",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I thought it would be automatic when I set the item max and volume of the pack and the items.\r\n\r\nNo. The default \"put in\" command checks that you can reach the backpack, that you have the object you're trying to put in it, that the backpack is open, and that there's room to fit the object in the backpack.\r\n\r\nIf you're writing your own \"put in\" command, you'll have to check all those things yourself.\r\n\r\nThe simplest way might be a modification like:\r\n```\r\nif (GetBoolean(Small_Backpack, \"bpack\")) {\r\n  msg (\"You can not reach to put things in the backpack while you are wearing it,genius.\")\r\n}\r\nif (not Small_Backpack.isopen) {\r\n  msg (\"You must open the backpack in order to add or remove items, Einstein.\")\r\n}\r\nelse if (HasScript (Small_Backpack, \"addscript\")) {\r\n  params = NewDictionary()\r\n  dictionary add (params, \"object\", Ammo_45_Lg)\r\n  do (Small_Backpack, \"addscript\", params)\r\n}\r\nelse {\r\n  MoveObject (Ammo_45_Lg, Small_Backpack)\r\n  msg (\"You have put the Ammo into your backpack.\")\r\n}\r\n```\r\n\r\nI'm wondering, are you doing this because you want to have \"put in backpack\" on the menu when a GUI-using player clicks on the ammo? If so, I've got a script around here somewhere which allows you to add a string like `\"Put ___ in backpack\"` to an object's displayverbs; that shows up as \"Put in backpack\" on the menu, but when the player clicks it, it sends the command \"Put (whatever the object's alias is) in backpack\", so you don't need to write a new verb for it. If that's what you're after, I can try to find that script.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I thought it would be automatic when I set the item max and volume of the pack and the items.</p>\n</blockquote>\n<p>No. The default \"put in\" command checks that you can reach the backpack, that you have the object you're trying to put in it, that the backpack is open, and that there's room to fit the object in the backpack.</p>\n<p>If you're writing your own \"put in\" command, you'll have to check all those things yourself.</p>\n<p>The simplest way might be a modification like:</p>\n<pre><code>if (GetBoolean(Small_Backpack, \"bpack\")) {\n  msg (\"You can not reach to put things in the backpack while you are wearing it,genius.\")\n}\nif (not Small_Backpack.isopen) {\n  msg (\"You must open the backpack in order to add or remove items, Einstein.\")\n}\nelse if (HasScript (Small_Backpack, \"addscript\")) {\n  params = NewDictionary()\n  dictionary add (params, \"object\", Ammo_45_Lg)\n  do (Small_Backpack, \"addscript\", params)\n}\nelse {\n  MoveObject (Ammo_45_Lg, Small_Backpack)\n  msg (\"You have put the Ammo into your backpack.\")\n}\n</code></pre>\n<p>I'm wondering, are you doing this because you want to have \"put in backpack\" on the menu when a GUI-using player clicks on the ammo? If so, I've got a script around here somewhere which allows you to add a string like <code>\"Put ___ in backpack\"</code> to an object's displayverbs; that shows up as \"Put in backpack\" on the menu, but when the player clicks it, it sends the command \"Put (whatever the object's alias is) in backpack\", so you don't need to write a new verb for it. If that's what you're after, I can try to find that script.</p>\n\n",
      "PostDate": "2018-08-01T18:32:37.9223757Z",
      "LastEditDate": "2018-08-01T18:41:10.4473417Z",
      "link": null
    },
    {
      "PostId": "283ac900-623e-4f6e-8d3c-8103ab42646c",
      "UserId": 232787,
      "Username": "RobBronson",
      "AvatarUrl": "https://graph.facebook.com/10206073401859041/picture?width=80&height=80",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You almost make it sound like I know what I am doing. lol\r\nBut in fact...I could not figure out how to make the default \"put in\" work...so, I was creating the verb on my items.\r\nIf I were to figure out the right way to use the default...would I not have to set the verb on each object item? \r\nI like the fact of it saying \"you put (certain object) in the backpack. However, the container will not always be a backpack.\r\n\r\nUsing the code you gave me works fine. Thank you once again :)",
      "EditableFormat": "markdown",
      "HTML": "<p>You almost make it sound like I know what I am doing. lol<br>\nBut in fact...I could not figure out how to make the default \"put in\" work...so, I was creating the verb on my items.<br>\nIf I were to figure out the right way to use the default...would I not have to set the verb on each object item?<br>\nI like the fact of it saying \"you put (certain object) in the backpack. However, the container will not always be a backpack.</p>\n<p>Using the code you gave me works fine. Thank you once again :)</p>\n\n",
      "PostDate": "2018-08-01T19:28:08.0162398Z",
      "LastEditDate": "2018-08-01T19:54:38.9448457Z",
      "link": null
    },
    {
      "PostId": "ff08deea-c7d4-4b6f-a8b2-f21a20627eab",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "No, you don't need to set up any verbs. Verbs are for commands that do something different depending which object you use them on.\r\n\r\nBy default, the player can type \"put stick in backpack\" and it just works (as long as the backpack is a container).\r\n\r\nMaking it show up on the dropdown menu is a bit harder, because \"put in\" needs you to select two objects.\r\n\r\nIn games where there's just one backpack, it's relatively simple. You can put \"put in backpack\" on an object's inventory verbs list (you don't need to create an actual verb).\r\nThen you can modify the \"put\" command. I'm using the web editor, so I'd put a line in my start script:\r\n`put.pattern = \"^(put (?<object1>.*) (on|in) (?<object2>.*)|put in (?<object2>backpack) (put (?<object1>.*))$\"`\r\n\r\nWith multiple bags or containers, I can think of a few ways to make it work; but all would be quite complex and involve more code so I'd have to take a look when I'm not in the pub.",
      "EditableFormat": "markdown",
      "HTML": "<p>No, you don't need to set up any verbs. Verbs are for commands that do something different depending which object you use them on.</p>\n<p>By default, the player can type \"put stick in backpack\" and it just works (as long as the backpack is a container).</p>\n<p>Making it show up on the dropdown menu is a bit harder, because \"put in\" needs you to select two objects.</p>\n<p>In games where there's just one backpack, it's relatively simple. You can put \"put in backpack\" on an object's inventory verbs list (you don't need to create an actual verb).<br>\nThen you can modify the \"put\" command. I'm using the web editor, so I'd put a line in my start script:<br>\n<code>put.pattern = \"^(put (?&lt;object1&gt;.*) (on|in) (?&lt;object2&gt;.*)|put in (?&lt;object2&gt;backpack) (put (?&lt;object1&gt;.*))$\"</code></p>\n<p>With multiple bags or containers, I can think of a few ways to make it work; but all would be quite complex and involve more code so I'd have to take a look when I'm not in the pub.</p>\n\n",
      "PostDate": "2018-08-01T19:58:24.0698209Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d6f34966-cd1f-4a0e-a29e-5a749b55b4cf",
      "UserId": 232787,
      "Username": "RobBronson",
      "AvatarUrl": "https://graph.facebook.com/10206073401859041/picture?width=80&height=80",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "My game does not use the command bar. So I need \"Put In\" to appear when the object is clicked on from the inventory list.\r\nI have multiple backpacks, boxes and various other containers to put things in.\r\nThanks to the bit of code you gave me above, I can make it work. I may be doing more work than I need to...but I think I've been doing that since I started this game. I'm certain if you saw my entire game code you would laugh at how I did somethings, yet might be amazed at how I figured some stuff out. ( In oddball, round about ways.) \r\nThanks again...",
      "EditableFormat": "markdown",
      "HTML": "<p>My game does not use the command bar. So I need \"Put In\" to appear when the object is clicked on from the inventory list.<br>\nI have multiple backpacks, boxes and various other containers to put things in.<br>\nThanks to the bit of code you gave me above, I can make it work. I may be doing more work than I need to...but I think I've been doing that since I started this game. I'm certain if you saw my entire game code you would laugh at how I did somethings, yet might be amazed at how I figured some stuff out. ( In oddball, round about ways.)<br>\nThanks again...</p>\n\n",
      "PostDate": "2018-08-01T20:37:31.711036Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0e6b334c-cedd-4ccf-9f55-a9404ccc2a8d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "One thought that comes to mind is having \"Put in container\" in the displayverbs, and changing the pattern of the default 'put' command so that \"put in container (X)\" is an acceptable alternative for \"put (X) in container\" - using 'container' specifically, to avoid confusion over where the space in the command is. This may seem counterintuitive for players who are typing the command, but as you don't have a command bar this isn't a problem.\r\n\r\nThen you could give all bags/boxes/etc an alternate name \"container\" (on the 'object' tab, I think).\r\n\r\nYou click on any object, pick \"Put in container\" from the menu, and if there's more than one container in sight, you get a disambiguation menu asking which one you meant.",
      "EditableFormat": "markdown",
      "HTML": "<p>One thought that comes to mind is having \"Put in container\" in the displayverbs, and changing the pattern of the default 'put' command so that \"put in container (X)\" is an acceptable alternative for \"put (X) in container\" - using 'container' specifically, to avoid confusion over where the space in the command is. This may seem counterintuitive for players who are typing the command, but as you don't have a command bar this isn't a problem.</p>\n<p>Then you could give all bags/boxes/etc an alternate name \"container\" (on the 'object' tab, I think).</p>\n<p>You click on any object, pick \"Put in container\" from the menu, and if there's more than one container in sight, you get a disambiguation menu asking which one you meant.</p>\n\n",
      "PostDate": "2018-08-02T11:56:36.9296207Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5087fb90-d6f0-4546-a850-a85d326af26c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OK ... found a chunk of javascript I was looking for.\r\n\r\n```\r\n  buildMenuOptions = function (verbs, text, elementId) {\r\n    var verbsList = verbs.split(\"/\");\r\n    var options = [];\r\n    var metadata = new Object();\r\n    metadata[text] = elementId;\r\n    var metadataString = JSON.stringify(metadata);\r\n\r\n    $.each(verbsList, function (key, value) {\r\n      var linkCmd = value;\r\n      var linkTitle = value;\r\n      if (value.match(/__/)) {\r\n        linkCmd = linkCmd.replace(/__/, text);\r\n        linkTitle = linkTitle.replace(/\\s*__\\s*/, \" \");\r\n      } else {\r\n        linkCmd += \" \" + text\r\n      }\r\n      options = options.concat({\r\n        title: linkTitle,\r\n        action: {\r\n          callback: function (s) {\r\n            sendCommand(linkCmd, metadataString);\r\n          }\r\n        }\r\n      });\r\n    });\r\n```\r\n\r\nI *think* that if you add that, you could add \"Put __ in bag\" to the inventoryverbs for an item; it will show on the menu as \"Put in bag\", but when you click that option it will issue the command \"Put apple in bag\" or whatever, triggering the default \"put X in Y\" command without needing to modify the command itself.\r\n\r\nYou could use that either by creating multiple displayverbs (\"Put __ in backpack\", \"Put __ in chest\", etc); or by making a single displayverb \"Put __ in container\" and giving all containers the alternate name \"container\" so that when the player chooses that option, Quest will ask them which container they want to put the item in.",
      "EditableFormat": "markdown",
      "HTML": "<p>OK ... found a chunk of javascript I was looking for.</p>\n<pre><code>  buildMenuOptions = function (verbs, text, elementId) {\n    var verbsList = verbs.split(\"/\");\n    var options = [];\n    var metadata = new Object();\n    metadata[text] = elementId;\n    var metadataString = JSON.stringify(metadata);\n\n    $.each(verbsList, function (key, value) {\n      var linkCmd = value;\n      var linkTitle = value;\n      if (value.match(/__/)) {\n        linkCmd = linkCmd.replace(/__/, text);\n        linkTitle = linkTitle.replace(/\\s*__\\s*/, \" \");\n      } else {\n        linkCmd += \" \" + text\n      }\n      options = options.concat({\n        title: linkTitle,\n        action: {\n          callback: function (s) {\n            sendCommand(linkCmd, metadataString);\n          }\n        }\n      });\n    });\n</code></pre>\n<p>I <em>think</em> that if you add that, you could add \"Put __ in bag\" to the inventoryverbs for an item; it will show on the menu as \"Put in bag\", but when you click that option it will issue the command \"Put apple in bag\" or whatever, triggering the default \"put X in Y\" command without needing to modify the command itself.</p>\n<p>You could use that either by creating multiple displayverbs (\"Put __ in backpack\", \"Put __ in chest\", etc); or by making a single displayverb \"Put __ in container\" and giving all containers the alternate name \"container\" so that when the player chooses that option, Quest will ask them which container they want to put the item in.</p>\n\n",
      "PostDate": "2018-08-02T16:35:34.103705Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
