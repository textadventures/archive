{
  "Topic": {
    "TopicId": "3797",
    "ForumId": "10",
    "Title": "What is the String?",
    "LastUpdated": "2013-07-15T02:35:04+01:00",
    "ReplyCount": 1
  },
  "Posts": [
    {
      "PostId": "25429",
      "UserId": 0,
      "Username": "HyperMasenko",
      "UserAvatar": null,
      "UserGravatar": "afd0b75808bf7b5dc1f5bc8a7b4cadc1",
      "EditableText": "What is the string for currency? Like, in the Attributes tab, what is the string for the MONEY? After you put the name of the money type (currency), that is when the string comes up. Or is it just the value of how much money you want when the game starts? If so, then how do I decrease the money when I buy things?",
      "EditableFormat": "bbcode",
      "HTML": "What is the string for currency? Like, in the Attributes tab, what is the string for the MONEY? After you put the name of the money type (currency), that is when the string comes up. Or is it just the value of how much money you want when the game starts? If so, then how do I decrease the money when I buy things?",
      "PostDate": "2013-07-15T01:16:49+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25432",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "currency (like many things) should be done as~via attributes instead of trying to use actual objects for what you want to do.\n\nyou don't want to have actual~physical &quot;gold_coin&quot; objects as your currency, moving back and forth, instead you want to have a &quot;virtual&quot; currency, which is done by the attributes, which you then can adjust easily for your (again &quot;virtual&quot;) transactions.\n\nfirst, you need to have a &quot;cash&quot; amount:\n\nObject -&gt; Attributes (Tab) -&gt; Add Attribute:\n\nObject: player\nName: cash\nType: int (integer) or double // NOT as a String Type!\nValue: 0 or 0.00 // or whatever you want for your starting amount\n\nthen your item objects need to have a &quot;price&quot; amount:\n\nObject: wooden_sword\nName: price\nType: int or double\nValue: 10 or 9.99 // or whatever you want for your item's price\n\nnow for the operator (addition, subtraction, multiplication, and division) expressions for attributes:\n\nAdd a script -&gt; Variables -&gt; Set a variable or attribute -&gt;\n\n(hopefully you can figure out how to set it up correctly in the GUI~Editor)\n\nin code, it looks like this, for example:\n\nplayer.cash = player.cash + 10\nplayer.cash = player.cash - 10\nplayer.cash = player.cash * 10\nplayer.cash = player.cash / 10\n\nHow it works conceptually:\n\nplayer.cash (intial amount) = 100\nplayer.cash (new amount) = player.cash (old amount) + 10\n\nplayer.cash = 100\n\nplayer.cash = player.cash + 10\nplayer.cash = 100 + 10\nplayer.cash = 110\n\nplayer.cash = player.cash - 10\nplayer.cash = 100 - 10\nplayer.cash = 90\n\nplayer.cash = player.cash * 10\nplayer.cash = 100 * 10\nplayer.cash = 1,000\n\nplayer.cash = player.cash / 10\nplayer.cash = 100 / 10\nplayer.cash = 10\n\nand now for your &quot;buy&quot; verb:\n\nwooden_sword -&gt; Verb (Tab) -&gt; Add a verb -&gt;\n\n(hopefully you can set it up in the GUI~Editor)\n\nin code, it looks like this:\n\n[code:36xx6hi9]&lt;object name=&quot;wooden_sword&quot;&gt;\n  &lt;inherited name=&quot;editor_object&quot; /&gt;\n  &lt;verb name=&quot;buy&quot;&gt;&lt;!&#91;CDATA&#91;\n    if (player&#46;cash &gt;= wooden_sword&#46;price) {\n      wooden_sword&#46;parent = player\n      player&#46;cash = player&#46;cash - wooden_sword&#46;price\n    } else {\n      msg (&quot;You can't afford that item!&quot;)\n    }\n  &#93;&#93;&gt;&lt;/verb&gt;\n&lt;/object&gt;[/code:36xx6hi9]\n\nthis isn't the best way to do this stuff, but it's the simpliest. If you want a better way, it'll get a bit more complicated, such as with using Object Types and etc.\n\n----------\n\nThe Attribute Types:\n\nyour most basic type is the String, which is just a bunch of characters (letters, numbers, underscores, and etc):\n\nExamples of Strings:\n\ndead\nwooden_sword\ndungeon_level_5\nalk329dndnljasdf3993893\na\n3\n\nwhen we apply an equal expression with a number to a String, we have our Integer (int) Attribute Type:\n\nString: cash\nInteger: cash=0\n\nwhen we apply an equal expression with a decimal number to a String, we have our Double Attribute Type:\n\nString: cash\nDouble: cash=0.0\n\nwhen we apply an equal expression with a &quot;true&quot; string or &quot;false&quot; string to a String, we have our Boolean Attribute Type:\n\nString: dead\nBoolean: dead=false\n\nwhile not the Boolean Attribute Type, there's many other forms of booleans (string=string) too:\n\n(booleans are maybe better understood as &quot;flags&quot;)\n\nString: tv_power\n&quot;boolean&quot;: tv_power=off\n\nString: answer\n&quot;boolean&quot;: answer=no\n\nString: answer\n&quot;boolean&quot;: answer=1\n\nString: race\n&quot;boolean&quot;: race=human\n\nA Script Type Attribute is one (a Script) or more (a Script Block) expression lines:\n\n[code:36xx6hi9]if (orc&#46;hp=0) {\n  player&#46;cash = player&#46;cash + orc&#46;cash\n  player&#46;experience = player&#46;experience + orc&#46;experience\n  foreach (item_x,orc&#46;item_list) {\n    item_x&#46;parent=player\n  }\n  orc&#46;dead=true\n}[/code:36xx6hi9]",
      "EditableFormat": "bbcode",
      "HTML": "currency (like many things) should be done as~via attributes instead of trying to use actual objects for what you want to do.<br/><br/>you don't want to have actual~physical &quot;gold_coin&quot; objects as your currency, moving back and forth, instead you want to have a &quot;virtual&quot; currency, which is done by the attributes, which you then can adjust easily for your (again &quot;virtual&quot;) transactions.<br/><br/>first, you need to have a &quot;cash&quot; amount:<br/><br/>Object -&gt; Attributes (Tab) -&gt; Add Attribute:<br/><br/>Object: player<br/>Name: cash<br/>Type: int (integer) or double // NOT as a String Type!<br/>Value: 0 or 0.00 // or whatever you want for your starting amount<br/><br/>then your item objects need to have a &quot;price&quot; amount:<br/><br/>Object: wooden_sword<br/>Name: price<br/>Type: int or double<br/>Value: 10 or 9.99 // or whatever you want for your item's price<br/><br/>now for the operator (addition, subtraction, multiplication, and division) expressions for attributes:<br/><br/>Add a script -&gt; Variables -&gt; Set a variable or attribute -&gt;<br/><br/>(hopefully you can figure out how to set it up correctly in the GUI~Editor)<br/><br/>in code, it looks like this, for example:<br/><br/>player.cash = player.cash + 10<br/>player.cash = player.cash - 10<br/>player.cash = player.cash * 10<br/>player.cash = player.cash / 10<br/><br/>How it works conceptually:<br/><br/>player.cash (intial amount) = 100<br/>player.cash (new amount) = player.cash (old amount) + 10<br/><br/>player.cash = 100<br/><br/>player.cash = player.cash + 10<br/>player.cash = 100 + 10<br/>player.cash = 110<br/><br/>player.cash = player.cash - 10<br/>player.cash = 100 - 10<br/>player.cash = 90<br/><br/>player.cash = player.cash * 10<br/>player.cash = 100 * 10<br/>player.cash = 1,000<br/><br/>player.cash = player.cash / 10<br/>player.cash = 100 / 10<br/>player.cash = 10<br/><br/>and now for your &quot;buy&quot; verb:<br/><br/>wooden_sword -&gt; Verb (Tab) -&gt; Add a verb -&gt;<br/><br/>(hopefully you can set it up in the GUI~Editor)<br/><br/>in code, it looks like this:<br/><br/><pre><code>&lt;object name=&quot;wooden_sword&quot;&gt;<br/>  &lt;inherited name=&quot;editor_object&quot; /&gt;<br/>  &lt;verb name=&quot;buy&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    if (player&#46;cash &gt;= wooden_sword&#46;price) {<br/>      wooden_sword&#46;parent = player<br/>      player&#46;cash = player&#46;cash - wooden_sword&#46;price<br/>    } else {<br/>      msg (&quot;You can't afford that item!&quot;)<br/>    }<br/>  &#93;&#93;&gt;&lt;/verb&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>this isn't the best way to do this stuff, but it's the simpliest. If you want a better way, it'll get a bit more complicated, such as with using Object Types and etc.<br/><br/>----------<br/><br/>The Attribute Types:<br/><br/>your most basic type is the String, which is just a bunch of characters (letters, numbers, underscores, and etc):<br/><br/>Examples of Strings:<br/><br/>dead<br/>wooden_sword<br/>dungeon_level_5<br/>alk329dndnljasdf3993893<br/>a<br/>3<br/><br/>when we apply an equal expression with a number to a String, we have our Integer (int) Attribute Type:<br/><br/>String: cash<br/>Integer: cash=0<br/><br/>when we apply an equal expression with a decimal number to a String, we have our Double Attribute Type:<br/><br/>String: cash<br/>Double: cash=0.0<br/><br/>when we apply an equal expression with a &quot;true&quot; string or &quot;false&quot; string to a String, we have our Boolean Attribute Type:<br/><br/>String: dead<br/>Boolean: dead=false<br/><br/>while not the Boolean Attribute Type, there's many other forms of booleans (string=string) too:<br/><br/>(booleans are maybe better understood as &quot;flags&quot;)<br/><br/>String: tv_power<br/>&quot;boolean&quot;: tv_power=off<br/><br/>String: answer<br/>&quot;boolean&quot;: answer=no<br/><br/>String: answer<br/>&quot;boolean&quot;: answer=1<br/><br/>String: race<br/>&quot;boolean&quot;: race=human<br/><br/>A Script Type Attribute is one (a Script) or more (a Script Block) expression lines:<br/><br/><pre><code>if (orc&#46;hp=0) {<br/>  player&#46;cash = player&#46;cash + orc&#46;cash<br/>  player&#46;experience = player&#46;experience + orc&#46;experience<br/>  foreach (item_x,orc&#46;item_list) {<br/>    item_x&#46;parent=player<br/>  }<br/>  orc&#46;dead=true<br/>}</code></pre>",
      "PostDate": "2013-07-15T02:35:04+01:00",
      "LastEditDate": null
    }
  ]
}
