{
  "Topic": {
    "TopicId": "5402",
    "ForumId": "10",
    "Title": "Wearables Library (need technical help)",
    "LastUpdated": "2015-09-24T08:27:32+01:00",
    "ReplyCount": 18
  },
  "Posts": [
    {
      "PostId": "37471",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Error running script&#058; Error compiling expression 'item.worn = true': CompareElement: Operation 'Equal' is not defined for types 'Object' and 'Boolean'\n\n\nThis error is popping up and I've tested it a lot. It seems that as long as the player doesn't do anything and immediately try to equip the clothes it is fine (though if they take them off and do something and then try to requip the error returns), but if they do ANYTHING else first...that error pops up. \n\nNow I've checked the clothing booleans in the game and they are set to false when the game starts ---- so I'm not sure what is going on with this...",
      "EditableFormat": "bbcode",
      "HTML": "Error running script&#058; Error compiling expression 'item.worn = true': CompareElement: Operation 'Equal' is not defined for types 'Object' and 'Boolean'<br/><br/><br/>This error is popping up and I've tested it a lot. It seems that as long as the player doesn't do anything and immediately try to equip the clothes it is fine (though if they take them off and do something and then try to requip the error returns), but if they do ANYTHING else first...that error pops up. <br/><br/>Now I've checked the clothing booleans in the game and they are set to false when the game starts ---- so I'm not sure what is going on with this...",
      "PostDate": "2015-08-06T22:54:41+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37472",
      "UserId": 0,
      "Username": "TM123",
      "UserAvatar": null,
      "UserGravatar": "6f54d3b84fe319d79f8df732b1676a50",
      "EditableText": "I reproduced the error by making a wearable object then setting it to &quot;cannot be worn.&quot;\nThis leaves in the &quot;wear_slots&quot; attribute which the &quot;DoWear&quot; function checks for as a way to test for wearability,\nbut removes the &quot;worn&quot; attribute. When the &quot;worn&quot; attribute is missing, &quot;item.worn = true&quot; will give that error.\n\nSo I would check your inventory (specifically ScopeReachableInventory) for an item with a &quot;wear_slots&quot; attribute, but no &quot;worn&quot; attribute - probably something set to &quot;cannot be worn.&quot;\n\nChange all the &quot;item.worn = true&quot; in the DoWear and DoRemove functions to &quot;GetBoolean(item, &quot;worn&quot;)&quot;\nThe &quot;GetBoolean&quot; would return false if the attribute &quot;worn&quot; doesn't exist instead of causing an error.",
      "EditableFormat": "bbcode",
      "HTML": "I reproduced the error by making a wearable object then setting it to &quot;cannot be worn.&quot;<br/>This leaves in the &quot;wear_slots&quot; attribute which the &quot;DoWear&quot; function checks for as a way to test for wearability,<br/>but removes the &quot;worn&quot; attribute. When the &quot;worn&quot; attribute is missing, &quot;item.worn = true&quot; will give that error.<br/><br/>So I would check your inventory (specifically ScopeReachableInventory) for an item with a &quot;wear_slots&quot; attribute, but no &quot;worn&quot; attribute - probably something set to &quot;cannot be worn.&quot;<br/><br/>Change all the &quot;item.worn = true&quot; in the DoWear and DoRemove functions to &quot;GetBoolean(item, &quot;worn&quot;)&quot;<br/>The &quot;GetBoolean&quot; would return false if the attribute &quot;worn&quot; doesn't exist instead of causing an error.",
      "PostDate": "2015-08-07T06:51:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37480",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "[quote=&quot;TM123&quot;:w4a3f0oj]I reproduced the error by making a wearable object then setting it to &quot;cannot be worn.&quot;\nThis leaves in the &quot;wear_slots&quot; attribute which the &quot;DoWear&quot; function checks for as a way to test for wearability,\nbut removes the &quot;worn&quot; attribute. When the &quot;worn&quot; attribute is missing, &quot;item.worn = true&quot; will give that error.\n\nSo I would check your inventory (specifically ScopeReachableInventory) for an item with a &quot;wear_slots&quot; attribute, but no &quot;worn&quot; attribute - probably something set to &quot;cannot be worn.&quot;\n\nAnd/or stick a &quot;if(HasAttribute(item,&quot;worn&quot;))&quot; into the DoWear and DoRemove function just before the &quot;if(item.worn = true)&quot;[/quote:w4a3f0oj]\n\nThis seems to have worked. We may want to release a new version of the wearables library with these changes so that this isn't an issue anymore. Thank you very much for the help!",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>TM123 wrote:</cite>I reproduced the error by making a wearable object then setting it to &quot;cannot be worn.&quot;<br/>This leaves in the &quot;wear_slots&quot; attribute which the &quot;DoWear&quot; function checks for as a way to test for wearability,<br/>but removes the &quot;worn&quot; attribute. When the &quot;worn&quot; attribute is missing, &quot;item.worn = true&quot; will give that error.<br/><br/>So I would check your inventory (specifically ScopeReachableInventory) for an item with a &quot;wear_slots&quot; attribute, but no &quot;worn&quot; attribute - probably something set to &quot;cannot be worn.&quot;<br/><br/>And/or stick a &quot;if(HasAttribute(item,&quot;worn&quot;))&quot; into the DoWear and DoRemove function just before the &quot;if(item.worn = true)&quot;</blockquote><br/><br/>This seems to have worked. We may want to release a new version of the wearables library with these changes so that this isn't an issue anymore. Thank you very much for the help!",
      "PostDate": "2015-08-07T19:15:50+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37487",
      "UserId": 0,
      "Username": "TM123",
      "UserAvatar": null,
      "UserGravatar": "6f54d3b84fe319d79f8df732b1676a50",
      "EditableText": "Note that I changed the fix to use the GetBoolean function -- a little easier than adding even more curly braces.",
      "EditableFormat": "bbcode",
      "HTML": "Note that I changed the fix to use the GetBoolean function -- a little easier than adding even more curly braces.",
      "PostDate": "2015-08-07T23:23:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37506",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Thank you TM123 for helping neonayon with Chase's and Pixie's libraries, as I forgot to do it, and also am too busy getting ready for school, to have troubleshooted this issue for neonayon (it'd take me a long time to re-learn Chase's and Pixie's libraries and then find the issue~problem), as I barely understand this level of coding of Chase's and Pixie's (and all the other good coders' codes, lol).",
      "EditableFormat": "bbcode",
      "HTML": "Thank you TM123 for helping neonayon with Chase's and Pixie's libraries, as I forgot to do it, and also am too busy getting ready for school, to have troubleshooted this issue for neonayon (it'd take me a long time to re-learn Chase's and Pixie's libraries and then find the issue~problem), as I barely understand this level of coding of Chase's and Pixie's (and all the other good coders' codes, lol).",
      "PostDate": "2015-08-08T18:42:53+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37527",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Alright. Well, after implementing the Journal thing. The boolean error started happening again. Here is the coding for the DoWear and DoRemove ....same problem as last time. It seemed like it was fixed but if the player does anything else before the clothing the boolean pops up again.\n\nDoWear\n[code:24691ujv]if (not HasAttribute(object,&quot;worn&quot;)) {\n  msg (DynamicTemplate(&quot;WearUnsuccessful&quot;, object))\n}\nelse if (object&#46;parent = player and object&#46;worn = true) {\n  msg (DynamicTemplate(&quot;AlreadyWearing&quot;, object))\n}\nelse if (not ListContains(ScopeInventory(), object)) {\n  msg (DynamicTemplate(&quot;WearUnsuccessful&quot;, object))\n}\nelse {\n  isLayerProblem = false\n  conflictedItem = null\n  if (HasAttribute(object,&quot;wear_slots&quot;)) {\n    foreach (item, ScopeReachableInventory()) {\n      if (HasAttribute(item,&quot;wear_slots&quot;)) {\n        if (HasAttribute(item,&quot;worn&quot;)) {\n        }\n        if (item&#46;worn = true) {\n          foreach (itemSlot, item&#46;wear_slots) {\n            if (ListContains(object&#46;wear_slots,itemSlot)) {\n              if (object&#46;wear_layer &lt; item&#46;wear_layer) {\n                conflictedItem = item\n                isLayerProblem = true\n              }\n              else if (object&#46;wear_layer = item&#46;wear_layer) {\n                conflictedItem = item\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  if (conflictedItem = null) {\n    object&#46;worn = True\n    object&#46;original_drop = object&#46;drop\n    object&#46;original_alias = object&#46;alias\n    object&#46;drop = false\n    object&#46;display = GetDisplayName(object)\n    object&#46;alias = GetDisplayAlias(object) + &quot; (worn)&quot;\n    if (object&#46;wearmsg = null) {\n      msg (DynamicTemplate(&quot;WearSuccessful&quot;,object))\n    }\n    else {\n      msg (object&#46;wearmsg)\n    }\n    // do after\n    if (HasScript(object, &quot;onafterwear&quot;)) {\n      do (object, &quot;onafterwear&quot;)\n    }\n    else if (HasString(object, &quot;onafterwear&quot;)) {\n      msg (object&#46;onafterwear)\n    }\n  }\n  else if (isLayerProblem = true) {\n    msg (DynamicTemplate(&quot;CannotWearOver&quot;,conflictedItem))\n  }\n  else {\n    msg (DynamicTemplate(&quot;CannotWearWith&quot;,conflictedItem))\n  }\n}[/code:24691ujv]\n\n\nand \n\nDoRemove\n[code:24691ujv]if (not object&#46;parent = player or not object&#46;worn or not object&#46;removeable) {\n  if (object&#46;removemsg = null) {\n    msg (DynamicTemplate(&quot;RemoveUnsuccessful&quot;,object))\n  }\n  else {\n    msg (object&#46;removemsg)\n  }\n}\nelse {\n  conflictedItem = null\n  // check if we are wearing anything over it\n  if (HasAttribute(object,&quot;wear_slots&quot;)) {\n    foreach (item, ScopeReachableInventory()) {\n      if (HasAttribute(item,&quot;wear_slots&quot;)) {\n        if (HasAttribute(item,&quot;worn&quot;)) {\n        }\n        if (item&#46;worn = true) {\n          foreach (itemSlot, item&#46;wear_slots) {\n            if (ListContains(object&#46;wear_slots,itemSlot)) {\n              if (object&#46;wear_layer &lt; item&#46;wear_layer) {\n                conflictedItem = item\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  if (conflictedItem = null) {\n    if (object&#46;removemsg = null) {\n      msg (DynamicTemplate(&quot;RemoveSuccessful&quot;,object))\n    }\n    else {\n      msg (object&#46;removemsg)\n    }\n    object&#46;worn = false\n    object&#46;drop = object&#46;original_drop\n    object&#46;alias = object&#46;original_alias\n    object&#46;original_drop = null\n    object&#46;original_alias = null\n    object&#46;display = null\n    // do after\n    if (HasScript(object, &quot;onafterremove&quot;)) {\n      do (object, &quot;onafterremove&quot;)\n    }\n    else if (HasString(object, &quot;onafterremove&quot;)) {\n      msg (object&#46;onafterremove)\n    }\n  }\n  else {\n    msg (DynamicTemplate(&quot;RemoveFirst&quot;, conflictedItem))\n  }\n}[/code:24691ujv]\n\nWhat a pain! But at least if we can isolate this problem then other people will be able to use the library again.",
      "EditableFormat": "bbcode",
      "HTML": "Alright. Well, after implementing the Journal thing. The boolean error started happening again. Here is the coding for the DoWear and DoRemove ....same problem as last time. It seemed like it was fixed but if the player does anything else before the clothing the boolean pops up again.<br/><br/>DoWear<br/><pre><code>if (not HasAttribute(object,&quot;worn&quot;)) {<br/>  msg (DynamicTemplate(&quot;WearUnsuccessful&quot;, object))<br/>}<br/>else if (object&#46;parent = player and object&#46;worn = true) {<br/>  msg (DynamicTemplate(&quot;AlreadyWearing&quot;, object))<br/>}<br/>else if (not ListContains(ScopeInventory(), object)) {<br/>  msg (DynamicTemplate(&quot;WearUnsuccessful&quot;, object))<br/>}<br/>else {<br/>  isLayerProblem = false<br/>  conflictedItem = null<br/>  if (HasAttribute(object,&quot;wear_slots&quot;)) {<br/>    foreach (item, ScopeReachableInventory()) {<br/>      if (HasAttribute(item,&quot;wear_slots&quot;)) {<br/>        if (HasAttribute(item,&quot;worn&quot;)) {<br/>        }<br/>        if (item&#46;worn = true) {<br/>          foreach (itemSlot, item&#46;wear_slots) {<br/>            if (ListContains(object&#46;wear_slots,itemSlot)) {<br/>              if (object&#46;wear_layer &lt; item&#46;wear_layer) {<br/>                conflictedItem = item<br/>                isLayerProblem = true<br/>              }<br/>              else if (object&#46;wear_layer = item&#46;wear_layer) {<br/>                conflictedItem = item<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>  if (conflictedItem = null) {<br/>    object&#46;worn = True<br/>    object&#46;original_drop = object&#46;drop<br/>    object&#46;original_alias = object&#46;alias<br/>    object&#46;drop = false<br/>    object&#46;display = GetDisplayName(object)<br/>    object&#46;alias = GetDisplayAlias(object) + &quot; (worn)&quot;<br/>    if (object&#46;wearmsg = null) {<br/>      msg (DynamicTemplate(&quot;WearSuccessful&quot;,object))<br/>    }<br/>    else {<br/>      msg (object&#46;wearmsg)<br/>    }<br/>    // do after<br/>    if (HasScript(object, &quot;onafterwear&quot;)) {<br/>      do (object, &quot;onafterwear&quot;)<br/>    }<br/>    else if (HasString(object, &quot;onafterwear&quot;)) {<br/>      msg (object&#46;onafterwear)<br/>    }<br/>  }<br/>  else if (isLayerProblem = true) {<br/>    msg (DynamicTemplate(&quot;CannotWearOver&quot;,conflictedItem))<br/>  }<br/>  else {<br/>    msg (DynamicTemplate(&quot;CannotWearWith&quot;,conflictedItem))<br/>  }<br/>}</code></pre><br/><br/><br/>and <br/><br/>DoRemove<br/><pre><code>if (not object&#46;parent = player or not object&#46;worn or not object&#46;removeable) {<br/>  if (object&#46;removemsg = null) {<br/>    msg (DynamicTemplate(&quot;RemoveUnsuccessful&quot;,object))<br/>  }<br/>  else {<br/>    msg (object&#46;removemsg)<br/>  }<br/>}<br/>else {<br/>  conflictedItem = null<br/>  // check if we are wearing anything over it<br/>  if (HasAttribute(object,&quot;wear_slots&quot;)) {<br/>    foreach (item, ScopeReachableInventory()) {<br/>      if (HasAttribute(item,&quot;wear_slots&quot;)) {<br/>        if (HasAttribute(item,&quot;worn&quot;)) {<br/>        }<br/>        if (item&#46;worn = true) {<br/>          foreach (itemSlot, item&#46;wear_slots) {<br/>            if (ListContains(object&#46;wear_slots,itemSlot)) {<br/>              if (object&#46;wear_layer &lt; item&#46;wear_layer) {<br/>                conflictedItem = item<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>  if (conflictedItem = null) {<br/>    if (object&#46;removemsg = null) {<br/>      msg (DynamicTemplate(&quot;RemoveSuccessful&quot;,object))<br/>    }<br/>    else {<br/>      msg (object&#46;removemsg)<br/>    }<br/>    object&#46;worn = false<br/>    object&#46;drop = object&#46;original_drop<br/>    object&#46;alias = object&#46;original_alias<br/>    object&#46;original_drop = null<br/>    object&#46;original_alias = null<br/>    object&#46;display = null<br/>    // do after<br/>    if (HasScript(object, &quot;onafterremove&quot;)) {<br/>      do (object, &quot;onafterremove&quot;)<br/>    }<br/>    else if (HasString(object, &quot;onafterremove&quot;)) {<br/>      msg (object&#46;onafterremove)<br/>    }<br/>  }<br/>  else {<br/>    msg (DynamicTemplate(&quot;RemoveFirst&quot;, conflictedItem))<br/>  }<br/>}</code></pre><br/><br/>What a pain! But at least if we can isolate this problem then other people will be able to use the library again.",
      "PostDate": "2015-08-10T02:36:24+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37530",
      "UserId": 0,
      "Username": "TM123",
      "UserAvatar": null,
      "UserGravatar": "6f54d3b84fe319d79f8df732b1676a50",
      "EditableText": "You have the curly braces in the wrong place. I hate curly braces. I think I'm curly brace dyslexic.\nI went over my changes using &quot;getboolean&quot; and discovered another problem, also involving the boolean attributes that don't exist. So here's the functions with &quot;getbooleans&quot; added that should solve the problems.\n\nDoWear:\n[code:u05xfoyt]\t&lt;function name=&quot;DoWear&quot; parameters=&quot;object&quot;&gt;&lt;!&#91;CDATA&#91;\n\t\tif(not HasAttribute(object,&quot;worn&quot;)) {\n\t\t\tmsg (DynamicTemplate(&quot;WearUnsuccessful&quot;, object))\n\t\t} else if (object&#46;parent = player and GetBoolean(object, &quot;worn&quot;)) {\n\t\t\tmsg (DynamicTemplate(&quot;AlreadyWearing&quot;, object))\n\t\t} else if (not ListContains(ScopeInventory(), object)) {\n\t\t\tmsg (DynamicTemplate(&quot;WearUnsuccessful&quot;, object))\n\t\t} else {\n\t\t\tisLayerProblem = false\n\t\t\tconflictedItem = null\n\t\t\t\n\t\t\tif(HasAttribute(object,&quot;wear_slots&quot;)) {\n\t\t\t\tforeach(item, ScopeReachableInventory()) {\n\t\t\t\t\tif(HasAttribute(item,&quot;wear_slots&quot;)) {\n\t\t\t\t\t\tif(GetBoolean(item, &quot;worn&quot;)) {\n\t\t\t\t\t\t\tforeach(itemSlot,item&#46;wear_slots) {\n\t\t\t\t\t\t\t\tif(ListContains(object&#46;wear_slots,itemSlot)) {\n\t\t\t\t\t\t\t\t\tif(object&#46;wear_layer &lt; item&#46;wear_layer) {\n\t\t\t\t\t\t\t\t\t\tconflictedItem = item\n\t\t\t\t\t\t\t\t\t\tisLayerProblem = true\n\t\t\t\t\t\t\t\t\t} else if(object&#46;wear_layer = item&#46;wear_layer) {\n\t\t\t\t\t\t\t\t\t\tconflictedItem = item\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(conflictedItem = null) {\n\t\t\t\tobject&#46;worn = True\n\t\t\t\tobject&#46;original_drop = object&#46;drop\n\t\t\t\tobject&#46;original_alias = object&#46;alias\n\t\t\t\tobject&#46;drop = false\n\t\t\t\t\n\t\t\t\tobject&#46;display = GetDisplayName(object)\n\t\t\t\tobject&#46;alias = GetDisplayAlias(object) + &quot; (worn)&quot;\n\t\t\t\t\n\t\t\t\tif(object&#46;wearmsg = null) {\n\t\t\t\t\tmsg (DynamicTemplate(&quot;WearSuccessful&quot;,object))\n\t\t\t\t} else {\n\t\t\t\t\tmsg(object&#46;wearmsg)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//do after\n\t\t\t\tif (HasScript(object, &quot;onafterwear&quot;)) {\n\t\t\t\t\tdo(object, &quot;onafterwear&quot;)\n\t\t\t\t} else if(HasString(object, &quot;onafterwear&quot;)) {\n\t\t\t\t\tmsg(object&#46;onafterwear)\n\t\t\t\t}\n\t\t\t} else if(isLayerProblem = true) {\n\t\t\t\tmsg(DynamicTemplate(&quot;CannotWearOver&quot;,conflictedItem))\n\t\t\t} else {\n\t\t\t\tmsg(DynamicTemplate(&quot;CannotWearWith&quot;,conflictedItem))\n\t\t\t}\n\t\t\t\n\t\t}\n\t&#93;&#93;&gt;&lt;/function&gt;[/code:u05xfoyt]\n\nDoRemove:\n[code:u05xfoyt]\t&lt;function name=&quot;DoRemove&quot; parameters=&quot;object&quot;&gt;&lt;!&#91;CDATA&#91;\n\t\tif (not object&#46;parent = player or not GetBoolean(object, &quot;worn&quot;) or not GetBoolean(object, &quot;removeable&quot;)) {\n\t\t\tif(object&#46;removemsg = null) {\n\t\t\t\tmsg (DynamicTemplate(&quot;RemoveUnsuccessful&quot;,object))\n\t\t\t} else {\n\t\t\t\tmsg (object&#46;removemsg)\n\t\t\t}\n\t\t} else {\n\t\t\tconflictedItem = null\n\t\t\t//check if we are wearing anything over it\n\t\t\tif(HasAttribute(object,&quot;wear_slots&quot;)) {\n\t\t\t\tforeach(item, ScopeReachableInventory()) {\n\t\t\t\t\tif(HasAttribute(item,&quot;wear_slots&quot;)) {\n\t\t\t\t\t\tif(GetBoolean(item, &quot;worn&quot;)) {\n\t\t\t\t\t\t\tforeach(itemSlot,item&#46;wear_slots) {\n\t\t\t\t\t\t\t\tif(ListContains(object&#46;wear_slots,itemSlot)) {\n\t\t\t\t\t\t\t\t\tif(object&#46;wear_layer &lt; item&#46;wear_layer) {\n\t\t\t\t\t\t\t\t\t\tconflictedItem = item\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(conflictedItem = null) {\n\t\t\t\tif(object&#46;removemsg = null) {\n\t\t\t\t\tmsg (DynamicTemplate(&quot;RemoveSuccessful&quot;,object))\n\t\t\t\t} else {\n\t\t\t\t\tmsg(object&#46;removemsg)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tobject&#46;worn = false\n\t\t\t\tobject&#46;drop = object&#46;original_drop\n\t\t\t\tobject&#46;alias = object&#46;original_alias\n\t\t\t\tobject&#46;original_drop = null\n\t\t\t\tobject&#46;original_alias = null\n\t\t\t\tobject&#46;display = null\n\t\t\t\t\n\t\t\t\t//do after\n\t\t\t\tif (HasScript(object, &quot;onafterremove&quot;)) {\n\t\t\t\t\tdo(object, &quot;onafterremove&quot;)\n\t\t\t\t} else if(HasString(object, &quot;onafterremove&quot;)) {\n\t\t\t\t\tmsg(object&#46;onafterremove)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmsg (DynamicTemplate(&quot;RemoveFirst&quot;, conflictedItem))\n\t\t\t}\n\t\t}\n\t&#93;&#93;&gt;&lt;/function&gt;[/code:u05xfoyt]",
      "EditableFormat": "bbcode",
      "HTML": "You have the curly braces in the wrong place. I hate curly braces. I think I'm curly brace dyslexic.<br/>I went over my changes using &quot;getboolean&quot; and discovered another problem, also involving the boolean attributes that don't exist. So here's the functions with &quot;getbooleans&quot; added that should solve the problems.<br/><br/>DoWear:<br/><pre><code>\t&lt;function name=&quot;DoWear&quot; parameters=&quot;object&quot;&gt;&lt;!&#91;CDATA&#91;<br/>\t\tif(not HasAttribute(object,&quot;worn&quot;)) {<br/>\t\t\tmsg (DynamicTemplate(&quot;WearUnsuccessful&quot;, object))<br/>\t\t} else if (object&#46;parent = player and GetBoolean(object, &quot;worn&quot;)) {<br/>\t\t\tmsg (DynamicTemplate(&quot;AlreadyWearing&quot;, object))<br/>\t\t} else if (not ListContains(ScopeInventory(), object)) {<br/>\t\t\tmsg (DynamicTemplate(&quot;WearUnsuccessful&quot;, object))<br/>\t\t} else {<br/>\t\t\tisLayerProblem = false<br/>\t\t\tconflictedItem = null<br/>\t\t\t<br/>\t\t\tif(HasAttribute(object,&quot;wear_slots&quot;)) {<br/>\t\t\t\tforeach(item, ScopeReachableInventory()) {<br/>\t\t\t\t\tif(HasAttribute(item,&quot;wear_slots&quot;)) {<br/>\t\t\t\t\t\tif(GetBoolean(item, &quot;worn&quot;)) {<br/>\t\t\t\t\t\t\tforeach(itemSlot,item&#46;wear_slots) {<br/>\t\t\t\t\t\t\t\tif(ListContains(object&#46;wear_slots,itemSlot)) {<br/>\t\t\t\t\t\t\t\t\tif(object&#46;wear_layer &lt; item&#46;wear_layer) {<br/>\t\t\t\t\t\t\t\t\t\tconflictedItem = item<br/>\t\t\t\t\t\t\t\t\t\tisLayerProblem = true<br/>\t\t\t\t\t\t\t\t\t} else if(object&#46;wear_layer = item&#46;wear_layer) {<br/>\t\t\t\t\t\t\t\t\t\tconflictedItem = item<br/>\t\t\t\t\t\t\t\t\t}<br/>\t\t\t\t\t\t\t\t}<br/>\t\t\t\t\t\t\t}<br/>\t\t\t\t\t\t}<br/>\t\t\t\t\t}<br/>\t\t\t\t}<br/>\t\t\t}<br/>\t\t\t<br/>\t\t\tif(conflictedItem = null) {<br/>\t\t\t\tobject&#46;worn = True<br/>\t\t\t\tobject&#46;original_drop = object&#46;drop<br/>\t\t\t\tobject&#46;original_alias = object&#46;alias<br/>\t\t\t\tobject&#46;drop = false<br/>\t\t\t\t<br/>\t\t\t\tobject&#46;display = GetDisplayName(object)<br/>\t\t\t\tobject&#46;alias = GetDisplayAlias(object) + &quot; (worn)&quot;<br/>\t\t\t\t<br/>\t\t\t\tif(object&#46;wearmsg = null) {<br/>\t\t\t\t\tmsg (DynamicTemplate(&quot;WearSuccessful&quot;,object))<br/>\t\t\t\t} else {<br/>\t\t\t\t\tmsg(object&#46;wearmsg)<br/>\t\t\t\t}<br/>\t\t\t\t<br/>\t\t\t\t//do after<br/>\t\t\t\tif (HasScript(object, &quot;onafterwear&quot;)) {<br/>\t\t\t\t\tdo(object, &quot;onafterwear&quot;)<br/>\t\t\t\t} else if(HasString(object, &quot;onafterwear&quot;)) {<br/>\t\t\t\t\tmsg(object&#46;onafterwear)<br/>\t\t\t\t}<br/>\t\t\t} else if(isLayerProblem = true) {<br/>\t\t\t\tmsg(DynamicTemplate(&quot;CannotWearOver&quot;,conflictedItem))<br/>\t\t\t} else {<br/>\t\t\t\tmsg(DynamicTemplate(&quot;CannotWearWith&quot;,conflictedItem))<br/>\t\t\t}<br/>\t\t\t<br/>\t\t}<br/>\t&#93;&#93;&gt;&lt;/function&gt;</code></pre><br/><br/>DoRemove:<br/><pre><code>\t&lt;function name=&quot;DoRemove&quot; parameters=&quot;object&quot;&gt;&lt;!&#91;CDATA&#91;<br/>\t\tif (not object&#46;parent = player or not GetBoolean(object, &quot;worn&quot;) or not GetBoolean(object, &quot;removeable&quot;)) {<br/>\t\t\tif(object&#46;removemsg = null) {<br/>\t\t\t\tmsg (DynamicTemplate(&quot;RemoveUnsuccessful&quot;,object))<br/>\t\t\t} else {<br/>\t\t\t\tmsg (object&#46;removemsg)<br/>\t\t\t}<br/>\t\t} else {<br/>\t\t\tconflictedItem = null<br/>\t\t\t//check if we are wearing anything over it<br/>\t\t\tif(HasAttribute(object,&quot;wear_slots&quot;)) {<br/>\t\t\t\tforeach(item, ScopeReachableInventory()) {<br/>\t\t\t\t\tif(HasAttribute(item,&quot;wear_slots&quot;)) {<br/>\t\t\t\t\t\tif(GetBoolean(item, &quot;worn&quot;)) {<br/>\t\t\t\t\t\t\tforeach(itemSlot,item&#46;wear_slots) {<br/>\t\t\t\t\t\t\t\tif(ListContains(object&#46;wear_slots,itemSlot)) {<br/>\t\t\t\t\t\t\t\t\tif(object&#46;wear_layer &lt; item&#46;wear_layer) {<br/>\t\t\t\t\t\t\t\t\t\tconflictedItem = item<br/>\t\t\t\t\t\t\t\t\t}<br/>\t\t\t\t\t\t\t\t}<br/>\t\t\t\t\t\t\t}<br/>\t\t\t\t\t\t}<br/>\t\t\t\t\t}<br/>\t\t\t\t}<br/>\t\t\t}<br/>\t\t\t<br/>\t\t\tif(conflictedItem = null) {<br/>\t\t\t\tif(object&#46;removemsg = null) {<br/>\t\t\t\t\tmsg (DynamicTemplate(&quot;RemoveSuccessful&quot;,object))<br/>\t\t\t\t} else {<br/>\t\t\t\t\tmsg(object&#46;removemsg)<br/>\t\t\t\t}<br/>\t\t\t\t<br/>\t\t\t\tobject&#46;worn = false<br/>\t\t\t\tobject&#46;drop = object&#46;original_drop<br/>\t\t\t\tobject&#46;alias = object&#46;original_alias<br/>\t\t\t\tobject&#46;original_drop = null<br/>\t\t\t\tobject&#46;original_alias = null<br/>\t\t\t\tobject&#46;display = null<br/>\t\t\t\t<br/>\t\t\t\t//do after<br/>\t\t\t\tif (HasScript(object, &quot;onafterremove&quot;)) {<br/>\t\t\t\t\tdo(object, &quot;onafterremove&quot;)<br/>\t\t\t\t} else if(HasString(object, &quot;onafterremove&quot;)) {<br/>\t\t\t\t\tmsg(object&#46;onafterremove)<br/>\t\t\t\t}<br/>\t\t\t} else {<br/>\t\t\t\tmsg (DynamicTemplate(&quot;RemoveFirst&quot;, conflictedItem))<br/>\t\t\t}<br/>\t\t}<br/>\t&#93;&#93;&gt;&lt;/function&gt;</code></pre>",
      "PostDate": "2015-08-10T03:54:07+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37532",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "I'll check to see if this works! Thanks again TMI. You sort of...just came out of nowhere lol but you're incredibly helpful!",
      "EditableFormat": "bbcode",
      "HTML": "I'll check to see if this works! Thanks again TMI. You sort of...just came out of nowhere lol but you're incredibly helpful!",
      "PostDate": "2015-08-10T04:59:31+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37663",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Alright, so there appears to be ONE more issue with the clothing. The boolean that was happening before seems forever fixed, but I'm having another very minor problem!\n\nIt seems that if a PC is wearing the item of clothing...and they try to drop it (while wearing it), the game prints the drop message, even though the item is still worn on the player. \n\nIs there a way to add a check like &quot;you have to remove it first?&quot; before the drop message is displayed? Or am I wishing against fate!?",
      "EditableFormat": "bbcode",
      "HTML": "Alright, so there appears to be ONE more issue with the clothing. The boolean that was happening before seems forever fixed, but I'm having another very minor problem!<br/><br/>It seems that if a PC is wearing the item of clothing...and they try to drop it (while wearing it), the game prints the drop message, even though the item is still worn on the player. <br/><br/>Is there a way to add a check like &quot;you have to remove it first?&quot; before the drop message is displayed? Or am I wishing against fate!?",
      "PostDate": "2015-08-16T23:40:01+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37675",
      "UserId": 0,
      "Username": "TM123",
      "UserAvatar": null,
      "UserGravatar": "6f54d3b84fe319d79f8df732b1676a50",
      "EditableText": "[quote=&quot;Neonayon&quot;:3fo75n5w]It seems that if a PC is wearing the item of clothing...and they try to drop it (while wearing it), the game prints the drop message, even though the item is still worn on the player.[/quote:3fo75n5w]\n\nHmm. It has code to handle dropping, and it is working for me. I'll look it over.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Neonayon wrote:</cite>It seems that if a PC is wearing the item of clothing...and they try to drop it (while wearing it), the game prints the drop message, even though the item is still worn on the player.</blockquote><br/><br/>Hmm. It has code to handle dropping, and it is working for me. I'll look it over.",
      "PostDate": "2015-08-17T04:13:13+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37676",
      "UserId": 0,
      "Username": "TM123",
      "UserAvatar": null,
      "UserGravatar": "6f54d3b84fe319d79f8df732b1676a50",
      "EditableText": "Is this for all items or some?\nDoes the PC start the game wearing these items?\n\nYou mean it is like this:\n&gt; inv\nYou are carrying a pants.\n&gt; wear pants\nYou put it on.\n&gt; inv\nYou are carrying a pants (worn).\n&gt; drop pants\nYou drop it.\n&gt; inv\nYou are carrying a pants (worn).\n&gt; look\nYou are in a room. --- (you don't see any pants)\n\nThe DoWear sets the worn object's .drop attribute to false, and doesn't mess around with anything else having to do with dropping.  If .drop = false then you can't drop it. If DoWear makes a mistake and .drop = true then you can drop it.\nThe core library handles that. I would guess the false drop message is coming from a script.\nCould you post the code for one of the clothing objects?",
      "EditableFormat": "bbcode",
      "HTML": "Is this for all items or some?<br/>Does the PC start the game wearing these items?<br/><br/>You mean it is like this:<br/>&gt; inv<br/>You are carrying a pants.<br/>&gt; wear pants<br/>You put it on.<br/>&gt; inv<br/>You are carrying a pants (worn).<br/>&gt; drop pants<br/>You drop it.<br/>&gt; inv<br/>You are carrying a pants (worn).<br/>&gt; look<br/>You are in a room. --- (you don't see any pants)<br/><br/>The DoWear sets the worn object's .drop attribute to false, and doesn't mess around with anything else having to do with dropping.  If .drop = false then you can't drop it. If DoWear makes a mistake and .drop = true then you can drop it.<br/>The core library handles that. I would guess the false drop message is coming from a script.<br/>Could you post the code for one of the clothing objects?",
      "PostDate": "2015-08-17T05:59:50+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37684",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "[quote:hovpba2s]Is this for all items or some?\nDoes the PC start the game wearing these items?\n\nYou mean it is like this:\n&gt; inv\nYou are carrying a pants.\n&gt; wear pants\nYou put it on.\n&gt; inv\nYou are carrying a pants (worn).\n&gt; drop pants\nYou drop it.\n&gt; inv\nYou are carrying a pants (worn).\n&gt; look\nYou are in a room. --- (you don't see any pants)\n\nThe DoWear sets the worn object's .drop attribute to false, and doesn't mess around with anything else having to do with dropping. If .drop = false then you can't drop it. If DoWear makes a mistake and .drop = true then you can drop it.\nThe core library handles that. I would guess the false drop message is coming from a script.\nCould you post the code for one of the clothing objects?[/quote:hovpba2s]\n\nYeah, of course. Here is the code. \n\n[code:hovpba2s]          &lt;object name=&quot;cute_headband&quot;&gt;\n            &lt;inherit name=&quot;editor_object&quot; /&gt;\n            &lt;inherit name=&quot;wearable&quot; /&gt;\n            &lt;alias&gt;Cute Headband&lt;/alias&gt;\n            &lt;look&gt;&lt;!&#91;CDATA&#91;&lt;br/&gt;A cute black headband with a shimmering silk strip down the center&#46;  &#93;&#93;&gt;&lt;/look&gt;\n            &lt;usedefaultprefix type=&quot;boolean&quot;&gt;false&lt;/usedefaultprefix&gt;\n            &lt;alt type=&quot;stringlist&quot;&gt;\n              &lt;value&gt;cute headband&lt;/value&gt;\n              &lt;value&gt;head band&lt;/value&gt;\n              &lt;value&gt;black headband&lt;/value&gt;\n              &lt;value&gt;cute black headband&lt;/value&gt;\n            &lt;/alt&gt;\n            &lt;take /&gt;\n            &lt;volume type=&quot;int&quot;&gt;1&lt;/volume&gt;\n            &lt;takemsg&gt;You take the headband in hand&#46; &lt;/takemsg&gt;\n            &lt;dropmsg&gt;&lt;!&#91;CDATA&#91;{once&#58;(You have to &quot;&lt;i&gt;Remove&lt;/i&gt;&quot; it before you can drop it)} You drop the headband&#46; &#93;&#93;&gt;&lt;/dropmsg&gt;\n            &lt;attr name=&quot;wear_layer&quot; type=&quot;int&quot;&gt;9&lt;/attr&gt;\n            &lt;inventoryverbs type=&quot;stringlist&quot;&gt;\n              &lt;value&gt;Look at&lt;/value&gt;\n              &lt;value&gt;Drop&lt;/value&gt;\n              &lt;value&gt;Wear&lt;/value&gt;\n              &lt;value&gt;Remove&lt;/value&gt;\n            &lt;/inventoryverbs&gt;\n          &lt;/object&gt;[/code:hovpba2s]\n\nI use the default take and drop messages from the game, not the &quot;wearables&quot; drop and remove customizable scripts. Does that matter?",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>Is this for all items or some?<br/>Does the PC start the game wearing these items?<br/><br/>You mean it is like this:<br/>&gt; inv<br/>You are carrying a pants.<br/>&gt; wear pants<br/>You put it on.<br/>&gt; inv<br/>You are carrying a pants (worn).<br/>&gt; drop pants<br/>You drop it.<br/>&gt; inv<br/>You are carrying a pants (worn).<br/>&gt; look<br/>You are in a room. --- (you don't see any pants)<br/><br/>The DoWear sets the worn object's .drop attribute to false, and doesn't mess around with anything else having to do with dropping. If .drop = false then you can't drop it. If DoWear makes a mistake and .drop = true then you can drop it.<br/>The core library handles that. I would guess the false drop message is coming from a script.<br/>Could you post the code for one of the clothing objects?</p></blockquote><br/><br/>Yeah, of course. Here is the code. <br/><br/><pre><code>          &lt;object name=&quot;cute_headband&quot;&gt;<br/>            &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>            &lt;inherit name=&quot;wearable&quot; /&gt;<br/>            &lt;alias&gt;Cute Headband&lt;/alias&gt;<br/>            &lt;look&gt;&lt;!&#91;CDATA&#91;&lt;br/&gt;A cute black headband with a shimmering silk strip down the center&#46;  &#93;&#93;&gt;&lt;/look&gt;<br/>            &lt;usedefaultprefix type=&quot;boolean&quot;&gt;false&lt;/usedefaultprefix&gt;<br/>            &lt;alt type=&quot;stringlist&quot;&gt;<br/>              &lt;value&gt;cute headband&lt;/value&gt;<br/>              &lt;value&gt;head band&lt;/value&gt;<br/>              &lt;value&gt;black headband&lt;/value&gt;<br/>              &lt;value&gt;cute black headband&lt;/value&gt;<br/>            &lt;/alt&gt;<br/>            &lt;take /&gt;<br/>            &lt;volume type=&quot;int&quot;&gt;1&lt;/volume&gt;<br/>            &lt;takemsg&gt;You take the headband in hand&#46; &lt;/takemsg&gt;<br/>            &lt;dropmsg&gt;&lt;!&#91;CDATA&#91;{once&#58;(You have to &quot;&lt;i&gt;Remove&lt;/i&gt;&quot; it before you can drop it)} You drop the headband&#46; &#93;&#93;&gt;&lt;/dropmsg&gt;<br/>            &lt;attr name=&quot;wear_layer&quot; type=&quot;int&quot;&gt;9&lt;/attr&gt;<br/>            &lt;inventoryverbs type=&quot;stringlist&quot;&gt;<br/>              &lt;value&gt;Look at&lt;/value&gt;<br/>              &lt;value&gt;Drop&lt;/value&gt;<br/>              &lt;value&gt;Wear&lt;/value&gt;<br/>              &lt;value&gt;Remove&lt;/value&gt;<br/>            &lt;/inventoryverbs&gt;<br/>          &lt;/object&gt;</code></pre><br/><br/>I use the default take and drop messages from the game, not the &quot;wearables&quot; drop and remove customizable scripts. Does that matter?",
      "PostDate": "2015-08-17T18:52:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37685",
      "UserId": 0,
      "Username": "TM123",
      "UserAvatar": null,
      "UserGravatar": "6f54d3b84fe319d79f8df732b1676a50",
      "EditableText": "Here's the problem, in the inventory custom drop message:\n\n[code:2hx5ep6e]&lt;dropmsg&gt;&lt;!&#91;CDATA&#91;{once&#58;(You have to &quot;&lt;i&gt;Remove&lt;/i&gt;&quot; it before you can drop it)} You drop the headband&#46; &#93;&#93;&gt;&lt;/dropmsg&gt;[/code:2hx5ep6e]\n\nYou need some more logic in there.\n\n[code:2hx5ep6e]&lt;dropmsg&gt;&lt;!&#91;CDATA&#91;{if cute_headband&#46;worn&#58;You can't drop it&#46;{once&#58; You have to &quot;&lt;i&gt;Remove&lt;/i&gt;&quot; it before you can drop it&#46;}} {if not cute_headband&#46;worn&#58;You drop the headband&#46;}&#93;&#93;&gt;&lt;/dropmsg&gt;[/code:2hx5ep6e]\n\nIf it is worn, it will give this message the first time:\nYou can't drop it. You have to &quot;Remove&quot; it before you can drop it.\nAfter the first time:\nYou can't drop it.\nIf it is not worn:\nYou drop the headband.",
      "EditableFormat": "bbcode",
      "HTML": "Here's the problem, in the inventory custom drop message:<br/><br/><pre><code>&lt;dropmsg&gt;&lt;!&#91;CDATA&#91;{once&#58;(You have to &quot;&lt;i&gt;Remove&lt;/i&gt;&quot; it before you can drop it)} You drop the headband&#46; &#93;&#93;&gt;&lt;/dropmsg&gt;</code></pre><br/><br/>You need some more logic in there.<br/><br/><pre><code>&lt;dropmsg&gt;&lt;!&#91;CDATA&#91;{if cute_headband&#46;worn&#58;You can't drop it&#46;{once&#58; You have to &quot;&lt;i&gt;Remove&lt;/i&gt;&quot; it before you can drop it&#46;}} {if not cute_headband&#46;worn&#58;You drop the headband&#46;}&#93;&#93;&gt;&lt;/dropmsg&gt;</code></pre><br/><br/>If it is worn, it will give this message the first time:<br/>You can't drop it. You have to &quot;Remove&quot; it before you can drop it.<br/>After the first time:<br/>You can't drop it.<br/>If it is not worn:<br/>You drop the headband.",
      "PostDate": "2015-08-17T20:22:02+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37689",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Oh, great! That worked like a charm. Appreciate you looking into this for me! I hope it helps some other people using this library as well!",
      "EditableFormat": "bbcode",
      "HTML": "Oh, great! That worked like a charm. Appreciate you looking into this for me! I hope it helps some other people using this library as well!",
      "PostDate": "2015-08-18T04:52:18+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37980",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "I had another question. Is there a way to do a &quot;wear&quot; check --- meaning that if the character approach an NPC and are carrying the clothes but not wearing them, that the NPC will be all freaked out? Just wondering!\n\n\nI was also wondering if the &quot;text processor&quot; could recognize the same thing like in the descriptions of the clothing. Wearing and not wearing.\n\nOh, and is there a way for the clothing item to have a check on &quot;body parts&quot; like if the player is too &quot;large&quot; to wear something the item cannot be worn, \n\nFor example...\n\n{if player.weight&lt;4: You are too large to wear this.}",
      "EditableFormat": "bbcode",
      "HTML": "I had another question. Is there a way to do a &quot;wear&quot; check --- meaning that if the character approach an NPC and are carrying the clothes but not wearing them, that the NPC will be all freaked out? Just wondering!<br/><br/><br/>I was also wondering if the &quot;text processor&quot; could recognize the same thing like in the descriptions of the clothing. Wearing and not wearing.<br/><br/>Oh, and is there a way for the clothing item to have a check on &quot;body parts&quot; like if the player is too &quot;large&quot; to wear something the item cannot be worn, <br/><br/>For example...<br/><br/>{if player.weight&lt;4: You are too large to wear this.}",
      "PostDate": "2015-09-13T22:32:31+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38032",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "So anyone have any idea?",
      "EditableFormat": "bbcode",
      "HTML": "So anyone have any idea?",
      "PostDate": "2015-09-21T22:38:31+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38035",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "You can check if a specific item is worn with the &quot;worn&quot; Boolean attribute. To check if the player is naked, check all held items.\n[code:2jcry1zj]naked = true\nforeach(o, ScopeInventory ()) {\n  if (GetBoolean(o, &quot;worn&quot;)) {\n    naked = false\n  }\n}\nif (naked) {\n  msg(&quot;He freaks out, what with you being naked&#46;&quot;)\n}[/code:2jcry1zj]\nOf course, if the player is just wearing a pair of heels, the character will not be freaked out... I guess you could also check the &quot;wear_slots&quot; attribute too.\n[code:2jcry1zj]naked = true\nforeach(o, ScopeInventory ()) {\n  if (GetBoolean(o, &quot;worn&quot;)) {\n    if (o&#46;wear_slots = &quot;chest&quot; or o&#46;wear_slots = &quot;groin&quot;) {\n      naked = false\n    }\n  }\n}\nif (naked) {\n  msg(&quot;He freaks out, what with you being naked&#46;&quot;)\n}[/code:2jcry1zj]\nFor text processor, if you are describing one specific item, again you can use the &quot;worn&quot; attribute, but it cannot handle anything more complicated.\n[code:2jcry1zj]The bowtie{if bowtie&#46;worn&#58; that you are wearing} is black&#46;[/code:2jcry1zj]",
      "EditableFormat": "bbcode",
      "HTML": "You can check if a specific item is worn with the &quot;worn&quot; Boolean attribute. To check if the player is naked, check all held items.<br/><pre><code>naked = true<br/>foreach(o, ScopeInventory ()) {<br/>  if (GetBoolean(o, &quot;worn&quot;)) {<br/>    naked = false<br/>  }<br/>}<br/>if (naked) {<br/>  msg(&quot;He freaks out, what with you being naked&#46;&quot;)<br/>}</code></pre><br/>Of course, if the player is just wearing a pair of heels, the character will not be freaked out... I guess you could also check the &quot;wear_slots&quot; attribute too.<br/><pre><code>naked = true<br/>foreach(o, ScopeInventory ()) {<br/>  if (GetBoolean(o, &quot;worn&quot;)) {<br/>    if (o&#46;wear_slots = &quot;chest&quot; or o&#46;wear_slots = &quot;groin&quot;) {<br/>      naked = false<br/>    }<br/>  }<br/>}<br/>if (naked) {<br/>  msg(&quot;He freaks out, what with you being naked&#46;&quot;)<br/>}</code></pre><br/>For text processor, if you are describing one specific item, again you can use the &quot;worn&quot; attribute, but it cannot handle anything more complicated.<br/><pre><code>The bowtie{if bowtie&#46;worn&#58; that you are wearing} is black&#46;</code></pre>",
      "PostDate": "2015-09-22T08:25:03+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38065",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Thanks Pix!\n\nSo just to be clear...\n\n[code:17jmpnr9]&#91;quote&#93;naked = true\nforeach(o, ScopeInventory ()) {\n  if (GetBoolean(o, &quot;worn&quot;)) {\n    if (o&#46;wear_slots = &quot;chest&quot; or o&#46;wear_slots = &quot;groin&quot;) {\n      naked = false\n    }\n  }\n}\nif (naked) {\n  msg(&quot;He freaks out, what with you being naked&#46;&quot;)\n}&#91;/quote&#93;[/code:17jmpnr9]\n\n^--- what is the &quot;o&quot; in o.wear_slots? This will likely be the one I'll be using for most events if the player is indeed nekkid, haha.\n\nAlso, thank you for sending that revised version of the game. I haven't been able to look at it yet because I have two exams practically back-to-back so I've been studying my booty off. Ugh! But I'll get back to you on it asap!",
      "EditableFormat": "bbcode",
      "HTML": "Thanks Pix!<br/><br/>So just to be clear...<br/><br/><pre><code>&#91;quote&#93;naked = true<br/>foreach(o, ScopeInventory ()) {<br/>  if (GetBoolean(o, &quot;worn&quot;)) {<br/>    if (o&#46;wear_slots = &quot;chest&quot; or o&#46;wear_slots = &quot;groin&quot;) {<br/>      naked = false<br/>    }<br/>  }<br/>}<br/>if (naked) {<br/>  msg(&quot;He freaks out, what with you being naked&#46;&quot;)<br/>}&#91;/quote&#93;</code></pre><br/><br/>^--- what is the &quot;o&quot; in o.wear_slots? This will likely be the one I'll be using for most events if the player is indeed nekkid, haha.<br/><br/>Also, thank you for sending that revised version of the game. I haven't been able to look at it yet because I have two exams practically back-to-back so I've been studying my booty off. Ugh! But I'll get back to you on it asap!",
      "PostDate": "2015-09-24T05:50:27+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38067",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;Neonayon&quot;:2r04mp84]^--- what is the &quot;o&quot; in o.wear_slots? This will likely be the one I'll be using for most events if the player is indeed nekkid, haha.[/quote:2r04mp84]\nThe code uses [i:2r04mp84]foreach [/i:2r04mp84]to test each object in a list (which comes from [i:2r04mp84]ScopeInventory[/i:2r04mp84]). Inside the loop, [i:2r04mp84]o[/i:2r04mp84] is the current list entry. Say the player has a hat and a teapot, the first time through the list [i:2r04mp84]o[/i:2r04mp84] is the hat, the second time [i:2r04mp84]o[/i:2r04mp84] is the teapot. You can use any name for the variable, I use [i:2r04mp84]o[/i:2r04mp84] to stand for object.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Neonayon wrote:</cite>^--- what is the &quot;o&quot; in o.wear_slots? This will likely be the one I'll be using for most events if the player is indeed nekkid, haha.</blockquote><br/>The code uses <span style=\"font-style:italic;\">foreach </span>to test each object in a list (which comes from <span style=\"font-style:italic;\">ScopeInventory</span>). Inside the loop, <span style=\"font-style:italic;\">o</span> is the current list entry. Say the player has a hat and a teapot, the first time through the list <span style=\"font-style:italic;\">o</span> is the hat, the second time <span style=\"font-style:italic;\">o</span> is the teapot. You can use any name for the variable, I use <span style=\"font-style:italic;\">o</span> to stand for object.",
      "PostDate": "2015-09-24T08:27:32+01:00",
      "LastEditDate": null
    }
  ]
}
