{
  "Topic": {
    "TopicId": "103",
    "ForumId": "10",
    "Title": "ASL error debugging",
    "LastUpdated": "2003-11-01T23:23:56+00:00",
    "ReplyCount": 16
  },
  "Posts": [
    {
      "PostId": "471",
      "UserId": 0,
      "Username": "Farvardin",
      "UserAvatar": null,
      "UserGravatar": "b6ea46e28b64e5f7c68f80468607f022",
      "EditableText": "I got the problem recently, I couldn't open my ASL file neither in Quest nor in QDK, because there was a mismatching { } error. I couldn't trace it down, I looked in all my code but I had changed rather many things in it. Generally I changed only one or two things by hand, so with such an error it was quick to find it, but for some huger changes, it's much more difficult. \nThe log gave only :\n\n11:02:19 FATAL ERROR: Missing }\n11:02:19 INIT: Unable to open file\n\nIt would have helped much to get the line where it happen, or in which context.\n\nIn the case it happens to someone, this application helped me much to find the error :\n\n<!-- m --><a class=\"postlink\" href=\"ftp://ftp.flashnet.it/pub/simtelnet/win95/prog/parenmat.zip\">ftp://ftp.flashnet.it/pub/simtelnet/win ... renmat.zip</a><!-- m -->\n\nbut you have to change in a temporary file a few things :\n\nremove all the ()\nchange { } to ()\nremove all the ;\n\nthen you can trace the problem",
      "EditableFormat": "bbcode",
      "HTML": "I got the problem recently, I couldn't open my ASL file neither in Quest nor in QDK, because there was a mismatching { } error. I couldn't trace it down, I looked in all my code but I had changed rather many things in it. Generally I changed only one or two things by hand, so with such an error it was quick to find it, but for some huger changes, it's much more difficult. <br/>The log gave only :<br/><br/>11:02:19 FATAL ERROR: Missing }<br/>11:02:19 INIT: Unable to open file<br/><br/>It would have helped much to get the line where it happen, or in which context.<br/><br/>In the case it happens to someone, this application helped me much to find the error :<br/><br/><!-- m --><a class=\"postlink\" href=\"ftp://ftp.flashnet.it/pub/simtelnet/win95/prog/parenmat.zip\">ftp://ftp.flashnet.it/pub/simtelnet/win ... renmat.zip</a><!-- m --><br/><br/>but you have to change in a temporary file a few things :<br/><br/>remove all the ()<br/>change { } to ()<br/>remove all the ;<br/><br/>then you can trace the problem",
      "PostDate": "2003-08-28T10:10:12+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "472",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "I've had a couple of reports of this in the past, but I've never been able to reproduce the problem. If you save your ASL file with different names each time, then you can go back to the version before the file was saved incorrectly. If you could then send that to me and tell me exactly what you did next, I will be able to reproduce the problem and fix it.\n\nIf you don't have a copy of the file before it was broken, then if you can tell me what you were editing before you saved, I can try and have a go at reproducing it.",
      "EditableFormat": "bbcode",
      "HTML": "I've had a couple of reports of this in the past, but I've never been able to reproduce the problem. If you save your ASL file with different names each time, then you can go back to the version before the file was saved incorrectly. If you could then send that to me and tell me exactly what you did next, I will be able to reproduce the problem and fix it.<br/><br/>If you don't have a copy of the file before it was broken, then if you can tell me what you were editing before you saved, I can try and have a go at reproducing it.",
      "PostDate": "2003-08-28T10:27:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "473",
      "UserId": 0,
      "Username": "Farvardin",
      "UserAvatar": null,
      "UserGravatar": "b6ea46e28b64e5f7c68f80468607f022",
      "EditableText": "The problem wasn't produced by QDK, it was my own fault : I forgot a closing } in the ASL code I was editing by hand. It's just it'd be easier to trace such problem if the log could tell on which line in the ASL code it occured, instead of being forced to check all {} visually (I did this before finding the other software which can detect such error)",
      "EditableFormat": "bbcode",
      "HTML": "The problem wasn't produced by QDK, it was my own fault : I forgot a closing } in the ASL code I was editing by hand. It's just it'd be easier to trace such problem if the log could tell on which line in the ASL code it occured, instead of being forced to check all {} visually (I did this before finding the other software which can detect such error)",
      "PostDate": "2003-08-28T15:42:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "476",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "Oh I see - that's alright then. The bug I mentioned I had a couple of reports late last year, but none since, so maybe I fixed it \"accidentally\". Which is always nice <!-- s:) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nI would like to be able to implement something that would tell you where your } was missing, but I can't think of a good way for Quest to guess where something that's missing should be. It does quite a simple check, basically counting all the { and all the } to see if there are the same number of each. I suppose I could make it count for each \"define\" block separately, and then at least that would narrow it down to a particular part of the game.",
      "EditableFormat": "bbcode",
      "HTML": "Oh I see - that's alright then. The bug I mentioned I had a couple of reports late last year, but none since, so maybe I fixed it \"accidentally\". Which is always nice <!-- s:) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>I would like to be able to implement something that would tell you where your } was missing, but I can't think of a good way for Quest to guess where something that's missing should be. It does quite a simple check, basically counting all the { and all the } to see if there are the same number of each. I suppose I could make it count for each \"define\" block separately, and then at least that would narrow it down to a particular part of the game.",
      "PostDate": "2003-08-28T18:19:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "479",
      "UserId": 0,
      "Username": "Farvardin",
      "UserAvatar": null,
      "UserGravatar": "b6ea46e28b64e5f7c68f80468607f022",
      "EditableText": "when it parses fhe files, and note the missing {, just to get the line where it's missing would be enough I think.\nOr is it checking the whole file and send the error report at the end ?",
      "EditableFormat": "bbcode",
      "HTML": "when it parses fhe files, and note the missing {, just to get the line where it's missing would be enough I think.<br/>Or is it checking the whole file and send the error report at the end ?",
      "PostDate": "2003-08-28T19:34:42+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "483",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "It checks the whole file at once. There's no way it can \"see\" where a missing brace might be, because the brace isn't there! Consider the following:\n\n[code:3ab79fbd]\ncommand &lt;something&gt; &#123;\nif got &lt;thing&gt; then &#123;\nmsg &lt;Blah blah&gt;\ngive &lt;wotsit&gt;\n&#125;\n[/code:3ab79fbd]\n\nWhere is the missing brace? Because the brace isn't there, you can't know where it, er, isn't! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> It could be missing after the msg command, or it might be missing after the give command.\n\nNow in the above example we know the missing brace is somewhere in the code block after \"command\". If there was another \"command\" line following the code above, we could tell that the missing brace was in the first \"command\" block, because we know you can't nest one \"command\" line in another. But Quest isn't clever enough to put that much thought into it - it doesn't know that \"command\" isn't a script command for example, when it's checking the braces. After all, it could be something implemented in a future version, in which case it might make sense for a \"command\" script command to appear inside a \"command\" block. Quest only knows that \"command\" isn't a script command if you try to execute that command. So, when it's just checking braces, it doesn't look at things to see if they make sense - that's where you, the programmer, come in.\n\nSo this all basically means that it can't tell you the line where the brace is missing - it may be impossible to tell anyway, and even if it [i:3ab79fbd]is[/i:3ab79fbd] possible for a human to tell, Quest's brace-checking code isn't sophisticated enough.\n\nAs I say though, it should be possible for Quest to tell you which \"define\" block the problem resides in, as you can't nest those. Quest's brace checking routines don't know that yet, but it should be reasonably easy and future-proof to make them know, so I think this would be a good addition. It's now on my ever-increasing \"to do\" list...",
      "EditableFormat": "bbcode",
      "HTML": "It checks the whole file at once. There's no way it can \"see\" where a missing brace might be, because the brace isn't there! Consider the following:<br/><br/><pre><code><br/>command &lt;something&gt; &#123;<br/>if got &lt;thing&gt; then &#123;<br/>msg &lt;Blah blah&gt;<br/>give &lt;wotsit&gt;<br/>&#125;<br/></code></pre><br/><br/>Where is the missing brace? Because the brace isn't there, you can't know where it, er, isn't! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> It could be missing after the msg command, or it might be missing after the give command.<br/><br/>Now in the above example we know the missing brace is somewhere in the code block after \"command\". If there was another \"command\" line following the code above, we could tell that the missing brace was in the first \"command\" block, because we know you can't nest one \"command\" line in another. But Quest isn't clever enough to put that much thought into it - it doesn't know that \"command\" isn't a script command for example, when it's checking the braces. After all, it could be something implemented in a future version, in which case it might make sense for a \"command\" script command to appear inside a \"command\" block. Quest only knows that \"command\" isn't a script command if you try to execute that command. So, when it's just checking braces, it doesn't look at things to see if they make sense - that's where you, the programmer, come in.<br/><br/>So this all basically means that it can't tell you the line where the brace is missing - it may be impossible to tell anyway, and even if it <span style=\"font-style:italic;\">is</span> possible for a human to tell, Quest's brace-checking code isn't sophisticated enough.<br/><br/>As I say though, it should be possible for Quest to tell you which \"define\" block the problem resides in, as you can't nest those. Quest's brace checking routines don't know that yet, but it should be reasonably easy and future-proof to make them know, so I think this would be a good addition. It's now on my ever-increasing \"to do\" list...",
      "PostDate": "2003-08-28T21:30:42+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "485",
      "UserId": 0,
      "Username": "I think Im Dead",
      "UserAvatar": null,
      "UserGravatar": "662782b48efa4728f8d0773b83c01ddf",
      "EditableText": "indenting ala...\n\n[code:1rp6bmq2]\n\n\tcommand &lt;warp to #target-room#&gt; if &#40; $objectproperty&#40;player%userid%; usrlvl&#41;$ &gt;= 2 &#41; then msg &lt;I don't understand what you typed&#46;|n&gt; else &#123; \n\t\t\tmsg &lt;You focus intently on your destination and begin to plane shift&#46;|n&gt;\n\t\t\tgoto &lt;#target-room#&gt;\n\t\t&#125;\n\n[/code:1rp6bmq2]\n\nIs a good way to keep track of your more complex pieces of ASL and where closing braces should be.... ala...\n\n[code:1rp6bmq2]\n\tcommand &lt;take-do&gt; if &#40; $objectproperty&#40;player%userid%-r-hand; held&#41;$ = null &#41; then &#123;\n\t\tset string &lt;target-object; $getobjectname&#40;#target-object#&#41;$&gt;\n\t\tmove &lt;#target-object#; player%userid%-r-hand&gt;\n\t\tproperty &lt;player%userid%-r-hand; held=#target-object#&gt;\n\t\tproperty &lt;player%userid%-r-hand; held-name=$displayname&#40;#target-object#&#41;$&gt;\n\t\tproperty &lt;player%userid%-r-hand; held-short=$objectproperty&#40;#target-object#; short&#41;$&gt;\n\t\tif property &lt;#target-object#; prefix&gt; then property &lt;player%userid%-r-hand; held-display=$objectproperty&#40;#target-object#; prefix&#41;$ $displayname&#40;#target-object#&#41;$&gt;\n\t\tif property &lt;#target-object#; suffix&gt; then property &lt;player%userid%-r-hand; held-display=$objectproperty&#40;#target-object#; prefix&#41;$ $displayname&#40;#target-object#&#41;$$objectproperty&#40;#target-object#; suffix&#41;$&gt;\n\t\tmsg &lt;You pick up the $displayname&#40;#target-object#&#41;$ with your right hand&#46;|n&gt;\n\t&#125;\n\telse &#123;\n\t\tif &#40; $objectproperty&#40;player%userid%-l-hand; held&#41;$ = null &#41; then &#123;\n\t\t\tmove &lt;#target-object#; player%userid%-l-hand&gt;\n\t\t\tproperty &lt;player%userid%-l-hand; held=#target-object#&gt;\n\t\t\tproperty &lt;player%userid%-l-hand; held-name=$displayname&#40;#target-object#&#41;$&gt;\n\t\t\tproperty &lt;player%userid%-l-hand; held-short=$objectproperty&#40;#target-object#; short&#41;$&gt;\n\t\t\tif property &lt;#target-object#; prefix&gt; then property &lt;player%userid%-l-hand; held-display=$objectproperty&#40;#target-object#; prefix&#41;$ $displayname&#40;#target-object#&#41;$&gt;\n\t\t\tif property &lt;#target-object#; suffix&gt; then property &lt;player%userid%-l-hand; held-display=$objectproperty&#40;#target-object#; prefix&#41;$ $displayname&#40;#target-object#&#41;$$objectproperty&#40;#target-object#; suffix&#41;$&gt;\n\t\t\tmsg &lt;You pick up the $displayname&#40;#target-object#&#41;$ with your left hand&#46;|n&gt;\n\t\t&#125;\n\t\telse msg &lt;Both of your hands are full&#46;|n&gt;\n\t&#125;\n[/code:1rp6bmq2]\n\nJust a suggestion, it's what I do.",
      "EditableFormat": "bbcode",
      "HTML": "indenting ala...<br/><br/><pre><code><br/><br/>\tcommand &lt;warp to #target-room#&gt; if &#40; $objectproperty&#40;player%userid%; usrlvl&#41;$ &gt;= 2 &#41; then msg &lt;I don't understand what you typed&#46;|n&gt; else &#123; <br/>\t\t\tmsg &lt;You focus intently on your destination and begin to plane shift&#46;|n&gt;<br/>\t\t\tgoto &lt;#target-room#&gt;<br/>\t\t&#125;<br/><br/></code></pre><br/><br/>Is a good way to keep track of your more complex pieces of ASL and where closing braces should be.... ala...<br/><br/><pre><code><br/>\tcommand &lt;take-do&gt; if &#40; $objectproperty&#40;player%userid%-r-hand; held&#41;$ = null &#41; then &#123;<br/>\t\tset string &lt;target-object; $getobjectname&#40;#target-object#&#41;$&gt;<br/>\t\tmove &lt;#target-object#; player%userid%-r-hand&gt;<br/>\t\tproperty &lt;player%userid%-r-hand; held=#target-object#&gt;<br/>\t\tproperty &lt;player%userid%-r-hand; held-name=$displayname&#40;#target-object#&#41;$&gt;<br/>\t\tproperty &lt;player%userid%-r-hand; held-short=$objectproperty&#40;#target-object#; short&#41;$&gt;<br/>\t\tif property &lt;#target-object#; prefix&gt; then property &lt;player%userid%-r-hand; held-display=$objectproperty&#40;#target-object#; prefix&#41;$ $displayname&#40;#target-object#&#41;$&gt;<br/>\t\tif property &lt;#target-object#; suffix&gt; then property &lt;player%userid%-r-hand; held-display=$objectproperty&#40;#target-object#; prefix&#41;$ $displayname&#40;#target-object#&#41;$$objectproperty&#40;#target-object#; suffix&#41;$&gt;<br/>\t\tmsg &lt;You pick up the $displayname&#40;#target-object#&#41;$ with your right hand&#46;|n&gt;<br/>\t&#125;<br/>\telse &#123;<br/>\t\tif &#40; $objectproperty&#40;player%userid%-l-hand; held&#41;$ = null &#41; then &#123;<br/>\t\t\tmove &lt;#target-object#; player%userid%-l-hand&gt;<br/>\t\t\tproperty &lt;player%userid%-l-hand; held=#target-object#&gt;<br/>\t\t\tproperty &lt;player%userid%-l-hand; held-name=$displayname&#40;#target-object#&#41;$&gt;<br/>\t\t\tproperty &lt;player%userid%-l-hand; held-short=$objectproperty&#40;#target-object#; short&#41;$&gt;<br/>\t\t\tif property &lt;#target-object#; prefix&gt; then property &lt;player%userid%-l-hand; held-display=$objectproperty&#40;#target-object#; prefix&#41;$ $displayname&#40;#target-object#&#41;$&gt;<br/>\t\t\tif property &lt;#target-object#; suffix&gt; then property &lt;player%userid%-l-hand; held-display=$objectproperty&#40;#target-object#; prefix&#41;$ $displayname&#40;#target-object#&#41;$$objectproperty&#40;#target-object#; suffix&#41;$&gt;<br/>\t\t\tmsg &lt;You pick up the $displayname&#40;#target-object#&#41;$ with your left hand&#46;|n&gt;<br/>\t\t&#125;<br/>\t\telse msg &lt;Both of your hands are full&#46;|n&gt;<br/>\t&#125;<br/></code></pre><br/><br/>Just a suggestion, it's what I do.",
      "PostDate": "2003-08-28T21:38:14+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "487",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "Yes, it's a very good idea to indent all code in braces. This lets you see easily which bit belongs where.\n\nIt's not very helpful as far as Quest's error checking goes though, as you don't [i:1zofhle9]have[/i:1zofhle9] to indent your code, and if you do you might do it in a different way to other people. And indents are removed when Quest loads your ASL file anyway. So this means they're not very helpful to Quest for finding where a missing brace might be - however they can be very helpful to you so you don't miss them off in the first place.",
      "EditableFormat": "bbcode",
      "HTML": "Yes, it's a very good idea to indent all code in braces. This lets you see easily which bit belongs where.<br/><br/>It's not very helpful as far as Quest's error checking goes though, as you don't <span style=\"font-style:italic;\">have</span> to indent your code, and if you do you might do it in a different way to other people. And indents are removed when Quest loads your ASL file anyway. So this means they're not very helpful to Quest for finding where a missing brace might be - however they can be very helpful to you so you don't miss them off in the first place.",
      "PostDate": "2003-08-28T21:44:39+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "489",
      "UserId": 0,
      "Username": "Farvardin",
      "UserAvatar": null,
      "UserGravatar": "b6ea46e28b64e5f7c68f80468607f022",
      "EditableText": "[quote:2924iyt0]As I say though, it should be possible for Quest to tell you which \"define\" block the problem resides in, as you can't nest those[/quote:2924iyt0]\n\nI probably didn't think enough when I suggest the parser could tell where the missing {} is. \nOf course knowing approximately where the problem occur is enough : if it can tell a \"define\" or a block has an odd number of brace then it's ok.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>As I say though, it should be possible for Quest to tell you which \"define\" block the problem resides in, as you can't nest those</p></blockquote><br/><br/>I probably didn't think enough when I suggest the parser could tell where the missing {} is. <br/>Of course knowing approximately where the problem occur is enough : if it can tell a \"define\" or a block has an odd number of brace then it's ok.",
      "PostDate": "2003-08-28T22:13:42+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "882",
      "UserId": 0,
      "Username": "codingmasters",
      "UserAvatar": null,
      "UserGravatar": "250751f8970f3fa0c377f52a0c81831f",
      "EditableText": "Alex maybe a good idea might be to add a line number for each and every line in the ASL code, and get QDK to add it to.\n\nBy doing this u can also add a goto function, but that means that the coder needs to know what the number is.\n\nMatthew G.",
      "EditableFormat": "bbcode",
      "HTML": "Alex maybe a good idea might be to add a line number for each and every line in the ASL code, and get QDK to add it to.<br/><br/>By doing this u can also add a goto function, but that means that the coder needs to know what the number is.<br/><br/>Matthew G.",
      "PostDate": "2003-10-30T06:23:40+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "885",
      "UserId": 0,
      "Username": "I think Im Dead",
      "UserAvatar": null,
      "UserGravatar": "662782b48efa4728f8d0773b83c01ddf",
      "EditableText": "Actually, and it should have been brought up, that if Quest gets an error because a bracket isn't there, then obviously the program knows where it should be. If only because it was expecting one to close an argument/piece of script/whatever. Also, most compilers include such a function and while I don't mean to be insulting or assume too much, Quest is basically a compiler(mayber interpreter?) for the asl syntax.",
      "EditableFormat": "bbcode",
      "HTML": "Actually, and it should have been brought up, that if Quest gets an error because a bracket isn't there, then obviously the program knows where it should be. If only because it was expecting one to close an argument/piece of script/whatever. Also, most compilers include such a function and while I don't mean to be insulting or assume too much, Quest is basically a compiler(mayber interpreter?) for the asl syntax.",
      "PostDate": "2003-10-30T11:12:18+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "886",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "Actually Quest only knows a bracket isn't there because the number of { doesn't match the number of }. I've not implemented any artificial intelligence for Quest to guess where the missing bracket might be, so you'll have to add them yourself.\n\nLine numbers and GOTO is a really horrible idea! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> There really is no need for them, they wouldn't sit well logically in the ASL structure and they'd be really inconvenient.",
      "EditableFormat": "bbcode",
      "HTML": "Actually Quest only knows a bracket isn't there because the number of { doesn't match the number of }. I've not implemented any artificial intelligence for Quest to guess where the missing bracket might be, so you'll have to add them yourself.<br/><br/>Line numbers and GOTO is a really horrible idea! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> There really is no need for them, they wouldn't sit well logically in the ASL structure and they'd be really inconvenient.",
      "PostDate": "2003-10-30T11:35:11+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "890",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "Haha - now I've moved on from line-numbered BASIC I wonder how I ever coped with it! It's quite horrific to look back to some of my older programs on the old Sinclair QL and see \"spaghetti-code\" <!-- s:wink: --><img src=\"{SMILIES_PATH}/icon_e_wink.gif\" alt=\":wink:\" title=\"Wink\" /><!-- s:wink: --> .\n\nAnyway, as Alex has said before, a game block identification would be helpful because often I change two or three blocks in different files and keeping track is quite hard in this occasion. But it is quite hard to tell exactly where a bracket is missing - but it shouldn't be too hard to tell roughly where the extra bracket that needs closing is.",
      "EditableFormat": "bbcode",
      "HTML": "Haha - now I've moved on from line-numbered BASIC I wonder how I ever coped with it! It's quite horrific to look back to some of my older programs on the old Sinclair QL and see \"spaghetti-code\" <!-- s:wink: --><img src=\"{SMILIES_PATH}/icon_e_wink.gif\" alt=\":wink:\" title=\"Wink\" /><!-- s:wink: --> .<br/><br/>Anyway, as Alex has said before, a game block identification would be helpful because often I change two or three blocks in different files and keeping track is quite hard in this occasion. But it is quite hard to tell exactly where a bracket is missing - but it shouldn't be too hard to tell roughly where the extra bracket that needs closing is.",
      "PostDate": "2003-10-30T14:11:53+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "985",
      "UserId": 0,
      "Username": "codingmasters",
      "UserAvatar": null,
      "UserGravatar": "250751f8970f3fa0c377f52a0c81831f",
      "EditableText": "Why would line numbers and a GOTO function be bad?  And also, for the very first post, why couldn't you just open up the ASL file in Notepad or another text editor and correct the problem?  Or you could use Computer Whizz's (I think) ASL editor.\n\nMatthew G.",
      "EditableFormat": "bbcode",
      "HTML": "Why would line numbers and a GOTO function be bad?  And also, for the very first post, why couldn't you just open up the ASL file in Notepad or another text editor and correct the problem?  Or you could use Computer Whizz's (I think) ASL editor.<br/><br/>Matthew G.",
      "PostDate": "2003-11-01T03:27:30+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "1003",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "The first post was made back in August and he's probably fixed it - but you're right you'd open it in notepad or some other ASCII editor.\n\nGOTO would create all hell, mess up readable code, generate all bugs and generally be a total mistake!",
      "EditableFormat": "bbcode",
      "HTML": "The first post was made back in August and he's probably fixed it - but you're right you'd open it in notepad or some other ASCII editor.<br/><br/>GOTO would create all hell, mess up readable code, generate all bugs and generally be a total mistake!",
      "PostDate": "2003-11-01T11:30:18+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "1004",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "The first post was made back in August and he's probably fixed it - but you're right you'd open it in notepad or some other ASCII editor.\n\nGOTO would create all hell, mess up readable code, generate all bugs and generally be a total mistake!",
      "EditableFormat": "bbcode",
      "HTML": "The first post was made back in August and he's probably fixed it - but you're right you'd open it in notepad or some other ASCII editor.<br/><br/>GOTO would create all hell, mess up readable code, generate all bugs and generally be a total mistake!",
      "PostDate": "2003-11-01T11:30:33+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "1013",
      "UserId": 0,
      "Username": "codingmasters",
      "UserAvatar": null,
      "UserGravatar": "250751f8970f3fa0c377f52a0c81831f",
      "EditableText": "OK, but how?\n\nMatthew G.",
      "EditableFormat": "bbcode",
      "HTML": "OK, but how?<br/><br/>Matthew G.",
      "PostDate": "2003-11-01T23:23:56+00:00",
      "LastEditDate": null
    }
  ]
}
