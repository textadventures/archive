{
  "Topic": {
    "TopicId": "j_i6va5jwkawvapbolcvzg",
    "ForumId": "10",
    "Title": "Monster/NPC magic attacks (SOLVED 8-10-2017)",
    "LastUpdated": "2017-08-01T00:49:37.948716Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "45b1c6e6-bcf9-4330-af9f-641c5232816a",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/4DfRYkpb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I haven't seen mention of monsters made with CombatLib3.0 making magic attacks against the player. When you attack a monster their return is always physical.\r\nAre the clone monster of CombatLib 2.0 still useable in 3.0? These have magic users and are good for basic random volley but I'd like to add magic use to NPC's\r\n It's not like you can add a fire spell to the monster/NPC as an object and have them use it instead of a physical attack. (Or can you?) I just change the (attackplayer) attribute of the monster and in the line where It is swinging and hitting you is replaced with some motion made by the monster and a glowing ball shooting at player. Just that part of the line. And the attack continues with damage yada yada.\r\nPerhaps someone has a moment to show it in the combat creation of a monster if it is possible.\r\n\r\nI noticed with Non-weapon attack (Does not include \"you swing\") box checked that I was still get a \"You swing\" in the game. Maybe I've tweaked when I should have Twalked in my game somewhere.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I haven't seen mention of monsters made with CombatLib3.0 making magic attacks against the player. When you attack a monster their return is always physical.<br>\nAre the clone monster of CombatLib 2.0 still useable in 3.0? These have magic users and are good for basic random volley but I'd like to add magic use to NPC's<br>\nIt's not like you can add a fire spell to the monster/NPC as an object and have them use it instead of a physical attack. (Or can you?) I just change the (attackplayer) attribute of the monster and in the line where It is swinging and hitting you is replaced with some motion made by the monster and a glowing ball shooting at player. Just that part of the line. And the attack continues with damage yada yada.<br>\nPerhaps someone has a moment to show it in the combat creation of a monster if it is possible.</p>\n<p>I noticed with Non-weapon attack (Does not include \"you swing\") box checked that I was still get a \"You swing\" in the game. Maybe I've tweaked when I should have Twalked in my game somewhere.</p>\n\n",
      "PostDate": "2017-08-01T00:49:37.948716Z",
      "LastEditDate": "2017-08-11T06:30:54.02553Z",
      "link": null
    },
    {
      "PostId": "a3bbb74c-c577-49ef-8b08-c4b6e3c49b4e",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've not looked at Pixie's combat library, but a simple method of doing AI behavior:\r\n\r\nuse the 'GetRandomInt (MIN_VALUE, MAX_VALUE)' Function\r\n\r\nfor poor/bad and incomplete design example:\r\n\r\n(just for conception, but you can create a better design/system, which this is obviously not a good one)\r\n\r\n```\r\n<delegate name=\"combat_turn_delegate\" parameters=\"enemy_list_parameter, team_list_parameter, spell_list_parameter, action_list_parameter\"/>\r\n\r\n<object name=\"battlemage_team_member\">\r\n  <attr name=\"action_list_attribute\" type=\"simplestringlist\">attack; defend; cast; item; escape</attr>\r\n  <attr name=\"spell_list_attribute\" type=\"simplestringlist\">fireball; blizzard; meteor; tornado; quake</attr>\r\n  <attr name=\"combat_turn\" type=\"combat_turn_delegate\">\r\n    random_action_string_variable = StringListItem (battlemage_team_member.action_list_attribute, GetRandomInt (0, ListCount (action_list_parameter) - 1))\r\n    switch (random_action_string_variable) {\r\n      case (\"attack\") {\r\n        // blah scripting\r\n      }\r\n      case (\"defend\") {\r\n        // blah scripting\r\n      }\r\n      case (\"cast\") {\r\n        random_spell_string_variable = StringListItem (battlemage_team_member.spell_list_attribute, GetRandomInt (0, ListCount (spell_list_parameter) - 1))\r\n        // blah scripting, an example:\r\n        // random_spell_object_variable = GetObject (random_spell_string_variable)\r\n        // do (random_spell_object_variable, \"cast\")\r\n      }\r\n      case (\"item\") {\r\n        // blah scripting\r\n      }\r\n      case (\"escape\") {\r\n        // blah scripting\r\n      }\r\n    }\r\n  </attr>\r\n</object>\r\n\r\n<object name=\"fireball\">\r\n  <attr name=\"cast\" type=\"script\">\r\n    // blah scripting\r\n  </attr>\r\n</object>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I've not looked at Pixie's combat library, but a simple method of doing AI behavior:</p>\n<p>use the 'GetRandomInt (MIN_VALUE, MAX_VALUE)' Function</p>\n<p>for poor/bad and incomplete design example:</p>\n<p>(just for conception, but you can create a better design/system, which this is obviously not a good one)</p>\n<pre><code>&lt;delegate name=\"combat_turn_delegate\" parameters=\"enemy_list_parameter, team_list_parameter, spell_list_parameter, action_list_parameter\"/&gt;\n\n&lt;object name=\"battlemage_team_member\"&gt;\n  &lt;attr name=\"action_list_attribute\" type=\"simplestringlist\"&gt;attack; defend; cast; item; escape&lt;/attr&gt;\n  &lt;attr name=\"spell_list_attribute\" type=\"simplestringlist\"&gt;fireball; blizzard; meteor; tornado; quake&lt;/attr&gt;\n  &lt;attr name=\"combat_turn\" type=\"combat_turn_delegate\"&gt;\n    random_action_string_variable = StringListItem (battlemage_team_member.action_list_attribute, GetRandomInt (0, ListCount (action_list_parameter) - 1))\n    switch (random_action_string_variable) {\n      case (\"attack\") {\n        // blah scripting\n      }\n      case (\"defend\") {\n        // blah scripting\n      }\n      case (\"cast\") {\n        random_spell_string_variable = StringListItem (battlemage_team_member.spell_list_attribute, GetRandomInt (0, ListCount (spell_list_parameter) - 1))\n        // blah scripting, an example:\n        // random_spell_object_variable = GetObject (random_spell_string_variable)\n        // do (random_spell_object_variable, \"cast\")\n      }\n      case (\"item\") {\n        // blah scripting\n      }\n      case (\"escape\") {\n        // blah scripting\n      }\n    }\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"fireball\"&gt;\n  &lt;attr name=\"cast\" type=\"script\"&gt;\n    // blah scripting\n  &lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n\n",
      "PostDate": "2017-08-01T03:36:13.616595Z",
      "LastEditDate": "2017-08-01T03:37:01.969734Z",
      "link": null
    },
    {
      "PostId": "878fa83b-8a75-4ca7-8160-4e032c8f7885",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/4DfRYkpb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "hegemonkhan,\r\nIt is interesting that after several years of using Quest and creating so many makeshift scripts that a novice like myself can actually understand this and know how it all works. I'm at that point now where I just have to have the imagination to come up with the \"how\" to put it all together like you just did. Thank you for taking the time to write this. You are da man! Or as you might say... man/woman/identifier. \r\n\r\nThere is enough information here to copy from the Magic.xml of CombatLib to write/copy/paste a workable script for what I need. \r\nAwesome\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>hegemonkhan,<br>\nIt is interesting that after several years of using Quest and creating so many makeshift scripts that a novice like myself can actually understand this and know how it all works. I'm at that point now where I just have to have the imagination to come up with the \"how\" to put it all together like you just did. Thank you for taking the time to write this. You are da man! Or as you might say... man/woman/identifier.</p>\n<p>There is enough information here to copy from the Magic.xml of CombatLib to write/copy/paste a workable script for what I need.<br>\nAwesome</p>\n\n",
      "PostDate": "2017-08-01T17:42:21.1314522Z",
      "LastEditDate": "2017-08-01T17:54:31.9597741Z",
      "link": null
    },
    {
      "PostId": "87acc459-0835-4e36-9b79-d9cef5f8ce6f",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Look at the section on multi attack monsters in the help for combat lib.",
      "EditableFormat": "markdown",
      "HTML": "<p>Look at the section on multi attack monsters in the help for combat lib.</p>\n\n",
      "PostDate": "2017-08-01T22:16:28.1093125Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a1f1da74-1e77-467e-9280-5187a5f3c8b7",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ya, once you can script/code... the hard part is the design of it... especially when that design is for/as a large-scale/scale'able system (RPG aspects: magic, equipment, combat, dialogue/diplomacy, descriptions/info, items, storage, stealth, etc). You can code, but can you code the best/most-efficient design possible. This is where I'm at with coding as well (though I'm still struggling with just being able to do Data Structure/Management coding, sighs).\r\n\r\nHK.sex = \"male\"\r\nmsg (\"HK is definately a \" + HK.sex + \".\")\r\n\r\n-----\r\n\r\nP.S.\r\n\r\nthere's some mistakes in my example code in my previous post, and some stuff that I left out that I need to add to it, to show how the Delegate's Parameters work.\r\n\r\n-----------------------------\r\n\r\nbasically, Delegates are a way of turning an Object's Script Attribute into having the same functionality (Parameters/Arguments/Inputs and/or a returns a value) as a Function has.\r\n\r\nan example:\r\n\r\n(a very impractical/stupid/lame, example, lol, but it is a good example of how to use delegates)\r\n\r\n```\r\n<delegate name=\"return_string_delegate\" type=\"string\" parameters=\"string_parameter\">\r\n\r\n<game name=\"example_game\">\r\n  <attr name=\"start\" type=\"script\">\r\n    string_variable = do (return_string_object, \"return_string_script_attribute\", \"hi\")  // string_parameter = \"hi\"\r\n    msg (string_variable) // string_variable = \"hi\"\r\n  </attr>\r\n</game>\r\n\r\n<object name=\"return_string_object\">\r\n  <attr name=\"return_string_script_attribute\" type=\"return_string_delegate\">\r\n    return (string_parameter) //return type (Delegate: type=\"string\"): string\r\n  </attr>\r\n</object>\r\n```\r\n\r\nthe \"hi\" String Value used-in/passed-into the 'game' Game Settings Object's 'start' Script Attribute's scripting's use of the 'do' Function as its Argument, is stored into the 'return_string_delegate' Delegate's 'string_parameter' Parameter VARIABLE, and which matches up with the 'return_string_delegate' Delegate's specified return type (in this example, of: string), which is then used by the 'return_string_object' Object's 'return_string_script_attribute' Attribute VARIABLE'S scripting. The scripting just returns that String Value (in this example: \"hi\") as is the specified return type by the 'return_string_delegate' Delegate (again, the \"hi\" String Value matches up with the 'return_string_delegate' Delegate's return type of: string, so no errors), which is stored into the 'game' Game Settings Object's 'start' Script Attribute's scripting's 'string_variable' Variable VARIABLE. This is this used by the 'msg' Function, to display this String Value (in this example: \"hi\", as: hi).\r\n\r\nYuck!, that's wordy/confusing... lol\r\n\r\n------\r\n\r\njust like a Function, a Delegate can have either:\r\n\r\n1. just Parameter(s)\r\n2. just a return type\r\n3. both: Parameter(s) and a return type\r\n\r\n--------\r\n\r\nP.S.S.\r\n\r\nalso, different Script Attributes can use the same Delegate.\r\n\r\nThis makes using Objects and Script_Attributes+Delegates, more useful than Functions, as Objects allow encapsulation/compartmentalization/self-contained (everything that is needed, is held within that Object, aside from the Delegates used by the Object's Script Attributes, so no jumping all over your entire game code, to look at your various Function's scriptings. You only have to look at the Delegates, which is just the name+quantity of inputs/Parameters used and/or if+what return type is used), which makes it easier on the human for organization, sanity/understanding/following of your code, and finding+trouble-shooting and/or just editing of the code.\r\n\r\n-----------\r\n\r\nP.S.S.S.\r\n\r\nif you know the full-bore main programming languages:\r\n\r\nquest's 'Delegates' are just like a Function's 'PROTOTYPE', except they are-for/act-upon quest's Object's Script Attributes, and not quest's Functions.\r\n\r\nI'm not sure if you can PROTOTYPE quest's Functions as well... never tried it... lol.",
      "EditableFormat": "markdown",
      "HTML": "<p>ya, once you can script/code... the hard part is the design of it... especially when that design is for/as a large-scale/scale'able system (RPG aspects: magic, equipment, combat, dialogue/diplomacy, descriptions/info, items, storage, stealth, etc). You can code, but can you code the best/most-efficient design possible. This is where I'm at with coding as well (though I'm still struggling with just being able to do Data Structure/Management coding, sighs).</p>\n<p>HK.sex = \"male\"<br>\nmsg (\"HK is definately a \" + HK.sex + \".\")</p>\n<hr>\n<p>P.S.</p>\n<p>there's some mistakes in my example code in my previous post, and some stuff that I left out that I need to add to it, to show how the Delegate's Parameters work.</p>\n<hr>\n<p>basically, Delegates are a way of turning an Object's Script Attribute into having the same functionality (Parameters/Arguments/Inputs and/or a returns a value) as a Function has.</p>\n<p>an example:</p>\n<p>(a very impractical/stupid/lame, example, lol, but it is a good example of how to use delegates)</p>\n<pre><code>&lt;delegate name=\"return_string_delegate\" type=\"string\" parameters=\"string_parameter\"&gt;\n\n&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    string_variable = do (return_string_object, \"return_string_script_attribute\", \"hi\")  // string_parameter = \"hi\"\n    msg (string_variable) // string_variable = \"hi\"\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;object name=\"return_string_object\"&gt;\n  &lt;attr name=\"return_string_script_attribute\" type=\"return_string_delegate\"&gt;\n    return (string_parameter) //return type (Delegate: type=\"string\"): string\n  &lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n<p>the \"hi\" String Value used-in/passed-into the 'game' Game Settings Object's 'start' Script Attribute's scripting's use of the 'do' Function as its Argument, is stored into the 'return_string_delegate' Delegate's 'string_parameter' Parameter VARIABLE, and which matches up with the 'return_string_delegate' Delegate's specified return type (in this example, of: string), which is then used by the 'return_string_object' Object's 'return_string_script_attribute' Attribute VARIABLE'S scripting. The scripting just returns that String Value (in this example: \"hi\") as is the specified return type by the 'return_string_delegate' Delegate (again, the \"hi\" String Value matches up with the 'return_string_delegate' Delegate's return type of: string, so no errors), which is stored into the 'game' Game Settings Object's 'start' Script Attribute's scripting's 'string_variable' Variable VARIABLE. This is this used by the 'msg' Function, to display this String Value (in this example: \"hi\", as: hi).</p>\n<p>Yuck!, that's wordy/confusing... lol</p>\n<hr>\n<p>just like a Function, a Delegate can have either:</p>\n<ol>\n<li>just Parameter(s)</li>\n<li>just a return type</li>\n<li>both: Parameter(s) and a return type</li>\n</ol>\n<hr>\n<p>P.S.S.</p>\n<p>also, different Script Attributes can use the same Delegate.</p>\n<p>This makes using Objects and Script_Attributes+Delegates, more useful than Functions, as Objects allow encapsulation/compartmentalization/self-contained (everything that is needed, is held within that Object, aside from the Delegates used by the Object's Script Attributes, so no jumping all over your entire game code, to look at your various Function's scriptings. You only have to look at the Delegates, which is just the name+quantity of inputs/Parameters used and/or if+what return type is used), which makes it easier on the human for organization, sanity/understanding/following of your code, and finding+trouble-shooting and/or just editing of the code.</p>\n<hr>\n<p>P.S.S.S.</p>\n<p>if you know the full-bore main programming languages:</p>\n<p>quest's 'Delegates' are just like a Function's 'PROTOTYPE', except they are-for/act-upon quest's Object's Script Attributes, and not quest's Functions.</p>\n<p>I'm not sure if you can PROTOTYPE quest's Functions as well... never tried it... lol.</p>\n\n",
      "PostDate": "2017-08-01T22:31:22.3862042Z",
      "LastEditDate": "2017-08-01T23:17:02.2370005Z",
      "link": null
    },
    {
      "PostId": "91957d11-7ecc-4b22-8122-3a6100925289",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/4DfRYkpb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Pixie\r\nI only see a choice of monster or monster with a bow in combatlib\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Pixie<br>\nI only see a choice of monster or monster with a bow in combatlib</p>\n\n",
      "PostDate": "2017-08-03T22:36:53.8284859Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c85c9332-76eb-489f-8aeb-49d8940b9ffc",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You need to select multi attack monster. I am away for August and cannot check it, if it is not try going to Attributes tab and add the multimonster from the types at the top.",
      "EditableFormat": "markdown",
      "HTML": "<p>You need to select multi attack monster. I am away for August and cannot check it, if it is not try going to Attributes tab and add the multimonster from the types at the top.</p>\n\n",
      "PostDate": "2017-08-04T11:50:33.6658459Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3539b7c9-9663-4155-b615-04829edc4b01",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/4DfRYkpb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Turns out I was using an old CombatLib...",
      "EditableFormat": "markdown",
      "HTML": "<p>Turns out I was using an old CombatLib...</p>\n\n",
      "PostDate": "2017-08-11T06:28:58.2661428Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
