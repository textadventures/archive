{
  "Topic": {
    "TopicId": "bbflrjo9tesvogf7r8hbsg",
    "ForumId": "10",
    "Title": "Custom player name",
    "LastUpdated": "2019-10-24T13:42:42.3530868Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "966b4374-273d-442d-9ac0-a3e61fa951c7",
      "UserId": 442226,
      "Username": "jmbwriter",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3be053eeff7132b72dac2688b524ce8f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "New to the Quest program. I'm trying to make an RPG and I want the player to be able to create a name for themselves at the beginning. Is there a simple way to implement this?",
      "EditableFormat": "markdown",
      "HTML": "<p>New to the Quest program. I'm trying to make an RPG and I want the player to be able to create a name for themselves at the beginning. Is there a simple way to implement this?</p>\n\n",
      "PostDate": "2019-10-24T13:42:42.3530868Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "dee2bafd-7c94-4e30-a964-33bd73b46e8c",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes.\r\n\r\nUse the GetInput code. In psuedocode, it'll look like this:\r\n```\r\nprint(\"Enter your name!\")\r\nGetInput{\r\nPlayer.Name=result\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes.</p>\n<p>Use the GetInput code. In psuedocode, it'll look like this:</p>\n<pre><code>print(\"Enter your name!\")\nGetInput{\nPlayer.Name=result\n}\n</code></pre>\n\n",
      "PostDate": "2019-10-24T13:44:58.9228227Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "58152317-1eb0-4b33-b9eb-cdfbcfc45164",
      "UserId": 442226,
      "Username": "jmbwriter",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3be053eeff7132b72dac2688b524ce8f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Much appreciated. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Much appreciated.</p>\n\n",
      "PostDate": "2019-10-24T13:50:26.4214904Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8a6f1143-5b93-4b5e-bca0-8a49ab3d5822",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In actual code, the attribute you want to set is probably called `alias`.\r\n\r\nAn object's `alias` is the name the player sees for it. But the attribute `name` is what you refer to it by in the code, and can't be changed.\r\n\r\nIn theory you could use `Name` like any other attribute, because `Name` and `name` are different; but that could be confusing, and is likely to lead to mistakes.",
      "EditableFormat": "markdown",
      "HTML": "<p>In actual code, the attribute you want to set is probably called <code>alias</code>.</p>\n<p>An object's <code>alias</code> is the name the player sees for it. But the attribute <code>name</code> is what you refer to it by in the code, and can't be changed.</p>\n<p>In theory you could use <code>Name</code> like any other attribute, because <code>Name</code> and <code>name</code> are different; but that could be confusing, and is likely to lead to mistakes.</p>\n\n",
      "PostDate": "2019-10-24T14:55:41.0327918Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f0b3529b-bd22-4e01-94e5-253403fea89a",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Whoops, yeah, what mrangel said. I put Name as a typo instead of alias.",
      "EditableFormat": "markdown",
      "HTML": "<p>Whoops, yeah, what mrangel said. I put Name as a typo instead of alias.</p>\n\n",
      "PostDate": "2019-10-24T18:48:45.3723645Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3d6722ec-70c4-4617-8751-a054e431df29",
      "UserId": 425865,
      "Username": "Seeker9043",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How do you make a custom name for gamebook?\r\nEdit: I am a noob so certain coding terms may be a bit beyond me for now, sorry if I don't understand.",
      "EditableFormat": "markdown",
      "HTML": "<p>How do you make a custom name for gamebook?<br>\nEdit: I am a noob so certain coding terms may be a bit beyond me for now, sorry if I don't understand.</p>\n\n",
      "PostDate": "2019-12-02T05:33:40.8952226Z",
      "LastEditDate": "2019-12-02T05:45:59.2622196Z",
      "link": null
    },
    {
      "PostId": "3fe6cbcf-6035-4514-9a8c-6d93bd266f06",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the scripting is the exact same, be it for a Text Adventure or Gamebook, but for a Gamebook, you just got to do this to enable the scripting:\r\n\r\n'WHATEVER' Page -> 'setup (or whatever it is)' Tab -> Page Type: [script] or [text + script] -> (whatever scripting / add new script)\r\n\r\n-------\r\n\r\nfor doing basic RPG character creation stuff:\r\n\r\nhttps://docs.textadventures.co.uk/quest/character_creation.html\r\n\r\nI can't remember, but Gamebook may not have the popup menu functionality: the 'show menu (XXX)' Function",
      "EditableFormat": "markdown",
      "HTML": "<p>the scripting is the exact same, be it for a Text Adventure or Gamebook, but for a Gamebook, you just got to do this to enable the scripting:</p>\n<p>'WHATEVER' Page -&gt; 'setup (or whatever it is)' Tab -&gt; Page Type: [script] or [text + script] -&gt; (whatever scripting / add new script)</p>\n<hr>\n<p>for doing basic RPG character creation stuff:</p>\n<p>https://docs.textadventures.co.uk/quest/character_creation.html</p>\n<p>I can't remember, but Gamebook may not have the popup menu functionality: the 'show menu (XXX)' Function</p>\n\n",
      "PostDate": "2019-12-02T19:48:58.9500614Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "349912a3-4f59-457e-ad0b-1bf74b66a2e1",
      "UserId": 425865,
      "Username": "Seeker9043",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah thank you, I did figured the Text+Script but I didn't know how to implement it.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah thank you, I did figured the Text+Script but I didn't know how to implement it.</p>\n\n",
      "PostDate": "2019-12-03T05:44:52.8026076Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ced52ef0-6289-411e-815f-740a425e64a1",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "got it (the scripting/implementing) now, or still need help?",
      "EditableFormat": "markdown",
      "HTML": "<p>got it (the scripting/implementing) now, or still need help?</p>\n\n",
      "PostDate": "2019-12-03T05:49:25.5821692Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7b545baa-9e03-4126-a272-a75e8d179d20",
      "UserId": 425865,
      "Username": "Seeker9043",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well in case, do I have to apply a code or script to ensure the custom name is used or will it apply no matter?",
      "EditableFormat": "markdown",
      "HTML": "<p>Well in case, do I have to apply a code or script to ensure the custom name is used or will it apply no matter?</p>\n\n",
      "PostDate": "2019-12-04T04:50:46.9565975Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b3792b30-69ec-4bd9-8e5a-37104866b083",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n\r\n-----------\r\n\r\nconceptual basics of programming/coding/scripting:\r\n\r\nit's just VARIABLE usage, so if you know algebra in math, you can do programming/coding/scripting\r\n\r\n-----------------------------\r\n\r\nin math:\r\n\r\nx = 5 // the Integer Value of '5' is STORED WITHIN (\"assigned to\") the 'x' Variable VARIABLE\r\n\r\nunfortunately, in math, they usually don't teach that this is actually an Assignment Operation, you're \"assigning\" the VALUE_OR_EXPRESSION (in this case, the '5' Integer Value) on the right side of the Assignment Operator (the '=' sign) to the VARIABLE (in this case, the 'x' Variable VARIABLE) on the left side of the Assignment Operator (the '=' sign):\r\n\r\nAssignment Operation:\r\n\r\nVARIABLE = VALUE_OR_EXPRESSION\r\n\r\nVARIABLE: x\r\nVALUE_OR_EXPRESSION: 5\r\n\r\nso, thus, if we then did/had this:\r\n\r\nx + 3 = ???\r\n\r\nthe '???' would equal: 8\r\n\r\n[x = 5]\r\nx + 3 = ???\r\n[x] + 3 = ???\r\n[x = 5] + 3 = ???\r\n[5] + 3 = 8\r\n\r\nnow, in algebra, you got problems to solve, where you're actually using the 'Comparison' Operation instead (again, usually not taught/explained about it in math, unfortunately) in order to solve for the values of the variables:\r\n\r\nusing the '???' instead of 'n' (or 'x' or whatever alphabet letter/character for variables in math) to not confuse it with how programming's VARIABLES work\r\n\r\n??? + 3 = 8\r\n\r\nwhat is '???' so that the left and right sides' VALUES_OR_EXPRESSIONS of the Comparison Operator (usually its a '==' sign, but quest has it as a '=' sign, as it can tell/understand/parse the scripting to know whether its an Assignment Operation or a Comparison Operation) are, EQUAL TO (comparison) each other?\r\n\r\nComparison Operation:\r\n\r\nis [LEFT_VALUE_OR_EXPRESSION = RIGHT_VALUE_OR_EXPRESSION] true?\r\n\r\nLEFT_VALUE_OR_EXPRESSION: ??? + 3\r\nRIGHT_VALUE_OR_EXPRESSION: 8\r\n\r\nis [??? + 3 = 8] true?\r\n\r\npretending you didn't know what value the '???' is, you solve for the '???', like this in-for algebra:\r\n\r\n??? + 3 = 8\r\n??? + 3 [-3] = 8 [-3]\r\n??? = 5\r\n\r\nand to verify that '5' is the value of '???':\r\n\r\nis [5 + 3 = 8] true?\r\nis [8 = 8] true?\r\n\r\nyes, the VALUE_OR_EXPRESSION on the left side of the Comparison Operator (for quest, the '=' sign) is EQUAL TO the VALUE_OR_EXPRESSION on the right side of the Comparison Operator (for quest, the '=' sign)\r\n\r\nso yes, it's TRUE!\r\n\r\nalgebra, thus: '5' is indeed the correct value for the '???'\r\n\r\n--------\r\n\r\nData Types:\r\n\r\nQuantity Data Types (able to do arithmetic on/with them):\r\n\r\n1. Integers (non-decimal / non-fractional numbers: ..., -100, 0, 100, ...)\r\n\r\n2. Doubles/Floats/Floating-Points (Decimal/Fractional numbers: ..., -100.123, 0.0, 100.9, ...)\r\n\r\nNon-Quantity Data Types (NOT able to do arithmetic on/with them):\r\n\r\n3. Strings (a collection of alphabet, numeral, and/or some other characters/symbols, except for any special/reserved values: \"a\", \"abc\", \"1\", \"123\", \"abc_123\", \"hi\", \"hi, how are you? My name is HK, what is your name?\")\r\n\r\nany Value with the double quotes, is a String Value, including numeral characters/symbols:\r\n\r\n\"1\" is a STRING Value (NON-quantity Value: NOT able to do arithmetic), and NOT an integer value (quantity value: able to do arithmetic)\r\n\r\nwhereas\r\n\r\n'1' is an INTEGER Value\r\n\r\n4. Booleans (special/reserved values of 'true' and 'false')\r\n\r\nand more Non-Quanty Data Types, but they more advanced so leaving them out from here\r\n\r\n-------\r\n\r\nnow, in programming, we can also use non-quantity Data Types:\r\n\r\nAssignment Operation:\r\n\r\nx = \"hi\" // the \"hi\" String Value is STORED WITHIN (\"assigned\") the 'x' Variable VARIABLE\r\n\r\nand if we then did this (a built-in quest Function) as the next operation within the same scripting: msg (x)\r\n\r\nit would display/output: hi\r\n\r\nin programming, we can't switch the scripting around with an Assignment Operation:\r\n\r\n\"hi\" = x // ERROR!\r\n5 = x // ERROR!\r\n\r\nbecause the VARIABLE has to be on the left side and the VALUE_OR_EXPRESSION on the right side of the '=' sign (Assignment Operator)\r\n\r\nwhereas, since math isn't programming, we can switch it around:\r\n\r\nx = 5 // NO error\r\n5 = x // NO error\r\n\r\nbut if doing a Comparison Operation in programming, then we can switch it around of course (see the 'if (5 = x) {' line below):\r\n\r\n```\r\n// Assignment Operation:\r\n\r\nx = GetRandomInt (1,10) // this, 'GetRandomInt (MIN,MAX)', built-in Randomization Function will randomly (inclusively) select a number from 1 to 10 (so: 1, 2, 3, 4, 5, 6, 7, 8, 9, or 10), which then gets STORED WITHIN (\"assigned to\") the 'x' Variable VARIABLE\r\n\r\n// Comparison Operation (using the 'if' Script/Function, usually comparison operations use/require the 'if' Script/Function):\r\n\r\nif (5 = x) {\r\n  // 10% of this happening (1/10 chance/odds of it randomly selecting '5' for the value of 'x')\r\n  msg (\"TRUE\")\r\n} else {\r\n  // 90% of this happening (9/10 chance/odds of it randomly selecting a number that is NOT '5' for the value of 'x')\r\n  msg (\"FALSE\")\r\n}\r\n```\r\n\r\n------------\r\n\r\nanyways...\r\n\r\nback to using String Data Types, an example of more complex usage of it (we're using the Concatenation Operation, when using the '+' symbol with String Values):\r\n\r\n```\r\nx = \"Hi\"\r\nmsg (x)\r\nx = x + \", how are you?\"\r\nmsg (x)\r\nx = x + \" My name is HK.\"\r\nmsg (x)\r\nx = x + \" What is your name?\"\r\nmsg (x)\r\n\r\n----------\r\n\r\ndisplayment/output:\r\n\r\nHi\r\nHi, how are you?\r\nHi, how are you? My name is HK.\r\nHi, how are you? My name is HK. What is your name?\r\n```\r\n\r\n------------\r\n\r\nArithmetic VS Concatenation\r\n\r\nArithmetic:\r\n\r\n5 + 5 = 10\r\n55 + 55 = 110\r\n\r\nConcatenation:\r\n\r\n\"5\" + \"5\" = \"55\"\r\n\"55\" + \"55\" = \"5555\"\r\n\"mama\" + \"mia\" = \"mamamia\"\r\n\"mama\" + \"5\" = \"mama5\"\r\n\"mama\" + \"5\" + \"mia\" = \"mama5mia\"\r\n\"mama\" + \"_\" + \"mia\" = \"mama_mia\"\r\n\r\nalso, the 'SPACE/WHITE-SPACE' is a String character/numeral/symbol just like \"a\" and \"1\" and \"_\", (see below)\r\n\r\n\"mama\" + \" \" + \"mia\" = \"mama mia\"\r\n\"mama \" + \"mia\" = \"mama mia\"\r\n\"mama\" + \" mia\" = \"mama mia\"\r\n\r\n----------\r\n\r\nanyways, finally back to your question...\r\n\r\nif you set: player.alias = \"HK\"\r\n\r\nthen, anytime/any-where you use the 'player.alias' Attribute, it'll use/be the 'HK'\r\n\r\n```\r\n// example in code:\r\n\r\nmsg (\"Name?\")\r\nget input {\r\n  // pretend we typed in: HK\r\n  // result = \"HK\"\r\n  player.alias = result\r\n  // player.alias = \"HK\"\r\n}\r\n\r\n// anywhere or whenever else in the game (so long as the 'player' Player Object exists/still exists), an example:\r\n\r\nmsg (\"My name is \" + player.alias + \"! Don't you ever forget it!)\r\n\r\n// output/displayment:\r\n\r\nMy name is HK! Don't you ever forget it!\r\n```\r\n\r\n--------\r\n\r\nlastly, in programming, we got Objects which can HOLD (have STORED WITHIN it) Attribute VARIABLES, whereas math/algebra only has Variable VARIABLES:\r\n\r\n```\r\nVARIABLE types in programming:\r\n\r\n1. Variables:\r\n\r\nexamples\r\n\r\nx = 5\r\np = 5\r\na = 5\r\nexample_integer_variable = 5\r\nabcdefghijklmnopqrstuvwxyz = 5\r\nfoo = 5\r\n\r\nx = 3.7\r\nx = \"hi\"\r\nx = \"a\"\r\nx = \"1\"\r\nx = \"abc_123\"\r\nx = \"hi, how are you? my name is HK, what is your name?\"\r\nx = true\r\nx = false\r\n\r\n2. Attributes:\r\n\r\nexamples:\r\n\r\n// by default (and required too) 'player' and 'game' are already built-in (existing) Objects\r\n\r\nplayer.x = 5\r\ngame.x = 5\r\n\r\ncreate (\"orc\") // creates an 'orc' Object\r\norc.x = 5\r\n\r\nplayer.alias = \"HK\"\r\n\r\ngame.introduction = \"blah blah blah\"\r\n\r\ncreate (\"orc_1\") // creates an 'orc_1' Object\r\norc_1.alias = \"orc\"\r\norc_1.damage = 5\r\norc_1.dead = false\r\n\r\ncreate (\"club_1\") // creates a 'club' Object\r\nclub_1.alias = \"club\"\r\nclub_1.damage = 10\r\n\r\norc_1.weapon = club_1\r\n\r\norc_1.damage = orc_1.weapon\r\n\r\n3. Parameters: these are special VARIABLES for Functions, Commands, and etc, but, not going to try to explain them here\r\n```\r\n\r\n---------\r\n\r\nUsing the GUI/Editor, it would roughly look like this, an example:\r\n\r\n```\r\n'game' Object -> 'Scripts' Tab -> 'start' Script -> (see below)\r\n\r\nadd new script -> 'output' section/category -> 'print a message' Script -> (see below)\r\n\r\nprint [MESSAGE] Name?\r\n\r\nadd new script -> 'output' (or whatever) section/category -> 'get input' Script\r\n\r\n-> then -> add new script -> 'variables' section/category -> 'set a variable or attribute' Script -> (see below)\r\n\r\nset variable player.alias = [EXPRESSION] result\r\n\r\n// this below can be done anywhere/when-ever in your game, but I'm going to have it still using the 'game.start' Script Attribute location ('game' Object -> 'Scripts' Tab -> 'start' Script), so continuing from above:\r\n\r\nadd new script -> 'output' section/category -> 'print a message' Script -> (see below)\r\n\r\nprint [EXPRESSION] \"My name is \" + player.alias + \"! Don't you ever forget it!\r\n```\r\n\r\n-----------\r\n\r\nthe '[MESSAGE]' option allows for TEXT ONLY:\r\n\r\nprint [MESSAGE] hi, how are you?\r\n// NO error\r\n\r\nx = \"hi\"\r\nprint [MESSAGE] x + \", how are you?\"\r\n// ERROR!\r\n\r\n----------\r\n\r\nwhereas...\r\n\r\nthe '[EXPRESSION]' option allows for you to directly type in whatever coding expression you want:\r\n\r\nyou can do any of these with it, examples:\r\n\r\nTEXT ONLY:\r\n\r\nprint [EXPRESSION] \"hi, how are you?\"\r\n// NO error\r\n\r\nVARIABLE ONLY:\r\n\r\nx = \"hi, how are you?\"\r\nprint [EXPRESSION] x\r\n// NO error\r\n\r\nboth TEXT and VARIABLE:\r\n\r\nx = \"Hi\"\r\nprint [EXPRESSION] x + \", how are you?\"\r\n// NO error",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>conceptual basics of programming/coding/scripting:</p>\n<p>it's just VARIABLE usage, so if you know algebra in math, you can do programming/coding/scripting</p>\n<hr>\n<p>in math:</p>\n<p>x = 5 // the Integer Value of '5' is STORED WITHIN (\"assigned to\") the 'x' Variable VARIABLE</p>\n<p>unfortunately, in math, they usually don't teach that this is actually an Assignment Operation, you're \"assigning\" the VALUE_OR_EXPRESSION (in this case, the '5' Integer Value) on the right side of the Assignment Operator (the '=' sign) to the VARIABLE (in this case, the 'x' Variable VARIABLE) on the left side of the Assignment Operator (the '=' sign):</p>\n<p>Assignment Operation:</p>\n<p>VARIABLE = VALUE_OR_EXPRESSION</p>\n<p>VARIABLE: x<br>\nVALUE_OR_EXPRESSION: 5</p>\n<p>so, thus, if we then did/had this:</p>\n<p>x + 3 = ???</p>\n<p>the '???' would equal: 8</p>\n<p>[x = 5]<br>\nx + 3 = ???<br>\n[x] + 3 = ???<br>\n[x = 5] + 3 = ???<br>\n[5] + 3 = 8</p>\n<p>now, in algebra, you got problems to solve, where you're actually using the 'Comparison' Operation instead (again, usually not taught/explained about it in math, unfortunately) in order to solve for the values of the variables:</p>\n<p>using the '???' instead of 'n' (or 'x' or whatever alphabet letter/character for variables in math) to not confuse it with how programming's VARIABLES work</p>\n<p>??? + 3 = 8</p>\n<p>what is '???' so that the left and right sides' VALUES_OR_EXPRESSIONS of the Comparison Operator (usually its a '==' sign, but quest has it as a '=' sign, as it can tell/understand/parse the scripting to know whether its an Assignment Operation or a Comparison Operation) are, EQUAL TO (comparison) each other?</p>\n<p>Comparison Operation:</p>\n<p>is [LEFT_VALUE_OR_EXPRESSION = RIGHT_VALUE_OR_EXPRESSION] true?</p>\n<p>LEFT_VALUE_OR_EXPRESSION: ??? + 3<br>\nRIGHT_VALUE_OR_EXPRESSION: 8</p>\n<p>is [??? + 3 = 8] true?</p>\n<p>pretending you didn't know what value the '???' is, you solve for the '???', like this in-for algebra:</p>\n<p>??? + 3 = 8<br>\n??? + 3 [-3] = 8 [-3]<br>\n??? = 5</p>\n<p>and to verify that '5' is the value of '???':</p>\n<p>is [5 + 3 = 8] true?<br>\nis [8 = 8] true?</p>\n<p>yes, the VALUE_OR_EXPRESSION on the left side of the Comparison Operator (for quest, the '=' sign) is EQUAL TO the VALUE_OR_EXPRESSION on the right side of the Comparison Operator (for quest, the '=' sign)</p>\n<p>so yes, it's TRUE!</p>\n<p>algebra, thus: '5' is indeed the correct value for the '???'</p>\n<hr>\n<p>Data Types:</p>\n<p>Quantity Data Types (able to do arithmetic on/with them):</p>\n<ol>\n<li>\n<p>Integers (non-decimal / non-fractional numbers: ..., -100, 0, 100, ...)</p>\n</li>\n<li>\n<p>Doubles/Floats/Floating-Points (Decimal/Fractional numbers: ..., -100.123, 0.0, 100.9, ...)</p>\n</li>\n</ol>\n<p>Non-Quantity Data Types (NOT able to do arithmetic on/with them):</p>\n<ol start=\"3\">\n<li>Strings (a collection of alphabet, numeral, and/or some other characters/symbols, except for any special/reserved values: \"a\", \"abc\", \"1\", \"123\", \"abc_123\", \"hi\", \"hi, how are you? My name is HK, what is your name?\")</li>\n</ol>\n<p>any Value with the double quotes, is a String Value, including numeral characters/symbols:</p>\n<p>\"1\" is a STRING Value (NON-quantity Value: NOT able to do arithmetic), and NOT an integer value (quantity value: able to do arithmetic)</p>\n<p>whereas</p>\n<p>'1' is an INTEGER Value</p>\n<ol start=\"4\">\n<li>Booleans (special/reserved values of 'true' and 'false')</li>\n</ol>\n<p>and more Non-Quanty Data Types, but they more advanced so leaving them out from here</p>\n<hr>\n<p>now, in programming, we can also use non-quantity Data Types:</p>\n<p>Assignment Operation:</p>\n<p>x = \"hi\" // the \"hi\" String Value is STORED WITHIN (\"assigned\") the 'x' Variable VARIABLE</p>\n<p>and if we then did this (a built-in quest Function) as the next operation within the same scripting: msg (x)</p>\n<p>it would display/output: hi</p>\n<p>in programming, we can't switch the scripting around with an Assignment Operation:</p>\n<p>\"hi\" = x // ERROR!<br>\n5 = x // ERROR!</p>\n<p>because the VARIABLE has to be on the left side and the VALUE_OR_EXPRESSION on the right side of the '=' sign (Assignment Operator)</p>\n<p>whereas, since math isn't programming, we can switch it around:</p>\n<p>x = 5 // NO error<br>\n5 = x // NO error</p>\n<p>but if doing a Comparison Operation in programming, then we can switch it around of course (see the 'if (5 = x) {' line below):</p>\n<pre><code>// Assignment Operation:\n\nx = GetRandomInt (1,10) // this, 'GetRandomInt (MIN,MAX)', built-in Randomization Function will randomly (inclusively) select a number from 1 to 10 (so: 1, 2, 3, 4, 5, 6, 7, 8, 9, or 10), which then gets STORED WITHIN (\"assigned to\") the 'x' Variable VARIABLE\n\n// Comparison Operation (using the 'if' Script/Function, usually comparison operations use/require the 'if' Script/Function):\n\nif (5 = x) {\n  // 10% of this happening (1/10 chance/odds of it randomly selecting '5' for the value of 'x')\n  msg (\"TRUE\")\n} else {\n  // 90% of this happening (9/10 chance/odds of it randomly selecting a number that is NOT '5' for the value of 'x')\n  msg (\"FALSE\")\n}\n</code></pre>\n<hr>\n<p>anyways...</p>\n<p>back to using String Data Types, an example of more complex usage of it (we're using the Concatenation Operation, when using the '+' symbol with String Values):</p>\n<pre><code>x = \"Hi\"\nmsg (x)\nx = x + \", how are you?\"\nmsg (x)\nx = x + \" My name is HK.\"\nmsg (x)\nx = x + \" What is your name?\"\nmsg (x)\n\n----------\n\ndisplayment/output:\n\nHi\nHi, how are you?\nHi, how are you? My name is HK.\nHi, how are you? My name is HK. What is your name?\n</code></pre>\n<hr>\n<p>Arithmetic VS Concatenation</p>\n<p>Arithmetic:</p>\n<p>5 + 5 = 10<br>\n55 + 55 = 110</p>\n<p>Concatenation:</p>\n<p>\"5\" + \"5\" = \"55\"<br>\n\"55\" + \"55\" = \"5555\"<br>\n\"mama\" + \"mia\" = \"mamamia\"<br>\n\"mama\" + \"5\" = \"mama5\"<br>\n\"mama\" + \"5\" + \"mia\" = \"mama5mia\"<br>\n\"mama\" + \"_\" + \"mia\" = \"mama_mia\"</p>\n<p>also, the 'SPACE/WHITE-SPACE' is a String character/numeral/symbol just like \"a\" and \"1\" and \"_\", (see below)</p>\n<p>\"mama\" + \" \" + \"mia\" = \"mama mia\"<br>\n\"mama \" + \"mia\" = \"mama mia\"<br>\n\"mama\" + \" mia\" = \"mama mia\"</p>\n<hr>\n<p>anyways, finally back to your question...</p>\n<p>if you set: player.alias = \"HK\"</p>\n<p>then, anytime/any-where you use the 'player.alias' Attribute, it'll use/be the 'HK'</p>\n<pre><code>// example in code:\n\nmsg (\"Name?\")\nget input {\n  // pretend we typed in: HK\n  // result = \"HK\"\n  player.alias = result\n  // player.alias = \"HK\"\n}\n\n// anywhere or whenever else in the game (so long as the 'player' Player Object exists/still exists), an example:\n\nmsg (\"My name is \" + player.alias + \"! Don't you ever forget it!)\n\n// output/displayment:\n\nMy name is HK! Don't you ever forget it!\n</code></pre>\n<hr>\n<p>lastly, in programming, we got Objects which can HOLD (have STORED WITHIN it) Attribute VARIABLES, whereas math/algebra only has Variable VARIABLES:</p>\n<pre><code>VARIABLE types in programming:\n\n1. Variables:\n\nexamples\n\nx = 5\np = 5\na = 5\nexample_integer_variable = 5\nabcdefghijklmnopqrstuvwxyz = 5\nfoo = 5\n\nx = 3.7\nx = \"hi\"\nx = \"a\"\nx = \"1\"\nx = \"abc_123\"\nx = \"hi, how are you? my name is HK, what is your name?\"\nx = true\nx = false\n\n2. Attributes:\n\nexamples:\n\n// by default (and required too) 'player' and 'game' are already built-in (existing) Objects\n\nplayer.x = 5\ngame.x = 5\n\ncreate (\"orc\") // creates an 'orc' Object\norc.x = 5\n\nplayer.alias = \"HK\"\n\ngame.introduction = \"blah blah blah\"\n\ncreate (\"orc_1\") // creates an 'orc_1' Object\norc_1.alias = \"orc\"\norc_1.damage = 5\norc_1.dead = false\n\ncreate (\"club_1\") // creates a 'club' Object\nclub_1.alias = \"club\"\nclub_1.damage = 10\n\norc_1.weapon = club_1\n\norc_1.damage = orc_1.weapon\n\n3. Parameters: these are special VARIABLES for Functions, Commands, and etc, but, not going to try to explain them here\n</code></pre>\n<hr>\n<p>Using the GUI/Editor, it would roughly look like this, an example:</p>\n<pre><code>'game' Object -&gt; 'Scripts' Tab -&gt; 'start' Script -&gt; (see below)\n\nadd new script -&gt; 'output' section/category -&gt; 'print a message' Script -&gt; (see below)\n\nprint [MESSAGE] Name?\n\nadd new script -&gt; 'output' (or whatever) section/category -&gt; 'get input' Script\n\n-&gt; then -&gt; add new script -&gt; 'variables' section/category -&gt; 'set a variable or attribute' Script -&gt; (see below)\n\nset variable player.alias = [EXPRESSION] result\n\n// this below can be done anywhere/when-ever in your game, but I'm going to have it still using the 'game.start' Script Attribute location ('game' Object -&gt; 'Scripts' Tab -&gt; 'start' Script), so continuing from above:\n\nadd new script -&gt; 'output' section/category -&gt; 'print a message' Script -&gt; (see below)\n\nprint [EXPRESSION] \"My name is \" + player.alias + \"! Don't you ever forget it!\n</code></pre>\n<hr>\n<p>the '[MESSAGE]' option allows for TEXT ONLY:</p>\n<p>print [MESSAGE] hi, how are you?<br>\n// NO error</p>\n<p>x = \"hi\"<br>\nprint [MESSAGE] x + \", how are you?\"<br>\n// ERROR!</p>\n<hr>\n<p>whereas...</p>\n<p>the '[EXPRESSION]' option allows for you to directly type in whatever coding expression you want:</p>\n<p>you can do any of these with it, examples:</p>\n<p>TEXT ONLY:</p>\n<p>print [EXPRESSION] \"hi, how are you?\"<br>\n// NO error</p>\n<p>VARIABLE ONLY:</p>\n<p>x = \"hi, how are you?\"<br>\nprint [EXPRESSION] x<br>\n// NO error</p>\n<p>both TEXT and VARIABLE:</p>\n<p>x = \"Hi\"<br>\nprint [EXPRESSION] x + \", how are you?\"<br>\n// NO error</p>\n\n",
      "PostDate": "2019-12-04T19:30:43.2129076Z",
      "LastEditDate": "2019-12-04T20:20:02.9252555Z",
      "link": null
    },
    {
      "PostId": "7372371f-4410-461b-9355-fb743aeb82f8",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "PS\r\n\r\nforgot to explain this...\r\n\r\nfor non-coders, you'll want/need to use Attribute VARIABLES, as they're global and permanent (so long as the Object actually exists or still exists, of course)\r\n\r\nAttribute VARIABLES:\r\n\r\nNAME_OF_OBJECT.NAME_OF_ATTRIBUTE\r\n// and\r\nNAME_OF_OBJECT.NAME_OF_ATTRIBUTE = VALUE_OR_EXPRESSION\r\n\r\nexamples (in code):\r\n\r\nplayer.alias = \"HK\"\r\nplayer.strength = 100\r\n\r\nplayer.flying = true\r\n// or\r\nplayer.flying = false\r\n\r\ngame.introduction = \"blah blah blah\"\r\n\r\ncreate (\"orc_1\")\r\norc_1.alias = \"orc\"\r\norc_1.strength = 50\r\norc_1.dead = false // as usually you want a monster to start in an 'alive / not dead' state, lol\r\n\r\nin the GUI/Editor, for setting/creating/changing Attributes: add new script -> 'variables' section/category -> 'set a variable or attribute' Script -> (see below)\r\n\r\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION\r\n\r\nfor example:\r\n\r\nplayer.alias = \"HK\"\r\n\r\nusing the GUI/Editor, would be this:\r\n\r\nadd new script -> 'variables' section/category -> 'set a variable or attribute' Script -> (see below)\r\n\r\nset variable player.alias = [EXPRESSION] \"HK\"\r\n\r\n// NAME_OF_OBJECT: player\r\n// NAME_OF_ATTRIBUTE: alias\r\n// VALUE_OR_EXPRESSION: \"HK\"\r\n\r\n-------\r\n\r\nyou need to understand programming/coding, in order to be able to use Variable VARIABLES correctly, so that's why non-coders should/need-to use Attribute VARIABLES instead, as they're global and permanent, making their use much easier for you\r\n\r\n(understanding 'scope' isn't easy for non-coders, which involves Variable VARIABLES, whereas using Attribute VARIABLES bypasses/ignores the issues of scope, making it much easier for non-coder, who don't understand scope)",
      "EditableFormat": "markdown",
      "HTML": "<p>PS</p>\n<p>forgot to explain this...</p>\n<p>for non-coders, you'll want/need to use Attribute VARIABLES, as they're global and permanent (so long as the Object actually exists or still exists, of course)</p>\n<p>Attribute VARIABLES:</p>\n<p>NAME_OF_OBJECT.NAME_OF_ATTRIBUTE<br>\n// and<br>\nNAME_OF_OBJECT.NAME_OF_ATTRIBUTE = VALUE_OR_EXPRESSION</p>\n<p>examples (in code):</p>\n<p>player.alias = \"HK\"<br>\nplayer.strength = 100</p>\n<p>player.flying = true<br>\n// or<br>\nplayer.flying = false</p>\n<p>game.introduction = \"blah blah blah\"</p>\n<p>create (\"orc_1\")<br>\norc_1.alias = \"orc\"<br>\norc_1.strength = 50<br>\norc_1.dead = false // as usually you want a monster to start in an 'alive / not dead' state, lol</p>\n<p>in the GUI/Editor, for setting/creating/changing Attributes: add new script -&gt; 'variables' section/category -&gt; 'set a variable or attribute' Script -&gt; (see below)</p>\n<p>set variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION</p>\n<p>for example:</p>\n<p>player.alias = \"HK\"</p>\n<p>using the GUI/Editor, would be this:</p>\n<p>add new script -&gt; 'variables' section/category -&gt; 'set a variable or attribute' Script -&gt; (see below)</p>\n<p>set variable player.alias = [EXPRESSION] \"HK\"</p>\n<p>// NAME_OF_OBJECT: player<br>\n// NAME_OF_ATTRIBUTE: alias<br>\n// VALUE_OR_EXPRESSION: \"HK\"</p>\n<hr>\n<p>you need to understand programming/coding, in order to be able to use Variable VARIABLES correctly, so that's why non-coders should/need-to use Attribute VARIABLES instead, as they're global and permanent, making their use much easier for you</p>\n<p>(understanding 'scope' isn't easy for non-coders, which involves Variable VARIABLES, whereas using Attribute VARIABLES bypasses/ignores the issues of scope, making it much easier for non-coder, who don't understand scope)</p>\n\n",
      "PostDate": "2019-12-04T19:56:27.4311981Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
