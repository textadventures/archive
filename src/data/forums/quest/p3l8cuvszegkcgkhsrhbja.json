{
  "Topic": {
    "TopicId": "p3l8cuvszegkcgkhsrhbja",
    "ForumId": "10",
    "Title": "Displaying in-room descriptions for objects only?",
    "LastUpdated": "2020-01-08T00:51:00.7394176Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "9d55017e-1170-4dd1-8e2e-953ab8b0fcef",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm trying to find a way where the objects are displayed only as in-room descriptions only. Is there a way of turning off the objects names in the display. I don't want the first two lines being displayed.\r\n\r\na small room\r\na Book titled Red Roses, a Book titled Brave knight, a Door and a Wooden Bookself.\r\nYou are in a small room with concrete walls.\r\nA door is in one of the walls There is a wooden bookself with a single shelf\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm trying to find a way where the objects are displayed only as in-room descriptions only. Is there a way of turning off the objects names in the display. I don't want the first two lines being displayed.</p>\n<p>a small room<br>\na Book titled Red Roses, a Book titled Brave knight, a Door and a Wooden Bookself.<br>\nYou are in a small room with concrete walls.<br>\nA door is in one of the walls There is a wooden bookself with a single shelf</p>\n\n",
      "PostDate": "2020-01-08T00:51:00.7394176Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5ed248bf-8362-4ecc-8844-2d5a4aa86b81",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Just found out that you can make objects scenery so they don't appear listed.",
      "EditableFormat": "markdown",
      "HTML": "<p>Just found out that you can make objects scenery so they don't appear listed.</p>\n\n",
      "PostDate": "2020-01-08T03:27:12.7798248Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ab9b5e1e-8f4b-4170-93a1-2e491021e534",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "On the game's \"Room Descriptions\" tab, there is a section headed \"Room description layout\". It lists the four parts of the auto-generated room description and lets you give each a number to determine which order they come in. If you give any of them a number that isn't 1, 2, 3, or 4, then that part won't be shown.\r\n\r\nOr if you only want this to happen for certain objects (those with an in-room description), you can set them as scenery. But be careful, because when a player picks up an object and drops it again, this will remove the scenery flag, causing it to reappear in the object list. (It's also worth checking if the in-room description mentions being on a shelf/table/etc because this can be weird if the player moves it to somewhere else)\r\n\r\nIn the past, I've had objects with a script that runs when they're dropped:\r\n<pre><code><b style=\"border: 1px solid green; display:block\">this.scenery = true\r\nthis.parent = destination</b>switch (destination) {\r\n  case (bookshelf, library) {\r\n    this.inroomdescription = \"There is a battered yellow {object:dictionary} among the books on the shelf.\"\r\n  }\r\n  case (kitchen, dining room) {\r\n    this.inroomdescription = \"There is a worn {object:dictionary} on the table.\"\r\n  }\r\n  case (lounge) {\r\n    this.inroomdescription = \"A tatty yellow {object:dictionary:book} looks quite out of place on the polished coffee table.\"\r\n  }\r\n  default {\r\n    this.inroomdescription = \"The {object:dictionary} is on the floor where you left it, ready to trip any careless passers by.\"\r\n  }\r\n}</code></pre>\r\n\r\n(the first two lines turn the \"scenery\" flag back on, and move the object to its destination. The rest is just an example of how to change the in-room description based on circumstances)",
      "EditableFormat": "markdown",
      "HTML": "<p>On the game's \"Room Descriptions\" tab, there is a section headed \"Room description layout\". It lists the four parts of the auto-generated room description and lets you give each a number to determine which order they come in. If you give any of them a number that isn't 1, 2, 3, or 4, then that part won't be shown.</p>\n<p>Or if you only want this to happen for certain objects (those with an in-room description), you can set them as scenery. But be careful, because when a player picks up an object and drops it again, this will remove the scenery flag, causing it to reappear in the object list. (It's also worth checking if the in-room description mentions being on a shelf/table/etc because this can be weird if the player moves it to somewhere else)</p>\n<p>In the past, I've had objects with a script that runs when they're dropped:</p>\n<pre><code><b style=\"border: 1px solid green; display: block\">this.scenery = true\nthis.parent = destination</b>switch (destination) {\n  case (bookshelf, library) {\n    this.inroomdescription = \"There is a battered yellow {object:dictionary} among the books on the shelf.\"\n  }\n  case (kitchen, dining room) {\n    this.inroomdescription = \"There is a worn {object:dictionary} on the table.\"\n  }\n  case (lounge) {\n    this.inroomdescription = \"A tatty yellow {object:dictionary:book} looks quite out of place on the polished coffee table.\"\n  }\n  default {\n    this.inroomdescription = \"The {object:dictionary} is on the floor where you left it, ready to trip any careless passers by.\"\n  }\n}</code></pre>\n<p>(the first two lines turn the \"scenery\" flag back on, and move the object to its destination. The rest is just an example of how to change the in-room description based on circumstances)</p>\n\n",
      "PostDate": "2020-01-08T09:45:08.6105611Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "19b74b16-9faa-4289-8325-e80274936ade",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi mrangel.\r\n\r\nI don't mind the object appearing in the object list after I have dropped it as long as it does not appear twice in the description.\r\nI like your idea of using switch to determine where the object is to be located depending on what room the object is dropped in.\r\nif you were to put the object on another object then this could be a problem such as \"put book on chair\", unless there is a way of changing the in-room description for an object during the game play.\r\n\r\nI've just found another problem as I made the book self a container surface container and gave the list prefix text \"two books titled Red Rose and Brave Knight\". So when I pick up one of the books then look at the book self the book I picked up is still on the book self.\r\nWriting text adventure programs can cause all sorts of unseen problems.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi mrangel.</p>\n<p>I don't mind the object appearing in the object list after I have dropped it as long as it does not appear twice in the description.<br>\nI like your idea of using switch to determine where the object is to be located depending on what room the object is dropped in.<br>\nif you were to put the object on another object then this could be a problem such as \"put book on chair\", unless there is a way of changing the in-room description for an object during the game play.</p>\n<p>I've just found another problem as I made the book self a container surface container and gave the list prefix text \"two books titled Red Rose and Brave Knight\". So when I pick up one of the books then look at the book self the book I picked up is still on the book self.<br>\nWriting text adventure programs can cause all sorts of unseen problems.</p>\n\n",
      "PostDate": "2020-01-08T10:56:04.4369738Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ce0bdab2-3f1d-475f-8b9c-2e2a99cb1c3b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> \"put book on chair\"\r\n\r\nThis also runs the object's drop script, with the variable `destination` being the chair. The example script I included above would change the in-room description accordingly. The objects listed in the 'case' blocks can be either containers or rooms.\r\n\r\n> \"two books titled Red Rose and Brave Knight\".\r\n\r\nI think I can see a way to make that work but I'll reply when I get home, as my phone has a crack right across the keyboard and it's really hard to write code without typos.\r\n\r\nIf the books have their titles as aliases, and the player can't put other objects on the bookcase, you could make the list prefix: `{either ListCount(GetDirectChildren(bookcase))=1:a book:{=ToWords(ListCount(GetDirectChildren(bookcase)))} books} titled`\r\nWhich should show \"a book titled\", \"two books titled\", \"three books titled\", etc. as appropriate.\r\n\r\nMaking it group books together would be harder, but should be possible.\r\n\r\nEDIT: Not as hard as I thought.\r\nYou can use `{=` in the bookcase's in room description or in its 'look' description to call a function.\r\n\r\nFor example, the bookcase's in room description:\r\n```\r\nThere is an ornate wooden bookcase in the corner, on which stand dozens of worn old books. {=FilteredContents(bookcase, \"{=CapFirst(ToWords(count))} in particular {either plural:catch:catches} your attention, titled {=(list)}.\", \"isbook\", \"None of them look particularly interesting\", \"{=CapFirst(list)} {either plural:are:is} {either twolists:also }perched precariously on the shelves.\")}\r\n```\r\n\r\nThen I'd write a function `FilteredContents` of type \"String\" with parameters `container`, `format`, `attribute`,  `empty`, and `otherformat`. The script would be something like (off the top of my head):\r\n```\r\nall_items = GetDirectChildren (container)\r\nitems = FilterByNotAttribute (all_items, attribute, null)\r\nothers = ListExclude (all_items, items)\r\nfound = NewStringList()\r\nforeach (item, items) {\r\n  item.scenery = true\r\n  item.inroomdescription = \"\"\r\n  if (HasString (item, \"incontainerdescription\")) {\r\n    list add (found, item.incontainerdescription)\r\n  }\r\n  else {\r\n    list add (found, GetDisplayName (item))\r\n  }\r\n}\r\nsavedvars = NewDictionary()\r\nif (ListCount (items) = 0) {\r\n  result = empty\r\n}\r\nelse {\r\n  params = NewDictionary()\r\n  dictionary add (params, \"items\", items)\r\n  dictionary add (params, \"count\", ListCount(items))\r\n  dictionary add (params, \"plural\", not ListCount(items) = 1)\r\n  dictionary add (params, \"list\", FormatList (found, \", \", \", and\", \"\"))\r\n  dictionary add (params, \"twolists\", ListCount(items) * ListCount (others) > 0)\r\n  if (not HasAttribute (game, \"text_processor_variables\")) {\r\n    game.text_processor_variables = NewDictionary()\r\n  }\r\n  foreach (key, params) {\r\n    if (DictionaryContains (game.text_processor_variables, key)) {\r\n      dictionary add (savedvars, key, DictionaryItem (game.text_processor_variables, key))\r\n      dictionary remove (game.text_processor_variables, key)\r\n    }\r\n    dictionary add (game.text_processor_variables, key, DictionaryItem (params, key))\r\n  }\r\n  result = ProcessText (format)\r\n  foreach (key, params) {\r\n    dictionary remove (game.text_processor_variables, key)\r\n  }\r\n}\r\nif (not IsDefined(\"otherformat\")) {\r\n  otherformat = \"\"\r\n}\r\nif (not TypeOf(otherformat) = \"string\") {\r\n  otherformat = \"\"\r\n}\r\nif ((LengthOf (otherformat) > 0) and (ListCount (others) > 0)) {\r\n  found = NewStringList()\r\n  foreach (item, others) {\r\n    item.scenery = true\r\n    item.inroomdescription = \"\"\r\n    if (HasString (item, \"incontainerdescription\")) {\r\n      list add (found, item.incontainerdescription)\r\n    }\r\n    else {\r\n      list add (found, GetDisplayName (item))\r\n    }\r\n  }\r\n  params = NewDictionary()\r\n  dictionary add (params, \"items\", others)\r\n  dictionary add (params, \"count\", ListCount(others))\r\n  dictionary add (params, \"plural\", not ListCount(others) = 1)\r\n  dictionary add (params, \"list\", FormatList (found, \", \", \", and\", \"\"))\r\n  dictionary add (params, \"twolists\", ListCount(items) * ListCount (others) > 0)\r\n  if (not HasAttribute (game, \"text_processor_variables\")) {\r\n    game.text_processor_variables = NewDictionary()\r\n  }\r\n  foreach (key, params) {\r\n    if (DictionaryContains (game.text_processor_variables, key)) {\r\n      dictionary add (savedvars, key, DictionaryItem (game.text_processor_variables, key))\r\n      dictionary remove (game.text_processor_variables, key)\r\n    }\r\n    dictionary add (game.text_processor_variables, key, DictionaryItem (params, key))\r\n  }\r\n  result = result + \" \" + ProcessText (otherformat)\r\n  foreach (key, params) {\r\n    dictionary remove (game.text_processor_variables, key)\r\n  }\r\n}\r\nforeach (key, savedvars) {\r\n  dictionary add (game.text_processor_variabled, key, DictionaryItem (savedvars, key))\r\n}\r\nreturn (result)\r\n```\r\n\r\nWow, that took longer to type than I expected!\r\n\r\nIn any case, that would generate an in-room description like \"There is an ornate wooden bookcase in the corner, on which stand dozens of worn old books. Three in particular catch your attention, titled <u style=\"color:blue\">The Origin of Spices</u>, <u style=\"color:blue\">The Two Towers</u>, and <u style=\"color:blue\">Wilbur's Compendium of Naughty Pictures</u>. A <u style=\"color:blue\">globe</u> with one leg broken is also perched precariously on the shelves.\"",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>\"put book on chair\"</p>\n</blockquote>\n<p>This also runs the object's drop script, with the variable <code>destination</code> being the chair. The example script I included above would change the in-room description accordingly. The objects listed in the 'case' blocks can be either containers or rooms.</p>\n<blockquote>\n<p>\"two books titled Red Rose and Brave Knight\".</p>\n</blockquote>\n<p>I think I can see a way to make that work but I'll reply when I get home, as my phone has a crack right across the keyboard and it's really hard to write code without typos.</p>\n<p>If the books have their titles as aliases, and the player can't put other objects on the bookcase, you could make the list prefix: <code>{either ListCount(GetDirectChildren(bookcase))=1:a book:{=ToWords(ListCount(GetDirectChildren(bookcase)))} books} titled</code><br>\nWhich should show \"a book titled\", \"two books titled\", \"three books titled\", etc. as appropriate.</p>\n<p>Making it group books together would be harder, but should be possible.</p>\n<p>EDIT: Not as hard as I thought.<br>\nYou can use <code>{=</code> in the bookcase's in room description or in its 'look' description to call a function.</p>\n<p>For example, the bookcase's in room description:</p>\n<pre><code>There is an ornate wooden bookcase in the corner, on which stand dozens of worn old books. {=FilteredContents(bookcase, \"{=CapFirst(ToWords(count))} in particular {either plural:catch:catches} your attention, titled {=(list)}.\", \"isbook\", \"None of them look particularly interesting\", \"{=CapFirst(list)} {either plural:are:is} {either twolists:also }perched precariously on the shelves.\")}\n</code></pre>\n<p>Then I'd write a function <code>FilteredContents</code> of type \"String\" with parameters <code>container</code>, <code>format</code>, <code>attribute</code>,  <code>empty</code>, and <code>otherformat</code>. The script would be something like (off the top of my head):</p>\n<pre><code>all_items = GetDirectChildren (container)\nitems = FilterByNotAttribute (all_items, attribute, null)\nothers = ListExclude (all_items, items)\nfound = NewStringList()\nforeach (item, items) {\n  item.scenery = true\n  item.inroomdescription = \"\"\n  if (HasString (item, \"incontainerdescription\")) {\n    list add (found, item.incontainerdescription)\n  }\n  else {\n    list add (found, GetDisplayName (item))\n  }\n}\nsavedvars = NewDictionary()\nif (ListCount (items) = 0) {\n  result = empty\n}\nelse {\n  params = NewDictionary()\n  dictionary add (params, \"items\", items)\n  dictionary add (params, \"count\", ListCount(items))\n  dictionary add (params, \"plural\", not ListCount(items) = 1)\n  dictionary add (params, \"list\", FormatList (found, \", \", \", and\", \"\"))\n  dictionary add (params, \"twolists\", ListCount(items) * ListCount (others) &gt; 0)\n  if (not HasAttribute (game, \"text_processor_variables\")) {\n    game.text_processor_variables = NewDictionary()\n  }\n  foreach (key, params) {\n    if (DictionaryContains (game.text_processor_variables, key)) {\n      dictionary add (savedvars, key, DictionaryItem (game.text_processor_variables, key))\n      dictionary remove (game.text_processor_variables, key)\n    }\n    dictionary add (game.text_processor_variables, key, DictionaryItem (params, key))\n  }\n  result = ProcessText (format)\n  foreach (key, params) {\n    dictionary remove (game.text_processor_variables, key)\n  }\n}\nif (not IsDefined(\"otherformat\")) {\n  otherformat = \"\"\n}\nif (not TypeOf(otherformat) = \"string\") {\n  otherformat = \"\"\n}\nif ((LengthOf (otherformat) &gt; 0) and (ListCount (others) &gt; 0)) {\n  found = NewStringList()\n  foreach (item, others) {\n    item.scenery = true\n    item.inroomdescription = \"\"\n    if (HasString (item, \"incontainerdescription\")) {\n      list add (found, item.incontainerdescription)\n    }\n    else {\n      list add (found, GetDisplayName (item))\n    }\n  }\n  params = NewDictionary()\n  dictionary add (params, \"items\", others)\n  dictionary add (params, \"count\", ListCount(others))\n  dictionary add (params, \"plural\", not ListCount(others) = 1)\n  dictionary add (params, \"list\", FormatList (found, \", \", \", and\", \"\"))\n  dictionary add (params, \"twolists\", ListCount(items) * ListCount (others) &gt; 0)\n  if (not HasAttribute (game, \"text_processor_variables\")) {\n    game.text_processor_variables = NewDictionary()\n  }\n  foreach (key, params) {\n    if (DictionaryContains (game.text_processor_variables, key)) {\n      dictionary add (savedvars, key, DictionaryItem (game.text_processor_variables, key))\n      dictionary remove (game.text_processor_variables, key)\n    }\n    dictionary add (game.text_processor_variables, key, DictionaryItem (params, key))\n  }\n  result = result + \" \" + ProcessText (otherformat)\n  foreach (key, params) {\n    dictionary remove (game.text_processor_variables, key)\n  }\n}\nforeach (key, savedvars) {\n  dictionary add (game.text_processor_variabled, key, DictionaryItem (savedvars, key))\n}\nreturn (result)\n</code></pre>\n<p>Wow, that took longer to type than I expected!</p>\n<p>In any case, that would generate an in-room description like \"There is an ornate wooden bookcase in the corner, on which stand dozens of worn old books. Three in particular catch your attention, titled <u style=\"color: blue\">The Origin of Spices</u>, <u style=\"color: blue\">The Two Towers</u>, and <u style=\"color: blue\">Wilbur's Compendium of Naughty Pictures</u>. A <u style=\"color: blue\">globe</u> with one leg broken is also perched precariously on the shelves.\"</p>\n\n",
      "PostDate": "2020-01-08T12:44:58.272839Z",
      "LastEditDate": "2020-01-08T14:48:41.1804183Z",
      "link": null
    },
    {
      "PostId": "099f1a6b-e029-4743-bc0d-37757181ae62",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi rangel.\r\nWow that's a lot of code. I'll study it to see how it works. I may prefer to find another way around the problem with less code such as if the player has a certain book then describe the book that's still on the book self when I look at the book self, or have the description displayed once only in describing what books are in the book self and any future description could be \"The book self is for storing books\".  If I type \"Get Book\" then I get a list of books to choose from that seems to be built into the Quest program as my objects are 'Book titled Red Rose', 'Book titled Brave Knight'.\r\nThat also makes me wonder if common commands such as 'look' can be over written by script commands.\r\nif example depending on what the conditions were (flags set etc) I might want a different message when I try to look at an object.\r\nIs this possible? ",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi rangel.<br>\nWow that's a lot of code. I'll study it to see how it works. I may prefer to find another way around the problem with less code such as if the player has a certain book then describe the book that's still on the book self when I look at the book self, or have the description displayed once only in describing what books are in the book self and any future description could be \"The book self is for storing books\".  If I type \"Get Book\" then I get a list of books to choose from that seems to be built into the Quest program as my objects are 'Book titled Red Rose', 'Book titled Brave Knight'.<br>\nThat also makes me wonder if common commands such as 'look' can be over written by script commands.<br>\nif example depending on what the conditions were (flags set etc) I might want a different message when I try to look at an object.<br>\nIs this possible?</p>\n\n",
      "PostDate": "2020-01-09T09:15:53.8932198Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c6043e85-a531-4c51-826b-f87076ffc3db",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah… the code came out bigger than I expected because I tried to make a general case that could be used for other objects too; and I didn't want it to mess with `text_processor_variables` so I saved them before doing the output and restored them later.\r\n\r\nTo be clear, I would probably not use that code. I'd just stop the player from putting non-book items on the bookshelf.\r\n\r\nOr here's an alternative way to do it: In the drop script for the books, check if the other book is in the same location. If so, create a temporary object which is an open container with the alias \"two books named X and Y\" and move the books into it. That object's look and in-room descriptions could show up instead of the individual ones.\r\n\r\n(this is a little like the \"stacking\" library that a lot of games use to prevent the inventory getting cluttered with a dozen identical potions)\r\nIf you end up going down that route, I'd suggest giving the books a script attribute named `changedparent`; this will be run automatically whenever a book moves to a different location (which means that it will behave correctly wherever they are)",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah… the code came out bigger than I expected because I tried to make a general case that could be used for other objects too; and I didn't want it to mess with <code>text_processor_variables</code> so I saved them before doing the output and restored them later.</p>\n<p>To be clear, I would probably not use that code. I'd just stop the player from putting non-book items on the bookshelf.</p>\n<p>Or here's an alternative way to do it: In the drop script for the books, check if the other book is in the same location. If so, create a temporary object which is an open container with the alias \"two books named X and Y\" and move the books into it. That object's look and in-room descriptions could show up instead of the individual ones.</p>\n<p>(this is a little like the \"stacking\" library that a lot of games use to prevent the inventory getting cluttered with a dozen identical potions)<br>\nIf you end up going down that route, I'd suggest giving the books a script attribute named <code>changedparent</code>; this will be run automatically whenever a book moves to a different location (which means that it will behave correctly wherever they are)</p>\n\n",
      "PostDate": "2020-01-09T10:35:04.6895743Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4784cc9c-c671-4082-9de0-97a784a3a384",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi mrangel.\r\nThanks for your reply.\r\nI was hoping that you could answer my other question.   Can common commands such as 'look' can be over written by script commands.\r\nif example depending on what the conditions were (flags set etc) I might want a different message when I try to look at an object.\r\nIs this possible?\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi mrangel.<br>\nThanks for your reply.<br>\nI was hoping that you could answer my other question.   Can common commands such as 'look' can be over written by script commands.<br>\nif example depending on what the conditions were (flags set etc) I might want a different message when I try to look at an object.<br>\nIs this possible?</p>\n\n",
      "PostDate": "2020-01-10T00:08:17.0682549Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "be3b202f-b004-47c4-8906-188983e590e0",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi mrangel.\r\nThanks for your reply.\r\nI was hoping that you could answer my other question.   Can common commands such as 'look' can be over written by script commands.\r\nif example depending on what the conditions were (flags set etc) I might want a different message when I try to look at an object.\r\nIs this possible?\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi mrangel.<br>\nThanks for your reply.<br>\nI was hoping that you could answer my other question.   Can common commands such as 'look' can be over written by script commands.<br>\nif example depending on what the conditions were (flags set etc) I might want a different message when I try to look at an object.<br>\nIs this possible?</p>\n\n",
      "PostDate": "2020-01-10T00:08:35.5838693Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "41e00811-7f9d-40b4-b2ab-8c12bd73ece1",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You can modify the default 'lookat' command if you want; you can copy any of the core functions into your game and modify them.\r\n\r\n(Doing this on the web editor is a lot harder, but possible)\r\n\r\nHowever, you usually won't need to.\r\n\r\n> depending on what the conditions were (flags set etc) I might want a different message when I try to look at an object.\r\n\r\nAn object's `look` attribute can be either a string which is displlayed when it is looked at; or a script which is run to display a message.\r\n\r\nFor example, if my dictionary has a flag `burned` which is set during the game, I could set its description to:\r\n`{either dictionary.burned:A fancy leatherbound dictionary:A charred bundle of pages}`",
      "EditableFormat": "markdown",
      "HTML": "<p>You can modify the default 'lookat' command if you want; you can copy any of the core functions into your game and modify them.</p>\n<p>(Doing this on the web editor is a lot harder, but possible)</p>\n<p>However, you usually won't need to.</p>\n<blockquote>\n<p>depending on what the conditions were (flags set etc) I might want a different message when I try to look at an object.</p>\n</blockquote>\n<p>An object's <code>look</code> attribute can be either a string which is displlayed when it is looked at; or a script which is run to display a message.</p>\n<p>For example, if my dictionary has a flag <code>burned</code> which is set during the game, I could set its description to:<br>\n<code>{either dictionary.burned:A fancy leatherbound dictionary:A charred bundle of pages}</code></p>\n\n",
      "PostDate": "2020-01-10T01:02:30.1254155Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "03afab6b-29d8-4804-8c37-72b01bf6b759",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I found that I can add \"look at\" in the pattern field and then add a condition in a script to determine the resulting message. \r\nBut I think it maybe a problem in creating a look command if I want to work on more than one object so maybe your method is better.\r\nIt might be possible to have two commands for look if I give each command a different name and in the pattern field give the object name that the look applies to.\r\nI'm thinking that when you do type in a command during game play all the custom commands are considered first before it falls back on default built-in commands.",
      "EditableFormat": "markdown",
      "HTML": "<p>I found that I can add \"look at\" in the pattern field and then add a condition in a script to determine the resulting message.<br>\nBut I think it maybe a problem in creating a look command if I want to work on more than one object so maybe your method is better.<br>\nIt might be possible to have two commands for look if I give each command a different name and in the pattern field give the object name that the look applies to.<br>\nI'm thinking that when you do type in a command during game play all the custom commands are considered first before it falls back on default built-in commands.</p>\n\n",
      "PostDate": "2020-01-11T10:26:07.7437763Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
