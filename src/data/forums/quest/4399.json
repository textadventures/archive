{
  "Topic": {
    "TopicId": "4399",
    "ForumId": "10",
    "Title": "Overall Help & Understanding",
    "LastUpdated": "2014-06-14T04:42:56+01:00",
    "ReplyCount": 3
  },
  "Posts": [
    {
      "PostId": "29081",
      "UserId": 0,
      "Username": "onimike",
      "UserAvatar": null,
      "UserGravatar": "81a1a7d9be523aa5ac1d92fa2660b397",
      "EditableText": "Ok so I started this game yesterday and am kinda getting it I mean I got it working most of how I want but here are the questions I have. Now before I get a response I have looked at the coding and example posted other places and they don't cover (or im not seeing) what Im trying to do. First I want my sounds to play all the way through without taking the interval time to start but want the whole sound to play? Second I want the cell door to be open and closable and only be able to access hallway if door is open not if its closed? And last need a decent Ai system, I think I could probably use a timer to start when in area of enemy to take off so much health until you kill it but I think there's an easier way? Plus I have done all this with the drop down menus I do not know coding, I mean I can kinda understand when reading code just not typing in my own code. Tell me what you think so far got a lot more work and story for this game to add.. \nP.S. I don't know if it let me upload the sounds and pics or not hope it did so you all can tell what I mean about the sounds..\n\nThanks \nMike",
      "EditableFormat": "bbcode",
      "HTML": "Ok so I started this game yesterday and am kinda getting it I mean I got it working most of how I want but here are the questions I have. Now before I get a response I have looked at the coding and example posted other places and they don't cover (or im not seeing) what Im trying to do. First I want my sounds to play all the way through without taking the interval time to start but want the whole sound to play? Second I want the cell door to be open and closable and only be able to access hallway if door is open not if its closed? And last need a decent Ai system, I think I could probably use a timer to start when in area of enemy to take off so much health until you kill it but I think there's an easier way? Plus I have done all this with the drop down menus I do not know coding, I mean I can kinda understand when reading code just not typing in my own code. Tell me what you think so far got a lot more work and story for this game to add.. <br/>P.S. I don't know if it let me upload the sounds and pics or not hope it did so you all can tell what I mean about the sounds..<br/><br/>Thanks <br/>Mike<div><a href=\"/attachment/922\">We Walk Among the Dead.aslx</a></div>",
      "PostDate": "2014-06-11T16:34:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29082",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "here's some useful links for you to help you out:\n\n(don't be scared of code, as the only two issues with writing code is first knowing how to write it, ie it's structure ~ syntax ~ format ~ pattern, and also in writing precisely... no typos or your code won't work, lol. So, it's not really as scary as it seems, 'troubleshooting' errors when you try to write in code, is merely 'spell and typo checking', hehe. Though, this isn't easy... to find the errors...)\n\n(but, if you just don't like code, or if it is just too confusing for you, quest does have a great GUI~Editor for you, I just don't know it that well, and it takes longer to explain stuff via it, which is just why I personally usually help people with code, as it's faster and easier for me to do so. I can help via using the GUI~Editor, but I need the time to do so, which I don't have much of anymore... sighs)\n\n01. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Main_Page\">http://quest5.net/wiki/Main_Page</a><!-- m -->\n02. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Tutorial\">http://quest5.net/wiki/Tutorial</a><!-- m -->\n03. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/How_to\">http://quest5.net/wiki/How_to</a><!-- m --> (guides)\n04. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Showing_a_menu\">http://quest5.net/wiki/Showing_a_menu</a><!-- m -->\n05. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Character_Creation\">http://quest5.net/wiki/Character_Creation</a><!-- m -->\n06. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)\n07. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=Set#mw-pages\">http://quest5.net/w/index.php?title=Cat ... t#mw-pages</a><!-- m --> (page 2, range: S-Z)\n08. <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewforum.php?f=18\">viewforum.php?f=18</a><!-- l --> (more guides: libraries and code)\n09. (also, look up 'switch' =or= 'case command' in #03 and~or in #06-07)\n10. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Object_element\">http://quest5.net/wiki/Object_element</a><!-- m -->\n11. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ASLX_Elements\">http://quest5.net/wiki/ASLX_Elements</a><!-- m -->\n12. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:ASLX_Elements\">http://quest5.net/wiki/Category:ASLX_Elements</a><!-- m -->\n13. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Object_element\">http://quest5.net/wiki/Object_element</a><!-- m -->\n14. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Attribute_Types\">http://quest5.net/wiki/Attribute_Types</a><!-- m -->\n\nfrom #3 ('how to' link):\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Hs-blockingexit\">http://quest5.net/wiki/Hs-blockingexit</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Hs-lockedexits\">http://quest5.net/wiki/Hs-lockedexits</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Unlockdoor\">http://quest5.net/wiki/Unlockdoor</a><!-- m -->\n\nfrom #2 (the 'tutorial' link):\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_lockable_exits\">http://quest5.net/wiki/Using_lockable_exits</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_lockable_containers\">http://quest5.net/wiki/Using_lockable_containers</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_containers\">http://quest5.net/wiki/Using_containers</a><!-- m -->\n\n-------------\n\nin the GUI~Editor (with the drop down menus and buttons, ie not code view writing mode):\n\nI think on your Object (or Exit too), you want to do the container tab (with quest version 550 ~ most recent, you may need to go into I think the 'game' Object, and one of it's tabs has check boxes I think for turning on more various tabs for the Objects ~ you may need to do this to see the container tab, whatever it is called), and I think one of the container type choices is: 'openable ~ closable', this makes your Object a 'door-like' Object. Now, the built in scripts have confused others and me too, but you can set your Object up for being open or closed initially, and then within the script you can open~close the Object, prevent from going through the Object unless it is open, require a 'key' Object to unlock it, and etc...\n\n-------\n\nthere's many ways to do what you want with removing your health:\n\nTimers, Turnscripts, and 'monster~enemy' Objects' Verbs' scripts.\n\nthe scripting (ie 'run as script -&gt; add a script' in the GUI~Editor) is the same for all of them:\n\nfor example:\n\nfirst, we need a 'dead~alive' Attribute (a boolean, ie a flag):\n\nObject: room\n-&gt; 'orc' Object -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;\n\nObject: orc\nAttribute Name: dead\nAttribute Type: boolean\nAttribute Value: false\n\nsome coding logic mentality:\n\ndead = false -&gt; conceptually, it is 'alive'\ndead = true -&gt; conceptually, it is 'dead'\nalive = false -&gt; conceptually, it is 'dead'\nalive = true -&gt; conceptually, it is 'alive'\n\nmost people use 'dead=false_or_true', instead of 'alive=false_or_true'\n\nthink of booleans (ie flags) as like a light switch, ie you can turn it 'on' (ie =true, =on, =yes, =1~binary, = +charge~chemistry~electronics, =etc) and 'off' (ie =false, =off, =no, =0~binary, = -charge~chemistry~electronics, =etc)\n\nthough, for specifically quest's Boolean Attribute Type, it uses '=false_or_true'\n\nwe initially set our 'orc' as:\n\norc.dead = false\n\nas we want our orc to be alive, so that we can and have to, kill it, lol.\n\nanother example of boolean (flag) usage:\n\nlich.undead_boolean = true\nHK.undead_boolean = false\n// hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\nwhich we can then script in cool things for:\n\nif (lich.undead = true) {\n-&gt; // conceptual pseudo-scripting (I'm lazy): if using holy_damage, then: lich.hp = lich.hp - HK.holy_damage * 2\n}\n\nanother example of boolean (flag) usage:\n\nHK.running = false // I'm walking right now\nHK.running = true // I'm running right now\n\nHK.flying = false // I'm walking right now\nHK.flying = true // I'm flying right now\n\nas I think you're seeing... boolean usage unfortunately, gets cumbersome (too many booleans!), very fast...\n\n(for example: status_effects)\nHK.poisoned = false\nHK.petrified = false\nHK.stunned = false\nHK.confused = false\nHK.silenced = false\nHK.asleep = false\nHK.cursed = false\nHK.blessed = false\nHK.miniturized~'moogled' = false\nHK.blinded = false\nHK.paralyzed = false\netc etc etc\n\nwell, there's a way to do the same thing without using 4829472987492837 booleans, but you're probably not ready yet for this (using lists and~or dictionaries), as they're a bit more complicated.\n\n-------\n\nso (in code, sorry, but it's faster than trying to do it via the GUI~editor)... now let's put the rest of it in (making~adding and using Attributes):\n\nObject: orc\nVerb: fight (custom~self made)\nif (orc.dead = false) {\n-&gt; // if the orc is alive, you fight it\n-&gt; player.hp = player.hp - orc.damage\n-&gt; msg (&quot;The orc attacks you&quot;)\n-&gt; if (player.hp &lt;= 0) {\n-&gt;-&gt; msg (&quot;The orc has killed you.&quot;)\n-&gt;-&gt; msg (&quot;GAME OVER&quot;)\n-&gt;-&gt; finish\n-&gt; }\n-&gt; orc.hp = orc.hp - player.damage\n-&gt; msg (&quot;You attack the orc.&quot;)\n-&gt; if (orc.hp &lt;= 0) {\n-&gt;-&gt; // we tell quest to set ~ re-set the orc as being now dead:\n-&gt;-&gt; orc.dead = true\n-&gt;-&gt; msg (&quot;You killed the orc! Now it is dead.&quot;)\n-&gt; }\n// if you were to click on the orc's 'fight' Verb again, after killing it, then you get this response of scripts:\n} else if (orc.dead = true) {\n-&gt; msg (&quot;The orc is already dead, silly. You have no need to fight the orc's corpse!&quot;)\n}\n\n------------\n\nin code, as scripting:\n\nObject_name.Attribute_name = Expression_or_Value\norc.dead = false\n\nin code, as 'tags':\n\n&lt;object name=&quot;room&quot;&gt;\n-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;\n-&gt; &lt;object name=&quot;player&quot;&gt;\n-&gt;-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;\n-&gt;-&gt; &lt;inherit name=&quot;editor_player&quot; /&gt;\n-&gt; &lt;/object&gt;\n-&gt; &lt;object name=&quot;orc&quot;&gt;\n-&gt;-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;\n-&gt;-&gt; &lt;attr name=&quot;dead&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;\n-&gt; &lt;/object&gt;\n&lt;/object&gt;\n\n---------------\n\nnow, as for the GUI~Editor, these are you two SUPER Scripts:\n\n'if' and 'set a variable or attribute'\n\nwhich, especially when used together, let's you do pretty much 90% of what you want to do within your game\n\nthere's many places to add scripts to: Verbs, Functions, Commands, Turnscripts, Timers, Objects (as Attributes, Attribute Type: Script), and etc.\n\nif:\n\nrun as script -&gt; add a script -&gt; scripts -&gt; if -&gt; [EXPRESSION] -&gt; code (write~type) it in: see below\n\nset a variable or an attribute:\n\nrun as script -&gt; add a script -&gt; variables -&gt; set a variable or an attribute -&gt;code (write~type) it in: see below\n\nQuest's Terminology:\n\nVariables:\n-&gt; An Attribute: Object.Attribute = Value_or_Expression\n-&gt; A Variable: Attribute = Value_or_Expression\n\nAttributes, by having (being 'attached' to) the 'Object.', makes it 'savable', an thus 'loadable' (so long as the object still exists), which means that you can use that Attribute anywhere (same concept as with Functions and the 'call function' Script).\n\nVariables (Attribute = Value_or_Expression), however, can only be used within it's own script location. It can't be used within another script elsewhere in the game.\n\nfor examples:\n\ngame (object) -&gt; Scripts (tab) -&gt; Start Script -&gt; Add a script -&gt; call function: character_creation_function\n\n&lt;function name=&quot;character_creation_function&quot;&gt;\n-&gt; msg (&quot;What is your name?&quot;)\n-&gt; get input {\n-&gt;-&gt; my_name = result\n-&gt; }\n&lt;/function&gt;\n\nObject: npc\nVerb: Chat\n\nmsg (&quot;Hi, my name is &quot; + my_name + &quot;.&quot;)\n// outputs: ERROR, 'my_name' isn't defined, it has no value given to it yet. my_name = ??? -&gt; null -&gt; ERROR\n\nwhereas, by attaching it to an Object (in the GUI~Editor simply Add the Attribute to that Object), Object.Attribute:\n\ngame (object) -&gt; Scripts (tab) -&gt; Start Script -&gt; Add a script -&gt; call function: character_creation_function\n\n&lt;function name=&quot;character_creation_function&quot;&gt;\n-&gt; msg (&quot;What is your name?&quot;)\n-&gt; get input {\n-&gt;-&gt; // I, during game play, type in: HK\n-&gt;-&gt; player.my_name = result\n-&gt; }\n&lt;/function&gt;\n\nObject: npc\nVerb: Chat\n\nmsg (&quot;Hi, my name is &quot; + player.my_name + &quot;.&quot;)\n// outputs: Hi, my name is HK.\n\n------------\n\norc.dead_boolean = false\nHK.strength_integer = 100\nHK.class_string = &quot;warrior&quot;\nHK.damage_double = 53.7\nHK.favorite_colors_stringlist = split (&quot;black;red&quot;, &quot;;&quot;)\nHK.favorite_color_string = &quot;black&quot;\n\nHK.damage_integer = wooden_sword.damage_integer + wooden_sword.damage_integer * (HK.strength_integer - orc.endurance_integer) / 100\n\norc.fight_script = (see below)\n\nif (orc.dead = false) {\n-&gt; you_go_first_variable = false\n-&gt; if (HK.speed_integer &gt; orc.speed_integer) {\n-&gt;-&gt; you_go_first_variable = true\n-&gt; } else if (HK.speed_integer = orc.speed_integer) {\n-&gt;-&gt; if (RandomChance (50) = true) {\n-&gt;-&gt;-&gt; you_go_first_variable = true\n-&gt;-&gt; }\n-&gt; }\n-&gt; if (you_go_first_variable = false) {\n-&gt;-&gt; HK.hp_integer = HK.hp_integer - orc.damage_integer\n-&gt;-&gt; msg (&quot;The orc attacks you for &quot; + orc.damage_integer + &quot;, leaving your HP at &quot; + HK.hp_integer + &quot;.&quot;)\n-&gt;-&gt; if (HK.hp_integer &lt;= 0) {\n-&gt;-&gt;-&gt; msg (&quot;You got killed by the orc&quot;)\n-&gt;-&gt;-&gt; msg (&quot;GAME OVER&quot;)\n-&gt;-&gt;-&gt; finish\n-&gt;-&gt; } else {\n-&gt;-&gt;-&gt; orc.hp_integer = orc.hp_integer - HK.damage_integer\n-&gt;-&gt;-&gt; msg (&quot;You attack the orc for &quot; + HK.damage_integer + &quot;, leaving it with only &quot; + orc.hp_integer + &quot; HP left.&quot;)\n-&gt;-&gt;-&gt; if (orc.hp_integer &lt;= 0) {\n-&gt;-&gt;-&gt;-&gt; orc.dead_boolean = true)\n-&gt;-&gt;-&gt;-&gt; msg (&quot;You killed the orc.&quot;)\n-&gt;-&gt;-&gt; }\n-&gt;-&gt; }\n-&gt; } else if (you_go_first_variable = true) {\n-&gt;-&gt; orc.hp_integer = orc.hp_integer - HK.damage_integer\n-&gt;-&gt; msg (&quot;You attack the orc for &quot; + HK.damage_integer + &quot;, leaving it with only &quot; + orc.hp_integer + &quot; HP left.&quot;)\n-&gt;-&gt; if (orc.hp_integer &lt;= 0) {\n-&gt;-&gt;-&gt; orc.dead_boolean = true)\n-&gt;-&gt;-&gt; msg (&quot;You killed the orc.&quot;)\n-&gt;-&gt; } else {\n-&gt;-&gt;-&gt; HK.hp_integer = HK.hp_integer - orc.damage_integer\n-&gt;-&gt;-&gt; msg (&quot;The orc attacks you for &quot; + orc.damage_integer + &quot;, leaving your HP at &quot; + HK.hp_integer + &quot;.&quot;)\n-&gt;-&gt;-&gt; if (HK.hp_integer &lt;= 0) {\n-&gt;-&gt;-&gt;-&gt; msg (&quot;You got killed by the orc&quot;)\n-&gt;-&gt;-&gt;-&gt; msg (&quot;GAME OVER&quot;)\n-&gt;-&gt;-&gt;-&gt; finish\n-&gt;-&gt;-&gt; }\n-&gt;-&gt; }\n-&gt; }\n} else if (orc.dead_boolean = true) {\n-&gt; if (orc.cash_integer &gt; 0) {\n-&gt;-&gt; HK.cash_integer = HK.cash_integer + orc.cash_integer\n-&gt;-&gt; msg (&quot;You loot the orc's dead body for it's bag of gold coins&quot;)\n-&gt; }\n-&gt; if (not orc.equipment_and_item_objectlist = null) {\n-&gt;-&gt; foreach (object_x, orc.equipment_and_item_objectlist) {\n-&gt;-&gt;-&gt; object_x.parent = HK\n-&gt;-&gt; }\n-&gt;-&gt; msg (&quot;You loot the orc's dead body of all its equipment and items.&quot;)\n-&gt; }\n-&gt; if (orc.cash_integer &lt;= 0 and orc.equipment_and_item_objectlist = null) {\n-&gt;-&gt; msg (&quot;The orc is already dead, and there's nothing left on him for you to loot.&quot;)\n-&gt; }\n}",
      "EditableFormat": "bbcode",
      "HTML": "here's some useful links for you to help you out:<br/><br/>(don't be scared of code, as the only two issues with writing code is first knowing how to write it, ie it's structure ~ syntax ~ format ~ pattern, and also in writing precisely... no typos or your code won't work, lol. So, it's not really as scary as it seems, 'troubleshooting' errors when you try to write in code, is merely 'spell and typo checking', hehe. Though, this isn't easy... to find the errors...)<br/><br/>(but, if you just don't like code, or if it is just too confusing for you, quest does have a great GUI~Editor for you, I just don't know it that well, and it takes longer to explain stuff via it, which is just why I personally usually help people with code, as it's faster and easier for me to do so. I can help via using the GUI~Editor, but I need the time to do so, which I don't have much of anymore... sighs)<br/><br/>01. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Main_Page\">http://quest5.net/wiki/Main_Page</a><!-- m --><br/>02. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Tutorial\">http://quest5.net/wiki/Tutorial</a><!-- m --><br/>03. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/How_to\">http://quest5.net/wiki/How_to</a><!-- m --> (guides)<br/>04. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Showing_a_menu\">http://quest5.net/wiki/Showing_a_menu</a><!-- m --><br/>05. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Character_Creation\">http://quest5.net/wiki/Character_Creation</a><!-- m --><br/>06. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)<br/>07. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=Set#mw-pages\">http://quest5.net/w/index.php?title=Cat ... t#mw-pages</a><!-- m --> (page 2, range: S-Z)<br/>08. <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewforum.php?f=18\">viewforum.php?f=18</a><!-- l --> (more guides: libraries and code)<br/>09. (also, look up 'switch' =or= 'case command' in #03 and~or in #06-07)<br/>10. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Object_element\">http://quest5.net/wiki/Object_element</a><!-- m --><br/>11. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ASLX_Elements\">http://quest5.net/wiki/ASLX_Elements</a><!-- m --><br/>12. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:ASLX_Elements\">http://quest5.net/wiki/Category:ASLX_Elements</a><!-- m --><br/>13. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Object_element\">http://quest5.net/wiki/Object_element</a><!-- m --><br/>14. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Attribute_Types\">http://quest5.net/wiki/Attribute_Types</a><!-- m --><br/><br/>from #3 ('how to' link):<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Hs-blockingexit\">http://quest5.net/wiki/Hs-blockingexit</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Hs-lockedexits\">http://quest5.net/wiki/Hs-lockedexits</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Unlockdoor\">http://quest5.net/wiki/Unlockdoor</a><!-- m --><br/><br/>from #2 (the 'tutorial' link):<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_lockable_exits\">http://quest5.net/wiki/Using_lockable_exits</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_lockable_containers\">http://quest5.net/wiki/Using_lockable_containers</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_containers\">http://quest5.net/wiki/Using_containers</a><!-- m --><br/><br/>-------------<br/><br/>in the GUI~Editor (with the drop down menus and buttons, ie not code view writing mode):<br/><br/>I think on your Object (or Exit too), you want to do the container tab (with quest version 550 ~ most recent, you may need to go into I think the 'game' Object, and one of it's tabs has check boxes I think for turning on more various tabs for the Objects ~ you may need to do this to see the container tab, whatever it is called), and I think one of the container type choices is: 'openable ~ closable', this makes your Object a 'door-like' Object. Now, the built in scripts have confused others and me too, but you can set your Object up for being open or closed initially, and then within the script you can open~close the Object, prevent from going through the Object unless it is open, require a 'key' Object to unlock it, and etc...<br/><br/>-------<br/><br/>there's many ways to do what you want with removing your health:<br/><br/>Timers, Turnscripts, and 'monster~enemy' Objects' Verbs' scripts.<br/><br/>the scripting (ie 'run as script -&gt; add a script' in the GUI~Editor) is the same for all of them:<br/><br/>for example:<br/><br/>first, we need a 'dead~alive' Attribute (a boolean, ie a flag):<br/><br/>Object: room<br/>-&gt; 'orc' Object -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;<br/><br/>Object: orc<br/>Attribute Name: dead<br/>Attribute Type: boolean<br/>Attribute Value: false<br/><br/>some coding logic mentality:<br/><br/>dead = false -&gt; conceptually, it is 'alive'<br/>dead = true -&gt; conceptually, it is 'dead'<br/>alive = false -&gt; conceptually, it is 'dead'<br/>alive = true -&gt; conceptually, it is 'alive'<br/><br/>most people use 'dead=false_or_true', instead of 'alive=false_or_true'<br/><br/>think of booleans (ie flags) as like a light switch, ie you can turn it 'on' (ie =true, =on, =yes, =1~binary, = +charge~chemistry~electronics, =etc) and 'off' (ie =false, =off, =no, =0~binary, = -charge~chemistry~electronics, =etc)<br/><br/>though, for specifically quest's Boolean Attribute Type, it uses '=false_or_true'<br/><br/>we initially set our 'orc' as:<br/><br/>orc.dead = false<br/><br/>as we want our orc to be alive, so that we can and have to, kill it, lol.<br/><br/>another example of boolean (flag) usage:<br/><br/>lich.undead_boolean = true<br/>HK.undead_boolean = false<br/>// hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>which we can then script in cool things for:<br/><br/>if (lich.undead = true) {<br/>-&gt; // conceptual pseudo-scripting (I'm lazy): if using holy_damage, then: lich.hp = lich.hp - HK.holy_damage * 2<br/>}<br/><br/>another example of boolean (flag) usage:<br/><br/>HK.running = false // I'm walking right now<br/>HK.running = true // I'm running right now<br/><br/>HK.flying = false // I'm walking right now<br/>HK.flying = true // I'm flying right now<br/><br/>as I think you're seeing... boolean usage unfortunately, gets cumbersome (too many booleans!), very fast...<br/><br/>(for example: status_effects)<br/>HK.poisoned = false<br/>HK.petrified = false<br/>HK.stunned = false<br/>HK.confused = false<br/>HK.silenced = false<br/>HK.asleep = false<br/>HK.cursed = false<br/>HK.blessed = false<br/>HK.miniturized~'moogled' = false<br/>HK.blinded = false<br/>HK.paralyzed = false<br/>etc etc etc<br/><br/>well, there's a way to do the same thing without using 4829472987492837 booleans, but you're probably not ready yet for this (using lists and~or dictionaries), as they're a bit more complicated.<br/><br/>-------<br/><br/>so (in code, sorry, but it's faster than trying to do it via the GUI~editor)... now let's put the rest of it in (making~adding and using Attributes):<br/><br/>Object: orc<br/>Verb: fight (custom~self made)<br/>if (orc.dead = false) {<br/>-&gt; // if the orc is alive, you fight it<br/>-&gt; player.hp = player.hp - orc.damage<br/>-&gt; msg (&quot;The orc attacks you&quot;)<br/>-&gt; if (player.hp &lt;= 0) {<br/>-&gt;-&gt; msg (&quot;The orc has killed you.&quot;)<br/>-&gt;-&gt; msg (&quot;GAME OVER&quot;)<br/>-&gt;-&gt; finish<br/>-&gt; }<br/>-&gt; orc.hp = orc.hp - player.damage<br/>-&gt; msg (&quot;You attack the orc.&quot;)<br/>-&gt; if (orc.hp &lt;= 0) {<br/>-&gt;-&gt; // we tell quest to set ~ re-set the orc as being now dead:<br/>-&gt;-&gt; orc.dead = true<br/>-&gt;-&gt; msg (&quot;You killed the orc! Now it is dead.&quot;)<br/>-&gt; }<br/>// if you were to click on the orc's 'fight' Verb again, after killing it, then you get this response of scripts:<br/>} else if (orc.dead = true) {<br/>-&gt; msg (&quot;The orc is already dead, silly. You have no need to fight the orc's corpse!&quot;)<br/>}<br/><br/>------------<br/><br/>in code, as scripting:<br/><br/>Object_name.Attribute_name = Expression_or_Value<br/>orc.dead = false<br/><br/>in code, as 'tags':<br/><br/>&lt;object name=&quot;room&quot;&gt;<br/>-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>-&gt; &lt;object name=&quot;player&quot;&gt;<br/>-&gt;-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>-&gt;-&gt; &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>-&gt; &lt;/object&gt;<br/>-&gt; &lt;object name=&quot;orc&quot;&gt;<br/>-&gt;-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>-&gt;-&gt; &lt;attr name=&quot;dead&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;<br/>-&gt; &lt;/object&gt;<br/>&lt;/object&gt;<br/><br/>---------------<br/><br/>now, as for the GUI~Editor, these are you two SUPER Scripts:<br/><br/>'if' and 'set a variable or attribute'<br/><br/>which, especially when used together, let's you do pretty much 90% of what you want to do within your game<br/><br/>there's many places to add scripts to: Verbs, Functions, Commands, Turnscripts, Timers, Objects (as Attributes, Attribute Type: Script), and etc.<br/><br/>if:<br/><br/>run as script -&gt; add a script -&gt; scripts -&gt; if -&gt; [EXPRESSION] -&gt; code (write~type) it in: see below<br/><br/>set a variable or an attribute:<br/><br/>run as script -&gt; add a script -&gt; variables -&gt; set a variable or an attribute -&gt;code (write~type) it in: see below<br/><br/>Quest's Terminology:<br/><br/>Variables:<br/>-&gt; An Attribute: Object.Attribute = Value_or_Expression<br/>-&gt; A Variable: Attribute = Value_or_Expression<br/><br/>Attributes, by having (being 'attached' to) the 'Object.', makes it 'savable', an thus 'loadable' (so long as the object still exists), which means that you can use that Attribute anywhere (same concept as with Functions and the 'call function' Script).<br/><br/>Variables (Attribute = Value_or_Expression), however, can only be used within it's own script location. It can't be used within another script elsewhere in the game.<br/><br/>for examples:<br/><br/>game (object) -&gt; Scripts (tab) -&gt; Start Script -&gt; Add a script -&gt; call function: character_creation_function<br/><br/>&lt;function name=&quot;character_creation_function&quot;&gt;<br/>-&gt; msg (&quot;What is your name?&quot;)<br/>-&gt; get input {<br/>-&gt;-&gt; my_name = result<br/>-&gt; }<br/>&lt;/function&gt;<br/><br/>Object: npc<br/>Verb: Chat<br/><br/>msg (&quot;Hi, my name is &quot; + my_name + &quot;.&quot;)<br/>// outputs: ERROR, 'my_name' isn't defined, it has no value given to it yet. my_name = ??? -&gt; null -&gt; ERROR<br/><br/>whereas, by attaching it to an Object (in the GUI~Editor simply Add the Attribute to that Object), Object.Attribute:<br/><br/>game (object) -&gt; Scripts (tab) -&gt; Start Script -&gt; Add a script -&gt; call function: character_creation_function<br/><br/>&lt;function name=&quot;character_creation_function&quot;&gt;<br/>-&gt; msg (&quot;What is your name?&quot;)<br/>-&gt; get input {<br/>-&gt;-&gt; // I, during game play, type in: HK<br/>-&gt;-&gt; player.my_name = result<br/>-&gt; }<br/>&lt;/function&gt;<br/><br/>Object: npc<br/>Verb: Chat<br/><br/>msg (&quot;Hi, my name is &quot; + player.my_name + &quot;.&quot;)<br/>// outputs: Hi, my name is HK.<br/><br/>------------<br/><br/>orc.dead_boolean = false<br/>HK.strength_integer = 100<br/>HK.class_string = &quot;warrior&quot;<br/>HK.damage_double = 53.7<br/>HK.favorite_colors_stringlist = split (&quot;black;red&quot;, &quot;;&quot;)<br/>HK.favorite_color_string = &quot;black&quot;<br/><br/>HK.damage_integer = wooden_sword.damage_integer + wooden_sword.damage_integer * (HK.strength_integer - orc.endurance_integer) / 100<br/><br/>orc.fight_script = (see below)<br/><br/>if (orc.dead = false) {<br/>-&gt; you_go_first_variable = false<br/>-&gt; if (HK.speed_integer &gt; orc.speed_integer) {<br/>-&gt;-&gt; you_go_first_variable = true<br/>-&gt; } else if (HK.speed_integer = orc.speed_integer) {<br/>-&gt;-&gt; if (RandomChance (50) = true) {<br/>-&gt;-&gt;-&gt; you_go_first_variable = true<br/>-&gt;-&gt; }<br/>-&gt; }<br/>-&gt; if (you_go_first_variable = false) {<br/>-&gt;-&gt; HK.hp_integer = HK.hp_integer - orc.damage_integer<br/>-&gt;-&gt; msg (&quot;The orc attacks you for &quot; + orc.damage_integer + &quot;, leaving your HP at &quot; + HK.hp_integer + &quot;.&quot;)<br/>-&gt;-&gt; if (HK.hp_integer &lt;= 0) {<br/>-&gt;-&gt;-&gt; msg (&quot;You got killed by the orc&quot;)<br/>-&gt;-&gt;-&gt; msg (&quot;GAME OVER&quot;)<br/>-&gt;-&gt;-&gt; finish<br/>-&gt;-&gt; } else {<br/>-&gt;-&gt;-&gt; orc.hp_integer = orc.hp_integer - HK.damage_integer<br/>-&gt;-&gt;-&gt; msg (&quot;You attack the orc for &quot; + HK.damage_integer + &quot;, leaving it with only &quot; + orc.hp_integer + &quot; HP left.&quot;)<br/>-&gt;-&gt;-&gt; if (orc.hp_integer &lt;= 0) {<br/>-&gt;-&gt;-&gt;-&gt; orc.dead_boolean = true)<br/>-&gt;-&gt;-&gt;-&gt; msg (&quot;You killed the orc.&quot;)<br/>-&gt;-&gt;-&gt; }<br/>-&gt;-&gt; }<br/>-&gt; } else if (you_go_first_variable = true) {<br/>-&gt;-&gt; orc.hp_integer = orc.hp_integer - HK.damage_integer<br/>-&gt;-&gt; msg (&quot;You attack the orc for &quot; + HK.damage_integer + &quot;, leaving it with only &quot; + orc.hp_integer + &quot; HP left.&quot;)<br/>-&gt;-&gt; if (orc.hp_integer &lt;= 0) {<br/>-&gt;-&gt;-&gt; orc.dead_boolean = true)<br/>-&gt;-&gt;-&gt; msg (&quot;You killed the orc.&quot;)<br/>-&gt;-&gt; } else {<br/>-&gt;-&gt;-&gt; HK.hp_integer = HK.hp_integer - orc.damage_integer<br/>-&gt;-&gt;-&gt; msg (&quot;The orc attacks you for &quot; + orc.damage_integer + &quot;, leaving your HP at &quot; + HK.hp_integer + &quot;.&quot;)<br/>-&gt;-&gt;-&gt; if (HK.hp_integer &lt;= 0) {<br/>-&gt;-&gt;-&gt;-&gt; msg (&quot;You got killed by the orc&quot;)<br/>-&gt;-&gt;-&gt;-&gt; msg (&quot;GAME OVER&quot;)<br/>-&gt;-&gt;-&gt;-&gt; finish<br/>-&gt;-&gt;-&gt; }<br/>-&gt;-&gt; }<br/>-&gt; }<br/>} else if (orc.dead_boolean = true) {<br/>-&gt; if (orc.cash_integer &gt; 0) {<br/>-&gt;-&gt; HK.cash_integer = HK.cash_integer + orc.cash_integer<br/>-&gt;-&gt; msg (&quot;You loot the orc's dead body for it's bag of gold coins&quot;)<br/>-&gt; }<br/>-&gt; if (not orc.equipment_and_item_objectlist = null) {<br/>-&gt;-&gt; foreach (object_x, orc.equipment_and_item_objectlist) {<br/>-&gt;-&gt;-&gt; object_x.parent = HK<br/>-&gt;-&gt; }<br/>-&gt;-&gt; msg (&quot;You loot the orc's dead body of all its equipment and items.&quot;)<br/>-&gt; }<br/>-&gt; if (orc.cash_integer &lt;= 0 and orc.equipment_and_item_objectlist = null) {<br/>-&gt;-&gt; msg (&quot;The orc is already dead, and there's nothing left on him for you to loot.&quot;)<br/>-&gt; }<br/>",
      "PostDate": "2014-06-11T19:52:11+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29095",
      "UserId": 0,
      "Username": "onimike",
      "UserAvatar": null,
      "UserGravatar": "81a1a7d9be523aa5ac1d92fa2660b397",
      "EditableText": "Thank you been reading over and over, got a little bit further just really trying to hash out the mechanics of the game first before I go add  x amount of rooms and objects <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I do have another favor, in game you shall see how I have weapons attack damage setup and my light source (matches). Question is can you possible like suggest a easier way to accomplish these feats without me having to do this to each and every weapon or light source? I think Im suppost to make like a object type = weapons then apply that trait to each weapon just forgot haven't played around with this since 3.5 lol. Thanks again\n\nP.S. Im not afraid of code its just I have been self teaching all this and questions here and there but regardless of code type I.E.(Java, C++, Html) the lay out formats are always different in every program like Java in Quest as Java in Unity its still Java yet the layouts are different such as {}[]&quot;':;&lt;&gt;,./|\\^%()?(Just so many blah) there places and when to use them. As I stated before I can read and understand what a function will do in code but writing it out is totally different then reading it lol",
      "EditableFormat": "bbcode",
      "HTML": "Thank you been reading over and over, got a little bit further just really trying to hash out the mechanics of the game first before I go add  x amount of rooms and objects <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I do have another favor, in game you shall see how I have weapons attack damage setup and my light source (matches). Question is can you possible like suggest a easier way to accomplish these feats without me having to do this to each and every weapon or light source? I think Im suppost to make like a object type = weapons then apply that trait to each weapon just forgot haven't played around with this since 3.5 lol. Thanks again<br/><br/>P.S. Im not afraid of code its just I have been self teaching all this and questions here and there but regardless of code type I.E.(Java, C++, Html) the lay out formats are always different in every program like Java in Quest as Java in Unity its still Java yet the layouts are different such as {}[]&quot;':;&lt;&gt;,./|\\^%()?(Just so many blah) there places and when to use them. As I stated before I can read and understand what a function will do in code but writing it out is totally different then reading it lol<div><a href=\"/attachment/925\">We Walk Among the Dead.aslx</a></div>",
      "PostDate": "2014-06-13T21:37:25+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29097",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Sorry, I haven't looked at your game file yet, I'll see if I can do so with this apple (I'm sure I can) computer, when I got the time.\n\n------------\n\nObject Types (which as 'called upon Attributes' are known as, an example of a built-in Object Type: &lt;inherit name=&quot;editor_object&quot; /&gt;) are merely groups, if you're familiar with this in code terminology.\n\nAdvanced (the left pane; the 'tree of stuff') -&gt; Object Types -&gt; Add -&gt; (set it up)\n\nAn Object Type is merely a 'basket' that can hold~have many 'eggs' (Attributes), if this anology helps.\n\nfor example, instead of doing this:\n\n[code:3vikalrd]&lt;object name=&quot;HK&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;inherit name=&quot;editor_player&quot; /&gt;\n  &lt;attr name=&quot;strength_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;endurance_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;dexterity_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;agility_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;speed_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;luck_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;intelligence_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;spirituality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;mentality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;piety_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;level_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;cash_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;experience_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;orc&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;attr name=&quot;strength_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;endurance_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;dexterity_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;agility_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;speed_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;luck_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;intelligence_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;spirituality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;mentality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;piety_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;level_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;cash_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;experience_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;onimike&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;inherit name=&quot;editor_player&quot; /&gt;\n  &lt;attr name=&quot;strength_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;endurance_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;dexterity_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;agility_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;speed_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;luck_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;intelligence_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;spirituality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;mentality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;piety_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;level_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;cash_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;experience_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n&lt;/object&gt;[/code:3vikalrd]\n\nyou can do this instead:\n\n[code:3vikalrd]&lt;type name=&quot;character_object_type&quot;&gt;\n  &lt;attr name=&quot;strength_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;endurance_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;dexterity_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;agility_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;speed_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;luck_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;intelligence_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;spirituality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;mentality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;piety_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;level_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;cash_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;experience_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n&lt;/type&gt;\n\n&lt;object name=&quot;HK&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;inherit name=&quot;editor_player&quot; /&gt;\n  &lt;inherit name=&quot;character_object_type&quot; /&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;orc&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;inherit name=&quot;character_object_type&quot; /&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;onimike&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;inherit name=&quot;editor_player&quot; /&gt;\n  &lt;inherit name=&quot;character_object_type&quot; /&gt;\n&lt;/object&gt;[/code:3vikalrd]\n\nbut, inherited attributes can *NOT* be changed, UNLESS you write over them (by setting~adding the exact same attribute to that specific Object).\n\nalso, Object Types, can hold other Object Types too (all of the held attributes of all the Object Types will be added to that Object).\n\n---------\n\nwhile quest is it's own code, it uses pretty much the same structure as 'XML' (eXtensible Markup Language), so if you want to use and~or see it better, you can download this free program:\n\nnotepad++\n\nand when running the program, at the top bar, under languages, choose 'XML'.\n\n--------------\n\nquest's code structure (nearly same as XML ~ I think, as you know code better than I, as I don't know any code languages, the only other one I've been trying, is merely the command prompt on PC computers), is quite noobie-friendly (as I can attest, lol), using very few of all those symbols~characters that the other languages use (argh~lol):\n\nthe NAME Attribute (Object.name = blah) (&lt;Element name=&quot;blah&quot;&gt;) is your 'ID' Attribute for everything, so no 2 can be the same.\n\n' &lt;____&gt;' is the beginning\n\n' &lt;/___&gt; ' is the ending\n\nyou got the Element Tags:\n\n&lt;asl version=&quot;550&quot;&gt;&lt;/asl&gt; is the entire game (the game file ~ everything is within these tags)\n&lt;library&gt;&lt;/library is used, instead of the &lt;asl version=&quot;550&quot;&gt;&lt;/als&gt;, if you want to make a Library File\n&lt;game name=&quot;blah&quot;&gt;&lt;/game&gt; is your Game Object (holds the game info+settings~options+etc Attributes)\n&lt;object name=&quot;blah&quot;&gt;&lt;/object&gt; Objects hold Attributes and~or other Objects\n&lt;function name=&quot;blah&quot;&gt;&lt;/function&gt; are (or holds) scripts and Functions, with the use of parameters, and the ease of looping it\n&lt;verb name=&quot;blah&quot;&gt;&lt;/verb&gt; sub-Commands for specific objects, uses buttons and hyperlinks, not typed-in inputs\n&lt;command name=&quot;blah&quot;&gt;&lt;/command&gt; allows for typed-in inputs, are (or holds) scripts and functions, and parameters' scripting utility too\n&lt;turnscript name=&quot;blah&quot;&gt;&lt;/turnscript&gt; an always*(when it's enabled~activated and~or you're in the same room as it if it's not a global turnscript) running Function\n&lt;timer name=&quot;blah&quot;&gt;&lt;/timer&gt; same as a turnscript, but using real time ticking\n&lt;attr name=&quot;blah&quot;&gt;&lt;/attr&gt; your attributes\n&lt;type name=&quot;blah&quot;&gt;&lt;/type&gt; holds attributes and~or other Object Types\netc etc etc\n\nScripting:\n\n' { ' the beginning of your nested scripts\n' } ' the ending of your nested scripts\n\nbut your initial scripts don't need any beginning+ending characters~symbols\n\nanything encased by quatation marks, are strings~text:\n\nHK.favorite_color = &quot;black&quot;\nmsg (&quot;Hi, my name is &quot; + player.alias)\n\nno quatation marks, for alphabet characters means that it's an Object\n\nno quatation marks, for numeral characters means that it's an Integer or a Double (Float~Floating Point~Decimal Number)\n\nand other special built-in things too: Object.Attribute=[u:3vikalrd]false[/u:3vikalrd] (boolean), Object.Attribute=[u:3vikalrd]true[/u:3vikalrd] (boolean), this is hidden, done automatically and unseen by internal quest core coding: [u:3vikalrd]result[/u:3vikalrd]=Value_or_Expression ('get input' and 'show menu'), and etc...\n\nso:\n\nvalue_x = &quot;1&quot; // Attribute Type: String\nvalue_x = 1 // Attribute Type: Integer (int)\nvalue_x = &quot;apple&quot; // Attribute Type: String\nvalue_x = apple // Attribute Type: Object // ie, it's an Object\n\nObject.Attribute = Value_or_Expression\n\nHorizontal:\nif (Object.Attribute = Value_or_Expression) { your scripts } else if { your scripts } else { your scripts }\n\nVertical:\n[code:3vikalrd]if (Object&#46;Attribute = Value_or_Expression) {\n  // scripts\n} else if (Object&#46;Attribute = Value_or_Expression) {\n  // scripts\n} else {\n  // scripts\n}[/code:3vikalrd]\n\nmsg (&quot;blah&quot;)\nmsg (&quot;blah&quot; + Object.Attribute)\n\n------------\n\nthese should help you more quickly learn quest's coding structure~format~syntax~patterns:\n\n01. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)\n02. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=Set#mw-pages\">http://quest5.net/w/index.php?title=Cat ... t#mw-pages</a><!-- m --> (page 2, range: S-Z)\n03. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:ASLX_Elements\">http://quest5.net/wiki/Category:ASLX_Elements</a><!-- m -->\n04. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ASLX_Elements\">http://quest5.net/wiki/ASLX_Elements</a><!-- m -->\n05. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Object_element\">http://quest5.net/wiki/Object_element</a><!-- m -->\n06. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Attribute_Types\">http://quest5.net/wiki/Attribute_Types</a><!-- m -->",
      "EditableFormat": "bbcode",
      "HTML": "Sorry, I haven't looked at your game file yet, I'll see if I can do so with this apple (I'm sure I can) computer, when I got the time.<br/><br/>------------<br/><br/>Object Types (which as 'called upon Attributes' are known as, an example of a built-in Object Type: &lt;inherit name=&quot;editor_object&quot; /&gt;) are merely groups, if you're familiar with this in code terminology.<br/><br/>Advanced (the left pane; the 'tree of stuff') -&gt; Object Types -&gt; Add -&gt; (set it up)<br/><br/>An Object Type is merely a 'basket' that can hold~have many 'eggs' (Attributes), if this anology helps.<br/><br/>for example, instead of doing this:<br/><br/><pre><code>&lt;object name=&quot;HK&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>  &lt;attr name=&quot;strength_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;endurance_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;dexterity_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;agility_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;speed_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;luck_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;intelligence_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;spirituality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;mentality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;piety_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;level_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;cash_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;experience_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;orc&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;attr name=&quot;strength_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;endurance_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;dexterity_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;agility_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;speed_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;luck_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;intelligence_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;spirituality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;mentality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;piety_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;level_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;cash_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;experience_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;onimike&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>  &lt;attr name=&quot;strength_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;endurance_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;dexterity_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;agility_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;speed_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;luck_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;intelligence_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;spirituality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;mentality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;piety_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;level_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;cash_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;experience_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>you can do this instead:<br/><br/><pre><code>&lt;type name=&quot;character_object_type&quot;&gt;<br/>  &lt;attr name=&quot;strength_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;endurance_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;dexterity_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;agility_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;speed_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;luck_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;intelligence_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;spirituality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;mentality_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;piety_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;level_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;cash_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;experience_integer&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>&lt;/type&gt;<br/><br/>&lt;object name=&quot;HK&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>  &lt;inherit name=&quot;character_object_type&quot; /&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;orc&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;inherit name=&quot;character_object_type&quot; /&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;onimike&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>  &lt;inherit name=&quot;character_object_type&quot; /&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>but, inherited attributes can *NOT* be changed, UNLESS you write over them (by setting~adding the exact same attribute to that specific Object).<br/><br/>also, Object Types, can hold other Object Types too (all of the held attributes of all the Object Types will be added to that Object).<br/><br/>---------<br/><br/>while quest is it's own code, it uses pretty much the same structure as 'XML' (eXtensible Markup Language), so if you want to use and~or see it better, you can download this free program:<br/><br/>notepad++<br/><br/>and when running the program, at the top bar, under languages, choose 'XML'.<br/><br/>--------------<br/><br/>quest's code structure (nearly same as XML ~ I think, as you know code better than I, as I don't know any code languages, the only other one I've been trying, is merely the command prompt on PC computers), is quite noobie-friendly (as I can attest, lol), using very few of all those symbols~characters that the other languages use (argh~lol):<br/><br/>the NAME Attribute (Object.name = blah) (&lt;Element name=&quot;blah&quot;&gt;) is your 'ID' Attribute for everything, so no 2 can be the same.<br/><br/>' &lt;____&gt;' is the beginning<br/><br/>' &lt;/___&gt; ' is the ending<br/><br/>you got the Element Tags:<br/><br/>&lt;asl version=&quot;550&quot;&gt;&lt;/asl&gt; is the entire game (the game file ~ everything is within these tags)<br/>&lt;library&gt;&lt;/library is used, instead of the &lt;asl version=&quot;550&quot;&gt;&lt;/als&gt;, if you want to make a Library File<br/>&lt;game name=&quot;blah&quot;&gt;&lt;/game&gt; is your Game Object (holds the game info+settings~options+etc Attributes)<br/>&lt;object name=&quot;blah&quot;&gt;&lt;/object&gt; Objects hold Attributes and~or other Objects<br/>&lt;function name=&quot;blah&quot;&gt;&lt;/function&gt; are (or holds) scripts and Functions, with the use of parameters, and the ease of looping it<br/>&lt;verb name=&quot;blah&quot;&gt;&lt;/verb&gt; sub-Commands for specific objects, uses buttons and hyperlinks, not typed-in inputs<br/>&lt;command name=&quot;blah&quot;&gt;&lt;/command&gt; allows for typed-in inputs, are (or holds) scripts and functions, and parameters' scripting utility too<br/>&lt;turnscript name=&quot;blah&quot;&gt;&lt;/turnscript&gt; an always*(when it's enabled~activated and~or you're in the same room as it if it's not a global turnscript) running Function<br/>&lt;timer name=&quot;blah&quot;&gt;&lt;/timer&gt; same as a turnscript, but using real time ticking<br/>&lt;attr name=&quot;blah&quot;&gt;&lt;/attr&gt; your attributes<br/>&lt;type name=&quot;blah&quot;&gt;&lt;/type&gt; holds attributes and~or other Object Types<br/>etc etc etc<br/><br/>Scripting:<br/><br/>' { ' the beginning of your nested scripts<br/>' } ' the ending of your nested scripts<br/><br/>but your initial scripts don't need any beginning+ending characters~symbols<br/><br/>anything encased by quatation marks, are strings~text:<br/><br/>HK.favorite_color = &quot;black&quot;<br/>msg (&quot;Hi, my name is &quot; + player.alias)<br/><br/>no quatation marks, for alphabet characters means that it's an Object<br/><br/>no quatation marks, for numeral characters means that it's an Integer or a Double (Float~Floating Point~Decimal Number)<br/><br/>and other special built-in things too: Object.Attribute=<span style=\"text-decoration:underline;\">false</span> (boolean), Object.Attribute=<span style=\"text-decoration:underline;\">true</span> (boolean), this is hidden, done automatically and unseen by internal quest core coding: <span style=\"text-decoration:underline;\">result</span>=Value_or_Expression ('get input' and 'show menu'), and etc...<br/><br/>so:<br/><br/>value_x = &quot;1&quot; // Attribute Type: String<br/>value_x = 1 // Attribute Type: Integer (int)<br/>value_x = &quot;apple&quot; // Attribute Type: String<br/>value_x = apple // Attribute Type: Object // ie, it's an Object<br/><br/>Object.Attribute = Value_or_Expression<br/><br/>Horizontal:<br/>if (Object.Attribute = Value_or_Expression) { your scripts } else if { your scripts } else { your scripts }<br/><br/>Vertical:<br/><pre><code>if (Object&#46;Attribute = Value_or_Expression) {<br/>  // scripts<br/>} else if (Object&#46;Attribute = Value_or_Expression) {<br/>  // scripts<br/>} else {<br/>  // scripts<br/>}</code></pre><br/><br/>msg (&quot;blah&quot;)<br/>msg (&quot;blah&quot; + Object.Attribute)<br/><br/>------------<br/><br/>these should help you more quickly learn quest's coding structure~format~syntax~patterns:<br/><br/>01. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)<br/>02. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=Set#mw-pages\">http://quest5.net/w/index.php?title=Cat ... t#mw-pages</a><!-- m --> (page 2, range: S-Z)<br/>03. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:ASLX_Elements\">http://quest5.net/wiki/Category:ASLX_Elements</a><!-- m --><br/>04. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ASLX_Elements\">http://quest5.net/wiki/ASLX_Elements</a><!-- m --><br/>05. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Object_element\">http://quest5.net/wiki/Object_element</a><!-- m --><br/>06. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Attribute_Types\">http://quest5.net/wiki/Attribute_Types</a><!-- m -->",
      "PostDate": "2014-06-14T04:42:56+01:00",
      "LastEditDate": null
    }
  ]
}
