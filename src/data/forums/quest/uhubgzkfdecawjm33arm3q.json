{
  "Topic": {
    "TopicId": "uhubgzkfdecawjm33arm3q",
    "ForumId": "10",
    "Title": "Accessibility in Quest",
    "LastUpdated": "2017-06-16T05:22:57.8304146Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "093d8cab-cea8-4208-a5c3-a58860058e20",
      "UserId": 312012,
      "Username": "psycheman",
      "AvatarUrl": "https://secure.gravatar.com/avatar/fcc1822b815d17c7e0209df7ef2363c8?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey there,\r\nThe desktop version of Quest seems to be very temperamental with screen reading software used by the blind.\r\nI see that there is at least a potential to interface directly with one screen reader, called JAWS from Freedom Scientific.\r\nDue to several logistical reasons many people are now switching to a free and open source alternative called NVDA (http://www.nvaccess.org).\r\nA while back I submitted a C# wrapper for the NVDA Controller API so that it could be inserted straight into Quest, however I don't yet see that in use.\r\nHaving said that, there are several libraries now which have support for, and automatically detect, any and all major screen readers available for Windows today, including Hal, JAWS, System Access, WindowEyes (now defunct), NVDA, and of course SAPI5 itself. Rather than using one particular API, or several separate API wrappers, I would suggest taking a look at the following:\r\nhttps://davykager.com/projects/tolk/\r\nhttps://github.com/qtnc/universalspeech\r\nI would really like to see Quest Desktop becoming more accessible, as many blind people love to both create and play text adventures and gamebooks, and with Quest's extras such as timers, sounds etc it could even become the basis of an audio-game engine, which many blind people in the community have been waiting on for years.\r\nThanks.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey there,<br>\nThe desktop version of Quest seems to be very temperamental with screen reading software used by the blind.<br>\nI see that there is at least a potential to interface directly with one screen reader, called JAWS from Freedom Scientific.<br>\nDue to several logistical reasons many people are now switching to a free and open source alternative called NVDA (http://www.nvaccess.org).<br>\nA while back I submitted a C# wrapper for the NVDA Controller API so that it could be inserted straight into Quest, however I don't yet see that in use.<br>\nHaving said that, there are several libraries now which have support for, and automatically detect, any and all major screen readers available for Windows today, including Hal, JAWS, System Access, WindowEyes (now defunct), NVDA, and of course SAPI5 itself. Rather than using one particular API, or several separate API wrappers, I would suggest taking a look at the following:<br>\nhttps://davykager.com/projects/tolk/<br>\nhttps://github.com/qtnc/universalspeech<br>\nI would really like to see Quest Desktop becoming more accessible, as many blind people love to both create and play text adventures and gamebooks, and with Quest's extras such as timers, sounds etc it could even become the basis of an audio-game engine, which many blind people in the community have been waiting on for years.<br>\nThanks.</p>\n\n",
      "PostDate": "2017-06-16T05:22:57.8304146Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f66fbfec-be0b-4126-9c66-69b9b5ce70c2",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "As you may be aware, I took over looking after Quest at the start of the year, and to be honest my coding skills in C# are not up to the yet. I certainly hope they will be eventually, and I would love to make Quest more accessible, but it may not be soon.\r\n\r\nWhere did you submit your C# wrapper? I do not think I have seen it. I would be happy to look at it and see how far I get. Or if there is any other help you can offer...",
      "EditableFormat": "markdown",
      "HTML": "<p>As you may be aware, I took over looking after Quest at the start of the year, and to be honest my coding skills in C# are not up to the yet. I certainly hope they will be eventually, and I would love to make Quest more accessible, but it may not be soon.</p>\n<p>Where did you submit your C# wrapper? I do not think I have seen it. I would be happy to look at it and see how far I get. Or if there is any other help you can offer...</p>\n\n",
      "PostDate": "2017-06-16T06:58:48.3519601Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "243cabf1-c6c8-4294-a5ed-6573081babc0",
      "UserId": 312012,
      "Username": "psycheman",
      "AvatarUrl": "https://secure.gravatar.com/avatar/fcc1822b815d17c7e0209df7ef2363c8?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi,\r\nAh. Wasn't sure when the changeover took place. I submitted it directly to Alex Warren and since it hasn't been incorporated into Quest it may not be readily available.\r\nI'm not the best C# developer myself, but I have dabbled in C++ and Python so shouldn't be too hard for me to learn. Plus I was able to take the JAWS API and change the functions to comply with the NVDA API.\r\nI would love to assist with the development and accessibility side of things. I have VS but again due to accessibility I tend to use the command line compilers, for C# that would be csc.exe - not sure how well Quest's configuration would work with that.\r\nLet me know what you need and I'll try and dig it up. It may be that the API libraries work directly with C#, it may be that I need to rewrite them. Either way it would be great to be able to help with this.\r\nCheers.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi,<br>\nAh. Wasn't sure when the changeover took place. I submitted it directly to Alex Warren and since it hasn't been incorporated into Quest it may not be readily available.<br>\nI'm not the best C# developer myself, but I have dabbled in C++ and Python so shouldn't be too hard for me to learn. Plus I was able to take the JAWS API and change the functions to comply with the NVDA API.<br>\nI would love to assist with the development and accessibility side of things. I have VS but again due to accessibility I tend to use the command line compilers, for C# that would be csc.exe - not sure how well Quest's configuration would work with that.<br>\nLet me know what you need and I'll try and dig it up. It may be that the API libraries work directly with C#, it may be that I need to rewrite them. Either way it would be great to be able to help with this.<br>\nCheers.</p>\n\n",
      "PostDate": "2017-06-16T20:12:22.6028724Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "10a75478-e7d9-4f15-98d3-bf60a3d4af37",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "To be honest, it is not so much the C# (which is like Java, which I have used, albeit years ago) as the .Net environment.\r\n\r\nTake a look at the project on Github:\r\nhttps://github.com/textadventures/quest\r\n\r\nIt seems tightly bound to VS to me (but I am not expert). I was pleased when I got it to run from Visual Studio at all. This is how I did it.\r\nhttps://github.com/ThePix/quest/wiki/Quest-Source-Code\r\n\r\nI cannot see it happening in the next version of Quest, which I am hoping will be out very soon, but I do hope to get to grips with the C# more for the next one. Perhaps between us we can do it. If you want to send me your NVDA wrapper, I will PM you my e-mail.",
      "EditableFormat": "markdown",
      "HTML": "<p>To be honest, it is not so much the C# (which is like Java, which I have used, albeit years ago) as the .Net environment.</p>\n<p>Take a look at the project on Github:<br>\nhttps://github.com/textadventures/quest</p>\n<p>It seems tightly bound to VS to me (but I am not expert). I was pleased when I got it to run from Visual Studio at all. This is how I did it.<br>\nhttps://github.com/ThePix/quest/wiki/Quest-Source-Code</p>\n<p>I cannot see it happening in the next version of Quest, which I am hoping will be out very soon, but I do hope to get to grips with the C# more for the next one. Perhaps between us we can do it. If you want to send me your NVDA wrapper, I will PM you my e-mail.</p>\n\n",
      "PostDate": "2017-06-16T20:44:38.4859503Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
