{
  "Topic": {
    "TopicId": "3882",
    "ForumId": "10",
    "Title": "how to work libraries?",
    "LastUpdated": "2013-08-24T05:11:14+01:00",
    "ReplyCount": 3
  },
  "Posts": [
    {
      "PostId": "25981",
      "UserId": 0,
      "Username": "onimike",
      "UserAvatar": null,
      "UserGravatar": "81a1a7d9be523aa5ac1d92fa2660b397",
      "EditableText": "hey all,\nI recently figured out how to input libraries into a game but the problem is the functions they run do not show up and I can't find them so its like adding a blank library what do I do? Please help\n[code:10k42xco]&lt;!--Saved by Quest 5&#46;4&#46;4873&#46;16527--&gt;\n&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Clock_Lib&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Journal_lib&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Shopping_lib&#46;aslx&quot; /&gt;\n  &lt;template name=&quot;Learn&quot;&gt;learn&lt;/template&gt;\n  &lt;template name=&quot;Cast&quot;&gt;cast&lt;/template&gt;\n  &lt;template name=&quot;LookDead&quot;&gt;Oh, and it is dead&#46;&lt;/template&gt;\n  &lt;template name=&quot;SpellAlreadyKnown&quot;&gt;Er, you already know that one!&lt;/template&gt;\n  &lt;template name=&quot;SpellNotKnown&quot;&gt;Er, you don't know that one!&lt;/template&gt;\n  &lt;template name=&quot;NoMonstersPresent&quot;&gt;No monsters present&lt;/template&gt;\n  &lt;dynamictemplate name=&quot;SpellEnds&quot;&gt;&lt;!&#91;CDATA&#91;&quot;The &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt; spell ends&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;\n  &lt;dynamictemplate name=&quot;SpellCast&quot;&gt;&lt;!&#91;CDATA&#91;&quot;You cast &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt;&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;\n  &lt;dynamictemplate name=&quot;SpellLearnt&quot;&gt;&lt;!&#91;CDATA&#91;&quot;In a process that seems at once unfathomable, and yet familiar, the spell fades away, and you realise you are now able to cast the &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt; spell&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;\n  &lt;game name=&quot;defender&quot;&gt;\n    &lt;gameid&gt;d153b745-24d8-4ed4-bfae-dd4f85b72cda&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;verb&gt;\n    &lt;property&gt;learn&lt;/property&gt;\n    &lt;pattern&gt;learn&lt;/pattern&gt;\n    &lt;defaultexpression&gt;&quot;You can't learn &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;verb&gt;\n    &lt;property&gt;cast&lt;/property&gt;\n    &lt;pattern&gt;cast&lt;/pattern&gt;\n    &lt;defaultexpression&gt;&quot;You can't cast &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;verb&gt;\n    &lt;property&gt;attack&lt;/property&gt;\n    &lt;pattern&gt;attack;fight;strike;kill&lt;/pattern&gt;\n    &lt;defaultexpression&gt;&quot;You can't attack &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;verb&gt;\n    &lt;property&gt;equip&lt;/property&gt;\n    &lt;pattern&gt;equip;draw&lt;/pattern&gt;\n    &lt;defaultexpression&gt;&quot;You can't draw &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;verb&gt;\n    &lt;property&gt;unequip&lt;/property&gt;\n    &lt;pattern&gt;unequip;sheathe&lt;/pattern&gt;\n    &lt;defaultexpression&gt;&quot;You can't sheathe &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;turnscript name=&quot;attacktheplayerturnscript&quot;&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      foreach (attacker, element_struct&#46;attackers) {\n        do (attacker, &quot;attackplayer&quot;)\n      }\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;object name=&quot;element_struct&quot;&gt;\n    &lt;elements type=&quot;stringlist&quot;&gt;\n      &lt;value&gt;fire&lt;/value&gt;\n      &lt;value&gt;frost&lt;/value&gt;\n      &lt;value&gt;storm&lt;/value&gt;\n      &lt;value&gt;earthmight&lt;/value&gt;\n      &lt;value&gt;shadow&lt;/value&gt;\n      &lt;value&gt;rainbow&lt;/value&gt;\n      &lt;value&gt;divine&lt;/value&gt;\n      &lt;value&gt;necrotic&lt;/value&gt;\n    &lt;/elements&gt;\n    &lt;opposedelements type=&quot;stringdictionary&quot;&gt;\n      &lt;item&gt;\n        &lt;key&gt;fire&lt;/key&gt;\n        &lt;value&gt;frost&lt;/value&gt;\n      &lt;/item&gt;\n      &lt;item&gt;\n        &lt;key&gt;frost&lt;/key&gt;\n        &lt;value&gt;fire&lt;/value&gt;\n      &lt;/item&gt;\n      &lt;item&gt;\n        &lt;key&gt;storm&lt;/key&gt;\n        &lt;value&gt;earthmight&lt;/value&gt;\n      &lt;/item&gt;\n      &lt;item&gt;\n        &lt;key&gt;earthmight&lt;/key&gt;\n        &lt;value&gt;storm&lt;/value&gt;\n      &lt;/item&gt;\n      &lt;item&gt;\n        &lt;key&gt;shadow&lt;/key&gt;\n        &lt;value&gt;rainbow&lt;/value&gt;\n      &lt;/item&gt;\n      &lt;item&gt;\n        &lt;key&gt;rainbow&lt;/key&gt;\n        &lt;value&gt;shadow&lt;/value&gt;\n      &lt;/item&gt;\n      &lt;item&gt;\n        &lt;key&gt;divine&lt;/key&gt;\n        &lt;value&gt;necrotic&lt;/value&gt;\n      &lt;/item&gt;\n      &lt;item&gt;\n        &lt;key&gt;necrotic&lt;/key&gt;\n        &lt;value&gt;divine&lt;/value&gt;\n      &lt;/item&gt;\n    &lt;/opposedelements&gt;\n    &lt;attackers type=&quot;objectlist&quot;&gt;&lt;/attackers&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;fists&quot;&gt;\n    &lt;inherit name=&quot;weapon&quot; /&gt;\n    &lt;alias&gt;fist&lt;/alias&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;type name=&quot;spell&quot;&gt;\n    &lt;displayverbs type=&quot;stringlist&quot;&gt;\n      &lt;value&gt;Learn&lt;/value&gt;\n    &lt;/displayverbs&gt;\n    &lt;inventoryverbs type=&quot;stringlist&quot;&gt;\n      &lt;value&gt;Learn&lt;/value&gt;\n    &lt;/inventoryverbs&gt;\n    &lt;drop type=&quot;boolean&quot;&gt;false&lt;/drop&gt;\n    &lt;take type=&quot;boolean&quot;&gt;false&lt;/take&gt;\n    &lt;usedefaultprefix type=&quot;boolean&quot;&gt;false&lt;/usedefaultprefix&gt;\n    &lt;learn type=&quot;script&quot;&gt;\n      if (not this&#46;parent = game&#46;pov) {\n        this&#46;parent = game&#46;pov\n        this&#46;inventoryverbs = Split (&quot;Cast&quot;, &quot; &quot;)\n        msg (DynamicTemplate(&quot;SpellLearnt&quot;, this))\n      }\n      else {\n        msg (&quot;Er, you already know that one!&quot;)\n      }\n    &lt;/learn&gt;\n  &lt;/type&gt;\n  &lt;type name=&quot;attackspell&quot;&gt;\n    &lt;inherit name=&quot;spell&quot; /&gt;\n    &lt;cast type=&quot;script&quot;&gt;\n      // Check the player has the spell\n      // If so iterate through all objects in the room\n      // Apply attack to those with the monster type that are not dead\n      if (this&#46;parent = game&#46;pov) {\n        DescribeCast (this)\n        flag = False\n        foreach (obj, ScopeVisibleNotHeld ()) {\n          if (DoesInherit (obj, &quot;monster&quot;) and not GetBoolean (obj, &quot;dead&quot;)) {\n            SpellAttackMonster (obj, this)\n            flag = True\n          }\n        }\n        if (not flag) {\n          msg (&quot;&#46;&#46;&#46; No monsters present&quot;)\n        }\n        CancelSpell\n      }\n      else {\n        msg (&quot;Er, you don't know that one!&quot;)\n      }\n    &lt;/cast&gt;\n  &lt;/type&gt;\n  &lt;type name=&quot;nonattackspell&quot;&gt;\n    &lt;inherit name=&quot;spell&quot; /&gt;\n    &lt;cast type=&quot;script&quot;&gt;\n      if (this&#46;parent = game&#46;pov) {\n        DescribeCast (this)\n        do (this, &quot;spelleffect&quot;)\n        CancelSpell\n      }\n      else {\n        msg (&quot;Er, you don't know that one!&quot;)\n      }\n    &lt;/cast&gt;\n  &lt;/type&gt;\n  &lt;type name=&quot;lastingspell&quot;&gt;\n    &lt;inherit name=&quot;spell&quot; /&gt;\n    &lt;cast type=&quot;script&quot;&gt;\n      if (this&#46;parent = game&#46;pov) {\n        DescribeCast (this)\n        do (this, &quot;spelleffect&quot;)\n        CancelSpell\n        game&#46;pov&#46;currentspell = this\n        game&#46;pov&#46;status = this&#46;status\n      }\n      else {\n        msg (&quot;Er, you don't know that one!&quot;)\n      }\n    &lt;/cast&gt;\n  &lt;/type&gt;\n  &lt;type name=&quot;weapon&quot;&gt;\n    &lt;attackbonus type=&quot;int&quot;&gt;0&lt;/attackbonus&gt;\n    &lt;damagebonus type=&quot;int&quot;&gt;0&lt;/damagebonus&gt;\n    &lt;damagedicenumber type=&quot;int&quot;&gt;1&lt;/damagedicenumber&gt;\n    &lt;damagedicesides type=&quot;int&quot;&gt;4&lt;/damagedicesides&gt;\n    &lt;take /&gt;\n    &lt;inventoryverbs type=&quot;stringlist&quot;&gt;\n      &lt;value&gt;Look at&lt;/value&gt;\n      &lt;value&gt;Drop&lt;/value&gt;\n      &lt;value&gt;Equip&lt;/value&gt;\n    &lt;/inventoryverbs&gt;\n    &lt;equip type=&quot;script&quot;&gt;\n      if (this&#46;parent = game&#46;pov) {\n        if (not game&#46;pov&#46;equipped = fists and not game&#46;pov&#46;equipped = null) {\n          msg (&quot;You put away your &quot; + game&#46;pov&#46;equipped&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)\n        }\n        else {\n          msg (&quot;You draw your &quot; + this&#46;alias + &quot;&#46;&quot;)\n        }\n        game&#46;pov&#46;equipped = this\n        this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)\n        game&#46;pov&#46;equippedstatus = &quot;Wielding&#58; &quot; + this&#46;alias\n      }\n      else {\n        msg (&quot;You don't have it&#46;&quot;)\n      }\n    &lt;/equip&gt;\n    &lt;unequip type=&quot;script&quot;&gt;\n      if (this&#46;parent = game&#46;pov) {\n        msg (&quot;You put away your &quot; + game&#46;pov&#46;equipped&#46;alias + &quot;&#46;&quot;)\n        game&#46;pov&#46;equipped = fists\n        this&#46;inventoryverbs = Split (&quot;Look at;Drop;Equip&quot;, &quot;;&quot;)\n        game&#46;pov&#46;equippedstatus = &quot;Wielding&#58; nothing&quot;\n      }\n      else {\n        msg (&quot;You don't have it&#46;&quot;)\n      }\n    &lt;/unequip&gt;\n  &lt;/type&gt;\n  &lt;type name=&quot;fire_type&quot; /&gt;\n  &lt;type name=&quot;frost_type&quot; /&gt;\n  &lt;type name=&quot;storm_type&quot; /&gt;\n  &lt;type name=&quot;earthmight_type&quot; /&gt;\n  &lt;type name=&quot;shadow_type&quot; /&gt;\n  &lt;type name=&quot;rainbow_type&quot; /&gt;\n  &lt;type name=&quot;divine_type&quot; /&gt;\n  &lt;type name=&quot;necrotic_type&quot; /&gt;\n  &lt;type name=&quot;monster&quot;&gt;\n    &lt;inherit name=&quot;weapon&quot; /&gt;\n    &lt;defence type=&quot;int&quot;&gt;0&lt;/defence&gt;\n    &lt;armour type=&quot;int&quot;&gt;0&lt;/armour&gt;\n    &lt;hitpoints type=&quot;int&quot;&gt;10&lt;/hitpoints&gt;\n    &lt;take type=&quot;boolean&quot;&gt;false&lt;/take&gt;\n    &lt;displayverbs type=&quot;stringlist&quot;&gt;\n      &lt;value&gt;Look at&lt;/value&gt;\n      &lt;value&gt;Attack&lt;/value&gt;\n    &lt;/displayverbs&gt;\n    &lt;makedead type=&quot;script&quot;&gt;\n      if (not GetBoolean (this, &quot;dead&quot;)) {\n        this&#46;alias = this&#46;alias + &quot; (dead)&quot;\n        if (HasString (this, &quot;lookwhendead&quot;)) {\n          monster&#46;look = this&#46;lookwhendead\n        }\n        else {\n          this&#46;look = this&#46;look + &quot; Oh, and it is dead&#46;&quot;\n        }\n        this&#46;dead = True\n        list remove (element_struct&#46;attackers, this)\n      }\n    &lt;/makedead&gt;\n    &lt;attack type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n      if (not HasAttribute (game&#46;pov, &quot;equipped&quot;)) {\n        game&#46;pov&#46;equipped = fists\n      }\n      do (this, &quot;settoattack&quot;)\n      attackroll = GetRandomInt (1, 20) - this&#46;defence + game&#46;pov&#46;attack\n      attackroll = attackroll + game&#46;pov&#46;equipped&#46;attackbonus\n      if (attackroll &gt; 10) {\n        damage = game&#46;pov&#46;equipped&#46;damagebonus\n        for (i, 1, game&#46;pov&#46;equipped&#46;damagedicenumber) {\n          damage = damage + GetRandomInt (1, game&#46;pov&#46;equipped&#46;damagedicesides) - this&#46;armour\n        }\n        this&#46;hitpoints = this&#46;hitpoints - damage\n        if (this&#46;hitpoints &gt; 0) {\n          msg (&quot;You swing &quot; + game&#46;pov&#46;equipped&#46;alias + &quot; and hit, doing &quot; + damage + &quot; points of damage; &quot; + this&#46;hurt)\n        }\n        else {\n          msg (&quot;You swing your &quot; + game&#46;pov&#46;equipped&#46;alias + &quot; and hit, doing &quot; + damage + &quot; points of damage; &quot; + this&#46;death)\n          do (this, &quot;makedead&quot;)\n        }\n      }\n      else {\n        msg (&quot;You swing your &quot; + game&#46;pov&#46;equipped&#46;alias + &quot; and miss&#46;&quot;)\n      }\n    &#93;&#93;&gt;&lt;/attack&gt;\n    &lt;attackplayer type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n      attackroll = GetRandomInt (1, 20) - game&#46;pov&#46;defence + this&#46;attackbonus\n      if (attackroll &gt; 10) {\n        damage = this&#46;damagebonus\n        for (i, 1, this&#46;damagedicenumber) {\n          damage = damage + GetRandomInt (1, this&#46;damagedicesides) - game&#46;pov&#46;armour\n        }\n        game&#46;pov&#46;hitpoints = game&#46;pov&#46;hitpoints - damage\n        msg (this&#46;alias + &quot; swings at you and hits, doing &quot; + damage + &quot; points of damage&#46;&quot;)\n        if (this&#46;hitpoints &lt;= 0) {\n          msg (&quot;You are dead!&quot;)\n          finish\n        }\n      }\n      else {\n        msg (this&#46;alias + &quot; swings at you and misses&#46;&quot;)\n      }\n    &#93;&#93;&gt;&lt;/attackplayer&gt;\n    &lt;settoattack type=&quot;script&quot;&gt;\n      if (not ListContains (element_struct&#46;attackers, this) and not GetBoolean (this, &quot;dead&quot;)) {\n        list add (element_struct&#46;attackers, this)\n      }\n    &lt;/settoattack&gt;\n  &lt;/type&gt;\n  &lt;type name=&quot;monsterarcher&quot;&gt;\n    &lt;inherit name=&quot;monster&quot; /&gt;\n    &lt;attackplayer type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n      attackroll = GetRandomInt (1, 20) - game&#46;pov&#46;defence + this&#46;attackbonus\n      if (attackroll &gt; 10) {\n        damage = this&#46;damagebonus\n        for (i, 1, this&#46;damagedicenumber) {\n          damage = damage + GetRandomInt (1, this&#46;damagedicesides) - game&#46;pov&#46;armour\n        }\n        game&#46;pov&#46;hitpoints = game&#46;pov&#46;hitpoints - damage\n        msg (this&#46;alias + &quot; shoots an arrow at you and hits, doing &quot; + damage + &quot; points of damage&#46;&quot;)\n        if (this&#46;hitpoints &lt;= 0) {\n          msg (&quot;You are dead!&quot;)\n          finish\n        }\n      }\n      else {\n        msg (this&#46;alias + &quot; shoots an arrow at you and misses&#46;&quot;)\n      }\n    &#93;&#93;&gt;&lt;/attackplayer&gt;\n  &lt;/type&gt;\n  &lt;function name=&quot;SpellAttackMonster&quot; parameters=&quot;monster, spell&quot;&gt;&lt;!&#91;CDATA&#91;\n    do (monster, &quot;settoattack&quot;)\n    element = GetElement (monster)\n    handled = False\n    if (not element = Null) {\n      if (DoesInherit (spell, element + &quot;_type&quot;)) {\n        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;ignoreselement)\n        handled = True\n      }\n      msg (&quot;looking for &quot; + element)\n      if (DoesInherit (spell, StringDictionaryItem (element_struct&#46;opposedelements, element) + &quot;_type&quot;)) {\n        monster&#46;hitpoints = monster&#46;hitpoints -  4 * spell&#46;powerrating\n        handled = True\n        if (monster&#46;hitpoints &gt; 0) {\n          msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;hurtbyelement)\n        }\n        else {\n          msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;deathbyelement)\n          do (monster, &quot;makedead&quot;)\n        }\n      }\n    }\n    if (not handled) {\n      monster&#46;hitpoints = monster&#46;hitpoints -  spell&#46;powerrating\n      if (monster&#46;hitpoints &gt; 0) {\n        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;hurt)\n      }\n      else {\n        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;death)\n        do (monster, &quot;makedead&quot;)\n      }\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n  &lt;function name=&quot;CancelSpell&quot;&gt;\n    if (HasObject (game&#46;pov, &quot;currentspell&quot;)) {\n      spell = game&#46;pov&#46;currentspell\n      msg (DynamicTemplate(&quot;SpellEnds&quot;, spell))\n      game&#46;pov&#46;currentspell = null\n      if (HasScript (spell, &quot;terminate&quot;)) {\n        do (spell, &quot;terminate&quot;)\n      }\n    }\n  &lt;/function&gt;\n  &lt;function name=&quot;GetElement&quot; parameters=&quot;obj&quot; type=&quot;string&quot;&gt;\n    result = Null\n    foreach (element, element_struct&#46;elements) {\n      type = element + &quot;_type&quot;\n      if (DoesInherit (obj, type)) {\n        result = element\n      }\n    }\n    return (result)\n  &lt;/function&gt;\n  &lt;function name=&quot;DescribeCast&quot; parameters=&quot;spell&quot;&gt;\n    if (HasString (spell, &quot;description&quot;)) {\n      msg (DynamicTemplate(&quot;SpellCast&quot;, spell) + &quot; &quot; + spell&#46;description)\n    }\n    else {\n      msg (DynamicTemplate(&quot;SpellCast&quot;, spell))\n    }\n  &lt;/function&gt;\n&lt;/asl&gt;[/code:10k42xco]\nThis is the code I added clock, journal, and shopping also the combat system but I manually put that code in on the coding view the rest I added to my files then was able to upload them to the game.",
      "EditableFormat": "bbcode",
      "HTML": "hey all,<br/>I recently figured out how to input libraries into a game but the problem is the functions they run do not show up and I can't find them so its like adding a blank library what do I do? Please help<br/><pre><code>&lt;!--Saved by Quest 5&#46;4&#46;4873&#46;16527--&gt;<br/>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Clock_Lib&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Journal_lib&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Shopping_lib&#46;aslx&quot; /&gt;<br/>  &lt;template name=&quot;Learn&quot;&gt;learn&lt;/template&gt;<br/>  &lt;template name=&quot;Cast&quot;&gt;cast&lt;/template&gt;<br/>  &lt;template name=&quot;LookDead&quot;&gt;Oh, and it is dead&#46;&lt;/template&gt;<br/>  &lt;template name=&quot;SpellAlreadyKnown&quot;&gt;Er, you already know that one!&lt;/template&gt;<br/>  &lt;template name=&quot;SpellNotKnown&quot;&gt;Er, you don't know that one!&lt;/template&gt;<br/>  &lt;template name=&quot;NoMonstersPresent&quot;&gt;No monsters present&lt;/template&gt;<br/>  &lt;dynamictemplate name=&quot;SpellEnds&quot;&gt;&lt;!&#91;CDATA&#91;&quot;The &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt; spell ends&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;<br/>  &lt;dynamictemplate name=&quot;SpellCast&quot;&gt;&lt;!&#91;CDATA&#91;&quot;You cast &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt;&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;<br/>  &lt;dynamictemplate name=&quot;SpellLearnt&quot;&gt;&lt;!&#91;CDATA&#91;&quot;In a process that seems at once unfathomable, and yet familiar, the spell fades away, and you realise you are now able to cast the &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt; spell&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;<br/>  &lt;game name=&quot;defender&quot;&gt;<br/>    &lt;gameid&gt;d153b745-24d8-4ed4-bfae-dd4f85b72cda&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;<br/>  &lt;/game&gt;<br/>  &lt;verb&gt;<br/>    &lt;property&gt;learn&lt;/property&gt;<br/>    &lt;pattern&gt;learn&lt;/pattern&gt;<br/>    &lt;defaultexpression&gt;&quot;You can't learn &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;<br/>  &lt;/verb&gt;<br/>  &lt;verb&gt;<br/>    &lt;property&gt;cast&lt;/property&gt;<br/>    &lt;pattern&gt;cast&lt;/pattern&gt;<br/>    &lt;defaultexpression&gt;&quot;You can't cast &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;<br/>  &lt;/verb&gt;<br/>  &lt;verb&gt;<br/>    &lt;property&gt;attack&lt;/property&gt;<br/>    &lt;pattern&gt;attack;fight;strike;kill&lt;/pattern&gt;<br/>    &lt;defaultexpression&gt;&quot;You can't attack &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;<br/>  &lt;/verb&gt;<br/>  &lt;verb&gt;<br/>    &lt;property&gt;equip&lt;/property&gt;<br/>    &lt;pattern&gt;equip;draw&lt;/pattern&gt;<br/>    &lt;defaultexpression&gt;&quot;You can't draw &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;<br/>  &lt;/verb&gt;<br/>  &lt;verb&gt;<br/>    &lt;property&gt;unequip&lt;/property&gt;<br/>    &lt;pattern&gt;unequip;sheathe&lt;/pattern&gt;<br/>    &lt;defaultexpression&gt;&quot;You can't sheathe &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;<br/>  &lt;/verb&gt;<br/>  &lt;turnscript name=&quot;attacktheplayerturnscript&quot;&gt;<br/>    &lt;enabled /&gt;<br/>    &lt;script&gt;<br/>      foreach (attacker, element_struct&#46;attackers) {<br/>        do (attacker, &quot;attackplayer&quot;)<br/>      }<br/>    &lt;/script&gt;<br/>  &lt;/turnscript&gt;<br/>  &lt;object name=&quot;element_struct&quot;&gt;<br/>    &lt;elements type=&quot;stringlist&quot;&gt;<br/>      &lt;value&gt;fire&lt;/value&gt;<br/>      &lt;value&gt;frost&lt;/value&gt;<br/>      &lt;value&gt;storm&lt;/value&gt;<br/>      &lt;value&gt;earthmight&lt;/value&gt;<br/>      &lt;value&gt;shadow&lt;/value&gt;<br/>      &lt;value&gt;rainbow&lt;/value&gt;<br/>      &lt;value&gt;divine&lt;/value&gt;<br/>      &lt;value&gt;necrotic&lt;/value&gt;<br/>    &lt;/elements&gt;<br/>    &lt;opposedelements type=&quot;stringdictionary&quot;&gt;<br/>      &lt;item&gt;<br/>        &lt;key&gt;fire&lt;/key&gt;<br/>        &lt;value&gt;frost&lt;/value&gt;<br/>      &lt;/item&gt;<br/>      &lt;item&gt;<br/>        &lt;key&gt;frost&lt;/key&gt;<br/>        &lt;value&gt;fire&lt;/value&gt;<br/>      &lt;/item&gt;<br/>      &lt;item&gt;<br/>        &lt;key&gt;storm&lt;/key&gt;<br/>        &lt;value&gt;earthmight&lt;/value&gt;<br/>      &lt;/item&gt;<br/>      &lt;item&gt;<br/>        &lt;key&gt;earthmight&lt;/key&gt;<br/>        &lt;value&gt;storm&lt;/value&gt;<br/>      &lt;/item&gt;<br/>      &lt;item&gt;<br/>        &lt;key&gt;shadow&lt;/key&gt;<br/>        &lt;value&gt;rainbow&lt;/value&gt;<br/>      &lt;/item&gt;<br/>      &lt;item&gt;<br/>        &lt;key&gt;rainbow&lt;/key&gt;<br/>        &lt;value&gt;shadow&lt;/value&gt;<br/>      &lt;/item&gt;<br/>      &lt;item&gt;<br/>        &lt;key&gt;divine&lt;/key&gt;<br/>        &lt;value&gt;necrotic&lt;/value&gt;<br/>      &lt;/item&gt;<br/>      &lt;item&gt;<br/>        &lt;key&gt;necrotic&lt;/key&gt;<br/>        &lt;value&gt;divine&lt;/value&gt;<br/>      &lt;/item&gt;<br/>    &lt;/opposedelements&gt;<br/>    &lt;attackers type=&quot;objectlist&quot;&gt;&lt;/attackers&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;fists&quot;&gt;<br/>    &lt;inherit name=&quot;weapon&quot; /&gt;<br/>    &lt;alias&gt;fist&lt;/alias&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;type name=&quot;spell&quot;&gt;<br/>    &lt;displayverbs type=&quot;stringlist&quot;&gt;<br/>      &lt;value&gt;Learn&lt;/value&gt;<br/>    &lt;/displayverbs&gt;<br/>    &lt;inventoryverbs type=&quot;stringlist&quot;&gt;<br/>      &lt;value&gt;Learn&lt;/value&gt;<br/>    &lt;/inventoryverbs&gt;<br/>    &lt;drop type=&quot;boolean&quot;&gt;false&lt;/drop&gt;<br/>    &lt;take type=&quot;boolean&quot;&gt;false&lt;/take&gt;<br/>    &lt;usedefaultprefix type=&quot;boolean&quot;&gt;false&lt;/usedefaultprefix&gt;<br/>    &lt;learn type=&quot;script&quot;&gt;<br/>      if (not this&#46;parent = game&#46;pov) {<br/>        this&#46;parent = game&#46;pov<br/>        this&#46;inventoryverbs = Split (&quot;Cast&quot;, &quot; &quot;)<br/>        msg (DynamicTemplate(&quot;SpellLearnt&quot;, this))<br/>      }<br/>      else {<br/>        msg (&quot;Er, you already know that one!&quot;)<br/>      }<br/>    &lt;/learn&gt;<br/>  &lt;/type&gt;<br/>  &lt;type name=&quot;attackspell&quot;&gt;<br/>    &lt;inherit name=&quot;spell&quot; /&gt;<br/>    &lt;cast type=&quot;script&quot;&gt;<br/>      // Check the player has the spell<br/>      // If so iterate through all objects in the room<br/>      // Apply attack to those with the monster type that are not dead<br/>      if (this&#46;parent = game&#46;pov) {<br/>        DescribeCast (this)<br/>        flag = False<br/>        foreach (obj, ScopeVisibleNotHeld ()) {<br/>          if (DoesInherit (obj, &quot;monster&quot;) and not GetBoolean (obj, &quot;dead&quot;)) {<br/>            SpellAttackMonster (obj, this)<br/>            flag = True<br/>          }<br/>        }<br/>        if (not flag) {<br/>          msg (&quot;&#46;&#46;&#46; No monsters present&quot;)<br/>        }<br/>        CancelSpell<br/>      }<br/>      else {<br/>        msg (&quot;Er, you don't know that one!&quot;)<br/>      }<br/>    &lt;/cast&gt;<br/>  &lt;/type&gt;<br/>  &lt;type name=&quot;nonattackspell&quot;&gt;<br/>    &lt;inherit name=&quot;spell&quot; /&gt;<br/>    &lt;cast type=&quot;script&quot;&gt;<br/>      if (this&#46;parent = game&#46;pov) {<br/>        DescribeCast (this)<br/>        do (this, &quot;spelleffect&quot;)<br/>        CancelSpell<br/>      }<br/>      else {<br/>        msg (&quot;Er, you don't know that one!&quot;)<br/>      }<br/>    &lt;/cast&gt;<br/>  &lt;/type&gt;<br/>  &lt;type name=&quot;lastingspell&quot;&gt;<br/>    &lt;inherit name=&quot;spell&quot; /&gt;<br/>    &lt;cast type=&quot;script&quot;&gt;<br/>      if (this&#46;parent = game&#46;pov) {<br/>        DescribeCast (this)<br/>        do (this, &quot;spelleffect&quot;)<br/>        CancelSpell<br/>        game&#46;pov&#46;currentspell = this<br/>        game&#46;pov&#46;status = this&#46;status<br/>      }<br/>      else {<br/>        msg (&quot;Er, you don't know that one!&quot;)<br/>      }<br/>    &lt;/cast&gt;<br/>  &lt;/type&gt;<br/>  &lt;type name=&quot;weapon&quot;&gt;<br/>    &lt;attackbonus type=&quot;int&quot;&gt;0&lt;/attackbonus&gt;<br/>    &lt;damagebonus type=&quot;int&quot;&gt;0&lt;/damagebonus&gt;<br/>    &lt;damagedicenumber type=&quot;int&quot;&gt;1&lt;/damagedicenumber&gt;<br/>    &lt;damagedicesides type=&quot;int&quot;&gt;4&lt;/damagedicesides&gt;<br/>    &lt;take /&gt;<br/>    &lt;inventoryverbs type=&quot;stringlist&quot;&gt;<br/>      &lt;value&gt;Look at&lt;/value&gt;<br/>      &lt;value&gt;Drop&lt;/value&gt;<br/>      &lt;value&gt;Equip&lt;/value&gt;<br/>    &lt;/inventoryverbs&gt;<br/>    &lt;equip type=&quot;script&quot;&gt;<br/>      if (this&#46;parent = game&#46;pov) {<br/>        if (not game&#46;pov&#46;equipped = fists and not game&#46;pov&#46;equipped = null) {<br/>          msg (&quot;You put away your &quot; + game&#46;pov&#46;equipped&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)<br/>        }<br/>        else {<br/>          msg (&quot;You draw your &quot; + this&#46;alias + &quot;&#46;&quot;)<br/>        }<br/>        game&#46;pov&#46;equipped = this<br/>        this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)<br/>        game&#46;pov&#46;equippedstatus = &quot;Wielding&#58; &quot; + this&#46;alias<br/>      }<br/>      else {<br/>        msg (&quot;You don't have it&#46;&quot;)<br/>      }<br/>    &lt;/equip&gt;<br/>    &lt;unequip type=&quot;script&quot;&gt;<br/>      if (this&#46;parent = game&#46;pov) {<br/>        msg (&quot;You put away your &quot; + game&#46;pov&#46;equipped&#46;alias + &quot;&#46;&quot;)<br/>        game&#46;pov&#46;equipped = fists<br/>        this&#46;inventoryverbs = Split (&quot;Look at;Drop;Equip&quot;, &quot;;&quot;)<br/>        game&#46;pov&#46;equippedstatus = &quot;Wielding&#58; nothing&quot;<br/>      }<br/>      else {<br/>        msg (&quot;You don't have it&#46;&quot;)<br/>      }<br/>    &lt;/unequip&gt;<br/>  &lt;/type&gt;<br/>  &lt;type name=&quot;fire_type&quot; /&gt;<br/>  &lt;type name=&quot;frost_type&quot; /&gt;<br/>  &lt;type name=&quot;storm_type&quot; /&gt;<br/>  &lt;type name=&quot;earthmight_type&quot; /&gt;<br/>  &lt;type name=&quot;shadow_type&quot; /&gt;<br/>  &lt;type name=&quot;rainbow_type&quot; /&gt;<br/>  &lt;type name=&quot;divine_type&quot; /&gt;<br/>  &lt;type name=&quot;necrotic_type&quot; /&gt;<br/>  &lt;type name=&quot;monster&quot;&gt;<br/>    &lt;inherit name=&quot;weapon&quot; /&gt;<br/>    &lt;defence type=&quot;int&quot;&gt;0&lt;/defence&gt;<br/>    &lt;armour type=&quot;int&quot;&gt;0&lt;/armour&gt;<br/>    &lt;hitpoints type=&quot;int&quot;&gt;10&lt;/hitpoints&gt;<br/>    &lt;take type=&quot;boolean&quot;&gt;false&lt;/take&gt;<br/>    &lt;displayverbs type=&quot;stringlist&quot;&gt;<br/>      &lt;value&gt;Look at&lt;/value&gt;<br/>      &lt;value&gt;Attack&lt;/value&gt;<br/>    &lt;/displayverbs&gt;<br/>    &lt;makedead type=&quot;script&quot;&gt;<br/>      if (not GetBoolean (this, &quot;dead&quot;)) {<br/>        this&#46;alias = this&#46;alias + &quot; (dead)&quot;<br/>        if (HasString (this, &quot;lookwhendead&quot;)) {<br/>          monster&#46;look = this&#46;lookwhendead<br/>        }<br/>        else {<br/>          this&#46;look = this&#46;look + &quot; Oh, and it is dead&#46;&quot;<br/>        }<br/>        this&#46;dead = True<br/>        list remove (element_struct&#46;attackers, this)<br/>      }<br/>    &lt;/makedead&gt;<br/>    &lt;attack type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>      if (not HasAttribute (game&#46;pov, &quot;equipped&quot;)) {<br/>        game&#46;pov&#46;equipped = fists<br/>      }<br/>      do (this, &quot;settoattack&quot;)<br/>      attackroll = GetRandomInt (1, 20) - this&#46;defence + game&#46;pov&#46;attack<br/>      attackroll = attackroll + game&#46;pov&#46;equipped&#46;attackbonus<br/>      if (attackroll &gt; 10) {<br/>        damage = game&#46;pov&#46;equipped&#46;damagebonus<br/>        for (i, 1, game&#46;pov&#46;equipped&#46;damagedicenumber) {<br/>          damage = damage + GetRandomInt (1, game&#46;pov&#46;equipped&#46;damagedicesides) - this&#46;armour<br/>        }<br/>        this&#46;hitpoints = this&#46;hitpoints - damage<br/>        if (this&#46;hitpoints &gt; 0) {<br/>          msg (&quot;You swing &quot; + game&#46;pov&#46;equipped&#46;alias + &quot; and hit, doing &quot; + damage + &quot; points of damage; &quot; + this&#46;hurt)<br/>        }<br/>        else {<br/>          msg (&quot;You swing your &quot; + game&#46;pov&#46;equipped&#46;alias + &quot; and hit, doing &quot; + damage + &quot; points of damage; &quot; + this&#46;death)<br/>          do (this, &quot;makedead&quot;)<br/>        }<br/>      }<br/>      else {<br/>        msg (&quot;You swing your &quot; + game&#46;pov&#46;equipped&#46;alias + &quot; and miss&#46;&quot;)<br/>      }<br/>    &#93;&#93;&gt;&lt;/attack&gt;<br/>    &lt;attackplayer type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>      attackroll = GetRandomInt (1, 20) - game&#46;pov&#46;defence + this&#46;attackbonus<br/>      if (attackroll &gt; 10) {<br/>        damage = this&#46;damagebonus<br/>        for (i, 1, this&#46;damagedicenumber) {<br/>          damage = damage + GetRandomInt (1, this&#46;damagedicesides) - game&#46;pov&#46;armour<br/>        }<br/>        game&#46;pov&#46;hitpoints = game&#46;pov&#46;hitpoints - damage<br/>        msg (this&#46;alias + &quot; swings at you and hits, doing &quot; + damage + &quot; points of damage&#46;&quot;)<br/>        if (this&#46;hitpoints &lt;= 0) {<br/>          msg (&quot;You are dead!&quot;)<br/>          finish<br/>        }<br/>      }<br/>      else {<br/>        msg (this&#46;alias + &quot; swings at you and misses&#46;&quot;)<br/>      }<br/>    &#93;&#93;&gt;&lt;/attackplayer&gt;<br/>    &lt;settoattack type=&quot;script&quot;&gt;<br/>      if (not ListContains (element_struct&#46;attackers, this) and not GetBoolean (this, &quot;dead&quot;)) {<br/>        list add (element_struct&#46;attackers, this)<br/>      }<br/>    &lt;/settoattack&gt;<br/>  &lt;/type&gt;<br/>  &lt;type name=&quot;monsterarcher&quot;&gt;<br/>    &lt;inherit name=&quot;monster&quot; /&gt;<br/>    &lt;attackplayer type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>      attackroll = GetRandomInt (1, 20) - game&#46;pov&#46;defence + this&#46;attackbonus<br/>      if (attackroll &gt; 10) {<br/>        damage = this&#46;damagebonus<br/>        for (i, 1, this&#46;damagedicenumber) {<br/>          damage = damage + GetRandomInt (1, this&#46;damagedicesides) - game&#46;pov&#46;armour<br/>        }<br/>        game&#46;pov&#46;hitpoints = game&#46;pov&#46;hitpoints - damage<br/>        msg (this&#46;alias + &quot; shoots an arrow at you and hits, doing &quot; + damage + &quot; points of damage&#46;&quot;)<br/>        if (this&#46;hitpoints &lt;= 0) {<br/>          msg (&quot;You are dead!&quot;)<br/>          finish<br/>        }<br/>      }<br/>      else {<br/>        msg (this&#46;alias + &quot; shoots an arrow at you and misses&#46;&quot;)<br/>      }<br/>    &#93;&#93;&gt;&lt;/attackplayer&gt;<br/>  &lt;/type&gt;<br/>  &lt;function name=&quot;SpellAttackMonster&quot; parameters=&quot;monster, spell&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    do (monster, &quot;settoattack&quot;)<br/>    element = GetElement (monster)<br/>    handled = False<br/>    if (not element = Null) {<br/>      if (DoesInherit (spell, element + &quot;_type&quot;)) {<br/>        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;ignoreselement)<br/>        handled = True<br/>      }<br/>      msg (&quot;looking for &quot; + element)<br/>      if (DoesInherit (spell, StringDictionaryItem (element_struct&#46;opposedelements, element) + &quot;_type&quot;)) {<br/>        monster&#46;hitpoints = monster&#46;hitpoints -  4 * spell&#46;powerrating<br/>        handled = True<br/>        if (monster&#46;hitpoints &gt; 0) {<br/>          msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;hurtbyelement)<br/>        }<br/>        else {<br/>          msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;deathbyelement)<br/>          do (monster, &quot;makedead&quot;)<br/>        }<br/>      }<br/>    }<br/>    if (not handled) {<br/>      monster&#46;hitpoints = monster&#46;hitpoints -  spell&#46;powerrating<br/>      if (monster&#46;hitpoints &gt; 0) {<br/>        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;hurt)<br/>      }<br/>      else {<br/>        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;death)<br/>        do (monster, &quot;makedead&quot;)<br/>      }<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/>  &lt;function name=&quot;CancelSpell&quot;&gt;<br/>    if (HasObject (game&#46;pov, &quot;currentspell&quot;)) {<br/>      spell = game&#46;pov&#46;currentspell<br/>      msg (DynamicTemplate(&quot;SpellEnds&quot;, spell))<br/>      game&#46;pov&#46;currentspell = null<br/>      if (HasScript (spell, &quot;terminate&quot;)) {<br/>        do (spell, &quot;terminate&quot;)<br/>      }<br/>    }<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;GetElement&quot; parameters=&quot;obj&quot; type=&quot;string&quot;&gt;<br/>    result = Null<br/>    foreach (element, element_struct&#46;elements) {<br/>      type = element + &quot;_type&quot;<br/>      if (DoesInherit (obj, type)) {<br/>        result = element<br/>      }<br/>    }<br/>    return (result)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;DescribeCast&quot; parameters=&quot;spell&quot;&gt;<br/>    if (HasString (spell, &quot;description&quot;)) {<br/>      msg (DynamicTemplate(&quot;SpellCast&quot;, spell) + &quot; &quot; + spell&#46;description)<br/>    }<br/>    else {<br/>      msg (DynamicTemplate(&quot;SpellCast&quot;, spell))<br/>    }<br/>  &lt;/function&gt;<br/>&lt;/asl&gt;</code></pre><br/>This is the code I added clock, journal, and shopping also the combat system but I manually put that code in on the coding view the rest I added to my files then was able to upload them to the game.",
      "PostDate": "2013-08-23T16:21:56+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25983",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Some questions:\n\n1) I assume the library files are in the same folder as your game file?\n2) Are you running this locally or on the server? (Are you even running it?)\n3) What do you mean they do not show up? If you are talking about the editor, then you need to go to the Filter (bottom left) and then &quot;Show Library Elements&quot;. If you mean you're getting a run time error because a function is not available, then what is the error?",
      "EditableFormat": "bbcode",
      "HTML": "Some questions:<br/><br/>1) I assume the library files are in the same folder as your game file?<br/>2) Are you running this locally or on the server? (Are you even running it?)<br/>3) What do you mean they do not show up? If you are talking about the editor, then you need to go to the Filter (bottom left) and then &quot;Show Library Elements&quot;. If you mean you're getting a run time error because a function is not available, then what is the error?",
      "PostDate": "2013-08-23T20:29:11+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25985",
      "UserId": 0,
      "Username": "onimike",
      "UserAvatar": null,
      "UserGravatar": "81a1a7d9be523aa5ac1d92fa2660b397",
      "EditableText": "[quote=&quot;jaynabonne&quot;:2358hzin]Some questions:\n\n1) I assume the library files are in the same folder as your game file?\n2) Are you running this locally or on the server? (Are you even running it?)\n3) What do you mean they do not show up? If you are talking about the editor, then you need to go to the Filter (bottom left) and then &quot;Show Library Elements&quot;. If you mean you're getting a run time error because a function is not available, then what is the error?[/quote:2358hzin]\nThanks jay showing libraries did the trick.\nMike",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>Some questions:<br/><br/>1) I assume the library files are in the same folder as your game file?<br/>2) Are you running this locally or on the server? (Are you even running it?)<br/>3) What do you mean they do not show up? If you are talking about the editor, then you need to go to the Filter (bottom left) and then &quot;Show Library Elements&quot;. If you mean you're getting a run time error because a function is not available, then what is the error?</blockquote><br/>Thanks jay showing libraries did the trick.<br/>Mike",
      "PostDate": "2013-08-23T21:31:01+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25987",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "My apologies, I forgot to mention that bit, I forget that the button (Filter -&gt; Show Library Elements) shows ALL libraries, and mistakenly think that the button is only for the core~default (Core+English) libraries, argh. my bad onimike!",
      "EditableFormat": "bbcode",
      "HTML": "My apologies, I forgot to mention that bit, I forget that the button (Filter -&gt; Show Library Elements) shows ALL libraries, and mistakenly think that the button is only for the core~default (Core+English) libraries, argh. my bad onimike!",
      "PostDate": "2013-08-24T05:11:14+01:00",
      "LastEditDate": null
    }
  ]
}
