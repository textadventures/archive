{
  "Topic": {
    "TopicId": "ugumvcjdn0amtpz-rqzcrq",
    "ForumId": "10",
    "Title": "scrollToEnd in ShowMenu",
    "LastUpdated": "2024-04-12T12:57:40.8989568Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "47354ecd-dc82-4407-a11f-96eb7bbfde2f",
      "UserId": 646942,
      "Username": "Bec10882",
      "AvatarUrl": "https://secure.gravatar.com/avatar/2d1db1171152ef37b0b738fa8f1b84e0?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi everyone!\r\n\r\nI have learnt so much reading the responses posted in this forum but this is my first time actually asking a question. I'm hoping someone someone can help me with a text scrolling issue. I know I'm probably just being picky but it's quite frustrating in terms of formatting!\r\n\r\nI've been using K.V.'s scrollToEnd( ) fix found here https://textadventures.co.uk/forum/quest/topic/mxvleq26puqyf3xfxbgwoq/scrolltoend.\r\n\r\nI want my game to always scroll to the end unless that's more than a page and then it should scroll to the top of the most recent section of text. I only clear the screen between rooms and I don't want to either remove all the previous text or have the player needing to scroll back up to the top of the section.\r\n\r\nThis override works perfectly most of the time but doesn't seem to work when the message output has come from a ShowMenu case. I have tried putting scrollToEnd( ) everywhere inside and after the menu and it just refuses to scroll. I want it to scroll so the output from the menu is at the top of the screen. I think this is happening because the menu choice/output isn't considered a new turn so it doesn't affect the current turn scroll position or maybe because the menus are non-blocking?\r\n\r\nThis issue is particularly annoying as my conversations between the player and NPCs happen through menus where the player can select a topic to talk about. So none of my conversations will scroll properly. At least they're not scrolling all the way to the bottom though!\r\n\r\nMany thanks to anyone who can help me out!",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi everyone!</p>\n<p>I have learnt so much reading the responses posted in this forum but this is my first time actually asking a question. I'm hoping someone someone can help me with a text scrolling issue. I know I'm probably just being picky but it's quite frustrating in terms of formatting!</p>\n<p>I've been using K.V.'s scrollToEnd( ) fix found here https://textadventures.co.uk/forum/quest/topic/mxvleq26puqyf3xfxbgwoq/scrolltoend.</p>\n<p>I want my game to always scroll to the end unless that's more than a page and then it should scroll to the top of the most recent section of text. I only clear the screen between rooms and I don't want to either remove all the previous text or have the player needing to scroll back up to the top of the section.</p>\n<p>This override works perfectly most of the time but doesn't seem to work when the message output has come from a ShowMenu case. I have tried putting scrollToEnd( ) everywhere inside and after the menu and it just refuses to scroll. I want it to scroll so the output from the menu is at the top of the screen. I think this is happening because the menu choice/output isn't considered a new turn so it doesn't affect the current turn scroll position or maybe because the menus are non-blocking?</p>\n<p>This issue is particularly annoying as my conversations between the player and NPCs happen through menus where the player can select a topic to talk about. So none of my conversations will scroll properly. At least they're not scrolling all the way to the bottom though!</p>\n<p>Many thanks to anyone who can help me out!</p>\n\n",
      "PostDate": "2024-04-12T12:57:40.8989568Z",
      "LastEditDate": "2024-04-12T13:11:21.8161794Z",
      "link": null
    },
    {
      "PostId": "3372a078-7e9c-4bdb-8cf7-9197ce417ea1",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The position it scrolls to is equal to the height when `markScrollPosition()` is called. This is triggered by `sendCommand` before the UI sends a command to the backend.\r\n\r\nI note that this could also lead to weird behavior if triggering a command while textfx (typewrite etc) is still running.\r\n\r\nFor menus, the simplest thing to do would be putting\r\n```\r\nJS.markScrollPosition()\r\n```\r\nright at the top of your menu response. However, this will likely scroll too far, because it may set the position to scroll to as the height of previous output *before* the menu options have finished hiding.",
      "EditableFormat": "markdown",
      "HTML": "<p>The position it scrolls to is equal to the height when <code>markScrollPosition()</code> is called. This is triggered by <code>sendCommand</code> before the UI sends a command to the backend.</p>\n<p>I note that this could also lead to weird behavior if triggering a command while textfx (typewrite etc) is still running.</p>\n<p>For menus, the simplest thing to do would be putting</p>\n<pre><code>JS.markScrollPosition()\n</code></pre>\n<p>right at the top of your menu response. However, this will likely scroll too far, because it may set the position to scroll to as the height of previous output <em>before</em> the menu options have finished hiding.</p>\n\n",
      "PostDate": "2024-04-14T07:52:01.4894895Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "41aad63e-0be9-484a-a8b4-336e4e71bd12",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "To make menus work neatly, you'd probably want to add a line to one of the core functions, `ClearMenu`:\r\n<pre><code>    <b style=\"color: blue\">JS.eval(\"markScrollPosition(); $('.\" + game.menuoutputsection + \"').each(function() {beginningOfCurrentTurnScrollPosition -= $(this).height();});\")</b>\r\n    HideOutputSection(game.menuoutputsection)\r\n    game.menuoutputsection = null\r\n    game.menuoptions = null\r\n    game.menucallback = null</code></pre>\r\n\r\nThis will automatically mark the scroll position, subtracting the height of the menu.\r\n\r\n(If you do this, you wouldn't need to do anything in the menu response itself)\r\n\r\n**If you're on the web editor** and can't modify the core functions, I've got two possible workarounds:\r\n\r\n1. The simple. Call `JS.markScrollPosition()` immediately *before* calling `ShowMenu`.\r\n2. If you output any text below the menu, option 1 will scroll it to the top after clicking an option. To avoid this, copy the blue line from the modified function above, and put it after all the output. So you would be doing something like:\r\n```\r\nShowMenu (\"What… is your favourite colour?\", Split(\"red;green;blue;ivory\"), true) {\r\n  // some code here to handle the response\r\n}\r\nmsg (\"Remember to choose carefully!\")\r\nJS.eval(\"markScrollPosition(); $('.\" + game.menuoutputsection + \"').each(function() {beginningOfCurrentTurnScrollPosition -= $(this).height();});\")\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>To make menus work neatly, you'd probably want to add a line to one of the core functions, <code>ClearMenu</code>:</p>\n<pre><code>    <b style=\"color: blue\">JS.eval(\"markScrollPosition(); $('.\" + game.menuoutputsection + \"').each(function() {beginningOfCurrentTurnScrollPosition -= $(this).height();});\")</b>\n    HideOutputSection(game.menuoutputsection)\n    game.menuoutputsection = null\n    game.menuoptions = null\n    game.menucallback = null</code></pre>\n<p>This will automatically mark the scroll position, subtracting the height of the menu.</p>\n<p>(If you do this, you wouldn't need to do anything in the menu response itself)</p>\n<p><strong>If you're on the web editor</strong> and can't modify the core functions, I've got two possible workarounds:</p>\n<ol>\n<li>The simple. Call <code>JS.markScrollPosition()</code> immediately <em>before</em> calling <code>ShowMenu</code>.</li>\n<li>If you output any text below the menu, option 1 will scroll it to the top after clicking an option. To avoid this, copy the blue line from the modified function above, and put it after all the output. So you would be doing something like:</li>\n</ol>\n<pre><code>ShowMenu (\"What… is your favourite colour?\", Split(\"red;green;blue;ivory\"), true) {\n  // some code here to handle the response\n}\nmsg (\"Remember to choose carefully!\")\nJS.eval(\"markScrollPosition(); $('.\" + game.menuoutputsection + \"').each(function() {beginningOfCurrentTurnScrollPosition -= $(this).height();});\")\n</code></pre>\n\n",
      "PostDate": "2024-04-14T08:17:06.834199Z",
      "LastEditDate": "2024-04-14T08:28:52.8700659Z",
      "link": null
    },
    {
      "PostId": "0118c4fa-94e6-4961-9767-c0c21db91f6c",
      "UserId": 646942,
      "Username": "Bec10882",
      "AvatarUrl": "https://secure.gravatar.com/avatar/2d1db1171152ef37b0b738fa8f1b84e0?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you so much for your ideas! I'm on the desktop editor so I have tried both editing the ClearMenu function and also inserting those lines before and after the menu but I'm not seeing any difference in the scrolling behaviour.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you so much for your ideas! I'm on the desktop editor so I have tried both editing the ClearMenu function and also inserting those lines before and after the menu but I'm not seeing any difference in the scrolling behaviour.</p>\n\n",
      "PostDate": "2024-04-15T04:48:32.1383046Z",
      "LastEditDate": "2024-04-15T05:30:51.4727891Z",
      "link": null
    },
    {
      "PostId": "b7b4fb83-4f42-4ff7-bc2e-4cef2367b40a",
      "UserId": 646942,
      "Username": "Bec10882",
      "AvatarUrl": "https://secure.gravatar.com/avatar/2d1db1171152ef37b0b738fa8f1b84e0?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think I might have figured it out! In the ShowMenuResponse function I  have put your mark scroll position as well as scroll to end. So it now looks like this:\r\n```\r\nJS.markScrollPosition()\r\nif (game.menucallback = null) {\r\n  error (\"Unexpected menu response\")\r\n}\r\nelse {\r\n  parameters = NewStringDictionary()\r\n  dictionary add (parameters, \"result\", UnescapeQuotes(option))\r\n  script = game.menucallback\r\n  ClearMenu\r\n  // Added by KV to handle the new FinishTurn setup in 580\r\n  if (not GetBoolean(game, \"disambiguating\")) {\r\n    game.runturnscripts = true\r\n  }\r\n  game.disambiguating = false\r\n  invoke (script, parameters)\r\n  FinishTurn\r\n}\r\nJS.scrollToEnd ()\r\n```\r\nI'll have a play around with it like this and see if it keeps working or has any unintended side effects!",
      "EditableFormat": "markdown",
      "HTML": "<p>I think I might have figured it out! In the ShowMenuResponse function I  have put your mark scroll position as well as scroll to end. So it now looks like this:</p>\n<pre><code>JS.markScrollPosition()\nif (game.menucallback = null) {\n  error (\"Unexpected menu response\")\n}\nelse {\n  parameters = NewStringDictionary()\n  dictionary add (parameters, \"result\", UnescapeQuotes(option))\n  script = game.menucallback\n  ClearMenu\n  // Added by KV to handle the new FinishTurn setup in 580\n  if (not GetBoolean(game, \"disambiguating\")) {\n    game.runturnscripts = true\n  }\n  game.disambiguating = false\n  invoke (script, parameters)\n  FinishTurn\n}\nJS.scrollToEnd ()\n</code></pre>\n<p>I'll have a play around with it like this and see if it keeps working or has any unintended side effects!</p>\n\n",
      "PostDate": "2024-04-15T06:13:28.3381318Z",
      "LastEditDate": "2024-04-15T06:14:07.8425453Z",
      "link": null
    },
    {
      "PostId": "18f73393-e554-4783-bd51-3980277ce363",
      "UserId": 646942,
      "Username": "Bec10882",
      "AvatarUrl": "https://secure.gravatar.com/avatar/2d1db1171152ef37b0b738fa8f1b84e0?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok so for anyone else looking for a solution to this problem (don't know if anyone will be cause it's pretty niche!), here's what I've ended up with...\r\n\r\nIn the game UI initialisation script I now have two JS functions:\r\n```\r\nJS.eval (\" function scrollToEnd() {    var scrollOffset = -100; if (beginningOfCurrentTurnScrollPosition > 0) { var scrollTo = _animateScroll ? beginningOfCurrentTurnScrollPosition - 50 - $(\\\"#gamePanelSpacer\\\").height() - scrollOffset: $(document).height()+ scrollOffset;    var currentScrollTop = Math.max($(\\\"body\\\").scrollTop(), $(\\\"html\\\").scrollTop());    if (scrollTo > currentScrollTop) {        var maxScrollTop = $(document).height() - $(window).height();        if (scrollTo > maxScrollTop) scrollTo = maxScrollTop;        var distance = scrollTo - currentScrollTop;        var duration = _animateScroll ? distance / 0.4 : 1;        if (duration>2000) duration=2000;        $(\\\"body,html\\\").stop().animate({ scrollTop: scrollTo }, duration, \\\"easeInOutCubic\\\");   } }    $(\\\"#txtCommand\\\").focus();};\")\r\n\r\nJS.eval (\" function scrollToEndMenu() {    var scrollOffset = 0; var scrollTo = _animateScroll ? beginningOfCurrentTurnScrollPosition - 50 - $(\\\"#gamePanelSpacer\\\").height() - scrollOffset: $(document).height()+ scrollOffset;    var currentScrollTop = Math.max($(\\\"body\\\").scrollTop(), $(\\\"html\\\").scrollTop());    if (scrollTo > currentScrollTop) {        var maxScrollTop = $(document).height() - $(window).height();        if (scrollTo > maxScrollTop) scrollTo = maxScrollTop;        var distance = scrollTo - currentScrollTop;        var duration = _animateScroll ? distance / 0.4 : 1;        if (duration>2000) duration=2000;        $(\\\"body,html\\\").stop().animate({ scrollTop: scrollTo }, duration, \\\"easeInOutCubic\\\");    }    $(\\\"#txtCommand\\\").focus();};\")\r\n```\r\nThe first one makes the scrollToEnd() work as I want it to almost everywhere. I need the scrollOffset of -100 in there for some reason otherwise it doesn't quite scroll far enough. The first if statement in there stops it from scrolling  down that extra offset amount at the start of the game or upon entering a room (cause that looked weird). \r\n\r\nThe second one is for scrolling after menu choices and to make it work I have put ```JS.markScrollPosition ()``` at the end of the ClearMenu function and ```JS.scrollToEndMenu ()``` at  the end of the ShowMenuResponse function.\r\n\r\nI feel like it's all a bit cobbled together as this game is really my first time coding anything but it's working :)",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok so for anyone else looking for a solution to this problem (don't know if anyone will be cause it's pretty niche!), here's what I've ended up with...</p>\n<p>In the game UI initialisation script I now have two JS functions:</p>\n<pre><code>JS.eval (\" function scrollToEnd() {    var scrollOffset = -100; if (beginningOfCurrentTurnScrollPosition &gt; 0) { var scrollTo = _animateScroll ? beginningOfCurrentTurnScrollPosition - 50 - $(\\\"#gamePanelSpacer\\\").height() - scrollOffset: $(document).height()+ scrollOffset;    var currentScrollTop = Math.max($(\\\"body\\\").scrollTop(), $(\\\"html\\\").scrollTop());    if (scrollTo &gt; currentScrollTop) {        var maxScrollTop = $(document).height() - $(window).height();        if (scrollTo &gt; maxScrollTop) scrollTo = maxScrollTop;        var distance = scrollTo - currentScrollTop;        var duration = _animateScroll ? distance / 0.4 : 1;        if (duration&gt;2000) duration=2000;        $(\\\"body,html\\\").stop().animate({ scrollTop: scrollTo }, duration, \\\"easeInOutCubic\\\");   } }    $(\\\"#txtCommand\\\").focus();};\")\n\nJS.eval (\" function scrollToEndMenu() {    var scrollOffset = 0; var scrollTo = _animateScroll ? beginningOfCurrentTurnScrollPosition - 50 - $(\\\"#gamePanelSpacer\\\").height() - scrollOffset: $(document).height()+ scrollOffset;    var currentScrollTop = Math.max($(\\\"body\\\").scrollTop(), $(\\\"html\\\").scrollTop());    if (scrollTo &gt; currentScrollTop) {        var maxScrollTop = $(document).height() - $(window).height();        if (scrollTo &gt; maxScrollTop) scrollTo = maxScrollTop;        var distance = scrollTo - currentScrollTop;        var duration = _animateScroll ? distance / 0.4 : 1;        if (duration&gt;2000) duration=2000;        $(\\\"body,html\\\").stop().animate({ scrollTop: scrollTo }, duration, \\\"easeInOutCubic\\\");    }    $(\\\"#txtCommand\\\").focus();};\")\n</code></pre>\n<p>The first one makes the scrollToEnd() work as I want it to almost everywhere. I need the scrollOffset of -100 in there for some reason otherwise it doesn't quite scroll far enough. The first if statement in there stops it from scrolling  down that extra offset amount at the start of the game or upon entering a room (cause that looked weird).</p>\n<p>The second one is for scrolling after menu choices and to make it work I have put <code>JS.markScrollPosition ()</code> at the end of the ClearMenu function and <code>JS.scrollToEndMenu ()</code> at  the end of the ShowMenuResponse function.</p>\n<p>I feel like it's all a bit cobbled together as this game is really my first time coding anything but it's working :)</p>\n\n",
      "PostDate": "2024-04-15T10:15:31.5172865Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
