{
  "Topic": {
    "TopicId": "5227",
    "ForumId": "10",
    "Title": "Using GetRandomInt for multiple conditions",
    "LastUpdated": "2015-05-17T19:40:08+01:00",
    "ReplyCount": 22
  },
  "Posts": [
    {
      "PostId": "36035",
      "UserId": 0,
      "Username": "lightwriter",
      "UserAvatar": null,
      "UserGravatar": "4361dea0f293c64bea42cb1253ce25d4",
      "EditableText": "What I mean is something like this where it only does 1 of the conditions and not try to do multiple ones of them:\n1. 10% chance | 1-10\n2. 25% chance | 11-35\n3. 30% Chance | 36-65\n4. 25% Chance | 66-90\n5. 10% Chance | 91-100\nSo I'm trying to do this using the RandomGetInt but I'm having trouble with limiting it to the specified number ranges.\nI tried using and statements but don't think I'm doing it properly.",
      "EditableFormat": "bbcode",
      "HTML": "What I mean is something like this where it only does 1 of the conditions and not try to do multiple ones of them:<br/>1. 10% chance | 1-10<br/>2. 25% chance | 11-35<br/>3. 30% Chance | 36-65<br/>4. 25% Chance | 66-90<br/>5. 10% Chance | 91-100<br/>So I'm trying to do this using the RandomGetInt but I'm having trouble with limiting it to the specified number ranges.<br/>I tried using and statements but don't think I'm doing it properly.",
      "PostDate": "2015-05-15T16:03:25+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36036",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "There are a number of ways of doing that. Here is one:\n[code:3twlg5i2]n = GetRandomInt(1, 100)\nif (n &lt;= 10) {\n  msg(&quot;option 1&quot;)\n}\nelse if (n &lt;= 35) {\n  msg(&quot;option 2&quot;)\n}\nelse if (n &lt;= 65) {\n  msg(&quot;option 3&quot;)\n}\nelse if (n &lt;= 90) {\n  msg(&quot;option 4&quot;)\n}\nelse {\n  msg(&quot;option 5&quot;)\n}[/code:3twlg5i2]",
      "EditableFormat": "bbcode",
      "HTML": "There are a number of ways of doing that. Here is one:<br/><pre><code>n = GetRandomInt(1, 100)<br/>if (n &lt;= 10) {<br/>  msg(&quot;option 1&quot;)<br/>}<br/>else if (n &lt;= 35) {<br/>  msg(&quot;option 2&quot;)<br/>}<br/>else if (n &lt;= 65) {<br/>  msg(&quot;option 3&quot;)<br/>}<br/>else if (n &lt;= 90) {<br/>  msg(&quot;option 4&quot;)<br/>}<br/>else {<br/>  msg(&quot;option 5&quot;)<br/>}</code></pre>",
      "PostDate": "2015-05-15T17:19:47+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36037",
      "UserId": 0,
      "Username": "lightwriter",
      "UserAvatar": null,
      "UserGravatar": "4361dea0f293c64bea42cb1253ce25d4",
      "EditableText": "See, I don't get an error from that like the more complicated way I was using but it still doesn't do anything...\nbasically I'm trying to change the value of something using a formula that has a different chance of varying.\nBasically, with the the random items restocking thing, only now trying to get somewhat of a random price by using a value.\nitem.price = item.value * (a number that varies)",
      "EditableFormat": "bbcode",
      "HTML": "See, I don't get an error from that like the more complicated way I was using but it still doesn't do anything...<br/>basically I'm trying to change the value of something using a formula that has a different chance of varying.<br/>Basically, with the the random items restocking thing, only now trying to get somewhat of a random price by using a value.<br/>item.price = item.value * (a number that varies)",
      "PostDate": "2015-05-15T19:05:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36038",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "can you share the code that you're currently using? Might help to give us a better idea where the problem is.",
      "EditableFormat": "bbcode",
      "HTML": "can you share the code that you're currently using? Might help to give us a better idea where the problem is.",
      "PostDate": "2015-05-15T19:07:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36039",
      "UserId": 0,
      "Username": "lightwriter",
      "UserAvatar": null,
      "UserGravatar": "4361dea0f293c64bea42cb1253ce25d4",
      "EditableText": "Here's the code for the script&#058;\n[code:24ciwu0t]//Lots of this code was created by Pixie\n// Gets the integer for random price\nproduceprice1 = GetRandomInt (1,100)\n// remove old stock from the shop\nforeach (produce1, GetDirectChildren(foodstock)) {\n  produce1&#46;parent = foodstorage\n}\nforeach (produce2, GetDirectChildren(foodstock)) {\n  produce2&#46;parent = foodstorage\n}\n//Item 1\nfor (produce1, 1, 5) {\n  l = GetDirectChildren(foodstorage)\n  n = GetRandomInt(0, ListCount(l)-1)\n  produce1 = ObjectListItem(l, n)\n  produce1&#46;parent = foodstock\n}\nif (produceprice1 &lt;= 10) {\n  produce1&#46;price = produce1&#46;value * 0&#46;5\n}\nelse if (produceprice1 &lt;= 35) {\n  produce1&#46;price = produce1&#46;value * 0&#46;75\n}\nelse if (produceprice1 &lt;= 65) {\n  produce1&#46;price = produce1&#46;value\n}\nelse if (produceprice1 &lt;= 90) {\n  produce1&#46;price = produce1&#46;value * 1&#46;25\n}\nelse {\n  produce1&#46;price = produce1&#46;value * 1&#46;5\n}\n// Item 2\nfor (produce2, 1, 5) {\n  l2 = GetDirectChildren(foodstorage)\n  n2 = GetRandomInt(0, ListCount(l2)-1)\n  produce2 = ObjectListItem(l2, n2)\n  produce2&#46;parent = foodstock\n}\nproduce1&#46;price = round(produce1&#46;price)[/code:24ciwu0t]",
      "EditableFormat": "bbcode",
      "HTML": "Here's the code for the script&#058;<br/><pre><code>//Lots of this code was created by Pixie<br/>// Gets the integer for random price<br/>produceprice1 = GetRandomInt (1,100)<br/>// remove old stock from the shop<br/>foreach (produce1, GetDirectChildren(foodstock)) {<br/>  produce1&#46;parent = foodstorage<br/>}<br/>foreach (produce2, GetDirectChildren(foodstock)) {<br/>  produce2&#46;parent = foodstorage<br/>}<br/>//Item 1<br/>for (produce1, 1, 5) {<br/>  l = GetDirectChildren(foodstorage)<br/>  n = GetRandomInt(0, ListCount(l)-1)<br/>  produce1 = ObjectListItem(l, n)<br/>  produce1&#46;parent = foodstock<br/>}<br/>if (produceprice1 &lt;= 10) {<br/>  produce1&#46;price = produce1&#46;value * 0&#46;5<br/>}<br/>else if (produceprice1 &lt;= 35) {<br/>  produce1&#46;price = produce1&#46;value * 0&#46;75<br/>}<br/>else if (produceprice1 &lt;= 65) {<br/>  produce1&#46;price = produce1&#46;value<br/>}<br/>else if (produceprice1 &lt;= 90) {<br/>  produce1&#46;price = produce1&#46;value * 1&#46;25<br/>}<br/>else {<br/>  produce1&#46;price = produce1&#46;value * 1&#46;5<br/>}<br/>// Item 2<br/>for (produce2, 1, 5) {<br/>  l2 = GetDirectChildren(foodstorage)<br/>  n2 = GetRandomInt(0, ListCount(l2)-1)<br/>  produce2 = ObjectListItem(l2, n2)<br/>  produce2&#46;parent = foodstock<br/>}<br/>produce1&#46;price = round(produce1&#46;price)</code></pre>",
      "PostDate": "2015-05-15T19:13:27+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36040",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "If I'm reading this right 'produce1' is a variable that references a specific object during your stock/unstock scripts.\n\nIt seems to me that you're likely only referencing the final 'produce1' when you set the value, as you loop through several objects that are added to the stock, but only the final one is still considered 'produce1' at the time of the price change.\n\nSo in other words, you need to include the script to set the price during the stocking script, to set each items price as it is being put into stock.\n\nEDIT: going to attempt to write this up in psuedo-code for ease of readability, also adding some notes to see if I'm even correct about whats happening\n[code:298t3kyd]//Item 1\nfor (P, 1, 5) {\n  l = GetDirectChildren(foodstorage) //list of storage items that can be put into stock\n  n = GetRandomInt(0, ListCount(l)-1) //random list index selected\n  produce1 = ObjectListItem(l, n) //produce1 = current selection\n  produce1&#46;parent = foodstock //move produce1 to stock\n  //set price of produce1 here\n  //if you don't set the price here then you need to reference all possible items and set their price individually elsewhere\n}\n//at this point produce1 = the last item moved to stock only[/code:298t3kyd]\n\nAlso noted that syntax for the 'for' script is\n[code:298t3kyd]for(&lt;iterator variable&gt;,&lt;int from&gt;,&lt;int to&gt;[/code:298t3kyd]\nthe problem here is that you're using your object variable 'produce1' as your iterator, which isn't a good idea as each loop you're setting it to an integer, or potentially breaking the for loop, I'm not entirely sure how thats handled, but either way, not a good idea outside specific cases where your iterator is always holding an integer value to begin with.\n\nthe iterator can be anything and is generally local to the for script so that's potentially a problem area.",
      "EditableFormat": "bbcode",
      "HTML": "If I'm reading this right 'produce1' is a variable that references a specific object during your stock/unstock scripts.<br/><br/>It seems to me that you're likely only referencing the final 'produce1' when you set the value, as you loop through several objects that are added to the stock, but only the final one is still considered 'produce1' at the time of the price change.<br/><br/>So in other words, you need to include the script to set the price during the stocking script, to set each items price as it is being put into stock.<br/><br/>EDIT: going to attempt to write this up in psuedo-code for ease of readability, also adding some notes to see if I'm even correct about whats happening<br/><pre><code>//Item 1<br/>for (P, 1, 5) {<br/>  l = GetDirectChildren(foodstorage) //list of storage items that can be put into stock<br/>  n = GetRandomInt(0, ListCount(l)-1) //random list index selected<br/>  produce1 = ObjectListItem(l, n) //produce1 = current selection<br/>  produce1&#46;parent = foodstock //move produce1 to stock<br/>  //set price of produce1 here<br/>  //if you don't set the price here then you need to reference all possible items and set their price individually elsewhere<br/>}<br/>//at this point produce1 = the last item moved to stock only</code></pre><br/><br/>Also noted that syntax for the 'for' script is<br/><pre><code>for(&lt;iterator variable&gt;,&lt;int from&gt;,&lt;int to&gt;</code></pre><br/>the problem here is that you're using your object variable 'produce1' as your iterator, which isn't a good idea as each loop you're setting it to an integer, or potentially breaking the for loop, I'm not entirely sure how thats handled, but either way, not a good idea outside specific cases where your iterator is always holding an integer value to begin with.<br/><br/>the iterator can be anything and is generally local to the for script so that's potentially a problem area.",
      "PostDate": "2015-05-15T19:22:07+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36041",
      "UserId": 0,
      "Username": "lightwriter",
      "UserAvatar": null,
      "UserGravatar": "4361dea0f293c64bea42cb1253ce25d4",
      "EditableText": "that fixed it to a certain extent but every single time it is the same amount as the value.  Yes, that one is the highest likely 1 but I never see another price.",
      "EditableFormat": "bbcode",
      "HTML": "that fixed it to a certain extent but every single time it is the same amount as the value.  Yes, that one is the highest likely 1 but I never see another price.",
      "PostDate": "2015-05-15T19:28:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36042",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "found a few points of issue and edited them into my last post. I was adding that before your followup post so I'll just go over the points I found here.\n\noverview of the problems\n-outside the for() segment, produce1 only references the last produce1 that was put into stock, not all of them.\n-price would probably be best set during the stocking phase\n-you're using produce1 as your iterator variable for the for(), I honestly don't know how quest handles this being set to an object value, best not to even have that potential wierdness.",
      "EditableFormat": "bbcode",
      "HTML": "found a few points of issue and edited them into my last post. I was adding that before your followup post so I'll just go over the points I found here.<br/><br/>overview of the problems<br/>-outside the for() segment, produce1 only references the last produce1 that was put into stock, not all of them.<br/>-price would probably be best set during the stocking phase<br/>-you're using produce1 as your iterator variable for the for(), I honestly don't know how quest handles this being set to an object value, best not to even have that potential wierdness.",
      "PostDate": "2015-05-15T19:35:03+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36043",
      "UserId": 0,
      "Username": "lightwriter",
      "UserAvatar": null,
      "UserGravatar": "4361dea0f293c64bea42cb1253ce25d4",
      "EditableText": "alright, so, basically I have to each item manually",
      "EditableFormat": "bbcode",
      "HTML": "alright, so, basically I have to each item manually",
      "PostDate": "2015-05-15T20:33:51+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36044",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "you can put the price set in the loop where you add them to the stock, if you do it at that time you can just set it once but it will repeat for each item when it goes into the stock.",
      "EditableFormat": "bbcode",
      "HTML": "you can put the price set in the loop where you add them to the stock, if you do it at that time you can just set it once but it will repeat for each item when it goes into the stock.",
      "PostDate": "2015-05-15T20:52:16+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36045",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'm a bit unclear of what you want, but if you want to have each item, set to a random price, here's how:\n\n[code:3jmk5dqd]foreach (placeholder_variable, Object_name&#46;List_Attribute_name) {\n  placeholder_variable&#46;Attribute_name = GetRandomInt (min, max)\n}[/code:3jmk5dqd]\n\nexample:\n\n[code:3jmk5dqd]foreach (shop_item, shop&#46;itemlist) {\n  if (shop_item&#46;type_of_object = &quot;claymore_sword&quot;) {\n    shop_item&#46;price = GetRandomInt (100,500)\n  } else if (shop_item&#46;type_of_object = &quot;full_plate_mail&quot;) {\n    shop_item&#46;price = GetRandomInt (1000,5000)\n  }\n}[/code:3jmk5dqd]\n\na lot of people are confused by, what I like to call it as, the 'placeholder_variable' to try to help explain it, here's a really good analogy example that explains it (and the 'foreach' Function itself too):\n\n[code:3jmk5dqd]game&#46;team = split (&quot;joe;jim;jill;john;jan;jen&quot;,&quot;;&quot;)\n\nforeach (team_member, game&#46;team) {\n  invoke (team_member, &quot;run_laps&quot;)\n  // the 'team_member' is used to represent each of the items in the list, so conceptually, it is doing this&#58;\n  // invoke (team_member{joe}, &quot;run_laps&quot;)\n  // invoke (team_member{jim}, &quot;run_laps&quot;)\n  // invoke (team_member{jill}, &quot;run_laps&quot;)\n  // invoke (team_member{jan}, &quot;run_laps&quot;)\n  // invoke (team_member{jen}, &quot;run_laps&quot;)\n  // aka, all the team members, each individually, run laps (a Script Variable, that is invoked)\n}[/code:3jmk5dqd]\n\n~OR (the 'placeholder_variable' can be labelled whatever you want, see below) ~\n\n[code:3jmk5dqd]foreach (fhkasdhfkjashfkl, game&#46;team) {\n  invoke (fhkasdhfkjashfkl, &quot;run_laps&quot;)\n}[/code:3jmk5dqd]\n\n[code:3jmk5dqd]foreach (x, game&#46;team) {\n  invoke (x, &quot;run_laps&quot;)\n}[/code:3jmk5dqd]\n\n[code:3jmk5dqd]foreach (item, game&#46;team) {\n  invoke (item, &quot;run_laps&quot;)\n}[/code:3jmk5dqd]\n\n[code:3jmk5dqd]foreach (itm, game&#46;team) {\n  invoke (itm, &quot;run_laps&quot;)\n}[/code:3jmk5dqd]\n\n[code:3jmk5dqd]foreach (obj, game&#46;team) {\n  invoke (obj, &quot;run_laps&quot;)\n}[/code:3jmk5dqd]",
      "EditableFormat": "bbcode",
      "HTML": "I'm a bit unclear of what you want, but if you want to have each item, set to a random price, here's how:<br/><br/><pre><code>foreach (placeholder_variable, Object_name&#46;List_Attribute_name) {<br/>  placeholder_variable&#46;Attribute_name = GetRandomInt (min, max)<br/>}</code></pre><br/><br/>example:<br/><br/><pre><code>foreach (shop_item, shop&#46;itemlist) {<br/>  if (shop_item&#46;type_of_object = &quot;claymore_sword&quot;) {<br/>    shop_item&#46;price = GetRandomInt (100,500)<br/>  } else if (shop_item&#46;type_of_object = &quot;full_plate_mail&quot;) {<br/>    shop_item&#46;price = GetRandomInt (1000,5000)<br/>  }<br/>}</code></pre><br/><br/>a lot of people are confused by, what I like to call it as, the 'placeholder_variable' to try to help explain it, here's a really good analogy example that explains it (and the 'foreach' Function itself too):<br/><br/><pre><code>game&#46;team = split (&quot;joe;jim;jill;john;jan;jen&quot;,&quot;;&quot;)<br/><br/>foreach (team_member, game&#46;team) {<br/>  invoke (team_member, &quot;run_laps&quot;)<br/>  // the 'team_member' is used to represent each of the items in the list, so conceptually, it is doing this&#58;<br/>  // invoke (team_member{joe}, &quot;run_laps&quot;)<br/>  // invoke (team_member{jim}, &quot;run_laps&quot;)<br/>  // invoke (team_member{jill}, &quot;run_laps&quot;)<br/>  // invoke (team_member{jan}, &quot;run_laps&quot;)<br/>  // invoke (team_member{jen}, &quot;run_laps&quot;)<br/>  // aka, all the team members, each individually, run laps (a Script Variable, that is invoked)<br/>}</code></pre><br/><br/>~OR (the 'placeholder_variable' can be labelled whatever you want, see below) ~<br/><br/><pre><code>foreach (fhkasdhfkjashfkl, game&#46;team) {<br/>  invoke (fhkasdhfkjashfkl, &quot;run_laps&quot;)<br/>}</code></pre><br/><br/><pre><code>foreach (x, game&#46;team) {<br/>  invoke (x, &quot;run_laps&quot;)<br/>}</code></pre><br/><br/><pre><code>foreach (item, game&#46;team) {<br/>  invoke (item, &quot;run_laps&quot;)<br/>}</code></pre><br/><br/><pre><code>foreach (itm, game&#46;team) {<br/>  invoke (itm, &quot;run_laps&quot;)<br/>}</code></pre><br/><br/><pre><code>foreach (obj, game&#46;team) {<br/>  invoke (obj, &quot;run_laps&quot;)<br/>}</code></pre>",
      "PostDate": "2015-05-15T21:42:52+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36046",
      "UserId": 0,
      "Username": "lightwriter",
      "UserAvatar": null,
      "UserGravatar": "4361dea0f293c64bea42cb1253ce25d4",
      "EditableText": "For GetRandomInt (#, #) can I use a variable as one of the random integers.\nLike\n[code:g25bxv5k]x = item&#46;value * &#46;5\ny = item&#46;value *1&#46;5\nitem&#46;price = GetRandomInt(x, y)[/code:g25bxv5k]",
      "EditableFormat": "bbcode",
      "HTML": "For GetRandomInt (#, #) can I use a variable as one of the random integers.<br/>Like<br/><pre><code>x = item&#46;value * &#46;5<br/>y = item&#46;value *1&#46;5<br/>item&#46;price = GetRandomInt(x, y)</code></pre>",
      "PostDate": "2015-05-15T22:11:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36047",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Yes.",
      "EditableFormat": "bbcode",
      "HTML": "Yes.",
      "PostDate": "2015-05-15T22:34:47+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36048",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Not like that. GetRandomInt takes ints, and multiplying by a number with a decimal will give you a double (even if the original number is even in the above case).\n\nHowever, you can do this:\n\n[code:33c1ij46]x = cast(item&#46;value * &#46;5, int)\ny = cast(item&#46;value *1&#46;5, int)\nitem&#46;price = GetRandomInt(x, y)[/code:33c1ij46]\nto cast the values back to an integer. \n\nAssuming your value is originally an integer, you might be better off doing this instead:\n\n[code:33c1ij46]x = item&#46;value/2\ny = item&#46;value*3/2\nitem&#46;price = GetRandomInt(x, y)[/code:33c1ij46]\nwhich is only integer arithmetic and avoids the need for a cast.",
      "EditableFormat": "bbcode",
      "HTML": "Not like that. GetRandomInt takes ints, and multiplying by a number with a decimal will give you a double (even if the original number is even in the above case).<br/><br/>However, you can do this:<br/><br/><pre><code>x = cast(item&#46;value * &#46;5, int)<br/>y = cast(item&#46;value *1&#46;5, int)<br/>item&#46;price = GetRandomInt(x, y)</code></pre><br/>to cast the values back to an integer. <br/><br/>Assuming your value is originally an integer, you might be better off doing this instead:<br/><br/><pre><code>x = item&#46;value/2<br/>y = item&#46;value*3/2<br/>item&#46;price = GetRandomInt(x, y)</code></pre><br/>which is only integer arithmetic and avoids the need for a cast.",
      "PostDate": "2015-05-16T00:26:30+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36050",
      "UserId": 0,
      "Username": "lightwriter",
      "UserAvatar": null,
      "UserGravatar": "4361dea0f293c64bea42cb1253ce25d4",
      "EditableText": "ok, thanks!",
      "EditableFormat": "bbcode",
      "HTML": "ok, thanks!",
      "PostDate": "2015-05-16T06:32:35+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36051",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;jaynabonne&quot;:2z7y1pk7]Not like that. GetRandomInt takes ints...[/quote:2z7y1pk7]\nOops, had not spotted they were not ints.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>Not like that. GetRandomInt takes ints...</blockquote><br/>Oops, had not spotted they were not ints.",
      "PostDate": "2015-05-16T08:44:37+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36054",
      "UserId": 0,
      "Username": "lightwriter",
      "UserAvatar": null,
      "UserGravatar": "4361dea0f293c64bea42cb1253ce25d4",
      "EditableText": "Why am I getting this error?\n[code:1jj9z12r]Error running script&#058; Error compiling expression 'stockeditem&#46;stockvalue &lt; stockeditem&#46;value + 25'&#58; CompareElement&#58; Operation 'LessThan' is not defined for types 'String' and 'Int32'[/code:1jj9z12r]\nstockeditem is a defined variable and I checked to see if the attributes were set to integer for the objects that the variable stands for and they are...\ndoes GetDirectChildren turn all attributes into strings?  If so,is there a work around for this?",
      "EditableFormat": "bbcode",
      "HTML": "Why am I getting this error?<br/><pre><code>Error running script&#058; Error compiling expression 'stockeditem&#46;stockvalue &lt; stockeditem&#46;value + 25'&#58; CompareElement&#58; Operation 'LessThan' is not defined for types 'String' and 'Int32'</code></pre><br/>stockeditem is a defined variable and I checked to see if the attributes were set to integer for the objects that the variable stands for and they are...<br/>does GetDirectChildren turn all attributes into strings?  If so,is there a work around for this?",
      "PostDate": "2015-05-16T17:10:26+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36056",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "The error is saying that stockeditem.stockvalue is a string. Perhaps you assigned it a value in your script somewhere? Attributes morph to the type you assign to them. Even if the attribute is an integer at startup, if you assign a string to it at some point in your code, it will then be a string. You can see the current attribute values by using the debugger.\n\n(And, no, GetDirectChildren doesn't turn attributes into strings. Only you can do that. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> )",
      "EditableFormat": "bbcode",
      "HTML": "The error is saying that stockeditem.stockvalue is a string. Perhaps you assigned it a value in your script somewhere? Attributes morph to the type you assign to them. Even if the attribute is an integer at startup, if you assign a string to it at some point in your code, it will then be a string. You can see the current attribute values by using the debugger.<br/><br/>(And, no, GetDirectChildren doesn't turn attributes into strings. Only you can do that. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> )",
      "PostDate": "2015-05-16T18:00:56+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36062",
      "UserId": 0,
      "Username": "lightwriter",
      "UserAvatar": null,
      "UserGravatar": "4361dea0f293c64bea42cb1253ce25d4",
      "EditableText": "I almost got it working, now I want to exclude the player so they don't get moved.\n[code:3gs5des1]foreach (stockeditem, GetDirectChildren(myshop)) \n[/code:3gs5des1]\nI'm basically making a game where you own a shop and get stock by buying from other shops where they stock randomly generated items at random price values that change as time moves on.",
      "EditableFormat": "bbcode",
      "HTML": "I almost got it working, now I want to exclude the player so they don't get moved.<br/><pre><code>foreach (stockeditem, GetDirectChildren(myshop)) <br/></code></pre><br/>I'm basically making a game where you own a shop and get stock by buying from other shops where they stock randomly generated items at random price values that change as time moves on.",
      "PostDate": "2015-05-17T04:47:06+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36064",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "to move your items (Objects) in 'myshop' (Room Object) but not your 'player' Player Object:\n\nfull logic-conceptual actual (but impractical) example:\n\n[code:ckdsofr0]foreach (stockeditem, GetDirectChildren(myshop)) {\n  if (not stockeditem&#46;name = &quot;player&quot;) {\n    stockeditem&#46;parent = your_destination_Object's_name\n    msg (stockeditem&#46;name + &quot; is transferred to&#46;&#46;&#46;&quot;)\n    // or, if you give them aliases&#58; msg (stockeditem&#46;alias + &quot; is transferred to&#46;&#46;&#46;&quot;)\n  } else if (stockeditem&#46;name = &quot;player&quot;) {\n    msg (&quot;You're not an item, so you're not transferred to &#46;&#46;&#46;&#46;&quot;)\n  }\n}[/code:ckdsofr0]\n\nlogic-practical actual example (we don't need to say that the 'player' isn't transferred, only need to transfer the items and to inform the person of it):\n\n[code:ckdsofr0]foreach (stockeditem, GetDirectChildren(myshop)) {\n  if (not stockeditem&#46;name = &quot;player&quot;) {\n    stockeditem&#46;parent = your_destination_Object's_name\n    msg (stockeditem&#46;name + &quot; is transferred to&#46;&#46;&#46;&quot;)\n    // or, if you give them aliases&#58; msg (stockeditem&#46;alias + &quot; is transferred to&#46;&#46;&#46;&quot;)\n  }\n}[/code:ckdsofr0]\n\nor, maybe~probably you don't even want to inform the person of it (as it is an underlying game functionality):\n\n[code:ckdsofr0]foreach (stockeditem, GetDirectChildren(myshop)) {\n  if (not stockeditem&#46;name = &quot;player&quot;) {\n    stockeditem&#46;parent = your_destination_Object's_name\n  }\n}[/code:ckdsofr0]",
      "EditableFormat": "bbcode",
      "HTML": "to move your items (Objects) in 'myshop' (Room Object) but not your 'player' Player Object:<br/><br/>full logic-conceptual actual (but impractical) example:<br/><br/><pre><code>foreach (stockeditem, GetDirectChildren(myshop)) {<br/>  if (not stockeditem&#46;name = &quot;player&quot;) {<br/>    stockeditem&#46;parent = your_destination_Object's_name<br/>    msg (stockeditem&#46;name + &quot; is transferred to&#46;&#46;&#46;&quot;)<br/>    // or, if you give them aliases&#58; msg (stockeditem&#46;alias + &quot; is transferred to&#46;&#46;&#46;&quot;)<br/>  } else if (stockeditem&#46;name = &quot;player&quot;) {<br/>    msg (&quot;You're not an item, so you're not transferred to &#46;&#46;&#46;&#46;&quot;)<br/>  }<br/>}</code></pre><br/><br/>logic-practical actual example (we don't need to say that the 'player' isn't transferred, only need to transfer the items and to inform the person of it):<br/><br/><pre><code>foreach (stockeditem, GetDirectChildren(myshop)) {<br/>  if (not stockeditem&#46;name = &quot;player&quot;) {<br/>    stockeditem&#46;parent = your_destination_Object's_name<br/>    msg (stockeditem&#46;name + &quot; is transferred to&#46;&#46;&#46;&quot;)<br/>    // or, if you give them aliases&#58; msg (stockeditem&#46;alias + &quot; is transferred to&#46;&#46;&#46;&quot;)<br/>  }<br/>}</code></pre><br/><br/>or, maybe~probably you don't even want to inform the person of it (as it is an underlying game functionality):<br/><br/><pre><code>foreach (stockeditem, GetDirectChildren(myshop)) {<br/>  if (not stockeditem&#46;name = &quot;player&quot;) {<br/>    stockeditem&#46;parent = your_destination_Object's_name<br/>  }<br/>}</code></pre>",
      "PostDate": "2015-05-17T07:12:28+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36066",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "[quote:200od96w] if (not stockeditem.name = &quot;player&quot;) {[/quote:200od96w]\n\nYou can also just do:\n\n[code:200od96w]if (not stockeditem = player) {[/code:200od96w]\nor if you have a different pov object:\n\n[code:200od96w]if (not stockeditem = game&#46;pov) {[/code:200od96w]",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p> if (not stockeditem.name = &quot;player&quot;) {</p></blockquote><br/><br/>You can also just do:<br/><br/><pre><code>if (not stockeditem = player) {</code></pre><br/>or if you have a different pov object:<br/><br/><pre><code>if (not stockeditem = game&#46;pov) {</code></pre>",
      "PostDate": "2015-05-17T09:14:37+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36072",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "Another thing to consider is if you plan to have any object that isn't a player or stock item in the shop at any point. If that can happen it will probably be better to just save the items to a list as you stock them and for the item removal just go down the list and put them back in stock instead of trying to manually exclude any non-items in the shop.",
      "EditableFormat": "bbcode",
      "HTML": "Another thing to consider is if you plan to have any object that isn't a player or stock item in the shop at any point. If that can happen it will probably be better to just save the items to a list as you stock them and for the item removal just go down the list and put them back in stock instead of trying to manually exclude any non-items in the shop.",
      "PostDate": "2015-05-17T16:45:53+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36074",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "You could also inherit all stockable items from a type (e.g. &quot;stockable&quot;) and then use DoesInherit to see if they're in the right category.",
      "EditableFormat": "bbcode",
      "HTML": "You could also inherit all stockable items from a type (e.g. &quot;stockable&quot;) and then use DoesInherit to see if they're in the right category.",
      "PostDate": "2015-05-17T19:40:08+01:00",
      "LastEditDate": null
    }
  ]
}
