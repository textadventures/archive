{
  "Topic": {
    "TopicId": "3432",
    "ForumId": "10",
    "Title": "Appending/fusing projects",
    "LastUpdated": "2013-02-03T13:49:02+00:00",
    "ReplyCount": 9
  },
  "Posts": [
    {
      "PostId": "22543",
      "UserId": 0,
      "Username": "Ceresbane",
      "UserAvatar": null,
      "UserGravatar": "849312662c3cdb96e935fae6fe3727d9",
      "EditableText": "I want to make several games and then later fuse them all together. Making new exits that connect them together.\nThat way I don't have to play the whole freakin game to test the game.\n\nIs there a way to do this? Or must I really play the whole game each time? If you can't fuse game files is there a way to skip to specific parts of the game?",
      "EditableFormat": "bbcode",
      "HTML": "I want to make several games and then later fuse them all together. Making new exits that connect them together.<br/>That way I don't have to play the whole freakin game to test the game.<br/><br/>Is there a way to do this? Or must I really play the whole game each time? If you can't fuse game files is there a way to skip to specific parts of the game?",
      "PostDate": "2013-02-01T14:32:21+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "22545",
      "UserId": 0,
      "Username": "BTownTKD",
      "UserAvatar": null,
      "UserGravatar": "8724aa47446c1ed0516acd4c1f642bd5",
      "EditableText": "Under the covers, Quest project files are just elaborate XML.  You can copy/paste the XML code (rooms and objects) from separate game files into a &quot;Main&quot; project.  You can also include separate files as references, which is actually how the core functionality is included in every game, in the first place.  There are many ways to partition your game into multiple files.\n\nFor debugging purposes, you could simply create a &quot;temporary&quot; player object, place him in whichever room you want, and give him whatever items you want.",
      "EditableFormat": "bbcode",
      "HTML": "Under the covers, Quest project files are just elaborate XML.  You can copy/paste the XML code (rooms and objects) from separate game files into a &quot;Main&quot; project.  You can also include separate files as references, which is actually how the core functionality is included in every game, in the first place.  There are many ways to partition your game into multiple files.<br/><br/>For debugging purposes, you could simply create a &quot;temporary&quot; player object, place him in whichever room you want, and give him whatever items you want.",
      "PostDate": "2013-02-01T14:52:23+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "22547",
      "UserId": 0,
      "Username": "Ceresbane",
      "UserAvatar": null,
      "UserGravatar": "849312662c3cdb96e935fae6fe3727d9",
      "EditableText": "[quote=&quot;BTownTKD&quot;:w04el014]Under the covers, Quest project files are just elaborate XML.  You can copy/paste the XML code (rooms and objects) from separate game files into a &quot;Main&quot; project.  You can also include separate files as references, which is actually how the core functionality is included in every game, in the first place.  There are many ways to partition your game into multiple files.\n\nFor debugging purposes, you could simply create a &quot;temporary&quot; player object, place him in whichever room you want, and give him whatever items you want.[/quote:w04el014]\n\nthat has potential of jumbling up files of which one has to have the joy of reorganising. Which potentially might be longer than just starting it all from scratch.\n\nBecause when quest crashes. It does not like the game file anymore and will not load the game, even if you want to go in and debug it.\n\nI'd much prefer to have quest have a &quot;macro&quot; view where. A game can be put into order.\n\ne.g. when you play the game. It doesn't load the whole project.\n\nIt loads that singular part/game and when that single part is finished. It loads the next part/game in the given sequence.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>BTownTKD wrote:</cite>Under the covers, Quest project files are just elaborate XML.  You can copy/paste the XML code (rooms and objects) from separate game files into a &quot;Main&quot; project.  You can also include separate files as references, which is actually how the core functionality is included in every game, in the first place.  There are many ways to partition your game into multiple files.<br/><br/>For debugging purposes, you could simply create a &quot;temporary&quot; player object, place him in whichever room you want, and give him whatever items you want.</blockquote><br/><br/>that has potential of jumbling up files of which one has to have the joy of reorganising. Which potentially might be longer than just starting it all from scratch.<br/><br/>Because when quest crashes. It does not like the game file anymore and will not load the game, even if you want to go in and debug it.<br/><br/>I'd much prefer to have quest have a &quot;macro&quot; view where. A game can be put into order.<br/><br/>e.g. when you play the game. It doesn't load the whole project.<br/><br/>It loads that singular part/game and when that single part is finished. It loads the next part/game in the given sequence.",
      "PostDate": "2013-02-01T15:07:18+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "22549",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "You could have all your game parts in library files.\n\nProbably best to create each one in isolation (as Quest itself cannot edit a library, you would need to do that with a text editor), then convert it to a library, and link to it from the master.",
      "EditableFormat": "bbcode",
      "HTML": "You could have all your game parts in library files.<br/><br/>Probably best to create each one in isolation (as Quest itself cannot edit a library, you would need to do that with a text editor), then convert it to a library, and link to it from the master.",
      "PostDate": "2013-02-01T15:52:18+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "22553",
      "UserId": 0,
      "Username": "Ceresbane",
      "UserAvatar": null,
      "UserGravatar": "849312662c3cdb96e935fae6fe3727d9",
      "EditableText": "What's a library file?",
      "EditableFormat": "bbcode",
      "HTML": "What's a library file?",
      "PostDate": "2013-02-01T17:02:05+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "22556",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "One thing to note, which I ran into (and consider it still a bit of a bug, though that was debated): if you have rooms or objects in libraries which have a parent in the main game file, Quest will pull those objects into the main game file when you save (even though they're still in the library), which means the game won't load any more until you go in and delete the duplicate definitions.\n\nSo if you want to break your game topology up into separate libraries, be sure to set any references to rooms or objects which are in the main game file via scripts.\n\nA library is a separate .aslx file which is included into the main game file via an &lt;include&gt; element. See:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Include_element\">http://quest5.net/wiki/Include_element</a><!-- m -->\n\nThe library itself is wrapped in a library XML element. See:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Library_element\">http://quest5.net/wiki/Library_element</a><!-- m -->\n\nIf you'd like an example, let us know.\n\nAlso, as far as testing goes, note that you can start the player off in whatever room you want. So even if your entire game is in one file, you can still start out in a specific part of it. (Or you could make a &quot;teleport&quot; debugging command that takes you directly to a room...)",
      "EditableFormat": "bbcode",
      "HTML": "One thing to note, which I ran into (and consider it still a bit of a bug, though that was debated): if you have rooms or objects in libraries which have a parent in the main game file, Quest will pull those objects into the main game file when you save (even though they're still in the library), which means the game won't load any more until you go in and delete the duplicate definitions.<br/><br/>So if you want to break your game topology up into separate libraries, be sure to set any references to rooms or objects which are in the main game file via scripts.<br/><br/>A library is a separate .aslx file which is included into the main game file via an &lt;include&gt; element. See:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Include_element\">http://quest5.net/wiki/Include_element</a><!-- m --><br/><br/>The library itself is wrapped in a library XML element. See:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Library_element\">http://quest5.net/wiki/Library_element</a><!-- m --><br/><br/>If you'd like an example, let us know.<br/><br/>Also, as far as testing goes, note that you can start the player off in whatever room you want. So even if your entire game is in one file, you can still start out in a specific part of it. (Or you could make a &quot;teleport&quot; debugging command that takes you directly to a room...)",
      "PostDate": "2013-02-01T22:50:13+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "22560",
      "UserId": 0,
      "Username": "homeeman",
      "UserAvatar": null,
      "UserGravatar": "4c7b0e689de0b974bfe447478a40fb60",
      "EditableText": "What I found to be the easiest way to do things was to make a &quot;developer command.&quot;\n\nMake a command that moves the pov object to some central room (for me, I had five sections in the game, and each section was just a room that contained all the rooms in the game, like folders).  I had a single word command (you could use &quot;teleport&quot; or something harder to guess in case you forget to remove it) that took me to the first section and I connected all the different sections with exits.\n\nWhen I started the game up I typed in my command, walked to the section of the game I wanted to test, used a second command that moved me to the room I typed in afterward (I believe it was &quot;beam in #object#) and tested it from there.\n\nThat might sound like a lot, but it's really, really easy and it's a great way to get around your game without having to mutilate it and then splice it back together.",
      "EditableFormat": "bbcode",
      "HTML": "What I found to be the easiest way to do things was to make a &quot;developer command.&quot;<br/><br/>Make a command that moves the pov object to some central room (for me, I had five sections in the game, and each section was just a room that contained all the rooms in the game, like folders).  I had a single word command (you could use &quot;teleport&quot; or something harder to guess in case you forget to remove it) that took me to the first section and I connected all the different sections with exits.<br/><br/>When I started the game up I typed in my command, walked to the section of the game I wanted to test, used a second command that moved me to the room I typed in afterward (I believe it was &quot;beam in #object#) and tested it from there.<br/><br/>That might sound like a lot, but it's really, really easy and it's a great way to get around your game without having to mutilate it and then splice it back together.",
      "PostDate": "2013-02-02T18:41:41+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "22561",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "And you could generate several walkthroughs for each section. If the walkthrough ends in one section you can continue playing there",
      "EditableFormat": "bbcode",
      "HTML": "And you could generate several walkthroughs for each section. If the walkthrough ends in one section you can continue playing there",
      "PostDate": "2013-02-02T19:00:57+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "22570",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;jaynabonne&quot;:bftyka8s]One thing to note, which I ran into (and consider it still a bit of a bug, though that was debated): if you have rooms or objects in libraries which have a parent in the main game file, Quest will pull those objects into the main game file when you save (even though they're still in the library), which means the game won't load any more until you go in and delete the duplicate definitions.\n\nSo if you want to break your game topology up into separate libraries, be sure to set any references to rooms or objects which are in the main game file via scripts.[/quote:bftyka8s]\nCan you explain that? Or link to the discussion? I do not understand how you can have rooms or objects in libraries which have a parent in the main game file.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>One thing to note, which I ran into (and consider it still a bit of a bug, though that was debated): if you have rooms or objects in libraries which have a parent in the main game file, Quest will pull those objects into the main game file when you save (even though they're still in the library), which means the game won't load any more until you go in and delete the duplicate definitions.<br/><br/>So if you want to break your game topology up into separate libraries, be sure to set any references to rooms or objects which are in the main game file via scripts.</blockquote><br/>Can you explain that? Or link to the discussion? I do not understand how you can have rooms or objects in libraries which have a parent in the main game file.",
      "PostDate": "2013-02-03T12:23:20+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "22571",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Instead of nesting them inside the XML, I set a &quot;parent&quot; attribute on the object in the library that referred to the object in the other file. I thought I was being slick, but it just confused things, and then when I saved, it sucked the object into the main XML hierarchy in the main file (well, it duplicated it, with resulting inability to load the saved file).\n\nMy goal was to have my characters broken out into separate library files, as I had anticipated logic, goals, etc for each that I wanted to have neat and modularized. So I included each character file into the main one, but if I specified the character's starting room via a &quot;parent&quot; attribute, then it broke as described above. So I now have a &quot;character init&quot; function that runs through and sets the parent for each character at game start time.",
      "EditableFormat": "bbcode",
      "HTML": "Instead of nesting them inside the XML, I set a &quot;parent&quot; attribute on the object in the library that referred to the object in the other file. I thought I was being slick, but it just confused things, and then when I saved, it sucked the object into the main XML hierarchy in the main file (well, it duplicated it, with resulting inability to load the saved file).<br/><br/>My goal was to have my characters broken out into separate library files, as I had anticipated logic, goals, etc for each that I wanted to have neat and modularized. So I included each character file into the main one, but if I specified the character's starting room via a &quot;parent&quot; attribute, then it broke as described above. So I now have a &quot;character init&quot; function that runs through and sets the parent for each character at game start time.",
      "PostDate": "2013-02-03T13:49:02+00:00",
      "LastEditDate": null
    }
  ]
}
