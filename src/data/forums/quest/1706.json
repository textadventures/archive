{
  "Topic": {
    "TopicId": "1706",
    "ForumId": "10",
    "Title": "multiplayer objects",
    "LastUpdated": "2007-07-05T20:37:05+01:00",
    "ReplyCount": 1
  },
  "Posts": [
    {
      "PostId": "13462",
      "UserId": 0,
      "Username": "omegix",
      "UserAvatar": null,
      "UserGravatar": "cd18c3c4843cfe007fd3fd29179a3b6f",
      "EditableText": "Hello, I'm exploring QDK and hoping someone can help me.\r\n\r\nI would like to create objects in a multiplayer game that once the player picks up the object, the object will still be available for another logged in player.\r\n\r\nI was thinking that I could write a script for the object so that when it is picked up it is also cloned back into the room it's in.  It looks like if I do this, I'll have to write a script for each object, and most of the objects in the game will be like this.  \r\n\r\nDoes anyone know of other ways to accomplish cloned / re-spawned objects \r\nwithout having to write a new script for each individual object?",
      "EditableFormat": "bbcode",
      "HTML": "Hello, I'm exploring QDK and hoping someone can help me.<br/><br/>I would like to create objects in a multiplayer game that once the player picks up the object, the object will still be available for another logged in player.<br/><br/>I was thinking that I could write a script for the object so that when it is picked up it is also cloned back into the room it's in.  It looks like if I do this, I'll have to write a script for each object, and most of the objects in the game will be like this.  <br/><br/>Does anyone know of other ways to accomplish cloned / re-spawned objects <br/>without having to write a new script for each individual object?",
      "PostDate": "2007-07-04T21:58:52+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13464",
      "UserId": 0,
      "Username": "Elexxorine",
      "UserAvatar": null,
      "UserGravatar": "a220ee44d8fe2f07029cf1f61b98bf40",
      "EditableText": "Hey. Welcome to quest and stuff. Cloning objects can be done in a few ways. One way is to have an tiem storage room, and create a script that grabs the needed one from there and pops it in the playable world when needed. Onre it's dropped or destroyed or whatever it goes back there. You may also what to create another room for storing a back-up copy of the items so if there isn't one in the storage room it clones one and uses that. In my game I went much further and had the object disappear back to the storage after it was picked up and had objects named after the player's username keep a record of your items as a property. Because if you haven't noticed already, if two people log in they're given player id's in the order that they joined the game. Variables and such get indexed with their number. But if player 1 logs out and a new pecrson joins, he's called player one and gets all the variables that the old player one had. I can provide you with some scripts to add to your game for the cloning and storing and such, but it'll be in asl as it's much harder to program in QDK. But it's dead simple to put a chunk of asl into the game.\r\n\r\nAlso with your original idea of cloning it back when it's picked up, you don't need a script on each item but to create a custom command, which now can be done as a verb. So you create a new verb called 'pick up' or 'take' and put the croning script in there along with some code to give it to the player and it'll be much easier. <!-- s:D --><img src=\"{SMILIES_PATH}/icon_e_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\r\n\r\nHope this helps, if you have any more questions just ask me.",
      "EditableFormat": "bbcode",
      "HTML": "Hey. Welcome to quest and stuff. Cloning objects can be done in a few ways. One way is to have an tiem storage room, and create a script that grabs the needed one from there and pops it in the playable world when needed. Onre it's dropped or destroyed or whatever it goes back there. You may also what to create another room for storing a back-up copy of the items so if there isn't one in the storage room it clones one and uses that. In my game I went much further and had the object disappear back to the storage after it was picked up and had objects named after the player's username keep a record of your items as a property. Because if you haven't noticed already, if two people log in they're given player id's in the order that they joined the game. Variables and such get indexed with their number. But if player 1 logs out and a new pecrson joins, he's called player one and gets all the variables that the old player one had. I can provide you with some scripts to add to your game for the cloning and storing and such, but it'll be in asl as it's much harder to program in QDK. But it's dead simple to put a chunk of asl into the game.<br/><br/>Also with your original idea of cloning it back when it's picked up, you don't need a script on each item but to create a custom command, which now can be done as a verb. So you create a new verb called 'pick up' or 'take' and put the croning script in there along with some code to give it to the player and it'll be much easier. <!-- s:D --><img src=\"{SMILIES_PATH}/icon_e_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>Hope this helps, if you have any more questions just ask me.",
      "PostDate": "2007-07-05T20:37:05+01:00",
      "LastEditDate": null
    }
  ]
}
