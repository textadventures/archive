{
  "Topic": {
    "TopicId": "wrja5ioyieiboir3nwifbw",
    "ForumId": "10",
    "Title": "Thoughts on 'undo'",
    "LastUpdated": "2020-10-03T15:17:28.8913877Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "65eb663f-fd86-4fb1-856d-46a0c15e9afe",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've been thinking a little about the way 'undo' works.\r\n\r\nFirst off, I'm wondering if you might sometimes want a menu (the `ShowMenu` kind) to be undone. I'm sure there are circumstances where you might want a menu that the player can choose from, and then if they enter \"undo\" they would want to go back to the menu.\r\n\r\nSo how about something like this:\r\n```\r\n<function name=\"AllowUndo\" parameters=\"title, params, script\">\r\n  game.undoabletitle = title\r\n  game.undoablescript = script\r\n  game.undoableparams = params\r\n  start transaction (game.pov.currentcommand)\r\n  invoke (script, params)\r\n  game.undoabletitle = null\r\n  game.undoablescript = null\r\n  game.undoableparams = null\r\n</function>\r\n\r\n<function name=\"UndoableMenu\" parameters=\"title, options, cancel, script\">\r\n  params = QuickParams (\"title\", title, \"options\", options, \"cancel\", cancel)\r\n  dictionary add (params, \"script\", script)\r\n  AllowUndo (\"menu choice: \"+title, params) {\r\n    ShowMenu (title, options, cancel, script)\r\n  }\r\n</function>\r\n\r\n<command name=\"undo\">\r\n  <pattern type=\"string\">[undo]</pattern>\r\n  <script>\r\n    // should be a test here to see if the game has started\r\n    undo\r\n    game.suppressturnscripts = true\r\n    if (GetBoolean (game, \"gridmap\")){\r\n      Grid_DrawPlayerInRoom (game.pov.parent)\r\n    }\r\n    JS.updateLocation(CapFirst(GetDisplayName(game.pov.parent)))\r\n    if (HasScript (game, \"undoablescript\")) {\r\n      if (HasString (game, \"undoabletitle\")) {\r\n        msg (\"Undone \"+game.undoabletitle)\r\n      }\r\n      invoke (game.undoablescript, game.undoableparams)\r\n      game.undoabletitle = null\r\n      game.undoablescript = null\r\n      game.undoableparams = null\r\n    }\r\n    else if (HasString (game.pov, \"currentcommand\")) {\r\n      msg (\"Undoing command: \" + game.pov.currentcommand)\r\n    }\r\n  </script>\r\n  <isundo/>\r\n</command>\r\n```\r\n\r\nThe function `AllowUndo` is basically `invoke`, but means that the next use of \"undo\" will go back to the point immediately before running that script.\r\n`UndoableMenu` takes the same parameters as `ShowMenu`, but if the player enters \"undo\" afterwards, it will redisplay the menu.\r\n\r\nThis modified 'undo' command also makes sure to update the location bar at the top of the screen (which the current one doesn't do), and displays \"Undoing command: go north\" or \"Undoing menu: What would you like to buy?\" or similar, so it's easier for the player to know what they're doing.\r\n\r\nI think there should be a better way to do this, but I'm having trouble thinking of it. This is a rough first attempt.",
      "EditableFormat": "markdown",
      "HTML": "<p>I've been thinking a little about the way 'undo' works.</p>\n<p>First off, I'm wondering if you might sometimes want a menu (the <code>ShowMenu</code> kind) to be undone. I'm sure there are circumstances where you might want a menu that the player can choose from, and then if they enter \"undo\" they would want to go back to the menu.</p>\n<p>So how about something like this:</p>\n<pre><code>&lt;function name=\"AllowUndo\" parameters=\"title, params, script\"&gt;\n  game.undoabletitle = title\n  game.undoablescript = script\n  game.undoableparams = params\n  start transaction (game.pov.currentcommand)\n  invoke (script, params)\n  game.undoabletitle = null\n  game.undoablescript = null\n  game.undoableparams = null\n&lt;/function&gt;\n\n&lt;function name=\"UndoableMenu\" parameters=\"title, options, cancel, script\"&gt;\n  params = QuickParams (\"title\", title, \"options\", options, \"cancel\", cancel)\n  dictionary add (params, \"script\", script)\n  AllowUndo (\"menu choice: \"+title, params) {\n    ShowMenu (title, options, cancel, script)\n  }\n&lt;/function&gt;\n\n&lt;command name=\"undo\"&gt;\n  &lt;pattern type=\"string\"&gt;[undo]&lt;/pattern&gt;\n  &lt;script&gt;\n    // should be a test here to see if the game has started\n    undo\n    game.suppressturnscripts = true\n    if (GetBoolean (game, \"gridmap\")){\n      Grid_DrawPlayerInRoom (game.pov.parent)\n    }\n    JS.updateLocation(CapFirst(GetDisplayName(game.pov.parent)))\n    if (HasScript (game, \"undoablescript\")) {\n      if (HasString (game, \"undoabletitle\")) {\n        msg (\"Undone \"+game.undoabletitle)\n      }\n      invoke (game.undoablescript, game.undoableparams)\n      game.undoabletitle = null\n      game.undoablescript = null\n      game.undoableparams = null\n    }\n    else if (HasString (game.pov, \"currentcommand\")) {\n      msg (\"Undoing command: \" + game.pov.currentcommand)\n    }\n  &lt;/script&gt;\n  &lt;isundo/&gt;\n&lt;/command&gt;\n</code></pre>\n<p>The function <code>AllowUndo</code> is basically <code>invoke</code>, but means that the next use of \"undo\" will go back to the point immediately before running that script.<br>\n<code>UndoableMenu</code> takes the same parameters as <code>ShowMenu</code>, but if the player enters \"undo\" afterwards, it will redisplay the menu.</p>\n<p>This modified 'undo' command also makes sure to update the location bar at the top of the screen (which the current one doesn't do), and displays \"Undoing command: go north\" or \"Undoing menu: What would you like to buy?\" or similar, so it's easier for the player to know what they're doing.</p>\n<p>I think there should be a better way to do this, but I'm having trouble thinking of it. This is a rough first attempt.</p>\n\n",
      "PostDate": "2020-10-03T15:17:28.8913877Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
