{
  "Topic": {
    "TopicId": "exmashopf0gisb1yrpuqua",
    "ForumId": "10",
    "Title": "Line break in typewritter text. [SOLVED]",
    "LastUpdated": "2019-10-06T14:20:40.8057495Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "1e44f8cd-d772-446b-9c58-cd105b388ca0",
      "UserId": 439484,
      "Username": "CodeKrafter",
      "AvatarUrl": "https://i.imgur.com/bxGmae3b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "`<br>` was giving me an error in type writter text, I wasn't quite sure what to do, and when I switched it to an expression rather than message, it switches back.\r\n\r\n This is what fixed it. First enable advanced scripts, then go to the UI initialization scrip, add a javascript box and paste this into it:\r\n\r\n`eval(\"$(function(){function t(t){this.each(function(){$(this).data({typewritertext:$(this).html()}).attr({typewriterspeed:t}).html('')}),a||n()}var a,n=function(){var t=$('[typewriterspeed]'),e=0;if(t.length){var r=(t=t.first()).data('typewritertext');if(r)if(r.match(/^\\\\s*</)){var i=r.split('>')[0];if(t.append(i+'>'),i.match(/\\\\s*<(a|b|i|u|s|font|em|strong|span|div)(\\\\s.*)?(?<!\\\\/)$/i)){var s=t.children().last();s.attr('typewriterspeed',t.attr('typewriterspeed')),t.removeAttr('typewriterspeed'),t=s}else if(i.match(/\\\\s*<\\\\/(a|b|i|u|s|em|strong|span|div)(\\\\s*)$/i)){var p=t.parent();p.attr('typewriterspeed',t.attr('typewriterspeed')),t.removeAttr('typewriterspeed'),t=p}t.data('typewritertext',r.substr(i.length+1))}else t.append(r.substr(0,1)),e=t.attr('typewriterspeed'),t.data('typewritertext',r.substr(1));else t.removeData('typewritertext').removeAttr('typewriterspeed');e?a=setTimeout(n,e):n()}else a=0},e=$.fn.typewriter;enableRichTypewriter=function(){$.fn.typewriter=t},disableRichTypewriter=function(){$.fn.typewriter=e}});\")`\r\n\r\nHopefully this helps anyone who wants to add html elements such as color or `<br>`.\r\nWhile doing this means you cannot run two type writter texts at the same time, you can switch between the different modes using the javascript commands `JS.enableRichTypewriter()` and `JS.disableRichTypewriter()`.\r\n\r\nThanks to mrangel for the solution.",
      "EditableFormat": "markdown",
      "HTML": "<p><code>&lt;br&gt;</code> was giving me an error in type writter text, I wasn't quite sure what to do, and when I switched it to an expression rather than message, it switches back.</p>\n<p>This is what fixed it. First enable advanced scripts, then go to the UI initialization scrip, add a javascript box and paste this into it:</p>\n<p><code>eval(\"$(function(){function t(t){this.each(function(){$(this).data({typewritertext:$(this).html()}).attr({typewriterspeed:t}).html('')}),a||n()}var a,n=function(){var t=$('[typewriterspeed]'),e=0;if(t.length){var r=(t=t.first()).data('typewritertext');if(r)if(r.match(/^\\\\s*&lt;/)){var i=r.split('&gt;')[0];if(t.append(i+'&gt;'),i.match(/\\\\s*&lt;(a|b|i|u|s|font|em|strong|span|div)(\\\\s.*)?(?&lt;!\\\\/)$/i)){var s=t.children().last();s.attr('typewriterspeed',t.attr('typewriterspeed')),t.removeAttr('typewriterspeed'),t=s}else if(i.match(/\\\\s*&lt;\\\\/(a|b|i|u|s|em|strong|span|div)(\\\\s*)$/i)){var p=t.parent();p.attr('typewriterspeed',t.attr('typewriterspeed')),t.removeAttr('typewriterspeed'),t=p}t.data('typewritertext',r.substr(i.length+1))}else t.append(r.substr(0,1)),e=t.attr('typewriterspeed'),t.data('typewritertext',r.substr(1));else t.removeData('typewritertext').removeAttr('typewriterspeed');e?a=setTimeout(n,e):n()}else a=0},e=$.fn.typewriter;enableRichTypewriter=function(){$.fn.typewriter=t},disableRichTypewriter=function(){$.fn.typewriter=e}});\")</code></p>\n<p>Hopefully this helps anyone who wants to add html elements such as color or <code>&lt;br&gt;</code>.<br>\nWhile doing this means you cannot run two type writter texts at the same time, you can switch between the different modes using the javascript commands <code>JS.enableRichTypewriter()</code> and <code>JS.disableRichTypewriter()</code>.</p>\n<p>Thanks to mrangel for the solution.</p>\n\n",
      "PostDate": "2019-10-06T14:20:40.8057495Z",
      "LastEditDate": "2019-10-25T01:12:53.9703632Z",
      "link": null
    },
    {
      "PostId": "f10e75c9-5575-41f8-80d0-01224e34e1cb",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The typewriter effect uses `.text()` to get the text to process. That means it will discard any HTML inside the message, including the `<br/>`.\r\n\r\nFairly recently I posted a script that would modify the typewriter function so that you can call it multiple times and the lines appear one after the other, so possibly you could use that rather than putting a `<br>` in the text. Or I could modify it so that it'll catch line breaks.\r\n\r\nEDIT: Went looking for my last post on the subject, but I can't find it. Really wish this forum had a decent search feature.",
      "EditableFormat": "markdown",
      "HTML": "<p>The typewriter effect uses <code>.text()</code> to get the text to process. That means it will discard any HTML inside the message, including the <code>&lt;br/&gt;</code>.</p>\n<p>Fairly recently I posted a script that would modify the typewriter function so that you can call it multiple times and the lines appear one after the other, so possibly you could use that rather than putting a <code>&lt;br&gt;</code> in the text. Or I could modify it so that it'll catch line breaks.</p>\n<p>EDIT: Went looking for my last post on the subject, but I can't find it. Really wish this forum had a decent search feature.</p>\n\n",
      "PostDate": "2019-10-06T15:22:35.6513024Z",
      "LastEditDate": "2019-10-06T15:51:00.0788893Z",
      "link": null
    },
    {
      "PostId": "3a0d89a2-043c-449b-93b0-72bc5fb2b5c9",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OK, a first attempt at this. A modified typewriter function which should work with `<br>` (and `<img>`). Just taking the function I'd previously written, and adding a nasty kludge to make it treat XML tags as a single character. Note that this will still break on tags with contents, so you can't use it with `<b>` or `<em>`.\r\n```\r\n$(function () {\r\n  var typewriter_timer;\r\n  var typewriter_iterator = function () {\r\n    var $ele = $('span[typewriterspeed]');\r\n    if ($ele.length) {\r\n      $ele = $ele.first();\r\n      var text = $ele.data('typewritertext');\r\n      var speed = $ele.attr('typewriterspeed');\r\n      if (text) {\r\n        if (text.match(/^\\s*</)) {\r\n          var tag = text.split('>')[0];\r\n          $ele.append(tag+'>');\r\n          $ele.data('typewritertext', text.substr(tag.length+1));\r\n        } else {\r\n          $ele.append(text.substr(0, 1));\r\n          $ele.data('typewritertext', text.substr(1));\r\n        }\r\n      } else {\r\n        $ele.removeData('typewritertext').removeAttr('typewriterspeed');\r\n      }\r\n      typewriter_timer = setTimeout(typewriter_iterator, speed);\r\n    } else {\r\n      typewriter_timer = 0;\r\n    }\r\n  };\r\n  $.fn.typewriter = function (speed) {\r\n    this.each(function () {\r\n      $(this).data({typewritertext: $(this).html()}).attr({typewriterspeed: speed}).html('');\r\n    });\r\n    if (!typewriter_timer) {\r\n      typewriter_iterator();\r\n    }\r\n  };\r\n});\r\n```\r\n\r\nOr a form that you can paste into your UI Initialisation script:\r\n```\r\nJS.eval(\"$(function(){var a,p=function(){var t=$('span[typewriterspeed]');if(t.length){var e=(t=t.first()).data('typewritertext'),r=t.attr('typewriterspeed');if(e)if(e.match(/^\\\\s*</)){var i=e.split('>')[0];t.append(i+'>'),t.data('typewritertext',e.substr(i.length+1))}else t.append(e.substr(0,1)),t.data('typewritertext',e.substr(1));else t.removeData('typewritertext').removeAttr('typewriterspeed');a=setTimeout(p,r)}else a=0};$.fn.typewriter=function(t){this.each(function(){$(this).data({typewritertext:$(this).html()}).attr({typewriterspeed:t}).html('')}),a||p()}});\")\r\n```\r\n\r\nEDIT: Silly mistake. Hope there aren't any more, but not in a position to test it rn.",
      "EditableFormat": "markdown",
      "HTML": "<p>OK, a first attempt at this. A modified typewriter function which should work with <code>&lt;br&gt;</code> (and <code>&lt;img&gt;</code>). Just taking the function I'd previously written, and adding a nasty kludge to make it treat XML tags as a single character. Note that this will still break on tags with contents, so you can't use it with <code>&lt;b&gt;</code> or <code>&lt;em&gt;</code>.</p>\n<pre><code>$(function () {\n  var typewriter_timer;\n  var typewriter_iterator = function () {\n    var $ele = $('span[typewriterspeed]');\n    if ($ele.length) {\n      $ele = $ele.first();\n      var text = $ele.data('typewritertext');\n      var speed = $ele.attr('typewriterspeed');\n      if (text) {\n        if (text.match(/^\\s*&lt;/)) {\n          var tag = text.split('&gt;')[0];\n          $ele.append(tag+'&gt;');\n          $ele.data('typewritertext', text.substr(tag.length+1));\n        } else {\n          $ele.append(text.substr(0, 1));\n          $ele.data('typewritertext', text.substr(1));\n        }\n      } else {\n        $ele.removeData('typewritertext').removeAttr('typewriterspeed');\n      }\n      typewriter_timer = setTimeout(typewriter_iterator, speed);\n    } else {\n      typewriter_timer = 0;\n    }\n  };\n  $.fn.typewriter = function (speed) {\n    this.each(function () {\n      $(this).data({typewritertext: $(this).html()}).attr({typewriterspeed: speed}).html('');\n    });\n    if (!typewriter_timer) {\n      typewriter_iterator();\n    }\n  };\n});\n</code></pre>\n<p>Or a form that you can paste into your UI Initialisation script:</p>\n<pre><code>JS.eval(\"$(function(){var a,p=function(){var t=$('span[typewriterspeed]');if(t.length){var e=(t=t.first()).data('typewritertext'),r=t.attr('typewriterspeed');if(e)if(e.match(/^\\\\s*&lt;/)){var i=e.split('&gt;')[0];t.append(i+'&gt;'),t.data('typewritertext',e.substr(i.length+1))}else t.append(e.substr(0,1)),t.data('typewritertext',e.substr(1));else t.removeData('typewritertext').removeAttr('typewriterspeed');a=setTimeout(p,r)}else a=0};$.fn.typewriter=function(t){this.each(function(){$(this).data({typewritertext:$(this).html()}).attr({typewriterspeed:t}).html('')}),a||p()}});\")\n</code></pre>\n<p>EDIT: Silly mistake. Hope there aren't any more, but not in a position to test it rn.</p>\n\n",
      "PostDate": "2019-10-06T16:09:06.0258892Z",
      "LastEditDate": "2019-10-06T21:53:03.6070249Z",
      "link": null
    },
    {
      "PostId": "79501f42-4b69-409d-b3f1-21a6c93d163d",
      "UserId": 439484,
      "Username": "CodeKrafter",
      "AvatarUrl": "https://i.imgur.com/bxGmae3b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I am very new at functions, so I don't truely know where to put all this code. What do I name the function, what are the parameters? Where do I call it?",
      "EditableFormat": "markdown",
      "HTML": "<p>I am very new at functions, so I don't truely know where to put all this code. What do I name the function, what are the parameters? Where do I call it?</p>\n\n",
      "PostDate": "2019-10-06T16:22:27.8345911Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "90e9f936-4961-4221-a1f7-15b0965645d8",
      "UserId": 439484,
      "Username": "CodeKrafter",
      "AvatarUrl": "https://i.imgur.com/bxGmae3b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Lemme try testing it first though, maybe I'll figure it out. Everywhere I put it, it says there's an internal error.",
      "EditableFormat": "markdown",
      "HTML": "<p>Lemme try testing it first though, maybe I'll figure it out. Everywhere I put it, it says there's an internal error.</p>\n\n",
      "PostDate": "2019-10-06T16:22:56.4097367Z",
      "LastEditDate": "2019-10-06T16:26:07.9895702Z",
      "link": null
    },
    {
      "PostId": "1a4c50ce-feef-43ad-b16d-5a5ca85f7c97",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's Javascript code, not Quest code.\r\n\r\nLike most Javascript modifications, you'll want to wrap it in a `JS.eval` block and put it in the UI initialisation script (on the \"Advanced Scripts\" tab of the game object). The second version has a little bit of Quest code wrapped around it, and is reduced to one line ready to paste into code view.\r\n\r\nThat is designed to replace the existing `$.fn.typewriter` function, which is called by Quest's `TextFX_Typewriter` core function. So once you put that line in the UI initialisation script, you can include `<br/>` with the built-in typewriter function.\r\n\r\n(I've tested it now; there was a missing `''` in the script I posted above, but I'm going to edit that to fix it right now)",
      "EditableFormat": "markdown",
      "HTML": "<p>That's Javascript code, not Quest code.</p>\n<p>Like most Javascript modifications, you'll want to wrap it in a <code>JS.eval</code> block and put it in the UI initialisation script (on the \"Advanced Scripts\" tab of the game object). The second version has a little bit of Quest code wrapped around it, and is reduced to one line ready to paste into code view.</p>\n<p>That is designed to replace the existing <code>$.fn.typewriter</code> function, which is called by Quest's <code>TextFX_Typewriter</code> core function. So once you put that line in the UI initialisation script, you can include <code>&lt;br/&gt;</code> with the built-in typewriter function.</p>\n<p>(I've tested it now; there was a missing <code>''</code> in the script I posted above, but I'm going to edit that to fix it right now)</p>\n\n",
      "PostDate": "2019-10-06T21:52:10.2108064Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "78536f42-2bb5-4fdc-96ed-4ed2e7134e68",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It's bugging me that my script doesn't work properly. So here's a version which should also let you put bold, underline, colours, etc. in typewriter text.\r\n```\r\n$(function () {\r\n  var typewriter_timer;\r\n  var typewriter_iterator = function () {\r\n    var $ele = $('[typewriterspeed]');\r\n    if ($ele.length) {\r\n      $ele = $ele.first();\r\n      var text = $ele.data('typewritertext');\r\n      var speed = $ele.attr('typewriterspeed');\r\n      if (text) {\r\n        if (text.match(/^\\s*</)) {\r\n          var tag = text.split('>')[0];\r\n          $ele.append(tag+'>');\r\n          if (tag.match(/\\s*<(a|b|i|u|font|em|strong|span|div)(\\s.*)?(?<!\\/)$/i)) {\r\n            var $new = $ele.children().last();\r\n            $new.attr('typewriterspeed', $ele.attr('typewriterspeed'));\r\n            $ele.removeAttr('typewriterspeed');\r\n            $ele = $new;\r\n          } else if (tag.match(/\\s*<\\/(a|b|i|em|strong|span|div)(\\s*)$/i)) {\r\n            var $old = $ele.parent();\r\n            $old.attr('typewriterspeed', $ele.attr('typewriterspeed'));\r\n            $ele.removeAttr('typewriterspeed');\r\n            $ele = $old;\r\n          }\r\n          $ele.data('typewritertext', text.substr(tag.length+1));\r\n        } else {\r\n          $ele.append(text.substr(0, 1));\r\n          $ele.data('typewritertext', text.substr(1));\r\n        }\r\n      } else {\r\n        $ele.removeData('typewritertext').removeAttr('typewriterspeed');\r\n      }\r\n      typewriter_timer = setTimeout(typewriter_iterator, speed);\r\n    } else {\r\n      typewriter_timer = 0;\r\n    }\r\n  };\r\n  $.fn.typewriter = function (speed) {\r\n    this.each(function () {\r\n      $(this).data({typewritertext: $(this).html()}).attr({typewriterspeed: speed}).html('');\r\n    });\r\n    if (!typewriter_timer) {\r\n      typewriter_iterator();\r\n    }\r\n  };\r\n});\r\n```\r\n\r\nOr compressed and wrapped in Quest code ready for insertion into the UI Initialisation script:\r\n```\r\nJS.eval(\"$(function(){var p,n=function(){var t=$('[typewriterspeed]');if(t.length){var e=(t=t.first()).data('typewritertext'),r=t.attr('typewriterspeed');if(e)if(e.match(/^\\\\s*</)){var i=e.split('>')[0];if(t.append(i+'>'),i.match(/\\\\s*<(a|b|i|u|font|em|strong|span|div)(\\\\s.*)?(?<!\\\\/)$/i)){var s=t.children().last();s.attr('typewriterspeed',t.attr('typewriterspeed')),t.removeAttr('typewriterspeed'),t=s}else if(i.match(/\\\\s*<\\\\/(a|b|i|em|strong|span|div)(\\\\s*)$/i)){var a=t.parent();a.attr('typewriterspeed',t.attr('typewriterspeed')),t.removeAttr('typewriterspeed'),t=a}t.data('typewritertext',e.substr(i.length+1))}else t.append(e.substr(0,1)),t.data('typewritertext',e.substr(1));else t.removeData('typewritertext').removeAttr('typewriterspeed');p=setTimeout(n,r)}else p=0};$.fn.typewriter=function(t){this.each(function(){$(this).data({typewritertext:$(this).html()}).attr({typewriterspeed:t}).html('')}),p||n()}});\")\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>It's bugging me that my script doesn't work properly. So here's a version which should also let you put bold, underline, colours, etc. in typewriter text.</p>\n<pre><code>$(function () {\n  var typewriter_timer;\n  var typewriter_iterator = function () {\n    var $ele = $('[typewriterspeed]');\n    if ($ele.length) {\n      $ele = $ele.first();\n      var text = $ele.data('typewritertext');\n      var speed = $ele.attr('typewriterspeed');\n      if (text) {\n        if (text.match(/^\\s*&lt;/)) {\n          var tag = text.split('&gt;')[0];\n          $ele.append(tag+'&gt;');\n          if (tag.match(/\\s*&lt;(a|b|i|u|font|em|strong|span|div)(\\s.*)?(?&lt;!\\/)$/i)) {\n            var $new = $ele.children().last();\n            $new.attr('typewriterspeed', $ele.attr('typewriterspeed'));\n            $ele.removeAttr('typewriterspeed');\n            $ele = $new;\n          } else if (tag.match(/\\s*&lt;\\/(a|b|i|em|strong|span|div)(\\s*)$/i)) {\n            var $old = $ele.parent();\n            $old.attr('typewriterspeed', $ele.attr('typewriterspeed'));\n            $ele.removeAttr('typewriterspeed');\n            $ele = $old;\n          }\n          $ele.data('typewritertext', text.substr(tag.length+1));\n        } else {\n          $ele.append(text.substr(0, 1));\n          $ele.data('typewritertext', text.substr(1));\n        }\n      } else {\n        $ele.removeData('typewritertext').removeAttr('typewriterspeed');\n      }\n      typewriter_timer = setTimeout(typewriter_iterator, speed);\n    } else {\n      typewriter_timer = 0;\n    }\n  };\n  $.fn.typewriter = function (speed) {\n    this.each(function () {\n      $(this).data({typewritertext: $(this).html()}).attr({typewriterspeed: speed}).html('');\n    });\n    if (!typewriter_timer) {\n      typewriter_iterator();\n    }\n  };\n});\n</code></pre>\n<p>Or compressed and wrapped in Quest code ready for insertion into the UI Initialisation script:</p>\n<pre><code>JS.eval(\"$(function(){var p,n=function(){var t=$('[typewriterspeed]');if(t.length){var e=(t=t.first()).data('typewritertext'),r=t.attr('typewriterspeed');if(e)if(e.match(/^\\\\s*&lt;/)){var i=e.split('&gt;')[0];if(t.append(i+'&gt;'),i.match(/\\\\s*&lt;(a|b|i|u|font|em|strong|span|div)(\\\\s.*)?(?&lt;!\\\\/)$/i)){var s=t.children().last();s.attr('typewriterspeed',t.attr('typewriterspeed')),t.removeAttr('typewriterspeed'),t=s}else if(i.match(/\\\\s*&lt;\\\\/(a|b|i|em|strong|span|div)(\\\\s*)$/i)){var a=t.parent();a.attr('typewriterspeed',t.attr('typewriterspeed')),t.removeAttr('typewriterspeed'),t=a}t.data('typewritertext',e.substr(i.length+1))}else t.append(e.substr(0,1)),t.data('typewritertext',e.substr(1));else t.removeData('typewritertext').removeAttr('typewriterspeed');p=setTimeout(n,r)}else p=0};$.fn.typewriter=function(t){this.each(function(){$(this).data({typewritertext:$(this).html()}).attr({typewriterspeed:t}).html('')}),p||n()}});\")\n</code></pre>\n\n",
      "PostDate": "2019-10-06T22:24:47.4109389Z",
      "LastEditDate": "2019-10-07T00:04:28.4914663Z",
      "link": null
    },
    {
      "PostId": "cd44340c-ea13-45b2-ae6c-4ab5b0758e56",
      "UserId": 439484,
      "Username": "CodeKrafter",
      "AvatarUrl": "https://i.imgur.com/bxGmae3b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```Error running script: Error evaluating expression 'GetAllChildObjects(room)': GetAllChildObjects function expected object parameter but was passed 'null'\r\nError running script: Error evaluating expression 'GetAllChildObjects(room)': GetAllChildObjects function expected object parameter but was passed 'null'\r\nError running script: Error evaluating expression 'GetBoolean(room, \"transparent\")': GetBoolean function expected object parameter but was passed 'null'\r\nError running script: Error evaluating expression 'GetAllChildObjects(newParent)': GetAllChildObjects function expected ```\r\n\r\nO.o What did I do wrong? I took the second one and wrapped it in quest code...",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>Error running script: Error evaluating expression 'GetAllChildObjects(room)': GetAllChildObjects function expected object parameter but was passed 'null'\nError running script: Error evaluating expression 'GetBoolean(room, \"transparent\")': GetBoolean function expected object parameter but was passed 'null'\nError running script: Error evaluating expression 'GetAllChildObjects(newParent)': GetAllChildObjects function expected ```\n\nO.o What did I do wrong? I took the second one and wrapped it in quest code...\n</code></pre>\n\n",
      "PostDate": "2019-10-06T22:30:01.1640434Z",
      "LastEditDate": "2019-10-06T22:38:46.2647881Z",
      "link": null
    },
    {
      "PostId": "95a60eab-abe9-4519-a1f6-94f59cc0128e",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's an odd set of errors. Looks like what I'd expect to see if you did `RemoveObject (player)` or similar.\r\n\r\nCan you share the game so I can take a look, see if I can spot the problem?",
      "EditableFormat": "markdown",
      "HTML": "<p>That's an odd set of errors. Looks like what I'd expect to see if you did <code>RemoveObject (player)</code> or similar.</p>\n<p>Can you share the game so I can take a look, see if I can spot the problem?</p>\n\n",
      "PostDate": "2019-10-07T00:08:21.5942968Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c7fc1b78-ca4c-4cff-a8d0-6a67a4245e4b",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I can get you this close...\r\nBut it needs a different \"wait\" command...\r\n```\r\nT1 = \"This is a typewriter test...\"\r\nT2 = \"with 2 lines??? \"\r\nT3 = \"Maybe.\"\r\nTextFX_Typewriter (T1, 100)\r\nwait {\r\n  TextFX_Typewriter (T2, 100)\r\n  wait {\r\n    TextFX_Typewriter (T3, 100)\r\n    // msg (\"waiting.\")\r\n  }\r\n}\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I can get you this close...<br>\nBut it needs a different \"wait\" command...</p>\n<pre><code>T1 = \"This is a typewriter test...\"\nT2 = \"with 2 lines??? \"\nT3 = \"Maybe.\"\nTextFX_Typewriter (T1, 100)\nwait {\n  TextFX_Typewriter (T2, 100)\n  wait {\n    TextFX_Typewriter (T3, 100)\n    // msg (\"waiting.\")\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2019-10-07T00:36:37.2910403Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2aa0187b-bad8-4511-b9aa-886dadc4958b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@CodeKrafter:\r\n\r\nJust double checked. The errors you pasted are a result of the player object not being in a room when Quest attempts to get a list of visible objects (which it does every turn).\r\n\r\nHopefully that's a separate issue from the typewriter thing.\r\n\r\n@DarkLizerd\r\nThat's one solution, but means that the player has to press a key.\r\nThe solution I posted in another thread (<a href=\"http://textadventures.co.uk/forum/quest/topic/f__c07kymeaqyruu0znduq/beginners-problems\">Beginners Problems</a>) would allow you to reduce that to:\r\n```\r\nT1 = \"This is a typewriter test...\"\r\nT2 = \"with 2 lines??? \"\r\nT3 = \"Maybe.\"\r\nTextFX_Typewriter (T1, 100)\r\nTextFX_Typewriter (T2, 100)\r\nTextFX_Typewriter (T3, 100)\r\n```\r\nwhile with the script I posted above (which I've now tested to confirm that it works as designed) you can still do it like that, or you can do:\r\n```\r\nTextFX_Typewriter (\"This is a typewriter test...<br>with <b>3</b> lines??? <br>Maybe.\", 100)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>@CodeKrafter:</p>\n<p>Just double checked. The errors you pasted are a result of the player object not being in a room when Quest attempts to get a list of visible objects (which it does every turn).</p>\n<p>Hopefully that's a separate issue from the typewriter thing.</p>\n<p>@DarkLizerd<br>\nThat's one solution, but means that the player has to press a key.<br>\nThe solution I posted in another thread (<a href=\"http://textadventures.co.uk/forum/quest/topic/f__c07kymeaqyruu0znduq/beginners-problems\">Beginners Problems</a>) would allow you to reduce that to:</p>\n<pre><code>T1 = \"This is a typewriter test...\"\nT2 = \"with 2 lines??? \"\nT3 = \"Maybe.\"\nTextFX_Typewriter (T1, 100)\nTextFX_Typewriter (T2, 100)\nTextFX_Typewriter (T3, 100)\n</code></pre>\n<p>while with the script I posted above (which I've now tested to confirm that it works as designed) you can still do it like that, or you can do:</p>\n<pre><code>TextFX_Typewriter (\"This is a typewriter test...&lt;br&gt;with &lt;b&gt;3&lt;/b&gt; lines??? &lt;br&gt;Maybe.\", 100)\n</code></pre>\n\n",
      "PostDate": "2019-10-07T08:46:50.1439188Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2d48fedb-8f42-4443-a513-cc016c279c0e",
      "UserId": 439484,
      "Username": "CodeKrafter",
      "AvatarUrl": "https://i.imgur.com/bxGmae3b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Alrighty, now that I put the player in a room (I'm pretty dumb), it's working now. Now the only issue I'm having is that two type writer commands cannot work at the same time and it's slow overall. Is there a way to only activate the script when I need it and deactive it as soon as the command with the line break or color is over?",
      "EditableFormat": "markdown",
      "HTML": "<p>Alrighty, now that I put the player in a room (I'm pretty dumb), it's working now. Now the only issue I'm having is that two type writer commands cannot work at the same time and it's slow overall. Is there a way to only activate the script when I need it and deactive it as soon as the command with the line break or color is over?</p>\n\n",
      "PostDate": "2019-10-07T11:01:38.8521844Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bc00e7f5-214a-4aa9-8a68-3f5a93507854",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> two type writer commands cannot work at the same time\r\n\r\nThat was what someone asked for originally. If you want to allow newlines within a typewriter block, but not run one at a time, I can probably adjust the script to work like that. I'll take a look at it when I get home.\r\n\r\n> it's slow overall\r\n\r\nI can't replicate this issue. For me it runs at the same speed as the built-in typewriter function, and topjs isn't showing any heavy processing. Have you tried adjusting the 'speed' parameter?\r\n\r\nAh… the start and end of each line are counting as characters, so there's a little pause. That could be improved.\r\n\r\n```\r\n$(function () {\r\n  var typewriter_timer;\r\n  var typewriter_iterator = function () {\r\n    var $ele = $('[typewriterspeed]');\r\n    var speed = 0;\r\n    if ($ele.length) {\r\n      $ele = $ele.first();\r\n      var text = $ele.data('typewritertext');\r\n      if (text) {\r\n        if (text.match(/^\\s*</)) {\r\n          var tag = text.split('>')[0];\r\n          $ele.append(tag+'>');\r\n          if (tag.match(/\\s*<(a|b|i|u|s|font|em|strong|span|div)(\\s.*)?(?<!\\/)$/i)) {\r\n            var $new = $ele.children().last();\r\n            $new.attr('typewriterspeed', $ele.attr('typewriterspeed'));\r\n            $ele.removeAttr('typewriterspeed');\r\n            $ele = $new;\r\n          } else if (tag.match(/\\s*<\\/(a|b|i|u|s|em|strong|span|div)(\\s*)$/i)) {\r\n            var $old = $ele.parent();\r\n            $old.attr('typewriterspeed', $ele.attr('typewriterspeed'));\r\n            $ele.removeAttr('typewriterspeed');\r\n            $ele = $old;\r\n          }\r\n          $ele.data('typewritertext', text.substr(tag.length+1));\r\n        } else {\r\n          $ele.append(text.substr(0, 1));\r\n          speed = $ele.attr('typewriterspeed');\r\n          $ele.data('typewritertext', text.substr(1));\r\n        }\r\n      } else {\r\n        $ele.removeData('typewritertext').removeAttr('typewriterspeed');\r\n      }\r\n      if (speed) {\r\n        typewriter_timer = setTimeout(typewriter_iterator, speed);\r\n      } else {\r\n        typewriter_iterator();\r\n      }\r\n    } else {\r\n      typewriter_timer = 0;\r\n    }\r\n  };\r\n  $.fn.typewriter = function (speed) {\r\n    this.each(function () {\r\n      $(this).data({typewritertext: $(this).html()}).attr({typewriterspeed: speed}).html('');\r\n    });\r\n    if (!typewriter_timer) {\r\n      typewriter_iterator();\r\n    }\r\n  };\r\n});\r\n```\r\nor Questified:\r\n```\r\nJS.eval (\"$(function(){var p,n=function(){var t=$('[typewriterspeed]'),e=0;if(t.length){var r=(t=t.first()).data('typewritertext');if(r)if(r.match(/^\\\\s*</)){var i=r.split('>')[0];if(t.append(i+'>'),i.match(/\\\\s*<(a|b|i|u|s|font|em|strong|span|div)(\\\\s.*)?(?<!\\\\/)$/i)){var s=t.children().last();s.attr('typewriterspeed',t.attr('typewriterspeed')),t.removeAttr('typewriterspeed'),t=s}else if(i.match(/\\\\s*<\\\\/(a|b|i|u|s|em|strong|span|div)(\\\\s*)$/i)){var a=t.parent();a.attr('typewriterspeed',t.attr('typewriterspeed')),t.removeAttr('typewriterspeed'),t=a}t.data('typewritertext',r.substr(i.length+1))}else t.append(r.substr(0,1)),e=t.attr('typewriterspeed'),t.data('typewritertext',r.substr(1));else t.removeData('typewritertext').removeAttr('typewriterspeed');e?p=setTimeout(n,e):n()}else p=0};$.fn.typewriter=function(t){this.each(function(){$(this).data({typewritertext:$(this).html()}).attr({typewriterspeed:t}).html('')}),p||n()}});\")\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>two type writer commands cannot work at the same time</p>\n</blockquote>\n<p>That was what someone asked for originally. If you want to allow newlines within a typewriter block, but not run one at a time, I can probably adjust the script to work like that. I'll take a look at it when I get home.</p>\n<blockquote>\n<p>it's slow overall</p>\n</blockquote>\n<p>I can't replicate this issue. For me it runs at the same speed as the built-in typewriter function, and topjs isn't showing any heavy processing. Have you tried adjusting the 'speed' parameter?</p>\n<p>Ah… the start and end of each line are counting as characters, so there's a little pause. That could be improved.</p>\n<pre><code>$(function () {\n  var typewriter_timer;\n  var typewriter_iterator = function () {\n    var $ele = $('[typewriterspeed]');\n    var speed = 0;\n    if ($ele.length) {\n      $ele = $ele.first();\n      var text = $ele.data('typewritertext');\n      if (text) {\n        if (text.match(/^\\s*&lt;/)) {\n          var tag = text.split('&gt;')[0];\n          $ele.append(tag+'&gt;');\n          if (tag.match(/\\s*&lt;(a|b|i|u|s|font|em|strong|span|div)(\\s.*)?(?&lt;!\\/)$/i)) {\n            var $new = $ele.children().last();\n            $new.attr('typewriterspeed', $ele.attr('typewriterspeed'));\n            $ele.removeAttr('typewriterspeed');\n            $ele = $new;\n          } else if (tag.match(/\\s*&lt;\\/(a|b|i|u|s|em|strong|span|div)(\\s*)$/i)) {\n            var $old = $ele.parent();\n            $old.attr('typewriterspeed', $ele.attr('typewriterspeed'));\n            $ele.removeAttr('typewriterspeed');\n            $ele = $old;\n          }\n          $ele.data('typewritertext', text.substr(tag.length+1));\n        } else {\n          $ele.append(text.substr(0, 1));\n          speed = $ele.attr('typewriterspeed');\n          $ele.data('typewritertext', text.substr(1));\n        }\n      } else {\n        $ele.removeData('typewritertext').removeAttr('typewriterspeed');\n      }\n      if (speed) {\n        typewriter_timer = setTimeout(typewriter_iterator, speed);\n      } else {\n        typewriter_iterator();\n      }\n    } else {\n      typewriter_timer = 0;\n    }\n  };\n  $.fn.typewriter = function (speed) {\n    this.each(function () {\n      $(this).data({typewritertext: $(this).html()}).attr({typewriterspeed: speed}).html('');\n    });\n    if (!typewriter_timer) {\n      typewriter_iterator();\n    }\n  };\n});\n</code></pre>\n<p>or Questified:</p>\n<pre><code>JS.eval (\"$(function(){var p,n=function(){var t=$('[typewriterspeed]'),e=0;if(t.length){var r=(t=t.first()).data('typewritertext');if(r)if(r.match(/^\\\\s*&lt;/)){var i=r.split('&gt;')[0];if(t.append(i+'&gt;'),i.match(/\\\\s*&lt;(a|b|i|u|s|font|em|strong|span|div)(\\\\s.*)?(?&lt;!\\\\/)$/i)){var s=t.children().last();s.attr('typewriterspeed',t.attr('typewriterspeed')),t.removeAttr('typewriterspeed'),t=s}else if(i.match(/\\\\s*&lt;\\\\/(a|b|i|u|s|em|strong|span|div)(\\\\s*)$/i)){var a=t.parent();a.attr('typewriterspeed',t.attr('typewriterspeed')),t.removeAttr('typewriterspeed'),t=a}t.data('typewritertext',r.substr(i.length+1))}else t.append(r.substr(0,1)),e=t.attr('typewriterspeed'),t.data('typewritertext',r.substr(1));else t.removeData('typewritertext').removeAttr('typewriterspeed');e?p=setTimeout(n,e):n()}else p=0};$.fn.typewriter=function(t){this.each(function(){$(this).data({typewritertext:$(this).html()}).attr({typewriterspeed:t}).html('')}),p||n()}});\")\n</code></pre>\n\n",
      "PostDate": "2019-10-07T13:04:12.1341888Z",
      "LastEditDate": "2019-10-07T13:12:05.8143624Z",
      "link": null
    },
    {
      "PostId": "2f506fee-7369-4308-b6df-cbc926eaf2df",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Is there a way to only activate the script when I need it and deactive it as soon as the command with the line break or color is over?\r\n\r\nShould be able to do that.\r\n\r\n```\r\n$(function () {\r\n  var typewriter_timer;\r\n  var typewriter_iterator = function () {\r\n    var $ele = $('[typewriterspeed]');\r\n    var speed = 0;\r\n    if ($ele.length) {\r\n      $ele = $ele.first();\r\n      var text = $ele.data('typewritertext');\r\n      if (text) {\r\n        if (text.match(/^\\s*</)) {\r\n          var tag = text.split('>')[0];\r\n          $ele.append(tag+'>');\r\n          if (tag.match(/\\s*<(a|b|i|u|s|font|em|strong|span|div)(\\s.*)?(?<!\\/)$/i)) {\r\n            var $new = $ele.children().last();\r\n            $new.attr('typewriterspeed', $ele.attr('typewriterspeed'));\r\n            $ele.removeAttr('typewriterspeed');\r\n            $ele = $new;\r\n          } else if (tag.match(/\\s*<\\/(a|b|i|u|s|em|strong|span|div)(\\s*)$/i)) {\r\n            var $old = $ele.parent();\r\n            $old.attr('typewriterspeed', $ele.attr('typewriterspeed'));\r\n            $ele.removeAttr('typewriterspeed');\r\n            $ele = $old;\r\n          }\r\n          $ele.data('typewritertext', text.substr(tag.length+1));\r\n        } else {\r\n          $ele.append(text.substr(0, 1));\r\n          speed = $ele.attr('typewriterspeed');\r\n          $ele.data('typewritertext', text.substr(1));\r\n        }\r\n      } else {\r\n        $ele.removeData('typewritertext').removeAttr('typewriterspeed');\r\n      }\r\n      if (speed) {\r\n        typewriter_timer = setTimeout(typewriter_iterator, speed);\r\n      } else {\r\n        typewriter_iterator();\r\n      }\r\n    } else {\r\n      typewriter_timer = 0;\r\n    }\r\n  };\r\n  var originaltypewriter = $.fn.typewriter;\r\n  var richtypewriter = function (speed) {\r\n    this.each(function () {\r\n      $(this).data({typewritertext: $(this).html()}).attr({typewriterspeed: speed}).html('');\r\n    });\r\n    if (!typewriter_timer) {\r\n      typewriter_iterator();\r\n    }\r\n  };\r\n  enableRichTypewriter = function () { $.fn.typewriter = richtypewriter; };\r\n  disableRichTypewriter = function () { $.fn.typewriter = originaltypewriter; };\r\n});\r\n```\r\nOr in Quest form:\r\n```\r\nJS.eval(\"$(function(){function t(t){this.each(function(){$(this).data({typewritertext:$(this).html()}).attr({typewriterspeed:t}).html('')}),a||n()}var a,n=function(){var t=$('[typewriterspeed]'),e=0;if(t.length){var r=(t=t.first()).data('typewritertext');if(r)if(r.match(/^\\\\s*</)){var i=r.split('>')[0];if(t.append(i+'>'),i.match(/\\\\s*<(a|b|i|u|s|font|em|strong|span|div)(\\\\s.*)?(?<!\\\\/)$/i)){var s=t.children().last();s.attr('typewriterspeed',t.attr('typewriterspeed')),t.removeAttr('typewriterspeed'),t=s}else if(i.match(/\\\\s*<\\\\/(a|b|i|u|s|em|strong|span|div)(\\\\s*)$/i)){var p=t.parent();p.attr('typewriterspeed',t.attr('typewriterspeed')),t.removeAttr('typewriterspeed'),t=p}t.data('typewritertext',r.substr(i.length+1))}else t.append(r.substr(0,1)),e=t.attr('typewriterspeed'),t.data('typewritertext',r.substr(1));else t.removeData('typewritertext').removeAttr('typewriterspeed');e?a=setTimeout(n,e):n()}else a=0},e=$.fn.typewriter;enableRichTypewriter=function(){$.fn.typewriter=t},disableRichTypewriter=function(){$.fn.typewriter=e}});\")\r\n```\r\n\r\n(note that I'm typing code on my phone again, so not able to test these. Sorry for any typos)\r\n\r\nThen you should be able to use the instructions `JS.enableRichTypewriter()` and `JS.disableRichTypewriter()` to switch between my method and the original one as needed.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Is there a way to only activate the script when I need it and deactive it as soon as the command with the line break or color is over?</p>\n</blockquote>\n<p>Should be able to do that.</p>\n<pre><code>$(function () {\n  var typewriter_timer;\n  var typewriter_iterator = function () {\n    var $ele = $('[typewriterspeed]');\n    var speed = 0;\n    if ($ele.length) {\n      $ele = $ele.first();\n      var text = $ele.data('typewritertext');\n      if (text) {\n        if (text.match(/^\\s*&lt;/)) {\n          var tag = text.split('&gt;')[0];\n          $ele.append(tag+'&gt;');\n          if (tag.match(/\\s*&lt;(a|b|i|u|s|font|em|strong|span|div)(\\s.*)?(?&lt;!\\/)$/i)) {\n            var $new = $ele.children().last();\n            $new.attr('typewriterspeed', $ele.attr('typewriterspeed'));\n            $ele.removeAttr('typewriterspeed');\n            $ele = $new;\n          } else if (tag.match(/\\s*&lt;\\/(a|b|i|u|s|em|strong|span|div)(\\s*)$/i)) {\n            var $old = $ele.parent();\n            $old.attr('typewriterspeed', $ele.attr('typewriterspeed'));\n            $ele.removeAttr('typewriterspeed');\n            $ele = $old;\n          }\n          $ele.data('typewritertext', text.substr(tag.length+1));\n        } else {\n          $ele.append(text.substr(0, 1));\n          speed = $ele.attr('typewriterspeed');\n          $ele.data('typewritertext', text.substr(1));\n        }\n      } else {\n        $ele.removeData('typewritertext').removeAttr('typewriterspeed');\n      }\n      if (speed) {\n        typewriter_timer = setTimeout(typewriter_iterator, speed);\n      } else {\n        typewriter_iterator();\n      }\n    } else {\n      typewriter_timer = 0;\n    }\n  };\n  var originaltypewriter = $.fn.typewriter;\n  var richtypewriter = function (speed) {\n    this.each(function () {\n      $(this).data({typewritertext: $(this).html()}).attr({typewriterspeed: speed}).html('');\n    });\n    if (!typewriter_timer) {\n      typewriter_iterator();\n    }\n  };\n  enableRichTypewriter = function () { $.fn.typewriter = richtypewriter; };\n  disableRichTypewriter = function () { $.fn.typewriter = originaltypewriter; };\n});\n</code></pre>\n<p>Or in Quest form:</p>\n<pre><code>JS.eval(\"$(function(){function t(t){this.each(function(){$(this).data({typewritertext:$(this).html()}).attr({typewriterspeed:t}).html('')}),a||n()}var a,n=function(){var t=$('[typewriterspeed]'),e=0;if(t.length){var r=(t=t.first()).data('typewritertext');if(r)if(r.match(/^\\\\s*&lt;/)){var i=r.split('&gt;')[0];if(t.append(i+'&gt;'),i.match(/\\\\s*&lt;(a|b|i|u|s|font|em|strong|span|div)(\\\\s.*)?(?&lt;!\\\\/)$/i)){var s=t.children().last();s.attr('typewriterspeed',t.attr('typewriterspeed')),t.removeAttr('typewriterspeed'),t=s}else if(i.match(/\\\\s*&lt;\\\\/(a|b|i|u|s|em|strong|span|div)(\\\\s*)$/i)){var p=t.parent();p.attr('typewriterspeed',t.attr('typewriterspeed')),t.removeAttr('typewriterspeed'),t=p}t.data('typewritertext',r.substr(i.length+1))}else t.append(r.substr(0,1)),e=t.attr('typewriterspeed'),t.data('typewritertext',r.substr(1));else t.removeData('typewritertext').removeAttr('typewriterspeed');e?a=setTimeout(n,e):n()}else a=0},e=$.fn.typewriter;enableRichTypewriter=function(){$.fn.typewriter=t},disableRichTypewriter=function(){$.fn.typewriter=e}});\")\n</code></pre>\n<p>(note that I'm typing code on my phone again, so not able to test these. Sorry for any typos)</p>\n<p>Then you should be able to use the instructions <code>JS.enableRichTypewriter()</code> and <code>JS.disableRichTypewriter()</code> to switch between my method and the original one as needed.</p>\n\n",
      "PostDate": "2019-10-07T13:16:54.7933391Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ce6aab0f-70be-4d7a-b7dc-3607323243c2",
      "UserId": 439484,
      "Username": "CodeKrafter",
      "AvatarUrl": "https://i.imgur.com/bxGmae3b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you so much, hopefully this will also help out others who want to do the same.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you so much, hopefully this will also help out others who want to do the same.</p>\n\n",
      "PostDate": "2019-10-07T13:32:12.8558254Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0161e38f-b510-491d-a7b3-e5763ccb2837",
      "UserId": 439484,
      "Username": "CodeKrafter",
      "AvatarUrl": "https://i.imgur.com/bxGmae3b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Alright. Now I'm having a new issue. As soon as the player moves to a new room, the typewritter just doesn't show up at all. It doesn't matter if the rich type writter is enabled or not. I've tried eliminating different elements but nothing seems to be the cause. It happens when the game switched from the startup script to the first room's script.",
      "EditableFormat": "markdown",
      "HTML": "<p>Alright. Now I'm having a new issue. As soon as the player moves to a new room, the typewritter just doesn't show up at all. It doesn't matter if the rich type writter is enabled or not. I've tried eliminating different elements but nothing seems to be the cause. It happens when the game switched from the startup script to the first room's script.</p>\n\n",
      "PostDate": "2019-10-14T20:17:16.2808678Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f6798f5e-099d-4c9a-b950-d5b40320b24a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm trying to work out what's the issue there, but I can't see it just by reading through.\r\n\r\nHave you got an example game that I could take a look at?",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm trying to work out what's the issue there, but I can't see it just by reading through.</p>\n<p>Have you got an example game that I could take a look at?</p>\n\n",
      "PostDate": "2019-10-14T21:27:43.3054998Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5fc32be3-6230-4b6d-9bbe-2405e5867d01",
      "UserId": 439484,
      "Username": "CodeKrafter",
      "AvatarUrl": "https://i.imgur.com/bxGmae3b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "https://www.dropbox.com/s/fbyr73o2fxehte4/game.zip?dl=0",
      "EditableFormat": "markdown",
      "HTML": "<p>https://www.dropbox.com/s/fbyr73o2fxehte4/game.zip?dl=0</p>\n\n",
      "PostDate": "2019-10-14T21:50:00.7342001Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9ce591ad-3ebc-45b9-95fd-4916c2ceaf8d",
      "UserId": 439484,
      "Username": "CodeKrafter",
      "AvatarUrl": "https://i.imgur.com/bxGmae3b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Were you able to download it?",
      "EditableFormat": "markdown",
      "HTML": "<p>Were you able to download it?</p>\n\n",
      "PostDate": "2019-10-24T19:36:33.1959122Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fa10a679-ef91-4fcf-b7b0-7ca1b4d9f0e7",
      "UserId": 439484,
      "Username": "CodeKrafter",
      "AvatarUrl": "https://i.imgur.com/bxGmae3b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If this can't be fixed, I'll just go back to normal text.",
      "EditableFormat": "markdown",
      "HTML": "<p>If this can't be fixed, I'll just go back to normal text.</p>\n\n",
      "PostDate": "2019-10-24T19:36:51.3840254Z",
      "LastEditDate": "2019-10-24T19:38:01.4687302Z",
      "link": null
    },
    {
      "PostId": "ff94a771-7057-4a71-a06a-8d6f7b695b20",
      "UserId": 439484,
      "Username": "CodeKrafter",
      "AvatarUrl": "https://i.imgur.com/bxGmae3b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "*suggestion*\r\nmake it so that you can delete comments incase they duplicate.",
      "EditableFormat": "markdown",
      "HTML": "<p><em>suggestion</em><br>\nmake it so that you can delete comments incase they duplicate.</p>\n\n",
      "PostDate": "2019-10-24T19:37:15.3066094Z",
      "LastEditDate": "2019-10-24T19:38:48.1206344Z",
      "link": null
    },
    {
      "PostId": "b213b911-3078-441d-8334-69d90d1678b5",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've been through the code again, but there's nothing I can see that should be causing such a problem.\r\nI'll see if I can make a game with the same problem so I can test it out myself, but my internet is being really sluggish today.\r\n\r\nTesting something like this is really hard without an example game to poke.\r\nI've tried inserting the function into one of my own test games, and the typewriter function occasionally fails to display a line but I can't see any pattern to it. But the same seems to happen with the default typewriter; which leaves me completely confused.\r\n\r\nAdding the function to another, new, project, it seems to work as intended.",
      "EditableFormat": "markdown",
      "HTML": "<p>I've been through the code again, but there's nothing I can see that should be causing such a problem.<br>\nI'll see if I can make a game with the same problem so I can test it out myself, but my internet is being really sluggish today.</p>\n<p>Testing something like this is really hard without an example game to poke.<br>\nI've tried inserting the function into one of my own test games, and the typewriter function occasionally fails to display a line but I can't see any pattern to it. But the same seems to happen with the default typewriter; which leaves me completely confused.</p>\n<p>Adding the function to another, new, project, it seems to work as intended.</p>\n\n",
      "PostDate": "2019-10-24T21:22:19.6475424Z",
      "LastEditDate": "2019-10-24T21:59:28.5317543Z",
      "link": null
    },
    {
      "PostId": "b81b09ef-6212-4368-b0e8-0dae0e062c6b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OK, I've copy-pasted the code from your game into a new one so I can test it, and it seems to be working fine.\r\n\r\nIs your problem when it comes to the line \"testestest\"? Because that's as far as I got testing it, and that seems to be working fine for me.\r\n\r\nIt's worth noting that if you press a key to advance to the next section, it clears the screen and hides the long typewriter intro. If you press a key before it's finished, those typewriters continue running in the background.\r\n\r\nTwo possible ways to fix this.\r\n1. The following line can be run to make the typewriter finish:\r\n```\r\nJS.eval(\"$('[typewriterspeed]').each(function () {$(this).removeAttr('typewriterspeed').append($(this).data('typewritertext'));});\")\r\n```\r\n\r\n2. In the big chunk of javascript, change `$('[typewriterspeed]')` to <code style=\"color: green\">$('[typewriterspeed]:not(.clearedScreen)')</code> so that when it's deciding which is the 'currently running' typewriter line, it ignores any that have been hidden by clearing the screen.",
      "EditableFormat": "markdown",
      "HTML": "<p>OK, I've copy-pasted the code from your game into a new one so I can test it, and it seems to be working fine.</p>\n<p>Is your problem when it comes to the line \"testestest\"? Because that's as far as I got testing it, and that seems to be working fine for me.</p>\n<p>It's worth noting that if you press a key to advance to the next section, it clears the screen and hides the long typewriter intro. If you press a key before it's finished, those typewriters continue running in the background.</p>\n<p>Two possible ways to fix this.</p>\n<ol>\n<li>The following line can be run to make the typewriter finish:</li>\n</ol>\n<pre><code>JS.eval(\"$('[typewriterspeed]').each(function () {$(this).removeAttr('typewriterspeed').append($(this).data('typewritertext'));});\")\n</code></pre>\n<ol start=\"2\">\n<li>In the big chunk of javascript, change <code>$('[typewriterspeed]')</code> to <code style=\"color: green\">$('[typewriterspeed]:not(.clearedScreen)')</code> so that when it's deciding which is the 'currently running' typewriter line, it ignores any that have been hidden by clearing the screen.</li>\n</ol>\n\n",
      "PostDate": "2019-10-24T22:35:24.2411716Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bbed89bd-a216-4a8c-a0ac-b33ab14ff3cc",
      "UserId": 439484,
      "Username": "CodeKrafter",
      "AvatarUrl": "https://i.imgur.com/bxGmae3b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's the issue, now that I know what it is, I can fix it. Thanks.",
      "EditableFormat": "markdown",
      "HTML": "<p>That's the issue, now that I know what it is, I can fix it. Thanks.</p>\n\n",
      "PostDate": "2019-10-25T01:12:24.079269Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
