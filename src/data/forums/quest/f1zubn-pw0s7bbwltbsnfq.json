{
  "Topic": {
    "TopicId": "f1zubn-pw0s7bbwltbsnfq",
    "ForumId": "10",
    "Title": "How do I know if an object is a room?",
    "LastUpdated": "2021-12-08T19:13:01.2758629Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "30696e24-e308-4666-9717-86863d564fbd",
      "UserId": 572090,
      "Username": "Stamm",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9c6782b389dc8c967b2f0b9b8b73dc73?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello all,\r\n\r\nI have a generic function that takes an object as input. And it does not do exactly the same thing if it's passed an item or a room.\r\nI tried using the attribute ```isroom``` but it is removed upon compilation. I now use the attribute ```description``` since it is only filled for rooms but it seems very flimsy.\r\n\r\nIs there another way? Am I missing something obvious?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello all,</p>\n<p>I have a generic function that takes an object as input. And it does not do exactly the same thing if it's passed an item or a room.<br>\nI tried using the attribute <code>isroom</code> but it is removed upon compilation. I now use the attribute <code>description</code> since it is only filled for rooms but it seems very flimsy.</p>\n<p>Is there another way? Am I missing something obvious?</p>\n\n",
      "PostDate": "2021-12-08T19:13:01.2758629Z",
      "LastEditDate": "2021-12-08T19:53:08.3105276Z",
      "link": null
    },
    {
      "PostId": "18308797-020d-4f27-b3a5-c08d87d7101a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The type `editor_room` sets the `isroom` attribute; but that type is removed when the game is published. If you tick and untick the \"is a room\" checkbox in the editor, it should persist in a published game.\r\n\r\nIn general, there isn't a simple option because Quest doesn't see a difference between items and rooms. The core functions distinguish between an item and a room based on whether the player is inside it – because the only room the core cares about is the one you're in (or the one you're entering/leaving).\r\n\r\nSo, if you want to distinguish between the two, you will probably end up creating an attribute or type of your own that you can check for.",
      "EditableFormat": "markdown",
      "HTML": "<p>The type <code>editor_room</code> sets the <code>isroom</code> attribute; but that type is removed when the game is published. If you tick and untick the \"is a room\" checkbox in the editor, it should persist in a published game.</p>\n<p>In general, there isn't a simple option because Quest doesn't see a difference between items and rooms. The core functions distinguish between an item and a room based on whether the player is inside it – because the only room the core cares about is the one you're in (or the one you're entering/leaving).</p>\n<p>So, if you want to distinguish between the two, you will probably end up creating an attribute or type of your own that you can check for.</p>\n\n",
      "PostDate": "2021-12-08T19:44:58.3051878Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b294e813-e7e9-4b5f-8ae2-53bbfa410a02",
      "UserId": 572090,
      "Username": "Stamm",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9c6782b389dc8c967b2f0b9b8b73dc73?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok, thanks for your answer.\r\n\r\n**Follow-up question:** how do I retrieve the current room? It could actually help me.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok, thanks for your answer.</p>\n<p><strong>Follow-up question:</strong> how do I retrieve the current room? It could actually help me.</p>\n\n",
      "PostDate": "2021-12-08T19:56:42.0635388Z",
      "LastEditDate": "2021-12-08T20:00:48.0114298Z",
      "link": null
    },
    {
      "PostId": "a21d7aba-cc73-4fa1-8a8a-287bbf13a061",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Every object has a `parent` attribute, pointing to the object it is inside of.\r\nThe game has a `pov` attribute, which means the object the player is currently controlling.\r\n\r\nSo `game.pov.parent` is the current room.\r\n\r\nThe functions that display the room description use either `game.pov.parent` or `GetNonTransparentParent (game.pov.parent)`. This only makes a difference if the player is inside a transparent container which is also a room. For example, if they're inside a cage in a laboratory, then `game.pov.parent` will be the cage and `GetNonTransparentParent (game.pov.parent)` will give the lab. They can see objects outside the cage, but can't reach them.\r\nIn most games, you don't need to deal with this situation.",
      "EditableFormat": "markdown",
      "HTML": "<p>Every object has a <code>parent</code> attribute, pointing to the object it is inside of.<br>\nThe game has a <code>pov</code> attribute, which means the object the player is currently controlling.</p>\n<p>So <code>game.pov.parent</code> is the current room.</p>\n<p>The functions that display the room description use either <code>game.pov.parent</code> or <code>GetNonTransparentParent (game.pov.parent)</code>. This only makes a difference if the player is inside a transparent container which is also a room. For example, if they're inside a cage in a laboratory, then <code>game.pov.parent</code> will be the cage and <code>GetNonTransparentParent (game.pov.parent)</code> will give the lab. They can see objects outside the cage, but can't reach them.<br>\nIn most games, you don't need to deal with this situation.</p>\n\n",
      "PostDate": "2021-12-09T12:26:23.8195816Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0dbb36b3-e0fc-44ff-bad8-b5cbcd4f6187",
      "UserId": 572090,
      "Username": "Stamm",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9c6782b389dc8c967b2f0b9b8b73dc73?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok, thank you. I think I will use ```GetNonTransparentParent (game.pov.parent)```.\r\n\r\nBut let's imagine a far-fetched scenario. What about if the player is hiding or held in a cupboard, for instance. Both ```game.pov.parent``` and ```GetNonTransparentParent (game.pov.parent)``` will return the cupboard, right? And the game won't be able to display the room description, too?",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok, thank you. I think I will use <code>GetNonTransparentParent (game.pov.parent)</code>.</p>\n<p>But let's imagine a far-fetched scenario. What about if the player is hiding or held in a cupboard, for instance. Both <code>game.pov.parent</code> and <code>GetNonTransparentParent (game.pov.parent)</code> will return the cupboard, right? And the game won't be able to display the room description, too?</p>\n\n",
      "PostDate": "2021-12-09T18:46:02.5903843Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "16b1c402-44d9-4e9f-8c5e-6f1cb6500610",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Both `game.pov.parent` and `GetNonTransparentParent (game.pov.parent)` will return the cupboard, right? And the game won't be able to display the room description, too?\r\n\r\nRight.\r\nThe room description uses GetNonTransparentParent to find the outermost room the player can see. So it will find the cupboard unless the cupboard's `transparent` attribute is set.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Both <code>game.pov.parent</code> and <code>GetNonTransparentParent (game.pov.parent)</code> will return the cupboard, right? And the game won't be able to display the room description, too?</p>\n</blockquote>\n<p>Right.<br>\nThe room description uses GetNonTransparentParent to find the outermost room the player can see. So it will find the cupboard unless the cupboard's <code>transparent</code> attribute is set.</p>\n\n",
      "PostDate": "2021-12-10T00:38:26.9255963Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b6feee85-30c5-448d-b1b9-6941af9fcf5e",
      "UserId": 572090,
      "Username": "Stamm",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9c6782b389dc8c967b2f0b9b8b73dc73?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's a bit weird that the room description works like that...\r\nOk, thanks anyway.",
      "EditableFormat": "markdown",
      "HTML": "<p>That's a bit weird that the room description works like that...<br>\nOk, thanks anyway.</p>\n\n",
      "PostDate": "2021-12-10T08:48:56.6919802Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
