{
  "Topic": {
    "TopicId": "8bcjr2cxgucmucddmoao5q",
    "ForumId": "10",
    "Title": "Example for good use of parameters",
    "LastUpdated": "2016-12-05T12:17:26.8029554Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "9fa6cdb6-f6d4-40c2-822f-b7cf78411225",
      "UserId": 267130,
      "Username": "Xilefenko",
      "AvatarUrl": "http://i.imgur.com/jWsgzi4b.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I just started using functions and it kinda bugs me that there is a Parameter function which I have no idea how to properly use or what it's really for. Could someone give a good example of a function with Parameters? Thanks",
      "EditableFormat": "markdown",
      "HTML": "<p>I just started using functions and it kinda bugs me that there is a Parameter function which I have no idea how to properly use or what it's really for. Could someone give a good example of a function with Parameters? Thanks</p>\n\n",
      "PostDate": "2016-12-05T12:17:26.8029554Z",
      "LastEditDate": null
    },
    {
      "PostId": "04154640-f843-4ae9-91b5-e58de826a4a7",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The `GetBoolean` function takes two parameters, an object and a string. These are values that you can send to the function when you want to use it. Say you have an object called `hat`,  and an attribute that flags if it is worn, \"worn\", you could use the function like this:\r\n```\r\nflag = GetBoolean(hat, \"worn\")\r\n```\r\nUsing parameters means you can use the same function with another attribute of a different object.\r\n\r\nThere is a Wiki article on parameters; the way Quest handles them is typical of most programming languages.\r\nhttps://en.wikipedia.org/wiki/Parameter_(computer_programming)",
      "EditableFormat": "markdown",
      "HTML": "<p>The <code>GetBoolean</code> function takes two parameters, an object and a string. These are values that you can send to the function when you want to use it. Say you have an object called <code>hat</code>,  and an attribute that flags if it is worn, \"worn\", you could use the function like this:</p>\n<pre><code>flag = GetBoolean(hat, \"worn\")\n</code></pre>\n<p>Using parameters means you can use the same function with another attribute of a different object.</p>\n<p>There is a Wiki article on parameters; the way Quest handles them is typical of most programming languages.<br>\nhttps://en.wikipedia.org/wiki/Parameter_(computer_programming)</p>\n\n",
      "PostDate": "2016-12-05T13:03:42.3574167Z",
      "LastEditDate": null
    },
    {
      "PostId": "7076b303-1d3a-4c0a-bc64-9ebf3b8267a7",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "think 'input/output' functions, like in/for math.\r\n\r\nParameters/Arguments ARE your inputs, which will be used by your Function's scripting:\r\n\r\nsimpliest example of Arguments/Parameters:\r\n\r\n```\r\n<function name=\"adder_function\" parameters=\"integer_number_parameter_1,integer_number_parameter_2\" type=\"int\">\r\n  return (integer_number_parameter_1 + integer_number_parameter_2)\r\n</function>\r\n\r\n// scripting example:\r\n\r\ngame.sum_integer_attribute = adder_function (2,7) // the '(2,7)' are the Arguments, they match up with the Parameters\r\n// game.sum_integer_attribute = 2 + 7 = 9\r\n\r\ngame.sum_integer_attribute = adder_function (14,8) // the '(14,8)' are the Arguments, they match up with the Parameters\r\n// game.sum_integer_attribute = 14 + 8 = 22\r\n\r\ngame.int_num_1 = 14\r\ngame.int_num_2 = 8\r\ngame.sum_integer_attribute = adder_function (game.int_num_1,game.int_num_2) // the '(game.int_num_1,game.int_num_2)' are the Arguments, they match up with the Parameters\r\n// game.sum_integer_attribute = 14 + 8 = 22\r\n```\r\n\r\n// -----------------\r\n\r\nhere's another simple example:\r\n\r\n```\r\n<function name=\"my_msg_function\" parameters=\"message_string_parameter\" type=\"string\">\r\n  return (message_string_parameter)\r\n</function>\r\n\r\n// scripting example:\r\n\r\ngame.message_string = my_msg_function (\"hi\")\r\n// game.message_string = \"hi\"\r\n\r\ngame.msg_string = \"hi\"\r\ngame.message_string = my_msg_function (game.msg_string)\r\n// game.message_string = \"hi\"\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>think 'input/output' functions, like in/for math.</p>\n<p>Parameters/Arguments ARE your inputs, which will be used by your Function's scripting:</p>\n<p>simpliest example of Arguments/Parameters:</p>\n<pre><code>&lt;function name=\"adder_function\" parameters=\"integer_number_parameter_1,integer_number_parameter_2\" type=\"int\"&gt;\n  return (integer_number_parameter_1 + integer_number_parameter_2)\n&lt;/function&gt;\n\n// scripting example:\n\ngame.sum_integer_attribute = adder_function (2,7) // the '(2,7)' are the Arguments, they match up with the Parameters\n// game.sum_integer_attribute = 2 + 7 = 9\n\ngame.sum_integer_attribute = adder_function (14,8) // the '(14,8)' are the Arguments, they match up with the Parameters\n// game.sum_integer_attribute = 14 + 8 = 22\n\ngame.int_num_1 = 14\ngame.int_num_2 = 8\ngame.sum_integer_attribute = adder_function (game.int_num_1,game.int_num_2) // the '(game.int_num_1,game.int_num_2)' are the Arguments, they match up with the Parameters\n// game.sum_integer_attribute = 14 + 8 = 22\n</code></pre>\n<p>// -----------------</p>\n<p>here's another simple example:</p>\n<pre><code>&lt;function name=\"my_msg_function\" parameters=\"message_string_parameter\" type=\"string\"&gt;\n  return (message_string_parameter)\n&lt;/function&gt;\n\n// scripting example:\n\ngame.message_string = my_msg_function (\"hi\")\n// game.message_string = \"hi\"\n\ngame.msg_string = \"hi\"\ngame.message_string = my_msg_function (game.msg_string)\n// game.message_string = \"hi\"\n</code></pre>\n\n",
      "PostDate": "2016-12-06T00:54:38.5157579Z",
      "LastEditDate": null
    },
    {
      "PostId": "6cd18541-2751-4b81-9c09-c31c437dc7e5",
      "UserId": 267130,
      "Username": "Xilefenko",
      "AvatarUrl": "http://i.imgur.com/jWsgzi4b.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok thanks\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok thanks</p>\n\n",
      "PostDate": "2016-12-06T15:20:31.8506811Z",
      "LastEditDate": null
    },
    {
      "PostId": "aeaa6d19-831b-4713-868c-363790ba9206",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the Arguments match up with the Parameters in terms of position:\r\n\r\n```\r\nexample_function (argument_position_1,argument_position_2,etc)\r\n\r\n<function name=\"example_function\" parameters=\"parameter_position_1,parameter_position_2,etc\">\r\n  msg (parameter_position_1)\r\n  msg (parameter_position_2)\r\n</function>\r\n\r\n// ----------------------\r\n\r\na conceptual example:\r\n\r\nstring_variable_1 = \"hi\"\r\nstring_variable_2 = \"bye\"\r\n\r\nexample_function (string_variable_1,string_variable_2)\r\n\r\nparameter_position_1 <=== (argument_position_1) string_variable_1 <=== \"hi\"\r\nparameter_position_2 <=== (argument_position_2) string_variable_2 <=== \"bye\"\r\n\r\n<function name=\"example_function\" parameters=\"parameter_position_1,parameter_position_2,etc\">\r\n  msg (parameter_position_1) // msg (parameter_position_1 = argument_position_1/string_variable_1 = \"hi\") // msg (parameter_position_1 = \"hi\") // msg (\"hi\")\r\n  msg (parameter_position_2) // msg (parameter_position_2 = argument_position_2/string_variable_2 = \"bye\") // msg (parameter_position_2 = \"bye\") // msg (\"bye\")\r\n</function>\r\n```\r\n\r\nyou can name your parameters whatever you want, changing the name or keeping it the same. As, you can use the Parameters from a Function for the Arguments in a function call to another Function, keeping the other/next/new/2nd Function's Parameters the same name as the first Function's Parameters' names, or changing them to be named differently. It doesn't matter.\r\n\r\nParameters/Arguments are a way to use inputs within/for a Function's scripting, including transfering those inputs from Function to Function.\r\n\r\nThe Argument is the input, either a direct/literal value or as a VARIABLE, and the matching Parameter is just a Variable for that input (the input/argument is stored/saved into the parameter), which you can then use that Parameter (a Variable) within/for your Function's scripting.",
      "EditableFormat": "markdown",
      "HTML": "<p>the Arguments match up with the Parameters in terms of position:</p>\n<pre><code>example_function (argument_position_1,argument_position_2,etc)\n\n&lt;function name=\"example_function\" parameters=\"parameter_position_1,parameter_position_2,etc\"&gt;\n  msg (parameter_position_1)\n  msg (parameter_position_2)\n&lt;/function&gt;\n\n// ----------------------\n\na conceptual example:\n\nstring_variable_1 = \"hi\"\nstring_variable_2 = \"bye\"\n\nexample_function (string_variable_1,string_variable_2)\n\nparameter_position_1 &lt;=== (argument_position_1) string_variable_1 &lt;=== \"hi\"\nparameter_position_2 &lt;=== (argument_position_2) string_variable_2 &lt;=== \"bye\"\n\n&lt;function name=\"example_function\" parameters=\"parameter_position_1,parameter_position_2,etc\"&gt;\n  msg (parameter_position_1) // msg (parameter_position_1 = argument_position_1/string_variable_1 = \"hi\") // msg (parameter_position_1 = \"hi\") // msg (\"hi\")\n  msg (parameter_position_2) // msg (parameter_position_2 = argument_position_2/string_variable_2 = \"bye\") // msg (parameter_position_2 = \"bye\") // msg (\"bye\")\n&lt;/function&gt;\n</code></pre>\n<p>you can name your parameters whatever you want, changing the name or keeping it the same. As, you can use the Parameters from a Function for the Arguments in a function call to another Function, keeping the other/next/new/2nd Function's Parameters the same name as the first Function's Parameters' names, or changing them to be named differently. It doesn't matter.</p>\n<p>Parameters/Arguments are a way to use inputs within/for a Function's scripting, including transfering those inputs from Function to Function.</p>\n<p>The Argument is the input, either a direct/literal value or as a VARIABLE, and the matching Parameter is just a Variable for that input (the input/argument is stored/saved into the parameter), which you can then use that Parameter (a Variable) within/for your Function's scripting.</p>\n\n",
      "PostDate": "2016-12-07T05:31:58.0095534Z",
      "LastEditDate": "2016-12-07T05:38:17.6270585Z"
    },
    {
      "PostId": "315e2336-0831-4aea-8939-19636e828861",
      "UserId": 267130,
      "Username": "Xilefenko",
      "AvatarUrl": "http://i.imgur.com/jWsgzi4b.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think I understood it. I will play a little bit with it until I fully understand it! Thanks",
      "EditableFormat": "markdown",
      "HTML": "<p>I think I understood it. I will play a little bit with it until I fully understand it! Thanks</p>\n\n",
      "PostDate": "2016-12-07T08:53:44.7748722Z",
      "LastEditDate": null
    }
  ]
}
