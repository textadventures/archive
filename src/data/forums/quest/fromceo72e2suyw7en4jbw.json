{
  "Topic": {
    "TopicId": "fromceo72e2suyw7en4jbw",
    "ForumId": "10",
    "Title": "Possible to wait for a specific keypress to continue?",
    "LastUpdated": "2017-08-20T23:53:02.0658144Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "32d9913d-350f-47b7-95c2-98cdd58df081",
      "UserId": 233695,
      "Username": "Sherlocho",
      "AvatarUrl": "https://secure.gravatar.com/avatar/65edc795308702e40b937f9b96cd3f08?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi.\r\nI'm making pretty liberal use of the Wait function that pauses the game until a keystroke is registered, and I'm wondering if there is a way to restrict this so that only certain keys count as continuing. Right now, pressing pretty much any function key seems to continue the game, which prevents stuff like alt-tabbing in the middle of a scene. I've tried poking around in whatever files I can think of, but I don't really know where to start on this one. \r\n\r\nAny suggestions would be greatly appreciated.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi.<br>\nI'm making pretty liberal use of the Wait function that pauses the game until a keystroke is registered, and I'm wondering if there is a way to restrict this so that only certain keys count as continuing. Right now, pressing pretty much any function key seems to continue the game, which prevents stuff like alt-tabbing in the middle of a scene. I've tried poking around in whatever files I can think of, but I don't really know where to start on this one.</p>\n<p>Any suggestions would be greatly appreciated.</p>\n\n",
      "PostDate": "2017-08-20T23:53:02.0658144Z",
      "LastEditDate": "2017-08-20T23:55:41.0888349Z",
      "link": null
    },
    {
      "PostId": "01b197fb-e4dc-48f8-a196-beb22c2c031d",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Not sure if this will help, and not sure as I haven't tested it.\r\nJust looked up 'wait' command which has the regular expression\r\n^wait$|^z$\r\nAnd also 'WaitForKeyPress' function.\r\nNot sure if you can change z$ to be a certain key, or put a character into the string box for the function.\r\nHope this helps. Although, you've probably looked at these two already.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Not sure if this will help, and not sure as I haven't tested it.<br>\nJust looked up 'wait' command which has the regular expression<br>\n^wait$|^z$<br>\nAnd also 'WaitForKeyPress' function.<br>\nNot sure if you can change z$ to be a certain key, or put a character into the string box for the function.<br>\nHope this helps. Although, you've probably looked at these two already.</p>\n\n",
      "PostDate": "2017-08-21T00:17:43.213618Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "002ff454-3b34-4afe-86b2-010984d393b7",
      "UserId": 233695,
      "Username": "Sherlocho",
      "AvatarUrl": "https://secure.gravatar.com/avatar/65edc795308702e40b937f9b96cd3f08?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's about as far as I got. I'm only now getting to the point of using javascript, so although I found both the command and the function, I can't figure out if there is any way to edit them for my needs. Thanks for you input, though!",
      "EditableFormat": "markdown",
      "HTML": "<p>That's about as far as I got. I'm only now getting to the point of using javascript, so although I found both the command and the function, I can't figure out if there is any way to edit them for my needs. Thanks for you input, though!</p>\n\n",
      "PostDate": "2017-08-21T02:15:03.0630607Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e8275bd6-4e68-4908-9a94-4c9724e545cc",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Grep found the following (I don't know JS, so I don't know if this helps):\r\n\r\n\r\n```\r\nfunction beginWait() {\r\n    _waitMode = true;\r\n    $(\"#txtCommand\").hide();\r\n    $(\"#endWaitLink\").show();\r\n    markScrollPosition();\r\n}\r\n\r\nfunction endWait() {\r\n    if (!_waitMode) return;\r\n    sendEndWait();\r\n}\r\n\r\nfunction waitEnded() {\r\n    _waitMode = false;\r\n    $(\"#endWaitLink\").hide();\r\n    $(\"#txtCommand\").show();\r\n}\r\n```\r\n\r\n---\r\nI tried this:\r\n\r\n```\r\nrequest (Wait, \"\")\r\n```\r\n\r\n>Error running script: The 'Wait' request is not supported for games written for Quest 5.4 or later. Use the 'wait' script command instead.\r\n\r\n\r\n---\r\nMore things grep found when I searched for 'wait' and/or 'keypress':\r\n\r\n```\r\n$(function () {\r\n    $(\"#txtCommand\").bind(\"inview\", function (event, visible) {\r\n        // allows spacebar to scroll browser when txtCommand is not visible\r\n        if (visible == true) {\r\n            $(\"#txtCommand\").focus();\r\n        } else {\r\n            $(\"#txtCommand\").blur();\r\n        }\r\n    });\r\n\r\n    $(\"body\").keydown(function (e) {\r\n        if (_waitMode) {\r\n            endWait();\r\n        }\r\n    });\r\n\r\n```\r\n\r\n```\r\nvar _waitMode = false;\r\nvar _pauseMode = false;\r\n\r\nfunction beginPause(ms) {\r\n    _pauseMode = true;\r\n    $(\"#txtCommandDiv\").hide();\r\n    window.setTimeout(function () {\r\n        endPause()\r\n    }, ms);\r\n}\r\n\r\nfunction endPause() {\r\n    _pauseMode = false;\r\n    $(\"#txtCommandDiv\").show();\r\n    window.setTimeout(function () {\r\n        $(\"#fldUIMsg\").val(\"endpause\");\r\n        $(\"#cmdSubmit\").click();\r\n    }, 100);\r\n}\r\n\r\nfunction commandKey(e) {\r\n    if (_waitMode) return false;\r\n    switch (keyPressCode(e)) {\r\n        case 13:\r\n            runCommand();\r\n            return false;\r\n        case 38:\r\n            thisCommand--;\r\n            if (thisCommand == 0) thisCommand = numCommands;\r\n            $(\"#txtCommand\").val(commandsList[thisCommand]);\r\n            e.preventDefault();\r\n            break;\r\n        case 40:\r\n            thisCommand++;\r\n            if (thisCommand > numCommands) thisCommand = 1;\r\n            $(\"#txtCommand\").val(commandsList[thisCommand]);\r\n            e.preventDefault();\r\n            break;\r\n        case 27:\r\n            thisCommand = numCommands + 1;\r\n            $(\"#txtCommand\").val(\"\");\r\n            e.preventDefault();\r\n            break;\r\n    }\r\n}\r\n\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Grep found the following (I don't know JS, so I don't know if this helps):</p>\n<pre><code>function beginWait() {\n    _waitMode = true;\n    $(\"#txtCommand\").hide();\n    $(\"#endWaitLink\").show();\n    markScrollPosition();\n}\n\nfunction endWait() {\n    if (!_waitMode) return;\n    sendEndWait();\n}\n\nfunction waitEnded() {\n    _waitMode = false;\n    $(\"#endWaitLink\").hide();\n    $(\"#txtCommand\").show();\n}\n</code></pre>\n<hr>\n<p>I tried this:</p>\n<pre><code>request (Wait, \"\")\n</code></pre>\n<blockquote>\n<p>Error running script: The 'Wait' request is not supported for games written for Quest 5.4 or later. Use the 'wait' script command instead.</p>\n</blockquote>\n<hr>\n<p>More things grep found when I searched for 'wait' and/or 'keypress':</p>\n<pre><code>$(function () {\n    $(\"#txtCommand\").bind(\"inview\", function (event, visible) {\n        // allows spacebar to scroll browser when txtCommand is not visible\n        if (visible == true) {\n            $(\"#txtCommand\").focus();\n        } else {\n            $(\"#txtCommand\").blur();\n        }\n    });\n\n    $(\"body\").keydown(function (e) {\n        if (_waitMode) {\n            endWait();\n        }\n    });\n\n</code></pre>\n<pre><code>var _waitMode = false;\nvar _pauseMode = false;\n\nfunction beginPause(ms) {\n    _pauseMode = true;\n    $(\"#txtCommandDiv\").hide();\n    window.setTimeout(function () {\n        endPause()\n    }, ms);\n}\n\nfunction endPause() {\n    _pauseMode = false;\n    $(\"#txtCommandDiv\").show();\n    window.setTimeout(function () {\n        $(\"#fldUIMsg\").val(\"endpause\");\n        $(\"#cmdSubmit\").click();\n    }, 100);\n}\n\nfunction commandKey(e) {\n    if (_waitMode) return false;\n    switch (keyPressCode(e)) {\n        case 13:\n            runCommand();\n            return false;\n        case 38:\n            thisCommand--;\n            if (thisCommand == 0) thisCommand = numCommands;\n            $(\"#txtCommand\").val(commandsList[thisCommand]);\n            e.preventDefault();\n            break;\n        case 40:\n            thisCommand++;\n            if (thisCommand &gt; numCommands) thisCommand = 1;\n            $(\"#txtCommand\").val(commandsList[thisCommand]);\n            e.preventDefault();\n            break;\n        case 27:\n            thisCommand = numCommands + 1;\n            $(\"#txtCommand\").val(\"\");\n            e.preventDefault();\n            break;\n    }\n}\n\n</code></pre>\n\n",
      "PostDate": "2017-08-21T03:47:25.9216234Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "226af540-f192-4674-ab0d-b27bfc2a1f48",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you can use Commands, but you'll have to type it ('p' or 'pause') into the input command box:\r\n\r\n(you can also create an Object with a 'pause' Verb/Script_Attribute, too)\r\n\r\n```\r\n<game name=\"example_game\">\r\n  <attr name=\"pause_boolean_attribute\" type=\"boolean\">false</attr>\r\n</game>\r\n\r\n<command name=\"pause_command\">\r\n  <pattern>pause;p</pattern>\r\n  <script>\r\n    if (game.pause_boolean_attribute) {\r\n        game.pause_boolean_attribute = false\r\n        msg (\"Game: unpaused\")\r\n    } else {\r\n      game.pause_boolean_attribute = true\r\n      msg (\"Game: paused\")\r\n    }\r\n  }\r\n</command>\r\n```\r\n\r\nyou can use the 'get input' Function too:\r\n\r\n```\r\n<game name=\"example_game\">\r\n  <attr name=\"pause_boolean_attribute\" type=\"boolean\">false</attr>\r\n</game>\r\n\r\n<function name=\"pause_function\">\r\n  msg (\"Press 'p' for pause/unpause\")\r\n  get input {\r\n    if (LCase (result) = \"p\") (\r\n      if (game.pause_boolean_attribute) {\r\n        game.pause_boolean_attribute = false\r\n        msg (\"Game: UNpaused\")\r\n      } else {\r\n        game.pause_boolean_attribute = true\r\n        msg (\"Game: paused\")\r\n      }\r\n    } else if (game.pause_boolean_attribute) {\r\n      msg (\"Press 'p' to unpause the game\")\r\n    }\r\n  }\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>you can use Commands, but you'll have to type it ('p' or 'pause') into the input command box:</p>\n<p>(you can also create an Object with a 'pause' Verb/Script_Attribute, too)</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"pause_boolean_attribute\" type=\"boolean\"&gt;false&lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;command name=\"pause_command\"&gt;\n  &lt;pattern&gt;pause;p&lt;/pattern&gt;\n  &lt;script&gt;\n    if (game.pause_boolean_attribute) {\n        game.pause_boolean_attribute = false\n        msg (\"Game: unpaused\")\n    } else {\n      game.pause_boolean_attribute = true\n      msg (\"Game: paused\")\n    }\n  }\n&lt;/command&gt;\n</code></pre>\n<p>you can use the 'get input' Function too:</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"pause_boolean_attribute\" type=\"boolean\"&gt;false&lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;function name=\"pause_function\"&gt;\n  msg (\"Press 'p' for pause/unpause\")\n  get input {\n    if (LCase (result) = \"p\") (\n      if (game.pause_boolean_attribute) {\n        game.pause_boolean_attribute = false\n        msg (\"Game: UNpaused\")\n      } else {\n        game.pause_boolean_attribute = true\n        msg (\"Game: paused\")\n      }\n    } else if (game.pause_boolean_attribute) {\n      msg (\"Press 'p' to unpause the game\")\n    }\n  }\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2017-08-21T03:50:29.6975679Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c24800b9-31bb-447b-a1c5-ea077bcfb3c8",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The wait command is for when the player types \"wait\", and \"z\" is a standard shortform.\r\n\r\nThe wait script command is something entirely different and is what you use to wait for the player to press a key. It is hard coded so you cannot override it like most functions.\r\n\r\nIt may be possible to do this in JavaScript but would not be easy...",
      "EditableFormat": "markdown",
      "HTML": "<p>The wait command is for when the player types \"wait\", and \"z\" is a standard shortform.</p>\n<p>The wait script command is something entirely different and is what you use to wait for the player to press a key. It is hard coded so you cannot override it like most functions.</p>\n<p>It may be possible to do this in JavaScript but would not be easy...</p>\n\n",
      "PostDate": "2017-08-21T09:18:18.4683711Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fd7bc4b9-3a19-450f-a820-5ad21c9939d1",
      "UserId": 233695,
      "Username": "Sherlocho",
      "AvatarUrl": "https://secure.gravatar.com/avatar/65edc795308702e40b937f9b96cd3f08?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "hegemonkhan,  I realize now that my OP was a little unclear, but I was referring to the \"Wait for keypress, then\" function that forces the player to click continue or press a key to progress.\r\n\r\nThe Pixie, thanks for your reply. I'll have to make do with the standard behavior.",
      "EditableFormat": "markdown",
      "HTML": "<p>hegemonkhan,  I realize now that my OP was a little unclear, but I was referring to the \"Wait for keypress, then\" function that forces the player to click continue or press a key to progress.</p>\n<p>The Pixie, thanks for your reply. I'll have to make do with the standard behavior.</p>\n\n",
      "PostDate": "2017-08-21T09:35:33.8465117Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "417ca874-66e3-4832-aa1e-efc1c33d530a",
      "UserId": 319964,
      "Username": "GregC",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Does the keypress get assigned to anything? Could you do something like (pseudocode ahead)\r\n\r\nLoop until (result = desired key)\r\n{\r\n   wait\r\n   result = thing person pressed for wait\r\n}\r\n\r\nSo you can't override the behavior of wait ending on any keypress, but you can make it so that the game issues a new wait command on any keypress except the one you like (which will look the same to the user)\r\n\r\nI got around the problem by using showmenu to offer a one item menu marked \"continue\" so the player clicks on that to get things going again, but there are times that it is inelegant - I think a wait loop system might be better.",
      "EditableFormat": "markdown",
      "HTML": "<p>Does the keypress get assigned to anything? Could you do something like (pseudocode ahead)</p>\n<p>Loop until (result = desired key)<br>\n{<br>\nwait<br>\nresult = thing person pressed for wait<br>\n}</p>\n<p>So you can't override the behavior of wait ending on any keypress, but you can make it so that the game issues a new wait command on any keypress except the one you like (which will look the same to the user)</p>\n<p>I got around the problem by using showmenu to offer a one item menu marked \"continue\" so the player clicks on that to get things going again, but there are times that it is inelegant - I think a wait loop system might be better.</p>\n\n",
      "PostDate": "2017-08-21T10:11:35.0883079Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "880fe84b-8a60-488c-bf98-905731c69030",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Check out the UFO game...\r\nI believe it uses single key presses and responds to the individual key presses...\r\n\r\nActually... It as called \"Space Invaders\"\r\nhttp://textadventures.co.uk/forum/games/topic/1xcgxubq2kqy_ckx7hm9jq/space-invaders-v0-03-now-real-time\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Check out the UFO game...<br>\nI believe it uses single key presses and responds to the individual key presses...</p>\n<p>Actually... It as called \"Space Invaders\"<br>\nhttp://textadventures.co.uk/forum/games/topic/1xcgxubq2kqy_ckx7hm9jq/space-invaders-v0-03-now-real-time</p>\n\n",
      "PostDate": "2017-08-21T19:57:55.3917716Z",
      "LastEditDate": "2017-08-21T20:08:18.1829985Z",
      "link": null
    },
    {
      "PostId": "b2e8e78b-ce04-420c-b1c7-b0038baeb2d4",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Following DL's link (indirectly) led me to an old post of HK's , which led to an old link of Pixie's, which led to an old link of Jay's:\r\n\r\n\r\n---\r\nCheck this out:\r\n\r\nhttps://textadventures.co.uk/forum/samples/topic/3546/map-generation-demo#28316\r\n\r\n\r\nHookKeyboard.js\r\n```\r\nfunction HookKeyboard(callback) {\r\n    var elem = document.getElementById('gameContent');\r\n    elem.handleEvent = function (e) {\r\n        ASLEvent(callback, e.keyCode.toString());\r\n    };\r\n    window.addEventListener(\"keydown\", elem);\r\n}\r\n```\r\n\r\n```\r\n<!--Saved by Quest 5.4.4873.16527-->\r\n<asl version=\"540\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"HookKeyTest\">\r\n    <gameid>38ab633c-12fa-48bb-ac22-bcaf185c1b89</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2013</firstpublished>\r\n    <start type=\"script\">\r\n      JS.HookKeyboard(\"OnKeyDown\")\r\n    </start>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n  </object>\r\n  <function name=\"OnKeyDown\" parameters=\"keyvalue\">\r\n    msg (\"Got key \" + keyvalue)\r\n  </function>\r\n  <javascript src=\"hookkeyboard.js\" />\r\n</asl>\r\n```\r\n\r\n---\r\nThen, a revision to the game (now the arrows move the player around):\r\n\r\nhttps://textadventures.co.uk/forum/samples/topic/3546/map-generation-demo#28333\r\n\r\n```\r\n<!--Saved by Quest 5.5.5173.27901-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"HookKeyTest\">\r\n    <gameid>38ab633c-12fa-48bb-ac22-bcaf185c1b89</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2013</firstpublished>\r\n    <start type=\"script\">\r\n      JS.HookKeyboard (\"OnKeyDown\")\r\n    </start>\r\n  </game>\r\n  <object name=\"cafeteria\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"north\" to=\"garden\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"foyer\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"garden\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"south\" to=\"cafeteria\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <exit alias=\"north\" to=\"path\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"path\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"south\" to=\"garden\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <exit alias=\"north\" to=\"outlook\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"outlook\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"south\" to=\"path\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"foyer\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"north\" to=\"cafeteria\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"west\" to=\"west landing\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n    <exit alias=\"east\" to=\"east landing\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"west landing\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"east\" to=\"foyer\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n    <exit alias=\"west\" to=\"west hallway\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"east landing\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"west\" to=\"foyer\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n    <exit alias=\"east\" to=\"east hallway\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"west hallway\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"east\" to=\"west landing\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"east hallway\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"west\" to=\"east landing\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n  </object>\r\n  <function name=\"OnKeyDown\" parameters=\"keyvalue\">\r\n    //msg (\"Got key \" + keyvalue)\r\n    switch (keyvalue) {\r\n    \tcase (37) {\r\n    \t\t// left\r\n    \t\tJS.sendCommand(\"west\", null)\r\n    \t}\r\n    \tcase (38) {\r\n    \t\t// up\r\n    \t\tJS.sendCommand(\"north\", null)\r\n    \t}\r\n    \tcase (39) {\r\n    \t\t// right\r\n    \t\tJS.sendCommand(\"east\", null)\r\n    \t}\r\n    \tcase (40) {\r\n    \t\t// down\r\n    \t\tJS.sendCommand(\"south\", null)\r\n    \t}\r\n    }\r\n  </function>\r\n  <javascript src=\"hookkeyboard.js\" />\r\n</asl>\r\n```\r\n\r\n---\r\nALSO:\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/3847/how-can-i-impliment-an-image-based-health#25765\r\n\r\n>I had done a test a while back about trapping keydown events in JavaScript. I've shown myself it can be done, and the attached sample shows one way to do it.\r\n>\r\n>You need to include the JS file \"glue.js\" in your project. Then you simply call:\r\n\r\n```\r\nJS.Hook(\"somefunctionname\")\r\n```\r\n\r\nand then that function whose name you pass will be called whenever a key is pressed - any key (even shift, ctrl, caps lock).\r\n\r\n```\r\n<function name=\"somefunctionname\" parameters=\"keyCode\">\r\n    msg(\"Keycode = \" + keyCode)\r\n</function>\r\n```\r\n>\r\n>Note that this is using ASLEvent to notify the app. And ASLEvent (I recently discovered) causes turn scripts to run. Bear that in mind.\r\n>\r\n>BTW, feel free to change the names. This was just some test code, so you have names like \"Hook\" and \"glue\". :)\r\n\r\n[KeyTest.zip](http://textadventures.co.uk/attachment/684)\r\n\r\n---\r\nglue.js\r\n```\r\nfunction Hook(callback) {\r\n    var elem = document.getElementById('gameContent');\r\n    elem.handleEvent = function (e) {\r\n        console.log(\"code = \" + e.keyCode);\r\n        ASLEvent(callback, e.keyCode.toString());\r\n    };\r\n    window.addEventListener(\"keydown\", elem);\r\n}\r\n```\r\n\r\n\r\n---\r\nHere are the key's 'keys':\r\n\r\nHookKeyTest\r\n\r\nYou are in a room.\r\nGot key 65\r\nGot key 66\r\nGot key 67\r\nGot key 68\r\nGot key 69\r\nGot key 70\r\nGot key 71\r\nGot key 72\r\nGot key 73\r\nGot key 74\r\nGot key 75\r\nGot key 76\r\nGot key 77\r\nGot key 78\r\nGot key 79\r\nGot key 80\r\nGot key 81\r\nGot key 82\r\nGot key 83\r\nGot key 84\r\nGot key 85\r\nGot key 86\r\nGot key 87\r\nGot key 88\r\nGot key 89\r\nGot key 90\r\n\r\n```abcdefghijklmnopqrstuvwxyz```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Following DL's link (indirectly) led me to an old post of HK's , which led to an old link of Pixie's, which led to an old link of Jay's:</p>\n<hr>\n<p>Check this out:</p>\n<p>https://textadventures.co.uk/forum/samples/topic/3546/map-generation-demo#28316</p>\n<p>HookKeyboard.js</p>\n<pre><code>function HookKeyboard(callback) {\n    var elem = document.getElementById('gameContent');\n    elem.handleEvent = function (e) {\n        ASLEvent(callback, e.keyCode.toString());\n    };\n    window.addEventListener(\"keydown\", elem);\n}\n</code></pre>\n<pre><code>&lt;!--Saved by Quest 5.4.4873.16527--&gt;\n&lt;asl version=\"540\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"HookKeyTest\"&gt;\n    &lt;gameid&gt;38ab633c-12fa-48bb-ac22-bcaf185c1b89&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n    &lt;start type=\"script\"&gt;\n      JS.HookKeyboard(\"OnKeyDown\")\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;function name=\"OnKeyDown\" parameters=\"keyvalue\"&gt;\n    msg (\"Got key \" + keyvalue)\n  &lt;/function&gt;\n  &lt;javascript src=\"hookkeyboard.js\" /&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p>Then, a revision to the game (now the arrows move the player around):</p>\n<p>https://textadventures.co.uk/forum/samples/topic/3546/map-generation-demo#28333</p>\n<pre><code>&lt;!--Saved by Quest 5.5.5173.27901--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"HookKeyTest\"&gt;\n    &lt;gameid&gt;38ab633c-12fa-48bb-ac22-bcaf185c1b89&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n    &lt;start type=\"script\"&gt;\n      JS.HookKeyboard (\"OnKeyDown\")\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"cafeteria\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"north\" to=\"garden\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"foyer\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"garden\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"south\" to=\"cafeteria\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"north\" to=\"path\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"path\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"south\" to=\"garden\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"north\" to=\"outlook\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"outlook\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"south\" to=\"path\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"foyer\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"north\" to=\"cafeteria\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"west\" to=\"west landing\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"east\" to=\"east landing\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"west landing\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"east\" to=\"foyer\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"west\" to=\"west hallway\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"east landing\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"west\" to=\"foyer\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"east\" to=\"east hallway\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"west hallway\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"east\" to=\"west landing\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"east hallway\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"west\" to=\"east landing\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;function name=\"OnKeyDown\" parameters=\"keyvalue\"&gt;\n    //msg (\"Got key \" + keyvalue)\n    switch (keyvalue) {\n    \tcase (37) {\n    \t\t// left\n    \t\tJS.sendCommand(\"west\", null)\n    \t}\n    \tcase (38) {\n    \t\t// up\n    \t\tJS.sendCommand(\"north\", null)\n    \t}\n    \tcase (39) {\n    \t\t// right\n    \t\tJS.sendCommand(\"east\", null)\n    \t}\n    \tcase (40) {\n    \t\t// down\n    \t\tJS.sendCommand(\"south\", null)\n    \t}\n    }\n  &lt;/function&gt;\n  &lt;javascript src=\"hookkeyboard.js\" /&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p>ALSO:</p>\n<p>http://textadventures.co.uk/forum/quest/topic/3847/how-can-i-impliment-an-image-based-health#25765</p>\n<blockquote>\n<p>I had done a test a while back about trapping keydown events in JavaScript. I've shown myself it can be done, and the attached sample shows one way to do it.</p>\n<p>You need to include the JS file \"glue.js\" in your project. Then you simply call:</p>\n</blockquote>\n<pre><code>JS.Hook(\"somefunctionname\")\n</code></pre>\n<p>and then that function whose name you pass will be called whenever a key is pressed - any key (even shift, ctrl, caps lock).</p>\n<pre><code>&lt;function name=\"somefunctionname\" parameters=\"keyCode\"&gt;\n    msg(\"Keycode = \" + keyCode)\n&lt;/function&gt;\n</code></pre>\n<blockquote>\n<p>Note that this is using ASLEvent to notify the app. And ASLEvent (I recently discovered) causes turn scripts to run. Bear that in mind.</p>\n<p>BTW, feel free to change the names. This was just some test code, so you have names like \"Hook\" and \"glue\". :)</p>\n</blockquote>\n<p><a href=\"http://textadventures.co.uk/attachment/684\">KeyTest.zip</a></p>\n<hr>\n<p>glue.js</p>\n<pre><code>function Hook(callback) {\n    var elem = document.getElementById('gameContent');\n    elem.handleEvent = function (e) {\n        console.log(\"code = \" + e.keyCode);\n        ASLEvent(callback, e.keyCode.toString());\n    };\n    window.addEventListener(\"keydown\", elem);\n}\n</code></pre>\n<hr>\n<p>Here are the key's 'keys':</p>\n<p>HookKeyTest</p>\n<p>You are in a room.<br>\nGot key 65<br>\nGot key 66<br>\nGot key 67<br>\nGot key 68<br>\nGot key 69<br>\nGot key 70<br>\nGot key 71<br>\nGot key 72<br>\nGot key 73<br>\nGot key 74<br>\nGot key 75<br>\nGot key 76<br>\nGot key 77<br>\nGot key 78<br>\nGot key 79<br>\nGot key 80<br>\nGot key 81<br>\nGot key 82<br>\nGot key 83<br>\nGot key 84<br>\nGot key 85<br>\nGot key 86<br>\nGot key 87<br>\nGot key 88<br>\nGot key 89<br>\nGot key 90</p>\n<p><code>abcdefghijklmnopqrstuvwxyz</code></p>\n\n",
      "PostDate": "2017-08-21T20:39:06.4056645Z",
      "LastEditDate": "2017-08-21T20:42:10.8973806Z",
      "link": null
    },
    {
      "PostId": "4ac0d8c0-cf2c-4097-bbb3-f94d01aaa7e4",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "forgot all about Jay's hook' coding and thus forgot to link to Jay's code, but K.V. found it, hehe.\r\n\r\nthe 'event listener' is found within 'Java' programming, so if you want and can, study up on 'Java' programming, as it has a lot of these event listeners and etc input controls, as Java is good for creating GUI type of stuff. Probably quest has similar coding to how its done in Java's programming.\r\n\r\nAgain, 'Java' is a full-bore language, which is completely different than the 'JS (JavaScript)' scripting language.\r\n\r\nhttps://docs.oracle.com/javase/tutorial/\r\n\r\nand for the Values of keyboard keys:\r\n\r\nhttp://www.asciitable.com",
      "EditableFormat": "markdown",
      "HTML": "<p>forgot all about Jay's hook' coding and thus forgot to link to Jay's code, but K.V. found it, hehe.</p>\n<p>the 'event listener' is found within 'Java' programming, so if you want and can, study up on 'Java' programming, as it has a lot of these event listeners and etc input controls, as Java is good for creating GUI type of stuff. Probably quest has similar coding to how its done in Java's programming.</p>\n<p>Again, 'Java' is a full-bore language, which is completely different than the 'JS (JavaScript)' scripting language.</p>\n<p>https://docs.oracle.com/javase/tutorial/</p>\n<p>and for the Values of keyboard keys:</p>\n<p>http://www.asciitable.com</p>\n\n",
      "PostDate": "2017-08-22T21:25:01.5498642Z",
      "LastEditDate": "2017-08-22T21:26:14.733769Z",
      "link": null
    },
    {
      "PostId": "c5a3e965-c6fc-47b3-a087-bed4f8b70e42",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've been playing with the Hook function, and I can make it do something after a keypress, but I can't make it NOT do the default action for a key press.\r\n\r\nI.e., I can't stop the up arrow from scrolling through commands.\r\n\r\nI can make it print a message (or do whatever else I want) when you press the up arrow, but it scrolls through the commands no matter what.\r\n\r\nSame with letters.\r\n\r\nIf you hit B, I can make something happen right then, but 'B' still goes into the input field.\r\n\r\n\r\n---\r\nThis code, which is a combination of HK's script and one of XanMag's scripts won't let you do jack until you enter 'g' (but you have to press ENTER, it's not a hook... although it could be):\r\n\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"you must press 'g'\">\r\n    <gameid>7f31eee7-ee5a-4ea5-841b-afc6a8ca0698</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n    <start type=\"script\">\r\n      loopit\r\n    </start>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n  </object>\r\n  <function name=\"loopit\"><![CDATA[\r\n    msg (\"CLUE: the 7th letter<br/>\")\r\n    PrintCentered (\"<b><u>PLEASE ENTER THE ANSWER NOW{notfirst:<br/><br/> (You must enter the correct response to proceed!)}</u></b><br/>\")\r\n    get input {\r\n      switch (LCase(result)) {\r\n        case (\"g\") {\r\n          firsttime {\r\n            msg (\"\\\"\" + result + \"\\\" is correct!<br><br>Good job!\")\r\n          }\r\n          otherwise {\r\n            msg (\"\\\"\" + result + \"\\\" is incorrect.<br>\")\r\n            msg (\"Try again.<br/>\")\r\n            loopit\r\n          }\r\n        }\r\n        default {\r\n          msg (\"\\\"\" + result + \"\\\" is incorrect.<br>\")\r\n          msg (\"Try again.<br/>\")\r\n          loopit\r\n        }\r\n      }\r\n    }\r\n  ]]></function>\r\n</asl>\r\n```\r\n\r\n---\r\n## <center>you must press 'g'</center>\r\n\r\nCLUE: the 7th letter\r\n\r\nPLEASE ENTER THE ANSWER NOW\r\n\r\n\"a\" is incorrect.\r\n\r\nTry again.\r\n\r\nCLUE: the 7th letter\r\n\r\nPLEASE ENTER THE ANSWER NOW\r\n\r\n(You must enter the correct response to proceed!)\r\n\r\n\"g\" is correct!\r\n\r\nGood job!\r\nYou are in a room.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I've been playing with the Hook function, and I can make it do something after a keypress, but I can't make it NOT do the default action for a key press.</p>\n<p>I.e., I can't stop the up arrow from scrolling through commands.</p>\n<p>I can make it print a message (or do whatever else I want) when you press the up arrow, but it scrolls through the commands no matter what.</p>\n<p>Same with letters.</p>\n<p>If you hit B, I can make something happen right then, but 'B' still goes into the input field.</p>\n<hr>\n<p>This code, which is a combination of HK's script and one of XanMag's scripts won't let you do jack until you enter 'g' (but you have to press ENTER, it's not a hook... although it could be):</p>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"you must press 'g'\"&gt;\n    &lt;gameid&gt;7f31eee7-ee5a-4ea5-841b-afc6a8ca0698&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n    &lt;start type=\"script\"&gt;\n      loopit\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;function name=\"loopit\"&gt;&lt;![CDATA[\n    msg (\"CLUE: the 7th letter&lt;br/&gt;\")\n    PrintCentered (\"&lt;b&gt;&lt;u&gt;PLEASE ENTER THE ANSWER NOW{notfirst:&lt;br/&gt;&lt;br/&gt; (You must enter the correct response to proceed!)}&lt;/u&gt;&lt;/b&gt;&lt;br/&gt;\")\n    get input {\n      switch (LCase(result)) {\n        case (\"g\") {\n          firsttime {\n            msg (\"\\\"\" + result + \"\\\" is correct!&lt;br&gt;&lt;br&gt;Good job!\")\n          }\n          otherwise {\n            msg (\"\\\"\" + result + \"\\\" is incorrect.&lt;br&gt;\")\n            msg (\"Try again.&lt;br/&gt;\")\n            loopit\n          }\n        }\n        default {\n          msg (\"\\\"\" + result + \"\\\" is incorrect.&lt;br&gt;\")\n          msg (\"Try again.&lt;br/&gt;\")\n          loopit\n        }\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<h2><center>you must press 'g'</center></h2>\n<p>CLUE: the 7th letter</p>\n<p>PLEASE ENTER THE ANSWER NOW</p>\n<p>\"a\" is incorrect.</p>\n<p>Try again.</p>\n<p>CLUE: the 7th letter</p>\n<p>PLEASE ENTER THE ANSWER NOW</p>\n<p>(You must enter the correct response to proceed!)</p>\n<p>\"g\" is correct!</p>\n<p>Good job!<br>\nYou are in a room.</p>\n\n",
      "PostDate": "2017-08-23T00:22:09.7965655Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
