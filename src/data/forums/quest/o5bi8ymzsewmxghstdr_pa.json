{
  "Topic": {
    "TopicId": "o5bi8ymzsewmxghstdr_pa",
    "ForumId": "10",
    "Title": "making a script recognize if you have enough money.",
    "LastUpdated": "2023-02-11T03:01:54.4856629Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "e93fed9c-18c0-4ae8-b93c-98f912358cb0",
      "UserId": 630977,
      "Username": "Chocolatepeanut223",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm making a mining game on quest and I can't seem to do it. I need to be able to buy items but I can't make the npc realise if you have the money or not. If possible, please just send the code for the if statement and not the whole script for selling.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm making a mining game on quest and I can't seem to do it. I need to be able to buy items but I can't make the npc realise if you have the money or not. If possible, please just send the code for the if statement and not the whole script for selling.</p>\n\n",
      "PostDate": "2023-02-11T03:01:54.4856629Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "077a43a0-05dc-460f-944b-4d03bc8f3eea",
      "UserId": 629874,
      "Username": "GeminiNeule",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9389e52d9e54b6af823cac64629bf3f0?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The concrete code pretty much depends on how you set up your store. One way of doing it would be to only add items that you actually afford to a list and update it every time something is purchased.\r\n\r\nShort answer:\r\n```if(player.money >= shopitem1.price)```\r\n\r\nLong answer with examples:\r\n\r\nOne way I did set up a shop:\r\n\r\n```\r\nshoplist = NewStringList()\r\nif(player.money >= shopitem1.price) {\r\n  list add (shoplist , shopitem1.alias)\r\n}\r\n```\r\nLater on display a menu and have a switch statement to determine which item was bought. Only do it like that for small shops though - there are more efficient ways of doing it. There is also a tutorial on how to setup a shop. You probably want to loop through a list instead of objects in some kind of inventory instead of writing code for every item yourself...\r\n\r\nAnother way would be to check when trying to buy - just use the if statement above in another location of your script:\r\n\r\n```\r\nswitch (result) {\r\n  case (shopitem1.description) {\r\n    if(player.money >= shopitem1.price) {\r\n      // Actually purchasing the item. Assuming that you only can buy that item once. You also need to remove that item from the  shop in that case.\r\n      DecreaseMoney (shopitem1.price)\r\n      AddToInventory (shopitem1)      \r\n    }\r\n    else {\r\n      msg(\"You can not afford \" + shopitem.alias)\r\n    }    \r\n  }\r\n}\r\n```\r\n\r\nThis example assumes you are using the money feature on the game object and have setup up your shop items with prices (inventory tab of the items).",
      "EditableFormat": "markdown",
      "HTML": "<p>The concrete code pretty much depends on how you set up your store. One way of doing it would be to only add items that you actually afford to a list and update it every time something is purchased.</p>\n<p>Short answer:<br>\n<code>if(player.money &gt;= shopitem1.price)</code></p>\n<p>Long answer with examples:</p>\n<p>One way I did set up a shop:</p>\n<pre><code>shoplist = NewStringList()\nif(player.money &gt;= shopitem1.price) {\n  list add (shoplist , shopitem1.alias)\n}\n</code></pre>\n<p>Later on display a menu and have a switch statement to determine which item was bought. Only do it like that for small shops though - there are more efficient ways of doing it. There is also a tutorial on how to setup a shop. You probably want to loop through a list instead of objects in some kind of inventory instead of writing code for every item yourself...</p>\n<p>Another way would be to check when trying to buy - just use the if statement above in another location of your script:</p>\n<pre><code>switch (result) {\n  case (shopitem1.description) {\n    if(player.money &gt;= shopitem1.price) {\n      // Actually purchasing the item. Assuming that you only can buy that item once. You also need to remove that item from the  shop in that case.\n      DecreaseMoney (shopitem1.price)\n      AddToInventory (shopitem1)      \n    }\n    else {\n      msg(\"You can not afford \" + shopitem.alias)\n    }    \n  }\n}\n</code></pre>\n<p>This example assumes you are using the money feature on the game object and have setup up your shop items with prices (inventory tab of the items).</p>\n\n",
      "PostDate": "2023-02-11T06:47:59.7316254Z",
      "LastEditDate": "2023-02-11T07:01:13.0894376Z",
      "link": null
    },
    {
      "PostId": "51658b87-164d-46d5-8c9e-06e6b510ace0",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/HiZKEtPb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you just list what the player can afford, you are not telling him that there are more stuff here.\r\nYou would be telling the player that they can buy that +2 dagger, but not tell them that for just 5 more GP, they could buy the +3 dagger.\r\n(Just my 2 copper's worth.)",
      "EditableFormat": "markdown",
      "HTML": "<p>If you just list what the player can afford, you are not telling him that there are more stuff here.<br>\nYou would be telling the player that they can buy that +2 dagger, but not tell them that for just 5 more GP, they could buy the +3 dagger.<br>\n(Just my 2 copper's worth.)</p>\n\n",
      "PostDate": "2023-02-13T05:33:10.9188313Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b0daa76b-c30e-453f-84b5-9e08278106ed",
      "UserId": 629874,
      "Username": "GeminiNeule",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9389e52d9e54b6af823cac64629bf3f0?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "True, but you can fix this by having two lists: One list with the stuff that you can buy and a preview list of stuff that is available, but can not be afforded.\r\nBut I prefer the \"check afterwards\" option as well.",
      "EditableFormat": "markdown",
      "HTML": "<p>True, but you can fix this by having two lists: One list with the stuff that you can buy and a preview list of stuff that is available, but can not be afforded.<br>\nBut I prefer the \"check afterwards\" option as well.</p>\n\n",
      "PostDate": "2023-02-13T16:29:46.4472714Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
