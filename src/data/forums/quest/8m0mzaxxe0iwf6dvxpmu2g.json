{
  "Topic": {
    "TopicId": "8m0mzaxxe0iwf6dvxpmu2g",
    "ForumId": "10",
    "Title": "Forcing player to pick every option",
    "LastUpdated": "2023-09-09T06:17:34.1263394Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "48150dad-755c-4d4e-bcfd-014d1625ab29",
      "UserId": 374963,
      "Username": "Sara377544",
      "AvatarUrl": "https://i.imgur.com/YCtLz3Nb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "During dialogue, I wanted to present the player with three options.\r\n\r\nTalk about X, Y, Z.\r\nIf you choose X, you would talk to the NPC for a bit before returning to an option where you choose Y or Z. If you choose Y, you would talk again until you were granted the option to talk about Z.\r\nOnce that was done, you'd be allowed to continue.\r\n\r\nI could, in theory, map every choice out but that seems a bit tedious and excessive. Are there better ways?",
      "EditableFormat": "markdown",
      "HTML": "<p>During dialogue, I wanted to present the player with three options.</p>\n<p>Talk about X, Y, Z.<br>\nIf you choose X, you would talk to the NPC for a bit before returning to an option where you choose Y or Z. If you choose Y, you would talk again until you were granted the option to talk about Z.<br>\nOnce that was done, you'd be allowed to continue.</p>\n<p>I could, in theory, map every choice out but that seems a bit tedious and excessive. Are there better ways?</p>\n\n",
      "PostDate": "2023-09-09T06:17:34.1263394Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c6bc4e06-05de-4081-b72d-df2406b6d065",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I would suggest making a list of the available options, and removing items when they're done.\r\n\r\nFor example, if this is John's \"speak to\" verb, you could have something like:\r\n```\r\nif (not HasAttribute (John, \"speak_options\")) {\r\n  // The first time this script is run, set up the list of options\r\n  John.speak_options = Split(\"X;Y;Z\")\r\n}\r\nif (IsDefined (\"result\")) {\r\n  // If the player has chosen an option, remove it from the list so they can't choose it again\r\n  list remove (John.speak_options, result)\r\n  // … and then show that conversation\r\n  switch (result) {\r\n    case (\"X\") {\r\n      // conversation code for X goes here\r\n    }\r\n    case (\"Y\") {\r\n      // conversation code for Y goes here\r\n    }\r\n    case (\"Z\") {\r\n      // conversation code for Z goes here\r\n    }\r\n    default {\r\n      // This message makes it easier to debug if you made a typo\r\n      // It should only happen if the one in the case statement is spelled differently to the Split\r\n      error (\"Unexpected option for John: \" + result)\r\n    }\r\n  }\r\n}\r\nif (ListCount (John.speak_options) > 0) {\r\n  // There are still options left, so we ask the player to choose one\r\n  ShowMenu (\"What do you want to ask John?\", John.speak_options, false, John.speak)\r\n}\r\nelse {\r\n  // anything you want to do when all the options have been done goes here\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I would suggest making a list of the available options, and removing items when they're done.</p>\n<p>For example, if this is John's \"speak to\" verb, you could have something like:</p>\n<pre><code>if (not HasAttribute (John, \"speak_options\")) {\n  // The first time this script is run, set up the list of options\n  John.speak_options = Split(\"X;Y;Z\")\n}\nif (IsDefined (\"result\")) {\n  // If the player has chosen an option, remove it from the list so they can't choose it again\n  list remove (John.speak_options, result)\n  // … and then show that conversation\n  switch (result) {\n    case (\"X\") {\n      // conversation code for X goes here\n    }\n    case (\"Y\") {\n      // conversation code for Y goes here\n    }\n    case (\"Z\") {\n      // conversation code for Z goes here\n    }\n    default {\n      // This message makes it easier to debug if you made a typo\n      // It should only happen if the one in the case statement is spelled differently to the Split\n      error (\"Unexpected option for John: \" + result)\n    }\n  }\n}\nif (ListCount (John.speak_options) &gt; 0) {\n  // There are still options left, so we ask the player to choose one\n  ShowMenu (\"What do you want to ask John?\", John.speak_options, false, John.speak)\n}\nelse {\n  // anything you want to do when all the options have been done goes here\n}\n</code></pre>\n\n",
      "PostDate": "2023-09-09T13:00:04.8278226Z",
      "LastEditDate": "2023-09-09T13:04:35.3311042Z",
      "link": null
    }
  ]
}
