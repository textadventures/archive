{
  "Topic": {
    "TopicId": "4412",
    "ForumId": "10",
    "Title": "How to implement predictive text?",
    "LastUpdated": "2014-06-20T12:41:32+01:00",
    "ReplyCount": 1
  },
  "Posts": [
    {
      "PostId": "29118",
      "UserId": 0,
      "Username": "m4u",
      "UserAvatar": null,
      "UserGravatar": "71ebfc011d52b6e8d2e91bc9f2fdda5a",
      "EditableText": "Is it possible to implement this in Quest like en Frotz?  When typing the first letters of a verb or noun the system fills the rest or show or if there is more than one word matching show the options.  \n\nNot sure if there is another post about this.  I guess first we have to create a dictionary with all of the words of the game and then a function in the parser to do this.",
      "EditableFormat": "bbcode",
      "HTML": "Is it possible to implement this in Quest like en Frotz?  When typing the first letters of a verb or noun the system fills the rest or show or if there is more than one word matching show the options.  <br/><br/>Not sure if there is another post about this.  I guess first we have to create a dictionary with all of the words of the game and then a function in the parser to do this.",
      "PostDate": "2014-06-19T15:58:36+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29126",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I have contemplated this myself. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> \n\nIt's not so much a parser issue as a user interface one. It has to happen right at input, before the player hits enter and sends it off to the parser. (The parser code remains unaffected as such.)\n\nThe current text input is just a standard HTML text input field. Depending on how you want to do it (from a visual point of view - extra text grayed or not?), that would need to be replaced or extended to handle, on a per-key basis, showing additional text in the input field and having it change depending on what comes before. \n\nYou are correct that you would need to know what words are relevant. You might need even more if you wish it to be truly smart - e.g. though &quot;apple&quot; is in the dictionary as a word, &quot;appl(e)&quot; as the first part of a command would be invalid whereas &quot;x app(le)&quot; would be ok. You also don't mention if you wish it to only show commands that are *currently* valid (e.g. &quot;x apple&quot; might not be allowed if the apple is not in the room). And there is also how the words are accepted. All details to work out.\n\nIt would be fun to try. Some challenges, but the hard part might be deciding exactly how it should behave!",
      "EditableFormat": "bbcode",
      "HTML": "I have contemplated this myself. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> <br/><br/>It's not so much a parser issue as a user interface one. It has to happen right at input, before the player hits enter and sends it off to the parser. (The parser code remains unaffected as such.)<br/><br/>The current text input is just a standard HTML text input field. Depending on how you want to do it (from a visual point of view - extra text grayed or not?), that would need to be replaced or extended to handle, on a per-key basis, showing additional text in the input field and having it change depending on what comes before. <br/><br/>You are correct that you would need to know what words are relevant. You might need even more if you wish it to be truly smart - e.g. though &quot;apple&quot; is in the dictionary as a word, &quot;appl(e)&quot; as the first part of a command would be invalid whereas &quot;x app(le)&quot; would be ok. You also don't mention if you wish it to only show commands that are *currently* valid (e.g. &quot;x apple&quot; might not be allowed if the apple is not in the room). And there is also how the words are accepted. All details to work out.<br/><br/>It would be fun to try. Some challenges, but the hard part might be deciding exactly how it should behave!",
      "PostDate": "2014-06-20T12:41:32+01:00",
      "LastEditDate": null
    }
  ]
}
