{
  "Topic": {
    "TopicId": "5908",
    "ForumId": "10",
    "Title": "Another Assorted Inquiry",
    "LastUpdated": "2016-01-27T02:51:49+00:00",
    "ReplyCount": 11
  },
  "Posts": [
    {
      "PostId": "40919",
      "UserId": 0,
      "Username": "Cylius_Optimi",
      "UserAvatar": null,
      "UserGravatar": "5cb0ff0b9a56ea169c5ff4f1be92e44f",
      "EditableText": "I leave with answers, and I return with more questions. I woke up this morning, took one look at the code I left open last night, and said to myself &quot;Okay, I can't put off asking for help anymore.&quot; Why not get everything sorted out all at once, if possible?\n\n1.) I've been holding off on coming back here just in case something I'm doing is stupid, but this issue has been baffling me for days, to the point where I've set it aside to work on more productive code. I spent some time moving some of my code to libraries; in particular, I moved my previously-infantile combat code and the empty js include for my no-br-typewriter adaptation to individual, but interlinked, libraries. I think I even got that part to work at some point in time, somehow, after studying another forum post where jaynabonne included an example of an interruptable typewritten exposition block. \n\n[url=http&#58;//pastebin&#46;com/8uJ4iYiR:3umszsii]Pastebin: FX[/url:3umszsii]\n\nHowever, now, even if I quite literally only use an exact, but renamed, clone of the $.fn.typewriter code block in playercore.js, any attempt to call the function simply prints an empty line. The default Typewriter effect still works fine, so the issue certainly doesn't seem like it's in the first JS block. I can't see an issue myself in the second JS block, but that's where I assume it is. I'd love it if someone could point it out for me, because at this point, I can't even [i:3umszsii]begin[/i:3umszsii] to attempt extending that code.\n\n\n2.) In the time between my last post and this one, I've spent a good deal of time tinkering, tweaking, and otherwise filling in the mechanical backbone for a story I haven't set in stone yet. Things like equipment, combat, a stacking prototype, liquid, etc; things that I don't need yet, but definitely want done now, before they can't be changed easily. Things that sometimes make Quest choke and sputter for a second or two while doing live debug tests in-game.\n\nThe stuff I've been reading on the forum hasn't been given me much hope, but is there a way to use JS to return data without my current, fiddly 'specialized-switching-ASL-call' function? In particular, Quest doesn't seem to support more than one decimal. I actually coded my combat calc while away from home, so I didn't realize I couldn't just &quot;return&quot; the proper damage to the Quest script; I ended up adapting the JS code to call said function twice to store the target and deal # damage to it.\n\n--&gt; While writing #5, I actually ended up fiddling with my combat code again, and realized I was doing something so horribly wrong that, I realize now, the switching part of the function was completely unnecessary. Nonetheless, I'd still love to know if there's a way to pass data from JS to Quest more seamlessly; namely, without dedicated function calls.\n\n\n3a.) I actually have a couple of questions related to the mapping system. For one, I've figured out that putting a room inside another room will draw the parent room automatically while inside any subroom; that's absolutely great for, say, the main protagonist's home, where he'll know exactly where things are. However, no matter what I do, I can't seem to make that work without it seeming sloppy; either there are several squares inside his house where the player 'discovers' rooms, or there are glaringly obvious chunks missing (0 outline thickness rooms) from a room's lining in their place. Is there any way to outright turn off rendering for some rooms, and/or...\n\n3b.) Is there any way to customize/add or call hidden drawing icons for the map? For example, there are your basic hallway (e/w, n/s) and dead end (e, s, w, n) segments, but there's a distinctive lack of a selector for anything like T or cross-intersections, corners, hall turns, diagonals, etc. I've basically foregone customizing rooms to look nice on the map until later on, because it's difficult to do so without those little things annoying me.\n\nI have noticed the script-menu section for 'custom drawing'. I haven't fiddled with it yet, due to previous reasons, but would it be the 'answer to my problems', so to speak? Or would the existing in-game map drawing probably mess with any attempt to make nice maps with it?\n\n\n4.) There's so much unused space in my status-attributes panel. Is there any way I could convert the status attributes into barred displays- nothing extremely fancy, but not quite so simple as &quot;X/X&quot;? I considered an ASCII display (converting X health into one line on a display, i.e. +:||||||||||), but that method feels a bit cheap?\n\n\n5.) How reasonably difficult would it be to make a combat interface that doesn't rely on the command bar (ie, choice [x] + enter)? In particular, I'm interested in using JS to get which key a player presses and immediately load the selected menu either to the main screen, or possibly to a dedicated &quot;combat&quot; panel. Currently, I'm just getting player input and using a switch to decide which action to perform, but that extra requirement of pressing enter strikes me as a little clunky for the combat system I'm going for.",
      "EditableFormat": "bbcode",
      "HTML": "I leave with answers, and I return with more questions. I woke up this morning, took one look at the code I left open last night, and said to myself &quot;Okay, I can't put off asking for help anymore.&quot; Why not get everything sorted out all at once, if possible?<br/><br/>1.) I've been holding off on coming back here just in case something I'm doing is stupid, but this issue has been baffling me for days, to the point where I've set it aside to work on more productive code. I spent some time moving some of my code to libraries; in particular, I moved my previously-infantile combat code and the empty js include for my no-br-typewriter adaptation to individual, but interlinked, libraries. I think I even got that part to work at some point in time, somehow, after studying another forum post where jaynabonne included an example of an interruptable typewritten exposition block. <br/><br/><a href=\"http&#58;//pastebin&#46;com/8uJ4iYiR\" rel=\"nofollow\">Pastebin: FX</a><br/><br/>However, now, even if I quite literally only use an exact, but renamed, clone of the $.fn.typewriter code block in playercore.js, any attempt to call the function simply prints an empty line. The default Typewriter effect still works fine, so the issue certainly doesn't seem like it's in the first JS block. I can't see an issue myself in the second JS block, but that's where I assume it is. I'd love it if someone could point it out for me, because at this point, I can't even <span style=\"font-style:italic;\">begin</span> to attempt extending that code.<br/><br/><br/>2.) In the time between my last post and this one, I've spent a good deal of time tinkering, tweaking, and otherwise filling in the mechanical backbone for a story I haven't set in stone yet. Things like equipment, combat, a stacking prototype, liquid, etc; things that I don't need yet, but definitely want done now, before they can't be changed easily. Things that sometimes make Quest choke and sputter for a second or two while doing live debug tests in-game.<br/><br/>The stuff I've been reading on the forum hasn't been given me much hope, but is there a way to use JS to return data without my current, fiddly 'specialized-switching-ASL-call' function? In particular, Quest doesn't seem to support more than one decimal. I actually coded my combat calc while away from home, so I didn't realize I couldn't just &quot;return&quot; the proper damage to the Quest script; I ended up adapting the JS code to call said function twice to store the target and deal # damage to it.<br/><br/>--&gt; While writing #5, I actually ended up fiddling with my combat code again, and realized I was doing something so horribly wrong that, I realize now, the switching part of the function was completely unnecessary. Nonetheless, I'd still love to know if there's a way to pass data from JS to Quest more seamlessly; namely, without dedicated function calls.<br/><br/><br/>3a.) I actually have a couple of questions related to the mapping system. For one, I've figured out that putting a room inside another room will draw the parent room automatically while inside any subroom; that's absolutely great for, say, the main protagonist's home, where he'll know exactly where things are. However, no matter what I do, I can't seem to make that work without it seeming sloppy; either there are several squares inside his house where the player 'discovers' rooms, or there are glaringly obvious chunks missing (0 outline thickness rooms) from a room's lining in their place. Is there any way to outright turn off rendering for some rooms, and/or...<br/><br/>3b.) Is there any way to customize/add or call hidden drawing icons for the map? For example, there are your basic hallway (e/w, n/s) and dead end (e, s, w, n) segments, but there's a distinctive lack of a selector for anything like T or cross-intersections, corners, hall turns, diagonals, etc. I've basically foregone customizing rooms to look nice on the map until later on, because it's difficult to do so without those little things annoying me.<br/><br/>I have noticed the script-menu section for 'custom drawing'. I haven't fiddled with it yet, due to previous reasons, but would it be the 'answer to my problems', so to speak? Or would the existing in-game map drawing probably mess with any attempt to make nice maps with it?<br/><br/><br/>4.) There's so much unused space in my status-attributes panel. Is there any way I could convert the status attributes into barred displays- nothing extremely fancy, but not quite so simple as &quot;X/X&quot;? I considered an ASCII display (converting X health into one line on a display, i.e. +:||||||||||), but that method feels a bit cheap?<br/><br/><br/>5.) How reasonably difficult would it be to make a combat interface that doesn't rely on the command bar (ie, choice [x] + enter)? In particular, I'm interested in using JS to get which key a player presses and immediately load the selected menu either to the main screen, or possibly to a dedicated &quot;combat&quot; panel. Currently, I'm just getting player input and using a switch to decide which action to perform, but that extra requirement of pressing enter strikes me as a little clunky for the combat system I'm going for.",
      "PostDate": "2016-01-24T03:21:03+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40921",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "1) A tip if you're working with JavaScript&#058; if when your game is running, you click on HTML Tools in the tool bar, it will bring up a very useful window that, among other things, has a Console tab. You can see any JavaScript errors there. Even given that, it took me *too long* to work out the error, which is that you need a semicolon (&quot;;&quot;) on the end of the block assigned to TextFX. Otherwise, the JS compiler carries on and tries to combine the anonymous function declaration that comes next with that, and it gets all confused.\n\n2) The short answer is, no. You have to use ASLEvent to pass data back to the Quest code.\n\nHowever, a number of statements you made before that, about problems you were having, etc, made me want to say &quot;Can you show some examples of that?&quot; because it sounds like you're having some interesting issues that might have simple solutions given some sample code. For example, you say, &quot;In particular, Quest doesn't seem to support more than one decimal.&quot; which I can't even find a way to make meaningful (more than one decimal per number? no. More than one number with a decimal? Well, it should...) So, I don't know what the problem even is. And the sentence that came after that was intriguing as well (having to call a function twice???), but without seeing some actual code to know what you're trying to do, I can't offer any advice on other ways to do it.\n\nOne thought: I once implemented some code for command links in a text-input-less game, where I had a single command that took a parametrized string containing an object, a script attribute name, and the parameters to pass to the script. That way, if I had twenty or more different links, I didn't have to create that many individual commands - I just had one general purpose command that dispatched the request to an object's script, which was much cleaner (for me). Functions don't have the same creation overhead as commands, so I'm not sure if that would solve the problem you're experiencing or not, but it is a way to go, if it makes sense for you.\n\n3) For this as well, if you could put together a simple sample app that exhibits the problem, and then we can run it and you can virtually say, &quot;Ok, see that? That's what I want to change&quot;, then it will be easier to get some answers. Otherwise, I'd have to try to put together my own sample code and hope it somehow matches yours to the extent of seeing what you're seeing or want to see.\n\nBut another short answer: the custom drawing should allow you to draw your own widgets on the map.\n\n4) Your status attribute can have HTML (see, for example, my progress bar code in the forum's Library section). So you can make it what you want, even an image.\n\n5) If have experimented with hooking key pressed using JavaScript, and then simply pumping them up the app using ASLEvent. It seemed to work in the desktop version, but you might want to check the online player before committing to using it, if you ever plan to publish that way.",
      "EditableFormat": "bbcode",
      "HTML": "1) A tip if you're working with JavaScript&#058; if when your game is running, you click on HTML Tools in the tool bar, it will bring up a very useful window that, among other things, has a Console tab. You can see any JavaScript errors there. Even given that, it took me *too long* to work out the error, which is that you need a semicolon (&quot;;&quot;) on the end of the block assigned to TextFX. Otherwise, the JS compiler carries on and tries to combine the anonymous function declaration that comes next with that, and it gets all confused.<br/><br/>2) The short answer is, no. You have to use ASLEvent to pass data back to the Quest code.<br/><br/>However, a number of statements you made before that, about problems you were having, etc, made me want to say &quot;Can you show some examples of that?&quot; because it sounds like you're having some interesting issues that might have simple solutions given some sample code. For example, you say, &quot;In particular, Quest doesn't seem to support more than one decimal.&quot; which I can't even find a way to make meaningful (more than one decimal per number? no. More than one number with a decimal? Well, it should...) So, I don't know what the problem even is. And the sentence that came after that was intriguing as well (having to call a function twice???), but without seeing some actual code to know what you're trying to do, I can't offer any advice on other ways to do it.<br/><br/>One thought: I once implemented some code for command links in a text-input-less game, where I had a single command that took a parametrized string containing an object, a script attribute name, and the parameters to pass to the script. That way, if I had twenty or more different links, I didn't have to create that many individual commands - I just had one general purpose command that dispatched the request to an object's script, which was much cleaner (for me). Functions don't have the same creation overhead as commands, so I'm not sure if that would solve the problem you're experiencing or not, but it is a way to go, if it makes sense for you.<br/><br/>3) For this as well, if you could put together a simple sample app that exhibits the problem, and then we can run it and you can virtually say, &quot;Ok, see that? That's what I want to change&quot;, then it will be easier to get some answers. Otherwise, I'd have to try to put together my own sample code and hope it somehow matches yours to the extent of seeing what you're seeing or want to see.<br/><br/>But another short answer: the custom drawing should allow you to draw your own widgets on the map.<br/><br/>4) Your status attribute can have HTML (see, for example, my progress bar code in the forum's Library section). So you can make it what you want, even an image.<br/><br/>5) If have experimented with hooking key pressed using JavaScript, and then simply pumping them up the app using ASLEvent. It seemed to work in the desktop version, but you might want to check the online player before committing to using it, if you ever plan to publish that way.",
      "PostDate": "2016-01-24T10:19:39+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40938",
      "UserId": 0,
      "Username": "Cylius_Optimi",
      "UserAvatar": null,
      "UserGravatar": "5cb0ff0b9a56ea169c5ff4f1be92e44f",
      "EditableText": "[quote=&quot;jaynabonne&quot;:1pstec1c]1) A tip if you're working with JavaScript&#058; if when your game is running, you click on HTML Tools in the tool bar, it will bring up a very useful window that, among other things, has a Console tab. You can see any JavaScript errors there. Even given that, it took me *too long* to work out the error, which is that you need a semicolon (&quot;;&quot;) on the end of the block assigned to TextFX. Otherwise, the JS compiler carries on and tries to combine the anonymous function declaration that comes next with that, and it gets all confused.[/quote:1pstec1c]\n\nThanks, when I get on my main PC I'll go change that. That was one hell of a sneaky bug.\n\n[quote=&quot;jaynabonne&quot;:1pstec1c]2) The short answer is, no. You have to use ASLEvent to pass data back to the Quest code.\n\nHowever, a number of statements you made before that, about problems you were having, etc, made me want to say &quot;Can you show some examples of that?&quot; because it sounds like you're having some interesting issues that might have simple solutions given some sample code. For example, you say, &quot;In particular, Quest doesn't seem to support more than one decimal.&quot; which I can't even find a way to make meaningful (more than one decimal per number? no. More than one number with a decimal? Well, it should...) So, I don't know what the problem even is. And the sentence that came after that was intriguing as well (having to call a function twice???), but without seeing some actual code to know what you're trying to do, I can't offer any advice on other ways to do it.\n\nOne thought: I once implemented some code for command links in a text-input-less game, where I had a single command that took a parametrized string containing an object, a script attribute name, and the parameters to pass to the script. That way, if I had twenty or more different links, I didn't have to create that many individual commands - I just had one general purpose command that dispatched the request to an object's script, which was much cleaner (for me). Functions don't have the same creation overhead as commands, so I'm not sure if that would solve the problem you're experiencing or not, but it is a way to go, if it makes sense for you.[/quote:1pstec1c]\n\nI meant to type 'decimal point', as in hundredths, thousandths, etc. I wrote the first half of this post right when I woke up, then added to it throughout the day as I dug through my notes file.\n\nMy combat system takes an integer defense for a certain damage type (i.e. defKinetic = 1), converts it into 1% multiplier reduction of that type of damage (1 / 100, 1 - 0.01), then sends the rounded and whole integer back to Quest. Because Quest can't handle those kinds of numbers, I used JS to run the numbers; plus, I'm sure doing it this way will eventually make combat much faster.\n\nI'm not at my main computer right now, but I can recall the initial CombatASLCall function I made to adapt my initial combat code off the top of my head:\n\n[code:1pstec1c]if (switchvar = 0) {\n  switchvar = 1\n  targetobj = GetObject(input)\n} else {\n  switchvar = 0\n  RemoveHP (targetobj, input)\n}[/code:1pstec1c]\n\nAn ASLEvent would call this function twice in a row to get the necessary data; however, I had a major facepalm moment while writing #5; I didn't have to pass the target to JS at all, because all JS was doing was handling the calculations. That function got simplified to one line or so, while quest just stores the target object itself before calling the JS calc.\n\n[quote=&quot;jaynabonne&quot;:1pstec1c]3) For this as well, if you could put together a simple sample app that exhibits the problem, and then we can run it and you can virtually say, &quot;Ok, see that? That's what I want to change&quot;, then it will be easier to get some answers. Otherwise, I'd have to try to put together my own sample code and hope it somehow matches yours to the extent of seeing what you're seeing or want to see.\n\nBut another short answer: the custom drawing should allow you to draw your own widgets on the map.[/quote:1pstec1c]\n\n[attachment=0:1pstec1c]<!-- ia0 -->MapTest.aslx<!-- ia0 -->[/attachment:1pstec1c] The first area, rooms 1-6, are about equivalent to the starting area of my game, before I stopped trying to map things nicely. Directly south from start is a main area, and each room you enter messes with the major room's border a little bit more. Directly east is a bathroom; if you enter here first then walk into room4 of the main area, it erases what could previously just barely pass as a dividing wall.\n\nThere's a hallway connected diagonally to the bathroom; at first glance, it looks like a straight hallway, correct? There's no (nice) way to show that there's actually a t-split there; the major room can't be drawn in any way save for a box, and the minor rooms can only choose between so many 'tiles'. Maybe I'm asking a bit much of the mapping system, but I'd like to be able to use those 'missing' tiles.\n\n[quote=&quot;jaynabonne&quot;:1pstec1c]4) Your status attribute can have HTML (see, for example, my progress bar code in the forum's Library section). So you can make it what you want, even an image.[/quote:1pstec1c]\n\nAwesome. I didn't know the extent to which that would work; I've only recently started coloring stats with HTML.\n\n[quote=&quot;jaynabonne&quot;:1pstec1c]5) If have experimented with hooking key pressed using JavaScript, and then simply pumping them up the app using ASLEvent. It seemed to work in the desktop version, but you might want to check the online player before committing to using it, if you ever plan to publish that way.[/quote:1pstec1c]\n\nHmm. I wouldn't want incompatibility to make anything not work. I'll look into other control options, but I always personally preferred quick and to the point menus; something along the lines of a selector wheel",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>1) A tip if you're working with JavaScript&#058; if when your game is running, you click on HTML Tools in the tool bar, it will bring up a very useful window that, among other things, has a Console tab. You can see any JavaScript errors there. Even given that, it took me *too long* to work out the error, which is that you need a semicolon (&quot;;&quot;) on the end of the block assigned to TextFX. Otherwise, the JS compiler carries on and tries to combine the anonymous function declaration that comes next with that, and it gets all confused.</blockquote><br/><br/>Thanks, when I get on my main PC I'll go change that. That was one hell of a sneaky bug.<br/><br/><blockquote><cite>jaynabonne wrote:</cite>2) The short answer is, no. You have to use ASLEvent to pass data back to the Quest code.<br/><br/>However, a number of statements you made before that, about problems you were having, etc, made me want to say &quot;Can you show some examples of that?&quot; because it sounds like you're having some interesting issues that might have simple solutions given some sample code. For example, you say, &quot;In particular, Quest doesn't seem to support more than one decimal.&quot; which I can't even find a way to make meaningful (more than one decimal per number? no. More than one number with a decimal? Well, it should...) So, I don't know what the problem even is. And the sentence that came after that was intriguing as well (having to call a function twice???), but without seeing some actual code to know what you're trying to do, I can't offer any advice on other ways to do it.<br/><br/>One thought: I once implemented some code for command links in a text-input-less game, where I had a single command that took a parametrized string containing an object, a script attribute name, and the parameters to pass to the script. That way, if I had twenty or more different links, I didn't have to create that many individual commands - I just had one general purpose command that dispatched the request to an object's script, which was much cleaner (for me). Functions don't have the same creation overhead as commands, so I'm not sure if that would solve the problem you're experiencing or not, but it is a way to go, if it makes sense for you.</blockquote><br/><br/>I meant to type 'decimal point', as in hundredths, thousandths, etc. I wrote the first half of this post right when I woke up, then added to it throughout the day as I dug through my notes file.<br/><br/>My combat system takes an integer defense for a certain damage type (i.e. defKinetic = 1), converts it into 1% multiplier reduction of that type of damage (1 / 100, 1 - 0.01), then sends the rounded and whole integer back to Quest. Because Quest can't handle those kinds of numbers, I used JS to run the numbers; plus, I'm sure doing it this way will eventually make combat much faster.<br/><br/>I'm not at my main computer right now, but I can recall the initial CombatASLCall function I made to adapt my initial combat code off the top of my head:<br/><br/><pre><code>if (switchvar = 0) {<br/>  switchvar = 1<br/>  targetobj = GetObject(input)<br/>} else {<br/>  switchvar = 0<br/>  RemoveHP (targetobj, input)<br/>}</code></pre><br/><br/>An ASLEvent would call this function twice in a row to get the necessary data; however, I had a major facepalm moment while writing #5; I didn't have to pass the target to JS at all, because all JS was doing was handling the calculations. That function got simplified to one line or so, while quest just stores the target object itself before calling the JS calc.<br/><br/><blockquote><cite>jaynabonne wrote:</cite>3) For this as well, if you could put together a simple sample app that exhibits the problem, and then we can run it and you can virtually say, &quot;Ok, see that? That's what I want to change&quot;, then it will be easier to get some answers. Otherwise, I'd have to try to put together my own sample code and hope it somehow matches yours to the extent of seeing what you're seeing or want to see.<br/><br/>But another short answer: the custom drawing should allow you to draw your own widgets on the map.</blockquote><br/><br/><div><a href=\"/forumattachments/1475/MapTest.aslx\">MapTest.aslx</a></div> The first area, rooms 1-6, are about equivalent to the starting area of my game, before I stopped trying to map things nicely. Directly south from start is a main area, and each room you enter messes with the major room's border a little bit more. Directly east is a bathroom; if you enter here first then walk into room4 of the main area, it erases what could previously just barely pass as a dividing wall.<br/><br/>There's a hallway connected diagonally to the bathroom; at first glance, it looks like a straight hallway, correct? There's no (nice) way to show that there's actually a t-split there; the major room can't be drawn in any way save for a box, and the minor rooms can only choose between so many 'tiles'. Maybe I'm asking a bit much of the mapping system, but I'd like to be able to use those 'missing' tiles.<br/><br/><blockquote><cite>jaynabonne wrote:</cite>4) Your status attribute can have HTML (see, for example, my progress bar code in the forum's Library section). So you can make it what you want, even an image.</blockquote><br/><br/>Awesome. I didn't know the extent to which that would work; I've only recently started coloring stats with HTML.<br/><br/><blockquote><cite>jaynabonne wrote:</cite>5) If have experimented with hooking key pressed using JavaScript, and then simply pumping them up the app using ASLEvent. It seemed to work in the desktop version, but you might want to check the online player before committing to using it, if you ever plan to publish that way.</blockquote><br/><br/>Hmm. I wouldn't want incompatibility to make anything not work. I'll look into other control options, but I always personally preferred quick and to the point menus; something along the lines of a selector wheel",
      "PostDate": "2016-01-24T19:23:57+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40941",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "A quick reply about the integer calculations: if you have an integer in Quest, if you divide by 100, then it remains an integer, and you will truncate the decimal places. But if you divide it by 100.0, then it will treat it as a floating point calculation, and you will retain the decimals. So:\n\nIf you have damage = 1 (as an integer), then\n\ndamage/100 = 0\n\nbut\n\ndamage/100.0 = 0.01\n\nOne of those times the variables type comes into play. In case that helps simplify things by you not having to dive into JavaScript for the calculation. I'll check out the rest a bit later.",
      "EditableFormat": "bbcode",
      "HTML": "A quick reply about the integer calculations: if you have an integer in Quest, if you divide by 100, then it remains an integer, and you will truncate the decimal places. But if you divide it by 100.0, then it will treat it as a floating point calculation, and you will retain the decimals. So:<br/><br/>If you have damage = 1 (as an integer), then<br/><br/>damage/100 = 0<br/><br/>but<br/><br/>damage/100.0 = 0.01<br/><br/>One of those times the variables type comes into play. In case that helps simplify things by you not having to dive into JavaScript for the calculation. I'll check out the rest a bit later.",
      "PostDate": "2016-01-24T19:50:47+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40945",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;Cylius_Optimi&quot;:157b53la]...\nMy combat system takes an integer defense for a certain damage type (i.e. defKinetic = 1), converts it into 1% multiplier reduction of that type of damage (1 / 100, 1 - 0.01), then sends the rounded and whole integer back to Quest. Because Quest can't handle those kinds of numbers, I used JS to run the numbers; plus, I'm sure doing it this way will eventually make combat much faster.\n...[/quote:157b53la]\nQuest can handle floating point arithmetic, using [i:157b53la]double[/i:157b53la] attributes, but in this case you should be able to stay with integers, as long as you multiply by 100 early enough. Say the base damage is 12, and the armour has a value of 2, the first one here will give you 11, which is right, the second gves zero.\n\n12 * (100-2) / 100\n(100-2) / 100 * 12\n\nDo all your multiplying before the dividing, and it should be fine. And probably quicker than going into JavaScript and back. And definitely easier!",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Cylius_Optimi wrote:</cite>...<br/>My combat system takes an integer defense for a certain damage type (i.e. defKinetic = 1), converts it into 1% multiplier reduction of that type of damage (1 / 100, 1 - 0.01), then sends the rounded and whole integer back to Quest. Because Quest can't handle those kinds of numbers, I used JS to run the numbers; plus, I'm sure doing it this way will eventually make combat much faster.<br/>...</blockquote><br/>Quest can handle floating point arithmetic, using <span style=\"font-style:italic;\">double</span> attributes, but in this case you should be able to stay with integers, as long as you multiply by 100 early enough. Say the base damage is 12, and the armour has a value of 2, the first one here will give you 11, which is right, the second gves zero.<br/><br/>12 * (100-2) / 100<br/>(100-2) / 100 * 12<br/><br/>Do all your multiplying before the dividing, and it should be fine. And probably quicker than going into JavaScript and back. And definitely easier!",
      "PostDate": "2016-01-24T20:35:43+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40952",
      "UserId": 0,
      "Username": "Cylius_Optimi",
      "UserAvatar": null,
      "UserGravatar": "5cb0ff0b9a56ea169c5ff4f1be92e44f",
      "EditableText": "[quote=&quot;jaynabonne&quot;:3m21jie8]A quick reply about the integer calculations: if you have an integer in Quest, if you divide by 100, then it remains an integer, and you will truncate the decimal places. But if you divide it by 100.0, then it will treat it as a floating point calculation, and you will retain the decimals. So:\n\nIf you have damage = 1 (as an integer), then\n\ndamage/100 = 0\n\nbut\n\ndamage/100.0 = 0.01\n\nOne of those times the variables type comes into play. In case that helps simplify things by you not having to dive into JavaScript for the calculation. I'll check out the rest a bit later.[/quote:3m21jie8]\n\n[quote=&quot;The Pixie&quot;:3m21jie8][quote=&quot;Cylius_Optimi&quot;:3m21jie8]...\nMy combat system takes an integer defense for a certain damage type (i.e. defKinetic = 1), converts it into 1% multiplier reduction of that type of damage (1 / 100, 1 - 0.01), then sends the rounded and whole integer back to Quest. Because Quest can't handle those kinds of numbers, I used JS to run the numbers; plus, I'm sure doing it this way will eventually make combat much faster.\n...[/quote:3m21jie8]\nQuest can handle floating point arithmetic, using [i:3m21jie8]double[/i:3m21jie8] attributes, but in this case you should be able to stay with integers, as long as you multiply by 100 early enough. Say the base damage is 12, and the armour has a value of 2, the first one here will give you 11, which is right, the second gves zero.\n\n12 * (100-2) / 100\n(100-2) / 100 * 12\n\nDo all your multiplying before the dividing, and it should be fine. And probably quicker than going into JavaScript and back. And definitely easier![/quote:3m21jie8]\n\nI didn't realize &quot;double&quot; type variables would actually accept more than tenths! When I was initially setting things up for my game, it truncated anything past 0.0 to 0.1. No clue how that happened, it worked fine when I tried again recently. \n\nI rewrote the combat code completely inside Quest; I also plan to switch out my integer-based stats to double-based stats very soon. Thanks for the help.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>A quick reply about the integer calculations: if you have an integer in Quest, if you divide by 100, then it remains an integer, and you will truncate the decimal places. But if you divide it by 100.0, then it will treat it as a floating point calculation, and you will retain the decimals. So:<br/><br/>If you have damage = 1 (as an integer), then<br/><br/>damage/100 = 0<br/><br/>but<br/><br/>damage/100.0 = 0.01<br/><br/>One of those times the variables type comes into play. In case that helps simplify things by you not having to dive into JavaScript for the calculation. I'll check out the rest a bit later.</blockquote><br/><br/><blockquote><cite>The Pixie wrote:</cite><blockquote><p><b>&quot;Cylius_Optimi&quot;</b></p><p>...<br/>My combat system takes an integer defense for a certain damage type (i.e. defKinetic = 1), converts it into 1% multiplier reduction of that type of damage (1 / 100, 1 - 0.01), then sends the rounded and whole integer back to Quest. Because Quest can't handle those kinds of numbers, I used JS to run the numbers; plus, I'm sure doing it this way will eventually make combat much faster.<br/>...</blockquote><br/>Quest can handle floating point arithmetic, using <span style=\"font-style:italic;\">double</span> attributes, but in this case you should be able to stay with integers, as long as you multiply by 100 early enough. Say the base damage is 12, and the armour has a value of 2, the first one here will give you 11, which is right, the second gves zero.<br/><br/>12 * (100-2) / 100<br/>(100-2) / 100 * 12<br/><br/>Do all your multiplying before the dividing, and it should be fine. And probably quicker than going into JavaScript and back. And definitely easier!</p></blockquote><br/><br/>I didn't realize &quot;double&quot; type variables would actually accept more than tenths! When I was initially setting things up for my game, it truncated anything past 0.0 to 0.1. No clue how that happened, it worked fine when I tried again recently. <br/><br/>I rewrote the combat code completely inside Quest; I also plan to switch out my integer-based stats to double-based stats very soon. Thanks for the help.",
      "PostDate": "2016-01-25T01:31:21+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "41003",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Regarding the mapping issue, I don't know if this will help, but you can actually control which sides have the border drawn. Unfortunately, there's no built-in way to (say) not draw the fill. I tried both &quot;rgba(0,0,0,0)&quot; and &quot;transparent&quot;, and it just drew black. So even when the border doesn't draw, the fill still draws, which will eat into your parent frame. You might be able to work around that by manually drawing the parent frame just that much further from the rooms so it doesn't get &quot;eaten&quot;. I tried that quickly with no luck. I could try again.\n\nI have attached a modified version of your game with two changes (well, two classes of changes):\n\n1) I turned off the border for the parent rooms.\n2) I manually edited the &quot;grid_bordersides&quot; attribute for each room. The dropdown with things like &quot;North-South&quot;, etc only has a subset of the full 16 possibilities. The border sides are stored as an integer attribute with value from 0-15 (four bits). The bits are:\n\nnorth = 8\neast = 4\nsouth = 2\nwest = 1\n\nYou add together the borders you want drawn and set the grid_bordersides attribute, and it draws just those. So, for example, for your room1, since it had exits to the east and south, I assumed it would have borders north and west. So I set its grid_bordersides attribute to 8+4 or 12. (You can find the attribute in the attributes list for the object. You may have to scroll down to find it.) It does give you that level of control, at least. I think to not draw the white for the room (or shrink it a bit), we'd have to dive into JavaScript and start overriding functions. Not impossible, but I wanted to see what you thought of this before we went further.\n\nAnother thought: I have code that &quot;pre-visits&quot; all the rooms in the game, forcing them to draw in the map. That way, the map is fully visible up front. If all the children draw, you might not even need a parent room in that case. Let me know if that would be useful, and I'll dig it up. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Regarding the mapping issue, I don't know if this will help, but you can actually control which sides have the border drawn. Unfortunately, there's no built-in way to (say) not draw the fill. I tried both &quot;rgba(0,0,0,0)&quot; and &quot;transparent&quot;, and it just drew black. So even when the border doesn't draw, the fill still draws, which will eat into your parent frame. You might be able to work around that by manually drawing the parent frame just that much further from the rooms so it doesn't get &quot;eaten&quot;. I tried that quickly with no luck. I could try again.<br/><br/>I have attached a modified version of your game with two changes (well, two classes of changes):<br/><br/>1) I turned off the border for the parent rooms.<br/>2) I manually edited the &quot;grid_bordersides&quot; attribute for each room. The dropdown with things like &quot;North-South&quot;, etc only has a subset of the full 16 possibilities. The border sides are stored as an integer attribute with value from 0-15 (four bits). The bits are:<br/><br/>north = 8<br/>east = 4<br/>south = 2<br/>west = 1<br/><br/>You add together the borders you want drawn and set the grid_bordersides attribute, and it draws just those. So, for example, for your room1, since it had exits to the east and south, I assumed it would have borders north and west. So I set its grid_bordersides attribute to 8+4 or 12. (You can find the attribute in the attributes list for the object. You may have to scroll down to find it.) It does give you that level of control, at least. I think to not draw the white for the room (or shrink it a bit), we'd have to dive into JavaScript and start overriding functions. Not impossible, but I wanted to see what you thought of this before we went further.<br/><br/>Another thought: I have code that &quot;pre-visits&quot; all the rooms in the game, forcing them to draw in the map. That way, the map is fully visible up front. If all the children draw, you might not even need a parent room in that case. Let me know if that would be useful, and I'll dig it up. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><div><a href=\"/forumattachments/1478/MapTest.aslx\">MapTest.aslx</a></div>",
      "PostDate": "2016-01-26T21:11:39+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "41004",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Actually, here's a version where the map fully draws up front. I'm not completely sure why it sort of scrolls into view; I think it might be because in the process of visiting all the rooms, the map shifts, and then it recenters when the game starts.\n\nAnyway, the key is a function called &quot;VisitRoom&quot; which calculates and draws the room you pass and then recursively visits any rooms that lead off it via exits. (It sets a flag on each visited room to keep from recursing forever.) The game just calls it on &quot;player.parent&quot; in the start script to get the ball rolling.\n\nIn case it's useful...",
      "EditableFormat": "bbcode",
      "HTML": "Actually, here's a version where the map fully draws up front. I'm not completely sure why it sort of scrolls into view; I think it might be because in the process of visiting all the rooms, the map shifts, and then it recenters when the game starts.<br/><br/>Anyway, the key is a function called &quot;VisitRoom&quot; which calculates and draws the room you pass and then recursively visits any rooms that lead off it via exits. (It sets a flag on each visited room to keep from recursing forever.) The game just calls it on &quot;player.parent&quot; in the start script to get the ball rolling.<br/><br/>In case it's useful...<div><a href=\"/forumattachments/1479/MapTest.aslx\">MapTest.aslx</a></div>",
      "PostDate": "2016-01-26T21:30:23+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "41005",
      "UserId": 0,
      "Username": "Cylius_Optimi",
      "UserAvatar": null,
      "UserGravatar": "5cb0ff0b9a56ea169c5ff4f1be92e44f",
      "EditableText": "[quote=&quot;jaynabonne&quot;:3qd8x2k8]Regarding the mapping issue, I don't know if this will help, but you can actually control which sides have the border drawn. Unfortunately, there's no built-in way to (say) not draw the fill. I tried both &quot;rgba(0,0,0,0)&quot; and &quot;transparent&quot;, and it just drew black. So even when the border doesn't draw, the fill still draws, which will eat into your parent frame. You might be able to work around that by manually drawing the parent frame just that much further from the rooms so it doesn't get &quot;eaten&quot;. I tried that quickly with no luck. I could try again.\n\nI have attached a modified version of your game with two changes (well, two classes of changes):\n\n1) I turned off the border for the parent rooms.\n2) I manually edited the &quot;grid_bordersides&quot; attribute for each room. The dropdown with things like &quot;North-South&quot;, etc only has a subset of the full 16 possibilities. The border sides are stored as an integer attribute with value from 0-15 (four bits). The bits are:\n\nnorth = 8\neast = 4\nsouth = 2\nwest = 1\n\nYou add together the borders you want drawn and set the grid_bordersides attribute, and it draws just those. So, for example, for your room1, since it had exits to the east and south, I assumed it would have borders north and west. So I set its grid_bordersides attribute to 8+4 or 12. (You can find the attribute in the attributes list for the object. You may have to scroll down to find it.) It does give you that level of control, at least. I think to not draw the white for the room (or shrink it a bit), we'd have to dive into JavaScript and start overriding functions. Not impossible, but I wanted to see what you thought of this before we went further.\n\nAnother thought: I have code that &quot;pre-visits&quot; all the rooms in the game, forcing them to draw in the map. That way, the map is fully visible up front. If all the children draw, you might not even need a parent room in that case. Let me know if that would be useful, and I'll dig it up. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->[/quote:3qd8x2k8]\n\nThat's extremely useful! I'll definitely have to tinker with it and integrate it into my main game. \n\n[quote=&quot;jaynabonne&quot;:3qd8x2k8]Actually, here's a version where the map fully draws up front. I'm not completely sure why it sort of scrolls into view; I think it might be because in the process of visiting all the rooms, the map shifts, and then it recenters when the game starts.\n\nAnyway, the key is a function called &quot;VisitRoom&quot; which calculates and draws the room you pass and then recursively visits any rooms that lead off it via exits. (It sets a flag on each visited room to keep from recursing forever.) The game just calls it on &quot;player.parent&quot; in the start script to get the ball rolling.\n\nIn case it's useful...[/quote:3qd8x2k8]\n\nThanks! Actually, that feature would definitely be helpful for the greater majority of rooms, but I'd also like some rooms to stay hidden; stuff like unexplored wilderness, alleyways, etc. Is there a way you'd suggest to toggle automapping for certain rooms?\n\n\n[b:3qd8x2k8]EDIT:[/b:3qd8x2k8] I'm actually looking through the second MapTest in Notepad++; it looks like you included some JS, but it didn't get included with the game?\nIf that's an important component, just thought you should know.\n\nGive me a few minutes to think and I'll update this again.\n\n\n[b:3qd8x2k8]EDIT 2:[/b:3qd8x2k8] Alright, I've compared the original MapTest and the newest one you uploaded. Custom borders definitely solves a lot of my problems with the mapping system; I can't account for every situation ever, but combined with auto-mapping, this seems to have basically covered all of question 3.\n\nI think I'll rewrite the Core editor entry for the map system if possible, and add all possible combinations. I would like to know if it would be possible to cleanly override that segment with a library; I'd be perfectly willing to post my 'map extension library' once finished, if I can forego editing the core files.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>Regarding the mapping issue, I don't know if this will help, but you can actually control which sides have the border drawn. Unfortunately, there's no built-in way to (say) not draw the fill. I tried both &quot;rgba(0,0,0,0)&quot; and &quot;transparent&quot;, and it just drew black. So even when the border doesn't draw, the fill still draws, which will eat into your parent frame. You might be able to work around that by manually drawing the parent frame just that much further from the rooms so it doesn't get &quot;eaten&quot;. I tried that quickly with no luck. I could try again.<br/><br/>I have attached a modified version of your game with two changes (well, two classes of changes):<br/><br/>1) I turned off the border for the parent rooms.<br/>2) I manually edited the &quot;grid_bordersides&quot; attribute for each room. The dropdown with things like &quot;North-South&quot;, etc only has a subset of the full 16 possibilities. The border sides are stored as an integer attribute with value from 0-15 (four bits). The bits are:<br/><br/>north = 8<br/>east = 4<br/>south = 2<br/>west = 1<br/><br/>You add together the borders you want drawn and set the grid_bordersides attribute, and it draws just those. So, for example, for your room1, since it had exits to the east and south, I assumed it would have borders north and west. So I set its grid_bordersides attribute to 8+4 or 12. (You can find the attribute in the attributes list for the object. You may have to scroll down to find it.) It does give you that level of control, at least. I think to not draw the white for the room (or shrink it a bit), we'd have to dive into JavaScript and start overriding functions. Not impossible, but I wanted to see what you thought of this before we went further.<br/><br/>Another thought: I have code that &quot;pre-visits&quot; all the rooms in the game, forcing them to draw in the map. That way, the map is fully visible up front. If all the children draw, you might not even need a parent room in that case. Let me know if that would be useful, and I'll dig it up. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --></blockquote><br/><br/>That's extremely useful! I'll definitely have to tinker with it and integrate it into my main game. <br/><br/><blockquote><cite>jaynabonne wrote:</cite>Actually, here's a version where the map fully draws up front. I'm not completely sure why it sort of scrolls into view; I think it might be because in the process of visiting all the rooms, the map shifts, and then it recenters when the game starts.<br/><br/>Anyway, the key is a function called &quot;VisitRoom&quot; which calculates and draws the room you pass and then recursively visits any rooms that lead off it via exits. (It sets a flag on each visited room to keep from recursing forever.) The game just calls it on &quot;player.parent&quot; in the start script to get the ball rolling.<br/><br/>In case it's useful...</blockquote><br/><br/>Thanks! Actually, that feature would definitely be helpful for the greater majority of rooms, but I'd also like some rooms to stay hidden; stuff like unexplored wilderness, alleyways, etc. Is there a way you'd suggest to toggle automapping for certain rooms?<br/><br/><br/><span style=\"font-weight:bold;\">EDIT:</span> I'm actually looking through the second MapTest in Notepad++; it looks like you included some JS, but it didn't get included with the game?<br/>If that's an important component, just thought you should know.<br/><br/>Give me a few minutes to think and I'll update this again.<br/><br/><br/><span style=\"font-weight:bold;\">EDIT 2:</span> Alright, I've compared the original MapTest and the newest one you uploaded. Custom borders definitely solves a lot of my problems with the mapping system; I can't account for every situation ever, but combined with auto-mapping, this seems to have basically covered all of question 3.<br/><br/>I think I'll rewrite the Core editor entry for the map system if possible, and add all possible combinations. I would like to know if it would be possible to cleanly override that segment with a library; I'd be perfectly willing to post my 'map extension library' once finished, if I can forego editing the core files.",
      "PostDate": "2016-01-26T21:37:44+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "41017",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "[quote:2p5enbc4]I'm actually looking through the second MapTest in Notepad++; it looks like you included some JS, but it didn't get included with the game?\nIf that's an important component, just thought you should know.[/quote:2p5enbc4]\n\nSorry about that. The JS was the beginning of something that didn't pan out. You can remove the reference in the file.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>I'm actually looking through the second MapTest in Notepad++; it looks like you included some JS, but it didn't get included with the game?<br/>If that's an important component, just thought you should know.</p></blockquote><br/><br/>Sorry about that. The JS was the beginning of something that didn't pan out. You can remove the reference in the file.",
      "PostDate": "2016-01-26T22:50:40+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "41018",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "[quote:3dwfasxt]Actually, that feature would definitely be helpful for the greater majority of rooms, but I'd also like some rooms to stay hidden; stuff like unexplored wilderness, alleyways, etc. Is there a way you'd suggest to toggle automapping for certain rooms?[/quote:3dwfasxt]\n\nI haven't tried this, but the VisitRoom code sets a &quot;genvisited&quot; boolean attribute to true on each room it has visited, so it won't visit them again. In theory, if you set that flag on a room manually, the code wouldn't go into that room, so the room wouldn't get drawn - or any other rooms leading from it, if there is only one path to them through that room. It might add the exit, though, which might make it's being hidden a little more obvious. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> (I don't know if it will do that. I'd have to try it.)",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>Actually, that feature would definitely be helpful for the greater majority of rooms, but I'd also like some rooms to stay hidden; stuff like unexplored wilderness, alleyways, etc. Is there a way you'd suggest to toggle automapping for certain rooms?</p></blockquote><br/><br/>I haven't tried this, but the VisitRoom code sets a &quot;genvisited&quot; boolean attribute to true on each room it has visited, so it won't visit them again. In theory, if you set that flag on a room manually, the code wouldn't go into that room, so the room wouldn't get drawn - or any other rooms leading from it, if there is only one path to them through that room. It might add the exit, though, which might make it's being hidden a little more obvious. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> (I don't know if it will do that. I'd have to try it.)",
      "PostDate": "2016-01-26T22:55:10+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "41019",
      "UserId": 0,
      "Username": "Cylius_Optimi",
      "UserAvatar": null,
      "UserGravatar": "5cb0ff0b9a56ea169c5ff4f1be92e44f",
      "EditableText": "Really quick before I head out- if I should post this somewhere else in the forum, let me know. \n\n[attachment=0:2ddcypz1]<!-- ia0 -->MapTilesExt_Types.aslx<!-- ia0 -->[/attachment:2ddcypz1]MapTilesExt_Types.aslx -&gt; Goes in your game include\n\n[attachment=1:2ddcypz1]<!-- ia1 -->MapTilesExt_Editor.aslx<!-- ia1 -->[/attachment:2ddcypz1]MapTilesExt_Editor.aslx -&gt; Replaces &lt;include ref=&quot;CoreEditorObjectMap.aslx&quot;/&gt; in CoreEditor.aslx\n\nIt changes the map editor tab to have all various combinations easily marked. Types go in include because I couldn't get a general include to override the core map tab.",
      "EditableFormat": "bbcode",
      "HTML": "Really quick before I head out- if I should post this somewhere else in the forum, let me know. <br/><br/><div><a href=\"/forumattachments/1486/MapTilesExt_Types.aslx\">MapTilesExt_Types.aslx</a></div>MapTilesExt_Types.aslx -&gt; Goes in your game include<br/><br/><div><a href=\"/forumattachments/1481/MapTilesExt_Editor.aslx\">MapTilesExt_Editor.aslx</a></div>MapTilesExt_Editor.aslx -&gt; Replaces &lt;include ref=&quot;CoreEditorObjectMap.aslx&quot;/&gt; in CoreEditor.aslx<br/><br/>It changes the map editor tab to have all various combinations easily marked. Types go in include because I couldn't get a general include to override the core map tab.",
      "PostDate": "2016-01-27T02:51:49+00:00",
      "LastEditDate": null
    }
  ]
}