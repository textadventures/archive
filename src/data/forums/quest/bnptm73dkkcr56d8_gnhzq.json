{
  "Topic": {
    "TopicId": "bnptm73dkkcr56d8_gnhzq",
    "ForumId": "10",
    "Title": "Pain with Panes: Issue 1: Handling Containers",
    "LastUpdated": "2018-05-11T19:51:22.6747483Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "8a07753a-ff83-42e8-9d3c-74409b1547d9",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "When I first saw game panes in about 2011, I was very enthusiastic about them. Since then, however, the introduction of the map and hyperlinks has made the panes less useful, made worse by them not keeping pace with other developments.  Perhaps the most obvious issue is the handling of containers, where the contents of a box (say) are shown at the same level as the box itself, in both the Inventory and Places and Objects panes. Has anyone looked at making this a bracketed structure: box (item1, item2 (item3)) ... or having items indented below their container name to show their relationship? \r\n```\r\nbox\r\n  item1 (within box)\r\n  item2 (within box)\r\n    item3 (within item2)",
      "EditableFormat": "markdown",
      "HTML": "<p>When I first saw game panes in about 2011, I was very enthusiastic about them. Since then, however, the introduction of the map and hyperlinks has made the panes less useful, made worse by them not keeping pace with other developments.  Perhaps the most obvious issue is the handling of containers, where the contents of a box (say) are shown at the same level as the box itself, in both the Inventory and Places and Objects panes. Has anyone looked at making this a bracketed structure: box (item1, item2 (item3)) ... or having items indented below their container name to show their relationship?</p>\n<pre><code>box\n  item1 (within box)\n  item2 (within box)\n    item3 (within item2)\n</code></pre>\n\n",
      "PostDate": "2018-05-11T19:51:22.6747483Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ec02e7f2-7522-4c25-aa67-f54b67217250",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There is code for this somewhere.\r\n\r\nGive me a bit.  I shall return.",
      "EditableFormat": "markdown",
      "HTML": "<p>There is code for this somewhere.</p>\n<p>Give me a bit.  I shall return.</p>\n\n",
      "PostDate": "2018-05-11T20:01:11.8247212Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cdcd5a10-dd43-4402-8cb5-11f298bfc7ac",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "My solution (a bit wonky) was to use a turnscript:\r\n```\r\nforeach (o, GetAllChildObjects(game.pov.parent)) {\r\n  o.listalias = \"[[\"+o.parent.name+\"]]\"+GetDisplayAlias(o)\r\n}\r\n```\r\nThen modified the `updateList` JS function to order and indent the items.\r\n(rather than indenting, I used unicode box-drawing characters to make a kind of sketched tree; but that's a bit overcomplex)",
      "EditableFormat": "markdown",
      "HTML": "<p>My solution (a bit wonky) was to use a turnscript:</p>\n<pre><code>foreach (o, GetAllChildObjects(game.pov.parent)) {\n  o.listalias = \"[[\"+o.parent.name+\"]]\"+GetDisplayAlias(o)\n}\n</code></pre>\n<p>Then modified the <code>updateList</code> JS function to order and indent the items.<br>\n(rather than indenting, I used unicode box-drawing characters to make a kind of sketched tree; but that's a bit overcomplex)</p>\n\n",
      "PostDate": "2018-05-11T21:32:54.9723943Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "07c93400-144c-4d6e-88b3-b5b19c7012b0",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I know I saw some code for this somewhere before...\r\n\r\nThis is the best I've come up with:\r\n\r\n\r\n**OLD CODE**\r\n\r\n<details>\r\n\r\n**indent_kids** (turn script / enabled when play begins)\r\n```\r\n// version 2 (using symbol instead of hyphen)\r\nforeach (o, ScopeReachable()) {\r\n  if (not o.parent = game.pov and not o.parent = game.pov.parent) {\r\n    o.listalias = \"&#8627;  \" +GetDisplayAlias(o)\r\n  }\r\n}\r\n```\r\n\r\n---\r\nIn the start script:\r\n\r\n```\r\ninvoke(indent_kids.script)\r\n```\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/39949623-8f7fbe48-5541-11e8-8b7c-bbf2336881a0.png)\r\n\r\n---\r\n**EDIT**\r\n\r\n<s>I think mrangel posted that code I'm searching for...  (He'll probably drop in soon.)</s>\r\n\r\nAh.. I see mrangel already dropped in (while this post was in progress).  Hrmm...  Maybe I dreamed that code up...\r\n\r\n---\r\nNote that my code will not account for object inside of objects inside of objects.\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>I know I saw some code for this somewhere before...</p>\n<p>This is the best I've come up with:</p>\n<p><strong>OLD CODE</strong></p>\n<details>\n<p><strong>indent_kids</strong> (turn script / enabled when play begins)</p>\n<pre><code>// version 2 (using symbol instead of hyphen)\nforeach (o, ScopeReachable()) {\n  if (not o.parent = game.pov and not o.parent = game.pov.parent) {\n    o.listalias = \"&amp;#8627;  \" +GetDisplayAlias(o)\n  }\n}\n</code></pre>\n<hr>\n<p>In the start script:</p>\n<pre><code>invoke(indent_kids.script)\n</code></pre>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/39949623-8f7fbe48-5541-11e8-8b7c-bbf2336881a0.png\" alt=\"image\"></p>\n<hr>\n<p><strong>EDIT</strong></p>\n<p><s>I think mrangel posted that code I'm searching for...  (He'll probably drop in soon.)</s></p>\n<p>Ah.. I see mrangel already dropped in (while this post was in progress).  Hrmm...  Maybe I dreamed that code up...</p>\n<hr>\n<p>Note that my code will not account for object inside of objects inside of objects.</p>\n</details>\n\n",
      "PostDate": "2018-05-11T22:29:46.1538279Z",
      "LastEditDate": "2018-05-21T01:21:18.8191947Z",
      "link": null
    },
    {
      "PostId": "5df189d6-cb34-4b3d-a072-a2edfdae87c8",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks @KV and @mrangel, as usual my goal is to identify problems that might get sorted out in some future release if a good general solution can be found. My next issue is a bug which should be easy to fix but there is also a general question attached to it.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks @KV and @mrangel, as usual my goal is to identify problems that might get sorted out in some future release if a good general solution can be found. My next issue is a bug which should be easy to fix but there is also a general question attached to it.</p>\n\n",
      "PostDate": "2018-05-12T06:49:11.6485254Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "474004c9-08c1-401b-a22b-983086468896",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@KV\r\nDoes that code work neatly? I don't remember the inventory items being sorted by default, in which case your indented item might not appear after the right container.\r\n\r\nAnother thought that occurs to me might be changing the listalias to \"container &#8627; alias\" or \"container &#8627; container &#8627; alias\".\r\n\r\n```\r\nforeach (o, ScopeReachable()) {\r\n  parent = o.parent\r\n  o.listalias  = Right (o.listalias, LengthOf (o.listalias) - InstrRev (o.listalias, \"&#8627;\" - 5)\r\n  while (not parent = game.pov and not parent = game.pov.parent) {\r\n    o.listalias = GetDisplayAlias(parent) + \"&#8627; \" + o.listalias\r\n    parent = parent.parent\r\n  }\r\n}\r\n```\r\nThen, updateList can sort the whole list alphabetically, then use a simple regexp to remove the container names as it displays them (`string.replace(/^(&#8627;)*.*?(&#8627;)*/, \"$1$2\")`). (Maybe this is unnecessary; I don't think the lists were in a useful order last time I played with it, but I can't be sure. I'm on holiday now, so don't have the time to play around with it)",
      "EditableFormat": "markdown",
      "HTML": "<p>@KV<br>\nDoes that code work neatly? I don't remember the inventory items being sorted by default, in which case your indented item might not appear after the right container.</p>\n<p>Another thought that occurs to me might be changing the listalias to \"container ↳ alias\" or \"container ↳ container ↳ alias\".</p>\n<pre><code>foreach (o, ScopeReachable()) {\n  parent = o.parent\n  o.listalias  = Right (o.listalias, LengthOf (o.listalias) - InstrRev (o.listalias, \"&amp;#8627;\" - 5)\n  while (not parent = game.pov and not parent = game.pov.parent) {\n    o.listalias = GetDisplayAlias(parent) + \"&amp;#8627; \" + o.listalias\n    parent = parent.parent\n  }\n}\n</code></pre>\n<p>Then, updateList can sort the whole list alphabetically, then use a simple regexp to remove the container names as it displays them (<code>string.replace(/^(&amp;#8627;)*.*?(&amp;#8627;)*/, \"$1$2\")</code>). (Maybe this is unnecessary; I don't think the lists were in a useful order last time I played with it, but I can't be sure. I'm on holiday now, so don't have the time to play around with it)</p>\n\n",
      "PostDate": "2018-05-12T09:40:08.8327567Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7cf058f9-a7dd-4efc-9532-ddaa13054e2c",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Does that code work neatly? I don't remember the inventory items being sorted by default, in which case your indented item might not appear after the right container.\r\n\r\nI didn't think it would, but it seems to.  I tried to make it mess up, but not for very long.  Plus, I didn't create enough objects to thoroughly test it, but I will today.\r\n\r\nI'm thinking the same thing you are, though, mrangel.  The order will become disorder eventually.  You last suggestion will probably be the best way to go.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Does that code work neatly? I don't remember the inventory items being sorted by default, in which case your indented item might not appear after the right container.</p>\n</blockquote>\n<p>I didn't think it would, but it seems to.  I tried to make it mess up, but not for very long.  Plus, I didn't create enough objects to thoroughly test it, but I will today.</p>\n<p>I'm thinking the same thing you are, though, mrangel.  The order will become disorder eventually.  You last suggestion will probably be the best way to go.</p>\n\n",
      "PostDate": "2018-05-12T14:29:01.5659005Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b2610314-9ebd-4579-ba79-a5978709b4e3",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I tested my code out some more, and I still couldn't break it, but I did find that I needed to change the list alias back when an object was not inside of another object.\r\n\r\n**OLD CODE**\r\n\r\n<details>\r\n\r\n```\r\n      foreach (o, ScopeReachable()) {\r\n        if (not o.parent = game.pov and not o.parent = game.pov.parent) {\r\n          o.listalias = \"&#8627;  \" +GetDisplayAlias(o)\r\n        }\r\n        else {\r\n          if (HasAttribute(o, \"listalias\")) {\r\n            o.listalias = Replace(o.listalias, \"&#8627;  \", \"\")\r\n          }\r\n        }\r\n      }\r\n```\r\n\r\n---\r\nHere's the test game:\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.8.6705.22622-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"List Indention\">\r\n    <gameid>fcb3ab77-3691-4646-a6f8-8f8e4fb0d73b</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <start type=\"script\">\r\n      invoke (indent_kids.script)\r\n    </start>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"basket\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"container_open\" />\r\n      <feature_container />\r\n      <open type=\"boolean\">false</open>\r\n      <close type=\"boolean\">false</close>\r\n      <listchildren />\r\n      <take />\r\n      <object name=\"egg\">\r\n        <inherit name=\"editor_object\" />\r\n        <take />\r\n      </object>\r\n      <object name=\"stick\">\r\n        <inherit name=\"editor_object\" />\r\n        <take />\r\n      </object>\r\n    </object>\r\n    <object name=\"box\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"container_closed\" />\r\n      <feature_container />\r\n      <listchildren />\r\n      <take />\r\n      <object name=\"ball\">\r\n        <inherit name=\"editor_object\" />\r\n        <take />\r\n      </object>\r\n      <object name=\"toothpick\">\r\n        <inherit name=\"editor_object\" />\r\n        <take />\r\n      </object>\r\n    </object>\r\n  </object>\r\n  <turnscript name=\"indent_kids\">\r\n    <enabled />\r\n    <script><![CDATA[\r\n      foreach (o, ScopeReachable()) {\r\n        if (not o.parent = game.pov and not o.parent = game.pov.parent) {\r\n          o.listalias = \"&#8627;  \" +GetDisplayAlias(o)\r\n        }\r\n        else {\r\n          if (HasAttribute(o, \"listalias\")) {\r\n            o.listalias = Replace(o.listalias, \"&#8627;  \", \"\")\r\n          }\r\n        }\r\n      }\r\n    ]]></script>\r\n  </turnscript>\r\n</asl>\r\n```\r\n\r\n</details>\r\n\r\n---\r\n**EDIT**\r\n\r\nIt still doesn't handle object in objects in objects.\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>I tested my code out some more, and I still couldn't break it, but I did find that I needed to change the list alias back when an object was not inside of another object.</p>\n<p><strong>OLD CODE</strong></p>\n<details>\n<pre><code>      foreach (o, ScopeReachable()) {\n        if (not o.parent = game.pov and not o.parent = game.pov.parent) {\n          o.listalias = \"&amp;#8627;  \" +GetDisplayAlias(o)\n        }\n        else {\n          if (HasAttribute(o, \"listalias\")) {\n            o.listalias = Replace(o.listalias, \"&amp;#8627;  \", \"\")\n          }\n        }\n      }\n</code></pre>\n<hr>\n<p>Here's the test game:</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.8.6705.22622--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"List Indention\"&gt;\n    &lt;gameid&gt;fcb3ab77-3691-4646-a6f8-8f8e4fb0d73b&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;start type=\"script\"&gt;\n      invoke (indent_kids.script)\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"basket\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"container_open\" /&gt;\n      &lt;feature_container /&gt;\n      &lt;open type=\"boolean\"&gt;false&lt;/open&gt;\n      &lt;close type=\"boolean\"&gt;false&lt;/close&gt;\n      &lt;listchildren /&gt;\n      &lt;take /&gt;\n      &lt;object name=\"egg\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;take /&gt;\n      &lt;/object&gt;\n      &lt;object name=\"stick\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;take /&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n    &lt;object name=\"box\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"container_closed\" /&gt;\n      &lt;feature_container /&gt;\n      &lt;listchildren /&gt;\n      &lt;take /&gt;\n      &lt;object name=\"ball\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;take /&gt;\n      &lt;/object&gt;\n      &lt;object name=\"toothpick\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;take /&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;turnscript name=\"indent_kids\"&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;&lt;![CDATA[\n      foreach (o, ScopeReachable()) {\n        if (not o.parent = game.pov and not o.parent = game.pov.parent) {\n          o.listalias = \"&amp;#8627;  \" +GetDisplayAlias(o)\n        }\n        else {\n          if (HasAttribute(o, \"listalias\")) {\n            o.listalias = Replace(o.listalias, \"&amp;#8627;  \", \"\")\n          }\n        }\n      }\n    ]]&gt;&lt;/script&gt;\n  &lt;/turnscript&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n<hr>\n<p><strong>EDIT</strong></p>\n<p>It still doesn't handle object in objects in objects.</p>\n</details>\n\n",
      "PostDate": "2018-05-12T14:59:12.9496112Z",
      "LastEditDate": "2018-05-21T01:20:43.025277Z",
      "link": null
    },
    {
      "PostId": "8d275c1e-1969-4138-b921-77a816ce1e98",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> It still doesn't handle object in objects in objects.\r\n\r\nIf there's no worry about ordering, then you can change the 'if' to a 'while' to count how many levels down you are:\r\n```\r\n      reachable = ScopeReachable()\r\n      foreach (o, reachable) {\r\n        if (HasString(o, \"listalias\")) {\r\n          o.listalias = Replace(o.listalias, \"&#8627;  \", \"\")\r\n        }\r\n        else {\r\n          o.listalias = GetDisplayAlias (o)\r\n        }\r\n        parent = o.parent\r\n        while (ListContains (reachable, parent) and not parent = game.pov) {\r\n          o.listalias = \"&#8627;  \" + o.listalias\r\n          parent = parent.parent\r\n        }\r\n      }\r\n```\r\nEdit: changed the condition on the while loop; so it behaves sanely in odd cases where there are reachable objects not contained by the player's direct parent.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>It still doesn't handle object in objects in objects.</p>\n</blockquote>\n<p>If there's no worry about ordering, then you can change the 'if' to a 'while' to count how many levels down you are:</p>\n<pre><code>      reachable = ScopeReachable()\n      foreach (o, reachable) {\n        if (HasString(o, \"listalias\")) {\n          o.listalias = Replace(o.listalias, \"&amp;#8627;  \", \"\")\n        }\n        else {\n          o.listalias = GetDisplayAlias (o)\n        }\n        parent = o.parent\n        while (ListContains (reachable, parent) and not parent = game.pov) {\n          o.listalias = \"&amp;#8627;  \" + o.listalias\n          parent = parent.parent\n        }\n      }\n</code></pre>\n<p>Edit: changed the condition on the while loop; so it behaves sanely in odd cases where there are reachable objects not contained by the player's direct parent.</p>\n\n",
      "PostDate": "2018-05-12T15:23:24.8599989Z",
      "LastEditDate": "2018-05-12T15:31:48.4271627Z",
      "link": null
    },
    {
      "PostId": "5cac7bcd-9227-434f-a16d-6a1d00583104",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I didn't think it would, but it seems to. \r\n\r\nIt probably arranges them in the order they appear in the game code, and that is probably - coincidentally - the order you want if this is a simple test. Make sure you test it properly by putting an item that is higher in the game code in to the container during play.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I didn't think it would, but it seems to.</p>\n</blockquote>\n<p>It probably arranges them in the order they appear in the game code, and that is probably - coincidentally - the order you want if this is a simple test. Make sure you test it properly by putting an item that is higher in the game code in to the container during play.</p>\n\n",
      "PostDate": "2018-05-12T17:26:57.4390686Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "af9246ad-a9e7-416d-b7ea-907d3c8ccf3b",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I shuffled all the objects around, dropped some, picked stuff back up, put things in containers, dropped stuff, picked stuff up again, moved things from container to container, and it always kept the stuff in a container listed after the container.\r\n\r\nIt looks like they stay in the same order as they appear in the code in 5.7.2, except for being listed directly after the container in the list.  In 5.8, I think it was in alphabetical order, but still listing children directly after their parent object.\r\n\r\nI had to do some running around, but I'm about to see how it works with mrangel's code, about 10 extra objects, and whatever other monkey wrenches I can think of to throw into the mix.",
      "EditableFormat": "markdown",
      "HTML": "<p>I shuffled all the objects around, dropped some, picked stuff back up, put things in containers, dropped stuff, picked stuff up again, moved things from container to container, and it always kept the stuff in a container listed after the container.</p>\n<p>It looks like they stay in the same order as they appear in the code in 5.7.2, except for being listed directly after the container in the list.  In 5.8, I think it was in alphabetical order, but still listing children directly after their parent object.</p>\n<p>I had to do some running around, but I'm about to see how it works with mrangel's code, about 10 extra objects, and whatever other monkey wrenches I can think of to throw into the mix.</p>\n\n",
      "PostDate": "2018-05-12T17:43:22.1690052Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "88342ee6-668a-4866-950c-ce647c9c5c12",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks everyone. The latest version of Giantkiller Too incorporates this feature, using two dashes for each level of indentation, (though there is only one level needed). To my eye, it makes the inventory much easier to follow. I'll not close this thread, however, in the hope that this or some similar presentation becomes standard in a future release.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks everyone. The latest version of Giantkiller Too incorporates this feature, using two dashes for each level of indentation, (though there is only one level needed). To my eye, it makes the inventory much easier to follow. I'll not close this thread, however, in the hope that this or some similar presentation becomes standard in a future release.</p>\n\n",
      "PostDate": "2018-05-19T17:07:15.0636836Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "152a9060-bdfb-4052-93da-061e0425e626",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Check this one out:\r\n\r\nOLD CODE\r\n\r\n<details>\r\n\r\n**Version 2 (adds two spaces instead of one)**\r\n```\r\n  <function name=\"UpdateContentsInLists\"><![CDATA[\r\n    foreach (o, AllObjects()) {\r\n      o.listalias = GetDisplayAlias(o)\r\n      containers = ListExclude(ListParents(o), game.pov)\r\n      containers = ListExclude(containers, ListParents(game.pov))\r\n      foreach (c, containers) {\r\n        o.listalias = \"&nbsp;&nbsp;\" + o.listalias\r\n      }\r\n    }\r\n  ]]></function>\r\n```\r\n\r\n---\r\nAdd it to the start script.\r\n\r\nPut it in an enabled turn script.\r\n\r\nIf you prefer leading hyphens to leading whitespace, change ```\"&nbsp;&nbsp;\"``` to ```\"--\"```.\r\n\r\n---\r\n<a href=\"https://user-images.githubusercontent.com/30656341/40281188-a49df1e4-5c23-11e8-87ff-f714c967264c.gif\"><img loop src=\"https://user-images.githubusercontent.com/30656341/40281188-a49df1e4-5c23-11e8-87ff-f714c967264c.gif\"/></a>\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>Check this one out:</p>\n<p>OLD CODE</p>\n<details>\n<p><strong>Version 2 (adds two spaces instead of one)</strong></p>\n<pre><code>  &lt;function name=\"UpdateContentsInLists\"&gt;&lt;![CDATA[\n    foreach (o, AllObjects()) {\n      o.listalias = GetDisplayAlias(o)\n      containers = ListExclude(ListParents(o), game.pov)\n      containers = ListExclude(containers, ListParents(game.pov))\n      foreach (c, containers) {\n        o.listalias = \"&amp;nbsp;&amp;nbsp;\" + o.listalias\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<hr>\n<p>Add it to the start script.</p>\n<p>Put it in an enabled turn script.</p>\n<p>If you prefer leading hyphens to leading whitespace, change <code>\"&amp;nbsp;&amp;nbsp;\"</code> to <code>\"--\"</code>.</p>\n<hr>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/40281188-a49df1e4-5c23-11e8-87ff-f714c967264c.gif\"><img src=\"https://user-images.githubusercontent.com/30656341/40281188-a49df1e4-5c23-11e8-87ff-f714c967264c.gif\"></a></p>\n</details>\n\n",
      "PostDate": "2018-05-20T16:34:51.3208137Z",
      "LastEditDate": "2018-05-20T19:17:41.714959Z",
      "link": null
    },
    {
      "PostId": "a8350f25-4955-49fd-81ac-f1a4eecdf7f6",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Nice one KV :)\r\n\r\nNot 100% sure, but might be more efficient to combine our methods. Something like:\r\n```\r\n  <function name=\"UpdateContentsInLists\"><![CDATA[\r\n    visible = ListExclude (ScopeVisible(), game.pov)\r\n    foreach (o, visible) {\r\n      o.listalias = GetDisplayAlias(o)\r\n      foreach (c, ListParents(o)) {\r\n        if (ListContains (visible, c)) {\r\n          o.listalias = \"&nbsp;&nbsp;\" + o.listalias\r\n        }\r\n      }\r\n    }\r\n  ]]></function>\r\n```\r\n(I only care about visible objects, because those are the only things that will be passed to updateList. And once I've got a list of those objects, all I need to do for each object is count how many of its parents are also in that list)\r\n\r\nI still think that if some other script is modifying listalias, such as putting \"(worn)\" on the end, this function shouldn't revert it to the display alias. So maybe start by checking if listalias already exists, and if so do `while (StartsWith(o.listalias, \"&nbsp;\")) o.listalias = Mid(o.listalias, 7)` instead of falling back on GetDisplayAlias().",
      "EditableFormat": "markdown",
      "HTML": "<p>Nice one KV :)</p>\n<p>Not 100% sure, but might be more efficient to combine our methods. Something like:</p>\n<pre><code>  &lt;function name=\"UpdateContentsInLists\"&gt;&lt;![CDATA[\n    visible = ListExclude (ScopeVisible(), game.pov)\n    foreach (o, visible) {\n      o.listalias = GetDisplayAlias(o)\n      foreach (c, ListParents(o)) {\n        if (ListContains (visible, c)) {\n          o.listalias = \"&amp;nbsp;&amp;nbsp;\" + o.listalias\n        }\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<p>(I only care about visible objects, because those are the only things that will be passed to updateList. And once I've got a list of those objects, all I need to do for each object is count how many of its parents are also in that list)</p>\n<p>I still think that if some other script is modifying listalias, such as putting \"(worn)\" on the end, this function shouldn't revert it to the display alias. So maybe start by checking if listalias already exists, and if so do <code>while (StartsWith(o.listalias, \"&amp;nbsp;\")) o.listalias = Mid(o.listalias, 7)</code> instead of falling back on GetDisplayAlias().</p>\n\n",
      "PostDate": "2018-05-20T17:54:27.136805Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0516b117-ee37-480c-908b-7cab4f7f36d2",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes KV, that looks tidier, I'll go with that ...though have pushed the indent a little more to three spaces!  ",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes KV, that looks tidier, I'll go with that ...though have pushed the indent a little more to three spaces!</p>\n\n",
      "PostDate": "2018-05-20T18:04:26.9890042Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1f097c21-4e47-4f39-a3d4-0c86fff9e772",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Just saw these posts.  I will try mrangel's method next, but this is what I have right now (it handles scenery, and I've made the indent 2 spaces):\r\n\r\nOLD CODE\r\n\r\n<details>\r\n\r\n```\r\n  <function name=\"UpdateContentsInLists\"><![CDATA[\r\n    JS.eval (\"if (typeof(ignoreScenery) == 'undefined'){var ignoreScenery = [];}\")\r\n    foreach (o, AllObjects()) {\r\n      o.listalias = GetDisplayAlias(o)\r\n      containers = ListExclude(ListParents(o), game.pov)\r\n      containers = ListExclude(containers, ListParents(game.pov))\r\n      foreach (c, containers) {\r\n        o.listalias = \"&nbsp;&nbsp;\" + o.listalias\r\n      }\r\n      if (GetBoolean (o, \"scenery\")) {\r\n        JS.eval (\"ignoreScenery.push('\"+o.listalias+\"');\")\r\n      }\r\n      else {\r\n        JS.eval (\"if (typeof(ignoreScenery) != 'undefined'){var index = ignoreScenery.indexOf('\"+o.listalias+\"');\tif (index > -1) {ignoreScenery.splice(index, 1);\t}}\")\r\n      }\r\n    }\r\n    JS.eval (\"setTimeout(function(){for(var i in ignoreScenery){$('#lstInventory').children().each(function(){if ($(this).html() == ignoreScenery[i] ){$(this).hide();}});};},1);\")\r\n  ]]></function>\r\n```\r\n\r\n```\r\n  <turnscript name=\"update_contents_in_lists_turnscript\">\r\n    <enabled />\r\n    <script>\r\n      UpdateContentsInLists\r\n    </script>\r\n  </turnscript>\r\n```\r\n\r\n```\r\n    <start type=\"script\">\r\n      UpdateContentsInLists\r\n    </start>\r\n```\r\n\r\n```\r\n    <inituserinterface type=\"script\">\r\n      SetTimeout (2) {\r\n        UpdateContentsInLists\r\n      }\r\n    </inituserinterface>\r\n```\r\n\r\n\r\n---\r\nhttp://textadventures.co.uk/games/view/59edxksdekis-korhnz5-q/contents-in-lists\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>Just saw these posts.  I will try mrangel's method next, but this is what I have right now (it handles scenery, and I've made the indent 2 spaces):</p>\n<p>OLD CODE</p>\n<details>\n<pre><code>  &lt;function name=\"UpdateContentsInLists\"&gt;&lt;![CDATA[\n    JS.eval (\"if (typeof(ignoreScenery) == 'undefined'){var ignoreScenery = [];}\")\n    foreach (o, AllObjects()) {\n      o.listalias = GetDisplayAlias(o)\n      containers = ListExclude(ListParents(o), game.pov)\n      containers = ListExclude(containers, ListParents(game.pov))\n      foreach (c, containers) {\n        o.listalias = \"&amp;nbsp;&amp;nbsp;\" + o.listalias\n      }\n      if (GetBoolean (o, \"scenery\")) {\n        JS.eval (\"ignoreScenery.push('\"+o.listalias+\"');\")\n      }\n      else {\n        JS.eval (\"if (typeof(ignoreScenery) != 'undefined'){var index = ignoreScenery.indexOf('\"+o.listalias+\"');\tif (index &gt; -1) {ignoreScenery.splice(index, 1);\t}}\")\n      }\n    }\n    JS.eval (\"setTimeout(function(){for(var i in ignoreScenery){$('#lstInventory').children().each(function(){if ($(this).html() == ignoreScenery[i] ){$(this).hide();}});};},1);\")\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<pre><code>  &lt;turnscript name=\"update_contents_in_lists_turnscript\"&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      UpdateContentsInLists\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n</code></pre>\n<pre><code>    &lt;start type=\"script\"&gt;\n      UpdateContentsInLists\n    &lt;/start&gt;\n</code></pre>\n<pre><code>    &lt;inituserinterface type=\"script\"&gt;\n      SetTimeout (2) {\n        UpdateContentsInLists\n      }\n    &lt;/inituserinterface&gt;\n</code></pre>\n<hr>\n<p>http://textadventures.co.uk/games/view/59edxksdekis-korhnz5-q/contents-in-lists</p>\n</details>\n\n",
      "PostDate": "2018-05-20T19:07:54.7194908Z",
      "LastEditDate": "2018-05-20T19:17:14.4120144Z",
      "link": null
    },
    {
      "PostId": "fad3922e-3726-4384-882c-ebb44c44fc04",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here's the combined function mrangel and I came up with:\r\n\r\n**OLD CODE**\r\n\r\n<details>\r\n\r\n**Version 3**\r\n```\r\n  <function name=\"UpdateContentsInLists\"><![CDATA[\r\n    JS.eval (\"var ignoreScenery = [];\")\r\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\r\n      if (not HasAttribute(o, \"listalias\")) {\r\n        o.listalias = GetDisplayAlias(o)\r\n      }\r\n      o.listalias = Replace(o.listalias,\"&nbsp;\",\"\")\r\n      containers = ListExclude(ListParents(o), game.pov)\r\n      containers = ListExclude(containers, ListParents(game.pov))\r\n      foreach (c, containers) {\r\n        o.listalias = \"&nbsp;&nbsp;\" + o.listalias\r\n      }\r\n      if (GetBoolean (o, \"scenery\")) {\r\n        JS.eval (\"ignoreScenery.push('\"+GetDisplayAlias(o)+\"');\")\r\n      }\r\n    }\r\n    JS.eval (\"setTimeout(function(){for(var i in ignoreScenery){$('#lstInventory').children().each(function(){if ($(this).data('elementid') == ignoreScenery[i] ){$(this).hide();}});};},1);\")\r\n  ]]></function>\r\n```\r\n\r\n---\r\nIt works!\r\n\r\nI'm still using these, too:\r\n```\r\n  <turnscript name=\"update_contents_in_lists_turnscript\">\r\n    <enabled />\r\n    <script>\r\n      UpdateContentsInLists\r\n    </script>\r\n  </turnscript>\r\n```\r\n\r\n```\r\n    <start type=\"script\">\r\n      UpdateContentsInLists\r\n    </start>\r\n```\r\n```\r\n    <inituserinterface type=\"script\">\r\n      firsttime {\r\n      }\r\n      otherwise {\r\n        UpdateContentsInLists\r\n        SetTimeout (2) {\r\n          UpdateContentsInLists\r\n        }\r\n      }\r\n    </inituserinterface>\r\n```\r\n\r\n---\r\nEntire Example Game:\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Contents in Lists\">\r\n    <gameid>edd4c8c3-a135-448a-beb2-159be0998b30</gameid>\r\n    <version>1.3</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <feature_advancedscripts />\r\n    <start type=\"script\">\r\n      UpdateContentsInLists\r\n    </start>\r\n    <inituserinterface type=\"script\">\r\n      firsttime {\r\n      }\r\n      otherwise {\r\n        UpdateContentsInLists\r\n        SetTimeout (2) {\r\n          UpdateContentsInLists\r\n        }\r\n      }\r\n    </inituserinterface>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"table\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"surface\" />\r\n      <feature_container />\r\n      <listchildren />\r\n      <listchildrenprefix>On it, you see</listchildrenprefix>\r\n      <takemsg>It's too big to take.</takemsg>\r\n      <look><![CDATA[An oak dining table.<br/>]]></look>\r\n      <displayverbs type=\"stringlist\">\r\n        <value>Look at</value>\r\n      </displayverbs>\r\n      <object name=\"bowl\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"container_open\" />\r\n        <feature_container />\r\n        <close type=\"boolean\">false</close>\r\n        <open type=\"boolean\">false</open>\r\n        <displayverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n          <value>Take</value>\r\n        </displayverbs>\r\n        <take />\r\n        <listchildren />\r\n        <look><![CDATA[A plastic bowl.<br/>]]></look>\r\n        <object name=\"apple\">\r\n          <inherit name=\"editor_object\" />\r\n          <inherit name=\"edible\" />\r\n          <take />\r\n          <feature_edible />\r\n          <scenery />\r\n          <look><![CDATA[A red apple.<br/>]]></look>\r\n        </object>\r\n        <object name=\"orange\">\r\n          <inherit name=\"editor_object\" />\r\n          <inherit name=\"edible\" />\r\n          <take />\r\n          <feature_edible />\r\n          <look><![CDATA[A navel orange.<br/>]]></look>\r\n          <eat type=\"script\">\r\n            if (HasString(this, \"eatmsg\")) {\r\n              msg (this.eatmsg)\r\n            }\r\n            else {\r\n              msg (DynamicTemplate(\"Eaten\", this))\r\n            }\r\n            if (HasInt(game.pov, \"health\")) {\r\n              game.pov.health = game.pov.health + this.eathealth\r\n            }\r\n            destroy (this.name)\r\n            apple.scenery = false\r\n            if (ListContains(ScopeReachable(),bowl)) {\r\n              msg (\"By some strange (but much appreciated) coincidence, an apple has magically appeared in the bowl!\")\r\n            }\r\n          </eat>\r\n        </object>\r\n      </object>\r\n      <object name=\"lazy susan\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"surface\" />\r\n        <feature_container />\r\n        <listchildren />\r\n        <listchildrenprefix>On it, you see</listchildrenprefix>\r\n        <look>A lazy susan.  You can spin it to move items around the table.  (Your grandparents used to have one.)</look>\r\n        <spin>You spin it.</spin>\r\n        <displayverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n        </displayverbs>\r\n        <takemsg>It {once:appears to be}{notfirst:is} attached to the table.</takemsg>\r\n      </object>\r\n      <object name=\"hat\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"wearable\" />\r\n        <take />\r\n        <look><![CDATA[It's just like Indiana Jones's hat.<br/>]]></look>\r\n        <feature_wearable />\r\n      </object>\r\n    </object>\r\n  </object>\r\n  <turnscript name=\"update_contents_in_lists_turnscript\">\r\n    <enabled />\r\n    <script>\r\n      UpdateContentsInLists\r\n    </script>\r\n  </turnscript>\r\n  <verb>\r\n    <property>spin</property>\r\n    <pattern>spin</pattern>\r\n    <defaultexpression>\"You can't spin \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n  <function name=\"UpdateContentsInLists\"><![CDATA[\r\n    JS.eval (\"if (typeof(ignoreScenery) == 'undefined'){var ignoreScenery = [];}\")\r\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\r\n      if (not HasAttribute(o, \"listalias\")) {\r\n        o.listalias = GetDisplayAlias(o)\r\n      }\r\n      o.listalias = Replace(o.listalias,\"&nbsp;\",\"\")\r\n      containers = ListExclude(ListParents(o), game.pov)\r\n      containers = ListExclude(containers, ListParents(game.pov))\r\n      foreach (c, containers) {\r\n        o.listalias = \"&nbsp;&nbsp;\" + o.listalias\r\n      }\r\n      if (GetBoolean (o, \"scenery\")) {\r\n        JS.eval (\"ignoreScenery.push('\"+o.listalias+\"');\")\r\n      }\r\n      else {\r\n        JS.eval (\"if (typeof(ignoreScenery) != 'undefined'){var index = ignoreScenery.indexOf('\"+o.listalias+\"');\tif (index > -1) {ignoreScenery.splice(index, 1);\t}}\")\r\n      }\r\n    }\r\n    JS.eval (\"setTimeout(function(){for(var i in ignoreScenery){$('#lstInventory').children().each(function(){if ($(this).html() == ignoreScenery[i] ){$(this).hide();}});};},1);\")\r\n  ]]></function>\r\n</asl>\r\n```\r\n\r\n</details>\r\n\r\n---\r\nhttp://textadventures.co.uk/games/view/59edxksdekis-korhnz5-q/contents-in-lists\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>Here's the combined function mrangel and I came up with:</p>\n<p><strong>OLD CODE</strong></p>\n<details>\n<p><strong>Version 3</strong></p>\n<pre><code>  &lt;function name=\"UpdateContentsInLists\"&gt;&lt;![CDATA[\n    JS.eval (\"var ignoreScenery = [];\")\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\n      if (not HasAttribute(o, \"listalias\")) {\n        o.listalias = GetDisplayAlias(o)\n      }\n      o.listalias = Replace(o.listalias,\"&amp;nbsp;\",\"\")\n      containers = ListExclude(ListParents(o), game.pov)\n      containers = ListExclude(containers, ListParents(game.pov))\n      foreach (c, containers) {\n        o.listalias = \"&amp;nbsp;&amp;nbsp;\" + o.listalias\n      }\n      if (GetBoolean (o, \"scenery\")) {\n        JS.eval (\"ignoreScenery.push('\"+GetDisplayAlias(o)+\"');\")\n      }\n    }\n    JS.eval (\"setTimeout(function(){for(var i in ignoreScenery){$('#lstInventory').children().each(function(){if ($(this).data('elementid') == ignoreScenery[i] ){$(this).hide();}});};},1);\")\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<hr>\n<p>It works!</p>\n<p>I'm still using these, too:</p>\n<pre><code>  &lt;turnscript name=\"update_contents_in_lists_turnscript\"&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      UpdateContentsInLists\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n</code></pre>\n<pre><code>    &lt;start type=\"script\"&gt;\n      UpdateContentsInLists\n    &lt;/start&gt;\n</code></pre>\n<pre><code>    &lt;inituserinterface type=\"script\"&gt;\n      firsttime {\n      }\n      otherwise {\n        UpdateContentsInLists\n        SetTimeout (2) {\n          UpdateContentsInLists\n        }\n      }\n    &lt;/inituserinterface&gt;\n</code></pre>\n<hr>\n<p>Entire Example Game:</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Contents in Lists\"&gt;\n    &lt;gameid&gt;edd4c8c3-a135-448a-beb2-159be0998b30&lt;/gameid&gt;\n    &lt;version&gt;1.3&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;feature_advancedscripts /&gt;\n    &lt;start type=\"script\"&gt;\n      UpdateContentsInLists\n    &lt;/start&gt;\n    &lt;inituserinterface type=\"script\"&gt;\n      firsttime {\n      }\n      otherwise {\n        UpdateContentsInLists\n        SetTimeout (2) {\n          UpdateContentsInLists\n        }\n      }\n    &lt;/inituserinterface&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"table\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"surface\" /&gt;\n      &lt;feature_container /&gt;\n      &lt;listchildren /&gt;\n      &lt;listchildrenprefix&gt;On it, you see&lt;/listchildrenprefix&gt;\n      &lt;takemsg&gt;It's too big to take.&lt;/takemsg&gt;\n      &lt;look&gt;&lt;![CDATA[An oak dining table.&lt;br/&gt;]]&gt;&lt;/look&gt;\n      &lt;displayverbs type=\"stringlist\"&gt;\n        &lt;value&gt;Look at&lt;/value&gt;\n      &lt;/displayverbs&gt;\n      &lt;object name=\"bowl\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"container_open\" /&gt;\n        &lt;feature_container /&gt;\n        &lt;close type=\"boolean\"&gt;false&lt;/close&gt;\n        &lt;open type=\"boolean\"&gt;false&lt;/open&gt;\n        &lt;displayverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n          &lt;value&gt;Take&lt;/value&gt;\n        &lt;/displayverbs&gt;\n        &lt;take /&gt;\n        &lt;listchildren /&gt;\n        &lt;look&gt;&lt;![CDATA[A plastic bowl.&lt;br/&gt;]]&gt;&lt;/look&gt;\n        &lt;object name=\"apple\"&gt;\n          &lt;inherit name=\"editor_object\" /&gt;\n          &lt;inherit name=\"edible\" /&gt;\n          &lt;take /&gt;\n          &lt;feature_edible /&gt;\n          &lt;scenery /&gt;\n          &lt;look&gt;&lt;![CDATA[A red apple.&lt;br/&gt;]]&gt;&lt;/look&gt;\n        &lt;/object&gt;\n        &lt;object name=\"orange\"&gt;\n          &lt;inherit name=\"editor_object\" /&gt;\n          &lt;inherit name=\"edible\" /&gt;\n          &lt;take /&gt;\n          &lt;feature_edible /&gt;\n          &lt;look&gt;&lt;![CDATA[A navel orange.&lt;br/&gt;]]&gt;&lt;/look&gt;\n          &lt;eat type=\"script\"&gt;\n            if (HasString(this, \"eatmsg\")) {\n              msg (this.eatmsg)\n            }\n            else {\n              msg (DynamicTemplate(\"Eaten\", this))\n            }\n            if (HasInt(game.pov, \"health\")) {\n              game.pov.health = game.pov.health + this.eathealth\n            }\n            destroy (this.name)\n            apple.scenery = false\n            if (ListContains(ScopeReachable(),bowl)) {\n              msg (\"By some strange (but much appreciated) coincidence, an apple has magically appeared in the bowl!\")\n            }\n          &lt;/eat&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n      &lt;object name=\"lazy susan\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"surface\" /&gt;\n        &lt;feature_container /&gt;\n        &lt;listchildren /&gt;\n        &lt;listchildrenprefix&gt;On it, you see&lt;/listchildrenprefix&gt;\n        &lt;look&gt;A lazy susan.  You can spin it to move items around the table.  (Your grandparents used to have one.)&lt;/look&gt;\n        &lt;spin&gt;You spin it.&lt;/spin&gt;\n        &lt;displayverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n        &lt;/displayverbs&gt;\n        &lt;takemsg&gt;It {once:appears to be}{notfirst:is} attached to the table.&lt;/takemsg&gt;\n      &lt;/object&gt;\n      &lt;object name=\"hat\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"wearable\" /&gt;\n        &lt;take /&gt;\n        &lt;look&gt;&lt;![CDATA[It's just like Indiana Jones's hat.&lt;br/&gt;]]&gt;&lt;/look&gt;\n        &lt;feature_wearable /&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;turnscript name=\"update_contents_in_lists_turnscript\"&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      UpdateContentsInLists\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;verb&gt;\n    &lt;property&gt;spin&lt;/property&gt;\n    &lt;pattern&gt;spin&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't spin \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;function name=\"UpdateContentsInLists\"&gt;&lt;![CDATA[\n    JS.eval (\"if (typeof(ignoreScenery) == 'undefined'){var ignoreScenery = [];}\")\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\n      if (not HasAttribute(o, \"listalias\")) {\n        o.listalias = GetDisplayAlias(o)\n      }\n      o.listalias = Replace(o.listalias,\"&amp;nbsp;\",\"\")\n      containers = ListExclude(ListParents(o), game.pov)\n      containers = ListExclude(containers, ListParents(game.pov))\n      foreach (c, containers) {\n        o.listalias = \"&amp;nbsp;&amp;nbsp;\" + o.listalias\n      }\n      if (GetBoolean (o, \"scenery\")) {\n        JS.eval (\"ignoreScenery.push('\"+o.listalias+\"');\")\n      }\n      else {\n        JS.eval (\"if (typeof(ignoreScenery) != 'undefined'){var index = ignoreScenery.indexOf('\"+o.listalias+\"');\tif (index &gt; -1) {ignoreScenery.splice(index, 1);\t}}\")\n      }\n    }\n    JS.eval (\"setTimeout(function(){for(var i in ignoreScenery){$('#lstInventory').children().each(function(){if ($(this).html() == ignoreScenery[i] ){$(this).hide();}});};},1);\")\n  ]]&gt;&lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n<hr>\n<p>http://textadventures.co.uk/games/view/59edxksdekis-korhnz5-q/contents-in-lists</p>\n</details>\n\n",
      "PostDate": "2018-05-20T19:16:23.0212248Z",
      "LastEditDate": "2018-05-21T01:20:06.5332409Z",
      "link": null
    },
    {
      "PostId": "ae805752-1365-44c2-af36-417b66911d6c",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<s>Wait...\r\n\r\nI didn't test that last one enough.  It is buggy.  It adds lots of leading whitespace every turn.</s>\r\n\r\nI made a typographical error.  This works!",
      "EditableFormat": "markdown",
      "HTML": "<p><s>Wait...</s></p><s>\n</s><p><s>I didn't test that last one enough.  It is buggy.  It adds lots of leading whitespace every turn.</s></p>\n<p>I made a typographical error.  This works!</p>\n\n",
      "PostDate": "2018-05-20T19:26:01.5040157Z",
      "LastEditDate": "2018-05-20T19:38:02.3310486Z",
      "link": null
    },
    {
      "PostId": "5e852749-11ac-49a0-a5de-39bcb38c3d5c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Your JS is a bit wobbly. You're creating an array, and then every turn you add the scenery objects to it and remove the non-scenery objects. This means that after 10 turns, your array contains 10 copies of all the listaliases of scenery objects. (If an object that was scenery ceases to be scenery, I believe that code will only remove the first copy of it from the list.)\r\n\r\nIf you're taking that approach, the first line `if (typeof(ignoreScenery) == 'undefined'){var ignoreScenery = [];}` could be changed to just `var ignoreScenery = [];`, resetting the list each time the function is run. Then you don't need to remove non-scenery objects from the list.\r\n\r\nThere's still a potential issue if you have two objects with the same listalias in this case. It's unlikely to happen in a real game, but you could change `$(this).html()` to `$(this).data('elementid')` to get the object's name rather than it's alias, and guard against hard-to-diagnose bugs in the future.",
      "EditableFormat": "markdown",
      "HTML": "<p>Your JS is a bit wobbly. You're creating an array, and then every turn you add the scenery objects to it and remove the non-scenery objects. This means that after 10 turns, your array contains 10 copies of all the listaliases of scenery objects. (If an object that was scenery ceases to be scenery, I believe that code will only remove the first copy of it from the list.)</p>\n<p>If you're taking that approach, the first line <code>if (typeof(ignoreScenery) == 'undefined'){var ignoreScenery = [];}</code> could be changed to just <code>var ignoreScenery = [];</code>, resetting the list each time the function is run. Then you don't need to remove non-scenery objects from the list.</p>\n<p>There's still a potential issue if you have two objects with the same listalias in this case. It's unlikely to happen in a real game, but you could change <code>$(this).html()</code> to <code>$(this).data('elementid')</code> to get the object's name rather than it's alias, and guard against hard-to-diagnose bugs in the future.</p>\n\n",
      "PostDate": "2018-05-20T19:37:41.0444304Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f1fa747b-26be-4b2a-b6c0-6803d2e1339f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Good stuff, mrangel!\r\n\r\n\r\nI shall return!",
      "EditableFormat": "markdown",
      "HTML": "<p>Good stuff, mrangel!</p>\n<p>I shall return!</p>\n\n",
      "PostDate": "2018-05-20T19:40:12.2413023Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "709a0cd7-0658-426a-be20-d47f98aacb7b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah, you posted again while I was typing :p\r\n\r\n(I think modifying updateList to discard scenery objects on-the-fly is likely a better solution than using a timeout to remove them after they've been added. I would have made a list of scenery objects to remove; but in my solution to that problem I was aiming for smaller code rather than runtime efficiency)",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah, you posted again while I was typing :p</p>\n<p>(I think modifying updateList to discard scenery objects on-the-fly is likely a better solution than using a timeout to remove them after they've been added. I would have made a list of scenery objects to remove; but in my solution to that problem I was aiming for smaller code rather than runtime efficiency)</p>\n\n",
      "PostDate": "2018-05-20T19:44:28.3638216Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5123a1dc-75b2-4279-918c-eec375fae160",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I just updated it again, mrangel.  Now it checks the elementid.  Good call!\r\n\r\n---\r\n\r\nI tried modifying updateList from the beginning, but it messed up the entire pane when removing something.  Now that we're not removing anything, I'll try it again.\r\n\r\n**UPDATE**\r\n\r\nIt works!\r\n\r\n\r\nJS style:\r\n\r\n<details>\r\n\r\n```\r\nfunction updateList(listName, listData) {\r\n    var listElement = \"\";\r\n    var buttonPrefix = \"\";\r\n\r\n    if (listName == \"inventory\") {\r\n        listElement = \"#lstInventory\";\r\n        inventoryVerbs = new Array();\r\n        buttonPrefix = \"cmdInventory\";\r\n    }\r\n\r\n    if (listName == \"placesobjects\") {\r\n        listElement = \"#lstPlacesObjects\";\r\n        placesObjectsVerbs = new Array();\r\n        buttonPrefix = \"cmdPlacesObjects\";\r\n    }\r\n\r\n    var previousSelectionText = \"\";\r\n    var previousSelectionKey = \"\";\r\n    var foundPreviousSelection = false;\r\n\r\n    var $selected = $(listElement + \" .ui-selected\");\r\n    if ($selected.length > 0) {\r\n        previousSelectionText = $selected.first().text();\r\n        previousSelectionKey = $selected.first().data(\"key\");\r\n    }\r\n\r\n    $(listElement).empty();\r\n    var count = 0;\r\n    $.each(listData, function (key, value) {\r\n        var data = JSON.parse(value);\r\n        for (var i in ignoreScenery){\r\n          \tif (data['ElementName'] == ignoreScenery[i]){\r\n          \t\treturn;\r\n        \t}\r\n        }\r\n        var objectDisplayName = data[\"Text\"];\r\n        var verbsArray, idPrefix;\r\n\r\n        if (listName == \"inventory\") {\r\n            verbsArray = inventoryVerbs;\r\n            idPrefix = \"cmdInventory\";\r\n        } else {\r\n            verbsArray = placesObjectsVerbs;\r\n            idPrefix = \"cmdPlacesObjects\";\r\n        }\r\n        verbsArray.push(data);\r\n        if (listName == \"inventory\" || $.inArray(objectDisplayName, _compassDirs) == -1) {\r\n        \t\r\n         var $newItem = $(\"<li/>\").data(\"key\", key).data(\"elementid\", data[\"ElementId\"]).data(\"elementname\", data[\"ElementName\"]).data(\"index\", count).html(objectDisplayName);\r\n\r\n         if (objectDisplayName == previousSelectionText && key == previousSelectionKey) {\r\n                $newItem.addClass(\"ui-selected\");\r\n                foundPreviousSelection = true;\r\n                updateVerbButtons($newItem, verbsArray, idPrefix);\r\n            }\r\n   \t\t\t$(listElement).append($newItem);\r\n            count++;\r\n        }\r\n    });\r\n\r\n    var selectSize = count;\r\n    if (selectSize < 3) selectSize = 3;\r\n    if (selectSize > 12) selectSize = 12;\r\n    $(listElement).attr(\"size\", selectSize);\r\n    \r\n    if (!foundPreviousSelection) {\r\n        for (var i = 1; i <= verbButtonCount; i++) {\r\n            var target = $(\"#\" + buttonPrefix + i);\r\n            target.hide();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n</details>\r\n\r\n---\r\nJS.eval style:\r\n\r\n<details>\r\n\r\n```\r\nJS.eval (\"function updateList(listName, listData) {     var listElement = \\\"\\\";     var buttonPrefix = \\\"\\\";      if (listName == \\\"inventory\\\") {         listElement = \\\"#lstInventory\\\";         inventoryVerbs = new Array();         buttonPrefix = \\\"cmdInventory\\\";     }      if (listName == \\\"placesobjects\\\") {         listElement = \\\"#lstPlacesObjects\\\";         placesObjectsVerbs = new Array();         buttonPrefix = \\\"cmdPlacesObjects\\\";     }      var previousSelectionText = \\\"\\\";     var previousSelectionKey = \\\"\\\";     var foundPreviousSelection = false;      var $selected = $(listElement + \\\" .ui-selected\\\");     if ($selected.length > 0) {         previousSelectionText = $selected.first().text();         previousSelectionKey = $selected.first().data(\\\"key\\\");     }      $(listElement).empty();     var count = 0;     $.each(listData, function (key, value) {         var data = JSON.parse(value);         for (var i in ignoreScenery){           \tif (data['ElementName'] == ignoreScenery[i]){           \t\treturn;         \t}         }         var objectDisplayName = data[\\\"Text\\\"];         var verbsArray, idPrefix;          if (listName == \\\"inventory\\\") {             verbsArray = inventoryVerbs;             idPrefix = \\\"cmdInventory\\\";         } else {             verbsArray = placesObjectsVerbs;             idPrefix = \\\"cmdPlacesObjects\\\";         }         verbsArray.push(data);         if (listName == \\\"inventory\\\" || $.inArray(objectDisplayName, _compassDirs) == -1) {         \t          var $newItem = $(\\\"<li/>\\\").data(\\\"key\\\", key).data(\\\"elementid\\\", data[\\\"ElementId\\\"]).data(\\\"elementname\\\", data[\\\"ElementName\\\"]).data(\\\"index\\\", count).html(objectDisplayName);           if (objectDisplayName == previousSelectionText && key == previousSelectionKey) {                 $newItem.addClass(\\\"ui-selected\\\");                 foundPreviousSelection = true;                 updateVerbButtons($newItem, verbsArray, idPrefix);             }    \t\t\t$(listElement).append($newItem);             count++;         }     });      var selectSize = count;     if (selectSize < 3) selectSize = 3;     if (selectSize > 12) selectSize = 12;     $(listElement).attr(\\\"size\\\", selectSize);         if (!foundPreviousSelection) {         for (var i = 1; i <= verbButtonCount; i++) {             var target = $(\\\"#\\\" + buttonPrefix + i);             target.hide();         }     } }\")\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>I just updated it again, mrangel.  Now it checks the elementid.  Good call!</p>\n<hr>\n<p>I tried modifying updateList from the beginning, but it messed up the entire pane when removing something.  Now that we're not removing anything, I'll try it again.</p>\n<p><strong>UPDATE</strong></p>\n<p>It works!</p>\n<p>JS style:</p>\n<details>\n<pre><code>function updateList(listName, listData) {\n    var listElement = \"\";\n    var buttonPrefix = \"\";\n\n    if (listName == \"inventory\") {\n        listElement = \"#lstInventory\";\n        inventoryVerbs = new Array();\n        buttonPrefix = \"cmdInventory\";\n    }\n\n    if (listName == \"placesobjects\") {\n        listElement = \"#lstPlacesObjects\";\n        placesObjectsVerbs = new Array();\n        buttonPrefix = \"cmdPlacesObjects\";\n    }\n\n    var previousSelectionText = \"\";\n    var previousSelectionKey = \"\";\n    var foundPreviousSelection = false;\n\n    var $selected = $(listElement + \" .ui-selected\");\n    if ($selected.length &gt; 0) {\n        previousSelectionText = $selected.first().text();\n        previousSelectionKey = $selected.first().data(\"key\");\n    }\n\n    $(listElement).empty();\n    var count = 0;\n    $.each(listData, function (key, value) {\n        var data = JSON.parse(value);\n        for (var i in ignoreScenery){\n          \tif (data['ElementName'] == ignoreScenery[i]){\n          \t\treturn;\n        \t}\n        }\n        var objectDisplayName = data[\"Text\"];\n        var verbsArray, idPrefix;\n\n        if (listName == \"inventory\") {\n            verbsArray = inventoryVerbs;\n            idPrefix = \"cmdInventory\";\n        } else {\n            verbsArray = placesObjectsVerbs;\n            idPrefix = \"cmdPlacesObjects\";\n        }\n        verbsArray.push(data);\n        if (listName == \"inventory\" || $.inArray(objectDisplayName, _compassDirs) == -1) {\n        \t\n         var $newItem = $(\"&lt;li/&gt;\").data(\"key\", key).data(\"elementid\", data[\"ElementId\"]).data(\"elementname\", data[\"ElementName\"]).data(\"index\", count).html(objectDisplayName);\n\n         if (objectDisplayName == previousSelectionText &amp;&amp; key == previousSelectionKey) {\n                $newItem.addClass(\"ui-selected\");\n                foundPreviousSelection = true;\n                updateVerbButtons($newItem, verbsArray, idPrefix);\n            }\n   \t\t\t$(listElement).append($newItem);\n            count++;\n        }\n    });\n\n    var selectSize = count;\n    if (selectSize &lt; 3) selectSize = 3;\n    if (selectSize &gt; 12) selectSize = 12;\n    $(listElement).attr(\"size\", selectSize);\n    \n    if (!foundPreviousSelection) {\n        for (var i = 1; i &lt;= verbButtonCount; i++) {\n            var target = $(\"#\" + buttonPrefix + i);\n            target.hide();\n        }\n    }\n}\n</code></pre>\n</details>\n<hr>\n<p>JS.eval style:</p>\n<details>\n<pre><code>JS.eval (\"function updateList(listName, listData) {     var listElement = \\\"\\\";     var buttonPrefix = \\\"\\\";      if (listName == \\\"inventory\\\") {         listElement = \\\"#lstInventory\\\";         inventoryVerbs = new Array();         buttonPrefix = \\\"cmdInventory\\\";     }      if (listName == \\\"placesobjects\\\") {         listElement = \\\"#lstPlacesObjects\\\";         placesObjectsVerbs = new Array();         buttonPrefix = \\\"cmdPlacesObjects\\\";     }      var previousSelectionText = \\\"\\\";     var previousSelectionKey = \\\"\\\";     var foundPreviousSelection = false;      var $selected = $(listElement + \\\" .ui-selected\\\");     if ($selected.length &gt; 0) {         previousSelectionText = $selected.first().text();         previousSelectionKey = $selected.first().data(\\\"key\\\");     }      $(listElement).empty();     var count = 0;     $.each(listData, function (key, value) {         var data = JSON.parse(value);         for (var i in ignoreScenery){           \tif (data['ElementName'] == ignoreScenery[i]){           \t\treturn;         \t}         }         var objectDisplayName = data[\\\"Text\\\"];         var verbsArray, idPrefix;          if (listName == \\\"inventory\\\") {             verbsArray = inventoryVerbs;             idPrefix = \\\"cmdInventory\\\";         } else {             verbsArray = placesObjectsVerbs;             idPrefix = \\\"cmdPlacesObjects\\\";         }         verbsArray.push(data);         if (listName == \\\"inventory\\\" || $.inArray(objectDisplayName, _compassDirs) == -1) {         \t          var $newItem = $(\\\"&lt;li/&gt;\\\").data(\\\"key\\\", key).data(\\\"elementid\\\", data[\\\"ElementId\\\"]).data(\\\"elementname\\\", data[\\\"ElementName\\\"]).data(\\\"index\\\", count).html(objectDisplayName);           if (objectDisplayName == previousSelectionText &amp;&amp; key == previousSelectionKey) {                 $newItem.addClass(\\\"ui-selected\\\");                 foundPreviousSelection = true;                 updateVerbButtons($newItem, verbsArray, idPrefix);             }    \t\t\t$(listElement).append($newItem);             count++;         }     });      var selectSize = count;     if (selectSize &lt; 3) selectSize = 3;     if (selectSize &gt; 12) selectSize = 12;     $(listElement).attr(\\\"size\\\", selectSize);         if (!foundPreviousSelection) {         for (var i = 1; i &lt;= verbButtonCount; i++) {             var target = $(\\\"#\\\" + buttonPrefix + i);             target.hide();         }     } }\")\n</code></pre>\n</details>\n\n",
      "PostDate": "2018-05-20T19:54:46.7828088Z",
      "LastEditDate": "2018-05-20T20:14:11.0577231Z",
      "link": null
    },
    {
      "PostId": "7429a75d-e41a-4e3a-b6ba-db8ce9197fee",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You have `JS.eval (\"ignoreScenery.push('\"+GetDisplayAlias(o)+\"');\")`.\r\nAs far as I can tell, `data('elementid')` gives the name, while `data('elementname')` is the alias. So you should probably be using `\"ignoreScenery.push('\"+o.name+\"');\"`.\r\n\r\nAlso, your timeout function:\r\n```\r\nfunction(){\r\n  for(var i in ignoreScenery){\r\n    $('#lstInventory').children().each(function(){\r\n      if ($(this).data('elementid') == ignoreScenery[i] ){\r\n        $(this).hide();\r\n      }\r\n    });\r\n  };\r\n}\r\n```\r\ncould be shrunk down:\r\n```\r\nfunction(){\r\n  $('#lstInventory').children().each(function(){\r\n    if(ignoreScenery.indexOf($(this).data('elementid')) >= 0 ){\r\n      $(this).hide();\r\n    }\r\n  });\r\n}\r\n```\r\n\r\n(or, using a modified version of my script from the other thread. Edited to be more readable, and to use the ignoreScenery array rather than redefining the function every turn)\r\n```\r\nvar realUpdateList = updateList;\r\nupdateList = function (listName, listData) {\r\n  if (ignoreScenery) {\r\n    $.each(listData, function (key, value) {\r\n      var data = JSON.parse(value);\r\n      if (ignoreScenery.indexOf( data[\"elementid\"] ) >= 0) {\r\n        delete listData[key];\r\n      }\r\n    });\r\n  }\r\n  realUpdateList (listName, listData);\r\n};\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>You have <code>JS.eval (\"ignoreScenery.push('\"+GetDisplayAlias(o)+\"');\")</code>.<br>\nAs far as I can tell, <code>data('elementid')</code> gives the name, while <code>data('elementname')</code> is the alias. So you should probably be using <code>\"ignoreScenery.push('\"+o.name+\"');\"</code>.</p>\n<p>Also, your timeout function:</p>\n<pre><code>function(){\n  for(var i in ignoreScenery){\n    $('#lstInventory').children().each(function(){\n      if ($(this).data('elementid') == ignoreScenery[i] ){\n        $(this).hide();\n      }\n    });\n  };\n}\n</code></pre>\n<p>could be shrunk down:</p>\n<pre><code>function(){\n  $('#lstInventory').children().each(function(){\n    if(ignoreScenery.indexOf($(this).data('elementid')) &gt;= 0 ){\n      $(this).hide();\n    }\n  });\n}\n</code></pre>\n<p>(or, using a modified version of my script from the other thread. Edited to be more readable, and to use the ignoreScenery array rather than redefining the function every turn)</p>\n<pre><code>var realUpdateList = updateList;\nupdateList = function (listName, listData) {\n  if (ignoreScenery) {\n    $.each(listData, function (key, value) {\n      var data = JSON.parse(value);\n      if (ignoreScenery.indexOf( data[\"elementid\"] ) &gt;= 0) {\n        delete listData[key];\n      }\n    });\n  }\n  realUpdateList (listName, listData);\n};\n</code></pre>\n\n",
      "PostDate": "2018-05-20T20:14:27.5644471Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f1744fc6-4c55-481d-ab1d-dd14e311af3b",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Example Game:\r\n\r\nhttp://textadventures.co.uk/games/view/59edxksdekis-korhnz5-q/contents-in-lists\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Contents in Lists\">\r\n    <gameid>edd4c8c3-a135-448a-beb2-159be0998b30</gameid>\r\n    <version>1.4</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <feature_advancedscripts />\r\n    <start type=\"script\">\r\n      UpdateContentsInLists\r\n    </start>\r\n    <inituserinterface type=\"script\"><![CDATA[\r\n      JS.eval (\"function updateList(listName, listData) {     var listElement = \\\"\\\";     var buttonPrefix = \\\"\\\";      if (listName == \\\"inventory\\\") {         listElement = \\\"#lstInventory\\\";         inventoryVerbs = new Array();         buttonPrefix = \\\"cmdInventory\\\";     }      if (listName == \\\"placesobjects\\\") {         listElement = \\\"#lstPlacesObjects\\\";         placesObjectsVerbs = new Array();         buttonPrefix = \\\"cmdPlacesObjects\\\";     }      var previousSelectionText = \\\"\\\";     var previousSelectionKey = \\\"\\\";     var foundPreviousSelection = false;      var $selected = $(listElement + \\\" .ui-selected\\\");     if ($selected.length > 0) {         previousSelectionText = $selected.first().text();         previousSelectionKey = $selected.first().data(\\\"key\\\");     }      $(listElement).empty();     var count = 0;     $.each(listData, function (key, value) {         var data = JSON.parse(value);         for (var i in ignoreScenery){           \tif (data['ElementName'] == ignoreScenery[i]){           \t\treturn;         \t}         }         var objectDisplayName = data[\\\"Text\\\"];         var verbsArray, idPrefix;          if (listName == \\\"inventory\\\") {             verbsArray = inventoryVerbs;             idPrefix = \\\"cmdInventory\\\";         } else {             verbsArray = placesObjectsVerbs;             idPrefix = \\\"cmdPlacesObjects\\\";         }         verbsArray.push(data);         if (listName == \\\"inventory\\\" || $.inArray(objectDisplayName, _compassDirs) == -1) {         \t          var $newItem = $(\\\"<li/>\\\").data(\\\"key\\\", key).data(\\\"elementid\\\", data[\\\"ElementId\\\"]).data(\\\"elementname\\\", data[\\\"ElementName\\\"]).data(\\\"index\\\", count).html(objectDisplayName);           if (objectDisplayName == previousSelectionText && key == previousSelectionKey) {                 $newItem.addClass(\\\"ui-selected\\\");                 foundPreviousSelection = true;                 updateVerbButtons($newItem, verbsArray, idPrefix);             }    \t\t\t$(listElement).append($newItem);             count++;         }     });      var selectSize = count;     if (selectSize < 3) selectSize = 3;     if (selectSize > 12) selectSize = 12;     $(listElement).attr(\\\"size\\\", selectSize);         if (!foundPreviousSelection) {         for (var i = 1; i <= verbButtonCount; i++) {             var target = $(\\\"#\\\" + buttonPrefix + i);             target.hide();         }     } }\")\r\n      firsttime {\r\n      }\r\n      otherwise {\r\n        UpdateContentsInLists\r\n        SetTimeout (2) {\r\n          UpdateContentsInLists\r\n        }\r\n      }\r\n    ]]></inituserinterface>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"table\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"surface\" />\r\n      <feature_container />\r\n      <listchildren />\r\n      <listchildrenprefix>On it, you see</listchildrenprefix>\r\n      <takemsg>It's too big to take.</takemsg>\r\n      <look><![CDATA[An oak dining table.<br/>]]></look>\r\n      <displayverbs type=\"stringlist\">\r\n        <value>Look at</value>\r\n      </displayverbs>\r\n      <object name=\"bowl\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"container_open\" />\r\n        <feature_container />\r\n        <close type=\"boolean\">false</close>\r\n        <open type=\"boolean\">false</open>\r\n        <displayverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n          <value>Take</value>\r\n        </displayverbs>\r\n        <take />\r\n        <listchildren />\r\n        <look><![CDATA[A plastic bowl.<br/>]]></look>\r\n        <object name=\"apple\">\r\n          <inherit name=\"editor_object\" />\r\n          <inherit name=\"edible\" />\r\n          <take />\r\n          <feature_edible />\r\n          <scenery />\r\n          <look><![CDATA[A red apple.<br/>]]></look>\r\n        </object>\r\n        <object name=\"orange\">\r\n          <inherit name=\"editor_object\" />\r\n          <inherit name=\"edible\" />\r\n          <take />\r\n          <feature_edible />\r\n          <look><![CDATA[A navel orange.<br/>]]></look>\r\n          <eat type=\"script\">\r\n            if (HasString(this, \"eatmsg\")) {\r\n              msg (this.eatmsg)\r\n            }\r\n            else {\r\n              msg (DynamicTemplate(\"Eaten\", this))\r\n            }\r\n            if (HasInt(game.pov, \"health\")) {\r\n              game.pov.health = game.pov.health + this.eathealth\r\n            }\r\n            destroy (this.name)\r\n            apple.scenery = false\r\n            if (ListContains(ScopeReachable(),bowl)) {\r\n              msg (\"By some strange (but much appreciated) coincidence, an apple has magically appeared in the bowl!\")\r\n            }\r\n          </eat>\r\n        </object>\r\n      </object>\r\n      <object name=\"lazy susan\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"surface\" />\r\n        <feature_container />\r\n        <listchildren />\r\n        <listchildrenprefix>On it, you see</listchildrenprefix>\r\n        <look>A lazy susan.  You can spin it to move items around the table.  (Your grandparents used to have one.)</look>\r\n        <spin>You spin it.</spin>\r\n        <displayverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n        </displayverbs>\r\n        <takemsg>It {once:appears to be}{notfirst:is} attached to the table.</takemsg>\r\n      </object>\r\n      <object name=\"hat\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"wearable\" />\r\n        <take />\r\n        <look><![CDATA[It's just like Indiana Jones's hat.<br/>]]></look>\r\n        <feature_wearable />\r\n      </object>\r\n    </object>\r\n  </object>\r\n  <turnscript name=\"update_contents_in_lists_turnscript\">\r\n    <enabled />\r\n    <script>\r\n      UpdateContentsInLists\r\n    </script>\r\n  </turnscript>\r\n  <verb>\r\n    <property>spin</property>\r\n    <pattern>spin</pattern>\r\n    <defaultexpression>\"You can't spin \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n  <function name=\"UpdateContentsInLists\"><![CDATA[\r\n    JS.eval (\"var ignoreScenery = [];\")\r\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\r\n      if (not HasAttribute(o, \"listalias\")) {\r\n        o.listalias = GetDisplayAlias(o)\r\n      }\r\n      o.listalias = Replace(o.listalias,\"&nbsp;\",\"\")\r\n      containers = ListExclude(ListParents(o), game.pov)\r\n      containers = ListExclude(containers, ListParents(game.pov))\r\n      foreach (c, containers) {\r\n        o.listalias = \"&nbsp;&nbsp;\" + o.listalias\r\n      }\r\n      if (GetBoolean (o, \"scenery\")) {\r\n        JS.eval (\"ignoreScenery.push('\"+GetDisplayAlias(o)+\"');\")\r\n      }\r\n    }\r\n  ]]></function>\r\n</asl>\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>Example Game:</p>\n<p>http://textadventures.co.uk/games/view/59edxksdekis-korhnz5-q/contents-in-lists</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Contents in Lists\"&gt;\n    &lt;gameid&gt;edd4c8c3-a135-448a-beb2-159be0998b30&lt;/gameid&gt;\n    &lt;version&gt;1.4&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;feature_advancedscripts /&gt;\n    &lt;start type=\"script\"&gt;\n      UpdateContentsInLists\n    &lt;/start&gt;\n    &lt;inituserinterface type=\"script\"&gt;&lt;![CDATA[\n      JS.eval (\"function updateList(listName, listData) {     var listElement = \\\"\\\";     var buttonPrefix = \\\"\\\";      if (listName == \\\"inventory\\\") {         listElement = \\\"#lstInventory\\\";         inventoryVerbs = new Array();         buttonPrefix = \\\"cmdInventory\\\";     }      if (listName == \\\"placesobjects\\\") {         listElement = \\\"#lstPlacesObjects\\\";         placesObjectsVerbs = new Array();         buttonPrefix = \\\"cmdPlacesObjects\\\";     }      var previousSelectionText = \\\"\\\";     var previousSelectionKey = \\\"\\\";     var foundPreviousSelection = false;      var $selected = $(listElement + \\\" .ui-selected\\\");     if ($selected.length &gt; 0) {         previousSelectionText = $selected.first().text();         previousSelectionKey = $selected.first().data(\\\"key\\\");     }      $(listElement).empty();     var count = 0;     $.each(listData, function (key, value) {         var data = JSON.parse(value);         for (var i in ignoreScenery){           \tif (data['ElementName'] == ignoreScenery[i]){           \t\treturn;         \t}         }         var objectDisplayName = data[\\\"Text\\\"];         var verbsArray, idPrefix;          if (listName == \\\"inventory\\\") {             verbsArray = inventoryVerbs;             idPrefix = \\\"cmdInventory\\\";         } else {             verbsArray = placesObjectsVerbs;             idPrefix = \\\"cmdPlacesObjects\\\";         }         verbsArray.push(data);         if (listName == \\\"inventory\\\" || $.inArray(objectDisplayName, _compassDirs) == -1) {         \t          var $newItem = $(\\\"&lt;li/&gt;\\\").data(\\\"key\\\", key).data(\\\"elementid\\\", data[\\\"ElementId\\\"]).data(\\\"elementname\\\", data[\\\"ElementName\\\"]).data(\\\"index\\\", count).html(objectDisplayName);           if (objectDisplayName == previousSelectionText &amp;&amp; key == previousSelectionKey) {                 $newItem.addClass(\\\"ui-selected\\\");                 foundPreviousSelection = true;                 updateVerbButtons($newItem, verbsArray, idPrefix);             }    \t\t\t$(listElement).append($newItem);             count++;         }     });      var selectSize = count;     if (selectSize &lt; 3) selectSize = 3;     if (selectSize &gt; 12) selectSize = 12;     $(listElement).attr(\\\"size\\\", selectSize);         if (!foundPreviousSelection) {         for (var i = 1; i &lt;= verbButtonCount; i++) {             var target = $(\\\"#\\\" + buttonPrefix + i);             target.hide();         }     } }\")\n      firsttime {\n      }\n      otherwise {\n        UpdateContentsInLists\n        SetTimeout (2) {\n          UpdateContentsInLists\n        }\n      }\n    ]]&gt;&lt;/inituserinterface&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"table\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"surface\" /&gt;\n      &lt;feature_container /&gt;\n      &lt;listchildren /&gt;\n      &lt;listchildrenprefix&gt;On it, you see&lt;/listchildrenprefix&gt;\n      &lt;takemsg&gt;It's too big to take.&lt;/takemsg&gt;\n      &lt;look&gt;&lt;![CDATA[An oak dining table.&lt;br/&gt;]]&gt;&lt;/look&gt;\n      &lt;displayverbs type=\"stringlist\"&gt;\n        &lt;value&gt;Look at&lt;/value&gt;\n      &lt;/displayverbs&gt;\n      &lt;object name=\"bowl\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"container_open\" /&gt;\n        &lt;feature_container /&gt;\n        &lt;close type=\"boolean\"&gt;false&lt;/close&gt;\n        &lt;open type=\"boolean\"&gt;false&lt;/open&gt;\n        &lt;displayverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n          &lt;value&gt;Take&lt;/value&gt;\n        &lt;/displayverbs&gt;\n        &lt;take /&gt;\n        &lt;listchildren /&gt;\n        &lt;look&gt;&lt;![CDATA[A plastic bowl.&lt;br/&gt;]]&gt;&lt;/look&gt;\n        &lt;object name=\"apple\"&gt;\n          &lt;inherit name=\"editor_object\" /&gt;\n          &lt;inherit name=\"edible\" /&gt;\n          &lt;take /&gt;\n          &lt;feature_edible /&gt;\n          &lt;scenery /&gt;\n          &lt;look&gt;&lt;![CDATA[A red apple.&lt;br/&gt;]]&gt;&lt;/look&gt;\n        &lt;/object&gt;\n        &lt;object name=\"orange\"&gt;\n          &lt;inherit name=\"editor_object\" /&gt;\n          &lt;inherit name=\"edible\" /&gt;\n          &lt;take /&gt;\n          &lt;feature_edible /&gt;\n          &lt;look&gt;&lt;![CDATA[A navel orange.&lt;br/&gt;]]&gt;&lt;/look&gt;\n          &lt;eat type=\"script\"&gt;\n            if (HasString(this, \"eatmsg\")) {\n              msg (this.eatmsg)\n            }\n            else {\n              msg (DynamicTemplate(\"Eaten\", this))\n            }\n            if (HasInt(game.pov, \"health\")) {\n              game.pov.health = game.pov.health + this.eathealth\n            }\n            destroy (this.name)\n            apple.scenery = false\n            if (ListContains(ScopeReachable(),bowl)) {\n              msg (\"By some strange (but much appreciated) coincidence, an apple has magically appeared in the bowl!\")\n            }\n          &lt;/eat&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n      &lt;object name=\"lazy susan\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"surface\" /&gt;\n        &lt;feature_container /&gt;\n        &lt;listchildren /&gt;\n        &lt;listchildrenprefix&gt;On it, you see&lt;/listchildrenprefix&gt;\n        &lt;look&gt;A lazy susan.  You can spin it to move items around the table.  (Your grandparents used to have one.)&lt;/look&gt;\n        &lt;spin&gt;You spin it.&lt;/spin&gt;\n        &lt;displayverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n        &lt;/displayverbs&gt;\n        &lt;takemsg&gt;It {once:appears to be}{notfirst:is} attached to the table.&lt;/takemsg&gt;\n      &lt;/object&gt;\n      &lt;object name=\"hat\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"wearable\" /&gt;\n        &lt;take /&gt;\n        &lt;look&gt;&lt;![CDATA[It's just like Indiana Jones's hat.&lt;br/&gt;]]&gt;&lt;/look&gt;\n        &lt;feature_wearable /&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;turnscript name=\"update_contents_in_lists_turnscript\"&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      UpdateContentsInLists\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;verb&gt;\n    &lt;property&gt;spin&lt;/property&gt;\n    &lt;pattern&gt;spin&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't spin \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;function name=\"UpdateContentsInLists\"&gt;&lt;![CDATA[\n    JS.eval (\"var ignoreScenery = [];\")\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\n      if (not HasAttribute(o, \"listalias\")) {\n        o.listalias = GetDisplayAlias(o)\n      }\n      o.listalias = Replace(o.listalias,\"&amp;nbsp;\",\"\")\n      containers = ListExclude(ListParents(o), game.pov)\n      containers = ListExclude(containers, ListParents(game.pov))\n      foreach (c, containers) {\n        o.listalias = \"&amp;nbsp;&amp;nbsp;\" + o.listalias\n      }\n      if (GetBoolean (o, \"scenery\")) {\n        JS.eval (\"ignoreScenery.push('\"+GetDisplayAlias(o)+\"');\")\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2018-05-20T20:19:42.3369908Z",
      "LastEditDate": "2018-05-21T00:11:07.9594904Z",
      "link": null
    },
    {
      "PostId": "27f4f6ac-14da-4e00-af57-cd8be65be3f5",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah, you beat me to it again :p\r\n\r\nLooks good. But I notice that function includes the line:\r\n```\r\n        if (listName == \"inventory\" || $.inArray(objectDisplayName, _compassDirs) == -1) {\r\n```\r\nto make it skip over any elements whose names are in a certain array. That seems like a perfect place to put another if statement (or an 'and' clause) to make it skip elements that are in a different array.\r\n```\r\n        if (listName == \"inventory\" || $.inArray(objectDisplayName, _compassDirs) == -1 && $.inArray(data['ElementId'], ignoreScenery) == -1) {\r\n```\r\nmaybe?",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah, you beat me to it again :p</p>\n<p>Looks good. But I notice that function includes the line:</p>\n<pre><code>        if (listName == \"inventory\" || $.inArray(objectDisplayName, _compassDirs) == -1) {\n</code></pre>\n<p>to make it skip over any elements whose names are in a certain array. That seems like a perfect place to put another if statement (or an 'and' clause) to make it skip elements that are in a different array.</p>\n<pre><code>        if (listName == \"inventory\" || $.inArray(objectDisplayName, _compassDirs) == -1 &amp;&amp; $.inArray(data['ElementId'], ignoreScenery) == -1) {\n</code></pre>\n<p>maybe?</p>\n\n",
      "PostDate": "2018-05-20T20:23:22.4276097Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "06b699d1-81d4-4cc8-9a2a-ddaa4e7ca2f1",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Darn it!\r\n\r\nIt breaks the pane lists in save games online when I modify ```updateList()```...",
      "EditableFormat": "markdown",
      "HTML": "<p>Darn it!</p>\n<p>It breaks the pane lists in save games online when I modify <code>updateList()</code>...</p>\n\n",
      "PostDate": "2018-05-20T20:26:56.9066044Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ed971022-7fdf-4bb3-928a-e9bafcb83aca",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Ah, you beat me to it again :p\r\n\r\nDitto!\r\n\r\nI was going back and trying what you posted.  I forgot a bit, came back to look, and it's all different now.  (Ha ha ha!)\r\n\r\nIt's all good, though.  I just applied the changes you just suggested.  It works in the desktop.  I'm about to test it out online.\r\n\r\n---\r\nNOTE:\r\n\r\nYou guys better never let mrangel and I end up in the same room!  We'd get all kinds of stuff done in a timely manner if there were no posts to get crossed up!",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Ah, you beat me to it again :p</p>\n</blockquote>\n<p>Ditto!</p>\n<p>I was going back and trying what you posted.  I forgot a bit, came back to look, and it's all different now.  (Ha ha ha!)</p>\n<p>It's all good, though.  I just applied the changes you just suggested.  It works in the desktop.  I'm about to test it out online.</p>\n<hr>\n<p>NOTE:</p>\n<p>You guys better never let mrangel and I end up in the same room!  We'd get all kinds of stuff done in a timely manner if there were no posts to get crossed up!</p>\n\n",
      "PostDate": "2018-05-20T22:09:01.8805659Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1bc787fb-86c3-4ac3-af92-32f97f8e3296",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay...\r\n\r\nI tried it countless ways with a modified ```updateList()```.  Each variation worked, until I loaded a saved game online.  Then, either a scenery object showed up on load, or nothing showed up in the panes at all on load.  The lists displayed correctly after taking 1 turn after loading a saved game in each instance.\r\n\r\nUPDATE\r\n\r\nSee the next post for the example game which modifies ```updateList()```.\r\n\r\n---\r\n### This method does not modify ```updateList()```.\r\n\r\nIt uses a ```setTimeout()``` to remove the scenery object(s), and I can't see it happen, so I'm thinking it may be okay.  \r\n\r\nThe only issue I've found with this method is that scenery objects show up if you switch to the lists in the mobile browser.  BUT using the alternate method totally breaks the lists, so pick your poison.  (If I were you, I'd honestly just avoid putting scenery objects in containers which can end up in the inventory!)\r\n\r\nExample Game (3.0)\r\n\r\nhttp://textadventures.co.uk/games/view/59edxksdekis-korhnz5-q/contents-in-lists\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Contents in Lists\">\r\n    <gameid>edd4c8c3-a135-448a-beb2-159be0998b30</gameid>\r\n    <version>3.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <feature_advancedscripts />\r\n    <start type=\"script\">\r\n      UpdateContentsInLists\r\n    </start>\r\n    <inituserinterface type=\"script\">\r\n      if (not game.timeelapsed = 0) {\r\n        UpdateContentsInLists\r\n      }\r\n    </inituserinterface>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"table\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"surface\" />\r\n      <feature_container />\r\n      <listchildren />\r\n      <listchildrenprefix>On it, you see</listchildrenprefix>\r\n      <takemsg>It's too big to take.</takemsg>\r\n      <look><![CDATA[An oak dining table.<br/>]]></look>\r\n      <displayverbs type=\"stringlist\">\r\n        <value>Look at</value>\r\n      </displayverbs>\r\n      <object name=\"bowl\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"container_open\" />\r\n        <feature_container />\r\n        <close type=\"boolean\">false</close>\r\n        <open type=\"boolean\">false</open>\r\n        <displayverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n          <value>Take</value>\r\n        </displayverbs>\r\n        <take />\r\n        <listchildren />\r\n        <look><![CDATA[A plastic bowl.<br/>]]></look>\r\n        <object name=\"apple\">\r\n          <inherit name=\"editor_object\" />\r\n          <inherit name=\"edible\" />\r\n          <take />\r\n          <feature_edible />\r\n          <scenery />\r\n          <look><![CDATA[A red apple.<br/>]]></look>\r\n        </object>\r\n        <object name=\"orange\">\r\n          <inherit name=\"editor_object\" />\r\n          <inherit name=\"edible\" />\r\n          <take />\r\n          <feature_edible />\r\n          <look><![CDATA[A navel orange.<br/>]]></look>\r\n          <eat type=\"script\">\r\n            if (HasString(this, \"eatmsg\")) {\r\n              msg (this.eatmsg)\r\n            }\r\n            else {\r\n              msg (DynamicTemplate(\"Eaten\", this))\r\n            }\r\n            if (HasInt(game.pov, \"health\")) {\r\n              game.pov.health = game.pov.health + this.eathealth\r\n            }\r\n            destroy (this.name)\r\n            apple.scenery = false\r\n            if (ListContains(ScopeReachable(),bowl)) {\r\n              msg (\"By some strange (but much appreciated) coincidence, an apple has magically appeared in the bowl!\")\r\n            }\r\n          </eat>\r\n        </object>\r\n      </object>\r\n      <object name=\"lazy susan\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"surface\" />\r\n        <feature_container />\r\n        <listchildren />\r\n        <listchildrenprefix>On it, you see</listchildrenprefix>\r\n        <look>A lazy susan.  You can spin it to move items around the table.  (Your grandparents used to have one.)</look>\r\n        <spin>You spin it.</spin>\r\n        <displayverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n        </displayverbs>\r\n        <takemsg>It {once:appears to be}{notfirst:is} attached to the table.</takemsg>\r\n      </object>\r\n      <object name=\"hat\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"wearable\" />\r\n        <take />\r\n        <look><![CDATA[It's just like Indiana Jones's hat.<br/>]]></look>\r\n        <feature_wearable />\r\n      </object>\r\n    </object>\r\n  </object>\r\n  <turnscript name=\"update_contents_in_lists_turnscript\">\r\n    <enabled />\r\n    <script>\r\n      UpdateContentsInLists\r\n    </script>\r\n  </turnscript>\r\n  <verb>\r\n    <property>spin</property>\r\n    <pattern>spin</pattern>\r\n    <defaultexpression>\"You can't spin \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n  <function name=\"UpdateContentsInLists\"><![CDATA[\r\n    JS.eval (\"var ignoreScenery = [];\")\r\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\r\n      if (not HasAttribute(o, \"listalias\")) {\r\n        o.listalias = GetDisplayAlias(o)\r\n      }\r\n      o.listalias = Replace(o.listalias,\"&nbsp;\",\"\")\r\n      containers = ListExclude(ListParents(o), game.pov)\r\n      containers = ListExclude(containers, ListParents(game.pov))\r\n      foreach (c, containers) {\r\n        o.listalias = \"&nbsp;&nbsp;\" + o.listalias\r\n      }\r\n      if (GetBoolean (o, \"scenery\")) {\r\n        JS.eval (\"ignoreScenery.push('\"+o.name+\"');\")\r\n      }\r\n      else {\r\n        JS.eval (\"if (typeof(ignoreScenery) != 'undefined'){var index = ignoreScenery.indexOf('\"+o.listalias+\"');\tif (index > -1) {ignoreScenery.splice(index, 1);\t}}\")\r\n      }\r\n    }\r\n    JS.eval (\"setTimeout(function(){for(var i in ignoreScenery){$('#lstInventory').children().each(function(){if ($(this).data('elementid') == ignoreScenery[i] ){$(this).hide();}});};},1);\")\r\n  ]]></function>\r\n</asl>\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay...</p>\n<p>I tried it countless ways with a modified <code>updateList()</code>.  Each variation worked, until I loaded a saved game online.  Then, either a scenery object showed up on load, or nothing showed up in the panes at all on load.  The lists displayed correctly after taking 1 turn after loading a saved game in each instance.</p>\n<p>UPDATE</p>\n<p>See the next post for the example game which modifies <code>updateList()</code>.</p>\n<hr>\n<h3>This method does not modify <code>updateList()</code>.</h3>\n<p>It uses a <code>setTimeout()</code> to remove the scenery object(s), and I can't see it happen, so I'm thinking it may be okay.</p>\n<p>The only issue I've found with this method is that scenery objects show up if you switch to the lists in the mobile browser.  BUT using the alternate method totally breaks the lists, so pick your poison.  (If I were you, I'd honestly just avoid putting scenery objects in containers which can end up in the inventory!)</p>\n<p>Example Game (3.0)</p>\n<p>http://textadventures.co.uk/games/view/59edxksdekis-korhnz5-q/contents-in-lists</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Contents in Lists\"&gt;\n    &lt;gameid&gt;edd4c8c3-a135-448a-beb2-159be0998b30&lt;/gameid&gt;\n    &lt;version&gt;3.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;feature_advancedscripts /&gt;\n    &lt;start type=\"script\"&gt;\n      UpdateContentsInLists\n    &lt;/start&gt;\n    &lt;inituserinterface type=\"script\"&gt;\n      if (not game.timeelapsed = 0) {\n        UpdateContentsInLists\n      }\n    &lt;/inituserinterface&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"table\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"surface\" /&gt;\n      &lt;feature_container /&gt;\n      &lt;listchildren /&gt;\n      &lt;listchildrenprefix&gt;On it, you see&lt;/listchildrenprefix&gt;\n      &lt;takemsg&gt;It's too big to take.&lt;/takemsg&gt;\n      &lt;look&gt;&lt;![CDATA[An oak dining table.&lt;br/&gt;]]&gt;&lt;/look&gt;\n      &lt;displayverbs type=\"stringlist\"&gt;\n        &lt;value&gt;Look at&lt;/value&gt;\n      &lt;/displayverbs&gt;\n      &lt;object name=\"bowl\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"container_open\" /&gt;\n        &lt;feature_container /&gt;\n        &lt;close type=\"boolean\"&gt;false&lt;/close&gt;\n        &lt;open type=\"boolean\"&gt;false&lt;/open&gt;\n        &lt;displayverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n          &lt;value&gt;Take&lt;/value&gt;\n        &lt;/displayverbs&gt;\n        &lt;take /&gt;\n        &lt;listchildren /&gt;\n        &lt;look&gt;&lt;![CDATA[A plastic bowl.&lt;br/&gt;]]&gt;&lt;/look&gt;\n        &lt;object name=\"apple\"&gt;\n          &lt;inherit name=\"editor_object\" /&gt;\n          &lt;inherit name=\"edible\" /&gt;\n          &lt;take /&gt;\n          &lt;feature_edible /&gt;\n          &lt;scenery /&gt;\n          &lt;look&gt;&lt;![CDATA[A red apple.&lt;br/&gt;]]&gt;&lt;/look&gt;\n        &lt;/object&gt;\n        &lt;object name=\"orange\"&gt;\n          &lt;inherit name=\"editor_object\" /&gt;\n          &lt;inherit name=\"edible\" /&gt;\n          &lt;take /&gt;\n          &lt;feature_edible /&gt;\n          &lt;look&gt;&lt;![CDATA[A navel orange.&lt;br/&gt;]]&gt;&lt;/look&gt;\n          &lt;eat type=\"script\"&gt;\n            if (HasString(this, \"eatmsg\")) {\n              msg (this.eatmsg)\n            }\n            else {\n              msg (DynamicTemplate(\"Eaten\", this))\n            }\n            if (HasInt(game.pov, \"health\")) {\n              game.pov.health = game.pov.health + this.eathealth\n            }\n            destroy (this.name)\n            apple.scenery = false\n            if (ListContains(ScopeReachable(),bowl)) {\n              msg (\"By some strange (but much appreciated) coincidence, an apple has magically appeared in the bowl!\")\n            }\n          &lt;/eat&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n      &lt;object name=\"lazy susan\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"surface\" /&gt;\n        &lt;feature_container /&gt;\n        &lt;listchildren /&gt;\n        &lt;listchildrenprefix&gt;On it, you see&lt;/listchildrenprefix&gt;\n        &lt;look&gt;A lazy susan.  You can spin it to move items around the table.  (Your grandparents used to have one.)&lt;/look&gt;\n        &lt;spin&gt;You spin it.&lt;/spin&gt;\n        &lt;displayverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n        &lt;/displayverbs&gt;\n        &lt;takemsg&gt;It {once:appears to be}{notfirst:is} attached to the table.&lt;/takemsg&gt;\n      &lt;/object&gt;\n      &lt;object name=\"hat\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"wearable\" /&gt;\n        &lt;take /&gt;\n        &lt;look&gt;&lt;![CDATA[It's just like Indiana Jones's hat.&lt;br/&gt;]]&gt;&lt;/look&gt;\n        &lt;feature_wearable /&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;turnscript name=\"update_contents_in_lists_turnscript\"&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      UpdateContentsInLists\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;verb&gt;\n    &lt;property&gt;spin&lt;/property&gt;\n    &lt;pattern&gt;spin&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't spin \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;function name=\"UpdateContentsInLists\"&gt;&lt;![CDATA[\n    JS.eval (\"var ignoreScenery = [];\")\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\n      if (not HasAttribute(o, \"listalias\")) {\n        o.listalias = GetDisplayAlias(o)\n      }\n      o.listalias = Replace(o.listalias,\"&amp;nbsp;\",\"\")\n      containers = ListExclude(ListParents(o), game.pov)\n      containers = ListExclude(containers, ListParents(game.pov))\n      foreach (c, containers) {\n        o.listalias = \"&amp;nbsp;&amp;nbsp;\" + o.listalias\n      }\n      if (GetBoolean (o, \"scenery\")) {\n        JS.eval (\"ignoreScenery.push('\"+o.name+\"');\")\n      }\n      else {\n        JS.eval (\"if (typeof(ignoreScenery) != 'undefined'){var index = ignoreScenery.indexOf('\"+o.listalias+\"');\tif (index &gt; -1) {ignoreScenery.splice(index, 1);\t}}\")\n      }\n    }\n    JS.eval (\"setTimeout(function(){for(var i in ignoreScenery){$('#lstInventory').children().each(function(){if ($(this).data('elementid') == ignoreScenery[i] ){$(this).hide();}});};},1);\")\n  ]]&gt;&lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2018-05-20T23:26:44.8336396Z",
      "LastEditDate": "2018-05-21T00:56:35.0758601Z",
      "link": null
    },
    {
      "PostId": "b70c50d4-6ad8-46db-a885-d6b367b932fc",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hmm... maybe after the turnscript that sends the list of scenery objects to hide, we could have JS to serialise that data into a hidden element within the output div. Then have JS to hide it again when a game is loaded. (I assume javascript files within Quest are loaded after the output div has been restored?)",
      "EditableFormat": "markdown",
      "HTML": "<p>Hmm... maybe after the turnscript that sends the list of scenery objects to hide, we could have JS to serialise that data into a hidden element within the output div. Then have JS to hide it again when a game is loaded. (I assume javascript files within Quest are loaded after the output div has been restored?)</p>\n\n",
      "PostDate": "2018-05-21T00:35:24.1440015Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6485c7c7-cceb-4960-9eb5-661e02ade4ea",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I got it.  I had something messed up somewhere (don't know where).\r\n\r\nNOTE: This is not perfect.  This breaks the lists in the mobile browser.  The turn script method shows the scenery objects in the lists in the mobile browser, but the lists are indented properly and work correctly with the turn script stuff (see my previous post).  Honestly, we shouldn't worry with scenery objects at all (see my next post).\r\n\r\n---\r\nThe code:\r\n\r\n<details>\r\n\r\n\r\n---\r\njavascript.js (Includes modified ```updateList()```):\r\n\r\n```\r\nvar ignoreScenery = [];\r\n\r\nsetTimeout(function(){\r\n ASLEvent(\"CallUpdateContentsInLists\",\"\");\r\n},2000);\r\n\r\nfunction updateList(listName, listData) {\r\n    var listElement = \"\";\r\n    var buttonPrefix = \"\";\r\n\r\n    if (listName == \"inventory\") {\r\n        listElement = \"#lstInventory\";\r\n        inventoryVerbs = new Array();\r\n        buttonPrefix = \"cmdInventory\";\r\n    }\r\n\r\n    if (listName == \"placesobjects\") {\r\n        listElement = \"#lstPlacesObjects\";\r\n        placesObjectsVerbs = new Array();\r\n        buttonPrefix = \"cmdPlacesObjects\";\r\n    }\r\n\r\n    var previousSelectionText = \"\";\r\n    var previousSelectionKey = \"\";\r\n    var foundPreviousSelection = false;\r\n\r\n    var $selected = $(listElement + \" .ui-selected\");\r\n    if ($selected.length > 0) {\r\n        previousSelectionText = $selected.first().text();\r\n        previousSelectionKey = $selected.first().data(\"key\");\r\n    }\r\n\r\n    $(listElement).empty();\r\n    var count = 0;\r\n    $.each(listData, function (key, value) {\r\n        var scenery = false;\r\n        var data = JSON.parse(value);\r\n        for (var i in ignoreScenery){\r\n           if (data['ElementName'] == ignoreScenery[i]){\r\n            scenery = true;\r\n         }\r\n        }\r\n        var objectDisplayName = data[\"Text\"];\r\n        var verbsArray, idPrefix;\r\n\r\n        if (listName == \"inventory\") {\r\n            verbsArray = inventoryVerbs;\r\n            idPrefix = \"cmdInventory\";\r\n        } else {\r\n            verbsArray = placesObjectsVerbs;\r\n            idPrefix = \"cmdPlacesObjects\";\r\n        }\r\n        verbsArray.push(data);\r\n        if ((listName == \"inventory\" || $.inArray(objectDisplayName, _compassDirs) == -1) && !scenery) {\r\n         var vis = '';\r\n         if (scenery){vis = 'style=\\'display:none;\\'';}\r\n         var $newItem = $(\"<li \"+vis+\"/>\").data(\"key\", key).data(\"elementid\", data[\"ElementId\"]).data(\"elementname\", data[\"ElementName\"]).data(\"index\", count).html(objectDisplayName);\r\n\r\n         if (objectDisplayName == previousSelectionText && key == previousSelectionKey) {\r\n                $newItem.addClass(\"ui-selected\");\r\n                foundPreviousSelection = true;\r\n                updateVerbButtons($newItem, verbsArray, idPrefix);\r\n            }\r\n      $(listElement).append($newItem);\r\n            count++;\r\n        }\r\n    });\r\n\r\n    var selectSize = count;\r\n    if (selectSize < 3) selectSize = 3;\r\n    if (selectSize > 12) selectSize = 12;\r\n    $(listElement).attr(\"size\", selectSize);\r\n    \r\n    if (!foundPreviousSelection) {\r\n        for (var i = 1; i <= verbButtonCount; i++) {\r\n            var target = $(\"#\" + buttonPrefix + i);\r\n            target.hide();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n---\r\n```UpdateListContentsInLists```:\r\n\r\n```\r\n  <function name=\"UpdateContentsInLists\"><![CDATA[\r\n    JS.eval (\"var ignoreScenery = [];\")\r\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\r\n      if (not HasAttribute(o, \"listalias\")) {\r\n        o.listalias = GetDisplayAlias(o)\r\n      }\r\n      o.listalias = Replace(o.listalias,\"&nbsp;\",\"\")\r\n      containers = ListExclude(ListParents(o), game.pov)\r\n      containers = ListExclude(containers, ListParents(game.pov))\r\n      foreach (c, containers) {\r\n        o.listalias = \"&nbsp;&nbsp;\" + o.listalias\r\n      }\r\n      if (GetBoolean (o, \"scenery\")) {\r\n        JS.eval (\"ignoreScenery.push('\"+o.name+\"');\")\r\n      }\r\n    }\r\n  ]]></function>\r\n```\r\n\r\n---\r\n```CallUpdateContentsInLists```:\r\n```\r\n  <function name=\"CallUpdateContentsInLists\" parameters=\"bs\">\r\n    UpdateContentsInLists\r\n  </function>\r\n```\r\n\r\n---\r\nTurn script:\r\n```\r\n  <turnscript name=\"update_contents_in_lists_turnscript\">\r\n    <enabled />\r\n    <script>\r\n      UpdateContentsInLists\r\n    </script>\r\n  </turnscript>\r\n```\r\n\r\n---\r\nStart script:\r\n```\r\n    <start type=\"script\">\r\n      UpdateContentsInLists\r\n    </start>\r\n```\r\n\r\n---\r\nUser Interface Initialisation script:\r\n```\r\n    <inituserinterface type=\"script\">\r\n      if (not game.timeelapsed = 0) {\r\n        UpdateContentsInLists\r\n      }\r\n    </inituserinterface>\r\n```\r\n\r\n---\r\nExample Game\r\n\r\nhttp://textadventures.co.uk/games/view/1cf53rawc02l6o8d7uu_wa/contents-in-lists-no-settimeout\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Contents in Lists\">\r\n    <gameid>8e915ad1-d720-4362-9e28-8d81592852b4</gameid>\r\n    <version>4.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <feature_advancedscripts />\r\n    <start type=\"script\">\r\n      UpdateContentsInLists\r\n    </start>\r\n    <inituserinterface type=\"script\">\r\n      if (not game.timeelapsed = 0) {\r\n        UpdateContentsInLists\r\n      }\r\n    </inituserinterface>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"table\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"surface\" />\r\n      <feature_container />\r\n      <listchildren />\r\n      <listchildrenprefix>On it, you see</listchildrenprefix>\r\n      <takemsg>It's too big to take.</takemsg>\r\n      <look><![CDATA[An oak dining table.<br/>]]></look>\r\n      <displayverbs type=\"stringlist\">\r\n        <value>Look at</value>\r\n      </displayverbs>\r\n      <object name=\"bowl\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"container_open\" />\r\n        <feature_container />\r\n        <close type=\"boolean\">false</close>\r\n        <open type=\"boolean\">false</open>\r\n        <displayverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n          <value>Take</value>\r\n        </displayverbs>\r\n        <take />\r\n        <listchildren />\r\n        <look><![CDATA[A plastic bowl.<br/>]]></look>\r\n        <object name=\"apple\">\r\n          <inherit name=\"editor_object\" />\r\n          <inherit name=\"edible\" />\r\n          <take />\r\n          <feature_edible />\r\n          <scenery />\r\n          <look><![CDATA[A red apple.<br/>]]></look>\r\n        </object>\r\n        <object name=\"orange\">\r\n          <inherit name=\"editor_object\" />\r\n          <inherit name=\"edible\" />\r\n          <take />\r\n          <feature_edible />\r\n          <look><![CDATA[A navel orange.<br/>]]></look>\r\n          <eat type=\"script\">\r\n            if (HasString(this, \"eatmsg\")) {\r\n              msg (this.eatmsg)\r\n            }\r\n            else {\r\n              msg (DynamicTemplate(\"Eaten\", this))\r\n            }\r\n            if (HasInt(game.pov, \"health\")) {\r\n              game.pov.health = game.pov.health + this.eathealth\r\n            }\r\n            destroy (this.name)\r\n            apple.scenery = false\r\n            if (ListContains(ScopeReachable(),bowl)) {\r\n              msg (\"By some strange (but much appreciated) coincidence, an apple has magically appeared in the bowl!\")\r\n            }\r\n          </eat>\r\n        </object>\r\n      </object>\r\n      <object name=\"lazy susan\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"surface\" />\r\n        <feature_container />\r\n        <listchildren />\r\n        <listchildrenprefix>On it, you see</listchildrenprefix>\r\n        <look>A lazy susan.  You can spin it to move items around the table.  (Your grandparents used to have one.)</look>\r\n        <spin>You spin it.</spin>\r\n        <displayverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n        </displayverbs>\r\n        <takemsg>It {once:appears to be}{notfirst:is} attached to the table.</takemsg>\r\n      </object>\r\n      <object name=\"hat\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"wearable\" />\r\n        <take />\r\n        <look><![CDATA[It's just like Indiana Jones's hat.<br/>]]></look>\r\n        <feature_wearable />\r\n      </object>\r\n    </object>\r\n  </object>\r\n  <turnscript name=\"update_contents_in_lists_turnscript\">\r\n    <enabled />\r\n    <script>\r\n      UpdateContentsInLists\r\n    </script>\r\n  </turnscript>\r\n  <verb>\r\n    <property>spin</property>\r\n    <pattern>spin</pattern>\r\n    <defaultexpression>\"You can't spin \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n  <function name=\"UpdateContentsInLists\"><![CDATA[\r\n    JS.eval (\"var ignoreScenery = [];\")\r\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\r\n      if (not HasAttribute(o, \"listalias\")) {\r\n        o.listalias = GetDisplayAlias(o)\r\n      }\r\n      o.listalias = Replace(o.listalias,\"&nbsp;\",\"\")\r\n      containers = ListExclude(ListParents(o), game.pov)\r\n      containers = ListExclude(containers, ListParents(game.pov))\r\n      foreach (c, containers) {\r\n        o.listalias = \"&nbsp;&nbsp;\" + o.listalias\r\n      }\r\n      if (GetBoolean (o, \"scenery\")) {\r\n        JS.eval (\"ignoreScenery.push('\"+o.name+\"');\")\r\n      }\r\n    }\r\n  ]]></function>\r\n  <function name=\"CallUpdateContentsInLists\" parameters=\"bs\">\r\n    UpdateContentsInLists\r\n  </function>\r\n  <javascript src=\"javascript.js\" />\r\n</asl>\r\n```\r\n\r\n\r\n</details>\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>I got it.  I had something messed up somewhere (don't know where).</p>\n<p>NOTE: This is not perfect.  This breaks the lists in the mobile browser.  The turn script method shows the scenery objects in the lists in the mobile browser, but the lists are indented properly and work correctly with the turn script stuff (see my previous post).  Honestly, we shouldn't worry with scenery objects at all (see my next post).</p>\n<hr>\n<p>The code:</p>\n<details>\n<hr>\n<p>javascript.js (Includes modified <code>updateList()</code>):</p>\n<pre><code>var ignoreScenery = [];\n\nsetTimeout(function(){\n ASLEvent(\"CallUpdateContentsInLists\",\"\");\n},2000);\n\nfunction updateList(listName, listData) {\n    var listElement = \"\";\n    var buttonPrefix = \"\";\n\n    if (listName == \"inventory\") {\n        listElement = \"#lstInventory\";\n        inventoryVerbs = new Array();\n        buttonPrefix = \"cmdInventory\";\n    }\n\n    if (listName == \"placesobjects\") {\n        listElement = \"#lstPlacesObjects\";\n        placesObjectsVerbs = new Array();\n        buttonPrefix = \"cmdPlacesObjects\";\n    }\n\n    var previousSelectionText = \"\";\n    var previousSelectionKey = \"\";\n    var foundPreviousSelection = false;\n\n    var $selected = $(listElement + \" .ui-selected\");\n    if ($selected.length &gt; 0) {\n        previousSelectionText = $selected.first().text();\n        previousSelectionKey = $selected.first().data(\"key\");\n    }\n\n    $(listElement).empty();\n    var count = 0;\n    $.each(listData, function (key, value) {\n        var scenery = false;\n        var data = JSON.parse(value);\n        for (var i in ignoreScenery){\n           if (data['ElementName'] == ignoreScenery[i]){\n            scenery = true;\n         }\n        }\n        var objectDisplayName = data[\"Text\"];\n        var verbsArray, idPrefix;\n\n        if (listName == \"inventory\") {\n            verbsArray = inventoryVerbs;\n            idPrefix = \"cmdInventory\";\n        } else {\n            verbsArray = placesObjectsVerbs;\n            idPrefix = \"cmdPlacesObjects\";\n        }\n        verbsArray.push(data);\n        if ((listName == \"inventory\" || $.inArray(objectDisplayName, _compassDirs) == -1) &amp;&amp; !scenery) {\n         var vis = '';\n         if (scenery){vis = 'style=\\'display:none;\\'';}\n         var $newItem = $(\"&lt;li \"+vis+\"/&gt;\").data(\"key\", key).data(\"elementid\", data[\"ElementId\"]).data(\"elementname\", data[\"ElementName\"]).data(\"index\", count).html(objectDisplayName);\n\n         if (objectDisplayName == previousSelectionText &amp;&amp; key == previousSelectionKey) {\n                $newItem.addClass(\"ui-selected\");\n                foundPreviousSelection = true;\n                updateVerbButtons($newItem, verbsArray, idPrefix);\n            }\n      $(listElement).append($newItem);\n            count++;\n        }\n    });\n\n    var selectSize = count;\n    if (selectSize &lt; 3) selectSize = 3;\n    if (selectSize &gt; 12) selectSize = 12;\n    $(listElement).attr(\"size\", selectSize);\n    \n    if (!foundPreviousSelection) {\n        for (var i = 1; i &lt;= verbButtonCount; i++) {\n            var target = $(\"#\" + buttonPrefix + i);\n            target.hide();\n        }\n    }\n}\n</code></pre>\n<hr>\n<p><code>UpdateListContentsInLists</code>:</p>\n<pre><code>  &lt;function name=\"UpdateContentsInLists\"&gt;&lt;![CDATA[\n    JS.eval (\"var ignoreScenery = [];\")\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\n      if (not HasAttribute(o, \"listalias\")) {\n        o.listalias = GetDisplayAlias(o)\n      }\n      o.listalias = Replace(o.listalias,\"&amp;nbsp;\",\"\")\n      containers = ListExclude(ListParents(o), game.pov)\n      containers = ListExclude(containers, ListParents(game.pov))\n      foreach (c, containers) {\n        o.listalias = \"&amp;nbsp;&amp;nbsp;\" + o.listalias\n      }\n      if (GetBoolean (o, \"scenery\")) {\n        JS.eval (\"ignoreScenery.push('\"+o.name+\"');\")\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<hr>\n<p><code>CallUpdateContentsInLists</code>:</p>\n<pre><code>  &lt;function name=\"CallUpdateContentsInLists\" parameters=\"bs\"&gt;\n    UpdateContentsInLists\n  &lt;/function&gt;\n</code></pre>\n<hr>\n<p>Turn script:</p>\n<pre><code>  &lt;turnscript name=\"update_contents_in_lists_turnscript\"&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      UpdateContentsInLists\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n</code></pre>\n<hr>\n<p>Start script:</p>\n<pre><code>    &lt;start type=\"script\"&gt;\n      UpdateContentsInLists\n    &lt;/start&gt;\n</code></pre>\n<hr>\n<p>User Interface Initialisation script:</p>\n<pre><code>    &lt;inituserinterface type=\"script\"&gt;\n      if (not game.timeelapsed = 0) {\n        UpdateContentsInLists\n      }\n    &lt;/inituserinterface&gt;\n</code></pre>\n<hr>\n<p>Example Game</p>\n<p>http://textadventures.co.uk/games/view/1cf53rawc02l6o8d7uu_wa/contents-in-lists-no-settimeout</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Contents in Lists\"&gt;\n    &lt;gameid&gt;8e915ad1-d720-4362-9e28-8d81592852b4&lt;/gameid&gt;\n    &lt;version&gt;4.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;feature_advancedscripts /&gt;\n    &lt;start type=\"script\"&gt;\n      UpdateContentsInLists\n    &lt;/start&gt;\n    &lt;inituserinterface type=\"script\"&gt;\n      if (not game.timeelapsed = 0) {\n        UpdateContentsInLists\n      }\n    &lt;/inituserinterface&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"table\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"surface\" /&gt;\n      &lt;feature_container /&gt;\n      &lt;listchildren /&gt;\n      &lt;listchildrenprefix&gt;On it, you see&lt;/listchildrenprefix&gt;\n      &lt;takemsg&gt;It's too big to take.&lt;/takemsg&gt;\n      &lt;look&gt;&lt;![CDATA[An oak dining table.&lt;br/&gt;]]&gt;&lt;/look&gt;\n      &lt;displayverbs type=\"stringlist\"&gt;\n        &lt;value&gt;Look at&lt;/value&gt;\n      &lt;/displayverbs&gt;\n      &lt;object name=\"bowl\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"container_open\" /&gt;\n        &lt;feature_container /&gt;\n        &lt;close type=\"boolean\"&gt;false&lt;/close&gt;\n        &lt;open type=\"boolean\"&gt;false&lt;/open&gt;\n        &lt;displayverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n          &lt;value&gt;Take&lt;/value&gt;\n        &lt;/displayverbs&gt;\n        &lt;take /&gt;\n        &lt;listchildren /&gt;\n        &lt;look&gt;&lt;![CDATA[A plastic bowl.&lt;br/&gt;]]&gt;&lt;/look&gt;\n        &lt;object name=\"apple\"&gt;\n          &lt;inherit name=\"editor_object\" /&gt;\n          &lt;inherit name=\"edible\" /&gt;\n          &lt;take /&gt;\n          &lt;feature_edible /&gt;\n          &lt;scenery /&gt;\n          &lt;look&gt;&lt;![CDATA[A red apple.&lt;br/&gt;]]&gt;&lt;/look&gt;\n        &lt;/object&gt;\n        &lt;object name=\"orange\"&gt;\n          &lt;inherit name=\"editor_object\" /&gt;\n          &lt;inherit name=\"edible\" /&gt;\n          &lt;take /&gt;\n          &lt;feature_edible /&gt;\n          &lt;look&gt;&lt;![CDATA[A navel orange.&lt;br/&gt;]]&gt;&lt;/look&gt;\n          &lt;eat type=\"script\"&gt;\n            if (HasString(this, \"eatmsg\")) {\n              msg (this.eatmsg)\n            }\n            else {\n              msg (DynamicTemplate(\"Eaten\", this))\n            }\n            if (HasInt(game.pov, \"health\")) {\n              game.pov.health = game.pov.health + this.eathealth\n            }\n            destroy (this.name)\n            apple.scenery = false\n            if (ListContains(ScopeReachable(),bowl)) {\n              msg (\"By some strange (but much appreciated) coincidence, an apple has magically appeared in the bowl!\")\n            }\n          &lt;/eat&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n      &lt;object name=\"lazy susan\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"surface\" /&gt;\n        &lt;feature_container /&gt;\n        &lt;listchildren /&gt;\n        &lt;listchildrenprefix&gt;On it, you see&lt;/listchildrenprefix&gt;\n        &lt;look&gt;A lazy susan.  You can spin it to move items around the table.  (Your grandparents used to have one.)&lt;/look&gt;\n        &lt;spin&gt;You spin it.&lt;/spin&gt;\n        &lt;displayverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n        &lt;/displayverbs&gt;\n        &lt;takemsg&gt;It {once:appears to be}{notfirst:is} attached to the table.&lt;/takemsg&gt;\n      &lt;/object&gt;\n      &lt;object name=\"hat\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"wearable\" /&gt;\n        &lt;take /&gt;\n        &lt;look&gt;&lt;![CDATA[It's just like Indiana Jones's hat.&lt;br/&gt;]]&gt;&lt;/look&gt;\n        &lt;feature_wearable /&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;turnscript name=\"update_contents_in_lists_turnscript\"&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      UpdateContentsInLists\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;verb&gt;\n    &lt;property&gt;spin&lt;/property&gt;\n    &lt;pattern&gt;spin&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't spin \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;function name=\"UpdateContentsInLists\"&gt;&lt;![CDATA[\n    JS.eval (\"var ignoreScenery = [];\")\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\n      if (not HasAttribute(o, \"listalias\")) {\n        o.listalias = GetDisplayAlias(o)\n      }\n      o.listalias = Replace(o.listalias,\"&amp;nbsp;\",\"\")\n      containers = ListExclude(ListParents(o), game.pov)\n      containers = ListExclude(containers, ListParents(game.pov))\n      foreach (c, containers) {\n        o.listalias = \"&amp;nbsp;&amp;nbsp;\" + o.listalias\n      }\n      if (GetBoolean (o, \"scenery\")) {\n        JS.eval (\"ignoreScenery.push('\"+o.name+\"');\")\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"CallUpdateContentsInLists\" parameters=\"bs\"&gt;\n    UpdateContentsInLists\n  &lt;/function&gt;\n  &lt;javascript src=\"javascript.js\" /&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n</details>\n\n",
      "PostDate": "2018-05-21T00:45:26.7727337Z",
      "LastEditDate": "2018-05-21T01:18:33.6211773Z",
      "link": null
    },
    {
      "PostId": "8f6ffff5-c126-4ae0-a4ca-44ceb4583edf",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "# The Best Way to Handle Things (or so says me)\r\n\r\nThere is no reason to fool around with scenery in containers.  If something is scenery, it shouldn't be in the player's inventory (or *inside of* anything in the player's inventory).  \r\n\r\nIf we want to hide something until a certain event has taken place, we need to set ```visible``` to false.  \r\n\r\nIf we want something to exist just in case the player tries to interact with it, we need to make it ```scenery```.  (Sidenote:  Once something set as scenery is directly taken, its scenery attribute is set to false.)\r\n\r\n---\r\nHere is The Best Method, with no fiddling around with scenery. \r\n\r\n---\r\nI want to hide my apple until the orange has been eaten, so I set ```visible``` to false.\r\n\r\n---\r\nHere's the ```UpdateContentsInLists``` function (much thanks to mrangel):\r\n\r\n```\r\n  <function name=\"UpdateContentsInLists\"><![CDATA[\r\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\r\n      if (not HasAttribute(o, \"listalias\")) {\r\n        o.listalias = GetDisplayAlias(o)\r\n      }\r\n      o.listalias = Replace(o.listalias,\"&nbsp;\",\"\")\r\n      containers = ListExclude(ListParents(o), game.pov)\r\n      containers = ListExclude(containers, ListParents(game.pov))\r\n      foreach (c, containers) {\r\n        o.listalias = \"&nbsp;&nbsp;\" + o.listalias\r\n      }\r\n    }\r\n  ]]></function>\r\n```\r\n\r\n---\r\nThe turn script:\r\n```\r\n  <turnscript name=\"update_contents_in_lists_turnscript\">\r\n    <enabled />\r\n    <script>\r\n      UpdateContentsInLists\r\n    </script>\r\n  </turnscript>\r\n```\r\n\r\n---\r\nThe start script:\r\n```\r\nUpdateContentsInLists\r\nbowl.inventoryverbs = ListExclude(bowl.inventoryverbs, Split(\"Open;Close;Use\", \";\"))\r\n```\r\n\r\n---\r\nThe User Interface Initialisation script:\r\n```\r\nif (not game.timeelapsed = 0) {\r\n  UpdateContentsInLists\r\n}\r\n```\r\n\r\n---\r\nExample Game:\r\n\r\nhttp://textadventures.co.uk/games/view/59edxksdekis-korhnz5-q/contents-in-lists\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Contents in Lists\">\r\n    <gameid>edd4c8c3-a135-448a-beb2-159be0998b30</gameid>\r\n    <version>3.1</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <feature_advancedscripts />\r\n    <start type=\"script\">\r\n      UpdateContentsInLists\r\n      bowl.inventoryverbs = ListExclude(bowl.inventoryverbs, Split(\"Open;Close;Use\", \";\"))\r\n    </start>\r\n    <inituserinterface type=\"script\">\r\n      if (not game.timeelapsed = 0) {\r\n        UpdateContentsInLists\r\n      }\r\n    </inituserinterface>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"table\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"surface\" />\r\n      <feature_container />\r\n      <listchildren />\r\n      <listchildrenprefix>On it, you see</listchildrenprefix>\r\n      <takemsg>It's too big to take.</takemsg>\r\n      <look><![CDATA[An oak dining table.<br/>]]></look>\r\n      <displayverbs type=\"stringlist\">\r\n        <value>Look at</value>\r\n      </displayverbs>\r\n      <object name=\"bowl\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"container_open\" />\r\n        <feature_container />\r\n        <close type=\"boolean\">false</close>\r\n        <open type=\"boolean\">false</open>\r\n        <displayverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n          <value>Take</value>\r\n        </displayverbs>\r\n        <take />\r\n        <listchildren />\r\n        <look><![CDATA[A plastic bowl.<br/>]]></look>\r\n        <object name=\"apple\">\r\n          <inherit name=\"editor_object\" />\r\n          <inherit name=\"edible\" />\r\n          <take />\r\n          <feature_edible />\r\n          <visible type=\"boolean\">false</visible>\r\n          <look><![CDATA[A red apple.<br/>]]></look>\r\n        </object>\r\n        <object name=\"orange\">\r\n          <inherit name=\"editor_object\" />\r\n          <inherit name=\"edible\" />\r\n          <take />\r\n          <feature_edible />\r\n          <look><![CDATA[A navel orange.<br/>]]></look>\r\n          <eat type=\"script\">\r\n            if (HasString(this, \"eatmsg\")) {\r\n              msg (this.eatmsg)\r\n            }\r\n            else {\r\n              msg (DynamicTemplate(\"Eaten\", this))\r\n            }\r\n            if (HasInt(game.pov, \"health\")) {\r\n              game.pov.health = game.pov.health + this.eathealth\r\n            }\r\n            destroy (this.name)\r\n            apple.visible = true\r\n            if (ListContains(ScopeReachable(),bowl)) {\r\n              msg (\"By some strange (but much appreciated) coincidence, an apple has magically appeared in the bowl!\")\r\n            }\r\n          </eat>\r\n        </object>\r\n      </object>\r\n      <object name=\"lazy susan\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"surface\" />\r\n        <feature_container />\r\n        <listchildren />\r\n        <listchildrenprefix>On it, you see</listchildrenprefix>\r\n        <look>A lazy susan.  You can spin it to move items around the table.  (Your grandparents used to have one.)</look>\r\n        <spin>You spin it.</spin>\r\n        <displayverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n        </displayverbs>\r\n        <takemsg>It {once:appears to be}{notfirst:is} attached to the table.</takemsg>\r\n      </object>\r\n      <object name=\"hat\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"wearable\" />\r\n        <take />\r\n        <look><![CDATA[It's just like Indiana Jones's hat.<br/>]]></look>\r\n        <feature_wearable />\r\n      </object>\r\n    </object>\r\n  </object>\r\n  <turnscript name=\"update_contents_in_lists_turnscript\">\r\n    <enabled />\r\n    <script>\r\n      UpdateContentsInLists\r\n    </script>\r\n  </turnscript>\r\n  <verb>\r\n    <property>spin</property>\r\n    <pattern>spin</pattern>\r\n    <defaultexpression>\"You can't spin \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n  <function name=\"UpdateContentsInLists\"><![CDATA[\r\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\r\n      if (not HasAttribute(o, \"listalias\")) {\r\n        o.listalias = GetDisplayAlias(o)\r\n      }\r\n      o.listalias = Replace(o.listalias,\"&nbsp;\",\"\")\r\n      containers = ListExclude(ListParents(o), game.pov)\r\n      containers = ListExclude(containers, ListParents(game.pov))\r\n      foreach (c, containers) {\r\n        o.listalias = \"&nbsp;&nbsp;\" + o.listalias\r\n      }\r\n    }\r\n  ]]></function>\r\n</asl>\r\n```\r\n\r\n</details>\r\n",
      "EditableFormat": "markdown",
      "HTML": "<h1>The Best Way to Handle Things (or so says me)</h1>\n<p>There is no reason to fool around with scenery in containers.  If something is scenery, it shouldn't be in the player's inventory (or <em>inside of</em> anything in the player's inventory).</p>\n<p>If we want to hide something until a certain event has taken place, we need to set <code>visible</code> to false.</p>\n<p>If we want something to exist just in case the player tries to interact with it, we need to make it <code>scenery</code>.  (Sidenote:  Once something set as scenery is directly taken, its scenery attribute is set to false.)</p>\n<hr>\n<p>Here is The Best Method, with no fiddling around with scenery.</p>\n<hr>\n<p>I want to hide my apple until the orange has been eaten, so I set <code>visible</code> to false.</p>\n<hr>\n<p>Here's the <code>UpdateContentsInLists</code> function (much thanks to mrangel):</p>\n<pre><code>  &lt;function name=\"UpdateContentsInLists\"&gt;&lt;![CDATA[\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\n      if (not HasAttribute(o, \"listalias\")) {\n        o.listalias = GetDisplayAlias(o)\n      }\n      o.listalias = Replace(o.listalias,\"&amp;nbsp;\",\"\")\n      containers = ListExclude(ListParents(o), game.pov)\n      containers = ListExclude(containers, ListParents(game.pov))\n      foreach (c, containers) {\n        o.listalias = \"&amp;nbsp;&amp;nbsp;\" + o.listalias\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<hr>\n<p>The turn script:</p>\n<pre><code>  &lt;turnscript name=\"update_contents_in_lists_turnscript\"&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      UpdateContentsInLists\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n</code></pre>\n<hr>\n<p>The start script:</p>\n<pre><code>UpdateContentsInLists\nbowl.inventoryverbs = ListExclude(bowl.inventoryverbs, Split(\"Open;Close;Use\", \";\"))\n</code></pre>\n<hr>\n<p>The User Interface Initialisation script:</p>\n<pre><code>if (not game.timeelapsed = 0) {\n  UpdateContentsInLists\n}\n</code></pre>\n<hr>\n<p>Example Game:</p>\n<p>http://textadventures.co.uk/games/view/59edxksdekis-korhnz5-q/contents-in-lists</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Contents in Lists\"&gt;\n    &lt;gameid&gt;edd4c8c3-a135-448a-beb2-159be0998b30&lt;/gameid&gt;\n    &lt;version&gt;3.1&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;feature_advancedscripts /&gt;\n    &lt;start type=\"script\"&gt;\n      UpdateContentsInLists\n      bowl.inventoryverbs = ListExclude(bowl.inventoryverbs, Split(\"Open;Close;Use\", \";\"))\n    &lt;/start&gt;\n    &lt;inituserinterface type=\"script\"&gt;\n      if (not game.timeelapsed = 0) {\n        UpdateContentsInLists\n      }\n    &lt;/inituserinterface&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"table\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"surface\" /&gt;\n      &lt;feature_container /&gt;\n      &lt;listchildren /&gt;\n      &lt;listchildrenprefix&gt;On it, you see&lt;/listchildrenprefix&gt;\n      &lt;takemsg&gt;It's too big to take.&lt;/takemsg&gt;\n      &lt;look&gt;&lt;![CDATA[An oak dining table.&lt;br/&gt;]]&gt;&lt;/look&gt;\n      &lt;displayverbs type=\"stringlist\"&gt;\n        &lt;value&gt;Look at&lt;/value&gt;\n      &lt;/displayverbs&gt;\n      &lt;object name=\"bowl\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"container_open\" /&gt;\n        &lt;feature_container /&gt;\n        &lt;close type=\"boolean\"&gt;false&lt;/close&gt;\n        &lt;open type=\"boolean\"&gt;false&lt;/open&gt;\n        &lt;displayverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n          &lt;value&gt;Take&lt;/value&gt;\n        &lt;/displayverbs&gt;\n        &lt;take /&gt;\n        &lt;listchildren /&gt;\n        &lt;look&gt;&lt;![CDATA[A plastic bowl.&lt;br/&gt;]]&gt;&lt;/look&gt;\n        &lt;object name=\"apple\"&gt;\n          &lt;inherit name=\"editor_object\" /&gt;\n          &lt;inherit name=\"edible\" /&gt;\n          &lt;take /&gt;\n          &lt;feature_edible /&gt;\n          &lt;visible type=\"boolean\"&gt;false&lt;/visible&gt;\n          &lt;look&gt;&lt;![CDATA[A red apple.&lt;br/&gt;]]&gt;&lt;/look&gt;\n        &lt;/object&gt;\n        &lt;object name=\"orange\"&gt;\n          &lt;inherit name=\"editor_object\" /&gt;\n          &lt;inherit name=\"edible\" /&gt;\n          &lt;take /&gt;\n          &lt;feature_edible /&gt;\n          &lt;look&gt;&lt;![CDATA[A navel orange.&lt;br/&gt;]]&gt;&lt;/look&gt;\n          &lt;eat type=\"script\"&gt;\n            if (HasString(this, \"eatmsg\")) {\n              msg (this.eatmsg)\n            }\n            else {\n              msg (DynamicTemplate(\"Eaten\", this))\n            }\n            if (HasInt(game.pov, \"health\")) {\n              game.pov.health = game.pov.health + this.eathealth\n            }\n            destroy (this.name)\n            apple.visible = true\n            if (ListContains(ScopeReachable(),bowl)) {\n              msg (\"By some strange (but much appreciated) coincidence, an apple has magically appeared in the bowl!\")\n            }\n          &lt;/eat&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n      &lt;object name=\"lazy susan\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"surface\" /&gt;\n        &lt;feature_container /&gt;\n        &lt;listchildren /&gt;\n        &lt;listchildrenprefix&gt;On it, you see&lt;/listchildrenprefix&gt;\n        &lt;look&gt;A lazy susan.  You can spin it to move items around the table.  (Your grandparents used to have one.)&lt;/look&gt;\n        &lt;spin&gt;You spin it.&lt;/spin&gt;\n        &lt;displayverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n        &lt;/displayverbs&gt;\n        &lt;takemsg&gt;It {once:appears to be}{notfirst:is} attached to the table.&lt;/takemsg&gt;\n      &lt;/object&gt;\n      &lt;object name=\"hat\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"wearable\" /&gt;\n        &lt;take /&gt;\n        &lt;look&gt;&lt;![CDATA[It's just like Indiana Jones's hat.&lt;br/&gt;]]&gt;&lt;/look&gt;\n        &lt;feature_wearable /&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;turnscript name=\"update_contents_in_lists_turnscript\"&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      UpdateContentsInLists\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;verb&gt;\n    &lt;property&gt;spin&lt;/property&gt;\n    &lt;pattern&gt;spin&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't spin \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;function name=\"UpdateContentsInLists\"&gt;&lt;![CDATA[\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\n      if (not HasAttribute(o, \"listalias\")) {\n        o.listalias = GetDisplayAlias(o)\n      }\n      o.listalias = Replace(o.listalias,\"&amp;nbsp;\",\"\")\n      containers = ListExclude(ListParents(o), game.pov)\n      containers = ListExclude(containers, ListParents(game.pov))\n      foreach (c, containers) {\n        o.listalias = \"&amp;nbsp;&amp;nbsp;\" + o.listalias\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2018-05-21T01:16:48.4684113Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2a9d6f93-dbf5-4af2-8458-3514fe9cf231",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This doesn't change the listalias when changing the alias, just to warn everyone!",
      "EditableFormat": "markdown",
      "HTML": "<p>This doesn't change the listalias when changing the alias, just to warn everyone!</p>\n\n",
      "PostDate": "2018-06-03T08:59:45.6093093Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "213f03bc-f18f-405f-a2b8-0ae37d4136eb",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> This doesn't change the listalias when changing the alias, just to warn everyone!\r\n\r\nI was thinking about this a while back. there's a couple of bits of code that modify the listalias of an object (such as adding \"(open)\" or \"(worn)\" at the end.\r\n\r\nI was thinking about overriding some of those systems so that they can work with a variable listalias:\r\n\r\n```\r\n  obj.updateListalias => {\r\n    if (HasString (this, \"basealias\")) {\r\n      alias = this.basealias\r\n    }\r\n    else {\r\n      alias = GetDisplayAlias(this)\r\n    }\r\n    if (HasAttribute (this, \"descriptors\")) {\r\n      // assuming `descriptors` is a stringlist containing \"worn\", \"open\", or whatever\r\n      alias = alias + \" (\"+Join(this.descriptors, \", \")+\")\"\r\n    }\r\n    foreach (p, ListExclude(ListParents(this), game.pov)) {\r\n      if (not Contains (p, game.pov)) {\r\n        alias = \"→ \"+alias\r\n      }\r\n    }\r\n    this.listalias = alias\r\n    foreach (o, GetDirectChildren (this)) {\r\n      if (HasScript (o, \"updateListAlias\")) {\r\n        do (o, \"updateListAlias\")\r\n      )\r\n    }\r\n  }\r\n\r\n  obj.changedparent => {\r\n    // the rest of the usual stuff\r\n    do (this, \"updateListAlias\")\r\n  }\r\n  obj.changedalias => {\r\n    do (this, \"updateListAlias\")\r\n  }\r\n```\r\nThis way, you're only updating an object's alias when it moves, rather than every turn (which is putting quite a load on the server)\r\n\r\nOr maybe even override `GetListDisplayAlias` - that way, you could have a `changedlistalias` script that recognises an actual alias change or the addition or removal of a prefix/suffix (from other scripts or libraries), and stores these updates in separate attributes that can then be applied to the current display alias whenever the list is displayed. For example, the wearable system appends \" (worn)\" to an object's listalias, and `changedlistalias` puts \"worn\" into the descriptors list. Means that the listalias stays current when alias is changed, and also merges the prefixes/suffixes added by different libraries in a consistent way.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>This doesn't change the listalias when changing the alias, just to warn everyone!</p>\n</blockquote>\n<p>I was thinking about this a while back. there's a couple of bits of code that modify the listalias of an object (such as adding \"(open)\" or \"(worn)\" at the end.</p>\n<p>I was thinking about overriding some of those systems so that they can work with a variable listalias:</p>\n<pre><code>  obj.updateListalias =&gt; {\n    if (HasString (this, \"basealias\")) {\n      alias = this.basealias\n    }\n    else {\n      alias = GetDisplayAlias(this)\n    }\n    if (HasAttribute (this, \"descriptors\")) {\n      // assuming `descriptors` is a stringlist containing \"worn\", \"open\", or whatever\n      alias = alias + \" (\"+Join(this.descriptors, \", \")+\")\"\n    }\n    foreach (p, ListExclude(ListParents(this), game.pov)) {\n      if (not Contains (p, game.pov)) {\n        alias = \"→ \"+alias\n      }\n    }\n    this.listalias = alias\n    foreach (o, GetDirectChildren (this)) {\n      if (HasScript (o, \"updateListAlias\")) {\n        do (o, \"updateListAlias\")\n      )\n    }\n  }\n\n  obj.changedparent =&gt; {\n    // the rest of the usual stuff\n    do (this, \"updateListAlias\")\n  }\n  obj.changedalias =&gt; {\n    do (this, \"updateListAlias\")\n  }\n</code></pre>\n<p>This way, you're only updating an object's alias when it moves, rather than every turn (which is putting quite a load on the server)</p>\n<p>Or maybe even override <code>GetListDisplayAlias</code> - that way, you could have a <code>changedlistalias</code> script that recognises an actual alias change or the addition or removal of a prefix/suffix (from other scripts or libraries), and stores these updates in separate attributes that can then be applied to the current display alias whenever the list is displayed. For example, the wearable system appends \" (worn)\" to an object's listalias, and <code>changedlistalias</code> puts \"worn\" into the descriptors list. Means that the listalias stays current when alias is changed, and also merges the prefixes/suffixes added by different libraries in a consistent way.</p>\n\n",
      "PostDate": "2018-06-03T09:51:19.8815389Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "23295e4c-ddab-4eb2-b4fb-9b3bfb4125a9",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "After absorbing all of the information in this thread, I ended up only modifying this one function to handle the indentation and the scenery and not visible objects, and this keeps up with any changes to alias or listalias with no worries (for Desktop users only):\r\n\r\n```\r\n  <function name=\"GetListDisplayAlias\" parameters=\"obj\" type=\"string\"><![CDATA[\r\n    if (HasString(obj, \"listalias\")) {\r\n      result = ProcessText(obj.listalias)\r\n    }\r\n    else {\r\n      result = GetDisplayAlias(obj)\r\n    }\r\n    containers = ListExclude(ListParents(obj), game.pov)\r\n    containers = ListExclude(containers, ListParents(game.pov))\r\n    foreach (c, containers) {\r\n      result = \"&nbsp;\" + result\r\n    }\r\n    if (obj.scenery or not obj.visible) return (null)\r\n    return (result)\r\n  ]]></function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>After absorbing all of the information in this thread, I ended up only modifying this one function to handle the indentation and the scenery and not visible objects, and this keeps up with any changes to alias or listalias with no worries (for Desktop users only):</p>\n<pre><code>  &lt;function name=\"GetListDisplayAlias\" parameters=\"obj\" type=\"string\"&gt;&lt;![CDATA[\n    if (HasString(obj, \"listalias\")) {\n      result = ProcessText(obj.listalias)\n    }\n    else {\n      result = GetDisplayAlias(obj)\n    }\n    containers = ListExclude(ListParents(obj), game.pov)\n    containers = ListExclude(containers, ListParents(game.pov))\n    foreach (c, containers) {\n      result = \"&amp;nbsp;\" + result\n    }\n    if (obj.scenery or not obj.visible) return (null)\n    return (result)\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2018-06-08T11:37:57.6373219Z",
      "LastEditDate": "2018-06-08T11:52:58.3779125Z",
      "link": null
    },
    {
      "PostId": "be35d51f-98ea-4ba2-b4a0-1cd8cf8d5ff5",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's pretty much what I was thinking of :)\r\n\r\nI'd still like to make it work more neatly in edge cases, though. Like meaning that if you change the alias of an object after some library has added \" (worn)\" or similar to the end of the listalias, it would still work.\r\nYou could have a couple of attributes, listaliasprefix and listaliassuffix. Setup a changedlistalias script on the default object to catch changes, and modify the prefix or suffix instead. Then GetListDisplayAlias can add the prefix/suffix to whatever the object's current alias is.",
      "EditableFormat": "markdown",
      "HTML": "<p>That's pretty much what I was thinking of :)</p>\n<p>I'd still like to make it work more neatly in edge cases, though. Like meaning that if you change the alias of an object after some library has added \" (worn)\" or similar to the end of the listalias, it would still work.<br>\nYou could have a couple of attributes, listaliasprefix and listaliassuffix. Setup a changedlistalias script on the default object to catch changes, and modify the prefix or suffix instead. Then GetListDisplayAlias can add the prefix/suffix to whatever the object's current alias is.</p>\n\n",
      "PostDate": "2018-06-08T13:36:53.8269789Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8edccdb8-8964-4007-8a11-14ae7c8aa16d",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@KV, just to say that I'm trying your GetListDisplayAlias function out in a large game with many items (Woo Goes Further), as part of modifying it to optionally include game panes. So far, it has improved clarity significantly and only turned up one oddity (separation of container and contents in location display), which I can work around but am currently trying to understand. It may be an issue with transparent containers. I'll come back when I know more.",
      "EditableFormat": "markdown",
      "HTML": "<p>@KV, just to say that I'm trying your GetListDisplayAlias function out in a large game with many items (Woo Goes Further), as part of modifying it to optionally include game panes. So far, it has improved clarity significantly and only turned up one oddity (separation of container and contents in location display), which I can work around but am currently trying to understand. It may be an issue with transparent containers. I'll come back when I know more.</p>\n\n",
      "PostDate": "2018-07-04T09:48:24.8470116Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1aa7cf58-4faf-4a32-a49f-375ab1846121",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "...okay, here is a small game that illustrates the problem:\r\n```\r\n<!--Saved by Quest 5.8.6747.20202-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Order Issue\">\r\n    <gameid>5f7c9cf0-4c5e-4a3b-ac0b-c4fd5a0fd025</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"box\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"container_open\" />\r\n      <feature_container />\r\n      <take />\r\n      <isopen type=\"boolean\">false</isopen>\r\n      <alias>box</alias>\r\n      <transparent />\r\n      <object name=\"stuff\">\r\n        <inherit name=\"editor_object\" />\r\n        <attr name=\"feature_container\" type=\"boolean\">false</attr>\r\n        <take />\r\n        <alias>stuff</alias>\r\n        <transparent type=\"boolean\">false</transparent>\r\n        <isopen />\r\n        <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n      </object>\r\n    </object>\r\n    <object name=\"more stuff\">\r\n      <inherit name=\"editor_object\" />\r\n      <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    </object>\r\n  </object>\r\n  <function name=\"GetListDisplayAlias\" parameters=\"obj\" type=\"string\"><![CDATA[\r\n    if (HasString(obj, \"listalias\")) {\r\n      result = ProcessText(obj.listalias)\r\n    }\r\n    else {\r\n      result = GetDisplayAlias(obj)\r\n    }\r\n    containers = ListExclude(ListParents(obj), game.pov)\r\n    containers = ListExclude(containers, ListParents(game.pov))\r\n    foreach (c, containers) {\r\n      result = \"&nbsp;&nbsp;&nbsp;\" + result\r\n    }\r\n    if (obj.scenery or not obj.visible) {\r\n      return (null)\r\n    }\r\n    return (result)\r\n  ]]></function>\r\n</asl>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>...okay, here is a small game that illustrates the problem:</p>\n<pre><code>&lt;!--Saved by Quest 5.8.6747.20202--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Order Issue\"&gt;\n    &lt;gameid&gt;5f7c9cf0-4c5e-4a3b-ac0b-c4fd5a0fd025&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"box\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"container_open\" /&gt;\n      &lt;feature_container /&gt;\n      &lt;take /&gt;\n      &lt;isopen type=\"boolean\"&gt;false&lt;/isopen&gt;\n      &lt;alias&gt;box&lt;/alias&gt;\n      &lt;transparent /&gt;\n      &lt;object name=\"stuff\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;attr name=\"feature_container\" type=\"boolean\"&gt;false&lt;/attr&gt;\n        &lt;take /&gt;\n        &lt;alias&gt;stuff&lt;/alias&gt;\n        &lt;transparent type=\"boolean\"&gt;false&lt;/transparent&gt;\n        &lt;isopen /&gt;\n        &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n    &lt;object name=\"more stuff\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;function name=\"GetListDisplayAlias\" parameters=\"obj\" type=\"string\"&gt;&lt;![CDATA[\n    if (HasString(obj, \"listalias\")) {\n      result = ProcessText(obj.listalias)\n    }\n    else {\n      result = GetDisplayAlias(obj)\n    }\n    containers = ListExclude(ListParents(obj), game.pov)\n    containers = ListExclude(containers, ListParents(game.pov))\n    foreach (c, containers) {\n      result = \"&amp;nbsp;&amp;nbsp;&amp;nbsp;\" + result\n    }\n    if (obj.scenery or not obj.visible) {\n      return (null)\n    }\n    return (result)\n  ]]&gt;&lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2018-07-04T21:21:10.689022Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "01d9a359-3602-4cd2-9696-49a56549285c",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\n**EDITED**\r\n\r\n```ScopeVisibleNotHeldForRoom``` is <u>probably</u> just going through all direct children of the room and adding to the list in the order in which those objects appear in the game's code (unless Pixie switched to alphabetical order... it seems like I read something about Pixie switching it to alphabetical order, but I think he decided against it because we'd have no control over the lists' order anymore).\r\n\r\nIf it only does that with objects inside of transparent containers, you'll probably have to modify that function, and you'll need to check for objects inside of objects (and I can't get into Quest to test anything).\r\n\r\nLook at the scripts this search brings up:\r\n\r\nhttps://github.com/textadventures/quest/search?q=scopevisiblenotheldforroom&unscoped_q=scopevisiblenotheldforroom",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p><strong>EDITED</strong></p>\n<p><code>ScopeVisibleNotHeldForRoom</code> is <u>probably</u> just going through all direct children of the room and adding to the list in the order in which those objects appear in the game's code (unless Pixie switched to alphabetical order... it seems like I read something about Pixie switching it to alphabetical order, but I think he decided against it because we'd have no control over the lists' order anymore).</p>\n<p>If it only does that with objects inside of transparent containers, you'll probably have to modify that function, and you'll need to check for objects inside of objects (and I can't get into Quest to test anything).</p>\n<p>Look at the scripts this search brings up:</p>\n<p>https://github.com/textadventures/quest/search?q=scopevisiblenotheldforroom&amp;unscoped_q=scopevisiblenotheldforroom</p>\n\n",
      "PostDate": "2018-07-04T22:43:24.4872823Z",
      "LastEditDate": "2018-07-04T23:19:04.6132401Z",
      "link": null
    },
    {
      "PostId": "6c454f4c-c7ef-4de5-a6b1-108ccb7f1ccd",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks KV. I'm really just flagging up that this is a small issue that would probably need to be cleaned up if your code was to become standard. I'm happy to use it as it is since (a) I only have one transparent item; and (b) I can work around the order problem simply by re-ordering the items in its original location (a shop), since the item cannot be dropped once picked up. As I said, that is a minor cost in relation to the benefit in the game.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks KV. I'm really just flagging up that this is a small issue that would probably need to be cleaned up if your code was to become standard. I'm happy to use it as it is since (a) I only have one transparent item; and (b) I can work around the order problem simply by re-ordering the items in its original location (a shop), since the item cannot be dropped once picked up. As I said, that is a minor cost in relation to the benefit in the game.</p>\n\n",
      "PostDate": "2018-07-05T05:56:56.3365923Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "71025275-a6e8-45cb-ad8d-4bd5948fb5b9",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Gotcha!\r\n\r\nSigning back off now.\r\n\r\nHappy gaming, everyone!",
      "EditableFormat": "markdown",
      "HTML": "<p>Gotcha!</p>\n<p>Signing back off now.</p>\n<p>Happy gaming, everyone!</p>\n\n",
      "PostDate": "2018-07-05T08:39:47.1363564Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
