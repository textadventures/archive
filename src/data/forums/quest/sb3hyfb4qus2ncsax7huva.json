{
  "Topic": {
    "TopicId": "sb3hyfb4qus2ncsax7huva",
    "ForumId": "10",
    "Title": "Way to log successful completions of game?",
    "LastUpdated": "2016-12-03T16:23:43.4571814Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "bf15a6d6-0443-4f51-bccc-c6c0589356d9",
      "UserId": 263865,
      "Username": "NecroDeath",
      "AvatarUrl": "http://i.imgur.com/1w7HHAhb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "My first game is published and is getting a good rate of hits and feedback, but I wondered if there is a way to tell how many people have completed it? I'm guessing not but thought I'd ask.",
      "EditableFormat": "markdown",
      "HTML": "<p>My first game is published and is getting a good rate of hits and feedback, but I wondered if there is a way to tell how many people have completed it? I'm guessing not but thought I'd ask.</p>\n\n",
      "PostDate": "2016-12-03T16:23:43.4571814Z",
      "LastEditDate": "2016-12-03T16:46:47.6768092Z"
    },
    {
      "PostId": "998590e3-03d7-4edf-969b-c2ccecbf306e",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "it is logically near impossible, aside from using an algorithm which will take in a specific input and output specific random strings/passwords/hashes for only that specific input, which you can reverse-algorithmize, to see that their string/password/hash does result in one of your specific inputs, to tell whether they actually completed your game, or whether they tried to fake they did, which you'd tell by their fake string/password/hash not returning one of your specific inputs through your reverse-algorithm\r\n\r\nsee/google: cryptography/encryption-decryption/encode-decode/private-key--public-key\r\n\r\nfor a simplistic example:\r\n\r\nyour specific (private: known only by you) inputs:\r\n\r\ndog\r\ncat\r\nwolf\r\ntiger\r\n\r\nan algorithm that generates random but specific outputs for your specific inputs (obvious not the most random outputs, but it's just a simple brief example of the concept):\r\n\r\n(input -> output)\r\n\r\ndog -> canine or xxx or etc\r\ncat -> feline or xxx or etc\r\nwolf -> werewolf or lycan or etc\r\ntiger -> weretiger or xxx or etc\r\n\r\nand you can plug back in the outputs to your reverse-alogorithm, to see if you get: dog/cat/wolf/tiger:\r\n\r\ncanine -> dog\r\nfeline -> cat\r\nwerewolf -> wolf\r\nlycan -> wolf\r\nweretiger -> tiger\r\n\r\nvs, someone trying to fake it:\r\n\r\nwolfman -> whatever -> 'whatever' is not one of your specific (private) inputs\r\n\r\n---------\r\n\r\nthe simpliest cryptography:\r\n\r\ninput: a really large prime number times a really large prime number\r\noutput: a really large number (which is only factorable by those two really large prime numbers)\r\n\r\nif people didn't know you took a really large prime number times a really large prime number, it'd be impossible for them to find out what two numbers (assuming they'd know you used two numbers --- which they wouldn't in following with this example case) were used to find/get that really large number output. This is the basis of cryptography and its usage in private-key--public-key\r\n\r\nanother simpliest crytpography example:\r\n\r\n(everyone else sees/knows only this: public)\r\n\r\nA-B-C...X-Y-Z\r\n1-2-3...24-25-26\r\n\r\nbut, changing it (only you and your friend would know this: private) to:\r\n\r\nA-B-C...X-Y-Z\r\n26-1-2...23-24-25\r\n\r\nlet's say the secret message that I don't want anyone to know except my friend:\r\n\r\nCXY\r\n\r\nwell, I'd code this secret message as:\r\n\r\n2-23-24\r\n\r\n(assuming this wasn't a simple encryption)\r\n\r\nno one could figure out that the '2-23-24' translates/decrypts to 'CXY', as they'd just know it to be translated/decoded wrongly as:\r\n\r\nBWX",
      "EditableFormat": "markdown",
      "HTML": "<p>it is logically near impossible, aside from using an algorithm which will take in a specific input and output specific random strings/passwords/hashes for only that specific input, which you can reverse-algorithmize, to see that their string/password/hash does result in one of your specific inputs, to tell whether they actually completed your game, or whether they tried to fake they did, which you'd tell by their fake string/password/hash not returning one of your specific inputs through your reverse-algorithm</p>\n<p>see/google: cryptography/encryption-decryption/encode-decode/private-key--public-key</p>\n<p>for a simplistic example:</p>\n<p>your specific (private: known only by you) inputs:</p>\n<p>dog<br>\ncat<br>\nwolf<br>\ntiger</p>\n<p>an algorithm that generates random but specific outputs for your specific inputs (obvious not the most random outputs, but it's just a simple brief example of the concept):</p>\n<p>(input -&gt; output)</p>\n<p>dog -&gt; canine or xxx or etc<br>\ncat -&gt; feline or xxx or etc<br>\nwolf -&gt; werewolf or lycan or etc<br>\ntiger -&gt; weretiger or xxx or etc</p>\n<p>and you can plug back in the outputs to your reverse-alogorithm, to see if you get: dog/cat/wolf/tiger:</p>\n<p>canine -&gt; dog<br>\nfeline -&gt; cat<br>\nwerewolf -&gt; wolf<br>\nlycan -&gt; wolf<br>\nweretiger -&gt; tiger</p>\n<p>vs, someone trying to fake it:</p>\n<p>wolfman -&gt; whatever -&gt; 'whatever' is not one of your specific (private) inputs</p>\n<hr>\n<p>the simpliest cryptography:</p>\n<p>input: a really large prime number times a really large prime number<br>\noutput: a really large number (which is only factorable by those two really large prime numbers)</p>\n<p>if people didn't know you took a really large prime number times a really large prime number, it'd be impossible for them to find out what two numbers (assuming they'd know you used two numbers --- which they wouldn't in following with this example case) were used to find/get that really large number output. This is the basis of cryptography and its usage in private-key--public-key</p>\n<p>another simpliest crytpography example:</p>\n<p>(everyone else sees/knows only this: public)</p>\n<p>A-B-C...X-Y-Z<br>\n1-2-3...24-25-26</p>\n<p>but, changing it (only you and your friend would know this: private) to:</p>\n<p>A-B-C...X-Y-Z<br>\n26-1-2...23-24-25</p>\n<p>let's say the secret message that I don't want anyone to know except my friend:</p>\n<p>CXY</p>\n<p>well, I'd code this secret message as:</p>\n<p>2-23-24</p>\n<p>(assuming this wasn't a simple encryption)</p>\n<p>no one could figure out that the '2-23-24' translates/decrypts to 'CXY', as they'd just know it to be translated/decoded wrongly as:</p>\n<p>BWX</p>\n\n",
      "PostDate": "2016-12-04T00:53:54.1982269Z",
      "LastEditDate": "2016-12-04T01:10:17.935735Z"
    },
    {
      "PostId": "734e0c11-318e-49d6-ae49-9010c9c2056a",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Nothing built in. What you could do is have different images displayed when the game is completed, and have those images served from another site, and count how often they are downloaded.",
      "EditableFormat": "markdown",
      "HTML": "<p>Nothing built in. What you could do is have different images displayed when the game is completed, and have those images served from another site, and count how often they are downloaded.</p>\n\n",
      "PostDate": "2016-12-04T10:20:54.7962844Z",
      "LastEditDate": null
    },
    {
      "PostId": "0bd4fd14-e5fa-40cf-9546-fc6994c7229d",
      "UserId": 263865,
      "Username": "NecroDeath",
      "AvatarUrl": "http://i.imgur.com/1w7HHAhb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks both. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks both.</p>\n\n",
      "PostDate": "2016-12-04T13:44:50.1517768Z",
      "LastEditDate": null
    }
  ]
}
