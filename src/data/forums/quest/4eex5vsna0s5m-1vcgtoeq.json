{
  "Topic": {
    "TopicId": "4eex5vsna0s5m-1vcgtoeq",
    "ForumId": "10",
    "Title": "Adding DOS > symbol for commands?",
    "LastUpdated": "2017-01-04T06:11:39.1721296Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "7f64dc48-9c55-421f-b90c-d441a41213aa",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've asked this before and was told that ```JS.eval (\"$('#txtCommandDiv').prepend('&gt;&nbsp;')\")``` added to the game Start script will give me the **>** DOS command symbol. This works, but it appears on the line _above_ the flashing cursor, rather than alongside it, resulting in:\r\n```\r\n>\r\n|\r\n```\r\nRather than:\r\n```\r\n> |\r\n```\r\nDoes anyone know how I might get the desired appearance?\r\n\r\nIdeally I would like:\r\n```\r\n> _\r\n```\r\nBut I imagine this is even more complicated.",
      "EditableFormat": "markdown",
      "HTML": "<p>I've asked this before and was told that <code>JS.eval (\"$('#txtCommandDiv').prepend('&amp;gt;&amp;nbsp;')\")</code> added to the game Start script will give me the <strong>&gt;</strong> DOS command symbol. This works, but it appears on the line <em>above</em> the flashing cursor, rather than alongside it, resulting in:</p>\n<pre><code>&gt;\n|\n</code></pre>\n<p>Rather than:</p>\n<pre><code>&gt; |\n</code></pre>\n<p>Does anyone know how I might get the desired appearance?</p>\n<p>Ideally I would like:</p>\n<pre><code>&gt; _\n</code></pre>\n<p>But I imagine this is even more complicated.</p>\n\n",
      "PostDate": "2017-01-04T06:11:39.1721296Z",
      "LastEditDate": "2017-01-04T06:25:59.4974879Z"
    },
    {
      "PostId": "19a19783-b117-45f7-b52f-e5358a9c6b5d",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I found this, but not sure how I'd adapt it for Quest.\r\n\r\nhttp://stackoverflow.com/questions/19690508/how-can-i-get-a-horizontal-line-cursor-like-youd-get-on-the-command-line-in-a",
      "EditableFormat": "markdown",
      "HTML": "<p>I found this, but not sure how I'd adapt it for Quest.</p>\n<p>http://stackoverflow.com/questions/19690508/how-can-i-get-a-horizontal-line-cursor-like-youd-get-on-the-command-line-in-a</p>\n\n",
      "PostDate": "2017-01-04T06:49:56.9512905Z",
      "LastEditDate": null
    },
    {
      "PostId": "28726686-b46c-44e4-9f32-67fb0012f2e8",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Some CSS helps, too. Here is one way:\r\n\r\n```\r\n<!--Saved by Quest 5.5.5328.26617-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"blackbg\">\r\n    <gameid>cbd27534-818f-401b-ac39-a6840dee437d</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2014</firstpublished>\r\n    <defaultbackground>Black</defaultbackground>\r\n    <defaultforeground>White</defaultforeground>\r\n    <css>\r\n    <![CDATA[\r\n     <style type=\"text/css\">\r\n     \tbody {\r\n          background-color:black;\r\n     \t}\r\n     \tdiv#gameBorder {\r\n     \t\tborder-color:black;\r\n     \t}\r\n        input#txtCommand {\r\n          border-style:none;\r\n          border-width:0px;\r\n          background-color:transparent;\r\n          outline-style:none;\r\n          color:#000000;\r\n          font-size:12pt;\r\n          font-family:'Inder', Georgia, serif;\r\n          margin:0;\r\n          padding:0;}\r\n        span#txtCommandPrompt {\r\n          color:White;\r\n          font-size:12pt;\r\n          font-family:'Inder', Georgia, serif;}\r\n     </style>\r\n     ]]>\r\n    </css>\r\n    <start type=\"script\">\r\n    <![CDATA[\r\n\t    request (Hide, \"Panes\")\r\n    \trequest (Hide, \"Location\")\r\n\t    JS.eval(\"$('#txtCommandDiv').prepend('<span id=\\\"txtCommandPrompt\\\">&gt;</span>')\");\r\n\t    JS.eval(\"$('#txtCommandDiv').css('height', '46px');\")\r\n\t    msg(game.css)\r\n\t]]>\r\n    </start>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n  </object>\r\n</asl>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Some CSS helps, too. Here is one way:</p>\n<pre><code>&lt;!--Saved by Quest 5.5.5328.26617--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"blackbg\"&gt;\n    &lt;gameid&gt;cbd27534-818f-401b-ac39-a6840dee437d&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2014&lt;/firstpublished&gt;\n    &lt;defaultbackground&gt;Black&lt;/defaultbackground&gt;\n    &lt;defaultforeground&gt;White&lt;/defaultforeground&gt;\n    &lt;css&gt;\n    &lt;![CDATA[\n     &lt;style type=\"text/css\"&gt;\n     \tbody {\n          background-color:black;\n     \t}\n     \tdiv#gameBorder {\n     \t\tborder-color:black;\n     \t}\n        input#txtCommand {\n          border-style:none;\n          border-width:0px;\n          background-color:transparent;\n          outline-style:none;\n          color:#000000;\n          font-size:12pt;\n          font-family:'Inder', Georgia, serif;\n          margin:0;\n          padding:0;}\n        span#txtCommandPrompt {\n          color:White;\n          font-size:12pt;\n          font-family:'Inder', Georgia, serif;}\n     &lt;/style&gt;\n     ]]&gt;\n    &lt;/css&gt;\n    &lt;start type=\"script\"&gt;\n    &lt;![CDATA[\n\t    request (Hide, \"Panes\")\n    \trequest (Hide, \"Location\")\n\t    JS.eval(\"$('#txtCommandDiv').prepend('&lt;span id=\\\"txtCommandPrompt\\\"&gt;&amp;gt;&lt;/span&gt;')\");\n\t    JS.eval(\"$('#txtCommandDiv').css('height', '46px');\")\n\t    msg(game.css)\n\t]]&gt;\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2017-01-05T21:25:47.6740922Z",
      "LastEditDate": null
    },
    {
      "PostId": "a9b533b5-6e49-4ec3-bcf2-8d8a04eae231",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here's another. This is a library that you can include (or integrate into your code). One difference is that this one clears the default \"Type here...\" label.\r\n\r\n```\r\n<library>\r\n  <object name=\"RetroStyleHolder\">\r\n    <css>\r\n      <![CDATA[\r\n    \r\n    \t<style type=\"text/css\">\r\n        div#txtCommandDiv {\r\n            border:none;\r\n            font-size:12pt;\r\n            font-family:Courier, monospace;\r\n            color:white;\r\n          }\r\n          input#txtCommand {\r\n            outline:none;\r\n            border:none;\r\n            font-size:16px;\r\n            margin:0;\r\n            padding:0;\r\n\t\t\tfloat:right;\r\n          }\r\n          </style>\r\n    \r\n                ]]>\r\n    </css>    \r\n  </object>\r\n  <function name=\"InitUserInterface\">\r\n    <![CDATA[\r\n    JS.eval (\"$('#txtCommandDiv').prepend('&gt;&nbsp;')\")\r\n    request (SetInterfaceString, \"TypeHereLabel=\")\r\n    OutputTextNoBr (RetroStyleHolder.css)\r\n  ]]>\r\n  </function>\r\n\r\n  <function name=\"ClearScreen\">\r\n    request (ClearScreen, \"\")\r\n    OutputTextNoBr (RetroStyleHolder.css)\r\n  </function>\r\n</library>\r\n\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Here's another. This is a library that you can include (or integrate into your code). One difference is that this one clears the default \"Type here...\" label.</p>\n<pre><code>&lt;library&gt;\n  &lt;object name=\"RetroStyleHolder\"&gt;\n    &lt;css&gt;\n      &lt;![CDATA[\n    \n    \t&lt;style type=\"text/css\"&gt;\n        div#txtCommandDiv {\n            border:none;\n            font-size:12pt;\n            font-family:Courier, monospace;\n            color:white;\n          }\n          input#txtCommand {\n            outline:none;\n            border:none;\n            font-size:16px;\n            margin:0;\n            padding:0;\n\t\t\tfloat:right;\n          }\n          &lt;/style&gt;\n    \n                ]]&gt;\n    &lt;/css&gt;    \n  &lt;/object&gt;\n  &lt;function name=\"InitUserInterface\"&gt;\n    &lt;![CDATA[\n    JS.eval (\"$('#txtCommandDiv').prepend('&amp;gt;&amp;nbsp;')\")\n    request (SetInterfaceString, \"TypeHereLabel=\")\n    OutputTextNoBr (RetroStyleHolder.css)\n  ]]&gt;\n  &lt;/function&gt;\n\n  &lt;function name=\"ClearScreen\"&gt;\n    request (ClearScreen, \"\")\n    OutputTextNoBr (RetroStyleHolder.css)\n  &lt;/function&gt;\n&lt;/library&gt;\n\n</code></pre>\n\n",
      "PostDate": "2017-01-05T21:27:15.2360703Z",
      "LastEditDate": null
    },
    {
      "PostId": "5157c0d3-7d3f-40be-9996-d5497e2310cb",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks very much! Your test game works perfectly (not tried the library yet). However, when I shove your CSS into my game it's still throwing the flashing cursor onto the next line?\r\n\r\nCan you see in my CSS what's causing it? I thought it might have been my ```<br>``` paragraph setting, but it's not.\r\n```\r\n<css><![CDATA[\r\n    \r\n       <style type=\"text/css\">\r\n        body {\r\n          overflow-x: hidden; \r\n          line-height: 23px;\r\n          text-align: justify;\r\n            \r\n         }\r\n        a.cmdlink {\r\n           color: #fff !important;\r\n           text-decoration: none !important;\r\n         }           \r\n\r\n        div#gamePanel {\r\n           z-index: 99999;\r\n         }\r\n        \r\n        #titleimage {\r\n            display: none;\r\n        }\r\n         \r\n        div#txtCommandDiv {\r\n            border: none;\r\n            background: no-repeat;\r\n            font-size:14px;\r\n            font-family:'Courier New', Courier, monospace;\r\n            color: #fff;\r\n                        \r\n        }       \r\n        \r\n        \r\n        br {\r\n            display: block;\r\n            content: \"\";\r\n            margin-top: .5em;\r\n            }\r\n        \r\n             \r\n        element.style {\r\n            border: none;            \r\n        }\r\n        \r\n          input#txtCommand {\r\n          border-style:none;\r\n          border-width:0px;\r\n          background-color:transparent;\r\n          outline-style:none;\r\n          color:#000000;\r\n          font-size:14px;\r\n          font-family:'Courier New', Courier, monospace;\r\n          margin:0;\r\n          padding:0;}\r\n        span#txtCommandPrompt {\r\n          color:White;\r\n          font-size:14pt;\r\n          font-family:'Courier New', Courier, monospace;\r\n      }          \r\n        #status { display: none !important; visibility: hidden !important; }\r\n        .hidden {\r\n  visibility: hidden;\r\n}         \r\n                    \r\n          </style>          \r\n                                                ]]></css>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks very much! Your test game works perfectly (not tried the library yet). However, when I shove your CSS into my game it's still throwing the flashing cursor onto the next line?</p>\n<p>Can you see in my CSS what's causing it? I thought it might have been my <code>&lt;br&gt;</code> paragraph setting, but it's not.</p>\n<pre><code>&lt;css&gt;&lt;![CDATA[\n    \n       &lt;style type=\"text/css\"&gt;\n        body {\n          overflow-x: hidden; \n          line-height: 23px;\n          text-align: justify;\n            \n         }\n        a.cmdlink {\n           color: #fff !important;\n           text-decoration: none !important;\n         }           \n\n        div#gamePanel {\n           z-index: 99999;\n         }\n        \n        #titleimage {\n            display: none;\n        }\n         \n        div#txtCommandDiv {\n            border: none;\n            background: no-repeat;\n            font-size:14px;\n            font-family:'Courier New', Courier, monospace;\n            color: #fff;\n                        \n        }       \n        \n        \n        br {\n            display: block;\n            content: \"\";\n            margin-top: .5em;\n            }\n        \n             \n        element.style {\n            border: none;            \n        }\n        \n          input#txtCommand {\n          border-style:none;\n          border-width:0px;\n          background-color:transparent;\n          outline-style:none;\n          color:#000000;\n          font-size:14px;\n          font-family:'Courier New', Courier, monospace;\n          margin:0;\n          padding:0;}\n        span#txtCommandPrompt {\n          color:White;\n          font-size:14pt;\n          font-family:'Courier New', Courier, monospace;\n      }          \n        #status { display: none !important; visibility: hidden !important; }\n        .hidden {\n  visibility: hidden;\n}         \n                    \n          &lt;/style&gt;          \n                                                ]]&gt;&lt;/css&gt;\n</code></pre>\n\n",
      "PostDate": "2017-01-05T23:04:00.2706002Z",
      "LastEditDate": "2017-01-05T23:30:27.4831924Z"
    },
    {
      "PostId": "43033671-ab3b-45de-a84d-1bd14aebb5d5",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "My input#txtCommand has a float:right. That might keep it from getting pushed to the next line.",
      "EditableFormat": "markdown",
      "HTML": "<p>My input#txtCommand has a float:right. That might keep it from getting pushed to the next line.</p>\n\n",
      "PostDate": "2017-01-06T12:32:20.2368647Z",
      "LastEditDate": null
    },
    {
      "PostId": "a36aa843-ecb5-41d4-95ce-cfd225624a7c",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Mmm, I tried adding that and my flashing cursor disappears altogether.\r\n\r\nIn any case, the ```float:right``` is only in your library, which isn't the one I tried.",
      "EditableFormat": "markdown",
      "HTML": "<p>Mmm, I tried adding that and my flashing cursor disappears altogether.</p>\n<p>In any case, the <code>float:right</code> is only in your library, which isn't the one I tried.</p>\n\n",
      "PostDate": "2017-01-06T14:26:52.704537Z",
      "LastEditDate": null
    },
    {
      "PostId": "b9b5fe43-d52f-4efd-b251-850061cfcf6e",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hmm. When I add your css back into my original game, it's one the same line. So perhaps it's something besides the css. Do you have any other HTML JS CSS stuff going on in the code that might be tweaking things?\r\n\r\nDid you by chance change anything about the page width?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hmm. When I add your css back into my original game, it's one the same line. So perhaps it's something besides the css. Do you have any other HTML JS CSS stuff going on in the code that might be tweaking things?</p>\n<p>Did you by chance change anything about the page width?</p>\n\n",
      "PostDate": "2017-01-06T19:41:40.2030431Z",
      "LastEditDate": "2017-01-06T19:42:21.2984995Z"
    },
    {
      "PostId": "cb991883-aacf-43ff-bc69-d8577a551704",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I did notice that if I changed some widths, I could get it to wrap. So perhaps there is some other style being set (padding, width, border, something like that).\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I did notice that if I changed some widths, I could get it to wrap. So perhaps there is some other style being set (padding, width, border, something like that).</p>\n\n",
      "PostDate": "2017-01-06T19:57:27.1960399Z",
      "LastEditDate": null
    },
    {
      "PostId": "894d3634-d6ac-466c-bb4b-66f613b3512a",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah, yes. Before a post by The Pixie in my lightning effect thread which showed how to change the background colour with some JS, I always stretched the page width in the game settings, in order to hide the two vertical borders of white either side of the game window.\r\n\r\nI'll remove those and see what happens.\r\n\r\n[edit] Yup! That was it. Well, sort of. It was the left and right padding I was using.\r\n\r\nThanks very much :)",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah, yes. Before a post by The Pixie in my lightning effect thread which showed how to change the background colour with some JS, I always stretched the page width in the game settings, in order to hide the two vertical borders of white either side of the game window.</p>\n<p>I'll remove those and see what happens.</p>\n<p>[edit] Yup! That was it. Well, sort of. It was the left and right padding I was using.</p>\n<p>Thanks very much :)</p>\n\n",
      "PostDate": "2017-01-07T02:14:49.2059222Z",
      "LastEditDate": "2017-01-07T02:16:56.9415173Z"
    },
    {
      "PostId": "c76b48ec-f752-434e-abe5-40b8b766ae02",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ OurJud:\r\n\r\nyou might still be struggling with coding (though you've been seemingly understanding it a lot more now and getting a lot better), but wow you seem to be really understanding this UI/GUI/CSS/JS coding stuff !!!!\r\n\r\nThis is all completely greek to me! I don't understand any of this stuff for the most part, laughs. There's a lot of fields of coding. Networking, Computer Systems, Software, Hardware, Low-Level, High Level, Web, UI/GUI, graphical/animation/art/design/3d-world-physics/models, Mobile Devices vs Desktops vs Laptops, etc etc etc.",
      "EditableFormat": "markdown",
      "HTML": "<p>@ OurJud:</p>\n<p>you might still be struggling with coding (though you've been seemingly understanding it a lot more now and getting a lot better), but wow you seem to be really understanding this UI/GUI/CSS/JS coding stuff !!!!</p>\n<p>This is all completely greek to me! I don't understand any of this stuff for the most part, laughs. There's a lot of fields of coding. Networking, Computer Systems, Software, Hardware, Low-Level, High Level, Web, UI/GUI, graphical/animation/art/design/3d-world-physics/models, Mobile Devices vs Desktops vs Laptops, etc etc etc.</p>\n\n",
      "PostDate": "2017-01-07T06:44:17.5692179Z",
      "LastEditDate": null
    },
    {
      "PostId": "1ede8b8a-2340-4df9-ac13-784bc33b2f0b",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks for the encouragement, hege. I've had a very basic understanding of CSS (although I'm much better at modifying it than I am writing it) for many years now, but the rest is just as much Greek to me as it is to you, despite whatever outward appearances you're seeing. JS, especially, is mind-bogglingly confusing and when the good folk here provide me with code, I understand not a single line of it.\r\n\r\nFor example, take this:\r\n\r\n```JS.eval (\"$('#txtCommandDiv').prepend('&gt;&nbsp;')\")```\r\n\r\nI understand as much that this is telling the game to add ```>``` to the command line (rendered by ```&gt;``` (where ```&nbsp``` is a space) and to 'prepend' (put before) the blinking ```|``` caret.\r\n\r\n```#txtCommandDiv``` is the name of the CSS selector which controls the appearance of the command input, but the syntax is an absolute mystery!!\r\n\r\nWhat does the ```$``` do, for instance? Why are the bracket arrangements seemingly so random? Why are both ```\"``` and ```'``` used?\r\n\r\nCompared to this, CSS is child's play.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks for the encouragement, hege. I've had a very basic understanding of CSS (although I'm much better at modifying it than I am writing it) for many years now, but the rest is just as much Greek to me as it is to you, despite whatever outward appearances you're seeing. JS, especially, is mind-bogglingly confusing and when the good folk here provide me with code, I understand not a single line of it.</p>\n<p>For example, take this:</p>\n<p><code>JS.eval (\"$('#txtCommandDiv').prepend('&amp;gt;&amp;nbsp;')\")</code></p>\n<p>I understand as much that this is telling the game to add <code>&gt;</code> to the command line (rendered by <code>&amp;gt;</code> (where <code>&amp;nbsp</code> is a space) and to 'prepend' (put before) the blinking <code>|</code> caret.</p>\n<p><code>#txtCommandDiv</code> is the name of the CSS selector which controls the appearance of the command input, but the syntax is an absolute mystery!!</p>\n<p>What does the <code>$</code> do, for instance? Why are the bracket arrangements seemingly so random? Why are both <code>\"</code> and <code>'</code> used?</p>\n<p>Compared to this, CSS is child's play.</p>\n\n",
      "PostDate": "2017-01-07T07:17:18.3023987Z",
      "LastEditDate": "2017-01-07T07:29:40.60916Z"
    },
    {
      "PostId": "4034673e-b410-48bb-8749-06b73143076f",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Take:\r\n```\r\nJS.eval (\"$('#txtCommandDiv').prepend('&gt;&nbsp;')\")\r\n```\r\n`JS.eval` is Quest code, a function that takes a string, and passes it to the `eval` function in JavaScript. Strings in Quest use `\"`, so there is a \" at the start of the string and a `\"` at the end.\r\n\r\nThe JavaScript code then is this:\r\n```\r\n$('#txtCommandDiv').prepend('&gt;&nbsp;')\r\n```\r\nThe `$` is a shorthand for JQuery; it could be written like this:\r\n```\r\nJQuery('#txtCommandDiv').prepend('&gt;&nbsp;')\r\n```\r\nSo the first bit is a call to a function, `JQuery`, which takes a single string. In JavaScript you can use either `'` or `\"` to mark strings, but for compatibility with the Quest code, we use `'`.\r\n\r\nThe JavaScript function `JQuery` is then taking a single string as a parameter:\r\n```\r\n#txtCommandDiv\r\n```\r\nThe hash indicates we want something with the _id_ equal to txtCommandDiv. So:\r\n```\r\n$('#txtCommandDiv')\r\n```\r\n... grabs the element on the page that has the id `txtCommandDiv`. The `.` operator is to call a method (function) of that thing, in this case `prepend`:\r\n```\r\nprepend('&gt;&nbsp;')\r\n```\r\nAgain, `prepend` takes a single string parameter, and again the string is demarked by `'`. In this case the string is two HTML codes, `&gt;` and `&nbsp;`. The first gives a greater than sign and the second a non-breaking space.\r\n\r\nEach bit is pretty easy, but it all adds up to a complex bit of code.",
      "EditableFormat": "markdown",
      "HTML": "<p>Take:</p>\n<pre><code>JS.eval (\"$('#txtCommandDiv').prepend('&amp;gt;&amp;nbsp;')\")\n</code></pre>\n<p><code>JS.eval</code> is Quest code, a function that takes a string, and passes it to the <code>eval</code> function in JavaScript. Strings in Quest use <code>\"</code>, so there is a \" at the start of the string and a <code>\"</code> at the end.</p>\n<p>The JavaScript code then is this:</p>\n<pre><code>$('#txtCommandDiv').prepend('&amp;gt;&amp;nbsp;')\n</code></pre>\n<p>The <code>$</code> is a shorthand for JQuery; it could be written like this:</p>\n<pre><code>JQuery('#txtCommandDiv').prepend('&amp;gt;&amp;nbsp;')\n</code></pre>\n<p>So the first bit is a call to a function, <code>JQuery</code>, which takes a single string. In JavaScript you can use either <code>'</code> or <code>\"</code> to mark strings, but for compatibility with the Quest code, we use <code>'</code>.</p>\n<p>The JavaScript function <code>JQuery</code> is then taking a single string as a parameter:</p>\n<pre><code>#txtCommandDiv\n</code></pre>\n<p>The hash indicates we want something with the <em>id</em> equal to txtCommandDiv. So:</p>\n<pre><code>$('#txtCommandDiv')\n</code></pre>\n<p>... grabs the element on the page that has the id <code>txtCommandDiv</code>. The <code>.</code> operator is to call a method (function) of that thing, in this case <code>prepend</code>:</p>\n<pre><code>prepend('&amp;gt;&amp;nbsp;')\n</code></pre>\n<p>Again, <code>prepend</code> takes a single string parameter, and again the string is demarked by <code>'</code>. In this case the string is two HTML codes, <code>&amp;gt;</code> and <code>&amp;nbsp;</code>. The first gives a greater than sign and the second a non-breaking space.</p>\n<p>Each bit is pretty easy, but it all adds up to a complex bit of code.</p>\n\n",
      "PostDate": "2017-01-07T09:21:33.6994202Z",
      "LastEditDate": null
    },
    {
      "PostId": "62eb714e-2097-4e91-a4f1-7920cef4cd44",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "it takes Pixie's excellent help to actually understand it... at least while it's broken up nicely by Pixie... lol\r\n\r\nbut still... I'm not familiar with all of these symbols/commands/operators (too much to remember when not used to them)... yet... (I still get confused between C++ and java, keeping them straight, laughs)\r\n\r\nsomeday, I definately want to get around to learning UI/CSS/JS/Web/html/xml/etc type of coding... but right now it's still very foreign to me, unless broken down by Pixie, lol. When that day comes, I'll be asking you for help, Ourjud, and/or Pixie and whoever else too, lol\r\n\r\n(I did get into some of it with java school class, making panes/windows/frames, listeners and action buttons, etc etc etc, but it was still really confusing... need to get around to learning it better)",
      "EditableFormat": "markdown",
      "HTML": "<p>it takes Pixie's excellent help to actually understand it... at least while it's broken up nicely by Pixie... lol</p>\n<p>but still... I'm not familiar with all of these symbols/commands/operators (too much to remember when not used to them)... yet... (I still get confused between C++ and java, keeping them straight, laughs)</p>\n<p>someday, I definately want to get around to learning UI/CSS/JS/Web/html/xml/etc type of coding... but right now it's still very foreign to me, unless broken down by Pixie, lol. When that day comes, I'll be asking you for help, Ourjud, and/or Pixie and whoever else too, lol</p>\n<p>(I did get into some of it with java school class, making panes/windows/frames, listeners and action buttons, etc etc etc, but it was still really confusing... need to get around to learning it better)</p>\n\n",
      "PostDate": "2017-01-07T10:13:13.0812215Z",
      "LastEditDate": "2017-01-07T10:19:42.5989764Z"
    },
    {
      "PostId": "c2d2bde0-bcd6-4895-8d76-6991b68ed8b1",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Like you say, hege, TP's breakdown makes things slightly easier to understand, but I'd still be a long way from writing it myself, even armed with this. JavaScript kind of scares me, and I think that's half my problem with it.",
      "EditableFormat": "markdown",
      "HTML": "<p>Like you say, hege, TP's breakdown makes things slightly easier to understand, but I'd still be a long way from writing it myself, even armed with this. JavaScript kind of scares me, and I think that's half my problem with it.</p>\n\n",
      "PostDate": "2017-01-07T11:45:57.7103971Z",
      "LastEditDate": null
    },
    {
      "PostId": "14923f2f-3b2f-4322-a32a-7f40f3994af1",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "it's just a bunch of Functions and/or OBJECTS.methods (methods is one of the more official terms used in/with the programming languages, like quest's Script Attributes, methods are just functions of/attached-to/within/contained-within an OBJECT), basically, though of various mediums (quest, JS, and maybe some html/xml/css/web stuff)\r\n\r\nand the '&gt' and '&nbsp' are like Functions/Commands to output specific symbols/keyboard key actions (spaces, new line / carriage return / enter, etc etc etc) which otherwise can't normally be outputted by that language, as probably those symbols are used by the syntax. Quest actually does/has the same thing (though I'd argue a bit more friendly than '&gt' and '&nbsp' and whatever other stuff you got to remember, lol), as you can't output/use the '<' and '>' symbols in your scripting without using the 'CDATA' tag, as those are normally seen as the 'tag' symbols, for examples:\r\n\r\n```\r\n<object name=\"xxx\">content</object>\r\nvs\r\nif (test.score >= 90) { /*scripting */ }\r\n\r\nquest will see the '>' in the 'if' line as if it was an '>' tag in the 'object' line, and thus throw errors at you.\r\n\r\nso, to tell quest that the '>' in the 'if' line is a 'greater than' operator and not a tag, you need to do this:\r\n\r\n<!CDATA[ if (test.score >= 90) { /*scripting */ } ]]>\r\n\r\nand the '&gt' and '&nbsp' is basically doing the same thing, it's allowing you to use whatever those things are referencing, lol.\r\n\r\n&gt : gt = greater than : the '>' symbol\r\n\r\n&nbsp : non-breaking space : not sure what the difference is between a 'non-breaking space' and a 'space' but oh well, we're talking about a space/whitespace (spacebar key)... I think... lol\r\n```\r\n\r\n-------------\r\n\r\nin programming languages here's the structure of their terms and stuff:\r\n\r\nFunctions: actionable scripting not contained within an OBJECT/CLASS\r\n\r\nOBJECT/CLASS:\r\n-> MEMBERS // though lazily many people use 'members' for meaning the 'data: VARIABLES', instead of 'Attributes'\r\n->-> Attributes (data: VARIABLES)\r\n->-> Methods (functions which are obviously contained within an OBJECT/CLASS: actionable scripting)\r\n\r\nthere's a lot more stuff... programming languages are huge... can take multiple classes to cover/learn all of their content/features/capabilities/etc etc etc... but just to give you some info on the more official/universal terms and structure of programming (outside of quest)\r\n\r\nand to compare this to quest's structure/design (generally as I hope I somewhat understand it correctly):\r\n\r\nFunctions: actionable scripting not contained within an 'Object' Element\r\n\r\n'Object' Elements:\r\n-> Attributes (except Script Attributes and Script Dictionary Attributes)\r\n-> Script Attributes and Script Dictionary Attributes // technically \"List' and the other 2 Dictionaries are probably here too (which is quest's 'methods')",
      "EditableFormat": "markdown",
      "HTML": "<p>it's just a bunch of Functions and/or OBJECTS.methods (methods is one of the more official terms used in/with the programming languages, like quest's Script Attributes, methods are just functions of/attached-to/within/contained-within an OBJECT), basically, though of various mediums (quest, JS, and maybe some html/xml/css/web stuff)</p>\n<p>and the '&amp;gt' and '&amp;nbsp' are like Functions/Commands to output specific symbols/keyboard key actions (spaces, new line / carriage return / enter, etc etc etc) which otherwise can't normally be outputted by that language, as probably those symbols are used by the syntax. Quest actually does/has the same thing (though I'd argue a bit more friendly than '&amp;gt' and '&amp;nbsp' and whatever other stuff you got to remember, lol), as you can't output/use the '&lt;' and '&gt;' symbols in your scripting without using the 'CDATA' tag, as those are normally seen as the 'tag' symbols, for examples:</p>\n<pre><code>&lt;object name=\"xxx\"&gt;content&lt;/object&gt;\nvs\nif (test.score &gt;= 90) { /*scripting */ }\n\nquest will see the '&gt;' in the 'if' line as if it was an '&gt;' tag in the 'object' line, and thus throw errors at you.\n\nso, to tell quest that the '&gt;' in the 'if' line is a 'greater than' operator and not a tag, you need to do this:\n\n&lt;!CDATA[ if (test.score &gt;= 90) { /*scripting */ } ]]&gt;\n\nand the '&amp;gt' and '&amp;nbsp' is basically doing the same thing, it's allowing you to use whatever those things are referencing, lol.\n\n&amp;gt : gt = greater than : the '&gt;' symbol\n\n&amp;nbsp : non-breaking space : not sure what the difference is between a 'non-breaking space' and a 'space' but oh well, we're talking about a space/whitespace (spacebar key)... I think... lol\n</code></pre>\n<hr>\n<p>in programming languages here's the structure of their terms and stuff:</p>\n<p>Functions: actionable scripting not contained within an OBJECT/CLASS</p>\n<p>OBJECT/CLASS:<br>\n-&gt; MEMBERS // though lazily many people use 'members' for meaning the 'data: VARIABLES', instead of 'Attributes'<br>\n-&gt;-&gt; Attributes (data: VARIABLES)<br>\n-&gt;-&gt; Methods (functions which are obviously contained within an OBJECT/CLASS: actionable scripting)</p>\n<p>there's a lot more stuff... programming languages are huge... can take multiple classes to cover/learn all of their content/features/capabilities/etc etc etc... but just to give you some info on the more official/universal terms and structure of programming (outside of quest)</p>\n<p>and to compare this to quest's structure/design (generally as I hope I somewhat understand it correctly):</p>\n<p>Functions: actionable scripting not contained within an 'Object' Element</p>\n<p>'Object' Elements:<br>\n-&gt; Attributes (except Script Attributes and Script Dictionary Attributes)<br>\n-&gt; Script Attributes and Script Dictionary Attributes // technically \"List' and the other 2 Dictionaries are probably here too (which is quest's 'methods')</p>\n\n",
      "PostDate": "2017-01-07T12:31:11.38258Z",
      "LastEditDate": "2017-01-07T12:47:23.3796243Z"
    }
  ]
}
