{
  "Topic": {
    "TopicId": "6409",
    "ForumId": "10",
    "Title": "New here , have a few questions!",
    "LastUpdated": "2016-06-09T17:59:57+01:00",
    "ReplyCount": 4
  },
  "Posts": [
    {
      "PostId": "43374",
      "UserId": 0,
      "Username": "HolisticIllusion",
      "UserAvatar": null,
      "UserGravatar": "614c9b891c1caef68df9d33e60bfed2d",
      "EditableText": "Hello guys , i have been using Quest for a few days and i'm currently creating a text adventure survival game.\n\nEverything is working great but here are some problems i came across :\n\n1) How do i change the name/description of objects? For example i have an object that is a broken gun , i want the player to be able to fix it and change it's name to just &quot;gun&quot; and the description too.\n\n2) How do flashlights work? I can't seem to make the light/dark system work.\n\n3) Day and Night cycles? Do i use timers for this or do i need to get into scripting?\n\nYour help is appreciated , thanks!",
      "EditableFormat": "bbcode",
      "HTML": "Hello guys , i have been using Quest for a few days and i'm currently creating a text adventure survival game.<br/><br/>Everything is working great but here are some problems i came across :<br/><br/>1) How do i change the name/description of objects? For example i have an object that is a broken gun , i want the player to be able to fix it and change it's name to just &quot;gun&quot; and the description too.<br/><br/>2) How do flashlights work? I can't seem to make the light/dark system work.<br/><br/>3) Day and Night cycles? Do i use timers for this or do i need to get into scripting?<br/><br/>Your help is appreciated , thanks!",
      "PostDate": "2016-06-08T21:26:18+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43379",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "1. This involves learning the next major fundamental needed for taking your game beyond the basics of quest: learning Attribute and the 'if' Script usage. These two things, especially when used together, let's you do 90% of everything that you want to do in your game.\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5559\">viewtopic.php?f=18&amp;t=5559</a><!-- l -->\n\nA. naming/labeling:\n\nusually people use the built-in 'alias' String Attribute for the name/label (as this is what people playing the game will see - it will over-ride the built-in quest ID 'name' String Attribute for the displayment during game play), leaving the built-in quest ID 'name' String Attribute for helping the game maker with organization and etc (for example... name: orc_1, alias: orc; name: orc_2, alias: orc; name: orc_99, alias: orc). You can also create/add a custom (your own) String Attribute too, for example, a 'first_name' String Attribute.\n\nAttribute creation/manipulation can be done through scripting, which in the GUI~Editor is done this way, for an example of using a custom 'fix' Verb on a 'gun' Object:\n\n'gun' Object (initial 'alias' String Attribute set'ted Value: &quot;broken_gun&quot;) -&gt; 'Verbs' Tab -&gt; Add -&gt; name: 'fix'\n\n'fix' Verb -&gt; run as script -&gt; add new script -&gt; 'variables' Category/Section -&gt; 'set a variable or attribute' Script -&gt; [EXPRESSION] -&gt; (see below)\n\nset variable gun.alias = [EXPRESSION] &quot;repaired_gun&quot;\n\nwe can make this a bit more functionally fancy, conceptually (in code):\n\nif (not gun.alias = &quot;repaired_gun&quot;) { gun.alias = &quot;repaired_gun&quot; }\n\nwhat this is doing is checking the current Value of the 'gun.alias' (the 'alias' String Attribute of the 'gun' Object), if it is not already &quot;repaired_gun&quot; (if it is still &quot;broken_gun&quot;), then it'll be changed to being &quot;repaired_gun&quot;. If it is already &quot;repaired_gun&quot;, then there's no reason to be changing/setting it to being &quot;repaired_gun&quot;.\n\nhere's how it'd be done in the GUI~Editor:\n\n(instead of doing the above with the 'fix' Verb only having the 'set variable or attribute' Script, we'd do this stuff below)\n\n'gun' Object (initial 'alias' String Attribute set'ted Value: &quot;broken_gun&quot;) -&gt; 'Verbs' Tab -&gt; Add -&gt; name: 'fix'\n\n'fix' Verb -&gt; run as script add new script -&gt; 'scripts' Category/Section -&gt; 'if' Script -&gt; [EXPRESSION] -&gt; (see below)\n\nif [EXPRESSION] not gun.alias = &quot;repaired_gun&quot;\n\nthen, \n\n-&gt; add new script -&gt; 'variables' Category/Section -&gt; 'set a variable or attribute' Script -&gt; [EXPRESSION] -&gt; (see below)\n\nset variable gun.alias = [EXPRESSION] &quot;repaired_gun&quot;\n\n--\n\nB. Descriptions:\n\n(here's a link by Pixie that explains a method/way design of doing this stuff too: <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4807\">viewtopic.php?f=18&amp;t=4807</a><!-- l --> )\n\nthe 'description' Attribute can either be a String Attribute (GUI~Editor: [message] option) or a (in code: 'msg' / GUI~Editor: 'print a message') Script Attribute (GUI~Editor: [run as script] option)\n\nthis is a bit more complex, as it involves more understanding of Attribute usage, in order to have a dynamic description design. The easiest method is to use the text processor commands:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/text_processor.html\">http://docs.textadventures.co.uk/quest/ ... essor.html</a><!-- m -->\n\nfor example:\n\n'gun' Object -&gt; ??? Tab -&gt; 'description' -&gt; [MESSAGE] -&gt; You look at the {gun.alias}.\n\nor, if the above doesn't work, you can do this too:\n\n'gun' Object -&gt; ??? Tab -&gt; 'description' -&gt; [run as script] -&gt; add new script -&gt; 'output' category/section -&gt; 'print a message' Script -&gt; [EXPRESSION] -&gt; (see below)\n\nprint message [EXPRESSION] &quot;You look at the {gun.alias}.&quot;\n\nif you weren't to use the text processor commands, it'd then look like this:\n\nprint message [EXPRESSION] &quot;You look at the &quot; + gun.alias + &quot;.&quot;\n\n// the '[MESSAGE]' option means you're just using TEXT (this is why I'm not sure if you can use the text processor commands with it or not): &quot;Hi, my name is HK.&quot;\n// VARIABLE (usually using Attributes) usage allow for dynamic-ness, so without using VARIABLES, you got static-ness, as it'll always:\n// output: Hi, my name is HK.\n\n// the '[EXPRESSION]' option means that you're using VARIABLES (just VARIABLES or VARIABLES+TEXT): &quot;Hi, my name is &quot; + player.alias + &quot;.&quot;\n// player.alias = &quot;HK&quot;\n// output: Hi, my name is HK.\n// player.alias = &quot;HollisticIllusion&quot;\n// output: Hi, my name is HollisticIllusion.\n\n-------------------------------------\n\n2. here's some links for you on how the 'dark-light' stuff works:\n\nhere's a guide on making a 'portable lantern (light source)' : <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4610\">viewtopic.php?f=18&amp;t=4610</a><!-- l -->\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/checkdarkness.html\">http://docs.textadventures.co.uk/quest/ ... kness.html</a><!-- m --> (this is one of the important things to understand)\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/setdark.html\">http://docs.textadventures.co.uk/quest/ ... tdark.html</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/setlight.html\">http://docs.textadventures.co.uk/quest/ ... light.html</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/setobjectlightstrength.html\">http://docs.textadventures.co.uk/quest/ ... ength.html</a><!-- m --> (this is one of the important things to understand)\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/setexitlightstrength.html\">http://docs.textadventures.co.uk/quest/ ... ength.html</a><!-- m --> (this is one of the important things to understand)\n\n----------------------------------\n\n3. Timers (using real/clock time) are a bit messy... you may want to create a 'turns/hrs/mins/secs' system instead (though this isn't trivial either - Pixie has a very good/advanced time/date library that you can use), but aside from this system of determining when it is day vs night, the simpliest means of doing the actual toggling between day and night, would be to use a Boolean Attribute, for example:\n\n'game' Game Object -&gt; 'Attributes' Tab -&gt; Attributes (the top box I think - or maybe it's the bottom box, meh) -&gt; Add -&gt; (see below)\n\n(Object Name: game)\nAttribute Name: is_night\nAttribute Type: boolean\nAttribute Value: (false ~ if you want your game to start during the day, or: true ~ if you want your game to start during the night)\n\nin code: game.is_night = false // or: game.is_night = true\n\nwhich you can then manipulate (change/toggle between true and false) and use for 'if' Script checking",
      "EditableFormat": "bbcode",
      "HTML": "1. This involves learning the next major fundamental needed for taking your game beyond the basics of quest: learning Attribute and the 'if' Script usage. These two things, especially when used together, let's you do 90% of everything that you want to do in your game.<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5559\">viewtopic.php?f=18&amp;t=5559</a><!-- l --><br/><br/>A. naming/labeling:<br/><br/>usually people use the built-in 'alias' String Attribute for the name/label (as this is what people playing the game will see - it will over-ride the built-in quest ID 'name' String Attribute for the displayment during game play), leaving the built-in quest ID 'name' String Attribute for helping the game maker with organization and etc (for example... name: orc_1, alias: orc; name: orc_2, alias: orc; name: orc_99, alias: orc). You can also create/add a custom (your own) String Attribute too, for example, a 'first_name' String Attribute.<br/><br/>Attribute creation/manipulation can be done through scripting, which in the GUI~Editor is done this way, for an example of using a custom 'fix' Verb on a 'gun' Object:<br/><br/>'gun' Object (initial 'alias' String Attribute set'ted Value: &quot;broken_gun&quot;) -&gt; 'Verbs' Tab -&gt; Add -&gt; name: 'fix'<br/><br/>'fix' Verb -&gt; run as script -&gt; add new script -&gt; 'variables' Category/Section -&gt; 'set a variable or attribute' Script -&gt; [EXPRESSION] -&gt; (see below)<br/><br/>set variable gun.alias = [EXPRESSION] &quot;repaired_gun&quot;<br/><br/>we can make this a bit more functionally fancy, conceptually (in code):<br/><br/>if (not gun.alias = &quot;repaired_gun&quot;) { gun.alias = &quot;repaired_gun&quot; }<br/><br/>what this is doing is checking the current Value of the 'gun.alias' (the 'alias' String Attribute of the 'gun' Object), if it is not already &quot;repaired_gun&quot; (if it is still &quot;broken_gun&quot;), then it'll be changed to being &quot;repaired_gun&quot;. If it is already &quot;repaired_gun&quot;, then there's no reason to be changing/setting it to being &quot;repaired_gun&quot;.<br/><br/>here's how it'd be done in the GUI~Editor:<br/><br/>(instead of doing the above with the 'fix' Verb only having the 'set variable or attribute' Script, we'd do this stuff below)<br/><br/>'gun' Object (initial 'alias' String Attribute set'ted Value: &quot;broken_gun&quot;) -&gt; 'Verbs' Tab -&gt; Add -&gt; name: 'fix'<br/><br/>'fix' Verb -&gt; run as script add new script -&gt; 'scripts' Category/Section -&gt; 'if' Script -&gt; [EXPRESSION] -&gt; (see below)<br/><br/>if [EXPRESSION] not gun.alias = &quot;repaired_gun&quot;<br/><br/>then, <br/><br/>-&gt; add new script -&gt; 'variables' Category/Section -&gt; 'set a variable or attribute' Script -&gt; [EXPRESSION] -&gt; (see below)<br/><br/>set variable gun.alias = [EXPRESSION] &quot;repaired_gun&quot;<br/><br/>--<br/><br/>B. Descriptions:<br/><br/>(here's a link by Pixie that explains a method/way design of doing this stuff too: <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4807\">viewtopic.php?f=18&amp;t=4807</a><!-- l --> )<br/><br/>the 'description' Attribute can either be a String Attribute (GUI~Editor: [message] option) or a (in code: 'msg' / GUI~Editor: 'print a message') Script Attribute (GUI~Editor: [run as script] option)<br/><br/>this is a bit more complex, as it involves more understanding of Attribute usage, in order to have a dynamic description design. The easiest method is to use the text processor commands:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/text_processor.html\">http://docs.textadventures.co.uk/quest/ ... essor.html</a><!-- m --><br/><br/>for example:<br/><br/>'gun' Object -&gt; ??? Tab -&gt; 'description' -&gt; [MESSAGE] -&gt; You look at the {gun.alias}.<br/><br/>or, if the above doesn't work, you can do this too:<br/><br/>'gun' Object -&gt; ??? Tab -&gt; 'description' -&gt; [run as script] -&gt; add new script -&gt; 'output' category/section -&gt; 'print a message' Script -&gt; [EXPRESSION] -&gt; (see below)<br/><br/>print message [EXPRESSION] &quot;You look at the {gun.alias}.&quot;<br/><br/>if you weren't to use the text processor commands, it'd then look like this:<br/><br/>print message [EXPRESSION] &quot;You look at the &quot; + gun.alias + &quot;.&quot;<br/><br/>// the '[MESSAGE]' option means you're just using TEXT (this is why I'm not sure if you can use the text processor commands with it or not): &quot;Hi, my name is HK.&quot;<br/>// VARIABLE (usually using Attributes) usage allow for dynamic-ness, so without using VARIABLES, you got static-ness, as it'll always:<br/>// output: Hi, my name is HK.<br/><br/>// the '[EXPRESSION]' option means that you're using VARIABLES (just VARIABLES or VARIABLES+TEXT): &quot;Hi, my name is &quot; + player.alias + &quot;.&quot;<br/>// player.alias = &quot;HK&quot;<br/>// output: Hi, my name is HK.<br/>// player.alias = &quot;HollisticIllusion&quot;<br/>// output: Hi, my name is HollisticIllusion.<br/><br/>-------------------------------------<br/><br/>2. here's some links for you on how the 'dark-light' stuff works:<br/><br/>here's a guide on making a 'portable lantern (light source)' : <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4610\">viewtopic.php?f=18&amp;t=4610</a><!-- l --><br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/checkdarkness.html\">http://docs.textadventures.co.uk/quest/ ... kness.html</a><!-- m --> (this is one of the important things to understand)<br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/setdark.html\">http://docs.textadventures.co.uk/quest/ ... tdark.html</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/setlight.html\">http://docs.textadventures.co.uk/quest/ ... light.html</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/setobjectlightstrength.html\">http://docs.textadventures.co.uk/quest/ ... ength.html</a><!-- m --> (this is one of the important things to understand)<br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/setexitlightstrength.html\">http://docs.textadventures.co.uk/quest/ ... ength.html</a><!-- m --> (this is one of the important things to understand)<br/><br/>----------------------------------<br/><br/>3. Timers (using real/clock time) are a bit messy... you may want to create a 'turns/hrs/mins/secs' system instead (though this isn't trivial either - Pixie has a very good/advanced time/date library that you can use), but aside from this system of determining when it is day vs night, the simpliest means of doing the actual toggling between day and night, would be to use a Boolean Attribute, for example:<br/><br/>'game' Game Object -&gt; 'Attributes' Tab -&gt; Attributes (the top box I think - or maybe it's the bottom box, meh) -&gt; Add -&gt; (see below)<br/><br/>(Object Name: game)<br/>Attribute Name: is_night<br/>Attribute Type: boolean<br/>Attribute Value: (false ~ if you want your game to start during the day, or: true ~ if you want your game to start during the night)<br/><br/>in code: game.is_night = false // or: game.is_night = true<br/><br/>which you can then manipulate (change/toggle between true and false) and use for 'if' Script checking",
      "PostDate": "2016-06-09T04:35:47+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43384",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Are you using the online editor or offline?\n[quote=&quot;HolisticIllusion&quot;:3pd7pjz7]1) How do i change the name/description of objects? For example i have an object that is a broken gun , i want the player to be able to fix it and change it's name to just &quot;gun&quot; and the description too.[/quote:3pd7pjz7]\nAs HK says, change the alias attribute, and it is also worth changing the description attribute too.\n[quote:3pd7pjz7]2) How do flashlights work? I can't seem to make the light/dark system work.[/quote:3pd7pjz7]\nSee here:\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5571\">viewtopic.php?f=18&amp;t=5571</a><!-- l -->\n[quote:3pd7pjz7]3) Day and Night cycles? Do i use timers for this or do i need to get into scripting?[/quote:3pd7pjz7]\nDo you want time to pass in real time (i.e., day can become night after a certain amount of time playing)? Or after a set number of turns? Use timers for the former or a turn script for the latter (the latter is probably better for the player and easier, as HK says timers are messy).\n\nIf you go for a turnscript, try this:\n[code:3pd7pjz7]if (not HasBoolean(game, &quot;is_night&quot;)) {\n  game&#46;is_night = false\n  game&#46;turn_count = 0\n}\ngame&#46;turn_count =  game&#46;turn_count + 1\nif (game&#46;turn_count % 30 = 0) {\n  game&#46;is_night = not game&#46;is_night\n}[/code:3pd7pjz7]\nCheck game.is_night to see if it is night (but not on the first turn, as it will not be set up yet).",
      "EditableFormat": "bbcode",
      "HTML": "Are you using the online editor or offline?<br/><blockquote><cite>HolisticIllusion wrote:</cite>1) How do i change the name/description of objects? For example i have an object that is a broken gun , i want the player to be able to fix it and change it's name to just &quot;gun&quot; and the description too.</blockquote><br/>As HK says, change the alias attribute, and it is also worth changing the description attribute too.<br/><blockquote><p>2) How do flashlights work? I can't seem to make the light/dark system work.</p></blockquote><br/>See here:<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5571\">viewtopic.php?f=18&amp;t=5571</a><!-- l --><br/><blockquote><p>3) Day and Night cycles? Do i use timers for this or do i need to get into scripting?</p></blockquote><br/>Do you want time to pass in real time (i.e., day can become night after a certain amount of time playing)? Or after a set number of turns? Use timers for the former or a turn script for the latter (the latter is probably better for the player and easier, as HK says timers are messy).<br/><br/>If you go for a turnscript, try this:<br/><pre><code>if (not HasBoolean(game, &quot;is_night&quot;)) {<br/>  game&#46;is_night = false<br/>  game&#46;turn_count = 0<br/>}<br/>game&#46;turn_count =  game&#46;turn_count + 1<br/>if (game&#46;turn_count % 30 = 0) {<br/>  game&#46;is_night = not game&#46;is_night<br/>}</code></pre><br/>Check game.is_night to see if it is night (but not on the first turn, as it will not be set up yet).",
      "PostDate": "2016-06-09T08:22:59+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43385",
      "UserId": 0,
      "Username": "HolisticIllusion",
      "UserAvatar": null,
      "UserGravatar": "614c9b891c1caef68df9d33e60bfed2d",
      "EditableText": "Thank you very much , the methods are working well i only seem to be having trouble with the description.\n\nIf i understood correctly , by using this expression : &quot;You look at the {gun.alias}.&quot; in the object description , it would be translated to &quot;You look at the gun (whatever the alias is right now)&quot;.\n\nWhen i use it the game returns You look at the {gun.alias}. \n\nI am using the online editor if that's the problem.\n\nEDIT : my mistake i was using an incorrect alias.",
      "EditableFormat": "bbcode",
      "HTML": "Thank you very much , the methods are working well i only seem to be having trouble with the description.<br/><br/>If i understood correctly , by using this expression : &quot;You look at the {gun.alias}.&quot; in the object description , it would be translated to &quot;You look at the gun (whatever the alias is right now)&quot;.<br/><br/>When i use it the game returns You look at the {gun.alias}. <br/><br/>I am using the online editor if that's the problem.<br/><br/>EDIT : my mistake i was using an incorrect alias.",
      "PostDate": "2016-06-09T14:10:48+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43393",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "if the problem isn't fixed... you may need to surround it in double quotes:\n\n&quot;You look at the {gun.alias}.&quot;\n\nor, you may need to change the [message] option to the [expression] option, and type in this (it's the same as the above line):\n\n&quot;You look at the {gun.alias}.&quot;\n\n--------------\n\nNote: I learned how to do VARIABLES the &quot;normal (more confusing, lol)&quot; way, I don't use the much more simple and non-confusing text processor commands much, so that's why I'm using the &quot;normal&quot; way and not text processor commands, below\n\n-------------\n\nhopefully, you understand basic Algebra, algebraic substitution, using variables:\n\nx = 10 // the Variable and its Value (a simple Expression: 10)\ny = x + 5 // the Variable and its Value (a complex Expression: x + 5)\n// y = (10) + 5 = 15\n\nwell, that's the exact same thing as is done with programming/coding/quest, except we can use any string for our VARIABLE name and work with strings/text for the expressions, as well as using numeric amounts/values:\n\nVariables:\n\nVariable_name = Value\n\nVariable_name: x\nVariable Value: 10\n\nx = 10 // the Variable and its Value (a simple Expression: = 10)\nmsg (&quot;The value is &quot; + x + &quot;.&quot;) // think of the 'msg' key-word/key-command as like the 'y' Variable (except it's doing an action, as it's a key-command/Script/Function), and the content inside of the parenthesis is its Value (a complex expression: &quot;The value is &quot; + x + &quot;.&quot;)\n// output: The value is 10.\n\n// if we change the value of x from 10 to 5, then the output is: The value is 5.\n\nvalue = 10\nmsg (&quot;The value is &quot; + value + &quot;.&quot;)\n// output: The value is 10.\n\nabc_def = 50\nmsg (&quot;The value is &quot; + abc_def + &quot;.&quot;)\n// output: The value is 50.\n\nm = 21\nmsg (&quot;The value is &quot; + m + &quot;.&quot;)\n// output: The value is 21.\n\n------\n\nnow programming has Attribute VARIABLES too:\n\nObject_name.Attribute_name = Value\n\nObject_name: game\nAttribute_name: x\nAttribute Value: 10\n\ngame.x = 10\nmsg (&quot;The value is &quot; + game.x + &quot;.&quot;)\n// output: The value is 10.\n\nplayer.strength = 100\n\nplayer.alias = &quot;john smith&quot;\n\nHK.intelligence = 0\n\norc.dead = false\norc.dead = true\n\nplayer.flying = false\nplayer.flying = true\n\n&lt;object name=&quot;sword&quot;&gt;\n&lt;/object&gt;\nplayer.right_hand = sword\n\ngame.greeting = &quot;Hi, welcome to my game, I hope you don't die, as dying in the game, will kill you in real life, good luck, you'll need it, muwhaha!&quot;\n\nHK.favorite_color = &quot;black&quot;\n\nHK.favorite_color_list = split (&quot;black;red&quot;, &quot;;&quot;)\n\ngame.conditions_list = split (&quot;normal;poisoned; stunned; asleep; dead; unconscious; paralyzed; petrified; silenced&quot;, &quot;;&quot;)\n\nplayer.conditions_list = split (&quot;normal&quot;, &quot;;&quot;) // player's condition(s): normal\nlist remove (player.conditions_list, &quot;normal&quot;) // player's condition(s): null (none/blank)\nlist add (player.conditions_list, &quot;poisoned&quot;) // player's condition(s): poisoned\nlist add (player.conditions_list, &quot;paralyzed&quot;) // player's condition(s): poisoned and paralyzed\n\nAttributes are held/contained by/in Objects, so, so long as the Object exists/still exists, you can use an Attribute anywhere, it is 'global'\n\nwhereas just a Variable VARIABLE, is only stored/saved for that specific Script location in the game that it is within, once the Script is finished, the Variable is erased ~ it is NOT preserved, so you can't use that Variable elsewhere in your game ~ you'll get an error as the Variable doesn't exist (as it was erased), it is 'local'. This is the difference between Variable VARIABLES and Attribute VARIABLES.\n\n------------------------\n\n'if' Scripting (conditionals) examples:\n\n[code:vs4k3ajt]if (x = 10) {\n  msg (&quot;The value is &quot; + x + &quot;&#46;&quot;)\n} else if (x &gt; 10) {\n  msg (&quot;The value is &quot; + x + &quot;&#46; This is greater than 10&#46;&quot;)\n} else if (x &lt; 10) {\n  msg (&quot;The value is &quot; + x + &quot;&#46; This is lesser than 10&#46;&quot;)\n}\n\n// ---------------------------------\n\nmsg (&quot;What is your name?&quot;)\nget input {\n  if (result = &quot;HK&quot;) {\n    msg (&quot;Ah, so your name is HK, this is so cool, I'm such a huge fan of yours!&quot;)\n  } else {\n    msg (&quot;Oh, so your name is &quot; + result + &quot;&#46; I don't know who you are, but it is nice to meet you&#46;&quot;)\n  }\n}\n\n// ------------------------------\n\n&lt;object name=&quot;room&quot;&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;player&quot;&gt;\n  &lt;attr name=&quot;parent&quot; type=&quot;object&quot;&gt;room&lt;/attr&gt;\n  &lt;attr name=&quot;alias&quot; type=&quot;string&quot;&gt;HK&lt;/attr&gt;\n  &lt;attr name=&quot;damage&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;current_life&quot; type=&quot;int&quot;&gt;999&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;monster&quot;&gt;\n  &lt;attr name=&quot;parent&quot; type=&quot;object&quot;&gt;room&lt;/attr&gt;\n  &lt;attr name=&quot;alias&quot; type=&quot;string&quot;&gt;orc&lt;/attr&gt;\n  &lt;attr name=&quot;dead&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;\n  &lt;attr name=&quot;damage&quot; type=&quot;int&quot;&gt;50&lt;/attr&gt;\n  &lt;attr name=&quot;current_life&quot; type=&quot;int&quot;&gt;500&lt;/attr&gt;\n  &lt;attr name=&quot;fight&quot; type=&quot;script&quot;&gt;\n    fight_function\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;fight&lt;/property&gt;\n  &lt;pattern&gt;fight&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't fight that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n\n&lt;function name=&quot;fight_function&quot;&gt;\n  if (monster&#46;dead) {\n    msg (&quot;The &quot; + monster&#46;alias + &quot; is already dead, silly&#46;&quot;)\n  } else {\n    monster&#46;current_life = monster&#46;current_life - player&#46;damage\n    msg (&quot;You attack the &quot; + monster&#46;alias + &quot;, doing &quot; + player&#46;damage + &quot; damage to it, leaving it with only &quot; + monster&#46;current_life + &quot; life left&#46;&quot;)\n    if (monster&#46;current_life &lt;= 0) {\n      monster&#46;dead = true\n      msg (&quot;You've not only damaged the &quot; + monster&#46;alias + &quot;, but you've killed it&#46;&quot;)\n    } else {\n      player&#46;current_life = player&#46;current_life - monster&#46;damage\n      msg (&quot;The &quot; + monster&#46;alias + &quot; attacks you, doing &quot; + monster&#46;damage + &quot; damage to you, leaving you with only &quot; + player&#46;current_life + &quot; life left&#46;&quot;)\n      if (player&#46;current_life &lt;= 0) {\n        msg (&quot;The &quot; + monster&#46;alias + &quot; has killed you&#46;&quot;)\n        msg (&quot;GAME OVER&quot;)\n        finish\n      }\n    }\n  }\n&lt;/function&gt;[/code:vs4k3ajt]\n\n--------------------------------------\n\nquest's structure:\n\nVARIABLES (3 Types):\n-&gt; Variables: some examples: result = &quot;HK&quot;, handled = false, you_go_first = true, x = 10, y = &quot;yes&quot;\n-&gt; Attributes: some examples: game.state = 0, player.alias = &quot;HK&quot;, orc.dead = false, game.x = 10, player.y = &quot;yes&quot;, game.handled = true, game.you_go_first = false\n-&gt; Parameters: these are for Functions/Commands/etc",
      "EditableFormat": "bbcode",
      "HTML": "if the problem isn't fixed... you may need to surround it in double quotes:<br/><br/>&quot;You look at the {gun.alias}.&quot;<br/><br/>or, you may need to change the [message] option to the [expression] option, and type in this (it's the same as the above line):<br/><br/>&quot;You look at the {gun.alias}.&quot;<br/><br/>--------------<br/><br/>Note: I learned how to do VARIABLES the &quot;normal (more confusing, lol)&quot; way, I don't use the much more simple and non-confusing text processor commands much, so that's why I'm using the &quot;normal&quot; way and not text processor commands, below<br/><br/>-------------<br/><br/>hopefully, you understand basic Algebra, algebraic substitution, using variables:<br/><br/>x = 10 // the Variable and its Value (a simple Expression: 10)<br/>y = x + 5 // the Variable and its Value (a complex Expression: x + 5)<br/>// y = (10) + 5 = 15<br/><br/>well, that's the exact same thing as is done with programming/coding/quest, except we can use any string for our VARIABLE name and work with strings/text for the expressions, as well as using numeric amounts/values:<br/><br/>Variables:<br/><br/>Variable_name = Value<br/><br/>Variable_name: x<br/>Variable Value: 10<br/><br/>x = 10 // the Variable and its Value (a simple Expression: = 10)<br/>msg (&quot;The value is &quot; + x + &quot;.&quot;) // think of the 'msg' key-word/key-command as like the 'y' Variable (except it's doing an action, as it's a key-command/Script/Function), and the content inside of the parenthesis is its Value (a complex expression: &quot;The value is &quot; + x + &quot;.&quot;)<br/>// output: The value is 10.<br/><br/>// if we change the value of x from 10 to 5, then the output is: The value is 5.<br/><br/>value = 10<br/>msg (&quot;The value is &quot; + value + &quot;.&quot;)<br/>// output: The value is 10.<br/><br/>abc_def = 50<br/>msg (&quot;The value is &quot; + abc_def + &quot;.&quot;)<br/>// output: The value is 50.<br/><br/>m = 21<br/>msg (&quot;The value is &quot; + m + &quot;.&quot;)<br/>// output: The value is 21.<br/><br/>------<br/><br/>now programming has Attribute VARIABLES too:<br/><br/>Object_name.Attribute_name = Value<br/><br/>Object_name: game<br/>Attribute_name: x<br/>Attribute Value: 10<br/><br/>game.x = 10<br/>msg (&quot;The value is &quot; + game.x + &quot;.&quot;)<br/>// output: The value is 10.<br/><br/>player.strength = 100<br/><br/>player.alias = &quot;john smith&quot;<br/><br/>HK.intelligence = 0<br/><br/>orc.dead = false<br/>orc.dead = true<br/><br/>player.flying = false<br/>player.flying = true<br/><br/>&lt;object name=&quot;sword&quot;&gt;<br/>&lt;/object&gt;<br/>player.right_hand = sword<br/><br/>game.greeting = &quot;Hi, welcome to my game, I hope you don't die, as dying in the game, will kill you in real life, good luck, you'll need it, muwhaha!&quot;<br/><br/>HK.favorite_color = &quot;black&quot;<br/><br/>HK.favorite_color_list = split (&quot;black;red&quot;, &quot;;&quot;)<br/><br/>game.conditions_list = split (&quot;normal;poisoned; stunned; asleep; dead; unconscious; paralyzed; petrified; silenced&quot;, &quot;;&quot;)<br/><br/>player.conditions_list = split (&quot;normal&quot;, &quot;;&quot;) // player's condition(s): normal<br/>list remove (player.conditions_list, &quot;normal&quot;) // player's condition(s): null (none/blank)<br/>list add (player.conditions_list, &quot;poisoned&quot;) // player's condition(s): poisoned<br/>list add (player.conditions_list, &quot;paralyzed&quot;) // player's condition(s): poisoned and paralyzed<br/><br/>Attributes are held/contained by/in Objects, so, so long as the Object exists/still exists, you can use an Attribute anywhere, it is 'global'<br/><br/>whereas just a Variable VARIABLE, is only stored/saved for that specific Script location in the game that it is within, once the Script is finished, the Variable is erased ~ it is NOT preserved, so you can't use that Variable elsewhere in your game ~ you'll get an error as the Variable doesn't exist (as it was erased), it is 'local'. This is the difference between Variable VARIABLES and Attribute VARIABLES.<br/><br/>------------------------<br/><br/>'if' Scripting (conditionals) examples:<br/><br/><pre><code>if (x = 10) {<br/>  msg (&quot;The value is &quot; + x + &quot;&#46;&quot;)<br/>} else if (x &gt; 10) {<br/>  msg (&quot;The value is &quot; + x + &quot;&#46; This is greater than 10&#46;&quot;)<br/>} else if (x &lt; 10) {<br/>  msg (&quot;The value is &quot; + x + &quot;&#46; This is lesser than 10&#46;&quot;)<br/>}<br/><br/>// ---------------------------------<br/><br/>msg (&quot;What is your name?&quot;)<br/>get input {<br/>  if (result = &quot;HK&quot;) {<br/>    msg (&quot;Ah, so your name is HK, this is so cool, I'm such a huge fan of yours!&quot;)<br/>  } else {<br/>    msg (&quot;Oh, so your name is &quot; + result + &quot;&#46; I don't know who you are, but it is nice to meet you&#46;&quot;)<br/>  }<br/>}<br/><br/>// ------------------------------<br/><br/>&lt;object name=&quot;room&quot;&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;attr name=&quot;parent&quot; type=&quot;object&quot;&gt;room&lt;/attr&gt;<br/>  &lt;attr name=&quot;alias&quot; type=&quot;string&quot;&gt;HK&lt;/attr&gt;<br/>  &lt;attr name=&quot;damage&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;current_life&quot; type=&quot;int&quot;&gt;999&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;monster&quot;&gt;<br/>  &lt;attr name=&quot;parent&quot; type=&quot;object&quot;&gt;room&lt;/attr&gt;<br/>  &lt;attr name=&quot;alias&quot; type=&quot;string&quot;&gt;orc&lt;/attr&gt;<br/>  &lt;attr name=&quot;dead&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;<br/>  &lt;attr name=&quot;damage&quot; type=&quot;int&quot;&gt;50&lt;/attr&gt;<br/>  &lt;attr name=&quot;current_life&quot; type=&quot;int&quot;&gt;500&lt;/attr&gt;<br/>  &lt;attr name=&quot;fight&quot; type=&quot;script&quot;&gt;<br/>    fight_function<br/>  &lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;verb&gt;<br/>  &lt;property&gt;fight&lt;/property&gt;<br/>  &lt;pattern&gt;fight&lt;/pattern&gt;<br/>  &lt;defaultexpression&gt;You can't fight that!&lt;/defaultexpression&gt;<br/>&lt;/verb&gt;<br/><br/>&lt;function name=&quot;fight_function&quot;&gt;<br/>  if (monster&#46;dead) {<br/>    msg (&quot;The &quot; + monster&#46;alias + &quot; is already dead, silly&#46;&quot;)<br/>  } else {<br/>    monster&#46;current_life = monster&#46;current_life - player&#46;damage<br/>    msg (&quot;You attack the &quot; + monster&#46;alias + &quot;, doing &quot; + player&#46;damage + &quot; damage to it, leaving it with only &quot; + monster&#46;current_life + &quot; life left&#46;&quot;)<br/>    if (monster&#46;current_life &lt;= 0) {<br/>      monster&#46;dead = true<br/>      msg (&quot;You've not only damaged the &quot; + monster&#46;alias + &quot;, but you've killed it&#46;&quot;)<br/>    } else {<br/>      player&#46;current_life = player&#46;current_life - monster&#46;damage<br/>      msg (&quot;The &quot; + monster&#46;alias + &quot; attacks you, doing &quot; + monster&#46;damage + &quot; damage to you, leaving you with only &quot; + player&#46;current_life + &quot; life left&#46;&quot;)<br/>      if (player&#46;current_life &lt;= 0) {<br/>        msg (&quot;The &quot; + monster&#46;alias + &quot; has killed you&#46;&quot;)<br/>        msg (&quot;GAME OVER&quot;)<br/>        finish<br/>      }<br/>    }<br/>  }<br/>&lt;/function&gt;</code></pre><br/><br/>--------------------------------------<br/><br/>quest's structure:<br/><br/>VARIABLES (3 Types):<br/>-&gt; Variables: some examples: result = &quot;HK&quot;, handled = false, you_go_first = true, x = 10, y = &quot;yes&quot;<br/>-&gt; Attributes: some examples: game.state = 0, player.alias = &quot;HK&quot;, orc.dead = false, game.x = 10, player.y = &quot;yes&quot;, game.handled = true, game.you_go_first = false<br/>-&gt; Parameters: these are for Functions/Commands/etc",
      "PostDate": "2016-06-09T17:59:57+01:00",
      "LastEditDate": null
    }
  ]
}
