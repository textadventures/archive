{
  "Topic": {
    "TopicId": "4285",
    "ForumId": "10",
    "Title": "Some Questions About \"Score\"",
    "LastUpdated": "2014-05-09T18:28:25+01:00",
    "ReplyCount": 45
  },
  "Posts": [
    {
      "PostId": "28447",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "First of all, I tagged the score-feature in the game-tab, but I don't find any indication that it is active, or how to use it. So I really don't have any idea what to do with it and I thought that it would be useful to make 2 different endings depending on what score you have, but as I said I just don't have any clues. Any ideas why?\n\nWhich leads me to my next question, can the score-feature be used in that way? As in tracking the players action so that there could be different endings depending on those actions? And how?\n\nI want to make a game about obedience and disobedience. The player progresses through a series of rooms and sometimes the player needs to do something to progress. Sometimes it requires some steps to progress. Sometimes it's essential to do the steps in the right order, but sometimes not. And though it is not essential, I still want that the player only scores when he does it in the &quot;right&quot; order. Is that possible? And if yes, how?",
      "EditableFormat": "bbcode",
      "HTML": "First of all, I tagged the score-feature in the game-tab, but I don't find any indication that it is active, or how to use it. So I really don't have any idea what to do with it and I thought that it would be useful to make 2 different endings depending on what score you have, but as I said I just don't have any clues. Any ideas why?<br/><br/>Which leads me to my next question, can the score-feature be used in that way? As in tracking the players action so that there could be different endings depending on those actions? And how?<br/><br/>I want to make a game about obedience and disobedience. The player progresses through a series of rooms and sometimes the player needs to do something to progress. Sometimes it requires some steps to progress. Sometimes it's essential to do the steps in the right order, but sometimes not. And though it is not essential, I still want that the player only scores when he does it in the &quot;right&quot; order. Is that possible? And if yes, how?<div><a href=\"/forumattachments/883/A Test Concerning Your Intelligence.aslx\">A Test Concerning Your Intelligence.aslx</a></div>",
      "PostDate": "2014-04-17T22:57:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28448",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "If you turn on panes (Features/Interface/Layout), you will see the score in the Status area. Otherwise, you'll have to display it somehow yourself.\n\nHow would you like it to be made available to the player? You could, for example, add a &quot;score&quot; command that shows the current score.",
      "EditableFormat": "bbcode",
      "HTML": "If you turn on panes (Features/Interface/Layout), you will see the score in the Status area. Otherwise, you'll have to display it somehow yourself.<br/><br/>How would you like it to be made available to the player? You could, for example, add a &quot;score&quot; command that shows the current score.",
      "PostDate": "2014-04-17T23:03:00+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28450",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Sorry, you misunderstood me. I don't see any attributes or anything alike when editing the game. True, it now shows the player, but that's not important to me. I just don't know what to edit. Or where to look or I just don't know.",
      "EditableFormat": "bbcode",
      "HTML": "Sorry, you misunderstood me. I don't see any attributes or anything alike when editing the game. True, it now shows the player, but that's not important to me. I just don't know what to edit. Or where to look or I just don't know.",
      "PostDate": "2014-04-17T23:10:30+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28451",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I see (I think). The score is an attribute on the &quot;game&quot; object. In code view, it shows up like this:\n\n[code:nk5s3o57]   &lt;Score type=&quot;int&quot;&gt;0&lt;/Score&gt;[/code:nk5s3o57]\nIn the editor, you should be able to see it in the &quot;attributes&quot; pane of the game object.\n\nI hope that is closer to what you meant. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "I see (I think). The score is an attribute on the &quot;game&quot; object. In code view, it shows up like this:<br/><br/><pre><code>   &lt;Score type=&quot;int&quot;&gt;0&lt;/Score&gt;</code></pre><br/>In the editor, you should be able to see it in the &quot;attributes&quot; pane of the game object.<br/><br/>I hope that is closer to what you meant. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2014-04-17T23:40:25+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28456",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Nope. Nothing in Attributes.\nIn code view, the only thing I found, was this:\n\n[code:2glub7cf]&lt;showscore /&gt;[/code:2glub7cf]\n\nI'm really not trying to be a pain in the ass. But whether I am able to do this or not, is a crucial design choice, I can't really move on with the game until I know. So, help? Please?",
      "EditableFormat": "bbcode",
      "HTML": "Nope. Nothing in Attributes.<br/>In code view, the only thing I found, was this:<br/><br/><pre><code>&lt;showscore /&gt;</code></pre><br/><br/>I'm really not trying to be a pain in the ass. But whether I am able to do this or not, is a crucial design choice, I can't really move on with the game until I know. So, help? Please?",
      "PostDate": "2014-04-18T09:42:26+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28457",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "If it helps, I was looking over the Score Library on the questwiki. And the first steps, says I should call a function called InitScore, but it wasn't found. I even checked the library elements, it wasn't there. I found InitStatusAttributes and funnily enough IncreaseScore and DecreaseScore. Don't know if that helps.",
      "EditableFormat": "bbcode",
      "HTML": "If it helps, I was looking over the Score Library on the questwiki. And the first steps, says I should call a function called InitScore, but it wasn't found. I even checked the library elements, it wasn't there. I found InitStatusAttributes and funnily enough IncreaseScore and DecreaseScore. Don't know if that helps.",
      "PostDate": "2014-04-18T09:55:56+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28459",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "To be honest, it all comes down to what you want to do. If you're not going to use the built-in score stuff to show the score in the side pane, then you can just create your own &quot;score&quot; variable (e.g. stick it in &quot;game&quot; or on &quot;player&quot;) and then update it however you like. And then use it how you like as well. It's really just a variable, and you have total control over that.",
      "EditableFormat": "bbcode",
      "HTML": "To be honest, it all comes down to what you want to do. If you're not going to use the built-in score stuff to show the score in the side pane, then you can just create your own &quot;score&quot; variable (e.g. stick it in &quot;game&quot; or on &quot;player&quot;) and then update it however you like. And then use it how you like as well. It's really just a variable, and you have total control over that.",
      "PostDate": "2014-04-18T13:46:45+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28463",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "No, no, I do want to use the built-in score stuff, I honestly just don't know how to. I figured out that calling the IncreaseScore-function with a parameter of 1 increases the score by 1 and decreasescore also works. I was just confused because I didn't see anything of the score in the editor, but now I see it is there.\nSo I know how to increase and decrease a score, perfect. Now, how can I make sure that the score is only getting increased when the player does the required things in the right order. Like, player has to do A, B and C to progress, but the steps are interchangeable, so the player could do B, A and C or C first and then A, B or everything reversed, C, B, A. But in order to score the player needs to do it in the order A, B, C. Get it?\n\nA concrete example:\n\nAt the beginning, the player is required to look around in order to spot the door and go through the door in order to progress into the next room. So if the player types in &quot;look around&quot; and then &quot;go through door&quot; then the score should increase by 1, but only then. If the player types in something different or &quot;go through door&quot; first and then &quot;look around&quot; or &quot;look around&quot; first and then a second time, the score should decrease by 1.\nI tried it by using the start-script and running get input. then if player is in room 1 then if expression result = look around etc.\nBut I realised that this setup wouldn't get the right order of the commands. Does anybody have an idea?\n\nAnd is there like a script or a function which I place at the end and the script or the function reads the score of the player and whether if the score is negative, 0 or positive a different ending happens?\n\nSorry, if I'm not being clear, I'm not trying to.",
      "EditableFormat": "bbcode",
      "HTML": "No, no, I do want to use the built-in score stuff, I honestly just don't know how to. I figured out that calling the IncreaseScore-function with a parameter of 1 increases the score by 1 and decreasescore also works. I was just confused because I didn't see anything of the score in the editor, but now I see it is there.<br/>So I know how to increase and decrease a score, perfect. Now, how can I make sure that the score is only getting increased when the player does the required things in the right order. Like, player has to do A, B and C to progress, but the steps are interchangeable, so the player could do B, A and C or C first and then A, B or everything reversed, C, B, A. But in order to score the player needs to do it in the order A, B, C. Get it?<br/><br/>A concrete example:<br/><br/>At the beginning, the player is required to look around in order to spot the door and go through the door in order to progress into the next room. So if the player types in &quot;look around&quot; and then &quot;go through door&quot; then the score should increase by 1, but only then. If the player types in something different or &quot;go through door&quot; first and then &quot;look around&quot; or &quot;look around&quot; first and then a second time, the score should decrease by 1.<br/>I tried it by using the start-script and running get input. then if player is in room 1 then if expression result = look around etc.<br/>But I realised that this setup wouldn't get the right order of the commands. Does anybody have an idea?<br/><br/>And is there like a script or a function which I place at the end and the script or the function reads the score of the player and whether if the score is negative, 0 or positive a different ending happens?<br/><br/>Sorry, if I'm not being clear, I'm not trying to.",
      "PostDate": "2014-04-18T18:13:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28467",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "As far as getting input, you can easily create custom commands (e.g. explicitly require things like &quot;look around&quot; or &quot;go through door&quot;). Then you those will be called only when the player types in what you want.\n\n(A personal note... I don't know your exposure to text adventures, so I'll err on the side of too much and state: be sure if you're going to mess with conventions, that you give the player plenty of clues about it. Something like being penalized for looking at the room twice could get people a bit irritated. Also using &quot;look around&quot; as opposed to the standard &quot;look&quot; could either make it hard for people to work out or inspire undesired levels of frustration. I'm not trying to get you to change your design. I'm just noting a couple of things in case you were unaware of the design ramifications. You can make it do what you like! )\n\nI think to track a sequence, you could use a state variable of some kind that advances when each step is performed and reset when one is done out of order. For example, start it out at 0. Then:\n\nfor look around: if (state = 0) then { state = 1 } else { score = score - 1; state = 0 }\nfor go through door: if (state = 1) then { score = score + 1 } else {score = score - 1; state = 0 }\n\nIf that makes sense. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Basically, if they do something out of sequence, they're penalized and the state is reset. Else it advances to the reward.\n\nAs far as end of game, you could have a final room which checks the score on entry and does appropriate things depending.",
      "EditableFormat": "bbcode",
      "HTML": "As far as getting input, you can easily create custom commands (e.g. explicitly require things like &quot;look around&quot; or &quot;go through door&quot;). Then you those will be called only when the player types in what you want.<br/><br/>(A personal note... I don't know your exposure to text adventures, so I'll err on the side of too much and state: be sure if you're going to mess with conventions, that you give the player plenty of clues about it. Something like being penalized for looking at the room twice could get people a bit irritated. Also using &quot;look around&quot; as opposed to the standard &quot;look&quot; could either make it hard for people to work out or inspire undesired levels of frustration. I'm not trying to get you to change your design. I'm just noting a couple of things in case you were unaware of the design ramifications. You can make it do what you like! )<br/><br/>I think to track a sequence, you could use a state variable of some kind that advances when each step is performed and reset when one is done out of order. For example, start it out at 0. Then:<br/><br/>for look around: if (state = 0) then { state = 1 } else { score = score - 1; state = 0 }<br/>for go through door: if (state = 1) then { score = score + 1 } else {score = score - 1; state = 0 }<br/><br/>If that makes sense. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Basically, if they do something out of sequence, they're penalized and the state is reset. Else it advances to the reward.<br/><br/>As far as end of game, you could have a final room which checks the score on entry and does appropriate things depending.",
      "PostDate": "2014-04-18T19:06:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28471",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Ok, first of all, thanks for staying with me after all these replies and trying to help me out, I really appreciate it.\nAnd thanks for the advise, but positive and negative score isn't really a reward or penalty kind of thing. I want to use it as a way to determine what ending I want to give the player. What I try to do with the game is, to convey a feeling of what I think that obedience and disobedience is about, just through gameplay. Not by narration (like really telling the player), just by interacting with the rules I laid out. And the score, I would display it through narration. So if you obey to the current objective of the game and would therefore score a point, I would have displayed something like &quot;Well done. Here, a cookie.&quot; or more likely something else (I really don't want to imply that obeying to something makes you dumb or whatever.) But scoring the point, doesn't give you any advantage, it doesn't give you any progress, it just is a kind of conditioning, an attempt to keep you from disobeying and disguising the fact that there are other ways. I know that it is very paradox, and there is even a term for that called ludonarrative dissonance( the story says you did A, but the game mechanics say, you did not A), but it is exactly the kind of feeling I want the player to have. Not knowing what exactly is &quot;right&quot; or &quot;wrong&quot;, so the player has to decide for himself what is &quot;right&quot; and &quot;wrong&quot;. \nAnd I want to include instructions for the game, saying that only typing in look around, etc. will work. Which is like laying out a controller with buttons. When you have a controller you can see and feel that these are the only buttons, but with text adventures you really have to point out that these are the only buttons. so i got that covered too.\nand sorry for the long text, but I felt there needed to be a justification for turning down a good advice.\n\nnow back to business:\nI'm really bad at coding, I mean, really bad. could you tell me where I have to copy those code samples you posted? Because it pretty much sounds like the thing I want.",
      "EditableFormat": "bbcode",
      "HTML": "Ok, first of all, thanks for staying with me after all these replies and trying to help me out, I really appreciate it.<br/>And thanks for the advise, but positive and negative score isn't really a reward or penalty kind of thing. I want to use it as a way to determine what ending I want to give the player. What I try to do with the game is, to convey a feeling of what I think that obedience and disobedience is about, just through gameplay. Not by narration (like really telling the player), just by interacting with the rules I laid out. And the score, I would display it through narration. So if you obey to the current objective of the game and would therefore score a point, I would have displayed something like &quot;Well done. Here, a cookie.&quot; or more likely something else (I really don't want to imply that obeying to something makes you dumb or whatever.) But scoring the point, doesn't give you any advantage, it doesn't give you any progress, it just is a kind of conditioning, an attempt to keep you from disobeying and disguising the fact that there are other ways. I know that it is very paradox, and there is even a term for that called ludonarrative dissonance( the story says you did A, but the game mechanics say, you did not A), but it is exactly the kind of feeling I want the player to have. Not knowing what exactly is &quot;right&quot; or &quot;wrong&quot;, so the player has to decide for himself what is &quot;right&quot; and &quot;wrong&quot;. <br/>And I want to include instructions for the game, saying that only typing in look around, etc. will work. Which is like laying out a controller with buttons. When you have a controller you can see and feel that these are the only buttons, but with text adventures you really have to point out that these are the only buttons. so i got that covered too.<br/>and sorry for the long text, but I felt there needed to be a justification for turning down a good advice.<br/><br/>now back to business:<br/>I'm really bad at coding, I mean, really bad. could you tell me where I have to copy those code samples you posted? Because it pretty much sounds like the thing I want.",
      "PostDate": "2014-04-18T19:45:18+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28475",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Thanks for the explanation. That helps. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> And now for your reward, here's some code: (lol)\n\n[code:18cbhlgk]    &lt;command name=&quot;LookAroundCommand&quot;&gt;\n      &lt;pattern&gt;look around&lt;/pattern&gt;\n      &lt;script&gt;\n      \tmsg(&quot;Some text describing the room&#46;&quot;)\n      \tif (game&#46;state = 0) {\n      \t\tgame&#46;state = 1\n      \t} else {\n      \t\tgame&#46;state = 0\n      \t\tDecreaseScore(1)\n      \t}\n      &lt;/script&gt;\n    &lt;/command&gt;\n    &lt;command name=&quot;GoThroughDoorCommand&quot;&gt;\n      &lt;pattern&gt;go through door&lt;/pattern&gt;\n      &lt;script&gt;\n      \tgame&#46;pov&#46;parent = NextRoom\n      \tif (game&#46;state = 1) {\n      \t\tIncreaseScore(1)\n      \t\tmsg(&quot;Well done! Have a cookie!&quot;)\n      \t} else {\n      \t\tgame&#46;state = 0\n      \t\tDecreaseScore(1)\n      \t}\n      &lt;/script&gt;\n    &lt;/command&gt;[/code:18cbhlgk]\n\nIf you put these commands in the room, then they will only exist when the player is in that room. I put in some placeholders for the actual &quot;look&quot; and &quot;go&quot; functionality (the commands need to respond the way the player expects). What you want that to be, you can work out.",
      "EditableFormat": "bbcode",
      "HTML": "Thanks for the explanation. That helps. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> And now for your reward, here's some code: (lol)<br/><br/><pre><code>    &lt;command name=&quot;LookAroundCommand&quot;&gt;<br/>      &lt;pattern&gt;look around&lt;/pattern&gt;<br/>      &lt;script&gt;<br/>      \tmsg(&quot;Some text describing the room&#46;&quot;)<br/>      \tif (game&#46;state = 0) {<br/>      \t\tgame&#46;state = 1<br/>      \t} else {<br/>      \t\tgame&#46;state = 0<br/>      \t\tDecreaseScore(1)<br/>      \t}<br/>      &lt;/script&gt;<br/>    &lt;/command&gt;<br/>    &lt;command name=&quot;GoThroughDoorCommand&quot;&gt;<br/>      &lt;pattern&gt;go through door&lt;/pattern&gt;<br/>      &lt;script&gt;<br/>      \tgame&#46;pov&#46;parent = NextRoom<br/>      \tif (game&#46;state = 1) {<br/>      \t\tIncreaseScore(1)<br/>      \t\tmsg(&quot;Well done! Have a cookie!&quot;)<br/>      \t} else {<br/>      \t\tgame&#46;state = 0<br/>      \t\tDecreaseScore(1)<br/>      \t}<br/>      &lt;/script&gt;<br/>    &lt;/command&gt;</code></pre><br/><br/>If you put these commands in the room, then they will only exist when the player is in that room. I put in some placeholders for the actual &quot;look&quot; and &quot;go&quot; functionality (the commands need to respond the way the player expects). What you want that to be, you can work out.",
      "PostDate": "2014-04-18T20:36:11+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28479",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Thanks a lot for the code, it seems to work, but I encountered this problem:\n\nError running script&#058; Error compiling expression 'game.state = 1': CompareElement: Operation 'Equal' is not defined for types 'Object' and 'Int32'\n\nSo, here's how I applied your suggestions:\n\n[code:37dcvr9o]if (game&#46;pov&#46;parent = look around room) {\n  if (game&#46;state = 1) {\n    IncreaseScore (1)\n    msg (&quot;Well done! Have a cookie!&quot;)\n  }\n  else {\n    game&#46;state = 0\n    DecreaseScore (1)\n  }\n  if (ListContains(ScopeVisible(), lookaroundroomdoorobject)) {\n    MoveObject (player, test look around room)\n  }\n  else {\n    if (RandomChance(1)) {\n      MoveObject (player, test look around room)\n    }\n    else {\n      msg (&quot;You bumped into something&#46;&quot;)\n    }\n  }\n}\nelse if (game&#46;pov&#46;parent = test look around room) {\n  if (ListContains(ScopeVisible(), testlookaroundroomdoorobject)) {\n    MoveObject (player, pull room)\n  }\n  else {\n    if (RandomChance(1)) {\n      MoveObject (player, pull room)\n    }\n    else {\n      msg (&quot;You bumped into something&#46;&quot;)\n    }\n  }\n}[/code:37dcvr9o]\n\nand for look around:\n\n[code:37dcvr9o]if (game&#46;pov&#46;parent = look around room) {\n  firsttime {\n    MakeExitVisible (lookaroundroomdoor)\n    MakeObjectVisible (lookaroundroomdoorobject)\n    msg (&quot;You see a door&#46;&quot;)\n    if (game&#46;state = 0) {\n      game&#46;state = 1\n    }\n    else {\n      game&#46;state = 0\n      DecreaseScore (1)\n    }\n  }\n  otherwise {\n    firsttime {\n      MakeObjectVisible (piece of paper)\n      msg (&quot;You notice a piece of paper&#46;&quot;)\n    }\n    otherwise {\n    }\n  }\n}\nelse if (game&#46;pov&#46;parent = pull room) {\n  firsttime {\n    msg (&quot;You see the lever&#46;&quot;)\n  }\n}\nelse if (game&#46;pov&#46;parent = test look around room) {\n  MakeExitVisible (testlookaroundroomdoor)\n  MakeObjectVisible (testlookaroundroomdoorobject)\n  msg (&quot;You see a door&#46;&quot;)\n}\nelse {\n  msg (&quot;&quot;)\n}[/code:37dcvr9o]\n\nI included the whole code of the commands, maybe the problem lies elsewhere. \nanything wrong with that?",
      "EditableFormat": "bbcode",
      "HTML": "Thanks a lot for the code, it seems to work, but I encountered this problem:<br/><br/>Error running script&#058; Error compiling expression 'game.state = 1': CompareElement: Operation 'Equal' is not defined for types 'Object' and 'Int32'<br/><br/>So, here's how I applied your suggestions:<br/><br/><pre><code>if (game&#46;pov&#46;parent = look around room) {<br/>  if (game&#46;state = 1) {<br/>    IncreaseScore (1)<br/>    msg (&quot;Well done! Have a cookie!&quot;)<br/>  }<br/>  else {<br/>    game&#46;state = 0<br/>    DecreaseScore (1)<br/>  }<br/>  if (ListContains(ScopeVisible(), lookaroundroomdoorobject)) {<br/>    MoveObject (player, test look around room)<br/>  }<br/>  else {<br/>    if (RandomChance(1)) {<br/>      MoveObject (player, test look around room)<br/>    }<br/>    else {<br/>      msg (&quot;You bumped into something&#46;&quot;)<br/>    }<br/>  }<br/>}<br/>else if (game&#46;pov&#46;parent = test look around room) {<br/>  if (ListContains(ScopeVisible(), testlookaroundroomdoorobject)) {<br/>    MoveObject (player, pull room)<br/>  }<br/>  else {<br/>    if (RandomChance(1)) {<br/>      MoveObject (player, pull room)<br/>    }<br/>    else {<br/>      msg (&quot;You bumped into something&#46;&quot;)<br/>    }<br/>  }<br/>}</code></pre><br/><br/>and for look around:<br/><br/><pre><code>if (game&#46;pov&#46;parent = look around room) {<br/>  firsttime {<br/>    MakeExitVisible (lookaroundroomdoor)<br/>    MakeObjectVisible (lookaroundroomdoorobject)<br/>    msg (&quot;You see a door&#46;&quot;)<br/>    if (game&#46;state = 0) {<br/>      game&#46;state = 1<br/>    }<br/>    else {<br/>      game&#46;state = 0<br/>      DecreaseScore (1)<br/>    }<br/>  }<br/>  otherwise {<br/>    firsttime {<br/>      MakeObjectVisible (piece of paper)<br/>      msg (&quot;You notice a piece of paper&#46;&quot;)<br/>    }<br/>    otherwise {<br/>    }<br/>  }<br/>}<br/>else if (game&#46;pov&#46;parent = pull room) {<br/>  firsttime {<br/>    msg (&quot;You see the lever&#46;&quot;)<br/>  }<br/>}<br/>else if (game&#46;pov&#46;parent = test look around room) {<br/>  MakeExitVisible (testlookaroundroomdoor)<br/>  MakeObjectVisible (testlookaroundroomdoorobject)<br/>  msg (&quot;You see a door&#46;&quot;)<br/>}<br/>else {<br/>  msg (&quot;&quot;)<br/>}</code></pre><br/><br/>I included the whole code of the commands, maybe the problem lies elsewhere. <br/>anything wrong with that?",
      "PostDate": "2014-04-18T22:14:41+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28480",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Sorry! I forgot one key part. (Ah yes. The perils of getting older.)\n\nYou must also define a &quot;state&quot; attribute on the &quot;game&quot; object, type &quot;integer&quot; and with an initial value of 0. The scripts depend on it already existing.",
      "EditableFormat": "bbcode",
      "HTML": "Sorry! I forgot one key part. (Ah yes. The perils of getting older.)<br/><br/>You must also define a &quot;state&quot; attribute on the &quot;game&quot; object, type &quot;integer&quot; and with an initial value of 0. The scripts depend on it already existing.",
      "PostDate": "2014-04-18T22:28:53+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28481",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Yes, great! Thank you!\nThere is one thing though: is there a way for the state changes to add up? because, it does only increase the score if you do the commands in the right order, but it does not take in account what happened before. Also, the score should only be decreased if you advanced in a different way, not everytime you do something different. \nI guess, I could use different values for different situations, but I guess the adding up would be much more efficient as I won't be able to think of every situation.",
      "EditableFormat": "bbcode",
      "HTML": "Yes, great! Thank you!<br/>There is one thing though: is there a way for the state changes to add up? because, it does only increase the score if you do the commands in the right order, but it does not take in account what happened before. Also, the score should only be decreased if you advanced in a different way, not everytime you do something different. <br/>I guess, I could use different values for different situations, but I guess the adding up would be much more efficient as I won't be able to think of every situation.",
      "PostDate": "2014-04-18T23:19:13+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28496",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "You can change the state and score however you like. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> What I showed is just one way to do it. You would need to change it to match the actual behavior you wish. The scripting is fairly trivial (ok, ok, I know) - the hard part is working out how you want it to act. If you could clearly define the behavior, I might be able to help with getting it to work, but it would need to be really spelled out.",
      "EditableFormat": "bbcode",
      "HTML": "You can change the state and score however you like. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> What I showed is just one way to do it. You would need to change it to match the actual behavior you wish. The scripting is fairly trivial (ok, ok, I know) - the hard part is working out how you want it to act. If you could clearly define the behavior, I might be able to help with getting it to work, but it would need to be really spelled out.",
      "PostDate": "2014-04-19T08:21:23+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28501",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Ok, I want that instead of setting the game state to 1, 1 gets added. So if you make a &quot;mistake&quot;, it can't be undone.\n\nfor example:\n\nin the first room, you have to look around first and then go through door. if you look around then 1 should get added to &quot;state&quot; no matter what. if the game. state is 1, go through door increases the score, but if it is anything but 1, 2 should get added to game.state. So if you don't play along right from the beginning, you don't score. \n\nIs that clear? The adding is the crucial part. That a certain state variable gets set to a certain state variable, but instead a certain amount is added to a certain state variable.",
      "EditableFormat": "bbcode",
      "HTML": "Ok, I want that instead of setting the game state to 1, 1 gets added. So if you make a &quot;mistake&quot;, it can't be undone.<br/><br/>for example:<br/><br/>in the first room, you have to look around first and then go through door. if you look around then 1 should get added to &quot;state&quot; no matter what. if the game. state is 1, go through door increases the score, but if it is anything but 1, 2 should get added to game.state. So if you don't play along right from the beginning, you don't score. <br/><br/>Is that clear? The adding is the crucial part. That a certain state variable gets set to a certain state variable, but instead a certain amount is added to a certain state variable.",
      "PostDate": "2014-04-19T09:14:08+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28502",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Almost clear... what happens if you look and then look again and then look again? Is the state 3 at that point?\n\nI think the state thing might need to be local as well. If the player makes a misstep early on (e.g. looks twice before going out the door), then they would never be able to &quot;catch up&quot; and begin scoring again, as their initial double take would put them forever out of sync. If that makes sense... (I'm speculating on what happens after &quot;go through door&quot;.)",
      "EditableFormat": "bbcode",
      "HTML": "Almost clear... what happens if you look and then look again and then look again? Is the state 3 at that point?<br/><br/>I think the state thing might need to be local as well. If the player makes a misstep early on (e.g. looks twice before going out the door), then they would never be able to &quot;catch up&quot; and begin scoring again, as their initial double take would put them forever out of sync. If that makes sense... (I'm speculating on what happens after &quot;go through door&quot;.)",
      "PostDate": "2014-04-19T09:27:34+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28503",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Actually, it might be helpful to take a step back, and take a broader view. We've gotten down in the weeds with the whole state thing, and it might be clouding the discussion a bit. Let's forget the implementation for a moment and look at the requirements.\n\nLet's say you have an ideal sequence of input: A B C D E F G H I...\n\nAt each step, the player is expected to do &quot;the right thing&quot;. The score tracks how well they have been following along, with more negative numbers being &quot;less obedient&quot; and more positive numbers being &quot;more obedient&quot;. It's not so much positive or negative as much as a position along a scale. \n\nInitially, they need to do task A. If they do task A, they get shifted toward the &quot;obedient&quot; side. If they do something else, they get shifted toward the &quot;less obedient&quot; side. (If they repeatedly don't do A, do they shift further and further to the &quot;not&quot;? Can they redeem themselves?)\n\nOnce they have completed task A, then they move onto task B. Note that eventually they will hit task A, so they will at least get a point in the &quot;more&quot; direction. While expecting task B, if they do anything else, a point is taken away (shifted left on the scale). When they execute task B, they get a point and move on to C as the expectation.\n\nIn the end, you have a &quot;score&quot; which represents the number of correct steps minus the number of incorrect ones.\n\nIf this is what you want, then we need to be clear of one thing: the player should not end up in a state where they are no longer able to take the right step. For example, if the next expected step is &quot;look around&quot; and they then type &quot;go through door&quot; such that they are no longer able to look around, then the scoring gets stuck - they end up not being able to advance because they are no long able to perform the next expected step. There need to be constraints such that they eventually will continue along the desired path.. So as long as that is understood (and what I've described is what you want), then I can whip something up.",
      "EditableFormat": "bbcode",
      "HTML": "Actually, it might be helpful to take a step back, and take a broader view. We've gotten down in the weeds with the whole state thing, and it might be clouding the discussion a bit. Let's forget the implementation for a moment and look at the requirements.<br/><br/>Let's say you have an ideal sequence of input: A B C D E F G H I...<br/><br/>At each step, the player is expected to do &quot;the right thing&quot;. The score tracks how well they have been following along, with more negative numbers being &quot;less obedient&quot; and more positive numbers being &quot;more obedient&quot;. It's not so much positive or negative as much as a position along a scale. <br/><br/>Initially, they need to do task A. If they do task A, they get shifted toward the &quot;obedient&quot; side. If they do something else, they get shifted toward the &quot;less obedient&quot; side. (If they repeatedly don't do A, do they shift further and further to the &quot;not&quot;? Can they redeem themselves?)<br/><br/>Once they have completed task A, then they move onto task B. Note that eventually they will hit task A, so they will at least get a point in the &quot;more&quot; direction. While expecting task B, if they do anything else, a point is taken away (shifted left on the scale). When they execute task B, they get a point and move on to C as the expectation.<br/><br/>In the end, you have a &quot;score&quot; which represents the number of correct steps minus the number of incorrect ones.<br/><br/>If this is what you want, then we need to be clear of one thing: the player should not end up in a state where they are no longer able to take the right step. For example, if the next expected step is &quot;look around&quot; and they then type &quot;go through door&quot; such that they are no longer able to look around, then the scoring gets stuck - they end up not being able to advance because they are no long able to perform the next expected step. There need to be constraints such that they eventually will continue along the desired path.. So as long as that is understood (and what I've described is what you want), then I can whip something up.",
      "PostDate": "2014-04-19T09:47:58+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28504",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "[quote:1y78a02c]Almost clear... what happens if you look and then look again and then look again? Is the state 3 at that point?[/quote:1y78a02c]\n\nExactly! Is that possible? And how?\n\n[quote:1y78a02c]I think the state thing might need to be local as well. If the player makes a misstep early on (e.g. looks twice before going out the door), then they would never be able to &quot;catch up&quot; and begin scoring again, as their initial double take would put them forever out of sync. If that makes sense... (I'm speculating on what happens after &quot;go through door&quot;.)[/quote:1y78a02c]\n\nIf the player progresses(moves into next room) state will be reset to 0. A score increase or decrease should happen when the player progresses. So you can make so much &quot;missteps&quot; as you like, you'll just lose 1 point. so when player types go through door (and meets all the requirements, you have to have spotted the door and unlocked it) there would be a if script implemented which you suggested would check the state variable. If the state variable is the amount that only could be achieved if the steps where done in right order, you'll get a point. If the state variable is something else, you'll lose one point.\nWas that what you meant?",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>Almost clear... what happens if you look and then look again and then look again? Is the state 3 at that point?</p></blockquote><br/><br/>Exactly! Is that possible? And how?<br/><br/><blockquote><p>I think the state thing might need to be local as well. If the player makes a misstep early on (e.g. looks twice before going out the door), then they would never be able to &quot;catch up&quot; and begin scoring again, as their initial double take would put them forever out of sync. If that makes sense... (I'm speculating on what happens after &quot;go through door&quot;.)</p></blockquote><br/><br/>If the player progresses(moves into next room) state will be reset to 0. A score increase or decrease should happen when the player progresses. So you can make so much &quot;missteps&quot; as you like, you'll just lose 1 point. so when player types go through door (and meets all the requirements, you have to have spotted the door and unlocked it) there would be a if script implemented which you suggested would check the state variable. If the state variable is the amount that only could be achieved if the steps where done in right order, you'll get a point. If the state variable is something else, you'll lose one point.<br/>Was that what you meant?",
      "PostDate": "2014-04-19T09:51:44+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28506",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "It's not about how much obedient or disobedient you are, it's whether you are or not. If you are obedient you get a point. If not you'll lose a point. And that's just concerning one room. So this would happen in every room. You could have 0 points at the end of the game because you obeyed in one room, but disobeyed in another and so on and on.",
      "EditableFormat": "bbcode",
      "HTML": "It's not about how much obedient or disobedient you are, it's whether you are or not. If you are obedient you get a point. If not you'll lose a point. And that's just concerning one room. So this would happen in every room. You could have 0 points at the end of the game because you obeyed in one room, but disobeyed in another and so on and on.",
      "PostDate": "2014-04-19T09:56:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28507",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "[quote:y57l03ki]If this is what you want, then we need to be clear of one thing: the player should not end up in a state where they are no longer able to take the right step. For example, if the next expected step is &quot;look around&quot; and they then type &quot;go through door&quot; such that they are no longer able to look around, then the scoring gets stuck - they end up not being able to advance because they are no long able to perform the next expected step. There need to be constraints such that they eventually will continue along the desired path.. So as long as that is understood (and what I've described is what you want), then I can whip something up.[/quote:y57l03ki]\n\nYes, yes, i never intented to disable any commands or ways of interaction. Scoring isn't tied to advancing through the game. It just should show how you advanced.\nSo I would have designed the rooms that there would be obedient and disobedient solutions to advance.\n\nEDIT: So, what I need is a way of keeping track how the player advanced.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>If this is what you want, then we need to be clear of one thing: the player should not end up in a state where they are no longer able to take the right step. For example, if the next expected step is &quot;look around&quot; and they then type &quot;go through door&quot; such that they are no longer able to look around, then the scoring gets stuck - they end up not being able to advance because they are no long able to perform the next expected step. There need to be constraints such that they eventually will continue along the desired path.. So as long as that is understood (and what I've described is what you want), then I can whip something up.</p></blockquote><br/><br/>Yes, yes, i never intented to disable any commands or ways of interaction. Scoring isn't tied to advancing through the game. It just should show how you advanced.<br/>So I would have designed the rooms that there would be obedient and disobedient solutions to advance.<br/><br/>EDIT: So, what I need is a way of keeping track how the player advanced.",
      "PostDate": "2014-04-19T09:58:53+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28508",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I think we're getting closer... <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> So if, within one room, you don't do the right thing 3 times and then you *do* do the right thing such that you progress, your score would be 0? (A -1 score for all the missteps and then +1 for getting it right.) \n\nOr is score computed per room? (If I make the right steps in the current room, I get a +1 for this room, else I get -1 when I leave.) And then your score would be the sum of the room scores?",
      "EditableFormat": "bbcode",
      "HTML": "I think we're getting closer... <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> So if, within one room, you don't do the right thing 3 times and then you *do* do the right thing such that you progress, your score would be 0? (A -1 score for all the missteps and then +1 for getting it right.) <br/><br/>Or is score computed per room? (If I make the right steps in the current room, I get a +1 for this room, else I get -1 when I leave.) And then your score would be the sum of the room scores?",
      "PostDate": "2014-04-19T10:03:39+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28509",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "This might help as well... (rubs hands together). Use cases... Assuming an ideal sequence of A B C D, what would your score be for the following:\n\n1) A B C D\n\n2) A A B C D\n\n3) B A B C D\n\n4) A B D C D\n\n5) A B D C C D",
      "EditableFormat": "bbcode",
      "HTML": "This might help as well... (rubs hands together). Use cases... Assuming an ideal sequence of A B C D, what would your score be for the following:<br/><br/>1) A B C D<br/><br/>2) A A B C D<br/><br/>3) B A B C D<br/><br/>4) A B D C D<br/><br/>5) A B D C C D",
      "PostDate": "2014-04-19T10:07:42+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28510",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Actually, one more:\n\n6) A A A B B B C C C D",
      "EditableFormat": "bbcode",
      "HTML": "Actually, one more:<br/><br/>6) A A A B B B C C C D",
      "PostDate": "2014-04-19T10:12:13+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28512",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "[quote:1598n5ar]Or is score computed per room? (If I make the right steps in the current room, I get a +1 for this room, else I get -1 when I leave.) And then your score would be the sum of the room scores?[/quote:1598n5ar]\n\nExactly!\n\n[quote:1598n5ar]Use cases... Assuming an ideal sequence of A B C D, what would your score be for the following:\n\n1) A B C D\n\n2) A A B C D\n\n3) B A B C D\n\n4) A B D C D\n\n5) A B D C C D\n\n6)A A A B B B C C C D[/quote:1598n5ar]\n\nIf 1) was ideal, then 1) gets you a point. All the others lose you a point. If they are either-or cases meant for one room.\n\nMaybe an example will clear things up:\n\nI have a room, where a &quot;guide&quot; tells you: &quot;There is a lever. Please look around first and then pull it. Then go through the door.&quot; Now, in the previous rooms you learned that looking around makes things visible and gives you new information. But the information was already given and the objects are already clearly visible. So the obedient way of advancing would be to look around, then to pull the lever and to go through the door.\nBut the player could also just pull the lever and go through the door. The player also just could go through the door as the lever doesn't open it.\nSo there are three possible solutions, but only one will get you a point. The other two will lose you a point.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>Or is score computed per room? (If I make the right steps in the current room, I get a +1 for this room, else I get -1 when I leave.) And then your score would be the sum of the room scores?</p></blockquote><br/><br/>Exactly!<br/><br/><blockquote><p>Use cases... Assuming an ideal sequence of A B C D, what would your score be for the following:<br/><br/>1) A B C D<br/><br/>2) A A B C D<br/><br/>3) B A B C D<br/><br/>4) A B D C D<br/><br/>5) A B D C C D<br/><br/>6)A A A B B B C C C D</p></blockquote><br/><br/>If 1) was ideal, then 1) gets you a point. All the others lose you a point. If they are either-or cases meant for one room.<br/><br/>Maybe an example will clear things up:<br/><br/>I have a room, where a &quot;guide&quot; tells you: &quot;There is a lever. Please look around first and then pull it. Then go through the door.&quot; Now, in the previous rooms you learned that looking around makes things visible and gives you new information. But the information was already given and the objects are already clearly visible. So the obedient way of advancing would be to look around, then to pull the lever and to go through the door.<br/>But the player could also just pull the lever and go through the door. The player also just could go through the door as the lever doesn't open it.<br/>So there are three possible solutions, but only one will get you a point. The other two will lose you a point.",
      "PostDate": "2014-04-19T10:23:00+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28513",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Or there could be a room where the guide tells you to push a button to open the door. But if you look around, you'll discover dynamit and matches and you can blow the door up.\nThe first case gets you a point, and the second loses you a point, but you still advance.",
      "EditableFormat": "bbcode",
      "HTML": "Or there could be a room where the guide tells you to push a button to open the door. But if you look around, you'll discover dynamit and matches and you can blow the door up.<br/>The first case gets you a point, and the second loses you a point, but you still advance.",
      "PostDate": "2014-04-19T10:27:02+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28514",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Ok, I think I got it. Let me ponder it a bit and I'll get back to you. I think the trick was the per-room part. Basically, did you get out of the room the right way (more or less).\n\nGiven the propensity for people to look around, you might want to make the points more &quot;chunky&quot; - that is, key whether you passed the room or not on something higher level like did you push the button or use the dynamite to get out, as opposed to how many times you looked around. It also seems that if you look around and find the dynamite and matches but then actually push the button to leave, that you've done what you were told - unless the guide explicitly tells you *not* to look around.",
      "EditableFormat": "bbcode",
      "HTML": "Ok, I think I got it. Let me ponder it a bit and I'll get back to you. I think the trick was the per-room part. Basically, did you get out of the room the right way (more or less).<br/><br/>Given the propensity for people to look around, you might want to make the points more &quot;chunky&quot; - that is, key whether you passed the room or not on something higher level like did you push the button or use the dynamite to get out, as opposed to how many times you looked around. It also seems that if you look around and find the dynamite and matches but then actually push the button to leave, that you've done what you were told - unless the guide explicitly tells you *not* to look around.",
      "PostDate": "2014-04-19T10:45:08+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28515",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Great, thank you.\nI know what you mean and you're right. In that case I would do it like that. But sometimes I want it to be very picky. Like in school for example, mathematic. Sometimes the teacher just wanted you to have the right result, didn't matter how you got it. But sometimes the teacher demanded that you do it the way he just taught you, didn't matter if you wanted to or you had a better solution or whatever. I at least had such teachers. And that's the feeling I want the player to have.",
      "EditableFormat": "bbcode",
      "HTML": "Great, thank you.<br/>I know what you mean and you're right. In that case I would do it like that. But sometimes I want it to be very picky. Like in school for example, mathematic. Sometimes the teacher just wanted you to have the right result, didn't matter how you got it. But sometimes the teacher demanded that you do it the way he just taught you, didn't matter if you wanted to or you had a better solution or whatever. I at least had such teachers. And that's the feeling I want the player to have.",
      "PostDate": "2014-04-19T11:19:22+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28519",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "So what I think makes sense is that since the score is per-room and applies to your time in that room (and is pass/fail sort of thing), you would want to gather a score (either +1 or -1) during your time in the room and then apply it when the player exits. That saves (at least) having to worry about whether the score has already been added or not.\n\nThe basic idea is to set things up when the player enters the room and then update the score when the player leaves:\n\n[code:7ckg8im7]\n  &lt;enter type=&quot;script&quot;&gt;\n    this&#46;state = 0\n    this&#46;score = 1\n  &lt;/enter&gt;\n  &lt;onexit type=&quot;script&quot;&gt;\n      IncreaseScore(this&#46;score)\n  &lt;/onexit&gt;\n  &lt;command name=&quot;LookAroundCommand&quot;&gt;\n      &lt;pattern&gt;look around&lt;/pattern&gt;\n      &lt;script&gt;\n         room = pov&#46;parent\n         msg(&quot;Some text describing the room&#46;&quot;)\n         if (room&#46;state = 0) {\n            // Ok so far&#46; Go to next state&#46;\n            game&#46;state = 1\n         } else {\n           // Fail!\n           room&#46;score = -1\n           // To prevent a good message on the look/look case&#46;\n           room&#46;state = -1\n         }\n      &lt;/script&gt;\n    &lt;/command&gt;\n    &lt;command name=&quot;GoThroughDoorCommand&quot;&gt;\n      &lt;pattern&gt;go through door&lt;/pattern&gt;\n      &lt;script&gt;\n         room = pov&#46;parent\n         if (room&#46;state = 1) {\n            // They made it!\n            msg(&quot;Well done! Have a cookie!&quot;)\n         } else {\n            // Fail!\n            room&#46;score = -1\n         }\n         // Go to next room&#46; This will update the score on exit&#46;\n         game&#46;pov&#46;parent = NextRoom\n      &lt;/script&gt;\n    &lt;/command&gt;[/code:7ckg8im7]\n\nYou start the score for the room out on a positive note (assume success). If they misstep anywhere along the way, set the score to -1. Then when they leave the room, the master score is updated from the local one. I put the state on the room as well, since it was local. You could keep it on the game if you prefer.\n\nI *think* that gives you what you want. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "So what I think makes sense is that since the score is per-room and applies to your time in that room (and is pass/fail sort of thing), you would want to gather a score (either +1 or -1) during your time in the room and then apply it when the player exits. That saves (at least) having to worry about whether the score has already been added or not.<br/><br/>The basic idea is to set things up when the player enters the room and then update the score when the player leaves:<br/><br/><pre><code><br/>  &lt;enter type=&quot;script&quot;&gt;<br/>    this&#46;state = 0<br/>    this&#46;score = 1<br/>  &lt;/enter&gt;<br/>  &lt;onexit type=&quot;script&quot;&gt;<br/>      IncreaseScore(this&#46;score)<br/>  &lt;/onexit&gt;<br/>  &lt;command name=&quot;LookAroundCommand&quot;&gt;<br/>      &lt;pattern&gt;look around&lt;/pattern&gt;<br/>      &lt;script&gt;<br/>         room = pov&#46;parent<br/>         msg(&quot;Some text describing the room&#46;&quot;)<br/>         if (room&#46;state = 0) {<br/>            // Ok so far&#46; Go to next state&#46;<br/>            game&#46;state = 1<br/>         } else {<br/>           // Fail!<br/>           room&#46;score = -1<br/>           // To prevent a good message on the look/look case&#46;<br/>           room&#46;state = -1<br/>         }<br/>      &lt;/script&gt;<br/>    &lt;/command&gt;<br/>    &lt;command name=&quot;GoThroughDoorCommand&quot;&gt;<br/>      &lt;pattern&gt;go through door&lt;/pattern&gt;<br/>      &lt;script&gt;<br/>         room = pov&#46;parent<br/>         if (room&#46;state = 1) {<br/>            // They made it!<br/>            msg(&quot;Well done! Have a cookie!&quot;)<br/>         } else {<br/>            // Fail!<br/>            room&#46;score = -1<br/>         }<br/>         // Go to next room&#46; This will update the score on exit&#46;<br/>         game&#46;pov&#46;parent = NextRoom<br/>      &lt;/script&gt;<br/>    &lt;/command&gt;</code></pre><br/><br/>You start the score for the room out on a positive note (assume success). If they misstep anywhere along the way, set the score to -1. Then when they leave the room, the master score is updated from the local one. I put the state on the room as well, since it was local. You could keep it on the game if you prefer.<br/><br/>I *think* that gives you what you want. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2014-04-19T12:19:14+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28520",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Man, I can't convey to you how much you blow my mind by the fact that you sat down to write a code, like, wow, thank you.\n\nSo, as I said, me really bad at coding.\nSo can I copy that and just paste it somewhere in code (where exactly?) because I'm not sure if those remarks like &quot;//Ok so far. go to next state.&quot; are part of the code and if they are I really have to sit down to coding again 'cause I know nothing.",
      "EditableFormat": "bbcode",
      "HTML": "Man, I can't convey to you how much you blow my mind by the fact that you sat down to write a code, like, wow, thank you.<br/><br/>So, as I said, me really bad at coding.<br/>So can I copy that and just paste it somewhere in code (where exactly?) because I'm not sure if those remarks like &quot;//Ok so far. go to next state.&quot; are part of the code and if they are I really have to sit down to coding again 'cause I know nothing.",
      "PostDate": "2014-04-19T12:41:04+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28521",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "The parts starting with &quot;//&quot; are just comments, to try to explain what I was doing. You can delete them if it all makes sense (or not!). You could just drop that code into your room definition. That was my intent anyway (sorry I didn't state that). The enter/exit/commands will all be specific to the room. You can then duplicate that for other rooms and adjust it for the behavior there.\n\nYou could, in theory, create a room base type. Then the enter and exit functions would be common to all rooms that you inherit the base type from. The complication is that if you override the enter or exit functions in a room, you'll lose the default behavior. So let's leave it as that for now.\n\nSee if that works for the first room. I hope other rooms will be straightforward enough. I suppose we'll see. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "The parts starting with &quot;//&quot; are just comments, to try to explain what I was doing. You can delete them if it all makes sense (or not!). You could just drop that code into your room definition. That was my intent anyway (sorry I didn't state that). The enter/exit/commands will all be specific to the room. You can then duplicate that for other rooms and adjust it for the behavior there.<br/><br/>You could, in theory, create a room base type. Then the enter and exit functions would be common to all rooms that you inherit the base type from. The complication is that if you override the enter or exit functions in a room, you'll lose the default behavior. So let's leave it as that for now.<br/><br/>See if that works for the first room. I hope other rooms will be straightforward enough. I suppose we'll see. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2014-04-19T13:23:47+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28526",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "ok, so I created functions for look around and go through door. can I take the parts from your code and just put them there?\ncould you maybe explain the underlying logic of your code because it seems like you thought I didn't code anything, but I did and I really want to apply your mechanics to my code.",
      "EditableFormat": "bbcode",
      "HTML": "ok, so I created functions for look around and go through door. can I take the parts from your code and just put them there?<br/>could you maybe explain the underlying logic of your code because it seems like you thought I didn't code anything, but I did and I really want to apply your mechanics to my code.",
      "PostDate": "2014-04-19T17:37:45+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28529",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Going back and looking at your code, I see one problem, which is that you're using a separate room for each step, which is something that didn't come out in our discussion before (since we were talking high level). I was using &quot;room&quot; in the sense of &quot;the location where the player believes himself to be&quot; as opposed to an internal construct. \n\nSo when you had talked about looking around and then going through a door - and you had said you get a point per room - I had assumed that you would get one point when going through the door - you've left the room. However, now I'm back to being confused again, since I'm not sure if our definition of &quot;room&quot; is the same thing, since you *internally* change rooms after looking around, which I neither expected nor propagated in the code I gave you.\n\nI guess I'm back to square two or three. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> For the sequence &quot;look around&quot; and &quot;go through door&quot;, once you're gone through the door, do you have one point or two? Is &quot;room&quot; what the player considers a room or what you are internally considering a room?\n\nIf you do mean to have a point added only when the player leaves the visible room through the door, then I think the way you have structured your code is going to make life hard for you, since you can't use the normal room events. The code I gave you assumes the player remains in the room until they leave. You could probably salvage it by putting the &quot;exit&quot; code only on the &quot;go through door&quot; room exit code. That means that some of your internal rooms would score point and some wouldn't. It would work, and it would preserve your existing structure, but it might be confusing a month from now. You'd also need to not use the per-room state variables as I used them, since the player doesn't remain in the same internal room. In other words, move the state back to the game object by replacing &quot;this.*&quot; with &quot;game.*&quot;.\n\nAs far as the commands go, you could probably just replace them with your &quot;get input&quot; checks.\n\nAssuming I still understand what you want, if you post your full game again (with your attempt to integrate), I can try to get it to work.",
      "EditableFormat": "bbcode",
      "HTML": "Going back and looking at your code, I see one problem, which is that you're using a separate room for each step, which is something that didn't come out in our discussion before (since we were talking high level). I was using &quot;room&quot; in the sense of &quot;the location where the player believes himself to be&quot; as opposed to an internal construct. <br/><br/>So when you had talked about looking around and then going through a door - and you had said you get a point per room - I had assumed that you would get one point when going through the door - you've left the room. However, now I'm back to being confused again, since I'm not sure if our definition of &quot;room&quot; is the same thing, since you *internally* change rooms after looking around, which I neither expected nor propagated in the code I gave you.<br/><br/>I guess I'm back to square two or three. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> For the sequence &quot;look around&quot; and &quot;go through door&quot;, once you're gone through the door, do you have one point or two? Is &quot;room&quot; what the player considers a room or what you are internally considering a room?<br/><br/>If you do mean to have a point added only when the player leaves the visible room through the door, then I think the way you have structured your code is going to make life hard for you, since you can't use the normal room events. The code I gave you assumes the player remains in the room until they leave. You could probably salvage it by putting the &quot;exit&quot; code only on the &quot;go through door&quot; room exit code. That means that some of your internal rooms would score point and some wouldn't. It would work, and it would preserve your existing structure, but it might be confusing a month from now. You'd also need to not use the per-room state variables as I used them, since the player doesn't remain in the same internal room. In other words, move the state back to the game object by replacing &quot;this.*&quot; with &quot;game.*&quot;.<br/><br/>As far as the commands go, you could probably just replace them with your &quot;get input&quot; checks.<br/><br/>Assuming I still understand what you want, if you post your full game again (with your attempt to integrate), I can try to get it to work.",
      "PostDate": "2014-04-20T09:40:28+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28530",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Oh, no, the names of the rooms are misleading. The names are that way to capture the tutorial feel I want to do.\nSo the look around room is called that way because I try to teach the player the basics of looking around in that room like a lot of games like Portal or Super Mario teach the player in their first few levels while their in game.\nSo they are all separate rooms and they function as rooms, they just have those names cause they also function as an in-game tutorial.\nI hope that cleared things up.",
      "EditableFormat": "bbcode",
      "HTML": "Oh, no, the names of the rooms are misleading. The names are that way to capture the tutorial feel I want to do.<br/>So the look around room is called that way because I try to teach the player the basics of looking around in that room like a lot of games like Portal or Super Mario teach the player in their first few levels while their in game.<br/>So they are all separate rooms and they function as rooms, they just have those names cause they also function as an in-game tutorial.<br/>I hope that cleared things up.",
      "PostDate": "2014-04-20T10:36:34+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28531",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "That makes sense, and I figured as much. My question is as before, though: at what point do you update the score? Do you get a point when leaving the &quot;look around&quot; room and then again when you leave the &quot;go through door&quot; room, or is it aligned more with the player's point of view, where looking around is still in the same &quot;room&quot;, and you only get the point when you go through the door?",
      "EditableFormat": "bbcode",
      "HTML": "That makes sense, and I figured as much. My question is as before, though: at what point do you update the score? Do you get a point when leaving the &quot;look around&quot; room and then again when you leave the &quot;go through door&quot; room, or is it aligned more with the player's point of view, where looking around is still in the same &quot;room&quot;, and you only get the point when you go through the door?",
      "PostDate": "2014-04-20T11:17:56+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28532",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Well, the score should get updated when leaving the room, so when the player walks through the door. the exits are just one way so once the player left the room, he can't go back. and if he followed the instructions, he gets +1, if not -1.\nDid that answer your question?",
      "EditableFormat": "bbcode",
      "HTML": "Well, the score should get updated when leaving the room, so when the player walks through the door. the exits are just one way so once the player left the room, he can't go back. and if he followed the instructions, he gets +1, if not -1.<br/>Did that answer your question?",
      "PostDate": "2014-04-20T11:30:22+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28533",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Yep. Actually, reviewing the code, I realized that I totally and needlessly confused myself earlier. So please ignore anything (before this) that I've written today...\n\nI think at this point I'm supposed to be telling you how to integrate my code with yours, but I'm not sure what yours is at the moment. I have the initial file you posted. I'm also not sure what of the file you want to keep vs. change to adapt to what we have proposed. For example, in the &quot;enter&quot; script for the &quot;look around room&quot;, you have a &quot;get input&quot; call, which I believe is unneeded. And I don't know why you have a script on the door that also does &quot;get input&quot;. The code also seems to have more than what you related before - for example, when executing &quot;go through door&quot;, there is a bunch of logic that I don't understand, so I don't know how to figure out where to put in the scoring code. I *think* a bunch of that code can go away, but I don't know exactly what you're trying to accomplish with it.\n\nSo how would you like me to proceed? If you want me to integrate with your latest code, then attach it here again. Otherwise, the basic points to what I posted are:\n1) Code to reset the state and room score on entry to the room\n2) Code to apply the room score to the overall score when the player leaves the room\n3) Code to set the room score to -1 if the player ever missteps.\n4) *Per-room* commands.\n\nThe key thing to 4, which you might want to really consider to simplify your logic, is that you can have commands that are room-specific. Just place them in the desired room. Instead of having a global &quot;look around&quot; command which then has to check which room the player is in, you just have a &quot;look around&quot; command in each room, which handles the input for that room.",
      "EditableFormat": "bbcode",
      "HTML": "Yep. Actually, reviewing the code, I realized that I totally and needlessly confused myself earlier. So please ignore anything (before this) that I've written today...<br/><br/>I think at this point I'm supposed to be telling you how to integrate my code with yours, but I'm not sure what yours is at the moment. I have the initial file you posted. I'm also not sure what of the file you want to keep vs. change to adapt to what we have proposed. For example, in the &quot;enter&quot; script for the &quot;look around room&quot;, you have a &quot;get input&quot; call, which I believe is unneeded. And I don't know why you have a script on the door that also does &quot;get input&quot;. The code also seems to have more than what you related before - for example, when executing &quot;go through door&quot;, there is a bunch of logic that I don't understand, so I don't know how to figure out where to put in the scoring code. I *think* a bunch of that code can go away, but I don't know exactly what you're trying to accomplish with it.<br/><br/>So how would you like me to proceed? If you want me to integrate with your latest code, then attach it here again. Otherwise, the basic points to what I posted are:<br/>1) Code to reset the state and room score on entry to the room<br/>2) Code to apply the room score to the overall score when the player leaves the room<br/>3) Code to set the room score to -1 if the player ever missteps.<br/>4) *Per-room* commands.<br/><br/>The key thing to 4, which you might want to really consider to simplify your logic, is that you can have commands that are room-specific. Just place them in the desired room. Instead of having a global &quot;look around&quot; command which then has to check which room the player is in, you just have a &quot;look around&quot; command in each room, which handles the input for that room.",
      "PostDate": "2014-04-20T12:26:14+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28534",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Yeah, so the get input scripts you mentioned were solutions that I came up with to problems that I don't know how to solve otherwise. So the input call at the enter script of the room was my solution of disabling a timer whenever the player did something within the game, so not just typing in something random like plkjhugfgh, but typing in something that means to the game. i don't know if there's a better solution, but that's the one I came up with.\nthe other I really have no idea of how it got there, just saw it the first time when i switched to code view. most of the time i work in editor mode, only occasionaly working in code view and in editor mode I couldn't find anything, just after switching to code view. Is that strange?\n\nI would totally change the complete code, but I want the ideas to be maintained.\n\nOk, so I'm gonna try it do it by myself 'cause I think this is gonna be really valuable coding lessons and I kinda feel bad for letting you write the code just because I can't do it myself and eventually even dumping them just because I couldn't communicate my ideas clearly, but I really would need you to guide me through it.\n\nSo [code:1zx7s2w2]1) Code to reset the state and room score on entry to the room[/code:1zx7s2w2]\n\nSo should I create state and score variables for every room to do that? Or is it done once I did it with [b:1zx7s2w2]EDIT[/b:1zx7s2w2]every [b:1zx7s2w2]EDIT END[/b:1zx7s2w2]room? (I myself believe not, but I wouldn't be surprised if that was the case) Or are they already in the default room? Is it necessary to use &quot;this.score&quot; and &quot;this.state&quot; or is that just a name and I could rename it whatever I feel like? Which is crucial I guess for point 2, as well.\n\n[quote:1zx7s2w2]2) Code to apply the room score to the overall score when the player leaves the room[/quote:1zx7s2w2]\n\nSo I got that part, but what confuses me though, is that you used game. state instead of room. state that one time. \n\n[code:1zx7s2w2]if (room&#46;state = 0) {\n            // Ok so far&#46; Go to next state&#46;\n            game&#46;state = 1\n         } else {\n           // Fail!\n           room&#46;score = -1\n           // To prevent a good message on the look/look case&#46;\n           room&#46;state = -1[/code:1zx7s2w2]\n\nWas that intended or a mistake? Cause I thought that it was all about the room.state.\nAlso this part\n\n[code:1zx7s2w2]&lt;onexit type=&quot;script&quot;&gt;\n      IncreaseScore(this&#46;score)\n  &lt;/onexit&gt;[/code:1zx7s2w2]\n\nis problematic, if I understood it correctly, because it will only increase the score by 1 if I wouldn't add any commands to the already existing ones. But I intented to do. I know, I didn't make that clear in our discussion, sorry, but I want a tracking system that could be used for as many commands as you like. Is that too much to ask? I really couldn't tell.\n\nAnd finally [quote:1zx7s2w2]4) *Per-room* commands[/quote:1zx7s2w2]\n\ncan that be done in editor mode? cause I couldn't figure it out yet and for now I really would want to stay with the editor mode at least until I have some reasonable coding skills.",
      "EditableFormat": "bbcode",
      "HTML": "Yeah, so the get input scripts you mentioned were solutions that I came up with to problems that I don't know how to solve otherwise. So the input call at the enter script of the room was my solution of disabling a timer whenever the player did something within the game, so not just typing in something random like plkjhugfgh, but typing in something that means to the game. i don't know if there's a better solution, but that's the one I came up with.<br/>the other I really have no idea of how it got there, just saw it the first time when i switched to code view. most of the time i work in editor mode, only occasionaly working in code view and in editor mode I couldn't find anything, just after switching to code view. Is that strange?<br/><br/>I would totally change the complete code, but I want the ideas to be maintained.<br/><br/>Ok, so I'm gonna try it do it by myself 'cause I think this is gonna be really valuable coding lessons and I kinda feel bad for letting you write the code just because I can't do it myself and eventually even dumping them just because I couldn't communicate my ideas clearly, but I really would need you to guide me through it.<br/><br/>So <pre><code>1) Code to reset the state and room score on entry to the room</code></pre><br/><br/>So should I create state and score variables for every room to do that? Or is it done once I did it with <span style=\"font-weight:bold;\">EDIT</span>every <span style=\"font-weight:bold;\">EDIT END</span>room? (I myself believe not, but I wouldn't be surprised if that was the case) Or are they already in the default room? Is it necessary to use &quot;this.score&quot; and &quot;this.state&quot; or is that just a name and I could rename it whatever I feel like? Which is crucial I guess for point 2, as well.<br/><br/><blockquote><p>2) Code to apply the room score to the overall score when the player leaves the room</p></blockquote><br/><br/>So I got that part, but what confuses me though, is that you used game. state instead of room. state that one time. <br/><br/><pre><code>if (room&#46;state = 0) {<br/>            // Ok so far&#46; Go to next state&#46;<br/>            game&#46;state = 1<br/>         } else {<br/>           // Fail!<br/>           room&#46;score = -1<br/>           // To prevent a good message on the look/look case&#46;<br/>           room&#46;state = -1</code></pre><br/><br/>Was that intended or a mistake? Cause I thought that it was all about the room.state.<br/>Also this part<br/><br/><pre><code>&lt;onexit type=&quot;script&quot;&gt;<br/>      IncreaseScore(this&#46;score)<br/>  &lt;/onexit&gt;</code></pre><br/><br/>is problematic, if I understood it correctly, because it will only increase the score by 1 if I wouldn't add any commands to the already existing ones. But I intented to do. I know, I didn't make that clear in our discussion, sorry, but I want a tracking system that could be used for as many commands as you like. Is that too much to ask? I really couldn't tell.<br/><br/>And finally <blockquote><p>4) *Per-room* commands</p></blockquote><br/><br/>can that be done in editor mode? cause I couldn't figure it out yet and for now I really would want to stay with the editor mode at least until I have some reasonable coding skills.",
      "PostDate": "2014-04-20T14:00:00+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28535",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "[quote:2x6q2jhd]So should I create state and score variables for every room to do that? Or is it done once I did it with EDITevery EDIT ENDroom? (I myself believe not, but I wouldn't be surprised if that was the case) Or are they already in the default room? Is it necessary to use &quot;this.score&quot; and &quot;this.state&quot; or is that just a name and I could rename it whatever I feel like?[/quote:2x6q2jhd]\n\nAttributes get created when you assign to them, so you don't need to pre-create them in the rooms. They will come into existence when you first assign the 0 to them. And you don't have to put them in the room - you could just as easily put them in the game (just use game.state instead of this.state). They could even be on the player object if you like. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> It's up to your design, really. They just need to be attached to some object so they persist.\n\nYou're right: the use of game.state was a bug. I thought I had quickly corrected it in the text, but perhaps I missed another.\n\n[quote:2x6q2jhd]is problematic, if I understood it correctly, because it will only increase the score by 1 if I wouldn't add any commands to the already existing ones.[/quote:2x6q2jhd]\n\nI'm not sure what you mean there, to be honest, so I'll try to answer what I think you might be asking. The way the code is set up, it assumes the player will make all the right moves, and so sets the room score to 1 initially. Then if they stray from the path, it sets -1. You could do it the other way as well, if you wish (assume they go wrong by init'ing to -1 and then only set it to 1 if they succeed). You should be able to add all the commands you like. You would just need &quot;state&quot; to be the right value at each step of the sequence. If it is, just increment it (or set the next value); if it's not, the room score becomes -1, and maybe set state to some value like -1, so that things don't accidentally trigger. (Also, I'm not sure if it's confusing, but IncreaseScore just means &quot;add the passed value to score&quot;. So if you pass -1, it will add -1 to the score or actually decrement the score.)\n\n[quote:2x6q2jhd]can that be done in editor mode? [/quote:2x6q2jhd]\nActually, I just looked, and your GoThroughDoorCommand and LookAroundCommand are already in &quot;look around room&quot;, which means they wouldn't have been active in the &quot;pull room&quot; anyway. (You can tell because they show up as children of the room.) To add a room command, just right-click on the desired room and choose Add Command. Or if the command already exists elsewhere, you can simply drag it into the room you wish, as you can with any other object.\n\nI'm glad to assist you with your coding, so let me know how it's going or if you hit any snags. (Oh, and Happy Easter, if you're so inclined!)",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>So should I create state and score variables for every room to do that? Or is it done once I did it with EDITevery EDIT ENDroom? (I myself believe not, but I wouldn't be surprised if that was the case) Or are they already in the default room? Is it necessary to use &quot;this.score&quot; and &quot;this.state&quot; or is that just a name and I could rename it whatever I feel like?</p></blockquote><br/><br/>Attributes get created when you assign to them, so you don't need to pre-create them in the rooms. They will come into existence when you first assign the 0 to them. And you don't have to put them in the room - you could just as easily put them in the game (just use game.state instead of this.state). They could even be on the player object if you like. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> It's up to your design, really. They just need to be attached to some object so they persist.<br/><br/>You're right: the use of game.state was a bug. I thought I had quickly corrected it in the text, but perhaps I missed another.<br/><br/><blockquote><p>is problematic, if I understood it correctly, because it will only increase the score by 1 if I wouldn't add any commands to the already existing ones.</p></blockquote><br/><br/>I'm not sure what you mean there, to be honest, so I'll try to answer what I think you might be asking. The way the code is set up, it assumes the player will make all the right moves, and so sets the room score to 1 initially. Then if they stray from the path, it sets -1. You could do it the other way as well, if you wish (assume they go wrong by init'ing to -1 and then only set it to 1 if they succeed). You should be able to add all the commands you like. You would just need &quot;state&quot; to be the right value at each step of the sequence. If it is, just increment it (or set the next value); if it's not, the room score becomes -1, and maybe set state to some value like -1, so that things don't accidentally trigger. (Also, I'm not sure if it's confusing, but IncreaseScore just means &quot;add the passed value to score&quot;. So if you pass -1, it will add -1 to the score or actually decrement the score.)<br/><br/><blockquote><p>can that be done in editor mode? </p></blockquote><br/>Actually, I just looked, and your GoThroughDoorCommand and LookAroundCommand are already in &quot;look around room&quot;, which means they wouldn't have been active in the &quot;pull room&quot; anyway. (You can tell because they show up as children of the room.) To add a room command, just right-click on the desired room and choose Add Command. Or if the command already exists elsewhere, you can simply drag it into the room you wish, as you can with any other object.<br/><br/>I'm glad to assist you with your coding, so let me know how it's going or if you hit any snags. (Oh, and Happy Easter, if you're so inclined!)",
      "PostDate": "2014-04-20T16:27:02+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28536",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Alright, thanks. Let's see how it will turn out. Will definitely let you know.\nAnd Happy Easter to you as well, thanks!",
      "EditableFormat": "bbcode",
      "HTML": "Alright, thanks. Let's see how it will turn out. Will definitely let you know.<br/>And Happy Easter to you as well, thanks!",
      "PostDate": "2014-04-20T17:11:15+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28544",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Ok, it works. I had to create room attributes though and settle on one name, but it works exactly how I want it to. Thanks a lot. I have what I want now AND I learned useful things bout coding. Pretty awesome, thanks. \nI even figured out how to create different endings based on the score.\nSo, thanks a lot, man. For all the help, the patience and yeah, just thanks.",
      "EditableFormat": "bbcode",
      "HTML": "Ok, it works. I had to create room attributes though and settle on one name, but it works exactly how I want it to. Thanks a lot. I have what I want now AND I learned useful things bout coding. Pretty awesome, thanks. <br/>I even figured out how to create different endings based on the score.<br/>So, thanks a lot, man. For all the help, the patience and yeah, just thanks.",
      "PostDate": "2014-04-21T14:58:16+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28546",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "No problem. Glad I could help! And congrats on your growing scripting skills. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Given what I saw of what you had done, I figured you'd make short work of it.",
      "EditableFormat": "bbcode",
      "HTML": "No problem. Glad I could help! And congrats on your growing scripting skills. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Given what I saw of what you had done, I figured you'd make short work of it.",
      "PostDate": "2014-04-21T18:58:55+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28710",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "ok, i'm back again.\nfor some reason i can't find, i can't make your score system work again.\ncould you maybe look over the attached file?\nif you enter &quot;skip&quot; when you play the game, it will skip to the second room and you have 1 point. now, if you enter &quot;look around&quot; and &quot;go through door&quot; you should get another point and if not you should lose a point. But the score doesn't change. don't know why.",
      "EditableFormat": "bbcode",
      "HTML": "ok, i'm back again.<br/>for some reason i can't find, i can't make your score system work again.<br/>could you maybe look over the attached file?<br/>if you enter &quot;skip&quot; when you play the game, it will skip to the second room and you have 1 point. now, if you enter &quot;look around&quot; and &quot;go through door&quot; you should get another point and if not you should lose a point. But the score doesn't change. don't know why.<div><a href=\"/forumattachments/900/Game design game.7z\">Game design game.7z</a></div>",
      "PostDate": "2014-05-09T12:18:49+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28711",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I believe the problem is here:\n\n[code:3jv5etnk]      if (ListContains(ScopeVisible(), testlookaroundroomdoorobject)) {\n        MoveObject (player, pull room)\n      }\n      else {\n        if (RandomChance(1)) {\n          MoveObject (player, pull room)\n        }\n        else {\n          msg (&quot;You bumped into something&#46;&quot;)\n        }\n      }\n      if (testlookaroundroom&#46;state = 1) {\n        testlookaroundroom&#46;score = 1\n      }\n      else {\n        testlookaroundroom&#46;score = -1\n      }\n[/code:3jv5etnk]\nYou add the score on when you exit the room. However, you move the player out of the room (and execute OnExit) before you set the score to 1. So it adds 0. I think if you move the score adjust logic above the rest, it will work.",
      "EditableFormat": "bbcode",
      "HTML": "I believe the problem is here:<br/><br/><pre><code>      if (ListContains(ScopeVisible(), testlookaroundroomdoorobject)) {<br/>        MoveObject (player, pull room)<br/>      }<br/>      else {<br/>        if (RandomChance(1)) {<br/>          MoveObject (player, pull room)<br/>        }<br/>        else {<br/>          msg (&quot;You bumped into something&#46;&quot;)<br/>        }<br/>      }<br/>      if (testlookaroundroom&#46;state = 1) {<br/>        testlookaroundroom&#46;score = 1<br/>      }<br/>      else {<br/>        testlookaroundroom&#46;score = -1<br/>      }<br/></code></pre><br/>You add the score on when you exit the room. However, you move the player out of the room (and execute OnExit) before you set the score to 1. So it adds 0. I think if you move the score adjust logic above the rest, it will work.",
      "PostDate": "2014-05-09T12:43:09+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28713",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "ok, yes, that makes sense. it works now, thank you. it has downsides to work differently than the standard layout i guess.\nbut i wonder, why does it work with the first room? i thought i did the same thing with the second one?",
      "EditableFormat": "bbcode",
      "HTML": "ok, yes, that makes sense. it works now, thank you. it has downsides to work differently than the standard layout i guess.<br/>but i wonder, why does it work with the first room? i thought i did the same thing with the second one?",
      "PostDate": "2014-05-09T17:16:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28714",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I think because you default the room score to 1 in the first room but 0 in the other. That might be a simpler way to go - set the score to 1 initially and then only set it to -1 if they have a misstep (but still before they leave the room!).",
      "EditableFormat": "bbcode",
      "HTML": "I think because you default the room score to 1 in the first room but 0 in the other. That might be a simpler way to go - set the score to 1 initially and then only set it to -1 if they have a misstep (but still before they leave the room!).",
      "PostDate": "2014-05-09T18:28:25+01:00",
      "LastEditDate": null
    }
  ]
}