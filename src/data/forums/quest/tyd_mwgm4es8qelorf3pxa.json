{
  "Topic": {
    "TopicId": "tyd_mwgm4es8qelorf3pxa",
    "ForumId": "10",
    "Title": "I have some very wierd things going on in my codebase. Unexplainable things. WTF moments!!!",
    "LastUpdated": "2017-09-17T17:32:51.0239904Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "ec2fe3bf-8824-4cbb-b280-9f7dd750d8d2",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi, \r\n\r\nI need some help understanding how some of the things that I've coded fail for unexplainable reasons; ie its not a syntax error, or a logic error, or a runtime error; it just fails. I have a few examples:\r\n\r\n1. I had wanted to add Shield Spikes and Armor Spikes into my RPG/Text Adventure Hybrid. All the necessary code was there to work properly. When I went to test it, the game would properly apply Armor Spikes, but when I tried to do the same with Shield Spikes, it failed to work. The code used to apply armor spikes, is the exact same as the code to apply shield spikes; I checked in both the UI and code view and they were identical. I deleted a variable in the Shield Spike code. I then re-added the exact same variable (checked in UI and code view and it was identical) and then suddenly the code works. If it was a syntax error or logic error or runtime error on my part I would understand that, but when I tried to apply the shield spike initially, no error report occurred and none of the code activated. Why?\r\n\r\n2. I have code that does a variety of conditional checks when I perform melee attacks. If a melee attack doesn't do sufficient damage because enemy armor is too high, it will produce the message; \"you hit the target but failed to penetrate their armor.\" And that is that. However, when testing the game yesterday, I had performed a few shield bashes on a foe. The first 3 bashes properly produced this message, but the 4th, and the 5th and 6th, instead stated, \"You hit the target and did -11 damage to the target\" (this as I'm sure you are aware heals the target instead of damaging them). The code is setup however to prevent this (I checked thoroughly for logic errors and there are none) and nothing should affect the enemy's health variable when you fail to penetrate their armor and as -11 is NOT > their protection value, it should have continued to give \"failed to penetrate armor.\" Why?\r\n\r\n3. I had a friend playtest my game and he ran into a situation that I deem impossible, but yet it happened. In my game, you start out in a room to create your character. Then you use a command \"begin\" that will transfer the player out of the room and into the actual game-playing area. Other than this command, which is a one-way command, you cannot in the code EVER get back to this room. All of the scripts for character generation are built directly into the room's description and aren't found anywhere else. Some how, while going through the dungeon proper, he managed to get teleported into the character generation room again OR the script from the character generation room magically transferred into the dungeon room, and he was prompted for his name and race again. And as race determines starting stats, he got a large boost in health and mana from choosing his race again. I don't know how he could have managed it to get back into the start room or how the start room script which is coupled with the start room's description managed to get into the dungeon room. I'm completely baffled at what is going on right now. In all my 30+ hours of playtesting my own game I've never encountered this. What the hell is going on?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi,</p>\n<p>I need some help understanding how some of the things that I've coded fail for unexplainable reasons; ie its not a syntax error, or a logic error, or a runtime error; it just fails. I have a few examples:</p>\n<ol>\n<li>\n<p>I had wanted to add Shield Spikes and Armor Spikes into my RPG/Text Adventure Hybrid. All the necessary code was there to work properly. When I went to test it, the game would properly apply Armor Spikes, but when I tried to do the same with Shield Spikes, it failed to work. The code used to apply armor spikes, is the exact same as the code to apply shield spikes; I checked in both the UI and code view and they were identical. I deleted a variable in the Shield Spike code. I then re-added the exact same variable (checked in UI and code view and it was identical) and then suddenly the code works. If it was a syntax error or logic error or runtime error on my part I would understand that, but when I tried to apply the shield spike initially, no error report occurred and none of the code activated. Why?</p>\n</li>\n<li>\n<p>I have code that does a variety of conditional checks when I perform melee attacks. If a melee attack doesn't do sufficient damage because enemy armor is too high, it will produce the message; \"you hit the target but failed to penetrate their armor.\" And that is that. However, when testing the game yesterday, I had performed a few shield bashes on a foe. The first 3 bashes properly produced this message, but the 4th, and the 5th and 6th, instead stated, \"You hit the target and did -11 damage to the target\" (this as I'm sure you are aware heals the target instead of damaging them). The code is setup however to prevent this (I checked thoroughly for logic errors and there are none) and nothing should affect the enemy's health variable when you fail to penetrate their armor and as -11 is NOT &gt; their protection value, it should have continued to give \"failed to penetrate armor.\" Why?</p>\n</li>\n<li>\n<p>I had a friend playtest my game and he ran into a situation that I deem impossible, but yet it happened. In my game, you start out in a room to create your character. Then you use a command \"begin\" that will transfer the player out of the room and into the actual game-playing area. Other than this command, which is a one-way command, you cannot in the code EVER get back to this room. All of the scripts for character generation are built directly into the room's description and aren't found anywhere else. Some how, while going through the dungeon proper, he managed to get teleported into the character generation room again OR the script from the character generation room magically transferred into the dungeon room, and he was prompted for his name and race again. And as race determines starting stats, he got a large boost in health and mana from choosing his race again. I don't know how he could have managed it to get back into the start room or how the start room script which is coupled with the start room's description managed to get into the dungeon room. I'm completely baffled at what is going on right now. In all my 30+ hours of playtesting my own game I've never encountered this. What the hell is going on?</p>\n</li>\n</ol>\n\n",
      "PostDate": "2017-09-17T17:32:51.0239904Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4437fd14-2b48-4cba-ae1b-4ad80f02f7b2",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "We would need to see your game code to be able to offer any useful advice. Could you pastethe relevant bits into a post (click on Code View, and paste that in).",
      "EditableFormat": "markdown",
      "HTML": "<p>We would need to see your game code to be able to offer any useful advice. Could you pastethe relevant bits into a post (click on Code View, and paste that in).</p>\n\n",
      "PostDate": "2017-09-17T21:00:55.9839019Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "72e14294-d0f1-4c7a-b7b1-a43ccdb85712",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "INB4 comments about nesting: Up to this point, I've had no issues with it and as I can personally read my own code and follow the logic around I've not bothered to refactor it yet. As it had done it job flawlessly before, and was a much more elegant and efficient solution than I had with previous attempts, that's why I have so many nested If/Elses. And as I've had more pressing work with fixing bugs and adding in content for my playtesters, its not been on my priority list to refactor it.\r\n\r\nHere is the shield bash code:\r\n\r\n```if (not player.EquippedShield = \"N/A\") {\r\n  if ((player.TotalAccuracy + getrandomint(1,10)) > (object.Dodge + getrandomint(1,10))) {\r\n    if (((player.ShieldProtection + player.ShieldEnchantment + player.AttributeStrength + player.ShieldSpikeDamage) * Spellbook.ForceShieldMultiplier) > object.Protection) {\r\n      object.CurrentHP = object.CurrentHP - (((player.ShieldProtection + player.ShieldEnchantment + player.AttributeStrength) * Spellbook.ForceShieldMultiplier) - object.Protection)\r\n      msg (\"You bash the \" + object.alias + \"  with your \" + player.SpikedString + \" \" + player.EquippedShield + \" and inflict \" + ((player.ShieldProtection + player.ShieldEnchantment + player.AttributeStrength - object.Protection) * Spellbook.ForceShieldMultiplier) + \" damage, reducing the \" + object.alias + \"'s health to \" + object.CurrentHP + \".\")\r\n      player.BashPenalty = (player.Level * 2 + player.ShieldEnchantment) * (Spellbook.ForceShieldMultiplier)\r\n      player.StrengthTraining = player.StrengthTraining + 50 + (player.DepthLevel * 10)\r\n      if (player.BracersLeech = true) {\r\n        object.CurrentHP = object.CurrentHP - (player.Level)\r\n        player.CurrentHP = player.CurrentHP + (player.Level)\r\n        if (player.CurrentHP > player.MaximumHP) {\r\n          player.CurrentHP = player.MaximumHP\r\n        }\r\n        msg (\"You leech life from the \" + object.alias + \" and your health is restored and set to = \" + player.CurrentHP + \".\")\r\n      }\r\n    }\r\n    else {\r\n      msg (\"You hit the \" + object.alias + \" with your \" + player.SpikedString + \" \" + player.EquippedShield + \", but you fail to penetrate their armor.\")\r\n      SetObjectFlagOn (player, \"Bash\")\r\n      player.StrengthTraining = player.StrengthTraining + 200 + (player.DepthLevel * 10)\r\n      if (player.BracersLeech = true) {\r\n        object.CurrentHP = object.CurrentHP - (player.Level)\r\n        player.CurrentHP = player.CurrentHP + (player.Level)\r\n        if (player.CurrentHP > player.MaximumHP) {\r\n          player.CurrentHP = player.MaximumHP\r\n        }\r\n        msg (\"You leech life from the \" + object.alias + \" and your health is restored and set to = \" + player.CurrentHP + \".\")\r\n      }\r\n    }\r\n    player.PerceptionTraining = player.PerceptionTraining + 50 + (player.DepthLevel * 10)\r\n  }\r\n  else {\r\n    msg (\"You swing your \" + player.SpikedString + \" \" + player.EquippedShield + \" and miss the \" + object.alias + \".\")\r\n    player.PerceptionTraining = player.PerceptionTraining + 200 + (player.DepthLevel * 10)\r\n  }\r\n}\r\nelse {\r\n  msg (\"You don't have a shield equipped, and thus you can't do a bash!\")\r\n  SetObjectFlagOn (player, \"ActionCancelled\")\r\n}```\r\n\r\nHere is the shield spike code that will apply the spikes:\r\n\r\n```if (ListContains(ScopeVisible(), ShieldTower)) {\r\n  if (ShieldTower.SpikesApplied = true) {\r\n    msg (\"Your tower shield already has armor spikes!\")\r\n  }\r\n  else {\r\n    if (player.SoulShards > 999) {\r\n      msg (\"<br/>You purchase shield spikes for your tower shield.\")\r\n      player.SoulShards = player.SoulShards - 1000\r\n      ShieldTower.SpikesApplied = true\r\n    }\r\n    else {\r\n      msg (\"You don't have enough soul shards. You only have \" + player.SoulShards + \" soul shards. You need \" + (1000) + \" soul shards!\")\r\n    }\r\n  }\r\n}\r\nelse {\r\n  msg (\"You aren't carrying a Tower Shield.\")```\r\n\r\nAnd the second part of it (as this just sets the variable; which ironically is the exact variable that was giving me trouble) that applies the spike damage effects:\r\n\r\n```player.ShieldProtection = ShieldTower.Protection\r\nplayer.ShieldEnchantment = ShieldTower.Enchantment\r\nplayer.ShieldEnhancement = ShieldTower.Enhancement\r\nif (ShieldTower.SpikesApplied = true) {\r\n  player.ShieldSpikeDamage = (player.ShieldSpikeDamage * 0) + ShieldTower.Protection + ShieldTower.Enchantment + ShieldTower.Enhancement\r\n  player.SpikedString = \"Spiked\"\r\n}\r\nelse {\r\n  player.ShieldSpikeDamage = (player.ShieldSpikeDamage * 0)\r\n  player.SpikedString = \"\"\r\n}```\r\n\r\nIf it is relevant; the code to apply the spike is within a \"command\" while the code to apply the damage is within a \"turnscript\".\r\n\r\nFinally the last issue; here is the code that is used for character generation:\r\n\r\n```msg (\"<br/>What is your name? Please type it in and hit enter.<br/>\")\r\nget input {\r\n  player.PlayerName = result\r\n  msg (\"Your name is = <b>\" + result + \"</b>.\")\r\n  msg (\"<br/><b>Whenever the game requests input, type in a choice, verbatim, within the ( ).</b> <br/>You can play your character as you like, and you can define your own personal playstyle. You only choose your race at the start.<br/><br/><u>Dwarves</u> start with 90 HP and 10 MP. They start with a Longsword, Tower Shield and Platemail. They don't know any spells, initially. They make great pure-combat characters.<br/><br/><u>Quicklings</u> start with 70 HP and 30 MP. They start with a Shortsword, Buckler and Leather. They know Arcane Zap and Minor Healing spells. They make great pure-assasin characters.<br/><br/><u>Humans</u> start with 40 HP and 60 MP. They start with a Staff and Robes. They know all spells in the first tier. They make great pure-spellcaster characters.<br/>\")\r\n  msg (\"<b>Races</b> = Please enter one of the following options as your chosen race.<br/>Dwarves (<b>dwarf</b>) [high strength and vitality], Quicklings (<b>quick</b>) [high agility and perception], or Humans (<b>human</b>) [high intellect and willpower]<br/>\")\r\n  get input {\r\n    switch (result) {\r\n      case (\"dwarf\") {\r\n        msg (\"You choose to be a <b>Dwarf</b>! You start out with a longsword, tower shield, platemail, and no known spells.\")\r\n        player.Race = \"Dwarf\"\r\n        player.AttributeStrength = 10\r\n        player.AttributeAgility = 5\r\n        player.AttributeVitality = 10\r\n        player.AttributeIntellect = 5\r\n        player.AttributeWillpower = 5\r\n        player.AttributeLuck = 5\r\n        player.AttributePerception = 5\r\n        player.MaximumHP = player.MaximumHP + (89)\r\n        player.MaximumMP = player.MaximumMP + (9)\r\n        player.CurrentHP = player.MaximumHP\r\n        player.CurrentMP = player.MaximumMP\r\n        AddToInventory (WeaponLongsword)\r\n        AddToInventory (ShieldTower)\r\n        AddToInventory (ArmorPlatemail)\r\n        player.EquippedWeapon = \"Longsword\"\r\n        player.EquippedShield = \"Tower Shield\"\r\n        player.EquippedArmor = \"Platemail\"\r\n      }\r\n      case (\"quick\") {\r\n        msg (\"You choose to be a <b>Quickling</b>! You start out with a shortsword, buckler, leather armor, and you know the Minor Healing and Arcane Zap spells.\")\r\n        player.Race = \"Quickling\"\r\n        player.AttributeStrength = 5\r\n        player.AttributeAgility = 10\r\n        player.AttributeVitality = 5\r\n        player.AttributeIntellect = 5\r\n        player.AttributeWillpower = 5\r\n        player.AttributeLuck = 5\r\n        player.AttributePerception = 10\r\n        player.MaximumHP = player.MaximumHP + (69)\r\n        player.MaximumMP = player.MaximumMP + (29)\r\n        player.CurrentHP = player.MaximumHP\r\n        player.CurrentMP = player.MaximumMP\r\n        AddToInventory (WeaponShortsword)\r\n        AddToInventory (ArmorLeather)\r\n        AddToInventory (ShieldBuckler)\r\n        player.EquippedWeapon = \"Shortsword\"\r\n        player.EquippedArmor = \"Leather\"\r\n        player.EquippedShield = \"Buckler\"\r\n        Spellbook.KnowMinorHealing = true\r\n        Spellbook.KnowArcaneZap = true\r\n      }\r\n      case (\"human\") {\r\n        msg (\"You choose to be an <b>Human</b>! You start out with a staff and robes, and you know all first tier spells!\")\r\n        player.Race = \"Human\"\r\n        player.AttributeStrength = 5\r\n        player.AttributeAgility = 5\r\n        player.AttributeVitality = 5\r\n        player.AttributeIntellect = 10\r\n        player.AttributeWillpower = 10\r\n        player.AttributeLuck = 5\r\n        player.AttributePerception = 5\r\n        player.MaximumHP = player.MaximumHP + (39)\r\n        player.MaximumMP = player.MaximumMP + (59)\r\n        player.CurrentHP = player.MaximumHP\r\n        player.CurrentMP = player.MaximumMP\r\n        AddToInventory (ArmorRobes)\r\n        AddToInventory (WeaponStaff)\r\n        MoveObject (WeaponLongsword, XXWeapons)\r\n        player.EquippedWeapon = \"Staff\"\r\n        player.EquippedArmor = \"Robes\"\r\n        Spellbook.KnowMinorHealing = true\r\n        Spellbook.KnowArcaneZap = true\r\n        Spellbook.KnowFirebolt = true\r\n        Spellbook.KnowMinorAid = true\r\n        Spellbook.KnowAnalysis = true\r\n      }\r\n      default {\r\n        msg (\"Incorrect input. However, all is not lost. When you type the \\\"begin\\\" command, you will be prompted again for race input and until you enter a correct input, you cannot start the game. \")\r\n        player.Race = \"Unknown\"\r\n      }\r\n    }\r\n    msg (\"<br/>Are you a new player? (<b>yes</b>) or (<b>no</b>)<br/>\")\r\n    get input {\r\n      switch (result) {\r\n        case (\"yes\") {\r\n          msg (\"<u>As a new player, these are the commands accepted by the text parser, with conditions for usage of each command.  The commands are listed in the ( ) :</u><br/>\")\r\n          msg (\"(<b>help</b>) = Whenever you are in need of help, just type = help. Will provide you with a variety of useful information. Additionally, it will also tell you how to get back to this command list!<br/>\")\r\n          msg (\"(<b>explore</b>) = When you are in the actual \\\"dungeon\\\", this will generate a new room on the floor you are on. You can only explore when the room is empty of hostiles. If you explore the surface, you will discover a Stairwell going Down, which will allow you to enter the sewers.<br/>\")\r\n          msg (\"(<b>ascend</b>) = When you aren't in combat and are at a Stairwell going Up, you can go up a floor. You find stairwells randomly.<br/>\")\r\n          msg (\"(<b>descend</b>) = When you aren't in combat and are at a Stairwell going Down, you can go down a floor. You find stairwells randomly. Additionally, if you are on the surface/in the Capital City, you can descend into the sewers, as there is always a Stairwell going Down on the surface/in the Capital City.<br/>\")\r\n          msg (\"(<b>look at spellbook</b>) = This allows you to view all your known spells, their effects, and if they can be cast in combat or not. You can look at your spellbook at any time.<br/>\")\r\n          msg (\"(<b>look at satchel</b>) = This allows you to view how many healing/mana potions are carried and how many enchanting orbs or enhancement kits you have on hand. You can look at your satchel at any time.<br/>\")\r\n          msg (\"(<b>unequip \\\"item\\\"</b>) or (<b>equip \\\"item\\\"</b>) = These commands allow you to, unequip or equip items in your inventory. Replace \\\"item\\\" with the name of an item, lower-case. You cannot equip items in combat, but you can unequip them in combat.<br/>\")\r\n          msg (\"(<b>enchant \\\"item\\\"</b>) or (<b>enhance \\\"item\\\"</b>) = These commands allow you to enchant an item with enchanting orbs or enhance an item with enhancement kits. Again, replace \\\"item\\\" with the name of an item, lower-case. Enchanting and Enhancing cannot be performed in combat.<br/>\")\r\n          msg (\"(<b>drink healing potion</b>) or (<b>drink mana potion</b>) = This asks you how many potions you wish to drink and you drink that many concurrently. The game will tell you what your maximum HP or MP is before you drink potions. Can be performed at any time.<br/>\")\r\n          msg (\"(<b>buy</b>) or (<b>sell</b>) or (<b>salvage \\\"item\\\"</b>) = These are commands you can perform at the surface (the Capital City) or at a shrine found randomly in the dungeon, when not in combat. You trade with the Celestial and entering in one of the commands should be self-explanatory, depending on the command chosen. Buy allows you to spend soul shards for stuff you want. Sell allows you to sell items in your satchel for soul shards. Salvage allows you to convert an old, unused item into soul shards, but you cannot perform salvaging on equipped items.<br/>\")\r\n          msg (\"(<b>cast \\\"spell\\\"</b>) = This command allows you to cast non-combat spells and combat versions of non-combat spells; ie Aid is the combat version of Healing. Combat spells will result in the enemy retaliating as usual. Replace \\\"spell\\\" with the name of a spell you want to case, all lower-case. If you lack the mana to cast a spell, the action will be cancelled and you won't get attacked.<br/>\")\r\n          msg (\"(<b>attack \\\"target\\\"</b>) = This command allows you to perform mundane attacks or sneak attacks. For most actions, you can cancel it and thus avoid getting attacked. However, if you follow through on an attack, you will get retaliated against, unless you manage to kill them first. Replace \\\"target\\\" with part of the name of target; the game engine is fairly flexible and thus you can choose a shortened target name and it will find it acceptable; if it doesn't, nothing will happen and you won't get attacked.<br/>\")\r\n          msg (\"(<b>flee from \\\"target\\\"</b>) = This command allows you to flee from a target that you either don't want to fight or you don't think you can beat. If it is the first round, which means you've not tried attacking it yet, then you can flee without it getting a chance to attack you. Otherwise, it gets one opportunity to attack you if you try to flee. Fleeing will generate a new room, much like the command (<b>explore</b>) does. Again, replace \\\"target\\\" with the name of the creature you are fighting.<br/>\")\r\n          msg (\"(<b>setup camp</b>) = This command allows you to regain much needed HP and MP. If you perform the action in the Capital City or at a shrine, you will restore 100% of both HP and MP. If you do it anywhere else, you regain 5 * current floor level for both HP and MP, and you will get attacked by a wandering monster. Thus, it is often best to wait until you can find a shrine, and then sleep there than to try doing it anywhere else. <br/>\")\r\n          msg (\"(<b>investigate \\\"object\\\"</b>) = When you have defeated the monster, often there will be objects in the room, listed under Points of Interest, that can be investigated. Each object has three outcomes: 1) Nothing good/bad with a small chance for loot. 2) Extremely good with lots of loot. 3) A trap of some kind, with decent loot.<br/>\")\r\n          msg (\"(<b>save</b>) = Saves the game, nuff said. <br/>\")\r\n          msg (\"(<b>storytime</b>) = Currently only gives the player the background story to why they are here doing what they are doing. <br/>\")\r\n          msg (\"(<b>cast \\\"spell\\\" at \\\"target\\\"</b>) = Casts a combat spell at an enemy target. Replace \\\"spell\\\" with the name of the spell and \\\"target\\\" with your intended target. Again, the text parser is fairly flexible and will accept a shortened version of the target's name. Ex: if the target is \\\"Primal Chaos Rat\\\", the parser would accept \\\"Primal\\\" just fine by itself. You only get retaliated against if you spend the mana to cast it, otherwise it is cancelled.<br/>\")\r\n          msg (\"(<b>look</b>) = Currently only is useful in the starting area of the game, which is the surface area, or Capital City. In the future, it will be added to to provide additional functions useful to gameplay.<br/>\")\r\n          msg (\"(<b>buy \\\"thing\\\"</b>) = An alternative method to the buy command. If you know precisely what you want to buy with your soul shards, you can use this command to quickly go to the type of purchase you desire. Replace \\\"thing\\\" with the menu option you would have been given if you had used the buy command. So, if you knew you wanted training, you would type = <b>buy training</b>. You also also directly buy consumables, if you know precisely which one you want by typing = <b>buy healing potion</b> or <b>buy mana potion</b> or <b>buy enchanting orb</b> or <b>buy enhancement kit</b> <br/>\")\r\n          msg (\"(<b>sell \\\"thing\\\"</b>) = An alternative method to the sell command. If you know precisely what you want to sell, you can use this command to quickly go to the type of sale you desire. Replace \\\"thing\\\" with the menu option you would have been given if you had used the sell command. So, if you knew you wanted sell healing potions, you would type = <b>sell healing</b><br/>\")\r\n          msg (\"(<b>inspect \\\"orb\\\"</b>) = If you couldn't decide which boss artifact to choose or you entered an incorrect input, this command will allow you to choose an artifact from a chaos orb carried in your inventory. Replace \\\"orb\\\" with the name of the Chaos Orb in your inventory. Additionally, until you make a valid artifact choice, the orb will remain in your inventory; once you've made a choice, it will disappear.<br/>\")\r\n          msg (\"(<b>analyze \\\"target\\\"</b>) = While the spell \\\"Analysis\\\" is active, you can use this command. By replacing \\\"target\\\" with the name of the creature in the room, you will get a detailed analysis of all their statistics, to make informed decisions. Using this command is a free action and will not result in retaliation from the monster.\")\r\n          msg (\"<br/>You can view these commands at any time during the game by typing: (<b>display info</b>) and then type (<b>commands</b>).<br/><br/>If you want to, you can also take a look at the gameplay tips! You can view them by typing: (<b>display info</b>) and then (<b>gameplay tips</b>).<br/><br/>The command (<b>storytime</b>) is used currently to give you the backstory.<br/><br/>The command (<b>help</b>) is used when you need help.<br/><br/><b>Game Tip: Whenever you use a command with \\\"target\\\" in the name, you do not need to use the target's full name. So if you attacked a Giant Crocodile, you could simply type \\\"attack giant\\\".</b><br/><br/>Type (<b>begin</b>) when ready to play the game.\")\r\n        }\r\n        case (\"no\") {\r\n          msg (\"The command (<b>display info</b>) is extremely useful.<br/>The command (<b>save</b>) will save your game.<br/>The command (<b>explore</b>) is used to explore new areas.<br/>The command (<b>storytime</b>) is used currently to give you the backstory.<br/>The command (<b>help</b>) is used when you need help.<br/><br/><b>Game Tip: Whenever you use a command with \\\"target\\\" in the name, you do not need to use the target's full name. So if you attacked a Giant Crocodile, you could simply type \\\"attack giant\\\".</b><br/><br/>Type (<b>begin</b>) when ready.<br/>\")\r\n        }\r\n        default {\r\n          msg (\"The command (<b>display info</b>) is extremely useful.<br/>The command (<b>save</b>) will save your game.<br/>The command (<b>explore</b>) is used to explore new areas.<br/>The command (<b>storytime</b>) is used currently to give you the backstory.<br/>The command (<b>help</b>) is used when you need help.<br/><br/><b>Game Tip: Whenever you use a command with \\\"target\\\" in the name, you do not need to use the target's full name. So if you attacked a Giant Crocodile, you could simply type \\\"attack giant\\\".</b><br/><br/>Type (<b>begin</b>) when ready.<br/>\")\r\n        }\r\n      }\r\n    }\r\n  }\r\n}```\r\n\r\nIf you want to see these in action, V3 is up in the WIP section of the Quest Games here, under the name Cataclysm of Chaos.",
      "EditableFormat": "markdown",
      "HTML": "<p>INB4 comments about nesting: Up to this point, I've had no issues with it and as I can personally read my own code and follow the logic around I've not bothered to refactor it yet. As it had done it job flawlessly before, and was a much more elegant and efficient solution than I had with previous attempts, that's why I have so many nested If/Elses. And as I've had more pressing work with fixing bugs and adding in content for my playtesters, its not been on my priority list to refactor it.</p>\n<p>Here is the shield bash code:</p>\n<pre><code>  if ((player.TotalAccuracy + getrandomint(1,10)) &gt; (object.Dodge + getrandomint(1,10))) {\n    if (((player.ShieldProtection + player.ShieldEnchantment + player.AttributeStrength + player.ShieldSpikeDamage) * Spellbook.ForceShieldMultiplier) &gt; object.Protection) {\n      object.CurrentHP = object.CurrentHP - (((player.ShieldProtection + player.ShieldEnchantment + player.AttributeStrength) * Spellbook.ForceShieldMultiplier) - object.Protection)\n      msg (\"You bash the \" + object.alias + \"  with your \" + player.SpikedString + \" \" + player.EquippedShield + \" and inflict \" + ((player.ShieldProtection + player.ShieldEnchantment + player.AttributeStrength - object.Protection) * Spellbook.ForceShieldMultiplier) + \" damage, reducing the \" + object.alias + \"'s health to \" + object.CurrentHP + \".\")\n      player.BashPenalty = (player.Level * 2 + player.ShieldEnchantment) * (Spellbook.ForceShieldMultiplier)\n      player.StrengthTraining = player.StrengthTraining + 50 + (player.DepthLevel * 10)\n      if (player.BracersLeech = true) {\n        object.CurrentHP = object.CurrentHP - (player.Level)\n        player.CurrentHP = player.CurrentHP + (player.Level)\n        if (player.CurrentHP &gt; player.MaximumHP) {\n          player.CurrentHP = player.MaximumHP\n        }\n        msg (\"You leech life from the \" + object.alias + \" and your health is restored and set to = \" + player.CurrentHP + \".\")\n      }\n    }\n    else {\n      msg (\"You hit the \" + object.alias + \" with your \" + player.SpikedString + \" \" + player.EquippedShield + \", but you fail to penetrate their armor.\")\n      SetObjectFlagOn (player, \"Bash\")\n      player.StrengthTraining = player.StrengthTraining + 200 + (player.DepthLevel * 10)\n      if (player.BracersLeech = true) {\n        object.CurrentHP = object.CurrentHP - (player.Level)\n        player.CurrentHP = player.CurrentHP + (player.Level)\n        if (player.CurrentHP &gt; player.MaximumHP) {\n          player.CurrentHP = player.MaximumHP\n        }\n        msg (\"You leech life from the \" + object.alias + \" and your health is restored and set to = \" + player.CurrentHP + \".\")\n      }\n    }\n    player.PerceptionTraining = player.PerceptionTraining + 50 + (player.DepthLevel * 10)\n  }\n  else {\n    msg (\"You swing your \" + player.SpikedString + \" \" + player.EquippedShield + \" and miss the \" + object.alias + \".\")\n    player.PerceptionTraining = player.PerceptionTraining + 200 + (player.DepthLevel * 10)\n  }\n}\nelse {\n  msg (\"You don't have a shield equipped, and thus you can't do a bash!\")\n  SetObjectFlagOn (player, \"ActionCancelled\")\n}```\n\nHere is the shield spike code that will apply the spikes:\n\n```if (ListContains(ScopeVisible(), ShieldTower)) {\n  if (ShieldTower.SpikesApplied = true) {\n    msg (\"Your tower shield already has armor spikes!\")\n  }\n  else {\n    if (player.SoulShards &gt; 999) {\n      msg (\"&lt;br/&gt;You purchase shield spikes for your tower shield.\")\n      player.SoulShards = player.SoulShards - 1000\n      ShieldTower.SpikesApplied = true\n    }\n    else {\n      msg (\"You don't have enough soul shards. You only have \" + player.SoulShards + \" soul shards. You need \" + (1000) + \" soul shards!\")\n    }\n  }\n}\nelse {\n  msg (\"You aren't carrying a Tower Shield.\")```\n\nAnd the second part of it (as this just sets the variable; which ironically is the exact variable that was giving me trouble) that applies the spike damage effects:\n\n```player.ShieldProtection = ShieldTower.Protection\nplayer.ShieldEnchantment = ShieldTower.Enchantment\nplayer.ShieldEnhancement = ShieldTower.Enhancement\nif (ShieldTower.SpikesApplied = true) {\n  player.ShieldSpikeDamage = (player.ShieldSpikeDamage * 0) + ShieldTower.Protection + ShieldTower.Enchantment + ShieldTower.Enhancement\n  player.SpikedString = \"Spiked\"\n}\nelse {\n  player.ShieldSpikeDamage = (player.ShieldSpikeDamage * 0)\n  player.SpikedString = \"\"\n}```\n\nIf it is relevant; the code to apply the spike is within a \"command\" while the code to apply the damage is within a \"turnscript\".\n\nFinally the last issue; here is the code that is used for character generation:\n\n```msg (\"&lt;br/&gt;What is your name? Please type it in and hit enter.&lt;br/&gt;\")\nget input {\n  player.PlayerName = result\n  msg (\"Your name is = &lt;b&gt;\" + result + \"&lt;/b&gt;.\")\n  msg (\"&lt;br/&gt;&lt;b&gt;Whenever the game requests input, type in a choice, verbatim, within the ( ).&lt;/b&gt; &lt;br/&gt;You can play your character as you like, and you can define your own personal playstyle. You only choose your race at the start.&lt;br/&gt;&lt;br/&gt;&lt;u&gt;Dwarves&lt;/u&gt; start with 90 HP and 10 MP. They start with a Longsword, Tower Shield and Platemail. They don't know any spells, initially. They make great pure-combat characters.&lt;br/&gt;&lt;br/&gt;&lt;u&gt;Quicklings&lt;/u&gt; start with 70 HP and 30 MP. They start with a Shortsword, Buckler and Leather. They know Arcane Zap and Minor Healing spells. They make great pure-assasin characters.&lt;br/&gt;&lt;br/&gt;&lt;u&gt;Humans&lt;/u&gt; start with 40 HP and 60 MP. They start with a Staff and Robes. They know all spells in the first tier. They make great pure-spellcaster characters.&lt;br/&gt;\")\n  msg (\"&lt;b&gt;Races&lt;/b&gt; = Please enter one of the following options as your chosen race.&lt;br/&gt;Dwarves (&lt;b&gt;dwarf&lt;/b&gt;) [high strength and vitality], Quicklings (&lt;b&gt;quick&lt;/b&gt;) [high agility and perception], or Humans (&lt;b&gt;human&lt;/b&gt;) [high intellect and willpower]&lt;br/&gt;\")\n  get input {\n    switch (result) {\n      case (\"dwarf\") {\n        msg (\"You choose to be a &lt;b&gt;Dwarf&lt;/b&gt;! You start out with a longsword, tower shield, platemail, and no known spells.\")\n        player.Race = \"Dwarf\"\n        player.AttributeStrength = 10\n        player.AttributeAgility = 5\n        player.AttributeVitality = 10\n        player.AttributeIntellect = 5\n        player.AttributeWillpower = 5\n        player.AttributeLuck = 5\n        player.AttributePerception = 5\n        player.MaximumHP = player.MaximumHP + (89)\n        player.MaximumMP = player.MaximumMP + (9)\n        player.CurrentHP = player.MaximumHP\n        player.CurrentMP = player.MaximumMP\n        AddToInventory (WeaponLongsword)\n        AddToInventory (ShieldTower)\n        AddToInventory (ArmorPlatemail)\n        player.EquippedWeapon = \"Longsword\"\n        player.EquippedShield = \"Tower Shield\"\n        player.EquippedArmor = \"Platemail\"\n      }\n      case (\"quick\") {\n        msg (\"You choose to be a &lt;b&gt;Quickling&lt;/b&gt;! You start out with a shortsword, buckler, leather armor, and you know the Minor Healing and Arcane Zap spells.\")\n        player.Race = \"Quickling\"\n        player.AttributeStrength = 5\n        player.AttributeAgility = 10\n        player.AttributeVitality = 5\n        player.AttributeIntellect = 5\n        player.AttributeWillpower = 5\n        player.AttributeLuck = 5\n        player.AttributePerception = 10\n        player.MaximumHP = player.MaximumHP + (69)\n        player.MaximumMP = player.MaximumMP + (29)\n        player.CurrentHP = player.MaximumHP\n        player.CurrentMP = player.MaximumMP\n        AddToInventory (WeaponShortsword)\n        AddToInventory (ArmorLeather)\n        AddToInventory (ShieldBuckler)\n        player.EquippedWeapon = \"Shortsword\"\n        player.EquippedArmor = \"Leather\"\n        player.EquippedShield = \"Buckler\"\n        Spellbook.KnowMinorHealing = true\n        Spellbook.KnowArcaneZap = true\n      }\n      case (\"human\") {\n        msg (\"You choose to be an &lt;b&gt;Human&lt;/b&gt;! You start out with a staff and robes, and you know all first tier spells!\")\n        player.Race = \"Human\"\n        player.AttributeStrength = 5\n        player.AttributeAgility = 5\n        player.AttributeVitality = 5\n        player.AttributeIntellect = 10\n        player.AttributeWillpower = 10\n        player.AttributeLuck = 5\n        player.AttributePerception = 5\n        player.MaximumHP = player.MaximumHP + (39)\n        player.MaximumMP = player.MaximumMP + (59)\n        player.CurrentHP = player.MaximumHP\n        player.CurrentMP = player.MaximumMP\n        AddToInventory (ArmorRobes)\n        AddToInventory (WeaponStaff)\n        MoveObject (WeaponLongsword, XXWeapons)\n        player.EquippedWeapon = \"Staff\"\n        player.EquippedArmor = \"Robes\"\n        Spellbook.KnowMinorHealing = true\n        Spellbook.KnowArcaneZap = true\n        Spellbook.KnowFirebolt = true\n        Spellbook.KnowMinorAid = true\n        Spellbook.KnowAnalysis = true\n      }\n      default {\n        msg (\"Incorrect input. However, all is not lost. When you type the \\\"begin\\\" command, you will be prompted again for race input and until you enter a correct input, you cannot start the game. \")\n        player.Race = \"Unknown\"\n      }\n    }\n    msg (\"&lt;br/&gt;Are you a new player? (&lt;b&gt;yes&lt;/b&gt;) or (&lt;b&gt;no&lt;/b&gt;)&lt;br/&gt;\")\n    get input {\n      switch (result) {\n        case (\"yes\") {\n          msg (\"&lt;u&gt;As a new player, these are the commands accepted by the text parser, with conditions for usage of each command.  The commands are listed in the ( ) :&lt;/u&gt;&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;help&lt;/b&gt;) = Whenever you are in need of help, just type = help. Will provide you with a variety of useful information. Additionally, it will also tell you how to get back to this command list!&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;explore&lt;/b&gt;) = When you are in the actual \\\"dungeon\\\", this will generate a new room on the floor you are on. You can only explore when the room is empty of hostiles. If you explore the surface, you will discover a Stairwell going Down, which will allow you to enter the sewers.&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;ascend&lt;/b&gt;) = When you aren't in combat and are at a Stairwell going Up, you can go up a floor. You find stairwells randomly.&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;descend&lt;/b&gt;) = When you aren't in combat and are at a Stairwell going Down, you can go down a floor. You find stairwells randomly. Additionally, if you are on the surface/in the Capital City, you can descend into the sewers, as there is always a Stairwell going Down on the surface/in the Capital City.&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;look at spellbook&lt;/b&gt;) = This allows you to view all your known spells, their effects, and if they can be cast in combat or not. You can look at your spellbook at any time.&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;look at satchel&lt;/b&gt;) = This allows you to view how many healing/mana potions are carried and how many enchanting orbs or enhancement kits you have on hand. You can look at your satchel at any time.&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;unequip \\\"item\\\"&lt;/b&gt;) or (&lt;b&gt;equip \\\"item\\\"&lt;/b&gt;) = These commands allow you to, unequip or equip items in your inventory. Replace \\\"item\\\" with the name of an item, lower-case. You cannot equip items in combat, but you can unequip them in combat.&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;enchant \\\"item\\\"&lt;/b&gt;) or (&lt;b&gt;enhance \\\"item\\\"&lt;/b&gt;) = These commands allow you to enchant an item with enchanting orbs or enhance an item with enhancement kits. Again, replace \\\"item\\\" with the name of an item, lower-case. Enchanting and Enhancing cannot be performed in combat.&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;drink healing potion&lt;/b&gt;) or (&lt;b&gt;drink mana potion&lt;/b&gt;) = This asks you how many potions you wish to drink and you drink that many concurrently. The game will tell you what your maximum HP or MP is before you drink potions. Can be performed at any time.&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;buy&lt;/b&gt;) or (&lt;b&gt;sell&lt;/b&gt;) or (&lt;b&gt;salvage \\\"item\\\"&lt;/b&gt;) = These are commands you can perform at the surface (the Capital City) or at a shrine found randomly in the dungeon, when not in combat. You trade with the Celestial and entering in one of the commands should be self-explanatory, depending on the command chosen. Buy allows you to spend soul shards for stuff you want. Sell allows you to sell items in your satchel for soul shards. Salvage allows you to convert an old, unused item into soul shards, but you cannot perform salvaging on equipped items.&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;cast \\\"spell\\\"&lt;/b&gt;) = This command allows you to cast non-combat spells and combat versions of non-combat spells; ie Aid is the combat version of Healing. Combat spells will result in the enemy retaliating as usual. Replace \\\"spell\\\" with the name of a spell you want to case, all lower-case. If you lack the mana to cast a spell, the action will be cancelled and you won't get attacked.&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;attack \\\"target\\\"&lt;/b&gt;) = This command allows you to perform mundane attacks or sneak attacks. For most actions, you can cancel it and thus avoid getting attacked. However, if you follow through on an attack, you will get retaliated against, unless you manage to kill them first. Replace \\\"target\\\" with part of the name of target; the game engine is fairly flexible and thus you can choose a shortened target name and it will find it acceptable; if it doesn't, nothing will happen and you won't get attacked.&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;flee from \\\"target\\\"&lt;/b&gt;) = This command allows you to flee from a target that you either don't want to fight or you don't think you can beat. If it is the first round, which means you've not tried attacking it yet, then you can flee without it getting a chance to attack you. Otherwise, it gets one opportunity to attack you if you try to flee. Fleeing will generate a new room, much like the command (&lt;b&gt;explore&lt;/b&gt;) does. Again, replace \\\"target\\\" with the name of the creature you are fighting.&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;setup camp&lt;/b&gt;) = This command allows you to regain much needed HP and MP. If you perform the action in the Capital City or at a shrine, you will restore 100% of both HP and MP. If you do it anywhere else, you regain 5 * current floor level for both HP and MP, and you will get attacked by a wandering monster. Thus, it is often best to wait until you can find a shrine, and then sleep there than to try doing it anywhere else. &lt;br/&gt;\")\n          msg (\"(&lt;b&gt;investigate \\\"object\\\"&lt;/b&gt;) = When you have defeated the monster, often there will be objects in the room, listed under Points of Interest, that can be investigated. Each object has three outcomes: 1) Nothing good/bad with a small chance for loot. 2) Extremely good with lots of loot. 3) A trap of some kind, with decent loot.&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;save&lt;/b&gt;) = Saves the game, nuff said. &lt;br/&gt;\")\n          msg (\"(&lt;b&gt;storytime&lt;/b&gt;) = Currently only gives the player the background story to why they are here doing what they are doing. &lt;br/&gt;\")\n          msg (\"(&lt;b&gt;cast \\\"spell\\\" at \\\"target\\\"&lt;/b&gt;) = Casts a combat spell at an enemy target. Replace \\\"spell\\\" with the name of the spell and \\\"target\\\" with your intended target. Again, the text parser is fairly flexible and will accept a shortened version of the target's name. Ex: if the target is \\\"Primal Chaos Rat\\\", the parser would accept \\\"Primal\\\" just fine by itself. You only get retaliated against if you spend the mana to cast it, otherwise it is cancelled.&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;look&lt;/b&gt;) = Currently only is useful in the starting area of the game, which is the surface area, or Capital City. In the future, it will be added to to provide additional functions useful to gameplay.&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;buy \\\"thing\\\"&lt;/b&gt;) = An alternative method to the buy command. If you know precisely what you want to buy with your soul shards, you can use this command to quickly go to the type of purchase you desire. Replace \\\"thing\\\" with the menu option you would have been given if you had used the buy command. So, if you knew you wanted training, you would type = &lt;b&gt;buy training&lt;/b&gt;. You also also directly buy consumables, if you know precisely which one you want by typing = &lt;b&gt;buy healing potion&lt;/b&gt; or &lt;b&gt;buy mana potion&lt;/b&gt; or &lt;b&gt;buy enchanting orb&lt;/b&gt; or &lt;b&gt;buy enhancement kit&lt;/b&gt; &lt;br/&gt;\")\n          msg (\"(&lt;b&gt;sell \\\"thing\\\"&lt;/b&gt;) = An alternative method to the sell command. If you know precisely what you want to sell, you can use this command to quickly go to the type of sale you desire. Replace \\\"thing\\\" with the menu option you would have been given if you had used the sell command. So, if you knew you wanted sell healing potions, you would type = &lt;b&gt;sell healing&lt;/b&gt;&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;inspect \\\"orb\\\"&lt;/b&gt;) = If you couldn't decide which boss artifact to choose or you entered an incorrect input, this command will allow you to choose an artifact from a chaos orb carried in your inventory. Replace \\\"orb\\\" with the name of the Chaos Orb in your inventory. Additionally, until you make a valid artifact choice, the orb will remain in your inventory; once you've made a choice, it will disappear.&lt;br/&gt;\")\n          msg (\"(&lt;b&gt;analyze \\\"target\\\"&lt;/b&gt;) = While the spell \\\"Analysis\\\" is active, you can use this command. By replacing \\\"target\\\" with the name of the creature in the room, you will get a detailed analysis of all their statistics, to make informed decisions. Using this command is a free action and will not result in retaliation from the monster.\")\n          msg (\"&lt;br/&gt;You can view these commands at any time during the game by typing: (&lt;b&gt;display info&lt;/b&gt;) and then type (&lt;b&gt;commands&lt;/b&gt;).&lt;br/&gt;&lt;br/&gt;If you want to, you can also take a look at the gameplay tips! You can view them by typing: (&lt;b&gt;display info&lt;/b&gt;) and then (&lt;b&gt;gameplay tips&lt;/b&gt;).&lt;br/&gt;&lt;br/&gt;The command (&lt;b&gt;storytime&lt;/b&gt;) is used currently to give you the backstory.&lt;br/&gt;&lt;br/&gt;The command (&lt;b&gt;help&lt;/b&gt;) is used when you need help.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Game Tip: Whenever you use a command with \\\"target\\\" in the name, you do not need to use the target's full name. So if you attacked a Giant Crocodile, you could simply type \\\"attack giant\\\".&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Type (&lt;b&gt;begin&lt;/b&gt;) when ready to play the game.\")\n        }\n        case (\"no\") {\n          msg (\"The command (&lt;b&gt;display info&lt;/b&gt;) is extremely useful.&lt;br/&gt;The command (&lt;b&gt;save&lt;/b&gt;) will save your game.&lt;br/&gt;The command (&lt;b&gt;explore&lt;/b&gt;) is used to explore new areas.&lt;br/&gt;The command (&lt;b&gt;storytime&lt;/b&gt;) is used currently to give you the backstory.&lt;br/&gt;The command (&lt;b&gt;help&lt;/b&gt;) is used when you need help.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Game Tip: Whenever you use a command with \\\"target\\\" in the name, you do not need to use the target's full name. So if you attacked a Giant Crocodile, you could simply type \\\"attack giant\\\".&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Type (&lt;b&gt;begin&lt;/b&gt;) when ready.&lt;br/&gt;\")\n        }\n        default {\n          msg (\"The command (&lt;b&gt;display info&lt;/b&gt;) is extremely useful.&lt;br/&gt;The command (&lt;b&gt;save&lt;/b&gt;) will save your game.&lt;br/&gt;The command (&lt;b&gt;explore&lt;/b&gt;) is used to explore new areas.&lt;br/&gt;The command (&lt;b&gt;storytime&lt;/b&gt;) is used currently to give you the backstory.&lt;br/&gt;The command (&lt;b&gt;help&lt;/b&gt;) is used when you need help.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Game Tip: Whenever you use a command with \\\"target\\\" in the name, you do not need to use the target's full name. So if you attacked a Giant Crocodile, you could simply type \\\"attack giant\\\".&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Type (&lt;b&gt;begin&lt;/b&gt;) when ready.&lt;br/&gt;\")\n        }\n      }\n    }\n  }\n}```\n\nIf you want to see these in action, V3 is up in the WIP section of the Quest Games here, under the name Cataclysm of Chaos.\n</code></pre>\n\n",
      "PostDate": "2017-09-17T21:10:54.7889744Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "11d9d5cb-a1aa-4404-ae7e-775272d0a623",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The forums won't let me update my post, to break up the code. Keeps telling me \"You can't post that here\" whenever I hit update. Sorry!",
      "EditableFormat": "markdown",
      "HTML": "<p>The forums won't let me update my post, to break up the code. Keeps telling me \"You can't post that here\" whenever I hit update. Sorry!</p>\n\n",
      "PostDate": "2017-09-17T21:13:36.0714765Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "44aed567-3b1b-4115-a75b-4f2acdfaceed",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "With regard to the \"failed to penetrate their armor\" message, you calculate the damage inflicted 3 times.\r\n1) for the 'if' statement that determines whether to display the \"failed to penetrate their armour\" message\r\n2) To display the \"You hit the target and inflict XX damage\" message\r\n3) To actually reduce the enemy's HP.\r\n\r\nComparing the 3 formulae side by side (with names abbreviated for ease of comparison):\r\n```\r\nCase 1: ((ShieldProtection + ShieldEnchantment + Strength + SpikeDamage) * ForceShieldMultiplier) > Protection\r\nCase 2: ((ShieldProtection + ShieldEnchantment + Strength - Protection) * ForceShieldMultiplier)\r\nCase 3: ((ShieldProtection + ShieldEnchantment + Strength) * ForceShieldMultiplier) - Protection\r\n```\r\nIt will display a negative damage if `((ShieldProtection + ShieldEnchantment + Strength + SpikeDamage) * ForceShieldMultiplier)` is greater than the target's Protection, but `ShieldProtection + ShieldEnchantment + Strength`is not.",
      "EditableFormat": "markdown",
      "HTML": "<p>With regard to the \"failed to penetrate their armor\" message, you calculate the damage inflicted 3 times.</p>\n<ol>\n<li>for the 'if' statement that determines whether to display the \"failed to penetrate their armour\" message</li>\n<li>To display the \"You hit the target and inflict XX damage\" message</li>\n<li>To actually reduce the enemy's HP.</li>\n</ol>\n<p>Comparing the 3 formulae side by side (with names abbreviated for ease of comparison):</p>\n<pre><code>Case 1: ((ShieldProtection + ShieldEnchantment + Strength + SpikeDamage) * ForceShieldMultiplier) &gt; Protection\nCase 2: ((ShieldProtection + ShieldEnchantment + Strength - Protection) * ForceShieldMultiplier)\nCase 3: ((ShieldProtection + ShieldEnchantment + Strength) * ForceShieldMultiplier) - Protection\n</code></pre>\n<p>It will display a negative damage if <code>((ShieldProtection + ShieldEnchantment + Strength + SpikeDamage) * ForceShieldMultiplier)</code> is greater than the target's Protection, but <code>ShieldProtection + ShieldEnchantment + Strength</code>is not.</p>\n\n",
      "PostDate": "2017-09-17T21:36:36.3016441Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f5b40921-99d4-4876-b232-fad76aa5d3b9",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "... \r\n\r\nThanks for finding the logic error with the shield bash. That will solve that issue. Thanks!\r\n\r\nAnd for indirectly helping me find another logic error XD; the object protection should be subtracted after force shield multiplication occurs, not before.\r\n\r\nWhat about the other two?",
      "EditableFormat": "markdown",
      "HTML": "<p>...</p>\n<p>Thanks for finding the logic error with the shield bash. That will solve that issue. Thanks!</p>\n<p>And for indirectly helping me find another logic error XD; the object protection should be subtracted after force shield multiplication occurs, not before.</p>\n<p>What about the other two?</p>\n\n",
      "PostDate": "2017-09-17T21:53:06.6021383Z",
      "LastEditDate": "2017-09-17T21:54:49.1590912Z",
      "link": null
    },
    {
      "PostId": "677bcd22-272f-4ceb-8699-b57b893d512d",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "not sure if this helps, but:\r\n\r\nyour use of 'getrandomint (MIN, MAX)' Function is wrong, it's:\r\n\r\nGetRandomInt (MIN, MAX)\r\n\r\nas quest is case sensitive\r\n\r\n--------------\r\n\r\nalso, if you use a Function or Object+Script_Attribute+Delegate, aka have/use Arguments/Parameters, than you can assign the Objects into your scripting, for super simple example, using a Function:\r\n\r\n```\r\n<game name=\"example_game\">\r\n  <attr name=\"start\" type=\"script\">\r\n    attack_function (player, orc)\r\n    attack_function (orc, player)\r\n  </attr>\r\n</game>\r\n\r\n<object name=\"room\">\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"damage\" type=\"int\">50</attr>\r\n  <attr name=\"current_life\" type=\"int\">999</attr>\r\n</object>\r\n\r\n<object name=\"orc\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"damage\" type=\"int\">25</attr>\r\n  <attr name=\"current_life\" type=\"int\">500</attr>\r\n</object>\r\n\r\n<function name=\"attack_function\" parameters=\"attacker, defender\">\r\n  defender.current_life = defender.current_life - attacker.damage\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>not sure if this helps, but:</p>\n<p>your use of 'getrandomint (MIN, MAX)' Function is wrong, it's:</p>\n<p>GetRandomInt (MIN, MAX)</p>\n<p>as quest is case sensitive</p>\n<hr>\n<p>also, if you use a Function or Object+Script_Attribute+Delegate, aka have/use Arguments/Parameters, than you can assign the Objects into your scripting, for super simple example, using a Function:</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    attack_function (player, orc)\n    attack_function (orc, player)\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;object name=\"room\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"damage\" type=\"int\"&gt;50&lt;/attr&gt;\n  &lt;attr name=\"current_life\" type=\"int\"&gt;999&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"orc\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"damage\" type=\"int\"&gt;25&lt;/attr&gt;\n  &lt;attr name=\"current_life\" type=\"int\"&gt;500&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;function name=\"attack_function\" parameters=\"attacker, defender\"&gt;\n  defender.current_life = defender.current_life - attacker.damage\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2017-09-17T23:01:42.1465999Z",
      "LastEditDate": "2017-09-17T23:09:27.2225352Z",
      "link": null
    },
    {
      "PostId": "3c2228de-efaa-43b8-92bf-15c2039cb6fe",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've noticed that Quest is fairly case-sensitive. But, in this case it still properly produces an integer number within the range specified. It might have something to do with the most recent update, as the update also made it so that you don't have to type the full object's name to trigger code. ie If you are in combat with a giant crocodile, you could type \"attack gia\" and it will apply the combat code to the giant crocodile. \r\n\r\nFunctions can make things easier to read, but it means taking time away from developing content or addressing bugfixes. And as I'm the only one adding things to the code, and I can read my crazy nested ifs, and they do do what I want them to do properly, I've just not gotten around to refactoring the code into function calls. I know I have to refactor my cast #text# (one of my spellcasting systems) so I'll experiment with function calls there; if they really make my life easier, I'll look into implementing them elsewhere.\r\n\r\nEDIT: Also updated my game with a third hotfix, fixing the Shield Bash logic errors and a bunch of other stuff. Hopefully the other weird edge cases don't prop up again. If anyone has an idea of why they cropped up, I might be able to design failsafes to prevent them from happening... if they happen.",
      "EditableFormat": "markdown",
      "HTML": "<p>I've noticed that Quest is fairly case-sensitive. But, in this case it still properly produces an integer number within the range specified. It might have something to do with the most recent update, as the update also made it so that you don't have to type the full object's name to trigger code. ie If you are in combat with a giant crocodile, you could type \"attack gia\" and it will apply the combat code to the giant crocodile.</p>\n<p>Functions can make things easier to read, but it means taking time away from developing content or addressing bugfixes. And as I'm the only one adding things to the code, and I can read my crazy nested ifs, and they do do what I want them to do properly, I've just not gotten around to refactoring the code into function calls. I know I have to refactor my cast #text# (one of my spellcasting systems) so I'll experiment with function calls there; if they really make my life easier, I'll look into implementing them elsewhere.</p>\n<p>EDIT: Also updated my game with a third hotfix, fixing the Shield Bash logic errors and a bunch of other stuff. Hopefully the other weird edge cases don't prop up again. If anyone has an idea of why they cropped up, I might be able to design failsafes to prevent them from happening... if they happen.</p>\n\n",
      "PostDate": "2017-09-17T23:16:40.7104292Z",
      "LastEditDate": "2017-09-17T23:19:48.5300308Z",
      "link": null
    },
    {
      "PostId": "0f8cd278-952f-4971-8c1e-886e861bf90f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "also, I think you got a mistake here:\r\n\r\n```\r\nif (ShieldTower.SpikesApplied = true) {\r\n  player.ShieldSpikeDamage = (player.ShieldSpikeDamage * 0) + ShieldTower.Protection + ShieldTower.Enchantment + ShieldTower.Enhancement\r\n  player.SpikedString = \"Spiked\"\r\n}\r\nelse {\r\n  player.ShieldSpikeDamage = (player.ShieldSpikeDamage * 0)\r\n  player.SpikedString = \"\"\r\n}\r\n```\r\n\r\nas, I think you want it like this:\r\n\r\n(or whatever the Value you want, instead of my use of '1')\r\n\r\n```\r\nif (ShieldTower.SpikesApplied = true) {\r\n  player.ShieldSpikeDamage = (player.ShieldSpikeDamage * 1) + ShieldTower.Protection + ShieldTower.Enchantment + ShieldTower.Enhancement\r\n  player.SpikedString = \"Spiked\"\r\n}\r\nelse {\r\n  player.ShieldSpikeDamage = (player.ShieldSpikeDamage * 0)\r\n  player.SpikedString = \"\"\r\n}\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>also, I think you got a mistake here:</p>\n<pre><code>if (ShieldTower.SpikesApplied = true) {\n  player.ShieldSpikeDamage = (player.ShieldSpikeDamage * 0) + ShieldTower.Protection + ShieldTower.Enchantment + ShieldTower.Enhancement\n  player.SpikedString = \"Spiked\"\n}\nelse {\n  player.ShieldSpikeDamage = (player.ShieldSpikeDamage * 0)\n  player.SpikedString = \"\"\n}\n</code></pre>\n<p>as, I think you want it like this:</p>\n<p>(or whatever the Value you want, instead of my use of '1')</p>\n<pre><code>if (ShieldTower.SpikesApplied = true) {\n  player.ShieldSpikeDamage = (player.ShieldSpikeDamage * 1) + ShieldTower.Protection + ShieldTower.Enchantment + ShieldTower.Enhancement\n  player.SpikedString = \"Spiked\"\n}\nelse {\n  player.ShieldSpikeDamage = (player.ShieldSpikeDamage * 0)\n  player.SpikedString = \"\"\n}\n</code></pre>\n\n",
      "PostDate": "2017-09-17T23:18:52.5650262Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a4ef1e8d-e245-44c5-81bc-8c55ad41089f",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Nope, I want to properly reset the value to 0. That is intentional. \r\n\r\nIts that way because there are a variety of things that will change the other values in that calculation, and thus you will have a rampant addition problem if the base value isn't reset to 0.  Its also that way in the rare chance that a junk value is assigned to the memory address (which can happen, rarely) or the junk value already in the memory address isn't properly replaced. This is to ensure that every time this turn script is run, that it is always dealing with a fresh calculation each time.",
      "EditableFormat": "markdown",
      "HTML": "<p>Nope, I want to properly reset the value to 0. That is intentional.</p>\n<p>Its that way because there are a variety of things that will change the other values in that calculation, and thus you will have a rampant addition problem if the base value isn't reset to 0.  Its also that way in the rare chance that a junk value is assigned to the memory address (which can happen, rarely) or the junk value already in the memory address isn't properly replaced. This is to ensure that every time this turn script is run, that it is always dealing with a fresh calculation each time.</p>\n\n",
      "PostDate": "2017-09-17T23:22:54.9144088Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e563d4bf-61bb-4a2d-a5d4-61a98993cd95",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "about getting back into your character_creation/dungeon rooms:\r\n\r\nDo you have a 'warp/teleport' spell functionality/effect in your game? for example\r\n\r\n```\r\n<command name=\"example_command\">\r\n  <pattern>warp #text#</pattern>\r\n  <script>\r\n    example_function (text)\r\n  </script>\r\n</command>\r\n\r\n<function name=\"example_function\" parameters=\"destination\">\r\n  player. parent = GetObject (text)\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>about getting back into your character_creation/dungeon rooms:</p>\n<p>Do you have a 'warp/teleport' spell functionality/effect in your game? for example</p>\n<pre><code>&lt;command name=\"example_command\"&gt;\n  &lt;pattern&gt;warp #text#&lt;/pattern&gt;\n  &lt;script&gt;\n    example_function (text)\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;function name=\"example_function\" parameters=\"destination\"&gt;\n  player. parent = GetObject (text)\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2017-09-17T23:31:12.7095108Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bb12525b-83dc-4d16-a797-790097553b93",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Nope. The only functionality I have is modifying player Depth Level, by using Ascend or Descend commands at appropriate staircases... but all of that if built for the dungeon room and not the character generation room.",
      "EditableFormat": "markdown",
      "HTML": "<p>Nope. The only functionality I have is modifying player Depth Level, by using Ascend or Descend commands at appropriate staircases... but all of that if built for the dungeon room and not the character generation room.</p>\n\n",
      "PostDate": "2017-09-17T23:36:59.9839387Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "33c66268-48ce-47b2-98a6-94c6b7c14389",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "if you want some ideas, you can take a look at my old combat code (this is based off of Pertex' Combat code, and with Pertex' help too, so all credit goes to him):\r\n\r\n(this is back when I was learning combat coding for the first time, so there's lots of inefficiencies, as well as a mistake with getting my 'pd' and 'pr' mixed up, lol ---- I've learned to never ever use abrevs ever again, lol, and also I have a lot of un-needed boolean variable flags in it --- you might want to download pertex' download link of fixing up my combat code in his post, if it still works. Otherwise, you can just ask me about anything about my code you don't understand and/or that doesn't work with it)\r\n\r\n(if you can understand/follow it... as I myself have a hard time understanding/following other peoples' code, as you can tell from my attempts at trying to help you with your code, not understanding how it works, and thus I point out stuff that's not wrong in my attempt at trying to find possible causes for why your code isn't working):\r\n\r\nhttps://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22483\r\nhttps://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22486 (key/legend for all of my abrevs --- I've learned since to NEVER ever use abrevs ever again, lol)",
      "EditableFormat": "markdown",
      "HTML": "<p>if you want some ideas, you can take a look at my old combat code (this is based off of Pertex' Combat code, and with Pertex' help too, so all credit goes to him):</p>\n<p>(this is back when I was learning combat coding for the first time, so there's lots of inefficiencies, as well as a mistake with getting my 'pd' and 'pr' mixed up, lol ---- I've learned to never ever use abrevs ever again, lol, and also I have a lot of un-needed boolean variable flags in it --- you might want to download pertex' download link of fixing up my combat code in his post, if it still works. Otherwise, you can just ask me about anything about my code you don't understand and/or that doesn't work with it)</p>\n<p>(if you can understand/follow it... as I myself have a hard time understanding/following other peoples' code, as you can tell from my attempts at trying to help you with your code, not understanding how it works, and thus I point out stuff that's not wrong in my attempt at trying to find possible causes for why your code isn't working):</p>\n<p>https://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22483<br>\nhttps://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22486 (key/legend for all of my abrevs --- I've learned since to NEVER ever use abrevs ever again, lol)</p>\n\n",
      "PostDate": "2017-09-17T23:39:35.9620129Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6df478a0-27a7-4f43-9544-684268d4a664",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Question though: If I were to market it commercially, wouldn't that mean I'd be inadvertently stealing your copyright to your combat code, if I were to adapt it to work with mine? When doing projects completely for fun, copyrights rarely matter (unless it is Nintendo product ofc as they are a-nal about their stuff), but if I were to sell it (as my text adventure I think is quite different from most text-adventures, though I could be wrong about that) I'd want to do things right, use my own stuff, and not steal from someone else (even though that does seem to be a trend in the gaming industry of stealing other people's ideas)\r\n\r\nI am open to learning more and improving upon my code to be both more elegant, efficient, and effective. I just don't want to steal other people's works, as I deem that unethical. \r\n\r\nThoughts?\r\n\r\nEDIT:\r\n\r\nTook a look at the code, and could read through most of it without needing to use your abbreviation list. The only thing that really caught my eye was the concept of \"extra actions\". That intrigues me. Otherwise the combat code is too simple for my needs. \r\n\r\n1. I have situations where attacks apply debuffs to enemies or different attack types with different benefits/drawbacks and are each situationally useful, depending on the creature you are fighting.\r\n2. I have a first-round mechanic that allows a player to sneak attack a foe if they succeed at their stealth roll OR they can sneak out of the room if they don't think they can defeat the creature as long as it is the first round.\r\n3. I have some spells that prevent monster retaliation, such as Invisibility, or a spell called Terrify, to chase it out of the room without fighting it. \r\n4. I have a lot of actions that I want to be deemed \"free\" actions and thus can perform as many of them as you like in a round as you like, while I have other actions that cause a retaliation. I couldn't tell with your code if the monster retaliates whenever a round passes or not.\r\n\r\nHowever, it does look a lot easier to read than my code. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Question though: If I were to market it commercially, wouldn't that mean I'd be inadvertently stealing your copyright to your combat code, if I were to adapt it to work with mine? When doing projects completely for fun, copyrights rarely matter (unless it is Nintendo product ofc as they are a-nal about their stuff), but if I were to sell it (as my text adventure I think is quite different from most text-adventures, though I could be wrong about that) I'd want to do things right, use my own stuff, and not steal from someone else (even though that does seem to be a trend in the gaming industry of stealing other people's ideas)</p>\n<p>I am open to learning more and improving upon my code to be both more elegant, efficient, and effective. I just don't want to steal other people's works, as I deem that unethical.</p>\n<p>Thoughts?</p>\n<p>EDIT:</p>\n<p>Took a look at the code, and could read through most of it without needing to use your abbreviation list. The only thing that really caught my eye was the concept of \"extra actions\". That intrigues me. Otherwise the combat code is too simple for my needs.</p>\n<ol>\n<li>I have situations where attacks apply debuffs to enemies or different attack types with different benefits/drawbacks and are each situationally useful, depending on the creature you are fighting.</li>\n<li>I have a first-round mechanic that allows a player to sneak attack a foe if they succeed at their stealth roll OR they can sneak out of the room if they don't think they can defeat the creature as long as it is the first round.</li>\n<li>I have some spells that prevent monster retaliation, such as Invisibility, or a spell called Terrify, to chase it out of the room without fighting it.</li>\n<li>I have a lot of actions that I want to be deemed \"free\" actions and thus can perform as many of them as you like in a round as you like, while I have other actions that cause a retaliation. I couldn't tell with your code if the monster retaliates whenever a round passes or not.</li>\n</ol>\n<p>However, it does look a lot easier to read than my code.</p>\n\n",
      "PostDate": "2017-09-17T23:50:04.5610895Z",
      "LastEditDate": "2017-09-18T00:03:33.8571344Z",
      "link": null
    },
    {
      "PostId": "e43f69dc-05cf-4749-b3d7-c94d613c9d7b",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "well, you'd have to ask Pertex if it's alright, as my code is based upon some of his combat coding structure, it's his design, not mine\r\n\r\nin general... programmers (in non-illegal ways) 'plagerize' code all of the time, as \"why re-invent the wheel\".\r\n\r\nthe legality however of it is complex, including in terms of coding IP... if you can manipulate it enough and use it in an unique-enough way, in that it is \"your unique design\", then that's legal (though never is legal/illegal until to win/lose in court, as even if something is/should-be completely legal... if you don't prove it/win in court that it is indeed so/legal.... than it is not so, lol):\r\n\r\nsee the 'led zeppelin staircase to heaven case', for an example (same concept as IP laws)\r\n\r\nhere, see this thread, has a lot of info on copyright/patent/trademark/IP stuff:\r\n\r\nhttps://textadventures.co.uk/forum/design/topic/5797/copyright\r\n\r\n--------------\r\n\r\nsighs... when will this mis-information be removed from the masses.... sighs\r\n\r\nthe commerciality/profit or lack of it, has absolutely NOTHING to do with whether something is legal or not, NONE WHAT-SO-EVER !!!",
      "EditableFormat": "markdown",
      "HTML": "<p>well, you'd have to ask Pertex if it's alright, as my code is based upon some of his combat coding structure, it's his design, not mine</p>\n<p>in general... programmers (in non-illegal ways) 'plagerize' code all of the time, as \"why re-invent the wheel\".</p>\n<p>the legality however of it is complex, including in terms of coding IP... if you can manipulate it enough and use it in an unique-enough way, in that it is \"your unique design\", then that's legal (though never is legal/illegal until to win/lose in court, as even if something is/should-be completely legal... if you don't prove it/win in court that it is indeed so/legal.... than it is not so, lol):</p>\n<p>see the 'led zeppelin staircase to heaven case', for an example (same concept as IP laws)</p>\n<p>here, see this thread, has a lot of info on copyright/patent/trademark/IP stuff:</p>\n<p>https://textadventures.co.uk/forum/design/topic/5797/copyright</p>\n<hr>\n<p>sighs... when will this mis-information be removed from the masses.... sighs</p>\n<p>the commerciality/profit or lack of it, has absolutely NOTHING to do with whether something is legal or not, NONE WHAT-SO-EVER !!!</p>\n\n",
      "PostDate": "2017-09-18T00:00:31.5120524Z",
      "LastEditDate": "2017-09-18T00:14:09.6156542Z",
      "link": null
    },
    {
      "PostId": "ddbc7020-10f5-4d97-a422-9e3dfd0b667c",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "True, but people will often sue if they think they have a reasonable chance of succeeding in court and getting money out of it; whether it was legal or not. But if it is legal, then people generally avoid suing as it will be unlikely that they will succeed in court.\r\n\r\nAs yes, plagirization does occur a lot; at least with the idea. The code may be different, but it creates the same overall implementation. I know that true Original works, are rare, and most games take inspiration from others. But, taking inspiration is different, than copying and renaming a few variables. ",
      "EditableFormat": "markdown",
      "HTML": "<p>True, but people will often sue if they think they have a reasonable chance of succeeding in court and getting money out of it; whether it was legal or not. But if it is legal, then people generally avoid suing as it will be unlikely that they will succeed in court.</p>\n<p>As yes, plagirization does occur a lot; at least with the idea. The code may be different, but it creates the same overall implementation. I know that true Original works, are rare, and most games take inspiration from others. But, taking inspiration is different, than copying and renaming a few variables.</p>\n\n",
      "PostDate": "2017-09-18T00:07:02.1131234Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3abee6de-3422-4dbc-bc2e-db795d7ca4a6",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "edited in some more stuff to my previous post (including a link to a thread with much more and more detailed info), sorry about that.\r\n\r\n------------------\r\n\r\nnothing is safe legally, not even a work/creation entirely original/unique by you! As if it can be \"proven\" in court that you used other people's ideas/concepts/designs from their works/creations (even if you actually didn't do so --- it's still possible that you accidentally have something in common with someone else's work/creation, as it's impossible to be truly original/unique, even if you were in the creation of your work/creation. For example, if you've never read shakespear, you will still have some themes of shapespeare in your story, as they're universal themes that you can't avoid from using --- and shakespeare plagerized these story-telling themes from the greeks, lol), you're guilty of IP/plagerism/copyright/trademark/patent theft/vandalism, unfortunately...\r\n\r\n--------\r\n\r\nyes, indeed, original/unique (most efficient) code is created/crafted/discovered by code/math geniuses... which we then all use... hehe",
      "EditableFormat": "markdown",
      "HTML": "<p>edited in some more stuff to my previous post (including a link to a thread with much more and more detailed info), sorry about that.</p>\n<hr>\n<p>nothing is safe legally, not even a work/creation entirely original/unique by you! As if it can be \"proven\" in court that you used other people's ideas/concepts/designs from their works/creations (even if you actually didn't do so --- it's still possible that you accidentally have something in common with someone else's work/creation, as it's impossible to be truly original/unique, even if you were in the creation of your work/creation. For example, if you've never read shakespear, you will still have some themes of shapespeare in your story, as they're universal themes that you can't avoid from using --- and shakespeare plagerized these story-telling themes from the greeks, lol), you're guilty of IP/plagerism/copyright/trademark/patent theft/vandalism, unfortunately...</p>\n<hr>\n<p>yes, indeed, original/unique (most efficient) code is created/crafted/discovered by code/math geniuses... which we then all use... hehe</p>\n\n",
      "PostDate": "2017-09-18T00:21:35.0774121Z",
      "LastEditDate": "2017-09-18T00:24:30.0684492Z",
      "link": null
    },
    {
      "PostId": "0e754a54-93b4-40f6-9f17-bfb85d5fa472",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ya, my combat code is simple (this was back when I was first learning to do combat coding, but it wasn't simple at the time, lol), I can probably do more complex stuff too now for combat, but I've not got around to making a more advanced combat code yet...\r\n\r\nI have a few neat combat features in my combat code ('extra turns' chance based on speed difference, 7th Saga SNES game's unique 'defend' feature, the 'if' checks for if you can fight or not, critical hits, etc), but definitely nothing fancy code wise. My code involves combat rounds (you and monster both get to have a turn, who goes first is determined by speed), and the combat rounds continue until one of you are dead and/or one of you escape. Well, some of this wasn't implemented, but that was the design goal of it anyways.  I hadn't finished it back when I did it, and am not going to finish it now (as I'd make a better and more advanced combat code now --- if/when I ever get around to it, lol, sighs).\r\n\r\nYa, I'm missing a lot of combat features: sneaking/stealth bonus damage, buffs (elemental/damage types, stat ups, down downs, etc) and other magic effects, status effects, positioning/distance/etc, spells/magic (including: bonus/penalty damages, reflect, absorb, etc), equipment, items, abilities/etc, weapon type damage bonuses/penalities against specific types of monsters (ie: blunts/mace vs undead, axes vs demons, swords vs humans, spears vs ???, crossbow vs armored, etc etc etc), etc etc etc, hehe (I've played A LOT of rpgs...)\r\n\r\n(I'm still working on just my 'character creation', though it and any quest work has been on hiatus for awhile, due to school and its work, sighs)",
      "EditableFormat": "markdown",
      "HTML": "<p>ya, my combat code is simple (this was back when I was first learning to do combat coding, but it wasn't simple at the time, lol), I can probably do more complex stuff too now for combat, but I've not got around to making a more advanced combat code yet...</p>\n<p>I have a few neat combat features in my combat code ('extra turns' chance based on speed difference, 7th Saga SNES game's unique 'defend' feature, the 'if' checks for if you can fight or not, critical hits, etc), but definitely nothing fancy code wise. My code involves combat rounds (you and monster both get to have a turn, who goes first is determined by speed), and the combat rounds continue until one of you are dead and/or one of you escape. Well, some of this wasn't implemented, but that was the design goal of it anyways.  I hadn't finished it back when I did it, and am not going to finish it now (as I'd make a better and more advanced combat code now --- if/when I ever get around to it, lol, sighs).</p>\n<p>Ya, I'm missing a lot of combat features: sneaking/stealth bonus damage, buffs (elemental/damage types, stat ups, down downs, etc) and other magic effects, status effects, positioning/distance/etc, spells/magic (including: bonus/penalty damages, reflect, absorb, etc), equipment, items, abilities/etc, weapon type damage bonuses/penalities against specific types of monsters (ie: blunts/mace vs undead, axes vs demons, swords vs humans, spears vs ???, crossbow vs armored, etc etc etc), etc etc etc, hehe (I've played A LOT of rpgs...)</p>\n<p>(I'm still working on just my 'character creation', though it and any quest work has been on hiatus for awhile, due to school and its work, sighs)</p>\n\n",
      "PostDate": "2017-09-18T01:00:24.0573659Z",
      "LastEditDate": "2017-09-18T01:04:10.7232523Z",
      "link": null
    },
    {
      "PostId": "66b742a8-50a1-4be2-a75e-2957e388f16b",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well, I figured out the character generation bug. The player didn't leave the character generation room, and every time they typed \"look\" they regenerated their character and got the HP/MP boosts. As the character generation is built into the room description, look would cause that code to be re-executed.\r\n\r\nApparently, I made a slight logic error in my \"Descend\" command. Since the game defaults the floor depth to 0, if you are on floor 0, you can descend without needing a staircase. I had assumed the player would hit \"begin\" first and then \"descend\"... as it says \"Type (begin) to start the game.\" But, I suppose when dealing with players... anything is possible. hahahah... >.> \r\n\r\nSo I'll fix up that logic error and that should prevent that problem in the future. \r\n\r\nStill not sure why the code to apply Shield Spikes failed though.",
      "EditableFormat": "markdown",
      "HTML": "<p>Well, I figured out the character generation bug. The player didn't leave the character generation room, and every time they typed \"look\" they regenerated their character and got the HP/MP boosts. As the character generation is built into the room description, look would cause that code to be re-executed.</p>\n<p>Apparently, I made a slight logic error in my \"Descend\" command. Since the game defaults the floor depth to 0, if you are on floor 0, you can descend without needing a staircase. I had assumed the player would hit \"begin\" first and then \"descend\"... as it says \"Type (begin) to start the game.\" But, I suppose when dealing with players... anything is possible. hahahah... &gt;.&gt;</p>\n<p>So I'll fix up that logic error and that should prevent that problem in the future.</p>\n<p>Still not sure why the code to apply Shield Spikes failed though.</p>\n\n",
      "PostDate": "2017-09-18T04:09:17.2230326Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5715acce-f43f-42ce-8bfe-478700bab671",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm still not sure why you're multiplying numbers by zero. Like:\r\n```\r\nif (ShieldTower.SpikesApplied = true) {\r\n  player.ShieldSpikeDamage = (player.ShieldSpikeDamage * 0) + ShieldTower.Protection + ShieldTower.Enchantment + ShieldTower.Enhancement\r\n  player.SpikedString = \"Spiked\"\r\n}\r\nelse {\r\n  player.ShieldSpikeDamage = (player.ShieldSpikeDamage * 0)\r\n  player.SpikedString = \"\"\r\n}\r\n```\r\nwhy not have:\r\n```\r\nif (ShieldTower.SpikesApplied) {\r\n  player.ShieldSpikeDamage = ShieldTower.Protection + ShieldTower.Enchantment + ShieldTower.Enhancement\r\n  player.SpikedString = \"Spiked\"\r\n}\r\nelse {\r\n  player.ShieldSpikeDamage = 0\r\n  player.SpikedString = \"\"\r\n}\r\n```\r\nWhich would be exactly the same thing, only shorter.\r\nIn general, shorter code is better. It's faster not to type redundant code that does nothing, and when you have a problem, it's easier for you (or someone else) to see the errors.\r\n\r\nLooking at your game, I see you have a whole lot of repetition. Cutting down on this would _really_ make it easier to find the problem when an error occurs.\r\n\r\nFor example, you have a turnscript to calculate stats based on equipment, including the armour section:\r\n```\r\n      switch (true) {\r\n        case (player.EquippedArmor = \"Chainmail\") {\r\n          player.ArmorProtection = ArmorChainmail.Protection\r\n          player.ArmorEnchantment = ArmorChainmail.Enchantment\r\n          player.ArmorEnhancement = ArmorChainmail.Enhancement\r\n          if (ArmorChainmail.SpikesApplied = true) {\r\n            player.ArmorSpikeDamage = (player.ArmorSpikeDamage * 0) + ArmorChainmail.Protection + ArmorChainmail.Enchantment + ArmorChainmail.Enhancement\r\n          }\r\n          else {\r\n            player.ArmorSpikeDamage = (player.ArmorSpikeDamage * 0)\r\n          }\r\n        }\r\n        case (player.EquippedArmor = \"Platemail\") {\r\n          player.ArmorProtection = ArmorPlatemail.Protection\r\n          player.ArmorEnchantment = ArmorPlatemail.Enchantment\r\n          player.ArmorEnhancement = ArmorPlatemail.Enhancement\r\n          if (ArmorPlatemail.SpikesApplied = true) {\r\n            player.ArmorSpikeDamage = (player.ArmorSpikeDamage * 0) + ArmorPlatemail.Protection + ArmorPlatemail.Enchantment + ArmorPlatemail.Enhancement\r\n          }\r\n          else {\r\n            player.ArmorSpikeDamage = (player.ArmorSpikeDamage * 0)\r\n          }\r\n        }\r\n        case (player.EquippedArmor = \"Leather\") {\r\n          player.ArmorProtection = ArmorLeather.Protection\r\n          player.ArmorEnchantment = ArmorLeather.Enchantment\r\n          player.ArmorEnhancement = ArmorLeather.Enhancement\r\n          if (ArmorLeather.SpikesApplied = true) {\r\n            player.ArmorSpikeDamage = (player.ArmorSpikeDamage * 0) + ArmorLeather.Protection + ArmorLeather.Enchantment + ArmorLeather.Enhancement\r\n          }\r\n          else {\r\n            player.ArmorSpikeDamage = (player.ArmorSpikeDamage * 0)\r\n          }\r\n        }\r\n        case (player.EquippedArmor = \"Robes\") {\r\n          player.ArmorProtection = ArmorRobes.Protection\r\n          player.ArmorEnchantment = ArmorRobes.Enchantment\r\n          player.ArmorEnhancement = ArmorRobes.Enhancement\r\n          player.ArmorSpikeDamage = 0\r\n        }\r\n        case (player.EquippedArmor = \"Unarmored\") {\r\n          player.ArmorProtection = player.ArmorProtection * 0\r\n          player.ArmorEnchantment = player.ArmorEnchantment * 0\r\n          player.ArmorEnhancement = player.ArmorEnhancement * 0\r\n          player.ArmorSpikeDamage = 0\r\n        }\r\n      }\r\n```\r\nI assume you're copy and pasting the code for every new item; this leaves a possibility of errors in future, because there are so many values on screen, it would be very easy to miss one when adding the new item.\r\nThis section could be more simply written as:\r\n```\r\n      if (IsDefined (\"Armor\"+player.EquippedArmor)) {\r\n        currentarmor = GetObject(\"Armor\"+player.EquippedArmor)\r\n        player.ArmorProtection = currentarmor.Protection\r\n        player.ArmorEnchantment = currentarmor.Enchantment\r\n        player.ArmorEnhancement = currentarmor.Enhancement\r\n        if (GetBoolean (currentarmor, \"SpikesApplied\")) {\r\n          player.ArmorSpikeDamage = currentarmor.Protection + currentarmor.Enchantment + currentarmor.Enhancement\r\n        }\r\n        else {\r\n          player.ArmorSpikeDamage = 0\r\n        }\r\n      }\r\n      else if (player.EquippedArmor = \"Unarmored\") {\r\n        player.ArmorProtection = 0\r\n        player.ArmorEnchantment = 0\r\n        player.ArmorEnhancement = 0\r\n        player.ArmorSpikeDamage = 0\r\n      }\r\n      else {\r\n        // You don't need an 'else' or 'default' clause; but it can really help to catch mistakes\r\n        msg (\"Error: Unknown armor: \"+player.EquippedArmor)\r\n      }\r\n```\r\nAs well as reducing the chance of copy errors (I see a lot of people use copy-and-paste code like that and then miss one instance of the name, so your new armor is using one of the stats of the one you copied it from), it means that if you want to add a new kind of spikes in a later version, or put poison on them or something, you only need to add it in one place rather than three.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm still not sure why you're multiplying numbers by zero. Like:</p>\n<pre><code>if (ShieldTower.SpikesApplied = true) {\n  player.ShieldSpikeDamage = (player.ShieldSpikeDamage * 0) + ShieldTower.Protection + ShieldTower.Enchantment + ShieldTower.Enhancement\n  player.SpikedString = \"Spiked\"\n}\nelse {\n  player.ShieldSpikeDamage = (player.ShieldSpikeDamage * 0)\n  player.SpikedString = \"\"\n}\n</code></pre>\n<p>why not have:</p>\n<pre><code>if (ShieldTower.SpikesApplied) {\n  player.ShieldSpikeDamage = ShieldTower.Protection + ShieldTower.Enchantment + ShieldTower.Enhancement\n  player.SpikedString = \"Spiked\"\n}\nelse {\n  player.ShieldSpikeDamage = 0\n  player.SpikedString = \"\"\n}\n</code></pre>\n<p>Which would be exactly the same thing, only shorter.<br>\nIn general, shorter code is better. It's faster not to type redundant code that does nothing, and when you have a problem, it's easier for you (or someone else) to see the errors.</p>\n<p>Looking at your game, I see you have a whole lot of repetition. Cutting down on this would <em>really</em> make it easier to find the problem when an error occurs.</p>\n<p>For example, you have a turnscript to calculate stats based on equipment, including the armour section:</p>\n<pre><code>      switch (true) {\n        case (player.EquippedArmor = \"Chainmail\") {\n          player.ArmorProtection = ArmorChainmail.Protection\n          player.ArmorEnchantment = ArmorChainmail.Enchantment\n          player.ArmorEnhancement = ArmorChainmail.Enhancement\n          if (ArmorChainmail.SpikesApplied = true) {\n            player.ArmorSpikeDamage = (player.ArmorSpikeDamage * 0) + ArmorChainmail.Protection + ArmorChainmail.Enchantment + ArmorChainmail.Enhancement\n          }\n          else {\n            player.ArmorSpikeDamage = (player.ArmorSpikeDamage * 0)\n          }\n        }\n        case (player.EquippedArmor = \"Platemail\") {\n          player.ArmorProtection = ArmorPlatemail.Protection\n          player.ArmorEnchantment = ArmorPlatemail.Enchantment\n          player.ArmorEnhancement = ArmorPlatemail.Enhancement\n          if (ArmorPlatemail.SpikesApplied = true) {\n            player.ArmorSpikeDamage = (player.ArmorSpikeDamage * 0) + ArmorPlatemail.Protection + ArmorPlatemail.Enchantment + ArmorPlatemail.Enhancement\n          }\n          else {\n            player.ArmorSpikeDamage = (player.ArmorSpikeDamage * 0)\n          }\n        }\n        case (player.EquippedArmor = \"Leather\") {\n          player.ArmorProtection = ArmorLeather.Protection\n          player.ArmorEnchantment = ArmorLeather.Enchantment\n          player.ArmorEnhancement = ArmorLeather.Enhancement\n          if (ArmorLeather.SpikesApplied = true) {\n            player.ArmorSpikeDamage = (player.ArmorSpikeDamage * 0) + ArmorLeather.Protection + ArmorLeather.Enchantment + ArmorLeather.Enhancement\n          }\n          else {\n            player.ArmorSpikeDamage = (player.ArmorSpikeDamage * 0)\n          }\n        }\n        case (player.EquippedArmor = \"Robes\") {\n          player.ArmorProtection = ArmorRobes.Protection\n          player.ArmorEnchantment = ArmorRobes.Enchantment\n          player.ArmorEnhancement = ArmorRobes.Enhancement\n          player.ArmorSpikeDamage = 0\n        }\n        case (player.EquippedArmor = \"Unarmored\") {\n          player.ArmorProtection = player.ArmorProtection * 0\n          player.ArmorEnchantment = player.ArmorEnchantment * 0\n          player.ArmorEnhancement = player.ArmorEnhancement * 0\n          player.ArmorSpikeDamage = 0\n        }\n      }\n</code></pre>\n<p>I assume you're copy and pasting the code for every new item; this leaves a possibility of errors in future, because there are so many values on screen, it would be very easy to miss one when adding the new item.<br>\nThis section could be more simply written as:</p>\n<pre><code>      if (IsDefined (\"Armor\"+player.EquippedArmor)) {\n        currentarmor = GetObject(\"Armor\"+player.EquippedArmor)\n        player.ArmorProtection = currentarmor.Protection\n        player.ArmorEnchantment = currentarmor.Enchantment\n        player.ArmorEnhancement = currentarmor.Enhancement\n        if (GetBoolean (currentarmor, \"SpikesApplied\")) {\n          player.ArmorSpikeDamage = currentarmor.Protection + currentarmor.Enchantment + currentarmor.Enhancement\n        }\n        else {\n          player.ArmorSpikeDamage = 0\n        }\n      }\n      else if (player.EquippedArmor = \"Unarmored\") {\n        player.ArmorProtection = 0\n        player.ArmorEnchantment = 0\n        player.ArmorEnhancement = 0\n        player.ArmorSpikeDamage = 0\n      }\n      else {\n        // You don't need an 'else' or 'default' clause; but it can really help to catch mistakes\n        msg (\"Error: Unknown armor: \"+player.EquippedArmor)\n      }\n</code></pre>\n<p>As well as reducing the chance of copy errors (I see a lot of people use copy-and-paste code like that and then miss one instance of the name, so your new armor is using one of the stats of the one you copied it from), it means that if you want to add a new kind of spikes in a later version, or put poison on them or something, you only need to add it in one place rather than three.</p>\n\n",
      "PostDate": "2017-09-18T09:18:51.7704856Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8d7529b0-87a9-4427-9519-3a4f7061558c",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I multiply by zero because:\r\n- I'm not a programmer, and I don't really think like a programmer.\r\n- I'm paranoid, and I like safeguards and failsafes in my code, even if they aren't necessary. I like the illusion of safety that my code will always under any circumstance (barring BSOD that comes when technology gets too hot) work as I intend it to. \r\n- I used to human mathematics and not computer mathematics. In human mathematics, if the value in Spike Damage is 12, and the other values equal to 11, well 12 =/=. But in computer mathematics, it assigns the total calculation to Spike Damage, and thus if it was 12, it is now 11. I use the multiply by zero to indicate to myself that the old value is being completely removed. \r\n\r\nI'll likely be needed to do a refactor of my Update Script eventually, so thank you for the advice and the code suggestions on how to improve it. I appreciate it. Maybe I don't need multiply by 0 after all.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I multiply by zero because:</p>\n<ul>\n<li>I'm not a programmer, and I don't really think like a programmer.</li>\n<li>I'm paranoid, and I like safeguards and failsafes in my code, even if they aren't necessary. I like the illusion of safety that my code will always under any circumstance (barring BSOD that comes when technology gets too hot) work as I intend it to.</li>\n<li>I used to human mathematics and not computer mathematics. In human mathematics, if the value in Spike Damage is 12, and the other values equal to 11, well 12 =/=. But in computer mathematics, it assigns the total calculation to Spike Damage, and thus if it was 12, it is now 11. I use the multiply by zero to indicate to myself that the old value is being completely removed.</li>\n</ul>\n<p>I'll likely be needed to do a refactor of my Update Script eventually, so thank you for the advice and the code suggestions on how to improve it. I appreciate it. Maybe I don't need multiply by 0 after all.</p>\n\n",
      "PostDate": "2017-09-18T17:51:33.1404099Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bebb53e6-e227-4b39-8835-86fc82125636",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'll agree with the third point. I really thought it was better when languages had `=` for comparing two values to see if they're equal, and `:=` for assigning a value; because it makes it clear they're different things. But most modern languages use `==` and `=`, and a few (like Quest) use `=` for both meanings; so I guess that's something I've got to get used to.\r\n\r\nI'm also a little paranoid with my code. Even if I know for sure that a variable is either A or B, I'll do `if(A) { ... } else if (B) { ... } else { ... display an error message ...}`. Because no matter how careful I am, there's a chance I made a mistake, or mistyped something, that results in it being something else entirely. The 'else' case that should never happen means that I know something is wrong, and also makes it a lot easier to track the mistake down.\r\nIf I know for sure that the `switch` will always be one of the predefined values, I'll still include a:\r\n```\r\ndefault {\r\n  msg (\"CAN'T HAPPEN! If you see this message, please tell the developer. I'm in turnscript 4, and player.offhandWeapon is \"+player.offhandWeapon)\r\n}\r\n```\r\nThat way, I know that one of my attributes is something that doesn't match any of the case statements; and I know which piece of code has a problem; and I know what that attribute actually was. If a lot of my switch blocks start displaying the message, i know that some script somewhere is setting `player.offhandWeapon` to something weird. If it's only happening in one switch block, I know I probably made a typo in one of the `case` statements.\r\n\r\nParanoia can be useful :¬) Two minutes typing a message that should never be displayed is much better than spending hours trying to find the error. You could learn to channel your paranoia; occasionally check that your variables contain what they're supposed to, and if they don't it can print a message that helps you figure out why.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'll agree with the third point. I really thought it was better when languages had <code>=</code> for comparing two values to see if they're equal, and <code>:=</code> for assigning a value; because it makes it clear they're different things. But most modern languages use <code>==</code> and <code>=</code>, and a few (like Quest) use <code>=</code> for both meanings; so I guess that's something I've got to get used to.</p>\n<p>I'm also a little paranoid with my code. Even if I know for sure that a variable is either A or B, I'll do <code>if(A) { ... } else if (B) { ... } else { ... display an error message ...}</code>. Because no matter how careful I am, there's a chance I made a mistake, or mistyped something, that results in it being something else entirely. The 'else' case that should never happen means that I know something is wrong, and also makes it a lot easier to track the mistake down.<br>\nIf I know for sure that the <code>switch</code> will always be one of the predefined values, I'll still include a:</p>\n<pre><code>default {\n  msg (\"CAN'T HAPPEN! If you see this message, please tell the developer. I'm in turnscript 4, and player.offhandWeapon is \"+player.offhandWeapon)\n}\n</code></pre>\n<p>That way, I know that one of my attributes is something that doesn't match any of the case statements; and I know which piece of code has a problem; and I know what that attribute actually was. If a lot of my switch blocks start displaying the message, i know that some script somewhere is setting <code>player.offhandWeapon</code> to something weird. If it's only happening in one switch block, I know I probably made a typo in one of the <code>case</code> statements.</p>\n<p>Paranoia can be useful :¬) Two minutes typing a message that should never be displayed is much better than spending hours trying to find the error. You could learn to channel your paranoia; occasionally check that your variables contain what they're supposed to, and if they don't it can print a message that helps you figure out why.</p>\n\n",
      "PostDate": "2017-09-18T20:18:18.5771662Z",
      "LastEditDate": "2017-09-18T20:18:55.2087265Z",
      "link": null
    },
    {
      "PostId": "b0515567-6603-4801-a3b5-b4bf58245614",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@lordpalandus\r\nIf anything, I'd think the whatever * 0 would only cause more problems. Rarely, not very likely. But still.",
      "EditableFormat": "markdown",
      "HTML": "<p>@lordpalandus<br>\nIf anything, I'd think the whatever * 0 would only cause more problems. Rarely, not very likely. But still.</p>\n\n",
      "PostDate": "2017-09-18T20:21:22.8226653Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6b8a8784-bfc8-4ab6-b709-a9f242a282be",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "for people new to coding, just getting code that works is an achievement, and once you got code that works, you copy and paste it for doing other stuff that's similar, as you know its safe to use it, as it works (but you just got to remember to make the small changes in the pasted code for your other uses, of course, which is not easy to do, lol. I copy and paste code, always forgetting to change the name or whatever of something in the code for that new thing I'm pasting the code for, laughs. But, it's generally pretty easy to catch such forgetful mistakes... well sometimes... laughs... I got lots of stupid mistakes that I couldn't realize... lots of  funny stories of mistakes, laughs)\r\n\r\nOnce, people start to get more used to coding and learn a bit more of it and a bit into different designs, then they got the knowledge to go back and refactor/improve/streamline their code. We who are decent or better coders, forget that people new to coding, can't easily notice or understand how code can be improved upon, that takes some experience and knowledge of coding that doesn't come until you become a decent coder with a larger design base of knowledge and etc of coding designs and etc.\r\n\r\n-------------\r\n\r\nin mathematics the '=' is actually a comparison operation, which isn't taught, unfortunately. You just know it as 'equals', instead of as it actually is: 'equals to', a comparison operation.\r\n\r\nas a comparison operation, you can do this:\r\n\r\n2 + 3 = 5\r\n5 = 2 + 3\r\n\r\nwhat you're actually doing is saying:\r\n\r\n'2+5' is the-same-as/equal-to '5'\r\n'5' is the-same-as/equal-to '2+5'\r\n\r\n---------------\r\n\r\nand thus in programming, it takes awhile to learn to the '=' Assignment' operation, for math people:\r\n\r\nVARIABLE = EXPRESSION\r\n\r\nthe EXPRESSION'S result is stored into the VARIABLE\r\n\r\nN = 3 + 2\r\n\r\nEXPRESSION: 3 + 2\r\nEXPRESSION's result: 5\r\nthe '5' is stored into the 'N' VARIABLE\r\n\r\nYou can't do:\r\n\r\n3 + 2 = N\r\n\r\ndue to that it's not programmed to parse like that... as it's just not worth the effort to try to program it to parse it as this\r\n\r\n----------\r\n\r\nnow in programming you got your comparison operation, which is always paired with the 'if' Function:\r\n\r\nif (3 + 2 = 5)\r\nif (5 = 3 + 2)\r\n\r\nin which it doesn't matter which way it's flipped as can be seen above.\r\n\r\nalso, in most programming languages, these use '=' for the Assignment operation, and use '==' for the comparison operation, to help you distinguish between them, but quest uses the '=' for both Assignment and comparison operations, which is good for poeple new to coding in that they're not scared by the '==' and don't have to remember all these different symbols that programming uses for its various operations/operators, but it still causes confusion as people new to code, don't know the difference between comparison and assignment operations, as they just know 'equals', not even aware of the assignment operation, usually.\r\n\r\n---------\r\n\r\nbeing wary of catching errors in code, is actually a very good practice of professional programmers, so this is good that you're doing it already!\r\n\r\nbut there's better ways of doing it, than in copy and pasting and using redundent code...\r\n\r\nmost programming languages have a built-in 'error and exception handling' coding for you to use, usually named as 'try' and 'catch' Functions. So, if you were to learn C++, Java, and Python, you'll like that this is already built into them for your use, hehe.\r\n\r\nquest has some in its underlying coding, as seen by its errors messages ('catching' the errors and displaying the error message/info to you about what went wrong --- albiet not the best/clearest of error messages, lol)\r\n\r\nbut, unfortunately for us at the user level... we don't really have anything... aside from manually putting in your own 'msg' Functions everywhere you need them, to see what's going on/wrong with your code, for example:\r\n\r\n```\r\n<game name=\"example_game\">\r\n  <attr name=\"start\" type=\"script\">\r\n   msg (\"test 1\")\r\n   character_creation_function\r\n   msg (\"test 5\")\r\n  </attr>\r\n</game>\r\n\r\n<function name=\"character_creation_function\">\r\n  msg (\"Name?\")\r\n  msg (\"test 2\")\r\n  get input {\r\n    player.alias = result\r\n    msg (\"test 3: Player Alias: \" + player.alias)\r\n    show menu (\"Sex?\", split (\"male;female\", \";\"), false) {\r\n      player.sex = result\r\n      msg (\"test 4: Player Sex: \" + player.sex)\r\n    }\r\n  }\r\n</function>\r\n```\r\n\r\nthis way, you can see which 'test #' step/location/place you got to in your scripting before/at the error that occurred, and you're displaying your data along the way, so you can see if anything went wrong with the data as well.\r\n\r\n--------\r\n\r\nnow, good coders/programmers, can make fancy code designs that can do this without manually putting 'msg' Functions everywhere... or even make code that can scan over their quest code, finding errors and etc... hehe, but this is for coders/programmers with a degree and that level of knowledge... I'm not there yet... got a long ways to go, sighs.\r\n\r\n----------------\r\n\r\nif you're good at math, and know coding, you'd actually write at a low level language (Assembly language), and use bit manipulation and bit logic and boolean logic, hehe. For example:\r\n\r\nXOR'ing a '0' or a '1' by itself/the-same-number, results in zero: 'zeroes/resets' it\r\n\r\nOR truth table:\r\n\r\n'0' or '0' ---> '0'\r\n'0' or '1' ---> '1'\r\n'1' or '0' ---> '1'\r\n'1' or '1' ---> '1'\r\n\r\nXOR (eXclusive OR) truth table:\r\n\r\n'0' or '0' ---> '0'\r\n'0' or '1' ---> '1'\r\n'1' or '0' ---> '1'\r\n'1' or '1' ---> '0' \r\n\r\n(0) XOR'ed with itself (0) ----> 0\r\n(1) XOR'ed with itself (1) ----> 0\r\n\r\npseudo ASSEMBLY LANGUAGE example:\r\n\r\nmov Register_1, 0h // '0 h' literal/direct hexidecimal (base 16) value is being stored into Register_1\r\nxor Register_1, Register_1 // xor'ing Register_1 (0) with Register_1 (0) ----> Register_1 = 0\r\n\r\nmov Register_2, 1h // '1 h' literal/direct hexidecimal (base 16) value is being stored into Register_2\r\nxor Register_2, Register_2 // xor'ing Register_2 (1) with Register_2 (1) ----> Register_2 = 0\r\n\r\n----------------\r\n\r\nread up (google search) on bit manipulation and bit arithmetic (or just see links below, lol), if you're interested in this type of math\r\n\r\nhttp://pages.cs.wisc.edu/~smoler/x86text/lect.notes/represent.html\r\nhttp://pages.cs.wisc.edu/~smoler/x86text/lect.notes/arith.int.html",
      "EditableFormat": "markdown",
      "HTML": "<p>for people new to coding, just getting code that works is an achievement, and once you got code that works, you copy and paste it for doing other stuff that's similar, as you know its safe to use it, as it works (but you just got to remember to make the small changes in the pasted code for your other uses, of course, which is not easy to do, lol. I copy and paste code, always forgetting to change the name or whatever of something in the code for that new thing I'm pasting the code for, laughs. But, it's generally pretty easy to catch such forgetful mistakes... well sometimes... laughs... I got lots of stupid mistakes that I couldn't realize... lots of  funny stories of mistakes, laughs)</p>\n<p>Once, people start to get more used to coding and learn a bit more of it and a bit into different designs, then they got the knowledge to go back and refactor/improve/streamline their code. We who are decent or better coders, forget that people new to coding, can't easily notice or understand how code can be improved upon, that takes some experience and knowledge of coding that doesn't come until you become a decent coder with a larger design base of knowledge and etc of coding designs and etc.</p>\n<hr>\n<p>in mathematics the '=' is actually a comparison operation, which isn't taught, unfortunately. You just know it as 'equals', instead of as it actually is: 'equals to', a comparison operation.</p>\n<p>as a comparison operation, you can do this:</p>\n<p>2 + 3 = 5<br>\n5 = 2 + 3</p>\n<p>what you're actually doing is saying:</p>\n<p>'2+5' is the-same-as/equal-to '5'<br>\n'5' is the-same-as/equal-to '2+5'</p>\n<hr>\n<p>and thus in programming, it takes awhile to learn to the '=' Assignment' operation, for math people:</p>\n<p>VARIABLE = EXPRESSION</p>\n<p>the EXPRESSION'S result is stored into the VARIABLE</p>\n<p>N = 3 + 2</p>\n<p>EXPRESSION: 3 + 2<br>\nEXPRESSION's result: 5<br>\nthe '5' is stored into the 'N' VARIABLE</p>\n<p>You can't do:</p>\n<p>3 + 2 = N</p>\n<p>due to that it's not programmed to parse like that... as it's just not worth the effort to try to program it to parse it as this</p>\n<hr>\n<p>now in programming you got your comparison operation, which is always paired with the 'if' Function:</p>\n<p>if (3 + 2 = 5)<br>\nif (5 = 3 + 2)</p>\n<p>in which it doesn't matter which way it's flipped as can be seen above.</p>\n<p>also, in most programming languages, these use '=' for the Assignment operation, and use '==' for the comparison operation, to help you distinguish between them, but quest uses the '=' for both Assignment and comparison operations, which is good for poeple new to coding in that they're not scared by the '==' and don't have to remember all these different symbols that programming uses for its various operations/operators, but it still causes confusion as people new to code, don't know the difference between comparison and assignment operations, as they just know 'equals', not even aware of the assignment operation, usually.</p>\n<hr>\n<p>being wary of catching errors in code, is actually a very good practice of professional programmers, so this is good that you're doing it already!</p>\n<p>but there's better ways of doing it, than in copy and pasting and using redundent code...</p>\n<p>most programming languages have a built-in 'error and exception handling' coding for you to use, usually named as 'try' and 'catch' Functions. So, if you were to learn C++, Java, and Python, you'll like that this is already built into them for your use, hehe.</p>\n<p>quest has some in its underlying coding, as seen by its errors messages ('catching' the errors and displaying the error message/info to you about what went wrong --- albiet not the best/clearest of error messages, lol)</p>\n<p>but, unfortunately for us at the user level... we don't really have anything... aside from manually putting in your own 'msg' Functions everywhere you need them, to see what's going on/wrong with your code, for example:</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n   msg (\"test 1\")\n   character_creation_function\n   msg (\"test 5\")\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;function name=\"character_creation_function\"&gt;\n  msg (\"Name?\")\n  msg (\"test 2\")\n  get input {\n    player.alias = result\n    msg (\"test 3: Player Alias: \" + player.alias)\n    show menu (\"Sex?\", split (\"male;female\", \";\"), false) {\n      player.sex = result\n      msg (\"test 4: Player Sex: \" + player.sex)\n    }\n  }\n&lt;/function&gt;\n</code></pre>\n<p>this way, you can see which 'test #' step/location/place you got to in your scripting before/at the error that occurred, and you're displaying your data along the way, so you can see if anything went wrong with the data as well.</p>\n<hr>\n<p>now, good coders/programmers, can make fancy code designs that can do this without manually putting 'msg' Functions everywhere... or even make code that can scan over their quest code, finding errors and etc... hehe, but this is for coders/programmers with a degree and that level of knowledge... I'm not there yet... got a long ways to go, sighs.</p>\n<hr>\n<p>if you're good at math, and know coding, you'd actually write at a low level language (Assembly language), and use bit manipulation and bit logic and boolean logic, hehe. For example:</p>\n<p>XOR'ing a '0' or a '1' by itself/the-same-number, results in zero: 'zeroes/resets' it</p>\n<p>OR truth table:</p>\n<p>'0' or '0' ---&gt; '0'<br>\n'0' or '1' ---&gt; '1'<br>\n'1' or '0' ---&gt; '1'<br>\n'1' or '1' ---&gt; '1'</p>\n<p>XOR (eXclusive OR) truth table:</p>\n<p>'0' or '0' ---&gt; '0'<br>\n'0' or '1' ---&gt; '1'<br>\n'1' or '0' ---&gt; '1'<br>\n'1' or '1' ---&gt; '0'</p>\n<p>(0) XOR'ed with itself (0) ----&gt; 0<br>\n(1) XOR'ed with itself (1) ----&gt; 0</p>\n<p>pseudo ASSEMBLY LANGUAGE example:</p>\n<p>mov Register_1, 0h // '0 h' literal/direct hexidecimal (base 16) value is being stored into Register_1<br>\nxor Register_1, Register_1 // xor'ing Register_1 (0) with Register_1 (0) ----&gt; Register_1 = 0</p>\n<p>mov Register_2, 1h // '1 h' literal/direct hexidecimal (base 16) value is being stored into Register_2<br>\nxor Register_2, Register_2 // xor'ing Register_2 (1) with Register_2 (1) ----&gt; Register_2 = 0</p>\n<hr>\n<p>read up (google search) on bit manipulation and bit arithmetic (or just see links below, lol), if you're interested in this type of math</p>\n<p>http://pages.cs.wisc.edu/~smoler/x86text/lect.notes/represent.html<br>\nhttp://pages.cs.wisc.edu/~smoler/x86text/lect.notes/arith.int.html</p>\n\n",
      "PostDate": "2017-09-18T20:54:52.0217074Z",
      "LastEditDate": "2017-09-18T21:04:57.1858348Z",
      "link": null
    },
    {
      "PostId": "2cd32737-c369-4152-b319-f3424e487aa8",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Actually = in mathematics isn't always a comparison operation. Take linear algebra and matrix math (shivers), but I digress.\r\n\r\nI know about the complexities of logical Boolean stuff; I took Discrete Computational Math in college... a course that consistently confused the heck out of me. I know that you can also do some pretty crazy Booleans if someone is so inclined... ie:\r\n\r\nif !(!((x > 2) and (y > 1)) and !(z > (3 * q)^2/3))\r\n\r\nA programmer would at that, and question the first programmer on why they had to make the Boolean so damn confusing.\r\n\r\n ---\r\n\r\nI prefer to try and keep my Booleans readable for me a 5 second glance. A more complex Boolean might reduce the amount of code, but if there is ever a problem with the code, it will drive me up a wall. \r\n\r\n---\r\n\r\nI actually prefer the copy-paste method as I find it is far less error prone, than typing it out. When I had tried self-teaching myself C++ back in 2014-2015, I always found that I'd forget semicolons everywhere and when the code would try to compile and couldn't it would puke out all these errors and 95% of the time it was a semicolon or squiggly bracket for conditionals... the other 5% was a spelling mistake. So by copy-pasting, I'm able to eliminate the major syntax errors which are a pain in the butt to hunt down, now my errors are because of forgetting rename something or failing to put the variable into the code; ie like the Shield Bash code!\r\n\r\nI am open to refactoring my code to make it be better and efficient. And many of my systems have been greatly reduced in size and redundancy and as I figure out new ways of doing the same gameplay effect, but with less code. However, with all that said, my game is currently in V3 beta status, and I'm about 1/3 to done for V4 beta release. It takes a significant amount of time for me to refactor the code base because I have to be sure that the new system does everything the old system did... except better and with less code. A major refactor of my codebase takes me about 3-4 hours, coding marathon straight, to complete. That's a lot of time to spend refactoring a system. So I prefer to only refactor systems right now that I intend to be needed a refactor for, because I'm adding a bunch of content for it and there is too much redundancy in it. I don't like simply refactoring the code, just for the refactor sake. Theres a lot of bad examples in game development history of people who spent way too much time on refactoring and rebuilding a code base, and never actually producing a game. I try to avoid refactoring if the system is fairly efficient, effective and elegant. If I had an unlimited amount of time at my fingertips, I might just spend it refactoring everything. But I don't. And as I have testers who are really starting to enjoy my game, and are wanting more content, I have to choose carefully how to spend my time; opportunity cost if you will. \r\n\r\nNow with all that said, I know that I will need to refactor my Player Updates script (where the armor values are) and a spellcasting System, so The suggestions in this thread are being very helpful, so thank you for that, guys/gals!\r\n\r\nEDIT: On the point of C++... do function calls in Quest work the same way as function calls in C++? ie They take arguments, which replace the values of formal parameters, do some number crunching and return a value; or are there also ones that don't return a value and are generally used for taking input from the user or outputting something onto the screen?\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Actually = in mathematics isn't always a comparison operation. Take linear algebra and matrix math (shivers), but I digress.</p>\n<p>I know about the complexities of logical Boolean stuff; I took Discrete Computational Math in college... a course that consistently confused the heck out of me. I know that you can also do some pretty crazy Booleans if someone is so inclined... ie:</p>\n<p>if !(!((x &gt; 2) and (y &gt; 1)) and !(z &gt; (3 * q)^2/3))</p>\n<p>A programmer would at that, and question the first programmer on why they had to make the Boolean so damn confusing.</p>\n<hr>\n<p>I prefer to try and keep my Booleans readable for me a 5 second glance. A more complex Boolean might reduce the amount of code, but if there is ever a problem with the code, it will drive me up a wall.</p>\n<hr>\n<p>I actually prefer the copy-paste method as I find it is far less error prone, than typing it out. When I had tried self-teaching myself C++ back in 2014-2015, I always found that I'd forget semicolons everywhere and when the code would try to compile and couldn't it would puke out all these errors and 95% of the time it was a semicolon or squiggly bracket for conditionals... the other 5% was a spelling mistake. So by copy-pasting, I'm able to eliminate the major syntax errors which are a pain in the butt to hunt down, now my errors are because of forgetting rename something or failing to put the variable into the code; ie like the Shield Bash code!</p>\n<p>I am open to refactoring my code to make it be better and efficient. And many of my systems have been greatly reduced in size and redundancy and as I figure out new ways of doing the same gameplay effect, but with less code. However, with all that said, my game is currently in V3 beta status, and I'm about 1/3 to done for V4 beta release. It takes a significant amount of time for me to refactor the code base because I have to be sure that the new system does everything the old system did... except better and with less code. A major refactor of my codebase takes me about 3-4 hours, coding marathon straight, to complete. That's a lot of time to spend refactoring a system. So I prefer to only refactor systems right now that I intend to be needed a refactor for, because I'm adding a bunch of content for it and there is too much redundancy in it. I don't like simply refactoring the code, just for the refactor sake. Theres a lot of bad examples in game development history of people who spent way too much time on refactoring and rebuilding a code base, and never actually producing a game. I try to avoid refactoring if the system is fairly efficient, effective and elegant. If I had an unlimited amount of time at my fingertips, I might just spend it refactoring everything. But I don't. And as I have testers who are really starting to enjoy my game, and are wanting more content, I have to choose carefully how to spend my time; opportunity cost if you will.</p>\n<p>Now with all that said, I know that I will need to refactor my Player Updates script (where the armor values are) and a spellcasting System, so The suggestions in this thread are being very helpful, so thank you for that, guys/gals!</p>\n<p>EDIT: On the point of C++... do function calls in Quest work the same way as function calls in C++? ie They take arguments, which replace the values of formal parameters, do some number crunching and return a value; or are there also ones that don't return a value and are generally used for taking input from the user or outputting something onto the screen?</p>\n\n",
      "PostDate": "2017-09-18T23:09:50.4563539Z",
      "LastEditDate": "2017-09-18T23:14:39.8432842Z",
      "link": null
    },
    {
      "PostId": "8d8d181f-df65-4044-9508-22456aa2cee4",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've not at linear algebra yet, laughs. It's the next math class I got to take. I understood calc 2 well, but I was lazy and didn't study enough for some of the tests, and thus did badly on them... sighs... I hate math, it's just so boring for me now... but I have to take it for my programming (CS: computer science) major requirement, argh.\r\n\r\nmight have done a little work with matrixes ... maybe.... but if I did, can't remember any of it now, lol.\r\n\r\n-----------------\r\n\r\n(when is advanced mathematics ever used in normal life? NEVER! It's only for those going into engineering/robotics or being an economist/financial/business or being a math professor/teacher at college/school --- I know higher programming classes will probably delve more into math/theory... HK shivers... I'll have to deal with that when I get to upper division for bachelors and/or for masters/ph-d.... in the far far far future if it's even going to happen... sighs)\r\n\r\n---------\r\n\r\noh, you eventually learn to put in those semicolons and make sure you got your brackets in and correct... lol... Syntax is actually learned pretty quick, as it's just structure/pattern of code lines/blocks. I took 3 programming languages at once my first semester: C++, Java, and Python ... it was a bit difficult as I was get them mixed up, but you can just look at code that is already done, to see what syntax you're suppose to use.\r\n\r\nseriously, 95% of the time, it IS some stupid small simple mistake/typo that is causing an error with your code from working, lol. The hard part is finding it... grrr\r\n\r\n(while you don't have to worry about semicolons in quest, you still got to deal with the brackets and those '/' in the ending tags... grrr)\r\n\r\n(the worst though is when you accidentally have spaces/whitespaces, such as from highlighting a bit too far for copying and pasting ... those are so hard to spot... lol)\r\n\r\nif you ever want any help with C++ or Java, I can help with them\r\n\r\n--------\r\n\r\nya... you can refactor forever... that's my problem, laughs. I look at my code, and I'm like... how can I do a better design and which is also more scalable... I never make any progress on my game making because of it. I'm a (wanna be) perfectionist (as you got to be good at math to be perfectionist: economists are the best at non-physical-ability-skill games, as they can crunch the mechanics of the game to get the best performance possible within the game) ... so, I'm always victim of the trap of endless refactoring, lol.\r\n\r\n------\r\n\r\nBoolean Logic (and also can look-up/google-search \"Symbolic Logic\" of Philosophy/Logic too):\r\n\r\n1 <---> true/TRUE\r\n0 <---> false/FALSE\r\n\r\nAND logic truth table:\r\n\r\n0 and 0 ---> 0\r\n0 and 1 ---> 0\r\n1 and 0 ---> 0\r\n1 and 1 ---> 1\r\n\r\nOR logic truth table:\r\n\r\n0 or 0 ---> 0\r\n0 or 1 ---> 1\r\n1 or 0 ---> 1\r\n1 or 1 ---> 1\r\n\r\nNegation (\"not\") / 1st Complement, logic truth table::\r\n\r\nnot 0 ---> 1 // (0)' ---> 1\r\nnot 1 ---> 0 // (1)' ---> 0\r\n\r\nXOR (eXclusive OR) logic truth table:\r\n\r\n0 xor 0 ---> 0\r\n0 xor 1 ---> 1\r\n1 xor 0 ---> 1\r\n1 xor 1 ---> 0\r\n\r\nNAND (Not AND) logic truth table:\r\n\r\n0 nand 0 ---> 1\r\n0 nand 1 ---> 1\r\n1 nand 0 ---> 1\r\n1 nand 1 ---> 0\r\n\r\nNOR (Not OR) logic truth table:\r\n\r\n0 nor 0 ---> 1\r\n0 nor 1 ---> 0\r\n1 nor 0 ---> 0\r\n1 nor 1 ---> 0\r\n\r\nXNOR (Not eXclusive OR) logic truth table:\r\n\r\n0 xnor 0 ---> 1\r\n0 xnor 1 ---> 0\r\n1 xnor 0 ---> 0\r\n1 xnor 1 ---> 1\r\n\r\nBoolean Arithmetic: Basic Identities:\r\n\r\n(ignore the dot/period in front, that was/is to prevent the posting code from displaying the bullet symbol instead, lol)\r\n\r\n. + === OR\r\n. * === AND\r\n. ' === Negation (\"not\") / 1st Complement\r\n\r\nAB === A * B === AND\r\n\r\n(the 'X' represents a \"don't care\" state: it can be '0' or '1', as it doesn't matter)\r\n\r\n// basic truth table identities (see the 'AND' and 'OR' truth tables above):\r\n1. X + 0 = X\r\n2. X * 0 = 0\r\n3. X + 1 = 1\r\n4. X * 1 = X\r\n5. X + X = X\r\n6. X * X = X\r\n7. X + X' = 1\r\n8. X * X' = 0\r\n// these are similar to ordinary algebra:\r\n9. X + Y = Y + X\r\n10. X * Y = Y * X\r\n11. X + (Y + Z) = (X + Y) + Z\r\n12. X * (Y * Z) = (X * Y) * Z\r\n13. X * (Y + Z) = (X * Y) + (X * Z)\r\n// this is the NON-Algebra (aka, the seemingly weird) one (purely boolean logic):\r\n14. X + (Y * X) = (X + Y) * (X + Z)\r\n// DeMorgan's Rules/Theorems:\r\n15. (X + Y)' = (X') * (Y')\r\n16. (X * Y)' = (X') + (Y')\r\n// simple double negation/1st-complement rule (similar to: --1 = 1, ---1 = -1):\r\n17. (X')' = X",
      "EditableFormat": "markdown",
      "HTML": "<p>I've not at linear algebra yet, laughs. It's the next math class I got to take. I understood calc 2 well, but I was lazy and didn't study enough for some of the tests, and thus did badly on them... sighs... I hate math, it's just so boring for me now... but I have to take it for my programming (CS: computer science) major requirement, argh.</p>\n<p>might have done a little work with matrixes ... maybe.... but if I did, can't remember any of it now, lol.</p>\n<hr>\n<p>(when is advanced mathematics ever used in normal life? NEVER! It's only for those going into engineering/robotics or being an economist/financial/business or being a math professor/teacher at college/school --- I know higher programming classes will probably delve more into math/theory... HK shivers... I'll have to deal with that when I get to upper division for bachelors and/or for masters/ph-d.... in the far far far future if it's even going to happen... sighs)</p>\n<hr>\n<p>oh, you eventually learn to put in those semicolons and make sure you got your brackets in and correct... lol... Syntax is actually learned pretty quick, as it's just structure/pattern of code lines/blocks. I took 3 programming languages at once my first semester: C++, Java, and Python ... it was a bit difficult as I was get them mixed up, but you can just look at code that is already done, to see what syntax you're suppose to use.</p>\n<p>seriously, 95% of the time, it IS some stupid small simple mistake/typo that is causing an error with your code from working, lol. The hard part is finding it... grrr</p>\n<p>(while you don't have to worry about semicolons in quest, you still got to deal with the brackets and those '/' in the ending tags... grrr)</p>\n<p>(the worst though is when you accidentally have spaces/whitespaces, such as from highlighting a bit too far for copying and pasting ... those are so hard to spot... lol)</p>\n<p>if you ever want any help with C++ or Java, I can help with them</p>\n<hr>\n<p>ya... you can refactor forever... that's my problem, laughs. I look at my code, and I'm like... how can I do a better design and which is also more scalable... I never make any progress on my game making because of it. I'm a (wanna be) perfectionist (as you got to be good at math to be perfectionist: economists are the best at non-physical-ability-skill games, as they can crunch the mechanics of the game to get the best performance possible within the game) ... so, I'm always victim of the trap of endless refactoring, lol.</p>\n<hr>\n<p>Boolean Logic (and also can look-up/google-search \"Symbolic Logic\" of Philosophy/Logic too):</p>\n<p>1 &lt;---&gt; true/TRUE<br>\n0 &lt;---&gt; false/FALSE</p>\n<p>AND logic truth table:</p>\n<p>0 and 0 ---&gt; 0<br>\n0 and 1 ---&gt; 0<br>\n1 and 0 ---&gt; 0<br>\n1 and 1 ---&gt; 1</p>\n<p>OR logic truth table:</p>\n<p>0 or 0 ---&gt; 0<br>\n0 or 1 ---&gt; 1<br>\n1 or 0 ---&gt; 1<br>\n1 or 1 ---&gt; 1</p>\n<p>Negation (\"not\") / 1st Complement, logic truth table::</p>\n<p>not 0 ---&gt; 1 // (0)' ---&gt; 1<br>\nnot 1 ---&gt; 0 // (1)' ---&gt; 0</p>\n<p>XOR (eXclusive OR) logic truth table:</p>\n<p>0 xor 0 ---&gt; 0<br>\n0 xor 1 ---&gt; 1<br>\n1 xor 0 ---&gt; 1<br>\n1 xor 1 ---&gt; 0</p>\n<p>NAND (Not AND) logic truth table:</p>\n<p>0 nand 0 ---&gt; 1<br>\n0 nand 1 ---&gt; 1<br>\n1 nand 0 ---&gt; 1<br>\n1 nand 1 ---&gt; 0</p>\n<p>NOR (Not OR) logic truth table:</p>\n<p>0 nor 0 ---&gt; 1<br>\n0 nor 1 ---&gt; 0<br>\n1 nor 0 ---&gt; 0<br>\n1 nor 1 ---&gt; 0</p>\n<p>XNOR (Not eXclusive OR) logic truth table:</p>\n<p>0 xnor 0 ---&gt; 1<br>\n0 xnor 1 ---&gt; 0<br>\n1 xnor 0 ---&gt; 0<br>\n1 xnor 1 ---&gt; 1</p>\n<p>Boolean Arithmetic: Basic Identities:</p>\n<p>(ignore the dot/period in front, that was/is to prevent the posting code from displaying the bullet symbol instead, lol)</p>\n<p>. + === OR<br>\n. * === AND<br>\n. ' === Negation (\"not\") / 1st Complement</p>\n<p>AB === A * B === AND</p>\n<p>(the 'X' represents a \"don't care\" state: it can be '0' or '1', as it doesn't matter)</p>\n<p>// basic truth table identities (see the 'AND' and 'OR' truth tables above):</p>\n<ol>\n<li>X + 0 = X</li>\n<li>X * 0 = 0</li>\n<li>X + 1 = 1</li>\n<li>X * 1 = X</li>\n<li>X + X = X</li>\n<li>X * X = X</li>\n<li>X + X' = 1</li>\n<li>X * X' = 0<br>\n// these are similar to ordinary algebra:</li>\n<li>X + Y = Y + X</li>\n<li>X * Y = Y * X</li>\n<li>X + (Y + Z) = (X + Y) + Z</li>\n<li>X * (Y * Z) = (X * Y) * Z</li>\n<li>X * (Y + Z) = (X * Y) + (X * Z)<br>\n// this is the NON-Algebra (aka, the seemingly weird) one (purely boolean logic):</li>\n<li>X + (Y * X) = (X + Y) * (X + Z)<br>\n// DeMorgan's Rules/Theorems:</li>\n<li>(X + Y)' = (X') * (Y')</li>\n<li>(X * Y)' = (X') + (Y')<br>\n// simple double negation/1st-complement rule (similar to: --1 = 1, ---1 = -1):</li>\n<li>(X')' = X</li>\n</ol>\n\n",
      "PostDate": "2017-09-19T01:43:36.6501044Z",
      "LastEditDate": "2017-09-19T01:48:47.3647334Z",
      "link": null
    },
    {
      "PostId": "aa50dd05-2d6c-4cee-96ee-52f074f8c08a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "My normal rule for refactoring is to think: will rearranging this code be quicker than fixing the bug or adding the feature.\r\n\r\nIf I have a batch of copy/pasted case statements, and some calculation might go wrong if I missed changing one of the object names, I usually find that reducing it to a single case is quicker than poring over the code making sure every name is right.\r\nMore complex refactoring, I'll put off until the code does everything it's supposed to do.",
      "EditableFormat": "markdown",
      "HTML": "<p>My normal rule for refactoring is to think: will rearranging this code be quicker than fixing the bug or adding the feature.</p>\n<p>If I have a batch of copy/pasted case statements, and some calculation might go wrong if I missed changing one of the object names, I usually find that reducing it to a single case is quicker than poring over the code making sure every name is right.<br>\nMore complex refactoring, I'll put off until the code does everything it's supposed to do.</p>\n\n",
      "PostDate": "2017-09-19T01:58:58.2452258Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "00aa94a2-3684-4af2-8690-f8853d03c82e",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In computer science, calculus comes into play with Game Physics or Lighting. Matrix math is important for moving objects within the game world. In business, mathematics is rarely used directly by people anymore (I'd know, I have a Bachelors in General Business). Sure you might use Excel to calculate the beta value of a company on the stock market, or the partial derivative for some high-level macroeconomics, but in general math isn't used. However, if you are in Accounting, you have to do math often, and the same goes for those in Logistics. Finance people rarely use calculators, except when it is forced upon them in classes; they have programs that do the work for them.\r\n\r\nIts possible the bug with the applying Shield Spikes was a single white space. That would be extremely hard to notice and might explain why replacing the variable with a brand new one, solved the issue.\r\n\r\nIn programming, there is designers and developers. Designers design systems and love redesigning code. Developers create code and love seeing the code in action, and not necessarily enjoy refactoring old code. You might do better as a Designer, than a Developer. Sometimes, people have to don both hats, and be both a designer and a developer, as the situation needs it. But that's not for everyone.\r\n\r\nYou remind me of why I didn't like Discrete Computational Math; looking at that stuff makes my head hurt. XD\r\n\r\n ",
      "EditableFormat": "markdown",
      "HTML": "<p>In computer science, calculus comes into play with Game Physics or Lighting. Matrix math is important for moving objects within the game world. In business, mathematics is rarely used directly by people anymore (I'd know, I have a Bachelors in General Business). Sure you might use Excel to calculate the beta value of a company on the stock market, or the partial derivative for some high-level macroeconomics, but in general math isn't used. However, if you are in Accounting, you have to do math often, and the same goes for those in Logistics. Finance people rarely use calculators, except when it is forced upon them in classes; they have programs that do the work for them.</p>\n<p>Its possible the bug with the applying Shield Spikes was a single white space. That would be extremely hard to notice and might explain why replacing the variable with a brand new one, solved the issue.</p>\n<p>In programming, there is designers and developers. Designers design systems and love redesigning code. Developers create code and love seeing the code in action, and not necessarily enjoy refactoring old code. You might do better as a Designer, than a Developer. Sometimes, people have to don both hats, and be both a designer and a developer, as the situation needs it. But that's not for everyone.</p>\n<p>You remind me of why I didn't like Discrete Computational Math; looking at that stuff makes my head hurt. XD</p>\n\n",
      "PostDate": "2017-09-19T06:05:04.4478685Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6662944a-0f45-48b5-b964-dceb2afeb47c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Logic is not for everyone, and working with symbolic arithmetic, and heavy math, makes it even more not for everyone.\r\n\r\nSymbolic Logic (and thus as arithmetic equations) of Philosophy/Logic (though also used/useful for mathematics, programming, circuitry design, human languages, etc):\r\n\r\n(I don't know what discreet mathematics is, as I've not taking the class: linear algebra, discreet mathematics, are courses I think I got to take after calc 2, but it sounds like its at least a bit similar to Symbolic Logic, or at least uses it, anyways)\r\n\r\n1. mathematics\r\n2. programming\r\n3. circuitry design\r\n4. human languages\r\n5. etc\r\n\r\n--------------\r\n\r\nI think if you took a 'Symbolic Logic' class (or just study up on it online for free), it'd help you understand this stuff better, as it does a good job of getting into this stuff and of understanding it well. We had to take it, to help us with understanding boolean logic in programming as our programming required classes. It dealt only with human languages, but it teaches you to understand how it works very well and to be good at it.",
      "EditableFormat": "markdown",
      "HTML": "<p>Logic is not for everyone, and working with symbolic arithmetic, and heavy math, makes it even more not for everyone.</p>\n<p>Symbolic Logic (and thus as arithmetic equations) of Philosophy/Logic (though also used/useful for mathematics, programming, circuitry design, human languages, etc):</p>\n<p>(I don't know what discreet mathematics is, as I've not taking the class: linear algebra, discreet mathematics, are courses I think I got to take after calc 2, but it sounds like its at least a bit similar to Symbolic Logic, or at least uses it, anyways)</p>\n<ol>\n<li>mathematics</li>\n<li>programming</li>\n<li>circuitry design</li>\n<li>human languages</li>\n<li>etc</li>\n</ol>\n<hr>\n<p>I think if you took a 'Symbolic Logic' class (or just study up on it online for free), it'd help you understand this stuff better, as it does a good job of getting into this stuff and of understanding it well. We had to take it, to help us with understanding boolean logic in programming as our programming required classes. It dealt only with human languages, but it teaches you to understand how it works very well and to be good at it.</p>\n\n",
      "PostDate": "2017-09-19T16:20:35.7239497Z",
      "LastEditDate": "2017-09-19T16:21:23.8948449Z",
      "link": null
    },
    {
      "PostId": "139e9a52-b167-4269-8c79-179587968db5",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It depends on what type of logic we are talking about.\r\n\r\nI read an article that said an old people from some thousands of years ago, probably the Syrians, had a form of trigonemtry that used right angles, not sins and cosine, and what not. It's supposed to be simpler than the trigonometry we learn in school.\r\nWell, they tried to teach me modern Trigonometry in Algebra 2, which didn't work because we had a substitute or whatever you call it (the other teacher was pregnant). That wasted my time.\r\n(I learned enough trigonometry that, at the time, I was right 50% of the time. But, I couldn't tell you what I did wrong on the ones I got wrong. Now, I don't even remember the steps to the problems.)\r\n\r\nWhat kind of logic is it that there is a better and simpler trigonometry, and yet we toil with the one we already have?",
      "EditableFormat": "markdown",
      "HTML": "<p>It depends on what type of logic we are talking about.</p>\n<p>I read an article that said an old people from some thousands of years ago, probably the Syrians, had a form of trigonemtry that used right angles, not sins and cosine, and what not. It's supposed to be simpler than the trigonometry we learn in school.<br>\nWell, they tried to teach me modern Trigonometry in Algebra 2, which didn't work because we had a substitute or whatever you call it (the other teacher was pregnant). That wasted my time.<br>\n(I learned enough trigonometry that, at the time, I was right 50% of the time. But, I couldn't tell you what I did wrong on the ones I got wrong. Now, I don't even remember the steps to the problems.)</p>\n<p>What kind of logic is it that there is a better and simpler trigonometry, and yet we toil with the one we already have?</p>\n\n",
      "PostDate": "2017-09-19T16:56:48.3696449Z",
      "LastEditDate": "2017-09-19T17:01:01.1554414Z",
      "link": null
    },
    {
      "PostId": "456313ba-73f9-43e6-a2e7-679bcbe3edcc",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "trig is more useful, as nature/universe works with curves (and recursion/fractals), not lines (humans love lines, look at all of our rectangle/triangle/etc buildings), and the cosine is everywhere in nature/universe, engineers love the cosine.\r\n\r\nnature/universe uses curves and recursion/fractals, humans use lines.\r\n\r\nif interested on recursion/fractals:\r\n\r\nhttps://www.youtube.com/watch?v=w4t63uQhoYk (Fractals: the Hidden Dimension, by Nova)\r\n\r\ngreat vid (except I found the historical stuff on van bradenbroff --- can't spell, lol --- very boring, but the rest of the vid is awesome)",
      "EditableFormat": "markdown",
      "HTML": "<p>trig is more useful, as nature/universe works with curves (and recursion/fractals), not lines (humans love lines, look at all of our rectangle/triangle/etc buildings), and the cosine is everywhere in nature/universe, engineers love the cosine.</p>\n<p>nature/universe uses curves and recursion/fractals, humans use lines.</p>\n<p>if interested on recursion/fractals:</p>\n<p>https://www.youtube.com/watch?v=w4t63uQhoYk (Fractals: the Hidden Dimension, by Nova)</p>\n<p>great vid (except I found the historical stuff on van bradenbroff --- can't spell, lol --- very boring, but the rest of the vid is awesome)</p>\n\n",
      "PostDate": "2017-09-19T18:31:46.433914Z",
      "LastEditDate": "2017-09-19T18:37:10.9005466Z",
      "link": null
    },
    {
      "PostId": "e5deee9c-c09b-4931-9b0e-5c932f71d8fe",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think humans like lines, because they are simple. There always seems to be a call in life, to try and simple things down, to ask complex questions and expect simple answers/solutions. Fractals are complex, and thus people don't like them. Engineers might like them, because they like complex things and making other complex things... and hate trying to explain their complex things to simple people who want simple answers. :)\r\n\r\nNature/Universe is a complex beast of very complex mathematics, chemistry and physics. ",
      "EditableFormat": "markdown",
      "HTML": "<p>I think humans like lines, because they are simple. There always seems to be a call in life, to try and simple things down, to ask complex questions and expect simple answers/solutions. Fractals are complex, and thus people don't like them. Engineers might like them, because they like complex things and making other complex things... and hate trying to explain their complex things to simple people who want simple answers. :)</p>\n<p>Nature/Universe is a complex beast of very complex mathematics, chemistry and physics.</p>\n\n",
      "PostDate": "2017-09-19T19:42:32.0418113Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
