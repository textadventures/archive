{
  "Topic": {
    "TopicId": "scvtfwajvkswybbcwcqbnq",
    "ForumId": "10",
    "Title": "Are .CS files in a published .QUEST file",
    "LastUpdated": "2020-09-29T10:53:35.9086646Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "330795ff-d248-4b8f-bdc5-bd7605da5594",
      "UserId": 493549,
      "Username": "mattgmr1",
      "AvatarUrl": "https://i.imgur.com/iN86YP8b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "When you publish a game from the desktop editor, is it also including a copy of all the .CS files from /WorldModel?  \r\n\r\nIf they are included, then this raises the possibility of altering some of these to suit the game.",
      "EditableFormat": "markdown",
      "HTML": "<p>When you publish a game from the desktop editor, is it also including a copy of all the .CS files from /WorldModel?</p>\n<p>If they are included, then this raises the possibility of altering some of these to suit the game.</p>\n\n",
      "PostDate": "2020-09-29T10:53:35.9086646Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b826cce1-79ed-4158-b11a-91a583d5b9c8",
      "UserId": 924,
      "Username": "Pertex",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4cc1e52f99452e841ecf4cbee9eadde9?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "CS-Files? You mean C#-Files? No, they are not in a published game file",
      "EditableFormat": "markdown",
      "HTML": "<p>CS-Files? You mean C#-Files? No, they are not in a published game file</p>\n\n",
      "PostDate": "2020-09-29T10:57:55.4019207Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1ac2dfa1-3fcd-4091-9985-a3807f9a0310",
      "UserId": 493549,
      "Username": "mattgmr1",
      "AvatarUrl": "https://i.imgur.com/iN86YP8b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well, that sucks. I was looking for an easy way to suppress error messages, like commenting out line 1095 of WorldModel.cs.  It would be great if error messages had a CSS class that could then be hidden.  Maybe there's a jQuery word search routine I could run to hide them. I'll post if I figure it out.",
      "EditableFormat": "markdown",
      "HTML": "<p>Well, that sucks. I was looking for an easy way to suppress error messages, like commenting out line 1095 of WorldModel.cs.  It would be great if error messages had a CSS class that could then be hidden.  Maybe there's a jQuery word search routine I could run to hide them. I'll post if I figure it out.</p>\n\n",
      "PostDate": "2020-09-29T12:35:49.1031202Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3be94827-f836-459f-803d-b6bf2a05e2a6",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wouldn't it be better to fix whatever is generating the error messages?\r\n\r\nIf you really want to suppress error messages, you can do it easily enough within Quest script. Just redefine the function `OutputText`.\r\n\r\nFor example…\r\n```\r\n  <function name=\"OutputText\" parameters=\"text\">\r\n    if (StartsWith (text, \"Error running script: \")) {\r\n      JS.console.log(text)\r\n    }\r\n    else {\r\n      OutputTextRaw (ProcessText (text))\r\n    }\r\n</function>\r\n```\r\n\r\nOr if you're using the web editor and so can't modify the core functions, do it in Javascript in the UI initialisation script:\r\n```\r\nJS.eval(\"$(function () {var a=addText;addText=function(t){(t.match(/>Error running script: /)?console.log:a)(t)};})\")\r\n```\r\nEdit: removed typo, changed `..` to `.`",
      "EditableFormat": "markdown",
      "HTML": "<p>Wouldn't it be better to fix whatever is generating the error messages?</p>\n<p>If you really want to suppress error messages, you can do it easily enough within Quest script. Just redefine the function <code>OutputText</code>.</p>\n<p>For example…</p>\n<pre><code>  &lt;function name=\"OutputText\" parameters=\"text\"&gt;\n    if (StartsWith (text, \"Error running script: \")) {\n      JS.console.log(text)\n    }\n    else {\n      OutputTextRaw (ProcessText (text))\n    }\n&lt;/function&gt;\n</code></pre>\n<p>Or if you're using the web editor and so can't modify the core functions, do it in Javascript in the UI initialisation script:</p>\n<pre><code>JS.eval(\"$(function () {var a=addText;addText=function(t){(t.match(/&gt;Error running script: /)?console.log:a)(t)};})\")\n</code></pre>\n<p>Edit: removed typo, changed <code>..</code> to <code>.</code></p>\n\n",
      "PostDate": "2020-09-29T13:13:08.215643Z",
      "LastEditDate": "2020-09-29T13:13:51.4793233Z",
      "link": null
    },
    {
      "PostId": "f72d6e68-f252-4557-8e89-75d04a97ec84",
      "UserId": 493549,
      "Username": "mattgmr1",
      "AvatarUrl": "https://i.imgur.com/iN86YP8b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Fantastic. Thanks, mrangel.\r\n\r\nYes, of course I would rather debug whatever is causing the error. This is more as a final step before launch, when I'm sure the game is running how I want, and any random runtime error messages would only serve to distract the player.",
      "EditableFormat": "markdown",
      "HTML": "<p>Fantastic. Thanks, mrangel.</p>\n<p>Yes, of course I would rather debug whatever is causing the error. This is more as a final step before launch, when I'm sure the game is running how I want, and any random runtime error messages would only serve to distract the player.</p>\n\n",
      "PostDate": "2020-09-29T17:32:56.4295848Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
