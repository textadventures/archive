{
  "Topic": {
    "TopicId": "hw4nthqmekyra5aya_tpwg",
    "ForumId": "10",
    "Title": "How to make choices influence the ending",
    "LastUpdated": "2021-02-11T13:01:42.3376647Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "2a078a42-ec30-4304-b233-d3b410c78aef",
      "UserId": 529211,
      "Username": "Floating_Turtles",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b525591cd98880917e2d0855a2cbb9f6?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The game I want to create has several choices!\r\n\r\nFor example 12 choices  pushing towards a bad, neutral, or good ending.\r\n\r\nHow do I make the game calculate what ending the player  got, based on their choices, on it's own?",
      "EditableFormat": "markdown",
      "HTML": "<p>The game I want to create has several choices!</p>\n<p>For example 12 choices  pushing towards a bad, neutral, or good ending.</p>\n<p>How do I make the game calculate what ending the player  got, based on their choices, on it's own?</p>\n\n",
      "PostDate": "2021-02-11T13:01:42.3376647Z",
      "LastEditDate": "2021-02-11T13:02:49.2071844Z",
      "link": null
    },
    {
      "PostId": "d8182f9b-92c0-414d-9fff-a2bdd823c693",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You'll want to record which choices the player took, and use those to decide on the ending.\r\n\r\nOne option would be to set a flag for each of the choices, and then check for combinations of those flags to decide what ending to show.\r\n\r\nAnother option would be keeping some kind of bad/good counter; when the player makes a choice, it increases or decreases the counter, and then at the end the game  uses the value of the counter to choose an ending.\r\n\r\nWhich method works best will depend on your game. And there are plenty of other choices.\r\nIf you want more advice on how to implement this system, you should first decide what you want the system to do and how it should make the decision.",
      "EditableFormat": "markdown",
      "HTML": "<p>You'll want to record which choices the player took, and use those to decide on the ending.</p>\n<p>One option would be to set a flag for each of the choices, and then check for combinations of those flags to decide what ending to show.</p>\n<p>Another option would be keeping some kind of bad/good counter; when the player makes a choice, it increases or decreases the counter, and then at the end the game  uses the value of the counter to choose an ending.</p>\n<p>Which method works best will depend on your game. And there are plenty of other choices.<br>\nIf you want more advice on how to implement this system, you should first decide what you want the system to do and how it should make the decision.</p>\n\n",
      "PostDate": "2021-02-11T13:42:30.3438219Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cf8f54c7-16fc-41d5-8449-e4edcf390e07",
      "UserId": 529211,
      "Username": "Floating_Turtles",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b525591cd98880917e2d0855a2cbb9f6?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you, I'd like to do the first option with the flags. How would I go about implementing that?",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you, I'd like to do the first option with the flags. How would I go about implementing that?</p>\n\n",
      "PostDate": "2021-02-11T15:52:45.8713431Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "97edf14f-2dda-4ef0-bb0f-004deb05b2bd",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I would use attributes. It's just numbers.\r\n\r\nIf (game.ending = 12) {\r\n}\r\n\r\nBut using Booleans would be like this...\r\nIf (game.12 = true) {\r\n}\r\nIf (game. 11 = true) {\r\n}\r\nI haven't used flags since I worked with Scratch and I don't plan on using flags ever again.",
      "EditableFormat": "markdown",
      "HTML": "<p>I would use attributes. It's just numbers.</p>\n<p>If (game.ending = 12) {<br>\n}</p>\n<p>But using Booleans would be like this...<br>\nIf (game.12 = true) {<br>\n}<br>\nIf (game. 11 = true) {<br>\n}<br>\nI haven't used flags since I worked with Scratch and I don't plan on using flags ever again.</p>\n\n",
      "PostDate": "2021-02-11T17:13:22.4516364Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "992fb202-88ab-4ce6-90ea-e390f051456f",
      "UserId": 529211,
      "Username": "Floating_Turtles",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b525591cd98880917e2d0855a2cbb9f6?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks for the option! Once I try it out, I'll report any changes I see.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks for the option! Once I try it out, I'll report any changes I see.</p>\n\n",
      "PostDate": "2021-02-12T01:26:40.432462Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9122399c-c2d4-4f64-8f93-cd1ec14be57c",
      "UserId": 529211,
      "Username": "Floating_Turtles",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b525591cd98880917e2d0855a2cbb9f6?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Now that I've begun working on the game, how would I go about using either the flag or attribute systems to influence the ending? (I'm a beginner so I'm grateful to any long explanations! :)",
      "EditableFormat": "markdown",
      "HTML": "<p>Now that I've begun working on the game, how would I go about using either the flag or attribute systems to influence the ending? (I'm a beginner so I'm grateful to any long explanations! :)</p>\n\n",
      "PostDate": "2021-02-14T20:28:00.7251652Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7f454b80-ffa5-4303-86a7-d5b10570617c",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You need to set the flag before you use any if statements.\r\n\r\nThis is how you set a flag.\r\n```\r\nSetObjectFlagOn (player, \"Flag1\")\r\n```\r\nThen you need to use an if statement to do what you want or get the ending you want.\r\nThis is how you use an if statement.\r\n```\r\nif (GetBoolean(player, \"Flag1\")) {\r\n  msg (\"Hello world!\")\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>You need to set the flag before you use any if statements.</p>\n<p>This is how you set a flag.</p>\n<pre><code>SetObjectFlagOn (player, \"Flag1\")\n</code></pre>\n<p>Then you need to use an if statement to do what you want or get the ending you want.<br>\nThis is how you use an if statement.</p>\n<pre><code>if (GetBoolean(player, \"Flag1\")) {\n  msg (\"Hello world!\")\n}\n</code></pre>\n\n",
      "PostDate": "2021-02-15T00:59:59.0727538Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9b408f1b-5e73-401a-9831-85573c205525",
      "UserId": 529211,
      "Username": "Floating_Turtles",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b525591cd98880917e2d0855a2cbb9f6?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you !! I think I'll experiment with it for a few days! If I need any help I'll start it under a more specific topic :D",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you !! I think I'll experiment with it for a few days! If I need any help I'll start it under a more specific topic :D</p>\n\n",
      "PostDate": "2021-02-15T11:43:57.3356359Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9d56d384-1b86-4f6d-9aaa-db2039f7dcb7",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**Endings on a scale**\r\n\r\nOne common way to do multiple endings is to use a single scale. If there's a number of choices in the game, and each one has a \"right answer\", then you can keep a count of how many right answers the player gave.\r\n\r\nFor example, at the start of the game you could give the game a `right_choices` attribute. Either creating the attribute on the attributes tab (assuming you're using the desktop version â€“ the online editor can't do this method) and making sure that its type is 'int', or creating it in the start script like this:\r\n```\r\ngame.right_choices = 0\r\n```\r\nThen each time the player makes a right choice, you would have something like:\r\n```\r\ngame.right_choices = game.right_choices + 1\r\n```\r\nand at the end of the game, you'd have something like:\r\n<pre><code>if (game.right_choices >= 12) {\r\n  <em style=\"color: blue; font-family: initial\">insert code for the good ending (12+ right  choices) here</em>\r\n}\r\nelse if (game.right_choices >= 4) {\r\n  <em style=\"color: blue; font-family: initial\">insert code for the neutral ending (4+ right choices) here</em>\r\n}\r\nelse {\r\n  <em style=\"color: blue; font-family: initial\">insert code for the bad ending (less than 4 right choices) here</em>\r\n}</code></pre>\r\n\r\nA similar system is used by games where you might have 'good', 'neutral', and 'evil' choices that influence the ending. In this case, you could add to the number for good choices and subtract from it for evil ones. In this case, the neutral ending would probably be for scores between -6 and 6 or similar.\r\n\r\nYou could also fine tune this system by having some decisions add more than one point onto the attribute, so they have more effect on which ending the player gets. \r\n\r\n**More granular ending options (using flags)**\r\n\r\nIf your choices aren't just a straight scale, you might want to set flags instead, to keep track of which choices the player made.\r\n\r\nFor example, if one of the choices is whether or not you give a flower to an NPC, then in the 'give object' script you might have something like:\r\n```\r\nmsg (\"She takes the flower and thanks you\")\r\nRemoveObject (flower)\r\ngame.gave_jane_flower = true\r\n```\r\nYou could alternatively put the flag on the npc:\r\n* `jane.given_flower = true`\r\nor on the flower:\r\n* `flower.given_to_jane = true`\r\nOr you could choose to use the function SetObjectFlagOn, which does exactly the same thing but slightly less efficiently:\r\n* `SetObjectFlagOn (game, \"gave_jane_flower\")`\r\n* or `SetObjectFlagOn (jane, \"given_flower\")`\r\n(these functions do exactly the same as the lines above; they just look slightly prettier in the script GUI)\r\n\r\nIt doesn't matter which object you put the flag on, just so long as you use the same object everywhere you refer to it. And then at the end of the game, you'd choose an ending based on which choices have been made. For example:\r\n<pre><code>if (GetBoolean (game, \"gave_jane_flower\") <b style=\"color: green\">and</b> GetBoolean (game, \"fixed_roof\") <b style=\"color: green\">and</b> <b style=\"color: red\">not</b> GetBoolean (game, \"stole_weasels\")) {\r\n  <em style=\"color: blue; font-family: initial\">first ending goes here</em>\r\n}\r\nelse if (GetBoolean (game, \"gave_jane_hammer\") <b style=\"color: green\">and</b> <b style=\"color: purple\">(</b>GetBoolean (game, \"fixed_roof\") <b style=\"color: purple\">or</b> GetBoolean (game, \"painted_spare_room\")<b style=\"color: purple\">)</b>) {\r\n  <em style=\"color: blue; font-family: initial\">here's another ending, chosen by a different selection of choices</em>\r\n  if (GetBoolean (game, \"helped_danny\")) {\r\n    <em style=\"color: blue; font-family: initial\">doing it like this, you have the option to include optional parts of the endings based on which combination of options the player chose</em>\r\n    msg (\"And Danny will always be grateful for the help you gave him.\")\r\n  }\r\n}\r\nelse if (GetBoolean (game, \"crashed_car\") <b style=\"color: purple\">or</b> GetBoolean (game, \"stole_fish\")) {\r\n  <em style=\"color: blue; font-family: initial\">this one is probably a bad ending</em>\r\n}\r\nelse {\r\n  <em style=\"color: blue; font-family: initial\">and finally we have a default ending, for if the player doesn't meet the criteria for any of the others</em>\r\n}</code></pre>\r\n\r\nHope that makes sense :)\r\n\r\nIt's worth noting that if you use the individual flags, you can replace `GetBoolean (game, \"name_of_flag\")` with just <code style=\"color: green\">game.name_of_flag</code>, which makes your code shorter. But if you do this, you will need to make sure to set the flag to `false` if the player doesn't take that choice. It depends on the game whether it's simpler just to use `GetBoolean`.\r\n(GetBoolean basically asks \"is this true\" â€“ it treats an undefined attribute (or an attribute with any value other than `true`) as being `false)\r\n\r\nHope that makes sense and I'm not rambling too much.",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>Endings on a scale</strong></p>\n<p>One common way to do multiple endings is to use a single scale. If there's a number of choices in the game, and each one has a \"right answer\", then you can keep a count of how many right answers the player gave.</p>\n<p>For example, at the start of the game you could give the game a <code>right_choices</code> attribute. Either creating the attribute on the attributes tab (assuming you're using the desktop version â€“ the online editor can't do this method) and making sure that its type is 'int', or creating it in the start script like this:</p>\n<pre><code>game.right_choices = 0\n</code></pre>\n<p>Then each time the player makes a right choice, you would have something like:</p>\n<pre><code>game.right_choices = game.right_choices + 1\n</code></pre>\n<p>and at the end of the game, you'd have something like:</p>\n<pre><code>if (game.right_choices &gt;= 12) {\n  <em style=\"color: blue; font-family: initial\">insert code for the good ending (12+ right  choices) here</em>\n}\nelse if (game.right_choices &gt;= 4) {\n  <em style=\"color: blue; font-family: initial\">insert code for the neutral ending (4+ right choices) here</em>\n}\nelse {\n  <em style=\"color: blue; font-family: initial\">insert code for the bad ending (less than 4 right choices) here</em>\n}</code></pre>\n<p>A similar system is used by games where you might have 'good', 'neutral', and 'evil' choices that influence the ending. In this case, you could add to the number for good choices and subtract from it for evil ones. In this case, the neutral ending would probably be for scores between -6 and 6 or similar.</p>\n<p>You could also fine tune this system by having some decisions add more than one point onto the attribute, so they have more effect on which ending the player gets.</p>\n<p><strong>More granular ending options (using flags)</strong></p>\n<p>If your choices aren't just a straight scale, you might want to set flags instead, to keep track of which choices the player made.</p>\n<p>For example, if one of the choices is whether or not you give a flower to an NPC, then in the 'give object' script you might have something like:</p>\n<pre><code>msg (\"She takes the flower and thanks you\")\nRemoveObject (flower)\ngame.gave_jane_flower = true\n</code></pre>\n<p>You could alternatively put the flag on the npc:</p>\n<ul>\n<li><code>jane.given_flower = true</code><br>\nor on the flower:</li>\n<li><code>flower.given_to_jane = true</code><br>\nOr you could choose to use the function SetObjectFlagOn, which does exactly the same thing but slightly less efficiently:</li>\n<li><code>SetObjectFlagOn (game, \"gave_jane_flower\")</code></li>\n<li>or <code>SetObjectFlagOn (jane, \"given_flower\")</code><br>\n(these functions do exactly the same as the lines above; they just look slightly prettier in the script GUI)</li>\n</ul>\n<p>It doesn't matter which object you put the flag on, just so long as you use the same object everywhere you refer to it. And then at the end of the game, you'd choose an ending based on which choices have been made. For example:</p>\n<pre><code>if (GetBoolean (game, \"gave_jane_flower\") <b style=\"color: green\">and</b> GetBoolean (game, \"fixed_roof\") <b style=\"color: green\">and</b> <b style=\"color: red\">not</b> GetBoolean (game, \"stole_weasels\")) {\n  <em style=\"color: blue; font-family: initial\">first ending goes here</em>\n}\nelse if (GetBoolean (game, \"gave_jane_hammer\") <b style=\"color: green\">and</b> <b style=\"color: purple\">(</b>GetBoolean (game, \"fixed_roof\") <b style=\"color: purple\">or</b> GetBoolean (game, \"painted_spare_room\")<b style=\"color: purple\">)</b>) {\n  <em style=\"color: blue; font-family: initial\">here's another ending, chosen by a different selection of choices</em>\n  if (GetBoolean (game, \"helped_danny\")) {\n    <em style=\"color: blue; font-family: initial\">doing it like this, you have the option to include optional parts of the endings based on which combination of options the player chose</em>\n    msg (\"And Danny will always be grateful for the help you gave him.\")\n  }\n}\nelse if (GetBoolean (game, \"crashed_car\") <b style=\"color: purple\">or</b> GetBoolean (game, \"stole_fish\")) {\n  <em style=\"color: blue; font-family: initial\">this one is probably a bad ending</em>\n}\nelse {\n  <em style=\"color: blue; font-family: initial\">and finally we have a default ending, for if the player doesn't meet the criteria for any of the others</em>\n}</code></pre>\n<p>Hope that makes sense :)</p>\n<p>It's worth noting that if you use the individual flags, you can replace <code>GetBoolean (game, \"name_of_flag\")</code> with just <code style=\"color: green\">game.name_of_flag</code>, which makes your code shorter. But if you do this, you will need to make sure to set the flag to <code>false</code> if the player doesn't take that choice. It depends on the game whether it's simpler just to use <code>GetBoolean</code>.<br>\n(GetBoolean basically asks \"is this true\" â€“ it treats an undefined attribute (or an attribute with any value other than <code>true</code>) as being `false)</p>\n<p>Hope that makes sense and I'm not rambling too much.</p>\n\n",
      "PostDate": "2021-02-15T13:49:27.3875898Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0ab54dcb-3c4f-45b6-8d14-94ee1f240d0b",
      "UserId": 529211,
      "Username": "Floating_Turtles",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b525591cd98880917e2d0855a2cbb9f6?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "TYSM! This is so helpful! I can really get started on it now ",
      "EditableFormat": "markdown",
      "HTML": "<p>TYSM! This is so helpful! I can really get started on it now</p>\n\n",
      "PostDate": "2021-02-16T11:44:42.5291817Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
