{
  "Topic": {
    "TopicId": "wgu4dc9thksyqpjp-lcwfg",
    "ForumId": "10",
    "Title": "Creating a Save file and being able to Load the file",
    "LastUpdated": "2018-04-22T12:05:25.4969302Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "c3615b26-4f4d-4089-a3c7-292c5351d5d7",
      "UserId": 341201,
      "Username": "Raist",
      "AvatarUrl": "https://i.imgur.com/0UTKrlab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Good day everyone,\r\n\r\nOff and on I've been working with KV on QuestJS features and upgrades, while ironing out issues with my game(s). Having some Save functionality isn't mission critical, but mission handy certainly. I understand Quest has built in Save functionality already, so allow me to skip to the reason for this post:\r\n\r\nI'm using Quest 5.7.1 and QuestJS 6.1.3 to convert my game to HTML and then I'm uploading those files to my own webserver and providing direct links to each game. Currently, if you are playing a game in your browser, temporary Internet files are created, but these only store generic information about the webpage information. I tried copying all of them to a different location, deleting my temp files, copying the files back and then trying to load the game...which did not work (formatting was completely messed up). I did some searching through the forums, but I didn't find anything that was the direction I am trying to move in. Feel free to post a link if I missed something though.\r\n\r\nI am less concerned with saving progress in a Quest, versus saving Items the player receives (like weapons, armor, etc). I plan on having a separate library for all of those items, so they will exist in every game. I just need a way to have Quest save a list (maybe generate a hash code the player could copy/paste which contains all the info) and then load that for any game they decide to play. This also has to work with QuestJS as well, because if the export breaks the functionality, that doesn't help. LOL\r\n\r\nThanks in advance everyone!\r\n\r\nRaist\r\n\r\nEDIT:\r\nI just saw this post as well: <a> https://textadventures.co.uk/forum/quest/topic/80ihbe5euuuhifgj5i4dtw/recording-player-activity</a>\r\n<blockquote>\r\nPertex -\r\nYou are right. With the next version you can call external PHP-scripts. With that you can save information on your own webserver. I provide some scripts to provide e.g. a highscore functionality or to generate walkthroughs from the player's input. Of course, this only works if the player has an online connection, but that should be standard nowadays.\r\n</blockquote>\r\n\r\nThis might provide the answer, unless there is an easier way to do what I'm aiming for.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Good day everyone,</p>\n<p>Off and on I've been working with KV on QuestJS features and upgrades, while ironing out issues with my game(s). Having some Save functionality isn't mission critical, but mission handy certainly. I understand Quest has built in Save functionality already, so allow me to skip to the reason for this post:</p>\n<p>I'm using Quest 5.7.1 and QuestJS 6.1.3 to convert my game to HTML and then I'm uploading those files to my own webserver and providing direct links to each game. Currently, if you are playing a game in your browser, temporary Internet files are created, but these only store generic information about the webpage information. I tried copying all of them to a different location, deleting my temp files, copying the files back and then trying to load the game...which did not work (formatting was completely messed up). I did some searching through the forums, but I didn't find anything that was the direction I am trying to move in. Feel free to post a link if I missed something though.</p>\n<p>I am less concerned with saving progress in a Quest, versus saving Items the player receives (like weapons, armor, etc). I plan on having a separate library for all of those items, so they will exist in every game. I just need a way to have Quest save a list (maybe generate a hash code the player could copy/paste which contains all the info) and then load that for any game they decide to play. This also has to work with QuestJS as well, because if the export breaks the functionality, that doesn't help. LOL</p>\n<p>Thanks in advance everyone!</p>\n<p>Raist</p>\n<p>EDIT:<br>\nI just saw this post as well: <a> https://textadventures.co.uk/forum/quest/topic/80ihbe5euuuhifgj5i4dtw/recording-player-activity</a></p>\n<blockquote>\nPertex -\nYou are right. With the next version you can call external PHP-scripts. With that you can save information on your own webserver. I provide some scripts to provide e.g. a highscore functionality or to generate walkthroughs from the player's input. Of course, this only works if the player has an online connection, but that should be standard nowadays.\n</blockquote>\n<p>This might provide the answer, unless there is an easier way to do what I'm aiming for.</p>\n\n",
      "PostDate": "2018-04-22T12:05:25.4969302Z",
      "LastEditDate": "2018-04-22T12:22:48.4715476Z",
      "link": null
    },
    {
      "PostId": "7e06173a-a552-4cd3-a261-2c893cf95cd0",
      "UserId": 341201,
      "Username": "Raist",
      "AvatarUrl": "https://i.imgur.com/0UTKrlab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I thought I was getting close with Saving an object, but maybe I'm not \"targeting\" the attributes for the objects correctly...I created a function called SaveObject:\r\n```\r\n<function name=\"SaveObject\" parameters=\"object\"><![CDATA[\r\n    if (object.attribute <> null) {\r\n      foreach (att, object.attribute) {\r\n        attr = NewStringList()\r\n        foreach (o, list) {\r\n          list add (attr, GetString(o, att))\r\n        }\r\n        return (attr)\r\n        msg (ListItem(attr))\r\n      }\r\n      set (object, \"save\", ListItem(attr))\r\n    }\r\n  ]]></function>\r\n```\r\n\r\nThis should grab ALL of the attributes an object has and add them to the StringList attr.\r\n\r\nThen I have a command called Export, which calls SaveObject function and passes the parameter of Object:\r\n```\r\n<command name=\"export\">\r\n    <pattern>export #object#</pattern>\r\n    <unresolved>You cannot save that item.</unresolved>\r\n    <scope>inventory</scope>\r\n    <script>\r\n      if (game.pov = object) {\r\n        PrintCentered (\"You cannot Save yourself. Well you can, but not by playing this game.\")\r\n      }\r\n      else if (not Got(object)) {\r\n        PrintCentered (\"You must be carrying that, in order to Save it.\")\r\n      }\r\n      else {\r\n        SaveObject (object)\r\n      }\r\n    </script>\r\n  </command>\r\n```\r\n\r\nSo in theory, a player can type export spellbook and all those attributes should be added to a StringList. (for testing purposes, it would be nice to see the results, but I also decided to set an additional attribute (save, string) on the object, equal to the StringList(attr), which would be just as good as displaying it in the game window since I can use the Debugger).\r\n\r\nRight now, the save attribute on the object is not being populated. One thing I have not tried yet is creating all of the new Attributes an object can have, adding those to a List and then checking if they are Null or not. If they have a value (whatever it is), save it to the List.\r\n\r\nThere are a lot of scripts in Quest that would work for this, IF I had the reverse of what they do (set object attribute to value, reverse set value to object attribute, for example).",
      "EditableFormat": "markdown",
      "HTML": "<p>I thought I was getting close with Saving an object, but maybe I'm not \"targeting\" the attributes for the objects correctly...I created a function called SaveObject:</p>\n<pre><code>&lt;function name=\"SaveObject\" parameters=\"object\"&gt;&lt;![CDATA[\n    if (object.attribute &lt;&gt; null) {\n      foreach (att, object.attribute) {\n        attr = NewStringList()\n        foreach (o, list) {\n          list add (attr, GetString(o, att))\n        }\n        return (attr)\n        msg (ListItem(attr))\n      }\n      set (object, \"save\", ListItem(attr))\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<p>This should grab ALL of the attributes an object has and add them to the StringList attr.</p>\n<p>Then I have a command called Export, which calls SaveObject function and passes the parameter of Object:</p>\n<pre><code>&lt;command name=\"export\"&gt;\n    &lt;pattern&gt;export #object#&lt;/pattern&gt;\n    &lt;unresolved&gt;You cannot save that item.&lt;/unresolved&gt;\n    &lt;scope&gt;inventory&lt;/scope&gt;\n    &lt;script&gt;\n      if (game.pov = object) {\n        PrintCentered (\"You cannot Save yourself. Well you can, but not by playing this game.\")\n      }\n      else if (not Got(object)) {\n        PrintCentered (\"You must be carrying that, in order to Save it.\")\n      }\n      else {\n        SaveObject (object)\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n</code></pre>\n<p>So in theory, a player can type export spellbook and all those attributes should be added to a StringList. (for testing purposes, it would be nice to see the results, but I also decided to set an additional attribute (save, string) on the object, equal to the StringList(attr), which would be just as good as displaying it in the game window since I can use the Debugger).</p>\n<p>Right now, the save attribute on the object is not being populated. One thing I have not tried yet is creating all of the new Attributes an object can have, adding those to a List and then checking if they are Null or not. If they have a value (whatever it is), save it to the List.</p>\n<p>There are a lot of scripts in Quest that would work for this, IF I had the reverse of what they do (set object attribute to value, reverse set value to object attribute, for example).</p>\n\n",
      "PostDate": "2018-05-06T15:31:36.3426413Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "44d23962-1182-4640-aa66-c913f3486704",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think you're wanting to do something like this:\r\n\r\n```\r\n<function name=\"SaveObject\" parameters=\"object\"><![CDATA[\r\n  atts = GetAttributeNames(object, true)\r\n  attr = NewDictionary()\r\n  foreach (att, atts) {\r\n    dictionary add (attr, att, GetAttribute(object,att))\r\n    msg (DictionaryItem(attr, att))\r\n  }\r\n  set (object, \"save\", attr)\r\n]]></function>\r\n```\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I think you're wanting to do something like this:</p>\n<pre><code>&lt;function name=\"SaveObject\" parameters=\"object\"&gt;&lt;![CDATA[\n  atts = GetAttributeNames(object, true)\n  attr = NewDictionary()\n  foreach (att, atts) {\n    dictionary add (attr, att, GetAttribute(object,att))\n    msg (DictionaryItem(attr, att))\n  }\n  set (object, \"save\", attr)\n]]&gt;&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2018-05-06T15:55:33.928597Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "55aec3e3-6da9-4260-936a-dff14d2f9687",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "EDITED\r\n\r\nThe JS code that used to be here threw an error.\r\n\r\nAfter I watch **Infinity War**, I'll post some JS code (if no one else has by then).",
      "EditableFormat": "markdown",
      "HTML": "<p>EDITED</p>\n<p>The JS code that used to be here threw an error.</p>\n<p>After I watch <strong>Infinity War</strong>, I'll post some JS code (if no one else has by then).</p>\n\n",
      "PostDate": "2018-05-06T16:04:43.5114762Z",
      "LastEditDate": "2018-05-06T18:02:18.5325585Z",
      "link": null
    },
    {
      "PostId": "55a545df-ffd8-4984-9a97-0297e7bd7ca4",
      "UserId": 341201,
      "Username": "Raist",
      "AvatarUrl": "https://i.imgur.com/0UTKrlab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yep, that is it, KV! Thanks again!\r\n\r\nAh! I was close. So one var is grabbing the attribute names and values and the other is creating the new Dictionary (thinking out loud).\r\n\r\nI figured using GetString wasn't going to give me all of the values I wanted (GetString won't grab an Integer I'm assuming). \r\n\r\nFor my future reference; is there a specific reason you used a Dictionary versus a List? Does it matter or will only Dictionary support this type of data?",
      "EditableFormat": "markdown",
      "HTML": "<p>Yep, that is it, KV! Thanks again!</p>\n<p>Ah! I was close. So one var is grabbing the attribute names and values and the other is creating the new Dictionary (thinking out loud).</p>\n<p>I figured using GetString wasn't going to give me all of the values I wanted (GetString won't grab an Integer I'm assuming).</p>\n<p>For my future reference; is there a specific reason you used a Dictionary versus a List? Does it matter or will only Dictionary support this type of data?</p>\n\n",
      "PostDate": "2018-05-06T17:31:54.3203072Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7e8ac60a-d4ca-4e70-9466-eeec76983cc2",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That JS stuff throws an error. I didn't notice until just now.\r\n\r\n---\r\nI just went with a dictionary because it seemed easier to retrieve from that, since it has the keys included.",
      "EditableFormat": "markdown",
      "HTML": "<p>That JS stuff throws an error. I didn't notice until just now.</p>\n<hr>\n<p>I just went with a dictionary because it seemed easier to retrieve from that, since it has the keys included.</p>\n\n",
      "PostDate": "2018-05-06T17:54:51.529244Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8532dad9-eb53-4cc1-8740-1548262971aa",
      "UserId": 341201,
      "Username": "Raist",
      "AvatarUrl": "https://i.imgur.com/0UTKrlab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It worked for me. Not online, just locally though.\r\n\r\nEnjoy the movie!",
      "EditableFormat": "markdown",
      "HTML": "<p>It worked for me. Not online, just locally though.</p>\n<p>Enjoy the movie!</p>\n\n",
      "PostDate": "2018-05-06T18:08:21.2658908Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "daa26062-a391-4ab5-9301-e5fa28a83a4e",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Dictionary Attributes are 'input-output' functionality:\r\n\r\nitem\r\n-> key (input)\r\n-> value (output)\r\n\r\nString Dictionary: string value (input) = string value (output)\r\nObject Dictionary: string value (input) = object value (output)\r\nScript Dictionary: string value (input) = script/s value (output)\r\n\r\nfor an example...\r\n\r\n```\r\nexample_object.example_stringdictionary_attribute = NewStringDictionary ()\r\ndictionary add (example_object.example_stringdictionary_attribute, \"princess\", \"The Princess has been taken by a dragon\")\r\ndictionary add (example_object.example_stringdictionary_attribute, \"dragon\", \"The dragon can only be killed by the dragon slayer sword\")\r\ndictionary add (example_object.example_stringdictionary_attribute, \"sword\", \"An evil wizard has the dragon slayer sword\")\r\ndictionary add (example_object.example_stringdictionary_attribute, \"wizard\", \"The evil wizard can be found in his tower\")\r\n\r\nshow menu (\"Ask About?\", example_object.example_stringdictionary_attribute, false) {\r\n  // princess\r\n  // dragon\r\n  // sword\r\n  // wizard\r\n  msg (StringDictionaryItem (example_object.example_stringdictionary_attribute, result))\r\n  // The Princess has been taken by a dragon! // if princess option chosen\r\n  // or\r\n  // The dragon can only be killed by the dragon slayer sword //  if dragon option chosen\r\n  // or\r\n  // An evil wizard has the dragon slayer sword //  if sword option chosen\r\n  // or\r\n  // The evil wizard can be found in his tower //  if wizard option chosen\r\n}\r\n```\r\n\r\n------------\r\n\r\nyou can convert some/most (not sure about all) Data Types into String Data Types:\r\n\r\nstring_variable = ToString (10)\r\ninteger_variable = ToInt (\"10\")\r\n\r\nstring_variable = ToString (10.123)\r\ninteger_variable = ToDouble (\"10.123\")\r\n\r\nobject_variable = GetObject (\"NAME_OF_OBJECT\")\r\nstring_variable = object_variable.name\r\nobject_variable = GetObject (string_variable)\r\nobject_variable = GetObject (object_variable.name)\r\n\r\nstringlist_variable = Split (\"red;blue;yellow\", \";\")\r\nstring_variable = Join (stringlist_variable, \";\")\r\nstringlist_variable = Split (string_variable, \";\")",
      "EditableFormat": "markdown",
      "HTML": "<p>Dictionary Attributes are 'input-output' functionality:</p>\n<p>item<br>\n-&gt; key (input)<br>\n-&gt; value (output)</p>\n<p>String Dictionary: string value (input) = string value (output)<br>\nObject Dictionary: string value (input) = object value (output)<br>\nScript Dictionary: string value (input) = script/s value (output)</p>\n<p>for an example...</p>\n<pre><code>example_object.example_stringdictionary_attribute = NewStringDictionary ()\ndictionary add (example_object.example_stringdictionary_attribute, \"princess\", \"The Princess has been taken by a dragon\")\ndictionary add (example_object.example_stringdictionary_attribute, \"dragon\", \"The dragon can only be killed by the dragon slayer sword\")\ndictionary add (example_object.example_stringdictionary_attribute, \"sword\", \"An evil wizard has the dragon slayer sword\")\ndictionary add (example_object.example_stringdictionary_attribute, \"wizard\", \"The evil wizard can be found in his tower\")\n\nshow menu (\"Ask About?\", example_object.example_stringdictionary_attribute, false) {\n  // princess\n  // dragon\n  // sword\n  // wizard\n  msg (StringDictionaryItem (example_object.example_stringdictionary_attribute, result))\n  // The Princess has been taken by a dragon! // if princess option chosen\n  // or\n  // The dragon can only be killed by the dragon slayer sword //  if dragon option chosen\n  // or\n  // An evil wizard has the dragon slayer sword //  if sword option chosen\n  // or\n  // The evil wizard can be found in his tower //  if wizard option chosen\n}\n</code></pre>\n<hr>\n<p>you can convert some/most (not sure about all) Data Types into String Data Types:</p>\n<p>string_variable = ToString (10)<br>\ninteger_variable = ToInt (\"10\")</p>\n<p>string_variable = ToString (10.123)<br>\ninteger_variable = ToDouble (\"10.123\")</p>\n<p>object_variable = GetObject (\"NAME_OF_OBJECT\")<br>\nstring_variable = object_variable.name<br>\nobject_variable = GetObject (string_variable)<br>\nobject_variable = GetObject (object_variable.name)</p>\n<p>stringlist_variable = Split (\"red;blue;yellow\", \";\")<br>\nstring_variable = Join (stringlist_variable, \";\")<br>\nstringlist_variable = Split (string_variable, \";\")</p>\n\n",
      "PostDate": "2018-05-06T18:10:17.3264139Z",
      "LastEditDate": "2018-05-06T18:12:58.4178125Z",
      "link": null
    },
    {
      "PostId": "cbfb436c-37c4-41cf-b87c-08843e105ef9",
      "UserId": 341201,
      "Username": "Raist",
      "AvatarUrl": "https://i.imgur.com/0UTKrlab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So just a quick update on where things are with this:\r\n\r\nI figured out that Quest can handle incorporating an iframe for this project. This led me to a whole new world! (I feel almost like Aladin!) :P\r\n\r\nAlright, anyway, using the iframe, and some nifty code from KV (am I driving you nuts with all the emails yet? :\\ ), the output from a function can be copy/pasted into the iframe, encrypted to a hash code for easier local Saving. (just copy/paste the hash code to a text file). The goal then is to be able to copy/paste the hash code BACK into Quest to create the Saved item. This will require a custom CreateObject script, but should work in theory.\r\n\r\nOf course this means that any player could edit the data before they paste it and create the hash code (I have no desire to dance around with validation for this, sorry). However, this provides an internal way to Save information locally in Quest, without having to save the entire game. Just attach the command(s) for Save/Load to whatever items (limit their scope to inventory only for example) and players handle the rest.\r\n\r\nMore on this as things get hammered out. Just too exciting not to share at the moment (this could change as soon as something irreparable breaks and the project has to be scrapped though LOL).",
      "EditableFormat": "markdown",
      "HTML": "<p>So just a quick update on where things are with this:</p>\n<p>I figured out that Quest can handle incorporating an iframe for this project. This led me to a whole new world! (I feel almost like Aladin!) :P</p>\n<p>Alright, anyway, using the iframe, and some nifty code from KV (am I driving you nuts with all the emails yet? :\\ ), the output from a function can be copy/pasted into the iframe, encrypted to a hash code for easier local Saving. (just copy/paste the hash code to a text file). The goal then is to be able to copy/paste the hash code BACK into Quest to create the Saved item. This will require a custom CreateObject script, but should work in theory.</p>\n<p>Of course this means that any player could edit the data before they paste it and create the hash code (I have no desire to dance around with validation for this, sorry). However, this provides an internal way to Save information locally in Quest, without having to save the entire game. Just attach the command(s) for Save/Load to whatever items (limit their scope to inventory only for example) and players handle the rest.</p>\n<p>More on this as things get hammered out. Just too exciting not to share at the moment (this could change as soon as something irreparable breaks and the project has to be scrapped though LOL).</p>\n\n",
      "PostDate": "2018-05-08T11:29:19.0678619Z",
      "LastEditDate": "2018-05-08T11:30:26.4420849Z",
      "link": null
    }
  ]
}
