{
  "Topic": {
    "TopicId": "5025",
    "ForumId": "10",
    "Title": "Sequential, successive Scripts?",
    "LastUpdated": "2015-02-05T21:40:22+00:00",
    "ReplyCount": 21
  },
  "Posts": [
    {
      "PostId": "34529",
      "UserId": 0,
      "Username": "Vollkrasser",
      "UserAvatar": null,
      "UserGravatar": "2f742d03f5a3957e1c7fc9b4c21216ae",
      "EditableText": "Hi,\n\nis there a (simple) way to create sequential Scripts, so the 2nd script is triggered only when the 1st script has finished?\n\nMy problem especially for sequences of events in a row (for example several textblocks with, several wait inputs...) is, that Quest processes all the scripts simultaneous. So a &quot;block&quot; or &quot;list&quot; of scripts in the UI is not processed like a computer program with one command/line after the other, rather all commands are begun at the same time.\nThis is fine for some tasks, but bad for others.\n\nI also have found no way in the UI to add another &quot;block&quot; of scripts that follows the previous, meaning that is only started when the previous block of scripts is done. \n\nIs there a way to tell Quest to process Script one and &quot;add successive script(s)&quot; after it? \n\nOr can it maybe be done with any syntax/logic like...\n---\nStartScriptA\n (here parallel script commands as usual &quot;aaa&quot;)\nEndScriptA\n\nStartScriptB\n (here parallel script commands as usual &quot;bbb&quot;)\nEndScriptB\n---\n\nSo the result would be that Quest processes first &quot;aaa&quot; in Step 1 and afterwards processes &quot;bbb&quot;.",
      "EditableFormat": "bbcode",
      "HTML": "Hi,<br/><br/>is there a (simple) way to create sequential Scripts, so the 2nd script is triggered only when the 1st script has finished?<br/><br/>My problem especially for sequences of events in a row (for example several textblocks with, several wait inputs...) is, that Quest processes all the scripts simultaneous. So a &quot;block&quot; or &quot;list&quot; of scripts in the UI is not processed like a computer program with one command/line after the other, rather all commands are begun at the same time.<br/>This is fine for some tasks, but bad for others.<br/><br/>I also have found no way in the UI to add another &quot;block&quot; of scripts that follows the previous, meaning that is only started when the previous block of scripts is done. <br/><br/>Is there a way to tell Quest to process Script one and &quot;add successive script(s)&quot; after it? <br/><br/>Or can it maybe be done with any syntax/logic like...<br/>---<br/>StartScriptA<br/> (here parallel script commands as usual &quot;aaa&quot;)<br/>EndScriptA<br/><br/>StartScriptB<br/> (here parallel script commands as usual &quot;bbb&quot;)<br/>EndScriptB<br/>---<br/><br/>So the result would be that Quest processes first &quot;aaa&quot; in Step 1 and afterwards processes &quot;bbb&quot;.",
      "PostDate": "2015-02-04T17:18:53+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34530",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "If I understand what you're saying (and this solution might not work for what you want) when I have a few scripts that I want to separate out I create rooms for those scripts to operate in. I can then add either a timer or a command that simply moves the player object to the next room to trigger the next script.",
      "EditableFormat": "bbcode",
      "HTML": "If I understand what you're saying (and this solution might not work for what you want) when I have a few scripts that I want to separate out I create rooms for those scripts to operate in. I can then add either a timer or a command that simply moves the player object to the next room to trigger the next script.",
      "PostDate": "2015-02-04T17:21:40+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34531",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "You can make Quest behave more like Twine by using rooms accessed only by scripts and commands. These aren't rooms accessible in any other way. They're just objects for running scripts in.",
      "EditableFormat": "bbcode",
      "HTML": "You can make Quest behave more like Twine by using rooms accessed only by scripts and commands. These aren't rooms accessible in any other way. They're just objects for running scripts in.",
      "PostDate": "2015-02-04T17:29:27+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34533",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "And I don't bother with the press any key script. I just set up a command that will check where the player is (hence making it useless elsewhere) and tell the command to move the player object somewhere. Then display it with the text processor. So I disable the parser with:\n\n[code:15wx1lpg]request (Hide, &quot;Command&quot;)[/code:15wx1lpg]\n\nIf I recall correctly then put my own next button in with the text processor reflecting the command I set up:\n\n[code:15wx1lpg]{command&#58;whatever&#58;click next to continue}[/code:15wx1lpg]",
      "EditableFormat": "bbcode",
      "HTML": "And I don't bother with the press any key script. I just set up a command that will check where the player is (hence making it useless elsewhere) and tell the command to move the player object somewhere. Then display it with the text processor. So I disable the parser with:<br/><br/><pre><code>request (Hide, &quot;Command&quot;)</code></pre><br/><br/>If I recall correctly then put my own next button in with the text processor reflecting the command I set up:<br/><br/><pre><code>{command&#58;whatever&#58;click next to continue}</code></pre>",
      "PostDate": "2015-02-04T17:43:02+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34534",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "use (add) Functions:\n\n(see this thread too: <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=5018&amp;p=34407#p34401\">viewtopic.php?f=10&amp;t=5018&amp;p=34407#p34401</a><!-- l --> )\n\na Function holds scripts: think of a Function as a basket~grouping (or if you're familiar with some basic programming: Functions = Batches = Macros), which can hold just a single script or many scripts.\n\nAlso, another great benefit of using Functions, you can loop them (individual Functions) on themselves, while also continuing your chain of scripting too:\n\n(in code, sorry, but it's fast~easy for me to do it this way, lol)\n\n[code:3kxdej8p]&lt;function name=&quot;character_creation_function&quot;&gt;\n  age_function\n&lt;/function&gt;\n\n&lt;function name=&quot;age_function&quot;&gt;&lt;!&#91;CDATA&#91;\n  msg (&quot;What is your name?&quot;)\n  get input {\n    if (IsInt (result) and ToInt (result) &gt; 0) {\n      player&#46;age_integer = ToInt (result)\n      gender_function\n    } else {\n      age_function\n    }\n  }\n&lt;/function&gt;\n\n&lt;function name=&quot;gender_function&quot;&gt;\n  show menu (&quot;What is your gender?, split (&quot;male;female&quot;, &quot;;&quot;), false) {\n    player&#46;gender_string = ToString (result)\n  }\n&lt;/function&gt;[/code:3kxdej8p]\n\nIn the GUI~Editor: Add Function and to 'goto' different Functions, you add in the 'call function ~ call upon function' Script, and just type in the Function's name into the text box, that you want to goto, you can ignore adding in parameters, as this is a bit more advanced, unless you already understand their usage, then go ahead and do so as you might need to.\n\nunfortunately, I am still a bit confused about the 'order of operations' with scripting, so the way that works best is this:\n\nFunction1\non ready { // you'll have to code this in, as I'm not sure if and or where it is in the GUI~Editor\n-&gt; Function2\n-&gt; on ready {\n-&gt;-&gt; Function3\n-&gt;-&gt; on ready {\n-&gt;-&gt;-&gt; Function4\n-&gt;-&gt; }\n-&gt; }\n}\n\nunfortunately, if you got script layers within the Functions, it's more difficult to get it to work:\n\nFunction1A\n-&gt; Script1A\n-&gt; wait { // or 'get input' or 'show menu'\n-&gt;-&gt; Script2A\n-&gt;-&gt; wait {\n-&gt;-&gt;-&gt; Script3A\n-&gt;-&gt; }\n-&gt; }\non ready {\n-&gt; Function2B\n-&gt;-&gt; Script1B\n-&gt;-&gt; wait {\n-&gt;-&gt;-&gt; Script2B\n-&gt;-&gt; }\n}\n\n// ERROR\n// you're going to have multiple scripts and the 'wait' Scripts running at the same time, which they can't do... thus the ERROR.\n\nthus, the best way is again (still not easy to get it to be set up like this... sighs):\n\nFunction1A\n-&gt; Script1A\n-&gt; wait { // or 'get input' or 'show menu'\n-&gt;-&gt; Script2A\n-&gt;-&gt; wait {\n-&gt;-&gt;-&gt; Script3A\n-&gt;-&gt;-&gt; on ready {\n-&gt;-&gt;-&gt;-&gt; Function2B\n-&gt;-&gt;-&gt;-&gt;-&gt; Script1B\n-&gt;-&gt;-&gt;-&gt;-&gt; wait {\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Script2B\n-&gt;-&gt;-&gt;-&gt;-&gt; }\n-&gt;-&gt;-&gt; }\n-&gt;-&gt; }\n-&gt; }\n\nin code:\n\n(this will, err I hope should lol, work)\n\n[code:3kxdej8p]&lt;function name=&quot;function_1&quot;&gt;\n  msg (&quot;1&quot;)\n  wait {\n    msg (&quot;2&quot;)\n    wait {\n      msg (&quot;3&quot;)\n      wait {\n        function_2\n      }\n    }\n  }\n&lt;/function&gt;\n\n&lt;function name=&quot;function_2&quot;&gt;\n  msg (&quot;4&quot;)\n  wait {\n    msg (&quot;5&quot;)\n    wait {\n      msg (&quot;6&quot;)\n      wait {\n        function_3\n      }\n    }\n  }\n&lt;/function&gt;\n\n&lt;function name=&quot;function_3&quot;&gt;\n  msg (&quot;7&quot;)\n  wait {\n    msg (&quot;8&quot;)\n    wait {\n      msg (&quot;9&quot;)\n      wait {\n        msg (&quot;10&quot;)\n      }\n    }\n  }\n&lt;/function&gt;[/code:3kxdej8p]",
      "EditableFormat": "bbcode",
      "HTML": "use (add) Functions:<br/><br/>(see this thread too: <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=5018&amp;p=34407#p34401\">viewtopic.php?f=10&amp;t=5018&amp;p=34407#p34401</a><!-- l --> )<br/><br/>a Function holds scripts: think of a Function as a basket~grouping (or if you're familiar with some basic programming: Functions = Batches = Macros), which can hold just a single script or many scripts.<br/><br/>Also, another great benefit of using Functions, you can loop them (individual Functions) on themselves, while also continuing your chain of scripting too:<br/><br/>(in code, sorry, but it's fast~easy for me to do it this way, lol)<br/><br/><pre><code>&lt;function name=&quot;character_creation_function&quot;&gt;<br/>  age_function<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;age_function&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  msg (&quot;What is your name?&quot;)<br/>  get input {<br/>    if (IsInt (result) and ToInt (result) &gt; 0) {<br/>      player&#46;age_integer = ToInt (result)<br/>      gender_function<br/>    } else {<br/>      age_function<br/>    }<br/>  }<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;gender_function&quot;&gt;<br/>  show menu (&quot;What is your gender?, split (&quot;male;female&quot;, &quot;;&quot;), false) {<br/>    player&#46;gender_string = ToString (result)<br/>  }<br/>&lt;/function&gt;</code></pre><br/><br/>In the GUI~Editor: Add Function and to 'goto' different Functions, you add in the 'call function ~ call upon function' Script, and just type in the Function's name into the text box, that you want to goto, you can ignore adding in parameters, as this is a bit more advanced, unless you already understand their usage, then go ahead and do so as you might need to.<br/><br/>unfortunately, I am still a bit confused about the 'order of operations' with scripting, so the way that works best is this:<br/><br/>Function1<br/>on ready { // you'll have to code this in, as I'm not sure if and or where it is in the GUI~Editor<br/>-&gt; Function2<br/>-&gt; on ready {<br/>-&gt;-&gt; Function3<br/>-&gt;-&gt; on ready {<br/>-&gt;-&gt;-&gt; Function4<br/>-&gt;-&gt; }<br/>-&gt; }<br/>}<br/><br/>unfortunately, if you got script layers within the Functions, it's more difficult to get it to work:<br/><br/>Function1A<br/>-&gt; Script1A<br/>-&gt; wait { // or 'get input' or 'show menu'<br/>-&gt;-&gt; Script2A<br/>-&gt;-&gt; wait {<br/>-&gt;-&gt;-&gt; Script3A<br/>-&gt;-&gt; }<br/>-&gt; }<br/>on ready {<br/>-&gt; Function2B<br/>-&gt;-&gt; Script1B<br/>-&gt;-&gt; wait {<br/>-&gt;-&gt;-&gt; Script2B<br/>-&gt;-&gt; }<br/>}<br/><br/>// ERROR<br/>// you're going to have multiple scripts and the 'wait' Scripts running at the same time, which they can't do... thus the ERROR.<br/><br/>thus, the best way is again (still not easy to get it to be set up like this... sighs):<br/><br/>Function1A<br/>-&gt; Script1A<br/>-&gt; wait { // or 'get input' or 'show menu'<br/>-&gt;-&gt; Script2A<br/>-&gt;-&gt; wait {<br/>-&gt;-&gt;-&gt; Script3A<br/>-&gt;-&gt;-&gt; on ready {<br/>-&gt;-&gt;-&gt;-&gt; Function2B<br/>-&gt;-&gt;-&gt;-&gt;-&gt; Script1B<br/>-&gt;-&gt;-&gt;-&gt;-&gt; wait {<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Script2B<br/>-&gt;-&gt;-&gt;-&gt;-&gt; }<br/>-&gt;-&gt;-&gt; }<br/>-&gt;-&gt; }<br/>-&gt; }<br/><br/>in code:<br/><br/>(this will, err I hope should lol, work)<br/><br/><pre><code>&lt;function name=&quot;function_1&quot;&gt;<br/>  msg (&quot;1&quot;)<br/>  wait {<br/>    msg (&quot;2&quot;)<br/>    wait {<br/>      msg (&quot;3&quot;)<br/>      wait {<br/>        function_2<br/>      }<br/>    }<br/>  }<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;function_2&quot;&gt;<br/>  msg (&quot;4&quot;)<br/>  wait {<br/>    msg (&quot;5&quot;)<br/>    wait {<br/>      msg (&quot;6&quot;)<br/>      wait {<br/>        function_3<br/>      }<br/>    }<br/>  }<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;function_3&quot;&gt;<br/>  msg (&quot;7&quot;)<br/>  wait {<br/>    msg (&quot;8&quot;)<br/>    wait {<br/>      msg (&quot;9&quot;)<br/>      wait {<br/>        msg (&quot;10&quot;)<br/>      }<br/>    }<br/>  }<br/>&lt;/function&gt;</code></pre>",
      "PostDate": "2015-02-04T18:30:37+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34538",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Vollkrasser, it would be helpful if you could post actual code that you have tried, as Quest *does* parse scripts statements sequentially. If you have run into a problem with that, then perhaps it is a simple error or misunderstanding which can be addressed given an example we can get our teeth into.\n\nThe example you gave doesn't help because you seem to be assuming all scripts run in parallel, which they don't. (If they did, then you'd need some sort of synchronization objects - like mutexs, critical sections, etc - found in standard multi-threaded programming... which are completely unnecessary in Quest). In fact, scripts only run in response to events anyway.\n\nOne thing to keep in mind is that no script commands in Quest will block. Any script command that is to wait for an action from the user (e.g. get a key, run a menu, etc) should be passed a script to be run once the action occurs.",
      "EditableFormat": "bbcode",
      "HTML": "Vollkrasser, it would be helpful if you could post actual code that you have tried, as Quest *does* parse scripts statements sequentially. If you have run into a problem with that, then perhaps it is a simple error or misunderstanding which can be addressed given an example we can get our teeth into.<br/><br/>The example you gave doesn't help because you seem to be assuming all scripts run in parallel, which they don't. (If they did, then you'd need some sort of synchronization objects - like mutexs, critical sections, etc - found in standard multi-threaded programming... which are completely unnecessary in Quest). In fact, scripts only run in response to events anyway.<br/><br/>One thing to keep in mind is that no script commands in Quest will block. Any script command that is to wait for an action from the user (e.g. get a key, run a menu, etc) should be passed a script to be run once the action occurs.",
      "PostDate": "2015-02-04T19:49:12+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34544",
      "UserId": 0,
      "Username": "Vollkrasser",
      "UserAvatar": null,
      "UserGravatar": "2f742d03f5a3957e1c7fc9b4c21216ae",
      "EditableText": "Well, thanks, but so far it seems that there is no way to simply let one script follow after another script, as:\n\n@silver: sending the player object round rooms, would flood my game with rooms, as is rather a work-around than a real solution for successive processing of scripts.\n\n@Hegemon: functions are not a solutions, as scripts in a function are treated in the same way as without function. Youre final example code within the function...\n\nmsg (&quot;1&quot;)\n  wait {\n    msg (&quot;2&quot;)\n    wait {\n      msg (&quot;3&quot;)\n      wait {\n\n...only works as the &quot;wait&quot;s have the &quot;msg&quot;'s nestled within. this works in functions in the same way as in a script in the UI, so there is no need for a function to do that. \nBut my initial problem is not solved, as only nestled parts in certain commands like &quot;wait&quot;, &quot;if&quot; &quot;then&quot; forces Quest to process the statements sequentially.\n\n@jay: well, if no script command does block, then all lines in a script run sort oft felt nearly at the same time, as i can only force sequential processing with certain commands like &quot;wait&quot;, &quot;if-then-else&quot;....This causes problems for me for some tasks. \nexplanaition: in my classical programming knowledge like...\n(player triggers something then this should be executed:)\n\n10 do&quot;a&quot; //do several instructions in a order like display picture A s, text A, wait, then display B... \n20 wait for a keystroke\n30 do &quot;b&quot; //do several instructions in order\n40 wait for a keystroke \n\nthe programm is processed line by line, causing to do &quot;b&quot; ONLY if &quot;a&quot; is done and a key is pressed. \nThis is not the case in a script in Quest without nestling: here we would do a and b &quot;at the same time&quot; meaning  unblocked one immediately after the other. Also we would have the colliding wait Error as no 2 waits can run at the same time showing the same problem of unblocked processing.\n\nFor simple things nestling in &quot;wait&quot; or so is a solution, but why is there no way to really do one script after the other?",
      "EditableFormat": "bbcode",
      "HTML": "Well, thanks, but so far it seems that there is no way to simply let one script follow after another script, as:<br/><br/>@silver: sending the player object round rooms, would flood my game with rooms, as is rather a work-around than a real solution for successive processing of scripts.<br/><br/>@Hegemon: functions are not a solutions, as scripts in a function are treated in the same way as without function. Youre final example code within the function...<br/><br/>msg (&quot;1&quot;)<br/>  wait {<br/>    msg (&quot;2&quot;)<br/>    wait {<br/>      msg (&quot;3&quot;)<br/>      wait {<br/><br/>...only works as the &quot;wait&quot;s have the &quot;msg&quot;'s nestled within. this works in functions in the same way as in a script in the UI, so there is no need for a function to do that. <br/>But my initial problem is not solved, as only nestled parts in certain commands like &quot;wait&quot;, &quot;if&quot; &quot;then&quot; forces Quest to process the statements sequentially.<br/><br/>@jay: well, if no script command does block, then all lines in a script run sort oft felt nearly at the same time, as i can only force sequential processing with certain commands like &quot;wait&quot;, &quot;if-then-else&quot;....This causes problems for me for some tasks. <br/>explanaition: in my classical programming knowledge like...<br/>(player triggers something then this should be executed:)<br/><br/>10 do&quot;a&quot; //do several instructions in a order like display picture A s, text A, wait, then display B... <br/>20 wait for a keystroke<br/>30 do &quot;b&quot; //do several instructions in order<br/>40 wait for a keystroke <br/><br/>the programm is processed line by line, causing to do &quot;b&quot; ONLY if &quot;a&quot; is done and a key is pressed. <br/>This is not the case in a script in Quest without nestling: here we would do a and b &quot;at the same time&quot; meaning  unblocked one immediately after the other. Also we would have the colliding wait Error as no 2 waits can run at the same time showing the same problem of unblocked processing.<br/><br/>For simple things nestling in &quot;wait&quot; or so is a solution, but why is there no way to really do one script after the other?",
      "PostDate": "2015-02-05T06:35:32+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34547",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "ah... there's this:\n\n'on ready'\n\nScript1\non ready {\n-&gt; Script2\n-&gt; on ready {\n-&gt;-&gt; Script3\n-&gt;}\n}\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/on_ready.html\">http://docs.textadventures.co.uk/quest/ ... ready.html</a><!-- m -->\n\nbut, this too may not work for what you want.",
      "EditableFormat": "bbcode",
      "HTML": "ah... there's this:<br/><br/>'on ready'<br/><br/>Script1<br/>on ready {<br/>-&gt; Script2<br/>-&gt; on ready {<br/>-&gt;-&gt; Script3<br/>-&gt;}<br/>}<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/on_ready.html\">http://docs.textadventures.co.uk/quest/ ... ready.html</a><!-- m --><br/><br/>but, this too may not work for what you want.",
      "PostDate": "2015-02-05T07:04:27+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34550",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "The solution *is* the nesting. The &quot;wait&quot; scripts simply change the UI into the &quot;Press any key&quot; state, and then the script continues on and out. If the script blocked at that point and waited for the key press, the engine would lock up and die. (Try putting an endless loop in a Quest game sometime - or a language like Javascript for that matter. It kills everything, including the player and editor, fairly quickly.) The statements *are* being done sequentially. If I do:\n\nmsg(&quot;a&quot;)\nmsg(&quot;b)\nmsg(&quot;c&quot;)\n\nthen I will see:\na\nb\nc\n\nWhat you're referring to is the fact that the &quot;wait&quot; command doesn't itself block until completed but merely initiates the wait. As I mentioned before, scripts that invoke some action from the user (e.g. wait, show menu, etc) use the model of you passing a callback script to be invoked once the action completes. You are, in effect, sending off the script to do the work and saying &quot;then do this when it's done&quot;. This is typical of scripting languages (Javascript as an example). The code is all event driven, with short scripts being invoked by the engine.\n\nI know some say, &quot;I don't want to do it that way, with the callback scripts&quot;, but that's the way the engine is designed, and it's not an uncommon design.\n\nWhere the comparison to a language like the snippet you showed fails is that in your example, those lines are the *entire program*, and you run it from beginning to end, and that's all there is. In scripting languages like Quest, your short bit of script is being invoke *in response to something*, within the context of an entire user environment. It is an event handler responding to an event (even if it's just &quot;the game is starting&quot; event). You can kick off things like &quot;wait&quot; to have the user enter a key press, but then you have to tell the engine how to inform you when the key press is done because the engine has to keep running. To that extent, it's asynchronous (it doesn't sit and wait), but that's the nature more of how those sorts of UI interactions must be handled.\n\nSo your example would become:\n\ndo&quot;a&quot; //do several instructions in a order like display picture A s, text A, wait, then display B... \nwait for a keystroke, and when it's done then begin\n     do &quot;b&quot; //do several instructions in order\n     wait for a keystroke \nend\n\nYou are deferring the script statements until the time when the wait completes.",
      "EditableFormat": "bbcode",
      "HTML": "The solution *is* the nesting. The &quot;wait&quot; scripts simply change the UI into the &quot;Press any key&quot; state, and then the script continues on and out. If the script blocked at that point and waited for the key press, the engine would lock up and die. (Try putting an endless loop in a Quest game sometime - or a language like Javascript for that matter. It kills everything, including the player and editor, fairly quickly.) The statements *are* being done sequentially. If I do:<br/><br/>msg(&quot;a&quot;)<br/>msg(&quot;b)<br/>msg(&quot;c&quot;)<br/><br/>then I will see:<br/>a<br/>b<br/>c<br/><br/>What you're referring to is the fact that the &quot;wait&quot; command doesn't itself block until completed but merely initiates the wait. As I mentioned before, scripts that invoke some action from the user (e.g. wait, show menu, etc) use the model of you passing a callback script to be invoked once the action completes. You are, in effect, sending off the script to do the work and saying &quot;then do this when it's done&quot;. This is typical of scripting languages (Javascript as an example). The code is all event driven, with short scripts being invoked by the engine.<br/><br/>I know some say, &quot;I don't want to do it that way, with the callback scripts&quot;, but that's the way the engine is designed, and it's not an uncommon design.<br/><br/>Where the comparison to a language like the snippet you showed fails is that in your example, those lines are the *entire program*, and you run it from beginning to end, and that's all there is. In scripting languages like Quest, your short bit of script is being invoke *in response to something*, within the context of an entire user environment. It is an event handler responding to an event (even if it's just &quot;the game is starting&quot; event). You can kick off things like &quot;wait&quot; to have the user enter a key press, but then you have to tell the engine how to inform you when the key press is done because the engine has to keep running. To that extent, it's asynchronous (it doesn't sit and wait), but that's the nature more of how those sorts of UI interactions must be handled.<br/><br/>So your example would become:<br/><br/>do&quot;a&quot; //do several instructions in a order like display picture A s, text A, wait, then display B... <br/>wait for a keystroke, and when it's done then begin<br/>     do &quot;b&quot; //do several instructions in order<br/>     wait for a keystroke <br/>end<br/><br/>You are deferring the script statements until the time when the wait completes.",
      "PostDate": "2015-02-05T08:03:36+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34557",
      "UserId": 0,
      "Username": "Vollkrasser",
      "UserAvatar": null,
      "UserGravatar": "2f742d03f5a3957e1c7fc9b4c21216ae",
      "EditableText": "Jay, thank you for youre detailed answer. I think I understand and agree the event-driven concept of a script being invoked by the engine which is the real &quot;program&quot; in the classical sense. \n\nBut i dont agree that nesting is a solution, as it will cause re-nesting with redundant code within the nests. It cant replace a simple programm command like &quot;goto&quot;.\n\nWhy cant one script not trigger another one? Why is there an engine/user trigger absolutly necessary?\n\nThere are some &quot;hardcoded&quot; scripts in a row possible in quest, see room tab &quot;Scripts&quot;:\nBefore entering the room for the first time (script 1)\nBefore entering the room (script 2)\nAfter entering the room (script 3)\n\nUnfortunately it is not possible to add such separate script-modules at any other place in the GUI.\nThe button under a script-module adds a line to the same script and there is no way to really create another script following. The existing button should therefore be renamed to &quot;Add new script line&quot;, as only in the case of the first line it really creates a script but not afterwards.",
      "EditableFormat": "bbcode",
      "HTML": "Jay, thank you for youre detailed answer. I think I understand and agree the event-driven concept of a script being invoked by the engine which is the real &quot;program&quot; in the classical sense. <br/><br/>But i dont agree that nesting is a solution, as it will cause re-nesting with redundant code within the nests. It cant replace a simple programm command like &quot;goto&quot;.<br/><br/>Why cant one script not trigger another one? Why is there an engine/user trigger absolutly necessary?<br/><br/>There are some &quot;hardcoded&quot; scripts in a row possible in quest, see room tab &quot;Scripts&quot;:<br/>Before entering the room for the first time (script 1)<br/>Before entering the room (script 2)<br/>After entering the room (script 3)<br/><br/>Unfortunately it is not possible to add such separate script-modules at any other place in the GUI.<br/>The button under a script-module adds a line to the same script and there is no way to really create another script following. The existing button should therefore be renamed to &quot;Add new script line&quot;, as only in the case of the first line it really creates a script but not afterwards.",
      "PostDate": "2015-02-05T11:44:07+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34562",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Redundant code typically gets relegated to functions. Perhaps that's what you mean by script invoking other scripts? You can easily add your own functions to hold that common code, and then you can call it wherever you wish.",
      "EditableFormat": "bbcode",
      "HTML": "Redundant code typically gets relegated to functions. Perhaps that's what you mean by script invoking other scripts? You can easily add your own functions to hold that common code, and then you can call it wherever you wish.",
      "PostDate": "2015-02-05T12:25:21+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34565",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "How do we go about creating a function? I know how to do it with js but not aslx.",
      "EditableFormat": "bbcode",
      "HTML": "How do we go about creating a function? I know how to do it with js but not aslx.",
      "PostDate": "2015-02-05T12:41:08+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34571",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "Ignore that - it's in the tutorial lol.\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/tutorial/more_things_to_do_with_objects.html#Using_Functions\">http://docs.textadventures.co.uk/quest/ ... _Functions</a><!-- m -->",
      "EditableFormat": "bbcode",
      "HTML": "Ignore that - it's in the tutorial lol.<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/tutorial/more_things_to_do_with_objects.html#Using_Functions\">http://docs.textadventures.co.uk/quest/ ... _Functions</a><!-- m -->",
      "PostDate": "2015-02-05T14:28:20+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34589",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "@Silver:\n\nFunctions are just like Verbs, in that you add them, name it (the Function, like you name a Verb too ~ when creating a custom Verb anyways), and then add the Scripts that you want.\n\nTo Add Functions, you can at least go to the bar at the top of the screen, and under 'Add', choose add function, but I'm not sure of other locations within the GUI~Editor as I don't think 'Functions' are on~in the left side's 'tree of stuff'.\n\nAs for 'calling~goto~activating' any Function that you want, all you got to do is to Add the Script, 'call function' or 'call upon function' (whatever it is called), where ever you're working with that can Add Scripts (such as within a Verb or the 'game' Object's 'start' Script or a Function or a Command or etc things, and choosing to: Add a script -&gt; 'call function', I think it's in the 'output' category, but maybe not, just look through all the Scripts, and it's somewhere there, lol. Then, all you got to do is to write in the name of your Function into the text box for it, you can ignore Adding Parameters for now, we'll get to them later on).",
      "EditableFormat": "bbcode",
      "HTML": "@Silver:<br/><br/>Functions are just like Verbs, in that you add them, name it (the Function, like you name a Verb too ~ when creating a custom Verb anyways), and then add the Scripts that you want.<br/><br/>To Add Functions, you can at least go to the bar at the top of the screen, and under 'Add', choose add function, but I'm not sure of other locations within the GUI~Editor as I don't think 'Functions' are on~in the left side's 'tree of stuff'.<br/><br/>As for 'calling~goto~activating' any Function that you want, all you got to do is to Add the Script, 'call function' or 'call upon function' (whatever it is called), where ever you're working with that can Add Scripts (such as within a Verb or the 'game' Object's 'start' Script or a Function or a Command or etc things, and choosing to: Add a script -&gt; 'call function', I think it's in the 'output' category, but maybe not, just look through all the Scripts, and it's somewhere there, lol. Then, all you got to do is to write in the name of your Function into the text box for it, you can ignore Adding Parameters for now, we'll get to them later on).",
      "PostDate": "2015-02-05T18:52:12+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34591",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "I guess the reason why I'm not familiar with functions yet is that you can trigger generic code with them... But most of my scripts are location specific so I've used commands, verbs or timers instead. Which all do the same thing in that they run a script based on whatever condition. I suppose a function can reduce work if a type of script is repeated, but I've yet to find a situation where ONLY calling a function will work, hence me not using it. Perhaps that moment will arrive so it's useful to know.",
      "EditableFormat": "bbcode",
      "HTML": "I guess the reason why I'm not familiar with functions yet is that you can trigger generic code with them... But most of my scripts are location specific so I've used commands, verbs or timers instead. Which all do the same thing in that they run a script based on whatever condition. I suppose a function can reduce work if a type of script is repeated, but I've yet to find a situation where ONLY calling a function will work, hence me not using it. Perhaps that moment will arrive so it's useful to know.",
      "PostDate": "2015-02-05T19:11:09+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34593",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "yes, Functions are global, so you either have to choose carefully where you use them (make individual Functions for each specific use ~ location), or add in a lot of complex 'checking' Scripts within your Functions to deal with all the situations of everywhere you might use it (same as you do with global Commands).",
      "EditableFormat": "bbcode",
      "HTML": "yes, Functions are global, so you either have to choose carefully where you use them (make individual Functions for each specific use ~ location), or add in a lot of complex 'checking' Scripts within your Functions to deal with all the situations of everywhere you might use it (same as you do with global Commands).",
      "PostDate": "2015-02-05T19:19:20+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34595",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "The only example I can think of is with timers... But then they house their own scripts anyway. You could call a function to start a global timer which itself checks conditions to run other functions. You'd totally need that in a massive sandbox game. But I've yet to see one of them appear despite a lot of posters having those ambitions. I'm still yet to get out of my first room. It's been my template for learning and playing with various ideas though. And a touch of laziness.",
      "EditableFormat": "bbcode",
      "HTML": "The only example I can think of is with timers... But then they house their own scripts anyway. You could call a function to start a global timer which itself checks conditions to run other functions. You'd totally need that in a massive sandbox game. But I've yet to see one of them appear despite a lot of posters having those ambitions. I'm still yet to get out of my first room. It's been my template for learning and playing with various ideas though. And a touch of laziness.",
      "PostDate": "2015-02-05T19:48:27+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34598",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I haven't got past character creation... laughs, not even starting to create my first room, haha.\n\nEvery time I try to work on making a game, I immediately run into the issue of being woefully unable to code in (do) what I'm trying do in making my game, sighs. I immedaitely realize that I need to learn a lot more coding... every time I try to start making a game... sighs.",
      "EditableFormat": "bbcode",
      "HTML": "I haven't got past character creation... laughs, not even starting to create my first room, haha.<br/><br/>Every time I try to work on making a game, I immediately run into the issue of being woefully unable to code in (do) what I'm trying do in making my game, sighs. I immedaitely realize that I need to learn a lot more coding... every time I try to start making a game... sighs.",
      "PostDate": "2015-02-05T20:14:11+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34599",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "It's one of those things - when you need it, you'll know. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "It's one of those things - when you need it, you'll know. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2015-02-05T20:15:29+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34601",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "My first room has taught me pretty much all I need to know about Quest for my needs. I've still got to implement the CSS so there isn't resolution problems and I'm doing ultra polish, which is what unearthed the container bug I think I found. If I can't reproduce it in a demo game then it's something I've done so back to the manual then polish again.",
      "EditableFormat": "bbcode",
      "HTML": "My first room has taught me pretty much all I need to know about Quest for my needs. I've still got to implement the CSS so there isn't resolution problems and I'm doing ultra polish, which is what unearthed the container bug I think I found. If I can't reproduce it in a demo game then it's something I've done so back to the manual then polish again.",
      "PostDate": "2015-02-05T20:42:07+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34603",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I had meant to say, from what I saw, your game looked amazing.",
      "EditableFormat": "bbcode",
      "HTML": "I had meant to say, from what I saw, your game looked amazing.",
      "PostDate": "2015-02-05T21:15:54+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34605",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "Aw, cheers man. It's still in the experimental stage ... I'm not confident enough yet to rip through the plot but it is sort of story boarded in my head. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Aw, cheers man. It's still in the experimental stage ... I'm not confident enough yet to rip through the plot but it is sort of story boarded in my head. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2015-02-05T21:40:22+00:00",
      "LastEditDate": null
    }
  ]
}
