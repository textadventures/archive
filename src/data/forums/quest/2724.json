{
  "Topic": {
    "TopicId": "2724",
    "ForumId": "10",
    "Title": "Conversation Key Matches wrong thing?",
    "LastUpdated": "2011-11-22T09:39:04+00:00",
    "ReplyCount": 5
  },
  "Posts": [
    {
      "PostId": "19181",
      "UserId": 0,
      "Username": "ender",
      "UserAvatar": null,
      "UserGravatar": "f0e4b65cada813dc0b9262de27725b82",
      "EditableText": "Okay, I've got a situation where I have different colored key cards the player is supposed to find ... and part of how I want them to find them (and figure out what they do) is to ask NPC's .... but I've run into a snag with the conversation system.\n\nIf I've got this set up using the built in 'ASK' assigned to an object &quot;Marcus&quot;:\n\nKEY : Red Keycard - SCRIPT&#058; (Print Message) &quot;I think I saw the red keycard in the engine room.&quot;\nKEY : Blue Keycard - SCRIPT&#058; (Print Message) &quot;Oh, I've got that right here.&quot; \n\nIf the player goes to marcus and does 'Ask Marcus About Red Keycard' .... the Quest 5 engine will match and run the script for the BLUE KEYCARD ... probably because its matching the last instance of 'keycard' ... \n\nEven if its just looking at the 'keys' and trying match them ... red keycard should match the players input better than blue keycard ... I'd expect the system to get confused if they player just said 'ask about keycard' ... \n\nIs there something I can do to get it to match better? \n\nMy only thought is to set up an ask for 'keycard' ... and then use a menu to say 'which keycard? the blue one or the red one?&quot; .... but that seems kind of clunky to me ... and since I expect to end up with several similar kinds of keys ... could get a little complicated to manage. \n\nIdealy ... I'd like to find some way to make the built in quest 'ask about' system work. \n\nThanks.",
      "EditableFormat": "bbcode",
      "HTML": "Okay, I've got a situation where I have different colored key cards the player is supposed to find ... and part of how I want them to find them (and figure out what they do) is to ask NPC's .... but I've run into a snag with the conversation system.<br/><br/>If I've got this set up using the built in 'ASK' assigned to an object &quot;Marcus&quot;:<br/><br/>KEY : Red Keycard - SCRIPT&#058; (Print Message) &quot;I think I saw the red keycard in the engine room.&quot;<br/>KEY : Blue Keycard - SCRIPT&#058; (Print Message) &quot;Oh, I've got that right here.&quot; <br/><br/>If the player goes to marcus and does 'Ask Marcus About Red Keycard' .... the Quest 5 engine will match and run the script for the BLUE KEYCARD ... probably because its matching the last instance of 'keycard' ... <br/><br/>Even if its just looking at the 'keys' and trying match them ... red keycard should match the players input better than blue keycard ... I'd expect the system to get confused if they player just said 'ask about keycard' ... <br/><br/>Is there something I can do to get it to match better? <br/><br/>My only thought is to set up an ask for 'keycard' ... and then use a menu to say 'which keycard? the blue one or the red one?&quot; .... but that seems kind of clunky to me ... and since I expect to end up with several similar kinds of keys ... could get a little complicated to manage. <br/><br/>Idealy ... I'd like to find some way to make the built in quest 'ask about' system work. <br/><br/>Thanks.",
      "PostDate": "2011-11-21T04:06:36+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "19183",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "[quote=&quot;ender&quot;:ay10472v]\nKEY : Red Keycard - SCRIPT&#058; (Print Message) &quot;I think I saw the red keycard in the engine room.&quot;\nKEY : Blue Keycard - SCRIPT&#058; (Print Message) &quot;Oh, I've got that right here.&quot; \n[/quote:ay10472v]\n\nThis seems to be a bug.\nPerhaps you could do the following:\n\nKEY : Red - SCRIPT&#058; (Print Message) &quot;I think I saw the red keycard in the engine room.&quot;\nKEY : Blue - SCRIPT&#058; (Print Message) &quot;Oh, I've got that right here.&quot; \nKEY : Keycard- SCRIPT&#058; (Print Message) &quot;There are two keycards. Which do you mean?&quot;",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>ender wrote:</cite><br/>KEY : Red Keycard - SCRIPT&#058; (Print Message) &quot;I think I saw the red keycard in the engine room.&quot;<br/>KEY : Blue Keycard - SCRIPT&#058; (Print Message) &quot;Oh, I've got that right here.&quot; <br/></blockquote><br/><br/>This seems to be a bug.<br/>Perhaps you could do the following:<br/><br/>KEY : Red - SCRIPT&#058; (Print Message) &quot;I think I saw the red keycard in the engine room.&quot;<br/>KEY : Blue - SCRIPT&#058; (Print Message) &quot;Oh, I've got that right here.&quot; <br/>KEY : Keycard- SCRIPT&#058; (Print Message) &quot;There are two keycards. Which do you mean?&quot;",
      "PostDate": "2011-11-21T08:01:38+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "19185",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "Logged <!-- m --><a class=\"postlink\" href=\"http://quest.codeplex.com/workitem/937\">http://quest.codeplex.com/workitem/937</a><!-- m -->\n\nHopefully Pertex's solution will work. The core library handling of ask/tell will ignore any words the player typed which don't match any topic keys.",
      "EditableFormat": "bbcode",
      "HTML": "Logged <!-- m --><a class=\"postlink\" href=\"http://quest.codeplex.com/workitem/937\">http://quest.codeplex.com/workitem/937</a><!-- m --><br/><br/>Hopefully Pertex's solution will work. The core library handling of ask/tell will ignore any words the player typed which don't match any topic keys.",
      "PostDate": "2011-11-21T09:11:00+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "19187",
      "UserId": 0,
      "Username": "ender",
      "UserAvatar": null,
      "UserGravatar": "f0e4b65cada813dc0b9262de27725b82",
      "EditableText": "Thank you for the responses ... I think pertex's solution would work as long as there is never an instance of anything else 'red' ... i.e. red button ... which would work with small games, but could get tricky for larger games with lots of conversation oriented puzzles.\n\nI think I remember someone saying we can overwrite built in functions ... so maybe I'll try to modify the ask/tell processor to improve its matching system to do what I want ...\n\nAnyway ... thank you again.",
      "EditableFormat": "bbcode",
      "HTML": "Thank you for the responses ... I think pertex's solution would work as long as there is never an instance of anything else 'red' ... i.e. red button ... which would work with small games, but could get tricky for larger games with lots of conversation oriented puzzles.<br/><br/>I think I remember someone saying we can overwrite built in functions ... so maybe I'll try to modify the ask/tell processor to improve its matching system to do what I want ...<br/><br/>Anyway ... thank you again.",
      "PostDate": "2011-11-21T21:02:44+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "19188",
      "UserId": 0,
      "Username": "ender",
      "UserAvatar": null,
      "UserGravatar": "f0e4b65cada813dc0b9262de27725b82",
      "EditableText": "Okay ... I found the problem. It was actually pretty simple ... in the script you have a variable called 'maxstrength' which you set to 0 .... \n\nThen you have a function GetKeywordsMatchStrength that compares the keywords and the user input and generates a strength ... as long as the GetKeywordsMatchStrength is greater than the maxstrength ... then it 'matches' ... unfortunately, you are never modifying the maxstrength variable ... it always stays as 0 .... so ANY match regardless of how good it is, will overwrite a previous match.\n\nHere is my modified function:\n\n[code:3qow83qj]\n  &lt;function name=&quot;DoAskTell&quot; parameters=&quot;object, text, property, defaultscript, defaulttemplate&quot;&gt;&lt;!&#91;CDATA&#91;\n    handled = false\n    maxstrength = 0\n    match = null\n    text = LCase(text)\n    if (typeof(object, property) = &quot;scriptdictionary&quot;) {\n      dictionary = GetAttribute(object, property)\n      foreach (keywords, dictionary) {\n        if (GetKeywordsMatchStrength(LCase(keywords), text) &gt;= maxstrength) {        \n         match = ScriptDictionaryItem(dictionary, keywords)\n         maxstrength = GetKeywordsMatchStrength(LCase(keywords), text)\n        }        \n      }\n      if (match &lt;&gt; null) {\n        invoke (match)\n        handled = true\n      }\n    }\n    if (not handled) {\n      if (HasScript(object, defaultscript)) {\n        do (object, defaultscript)\n      }\n      else {\n        msg (DynamicTemplate(defaulttemplate, object))\n      }\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n\n[/code:3qow83qj]\n\nThis solves the main problem I brought up ... although pertex made me think of a different problem. General versus specific matching ... (keycard versus red keycard) \n\nSince I used a &gt;= ... if two items have the same strength, it will keep replacing the match until it gets to the last one in the series. \n\nI.e.\nItem One - Keys : Red Keycard\nItem Two - Keys : Blue Keycard\nItem Three - Keys : Keycard\n\nif I just use the &gt; operator, then if the users input is &quot;ask about keycard&quot; ... the output will match the first item in the list (so in this case : red keycard), and then ignore any other match ... but thats not really what we want. \n\nWe want it to match the generic 'keycard' item ... so by using &gt;=, and putting Keycard as the last item, then if the user just inputs ask about keycard ... the system will run the 'keycard' script. \n\nIts really half a dozen of one/six of the other ... either way it forces you to modify the position of what you want to match 'in general' versus 'in specific'.\n\nThis is not really ideal, but it will do for now. I will continue to tinker with this and if I get a better solution together, I'll post it.",
      "EditableFormat": "bbcode",
      "HTML": "Okay ... I found the problem. It was actually pretty simple ... in the script you have a variable called 'maxstrength' which you set to 0 .... <br/><br/>Then you have a function GetKeywordsMatchStrength that compares the keywords and the user input and generates a strength ... as long as the GetKeywordsMatchStrength is greater than the maxstrength ... then it 'matches' ... unfortunately, you are never modifying the maxstrength variable ... it always stays as 0 .... so ANY match regardless of how good it is, will overwrite a previous match.<br/><br/>Here is my modified function:<br/><br/><pre><code><br/>  &lt;function name=&quot;DoAskTell&quot; parameters=&quot;object, text, property, defaultscript, defaulttemplate&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    handled = false<br/>    maxstrength = 0<br/>    match = null<br/>    text = LCase(text)<br/>    if (typeof(object, property) = &quot;scriptdictionary&quot;) {<br/>      dictionary = GetAttribute(object, property)<br/>      foreach (keywords, dictionary) {<br/>        if (GetKeywordsMatchStrength(LCase(keywords), text) &gt;= maxstrength) {        <br/>         match = ScriptDictionaryItem(dictionary, keywords)<br/>         maxstrength = GetKeywordsMatchStrength(LCase(keywords), text)<br/>        }        <br/>      }<br/>      if (match &lt;&gt; null) {<br/>        invoke (match)<br/>        handled = true<br/>      }<br/>    }<br/>    if (not handled) {<br/>      if (HasScript(object, defaultscript)) {<br/>        do (object, defaultscript)<br/>      }<br/>      else {<br/>        msg (DynamicTemplate(defaulttemplate, object))<br/>      }<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/><br/></code></pre><br/><br/>This solves the main problem I brought up ... although pertex made me think of a different problem. General versus specific matching ... (keycard versus red keycard) <br/><br/>Since I used a &gt;= ... if two items have the same strength, it will keep replacing the match until it gets to the last one in the series. <br/><br/>I.e.<br/>Item One - Keys : Red Keycard<br/>Item Two - Keys : Blue Keycard<br/>Item Three - Keys : Keycard<br/><br/>if I just use the &gt; operator, then if the users input is &quot;ask about keycard&quot; ... the output will match the first item in the list (so in this case : red keycard), and then ignore any other match ... but thats not really what we want. <br/><br/>We want it to match the generic 'keycard' item ... so by using &gt;=, and putting Keycard as the last item, then if the user just inputs ask about keycard ... the system will run the 'keycard' script. <br/><br/>Its really half a dozen of one/six of the other ... either way it forces you to modify the position of what you want to match 'in general' versus 'in specific'.<br/><br/>This is not really ideal, but it will do for now. I will continue to tinker with this and if I get a better solution together, I'll post it.",
      "PostDate": "2011-11-21T21:57:46+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "19192",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "Thanks! I have checked in that fix (slightly updated so it doesn't call GetKeywordsMatchStrength twice).",
      "EditableFormat": "bbcode",
      "HTML": "Thanks! I have checked in that fix (slightly updated so it doesn't call GetKeywordsMatchStrength twice).",
      "PostDate": "2011-11-22T09:39:04+00:00",
      "LastEditDate": null
    }
  ]
}
