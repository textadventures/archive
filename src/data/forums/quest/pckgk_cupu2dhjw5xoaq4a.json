{
  "Topic": {
    "TopicId": "pckgk_cupu2dhjw5xoaq4a",
    "ForumId": "10",
    "Title": "Playing external music (OGG) desktop vs online?",
    "LastUpdated": "2018-04-20T12:41:17.4723349Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "4a0b791a-4c43-40b0-8871-d9d915694fda",
      "UserId": 348994,
      "Username": "CheeseMyBaby",
      "AvatarUrl": "https://i.imgur.com/c5nBbAgb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The first act of my game is almost done. I'm about to start writing music for it but before I do I'd like to ask a couple of questions:\r\n\r\n1. If I have all my  ogg-files (or wav, or whichever is the most compatible format?) and link to them in the code.\r\nDoes the player's choice of \"platform\" (online vs desktop) make the result come out differently or will both options work as well as the other?\r\n\r\n2. Is ogg-files the best way to go? (I've been looking around but haven't really found an answer to this.)\r\n\r\n3. I asked this before with vague answers; did anyone try to incorporate MIDI (into the game file ?)\r\n\r\nthanks.",
      "EditableFormat": "markdown",
      "HTML": "<p>The first act of my game is almost done. I'm about to start writing music for it but before I do I'd like to ask a couple of questions:</p>\n<ol>\n<li>\n<p>If I have all my  ogg-files (or wav, or whichever is the most compatible format?) and link to them in the code.<br>\nDoes the player's choice of \"platform\" (online vs desktop) make the result come out differently or will both options work as well as the other?</p>\n</li>\n<li>\n<p>Is ogg-files the best way to go? (I've been looking around but haven't really found an answer to this.)</p>\n</li>\n<li>\n<p>I asked this before with vague answers; did anyone try to incorporate MIDI (into the game file ?)</p>\n</li>\n</ol>\n<p>thanks.</p>\n\n",
      "PostDate": "2018-04-20T12:41:17.4723349Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e241d480-873f-4f0c-afe8-49662f438f84",
      "UserId": 329383,
      "Username": "J_J",
      "AvatarUrl": "https://secure.gravatar.com/avatar/d6dcf2651a8e3cfe546c1fe096981552?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've only used mp3, a lot of the games here don't use music. Hopefully some people with more experience chimes in, but you might need to do some experimenting... particularly on whether MIDI files even work :/\r\n\r\nAlso, I'm jealous how quickly you are progressing on your game :p Good luck on the middle and the music writing.",
      "EditableFormat": "markdown",
      "HTML": "<p>I've only used mp3, a lot of the games here don't use music. Hopefully some people with more experience chimes in, but you might need to do some experimenting... particularly on whether MIDI files even work :/</p>\n<p>Also, I'm jealous how quickly you are progressing on your game :p Good luck on the middle and the music writing.</p>\n\n",
      "PostDate": "2018-04-20T14:12:15.558816Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9d3ed086-14b9-4396-97bb-7f41dbcfdc05",
      "UserId": 348994,
      "Username": "CheeseMyBaby",
      "AvatarUrl": "https://i.imgur.com/c5nBbAgb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@J_J\r\nOh I can assure you there's nothing to be jealous about! I decided to split my game in to 3 acts. The first one will be the shortest and it's that one I'm getting closer to finishing.\r\n\r\nOk, so you've used mp3, that's cool. How do you implement it? Do you have it on an external space and link to it?\r\nAre you using a lib or the build in play sound?",
      "EditableFormat": "markdown",
      "HTML": "<p>@J_J<br>\nOh I can assure you there's nothing to be jealous about! I decided to split my game in to 3 acts. The first one will be the shortest and it's that one I'm getting closer to finishing.</p>\n<p>Ok, so you've used mp3, that's cool. How do you implement it? Do you have it on an external space and link to it?<br>\nAre you using a lib or the build in play sound?</p>\n\n",
      "PostDate": "2018-04-20T14:17:16.412576Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bd981d26-ff48-48c5-bfa1-d3e9c0a1690e",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "MIDI files will work if the player's browser supports them.\r\nOnline, that depends on the player. On desktop, i believe the browser will be Chromium.\r\n\r\nA quick search suggests that Chrome has a number of extensions to let it play MIDI files, but it can't do so natively.",
      "EditableFormat": "markdown",
      "HTML": "<p>MIDI files will work if the player's browser supports them.<br>\nOnline, that depends on the player. On desktop, i believe the browser will be Chromium.</p>\n<p>A quick search suggests that Chrome has a number of extensions to let it play MIDI files, but it can't do so natively.</p>\n\n",
      "PostDate": "2018-04-20T15:23:11.3628492Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4d4f451d-12ba-4347-a202-5331ca60c784",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The desktop player has embedded Chromium, which does not handle the mp3 or mp4 formats when played using HTML tags or my AudioVideo library.\r\n\r\n...but Alex added ```play sound``` to play mp3 files through ffmpeg (or something; the script plays the audio through Quest, not the embedded browser).\r\n\r\nhttp://docs.textadventures.co.uk/quest/adding_sounds.html#browser-compatibility",
      "EditableFormat": "markdown",
      "HTML": "<p>The desktop player has embedded Chromium, which does not handle the mp3 or mp4 formats when played using HTML tags or my AudioVideo library.</p>\n<p>...but Alex added <code>play sound</code> to play mp3 files through ffmpeg (or something; the script plays the audio through Quest, not the embedded browser).</p>\n<p>http://docs.textadventures.co.uk/quest/adding_sounds.html#browser-compatibility</p>\n\n",
      "PostDate": "2018-04-20T15:43:24.4998266Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4595c398-fd7c-4ebf-8226-0b5f5dc9d31d",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">    If I have all my ogg-files (or wav, or whichever is the most compatible format?) and link to them in the code.\r\n    Does the player's choice of \"platform\" (online vs desktop) make the result come out differently or will both options work as well as the other?\r\n\r\n\r\nThe browser makes all the difference.  I think anything can handle WAV files, but they are BIG, and this site's max game size is 20MB.\r\n\r\nhttp://docs.textadventures.co.uk/quest/adding_sounds.html#browser-compatibility\r\n\r\n>    Is ogg-files the best way to go? (I've been looking around but haven't really found an answer to this.)\r\n\r\nNo, because they don't play on iStuff (iPhone or iPad).\r\n\r\n>    I asked this before with vague answers; did anyone try to incorporate MIDI (into the game file ?)\r\n\r\nHave never tried this one, but if mrangel is correct (and he usually is), you might as well forget about using MIDI.  That sounds like a can of worms to me.\r\n\r\n---\r\nI include an mp3 and ogg for each sound to cover the bases.\r\n\r\n---\r\nAlso, make sure you change your ```game.publishfileextensions``` attribute to include ```*.ogg```!  Otherwise, your ogg file will not be included with your game!!!",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>If I have all my ogg-files (or wav, or whichever is the most compatible format?) and link to them in the code.<br>\nDoes the player's choice of \"platform\" (online vs desktop) make the result come out differently or will both options work as well as the other?</p>\n</blockquote>\n<p>The browser makes all the difference.  I think anything can handle WAV files, but they are BIG, and this site's max game size is 20MB.</p>\n<p>http://docs.textadventures.co.uk/quest/adding_sounds.html#browser-compatibility</p>\n<blockquote>\n<p>Is ogg-files the best way to go? (I've been looking around but haven't really found an answer to this.)</p>\n</blockquote>\n<p>No, because they don't play on iStuff (iPhone or iPad).</p>\n<blockquote>\n<p>I asked this before with vague answers; did anyone try to incorporate MIDI (into the game file ?)</p>\n</blockquote>\n<p>Have never tried this one, but if mrangel is correct (and he usually is), you might as well forget about using MIDI.  That sounds like a can of worms to me.</p>\n<hr>\n<p>I include an mp3 and ogg for each sound to cover the bases.</p>\n<hr>\n<p>Also, make sure you change your <code>game.publishfileextensions</code> attribute to include <code>*.ogg</code>!  Otherwise, your ogg file will not be included with your game!!!</p>\n\n",
      "PostDate": "2018-04-20T15:49:36.6818296Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e6f23abd-6264-4e01-9352-319b528ecf5f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Also keep in mind that your sounds will not play in any mobile browser if you don't display the audio controls!\r\n\r\nIf you use ```play sound```, the mobile player totally ignores the audio and ends any ```sync``` which may exist to continue play.\r\n\r\nIf you are using my AudioVideo library, it will check for a mobile browser and automatically display the controls if necessary.\r\n\r\nAUTOPLAY will NOT work on a mobile browser, no matter what.",
      "EditableFormat": "markdown",
      "HTML": "<p>Also keep in mind that your sounds will not play in any mobile browser if you don't display the audio controls!</p>\n<p>If you use <code>play sound</code>, the mobile player totally ignores the audio and ends any <code>sync</code> which may exist to continue play.</p>\n<p>If you are using my AudioVideo library, it will check for a mobile browser and automatically display the controls if necessary.</p>\n<p>AUTOPLAY will NOT work on a mobile browser, no matter what.</p>\n\n",
      "PostDate": "2018-04-20T15:52:03.649776Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8686a5ba-4f18-4686-ada0-2a4db7ee81b2",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is quite extensive (although it does not reference MIDI files at all):\r\n\r\nhttp://docs.textadventures.co.uk/quest/adding_sounds.html\r\n\r\n\r\nThere is additional info here (but not much):\r\n\r\nhttp://textadventures.co.uk/games/view/phvys9dicuimsspr_m9wyq/audiovideolib\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>This is quite extensive (although it does not reference MIDI files at all):</p>\n<p>http://docs.textadventures.co.uk/quest/adding_sounds.html</p>\n<p>There is additional info here (but not much):</p>\n<p>http://textadventures.co.uk/games/view/phvys9dicuimsspr_m9wyq/audiovideolib</p>\n\n",
      "PostDate": "2018-04-20T15:54:25.8331184Z",
      "LastEditDate": "2018-06-08T04:36:37.0486708Z",
      "link": null
    },
    {
      "PostId": "2393e2e3-6e6f-473a-8305-44038b399172",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@KV -\r\nJust curious, what is the advantage of using your AV library over Quest's built-in sound/video?  You already mentioned that your AV lib can play sound over mobile, while Quest does not.",
      "EditableFormat": "markdown",
      "HTML": "<p>@KV -<br>\nJust curious, what is the advantage of using your AV library over Quest's built-in sound/video?  You already mentioned that your AV lib can play sound over mobile, while Quest does not.</p>\n\n",
      "PostDate": "2018-04-20T16:43:24.3303804Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b4a8e640-6e29-4002-87e0-684d82f0ac1a",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Lots of stuff.  \r\n\r\nBasically, everything that [this](http://docs.textadventures.co.uk/quest/adding_sounds.html) shows you how to do in code can be added via the GUI.\r\n\r\nYou can use local and/or external sounds...\r\n\r\nYou can play multiple sounds at once....\r\n\r\nYou can pause and resume sounds...\r\n\r\nLots of stuff...\r\n\r\n I've listed it all here:\r\n\r\nhttp://textadventures.co.uk/games/view/phvys9dicuimsspr_m9wyq/audiovideolib\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Lots of stuff.</p>\n<p>Basically, everything that <a href=\"http://docs.textadventures.co.uk/quest/adding_sounds.html\">this</a> shows you how to do in code can be added via the GUI.</p>\n<p>You can use local and/or external sounds...</p>\n<p>You can play multiple sounds at once....</p>\n<p>You can pause and resume sounds...</p>\n<p>Lots of stuff...</p>\n<p>I've listed it all here:</p>\n<p>http://textadventures.co.uk/games/view/phvys9dicuimsspr_m9wyq/audiovideolib</p>\n\n",
      "PostDate": "2018-04-20T17:01:00.4647808Z",
      "LastEditDate": "2018-06-08T04:37:12.9751674Z",
      "link": null
    },
    {
      "PostId": "70e826ae-f826-48d2-a870-35931049d52a",
      "UserId": 348994,
      "Username": "CheeseMyBaby",
      "AvatarUrl": "https://i.imgur.com/c5nBbAgb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "K.V.\r\nOk, that answers most of my questions! Only one remains:\r\n\r\nThe one thing I'm still unsure of is if the user have to bundle the sound into the game or is it possible to ONLY use external (linked) files (no matter what the file extension)?\r\n\r\n( I copy/pasted this question from <a href=\"https://github.com/KVonGit/AudioVideoLib/wiki/Instructions-for-Desktop-Users\">this thread</a> )\r\n\r\n\r\nEdit: Oh, and I've optimized my game for iUsers about..... 0%. I see no point in starting caring about them now :)",
      "EditableFormat": "markdown",
      "HTML": "<p>K.V.<br>\nOk, that answers most of my questions! Only one remains:</p>\n<p>The one thing I'm still unsure of is if the user have to bundle the sound into the game or is it possible to ONLY use external (linked) files (no matter what the file extension)?</p>\n<p>( I copy/pasted this question from <a href=\"https://github.com/KVonGit/AudioVideoLib/wiki/Instructions-for-Desktop-Users\">this thread</a> )</p>\n<p>Edit: Oh, and I've optimized my game for iUsers about..... 0%. I see no point in starting caring about them now :)</p>\n\n",
      "PostDate": "2018-04-20T17:19:01.3687296Z",
      "LastEditDate": "2018-04-20T17:21:50.9088287Z",
      "link": null
    },
    {
      "PostId": "483bfc7e-b683-4650-9a01-06019a1db2a8",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> AV lib can play sound over mobile, while Quest does not.\r\n\r\nYou can add JS functions via ```JS.eval()``` during play to get around this and make the mobile player behave as expected while still using the default ```play sound``` and ```stop sound``` scripts.\r\n\r\n---\r\n\r\nThe default ```play sound``` script takes three parameters:\r\n```play sound (string file, boolean wait, boolean loop)```\r\n\r\nThis is the JS function (in its current state) that is called when playing in a mobile browser:\r\n```\r\nfunction playAudio(filename, format, sync, looped) {\r\n    if (sync) {\r\n        finishSync();\r\n    }\r\n}\r\n```\r\n\r\nThis is the ```stop sounds``` function:\r\n```\r\nfunction stopAudio() {\r\n}\r\n```\r\n\r\n---\r\n### The workaround:\r\n\r\n(This will display the audio controls after the command input bar, just to improve player experience.)\r\n\r\nCreate a function called ```SetupMobilePlaySound```\r\n\r\nAdd one parameter:  ```useless```\r\n\r\nPaste this in for your script in Code View:\r\n\r\n**EDITED: Version 2**\r\n```\r\n// Only added the useless parameter so this can be called in JS with ASLEvent('SetupMobilePlaySound', '')\r\ns = Chr(60)+\"script\"+Chr(62)+\"var audioSyncing = false;var syncHidingInput = false;\"\r\ns = s + \"function playAudio(filename, format, sync, looped) { console.log(filename);\"\r\n  s = s + \"if (sync && looped){ throw ('Cannot sync and loop the same audio!');}\"\r\n  s = s + \"var s = '\"+Chr(60)+\"audio id=\\\"audio-'+filename+'\\\" src=\\\"'+filename+'\\\" controls controlsList=\\\"nodownload\\\"/\"+Chr(62)+\"';\"\r\n  s = s + \"addTextAndScroll(s); if (sync) { audioSyncing = true; if (isElementVisible('#txtCommandDiv')){ syncHidingInput=true; }\"\r\n    s = s + \"_waitMode = true; $('#txtCommandDiv').hide(); $('#inputBar').hide(); markScrollPosition();\"\r\n    s = s + \"document.getElementById('audio-'+filename).onended = function(){ $('#txtCommandDiv').show(); endWait();  this.remove(); }     }\"\r\n  s = s + \"else if (looped){ document.getElementById('audio-'+filename).loop = true;  } $('audio').insertAfter($('#txtCommandDiv')); };\"\r\ns = s + \"function stopAudio() { $('audio').remove();\"\r\n  s = s + \"if (syncHidingInput){   $('#txtCommandDiv').show();  if ($('#inputBar') != undefined) {   $('#inputBar').show();  }\"\r\n    s = s + \"syncHidingInput=false; }  if (!_waitMode){  return;  }  _waitMode = false;\"\r\n  s = s + \"window.setTimeout(function () {   $('#fldUIMsg').val('endwait');  $('#cmdSubmit').click(); }, 100);}\"\r\ns = s + Chr(60)+\"/script\"+Chr(62)+\"Audio has been set to MOBILE SETTINGS!\"\r\nmsg (s)\r\n```\r\n\r\n---\r\nI've set up a command to allow the user to enter MOBILE AUDIO, which will run this script:\r\n\r\n```\r\nSetupMobilePlaySound (\"\")\r\n// This next bit will play a sound using the new function just so I can make sure it works in all versions of the player\r\n// There is no need to play a sound here, if you don't want to play a test sound.\r\n// Add 2 second timeout to give the browser time to set up the functions\r\nSetTimeout (2) {\r\n  JS.playAudio (GetFileURL(\"themp3.mp3\"), \"mp3\", false, false)\r\n}\r\n```\r\n\r\n---\r\nHere is my tester:\r\n\r\nhttp://textadventures.co.uk/games/view/wvlh6nzhq0ubvwdjtgnnua/mobile-play-sound\r\n\r\n\r\nHere's the entire code:\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Mobile Play Sound\">\r\n    <gameid>0235b205-6b4b-408d-ab29-8be05fec909c</gameid>\r\n    <version>0.0.3</version>\r\n    <firstpublished>2018</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <description><![CDATA[{command:test audio}<br/><br/>{command:test loop}<br/><br/>{command:test sync}<br/><br/>{command:stop audio}<br/><br/>{command:mobile audio:set to mobile audio}]]></description>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n  </object>\r\n  <command name=\"mobile_audio_cmd\">\r\n    <pattern>mobile audio</pattern>\r\n    <script>\r\n      SetupMobilePlaySound (\"\")\r\n      // Add 2 second timeout to give the browser time to set up the functions\r\n      SetTimeout (2) {\r\n        JS.playAudio (GetFileURL(\"themp3.mp3\"), \"mp3\", false, false)\r\n      }\r\n    </script>\r\n  </command>\r\n  <command name=\"test_audio_cmd\">\r\n    <pattern>test audio</pattern>\r\n    <script>\r\n      stop sound\r\n      play sound (\"themp3.mp3\", false, false)\r\n    </script>\r\n  </command>\r\n  <command name=\"test_audio_cmd1\">\r\n    <pattern>test loop</pattern>\r\n    <script>\r\n      stop sound\r\n      play sound (\"themp3.mp3\", false, true)\r\n    </script>\r\n  </command>\r\n  <command name=\"test_audio_cmd2\">\r\n    <pattern>test sync</pattern>\r\n    <script>\r\n      stop sound\r\n      play sound (\"themp3.mp3\", true, false)\r\n    </script>\r\n  </command>\r\n  <command name=\"stop_audio_cmd\">\r\n    <pattern>stop audio</pattern>\r\n    <script>\r\n      stop sound\r\n    </script>\r\n  </command>\r\n  <function name=\"SetupMobilePlaySound\" parameters=\"useless\"><![CDATA[\r\n    // Only added the useless parameter so this can be called in JS with ASLEvent('SetupMobilePlaySound','')\r\n    s = Chr(60)+\"script\"+Chr(62)+\"var audioSyncing = false;var syncHidingInput = false;\"\r\n    s = s + \"function playAudio(filename, format, sync, looped) { console.log(filename);\"\r\n      s = s + \"if (sync && looped){ throw ('Cannot sync and loop the same audio!');}\"\r\n      s = s + \"var s = '\"+Chr(60)+\"audio id=\\\"audio-'+filename+'\\\" src=\\\"'+filename+'\\\" controls controlsList=\\\"nodownload\\\"/\"+Chr(62)+\"';\"\r\n      s = s + \"addTextAndScroll(s); if (sync) { audioSyncing = true; if (isElementVisible('#txtCommandDiv')){ syncHidingInput=true; }\"\r\n        s = s + \"_waitMode = true; $('#txtCommandDiv').hide(); $('#inputBar').hide(); markScrollPosition();\"\r\n        s = s + \"document.getElementById('audio-'+filename).onended = function(){ $('#txtCommandDiv').show(); endWait();  this.remove(); }     }\"\r\n      s = s + \"else if (looped){ document.getElementById('audio-'+filename).loop = true;  }$('audio').insertAfter($('#txtCommandDiv')); };\"\r\n    s = s + \"function stopAudio() { $('audio').remove();\"\r\n      s = s + \"if (syncHidingInput){   $('#txtCommandDiv').show();  if ($('#inputBar') != undefined) {   $('#inputBar').show();  }\"\r\n        s = s + \"syncHidingInput=false; }  if (!_waitMode){  return;  }  _waitMode = false;\"\r\n      s = s + \"window.setTimeout(function () {   $('#fldUIMsg').val('endwait');  $('#cmdSubmit').click(); }, 100);}\"\r\n    s = s + Chr(60)+\"/script\"+Chr(62)+\"Audio has been set to MOBILE SETTINGS!\"\r\n    msg (s)\r\n  ]]></function>\r\n</asl>\r\n```\r\n\r\n</details>\r\n\r\n---\r\nNote that you can check for the mobile browser like this:\r\n\r\n```\r\nfunction isMobilePlayer(){\r\n    if (typeof(currentTab) === 'string'){\r\n\t    return true;\r\n    }\r\n    return false;\r\n};\r\n```\r\n\r\nPertex posted a different script (which I liked better than mine), but I can't find the post and they both work, so...\r\n\r\nWe could add this to **game.inituserinterface** to check for the mobile player and automatically enable the mobile audio functionality:\r\n\r\n```\r\nSetTimeout(2){\r\n  JS.eval(\" if (typeof(currentTab) === 'string'){ASLEvent('SetupMobilePlaySound', '');}\")\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>AV lib can play sound over mobile, while Quest does not.</p>\n</blockquote>\n<p>You can add JS functions via <code>JS.eval()</code> during play to get around this and make the mobile player behave as expected while still using the default <code>play sound</code> and <code>stop sound</code> scripts.</p>\n<hr>\n<p>The default <code>play sound</code> script takes three parameters:<br>\n<code>play sound (string file, boolean wait, boolean loop)</code></p>\n<p>This is the JS function (in its current state) that is called when playing in a mobile browser:</p>\n<pre><code>function playAudio(filename, format, sync, looped) {\n    if (sync) {\n        finishSync();\n    }\n}\n</code></pre>\n<p>This is the <code>stop sounds</code> function:</p>\n<pre><code>function stopAudio() {\n}\n</code></pre>\n<hr>\n<h3>The workaround:</h3>\n<p>(This will display the audio controls after the command input bar, just to improve player experience.)</p>\n<p>Create a function called <code>SetupMobilePlaySound</code></p>\n<p>Add one parameter:  <code>useless</code></p>\n<p>Paste this in for your script in Code View:</p>\n<p><strong>EDITED: Version 2</strong></p>\n<pre><code>// Only added the useless parameter so this can be called in JS with ASLEvent('SetupMobilePlaySound', '')\ns = Chr(60)+\"script\"+Chr(62)+\"var audioSyncing = false;var syncHidingInput = false;\"\ns = s + \"function playAudio(filename, format, sync, looped) { console.log(filename);\"\n  s = s + \"if (sync &amp;&amp; looped){ throw ('Cannot sync and loop the same audio!');}\"\n  s = s + \"var s = '\"+Chr(60)+\"audio id=\\\"audio-'+filename+'\\\" src=\\\"'+filename+'\\\" controls controlsList=\\\"nodownload\\\"/\"+Chr(62)+\"';\"\n  s = s + \"addTextAndScroll(s); if (sync) { audioSyncing = true; if (isElementVisible('#txtCommandDiv')){ syncHidingInput=true; }\"\n    s = s + \"_waitMode = true; $('#txtCommandDiv').hide(); $('#inputBar').hide(); markScrollPosition();\"\n    s = s + \"document.getElementById('audio-'+filename).onended = function(){ $('#txtCommandDiv').show(); endWait();  this.remove(); }     }\"\n  s = s + \"else if (looped){ document.getElementById('audio-'+filename).loop = true;  } $('audio').insertAfter($('#txtCommandDiv')); };\"\ns = s + \"function stopAudio() { $('audio').remove();\"\n  s = s + \"if (syncHidingInput){   $('#txtCommandDiv').show();  if ($('#inputBar') != undefined) {   $('#inputBar').show();  }\"\n    s = s + \"syncHidingInput=false; }  if (!_waitMode){  return;  }  _waitMode = false;\"\n  s = s + \"window.setTimeout(function () {   $('#fldUIMsg').val('endwait');  $('#cmdSubmit').click(); }, 100);}\"\ns = s + Chr(60)+\"/script\"+Chr(62)+\"Audio has been set to MOBILE SETTINGS!\"\nmsg (s)\n</code></pre>\n<hr>\n<p>I've set up a command to allow the user to enter MOBILE AUDIO, which will run this script:</p>\n<pre><code>SetupMobilePlaySound (\"\")\n// This next bit will play a sound using the new function just so I can make sure it works in all versions of the player\n// There is no need to play a sound here, if you don't want to play a test sound.\n// Add 2 second timeout to give the browser time to set up the functions\nSetTimeout (2) {\n  JS.playAudio (GetFileURL(\"themp3.mp3\"), \"mp3\", false, false)\n}\n</code></pre>\n<hr>\n<p>Here is my tester:</p>\n<p>http://textadventures.co.uk/games/view/wvlh6nzhq0ubvwdjtgnnua/mobile-play-sound</p>\n<p>Here's the entire code:</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Mobile Play Sound\"&gt;\n    &lt;gameid&gt;0235b205-6b4b-408d-ab29-8be05fec909c&lt;/gameid&gt;\n    &lt;version&gt;0.0.3&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description&gt;&lt;![CDATA[{command:test audio}&lt;br/&gt;&lt;br/&gt;{command:test loop}&lt;br/&gt;&lt;br/&gt;{command:test sync}&lt;br/&gt;&lt;br/&gt;{command:stop audio}&lt;br/&gt;&lt;br/&gt;{command:mobile audio:set to mobile audio}]]&gt;&lt;/description&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;command name=\"mobile_audio_cmd\"&gt;\n    &lt;pattern&gt;mobile audio&lt;/pattern&gt;\n    &lt;script&gt;\n      SetupMobilePlaySound (\"\")\n      // Add 2 second timeout to give the browser time to set up the functions\n      SetTimeout (2) {\n        JS.playAudio (GetFileURL(\"themp3.mp3\"), \"mp3\", false, false)\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;command name=\"test_audio_cmd\"&gt;\n    &lt;pattern&gt;test audio&lt;/pattern&gt;\n    &lt;script&gt;\n      stop sound\n      play sound (\"themp3.mp3\", false, false)\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;command name=\"test_audio_cmd1\"&gt;\n    &lt;pattern&gt;test loop&lt;/pattern&gt;\n    &lt;script&gt;\n      stop sound\n      play sound (\"themp3.mp3\", false, true)\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;command name=\"test_audio_cmd2\"&gt;\n    &lt;pattern&gt;test sync&lt;/pattern&gt;\n    &lt;script&gt;\n      stop sound\n      play sound (\"themp3.mp3\", true, false)\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;command name=\"stop_audio_cmd\"&gt;\n    &lt;pattern&gt;stop audio&lt;/pattern&gt;\n    &lt;script&gt;\n      stop sound\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;function name=\"SetupMobilePlaySound\" parameters=\"useless\"&gt;&lt;![CDATA[\n    // Only added the useless parameter so this can be called in JS with ASLEvent('SetupMobilePlaySound','')\n    s = Chr(60)+\"script\"+Chr(62)+\"var audioSyncing = false;var syncHidingInput = false;\"\n    s = s + \"function playAudio(filename, format, sync, looped) { console.log(filename);\"\n      s = s + \"if (sync &amp;&amp; looped){ throw ('Cannot sync and loop the same audio!');}\"\n      s = s + \"var s = '\"+Chr(60)+\"audio id=\\\"audio-'+filename+'\\\" src=\\\"'+filename+'\\\" controls controlsList=\\\"nodownload\\\"/\"+Chr(62)+\"';\"\n      s = s + \"addTextAndScroll(s); if (sync) { audioSyncing = true; if (isElementVisible('#txtCommandDiv')){ syncHidingInput=true; }\"\n        s = s + \"_waitMode = true; $('#txtCommandDiv').hide(); $('#inputBar').hide(); markScrollPosition();\"\n        s = s + \"document.getElementById('audio-'+filename).onended = function(){ $('#txtCommandDiv').show(); endWait();  this.remove(); }     }\"\n      s = s + \"else if (looped){ document.getElementById('audio-'+filename).loop = true;  }$('audio').insertAfter($('#txtCommandDiv')); };\"\n    s = s + \"function stopAudio() { $('audio').remove();\"\n      s = s + \"if (syncHidingInput){   $('#txtCommandDiv').show();  if ($('#inputBar') != undefined) {   $('#inputBar').show();  }\"\n        s = s + \"syncHidingInput=false; }  if (!_waitMode){  return;  }  _waitMode = false;\"\n      s = s + \"window.setTimeout(function () {   $('#fldUIMsg').val('endwait');  $('#cmdSubmit').click(); }, 100);}\"\n    s = s + Chr(60)+\"/script\"+Chr(62)+\"Audio has been set to MOBILE SETTINGS!\"\n    msg (s)\n  ]]&gt;&lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n<hr>\n<p>Note that you can check for the mobile browser like this:</p>\n<pre><code>function isMobilePlayer(){\n    if (typeof(currentTab) === 'string'){\n\t    return true;\n    }\n    return false;\n};\n</code></pre>\n<p>Pertex posted a different script (which I liked better than mine), but I can't find the post and they both work, so...</p>\n<p>We could add this to <strong>game.inituserinterface</strong> to check for the mobile player and automatically enable the mobile audio functionality:</p>\n<pre><code>SetTimeout(2){\n  JS.eval(\" if (typeof(currentTab) === 'string'){ASLEvent('SetupMobilePlaySound', '');}\")\n}\n</code></pre>\n\n",
      "PostDate": "2018-04-20T19:00:50.1650431Z",
      "LastEditDate": "2018-04-20T19:18:43.0187246Z",
      "link": null
    },
    {
      "PostId": "d4f249ff-5aa5-44a1-bf31-ceced19131b4",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> The one thing I'm still unsure of is if the user have to bundle the sound into the game or is it possible to ONLY use external (linked) files (no matter what the file extension)?\r\n\r\nIf you have the sound hosted on an external site and you only link to that from within your game, there is no need to include the audio file in your game.\r\n\r\nSo, if your source is like ```https://whatever.com/mysound.mp3```, you do not need to add the file to your game folder.\r\n\r\nBut, if your source is loading a local file, like ```GetFileURL(\"mysound.mp3\")```, you DO need to add the file to your game folder.\r\n\r\n---\r\nThis applies to all file extensions and all file types.\r\n\r\nIf you are accessing a local file during play, that file must be in your main game's folder AND you must be sure the extension is included in **game.publishfileextensions**.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>The one thing I'm still unsure of is if the user have to bundle the sound into the game or is it possible to ONLY use external (linked) files (no matter what the file extension)?</p>\n</blockquote>\n<p>If you have the sound hosted on an external site and you only link to that from within your game, there is no need to include the audio file in your game.</p>\n<p>So, if your source is like <code>https://whatever.com/mysound.mp3</code>, you do not need to add the file to your game folder.</p>\n<p>But, if your source is loading a local file, like <code>GetFileURL(\"mysound.mp3\")</code>, you DO need to add the file to your game folder.</p>\n<hr>\n<p>This applies to all file extensions and all file types.</p>\n<p>If you are accessing a local file during play, that file must be in your main game's folder AND you must be sure the extension is included in <strong>game.publishfileextensions</strong>.</p>\n\n",
      "PostDate": "2018-04-20T19:04:43.8448832Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "dcc8868b-9b71-49d8-b0eb-f859b2218699",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Oh, and I've optimized my game for iUsers about..... 0%. I see no point in starting caring about them now :)\r\n\r\nJust you wait.  The reports will come pouring in.  \r\n\r\n\"The sounds don't work!\"  \r\n\r\n\"Doing [so-and-so] makes the game freeze up!\"\r\n\r\nThey'll all be playing on mobile devices or outdated browsers.\r\n\r\nOnce you add sounds, especially if they are important to the game, you have to go way out of your way to avoid issues on all the different players.\r\n\r\nThe desktop player does stuff neither the web player nor the mobile player will do.\r\n\r\nThe web player and the mobile player do stuff the desktop player won't do.\r\n\r\nThe web player does stuff neither the mobile player nor the desktop player will do.\r\n\r\n(I don't think the mobile player can do anything the the web player can't do.)\r\n\r\nQuest 5.7.2 can do stuff Quest 5.6.3 can't do.\r\n\r\nIt's all about the differences in browser functionality, and this sometimes concerns things other than audio and video.   And this concerns all HTML-related stuff, not just Quest.\r\n\r\n---\r\nIn an effort to remain as sane as possible, I made one game so it won't play on mobile.\r\n\r\nIf it finds the mobile browser when the game loads, it simply ends the game and prints, \"Sorry.  This game cannot be played in a mobile browser!\".",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Oh, and I've optimized my game for iUsers about..... 0%. I see no point in starting caring about them now :)</p>\n</blockquote>\n<p>Just you wait.  The reports will come pouring in.</p>\n<p>\"The sounds don't work!\"</p>\n<p>\"Doing [so-and-so] makes the game freeze up!\"</p>\n<p>They'll all be playing on mobile devices or outdated browsers.</p>\n<p>Once you add sounds, especially if they are important to the game, you have to go way out of your way to avoid issues on all the different players.</p>\n<p>The desktop player does stuff neither the web player nor the mobile player will do.</p>\n<p>The web player and the mobile player do stuff the desktop player won't do.</p>\n<p>The web player does stuff neither the mobile player nor the desktop player will do.</p>\n<p>(I don't think the mobile player can do anything the the web player can't do.)</p>\n<p>Quest 5.7.2 can do stuff Quest 5.6.3 can't do.</p>\n<p>It's all about the differences in browser functionality, and this sometimes concerns things other than audio and video.   And this concerns all HTML-related stuff, not just Quest.</p>\n<hr>\n<p>In an effort to remain as sane as possible, I made one game so it won't play on mobile.</p>\n<p>If it finds the mobile browser when the game loads, it simply ends the game and prints, \"Sorry.  This game cannot be played in a mobile browser!\".</p>\n\n",
      "PostDate": "2018-04-20T21:14:37.4263221Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "edb5cd53-01ed-4010-b95d-faef55bcc1ba",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I almost went insane reading that...",
      "EditableFormat": "markdown",
      "HTML": "<p>I almost went insane reading that...</p>\n\n",
      "PostDate": "2018-04-20T22:42:23.5441787Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f1e4938a-4e13-4a5e-a73a-0b3138e2f728",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "https://en.wikipedia.org/wiki/MP3#Licensing,_ownership_and_legislation\r\n\r\nIt's a bunch of red tape.  (Ha!  I've always wanted to be able to slide that into a conversation!)\r\n\r\nChromium is open-source, so they didn't include the 3rd party software (which was (is?)) needed to play mp3/mp4.  *(Linux does the same thing.  When installing derivatives of Ubuntu, you are asked if you'd like to install third party software to have mp3/mp4 functionality during the installation.)*\r\n\r\nThe desktop player runs games in an embedded Chromium browser, so the browser itself will not play mp3s or mp4s.  (This means you can't add them to the game with HTML ```<audio>``` or ```<video>``` tags.  The only way mp3s play in the desktop player is by using the built-in ```play sound``` script.)\r\n\r\nI don't have access to a Mac or any Apple devices, but I've had friends test everything out for me by posting test games online.\r\n\r\nMacs will play .ogg, .ogv, .mp3, and .mp4.  iPads and iPhones, however, will only play .mp3 and .mp4.\r\n\r\n---\r\nAs far as mobile browsers not having the ```autoplay``` feature, thus needing to have ```controls``` is concerned, this goes for all mobile browsers, not just iStuff.\r\n\r\nThey say this is for the customer.  It protects them from unintentional high data usage.\r\n\r\n---\r\nSORT OF NOT OFF-TOPIC:\r\n\r\nAnother thing we need to keep in mind is the font we choose.\r\n\r\nIt's not a big of a deal as the audio/video formats, but the user still needs the font we choose installed on their device for our font to display correctly.\r\n\r\n...unless we load a [web font](http://docs.textadventures.co.uk/quest/attributes/defaultwebfont.html).\r\n\r\nTo do that, we can set it in the GUI when using only one web font.  If using multiple web fonts, in \"User Interface Initialisation\", add this:\r\n```\r\n// Edit this list to include/exclude any font from fonts.google.com.\r\n// Mind your capitalization and spacing!!!\r\ngame.webfonts = Split(\"Chicle;Indie Flower;Anton;Lobster;Press Start 2P\")\r\nforeach (font, game.webfonts) {\r\n  SetWebFontName (font)\r\n}\r\n// Assuming your initial font is the default font and not a web font, use the next line of code.  If not, comment out the next line and uncomment the last line of code.\r\nSetFontName (game.defaultfont)\r\n// If your initial font is a web font, and you set it up in the editor (or before this script),  uncomment the next line.\r\n//SetWebFontName(game.defaultwebfont)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>https://en.wikipedia.org/wiki/MP3#Licensing,_ownership_and_legislation</p>\n<p>It's a bunch of red tape.  (Ha!  I've always wanted to be able to slide that into a conversation!)</p>\n<p>Chromium is open-source, so they didn't include the 3rd party software (which was (is?)) needed to play mp3/mp4.  <em>(Linux does the same thing.  When installing derivatives of Ubuntu, you are asked if you'd like to install third party software to have mp3/mp4 functionality during the installation.)</em></p>\n<p>The desktop player runs games in an embedded Chromium browser, so the browser itself will not play mp3s or mp4s.  (This means you can't add them to the game with HTML <code>&lt;audio&gt;</code> or <code>&lt;video&gt;</code> tags.  The only way mp3s play in the desktop player is by using the built-in <code>play sound</code> script.)</p>\n<p>I don't have access to a Mac or any Apple devices, but I've had friends test everything out for me by posting test games online.</p>\n<p>Macs will play .ogg, .ogv, .mp3, and .mp4.  iPads and iPhones, however, will only play .mp3 and .mp4.</p>\n<hr>\n<p>As far as mobile browsers not having the <code>autoplay</code> feature, thus needing to have <code>controls</code> is concerned, this goes for all mobile browsers, not just iStuff.</p>\n<p>They say this is for the customer.  It protects them from unintentional high data usage.</p>\n<hr>\n<p>SORT OF NOT OFF-TOPIC:</p>\n<p>Another thing we need to keep in mind is the font we choose.</p>\n<p>It's not a big of a deal as the audio/video formats, but the user still needs the font we choose installed on their device for our font to display correctly.</p>\n<p>...unless we load a <a href=\"http://docs.textadventures.co.uk/quest/attributes/defaultwebfont.html\">web font</a>.</p>\n<p>To do that, we can set it in the GUI when using only one web font.  If using multiple web fonts, in \"User Interface Initialisation\", add this:</p>\n<pre><code>// Edit this list to include/exclude any font from fonts.google.com.\n// Mind your capitalization and spacing!!!\ngame.webfonts = Split(\"Chicle;Indie Flower;Anton;Lobster;Press Start 2P\")\nforeach (font, game.webfonts) {\n  SetWebFontName (font)\n}\n// Assuming your initial font is the default font and not a web font, use the next line of code.  If not, comment out the next line and uncomment the last line of code.\nSetFontName (game.defaultfont)\n// If your initial font is a web font, and you set it up in the editor (or before this script),  uncomment the next line.\n//SetWebFontName(game.defaultwebfont)\n</code></pre>\n\n",
      "PostDate": "2018-04-21T03:52:24.7377999Z",
      "LastEditDate": "2018-04-21T04:05:16.9335552Z",
      "link": null
    },
    {
      "PostId": "6e750e54-07e6-4e8e-a946-c92ee8619901",
      "UserId": 348994,
      "Username": "CheeseMyBaby",
      "AvatarUrl": "https://i.imgur.com/c5nBbAgb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Guess I'll add a line to the first 'warning screen' about music/sound not working on mobile devices and how the player is a complete moron for wanting to play a parser game on their phone/tab <small>(it's all in line with the rhetoric of my game so I feel completely chill in doing so) </small>\r\n\r\n<h2>[Rant from a non coder]</h2>\r\nIsn't it a bit wierd though? That it should take this much work to have functioning sounds/music in your game?\r\nI mean...\r\nGame. Music.Sounds.\r\nA <b>g a m e</b> with m u s i c? It's hardly an uncommon feature.\r\nTo some (read: to me) music is as important to a good game as storyline.\r\nKid Icarus (NES) is to this day one of my favourite games and that's, hands down, because of the music.\r\nAs a kid, when starting playing it, I didn't like the game. The only reason I kept playing it was because of  the music (and then, of course, the game grew on me and I played it a whole lot)\r\n\r\n<h2>[/Rant from a non coder]</h2>",
      "EditableFormat": "markdown",
      "HTML": "<p>Guess I'll add a line to the first 'warning screen' about music/sound not working on mobile devices and how the player is a complete moron for wanting to play a parser game on their phone/tab <small>(it's all in line with the rhetoric of my game so I feel completely chill in doing so) </small></p>\n<p></p><h2>[Rant from a non coder]</h2><br>\nIsn't it a bit wierd though? That it should take this much work to have functioning sounds/music in your game?<br>\nI mean...<br>\nGame. Music.Sounds.<br>\nA <b>g a m e</b> with m u s i c? It's hardly an uncommon feature.<br>\nTo some (read: to me) music is as important to a good game as storyline.<br>\nKid Icarus (NES) is to this day one of my favourite games and that's, hands down, because of the music.<br>\nAs a kid, when starting playing it, I didn't like the game. The only reason I kept playing it was because of  the music (and then, of course, the game grew on me and I played it a whole lot)<p></p>\n<p></p><h2>[/Rant from a non coder]</h2><p></p>\n\n",
      "PostDate": "2018-04-22T19:13:54.6396037Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d7f27488-16a6-49e5-a599-1c494ec32b8f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "#### **EDITED**\r\n\r\nIt's not Quest's fault.\r\n\r\nIt's the world's fault.  This is the stuff you have to deal with when using the internet.",
      "EditableFormat": "markdown",
      "HTML": "<h4><strong>EDITED</strong></h4>\n<p>It's not Quest's fault.</p>\n<p>It's the world's fault.  This is the stuff you have to deal with when using the internet.</p>\n\n",
      "PostDate": "2018-04-22T21:49:55.7648746Z",
      "LastEditDate": "2018-04-22T22:02:52.8933901Z",
      "link": null
    },
    {
      "PostId": "5d1c3085-0681-4f15-85fc-6cc90807ee94",
      "UserId": 348994,
      "Username": "CheeseMyBaby",
      "AvatarUrl": "https://i.imgur.com/c5nBbAgb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Lol. Indeed it is so.\r\n\r\nI've written my first character theme and tried to incorporate it in the game last night (using your audvidlib) and it's working like a charm! (see for yourself, you have the link ;) \r\nI've uploaded mp3 and ogg versions of everything I've written so far. With your lib, it was no way near the hassle I expected it to be.\r\nForget my last post!",
      "EditableFormat": "markdown",
      "HTML": "<p>Lol. Indeed it is so.</p>\n<p>I've written my first character theme and tried to incorporate it in the game last night (using your audvidlib) and it's working like a charm! (see for yourself, you have the link ;)<br>\nI've uploaded mp3 and ogg versions of everything I've written so far. With your lib, it was no way near the hassle I expected it to be.<br>\nForget my last post!</p>\n\n",
      "PostDate": "2018-04-23T08:11:05.334879Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e41505fa-e49c-444f-bc27-b1fbf15fb22f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> With your lib, it was no way near the hassle I expected it to be.\r\n\r\nAwesome!\r\n\r\nSometimes, I get tired of adding the same code to each new game, and a library is born.  (And sometimes the library doesn't suck!  Bwahahahaha!)\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>With your lib, it was no way near the hassle I expected it to be.</p>\n</blockquote>\n<p>Awesome!</p>\n<p>Sometimes, I get tired of adding the same code to each new game, and a library is born.  (And sometimes the library doesn't suck!  Bwahahahaha!)</p>\n\n",
      "PostDate": "2018-04-23T20:17:33.7004513Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2fe403f6-5215-4993-b5da-830a9921c9f8",
      "UserId": 348994,
      "Username": "CheeseMyBaby",
      "AvatarUrl": "https://i.imgur.com/c5nBbAgb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "All the better for people like me (slow learners) to reap the rewards of your hard work. Muwauhwa.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>All the better for people like me (slow learners) to reap the rewards of your hard work. Muwauhwa.</p>\n\n",
      "PostDate": "2018-04-24T07:32:34.8904428Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
