{
  "Topic": {
    "TopicId": "5021",
    "ForumId": "10",
    "Title": "Tracking values given to an attribute",
    "LastUpdated": "2015-02-03T21:47:34+00:00",
    "ReplyCount": 30
  },
  "Posts": [
    {
      "PostId": "34459",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "Say I have a bubble gum machine and each time you hit it a piece of bubble gum spits out and lands on the floor. I want to keep track of how many times this has happened. Is it simply a case of adding something like this to the script&#058;\n\n[code:1l187hem]bubblegum&#46;floor + 1[/code:1l187hem]\n\nAnd do I have to create that attribute somewhere first or does Quest do that automatically if I just do something like above (which I'm sure is wrong but on the right track).",
      "EditableFormat": "bbcode",
      "HTML": "Say I have a bubble gum machine and each time you hit it a piece of bubble gum spits out and lands on the floor. I want to keep track of how many times this has happened. Is it simply a case of adding something like this to the script&#058;<br/><br/><pre><code>bubblegum&#46;floor + 1</code></pre><br/><br/>And do I have to create that attribute somewhere first or does Quest do that automatically if I just do something like above (which I'm sure is wrong but on the right track).",
      "PostDate": "2015-02-03T12:40:56+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34461",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "What you have there is an expression that will add one to the existing value, but you then need to assign that to something (itself in this case). However, it would be better to keep count on the machine, rather than the bubble gums, of which there could be many, their names will all be different, and presumably some or all could be eaten.\n[code:3rdvlrmr]bubblegummachine&#46;floor = bubblegummachine&#46;floor + 1[/code:3rdvlrmr]\nSo this will set the value of the &quot;floor&quot; attribute of the bubblegummachine to whatever it was previously plus one.\n\nWhen you assign a value to an attribute, Quest will indeed create the attribute for you. However, in this case, it will first look for the old value, find it missing, and object that you cannot an integer to null. So yes, you will need to set an initial value. Either have this in the start script&#058;\n[code:3rdvlrmr]bubblegummachine&#46;floor = 0[/code:3rdvlrmr]\nOr go to the attributes tab, and create a new integer attribute there (this is the way I prefer as it keeps everything collected together on the one object).",
      "EditableFormat": "bbcode",
      "HTML": "What you have there is an expression that will add one to the existing value, but you then need to assign that to something (itself in this case). However, it would be better to keep count on the machine, rather than the bubble gums, of which there could be many, their names will all be different, and presumably some or all could be eaten.<br/><pre><code>bubblegummachine&#46;floor = bubblegummachine&#46;floor + 1</code></pre><br/>So this will set the value of the &quot;floor&quot; attribute of the bubblegummachine to whatever it was previously plus one.<br/><br/>When you assign a value to an attribute, Quest will indeed create the attribute for you. However, in this case, it will first look for the old value, find it missing, and object that you cannot an integer to null. So yes, you will need to set an initial value. Either have this in the start script&#058;<br/><pre><code>bubblegummachine&#46;floor = 0</code></pre><br/>Or go to the attributes tab, and create a new integer attribute there (this is the way I prefer as it keeps everything collected together on the one object).",
      "PostDate": "2015-02-03T13:03:57+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34462",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "Thanks. I couldn't find anything in the documentation explaining that. Basically I'll have an object called a piece of bubblegum (hypothetically) and an object called a couple of pieces of bubblegum and then one called a pile of bubblegum. I've already got that aspect working but then decided that I want the info relayed dynamically:\n\n[code:33uvhg6v]{if bubblegummachine&#46;floor&gt;=3&#58;a pile of bubblegum is at your feet&#46;}[/code:33uvhg6v]\n\nBut also if the player picks up a piece of bubblegum I'd need to know which scenery object should be present and switch accordingly.",
      "EditableFormat": "bbcode",
      "HTML": "Thanks. I couldn't find anything in the documentation explaining that. Basically I'll have an object called a piece of bubblegum (hypothetically) and an object called a couple of pieces of bubblegum and then one called a pile of bubblegum. I've already got that aspect working but then decided that I want the info relayed dynamically:<br/><br/><pre><code>{if bubblegummachine&#46;floor&gt;=3&#58;a pile of bubblegum is at your feet&#46;}</code></pre><br/><br/>But also if the player picks up a piece of bubblegum I'd need to know which scenery object should be present and switch accordingly.",
      "PostDate": "2015-02-03T13:28:44+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34464",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "With regards to the above, is a Boolean also a 'value' or does the value have to be numerical? For example would this work:\n\n[code:2bq0svq2]{if player&#46;sick=true&#58;you've felt better than you do right now&#46;}[/code:2bq0svq2]\n\n?",
      "EditableFormat": "bbcode",
      "HTML": "With regards to the above, is a Boolean also a 'value' or does the value have to be numerical? For example would this work:<br/><br/><pre><code>{if player&#46;sick=true&#58;you've felt better than you do right now&#46;}</code></pre><br/><br/>",
      "PostDate": "2015-02-03T13:58:38+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34469",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "yes.\n\n{if player.sick=true:you've felt better than you do right now.else if player.sick=false:you feel really great right now.}\n\n(I'm not sure if this is the correct syntax, but it should otherwise work, as the text processor should have this functionality: a quicker and more simple structure of coding)\n\nwith Boolean usage, the quest engine understands, the shortened form:\n\n'player.sick=true' ---&gt; 'player.sick'\n\nquest's engined is programmed to understand that 'player.sick' is the default short form of 'player.sick=true', so if you want to tell the engine that a Boolean has the Value of 'false', you must write '=false', unless you're bypassing this via using an 'if' Script's 'else' functionality, hehe.\n\nso, Jay especially, would prefer this structure instead of the one above (lol):\n\n{if player.sick:you've felt better than you do right now.else:you feel really great right now.}",
      "EditableFormat": "bbcode",
      "HTML": "yes.<br/><br/>{if player.sick=true:you've felt better than you do right now.else if player.sick=false:you feel really great right now.}<br/><br/>(I'm not sure if this is the correct syntax, but it should otherwise work, as the text processor should have this functionality: a quicker and more simple structure of coding)<br/><br/>with Boolean usage, the quest engine understands, the shortened form:<br/><br/>'player.sick=true' ---&gt; 'player.sick'<br/><br/>quest's engined is programmed to understand that 'player.sick' is the default short form of 'player.sick=true', so if you want to tell the engine that a Boolean has the Value of 'false', you must write '=false', unless you're bypassing this via using an 'if' Script's 'else' functionality, hehe.<br/><br/>so, Jay especially, would prefer this structure instead of the one above (lol):<br/><br/>{if player.sick:you've felt better than you do right now.else:you feel really great right now.}",
      "PostDate": "2015-02-03T17:58:03+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34470",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "Thanks. The 'else' part of your text processor script won't work though as it's not supported in Quest. I was more checking whether a 'value' has to be numerical or whether 'true' is also a 'value'.",
      "EditableFormat": "bbcode",
      "HTML": "Thanks. The 'else' part of your text processor script won't work though as it's not supported in Quest. I was more checking whether a 'value' has to be numerical or whether 'true' is also a 'value'.",
      "PostDate": "2015-02-03T18:03:02+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34471",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "Oh right, so I don't even need the 'value'. As long as player.sick = player.sick = true then this will work:\n\n{if player.sick:you've felt better than you do right now.}\n\nI think...",
      "EditableFormat": "bbcode",
      "HTML": "Oh right, so I don't even need the 'value'. As long as player.sick = player.sick = true then this will work:<br/><br/>{if player.sick:you've felt better than you do right now.}<br/><br/>I think...",
      "PostDate": "2015-02-03T18:07:23+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34472",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "in code form, the quest engine is programmed to be able to determine (?parse?) the Attribute Type from its Value.\n\n'set a variable or attribute' Script&#058;\n\nObject_name.Attribute_name = Value_or_Expression\n\nthe Value forms:\n\n= &quot;xxx&quot; ---&gt; String Attribute\n= ### ---&gt; Integer Attribte\n= xxx ---&gt; (except 'true' and nor 'false' ) ---&gt; Object Attribute\n= #.# ---&gt; Double Attribute\n= true ---&gt; Boolean Attribute\n= false ---&gt; Boolean Attribute\n\notherwise, you can use the:\n\n'set' Script&#058;\n\nset (Object_name, &quot;Attribute_name&quot;, Value)\n\nand lastly, you can convert between String and Integer Values (which thus converts between String Attributes and Integer Attributes):\n\nget input {\n// you type in a number, which will be the Attribute's Value, making~setting the Attribute be an Integer Attribute:\nplayer.strength = result\n// but now you changed your mind and want it to be set to a String Attribute:\nplayer.strength = ToString (player.strength)\n// but wait, you changed your mind again, wanting it to be back to an Integer:\nplayer.strength = ToInt (player.strength)\n// and then back to a String again, just kiding ... hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "EditableFormat": "bbcode",
      "HTML": "in code form, the quest engine is programmed to be able to determine (?parse?) the Attribute Type from its Value.<br/><br/>'set a variable or attribute' Script&#058;<br/><br/>Object_name.Attribute_name = Value_or_Expression<br/><br/>the Value forms:<br/><br/>= &quot;xxx&quot; ---&gt; String Attribute<br/>= ### ---&gt; Integer Attribte<br/>= xxx ---&gt; (except 'true' and nor 'false' ) ---&gt; Object Attribute<br/>= #.# ---&gt; Double Attribute<br/>= true ---&gt; Boolean Attribute<br/>= false ---&gt; Boolean Attribute<br/><br/>otherwise, you can use the:<br/><br/>'set' Script&#058;<br/><br/>set (Object_name, &quot;Attribute_name&quot;, Value)<br/><br/>and lastly, you can convert between String and Integer Values (which thus converts between String Attributes and Integer Attributes):<br/><br/>get input {<br/>// you type in a number, which will be the Attribute's Value, making~setting the Attribute be an Integer Attribute:<br/>player.strength = result<br/>// but now you changed your mind and want it to be set to a String Attribute:<br/>player.strength = ToString (player.strength)<br/>// but wait, you changed your mind again, wanting it to be back to an Integer:<br/>player.strength = ToInt (player.strength)<br/>// and then back to a String again, just kiding ... hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "PostDate": "2015-02-03T18:20:15+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34473",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "Okay, so now I understand integer and boolean. Can you give any practical examples of where a string or double attribute would be used?",
      "EditableFormat": "bbcode",
      "HTML": "Okay, so now I understand integer and boolean. Can you give any practical examples of where a string or double attribute would be used?",
      "PostDate": "2015-02-03T18:24:14+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34474",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "here's an analogy\n\nif I were to say 'redneck'\n\nyou would immediate default that this person is a(n American) conservative or that they support the 2nd Amendment\n\nwhen you type in:\n\nif (orc.dead) { script }\n\nquest is programmed to default that this is: orc.dead=true\n\nso, if you want to set the Boolean to the Value of 'false', you must write~type it in, as otherwise quest will think it's Value is '=true', so you type it in:\n\norc.dead=false\n\nso, it's just a way of saving time, not having to write~type as much, and with (often) it being used within an 'if' script, it reduces possible clutter confusion, which is what Jay likes:\n\nif (orc.dead) {\n-&gt; script1\n} else {\n-&gt; script2\n}\n\nno clutter\n\nwhereas, I personally like the 'clutter', as it helps me understand what's going on:\n\nif (orc.dead=true) {\n-&gt; script1\n} else if (orc.dead=false) {\n-&gt; script2\n}",
      "EditableFormat": "bbcode",
      "HTML": "here's an analogy<br/><br/>if I were to say 'redneck'<br/><br/>you would immediate default that this person is a(n American) conservative or that they support the 2nd Amendment<br/><br/>when you type in:<br/><br/>if (orc.dead) { script }<br/><br/>quest is programmed to default that this is: orc.dead=true<br/><br/>so, if you want to set the Boolean to the Value of 'false', you must write~type it in, as otherwise quest will think it's Value is '=true', so you type it in:<br/><br/>orc.dead=false<br/><br/>so, it's just a way of saving time, not having to write~type as much, and with (often) it being used within an 'if' script, it reduces possible clutter confusion, which is what Jay likes:<br/><br/>if (orc.dead) {<br/>-&gt; script1<br/>} else {<br/>-&gt; script2<br/>}<br/><br/>no clutter<br/><br/>whereas, I personally like the 'clutter', as it helps me understand what's going on:<br/><br/>if (orc.dead=true) {<br/>-&gt; script1<br/>} else if (orc.dead=false) {<br/>-&gt; script2<br/>",
      "PostDate": "2015-02-03T18:32:16+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34476",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "But how does that explain what a string attribute is?",
      "EditableFormat": "bbcode",
      "HTML": "But how does that explain what a string attribute is?",
      "PostDate": "2015-02-03T18:39:14+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34477",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Only for a Boolean WITHIN AN 'IF' Script and having a 'true' Value, do you not need to write~type it in, all other Values must be written~typed in, as quest has no way of knowing what the Value is otherwise.\n\nString Attributes:\n\nif (player.condition = &quot;poisoned&quot;) {\n-&gt; player.hp = player.hp - 50\n} else if (player.condition = &quot;confused&quot;) {\n-&gt; party_member_1.hp = party_member_1.hp - player.damage\n} else if (player.condition = &quot;stunned&quot;) {\n-&gt; player.turn_skipped = true\n}\n\nDouble Attributes:\n\nI haven't worked with these yet, but they're just working with decimal numbers:\n\n3.478798\n2355.19\n7.5\n0.00001\n-0.00001\n-7.5\n\ninstead of 'whole' numbers like Integer Attirbutes:\n\n-1\n0\n1\n5\n100",
      "EditableFormat": "bbcode",
      "HTML": "Only for a Boolean WITHIN AN 'IF' Script and having a 'true' Value, do you not need to write~type it in, all other Values must be written~typed in, as quest has no way of knowing what the Value is otherwise.<br/><br/>String Attributes:<br/><br/>if (player.condition = &quot;poisoned&quot;) {<br/>-&gt; player.hp = player.hp - 50<br/>} else if (player.condition = &quot;confused&quot;) {<br/>-&gt; party_member_1.hp = party_member_1.hp - player.damage<br/>} else if (player.condition = &quot;stunned&quot;) {<br/>-&gt; player.turn_skipped = true<br/>}<br/><br/>Double Attributes:<br/><br/>I haven't worked with these yet, but they're just working with decimal numbers:<br/><br/>3.478798<br/>2355.19<br/>7.5<br/>0.00001<br/>-0.00001<br/>-7.5<br/><br/>instead of 'whole' numbers like Integer Attirbutes:<br/><br/>-1<br/>0<br/>1<br/>5<br/>100",
      "PostDate": "2015-02-03T18:43:49+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34478",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "You already use strings. The descriptions for rooms and objects are strings (unless you they are scripts). If you let the player type in a name for herself, you would story that as a string. You could assign your bubblegum a random flavour when the machine produces it, and hold that in a string.\n\nAs for doubles, I have never used them in Quest, and rarely anywhere else.",
      "EditableFormat": "bbcode",
      "HTML": "You already use strings. The descriptions for rooms and objects are strings (unless you they are scripts). If you let the player type in a name for herself, you would story that as a string. You could assign your bubblegum a random flavour when the machine produces it, and hold that in a string.<br/><br/>As for doubles, I have never used them in Quest, and rarely anywhere else.",
      "PostDate": "2015-02-03T18:49:51+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34479",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "String Attribute:\n\nif (orc.dead = &quot;0&quot;) {\n-&gt; script1\n} else if (orc.dead = &quot;1&quot;) {\n-&gt; script2\n} else if (orc.dead = &quot;2&quot;) {\n-&gt; script3\n} else {\n-&gt; script4\n}\n\n{if orc.dead=&quot;0&quot; msg (&quot;hi&quot;)}\n{if orc.dead=&quot;1&quot; msg (&quot;bye&quot;)}\n\nInteger Attribute:\n\nif (orc.dead = 0) {\n-&gt; script1\n} else if (orc.dead = 1) {\n-&gt; script2\n} else if (orc.dead = 2) {\n-&gt; script3\n} else {\n-&gt; script4\n}\n\nBoolean Attribute:\n\nif (orc.dead = true) {\n-&gt; script1\n} else if (orc.dead = false) {\n-&gt; script2\n}\n\nObject Attribute:\n\nif (orc.dead = apple) {\n-&gt; script1\n} else if (orc.dead = banana) {\n-&gt; script2\n} else if (orc.dead = lemon) {\n-&gt; script3\n} else {\n-&gt; script4\n}\n\nString Attribute:\n\nif (orc.dead = &quot;apple&quot;) {\n-&gt; script1\n} else if (orc.dead = &quot;banana&quot;) {\n-&gt; script2\n} else if (orc.dead = &quot;lemon&quot;) {\n-&gt; script3\n} else {\n-&gt; script4\n}",
      "EditableFormat": "bbcode",
      "HTML": "String Attribute:<br/><br/>if (orc.dead = &quot;0&quot;) {<br/>-&gt; script1<br/>} else if (orc.dead = &quot;1&quot;) {<br/>-&gt; script2<br/>} else if (orc.dead = &quot;2&quot;) {<br/>-&gt; script3<br/>} else {<br/>-&gt; script4<br/>}<br/><br/>{if orc.dead=&quot;0&quot; msg (&quot;hi&quot;)}<br/>{if orc.dead=&quot;1&quot; msg (&quot;bye&quot;)}<br/><br/>Integer Attribute:<br/><br/>if (orc.dead = 0) {<br/>-&gt; script1<br/>} else if (orc.dead = 1) {<br/>-&gt; script2<br/>} else if (orc.dead = 2) {<br/>-&gt; script3<br/>} else {<br/>-&gt; script4<br/>}<br/><br/>Boolean Attribute:<br/><br/>if (orc.dead = true) {<br/>-&gt; script1<br/>} else if (orc.dead = false) {<br/>-&gt; script2<br/>}<br/><br/>Object Attribute:<br/><br/>if (orc.dead = apple) {<br/>-&gt; script1<br/>} else if (orc.dead = banana) {<br/>-&gt; script2<br/>} else if (orc.dead = lemon) {<br/>-&gt; script3<br/>} else {<br/>-&gt; script4<br/>}<br/><br/>String Attribute:<br/><br/>if (orc.dead = &quot;apple&quot;) {<br/>-&gt; script1<br/>} else if (orc.dead = &quot;banana&quot;) {<br/>-&gt; script2<br/>} else if (orc.dead = &quot;lemon&quot;) {<br/>-&gt; script3<br/>} else {<br/>-&gt; script4<br/>",
      "PostDate": "2015-02-03T18:51:08+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34480",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "Ah, HK the 'else' script in the text processor is:\n\n[code:1ek1c8gh]{if not object&#46;attribute&#58;text}[/code:1ek1c8gh]\n\nThey have to be done separately though afaik.\n\n[code:1ek1c8gh]{if object&#46;attribute&#58;text}{if not object&#46;attribute&#58;text}[/code:1ek1c8gh]",
      "EditableFormat": "bbcode",
      "HTML": "Ah, HK the 'else' script in the text processor is:<br/><br/><pre><code>{if not object&#46;attribute&#58;text}</code></pre><br/><br/>They have to be done separately though afaik.<br/><br/><pre><code>{if object&#46;attribute&#58;text}{if not object&#46;attribute&#58;text}</code></pre>",
      "PostDate": "2015-02-03T18:52:44+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34481",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "The text processor is well handy! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> I'm glad I turned up when I did and not years ago.",
      "EditableFormat": "bbcode",
      "HTML": "The text processor is well handy! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> I'm glad I turned up when I did and not years ago.",
      "PostDate": "2015-02-03T18:55:33+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34482",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "ah, so you just need to use the 'not' condition, plus another segment of typing... would be nicer if Alex could program it in to recognize 'if else' and 'else' instead... but I'm sure it's not easy (or because he can't do so), or he'd have done it in the first place, hehe.\n\nthe text processor is just a faster way to write~type it in, but the same logic is being done.\n\nif (orc.dead=true) {\n-&gt; msg (&quot;hi&quot;)\n} else if (orc.dead=false) {\n-&gt; msg (&quot;bye&quot;)\n}\n\nis the same as\n\n{if orc.dead msg (&quot;hi&quot;)} {if not orc.dead msg (&quot;bye&quot;)}\n\nor if Booleans worked with 'else if' in squiffy:\n\n{if orc.dead msg (&quot;hi&quot;). else if orc.dead=false msg (&quot;bye&quot;)}\n\nor with 'else' too:\n\n{if orc.dead msg (&quot;hi&quot;). else msg (&quot;bye&quot;)}",
      "EditableFormat": "bbcode",
      "HTML": "ah, so you just need to use the 'not' condition, plus another segment of typing... would be nicer if Alex could program it in to recognize 'if else' and 'else' instead... but I'm sure it's not easy (or because he can't do so), or he'd have done it in the first place, hehe.<br/><br/>the text processor is just a faster way to write~type it in, but the same logic is being done.<br/><br/>if (orc.dead=true) {<br/>-&gt; msg (&quot;hi&quot;)<br/>} else if (orc.dead=false) {<br/>-&gt; msg (&quot;bye&quot;)<br/>}<br/><br/>is the same as<br/><br/>{if orc.dead msg (&quot;hi&quot;)} {if not orc.dead msg (&quot;bye&quot;)}<br/><br/>or if Booleans worked with 'else if' in squiffy:<br/><br/>{if orc.dead msg (&quot;hi&quot;). else if orc.dead=false msg (&quot;bye&quot;)}<br/><br/>or with 'else' too:<br/><br/>{if orc.dead msg (&quot;hi&quot;). else msg (&quot;bye&quot;)}",
      "PostDate": "2015-02-03T18:56:18+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34483",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "He's done {else:text} in squiffy apparently. But for a boolean if not works just as well. Jay won't be happy!  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->",
      "EditableFormat": "bbcode",
      "HTML": "He's done {else:text} in squiffy apparently. But for a boolean if not works just as well. Jay won't be happy!  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->",
      "PostDate": "2015-02-03T18:58:50+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34484",
      "UserId": 0,
      "Username": "jdpjdpjdp",
      "UserAvatar": null,
      "UserGravatar": "540c24bb58e5434b39c7bd72916f5510",
      "EditableText": "Any attribute whose form is just text is a string attribute.  As Pixie said, descriptions are strings unless you add a script to them.\n\nAs for using them in some useful way, HK shows it off above.  Let's say you have a character, Bob, and an attribute, mood.  You make it a string attribute and set it to 'happy', because Bob is usually a happy guy.  But if something in the game can change and make Bob angry, you'd change the value of Bob.mood to 'angry'.  Then you could have a different description/behavior/response based on whether Bob.mood=&quot;happy&quot; or Bob.mood=&quot;angry&quot;.  NOTE: You don't surround it in quotes when putting it in the field, but you DO put it in quotes whenever you invoke it.  So you'd just type happy, no quotes, in the string attribute field, but to use it in a variable you'd need to put Bob.mood=&quot;happy&quot;.  The quotes tell Quest to look for a value that's a string.\n\nIt's just an easy way to have a variable with numerous possible states that can be explicitly named, so you, as the writer, know which attribute it which.  You could do the same exact thing with integers if you wanted, having 1 represent happy, 2 angry, 3 sad, etc.; but using strings prevents you having to remember what value means what.\n\nMaking it a string also has the added benefit of letting you display its value in game.  So you could use the text processor and write &quot;Bob looks {Bob.mood}&quot;, and it would spit out &quot;Bob looks happy&quot; or &quot;Bob looks angry&quot; automatically.",
      "EditableFormat": "bbcode",
      "HTML": "Any attribute whose form is just text is a string attribute.  As Pixie said, descriptions are strings unless you add a script to them.<br/><br/>As for using them in some useful way, HK shows it off above.  Let's say you have a character, Bob, and an attribute, mood.  You make it a string attribute and set it to 'happy', because Bob is usually a happy guy.  But if something in the game can change and make Bob angry, you'd change the value of Bob.mood to 'angry'.  Then you could have a different description/behavior/response based on whether Bob.mood=&quot;happy&quot; or Bob.mood=&quot;angry&quot;.  NOTE: You don't surround it in quotes when putting it in the field, but you DO put it in quotes whenever you invoke it.  So you'd just type happy, no quotes, in the string attribute field, but to use it in a variable you'd need to put Bob.mood=&quot;happy&quot;.  The quotes tell Quest to look for a value that's a string.<br/><br/>It's just an easy way to have a variable with numerous possible states that can be explicitly named, so you, as the writer, know which attribute it which.  You could do the same exact thing with integers if you wanted, having 1 represent happy, 2 angry, 3 sad, etc.; but using strings prevents you having to remember what value means what.<br/><br/>Making it a string also has the added benefit of letting you display its value in game.  So you could use the text processor and write &quot;Bob looks {Bob.mood}&quot;, and it would spit out &quot;Bob looks happy&quot; or &quot;Bob looks angry&quot; automatically.",
      "PostDate": "2015-02-03T19:03:40+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34485",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "Thanks for that. I've had a leap in understanding today. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Thanks for that. I've had a leap in understanding today. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2015-02-03T19:06:34+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34486",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "A few months ago I was like wtf at HK's posts. I probably need to go back over them all now lol. Penny has dropped.",
      "EditableFormat": "bbcode",
      "HTML": "A few months ago I was like wtf at HK's posts. I probably need to go back over them all now lol. Penny has dropped.",
      "PostDate": "2015-02-03T19:08:29+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34490",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "have fun with that, all 1376 posts! <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --> (lots of posts of mine with code, laughs)\n(if you find some certain posts~codings of mine that I've been looking for, let me know! just teasing, I'm having some fun here, hehe)",
      "EditableFormat": "bbcode",
      "HTML": "have fun with that, all 1376 posts! <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --> (lots of posts of mine with code, laughs)<br/>(if you find some certain posts~codings of mine that I've been looking for, let me know! just teasing, I'm having some fun here, hehe)",
      "PostDate": "2015-02-03T20:14:06+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34493",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "[quote=&quot;Silver&quot;:wu0soesj]He's done {else:text} in squiffy apparently. But for a boolean if not works just as well. Jay won't be happy!  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->[/quote:wu0soesj]\nHey, you use what you have. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Silver wrote:</cite>He's done {else:text} in squiffy apparently. But for a boolean if not works just as well. Jay won't be happy!  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --></blockquote><br/>Hey, you use what you have. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2015-02-03T20:42:55+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34494",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "[quote:22ytntx3]quest's engined is programmed to understand that 'player.sick' is the default short form of 'player.sick=true', so if you want to tell the engine that a Boolean has the Value of 'false', you must write '=false', unless you're bypassing this via using an 'if' Script's 'else' functionality, hehe.[/quote:22ytntx3]\n\nActually, it's not the &quot;short form&quot;. Using the &quot;=true&quot; is redundant.  &quot;player.sick&quot; is already a boolean expression.  &quot;player.sick=true&quot; is also a boolean expression, but with the exact same value as &quot;player.sick&quot;. The &quot;player.sick&quot; variable is already true or false. Adding &quot;=true&quot; just generates an expression which is again identically true or false. Here's a truth table:\n\n[code:22ytntx3]player&#46;sick  |  player&#46;sick=true\n---------------------------------------\nfalse        | false\ntrue         | true[/code:22ytntx3]\n\nAnother way to look at it: if you do\n\n[code:22ytntx3]b1 = player&#46;sick\nb2 = (player&#46;sick=true)[/code:22ytntx3]\n\nthen b1 will *always* equal b2. &quot;player.sick=true&quot; will be true or false identically to &quot;player.sick&quot;. You not only gain nothing by adding the &quot;=true&quot;, you also harm the readability of the code.\n\nAs you can see, &quot;player.sick=true&quot; has the exact same value as &quot;player.sick&quot;. Which has the exact same value as &quot;(player.sick = true) = true&quot; which has the exact same value as &quot;((player.sick = true) = true) = true&quot; which has the exact same value... (to infinity).\n\nBy contrast, you must use something like &quot;x=0&quot; to generate a boolean expression, as &quot;x&quot; is not already a boolean. The key thing is that this is not specific to an &quot;if&quot;. You can use boolean expressions just like any other.\n\n[code:22ytntx3]happy = player&#46;happy\noverjoyed = player&#46;overjoyed\nreallyhappy = happy and overjoyed\n\n(which could be&#58; reallyhappy = player&#46;happy and player&#46;overjoyed)\n\npoisoned = player&#46;poisoned\nsick = player&#46;sick\nrich = player&#46;rich\n\nplayer&#46;unhappy = (poisoned or sick) and not rich\n-or-\nplayer&#46;unhappy = (player&#46;poisoned or player&#46;sick) and not player&#46;rich\n[/code:22ytntx3]\nImagine how horrible that would be to read if you had &quot;=true&quot; and &quot;=false&quot; all over the place!\n\nSimilarly, you'd never see &quot;value = false&quot; unless you're using a language doesn't support booleans properly. You'd just see &quot;not value&quot;. Stuff like that. <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>quest's engined is programmed to understand that 'player.sick' is the default short form of 'player.sick=true', so if you want to tell the engine that a Boolean has the Value of 'false', you must write '=false', unless you're bypassing this via using an 'if' Script's 'else' functionality, hehe.</p></blockquote><br/><br/>Actually, it's not the &quot;short form&quot;. Using the &quot;=true&quot; is redundant.  &quot;player.sick&quot; is already a boolean expression.  &quot;player.sick=true&quot; is also a boolean expression, but with the exact same value as &quot;player.sick&quot;. The &quot;player.sick&quot; variable is already true or false. Adding &quot;=true&quot; just generates an expression which is again identically true or false. Here's a truth table:<br/><br/><pre><code>player&#46;sick  |  player&#46;sick=true<br/>---------------------------------------<br/>false        | false<br/>true         | true</code></pre><br/><br/>Another way to look at it: if you do<br/><br/><pre><code>b1 = player&#46;sick<br/>b2 = (player&#46;sick=true)</code></pre><br/><br/>then b1 will *always* equal b2. &quot;player.sick=true&quot; will be true or false identically to &quot;player.sick&quot;. You not only gain nothing by adding the &quot;=true&quot;, you also harm the readability of the code.<br/><br/>As you can see, &quot;player.sick=true&quot; has the exact same value as &quot;player.sick&quot;. Which has the exact same value as &quot;(player.sick = true) = true&quot; which has the exact same value as &quot;((player.sick = true) = true) = true&quot; which has the exact same value... (to infinity).<br/><br/>By contrast, you must use something like &quot;x=0&quot; to generate a boolean expression, as &quot;x&quot; is not already a boolean. The key thing is that this is not specific to an &quot;if&quot;. You can use boolean expressions just like any other.<br/><br/><pre><code>happy = player&#46;happy<br/>overjoyed = player&#46;overjoyed<br/>reallyhappy = happy and overjoyed<br/><br/>(which could be&#58; reallyhappy = player&#46;happy and player&#46;overjoyed)<br/><br/>poisoned = player&#46;poisoned<br/>sick = player&#46;sick<br/>rich = player&#46;rich<br/><br/>player&#46;unhappy = (poisoned or sick) and not rich<br/>-or-<br/>player&#46;unhappy = (player&#46;poisoned or player&#46;sick) and not player&#46;rich<br/></code></pre><br/>Imagine how horrible that would be to read if you had &quot;=true&quot; and &quot;=false&quot; all over the place!<br/><br/>Similarly, you'd never see &quot;value = false&quot; unless you're using a language doesn't support booleans properly. You'd just see &quot;not value&quot;. Stuff like that. <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->",
      "PostDate": "2015-02-03T20:55:17+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34495",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "So If player.sick doesn't need a 'value' as that expression alone means true. \n\nI'm having a great day. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nActually, is it an expression? I got confused at that bit. The adding an = makes it one or something.",
      "EditableFormat": "bbcode",
      "HTML": "So If player.sick doesn't need a 'value' as that expression alone means true. <br/><br/>I'm having a great day. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>Actually, is it an expression? I got confused at that bit. The adding an = makes it one or something.",
      "PostDate": "2015-02-03T21:04:42+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34496",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Well, more like: &quot;if&quot; needs a boolean value passed to it. &quot;player.sick&quot; is already a boolean value. You don't need anything else. (And I added some stuff up there in my earlier post, if that helps. lol)",
      "EditableFormat": "bbcode",
      "HTML": "Well, more like: &quot;if&quot; needs a boolean value passed to it. &quot;player.sick&quot; is already a boolean value. You don't need anything else. (And I added some stuff up there in my earlier post, if that helps. lol)",
      "PostDate": "2015-02-03T21:06:42+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34497",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Yes, &quot;player.sick&quot; is a boolean expression (assuming player.sick is a boolean attribute). You can only pass boolean expressions to &quot;if&quot;, so you need to, uh, &quot;express&quot; such a condition by using comparisons, etc for non-boolean values to turn them into one.",
      "EditableFormat": "bbcode",
      "HTML": "Yes, &quot;player.sick&quot; is a boolean expression (assuming player.sick is a boolean attribute). You can only pass boolean expressions to &quot;if&quot;, so you need to, uh, &quot;express&quot; such a condition by using comparisons, etc for non-boolean values to turn them into one.",
      "PostDate": "2015-02-03T21:08:02+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34498",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "And by readability, I mean that \n\n[code:1tft8y3o]if (player&#46;sick = true)[/code:1tft8y3o]\nreads as if it's asking if the player.sick variable has the value true. Whereas \n\n[code:1tft8y3o]if (player&#46;sick)[/code:1tft8y3o]\nreads as if it's asking if the player is sick. I think people typically care about the latter. I'm probably being too esoteric, but it's so clear in my head. <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->",
      "EditableFormat": "bbcode",
      "HTML": "And by readability, I mean that <br/><br/><pre><code>if (player&#46;sick = true)</code></pre><br/>reads as if it's asking if the player.sick variable has the value true. Whereas <br/><br/><pre><code>if (player&#46;sick)</code></pre><br/>reads as if it's asking if the player is sick. I think people typically care about the latter. I'm probably being too esoteric, but it's so clear in my head. <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->",
      "PostDate": "2015-02-03T21:13:47+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34500",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "I'll probably come unstuck when I try using it. I wasn't thinking about the brackets for starters. Do I set the boolean without the brackets though?\n\n[code:2x74622j]player&#46;sick = true[/code:2x74622j]\n\n[code:2x74622j]If (player&#46;sick) {\n}[/code:2x74622j]\n\n?",
      "EditableFormat": "bbcode",
      "HTML": "I'll probably come unstuck when I try using it. I wasn't thinking about the brackets for starters. Do I set the boolean without the brackets though?<br/><br/><pre><code>player&#46;sick = true</code></pre><br/><br/><pre><code>If (player&#46;sick) {<br/>}</code></pre><br/><br/>",
      "PostDate": "2015-02-03T21:24:42+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34502",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Yes, you'd set it just like any assignment:\n\n[code:rpgbpozl]player&#46;name = &quot;John Doe&quot;\nplayer&#46;age = 21\nplayer&#46;sick = true[/code:rpgbpozl]",
      "EditableFormat": "bbcode",
      "HTML": "Yes, you'd set it just like any assignment:<br/><br/><pre><code>player&#46;name = &quot;John Doe&quot;<br/>player&#46;age = 21<br/>player&#46;sick = true</code></pre>",
      "PostDate": "2015-02-03T21:30:27+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34504",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "Cool, thanks.",
      "EditableFormat": "bbcode",
      "HTML": "Cool, thanks.",
      "PostDate": "2015-02-03T21:47:34+00:00",
      "LastEditDate": null
    }
  ]
}
