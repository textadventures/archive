{
  "Topic": {
    "TopicId": "3771",
    "ForumId": "10",
    "Title": "Amazing mazes - disorientation, movement and mapping",
    "LastUpdated": "2013-07-03T16:32:48+01:00",
    "ReplyCount": 18
  },
  "Posts": [
    {
      "PostId": "25244",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "One of the parts of my text adventure (and so many others I see) is going to be a maze.\n\nThe maze will be full of twisty passages so that you might exit a room to the north, but enter another room (or even the same room) from the west.  Make sense?\n\nNow, I want to do something a little more tricky than that, as the above is easy to do.  \n\nI want to drop the compass directions - your disorientated so after wandering around and doubling back you won't really know which way is north, especially if the walls are impregnated with magnetic rocks <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->.  \n\nSo we have now changed (N)orth, (S)outh, (E)ast, &amp; (W), to (F)orward, (B)ack, (L)eft &amp; (R)ight.  Again, I think this is relatively simple.\n\nThe tricky bit is getting the orientation based on which way you entered a room.\n\nLets say to start with that you enter the maze by going SOUTH, once in you could have the 4 exits F, B, L, &amp; R.  Going BACK would take you back the way you just came (back at the entrance to the maze).\n\nHere comes the tricky bit, so firstly I will give a 3 room map.\n\n[code:1pztl5a6]+---+     +---+\n| 1 |  #### 3 |\n+-#-+  #  +---+\n  #  +-#-+\n  #### 2 ####\n     +-#-+  #\n       #    #\n       ######[/code:1pztl5a6]\n\nIn this map, Room 1 is the Entrance to the maze with exits SOUTH (into the maze) and UP to ground level.\n\nRoom 2 is a standard maze room with exits F, B, L &amp; R - depending on where you entered the room from.\n\nRoom 3 is a dead end with 1 exit (BACK), although it could easily be another maze room.\n\nWhat I want to centre on is Room 2, and how the exits change depending on how you enter the room! I will append all exits with their relative cardinal points for ease of reference, but the use of the compass directions in the maze will not be allowed (with the exception of the entrance as you know where you are).\n\nSo lets say you enter the maze S (effectively entering the maze room from the W), B (W) will take you back to the entrance, L (N) will take you to the dead end and F (E) &amp; R (S) will bring you back to where you are.\n\nLets say we have gone L (N), we have reached a dead end, turned round and gone B (in this case W) on ourselves.  The exits have now changed!  B (N) now leads back to the dead end and R (W) will take us back to the entrance, F (S) and L (E) now loop back on themselves to room 2.\n\nIf we go F (S), we leave the maze room and re-enter the maze room, but now the exits have changed again, B (E) will lead us back the way we came, F (W) will take us to the Entrance, L (S) will just make us make the same loop again and R (N) will take us to the Dead End.\n\nConfused we decide to go B (E), we re-enter the maze room again.  Now F (N) will take us to the dead end, L (W) will take us to the entrance and B (S) &amp; R (E) will loop back into the maze room.\n\nDoes all that make sense?\n\n=======\n\nTo combat the confusion of the maze, I would like the player to be able to drop markers.  Ideally they would find a bag of markers somewhere. Then, when they are in the maze they could drop a marker to mark the room.\n\nSo we find &quot;A Small Bag of Tiles&quot;, examining the bag reveals &quot;A small bag of tiles, there seem to be about 20 tiles in the bag and each tile appears to be numbered individually&quot;.\n\nWhen in a maze room and we use the command &quot;DROP TILE&quot; I want to avoid the dialogue &quot;Which Tile: A Small Bag of Tiles, Tile 1, Tile 2, etc...&quot;\n\nIf there is any choice, I would want it to be &quot;Which Tile: A Small Bag of Tiles or A Tile&quot;\n\nI think I would rather go down the route of using 2 verbs though, provided that people would think of it.\n\nSo DROP TILE would drop the bag, but PLACE TILE would result in &quot;you place tile N on the ground&quot;\n\nOnce a tile has been placed, I don't think I want the player to be able to pick it back up again - this saves issues with a counter if they have placed 9 tiles and pick up tile 5.\n\nSo TAKE TILE would result in something like &quot;You decide not to pick the tile up, you don't want to get lost now do you?&quot;\n\nI am presuming a simple script will allow the tile number to be increased by 1 each time a tile is placed so that you don't have to choose.\n\nThere is one last thing here, where the tile is placed.\n\nI could only allow one tile to be placed in a room - &quot;There is already a tile here&quot; OR I could allow the player to place a tile at each doorway that they enter the room from.\n\nFor example, using the above map, we have entered the maze and we place a marker, we decide to go F (E) and loop round back on ourselves.\n\nIf we have 1 tile per room the description would read something like, &quot;You are in a maze room, there are 4 exits, F, B, L &amp; R.  On the floor you see a tile with the number 1 on it&quot;\n\nIf we have 1 tile per entrance, it would read something more like &quot;You are in a maze room, there are 4 exits, F, B, L &amp; R.  On the floor in front of the left exit, you see a tile with the number 1 on it&quot;\n\nObviously the latter would make it much easier for the player to map out the maze, and perhaps they could even choose to place 4 markers when they enter the room?  But how much more difficult will that make the code - especially considering the changing of the exits based on the perspective of which entrance you have come through.\n\nI hope all this makes sense.\n\nAnd thank you for taking the time to read.",
      "EditableFormat": "bbcode",
      "HTML": "One of the parts of my text adventure (and so many others I see) is going to be a maze.<br/><br/>The maze will be full of twisty passages so that you might exit a room to the north, but enter another room (or even the same room) from the west.  Make sense?<br/><br/>Now, I want to do something a little more tricky than that, as the above is easy to do.  <br/><br/>I want to drop the compass directions - your disorientated so after wandering around and doubling back you won't really know which way is north, especially if the walls are impregnated with magnetic rocks <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->.  <br/><br/>So we have now changed (N)orth, (S)outh, (E)ast, &amp; (W), to (F)orward, (B)ack, (L)eft &amp; (R)ight.  Again, I think this is relatively simple.<br/><br/>The tricky bit is getting the orientation based on which way you entered a room.<br/><br/>Lets say to start with that you enter the maze by going SOUTH, once in you could have the 4 exits F, B, L, &amp; R.  Going BACK would take you back the way you just came (back at the entrance to the maze).<br/><br/>Here comes the tricky bit, so firstly I will give a 3 room map.<br/><br/><pre><code>+---+     +---+<br/>| 1 |  #### 3 |<br/>+-#-+  #  +---+<br/>  #  +-#-+<br/>  #### 2 ####<br/>     +-#-+  #<br/>       #    #<br/>       ######</code></pre><br/><br/>In this map, Room 1 is the Entrance to the maze with exits SOUTH (into the maze) and UP to ground level.<br/><br/>Room 2 is a standard maze room with exits F, B, L &amp; R - depending on where you entered the room from.<br/><br/>Room 3 is a dead end with 1 exit (BACK), although it could easily be another maze room.<br/><br/>What I want to centre on is Room 2, and how the exits change depending on how you enter the room! I will append all exits with their relative cardinal points for ease of reference, but the use of the compass directions in the maze will not be allowed (with the exception of the entrance as you know where you are).<br/><br/>So lets say you enter the maze S (effectively entering the maze room from the W), B (W) will take you back to the entrance, L (N) will take you to the dead end and F (E) &amp; R (S) will bring you back to where you are.<br/><br/>Lets say we have gone L (N), we have reached a dead end, turned round and gone B (in this case W) on ourselves.  The exits have now changed!  B (N) now leads back to the dead end and R (W) will take us back to the entrance, F (S) and L (E) now loop back on themselves to room 2.<br/><br/>If we go F (S), we leave the maze room and re-enter the maze room, but now the exits have changed again, B (E) will lead us back the way we came, F (W) will take us to the Entrance, L (S) will just make us make the same loop again and R (N) will take us to the Dead End.<br/><br/>Confused we decide to go B (E), we re-enter the maze room again.  Now F (N) will take us to the dead end, L (W) will take us to the entrance and B (S) &amp; R (E) will loop back into the maze room.<br/><br/>Does all that make sense?<br/><br/>=======<br/><br/>To combat the confusion of the maze, I would like the player to be able to drop markers.  Ideally they would find a bag of markers somewhere. Then, when they are in the maze they could drop a marker to mark the room.<br/><br/>So we find &quot;A Small Bag of Tiles&quot;, examining the bag reveals &quot;A small bag of tiles, there seem to be about 20 tiles in the bag and each tile appears to be numbered individually&quot;.<br/><br/>When in a maze room and we use the command &quot;DROP TILE&quot; I want to avoid the dialogue &quot;Which Tile: A Small Bag of Tiles, Tile 1, Tile 2, etc...&quot;<br/><br/>If there is any choice, I would want it to be &quot;Which Tile: A Small Bag of Tiles or A Tile&quot;<br/><br/>I think I would rather go down the route of using 2 verbs though, provided that people would think of it.<br/><br/>So DROP TILE would drop the bag, but PLACE TILE would result in &quot;you place tile N on the ground&quot;<br/><br/>Once a tile has been placed, I don't think I want the player to be able to pick it back up again - this saves issues with a counter if they have placed 9 tiles and pick up tile 5.<br/><br/>So TAKE TILE would result in something like &quot;You decide not to pick the tile up, you don't want to get lost now do you?&quot;<br/><br/>I am presuming a simple script will allow the tile number to be increased by 1 each time a tile is placed so that you don't have to choose.<br/><br/>There is one last thing here, where the tile is placed.<br/><br/>I could only allow one tile to be placed in a room - &quot;There is already a tile here&quot; OR I could allow the player to place a tile at each doorway that they enter the room from.<br/><br/>For example, using the above map, we have entered the maze and we place a marker, we decide to go F (E) and loop round back on ourselves.<br/><br/>If we have 1 tile per room the description would read something like, &quot;You are in a maze room, there are 4 exits, F, B, L &amp; R.  On the floor you see a tile with the number 1 on it&quot;<br/><br/>If we have 1 tile per entrance, it would read something more like &quot;You are in a maze room, there are 4 exits, F, B, L &amp; R.  On the floor in front of the left exit, you see a tile with the number 1 on it&quot;<br/><br/>Obviously the latter would make it much easier for the player to map out the maze, and perhaps they could even choose to place 4 markers when they enter the room?  But how much more difficult will that make the code - especially considering the changing of the exits based on the perspective of which entrance you have come through.<br/><br/>I hope all this makes sense.<br/><br/>And thank you for taking the time to read.",
      "PostDate": "2013-07-02T15:19:47+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25245",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I can probably offer some specific coding options, but I wanted to get clear the mechanics first.\n\nI had at one point considered adding a &quot;back&quot; option to my room movement. I wanted the player to be oriented and going back would take you back to the room you were just in. Here was the problem (and why I gave it up): what happens if you do it twice?\n\nLet's say you have three rooms in a row, west to east. You start in the west-most room. You go east once and east again, so that now you're in the east-most room. You have come in from the west, so you're facing east. Now you type &quot;back&quot;.\n\n1) What is your orientation? (Did you step backwards into the previous room, so you're still facing east, or did you turn around to go back into the previous room, so you now face west?)\n\n2) If you are in the rightmost room and hit back, you will be in the center room. If you hit back again, do you go back to the right most room (since you were just there), or do you go back to the left most room - a bit like a web browser's &quot;back&quot; button?\n\nI suppose the questions are related in some ways. If &quot;back&quot; is relative to your orientation, then it sort of makes sense. If &quot;back&quot; means you step backwards but don't change orientation, then back twice would take you all the way back to the west room. If &quot;back&quot; means you turn around and go back, then back twice would return you to the east room, since you keep turning around.\n\nIn the interest of consistency, how you implement &quot;back&quot; has implications for &quot;left&quot; and &quot;right&quot; - do you sidestep or turn in that direction? If &quot;left&quot; and &quot;right&quot; cause you to turn in that direction, then it seems &quot;back&quot; should as well (so after &quot;back&quot;, you'd be facing the other direction, and hitting back repeatedly would cause you to move back and forth between two rooms.)\n\nAnother possible way to design this: left and right just cause an orientation change (you spin left or right, but stay in the same room). Then the only way to move is forward or back. In fact, you could eliminate back altogether in that case. To go back, you turn left or right twice to turn around. That would allow the player to always know their orientation since it wouldn't change unless they changed it. It is a different approach, though.",
      "EditableFormat": "bbcode",
      "HTML": "I can probably offer some specific coding options, but I wanted to get clear the mechanics first.<br/><br/>I had at one point considered adding a &quot;back&quot; option to my room movement. I wanted the player to be oriented and going back would take you back to the room you were just in. Here was the problem (and why I gave it up): what happens if you do it twice?<br/><br/>Let's say you have three rooms in a row, west to east. You start in the west-most room. You go east once and east again, so that now you're in the east-most room. You have come in from the west, so you're facing east. Now you type &quot;back&quot;.<br/><br/>1) What is your orientation? (Did you step backwards into the previous room, so you're still facing east, or did you turn around to go back into the previous room, so you now face west?)<br/><br/>2) If you are in the rightmost room and hit back, you will be in the center room. If you hit back again, do you go back to the right most room (since you were just there), or do you go back to the left most room - a bit like a web browser's &quot;back&quot; button?<br/><br/>I suppose the questions are related in some ways. If &quot;back&quot; is relative to your orientation, then it sort of makes sense. If &quot;back&quot; means you step backwards but don't change orientation, then back twice would take you all the way back to the west room. If &quot;back&quot; means you turn around and go back, then back twice would return you to the east room, since you keep turning around.<br/><br/>In the interest of consistency, how you implement &quot;back&quot; has implications for &quot;left&quot; and &quot;right&quot; - do you sidestep or turn in that direction? If &quot;left&quot; and &quot;right&quot; cause you to turn in that direction, then it seems &quot;back&quot; should as well (so after &quot;back&quot;, you'd be facing the other direction, and hitting back repeatedly would cause you to move back and forth between two rooms.)<br/><br/>Another possible way to design this: left and right just cause an orientation change (you spin left or right, but stay in the same room). Then the only way to move is forward or back. In fact, you could eliminate back altogether in that case. To go back, you turn left or right twice to turn around. That would allow the player to always know their orientation since it wouldn't change unless they changed it. It is a different approach, though.",
      "PostDate": "2013-07-02T17:38:27+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25246",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "[quote=&quot;jaynabonne&quot;:3snotiwx]I can probably offer some specific coding options, but I wanted to get clear the mechanics first.\n\nI had at one point considered adding a &quot;back&quot; option to my room movement. I wanted the player to be oriented and going back would take you back to the room you were just in. Here was the problem (and why I gave it up): what happens if you do it twice?\n\nLet's say you have three rooms in a row, west to east. You start in the west-most room. You go east once and east again, so that now you're in the east-most room. You have come in from the west, so you're facing east. Now you type &quot;back&quot;.\n\n1) What is your orientation? (Did you step backwards into the previous room, so you're still facing east, or did you turn around to go back into the previous room, so you now face west?)\n\n2) If you are in the rightmost room and hit back, you will be in the center room. If you hit back again, do you go back to the right most room (since you were just there), or do you go back to the left most room - a bit like a web browser's &quot;back&quot; button?\n\nI suppose the questions are related in some ways. If &quot;back&quot; is relative to your orientation, then it sort of makes sense. If &quot;back&quot; means you step backwards but don't change orientation, then back twice would take you all the way back to the west room. If &quot;back&quot; means you turn around and go back, then back twice would return you to the east room, since you keep turning around.\n\nIn the interest of consistency, how you implement &quot;back&quot; has implications for &quot;left&quot; and &quot;right&quot; - do you sidestep or turn in that direction? If &quot;left&quot; and &quot;right&quot; cause you to turn in that direction, then it seems &quot;back&quot; should as well (so after &quot;back&quot;, you'd be facing the other direction, and hitting back repeatedly would cause you to move back and forth between two rooms.)\n\nAnother possible way to design this: left and right just cause an orientation change (you spin left or right, but stay in the same room). Then the only way to move is forward or back. In fact, you could eliminate back altogether in that case. To go back, you turn left or right twice to turn around. That would allow the player to always know their orientation since it wouldn't change unless they changed it. It is a different approach, though.[/quote:3snotiwx]\n\nHeh, I tried to make that clear with my example above.  Basically, forward, back, left and right are relative to the player and not the room.\n\nin your scenario of 3 rooms, you move east twice, then &quot;back&quot; once puts you in the centre room.  From now on, just using &quot;back&quot; would Ping-pong you between the centre room and the east-most room.\n\nI am envisaging the command, back, left and right have you turn in that direction and exit.  I want to avoid having the player turn and then then exit in 2 separate moves (or 3 for back) as it just adds even more confusion.\n\nI do not want it to be like a browsers back button.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>I can probably offer some specific coding options, but I wanted to get clear the mechanics first.<br/><br/>I had at one point considered adding a &quot;back&quot; option to my room movement. I wanted the player to be oriented and going back would take you back to the room you were just in. Here was the problem (and why I gave it up): what happens if you do it twice?<br/><br/>Let's say you have three rooms in a row, west to east. You start in the west-most room. You go east once and east again, so that now you're in the east-most room. You have come in from the west, so you're facing east. Now you type &quot;back&quot;.<br/><br/>1) What is your orientation? (Did you step backwards into the previous room, so you're still facing east, or did you turn around to go back into the previous room, so you now face west?)<br/><br/>2) If you are in the rightmost room and hit back, you will be in the center room. If you hit back again, do you go back to the right most room (since you were just there), or do you go back to the left most room - a bit like a web browser's &quot;back&quot; button?<br/><br/>I suppose the questions are related in some ways. If &quot;back&quot; is relative to your orientation, then it sort of makes sense. If &quot;back&quot; means you step backwards but don't change orientation, then back twice would take you all the way back to the west room. If &quot;back&quot; means you turn around and go back, then back twice would return you to the east room, since you keep turning around.<br/><br/>In the interest of consistency, how you implement &quot;back&quot; has implications for &quot;left&quot; and &quot;right&quot; - do you sidestep or turn in that direction? If &quot;left&quot; and &quot;right&quot; cause you to turn in that direction, then it seems &quot;back&quot; should as well (so after &quot;back&quot;, you'd be facing the other direction, and hitting back repeatedly would cause you to move back and forth between two rooms.)<br/><br/>Another possible way to design this: left and right just cause an orientation change (you spin left or right, but stay in the same room). Then the only way to move is forward or back. In fact, you could eliminate back altogether in that case. To go back, you turn left or right twice to turn around. That would allow the player to always know their orientation since it wouldn't change unless they changed it. It is a different approach, though.</blockquote><br/><br/>Heh, I tried to make that clear with my example above.  Basically, forward, back, left and right are relative to the player and not the room.<br/><br/>in your scenario of 3 rooms, you move east twice, then &quot;back&quot; once puts you in the centre room.  From now on, just using &quot;back&quot; would Ping-pong you between the centre room and the east-most room.<br/><br/>I am envisaging the command, back, left and right have you turn in that direction and exit.  I want to avoid having the player turn and then then exit in 2 separate moves (or 3 for back) as it just adds even more confusion.<br/><br/>I do not want it to be like a browsers back button.",
      "PostDate": "2013-07-02T18:30:48+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25247",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'm not sure what you want (it would take me too long to map, lol pun, everything you want in your posts), but as for the movement:\n\njust have multiple (separate) verbs~commands:\n\ngo_or_move_back, walk_or_strafe_backwards, go_or_move_forward, go_or_move_left, go_or_move_right, walk_or_strafe_left, walk_or_strafe_right\n\ngo_or_move = you turn (orient yourself) in that direction and then go in that direction\n\nwalk_or_strafe = you just go in that direction without turning (your orientation doesn't change at all)\n\n* Err... my usage of &quot;go&quot;, &quot;move&quot;, and &quot;walk&quot; aren't placed very well... switch them around as needed to make more sense\n\n* Not sure how you would code in the orientation though... (maybe JaynneBonnie can figure it out).... lololololol\n\n-------------\n\nfor the &quot;hansel and gretzel dropping seeds&quot;, you could have them be directional (drop left_arrow_tile, drop right_arrow_tile, etc etc etc), but that would probably completely eliminate the challenge of the maze, lol.\n\n------------\n\nP.S.\n\nthere's a fun old school board game called, ~ the A-Maze-Ing Labryinth <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->",
      "EditableFormat": "bbcode",
      "HTML": "I'm not sure what you want (it would take me too long to map, lol pun, everything you want in your posts), but as for the movement:<br/><br/>just have multiple (separate) verbs~commands:<br/><br/>go_or_move_back, walk_or_strafe_backwards, go_or_move_forward, go_or_move_left, go_or_move_right, walk_or_strafe_left, walk_or_strafe_right<br/><br/>go_or_move = you turn (orient yourself) in that direction and then go in that direction<br/><br/>walk_or_strafe = you just go in that direction without turning (your orientation doesn't change at all)<br/><br/>* Err... my usage of &quot;go&quot;, &quot;move&quot;, and &quot;walk&quot; aren't placed very well... switch them around as needed to make more sense<br/><br/>* Not sure how you would code in the orientation though... (maybe JaynneBonnie can figure it out).... lololololol<br/><br/>-------------<br/><br/>for the &quot;hansel and gretzel dropping seeds&quot;, you could have them be directional (drop left_arrow_tile, drop right_arrow_tile, etc etc etc), but that would probably completely eliminate the challenge of the maze, lol.<br/><br/>------------<br/><br/>P.S.<br/><br/>there's a fun old school board game called, ~ the A-Maze-Ing Labryinth <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->",
      "PostDate": "2013-07-02T19:47:22+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25248",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "That makes sense. Thanks for the clarification.\n\nAnd now, at the risk of sounding thick again, what are your questions exactly? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nI can see several challenges:\n\n1) Knowing which way the player has come into a room. You can either override the &quot;go&quot; command to save the exit navigated (I've done it - it's a single line addition to the function), or you can set an &quot;onchanged&quot; script for the player's parent attribute, see what the old and new room values are, and work out what has been traversed. \n2) Changing the exit names to be relative to the player's orientation. Some sort of &quot;on enter&quot; script which checks the data set by 1) and appropriately modifies the exit names. If you do that, then you should be able to navigate the exits without additional code, and the &quot;You can go&quot; text will be right.\n3) Managing the multiple tiles. Since you want to be able to refer to the tile object, even to the extent of not being able to take it, the tiles must be separate objects. So you can either have 20 different tile objects, each uniquely numbered, or you can have a &quot;prototype&quot; tile object that you clone and assign a new index to when needed.\n\nAs far as one tile per entrance or one per room - I think (given my limited experience and thoughts about this) that one per room should be sufficient to enable tracking things (the player will need a map), and it's less complex than trying to manage up to four tiles, both for the player and the game. Just my take...\n\nBy the way, I have some code I can dig up that changes the compass directions to &quot;F&quot;, &quot;L&quot; and &quot;R&quot;. It could easily be expanded to include a &quot;B&quot;.",
      "EditableFormat": "bbcode",
      "HTML": "That makes sense. Thanks for the clarification.<br/><br/>And now, at the risk of sounding thick again, what are your questions exactly? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>I can see several challenges:<br/><br/>1) Knowing which way the player has come into a room. You can either override the &quot;go&quot; command to save the exit navigated (I've done it - it's a single line addition to the function), or you can set an &quot;onchanged&quot; script for the player's parent attribute, see what the old and new room values are, and work out what has been traversed. <br/>2) Changing the exit names to be relative to the player's orientation. Some sort of &quot;on enter&quot; script which checks the data set by 1) and appropriately modifies the exit names. If you do that, then you should be able to navigate the exits without additional code, and the &quot;You can go&quot; text will be right.<br/>3) Managing the multiple tiles. Since you want to be able to refer to the tile object, even to the extent of not being able to take it, the tiles must be separate objects. So you can either have 20 different tile objects, each uniquely numbered, or you can have a &quot;prototype&quot; tile object that you clone and assign a new index to when needed.<br/><br/>As far as one tile per entrance or one per room - I think (given my limited experience and thoughts about this) that one per room should be sufficient to enable tracking things (the player will need a map), and it's less complex than trying to manage up to four tiles, both for the player and the game. Just my take...<br/><br/>By the way, I have some code I can dig up that changes the compass directions to &quot;F&quot;, &quot;L&quot; and &quot;R&quot;. It could easily be expanded to include a &quot;B&quot;.",
      "PostDate": "2013-07-02T19:48:18+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25250",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "[quote=&quot;HegemonKhan&quot;:25at0ywr]I'm not sure what you want (it would take me too long to map, lol pun, everything you want in your posts), but as for the movement:\n\njust have multiple (separate) verbs~commands:\n\ngo_or_move_back, walk_or_strafe_backwards, go_or_move_forward, go_or_move_left, go_or_move_right, walk_or_strafe_left, walk_or_strafe_right\n\ngo_or_move = you turn (orient yourself) in that direction and then go in that direction\n\nwalk_or_strafe = you just go in that direction without turning (your orientation doesn't change at all)\n\n* Err... my usage of &quot;go&quot;, &quot;move&quot;, and &quot;walk&quot; aren't placed very well... switch them around as needed to make more sense\n\n* Not sure how you would code in the orientation though... (maybe JaynneBonnie can figure it out).... lololololol\n\n-------------\n\nfor the &quot;hansel and gretzel dropping seeds&quot;, you could have them be directional (drop left_arrow_tile, drop right_arrow_tile, etc etc etc), but that would probably completely eliminate the challenge of the maze, lol.\n\n------------\n\nP.S.\n\nthere's a fun old school board game called, ~ the A-Maze-Ing Labryinth <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->[/quote:25at0ywr]\n\nThanks, the big problem I face is the mapping of the orientation.  For the verbs to navigate, I will simple be using Forward, Back, Left &amp; Right.\n\nI know I seem a bit all over the place, but I assure you there is method in my madness.\n\n\n\nMWAHAHAHAHAHAHAHA\n\n*coughs*\n\nSorry <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->\n\n[quote=&quot;jaynabonne&quot;:25at0ywr]That makes sense. Thanks for the clarification.\n\nAnd now, at the risk of sounding thick again, what are your questions exactly? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->[/quote:25at0ywr]\n\nHehe, no problem.\n\nI can see several challenges:\n\n[quote=&quot;jaynabonne&quot;:25at0ywr]1) Knowing which way the player has come into a room. You can either override the &quot;go&quot; command to save the exit navigated (I've done it - it's a single line addition to the function), or you can set an &quot;onchanged&quot; script for the player's parent attribute, see what the old and new room values are, and work out what has been traversed. [/quote:25at0ywr]\n\nIf a room has 4 exits, it has a possible 4 starting points, so each room would need coding individually.  I only see one flaw with the &quot;onchanged&quot; script, and that is when the exit loops back into the room as per my map above.  Is it possible to check the &quot;onchanged&quot; script, and if no change is detected query the direction taken (which would only need to be done if the room entered is the same as the one exited) to run the script?\n\n[quote=&quot;jaynabonne&quot;:25at0ywr]2) Changing the exit names to be relative to the player's orientation. Some sort of &quot;on enter&quot; script which checks the data set by 1) and appropriately modifies the exit names. If you do that, then you should be able to navigate the exits without additional code, and the &quot;You can go&quot; text will be right.[/quote:25at0ywr]\nThat sounds quite easy when you say it like that :p\n\n[quote=&quot;jaynabonne&quot;:25at0ywr]3) Managing the multiple tiles. Since you want to be able to refer to the tile object, even to the extent of not being able to take it, the tiles must be separate objects. So you can either have 20 different tile objects, each uniquely numbered, or you can have a &quot;prototype&quot; tile object that you clone and assign a new index to when needed.[/quote:25at0ywr]\nI gathered I would need to distinguish the tiles as far as the back-end of quest is concerned, and that is fine.\n\nThere are 2 ways, based on what you have said, that I can see this working (and the second would in theory allow tile retrieval - but as they only serve 1 purpose, there is no real need for that <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->)\n\n1) Create a base tile object with a counter, and use a script to increment that counter each time a tile is dropped to set the value of the tile placed in the room - once placed that tile's value obviously should not change.\n\n2) Either use a counter, or a random number script to select a tile from the remaining tiles that the player holds, then remove this tile from the players inventory.\n\nEither way, I would like the player to only see a bag of tiles (and maybe eventually an empty bag), only ever seeing the individual tiles once placed on the floor.\n\nOf the 2 options, I prefer option 1 as it requires less objects to be individually crafted by me and is therefore easier to expand should I decide to ad more rooms to the maze  <!-- s:twisted: --><img src=\"{SMILIES_PATH}/icon_twisted.gif\" alt=\":twisted:\" title=\"Twisted Evil\" /><!-- s:twisted: --> \n\n[quote=&quot;jaynabonne&quot;:25at0ywr]As far as one tile per entrance or one per room - I think (given my limited experience and thoughts about this) that one per room should be sufficient to enable tracking things (the player will need a map), and it's less complex than trying to manage up to four tiles, both for the player and the game. Just my take...[/quote:25at0ywr]\nCertainly from the coding point of view it will be easier.  I also agree one per room should be sufficient.  I was just trying to work out if I was going too far.\n\n[quote=&quot;jaynabonne&quot;:25at0ywr]By the way, I have some code I can dig up that changes the compass directions to &quot;F&quot;, &quot;L&quot; and &quot;R&quot;. It could easily be expanded to include a &quot;B&quot;.[/quote:25at0ywr]\nThat would be nice.  I must admit I am considering a bare-bones interface - but I may still opt to use some or all of the panels.  And if any make it in, the compass definitely will.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>HegemonKhan wrote:</cite>I'm not sure what you want (it would take me too long to map, lol pun, everything you want in your posts), but as for the movement:<br/><br/>just have multiple (separate) verbs~commands:<br/><br/>go_or_move_back, walk_or_strafe_backwards, go_or_move_forward, go_or_move_left, go_or_move_right, walk_or_strafe_left, walk_or_strafe_right<br/><br/>go_or_move = you turn (orient yourself) in that direction and then go in that direction<br/><br/>walk_or_strafe = you just go in that direction without turning (your orientation doesn't change at all)<br/><br/>* Err... my usage of &quot;go&quot;, &quot;move&quot;, and &quot;walk&quot; aren't placed very well... switch them around as needed to make more sense<br/><br/>* Not sure how you would code in the orientation though... (maybe JaynneBonnie can figure it out).... lololololol<br/><br/>-------------<br/><br/>for the &quot;hansel and gretzel dropping seeds&quot;, you could have them be directional (drop left_arrow_tile, drop right_arrow_tile, etc etc etc), but that would probably completely eliminate the challenge of the maze, lol.<br/><br/>------------<br/><br/>P.S.<br/><br/>there's a fun old school board game called, ~ the A-Maze-Ing Labryinth <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) --></blockquote><br/><br/>Thanks, the big problem I face is the mapping of the orientation.  For the verbs to navigate, I will simple be using Forward, Back, Left &amp; Right.<br/><br/>I know I seem a bit all over the place, but I assure you there is method in my madness.<br/><br/><br/><br/>MWAHAHAHAHAHAHAHA<br/><br/>*coughs*<br/><br/>Sorry <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) --><br/><br/><blockquote><cite>jaynabonne wrote:</cite>That makes sense. Thanks for the clarification.<br/><br/>And now, at the risk of sounding thick again, what are your questions exactly? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --></blockquote><br/><br/>Hehe, no problem.<br/><br/>I can see several challenges:<br/><br/><blockquote><cite>jaynabonne wrote:</cite>1) Knowing which way the player has come into a room. You can either override the &quot;go&quot; command to save the exit navigated (I've done it - it's a single line addition to the function), or you can set an &quot;onchanged&quot; script for the player's parent attribute, see what the old and new room values are, and work out what has been traversed. </blockquote><br/><br/>If a room has 4 exits, it has a possible 4 starting points, so each room would need coding individually.  I only see one flaw with the &quot;onchanged&quot; script, and that is when the exit loops back into the room as per my map above.  Is it possible to check the &quot;onchanged&quot; script, and if no change is detected query the direction taken (which would only need to be done if the room entered is the same as the one exited) to run the script?<br/><br/><blockquote><cite>jaynabonne wrote:</cite>2) Changing the exit names to be relative to the player's orientation. Some sort of &quot;on enter&quot; script which checks the data set by 1) and appropriately modifies the exit names. If you do that, then you should be able to navigate the exits without additional code, and the &quot;You can go&quot; text will be right.</blockquote><br/>That sounds quite easy when you say it like that :p<br/><br/><blockquote><cite>jaynabonne wrote:</cite>3) Managing the multiple tiles. Since you want to be able to refer to the tile object, even to the extent of not being able to take it, the tiles must be separate objects. So you can either have 20 different tile objects, each uniquely numbered, or you can have a &quot;prototype&quot; tile object that you clone and assign a new index to when needed.</blockquote><br/>I gathered I would need to distinguish the tiles as far as the back-end of quest is concerned, and that is fine.<br/><br/>There are 2 ways, based on what you have said, that I can see this working (and the second would in theory allow tile retrieval - but as they only serve 1 purpose, there is no real need for that <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->)<br/><br/>1) Create a base tile object with a counter, and use a script to increment that counter each time a tile is dropped to set the value of the tile placed in the room - once placed that tile's value obviously should not change.<br/><br/>2) Either use a counter, or a random number script to select a tile from the remaining tiles that the player holds, then remove this tile from the players inventory.<br/><br/>Either way, I would like the player to only see a bag of tiles (and maybe eventually an empty bag), only ever seeing the individual tiles once placed on the floor.<br/><br/>Of the 2 options, I prefer option 1 as it requires less objects to be individually crafted by me and is therefore easier to expand should I decide to ad more rooms to the maze  <!-- s:twisted: --><img src=\"{SMILIES_PATH}/icon_twisted.gif\" alt=\":twisted:\" title=\"Twisted Evil\" /><!-- s:twisted: --> <br/><br/><blockquote><cite>jaynabonne wrote:</cite>As far as one tile per entrance or one per room - I think (given my limited experience and thoughts about this) that one per room should be sufficient to enable tracking things (the player will need a map), and it's less complex than trying to manage up to four tiles, both for the player and the game. Just my take...</blockquote><br/>Certainly from the coding point of view it will be easier.  I also agree one per room should be sufficient.  I was just trying to work out if I was going too far.<br/><br/><blockquote><cite>jaynabonne wrote:</cite>By the way, I have some code I can dig up that changes the compass directions to &quot;F&quot;, &quot;L&quot; and &quot;R&quot;. It could easily be expanded to include a &quot;B&quot;.</blockquote><br/>That would be nice.  I must admit I am considering a bare-bones interface - but I may still opt to use some or all of the panels.  And if any make it in, the compass definitely will.",
      "PostDate": "2013-07-02T21:26:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25252",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "It's funny how I miss the subtle ramifications of things. The diagram hadn't even registered properly. Given my new understanding, my first option to you won't work, as modifying the &quot;go&quot; command would just record the &quot;exiting&quot; exit, not the &quot;entering&quot; one. And you can't make inference from that.\n\nMore to the point, even &quot;changedparent&quot; won't work, because as far as I know, that only fires if the value has actually changed. Which has even larger ramifications, as Quest uses a &quot;changedparent&quot; script to handle &quot;enter room&quot; scripts. In other words, if you try to move to the same room, basically, nothing happens. No events fired, nothing. It's like you didn't move. I haven't tried it, but that's what I think will happen, based on the code.\n\nGiven the unusual requirements that you have, I'd be tempted to forget exits altogether and use some other data structure. I could flesh that out a bit if you'd like, but basically I could see each room having four attributes, one for each room that the player can move to. I haven't worked out how to handle the entry direction, though, but I'm sure it can be done. \n\nThe other way to do it would be if somehow you could have &quot;hidden&quot; rooms that manage the bends. So if you have a room that has a north exit that re-enters from the west, then you could have an intermediary room that you go north to which would then have an exit heading east into the target room - and the intermediate room would need to automatically &quot;forward&quot; the player somehow on to the target room and also not print anything. I don't know if it's easy to do or not,  but it could work, in theory. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nOk, more thoughts, along the first lines...\n\nYou could number the four directions: N = 0, E = 1, S = 2, W = 3. (North, East, South and West actually have no relevance, but just to help you visualize.) Order is important, as to turn right, you add 1 (mod 4) and to turn left you subtract 1 (mod 4). [or you add 3, mod 4, if mod returns negative results,].\n\nThe each room could have up to four main target attributes:\n\n[code:1jeggunj]&lt;exit0 type=&quot;object&quot;&gt;otherroom&lt;/exit0&gt;\n&lt;exitdir0 type=&quot;int&quot;&gt;2&lt;/exitdir0&gt;\n&lt;exit1 type=&quot;object&quot;&gt;otherroom&lt;/exit1&gt;\n&lt;exitdir1 type=&quot;int&quot;&gt;1&lt;/exitdir1&gt;\n&lt;exit2 type=&quot;object&quot;&gt;otherroom&lt;/exit2&gt;\n&lt;exitdir2 type=&quot;int&quot;&gt;1&lt;/exitdir2&gt;\n&lt;exit3 type=&quot;object&quot;&gt;otherroom&lt;/exit3&gt;\n&lt;exitdir3 type=&quot;int&quot;&gt;0&lt;/exitdir3&gt;[/code:1jeggunj]\n\nOnly the exits you actually need would show up in each room. The number X in &quot;exitX&quot; is the exit direction. The value in the &quot;exitdirX&quot; attribute is the new (entry) direction.\n\nThe player/pov would have a &quot;dir&quot; attribute (or orientation or whatever you want to call it). To go forward, you'd do:\n\n[code:1jeggunj]ChangeRoom(game&#46;pov&#46;dir)[/code:1jeggunj]\n\nTo go right:\n\n[code:1jeggunj]ChangeRoom((game&#46;pov&#46;dir+1)%4)[/code:1jeggunj]\n\nTo go back:\n\n[code:1jeggunj]ChangeRoom((game&#46;pov&#46;dir+2)%4)[/code:1jeggunj]\n\nTo go left:\n\n[code:1jeggunj]ChangeRoom((game&#46;pov&#46;dir+3)%4)[/code:1jeggunj]\n\nAnd ChangeRoom would be a function taking a &quot;dir&quot; parameter, with something like:\n\n[code:1jeggunj]room = game&#46;pov&#46;parent\nif (HasAttribute(room, &quot;exit&quot; +  dir)) {\n  newroom = GetAttribute(room, &quot;exit&quot; + dir)\n  // Set new player direction&#46;\n  game&#46;pov&#46;dir = GetInt(room, &quot;exitdir&quot; + dir)\n  if (newroom = room) {\n    // Same room&#46; Force room description dump, etc\n    OnRoomEnter(room)\n  } else {\n    // New room&#46; Just move&#46;\n    game&#46;pov&#46;parent = newroom\n  }\n} else {\n  msg(&quot;You can't go that way&#46;&quot;)\n}[/code:1jeggunj]\n\nYou need to dump out the exits yourself, if you want the player to know (and not bumping blindly into walls). It may seem complicated. Perhaps there is a better way to do it. I'll think some more. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nAs far as tiles, I had originally thought of just marking the room with the tile number. Then you'd have to have the description dump out &quot;You can see a tile with the number XXX on it.&quot; And that would work. But... people might try &quot;x tile&quot; or &quot;take tile&quot;. You would not want it to spew out &quot;I can't see that.&quot; So if you don't want objects in each room, then perhaps you could have custom commands in each room (use a base type to keep your sanity!) with commands for &quot;x tile&quot; and &quot;take tile&quot; that print out the messages you want.\n\nOk, I'll stop for now. Sorry for such a dump above. I hope it makes some sense.",
      "EditableFormat": "bbcode",
      "HTML": "It's funny how I miss the subtle ramifications of things. The diagram hadn't even registered properly. Given my new understanding, my first option to you won't work, as modifying the &quot;go&quot; command would just record the &quot;exiting&quot; exit, not the &quot;entering&quot; one. And you can't make inference from that.<br/><br/>More to the point, even &quot;changedparent&quot; won't work, because as far as I know, that only fires if the value has actually changed. Which has even larger ramifications, as Quest uses a &quot;changedparent&quot; script to handle &quot;enter room&quot; scripts. In other words, if you try to move to the same room, basically, nothing happens. No events fired, nothing. It's like you didn't move. I haven't tried it, but that's what I think will happen, based on the code.<br/><br/>Given the unusual requirements that you have, I'd be tempted to forget exits altogether and use some other data structure. I could flesh that out a bit if you'd like, but basically I could see each room having four attributes, one for each room that the player can move to. I haven't worked out how to handle the entry direction, though, but I'm sure it can be done. <br/><br/>The other way to do it would be if somehow you could have &quot;hidden&quot; rooms that manage the bends. So if you have a room that has a north exit that re-enters from the west, then you could have an intermediary room that you go north to which would then have an exit heading east into the target room - and the intermediate room would need to automatically &quot;forward&quot; the player somehow on to the target room and also not print anything. I don't know if it's easy to do or not,  but it could work, in theory. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>Ok, more thoughts, along the first lines...<br/><br/>You could number the four directions: N = 0, E = 1, S = 2, W = 3. (North, East, South and West actually have no relevance, but just to help you visualize.) Order is important, as to turn right, you add 1 (mod 4) and to turn left you subtract 1 (mod 4). [or you add 3, mod 4, if mod returns negative results,].<br/><br/>The each room could have up to four main target attributes:<br/><br/><pre><code>&lt;exit0 type=&quot;object&quot;&gt;otherroom&lt;/exit0&gt;<br/>&lt;exitdir0 type=&quot;int&quot;&gt;2&lt;/exitdir0&gt;<br/>&lt;exit1 type=&quot;object&quot;&gt;otherroom&lt;/exit1&gt;<br/>&lt;exitdir1 type=&quot;int&quot;&gt;1&lt;/exitdir1&gt;<br/>&lt;exit2 type=&quot;object&quot;&gt;otherroom&lt;/exit2&gt;<br/>&lt;exitdir2 type=&quot;int&quot;&gt;1&lt;/exitdir2&gt;<br/>&lt;exit3 type=&quot;object&quot;&gt;otherroom&lt;/exit3&gt;<br/>&lt;exitdir3 type=&quot;int&quot;&gt;0&lt;/exitdir3&gt;</code></pre><br/><br/>Only the exits you actually need would show up in each room. The number X in &quot;exitX&quot; is the exit direction. The value in the &quot;exitdirX&quot; attribute is the new (entry) direction.<br/><br/>The player/pov would have a &quot;dir&quot; attribute (or orientation or whatever you want to call it). To go forward, you'd do:<br/><br/><pre><code>ChangeRoom(game&#46;pov&#46;dir)</code></pre><br/><br/>To go right:<br/><br/><pre><code>ChangeRoom((game&#46;pov&#46;dir+1)%4)</code></pre><br/><br/>To go back:<br/><br/><pre><code>ChangeRoom((game&#46;pov&#46;dir+2)%4)</code></pre><br/><br/>To go left:<br/><br/><pre><code>ChangeRoom((game&#46;pov&#46;dir+3)%4)</code></pre><br/><br/>And ChangeRoom would be a function taking a &quot;dir&quot; parameter, with something like:<br/><br/><pre><code>room = game&#46;pov&#46;parent<br/>if (HasAttribute(room, &quot;exit&quot; +  dir)) {<br/>  newroom = GetAttribute(room, &quot;exit&quot; + dir)<br/>  // Set new player direction&#46;<br/>  game&#46;pov&#46;dir = GetInt(room, &quot;exitdir&quot; + dir)<br/>  if (newroom = room) {<br/>    // Same room&#46; Force room description dump, etc<br/>    OnRoomEnter(room)<br/>  } else {<br/>    // New room&#46; Just move&#46;<br/>    game&#46;pov&#46;parent = newroom<br/>  }<br/>} else {<br/>  msg(&quot;You can't go that way&#46;&quot;)<br/>}</code></pre><br/><br/>You need to dump out the exits yourself, if you want the player to know (and not bumping blindly into walls). It may seem complicated. Perhaps there is a better way to do it. I'll think some more. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>As far as tiles, I had originally thought of just marking the room with the tile number. Then you'd have to have the description dump out &quot;You can see a tile with the number XXX on it.&quot; And that would work. But... people might try &quot;x tile&quot; or &quot;take tile&quot;. You would not want it to spew out &quot;I can't see that.&quot; So if you don't want objects in each room, then perhaps you could have custom commands in each room (use a base type to keep your sanity!) with commands for &quot;x tile&quot; and &quot;take tile&quot; that print out the messages you want.<br/><br/>Ok, I'll stop for now. Sorry for such a dump above. I hope it makes some sense.",
      "PostDate": "2013-07-02T22:58:09+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25253",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "[quote=&quot;jaynabonne&quot;:2twznk6i]It's funny how I miss the subtle ramifications of things. The diagram hadn't even registered properly. Given my new understanding, my first option to you won't work, as modifying the &quot;go&quot; command would just record the &quot;exiting&quot; exit, not the &quot;entering&quot; one. And you can't make inference from that.[/quote:2twznk6i]\n\nFirstly, no need to apologise, it was a long post and that was right in the centre, so I can understand your brain skipping past it.\n\n[quote=&quot;jaynabonne&quot;:2twznk6i]More to the point, even &quot;changedparent&quot; won't work, because as far as I know, that only fires if the value has actually changed. Which has even larger ramifications, as Quest uses a &quot;changedparent&quot; script to handle &quot;enter room&quot; scripts. In other words, if you try to move to the same room, basically, nothing happens. No events fired, nothing. It's like you didn't move. I haven't tried it, but that's what I think will happen, based on the code.\n\nGiven the unusual requirements that you have, I'd be tempted to forget exits altogether and use some other data structure. I could flesh that out a bit if you'd like, but basically I could see each room having four attributes, one for each room that the player can move to. I haven't worked out how to handle the entry direction, though, but I'm sure it can be done. \n\n[b:2twznk6i][u:2twznk6i]The other way to do it would be if somehow you could have &quot;hidden&quot; rooms that manage the bends. So if you have a room that has a north exit that re-enters from the west, then you could have an intermediary room that you go north to which would then have an exit heading east into the target room - and the intermediate room would need to automatically &quot;forward&quot; the player somehow on to the target room and also not print anything. I don't know if it's easy to do or not,  but it could work, in theory. [/u:2twznk6i][/b:2twznk6i]:)[/quote:2twznk6i]\n\nThat actually sounds like a semi-sensible idea <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\n[quote=&quot;jaynabonne&quot;:2twznk6i]Ok, more thoughts, along the first lines...\n\nYou could number the four directions: N = 0, E = 1, S = 2, W = 3. (North, East, South and West actually have no relevance, but just to help you visualize.) Order is important, as to turn right, you add 1 (mod 4) and to turn left you subtract 1 (mod 4). [or you add 3, mod 4, if mod returns negative results,].[/quote:2twznk6i]\n\nAgreed, which is why I used cardinal points in my very first scenario, albeit they were in brackets against the directions that were actually being taken.\n\n[quote=&quot;jaynabonne&quot;:2twznk6i]The each room could have up to four main target attributes:\n[code:2twznk6i]&lt;exit0 type=&quot;object&quot;&gt;otherroom&lt;/exit0&gt;\n&lt;exitdir0 type=&quot;int&quot;&gt;2&lt;/exitdir0&gt;\n&lt;exit1 type=&quot;object&quot;&gt;otherroom&lt;/exit1&gt;\n&lt;exitdir1 type=&quot;int&quot;&gt;1&lt;/exitdir1&gt;\n&lt;exit2 type=&quot;object&quot;&gt;otherroom&lt;/exit2&gt;\n&lt;exitdir2 type=&quot;int&quot;&gt;1&lt;/exitdir2&gt;\n&lt;exit3 type=&quot;object&quot;&gt;otherroom&lt;/exit3&gt;\n&lt;exitdir3 type=&quot;int&quot;&gt;0&lt;/exitdir3&gt;[/code:2twznk6i]\n\nOnly the exits you actually need would show up in each room. The number X in &quot;exitX&quot; is the exit direction. The value in the &quot;exitdirX&quot; attribute is the new (entry) direction.\n\nThe player/pov would have a &quot;dir&quot; attribute (or orientation or whatever you want to call it). To go forward, you'd do:\n[code:2twznk6i]ChangeRoom(game&#46;pov&#46;dir)[/code:2twznk6i]\n\nTo go right:\n[code:2twznk6i]ChangeRoom((game&#46;pov&#46;dir+1)%4)[/code:2twznk6i]\n\nTo go back:\n[code:2twznk6i]ChangeRoom((game&#46;pov&#46;dir+2)%4)[/code:2twznk6i]\n\nTo go left:\n[code:2twznk6i]ChangeRoom((game&#46;pov&#46;dir+3)%4)[/code:2twznk6i]\n\nAnd ChangeRoom would be a function taking a &quot;dir&quot; parameter, with something like:\n[code:2twznk6i]room = game&#46;pov&#46;parent\nif (HasAttribute(room, &quot;exit&quot; +  dir)) {\n  newroom = GetAttribute(room, &quot;exit&quot; + dir)\n  // Set new player direction&#46;\n  game&#46;pov&#46;dir = GetInt(room, &quot;exitdir&quot; + dir)\n  if (newroom = room) {\n    // Same room&#46; Force room description dump, etc\n    OnRoomEnter(room)\n  } else {\n    // New room&#46; Just move&#46;\n    game&#46;pov&#46;parent = newroom\n  }\n} else {\n  msg(&quot;You can't go that way&#46;&quot;)\n}[/code:2twznk6i][/quote:2twznk6i]\n\nI think I grasp it, changing to values makes sense, as does the adding and subtracting, and I can see how that works for determining which exit has been taken.  But I am struggling to see how that sets up the orientation of the player when they enter the new room.\n\nJust a thought, but maybe entering a room should trigger a flag, and then that flag could be used in similar way to the &quot;changedparent&quot; script you suggested.\n\nSo at the entrance, lets say a flag &quot;current.room&quot; is defined as 00 (each room in the maze would have a unique flag ID number).\n\n[b:2twznk6i]My code stinks, this is just an example of what I want to happen.  I'll have to read up on how to properly right it out[/b:2twznk6i]\n\nEntrance\n[code:2twznk6i]set flag current&#46;room=&quot;00&quot;[/code:2twznk6i]\n\nWhen you enter a room in the maze, a script would run something along the lines of\n\nMaze Room\n[code:2twznk6i]set flag previous&#46;room=current&#46;room\nset flag current&#46;room=&quot;n&quot;[/code:2twznk6i]\n\n&quot;n&quot; would be defined for each individual room somewhere\n\nThis in theory, should allow tracking of movement from room to room.\n\nnow we only have to work out how to parse the direction taken, and work out how to make that affect the players orientation in the new room.  I see your numerical exits helping here somehow, but I am not quite sure how.\n\n[quote=&quot;jaynabonne&quot;:2twznk6i]You need to dump out the exits yourself, if you want the player to know (and not bumping blindly into walls). It may seem complicated. Perhaps there is a better way to do it. I'll think some more. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->[/quote:2twznk6i]\n\nSorry, I am not sure I undersatnd  the &quot;dump out&quot; bit.\n\n[quote=&quot;jaynabonne&quot;:2twznk6i]As far as tiles, I had originally thought of just marking the room with the tile number. Then you'd have to have the description dump out &quot;You can see a tile with the number XXX on it.&quot; And that would work. But... people might try &quot;x tile&quot; or &quot;take tile&quot;. You would not want it to spew out &quot;I can't see that.&quot; So if you don't want objects in each room, then perhaps you could have custom commands in each room (use a base type to keep your sanity!) with commands for &quot;x tile&quot; and &quot;take tile&quot; that print out the messages you want.[/quote:2twznk6i]\n\nI had a thought on that, and came up with a much simpler solution than a bag of tiles that gradually decrease - a piece of chalk writing on the wall or a stick scratching in the dirt a number, with a counter every-time it is used to automatically increase the number inscribed and add it to the room description.\n\nAlso I think i want to add a hint saying something like &quot;you don't know where you are, maybe you should mark this room before you continue&quot;, and if you don't have any chalk, or a stick, you can only go back from the first room until you find something to mark the maze passages with.\n\n[quote=&quot;jaynabonne&quot;:2twznk6i]Ok, I'll stop for now. Sorry for such a dump above. I hope it makes some sense.[/quote:2twznk6i]\n\nDon't be, you are being more than helpful.\n\nI hope this thread might inspire other people too, as I have yet to have sampled a maze that has this sort of complexity <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\nIf I can get this (my first ever text adventure) fully off the ground in time, I may even enter it in the IFComp  <!-- s:roll: --><img src=\"{SMILIES_PATH}/icon_rolleyes.gif\" alt=\":roll:\" title=\"Rolling Eyes\" /><!-- s:roll: -->",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>It's funny how I miss the subtle ramifications of things. The diagram hadn't even registered properly. Given my new understanding, my first option to you won't work, as modifying the &quot;go&quot; command would just record the &quot;exiting&quot; exit, not the &quot;entering&quot; one. And you can't make inference from that.</blockquote><br/><br/>Firstly, no need to apologise, it was a long post and that was right in the centre, so I can understand your brain skipping past it.<br/><br/><blockquote><cite>jaynabonne wrote:</cite>More to the point, even &quot;changedparent&quot; won't work, because as far as I know, that only fires if the value has actually changed. Which has even larger ramifications, as Quest uses a &quot;changedparent&quot; script to handle &quot;enter room&quot; scripts. In other words, if you try to move to the same room, basically, nothing happens. No events fired, nothing. It's like you didn't move. I haven't tried it, but that's what I think will happen, based on the code.<br/><br/>Given the unusual requirements that you have, I'd be tempted to forget exits altogether and use some other data structure. I could flesh that out a bit if you'd like, but basically I could see each room having four attributes, one for each room that the player can move to. I haven't worked out how to handle the entry direction, though, but I'm sure it can be done. <br/><br/><span style=\"font-weight:bold;\"><span style=\"text-decoration:underline;\">The other way to do it would be if somehow you could have &quot;hidden&quot; rooms that manage the bends. So if you have a room that has a north exit that re-enters from the west, then you could have an intermediary room that you go north to which would then have an exit heading east into the target room - and the intermediate room would need to automatically &quot;forward&quot; the player somehow on to the target room and also not print anything. I don't know if it's easy to do or not,  but it could work, in theory. </span></span>:)</blockquote><br/><br/>That actually sounds like a semi-sensible idea <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/><blockquote><cite>jaynabonne wrote:</cite>Ok, more thoughts, along the first lines...<br/><br/>You could number the four directions: N = 0, E = 1, S = 2, W = 3. (North, East, South and West actually have no relevance, but just to help you visualize.) Order is important, as to turn right, you add 1 (mod 4) and to turn left you subtract 1 (mod 4). [or you add 3, mod 4, if mod returns negative results,].</blockquote><br/><br/>Agreed, which is why I used cardinal points in my very first scenario, albeit they were in brackets against the directions that were actually being taken.<br/><br/><blockquote><cite>jaynabonne wrote:</cite>The each room could have up to four main target attributes:<br/><pre><code>&lt;exit0 type=&quot;object&quot;&gt;otherroom&lt;/exit0&gt;<br/>&lt;exitdir0 type=&quot;int&quot;&gt;2&lt;/exitdir0&gt;<br/>&lt;exit1 type=&quot;object&quot;&gt;otherroom&lt;/exit1&gt;<br/>&lt;exitdir1 type=&quot;int&quot;&gt;1&lt;/exitdir1&gt;<br/>&lt;exit2 type=&quot;object&quot;&gt;otherroom&lt;/exit2&gt;<br/>&lt;exitdir2 type=&quot;int&quot;&gt;1&lt;/exitdir2&gt;<br/>&lt;exit3 type=&quot;object&quot;&gt;otherroom&lt;/exit3&gt;<br/>&lt;exitdir3 type=&quot;int&quot;&gt;0&lt;/exitdir3&gt;</code></pre><br/><br/>Only the exits you actually need would show up in each room. The number X in &quot;exitX&quot; is the exit direction. The value in the &quot;exitdirX&quot; attribute is the new (entry) direction.<br/><br/>The player/pov would have a &quot;dir&quot; attribute (or orientation or whatever you want to call it). To go forward, you'd do:<br/><pre><code>ChangeRoom(game&#46;pov&#46;dir)</code></pre><br/><br/>To go right:<br/><pre><code>ChangeRoom((game&#46;pov&#46;dir+1)%4)</code></pre><br/><br/>To go back:<br/><pre><code>ChangeRoom((game&#46;pov&#46;dir+2)%4)</code></pre><br/><br/>To go left:<br/><pre><code>ChangeRoom((game&#46;pov&#46;dir+3)%4)</code></pre><br/><br/>And ChangeRoom would be a function taking a &quot;dir&quot; parameter, with something like:<br/><pre><code>room = game&#46;pov&#46;parent<br/>if (HasAttribute(room, &quot;exit&quot; +  dir)) {<br/>  newroom = GetAttribute(room, &quot;exit&quot; + dir)<br/>  // Set new player direction&#46;<br/>  game&#46;pov&#46;dir = GetInt(room, &quot;exitdir&quot; + dir)<br/>  if (newroom = room) {<br/>    // Same room&#46; Force room description dump, etc<br/>    OnRoomEnter(room)<br/>  } else {<br/>    // New room&#46; Just move&#46;<br/>    game&#46;pov&#46;parent = newroom<br/>  }<br/>} else {<br/>  msg(&quot;You can't go that way&#46;&quot;)<br/>}</code></pre></blockquote><br/><br/>I think I grasp it, changing to values makes sense, as does the adding and subtracting, and I can see how that works for determining which exit has been taken.  But I am struggling to see how that sets up the orientation of the player when they enter the new room.<br/><br/>Just a thought, but maybe entering a room should trigger a flag, and then that flag could be used in similar way to the &quot;changedparent&quot; script you suggested.<br/><br/>So at the entrance, lets say a flag &quot;current.room&quot; is defined as 00 (each room in the maze would have a unique flag ID number).<br/><br/><span style=\"font-weight:bold;\">My code stinks, this is just an example of what I want to happen.  I'll have to read up on how to properly right it out</span><br/><br/>Entrance<br/><pre><code>set flag current&#46;room=&quot;00&quot;</code></pre><br/><br/>When you enter a room in the maze, a script would run something along the lines of<br/><br/>Maze Room<br/><pre><code>set flag previous&#46;room=current&#46;room<br/>set flag current&#46;room=&quot;n&quot;</code></pre><br/><br/>&quot;n&quot; would be defined for each individual room somewhere<br/><br/>This in theory, should allow tracking of movement from room to room.<br/><br/>now we only have to work out how to parse the direction taken, and work out how to make that affect the players orientation in the new room.  I see your numerical exits helping here somehow, but I am not quite sure how.<br/><br/><blockquote><cite>jaynabonne wrote:</cite>You need to dump out the exits yourself, if you want the player to know (and not bumping blindly into walls). It may seem complicated. Perhaps there is a better way to do it. I'll think some more. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --></blockquote><br/><br/>Sorry, I am not sure I undersatnd  the &quot;dump out&quot; bit.<br/><br/><blockquote><cite>jaynabonne wrote:</cite>As far as tiles, I had originally thought of just marking the room with the tile number. Then you'd have to have the description dump out &quot;You can see a tile with the number XXX on it.&quot; And that would work. But... people might try &quot;x tile&quot; or &quot;take tile&quot;. You would not want it to spew out &quot;I can't see that.&quot; So if you don't want objects in each room, then perhaps you could have custom commands in each room (use a base type to keep your sanity!) with commands for &quot;x tile&quot; and &quot;take tile&quot; that print out the messages you want.</blockquote><br/><br/>I had a thought on that, and came up with a much simpler solution than a bag of tiles that gradually decrease - a piece of chalk writing on the wall or a stick scratching in the dirt a number, with a counter every-time it is used to automatically increase the number inscribed and add it to the room description.<br/><br/>Also I think i want to add a hint saying something like &quot;you don't know where you are, maybe you should mark this room before you continue&quot;, and if you don't have any chalk, or a stick, you can only go back from the first room until you find something to mark the maze passages with.<br/><br/><blockquote><cite>jaynabonne wrote:</cite>Ok, I'll stop for now. Sorry for such a dump above. I hope it makes some sense.</blockquote><br/><br/>Don't be, you are being more than helpful.<br/><br/>I hope this thread might inspire other people too, as I have yet to have sampled a maze that has this sort of complexity <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>If I can get this (my first ever text adventure) fully off the ground in time, I may even enter it in the IFComp  <!-- s:roll: --><img src=\"{SMILIES_PATH}/icon_rolleyes.gif\" alt=\":roll:\" title=\"Rolling Eyes\" /><!-- s:roll: -->",
      "PostDate": "2013-07-03T00:03:56+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25254",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I haven't read (both of) your posts (so my apologizes if this has already been thought up and mentioned), but I got an idea:\n\n4 booleans on either a &quot;data object&quot; or your game.pov:\n\nwest_orientation=false\nnorth_orientation=false\neast_orientation=false\nsouth_orientation=false\n\nthese can then be switched on and off, for quest to know what direction you're facing (you could also have two on, as for an example, north+west = NW direction, or you could just make 4 more boolean directions: NW, SW, NE, and SE)\n\nthen, you can just do conditionals upon the exits' descriptions or however (lots of neat other tricks you could do too, hehe)\n\nyou could also probably apply this same stuff to the previous room (the room that you came from) too.",
      "EditableFormat": "bbcode",
      "HTML": "I haven't read (both of) your posts (so my apologizes if this has already been thought up and mentioned), but I got an idea:<br/><br/>4 booleans on either a &quot;data object&quot; or your game.pov:<br/><br/>west_orientation=false<br/>north_orientation=false<br/>east_orientation=false<br/>south_orientation=false<br/><br/>these can then be switched on and off, for quest to know what direction you're facing (you could also have two on, as for an example, north+west = NW direction, or you could just make 4 more boolean directions: NW, SW, NE, and SE)<br/><br/>then, you can just do conditionals upon the exits' descriptions or however (lots of neat other tricks you could do too, hehe)<br/><br/>you could also probably apply this same stuff to the previous room (the room that you came from) too.",
      "PostDate": "2013-07-03T01:06:59+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25257",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "[quote:38iphsqq]I think I grasp it, changing to values makes sense, as does the adding and subtracting, and I can see how that works for determining which exit has been taken. But I am struggling to see how that sets up the orientation of the player when they enter the new room.[/quote:38iphsqq]\n\nThat's where the &quot;exitdir&quot; attributes come in. Let's actually mockup your room diagram.\n\n[code:38iphsqq]&lt;object name=&quot;room1&quot;&gt;\n  &lt;!-- south exit (dir 2) landing in eastern direction (dir 1) in room 2--&gt;\n  &lt;exit2&gt;room2&lt;/exit2&gt;\n  &lt;exitdir2&gt;1&lt;/exitdir2&gt;\n&lt;/object&gt; \n\n&lt;object name=&quot;room2&quot;&gt;\n   &lt;!-- north exit (dir 0) landing in eastern direction (dir 1) in room 3--&gt;\n  &lt;exit0&gt;room3&lt;/exit0&gt;\n  &lt;exitdir0&gt;1&lt;/exitdir0&gt;\n &lt;!-- east exit (dir 1) landing in northern direction (dir 0) in room 2--&gt;\n  &lt;exit1&gt;room2&lt;/exit1&gt;\n  &lt;exitdir1&gt;0&lt;/exitdir1&gt;\n &lt;!-- south exit (dir 2) landing in western direction (dir 3) in room 2--&gt;\n  &lt;exit2&gt;room2&lt;/exit2&gt;\n  &lt;exitdir2&gt;3&lt;/exitdir2&gt;\n&lt;!-- west exit (dir 3) landing in northern direction (dir 0) in room 1--&gt;\n  &lt;exit3&gt;room1&lt;/exit3&gt;\n  &lt;exitdir3&gt;0&lt;/exitdir3&gt;\n &lt;/object&gt; \n\n&lt;object name=&quot;room3&quot;&gt;\n  &lt;!-- west exit (dir 3) landing in southern direction (dir 2) in room 2--&gt;\n  &lt;exit3&gt;room2&lt;/exit3&gt;\n  &lt;exitdir3&gt;2&lt;/exitdir3&gt;\n&lt;/object&gt;[/code:38iphsqq] \n\nWhen you take the exit in direction X, you  basically set the room parent to exitX and you set the new player direction to exitdirX.\n\nHope that helps!",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>I think I grasp it, changing to values makes sense, as does the adding and subtracting, and I can see how that works for determining which exit has been taken. But I am struggling to see how that sets up the orientation of the player when they enter the new room.</p></blockquote><br/><br/>That's where the &quot;exitdir&quot; attributes come in. Let's actually mockup your room diagram.<br/><br/><pre><code>&lt;object name=&quot;room1&quot;&gt;<br/>  &lt;!-- south exit (dir 2) landing in eastern direction (dir 1) in room 2--&gt;<br/>  &lt;exit2&gt;room2&lt;/exit2&gt;<br/>  &lt;exitdir2&gt;1&lt;/exitdir2&gt;<br/>&lt;/object&gt; <br/><br/>&lt;object name=&quot;room2&quot;&gt;<br/>   &lt;!-- north exit (dir 0) landing in eastern direction (dir 1) in room 3--&gt;<br/>  &lt;exit0&gt;room3&lt;/exit0&gt;<br/>  &lt;exitdir0&gt;1&lt;/exitdir0&gt;<br/> &lt;!-- east exit (dir 1) landing in northern direction (dir 0) in room 2--&gt;<br/>  &lt;exit1&gt;room2&lt;/exit1&gt;<br/>  &lt;exitdir1&gt;0&lt;/exitdir1&gt;<br/> &lt;!-- south exit (dir 2) landing in western direction (dir 3) in room 2--&gt;<br/>  &lt;exit2&gt;room2&lt;/exit2&gt;<br/>  &lt;exitdir2&gt;3&lt;/exitdir2&gt;<br/>&lt;!-- west exit (dir 3) landing in northern direction (dir 0) in room 1--&gt;<br/>  &lt;exit3&gt;room1&lt;/exit3&gt;<br/>  &lt;exitdir3&gt;0&lt;/exitdir3&gt;<br/> &lt;/object&gt; <br/><br/>&lt;object name=&quot;room3&quot;&gt;<br/>  &lt;!-- west exit (dir 3) landing in southern direction (dir 2) in room 2--&gt;<br/>  &lt;exit3&gt;room2&lt;/exit3&gt;<br/>  &lt;exitdir3&gt;2&lt;/exitdir3&gt;<br/>&lt;/object&gt;</code></pre> <br/><br/>When you take the exit in direction X, you  basically set the room parent to exitX and you set the new player direction to exitdirX.<br/><br/>Hope that helps!",
      "PostDate": "2013-07-03T09:23:28+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25258",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "The &quot;dump out&quot; bit is just the text like &quot;You can go forward, left or right.&quot; (usually &quot;You can go north, east, or south.&quot;). That won't happen automatically since there won't be any actual physical exits in the room. So you'll have to write a little script to do that yourself, if you want to show that sort of info to the player, using the exit attributes in the room. \n\nI could help with that if you need it. It has to build a string, but it needs to check each direction, since the orientation changes. It could be something like:\n\n[code:1dbgk9mp]&lt;function name=&quot;HasExit&quot; parameters=&quot;dir&quot; type=&quot;boolean&quot;&gt;\n  dir = (game&#46;pov&#46;dir + dir) % 4\n  return (HasAttribute(game&#46;pov&#46;parent, &quot;exit&quot;+dir)\n&lt;/function&gt;\n\n// Then in your description code&#46;\nexitlist = NewList()\nif (HasExit(0)) {\n  list add(exitlist, &quot;forward&quot;)\n}\nif (HasExit(1)) {\n  list add(exitlist, &quot;right&quot;)\n}\nif (HasExit(2)) {\n  list add(exitlist, &quot;back&quot;)\n}\nif (HasExit(3)) {\n  list add(exitlist, &quot;left&quot;)\n}\n// Then generate the string from it\n// Stolen from the Quest core's FormatExitList function\ns = &quot;You can go &quot;\ncount = 0\nlength = ListCount(exitlist)\nforeach (exit, exitlist) {\n  s = s + exit\n  count = count + 1\n  if (count = length-1) {\n    s = s + &quot; or &quot;\n  } else {\n     s = s + &quot;, &quot;\n }\n}\ns = s + &quot;&#46;&quot;\nmsg(s)[/code:1dbgk9mp]\n\nPlease note that all this code I'm handing you is untested! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "The &quot;dump out&quot; bit is just the text like &quot;You can go forward, left or right.&quot; (usually &quot;You can go north, east, or south.&quot;). That won't happen automatically since there won't be any actual physical exits in the room. So you'll have to write a little script to do that yourself, if you want to show that sort of info to the player, using the exit attributes in the room. <br/><br/>I could help with that if you need it. It has to build a string, but it needs to check each direction, since the orientation changes. It could be something like:<br/><br/><pre><code>&lt;function name=&quot;HasExit&quot; parameters=&quot;dir&quot; type=&quot;boolean&quot;&gt;<br/>  dir = (game&#46;pov&#46;dir + dir) % 4<br/>  return (HasAttribute(game&#46;pov&#46;parent, &quot;exit&quot;+dir)<br/>&lt;/function&gt;<br/><br/>// Then in your description code&#46;<br/>exitlist = NewList()<br/>if (HasExit(0)) {<br/>  list add(exitlist, &quot;forward&quot;)<br/>}<br/>if (HasExit(1)) {<br/>  list add(exitlist, &quot;right&quot;)<br/>}<br/>if (HasExit(2)) {<br/>  list add(exitlist, &quot;back&quot;)<br/>}<br/>if (HasExit(3)) {<br/>  list add(exitlist, &quot;left&quot;)<br/>}<br/>// Then generate the string from it<br/>// Stolen from the Quest core's FormatExitList function<br/>s = &quot;You can go &quot;<br/>count = 0<br/>length = ListCount(exitlist)<br/>foreach (exit, exitlist) {<br/>  s = s + exit<br/>  count = count + 1<br/>  if (count = length-1) {<br/>    s = s + &quot; or &quot;<br/>  } else {<br/>     s = s + &quot;, &quot;<br/> }<br/>}<br/>s = s + &quot;&#46;&quot;<br/>msg(s)</code></pre><br/><br/>Please note that all this code I'm handing you is untested! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-07-03T09:37:42+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25262",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "[quote=&quot;jaynabonne&quot;:246q1yk8][sinp]\nPlease note that all this code I'm handing you is untested! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->[/quote:246q1yk8]\nNo problem.  I will have a play this afternoon.\n\nWhat did you think on my idea about flags?\n\nAlso, I just noticed something about quest this morning, I created 4 rooms (room0, room1, room2, and room3).  When creating exits normally, there is no selector for the room you are in.  If I am in room2, I can only create exits to rooms 0,1 &amp; 3.  I appreciate, in the context of our conversation this is pretty meaningless as we are running scripts instead, but I just thought I'd mention it.\n\nAlso, again not relevant here, but checking the box to create an exit in the other direction doesn't allow you to select a different exit - it justs uses the opposite exit as standard (which in most cases is fine).",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>[sinp]<br/>Please note that all this code I'm handing you is untested! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --></blockquote><br/>No problem.  I will have a play this afternoon.<br/><br/>What did you think on my idea about flags?<br/><br/>Also, I just noticed something about quest this morning, I created 4 rooms (room0, room1, room2, and room3).  When creating exits normally, there is no selector for the room you are in.  If I am in room2, I can only create exits to rooms 0,1 &amp; 3.  I appreciate, in the context of our conversation this is pretty meaningless as we are running scripts instead, but I just thought I'd mention it.<br/><br/>Also, again not relevant here, but checking the box to create an exit in the other direction doesn't allow you to select a different exit - it justs uses the opposite exit as standard (which in most cases is fine).",
      "PostDate": "2013-07-03T11:03:13+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25263",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Yes, that's why I was saying to not use exits. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> They don't work the way you want. That's what all this attribute stuff is about - synthesizing your own exit scheme. You would not use Quest to create exits - you'd create the attributes to specify the directions. Then you'd have custom forward, back, left and right commands to do the room movement as opposed to the standard &quot;go&quot; command.\n\nI hope that makes sense! (&quot;Grasshopper, you must let go of exits before you can embrace disorientation&quot;).\n\n[Note: If you did want to use Quest exits for something more standard but wanted different exits to have different directions, then just uncheck the checkbox to create the corresponding exit and then go to that room and manually create the other exit in whatever direction you want afterwards.]",
      "EditableFormat": "bbcode",
      "HTML": "Yes, that's why I was saying to not use exits. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> They don't work the way you want. That's what all this attribute stuff is about - synthesizing your own exit scheme. You would not use Quest to create exits - you'd create the attributes to specify the directions. Then you'd have custom forward, back, left and right commands to do the room movement as opposed to the standard &quot;go&quot; command.<br/><br/>I hope that makes sense! (&quot;Grasshopper, you must let go of exits before you can embrace disorientation&quot;).<br/><br/>[Note: If you did want to use Quest exits for something more standard but wanted different exits to have different directions, then just uncheck the checkbox to create the corresponding exit and then go to that room and manually create the other exit in whatever direction you want afterwards.]",
      "PostDate": "2013-07-03T11:21:11+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25264",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Since I feel I've led you down this garden path, here is a complete workup of what we have discussed (attached). You'll see there are no exits, just custom commands and attributes to connect things together.\n\nNote that this code works, which means I fixed the errors in what I have given you so far (there were several). I also left the room names in so that you don't get too disoriented! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nEdit: I put some &quot;Debug&quot; logging in so you can see the room/dirs for each move.",
      "EditableFormat": "bbcode",
      "HTML": "Since I feel I've led you down this garden path, here is a complete workup of what we have discussed (attached). You'll see there are no exits, just custom commands and attributes to connect things together.<br/><br/>Note that this code works, which means I fixed the errors in what I have given you so far (there were several). I also left the room names in so that you don't get too disoriented! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>Edit: I put some &quot;Debug&quot; logging in so you can see the room/dirs for each move.<div><a href=\"/forumattachments/650/Disorient.aslx\">Disorient.aslx</a></div>",
      "PostDate": "2013-07-03T11:46:54+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25265",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "[quote=&quot;jaynabonne&quot;:26wms80j]Since I feel I've led you down this garden path, here is a complete workup of what we have discussed (attached). You'll see there are no exits, just custom commands and attributes to connect things together.\n\nNote that this code works, which means I fixed the errors in what I have given you so far (there were several). I also left the room names in so that you don't get too disoriented! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nEdit: I put some &quot;Debug&quot; logging in so you can see the room/dirs. for each move.[/quote:26wms80j]\n\nThank you\n\n*goes to download*\n\nbut are you sure it's a garden path?",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>Since I feel I've led you down this garden path, here is a complete workup of what we have discussed (attached). You'll see there are no exits, just custom commands and attributes to connect things together.<br/><br/>Note that this code works, which means I fixed the errors in what I have given you so far (there were several). I also left the room names in so that you don't get too disoriented! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>Edit: I put some &quot;Debug&quot; logging in so you can see the room/dirs. for each move.</blockquote><br/><br/>Thank you<br/><br/>*goes to download*<br/><br/>but are you sure it's a garden path?",
      "PostDate": "2013-07-03T11:52:44+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25266",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Well I hope it's not too twisty a maze. <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->",
      "EditableFormat": "bbcode",
      "HTML": "Well I hope it's not too twisty a maze. <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->",
      "PostDate": "2013-07-03T12:04:16+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25272",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "This is looking really good, thank you.\n\nI have built a slightly larger (10-room) maze - well a 6 room maze with 4 additional rooms <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->.\n\nI had to play around with the value &quot;dir&quot; to get it to accommodate my wish to enter and exit the maze using cardinal points.\n\nPlease tell me what you think.  I put most of it together in Notepad++, copy and pasting then editing the code from your .aslx, but I saved it in Quest and it knocked out all the comments  <!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: --> Not good!\n\nAnyway, please let me know what you think of this (I knocked out the debug message and added some &quot;markings&quot; to the rooms instead - after trialling it myself).\n\n[attachment=0:22kw76o9]<!-- ia0 -->Amazing Maze.aslx<!-- ia0 -->[/attachment:22kw76o9]\n\nNow all I need to do is work on the Hansel and Gretel script for my breadcrumbs.  I think I will go with a piece of chalk and writing the numbers on the wall.\n\nSo I think I need to create a command to mark the room, maybe MARK ROOM or just MARK.\n\nThis will check inventory for a piece of chalk, if a piece of chalk is available it will mark a number then increase a counter for the next time, it will then add that number to the room description (as a non take-able object).\n\nIf you have no chalk in your inventory, then exits F, L &amp; R will be locked and you will only be able to go back the way you came (first maze room only as the chalk will not be a droppable item).\n\nAlso, eventually the maze will be dark, meaning entrance to it will be locked until you have a light source.  Hopefully those last 2 are a bit simpler to tie in <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\nMany thanks for your help so far.",
      "EditableFormat": "bbcode",
      "HTML": "This is looking really good, thank you.<br/><br/>I have built a slightly larger (10-room) maze - well a 6 room maze with 4 additional rooms <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->.<br/><br/>I had to play around with the value &quot;dir&quot; to get it to accommodate my wish to enter and exit the maze using cardinal points.<br/><br/>Please tell me what you think.  I put most of it together in Notepad++, copy and pasting then editing the code from your .aslx, but I saved it in Quest and it knocked out all the comments  <!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: --> Not good!<br/><br/>Anyway, please let me know what you think of this (I knocked out the debug message and added some &quot;markings&quot; to the rooms instead - after trialling it myself).<br/><br/><div><a href=\"/forumattachments/651/Amazing Maze.aslx\">Amazing Maze.aslx</a></div><br/><br/>Now all I need to do is work on the Hansel and Gretel script for my breadcrumbs.  I think I will go with a piece of chalk and writing the numbers on the wall.<br/><br/>So I think I need to create a command to mark the room, maybe MARK ROOM or just MARK.<br/><br/>This will check inventory for a piece of chalk, if a piece of chalk is available it will mark a number then increase a counter for the next time, it will then add that number to the room description (as a non take-able object).<br/><br/>If you have no chalk in your inventory, then exits F, L &amp; R will be locked and you will only be able to go back the way you came (first maze room only as the chalk will not be a droppable item).<br/><br/>Also, eventually the maze will be dark, meaning entrance to it will be locked until you have a light source.  Hopefully those last 2 are a bit simpler to tie in <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>Many thanks for your help so far.",
      "PostDate": "2013-07-03T16:05:42+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25273",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "It seems downright confounding (in a good way). I'm glad you have the rooms numbered for now. I think the chalk will be essential. Given that the player will know they have chalk, you might want to consider &quot;use chalk&quot; to be one of your verb choices.\n\nI ran into one odd thing, but it might just be a bug. This is my initial sequence after going down:\n\n[quote:1b4lqk61]You are in a Bottom of mineshaft.\nYou can go up or south.\nYou are stood at the bottom of the mineshaft. A ladder leads up and a dark passage leads south.\n\n&gt; south\n\nYou are in a T-Junction.\nYou can see a Number 1.\nYou can go right, back or left.\n\n&gt; back\n\nYou are in a Bottom of mineshaft.\nYou can go up or south.\nYou are stood at the bottom of the mineshaft. A ladder leads up and a dark passage leads south.\n\n&gt; s\n\nYou are in a T-Junction.\nYou can see a Number 1.\nYou can go forward, back or left.[/quote:1b4lqk61]\n\nIt seems odd to me that the first time I come in, it shows &quot;You can go right, back or left.&quot; and the second time from the same direction (an anchor point!), I get &quot;You can go forward, back or left.&quot; Things are hard enough... lol\n\nLooks good, though!",
      "EditableFormat": "bbcode",
      "HTML": "It seems downright confounding (in a good way). I'm glad you have the rooms numbered for now. I think the chalk will be essential. Given that the player will know they have chalk, you might want to consider &quot;use chalk&quot; to be one of your verb choices.<br/><br/>I ran into one odd thing, but it might just be a bug. This is my initial sequence after going down:<br/><br/><blockquote><p>You are in a Bottom of mineshaft.<br/>You can go up or south.<br/>You are stood at the bottom of the mineshaft. A ladder leads up and a dark passage leads south.<br/><br/>&gt; south<br/><br/>You are in a T-Junction.<br/>You can see a Number 1.<br/>You can go right, back or left.<br/><br/>&gt; back<br/><br/>You are in a Bottom of mineshaft.<br/>You can go up or south.<br/>You are stood at the bottom of the mineshaft. A ladder leads up and a dark passage leads south.<br/><br/>&gt; s<br/><br/>You are in a T-Junction.<br/>You can see a Number 1.<br/>You can go forward, back or left.</p></blockquote><br/><br/>It seems odd to me that the first time I come in, it shows &quot;You can go right, back or left.&quot; and the second time from the same direction (an anchor point!), I get &quot;You can go forward, back or left.&quot; Things are hard enough... lol<br/><br/>Looks good, though!",
      "PostDate": "2013-07-03T16:14:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25274",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "[quote=&quot;jaynabonne&quot;:2dbmu75n]It seems downright confounding (in a good way). I'm glad you have the rooms numbered for now. I think the chalk will be essential. Given that the player will know they have chalk, you might want to consider &quot;use chalk&quot; to be one of your verb choices.\n\nI ran into one odd thing, but it might just be a bug. This is my initial sequence after going down:\n\n[quote:2dbmu75n]You are in a Bottom of mineshaft.\nYou can go up or south.\nYou are stood at the bottom of the mineshaft. A ladder leads up and a dark passage leads south.\n\n&gt; south\n\nYou are in a T-Junction.\nYou can see a Number 1.\nYou can go right, back or left.\n\n&gt; back\n\nYou are in a Bottom of mineshaft.\nYou can go up or south.\nYou are stood at the bottom of the mineshaft. A ladder leads up and a dark passage leads south.\n\n&gt; s\n\nYou are in a T-Junction.\nYou can see a Number 1.\nYou can go forward, back or left.[/quote:2dbmu75n]\n\nIt seems odd to me that the first time I come in, it shows &quot;You can go right, back or left.&quot; and the second time from the same direction (an anchor point!), I get &quot;You can go forward, back or left.&quot; Things are hard enough... lol\n\nLooks good, though![/quote:2dbmu75n]\n\nWell spotted - I needed to change the &quot;dir&quot; value again.  I forgot that because the bottom of the shaft is using a cardinal point rather than a relative direction, that I would need to adjust the exit direction to reset the player - like I did for the exit of the maze (does that all make sense?)\n\nTry this one for size\n\n[attachment=0:2dbmu75n]<!-- ia0 -->Amazing Maze.aslx<!-- ia0 -->[/attachment:2dbmu75n]\n\nNext question.  When I finally implement this in a game, I am thinking of making it a little bigger still, and maybe over 2 or 3 levels.\n\nHow many rooms do you think is too many?  How easy was it for you to map?",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>It seems downright confounding (in a good way). I'm glad you have the rooms numbered for now. I think the chalk will be essential. Given that the player will know they have chalk, you might want to consider &quot;use chalk&quot; to be one of your verb choices.<br/><br/>I ran into one odd thing, but it might just be a bug. This is my initial sequence after going down:<br/><br/><blockquote><p>You are in a Bottom of mineshaft.<br/>You can go up or south.<br/>You are stood at the bottom of the mineshaft. A ladder leads up and a dark passage leads south.<br/><br/>&gt; south<br/><br/>You are in a T-Junction.<br/>You can see a Number 1.<br/>You can go right, back or left.<br/><br/>&gt; back<br/><br/>You are in a Bottom of mineshaft.<br/>You can go up or south.<br/>You are stood at the bottom of the mineshaft. A ladder leads up and a dark passage leads south.<br/><br/>&gt; s<br/><br/>You are in a T-Junction.<br/>You can see a Number 1.<br/>You can go forward, back or left.</blockquote><br/><br/>It seems odd to me that the first time I come in, it shows &quot;You can go right, back or left.&quot; and the second time from the same direction (an anchor point!), I get &quot;You can go forward, back or left.&quot; Things are hard enough... lol<br/><br/>Looks good, though!</p></blockquote><br/><br/>Well spotted - I needed to change the &quot;dir&quot; value again.  I forgot that because the bottom of the shaft is using a cardinal point rather than a relative direction, that I would need to adjust the exit direction to reset the player - like I did for the exit of the maze (does that all make sense?)<br/><br/>Try this one for size<br/><br/><div><a href=\"/forumattachments/652/Amazing Maze.aslx\">Amazing Maze.aslx</a></div><br/><br/>Next question.  When I finally implement this in a game, I am thinking of making it a little bigger still, and maybe over 2 or 3 levels.<br/><br/>How many rooms do you think is too many?  How easy was it for you to map?",
      "PostDate": "2013-07-03T16:32:48+01:00",
      "LastEditDate": null
    }
  ]
}