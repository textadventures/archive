{
  "Topic": {
    "TopicId": "0fb95bdj1eagbnb4wnummg",
    "ForumId": "10",
    "Title": "Preventing the player missing a message",
    "LastUpdated": "2017-08-18T00:45:44.5164074Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "dd79f964-6f64-4816-8653-47db4300e054",
      "UserId": 319964,
      "Username": "GregC",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here's my issue:\r\n\r\nI clear the screen when the player moves location. This is a pretty good way to do things and I don't really want to change it if I can help it.\r\n\r\nIn my game the player can become poisoned. This is a long term issue that gives increasingly urgent messages every 50 actions. The player needs to act on these or they'll eventually die (They get a lot of actions, finding a cure should take a small fraction of them if they make it their top priority)\r\n\r\nThe problem is that if the player is moving it's really easy for them to miss a message. Players moving through an area they've already explored tend to click a handful of moves really quickly. If a message pops up during one of those moves saying \"The poison is getting worse, you really ought to do something to not die.\" in the middle of a series of quick moves the player might register that *something* popped up, but it gets cleared before they get a chance to read it.\r\n\r\nMy ideal solution would be able to give a command that's the equivalent of \"If the script hits this line, stop taking player input for 2 seconds\" to prevent this. Is there anything like that? Alternatively \"If the script hits this line, stop taking player input until they hit a certain key or button to acknowledge the message\"\r\n\r\nThings that don't work:\r\nPause seems to have been removed\r\nAll of the other \"wait\" type functions just pause the script, they don't disable player input\r\nWorking a delay into movement (I mean it works, but the cure is worse than the disease)\r\nWait for input doesn't seem to \"wait\" so much as \"let the player keep moving\"\r\nDisabling movement based on a timer after the message pops up (Or at least by methods that I know such as hiding exists. Hiding every exit in the game for two seconds seems like using a nuke to fight a goldfish)\r\n\r\nThing that kinda works:\r\nWriting a bit of script to disable the screen clearing for a couple of moves following an urgent message.\r\nThis isn't ideal and looks super ugly in some cases, but it's better than nothing.",
      "EditableFormat": "markdown",
      "HTML": "<p>Here's my issue:</p>\n<p>I clear the screen when the player moves location. This is a pretty good way to do things and I don't really want to change it if I can help it.</p>\n<p>In my game the player can become poisoned. This is a long term issue that gives increasingly urgent messages every 50 actions. The player needs to act on these or they'll eventually die (They get a lot of actions, finding a cure should take a small fraction of them if they make it their top priority)</p>\n<p>The problem is that if the player is moving it's really easy for them to miss a message. Players moving through an area they've already explored tend to click a handful of moves really quickly. If a message pops up during one of those moves saying \"The poison is getting worse, you really ought to do something to not die.\" in the middle of a series of quick moves the player might register that <em>something</em> popped up, but it gets cleared before they get a chance to read it.</p>\n<p>My ideal solution would be able to give a command that's the equivalent of \"If the script hits this line, stop taking player input for 2 seconds\" to prevent this. Is there anything like that? Alternatively \"If the script hits this line, stop taking player input until they hit a certain key or button to acknowledge the message\"</p>\n<p>Things that don't work:<br>\nPause seems to have been removed<br>\nAll of the other \"wait\" type functions just pause the script, they don't disable player input<br>\nWorking a delay into movement (I mean it works, but the cure is worse than the disease)<br>\nWait for input doesn't seem to \"wait\" so much as \"let the player keep moving\"<br>\nDisabling movement based on a timer after the message pops up (Or at least by methods that I know such as hiding exists. Hiding every exit in the game for two seconds seems like using a nuke to fight a goldfish)</p>\n<p>Thing that kinda works:<br>\nWriting a bit of script to disable the screen clearing for a couple of moves following an urgent message.<br>\nThis isn't ideal and looks super ugly in some cases, but it's better than nothing.</p>\n\n",
      "PostDate": "2017-08-18T00:45:44.5164074Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "29848868-bd5b-46a6-95e7-30c39f779312",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There is a way to show a message, with a \"false\" statement, meaning the player must respond to the message before they can do anything else.\r\nSo... short answer... yes...\r\nDetails (from someone else) in\r\n5\r\n4\r\n3\r\n2\r\n1\r\n...\r\n( I guess that should have been a ShowMenu...)\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>There is a way to show a message, with a \"false\" statement, meaning the player must respond to the message before they can do anything else.<br>\nSo... short answer... yes...<br>\nDetails (from someone else) in<br>\n5<br>\n4<br>\n3<br>\n2<br>\n1<br>\n...<br>\n( I guess that should have been a ShowMenu...)</p>\n\n",
      "PostDate": "2017-08-18T02:31:17.3682219Z",
      "LastEditDate": "2017-08-18T03:21:58.2377702Z",
      "link": null
    },
    {
      "PostId": "76a39acb-866d-4927-acce-5939a1430d86",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "WHO?\r\nI just use the show menu... so...\r\nI don't understand why a disable script wouldn't work...",
      "EditableFormat": "markdown",
      "HTML": "<p>WHO?<br>\nI just use the show menu... so...<br>\nI don't understand why a disable script wouldn't work...</p>\n\n",
      "PostDate": "2017-08-18T03:13:55.8759714Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "65384afc-a0bd-415d-b520-c7edb4df9b78",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n(again, filler for getting my edited post, updated/posted)\r\n\r\n---------------\r\n\r\nhave a condition so you can control (via toggle) the ClearScreen on/off as when-needed:\r\n\r\n```\r\n// in your 'on player moving / entering room / whatever the built-in thing you're using lol' scripting location:\r\n\r\nif (game.is_clear_screen_enabled_boolean_attribute) {\r\n  ClearScreen\r\n}\r\n\r\n// set/re-set it as desired, when/where desired:\r\n//\r\n// game.is_clear_screen_enabled_boolean_attribute = true\r\n// game.is_clear_screen_enabled_boolean_attribute = false\r\n\r\n// ---------------------------\r\n\r\n// for an example (using a global Turnscript and special 'changed' Script Attributes on the 'player' Player Object, just for an example only --- this is definately NOT the best design, but should be a good example for you to get some ideas on how things can be done):\r\n\r\n<object name=\"player\">\r\n  <attr name=is_clear_screen_enabled_boolean_attribute\" type=\"boolean\">true</attr>\r\n  <attr name=\"poisoned_turn_count\" type=\"int\">0</attr>\r\n  <attr name=\"poisoned\" type=\"boolean\">false</attr>\r\n  <attr name=\"changedpoisoned\" type=\"script\">\r\n    player.poisoned_turn_count = 0\r\n    if (player.poisoned) {\r\n      EnableTurnscript (poisoned_global_turnscript)\r\n    } else {\r\n      DisableTurnscript (poisoned_global_turnscript)\r\n    }\r\n  </attr>\r\n  <attr name=\"changedparent\" type=\"script\">\r\n    if (player.is_clear_screen_enabled_boolean_attribute) {\r\n      ClearScreen\r\n    }\r\n  </attr>\r\n</object>\r\n\r\n<turnscript name=\"poisoned_global_turnscript\">\r\n  <attr name=\"enabled\" type=\"boolean\">false</attr>\r\n  <attr name=\"script\" type=\"script\">\r\n    if (player.poisoned_turn_count = 50) {\r\n      player.poisoned_turn_count = 0\r\n      player.current_life = player.current_life - 100\r\n      game.is_clear_screen_enabled_boolean_attribute = false\r\n      msg (\"Since you're poisoned, you lose 100 life every 50 turns, and it's been 50 turns\")\r\n      wait {\r\n        game.is_clear_screen_enabled_boolean_attribute = true\r\n      }\r\n    } else {\r\n      player.poisoned_turn_count = player.poisoned_turn_count + 1\r\n    }\r\n  </attr>\r\n</turnscript>\r\n```\r\n\r\n---------------\r\n\r\nDisabled player input involves removing/hiding the input command box and/or maybe other such stuff (aka: User Interface / JavaScript, customizing) .... which is not my area of knowledge yet (eventually... I'll get around to learning this stuff), there's guides on how to do this, and others who can help you on it.",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)<br>\n(again, filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>have a condition so you can control (via toggle) the ClearScreen on/off as when-needed:</p>\n<pre><code>// in your 'on player moving / entering room / whatever the built-in thing you're using lol' scripting location:\n\nif (game.is_clear_screen_enabled_boolean_attribute) {\n  ClearScreen\n}\n\n// set/re-set it as desired, when/where desired:\n//\n// game.is_clear_screen_enabled_boolean_attribute = true\n// game.is_clear_screen_enabled_boolean_attribute = false\n\n// ---------------------------\n\n// for an example (using a global Turnscript and special 'changed' Script Attributes on the 'player' Player Object, just for an example only --- this is definately NOT the best design, but should be a good example for you to get some ideas on how things can be done):\n\n&lt;object name=\"player\"&gt;\n  &lt;attr name=is_clear_screen_enabled_boolean_attribute\" type=\"boolean\"&gt;true&lt;/attr&gt;\n  &lt;attr name=\"poisoned_turn_count\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"poisoned\" type=\"boolean\"&gt;false&lt;/attr&gt;\n  &lt;attr name=\"changedpoisoned\" type=\"script\"&gt;\n    player.poisoned_turn_count = 0\n    if (player.poisoned) {\n      EnableTurnscript (poisoned_global_turnscript)\n    } else {\n      DisableTurnscript (poisoned_global_turnscript)\n    }\n  &lt;/attr&gt;\n  &lt;attr name=\"changedparent\" type=\"script\"&gt;\n    if (player.is_clear_screen_enabled_boolean_attribute) {\n      ClearScreen\n    }\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;turnscript name=\"poisoned_global_turnscript\"&gt;\n  &lt;attr name=\"enabled\" type=\"boolean\"&gt;false&lt;/attr&gt;\n  &lt;attr name=\"script\" type=\"script\"&gt;\n    if (player.poisoned_turn_count = 50) {\n      player.poisoned_turn_count = 0\n      player.current_life = player.current_life - 100\n      game.is_clear_screen_enabled_boolean_attribute = false\n      msg (\"Since you're poisoned, you lose 100 life every 50 turns, and it's been 50 turns\")\n      wait {\n        game.is_clear_screen_enabled_boolean_attribute = true\n      }\n    } else {\n      player.poisoned_turn_count = player.poisoned_turn_count + 1\n    }\n  &lt;/attr&gt;\n&lt;/turnscript&gt;\n</code></pre>\n<hr>\n<p>Disabled player input involves removing/hiding the input command box and/or maybe other such stuff (aka: User Interface / JavaScript, customizing) .... which is not my area of knowledge yet (eventually... I'll get around to learning this stuff), there's guides on how to do this, and others who can help you on it.</p>\n\n",
      "PostDate": "2017-08-18T08:38:24.6327923Z",
      "LastEditDate": "2017-08-18T08:47:42.9612535Z",
      "link": null
    },
    {
      "PostId": "6f0c66ab-ce0e-4bc7-ab04-8a54db765541",
      "UserId": 319964,
      "Username": "GregC",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm not sure I can see what that last chunk of code does that's different from my existing \"Don't clear the screen for a few moves following a message\" pseudo solution that I mentioned in the first post.\r\n\r\nI feel like jmnevil gives the obvious answer though: Using show menu to put up a one item menu with \"continue\" as the only option. I've been using menus to construct dialogue trees - I don't know why that didn't occur to me, that feels like it's going to be the most elegant solution. Thanks.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not sure I can see what that last chunk of code does that's different from my existing \"Don't clear the screen for a few moves following a message\" pseudo solution that I mentioned in the first post.</p>\n<p>I feel like jmnevil gives the obvious answer though: Using show menu to put up a one item menu with \"continue\" as the only option. I've been using menus to construct dialogue trees - I don't know why that didn't occur to me, that feels like it's going to be the most elegant solution. Thanks.</p>\n\n",
      "PostDate": "2017-08-18T09:09:24.0831688Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9396fe3d-7f03-42a4-b7c5-5c4b72a2ed3e",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "# This should do the trick:\r\n\r\n\r\n**Turn Script (enabled at start of game):**\r\n\r\n ```\r\n//player.poisoned = true\r\nif (player.poisoned) {\r\n  player.parent.alias = \"YOU HAVE BEEN POISONED\"\r\n  request (UpdateLocation, \"YOU HAVE BEEN POISONED\")\r\n  JS.eval (\"$('#status').css('background-color', 'red')\")\r\n  JS.eval (\"$('#status').css('background-image', 'none')\")\r\n  request (Show, \"Panes\")\r\n  JS.eval (\"$('#gameBorder').css('background-color', 'red');\")\r\n  JS.addText (\"YOU HAVE BEEN POISONED!\")\r\n  msg (\"YOU HAVE BEEN POISONED\")\r\n  JS.setInterfaceString (\"InventoryLabel\", \"YOU HAVE BEEN POISONED\")\r\n  JS.setInterfaceString (\"PlacesObjectsLabel\", \"YOU HAVE BEEN POISONED\")\r\n  JS.setInterfaceString (\"CompassLabel\", \"YOU HAVE BEEN POISONED\")\r\n  JS.setInterfaceString (\"TypeHereLabel\", \"YOU HAVE BEEN POISONED\")\r\n  JS.setInterfaceString (\"ContinueLabel\", \"YOU HAVE BEEN POISONED\")\r\n  request (GameName, \"YOU HAVE BEEN POISONED\")\r\n  game.gamename = \"YOU HAVE BEEN POISONED\"\r\n  ClearScreen\r\n  PrintCentered (\"<span><h1 style=\\\"font-size:255%\\\">{game.gamename}</span><br/><span style=\\\"font-size:145%\\\">by The Person Who Poisoned You</span><br/>\")\r\n  HandleSingleCommand (\"look\")\r\n  ShowMenu (\"DO YOU KNOW THAT YOU'RE POISONED???\", Split(\"yes;no\", \";\"), false) {\r\n  }\r\n  wait {\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<h1>This should do the trick:</h1>\n<p><strong>Turn Script (enabled at start of game):</strong></p>\n<pre><code>//player.poisoned = true\nif (player.poisoned) {\n player.parent.alias = \"YOU HAVE BEEN POISONED\"\n request (UpdateLocation, \"YOU HAVE BEEN POISONED\")\n JS.eval (\"$('#status').css('background-color', 'red')\")\n JS.eval (\"$('#status').css('background-image', 'none')\")\n request (Show, \"Panes\")\n JS.eval (\"$('#gameBorder').css('background-color', 'red');\")\n JS.addText (\"YOU HAVE BEEN POISONED!\")\n msg (\"YOU HAVE BEEN POISONED\")\n JS.setInterfaceString (\"InventoryLabel\", \"YOU HAVE BEEN POISONED\")\n JS.setInterfaceString (\"PlacesObjectsLabel\", \"YOU HAVE BEEN POISONED\")\n JS.setInterfaceString (\"CompassLabel\", \"YOU HAVE BEEN POISONED\")\n JS.setInterfaceString (\"TypeHereLabel\", \"YOU HAVE BEEN POISONED\")\n JS.setInterfaceString (\"ContinueLabel\", \"YOU HAVE BEEN POISONED\")\n request (GameName, \"YOU HAVE BEEN POISONED\")\n game.gamename = \"YOU HAVE BEEN POISONED\"\n ClearScreen\n PrintCentered (\"&lt;span&gt;&lt;h1 style=\\\"font-size:255%\\\"&gt;{game.gamename}&lt;/span&gt;&lt;br/&gt;&lt;span style=\\\"font-size:145%\\\"&gt;by The Person Who Poisoned You&lt;/span&gt;&lt;br/&gt;\")\n HandleSingleCommand (\"look\")\n ShowMenu (\"DO YOU KNOW THAT YOU'RE POISONED???\", Split(\"yes;no\", \";\"), false) {\n }\n wait {\n }\n}\n</code></pre>\n\n",
      "PostDate": "2017-08-18T10:07:50.2926275Z",
      "LastEditDate": "2017-08-18T10:10:13.735133Z",
      "link": null
    },
    {
      "PostId": "38f95d40-b44d-45e9-9106-75a59d5f979c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "just a comment about using a 'menu' ('show menu (args/params)', 'ShowMenu (args/params)', 'ask (args/params)', 'Ask (args/params)', and any etc such menu Functions) vs using the 'wait' Function:\r\n\r\n(lowercase menu Functions are the popup window menus)\r\n(uppercase menu Functions are the 'inline', aka hyperlink, menus)\r\n\r\nI don't see how using the menu's forcing a click-selection on a popup menu option or click on a hyperlink (as an option/item you give to the menu) on an 'inline' menu, to continue with the game, any different from the 'wait' Function forcing a click on a 'continue' hyperlink (or the pressing any keyboard key, actually) to continue with the game",
      "EditableFormat": "markdown",
      "HTML": "<p>just a comment about using a 'menu' ('show menu (args/params)', 'ShowMenu (args/params)', 'ask (args/params)', 'Ask (args/params)', and any etc such menu Functions) vs using the 'wait' Function:</p>\n<p>(lowercase menu Functions are the popup window menus)<br>\n(uppercase menu Functions are the 'inline', aka hyperlink, menus)</p>\n<p>I don't see how using the menu's forcing a click-selection on a popup menu option or click on a hyperlink (as an option/item you give to the menu) on an 'inline' menu, to continue with the game, any different from the 'wait' Function forcing a click on a 'continue' hyperlink (or the pressing any keyboard key, actually) to continue with the game</p>\n\n",
      "PostDate": "2017-08-18T10:07:57.5534203Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4d166f5c-9836-4aac-a314-0d408c081974",
      "UserId": 319964,
      "Username": "GregC",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The wait function seemed to accept any sort of input at all - so if the player wanted to backtrack three rooms west they might click west three times rapidly. Suppose the poison message was supposed to display this tick you'd get\r\n\r\nClick west - taken as move\r\nPoison message displayed. Wait started\r\nClick west - taken as input for wait, wait ended\r\nClick west - player moves west, poison message deleted without being read.\r\n\r\nI think Richard's solution is too subtle, I don't think the player would notice that ;)\r\n\r\nOn a side note one of the reasons for having the first poison message happen 50+/- 10 steps after the player is poisoned is so that I didn't want it to display to the player what had poisoned them. A few characters will offer the player food and drink, I'd like a sense of paranoia about which one is trying to kill them. ",
      "EditableFormat": "markdown",
      "HTML": "<p>The wait function seemed to accept any sort of input at all - so if the player wanted to backtrack three rooms west they might click west three times rapidly. Suppose the poison message was supposed to display this tick you'd get</p>\n<p>Click west - taken as move<br>\nPoison message displayed. Wait started<br>\nClick west - taken as input for wait, wait ended<br>\nClick west - player moves west, poison message deleted without being read.</p>\n<p>I think Richard's solution is too subtle, I don't think the player would notice that ;)</p>\n<p>On a side note one of the reasons for having the first poison message happen 50+/- 10 steps after the player is poisoned is so that I didn't want it to display to the player what had poisoned them. A few characters will offer the player food and drink, I'd like a sense of paranoia about which one is trying to kill them.</p>\n\n",
      "PostDate": "2017-08-18T10:21:15.3948879Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d8451647-77e0-44bf-a87b-f24289500148",
      "UserId": 319964,
      "Username": "GregC",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So the poison is now working how I'd like and I figured I'd use this approach in other turn scripts that display some extra text after a player action. It's not working as planned:\r\n\r\nWitch.ritual = Witch.ritual + 1\r\nif (Witch.ritual = 4) {\r\n  msg (\"----------------------------------------------------------------------------------------------------------------\")\r\n  msg (\"The chanting continues, getting faster and louder.\")\r\n  Continue\r\n}\r\nif (Witch.ritual = 8) {\r\n  msg (\"----------------------------------------------------------------------------------------------------------------\")\r\n  msg (\"A light flickers and a portal starts to open.\")\r\n  Continue\r\n}\r\nif (Witch.ritual = 10) {\r\n  msg (\"----------------------------------------------------------------------------------------------------------------\")\r\n  msg (\"A demon steps through the portal, the lead figure starts to say something, but the demon launches itself into the lead cultist and tears him in half.\")\r\n  MoveObject (Demon, Ritual Chamber)\r\n  Continue\r\n}\r\nif (Witch.ritual = 11) {\r\n  msg (\"----------------------------------------------------------------------------------------------------------------\")\r\n  msg (\"The demon finishes rampaging through the cultists and turns its attention to you. You barely raise your sword before it strikes\")\r\n  finish\r\n}\r\n\r\n(Continue is just a function that saves me writing the same show message command a bunch of times)\r\n\r\nSo the intended behavior is that after four and eight moves messages indicate the progress of the ritual. After ten the demon appears in the room. If the player hasn't done something to the demon to stop this script then on eleven it kills the player. And it was working fine.\r\n\r\nHowever now it's treating the showmenu choices as ticks. So when the player hits \"continue\" after 10 it jumps straight to the message for 11 without giving them a chance to do anything to the new object in the room.\r\n\r\nNow I can fix that any number of ways: Disabling the turn script, increasing 11 to 12 (actually increasing all of the numbers if every continue is taking up a tick), etc - but I want to understand why it's happening because it'll probably matter later when I'm writing some other part of the game.\r\n\r\nOther showmenu calls aren't counting as a tick - if they speak to someone in the room then they might get into a dialogue tree with a whole bunch of them, but it only ever counts as one tick for the ritual. So why does using a show menu in the turn script itself take up a tick?",
      "EditableFormat": "markdown",
      "HTML": "<p>So the poison is now working how I'd like and I figured I'd use this approach in other turn scripts that display some extra text after a player action. It's not working as planned:</p>\n<p>Witch.ritual = Witch.ritual + 1<br>\nif (Witch.ritual = 4) {<br>\nmsg (\"----------------------------------------------------------------------------------------------------------------\")<br>\nmsg (\"The chanting continues, getting faster and louder.\")<br>\nContinue<br>\n}<br>\nif (Witch.ritual = 8) {<br>\nmsg (\"----------------------------------------------------------------------------------------------------------------\")<br>\nmsg (\"A light flickers and a portal starts to open.\")<br>\nContinue<br>\n}<br>\nif (Witch.ritual = 10) {<br>\nmsg (\"----------------------------------------------------------------------------------------------------------------\")<br>\nmsg (\"A demon steps through the portal, the lead figure starts to say something, but the demon launches itself into the lead cultist and tears him in half.\")<br>\nMoveObject (Demon, Ritual Chamber)<br>\nContinue<br>\n}<br>\nif (Witch.ritual = 11) {<br>\nmsg (\"----------------------------------------------------------------------------------------------------------------\")<br>\nmsg (\"The demon finishes rampaging through the cultists and turns its attention to you. You barely raise your sword before it strikes\")<br>\nfinish<br>\n}</p>\n<p>(Continue is just a function that saves me writing the same show message command a bunch of times)</p>\n<p>So the intended behavior is that after four and eight moves messages indicate the progress of the ritual. After ten the demon appears in the room. If the player hasn't done something to the demon to stop this script then on eleven it kills the player. And it was working fine.</p>\n<p>However now it's treating the showmenu choices as ticks. So when the player hits \"continue\" after 10 it jumps straight to the message for 11 without giving them a chance to do anything to the new object in the room.</p>\n<p>Now I can fix that any number of ways: Disabling the turn script, increasing 11 to 12 (actually increasing all of the numbers if every continue is taking up a tick), etc - but I want to understand why it's happening because it'll probably matter later when I'm writing some other part of the game.</p>\n<p>Other showmenu calls aren't counting as a tick - if they speak to someone in the room then they might get into a dialogue tree with a whole bunch of them, but it only ever counts as one tick for the ritual. So why does using a show menu in the turn script itself take up a tick?</p>\n\n",
      "PostDate": "2017-08-18T10:34:33.3854013Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d9242647-c2c4-46c0-be4c-9aa1cb3fc029",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting this edited post, updated/posted)\r\n\r\n-------------------\r\n\r\nah okay, I didn't realize that you had the issue of the 'wait' Function preserving/keeping/using/doing your inputs (after the wait functionality had ended), which matter for your design... (I didn't know/realized your design involved this stuff, nor did I realize that the 'wait' preserved the inputs.\r\n\r\nya, then you want to wipe out the inputs all together, via hiding the input command bar, in which, Richard knows this UI/pane/JS customization stuff well, ... this is something that I need to eventually get to learning... lol\r\n\r\nor... you can use a condition toggle/control:\r\n\r\nsuch as Pixie's custom 'notaturn' Boolean Attribute either within your global Turnscript (as this is the only way of accessing the 'internal turns', unless someone knows what-are (name) the internal turns and/or where they're located within quest's underlying code. I forgot what library of pixie involves this mechanic/design/functionality.... maybe his 'shop' library... ??? You can probably also put in the hide the input command bar into the scripting for a conditional Attribute within a global Turnscript too, instead.\r\n\r\n```\r\n<game name=\"example_game\">\r\n  <attr name=\"is_a_turn\" type=\"boolean\">true</attr>\r\n  <attr name=\"turn\" type=\"int\">0</attr>\r\n</game>\r\n\r\n// you toggle turns on/off by setting/re-setting in whatever scripting location / action / event within the game:\r\n//\r\n// game.is_a_turn = true\r\n// game.is_a_turn = false\r\n\r\n<turnscript name=\"global_turnscript\">\r\n  <attr name=\"enabled\" type=\"boolean\">true</attr>\r\n  <attr name=\"script\" type=\"script\">\r\n    // whatever other scripting you want happening globally per turn\r\n    if (game.is_a_turn) {\r\n      game.turn = game.turn + 1\r\n    }\r\n    // optionally: else { /* scripting */ }\r\n  </attr>\r\n</turnscript>",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting this edited post, updated/posted)</p>\n<hr>\n<p>ah okay, I didn't realize that you had the issue of the 'wait' Function preserving/keeping/using/doing your inputs (after the wait functionality had ended), which matter for your design... (I didn't know/realized your design involved this stuff, nor did I realize that the 'wait' preserved the inputs.</p>\n<p>ya, then you want to wipe out the inputs all together, via hiding the input command bar, in which, Richard knows this UI/pane/JS customization stuff well, ... this is something that I need to eventually get to learning... lol</p>\n<p>or... you can use a condition toggle/control:</p>\n<p>such as Pixie's custom 'notaturn' Boolean Attribute either within your global Turnscript (as this is the only way of accessing the 'internal turns', unless someone knows what-are (name) the internal turns and/or where they're located within quest's underlying code. I forgot what library of pixie involves this mechanic/design/functionality.... maybe his 'shop' library... ??? You can probably also put in the hide the input command bar into the scripting for a conditional Attribute within a global Turnscript too, instead.</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"is_a_turn\" type=\"boolean\"&gt;true&lt;/attr&gt;\n  &lt;attr name=\"turn\" type=\"int\"&gt;0&lt;/attr&gt;\n&lt;/game&gt;\n\n// you toggle turns on/off by setting/re-setting in whatever scripting location / action / event within the game:\n//\n// game.is_a_turn = true\n// game.is_a_turn = false\n\n&lt;turnscript name=\"global_turnscript\"&gt;\n  &lt;attr name=\"enabled\" type=\"boolean\"&gt;true&lt;/attr&gt;\n  &lt;attr name=\"script\" type=\"script\"&gt;\n    // whatever other scripting you want happening globally per turn\n    if (game.is_a_turn) {\n      game.turn = game.turn + 1\n    }\n    // optionally: else { /* scripting */ }\n  &lt;/attr&gt;\n&lt;/turnscript&gt;\n</code></pre>\n\n",
      "PostDate": "2017-08-18T10:58:40.5589257Z",
      "LastEditDate": "2017-08-18T11:06:02.2187607Z",
      "link": null
    },
    {
      "PostId": "b37944cd-bc3a-4679-8241-5cffebb60fc5",
      "UserId": 319964,
      "Username": "GregC",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've actually already hidden the command bar (I didn't want one for this game) originally through javascript, but later found out there was just a checkbox for \"I don't want this game to have a command bar\" which was much simpler :D\r\n\r\nI can see how I could use this script in order to ensure that a particular menu button click didn't advance turn counters - but rather than patching over the problem I'd really like to understand what it is in the first place.\r\n\r\nWhy do some showmenu clicks trigger turn scripts while others do not?",
      "EditableFormat": "markdown",
      "HTML": "<p>I've actually already hidden the command bar (I didn't want one for this game) originally through javascript, but later found out there was just a checkbox for \"I don't want this game to have a command bar\" which was much simpler :D</p>\n<p>I can see how I could use this script in order to ensure that a particular menu button click didn't advance turn counters - but rather than patching over the problem I'd really like to understand what it is in the first place.</p>\n<p>Why do some showmenu clicks trigger turn scripts while others do not?</p>\n\n",
      "PostDate": "2017-08-18T14:43:09.1519749Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b565e851-465e-4523-bc2b-539295b95ac3",
      "UserId": 319964,
      "Username": "GregC",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So the example code given above doesn't actually work in this context.\r\n\r\nIf I create an object and give it a verb script like:\r\n\r\n```\r\nif (game.is_a_turn = true) {\r\n  game.is_a_turn = false\r\n}\r\nelse {\r\n  game.is_a_turn = true\r\n}\r\n```\r\nAnd have my turn script not do anything if \"game.is_a_turn\" is false then it works exactly as intended. I activate the object, ticks stop happening. No more ticks till I activate it again. Great job.\r\n\r\nHowever if I create a turn timer and give it this script:\r\n\r\n```\r\nif (game.is_a_turn = true)\r\n{\r\n  msg(\"Tick\")\r\n  game.is_a_turn= false\r\n  msg (\"Turns disabled\")\r\n  Continue = NewStringList()\r\n  list add (Continue, \"Continue\")\r\n  ShowMenu (\"\", Continue, false) \r\n  {\r\n    game.is_a_turn = true\r\n    msg (\"Turns enabled\")\r\n  }\r\n}\r\n```\r\nProduces:\r\n\r\nTick\r\nTurns disabled\r\nContinue\r\n(waits until user clicks continue)\r\nTurns enabled\r\nTick\r\nTurns disabled\r\nContinue\r\n(waits until user clicks continue)\r\nTurns enabled\r\nTick\r\n...and so on to infinity\r\n\r\nRemoving the Show Menu command causes it to Tick once and wait for the user to do something else before it ticks again.\r\n\r\nSo it seems like clicking on the continue button is being causing a tick - but at the point \"game.is_a_turn\" should be false (we even have a message saying turns are disabled to help us confirm), which means it should skip the tick.\r\n\r\nWhile I'm getting a better picture of the behaviour, I still have no idea why!",
      "EditableFormat": "markdown",
      "HTML": "<p>So the example code given above doesn't actually work in this context.</p>\n<p>If I create an object and give it a verb script like:</p>\n<pre><code>if (game.is_a_turn = true) {\n  game.is_a_turn = false\n}\nelse {\n  game.is_a_turn = true\n}\n</code></pre>\n<p>And have my turn script not do anything if \"game.is_a_turn\" is false then it works exactly as intended. I activate the object, ticks stop happening. No more ticks till I activate it again. Great job.</p>\n<p>However if I create a turn timer and give it this script:</p>\n<pre><code>if (game.is_a_turn = true)\n{\n  msg(\"Tick\")\n  game.is_a_turn= false\n  msg (\"Turns disabled\")\n  Continue = NewStringList()\n  list add (Continue, \"Continue\")\n  ShowMenu (\"\", Continue, false) \n  {\n    game.is_a_turn = true\n    msg (\"Turns enabled\")\n  }\n}\n</code></pre>\n<p>Produces:</p>\n<p>Tick<br>\nTurns disabled<br>\nContinue<br>\n(waits until user clicks continue)<br>\nTurns enabled<br>\nTick<br>\nTurns disabled<br>\nContinue<br>\n(waits until user clicks continue)<br>\nTurns enabled<br>\nTick<br>\n...and so on to infinity</p>\n<p>Removing the Show Menu command causes it to Tick once and wait for the user to do something else before it ticks again.</p>\n<p>So it seems like clicking on the continue button is being causing a tick - but at the point \"game.is_a_turn\" should be false (we even have a message saying turns are disabled to help us confirm), which means it should skip the tick.</p>\n<p>While I'm getting a better picture of the behaviour, I still have no idea why!</p>\n\n",
      "PostDate": "2017-08-18T15:43:16.441253Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b2a35614-a728-40df-9a8b-e2c3ec80f77a",
      "UserId": 319964,
      "Username": "GregC",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If I was feeling blunt I could stop trying to disable the ticker and just subtract one from the current turn number instead, but I'm sure having the same turn twice is going to cause some sort of undesirable effect somewhere down the line ;)",
      "EditableFormat": "markdown",
      "HTML": "<p>If I was feeling blunt I could stop trying to disable the ticker and just subtract one from the current turn number instead, but I'm sure having the same turn twice is going to cause some sort of undesirable effect somewhere down the line ;)</p>\n\n",
      "PostDate": "2017-08-18T15:45:26.8528489Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5ff497f7-abec-4bb7-84f0-84a0aa5e2ebb",
      "UserId": 319964,
      "Username": "GregC",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So here's what I think is happening:\r\n\r\nWhen the player does something the engine sets a variable \"under the hood\" that means they did something.\r\nThen when all other scripts have finished if that variable is true, it flips it to false, then iterates through the turn scripts one by one.\r\n\r\nSo when the player clicks on the menu it sets the variable to say that the player has taken their turn - but it doesn't actually execute the turn scripts for that turn until all current scripts have finished. Which means that \"game.is_a_turn\" is false when the player takes their turn (clicks on the thing) but true when the effects of the player taking their turn are happening (after the current script has finished)\r\n\r\nAll just conjecture, but that'd explain the behaviour.",
      "EditableFormat": "markdown",
      "HTML": "<p>So here's what I think is happening:</p>\n<p>When the player does something the engine sets a variable \"under the hood\" that means they did something.<br>\nThen when all other scripts have finished if that variable is true, it flips it to false, then iterates through the turn scripts one by one.</p>\n<p>So when the player clicks on the menu it sets the variable to say that the player has taken their turn - but it doesn't actually execute the turn scripts for that turn until all current scripts have finished. Which means that \"game.is_a_turn\" is false when the player takes their turn (clicks on the thing) but true when the effects of the player taking their turn are happening (after the current script has finished)</p>\n<p>All just conjecture, but that'd explain the behaviour.</p>\n\n",
      "PostDate": "2017-08-18T15:58:38.6970453Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "085cbc80-c4e7-4d6a-a1cd-3903d0e6fc0d",
      "UserId": 319964,
      "Username": "GregC",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay, I've got it! I'm sure this isn't the most elegant solution, but I'll post it here because there's nothing worse than googling a solution in a forum and finding a thread where someone says they have it and doesn't post their solution ;)\r\n\r\nMy continue function looks like this:\r\n\r\n```\r\nif (game.continuepause = 0) {\r\n  game.continuepause = 2\r\n  Continue = NewStringList()\r\n  list add (Continue, \"Continue\")\r\n  ShowMenu (\"\", Continue, false) {\r\n  }\r\n}\r\n```\r\nI have a turn event to manage this. This turn event absolutely must 100% be the first one that runs or it won't work\r\n```\r\nif (game.continuepause = 2) {\r\n  game.ticking = false\r\n  game.continuepause = game.continuepause - 1\r\n}\r\nelse if (game.continuepause = 1) {\r\n  game.ticking = true\r\n  game.continuepause = 0\r\n}\r\nelse {\r\n}\r\n```\r\nAll of my other turnscripts need this statement around the whole thing\r\n```\r\nif (game.ticking = true) {\r\n}\r\n```\r\nNow I can just put\r\n```\r\nContinue\r\n```\r\nAnywhere I like in a turnscript and when it hits it the player will have an option to continue printed on screen, the game will pause in all respects until it is clicked, but the tick won't be advanced by this.\r\n\r\nThree problems:\r\n1. Having to do something to every turn script is annoying (but it's one if, so it's not a huge deal)\r\n2. The error catching for \"Two turn scripts wanted a continue at the same time\" is slightly suboptimal because the first continue is displayed not the second\r\n3. I'm pretty sure using the same continue function outside of a turnscript will screw with the ticker, so I need to do something slightly different if (for instance) I want to put this sort of pause into an object's verb script or something like that.\r\n\r\nThey're pretty minor issues though. Also thinking about it I can fix the second one by taking ShowMenu out of my continue function and put it into another event that goes at the end of the list and triggers if continuepause is 2",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay, I've got it! I'm sure this isn't the most elegant solution, but I'll post it here because there's nothing worse than googling a solution in a forum and finding a thread where someone says they have it and doesn't post their solution ;)</p>\n<p>My continue function looks like this:</p>\n<pre><code>if (game.continuepause = 0) {\n  game.continuepause = 2\n  Continue = NewStringList()\n  list add (Continue, \"Continue\")\n  ShowMenu (\"\", Continue, false) {\n  }\n}\n</code></pre>\n<p>I have a turn event to manage this. This turn event absolutely must 100% be the first one that runs or it won't work</p>\n<pre><code>if (game.continuepause = 2) {\n  game.ticking = false\n  game.continuepause = game.continuepause - 1\n}\nelse if (game.continuepause = 1) {\n  game.ticking = true\n  game.continuepause = 0\n}\nelse {\n}\n</code></pre>\n<p>All of my other turnscripts need this statement around the whole thing</p>\n<pre><code>if (game.ticking = true) {\n}\n</code></pre>\n<p>Now I can just put</p>\n<pre><code>Continue\n</code></pre>\n<p>Anywhere I like in a turnscript and when it hits it the player will have an option to continue printed on screen, the game will pause in all respects until it is clicked, but the tick won't be advanced by this.</p>\n<p>Three problems:</p>\n<ol>\n<li>Having to do something to every turn script is annoying (but it's one if, so it's not a huge deal)</li>\n<li>The error catching for \"Two turn scripts wanted a continue at the same time\" is slightly suboptimal because the first continue is displayed not the second</li>\n<li>I'm pretty sure using the same continue function outside of a turnscript will screw with the ticker, so I need to do something slightly different if (for instance) I want to put this sort of pause into an object's verb script or something like that.</li>\n</ol>\n<p>They're pretty minor issues though. Also thinking about it I can fix the second one by taking ShowMenu out of my continue function and put it into another event that goes at the end of the list and triggers if continuepause is 2</p>\n\n",
      "PostDate": "2017-08-18T16:15:29.4315272Z",
      "LastEditDate": "2017-08-18T16:20:41.2269231Z",
      "link": null
    },
    {
      "PostId": "1cd5ba1b-4a71-4dd7-a58b-bf2ab38de52c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "there's internal turns (which are a mystery to most people, but maybe Pixie or Pertex knows how the work / where are they in the underlying quest code), which occur upon any action (using the input command box: hitting enter in it, mouse click on a hypertext or menu option or Verb-Object button in the right pane).\r\n\r\nbut you can control what actions occur with the Turnscript through a conditional:\r\n\r\n```\r\n<turnscript name=\"global_turnscript\">\r\n  <enabled />\r\n  <script>\r\n    if (player.is_a_turn) {\r\n      // controlled actions\r\n    } else {\r\n      // controlled actions\r\n    }\r\n  </script>\r\n</turnscript>\r\n```\r\n\r\n------------\r\n\r\nbut, indeed you still got the problem with using the 'wait' Function with input....\r\n\r\nyou could maybe do this, by the way:\r\n\r\n```\r\nwait {\r\n  // to get capture and get rid of any lingering typed-in input:\r\n  get input {\r\n    result = null // you can do this to be sure the input is gone that was stored into 'result'\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>there's internal turns (which are a mystery to most people, but maybe Pixie or Pertex knows how the work / where are they in the underlying quest code), which occur upon any action (using the input command box: hitting enter in it, mouse click on a hypertext or menu option or Verb-Object button in the right pane).</p>\n<p>but you can control what actions occur with the Turnscript through a conditional:</p>\n<pre><code>&lt;turnscript name=\"global_turnscript\"&gt;\n  &lt;enabled /&gt;\n  &lt;script&gt;\n    if (player.is_a_turn) {\n      // controlled actions\n    } else {\n      // controlled actions\n    }\n  &lt;/script&gt;\n&lt;/turnscript&gt;\n</code></pre>\n<hr>\n<p>but, indeed you still got the problem with using the 'wait' Function with input....</p>\n<p>you could maybe do this, by the way:</p>\n<pre><code>wait {\n  // to get capture and get rid of any lingering typed-in input:\n  get input {\n    result = null // you can do this to be sure the input is gone that was stored into 'result'\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2017-08-18T16:57:53.6363446Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f074787d-cb78-4d56-9efe-cd4fddfa2ef5",
      "UserId": 319964,
      "Username": "GregC",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't think that's true, I think the above fairly conclusively demonstrates that the internal turns don't occur on any action, but instead that doing the action sets a flag which causes the turn to occur later (so the conditional turnscript doesn't behave as you'd expect because turn actions taken while the turnscript is disabled can still cause a turn if it's re-enabled before the flag is checked)",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't think that's true, I think the above fairly conclusively demonstrates that the internal turns don't occur on any action, but instead that doing the action sets a flag which causes the turn to occur later (so the conditional turnscript doesn't behave as you'd expect because turn actions taken while the turnscript is disabled can still cause a turn if it's re-enabled before the flag is checked)</p>\n\n",
      "PostDate": "2017-08-21T10:06:20.4185207Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7b64db13-5be7-4b3c-870f-70d531cee897",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Clicking a button or hyperlink just sends a command to Quest exactly as if the player typed a command.\r\n\r\nPart of processing a command is that at the end of it all enabled turnscripts are run using a function called RunAllTurnscripts I think.",
      "EditableFormat": "markdown",
      "HTML": "<p>Clicking a button or hyperlink just sends a command to Quest exactly as if the player typed a command.</p>\n<p>Part of processing a command is that at the end of it all enabled turnscripts are run using a function called RunAllTurnscripts I think.</p>\n\n",
      "PostDate": "2017-08-21T12:30:22.7123702Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "859c0ce3-594b-4ee1-979e-7affb7422b82",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details><summary> CLICK HERE to few the 'Finish turn' scripts. </summary>\r\n\r\nFinish turn:\r\n```\r\nRunTurnScripts\r\nUpdateStatusAttributes\r\nCheckDarkness\r\nUpdateObjectLinks\r\n```\r\n\r\nRunTurnScripts:\r\n```\r\nif (IsGameRunning()) {\r\n  if (game.menucallback = null) {\r\n    foreach (turnscript, AllTurnScripts()) {\r\n      if (GetBoolean(turnscript, \"enabled\")) {\r\n        inscope = false\r\n        if (turnscript.parent = game or turnscript.parent = null) {\r\n          inscope = true\r\n        }\r\n        else {\r\n          if (Contains(turnscript.parent, game.pov)) {\r\n            inscope = true\r\n          }\r\n        }\r\n        if (inscope) {\r\n          do (turnscript, \"script\")\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nUpdateStatusAttributes:\r\n```\r\nif (game.enablehyperlinks) {\r\n  data = NewStringDictionary()\r\n  foreach (object, ScopeVisible()) {\r\n    dictionary add (data, object.name, Join(GetDisplayVerbs(object), \"/\"))\r\n  }\r\n  JS.updateObjectLinks (data)\r\n  exits = NewStringList()\r\n  foreach (exit, ScopeExits()) {\r\n    list add (exits, exit.name)\r\n  }\r\n  JS.updateExitLinks (exits)\r\n  commands = NewStringList()\r\n  foreach (cmd, ScopeCommands()) {\r\n    list add (commands, cmd.name)\r\n  }\r\n  JS.updateCommandLinks (commands)\r\n}\r\n```\r\n\r\nCheckDarkness:\r\n```\r\nif (game.enablehyperlinks) {\r\n  data = NewStringDictionary()\r\n  foreach (object, ScopeVisible()) {\r\n    dictionary add (data, object.name, Join(GetDisplayVerbs(object), \"/\"))\r\n  }\r\n  JS.updateObjectLinks (data)\r\n  exits = NewStringList()\r\n  foreach (exit, ScopeExits()) {\r\n    list add (exits, exit.name)\r\n  }\r\n  JS.updateExitLinks (exits)\r\n  commands = NewStringList()\r\n  foreach (cmd, ScopeCommands()) {\r\n    list add (commands, cmd.name)\r\n  }\r\n  JS.updateCommandLinks (commands)\r\n}\r\n```\r\n\r\n\r\nUpdateObjectLinks:\r\n```\r\nif (game.enablehyperlinks) {\r\n  data = NewStringDictionary()\r\n  foreach (object, ScopeVisible()) {\r\n    dictionary add (data, object.name, Join(GetDisplayVerbs(object), \"/\"))\r\n  }\r\n  JS.updateObjectLinks (data)\r\n  exits = NewStringList()\r\n  foreach (exit, ScopeExits()) {\r\n    list add (exits, exit.name)\r\n  }\r\n  JS.updateExitLinks (exits)\r\n  commands = NewStringList()\r\n  foreach (cmd, ScopeCommands()) {\r\n    list add (commands, cmd.name)\r\n  }\r\n  JS.updateCommandLinks (commands)\r\n}\r\n```\r\n\r\n<details>",
      "EditableFormat": "markdown",
      "HTML": "<details><summary> CLICK HERE to few the 'Finish turn' scripts. </summary>\n<p>Finish turn:</p>\n<pre><code>RunTurnScripts\nUpdateStatusAttributes\nCheckDarkness\nUpdateObjectLinks\n</code></pre>\n<p>RunTurnScripts:</p>\n<pre><code>if (IsGameRunning()) {\n  if (game.menucallback = null) {\n    foreach (turnscript, AllTurnScripts()) {\n      if (GetBoolean(turnscript, \"enabled\")) {\n        inscope = false\n        if (turnscript.parent = game or turnscript.parent = null) {\n          inscope = true\n        }\n        else {\n          if (Contains(turnscript.parent, game.pov)) {\n            inscope = true\n          }\n        }\n        if (inscope) {\n          do (turnscript, \"script\")\n        }\n      }\n    }\n  }\n}\n</code></pre>\n<p>UpdateStatusAttributes:</p>\n<pre><code>if (game.enablehyperlinks) {\n  data = NewStringDictionary()\n  foreach (object, ScopeVisible()) {\n    dictionary add (data, object.name, Join(GetDisplayVerbs(object), \"/\"))\n  }\n  JS.updateObjectLinks (data)\n  exits = NewStringList()\n  foreach (exit, ScopeExits()) {\n    list add (exits, exit.name)\n  }\n  JS.updateExitLinks (exits)\n  commands = NewStringList()\n  foreach (cmd, ScopeCommands()) {\n    list add (commands, cmd.name)\n  }\n  JS.updateCommandLinks (commands)\n}\n</code></pre>\n<p>CheckDarkness:</p>\n<pre><code>if (game.enablehyperlinks) {\n  data = NewStringDictionary()\n  foreach (object, ScopeVisible()) {\n    dictionary add (data, object.name, Join(GetDisplayVerbs(object), \"/\"))\n  }\n  JS.updateObjectLinks (data)\n  exits = NewStringList()\n  foreach (exit, ScopeExits()) {\n    list add (exits, exit.name)\n  }\n  JS.updateExitLinks (exits)\n  commands = NewStringList()\n  foreach (cmd, ScopeCommands()) {\n    list add (commands, cmd.name)\n  }\n  JS.updateCommandLinks (commands)\n}\n</code></pre>\n<p>UpdateObjectLinks:</p>\n<pre><code>if (game.enablehyperlinks) {\n  data = NewStringDictionary()\n  foreach (object, ScopeVisible()) {\n    dictionary add (data, object.name, Join(GetDisplayVerbs(object), \"/\"))\n  }\n  JS.updateObjectLinks (data)\n  exits = NewStringList()\n  foreach (exit, ScopeExits()) {\n    list add (exits, exit.name)\n  }\n  JS.updateExitLinks (exits)\n  commands = NewStringList()\n  foreach (cmd, ScopeCommands()) {\n    list add (commands, cmd.name)\n  }\n  JS.updateCommandLinks (commands)\n}\n</code></pre>\n<details>\n\n</details></details>",
      "PostDate": "2017-08-21T17:07:05.1605809Z",
      "LastEditDate": "2017-08-21T17:43:43.0110257Z",
      "link": null
    },
    {
      "PostId": "78b7e6bc-59d3-4d88-9d38-be1277696b5b",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Make a function, then call it  under **else**, **otherwise**, or **default**.\r\n\r\n(I made a command to call the function, but you can call from whatever script you choose; a start script, room enter script, whatever.)\r\n\r\n---\r\n\r\n**Command pattern:**\r\n```test the loop```\r\n\r\n***Script:***\r\n```\r\nloopit\r\n```\r\n\r\n\r\n**FUNCTION:** ```loopit```\r\n```\r\nmsg (\"CLUE: the 7th letter<br/>\")\r\nPrintCentered (\"<b><u>PLEASE ENTER THE ANSWER NOW{notfirst:<br/><br/> (You must enter the correct response to proceed!)}</u></b><br/>\")\r\nget input {\r\n  switch (LCase(result)) {\r\n    case (\"g\") {\r\n      firsttime {\r\n        msg (\"You win!\")\r\n      }\r\n      otherwise {\r\n        msg (\"\\\"\" + result + \"\\\" is incorrect.<br>\")\r\n        msg (\"Try again.<br/>\")\r\n        loopit\r\n      }\r\n    }\r\n    default {\r\n      msg (\"\\\"\" + result + \"\\\" is incorrect.<br>\")\r\n      msg (\"Try again.<br/>\")\r\n      loopit\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n---\r\n># examplegame\r\n>\r\n>CLUE: the 7th letter\r\n>\r\n>PLEASE ENTER THE ANSWER NOW:\r\n>\r\n>\"a\" is incorrect.\r\n>\r\n>Try again.\r\n>\r\n>CLUE: the 7th letter\r\n>\r\n>PLEASE ENTER THE ANSWER NOW\r\n>\r\n>(You must enter the correct response to proceed!)\r\n>\r\n>\"b\" is incorrect.\r\n>\r\n>Try again.\r\n>\r\n>CLUE: the 7th letter\r\n>\r\n>PLEASE ENTER THE ANSWER NOW\r\n>\r\n>(You must enter the correct response to proceed!)\r\n>\r\n>\"c\" is incorrect.\r\n>\r\n>Try again.\r\n>\r\n>CLUE: the 7th letter\r\n>\r\n>PLEASE ENTER THE ANSWER NOW\r\n>\r\n>(You must enter the correct response to proceed!)\r\n>\r\n>\"d\" is incorrect.\r\n>\r\n>Try again.\r\n>\r\n>CLUE: the 7th letter\r\n>\r\n>PLEASE ENTER THE ANSWER NOW\r\n>\r\n>(You must enter the correct response to proceed!)\r\n>\r\n>You win!\r\nYou are in a room.\r\nYou can see a thing and a widget.\r\n\r\n---\r\nSample game:\r\n\r\nhttp://textadventures.co.uk/games/view/-rbpw1_as0o2v9aciyuwyg/you-must-press-g\r\n\r\n---\r\nNOTE:\r\n\r\nI just combined a script by HegemonKhan with a script by XanMag.",
      "EditableFormat": "markdown",
      "HTML": "<p>Make a function, then call it  under <strong>else</strong>, <strong>otherwise</strong>, or <strong>default</strong>.</p>\n<p>(I made a command to call the function, but you can call from whatever script you choose; a start script, room enter script, whatever.)</p>\n<hr>\n<p><strong>Command pattern:</strong><br>\n<code>test the loop</code></p>\n<p><strong><em>Script:</em></strong></p>\n<pre><code>loopit\n</code></pre>\n<p><strong>FUNCTION:</strong> <code>loopit</code></p>\n<pre><code>msg (\"CLUE: the 7th letter&lt;br/&gt;\")\nPrintCentered (\"&lt;b&gt;&lt;u&gt;PLEASE ENTER THE ANSWER NOW{notfirst:&lt;br/&gt;&lt;br/&gt; (You must enter the correct response to proceed!)}&lt;/u&gt;&lt;/b&gt;&lt;br/&gt;\")\nget input {\n  switch (LCase(result)) {\n    case (\"g\") {\n      firsttime {\n        msg (\"You win!\")\n      }\n      otherwise {\n        msg (\"\\\"\" + result + \"\\\" is incorrect.&lt;br&gt;\")\n        msg (\"Try again.&lt;br/&gt;\")\n        loopit\n      }\n    }\n    default {\n      msg (\"\\\"\" + result + \"\\\" is incorrect.&lt;br&gt;\")\n      msg (\"Try again.&lt;br/&gt;\")\n      loopit\n    }\n  }\n}\n</code></pre>\n<hr>\n<blockquote>\n<h1>examplegame</h1>\n<p>CLUE: the 7th letter</p>\n<p>PLEASE ENTER THE ANSWER NOW:</p>\n<p>\"a\" is incorrect.</p>\n<p>Try again.</p>\n<p>CLUE: the 7th letter</p>\n<p>PLEASE ENTER THE ANSWER NOW</p>\n<p>(You must enter the correct response to proceed!)</p>\n<p>\"b\" is incorrect.</p>\n<p>Try again.</p>\n<p>CLUE: the 7th letter</p>\n<p>PLEASE ENTER THE ANSWER NOW</p>\n<p>(You must enter the correct response to proceed!)</p>\n<p>\"c\" is incorrect.</p>\n<p>Try again.</p>\n<p>CLUE: the 7th letter</p>\n<p>PLEASE ENTER THE ANSWER NOW</p>\n<p>(You must enter the correct response to proceed!)</p>\n<p>\"d\" is incorrect.</p>\n<p>Try again.</p>\n<p>CLUE: the 7th letter</p>\n<p>PLEASE ENTER THE ANSWER NOW</p>\n<p>(You must enter the correct response to proceed!)</p>\n<p>You win!<br>\nYou are in a room.<br>\nYou can see a thing and a widget.</p>\n</blockquote>\n<hr>\n<p>Sample game:</p>\n<p>http://textadventures.co.uk/games/view/-rbpw1_as0o2v9aciyuwyg/you-must-press-g</p>\n<hr>\n<p>NOTE:</p>\n<p>I just combined a script by HegemonKhan with a script by XanMag.</p>\n\n",
      "PostDate": "2017-08-21T17:33:25.5700608Z",
      "LastEditDate": "2017-08-21T19:11:43.6015033Z",
      "link": null
    }
  ]
}
