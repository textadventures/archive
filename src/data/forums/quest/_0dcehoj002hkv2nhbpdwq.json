{
  "Topic": {
    "TopicId": "_0dcehoj002hkv2nhbpdwq",
    "ForumId": "10",
    "Title": "A Sensible Approach to a Self-Contained Vehicle (of Type Object/Room)",
    "LastUpdated": "2018-08-09T03:37:45.4987936Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "d9dc0eb3-9127-40e4-96ee-373ca788a37b",
      "UserId": 191294,
      "Username": "igokaskowitz",
      "AvatarUrl": "https://secure.gravatar.com/avatar/d0ac98fc6a765373d201854031d85fdc?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Good day.\r\nThe game I am developing involves making use of a Vehicle object to move distances that are described as too laborious to travel on foot.\r\nI have begun implementing the Vehicle as such:\r\n````\r\n<object name=\"car\">\r\n      <inherit name=\"switchable\" />\r\n      <linkcolour>DimGrey</linkcolour>\r\n      <alias>Car</alias>\r\n      <isroom />\r\n      <attr name=\"grid_fill\">SlateGray</attr>\r\n      <attr name=\"grid_label\">Car</attr>\r\n      <displayverbs type=\"stringlist\">\r\n        <value>Look At</value>\r\n        <value>Start</value>\r\n      </displayverbs>\r\n      <usestandardverblist />\r\n      <inventoryverbs type=\"stringlist\" />\r\n      <drop type=\"boolean\">false</drop>\r\n      <price type=\"int\">5000</price>\r\n      <look type=\"string\"></look>\r\n      <feature_switchable />\r\n      <cannotswitchon>You need the key.</cannotswitchon>\r\n      <grid_parent_offset_auto />\r\n      <dropdestination type=\"object\">car</dropdestination>\r\n      <start type=\"script\">\r\n        if (Contains (car.parent, player)) {\r\n          if (Contains (player, player_car_key)) {\r\n            this.switchedon = true\r\n            list add (car.displayverbs, \"Stop\")\r\n            list remove (car.displayverbs, \"Start\")\r\n            MoveObject (player_car_key, car)\r\n            PrintCentered (\"With a thrash and a dull hum your car surprisingly springs to life.\")\r\n          }\r\n          else {\r\n            msg (\"You need the key.\")\r\n          }\r\n        }\r\n      </start>\r\n      <stop type=\"script\">\r\n        if (Contains (car, player_car_key)) {\r\n          this.switchedon = false\r\n          list add (car.displayverbs, \"Start\")\r\n          list remove (car.displayverbs, \"Stop\")\r\n          MoveObject (player_car_key, player)\r\n          PrintCentered (\"We all tend towards zero energy, and so does your car. It seems relieved that you finally turned it off.\")\r\n        }\r\n      </stop>\r\n      <enter type=\"script\">\r\n      </enter>\r\n      <beforeenter type=\"script\">\r\n        this.visited = true\r\n      </beforeenter>\r\n      <exit name=\"out_car\" to=\"car\">\r\n        <lockmessage>Your car is locked.</lockmessage>\r\n        <runscript />\r\n        <attr name=\"grid_length\" type=\"int\">0</attr>\r\n        <script type=\"script\">\r\n          MoveObject (player, car.parent)\r\n        </script>\r\n      </exit>\r\n    </object>\r\n    <exit name=\"into_car\" alias=\"in\" to=\"car\">\r\n      <inherit name=\"indirection\" />\r\n      <lockmessage>Your car is locked.</lockmessage>\r\n    </exit>\r\n  </object>\r\n````\r\n\r\nIn-game, the functionality is a bit off.\r\nIdeally the player should not be able to start the car until they are inside, but currently they are able to start and stop the car only when they are outside of it.\r\nHow can I make it so that the **start** and **stop** verbs will display only when inside the car?\r\nWill this involve modifying the _display verbs_?\r\n\r\nThanks in advance,\r\nigo",
      "EditableFormat": "markdown",
      "HTML": "<p>Good day.<br>\nThe game I am developing involves making use of a Vehicle object to move distances that are described as too laborious to travel on foot.<br>\nI have begun implementing the Vehicle as such:</p>\n<pre><code>&lt;object name=\"car\"&gt;\n      &lt;inherit name=\"switchable\" /&gt;\n      &lt;linkcolour&gt;DimGrey&lt;/linkcolour&gt;\n      &lt;alias&gt;Car&lt;/alias&gt;\n      &lt;isroom /&gt;\n      &lt;attr name=\"grid_fill\"&gt;SlateGray&lt;/attr&gt;\n      &lt;attr name=\"grid_label\"&gt;Car&lt;/attr&gt;\n      &lt;displayverbs type=\"stringlist\"&gt;\n        &lt;value&gt;Look At&lt;/value&gt;\n        &lt;value&gt;Start&lt;/value&gt;\n      &lt;/displayverbs&gt;\n      &lt;usestandardverblist /&gt;\n      &lt;inventoryverbs type=\"stringlist\" /&gt;\n      &lt;drop type=\"boolean\"&gt;false&lt;/drop&gt;\n      &lt;price type=\"int\"&gt;5000&lt;/price&gt;\n      &lt;look type=\"string\"&gt;&lt;/look&gt;\n      &lt;feature_switchable /&gt;\n      &lt;cannotswitchon&gt;You need the key.&lt;/cannotswitchon&gt;\n      &lt;grid_parent_offset_auto /&gt;\n      &lt;dropdestination type=\"object\"&gt;car&lt;/dropdestination&gt;\n      &lt;start type=\"script\"&gt;\n        if (Contains (car.parent, player)) {\n          if (Contains (player, player_car_key)) {\n            this.switchedon = true\n            list add (car.displayverbs, \"Stop\")\n            list remove (car.displayverbs, \"Start\")\n            MoveObject (player_car_key, car)\n            PrintCentered (\"With a thrash and a dull hum your car surprisingly springs to life.\")\n          }\n          else {\n            msg (\"You need the key.\")\n          }\n        }\n      &lt;/start&gt;\n      &lt;stop type=\"script\"&gt;\n        if (Contains (car, player_car_key)) {\n          this.switchedon = false\n          list add (car.displayverbs, \"Start\")\n          list remove (car.displayverbs, \"Stop\")\n          MoveObject (player_car_key, player)\n          PrintCentered (\"We all tend towards zero energy, and so does your car. It seems relieved that you finally turned it off.\")\n        }\n      &lt;/stop&gt;\n      &lt;enter type=\"script\"&gt;\n      &lt;/enter&gt;\n      &lt;beforeenter type=\"script\"&gt;\n        this.visited = true\n      &lt;/beforeenter&gt;\n      &lt;exit name=\"out_car\" to=\"car\"&gt;\n        &lt;lockmessage&gt;Your car is locked.&lt;/lockmessage&gt;\n        &lt;runscript /&gt;\n        &lt;attr name=\"grid_length\" type=\"int\"&gt;0&lt;/attr&gt;\n        &lt;script type=\"script\"&gt;\n          MoveObject (player, car.parent)\n        &lt;/script&gt;\n      &lt;/exit&gt;\n    &lt;/object&gt;\n    &lt;exit name=\"into_car\" alias=\"in\" to=\"car\"&gt;\n      &lt;inherit name=\"indirection\" /&gt;\n      &lt;lockmessage&gt;Your car is locked.&lt;/lockmessage&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n</code></pre>\n<p>In-game, the functionality is a bit off.<br>\nIdeally the player should not be able to start the car until they are inside, but currently they are able to start and stop the car only when they are outside of it.<br>\nHow can I make it so that the <strong>start</strong> and <strong>stop</strong> verbs will display only when inside the car?<br>\nWill this involve modifying the <em>display verbs</em>?</p>\n<p>Thanks in advance,<br>\nigo</p>\n\n",
      "PostDate": "2018-08-09T03:37:45.4987936Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a86776d3-eb2f-47ef-a9cd-0d0183926029",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The problem here is that if you're inside the car, you can't see it.\r\n\r\nOne option would be to have an object with the alias 'car' that's inside the car. So you have one object for the outside of the car, and one object for the inside. The outside would have a description of the outside, and maybe a verb \"get in\" or something. The inside has a description of the inside of the car (or its 'look' script just does `ShowRoomDescription()`), and the start/stop verbs.\r\n\r\nYou might want to make the inside-of-car object a scenery object, so it doesn't show up on the 'places-and-objects' list, but have the description include \"I am in my {object:inside_car}.\" so that the player has somewhere to click on it.\r\n\r\n------\r\n\r\nFor one of my games, I approached this kind of thing differently, setting a backdrop scope script `list add (items, game.pov.parent)`. This means that you can use an object's verbs while inside it. If you want to go down that route, you could maybe modify `ShowRoomDescription()` to make the \"You are in\" line an object link. But then you'd probably be able to look at the room/object from inside, so you'd have to modify the lookat command so that if the object looked at contains the player, it shows the room description instead.",
      "EditableFormat": "markdown",
      "HTML": "<p>The problem here is that if you're inside the car, you can't see it.</p>\n<p>One option would be to have an object with the alias 'car' that's inside the car. So you have one object for the outside of the car, and one object for the inside. The outside would have a description of the outside, and maybe a verb \"get in\" or something. The inside has a description of the inside of the car (or its 'look' script just does <code>ShowRoomDescription()</code>), and the start/stop verbs.</p>\n<p>You might want to make the inside-of-car object a scenery object, so it doesn't show up on the 'places-and-objects' list, but have the description include \"I am in my {object:inside_car}.\" so that the player has somewhere to click on it.</p>\n<hr>\n<p>For one of my games, I approached this kind of thing differently, setting a backdrop scope script <code>list add (items, game.pov.parent)</code>. This means that you can use an object's verbs while inside it. If you want to go down that route, you could maybe modify <code>ShowRoomDescription()</code> to make the \"You are in\" line an object link. But then you'd probably be able to look at the room/object from inside, so you'd have to modify the lookat command so that if the object looked at contains the player, it shows the room description instead.</p>\n\n",
      "PostDate": "2018-08-09T08:28:22.3519607Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a21a8db9-7d82-4afc-97bf-882043490fce",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(initial WIP: work in progress, as this is a big/difficult challenge for me, but  good challenge-project for me too, but I'll need some time in trying to hopefully be able  to complete it at some point, but posting it here for now, if anyone wants some ideas from it)\r\n\r\n-----------------------------\r\n\r\n```\r\n<object name=\"airplane_object\">\r\n\r\n  <inherit name=\"closed_vehicle_type\" />\r\n\r\n</object>\r\n\r\n<object name=\"boat_object\">\r\n\r\n  <inherit name=\"open_vehicle_type\" />\r\n\r\n</object>\r\n\r\n<object name=\"train_object\">\r\n\r\n  <inherit name=\"closed_vehicle_type\" />\r\n\r\n</object>\r\n\r\n<object name=\"car_object\">\r\n\r\n  <inherit name=\"closed_vehicle_type\" />\r\n\r\n</object>\r\n\r\n<object name=\"motorcycle_object\">\r\n\r\n  <inherit name=\"open_vehicle_type\" />\r\n\r\n</object>\r\n\r\n<object name=\"bicycle_object\">\r\n\r\n  <inherit name=\"open_vehicle_type\" />\r\n\r\n</object>\r\n\r\n<type name=\"motorized_type\">\r\n\r\n  <attr name=\"ignition\" type=\"script\">\r\n    // requires (if want implementation of) correct 'key' item/Object (otherwise, the 'motorized_type' isn't needed, as you can just use the 'travel' Script Attribute of the 'vehicle_type' Object Type) \r\n  </attr>\r\n\r\n</type>\r\n\r\n<type name=\"closed_vehicle_type\">\r\n\r\n  <inherit name=\"container_closed\" />\r\n  <inherit name=\"container_lockable\" />\r\n\r\n  <inherit name=\"vehicle_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"open_vehicle_type\">\r\n\r\n  <inherit name=\"surface\" />\r\n\r\n  <inherit name=\"vehicle_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"vehicle_type\">\r\n\r\n  <attr name=\"embark\" type=\"script\">\r\n  </attr>\r\n\r\n  <attr name=\"disembark\" type=\"script\">\r\n  </attr>\r\n\r\n  <attr name=\"travel\" type=\"script\">\r\n  </attr>\r\n\r\n  <travel_objectlist_attribute type=\"objectlist\">\r\n  </travel_objectlist_attribute>\r\n\r\n</type>\r\n\r\n<verb name=\"ignition_verb\">\r\n\r\n  <property>ignition</property>\r\n  <pattern>ignition</pattern>\r\n\r\n</verb>\r\n\r\n<verb name=\"embark_verb\">\r\n\r\n  <property>embark</property>\r\n  <pattern>embark</pattern>\r\n\r\n</verb>\r\n\r\n<verb name=\"disembark_verb\">\r\n\r\n  <property>disembark</property>\r\n  <pattern>disembark</pattern>\r\n\r\n</verb>\r\n\r\n<verb name=\"travel_verb\">\r\n\r\n  <property>travel</property>\r\n\r\n  <pattern>travel</pattern>\r\n\r\n  <template>TEMPLATE</template>\r\n\r\n  <unresolved>That destination doesn't exist or isn't yet visited by you!</unresolved>\r\n\r\n  <response>You can't travel to that!</response>\r\n  \r\n  <script>\r\n    if (HasAttribute (this, \"travel_objectlist_attribute\")) {\r\n      if (DoesInherit (game.pov.parent, \"vehicle_type\")) {\r\n        game.pov_parent_object_attribute = game.pov.parent\r\n      } else {\r\n        game.pov_parent_object_attribute = game.pov\r\n      }\r\n      on ready {\r\n        if (ListContains (this.travel_objectlist_attribute, game.pov_parent_object_attribute.parent)) {\r\n          list remove (this.travel_objectlist_attribute, game.pov_parent_object_attribute.parent)\r\n        }\r\n        on ready {\r\n          game.scripting_parent_object_attribute = this\r\n          show menu (\"Destination?\", this.travel_objectlist_attribute, true) {\r\n            list add (game.scripting_parent_object_attribute.travel_objectlist_attribute, game.pov_parent_object_attribute.parent)\r\n            game.scripting_parent_object_attribute = null\r\n            if (not result = null) {\r\n              game.pov_parent_object_attribute.parent = result\r\n            }\r\n            on ready {\r\n              game.pov_parent_object_attribute = null // since this attribute is holding the reference/pointer to the 'game.pov' (which is itself a reference/point to the 'player' Object) or 'game.pov.parent' (which is itself a reference/point to the 'vehicle' Object), is this setting the, 'player' or 'vehicle', Object to null (deleting the Object? And/or worse, creating a: dangling pointer or memory leak, ??? Or does it not effect the stored address, aka: doesn't delete the Object, no dangling pointer nor memory leak, ???)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      msg (\"ERROR: the Object doesn't have required the 'travel_objectlist_attribute' Objectlist Attribute\")\r\n    }\r\n  </script>\r\n\r\n</verb>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(initial WIP: work in progress, as this is a big/difficult challenge for me, but  good challenge-project for me too, but I'll need some time in trying to hopefully be able  to complete it at some point, but posting it here for now, if anyone wants some ideas from it)</p>\n<hr>\n<pre><code>&lt;object name=\"airplane_object\"&gt;\n\n  &lt;inherit name=\"closed_vehicle_type\" /&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"boat_object\"&gt;\n\n  &lt;inherit name=\"open_vehicle_type\" /&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"train_object\"&gt;\n\n  &lt;inherit name=\"closed_vehicle_type\" /&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"car_object\"&gt;\n\n  &lt;inherit name=\"closed_vehicle_type\" /&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"motorcycle_object\"&gt;\n\n  &lt;inherit name=\"open_vehicle_type\" /&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"bicycle_object\"&gt;\n\n  &lt;inherit name=\"open_vehicle_type\" /&gt;\n\n&lt;/object&gt;\n\n&lt;type name=\"motorized_type\"&gt;\n\n  &lt;attr name=\"ignition\" type=\"script\"&gt;\n    // requires (if want implementation of) correct 'key' item/Object (otherwise, the 'motorized_type' isn't needed, as you can just use the 'travel' Script Attribute of the 'vehicle_type' Object Type) \n  &lt;/attr&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"closed_vehicle_type\"&gt;\n\n  &lt;inherit name=\"container_closed\" /&gt;\n  &lt;inherit name=\"container_lockable\" /&gt;\n\n  &lt;inherit name=\"vehicle_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"open_vehicle_type\"&gt;\n\n  &lt;inherit name=\"surface\" /&gt;\n\n  &lt;inherit name=\"vehicle_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"vehicle_type\"&gt;\n\n  &lt;attr name=\"embark\" type=\"script\"&gt;\n  &lt;/attr&gt;\n\n  &lt;attr name=\"disembark\" type=\"script\"&gt;\n  &lt;/attr&gt;\n\n  &lt;attr name=\"travel\" type=\"script\"&gt;\n  &lt;/attr&gt;\n\n  &lt;travel_objectlist_attribute type=\"objectlist\"&gt;\n  &lt;/travel_objectlist_attribute&gt;\n\n&lt;/type&gt;\n\n&lt;verb name=\"ignition_verb\"&gt;\n\n  &lt;property&gt;ignition&lt;/property&gt;\n  &lt;pattern&gt;ignition&lt;/pattern&gt;\n\n&lt;/verb&gt;\n\n&lt;verb name=\"embark_verb\"&gt;\n\n  &lt;property&gt;embark&lt;/property&gt;\n  &lt;pattern&gt;embark&lt;/pattern&gt;\n\n&lt;/verb&gt;\n\n&lt;verb name=\"disembark_verb\"&gt;\n\n  &lt;property&gt;disembark&lt;/property&gt;\n  &lt;pattern&gt;disembark&lt;/pattern&gt;\n\n&lt;/verb&gt;\n\n&lt;verb name=\"travel_verb\"&gt;\n\n  &lt;property&gt;travel&lt;/property&gt;\n\n  &lt;pattern&gt;travel&lt;/pattern&gt;\n\n  &lt;template&gt;TEMPLATE&lt;/template&gt;\n\n  &lt;unresolved&gt;That destination doesn't exist or isn't yet visited by you!&lt;/unresolved&gt;\n\n  &lt;response&gt;You can't travel to that!&lt;/response&gt;\n  \n  &lt;script&gt;\n    if (HasAttribute (this, \"travel_objectlist_attribute\")) {\n      if (DoesInherit (game.pov.parent, \"vehicle_type\")) {\n        game.pov_parent_object_attribute = game.pov.parent\n      } else {\n        game.pov_parent_object_attribute = game.pov\n      }\n      on ready {\n        if (ListContains (this.travel_objectlist_attribute, game.pov_parent_object_attribute.parent)) {\n          list remove (this.travel_objectlist_attribute, game.pov_parent_object_attribute.parent)\n        }\n        on ready {\n          game.scripting_parent_object_attribute = this\n          show menu (\"Destination?\", this.travel_objectlist_attribute, true) {\n            list add (game.scripting_parent_object_attribute.travel_objectlist_attribute, game.pov_parent_object_attribute.parent)\n            game.scripting_parent_object_attribute = null\n            if (not result = null) {\n              game.pov_parent_object_attribute.parent = result\n            }\n            on ready {\n              game.pov_parent_object_attribute = null // since this attribute is holding the reference/pointer to the 'game.pov' (which is itself a reference/point to the 'player' Object) or 'game.pov.parent' (which is itself a reference/point to the 'vehicle' Object), is this setting the, 'player' or 'vehicle', Object to null (deleting the Object? And/or worse, creating a: dangling pointer or memory leak, ??? Or does it not effect the stored address, aka: doesn't delete the Object, no dangling pointer nor memory leak, ???)\n            }\n          }\n        }\n      }\n    } else {\n      msg (\"ERROR: the Object doesn't have required the 'travel_objectlist_attribute' Objectlist Attribute\")\n    }\n  &lt;/script&gt;\n\n&lt;/verb&gt;\n</code></pre>\n\n",
      "PostDate": "2018-08-09T10:33:02.0489972Z",
      "LastEditDate": "2018-08-09T11:43:40.534615Z",
      "link": null
    },
    {
      "PostId": "002f0292-49b4-4a22-8242-c30664171f06",
      "UserId": 191294,
      "Username": "igokaskowitz",
      "AvatarUrl": "https://i.imgur.com/8TwQdNIb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is great. Thanks to both of you. \r\nI'll begin implementing @mrangel's solution.\r\n@hegemonkhan it was a pleasure to look at your code! I may experiment with aspects of yours in later attempts.",
      "EditableFormat": "markdown",
      "HTML": "<p>This is great. Thanks to both of you.<br>\nI'll begin implementing @mrangel's solution.<br>\n@hegemonkhan it was a pleasure to look at your code! I may experiment with aspects of yours in later attempts.</p>\n\n",
      "PostDate": "2018-08-09T19:31:12.8173354Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
