{
  "Topic": {
    "TopicId": "4084",
    "ForumId": "10",
    "Title": "Creating Folders",
    "LastUpdated": "2013-12-28T04:21:17+00:00",
    "ReplyCount": 2
  },
  "Posts": [
    {
      "PostId": "27275",
      "UserId": 0,
      "Username": "Spindraft",
      "UserAvatar": null,
      "UserGravatar": "9e77156c4fb2c5a0f50a75bc3f80367e",
      "EditableText": "Since I am still trying to learn how quest works with menus and such I am building my conversations using a series of flags, functions and commands (just getting started actually) and this looks like it is going to really pile up the file tree in the editor. Can I make files to store similar items right in the tree and then move items into these files or will this screw up the paths somehow?",
      "EditableFormat": "bbcode",
      "HTML": "Since I am still trying to learn how quest works with menus and such I am building my conversations using a series of flags, functions and commands (just getting started actually) and this looks like it is going to really pile up the file tree in the editor. Can I make files to store similar items right in the tree and then move items into these files or will this screw up the paths somehow?",
      "PostDate": "2013-12-27T23:56:38+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27276",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "yes, you can click and drag stuff directly in the &quot;tree of things&quot; within the GUI~Editor. For example:\n\nobjects\n-&gt; game\n-&gt;-&gt; verbs\n-&gt;-&gt; commands\n-&gt; room\n-&gt;-&gt; player\netc...\n\nlet's say I created another room: &quot;room_2&quot;, and I want the &quot;player&quot; to be in that new room instead of the default &quot;room&quot;:\n\nobjects\n-&gt; game\n-&gt;-&gt; verbs\n-&gt;-&gt; commands\n-&gt; room\n-&gt;-&gt; player\n-&gt; room_2\netc...\n\nyou can simply click on the &quot;player&quot;, holding down the button, and drag it over the &quot;room_2&quot;, letting go of the button, to drop it into the &quot;room_2&quot;, and now your &quot;player&quot; will start (barring any &quot;Move&quot; or &quot;Parent&quot; scripting, lol) in &quot;room_2&quot; instead of in the default &quot;room&quot;.\n\nobjects\n-&gt; game\n-&gt;-&gt; verbs\n-&gt;-&gt; commands\n-&gt; room\n-&gt; room_2\n-&gt;-&gt; player\netc...\n\n-----------------------------\n\nya, the scripting in the GUI~Editor gets really &quot;smushed&quot; against the right side quickly from the nesting lol, but you can open up the scripting to a code~text window within the GUI~Editor, there should be a (?parser?) button to do so. Or, you can just craft it in Code View mode (In-Code) too.\n\nto reduce this, one way is to break up your scripting~functions into smaller functions, for example:\n\n(and this can sometimes be a very good idea too, such as it allows for looping! ... it depends though in whether you want to break a big function into smaller functions or to keep it all as one big function, on what you're doing; depends on the situation)\n\n&lt;game name=&quot;blah&quot;&gt;\n-&gt; // blah scripts ~ code lines\n-&gt; &lt;start type=&quot;script&quot;&gt;\n-&gt;-&gt; character_creation_function\n-&gt; &lt;/start&gt;\n&lt;/game&gt;\n\n&lt;function name=&quot;character_creation_function&quot;&gt;\n-&gt; alias_character_creation_function\n-&gt; on ready {\n-&gt;-&gt; gender_character_creation_function\n-&gt;-&gt; on ready {\n-&gt;-&gt;-&gt; etc functions\n-&gt;-&gt; }\n-&gt; }\n&lt;/function&gt;\n\n&lt;function name=&quot;alias_character_creation_function&quot;&gt;\n-&gt; msg (&quot;What is your name?&quot;)\n-&gt; get input {\n-&gt;-&gt; game.pov.alias=result\n-&gt; }\n&lt;/function&gt;\n\n&lt;function name=&quot;gender_character_creation_function&quot;&gt;\n-&gt; show menu (&quot;What is your gender?&quot;, split (&quot;male;female&quot;,&quot;;&quot;), false) {\n-&gt;-&gt; game.pov.gender_string=result\n-&gt; }\n&lt;/function&gt;\n\n// etc functions\n\n-------------------------\n\nRead about &quot;libraries&quot;, though it's a bit complicated.\n\nThe Quest Game Engine~software itself is a bunch of &quot;Added&quot; Libraries (&quot;patched&quot; or &quot;expansion packs&quot; or &quot;add-ons&quot; or &quot;mods&quot; of code; have you ever played TES: Morrowind+ ??? Libraries work like adding &quot;mods&quot; for Morrowind anyways... I haven't played Oblivion, nor Skyrim, sadly... I hate being old, an adult, with work to do and not much money too, and no time for gaming like I had as a, kid, lol).\n\nLook inside your Quest Program Folder:\n\n*.aslx = a Game File' or a Library File's Name Extension\n\nGame File Taggings: &lt;asl version=&quot;540&quot;&gt;(your mass of game code, lol)&lt;/asl&gt;\nLibrary File Taggings: &lt;library&gt;(your mass of code)&lt;/library&gt;\n\nCore.aslx, CoreDescriptions.aslx,CoreEditor.aslx, etc Core____.aslx, English.aslx, German.aslx, etc Languages.aslx, and etc *.aslx\n\nnotice your two default included libraries:\n\nObjects\n-&gt; Game\n-&gt;-&gt; Verbs\n-&gt;-&gt; Commands\n-&gt; room\n-&gt;-&gt; player\nFunctions\nTimers\nWalkthrough\nAdvanced\n-&gt; [b:36osid6s]Libraries\n-&gt;-&gt; English.aslx\n-&gt;-&gt; Core.aslx[/b:36osid6s]\n-&gt; Object Types\n-&gt; JavaScript\n\nthese two libraries is literally the underlying quest game engine coding, and as best as I understand it, the &quot;core.aslx&quot; causes all of the many many other &quot;Core___.aslx&quot; Files to be initialized (used for the underlying game code), and the English (or whatever language).aslx also has some vital game code as well as setting what language the text is for your quest program.\n\nIn otherwords, Alex has constructed an extremely customizable game program. If you're a good coder, you can &quot;easily&quot; create your entire own text adventure game programming, from Alex's quest program.\n\nAlso, you can include as many libraries as you want, for example (Pixie's Libraries, as he's got tons of them for us to use, lol):\n\nPixie's &quot;Shop Library&quot;:\n\nAdd Pixie's shop library within the game:\n\nthe &quot;tree of things&quot; (within the GUI~Editor mode, the left side panel~window):\n\nObjects\n-&gt; Game\n-&gt;-&gt; Verbs\n-&gt;-&gt; Commands\n-&gt; room\n-&gt;-&gt; player\nFunctions\nTimers\nWalkthrough\nAdvanced\n-&gt; Libraries\n-&gt;-&gt; English.aslx\n-&gt;-&gt; Core.aslx\n-&gt;-&gt; [b:36osid6s]Shop.aslx[/b:36osid6s]\n-&gt; Object Types\n-&gt; JavaScript\n.\n.\n.\n.\nFilter -&gt; Show Library Elements -&gt; this reveals (toggle button of revealing~hiding) your libraries' contents~code as light-greyed text in your &quot;tree of things&quot;.\n\n---\n\nand also have Pixie's &quot;Shop.aslx&quot; Library File in the same Folder as the &quot;Quest.exe&quot; so that it can find and read~use the library file.\n\n-------------\n\nor, you can simply use a library file as a &quot;saved document&quot;, from which you can just open up and copy and paste the code you want from it, into your new game file (new game project) that you're working on.",
      "EditableFormat": "bbcode",
      "HTML": "yes, you can click and drag stuff directly in the &quot;tree of things&quot; within the GUI~Editor. For example:<br/><br/>objects<br/>-&gt; game<br/>-&gt;-&gt; verbs<br/>-&gt;-&gt; commands<br/>-&gt; room<br/>-&gt;-&gt; player<br/>etc...<br/><br/>let's say I created another room: &quot;room_2&quot;, and I want the &quot;player&quot; to be in that new room instead of the default &quot;room&quot;:<br/><br/>objects<br/>-&gt; game<br/>-&gt;-&gt; verbs<br/>-&gt;-&gt; commands<br/>-&gt; room<br/>-&gt;-&gt; player<br/>-&gt; room_2<br/>etc...<br/><br/>you can simply click on the &quot;player&quot;, holding down the button, and drag it over the &quot;room_2&quot;, letting go of the button, to drop it into the &quot;room_2&quot;, and now your &quot;player&quot; will start (barring any &quot;Move&quot; or &quot;Parent&quot; scripting, lol) in &quot;room_2&quot; instead of in the default &quot;room&quot;.<br/><br/>objects<br/>-&gt; game<br/>-&gt;-&gt; verbs<br/>-&gt;-&gt; commands<br/>-&gt; room<br/>-&gt; room_2<br/>-&gt;-&gt; player<br/>etc...<br/><br/>-----------------------------<br/><br/>ya, the scripting in the GUI~Editor gets really &quot;smushed&quot; against the right side quickly from the nesting lol, but you can open up the scripting to a code~text window within the GUI~Editor, there should be a (?parser?) button to do so. Or, you can just craft it in Code View mode (In-Code) too.<br/><br/>to reduce this, one way is to break up your scripting~functions into smaller functions, for example:<br/><br/>(and this can sometimes be a very good idea too, such as it allows for looping! ... it depends though in whether you want to break a big function into smaller functions or to keep it all as one big function, on what you're doing; depends on the situation)<br/><br/>&lt;game name=&quot;blah&quot;&gt;<br/>-&gt; // blah scripts ~ code lines<br/>-&gt; &lt;start type=&quot;script&quot;&gt;<br/>-&gt;-&gt; character_creation_function<br/>-&gt; &lt;/start&gt;<br/>&lt;/game&gt;<br/><br/>&lt;function name=&quot;character_creation_function&quot;&gt;<br/>-&gt; alias_character_creation_function<br/>-&gt; on ready {<br/>-&gt;-&gt; gender_character_creation_function<br/>-&gt;-&gt; on ready {<br/>-&gt;-&gt;-&gt; etc functions<br/>-&gt;-&gt; }<br/>-&gt; }<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;alias_character_creation_function&quot;&gt;<br/>-&gt; msg (&quot;What is your name?&quot;)<br/>-&gt; get input {<br/>-&gt;-&gt; game.pov.alias=result<br/>-&gt; }<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;gender_character_creation_function&quot;&gt;<br/>-&gt; show menu (&quot;What is your gender?&quot;, split (&quot;male;female&quot;,&quot;;&quot;), false) {<br/>-&gt;-&gt; game.pov.gender_string=result<br/>-&gt; }<br/>&lt;/function&gt;<br/><br/>// etc functions<br/><br/>-------------------------<br/><br/>Read about &quot;libraries&quot;, though it's a bit complicated.<br/><br/>The Quest Game Engine~software itself is a bunch of &quot;Added&quot; Libraries (&quot;patched&quot; or &quot;expansion packs&quot; or &quot;add-ons&quot; or &quot;mods&quot; of code; have you ever played TES: Morrowind+ ??? Libraries work like adding &quot;mods&quot; for Morrowind anyways... I haven't played Oblivion, nor Skyrim, sadly... I hate being old, an adult, with work to do and not much money too, and no time for gaming like I had as a, kid, lol).<br/><br/>Look inside your Quest Program Folder:<br/><br/>*.aslx = a Game File' or a Library File's Name Extension<br/><br/>Game File Taggings: &lt;asl version=&quot;540&quot;&gt;(your mass of game code, lol)&lt;/asl&gt;<br/>Library File Taggings: &lt;library&gt;(your mass of code)&lt;/library&gt;<br/><br/>Core.aslx, CoreDescriptions.aslx,CoreEditor.aslx, etc Core____.aslx, English.aslx, German.aslx, etc Languages.aslx, and etc *.aslx<br/><br/>notice your two default included libraries:<br/><br/>Objects<br/>-&gt; Game<br/>-&gt;-&gt; Verbs<br/>-&gt;-&gt; Commands<br/>-&gt; room<br/>-&gt;-&gt; player<br/>Functions<br/>Timers<br/>Walkthrough<br/>Advanced<br/>-&gt; <span style=\"font-weight:bold;\">Libraries<br/>-&gt;-&gt; English.aslx<br/>-&gt;-&gt; Core.aslx</span><br/>-&gt; Object Types<br/>-&gt; JavaScript<br/><br/>these two libraries is literally the underlying quest game engine coding, and as best as I understand it, the &quot;core.aslx&quot; causes all of the many many other &quot;Core___.aslx&quot; Files to be initialized (used for the underlying game code), and the English (or whatever language).aslx also has some vital game code as well as setting what language the text is for your quest program.<br/><br/>In otherwords, Alex has constructed an extremely customizable game program. If you're a good coder, you can &quot;easily&quot; create your entire own text adventure game programming, from Alex's quest program.<br/><br/>Also, you can include as many libraries as you want, for example (Pixie's Libraries, as he's got tons of them for us to use, lol):<br/><br/>Pixie's &quot;Shop Library&quot;:<br/><br/>Add Pixie's shop library within the game:<br/><br/>the &quot;tree of things&quot; (within the GUI~Editor mode, the left side panel~window):<br/><br/>Objects<br/>-&gt; Game<br/>-&gt;-&gt; Verbs<br/>-&gt;-&gt; Commands<br/>-&gt; room<br/>-&gt;-&gt; player<br/>Functions<br/>Timers<br/>Walkthrough<br/>Advanced<br/>-&gt; Libraries<br/>-&gt;-&gt; English.aslx<br/>-&gt;-&gt; Core.aslx<br/>-&gt;-&gt; <span style=\"font-weight:bold;\">Shop.aslx</span><br/>-&gt; Object Types<br/>-&gt; JavaScript<br/>.<br/>.<br/>.<br/>.<br/>Filter -&gt; Show Library Elements -&gt; this reveals (toggle button of revealing~hiding) your libraries' contents~code as light-greyed text in your &quot;tree of things&quot;.<br/><br/>---<br/><br/>and also have Pixie's &quot;Shop.aslx&quot; Library File in the same Folder as the &quot;Quest.exe&quot; so that it can find and read~use the library file.<br/><br/>-------------<br/><br/>or, you can simply use a library file as a &quot;saved document&quot;, from which you can just open up and copy and paste the code you want from it, into your new game file (new game project) that you're working on.",
      "PostDate": "2013-12-28T03:48:04+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27278",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "if you simply mean in-code ~ in-game-file organization:\n\nI see you quickly realized how cumbersome~bad the use of booleans~flags are... lol (unfortunately, they're so simple to use... sighs)\n\nA better design I have realized is to do this (using string lists or whatever list~dictionary):\n\n(though it involves understand of lists and~or dictionaries, which isn't noobie-friendly)\n\nGame Using As Booleans~Flags:\n\nwhile so simple to use and understand, they quickly pile up... you literally need a boolean for everything, lol\n\nTagging (&quot;Creation&quot;):\n\n&lt;object name=&quot;Object_Name&quot;&gt;\n-&gt; &lt;Attribute_Name type=&quot;Attribute_Type&quot;&gt;Attribute_Value&lt;/Attribute_Name&gt;\n&lt;/object&gt;\n\nScripting (&quot;Action&quot;):\n\nplayer.flying=false_or_true\nplayer.running=false_or_true\nplayer.swimming=false_or_true\nplayer.jumping=false_or_true\nplayer.sneaking=false_or_true\nmonster.dead=false_or_true\nplayer.poisoned=false_or_true\nplayer.blinded=false_or_true\nplayer.defending=false_or_true\nplayer.resting=false_or_true\nplayer.male_boolean=false_or_true\nplayer.female_boolean=false_or_true\netc etc etc\n\na better way is to use String Lists and Strings:\n\n(this is a bit advanced code design~organization though)\n\nTagging (&quot;Creation&quot;):\n\n[code:yfswqiv6]&lt;object name=&quot;player&quot;&gt;\n-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;\n-&gt; &lt;inherit name=&quot;editor_player&quot; /&gt;\n-&gt; &lt;locomotion_string_list type=&quot;simplestringlist&quot;&gt;walking;bipedal&lt;/locomotion_string_list&gt;\n-&gt; &lt;status_effect_string type=&quot;simplestringlist&quot;&gt;none&lt;/status_effect_string&gt;\n-&gt; &lt;gender_string type=&quot;string&quot;&gt;male&lt;/gender_string&gt;\n-&gt; etc etc etc\n&lt;/object&gt;\n\n&lt;object name=&quot;global_data_object&quot;&gt;\n-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;\n-&gt; &lt;locomotion_string_list type=&quot;simplestringlist&quot;&gt;walking;running;jumping;falling;flying;floating;swimming;jogging;crawling;climbing;gliding;bipedal;quadripedal&lt;/locomotion_string_list&gt;\n-&gt; &lt;status_effect_string_list type=&quot;simplestringlist&quot;&gt;poisoned;silenced;asleep;blinded;confused;stunned;petrified;paralyzed;cursed;blessed&lt;/status_effect_string_list&gt;\n&lt;/object&gt;\n-&gt; &lt;status_condition_string_list type=&quot;simplestringlist&quot;&gt;dead;healthy;wounded;unconcious;critically_wounded&lt;/status_condition_string_list&gt;\n-&gt; gender_string_list type=&quot;simplestringlist&quot;&gt;male;female&lt;/gender_string_list&gt;\n-&gt; etc etc etc\n&lt;/object&gt;[/code:yfswqiv6]\n\nScripting (&quot;Action&quot;):\n\n(an single example)\n\n// you just drank a &quot;flying_potion&quot;\nlist add (player.locomotion_string_list, &quot;flying&quot;)\n\n// you are trying to take a magical key floating high up in the air above you\nif (ListContains (player.locomation_string_list, &quot;flying&quot;) {\n-&gt; msg (&quot;Now being able to fly, you easily get the key&quot;)\n-&gt; key.parent = player\n} else {\n-&gt; msg (&quot;What?! Did you think you can fly?&quot;)\n}\n\n----------------\n\nand for organizing and~or storage (within the Game File or Library File), I've shown a great method above already, but here it is in detail:\n\n&quot;data objects&quot;\n\n[code:yfswqiv6]&lt;asl version=&quot;540&quot;&gt;\n\n  &lt;include ref=&quot;English&#46;aslx&quot;/&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot;/&gt;\n\n  &lt;game name=&quot;Testing Game Stuff&quot;&gt;\n    &lt;gameid&gt;d67ec73f-f879-4911-9d88-c02ea527c534&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n  &lt;/game&gt;\n\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n\n  &lt;object name=&quot;character_attribute_data_object&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n    &lt;strength_integer type=&quot;int&quot;&gt;0&lt;/strength_integer&gt;\n    &lt;endurance_integer type=&quot;int&quot;&gt;0&lt;/endurance_integer&gt;\n    &lt;dexterity_integer type=&quot;int&quot;&gt;0&lt;/dexterity_integer&gt;\n    &lt;agility_integer type=&quot;int&quot;&gt;0&lt;/agility_integer&gt;\n    &lt;speed_integer type=&quot;int&quot;&gt;0&lt;/speed_integer&gt;\n    &lt;piety_integer type=&quot;int&quot;&gt;0&lt;/piety_integer&gt;\n    &lt;intelligence_integer type=&quot;int&quot;&gt;0&lt;/intelligence_integer&gt;\n    &lt;spirituality_integer type=&quot;int&quot;&gt;0&lt;/spirituality_integer&gt;\n    &lt;mentality_integer type=&quot;int&quot;&gt;0&lt;/mentality_integer&gt;\n    &lt;luck_integer type=&quot;int&quot;&gt;0&lt;/luck_integer&gt;\n    &lt;perception_integer type=&quot;int&quot;&gt;0&lt;/perception_integer&gt;\n    &lt;personality_integer type=&quot;int&quot;&gt;0&lt;/personality_integer&gt;\n    &lt;charisma_integer type=&quot;int&quot;&gt;0&lt;/charisma_integer&gt;\n    &lt;leadership_integer type=&quot;int&quot;&gt;0&lt;/leadership_integer&gt;\n    &lt;alignment_integer type=&quot;int&quot;&gt;0&lt;/alignment_integer&gt;\n    &lt;level_integer type=&quot;int&quot;&gt;0&lt;/level_integer&gt;\n    &lt;experience_integer type=&quot;int&quot;&gt;0&lt;/experience_integer&gt;\n    &lt;cash_integer type=&quot;int&quot;&gt;0&lt;/cash_integer&gt;\n  &lt;/object&gt;\n\n  &lt;object name=&quot;date_and_time_data_object&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n    &lt;day_string type=&quot;string&quot;&gt;&lt;/day_string&gt;\n    &lt;month_string type=&quot;string&quot;&gt;&lt;/month_string&gt;\n    &lt;season_string type=&quot;string&quot;&gt;&lt;/season_string&gt;\n    &lt;second_integer type=&quot;int&quot;&gt;0&lt;/second_integer&gt;\n    &lt;minute_integer type=&quot;int&quot;&gt;0&lt;/minute_integer&gt;\n    &lt;hour_integer type=&quot;int&quot;&gt;0&lt;/hour_integer&gt;\n    &lt;day_integer type=&quot;int&quot;&gt;0&lt;/day_integer&gt;\n    &lt;week_integer type=&quot;int&quot;&gt;0&lt;/week_integer&gt;\n    &lt;month_integer type=&quot;int&quot;&gt;0&lt;/month_integer&gt;\n    &lt;year_integer type=&quot;int&quot;&gt;0&lt;/year_integer&gt;\n &lt;/object&gt;\n\n // etc &quot;Data Objects&quot;\n\n&lt;/asl&gt;[/code:yfswqiv6]\n\nand they can be used (in Scripting):\n\nif (date_and_time_data_object.month_string=&quot;january&quot;) {\n-&gt; msg (&quot;It is &quot; + date_and_time_data_object.month_string +&quot;.&quot;)\n// outputs~displays: It is january.\n}",
      "EditableFormat": "bbcode",
      "HTML": "if you simply mean in-code ~ in-game-file organization:<br/><br/>I see you quickly realized how cumbersome~bad the use of booleans~flags are... lol (unfortunately, they're so simple to use... sighs)<br/><br/>A better design I have realized is to do this (using string lists or whatever list~dictionary):<br/><br/>(though it involves understand of lists and~or dictionaries, which isn't noobie-friendly)<br/><br/>Game Using As Booleans~Flags:<br/><br/>while so simple to use and understand, they quickly pile up... you literally need a boolean for everything, lol<br/><br/>Tagging (&quot;Creation&quot;):<br/><br/>&lt;object name=&quot;Object_Name&quot;&gt;<br/>-&gt; &lt;Attribute_Name type=&quot;Attribute_Type&quot;&gt;Attribute_Value&lt;/Attribute_Name&gt;<br/>&lt;/object&gt;<br/><br/>Scripting (&quot;Action&quot;):<br/><br/>player.flying=false_or_true<br/>player.running=false_or_true<br/>player.swimming=false_or_true<br/>player.jumping=false_or_true<br/>player.sneaking=false_or_true<br/>monster.dead=false_or_true<br/>player.poisoned=false_or_true<br/>player.blinded=false_or_true<br/>player.defending=false_or_true<br/>player.resting=false_or_true<br/>player.male_boolean=false_or_true<br/>player.female_boolean=false_or_true<br/>etc etc etc<br/><br/>a better way is to use String Lists and Strings:<br/><br/>(this is a bit advanced code design~organization though)<br/><br/>Tagging (&quot;Creation&quot;):<br/><br/><pre><code>&lt;object name=&quot;player&quot;&gt;<br/>-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>-&gt; &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>-&gt; &lt;locomotion_string_list type=&quot;simplestringlist&quot;&gt;walking;bipedal&lt;/locomotion_string_list&gt;<br/>-&gt; &lt;status_effect_string type=&quot;simplestringlist&quot;&gt;none&lt;/status_effect_string&gt;<br/>-&gt; &lt;gender_string type=&quot;string&quot;&gt;male&lt;/gender_string&gt;<br/>-&gt; etc etc etc<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;global_data_object&quot;&gt;<br/>-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>-&gt; &lt;locomotion_string_list type=&quot;simplestringlist&quot;&gt;walking;running;jumping;falling;flying;floating;swimming;jogging;crawling;climbing;gliding;bipedal;quadripedal&lt;/locomotion_string_list&gt;<br/>-&gt; &lt;status_effect_string_list type=&quot;simplestringlist&quot;&gt;poisoned;silenced;asleep;blinded;confused;stunned;petrified;paralyzed;cursed;blessed&lt;/status_effect_string_list&gt;<br/>&lt;/object&gt;<br/>-&gt; &lt;status_condition_string_list type=&quot;simplestringlist&quot;&gt;dead;healthy;wounded;unconcious;critically_wounded&lt;/status_condition_string_list&gt;<br/>-&gt; gender_string_list type=&quot;simplestringlist&quot;&gt;male;female&lt;/gender_string_list&gt;<br/>-&gt; etc etc etc<br/>&lt;/object&gt;</code></pre><br/><br/>Scripting (&quot;Action&quot;):<br/><br/>(an single example)<br/><br/>// you just drank a &quot;flying_potion&quot;<br/>list add (player.locomotion_string_list, &quot;flying&quot;)<br/><br/>// you are trying to take a magical key floating high up in the air above you<br/>if (ListContains (player.locomation_string_list, &quot;flying&quot;) {<br/>-&gt; msg (&quot;Now being able to fly, you easily get the key&quot;)<br/>-&gt; key.parent = player<br/>} else {<br/>-&gt; msg (&quot;What?! Did you think you can fly?&quot;)<br/>}<br/><br/>----------------<br/><br/>and for organizing and~or storage (within the Game File or Library File), I've shown a great method above already, but here it is in detail:<br/><br/>&quot;data objects&quot;<br/><br/><pre><code>&lt;asl version=&quot;540&quot;&gt;<br/><br/>  &lt;include ref=&quot;English&#46;aslx&quot;/&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot;/&gt;<br/><br/>  &lt;game name=&quot;Testing Game Stuff&quot;&gt;<br/>    &lt;gameid&gt;d67ec73f-f879-4911-9d88-c02ea527c534&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;<br/>  &lt;/game&gt;<br/><br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/><br/>  &lt;object name=&quot;character_attribute_data_object&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>    &lt;strength_integer type=&quot;int&quot;&gt;0&lt;/strength_integer&gt;<br/>    &lt;endurance_integer type=&quot;int&quot;&gt;0&lt;/endurance_integer&gt;<br/>    &lt;dexterity_integer type=&quot;int&quot;&gt;0&lt;/dexterity_integer&gt;<br/>    &lt;agility_integer type=&quot;int&quot;&gt;0&lt;/agility_integer&gt;<br/>    &lt;speed_integer type=&quot;int&quot;&gt;0&lt;/speed_integer&gt;<br/>    &lt;piety_integer type=&quot;int&quot;&gt;0&lt;/piety_integer&gt;<br/>    &lt;intelligence_integer type=&quot;int&quot;&gt;0&lt;/intelligence_integer&gt;<br/>    &lt;spirituality_integer type=&quot;int&quot;&gt;0&lt;/spirituality_integer&gt;<br/>    &lt;mentality_integer type=&quot;int&quot;&gt;0&lt;/mentality_integer&gt;<br/>    &lt;luck_integer type=&quot;int&quot;&gt;0&lt;/luck_integer&gt;<br/>    &lt;perception_integer type=&quot;int&quot;&gt;0&lt;/perception_integer&gt;<br/>    &lt;personality_integer type=&quot;int&quot;&gt;0&lt;/personality_integer&gt;<br/>    &lt;charisma_integer type=&quot;int&quot;&gt;0&lt;/charisma_integer&gt;<br/>    &lt;leadership_integer type=&quot;int&quot;&gt;0&lt;/leadership_integer&gt;<br/>    &lt;alignment_integer type=&quot;int&quot;&gt;0&lt;/alignment_integer&gt;<br/>    &lt;level_integer type=&quot;int&quot;&gt;0&lt;/level_integer&gt;<br/>    &lt;experience_integer type=&quot;int&quot;&gt;0&lt;/experience_integer&gt;<br/>    &lt;cash_integer type=&quot;int&quot;&gt;0&lt;/cash_integer&gt;<br/>  &lt;/object&gt;<br/><br/>  &lt;object name=&quot;date_and_time_data_object&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>    &lt;day_string type=&quot;string&quot;&gt;&lt;/day_string&gt;<br/>    &lt;month_string type=&quot;string&quot;&gt;&lt;/month_string&gt;<br/>    &lt;season_string type=&quot;string&quot;&gt;&lt;/season_string&gt;<br/>    &lt;second_integer type=&quot;int&quot;&gt;0&lt;/second_integer&gt;<br/>    &lt;minute_integer type=&quot;int&quot;&gt;0&lt;/minute_integer&gt;<br/>    &lt;hour_integer type=&quot;int&quot;&gt;0&lt;/hour_integer&gt;<br/>    &lt;day_integer type=&quot;int&quot;&gt;0&lt;/day_integer&gt;<br/>    &lt;week_integer type=&quot;int&quot;&gt;0&lt;/week_integer&gt;<br/>    &lt;month_integer type=&quot;int&quot;&gt;0&lt;/month_integer&gt;<br/>    &lt;year_integer type=&quot;int&quot;&gt;0&lt;/year_integer&gt;<br/> &lt;/object&gt;<br/><br/> // etc &quot;Data Objects&quot;<br/><br/>&lt;/asl&gt;</code></pre><br/><br/>and they can be used (in Scripting):<br/><br/>if (date_and_time_data_object.month_string=&quot;january&quot;) {<br/>-&gt; msg (&quot;It is &quot; + date_and_time_data_object.month_string +&quot;.&quot;)<br/>// outputs~displays: It is january.<br/>",
      "PostDate": "2013-12-28T04:21:17+00:00",
      "LastEditDate": null
    }
  ]
}
