{
  "Topic": {
    "TopicId": "fyfy8gvtqekcr2f4t-cjfq",
    "ForumId": "10",
    "Title": "Turn off all inventory verbs?",
    "LastUpdated": "2021-04-15T03:55:43.7240085Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "449cb4b6-9aaa-4184-a43e-e6cd48d89bd4",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It depends what you want to do.\r\n\r\n<h2>1. If you want to remove the `inventoryverbs` attribute</h2>You could put a script in your start script:\r\n```\r\nforeach (object, AllObjects()) {\r\n  object.inventoryverbs = NewStringList()\r\n}\r\n```\r\nbut that won't stop it displaying generated verbs (the ones on the \"Verbs\" tab) for objects in the inventory.\r\n\r\n<h2>2. If you want to hide the verb buttons below the inventory pane in the sidebar</h2>\r\nYou could just remove them from the UI. In your UI Initialisation script, you'd put something like:\r\n```\r\nJS.eval(\"$('#inventoryAccordion .verbButtons').remove();\")\r\n```\r\nThis removes the verb buttons container from the inventory pane. This removes the *buttons* rather than the inventoryverbs, so there will still be a menu of verbs if the player clicks on an object link to an object in the inventory.\r\n\r\n<h2>3. If you want to hide all verbs for objects in the inventory <small>(for both the inventory pane and object links)</small></h2>\r\nThis method only works on the desktop editor, as you need to modify a line in one of the core functions:\r\n<pre><code>  &lt;function name=\"GetDisplayVerbs\" parameters=\"object\" type=\"stringlist\">\r\n    if (Contains(game.pov, object)) {\r\n      <b style=\"color: blue\">return (NewStringList())</b>\r\n    }\r\n    else {\r\n      baselist = object.displayverbs\r\n    }\r\n\r\n    if (not game.autodisplayverbs or GetBoolean(object, \"usestandardverblist\") or not HasAttribute(game, \"verbattributes\")) {\r\n      return (baselist)\r\n    }\r\n    else {\r\n      if (HasAttribute(object, \"generatedverbslist\")) {\r\n        verbs = object.generatedverbslist\r\n      }\r\n      else {\r\n        verbs = NewStringList()\r\n        foreach (attr, GetAttributeNames(object, false)) {\r\n          if (ListContains(game.verbattributes, attr)) {\r\n            cmd = ObjectDictionaryItem(game.verbattributeslookup, attr)\r\n            if (HasString(cmd, \"displayverb\")) {\r\n              displayverb = CapFirst(cmd.displayverb)\r\n            }\r\n            else {\r\n              displayverb = CapFirst(attr)\r\n            }\r\n            if (not ListContains(baselist, displayverb)) {\r\n              list add (verbs, displayverb)\r\n            }\r\n          }\r\n        }\r\n        object.generatedverbslist = verbs\r\n      }\r\n      if (GetBoolean(object, \"useindividualverblist\")) {\r\n        return (verbs)\r\n      }\r\n      else {\r\n        return (ListCombine(baselist, verbs))\r\n      }\r\n    }\r\n  &lt;/function></code></pre>\r\nThis is the function that Quest uses to determine which verbs to display for an object, checking all the different options for how verb lists are generated. Making it so that it returns an empty list for objects in the inventory at the start means that  no verb list will be displayed at all for inventory objects.\r\n\r\nIf this isn't quite what you need, I'm sure that it will be possibly to get what you want by modifying this function in some way. I'd be happy to help if you can explain in more detail what you need.",
      "EditableFormat": "markdown",
      "HTML": "<p>It depends what you want to do.</p>\n<p></p><h2>1. If you want to remove the <code>inventoryverbs</code> attribute</h2>You could put a script in your start script:<p></p>\n<pre><code>foreach (object, AllObjects()) {\n  object.inventoryverbs = NewStringList()\n}\n</code></pre>\n<p>but that won't stop it displaying generated verbs (the ones on the \"Verbs\" tab) for objects in the inventory.</p>\n<p></p><h2>2. If you want to hide the verb buttons below the inventory pane in the sidebar</h2><br>\nYou could just remove them from the UI. In your UI Initialisation script, you'd put something like:<p></p>\n<pre><code>JS.eval(\"$('#inventoryAccordion .verbButtons').remove();\")\n</code></pre>\n<p>This removes the verb buttons container from the inventory pane. This removes the <em>buttons</em> rather than the inventoryverbs, so there will still be a menu of verbs if the player clicks on an object link to an object in the inventory.</p>\n<p></p><h2>3. If you want to hide all verbs for objects in the inventory <small>(for both the inventory pane and object links)</small></h2><br>\nThis method only works on the desktop editor, as you need to modify a line in one of the core functions:<p></p>\n<pre><code>  &lt;function name=\"GetDisplayVerbs\" parameters=\"object\" type=\"stringlist\"&gt;\n    if (Contains(game.pov, object)) {\n      <b style=\"color: blue\">return (NewStringList())</b>\n    }\n    else {\n      baselist = object.displayverbs\n    }\n\n    if (not game.autodisplayverbs or GetBoolean(object, \"usestandardverblist\") or not HasAttribute(game, \"verbattributes\")) {\n      return (baselist)\n    }\n    else {\n      if (HasAttribute(object, \"generatedverbslist\")) {\n        verbs = object.generatedverbslist\n      }\n      else {\n        verbs = NewStringList()\n        foreach (attr, GetAttributeNames(object, false)) {\n          if (ListContains(game.verbattributes, attr)) {\n            cmd = ObjectDictionaryItem(game.verbattributeslookup, attr)\n            if (HasString(cmd, \"displayverb\")) {\n              displayverb = CapFirst(cmd.displayverb)\n            }\n            else {\n              displayverb = CapFirst(attr)\n            }\n            if (not ListContains(baselist, displayverb)) {\n              list add (verbs, displayverb)\n            }\n          }\n        }\n        object.generatedverbslist = verbs\n      }\n      if (GetBoolean(object, \"useindividualverblist\")) {\n        return (verbs)\n      }\n      else {\n        return (ListCombine(baselist, verbs))\n      }\n    }\n  &lt;/function&gt;</code></pre>\n<p>This is the function that Quest uses to determine which verbs to display for an object, checking all the different options for how verb lists are generated. Making it so that it returns an empty list for objects in the inventory at the start means that  no verb list will be displayed at all for inventory objects.</p>\n<p>If this isn't quite what you need, I'm sure that it will be possibly to get what you want by modifying this function in some way. I'd be happy to help if you can explain in more detail what you need.</p>\n\n",
      "PostDate": "2021-04-15T08:47:01.2057864Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
