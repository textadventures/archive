{
  "Topic": {
    "TopicId": "2339",
    "ForumId": "10",
    "Title": "Alex or others: Functions/Actions clarification please",
    "LastUpdated": "2010-12-04T16:55:50+00:00",
    "ReplyCount": 1
  },
  "Posts": [
    {
      "PostId": "17542",
      "UserId": 0,
      "Username": "sbangs",
      "UserAvatar": null,
      "UserGravatar": "b98d2093f74a032de5358b3e56ae46a9",
      "EditableText": "Hi Alex, you made the below comment in another thread I found in a search. I have some questions on those statements.\n\nA. Functions are useful if you want to re-use the same script in multiple places, or maybe just split your scripts up so they are smaller, more self-contained and therefore easier to edit. Actions are useful if you want different script for different objects. For example, when the player eats an apple, a different thing happens to when the player eats poison. You can create &quot;eat&quot; actions for the apple and the poison, and call these actions from an &quot;eat&quot; command.\n\nFunctions: re use the same script in multiple places (can you give an example?), what do you mean, split up your scripts (example)?\nActions: Ok using &quot;eat&quot; for diff results depending on eating and apple and poison. Can you explain how it differs or saves time using an action, verses just adding a &quot;eat&quot; verb to the object in question with the appropriate result? I mean, i guess I am always thinking I am using diff scripts for diff objects. Can you give an example I guess?\n\nThe more I read what I'm asking and what I'm reading, I think I am just asking for some good examples of these different &quot;methods&quot; of scripting.\n\nProcedures vs functions vs command vs actions and so on.\n\nThanks for your time and help.\n\nScott",
      "EditableFormat": "bbcode",
      "HTML": "Hi Alex, you made the below comment in another thread I found in a search. I have some questions on those statements.<br/><br/>A. Functions are useful if you want to re-use the same script in multiple places, or maybe just split your scripts up so they are smaller, more self-contained and therefore easier to edit. Actions are useful if you want different script for different objects. For example, when the player eats an apple, a different thing happens to when the player eats poison. You can create &quot;eat&quot; actions for the apple and the poison, and call these actions from an &quot;eat&quot; command.<br/><br/>Functions: re use the same script in multiple places (can you give an example?), what do you mean, split up your scripts (example)?<br/>Actions: Ok using &quot;eat&quot; for diff results depending on eating and apple and poison. Can you explain how it differs or saves time using an action, verses just adding a &quot;eat&quot; verb to the object in question with the appropriate result? I mean, i guess I am always thinking I am using diff scripts for diff objects. Can you give an example I guess?<br/><br/>The more I read what I'm asking and what I'm reading, I think I am just asking for some good examples of these different &quot;methods&quot; of scripting.<br/><br/>Procedures vs functions vs command vs actions and so on.<br/><br/>Thanks for your time and help.<br/><br/>Scott",
      "PostDate": "2010-12-04T07:56:41+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17546",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "Let's start with procedures first.\n\nIf you ever find yourself entering the same load of script commands in multiple places, you can make things easier for yourself by putting that script into a procedure. Then you can call that script from multiple places, and if you need to change it you only need to change it in the one place.\n\nProcedures are covered in section 12.6 of the tutorial. In that example, we use a procedure so that we don't have to repeat ourselves when we want to make &quot;use defibrillator&quot; do the same thing as &quot;use defibrillator on bob&quot;.\n\nWhat I mean by &quot;splitting up scripts&quot; is that if you have big series of nested &quot;if&quot; commands, you might want to split some of them out into procedures so that you don't have to open up loads of windows to get to the inner parts - you can just edit the procedure instead.\n\nA function is like a procedure, except that it returns a value. So instead of just calling the procedure somewhere, you can embed it in a &quot;print&quot; script. Functions are covered briefly in section 22.3 of the tutorial.\n\nRegarding actions, you're correct that in the simple case of eating apples and poison, you'd just add an &quot;eat&quot; verb to those objects. But actually by doing that you ARE creating an action! That's how verbs work internally. An &quot;eat&quot; verb looks for an &quot;eat&quot; action on an object, and runs it if it finds one.\n\nYou might set up an action manually if it's not something that would be directly done by a verb - maybe you can think of an action as being like a &quot;script verb&quot;. Maybe you have a timer, and after a while the food in your game decomposes. Then your timer can call the &quot;decompose&quot; action of various objects. So the apple has a &quot;decompose&quot; action that relates only to the apple, and you don't have to clutter up other parts of your game code - all the script that relates to the apple can be part of the apple definition.",
      "EditableFormat": "bbcode",
      "HTML": "Let's start with procedures first.<br/><br/>If you ever find yourself entering the same load of script commands in multiple places, you can make things easier for yourself by putting that script into a procedure. Then you can call that script from multiple places, and if you need to change it you only need to change it in the one place.<br/><br/>Procedures are covered in section 12.6 of the tutorial. In that example, we use a procedure so that we don't have to repeat ourselves when we want to make &quot;use defibrillator&quot; do the same thing as &quot;use defibrillator on bob&quot;.<br/><br/>What I mean by &quot;splitting up scripts&quot; is that if you have big series of nested &quot;if&quot; commands, you might want to split some of them out into procedures so that you don't have to open up loads of windows to get to the inner parts - you can just edit the procedure instead.<br/><br/>A function is like a procedure, except that it returns a value. So instead of just calling the procedure somewhere, you can embed it in a &quot;print&quot; script. Functions are covered briefly in section 22.3 of the tutorial.<br/><br/>Regarding actions, you're correct that in the simple case of eating apples and poison, you'd just add an &quot;eat&quot; verb to those objects. But actually by doing that you ARE creating an action! That's how verbs work internally. An &quot;eat&quot; verb looks for an &quot;eat&quot; action on an object, and runs it if it finds one.<br/><br/>You might set up an action manually if it's not something that would be directly done by a verb - maybe you can think of an action as being like a &quot;script verb&quot;. Maybe you have a timer, and after a while the food in your game decomposes. Then your timer can call the &quot;decompose&quot; action of various objects. So the apple has a &quot;decompose&quot; action that relates only to the apple, and you don't have to clutter up other parts of your game code - all the script that relates to the apple can be part of the apple definition.",
      "PostDate": "2010-12-04T16:55:50+00:00",
      "LastEditDate": null
    }
  ]
}
