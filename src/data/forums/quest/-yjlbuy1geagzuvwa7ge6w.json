{
  "Topic": {
    "TopicId": "-yjlbuy1geagzuvwa7ge6w",
    "ForumId": "10",
    "Title": "Creating rpg stats",
    "LastUpdated": "2018-08-24T14:22:31.3952264Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "3bc837db-2380-4e7f-b613-a211501562e2",
      "UserId": 373044,
      "Username": "LeftUnscarred",
      "AvatarUrl": "https://secure.gravatar.com/avatar/be5745cce4b8baf9a92118efdb619450?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "i am a complete and total noob when it comes to quest. i wan tot make rpg stats for combat like if your strength is so high u can wield a certain weapon and stats for armor to give protection when it comes to being damaged. i also want to make stats for like worldly thing like i have a trap that can be disarmed if u have a disarming stat of lets say 7 or higher i cant get the stats to work at all and i'm basically a complete noob when it comes to coding or using quest in general anyone have any ideas to help me?",
      "EditableFormat": "markdown",
      "HTML": "<p>i am a complete and total noob when it comes to quest. i wan tot make rpg stats for combat like if your strength is so high u can wield a certain weapon and stats for armor to give protection when it comes to being damaged. i also want to make stats for like worldly thing like i have a trap that can be disarmed if u have a disarming stat of lets say 7 or higher i cant get the stats to work at all and i'm basically a complete noob when it comes to coding or using quest in general anyone have any ideas to help me?</p>\n\n",
      "PostDate": "2018-08-24T14:22:31.3952264Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2093c149-19b4-44db-9362-12bd5ea9420b",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You sound like you are getting in a little over your head... But keep swimming, you will bet the hang of it...\r\n1) Strength stats and wielding different weapons:\r\nstart with: player.Str=10   For example.\r\nStats for weapons: (just str minimums)\r\nDagger: 8\r\nShort Sword: 12\r\nLong Sword: 15\r\n2-H Sword: 17\r\nBasterd Sword: 18\r\nWhen the player want to wield the weapon, check his strength...\r\nif (player.Str>weapon.Str) {\r\n// then you can use it\r\n  msg (\"You weild it.\") \r\n// or get more fancy with the wording... (preferred)\r\n}\r\n else {\r\n   msg (\"It is too heavy for you to use in combat.\")\r\n}\r\n So... the player can use the dagger, but not any of the swords.\r\n\r\nSo, the same with any other skills you need\r\n2. Traps:\r\nplayer.TrapSkill=3\r\nA simple trap may be 1-5\r\nHarder:5-10\r\nComplex:10+\r\n(Also, on a complex trap there could be several interlocking traps... IE: 2 or 3 traps that need to be disarmed to disarm the main trap)\r\nThen a simple compare like for the weapons...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>You sound like you are getting in a little over your head... But keep swimming, you will bet the hang of it...</p>\n<ol>\n<li>Strength stats and wielding different weapons:<br>\nstart with: player.Str=10   For example.<br>\nStats for weapons: (just str minimums)<br>\nDagger: 8<br>\nShort Sword: 12<br>\nLong Sword: 15<br>\n2-H Sword: 17<br>\nBasterd Sword: 18<br>\nWhen the player want to wield the weapon, check his strength...<br>\nif (player.Str&gt;weapon.Str) {<br>\n// then you can use it<br>\nmsg (\"You weild it.\")<br>\n// or get more fancy with the wording... (preferred)<br>\n}<br>\nelse {<br>\nmsg (\"It is too heavy for you to use in combat.\")<br>\n}<br>\nSo... the player can use the dagger, but not any of the swords.</li>\n</ol>\n<p>So, the same with any other skills you need</p>\n<ol start=\"2\">\n<li>Traps:<br>\nplayer.TrapSkill=3<br>\nA simple trap may be 1-5<br>\nHarder:5-10<br>\nComplex:10+<br>\n(Also, on a complex trap there could be several interlocking traps... IE: 2 or 3 traps that need to be disarmed to disarm the main trap)<br>\nThen a simple compare like for the weapons...</li>\n</ol>\n\n",
      "PostDate": "2018-08-24T20:21:01.4358284Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b1e22af8-3c34-457e-b268-bb113a526137",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You would go to the game start script. Or you would go to the player's attributes.\r\n\r\nplayer.hp = 25\r\nplayer.attack = 3\r\nplayer.defense = 2\r\nplayer.armour = 0\r\n\r\nAnd so on.",
      "EditableFormat": "markdown",
      "HTML": "<p>You would go to the game start script. Or you would go to the player's attributes.</p>\n<p>player.hp = 25<br>\nplayer.attack = 3<br>\nplayer.defense = 2<br>\nplayer.armour = 0</p>\n<p>And so on.</p>\n\n",
      "PostDate": "2018-08-25T01:12:56.0373635Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "67b50886-3339-46fb-b6ea-7b4bfacb62cd",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "90% of everything you want to do in your game, requires you to learn about:\r\n\r\n1. Attribute usage\r\n2. the 'if' Script usage\r\n\r\nthis is not easy to learn for first time (new to coding), but once you do, as stated already, it opens up 90% of everything that you want to have within your game\r\n\r\n--------\r\n\r\nhere's just a quick example:\r\n\r\n```\r\ncreate (\"animal\") // creates an 'animal' Object\r\n\r\nstring_list_variable = Split (\"lion;deer\", \";\") // creating a string list, as lists have items, and thus selection of those items\r\n\r\nanimal.type = StringListItem (string_list_variable, GetRandomInt (0,1)) // this selects one of the 2 (\"lion\" or \"deer\") items, and stores it in the 'type' String Attribute of the 'animal' Object\r\n\r\n// either:\r\n//\r\n// animal.type = \"lion\"\r\n// or\r\n// animal.type = \"deer\"\r\n\r\n// now, we check what type of animal, and have different events (in this example, the scripts are 'msg' Scripts which display their content/text/VARIABLES to the person playing the game) based upon what type the animal is:\r\n\r\nif (animal.type = \"lion\") {\r\n  msg (\"You run as fast as you can, and hope that you're faster than your buddy\")\r\n} else if (animal.type = \"deer\") {\r\n  msg (\"Ah, it's a cute deer, you get out your phone, and take pictures of it\")\r\n}\r\n```\r\n\r\n-----------------\r\n\r\nhere's a bunch of links/guides to help you get started with learning to use quest and to code with quest:\r\n\r\nhttp://textadventures.co.uk/forum/general/topic/ljjm32av4e2t9ot49k478g/help#710be61e-eae1-4af1-8363-520cc718ba1c\r\n\r\nspecifically, click on the 'hk attributes and if script guide' link and scroll down about halfway, looking for my 'the two super scripts' section, to get to the part on Attribute usage and then further down (to the end of the post of mine), for the part on the 'if' script usage\r\n\r\nyou may want to read the first part of the post, as I try to explain the terms and concepts involved, for a better understanding of all of this coding stuff.\r\n\r\nalso, you may want to first start with my ~ 'quest and code structure' link, as it helps with understanding quest's code structure, so you can directly put/write in code into your entire game code (if you learn this, it makes everything so much easier and faster, as well as being able to edit and/or troubleshoot any errors in your code, than in trying to use quest's GUI/Editor)\r\n\r\n-----------\r\n\r\nask if you need any help, about anything, or need anything explained further and/or better",
      "EditableFormat": "markdown",
      "HTML": "<p>90% of everything you want to do in your game, requires you to learn about:</p>\n<ol>\n<li>Attribute usage</li>\n<li>the 'if' Script usage</li>\n</ol>\n<p>this is not easy to learn for first time (new to coding), but once you do, as stated already, it opens up 90% of everything that you want to have within your game</p>\n<hr>\n<p>here's just a quick example:</p>\n<pre><code>create (\"animal\") // creates an 'animal' Object\n\nstring_list_variable = Split (\"lion;deer\", \";\") // creating a string list, as lists have items, and thus selection of those items\n\nanimal.type = StringListItem (string_list_variable, GetRandomInt (0,1)) // this selects one of the 2 (\"lion\" or \"deer\") items, and stores it in the 'type' String Attribute of the 'animal' Object\n\n// either:\n//\n// animal.type = \"lion\"\n// or\n// animal.type = \"deer\"\n\n// now, we check what type of animal, and have different events (in this example, the scripts are 'msg' Scripts which display their content/text/VARIABLES to the person playing the game) based upon what type the animal is:\n\nif (animal.type = \"lion\") {\n  msg (\"You run as fast as you can, and hope that you're faster than your buddy\")\n} else if (animal.type = \"deer\") {\n  msg (\"Ah, it's a cute deer, you get out your phone, and take pictures of it\")\n}\n</code></pre>\n<hr>\n<p>here's a bunch of links/guides to help you get started with learning to use quest and to code with quest:</p>\n<p>http://textadventures.co.uk/forum/general/topic/ljjm32av4e2t9ot49k478g/help#710be61e-eae1-4af1-8363-520cc718ba1c</p>\n<p>specifically, click on the 'hk attributes and if script guide' link and scroll down about halfway, looking for my 'the two super scripts' section, to get to the part on Attribute usage and then further down (to the end of the post of mine), for the part on the 'if' script usage</p>\n<p>you may want to read the first part of the post, as I try to explain the terms and concepts involved, for a better understanding of all of this coding stuff.</p>\n<p>also, you may want to first start with my ~ 'quest and code structure' link, as it helps with understanding quest's code structure, so you can directly put/write in code into your entire game code (if you learn this, it makes everything so much easier and faster, as well as being able to edit and/or troubleshoot any errors in your code, than in trying to use quest's GUI/Editor)</p>\n<hr>\n<p>ask if you need any help, about anything, or need anything explained further and/or better</p>\n\n",
      "PostDate": "2018-08-25T06:17:26.5854885Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1633ae55-5b1f-4d07-82ef-0fb4b7fb6425",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n(again, filler for getting my edited post, updated/posted)\r\n\r\n-----------------------\r\n\r\nhere's another quick example:\r\n\r\n```\r\ncreate (\"test\")\r\n\r\ntest.alias = \"test #1\"\r\n\r\ntest.score = GetRandomInt (0,100)\r\n\r\n// high to low checking:\r\n\r\nif (test.score > 89) {\r\n  test.grade = \"A\"\r\n} else if (test.score > 79) {\r\n  test.grade = \"B\"\r\n} else if (test.score > 69) {\r\n  test.grade = \"C\"\r\n} else if (test.score > 59) {\r\n  test.grade = \"D\"\r\n} else {\r\n  test.grade = \"F\"\r\n}\r\n\r\n// if you don't like the '-1' Value used in my example above (I like doing it this way, even though it's a bit more confusing, as it's less operations, I like being efficient with my code, if I can - within my limited coding ability, lol), you can do this too instead (it's the same as the above):\r\n\r\n// high to low checking: \r\n\r\nif (test.score >= 90) {\r\n  test.grade = \"A\"\r\n} else if (test.score >= 80) {\r\n  test.grade = \"B\"\r\n} else if (test.score >= 70) {\r\n  test.grade = \"C\"\r\n} else if (test.score >= 60) {\r\n  test.grade = \"D\"\r\n} else {\r\n  test.grade = \"F\"\r\n}\r\n\r\n// and... if you want/need to do...\r\n\r\n// low to high checking:\r\n\r\nif (test.score < 60) {\r\n  test.grade = \"F\"\r\n} else if (test.score < 70) {\r\n  test.grade = \"D\"\r\n} else if (test.score < 80) {\r\n  test.grade = \"C\"\r\n} else if (test.score < 90) {\r\n  test.grade = \"B\"\r\n} else {\r\n  test.grade = \"A\"\r\n}\r\n\r\nmsg (\"Test Name: \" + test.alias)\r\nmsg (\"Test Score: \" + test.score)\r\nmsg (\"Test Grade: \" + test.grade)\r\n\r\n// output/display:\r\n\r\nTest Name: test #1\r\nTest Score: [random selection of: 0 to 100]\r\nTest Grade: [depending upon score, will have corresponding letter grade of: A to F)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)<br>\n(again, filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>here's another quick example:</p>\n<pre><code>create (\"test\")\n\ntest.alias = \"test #1\"\n\ntest.score = GetRandomInt (0,100)\n\n// high to low checking:\n\nif (test.score &gt; 89) {\n  test.grade = \"A\"\n} else if (test.score &gt; 79) {\n  test.grade = \"B\"\n} else if (test.score &gt; 69) {\n  test.grade = \"C\"\n} else if (test.score &gt; 59) {\n  test.grade = \"D\"\n} else {\n  test.grade = \"F\"\n}\n\n// if you don't like the '-1' Value used in my example above (I like doing it this way, even though it's a bit more confusing, as it's less operations, I like being efficient with my code, if I can - within my limited coding ability, lol), you can do this too instead (it's the same as the above):\n\n// high to low checking: \n\nif (test.score &gt;= 90) {\n  test.grade = \"A\"\n} else if (test.score &gt;= 80) {\n  test.grade = \"B\"\n} else if (test.score &gt;= 70) {\n  test.grade = \"C\"\n} else if (test.score &gt;= 60) {\n  test.grade = \"D\"\n} else {\n  test.grade = \"F\"\n}\n\n// and... if you want/need to do...\n\n// low to high checking:\n\nif (test.score &lt; 60) {\n  test.grade = \"F\"\n} else if (test.score &lt; 70) {\n  test.grade = \"D\"\n} else if (test.score &lt; 80) {\n  test.grade = \"C\"\n} else if (test.score &lt; 90) {\n  test.grade = \"B\"\n} else {\n  test.grade = \"A\"\n}\n\nmsg (\"Test Name: \" + test.alias)\nmsg (\"Test Score: \" + test.score)\nmsg (\"Test Grade: \" + test.grade)\n\n// output/display:\n\nTest Name: test #1\nTest Score: [random selection of: 0 to 100]\nTest Grade: [depending upon score, will have corresponding letter grade of: A to F)\n</code></pre>\n\n",
      "PostDate": "2018-08-25T06:26:05.0798725Z",
      "LastEditDate": "2018-08-25T06:34:58.1775777Z",
      "link": null
    },
    {
      "PostId": "ac3d5541-caac-42ce-9679-16c5c6de3dc5",
      "UserId": 373044,
      "Username": "LeftUnscarred",
      "AvatarUrl": "https://secure.gravatar.com/avatar/be5745cce4b8baf9a92118efdb619450?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "DarkLizerd how would i code that to not let him be able to put it in his inventory then i got the stats runing for strength now but he can pick up  every object no matter if i set the strength to 0 or not and could i use the same thing in issueing damage to a npc cause im really trying to make a dnd themed game i have only got 1 race and class rn but i want to get the stats situated before i do more i also want to know how to be able to make a new race and class for a diffrent character story but i dont know how to change the variables of the character either\r\nim a total noob at this im sorry lol ",
      "EditableFormat": "markdown",
      "HTML": "<p>DarkLizerd how would i code that to not let him be able to put it in his inventory then i got the stats runing for strength now but he can pick up  every object no matter if i set the strength to 0 or not and could i use the same thing in issueing damage to a npc cause im really trying to make a dnd themed game i have only got 1 race and class rn but i want to get the stats situated before i do more i also want to know how to be able to make a new race and class for a diffrent character story but i dont know how to change the variables of the character either<br>\nim a total noob at this im sorry lol</p>\n\n",
      "PostDate": "2018-08-27T13:12:47.4924977Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f58d6125-3d37-4803-bef6-36319ec8eb5a",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Set a \"carry\" limit...\r\nplayer.CarryMax= player.Str*5    (or so, could be what you want...)\r\nand player.Carry is the total weight of everything you are carrying right now.\r\nThen, when the player picks something up:\r\nif (player.Carry + thing.weight> player.CarryMax) {\r\n  msg (\"You can't pick that up until you drop something else. \")\r\n}\r\nelse {\r\nplayer.Carry=player.Carry + thing.weight\r\n(then add it to your inventory)\r\n}\r\nThen when the player drops it:\r\nplayer.Carry=player.Carry - thing.weight\r\nthing.weight is the weight of the \"thing\" you are trying to pick-up...\r\nSo, picking up a sword it would be sword.weight, getting a shield, shield.weight…\r\nAltho, I think Quest may already have a lot of this already built in... But I'm not sure...\r\n\r\nAltho, the better Quest programmers here, would use a loop checking for the total weight of everything you are carrying...\r\nMy background is in Basic, so that is how I think... \r\nThere is also the combat.lib that has most of the combat details already worked out... (Not my creation, so I can't help you there.)\r\nYou are doing good working this out for one race and one class (for now). Once you get that worked out, adding races and classes (IF you got the basics right) should be a cakewalk...)\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Set a \"carry\" limit...<br>\nplayer.CarryMax= player.Str*5    (or so, could be what you want...)<br>\nand player.Carry is the total weight of everything you are carrying right now.<br>\nThen, when the player picks something up:<br>\nif (player.Carry + thing.weight&gt; player.CarryMax) {<br>\nmsg (\"You can't pick that up until you drop something else. \")<br>\n}<br>\nelse {<br>\nplayer.Carry=player.Carry + thing.weight<br>\n(then add it to your inventory)<br>\n}<br>\nThen when the player drops it:<br>\nplayer.Carry=player.Carry - thing.weight<br>\nthing.weight is the weight of the \"thing\" you are trying to pick-up...<br>\nSo, picking up a sword it would be sword.weight, getting a shield, shield.weight…<br>\nAltho, I think Quest may already have a lot of this already built in... But I'm not sure...</p>\n<p>Altho, the better Quest programmers here, would use a loop checking for the total weight of everything you are carrying...<br>\nMy background is in Basic, so that is how I think...<br>\nThere is also the combat.lib that has most of the combat details already worked out... (Not my creation, so I can't help you there.)<br>\nYou are doing good working this out for one race and one class (for now). Once you get that worked out, adding races and classes (IF you got the basics right) should be a cakewalk...)</p>\n\n",
      "PostDate": "2018-08-28T03:50:32.3811093Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e37b0c90-4261-430b-86cf-78f48c786537",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There's already a tickbox somewhere on the features tab for making weight limits. I think once you've enabled it, you'd need to set the player's maxvolume to something based on their strength. For example, after modifying the player's strength, you could have the line:\r\n`game.pov.maxvolume = game.pov.strength * 5`.\r\n\r\nThere's no need to write code that replicates what the game already does.\r\n\r\nHowever, it seems to me the OP was asking more about limiting which objects the player can pick up. So you can't pick up any object heavier than your strength, separate from your maximum encumbrance.\r\nFor that, you would either have to put a 'take' script on every object, or modify the core function `DoTake`. Or, an alternative might be to create a turnscript:\r\n```\r\nforeach (object, ScopeReachableInventory()) {\r\n  if (HasInt (object, \"required_strength\")) {\r\n    if (object.required_strength > game.pov.strength) {\r\n      msg (\"You are not strong enough to carry \"+GetDisplayName(object)+\". You drop it.\")\r\n      if (GetBoolean (object, \"worn\")) {\r\n        RemoveGarment (object)\r\n      }\r\n      DoDrop(object)\r\n    }\r\n  }\r\n}\r\n```\r\nPutting this in a turnscript means that you can pick up a too-heavy object but will immediately drop it again. It may behave oddly in some cases, though. What happens if a curse reduces the player's strength? This script will make them immediately drop items that are now too heavy… but in the case of cursed objects that can't be dropped, it might say \"You drop it\" and then not actually do so. How would you want it to behave in that case?",
      "EditableFormat": "markdown",
      "HTML": "<p>There's already a tickbox somewhere on the features tab for making weight limits. I think once you've enabled it, you'd need to set the player's maxvolume to something based on their strength. For example, after modifying the player's strength, you could have the line:<br>\n<code>game.pov.maxvolume = game.pov.strength * 5</code>.</p>\n<p>There's no need to write code that replicates what the game already does.</p>\n<p>However, it seems to me the OP was asking more about limiting which objects the player can pick up. So you can't pick up any object heavier than your strength, separate from your maximum encumbrance.<br>\nFor that, you would either have to put a 'take' script on every object, or modify the core function <code>DoTake</code>. Or, an alternative might be to create a turnscript:</p>\n<pre><code>foreach (object, ScopeReachableInventory()) {\n  if (HasInt (object, \"required_strength\")) {\n    if (object.required_strength &gt; game.pov.strength) {\n      msg (\"You are not strong enough to carry \"+GetDisplayName(object)+\". You drop it.\")\n      if (GetBoolean (object, \"worn\")) {\n        RemoveGarment (object)\n      }\n      DoDrop(object)\n    }\n  }\n}\n</code></pre>\n<p>Putting this in a turnscript means that you can pick up a too-heavy object but will immediately drop it again. It may behave oddly in some cases, though. What happens if a curse reduces the player's strength? This script will make them immediately drop items that are now too heavy… but in the case of cursed objects that can't be dropped, it might say \"You drop it\" and then not actually do so. How would you want it to behave in that case?</p>\n\n",
      "PostDate": "2018-08-28T07:36:41.8739157Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c05e5c44-3930-4f55-8ebc-145bfcadb27e",
      "UserId": 373044,
      "Username": "LeftUnscarred",
      "AvatarUrl": "https://secure.gravatar.com/avatar/be5745cce4b8baf9a92118efdb619450?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "mrangel i would want it to maybe say that u try to drop this object but it wont let youmaybe even cause damage to happen scince your cursed im gonna try to work on getting the weight/strength thing working before i worry about that as i have no cursed objects in play now i need to find out how to code a npc health in so i dont one shot them with my dagger  \r\nive been using if statements alot to kill someone like when i want tot kill someone i make a ver to attack the person and its like       if object is visible then require object \"knife\" and say a mesege he has been killed, and make that object invisible so he cant be killed again\r\n\r\nrecently i have made a room i call a trash can that instead of making the object invisible i move them to the trashcan room but i still 1 shot all the creatures i create and i would like a turned based thing so they can attack back\r\nright now i have it set that      if object is in room then deal 1 damage to player      for the turn script in the room but i would like to make that vary and i want to stop 1 shoting all the creatures and give them a heath bar that is noticible to the other player so they know when the creature is dead i also want to see about why i cant use the object when equipped it changes the name of the object to include worn in the name but i cant get the item to work when i try to use it on the creature that way is there a nother way i can code an attack on that creature",
      "EditableFormat": "markdown",
      "HTML": "<p>mrangel i would want it to maybe say that u try to drop this object but it wont let youmaybe even cause damage to happen scince your cursed im gonna try to work on getting the weight/strength thing working before i worry about that as i have no cursed objects in play now i need to find out how to code a npc health in so i dont one shot them with my dagger<br>\nive been using if statements alot to kill someone like when i want tot kill someone i make a ver to attack the person and its like       if object is visible then require object \"knife\" and say a mesege he has been killed, and make that object invisible so he cant be killed again</p>\n<p>recently i have made a room i call a trash can that instead of making the object invisible i move them to the trashcan room but i still 1 shot all the creatures i create and i would like a turned based thing so they can attack back<br>\nright now i have it set that      if object is in room then deal 1 damage to player      for the turn script in the room but i would like to make that vary and i want to stop 1 shoting all the creatures and give them a heath bar that is noticible to the other player so they know when the creature is dead i also want to see about why i cant use the object when equipped it changes the name of the object to include worn in the name but i cant get the item to work when i try to use it on the creature that way is there a nother way i can code an attack on that creature</p>\n\n",
      "PostDate": "2018-08-28T12:10:25.969882Z",
      "LastEditDate": "2018-08-28T12:23:14.4290074Z",
      "link": null
    },
    {
      "PostId": "f61bb30e-58f5-4294-b0e0-fe52b57148e5",
      "UserId": 373044,
      "Username": "LeftUnscarred",
      "AvatarUrl": "https://secure.gravatar.com/avatar/be5745cce4b8baf9a92118efdb619450?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "now when i try to go in the game and pick up the object i get the error code\r\n\r\nError running script: Error compiling expression 'player.strength = >3': SyntaxError: Unexpected token \">\"; expected one of \"-\", <INTEGER>, <REAL>, <STRING_LITERAL>, \"True\", \"False\", <HEX_LITERAL>, <CHAR_LITERAL>, \"null\", <DATETIME>, <TIMESPAN>, \"(\", <IDENTIFIER>, \"if\", or \"cast\"Line: 1, Column: 27\r\n\r\ni cant find a way to fix that i have my strength set to 10 and the dagger set to 3 did i set it wrong i used the \r\n\r\nplayer attribute equals(>3) \r\n\r\ndid i code that wrong i couldnt find a way to have it greater then or equal to so i typed in the grater then sign was that wrong",
      "EditableFormat": "markdown",
      "HTML": "<p>now when i try to go in the game and pick up the object i get the error code</p>\n<p>Error running script: Error compiling expression 'player.strength = &gt;3': SyntaxError: Unexpected token \"&gt;\"; expected one of \"-\", </p>\n<p>i cant find a way to fix that i have my strength set to 10 and the dagger set to 3 did i set it wrong i used the</p>\n<p>player attribute equals(&gt;3)</p>\n<p>did i code that wrong i couldnt find a way to have it greater then or equal to so i typed in the grater then sign was that wrong</p>\n\n",
      "PostDate": "2018-08-28T12:42:51.0785959Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3cd2db73-6468-492b-aac9-64544c30457c",
      "UserId": 373044,
      "Username": "LeftUnscarred",
      "AvatarUrl": "https://secure.gravatar.com/avatar/be5745cce4b8baf9a92118efdb619450?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ok i tried to run it as an expression but i got the error code \r\n\r\nError running script: Error compiling expression 'player.str>dagger.str':  CompareElement: Operation Greaterthan' is not defined for types 'Object' and  'Object'\r\n\r\nwhats wrong now\r\n\r\n\r\n\r\nedited\r\n\r\nok i see what i did wrong there i didnt give the full atribbute name\r\ni still need help with the first post i made today tho",
      "EditableFormat": "markdown",
      "HTML": "<p>ok i tried to run it as an expression but i got the error code</p>\n<p>Error running script: Error compiling expression 'player.str&gt;dagger.str':  CompareElement: Operation Greaterthan' is not defined for types 'Object' and  'Object'</p>\n<p>whats wrong now</p>\n<p>edited</p>\n<p>ok i see what i did wrong there i didnt give the full atribbute name<br>\ni still need help with the first post i made today tho</p>\n\n",
      "PostDate": "2018-08-28T13:10:51.2429072Z",
      "LastEditDate": "2018-08-28T13:22:18.3981603Z",
      "link": null
    },
    {
      "PostId": "4965589d-1ee4-4832-a1dc-2c5be23f57f8",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> recently i have made a room i call a trash can that instead of making the object invisible i move them to the trashcan room\r\n\r\nThis seems to be pretty common.\r\nMy preferred method is to move an object to `null` (outside of any room) - this is what the `RemoveObject` function actually does. If you have a lot of objects (especially if you're cloning them) this can end up making save files pretty large, as the stats of all the removed objects are still saved every time. But it means that if you remove an object and want it back, you can just move it back into a valid room.\r\n\r\nWith regard to combat, and calculating heath for monsters, I think someone else asked about that fairly recently. I posted some code off the top of my head, but haven't tested it properly myself yet.\r\n\r\nBut what you really need to master is using functions.\r\nYou want to make a function called `DoAttack` or similar which takes 2 parameters; an attacker and a target. You can use the stats of the attacker and target to work out what the chance of hitting is, roll dice, work out the amount of damage dealt, and subtract that from the target's \"health\" attribute.\r\n\r\nYour attack command will probably end up calling `DoAttack (player, object)`; and the turnscript to make enemies attack would call `DoAttack (enemy, player)`.\r\nIt's best to put things like this in a function, because then if you decide to change the mechanics, you only need to change them in one place. It also means that if the player decides to attack an ally, or if you later have monsters that might fight each other, it becomes a whole lot easier. This does, however, mean that the player and monsters should probably have the same attributes to represent statistics and health.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>recently i have made a room i call a trash can that instead of making the object invisible i move them to the trashcan room</p>\n</blockquote>\n<p>This seems to be pretty common.<br>\nMy preferred method is to move an object to <code>null</code> (outside of any room) - this is what the <code>RemoveObject</code> function actually does. If you have a lot of objects (especially if you're cloning them) this can end up making save files pretty large, as the stats of all the removed objects are still saved every time. But it means that if you remove an object and want it back, you can just move it back into a valid room.</p>\n<p>With regard to combat, and calculating heath for monsters, I think someone else asked about that fairly recently. I posted some code off the top of my head, but haven't tested it properly myself yet.</p>\n<p>But what you really need to master is using functions.<br>\nYou want to make a function called <code>DoAttack</code> or similar which takes 2 parameters; an attacker and a target. You can use the stats of the attacker and target to work out what the chance of hitting is, roll dice, work out the amount of damage dealt, and subtract that from the target's \"health\" attribute.</p>\n<p>Your attack command will probably end up calling <code>DoAttack (player, object)</code>; and the turnscript to make enemies attack would call <code>DoAttack (enemy, player)</code>.<br>\nIt's best to put things like this in a function, because then if you decide to change the mechanics, you only need to change them in one place. It also means that if the player decides to attack an ally, or if you later have monsters that might fight each other, it becomes a whole lot easier. This does, however, mean that the player and monsters should probably have the same attributes to represent statistics and health.</p>\n\n",
      "PostDate": "2018-08-28T19:39:53.554198Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "130df024-6aae-4f44-8463-f8d3f89dce8a",
      "UserId": 373044,
      "Username": "LeftUnscarred",
      "AvatarUrl": "https://secure.gravatar.com/avatar/be5745cce4b8baf9a92118efdb619450?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "lol ummmm mrangel im a noob i have o clue what u said can u lead me step by step srry i get the feeling im an idiot at this",
      "EditableFormat": "markdown",
      "HTML": "<p>lol ummmm mrangel im a noob i have o clue what u said can u lead me step by step srry i get the feeling im an idiot at this</p>\n\n",
      "PostDate": "2018-08-28T23:28:42.4773744Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "698ba044-e5b1-41f2-b008-1cb77f856582",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n\r\n-------------------------\r\n\r\n@ Left Unscarred:\r\n\r\nyou're asking for doing some complex/advanced stuff (combat/RPG-stat-handling/skill-checking), which is going to be difficult for us to help you (and it forces us to create your game for you as you don't know how to apply our help on your own), when you don't even know the basics for doing this stuff:\r\n\r\n1. Attribute usage\r\n2. the 'if' Script usage\r\n\r\nwhich, especially together, will enable you, yourself (and with some minor help from us), to do all of this stuff that you want to do in your game\r\n\r\n------\r\n\r\nI'd suggest you first learn about using Attributes, and then, in using them, with the 'if' Script, in learning to use the the 'if' Script\r\n\r\nit's not easy to learn this stuff for the very first time, but in learning this stuff, it opens up 90% of everything that you want to do within your game\r\n\r\n-----\r\n\r\nI have some links for helping with this stuff, here:\r\n\r\nhttp://textadventures.co.uk/forum/general/topic/ljjm32av4e2t9ot49k478g/help#710be61e-eae1-4af1-8363-520cc718ba1c\r\n\r\nspecifically, check out my 'hk attribute and if script guide' link (and scroll down past the first half as this just explains the basics of coding, though you should read this too, along with the other link 'quest structure and coding basics' too, to get to the rest of the post on using Attributes and then the 'if' Script)\r\n\r\n----------------\r\n\r\nalso, here's a step by step walkthrough demo game guide to learning to use Attributes (including the built-in 'statusattributes' String Dictionary Attributes):\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/5387/i-really-need-help#37375\r\n\r\n---------\r\n\r\nHK edit:\r\n\r\nhere's another link that helps with the coding basics (quest code structure and its coding basics, Attribute usage, and the if' script usage):\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/mu7itzjqv0yxrkdwgsbmzg/how-to-make-npc-confront-you-with-chioces#46cdb25b-4767-40a6-8bf4-3cd84e805781\r\n\r\n--------\r\n\r\ntry to follow and learn from these links, and ask us for help as you get stuck or need help with something or need something more or better explained",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>@ Left Unscarred:</p>\n<p>you're asking for doing some complex/advanced stuff (combat/RPG-stat-handling/skill-checking), which is going to be difficult for us to help you (and it forces us to create your game for you as you don't know how to apply our help on your own), when you don't even know the basics for doing this stuff:</p>\n<ol>\n<li>Attribute usage</li>\n<li>the 'if' Script usage</li>\n</ol>\n<p>which, especially together, will enable you, yourself (and with some minor help from us), to do all of this stuff that you want to do in your game</p>\n<hr>\n<p>I'd suggest you first learn about using Attributes, and then, in using them, with the 'if' Script, in learning to use the the 'if' Script</p>\n<p>it's not easy to learn this stuff for the very first time, but in learning this stuff, it opens up 90% of everything that you want to do within your game</p>\n<hr>\n<p>I have some links for helping with this stuff, here:</p>\n<p>http://textadventures.co.uk/forum/general/topic/ljjm32av4e2t9ot49k478g/help#710be61e-eae1-4af1-8363-520cc718ba1c</p>\n<p>specifically, check out my 'hk attribute and if script guide' link (and scroll down past the first half as this just explains the basics of coding, though you should read this too, along with the other link 'quest structure and coding basics' too, to get to the rest of the post on using Attributes and then the 'if' Script)</p>\n<hr>\n<p>also, here's a step by step walkthrough demo game guide to learning to use Attributes (including the built-in 'statusattributes' String Dictionary Attributes):</p>\n<p>http://textadventures.co.uk/forum/quest/topic/5387/i-really-need-help#37375</p>\n<hr>\n<p>HK edit:</p>\n<p>here's another link that helps with the coding basics (quest code structure and its coding basics, Attribute usage, and the if' script usage):</p>\n<p>http://textadventures.co.uk/forum/quest/topic/mu7itzjqv0yxrkdwgsbmzg/how-to-make-npc-confront-you-with-chioces#46cdb25b-4767-40a6-8bf4-3cd84e805781</p>\n<hr>\n<p>try to follow and learn from these links, and ask us for help as you get stuck or need help with something or need something more or better explained</p>\n\n",
      "PostDate": "2018-08-28T23:50:01.6237834Z",
      "LastEditDate": "2018-08-29T00:03:49.2943728Z",
      "link": null
    },
    {
      "PostId": "a6a88919-008d-4984-9c30-c938f7fec600",
      "UserId": 373044,
      "Username": "LeftUnscarred",
      "AvatarUrl": "https://secure.gravatar.com/avatar/be5745cce4b8baf9a92118efdb619450?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ok thanks hegemonkahn ill go read thoes\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>ok thanks hegemonkahn ill go read thoes</p>\n\n",
      "PostDate": "2018-08-28T23:51:42.9780065Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "44e6cccb-e851-4c95-aa2c-743332d1197a",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I was a total noob at coding (and game making) myself, but through quest, I've learned to code, and am taking programming classes in college now\r\n\r\nyou can see my own struggles with learning to code (and game making) with quest, when I first started out, having found quest ~ 5+ years ago:\r\n\r\n(learning to code, and game make, is NOT easy !!! I know what it's like... being a total noob to all of this stuff, and everything doesn't make any sense and is so OVER-whelming)\r\n\r\nhttps://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread\r\n\r\nit's a good laugh, going back and looking at how stupid I too was, not even understand the terms/Elements/Data-Types and etc...\r\n\r\nI've come a long way since then, and it's all thanks to quest and the helpful members here over the years.",
      "EditableFormat": "markdown",
      "HTML": "<p>I was a total noob at coding (and game making) myself, but through quest, I've learned to code, and am taking programming classes in college now</p>\n<p>you can see my own struggles with learning to code (and game making) with quest, when I first started out, having found quest ~ 5+ years ago:</p>\n<p>(learning to code, and game make, is NOT easy !!! I know what it's like... being a total noob to all of this stuff, and everything doesn't make any sense and is so OVER-whelming)</p>\n<p>https://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread</p>\n<p>it's a good laugh, going back and looking at how stupid I too was, not even understand the terms/Elements/Data-Types and etc...</p>\n<p>I've come a long way since then, and it's all thanks to quest and the helpful members here over the years.</p>\n\n",
      "PostDate": "2018-08-29T00:31:59.751254Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7dd9125a-f96e-400e-861c-5367b1db8fc8",
      "UserId": 373044,
      "Username": "LeftUnscarred",
      "AvatarUrl": "https://secure.gravatar.com/avatar/be5745cce4b8baf9a92118efdb619450?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "lol i think i understand the termenology some but using it in my own way is what i dont know how to do hegemonkhan the artical u have me looking at is helping alot but mainly just with knowing terminology i havent read it all yet but ill try to post on here again if i have an issue",
      "EditableFormat": "markdown",
      "HTML": "<p>lol i think i understand the termenology some but using it in my own way is what i dont know how to do hegemonkhan the artical u have me looking at is helping alot but mainly just with knowing terminology i havent read it all yet but ill try to post on here again if i have an issue</p>\n\n",
      "PostDate": "2018-08-29T00:46:06.0877561Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e6bea317-84b3-46fd-ae21-c9d4ebf7b25c",
      "UserId": 373044,
      "Username": "LeftUnscarred",
      "AvatarUrl": "https://secure.gravatar.com/avatar/be5745cce4b8baf9a92118efdb619450?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "hey hegemonkhan i was looking through an old thing u did and i found what i wanted but theres an issue \r\nheres what you wrote\r\n\r\n\r\nand lastly, for testing of our status attributes for changing Attributes' Values:\r\n\r\n'room' Room Object -> 'Objects' Tab -> Add -> (see below, repeat as needed)\r\n\r\nObject Name: increase_game_strength\r\nObject Name: decrease_game_strength\r\nObject Name: increase_player_strength\r\nObject Name: decrease_player_strength\r\nObject Name: increase_game_current_life\r\nObject Name: decrease_game_current_life\r\nObject Name: increase_game_maximum_life\r\nObject Name: decrease_game_maximum_life\r\nObject Name: increase_player_current_life\r\nObject Name: decrease_player_current_life\r\nObject Name: increase_player_maximum_life\r\nObject Name: decrease_player_maximum_life\r\n\r\n'increase_game_strength' Object -> 'Verbs' Tab -> add -> Verb Name: increase -> (see below)\r\n\r\nadd new script -> variables -> 'set a variable or attribute' Script -> set variable game.strength = [expression] game.strength + 10\r\n\r\n'decrease_game_strength' Object -> 'Verbs' Tab -> add -> Verb Name: decrease -> (see below)\r\n\r\nadd new script -> variables -> 'set a variable or attribute' Script -> set variable game.strength = [expression] game.strength - 10\r\n\r\n'increase_player_strength' Object -> 'Verbs' Tab -> add -> Verb Name: increase -> (see below)\r\n\r\nadd new script -> variables -> 'set a variable or attribute' Script -> set variable player.strength = [expression] player.strength + 10\r\n\r\n'decrease_player_strength' Object -> 'Verbs' Tab -> add -> Verb Name: decrease -> (see below)\r\n\r\nadd new script -> variables -> 'set a variable or attribute' Script -> set variable player.strength = [expression] player.strength - 10\r\n\r\n'increase_game_current_life' Object -> 'Verbs' Tab -> add -> Verb Name: increase -> (see below)\r\n\r\nadd new script -> variables -> 'set a variable or attribute' Script -> set variable game.current_life = [expression] game.current_life + 100\r\n\r\n'decrease_game_current_life' Object -> 'Verbs' Tab -> add -> Verb Name: decrease -> (see below)\r\n\r\nadd new script -> variables -> 'set a variable or attribute' Script -> set variable game.current_life = [expression] game.current_life - 100\r\n\r\n'increase_game_maximum_life' Object -> 'Verbs' Tab -> add -> Verb Name: increase -> (see below)\r\n\r\nadd new script -> variables -> 'set a variable or attribute' Script -> set variable game.maximum_life = [expression] game.maximum_life + 100\r\n\r\n'decrease_game_current_life' Object -> 'Verbs' Tab -> add -> Verb Name: decrease -> (see below)\r\n\r\nadd new script -> variables -> 'set a variable or attribute' Script -> set variable game.maximum_life = [expression] game.maximum_life - 100\r\n\r\n'increase_player_current_life' Object -> 'Verbs' Tab -> add -> Verb Name: increase -> (see below)\r\n\r\nadd new script -> variables -> 'set a variable or attribute' Script -> set variable player.current_life = [expression] player.current_life + 100\r\n\r\n'decrease_player_current_life' Object -> 'Verbs' Tab -> add -> Verb Name: decrease -> (see below)\r\n\r\nadd new script -> variables -> 'set a variable or attribute' Script -> set variable player.current_life = [expression] player.current_life - 100\r\n\r\n'increase_player_maximum_life' Object -> 'Verbs' Tab -> add -> Verb Name: increase -> (see below)\r\n\r\nadd new script -> variables -> 'set a variable or attribute' Script -> set variable player.maximum_life = [expression] player.maximum_life + 100\r\n\r\n'decrease_player_current_life' Object -> 'Verbs' Tab -> add -> Verb Name: decrease -> (see below)\r\n\r\nadd new script -> variables -> 'set a variable or attribute' Script -> set variable player.maximum_life = [expression] player.maximum_life - 100\r\n\r\nand hopefully this all works for you! save your game file, and play~study~test it! (HK crosses fingers that he's got no mistakes, lol)\r\n\r\n\r\nthis is what i needed i know how to set the atributes just fine. my issue is changing them when i hit the monster or when it hits me i have my stuff set up but this makes me make a new object for each room is there a way i can set the verb inside my object like to attack the human i have a verb made in the human  running this code\r\n\r\n\r\nif (Got(KNIFE)) {\r\n  HUMAN.HP = - player.attack\r\n  if (HUMAN.HP =  0) {\r\n    MoveObject (HUMAN, TRASH CAN)\r\n    msg (\"The human has died and gone to a better place\")\r\n  }\r\n}\r\nelse {\r\n  if (not Got(KNIFE)) {\r\n    player.hp = - 2\r\n  }\r\n}\r\n\r\n\r\ni have my player.attack set too 2 cause my knife changes that the human.hp is set to 10 but if i try to attack him with that code it kills him instantly instead of just causing him to be at 8 hp actually looking at it it makes his hp equal -2 after i do that so i think thats how he dies and gets \"thrown away\" what is wrong with the code i just want to be able to change his health correctly based on what my attack which is set b y my knife when i pick it up and set again when i drop it??\r\n\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>hey hegemonkhan i was looking through an old thing u did and i found what i wanted but theres an issue<br>\nheres what you wrote</p>\n<p>and lastly, for testing of our status attributes for changing Attributes' Values:</p>\n<p>'room' Room Object -&gt; 'Objects' Tab -&gt; Add -&gt; (see below, repeat as needed)</p>\n<p>Object Name: increase_game_strength<br>\nObject Name: decrease_game_strength<br>\nObject Name: increase_player_strength<br>\nObject Name: decrease_player_strength<br>\nObject Name: increase_game_current_life<br>\nObject Name: decrease_game_current_life<br>\nObject Name: increase_game_maximum_life<br>\nObject Name: decrease_game_maximum_life<br>\nObject Name: increase_player_current_life<br>\nObject Name: decrease_player_current_life<br>\nObject Name: increase_player_maximum_life<br>\nObject Name: decrease_player_maximum_life</p>\n<p>'increase_game_strength' Object -&gt; 'Verbs' Tab -&gt; add -&gt; Verb Name: increase -&gt; (see below)</p>\n<p>add new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; set variable game.strength = [expression] game.strength + 10</p>\n<p>'decrease_game_strength' Object -&gt; 'Verbs' Tab -&gt; add -&gt; Verb Name: decrease -&gt; (see below)</p>\n<p>add new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; set variable game.strength = [expression] game.strength - 10</p>\n<p>'increase_player_strength' Object -&gt; 'Verbs' Tab -&gt; add -&gt; Verb Name: increase -&gt; (see below)</p>\n<p>add new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; set variable player.strength = [expression] player.strength + 10</p>\n<p>'decrease_player_strength' Object -&gt; 'Verbs' Tab -&gt; add -&gt; Verb Name: decrease -&gt; (see below)</p>\n<p>add new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; set variable player.strength = [expression] player.strength - 10</p>\n<p>'increase_game_current_life' Object -&gt; 'Verbs' Tab -&gt; add -&gt; Verb Name: increase -&gt; (see below)</p>\n<p>add new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; set variable game.current_life = [expression] game.current_life + 100</p>\n<p>'decrease_game_current_life' Object -&gt; 'Verbs' Tab -&gt; add -&gt; Verb Name: decrease -&gt; (see below)</p>\n<p>add new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; set variable game.current_life = [expression] game.current_life - 100</p>\n<p>'increase_game_maximum_life' Object -&gt; 'Verbs' Tab -&gt; add -&gt; Verb Name: increase -&gt; (see below)</p>\n<p>add new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; set variable game.maximum_life = [expression] game.maximum_life + 100</p>\n<p>'decrease_game_current_life' Object -&gt; 'Verbs' Tab -&gt; add -&gt; Verb Name: decrease -&gt; (see below)</p>\n<p>add new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; set variable game.maximum_life = [expression] game.maximum_life - 100</p>\n<p>'increase_player_current_life' Object -&gt; 'Verbs' Tab -&gt; add -&gt; Verb Name: increase -&gt; (see below)</p>\n<p>add new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; set variable player.current_life = [expression] player.current_life + 100</p>\n<p>'decrease_player_current_life' Object -&gt; 'Verbs' Tab -&gt; add -&gt; Verb Name: decrease -&gt; (see below)</p>\n<p>add new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; set variable player.current_life = [expression] player.current_life - 100</p>\n<p>'increase_player_maximum_life' Object -&gt; 'Verbs' Tab -&gt; add -&gt; Verb Name: increase -&gt; (see below)</p>\n<p>add new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; set variable player.maximum_life = [expression] player.maximum_life + 100</p>\n<p>'decrease_player_current_life' Object -&gt; 'Verbs' Tab -&gt; add -&gt; Verb Name: decrease -&gt; (see below)</p>\n<p>add new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; set variable player.maximum_life = [expression] player.maximum_life - 100</p>\n<p>and hopefully this all works for you! save your game file, and play~study~test it! (HK crosses fingers that he's got no mistakes, lol)</p>\n<p>this is what i needed i know how to set the atributes just fine. my issue is changing them when i hit the monster or when it hits me i have my stuff set up but this makes me make a new object for each room is there a way i can set the verb inside my object like to attack the human i have a verb made in the human  running this code</p>\n<p>if (Got(KNIFE)) {<br>\nHUMAN.HP = - player.attack<br>\nif (HUMAN.HP =  0) {<br>\nMoveObject (HUMAN, TRASH CAN)<br>\nmsg (\"The human has died and gone to a better place\")<br>\n}<br>\n}<br>\nelse {<br>\nif (not Got(KNIFE)) {<br>\nplayer.hp = - 2<br>\n}<br>\n}</p>\n<p>i have my player.attack set too 2 cause my knife changes that the human.hp is set to 10 but if i try to attack him with that code it kills him instantly instead of just causing him to be at 8 hp actually looking at it it makes his hp equal -2 after i do that so i think thats how he dies and gets \"thrown away\" what is wrong with the code i just want to be able to change his health correctly based on what my attack which is set b y my knife when i pick it up and set again when i drop it??</p>\n\n",
      "PostDate": "2018-08-29T01:45:00.5405489Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "822917c6-fcc1-460c-9514-34fe528bb9cb",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n(again, filler for getting my edited post, updated/posted)\r\n\r\n------------------\r\n\r\nya, once you got down the concepts... it's still another step in actually understanding them well enough to apply them on your own... I had the same issue too. I thought I understood stuff, as I understood the examples given to me, but when I went to try to do something on my own of those things I thought I understood, I learned that I really didn't understand those things, as I wasn't able to apply those things to the things that I wanted to do on my own in my game.\r\n\r\n---------------\r\n\r\nah, okay.... \r\n\r\nthis is what you got:\r\n\r\n```\r\nif (Got(KNIFE)) {\r\n  HUMAN.HP = - player.attack\r\n  if (HUMAN.HP = 0) {\r\n    MoveObject (HUMAN, TRASH CAN)\r\n    msg (\"The human has died and gone to a better place\")\r\n  }\r\n} else {\r\n  if (not Got(KNIFE)) {\r\n    player.hp = - 2\r\n  }\r\n}\r\n```\r\n\r\n------------\r\n\r\nyou need to change it to this:\r\n\r\n(however, you got another mistake, a logic mistake, and it can be cleaned up a bit too, see the next section below this one)\r\n\r\n```\r\nif (Got(KNIFE)) {\r\n\r\n  HUMAN.HP = HUMAN.HP - player.attack // LOGIC ISSUE (this allows for your 'HUMAN.HP' to be reduced below '0')\r\n  \r\n  if (HUMAN.HP = 0) { // LOGIC ISSUE (this is ONLY checking if HUMAN.HP equals EXACTLY '0', yet as your code is currently, the above line can drop your hp below '0', thus having a 'LOGIC ISSUE', which will cause in-game errors: you don't die despite having life/hp below 0, you can ONLY die if you have exactly '0' life/hp)\r\n    \r\n    MoveObject (HUMAN, TRASH CAN)\r\n    msg (\"The human has died and gone to a better place\")\r\n  }\r\n} else {\r\n\r\n  if (not Got(KNIFE)) { // this line isn't needed, as the 'else' itself handles it already\r\n\r\n    player.hp = player.hp - 2\r\n  }\r\n}\r\n```\r\n\r\n-----------\r\n\r\nhere's the fully fixed code:\r\n\r\n```\r\nif (Got(KNIFE)) {\r\n  HUMAN.HP = HUMAN.HP - player.attack\r\n  if (HUMAN.HP < 1) {\r\n    MoveObject (HUMAN, TRASH CAN)\r\n    msg (\"The human has died and gone to a better place\")\r\n  }\r\n} else {\r\n  player.hp = player.hp - 2\r\n  // not sure if how you want to handle this as not sure exactly what design/method you're doing (look at the 'HUMAN.HP' above)\r\n}\r\n```\r\n\r\nor (alternative, controlling and easily editing/changing the range/bounds of stats/Attributes):\r\n\r\n```\r\n// These Attributes need to be created/added/set (you can change the Values of them to whatever you want, and/or change their label/name, but then you got to match the rest of the code to whatever names/labels you give these Attributes):\r\n//\r\n// HUMAN.HP_minimum = 0\r\n// HUMAN.HP_maximum = 999\r\n\r\nif (Got(KNIFE)) {\r\n  HUMAN.HP = HUMAN.HP - player.attack\r\n  if (HUMAN.HP < HUMAN.HP_minimum) {\r\n    HUMAN.HP = HUMAN.HP_minimum\r\n  } else if (HUMAN.HP > HUMAN.HP_maximum) {\r\n    HUMAN.HP = HUMAN.HP_maximum\r\n  }\r\n  if (HUMAN.HP = HUMAN.HP_minimum) {\r\n    MoveObject (HUMAN, TRASH CAN)\r\n    msg (\"The human has died and gone to a better place\")\r\n  }\r\n} else {\r\n  player.hp = player.hp - 2\r\n  // not sure if how you want to handle this as not sure exactly what design/method you're doing (look at the 'HUMAN.HP' above)\r\n}\r\n```\r\n\r\n-------------\r\n\r\nwhy you're instantly dying:\r\n\r\nHUMAN.HP = - player.attack\r\n\r\n// and:\r\n\r\nplayer.hp = -2\r\n\r\n// you're directly setting your 'HUMAN.HP' to directly have/be/set-to (whatever is) as the negative of the Value being stored within the 'player.attack' Attribute, instead of decrementing (subtracting) it by (whatever is) the Value being stored within the 'player.attack' Attribute\r\n\r\n// and:\r\n\r\n// you're directly setting your 'player.hp' to have negative 2 life (HP), instead of decrementing (subtracting) it by 2\r\n// you're STORING the '-2' Value into the 'player.hp' Attribute\r\n\r\n--------------\r\n\r\nconcept of how it works:\r\n\r\nThe Assignment Operation (a programming operation):\r\n\r\nstoring a direct/literal Value (or ultimately a Value after/from calculating/evaluating/completing an expression) ON THE RIGHT SIDE (required) of the Assignment Operator (=), INTO the VARIABLE, ON THE LEFT SIDE (required) of the Assignment Operator (=)\r\n\r\n// VARIABLE <=(stored into)== VALUE_OR_EXPRESION\r\n\r\ndirectly in code (slightly different syntax than in the GUI/Editor):\r\n\r\nVARIABLE = VALUE_OR_EXPRESSION\r\n\r\nin GUI/Editor (slightly different syntax than directly in code):\r\n\r\nset variable VARIABLE = [EXPRESSION] VALUE_OR_EXPRESSION\r\n\r\nexamples (I'll use the GUI/Editor's syntax to make it easier for you):\r\n\r\nset variable player.strength = [EXPRESSION] 100\r\n\r\n// the '100' Integer Value is STORED INTO the 'strength' Integer Attribute of the default 'player' Player Object\r\n\r\n// quest is able to parse the Value, knowing what Data Type is the Value (String, Integer, Double, Boolean, Script, Object reference/pointer, List, Dictionary, etc), and thus makes the Attribute into the same Data Type (which is required: Attribute Type MUST match the Value Type) automatically for you\r\n\r\nset variable player.strength = [EXPRESSION] 50\r\n\r\n// the '50' Integer Value is STORED INTO the 'strength' Integer Attribute of the default 'player' Player Object (which the '50' Value replaces/over-rides/over-writes the old '100' Value stored into the 'player.strength' Attribute)\r\n\r\n--------\r\n\r\nnow let's look at some more complex expressions...\r\n\r\nArithmetic Operations:\r\n\r\nAddition:\r\n\r\nset variable player.strength = [EXPRESSION] player.strength + 5\r\n\r\n```\r\n// creating the Attribute and setting its initial Value of the 'player.strength' Attribute:\r\n//\r\n// set variable player.strength = [EXPRESSION] 0\r\n\r\nset variable player.strength = [EXPRESSION] player.strength + 5\r\n\r\n// how it works (Assignment Operation):\r\n//\r\n// initial Value: player.strength = 0\r\n//\r\n// old Value: player.strength = 0\r\n//\r\nset variable player.strength = [EXPRESSION] player.strength + 5\r\n// set variable player.strength (NEW) = [EXPRESSION] player.strength (OLD: 0) + 5\r\n// set variable player.strength (NEW) = [EXPRESSION] (0) + 5\r\n// set variable player.strength (NEW) = [EXPRESSION] 5\r\n//\r\n// new value: player.strength = 5\r\n//\r\n// old value: player.strength = 5\r\n//\r\nset variable player.strength = [EXPRESSION] player.strength + 5\r\n// set variable player.strength (NEW) = [EXPRESSION] player.strength (OLD: 5) + 5\r\n// set variable player.strength (NEW) = [EXPRESSION] (5) + 5\r\n// set variable player.strength (NEW) = [EXPRESSION] 10\r\n//\r\n// new value: player.strength = 10\r\n//\r\n// old value: player.strength = 10\r\n//\r\nset variable player.strength = [EXPRESSION] player.strength + 5\r\n// set variable player.strength (NEW) = [EXPRESSION] player.strength (OLD: 10) + 5\r\n// set variable player.strength (NEW) = [EXPRESSION] (10) + 5\r\n// set variable player.strength (NEW) = [EXPRESSION] 15\r\n//\r\n// new value: player.strength = 15\r\n//\r\n// old value: player.strength = 15\r\n//\r\nset variable player.strength = [EXPRESSION] player.strength + 5\r\n// set variable player.strength (NEW) = [EXPRESSION] player.strength (OLD: 15) + 5\r\n// set variable player.strength (NEW) = [EXPRESSION] (15) + 5\r\n// set variable player.strength (NEW) = [EXPRESSION] 20\r\n//\r\n// you get the idea now....\r\n```\r\n\r\nSubtraction:\r\n\r\nset variable player.strength = [EXPRESSION] player.strength - 7\r\n\r\nMultiplication:\r\n\r\nset variable player.strength = [EXPRESSION] player.strength * 3\r\n\r\nDivision:\r\n\r\nset variable player.strength = [EXPRESSION] player.strength / 2\r\n\r\nModulus (Division, but it finds/gets/returns the REMAINDER):\r\n\r\nset variable player.strength = [EXPRESSION] player.strength % 4\r\n\r\n--------\r\n\r\nexample of a more complex expression (in code, for this example, I'm lazy):\r\n\r\n```\r\ncreate (\"katana\") // creates a 'katana' Object\r\nkatana.damage = 50 // set variable katana.damage = [EXPRESSION] 50\r\n\r\nplayer.weapon = katana // the 'player.weapon' Attribute is an Object reference/pointer to the 'katana' Object\r\n// in GUI/Editor: set variable player.weapon = [EXPRESSION] katana\r\n\r\nplayer.strength = GetRandomInt (0,100) // randomly selects a Value from '0' to '100', which gets STORED INTO the 'player.strength' Attribute, the 'GetRandomInt (MIN_VALUE,MAX_VALUE)' is one of the built-in Randomization Functions\r\n// in GUI/Editor: set variable player.strength = [EXPRESSION] GetRandomInt (0,100)\r\n\r\nplayer.damage = player.weapon.damage + player.weapon.damage * player.strength / 100\r\n\r\n// in GUI/Editor: set variable player.damage = [EXPRESSION] player.weapon.damage + player.weapon.damage * player.strength / 100\r\n\r\n// if player.strength = 100:\r\nplayer.damage = player.weapon.damage + player.weapon.damage * player.strength / 100\r\n// player.damage = (50) + (50) * (100) / 100 = (50) + (50) * 1 = (50) + 50 = 100\r\n\r\n// if player.strength = 0:\r\nplayer.damage = player.weapon.damage + player.weapon.damage * player.strength / 100\r\n// player.damage = (50) + (50) * (0) / 100 = (50) + (50 * 0) = (50) + 0 = 50\r\n\r\n// if player.strength = 50:\r\nplayer.damage = player.weapon.damage + player.weapon.damage * player.strength / 100\r\n// player.damage = (50) + (50) * (50) / 100 = (50) + (50) * 1/2 = (50) + 25 = 75\r\n\r\n// if player.strength = 75:\r\nplayer.damage = player.weapon.damage + player.weapon.damage * player.strength / 100\r\n// player.damage = (50) + (50) * (75) / 100 = (50) + (50) * 3/4 = (50) + 75/2 = (50) + ~37 = ~87\r\n\r\n// if player.strength = 25:\r\nplayer.damage = player.weapon.damage + player.weapon.damage * player.strength / 100\r\n// player.damage = (50) + (50) * (25) / 100 = (50) + (50) * 1/4 = (50) + 25/2 = (50) + ~12 = ~62\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)<br>\n(again, filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>ya, once you got down the concepts... it's still another step in actually understanding them well enough to apply them on your own... I had the same issue too. I thought I understood stuff, as I understood the examples given to me, but when I went to try to do something on my own of those things I thought I understood, I learned that I really didn't understand those things, as I wasn't able to apply those things to the things that I wanted to do on my own in my game.</p>\n<hr>\n<p>ah, okay....</p>\n<p>this is what you got:</p>\n<pre><code>if (Got(KNIFE)) {\n  HUMAN.HP = - player.attack\n  if (HUMAN.HP = 0) {\n    MoveObject (HUMAN, TRASH CAN)\n    msg (\"The human has died and gone to a better place\")\n  }\n} else {\n  if (not Got(KNIFE)) {\n    player.hp = - 2\n  }\n}\n</code></pre>\n<hr>\n<p>you need to change it to this:</p>\n<p>(however, you got another mistake, a logic mistake, and it can be cleaned up a bit too, see the next section below this one)</p>\n<pre><code>if (Got(KNIFE)) {\n\n  HUMAN.HP = HUMAN.HP - player.attack // LOGIC ISSUE (this allows for your 'HUMAN.HP' to be reduced below '0')\n  \n  if (HUMAN.HP = 0) { // LOGIC ISSUE (this is ONLY checking if HUMAN.HP equals EXACTLY '0', yet as your code is currently, the above line can drop your hp below '0', thus having a 'LOGIC ISSUE', which will cause in-game errors: you don't die despite having life/hp below 0, you can ONLY die if you have exactly '0' life/hp)\n    \n    MoveObject (HUMAN, TRASH CAN)\n    msg (\"The human has died and gone to a better place\")\n  }\n} else {\n\n  if (not Got(KNIFE)) { // this line isn't needed, as the 'else' itself handles it already\n\n    player.hp = player.hp - 2\n  }\n}\n</code></pre>\n<hr>\n<p>here's the fully fixed code:</p>\n<pre><code>if (Got(KNIFE)) {\n  HUMAN.HP = HUMAN.HP - player.attack\n  if (HUMAN.HP &lt; 1) {\n    MoveObject (HUMAN, TRASH CAN)\n    msg (\"The human has died and gone to a better place\")\n  }\n} else {\n  player.hp = player.hp - 2\n  // not sure if how you want to handle this as not sure exactly what design/method you're doing (look at the 'HUMAN.HP' above)\n}\n</code></pre>\n<p>or (alternative, controlling and easily editing/changing the range/bounds of stats/Attributes):</p>\n<pre><code>// These Attributes need to be created/added/set (you can change the Values of them to whatever you want, and/or change their label/name, but then you got to match the rest of the code to whatever names/labels you give these Attributes):\n//\n// HUMAN.HP_minimum = 0\n// HUMAN.HP_maximum = 999\n\nif (Got(KNIFE)) {\n  HUMAN.HP = HUMAN.HP - player.attack\n  if (HUMAN.HP &lt; HUMAN.HP_minimum) {\n    HUMAN.HP = HUMAN.HP_minimum\n  } else if (HUMAN.HP &gt; HUMAN.HP_maximum) {\n    HUMAN.HP = HUMAN.HP_maximum\n  }\n  if (HUMAN.HP = HUMAN.HP_minimum) {\n    MoveObject (HUMAN, TRASH CAN)\n    msg (\"The human has died and gone to a better place\")\n  }\n} else {\n  player.hp = player.hp - 2\n  // not sure if how you want to handle this as not sure exactly what design/method you're doing (look at the 'HUMAN.HP' above)\n}\n</code></pre>\n<hr>\n<p>why you're instantly dying:</p>\n<p>HUMAN.HP = - player.attack</p>\n<p>// and:</p>\n<p>player.hp = -2</p>\n<p>// you're directly setting your 'HUMAN.HP' to directly have/be/set-to (whatever is) as the negative of the Value being stored within the 'player.attack' Attribute, instead of decrementing (subtracting) it by (whatever is) the Value being stored within the 'player.attack' Attribute</p>\n<p>// and:</p>\n<p>// you're directly setting your 'player.hp' to have negative 2 life (HP), instead of decrementing (subtracting) it by 2<br>\n// you're STORING the '-2' Value into the 'player.hp' Attribute</p>\n<hr>\n<p>concept of how it works:</p>\n<p>The Assignment Operation (a programming operation):</p>\n<p>storing a direct/literal Value (or ultimately a Value after/from calculating/evaluating/completing an expression) ON THE RIGHT SIDE (required) of the Assignment Operator (=), INTO the VARIABLE, ON THE LEFT SIDE (required) of the Assignment Operator (=)</p>\n<p>// VARIABLE &lt;=(stored into)== VALUE_OR_EXPRESION</p>\n<p>directly in code (slightly different syntax than in the GUI/Editor):</p>\n<p>VARIABLE = VALUE_OR_EXPRESSION</p>\n<p>in GUI/Editor (slightly different syntax than directly in code):</p>\n<p>set variable VARIABLE = [EXPRESSION] VALUE_OR_EXPRESSION</p>\n<p>examples (I'll use the GUI/Editor's syntax to make it easier for you):</p>\n<p>set variable player.strength = [EXPRESSION] 100</p>\n<p>// the '100' Integer Value is STORED INTO the 'strength' Integer Attribute of the default 'player' Player Object</p>\n<p>// quest is able to parse the Value, knowing what Data Type is the Value (String, Integer, Double, Boolean, Script, Object reference/pointer, List, Dictionary, etc), and thus makes the Attribute into the same Data Type (which is required: Attribute Type MUST match the Value Type) automatically for you</p>\n<p>set variable player.strength = [EXPRESSION] 50</p>\n<p>// the '50' Integer Value is STORED INTO the 'strength' Integer Attribute of the default 'player' Player Object (which the '50' Value replaces/over-rides/over-writes the old '100' Value stored into the 'player.strength' Attribute)</p>\n<hr>\n<p>now let's look at some more complex expressions...</p>\n<p>Arithmetic Operations:</p>\n<p>Addition:</p>\n<p>set variable player.strength = [EXPRESSION] player.strength + 5</p>\n<pre><code>// creating the Attribute and setting its initial Value of the 'player.strength' Attribute:\n//\n// set variable player.strength = [EXPRESSION] 0\n\nset variable player.strength = [EXPRESSION] player.strength + 5\n\n// how it works (Assignment Operation):\n//\n// initial Value: player.strength = 0\n//\n// old Value: player.strength = 0\n//\nset variable player.strength = [EXPRESSION] player.strength + 5\n// set variable player.strength (NEW) = [EXPRESSION] player.strength (OLD: 0) + 5\n// set variable player.strength (NEW) = [EXPRESSION] (0) + 5\n// set variable player.strength (NEW) = [EXPRESSION] 5\n//\n// new value: player.strength = 5\n//\n// old value: player.strength = 5\n//\nset variable player.strength = [EXPRESSION] player.strength + 5\n// set variable player.strength (NEW) = [EXPRESSION] player.strength (OLD: 5) + 5\n// set variable player.strength (NEW) = [EXPRESSION] (5) + 5\n// set variable player.strength (NEW) = [EXPRESSION] 10\n//\n// new value: player.strength = 10\n//\n// old value: player.strength = 10\n//\nset variable player.strength = [EXPRESSION] player.strength + 5\n// set variable player.strength (NEW) = [EXPRESSION] player.strength (OLD: 10) + 5\n// set variable player.strength (NEW) = [EXPRESSION] (10) + 5\n// set variable player.strength (NEW) = [EXPRESSION] 15\n//\n// new value: player.strength = 15\n//\n// old value: player.strength = 15\n//\nset variable player.strength = [EXPRESSION] player.strength + 5\n// set variable player.strength (NEW) = [EXPRESSION] player.strength (OLD: 15) + 5\n// set variable player.strength (NEW) = [EXPRESSION] (15) + 5\n// set variable player.strength (NEW) = [EXPRESSION] 20\n//\n// you get the idea now....\n</code></pre>\n<p>Subtraction:</p>\n<p>set variable player.strength = [EXPRESSION] player.strength - 7</p>\n<p>Multiplication:</p>\n<p>set variable player.strength = [EXPRESSION] player.strength * 3</p>\n<p>Division:</p>\n<p>set variable player.strength = [EXPRESSION] player.strength / 2</p>\n<p>Modulus (Division, but it finds/gets/returns the REMAINDER):</p>\n<p>set variable player.strength = [EXPRESSION] player.strength % 4</p>\n<hr>\n<p>example of a more complex expression (in code, for this example, I'm lazy):</p>\n<pre><code>create (\"katana\") // creates a 'katana' Object\nkatana.damage = 50 // set variable katana.damage = [EXPRESSION] 50\n\nplayer.weapon = katana // the 'player.weapon' Attribute is an Object reference/pointer to the 'katana' Object\n// in GUI/Editor: set variable player.weapon = [EXPRESSION] katana\n\nplayer.strength = GetRandomInt (0,100) // randomly selects a Value from '0' to '100', which gets STORED INTO the 'player.strength' Attribute, the 'GetRandomInt (MIN_VALUE,MAX_VALUE)' is one of the built-in Randomization Functions\n// in GUI/Editor: set variable player.strength = [EXPRESSION] GetRandomInt (0,100)\n\nplayer.damage = player.weapon.damage + player.weapon.damage * player.strength / 100\n\n// in GUI/Editor: set variable player.damage = [EXPRESSION] player.weapon.damage + player.weapon.damage * player.strength / 100\n\n// if player.strength = 100:\nplayer.damage = player.weapon.damage + player.weapon.damage * player.strength / 100\n// player.damage = (50) + (50) * (100) / 100 = (50) + (50) * 1 = (50) + 50 = 100\n\n// if player.strength = 0:\nplayer.damage = player.weapon.damage + player.weapon.damage * player.strength / 100\n// player.damage = (50) + (50) * (0) / 100 = (50) + (50 * 0) = (50) + 0 = 50\n\n// if player.strength = 50:\nplayer.damage = player.weapon.damage + player.weapon.damage * player.strength / 100\n// player.damage = (50) + (50) * (50) / 100 = (50) + (50) * 1/2 = (50) + 25 = 75\n\n// if player.strength = 75:\nplayer.damage = player.weapon.damage + player.weapon.damage * player.strength / 100\n// player.damage = (50) + (50) * (75) / 100 = (50) + (50) * 3/4 = (50) + 75/2 = (50) + ~37 = ~87\n\n// if player.strength = 25:\nplayer.damage = player.weapon.damage + player.weapon.damage * player.strength / 100\n// player.damage = (50) + (50) * (25) / 100 = (50) + (50) * 1/4 = (50) + 25/2 = (50) + ~12 = ~62\n</code></pre>\n\n",
      "PostDate": "2018-08-29T03:40:58.2125295Z",
      "LastEditDate": "2018-08-29T05:24:47.7754156Z",
      "link": null
    },
    {
      "PostId": "e3eaa926-926e-425e-8549-b354be94f847",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "P.S.\r\n\r\nto do the 'code box' in posts:\r\n\r\n```\r\nm```\r\n(paste code and/or wall of text, lol, here)\r\nm```\r\n```\r\n\r\nbut without the m's in front of it!\r\n\r\nthose weird characters/symbols is the keyboard key in the upper left corner of the keyboard, to the left of the '1' key of the horizontal row of numbers at top of keyboard, and above the left TAB key, and the tilde (~) character is shared with this same key (if you hold down shift and press this key, you get the tilde character/symbol), otherwise, you get these weird characters/symbols, which is how to do the 'code box' in posts on this site\r\n\r\nwhich will look like this:\r\n\r\n```\r\n(paste code and/or wall of text, lol, here)\r\n```\r\n\r\nand the reason why using the code boxes are so nice, is because it preserves the formatting of it",
      "EditableFormat": "markdown",
      "HTML": "<p>P.S.</p>\n<p>to do the 'code box' in posts:</p>\n<pre><code>m```\n(paste code and/or wall of text, lol, here)\nm```\n</code></pre>\n<p>but without the m's in front of it!</p>\n<p>those weird characters/symbols is the keyboard key in the upper left corner of the keyboard, to the left of the '1' key of the horizontal row of numbers at top of keyboard, and above the left TAB key, and the tilde (~) character is shared with this same key (if you hold down shift and press this key, you get the tilde character/symbol), otherwise, you get these weird characters/symbols, which is how to do the 'code box' in posts on this site</p>\n<p>which will look like this:</p>\n<pre><code>(paste code and/or wall of text, lol, here)\n</code></pre>\n<p>and the reason why using the code boxes are so nice, is because it preserves the formatting of it</p>\n\n",
      "PostDate": "2018-08-29T04:08:03.9405974Z",
      "LastEditDate": "2018-08-29T04:09:00.2187769Z",
      "link": null
    },
    {
      "PostId": "b2c29df8-be7a-43d8-a6ae-a344f29da1fa",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "for some more advanced design methods:\r\n\r\ncreate and put an (un-drop-able) 'action' (and if want an 'info') Object(s) within the 'player' Player Object, and create/add whatever Verbs (Verbs are actually just Script Attributes with extra coding for the 'Verb' features: hyperlink buttons and etc handling. Also Verbs are just specialized Commands, in that their parent Object is used for their scripting, instead of being able to use whatever Object: Verbs use static Objects, Commands can use dynamic Objects) for it (them):\r\n\r\n(but you then got to use the scripting to handle what Objects to look/get and etc handling of what you want to do)\r\n\r\n```\r\n<object name=\"room\">\r\n\r\n  <inherit name=\"editor_room\" />\r\n\r\n</object>\r\n\r\n<object name=\"player\">\r\n\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_room\" />\r\n\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n</object>\r\n\r\n<object name=\"info\">\r\n\r\n  <attr name=\"parent\" type=\"object\">player</attr>\r\n\r\n  <attr name=\"drop\" type=\"boolean\">false</attr>\r\n  <attr name=\"take\" type=\"boolean\">false</attr>\r\n\r\n  <inventoryverbs type=\"stringlist\">\r\n\r\n    <value>stats</value>\r\n    <value>skills</value>\r\n    <value>appearance</value>\r\n    <value>equipment</value>\r\n    <value>magic</value>\r\n    <value>items</value>\r\n    <value>storage</value>\r\n\r\n  </inventoryverbs>\r\n\r\n  <attr name=\"stats\" type=\"script\">\r\n\r\n    // whatever scripting\r\n\r\n  </attr>\r\n\r\n  <attr name=\"skills\" type=\"script\">\r\n\r\n    // whatever scripting\r\n\r\n  </attr>\r\n\r\n  <attr name=\"appearance\" type=\"script\">\r\n\r\n    // whatever scripting\r\n\r\n  </attr>\r\n\r\n  <attr name=\"equipment\" type=\"script\">\r\n\r\n    // whatever scripting\r\n\r\n  </attr>\r\n\r\n  <attr name=\"magic\" type=\"script\">\r\n\r\n    // whatever scripting\r\n\r\n  </attr>\r\n\r\n  <attr name=\"items\" type=\"script\">\r\n\r\n    // whatever scripting\r\n\r\n  </attr>\r\n\r\n  <attr name=\"storage\" type=\"script\">\r\n\r\n    // whatever scripting\r\n\r\n  </attr>\r\n\r\n</object>\r\n\r\n<object name=\"action\">\r\n\r\n  <attr name=\"parent\" type=\"object\">player</attr>\r\n\r\n  <attr name=\"drop\" type=\"boolean\">false</attr>\r\n  <attr name=\"take\" type=\"boolean\">false</attr>\r\n\r\n  <inventoryverbs type=\"stringlist\">\r\n\r\n    <value>talk</value>\r\n    <value>explore</value>\r\n    <value>skills</value>\r\n    <value>equipment</value>\r\n    <value>magic</value>\r\n    <value>items</value>\r\n    <value>storage</value>\r\n    <value>fight</value>\r\n\r\n  </inventoryverbs>\r\n\r\n  <attr name=\"talk\" type=\"Script\">\r\n\r\n    // whatever scripting\r\n\r\n  </attr>\r\n\r\n  <attr name=\"explore\" type=\"Script\">\r\n\r\n    // whatever scripting\r\n\r\n  </attr>\r\n\r\n  <attr name=\"skills\" type=\"Script\">\r\n\r\n    // whatever scripting\r\n\r\n  </attr>\r\n\r\n<attr name=\"equipment\" type=\"script\">\r\n\r\n    // whatever scripting\r\n\r\n  </attr>\r\n\r\n  <attr name=\"magic\" type=\"script\">\r\n\r\n    // whatever scripting\r\n\r\n  </attr>\r\n\r\n  <attr name=\"items\" type=\"script\">\r\n\r\n    // whatever scripting\r\n\r\n  </attr>\r\n\r\n  <attr name=\"storage\" type=\"script\">\r\n\r\n    // whatever scripting\r\n\r\n  </attr>\r\n\r\n  <attr name=\"fight\" type=\"Script\">\r\n\r\n    // whatever scripting\r\n\r\n  </attr>\r\n\r\n</object>\r\n\r\n<verb>\r\n  <property>talk</property>\r\n  <pattern>talk</pattern>\r\n  <defaultexpression>You can't talk to that!</defaultexpression>\r\n</verb>\r\n\r\n<verb>\r\n  <property>explore</property>\r\n  <pattern>explore</pattern>\r\n  <defaultexpression>You can't explore here!</defaultexpression>\r\n</verb>\r\n\r\n<verb>\r\n  <property>stats</property>\r\n  <pattern>stats</pattern>\r\n  <defaultexpression>You can't view the stats of that!</defaultexpression>\r\n</verb>\r\n\r\n<verb>\r\n  <property>skills</property>\r\n  <pattern>skills</pattern>\r\n  <defaultexpression>You can't view the skills of that!</defaultexpression>\r\n</verb>\r\n\r\n<verb>\r\n  <property>appearance</property>\r\n  <pattern>appearance</pattern>\r\n  <defaultexpression>You can't view the appearance of that!</defaultexpression>\r\n</verb>\r\n\r\n<verb>\r\n  <property>equipment</property>\r\n  <pattern>equipment</pattern>\r\n  <defaultexpression>You can't view the equipment of that!</defaultexpression>\r\n</verb>\r\n\r\n<verb>\r\n  <property>magic</property>\r\n  <pattern>magic</pattern>\r\n  <defaultexpression>You can't view the magic of that!</defaultexpression>\r\n</verb>\r\n\r\n<verb>\r\n  <property>items</property>\r\n  <pattern>items</pattern>\r\n  <defaultexpression>You can't view the items of that!</defaultexpression>\r\n</verb>\r\n\r\n<verb>\r\n  <property>storage</property>\r\n  <pattern>storage</pattern>\r\n  <defaultexpression>You can't view the storage of that!</defaultexpression>\r\n</verb>\r\n\r\n<verb>\r\n  <property>fight</property>\r\n  <pattern>fight</pattern>\r\n  <defaultexpression>You can't fight that!</defaultexpression>\r\n</verb>\r\n```\r\n\r\nso in your inventory pane as Objects and their verb buttons:\r\n\r\ninfo object\r\n-> stats verb button\r\n-> skills verb button\r\n-> appearance verb button\r\n-> equipment verb button\r\n-> magic verb button\r\n-> items verb button\r\n-> storage verb button\r\n\r\naction object\r\n-> talk verb button\r\n-> explore verb button\r\n-> equipment verb button\r\n-> magic verb button\r\n-> items verb button\r\n-> storage verb button\r\n-> fight verb button\r\n\r\n-------------\r\n\r\nor, you can just use/create Commands, as well\r\n\r\n--------------\r\n\r\nthis was only a brief post of more advanced options/methods, but you'll need help with how to do the scripting for them, which I didn't get into within this post (I am lazy).\r\n\r\nI can go into much more complete detail on this stuff, if you're interested, just let me know, and I will help with the scripting.",
      "EditableFormat": "markdown",
      "HTML": "<p>for some more advanced design methods:</p>\n<p>create and put an (un-drop-able) 'action' (and if want an 'info') Object(s) within the 'player' Player Object, and create/add whatever Verbs (Verbs are actually just Script Attributes with extra coding for the 'Verb' features: hyperlink buttons and etc handling. Also Verbs are just specialized Commands, in that their parent Object is used for their scripting, instead of being able to use whatever Object: Verbs use static Objects, Commands can use dynamic Objects) for it (them):</p>\n<p>(but you then got to use the scripting to handle what Objects to look/get and etc handling of what you want to do)</p>\n<pre><code>&lt;object name=\"room\"&gt;\n\n  &lt;inherit name=\"editor_room\" /&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_room\" /&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"info\"&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;player&lt;/attr&gt;\n\n  &lt;attr name=\"drop\" type=\"boolean\"&gt;false&lt;/attr&gt;\n  &lt;attr name=\"take\" type=\"boolean\"&gt;false&lt;/attr&gt;\n\n  &lt;inventoryverbs type=\"stringlist\"&gt;\n\n    &lt;value&gt;stats&lt;/value&gt;\n    &lt;value&gt;skills&lt;/value&gt;\n    &lt;value&gt;appearance&lt;/value&gt;\n    &lt;value&gt;equipment&lt;/value&gt;\n    &lt;value&gt;magic&lt;/value&gt;\n    &lt;value&gt;items&lt;/value&gt;\n    &lt;value&gt;storage&lt;/value&gt;\n\n  &lt;/inventoryverbs&gt;\n\n  &lt;attr name=\"stats\" type=\"script\"&gt;\n\n    // whatever scripting\n\n  &lt;/attr&gt;\n\n  &lt;attr name=\"skills\" type=\"script\"&gt;\n\n    // whatever scripting\n\n  &lt;/attr&gt;\n\n  &lt;attr name=\"appearance\" type=\"script\"&gt;\n\n    // whatever scripting\n\n  &lt;/attr&gt;\n\n  &lt;attr name=\"equipment\" type=\"script\"&gt;\n\n    // whatever scripting\n\n  &lt;/attr&gt;\n\n  &lt;attr name=\"magic\" type=\"script\"&gt;\n\n    // whatever scripting\n\n  &lt;/attr&gt;\n\n  &lt;attr name=\"items\" type=\"script\"&gt;\n\n    // whatever scripting\n\n  &lt;/attr&gt;\n\n  &lt;attr name=\"storage\" type=\"script\"&gt;\n\n    // whatever scripting\n\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"action\"&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;player&lt;/attr&gt;\n\n  &lt;attr name=\"drop\" type=\"boolean\"&gt;false&lt;/attr&gt;\n  &lt;attr name=\"take\" type=\"boolean\"&gt;false&lt;/attr&gt;\n\n  &lt;inventoryverbs type=\"stringlist\"&gt;\n\n    &lt;value&gt;talk&lt;/value&gt;\n    &lt;value&gt;explore&lt;/value&gt;\n    &lt;value&gt;skills&lt;/value&gt;\n    &lt;value&gt;equipment&lt;/value&gt;\n    &lt;value&gt;magic&lt;/value&gt;\n    &lt;value&gt;items&lt;/value&gt;\n    &lt;value&gt;storage&lt;/value&gt;\n    &lt;value&gt;fight&lt;/value&gt;\n\n  &lt;/inventoryverbs&gt;\n\n  &lt;attr name=\"talk\" type=\"Script\"&gt;\n\n    // whatever scripting\n\n  &lt;/attr&gt;\n\n  &lt;attr name=\"explore\" type=\"Script\"&gt;\n\n    // whatever scripting\n\n  &lt;/attr&gt;\n\n  &lt;attr name=\"skills\" type=\"Script\"&gt;\n\n    // whatever scripting\n\n  &lt;/attr&gt;\n\n&lt;attr name=\"equipment\" type=\"script\"&gt;\n\n    // whatever scripting\n\n  &lt;/attr&gt;\n\n  &lt;attr name=\"magic\" type=\"script\"&gt;\n\n    // whatever scripting\n\n  &lt;/attr&gt;\n\n  &lt;attr name=\"items\" type=\"script\"&gt;\n\n    // whatever scripting\n\n  &lt;/attr&gt;\n\n  &lt;attr name=\"storage\" type=\"script\"&gt;\n\n    // whatever scripting\n\n  &lt;/attr&gt;\n\n  &lt;attr name=\"fight\" type=\"Script\"&gt;\n\n    // whatever scripting\n\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;talk&lt;/property&gt;\n  &lt;pattern&gt;talk&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't talk to that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;explore&lt;/property&gt;\n  &lt;pattern&gt;explore&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't explore here!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;stats&lt;/property&gt;\n  &lt;pattern&gt;stats&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't view the stats of that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;skills&lt;/property&gt;\n  &lt;pattern&gt;skills&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't view the skills of that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;appearance&lt;/property&gt;\n  &lt;pattern&gt;appearance&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't view the appearance of that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;equipment&lt;/property&gt;\n  &lt;pattern&gt;equipment&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't view the equipment of that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;magic&lt;/property&gt;\n  &lt;pattern&gt;magic&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't view the magic of that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;items&lt;/property&gt;\n  &lt;pattern&gt;items&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't view the items of that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;storage&lt;/property&gt;\n  &lt;pattern&gt;storage&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't view the storage of that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;fight&lt;/property&gt;\n  &lt;pattern&gt;fight&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't fight that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n</code></pre>\n<p>so in your inventory pane as Objects and their verb buttons:</p>\n<p>info object<br>\n-&gt; stats verb button<br>\n-&gt; skills verb button<br>\n-&gt; appearance verb button<br>\n-&gt; equipment verb button<br>\n-&gt; magic verb button<br>\n-&gt; items verb button<br>\n-&gt; storage verb button</p>\n<p>action object<br>\n-&gt; talk verb button<br>\n-&gt; explore verb button<br>\n-&gt; equipment verb button<br>\n-&gt; magic verb button<br>\n-&gt; items verb button<br>\n-&gt; storage verb button<br>\n-&gt; fight verb button</p>\n<hr>\n<p>or, you can just use/create Commands, as well</p>\n<hr>\n<p>this was only a brief post of more advanced options/methods, but you'll need help with how to do the scripting for them, which I didn't get into within this post (I am lazy).</p>\n<p>I can go into much more complete detail on this stuff, if you're interested, just let me know, and I will help with the scripting.</p>\n\n",
      "PostDate": "2018-08-29T04:48:58.8980523Z",
      "LastEditDate": "2018-08-29T05:07:08.6055415Z",
      "link": null
    },
    {
      "PostId": "fbcc23e4-303d-491f-91ff-71b9b046ff16",
      "UserId": 373044,
      "Username": "LeftUnscarred",
      "AvatarUrl": "https://secure.gravatar.com/avatar/be5745cce4b8baf9a92118efdb619450?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "hey hegemonkhan thank you for your help. i toticed you gave me the fixed code of \r\n```\r\nif (Got(KNIFE)) {\r\n  HUMAN.HP = HUMAN.HP -  player.attack\r\n  if (HUMAN.HP < 1) {\r\n    MoveObject (HUMAN, TRASH CAN)\r\n    msg (\"The human has died and gone to a better place\")\r\n  }\r\n} else {\r\n  player.hp = player.hp - 2\r\n  // not sure if how you want to handle this as not sure exactly what design/method you're doing (look at the 'HUMAN.HP' above)\r\n}\r\n```\r\n\r\nwell i copy pasted that into the code view of the editor and it changed the code to  me writing a call function \r\nheres what the code looks like\r\n```\r\nif (Got(KNIFE)) {\r\n  HUMAN.HP = HUMAN.HP -  player.attack\r\n  if (HUMAN.HP < 1) {\r\n    MoveObject (HUMAN, TRASH CAN)\r\n    msg (\"The human has died and gone to a better place\")\r\n  } \r\n```\r\nit looks the excast same but it makes it into a call function script i dont know if that was intended but its now saying it dont recognize the function and i have absolutely no clue what to do to make a function work any help will be appreciated \r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>hey hegemonkhan thank you for your help. i toticed you gave me the fixed code of</p>\n<pre><code>if (Got(KNIFE)) {\n  HUMAN.HP = HUMAN.HP -  player.attack\n  if (HUMAN.HP &lt; 1) {\n    MoveObject (HUMAN, TRASH CAN)\n    msg (\"The human has died and gone to a better place\")\n  }\n} else {\n  player.hp = player.hp - 2\n  // not sure if how you want to handle this as not sure exactly what design/method you're doing (look at the 'HUMAN.HP' above)\n}\n</code></pre>\n<p>well i copy pasted that into the code view of the editor and it changed the code to  me writing a call function<br>\nheres what the code looks like</p>\n<pre><code>if (Got(KNIFE)) {\n  HUMAN.HP = HUMAN.HP -  player.attack\n  if (HUMAN.HP &lt; 1) {\n    MoveObject (HUMAN, TRASH CAN)\n    msg (\"The human has died and gone to a better place\")\n  } \n</code></pre>\n<p>it looks the excast same but it makes it into a call function script i dont know if that was intended but its now saying it dont recognize the function and i have absolutely no clue what to do to make a function work any help will be appreciated</p>\n\n",
      "PostDate": "2018-08-29T12:37:37.6306259Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ed43d8c9-f7b4-465f-ba1f-c4bf12fa9481",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "2 open braces {\r\nbut only 1 close }\r\n\r\nToo easy to over look in an unforgiving language like Quest...\r\nBASIC does not have that problem... Just different ones...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>2 open braces {<br>\nbut only 1 close }</p>\n<p>Too easy to over look in an unforgiving language like Quest...<br>\nBASIC does not have that problem... Just different ones...</p>\n\n",
      "PostDate": "2018-08-29T20:33:14.500072Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "16a68305-7193-4b87-9fa9-417551e2b13c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ Left Unscarred:\r\n\r\nlet's create a new text adventure game, to practice/learn how to do simple combat, so, you can understand at how to do this stuff correctly.\r\n\r\n1. create a new text adventure game\r\n\r\n2. save it as whatever, and save it somewhere you can easily find it (such as the desktop)\r\n\r\n3. create/add the needed Attributes for simple combat to your 'player' Player Object:\r\n\r\n'player' Player Object -> 'Attributes' Tab -> Attributes (box at the bottom) -> Add -> (see below)\r\n\r\n(Object Name: player)\r\nAttribute Name: currency\r\nAttribute Type: int\r\nAttribute Value: 0\r\n\r\n(Object Name: player)\r\nAttribute Name: condition\r\nAttribute Type: string\r\nAttribute Value: normal\r\n\r\n(Object Name: player)\r\nAttribute Name: life\r\nAttribute Type: string\r\nAttribute Value: 999/999\r\n\r\n(Object Name: player)\r\nAttribute Name: life_current\r\nAttribute Type: int\r\nAttribute Value: 999\r\n\r\n(Object Type Name: character_type)\r\nAttribute Name: life_minimum\r\nAttribute Type: int\r\nAttribute Value: 0\r\n\r\n(Object Name: player)\r\nAttribute Name: life_maximum\r\nAttribute Type: int\r\nAttribute Value: 999\r\n\r\n(Object Name: player)\r\nAttribute Name: weapon_alias\r\nAttribute Type: string\r\nAttribute Value: unarmed\r\n\r\n(Object Name: player)\r\nAttribute Name: weapon\r\nAttribute Type: object\r\nAttribute Value: unarmed // we need to create/add an 'unarmed' Object, we'll do/cover this further down\r\n\r\n(Object Name: player)\r\nAttribute Name: changedweapon\r\nAttribute Type: script\r\nAttribute Value: (see below, click on the 'code view' button in the script button menu at the bottom of the screen to go into code view for this specific Script Attribute, so you can just copy and paste my code below into it)\r\n\r\n```\r\nthis.weapon_alias = GetDisplayAlias (this.weapon.name)\r\n```\r\n\r\n(Object Name: player)\r\nAttribute Name: changedlife_current\r\nAttribute Type: script\r\nAttribute Value: (see below, click on the 'code view' button in the script button menu at the bottom of the screen to go into code view for this specific Script Attribute, so you can just copy and paste my code below into it)\r\n\r\n```\r\nif (this.life_current > this.life_maximum) {\r\n  this.life_current = this.life_maximum\r\n} else if (this.life_current < this.life_minimum) {\r\n  this.life_current = this.life_minimum\r\n}\r\n\r\nthis.life = this.life_current + \"/\" + this.life_maximum\r\n\r\nif (this.life_current = this.life_minimum) {\r\n  this.condition = \"dead\"\r\n  msg (\"You're dead\")\r\n}\r\n```\r\n\r\n(Object Name: player)\r\nAttribute Name: changedlife_maximum\r\nAttribute Type: script\r\nAttribute Value: (see below, click on the 'code view' button in the script button menu at the bottom of the screen to go into code view for this specific Script Attribute, so you can just copy and paste my code below into it)\r\n\r\n```\r\nif (this.life_maximum <= this.life_minimum) {\r\n  msg (\"ERROR: game.pov.life_maximum can't be lesser than or equal to game.pov.life_minimum\")\r\n  finish\r\n} else if (this.life_current > this.life_maximum) {\r\n  this.life_current = this.life_maximum\r\n}\r\n\r\nthis.life = this.life_current + \"/\" + this.life_maximum\r\n```\r\n\r\n(Object Name: player)\r\nAttribute Name: changedlife_minimum\r\nAttribute Type: script\r\nAttribute Value: (see below, click on the 'code view' button in the script button menu at the bottom of the screen to go into code view for this specific Script Attribute, so you can just copy and paste my code below into it)\r\n\r\n```\r\nif (this.life_minimum >= this.life_maximum) {\r\n  msg (\"ERROR: game.pov.life_minimum can't be greater than or equal to game.pov.life_maximum\")\r\n  finish\r\n}\r\n```\r\n\r\n'player' Player Object -> 'Attributes' Tab -> Status Attributes (box at the top) -> Add -> (see below, repeat as needed)\r\n\r\n(Object Name: player)\r\n(Status Attribute Item 1)\r\n(item 1 input: key, as a string): Attribute Name: life\r\n(item 1 output: value, as a string): Format String: Life: !\r\n\r\n(Object Name: player)\r\n(Status Attribute Item 2)\r\n(item 2 input: key, as a string): Attribute Name: currency\r\n(item 2 output: value, as a string): Format String: Currency: !\r\n\r\n(Object Name: player)\r\n(Status Attribute Item 3)\r\n(item 3 input: key, as a string): Attribute Name: condition\r\n(item 3 output: value, as a string): Format String: Condition: !\r\n\r\n(Object Name: player)\r\n(Status Attribute Item 4)\r\n(item 4 input: key, as a string): Attribute Name: weapon_string\r\n(item 4 output: value, as a string): Format String: Weapon: !\r\n\r\n4. create/add the needed Objects for our simple combat:\r\n\r\n'room' Room Object -> 'Objects' Tab -> Add -> (see below, repeat as needed)\r\n\r\nObject Name: katana\r\nObject Name: club\r\nObject Name: orc\r\n\r\n'Objects' main/root/top Object (we do NOT want to add the 'unarmed' Object to a Room Object, nor to another other Object) -> 'Objects' Tab -> Add -> (see below, repeat as needed)\r\n\r\nObject Name: unarmed\r\n\r\nfor all of these 4 Objects, set them as:\r\n\r\n'(unarmed/katana/club/orc)' Object -> 'Setup' Tab -> Type: Object\r\n\r\n5. create/add the needed Attributes for simple combat to your 'orc' enemy/monster/hostile-npc Object:\r\n\r\n'orc' Object -> 'Attributes' Tab -> Attributes (box at the bottom) -> Add -> (see below, repeat as needed)\r\n\r\n(Object Name: orc)\r\nAttribute Name: currency\r\nAttribute Type: int\r\nAttribute Value: 100\r\n\r\n(Object Name: orc)\r\nAttribute Name: condition\r\nAttribute Type: string\r\nAttribute Value: normal\r\n\r\n(Object Name: orc)\r\nAttribute Name: weapon\r\nAttribute Type: object\r\nAttribute Value: club\r\n\r\n(Object Name: orc)\r\nAttribute Name: life_current\r\nAttribute Type: int\r\nAttribute Value: 500\r\n\r\n(Object Name: orc)\r\nAttribute Name: life_maximum\r\nAttribute Type: int\r\nAttribute Value: 500\r\n\r\n(Object Name: orc)\r\nAttribute Name: life_minimum\r\nAttribute Type: int\r\nAttribute Value: 0\r\n\r\n5. create/add the needed Verb for simple combat to your 'orc' enemy/monster/hostile-npc Object:\r\n\r\n'orc' Object -> 'verbs' Tab -> Add -> (see below, repeat as needed)\r\n\r\nVerb Name: fight\r\n\r\nchange the drop-down box to: [run a script]\r\n\r\n(see below, click on the 'code view' button in the script button menu at the bottom of the screen to go into code view for this specific Script Attribute, so you can just copy and paste my code below into it)\r\n\r\n```\r\nif (game.pov.condition = \"dead\") {\r\n  msg (\"You are dead, silly\")\r\n} else if (this.condition = \"dead\") {\r\n  msg (\"The \" + GetDisplayAlias (this.name) + \" is already dead, silly\")\r\n} else {\r\n  ClearScreen\r\n  msg (\"Player's Life: \" + game.pov.life)\r\n  msg (GetDisplayAlias (this.name) + \"'s Life: \" + this.life_current + \"/\" + this.life_maximum)\r\n  this.life_current = this.life_current - game.pov.weapon.damage\r\n  msg (\"You attack the \" + GetDisplayAlias (this.name) with your \" + game.pov.weapon.name + \", doing \" + game.pov.weapon.damage + \" damage to the \" + GetDisplayAlias (this.name))\r\n  msg (\"Player's Life: \" + game.pov.life)\r\n  msg (GetDisplayAlias (this.name) + \"'s Life: \" + this.life_current + \"/\" + this.life_maximum)\r\n  if (this.life_current < this.life_minimum) {\r\n    this.life_current = this.life_minimum\r\n  }\r\n  if (this.life_current = this.life_minimum) {\r\n    this.condition = \"dead\"\r\n    msg (\"You killed the \" + GetDisplayAlias (this.name) + \"!\")\r\n  } else {\r\n    game.pov.life_current = game.pov.life_current - this.weapon.damage\r\n    msg (\"The \" + GetDisplayAlias (this.name) + \" attacks you with its \" + GetDisplayAlias (this.weapon.name) + \", doing \" + this.weapon.damage + \" damage to you\")\r\n    if (game.pov.condition = \"dead\") {\r\n      msg (\"The \" + GetDisplayAlias (this.name) + \" killed you!\")\r\n    } else {\r\n      invoke (this.fight) // this calls/does/activates the 'fight' Verb (which is actually a 'fight' Script Attribute of the 'this' (this = orc) Object: this.fight, but which also has extra code for Verb functionality) again: we're looping the 'this.fight' Verb/Script_Attribute, which will continue until one of you is dead\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nVerb Name: loot\r\n\r\nchange the drop-down box to: [run a script]\r\n\r\n(see below, click on the 'code view' button in the script button menu at the bottom of the screen to go into code view for this specific Script Attribute, so you can just copy and paste my code below into it)\r\n\r\n```\r\nif (this.condition = \"dead\") {\r\n  firsttime {\r\n    weapon_variable = this.weapon\r\n    MoveObject (weapon_variable, player)\r\n    this.weapon = unarmed\r\n    game.pov.currency = game.pov.currency + this.currency\r\n    this.currency = 0\r\n    msg (\"You loot the dead \" + GetDisplayAlias (this.name) + \"'s corpse, taking its \" + GetDisplayAlias (this.weapon.name) + \", and its + this.currency + \" currency\")\r\n  } otherwise {\r\n    msg (\"You already looted the dead \" + GetDisplayAlias (this.name) + \"'s corpse, silly\")\r\n  }\r\n} else {\r\n  msg (\"The \" + GetDisplayAlias (this.name) + \"'s  still alive, silly\")\r\n}\r\n```\r\n\r\n6. removing the default 'take' Verb from the 'orc' Object:\r\n\r\n'orc' Object -> 'Object' Tab -> Display Verbs -> Take -> Delete\r\n\r\n7. create/add the needed Attributes for simple combat to the 'unarmed', 'katana', and 'club' Objects:\r\n\r\n'(unarmed/katana/club)' Object -> 'Attributes' Tab -> Attributes (box at the bottom) -> Add -> (see below, repeat as needed)\r\n\r\n(Object Name: unarmed)\r\nAttribute Name: damage\r\nAttribute Type: int\r\nAttribute Value: 10\r\n\r\n(Object Name: club)\r\nAttribute Name: damage\r\nAttribute Type: int\r\nAttribute Value: 50\r\n\r\n(Object Name: katana)\r\nAttribute Name: damage\r\nAttribute Type: int\r\nAttribute Value: 100\r\n\r\n7. create/add the needed Verbs for simple combat to the 'unarmed', 'katana', and 'club' Objects:\r\n\r\n'(unarmed/katana/club)' Object -> 'Verbs' Tab -> Add -> (see below, repeat as needed)\r\n\r\nVerb Name: equip\r\n\r\nchange the drop-down box to: [run a script]\r\n\r\n(see below, click on the 'code view' button in the script button menu at the bottom of the screen to go into code view for this specific Script Attribute, so you can just copy and paste my code below into it)\r\n\r\n```\r\nlist add (player.weapon.inventoryverbs, \"equip\")\r\nlist remove (player.weapon.inventoryverbs, \"unequip\")\r\nlist add (player.weapon.inventoryverbs, \"drop\")\r\nif (not this.parent = game.pov.name and not this = unarmed) {\r\n  MoveObject (this.name, game.pov.name)\r\n}\r\ngame.pov.weapon = this\r\nlist remove (this.inventoryverbs, \"equip\")\r\nlist remove (this.inventoryverbs, \"drop\")\r\nif (not this = unarmed) {\r\n  list add (this.inventoryverbs, \"unequip\")\r\n}\r\nmsg (\"You equip the \" + GetDisplayAlias (this) + \" weapon\")\r\n```\r\n\r\nVerb Name: unequip\r\n\r\n(do NOT add this 'unequip' Verb to the 'unarmed' Object)\r\n\r\nchange the drop-down box to: [run a script]\r\n\r\n(see below, click on the 'code view' button in the script button menu at the bottom of the screen to go into code view for this specific Script Attribute, so you can just copy and paste my code below into it)\r\n\r\n```\r\nlist add (this.inventoryverbs, \"equip\")\r\nlist remove (this.inventoryverbs, \"unequip\")\r\nlist add (this.inventoryverbs, \"drop\")\r\nthis.weapon = unarmed\r\nmsg (\"You unequip the \" + this.name + \" weapon\")\r\n```\r\n\r\n----------\r\n\r\nhopefully this is complete and there's no errors... HK crosses his fingers....\r\n\r\n(let me know if there's any issues with it!)",
      "EditableFormat": "markdown",
      "HTML": "<p>@ Left Unscarred:</p>\n<p>let's create a new text adventure game, to practice/learn how to do simple combat, so, you can understand at how to do this stuff correctly.</p>\n<ol>\n<li>\n<p>create a new text adventure game</p>\n</li>\n<li>\n<p>save it as whatever, and save it somewhere you can easily find it (such as the desktop)</p>\n</li>\n<li>\n<p>create/add the needed Attributes for simple combat to your 'player' Player Object:</p>\n</li>\n</ol>\n<p>'player' Player Object -&gt; 'Attributes' Tab -&gt; Attributes (box at the bottom) -&gt; Add -&gt; (see below)</p>\n<p>(Object Name: player)<br>\nAttribute Name: currency<br>\nAttribute Type: int<br>\nAttribute Value: 0</p>\n<p>(Object Name: player)<br>\nAttribute Name: condition<br>\nAttribute Type: string<br>\nAttribute Value: normal</p>\n<p>(Object Name: player)<br>\nAttribute Name: life<br>\nAttribute Type: string<br>\nAttribute Value: 999/999</p>\n<p>(Object Name: player)<br>\nAttribute Name: life_current<br>\nAttribute Type: int<br>\nAttribute Value: 999</p>\n<p>(Object Type Name: character_type)<br>\nAttribute Name: life_minimum<br>\nAttribute Type: int<br>\nAttribute Value: 0</p>\n<p>(Object Name: player)<br>\nAttribute Name: life_maximum<br>\nAttribute Type: int<br>\nAttribute Value: 999</p>\n<p>(Object Name: player)<br>\nAttribute Name: weapon_alias<br>\nAttribute Type: string<br>\nAttribute Value: unarmed</p>\n<p>(Object Name: player)<br>\nAttribute Name: weapon<br>\nAttribute Type: object<br>\nAttribute Value: unarmed // we need to create/add an 'unarmed' Object, we'll do/cover this further down</p>\n<p>(Object Name: player)<br>\nAttribute Name: changedweapon<br>\nAttribute Type: script<br>\nAttribute Value: (see below, click on the 'code view' button in the script button menu at the bottom of the screen to go into code view for this specific Script Attribute, so you can just copy and paste my code below into it)</p>\n<pre><code>this.weapon_alias = GetDisplayAlias (this.weapon.name)\n</code></pre>\n<p>(Object Name: player)<br>\nAttribute Name: changedlife_current<br>\nAttribute Type: script<br>\nAttribute Value: (see below, click on the 'code view' button in the script button menu at the bottom of the screen to go into code view for this specific Script Attribute, so you can just copy and paste my code below into it)</p>\n<pre><code>if (this.life_current &gt; this.life_maximum) {\n  this.life_current = this.life_maximum\n} else if (this.life_current &lt; this.life_minimum) {\n  this.life_current = this.life_minimum\n}\n\nthis.life = this.life_current + \"/\" + this.life_maximum\n\nif (this.life_current = this.life_minimum) {\n  this.condition = \"dead\"\n  msg (\"You're dead\")\n}\n</code></pre>\n<p>(Object Name: player)<br>\nAttribute Name: changedlife_maximum<br>\nAttribute Type: script<br>\nAttribute Value: (see below, click on the 'code view' button in the script button menu at the bottom of the screen to go into code view for this specific Script Attribute, so you can just copy and paste my code below into it)</p>\n<pre><code>if (this.life_maximum &lt;= this.life_minimum) {\n  msg (\"ERROR: game.pov.life_maximum can't be lesser than or equal to game.pov.life_minimum\")\n  finish\n} else if (this.life_current &gt; this.life_maximum) {\n  this.life_current = this.life_maximum\n}\n\nthis.life = this.life_current + \"/\" + this.life_maximum\n</code></pre>\n<p>(Object Name: player)<br>\nAttribute Name: changedlife_minimum<br>\nAttribute Type: script<br>\nAttribute Value: (see below, click on the 'code view' button in the script button menu at the bottom of the screen to go into code view for this specific Script Attribute, so you can just copy and paste my code below into it)</p>\n<pre><code>if (this.life_minimum &gt;= this.life_maximum) {\n  msg (\"ERROR: game.pov.life_minimum can't be greater than or equal to game.pov.life_maximum\")\n  finish\n}\n</code></pre>\n<p>'player' Player Object -&gt; 'Attributes' Tab -&gt; Status Attributes (box at the top) -&gt; Add -&gt; (see below, repeat as needed)</p>\n<p>(Object Name: player)<br>\n(Status Attribute Item 1)<br>\n(item 1 input: key, as a string): Attribute Name: life<br>\n(item 1 output: value, as a string): Format String: Life: !</p>\n<p>(Object Name: player)<br>\n(Status Attribute Item 2)<br>\n(item 2 input: key, as a string): Attribute Name: currency<br>\n(item 2 output: value, as a string): Format String: Currency: !</p>\n<p>(Object Name: player)<br>\n(Status Attribute Item 3)<br>\n(item 3 input: key, as a string): Attribute Name: condition<br>\n(item 3 output: value, as a string): Format String: Condition: !</p>\n<p>(Object Name: player)<br>\n(Status Attribute Item 4)<br>\n(item 4 input: key, as a string): Attribute Name: weapon_string<br>\n(item 4 output: value, as a string): Format String: Weapon: !</p>\n<ol start=\"4\">\n<li>create/add the needed Objects for our simple combat:</li>\n</ol>\n<p>'room' Room Object -&gt; 'Objects' Tab -&gt; Add -&gt; (see below, repeat as needed)</p>\n<p>Object Name: katana<br>\nObject Name: club<br>\nObject Name: orc</p>\n<p>'Objects' main/root/top Object (we do NOT want to add the 'unarmed' Object to a Room Object, nor to another other Object) -&gt; 'Objects' Tab -&gt; Add -&gt; (see below, repeat as needed)</p>\n<p>Object Name: unarmed</p>\n<p>for all of these 4 Objects, set them as:</p>\n<p>'(unarmed/katana/club/orc)' Object -&gt; 'Setup' Tab -&gt; Type: Object</p>\n<ol start=\"5\">\n<li>create/add the needed Attributes for simple combat to your 'orc' enemy/monster/hostile-npc Object:</li>\n</ol>\n<p>'orc' Object -&gt; 'Attributes' Tab -&gt; Attributes (box at the bottom) -&gt; Add -&gt; (see below, repeat as needed)</p>\n<p>(Object Name: orc)<br>\nAttribute Name: currency<br>\nAttribute Type: int<br>\nAttribute Value: 100</p>\n<p>(Object Name: orc)<br>\nAttribute Name: condition<br>\nAttribute Type: string<br>\nAttribute Value: normal</p>\n<p>(Object Name: orc)<br>\nAttribute Name: weapon<br>\nAttribute Type: object<br>\nAttribute Value: club</p>\n<p>(Object Name: orc)<br>\nAttribute Name: life_current<br>\nAttribute Type: int<br>\nAttribute Value: 500</p>\n<p>(Object Name: orc)<br>\nAttribute Name: life_maximum<br>\nAttribute Type: int<br>\nAttribute Value: 500</p>\n<p>(Object Name: orc)<br>\nAttribute Name: life_minimum<br>\nAttribute Type: int<br>\nAttribute Value: 0</p>\n<ol start=\"5\">\n<li>create/add the needed Verb for simple combat to your 'orc' enemy/monster/hostile-npc Object:</li>\n</ol>\n<p>'orc' Object -&gt; 'verbs' Tab -&gt; Add -&gt; (see below, repeat as needed)</p>\n<p>Verb Name: fight</p>\n<p>change the drop-down box to: [run a script]</p>\n<p>(see below, click on the 'code view' button in the script button menu at the bottom of the screen to go into code view for this specific Script Attribute, so you can just copy and paste my code below into it)</p>\n<pre><code>if (game.pov.condition = \"dead\") {\n  msg (\"You are dead, silly\")\n} else if (this.condition = \"dead\") {\n  msg (\"The \" + GetDisplayAlias (this.name) + \" is already dead, silly\")\n} else {\n  ClearScreen\n  msg (\"Player's Life: \" + game.pov.life)\n  msg (GetDisplayAlias (this.name) + \"'s Life: \" + this.life_current + \"/\" + this.life_maximum)\n  this.life_current = this.life_current - game.pov.weapon.damage\n  msg (\"You attack the \" + GetDisplayAlias (this.name) with your \" + game.pov.weapon.name + \", doing \" + game.pov.weapon.damage + \" damage to the \" + GetDisplayAlias (this.name))\n  msg (\"Player's Life: \" + game.pov.life)\n  msg (GetDisplayAlias (this.name) + \"'s Life: \" + this.life_current + \"/\" + this.life_maximum)\n  if (this.life_current &lt; this.life_minimum) {\n    this.life_current = this.life_minimum\n  }\n  if (this.life_current = this.life_minimum) {\n    this.condition = \"dead\"\n    msg (\"You killed the \" + GetDisplayAlias (this.name) + \"!\")\n  } else {\n    game.pov.life_current = game.pov.life_current - this.weapon.damage\n    msg (\"The \" + GetDisplayAlias (this.name) + \" attacks you with its \" + GetDisplayAlias (this.weapon.name) + \", doing \" + this.weapon.damage + \" damage to you\")\n    if (game.pov.condition = \"dead\") {\n      msg (\"The \" + GetDisplayAlias (this.name) + \" killed you!\")\n    } else {\n      invoke (this.fight) // this calls/does/activates the 'fight' Verb (which is actually a 'fight' Script Attribute of the 'this' (this = orc) Object: this.fight, but which also has extra code for Verb functionality) again: we're looping the 'this.fight' Verb/Script_Attribute, which will continue until one of you is dead\n    }\n  }\n}\n</code></pre>\n<p>Verb Name: loot</p>\n<p>change the drop-down box to: [run a script]</p>\n<p>(see below, click on the 'code view' button in the script button menu at the bottom of the screen to go into code view for this specific Script Attribute, so you can just copy and paste my code below into it)</p>\n<pre><code>if (this.condition = \"dead\") {\n  firsttime {\n    weapon_variable = this.weapon\n    MoveObject (weapon_variable, player)\n    this.weapon = unarmed\n    game.pov.currency = game.pov.currency + this.currency\n    this.currency = 0\n    msg (\"You loot the dead \" + GetDisplayAlias (this.name) + \"'s corpse, taking its \" + GetDisplayAlias (this.weapon.name) + \", and its + this.currency + \" currency\")\n  } otherwise {\n    msg (\"You already looted the dead \" + GetDisplayAlias (this.name) + \"'s corpse, silly\")\n  }\n} else {\n  msg (\"The \" + GetDisplayAlias (this.name) + \"'s  still alive, silly\")\n}\n</code></pre>\n<ol start=\"6\">\n<li>removing the default 'take' Verb from the 'orc' Object:</li>\n</ol>\n<p>'orc' Object -&gt; 'Object' Tab -&gt; Display Verbs -&gt; Take -&gt; Delete</p>\n<ol start=\"7\">\n<li>create/add the needed Attributes for simple combat to the 'unarmed', 'katana', and 'club' Objects:</li>\n</ol>\n<p>'(unarmed/katana/club)' Object -&gt; 'Attributes' Tab -&gt; Attributes (box at the bottom) -&gt; Add -&gt; (see below, repeat as needed)</p>\n<p>(Object Name: unarmed)<br>\nAttribute Name: damage<br>\nAttribute Type: int<br>\nAttribute Value: 10</p>\n<p>(Object Name: club)<br>\nAttribute Name: damage<br>\nAttribute Type: int<br>\nAttribute Value: 50</p>\n<p>(Object Name: katana)<br>\nAttribute Name: damage<br>\nAttribute Type: int<br>\nAttribute Value: 100</p>\n<ol start=\"7\">\n<li>create/add the needed Verbs for simple combat to the 'unarmed', 'katana', and 'club' Objects:</li>\n</ol>\n<p>'(unarmed/katana/club)' Object -&gt; 'Verbs' Tab -&gt; Add -&gt; (see below, repeat as needed)</p>\n<p>Verb Name: equip</p>\n<p>change the drop-down box to: [run a script]</p>\n<p>(see below, click on the 'code view' button in the script button menu at the bottom of the screen to go into code view for this specific Script Attribute, so you can just copy and paste my code below into it)</p>\n<pre><code>list add (player.weapon.inventoryverbs, \"equip\")\nlist remove (player.weapon.inventoryverbs, \"unequip\")\nlist add (player.weapon.inventoryverbs, \"drop\")\nif (not this.parent = game.pov.name and not this = unarmed) {\n  MoveObject (this.name, game.pov.name)\n}\ngame.pov.weapon = this\nlist remove (this.inventoryverbs, \"equip\")\nlist remove (this.inventoryverbs, \"drop\")\nif (not this = unarmed) {\n  list add (this.inventoryverbs, \"unequip\")\n}\nmsg (\"You equip the \" + GetDisplayAlias (this) + \" weapon\")\n</code></pre>\n<p>Verb Name: unequip</p>\n<p>(do NOT add this 'unequip' Verb to the 'unarmed' Object)</p>\n<p>change the drop-down box to: [run a script]</p>\n<p>(see below, click on the 'code view' button in the script button menu at the bottom of the screen to go into code view for this specific Script Attribute, so you can just copy and paste my code below into it)</p>\n<pre><code>list add (this.inventoryverbs, \"equip\")\nlist remove (this.inventoryverbs, \"unequip\")\nlist add (this.inventoryverbs, \"drop\")\nthis.weapon = unarmed\nmsg (\"You unequip the \" + this.name + \" weapon\")\n</code></pre>\n<hr>\n<p>hopefully this is complete and there's no errors... HK crosses his fingers....</p>\n<p>(let me know if there's any issues with it!)</p>\n\n",
      "PostDate": "2018-08-30T04:05:17.134251Z",
      "LastEditDate": "2018-08-30T04:34:02.9154138Z",
      "link": null
    }
  ]
}
