{
  "Topic": {
    "TopicId": "6301",
    "ForumId": "10",
    "Title": "Using a string for an object name",
    "LastUpdated": "2016-05-09T05:11:36+01:00",
    "ReplyCount": 4
  },
  "Posts": [
    {
      "PostId": "42680",
      "UserId": 0,
      "Username": "puzzler7",
      "UserAvatar": null,
      "UserGravatar": "5e58b91937570b354f5df4ecc87f428b",
      "EditableText": "Hello!\nI'm new to Quest, and I'm starting to learn it. Right now I'm working on a teleporter. When used, it asks where the player wants to be teleported to. If the player asks for &quot;hallway&quot;, how do I convert the string &quot;hallway&quot; into the room &quot;hallway&quot;? Also, how do I check that the room the player asks for is valid i.e. exists?",
      "EditableFormat": "bbcode",
      "HTML": "Hello!<br/>I'm new to Quest, and I'm starting to learn it. Right now I'm working on a teleporter. When used, it asks where the player wants to be teleported to. If the player asks for &quot;hallway&quot;, how do I convert the string &quot;hallway&quot; into the room &quot;hallway&quot;? Also, how do I check that the room the player asks for is valid i.e. exists?",
      "PostDate": "2016-05-08T19:12:18+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42683",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "some of these things are a bit advanced... showing an example in code as it's quick and easy for me to do (I'm lazy), lol ...\n\n(if you don't know code, it'll take more time to walk you through using the GUI~Editor)\n\n(I'm not sure if this will work... as I'm not sure about the 'Getobject()' Function/Script... if not, there's the iteration method using ObjectLists)\n\n(another way to check if a room exists as well as a possibly desired additional condition, is the built-in 'visited' Boolean Attribute)\n\n[code:zf5yruj1]&lt;object name=&quot;room&quot;&gt;\n  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;room&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;player&quot;&gt;\n  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;pc&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;orc&quot;&gt;\n  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;npc&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;tree&quot;&gt;\n  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;tree&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;teleporter&quot;&gt;\n  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;teleporter&lt;/attr&gt;\n  &lt;attr name=&quot;teleport&quot; type=&quot;script&quot;&gt;\n    teleporter_function\n  &lt;/attr&gt;\n  &lt;attr name=&quot;displayverbs&quot; type=&quot;simplestringlist&quot;&gt;teleport&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;teleport&lt;/property&gt;\n  &lt;pattern&gt;teleport&lt;/pattern&gt;\n  &lt;defaultexpression&gt;Sorry, you can't teleport for whatever the reason&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n\n&lt;function name=&quot;teleporter_function&quot;&gt;\n  msg (&quot;Enter location&quot;)\n  get input {\n    if (not GetObject (result) = null and not player&#46;parent = GetObject (result) and GetString (GetObject (result), &quot;type_of_object&quot;) = &quot;room&quot;) {\n      player&#46;parent = GetObject (result)\n    } else if (GetObject (result) = null) {\n      msg (&quot;The object doesn't exist&quot;)\n    } else if (player&#46;parent = GetObject (result)) {\n      msg (&quot;You're already at this very location, silly&#46;&quot;)\n    } else {\n      msg (&quot;The object is not a room&#46;&quot;)\n    }\n  }\n&lt;/function&gt;[/code:zf5yruj1]\n\n----------\n\nexample using iteration/looping and Object List Attributes:\n\n[code:zf5yruj1]&lt;object name=&quot;room&quot;&gt;\n  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;room&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;player&quot;&gt;\n  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;pc&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;orc&quot;&gt;\n  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;npc&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;tree&quot;&gt;\n  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;tree&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;teleporter&quot;&gt;\n  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;teleporter&lt;/attr&gt;\n  &lt;attr name=&quot;teleport&quot; type=&quot;script&quot;&gt;\n    teleporter_function\n  &lt;/attr&gt;\n  &lt;attr name=&quot;displayverbs&quot; type=&quot;simplestringlist&quot;&gt;teleport&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;teleport&lt;/property&gt;\n  &lt;pattern&gt;teleport&lt;/pattern&gt;\n  &lt;defaultexpression&gt;Sorry, you can't teleport for whatever the reason&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n\n&lt;function name=&quot;teleporter_function&quot;&gt;\n  msg (&quot;Enter location&quot;)\n  get input {\n    foreach (object_variable, AllObjects()) {\n      if (object_variable = Getobject (result) and not player&#46;parent = GetObject (result) and GetString (GetObject (result), &quot;type_of_object&quot;) = &quot;room&quot;) {\n        player&#46;parent = GetObject (result)\n      }\n    }\n    if (GetObject (result) = null) {\n      msg (&quot;The object doesn't exist&quot;)\n    } else if (player&#46;parent = GetObject (result)) {\n      msg (&quot;You're already at this very location, silly&#46;&quot;)\n    } else {\n      msg (&quot;The object is not a room&#46;&quot;)\n    }\n  }\n&lt;/function&gt;[/code:zf5yruj1]",
      "EditableFormat": "bbcode",
      "HTML": "some of these things are a bit advanced... showing an example in code as it's quick and easy for me to do (I'm lazy), lol ...<br/><br/>(if you don't know code, it'll take more time to walk you through using the GUI~Editor)<br/><br/>(I'm not sure if this will work... as I'm not sure about the 'Getobject()' Function/Script... if not, there's the iteration method using ObjectLists)<br/><br/>(another way to check if a room exists as well as a possibly desired additional condition, is the built-in 'visited' Boolean Attribute)<br/><br/><pre><code>&lt;object name=&quot;room&quot;&gt;<br/>  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;room&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;pc&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;orc&quot;&gt;<br/>  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;npc&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;tree&quot;&gt;<br/>  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;tree&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;teleporter&quot;&gt;<br/>  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;teleporter&lt;/attr&gt;<br/>  &lt;attr name=&quot;teleport&quot; type=&quot;script&quot;&gt;<br/>    teleporter_function<br/>  &lt;/attr&gt;<br/>  &lt;attr name=&quot;displayverbs&quot; type=&quot;simplestringlist&quot;&gt;teleport&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;verb&gt;<br/>  &lt;property&gt;teleport&lt;/property&gt;<br/>  &lt;pattern&gt;teleport&lt;/pattern&gt;<br/>  &lt;defaultexpression&gt;Sorry, you can't teleport for whatever the reason&lt;/defaultexpression&gt;<br/>&lt;/verb&gt;<br/><br/>&lt;function name=&quot;teleporter_function&quot;&gt;<br/>  msg (&quot;Enter location&quot;)<br/>  get input {<br/>    if (not GetObject (result) = null and not player&#46;parent = GetObject (result) and GetString (GetObject (result), &quot;type_of_object&quot;) = &quot;room&quot;) {<br/>      player&#46;parent = GetObject (result)<br/>    } else if (GetObject (result) = null) {<br/>      msg (&quot;The object doesn't exist&quot;)<br/>    } else if (player&#46;parent = GetObject (result)) {<br/>      msg (&quot;You're already at this very location, silly&#46;&quot;)<br/>    } else {<br/>      msg (&quot;The object is not a room&#46;&quot;)<br/>    }<br/>  }<br/>&lt;/function&gt;</code></pre><br/><br/>----------<br/><br/>example using iteration/looping and Object List Attributes:<br/><br/><pre><code>&lt;object name=&quot;room&quot;&gt;<br/>  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;room&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;pc&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;orc&quot;&gt;<br/>  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;npc&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;tree&quot;&gt;<br/>  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;tree&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;teleporter&quot;&gt;<br/>  &lt;attr name=&quot;type_of_object&quot; type=&quot;string&quot;&gt;teleporter&lt;/attr&gt;<br/>  &lt;attr name=&quot;teleport&quot; type=&quot;script&quot;&gt;<br/>    teleporter_function<br/>  &lt;/attr&gt;<br/>  &lt;attr name=&quot;displayverbs&quot; type=&quot;simplestringlist&quot;&gt;teleport&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;verb&gt;<br/>  &lt;property&gt;teleport&lt;/property&gt;<br/>  &lt;pattern&gt;teleport&lt;/pattern&gt;<br/>  &lt;defaultexpression&gt;Sorry, you can't teleport for whatever the reason&lt;/defaultexpression&gt;<br/>&lt;/verb&gt;<br/><br/>&lt;function name=&quot;teleporter_function&quot;&gt;<br/>  msg (&quot;Enter location&quot;)<br/>  get input {<br/>    foreach (object_variable, AllObjects()) {<br/>      if (object_variable = Getobject (result) and not player&#46;parent = GetObject (result) and GetString (GetObject (result), &quot;type_of_object&quot;) = &quot;room&quot;) {<br/>        player&#46;parent = GetObject (result)<br/>      }<br/>    }<br/>    if (GetObject (result) = null) {<br/>      msg (&quot;The object doesn't exist&quot;)<br/>    } else if (player&#46;parent = GetObject (result)) {<br/>      msg (&quot;You're already at this very location, silly&#46;&quot;)<br/>    } else {<br/>      msg (&quot;The object is not a room&#46;&quot;)<br/>    }<br/>  }<br/>&lt;/function&gt;</code></pre>",
      "PostDate": "2016-05-08T20:15:39+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42687",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "I would recommend iterating through everything; HK's second method. It is not straightforward, but here is how I would do it (again in code).\n[code:1sul83ia]get input {\n  result = LCase(result)\n  handled = false\n  foreach (o, AllObjects()) {\n    if (LCase(o&#46;name) = result and not ListCount(ScopeExitsForRoom(o)) = 0) {\n      handled = true\n      player&#46;parent = o\n    }\n  }\n  if (not handled) {\n    msg (&quot;I don't know where &quot; + result + &quot; is&quot;)\n  }\n}[/code:1sul83ia]\nI put everything inlower case so it is case insensitive. There is a flag called handled that we can test to see if a message is required to say that it failed. I check the object has at least one exit; this is probably the best way to check it is a room, not an item (there is nothing built-in bizarrely). It checks the object name, so does not allow you to use aliases,",
      "EditableFormat": "bbcode",
      "HTML": "I would recommend iterating through everything; HK's second method. It is not straightforward, but here is how I would do it (again in code).<br/><pre><code>get input {<br/>  result = LCase(result)<br/>  handled = false<br/>  foreach (o, AllObjects()) {<br/>    if (LCase(o&#46;name) = result and not ListCount(ScopeExitsForRoom(o)) = 0) {<br/>      handled = true<br/>      player&#46;parent = o<br/>    }<br/>  }<br/>  if (not handled) {<br/>    msg (&quot;I don't know where &quot; + result + &quot; is&quot;)<br/>  }<br/>}</code></pre><br/>I put everything inlower case so it is case insensitive. There is a flag called handled that we can test to see if a message is required to say that it failed. I check the object has at least one exit; this is probably the best way to check it is a room, not an item (there is nothing built-in bizarrely). It checks the object name, so does not allow you to use aliases,",
      "PostDate": "2016-05-08T21:05:37+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42689",
      "UserId": 0,
      "Username": "puzzler7",
      "UserAvatar": null,
      "UserGravatar": "5e58b91937570b354f5df4ecc87f428b",
      "EditableText": "Ok, thank you! I don't know the Quest code (I'm using the GUI currently, but I plan to change that in the immediate future), but I have experience in Java and Python. This helps a lot.",
      "EditableFormat": "bbcode",
      "HTML": "Ok, thank you! I don't know the Quest code (I'm using the GUI currently, but I plan to change that in the immediate future), but I have experience in Java and Python. This helps a lot.",
      "PostDate": "2016-05-09T00:00:03+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42700",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Quest's syntax is more similar to c++/java's obviously (all the brackets used), unlike python's more stream-lined code (no brackets and all that stuff).\n\nsince you know code, just use quest's documentation (quest's coding, I think, is pretty easy to pick up, if you know coding already):\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/\">http://docs.textadventures.co.uk/quest/</a><!-- m -->\n\nexplore around the doc for what you need (or ask and we can navigate/link to what you're looking for)",
      "EditableFormat": "bbcode",
      "HTML": "Quest's syntax is more similar to c++/java's obviously (all the brackets used), unlike python's more stream-lined code (no brackets and all that stuff).<br/><br/>since you know code, just use quest's documentation (quest's coding, I think, is pretty easy to pick up, if you know coding already):<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/\">http://docs.textadventures.co.uk/quest/</a><!-- m --><br/><br/>explore around the doc for what you need (or ask and we can navigate/link to what you're looking for)",
      "PostDate": "2016-05-09T05:11:36+01:00",
      "LastEditDate": null
    }
  ]
}
