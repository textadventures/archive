{
  "Topic": {
    "TopicId": "bmaft_5vjee0zainnm6tkw",
    "ForumId": "10",
    "Title": "Asking YES or NO questions without 'get input' (or 'ask') - A complete waste of time?",
    "LastUpdated": "2021-05-13T20:31:35.6330426Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "f31d53ba-c74e-474c-b5b8-3b6f8428265f",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\r\n\r\n```\r\n  <command name=\"walk_around_cmd\">\r\n    <pattern>walk around;walk around #object#</pattern>\r\n    <synonyms type=\"stringlist\">\r\n      <value>walk</value>\r\n    </synonyms>\r\n    <script><![CDATA[\r\n      // <SETG AWAITING-REPLY 16>\r\n      // <ENABLE <QUEUE I-REPLY 2>>\r\n      // <TELL \"Did you have any particular direction in mind?\" CR>>\r\n      global.awaiting_reply = 16\r\n      EnableQueue (i_reply, 2)\r\n      msg (\"Did you have any particular direction in mind?\")\r\n    ]]></script>\r\n  </command>\r\n```\r\n```\r\n  <turnscript name=\"i_reply\">\r\n    <istyle />\r\n    <enabled type=\"boolean\">false</enabled>\r\n    <script>\r\n      global.awaiting_reply = 0\r\n    </script>\r\n  </turnscript>\r\n```\r\n\r\n```\r\n  <function name=\"EnableQueue\" parameters=\"turnscript, i\"><![CDATA[\r\n    turnscript.turncount = 0\r\n    if (not GetBoolean(turnscript, \"enabled\")) {\r\n      turnscript.enabled = true\r\n    }\r\n    turnscript.triggerturncount = i\r\n  ]]></function>\r\n```\r\n\r\n```\r\n  <function name=\"SetUpITurnscripts\"><![CDATA[\r\n    foreach (turnscript, ObjectListSort(AllTurnScripts(), \"name\")) {\r\n      if (GetBoolean(turnscript,\"istyle\")) {\r\n        turnscript.turncount = 0\r\n        turnscript.timeoutturnscript = turnscript.script\r\n        SetTurnScript (turnscript) {\r\n          if (not this.triggerturncount = -1) {\r\n            this.turncount = this.turncount + 1\r\n          }\r\n          if (this.triggerturncount = -1) {\r\n            invoke (this.timeoutturnscript)\r\n          }\r\n          else if (this.turncount = this.triggerturncount and not this.triggerturncount = -1) {\r\n            invoke (this.timeoutturnscript)\r\n            if (this.turncount = this.triggerturncount and not this.triggerturncount = -1) {\r\n              DisableTurnScript (this)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ]]></function>\r\n```\r\n\r\n```\r\n  <command name=\"yes_cmd\">\r\n    <pattern>yes;y</pattern>\r\n    <script>\r\n      switch (global.awaiting_reply) {\r\n        case (1) {\r\n          DoWalk (\"south\")\r\n        }\r\n        case (3) {\r\n          msg (\"Well, tough.\")\r\n        }\r\n        case (4) {\r\n          msg(\"TODO! Case 4\")\r\n          // take item dropped at party\r\n        }\r\n        case (5) {\r\n          msg (\"So do I.\")\r\n        }\r\n        case (6,8,11,13,14,15) {\r\n          msg (\"That was just a rhetorical question.\")\r\n        }\r\n        case (7,9) {\r\n          msg (\"Well, good for you!\")\r\n        }\r\n        case (10) {\r\n          Perform (enjoy_cmd, QuickParams(\"object\",Ford))\r\n        }\r\n        case (12) {\r\n          EnableQueue (i_engineer, 2)\r\n          msg (\"\\\"Well, let's see the malfunctioning equipment.\\\"\")\r\n        }\r\n        case (16) {\r\n          msg (\"Then type it.\")\r\n        }\r\n        case (18,19) {\r\n          msg (\"\\\"Well, leave me alone then! I'm busy!\\\"\")\r\n        }\r\n        default {\r\n          msg (\"You sound rather positive.\")\r\n        }\r\n      }\r\n    </script>\r\n  </command>\r\n```\r\n\r\n\r\n\r\n```\r\n  <command name=\"no_cmd\">\r\n    <pattern>no;negative</pattern>\r\n    <script>\r\n      switch (global.awaiting_reply) {\r\n        case (2) {\r\n          DoWalk (\"south\")\r\n        }\r\n        case (3,10) {\r\n          msg (\"I should think not.\")\r\n        }\r\n        case (4) {\r\n          msg (\"The word \\\"no\\\" is not in our hostess' vocabulary.\")\r\n        }\r\n        case (5) {\r\n          global.awaiting_reply = 3\r\n          invoke (yes_cmd.script)\r\n        }\r\n        case (6,11) {\r\n          global.awaiting_reply = 6\r\n          invoke (yes_cmd.script)\r\n        }\r\n        case (7,8,13,15) {\r\n          global.awaiting_reply = 3\r\n          invoke (yes_cmd.script)\r\n        }\r\n        case (9) {\r\n          msg (\"I disagree.\")\r\n        }\r\n        case (12) {\r\n          msg(\"TODO: Create EngineerLeave,engineer, and global.roars_off\")\r\n          // EngineerLeave\r\n          // msg(\"\\\"Think you're funny, huh?\\\" The \" + engineer.alias + global.roars_off + \", making sure to spray you with his Sub-Ethon exhaust.\")\r\n        }\r\n        case (14) {\r\n          msg (\"Then stop.\")\r\n        }\r\n        case (16) {\r\n          msg (\"I didn't think so.\")\r\n        }\r\n        case (18,19) {\r\n          invoke (yes_cmd.script)\r\n        }\r\n        default {\r\n          msg (\"You sound rather negative.\")\r\n        }\r\n      }\r\n    </script>\r\n  </command>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>  &lt;command name=\"walk_around_cmd\"&gt;\n    &lt;pattern&gt;walk around;walk around #object#&lt;/pattern&gt;\n    &lt;synonyms type=\"stringlist\"&gt;\n      &lt;value&gt;walk&lt;/value&gt;\n    &lt;/synonyms&gt;\n    &lt;script&gt;&lt;![CDATA[\n      // &lt;SETG AWAITING-REPLY 16&gt;\n      // &lt;ENABLE &lt;QUEUE I-REPLY 2&gt;&gt;\n      // &lt;TELL \"Did you have any particular direction in mind?\" CR&gt;&gt;\n      global.awaiting_reply = 16\n      EnableQueue (i_reply, 2)\n      msg (\"Did you have any particular direction in mind?\")\n    ]]&gt;&lt;/script&gt;\n  &lt;/command&gt;\n</code></pre>\n<pre><code>  &lt;turnscript name=\"i_reply\"&gt;\n    &lt;istyle /&gt;\n    &lt;enabled type=\"boolean\"&gt;false&lt;/enabled&gt;\n    &lt;script&gt;\n      global.awaiting_reply = 0\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n</code></pre>\n<pre><code>  &lt;function name=\"EnableQueue\" parameters=\"turnscript, i\"&gt;&lt;![CDATA[\n    turnscript.turncount = 0\n    if (not GetBoolean(turnscript, \"enabled\")) {\n      turnscript.enabled = true\n    }\n    turnscript.triggerturncount = i\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<pre><code>  &lt;function name=\"SetUpITurnscripts\"&gt;&lt;![CDATA[\n    foreach (turnscript, ObjectListSort(AllTurnScripts(), \"name\")) {\n      if (GetBoolean(turnscript,\"istyle\")) {\n        turnscript.turncount = 0\n        turnscript.timeoutturnscript = turnscript.script\n        SetTurnScript (turnscript) {\n          if (not this.triggerturncount = -1) {\n            this.turncount = this.turncount + 1\n          }\n          if (this.triggerturncount = -1) {\n            invoke (this.timeoutturnscript)\n          }\n          else if (this.turncount = this.triggerturncount and not this.triggerturncount = -1) {\n            invoke (this.timeoutturnscript)\n            if (this.turncount = this.triggerturncount and not this.triggerturncount = -1) {\n              DisableTurnScript (this)\n            }\n          }\n        }\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<pre><code>  &lt;command name=\"yes_cmd\"&gt;\n    &lt;pattern&gt;yes;y&lt;/pattern&gt;\n    &lt;script&gt;\n      switch (global.awaiting_reply) {\n        case (1) {\n          DoWalk (\"south\")\n        }\n        case (3) {\n          msg (\"Well, tough.\")\n        }\n        case (4) {\n          msg(\"TODO! Case 4\")\n          // take item dropped at party\n        }\n        case (5) {\n          msg (\"So do I.\")\n        }\n        case (6,8,11,13,14,15) {\n          msg (\"That was just a rhetorical question.\")\n        }\n        case (7,9) {\n          msg (\"Well, good for you!\")\n        }\n        case (10) {\n          Perform (enjoy_cmd, QuickParams(\"object\",Ford))\n        }\n        case (12) {\n          EnableQueue (i_engineer, 2)\n          msg (\"\\\"Well, let's see the malfunctioning equipment.\\\"\")\n        }\n        case (16) {\n          msg (\"Then type it.\")\n        }\n        case (18,19) {\n          msg (\"\\\"Well, leave me alone then! I'm busy!\\\"\")\n        }\n        default {\n          msg (\"You sound rather positive.\")\n        }\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n</code></pre>\n<pre><code>  &lt;command name=\"no_cmd\"&gt;\n    &lt;pattern&gt;no;negative&lt;/pattern&gt;\n    &lt;script&gt;\n      switch (global.awaiting_reply) {\n        case (2) {\n          DoWalk (\"south\")\n        }\n        case (3,10) {\n          msg (\"I should think not.\")\n        }\n        case (4) {\n          msg (\"The word \\\"no\\\" is not in our hostess' vocabulary.\")\n        }\n        case (5) {\n          global.awaiting_reply = 3\n          invoke (yes_cmd.script)\n        }\n        case (6,11) {\n          global.awaiting_reply = 6\n          invoke (yes_cmd.script)\n        }\n        case (7,8,13,15) {\n          global.awaiting_reply = 3\n          invoke (yes_cmd.script)\n        }\n        case (9) {\n          msg (\"I disagree.\")\n        }\n        case (12) {\n          msg(\"TODO: Create EngineerLeave,engineer, and global.roars_off\")\n          // EngineerLeave\n          // msg(\"\\\"Think you're funny, huh?\\\" The \" + engineer.alias + global.roars_off + \", making sure to spray you with his Sub-Ethon exhaust.\")\n        }\n        case (14) {\n          msg (\"Then stop.\")\n        }\n        case (16) {\n          msg (\"I didn't think so.\")\n        }\n        case (18,19) {\n          invoke (yes_cmd.script)\n        }\n        default {\n          msg (\"You sound rather negative.\")\n        }\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n</code></pre>\n\n",
      "PostDate": "2021-05-13T20:31:35.6330426Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bf1c3b00-8960-4a4b-a01f-1e0b90b7b57c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That seems quite a complex way of doing it; having a big 'switch' list like that is also prone to errors, as the same event is split between parallel lists in several places. It works if you have the whole game planned out in advance; but for most people I would say that keeping the code related to a particular event together is beneficial.\r\n\r\nI believe we already have a modification which allows the player to answer `ShowMenu` choices by typing in the option. In that case, it would be perfectly legitimate to use the existing menu options - you could put a script into `game.menucallback` without necessarily displaying a menu, and process the result there.\r\n\r\nAlternatively, you could make a separate \"yes\" or \"no\" command for each of these situations. Have them moved to the current location when the question is asked, and give them some flag so that a turnscript can put them away again after the player performs an action. I think this would be considerably simpler.\r\n\r\nOr even have `yes` and `no` commands, but instead of setting a flag, set the scripts directly:\r\n```\r\n  <command name=\"walk_around_cmd\">\r\n    <pattern>walk around;walk around #object#</pattern>\r\n    <synonyms type=\"stringlist\">\r\n      <value>walk</value>\r\n    </synonyms>\r\n    <script><![CDATA[\r\n      // <SETG AWAITING-REPLY 16>\r\n      // <ENABLE <QUEUE I-REPLY 2>>\r\n      // <TELL \"Did you have any particular direction in mind?\" CR>>\r\n      EnableQueue (i_reply, 2)\r\n      msg (\"Did you have any particular direction in mind?\")\r\n      yes_cmd.script => {\r\n        msg (\"Then type it.\")\r\n      }\r\n      no_cmd.script => {\r\n        msg (\"I didn't think so.\")\r\n      }\r\n    ]]></script>\r\n  </command>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>That seems quite a complex way of doing it; having a big 'switch' list like that is also prone to errors, as the same event is split between parallel lists in several places. It works if you have the whole game planned out in advance; but for most people I would say that keeping the code related to a particular event together is beneficial.</p>\n<p>I believe we already have a modification which allows the player to answer <code>ShowMenu</code> choices by typing in the option. In that case, it would be perfectly legitimate to use the existing menu options - you could put a script into <code>game.menucallback</code> without necessarily displaying a menu, and process the result there.</p>\n<p>Alternatively, you could make a separate \"yes\" or \"no\" command for each of these situations. Have them moved to the current location when the question is asked, and give them some flag so that a turnscript can put them away again after the player performs an action. I think this would be considerably simpler.</p>\n<p>Or even have <code>yes</code> and <code>no</code> commands, but instead of setting a flag, set the scripts directly:</p>\n<pre><code>  &lt;command name=\"walk_around_cmd\"&gt;\n    &lt;pattern&gt;walk around;walk around #object#&lt;/pattern&gt;\n    &lt;synonyms type=\"stringlist\"&gt;\n      &lt;value&gt;walk&lt;/value&gt;\n    &lt;/synonyms&gt;\n    &lt;script&gt;&lt;![CDATA[\n      // &lt;SETG AWAITING-REPLY 16&gt;\n      // &lt;ENABLE &lt;QUEUE I-REPLY 2&gt;&gt;\n      // &lt;TELL \"Did you have any particular direction in mind?\" CR&gt;&gt;\n      EnableQueue (i_reply, 2)\n      msg (\"Did you have any particular direction in mind?\")\n      yes_cmd.script =&gt; {\n        msg (\"Then type it.\")\n      }\n      no_cmd.script =&gt; {\n        msg (\"I didn't think so.\")\n      }\n    ]]&gt;&lt;/script&gt;\n  &lt;/command&gt;\n</code></pre>\n\n",
      "PostDate": "2021-05-14T09:02:22.8630815Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e2ddf61d-d10e-4acf-b44f-2536c867b95e",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> That seems quite a complex way of doing it; having a big 'switch' list like that is also prone to errors, as the same event is split between parallel lists in several places. It works if you have the whole game planned out in advance; but for most people I would say that keeping the code related to a particular event together is beneficial.\r\n\r\nYeah.\r\n\r\nThis code was written by Infocom. It was definitely planned out. (Most of it is in alphabetical order and stuff, too.)\r\n\r\n---\r\nOoh! I like your script idea!",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>That seems quite a complex way of doing it; having a big 'switch' list like that is also prone to errors, as the same event is split between parallel lists in several places. It works if you have the whole game planned out in advance; but for most people I would say that keeping the code related to a particular event together is beneficial.</p>\n</blockquote>\n<p>Yeah.</p>\n<p>This code was written by Infocom. It was definitely planned out. (Most of it is in alphabetical order and stuff, too.)</p>\n<hr>\n<p>Ooh! I like your script idea!</p>\n\n",
      "PostDate": "2021-05-16T23:59:39.4880895Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
