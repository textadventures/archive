{
  "Topic": {
    "TopicId": "2217",
    "ForumId": "10",
    "Title": "Quest 5.0 (split topic from: new user with a question)",
    "LastUpdated": "2009-12-13T21:02:21+00:00",
    "ReplyCount": 17
  },
  "Posts": [
    {
      "PostId": "17151",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "I'll post some information on v5.0 soon. It's a complete rewrite and (I think) it's shaping up rather nicely... it's still quite a long way from completion though!",
      "EditableFormat": "bbcode",
      "HTML": "I'll post some information on v5.0 soon. It's a complete rewrite and (I think) it's shaping up rather nicely... it's still quite a long way from completion though!",
      "PostDate": "2009-11-28T19:04:45+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17152",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "In Quest 5, how much of the Quest library is implemented in VB and how much is implemented in Quest?\n\nHave you taken the time to study compiler design?",
      "EditableFormat": "bbcode",
      "HTML": "In Quest 5, how much of the Quest library is implemented in VB and how much is implemented in Quest?<br/><br/>Have you taken the time to study compiler design?",
      "PostDate": "2009-11-28T20:15:09+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17153",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "There is no VB code for Quest 5 games. The core engine is written in C#, and provides handling of objects and properties, plus script commands and expressions. There is a standard core library implemented in ASL5 which provides the default basic Quest functionality - so all the standard verbs, code for displaying room descriptions etc. is written in ASL itself.\n\nIt doesn't compile games exactly, but scripts are loaded when the game starts into various class instances, so they are not &quot;interpreted&quot; as such once the game is running (you could in theory create games using pure C#). Expressions are handled using the FLEE library which compiles them to .net code in the background.\n\nAnyway this is kind of more detail than I wanted to go into right now... I'll set up a dedicated Quest 5.0 forum in the near future and hopefully there will be a very early, hand-coding-only, no-visual-editor, no-support-for-existing-Quest-games version available early in the new year.",
      "EditableFormat": "bbcode",
      "HTML": "There is no VB code for Quest 5 games. The core engine is written in C#, and provides handling of objects and properties, plus script commands and expressions. There is a standard core library implemented in ASL5 which provides the default basic Quest functionality - so all the standard verbs, code for displaying room descriptions etc. is written in ASL itself.<br/><br/>It doesn't compile games exactly, but scripts are loaded when the game starts into various class instances, so they are not &quot;interpreted&quot; as such once the game is running (you could in theory create games using pure C#). Expressions are handled using the FLEE library which compiles them to .net code in the background.<br/><br/>Anyway this is kind of more detail than I wanted to go into right now... I'll set up a dedicated Quest 5.0 forum in the near future and hopefully there will be a very early, hand-coding-only, no-visual-editor, no-support-for-existing-Quest-games version available early in the new year.",
      "PostDate": "2009-11-28T22:59:03+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17155",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "So Quest 5 directly generates .NET bytecode, which is run directly by the player?  What sort of steps are used to keep an author from writing a trojaned game?  Even ignoring security issues, it's very difficult to add UNDO to such a system.  (Other IF languages handle UNDO at a level above the VM level.)\n\nWhat sort of games are you writing as sample Quest code?",
      "EditableFormat": "bbcode",
      "HTML": "So Quest 5 directly generates .NET bytecode, which is run directly by the player?  What sort of steps are used to keep an author from writing a trojaned game?  Even ignoring security issues, it's very difficult to add UNDO to such a system.  (Other IF languages handle UNDO at a level above the VM level.)<br/><br/>What sort of games are you writing as sample Quest code?",
      "PostDate": "2009-11-29T16:28:07+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17156",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "Script commands don't generate .net IL code directly. They just map to .net objects - there is an IScript interface which all script command implement. An ASL5 script command like\n\n[code:3bkwit9w]\nmsg (&quot;Hello there &quot; + player&#46;name)\n[/code:3bkwit9w]\n\ncould be represented in C# by something like\n\n[code:3bkwit9w]\nnew MsgScript(new Expression&lt;string&gt;(&quot;\\&quot;Hello there \\&quot; + player&#46;name&quot;))\n[/code:3bkwit9w]\n\nFLEE compiles the expression to .net IL, but the MsgScript is just an object with an IScript interface.\n\nSo essentially we're still not compiling script commands, just interpreting, but without the overhead of &quot;actually&quot; interpreting while the game is running.\n\nWe implement object properties at a level above .net properties. &quot;Undo&quot; is built in right from the beginning.",
      "EditableFormat": "bbcode",
      "HTML": "Script commands don't generate .net IL code directly. They just map to .net objects - there is an IScript interface which all script command implement. An ASL5 script command like<br/><br/><pre><code><br/>msg (&quot;Hello there &quot; + player&#46;name)<br/></code></pre><br/><br/>could be represented in C# by something like<br/><br/><pre><code><br/>new MsgScript(new Expression&lt;string&gt;(&quot;\\&quot;Hello there \\&quot; + player&#46;name&quot;))<br/></code></pre><br/><br/>FLEE compiles the expression to .net IL, but the MsgScript is just an object with an IScript interface.<br/><br/>So essentially we're still not compiling script commands, just interpreting, but without the overhead of &quot;actually&quot; interpreting while the game is running.<br/><br/>We implement object properties at a level above .net properties. &quot;Undo&quot; is built in right from the beginning.",
      "PostDate": "2009-11-29T17:22:46+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17162",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "Will the specification at least document the exact behavior of such code as\nmsg &lt;first $func1(#var1#)$, then $func2(#var2#)$&gt;\nor the equivalent?\n\nAnd again, what sorts of complex things are you doing in your example games for Quest 5?",
      "EditableFormat": "bbcode",
      "HTML": "Will the specification at least document the exact behavior of such code as<br/>msg &lt;first $func1(#var1#)$, then $func2(#var2#)$&gt;<br/>or the equivalent?<br/><br/>And again, what sorts of complex things are you doing in your example games for Quest 5?",
      "PostDate": "2009-11-29T19:46:51+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17163",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "[quote:22nwba04]\nWill the specification at least document the exact behavior of such code as\nmsg &lt;first $func1(#var1#)$, then $func2(#var2#)$&gt;\nor the equivalent?\n[/quote:22nwba04]\n\nQuest 5.0 doesn't do in-lining - to write the above you'd write something like:\n\n[code:22nwba04]\nmsg (&quot;first &quot; + func1(var1) + &quot; then &quot; + func2(var2))\n[/code:22nwba04]\n\nThe logic determining how the expression is evaluated is entirely within FLEE: <!-- m --><a class=\"postlink\" href=\"http://www.codeplex.com/Flee/\">http://www.codeplex.com/Flee/</a><!-- m -->\n\n[quote:22nwba04]\nAnd again, what sorts of complex things are you doing in your example games for Quest 5?\n[/quote:22nwba04]\n\nDepends what you mean by &quot;complex&quot;. But currently Quest 5 does some &quot;simple&quot; things that Quest 4 can't do, such as undo, manipulating lists, and using local variables. The core library is written in ASL itself and supports fairly basic functionality at the moment - no more complex than Quest 4 can handle, but the fact that it's written in ASL means it will be easily extensible to do things that are hard in Quest 4. For example, dealing sensibly with objects that are out of reach of the player, and implementing light sources - these will be built-in to the Quest 5 core library, and implemented in ASL.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p><br/>Will the specification at least document the exact behavior of such code as<br/>msg &lt;first $func1(#var1#)$, then $func2(#var2#)$&gt;<br/>or the equivalent?<br/></p></blockquote><br/><br/>Quest 5.0 doesn't do in-lining - to write the above you'd write something like:<br/><br/><pre><code><br/>msg (&quot;first &quot; + func1(var1) + &quot; then &quot; + func2(var2))<br/></code></pre><br/><br/>The logic determining how the expression is evaluated is entirely within FLEE: <!-- m --><a class=\"postlink\" href=\"http://www.codeplex.com/Flee/\">http://www.codeplex.com/Flee/</a><!-- m --><br/><br/><blockquote><p><br/>And again, what sorts of complex things are you doing in your example games for Quest 5?<br/></p></blockquote><br/><br/>Depends what you mean by &quot;complex&quot;. But currently Quest 5 does some &quot;simple&quot; things that Quest 4 can't do, such as undo, manipulating lists, and using local variables. The core library is written in ASL itself and supports fairly basic functionality at the moment - no more complex than Quest 4 can handle, but the fact that it's written in ASL means it will be easily extensible to do things that are hard in Quest 4. For example, dealing sensibly with objects that are out of reach of the player, and implementing light sources - these will be built-in to the Quest 5 core library, and implemented in ASL.",
      "PostDate": "2009-11-29T21:10:40+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17164",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "By &quot;complex things&quot;, I mean as the player would view them.\nFor example, how much of Museum of Inform ( <!-- m --><a class=\"postlink\" href=\"http://ifarchive.org/if-archive/infocom/compilers/inform6/examples/Museum.inf\">http://ifarchive.org/if-archive/infocom ... Museum.inf</a><!-- m --> ) could you do?\n\nHow much do you have working right now?\n\n(It looks like you're still treating expressions as a special case of the .asl parser, which doesn't fill me with confidence.)",
      "EditableFormat": "bbcode",
      "HTML": "By &quot;complex things&quot;, I mean as the player would view them.<br/>For example, how much of Museum of Inform ( <!-- m --><a class=\"postlink\" href=\"http://ifarchive.org/if-archive/infocom/compilers/inform6/examples/Museum.inf\">http://ifarchive.org/if-archive/infocom ... Museum.inf</a><!-- m --> ) could you do?<br/><br/>How much do you have working right now?<br/><br/>(It looks like you're still treating expressions as a special case of the .asl parser, which doesn't fill me with confidence.)",
      "PostDate": "2009-11-29T23:05:05+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17165",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "Well from that point of view there's not much &quot;complex&quot; that is in the core library yet. It will eventually let you do more complex things than Quest 4, but for the initial release anyway it probably won't do all the things Inform can do. You'll be able to edit or replace the core library though, so at least you won't be stuck with anything hard-coded as you are with Quest 4.\n\nExpressions aren't special cases - they are everywhere in ASL. Here are some examples:\n\n[code:17c3hhnv]\nforeach (obj, GetObjectsInScope(&quot;Visible&quot;)) {\n  msg (&quot;You can see&#58; &quot; + obj&#46;name)\n}\n\nif ((a and b) or (c and d) or (somenumber * 3 &gt; somethingelse)) { &#46;&#46;&#46;&#46; }\n\nforeach (obj, somelist + anotherlist + SomeFunctionReturningAList(AnotherFunction(blah + foo))) { &#46;&#46;&#46;&#46; }\n\nMyCustomFunction(a, b, c+d)\n\nplayer&#46;parent = GetRandomRoom(GetNearbyRooms(player&#46;parent))\n\nsomeobject&#46;take =&gt; {\n  msg (&quot;Blah blah&quot;)\n  someobject&#46;counter = someobject&#46;counter + someotherobject&#46;someproperty\n}\n[/code:17c3hhnv]",
      "EditableFormat": "bbcode",
      "HTML": "Well from that point of view there's not much &quot;complex&quot; that is in the core library yet. It will eventually let you do more complex things than Quest 4, but for the initial release anyway it probably won't do all the things Inform can do. You'll be able to edit or replace the core library though, so at least you won't be stuck with anything hard-coded as you are with Quest 4.<br/><br/>Expressions aren't special cases - they are everywhere in ASL. Here are some examples:<br/><br/><pre><code><br/>foreach (obj, GetObjectsInScope(&quot;Visible&quot;)) {<br/>  msg (&quot;You can see&#58; &quot; + obj&#46;name)<br/>}<br/><br/>if ((a and b) or (c and d) or (somenumber * 3 &gt; somethingelse)) { &#46;&#46;&#46;&#46; }<br/><br/>foreach (obj, somelist + anotherlist + SomeFunctionReturningAList(AnotherFunction(blah + foo))) { &#46;&#46;&#46;&#46; }<br/><br/>MyCustomFunction(a, b, c+d)<br/><br/>player&#46;parent = GetRandomRoom(GetNearbyRooms(player&#46;parent))<br/><br/>someobject&#46;take =&gt; {<br/>  msg (&quot;Blah blah&quot;)<br/>  someobject&#46;counter = someobject&#46;counter + someotherobject&#46;someproperty<br/>}<br/></code></pre>",
      "PostDate": "2009-11-29T23:33:29+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17167",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "This looks really cool, Alex.  Can't wait.  Will spend more time creating a custom library than I will writing stories, that's for sure.",
      "EditableFormat": "bbcode",
      "HTML": "This looks really cool, Alex.  Can't wait.  Will spend more time creating a custom library than I will writing stories, that's for sure.",
      "PostDate": "2009-12-01T23:14:48+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17168",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "Let me rephrase what I was saying about special cases:\n\nFor the code you just posted, which portions are passed to FLEE?\n\nAlso:\nHow much of the program do you have working at this point?\n\nWhat would the distribution format for one of those look like?",
      "EditableFormat": "bbcode",
      "HTML": "Let me rephrase what I was saying about special cases:<br/><br/>For the code you just posted, which portions are passed to FLEE?<br/><br/>Also:<br/>How much of the program do you have working at this point?<br/><br/>What would the distribution format for one of those look like?",
      "PostDate": "2009-12-02T03:33:22+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17169",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "Expressions passed to FLEE in bold below:\n\n[quote:1uia93j9]\nforeach (obj, [b:1uia93j9]GetObjectsInScope(&quot;Visible&quot;)[/b:1uia93j9]) {\n  msg ([b:1uia93j9]&quot;You can see: &quot; + obj.name[/b:1uia93j9])\n}\n\nif ([b:1uia93j9](a and b) or (c and d) or (somenumber * 3 &gt; somethingelse)[/b:1uia93j9]) { .... }\n\nforeach (obj, [b:1uia93j9]somelist + anotherlist + SomeFunctionReturningAList(AnotherFunction(blah + foo))[/b:1uia93j9]) { .... }\n\nMyCustomFunction([b:1uia93j9]a, b, c+d[/b:1uia93j9])\n\nplayer.parent = [b:1uia93j9]GetRandomRoom(GetNearbyRooms(player.parent))[/b:1uia93j9]\n\nsomeobject.take =&gt; {\n  msg ([b:1uia93j9]&quot;Blah blah&quot;[/b:1uia93j9])\n  someobject.counter = [b:1uia93j9]someobject.counter + someotherobject.someproperty[/b:1uia93j9]\n}\n[/quote:1uia93j9]\n\nAs for how much currently works, all of the above code would work, if you'd defined the various functions. It is the core library itself which needs developing at this stage, and so far I have that supporting fairly basic functionality (take, drop, printing room descriptions, fairly simple object scopes - taking into account open containers, but not handling transparency or surfaces yet).\n\nThe file format is called ASLX and looks a bit like this:\n\n[code:1uia93j9]\n&lt;asl version=&quot;500&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot;/&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot;/&gt;\n\n  &lt;game name=&quot;Test ASLX Game&quot;/&gt;\n\n  &lt;function name=&quot;myfunction&quot; parameters=&quot;something, blah&quot; type=&quot;string&quot;&gt;\n    return (something + blah)\n  &lt;/function&gt;\n\n  &lt;object name=&quot;lounge&quot;&gt;\n    &lt;start/&gt;\n    &lt;object name=&quot;sofa&quot;&gt;\n      &lt;prefix&gt;a&lt;/prefix&gt;\n      &lt;look&gt;Just a sofa&#46;&lt;/look&gt;\n      &lt;take type=&quot;script&quot;&gt;\n         msg (&quot;Test&#58; &quot; + myfunction(&quot;one&quot;, &quot;two&quot;))\n      &lt;/take&gt;\n    &lt;/object&gt;\n\n    &lt;exit name=&quot;east&quot; to=&quot;hall&quot;/&gt;\n  &lt;/object&gt;\n\n  &lt;object name=&quot;hall&quot;&gt;\n    &lt;exit name=&quot;east&quot; to=&quot;kitchen&quot;/&gt;\n    &lt;exit name=&quot;west&quot; to=&quot;lounge&quot;/&gt;\n  &lt;/object&gt;\n\n  &lt;object name=&quot;kitchen&quot;&gt;\n    &lt;object name=&quot;sink&quot;&gt;\n      &lt;look&gt;Just an ordinary sink&lt;/look&gt;\n    &lt;/object&gt;\n\n    &lt;exit name=&quot;west&quot; to=&quot;hall&quot;/&gt;\n  &lt;/object&gt;\n\n&lt;/asl&gt;\n[/code:1uia93j9]",
      "EditableFormat": "bbcode",
      "HTML": "Expressions passed to FLEE in bold below:<br/><br/><blockquote><p><br/>foreach (obj, <span style=\"font-weight:bold;\">GetObjectsInScope(&quot;Visible&quot;)</span>) {<br/>  msg (<span style=\"font-weight:bold;\">&quot;You can see: &quot; + obj.name</span>)<br/>}<br/><br/>if (<span style=\"font-weight:bold;\">(a and b) or (c and d) or (somenumber * 3 &gt; somethingelse)</span>) { .... }<br/><br/>foreach (obj, <span style=\"font-weight:bold;\">somelist + anotherlist + SomeFunctionReturningAList(AnotherFunction(blah + foo))</span>) { .... }<br/><br/>MyCustomFunction(<span style=\"font-weight:bold;\">a, b, c+d</span>)<br/><br/>player.parent = <span style=\"font-weight:bold;\">GetRandomRoom(GetNearbyRooms(player.parent))</span><br/><br/>someobject.take =&gt; {<br/>  msg (<span style=\"font-weight:bold;\">&quot;Blah blah&quot;</span>)<br/>  someobject.counter = <span style=\"font-weight:bold;\">someobject.counter + someotherobject.someproperty</span><br/>}<br/></p></blockquote><br/><br/>As for how much currently works, all of the above code would work, if you'd defined the various functions. It is the core library itself which needs developing at this stage, and so far I have that supporting fairly basic functionality (take, drop, printing room descriptions, fairly simple object scopes - taking into account open containers, but not handling transparency or surfaces yet).<br/><br/>The file format is called ASLX and looks a bit like this:<br/><br/><pre><code><br/>&lt;asl version=&quot;500&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot;/&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot;/&gt;<br/><br/>  &lt;game name=&quot;Test ASLX Game&quot;/&gt;<br/><br/>  &lt;function name=&quot;myfunction&quot; parameters=&quot;something, blah&quot; type=&quot;string&quot;&gt;<br/>    return (something + blah)<br/>  &lt;/function&gt;<br/><br/>  &lt;object name=&quot;lounge&quot;&gt;<br/>    &lt;start/&gt;<br/>    &lt;object name=&quot;sofa&quot;&gt;<br/>      &lt;prefix&gt;a&lt;/prefix&gt;<br/>      &lt;look&gt;Just a sofa&#46;&lt;/look&gt;<br/>      &lt;take type=&quot;script&quot;&gt;<br/>         msg (&quot;Test&#58; &quot; + myfunction(&quot;one&quot;, &quot;two&quot;))<br/>      &lt;/take&gt;<br/>    &lt;/object&gt;<br/><br/>    &lt;exit name=&quot;east&quot; to=&quot;hall&quot;/&gt;<br/>  &lt;/object&gt;<br/><br/>  &lt;object name=&quot;hall&quot;&gt;<br/>    &lt;exit name=&quot;east&quot; to=&quot;kitchen&quot;/&gt;<br/>    &lt;exit name=&quot;west&quot; to=&quot;lounge&quot;/&gt;<br/>  &lt;/object&gt;<br/><br/>  &lt;object name=&quot;kitchen&quot;&gt;<br/>    &lt;object name=&quot;sink&quot;&gt;<br/>      &lt;look&gt;Just an ordinary sink&lt;/look&gt;<br/>    &lt;/object&gt;<br/><br/>    &lt;exit name=&quot;west&quot; to=&quot;hall&quot;/&gt;<br/>  &lt;/object&gt;<br/><br/>&lt;/asl&gt;<br/></code></pre>",
      "PostDate": "2009-12-02T13:03:47+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17170",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "By &quot;distribution format&quot;, I meant the file that ultimately gets run by the interpreter.  (That is, a format like .z5 or .gam.)\n\nI expect &quot;include&quot; statements and the like to be in the &quot;development format&quot; (like .inf or .t).",
      "EditableFormat": "bbcode",
      "HTML": "By &quot;distribution format&quot;, I meant the file that ultimately gets run by the interpreter.  (That is, a format like .z5 or .gam.)<br/><br/>I expect &quot;include&quot; statements and the like to be in the &quot;development format&quot; (like .inf or .t).",
      "PostDate": "2009-12-02T18:03:30+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17171",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "It will be a similar system to the current version of Quest. Those &quot;include&quot; statements in the example are standard Quest libraries, so you'll be able to ship just the .aslx if that's all you're using.\n\nThere will be something like the .cas format for Quest 5 but it will probably be just a compressed and encrypted .aslx with the libraries included - it's not something I've thought too much about yet.",
      "EditableFormat": "bbcode",
      "HTML": "It will be a similar system to the current version of Quest. Those &quot;include&quot; statements in the example are standard Quest libraries, so you'll be able to ship just the .aslx if that's all you're using.<br/><br/>There will be something like the .cas format for Quest 5 but it will probably be just a compressed and encrypted .aslx with the libraries included - it's not something I've thought too much about yet.",
      "PostDate": "2009-12-02T19:14:01+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17172",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "For distribution formats, it's best to put everything together.  If the person playing the game has a different version of the Quest libraries, the game will run differently.",
      "EditableFormat": "bbcode",
      "HTML": "For distribution formats, it's best to put everything together.  If the person playing the game has a different version of the Quest libraries, the game will run differently.",
      "PostDate": "2009-12-02T22:34:31+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17176",
      "UserId": 0,
      "Username": "slackers_inc",
      "UserAvatar": null,
      "UserGravatar": "d41fad2838d2083c9e086d5431a1be0f",
      "EditableText": "I admit this looks very interesting, and I have been waiting to see what Quest 5.0 can do. I do have a question though. [quote:2b4hgqx6]&quot;I'll set up a dedicated Quest 5.0 forum in the near future and hopefully there will be a very early, hand-coding-only, no-visual-editor, no-support-for-existing-Quest-games version available early in the new year.&quot;[/quote:2b4hgqx6] What exactly does no visual editor mean? Am I going to have to learn C#? Also, what does no-support-for-existing-Quest-games mean? Does it mean a game created with Quest 4.1.1. won't work with 5.0?",
      "EditableFormat": "bbcode",
      "HTML": "I admit this looks very interesting, and I have been waiting to see what Quest 5.0 can do. I do have a question though. <blockquote><p>&quot;I'll set up a dedicated Quest 5.0 forum in the near future and hopefully there will be a very early, hand-coding-only, no-visual-editor, no-support-for-existing-Quest-games version available early in the new year.&quot;</p></blockquote> What exactly does no visual editor mean? Am I going to have to learn C#? Also, what does no-support-for-existing-Quest-games mean? Does it mean a game created with Quest 4.1.1. won't work with 5.0?",
      "PostDate": "2009-12-12T22:36:22+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17177",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "I was just talking about the first preview version which will be available early in the new year. We're still a long way from having a finished product, and the visual editor and component for loading older Quest games will come later.\n\nSo a game for Quest 4.x will work with Quest 5.0, just not in the initial preview version.",
      "EditableFormat": "bbcode",
      "HTML": "I was just talking about the first preview version which will be available early in the new year. We're still a long way from having a finished product, and the visual editor and component for loading older Quest games will come later.<br/><br/>So a game for Quest 4.x will work with Quest 5.0, just not in the initial preview version.",
      "PostDate": "2009-12-13T15:30:58+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17178",
      "UserId": 0,
      "Username": "slackers_inc",
      "UserAvatar": null,
      "UserGravatar": "d41fad2838d2083c9e086d5431a1be0f",
      "EditableText": "Ah, ok then. Thanks Alex for clearing that up for me.",
      "EditableFormat": "bbcode",
      "HTML": "Ah, ok then. Thanks Alex for clearing that up for me.",
      "PostDate": "2009-12-13T21:02:21+00:00",
      "LastEditDate": null
    }
  ]
}
