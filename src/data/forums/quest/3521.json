{
  "Topic": {
    "TopicId": "3521",
    "ForumId": "10",
    "Title": "New Menus in 5.4",
    "LastUpdated": "2013-05-13T18:15:35+01:00",
    "ReplyCount": 9
  },
  "Posts": [
    {
      "PostId": "23210",
      "UserId": 0,
      "Username": "homeeman",
      "UserAvatar": null,
      "UserGravatar": "4c7b0e689de0b974bfe447478a40fb60",
      "EditableText": "I absolutely love that they're in-text now.  I went out of my way to make all my menus in-text in my last game, and while it wasn't very difficult, it was a hassle when I knew how easy it could be.\nGetting to to the point, the new menus are great, but it doesn't appear that there is a way to disallow the player to cancel.  If the player enters a response that isn't a number choice the menu goes away with no response.  That's... not as convenient.  Especially with how terribly I type when I'm testing a game quickly.  I figured I'd put a suggestion for a modification to the menus that made a sort of hidden default to keep the menu open after a response.\nCurrently, I usually make the menu an attribute of the room or character object from the which the menu spawned and have the default set to repeat the menu function.  Does anyone know a way to do it without running an attribute over and over?  They're not as convenient to get to in the GUI and I avoid code view when I can because I start coding in C++ before long.",
      "EditableFormat": "bbcode",
      "HTML": "I absolutely love that they're in-text now.  I went out of my way to make all my menus in-text in my last game, and while it wasn't very difficult, it was a hassle when I knew how easy it could be.<br/>Getting to to the point, the new menus are great, but it doesn't appear that there is a way to disallow the player to cancel.  If the player enters a response that isn't a number choice the menu goes away with no response.  That's... not as convenient.  Especially with how terribly I type when I'm testing a game quickly.  I figured I'd put a suggestion for a modification to the menus that made a sort of hidden default to keep the menu open after a response.<br/>Currently, I usually make the menu an attribute of the room or character object from the which the menu spawned and have the default set to repeat the menu function.  Does anyone know a way to do it without running an attribute over and over?  They're not as convenient to get to in the GUI and I avoid code view when I can because I start coding in C++ before long.",
      "PostDate": "2013-03-08T22:26:52+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23213",
      "UserId": 0,
      "Username": "Asyranok",
      "UserAvatar": null,
      "UserGravatar": "59faabf56b4e313fc3f5a76f43bfc38d",
      "EditableText": "I absolutely agree. Love the way they are displayed but i wish you could add something to make an invalid selection default to a certain choice. That or refresh the menu with a message about it being an invalid choice.",
      "EditableFormat": "bbcode",
      "HTML": "I absolutely agree. Love the way they are displayed but i wish you could add something to make an invalid selection default to a certain choice. That or refresh the menu with a message about it being an invalid choice.",
      "PostDate": "2013-03-08T22:50:58+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23215",
      "UserId": 0,
      "Username": "TriangleGames",
      "UserAvatar": null,
      "UserGravatar": "134d9e995777da65c5cf8efda551d579",
      "EditableText": "Could you maybe catch the player in a while loop that re-displays the menu?",
      "EditableFormat": "bbcode",
      "HTML": "Could you maybe catch the player in a while loop that re-displays the menu?",
      "PostDate": "2013-03-08T23:52:57+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23220",
      "UserId": 0,
      "Username": "Asyranok",
      "UserAvatar": null,
      "UserGravatar": "59faabf56b4e313fc3f5a76f43bfc38d",
      "EditableText": "Thanks triangle. The thought hadnt even occured to me. Im a total beginner when it comes to coding.",
      "EditableFormat": "bbcode",
      "HTML": "Thanks triangle. The thought hadnt even occured to me. Im a total beginner when it comes to coding.",
      "PostDate": "2013-03-09T01:48:49+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23229",
      "UserId": 0,
      "Username": "homeeman",
      "UserAvatar": null,
      "UserGravatar": "4c7b0e689de0b974bfe447478a40fb60",
      "EditableText": "While loops in XML (or at least in Quest) continue outside of receiving input.  Which is to say, while that would normally work, I've found that in Quest it doesn't.  Normally you can simply make the default of your Switch function (in this case, of your Menu) to run the attribute that your script is contained in, but... that doesn't work for me.  I can always go back to the way I've done the menus before, I just thought I would point this out in case Alex thought it was an issue worth addressing.  Thanks, though!",
      "EditableFormat": "bbcode",
      "HTML": "While loops in XML (or at least in Quest) continue outside of receiving input.  Which is to say, while that would normally work, I've found that in Quest it doesn't.  Normally you can simply make the default of your Switch function (in this case, of your Menu) to run the attribute that your script is contained in, but... that doesn't work for me.  I can always go back to the way I've done the menus before, I just thought I would point this out in case Alex thought it was an issue worth addressing.  Thanks, though!",
      "PostDate": "2013-03-09T06:04:52+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23360",
      "UserId": 0,
      "Username": "TriangleGames",
      "UserAvatar": null,
      "UserGravatar": "134d9e995777da65c5cf8efda551d579",
      "EditableText": "I came up with one solution. I don't see a way to do this without accessing the code view to put it in, but its short and simple.\n\nRaise a UI request to remove the command line when the menu comes up, and then another to put it back after the player makes a choice. This at least makes it clear to the player that they are [i:xjr0ahe9]supposed[/i:xjr0ahe9] to make a selection.\nIn my sample game, they can still escape it by choosing things from the panes, but if you wanted to force the issue real hard, you could hide the panes in the same way.\n\nThis is my game file for &quot;trying new things,&quot; so there's a variety of stuff there. What you're looking for is &quot;take junk bin.&quot;\n[attachment=0:xjr0ahe9]<!-- ia0 -->Experiments540.aslx<!-- ia0 -->[/attachment:xjr0ahe9]\n\nHere's what it looks like in code.\n[code:xjr0ahe9]firsttime {\n  msg (&quot;The bin itself is too cumbersome to carry around&#46; You should just take out what you need&#46;&quot;)\n}\nbinstuff = NewStringList()\nlist add (binstuff, &quot;bauble&quot;)\nlist add (binstuff, &quot;trinket&quot;)\nlist add (binstuff, &quot;widget&quot;)\n\n// this raises the UI request to hide the command line\nrequest (Hide, &quot;Command&quot;)\n\nShowMenu (&quot;What would you like to take from the bin?&quot;, binstuff) {\n  switch (result) {\n    case (&quot;bauble&quot;) {\n      if (not Got(bauble)) {\n        msg (&quot;You take a bauble&#46;&quot;)\n        AddToInventory (bauble)\n      }\n      else {\n        msg (&quot;You've already got a bauble&#46; You should see if there's anything useful to do with it before taking more of them&#46;&quot;)\n      }\n    }\n    case (&quot;trinket&quot;) {\n      if (not Got(trinket)) {\n        msg (&quot;You take a trinket&#46;&quot;)\n        AddToInventory (trinket)\n      }\n      else {\n        msg (&quot;You've already got a trinket&#46; You should see if there's anything useful to do with it before taking more of them&#46;&quot;)\n      }\n    }\n    case (&quot;widget&quot;) {\n      if (not Got(widget)) {\n        msg (&quot;You take a widget&#46;&quot;)\n        AddToInventory (widget)\n      }\n      else {\n        msg (&quot;You've already got a widget&#46; You should see if there's anything useful to do with it before taking more of them&#46;&quot;)\n      }\n    }\n  }\n\n//this raises another UI request to show the command line\n  request (Show, &quot;Command&quot;)\n\n}[/code:xjr0ahe9]",
      "EditableFormat": "bbcode",
      "HTML": "I came up with one solution. I don't see a way to do this without accessing the code view to put it in, but its short and simple.<br/><br/>Raise a UI request to remove the command line when the menu comes up, and then another to put it back after the player makes a choice. This at least makes it clear to the player that they are <span style=\"font-style:italic;\">supposed</span> to make a selection.<br/>In my sample game, they can still escape it by choosing things from the panes, but if you wanted to force the issue real hard, you could hide the panes in the same way.<br/><br/>This is my game file for &quot;trying new things,&quot; so there's a variety of stuff there. What you're looking for is &quot;take junk bin.&quot;<br/><div><a href=\"/forumattachments/546/Experiments540.aslx\">Experiments540.aslx</a></div><br/><br/>Here's what it looks like in code.<br/><pre><code>firsttime {<br/>  msg (&quot;The bin itself is too cumbersome to carry around&#46; You should just take out what you need&#46;&quot;)<br/>}<br/>binstuff = NewStringList()<br/>list add (binstuff, &quot;bauble&quot;)<br/>list add (binstuff, &quot;trinket&quot;)<br/>list add (binstuff, &quot;widget&quot;)<br/><br/>// this raises the UI request to hide the command line<br/>request (Hide, &quot;Command&quot;)<br/><br/>ShowMenu (&quot;What would you like to take from the bin?&quot;, binstuff) {<br/>  switch (result) {<br/>    case (&quot;bauble&quot;) {<br/>      if (not Got(bauble)) {<br/>        msg (&quot;You take a bauble&#46;&quot;)<br/>        AddToInventory (bauble)<br/>      }<br/>      else {<br/>        msg (&quot;You've already got a bauble&#46; You should see if there's anything useful to do with it before taking more of them&#46;&quot;)<br/>      }<br/>    }<br/>    case (&quot;trinket&quot;) {<br/>      if (not Got(trinket)) {<br/>        msg (&quot;You take a trinket&#46;&quot;)<br/>        AddToInventory (trinket)<br/>      }<br/>      else {<br/>        msg (&quot;You've already got a trinket&#46; You should see if there's anything useful to do with it before taking more of them&#46;&quot;)<br/>      }<br/>    }<br/>    case (&quot;widget&quot;) {<br/>      if (not Got(widget)) {<br/>        msg (&quot;You take a widget&#46;&quot;)<br/>        AddToInventory (widget)<br/>      }<br/>      else {<br/>        msg (&quot;You've already got a widget&#46; You should see if there's anything useful to do with it before taking more of them&#46;&quot;)<br/>      }<br/>    }<br/>  }<br/><br/>//this raises another UI request to show the command line<br/>  request (Show, &quot;Command&quot;)<br/><br/>}</code></pre>",
      "PostDate": "2013-03-13T17:24:46+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23361",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'm not sure if this is what you're needing for your problem, but I had a crash due to the menu repeatedly spawning before it was finished.\n\nso, could you in your show menu's default, but in the script block's name to (call upon) run the menu again, as a substitute for canceling it, and then use what was suggested to me, to prevent the endless looping (crashing of the game), by using:\n\non ready {\n  (show menu script block)\n}\n\nthis prevents another menu from running while you still are in the old menu. then for the default, call back the show menu script block.\n\n[code:39lt9s7l]&lt;function name=&quot;aaa&quot;&gt;\n  on ready {\n    show menu (&quot;message&quot;, split (&quot;item1;item2&quot;,&quot;;&quot;), false~true {\n      switch (result) {\n        case (item1) {\n          some_script1\n        }\n        case (item2) {\n          some_script2\n        }\n        default {\n          aaa\n        }\n      }\n    }\n  }\n&lt;/function&gt;[/code:39lt9s7l]",
      "EditableFormat": "bbcode",
      "HTML": "I'm not sure if this is what you're needing for your problem, but I had a crash due to the menu repeatedly spawning before it was finished.<br/><br/>so, could you in your show menu's default, but in the script block's name to (call upon) run the menu again, as a substitute for canceling it, and then use what was suggested to me, to prevent the endless looping (crashing of the game), by using:<br/><br/>on ready {<br/>  (show menu script block)<br/>}<br/><br/>this prevents another menu from running while you still are in the old menu. then for the default, call back the show menu script block.<br/><br/><pre><code>&lt;function name=&quot;aaa&quot;&gt;<br/>  on ready {<br/>    show menu (&quot;message&quot;, split (&quot;item1;item2&quot;,&quot;;&quot;), false~true {<br/>      switch (result) {<br/>        case (item1) {<br/>          some_script1<br/>        }<br/>        case (item2) {<br/>          some_script2<br/>        }<br/>        default {<br/>          aaa<br/>        }<br/>      }<br/>    }<br/>  }<br/>&lt;/function&gt;</code></pre>",
      "PostDate": "2013-03-13T19:16:41+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23395",
      "UserId": 0,
      "Username": "homeeman",
      "UserAvatar": null,
      "UserGravatar": "4c7b0e689de0b974bfe447478a40fb60",
      "EditableText": "What Triangle suggested was something I had thought about doing, but I'm just so adamant about making the games keyboard-only friendly that I couldn't bring myself to do it.  What's more, nine times out of ten, when I bring up a menu, it is 100% necessary to get a response of some kind from the player in order for the game to continue, and it would the source of enormous bugs if the menus were skipped in any way for any reason.\nI made another game a while ago that I'm submitting to Spring Thing (I had it made a while ago and I've wanted to show to everyone for SO LONG but now I have to wait) in which I broke down and made my own in-text menus back in 5.3 when Show Menu still produced a pop-up.  I've just been using that since it's really not that hard, and I know the process by heart now.\n\n[code:2xpkw7ui]\n    &lt;mainclassmenu type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n      msg (&quot;&lt;br/&gt;You may choose from these choices for this relevant thing, {player&#46;alias}&#46;&lt;br/&gt;Please enter a number to find more relevant information about these options&#46;&lt;br/&gt;1 - Option 1&lt;br/&gt;2 - Option 2&lt;br/&gt;3 - Option 3&lt;br/&gt;4 - Option 4&lt;br/&gt;5 - Ready to choose&quot;)\n      get input {\n        switch (result) {\n          case (&quot;1&quot;) {\n            ClearScreen\n            msg (&quot;Option one is all about THIS STUFF you should totally pick this one&#46;&quot;)\n            do (PartySet, &quot;mainclassmenu&quot;)\n          }\n          case (&quot;2&quot;) {\n            ClearScreen\n            msg (&quot;Option two is all about THIS STUFF you should totally pick this one&#46;&quot;)\n            do (PartySet, &quot;mainclassmenu&quot;)\n          }\n          case (&quot;3&quot;) {\n            ClearScreen\n            msg (&quot;Option three is all about THIS STUFF you should totally pick this one&#46;&quot;)\n            do (PartySet, &quot;mainclassmenu&quot;)\n          }\n          case (&quot;4&quot;) {\n            ClearScreen\n            msg (&quot;Option four is all about THIS STUFF you should totally pick this one&#46;&quot;)\n            do (PartySet, &quot;mainclassmenu&quot;)\n          }\n          case (&quot;5&quot;) {\n            do (PartySet, &quot;mainclasschoose&quot;)\n          }\n          default {\n            do (PartySet, &quot;mainclassmenu&quot;)\n          }\n        }\n      }\n    &#93;&#93;&gt;&lt;/mainclassmenu&gt;\n    &lt;mainclasschoose type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n      ClearScreen\n      msg (&quot;Which option are you picking?&lt;br/&gt;1 - Option 1&lt;br/&gt;2 - Option 2&lt;br/&gt;3 - Option 3&lt;br/&gt;4 - Option 4&quot;)\n      get input {\n        switch (result) {\n          case (&quot;1&quot;) {\n            player&#46;class = Option 1\n            msg (&quot;&lt;br/&gt;You picked option one&#46;  You must be a cool dude&#46;&quot;)\n            do (PartySet, &quot;partyclassmenu&quot;)\n          }\n          case (&quot;2&quot;) {\n            player&#46;class = Option 2\n            msg (&quot;&lt;br/&gt;You picked option two&#46;  You must be a swell fella&#46;&quot;)\n            do (PartySet, &quot;partyclassmenu&quot;)\n          }\n          case (&quot;3&quot;) {\n            player&#46;class = Option 3\n            msg (&quot;&lt;br/&gt;You picked option three&#46;  Your mother must be so proud&#46;&quot;)\n            do (PartySet, &quot;partyclassmenu&quot;)\n          }\n          case (&quot;4&quot;) {\n            player&#46;class = Option 4\n            msg (&quot;&lt;br/&gt;You picked option four&#46;  You'll regret that one down the road&#46;&quot;)\n            do (PartySet, &quot;partyclassmenu&quot;)\n          }\n          default {\n            do (PartySet, &quot;mainclasschoose&quot;)\n          }\n        }\n      }\n    &#93;&#93;&gt;&lt;/mainclasschoose&gt;\n[/code:2xpkw7ui]\n\nWhere &quot;mainclassmenu&quot; and &quot;mainclasschoose&quot; are attributes of the room the player is in when encountering these menus.  They work, and they're not... inefficient.  I think.  So you can use those for the time being if you're as anal as me about not making players use the mouse.",
      "EditableFormat": "bbcode",
      "HTML": "What Triangle suggested was something I had thought about doing, but I'm just so adamant about making the games keyboard-only friendly that I couldn't bring myself to do it.  What's more, nine times out of ten, when I bring up a menu, it is 100% necessary to get a response of some kind from the player in order for the game to continue, and it would the source of enormous bugs if the menus were skipped in any way for any reason.<br/>I made another game a while ago that I'm submitting to Spring Thing (I had it made a while ago and I've wanted to show to everyone for SO LONG but now I have to wait) in which I broke down and made my own in-text menus back in 5.3 when Show Menu still produced a pop-up.  I've just been using that since it's really not that hard, and I know the process by heart now.<br/><br/><pre><code><br/>    &lt;mainclassmenu type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>      msg (&quot;&lt;br/&gt;You may choose from these choices for this relevant thing, {player&#46;alias}&#46;&lt;br/&gt;Please enter a number to find more relevant information about these options&#46;&lt;br/&gt;1 - Option 1&lt;br/&gt;2 - Option 2&lt;br/&gt;3 - Option 3&lt;br/&gt;4 - Option 4&lt;br/&gt;5 - Ready to choose&quot;)<br/>      get input {<br/>        switch (result) {<br/>          case (&quot;1&quot;) {<br/>            ClearScreen<br/>            msg (&quot;Option one is all about THIS STUFF you should totally pick this one&#46;&quot;)<br/>            do (PartySet, &quot;mainclassmenu&quot;)<br/>          }<br/>          case (&quot;2&quot;) {<br/>            ClearScreen<br/>            msg (&quot;Option two is all about THIS STUFF you should totally pick this one&#46;&quot;)<br/>            do (PartySet, &quot;mainclassmenu&quot;)<br/>          }<br/>          case (&quot;3&quot;) {<br/>            ClearScreen<br/>            msg (&quot;Option three is all about THIS STUFF you should totally pick this one&#46;&quot;)<br/>            do (PartySet, &quot;mainclassmenu&quot;)<br/>          }<br/>          case (&quot;4&quot;) {<br/>            ClearScreen<br/>            msg (&quot;Option four is all about THIS STUFF you should totally pick this one&#46;&quot;)<br/>            do (PartySet, &quot;mainclassmenu&quot;)<br/>          }<br/>          case (&quot;5&quot;) {<br/>            do (PartySet, &quot;mainclasschoose&quot;)<br/>          }<br/>          default {<br/>            do (PartySet, &quot;mainclassmenu&quot;)<br/>          }<br/>        }<br/>      }<br/>    &#93;&#93;&gt;&lt;/mainclassmenu&gt;<br/>    &lt;mainclasschoose type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>      ClearScreen<br/>      msg (&quot;Which option are you picking?&lt;br/&gt;1 - Option 1&lt;br/&gt;2 - Option 2&lt;br/&gt;3 - Option 3&lt;br/&gt;4 - Option 4&quot;)<br/>      get input {<br/>        switch (result) {<br/>          case (&quot;1&quot;) {<br/>            player&#46;class = Option 1<br/>            msg (&quot;&lt;br/&gt;You picked option one&#46;  You must be a cool dude&#46;&quot;)<br/>            do (PartySet, &quot;partyclassmenu&quot;)<br/>          }<br/>          case (&quot;2&quot;) {<br/>            player&#46;class = Option 2<br/>            msg (&quot;&lt;br/&gt;You picked option two&#46;  You must be a swell fella&#46;&quot;)<br/>            do (PartySet, &quot;partyclassmenu&quot;)<br/>          }<br/>          case (&quot;3&quot;) {<br/>            player&#46;class = Option 3<br/>            msg (&quot;&lt;br/&gt;You picked option three&#46;  Your mother must be so proud&#46;&quot;)<br/>            do (PartySet, &quot;partyclassmenu&quot;)<br/>          }<br/>          case (&quot;4&quot;) {<br/>            player&#46;class = Option 4<br/>            msg (&quot;&lt;br/&gt;You picked option four&#46;  You'll regret that one down the road&#46;&quot;)<br/>            do (PartySet, &quot;partyclassmenu&quot;)<br/>          }<br/>          default {<br/>            do (PartySet, &quot;mainclasschoose&quot;)<br/>          }<br/>        }<br/>      }<br/>    &#93;&#93;&gt;&lt;/mainclasschoose&gt;<br/></code></pre><br/><br/>Where &quot;mainclassmenu&quot; and &quot;mainclasschoose&quot; are attributes of the room the player is in when encountering these menus.  They work, and they're not... inefficient.  I think.  So you can use those for the time being if you're as anal as me about not making players use the mouse.",
      "PostDate": "2013-03-15T00:50:52+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "24544",
      "UserId": 0,
      "Username": "tlk",
      "UserAvatar": null,
      "UserGravatar": "2d59720246577f1d45f7a580bf58be52",
      "EditableText": "So this thread is a couple months old, but I thought I'd chime in with what I do in this situation since it's an option that didn't come up in the discussion. I haven't upgraded to 5.4 yet, so I don't know quite what all the differences are, but most of the games that I've been working on in 5.2 and then 5.3 involve some sort of A/B choices and I wasn't a fan of the pop ups, so I just call a function for the choice and recall it if one of the available options isn't picked. That way everything's in-text but easily allows for forcing the choice.\n\nHere you'd call a function named &quot;menu&quot; and it would do this:\n\n[code:31kmjgcv]&lt;function name=&quot;menu&quot;&gt;\n  msg (&quot;Choose A or B&#46;&quot;)\n  get input {\n    if (result=&quot;a&quot; or result=&quot;A&quot;) {\n    msg (&quot;You have chosen A&#46;&quot;)\n    }\n    else if (result=&quot;b&quot; or result=&quot;B&quot;) {\n      msg (&quot;You have chosen B&#46;&quot;)\n    }\n    else {\n      msg (&quot;---You must choose A or B&#46;&quot;)\n      menu\n    }\n  }\n&lt;/function&gt;[/code:31kmjgcv]\n\nIt means you have a ton of functions if you have a lot of choices in your game, but I kind of like that every choice point is really easy to find if it needs to be edited. It might not be the most straightforward way, and it might be improvable in 5.4, but it works well for me.\n\nIt's simple in the GUI too; you would just create a new function called &quot;menu&quot; and have it run this script&#058;",
      "EditableFormat": "bbcode",
      "HTML": "So this thread is a couple months old, but I thought I'd chime in with what I do in this situation since it's an option that didn't come up in the discussion. I haven't upgraded to 5.4 yet, so I don't know quite what all the differences are, but most of the games that I've been working on in 5.2 and then 5.3 involve some sort of A/B choices and I wasn't a fan of the pop ups, so I just call a function for the choice and recall it if one of the available options isn't picked. That way everything's in-text but easily allows for forcing the choice.<br/><br/>Here you'd call a function named &quot;menu&quot; and it would do this:<br/><br/><pre><code>&lt;function name=&quot;menu&quot;&gt;<br/>  msg (&quot;Choose A or B&#46;&quot;)<br/>  get input {<br/>    if (result=&quot;a&quot; or result=&quot;A&quot;) {<br/>    msg (&quot;You have chosen A&#46;&quot;)<br/>    }<br/>    else if (result=&quot;b&quot; or result=&quot;B&quot;) {<br/>      msg (&quot;You have chosen B&#46;&quot;)<br/>    }<br/>    else {<br/>      msg (&quot;---You must choose A or B&#46;&quot;)<br/>      menu<br/>    }<br/>  }<br/>&lt;/function&gt;</code></pre><br/><br/>It means you have a ton of functions if you have a lot of choices in your game, but I kind of like that every choice point is really easy to find if it needs to be edited. It might not be the most straightforward way, and it might be improvable in 5.4, but it works well for me.<br/><br/>It's simple in the GUI too; you would just create a new function called &quot;menu&quot; and have it run this script&#058;<div><img src=\"/forumattachments/612/choicefunction.JPG\" alt=\"choicefunction.JPG\" /></div>",
      "PostDate": "2013-05-13T15:00:32+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24547",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "If anyone wants some &quot;third-party&quot; menu code, I have some which:\n\n1) Takes a string dictionary for the choices.\n2) Puts up the choices in an inline, numbered menu and allows typing a number or clicking the number to choose\n3) If the input is invalid, it redraws the menu, telling you what you should type.\n4) Takes an object/script pair to allow invoking the script attribute of an object once a valid choice is made.\n5) Takes a &quot;pre-script&quot; parameter (can be null) which specifies a script to run before the menu is shown, either the first time or on subsequent times (e.g. the pre-script might clear the screen and dump out a header).\n\nI suspect a number of us have our own menu code libraries. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "If anyone wants some &quot;third-party&quot; menu code, I have some which:<br/><br/>1) Takes a string dictionary for the choices.<br/>2) Puts up the choices in an inline, numbered menu and allows typing a number or clicking the number to choose<br/>3) If the input is invalid, it redraws the menu, telling you what you should type.<br/>4) Takes an object/script pair to allow invoking the script attribute of an object once a valid choice is made.<br/>5) Takes a &quot;pre-script&quot; parameter (can be null) which specifies a script to run before the menu is shown, either the first time or on subsequent times (e.g. the pre-script might clear the screen and dump out a header).<br/><br/>I suspect a number of us have our own menu code libraries. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-05-13T18:15:35+01:00",
      "LastEditDate": null
    }
  ]
}