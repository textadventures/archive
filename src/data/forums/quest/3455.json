{
  "Topic": {
    "TopicId": "3455",
    "ForumId": "10",
    "Title": "\"lookdir\" for Alternative Aliases",
    "LastUpdated": "2013-02-17T09:10:16+00:00",
    "ReplyCount": 8
  },
  "Posts": [
    {
      "PostId": "22685",
      "UserId": 0,
      "Username": "homeeman",
      "UserAvatar": null,
      "UserGravatar": "4c7b0e689de0b974bfe447478a40fb60",
      "EditableText": "As a personal preference, I don't care for the traditional compass directions as a method of navigation.  I ignore the all the compass hullabaloo on the &quot;exits&quot; tab and just add them at the bottom, without any directional association.  This works fine, until we come to the situation of &quot;look&quot; text.\n\nIt doesn't work.  A workaround would seem like a five-minute no-brainer, but I'm struggling here, guys.\n\nThere aren't any problems if you replace the current lookdir expression {^look (?&lt;exit&gt;all|the|directions|and|such)$} with its logical counterpart {^look (?&lt;exit&gt;.*)$}, but very few of my exits would work with this expression, as they're almost always the name of the room (your bedroom, the living room, the top of the volcano).  Instead, I tried changing the expression to [b:mtgrqp71]look at[/b:mtgrqp71] the stuff.\nThat didn't work, because then, depending on whichever expression came last, either objects or exits weren't look-at-able.\n\nSo, I tried changing the &quot;unresolved&quot; attribute for [b:mtgrqp71]look at #object#[/b:mtgrqp71] to &lt;unresolved type=&quot;script&quot;&gt;lookexit()&lt;/unresolved&gt; (where lookexit() was a function with the same script as lookdir).\nNope, it went straight to the unresolved object template.  So I tried changing that in a similar manner.  Nope.\n\nSo then I decide that shooting into the dark and trying to change text-only templates into full scripts isn't going to work, and that I need to dig around in the core files to see if I can find where it is that causes the lookat to go directly to the unresolved object template.  After a lot of digging, I could only conclude that the script that handles the numerous commands that involve objects (and what to do if those objects are unresolved) was either somewhere just out of my reach, or somewhere in the pile of files that aren't in the Core or Languages folder, which has all sorts of messy stuff I might not feel comfortable messing with.\n\nSo if you aren't out of ideas at this point, I'd love to hear what you've got to see if you can help me out of this jam.  Thanks for your time, guys.\n\n*[b:mtgrqp71]EDIT[/b:mtgrqp71]*: I don't seem to have been very clear in this post, since most people start their responses by telling me they weren't sure what I meant, so I'll try to be clear: When the player tries to [b:mtgrqp71]look at[/b:mtgrqp71] my exits, it gives the response [b:mtgrqp71]&quot;You can't see that.&quot;[/b:mtgrqp71]  This is because the command that handles looking at [i:mtgrqp71]exits[/i:mtgrqp71] is built to only handle commands geared towards the compass directions.  What I've detailed above is the measures I took to try to fix this (which didn't work).  So hopefully, now that I've made myself coherent, you guys can help me out.",
      "EditableFormat": "bbcode",
      "HTML": "As a personal preference, I don't care for the traditional compass directions as a method of navigation.  I ignore the all the compass hullabaloo on the &quot;exits&quot; tab and just add them at the bottom, without any directional association.  This works fine, until we come to the situation of &quot;look&quot; text.<br/><br/>It doesn't work.  A workaround would seem like a five-minute no-brainer, but I'm struggling here, guys.<br/><br/>There aren't any problems if you replace the current lookdir expression {^look (?&lt;exit&gt;all|the|directions|and|such)$} with its logical counterpart {^look (?&lt;exit&gt;.*)$}, but very few of my exits would work with this expression, as they're almost always the name of the room (your bedroom, the living room, the top of the volcano).  Instead, I tried changing the expression to <span style=\"font-weight:bold;\">look at</span> the stuff.<br/>That didn't work, because then, depending on whichever expression came last, either objects or exits weren't look-at-able.<br/><br/>So, I tried changing the &quot;unresolved&quot; attribute for <span style=\"font-weight:bold;\">look at #object#</span> to &lt;unresolved type=&quot;script&quot;&gt;lookexit()&lt;/unresolved&gt; (where lookexit() was a function with the same script as lookdir).<br/>Nope, it went straight to the unresolved object template.  So I tried changing that in a similar manner.  Nope.<br/><br/>So then I decide that shooting into the dark and trying to change text-only templates into full scripts isn't going to work, and that I need to dig around in the core files to see if I can find where it is that causes the lookat to go directly to the unresolved object template.  After a lot of digging, I could only conclude that the script that handles the numerous commands that involve objects (and what to do if those objects are unresolved) was either somewhere just out of my reach, or somewhere in the pile of files that aren't in the Core or Languages folder, which has all sorts of messy stuff I might not feel comfortable messing with.<br/><br/>So if you aren't out of ideas at this point, I'd love to hear what you've got to see if you can help me out of this jam.  Thanks for your time, guys.<br/><br/>*<span style=\"font-weight:bold;\">EDIT</span>*: I don't seem to have been very clear in this post, since most people start their responses by telling me they weren't sure what I meant, so I'll try to be clear: When the player tries to <span style=\"font-weight:bold;\">look at</span> my exits, it gives the response <span style=\"font-weight:bold;\">&quot;You can't see that.&quot;</span>  This is because the command that handles looking at <span style=\"font-style:italic;\">exits</span> is built to only handle commands geared towards the compass directions.  What I've detailed above is the measures I took to try to fix this (which didn't work).  So hopefully, now that I've made myself coherent, you guys can help me out.",
      "PostDate": "2013-02-11T07:03:01+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "22687",
      "UserId": 0,
      "Username": "TriangleGames",
      "UserAvatar": null,
      "UserGravatar": "134d9e995777da65c5cf8efda551d579",
      "EditableText": "I'm a little unclear exactly what you're trying to achieve, but you should be able to write in a custom alias for exits under the attributes tab of the GUI, and then if you need to do more with it you could see what that changes in the code.",
      "EditableFormat": "bbcode",
      "HTML": "I'm a little unclear exactly what you're trying to achieve, but you should be able to write in a custom alias for exits under the attributes tab of the GUI, and then if you need to do more with it you could see what that changes in the code.",
      "PostDate": "2013-02-11T13:09:55+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "22688",
      "UserId": 0,
      "Username": "homeeman",
      "UserAvatar": null,
      "UserGravatar": "4c7b0e689de0b974bfe447478a40fb60",
      "EditableText": "Well that's exactly what I do.  My problem is that when the player tries to &quot;look at&quot; the exit, it doesn't work correctly because the look command for exits assumes you're using a compass direction... but I don't like the compass either.\nI'm all about keeping those fingers on the keyboard.",
      "EditableFormat": "bbcode",
      "HTML": "Well that's exactly what I do.  My problem is that when the player tries to &quot;look at&quot; the exit, it doesn't work correctly because the look command for exits assumes you're using a compass direction... but I don't like the compass either.<br/>I'm all about keeping those fingers on the keyboard.",
      "PostDate": "2013-02-11T17:42:31+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "22749",
      "UserId": 0,
      "Username": "homeeman",
      "UserAvatar": null,
      "UserGravatar": "4c7b0e689de0b974bfe447478a40fb60",
      "EditableText": "I also recently tried duplicating all the phrases (within the expression for the command) but replacing the ?&lt;object&gt;.* with ?&lt;exit&gt;.*, but that didn't really work either.  Although, there really wasn't a good place to splice in the code for handling exits.  Any ideas at all?",
      "EditableFormat": "bbcode",
      "HTML": "I also recently tried duplicating all the phrases (within the expression for the command) but replacing the ?&lt;object&gt;.* with ?&lt;exit&gt;.*, but that didn't really work either.  Although, there really wasn't a good place to splice in the code for handling exits.  Any ideas at all?",
      "PostDate": "2013-02-15T16:13:01+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "22760",
      "UserId": 0,
      "Username": "dellaqia",
      "UserAvatar": null,
      "UserGravatar": "65c5688b37d2ac27d146400eb7f19316",
      "EditableText": "I don't know if I understand very well what you've said but I became stuck in someting like that recently and maybe I can help a little bit. I also like to say &quot;look at north&quot; or some other direction hardly ever and prefer to say &quot;look thru the window&quot; (&quot;olhar pela janela&quot; in my language) or something like it. I thought I could just add new verbs to the command named &quot;lookdir&quot; [^olhar para (?&lt;exit&gt;.*)$|etc...], such as ^olhar pela and ^olhar pelo (since Portuguese distinguishes between masculine and feminine inanimate objects) but it didn't work. Although possible, ^olhar para (look at) only works for directions for when it is applied to objects it means the same of &quot;examine&quot;, whilst the others terms just work for some objects. So, I added the term &quot;olhar pela&quot; (look thru) to the verb tab of the object &quot;janela&quot; (window) that happens to be at north wall of my room and I could use both directions and a direct reference to the object, since I attach a proper script to the verb, of course. I think you can do the same, at least when refering to rooms, like bedroom or whatever. In any case you look thru something, a door or a window, for example. Regarding to unresolved types there is a dynamic template in the English.aslx that handles it, the &quot;YouLooking&quot; one. Maybe you can do something with that.",
      "EditableFormat": "bbcode",
      "HTML": "I don't know if I understand very well what you've said but I became stuck in someting like that recently and maybe I can help a little bit. I also like to say &quot;look at north&quot; or some other direction hardly ever and prefer to say &quot;look thru the window&quot; (&quot;olhar pela janela&quot; in my language) or something like it. I thought I could just add new verbs to the command named &quot;lookdir&quot; [^olhar para (?&lt;exit&gt;.*)$|etc...], such as ^olhar pela and ^olhar pelo (since Portuguese distinguishes between masculine and feminine inanimate objects) but it didn't work. Although possible, ^olhar para (look at) only works for directions for when it is applied to objects it means the same of &quot;examine&quot;, whilst the others terms just work for some objects. So, I added the term &quot;olhar pela&quot; (look thru) to the verb tab of the object &quot;janela&quot; (window) that happens to be at north wall of my room and I could use both directions and a direct reference to the object, since I attach a proper script to the verb, of course. I think you can do the same, at least when refering to rooms, like bedroom or whatever. In any case you look thru something, a door or a window, for example. Regarding to unresolved types there is a dynamic template in the English.aslx that handles it, the &quot;YouLooking&quot; one. Maybe you can do something with that.",
      "PostDate": "2013-02-16T15:16:52+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "22761",
      "UserId": 0,
      "Username": "homeeman",
      "UserAvatar": null,
      "UserGravatar": "4c7b0e689de0b974bfe447478a40fb60",
      "EditableText": "Yeah, you've run into the same problem I have.  But I'm just polishing a finished game.  It's never necessary for the player to look at any of the exits, I just want them to have the option.  I could put an object in every room with the same alias as the exit, and that could work, you're right, and it's not a bad idea...\nBut I'd rather just coax the &quot;lookdir&quot; command into working, since it's not a necessary component, and because there are a [u:23o7uztb]lot[/u:23o7uztb] of rooms I'd have to add new objects to.\nAs far as the YouLooking template goes, that also only works for directional references, and not to alternative exit names.  Thanks for the suggestion, though, I'll have to keep that in mind in case I ever decide to have the player look at any exits, because I just can't let myself use cardinal directions.",
      "EditableFormat": "bbcode",
      "HTML": "Yeah, you've run into the same problem I have.  But I'm just polishing a finished game.  It's never necessary for the player to look at any of the exits, I just want them to have the option.  I could put an object in every room with the same alias as the exit, and that could work, you're right, and it's not a bad idea...<br/>But I'd rather just coax the &quot;lookdir&quot; command into working, since it's not a necessary component, and because there are a <span style=\"text-decoration:underline;\">lot</span> of rooms I'd have to add new objects to.<br/>As far as the YouLooking template goes, that also only works for directional references, and not to alternative exit names.  Thanks for the suggestion, though, I'll have to keep that in mind in case I ever decide to have the player look at any exits, because I just can't let myself use cardinal directions.",
      "PostDate": "2013-02-16T22:07:27+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "22763",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "is it possible to do a &quot;GetExit&quot; function, and then check if it matches up with having the alias, which then would allow you to do what you want? As I think I had to do something similar to this for getting a command to work with recognize the object's alias, so that it could work when the game player typed in the object's alias for the command. As it normally checked for the the object's name when doing the command, and thus it couldn't find it, due to the object having the alias, without the extra &quot;get and check~match up&quot; scripting.",
      "EditableFormat": "bbcode",
      "HTML": "is it possible to do a &quot;GetExit&quot; function, and then check if it matches up with having the alias, which then would allow you to do what you want? As I think I had to do something similar to this for getting a command to work with recognize the object's alias, so that it could work when the game player typed in the object's alias for the command. As it normally checked for the the object's name when doing the command, and thus it couldn't find it, due to the object having the alias, without the extra &quot;get and check~match up&quot; scripting.",
      "PostDate": "2013-02-16T23:33:15+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "22775",
      "UserId": 0,
      "Username": "homeeman",
      "UserAvatar": null,
      "UserGravatar": "4c7b0e689de0b974bfe447478a40fb60",
      "EditableText": "You know, as a student who is minoring in computer science I usually strive to let Quest do most of the heavy lifting, using the built-in features where I can to help me out since I get all the programming practice I can stand, but I think you're really on to something here.\nDo you happen to know of a way I might go about allowing the player to use the phrase &quot;look at&quot; for looking at objects and exits alike?\nHmmm... actually, if I were to generalize the command to have it just read ?&lt;text&gt;.* and then use a GetObjectorExit script to direct it towards different functions I could make it work.  It doesn't sound like much fun, but I'm sure I can do it.  I'll be fine to get it done on my own (I don't always play well with others on this sort of thing) but I'd like to go ahead and encourage anyone who thinks they can think of an easier (or more efficient) way to go about something like this to speak up before I make some big ugly monster command and then find that there was an easier way to do it.",
      "EditableFormat": "bbcode",
      "HTML": "You know, as a student who is minoring in computer science I usually strive to let Quest do most of the heavy lifting, using the built-in features where I can to help me out since I get all the programming practice I can stand, but I think you're really on to something here.<br/>Do you happen to know of a way I might go about allowing the player to use the phrase &quot;look at&quot; for looking at objects and exits alike?<br/>Hmmm... actually, if I were to generalize the command to have it just read ?&lt;text&gt;.* and then use a GetObjectorExit script to direct it towards different functions I could make it work.  It doesn't sound like much fun, but I'm sure I can do it.  I'll be fine to get it done on my own (I don't always play well with others on this sort of thing) but I'd like to go ahead and encourage anyone who thinks they can think of an easier (or more efficient) way to go about something like this to speak up before I make some big ugly monster command and then find that there was an easier way to do it.",
      "PostDate": "2013-02-17T07:12:07+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "22777",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "you could always edit (alex' core quest) or create your own core codings... as if there's no other better built in way, then there is not another way other than this. If you go the command+function route, then it's a matter of creating the best code method you can (simpliest most efficient code possible).\n\nhere's how my code looks:\n\n(this is a part of my battle function, so you'll have to adjust it and figure out how to get it to work for exits and their aliases)\n\n[code:11uynr63]  &lt;command name=&quot;fight&quot;&gt;\n    &lt;pattern&gt;fight #text#&lt;/pattern&gt;\n    &lt;script&gt;\n      battle_system (game&#46;pov,text)\n    &lt;/script&gt;\n  &lt;/command&gt;\n\n  &lt;function name=&quot;battle_system&quot; parameters=&quot;self,text&quot; type=&quot;boolean&quot;&gt;\n    first_value = false\n    enemy = GetObject (text)\n\n// Credit goes to Pertex, as he~she provided this code below to me\n\n    if (enemy = null) {\n      foreach (obj,AllObjects()) {\n        if (obj&#46;alias=text) {\n          enemy = obj\n        }\n      }\n    }[/code:11uynr63]",
      "EditableFormat": "bbcode",
      "HTML": "you could always edit (alex' core quest) or create your own core codings... as if there's no other better built in way, then there is not another way other than this. If you go the command+function route, then it's a matter of creating the best code method you can (simpliest most efficient code possible).<br/><br/>here's how my code looks:<br/><br/>(this is a part of my battle function, so you'll have to adjust it and figure out how to get it to work for exits and their aliases)<br/><br/><pre><code>  &lt;command name=&quot;fight&quot;&gt;<br/>    &lt;pattern&gt;fight #text#&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      battle_system (game&#46;pov,text)<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;<br/><br/>  &lt;function name=&quot;battle_system&quot; parameters=&quot;self,text&quot; type=&quot;boolean&quot;&gt;<br/>    first_value = false<br/>    enemy = GetObject (text)<br/><br/>// Credit goes to Pertex, as he~she provided this code below to me<br/><br/>    if (enemy = null) {<br/>      foreach (obj,AllObjects()) {<br/>        if (obj&#46;alias=text) {<br/>          enemy = obj<br/>        }<br/>      }<br/>    }</code></pre>",
      "PostDate": "2013-02-17T09:10:16+00:00",
      "LastEditDate": null
    }
  ]
}
