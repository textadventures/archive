{
  "Topic": {
    "TopicId": "ozt9h29l8eox910zuuihog",
    "ForumId": "10",
    "Title": "Best approach at creating Pen & Paper RPG style combat/character system",
    "LastUpdated": "2018-11-01T08:21:32.4740947Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "e3e3839b-0dd5-4515-a995-fb60e460b2fc",
      "UserId": 383686,
      "Username": "myarichuk",
      "AvatarUrl": "https://i.imgur.com/B2r7Dfxb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey everyone, newbie at Quest stuff here.\r\nI've been wanting to create something RPG-ish for a while, so I started implementing simplified version of [OpenD6 RPG system](https://ogc.rpglibrary.org/index.php?title=OpenD6) (the fantasy variant)\r\n\r\nSo far, I have written minor stuff like d6 dice rolling and character attributes, and I am wondering whether my approach at implementing attributes is good or perhaps this can be achieved in better, simpler way.  \r\n\r\nI would appreciate some feedback about the code I've written so far - the code is in repository [here](https://github.com/myarichuk/OpenD6).\r\n\r\nIdeally, I would like to create a library that would handle combat , various creatures (actual fighting, items like armor, magic scrolls and so on), skill checks and character creation.\r\n\r\nAlso, would appreciate any thoughts about this. How feasible is to create customizable and reusable library that would be useful not just to me but to others as well?\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey everyone, newbie at Quest stuff here.<br>\nI've been wanting to create something RPG-ish for a while, so I started implementing simplified version of <a href=\"https://ogc.rpglibrary.org/index.php?title=OpenD6\">OpenD6 RPG system</a> (the fantasy variant)</p>\n<p>So far, I have written minor stuff like d6 dice rolling and character attributes, and I am wondering whether my approach at implementing attributes is good or perhaps this can be achieved in better, simpler way.</p>\n<p>I would appreciate some feedback about the code I've written so far - the code is in repository <a href=\"https://github.com/myarichuk/OpenD6\">here</a>.</p>\n<p>Ideally, I would like to create a library that would handle combat , various creatures (actual fighting, items like armor, magic scrolls and so on), skill checks and character creation.</p>\n<p>Also, would appreciate any thoughts about this. How feasible is to create customizable and reusable library that would be useful not just to me but to others as well?</p>\n\n",
      "PostDate": "2018-11-01T08:21:32.4740947Z",
      "LastEditDate": "2018-11-01T08:24:16.3249971Z",
      "link": null
    },
    {
      "PostId": "73a9aa4f-ffbb-4dcf-a3c4-81f38ada9ab3",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\nHave you seen this?\r\n\r\nhttps://github.com/ThePix/quest/wiki/CombatLib",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p>Have you seen this?</p>\n<p>https://github.com/ThePix/quest/wiki/CombatLib</p>\n\n",
      "PostDate": "2018-11-01T13:00:01.0134556Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7c432984-cb3e-43c1-8cab-fb49235a1600",
      "UserId": 383686,
      "Username": "myarichuk",
      "AvatarUrl": "https://i.imgur.com/B2r7Dfxb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah, I've seen it - that library is what initially gave me the idea to perhaps create something that would closely resemble pen & paper RPG. \r\nAnd yes, there is a chance that I am biting off more than I can chew, I am aware of that :)",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah, I've seen it - that library is what initially gave me the idea to perhaps create something that would closely resemble pen &amp; paper RPG.<br>\nAnd yes, there is a chance that I am biting off more than I can chew, I am aware of that :)</p>\n\n",
      "PostDate": "2018-11-01T14:26:17.8886251Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "23d89604-f509-4f39-80e7-ce9997efbbb8",
      "UserId": 25543,
      "Username": "Silver",
      "AvatarUrl": "https://i.imgur.com/LMGdoqRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "We all bite off more than we can chew, it’s part of the learning process. ",
      "EditableFormat": "markdown",
      "HTML": "<p>We all bite off more than we can chew, it’s part of the learning process.</p>\n\n",
      "PostDate": "2018-11-01T17:39:02.1784045Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b9ecc99e-0cb8-4042-8cc9-4d73ab28d2b2",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There's a lot of already built-in functionality, such as the 4 randomization Functions:\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/ (categorical order)\r\nhttp://docs.textadventures.co.uk/quest/functions/index_allfunctions.html (alphabetical order)\r\n\r\nDiceRoll ()\r\nGetRandomInt ()\r\nGetRandomDouble ()\r\nRandomChance ()\r\n\r\n----------\r\n\r\nyou can also take a look through this thread for resources:\r\n\r\nhttp://textadventures.co.uk/forum/design\r\n\r\n----------\r\n\r\nhere's a thread I made to compile various rpg design resources, that may be useful for some ideas for you:\r\n\r\nhttp://textadventures.co.uk/forum/design/topic/3876/rpg-elements-game-mechanics-and-game-design\r\n\r\n------------\r\n\r\nPixie has done a lot of combat/magic/equipment and etc rpg mechanics coding\r\n\r\nKV and mrangel probably has done some as well\r\n\r\nI've done some too\r\n\r\nif you know basic scripting, doing rpg mechanics isn't too hard, but where my own limit is at is with doing good system/game-wide (scalable/editable/efficient-optimized/etc) coding of rpg mechanics",
      "EditableFormat": "markdown",
      "HTML": "<p>There's a lot of already built-in functionality, such as the 4 randomization Functions:</p>\n<p>http://docs.textadventures.co.uk/quest/functions/ (categorical order)<br>\nhttp://docs.textadventures.co.uk/quest/functions/index_allfunctions.html (alphabetical order)</p>\n<p>DiceRoll ()<br>\nGetRandomInt ()<br>\nGetRandomDouble ()<br>\nRandomChance ()</p>\n<hr>\n<p>you can also take a look through this thread for resources:</p>\n<p>http://textadventures.co.uk/forum/design</p>\n<hr>\n<p>here's a thread I made to compile various rpg design resources, that may be useful for some ideas for you:</p>\n<p>http://textadventures.co.uk/forum/design/topic/3876/rpg-elements-game-mechanics-and-game-design</p>\n<hr>\n<p>Pixie has done a lot of combat/magic/equipment and etc rpg mechanics coding</p>\n<p>KV and mrangel probably has done some as well</p>\n<p>I've done some too</p>\n<p>if you know basic scripting, doing rpg mechanics isn't too hard, but where my own limit is at is with doing good system/game-wide (scalable/editable/efficient-optimized/etc) coding of rpg mechanics</p>\n\n",
      "PostDate": "2018-11-01T19:50:59.6546719Z",
      "LastEditDate": "2018-11-01T20:00:20.256472Z",
      "link": null
    },
    {
      "PostId": "9e4ed09c-9db7-417b-9d8c-ab91116a5781",
      "UserId": 383686,
      "Username": "myarichuk",
      "AvatarUrl": "https://i.imgur.com/B2r7Dfxb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@Silver \r\n>We all bite off more than we can chew, it’s part of the learning process.\r\n\r\nYeah, and the learning process is the most fun part :)\r\n\r\n@hegemonkhan\r\nThanks, that is seriously awesome compilation! \r\nCurrently I am following OpenD6/Fantasy reference, but I think some variation/deviation from them can't hurt. \r\n\r\n>if you know basic scripting, doing rpg mechanics isn't too hard, but where my own limit is at is with doing good system/game-wide (scalable/editable/efficient-optimized/etc) coding of rpg mechanics\r\n\r\nIt is not that hard, I agree. However, creating scalable and reusable Quest library for RPG mechanics is a challenge - I am used to doing things in OO programming languages like C++/C#, so currently I am learning proper ways of doing things with Quest scripting through experimentation.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>@Silver</p>\n<blockquote>\n<p>We all bite off more than we can chew, it’s part of the learning process.</p>\n</blockquote>\n<p>Yeah, and the learning process is the most fun part :)</p>\n<p>@hegemonkhan<br>\nThanks, that is seriously awesome compilation!<br>\nCurrently I am following OpenD6/Fantasy reference, but I think some variation/deviation from them can't hurt.</p>\n<blockquote>\n<p>if you know basic scripting, doing rpg mechanics isn't too hard, but where my own limit is at is with doing good system/game-wide (scalable/editable/efficient-optimized/etc) coding of rpg mechanics</p>\n</blockquote>\n<p>It is not that hard, I agree. However, creating scalable and reusable Quest library for RPG mechanics is a challenge - I am used to doing things in OO programming languages like C++/C#, so currently I am learning proper ways of doing things with Quest scripting through experimentation.</p>\n\n",
      "PostDate": "2018-11-02T07:54:24.7856398Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f3e4ce5d-867b-4d74-a131-88052a39d6fd",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What type of combat are you looking for?\r\n\r\nThis is something simple. ```player.health = player.health - roll ```\r\nhttp://textadventures.co.uk/forum/quest/topic/0vqepklal0yde6bi13fz3q/how-to-change-a-counter\r\n\r\nThis is The Pixie's Zombie Apocalypse game. It unambiguously takes stats from D&D.\r\nhttps://github.com/ThePix/quest/wiki/The-Zombie-Apocalypse-(on-the-web-version) \r\n\r\nPlease see my games to see the code in action.\r\nhttp://textadventures.co.uk/games/view/xb0ge9kzbewhodrtmxnnqw/the-legend-of-the-secret-of-the-smelly-stinky-fish\r\nhttp://textadventures.co.uk/games/view/fo9bej7z0kqiy_wxal2tcq/fing-game",
      "EditableFormat": "markdown",
      "HTML": "<p>What type of combat are you looking for?</p>\n<p>This is something simple. <code>player.health = player.health - roll</code><br>\nhttp://textadventures.co.uk/forum/quest/topic/0vqepklal0yde6bi13fz3q/how-to-change-a-counter</p>\n<p>This is The Pixie's Zombie Apocalypse game. It unambiguously takes stats from D&amp;D.<br>\nhttps://github.com/ThePix/quest/wiki/The-Zombie-Apocalypse-(on-the-web-version)</p>\n<p>Please see my games to see the code in action.<br>\nhttp://textadventures.co.uk/games/view/xb0ge9kzbewhodrtmxnnqw/the-legend-of-the-secret-of-the-smelly-stinky-fish<br>\nhttp://textadventures.co.uk/games/view/fo9bej7z0kqiy_wxal2tcq/fing-game</p>\n\n",
      "PostDate": "2018-11-02T17:34:23.5419239Z",
      "LastEditDate": "2018-11-02T17:48:46.8231529Z",
      "link": null
    },
    {
      "PostId": "66407baf-04c9-4b54-9411-50a19921d516",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ah, you know C++ and C#\r\n\r\nI know C++ pretty well, some of Java (had a bit of trouble with doing the graphics stuff, though that was when I took the java class as one of my first programming classes at college, so I can probably understand it a bit better now), and know a little with Python too. And only very basic stuff with web/scripting languages (html, css, js, xml, etc). Still struggling with Data Management (linked lists, maps, dictionaries, trees, iterators, etc), Assembly Languages, and Computer Architecture programming classes, so I'm still a beginner/amateur in programming.\r\n\r\nI played a lot of RPGs (love them), though never done D&D type of stuff, but they use similar mechanics/equations/formulas, lots of good ideas from rpgs and D&D stuff for references, hehe\r\n\r\nIn quest, it got 'Objects' already (the internal quest coding's 'OBJECTS' are known as the 'Elements' in Quest: http://docs.textadventures.co.uk/quest/elements/ , but there's the user-level's sub-Element 'Object' that we work with: http://docs.textadventures.co.uk/quest/elements/object.html ), which are the most powerful/useful things to work with, and you also got the 'Object Types' which work like user-level classes/groups as well that can be inherited to Objects and each other (nested layers of them), and then you got List/Dictionary Attributes (Attributes are Object data/members, including script attributes, that are also an Object's methods, as well) which can hold strings, objects, and/or scripts (only dictionaries can). Lastly, instead of using Functions, you can use Delegates, which basically act as 'Prototypes' for Script Attributes, allowing them to function just like Functions (input data/parameters/arguments and/or return values), so you can do full encapsulation, without using generalized Functions floating elsewhere in your game code.\r\n\r\n-----\r\n\r\nDelegates:\r\n\r\nhttp://docs.textadventures.co.uk/quest/types/using_delegates.html\r\n\r\nyou use 'rundelegate' if you do NOT return a value\r\n\r\nyou use 'RunDelegateFunction' if you DO return a value\r\n\r\n```\r\n<include ref=\"English.aslx\" />\r\n<include ref=\"Core.aslx\" />\r\n\r\n<game name=\"example_game\">\r\n  <attr name=\"start\" type=\"script\">\r\n    create (\"example_object\")\r\n    example_object.example_string_attribute = example_function (\"hi\")\r\n    msg (example_object.example_string_attribute)\r\n  </attr>\r\n</game>\r\n\r\n<function name=\"example_function\" parameters=\"example_string_parameter\" type=\"string\">\r\n  return (example_string_parameter)\r\n</function>\r\n\r\n// -------------------------------\r\n\r\n<include ref=\"English.aslx\" />\r\n<include ref=\"Core.aslx\" />\r\n\r\n<delegate name=\"example_delegate\" parameters=\"example_string_parameter\" type=\"string\" />\r\n\r\n<game name=\"example_game\">\r\n  <attr name=\"start\" type=\"script\">\r\n    example_object.example_string_attribute = RunDelegateFunction (example_object, \"example_script_attribute\", \"hi\")\r\n    msg (example_object.example_string_attribute)\r\n  </attr>\r\n</game>\r\n\r\n<object name=\"example_object\">\r\n  <attr name=\"example_script_attribute\" type=\"example_delegate\">\r\n    return (example_string_parameter)\r\n  </attr>\r\n</object>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>ah, you know C++ and C#</p>\n<p>I know C++ pretty well, some of Java (had a bit of trouble with doing the graphics stuff, though that was when I took the java class as one of my first programming classes at college, so I can probably understand it a bit better now), and know a little with Python too. And only very basic stuff with web/scripting languages (html, css, js, xml, etc). Still struggling with Data Management (linked lists, maps, dictionaries, trees, iterators, etc), Assembly Languages, and Computer Architecture programming classes, so I'm still a beginner/amateur in programming.</p>\n<p>I played a lot of RPGs (love them), though never done D&amp;D type of stuff, but they use similar mechanics/equations/formulas, lots of good ideas from rpgs and D&amp;D stuff for references, hehe</p>\n<p>In quest, it got 'Objects' already (the internal quest coding's 'OBJECTS' are known as the 'Elements' in Quest: http://docs.textadventures.co.uk/quest/elements/ , but there's the user-level's sub-Element 'Object' that we work with: http://docs.textadventures.co.uk/quest/elements/object.html ), which are the most powerful/useful things to work with, and you also got the 'Object Types' which work like user-level classes/groups as well that can be inherited to Objects and each other (nested layers of them), and then you got List/Dictionary Attributes (Attributes are Object data/members, including script attributes, that are also an Object's methods, as well) which can hold strings, objects, and/or scripts (only dictionaries can). Lastly, instead of using Functions, you can use Delegates, which basically act as 'Prototypes' for Script Attributes, allowing them to function just like Functions (input data/parameters/arguments and/or return values), so you can do full encapsulation, without using generalized Functions floating elsewhere in your game code.</p>\n<hr>\n<p>Delegates:</p>\n<p>http://docs.textadventures.co.uk/quest/types/using_delegates.html</p>\n<p>you use 'rundelegate' if you do NOT return a value</p>\n<p>you use 'RunDelegateFunction' if you DO return a value</p>\n<pre><code>&lt;include ref=\"English.aslx\" /&gt;\n&lt;include ref=\"Core.aslx\" /&gt;\n\n&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    create (\"example_object\")\n    example_object.example_string_attribute = example_function (\"hi\")\n    msg (example_object.example_string_attribute)\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;function name=\"example_function\" parameters=\"example_string_parameter\" type=\"string\"&gt;\n  return (example_string_parameter)\n&lt;/function&gt;\n\n// -------------------------------\n\n&lt;include ref=\"English.aslx\" /&gt;\n&lt;include ref=\"Core.aslx\" /&gt;\n\n&lt;delegate name=\"example_delegate\" parameters=\"example_string_parameter\" type=\"string\" /&gt;\n\n&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    example_object.example_string_attribute = RunDelegateFunction (example_object, \"example_script_attribute\", \"hi\")\n    msg (example_object.example_string_attribute)\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;object name=\"example_object\"&gt;\n  &lt;attr name=\"example_script_attribute\" type=\"example_delegate\"&gt;\n    return (example_string_parameter)\n  &lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n\n",
      "PostDate": "2018-11-02T17:50:22.1865342Z",
      "LastEditDate": "2018-11-02T18:04:29.9519172Z",
      "link": null
    },
    {
      "PostId": "135b9ef3-973a-44d9-826e-28af8a0074b0",
      "UserId": 383686,
      "Username": "myarichuk",
      "AvatarUrl": "https://i.imgur.com/B2r7Dfxb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@jmnevil54\r\n>What type of combat are you looking for?\r\n\r\nWhat I have in mind is kind of rule-based combat with multiple possible states that allow player s different possible actions to do in the middle of the combat.\r\nFor example (those are rough ideas, they are not set in stone):\r\n* Starting distance of the combat depends on context:\r\n  * If a room (or enclosed space), it starts between 2 meters and 10 meters (randomly)\r\n  * If player was sneaking to a monster (assassin style stabbing) - it would start at melee range\r\n  * If outside of a building, combat starts between 25 and 100 meters (randomly)\r\n  * All sorts of scenarios here could be possible - outside ambushes, initiate combat with NPCs that were not initially hostile etc\r\n* Different options to either close up the distance or use it to fire ranged weapons/cast spells and try to keep distance\r\n* For melee combat three possible states - attack, combine attack/spell cast with defense and only defense. Using skills and doing multiple things is possible in one turn but with a penalty to skill rolls (since I am looking at OpenD6 system, skill rolls are d6 dice rolls)\r\n* Special attacks and multiple combat stances that do buffs/debuffs\r\n* Secondary skills system that depend on primary properties - which affect combat and interactions with NPCs/environment (dodging, melee fighting, climbing, running etc) allowing things like skill based rolls to block and dodge attacks\r\n* Magic system with spells of different schools with bonus damage/resistances (fire elemental is immune to fire spells and gets bonus damage from frost spells)\r\n\r\nTo sum it up, I am looking something that complex enough to allow tactical approach to combat and resembles combat interactions of pen & paper RPG\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>@jmnevil54</p>\n<blockquote>\n<p>What type of combat are you looking for?</p>\n</blockquote>\n<p>What I have in mind is kind of rule-based combat with multiple possible states that allow player s different possible actions to do in the middle of the combat.<br>\nFor example (those are rough ideas, they are not set in stone):</p>\n<ul>\n<li>Starting distance of the combat depends on context:\n<ul>\n<li>If a room (or enclosed space), it starts between 2 meters and 10 meters (randomly)</li>\n<li>If player was sneaking to a monster (assassin style stabbing) - it would start at melee range</li>\n<li>If outside of a building, combat starts between 25 and 100 meters (randomly)</li>\n<li>All sorts of scenarios here could be possible - outside ambushes, initiate combat with NPCs that were not initially hostile etc</li>\n</ul>\n</li>\n<li>Different options to either close up the distance or use it to fire ranged weapons/cast spells and try to keep distance</li>\n<li>For melee combat three possible states - attack, combine attack/spell cast with defense and only defense. Using skills and doing multiple things is possible in one turn but with a penalty to skill rolls (since I am looking at OpenD6 system, skill rolls are d6 dice rolls)</li>\n<li>Special attacks and multiple combat stances that do buffs/debuffs</li>\n<li>Secondary skills system that depend on primary properties - which affect combat and interactions with NPCs/environment (dodging, melee fighting, climbing, running etc) allowing things like skill based rolls to block and dodge attacks</li>\n<li>Magic system with spells of different schools with bonus damage/resistances (fire elemental is immune to fire spells and gets bonus damage from frost spells)</li>\n</ul>\n<p>To sum it up, I am looking something that complex enough to allow tactical approach to combat and resembles combat interactions of pen &amp; paper RPG</p>\n\n",
      "PostDate": "2018-11-03T13:14:04.4525882Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "55e37141-92e5-4a59-8ffd-b321149d026d",
      "UserId": 383686,
      "Username": "myarichuk",
      "AvatarUrl": "https://i.imgur.com/B2r7Dfxb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@hegemonkhan\r\nI am fairly proficient with programming (writing C# is my day job), so currently the goal I set before myself is exploring the limitations  and quirks of Quest and creating/writing things in the most efficient way.\r\n\r\n\r\n>I played a lot of RPGs (love them), though never done D&D type of stuff, but they use similar mechanics/equations/formulas, lots of good ideas from rpgs and D&D stuff for references, hehe\r\n\r\nI LOVE RPGs! Besides computer game RPGs, I played pen & paper for a some time in college, so I am somewhat familiar with how their mechanics work - they are different from computer game RPGs - they have more complex stats/character system and they allow more complex interactions with game world. (modeling complex interactions is much harder than simple ones, so computer game RPG mechanics are understandably much simpler)\r\nSo I agree, computer game RPGs are good examples to follow, since not all pen & paper RPG interactions can  be modeled properly, and simplification is many times is warranted.\r\n\r\nAlso, huge thanks for the intro - I somehow missed that member methods are possible in Quest. OO encapsulation definitely makes things better! In code I wrote up until now (and I hadn't written much) I already had too much \"global\" functions to be comfortable with..\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>@hegemonkhan<br>\nI am fairly proficient with programming (writing C# is my day job), so currently the goal I set before myself is exploring the limitations  and quirks of Quest and creating/writing things in the most efficient way.</p>\n<blockquote>\n<p>I played a lot of RPGs (love them), though never done D&amp;D type of stuff, but they use similar mechanics/equations/formulas, lots of good ideas from rpgs and D&amp;D stuff for references, hehe</p>\n</blockquote>\n<p>I LOVE RPGs! Besides computer game RPGs, I played pen &amp; paper for a some time in college, so I am somewhat familiar with how their mechanics work - they are different from computer game RPGs - they have more complex stats/character system and they allow more complex interactions with game world. (modeling complex interactions is much harder than simple ones, so computer game RPG mechanics are understandably much simpler)<br>\nSo I agree, computer game RPGs are good examples to follow, since not all pen &amp; paper RPG interactions can  be modeled properly, and simplification is many times is warranted.</p>\n<p>Also, huge thanks for the intro - I somehow missed that member methods are possible in Quest. OO encapsulation definitely makes things better! In code I wrote up until now (and I hadn't written much) I already had too much \"global\" functions to be comfortable with..</p>\n\n",
      "PostDate": "2018-11-03T13:26:16.4931565Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2e16bedc-e843-4e7a-ad16-e33a88673293",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n\r\n----------------\r\n\r\ntwo main annoyances/limitations with quest that I can think of off hand:\r\n\r\nthe quest engine in made up of library files, so you can create your own quest engine, if you're good at programming and know how quest works. However... there's no 'ifdef/ifndef' functionality (as far as aware as I am) for the library files...\r\n\r\nalso, quest doesn't really allow for breaking/halting operations/scripting, so you got to be a bit creative with your scripting, when doing automatic looping and getting user inputs (typing via 'get input' or mouse-click menu popup selections via 'show menu, ask, etc'), though, generally tail-recursion/tail-looping works well, and/or using conditionals. For example, trying to use the 'while' function with getting user inputs, can be problematic, and you'll have to be a bit more creative in your scripting design/methods, and/or including in not use the 'while' function as well\r\n\r\n--------------\r\n\r\nand if you want to delve into the quest program/software itself:\r\n\r\nAlex started it as a learning project like 10 years ago... so unfortunately... it's quite a bit of a hodgepodge of various programming things, which makes it really difficult for everyone else (poor pixie) trying to develop it... now that Alex has moved on with his life\r\n\r\nhere's two blog posts of it with some info on what quest is built-upon (this is an old blog post, we got a new team, not sure if they'll take on more people, they may or may not, no idea, if you would be interested in getting involved with it):\r\n\r\nhttps://blog.textadventures.co.uk/2016/12/12/developers-needed/\r\nand\r\nhttps://blog.textadventures.co.uk/2016/12/07/looking-for-a-new-owner-for-textadventures-co-uk-and-quest/ (ah, this blog post has some good links, will put them at the bottom)\r\n\r\nand here's the home page of the blog webpages: https://blog.textadventures.co.uk\r\n(you can read the blogs to see the progress with quest development)\r\n\r\nthere's also a developer's webpage too, but I don't know/have a link to it off-hand (I'd have to search around for it)\r\n\r\nPixie and others have github pages for quest that have a lot of the resources for quest development and/or libraries they've made\r\n\r\n---------\r\n\r\nI think this is quest's main/developer's github page:\r\n\r\nhttps://github.com/textadventures/quest\r\n\r\nand some other useful links too (QuestKit, aka quest v6.00, is Alex' unfinished project to convert quest fully over to JS, so that any platform/computer/mobile-device can use it, as JS uses browsers):\r\n\r\nhttps://github.com/textadventures/quest\r\nhttp://textadventures.co.uk/forum/questkit",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>two main annoyances/limitations with quest that I can think of off hand:</p>\n<p>the quest engine in made up of library files, so you can create your own quest engine, if you're good at programming and know how quest works. However... there's no 'ifdef/ifndef' functionality (as far as aware as I am) for the library files...</p>\n<p>also, quest doesn't really allow for breaking/halting operations/scripting, so you got to be a bit creative with your scripting, when doing automatic looping and getting user inputs (typing via 'get input' or mouse-click menu popup selections via 'show menu, ask, etc'), though, generally tail-recursion/tail-looping works well, and/or using conditionals. For example, trying to use the 'while' function with getting user inputs, can be problematic, and you'll have to be a bit more creative in your scripting design/methods, and/or including in not use the 'while' function as well</p>\n<hr>\n<p>and if you want to delve into the quest program/software itself:</p>\n<p>Alex started it as a learning project like 10 years ago... so unfortunately... it's quite a bit of a hodgepodge of various programming things, which makes it really difficult for everyone else (poor pixie) trying to develop it... now that Alex has moved on with his life</p>\n<p>here's two blog posts of it with some info on what quest is built-upon (this is an old blog post, we got a new team, not sure if they'll take on more people, they may or may not, no idea, if you would be interested in getting involved with it):</p>\n<p>https://blog.textadventures.co.uk/2016/12/12/developers-needed/<br>\nand<br>\nhttps://blog.textadventures.co.uk/2016/12/07/looking-for-a-new-owner-for-textadventures-co-uk-and-quest/ (ah, this blog post has some good links, will put them at the bottom)</p>\n<p>and here's the home page of the blog webpages: https://blog.textadventures.co.uk<br>\n(you can read the blogs to see the progress with quest development)</p>\n<p>there's also a developer's webpage too, but I don't know/have a link to it off-hand (I'd have to search around for it)</p>\n<p>Pixie and others have github pages for quest that have a lot of the resources for quest development and/or libraries they've made</p>\n<hr>\n<p>I think this is quest's main/developer's github page:</p>\n<p>https://github.com/textadventures/quest</p>\n<p>and some other useful links too (QuestKit, aka quest v6.00, is Alex' unfinished project to convert quest fully over to JS, so that any platform/computer/mobile-device can use it, as JS uses browsers):</p>\n<p>https://github.com/textadventures/quest<br>\nhttp://textadventures.co.uk/forum/questkit</p>\n\n",
      "PostDate": "2018-11-03T16:23:57.7613584Z",
      "LastEditDate": "2018-11-03T16:52:02.9374774Z",
      "link": null
    },
    {
      "PostId": "84234628-e81f-4421-b8f0-07cb82b951ef",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Text only gets you so far for battle strategy...\r\nMap a room with tiles and have the player and NPCs move on that map.\r\nThen... you can see where everyone is and know who to attack...\r\nAnd see what you can move behind to protect yourself from an attacker.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Text only gets you so far for battle strategy...<br>\nMap a room with tiles and have the player and NPCs move on that map.<br>\nThen... you can see where everyone is and know who to attack...<br>\nAnd see what you can move behind to protect yourself from an attacker.</p>\n\n",
      "PostDate": "2018-11-04T01:38:03.5190025Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c3c67d8c-5746-47a6-a558-63203b8f3cac",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Alex started it as a learning project like 10 years ago... so unfortunately... it's quite a bit of a hodgepodge of various programming things, which makes it really difficult for everyone else (poor pixie) trying to develop it... now that Alex has moved on with his life\r\n\r\nThat is a bit unfair. Alex started 20 years ago, but completely redesigned it with Quest 5, so it is not a \"hodgepodge\". It is a complex, modern Visual Studio solution, which makes it difficult for me, because I have no background in that area.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Alex started it as a learning project like 10 years ago... so unfortunately... it's quite a bit of a hodgepodge of various programming things, which makes it really difficult for everyone else (poor pixie) trying to develop it... now that Alex has moved on with his life</p>\n</blockquote>\n<p>That is a bit unfair. Alex started 20 years ago, but completely redesigned it with Quest 5, so it is not a \"hodgepodge\". It is a complex, modern Visual Studio solution, which makes it difficult for me, because I have no background in that area.</p>\n\n",
      "PostDate": "2018-11-04T21:48:39.0806596Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "204d8156-e737-4e6b-bb0f-9e312cf0baec",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I am fairly proficient with programming (writing C# is my day job), so currently the goal I set before myself is exploring the limitations and quirks of Quest and creating/writing things in the most efficient way.\r\n\r\nWith that background, I hope you will stick around and end up helping us!\r\n\r\n> Also, huge thanks for the intro - I somehow missed that member methods are possible in Quest. OO encapsulation definitely makes things better! In code I wrote up until now (and I hadn't written much) I already had too much \"global\" functions to be comfortable with..\r\n\r\nYeah, Quest is OO, but it is not great in that regard (note that classes are called types). Scripts are awkward, as they do not return values, and delegates require extra work (partly because there is no editor support). I know I use functions way more than I would with another language.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I am fairly proficient with programming (writing C# is my day job), so currently the goal I set before myself is exploring the limitations and quirks of Quest and creating/writing things in the most efficient way.</p>\n</blockquote>\n<p>With that background, I hope you will stick around and end up helping us!</p>\n<blockquote>\n<p>Also, huge thanks for the intro - I somehow missed that member methods are possible in Quest. OO encapsulation definitely makes things better! In code I wrote up until now (and I hadn't written much) I already had too much \"global\" functions to be comfortable with..</p>\n</blockquote>\n<p>Yeah, Quest is OO, but it is not great in that regard (note that classes are called types). Scripts are awkward, as they do not return values, and delegates require extra work (partly because there is no editor support). I know I use functions way more than I would with another language.</p>\n\n",
      "PostDate": "2018-11-04T21:54:49.6938407Z",
      "LastEditDate": "2018-11-04T21:55:30.5955273Z",
      "link": null
    },
    {
      "PostId": "50fc1a1b-3427-47e5-ae95-21016b36c34b",
      "UserId": 383686,
      "Username": "myarichuk",
      "AvatarUrl": "https://i.imgur.com/B2r7Dfxb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> With that background, I hope you will stick around and end up helping us!\r\n\r\n> Scripts are awkward, as they do not return values, and delegates require extra work (partly because there is no editor support)\r\n\r\n\r\nIf I have enough time to look properly through Quest's code, I will definitely contribute :) \r\nCurrently, I am playing around with the idea of creating parser and interpreter for the scripting language that would allow to easily extend/modify the language, and also would allow creating Visual Studio style code editor textbox (with static code analysis,  intellisense, red squigglies to underline syntax errors and so on). \r\n\r\nBuilding the parser itself it is not _that_ hard (I have a working prototype [here](https://github.com/myarichuk/QuestScriptParser)) - the hard part is to integrate it properly so backward compatibility is not ruined. So far I didn't have time to look into how exactly Quest runs its scripts, just looked over _ExpressionOwner_ class to get the general idea of how things work.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>With that background, I hope you will stick around and end up helping us!</p>\n</blockquote>\n<blockquote>\n<p>Scripts are awkward, as they do not return values, and delegates require extra work (partly because there is no editor support)</p>\n</blockquote>\n<p>If I have enough time to look properly through Quest's code, I will definitely contribute :)<br>\nCurrently, I am playing around with the idea of creating parser and interpreter for the scripting language that would allow to easily extend/modify the language, and also would allow creating Visual Studio style code editor textbox (with static code analysis,  intellisense, red squigglies to underline syntax errors and so on).</p>\n<p>Building the parser itself it is not <em>that</em> hard (I have a working prototype <a href=\"https://github.com/myarichuk/QuestScriptParser\">here</a>) - the hard part is to integrate it properly so backward compatibility is not ruined. So far I didn't have time to look into how exactly Quest runs its scripts, just looked over <em>ExpressionOwner</em> class to get the general idea of how things work.</p>\n\n",
      "PostDate": "2018-11-06T08:11:08.6336712Z",
      "LastEditDate": "2018-11-06T16:55:41.0639925Z",
      "link": null
    },
    {
      "PostId": "fa5999b1-b1a2-4674-81c3-0fb7baf45b2f",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@myarichuk <----At night he is batman.😁\r\n\r\nSorry Micheal watched your polygot video. Also glad to see you are still adding to your Quest Script Parser.\r\nI am waiting to see your finished program.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>@myarichuk &lt;----At night he is batman.😁</p>\n<p>Sorry Micheal watched your polygot video. Also glad to see you are still adding to your Quest Script Parser.<br>\nI am waiting to see your finished program.</p>\n\n",
      "PostDate": "2018-12-25T22:12:50.7127471Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
