{
  "Topic": {
    "TopicId": "tbqkwjqa_k_thivdwjgh_q",
    "ForumId": "10",
    "Title": "printing description based on object list.",
    "LastUpdated": "2020-01-26T22:28:15.0115396Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "eeb87a53-4805-4a45-9b27-717fc63c5150",
      "UserId": 108697,
      "Username": "Zubric",
      "AvatarUrl": "https://i.imgur.com/aZRi4oIb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "what i'm trying to is match object with a description(that will go in room descirpotn) without using a ton of seperate IF statements\r\n```obj = NewObjectlist()\r\nlist add (obj, object1)\r\nlist add (obj, object2)\r\ndesc = NewStringlist()\r\nlist add = (desc, \"this is object1\")\r\nlist add = (desc, \"this is object2\")\r\nforeach (x, obj) {\r\n  if (ListContains(ScopeReachable(), x)) {\r\n    msg (\"message\")\r\n  }\r\n}\r\n```\r\nin this case, it prints message twice for the test(both objects in same room at the moment). Objects are randomly scattered at the start of the game si don't know which items will be in what room. or would a large IF statement function be better?",
      "EditableFormat": "markdown",
      "HTML": "<p>what i'm trying to is match object with a description(that will go in room descirpotn) without using a ton of seperate IF statements</p>\n<pre><code>list add (obj, object1)\nlist add (obj, object2)\ndesc = NewStringlist()\nlist add = (desc, \"this is object1\")\nlist add = (desc, \"this is object2\")\nforeach (x, obj) {\n  if (ListContains(ScopeReachable(), x)) {\n    msg (\"message\")\n  }\n}\n</code></pre>\n<p>in this case, it prints message twice for the test(both objects in same room at the moment). Objects are randomly scattered at the start of the game si don't know which items will be in what room. or would a large IF statement function be better?</p>\n\n",
      "PostDate": "2020-01-26T22:28:15.0115396Z",
      "LastEditDate": "2020-01-26T22:29:22.2564725Z",
      "link": null
    },
    {
      "PostId": "62c45b81-0c89-4cd6-a82b-f416347767d6",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Do the objects have the same description in each room they might be found in?\r\n\r\nIf so, try enabling \"In-room descriptions\" on the game's 'Features' tab.\r\nThat will allow you to give any object a line of description which will automatically be added to the end of the description for the room it is in.\r\n\r\n<hr />\r\n\r\nIf your descriptions are different for each room (for example if they describe where in the room an object is), it may be better to use a dictionary like this:\r\n```\r\nobj_descr = NewStringDictionary()\r\ndictionary add (obj_descr, \"object1\", \"there is an object1 on the floor.\")\r\ndictionary add (obj_descr, \"object2\", \"there is an object2 on a shelf in the corner.\")\r\ndictionary add (obj_descr, \"object3\", \"object3 is leaving a stain on the carpet.\")\r\n\r\nforeach (obj, ScopeReachableNotHeld()) {\r\n  if (DictionaryContains (obj_descr, obj.name)) {\r\n    msg (StringDictionaryItem (obj_descr, obj.name))\r\n  }\r\n}\r\n```\r\nYou could also make the dictionary an attribute of the room, so you don't have to create it every time.",
      "EditableFormat": "markdown",
      "HTML": "<p>Do the objects have the same description in each room they might be found in?</p>\n<p>If so, try enabling \"In-room descriptions\" on the game's 'Features' tab.<br>\nThat will allow you to give any object a line of description which will automatically be added to the end of the description for the room it is in.</p>\n<hr>\n<p>If your descriptions are different for each room (for example if they describe where in the room an object is), it may be better to use a dictionary like this:</p>\n<pre><code>obj_descr = NewStringDictionary()\ndictionary add (obj_descr, \"object1\", \"there is an object1 on the floor.\")\ndictionary add (obj_descr, \"object2\", \"there is an object2 on a shelf in the corner.\")\ndictionary add (obj_descr, \"object3\", \"object3 is leaving a stain on the carpet.\")\n\nforeach (obj, ScopeReachableNotHeld()) {\n  if (DictionaryContains (obj_descr, obj.name)) {\n    msg (StringDictionaryItem (obj_descr, obj.name))\n  }\n}\n</code></pre>\n<p>You could also make the dictionary an attribute of the room, so you don't have to create it every time.</p>\n\n",
      "PostDate": "2020-01-26T23:31:21.7438459Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cf26e8d3-d7eb-4617-902b-d3c63d8a54e4",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Or turning that last piece of code so that it behaves like your example:\r\n```\r\nobj_descr = NewStringDictionary()\r\ndictionary add (obj_descr, \"object1\", \"there is an object1 on the floor.\")\r\ndictionary add (obj_descr, \"object2\", \"there is an object2 on a shelf in the corner.\")\r\ndictionary add (obj_descr, \"object3\", \"object3 is leaving a stain on the carpet.\")\r\n\r\nscope = ScopeReachableNotHeld()\r\nforeach (key, obj_descr) {\r\n  obj = GetObject (key)\r\n  desc = DictionaryItem (obj_descr, key)\r\n  if (ListContains (scope, obj)) {\r\n    msg (desc)\r\n  }\r\n}\r\n```\r\n(the difference being that this will list objects in the order they appear in the dictionary, whereas the previous will show them in the order they appear in the object tree at the left of the editor window)",
      "EditableFormat": "markdown",
      "HTML": "<p>Or turning that last piece of code so that it behaves like your example:</p>\n<pre><code>obj_descr = NewStringDictionary()\ndictionary add (obj_descr, \"object1\", \"there is an object1 on the floor.\")\ndictionary add (obj_descr, \"object2\", \"there is an object2 on a shelf in the corner.\")\ndictionary add (obj_descr, \"object3\", \"object3 is leaving a stain on the carpet.\")\n\nscope = ScopeReachableNotHeld()\nforeach (key, obj_descr) {\n  obj = GetObject (key)\n  desc = DictionaryItem (obj_descr, key)\n  if (ListContains (scope, obj)) {\n    msg (desc)\n  }\n}\n</code></pre>\n<p>(the difference being that this will list objects in the order they appear in the dictionary, whereas the previous will show them in the order they appear in the object tree at the left of the editor window)</p>\n\n",
      "PostDate": "2020-01-27T00:13:03.0239739Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
