{
  "Topic": {
    "TopicId": "rcf5agop8u_ijoq-omwbpg",
    "ForumId": "10",
    "Title": "updating hyperlinks",
    "LastUpdated": "2018-02-28T19:40:21.2048616Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "c194cd08-f90e-4303-80c3-f3fc00fef0c0",
      "UserId": 344046,
      "Username": "baskham",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7689475b10ef3f61ec180330cc180daa?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi guys.\r\n\r\nOnce again, I have an interesting challenge :-)\r\n\r\nI want to do this.\r\n\r\n- Player is in a lift\r\n- There are 3 buttons (b1, b2, b3)\r\n- Access to the third floor is restricted. This is indicated with a small lamp glowing red. The others glow green.\r\n- If the player just presses b3, he gets an errormsg saying that the floor is off limits.\r\n- To go to the third floor he must first swipe a card through a card reader.\r\n- this will make the lamp on b3 to turn green\r\n- Now when he presses b3, the lift moves as normal\r\n\r\nAt first sight this looks easy.\r\nJust maintain a flag and flip it when the card is swept.\r\nAt the same time change the color of the lamp.\r\n\r\nBut for a liftbutton there is a problem.\r\nYou can't run a script when the button is pressed.\r\nSo you can't prevent the button from working.\r\n\r\nSo next possible solution.\r\nHave a liftbutton and an inanimate object looking the same but with different colors in the lamp.\r\nThen either move them back and forth to an offstage room or flip the visible flag.\r\n\r\nBoth of these works fine.\r\n\r\nBut there is one annoying problem for both of them.\r\nWhen the room description for the lift is printed, the buttons will appear as clickable links.\r\nBut if you have moved the buttons around or flipped the visible flag, b3 is no longer a link.\r\n(In the description scrolling up)\r\nIt is just text.\r\n\r\nSo it cannot be clicked.\r\nIn the inventory it is ok and clickable.\r\n\r\nThis is annoying.\r\nBut it could be solved by issuing a look command,\r\nIn the new instance of the description the links are ok again.\r\nBut first of all it is not very elegant.\r\nAnd secondly I can't figure out how to issue the \"look\" command from inside a script.\r\n\r\nSo.\r\nAny ideas?\r\n\r\nBR Benny",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi guys.</p>\n<p>Once again, I have an interesting challenge :-)</p>\n<p>I want to do this.</p>\n<ul>\n<li>Player is in a lift</li>\n<li>There are 3 buttons (b1, b2, b3)</li>\n<li>Access to the third floor is restricted. This is indicated with a small lamp glowing red. The others glow green.</li>\n<li>If the player just presses b3, he gets an errormsg saying that the floor is off limits.</li>\n<li>To go to the third floor he must first swipe a card through a card reader.</li>\n<li>this will make the lamp on b3 to turn green</li>\n<li>Now when he presses b3, the lift moves as normal</li>\n</ul>\n<p>At first sight this looks easy.<br>\nJust maintain a flag and flip it when the card is swept.<br>\nAt the same time change the color of the lamp.</p>\n<p>But for a liftbutton there is a problem.<br>\nYou can't run a script when the button is pressed.<br>\nSo you can't prevent the button from working.</p>\n<p>So next possible solution.<br>\nHave a liftbutton and an inanimate object looking the same but with different colors in the lamp.<br>\nThen either move them back and forth to an offstage room or flip the visible flag.</p>\n<p>Both of these works fine.</p>\n<p>But there is one annoying problem for both of them.<br>\nWhen the room description for the lift is printed, the buttons will appear as clickable links.<br>\nBut if you have moved the buttons around or flipped the visible flag, b3 is no longer a link.<br>\n(In the description scrolling up)<br>\nIt is just text.</p>\n<p>So it cannot be clicked.<br>\nIn the inventory it is ok and clickable.</p>\n<p>This is annoying.<br>\nBut it could be solved by issuing a look command,<br>\nIn the new instance of the description the links are ok again.<br>\nBut first of all it is not very elegant.<br>\nAnd secondly I can't figure out how to issue the \"look\" command from inside a script.</p>\n<p>So.<br>\nAny ideas?</p>\n<p>BR Benny</p>\n\n",
      "PostDate": "2018-02-28T19:40:21.2048616Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "51bacebf-de95-4315-91b2-0a7bd3319cfb",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "EDIT\r\n\r\nDoctor Agon posted the solution (just after this one).  \r\n\r\n(I missed the part where you referenced not being able to changed the buttons' PRESS scripts.)",
      "EditableFormat": "markdown",
      "HTML": "<p>EDIT</p>\n<p>Doctor Agon posted the solution (just after this one).</p>\n<p>(I missed the part where you referenced not being able to changed the buttons' PRESS scripts.)</p>\n\n",
      "PostDate": "2018-02-28T20:56:39.3244795Z",
      "LastEditDate": "2018-03-01T02:50:56.8993465Z",
      "link": null
    },
    {
      "PostId": "dc50f1b8-884c-4d56-bbd1-8b2ea40dc46f",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi BR Benny,\r\nThere is a simple way to do this.\r\nOn your 'b3' button's verb tab. You'll see two verbs; one labelled 'press;push', the other one labelled 'move'.\r\nBoth are currently grey in colour, and say 'Make Editable Copy'.\r\nClick on the one for 'press;push' and press to 'Make Editable Copy'.\r\nOkay, you are now free to set your flag, turn your light green, and access the third floor.\r\nCut the '_PressButton' function out and paste it after the then box, and put a suitable out of order message in the else box.\r\neg\r\n```\r\nif (GetBoolean(card, \"access\")) {\r\n  _PressButton (this, false)\r\n}\r\nelse {\r\n  msg (\"Access Restricted to Authorized Personnel!!!\")\r\n}\r\n```\r\nHope this helps.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi BR Benny,<br>\nThere is a simple way to do this.<br>\nOn your 'b3' button's verb tab. You'll see two verbs; one labelled 'press;push', the other one labelled 'move'.<br>\nBoth are currently grey in colour, and say 'Make Editable Copy'.<br>\nClick on the one for 'press;push' and press to 'Make Editable Copy'.<br>\nOkay, you are now free to set your flag, turn your light green, and access the third floor.<br>\nCut the '_PressButton' function out and paste it after the then box, and put a suitable out of order message in the else box.<br>\neg</p>\n<pre><code>if (GetBoolean(card, \"access\")) {\n  _PressButton (this, false)\n}\nelse {\n  msg (\"Access Restricted to Authorized Personnel!!!\")\n}\n</code></pre>\n<p>Hope this helps.</p>\n\n",
      "PostDate": "2018-02-28T21:00:08.5855862Z",
      "LastEditDate": "2018-02-28T21:03:03.215889Z",
      "link": null
    },
    {
      "PostId": "4aca412a-0fc7-462f-8d62-1ef8fe66fcc6",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think that locking one floor is a common thing you'd want to do with a lift.\r\n\r\nSo maybe LiftLib should modify the default \"push\" verb for the liftbutton to include…\r\n```\r\n  if (GetBoolean(this, \"locked\")) {\r\n    if (HasString(this, \"lockedmessage\")) {\r\n      msg (this.lockedmessage)\r\n    }\r\n    else {\r\n      msg (DynamicTemplate(\"LockedObject\", this))\r\n    }\r\n  }\r\n  else {\r\n    [... code to go to the floor ...]\r\n  }\r\n```\r\nThen, someone using the library doesn't need to override the function; they can just add whatever verbs they need, or have a separate card reader object, to change the button's \"locked\" flag.",
      "EditableFormat": "markdown",
      "HTML": "<p>I think that locking one floor is a common thing you'd want to do with a lift.</p>\n<p>So maybe LiftLib should modify the default \"push\" verb for the liftbutton to include…</p>\n<pre><code>  if (GetBoolean(this, \"locked\")) {\n    if (HasString(this, \"lockedmessage\")) {\n      msg (this.lockedmessage)\n    }\n    else {\n      msg (DynamicTemplate(\"LockedObject\", this))\n    }\n  }\n  else {\n    [... code to go to the floor ...]\n  }\n</code></pre>\n<p>Then, someone using the library doesn't need to override the function; they can just add whatever verbs they need, or have a separate card reader object, to change the button's \"locked\" flag.</p>\n\n",
      "PostDate": "2018-02-28T21:44:27.8556612Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8b45e631-7ecf-4400-8930-965d200ceb9e",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have updated LiftLib to allow for this. Instructions here:\r\nhttps://github.com/ThePix/quest/wiki/Library:-Lifts",
      "EditableFormat": "markdown",
      "HTML": "<p>I have updated LiftLib to allow for this. Instructions here:<br>\nhttps://github.com/ThePix/quest/wiki/Library:-Lifts</p>\n\n",
      "PostDate": "2018-03-01T09:42:16.8362374Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c6c7a3d5-3515-4766-906f-291bdfc7ec6e",
      "UserId": 344046,
      "Username": "baskham",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7689475b10ef3f61ec180330cc180daa?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That is just great!\r\n\r\nThank you Pixie.\r\n\r\nDid you include K.V's grid stuff?",
      "EditableFormat": "markdown",
      "HTML": "<p>That is just great!</p>\n<p>Thank you Pixie.</p>\n<p>Did you include K.V's grid stuff?</p>\n\n",
      "PostDate": "2018-03-01T12:42:04.9439996Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "45126523-07a5-4de3-99b4-7e6db6ac7f0d",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Er... Well it should now!\r\n\r\nI have not tested the map stuff, as I do not use it, so let me know if it works okay.",
      "EditableFormat": "markdown",
      "HTML": "<p>Er... Well it should now!</p>\n<p>I have not tested the map stuff, as I do not use it, so let me know if it works okay.</p>\n\n",
      "PostDate": "2018-03-01T15:34:39.4031605Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f413c9a7-c687-4926-9ca0-83a9cb574ab4",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(I was already thinking that \"container_locked\" is a weird type to have. I think the features list should have separate tickboxes for \"is a container\" and \"can be locked\", with them coming up on separate tabs. That way, you could make a lift button type that looks at the \"locked\" attribute; and if someone wants a lockable lift button then can just tick lockable on the features list. Similarly, if someone makes a library that adds a \"combination lock\" tab, it would _just work_ with both lockable containers and lockable buttons. Even with [other things you might want to lock](https://youtu.be/edjZEPlCD9M?t=47s))\r\n\r\n((Though you'd want to keep the \"container_locked\" type for legacy compatibility))\r\n\r\n(((Bah… while writing this I ended up thinking about creating a padlock, that can be placed on any container, door, or switch that has a hasp. Making a puzzle where you're trying to smuggle some objects into a building, and different NPCs are capable of picking different types of locks, and have different behaviours to control whether they lock them again afterwards, so you have to work out which order to put the boxes inside each other, and which lock to put on each box… Like the puzzle they give in crypto lessons where you have to send somebody else a padlock in a box, and keep the key somewhere safe)))",
      "EditableFormat": "markdown",
      "HTML": "<p>(I was already thinking that \"container_locked\" is a weird type to have. I think the features list should have separate tickboxes for \"is a container\" and \"can be locked\", with them coming up on separate tabs. That way, you could make a lift button type that looks at the \"locked\" attribute; and if someone wants a lockable lift button then can just tick lockable on the features list. Similarly, if someone makes a library that adds a \"combination lock\" tab, it would <em>just work</em> with both lockable containers and lockable buttons. Even with <a href=\"https://youtu.be/edjZEPlCD9M?t=47s\">other things you might want to lock</a>)</p>\n<p>((Though you'd want to keep the \"container_locked\" type for legacy compatibility))</p>\n<p>(((Bah… while writing this I ended up thinking about creating a padlock, that can be placed on any container, door, or switch that has a hasp. Making a puzzle where you're trying to smuggle some objects into a building, and different NPCs are capable of picking different types of locks, and have different behaviours to control whether they lock them again afterwards, so you have to work out which order to put the boxes inside each other, and which lock to put on each box… Like the puzzle they give in crypto lessons where you have to send somebody else a padlock in a box, and keep the key somewhere safe)))</p>\n\n",
      "PostDate": "2018-03-01T16:01:51.6568977Z",
      "LastEditDate": "2018-03-01T16:09:14.700872Z",
      "link": null
    },
    {
      "PostId": "4327887e-95f8-4cb7-aeec-b8e57a6e7b8f",
      "UserId": 344046,
      "Username": "baskham",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7689475b10ef3f61ec180330cc180daa?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have now tested the new liftlib.\r\n\r\nIt works beautifully.\r\nBoth the locking and the mapping.\r\n\r\nThanks Pixie :-)",
      "EditableFormat": "markdown",
      "HTML": "<p>I have now tested the new liftlib.</p>\n<p>It works beautifully.<br>\nBoth the locking and the mapping.</p>\n<p>Thanks Pixie :-)</p>\n\n",
      "PostDate": "2018-03-01T18:32:27.7277241Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
