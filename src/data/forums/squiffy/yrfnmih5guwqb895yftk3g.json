{
  "Topic": {
    "TopicId": "yrfnmih5guwqb895yftk3g",
    "ForumId": "24",
    "Title": "Importing attributes from one game to another",
    "LastUpdated": "2020-08-21T13:05:23.0455155Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "5f3fb003-5a3e-49c5-ad34-f0cc9c1aaf2a",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "We had a thread a few months back about importing choices from one Squiffy game to another (at http://textadventures.co.uk/forum/squiffy/topic/5paercpdb0wazp1v5lwpbg/importing-attributes-from-one-game-to-its-sequel )- that thread's been closed now, but I'm resurrecting the concept as I've almost finished my game and would love to have options for carrying a character forward to subsequent games!\r\n\r\nmrangel came up with an excellent solution whereby user choices are saved into a password at the end of the first game which can be decoded by the second game to set the attributes there so the player can continue with the character they develoepd over the first game.\r\n\r\nThat's a great solution for users who have changed devices or browsers or cleared their cache between games, but Belén suggested that a more user-friendly alternative would be for the character to be saved in the LocalStorage of the browser at the end of game 1, and for game 2 to detect such saved characters and offer them to a player starting game 2.\r\n\r\nIdeally the player could either \r\n- select pre-existing characters stored in the borwser (potentially more than once, if they want to start game 2 with the same character multiple times)\r\n- use the password (if they've changed device or browser/cleared their cache, and therefore their characters aren't stored in their current browser)\r\n- or start from scratch with a new character. \r\n\r\nAnd as there could be a game 3 (and 4, and 5...) it would be good if their game 2 character could also then be saved separately to their game 1 character (a game 1 character can import into game 2, but not into game 3, and a game 2 character imported OR made from scratch in game 2 can import into game 3...and so on...)",
      "EditableFormat": "markdown",
      "HTML": "<p>We had a thread a few months back about importing choices from one Squiffy game to another (at http://textadventures.co.uk/forum/squiffy/topic/5paercpdb0wazp1v5lwpbg/importing-attributes-from-one-game-to-its-sequel )- that thread's been closed now, but I'm resurrecting the concept as I've almost finished my game and would love to have options for carrying a character forward to subsequent games!</p>\n<p>mrangel came up with an excellent solution whereby user choices are saved into a password at the end of the first game which can be decoded by the second game to set the attributes there so the player can continue with the character they develoepd over the first game.</p>\n<p>That's a great solution for users who have changed devices or browsers or cleared their cache between games, but Belén suggested that a more user-friendly alternative would be for the character to be saved in the LocalStorage of the browser at the end of game 1, and for game 2 to detect such saved characters and offer them to a player starting game 2.</p>\n<p>Ideally the player could either</p>\n<ul>\n<li>select pre-existing characters stored in the borwser (potentially more than once, if they want to start game 2 with the same character multiple times)</li>\n<li>use the password (if they've changed device or browser/cleared their cache, and therefore their characters aren't stored in their current browser)</li>\n<li>or start from scratch with a new character.</li>\n</ul>\n<p>And as there could be a game 3 (and 4, and 5...) it would be good if their game 2 character could also then be saved separately to their game 1 character (a game 1 character can import into game 2, but not into game 3, and a game 2 character imported OR made from scratch in game 2 can import into game 3...and so on...)</p>\n\n",
      "PostDate": "2020-08-21T13:05:23.0455155Z",
      "LastEditDate": "2020-08-21T13:05:59.9001466Z",
      "link": null
    },
    {
      "PostId": "40358daa-6639-4f75-9931-d68196a561b1",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OK… here's my attempt at modifying what we had last time to give the option of saving to localstorage.\r\n(2nd edit… added a timeout to the load function to ensure that the selector is displayed before attempting to populate it)\r\n\r\nI've realised that there's an unnecessary delay when loading the lzstring library, which can probably be avoided. So I'm poking a weird improvised \"load if not already loaded\" construct:\r\n```\r\n    (LZString ? ((i,f) => f()) : jQuery.getScript)(\"https://mrangel.info/lz-string.js\", function () {\r\n      // function body goes here\r\n    });\r\n```\r\nThat should load the LZString library and then run the function body; or just run the function if LZString is already loaded. I think.\r\nEDIT: Doesn't work. Corrected version in the post below. I've corrected it in the code snippets below - \r\n\r\nSo then, as the absolute basics, we'll want to modify the script so that it saves to localstorage:\r\n```\r\n[[save]]:\r\n    var attributes_to_save = \"name haircolor fish_size money pet\";\r\n    (typeof(LZString) == \"undefined\" ? jQuery.getScript : (i,f) => f())(\"https://mrangel.info/lz-string.js\", function () {\r\n      var values = {};\r\n      // change this name if you want something different:\r\n      var defaultname = squiffy.get('name') + ' ' + (new Date()).toLocaleString();\r\n      var suffix = 0;\r\n      while (window.localStorage.getItem('lssv_' + defaultname + (suffix ? (' ('+suffix+')') : ''))) {\r\n        suffix++;\r\n      }\r\n      attributes_to_save.split(/\\s+/).forEach (attr => values[attr] = squiffy.get(attr));\r\n      var password = LZString.compressToBase64(JSON.stringify(values));\r\n      jQuery(\"input#saveString\").val(password);\r\n      jQuery(\"input#saveTitle\").last().val(defaultname + (suffix ? (' ('+suffix+')') : '')).prop('readonly', false).on('input', function  () {\r\n        $(this).css('color', window.localStorage.getItem($(this).val()) ? 'red' : 'inherit');\r\n        jQuery(\"button#saveButton\").last().prop('disabled', false).text(window.localStorage.getItem('lssv_' + $(this).val()) ? 'overwrite' : 'save');\r\n      });\r\n      jQuery(\"button#saveButton\").last().click(function () {\r\n        window.localStorage.setItem('lssv_' + $(this).siblings('#saveTitle').val(), password);\r\n        $(this).prop('disabled', true).text('Saved');\r\n      });\r\n    });\r\n\r\n<ul><li>You can copy this password and save it somewhere in order to restore your game later: <input readonly type=\"text\" id=\"saveString\" value=\"Generating password; please wait\" /></li>\r\n<li>Or enter a name to save your game within the browser <input readonly type=\"text\" id=\"saveTitle\" value=\"Generating password; please wait\" /><button type=\"button\" id=\"saveButton\" disabled>Save!</button></li></ul>\r\n```\r\n\r\nAnd the load part:\r\n```\r\n[[Load]]:\r\n    var updateLoadSelector = function () {\r\n      if (jQuery('#saveSelector').length) {\r\n        for (var i=0 ; i < window.localStorage.length ; i++) {\r\n          var key = window.localStorage.key(i);\r\n          if (key.match(/^lssv_/)) {\r\n            jQuery('<option>', {value: window.localStorage.getItem(key)}).text(key.replace(/^lssv_/, '')).appendTo('#saveSelector');\r\n          }\r\n        }\r\n        if (jQuery('#saveSelector').children().length) {\r\n          jQuery('#saveSelector').click(function() {\r\n            jQuery('input#loadString').last().val(jQuery(this).val());\r\n          }).parent().show();\r\n        }\r\n      } else {\r\n        setTimeout (updateLoadSelector, 100);\r\n      }\r\n    };\r\n    updateLoadSelector();\r\n\r\n<p>You can <span style=\"display: none;\">choose a previously saved game <select id=\"saveSelector\"></select> or </span>paste your save password from the previous game here: <input type=\"text\" id=\"loadString\" /></p>\r\n[[Next]]\r\n\r\nOr there might be a link here to start a new game without loading a previously saved one.\r\n\r\n[[Next]]:\r\n\r\n    var attributes_to_load = \"name pet haircolor fish_size money\";\r\n    jQuery(\"input#loadString\").last().prop(\"readonly\", true).each(function () {\r\n      this.value && (typeof(LZString) == \"undefined\" ? jQuery.getScript : (i,f) => f())(\"https://mrangel.info/lz-string.js\", function () {\r\n        var values = JSON.parse(LZString.decompressFromBase64(this.value));\r\n        attributes_to_load.split(/\\s+/).forEach (attr => squiffy.set(attr, values[attr]));\r\n        squiffy.story.go(\"after load\");\r\n      });\r\n    });\r\n    \r\n\r\n[[after load]]:\r\nBy getting to this point, the game should be loaded.\r\n```\r\n\r\nIn this case, I've prefixed all the names with `lssv_`, for LocalStorage SaVe. Just so it doesn't end up displaying anything saved to localstorage by other scripts on the same site. It would probably be a good idea to change this to something different, especially if  you have multiple games hosted on the same site, so that the game can tell which saves actually belong to it.\r\n\r\nI've not really attempted to handle malformed saves. If the string (pasted or from localstorage) is invalid, I think it will just go to 'after load' without doing anything. This is the bare basics of a script, and could use a little polishing.\r\n\r\nThis is pretty ugly, and I haven't tested it yet. This was just written on the forum while I was trying to distract myself from panic, so if there's problems with it please let me know. I'm sure anyone with any JS knowledge should be able to fix it; my brain isn't in the best place right now. But I'll do my best.",
      "EditableFormat": "markdown",
      "HTML": "<p>OK… here's my attempt at modifying what we had last time to give the option of saving to localstorage.<br>\n(2nd edit… added a timeout to the load function to ensure that the selector is displayed before attempting to populate it)</p>\n<p>I've realised that there's an unnecessary delay when loading the lzstring library, which can probably be avoided. So I'm poking a weird improvised \"load if not already loaded\" construct:</p>\n<pre><code>    (LZString ? ((i,f) =&gt; f()) : jQuery.getScript)(\"https://mrangel.info/lz-string.js\", function () {\n      // function body goes here\n    });\n</code></pre>\n<p>That should load the LZString library and then run the function body; or just run the function if LZString is already loaded. I think.<br>\nEDIT: Doesn't work. Corrected version in the post below. I've corrected it in the code snippets below -</p>\n<p>So then, as the absolute basics, we'll want to modify the script so that it saves to localstorage:</p>\n<pre><code>[[save]]:\n    var attributes_to_save = \"name haircolor fish_size money pet\";\n    (typeof(LZString) == \"undefined\" ? jQuery.getScript : (i,f) =&gt; f())(\"https://mrangel.info/lz-string.js\", function () {\n      var values = {};\n      // change this name if you want something different:\n      var defaultname = squiffy.get('name') + ' ' + (new Date()).toLocaleString();\n      var suffix = 0;\n      while (window.localStorage.getItem('lssv_' + defaultname + (suffix ? (' ('+suffix+')') : ''))) {\n        suffix++;\n      }\n      attributes_to_save.split(/\\s+/).forEach (attr =&gt; values[attr] = squiffy.get(attr));\n      var password = LZString.compressToBase64(JSON.stringify(values));\n      jQuery(\"input#saveString\").val(password);\n      jQuery(\"input#saveTitle\").last().val(defaultname + (suffix ? (' ('+suffix+')') : '')).prop('readonly', false).on('input', function  () {\n        $(this).css('color', window.localStorage.getItem($(this).val()) ? 'red' : 'inherit');\n        jQuery(\"button#saveButton\").last().prop('disabled', false).text(window.localStorage.getItem('lssv_' + $(this).val()) ? 'overwrite' : 'save');\n      });\n      jQuery(\"button#saveButton\").last().click(function () {\n        window.localStorage.setItem('lssv_' + $(this).siblings('#saveTitle').val(), password);\n        $(this).prop('disabled', true).text('Saved');\n      });\n    });\n\n&lt;ul&gt;&lt;li&gt;You can copy this password and save it somewhere in order to restore your game later: &lt;input readonly type=\"text\" id=\"saveString\" value=\"Generating password; please wait\" /&gt;&lt;/li&gt;\n&lt;li&gt;Or enter a name to save your game within the browser &lt;input readonly type=\"text\" id=\"saveTitle\" value=\"Generating password; please wait\" /&gt;&lt;button type=\"button\" id=\"saveButton\" disabled&gt;Save!&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;\n</code></pre>\n<p>And the load part:</p>\n<pre><code>[[Load]]:\n    var updateLoadSelector = function () {\n      if (jQuery('#saveSelector').length) {\n        for (var i=0 ; i &lt; window.localStorage.length ; i++) {\n          var key = window.localStorage.key(i);\n          if (key.match(/^lssv_/)) {\n            jQuery('&lt;option&gt;', {value: window.localStorage.getItem(key)}).text(key.replace(/^lssv_/, '')).appendTo('#saveSelector');\n          }\n        }\n        if (jQuery('#saveSelector').children().length) {\n          jQuery('#saveSelector').click(function() {\n            jQuery('input#loadString').last().val(jQuery(this).val());\n          }).parent().show();\n        }\n      } else {\n        setTimeout (updateLoadSelector, 100);\n      }\n    };\n    updateLoadSelector();\n\n&lt;p&gt;You can &lt;span style=\"display: none;\"&gt;choose a previously saved game &lt;select id=\"saveSelector\"&gt;&lt;/select&gt; or &lt;/span&gt;paste your save password from the previous game here: &lt;input type=\"text\" id=\"loadString\" /&gt;&lt;/p&gt;\n[[Next]]\n\nOr there might be a link here to start a new game without loading a previously saved one.\n\n[[Next]]:\n\n    var attributes_to_load = \"name pet haircolor fish_size money\";\n    jQuery(\"input#loadString\").last().prop(\"readonly\", true).each(function () {\n      this.value &amp;&amp; (typeof(LZString) == \"undefined\" ? jQuery.getScript : (i,f) =&gt; f())(\"https://mrangel.info/lz-string.js\", function () {\n        var values = JSON.parse(LZString.decompressFromBase64(this.value));\n        attributes_to_load.split(/\\s+/).forEach (attr =&gt; squiffy.set(attr, values[attr]));\n        squiffy.story.go(\"after load\");\n      });\n    });\n    \n\n[[after load]]:\nBy getting to this point, the game should be loaded.\n</code></pre>\n<p>In this case, I've prefixed all the names with <code>lssv_</code>, for LocalStorage SaVe. Just so it doesn't end up displaying anything saved to localstorage by other scripts on the same site. It would probably be a good idea to change this to something different, especially if  you have multiple games hosted on the same site, so that the game can tell which saves actually belong to it.</p>\n<p>I've not really attempted to handle malformed saves. If the string (pasted or from localstorage) is invalid, I think it will just go to 'after load' without doing anything. This is the bare basics of a script, and could use a little polishing.</p>\n<p>This is pretty ugly, and I haven't tested it yet. This was just written on the forum while I was trying to distract myself from panic, so if there's problems with it please let me know. I'm sure anyone with any JS knowledge should be able to fix it; my brain isn't in the best place right now. But I'll do my best.</p>\n\n",
      "PostDate": "2020-08-25T18:38:20.2125736Z",
      "LastEditDate": "2020-08-26T11:47:28.5120842Z",
      "link": null
    },
    {
      "PostId": "60fec70e-4e0d-4774-8ec2-23637c4dc477",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks mrangel - I'm not expert enough to debug it, but I can definitely shove it into Squiffy and see what happens!\r\n\r\nAt present the first part isn't working for me (nothing appears once I click Save, not even the plain HTML markup below your script) - looking at the console in Firefox it's throwing \"Uncaught ReferenceError: LZString is not defined\"?",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks mrangel - I'm not expert enough to debug it, but I can definitely shove it into Squiffy and see what happens!</p>\n<p>At present the first part isn't working for me (nothing appears once I click Save, not even the plain HTML markup below your script) - looking at the console in Firefox it's throwing \"Uncaught ReferenceError: LZString is not defined\"?</p>\n\n",
      "PostDate": "2020-08-25T20:40:30.5622135Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "65d20dec-9a3d-4ea7-8434-7b9aeeb10d49",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry, careless assumption about how JS handles undefined variables.\r\nThe check if the library is loaded should be:\r\n```\r\n    (typeof(LZString) == \"undefined\" ? jQuery.getScript : (i,f) => f())(\"https://mrangel.info/lz-string.js\", function () {\r\n      // function body goes here\r\n    });\r\n```\r\n(I'm used to a few languages that allow an undefined value to be considered false; and JS used to do that in some browsers)\r\n\r\nSo change `(LZString ? ((i,f) => f()) : jQuery.getScript)` to <code style=\"color:darkgreen\">(typeof(LZString) == \"undefined\" ? jQuery.getScript : (i,f) => f())</code> in both places and it should be a step closer.\r\n\r\nAnd yet again, I'm on my phone so not in a place where I can test this myself.",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry, careless assumption about how JS handles undefined variables.<br>\nThe check if the library is loaded should be:</p>\n<pre><code>    (typeof(LZString) == \"undefined\" ? jQuery.getScript : (i,f) =&gt; f())(\"https://mrangel.info/lz-string.js\", function () {\n      // function body goes here\n    });\n</code></pre>\n<p>(I'm used to a few languages that allow an undefined value to be considered false; and JS used to do that in some browsers)</p>\n<p>So change <code>(LZString ? ((i,f) =&gt; f()) : jQuery.getScript)</code> to <code style=\"color: darkgreen\">(typeof(LZString) == \"undefined\" ? jQuery.getScript : (i,f) =&gt; f())</code> in both places and it should be a step closer.</p>\n<p>And yet again, I'm on my phone so not in a place where I can test this myself.</p>\n\n",
      "PostDate": "2020-08-26T11:20:20.6586536Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "08cfa568-c1db-44bb-98a8-b306729a581a",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Great, that's looking good on the Save side! The only thing I can see is that it gives a default value for the Save box - {name} plus the date and time - which would be perfectly acceptable to go ahead and save with, but unless you actually edit that value in some way, the Save button is greyed out.\r\n\r\nOn the Load side, I'm getting an error when running it: ```SyntaxError: missing ; after for-loop initializer```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Great, that's looking good on the Save side! The only thing I can see is that it gives a default value for the Save box - {name} plus the date and time - which would be perfectly acceptable to go ahead and save with, but unless you actually edit that value in some way, the Save button is greyed out.</p>\n<p>On the Load side, I'm getting an error when running it: <code>SyntaxError: missing ; after for-loop initializer</code></p>\n\n",
      "PostDate": "2020-08-26T11:39:53.9774515Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f36bb60a-90c9-4f1b-abb8-5e33ce690985",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That was a typo, I had `==` instead of `=`.\r\n\r\nUpdated the code in the post above, and also added a timeout loop so that if the dropdown list hasn't been displayed yet, it will wait a tenth of a second and then try again rather than adding options to a list that isn't there.",
      "EditableFormat": "markdown",
      "HTML": "<p>That was a typo, I had <code>==</code> instead of <code>=</code>.</p>\n<p>Updated the code in the post above, and also added a timeout loop so that if the dropdown list hasn't been displayed yet, it will wait a tenth of a second and then try again rather than adding options to a list that isn't there.</p>\n\n",
      "PostDate": "2020-08-26T11:48:45.7397052Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "63fe682b-996e-4f7b-9092-ef01d2e8d7f6",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OK, trying this out now!\r\n\r\nI've created the Save and Load sides in two separate Squiffy files (using the desktop version rather than the in-browser one) to replicate game 1 and game 2. I've then Built each one and uploaded them - you can have a look at https://www.dragonchoice.com/character/index.html (to save the character, and there's a link to go to the character load page).\r\n\r\nSave side:\r\n- still have the issue where the default name - date - time can't be saved without editing it in some way (Save button greyed out)\r\n\r\nLoad side:\r\n\r\n- clicking Next (after entering a password or selecting from the dropdown) just goes to a blank section\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>OK, trying this out now!</p>\n<p>I've created the Save and Load sides in two separate Squiffy files (using the desktop version rather than the in-browser one) to replicate game 1 and game 2. I've then Built each one and uploaded them - you can have a look at https://www.dragonchoice.com/character/index.html (to save the character, and there's a link to go to the character load page).</p>\n<p>Save side:</p>\n<ul>\n<li>still have the issue where the default name - date - time can't be saved without editing it in some way (Save button greyed out)</li>\n</ul>\n<p>Load side:</p>\n<ul>\n<li>clicking Next (after entering a password or selecting from the dropdown) just goes to a blank section</li>\n</ul>\n\n",
      "PostDate": "2020-08-26T13:15:03.6216672Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a15626bd-d549-4e81-a24e-8aa08535f28d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OK, finally on a computer. Have given a cursory test this time:\r\n\r\n(EDIT: Seems to be a race condition; sometimes the password fails to display, if the LZString library finishes loading before Squiffy finishes rendering the page. Fixed, I think)\r\n\r\n```\r\n[[save]]:\r\n    var attributes_to_save = \"name haircolor fish_size money pet\";\r\n    (typeof(LZString) == \"undefined\" ? jQuery.getScript : (i,f) => f())(\"https://mrangel.info/lz-string.js\", function () {\r\n      var values = {};\r\n      // change this name if you want something different:\r\n      var defaultname = squiffy.get('name') + ' ' + (new Date()).toLocaleString();\r\n      var suffix = 0;\r\n      while (window.localStorage.getItem('lssv_' + defaultname + (suffix ? (' ('+suffix+')') : ''))) {\r\n        suffix++;\r\n      }\r\n      attributes_to_save.split(/\\s+/).forEach (attr => values[attr] = squiffy.get(attr));\r\n      var password = LZString.compressToBase64(JSON.stringify(values));\r\n      var showPassword = function() {\r\n        if ($('#saveString').length) {\r\n          jQuery(\"input#saveString\").val(password);\r\n          jQuery(\"input#saveTitle\").last().val(defaultname + (suffix ? (' ('+suffix+')') : '')).prop('readonly', false).on('input', function  () {\r\n            $(this).css('color', window.localStorage.getItem('lssv_' + $(this).val()) ? 'red' : 'inherit');\r\n            jQuery(\"button#saveButton\").last().text(window.localStorage.getItem('lssv_' + $(this).val()) ? 'overwrite' : 'save');\r\n          });\r\n          jQuery(\"button#saveButton\").last().click(function () {\r\n            window.localStorage.setItem('lssv_' + $(this).siblings('#saveTitle').val(), password);\r\n            $(this).prop('disabled', true).text('Saved');\r\n          }).prop('disabled', !defaultname);\r\n        } else {\r\n          setTimeout (showPassword, 100);\r\n        }\r\n      };\r\n      showPassword();\r\n    });\r\n\r\n<ul><li>You can copy this password and save it somewhere in order to restore your game later: <input readonly type=\"text\" id=\"saveString\" value=\"Generating password; please wait\" /></li>\r\n<li>Or enter a name to save your game within the browser <input readonly type=\"text\" id=\"saveTitle\" value=\"Generating password; please wait\" /><button type=\"button\" id=\"saveButton\" disabled>Save!</button></li></ul>\r\n```\r\n\r\nand to load:\r\n```\r\n[[Load]]:\r\n    var updateLoadSelector = function () {\r\n      if (jQuery('#saveSelector').length) {\r\n        for (var i=0 ; i < window.localStorage.length ; i++) {\r\n          var key = window.localStorage.key(i);\r\n          if (key.match(/^lssv_/)) {\r\n            jQuery('<option>', {value: window.localStorage.getItem(key)}).text(key.replace(/^lssv_/, '')).appendTo('#saveSelector');\r\n          }\r\n        }\r\n        if (jQuery('#saveSelector').children().length > 1) {\r\n          jQuery('#saveSelector').change(function() {\r\n            if ($(this).val() != \"null\") {\r\n              jQuery('input#loadString').last().val(jQuery(this).val());\r\n              $(this).children('.nulloption').remove();\r\n            }\r\n          }).parent().show();\r\n        }\r\n      } else {\r\n        setTimeout (updateLoadSelector, 100);\r\n      }\r\n    };\r\n    updateLoadSelector();\r\n\r\n<p>You can <span style=\"display: none;\">choose a previously saved game <select id=\"saveSelector\"><option name=\"null\" class=\"nulloption\" style=\"color: grey\">pick a save</option></select> or </span>paste your save password from the previous game here: <input type=\"text\" id=\"loadString\" /></p>\r\n[[Next]]\r\n\r\nOr there might be a link here to start a new game without loading a previously saved one.\r\n\r\n[[Next]]:\r\n\r\n    var attributes_to_load = \"name pet haircolor fish_size money\";\r\n    var field = jQuery(\"input#loadString\").last().prop(\"readonly\", true);\r\n    (typeof(LZString) == \"undefined\" ? jQuery.getScript : (i,f) => f())(\"https://mrangel.info/lz-string.js\", function () {\r\n      var values;\r\n      try {\r\n        values = JSON.parse(LZString.decompressFromBase64(field.val()));\r\n      } catch (e) {\r\n        values = {};\r\n        squiffy.set(\"loaderror\", e.message);\r\n      }\r\n      if (values) {\r\n        attributes_to_load.split(/\\s+/).forEach (attr => squiffy.set(attr, values[attr]));\r\n        squiffy.story.go(\"after load\");\r\n      } else {\r\n        squiffy.story.go(\"load error\");\r\n      }\r\n    });\r\n\r\n[[load error]]:\r\nThe player will be sent here if there's something wrong with the string in the save box.\r\nIf there is an error message, it was: {loaderror}.\r\n\r\n[[after load]]:\r\nBy getting to this point, the game should be loaded.\r\n```\r\n\r\nI *think* this is working, unless there's something I messed up by accident when tweaking it to work with my test data.",
      "EditableFormat": "markdown",
      "HTML": "<p>OK, finally on a computer. Have given a cursory test this time:</p>\n<p>(EDIT: Seems to be a race condition; sometimes the password fails to display, if the LZString library finishes loading before Squiffy finishes rendering the page. Fixed, I think)</p>\n<pre><code>[[save]]:\n    var attributes_to_save = \"name haircolor fish_size money pet\";\n    (typeof(LZString) == \"undefined\" ? jQuery.getScript : (i,f) =&gt; f())(\"https://mrangel.info/lz-string.js\", function () {\n      var values = {};\n      // change this name if you want something different:\n      var defaultname = squiffy.get('name') + ' ' + (new Date()).toLocaleString();\n      var suffix = 0;\n      while (window.localStorage.getItem('lssv_' + defaultname + (suffix ? (' ('+suffix+')') : ''))) {\n        suffix++;\n      }\n      attributes_to_save.split(/\\s+/).forEach (attr =&gt; values[attr] = squiffy.get(attr));\n      var password = LZString.compressToBase64(JSON.stringify(values));\n      var showPassword = function() {\n        if ($('#saveString').length) {\n          jQuery(\"input#saveString\").val(password);\n          jQuery(\"input#saveTitle\").last().val(defaultname + (suffix ? (' ('+suffix+')') : '')).prop('readonly', false).on('input', function  () {\n            $(this).css('color', window.localStorage.getItem('lssv_' + $(this).val()) ? 'red' : 'inherit');\n            jQuery(\"button#saveButton\").last().text(window.localStorage.getItem('lssv_' + $(this).val()) ? 'overwrite' : 'save');\n          });\n          jQuery(\"button#saveButton\").last().click(function () {\n            window.localStorage.setItem('lssv_' + $(this).siblings('#saveTitle').val(), password);\n            $(this).prop('disabled', true).text('Saved');\n          }).prop('disabled', !defaultname);\n        } else {\n          setTimeout (showPassword, 100);\n        }\n      };\n      showPassword();\n    });\n\n&lt;ul&gt;&lt;li&gt;You can copy this password and save it somewhere in order to restore your game later: &lt;input readonly type=\"text\" id=\"saveString\" value=\"Generating password; please wait\" /&gt;&lt;/li&gt;\n&lt;li&gt;Or enter a name to save your game within the browser &lt;input readonly type=\"text\" id=\"saveTitle\" value=\"Generating password; please wait\" /&gt;&lt;button type=\"button\" id=\"saveButton\" disabled&gt;Save!&lt;/button&gt;&lt;/li&gt;&lt;/ul&gt;\n</code></pre>\n<p>and to load:</p>\n<pre><code>[[Load]]:\n    var updateLoadSelector = function () {\n      if (jQuery('#saveSelector').length) {\n        for (var i=0 ; i &lt; window.localStorage.length ; i++) {\n          var key = window.localStorage.key(i);\n          if (key.match(/^lssv_/)) {\n            jQuery('&lt;option&gt;', {value: window.localStorage.getItem(key)}).text(key.replace(/^lssv_/, '')).appendTo('#saveSelector');\n          }\n        }\n        if (jQuery('#saveSelector').children().length &gt; 1) {\n          jQuery('#saveSelector').change(function() {\n            if ($(this).val() != \"null\") {\n              jQuery('input#loadString').last().val(jQuery(this).val());\n              $(this).children('.nulloption').remove();\n            }\n          }).parent().show();\n        }\n      } else {\n        setTimeout (updateLoadSelector, 100);\n      }\n    };\n    updateLoadSelector();\n\n&lt;p&gt;You can &lt;span style=\"display: none;\"&gt;choose a previously saved game &lt;select id=\"saveSelector\"&gt;&lt;option name=\"null\" class=\"nulloption\" style=\"color: grey\"&gt;pick a save&lt;/option&gt;&lt;/select&gt; or &lt;/span&gt;paste your save password from the previous game here: &lt;input type=\"text\" id=\"loadString\" /&gt;&lt;/p&gt;\n[[Next]]\n\nOr there might be a link here to start a new game without loading a previously saved one.\n\n[[Next]]:\n\n    var attributes_to_load = \"name pet haircolor fish_size money\";\n    var field = jQuery(\"input#loadString\").last().prop(\"readonly\", true);\n    (typeof(LZString) == \"undefined\" ? jQuery.getScript : (i,f) =&gt; f())(\"https://mrangel.info/lz-string.js\", function () {\n      var values;\n      try {\n        values = JSON.parse(LZString.decompressFromBase64(field.val()));\n      } catch (e) {\n        values = {};\n        squiffy.set(\"loaderror\", e.message);\n      }\n      if (values) {\n        attributes_to_load.split(/\\s+/).forEach (attr =&gt; squiffy.set(attr, values[attr]));\n        squiffy.story.go(\"after load\");\n      } else {\n        squiffy.story.go(\"load error\");\n      }\n    });\n\n[[load error]]:\nThe player will be sent here if there's something wrong with the string in the save box.\nIf there is an error message, it was: {loaderror}.\n\n[[after load]]:\nBy getting to this point, the game should be loaded.\n</code></pre>\n<p>I <em>think</em> this is working, unless there's something I messed up by accident when tweaking it to work with my test data.</p>\n\n",
      "PostDate": "2020-08-26T15:10:03.2419355Z",
      "LastEditDate": "2020-08-26T15:20:16.3169936Z",
      "link": null
    },
    {
      "PostId": "f25dfb94-a651-41b2-a2fc-76f53426f2ab",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(I've gotten lazy and started using `$` instead of `jQuery`. I don't know why the convention in Squiffy is to use the long version, but they're interchangeable)\r\n\r\nIf you want to have multiple compatible games (for example, part 2 can load a character from part 1, but part 3 can load a character from part 1 *or* 2), you can use regular expressions for the prefix. For example, change `/^lssv_/` in the load function (I think it appears twice) to `/^lssv[1-2]_/` to allow saves created using `'lssv1_'` or `'lssv2_'` in the save script.",
      "EditableFormat": "markdown",
      "HTML": "<p>(I've gotten lazy and started using <code>$</code> instead of <code>jQuery</code>. I don't know why the convention in Squiffy is to use the long version, but they're interchangeable)</p>\n<p>If you want to have multiple compatible games (for example, part 2 can load a character from part 1, but part 3 can load a character from part 1 <em>or</em> 2), you can use regular expressions for the prefix. For example, change <code>/^lssv_/</code> in the load function (I think it appears twice) to <code>/^lssv[1-2]_/</code> to allow saves created using <code>'lssv1_'</code> or <code>'lssv2_'</code> in the save script.</p>\n\n",
      "PostDate": "2020-08-26T15:25:06.1817438Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "139b1dc0-d80e-41c7-bd21-6882409406e2",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Absolutely spot on! Thanks so much mrangel, this is going to be instrumental in my series of games (I'll put your in the credits, let me know if you want me to use a name that isn't your screenname here!\r\n\r\nI'll do some more testing around the last bit - I need to set up a third game and see about importing characters from the first and second - but this is just awesome and I'm incredibly grateful for your help and expertise!\r\n\r\nI hope other Squiffy users will find this helpful too. Personally I'm more a writer than a coder, so writing the interactive story is the easy part - getting it to function the way I want it is that bit harder!",
      "EditableFormat": "markdown",
      "HTML": "<p>Absolutely spot on! Thanks so much mrangel, this is going to be instrumental in my series of games (I'll put your in the credits, let me know if you want me to use a name that isn't your screenname here!</p>\n<p>I'll do some more testing around the last bit - I need to set up a third game and see about importing characters from the first and second - but this is just awesome and I'm incredibly grateful for your help and expertise!</p>\n<p>I hope other Squiffy users will find this helpful too. Personally I'm more a writer than a coder, so writing the interactive story is the easy part - getting it to function the way I want it is that bit harder!</p>\n\n",
      "PostDate": "2020-08-26T19:26:31.0049276Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
