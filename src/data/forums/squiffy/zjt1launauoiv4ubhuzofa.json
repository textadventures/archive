{
  "Topic": {
    "TopicId": "zjt1launauoiv4ubhuzofa",
    "ForumId": "24",
    "Title": "Javascript equivalent of @inc",
    "LastUpdated": "2023-02-16T00:44:55.8356672Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "d331f901-7de3-416b-928f-e92f11ef4faa",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I tried to use ```squiffy.set(\"health\", +1);``` in a function. It seemed to be working, until I noticed that \"health\" simply became 1 whenever this got activated. It doesn't actually increase. Is there a Javascript equivalent to Squiffy's \"@inc''?",
      "EditableFormat": "markdown",
      "HTML": "<p>I tried to use <code>squiffy.set(\"health\", +1);</code> in a function. It seemed to be working, until I noticed that \"health\" simply became 1 whenever this got activated. It doesn't actually increase. Is there a Javascript equivalent to Squiffy's \"@inc''?</p>\n\n",
      "PostDate": "2023-02-16T00:44:55.8356672Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "af891375-ec35-4437-8e03-e911502af789",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well the best answer I can make on my own is pretty long. \r\n```\r\n   squiffy.set(\"health\", squiffy.get(\"health\") + 1);\r\n```\r\nOh well.",
      "EditableFormat": "markdown",
      "HTML": "<p>Well the best answer I can make on my own is pretty long.</p>\n<pre><code>   squiffy.set(\"health\", squiffy.get(\"health\") + 1);\n</code></pre>\n<p>Oh well.</p>\n\n",
      "PostDate": "2023-02-17T05:17:16.5708736Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "104e4ab0-9fa9-4939-aed3-109c7bae024a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah; the get and set methods just retrieve or replace a Squiffy attribute; it's necessary to get the old value before setting the new one in two separate function calls.\r\n\r\nYou *could* do:\r\n```\r\nsquiffy.ui.processText(\"{@health+=1}\");\r\n```\r\nwhich is shorter to write, but less efficient.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah; the get and set methods just retrieve or replace a Squiffy attribute; it's necessary to get the old value before setting the new one in two separate function calls.</p>\n<p>You <em>could</em> do:</p>\n<pre><code>squiffy.ui.processText(\"{@health+=1}\");\n</code></pre>\n<p>which is shorter to write, but less efficient.</p>\n\n",
      "PostDate": "2023-02-17T10:27:59.8298304Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "76a20f31-af33-4dbc-8149-6f530f958d78",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<blockquote>You <i>could</i> do:\r\n\r\n```\r\nsquiffy.ui.processText(\"{@health+=1}\");\r\n```\r\nwhich is shorter to write, but less efficient.</blockquote>\r\n\r\nWait, wait, wait! âœ‹ðŸ˜²\r\n\r\nAre you telling me, mrangel, that there is a simple way get around Squiffy's operator precedence and use it inline with Javascript ANY. TIME. I. WANT.\r\n\r\nThis is wonderful. That needs to show up somewhere in the Squiffy documentation.\r\n\r\nThank you!\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>You <i>could</i> do:\n<pre><code>squiffy.ui.processText(\"{@health+=1}\");\n</code></pre>\n<p>which is shorter to write, but less efficient.</p></blockquote><p></p>\n<p>Wait, wait, wait! âœ‹ðŸ˜²</p>\n<p>Are you telling me, mrangel, that there is a simple way get around Squiffy's operator precedence and use it inline with Javascript ANY. TIME. I. WANT.</p>\n<p>This is wonderful. That needs to show up somewhere in the Squiffy documentation.</p>\n<p>Thank you!</p>\n\n",
      "PostDate": "2023-02-17T23:24:12.1612484Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "01f8b429-4e01-4563-8eef-a7ace1cd0467",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Note that if you use `processText` with blocks like `{if` that would normally display text, it will return a string containing the results rather than outputting it directly. But for `{@` that isn't usually a concern.",
      "EditableFormat": "markdown",
      "HTML": "<p>Note that if you use <code>processText</code> with blocks like <code>{if</code> that would normally display text, it will return a string containing the results rather than outputting it directly. But for <code>{@</code> that isn't usually a concern.</p>\n\n",
      "PostDate": "2023-02-18T20:46:23.0157793Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
