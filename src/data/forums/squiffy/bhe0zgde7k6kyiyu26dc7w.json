{
  "Topic": {
    "TopicId": "bhe0zgde7k6kyiyu26dc7w",
    "ForumId": "24",
    "Title": "Display int variable",
    "LastUpdated": "2023-12-06T20:43:10.372195Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "4f1945d9-0322-4ba6-9c4d-7674cf563ea2",
      "UserId": 8429,
      "Username": "TriangleGames",
      "AvatarUrl": "https://i.imgur.com/gL0gQHeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This feels so simple, but I can't get a number variable to display the same as a text variable. I started with just doing this\r\n\r\n```\r\n@set sanity = 100\r\n\r\n@dec sanity\r\n\r\nSanity equals {sanity}.\r\n```\r\n\r\nIt displays as \"Sanity equals null.\" From past programming stuff, my guess would be that I need to tell it to convert the int to text, but I don't know how to properly do it in Squiffy. My last attempt, I got the code light up in colors, as if it was recognizing the Javascript, but then all it did was display the code in a box...\r\n\r\n```\r\n@set sanity = 100\r\n\r\n@dec sanity\r\n\r\n    var dSanity = sanity.toString();\r\n\r\nSanity equals {dSanity}.\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>This feels so simple, but I can't get a number variable to display the same as a text variable. I started with just doing this</p>\n<pre><code>@set sanity = 100\n\n@dec sanity\n\nSanity equals {sanity}.\n</code></pre>\n<p>It displays as \"Sanity equals null.\" From past programming stuff, my guess would be that I need to tell it to convert the int to text, but I don't know how to properly do it in Squiffy. My last attempt, I got the code light up in colors, as if it was recognizing the Javascript, but then all it did was display the code in a box...</p>\n<pre><code>@set sanity = 100\n\n@dec sanity\n\n    var dSanity = sanity.toString();\n\nSanity equals {dSanity}.\n</code></pre>\n\n",
      "PostDate": "2023-12-06T20:43:10.372195Z",
      "LastEditDate": "2023-12-06T20:47:17.0422396Z",
      "link": null
    },
    {
      "PostId": "85166a5c-8e0c-4739-bf3b-ca405e9ba31f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't know why your first code isn't working; it should work fine. Type conversion in squiffy is implicit. There is no reason that shouldn't work; so I'd be checking for typos or other non-obvious errors. (Is there a problem with having spaces before and after the `=`? I don't remember now)\r\n\r\nThe second piece of code will not work. Squiffy attributes and javascript variables are not the same thing. If you really wanted to do that, you'd have to do something like:\r\n```\r\n    var sanity = squiffy.get(\"sanity\");\r\n    squiffy.set(\"dSanity\", sanity.toString());\r\n```\r\nHowever, this should not be necessary. Type conversion is automatic; you never have to do it manually.\r\n\r\n> My last attempt, I got the code light up in colors, as if it was recognizing the Javascript, but then all it did was display the code in a box...\r\n\r\nThis sounds like it's parsing it as text. I can't double-check the order now, as it seems the online editor is broken. But I know that order matters to Squiffy. Should the javascript come before the `@` lines? I forgot what the correct order is.",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't know why your first code isn't working; it should work fine. Type conversion in squiffy is implicit. There is no reason that shouldn't work; so I'd be checking for typos or other non-obvious errors. (Is there a problem with having spaces before and after the <code>=</code>? I don't remember now)</p>\n<p>The second piece of code will not work. Squiffy attributes and javascript variables are not the same thing. If you really wanted to do that, you'd have to do something like:</p>\n<pre><code>    var sanity = squiffy.get(\"sanity\");\n    squiffy.set(\"dSanity\", sanity.toString());\n</code></pre>\n<p>However, this should not be necessary. Type conversion is automatic; you never have to do it manually.</p>\n<blockquote>\n<p>My last attempt, I got the code light up in colors, as if it was recognizing the Javascript, but then all it did was display the code in a box...</p>\n</blockquote>\n<p>This sounds like it's parsing it as text. I can't double-check the order now, as it seems the online editor is broken. But I know that order matters to Squiffy. Should the javascript come before the <code>@</code> lines? I forgot what the correct order is.</p>\n\n",
      "PostDate": "2023-12-06T23:59:10.5374187Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "74aac384-1ca7-4254-aab9-86613bd4d16d",
      "UserId": 8429,
      "Username": "TriangleGames",
      "AvatarUrl": "https://i.imgur.com/gL0gQHeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you for clarifying! I thought that was the case, from the way it's written in the documentation. Knowing that with more certainty, I went back and did some more experimenting. I seem to have found a solution, although it's not ideal to me. I think I can work with it though. I'll try to lay out the larger picture while trimming as much excess as I can. This is maybe gonna look a little weird. To explain, what I really needed here was a switch case of some kind. The player is given some option on how to try and stay awake on a long drive. So what I had before was this:\r\n```\r\nWindow:  {rotate car_window:open:closed}\r\n<br>Music: {rotate car_music:off:radio:eMuse}\r\n\r\n[[Try to stay awake]]\r\n\r\n[[Try to stay awake]]:\r\n@set path_sorter = 0\r\n## ...some code to sort the outcome by numbers to go to different passages, including...\r\n\r\n{if path_sorter=3:{off_open}}\r\n\r\n[off_open]:\r\nA bunch of scary stuff happens here.\r\n@set sanity = 100\r\n@dec sanity\r\nCurrent Sanity: {sanity}\r\n```\r\nNo arrangement of that seemed to work, but if I just took those 3 lines about sanity and put them in a blank new game, they worked fine, as they should. Finally, I found that if I made the if case lead to a button to activate the passage with square brackets, instead of directly displaying the passage as embedded with the curly brackets, it worked.  So:\r\n```\r\n{if path_sorter=3:{off_open}}\r\n# had to be changed to\r\n{if path_sorter=3:[off_open]}\r\n```\r\nforcing the player to hit another button, rather than go straight to the text. Why that matters remains entirely beyond me, something about scope, or calling an embed from an embed? At any rate,  I think I can make it work, and I'll try to avoid \"embed inception\" in the future, lol.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you for clarifying! I thought that was the case, from the way it's written in the documentation. Knowing that with more certainty, I went back and did some more experimenting. I seem to have found a solution, although it's not ideal to me. I think I can work with it though. I'll try to lay out the larger picture while trimming as much excess as I can. This is maybe gonna look a little weird. To explain, what I really needed here was a switch case of some kind. The player is given some option on how to try and stay awake on a long drive. So what I had before was this:</p>\n<pre><code>Window:  {rotate car_window:open:closed}\n&lt;br&gt;Music: {rotate car_music:off:radio:eMuse}\n\n[[Try to stay awake]]\n\n[[Try to stay awake]]:\n@set path_sorter = 0\n## ...some code to sort the outcome by numbers to go to different passages, including...\n\n{if path_sorter=3:{off_open}}\n\n[off_open]:\nA bunch of scary stuff happens here.\n@set sanity = 100\n@dec sanity\nCurrent Sanity: {sanity}\n</code></pre>\n<p>No arrangement of that seemed to work, but if I just took those 3 lines about sanity and put them in a blank new game, they worked fine, as they should. Finally, I found that if I made the if case lead to a button to activate the passage with square brackets, instead of directly displaying the passage as embedded with the curly brackets, it worked.  So:</p>\n<pre><code>{if path_sorter=3:{off_open}}\n# had to be changed to\n{if path_sorter=3:[off_open]}\n</code></pre>\n<p>forcing the player to hit another button, rather than go straight to the text. Why that matters remains entirely beyond me, something about scope, or calling an embed from an embed? At any rate,  I think I can make it work, and I'll try to avoid \"embed inception\" in the future, lol.</p>\n\n",
      "PostDate": "2023-12-07T05:27:03.084378Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9f233657-6d94-42e4-8c6b-5d0915cef53f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If I remember correctly, a section name in curly brackets outputs the literal text part of the section, but does not run its scripts.\r\n\r\nI think the only way to get around that extra click would be using javascript.\r\nSomething like (off the top of my head; I could have misremembered the function names)â€¦\r\n```\r\n[[Try to stay awake]]:\r\n    if(squiffy.get(\"path_sorter\") == 3) {\r\n        squiffy.story.run(squiffy.section.passages[\"off_open\"]);\r\n    }\r\n\r\n@set path_sorter = 0\r\n## ...some code to sort the outcome by numbers to go to different passages, including...\r\n\r\n{if path_sorter=3:{off_open}}\r\n\r\n[off_open]:\r\nA bunch of scary stuff happens here.\r\n@set sanity = 100\r\n@dec sanity\r\nCurrent Sanity: {sanity}\r\n```\r\nManually running the @ lines before the passage is inserted.",
      "EditableFormat": "markdown",
      "HTML": "<p>If I remember correctly, a section name in curly brackets outputs the literal text part of the section, but does not run its scripts.</p>\n<p>I think the only way to get around that extra click would be using javascript.<br>\nSomething like (off the top of my head; I could have misremembered the function names)â€¦</p>\n<pre><code>[[Try to stay awake]]:\n    if(squiffy.get(\"path_sorter\") == 3) {\n        squiffy.story.run(squiffy.section.passages[\"off_open\"]);\n    }\n\n@set path_sorter = 0\n## ...some code to sort the outcome by numbers to go to different passages, including...\n\n{if path_sorter=3:{off_open}}\n\n[off_open]:\nA bunch of scary stuff happens here.\n@set sanity = 100\n@dec sanity\nCurrent Sanity: {sanity}\n</code></pre>\n<p>Manually running the @ lines before the passage is inserted.</p>\n\n",
      "PostDate": "2023-12-07T08:42:16.9258231Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "033bba59-af52-4461-87b7-732c675e6b17",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Actually, a more common way to do this would be jumping to the passage directly. For example:\r\n```\r\n[[Try to stay awake]]:\r\n    if(squiffy.get(\"path_sorter\") == 3) {\r\n        squiffy.story.passage(\"off_open\");\r\n    }\r\n\r\n@set path_sorter = 0\r\n\r\nNote that any text here will be displayed\r\n*after* the off_open passage\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Actually, a more common way to do this would be jumping to the passage directly. For example:</p>\n<pre><code>[[Try to stay awake]]:\n    if(squiffy.get(\"path_sorter\") == 3) {\n        squiffy.story.passage(\"off_open\");\n    }\n\n@set path_sorter = 0\n\nNote that any text here will be displayed\n*after* the off_open passage\n</code></pre>\n\n",
      "PostDate": "2023-12-07T09:18:08.0872528Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "265e5a2d-233a-479e-8752-49c3e6f1b396",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is an actual bug but mrangel found it and fixed it in his unofficial [Squiffy 5.1.4](https://textadventures.co.uk/forum/squiffy/topic/k7mig9vfj0ashnvsbefoeq/unofficial-squiffy-5-1-4-by-mrangel).",
      "EditableFormat": "markdown",
      "HTML": "<p>This is an actual bug but mrangel found it and fixed it in his unofficial <a href=\"https://textadventures.co.uk/forum/squiffy/topic/k7mig9vfj0ashnvsbefoeq/unofficial-squiffy-5-1-4-by-mrangel\">Squiffy 5.1.4</a>.</p>\n\n",
      "PostDate": "2023-12-18T00:16:52.5846348Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
