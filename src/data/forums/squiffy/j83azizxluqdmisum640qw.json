{
  "Topic": {
    "TopicId": "j83azizxluqdmisum640qw",
    "ForumId": "24",
    "Title": "Setting values as \"true\" after seeing multiple passages",
    "LastUpdated": "2021-04-26T13:03:43.8417843Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "dea4db09-db72-4394-ad55-43cfc2b99ea5",
      "UserId": 538473,
      "Username": "oompadearest",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm having trouble with figuring out how to set a value as true only after seeing everything the section has to offer. There are three passages, and each set the value as true, but I don't know how to specify that the player must see *all three* sections before setting said value as true. Any help is appreciated!",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm having trouble with figuring out how to set a value as true only after seeing everything the section has to offer. There are three passages, and each set the value as true, but I don't know how to specify that the player must see <em>all three</em> sections before setting said value as true. Any help is appreciated!</p>\n\n",
      "PostDate": "2021-04-26T13:03:43.8417843Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8de2dab6-0ba5-4d4d-b777-8672e03178ed",
      "UserId": 518999,
      "Username": "Mr.Dot",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f4786663e44a09a9cd2d148a7e6cf553?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm not sure if this will work, but I think you can just use a turn counter... like:\r\n```\r\n[[Section]]:\r\n\r\nYou see [him], [her], and a [dog]\r\n\r\n[him]: \r\nText\r\n[her]:\r\nText\r\n[dog]:\r\nText\r\n\r\n[@3]: value={true}",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not sure if this will work, but I think you can just use a turn counter... like:</p>\n<pre><code>[[Section]]:\n\nYou see [him], [her], and a [dog]\n\n[him]: \nText\n[her]:\nText\n[dog]:\nText\n\n[@3]: value={true}\n</code></pre>\n\n",
      "PostDate": "2021-04-26T13:29:06.7791239Z",
      "LastEditDate": "2021-04-26T13:34:05.4101528Z",
      "link": null
    },
    {
      "PostId": "c4e4ebb4-4163-4881-92c2-8aa8670e782b",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\n# Example 1\r\n\r\nUse an integer variable to count:\r\n\r\n```\r\n@title Test Game 1\r\n\r\n@set seenAllThree = 0\r\n\r\nThis game has three passages.\r\n\r\nI want to know if you've seen all three of them.\r\n\r\n[passage1] [passage2] [passage3]\r\n\r\n\r\n[passage1]:\r\n@inc seenAllThree\r\n\r\nThis is passage 1.\r\n\r\nYou have now seen {seenAllThree} out of 3 passages.\r\n\r\n{if seenAllThree=3:[[CONTINUE]]}\r\n\r\n[passage2]:\r\n@inc seenAllThree\r\n\r\nThis is passage 2.\r\n\r\nYou have now seen {seenAllThree} out of 3 passages.\r\n\r\n{if seenAllThree=3:[[CONTINUE]]}\r\n\r\n[passage3]:\r\n@inc seenAllThree\r\n\r\nThis is passage 3.\r\n\r\nYou have now seen {seenAllThree} out of 3 passages.\r\n\r\n{if seenAllThree=3:[[CONTINUE]]}\r\n\r\n[[CONTINUE]]:\r\n# GAME OVER\r\n```\r\n\r\n#### REFERENCE\r\n\r\nhttps://docs.textadventures.co.uk/squiffy/attributes.html\r\n\r\n---\r\nExample 2 (if you KNOW you only have 3 passages in the section AND each passage can only be clicked once)\r\n\r\nUse a turn script. In this case, the 3rd passage:\r\n\r\n```\r\n@title Test Game 2\r\n\r\nThis game has three passages.\r\n\r\nI want to know if you've seen all three of them.\r\n\r\n[passage1] [passage2] [passage3]\r\n\r\n\r\n[passage1]:\r\nThis is passage 1.\r\n\r\n\r\n[passage2]:\r\nThis is passage 2.\r\n\r\n\r\n[passage3]:\r\nThis is passage 3.\r\n\r\n[@3]:\r\nYou saw all the passages.\r\n\r\n[[CONTINUE]]\r\n\r\n[[CONTINUE]]:\r\n# GAME OVER\r\n```\r\n\r\n#### REFERENCE\r\nhttps://docs.textadventures.co.uk/squiffy/turncount.html\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<h1>Example 1</h1>\n<p>Use an integer variable to count:</p>\n<pre><code>@title Test Game 1\n\n@set seenAllThree = 0\n\nThis game has three passages.\n\nI want to know if you've seen all three of them.\n\n[passage1] [passage2] [passage3]\n\n\n[passage1]:\n@inc seenAllThree\n\nThis is passage 1.\n\nYou have now seen {seenAllThree} out of 3 passages.\n\n{if seenAllThree=3:[[CONTINUE]]}\n\n[passage2]:\n@inc seenAllThree\n\nThis is passage 2.\n\nYou have now seen {seenAllThree} out of 3 passages.\n\n{if seenAllThree=3:[[CONTINUE]]}\n\n[passage3]:\n@inc seenAllThree\n\nThis is passage 3.\n\nYou have now seen {seenAllThree} out of 3 passages.\n\n{if seenAllThree=3:[[CONTINUE]]}\n\n[[CONTINUE]]:\n# GAME OVER\n</code></pre>\n<h4>REFERENCE</h4>\n<p>https://docs.textadventures.co.uk/squiffy/attributes.html</p>\n<hr>\n<p>Example 2 (if you KNOW you only have 3 passages in the section AND each passage can only be clicked once)</p>\n<p>Use a turn script. In this case, the 3rd passage:</p>\n<pre><code>@title Test Game 2\n\nThis game has three passages.\n\nI want to know if you've seen all three of them.\n\n[passage1] [passage2] [passage3]\n\n\n[passage1]:\nThis is passage 1.\n\n\n[passage2]:\nThis is passage 2.\n\n\n[passage3]:\nThis is passage 3.\n\n[@3]:\nYou saw all the passages.\n\n[[CONTINUE]]\n\n[[CONTINUE]]:\n# GAME OVER\n</code></pre>\n<h4>REFERENCE</h4>\n<p>https://docs.textadventures.co.uk/squiffy/turncount.html</p>\n\n",
      "PostDate": "2021-04-26T14:12:58.8218104Z",
      "LastEditDate": "2021-04-26T14:15:04.2939342Z",
      "link": null
    },
    {
      "PostId": "885c921a-a384-4052-b119-e7454a7ac271",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah, Mr. Dot beat me to it.\r\n\r\nTo correct that last bit of his code:\r\n\r\n```\r\n[[Section]]:\r\n\r\nYou see [him], [her], and a [dog]\r\n\r\n[him]: \r\nText\r\n[her]:\r\nText\r\n[dog]:\r\nText\r\n\r\n[@3]:\r\n@set value\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah, Mr. Dot beat me to it.</p>\n<p>To correct that last bit of his code:</p>\n<pre><code>[[Section]]:\n\nYou see [him], [her], and a [dog]\n\n[him]: \nText\n[her]:\nText\n[dog]:\nText\n\n[@3]:\n@set value\n</code></pre>\n\n",
      "PostDate": "2021-04-26T14:19:17.6261205Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b4afa4ef-eb6f-4332-be58-beaf90632642",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think the `[@3]:` solution is probably the neatest. You can also  use `[@last]:` as a shortcut for the number of passages in the current section. (Note that this counts the number of times the player has clicked a passage link since they entered the section - if there's more than one link pointing to the same passage, it might be possible to visit the same section more than once, which I think will mean that your `@3` or `@last` passage could trigger early.\r\n\r\nIt also means that if the player can leave that section and then come back, it will only count the number of passages they've read this time.\r\n\r\n<hr />\r\n\r\nIf you want to check that they've all been seen rather than counting clicks, you could use KV's method 1, or use Javascript.\r\nThe JS expression `$.grep(Object.keys(squiffy.story.section.passages), x => !squiffy.story.seen(x)).length` returns the number of unseen passages in the current section. So you could do:\r\n```\r\n    squiffy.set('seen_all_passages', $.grep(Object.keys(squiffy.story.section.passages), x => !squiffy.story.seen(x)).length == 0)\r\n```\r\nThat will set the attribute `seen_all_passages` to true if all the passages in the current section have been seen.\r\nUnfortunately, this suffers from the same idiosyncrasies as `seen` in general. Basically, it only looks at the passage name to see if it's been seen. So if two sections have a passage with the same name, there's no way to determine which one of them the player has seen. So it really checks if the player has seen all the passages in this section, *or* passages elsewhere with the same names as the ones in this section, *or* sections with the same name as those passages.\r\n\r\nUnfortunately, getting around this would need some significant changes to how Squiffy's `seen` function works.",
      "EditableFormat": "markdown",
      "HTML": "<p>I think the <code>[@3]:</code> solution is probably the neatest. You can also  use <code>[@last]:</code> as a shortcut for the number of passages in the current section. (Note that this counts the number of times the player has clicked a passage link since they entered the section - if there's more than one link pointing to the same passage, it might be possible to visit the same section more than once, which I think will mean that your <code>@3</code> or <code>@last</code> passage could trigger early.</p>\n<p>It also means that if the player can leave that section and then come back, it will only count the number of passages they've read this time.</p>\n<hr>\n<p>If you want to check that they've all been seen rather than counting clicks, you could use KV's method 1, or use Javascript.<br>\nThe JS expression <code>$.grep(Object.keys(squiffy.story.section.passages), x =&gt; !squiffy.story.seen(x)).length</code> returns the number of unseen passages in the current section. So you could do:</p>\n<pre><code>    squiffy.set('seen_all_passages', $.grep(Object.keys(squiffy.story.section.passages), x =&gt; !squiffy.story.seen(x)).length == 0)\n</code></pre>\n<p>That will set the attribute <code>seen_all_passages</code> to true if all the passages in the current section have been seen.<br>\nUnfortunately, this suffers from the same idiosyncrasies as <code>seen</code> in general. Basically, it only looks at the passage name to see if it's been seen. So if two sections have a passage with the same name, there's no way to determine which one of them the player has seen. So it really checks if the player has seen all the passages in this section, <em>or</em> passages elsewhere with the same names as the ones in this section, <em>or</em> sections with the same name as those passages.</p>\n<p>Unfortunately, getting around this would need some significant changes to how Squiffy's <code>seen</code> function works.</p>\n\n",
      "PostDate": "2021-04-26T16:43:10.2720301Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
