{
  "Topic": {
    "TopicId": "4467",
    "ForumId": "24",
    "Title": "Either I'm going insane or...",
    "LastUpdated": "2015-12-15T14:35:24+00:00",
    "ReplyCount": 7
  },
  "Posts": [
    {
      "PostId": "29451",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I got squiffy installed, along with all its little friends, and I created a &quot;Hello world&quot; squiffy file, and compiled it, and got my &quot;Hello world&quot; HTML page. Yay!\n\nThen I modified the file to add some of the other sample test, compiled it again, and... still &quot;Hello world&quot;. I deleted all the built files in that folder, compiled again, and... &quot;Hello world&quot;.\n\nSo I copied the original squiffy file to a new file in that folder, compiled it, and the new text showed up. I recompiled the original file - still &quot;Hello world&quot;. I modified the second file and compiled it, and it had the original (second file) unmodified text. My changes took no effect.\n\nWhat I see happening (with no explanation) is that once I compile a Squiffy file, it will always compile the same way after that, no matter what I do to the file contents. It's as if something somewhere is remembering the original contents. If I empty the file, I get some sort of index error, but if I then put random text in after that, it goes back to being what it was the first time I compiled it.\n\nIs there some sort of caching going on somewhere?",
      "EditableFormat": "bbcode",
      "HTML": "I got squiffy installed, along with all its little friends, and I created a &quot;Hello world&quot; squiffy file, and compiled it, and got my &quot;Hello world&quot; HTML page. Yay!<br/><br/>Then I modified the file to add some of the other sample test, compiled it again, and... still &quot;Hello world&quot;. I deleted all the built files in that folder, compiled again, and... &quot;Hello world&quot;.<br/><br/>So I copied the original squiffy file to a new file in that folder, compiled it, and the new text showed up. I recompiled the original file - still &quot;Hello world&quot;. I modified the second file and compiled it, and it had the original (second file) unmodified text. My changes took no effect.<br/><br/>What I see happening (with no explanation) is that once I compile a Squiffy file, it will always compile the same way after that, no matter what I do to the file contents. It's as if something somewhere is remembering the original contents. If I empty the file, I get some sort of index error, but if I then put random text in after that, it goes back to being what it was the first time I compiled it.<br/><br/>Is there some sort of caching going on somewhere?",
      "PostDate": "2014-07-09T21:47:29+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29452",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "It might have to do with the browser (Chrome), but that still doesn't totally explain it to me. If I look in the generated files, I see the new text. So it looks like the compilation is happening. But...\n\nIf it always got stuck with the same content, then I'd understand a browser cache issue. What I don't understand is how what is being loaded seems to vary depending on the file I compile, and yet has no relation to the current contents of the file (e.g. testgame.squiffy always gives &quot;Hello world&quot;, and testgame2.squiffy always returns the other text, even though they're in the same folder). So it keeps switching. Somehow it knows, as if both the compiled files have been cached, but it loads the corresponding one depending on which source file was compiled last, even though the files no longer have those contents.\n\nHas anyone seen this?",
      "EditableFormat": "bbcode",
      "HTML": "It might have to do with the browser (Chrome), but that still doesn't totally explain it to me. If I look in the generated files, I see the new text. So it looks like the compilation is happening. But...<br/><br/>If it always got stuck with the same content, then I'd understand a browser cache issue. What I don't understand is how what is being loaded seems to vary depending on the file I compile, and yet has no relation to the current contents of the file (e.g. testgame.squiffy always gives &quot;Hello world&quot;, and testgame2.squiffy always returns the other text, even though they're in the same folder). So it keeps switching. Somehow it knows, as if both the compiled files have been cached, but it loads the corresponding one depending on which source file was compiled last, even though the files no longer have those contents.<br/><br/>Has anyone seen this?",
      "PostDate": "2014-07-09T22:01:04+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29453",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I think I found it. The &quot;Restart&quot; link makes the page discard its contents and reload anew. And it looks like Squiffy itself is using &quot;localStorage&quot; to cache things based on story id until &quot;Restart&quot; is pressed. So there's my mystery solved.\n\nI'm not sure if that behavior is documented, but it might be good to call it out a bit more! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "I think I found it. The &quot;Restart&quot; link makes the page discard its contents and reload anew. And it looks like Squiffy itself is using &quot;localStorage&quot; to cache things based on story id until &quot;Restart&quot; is pressed. So there's my mystery solved.<br/><br/>I'm not sure if that behavior is documented, but it might be good to call it out a bit more! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2014-07-09T22:39:48+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29631",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "I've now added a note about this to the new &quot;Using Squiffy&quot; page in the documentation: <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/squiffy/usage.html\">http://docs.textadventures.co.uk/squiffy/usage.html</a><!-- m -->\n\nI'm wondering if the current behaviour makes sense. My thinking was that an author might want to be able to update their game, and re-upload it somewhere, without killing the game state for anybody who had started playing it.\n\nBut now I'm wondering if that will always be desirable - a game author might make a change to their game which is not compatible with existing saved states. And while developing a game, it's a pain to always have to click the Restart link. And it's confusing if you're not expecting it to work that way.\n\nWhat do you guys think?\n\nThe saved state for a game goes into the browser's local storage, using a prefix (which allows multiple games to exist with their own separate states, even if they're served by the same host). The prefix is a hash of the game filename and machine id, so recompiling the same game will still give you the same hash, so it will be using the same local storage. We could change this to use a hash of the game source code instead, with an option for an author to manually set the prefix to be the same as an older hash if they wanted save states to persist between versions. This would require the author to remember to do that though. Hmmmm....",
      "EditableFormat": "bbcode",
      "HTML": "I've now added a note about this to the new &quot;Using Squiffy&quot; page in the documentation: <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/squiffy/usage.html\">http://docs.textadventures.co.uk/squiffy/usage.html</a><!-- m --><br/><br/>I'm wondering if the current behaviour makes sense. My thinking was that an author might want to be able to update their game, and re-upload it somewhere, without killing the game state for anybody who had started playing it.<br/><br/>But now I'm wondering if that will always be desirable - a game author might make a change to their game which is not compatible with existing saved states. And while developing a game, it's a pain to always have to click the Restart link. And it's confusing if you're not expecting it to work that way.<br/><br/>What do you guys think?<br/><br/>The saved state for a game goes into the browser's local storage, using a prefix (which allows multiple games to exist with their own separate states, even if they're served by the same host). The prefix is a hash of the game filename and machine id, so recompiling the same game will still give you the same hash, so it will be using the same local storage. We could change this to use a hash of the game source code instead, with an option for an author to manually set the prefix to be the same as an older hash if they wanted save states to persist between versions. This would require the author to remember to do that though. Hmmmm....",
      "PostDate": "2014-07-26T14:53:56+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29634",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "I think it makes more sense to erase state on each compile. Maybe I'm not understanding correctly, but if the hash is just the filename and machine ID, why would pushing changes to a production game kill state of games in progress?",
      "EditableFormat": "bbcode",
      "HTML": "I think it makes more sense to erase state on each compile. Maybe I'm not understanding correctly, but if the hash is just the filename and machine ID, why would pushing changes to a production game kill state of games in progress?",
      "PostDate": "2014-07-26T19:00:18+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29637",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I hadn't really thought about post-deployment updates. I don't know how often that happens with typical game authors, but it is a real possibility to consider. Once I knew about the reload button, it was workable (though an extra step in the edit/run cycle), but it just seemed strange to have that sort of non-updating behavior in a development mode. I'm pondering whether a game author would want to preserve game state while developing the game... I suppose there may be cases for that.\n\nI suppose I'm not helping. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I was just confused before about why the game wasn't updating when I changed things, recompiled and reloaded the page. I think as long as that's clearly spelled out, it might be ok as is, though I'm sure there will be some who ask &quot;why do I have to do this?&quot;",
      "EditableFormat": "bbcode",
      "HTML": "I hadn't really thought about post-deployment updates. I don't know how often that happens with typical game authors, but it is a real possibility to consider. Once I knew about the reload button, it was workable (though an extra step in the edit/run cycle), but it just seemed strange to have that sort of non-updating behavior in a development mode. I'm pondering whether a game author would want to preserve game state while developing the game... I suppose there may be cases for that.<br/><br/>I suppose I'm not helping. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I was just confused before about why the game wasn't updating when I changed things, recompiled and reloaded the page. I think as long as that's clearly spelled out, it might be ok as is, though I'm sure there will be some who ask &quot;why do I have to do this?&quot;",
      "PostDate": "2014-07-26T19:28:22+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29639",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "Conventionally in IF development if you want the game in a particular state you load a walkthrough. That seems more flexible to me.",
      "EditableFormat": "bbcode",
      "HTML": "Conventionally in IF development if you want the game in a particular state you load a walkthrough. That seems more flexible to me.",
      "PostDate": "2014-07-26T19:53:43+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "39605",
      "UserId": 0,
      "Username": "coyotepod",
      "UserAvatar": null,
      "UserGravatar": "29ddc9bf3025f700a59ffe95d7b9a532",
      "EditableText": "I'm a newbie here, too, and not a programmer. I think I'm experiencing the same thing. I get that Restart restarts the story, but if I make changes in text because of typos or simply to add content, its not refreshed in the game. I can run Preview and its fine, but I want a &quot;reset&quot; button in addition to &quot;restart&quot; I guess. Clearing the browser cache didn't help me.\n\nThank you and sorry if this has been mentioned before.",
      "EditableFormat": "bbcode",
      "HTML": "I'm a newbie here, too, and not a programmer. I think I'm experiencing the same thing. I get that Restart restarts the story, but if I make changes in text because of typos or simply to add content, its not refreshed in the game. I can run Preview and its fine, but I want a &quot;reset&quot; button in addition to &quot;restart&quot; I guess. Clearing the browser cache didn't help me.<br/><br/>Thank you and sorry if this has been mentioned before.",
      "PostDate": "2015-12-15T14:35:24+00:00",
      "LastEditDate": null
    }
  ]
}
