{
  "Topic": {
    "TopicId": "zn8hh3fk0ua4fp0a3fshng",
    "ForumId": "24",
    "Title": "JS \"If character doesn't display, use img instead.\"",
    "LastUpdated": "2022-09-19T23:18:17.326864Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "1c6ecac2-50b5-4222-95de-c2f261eb8493",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm making a game that uses Rebus puzzles heavily. First, I made a library of all of the rebuses I want to be potentially usable. Most of the output relies on Unicode dingbats, glyphs from foreign and ancient languages, and of course, emojis.\r\n\r\nI'm noticing the output displays differently in different browsers. Some browsers just don't display some of the older dingbats, many of the glyphs, and even some emojis.\r\n\r\n I prefer to have the results copy-pasteable so I'd rather not default to just using ```<img>```.\r\n\r\nIs there a way for JS to detect whether a character is displaying as an empty box, and then replace with images?",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm making a game that uses Rebus puzzles heavily. First, I made a library of all of the rebuses I want to be potentially usable. Most of the output relies on Unicode dingbats, glyphs from foreign and ancient languages, and of course, emojis.</p>\n<p>I'm noticing the output displays differently in different browsers. Some browsers just don't display some of the older dingbats, many of the glyphs, and even some emojis.</p>\n<p>I prefer to have the results copy-pasteable so I'd rather not default to just using <code>&lt;img&gt;</code>.</p>\n<p>Is there a way for JS to detect whether a character is displaying as an empty box, and then replace with images?</p>\n\n",
      "PostDate": "2022-09-19T23:18:17.326864Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6a68bb56-f75e-4ef0-81f7-73efee55bcbf",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Right… if you specify multiple fonts in your stylesheet, the browser should use the first one that contains the needed glyph, if available. So the most obvious solution would be to use a webfont which includes all the glyphs you need.\r\n\r\nYou could also include a font like <a href=\"https://github.com/adobe-fonts/adobe-blank/\">Adobe Blank</a>, which represents all the basic unicode characters as zero-width glyphs. So you can set `font-family: serif, adobe blank;` for example, and it will use the system's default serif font for characters that are available, and any unavailable characters are removed entirely rather than displaying a box. You can then use Javascript to test the width of the character, and so find out if it has displayed.\r\n\r\nOr, if you're just concerned about the user being able to copy and paste, use the images and set their `alt` attribute. If the user copies the text and pastes into an application which can't render the images, they will get the text backup. Or have a fixed-size `<span>` with a background image, and put the text in it in a transparent font; so the user sees the image, but their copy and paste functions pick up the text.",
      "EditableFormat": "markdown",
      "HTML": "<p>Right… if you specify multiple fonts in your stylesheet, the browser should use the first one that contains the needed glyph, if available. So the most obvious solution would be to use a webfont which includes all the glyphs you need.</p>\n<p>You could also include a font like <a href=\"https://github.com/adobe-fonts/adobe-blank/\">Adobe Blank</a>, which represents all the basic unicode characters as zero-width glyphs. So you can set <code>font-family: serif, adobe blank;</code> for example, and it will use the system's default serif font for characters that are available, and any unavailable characters are removed entirely rather than displaying a box. You can then use Javascript to test the width of the character, and so find out if it has displayed.</p>\n<p>Or, if you're just concerned about the user being able to copy and paste, use the images and set their <code>alt</code> attribute. If the user copies the text and pastes into an application which can't render the images, they will get the text backup. Or have a fixed-size <code>&lt;span&gt;</code> with a background image, and put the text in it in a transparent font; so the user sees the image, but their copy and paste functions pick up the text.</p>\n\n",
      "PostDate": "2022-09-20T08:03:35.2885872Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9f7388cd-c834-4e28-97de-c6a41a2de6c1",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks for those solutions, mrangel. These work well as long as I stay away from JavaScript.\r\n\r\nHowever, there are some things I need to do in JS that I can't do in html, such as replace text. Text that has been replaced, for some reason, totally ignores html tags. For certain emojis and glyphs that still don't display correctly, I want to manually change the font.\r\n\r\nThe code below refuses to run. The whole game refuses to start. If I simply take out ```\"var dad = dad.style.fontFamily = \"Segoe UI Emoji\";``` then it works.\r\n\r\n```\r\n[[start]]:\r\n@set dad = &#10138;&zwj;&#128104;&#8205;&#128103;&#127999;\r\n\r\n    var dad = squiffy.get(\"dad\");\r\n    var dad = dad.style.fontFamily = \"Segoe UI Emoji\";\r\n    squiffy.set(\"dad\", dad);\r\n    squiffy.story.go(\"next\");\r\n\r\n[[next]]:\r\n{dad}\r\n```\r\n\r\nThanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks for those solutions, mrangel. These work well as long as I stay away from JavaScript.</p>\n<p>However, there are some things I need to do in JS that I can't do in html, such as replace text. Text that has been replaced, for some reason, totally ignores html tags. For certain emojis and glyphs that still don't display correctly, I want to manually change the font.</p>\n<p>The code below refuses to run. The whole game refuses to start. If I simply take out <code>\"var dad = dad.style.fontFamily = \"Segoe UI Emoji\";</code> then it works.</p>\n<pre><code>[[start]]:\n@set dad = &amp;#10138;&amp;zwj;&amp;#128104;&amp;#8205;&amp;#128103;&amp;#127999;\n\n    var dad = squiffy.get(\"dad\");\n    var dad = dad.style.fontFamily = \"Segoe UI Emoji\";\n    squiffy.set(\"dad\", dad);\n    squiffy.story.go(\"next\");\n\n[[next]]:\n{dad}\n</code></pre>\n<p>Thanks!</p>\n\n",
      "PostDate": "2022-09-22T00:51:26.9317175Z",
      "LastEditDate": "2022-09-22T03:06:57.4946967Z",
      "link": null
    },
    {
      "PostId": "66d07601-baf7-42aa-aa95-438c73af3e9c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm not sure what that code is supposed to be.\r\n\r\n`dad.style.fontFamily = \"Segoe UI Emoji\"` makes sense if the variable `dad` refers to an HTML element on the page; not if it's a javascript string.\r\n\r\nI think you would want something like:\r\n```\r\n    dad = \"<span style=\\\"font-family: Segoe UI Emoji\\\">\" + dad + \"</span>\";\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not sure what that code is supposed to be.</p>\n<p><code>dad.style.fontFamily = \"Segoe UI Emoji\"</code> makes sense if the variable <code>dad</code> refers to an HTML element on the page; not if it's a javascript string.</p>\n<p>I think you would want something like:</p>\n<pre><code>    dad = \"&lt;span style=\\\"font-family: Segoe UI Emoji\\\"&gt;\" + dad + \"&lt;/span&gt;\";\n</code></pre>\n\n",
      "PostDate": "2022-09-22T08:02:11.8011263Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a2ab5c50-8603-4664-aae5-27cfe7f0867d",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks, mrangel. \r\n\r\nApparently the JS (JQuery?) \".fontFamily\" breaks Squiffy. Oh well. Lots of things that shouldn't break Squiffy do. \r\n\r\nI didn't know you could enclose html into a JS variable. Thanks! I had good bit of fun playing with it in another tool, but Squiffy seems to ignore it.\r\n\r\nI finally went with Squiffy's native @replace function which got the job done, just not the exact way I wanted. \r\n\r\nYou are the best!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks, mrangel.</p>\n<p>Apparently the JS (JQuery?) \".fontFamily\" breaks Squiffy. Oh well. Lots of things that shouldn't break Squiffy do.</p>\n<p>I didn't know you could enclose html into a JS variable. Thanks! I had good bit of fun playing with it in another tool, but Squiffy seems to ignore it.</p>\n<p>I finally went with Squiffy's native @replace function which got the job done, just not the exact way I wanted.</p>\n<p>You are the best!</p>\n\n",
      "PostDate": "2022-09-25T23:02:15.8118611Z",
      "LastEditDate": "2022-09-25T23:03:02.1254836Z",
      "link": null
    },
    {
      "PostId": "947683d3-2893-460a-bf74-65a12e7276e9",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh yeah… there was something weird where Squiffy removes `style` from the text when it's compiling the game for no obvious reason. In the past I've seen things like:\r\n```\r\nsomevariable = '<span sty' + 'le=\"color: red\">';\r\n```\r\nto prevent it removing style information. But I can't remember exactly what circumstances that's needed in.",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh yeah… there was something weird where Squiffy removes <code>style</code> from the text when it's compiling the game for no obvious reason. In the past I've seen things like:</p>\n<pre><code>somevariable = '&lt;span sty' + 'le=\"color: red\"&gt;';\n</code></pre>\n<p>to prevent it removing style information. But I can't remember exactly what circumstances that's needed in.</p>\n\n",
      "PostDate": "2022-09-26T07:12:50.5696832Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
