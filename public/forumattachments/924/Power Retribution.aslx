<!--Saved by Quest 5.5.5173.27901-->
<asl version="550">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <game name="Power Retrubution">
    <gameid>98c6396b-8edd-42fd-ab5b-ebb7c0271f77</gameid>
    <version>1.0</version>
    <firstpublished>2014</firstpublished>
    <gridmap />
  </game>
  <object name="centre">
    <inherit name="editor_room" />
    <description>This must be the main centre of the plant. Where is everyone, this is weird, really weird. Maybe I should look around.</description>
    <exitslistprefix>You can go to</exitslistprefix>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>You are in the</prefix>
    <descprefix type="string"></descprefix>
    <exit alias="cafe" to="cafe">
      <inherit name="southdirection" />
      <prefix>the</prefix>
    </exit>
    <exit alias="hall" to="hall">
      <inherit name="westdirection" />
      <prefix>the</prefix>
    </exit>
    <object name="corpse">
      <inherit name="editor_object" />
      <inherit name="namedmale" />
      <inherit name="container_open" />
      <gender>he</gender>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <look>His a corpse, there seems to be something in him.</look>
      <alias>corpse</alias>
      <prefix>the</prefix>
      <inventoryverbs type="stringlist" />
      <useindividualverblist type="boolean">false</useindividualverblist>
      <attr name="feature_player" type="boolean">false</attr>
      <feature_container />
      <open type="boolean">false</open>
      <close type="boolean">false</close>
      <hidechildren />
      <listchildrenprefix>There is a</listchildrenprefix>
      <isopen />
      <listchildren />
      <object name="banana 1">
        <inherit name="editor_object" />
        <inherit name="edible" />
        <take />
        <feature_edible />
        <inventoryverbs type="stringlist">
          <value>Eat</value>
        </inventoryverbs>
        <eatmsg>Thats a tasty banana!</eatmsg>
        <look>It a banana.</look>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <alias>banana</alias>
      </object>
    </object>
    <object name="light switch">
      <inherit name="editor_object" />
      <inherit name="switchable" />
      <feature_switchable />
      <switchedon />
      <switchoffmsg>That was pointless, it didn't do anything.</switchoffmsg>
      <switchonmsg>Still nothing, who put this here</switchonmsg>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Switch on</value>
        <value>Switch off</value>
      </displayverbs>
      <look>It seems to be a light switch.</look>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
    </object>
    <object name="trash can">
      <inherit name="editor_object" />
      <inherit name="container_closed" />
      <feature_container />
      <listchildren />
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
      <look>No way! A trash can.</look>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <object name="half apple">
        <inherit name="editor_object" />
        <inherit name="edible" />
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
        </displayverbs>
        <look>Eww! Thats been here for a while. </look>
        <feature_edible />
        <eatmsg>GROSS!!! I should have not eaten that.</eatmsg>
        <inventoryverbs type="stringlist">
          <value>Eat</value>
        </inventoryverbs>
        <take />
      </object>
    </object>
    <exit alias="courtyard" to="courtyard">
      <inherit name="northdirection" />
      <locked />
      <lockmessage>The door is jammed, I'll have to find another way out.</lockmessage>
    </exit>
    <object name="centre sign">
      <inherit name="editor_object" />
      <alias>sign</alias>
      <look>It says there is a exit in the security room.</look>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist" />
    </object>
  </object>
  <object name="cafe">
    <inherit name="editor_room" />
    <exitslistprefix>You can go to</exitslistprefix>
    <description>A cafe, but why is nobody here. Maybe there are things to eat.</description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>You are in the</prefix>
    <exit alias="centre" to="centre">
      <inherit name="northdirection" />
      <prefix>the</prefix>
    </exit>
    <object name="banana 2">
      <inherit name="editor_object" />
      <inherit name="edible" />
      <inventoryverbs type="stringlist">
        <value>Eat</value>
      </inventoryverbs>
      <feature_edible />
      <eatmsg>That was a good banana.</eatmsg>
      <feature_usegive />
      <take />
      <look>A tasty looking banana.</look>
      <alias>banana</alias>
    </object>
    <object name="cabinets">
      <inherit name="editor_object" />
      <inherit name="container_closed" />
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Open</value>
      </displayverbs>
      <feature_container />
      <look>A nice cabnit up against the wall, its got some drawings on it that cant be mentioned.</look>
      <usedefaultprefix />
      <inventoryverbs type="stringlist" />
      <listchildren />
      <object name="salt">
        <inherit name="editor_object" />
        <inherit name="openable" />
        <inventoryverbs type="stringlist">
          <value>Give</value>
        </inventoryverbs>
        <feature_usegive />
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>some</prefix>
        <take />
        <takemsg>You pick up the Salt</takemsg>
        <drop />
        <look>It is a glass jar that contains a white, grainy material </look>
        <feature_container />
        <openscript type="script">
          msg ("Strange there is no smell")
        </openscript>
        <giveto type="scriptdictionary">
          <item key="skelly saltbones">
            AddToInventory (Keycard)
          </item>
        </giveto>
      </object>
    </object>
    <object name="fridge">
      <inherit name="editor_object" />
      <inherit name="container_closed" />
      <look>Thats is a large fridge.</look>
      <feature_container />
      <listchildren />
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
      <object name="baby">
        <inherit name="editor_object" />
        <inherit name="edible" />
        <feature_usegive />
        <attr name="feature_switchable" type="boolean">false</attr>
        <feature_edible />
        <take />
        <eatmsg>Yum! Yum! Yum! that was a tasty baby.</eatmsg>
        <look>Why is there a baby in a fridge.</look>
        <inventoryverbs type="stringlist">
          <value>Eat</value>
        </inventoryverbs>
      </object>
    </object>
    <exit alias="secretary room" to="Secretary Room">
      <inherit name="eastdirection" />
    </exit>
  </object>
  <object name="hall">
    <inherit name="editor_room" />
    <exitslistprefix>You can go to</exitslistprefix>
    <description>The hall, it's a shame it's the only long thing in this room.</description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>You are in the</prefix>
    <exit alias="centre" to="centre">
      <inherit name="eastdirection" />
      <prefix>the</prefix>
    </exit>
    <exit alias="restroom" to="restroom">
      <inherit name="northdirection" />
    </exit>
    <exit alias="security" to="security room">
      <inherit name="southdirection" />
    </exit>
    <exit name="Power Room" alias="Power Room" to="power room">
      <inherit name="westdirection" />
      <locked />
    </exit>
    <object name="Power Room Door">
      <inherit name="editor_object" />
      <inherit name="surface" />
      <feature_container />
      <hidechildren />
      <listchildren />
      <listchildrenprefix>It contains</listchildrenprefix>
      <object name="Power Room Key Reader">
        <inherit name="editor_object" />
        <inherit name="surface" />
        <feature_usegive />
        <cardSwiped type="boolean">false</cardSwiped>
        <drop type="boolean">false</drop>
        <attr name="feature_container" type="boolean">false</attr>
        <hidechildren />
        <listchildren />
        <listchildrenprefix>It contains</listchildrenprefix>
        <useon type="scriptdictionary" />
      </object>
    </object>
    <object name="hall sign">
      <inherit name="editor_object" />
      <alias>sign</alias>
      <look>It says "If yor after more information make your way to the Secretary".</look>
    </object>
  </object>
  <object name="restroom">
    <inherit name="editor_room" />
    <exitslistprefix>You can go to</exitslistprefix>
    <description>A restroom, it stinks in here, I wonder what could be in here.</description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>You are in the</prefix>
    <exit alias="hall" to="hall">
      <inherit name="southdirection" />
    </exit>
    <object name="stall">
      <inherit name="editor_object" />
      <inherit name="container_closed" />
      <feature_container />
      <listchildren />
      <listchildrenprefix>Inside is</listchildrenprefix>
      <object name="skelly saltbones">
        <inherit name="editor_object" />
        <inherit name="namedmale" />
        <inherit name="surface" />
        <prefix>Mr</prefix>
        <alias>salt-bones</alias>
        <inventoryverbs type="stringlist" />
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <look>Some salty old bones, he has a ID on him it says his name is Skelly.</look>
        <feature_usegive />
        <feature_container />
        <hidechildren />
        <listchildren />
        <listchildrenprefix>He contains</listchildrenprefix>
        <speak type="script">
          topics = Split ("Who are you;", ";")
          show menu ("Talk to salt-bones about...", topics, true) {
            switch (result) {
              case ("Who are you") {
                msg ("My name is Salt-bones")
                topics = Split ("What? Is that seriously your name?;Such a nice name salt-bones;What are you doing in here?;How do I get into the Power Room?", ";")
                show menu ("Talk to salt-bones about...", topics, true) {
                  switch (result) {
                    case (What are you doing in here?) {
                      msg ("Well I..I uh went to use the restroom oh about...well I can't rember how long ago...and I've been here ever since. I like to dance around the place...not many people now you see...I also like rabbits I find them quite fluffy and I would imagine tasty...maybe thats what happened to bear...he just dissappeared one day POOF!...huh what were you saying young lass?")
                      topics = Split ("UH?!? nevermind;Why you are here?")
                      show menu ("Talk to salt-bones about...", topics, true) {
                        switch (result) {
                          case (Why you are here?) {
                            msg ("Ohh pssh thats easy. I live here.")
                          }
                          case (UH?!? nevermind) {
                            msg ("Ok, you young whipper snapper")
                          }
                        }
                      }
                    }
                    case (How do I get into the Power Room?) {
                      msg ("Oh well I have the key card...")
                      topics = Split ("Great hand it over;Where are you going with this exactly?;What if I dont want to do anything for it?;How do I get into the Power Room? What if I just kill you right here and now? ;")
                      show menu ("Talk to salt-bones about...", topics, true) {
                        switch (result) {
                          case (What if I just kill you right here and now?) {
                            msg ("HAH! you can try....")
                          }
                          case (What if I dont want to do anything for it?) {
                            msg ("Well then, I guess you will never get into the power room. You wont be able to destroy the power. So you will NEVER leave this place")
                            topics = Split ("How do you know I want to destroy it?;I dont need your help!;;")
                            show menu ("Talk to Skelly about...", topics, true) {
                              switch (result) {
                                case (I dont need your help!) {
                                  msg ("If you say so...")
                                }
                                case (How do you know I want to destroy it?) {
                                  msg ("Oh my young padawan. I know all...")
                                }
                              }
                            }
                          }
                          case (Where are you going with this exactly?) {
                            msg ("Oh yes well young lass I need you to get me a jar of salt. Its essentially in maintaining my fabulous skin")
                            topics = Split ("But its all green?;Why is it good for your skin?;")
                            show menu ("Talk to Skelly about...", topics, true) {
                              switch (result) {
                                case (Why is it good for your skin?) {
                                  msg ("Well. It allows my skin to breathe and regenerate blood cells, which I am severly lacking in my current state. Once I get it after a few days I am able to walk again.")
                                }
                                case (But its all green?) {
                                  msg ("Ohh! how dare you! my skin is of an olive shade, with some black patches thank you very much.")
                                }
                              }
                            }
                          }
                          case (Great hand it over) {
                            msg ("Not so fast there! I will need something in return")
                            topics = Split ("Im not killing anything for you;Ok, whats the catch?;I dont have any money to give you;")
                            show menu ("Talk to Skelly about...", topics, true) {
                              switch (result) {
                                case (I dont have any money to give you) {
                                  msg ("No, No, No. Money is of no use to me. I need something much more valuable. I request a jar of Salt, maddam.")
                                }
                                case (Ok, whats the catch?) {
                                  msg ("nothing major. I just need you to get me a tiny jar of salt. Then I'll give you the key for the door")
                                }
                                case (Im not killing anything for you) {
                                  msg ("I would never ask such a thing? I just need a jar of salt. It moisturizes my skin. Oh how i miss being healthy")
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    case (What? Is that seriously your name?) {
                      msg ("Why yes, what is wrong with it?")
                      topics = Split ("What? Is that seriously your name?")
                      show menu ("Talk to Skelly about...", topics, true) {
                        switch (result) {
                          case (What? Is that seriously your name?) {
                            msg ("Why yes, what is wrong with it?")
                            msg ("My name is Skelly Saltbones")
                            topics = Split ("What? Is that seriously your name?;Who is the Queen;How do I defeat the troll", ";")
                          }
                          case (Oh...no.nothing its a lovely name) {
                            msg ("Why yes, yes I know it is")
                          }
                        }
                      }
                    }
                    case (Such a nice name salt-bones) {
                      msg ("Why thank you. I picked it myself.")
                    }
                  }
                }
              }
            }
          }
        </speak>
        <object name="Keycard">
          <inherit name="editor_object" />
          <take />
          <feature_usegive />
          <use />
          <look>It has a picture of a lightning bolt on it</look>
          <selfuseon type="scriptdictionary">
            <item key="Power Room Key Reader">
              msg ("You swipe the keycard on power door key reader and its light turns green")
              SetObjectFlagOn (power door key reader, "cardSwiped")
              if (GetBoolean(power door key reader, "cardSwiped")) {
                msg ("Power room door unlocked")
                UnlockExit (power room door)
              }
            </item>
          </selfuseon>
        </object>
      </object>
    </object>
    <object name="sink">
      <inherit name="editor_object" />
      <inherit name="switchable" />
      <feature_switchable />
      <switchonmsg>The water doesn't look to clean, I am not going to touch it.</switchonmsg>
      <switchoffmsg>Now its off.</switchoffmsg>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Switch on</value>
        <value>Switch off</value>
      </displayverbs>
      <look>Its a dirty looking sink.</look>
    </object>
  </object>
  <object name="power room">
    <inherit name="editor_room" />
    <exitslistprefix>You can go to</exitslistprefix>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>You are in the</prefix>
    <object name="generator">
      <inherit name="editor_object" />
      <inherit name="switchable" />
      <inherit name="container_open" />
      <attr name="feature_usegive" type="boolean">false</attr>
      <attr name="feature_switchable" type="boolean">false</attr>
      <switchedon />
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Switch on</value>
        <value>Switch off</value>
      </displayverbs>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Use</value>
      </inventoryverbs>
      <drop type="boolean">false</drop>
      <feature_container />
      <look>Its an odd broken generator, there appears to be something inside of it.</look>
      <close type="boolean">false</close>
      <open type="boolean">false</open>
      <hidechildren />
      <listchildren />
      <listchildrenprefix>There is </listchildrenprefix>
      <onswitchoff type="script">
        msg ("The power is shut off. All the lights go out. It is very dark.")
      </onswitchoff>
      <smashwithsledgehammer type="script">
        if (Got(Sledgehammer)) {
          msg ("You smash the button with the sledgehammer. GOOD JOB! you successfully broke the machine. You have no way of getting out now. You're screwed.")
          MakeObjectInvisible (BIG RED BUTTON)
        }
        else {
          if (not Got(Sledgehammer)) {
          }
        }
      </smashwithsledgehammer>
      <object name="banana 3">
        <inherit name="editor_object" />
        <look>Its a banana, maybe a shouldn't eat that.</look>
        <alias>banana</alias>
      </object>
    </object>
    <object name="control panel">
      <inherit name="editor_object" />
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Use</value>
      </inventoryverbs>
    </object>
    <exit name="back to hall" alias="east" to="hall">
      <inherit name="eastdirection" />
    </exit>
    <object name="Bronze Card">
      <inherit name="editor_object" />
      <feature_usegive />
      <use />
      <take />
      <look>It is a shiny, plastic, bronze coloured card, with a black strip at the the bottom</look>
      <selfuseon type="scriptdictionary">
        <item key="Bronze Card Reader">
          msg ("You swipe the bronze card on the bronze card reader and its light turns green")
          SetObjectFlagOn (Bronze Card Reader, "cardSwiped")
          if (GetBoolean(Bronze Card Reader, "cardSwiped")) {
            if (GetBoolean(Gold Card Reader, "cardSwiped")) {
              if (GetBoolean(Silver Card Reader, "cardSwiped")) {
                msg ("Both card reader lights are now on, and the door slowly rises")
                UnlockExit (end game door)
              }
            }
          }
        </item>
      </selfuseon>
    </object>
  </object>
  <object name="security room">
    <inherit name="editor_room" />
    <description>The Security room, it looks like there is a exit to the outside.</description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>You are in the</prefix>
    <exit alias="hall" to="hall">
      <inherit name="northdirection" />
    </exit>
    <object name="TV">
      <inherit name="editor_object" />
      <inherit name="switchable" />
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Switch on</value>
        <value>Switch off</value>
      </displayverbs>
      <feature_switchable />
      <switchedon type="boolean">false</switchedon>
      <switchonmsg>Comes on with something thats not going to be mentioned.</switchonmsg>
      <switchoffmsg>Its off, Fantastic.</switchoffmsg>
      <look>Its a fairly common TV</look>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Use</value>
      </inventoryverbs>
      <onswitchon type="script">
        msg ("Its all grainy. There appears to be no reception down here.")
      </onswitchon>
      <onswitchoff type="script">
        msg ("Its just a black screen")
      </onswitchoff>
    </object>
    <object name="end game exit">
      <inherit name="editor_object" />
      <inherit name="surface" />
      <drop type="boolean">false</drop>
      <feature_container />
      <hidechildren />
      <listchildren />
      <listchildrenprefix>It has on it</listchildrenprefix>
      <look>It requires 3 key cards to unlock</look>
      <object name="Gold Card Reader">
        <inherit name="editor_object" />
        <cardSwiped type="boolean">false</cardSwiped>
        <feature_usegive />
        <look>It appears to be made of metal. It is coloured gold. It has a red and green light</look>
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Use</value>
        </inventoryverbs>
        <drop type="boolean">false</drop>
      </object>
      <object name="Silver Card Reader">
        <inherit name="editor_object" />
        <feature_usegive />
        <cardSwiped type="boolean">false</cardSwiped>
        <look>It appears to be made of metal. It is coloured silver. It has a red and green light, the red light is illuminated.</look>
        <drop type="boolean">false</drop>
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Use</value>
        </inventoryverbs>
      </object>
      <object name="Bronze Card Reader">
        <inherit name="editor_object" />
        <feature_usegive />
        <cardSwiped type="boolean">false</cardSwiped>
        <look>It appears to be made of metal. It is coloured bronze. It has a red and green light, the red light is illuminated.</look>
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Use</value>
        </inventoryverbs>
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <drop type="boolean">false</drop>
      </object>
    </object>
    <exit name="end game door" alias="end game" to="End Game">
      <inherit name="eastdirection" />
      <locked />
    </exit>
    <object name="security sign">
      <inherit name="editor_object" />
      <alias>sign</alias>
      <look>To open the exit door, employees must have all keycards. Keycards are located in the Power room, Office, and Experimentation room. </look>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist" />
    </object>
  </object>
  <object name="Storage">
    <inherit name="editor_room" />
    <description>I am sure there is some intresting things stored in here.</description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>You are in the</prefix>
    <enter type="script">
    </enter>
    <onexit type="script">
    </onexit>
    <object name="Door to Experimentation Room">
      <inherit name="editor_object" />
      <inherit name="switchable" />
      <inherit name="surface" />
      <scenery type="boolean">false</scenery>
      <attr name="feature_usegive" type="boolean">false</attr>
      <look>It is a Big Metal Door. You notice there are scratch marks in the middle of the door, I wonder whats in there.</look>
      <feature_switchable />
      <feature_container />
      <open type="boolean">false</open>
      <close type="boolean">false</close>
      <hidechildren />
      <listchildren />
      <listchildrenprefix>It has on it</listchildrenprefix>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <drop type="boolean">false</drop>
      <onswitchon type="script">
        if (White Card Reader.flag = true) {
          if (Blue Card Reader.flag = true) {
            msg ("The door slowly rises.")
            UnlockExit (Experimentation Room Exit)
          }
        }
        else {
          msg ("You swipe the card, and a light on the machine turns green.")
          White card Reader.flag = true
        }
      </onswitchon>
      <useon type="scriptdictionary" />
      <object name="White Card Reader">
        <inherit name="editor_object" />
        <attr name="feature_container" type="boolean">false</attr>
        <feature_usegive />
        <cardSwiped type="boolean">false</cardSwiped>
        <look>It appears to be made of metal. It is coloured white. It has a red and green light</look>
      </object>
      <object name="Blue Card Reader">
        <inherit name="editor_object" />
        <feature_usegive />
        <cardSwiped type="boolean">false</cardSwiped>
        <drop type="boolean">false</drop>
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Use</value>
        </inventoryverbs>
        <look>It appears to be made of metal. It is coloured blue. It has a red and green light</look>
      </object>
    </object>
    <exit alias="secretary room" to="Secretary Room">
      <inherit name="westdirection" />
    </exit>
    <object name="Crate">
      <inherit name="editor_object" />
      <inherit name="container_closed" />
      <look>It is a wooden box</look>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
      <take type="boolean">false</take>
      <drop type="boolean">false</drop>
      <feature_container />
      <feature_usegive />
      <listchildren />
      <hidechildren />
      <listchildrenprefix>Contains</listchildrenprefix>
      <onopen type="script">
        msg ("It is full of Titanium and Terbium. Materials used by Janmount to build spacecraft and weaponized lasers")
        msg ("You dig through the rocks to find that the Crate ")
      </onopen>
      <object name="White Card">
        <inherit name="editor_object" />
        <take />
        <feature_usegive />
        <alias>White Card</alias>
        <look>It is made of plastic. It has a black strip at the bottom.</look>
        <listalias>White Card</listalias>
        <use />
        <ontake type="script">
        </ontake>
        <selfuseon type="scriptdictionary">
          <item key="White Card Reader">
            msg ("You swipe the blue card the on white card reader and its light turns green")
            SetObjectFlagOn (White Card Reader, "cardSwiped")
            if (GetBoolean(White Card Reader, "cardSwiped")) {
              if (GetBoolean(Blue Card Reader, "cardSwiped")) {
                msg ("Both card reader lights are now on, and the door slowly rises")
                UnlockExit (Experimentation Room Exit)
              }
            }
          </item>
        </selfuseon>
      </object>
    </object>
    <object name="Jar">
      <inherit name="editor_object" />
      <inherit name="container_closed" />
      <look>It is filled with green, gooey liquid. It looks like there is something blue inside.</look>
      <feature_container />
      <isopen type="boolean">false</isopen>
      <hidechildren />
      <listchildren />
      <listchildrenprefix>It contains</listchildrenprefix>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
      <inventoryverbs type="stringlist" />
      <drop type="boolean">false</drop>
      <onopen type="script">
        msg ("Ergh. The smell....")
      </onopen>
      <onclose type="script">
        msg ("The smell still stains the room.")
      </onclose>
      <object name="Blue Card">
        <inherit name="editor_object" />
        <take />
        <feature_usegive />
        <use />
        <look>It is a plastic, blue card, with a black strip at the the bottom</look>
        <ontake type="script">
        </ontake>
        <selfuseon type="scriptdictionary">
          <item key="Blue Card Reader">
            msg ("You swipe the blue card on the blue card reader  and its light turns green")
            SetObjectFlagOn (Blue Card Reader, "cardSwiped")
            if (GetBoolean(Blue Card Reader, "cardSwiped")) {
              if (GetBoolean(White Card Reader, "cardSwiped")) {
                msg ("Both card reader lights are now on, and the door slowly rises")
                UnlockExit (Experimentation Room Exit)
              }
            }
          </item>
        </selfuseon>
      </object>
    </object>
    <exit name="Experimentation Room Exit" alias=" experimentation room" to="Experimentation Room">
      <inherit name="northdirection" />
      <locked />
      <lockmessage>This door requires TWO CARDS to enter</lockmessage>
      <scenery type="boolean">false</scenery>
      <visible />
    </exit>
    <object name="Footlocker">
      <inherit name="editor_object" />
      <inherit name="container_open" />
      <look>It a footlocker, I should kick it open.</look>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
      <inventoryverbs type="stringlist" />
      <feature_container />
      <isopen type="boolean">false</isopen>
      <hidechildren type="boolean">false</hidechildren>
      <listchildren />
      <listchildrenprefix>It contains</listchildrenprefix>
      <openmsg>You kick it open</openmsg>
      <object name="Banana 4">
        <inherit name="editor_object" />
        <inherit name="edible" />
        <alias>Banana</alias>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Eat</value>
        </displayverbs>
        <inventoryverbs type="stringlist">
          <value>Eat</value>
        </inventoryverbs>
        <feature_edible />
        <eatmsg>That banana was fantastic. </eatmsg>
        <take />
      </object>
    </object>
  </object>
  <object name="Experimentation Room">
    <inherit name="editor_room" />
    <description>Well this rooms great!!</description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>You are in the</prefix>
    <enter type="script">
      DisableTimer (Timer1)
      msg ("The walls seemed to have returned to normal")
    </enter>
    <onexit type="script">
      DisableTimer (Timer1)
    </onexit>
    <firstenter type="script">
      SetTimeout (10) {
        EnableTimer (Timer1)
        msg ("WARNING !! The walls will close in " + player.countdown + "seconds")
      }
    </firstenter>
    <beforefirstenter type="script">
      msg ("As you walk into the Experimentation Room, you notice the left and right walls are covered in spikes and there is a BIG RED BUTTON in the centre of the room. A deep voice coming from a speaker startles you. ")
      PrintCentered ("ATTENTION TRESSPASSER YOU HAVE 60 SECONDS TO SAVE YOURSELF, OTHERWISE YOU WILL NEVER LEAVE THIS ROOM.")
    </beforefirstenter>
    <beforeenter type="script">
      DisableTimer (Timer1)
    </beforeenter>
    <exit name="Back to the Storage Room" alias="storage room" to="Storage">
      <inherit name="southdirection" />
      <scenery type="boolean">false</scenery>
      <visible />
      <locked />
    </exit>
    <object name="timer">
      <inherit name="editor_object" />
      <visible type="boolean">false</visible>
      <scenery />
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Use</value>
      </inventoryverbs>
    </object>
    <object name="Storage Door">
      <inherit name="editor_object" />
      <feature_usegive />
      <drop type="boolean">false</drop>
      <visible type="boolean">false</visible>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Use</value>
      </inventoryverbs>
      <use type="script">
      </use>
    </object>
    <object name="BIG RED BUTTON">
      <inherit name="editor_object" />
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <look>It is a big red button atop a skinny box. A gold keycard is sitting next to the button</look>
      <feature_usegive />
      <use />
      <usebutton type="script">
        rainbowRiddle
      </usebutton>
      <smashwithsledgehammer type="script">
        if (Got(Sledgehammer)) {
          msg ("You smash the button with the sledgehammer. GOOD JOB! you successfully broke the machine. You have no way of getting out now. You're screwed.")
          MakeObjectInvisible (BIG RED BUTTON)
        }
        else {
          if (not Got(Sledgehammer)) {
          }
        }
      </smashwithsledgehammer>
    </object>
    <exit name="exit to centre" alias="one way exit to centre" to="centre">
      <inherit name="westdirection" />
      <locked />
    </exit>
    <object name="Gold Card">
      <inherit name="editor_object" />
      <feature_usegive />
      <use />
      <take />
      <look>It is a shiny, plastic, gold card, it looks swipeable.</look>
      <selfuseon type="scriptdictionary">
        <item key="Gold Card Reader">
          msg ("You swipe the gold card on the gold card reader and its light turns green")
          SetObjectFlagOn (Gold Card Reader, "cardSwiped")
          if (GetBoolean(Gold Card Reader, "cardSwiped")) {
            if (GetBoolean(Bronze Card Reader, "cardSwiped")) {
              if (GetBoolean(Silver Card Reader, "cardSwiped")) {
                msg ("Both card reader lights are now on, and the door slowly rises")
                UnlockExit (end game door)
              }
            }
          }
        </item>
      </selfuseon>
    </object>
  </object>
  <object name="Secretary Room">
    <inherit name="editor_room" />
    <description>I'm sure there is some information in here, I wonder if I'll look for it or be a lazy ass.</description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>You are in the</prefix>
    <exit name="office exit" alias="office" to="Office">
      <inherit name="southdirection" />
      <locked />
      <scenery type="boolean">false</scenery>
      <lockmessage>This door requires a security code to enter</lockmessage>
    </exit>
    <object name="OfficeDoor">
      <inherit name="editor_object" />
      <inherit name="surface" />
      <alias>Office Door</alias>
      <feature_usegive />
      <look>It is a metal door. There is a keypad next to it. Why would they need a metal door? What are they hiding....</look>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Use</value>
      </inventoryverbs>
      <drop type="boolean">false</drop>
      <feature_container />
      <close type="boolean">false</close>
      <open type="boolean">false</open>
      <hidechildren />
      <listchildren />
      <listchildrenprefix>There is a </listchildrenprefix>
      <useanything type="script">
      </useanything>
      <object name="Office Door Keypad">
        <inherit name="editor_object" />
        <inherit name="switchable" />
        <feature_usegive />
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Use</value>
        </inventoryverbs>
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <look>It is a square box with numbers on it. It is attached to the wall next to the Office Door</look>
        <feature_switchable />
        <switchedon />
        <usekeypad type="script">
          Office Keypad
        </usekeypad>
        <use type="script"><![CDATA[
          if (not HasAttribute(game, "OfficeKeypadused")) {
            game.OfficeKeypadused = 0
          }
          PrintCentered ("PLEASE ENTER SECURITY CODE")
          get input {
            if (result="4863") {
              UnlockExit (office exit)
              PrintCentered ("PASSWORD ACCEPTED, ACCESS GRANTED,")
              PrintCentered ("OFFICE DOOR UNLOCKED")
            }
            else {
              game.OfficeKeypadused = gameOfficeKeypadused+1
              if (3>game.keypadused) {
                PrintCentered ("ACCESS DENIED")
                PrintCentered ("You notice a strange sound, like a machine being powered on.")
              }
              Ask ("Try Again?") {
                if (result) {
                  PrintCentered ("PLEASE ENTER SECURITY CODE")
                  get input {
                    if (result="4863") {
                      UnlockExit (office exit)
                      PrintCentered ("PASSWORD ACCEPTED, ACCESS GRANTED,")
                      PrintCentered ("OFFICE DOOR UNLOCKED")
                    }
                    else {
                      game.OfficeKeypadused = gameOfficeKeypadused+2
                      PrintCentered ("ACCESS DENIED. SECURITY NOTIFIED")
                      PrintCentered ("You notice the wall above the door opens and a machine gun emerges. It is pointed at you.")
                      Ask ("Try Again?") {
                        if (result) {
                          PrintCentered ("PLEASE ENTER SECURITY CODE")
                          get input {
                            if (result="4863") {
                              UnlockExit (office exit)
                              PrintCentered ("PASSWORD ACCEPTED, ACCESS GRANTED,")
                              PrintCentered ("OFFICE DOOR UNLOCKED")
                            }
                            else {
                              game.OfficeKeypadused = game.OfficeKeypadused+3
                              PrintCentered ("ACCESS DENIED. BEEEEEEEEP. ACCESS DENIED. BEEEEEEEEP. ACCESS DENIED. BEEEEEEEEP. ACCESS DENIED. BEEEEEEEEP")
                              PrintCentered ("An alarm sounds. The machine gun starts up. There is no way you can escape in time.")
                              PrintCentered ("YOU ARE NOW DEAD")
                              finish
                            }
                          }
                        }
                        else {
                          msg ("You step away from the keypad")
                        }
                      }
                    }
                  }
                }
                else {
                  msg ("You step away from the keypad")
                }
              }
            }
          }
        ]]></use>
        <onswitchoff type="script">
          msg ("You step away from the keypad")
        </onswitchoff>
        <useon type="scriptdictionary">
          <item key="Sledgehammer">
            if (Got(Sledgehammer)) {
              if (not ListContains(Office Door Keypad.displayverbs,"Smash With Sledgehammer")) {
                list add (Office Door Keypad.displayverbs, "Smash With Sledgehammer")
              }
              Ask ("Do you really think that is wise?") {
                if (result) {
                  msg ("You smash the keypad hard with the sledgehammer. It no longer works.")
                  MakeObjectInvisible (Office Door Keypad)
                }
                else {
                  msg ("You come to your senses and realise that would've been a terrible idea.")
                }
              }
            }
            else {
              if (not Got(Sledgehammer)) {
                if (ListContains(Office Door Keypad.displayverbs,"Smash With Sledgehammer")) {
                  list remove (Office Door Keypad.displayverbs, "Smash With Sledgehammer")
                }
              }
            }
          </item>
        </useon>
      </object>
    </object>
    <exit alias="storage room" to="Storage">
      <inherit name="eastdirection" />
    </exit>
    <object name="Painting">
      <inherit name="editor_object" />
      <feature_usegive />
      <visible />
      <scenery type="boolean">false</scenery>
      <useindividualverblist type="boolean">false</useindividualverblist>
      <usestandardverblist type="boolean">false</usestandardverblist>
      <look type="script">
        if (Got(Convex Lens)) {
          msg ("You look closely there are a line of numbers '4863'")
        }
        else {
          msg ("A pretty picture of a mountainous landscape")
        }
      </look>
      <useon type="scriptdictionary">
        <item key="Convex Lens">
          if (Got(Convex Lens)) {
            msg ("You look closely there are a line of numbers 4863 and a word EVIL")
          }
          else {
            msg ("A pretty picture of a mountainous landscape")
          }
        </item>
      </useon>
    </object>
    <object name="Small Desk">
      <inherit name="editor_object" />
      <inherit name="container_open" />
      <feature_usegive />
      <use type="boolean">false</use>
      <feature_container />
      <listchildren />
      <isopen />
      <close type="boolean">false</close>
      <open type="boolean">false</open>
      <hidechildren />
      <drop type="boolean">false</drop>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <look type="script">
        msg ("A small 3 drawer desk made of oak. It has a PC and various writing materials and paper on it.")
      </look>
      <useon type="scriptdictionary" />
      <object name="Drawer 1">
        <inherit name="editor_object" />
        <inherit name="container_closed" />
        <inherit name="container_lockable" />
        <look>It appears to be jammed</look>
        <attr name="feature_usegive" type="boolean">false</attr>
        <attr name="feature_container" type="boolean">false</attr>
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <inventoryverbs type="stringlist">
          <value>Look at</value>
        </inventoryverbs>
        <drop type="boolean">false</drop>
      </object>
      <object name="Drawer 2">
        <inherit name="editor_object" />
        <inherit name="container_closed" />
        <feature_usegive />
        <feature_container />
        <take type="boolean">false</take>
        <hidechildren />
        <listchildren />
        <listchildrenprefix>It contains</listchildrenprefix>
        <look>It is made of oak. There is a small scratch next to the handle.</look>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Open</value>
          <value>Close</value>
        </displayverbs>
        <inventoryverbs type="stringlist">
          <value>Look at</value>
        </inventoryverbs>
        <onopen type="script">
        </onopen>
        <object name="Convex Lens">
          <inherit name="editor_object" />
          <take />
          <feature_usegive />
          <alias>Convex Lens</alias>
          <listalias>Convex Lens</listalias>
          <lookthrough>Everything appears to be magnified</lookthrough>
          <look>It is a clear, transparent circle. Things look magnified in it.</look>
          <displayverbs type="stringlist">
            <value>Look at</value>
            <value>Take</value>
          </displayverbs>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Use</value>
          </inventoryverbs>
          <use type="boolean">false</use>
          <useindividualverblist type="boolean">false</useindividualverblist>
          <usestandardverblist type="boolean">false</usestandardverblist>
          <ontake type="script">
            if (not ListContains(Photo.displayverbs,"Look Through")) {
              list add (Photo.displayverbs, "Look Through")
            }
          </ontake>
          <ondrop type="script">
            if (ListContains(Photo.displayverbs,"Look Through")) {
              list remove (Photo.displayverbs, "Look Through")
            }
          </ondrop>
        </object>
        <object name="Photo">
          <inherit name="editor_object" />
          <displayverbs type="stringlist">
            <value>Look at</value>
          </displayverbs>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
          </inventoryverbs>
          <look>It is a picture of a little girl playing on a swing in a park (shakes head).</look>
          <feature_usegive />
          <useon type="scriptdictionary">
            <item key="Convex Lens">
              if (not ListContains(Photo.displayverbs,"Look Through")) {
                list add (Photo.displayverbs, "Look Through")
              }
            </item>
          </useon>
        </object>
      </object>
      <object name="Drawer 3">
        <inherit name="editor_object" />
        <inherit name="container_open" />
        <feature_usegive />
        <feature_container />
        <look>It is made of oak. It appears to be in good condition</look>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Open </value>
          <value>Close</value>
        </displayverbs>
        <inventoryverbs type="stringlist">
          <value>Look at</value>
        </inventoryverbs>
        <isopen />
        <hidechildren />
        <listchildren />
        <listchildrenprefix>it contains</listchildrenprefix>
        <useon type="scriptdictionary" />
        <object name="Memo">
          <inherit name="editor_object" />
          <look>A tattered piece of a paper with words scribbled on it</look>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
          </inventoryverbs>
          <take />
          <read>Only one who can see will notice the painting picture.</read>
          <ontake type="script">
          </ontake>
        </object>
      </object>
    </object>
    <object name="PC">
      <inherit name="editor_object" />
      <inherit name="switchable" />
      <look>It is a fairly new looking computer. Its has a black screen. It appears to be turned off</look>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Switch On</value>
      </displayverbs>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Switch On</value>
      </inventoryverbs>
      <attr name="feature_usegive" type="boolean">false</attr>
      <feature_switchable />
      <accessGranted type="boolean">false</accessGranted>
      <PCon type="boolean">false</PCon>
      <use type="script">
        PrintCentered ("ENTER PASSWORD")
        get input {
          if (result="EVIL") {
            UnlockExit
          }
        }
      </use>
      <onswitchon type="script">
        PC Password
      </onswitchon>
    </object>
    <object name="Picture">
      <inherit name="editor_object" />
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <drop />
      <take />
      <feature_usegive />
      <look type="script">
        if (Got(Convex Lens)) {
          msg ("Everything is alot clearer. You notice the numberplate reads '5972'")
        }
        else {
          msg ("It is a picture of an old car")
        }
      </look>
      <useon type="scriptdictionary">
        <item key="Convex Lens">
          if (Got(Convex Lens)) {
            msg ("Everything is alot clearer. You notice the numberplate reads '5972'")
          }
          else {
            msg ("It is a picture of an old car")
          }
        </item>
      </useon>
    </object>
    <object name="Bookcase">
      <inherit name="editor_object" />
      <inherit name="surface" />
      <drop type="boolean">false</drop>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <feature_usegive />
      <feature_container />
      <hidechildren />
      <listchildren />
      <listchildrenprefix>It contains a lonely</listchildrenprefix>
      <look type="script">
        if (Got(Convex Lens)) {
          msg ("You notice there are alot of scratches on one particular shelf. It appears to read 'EVIL'")
        }
        else {
          msg ("It is made of oak. It is a deep brown colour.")
        }
      </look>
      <useon type="scriptdictionary">
        <item key="Convex Lens">
          if (Got(Convex Lens)) {
            msg ("You notice there are alot of scratches on one particular shelf. It appears to read 'EVIL'")
          }
          else {
            msg ("It is made of oak. It is a deep brown colour.")
          }
        </item>
      </useon>
      <object name="Book">
        <inherit name="editor_object" />
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <inventoryverbs type="stringlist">
          <value>Look at</value>
        </inventoryverbs>
        <drop />
        <take />
        <look type="script">
          if (Got(Convex Lens)) {
            msg ("You look closely at the spine. The words are scratched off except for 'POWER'")
          }
          else {
            msg ("it is an weathered brown book, with blooding writing.")
          }
        </look>
      </object>
    </object>
    <exit alias="cafe" to="cafe">
      <inherit name="westdirection" />
    </exit>
    <object name="Chair">
      <inherit name="editor_object" />
      <alias>Chair</alias>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <drop type="boolean">false</drop>
      <sit>Ooooo Comfy</sit>
      <look>It is a fabric chair. Seems comfy.</look>
    </object>
  </object>
  <object name="Office">
    <inherit name="editor_room" />
    <description>The main office of this place, I should look around.</description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>You are in the</prefix>
    <exit alias="secretary room" to="Secretary Room">
      <inherit name="northdirection" />
      <scenery type="boolean">false</scenery>
    </exit>
    <object name="Safe">
      <inherit name="editor_object" />
      <inherit name="container_closed" />
      <inherit name="container_lockable" />
      <drop type="boolean">false</drop>
      <feature_container />
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <feature_usegive />
      <hidechildren />
      <listchildren />
      <listchildrenprefix>it contains</listchildrenprefix>
      <look>It is a large metal box. it does not have any sort of handle so there does not appear to be any way of opening it.</look>
      <autoopen type="boolean">false</autoopen>
      <key type="object">Computer</key>
      <openscript type="script">
        msg ("There is nowhere to open")
      </openscript>
      <object name="Silver Card">
        <inherit name="editor_object" />
        <feature_usegive />
        <use />
        <take />
        <look>It is a shiny, plastic, silver card, with a black strip at the the bottom</look>
        <selfuseon type="scriptdictionary">
          <item key="Silver Card Reader">
            msg ("You swipe the silver card on the silver card reader and its light turns green")
            SetObjectFlagOn (Silver Card Reader, "cardSwiped")
            if (GetBoolean(Silver Card Reader, "cardSwiped")) {
              if (GetBoolean(Bronze Card Reader, "cardSwiped")) {
                if (GetBoolean(Gold Card Reader, "cardSwiped")) {
                  msg ("Both card reader lights are now on, and the door slowly rises")
                  UnlockExit (end game door)
                }
              }
            }
          </item>
        </selfuseon>
      </object>
    </object>
    <object name="Large Desk">
      <inherit name="editor_object" />
      <look>A modern looking desk. It appears to be made of alluminium</look>
    </object>
    <object name="Lyra Stone">
      <inherit name="editor_object" />
      <inherit name="female" />
      <look>She appears to be in a heavy sleep on a chair. Better be quick in here.</look>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <drop type="boolean">false</drop>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <speak type="script">
        topics = Split ("Who are you;Who is the Queen;How do I defeat the troll", ";")
        show menu ("Talk to Lyra about...", topics, true) {
          switch (result) {
            case ("Who are you") {
              msg ("My name is Lyra Stone, I am your mother")
              msg ("What!? I don't believe you")
            }
            case ("Who is the Queen") {
              msg ("'Just some girl.'")
            }
            case ("How do I defeat the troll") {
              msg ("'Use fire to stop it regenerating.'")
            }
          }
        }
      </speak>
    </object>
    <object name="Computer">
      <inherit name="editor_object" />
      <inherit name="switchable" />
      <feature_switchable />
      <feature_usegive />
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Switch on</value>
        <value>Switch off</value>
        <value>Use</value>
      </displayverbs>
      <accessGranted type="boolean">false</accessGranted>
      <computerOn type="boolean">false</computerOn>
      <look>It a modern looking computer</look>
      <drop type="boolean">false</drop>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Use</value>
      </inventoryverbs>
      <onswitchon type="script">
        Computer Password
      </onswitchon>
      <use type="script">
        if (not GetBoolean(Computer, "computerOn")) {
          msg ("The computer is switched off. Turn it on if you want to access it.")
        }
        else {
          if (GetBoolean(Computer, "accessGranted")) {
            computerList = NewStringList()
            list add (computerList, "Unlock the safe")
            ShowMenu ("Please select an option", computerList, true) {
              switch (result) {
                case ("Unlock the safe") {
                  PrintCentered ("The safe is now unlocked")
                }
              }
            }
          }
          else {
            msg ("It requires a password")
          }
        }
      </use>
    </object>
    <object name="Microphone">
      <inherit name="editor_object" />
      <look>An old looking microphone. It has a push button, I guess to enable it. </look>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <usemicrophone>THERE'S NO TIME FOR THAT!</usemicrophone>
    </object>
    <object name="Leather Chair">
      <inherit name="editor_object" />
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <look>Lyra Stone is sleeping on it.</look>
    </object>
  </object>
  <verb>
    <property>lookthrough</property>
    <pattern>look through</pattern>
    <defaultexpression>"You can't look through " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>usekeypad</property>
    <pattern>use keypad</pattern>
    <defaultexpression>"You can't use keypad " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>4863</property>
    <pattern>4863</pattern>
    <defaultexpression>"You can't 4863 " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>lookin</property>
    <pattern>look in</pattern>
    <defaultexpression>"You can't look in " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>digthrough</property>
    <pattern>dig through</pattern>
    <defaultexpression>"You can't dig through " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>usekeycode</property>
    <pattern>use key code</pattern>
    <defaultexpression>"You can't use key code " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>usekeyreader</property>
    <pattern>use key reader</pattern>
    <defaultexpression>"You can't use key reader " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>usebutton</property>
    <pattern>use button</pattern>
    <defaultexpression>"You can't use button " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>giveto</property>
    <pattern>give to</pattern>
    <defaultexpression>"You can't give to " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>usebluecardreader</property>
    <pattern>use blue card reader</pattern>
    <defaultexpression>"You can't use blue card reader " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>usemicrophone</property>
    <pattern>use microphone</pattern>
    <defaultexpression>"You can't use microphone " + object.article + "."</defaultexpression>
  </verb>
  <object name="End Game">
    <inherit name="editor_room" />
    <descprefix>YOU WIN!!!</descprefix>
    <enter type="script">
      PrintCentered ("YOU WIN!!!")
      finish
    </enter>
  </object>
  <verb>
    <property>smashwithsledgehammer</property>
    <pattern>smash with sledgehammer</pattern>
    <defaultexpression>"You can't smash with sledgehammer " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>opensafe</property>
    <pattern>open safe</pattern>
    <defaultexpression>"You can't open safe " + object.article + "."</defaultexpression>
  </verb>
  <object name="courtyard">
    <inherit name="editor_room" />
    <descprefix type="string"></descprefix>
    <description>You stand before a small powerplant, it looks empty and unoccupied. "I should check it out, maybe I can find some dirt". </description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>You are in a </prefix>
    <object name="player">
      <inherit name="editor_object" />
      <inherit name="namedfemale" />
      <countdown type="int">60</countdown>
      <object name="Sledgehammer">
        <inherit name="editor_object" />
        <feature_usegive />
        <use />
        <take />
        <ontake type="script">
        </ontake>
        <ondrop type="script">
        </ondrop>
        <selfuseon type="scriptdictionary">
          <item key="BIG RED BUTTON">
            msg ("You smash the button with the sledgehammer. GOOD JOB! you successfully broke the machine. You have no way of getting out now. You're screwed.")
            MakeObjectInvisible (BIG RED BUTTON)
          </item>
          <item key="Office Door Keypad">
            if (Got(Sledgehammer)) {
              if (not ListContains(Office Door Keypad.displayverbs,"Smash With Sledgehammer")) {
                list add (Office Door Keypad.displayverbs, "Smash With Sledgehammer")
              }
              Ask ("Do you really think that is wise?") {
                if (result) {
                  msg ("You smash the keypad hard with the sledgehammer. It no longer works.")
                  MakeObjectInvisible (Office Door Keypad)
                }
                else {
                  msg ("You come to your senses and realise that would've been a terrible idea.")
                }
              }
            }
            else {
              if (not Got(Sledgehammer)) {
                if (ListContains(Office Door Keypad.displayverbs,"Smash With Sledgehammer")) {
                  list remove (Office Door Keypad.displayverbs, "Smash With Sledgehammer")
                }
              }
            }
          </item>
        </selfuseon>
      </object>
    </object>
    <exit alias="centre" to="centre">
      <inherit name="southdirection" />
    </exit>
    <object name="courtyard sign">
      <inherit name="editor_object" />
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist" />
      <look>It says "Welcome to Janmount Powerplant".
                                                                        </look>
      <alias>sign</alias>
    </object>
  </object>
  <verb>
    <property>lookthroughconvexlens</property>
    <pattern>look through convex lens</pattern>
    <defaultexpression>"You can't look through convex lens " + object.article + "."</defaultexpression>
  </verb>
  <function name="rainbowRiddle">
    PrintCentered ("What is at the end of a RAINBOW?")
    PrintCentered ("PLEASE ENTER ANSWER")
    get input {
      if (IsRegexMatch  ("w", LCase (result))) {
        UnlockExit (Back to the Storage Room)
        UnlockExit (exit to centre)
        PrintCentered ("PASSWORD ACCEPTED, ACCESS GRANTED")
        PrintCentered ("STORAGE DOOR UNLOCKED,  CENTRE DOOR UNLOCKED")
      }
      else {
        PrintCentered ("BUZZ! WRONG!")
        Ask ("Try Again?") {
          if (result) {
            rainbowRiddle
          }
        }
      }
    }
  </function>
  <function name="Computer Password">
    Ask ("Input Password?") {
      if (result) {
        SetObjectFlagOn (Computer, "computerOn")
        PrintCentered ("ENTER PASSWORD")
        PrintCentered ("There appears to be a password hint \"An EVIL Anagram\"")
        get input {
          if (IsRegexMatch  ("live", LCase (result))) {
            PrintCentered ("ACCESS GRANTED.")
            SetObjectFlagOn (Computer, "accessGranted")
            if (GetBoolean(Computer, "accessGranted")) {
              computerList = NewStringList()
              list add (computerList, "Unlock the safe")
              ShowMenu ("Please select an option", computerList, true) {
                switch (result) {
                  case ("Unlock the safe") {
                    PrintCentered ("The safe popped open")
                    HelperOpenObject (Safe)
                  }
                }
              }
            }
            else {
              msg ("It requires a password")
            }
          }
          else {
            PrintCentered ("INCORRECT PASSWORD. TRY AGAIN.")
            Computer Password
          }
        }
      }
      else {
        SwitchOff (Computer)
        PrintCentered ("The computer shut down")
      }
    }
  </function>
  <function name="PC Password">
    Ask ("Input Password?") {
      if (result) {
        SetObjectFlagOn (PC, "PCon")
        PrintCentered ("ENTER PASSWORD")
        get input {
          if (IsRegexMatch  ("evil ", LCase (result))) {
            PrintCentered ("ACCESS GRANTED.")
            SetObjectFlagOn (Computer, "accessGranted")
            if (GetBoolean(Computer, "accessGranted")) {
              PCList = NewStringList()
              list add (PCList, "Search Database")
              ShowMenu ("Please select an option", PCList, true) {
                switch (result) {
                  case (Search Database) {
                    msg ("It contains lots of files")
                  }
                }
              }
            }
            else {
              msg ("It requires a password")
            }
          }
          else {
            PrintCentered ("INCORRECT PASSWORD. TRY AGAIN.")
            PC Password
          }
        }
      }
      else {
        SwitchOff (PC)
        PrintCentered ("The computer shut down")
      }
    }
  </function>
  <function name="Office Keypad">
    if (not HasAttribute(game, "OfficeKeypadused")) {
      game.OfficeKeypadused = 0
    }
    PrintCentered ("PLEASE ENTER SECURITY CODE")
    get input {
      if (result="4863") {
        UnlockExit (office exit)
        PrintCentered ("PASSWORD ACCEPTED, ACCESS GRANTED,")
        PrintCentered ("OFFICE DOOR UNLOCKED")
      }
      else {
        PrintCentered ("ACCESS DENIED")
        PrintCentered ("You notice a strange sound, like a machine being powered on.")
        Ask ("Try Again?") {
          if (result) {
            PrintCentered ("PLEASE ENTER SECURITY CODE")
            get input {
              if (result="4863") {
                UnlockExit (office exit)
                PrintCentered ("PASSWORD ACCEPTED, ACCESS GRANTED,")
                PrintCentered ("OFFICE DOOR UNLOCKED")
              }
              else {
                game.OfficeKeypadused = gameOfficeKeypadused+1
                PrintCentered ("ACCESS DENIED. SECURITY NOTIFIED")
                PrintCentered ("You notice the wall above the door opens and a machine gun emerges. It is pointed at you.")
                Ask ("Try Again?") {
                  if (result) {
                    PrintCentered ("PLEASE ENTER SECURITY CODE")
                    get input {
                      if (result="4863") {
                        UnlockExit (office exit)
                        PrintCentered ("PASSWORD ACCEPTED, ACCESS GRANTED,")
                        PrintCentered ("OFFICE DOOR UNLOCKED")
                      }
                      else {
                        game.OfficeKeypadused = game.OfficeKeypadused
                        PrintCentered ("ACCESS DENIED. BEEEEEEEEP. ACCESS DENIED. BEEEEEEEEP. ACCESS DENIED. BEEEEEEEEP. ACCESS DENIED. BEEEEEEEEP")
                        PrintCentered ("An alarm sounds. The machine gun starts up. There is no way you can escape in time.")
                        PrintCentered ("YOU ARE NOW DEAD")
                        finish
                      }
                    }
                  }
                  else {
                    msg ("You step away from the keypad")
                  }
                }
              }
            }
          }
          else {
            msg ("You step away from the keypad")
          }
        }
      }
    }
  </function>
  <timer name="Timer1">
    <interval>5</interval>
    <enabled type="boolean">false</enabled>
    <script>
      SetTimeout (5) {
        msg ("The wall spikes will close in " + player.countdown + "seconds")
        player.countdown = player.countdown - 5
        if (player.countdown=0) {
          msg ("You are now dead")
          DisableTimer (Timer1)
          finish
        }
      }
    </script>
  </timer>
</asl>