<!--Saved by Quest 5.4.4873.16527-->
<asl version="540">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <game name="Mystic Mages">
    <gameid>7b455ee2-72c1-42e0-a111-09eb20b79ca1</gameid>
    <version>1.0</version>
    <firstpublished>2013</firstpublished>
    <showhealth type="boolean">false</showhealth>
    <showscore type="boolean">false</showscore>
    <gridmap type="boolean">false</gridmap>
    <start type="script">
    </start>
    <onhealthzero type="script">
      finish
    </onhealthzero>
    <object name="monsters">
      <inherit name="editor_object" />
      <inherit name="maleplural" />
      <object name="zombie">
        <inherit name="editor_object" />
      </object>
      <object name="spider">
        <inherit name="editor_object" />
      </object>
      <object name="necromancer">
        <inherit name="editor_object" />
      </object>
      <object name="maruader">
        <inherit name="editor_object" />
      </object>
    </object>
  </game>
  <object name="living room">
    <alias>Cottage Home</alias>
    <object name="upstairs">
      <inherit name="editor_room" />
      <alias>stairs</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <object name="bedroom1">
        <inherit name="openable" />
        <alias>your bedroom</alias>
        <visible type="boolean">false</visible>
        <beforefirstenter type="script">
        </beforefirstenter>
        <beforeenter type="script">
        </beforeenter>
        <object name="bed1">
          <inherit name="editor_object" />
          <alias>bed</alias>
        </object>
        <object name="dresser1">
          <inherit name="editor_object" />
          <inherit name="container_open" />
          <alias>dresser</alias>
          <isopen type="boolean">false</isopen>
          <hidechildren type="boolean">false</hidechildren>
          <listchildren />
          <object name="gold_piece">
            <inherit name="editor_object" />
            <take />
            <attr name="value_worth" type="script">
              if (Got(gold_piece)) {
                player.gold = player.gold + 5
              }
              else if (not Got(gold_piece)) {
                player.gold = player.gold - 5
              }
            </attr>
            <use type="boolean">false</use>
            <ontake type="script">
              do (gold_piece, "value_worth")
            </ontake>
            <ondrop type="script">
              player.gold = player.gold - 5
            </ondrop>
            <usemenuprompt type="string"></usemenuprompt>
            <giveto type="scriptdictionary">
              <item key="Jane">
              </item>
            </giveto>
            <alt type="stringlist">
              <value>gold</value>
              <value>money</value>
              <value>cash</value>
              <value>currency</value>
            </alt>
          </object>
        </object>
        <object name="closest">
          <inherit name="openable" />
          <dark />
        </object>
        <exit alias="hall" to="upstairs">
          <inherit name="southeastdirection" />
        </exit>
        <object name="player">
          <inherit name="editor_object" />
          <inherit name="editor_player" />
          <statusattributes type="stringdictionary">
            <item>
              <key>strength</key>
              <value></value>
            </item>
            <item>
              <key>dexterity</key>
              <value></value>
            </item>
            <item>
              <key>intelligence</key>
              <value></value>
            </item>
            <item>
              <key>level</key>
              <value></value>
            </item>
            <item>
              <key>class</key>
              <value></value>
            </item>
            <item>
              <key>experience</key>
              <value></value>
            </item>
            <item>
              <key>turns</key>
              <value></value>
            </item>
            <item>
              <key>health</key>
              <value></value>
            </item>
            <item>
              <key>gold</key>
              <value></value>
            </item>
          </statusattributes>
          <strength type="int">0</strength>
          <dexterity type="int">0</dexterity>
          <intelligence type="int">0</intelligence>
          <level type="int">0</level>
          <class>mage; archer; warrior;</class>
          <experience type="int">0</experience>
          <turns type="int">0</turns>
          <health type="int">0</health>
          <dead type="boolean">false</dead>
          <gold type="int">0</gold>
        </object>
      </object>
      <object name="bedroom2">
        <inherit name="openable" />
        <alias>brothers room</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <visible type="boolean">false</visible>
        <object name="bed">
          <inherit name="editor_object" />
        </object>
        <object name="end table">
          <inherit name="editor_object" />
        </object>
        <exit alias="hall" to="upstairs">
          <inherit name="southwestdirection" />
        </exit>
      </object>
      <exit alias="down" to="living room">
        <inherit name="downdirection" />
      </exit>
      <exit alias="your room" to="bedroom1">
        <inherit name="northwestdirection" />
        <locked type="boolean">false</locked>
      </exit>
      <exit alias="brothers room" to="bedroom2">
        <inherit name="northeastdirection" />
      </exit>
    </object>
    <object name="kitchen">
      <object name="den">
        <inherit name="editor_room" />
        <exit alias="up" to="kitchen">
          <inherit name="updirection" />
        </exit>
      </object>
      <exit alias="down" to="den">
        <inherit name="downdirection" />
      </exit>
      <exit alias="east" to="living room">
        <inherit name="eastdirection" />
      </exit>
    </object>
    <exit alias="out" to="front lawn">
      <inherit name="outdirection" />
    </exit>
    <exit alias="up" to="upstairs">
      <inherit name="updirection" />
    </exit>
    <exit alias="west" to="kitchen">
      <inherit name="westdirection" />
    </exit>
    <object name="chair">
      <inherit name="editor_object" />
      <sit type="script">
        msg ("No time to sit got to get busy!")
      </sit>
    </object>
    <object name="couch">
      <inherit name="editor_object" />
      <sit>No time to lounge got to get busy!</sit>
    </object>
  </object>
  <object name="restroom">
    <alias>outhouse</alias>
    <displayverbs type="stringlist">
      <value>Look at</value>
    </displayverbs>
    <inventoryverbs type="stringlist">
      <value>Look at</value>
    </inventoryverbs>
    <dark />
    <object name="sink">
      <inherit name="editor_object" />
    </object>
    <exit alias="southeast" to="front lawn">
      <inherit name="southeastdirection" />
    </exit>
  </object>
  <object name="front lawn">
    <inherit name="editor_room" />
    <exit alias="in" to="living room">
      <inherit name="indirection" />
    </exit>
    <exit alias="northwest" to="restroom">
      <inherit name="northwestdirection" />
    </exit>
    <exit alias="south" to="road">
      <inherit name="southdirection" />
    </exit>
    <object name="npc">
      <inherit name="editor_object" />
      <alias>oldman</alias>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <speak type="script">
        firsttime {
          questions1 = NewStringList()
          list add (questions1, "yes")
          list add (questions1, "no")
          ShowMenu ("Will you do me a favor?", questions1, false) {
            if (result="yes") {
              msg ("Oh thank you child, my bones can't carry me that far.")
              msg ("Here! Take this orb to Jane at the Village Inn.")
              MoveObject (orb, player)
              msg ("Return to me and I will give you the potion.")
              SetObjectFlagOn (Jane, "orbtask")
            }
            else if (result="no") {
              msg ("Maybe tommorow then.")
            }
            else if (Contains (Jane,orb)) {
              firsttime {
                msg ("Here child!")
                MoveObject (exp potion, player)
              }
              otherwise {
                msg ("You did good thank you again.")
              }
            }
          }
        }
        otherwise {
        }
      </speak>
      <giveto type="scriptdictionary">
        <item key="exp potion">
          if (GetBoolean(Jane, "orbtask")) {
            msg ("Once you have completed the task then you may have the potion.")
          }
          else if (not GetBoolean(Jane, "orbtask")) {
            msg ("Here you are.")
            MoveObject (exp potion, player)
          }
        </item>
      </giveto>
      <object name="orb">
        <inherit name="editor_object" />
        <take />
        <look>Its a shiny black orb..</look>
        <givesingle />
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
        </displayverbs>
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
        </inventoryverbs>
        <givemenuprompt>Jane</givemenuprompt>
        <giveto type="scriptdictionary">
          <item key="Jane">
            msg ("Here you go, an elderly man gave me this to give to you.")
            MoveObject (orb, Jane)
            if (Contains (Jane,orb)) {
              SetObjectFlagOff (Jane, "orbtask")
            }
            else {
              msg ("Thank you! she says!")
            }
          </item>
        </giveto>
      </object>
      <object name="exp potion">
        <inherit name="editor_object" />
        <take />
        <drink type="script">
          player.experience = player.experience + 15
        </drink>
      </object>
    </object>
  </object>
  <object name="humble way">
    <inherit name="editor_room" />
    <object name="village square">
      <object name="guild hall">
        <object name="achers guild">
          <object name="allen the archer">
            <inherit name="editor_object" />
            <inherit name="namedmale" />
          </object>
          <exit alias="southeast" to="guild hall">
            <inherit name="southeastdirection" />
          </exit>
        </object>
        <object name="mage guild">
          <object name="maggie the mage">
            <inherit name="editor_object" />
            <inherit name="namedfemale" />
          </object>
          <exit alias="southwest" to="guild hall">
            <inherit name="southwestdirection" />
          </exit>
        </object>
        <object name="warrior guild">
          <object name="larry the warrior">
            <inherit name="editor_object" />
            <inherit name="namedmale" />
          </object>
          <exit alias="northeast" to="guild hall">
            <inherit name="northeastdirection" />
          </exit>
        </object>
        <exit alias="down" to="village square">
          <inherit name="downdirection" />
        </exit>
        <exit alias="northwest" to="achers guild">
          <inherit name="northwestdirection" />
        </exit>
        <exit alias="northeast" to="mage guild">
          <inherit name="northeastdirection" />
        </exit>
        <exit alias="southwest" to="warrior guild">
          <inherit name="southwestdirection" />
        </exit>
      </object>
      <object name="general store">
        <object name="tom">
          <inherit name="editor_object" />
          <inherit name="namedmale" />
        </object>
        <object name="tent">
          <inherit name="editor_object" />
        </object>
        <object name="bedroll">
          <inherit name="editor_object" />
        </object>
        <object name="flask">
          <inherit name="editor_object" />
        </object>
        <object name="rations">
          <inherit name="editor_object" />
        </object>
        <exit alias="northwest" to="village square">
          <inherit name="northwestdirection" />
        </exit>
      </object>
      <object name="village square inn">
        <exit alias="southwest" to="village square">
          <inherit name="southwestdirection" />
        </exit>
        <object name="front desk">
          <inherit name="editor_object" />
          <inherit name="container_open" />
          <inventoryverbs type="stringlist">
            <value>Look at</value>
          </inventoryverbs>
          <displayverbs type="stringlist">
            <value>Look at</value>
          </displayverbs>
          <close type="boolean">false</close>
          <isopen />
          <open type="boolean">false</open>
          <onopen type="script">
            MakeObjectVisible (Jane)
          </onopen>
          <object name="Jane">
            <inherit name="editor_object" />
            <inherit name="namedfemale" />
            <inventoryverbs type="stringlist">
              <value>Look at</value>
            </inventoryverbs>
            <speak type="script">
              questions = NewStringList()
              list add (questions, "yes")
              list add (questions, "no")
              ShowMenu ("Would you like a room today only 5G?", questions, false) {
                msg ("-" + result)
                if (result="yes") {
                  if (Got(gold_piece)) {
                    MoveObject (gold_piece, Jane)
                    if (not Got(gold_piece)) {
                      player.gold = player.gold - 5
                      msg ("Enjoy your stay!")
                      MoveObject (key, player)
                      room_renting
                    }
                  }
                }
                else if (result="no") {
                  msg ("Ok thank you have a nice day.")
                }
              }
            </speak>
            <give type="scriptdictionary">
              <item key="orb">
                MoveObject (orb, Jane)
                if (GetBoolean(Jane, "orbtask")) {
                  SetObjectFlagOff (Jane, "orbtask")
                  msg ("Thank you very much.")
                }
              </item>
              <item key="gold_piece">
                MoveObject (key, player)
              </item>
            </give>
            <tell type="scriptdictionary" />
            <object name="key">
              <inherit name="editor_object" />
              <alt type="stringlist">
                <value>door</value>
              </alt>
              <inventoryverbs type="stringlist">
                <value>Look at</value>
              </inventoryverbs>
              <displayverbs type="stringlist">
                <value>Look at</value>
              </displayverbs>
              <look>It has a peep hole and the  #1 on the front of the door.</look>
              <selfuseon type="scriptdictionary">
                <item key="room1">
                  UnlockExit (room_key)
                </item>
              </selfuseon>
            </object>
          </object>
        </object>
        <object name="room1">
          <inherit name="container_open" />
          <inherit name="container_lockable" />
          <key type="object">key</key>
          <locked />
          <canlockopen type="boolean">false</canlockopen>
          <isopen type="boolean">false</isopen>
          <onunlock type="script">
          </onunlock>
          <goto type="script">
            if (room1.locked = false) {
              MoveObject (player, room1)
            }
            else if (room1.locked = true) {
              msg ("Door is locked you need a room key!")
            }
            else if (not Contains (player,key)) {
              msg ("You can't go in with out a key..")
            }
          </goto>
          <exit alias="southeast" to="village square inn">
            <inherit name="southeastdirection" />
          </exit>
          <object name="bed2">
            <inherit name="editor_object" />
            <alias>bed</alias>
            <attr name="lay_down" type="script">
              MoveObject (player, bed2)
              EnableTimer (sleep_timer)
            </attr>
          </object>
          <object name="night_stand">
            <inherit name="editor_object" />
          </object>
        </object>
        <object name="room2">
          <inherit name="container_open" />
          <inherit name="container_lockable" />
          <isopen type="boolean">false</isopen>
          <exit alias="south" to="village square inn">
            <inherit name="southdirection" />
          </exit>
        </object>
        <object name="room3">
          <inherit name="container_open" />
          <inherit name="container_lockable" />
          <isopen type="boolean">false</isopen>
          <exit alias="southwest" to="village square inn">
            <inherit name="southwestdirection" />
          </exit>
        </object>
        <object name="room4">
          <inherit name="container_open" />
          <inherit name="container_lockable" />
          <isopen type="boolean">false</isopen>
          <exit alias="west" to="village square inn">
            <inherit name="westdirection" />
          </exit>
        </object>
        <exit alias="out" to="village square">
          <inherit name="outdirection" />
        </exit>
      </object>
      <exit alias="out" to="humble way">
        <inherit name="outdirection" />
      </exit>
      <exit alias="up" to="guild hall">
        <inherit name="updirection" />
      </exit>
      <exit alias="in" to="village square inn">
        <inherit name="indirection" />
      </exit>
      <exit alias="southeast" to="general store">
        <inherit name="southeastdirection" />
      </exit>
      <exit alias="southwest" to="blacksmith">
        <inherit name="southwestdirection" />
      </exit>
    </object>
    <exit alias="north" to="light forest">
      <inherit name="northdirection" />
    </exit>
    <exit alias="in" to="village square">
      <inherit name="indirection" />
    </exit>
  </object>
  <object name="forest way">
    <inherit name="editor_room" />
    <object name="forest trail">
      <inherit name="editor_room" />
      <object name="light forest">
        <object name="thick forest">
          <object name="dark forest">
            <exit alias="northwest" to="woods2">
              <inherit name="northwestdirection" />
            </exit>
          </object>
          <exit alias="east" to="light forest">
            <inherit name="eastdirection" />
          </exit>
          <exit alias="northeast" to="woods2">
            <inherit name="northeastdirection" />
          </exit>
          <exit alias="southwest" to="trail1">
            <inherit name="southwestdirection" />
          </exit>
        </object>
        <exit alias="north" to="woods2">
          <inherit name="northdirection" />
        </exit>
        <exit alias="west" to="woods5">
          <inherit name="westdirection" />
        </exit>
        <exit alias="south" to="humble way">
          <inherit name="southdirection" />
        </exit>
      </object>
      <exit alias="southeast" to="woods1">
        <inherit name="southeastdirection" />
      </exit>
    </object>
    <object name="woods1">
      <inherit name="editor_room" />
      <exit alias="northeast" to="woods">
        <inherit name="northeastdirection" />
      </exit>
    </object>
    <object name="woods2">
      <inherit name="editor_room" />
      <exit alias="west" to="woods">
        <inherit name="westdirection" />
      </exit>
      <exit alias="southwest" to="thick forest">
        <inherit name="southwestdirection" />
      </exit>
      <exit alias="south" to="light forest">
        <inherit name="southdirection" />
      </exit>
    </object>
    <object name="woods">
      <inherit name="editor_room" />
      <exit alias="southwest" to="woods1">
        <inherit name="southwestdirection" />
      </exit>
      <exit alias="east" to="woods2">
        <inherit name="eastdirection" />
      </exit>
      <exit alias="northwest" to="forest way">
        <inherit name="northwestdirection" />
      </exit>
    </object>
    <exit alias="north" to="roadway1">
      <inherit name="northdirection" />
    </exit>
    <exit alias="southeast" to="woods">
      <inherit name="southeastdirection" />
      <runscript type="boolean">false</runscript>
    </exit>
  </object>
  <object name="road">
    <exit alias="north" to="front lawn">
      <inherit name="northdirection" />
    </exit>
    <object name="roadway1">
      <exit alias="east" to="road">
        <inherit name="eastdirection" />
      </exit>
      <exit alias="south" to="forest way">
        <inherit name="southdirection" />
      </exit>
    </object>
    <object name="roadway2">
      <exit alias="west" to="road">
        <inherit name="westdirection" />
      </exit>
      <exit alias="east" to="traders route">
        <inherit name="eastdirection" />
      </exit>
    </object>
    <exit alias="west" to="roadway1">
      <inherit name="westdirection" />
    </exit>
    <exit alias="east" to="roadway2">
      <inherit name="eastdirection" />
    </exit>
    <exit alias="south" to="road">
      <inherit name="southdirection" />
      <lookonly />
      <look>A mass of forest sits theres but it looks a little thin in spots.</look>
    </exit>
  </object>
  <object name="trail1">
    <inherit name="editor_room" />
    <exit alias="northeast" to="thick forest">
      <inherit name="northeastdirection" />
    </exit>
    <exit alias="south" to="trail2">
      <inherit name="southdirection" />
    </exit>
    <exit alias="southeast" to="woods4">
      <inherit name="southeastdirection" />
    </exit>
  </object>
  <object name="trail2">
    <inherit name="editor_room" />
    <exit alias="north" to="trail1">
      <inherit name="northdirection" />
    </exit>
    <exit alias="southeast" to="Mystical Mage">
      <inherit name="southeastdirection" />
    </exit>
    <exit alias="west" to="woods3">
      <inherit name="westdirection" />
    </exit>
  </object>
  <object name="woods3">
    <inherit name="editor_room" />
    <exit alias="east" to="trail2">
      <inherit name="eastdirection" />
    </exit>
  </object>
  <object name="woods4">
    <inherit name="editor_room" />
    <exit alias="northwest" to="trail1">
      <inherit name="northwestdirection" />
    </exit>
  </object>
  <object name="woods5">
    <inherit name="editor_room" />
    <exit alias="east" to="light forest">
      <inherit name="eastdirection" />
    </exit>
  </object>
  <object name="Mystical Mage">
    <inherit name="editor_room" />
    <exit alias="northwest" to="trail2">
      <inherit name="northwestdirection" />
    </exit>
  </object>
  <object name="blacksmith">
    <inherit name="editor_room" />
    <exit alias="northeast" to="village square">
      <inherit name="northeastdirection" />
    </exit>
  </object>
  <object name="traders route">
    <inherit name="editor_room" />
    <exit alias="west" to="roadway2">
      <inherit name="westdirection" />
    </exit>
    <exit alias="east" to="traders route 1">
      <inherit name="eastdirection" />
    </exit>
  </object>
  <object name="traders route 1">
    <inherit name="editor_room" />
    <exit alias="west" to="traders route">
      <inherit name="westdirection" />
    </exit>
    <exit alias="east" to="traders route 2">
      <inherit name="eastdirection" />
    </exit>
  </object>
  <object name="traders route 2">
    <inherit name="editor_room" />
    <exit alias="west" to="traders route 1">
      <inherit name="westdirection" />
    </exit>
    <exit alias="northeast" to="traders square">
      <inherit name="northeastdirection" />
    </exit>
  </object>
  <object name="traders square">
    <inherit name="editor_room" />
    <exit alias="southwest" to="traders route 2">
      <inherit name="southwestdirection" />
    </exit>
    <exit alias="in" to="traders market">
      <inherit name="indirection" />
    </exit>
  </object>
  <object name="traders market">
    <inherit name="editor_room" />
    <exit alias="out" to="traders square">
      <inherit name="outdirection" />
    </exit>
    <exit alias="northwest" to="traders hall">
      <inherit name="northwestdirection" />
    </exit>
    <exit alias="southwest" to="traders pub">
      <inherit name="southwestdirection" />
    </exit>
  </object>
  <object name="traders hall">
    <inherit name="editor_room" />
    <exit alias="southeast" to="traders market">
      <inherit name="southeastdirection" />
    </exit>
  </object>
  <object name="gambling hall">
    <inherit name="editor_room" />
  </object>
  <object name="traders pub">
    <inherit name="editor_room" />
    <exit alias="northeast" to="traders market">
      <inherit name="northeastdirection" />
    </exit>
  </object>
  <turnscript name="global_game_turns">
    <enabled />
    <script>
      game_turn_function
      leveling function
    </script>
  </turnscript>
  <verb>
    <property>givejane</property>
    <pattern>givejane</pattern>
    <defaultexpression>"You can't givejane " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>goto</property>
    <pattern>goto</pattern>
    <defaultexpression>"You can't goto " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>lay_down</property>
    <pattern>lay_down</pattern>
    <defaultexpression>"You can't lay_down " + object.article + "."</defaultexpression>
  </verb>
  <function name="intro_function">
    msg ("A vast land where monsters roam and evil lurks, the people of Villagoplia thrive to survive in these troubled lands. Lives lost and wars raged but we still live they will conquer us and we will not lye down and die.....")
    msg ("......................................................................................................................")
    msg ("......................................................")
    wait {
      msg ("Whats your name?")
      get input {
        msg ("Hello " + result)
        genderlist = NewStringList()
        list add (genderlist, "male")
        list add (genderlist, "female")
        ShowMenu ("Whats your gender?", genderlist, false) {
          player.gender = result
          classlist = NewStringList()
          list add (classlist, "mage")
          list add (classlist, "warrior")
          list add (classlist, "archer")
          ShowMenu ("What class would you like to be?", classlist, false) {
            player.class = result
            msg ("You are a " + result)
            if (result="mage") {
              mage class
            }
            else if (result="warrior") {
              warrior class
            }
            else if (result="archer") {
              archer class
            }
          }
        }
      }
    }
  </function>
  <function name="warrior class">
    player.strength = player.strength + 3
    player.dexterity = player.dexterity + 2
    player.intelligence = player.intelligence + 1
    player.health = player.health + 18
  </function>
  <function name="archer class">
    player.intelligence = player.intelligence + 1
    player.dexterity = player.dexterity + 3
    player.strength = player.strength + 2
    player.health = player.health + 14
  </function>
  <function name="mage class">
    player.dexterity = player.dexterity + 2
    player.strength = player.strength + 1
    player.intelligence = player.intelligence + 3
    player.health = player.health + 10
  </function>
  <function name="leveling function"><![CDATA[
    if (player.experience >= player.level * 15 + 15) {
      player.experience = player.experience - (player.level * 15 + 15)
      player.level = player.level + 1
      switch (player.gender) {
        case ("male") {
          player.strength = player.strength + 1
          player.dexterity = player.dexterity + 1
          player.health = player.health + 2
        }
        case ("female") {
          player.intelligence = player.intelligence + 1
          player.dexterity = player.dexterity + 1
          player.health = player.health + 1
        }
      }
      switch (player.class) {
        case ("warrior") {
          player.strength = player.strength + 2
          player.intelligence = player.intelligence + 1
          player.dexterity = player.dexterity + 1
          player.health = player.health + 6
        }
        case ("mage") {
          player.intelligence = player.intelligence + 2
          player.dexterity = player.dexterity + 1
          player.strength = player.strength + 1
          player.health = player.health + 2
        }
        case ("archer") {
          player.intelligence = player.intelligence + 1
          player.deterity = player.dexterity + 2
          player.strength = player.strength + 1
          player.health = player.health + 4
        }
      }
      leveling function
    }
  ]]></function>
  <function name="fight function">
  </function>
  <function name="game_turn_function">
    player.turns = player.turns + 1
  </function>
  <function name="orb_task">
  </function>
  <function name="room_renting">
    if (Got(key)) {
      EnableTimer (room_timer)
    }
    else if (Contains (Jane,key)) {
      DisableTimer (room_timer)
    }
  </function>
  <timer name="room_timer">
    <interval>30</interval>
    <script>
      MoveObject (key, Jane)
      if (game.pov.parent = room1) {
        MoveObject (player, village square inn)
        HelperCloseObject (room1)
      }
      DisableTimer (room_timer)
    </script>
  </timer>
  <timer name="sleep_timer">
    <interval>60</interval>
    <script>
      msg ("YAWNNN!! That was a good rest!")
      MoveObject (player, room1)
      DisableTimer (sleep_timer)
    </script>
  </timer>
</asl>