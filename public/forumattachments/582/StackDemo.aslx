<!--Saved by Quest 5.4.4840.17608-->
<asl version="540">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <include ref="StackLibrary.aslx" />
  <game name="Stack Demo">
    <gameid>a9bfdc45-5714-4f08-a962-4de554d5123c</gameid>
    <version>1.0</version>
    <firstpublished>2013</firstpublished>
    <showhealth />
    <showscore type="boolean">false</showscore>
    <autodisplayverbs type="boolean">false</autodisplayverbs>
    <start type="script">
      enable_stacking
    </start>
  </game>
  <object name="room">
    <inherit name="editor_room" />
    <object name="player">
      <inherit name="editor_object" />
      <inherit name="editor_player" />
    </object>
    <object name="yellow potion">
      <inherit name="editor_object" />
      <inherit name="childstack_object" />
      <alias>yellow potion</alias>
      <look>It's a yellow potion. (It's also a child of the 'blue potion' of the 'potions' stack.)</look>
      <inventoryverbs type="stringlist" />
      <drinkable type="string"></drinkable>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Drink</value>
        <value>Take</value>
      </displayverbs>
      <stackparent type="object">blue potion</stackparent>
      <useinstack type="script">
        msg ("You drink the potion and recover 10% health.")
        player.health = player.health + 10
        unstack ("potions", this)
        destroy (this.name)
      </useinstack>
      <use type="script">
        msg ("You drink the potion and recover 10% health.")
        player.health = player.health + 10
        destroy (this.name)
      </use>
    </object>
    <object name="yellow potion1">
      <inherit name="editor_object" />
      <inherit name="childstack_object" />
      <alias>yellow potion</alias>
      <look>It's a yellow potion. (It's also a child of the 'blue potion' of the 'potions' stack.)</look>
      <inventoryverbs type="stringlist" />
      <takemsg>You take the potion.</takemsg>
      <drinkable type="string"></drinkable>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Drink</value>
        <value>Take</value>
      </displayverbs>
      <stackparent type="object">blue potion</stackparent>
      <useinstack type="script">
        msg ("You drink the potion and recover 10% health.")
        player.health = player.health + 10
        unstack ("potions", this)
        destroy (this.name)
      </useinstack>
      <use type="script">
        msg ("You drink the potion and recover 10% health.")
        player.health = player.health + 10
        destroy (this.name)
      </use>
    </object>
    <object name="yellow potion2">
      <inherit name="editor_object" />
      <inherit name="childstack_object" />
      <alias>yellow potion</alias>
      <look>It's a yellow potion. (It's also a child of the 'blue potion' of the 'potions' stack.)</look>
      <inventoryverbs type="stringlist" />
      <take />
      <takemsg>You take the yellow potion.</takemsg>
      <drinkable type="string"></drinkable>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Drink</value>
        <value>Take</value>
      </displayverbs>
      <stackparent type="object">blue potion</stackparent>
      <useinstack type="script">
        msg ("You drink the potion and recover 10% health.")
        player.health = player.health + 10
        unstack ("potions", this)
        destroy (this.name)
      </useinstack>
      <use type="script">
        msg ("You drink the potion and recover 10% health.")
        player.health = player.health + 10
        destroy (this.name)
      </use>
    </object>
    <object name="green potion1">
      <inherit name="editor_object" />
      <inherit name="childstack_object" />
      <alias>green potion</alias>
      <look>It's a green potion. (It's also a child of the 'blue potion' of the 'potions' stack.)</look>
      <inventoryverbs type="stringlist" />
      <drinkable type="string"></drinkable>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Drink</value>
        <value>Take</value>
      </displayverbs>
      <stackparent type="object">blue potion</stackparent>
      <useinstack type="script">
        msg ("You drink the potion and recover 20% health.")
        player.health = player.health + 20
        unstack ("potions", this)
        destroy (this.name)
      </useinstack>
      <use type="script">
        msg ("You drink the potion and recover 20% health.")
        player.health = player.health + 20
        destroy (this.name)
      </use>
    </object>
    <object name="blue potion">
      <inherit name="editor_object" />
      <inherit name="mainstack_object" />
      <stackname>potions</stackname>
      <childinheritscript type="boolean">false</childinheritscript>
      <stacklimit type="int">4</stacklimit>
      <alias>blue potion</alias>
      <look>It's a blue potion. (It's also the main object of the 'potions' stack, although there's no way to see this in a game.)</look>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Drink</value>
        <value>Take</value>
      </displayverbs>
      <inventoryverbs type="stringlist" />
      <takemsg>You pick it up and instantly feel 5% better. Weird.</takemsg>
      <drinkable type="string"></drinkable>
      <stackverbs type="stringlist">
        <value>Look at</value>
        <value>Drink</value>
        <value>Drop</value>
      </stackverbs>
      <usequestion>Drink which potion?</usequestion>
      <useinstack type="script">
        msg ("You recover 25% health.")
        player.health = player.health + 25
        unstack ("potions", this)
        MoveObject (this, game)
      </useinstack>
      <use type="script">
        msg ("You drink it and recover 25% health.")
        player.health = player.health + 25
        MoveObject (this, game)
      </use>
      <ontake type="script">
        IncreaseHealth (5)
      </ontake>
    </object>
    <object name="green potion">
      <inherit name="editor_object" />
      <inherit name="childstack_object" />
      <alias>green potion</alias>
      <look>It's a green potion. (It's also a child of the 'blue potion' of the 'potions' stack.)</look>
      <inventoryverbs type="stringlist" />
      <drinkable type="string"></drinkable>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Drink</value>
        <value>Take</value>
      </displayverbs>
      <stackparent type="object">blue potion</stackparent>
      <useinstack type="script">
        msg ("You drink the potion and recover 20% health.")
        player.health = player.health + 20
        unstack ("potions", this)
        destroy (this.name)
      </useinstack>
      <use type="script">
        msg ("You drink the potion and recover 20% health.")
        player.health = player.health + 20
        destroy (this.name)
      </use>
    </object>
    <object name="jagged metal spike">
      <inherit name="editor_object" />
      <look>That looks painful...</look>
      <inventoryverbs type="stringlist" />
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Use</value>
      </displayverbs>
      <use type="script">
        player.health = player.health - 25
        msg ("Ouch! Why did you do that?")
      </use>
    </object>
  </object>
  <command name="Drink">
    <pattern>drink #object#</pattern>
    <script>
      if (not object.drinkable = null) {
        do (object, "use")
      }
      else {
        msg ("You can't drink that.")
      }
    </script>
  </command>
  <turnscript name="Drinkable Stack">
    <enabled />
    <script>
      if (not GetObject("potions_container") = null) {
        potions_container.drinkable = ""
      }
    </script>
  </turnscript>
</asl>