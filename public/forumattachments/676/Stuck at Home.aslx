<!--Saved by Quest 5.4.4873.16527-->
<asl version="540">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <game name="Stuck at Home">
    <gameid>dff2de3b-dfee-410d-a66f-9953bcce1112</gameid>
    <version>1.0</version>
    <firstpublished>2013</firstpublished>
    <subtitle>Make the Best of It</subtitle>
    <author>Weezil</author>
    <description>You're stuck at home for 24 hours. How will you spend your time? Will you go crazy? ...Probably not.</description>
    <category>Simulation</category>
    <difficulty>Easy</difficulty>
    <cruelty>Merciful</cruelty>
    <defaultfont>Tahoma, Geneva, sans-serif</defaultfont>
    <defaultbackground>SlateGray</defaultbackground>
    <defaultfontsize type="int">11</defaultfontsize>
    <menufont>Tahoma, Geneva, sans-serif</menufont>
    <defaultforeground>White</defaultforeground>
    <defaultlinkforeground>GreenYellow</defaultlinkforeground>
  </game>
  <object name="rm_bedroom1">
    <inherit name="editor_room" />
    <alias>Bedroom</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <descprefix type="string"></descprefix>
    <dark type="boolean">false</dark>
    <description>Your {object:obj_bed1} is set lengthwise against the South wall of the room. On the West wall, you have a {object:obj_ctnr_desk1} and a SHELF, along with a window facing your neighbor. Another window is on your Northern wall, alongside a {object:obj_ctnr_dresser1}. A {object:obj_television1} rests on top. A door on the East wall leads to a closet, and a door on the South wall leads out into the {object:rm_hallway1:Hallway}.</description>
    <beforeenter type="script"><![CDATA[
      firsttime {
        msg ("You are woken up to the sound of the front door shutting. When you open your eyes, you see only pitch darkness. A few moments later, as your vision begins to adjust, you hear the start of a car engine. You then smile, as you understand that your parents have left to visit an old family friend. They had planned an out-of-state drive to visit your dear uncle Charlie. You know, the one arrested for molesting a table in public? And your parents made it very clear to you that they expected you to follow every rule they had set forth while they visit him in prison.<br/><br/>Your eyes have fully adjusted, and you take a gander at the alarm clock on your desk. It is exactly midnight. Unable to go back to sleep, you decide to flip on a light switch, and get out of bed.")
        wait {
          msg ("<br/>You have the house all to yourself for 24 hours. Make it last, it'll be over before you know it.<br/>")
          wait {
            HidePreviousTurnOutput
            EnableTimer (tmr_clockcontrol)
          }
        }
      }
      otherwise {
        msg ("  ")
      }
    ]]></beforeenter>
    <enter type="script">
    </enter>
    <object name="player">
      <inherit name="editor_object" />
      <inherit name="editor_player" />
      <inherit name="male" />
      <alias>You</alias>
      <maxvolume type="int">500</maxvolume>
      <containerfullmessage>Sorry, but your pockets are full.</containerfullmessage>
      <Turns type="int">0</Turns>
    </object>
    <object name="obj_bed1">
      <inherit name="editor_object" />
      <alias>Bed</alias>
      <look>This is your bed. You use it for sleeping, napping, resting- that sort of thing.</look>
      <alt type="stringlist" />
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <use type="script">
        msg ("You've got 24 hours to do whatever you want, and you want to sleep it away? ...I knew you weren't the brightest, but honestly...")
      </use>
      <take type="script">
        msg ("I'd like to see you try.")
      </take>
    </object>
    <object name="obj_ctnr_dresser1">
      <inherit name="editor_object" />
      <inherit name="container_closed" />
      <alias>Dresser</alias>
      <hidechildren />
      <listchildren />
      <listchildrenprefix>The contents are as follows: </listchildrenprefix>
      <openmsg>The dresser is now open.</openmsg>
      <closemsg>The dresser is now closed.</closemsg>
      <look type="script">
        if (obj_ctnr_dresser1.isopen) {
          msg ("An old, worn wooden stained dresser that comes up to your waist. It is currently open.")
        }
        else {
          msg ("An old, worn wooden stained dresser that comes up to your waist. It is currently closed.")
        }
      </look>
      <take type="script">
        msg ("Yeah, good luck with that one.")
      </take>
      <onopen type="script">
        EnableTimer (tmr_draweropen1)
      </onopen>
      <onclose type="script">
        DisableTimer (tmr_draweropen1)
      </onclose>
      <object name="item_helpjournal">
        <inherit name="editor_object" />
        <alias>Journal</alias>
        <drop />
        <dropmsg><![CDATA[You've dropped your journal on the floor. Because that's just a <i>brilliant</i> location for it, isn't it?]]></dropmsg>
        <volume type="int">200</volume>
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
          <value>Read</value>
        </inventoryverbs>
        <look type="script">
          firsttime {
            msg ("An old journal with a red leather cover. The gold-print title along the spine reads \"My Diary.\" Oh for goodness' sake, you're a sissy. Real men keep journals. So now, the gold print reads \"My Journal.\"")
          }
          otherwise {
            msg ("An old journal with a red leather cover. The gold-print title along the spine reads \"My Journal.\"")
          }
        </look>
        <take type="script">
          AddToInventory (item_helpjournal)
          firsttime {
            msg ("You've picked up the journal. I bet it's an interesting read.")
          }
          otherwise {
            msg ("You've picked up the journal.")
          }
        </take>
        <read type="script"><![CDATA[
          firsttime {
            msg ("Welcome to your Journal. Here, you can get some help, view obtainable achievements, and activate some cheats.<br/><br/>The following commands can be used at any given time. Read the Journal again if you forget what one is.<br/>")
            wait {
              msg ("1) I need help: Pretty self-explanatory. Brings up a list of help topics.<br/>2) Show to-do list: Show achievements.<br/>3) I'm a filthy cheater: Shows cheats.")
            }
          }
          otherwise {
            msg ("Commands:<br/>1) I need help: Pretty self-explanatory. Brings up a list of help topics.<br/>2) Show to-do list: Show achievements.<br/>3) What have I done?: View your play history.")
          }
        ]]></read>
      </object>
      <object name="scenery_obj_ctnr_dresser1">
        <inherit name="editor_object" />
        <inherit name="plural" />
        <alias>Socks</alias>
        <scenery type="boolean">false</scenery>
        <look>A bunch of socks.</look>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <take type="script"><![CDATA[
          firsttime {
            msg ("I'm sorry, but there are no uses for socks in this game. And before you say anything, while it is technically a valid use for them, <i>that</i> is not a performable action here... Pervert.")
          }
          otherwise {
            msg ("{random:We've been over this already.:Stop wasting your time.:For every time you type \"Take Socks,\" you're that much closer to gaining Carpal Tunnel in your hands, and for what?:Stop that.:No.:You're annoying me.:Stop that.}")
          }
        ]]></take>
      </object>
    </object>
    <object name="obj_television1">
      <inherit name="editor_object" />
      <inherit name="switchable" />
      <alias>TV</alias>
      <switchonmsg>You've turned the TV on.</switchonmsg>
      <switchoffmsg>You've turned the TV off.</switchoffmsg>
      <lightsource />
      <alt type="stringlist">
        <value>Television</value>
      </alt>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Switch on</value>
        <value>Switch off</value>
      </displayverbs>
      <lightstrength>weak</lightstrength>
      <look type="script">
        if (IsSwitchedOn(obj_television1)) {
          msg ("A small, 20-inch box TV set. It gets basic channels, and is currently playing a static-ridden rendition of a nature documentary.")
        }
        else {
          msg ("A small, 20-inch box TV set. It gets basic channels, and is currently switched off.")
        }
      </look>
      <take type="script">
        msg ("The cord is rather short, so I wouldn't recommend lugging it around.")
      </take>
      <watch type="script">
        if (IsSwitchedOn(obj_television1)) {
          ShowYouTube ("")
        }
      </watch>
    </object>
    <object name="obj_ctnr_desk1">
      <inherit name="editor_object" />
      <inherit name="surface" />
      <alias>Computer Desk</alias>
      <contentsprefix>The items resting on the desk are as follows:</contentsprefix>
      <hidechildren type="boolean">false</hidechildren>
      <drop type="boolean">false</drop>
      <look type="script">
        if (obj_ctnr_sub_desk1_unlocked.isopen) {
          msg ("An old wooden desk, with a  on the right side. The drawer is currently open.")
        }
        else if (Contains (obj_ctnr_desk1,key_obj_ctnr_sub_desk1)) {
          msg ("An old wooden desk, with a drawer on the right side. There's a {object:key_obj_ctnr_sub_desk1} on the corner.")
        }
        else {
          msg ("An old wooden desk, with a drawer on the right side. The drawer is currently closed.")
        }
      </look>
      <take type="script">
        msg ("Yes, I'm definitely going to put a 50-pound desk in your inventory for you.")
      </take>
      <object name="item_key_obj_ctnr_sub_desk1">
        <inherit name="editor_object" />
        <alias>Key</alias>
        <scenery />
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <volume type="int">0</volume>
        <take type="script">
          AddToInventory (key_obj_ctnr_sub_desk1)
          msg ("{object:key_obj_ctnr_sub_desk1} has been picked up. It might go to the drawer in the desk. Go ahead and try it out.")
        </take>
        <drop type="script">
          msg ("Use it to drop it.")
        </drop>
        <selfuseanything type="script">
          msg ("{random:That isn't going to work.:That key was clearly not meant for that object.:...Wait, are you serious?}")
        </selfuseanything>
        <look type="script">
          firsttime {
            msg ("The key came alive, and began humping the nearest keyhole... No, not really. It's just a key.")
          }
          otherwise {
            msg ("It's just a key.")
          }
        </look>
        <selfuseon type="scriptdictionary">
          <item key="obj_ctnr_sub_desk1">
            MoveObject (obj_ctnr_sub_desk1, rm_storage)
            MoveObjectHere (obj_ctnr_sub_desk1_unlocked)
            RemoveObject (item_key_obj_ctnr_sub_desk1)
            msg ("{object:item_key_obj_ctnr_sub_desk1} was used on the drawer. {object:item_key_obj_ctnr_sub_desk1} removed from inventory.")
          </item>
        </selfuseon>
      </object>
      <object name="obj_dymc_alarmclock1">
        <inherit name="editor_object" />
        <alias>Alarm Clock</alias>
        <alt type="stringlist">
          <value>Clock</value>
        </alt>
        <look type="script">
          msg ("The time is " + obj_masterclock.hoursprefix + obj_masterclock.hours + ":" + obj_masterclock.minutesprefix + obj_masterclock.minutes + ". In military time.")
        </look>
      </object>
      <object name="obj_portal_computer1">
        <inherit name="editor_object" />
        <inherit name="switchable" />
        <alias>Computer</alias>
        <alt type="stringlist">
          <value>Your Computer</value>
          <value>My Computer</value>
          <value>PC</value>
          <value>My PC</value>
          <value>Your PC</value>
        </alt>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Use</value>
        </displayverbs>
        <switchonmsg>The computer is powering on.</switchonmsg>
        <switchoffmsg>Computer is powering off.</switchoffmsg>
        <switchedondesc>It is currently on.</switchedondesc>
        <switchedoffdesc>It is currently off.</switchedoffdesc>
        <look>A fine Windows desktop computer. </look>
        <use type="script">
          if (IsSwitchedOn(obj_portal_computer1)) {
            msg ("The computer is booting up...")
            EnableTimer (tmr_pcboottime)
          }
          else {
            msg ("Turn the computer on first.")
          }
        </use>
      </object>
    </object>
    <object name="obj_ctnr_sub_desk1">
      <inherit name="editor_object" />
      <inherit name="container_closed" />
      <inherit name="container_lockable" />
      <alias>Drawer</alias>
      <alt type="stringlist" />
      <scenery />
      <drop type="boolean">false</drop>
      <contentsprefix>Contents</contentsprefix>
      <hidechildren />
      <listchildren />
      <listchildrenprefix>Contents:</listchildrenprefix>
      <openmsg>The bottom drawer was opened.</openmsg>
      <closemsg>The bottom drawer was closed.</closemsg>
      <nokeymessage>The drawer is locked. Try using some sort of {object:key_obj_ctnr_sub_desk1} on it.</nokeymessage>
      <unlockmessage>Drawer has been unlocked.</unlockmessage>
      <displayverbs type="stringlist">
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
      <look>A simple drawer, currently locked.</look>
      <take type="script">
        msg ("Um... why..?")
      </take>
    </object>
    <object name="scenery_obj_posters1">
      <inherit name="editor_object" />
      <inherit name="plural" />
      <alias>posters</alias>
      <scenery />
      <look type="script">
        firsttime {
          msg ("The posters vary in content quite wildly, ranging from a gritty shooter game, to a cartoon about fluffy, cartoon ponies..?")
          wait {
            msg ("...What is the matter with you?")
            wait {
              msg ("...Sissy.")
            }
          }
        }
        otherwise {
          msg ("There's a few other posters covering bands, TV shows and other games.")
        }
      </look>
    </object>
    <object name="scenery_obj_window1">
      <inherit name="editor_object" />
      <alias>West Window</alias>
      <alt type="stringlist">
        <value>the west window</value>
        <value>the western window</value>
      </alt>
      <displayverbs type="stringlist">
        <value>Look out</value>
      </displayverbs>
      <scenery />
      <lookout type="script">
        msg ("{random:You have a good view of your neighbor's house, and that's about it.:You have a good view of your neighbor's house, and that's about it.:You have a good view of your neighbor's house, and that's about it.:You have a good view of your neighbor's house, and that's about it.:You have a good view of your neighbor's house, and that's about it.:You have a good view of your neighbor's house, and that's about it.:You have a good view of your neighbor's house, and that's about it.:You have a good view of your neighbor's house, and that's about it.:You have a good view of your neighbor's house, and that's about it.:You have a good view of your neighbor's house, and that's about it.:You have a good view of your neighbor's house, and that's about it.:You have a good view of your neighbor's house. Through the window, you can see your neighbor, Linda, sit down by her window. She turns to look at you, and feebly waves.}")
      </lookout>
      <look type="script"><![CDATA[
        firsttime {
          msg ("It's a window... SHAZAM!!! ...Why don't you try looking <i>out</i> the window, not <i>at</i> it.")
        }
        otherwise {
          msg ("{random:I feel like I've already explained this.:It's. A. Window. Whoop-de-frickin'-do.:A window, used for seeing things outside.}")
        }
      ]]></look>
    </object>
    <object name="scenery_obj_window2">
      <inherit name="editor_object" />
      <alias>North Window</alias>
      <alt type="stringlist">
        <value>the North Window</value>
        <value>The Northern Window</value>
      </alt>
      <displayverbs type="stringlist" />
      <scenery />
      <look type="script"><![CDATA[
        firsttime {
          msg ("We look <i>out</i> windows in this game, not <i>at</i> them.")
        }
        otherwise {
          msg ("A window, nothing special.")
        }
      ]]></look>
      <lookout type="script">
        msg ("You have a good view of the BACKYARD from here, and the giant oak tree in the middle of it.")
      </lookout>
    </object>
    <object name="scenery_npc_achievement_neighbor">
      <inherit name="editor_object" />
      <scenery />
      <alias>Linda</alias>
      <look>An older woman in her sixties, with greying hair and rather large glasses. She's always been kind to you.</look>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>wave</value>
        <value>Give the middle finger</value>
      </displayverbs>
      <alt type="stringlist">
        <value>Neighbor</value>
        <value>to Linda</value>
        <value>to Neighbor</value>
      </alt>
      <wave type="script">
        msg ("You wave to her, and she smiles and waves back. After a second, she leaves the window and closes the curtains.")
        MoveObject (scenery_npc_achievement_neighbor, rm_storage)
      </wave>
      <givethemiddlefinger type="script"><![CDATA[
        msg ("You raise both hands and wave your obscene gesture at her. She dons a big grin, and mouths the words \"You were adopted,\" before laughing and closing the curtains.<br/>")
        MoveObject (scenery_npc_achievement_neighbor, rm_storage)
        wait {
          msg ("<b>Achievement Earned!</b><br/><b>I Never Liked Her Anyway</b><i> for 500 pts</i>")
        }
      ]]></givethemiddlefinger>
    </object>
  </object>
  <object name="rm_storage">
    <inherit name="editor_room" />
    <alias>rm_storage</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <description><![CDATA[{once:<b><i>Achievement Unlocked!</i></b><br/><i>Hey, you're not supposed to be here!</i><br/><br/>Well, congratulations on breaking the game. I suppose it had to happen sometime. Well, here is where everything passes through to fit into my limited knowledge of the program. If I want to add an alternate version of an object, but I don't want you finding it until I swap it out, this is where it is. By reaching here, you've essentially ruined the game for yourself, as there is no way out of here. I hope you're proud of yourself.}]]></description>
    <descprefix type="string"></descprefix>
    <objectslistprefix type="string"></objectslistprefix>
    <object name="obj_ctnr_sub_desk1_unlocked">
      <inherit name="editor_object" />
      <inherit name="container_closed" />
      <scenery />
      <alias>Drawer</alias>
      <alt type="stringlist" />
      <drop type="boolean">false</drop>
      <hidechildren />
      <listchildren />
      <listchildrenprefix>Contents:</listchildrenprefix>
      <contentsprefix>Contents:</contentsprefix>
      <openmsg>The bottom drawer was opened.</openmsg>
      <closemsg>The bottom drawer was closed.</closemsg>
      <displayverbs type="stringlist">
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
      <take type="script">
        msg ("Um... why..?")
      </take>
    </object>
    <object name="obj_masterclock">
      <inherit name="editor_object" />
      <hours type="int">0</hours>
      <minutes type="int">0</minutes>
      <hoursprefix>0</hoursprefix>
      <minutesprefix>0</minutesprefix>
    </object>
  </object>
  <command name="cmd_clear">
    <pattern>clear</pattern>
    <script>
      ClearScreen
    </script>
  </command>
  <command name="cmd_help1">
    <pattern>I need help</pattern>
    <script><![CDATA[
      firsttime {
        msg ("Oh, I knew it would only be a matter of time before you finally came crawling to me for help. Well, being your generous and loving game companion, I am more than happy to help you.<br/><br/>Below are a series of questions that you can ask me, and I will answer to the best of my ability.")
        wait {
          msg ("1) Who the hell <i>are</i> you?!<br/>2) What is the point of this game?<br/>3) How do you win?<br/>4) What are some basic things I need to know?<br/>5) Are there any easter eggs?<br/>6) What should I do now?")
          wait {
            msg (" <br/> ")
          }
        }
      }
      otherwise {
        msg ("1) Who the hell <i>are</i> you?!<br/>2) What is the point of this game?<br/>3) How do you win?<br/>4) What are some basic things I need to know?<br/>5) Are there any easter eggs?")
      }
    ]]></script>
  </command>
  <command name="cmd_help1_q1">
    <pattern>Who the hell are you?!</pattern>
    <script><![CDATA[
      msg ("Who, me? Oh, I'm no one, really. Well, that isn't <i>entirely</i> accurate...")
      wait {
        msg ("I'm your fourth-wall-breaking narrator, a brilliant and beloved companion to the main protagonist, you. I hope that answers your question.")
      }
    ]]></script>
  </command>
  <command name="cmd_help1_q2">
    <pattern>What is the point of this game?</pattern>
    <script><![CDATA[
      msg ("There <i>isn't</i> a point to this game, you simpleton. Simply do what you wish to kill time. And I know you're asking me, \"Oh glorious narrator, how can I enjoy a game with no plot, no goals, and no point?\" Well, haven't you ever played Minecraft? ")
    ]]></script>
  </command>
  <verb>
    <property>watch</property>
    <pattern>watch</pattern>
    <defaultexpression>"You can't watch " + object.article + "."</defaultexpression>
  </verb>
  <command name="cmd_help1_q3">
    <pattern>How do you win?</pattern>
    <script>
      msg ("You win when you want to. Whether it's earning every achievement in the game, lasting the full 24-hour period (which is about 4 hours of realtime) or something completely different.")
    </script>
  </command>
  <command name="cmd_help1_q4">
    <pattern>What are some basic things I need to know?</pattern>
    <script><![CDATA[
      msg ("Oh, I don't know, maybe <i>play the game</i> and find out?<br/>")
      wait {
        msg ("No, but in all seriousness, there are a few things you'll wanna know.<br/>")
        wait {
          msg ("For starters, take a look at the time every now and then. You'll notice that it progresses quite quickly. To be exact, one minute of in-game time is the equivalent of 10 seconds in realtime. The reason for this is so that the game isn't excessively long (a 24-hour long game would take far too long), but so that you have time to actually do things. So, 24 hours of in-game time is about 4 hours of realtime.<br/>")
          wait {
            msg ("Also, take note that certain events are triggered by the time. For example, early in the morning, from 12:00 am to 1:00 am, your bedroom TV set will play a nature documentary, but tune in after that, and you'll get an uncensored comedy show for another hour. The world revolves around time, both in-game and in reality. Try calling a friend over at 3:00 am, and he'll most likely swear you out. Try again at 3:00 pm, and you'll get a better result... maybe. He might still be upset that you called him so early.<br/>")
            wait {
              msg ("And another thing. There is almost no limit to what you can do in this game. Do you wish to flush your cellphone down the toilet? I won't stop you, but it would be a horrible mistake... mostly because recovering it requires you calling a plumber to retrieve it, and that would take time out of your already-short day. But so long as it's physically possible in reality, it should be possible here. Unless of course you want to do something dirty, in which case I won't allow it. This game's genre is <i>Simulation</i>, not <i>Adult.</i><br/>")
              wait {
                msg ("I also went for a bit of realism with your inventory. I got to thinking, \"What is this, <i>Doom</i>? Bottomless inventories are boring. So now, every takable object has a specific volume, and you can only carry so much. And that space is <i>not</i> a lot, I assure you. You'll find yourself leaving objects in various places because your pockets cannot carry everything.<br/>")
                wait {
                  msg ("But, what is a simulation game without a bit of randomness? Randomness adds to the replayability value. In some games, you might receive a phone call from a friend, and in others, you won't receive any calls at all. Perhaps you'll receive a package today? Or perhaps not. All sorts of random occurences are possible, and the only way to see them all is to play the game multiple times.<br/>")
                  wait {
                    msg ("Now, due note that the game is in only it's first version. This doesn't mean that it's incomplete though; far from it in fact. It only means that if there's something that you'd like to see that isn't currently here, I might add it in a future version. The same goes for unfortunate bugs. The game is built so that playing it normally will be fine, but there are a couple little loopholes in the system that can be exploited. Things that you would have to be deliberately looking for to find, however, so they won't directly affect gameplay.<br/>")
                    wait {
                      msg ("Well, that's about it. I hope you have as much fun playing as I've had building it.<br/>")
                    }
                  }
                }
              }
            }
          }
        }
      }
    ]]></script>
  </command>
  <command name="cmd_help1_q5">
    <pattern>Are there any easter eggs?</pattern>
    <script>
      msg ("Oh, plenty. Some of them, you will enjoy, and some of them you will not. But there are easter eggs aplenty.")
    </script>
  </command>
  <command name="cmd_help1_q6">
    <pattern>What should I do now?</pattern>
    <script><![CDATA[
      msg ("What do you <i>want</i> to do?")
    ]]></script>
  </command>
  <command name="cmd_help2">
    <pattern>Show to-do list</pattern>
    <script><![CDATA[
      firsttime {
        msg ("From here, you can view each and every achievement that is available in-game. However, take note that it isn't stated how to earn said achievements; that's for you to discover.<br/><br/>Below is a list of achievements and their point values.")
        wait {
          msg ("1) <b>Bowties are Cool</b> for 50 pts<br/>2) <b>Bowties are Meh</b> for 50 pts<br/>3) <b> Technically, it's Still My Property</b> for 50 pts<br/>4) <b>I Frickin' LOVE Burritos!</b> for 100 pts<br/>5) <b>If At First You Don't Succeed, Start Spamming</b> for 100 pts<br/>6) <b>How Does Chair..?</b> for 150 pts<br/>7) <b>Screw the Electric Bill!</b> for 200pts<br/>8) <b>Miniature Horses of Which I Am Entitled to</b> for 250 pts<br/>9) <b>Six Seconds I'll Never Get Back</b> for 250 pts<br/>10) <b>Chair-Mode Deactivate</b> for 300 pts<br/>11) <b>House Party</b> for 400 pts<br/>12) <b>The CORRECT Way to Facebook</b> for 500 pts<br/>13) <b>I Never Liked Her Anyway</b> for 500 pts<br/>14) <b>But There's No Forest Anywhere!</b> for 1000 pts<br/>15) <b>I Wouldn't Have Gotten Away with it Too, Regardless of You Meddling Kids...</b> for 1000 pts<br/>16) <b>THIS DOESN'T SEEM PHYSICALLY POSSIBLE!!!</b> for 1000 pts<br/>17) <b>Mystery Achievement</b> for 2000 pts<br/>18) <b>Mystery Achievement</b> for 2000 pts<br/>19) <b>Mystery Achievement</b> for 2000 pts<br/>20) <b>Mystery Achievement</b> for 2000 pts")
        }
      }
      otherwise {
        msg ("1) <b>Bowties are Cool</b> for 50 pts<br/>2) <b>Bowties are Meh</b> for 50 pts<br/>3) <b> Technically, it's Still My Property</b> for 50 pts<br/>4) <b>I Frickin' LOVE Burritos!</b> for 100 pts<br/>5) <b>If At First You Don't Succeed, Start Spamming</b> for 100 pts<br/>6) <b>How Does Chair..?</b> for 150 pts<br/>7) <b>Screw the Electric Bill!</b> for 200pts<br/>8) <b>Miniature Horses of Which I Am Entitled to</b> for 250 pts<br/>9) <b>Six Seconds I'll Never Get Back</b> for 250 pts<br/>10) <b>Chair-Mode Deactivate</b> for 300 pts<br/>11) <b>House Party</b> for 400 pts<br/>12) <b>The CORRECT Way to Facebook</b> for 500 pts<br/>13) <b>I Never Liked Her Anyway</b> for 500 pts<br/>14) <b>But There's No Forest Anywhere!</b> for 1000 pts<br/>15) <b>I Wouldn't Have Gotten Away with it Too, Regardless of You Meddling Kids...</b> for 1000 pts<br/>16) <b>THIS DOESN'T SEEM PHYSICALLY POSSIBLE!!!</b> for 1000 pts<br/>17) <b>Mystery Achievement</b> for 2000 pts<br/>18) <b>Mystery Achievement</b> for 2000 pts<br/>19) <b>Mystery Achievement</b> for 2000 pts<br/>20) <b>Mystery Achievement</b> for 2000 pts")
      }
    ]]></script>
  </command>
  <command name="cmd_help3">
    <pattern>I'm a filthy cheater</pattern>
    <script><![CDATA[
      firsttime {
        msg ("You disgust me... but yeah, there are some cheats. But...")
        wait {
          msg ("<b>I WON'T TELL YOU ANY!</b>")
          wait {
            msg ("The existing cheats can all be found throughout your home, and do different things. There is no noclip, there is no godmode, there's none of that ridiculousness. There are, however, a few rule-breakers, such as extending your time to play, or revealing a few easter eggs. I mean really, in a game like this, do you really want cheats anyway? It kind of breaks the experience, if you ask me.")
          }
        }
      }
      otherwise {
        firsttime {
          msg ("You heard me before. Go find them, you lazy bum.")
        }
        otherwise {
          msg ("...")
        }
      }
    ]]></script>
  </command>
  <object name="rm_hallway1">
    <inherit name="editor_room" />
    <alias>Upstairs Hallway</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix type="string"></prefix>
    <descprefix>You are in the</descprefix>
    <objectslistprefix type="string"></objectslistprefix>
    <description>It's a plain hallway, with a couple PICTURE FRAMES on the walls. Further East is the WASHROOM, and South is your PARENT'S BEDROOM. Northwest is YOUR ROOM, and Northeast is the GUEST ROOM. A flight of stairs will take you to the LIVING ROOM.</description>
  </object>
  <verb>
    <property>lookout</property>
    <pattern>look out</pattern>
    <defaultexpression>"You can't look out " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>wave</property>
    <pattern>wave</pattern>
    <defaultexpression>"You can't wave " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>givethemiddlefinger</property>
    <pattern>give the middle finger</pattern>
    <defaultexpression>"You can't give the middle finger " + object.article + "."</defaultexpression>
  </verb>
  <object name="rm_computer1">
    <inherit name="editor_room" />
    <alias>Computer</alias>
    <descprefix>You are currently using your</descprefix>
    <objectslistprefix type="string"></objectslistprefix>
    <description><![CDATA[<br/>Type "Go check email" to check email.<br/>Type "Go view games" to play a game.<br/>Type "Go to internet" to use the Internet.<br/>Type "Go leave computer" to leave.]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <exitslistprefix>You can </exitslistprefix>
    <exit name="exit_leavecomputer" alias="Leave computer" to="rm_bedroom1">
      <inherit name="eastdirection" />
      <scenery />
    </exit>
    <exit name="exit_checkemail" alias="north" to="rm_email_computer1">
      <inherit name="northdirection" />
      <scenery />
    </exit>
  </object>
  <object name="rm_email_computer1">
    <inherit name="editor_room" />
    <descprefix>You are checking</descprefix>
    <alias>Your Email</alias>
    <objectslistprefix type="string"></objectslistprefix>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <description type="script">
    </description>
    <exit alias="south" to="rm_computer1">
      <inherit name="southdirection" />
    </exit>
    <object name="scenery_obj_friendemail1">
      <inherit name="editor_object" />
      <scenery />
      <alias>new email</alias>
      <look type="script">
      </look>
      <read type="script">
      </read>
      <take type="script"><![CDATA[
        firsttime {
          msg ("Really? <i>You</i>, a physical being, are going to take an email, a <i>digital</i> object?")
        }
        otherwise {
          msg ("Physics is against you on this one.")
        }
      ]]></take>
    </object>
  </object>
  <timer name="tmr_draweropen1">
    <interval>20</interval>
    <script><![CDATA[
      msg ("<i>{random:Psssst. You left your dresser open... idiot.:Heeeey... Your dresser's open. Close it.:Close the frickin' dresser.}</i>")
    ]]></script>
  </timer>
  <timer name="tmr_pcboottime">
    <interval>10</interval>
    <script>
      MoveObject (player, rm_computer1)
      DisableTimer (tmr_pcboottime)
    </script>
  </timer>
  <timer name="tmr_newemail">
    <interval>1</interval>
  </timer>
  <timer name="tmr_clockcontrol">
    <interval>10</interval>
    <enabled type="boolean">false</enabled>
    <script>
      obj_masterclock.minutes = obj_masterclock.minutes + 1
      if (obj_masterclock.minutes = 60) {
        obj_masterclock.minutes = 0
        obj_masterclock.hours = obj_masterclock.hours + 1
      }
      if (obj_masterclock.hours = 10) {
        obj_masterclock.hoursprefix = null
      }
      else if (obj_masterclock.hours = 0) {
        obj_masterclock.hoursprefix = "0"
      }
      if (obj_masterclock.minutes = 10) {
        obj_masterclock.minutesprefix = null
      }
      else if (obj_masterclock.minutes = 0) {
        obj_masterclock.minutesprefix = "0"
      }
    </script>
  </timer>
</asl>