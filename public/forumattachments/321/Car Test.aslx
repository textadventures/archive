<!--Saved by Quest 5.2.4487.32262-->
<asl version="520">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <game name="Car Test">
    <gameid>152adae7-6c9f-4269-8909-86eda5e5c1cf</gameid>
    <version>1.0</version>
  </game>
  <command name="go">
    <pattern type="string"><![CDATA[^go to (?<exit>.*)$|^go (?<exit>.*)$|^(?<exit>north|east|south|west|northeast|northwest|southeast|southwest|in|out|up|down|n|e|s|w|ne|nw|se|sw|o|u|d)$]]></pattern>
    <unresolved>You can't go there.</unresolved>
    <script>
      if (exit.locked) {
        if (GetBoolean(player, "incar")) {
          if (HasScript(exit, "script")) {
            do (exit, "script")
          }
          else {
            if (exit.lookonly) {
              msg ("You can't go there.")
            }
            else {
              player.parent = exit.to
            }
          }
        }
        else {
          msg (exit.lockmessage)
        }
      }
      else if (HasScript(exit, "script")) {
        do (exit, "script")
        if (GetBoolean(player, "incar")) {
          car.parent = player.parent
        }
      }
      else {
        if (exit.lookonly) {
          msg ("You can't go there.")
        }
        else {
          player.parent = exit.to
          if (GetBoolean(player, "incar")) {
            car.parent = player.parent
          }
        }
      }
    </script>
  </command>
  <object name="room">
    <inherit name="editor_room" />
    <description type="string"></description>
    <name2>room</name2>
    <object name="player">
      <inherit name="defaultplayer" />
    </object>
    <object name="car">
      <enter type="script">
        SetObjectFlagOn (player, "incar")
        MoveObject (player, car)
        msg (car.parent.description)
        if (car.parent = room) {
          ce1.to = room2
        }
        else if (car.parent = room2) {
          ce1.to = room
          ce2.to = room3
        }
        else {
          ce1.to = room2
        }
      </enter>
      <exit name="ce2" alias="west" to="room3">
        <inherit name="westdirection" />
        <script type="script">
          if (car.parent = room) {
            MoveObject (car, room)
            LockExit (ce2)
          }
        </script>
        <lockmessage>There is no way west.</lockmessage>
      </exit>
      <exit name="ce1" alias="east" to="room2">
        <inherit name="eastdirection" />
        <script type="script">
          if (car.parent = room3) {
            MoveObject (car, room3)
            LockExit (ce1)
          }
        </script>
        <lockmessage>There is no way east.</lockmessage>
      </exit>
    </object>
  </object>
  <object name="room2">
    <inherit name="editor_room" />
    <name2>room2</name2>
    <exit alias="west" to="room">
      <inherit name="westdirection" />
    </exit>
    <exit alias="east" to="room3">
      <inherit name="eastdirection" />
      <locked />
      <lockmessage>It's too faraway.</lockmessage>
    </exit>
  </object>
  <object name="room3">
    <inherit name="editor_room" />
    <name2>room3</name2>
    <exit alias="west" to="room2">
      <inherit name="westdirection" />
      <locked />
      <lockmessage>It's too faraway.</lockmessage>
    </exit>
  </object>
  <verb>
    <property>enter</property>
    <pattern>enter</pattern>
    <defaultexpression>"You can't enter " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>exit</property>
    <pattern>exit</pattern>
    <defaultexpression>"You can't exit " + object.article + "."</defaultexpression>
  </verb>
  <function name="ShowRoomDescription"><![CDATA[
    if (GetBoolean(player, "incar")) {
      msg ("<b>You are driving a car.</b>")
    }
    if (HasScript(player.parent, "description")) {
      do (player.parent, "description")
    }
    else {
      if (game.autodescription) {
        desc = ""
        for (i, 1, 4) {
          if (i = game.autodescription_youarein) {
            if (game.autodescription_youarein_useprefix) {
              youarein = player.parent.descprefix
              desc = AddDescriptionLine (desc, youarein + " " + GetDisplayName(player.parent) + ".")
            }
            else {
              desc = AddDescriptionLine (desc, "<b>" + CapFirst(GetDisplayName(player.parent)) + "</b>")
            }
          }
          if (i = game.autodescription_youcansee) {
            objects = FormatObjectList(player.parent.objectslistprefix, GetNonTransparentParent(player.parent), Template("And"), ".", false)
            desc = AddDescriptionLine(desc, objects)
          }
          if (i = game.autodescription_youcango) {
            exits = FormatExitList(player.parent.exitslistprefix, ScopeExits(), Template("Or"), ".")
            desc = AddDescriptionLine(desc, exits)
          }
          if (i = game.autodescription_description) {
            desc = AddDescriptionLine(desc, GetRoomDescription())
          }
        }
        if (LengthOf(desc) > 0) {
          msg (desc)
        }
      }
      else {
        fulldesc = GetRoomDescription()
        if (LengthOf(fulldesc) > 0) {
          msg (fulldesc)
        }
      }
    }
  ]]></function>
</asl>