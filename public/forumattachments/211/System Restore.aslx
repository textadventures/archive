<!--Saved by Quest 5.1.4426.19610-->
<asl version="510">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <include ref="Score_Lib.aslx" />
  <template name="UnresolvedObject">There doesn't seem to be such a thing.</template>
  <template name="UnresolvedLocation">It doesn't seem like you can go there.</template>
  <template name="DefaultObjectDescription">It's a thing.... Were you expecting more?</template>
  <template name="NothingToUndo">No reset button here, dude.</template>
  <template name="UnrecognisedCommand">(Please refrain from inventing a new language on a whim.)</template>
  <template name="CannotDoThat">(What are you trying to do? Stop that.)</template>
  <dynamictemplate name="DefaultSearch">"Nothing interesting here."</dynamictemplate>
  <game name="System Restore">
    <gameid>04b06177-52ed-420b-ba84-9eda287ae51f</gameid>
    <version>1.3</version>
    <description><![CDATA[You're an avid gamer with a preference for PC games. One day, out of the blue, your mom brings you a game that was mailed to you. It's from a company you've never heard of, and the only things in the box are a hard drive, a state-of-the-art visor, and a note begging for your help to save the world. Your only clues to figuring out what the deal is with this game are an icon designed to look like a pair of violet swords crossed over one another, and the title <i>System Restore</i>....]]></description>
    <author>AvecPardon</author>
    <category>RPG</category>
    <autodescription />
    <defaultfontsize type="int">12</defaultfontsize>
    <menufontsize type="int">12</menufontsize>
    <defaultfont>Verdana</defaultfont>
    <menufont>Verdana</menufont>
    <appendobjectdescription type="boolean">false</appendobjectdescription>
    <score_max type="int">500</score_max>
    <score_achievements type="stringdictionary"></score_achievements>
    <defaultlinkforeground>CornflowerBlue</defaultlinkforeground>
    <start type="script">
      InitScore (500, true)
    </start>
  </game>
  <verb name="search">
    <property>search</property>
    <pattern>search #object#</pattern>
    <defaulttemplate>DefaultSearch</defaulttemplate>
  </verb>
  <verb name="wear">
    <property>wear</property>
    <pattern>wear #object#</pattern>
    <defaulttemplate>DefaultWear</defaulttemplate>
  </verb>
  <object name="intro">
    <inherit name="editor_room" />
    <alias>Introduction</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <description type="script"><![CDATA[
      msg ("You've always been an avid gamer. Shooters, platformers, puzzle, RPG; they name it, you've played it. PC games are especially fun, so when your mom brings in a strange box bearing a symbol of ornate crossed swords and the title System Restore, you decide to crack it open and see what it could be about. You've never heard of a game like this, and it doesn't look like the usual system restore programs that fix computers. Opening the box reveals several items that convince you it's a game.<br/><br/>First, there's a visor of some kind, one of those really sleek and expensive looking ones with built in earphones and mic that look like they're meant for super-immersive games. The same crossed swords symbol is embedded into them and pressing it activates the visor and lowers the microphone, though all you can see right now is just black. Next, there's a hard disk, all black and with the symbol also on it in the form of a decal. Could the game be so big it has its own drive? Probably, since the visor suggests it's super-immersive. There's also a small manual, more of a note, and you read it while wondering how your mom could afford such an expensive-looking PC game.<br/>")
      wait {
        msg ("<i>\"Install the drive to your PC. It will wirelessly connect to the neural visor. Once both are online, activate the remote link and take command. It's up to you to save the Guardian Angel and save the world. Time is of the essence. We have faith in you.\"<br/><br/>\"Signed, Staff of the Archives of the Twin Blades\"</i><br/><br/>It's not much of a game intro, but there's probably a tutorial in the game anyway. There's no system requirements list, which is a little weird, but hey, you're not complaining. So, rescue a guardian angel and save the world? Not the most original plot, but for super-immersion it'll do.<br/><br/>You install the drive in your home computer and put on the visor, calling out 'Thanks for the new game, Mom!' before booting up the PC.<br/><br/>Funny, the log-in screen got taken over by that crossed sword symbol. Wonder how that happened? Oh well. You grin and move your mouse to click on the single icon in the center of an all black desktop, marked <i>'Remote Link'</i>. For just a moment, you wonder why the game would be 'remote' when you just installed a hard drive, but the prompt to activate it just came on...<br/>")
        wait {
          if (Ask("Activate Remote Link?")) {
            ClearScreen
            msg ("\"Remote Link Activated.\"<br/><br/>....<br/><br/>\"Connecting....\"<br/><br/>\"Connected.\"<br/><br/>....<br/><br/>\"Accessing Firewall.\"<br/><br/>....<br/><br/>\"Negotiating...\"<br/><br/>....<br/><br/>\"Firewall Down. System Override Commencing.\"<br/><br/>.........3<br/><br/>.......2<br/><br/>.....1<br/><br/>\"System Override Complete. Minimal Power. Basic Systems Online. Restarting Neural Network.\"<br/><br/>For a game, it seems weirdly like you're actually hacking into something. You shiver a little and smile wider. This kind of introduction is wicked cool! Like a movie promo or something. You wait for the rest of the game to catch up.<br/>")
            wait {
              msg ("\"Neural Network Online.\"<br/><br/><i>(All systems green...)<br/><br/>(Error.)<br/></i><br/>............<br/><br/>You frown a little. When that voice came on, you jumped a little at your seat, but relaxed again. The voice was smooth and calm, a young man's voice. He's probably playing the part of the guide or something. When he mentioned an error, you began to assume that there must have been an actual game error.<br/><br/>You huff, getting ready to quit the game and check the connections, when the voice suddenly returned, clear as day through the earpieces.<br/>")
              wait {
                msg ("<i>(You are an intruder. Identify yourself.)<br/></i><br/>Blinking in surprise, you say your name through the microphone. Must be for player identification or something.<br/>")
                name_player
                wait {
                  msg ("<i>(Data recorded. I seem to have an error that needs to be corrected. I do not know by what method you've come to gain access to my body, but I am no longer in control.)<br/></i><br/>Okay, intro's a little funny, but so far so good. Right?<br/><i><br/>(My name is Caleb. I am a living android, existing on this planet for far longer than it has been known as Earth and charged with the task of archiving knowledge and protecting this world. Or rather, I <b>was</b> living. This is the error that I am unable to correct on my own.)<br/><br/>(My soul appears to have been stolen.)<br/></i><br/>Now THIS is a twist to the usual plot! Okay, game's getting some bonus points for that. You're controlling a robot character, cool. You settle down in your seat, ready for what's next.<br/>")
                  wait {
                    msg ("<i>(I cannot access immediate data recorded prior to you rebooting me; those files appear to have been damaged and will take time to recover. I do not know where I am, nor where my soul has been taken. However, it does not appear to be mere coincidence that you are in control of me. You seem to be accessing my systems remotely so I will need your assistance in this venture.)<br/></i><br/>Okay, okay, typical game-start spiel. The visor suddenly comes to life, filling your vision with a wire-frame image of a man with long hair tied back in a ponytail and a strange suit with coattails. It spins slowly so you can see it from all sides, then shrinks and moves to a corner of the visor. Some kind of health reference?<br/><i><br/>(Locate my soul and perform a system restoration. The longer I am unable to fulfill my duties, the greater the risk of dangers befalling this world. I will do what I can to aid you, " + player.playername + ".)<br/></i><br/>The viewing field flashes a second time, forcing you to shut your eyes reflexively. When you open them again, you utter a soft sound of appreciation at the detail put into the startpoint of the game. It all looks so <b>real</b>!<br/><i><br/>(As most humans would say in this scenario, good luck.)<br/></i>")
                    wait {
                      ClearScreen
                      MoveObject (player, startingroom)
                    }
                  }
                }
              }
            }
          }
          else {
            ClearScreen
            msg ("You decide not to play and put away the game.<br/><br/>A few days later, some blonde nutcase claiming to be the Angel of World's Ending activates an Extinction Level Event and laughs madly while humanity is wiped out. Huh, guess that game was important after all.")
            finish
          }
        }
      }
    ]]></description>
    <object name="player">
      <inherit name="defaultplayer" />
      <health type="int">990</health>
      <statusattributes type="stringdictionary"></statusattributes>
      <mana type="int">1000</mana>
      <damage type="int">1</damage>
      <look>Not bad, for a guy who looks kinda girly.</look>
      <atk type="int">30</atk>
      <sysupdate type="int">0</sysupdate>
      <maxmana type="int">1000</maxmana>
      <playername type="string"></playername>
      <maxhp type="int">990</maxhp>
      <recover_amount type="int">0</recover_amount>
      <affection type="int">0</affection>
      <turnscript name="damage_check">
        <enabled />
        <script><![CDATA[
          if (player.damage >= 70) {
            if (RandomChance(50)) {
              msg ("Your field of vision flickers a little and Caleb mutters irritably in sotto. It might be a good idea to repair these damages. Soon.")
            }
            else {
              msg ("Your field of vision skews and sometimes gets covered with static. Caleb whimpers softly, worriedly, and it really sounds like he's afraid of what's going on. Maybe you should get these damages repaired soon.")
            }
          }
          else if (player.damage >=80) {
            msg ("The visor suddenly blinks out and you find yourself looking at a blank screen, both in the visor and on your computer screen. Looks like you took too much damage and got a game over, but you didn't get any kind of warning or even a typical 'Game Over' screen. You try clicking around on the black screen to restart the game, but nothing happens.<br/><br/>Fed up with the game crash and lack of response, you decide to just unplug the drive and visor and toss them in your room to deal with later.<br/><br/>A couple days later, you're watching the news with your mom, watching in shock as a blonde madman sets off an Extinction Level Event to wipe out the human race, laughing at the cameras all pointed at him. As bad as that is, your attention is riveted on the figure slumped in a chair behind the nut.<br/><br/>A familiar red-haired young man in green clothes, exactly like Caleb from the game, sat lifelessly in that chair. Maybe... it <b>wasn't</b> a game after all...?")
            SetFontSize (16)
            PrintCentered ("Game Over")
            finish
          }
        ]]></script>
      </turnscript>
    </object>
  </object>
  <object name="startingroom">
    <inherit name="editor_room" />
    <alias>an empty room</alias>
    <description><![CDATA[<br/>The room is mostly bare of furnishings and is a stark white in color. No windows or homey decorations can be seen. There is simply a flat metal examining table on which you were lying when all this started, a light source above it, a few small square tables, and a computer terminal on a desk nearby. Against a wall is a tall mirror, very clinical and professional-looking. To the east is a door, stainless steel with a small square window in it.]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <firstenter type="script"><![CDATA[
      msg ("<br/>This game must have been super expensive and state of the art; just as you were reaching for the keyboard to experiment with commands and sit up from that table, the character you were 'possessing' sat up on its own! You were startled, but quickly caught on that just <i>thinking</i> of what you wanted to do made the character respond. It was like the visor was translating your thoughts into action, as if the character was your own body. Smiling as you practice walking around in a figure that's much taller than your real self, you started getting the hang of moving around easily. Then Caleb jolted you back to the here and now.<br/><br/><i>(As much as you seem to be enjoying making my body do inane actions, " + player.playername + ", it would be prudent to begin searching for a way out of here and find clues as to the whereabouts of my soul.)<br/><br/>(Also, I have finished my system checks and have noted that <color color=\"Red\">many of my functions have been disabled</color>, so you will need to restore those as well. Some of my <color color=\"Red\">equipment</color> is missing; please locate and return them quickly. I also seem to have <color color=\"Red\">reduced health</color> for some reason, so try to keep me in optimal condition. If I am destroyed... the end results will not be pleasant, that is all that I can determine.)</i><br/><br/>Okay, so now you have some objectives. Find power-ups, get equipped, stay alive and find the robot angel's soul. No problem!")
    ]]></firstenter>
    <onexit type="script">
      startingroom.alias = "the Aqua Lab"
      LockExit (lab door)
    </onexit>
    <enter type="script">
      scenery_shift
      DisableTimer (security)
    </enter>
    <object name="examtable">
      <inherit name="editor_object" />
      <alias>examining table</alias>
      <description type="string"></description>
      <look><![CDATA[It's a plain metal examining table, kinda like the ones you see in all those medical dramas. Caleb was lying on this until you figured out how to get down from it using the neuro-link visor. The surface is very smooth and would probably feel cold, but touching it only brings up a little stat in your visor that tells you its temperature so you can only assume it <b>is</b> cold.]]></look>
    </object>
    <object name="mirror">
      <inherit name="editor_object" />
      <firstglance />
      <alt>looking glass</alt>
      <look type="script"><![CDATA[
        if (not Got(eternalpin)) {
          if (mirror.firstglance = true) {
            msg ("Looking into the mirror presents you with a reflection of Caleb, the android you're controlling in this game. He seems kind of pretty for being male; pale skin, bright red hair tied back into a very long ponytail, a green and white butler's outfit, green eyes, neutral expression, and a glowing pin on his lapel. Huh, interesting. You reach up to touch your shirt where the pin would be and look surprised when Caleb does the same, his neutral look mirroring your expression. <br/><br/>\"Whoa, you're <i>really</i> doing everything I'm doing or thinking?! That's freaky!\" you exclaim, and though you don't actually step back from your computer, Caleb backs away from the mirror like you would have done, his expression caught between alarm and fascination. <br/><br/><i>(Of course. You are in control of my body, " + player.playername + "; what you do and think and react to, my body will respond to as if it were yours. I am not... pleased... with this, but it must be done in order for you to restore me.)</i> Caleb's voice replies smartly. <br/><br/>\"This is one heck of a game.\" you mutter. Caleb doesn't respond to that. Guess they didn't program a response to that kind of player input.")
            MoveObject (eternalpin, player)
            mirror.firstglance = false
          }
          else {
            msg ("A long rectangular mirror. Looking into it gives you Caleb's reflection. It's kind of scary how responsive he is to your every thought.")
          }
        }
        else {
          msg ("A long rectangular mirror. Looking into it gives you Caleb's reflection. It's kind of scary how responsive he is to your every thought.")
        }
      ]]></look>
    </object>
    <exit name="lab door" alias="east" to="hallway1">
      <inherit name="eastdirection" />
      <locked />
      <lockmessage>The door is locked. There is a card reader beside it with a glowing red light.</lockmessage>
      <suffix>through the door</suffix>
    </exit>
    <object name="compdesk">
      <inherit name="editor_object" />
      <inherit name="surface" />
      <contentsprefix>with</contentsprefix>
      <alias>computer desk</alias>
      <look>A black and grey desk with a computer terminal on it. There are some pen holders but otherwise, it's completely bare.</look>
      <hidechildren type="boolean">false</hidechildren>
      <listchildren />
      <displayverbs>Look at; Take; Search</displayverbs>
      <search type="script">
        drawer1.scenery = false
        msg ("You search the desk and find all the drawers are locked except for one of them. Lucky!")
      </search>
      <object name="terminal1">
        <inherit name="editor_object" />
        <inherit name="container_closed" />
        <alias>computer terminal</alias>
        <description type="string"></description>
        <contentsprefix>with</contentsprefix>
        <open type="boolean">false</open>
        <close type="boolean">false</close>
        <hidechildren />
        <listchildren type="boolean">false</listchildren>
        <transparent />
        <alt>comp; computer</alt>
        <look type="script"><![CDATA[
          if (GetBoolean(player, "opendoc")) {
            msg ("<br/>A document has been left opened on the screen after you finished letting Caleb ransack it for missing system files.<br/><br/><i>\"All neccessary files have been removed and given to qualified departments for further analysis. The initial transfer to <color color=\"Red\">Project: GateKeeper</color> seems successful, but we won't know for sure until we install the <color color=\"Red\">rest of the system files</color>. Once we've learned what we can, place the Guardian Angel in cold storage for later study.<br/><br/>Lunch will be served at Bob's Burger Palace today. It's <color color=\"Blue\">Frank's</color> birthday.\"</i><br/><br/>Well, <b>that</b> seems kind of bizarre for a clue in a game. You scratch your head absentmindedly. Huh, that's funny. Bob's Burger Palace is a real life restaurant chain. Aren't the game makers worried about trademark issues?<br/><br/><i>(I do <b>not</b> wish to be placed in cold storage. At least you know where my <color color=\"Red\">other files</color> are.) </i>Caleb muttered. You nod in agreement; other departments means that they, and you, are in a single building, probably a big one.")
          }
          else {
            msg ("A desktop computer with flatscreen monitor, mouse and keyboard. The detailing is <i>awesome</i> for an in-game object. Checking it out a little closer, you spot a flat panel plugged into the computer with an LCD screen in it.<br/><br/><i>(This is a connector's input panel. It was created for <color color=\"Blue\">use</color> by androids like me to interface directly with a computer. If you place my hand on it, I'll be able to access its data.)</i> Caleb remarks while you examine the thing.")
          }
        ]]></look>
        <use type="script">
          msg ("It would probably be easier to let Caleb access it. You poked at a key and went cross-eyed at the block of text that doesn't look anything like English sentences.")
        </use>
        <object name="input1">
          <inherit name="editor_object" />
          <alias>connector's input pad</alias>
          <description type="string"></description>
          <displayverbs>Look at; Take; Use</displayverbs>
          <look type="script"><![CDATA[
            msg ("A flat screen pad that Caleb can <color color=\"Blue\">use</color> to access computers directly.")
          ]]></look>
          <use type="script"><![CDATA[
            if (not GetBoolean(player, "statusfile")) {
              dictionary add (player.statusattributes, "health", "HP: !")
              dictionary add (player.statusattributes, "mana", "TP: !")
              dictionary add (player.statusattributes, "damage", "Systems Damage: !")
              msg ("You place Caleb's palm onto the pad and watch the terminal go crazy with files being scanned and opened at rapid speed. After a while, the image in the corner of your visor disappears and is replaced by three status displays.<br/><br/><i>(I've regained access to my <color color=\"Red\">health and mana management</color> functions. Odd how they were disabled like that.)</i> Caleb muses, <i>(Also, you'll notice I now have a <color color=\"Red\">Systems Damage</color> gauge. You must be very careful with that. As you can see, I already have 1 point of damage. I will always have that 1 point. You have no need to know why. Just know that <color color=\"Red\">1 point of Systems Damage is gained for every 50 points or more of HP I lose</color>. Currently, I don't have the ability to restore HP, but you can repair Systems Damage once you find my <color color=\"Blue\">travel pack</color>.)<br/><br/>(In the meantime, " + player.playername + ", try not to let my Systems Damage reach <color color=\"Red\">70 points or higher</color>. At 70 points, I had been able to use an Over-Limit Mode, but that system is currently disabled. At <color color=\"Red\">80 points and above</color>, you run the risk of me <color color=\"Red\">shutting down</color> permanently and the world will be in danger.)</i><br/><br/>Well, that makes the game a lot harder, then, if you can't heal yourself right away. At least you got the warning. Right, new objectives! Find the stuff to heal yourself before you run into some random battle or whatever.")
              SetObjectFlagOn (player, "statusfile")
            }
            else {
              msg ("You place Caleb's palm onto the pad and watch the terminal go crazy with files being scanned and opened at rapid speed. After a few moments, everything is closed again, except for one document on the screen. You'd have to <color color=\"Blue\">look</color> at the terminal to read it.")
              SetObjectFlagOn (player, "opendoc")
            }
          ]]></use>
        </object>
      </object>
      <object name="drawer1">
        <inherit name="editor_object" />
        <inherit name="container_open" />
        <look>A desk drawer. Not much to it.</look>
        <scenery />
        <alias>drawer</alias>
        <listchildren />
        <hidechildren type="boolean">false</hidechildren>
        <isopen type="boolean">false</isopen>
        <openmsg>You open the drawer and see several aqua colored cards scattered in it.</openmsg>
        <closemsg>You close the drawer out of habit and Caleb hums approvingly. For some reason, that makes you feel pretty good about yourself.</closemsg>
        <listchildrenprefix>There's a marked</listchildrenprefix>
        <onclose type="script">
          IncScore ("closed starting drawer", 10)
        </onclose>
        <object name="aquacard">
          <inherit name="editor_object" />
          <alias>Aqua Keycard</alias>
          <look>An aqua colored keycard with a magnetic strip. It says 'Level 1' on it.</look>
          <take />
          <takemsg>You take the Aqua Keycard. This should be handy.</takemsg>
          <dropmsg>You toss the Aqua Keycard away. Don't need that anymore.</dropmsg>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix type="string"></prefix>
          <alt>key card; aqua card</alt>
        </object>
      </object>
    </object>
    <object name="aquareader">
      <inherit name="editor_object" />
      <alias>card reader</alias>
      <look>A card reader. Nothing else about it, really.</look>
      <usedefaultprefix />
      <prefix type="string"></prefix>
      <scenery type="boolean">false</scenery>
      <useon type="scriptdictionary">
        <item key="aquacard">
          msg ("You swipe the Aqua Keycard through the reader. There's a soft Beep! and the light turns green.")
          UnlockExit (lab door)
        </item>
      </useon>
    </object>
  </object>
  <object name="hidden_inv">
    <inherit name="editor_room" />
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <object name="eternalpin">
      <inherit name="editor_object" />
      <alias>Eternal Sword Pin</alias>
      <look><![CDATA[A pin that looks a lot like the crossed swords symbol on the game box. This one glows, though. Must be some kind of angel artifact. <br/><br/><i>(Please, do <b>not</b> attempt to use the this item. Sensors indicate it is far too powerful for either of us to handle at this time. We need to restore my systems and retrieve my soul first. It would be easier to do if this place is not a smoking crater.)</i> Caleb points out in a faintly nervous tone once you look at it a little too long. <br/><br/>Party-pooper.]]></look>
    </object>
    <object name="secguard">
      <inherit name="editor_object" />
      <inherit name="male" />
      <inherit name="container_open" />
      <alias>security guard</alias>
      <health type="int">100</health>
      <displayverbs>Look at; Speak to; Attack</displayverbs>
      <hidechildren type="boolean">false</hidechildren>
      <close type="boolean">false</close>
      <open type="boolean">false</open>
      <contentsprefix type="string"></contentsprefix>
      <maxobjects type="int">10</maxobjects>
      <enemy />
      <look type="script">
        if (GetBoolean(secguard, "dead")) {
          msg ("A very dead guard. Ick.")
        }
        else {
          msg ("A big burly guard wearing heavy bullet-proof armor. He doesn't look happy to see you there.")
        }
      </look>
      <attack type="script"><![CDATA[
        msg ("You attack the guard fiercely!")
        if (not GetBoolean(secguard, "dead")) {
          secguard.health = secguard.health-player.atk
          if (secguard.health > 0) {
            msg ("The guard's still standing and fighting back!")
            if (Contains (secguard,taser)) {
              if (RandomChance(40)) {
                msg ("The guard used a taser on you! Caleb yells in your ear while you're trying to figure out how to fight back.")
                damage_amount = 30
                damage_player (damage_amount)
              }
              else {
                msg ("The guard attacked you bare-handed! Yikes!")
                damage_amount = 10
                damage_player (damage_amount)
              }
            }
            else if (Contains (secguard,taser2)) {
              if (RandomChance(40)) {
                msg ("The guard used a taser on you! Caleb yells in your ear while you're trying to figure out how to fight back.")
                damage_amount = 30
                damage_player (damage_amount)
              }
              else {
                msg ("The guard attacked you bare-handed! Yikes!")
                damage_amount = 10
                damage_player (damage_amount)
              }
            }
          }
          else if (secguard.health < 1) {
            SetObjectFlagOn (secguard, "dead")
            DisableTimer (auto_attack)
            msg ("The guard goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
            EnableTimer (removal)
          }
        }
        else {
          msg ("The guard's already dead, why are you still trying to attack them?")
        }
      ]]></attack>
      <search type="script">
        if (not GetBoolean(secguard, "dead")) {
          msg ("Why are you trying to search him?! He's attacking you!")
        }
        else {
          msg ("Hm, a taser. This might be useful.")
          if (Contains (secguard,taser)) {
            taser.scenery = False
          }
          else if (Contains (secguard,taser2)) {
            taser2.scenery = False
          }
        }
      </search>
      <object name="taser">
        <inherit name="editor_object" />
        <alias>taser</alias>
        <look>It's a small black taser. This thing shoots a ton of electricity into anyone unfortunate enough to be on the business end of it. Ouch.</look>
        <take />
        <atk type="int">30</atk>
        <equipped type="boolean">false</equipped>
        <scenery />
        <takemsg>Ooh, taser. Yoink.</takemsg>
        <dropmsg>You drop the taser. Caleb recommends destroying it so no one else can use it against you, so you smash your foot on it. Fun!</dropmsg>
        <displayverbs>Look at; Take; Equip</displayverbs>
        <use type="script"><![CDATA[
          msg ("(<b>NO!</b>) Caleb practically screams this into your ear when you  turn the taser towards yourself. You flinch in reaction; geez, you were just gonna mess with it, see what funny actions come up from using stuff on your character. (My systems are barely tolerable towards Lightning attacks as it is; I do <b>not</b> need you taxing my limits for your personal amusement!)<br/><br/>\"Sorry.\" you mutter back under your breath, rolling your eyes. Some designers just have no sense of humor, you suppose.")
          IncScore ("self-harming", -5)
        ]]></use>
        <equip type="script"><![CDATA[
          msg ("You decide to equip the taser but aren't able to find an equip screen. Finally, you just ask Caleb to equip the taser.<br/><br/>(You mean, you want me to use this device as a primary weapon?) the android questions, (I don't have control of my body, remember? If you wish to 'equip' items, just have it on hand.)")
        ]]></equip>
        <ondrop type="script">
          MoveObject (taser, secguard)
          MoveObject (taser2, hidden_inv)
        </ondrop>
        <ontake type="script">
          if (Got(travel_bag)) {
            MoveObject (taser, travel_bag)
          }
        </ontake>
      </object>
    </object>
    <object name="taser2">
      <inherit name="editor_object" />
      <alias>taser</alias>
      <scenery />
      <look>It's a taser just like the one you took earlier. No point trying to take another one, since the one you have is still good.</look>
    </object>
    <object name="wall">
      <inherit name="editor_object" />
      <scenery />
      <look>A plain white wall. It makes you want to take some crayons to it, just to give it some color. Why do lab companies insist on making things white?</look>
      <alias>walls</alias>
    </object>
    <object name="floor">
      <inherit name="editor_object" />
      <scenery />
      <look>A white tile floor. It's very shiny and smooth. Caleb's feet make interesting little tapping sounds when you walk even though his shoes are mostly made of leather.</look>
    </object>
    <object name="door">
      <inherit name="editor_object" />
      <scenery />
      <look>It's a door, made of metal. Part of you wants to just kick it to see what the damage effect would look like.</look>
    </object>
    <object name="travel_bag">
      <inherit name="editor_object" />
      <inherit name="container_open" />
      <alias>travel pack</alias>
      <look><![CDATA[A rather large, beaten-up looking leather bag with a long strap and numerous stitches. It looks positively <i>ancient</i> and you say so to Caleb. <br/><br/><i>(Of course it is.)</i> Caleb returns with a faint touch of pride in his voice,<i> (That bag has been with me since I was first activated. I was not carrying all of my possessions at the time I was abducted, so only a few items were taken from it. This will give us extra inventory space.)</i> <br/><br/>"The clasp looks new." you point out suspiciously. <br/><br/><i>(Of course it does. I replaced it before I was kidnapped.)</i> Caleb returns with equal pride. You just roll your eyes at him. ]]></look>
      <take />
      <drop type="boolean">false</drop>
      <takemsg>You pick up the travel pack and sling it over Caleb's head. The strap settles on his shoulder and the bag rests against his hip. It looks a little funny but you don't mention that to him.</takemsg>
      <listchildren />
      <listchildrenprefix>It currently has</listchildrenprefix>
      <isopen type="boolean">false</isopen>
      <openmsg>You open the flap of the bag and peek inside.</openmsg>
      <closemsg>You close the flap and secure the clasp.</closemsg>
      <alt>satchel; tote; canvas bag; bag; pack</alt>
      <inventoryverbs>Look at; Use</inventoryverbs>
    </object>
    <object name="sec_guard2">
      <inherit name="editor_object" />
      <inherit name="male" />
      <inherit name="container_open" />
      <alias>security officer</alias>
      <health type="int">150</health>
      <enemy />
      <look type="script">
        if (GetBoolean(sec_guard2, "dead")) {
          msg ("A very dead officer. Ick.")
        }
        else {
          msg ("A lean, mean officer wearing an intimidating black uniform. He doesn't look happy to see you there.")
        }
      </look>
      <attack type="script"><![CDATA[
        if (not GetBoolean(sec_guard2, "dead")) {
          sec_guard2.health = sec_guard2.health-player.atk
          if (sec_guard2.health > 0) {
            msg ("The officer counter-attacks!")
            if (Contains (sec_guard2,baton)) {
              if (RandomChance(55)) {
                msg ("The officer clubs you with his baton. Instead of breaking on your arm, it zaps you with electricity! Caleb gives a little scream while you're still stunned by the idea of a lightning baton.")
                damage_amount = 45
                damage_player (damage_amount)
              }
              else {
                msg ("The officer clubs you with his baton. It doesn't break against Caleb's android body, but it does some wicked damage, considering the power of that blow. It even caused some System Damage!")
                damage_amount = 25
                damage_player (damage_amount)
                player.damage = player.damage+1
              }
            }
            else if (Contains (sec_guard2,baton1)) {
              if (RandomChance(55)) {
                msg ("The officer clubs you with his baton. Instead of breaking on your arm, it zaps you with electricity! Caleb gives a little scream while you're still stunned by the idea of a lightning baton.")
                damage_amount = 45
                damage_player (damage_amount)
              }
              else {
                msg ("The officer clubs you with his baton. It doesn't break against Caleb's android body, but it does some wicked damage, considering the power of that blow. It even caused some System Damage!")
                damage_amount = 25
                damage_player (damage_amount)
                player.damage = player.damage+1
              }
            }
          }
          else if (sec_guard2.health < 1) {
            SetObjectFlagOn (sec_guard2, "dead")
            DisableTimer (auto_attack1)
            msg ("The officer goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
            EnableTimer (removal1)
          }
        }
        else {
          msg ("The officer's already dead, why are you still trying to attack them?")
        }
      ]]></attack>
      <search type="script">
        if (not GetBoolean(sec_guard2, "dead")) {
          msg ("Why are you trying to search him?! He's attacking you!")
        }
        else {
          msg ("Hm, a baton. This might be useful.")
          if (Contains (sec_guard2,baton)) {
            baton.scenery = False
          }
          else if (Contains (sec_guard2,baton1)) {
            baton1.scenery = False
          }
        }
      </search>
      <open type="boolean">false</open>
      <close type="boolean">false</close>
      <hidechildren type="boolean">false</hidechildren>
      <contentsprefix type="string"></contentsprefix>
      <object name="baton">
        <inherit name="editor_object" />
        <atk type="int">25</atk>
        <alias>baton</alias>
        <alt>nightstick; club; beatstick</alt>
        <takemsg>You take the baton for yourself. Considering the punch it packed, it'll be useful to have on your side.</takemsg>
        <displayverbs>Look at; Take; Equip</displayverbs>
        <equipped type="boolean">false</equipped>
        <look><![CDATA[A heavy black club with a reinforced, insulated grip. There's a button on it that activates the electric charge on it that gives it some extra 'oomph', and another button that you can't figure out. <br/><br/><i>(It looks like a self-destruct button.)</i> Caleb remarks bitterly. He <b>really</b> doesn't like electric-based weapons, especially if they're used on him.]]></look>
        <scenery />
        <take type="script"><![CDATA[
          if (Got(travel_bag)) {
            msg ("You take the baton for yourself. Considering the punch it packed, it'll be useful to have on your side.")
            MoveObject (baton, travel_bag)
          }
          else if (Got(taser)) {
            msg ("<i>(You cannot carry another weapon while you currently have one in your possession, " + player.playername + ". There is no room for it. Please drop the weapon you have now if you wish to take this one.)</i> Caleb tells you.")
          }
          else {
            msg ("You take the baton for yourself. Considering the punch it packed, it'll be useful to have on your side.")
            MoveObject (baton, player)
          }
        ]]></take>
        <use type="script"><![CDATA[
          msg ("(Augh! Why do you insist on trying to damage me, " + player.playername + "?!) Caleb cries in frustration, (How is that going to be of any help to us?! You were given the equipment to help me, not find ways of making my existence a living hell!)<br/><br/>He starts fuming under his breath in a language you've never heard of. Maybe trying to hit yourself with this thing wasn't a good idea after all?")
          IncScore ("self-harming 2", -5)
        ]]></use>
        <drop type="script">
          msg ("You press the little self-destruct button and then throw the baton away from yourself. It explodes halfway through the air and leaves a few pieces behind. There, that's one less electric baton you'll have to worry about.")
          MoveObject (baton1, hidden_inv)
          MoveObject (baton, sec_guard2)
        </drop>
        <usedefaultprefix />
        <prefix type="string"></prefix>
      </object>
    </object>
    <object name="baton1">
      <inherit name="editor_object" />
      <atk type="int">25</atk>
      <alias>baton</alias>
      <alt>nightstick; club; beatstick</alt>
      <take type="boolean">false</take>
      <takemsg>You take the baton for yourself. Considering the punch it packed, it'll be useful to have on your side.</takemsg>
      <scenery />
    </object>
    <object name="earth_keycard">
      <inherit name="editor_object" />
      <alias>Earth Keycard</alias>
      <look>A dusty-yellow keycard with the image of a gray stone and has a magnetic strip. It says 'Earth' on it.</look>
      <alt>earth card; stone card</alt>
      <take />
      <takemsg>You take the Earth Keycard. This should come in handy.</takemsg>
      <dropmsg>You toss the Earth Keycard away. Don't need that anymore.</dropmsg>
    </object>
  </object>
  <verb name="attack">
    <property>attack</property>
    <defaultexpression>"You can't attack " + object.article + "."</defaultexpression>
    <pattern>attack #object#; hit #object#; fight #object#</pattern>
    <defaulttext>"You can't really attack " + object.article + "."</defaulttext>
  </verb>
  <verb name="watch">
    <property>watch</property>
    <pattern>watch #object#</pattern>
    <defaultexpression>"You can't watch " + object.article + "."</defaultexpression>
    <defaulttext>"There's no reason to watch that, is there?"</defaulttext>
  </verb>
  <command name="equip">
    <pattern>equip #object#</pattern>
    <unresolved>"You can't equip this."</unresolved>
    <script>
      if (object.equipped = False) {
        object.equipped = True
        object.alias = object.alias + " (equipped) "
        player.atk = player.atk+object.atk
        msg ("You've equipped it.")
      }
    </script>
  </command>
  <object name="ground_floor">
    <inherit name="editor_room" />
    <object name="hallway1">
      <inherit name="editor_room" />
      <alias>Ground Floor - Hallway A</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <description><![CDATA[<br/>The hallway is long and has four other doors besides the one you just walked through. It looks empty, but glancing around reveals security cameras mounted on the ceiling at each end of the hall. There could be security guards watching you right now. <br/><br/>Looking to the south, you can see the hallway ends in an 'L' shape. To the north is an elevator and a door with a sign that says 'Stairs'. All the doors here are marked with a colored square on them.]]></description>
      <hidechildren type="boolean">false</hidechildren>
      <firstenter type="script"><![CDATA[
        msg ("<br/>On a hunch, you look back over your shoulder at the door you just came out of and see an aqua-colored square on the door right under the little window. You bring out the Aqua Keycard and compare the two.<br/><br/><i>(I would assume you are thinking that the <color color=\"Red\">Aqua Keycard opens Aqua Doors</color>.)</i> Caleb suddenly comments and you nod. <i>(Perhaps <color color=\"Red\">other Keycards</color> are needed to access <color color=\"Red\">other colored doors</color>?)</i><br/><br/>\"Yeah. I kinda figured that. Every game's got their thing; color cards and doors must be this one's quirk.\" you return dryly, looking around for any sign of security.<br/><br/><i>(Game?)</i> Funny how Caleb sounds puzzled by that. Must be a scripting glitch. <i>(Well, at this point, I feel I must warn you that we are now able to be confronted by any enemies that may be here to hinder us. I would prefer if we did not encounter any, so please <color color=\"Red\">try not to linger too long in open areas like this hallway</color>. Rooms should be safe, so long as there is no one already inside them, of course.)</i><br/><br/>Well, at least he gave you fair warning of <b>that</b>, too.")
      ]]></firstenter>
      <enter type="script">
        scenery_shift
        EnableTimer (security)
      </enter>
      <onexit type="script">
        DisableTimer (security)
      </onexit>
      <exit name="Aqua Door" alias="west" to="startingroom">
        <inherit name="westdirection" />
        <locked type="boolean">false</locked>
        <suffix>to the Aqua Lab</suffix>
      </exit>
      <exit name="Green Door" alias="northeast" to="greenroom">
        <inherit name="northeastdirection" />
        <prefix type="string"></prefix>
        <locked />
        <lockmessage>The door is locked. You'll need the Green Keycard to open it.</lockmessage>
        <suffix>to the Green Lab</suffix>
      </exit>
      <object name="greenroom">
        <alias>Green Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <description>The Green Lab seems to be mirroring the Aqua Lab in some ways. There's a dark wooden desk with a computer, several tables with various bits of metal scattered over them and a painting of some kind of scene hanging on the wall. Another of those long mirrors also sits in a corner, reflecting the empty room.</description>
        <scenery type="boolean">false</scenery>
        <look type="script">
          msg ("A door leading to another lab. It has a green square on it. There is a card reader beside it, too.")
          greenreader.scenery = False
        </look>
        <enter type="script">
          scenery_shift
          DisableTimer (security)
        </enter>
        <firstenter type="script"><![CDATA[
          msg ("<br/><i>(I like the color green very much.)</i> Caleb suddenly says and you pause to think over what he just said. Did you hear that right? Did the robot just say he liked the color green? That's some scary self-awareness there. Thank goodness this is just a game. This must be one of those player interaction skits so you pull out the Green Keycard to look at it.<br/><br/>\"Green. Like this card?\" you ask. It's a bright green that makes you think of neon lights and highlighters.<br/><br/><i>(Actually, I prefer a darker shade than that. Like the color of my clothes.)</i> Caleb returns, <i>(Or a forest. The leaves on the trees and the grass, the leafy vegetables used in making salads. The color of the clothes my friend used to wear....)</i> He trails off into silence after that. You wait a bit to see if he'll say anything more but he doesn't and you put the card back into your pocket. For some reason, you get the feeling that this wasn't a skit after all.")
        ]]></firstenter>
        <onexit type="script">
          LockExit (Green Door)
        </onexit>
        <exit alias="east" to="hallway1">
          <inherit name="eastdirection" />
        </exit>
        <object name="wooden_desk">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <alias>wooden desk</alias>
          <look>A dark wooden desk, it's glossy with protective oil coatings and looks pretty expensive. Caleb points out that it's made of black cherry wood, like it means anything. Wood is wood.</look>
          <contentsprefix>with</contentsprefix>
          <object name="greenlab_comp">
            <inherit name="editor_object" />
            <inherit name="container_closed" />
            <alias>desktop computer</alias>
            <open type="boolean">false</open>
            <close type="boolean">false</close>
            <hidechildren />
            <contentsprefix>with</contentsprefix>
            <transparent />
            <look type="script"><![CDATA[
              if (GetBoolean(player, "spelldoc")) {
                msg ("You look at the computer again and see the file Caleb left open for you to read.<br/><br/><i>\"File Type: <color color=\"Blue\">Magic</color><br/>Magic Type: <color color=\"Blue\">Healing</color><br/>File Name: <color color=\"Red\">Nano-Aid</color><br/><br/>Appears to be a repair spell of sorts. Surface damages are reversed upon use. Deeper, more extensive damages remain, however, so the spell must not be very powerful. Each use takes a small amount of magic power to restore a small amount of integrity. The formula is calculated as thus:<br/><br/><color color=\"Red\">Cast Nano-Aid - cost 15 TP - recovers 30 HP</color>.\"</i><br/><br/>There's some other stuff but it goes over your head pretty fast. Too long; didn't read, as the saying goes. You lift a hand and look at it warily; do you have to make some weird pose to use spells?<br/><br/><i>(My spells are voice-activated. Just <color color=\"Red\">Cast Nano-Aid</color> to recover a little of my HP.)</i> Caleb assures you with that same even tone as always, <i>(However, you must say it <color color=\"Red\">exactly as the file says</color> or it will not work. As advanced as I am, I am in the end still a computer and computers are very specifics-driven.)</i><br/><br/>\"Sooo... write it down?\" you return questioningly.<br/><br/><i>(Good idea. You can also practice casting it a few times to memorize it, but I must warn you. If I am already at <color color=\"Red\">full health</color> when you do, you will use up the TP but I <color color=\"Red\">will not gain any HP</color>. We will have to find a way to recover TP eventually, so until then, be careful.)</i>")
              }
              else {
                msg ("A desktop computer with flatscreen monitor, mouse and keyboard. It's just like the one in the Aqua Lab. Checking it out a little closer, you spot a flat panel plugged into the computer with an LCD screen in it.<br/><br/>\"Caleb, there's another of those pad things for you.\" you murmur, \"Wonder if there's anything in here that can add stuff to you.\"")
              }
            ]]></look>
            <use type="script">
              msg ("It would probably be easier to let Caleb access it. You poked at a key and went cross-eyed at the block of text that doesn't look anything like English sentences.")
            </use>
            <object name="input2">
              <inherit name="editor_object" />
              <alias>connector's input pad</alias>
              <look>A flat screen pad that Caleb can use to access computers directly.</look>
              <use type="script"><![CDATA[
                msg ("You place Caleb's hand on the pad and watch him tear through the files in the computer for anything useful. After a few moments, you hear him make a pleased sound.<br/><br/>\"Find something good?\" you ask him.<br/><br/><i>(Yes. I had an extensive library of <color color=\"Red\">magical spells</color> at my disposal but they were also disabled and some of those files were <color color=\"Red\">removed</color>.)</i> he returns, <i>(A majority of them are protected, so we cannot access them <color color=\"Red\">as I am now</color> but this also means whomever did this to me could not, either. However, one of my spells was being kept here and I have regained its use. Check the computer for relevant information.)</i><br/><br/>He sounds kind of smug about that and you laugh. Robot angel with magic, huh? Interesting choice of main character, but you're liking how it's going so far.")
                SetObjectFlagOn (player, "spelldoc")
              ]]></use>
            </object>
          </object>
        </object>
        <object name="angel_painting">
          <inherit name="editor_object" />
          <alias>large painting</alias>
          <look>A very large painting of two glowing angelic figures floating side by side. Their hands are raised and held together over their hearts, like they're praying or something, and their eyes are closed. The angel on the right has short red hair that looks like it's being blown around by wind and has its left wing spread. The angel on the left has short blonde hair that also looks just as messy and has its right wing spread. There's a space between the two angels that looks like someone painted a glow, but there's nothing to be 'glowy'.</look>
          <alt>angel painting</alt>
        </object>
        <object name="metal_table">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <alias>examining table</alias>
          <look>One of several long tables with various scientific tools and assorted pieces of metal scattered over it. This one had the most bits of metal, so it looked the most interesting.</look>
          <contentsprefix>with</contentsprefix>
          <hidechildren />
          <object name="twisted_metal">
            <inherit name="editor_object" />
            <alias>twisted metal</alias>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>some</prefix>
            <look type="script"><![CDATA[
              if (GetBoolean(twisted_metal, "scanned")) {
                msg ("This ruined piece of twisted metal is what's left of a diamond-tipped drill bit. Whatever this thing was used on, it lost horribly against it.<br/><br/>\"Okay, <b>this</b> is scary, and I haven't even seen blood and gore yet!\" you exclaim in shock.<br/><br/><i>(Why would you even want to?)</i> Caleb mutters in sotto. You glare at the metal pointedly and he sighs. <i>(At least you know what it is. I still do not see how this is of any help to us.)</i>")
              }
              else {
                msg ("A long piece of metal that's been pretty badly twisted and mangled. You wince looking at it. Somehow, you doubt that this thing is supposed to look like this.<br/><br/>\"What <b>is</b> this thing?\" you ask in a mix of fascination and horror. Something <b>did</b> this to it, and you don't want to run into it anytime soon.<br/><br/><i>(If you wish, " + player.playername + ", I can run a <color color=\"Blue\">scan</color> on it and try to identify it.)</i> Caleb offers. Huh, now why didn't you think of that?")
              }
            ]]></look>
            <scan type="script"><![CDATA[
              msg ("You pick up the twisted piece of metal and turn it slowly to look at it from all angles. \"Okay, Caleb,\" you mutter, \"Scan away!\"<br/><br/>The visor suddenly displays a wire-frame model of the twisted metal and you watch in awe as Caleb starts visually untwisting the model, a stream of complex calculations scrolling beside it as he works. In just a few moments, the untwisting is done and Caleb makes a small huffing noise that almost sounds amused.<br/><br/>\"No <i>way</i>.\" you mumble. Is this <b>really</b> what you think it is?<br/><br/><i>(Look at it again if you do not believe my data.)</i> Caleb just grumbles back.")
              SetObjectFlagOn (twisted_metal, "scanned")
            ]]></scan>
          </object>
          <object name="broken_metal">
            <inherit name="editor_object" />
            <alias>broken metal</alias>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>some</prefix>
            <suffix>and rubber</suffix>
            <look type="script"><![CDATA[
              if (GetBoolean(broken_metal, "scanned")) {
                msg ("Shattered metal and a hard rubber grip are what's left of a first-class chisel. You scratch your head as you stare down at the pieces.<br/><br/>\"What the heck can just turn high carbon steel into bits of useless metal?\" you ask aloud incredulously.<br/><br/><i>(Hmm.)</i> Caleb makes a thoughtful sound, as if he's got some idea. You wait for him to spill it. <i>(I'd like to examine more items before I can say for certain.)</i> he finally says and you just roll your eyes.")
              }
              else {
                msg ("A piece of metal with a rubber handle surrounded by shards and splinters of metal. You squint at the pieces, trying to figure out what this thing used to be. Somehow, you doubt it's supposed to look shattered like this.<br/><br/>\"What's <b>this</b> thing?\" you ask in confusion. What's with all the broken metal junk?<br/><br/><i>(If you wish, " + player.playername + ", I can run a <color color=\"Blue\">scan</color> on it and try to identify it.)</i> Caleb offers. Huh, now why didn't you think of that?\"")
              }
            ]]></look>
            <scan type="script"><![CDATA[
              msg ("You look over the many pieces and shards of broken metal and watch as the visor makes wire-frame copies of them. Watching as they are carefully labeled and reassembled, complex calculations scrolling alongside them as Caleb pulls together what little data he can get from them, you find yourself a little envious of the android brain. Eventually, the scan stops.<br/><br/><i>(It is a high quality, carbonized steel chisel.)</i> he reports at last, <i>(If it was not in this state, I might even have been impressed by the craftsmanship. Unfortunately, it has been completely destroyed. Pity.)</i>")
              SetObjectFlagOn (broken_metal, "scanned")
            ]]></scan>
          </object>
          <object name="bent_metal">
            <inherit name="editor_object" />
            <alias>bent metal</alias>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>some</prefix>
            <look type="script"><![CDATA[
              if (GetBoolean(bent_metal, "scanned")) {
                msg ("The bent and battered remains of a jackhammer bit. Caleb's still a little put out that he couldn't identify it. Once the humor of that little side-venture wore off, you find yourself growing a bit disturbed by the sight of the thing.<br/><br/>What the heck did that to a <i>jackhammer</i>?")
              }
              else {
                msg ("A large piece of metal that's been bent so many times it looks like a very thick zig-zag. You gape at it for a second before shaking your head and slapping your hand over your face.<br/><br/>\"What is this I don't even....\" you ramble under your breath in exasperation.<br/><br/><i>(Stop whining and let me <color color=\"Blue\">scan</color> it. I will find what it is and then that will be that.)</i> Caleb huffs.")
              }
            ]]></look>
            <scan type="script"><![CDATA[
              msg ("You pick up the bent piece of metal and turn it in every angle you can think of so Caleb can get a good scan of it. A wire-frame copy appears in the visor and you watch as Caleb stretches the metal back out and returns it to its former shape.<br/><br/><i>(What is this I do not even....)</i> he suddenly blurts out in utter confusion and you laugh as you recognize the long piece of metal.<br/><br/>\"It's the bit to a jackhammer.\" you tell him with a grin, \"What? Never seen one before?\"<br/><br/><i>(The image keeps trying to reference one of my files that I cannot read yet!)</i> Caleb complains, <i>(How am I to know what this is?!)</i><br/><br/>\"Now who's whining?\" you joke and laugh as the android grumbles <i>(I am <b>not</b> whining; I am complaining!)</i> under his breath.")
              SetObjectFlagOn (bent_metal, "scanned")
            ]]></scan>
          </object>
          <object name="block_metal">
            <inherit name="editor_object" />
            <alias>block of metal</alias>
            <alt>brick of metal; block of mythril; mythril brick; brick of mythril; metal brick; metal block</alt>
            <takemsg>What the heck; you pocket the block of metal. Caleb hums a little note of appreciation. For some reason, that makes you feel pretty good.</takemsg>
            <dropmsg>You drop the brick... right on Caleb's foot. You laugh nervously while he growls in your ear.</dropmsg>
            <take type="script">
              if (Got(travel_bag)) {
                msg ("What the heck; you stuff the block of metal into the travel bag. Caleb hums a little note of appreciation. For some reason, that makes you feel pretty good")
                MoveObject (block_metal, travel_bag)
                IncScore ("collected mythril", 15)
              }
              else {
                msg ("What the heck; you pocket the block of metal. Caleb hums a little note of appreciation. For some reason, that makes you feel pretty good")
                MoveObject (block_metal, player)
                IncScore ("collected mythril", 15)
              }
            </take>
            <look type="script"><![CDATA[
              if (not GetBoolean(block_metal, "scan")) {
                msg ("A block of metal about the size of a soda can. It's a shimmering silver color and kind of pretty to look at. Unlike the other screwed up bits of metal on the table, this block looks nearly perfect. It just has a few scratches on the top. <br/><br/>\"I wonder what this is?\" you ask aloud, expecting Caleb to pipe up with a helpful suggestion. <br/><br/><i>(Hm? Oh, that? It is a block of solid mythril. I keep it around in case I feel like crafting something.)</i> Caleb answers absently. You glare at nothing at all and wish you were in front of the mirror so you could at least glare at his reflection. <i>(Were you expecting me to suggest <color color=\"Blue\">scanning</color> it? Why should I? I recognized it as soon as you laid eyes on it.)</i> <br/><br/>Sometimes, you want to just bash his head against the wall, but then you remember that this is just part of the game. Still, this robot character seems to be just too realistic to be a simple video game protagonist.")
              }
              else {
                msg ("A block of mythril. Caleb says he uses it for crafting, but you gotta wonder how he can make anything out of a brick of metal that destroys pretty much anything that tries to chip pieces off.")
              }
            ]]></look>
            <scan type="script"><![CDATA[
              msg ("You pick up the metal block and glare at it until Caleb gets the idea you want to scan it. <i>(Oh, fine. I will tell you more; do not bother with the scanning.)</i> he finally relents in irritation, <i>(As I have said, it is solid mythril. Mythril is a metal that was more readily available during the age in which I was built. It does not exist in this era. Mythril is the hardest metal known to living beings, used only in the very best armor and weapons. Forging and crafting with it is very labor-intensive and time-consuming, making any object made from it very rare and very expensive.)</i><br/><br/>\"And?\" you prompt, feeling like there's still a bit more he's not saying.<br/><br/><i>(And based on the evidence I see here, all the wrecked metal on this table was the result of people trying to use them on this mythril block.)</i> Caleb finished bluntly. You stare at the little brick of shiny, barely scratched metal, then look at the twisted, bent, broken and mangled pieces of tools and machinery lying nearby. <i>(Interesting fact, my clothes have mythril threads woven into them. Makes it a little harder to wash, but they are impossible to tear.)</i><br/><br/>You just slap your hand over your face.")
              SetObjectFlagOn (block_metal, "scan")
            ]]></scan>
            <ontake type="script">
              if (not GetBoolean(player, "brick_frst")) {
                player.affection = player.affection+20
                SetObjectFlagOn (player, "brick_frst")
              }
            </ontake>
            <ondrop type="script">
              IncScore ("dropped mythril", -10)
            </ondrop>
          </object>
        </object>
        <object name="mirror1">
          <inherit name="editor_object" />
          <alias>mirror</alias>
          <alt>looking glass</alt>
          <firstglance />
          <look type="script"><![CDATA[
            if (not Got(eternalpin)) {
              if (mirror1.firstglance = true) {
                msg ("Looking into the mirror presents you with a reflection of Caleb, the android you're controlling in this game. He seems kind of pretty for being male; pale skin, bright red hair tied back into a very long ponytail, a green and white butler's outfit, green eyes, neutral expression, and a glowing pin on his lapel. Huh, you hadn't noticed that before.<br/><br/><i>(I hope you don't plan on admiring me all day, " + player.playername + "; I would very much like to be restored as soon as possible.)</i> Caleb's voice replies curtly. <br/><br/>\"Yeah, yeah. Don't get your wires in a twist.\" you mutter. Caleb simply huffs indignantly.")
                MoveObject (eternalpin, player)
                mirror.firstglance = false
              }
            }
            else {
              msg ("A long rectangular mirror. Looking into it gives you Caleb's reflection. It's kind of scary how responsive he is to your every thought.")
            }
          ]]></look>
        </object>
      </object>
      <object name="blueroom">
        <alias>Blue Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <description>The Blue Lab seems to be mirroring the Aqua Lab in some ways. There's a dark wooden desk with a computer, several tables with various bits of metal scattered over them</description>
        <enter type="script">
          scenery_shift
        </enter>
        <look type="script">
          msg ("The door leads to another lab and has a blue square on it. There is a card reader beside it.")
          blue_reader.scenery = false
        </look>
        <exit alias="northeast" to="hallway1">
          <inherit name="northeastdirection" />
          <lockmessage>That way is locked.</lockmessage>
        </exit>
      </object>
      <exit name="Blue Door" alias="southwest" to="blueroom">
        <inherit name="southwestdirection" />
        <prefix type="string"></prefix>
        <locked />
        <lockmessage>The door is locked. You'll need the Blue Keycard to open it.</lockmessage>
        <suffix>to the Blue Lab</suffix>
      </exit>
      <object name="yellowroom">
        <alias>Yellow Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <enter type="script">
          scenery_shift
        </enter>
        <look type="script">
          msg ("The door leads to another lab and has a yellow square on it. There's a card reader beside it.")
          yellow_reader.scenery = false
        </look>
        <exit alias="northwest" to="hallway1">
          <inherit name="northwestdirection" />
        </exit>
      </object>
      <object name="orangeroom">
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <alias>Orange Lab</alias>
        <prefix>the</prefix>
        <enter type="script">
          scenery_shift
        </enter>
        <look type="script">
          msg ("The door leads to another lab. There's an orange square on it. A card reader is beside the door.")
          orange_reader.scenery = false
        </look>
        <exit alias="west" to="hallway1">
          <inherit name="westdirection" />
        </exit>
      </object>
      <exit name="Orange Door" alias="east" to="orangeroom">
        <inherit name="eastdirection" />
        <locked />
        <lockmessage>The door is locked. You'll need the Orange Keycard to open it.</lockmessage>
        <suffix>to the Orange Lab</suffix>
      </exit>
      <exit name="Yellow Door" alias="southeast" to="yellowroom">
        <inherit name="southeastdirection" />
        <locked />
        <lockmessage>The door is locked. You'll need the Yellow Keycard to open it.</lockmessage>
        <suffix>to the Yellow Lab</suffix>
      </exit>
      <object name="greenreader">
        <inherit name="editor_object" />
        <alias>Green Keycard Reader</alias>
        <scenery />
        <look>A card reader. Nothing else special about it really.</look>
        <usedefaultprefix />
        <alt>green reader</alt>
        <useanything type="script">
          msg ("It doesn't look like it'll take anything else. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary">
          <item key="greencard">
            msg ("You swipe the Green Keycard through the reader. There's a soft Beep! and the light turns green.")
            UnlockExit (Green Door)
          </item>
        </useon>
      </object>
      <exit alias="north" to="ground_elevator_stairs">
        <inherit name="northdirection" />
        <suffix>to the stairs and elevator</suffix>
      </exit>
      <exit alias="south" to="hallway2">
        <inherit name="southdirection" />
        <suffix>to Hallway B</suffix>
      </exit>
      <object name="blue_reader">
        <inherit name="editor_object" />
        <alias>Blue Keycard Reader</alias>
        <scenery />
        <look>A card reader. Nothing much to it.</look>
        <useanything type="script">
          msg ("It doesn't look like it'll take anything else. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary" />
      </object>
      <object name="yellow_reader">
        <inherit name="editor_object" />
        <scenery />
        <alias>Yellow Keycard Reader</alias>
        <look>A card reader. Nothing much to it.</look>
        <useanything type="script">
          msg ("It doesn't look like it'll take anything else. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary" />
      </object>
      <object name="orange_reader">
        <inherit name="editor_object" />
        <alias>Orange Keycard Reader</alias>
        <scenery />
        <look>A card reader. Nothing much to it.</look>
        <useanything type="script">
          msg ("It doesn't look like it'll take anything else. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary" />
      </object>
    </object>
    <object name="hallway2">
      <inherit name="editor_room" />
      <alias>Ground Floor - Hallway B</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <description><![CDATA[<br/>An 'L' shaped bend that turns into another hallway, this place has four more rooms and a few more cameras. The tile floor is shiny under the harsh flourescent lights. Both sides of the hall have two doors but only three of them have colored squares and card readers. The last door is unmarked and -miraculously- has no card reader.]]></description>
      <enter type="script">
        scenery_shift
        EnableTimer (security)
      </enter>
      <onexit type="script">
        DisableTimer (security)
      </onexit>
      <firstenter type="script"><![CDATA[
        msg ("<br/>\"These graphics are amazing! Why haven't I ever heard of a game company called Archives of the Twin Blades?\" you wonder aloud as you step into the second hallway, looking around at the doors and walls. You reach out to put Caleb's hand against one and the visor starts scrolling with data about its density, possible construction materials, and temperature.<br/><br/><i>(It is not a game company, but we <b>do</b> hold large amounts of stock in several others. The Archives was built to house the knowledge of the world.)</i> Caleb returns.<br/><br/>\"Then they paid an awful lot of cash to have a game made this good. I wonder what the rest of the story is gonna be like?\" you mutter under your breath. Caleb just sighs and for a second there you wonder if you really just held a conversation with a character in a video game.")
      ]]></firstenter>
      <exit alias="north" to="hallway1">
        <inherit name="northdirection" />
        <suffix>to Hallway A</suffix>
      </exit>
      <object name="violetroom">
        <alias>Violet Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <enter type="script">
          scenery_shift
        </enter>
        <look type="script">
          msg ("A door leading to another lab. There's a violet square on it. A card reader is beside it.")
          violet_reader.scenery = false
        </look>
        <exit alias="southwest" to="hallway2">
          <inherit name="southwestdirection" />
        </exit>
      </object>
      <object name="indigoroom">
        <alias>Indigo Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <enter type="script">
          scenery_shift
        </enter>
        <look type="script">
          msg ("A door with an indigo square on it leading to another lab. There's a card reader beside it.")
          indigo_reader.scenery = false
        </look>
        <exit alias="northwest" to="hallway2">
          <inherit name="northwestdirection" />
        </exit>
      </object>
      <object name="redroom">
        <alias>Red Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <enter type="script">
          scenery_shift
        </enter>
        <look type="script">
          msg ("A door leading to another lab. It has a red square on it and a card reader beside it.")
          red_reader.scenery = false
        </look>
        <exit alias="southwest" to="hallway2">
          <inherit name="southwestdirection" />
        </exit>
      </object>
      <exit name="Red Door" alias="southwest" to="redroom">
        <inherit name="southwestdirection" />
        <locked />
        <lockmessage>The door is locked. You'll need the Red Keycard to open it.</lockmessage>
        <suffix>to the Red Lab</suffix>
      </exit>
      <object name="lounge">
        <inherit name="editor_room" />
        <alias>Ground Floor - Lounge</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <description><![CDATA[<br/>The inside of the lounge makes you think of employee perks. The room looks cushy; it's big and well lit with several tables and chairs, a mini-kitchen and juice bar, and an area with sofas and a big-screen plasma TV. Vases of flowers and elegant curtains decorate the room, and the walls are painted a soft beige. It's really relaxing to look at. You gape at all the stuff until Caleb plays a little coughing audio into your ear to get your attention.]]></description>
        <firstenter type="script"><![CDATA[
          msg ("<br/>\"Man, these bad guys must be <b>loaded</b>!\" you exclaim, \"It's kind of a cliché for video game villains to be filthy rich, but I haven't seen anything <i>this</i> over the top since the latest Grand Larceny game came out!\"<br/><br/><i>(If we are going to be doing comparisons, then this situation is more of a Grand Theft Me.)</i> Caleb returns in an unamused tone, <i>(Will you <b>please</b> stay on track, " + player.playername + "? We need to find another <color color=\"Red\">Keycard</color>.)</i><br/><br/>\"Yeah, yeah. Spoilsport.\" you mutter, but he's right. Gotta keep your focus on the game so you don't lose this early.")
        ]]></firstenter>
        <enter type="script">
          DisableTimer (security)
        </enter>
        <exit alias="east" to="hallway2">
          <inherit name="eastdirection" />
        </exit>
        <object name="kitchen">
          <look>A small kitchen area with sink, counters, refrigerator and microwave. Pretty much everything a company needs to keep their employees fed and content.</look>
          <alias>kitchen</alias>
          <description type="script"><![CDATA[
            if (GetBoolean(player, "frstkitch")) {
              msg ("<br/>Standing in the kitchen area makes you feel a little weird. Why would a game bother to put something like this in here? On top of that, Caleb keeps making little clicking sounds, like a hard drive trying stubbornly to access a bad sector, and it's getting kind of annoying. You decide to search the area quickly so you can get out and make him stop that.")
            }
            else {
              msg ("<br/>Standing in the kitchen area makes you feel a little weird. Why would a game bother to put something like this in here? It doesn't seem to make much sense. You suppose it's just to take up space or provide a break from the rest of the game.")
            }
          ]]></description>
          <firstenter type="script"><![CDATA[
            msg ("<br/><i>(A kitchen....)</i> Caleb trails off, sounding a little sad and uncertain, maybe even sad that he was uncertain. You look around and shrug.<br/><br/>\"Yeah, it's a kitchen. So what?\" you ask.<br/><br/><i>(I...Kitchen... Cooking... It was part of my original function.)</i> Caleb returns almost brokenly, <i>(Function... call to....)</i> He starts clicking, a kind of nervous tic that has you wonder if maybe you just stumbled across a major glitch in the game. Seriously, who would build a robotic guardian angel and have him do something as stupid as <b>cook</b>?")
            SetObjectFlagOn (player, "frstkitch")
          ]]></firstenter>
          <enter type="script">
            DisableTimer (security)
          </enter>
          <exit alias="out" to="lounge">
            <inherit name="outdirection" />
            <suffix>of the kitchen</suffix>
          </exit>
          <object name="refrigerator">
            <inherit name="editor_object" />
            <inherit name="container_open" />
            <look><![CDATA[A full-size double door refrigerator with built in freezer and ice-maker. It's made of smooth metal and bears the brand JuneTag. Which is kind of funny because that's the brand of refrigerator that's in <b>your</b> kitchen and this model just came out last month. Games like this one take years of development so how did...? Then you decide not to question it right now.]]></look>
            <alias>refrigerator</alias>
            <isopen type="boolean">false</isopen>
            <listchildren />
            <listchildrenprefix>It has</listchildrenprefix>
            <alt>fridge; cooler; icebox</alt>
            <maxobjects type="int">5</maxobjects>
            <openmsg>You open the refrigerator and see a bunch of bottles of water. Boring.</openmsg>
            <closemsg>You close the refrigerator and Caleb hums a little note of appreciation. For some reason, that makes you feel pretty good about yourself.</closemsg>
            <onopen type="script">
              if (GetBoolean(player, "restore")) {
                msg ("On second thought, you decide to look at the labels a little closer.")
              }
            </onopen>
            <object name="bottles">
              <inherit name="editor_object" />
              <alias>bottle of water</alias>
              <usedefaultprefix />
              <prefix type="string"></prefix>
              <takemsg>You grab a bottle for yourself.</takemsg>
              <dropmsg>You drop the bottle.</dropmsg>
              <alt>water; potion; mana</alt>
              <empty type="boolean">false</empty>
              <take type="script">
                if (Got(travel_bag)) {
                  MoveObject (bottles, travel_bag)
                  msg ("You grab a bottle and stuff it into the travel bag. This could be useful.")
                }
                else {
                  MoveObject (bottles, player)
                  msg ("You grab a bottle for yourself. Score! Company freebie!")
                }
              </take>
              <look type="script"><![CDATA[
                if (not GetBoolean(player, "restore")) {
                  msg ("A bottle of water. Bleh. Not that impressive really.")
                }
                else if (GetBoolean(player, "restore")) {
                  bottles.alias = bottle of liquid mana
                  msg ("You study the label more closely and realize this is the <color color=\"Blue\">liquid mana</color> that file was talking about. So these are good for restoring Caleb's <color color=\"Red\">magical power</color>? Makes about as much sense as everything else, you guess.")
                }
              ]]></look>
              <drink type="script"><![CDATA[
                if (not GetBoolean(player, "restore")) {
                  msg ("You look at the bottle and wonder what you were thinking, trying to drink this thing. Robots don't need water.")
                }
                else if (GetBoolean(player, "restore")) {
                  healing_amount = 200
                  restore_player (healing_amount)
                  msg ("You open the bottle and drink the contents. Or rather, Caleb does. You're sitting there wondering if you look dumb holding your hand out like you actually have something there, and then you wonder what liquid mana tastes like.<br/><br/>200 TP restored!")
                  bottles.empty = True
                }
                else if (bottles.empty = true) {
                  msg ("It's empty.")
                }
              ]]></drink>
              <ontake type="script">
                if (Got(travel_bag)) {
                  MoveObject (bottles, travel_bag)
                }
                else {
                }
              </ontake>
              <ondrop type="script">
                SetObjectFlagOn (bottles, "dropped")
              </ondrop>
            </object>
          </object>
          <object name="sink">
            <inherit name="editor_object" />
            <alias>sink</alias>
            <look>A metal sink with one of those flexible faucets your mom tends to rave about. It's very shiny and looks really expensive for a sink.</look>
            <alt>basin</alt>
          </object>
          <object name="counter">
            <inherit name="editor_object" />
            <alias>counters</alias>
            <look>Several counters made of smooth marble and wood. They look classy and expensive, just the kind of thing for a major multi-billion dollar evil corporation. Caleb gives a low whistle in your ear that you roll your eyes at; why would he care about counters anyway?</look>
          </object>
          <object name="microwave">
            <inherit name="editor_object" />
            <alias>microwave</alias>
            <look><![CDATA[A chic black microwave oven. The keypad is touch sensitive and it has a digital timer. There are even preset keys for various common uses, like a popcorn timer and a reheating option. Your mom would go nuts if she saw a microwave like this, the jealousy would just eat her alive. Knowing where it is, the thing is probably more expensive than your game collection, and you have a <b>ton</b> of games.]]></look>
          </object>
        </object>
        <exit alias="in" to="kitchen">
          <inherit name="indirection" />
          <suffix>the kitchen area</suffix>
        </exit>
        <object name="juicebar">
          <inherit name="editor_object" />
          <alias>juice bar</alias>
          <look>A juice bar styled to look like a regular bar from any tavern or club. The bottles of drinks are all various juices and nectars. It kind of makes you thirsty to look at.</look>
        </object>
        <object name="couch">
          <inherit name="editor_object" />
          <inherit name="container_open" />
          <alias>sofa</alias>
          <look>A big, plush, comfy-looking sofa set right in front of that sweet plasma TV. It would totally drive your mom crazy if she had one of these in the living room. You want to just throw yourself onto it, relax, and watch some movies. Or maybe play some sports games. You kinda hope you can play a game within this game.</look>
          <displayverbs>Look at; Take; Search</displayverbs>
          <close type="boolean">false</close>
          <open type="boolean">false</open>
          <alt>couch</alt>
          <sit type="script"><![CDATA[
            msg ("You flop onto the couch and wince at the sound of it protesting and cracking under Caleb's weight. Oh, right. Android means heavy metal body.<br/><br/><i>(I am not paying for the damage to this.)</i> Caleb suddenly butts in and you lift an eyebrow at the random statement. <i>(How strange. It was like a compulsion to say that. It may be related to the files I can't fully access without a soul.)</i> Silently, you agree that it's weird.")
          ]]></sit>
          <search type="script"><![CDATA[
            if (not GetBoolean(couch, "greencard")) {
              greencard.scenery = false
              msg ("Searching the sofa usually gets you stuff like change and the TV remote at home, so maybe the same is here? You pull the cushions off the couch and reveal a <color color=\"Red\">Green Keycard</color> underneath them. Some poor sap must have lost it here during break.")
              SetObjectFlagOn (couch, "greencard")
            }
            else {
              msg ("You scrounge around in the sofa looking for something more, but there doesn't seem to be any new things to find. Oh well, you doubt someone would be able to hide a soul in the couch anyway.")
            }
          ]]></search>
          <object name="greencard">
            <inherit name="editor_object" />
            <alias>Green Keycard</alias>
            <look>A green colored keycard with a magnetic strip. It says 'Level 2' on it.</look>
            <alt>green card; greencard</alt>
            <take />
            <takemsg>You take the Green Keycard. This should come in handy.</takemsg>
            <dropmsg>You toss the Green Keycard away. Don't need that anymore.</dropmsg>
            <scenery />
          </object>
        </object>
        <object name="television">
          <inherit name="editor_object" />
          <inherit name="switchable" />
          <alias>plasma television</alias>
          <look>It's a massively huge plasma TV mounted on the wall. Sweet! Something like that in real life would cost a fortune. It's amazing how detailed this thing is.</look>
          <switchedondesc>The TV's on. That's right; you're wasting electricity. Such a bad, bad thing to do.</switchedondesc>
          <switchedoffdesc>The TV is currently off.</switchedoffdesc>
          <displayverbs>Look at; Take; Switch on; Switch off; Watch</displayverbs>
          <switchonmsg>On a whim, you reach out and poke the power button. The TV comes on in a beautiful blossom of light and color. Caleb just sighs in resignation.</switchonmsg>
          <switchoffmsg>You turn the television off by habit. Caleb hums a little note of appreciation. For some reason, that makes you feel pretty good about yourself.</switchoffmsg>
          <alt>tv; telly</alt>
          <Watch type="script"><![CDATA[
            if (IsSwitchedOn(television)) {
              msg ("<br/>A familiar news anchorwoman is in the middle of her report. The letters REC in the corner of the screen tell you that this was previously recorded and is just playing back video. You wonder why the woman looks familiar before realizing that she's a real person, an anchorwoman that you see every night on the news. She's pretty famous, but she's also new, so seeing her in this game is a bit jarring.<br/><br/>\"...anxiously awaiting the big reveal of Project: GateKeeper. Sources say this miracle of technology will revolutionize the industry....\"<br/><br/>\"Boring.\" you declare at the screen. Caleb just sighs in your ear, a vaguely exasperated sound.")
            }
            else {
              msg ("<br/>(Explain to me the reasoning behind watching a television that is not activated.) Caleb demands in that same even tone your mother takes when she catches you doing something stupid.<br/><br/>\"I'm wondering if a cheat code is hidden here.\" you return absently, squinting at the dark screen.<br/><br/>(I will spare you the effort in futility. There is not. Stop that.)")
            }
          ]]></Watch>
          <watch type="script"><![CDATA[
            if (not IsSwitchedOn(television)) {
              msg ("<i>(Explain to me the reasoning behind watching an inactive device, " + player.playername + ".)</i> Caleb demands flatly after a couple of minutes of you staring at the black screen.<br/><br/>\"I kind of hoped a cheat code would appear after a while. Some games have them set up like that.\" you explain to him.<br/><br/><i>(Ah. Let me make that effort easier for you. There is none.)</i> Sometimes, this character can be <b>such</b> a buzzkill....")
            }
            else if (IsSwitchedOn(television)) {
              msg ("<br/>The image of a pretty anchorwoman takes you by surprise. You know that lady; she's a new face on the news you watch with your mom every night, but she's already pretty famous. The words <i>'Previously Recorded'</i> in the corner lets you know that this is a video on loop, but you've already missed a lot of her reporting from the shock of seeing her.<br/><br/><i>\"...eagerly awaiting the unveiling of <color color=\"Red\">Project: Gatekeeper</color>, which will revolutionize the robotics industry....\"</i><br/><br/>\"Does that mean there's more of you?\" you ask of Caleb. He's been awful quiet ever since you turned this thing on.<br/><br/><i>(For both our sakes, I hope not.)</i> he finally returns quietly, <i>(I was built around the concept of preservation of life and knowledge, with the two to be inclusive. Another like me with a different core concept...)</i> He doesn't finish the thought. He doesn't have to; you've seen enough movies to know where that would go.")
            }
          ]]></watch>
          <onswitchoff type="script">
            IncScore ("saving elec TV", 20)
          </onswitchoff>
        </object>
        <object name="walls">
          <inherit name="editor_object" />
          <scenery />
          <look>The walls are painted soft beige and make you feel relaxed when you look at them. You wonder if your mom might like that color in the living room.</look>
          <alt>wall; wallpaper</alt>
        </object>
        <object name="carpet">
          <inherit name="editor_object" />
          <scenery />
          <look><![CDATA[The floor is covered in a dark maroon carpet that absorbs the sound of Caleb's steps. Now <b>that's</b> money being spent!]]></look>
          <alt>floor</alt>
        </object>
      </object>
      <exit name="Violet Door" alias="northeast" to="violetroom">
        <inherit name="northeastdirection" />
        <locked />
        <lockmessage>The door is locked. You'll need the Violet Keycard to open it.</lockmessage>
        <prefix type="string"></prefix>
        <suffix>to the Violet Lab</suffix>
      </exit>
      <exit name="Indigo Door" alias="southeast" to="indigoroom">
        <inherit name="southeastdirection" />
        <locked />
        <lockmessage>The door is locked. You'll need the Indigo Keycard to open it.</lockmessage>
        <prefix type="string"></prefix>
        <suffix>to the Indigo Lab</suffix>
      </exit>
      <exit name="Lounge Door" alias="west" to="lounge">
        <inherit name="westdirection" />
        <prefix type="string"></prefix>
        <suffix>to the Lounge</suffix>
      </exit>
      <object name="violet_reader">
        <inherit name="editor_object" />
        <scenery />
        <alias>Violet Keycard Reader</alias>
        <look>A card reader. Nothing special about it.</look>
        <useanything type="script">
          msg ("It doesn't look like it'll take anything else. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary" />
      </object>
      <object name="indigo_reader">
        <inherit name="editor_object" />
        <scenery />
        <alias>Indigo Card Reader</alias>
        <look>A card reader. Nothing special about it.</look>
        <useanything type="script">
          msg ("It doesn't look like it'll take anything else. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary" />
      </object>
      <object name="red_reader">
        <inherit name="editor_object" />
        <look>A card reader. Nothing special about it.</look>
        <scenery />
        <alias>Red Keycard Reader</alias>
        <useanything type="script">
          msg ("It doesn't look like it'll take anything else. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary" />
      </object>
    </object>
    <object name="ground_elevator_stairs">
      <inherit name="editor_room" />
      <alias>Ground Floor - Elevator/Stairwell</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>at the</prefix>
      <description><![CDATA[<br/>At this end of the hallway is a single elevator and a door to the stairs. Beside both are card readers, just like the ones you've been running into lately. The elevator also has a sign, 'Express'.]]></description>
      <descprefix>You are</descprefix>
      <enter type="script">
        scenery_shift
      </enter>
      <object name="elevator_reader">
        <inherit name="editor_object" />
        <alias>Elevator Card Reader</alias>
        <look>The card reader for the express elevator.</look>
        <alt>elevator reader</alt>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <scenery />
        <useanything type="script">
          msg ("Doesn't look like the reader will take this. Oh well.")
        </useanything>
        <useon type="scriptdictionary">
          <item key="aquacard">
            msg ("You try the Aqua Keycard on the reader. It gives you back an error beep and the light stays red. Doesn't look like this is the right card.")
          </item>
          <item key="greencard">
            msg ("You try the Green Keycard on the reader. It gives you back and error beep and the light stays red. Doesn't look like this is the right card.")
          </item>
        </useon>
      </object>
      <object name="express_elevator">
        <alias>Express Elevator</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <look type="script">
          msg ("An elevator with the sign 'Express' hanging over where the numbers should be showing for the different floors.")
          elevator_reader.scenery = false
        </look>
        <exit alias="out" to="ground_elevator_stairs">
          <inherit name="outdirection" />
        </exit>
      </object>
      <exit name="Elevator Doors" alias="in" to="express_elevator">
        <inherit name="indirection" />
        <locked />
        <lockmessage>The doors won't open and there's no button to press to call for the elevator. There's a card reader beside it, too. The light is red.</lockmessage>
        <suffix>the elevator</suffix>
      </exit>
      <object name="ground_stairs">
        <alias>Ground Floor - Stairwell</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <description><![CDATA[<br/>There are several flights of stairs ascending to the top of the building and one flight descending to another door. It's eerily quiet, and the echoing sounds of Caleb's footsteps on the metal floor makes your hair stand on end. You're half-expecting the game to suddenly change genres and become a survival horror with fungus-brainwashed zombies or something. The idea makes you grin; <b>that</b> would be pretty cool.]]></description>
        <descprefix>You are in</descprefix>
        <look type="script">
          msg ("The door to the stairs is just a few feet away from the elevator. It also has a card reader beside it. You wonder why practically every door has one of these. Would the emergency exits have them too?")
          stair_reader1.scenery = false
        </look>
        <beforefirstenter type="script">
          ClearScreen
        </beforefirstenter>
        <enter type="script">
          stairscene_shift
        </enter>
        <exit alias="south" to="ground_elevator_stairs">
          <inherit name="southdirection" />
        </exit>
        <exit alias="down" to="underground_stairwell">
          <inherit name="downdirection" />
          <suffix>the stairs to the basement</suffix>
        </exit>
        <exit alias="up" to="second_floor_stairwell">
          <inherit name="updirection" />
        </exit>
        <object name="walls1">
          <inherit name="editor_object" />
          <scenery />
          <alias>walls</alias>
          <look>The walls are textured white concrete. They would probably feel rough but passing Caleb's hand over the surface just gets you data on what the wall is made of, its temperature and some faint energy readings. For some reason, that kind of makes you feel a little sad for him.</look>
          <alt>wall</alt>
        </object>
        <object name="floor1">
          <inherit name="editor_object" />
          <scenery />
          <alias>floor</alias>
          <look>The floor and stairs are all made of metal, stainless steel and very cold.</look>
        </object>
      </object>
      <object name="stair_reader1">
        <inherit name="editor_object" />
        <alias>Ground Floor - Stairs Card Reader</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <look>A card reader for the stairs. This is getting to be a bit much.</look>
        <alt>stair reader; stairs reader</alt>
        <scenery />
        <useanything type="script">
          msg ("Hmm, doesn't look like it'll take that. Stubborn card reader....")
        </useanything>
        <useon type="scriptdictionary">
          <item key="aquacard">
            UnlockExit (Stairwell Door)
            msg ("You use the Aqua Keycard on the reader. To your surprise, there's a soft 'Beep!' and the light turns green. So this Keycard not only opens the Aqua Lab but the door to the stairs too? That seems... odd.")
          </item>
          <item key="greencard">
            msg ("You try the Green Keycard on the reader. It gives an error beep and the light stays red. Looks like this isn't the right card.")
          </item>
        </useon>
      </object>
      <exit name="Stairwell Door" alias="north" to="ground_stairs">
        <inherit name="northdirection" />
        <prefix type="string"></prefix>
        <locked />
        <lockmessage>The door to the stairs is locked and there's a card reader beside it as well. All these readers are starting to become annoying.</lockmessage>
        <suffix>through the stairwell door</suffix>
      </exit>
      <exit alias="south" to="hallway1">
        <inherit name="southdirection" />
        <suffix>to Hallway A</suffix>
      </exit>
    </object>
  </object>
  <command name="cast">
    <pattern>cast #text#</pattern>
    <unresolved>No such spell.</unresolved>
    <script><![CDATA[
      switch (text) {
        case ("Nano-Aid") {
          healing_amount = 30
          player.mana = player.mana-15
          heal_player (healing_amount)
          msg ("You cast Nano-Aid to repair some of Caleb's surface damage. Handy, but it doesn't take care of the System Damage.")
        }
        case ("Luna Flare") {
          switch (object.health) {
            case (secguard.health) {
              if (secguard.health>0) {
                msg (" An intense burst of magic light erupts from within the enemy's body. It might look like much, but they're squirming in pain.<br/><br/>25 Damage dealt!")
                secguard.health = secguard.health-25
                player.mana = player.mana-10
              }
              else {
                msg ("(There's no point in casting an attack spell on an enemy that's already fallen.) Caleb tells you in an annoyed tone.")
              }
            }
            case (sec_guard2.health) {
              if (sec_guard2.health>0) {
                msg (" An intense burst of magic light erupts from within the enemy's body. It might look like much, but they're squirming in pain.<br/><br/>25 Damage dealt!")
                sec_guard2.health = sec_guard2.health-25
                player.mana = player.mana-10
              }
              else {
                msg ("(There's no point in casting an attack spell on an enemy that's already fallen.) Caleb tells you in an annoyed tone.")
              }
            }
            default {
              msg ("<i>(Why do you insist on trying to damage me, " + player.playername + "?)</i> Caleb sighs in dismay.")
            }
          }
        }
        default {
          msg ("(I told you to be exact. I am getting errors from you mispronouncing words!) Caleb gripes. Sheesh, touchy, touchy.")
        }
      }
    ]]></script>
  </command>
  <verb name="scan">
    <property>scan</property>
    <pattern>scan #object#</pattern>
    <defaultexpression>"You can't scan " + object.article + "."</defaultexpression>
  </verb>
  <object name="stairwell">
    <inherit name="editor_room" />
    <object name="underground_stairwell">
      <alias>Basement Stairwell</alias>
      <look>The steps lead to a large metal door with a darkened window. A card reader is beside it, like everywhere else in this crazy place.</look>
      <description><![CDATA[<br/>You find yourself standing in front of a large metal door after coming down the stairs. Pushing on it doesn't get you anywhere. There's another card reader beside the door, and you're getting pretty sick of seeing the same machine over and over again.]]></description>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <enter type="script">
        stairscene_shift
      </enter>
      <exit alias="up" to="ground_stairs">
        <inherit name="updirection" />
        <suffix>the stairs to the Second Floor</suffix>
      </exit>
      <object name="basement_reader">
        <inherit name="editor_object" />
        <alias>Basement Card Reader</alias>
        <look>A card reader for the basement.</look>
        <scenery type="boolean">false</scenery>
        <useanything type="script">
          msg ("Doesn't look like the reader will take it. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary" />
      </object>
      <exit name="Basement Door" alias="north" to="basement">
        <inherit name="northdirection" />
        <locked />
        <prefix type="string"></prefix>
        <suffix>to the Underground Level</suffix>
        <lockmessage>The door is locked. There is a card reader beside it with a red light on.</lockmessage>
      </exit>
      <object name="door2">
        <inherit name="editor_object" />
        <scenery />
        <alias>door</alias>
        <look>A thick metal door. Wonder what's behind it?</look>
      </object>
    </object>
    <object name="second_floor_stairwell">
      <inherit name="editor_room" />
      <alias>Second Floor - Stairwell</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <description><![CDATA[<br/>This area has stairs going down and going up. There's a door with a sign that says, 'Second Floor' on it. There's also a card reader beside it. So many card readers....]]></description>
      <enter type="script">
        stairscene_shift
      </enter>
      <exit alias="down" to="ground_stairs">
        <inherit name="downdirection" />
        <suffix>the stairs to the Ground Floor</suffix>
      </exit>
      <object name="second_floor_reader">
        <inherit name="editor_object" />
        <alias>Second Floor Card Reader</alias>
        <scenery type="boolean">false</scenery>
        <look>A card reader for the door to the second floor.</look>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <useanything type="script">
          msg ("Hmm. Doesn't look like it'll take that. Stubborn card reader.")
        </useanything>
        <useon type="scriptdictionary">
          <item key="aquacard">
            msg ("You try swiping the Aqua Keycard through the reader. There's an error beep and the light stays red. Looks like this isn't the right card to use.")
          </item>
          <item key="greencard">
            UnlockExit (Second Floor Door)
            msg ("You try using the Green Keycard on the reader. There's a soft Beep! and the light turns green. A click sounds as the door unlocks.")
          </item>
        </useon>
      </object>
      <exit name="Second Floor Door" alias="north" to="hallway_A">
        <inherit name="northdirection" />
        <locked />
        <suffix>to the Second Floor</suffix>
        <lockmessage>The door's locked. There's a card reader beside it with a red light.</lockmessage>
      </exit>
    </object>
  </object>
  <object name="basement">
    <inherit name="editor_room" />
    <alias>Underground Level</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <exit alias="south" to="underground_stairwell">
      <inherit name="southdirection" />
    </exit>
  </object>
  <object name="second_floor">
    <inherit name="editor_room" />
    <object name="hallway_A">
      <inherit name="editor_room" />
      <alias>Second Floor - Hallway A</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <description><![CDATA[<br/>The hallway is long and straight, ending in a T-junction at the very end. There are two doors on each side of the hallway, and each one has a card reader next to it. All these readers are so annoying. The stairwell door is in the southern part of the hall. Oddly enough, the elevator doors aren't there.]]></description>
      <firstenter type="script"><![CDATA[
        msg ("<br/>\"Why are there so many card readers? It's getting annoying having to keep track of which card goes where.\" you complain, \"This game needs a better organization system, and maybe some trophies.\"<br/><br/><i>(What are you talking about, " + player.playername + "?)</i> Caleb asks with disbelief in his voice, <i>(Please, remain on task! We must find my missing soul as quickly as possible! If you do not wish to help me locate my possessions and files, I can get them on my own once you have restored my soul.)</i><br/><br/>\"Ah hah!\" you declare triumphantly, pointing at your computer screen and thus making Caleb point at empty air, \"So there <b>is</b> a <color color=\"Green\">secret score system</color> buried in this game! It has something to do with me <color color=\"Blue\">doing things you like</color>! That's why you keep bugging me to follow the storyline!\"<br/><br/><i>(Whatever. Believe what you want, as long as it gets the job done.)</i> he just mutters under his breath.")
      ]]></firstenter>
      <enter type="script">
        EnableTimer (security)
        scenery_shift
      </enter>
      <onexit type="script">
        DisableTimer (security)
      </onexit>
      <exit alias="south" to="second_floor_stairwell">
        <inherit name="southdirection" />
        <suffix>into the stairwell</suffix>
      </exit>
      <object name="fire_lab">
        <alias>Fire Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <look type="script">
          msg ("The door to this lab has a black square on it, with the image of a red flame in its center. There is a card reader next to the door.")
          fire_reader.scenery = false
        </look>
        <enter type="script">
          scenery_shift
        </enter>
        <exit alias="west" to="hallway_A">
          <inherit name="westdirection" />
          <suffix>into Hallway A</suffix>
        </exit>
      </object>
      <object name="fire_reader">
        <inherit name="editor_object" />
        <alias>Fire Keycard Reader</alias>
        <scenery />
        <look>A card reader. This one has a little sticker on it that looks like a hot dog on a stick. Someone around here has a sense of humor....</look>
      </object>
      <object name="water_lab">
        <alias>Water Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <look type="script">
          msg ("The door to a lab has a black square on it, with the image of an ocean wave in the center.")
          water_reader.scenery = false
        </look>
        <enter type="script">
          scenery_shift
        </enter>
        <exit alias="east" to="hallway_A">
          <inherit name="eastdirection" />
          <suffix>into Hallway A</suffix>
        </exit>
      </object>
      <object name="water_reader">
        <inherit name="editor_object" />
        <alias>Water Keycard Reader</alias>
        <scenery />
        <look>A card reader. Nothing much to it.</look>
      </object>
      <object name="earth_lab">
        <alias>Earth Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <look type="script">
          msg ("The door to this lab has a black square on it, with the image of a yellow rock in the center.")
          earth_reader.scenery = false
        </look>
        <enter type="script">
          scenery_shift
        </enter>
        <firstenter type="script"><![CDATA[
          ClearScreen
          msg ("If you've gotten into this room, then it means that the Earth Keycard drop script worked properly and I'm thankful for that.<br/><br/>Thank you for playing this continued demo of <i>System Restore</i>. I hope there were no new bugs but if there were, please let me know either on the forum at www.textadventure.co.uk or at my art site at www.digi-dolphin.deviantart.com and drop a line in my journal.<br/><br/>Hope to see you again in the next update!")
          finish
        ]]></firstenter>
        <exit alias="west" to="hallway_A">
          <inherit name="westdirection" />
          <suffix>into Hallway A</suffix>
        </exit>
      </object>
      <object name="earth_reader">
        <inherit name="editor_object" />
        <alias>Earth Keycard Reader</alias>
        <scenery />
        <look>A card reader. Nothing much to it....</look>
        <search type="script"><![CDATA[
          msg ("Someone scratched their initials into the side of the reader. <color color=\"Blue\">A.W.D.</color> Huh. What a weird Easter Egg.")
        ]]></search>
        <useon type="scriptdictionary">
          <item key="earth_keycard">
            UnlockExit (earth door)
            msg ("You slide the Earth Keycard through the reader. It gives a soft beep and the light turns green.")
          </item>
        </useon>
      </object>
      <object name="wind_lab">
        <alias>Wind Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <look type="script">
          msg ("The door to this lab has a black square on it, with a few lines that you suppose means 'wind' etched in the center.")
          wind_reader.scenery = false
        </look>
        <enter type="script">
          scenery_shift
        </enter>
        <exit alias="east" to="hallway_A">
          <inherit name="eastdirection" />
          <suffix>into Hallway A</suffix>
        </exit>
      </object>
      <object name="wind_reader">
        <inherit name="editor_object" />
        <scenery />
        <alias>Wind Keycard Reader</alias>
        <look>A card reader. Nothing much to it.</look>
      </object>
      <exit name="Fire Door" alias="east" to="fire_lab">
        <inherit name="eastdirection" />
        <locked />
        <lockmessage>The door is locked. Looks like you'll be looking for another keycard.</lockmessage>
        <suffix>to the Fire Lab</suffix>
      </exit>
      <exit name="water door" alias="west" to="water_lab">
        <inherit name="westdirection" />
        <locked />
        <lockmessage>The door is locked. Looks like you need a keycard.</lockmessage>
        <suffix>to the Water Lab</suffix>
      </exit>
      <exit name="wind door" alias="southwest" to="wind_lab">
        <inherit name="southwestdirection" />
        <locked />
        <lockmessage>The door is locked. Better find a keycard.</lockmessage>
        <suffix>to the Wind Lab</suffix>
      </exit>
      <exit name="earth door" alias="southeast" to="earth_lab">
        <inherit name="southeastdirection" />
        <locked />
        <lockmessage>The door is locked. Looks like you have another keycard to find.</lockmessage>
        <suffix>to the Earth Lab</suffix>
      </exit>
      <exit alias="north" to="second_floor_junction">
        <inherit name="northdirection" />
        <suffix>to the T-Junction</suffix>
      </exit>
    </object>
    <object name="second_floor_junction">
      <alias>T-Junction</alias>
      <scenery />
      <description><![CDATA[<br/>You stand in the junction at the end of Hallway A. There are only three directions to go from here.]]></description>
      <enter type="script">
        EnableTimer (security)
        scenery_shift
      </enter>
      <onexit type="script">
        DisableTimer (security)
      </onexit>
      <exit alias="south" to="hallway_A">
        <inherit name="southdirection" />
        <suffix>to Hallway A</suffix>
      </exit>
      <exit alias="west" to="hallway_B">
        <inherit name="westdirection" />
        <suffix>to Hallway B</suffix>
      </exit>
      <exit alias="east" to="hallway_C">
        <inherit name="eastdirection" />
        <suffix>to Hallway C</suffix>
      </exit>
    </object>
    <object name="hallway_B">
      <inherit name="editor_room" />
      <alias>Second Floor - Hallway B</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <description><![CDATA[<br/>This short hallway has three rooms, but only one of them has a card reader beside it. One door is on the south side of the hall. The two doors without readers are along the northern side. At the end of the hallway is a dead end. Cameras are still mounted all over the place, so it's probably a good idea not to stand around forever.]]></description>
      <enter type="script">
        EnableTimer (security)
        scenery_shift
      </enter>
      <onexit type="script">
        DisableTimer (security)
      </onexit>
      <firstenter type="script"><![CDATA[
        msg ("<br/><i>(Do you remember when I spoke of a friend in green?)</i> Caleb asks suddenly. You nod your head while watching the cameras moving. <i>(I am not sure why I said that. In the memories I have access to without my soul, there is no mention of a friend in green. My creator wore green, but I thought of him as a father, not a friend.)</i><br/><br/>\"Maybe that's something in the files you can't read yet. Say, how far are you in fixing those damaged ones?\" you return.<br/><br/><i>(Almost done. Once they have been repaired, I may be able to shed light on what happened to me. I hope.)</i> he mumbles. This game is really good; you really feel for the guy when he says that.")
      ]]></firstenter>
      <exit alias="east" to="second_floor_junction">
        <inherit name="eastdirection" />
        <suffix>to the T-Junction</suffix>
      </exit>
      <object name="plasma_lab">
        <alias>Lightning Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <alt>plasma lab</alt>
        <look type="script">
          msg ("The door to this lab has a black square on it, with the image of a lightning bolt in the center. Caleb whimpers a little at the sight of it. There's a card reader beside the door.")
          plasma_reader.scenery = false
        </look>
        <enter type="script">
          scenery_shift
        </enter>
      </object>
      <object name="plasma_reader">
        <inherit name="editor_object" />
        <scenery />
        <look>A card reader. Nothing much to it.</look>
        <alias>Lightning Keycard Reader</alias>
        <alt>lightning reader; plasma reader</alt>
      </object>
      <object name="janitor_closet">
        <look>The door to this room has the picture of a man with a mop and bucket. Hmm, not that hard to figure out what this could be then. There doesn't appear to be a card reader beside it, so it should be easy to get into.</look>
        <alias>Janitor's Closet</alias>
        <description><![CDATA[<br/>The janitor's closet is actually kind of roomy. There are many shelves stacked with cleaning supplies and tools. Jugs of chemicals of varying colors and covered in bright warning labels line the walls, with enough mops, brooms, buckets and towels to arm an entire cleaning crew.]]></description>
        <enter type="script">
          scenery_shift
        </enter>
        <object name="janitor_shelf">
          <inherit name="editor_object" />
          <inherit name="plural" />
          <inherit name="container_open" />
          <alias>shelves</alias>
          <look>A wall of shelves full of jugs of chemicals, cleaning supplies, tools and towels. That's a whole lot of stuff to clean this building with, though Caleb keeps muttering that he got along fine with just soap and water. Seriously, who builds a robot angel, gives him superhuman strength and magic powers, and then programs him to clean house?</look>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>a lot of</prefix>
          <contentsprefix type="string"></contentsprefix>
          <close type="boolean">false</close>
          <open type="boolean">false</open>
          <hidechildren />
          <search type="script">
            msg ("You search the shelves out of curiosity and find a small keyring with a key on it hidden behind one of the containers of cleaning fluid.")
            janitor_keyring.scenery = false
          </search>
          <object name="janitor_chemicals">
            <inherit name="editor_object" />
            <inherit name="plural" />
            <alias>chemical containers</alias>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>several</prefix>
            <look>Several jugs and containers of industrial strength cleaning chemicals. There are many bright hazard warning labels slapped all over them. It kind of makes you want to see if you can make a bonfire with them. Caleb doesn't seem to like them very much, muttering how anyone could live in a place that keeps getting coated with poisonous things is beyond his understanding.</look>
            <alt>cleaners; cleansers</alt>
          </object>
          <object name="janitor_keyring">
            <inherit name="editor_object" />
            <alias>spare key</alias>
            <usedefaultprefix />
            <scenery />
            <prefix type="string"></prefix>
            <look>A small key on a ring with the word 'Spare' engraved on it. It must be a copy of one of the janitor's keys, but what does it open?</look>
            <take />
            <takemsg>For lack of anything else to do, and because keys mean doors that need opening, you pocket the key.</takemsg>
            <dropmsg>Well, this might not be as handy as you thought. You toss the key away.</dropmsg>
          </object>
        </object>
        <object name="janitor_mops">
          <inherit name="editor_object" />
          <inherit name="plural" />
          <alias>mops</alias>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>a row of</prefix>
          <look>Several mops all lined up in a neat row next to some buckets and brooms.</look>
          <object name="weapon_mop">
            <inherit name="editor_object" />
            <alias>dry mop</alias>
            <usedefaultprefix />
            <prefix>a</prefix>
            <scenery />
            <look>A dry mop that looks like it hasn't been used at all yet. Caleb seems to like it.</look>
            <dropmsg>You set the mop against the wall and leave it there. Maybe a security guard will trip over it.</dropmsg>
          </object>
        </object>
        <exit alias="east" to="hallway_B">
          <inherit name="eastdirection" />
          <suffix>to the hallway</suffix>
        </exit>
      </object>
      <object name="bathroom">
        <alias>Co-Ed Restroom</alias>
        <look><![CDATA[The door to this room has a plaque with the image of a man and a woman on it. If it's a restroom, then people must be <b>really</b> comfortable with each other here to share it.]]></look>
        <description><![CDATA[<br/>There are two doors inside the little break room, facing opposite each other. One has the men's symbol, the other has the women's. Okay, so this room serves as a break room before dividing up to the men's and women's restrooms. How complicated. <br/><br/>There are also a few chairs and a small table with some magazines, for those who have to wait their turn.]]></description>
        <usedefaultprefix />
        <object name="mens_restroom">
          <alias>Men's Restroom</alias>
          <description><![CDATA[<br/>The men's restroom. It looks very clean and fancy. There are a few stalls with stainless steel dividers, a row of sinks with soap dispensers and a shelf of fluffy white towels to dry with. No paper towels for the rich and powerful, you suppose.]]></description>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>the</prefix>
          <broken_door type="boolean">false</broken_door>
          <alt>men's room</alt>
          <look type="script">
            if (mens_restroom.broken_door = true) {
              msg ("The door to the men's restroom. It's been broken open so you can pretty much ignore the reader beside it.")
              mens_reader.scenery = false
            }
            else {
              msg ("The door to the men's restroom. There's a strange reader beside it.")
              mens_reader.scenery = false
            }
          </look>
          <attack type="script">
            msg ("It takes you a bit to realize you're in the body of an android with superhuman strength and power. Who needs palm-print scanners?! You kick the door and it flies open. Caleb just sighs at your cackling indulgence of destruction.")
            UnlockExit (mens door)
            mens_restroom.broken_door = true
          </attack>
          <object name="mens_stalls">
            <inherit name="editor_object" />
            <inherit name="plural" />
            <alias>restroom stalls</alias>
            <look><![CDATA[Stainless steel dividers are put up for the sake of privacy between each of the facilities. You're pretty sure robots don't need to use the bathroom, so you don't bother poking around there. Then you wonder aloud when was the last time you had a bathroom break. <br/><br/><i>(I would rather you did not leave just yet. You are still in control of my body and I am uncertain that you will be able to maintain the neuro-link if you abandon me now.)</i> Caleb replies worriedly, <i>(I do not wish to be left alone and helpless in a bathroom.)</i> So much for that.]]></look>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>the</prefix>
          </object>
          <object name="mens_sinks">
            <inherit name="editor_object" />
            <inherit name="surface" />
            <inherit name="plural" />
            <alias>bathroom sinks</alias>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>some</prefix>
            <look>A row of bone-white sinks set into a marble top and lined with individual soap dispensers. The extravagance of it makes you want to gag.</look>
            <hidechildren />
            <contentsprefix>with</contentsprefix>
            <alt>wash basin</alt>
            <object name="soap_dispenser">
              <inherit name="editor_object" />
              <alias>soap dispenser</alias>
              <usedefaultprefix type="boolean">false</usedefaultprefix>
              <prefix>a</prefix>
              <look>A small dispenser of fragrant soap. The label boasts it has vitamins and natural oils to keep your hands smooth and moisturized. It says it smells a bit like strawberries, but Caleb remarks that he can't actually smell anything. He can, however, identify the chemical markers of the soap's ingredients, which might have been cool if you hadn't felt bad that the guy was missing out.</look>
              <takemsg>You take the dispenser of soap. Never know when you might need to wash a robot's hands.</takemsg>
              <dropmsg>You drop the dispenser of soap. It's not like you have to worry over Caleb being covered in germs or anything.</dropmsg>
              <alt>soap bottle</alt>
              <take type="script"><![CDATA[
                if (Got(travel_bag)) {
                  msg ("You take the dispenser of soap. Never know when you might need to wash a robot's hands.")
                  MoveObject (soap_dispenser, travel_bag)
                  IncScore ("soap not on a rope", 10)
                }
                else {
                  msg ("<i>(As nice as it would be to take that with us, we just do not have the ability to carry many items. You will have to find my <color color=\"Blue\">travel pack</color> first.)</i> Caleb remarks pointedly. Apparently, he doesn't like the idea of you stuffing everything you find in his pockets.")
                }
              ]]></take>
            </object>
          </object>
          <object name="mens_shelf">
            <inherit name="editor_object" />
            <inherit name="surface" />
            <alias>shelf</alias>
            <look>A shelf full of fluffy white towels. Your mom might like some towels like those.</look>
            <hidechildren />
            <contentsprefix>with</contentsprefix>
            <alt>shelves</alt>
            <object name="mens_towel">
              <inherit name="editor_object" />
              <usedefaultprefix type="boolean">false</usedefaultprefix>
              <prefix>a fluffy white</prefix>
              <alias>towel</alias>
              <look>A fluffy white towel. It looks so soft and warm. Caleb keeps mumbling how much he likes this thing.</look>
              <alt>wash cloth; washcloth; hand towel</alt>
              <dropmsg>You toss the towel away. Caleb gives a little whimper of loss. Man, he really likes towels or something....</dropmsg>
              <take type="script"><![CDATA[
                if (Got(travel_bag)) {
                  msg ("You decide to take one of the fluffy towels for yourself. After all, it's very important that one should always know where their towel is; it's like a law of the universe or something! Caleb hums happily.")
                  MoveObject (mens_towel, travel_bag)
                  IncScore ("know where your towel is", 15)
                }
                else {
                  msg ("<i>(As nice as it would be to take that with us, we just do not have the ability to carry many items. You will have to find my <color color=\"Blue\">travel pack</color> first.)</i> Caleb remarks with a wistful sigh, <i>(It is really a very nice towel.)</i>")
                }
              ]]></take>
            </object>
          </object>
          <exit alias="east" to="bathroom">
            <inherit name="eastdirection" />
          </exit>
        </object>
        <object name="mens_reader">
          <inherit name="editor_object" />
          <scenery />
          <alias>Men's Palm Scanner</alias>
          <first_look type="boolean">false</first_look>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>the</prefix>
          <alt>men's scanner; men's reader</alt>
          <look type="script"><![CDATA[
            if (mens_reader.first_look = false) {
              msg ("A scanner of some kind is mounted on the wall next to the door. The screen glows pale blue and a line of light scrolls across it every now and then. The faint outline of a hand is displayed, like a prompt for someone to put their hand there.<br/><br/><i>(Ah, this device must be connected to a database of employees. They place their hand on it and their fingerprints are scanned.)</i> Caleb remarks thoughtfully, <i>(It then identifies the user by their gender. If they are male, the door is unlocked. If they are female, the door remains shut.)</i><br/><br/>\"That's cool. I guess.\" you mutter, scratching your head absently.<br/><br/><i>(I recommend <b>not</b> using the scanner. I am not an employee here, and if I am detected, security may show up to detain us.)</i> he adds firmly.")
              mens_reader.first_look = true
            }
            else {
              msg ("A scanner of some kind is mounted on the wall next to the door. The screen glows pale blue and a line of light scrolls across it every now and then. The faint outline of a hand is displayed, like a prompt for someone to put their hand there. If you use it, a guard will show up.")
            }
          ]]></look>
          <use type="script">
            msg ("The scanner flashes red and the door to the break room flies open, revealing a security officer ready to take you down!")
            MoveObject (sec_guard2, player.parent)
            EnableTimer (auto_attack1)
          </use>
        </object>
        <exit name="mens door" alias="west" to="mens_restroom">
          <inherit name="westdirection" />
          <locked />
          <lockmessage>The door is locked. That strange reader must be a way to open it.</lockmessage>
          <suffix>to the Men's Restroom</suffix>
        </exit>
        <object name="womens_restroom">
          <alias>Women's Restroom</alias>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>the</prefix>
          <broken_door type="boolean">false</broken_door>
          <description><![CDATA[<br/>The women's restroom is really nice and elegant, like the kind of restroom you'd expect to see in a fancy hotel or expensive restaraunt. Stainless steel divides up the stalls for privacy and there is a row of nice sinks with soap dispensers. A shelf is stocked with fluffy white towels. No paper towels for the rich and powerful, you suppose.]]></description>
          <alt>women's room; ladies' room; ladies room; girls' restroom; girls' room; girls room</alt>
          <look type="script">
            if (womens_restroom.broken_door = true) {
              msg ("The door to the women's restroom. It's been broken open so you can pretty much ignore the reader beside it. Caleb is still a little mad that you broke it, though.")
              womens_reader.scenery = false
            }
            else {
              msg ("The door to the women's restroom. There's a strange reader beside it.")
              womens_reader.scenery = false
            }
          </look>
          <attack type="script"><![CDATA[
            msg ("It takes you a bit to realize you're in the body of an android with superhuman strength and power. Who needs palm-print scanners?! You kick the door and it flies open.<br/><br/><i>(How could you?! That is the women's restroom!)</i> Caleb cries in shock.<br/><br/>\"You look girly enough to pass.\" you reply cheerfully, and he just grumbles under his breath.")
            UnlockExit (womens door)
            womens_restroom.broken_door = true
            IncScore ("peeping tom", -10)
          ]]></attack>
          <exit alias="west" to="bathroom">
            <inherit name="westdirection" />
          </exit>
          <object name="womens_stalls">
            <inherit name="editor_object" />
            <inherit name="plural" />
            <alias>restroom stalls</alias>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>the</prefix>
            <look><![CDATA[Stainless steel dividers are put up for the sake of privacy between each of the facilities. You're pretty sure robots don't need to use the bathroom, so you don't bother poking around there. Then you wonder aloud when was the last time you had a bathroom break. <br/><br/><i>(I would rather you did not leave just yet. You are still in control of my body and I am uncertain that you will be able to maintain the neuro-link if you abandon me now.)</i> Caleb replies worriedly, <i>(I do not wish to be left alone and helpless in a bathroom.)</i> So much for that.]]></look>
          </object>
          <object name="womens_sinks">
            <inherit name="editor_object" />
            <inherit name="plural" />
            <alias>sinks</alias>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>the</prefix>
            <look>A row of bone-white sinks set into a marble top and lined with individual soap dispensers. The extravagance of it makes you want to gag.</look>
          </object>
          <object name="womens_shelf">
            <inherit name="editor_object" />
            <inherit name="surface" />
            <alias>shelf</alias>
            <look>A shelf full of fluffy white towels. Your mom might like some towels like those.</look>
            <hidechildren />
            <alt>shelves</alt>
            <object name="womens_towel">
              <inherit name="editor_object" />
              <inherit name="plural" />
              <alias>towels</alias>
              <usedefaultprefix type="boolean">false</usedefaultprefix>
              <prefix>some fluffy white</prefix>
              <look>A bunch of folded, fluffy white towels. Caleb keeps mumbling about how much he likes them.</look>
            </object>
          </object>
        </object>
        <object name="womens_reader">
          <inherit name="editor_object" />
          <first_look type="boolean">false</first_look>
          <alias>Women's Palm Scanner</alias>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>the</prefix>
          <alt>women's scanner; women's reader; ladies' scanner; ladies reader</alt>
          <look type="script"><![CDATA[
            if (womens_reader.first_look = false) {
              msg ("A scanner of some kind is mounted on the wall next to the door. The screen glows pale blue and a line of light scrolls across it every now and then. The faint outline of a hand is displayed, like a prompt for someone to put their hand there.<br/><br/><i>(Ah, this device must be connected to a database of employees. They place their hand on it and their fingerprints are scanned.)</i> Caleb remarks thoughtfully, <i>(It then identifies the user by their gender. If they are female, the door is unlocked. If they are male, the door remains shut.)</i><br/><br/>\"That's cool. I guess.\" you mutter, scratching your head absently.<br/><br/><i>(I recommend <b>not</b> using the scanner. I am not an employee here, and if I am detected, security may show up to detain us.)</i> he adds firmly.")
              womens_reader.first_look = true
            }
            else {
              msg ("A scanner of some kind is mounted on the wall next to the door. The screen glows pale blue and a line of light scrolls across it every now and then. The faint outline of a hand is displayed, like a prompt for someone to put their hand there. If you use it, a guard will show up.")
            }
          ]]></look>
          <use type="script">
            msg ("The scanner flashes red and the door to the break room flies open, revealing a security officer ready to take you down!")
            MoveObject (sec_guard2, player.parent)
            EnableTimer (auto_attack1)
          </use>
        </object>
        <exit name="womens door" alias="east" to="womens_restroom">
          <inherit name="eastdirection" />
          <locked />
          <lockmessage>The door is locked. That strange scanner beside it might be the key to unlocking it.</lockmessage>
        </exit>
        <object name="break_chairs">
          <inherit name="editor_object" />
          <inherit name="plural" />
          <scenery />
          <alias>break room chairs</alias>
          <look>A couple of upholstered chairs arranged to look elegant in the little room. You're used to seeing chairs like these while waiting for a meeting at a bank, not for waiting your turn to use the bathroom.</look>
          <alt>seats</alt>
        </object>
        <object name="break_table">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <alias>table</alias>
          <scenery />
          <look>A glass table covered in magazines. None of them look especially interesting.</look>
          <hidechildren />
          <object name="break_magazines">
            <inherit name="editor_object" />
            <inherit name="plural" />
            <alias>magazines</alias>
            <look>Several magazines lay scattered on the table. They have titles like 'Business Update' and 'The Weekly Tech Report' and other stuff that make them sound like only the geeky or the business-savvy would read. You poke around a bit in a halfhearted attempt to find something gamer-related. Nope, nothing.</look>
            <read type="script"><![CDATA[
              msg ("Against the part of you that would rather play Hiyo Puppy Online than be caught reading these things, you pick up a magazine at random and crack it open. The binding on the magazines have worn away at a particular spot, so just flipping it open brings you to the most read section.<br/><br/>\"Let's see. 'Sources at MasaTech Industries are touting the marvels that will come to the world at the unveiling of <color color=\"Red\">Project: Gatekeeper</color>. This mysterious project is undergoing final touches before being revealed at the National Science and Technology Summit at the end of the next week.'\" you read aloud and then glance at the date. Shocked, you drop the magazine. That date! That was last week's issue of this magazine!<br/><br/><i>(Is something the matter, " + player.playername + "?)</i> Caleb asks out of concern. You don't answer. What kind of crazy game is this?!")
            ]]></read>
          </object>
        </object>
        <exit alias="south" to="hallway_B">
          <inherit name="southdirection" />
          <suffix>to the hallway</suffix>
        </exit>
      </object>
      <exit alias="northwest" to="bathroom">
        <inherit name="northwestdirection" />
        <suffix>into the bathroom</suffix>
      </exit>
      <exit alias="north" to="janitor_closet">
        <inherit name="northdirection" />
        <suffix>to the janitor's closet</suffix>
      </exit>
    </object>
    <object name="hallway_C">
      <inherit name="editor_room" />
      <alias>Second Floor - Hallway C</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <enter type="script">
        EnableTimer (security)
        scenery_shift
      </enter>
      <onexit type="script">
        DisableTimer (security)
      </onexit>
      <exit alias="west" to="second_floor_junction">
        <inherit name="westdirection" />
        <suffix>to the T-Junction</suffix>
      </exit>
    </object>
  </object>
  <function name="InitScore" parameters="max, true">
    game.score_max = max
    game.score_achievements = NewStringDictionary()
    player.affection = 0
  </function>
  <function name="IncScore" parameters="str, inc">
    if (not DictionaryContains(game.score_achievements, str)) {
      player.affection = player.affection+ inc
      dictionary add (game.score_achievements, str, ToString(inc))
    }
  </function>
  <function name="damage_player" parameters="damage_amount"><![CDATA[
    player.health = player.health - damage_amount
    player.sysupdate = player.sysupdate + damage_amount
    if (player.sysupdate >= 50) {
      player.damage = player.damage + (player.sysupdate / 50)
      player.sysupdate = 0
    }
  ]]></function>
  <function name="scenery_shift">
    MoveObject (wall, player.parent)
    MoveObject (floor, player.parent)
    MoveObject (door, player.parent)
  </function>
  <function name="name_player"><![CDATA[
    msg ("<color color=\"Red\">Requesting Name...:</color><br/>")
    player.playername = GetInput()
  ]]></function>
  <function name="heal_player" parameters="healing_amount"><![CDATA[
    player.recover_amount = player.health + healing_amount
    if (player.recover_amount>=990) {
      player.health = 990
      player.recover_amount = 0
    }
    else {
      player.health = player.health + healing_amount
    }
  ]]></function>
  <function name="restore_player" parameters="healing_amount"><![CDATA[
    player.recover_amount = player.mana + healing_amount
    if (player.recover_amount>=1000) {
      player.mana = 1000
      player.recover_amount = 0
    }
    else {
      player.mana = player.mana + healing_amount
    }
  ]]></function>
  <function name="stairscene_shift">
    MoveObject (walls1, player.parent)
    MoveObject (floor1, player.parent)
  </function>
  <timer name="removal">
    <interval>15</interval>
    <script>
      if (GetBoolean(secguard, "dead")) {
        if (player.parent = secguard.parent) {
          msg ("The body suddenly vanishes in a burst of light. While you're blinking away the spots in your eyes, Caleb just makes a small huffing sound.")
          MoveObject (secguard, hidden_inv)
        }
        else {
          MoveObject (secguard, hidden_inv)
        }
        SetObjectFlagOff (secguard, "dead")
        secguard.health = 100
        if (Contains (secguard,taser)) {
          taser.scenery = True
        }
        else if (not Contains (secguard,taser)) {
          MoveObject (taser2, secguard)
        }
        DisableTimer (removal)
        if (player.parent = secguard.parent) {
          EnableTimer (security)
        }
      }
    </script>
  </timer>
  <timer name="security">
    <interval>25</interval>
    <script><![CDATA[
      if (RandomChance(50)) {
        MoveObject (secguard, player.parent)
        msg ("<br/>Uh-oh! You must have taken too long to get anywhere. Here comes a security guard to 'take care' of you!")
        DisableTimer (security)
        EnableTimer (auto_attack)
      }
      else {
        msg ("<i>(" + player.playername + ", I believe we are still very much exposed here. Have you decided where to go next?)</i> Caleb warns after a little while.")
      }
    ]]></script>
  </timer>
  <timer name="auto_attack">
    <interval>12</interval>
    <script><![CDATA[
      if (not GetBoolean(secguard, "dead")) {
        if (secguard.health > 0) {
          msg ("The guard attacks you!")
          if (Contains (secguard,taser)) {
            if (RandomChance(40)) {
              msg ("The guard used a taser on you! Caleb yells in your ear while you're trying to figure out how to fight back.")
              damage_amount = 30
              damage_player (damage_amount)
            }
            else {
              msg ("The guard attacked you bare-handed! Yikes!")
              damage_amount = 10
              damage_player (damage_amount)
            }
          }
          else if (Contains (secguard,taser2)) {
            if (RandomChance(40)) {
              msg ("The guard used a taser on you! Caleb yells in your ear while you're trying to figure out how to fight back.")
              damage_amount = 30
              damage_player (damage_amount)
            }
            else {
              msg ("The guard attacked you bare-handed! Yikes!")
              damage_amount = 10
              damage_player (damage_amount)
            }
          }
        }
      }
    ]]></script>
  </timer>
  <timer name="auto_attack1">
    <interval>12</interval>
    <script><![CDATA[
      if (not GetBoolean(sec_guard2, "dead")) {
        if (sec_guard2.health > 0) {
          msg ("The officer attacks you!")
          if (Contains (sec_guard2,baton)) {
            if (RandomChance(55)) {
              msg ("The officer clubs you with his baton. Instead of breaking on your arm, it zaps you with electricity! Caleb gives a little scream while you're still stunned by the idea of a lightning baton.")
              damage_amount = 45
              damage_player (damage_amount)
            }
            else {
              msg ("The officer clubs you with his baton. It doesn't break against Caleb's android body, but it does some wicked damage, considering the power of that blow. It even caused some System Damage!")
              damage_amount = 25
              damage_player (damage_amount)
              player.damage = player.damage+1
            }
          }
          else if (Contains (secguard,taser2)) {
            if (RandomChance(55)) {
              msg ("The officer clubs you with his baton. Instead of breaking on your arm, it zaps you with electricity! Caleb gives a little scream while you're still stunned by the idea of a lightning baton.")
              damage_amount = 45
              damage_player (damage_amount)
            }
            else {
              msg ("The officer clubs you with his baton. It doesn't break against Caleb's android body, but it does some wicked damage, considering the power of that blow. It even caused some System Damage!")
              damage_amount = 25
              damage_player (damage_amount)
              player.damage = player.damage+1
            }
          }
        }
      }
    ]]></script>
  </timer>
  <timer name="removal1">
    <interval>10</interval>
    <script>
      if (GetBoolean(sec_guard2, "dead")) {
        if (player.parent = sec_guard2.parent) {
          msg ("The body suddenly vanishes in a burst of light. While you're blinking away the spots in your eyes, Caleb just makes a small huffing sound.")
          MoveObject (sec_guard2, hidden_inv)
          if (RandomChance(70)) {
            if (not Got(earth_keycard)) {
              MoveObject (earth_keycard, player.parent)
              msg ("A small object was left behind when the officer vanished. Looks like a keycard.")
            }
          }
        }
        else {
          MoveObject (sec_guard2, hidden_inv)
        }
        SetObjectFlagOff (sec_guard2, "dead")
        sec_guard2.health = 150
        if (Contains (sec_guard2,baton)) {
          baton.scenery = True
        }
        else if (not Contains (sec_guard2,baton)) {
          MoveObject (baton1, sec_guard2)
        }
        DisableTimer (removal1)
      }
    </script>
  </timer>
</asl>