<!--Saved by Quest 5.5.5173.27901-->
<asl version="550">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <include ref="CoreCombat.aslx" />
  <game name="Survival Island">
    <gameid>78d569e0-d5fe-4b3e-9e3b-584f2b3835f5</gameid>
    <version>0.1</version>
    <firstpublished>2014</firstpublished>
    <feature_limitinventory />
    <setcustomwidth type="boolean">false</setcustomwidth>
    <setcustompadding type="boolean">false</setcustompadding>
    <gridmap />
    <attr name="feature_pictureframe" type="boolean">false</attr>
    <feature_lightdark />
    <difficulty>Medium</difficulty>
    <cruelty>Tough</cruelty>
    <attr name="autodescription_youarein_newline" type="boolean">false</attr>
    <attr name="autodescription_youcansee_newline" type="boolean">false</attr>
    <attr name="autodescription_description_newline" type="boolean">false</attr>
    <attr name="autodescription_youcango_newline" type="boolean">false</attr>
    <category>Simulation</category>
    <description><![CDATA[Days have gone by since you went on a cruise, crashing into a government asylum they do every thing to cover up the cruise wrekage.<br/>With no body looking for it is up to you to survive. How many days will you survive on the Island? Use your knowledge to craft and build <br/>from resources around the Island, use traps to capture animals and fire to cook them with.  Use campfires and get creative to make you <br/>a water container to boil some water to drink, also use the campfires and cabin to reduce you exposer to the elements.]]></description>
    <author>Michael Oldham</author>
    <cover>Help-Castaway.jpg</cover>
    <backgroundimage type="string"></backgroundimage>
    <setbackgroundopacity />
    <backgroundopacity type="double">0.3</backgroundopacity>
    <attr name="campfire present" type="boolean">false</attr>
    <povstatusattributes type="stringdictionary" />
    <subtitle>Exposed</subtitle>
    <pov type="object">player</pov>
    <start type="script">
    </start>
    <attr name="fire sound" type="script">
      if (game.pov.parent = basic campfire) {
        if (basic campfire.lightsource = True) {
          play sound ("large_fire_burning.mp3", false, true)
        }
      }
    </attr>
    <object name="foods stuff">
      <inherit name="editor_room" />
      <object name="deer meat">
        <inherit name="editor_object" />
        <take />
        <eat type="script">
          effectsmenu = NewStringList()
          list add (effectsmenu, "Yes")
          list add (effectsmenu, "No")
          ShowMenu ("The effects, you will have food posioning, loss 4 thirst but gain 3 hunger. You sure you want to eat it?", effectsmenu, false) {
            if (result="Yes") {
              DecreaseObjectCounter (deer meat, "volume")
              EnableTimer (posined timer)
              IncreaseObjectCounter (player, "Hunger")
              IncreaseObjectCounter (player, "Hunger")
              IncreaseObjectCounter (player, "Hunger")
              DecreaseObjectCounter (player, "Thirst")
              DecreaseObjectCounter (player, "Thirst")
              DecreaseObjectCounter (player, "Thirst")
              DecreaseObjectCounter (player, "Thirst")
              msg ("God thats awful.")
            }
            else if (result="No") {
              msg ("Smart might want to cook it first.")
            }
          }
        </eat>
      </object>
      <object name="coffee beans">
        <inherit name="editor_object" />
      </object>
      <object name="coffee">
        <inherit name="editor_object" />
      </object>
      <object name="tea">
        <inherit name="editor_object" />
      </object>
      <object name="eggs">
        <inherit name="editor_object" />
        <eat type="script">
          effectsmenu = NewStringList()
          list add (effectsmenu, "Yes")
          list add (effectsmenu, "No")
          ShowMenu ("The effects, you will get food posining but gain 1 hunger. You sure you want to eat it?", effectsmenu, false) {
            if (result="Yes") {
              EnableTimer (posined timer)
              DecreaseObjectCounter (eggs, "volume")
              IncreaseObjectCounter (player, "Hunger")
              msg ("God thats awful.")
            }
            else if (result="No") {
              msg ("Smart might want to cook it first.")
            }
          }
        </eat>
      </object>
      <object name="bacon_eggs">
        <inherit name="editor_object" />
        <alias>bacon and eggs</alias>
        <eat type="script"><![CDATA[
          DecreaseObjectCounter (bacon_eggs, "volume")
          if (GetInt(player, "Health") < 96) {
            IncreaseObjectCounter (player, "Health")
            IncreaseObjectCounter (player, "Health")
            IncreaseObjectCounter (player, "Health")
            IncreaseObjectCounter (player, "Health")
            IncreaseObjectCounter (player, "Hunger")
            IncreaseObjectCounter (player, "Hunger")
            IncreaseObjectCounter (player, "Hunger")
            IncreaseObjectCounter (player, "Hunger")
            IncreaseObjectCounter (player, "Hunger")
            IncreaseObjectCounter (player, "Hunger")
            IncreaseObjectCounter (player, "Hunger")
            IncreaseObjectCounter (player, "Hunger")
            DecreaseObjectCounter (player, "Thirst")
            DecreaseObjectCounter (player, "Thirst")
            DecreaseObjectCounter (player, "Thirst")
            msg ("Mmmm, bacon and eggs taste great.")
          }
          else if () {
          }
        ]]></eat>
      </object>
      <object name="boar meat">
        <inherit name="editor_object" />
        <take />
        <eat type="script">
          effectsmenu = NewStringList()
          list add (effectsmenu, "Yes")
          list add (effectsmenu, "No")
          ShowMenu ("The effects, you will lose 7 health and 4 thirst but gain 3 hunger. You sure you want to eat it?", effectsmenu, false) {
            if (result="Yes") {
              DecreaseObjectCounter (deer meat, "volume")
              EnableTimer (posined timer)
              IncreaseObjectCounter (player, "Hunger")
              IncreaseObjectCounter (player, "Hunger")
              IncreaseObjectCounter (player, "Hunger")
              DecreaseObjectCounter (player, "Thirst")
              DecreaseObjectCounter (player, "Thirst")
              DecreaseObjectCounter (player, "Thirst")
              DecreaseObjectCounter (player, "Thirst")
              msg ("God thats awful.")
            }
            else if (result="No") {
              msg ("Smart might want to cook it first.")
            }
          }
        </eat>
      </object>
      <object name="rabbit meat">
        <inherit name="editor_object" />
        <take />
        <eat type="script">
          effectsmenu = NewStringList()
          list add (effectsmenu, "Yes")
          list add (effectsmenu, "No")
          ShowMenu ("The effects, you will lose 4 health and 2 thirst but gain 2 hunger. You sure you want to eat it?", effectsmenu, false) {
            if (result="Yes") {
              DecreaseObjectCounter (deer meat, "volume")
              EnableTimer (posined timer)
              IncreaseObjectCounter (player, "Hunger")
              IncreaseObjectCounter (player, "Hunger")
              IncreaseObjectCounter (player, "Hunger")
              DecreaseObjectCounter (player, "Thirst")
              DecreaseObjectCounter (player, "Thirst")
              DecreaseObjectCounter (player, "Thirst")
              DecreaseObjectCounter (player, "Thirst")
              msg ("God thats awful.")
            }
            else if (result="No") {
              msg ("Smart might want to cook it first.")
            }
          }
        </eat>
      </object>
    </object>
    <object name="resourses">
      <inherit name="editor_room" />
      <object name="feathers">
        <inherit name="editor_object" />
      </object>
      <object name="iron scrap">
        <inherit name="editor_object" />
        <volume type="int">1</volume>
        <take />
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
        </inventoryverbs>
      </object>
      <object name="canteen">
        <inherit name="editor_object" />
        <inherit name="container_limited" />
        <take />
        <volume type="int">1</volume>
        <feature_container />
        <isopen type="boolean">false</isopen>
        <maxvolume type="int">20</maxvolume>
        <listchildren />
        <feature_usegive />
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
        </inventoryverbs>
        <drink type="script">
          if (Contains (canteen,water)) {
          }
        </drink>
      </object>
      <object name="stick">
        <inherit name="editor_object" />
        <take />
        <feature_usegive />
        <volume type="int">0</volume>
        <combine type="script">
          stickmenu = NewStringList()
          list add (stickmenu, "handle")
          list add (stickmenu, "sharpened sticks")
          list add (stickmenu, "torch")
          list add (stickmenu, "tent frame")
          ShowMenu ("What would you like to craft?", stickmenu, true) {
            if (result="handle") {
              handle crafting
            }
            if (result="torch") {
              torch crafting
            }
            if (result="tent frame") {
              tent frame crafting
            }
            else if (result="sharpened sticks") {
            }
          }
        </combine>
        <look type="script">
          msg ("You have" + stick.volume + "sticks left.")
        </look>
      </object>
      <object name="coal">
        <inherit name="editor_object" />
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
        </inventoryverbs>
        <volume type="int">1</volume>
      </object>
      <object name="leaves">
        <inherit name="editor_object" />
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
        </inventoryverbs>
        <take />
        <volume type="int">1</volume>
      </object>
      <object name="tree trunks">
        <inherit name="editor_object" />
        <volume type="int">0</volume>
        <attr name="max volume" type="boolean">false</attr>
        <feature_usegive />
        <take />
        <craft type="script">
          if (Got(tree trunks)) {
            trunk crafting
          }
          else if (not Got(tree trunks)) {
            msg ("You must have in inventory to craft.")
          }
        </craft>
        <look type="script">
          msg ("You have " + tree trunks.volume + ".")
        </look>
        <ontake type="script">
        </ontake>
      </object>
      <object name="boar">
        <inherit name="editor_object" />
      </object>
      <object name="fallen tree">
        <inherit name="editor_object" />
        <inherit name="enviroment" />
        <health type="int">5</health>
        <attr name="max_health" type="int">5</attr>
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
        </inventoryverbs>
        <chop type="script"><![CDATA[
          if (Got(stone axe)) {
            if (GetInt(fallen tree, "health") >= 4) {
              play sound ("tree_branch_fall_on_leaves_and_twigs.mp3", true, false)
              DecreaseObjectCounter (fallen tree, "health")
              adding leaves
            }
            else if (GetInt(fallen tree, "health") <= 3) {
              play sound ("hammer_hitting_nail_into_wood.mp3", true, false)
              DecreaseObjectCounter (fallen tree, "health")
              DecreaseObjectCounter (stone axe, "weapon health")
            }
          }
          else if (not Got(stone axe)) {
            msg ("Ok so I chop this with my hands?")
          }
          if (GetInt(fallen tree, "health") <= 0) {
            adding trunks
          }
        ]]></chop>
      </object>
      <object name="flint">
        <inherit name="editor_object" />
        <volume type="int">1</volume>
        <take />
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
        </inventoryverbs>
      </object>
    </object>
    <object name="craftable matirel">
      <inherit name="editor_room" />
      <object name="wood stuff">
        <inherit name="editor_room" />
        <object name="tent frame">
          <inherit name="editor_object" />
          <take />
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <attr name="feature_usegive" type="boolean">false</attr>
        </object>
        <object name="handle">
          <inherit name="editor_object" />
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <craft type="scriptdictionary">
            <item key="rope"><![CDATA[
              if (Got(handle)) {
                if (Got(rope)) {
                  if (GetInt(rope, "volume") >= 3) {
                    DecreaseObjectCounter (rope, "volume")
                    DecreaseObjectCounter (rope, "volume")
                    DecreaseObjectCounter (rope, "volume")
                    MoveObject (handle, stash)
                    AddToInventory (man catcher)
                    nomore rope
                  }
                }
              }
            ]]></item>
          </craft>
        </object>
        <object name="storage crate">
          <inherit name="editor_object" />
          <inherit name="container_limited" />
          <feature_container />
          <isopen type="boolean">false</isopen>
          <maxobjects type="int">9</maxobjects>
          <maxvolume type="int">50</maxvolume>
          <listchildren />
          <volume type="int">15</volume>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
        </object>
        <object name="wood frame">
          <inherit name="editor_object" />
          <inventoryverbs type="stringlist">
            <value>Drop</value>
            <value>Look At</value>
          </inventoryverbs>
          <take />
          <volume type="int">5</volume>
          <feature_usegive />
          <craft type="script">
            frame crafting
          </craft>
          <look type="script">
            msg ("You have " + wood frame.volume + ".")
          </look>
          <upgrade type="script">
            wood_frame_upgrade
          </upgrade>
        </object>
        <object name="wood wall">
          <inherit name="editor_object" />
          <volume type="int">20</volume>
          <feature_usegive />
          <look type="script">
            msg ("You have " + wood wall.volume + ".")
          </look>
        </object>
        <object name="fortify wood">
          <inherit name="editor_object" />
          <inherit name="enviroment" />
          <health type="int">25</health>
          <attr name="max_health" type="int">25</attr>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <upgrade type="script">
            wood_frame_upgrade_1
          </upgrade>
        </object>
        <object name="fortified wood 1">
          <inherit name="editor_object" />
          <inherit name="enviroment" />
          <health type="int">60</health>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <upgrade type="script"><![CDATA[
            if (Got(planks)) {
              if (GetInt(planks, "volume") >= 4) {
                MoveObject (fortified wood 1, stash)
                play sound ("hammer_hitting_nail_into_wood.mp3", true, false)
                MoveObjectHere (crafting table)
              }
              else if (GetInt(planks, "volume") <= 3) {
                msg ("You need more planks to craft this table.")
              }
            }
            else if (not Got(planks)) {
              msg ("You need to get some planks before you start this craft.")
            }
          ]]></upgrade>
        </object>
        <object name="planks">
          <inherit name="editor_object" />
          <volume type="int">3</volume>
          <attr name="max volume" type="boolean">false</attr>
          <take />
          <feature_usegive />
          <look type="script">
            msg ("You have " + planks.volume + ".")
          </look>
          <craft type="script">
            plank crafting
          </craft>
        </object>
        <object name="small cabin">
          <inherit name="container_limited" />
          <dark />
          <volume type="int">30</volume>
          <feature_container />
          <maxobjects type="int">3</maxobjects>
          <maxvolume type="int">100</maxvolume>
          <transparent type="boolean">false</transparent>
          <isopen type="boolean">false</isopen>
          <attr name="grid_parent_offset_auto" type="boolean">false</attr>
          <attr name="grid_parent_offset_x" type="int">1</attr>
          <attr name="grid_parent_offset_y" type="int">-1</attr>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <ondrop type="script">
            play sound ("hammer_hitting_nail_into_wood.mp3", true, false)
            msg ("You build a nice little cabin from the resources you gathered.")
          </ondrop>
          <onopen type="script">
          </onopen>
        </object>
        <object name="sharp sticks">
          <inherit name="editor_object" />
        </object>
        <object name="crafting table">
          <inherit name="editor_object" />
          <volume type="int">25</volume>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <craft type="script"><![CDATA[
            craftmenu = NewStringList()
            list add (craftmenu, "traps")
            list add (craftmenu, "tools")
            list add (craftmenu, "shelters")
            list add (craftmenu, "weapons")
            list add (craftmenu, "food & drinks")
            ShowMenu ("choose a category", craftmenu, true) {
              if (result="tools") {
                tool crafting
              }
              if (result="shelters") {
                shelter crafting
              }
              if (result="weapons") {
                weapon crafting
              }
              if (result="food & drinks") {
                food_drinks crafting
              }
              if (result="traps") {
                trap crafting
              }
            }
          ]]></craft>
        </object>
      </object>
      <object name="weapons ammo">
        <inherit name="editor_room" />
        <object name="bow">
          <inherit name="editor_object" />
          <take />
          <volume type="int">4</volume>
          <shoot type="scriptdictionary">
            <item key="rabbit">
              if (Got(arrows)) {
                if (Got(bow)) {
                  if (RandomChance(30)) {
                    DisableTurnScript (rabbitmoves)
                    set (rabbit, "dead", True)
                  }
                  else {
                    msg ("You missed maybe next time.")
                  }
                }
              }
            </item>
            <item key="rabbit1">
              if (Got(arrows)) {
                if (Got(bow)) {
                  if (RandomChance(30)) {
                    DisableTurnScript (rabbitmoves1)
                  }
                  else {
                    msg ("You missed maybe next time.")
                  }
                }
              }
            </item>
            <item key="deer">
              if (Got(arrows)) {
                if (Got(bow)) {
                  if (RandomChance(30)) {
                    DisableTurnScript (deermoves)
                    set (deer, "dead", True)
                  }
                  else {
                    msg ("You missed maybe next time.")
                  }
                }
              }
            </item>
            <item key="deer1">
              if (Got(arrows)) {
                if (Got(bow)) {
                  if (RandomChance(30)) {
                    DisableTurnScript (deermoves1)
                    set (deer1, "dead", True)
                  }
                  else {
                    msg ("You missed maybe next time.")
                  }
                }
              }
            </item>
          </shoot>
        </object>
        <object name="cross bow">
          <inherit name="editor_object" />
        </object>
        <object name="man catcher">
          <inherit name="editor_object" />
          <volume type="int">2</volume>
        </object>
        <object name="arrows">
          <inherit name="editor_object" />
        </object>
        <object name="machete">
          <inherit name="editor_object" />
        </object>
        <object name="stone knife">
          <inherit name="editor_object" />
        </object>
        <object name="spear">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <feature_container />
          <listchildren />
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <take />
          <volume type="int">4</volume>
          <spearfish type="script">
            if (ListContains(ScopeVisible(), fish)) {
              if (RandomChance(50)) {
                set (fish, "dead", True)
                MoveObject (fish, spear)
              }
            }
          </spearfish>
        </object>
        <object name="stone axe">
          <inherit name="editor_object" />
          <inherit name="weapon" />
          <attr name="weapon health" type="int">25</attr>
          <damage type="int">10</damage>
          <inventoryverbs type="stringlist">
            <value>Drop</value>
          </inventoryverbs>
          <volume type="int">3</volume>
          <take />
        </object>
      </object>
      <object name="traps">
        <inherit name="editor_room" />
        <object name="box trap">
          <inherit name="editor_object" />
        </object>
        <object name="net trap">
          <inherit name="editor_object" />
        </object>
        <object name="snare trap">
          <inherit name="editor_object" />
        </object>
        <object name="drop trap">
          <inherit name="editor_object" />
          <inherit name="container_closed" />
          <attr name="set trap" type="boolean">false</attr>
          <take />
          <volume type="int">10</volume>
          <feature_container />
          <listchildren />
          <attr name="trap set" type="int">0</attr>
          <ondrop type="script">
          </ondrop>
          <set type="script">
            if (not Got(drop trap)) {
              set (drop trap, "set trap", True)
              EnableTurnScript (trapset)
              msg ("Trap is set.")
            }
            else if (Got(drop trap)) {
              msg ("Helps to sit the trap down first.")
            }
          </set>
          <onopen type="script">
          </onopen>
        </object>
        <object name="camo pit trap">
          <inherit name="editor_object" />
        </object>
        <object name="pit">
          <inherit name="editor_object" />
          <camoflauge type="scriptdictionary">
            <item key="leaves"><![CDATA[
              if (Got(leaves)) {
                if (GetInt(leaves, "volume") >= 10) {
                  MoveObject (pit, stash)
                  MoveObjectHere (camo pit trap)
                }
                else if (GetInt(leaves, "volume") > 10) {
                  msg ("You need more leaves to cover the pit.")
                }
              }
              else if (not Got(leaves)) {
                msg ("Helps to have some foliage for a natural ground cover.")
              }
            ]]></item>
          </camoflauge>
        </object>
        <object name="hole">
          <spikepit type="scriptdictionary">
            <item key="sharp sticks">
              if (Got(pit spikes)) {
                MoveObject (pit spikes, stash)
                MoveObject (hole, stash)
                MoveObjectHere (pit)
              }
            </item>
          </spikepit>
        </object>
        <object name="pit spikes">
          <inherit name="editor_object" />
        </object>
      </object>
      <object name="cooking stuff">
        <inherit name="editor_room" />
        <object name="dutch oven">
          <inherit name="editor_object" />
          <inherit name="container_limited" />
          <feature_container />
          <isopen type="boolean">false</isopen>
          <maxobjects type="int">1</maxobjects>
          <maxvolume type="int">10</maxvolume>
          <onopen type="script">
            ovenmenu = NewStringList()
            list add (ovenmenu, "deer meat ")
            list add (ovenmenu, "rabbit meat")
            list add (ovenmenu, "boar meat")
            list add (ovenmenu, "eggs")
            list add (ovenmenu, "bacon and eggs")
            list add (ovenmenu, "boil water")
            list add (ovenmenu, "tea")
            list add (ovenmenu, "coffee")
            ShowMenu ("What would you like to cook", craftmenu, true) {
              if (result="deer meat") {
                cooking meat
              }
              if (result="tea") {
                tool crafting
              }
              if (result="coffee") {
                shelter crafting
              }
              if (result="boar meat") {
                cooking meat
              }
              if (result="bacon and eggs") {
                food_drinks crafting
              }
              if (result="eggs") {
                trap crafting
              }
              if (result="rabbit meat") {
                cooking meat
              }
              if (result="boil water") {
              }
            }
          </onopen>
        </object>
        <object name="grill">
          <inherit name="editor_object" />
        </object>
      </object>
      <object name="misc">
        <inherit name="editor_room" />
        <object name="torch">
          <inherit name="editor_object" />
          <feature_lightdark />
          <lightsource />
          <take />
          <volume type="int">1</volume>
          <ignight type="string"></ignight>
          <lightstrength>weak</lightstrength>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
        </object>
        <object name="sharp stone">
          <inherit name="editor_object" />
          <volume type="int">1</volume>
          <create type="script">
          </create>
          <look type="script">
            msg ("You have " + sharp stone.volume + ".")
          </look>
          <dig type="script">
            if (Got(sharp stone)) {
              play sound ("shovelling_gravel.mp3", true, false)
              MoveObjectHere (hole)
            }
          </dig>
          <combine type="scriptdictionary">
            <item key="man catcher"><![CDATA[
              if (GetInt(sharp stone, "volume") >= 1) {
                DecreaseObjectCounter (sharp stone, "volume")
                MoveObject (man catcher, stash)
                AddToInventory (stone axe)
                nomore sharp stones
              }
            ]]></item>
          </combine>
        </object>
        <object name="rope">
          <inherit name="editor_object" />
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <look type="script">
            msg ("You have" + rope.volume + "feet of rope.")
          </look>
        </object>
        <object name="forge">
          <inherit name="editor_object" />
          <volume type="int">10</volume>
          <forge type="script">
            forgemenu = NewStringList()
            list add (forgemenu, "shovel head")
            list add (forgemenu, "garden hoe bit")
            list add (forgemenu, "hammer head")
            list add (forgemenu, "steel")
            ShowMenu ("choose a item to forge.", forgemenu, true) {
              if (result="shovel head") {
              }
              else if (result="hammer head") {
              }
              else if (result="garden hoe bit") {
              }
              else if (result="steel") {
              }
            }
          </forge>
        </object>
        <object name="plant fiber">
          <inherit name="editor_object" />
          <volume type="int">0</volume>
          <craft type="script"><![CDATA[
            if (Got(plant fiber)) {
              if (GetInt(plant fiber, "volume") >= 3) {
                adding rope
              }
              else if (GetInt(plant fiber, "volume") < 3) {
                msg ("You need more fibers before making rope.")
              }
            }
            else if (not Got(plant fiber)) {
              msg ("You need to pick it up before crafting this item.")
            }
          ]]></craft>
          <look type="script">
            msg ("You have " + plant fiber.volume + "left.")
          </look>
        </object>
        <object name="cloth">
          <inherit name="editor_object" />
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
        </object>
        <object name="flint_steel">
          <inherit name="editor_object" />
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <take />
        </object>
        <object name="basic campfire">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <feature_lightdark />
          <lightsource type="boolean">false</lightsource>
          <lightstrength>strong</lightstrength>
          <volume type="int">5</volume>
          <feature_container />
          <hidechildren />
          <ignite type="script">
            ignitemenu = NewStringList()
            list add (ignitemenu, "flint and steel")
            list add (ignitemenu, "sticks and leaves")
            list add (ignitemenu, "sticks and coal")
            ShowMenu ("Ignite with what?", ignitemenu, true) {
              if (result="sticks and leaves") {
                sticks_leaves fire
              }
              else if (result="sticks and coal") {
                sticks_coal fire
              }
              else if (result="flint and steel") {
                flint_steel fire
              }
            }
            if (basic campfire.lightsource = True) {
              msg ("Fire is lit add fuel to keep fire going.")
            }
          </ignite>
          <addwood type="script"><![CDATA[
            if (basic campfire.lightsource = True) {
              if (Got(tree trunks)) {
                SetTimerInterval (Fire Burning, 10)
                DecreaseObjectCounter (tree trunks, "volume")
                msg ("There that should last a little longer.")
                if (GetInt(tree trunks, "volume") <= 0) {
                  MoveObject (tree trunks, stash)
                  msg ("Out of trunks.")
                }
              }
              else if (not Got(tree trunks)) {
                msg ("You need a fuel sorce.")
              }
            }
            else if (basic campfire.lightsource = False) {
              msg ("You need to light the fire before you add a fuel source.")
            }
          ]]></addwood>
          <cook type="script">
            cookmenu = NewStringList()
            list add (cookmenu, "meat")
            list add (cookmenu, "liquid")
            ShowMenu ("What are you cooking?", cookmenu, true) {
              if (result="meat") {
              }
              else if (result="liquid") {
              }
            }
          </cook>
        </object>
      </object>
      <object name="scripts">
        <inherit name="editor_room" />
        <description type="string"></description>
        <beforeenter type="script">
          msg ("deer1 had a " + object1.movechance + " % chance to move and goes through " + chosenexit.name + ". He is now in " + object1.parent.name + ".")
          msg ("deer1 had a " + object1.movechance + " % chance to move and chooses to stay in " + object1.parent.name + ".")
        </beforeenter>
        <enter type="script">
          msg ("rabbit had a " + object1.movechance + " % chance to move and goes through " + chosenexit.name + ". He is now in " + object1.parent.name + ".")
          msg ("rabbi1t had a " + object1.movechance + " % chance to move and chooses to stay in " + object1.parent.name + ".")
        </enter>
        <onexit type="script">
          msg ("deer had a " + object1.movechance + " % chance to move and goes through " + chosenexit.name + ". He is now in " + object1.parent.name + ".")
          msg ("deer had a " + object1.movechance + " % chance to move and chooses to stay in " + object1.parent.name + ".")
        </onexit>
      </object>
    </object>
    <turnscript name="deermoves1">
      <enabled />
      <script><![CDATA[
        object1 = deer1
        numberofexits = 0
        moveornot = GetRandomInt (1, 100)
        if (not moveornot > object1.movechance) {
          list1 = NewObjectList ()
          foreach (exit, AllExits()) {
            if (Contains (object1.parent,exit) and exit.visible and not exit.lookonly and not exit.locked) {
              list add (list1, exit)
            }
          }
          list2 = NewObjectList()
          foreach (room, AllObjects()) {
            foreach (exit, list1) {
              if (Contains (room,exit.to) and object1.hunting ground = room.name) {
                numberofexits = numberofexits + 1
                list add (list2, exit)
              }
            }
          }
          if (not numberofexits = 0) {
            randomexit = GetRandomInt (1, numberofexits)
            chosenexit = ObjectListItem(list2, randomexit - 1)
            if (not HasScript(chosenexit, "script")) {
              object1.parent = chosenexit.to
            }
          }
          else {
          }
        }
      ]]></script>
    </turnscript>
    <turnscript name="rabbitmoves">
      <enabled type="boolean">false</enabled>
      <script><![CDATA[
        object1 = rabbit
        numberofexits = 0
        moveornot = GetRandomInt (1, 100)
        if (not moveornot > object1.movechance) {
          list1 = NewObjectList ()
          foreach (exit, AllExits()) {
            if (Contains (object1.parent,exit) and exit.visible and not exit.lookonly and not exit.locked) {
              list add (list1, exit)
            }
          }
          list2 = NewObjectList()
          foreach (room, AllObjects()) {
            foreach (exit, list1) {
              if (Contains (room,exit.to) and object1.hunting ground = room.name) {
                numberofexits = numberofexits + 1
                list add (list2, exit)
              }
            }
          }
          if (not numberofexits = 0) {
            randomexit = GetRandomInt (1, numberofexits)
            chosenexit = ObjectListItem(list2, randomexit - 1)
            if (not HasScript(chosenexit, "script")) {
              object1.parent = chosenexit.to
            }
          }
          else {
            msg ("rabbit had a " + object1.movechance + " % chance to move and chooses to stay in " + object1.parent.name + ".")
          }
        }
      ]]></script>
    </turnscript>
    <turnscript name="rabbitmoves1">
      <enabled type="boolean">false</enabled>
      <script><![CDATA[
        object1 = rabbit1
        numberofexits = 0
        moveornot = GetRandomInt (1, 100)
        if (not moveornot > object1.movechance) {
          list1 = NewObjectList ()
          foreach (exit, AllExits()) {
            if (Contains (object1.parent,exit) and exit.visible and not exit.lookonly and not exit.locked) {
              list add (list1, exit)
            }
          }
          list2 = NewObjectList()
          foreach (room, AllObjects()) {
            foreach (exit, list1) {
              if (Contains (room,exit.to) and object1.hunting ground = room.name) {
                numberofexits = numberofexits + 1
                list add (list2, exit)
              }
            }
          }
          if (not numberofexits = 0) {
            randomexit = GetRandomInt (1, numberofexits)
            chosenexit = ObjectListItem(list2, randomexit - 1)
            if (not HasScript(chosenexit, "script")) {
              object1.parent = chosenexit.to
            }
            msg ("rabbi1t had a " + object1.movechance + " % chance to move and goes through " + chosenexit.name + ". He is now in " + object1.parent.name + ".")
          }
          else {
            msg ("rabbi1t had a " + object1.movechance + " % chance to move and chooses to stay in " + object1.parent.name + ".")
          }
        }
      ]]></script>
    </turnscript>
    <turnscript name="trapset">
      <script>
        switch (traps) {
          case (box trap) {
          }
          case (net trap) {
          }
          case (snare trap) {
          }
          case (drop trap) {
          }
        }
      </script>
    </turnscript>
    <turnscript name="deermoves">
      <enabled />
      <script><![CDATA[
        object1 = deer
        numberofexits = 0
        moveornot = GetRandomInt (1, 100)
        if (not moveornot > object1.movechance) {
          list1 = NewObjectList ()
          foreach (exit, AllExits()) {
            if (Contains (object1.parent,exit) and exit.visible and not exit.lookonly and not exit.locked) {
              list add (list1, exit)
            }
          }
          list2 = NewObjectList()
          foreach (room, AllObjects()) {
            foreach (exit, list1) {
              if (Contains (room,exit.to) and object1.hunting ground = room.name) {
                numberofexits = numberofexits + 1
                list add (list2, exit)
              }
            }
          }
          if (not numberofexits = 0) {
            randomexit = GetRandomInt (1, numberofexits)
            chosenexit = ObjectListItem(list2, randomexit - 1)
            if (not HasScript(chosenexit, "script")) {
              object1.parent = chosenexit.to
            }
          }
          else {
          }
        }
      ]]></script>
    </turnscript>
    <turnscript name="dead">
      <enabled />
      <script><![CDATA[
        if (GetInt(player, "Health") <= 0) {
          finish
        }
      ]]></script>
    </turnscript>
  </game>
  <object name="room">
    <inherit name="editor_room" />
    <alias>woods</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <descprefix>You are in the</descprefix>
    <attr name="grid_width" type="int">2</attr>
    <attr name="grid_length" type="int">2</attr>
    <object name="rock">
      <inherit name="editor_object" />
      <take />
      <feature_usegive />
      <givesingle />
      <volume type="int">1</volume>
      <craft type="script">
        if (not Got(rock)) {
          msg ("You must take item first.")
        }
        else if (Got(rock)) {
          rock crafting
          MoveObject (rock, stash)
        }
      </craft>
      <look type="script">
        msg ("You have " + rock.volume + ".")
      </look>
    </object>
    <object name="tree">
      <inherit name="editor_object" />
      <inherit name="enviroment" />
      <inherit name="surface" />
      <health type="int">5</health>
      <attr name="max_health" type="int">5</attr>
      <feature_container />
      <hidechildren />
      <look>The tree stands tall, banches hang down as the remains of bird droppings are glued to them.</look>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <chop type="script">
        if (Got(stone axe)) {
          play sound ("axe_chop_wood_007.mp3", true, false)
          DecreaseObjectCounter (tree, "health")
          adding leaves
        }
        if (not Got(stone axe)) {
          msg ("With what my bare hands?")
        }
        if (GetInt(tree, "health") = 0) {
          msg ("TIMBER!")
          play sound ("tree_fall_down.mp3", true, false)
          MoveObject (tree, stash)
          MoveObjectHere (fallen tree)
        }
      </chop>
      <object name="bird nest">
        <inherit name="editor_object" />
        <inherit name="container_limited" />
        <attr name="feature_container" type="boolean">false</attr>
        <maxobjects type="int">2</maxobjects>
        <maxvolume type="int">10</maxvolume>
        <isopen type="boolean">false</isopen>
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <look>Its a birds nest, bird droppings remain on some branches.</look>
        <onopen type="script">
        </onopen>
        <search type="script">
          firsttime {
            nest loot
          }
          otherwise {
            msg ("You have searched this already.")
          }
        </search>
      </object>
    </object>
    <exit alias="east" to="woods1">
      <inherit name="eastdirection" />
    </exit>
    <object name="grass3">
      <inherit name="editor_object" />
      <inherit name="enviroment" />
      <feature_usegive />
      <attr name="max_health" type="int">10</attr>
      <health type="int">10</health>
      <destroied type="boolean">false</destroied>
      <inventoryverbs type="stringlist">
        <value>Drop</value>
      </inventoryverbs>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
      </displayverbs>
      <dropmsg>Dropped grass.</dropmsg>
      <volume type="int">2</volume>
      <alias>grass</alias>
      <take type="script"><![CDATA[
        if (GetInt(grass3, "health") <= 0) {
          AddToInventory (grass3)
          msg ("You picked up grass.")
        }
        if (grass3.destroied = false) {
          if (GetInt(grass3, "health") >= 0) {
            msg ("You must break it down before taking.")
          }
        }
      ]]></take>
      <hit type="script"><![CDATA[
        if (grass3.destroied = false) {
          DecreaseObjectCounter (grass3, "health")
          DecreaseObjectCounter (grass3, "health")
          DecreaseObjectCounter (grass3, "health")
          DecreaseObjectCounter (grass3, "health")
          DecreaseObjectCounter (grass3, "health")
          play sound ("punch_or_whack_-Vladimir-403040765.wav", true, false)
        }
        if (GetInt(grass3, "health") <= 0) {
          set (grass3, "destroied", True)
        }
        if (grass3.destroied = True) {
          msg ("Grass is destroied!")
        }
      ]]></hit>
      <Craft type="script">
        if (not Got(grass)) {
          msg ("You must take item first.")
        }
        if (Got(grass)) {
          RemoveObject (grass)
          AddToInventory (plant fiber)
        }
      </Craft>
      <craft type="script">
        if (not Got(grass3)) {
          msg ("You must take first.")
        }
        if (Got(grass3)) {
          adding plant fibers
          MoveObject (grass3, stash)
        }
      </craft>
    </object>
    <object name="pond">
      <inherit name="container_closed" />
      <feature_container />
      <hidechildren type="boolean">false</hidechildren>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <listchildren type="boolean">false</listchildren>
      <openmsg>Hopfully yo will see some fish.</openmsg>
      <description type="script">
      </description>
      <look type="script">
        play sound ("footsteps_in_water_2.mp3", false, false)
        HelperOpenObject (pond)
      </look>
      <onopen type="script">
        if (not Got(fish)) {
          if (RandomChance(50)) {
            MakeObjectVisible (fish)
            msg ("Oh a fish better try and catch it quick before it gets away.")
          }
          else {
            MakeObjectInvisible (fish)
            msg ("It's a little murky right now, try later when it clears up.")
          }
        }
        EnableTimer (pond fish timer)
      </onopen>
      <onclose type="script">
        if (not Contains (pond,fish)) {
          msg ("\"Humm! Wonder if that pond has cleared up yet?\"")
        }
      </onclose>
      <object name="fish">
        <inherit name="editor_object" />
        <dead type="boolean">false</dead>
        <trapped type="boolean">false</trapped>
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
        </inventoryverbs>
        <volume type="int">2</volume>
        <take type="script">
          if (fish.dead = True) {
            AddToInventory (fish)
          }
          else if (fish.dead = False) {
            msg ("You have to kill or trap it first.")
          }
        </take>
        <eat type="script">
          if (Got(fish)) {
            DecreaseObjectCounter (player, "Hunger")
            DecreaseObjectCounter (player, "Hunger")
            DecreaseObjectCounter (player, "Thirst")
          }
          else if (not Got(fish)) {
            if (fish.dead = True) {
              msg ("It helps to pick it up.")
            }
            else if (fish.dead = False) {
              msg ("Helps to catch the fish first.")
            }
          }
        </eat>
      </object>
      <object name="water">
        <inherit name="editor_object" />
        <volume type="int">0</volume>
        <feature_usegive />
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
        </inventoryverbs>
        <drink type="script">
          play sound ("drink_slurp_from_cup_001.mp3", false, false)
          IncreaseObjectCounter (player, "Thirst")
          IncreaseObjectCounter (player, "Thirst")
          DecreaseObjectCounter (player, "Health")
          msg ("\"Little unsettling but not bad.\"")
        </drink>
      </object>
    </object>
  </object>
  <verb>
    <property>craft</property>
    <pattern>craft</pattern>
    <defaultexpression>"You can't craft " + object.article + "."</defaultexpression>
  </verb>
  <object name="stash">
    <inherit name="editor_room" />
  </object>
  <verb>
    <property>combine</property>
    <pattern>combine</pattern>
    <defaultexpression>"You can't combine " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>chop</property>
    <pattern>chop</pattern>
    <defaultexpression>"You can't chop " + object.article + "."</defaultexpression>
  </verb>
  <object name="woods">
    <inherit name="editor_room" />
    <descprefix>You are in the</descprefix>
    <alias>woods</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <attr name="grid_width" type="int">2</attr>
    <attr name="grid_length" type="int">2</attr>
    <object name="rock1">
      <inherit name="editor_object" />
      <take />
      <feature_usegive />
      <givesingle />
      <volume type="int">1</volume>
      <alias>rock</alias>
      <craft type="script">
        if (not Got(rock1)) {
          msg ("You must take item first.")
        }
        else if (Got(rock1)) {
          rock crafting
          MoveObject (rock1, stash)
        }
      </craft>
    </object>
    <object name="boulder1">
      <inherit name="editor_object" />
      <inherit name="enviroment" />
      <health type="int">6</health>
      <attr name="feature_usegive" type="boolean">false</attr>
      <attr name="max_health" type="int">6</attr>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Drop</value>
      </inventoryverbs>
      <alias>boulder</alias>
      <mineboulder type="script"><![CDATA[
        if (Got(stone axe)) {
          play sound ("impact_rock_on_rubble_006.mp3", true, false)
          DecreaseObjectCounter (stone axe, "weapon health")
          DecreaseObjectCounter (boulder1, "health")
        }
        else if (not Got(stone axe)) {
          msg ("You need a way to break boulder down.")
        }
        if (GetInt(boulder1, "health") <= 0) {
          play sound ("impact_rock_on_rubble_004.mp3", true, false)
          MoveObject (boulder1, stash)
          msg ("The boulder breaks apart leaving resouces behind.")
          adding iron
          adding flint
        }
      ]]></mineboulder>
    </object>
    <exit alias="south" to="woods1">
      <inherit name="southdirection" />
    </exit>
    <object name="grass5">
      <inherit name="editor_object" />
      <inherit name="enviroment" />
      <feature_usegive />
      <attr name="max_health" type="int">10</attr>
      <health type="int">10</health>
      <destroied type="boolean">false</destroied>
      <inventoryverbs type="stringlist">
        <value>Drop</value>
      </inventoryverbs>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Take</value>
      </displayverbs>
      <dropmsg>Dropped grass.</dropmsg>
      <volume type="int">2</volume>
      <alias>grass</alias>
      <take type="script"><![CDATA[
        if (GetInt(grass5, "health") <= 0) {
          AddToInventory (grass5)
          msg ("You picked up grass.")
        }
        if (grass5.destroied = false) {
          if (GetInt(grass5, "health") >= 0) {
            msg ("You must break it down before taking.")
          }
        }
      ]]></take>
      <hit type="script"><![CDATA[
        if (grass5.destroied = false) {
          DecreaseObjectCounter (grass5, "health")
          DecreaseObjectCounter (grass5, "health")
          DecreaseObjectCounter (grass5, "health")
          DecreaseObjectCounter (grass5, "health")
          DecreaseObjectCounter (grass5, "health")
          play sound ("punch_or_whack_-Vladimir-403040765.wav", true, false)
        }
        if (GetInt(grass5, "health") <= 0) {
          set (grass, "destroied", True)
        }
        if (grass5.destroied = True) {
          msg ("Grass is destroied!")
        }
      ]]></hit>
      <Craft type="script">
        if (not Got(grass)) {
          msg ("You must take item first.")
        }
        if (Got(grass)) {
          RemoveObject (grass)
          AddToInventory (plant fiber)
        }
      </Craft>
      <craft type="script">
        if (not Got(grass5)) {
          msg ("You must take first.")
        }
        if (Got(grass5)) {
          adding plant fibers
          MoveObject (grass5, stash)
        }
      </craft>
    </object>
    <exit alias="east" to="woods11">
      <inherit name="eastdirection" />
    </exit>
    <object name="player">
      <inherit name="editor_object" />
      <inherit name="editor_player" />
      <maxobjects type="int">9</maxobjects>
      <volume type="int">0</volume>
      <maxvolume type="int">81</maxvolume>
      <statusattributes type="stringdictionary">
        <item>
          <key>Health</key>
          <value></value>
        </item>
        <item>
          <key>Hunger</key>
          <value></value>
        </item>
        <item>
          <key>Thirst</key>
          <value></value>
        </item>
        <item>
          <key>Exposer</key>
          <value></value>
        </item>
        <item>
          <key>Wounded</key>
          <value></value>
        </item>
        <item>
          <key>Days Survived</key>
          <value></value>
        </item>
      </statusattributes>
      <Health type="int">20</Health>
      <Hunger type="int">25</Hunger>
      <Exposer type="int">6</Exposer>
      <Wounded type="boolean">false</Wounded>
      <Thirst type="int">20</Thirst>
      <attr name="max health" type="int">100</attr>
      <attr name="Days Survived" type="int">0</attr>
    </object>
  </object>
  <verb>
    <property>upgrade</property>
    <pattern>upgrade</pattern>
    <defaultexpression>"You can't upgrade " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>resource</property>
    <pattern>resource</pattern>
    <defaultexpression>"You can't resource " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>mineboulder</property>
    <pattern>mine boulder</pattern>
    <defaultexpression>"You can't mine boulder " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>ignite</property>
    <pattern>ignite</pattern>
    <defaultexpression>"You can't ignite " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>addwood</property>
    <pattern>add wood</pattern>
    <defaultexpression>"You can't add wood " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>forge</property>
    <pattern>forge</pattern>
    <defaultexpression>"You can't forge " + object.article + "."</defaultexpression>
  </verb>
  <turnscript name="raining">
    <enabled type="boolean">false</enabled>
    <script>
      if (game.pov.parent = woods4) {
        play sound ("distant_thunder_and_light_rain.mp3", false, true)
        exposed rain
      }
      else if (game.pov.parent = woods3) {
        play sound ("distant_thunder_and_light_rain.mp3", false, true)
        exposed rain
      }
    </script>
  </turnscript>
  <object name="hunting grounds">
    <inherit name="editor_room" />
    <object name="woods1">
      <inherit name="editor_room" />
      <attr name="grid_width" type="int">2</attr>
      <attr name="grid_length" type="int">2</attr>
      <alias>woods</alias>
      <object name="tree2">
        <inherit name="editor_object" />
        <inherit name="enviroment" />
        <health type="int">5</health>
        <attr name="max_health" type="int">5</attr>
        <alias>tree</alias>
        <chop type="script">
          if (Got(stone axe)) {
            play sound ("axe_chop_wood_007.mp3", false, false)
            DecreaseObjectCounter (tree2, "health")
            adding leaves
          }
          if (not Got(stone axe)) {
            msg ("With what my bare hands?")
          }
          if (GetInt(tree2, "health") = 0) {
            msg ("TIMBER!")
            play sound ("tree_fall_down.mp3", true, false)
            MoveObject (tree2, stash)
            MoveObjectHere (fallen tree)
          }
        </chop>
      </object>
      <exit alias="west" to="room">
        <inherit name="westdirection" />
      </exit>
      <exit alias="north" to="woods">
        <inherit name="northdirection" />
      </exit>
      <exit alias="south" to="woods2">
        <inherit name="southdirection" />
      </exit>
      <exit alias="east" to="woods3">
        <inherit name="eastdirection" />
      </exit>
      <object name="grass6">
        <inherit name="editor_object" />
        <inherit name="enviroment" />
        <feature_usegive />
        <attr name="max_health" type="int">10</attr>
        <health type="int">10</health>
        <destroied type="boolean">false</destroied>
        <inventoryverbs type="stringlist">
          <value>Drop</value>
        </inventoryverbs>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
        </displayverbs>
        <dropmsg>Dropped grass.</dropmsg>
        <volume type="int">2</volume>
        <alias>grass</alias>
        <take type="script"><![CDATA[
          if (GetInt(grass6, "health") <= 0) {
            AddToInventory (grass6)
            msg ("You picked up grass.")
          }
          if (grass6.destroied = false) {
            if (GetInt(grass6, "health") >= 0) {
              msg ("You must break it down before taking.")
            }
          }
        ]]></take>
        <hit type="script"><![CDATA[
          if (grass6.destroied = false) {
            DecreaseObjectCounter (grass6, "health")
            DecreaseObjectCounter (grass6, "health")
            DecreaseObjectCounter (grass6, "health")
            DecreaseObjectCounter (grass6, "health")
            DecreaseObjectCounter (grass6, "health")
            play sound ("punch_or_whack_-Vladimir-403040765.wav", true, false)
          }
          if (GetInt(grass6, "health") <= 0) {
            set (grass6, "destroied", True)
          }
          if (grass6.destroied = True) {
            msg ("Grass is destroied!")
          }
        ]]></hit>
        <Craft type="script">
          if (not Got(grass)) {
            msg ("You must take item first.")
          }
          if (Got(grass)) {
            RemoveObject (grass)
            AddToInventory (plant fiber)
          }
        </Craft>
        <craft type="script">
          if (not Got(grass6)) {
            msg ("You must take first.")
          }
          if (Got(grass6)) {
            adding plant fibers
            MoveObject (grass6, stash)
          }
        </craft>
      </object>
    </object>
    <object name="woods2">
      <inherit name="editor_room" />
      <attr name="grid_width" type="int">2</attr>
      <attr name="grid_length" type="int">2</attr>
      <alias>woods</alias>
      <object name="rock2">
        <inherit name="editor_object" />
        <take />
        <feature_usegive />
        <givesingle />
        <volume type="int">1</volume>
        <alias>rock</alias>
        <craft type="script">
          if (not Got(rock2)) {
            msg ("You must take item first.")
          }
          if (Got(rock2)) {
            MoveObject (rock2, stash)
            AddToInventory (sharp stone)
          }
        </craft>
      </object>
      <exit alias="north" to="woods1">
        <inherit name="northdirection" />
      </exit>
      <object name="grass8">
        <inherit name="editor_object" />
        <inherit name="enviroment" />
        <feature_usegive />
        <attr name="max_health" type="int">10</attr>
        <health type="int">10</health>
        <destroied type="boolean">false</destroied>
        <inventoryverbs type="stringlist">
          <value>Drop</value>
        </inventoryverbs>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
        </displayverbs>
        <dropmsg>Dropped grass.</dropmsg>
        <volume type="int">2</volume>
        <alias>grass</alias>
        <take type="script"><![CDATA[
          if (GetInt(grass8, "health") <= 0) {
            AddToInventory (grass8)
            msg ("You picked up grass.")
          }
          if (grass8.destroied = false) {
            if (GetInt(grass8, "health") >= 0) {
              msg ("You must break it down before taking.")
            }
          }
        ]]></take>
        <hit type="script"><![CDATA[
          if (grass8.destroied = false) {
            DecreaseObjectCounter (grass8, "health")
            DecreaseObjectCounter (grass8, "health")
            DecreaseObjectCounter (grass8, "health")
            DecreaseObjectCounter (grass8, "health")
            DecreaseObjectCounter (grass8, "health")
            play sound ("punch_or_whack_-Vladimir-403040765.wav", true, false)
          }
          if (GetInt(grass8, "health") <= 0) {
            set (grass8, "destroied", True)
          }
          if (grass8.destroied = True) {
            msg ("Grass is destroied!")
          }
        ]]></hit>
        <Craft type="script">
          if (not Got(grass)) {
            msg ("You must take item first.")
          }
          if (Got(grass)) {
            RemoveObject (grass)
            AddToInventory (plant fiber)
          }
        </Craft>
        <craft type="script">
          if (not Got(grass8)) {
            msg ("You must take first.")
          }
          if (Got(grass8)) {
            adding plant fibers
            MoveObject (grass8, stash)
          }
        </craft>
      </object>
      <object name="bush2">
        <inherit name="editor_object" />
        <inherit name="enviroment" />
        <attr name="max_health" type="int">15</attr>
        <health type="int">15</health>
        <volume type="int">0</volume>
        <feature_usegive />
        <hit type="script"><![CDATA[
          if (bush2.destroied = false) {
            DecreaseObjectCounter (bush2, "health")
            DecreaseObjectCounter (bush2, "health")
            DecreaseObjectCounter (bush2, "health")
            DecreaseObjectCounter (bush2, "health")
            DecreaseObjectCounter (bush2, "health")
            play sound ("punch_or_whack_-Vladimir-403040765.wav", true, false)
          }
          if (GetInt(bush2, "health") <= 0) {
            set (bush2, "destroied", True)
            MoveObject (bush2, stash)
            adding sticks
          }
          if (bush2.destroied = True) {
            msg ("Bush is destroied!")
          }
        ]]></hit>
        <alias>bush</alias>
      </object>
    </object>
    <object name="woods3">
      <inherit name="editor_room" />
      <attr name="grid_width" type="int">2</attr>
      <attr name="grid_length" type="int">2</attr>
      <alias>woods</alias>
      <object name="rock3">
        <inherit name="editor_object" />
        <take />
        <feature_usegive />
        <givesingle />
        <volume type="int">1</volume>
        <alias>rock</alias>
        <craft type="script">
          if (not Got(rock3)) {
            msg ("You must take item first.")
          }
          if (Got(rock3)) {
            MoveObject (rock3, stash)
            AddToInventory (sharp stone)
          }
        </craft>
      </object>
      <object name="tree1">
        <inherit name="editor_object" />
        <inherit name="enviroment" />
        <health type="int">5</health>
        <attr name="max_health" type="int">5</attr>
        <alias>tree</alias>
        <chop type="script">
          if (Got(stone axe)) {
            play sound ("axe_chop_wood_007.mp3", false, false)
            DecreaseObjectCounter (tree1, "health")
            adding leaves
          }
          if (not Got(stone axe)) {
            msg ("With what my bare hands?")
          }
          if (GetInt(tree1, "health") = 0) {
            msg ("TIMBER!")
            play sound ("tree_fall_down.mp3", true, false)
            MoveObject (tree1, stash)
            MoveObjectHere (fallen tree)
          }
        </chop>
      </object>
      <object name="deer">
        <inherit name="switchable" />
        <inherit name="enviroment" />
        <attr name="hunting ground">hunting grounds</attr>
        <movechance type="int">60</movechance>
        <attr name="feature_switchable" type="boolean">false</attr>
        <attr name="feature_container" type="boolean">false</attr>
        <switchedon type="boolean">false</switchedon>
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <health type="int">8</health>
        <dead type="boolean">false</dead>
        <onswitchon type="script">
          if (drop trap.isopen) {
          }
        </onswitchon>
        <skin type="script">
          if (Got(stone knife)) {
            if (game.pov.parent = crafting table) {
              MoveObject (deer, stash)
              adding deer meat
            }
            else if (not game.pov.parent = crafting table) {
              msg ("You need a crafting table before you can skin the deer.")
            }
          }
          else if (not Got(stone knife)) {
            msg ("Need something to cut into the hide!")
          }
        </skin>
        <take type="script">
          if (deer.dead = True) {
            AddToInventory (deer)
          }
          else if (deer.dead = False) {
            msg ("You have to kill or trap it first.")
          }
        </take>
      </object>
      <exit alias="west" to="woods1">
        <inherit name="westdirection" />
      </exit>
      <exit alias="east" to="woods5">
        <inherit name="eastdirection" />
      </exit>
      <object name="grass4">
        <inherit name="editor_object" />
        <inherit name="enviroment" />
        <feature_usegive />
        <attr name="max_health" type="int">10</attr>
        <health type="int">10</health>
        <destroied type="boolean">false</destroied>
        <inventoryverbs type="stringlist">
          <value>Drop</value>
        </inventoryverbs>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
        </displayverbs>
        <dropmsg>Dropped grass.</dropmsg>
        <volume type="int">2</volume>
        <alias>grass</alias>
        <take type="script"><![CDATA[
          if (GetInt(grass4, "health") <= 0) {
            AddToInventory (grass4)
            msg ("You picked up grass.")
          }
          if (grass4.destroied = false) {
            if (GetInt(grass4, "health") >= 0) {
              msg ("You must break it down before taking.")
            }
          }
        ]]></take>
        <hit type="script"><![CDATA[
          if (grass4.destroied = false) {
            DecreaseObjectCounter (grass4, "health")
            DecreaseObjectCounter (grass4, "health")
            DecreaseObjectCounter (grass4, "health")
            DecreaseObjectCounter (grass4, "health")
            DecreaseObjectCounter (grass4, "health")
            play sound ("punch_or_whack_-Vladimir-403040765.wav", true, false)
          }
          if (GetInt(grass4, "health") <= 0) {
            set (grass4, "destroied", True)
          }
          if (grass4.destroied = True) {
            msg ("Grass is destroied!")
          }
        ]]></hit>
        <Craft type="script">
          if (not Got(grass)) {
            msg ("You must take item first.")
          }
          if (Got(grass)) {
            RemoveObject (grass)
            AddToInventory (plant fiber)
          }
        </Craft>
        <craft type="script">
          if (not Got(grass4)) {
            msg ("You must take first.")
          }
          if (Got(grass4)) {
            adding plant fibers
            MoveObject (grass4, stash)
          }
        </craft>
      </object>
      <exit alias="north" to="woods11">
        <inherit name="northdirection" />
      </exit>
    </object>
    <object name="woods4">
      <inherit name="editor_room" />
      <attr name="grid_width" type="int">2</attr>
      <attr name="grid_length" type="int">2</attr>
      <beforeenter type="script">
      </beforeenter>
      <enter type="script">
      </enter>
      <beforefirstenter type="script">
      </beforefirstenter>
      <alias>woods</alias>
      <object name="bush">
        <inherit name="editor_object" />
        <inherit name="enviroment" />
        <attr name="max_health" type="int">15</attr>
        <health type="int">15</health>
        <volume type="int">0</volume>
        <feature_usegive />
        <hit type="script"><![CDATA[
          if (bush.destroied = false) {
            DecreaseObjectCounter (bush, "health")
            DecreaseObjectCounter (bush, "health")
            DecreaseObjectCounter (bush, "health")
            DecreaseObjectCounter (bush, "health")
            DecreaseObjectCounter (bush, "health")
            play sound ("punch_or_whack_-Vladimir-403040765.wav", true, false)
          }
          if (GetInt(bush, "health") <= 0) {
            set (bush, "destroied", True)
            MoveObject (bush, stash)
            adding sticks
          }
          if (bush.destroied = True) {
            msg ("Bush is destroied!")
          }
        ]]></hit>
      </object>
      <exit alias="south" to="woods5">
        <inherit name="southdirection" />
      </exit>
      <object name="grass7">
        <inherit name="editor_object" />
        <inherit name="enviroment" />
        <feature_usegive />
        <attr name="max_health" type="int">10</attr>
        <health type="int">10</health>
        <destroied type="boolean">false</destroied>
        <inventoryverbs type="stringlist">
          <value>Drop</value>
        </inventoryverbs>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
        </displayverbs>
        <dropmsg>Dropped grass.</dropmsg>
        <volume type="int">2</volume>
        <alias>grass</alias>
        <take type="script"><![CDATA[
          if (GetInt(grass7, "health") <= 0) {
            AddToInventory (grass7)
            msg ("You picked up grass.")
          }
          if (grass7.destroied = false) {
            if (GetInt(grass7, "health") >= 0) {
              msg ("You must break it down before taking.")
            }
          }
        ]]></take>
        <hit type="script"><![CDATA[
          if (grass7.destroied = false) {
            DecreaseObjectCounter (grass7, "health")
            DecreaseObjectCounter (grass7, "health")
            DecreaseObjectCounter (grass7, "health")
            DecreaseObjectCounter (grass7, "health")
            DecreaseObjectCounter (grass7, "health")
            play sound ("punch_or_whack_-Vladimir-403040765.wav", true, false)
          }
          if (GetInt(grass7, "health") <= 0) {
            set (grass7, "destroied", True)
          }
          if (grass7.destroied = True) {
            msg ("Grass is destroied!")
          }
        ]]></hit>
        <Craft type="script">
          if (not Got(grass)) {
            msg ("You must take item first.")
          }
          if (Got(grass)) {
            RemoveObject (grass)
            AddToInventory (plant fiber)
          }
        </Craft>
        <craft type="script">
          if (not Got(grass7)) {
            msg ("You must take first.")
          }
          if (Got(grass7)) {
            adding plant fibers
            MoveObject (grass7, stash)
          }
        </craft>
      </object>
      <exit alias="east" to="woods10">
        <inherit name="eastdirection" />
      </exit>
      <exit alias="west" to="woods11">
        <inherit name="westdirection" />
      </exit>
    </object>
    <object name="hunting grounds 1">
      <inherit name="editor_room" />
      <object name="woods5">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
        <alias>woods</alias>
        <object name="tree3">
          <inherit name="editor_object" />
          <inherit name="enviroment" />
          <health type="int">5</health>
          <attr name="max_health" type="int">5</attr>
          <alias>tree</alias>
          <chop type="script">
            if (Got(stone axe)) {
              play sound ("axe_chop_wood_007.mp3", false, false)
              DecreaseObjectCounter (tree3, "health")
              adding leaves
            }
            if (not Got(stone axe)) {
              msg ("With what my bare hands?")
            }
            if (GetInt(tree3, "health") = 0) {
              msg ("TIMBER!")
              play sound ("tree_fall_down.mp3", true, false)
              MoveObject (tree3, stash)
              MoveObjectHere (fallen tree)
            }
          </chop>
        </object>
        <exit alias="west" to="woods3">
          <inherit name="westdirection" />
        </exit>
        <exit alias="north" to="woods4">
          <inherit name="northdirection" />
        </exit>
        <exit alias="south" to="woods6">
          <inherit name="southdirection" />
        </exit>
        <exit alias="east" to="woods7">
          <inherit name="eastdirection" />
        </exit>
        <object name="grass1">
          <inherit name="editor_object" />
          <inherit name="enviroment" />
          <feature_usegive />
          <attr name="max_health" type="int">10</attr>
          <health type="int">10</health>
          <destroied type="boolean">false</destroied>
          <inventoryverbs type="stringlist">
            <value>Drop</value>
          </inventoryverbs>
          <displayverbs type="stringlist">
            <value>Look at</value>
            <value>Take</value>
          </displayverbs>
          <dropmsg>Dropped grass.</dropmsg>
          <volume type="int">2</volume>
          <alias>grass</alias>
          <take type="script"><![CDATA[
            if (GetInt(grass1, "health") <= 0) {
              AddToInventory (grass1)
              msg ("You picked up grass.")
            }
            if (grass1.destroied = false) {
              if (GetInt(grass1, "health") >= 0) {
                msg ("You must break it down before taking.")
              }
            }
          ]]></take>
          <hit type="script"><![CDATA[
            if (grass1.destroied = false) {
              DecreaseObjectCounter (grass1, "health")
              DecreaseObjectCounter (grass1, "health")
              DecreaseObjectCounter (grass1, "health")
              DecreaseObjectCounter (grass1, "health")
              DecreaseObjectCounter (grass1, "health")
              play sound ("punch_or_whack_-Vladimir-403040765.wav", true, false)
            }
            if (GetInt(grass1, "health") <= 0) {
              set (grass1, "destroied", True)
            }
            if (grass1.destroied = True) {
              msg ("Grass is destroied!")
            }
          ]]></hit>
          <Craft type="script">
            if (not Got(grass)) {
              msg ("You must take item first.")
            }
            if (Got(grass)) {
              RemoveObject (grass)
              AddToInventory (plant fiber)
            }
          </Craft>
          <craft type="script">
            if (not Got(grass1)) {
              msg ("You must take first.")
            }
            if (Got(grass1)) {
              adding plant fibers
              MoveObject (grass1, stash)
            }
          </craft>
        </object>
        <object name="boulder">
          <inherit name="editor_object" />
          <inherit name="enviroment" />
          <health type="int">6</health>
          <attr name="feature_usegive" type="boolean">false</attr>
          <attr name="max_health" type="int">6</attr>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <mineboulder type="script"><![CDATA[
            if (Got(stone axe)) {
              play sound ("impact_rock_on_rubble_006.mp3", true, false)
              DecreaseObjectCounter (stone axe, "weapon health")
              DecreaseObjectCounter (boulder, "health")
            }
            else if (not Got(stone axe)) {
              msg ("You need a way to break boulder down.")
            }
            if (GetInt(boulder, "health") <= 0) {
              play sound ("impact_rock_on_rubble_004.mp3", true, false)
              MoveObject (boulder, stash)
              msg ("The boulder breaks apart leaving resouces behind.")
              adding iron
              adding flint
            }
          ]]></mineboulder>
        </object>
      </object>
      <object name="woods6">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
        <alias>woods</alias>
        <object name="boulder2">
          <inherit name="editor_object" />
          <inherit name="enviroment" />
          <health type="int">6</health>
          <attr name="feature_usegive" type="boolean">false</attr>
          <attr name="max_health" type="int">6</attr>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <mineboulder type="script"><![CDATA[
            if (Got(stone axe)) {
              play sound ("impact_rock_on_rubble_006.mp3", true, false)
              DecreaseObjectCounter (stone axe, "weapon health")
              DecreaseObjectCounter (boulder2, "health")
            }
            else if (not Got(stone axe)) {
              msg ("You need a way to break boulder down.")
            }
            if (GetInt(boulder2, "health") <= 0) {
              play sound ("impact_rock_on_rubble_004.mp3", true, false)
              MoveObject (boulder2, stash)
              msg ("The boulder breaks apart leaving resouces behind.")
              adding iron
              adding flint
            }
          ]]></mineboulder>
        </object>
        <exit alias="north" to="woods5">
          <inherit name="northdirection" />
        </exit>
        <object name="grass9">
          <inherit name="editor_object" />
          <inherit name="enviroment" />
          <feature_usegive />
          <attr name="max_health" type="int">10</attr>
          <health type="int">10</health>
          <destroied type="boolean">false</destroied>
          <inventoryverbs type="stringlist">
            <value>Drop</value>
          </inventoryverbs>
          <displayverbs type="stringlist">
            <value>Look at</value>
            <value>Take</value>
          </displayverbs>
          <dropmsg>Dropped grass.</dropmsg>
          <volume type="int">2</volume>
          <alias>grass</alias>
          <take type="script"><![CDATA[
            if (GetInt(grass9, "health") <= 0) {
              AddToInventory (grass9)
              msg ("You picked up grass.")
            }
            if (grass9.destroied = false) {
              if (GetInt(grass9, "health") >= 0) {
                msg ("You must break it down before taking.")
              }
            }
          ]]></take>
          <hit type="script"><![CDATA[
            if (grass9.destroied = false) {
              DecreaseObjectCounter (grass9, "health")
              DecreaseObjectCounter (grass9, "health")
              DecreaseObjectCounter (grass9, "health")
              DecreaseObjectCounter (grass9, "health")
              DecreaseObjectCounter (grass9, "health")
              play sound ("punch_or_whack_-Vladimir-403040765.wav", true, false)
            }
            if (GetInt(grass9, "health") <= 0) {
              set (grass9, "destroied", True)
            }
            if (grass9.destroied = True) {
              msg ("Grass is destroied!")
            }
          ]]></hit>
          <Craft type="script">
            if (not Got(grass)) {
              msg ("You must take item first.")
            }
            if (Got(grass)) {
              RemoveObject (grass)
              AddToInventory (plant fiber)
            }
          </Craft>
          <craft type="script">
            if (not Got(grass9)) {
              msg ("You must take first.")
            }
            if (Got(grass9)) {
              adding plant fibers
              MoveObject (grass9, stash)
            }
          </craft>
        </object>
        <object name="deer1">
          <alias>deer</alias>
          <movechance type="int">50</movechance>
          <volume type="int">25</volume>
          <dead type="boolean">false</dead>
          <skin type="script">
            if (Got(stone knife)) {
              if (game.pov.parent = crafting table) {
                MoveObject (deer1, stash)
                adding deer meat
              }
              else if (not game.pov.parent = crafting table) {
                msg ("You need a crafting table before you can skin the deer.")
              }
            }
            else if (not Got(stone knife)) {
              msg ("Need something to cut into the hide!")
            }
          </skin>
          <take type="script">
            if (deer1.dead = True) {
              AddToInventory (deer1)
            }
            else if (deer1.dead = False) {
              msg ("You have to kill or trap it first.")
            }
          </take>
        </object>
        <object name="bush1">
          <inherit name="editor_object" />
          <inherit name="enviroment" />
          <attr name="max_health" type="int">15</attr>
          <health type="int">15</health>
          <volume type="int">0</volume>
          <feature_usegive />
          <hit type="script"><![CDATA[
            if (bush1.destroied = false) {
              DecreaseObjectCounter (bush1, "health")
              DecreaseObjectCounter (bush1, "health")
              DecreaseObjectCounter (bush1, "health")
              DecreaseObjectCounter (bush1, "health")
              DecreaseObjectCounter (bush1, "health")
              play sound ("punch_or_whack_-Vladimir-403040765.wav", true, false)
            }
            if (GetInt(bush1, "health") <= 0) {
              set (bush1, "destroied", True)
              MoveObject (bush1, stash)
              adding sticks
            }
            if (bush1.destroied = True) {
              msg ("Bush is destroied!")
            }
          ]]></hit>
        </object>
      </object>
      <object name="woods7">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
        <alias>woods</alias>
        <object name="grass">
          <inherit name="editor_object" />
          <inherit name="enviroment" />
          <feature_usegive />
          <attr name="max_health" type="int">10</attr>
          <health type="int">10</health>
          <destroied type="boolean">false</destroied>
          <inventoryverbs type="stringlist">
            <value>Drop</value>
          </inventoryverbs>
          <displayverbs type="stringlist">
            <value>Look at</value>
            <value>Take</value>
          </displayverbs>
          <dropmsg>Dropped grass.</dropmsg>
          <volume type="int">2</volume>
          <take type="script"><![CDATA[
            if (GetInt(grass, "health") <= 0) {
              AddToInventory (grass)
              msg ("You picked up grass.")
            }
            if (grass.destroied = false) {
              if (GetInt(grass, "health") >= 0) {
                msg ("You must break it down before taking.")
              }
            }
          ]]></take>
          <hit type="script"><![CDATA[
            if (grass.destroied = false) {
              DecreaseObjectCounter (grass, "health")
              DecreaseObjectCounter (grass, "health")
              DecreaseObjectCounter (grass, "health")
              DecreaseObjectCounter (grass, "health")
              DecreaseObjectCounter (grass, "health")
              play sound ("punch_or_whack_-Vladimir-403040765.wav", true, false)
            }
            if (GetInt(grass, "health") <= 0) {
              set (grass, "destroied", True)
            }
            if (grass.destroied = True) {
              msg ("Grass is destroied!")
            }
          ]]></hit>
          <Craft type="script">
            if (not Got(grass)) {
              msg ("You must take item first.")
            }
            if (Got(grass)) {
              RemoveObject (grass)
              AddToInventory (plant fiber)
            }
          </Craft>
          <craft type="script">
            if (not Got(grass)) {
              msg ("You must take first.")
            }
            if (Got(grass)) {
              adding plant fibers
              MoveObject (grass, stash)
            }
          </craft>
        </object>
        <exit alias="west" to="woods5">
          <inherit name="westdirection" />
        </exit>
        <exit alias="east" to="woods9">
          <inherit name="eastdirection" />
        </exit>
        <exit alias="north" to="woods10">
          <inherit name="northdirection" />
        </exit>
        <object name="rabbit">
          <movechance type="int">95</movechance>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <dead type="boolean">false</dead>
          <skin type="script">
            if (Got(stone knife)) {
              if (game.pov.parent = crafting table) {
                MoveObject (rabbit, stash)
                adding rabbit meat
              }
              else if (not game.pov.parent = crafting table) {
                msg ("You need a crafting table before you can skin the rabbit.")
              }
            }
            else if (not Got(stone knife)) {
              msg ("Need something to cut into the hide!")
            }
          </skin>
          <take type="script">
            if (rabbit.dead = True) {
              AddToInventory (rabbit)
            }
            else if (rabbit.dead = False) {
              msg ("You have to kill or trap it first.")
            }
          </take>
        </object>
      </object>
      <object name="woods9">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
        <dark type="boolean">false</dark>
        <alias>woods</alias>
        <object name="tree4">
          <inherit name="editor_object" />
          <inherit name="enviroment" />
          <health type="int">5</health>
          <attr name="max_health" type="int">5</attr>
          <alias>tree</alias>
          <chop type="script">
            if (Got(stone axe)) {
              play sound ("axe_chop_wood_007.mp3", false, false)
              DecreaseObjectCounter (tree4, "health")
              adding leaves
            }
            if (not Got(stone axe)) {
              msg ("With what my bare hands?")
            }
            if (GetInt(tree4, "health") = 0) {
              msg ("TIMBER!")
              play sound ("tree_fall_down.mp3", true, false)
              MoveObject (tree4, stash)
              MoveObjectHere (fallen tree)
            }
          </chop>
        </object>
        <exit alias="west" to="woods7">
          <inherit name="westdirection" />
          <look>Looking in this direction still seems point less just more grass and woods.</look>
        </exit>
        <object name="grass2">
          <inherit name="editor_object" />
          <inherit name="enviroment" />
          <feature_usegive />
          <attr name="max_health" type="int">10</attr>
          <health type="int">10</health>
          <destroied type="boolean">false</destroied>
          <inventoryverbs type="stringlist">
            <value>Drop</value>
          </inventoryverbs>
          <displayverbs type="stringlist">
            <value>Look at</value>
            <value>Take</value>
          </displayverbs>
          <dropmsg>Dropped grass.</dropmsg>
          <volume type="int">2</volume>
          <take type="script"><![CDATA[
            if (GetInt(grass2, "health") <= 0) {
              AddToInventory (grass2)
              msg ("You picked up grass.")
            }
            if (grass2.destroied = false) {
              if (GetInt(grass2, "health") >= 0) {
                msg ("You must break it down before taking.")
              }
            }
          ]]></take>
          <hit type="script"><![CDATA[
            if (grass2.destroied = false) {
              DecreaseObjectCounter (grass2, "health")
              DecreaseObjectCounter (grass2, "health")
              DecreaseObjectCounter (grass2, "health")
              DecreaseObjectCounter (grass2, "health")
              DecreaseObjectCounter (grass2, "health")
              play sound ("punch_or_whack_-Vladimir-403040765.wav", true, false)
            }
            if (GetInt(grass2, "health") <= 0) {
              set (grass2, "destroied", True)
            }
            if (grass2.destroied = True) {
              msg ("Grass is destroied!")
            }
          ]]></hit>
          <Craft type="script">
            if (not Got(grass)) {
              msg ("You must take item first.")
            }
            if (Got(grass)) {
              RemoveObject (grass)
              AddToInventory (plant fiber)
            }
          </Craft>
          <craft type="script">
            if (not Got(grass2)) {
              msg ("You must take first.")
            }
            if (Got(grass2)) {
              adding plant fibers
              MoveObject (grass2, stash)
            }
          </craft>
        </object>
        <exit alias="north" to="woods8">
          <inherit name="northdirection" />
        </exit>
      </object>
    </object>
    <object name="hunting grounds 2">
      <inherit name="editor_room" />
      <object name="woods10">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
        <alias>woods</alias>
        <exit alias="south" to="woods7">
          <inherit name="southdirection" />
        </exit>
        <exit alias="east" to="woods8">
          <inherit name="eastdirection" />
        </exit>
        <exit alias="west" to="woods4">
          <inherit name="westdirection" />
        </exit>
        <object name="bush4">
          <inherit name="editor_object" />
          <inherit name="enviroment" />
          <attr name="max_health" type="int">15</attr>
          <health type="int">15</health>
          <volume type="int">0</volume>
          <feature_usegive />
          <hit type="script"><![CDATA[
            if (bush4.destroied = false) {
              DecreaseObjectCounter (bush4, "health")
              DecreaseObjectCounter (bush4, "health")
              DecreaseObjectCounter (bush4, "health")
              DecreaseObjectCounter (bush4, "health")
              DecreaseObjectCounter (bush4, "health")
              play sound ("punch_or_whack_-Vladimir-403040765.wav", true, false)
            }
            if (GetInt(bush4, "health") <= 0) {
              set (bush4, "destroied", True)
              MoveObject (bush4, stash)
              adding sticks
            }
            if (bush4.destroied = True) {
              msg ("Bush is destroied!")
            }
          ]]></hit>
        </object>
      </object>
      <object name="woods8">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
        <alias>woods</alias>
        <exit alias="west" to="woods10">
          <inherit name="westdirection" />
        </exit>
        <exit alias="south" to="woods9">
          <inherit name="southdirection" />
        </exit>
        <object name="bush3">
          <inherit name="editor_object" />
          <inherit name="enviroment" />
          <attr name="max_health" type="int">15</attr>
          <health type="int">15</health>
          <volume type="int">0</volume>
          <feature_usegive />
          <hit type="script"><![CDATA[
            if (bush3.destroied = false) {
              DecreaseObjectCounter (bush3, "health")
              DecreaseObjectCounter (bush3, "health")
              DecreaseObjectCounter (bush3, "health")
              DecreaseObjectCounter (bush3, "health")
              DecreaseObjectCounter (bush3, "health")
              play sound ("punch_or_whack_-Vladimir-403040765.wav", true, false)
            }
            if (GetInt(bush3, "health") <= 0) {
              set (bush3, "destroied", True)
              MoveObject (bush3, stash)
              adding sticks
            }
            if (bush3.destroied = True) {
              msg ("Bush is destroied!")
            }
          ]]></hit>
          <alias>bush</alias>
        </object>
        <object name="posioned pond">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <alias>pond</alias>
          <feature_container />
          <hidechildren />
          <look type="script">
            play sound ("footsteps_in_water_2.mp3", true, false)
          </look>
          <object name="dirty water">
            <inherit name="editor_object" />
            <inherit name="surface" />
            <alias>water</alias>
            <drink type="script">
              IncreaseObjectCounter (player, "Thirst")
              play sound ("drink_slurp_from_cup_001.mp3", false, false)
              msg ("Oh thats not gonna settle well.")
              EnableTimer (posined timer)
              SetTimeout (21) {
                msg ("\" Oh I think my stomach is settling a little.\"")
                DisableTimer (posined timer)
              }
            </drink>
            <look type="script">
              if (RandomChance(50)) {
                MakeObjectVisible (dead fish)
                msg ("\"Oh God thats nasty water I don't think its safe to drink.\"")
              }
              else {
                MakeObjectInvisible (dead fish)
                msg ("\"Water looks pretty rank!\"")
              }
            </look>
            <feature_container />
            <hidechildren />
            <object name="dead fish">
              <inherit name="editor_object" />
            </object>
          </object>
        </object>
      </object>
      <object name="woods11">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
        <alias>woods</alias>
        <exit alias="south" to="woods3">
          <inherit name="southdirection" />
        </exit>
        <exit alias="east" to="woods4">
          <inherit name="eastdirection" />
        </exit>
        <exit alias="west" to="woods">
          <inherit name="westdirection" />
        </exit>
        <object name="rabbit1">
          <movechance type="int">95</movechance>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <dead type="boolean">false</dead>
          <skin type="script">
            if (Got(stone knife)) {
              if (game.pov.parent = crafting table) {
                MoveObject (rabbit1, stash)
                adding rabbit meat
              }
              else if (not game.pov.parent = crafting table) {
                msg ("You need a crafting table before you can skin the rabbit.")
              }
            }
            else if (not Got(stone knife)) {
              msg ("Need something to cut into the hide!")
            }
          </skin>
          <take type="script">
            if (rabbit.dead = True) {
              AddToInventory (rabbit)
            }
            else if (rabbit.dead = False) {
              msg ("You have to kill or trap it first.")
            }
          </take>
          <alias>rabbit</alias>
        </object>
      </object>
      <object name="woods12">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
        <alias>woods</alias>
      </object>
    </object>
    <object name="hunting grounds 3">
      <inherit name="editor_room" />
      <object name="woods13">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
      </object>
      <object name="woods14">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
      </object>
      <object name="woods15">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
      </object>
      <object name="woods16">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
      </object>
    </object>
  </object>
  <verb>
    <property>set</property>
    <pattern>set</pattern>
    <defaultexpression>"You can't set " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>skin</property>
    <pattern>skin</pattern>
    <defaultexpression>"You can't skin " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>cook</property>
    <pattern>cook</pattern>
    <defaultexpression>"You can't cook " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>shoot</property>
    <pattern>shoot</pattern>
    <defaultexpression>"You can't shoot " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>spearfish</property>
    <pattern>spear fish</pattern>
    <defaultexpression>"You can't spear fish " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>spikepit</property>
    <pattern>spike pit</pattern>
    <defaultexpression>"You can't spike pit " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>camoflauge</property>
    <pattern>camoflauge</pattern>
    <defaultexpression>"You can't camoflauge " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>dig</property>
    <pattern>dig</pattern>
    <defaultexpression>"You can't dig " + object.article + "."</defaultexpression>
  </verb>
  <type name="enviroment">
    <health type="int">0</health>
    <attr name="max_health" type="int">0</attr>
    <destroied type="boolean">false</destroied>
  </type>
  <type name="weapon">
    <attr name="weapon health" type="int">0</attr>
    <destroied type="boolean">false</destroied>
    <damage type="int">0</damage>
  </type>
  <function name="trunk crafting" type="int"><![CDATA[
    if (GetInt(tree trunks, "volume") >= 1) {
      if (Got(planks)) {
        IncreaseObjectCounter (planks, "volume")
        IncreaseObjectCounter (planks, "volume")
        IncreaseObjectCounter (planks, "volume")
      }
      else if (not Got(planks)) {
        AddToInventory (planks)
      }
      DecreaseObjectCounter (tree trunks, "volume")
    }
    if (GetInt(tree trunks, "volume") <= 0) {
      MoveObject (tree trunks, stash)
    }
  ]]></function>
  <function name="plank crafting" type="int"><![CDATA[
    menulist = NewStringList()
    list add (menulist, "stick")
    list add (menulist, "wood frame")
    list add (menulist, "basic campfire")
    ShowMenu ("select what to craft", menulist, true) {
      if (result="wood frame") {
        if (GetInt(planks, "volume") >= 4) {
          if (Got(wood frame)) {
            IncreaseObjectCounter (wood frame, "volume")
            IncreaseObjectCounter (wood frame, "volume")
            IncreaseObjectCounter (wood frame, "volume")
            IncreaseObjectCounter (wood frame, "volume")
            IncreaseObjectCounter (wood frame, "volume")
          }
          else if (not Got(wood frame)) {
            AddToInventory (wood frame)
          }
          DecreaseObjectCounter (planks, "volume")
          DecreaseObjectCounter (planks, "volume")
          DecreaseObjectCounter (planks, "volume")
          DecreaseObjectCounter (planks, "volume")
          msg ("Wood Frame crafted!")
        }
        else if (GetInt(planks, "volume") <= 3) {
          msg ("You need more planks before you can craft.")
        }
      }
      else if (result="stick") {
        if (GetInt(planks, "volume") >= 1) {
          DecreaseObjectCounter (planks, "volume")
          adding sticks
          msg ("Stick crafted!")
        }
        else if (GetInt(planks, "volume") < 1) {
          msg ("All out of planks.")
        }
      }
      else if (result="basic campfire") {
        if (GetInt(planks, "volume") >= 3) {
          if (Got(sharp stone)) {
            DecreaseObjectCounter (planks, "volume")
            DecreaseObjectCounter (planks, "volume")
            DecreaseObjectCounter (planks, "volume")
            DecreaseObjectCounter (sharp stone, "volume")
            MoveObjectHere (basic campfire)
            if (GetInt(planks, "volume") <= 0) {
              MoveObject (planks, stash)
            }
            if (GetInt(sharp stone, "volume") <= 0) {
              MoveObject (sharp stone, stash)
            }
          }
          else if (not Got(sharp stone)) {
            msg ("You have no stones to incase the fire.")
          }
        }
        if (GetInt(planks, "volume") > 2) {
          msg ("You need more planks before crafting this.")
        }
      }
    }
    if (GetInt(planks, "volume") <= 0) {
      MoveObject (planks, stash)
      msg ("You have no more planks.")
    }
  ]]></function>
  <function name="frame crafting" type="int"><![CDATA[
    if (GetInt(wood frame, "volume") >= 20) {
      if (not Got(wood wall)) {
        AddToInventory (wood wall)
      }
      else if (Got(wood wall)) {
        IncreaseObjectCounter (wood wall, "volume")
      }
      set (wood frame, "volume", -20)
    }
    else if (GetInt(wood frame, "volume") < 20) {
      msg ("You need more frame before crafting that.")
    }
    if (GetInt(wood frame, "volume") <= 0) {
      MoveObject (wood frame, stash)
      msg ("All out of frames.")
    }
  ]]></function>
  <function name="adding trunks" type="int"><![CDATA[
    if (Got(tree trunks)) {
      IncreaseObjectCounter (tree trunks, "volume")
      IncreaseObjectCounter (tree trunks, "volume")
      IncreaseObjectCounter (tree trunks, "volume")
      IncreaseObjectCounter (tree trunks, "volume")
      IncreaseObjectCounter (tree trunks, "volume")
      msg ("Picked up tree trunks.")
    }
    else if (not Got(tree trunks)) {
      if (GetInt(tree trunks, "volume") >= 0) {
        IncreaseObjectCounter (tree trunks, "volume")
        IncreaseObjectCounter (tree trunks, "volume")
        IncreaseObjectCounter (tree trunks, "volume")
        IncreaseObjectCounter (tree trunks, "volume")
        IncreaseObjectCounter (tree trunks, "volume")
        MoveObjectHere (tree trunks)
      }
    }
    MoveObject (fallen tree, stash)
  ]]></function>
  <function name="tool crafting">
    toolsmenu = NewStringList()
    list add (toolsmenu, "shovel")
    list add (toolsmenu, "hammer")
    list add (toolsmenu, "forge")
    list add (toolsmenu, "gardening hoe")
    list add (toolsmenu, "flint and steel")
    ShowMenu ("choose an item to craft.", toolsmenu, true) {
      if (result="shovel") {
      }
      else if (result="hammer") {
      }
      else if (result="forge") {
      }
      else if (result="gardening hoe") {
      }
      else if (result="flint and steel") {
        combine flint_steel
      }
    }
  </function>
  <function name="shelter crafting">
    sheltermenu = NewStringList()
    list add (sheltermenu, "teepee")
    list add (sheltermenu, "tent")
    list add (sheltermenu, "small cabin")
    list add (sheltermenu, "cabin")
    list add (sheltermenu, "large cabin")
    ShowMenu ("choose a shelter to craft.", sheltermenu, true) {
      if (result="teepee") {
      }
      else if (result="tent") {
      }
      else if (result="small cabin") {
      }
      else if (result="cabin") {
      }
      else if (result="large cabin") {
      }
    }
  </function>
  <function name="food_drinks crafting">
    food_drinkmenu = NewStringList()
    list add (food_drinkmenu, "tea")
    list add (food_drinkmenu, "grilled rabbit")
    list add (food_drinkmenu, "grilled venison")
    list add (food_drinkmenu, "grilled fish")
    list add (food_drinkmenu, "coffee")
    list add (food_drinkmenu, "water")
    ShowMenu ("choose a item to craft.", food_drinkmenu, true) {
    }
  </function>
  <function name="weapon crafting">
    weaponsmenu = NewStringList()
    list add (weaponsmenu, "bow")
    list add (weaponsmenu, "arrows")
    list add (weaponsmenu, "stone knife")
    list add (weaponsmenu, "machete")
    list add (weaponsmenu, "spear")
    list add (weaponsmenu, "cross bow")
    ShowMenu ("What weapon do you want to craft?", weaponsmenu, true) {
      if (result="arrows") {
        arrow crafting
      }
      if (result="stone knife") {
        stone knife crafting
      }
      if (result="bow") {
        bow crafting
      }
      if (result="cross bow") {
        cross bow crafting
      }
      if (result="machete") {
        machete crafting
      }
      else if (result="spear") {
        spear crafting
      }
    }
  </function>
  <function name="wood_frame_upgrade">
    if (Got(planks)) {
      if (not Got(wood frame)) {
        MoveObject (wood frame, stash)
        play sound ("hammer_hitting_nail_into_wood.mp3", true, false)
        MoveObjectHere (fortify wood)
        msg ("Frame upgraded.")
        DecreaseObjectCounter (planks, "volume")
        DecreaseObjectCounter (planks, "volume")
      }
      else if (Got(wood frame)) {
        msg ("You must place frame frist.")
      }
    }
    if (not Got(planks)) {
      msg ("You need planks to upgrade this frame.")
    }
  </function>
  <function name="wood_frame_upgrade_1"><![CDATA[
    if (GetInt(planks, "volume") >= 3) {
      MoveObject (fortify wood, stash)
      play sound ("hammer_hitting_nail_into_wood.mp3", true, false)
      MoveObjectHere (fortified wood 1)
      DecreaseObjectCounter (planks, "volume")
      DecreaseObjectCounter (planks, "volume")
      DecreaseObjectCounter (planks, "volume")
    }
    else if (GetInt(planks, "volume") <= 3) {
      msg ("You need more plamks to upgrade.")
    }
  ]]></function>
  <function name="trap crafting">
    trapmenu = NewStringList()
    list add (trapmenu, "snare trap")
    list add (trapmenu, "box trap")
    list add (trapmenu, "net trap")
    list add (trapmenu, "drop trap")
    ShowMenu ("choose a trap to craft.", trapmenu, true) {
      if (result="snare trap") {
      }
      else if (result="box trap") {
      }
      else if (result="net trap") {
      }
      else if (result="drop trap") {
        drop trap crafting
      }
    }
  </function>
  <function name="flint_steel fire"><![CDATA[
    if (Got(flint_steel)) {
      if (Got(tree trunks)) {
        set (basic campfire, "lightsource", True)
        if (basic campfire.lightsource = True) {
          msg ("You lite the fire!<br/> Now that should keep you warm for awhile<br/> and be able to cook and clean water.")
          EnableTimer (Fire Burning)
          EnableTimer (Exposer Fire)
          play sound ("large_fire_burning.mp3", false, true)
        }
      }
      else if (not Got(tree trunks)) {
        msg ("You need a fuel source to burn.")
      }
    }
    else if (not Got(flint_steel)) {
      msg ("It would help if you had fint & steel, you might want to craft some.")
    }
  ]]></function>
  <function name="sticks_leaves fire"><![CDATA[
    if (Got(stick)) {
      if (Got(leaves)) {
        if (RandomChance(50)) {
          set (basic campfire, "lightsource", True)
        }
        if (basic campfire.lightsource = True) {
          msg ("You lite the fire!<br/> Now that should keep you warm for awhile and be able to cook and clean water.")
          EnableTimer (Fire Burning)
          EnableTimer (Exposer Fire)
        }
        if (basic campfire.lightsource = False) {
          msg ("No luck on lighting the fire keep trying!")
        }
      }
      else if (not Got(leaves)) {
        msg ("You need some leaves to help light the fire.")
      }
    }
    else if (not Got(stick)) {
      msg ("Try using a stick, that might help.")
    }
  ]]></function>
  <function name="sticks_coal fire"><![CDATA[
    if (Got(stick)) {
      if (Got(coal)) {
        if (RandomChance(75)) {
          set (basic campfire, "lightsource", True)
        }
      }
      else if (not Got(coal)) {
        msg ("You need to add some coad before this fire has a chance to lite.")
      }
      if (basic campfire.lightsource = False) {
        msg ("No luck on lighting the fire keep trying!")
      }
      if (basic campfire.lightsource = True) {
        msg ("You lite the fire!<br/> Now that should keep you warm for awhile and be able to cook and clean water.")
        EnableTimer (Fire Burning)
        EnableTimer (Exposer Fire)
      }
    }
    else if (not Got(stick)) {
      msg ("Help to have some sticks before trying this.")
    }
  ]]></function>
  <function name="rock crafting">
    if (not Got(sharp stone)) {
      AddToInventory (sharp stone)
      msg ("You crafted a sharp stone.")
    }
    else if (Got(sharp stone)) {
      IncreaseObjectCounter (sharp stone, "volume")
      msg ("You crafted a sharp stone.")
    }
  </function>
  <function name="combine flint_steel"><![CDATA[
    if (Got(flint)) {
      if (Got(iron scrap)) {
        if (GetInt(flint, "volume") >= 1) {
          if (GetInt(iron scrap, "volume") >= 1) {
            DecreaseObjectCounter (iron scrap, "volume")
            DecreaseObjectCounter (flint, "volume")
            if (GetInt(flint, "volume") = 0) {
              if (GetInt(iron scrap, "volume") = 0) {
                MoveObject (flint, stash)
                MoveObject (iron scrap, stash)
              }
            }
            AddToInventory (flint_steel)
          }
        }
      }
      else if (not Got(iron scrap)) {
        msg ("Well you have the flint but no metal.")
      }
    }
    else if (not Got(flint)) {
      msg ("It would help if you had some flint.")
    }
  ]]></function>
  <function name="adding iron">
    if (Got(iron scrap)) {
      IncreaseObjectCounter (iron scrap, "volume")
      msg ("You picked up more iron scraps.")
    }
    else if (not Got(iron scrap)) {
      MoveObjectHere (iron scrap)
    }
  </function>
  <function name="adding flint">
    if (Got(flint)) {
      IncreaseObjectCounter (iron scrap, "volume")
    }
    else if (not Got(flint)) {
      IncreaseObjectCounter (iron scrap, "volume")
      MoveObjectHere (flint)
    }
  </function>
  <function name="exposed rain">
    if (not game.pov.parent = basic campfire) {
      EnableTimer (rain Exposer)
    }
    else if (game.pov.parent = basic campfire) {
      if (basic campfire.lightsource = True) {
        msg ("Good thing im by the fire.")
        DisableTimer (rain Exposer)
      }
      else if (basic campfire.lightsource = False) {
        msg ("Better get a fire going if I wanna stay warm.")
        EnableTimer (rain Exposer)
      }
    }
  </function>
  <function name="drop trap setting">
    if (RandomChance(60)) {
      SetTimeout (120) {
        DisableTurnScript (trapset)
        DisableTurnScript (deermoves)
        MoveObject (deer, drop trap)
        set (drop trap, "set trap", False)
      }
    }
  </function>
  <function name="drop trap crafting"><![CDATA[
    if (Got(planks)) {
      if (Got(rope)) {
        if (GetInt(planks, "volume") >= 6) {
          if (GetInt(rope, "volume") >= 4) {
            DecreaseObjectCounter (rope, "volume")
            DecreaseObjectCounter (rope, "volume")
            DecreaseObjectCounter (rope, "volume")
            DecreaseObjectCounter (rope, "volume")
            DecreaseObjectCounter (planks, "volume")
            DecreaseObjectCounter (planks, "volume")
            DecreaseObjectCounter (planks, "volume")
            DecreaseObjectCounter (planks, "volume")
            DecreaseObjectCounter (planks, "volume")
            DecreaseObjectCounter (planks, "volume")
            MoveObjectHere (drop trap)
            nomore rope
            nomore planks
          }
          else if (GetInt(rope, "volume") < 4) {
            msg ("You need more rope.")
          }
        }
        else if (GetInt(planks, "volume") > 6) {
          msg ("You don't have enough planks for this.")
        }
      }
      else if (not Got(rope)) {
        msg ("You need rope t tie it together.")
      }
    }
    else if (not Got(planks)) {
      msg ("Help to have planks to make the cage with.")
    }
  ]]></function>
  <function name="adding rope"><![CDATA[
    if (Got(rope)) {
      IncreaseObjectCounter (rope, "volume")
      IncreaseObjectCounter (rope, "volume")
      IncreaseObjectCounter (rope, "volume")
      IncreaseObjectCounter (rope, "volume")
      IncreaseObjectCounter (rope, "volume")
      IncreaseObjectCounter (rope, "volume")
      DecreaseObjectCounter (plant fiber, "volume")
      DecreaseObjectCounter (plant fiber, "volume")
      DecreaseObjectCounter (plant fiber, "volume")
      msg ("You crafted up 5 extra feet of rope.")
      nomore plantfibers
    }
    else if (not Got(rope)) {
      if (GetInt(rope, "volume") <= 1) {
        IncreaseObjectCounter (rope, "volume")
        IncreaseObjectCounter (rope, "volume")
        IncreaseObjectCounter (rope, "volume")
        IncreaseObjectCounter (rope, "volume")
        IncreaseObjectCounter (rope, "volume")
        IncreaseObjectCounter (rope, "volume")
        DecreaseObjectCounter (plant fiber, "volume")
        DecreaseObjectCounter (plant fiber, "volume")
        DecreaseObjectCounter (plant fiber, "volume")
        AddToInventory (rope)
        nomore plantfibers
      }
    }
  ]]></function>
  <function name="adding plant fibers">
    if (Got(plant fiber)) {
      IncreaseObjectCounter (plant fiber, "volume")
      msg ("You crafted more plant fibers.")
    }
    else if (not Got(plant fiber)) {
      IncreaseObjectCounter (plant fiber, "volume")
      AddToInventory (plant fiber)
      msg ("You crafted a plant fiber.")
    }
  </function>
  <function name="cooking meat">
    meatmenu = NewStringList()
    list add (meatmenu, "deer meat")
    list add (meatmenu, "rabbit meat")
    list add (meatmenu, "fish fillet")
    list add (meatmenu, "boar meat")
    list add (meatmenu, "bird meat")
    ShowMenu ("What are you cooking?", meatmenu, true) {
      if (result="deer meat") {
        tool crafting
      }
      if (result="rabbit meat") {
        shelter crafting
      }
      if (result="fish fillet") {
        weapon crafting
      }
      if (result="boar meat") {
        food_drinks crafting
      }
      if (result="bird meat") {
        trap crafting
      }
    }
  </function>
  <function name="liquid cooking">
  </function>
  <function name="deer cooking">
    if (Got(deer meat)) {
    }
  </function>
  <function name="handle crafting"><![CDATA[
    if (Got(stick)) {
      if (GetInt(stick, "volume") >= 2) {
        if (not Got(handle)) {
          DecreaseObjectCounter (stick, "volume")
          DecreaseObjectCounter (stick, "volume")
          AddToInventory (handle)
          msg ("You made a handle.")
          nomore sticks
        }
        else if (Got(handle)) {
          msg ("You can only craft one handle at a time, try making a tool first.")
        }
      }
      else if (GetInt(stick, "volume") < 2) {
        msg ("You need more sticks, makes the handle stronger.")
      }
    }
  ]]></function>
  <function name="torch crafting">
    if (Got(stick)) {
      if (Got(cloth)) {
        DecreaseObjectCounter (stick, "volume")
        DecreaseObjectCounter (cloth, "volume")
        AddToInventory (torch)
        nomore sticks
        nomore cloth
      }
    }
  </function>
  <function name="tent frame crafting"><![CDATA[
    if (Got(stick)) {
      if (GetInt(stick, "volume") >= 5) {
        AddToInventory (tent frame)
        DecreaseObjectCounter (stick, "volume")
        DecreaseObjectCounter (stick, "volume")
        DecreaseObjectCounter (stick, "volume")
        DecreaseObjectCounter (stick, "volume")
        DecreaseObjectCounter (stick, "volume")
      }
      else if (GetInt(stick, "volume") < 5) {
        msg ("You do not have enough sticks to make this.")
      }
    }
    else if (not Got(stick)) {
      msg ("You are not carry the item you want to craft with.")
    }
  ]]></function>
  <function name="nest loot">
    adding eggs
    adding feathers
  </function>
  <function name="adding eggs"><![CDATA[
    if (Got(eggs)) {
      if (RandomChance(70)) {
        IncreaseObjectCounter (eggs, "volume")
        IncreaseObjectCounter (eggs, "volume")
        msg ("You picked up some extra eggs. <br/>Keep an eye out for more.")
      }
      else if (RandomChance(25)) {
        msg ("You didn't find any eggs this time.<br/>Keep looking you'll find something.")
      }
    }
    else if (not Got(eggs)) {
      if (RandomChance(70)) {
        MoveObjectHere (eggs)
        IncreaseObjectCounter (eggs, "volume")
        IncreaseObjectCounter (eggs, "volume")
        msg ("Oh look some eggs.")
      }
      else if (RandomChance(25)) {
        msg ("No eggs this time.")
      }
    }
  ]]></function>
  <function name="adding feathers"><![CDATA[
    if (Got(feathers)) {
      if (RandomChance(80)) {
        IncreaseObjectCounter (feathers, "volume")
        IncreaseObjectCounter (feathers, "volume")
        IncreaseObjectCounter (feathers, "volume")
        msg ("You picked up some feathers.<br/>Keep an eye out for more.")
      }
      else if (RandomChance(25)) {
        msg ("You didn't find any feathers this time.<br/>Keep looking you'll find something.")
      }
    }
    else if (not Got(feathers)) {
      if (RandomChance(80)) {
        MoveObjectHere (feathers)
        IncreaseObjectCounter (feathers, "volume")
        IncreaseObjectCounter (feathers, "volume")
        IncreaseObjectCounter (feathers, "volume")
        msg ("There are some feathers.")
      }
      else if (RandomChance(25)) {
        msg ("No feathers this time.")
      }
    }
  ]]></function>
  <function name="adding deer meat"><![CDATA[
    if (Got(deer meat)) {
      IncreaseObjectCounter (deer meat, "volume")
      IncreaseObjectCounter (deer meat, "volume")
      IncreaseObjectCounter (deer meat, "volume")
      msg ("You have skiinned the deer, blood steams down your hands as you think you better wash that off before it causes an infection.<br/>You added the meat to the others.")
    }
    else if (not Got(deer meat)) {
      IncreaseObjectCounter (deer meat, "volume")
      IncreaseObjectCounter (deer meat, "volume")
      IncreaseObjectCounter (deer meat, "volume")
      MoveObjectHere (deer meat)
      msg ("You have skiinned the deer, blood steams down your hands as you think you better wash that off before it causes an infection.")
    }
  ]]></function>
  <function name="adding rabbit meat"><![CDATA[
    if (Got(rabbit meat)) {
      IncreaseObjectCounter (rabbit meat, "volume")
      IncreaseObjectCounter (rabbit meat, "volume")
      msg ("You have skiinned the rabbit, blood steams down your hands as you think you better wash that off before it causes an infection<br/>You added the meat to the others.")
    }
    else if (not Got(rabbit meat)) {
      IncreaseObjectCounter (rabbit meat, "volume")
      IncreaseObjectCounter (rabbit meat, "volume")
      MoveObjectHere (rabbit meat)
      msg ("You have skiinned the rabbit, blood steams down your hands as you think you better wash that off before it causes an infection.")
    }
  ]]></function>
  <function name="adding boar meat"><![CDATA[
    if (Got(boar meat)) {
      IncreaseObjectCounter (boar meat, "volume")
      IncreaseObjectCounter (boar meat, "volume")
      IncreaseObjectCounter (boar meat, "volume")
      msg ("You have skiinned the boar, blood steams down your hands as you think you better wash that off before it causes an infection.<br/>You added the meat to the others.")
    }
    else if (not Got(boar meat)) {
      IncreaseObjectCounter (boar meat, "volume")
      IncreaseObjectCounter (boar meat, "volume")
      IncreaseObjectCounter (boar meat, "volume")
      MoveObjectHere (boar meat)
      msg ("You have skiinned the boar, blood steams down your hands as you think you better wash that off before it causes an infection.")
    }
  ]]></function>
  <function name="arrow crafting"><![CDATA[
    if (Got(feathers)) {
      if (Got(flint)) {
        if (Got(stick)) {
          DecreaseObjectCounter (stick, "volume")
          DecreaseObjectCounter (feathers, "volume")
          DecreaseObjectCounter (flint, "volume")
          adding arrows
        }
        else if (not Got(stick)) {
          msg ("You do not have any sticks for arrows.")
        }
      }
      else if (not Got(flint)) {
        msg ("Need to find some flint for the tip befor you can finish these.")
      }
    }
    else if (not Got(feathers)) {
      msg ("You need a guide for the arrow. Maybe try to find some feathers.")
    }
    if (GetInt(stick, "volume") <= 0) {
      RemoveObject (stick)
    }
    if (GetInt(feathers, "volume") <= 0) {
      RemoveObject (feathers)
    }
    if (GetInt(flint, "volume") <= 0) {
      RemoveObject (flint)
    }
  ]]></function>
  <function name="adding arrows">
    if (Got(arrows)) {
      IncreaseObjectCounter (arrows, "volume")
      msg ("You crafted up a arrow, you might want more.")
    }
    else if (not Got(arrows)) {
      IncreaseObjectCounter (arrows, "volume")
      AddToInventory (arrows)
      msg ("You crafted up a arrow, you might want more.")
    }
  </function>
  <function name="stone knife crafting">
  </function>
  <function name="bow crafting"><![CDATA[
    if (Got(stick)) {
      if (GetInt(stick, "volume") >= 2) {
        if (Got(handle)) {
          if (Got(rope)) {
            if (GetInt(rope, "volume") >= 2) {
              DecreaseObjectCounter (stick, "volume")
              DecreaseObjectCounter (stick, "volume")
              DecreaseObjectCounter (rope, "volume")
              DecreaseObjectCounter (rope, "volume")
              AddToInventory (bow)
              nomore sticks
              nomore rope
            }
            else if (GetInt(rope, "volume") < 2) {
              msg ("You need more rope before making a bow.")
            }
          }
          else if (not Got(rope)) {
            msg ("You some rope to make the bow.")
          }
        }
        else if (not Got(handle)) {
          msg ("You need to craft a handle for the bow first.")
        }
      }
      else if (GetInt(stick, "volume") < 2) {
        msg ("You need to gather more sticks to craft the bow.")
      }
    }
    else if (not Got(stick)) {
      msg ("Without any sticks you can not craft a bow.")
    }
  ]]></function>
  <function name="cross bow crafting">
  </function>
  <function name="machete crafting"><![CDATA[
    if (Got(iron scrap)) {
      if (GetInt(iron scrap, "volume") < 4) {
        if (Got(handle)) {
          AddToInventory (machete)
          DecreaseObjectCounter (handle, "volume")
          DecreaseObjectCounter (iron scrap, "volume")
          DecreaseObjectCounter (iron scrap, "volume")
          DecreaseObjectCounter (iron scrap, "volume")
          DecreaseObjectCounter (iron scrap, "volume")
        }
        else if (not Got(handle)) {
          msg ("You need a handle for the grip.")
        }
      }
      else if (GetInt(iron scrap, "volume") <= 3) {
        msg ("You need more iron befroe you can craft a machete.")
      }
    }
    else if (not Got(iron scrap)) {
      msg ("You should find some iron first to craft this.")
    }
  ]]></function>
  <function name="box trap crafting"><![CDATA[
    if (Got(wood frame)) {
      if (Got(stick)) {
        if (GetInt(stick, "volume") >= 4) {
          DecreaseObjectCounter (stick, "volume")
          DecreaseObjectCounter (stick, "volume")
          DecreaseObjectCounter (stick, "volume")
          DecreaseObjectCounter (stick, "volume")
          DecreaseObjectCounter (wood frame, "volume")
          AddToInventory (box trap)
        }
        else if (GetInt(stick, "volume") < 4) {
          msg ("Need some more sticks to complete the box.")
        }
      }
    }
    else if (not Got(wood frame)) {
      msg ("You need to build a frame for the box first.")
    }
  ]]></function>
  <function name="nomore rope"><![CDATA[
    if (GetInt(rope, "volume") <= 0) {
      MoveObject (rope, stash)
    }
  ]]></function>
  <function name="nomore plantfibers"><![CDATA[
    if (GetInt(plant fiber, "volume") <= 0) {
      MoveObject (plant fiber, stash)
    }
  ]]></function>
  <function name="nomore planks"><![CDATA[
    if (GetInt(planks, "volume") <= 0) {
      MoveObject (planks, stash)
    }
  ]]></function>
  <function name="nomore sharp stones"><![CDATA[
    if (GetInt(sharp stone, "volume") <= 0) {
      MoveObject (sharp stone, stash)
    }
  ]]></function>
  <function name="nomore sticks"><![CDATA[
    if (GetInt(stick, "volume") <= 0) {
      MoveObject (stick, stash)
    }
  ]]></function>
  <function name="nomore cloth"><![CDATA[
    if (GetInt(cloth, "volume") <= 0) {
      MoveObject (cloth, stash)
    }
  ]]></function>
  <function name="adding sticks">
    if (Got(stick)) {
      IncreaseObjectCounter (stick, "volume")
      IncreaseObjectCounter (stick, "volume")
      IncreaseObjectCounter (stick, "volume")
      msg ("You got some more sticks.")
    }
    else if (not Got(stick)) {
      IncreaseObjectCounter (stick, "volume")
      IncreaseObjectCounter (stick, "volume")
      IncreaseObjectCounter (stick, "volume")
      MoveObjectHere (stick)
      msg ("There are some sticks.")
    }
  </function>
  <function name="skinning animal">
  </function>
  <function name="sharp stick crafting">
    if (Got(stone knife)) {
      if (Got(stick)) {
        DecreaseObjectCounter (stick, "volume")
        AddToInventory (sharp sticks)
        nomore sticks
      }
      else if (not Got(stick)) {
        msg ("You need to pick up the stick before sharpening it.")
      }
    }
    else if (not Got(stone knife)) {
      msg ("You need a knife before you can sharpen this stick.")
    }
  </function>
  <function name="spear crafting"><![CDATA[
    if (Got(handle)) {
      if (Got(flint)) {
        if (Got(rope)) {
          if (GetInt(rope, "volume") >= 3) {
            MoveObject (handle, stash)
            DecreaseObjectCounter (rope, "volume")
            DecreaseObjectCounter (rope, "volume")
            DecreaseObjectCounter (rope, "volume")
            DecreaseObjectCounter (flint, "volume")
            AddToInventory (spear)
            nomore rope
            nomore flint
          }
        }
      }
    }
  ]]></function>
  <function name="nomore flint"><![CDATA[
    if (GetInt(flint, "volume") <= 0) {
      MoveObject (flint, stash)
    }
  ]]></function>
  <function name="no more planks"><![CDATA[
    if (GetInt(planks, "volume") <= 0) {
      MoveObject (planks, stash)
    }
  ]]></function>
  <function name="adding leaves">
    if (not Got(leaves)) {
      IncreaseObjectCounter (leaves, "volume")
      AddToInventory (leaves)
    }
    else if (Got(leaves)) {
      IncreaseObjectCounter (leaves, "volume")
    }
  </function>
  <function name="nomore leaves"><![CDATA[
    if (GetInt(leaves, "volume") <= 0) {
      MoveObject (leaves, stash)
    }
  ]]></function>
  <walkthrough name="The Starting Basics">
    <steps type="simplestringlist">
      Start by collecting rocks, hit, destroy and take 3 grass. Find a bush, hit the bush 3 times, take stick. Found another bush repeat. Combine stick into handle, craft rock, craft all grass then craft plant fiber. Now combine rope and handle for mancatcher then combine sharp stone with mancatcher for a stone axe. Now you can mine boulders, cut down trees and much more.
    </steps>
  </walkthrough>
  <timer name="Thirst">
    <interval>45</interval>
    <enabled />
    <script><![CDATA[
      DecreaseObjectCounter (player, "Thirst")
      if (GetInt(player, "Thirst") <= 0) {
        DisableTimer (Thirst)
        EnableTimer (Health)
      }
    ]]></script>
  </timer>
  <timer name="Hunger">
    <interval>60</interval>
    <enabled />
    <script><![CDATA[
      DecreaseObjectCounter (player, "Hunger")
      if (GetInt(player, "Hunger") <= 0) {
        DisableTimer (Hunger)
        EnableTimer (Health)
      }
    ]]></script>
  </timer>
  <timer name="Health">
    <interval>25</interval>
    <script><![CDATA[
      if (GetInt(player, "Hunger") <= 0) {
        DecreaseObjectCounter (player, "Health")
      }
      else if (GetInt(player, "Hunger") >= 1) {
        EnableTimer (Hunger)
      }
      if (GetInt(player, "Thirst") <= 0) {
        DecreaseObjectCounter (player, "Health")
      }
      else if (GetInt(player, "Thirst") >= 1) {
        EnableTimer (Thirst)
      }
      if (GetInt(player, "Exposer") >= 20) {
        DecreaseObjectCounter (player, "Health")
      }
      else if (GetInt(player, "Thirst") < 19) {
        EnableTimer (Exposer meter)
      }
      if (GetInt(player, "Health") <= 0) {
        msg ("YOUR DEAD!")
        finish
      }
    ]]></script>
  </timer>
  <timer name="Days Survived">
    <interval>300</interval>
    <enabled />
    <script>
      IncreaseObjectCounter (player, "Days Survived")
    </script>
  </timer>
  <timer name="Fire Burning">
    <interval>60</interval>
    <script>
      set (basic campfire, "lightsource", False)
      msg ("Fire died out.")
      MoveObject (coal, basic campfire)
      DisableTimer (Exposer Fire)
    </script>
  </timer>
  <timer name="Exposer Fire">
    <interval>3</interval>
    <script><![CDATA[
      if (ListContains(ScopeReachable(), basic campfire)) {
        if (basic campfire.lightsource = True) {
          if (GetInt(player, "Exposer") > 1) {
            DecreaseObjectCounter (player, "Exposer")
            DecreaseObjectCounter (player, "Exposer")
            DecreaseObjectCounter (player, "Exposer")
          }
          else if (GetInt(player, "Exposer") <= 0) {
            msg ("Much better being warm.")
          }
        }
      }
    ]]></script>
  </timer>
  <timer name="Exposer meter">
    <interval>45</interval>
    <enabled />
    <script><![CDATA[
      if (not game.pov.parent = basic campfire) {
        IncreaseObjectCounter (player, "Exposer")
        if (GetInt(player, "Exposer") >= 20) {
          EnableTimer (Health)
        }
        firsttime {
          msg ("Being exposed to the elements will kill you eventually.")
        }
        otherwise {
          msg ("Getting a little cooler and unsettling need a fire or shelter.")
        }
      }
      else if (game.pov.parent = basic campfire) {
        if (basic campfire.lightsource = True) {
          msg ("Good thing im by the fire.")
          DisableTimer (Exposer meter)
        }
        else if (basic campfire.lightsource = False) {
          msg ("Better get a fire going if I wanna stay warm.")
          EnableTimer (Exposer meter)
        }
      }
    ]]></script>
  </timer>
  <timer name="rain Exposer">
    <interval>8</interval>
    <script>
      IncreaseObjectCounter (player, "Exposer")
      IncreaseObjectCounter (player, "Exposer")
      exposed rain
    </script>
  </timer>
  <timer name="deer meat cooking">
    <interval>60</interval>
  </timer>
  <timer name="posined timer">
    <interval>7</interval>
    <enabled type="boolean">false</enabled>
    <script>
      DecreaseObjectCounter (player, "Hunger")
      DecreaseObjectCounter (player, "Thirst")
      DecreaseObjectCounter (player, "Thirst")
      DecreaseObjectCounter (player, "Health")
      play sound ("stomach_gurgle_version_5.mp3", false, false)
    </script>
  </timer>
  <timer name="pond fish timer">
    <interval>30</interval>
    <script>
      HelperCloseObject (pond)
    </script>
  </timer>
  <timer name="rabbit moves">
    <interval>3</interval>
    <enabled />
    <script><![CDATA[
      object1 = rabbit
      numberofexits = 0
      moveornot = GetRandomInt (1, 100)
      if (not moveornot > object1.movechance) {
        list1 = NewObjectList ()
        foreach (exit, AllExits()) {
          if (Contains (object1.parent,exit) and exit.visible and not exit.lookonly and not exit.locked) {
            list add (list1, exit)
          }
        }
        list2 = NewObjectList()
        foreach (room, AllObjects()) {
          foreach (exit, list1) {
            if (Contains (room,exit.to) and object1.hunting ground = room.name) {
              numberofexits = numberofexits + 1
              list add (list2, exit)
            }
          }
        }
        if (not numberofexits = 0) {
          randomexit = GetRandomInt (1, numberofexits)
          chosenexit = ObjectListItem(list2, randomexit - 1)
          if (not HasScript(chosenexit, "script")) {
            object1.parent = chosenexit.to
          }
        }
        else {
        }
      }
    ]]></script>
  </timer>
  <timer name="rabbit moves1">
    <interval>2</interval>
    <enabled />
    <script><![CDATA[
      object3 = rabbit1
      numberofexits = 0
      moveornot = GetRandomInt (1, 100)
      if (not moveornot > object3.movechance) {
        list3 = NewObjectList ()
        foreach (exit, AllExits()) {
          if (Contains (object3.parent,exit) and exit.visible and not exit.lookonly and not exit.locked) {
            list add (list3, exit)
          }
        }
        list4 = NewObjectList()
        foreach (room, AllObjects()) {
          foreach (exit, list3) {
            if (Contains (room,exit.to) and object3.hunting ground = room.name) {
              numberofexits = numberofexits + 1
              list add (list4, exit)
            }
          }
        }
        if (not numberofexits = 0) {
          randomexit = GetRandomInt (1, numberofexits)
          chosenexit = ObjectListItem(list4, randomexit - 1)
          if (not HasScript(chosenexit, "script")) {
            object3.parent = chosenexit.to
          }
        }
        else {
        }
      }
    ]]></script>
  </timer>
  <timer name="deer moves">
    <interval>4</interval>
    <enabled />
    <script><![CDATA[
      object1 = deer
      numberofexits = 0
      moveornot = GetRandomInt (1, 100)
      if (not moveornot > object1.movechance) {
        list1 = NewObjectList ()
        foreach (exit, AllExits()) {
          if (Contains (object1.parent,exit) and exit.visible and not exit.lookonly and not exit.locked) {
            list add (list1, exit)
          }
        }
        list2 = NewObjectList()
        foreach (room, AllObjects()) {
          foreach (exit, list1) {
            if (Contains (room,exit.to) and object1.hunting ground = room.name) {
              numberofexits = numberofexits + 1
              list add (list2, exit)
            }
          }
        }
        if (not numberofexits = 0) {
          randomexit = GetRandomInt (1, numberofexits)
          chosenexit = ObjectListItem(list2, randomexit - 1)
          if (not HasScript(chosenexit, "script")) {
            object1.parent = chosenexit.to
          }
        }
        else {
        }
      }
    ]]></script>
  </timer>
</asl>