<!--Saved by Quest 5.2.4487.32262-->
<asl version="520">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <include ref="Score_Lib.aslx" />
  <template name="UnresolvedObject">There doesn't seem to be such a thing.</template>
  <template name="UnresolvedLocation">It doesn't seem like you can go there.</template>
  <template name="DefaultObjectDescription">It's a thing.... Were you expecting more?</template>
  <template name="NothingToUndo">No reset button here, dude.</template>
  <template name="UnrecognisedCommand">(Please refrain from inventing a new language on a whim.)</template>
  <template name="CannotDoThat">(What are you trying to do? Stop that.)</template>
  <dynamictemplate name="DefaultSearch">"Nothing interesting here."</dynamictemplate>
  <game name="System Restore">
    <gameid>04b06177-52ed-420b-ba84-9eda287ae51f</gameid>
    <version>1.3</version>
    <description><![CDATA[You're an avid gamer with a preference for PC games. One day, out of the blue, your mom brings you a game that was mailed to you. It's from a company you've never heard of, and the only things in the box are a hard drive, a state-of-the-art visor, and a note begging for your help to save the world. Your only clues to figuring out what the deal is with this game are an icon designed to look like a pair of violet swords crossed over one another, and the title <i>System Restore</i>....]]></description>
    <author>AvecPardon</author>
    <category>RPG</category>
    <autodescription />
    <defaultfontsize type="int">12</defaultfontsize>
    <menufontsize type="int">12</menufontsize>
    <defaultfont>Verdana</defaultfont>
    <menufont>Verdana</menufont>
    <appendobjectdescription type="boolean">false</appendobjectdescription>
    <score_max type="int">500</score_max>
    <score_achievements type="stringdictionary"></score_achievements>
    <defaultlinkforeground>BlueViolet</defaultlinkforeground>
    <enemy_list type="stringdictionary"></enemy_list>
    <autodescription_youarein_useprefix type="boolean">false</autodescription_youarein_useprefix>
    <showhealth type="boolean">false</showhealth>
    <start type="script">
      InitScore (1000, true)
    </start>
  </game>
  <command name="ask">
    <pattern type="string"><![CDATA[(^ask (?<object>.*) about (?<text>.*)$|^ask (?<object>.*) (?<text>.*)$)]]></pattern>
    <script>
      DoAskTell (object, text, "ask", "askdefault", "DefaultAsk")
    </script>
  </command>
  <verb name="search">
    <property>search</property>
    <pattern>search #object#</pattern>
    <defaulttemplate>DefaultSearch</defaulttemplate>
  </verb>
  <verb name="wear">
    <property>wear</property>
    <pattern>wear #object#</pattern>
    <defaulttemplate>DefaultWear</defaulttemplate>
  </verb>
  <object name="intro">
    <inherit name="editor_room" />
    <alias>Introduction</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <description type="script"><![CDATA[
      SetFontSize (16)
      PrintCentered ("<i>System Restore</i>")
      SetFontSize (12)
      msg ("<br/><br/>You've always been an avid gamer. Shooters, platformers, puzzle, RPG; they name it, you've played it. PC games are especially fun, so when your mom brings in a strange box bearing a symbol of ornate crossed swords and the title System Restore, you decide to crack it open and see what it could be about. You've never heard of a game like this, and it doesn't look like the usual system restore programs that fix computers. Opening the box reveals several items that convince you it's a game.<br/><br/>First, there's a visor of some kind, one of those really sleek and expensive looking ones with built in earphones and mic that look like they're meant for super-immersive games. The same crossed swords symbol is embedded into them and pressing it activates the visor and lowers the microphone, though all you can see right now is just black. Next, there's a hard disk, all black and with the symbol also on it in the form of a decal. Could the game be so big it has its own drive? Probably, since the visor suggests it's super-immersive. There's also a small manual, more of a note, and you read it while wondering how your mom could afford such an expensive-looking PC game.<br/>")
      wait {
        msg ("<i>\"Install the drive to your PC. It will wirelessly connect to the neural visor. Once both are online, activate the remote link and take command. It's up to you to save the Guardian Angel and save the world. Time is of the essence. We have faith in you.\"<br/><br/>\"Signed, Staff of the Archives of the Twin Blades\"</i><br/><br/>It's not much of a game intro, but there's probably a tutorial in the game anyway. There's no system requirements list, which is a little weird, but hey, you're not complaining. So, rescue a guardian angel and save the world? Not the most original plot, but for super-immersion it'll do.<br/><br/>You install the drive in your home computer and put on the visor, calling out 'Thanks for the new game, Mom!' before booting up the PC.<br/><br/>Funny, the log-in screen got taken over by that crossed sword symbol. Wonder how that happened? Oh well. You grin and move your mouse to click on the single icon in the center of an all black desktop, marked <i>'Remote Link'</i>. For just a moment, you wonder why the game would be 'remote' when you just installed a hard drive, but the prompt to activate it just came on...<br/>")
        wait {
          msg ("<b>Activate Remote Link? Yes/No</b>")
          get input {
            if (result="yes") {
              ClearScreen
              msg ("\"Remote Link Activated.\"<br/><br/>....<br/><br/>\"Connecting....\"<br/><br/>\"Connected.\"<br/><br/>....<br/><br/>\"Accessing Firewall.\"<br/><br/>....<br/><br/>\"Negotiating...\"<br/><br/>....<br/><br/>\"Firewall Down. System Override Commencing.\"<br/><br/>.........3<br/><br/>.......2<br/><br/>.....1<br/><br/>\"System Override Complete. Minimal Power. Basic Systems Online. Restarting Neural Network.\"<br/><br/>For a game, it seems weirdly like you're actually hacking into something. You shiver a little and smile wider. This kind of introduction is wicked cool! Like a movie promo or something. You wait for the rest of the game to catch up.<br/>")
              wait {
                msg ("\"Neural Network Online.\"<br/><br/><i>(All systems green...)<br/><br/>(Error.)<br/></i><br/>............<br/><br/>You frown a little. When that voice came on, you jumped a little at your seat, but relaxed again. The voice was smooth and calm, a young man's voice. He's probably playing the part of the guide or something. When he mentioned an error, you began to assume that there must have been an actual game error.<br/><br/>You huff, getting ready to quit the game and check the connections, when the voice suddenly returned, clear as day through the earpieces.<br/>")
                wait {
                  msg ("<i>(You are an intruder. Identify yourself.)<br/></i><br/>Blinking in surprise, you say your name through the microphone. Must be for player identification or something.<br/>")
                  name_player
                  wait {
                    msg ("<i>(I seem to have an error that needs to be corrected. I do not know by what method you've come to gain access to my body, but I am no longer in control.)<br/></i><br/>Okay, intro's a little funny, but so far so good. Right?<br/><i><br/>(My name is Caleb. I am a living android, existing on this planet for far longer than it has been known as Earth and charged with the task of archiving knowledge and protecting this world. Or rather, I <b>was</b> living. This is the error that I am unable to correct on my own.)<br/><br/>(My soul appears to have been stolen.)<br/></i><br/>Now THIS is a twist to the usual plot! Okay, game's getting some bonus points for that. You're controlling a robot character, cool. You settle down in your seat, ready for what's next.<br/>")
                    wait {
                      msg ("<i>(I cannot access immediate data recorded prior to you rebooting me; those files appear to have been damaged and will take time to recover. I do not know where I am, nor where my soul has been taken. However, it does not appear to be mere coincidence that you are in control of me. You seem to be accessing my systems remotely so I will need your assistance in this venture.)<br/></i><br/>Okay, okay, typical game-start spiel. The visor suddenly comes to life, filling your vision with a wire-frame image of a man with long hair tied back in a ponytail and a strange suit with coattails. It spins slowly so you can see it from all sides, then shrinks and moves to a corner of the visor. Some kind of health reference?<br/><i><br/>(Locate my soul and perform a system restoration. The longer I am unable to fulfill my duties, the greater the risk of dangers befalling this world. I will do what I can to aid you, " + player.playername + ".)<br/></i><br/>The viewing field flashes a second time, forcing you to shut your eyes reflexively. When you open them again, you utter a soft sound of appreciation at the detail put into the startpoint of the game. It all looks so <b>real</b>!<br/><i><br/>(As most humans would say in this scenario, good luck.)<br/></i>")
                      wait {
                        ClearScreen
                        MoveObject (player, startingroom)
                      }
                    }
                  }
                }
              }
            }
            else {
              ClearScreen
              msg ("You decide not to play and put away the game.<br/><br/>A few days later, some blonde nutcase claiming to be the Angel of World's Ending activates an Extinction Level Event and laughs madly while humanity is wiped out. Huh, guess that game was important after all.")
              finish
            }
          }
        }
      }
    ]]></description>
    <object name="player">
      <inherit name="defaultplayer" />
      <health type="int">990</health>
      <statusattributes type="stringdictionary"></statusattributes>
      <mana type="int">1000</mana>
      <damage type="int">1</damage>
      <look>Not bad, for a guy who looks kinda girly.</look>
      <atk type="int">30</atk>
      <sysupdate type="int">0</sysupdate>
      <maxmana type="int">1000</maxmana>
      <playername type="string"></playername>
      <maxhp type="int">990</maxhp>
      <recover_amount type="int">0</recover_amount>
      <affection type="int">0</affection>
      <alt>myself</alt>
      <volt type="boolean">false</volt>
      <luna type="boolean">false</luna>
      <ifrit type="boolean">false</ifrit>
      <shadow type="boolean">false</shadow>
      <celsius type="boolean">false</celsius>
      <undine type="boolean">false</undine>
      <gnome type="boolean">false</gnome>
      <sylph type="boolean">false</sylph>
      <aid type="boolean">false</aid>
      <heal type="boolean">false</heal>
      <cure type="boolean">false</cure>
      <highlevel type="boolean">false</highlevel>
      <damage_check type="script"><![CDATA[
        if (player.damage >= 70) {
          if (RandomChance(50)) {
            msg ("Your field of vision flickers a little and Caleb mutters irritably in sotto. It might be a good idea to repair these damages. Soon.")
          }
          else {
            msg ("Your field of vision skews and sometimes gets covered with static. Caleb whimpers softly, worriedly, and it really sounds like he's afraid of what's going on. Maybe you should get these damages repaired soon.")
          }
        }
        else if (player.damage >=80) {
          msg ("The visor suddenly blinks out and you find yourself looking at a blank screen, both in the visor and on your computer screen. Looks like you took too much damage and got a game over, but you didn't get any kind of warning or even a typical 'Game Over' screen. You try clicking around on the black screen to restart the game, but nothing happens.<br/><br/>Fed up with the game crash and lack of response, you decide to just unplug the drive and visor and toss them in your room to deal with later.<br/><br/>A couple days later, you're watching the news with your mom, watching in shock as a blonde madman sets off an Extinction Level Event to wipe out the human race, laughing at the cameras all pointed at him. As bad as that is, your attention is riveted on the figure slumped in a chair behind the nut.<br/><br/>A familiar red-haired young man in green clothes, exactly like Caleb from the game, sat lifelessly in that chair. Maybe... it <b>wasn't</b> a game after all...?")
          SetFontSize (16)
          PrintCentered ("Game Over")
          finish
        }
      ]]></damage_check>
      <object name="eternalpin">
        <inherit name="editor_object" />
        <alias>Eternal Sword Pin</alias>
        <look><![CDATA[A pin that looks a lot like the crossed swords symbol on the game box. This one glows, though. Must be some kind of angel artifact. <br/><br/><i>(Please, do <b>not</b> attempt to use the this item. Sensors indicate it is far too powerful for either of us to handle at this time. We need to restore my systems and retrieve my soul first. It would be easier to do if this place is not a smoking crater.)</i> Caleb points out in a faintly nervous tone once you look at it a little too long. <br/><br/>Party-pooper.]]></look>
        <visible type="boolean">false</visible>
      </object>
    </object>
  </object>
  <object name="startingroom">
    <inherit name="editor_room" />
    <alias>an empty room</alias>
    <description><![CDATA[<br/>The room is mostly bare of furnishings and is a stark white in color. No windows or homey decorations can be seen. There is simply a flat metal examining table on which you were lying when all this started, a light source above it, a few small square tables, and a computer terminal on a desk nearby. Against a wall is a tall mirror, very clinical and professional-looking. To the east is a door, stainless steel with a small square window in it.]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <firstenter type="script"><![CDATA[
      msg ("<br/>This game must have been super expensive and state of the art; just as you were reaching for the keyboard to experiment with commands and sit up from that table, the character you were 'possessing' sat up on its own! You were startled, but quickly caught on that just <i>thinking</i> of what you wanted to do made the character respond. It was like the visor was translating your thoughts into action, as if the character was your own body. Smiling as you practice walking around in a figure that's much taller than your real self, you started getting the hang of moving around easily. Then Caleb jolted you back to the here and now.<br/><br/><i>(As much as you seem to be enjoying making my body do inane actions, " + player.playername + ", it would be prudent to begin searching for a way out of here and find clues as to the whereabouts of my soul.)<br/><br/>(Also, I have finished my system checks and have noted that <color color=\"Red\">many of my functions have been disabled</color>, so you will need to restore those as well. Some of my <color color=\"Red\">equipment</color> is missing; please locate and return them quickly. I also seem to have <color color=\"Red\">reduced health</color> for some reason, so try to keep me in optimal condition. If I am destroyed... the end results will not be pleasant, that is all that I can determine.)</i><br/><br/>Okay, so now you have some objectives. Find power-ups, get equipped, stay alive and find the robot angel's soul. No problem!")
    ]]></firstenter>
    <onexit type="script">
      startingroom.alias = "the Aqua Lab"
      LockExit (lab door)
      MakeObjectInvisible (drawer1)
      MakeObjectInvisible (terminal1)
      MakeObjectInvisible (input1)
    </onexit>
    <enter type="script">
      scenery_shift
      DisableTimer (security)
    </enter>
    <object name="examtable">
      <inherit name="editor_object" />
      <alias>examining table</alias>
      <description type="string"></description>
      <look><![CDATA[It's a plain metal examining table, kinda like the ones you see in all those medical dramas. Caleb was lying on this until you figured out how to get down from it using the neuro-link visor. The surface is very smooth and would probably feel cold, but touching it only brings up a little stat in your visor that tells you its temperature so you can only assume it <b>is</b> cold.]]></look>
    </object>
    <object name="mirror">
      <inherit name="editor_object" />
      <firstglance />
      <alt>looking glass; reflection</alt>
      <alias>mirror</alias>
      <look type="script"><![CDATA[
        if (not ListContains(ScopeVisible(), eternalpin)) {
          if (mirror.firstglance = true) {
            msg ("Looking into the mirror presents you with a reflection of Caleb, the android you're controlling in this game. He seems kind of pretty for being male; pale skin, bright red hair tied back into a very long ponytail, a green and white butler's outfit, green eyes, neutral expression, and a glowing pin on his lapel. Huh, interesting. You reach up to touch your shirt where the pin would be and look surprised when Caleb does the same, his neutral look mirroring your expression. <br/><br/>\"Whoa, you're <i>really</i> doing everything I'm doing or thinking?! That's freaky!\" you exclaim, and though you don't actually step back from your computer, Caleb backs away from the mirror like you would have done, his expression caught between alarm and fascination. <br/><br/><i>(Of course. You are in control of my body, " + player.playername + "; what you do and think and react to, my body will respond to as if it were yours. I am not... pleased... with this, but it must be done in order for you to restore me.)</i> Caleb's voice replies smartly. <br/><br/>\"This is one heck of a game.\" you mutter. Caleb doesn't respond to that. Guess they didn't program a response to that kind of player input.")
            MakeObjectVisible (eternalpin)
            mirror.firstglance = false
          }
          else {
            msg ("A long rectangular mirror. Looking into it gives you Caleb's reflection. It's kind of scary how responsive he is to your every thought.")
          }
        }
        else {
          msg ("A long rectangular mirror. Looking into it gives you Caleb's reflection. It's kind of scary how responsive he is to your every thought.")
        }
      ]]></look>
    </object>
    <exit name="lab door" alias="east" to="hallway1">
      <inherit name="eastdirection" />
      <locked />
      <lockmessage>The door is locked. A card reader is beside it.</lockmessage>
      <suffix>through the door</suffix>
    </exit>
    <object name="compdesk">
      <inherit name="editor_object" />
      <inherit name="surface" />
      <contentsprefix>with</contentsprefix>
      <alias>computer desk</alias>
      <hidechildren type="boolean">false</hidechildren>
      <listchildren type="boolean">false</listchildren>
      <displayverbs>Look at; Take; Search</displayverbs>
      <alt>desk</alt>
      <look type="script">
        msg ("A black and grey desk with a computer terminal on it. There are some pen holders but otherwise, it's completely bare.")
        MakeObjectVisible (terminal1)
      </look>
      <search type="script">
        MakeObjectVisible (drawer1)
        msg ("You search the desk and find all the drawers are locked except for one of them. Lucky!")
      </search>
      <object name="terminal1">
        <inherit name="editor_object" />
        <inherit name="container_closed" />
        <alias>computer terminal</alias>
        <description type="string"></description>
        <contentsprefix>with</contentsprefix>
        <open type="boolean">false</open>
        <close type="boolean">false</close>
        <hidechildren />
        <listchildren type="boolean">false</listchildren>
        <transparent />
        <alt>comp; computer; terminal; PC</alt>
        <visible type="boolean">false</visible>
        <displayverbs>Look at; Take</displayverbs>
        <look type="script"><![CDATA[
          if (GetBoolean(terminal1, "opendoc")) {
            msg ("<br/>A document has been left opened on the screen after you finished letting Caleb ransack it for missing system files.<br/><br/><i>\"All neccessary files have been removed and given to qualified departments for further analysis. The initial transfer to <color color=\"Red\">Project: GateKeeper</color> seems successful, but we won't know for sure until we install the <color color=\"Red\">rest of the system files</color>. Once we've learned what we can, place the Guardian Angel in cold storage for later study.<br/><br/>Lunch will be served at Bob's Burger Palace today. It's <color color=\"Blue\">Frank's</color> birthday.\"</i><br/><br/>Well, <b>that</b> seems kind of bizarre for a clue in a game. You scratch your head absentmindedly. Huh, that's funny. Bob's Burger Palace is a real life restaurant chain. Aren't the game makers worried about trademark issues?<br/><br/><i>(I do <b>not</b> wish to be placed in cold storage. At least you know where my <color color=\"Red\">other files</color> are.) </i>Caleb muttered. You nod in agreement; other departments means that they, and you, are in a single building, probably a big one.")
          }
          else {
            msg ("A desktop computer with flatscreen monitor, mouse and keyboard. The detailing is <i>awesome</i> for an in-game object. Checking it out a little closer, you spot a flat panel plugged into the computer with an LCD screen in it.<br/><br/><i>(This is a connector's input panel. It was created for <color color=\"Blue\">use</color> by androids like me to interface directly with a computer. If you place my hand on it, I'll be able to access its data.)</i> Caleb remarks while you examine the thing.")
            MakeObjectVisible (input1)
          }
        ]]></look>
        <use type="script">
          msg ("It would probably be easier to let Caleb access it. You poked at a key and went cross-eyed at the block of text that doesn't look anything like English sentences.")
        </use>
        <object name="input1">
          <inherit name="editor_object" />
          <alias>connector's input pad</alias>
          <description type="string"></description>
          <displayverbs>Look at; Take; Use</displayverbs>
          <visible type="boolean">false</visible>
          <look type="script"><![CDATA[
            msg ("A flat screen pad that Caleb can <color color=\"Blue\">use</color> to access computers directly.")
          ]]></look>
          <use type="script"><![CDATA[
            firsttime {
              dictionary add (player.statusattributes, "health", "HP: !")
              dictionary add (player.statusattributes, "mana", "TP: !")
              dictionary add (player.statusattributes, "damage", "Systems Damage: !")
              EnableTimer (health_check)
              EnableTimer (damage_check)
              msg ("You place Caleb's palm onto the pad and watch the terminal go crazy with files being scanned and opened at rapid speed. After a while, the image in the corner of your visor disappears and is replaced by three status displays.<br/><br/><i>(I have regained access to my <color color=\"Red\">health and mana management</color> functions. Odd how they were disabled like that.)</i> Caleb muses, <i>(Also, you will notice I now have a <color color=\"Red\">Systems Damage</color> gauge. You must be very careful with that. As you can see, I already have 1 point of damage. I will always have that 1 point. You have no need to know why. Just know that <color color=\"Red\">1 point of Systems Damage is gained for every 50 points or more of HP I lose</color>. Currently, I don't have the ability to restore HP, but you can repair Systems Damage once you find my <color color=\"Blue\">travel pack</color>.)<br/><br/>(In the meantime, " + player.playername + ", try not to let my Systems Damage reach <color color=\"Red\">70 points or higher</color>. At 70 points, I had been able to use an Over-Limit Mode, but that system is currently disabled. At <color color=\"Red\">80 points and above</color>, you run the risk of me <color color=\"Red\">shutting down</color> permanently and the world will be in danger.)</i><br/><br/>Well, that makes the game a lot harder, then, if you can't heal yourself right away. At least you got the warning. Right, new objectives! Find the stuff to heal yourself before you run into some random battle or whatever.")
            }
            otherwise {
              msg ("You place Caleb's palm onto the pad and watch the terminal go crazy with files being scanned and opened at rapid speed. After a few moments, everything is closed again, except for one document on the screen. You'd have to <color color=\"Blue\">look</color> at the terminal to read it.")
              SetObjectFlagOn (terminal1, "opendoc")
            }
          ]]></use>
        </object>
      </object>
      <object name="drawer1">
        <inherit name="editor_object" />
        <inherit name="container_open" />
        <look>A desk drawer. Not much to it.</look>
        <scenery type="boolean">false</scenery>
        <alias>drawer</alias>
        <listchildren />
        <hidechildren type="boolean">false</hidechildren>
        <isopen type="boolean">false</isopen>
        <openmsg>You open the drawer and see several aqua colored cards scattered in it.</openmsg>
        <closemsg>You close the drawer out of habit.</closemsg>
        <listchildrenprefix>You see</listchildrenprefix>
        <visible type="boolean">false</visible>
        <onclose type="script">
          firsttime {
            msg ("Caleb hums approvingly. For some reason, that makes you feel pretty good about yourself.")
            IncScore ("closed starting drawer", 10)
            MakeObjectInvisible (drawer1)
          }
        </onclose>
        <object name="aquacard">
          <inherit name="editor_object" />
          <alias>Aqua Keycard</alias>
          <look>An aqua colored keycard with a magnetic strip. It says 'Level 1' on it.</look>
          <take />
          <takemsg>You take the Aqua Keycard. This should be handy.</takemsg>
          <dropmsg>You toss the Aqua Keycard away. Don't need that anymore.</dropmsg>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>the</prefix>
          <alt>key card; aqua card</alt>
        </object>
      </object>
    </object>
    <object name="aquareader">
      <inherit name="editor_object" />
      <alias>card reader</alias>
      <look>A card reader. Nothing else about it, really.</look>
      <usedefaultprefix />
      <prefix type="string"></prefix>
      <scenery type="boolean">false</scenery>
      <visible />
      <useon type="scriptdictionary">
        <item key="aquacard">
          msg ("You swipe the Aqua Keycard through the reader. There's a soft Beep! and the light turns green.")
          UnlockExit (lab door)
        </item>
      </useon>
    </object>
  </object>
  <object name="hidden_inv">
    <inherit name="editor_room" />
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <object name="secguard">
      <inherit name="editor_object" />
      <inherit name="male" />
      <inherit name="container_open" />
      <inherit name="mob" />
      <alias>guard</alias>
      <health type="int">100</health>
      <displayverbs>Look at; Attack; Search</displayverbs>
      <hidechildren type="boolean">false</hidechildren>
      <close type="boolean">false</close>
      <open type="boolean">false</open>
      <contentsprefix type="string"></contentsprefix>
      <maxobjects type="int">10</maxobjects>
      <enemy />
      <atk type="int">20</atk>
      <look type="script">
        if (GetBoolean(secguard, "dead")) {
          msg ("A very dead guard. Ick.")
        }
        else {
          msg ("A big burly guard wearing heavy bullet-proof armor. He doesn't look happy to see you there.")
        }
      </look>
      <attack type="script"><![CDATA[
        msg ("You attack the guard fiercely!")
        if (not GetBoolean(secguard, "dead")) {
          secguard.health = secguard.health-player.atk
          if (secguard.health > 0) {
            msg ("The guard's still standing and fighting back!")
            if (Contains (secguard,taser)) {
              if (RandomChance(40)) {
                msg ("The guard used a taser on you! Caleb yells in your ear while you're trying to figure out how to fight back.")
                damage_amount = secguard.atk+taser.atk
                damage_player (damage_amount)
              }
              else {
                msg ("The guard attacked you bare-handed! Yikes!")
                damage_amount = secguard.atk
                damage_player (damage_amount)
              }
            }
            else if (Contains (secguard,taser2)) {
              if (RandomChance(40)) {
                msg ("The guard used a taser on you! Caleb yells in your ear while you're trying to figure out how to fight back.")
                damage_amount = secguard.atk+taser2.atk
                damage_player (damage_amount)
              }
              else {
                msg ("The guard attacked you bare-handed! Yikes!")
                damage_amount = secguard.atk
                damage_player (damage_amount)
              }
            }
          }
          else if (secguard.health < 1) {
            SetObjectFlagOn (secguard, "dead")
            DisableTimer (auto_attack)
            msg ("The guard goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
            EnableTimer (removal)
          }
        }
        else {
          msg ("The guard's already dead, why are you still trying to attack them?")
        }
      ]]></attack>
      <search type="script">
        if (not GetBoolean(secguard, "dead")) {
          msg ("Why are you trying to search him?! He's attacking you!")
        }
        else {
          msg ("Hm, a taser. This might be useful.")
          if (Contains (secguard,taser)) {
            taser.scenery = False
          }
          else if (Contains (secguard,taser2)) {
            taser2.scenery = False
          }
        }
      </search>
      <target type="script">
        if (Contains (player.parent,secguard)) {
          dictionary add (enemy_list, "guard", )
        }
      </target>
      <object name="taser">
        <inherit name="editor_object" />
        <inherit name="weapon" />
        <alias>taser</alias>
        <look>It's a small black taser. This thing shoots a ton of electricity into anyone unfortunate enough to be on the business end of it. Ouch.</look>
        <take />
        <atk type="int">10</atk>
        <equipped type="boolean">false</equipped>
        <scenery />
        <takemsg>Ooh, taser. Yoink.</takemsg>
        <dropmsg>You drop the taser. Caleb recommends destroying it so no one else can use it against you, so you smash your foot on it. Fun!</dropmsg>
        <displayverbs>Look at; Take; Equip</displayverbs>
        <use type="script"><![CDATA[
          msg ("<i>(<b>NO!</b>)</i> Caleb practically screams this into your ear when you  turn the taser towards yourself. You flinch in reaction; geez, you were just gonna mess with it, see what funny actions come up from using stuff on your character. <i>(My systems are barely tolerable towards Lightning attacks as it is; I do <b>not</b> need you taxing my limits for your personal amusement!)</i><br/><br/>\"Sorry.\" you mutter back under your breath, rolling your eyes. Some designers just have no sense of humor, you suppose.")
          IncScore ("self-harming", -5)
        ]]></use>
        <equip type="script"><![CDATA[
          msg ("You decide to equip the taser but aren't able to find an equip screen. Finally, you just ask Caleb to equip the taser.<br/><br/>(You mean, you want me to use this device as a primary weapon?) the android questions, (I don't have control of my body, remember? If you wish to 'equip' items, just have it on hand.)")
        ]]></equip>
        <ondrop type="script">
          MoveObject (taser, secguard)
          MoveObject (taser2, hidden_inv)
          taser.alias = "taser"
          player.atk = 30
        </ondrop>
        <ontake type="script">
          if (Got(travel_bag)) {
            MoveObject (taser, travel_bag)
            taser.alias = "taser"
          }
        </ontake>
      </object>
    </object>
    <object name="taser2">
      <inherit name="editor_object" />
      <inherit name="weapon" />
      <alias>taser</alias>
      <scenery />
      <look>It's a taser just like the one you took earlier. No point trying to take another one, since the one you have is still good.</look>
      <atk type="int">10</atk>
    </object>
    <object name="wall">
      <inherit name="editor_object" />
      <scenery />
      <look>A plain white wall. It makes you want to take some crayons to it, just to give it some color. Why do lab companies insist on making things white?</look>
      <alias>walls</alias>
    </object>
    <object name="floor">
      <inherit name="editor_object" />
      <scenery />
      <look>A white tile floor. It's very shiny and smooth. Caleb's feet make interesting little tapping sounds when you walk even though his shoes are mostly made of leather.</look>
    </object>
    <object name="door">
      <inherit name="editor_object" />
      <scenery />
      <look>It's a door, made of metal. Part of you wants to just kick it to see what the damage effect would look like.</look>
    </object>
    <object name="secguard_2">
      <inherit name="editor_object" />
      <inherit name="male" />
      <inherit name="container_open" />
      <inherit name="mob" />
      <alias>officer</alias>
      <health type="int">150</health>
      <enemy />
      <open type="boolean">false</open>
      <close type="boolean">false</close>
      <hidechildren type="boolean">false</hidechildren>
      <contentsprefix type="string"></contentsprefix>
      <displayverbs>Look at; Attack; Search</displayverbs>
      <atk type="int">30</atk>
      <look type="script">
        if (GetBoolean(secguard_2, "dead")) {
          msg ("A very dead officer. Ick.")
        }
        else {
          msg ("A lean, mean officer wearing an intimidating black uniform. He doesn't look happy to see you there.")
        }
      </look>
      <attack type="script"><![CDATA[
        if (not GetBoolean(secguard_2, "dead")) {
          secguard_2.health = secguard_2.health-player.atk
          if (secguard_2.health > 0) {
            msg ("The officer counter-attacks!")
            if (Contains (secguard_2,baton)) {
              if (RandomChance(55)) {
                msg ("The officer clubs you with his baton. Instead of breaking on your arm, it zaps you with electricity! Caleb gives a little scream while you're still stunned by the idea of a lightning baton.")
                damage_amount = 45
                damage_player (damage_amount)
              }
              else if (RandomChance(50)) {
                msg ("The officer punches you in the gut with his bare fist! Man, this guy must work out or something, because that actually did some damage!")
                damage_amount = secguard_2.atk
                damage_player (damage_amount)
              }
              else {
                msg ("The officer clubs you with his baton. It doesn't break against Caleb's android body, but it does some wicked damage, considering the power of that blow. It even caused some System Damage!")
                damage_amount = baton.atk
                damage_player (damage_amount)
                player.damage = player.damage+1
              }
            }
            else if (Contains (secguard_2,baton1)) {
              if (RandomChance(55)) {
                msg ("The officer clubs you with his baton. Instead of breaking on your arm, it zaps you with electricity! Caleb gives a little scream while you're still stunned by the idea of a lightning baton.")
                damage_amount = 45
                damage_player (damage_amount)
              }
              else if (RandomChance(50)) {
                msg ("The officer punches you in the gut with his bare fist! Man, this guy must work out or something, because that actually did some damage!")
                damage_amount = secguard_2.atk
                damage_player (damage_amount)
              }
              else {
                msg ("The officer clubs you with his baton. It doesn't break against Caleb's android body, but it does some wicked damage, considering the power of that blow. It even caused some System Damage!")
                damage_amount = baton1.atk
                damage_player (damage_amount)
                player.damage = player.damage+1
              }
            }
          }
          else if (secguard_2.health < 1) {
            SetObjectFlagOn (secguard_2, "dead")
            DisableTimer (auto_attack1)
            msg ("The officer goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
            EnableTimer (removal1)
          }
        }
        else {
          msg ("The officer's already dead, why are you still trying to attack them?")
        }
      ]]></attack>
      <search type="script">
        if (not GetBoolean(secguard_2, "dead")) {
          msg ("Why are you trying to search him?! He's attacking you!")
        }
        else {
          if (Contains (secguard_2,baton)) {
            baton.scenery = False
            msg ("Hm, a baton. This might be useful.")
          }
          else if (Contains (secguard_2,baton1)) {
            baton1.scenery = False
            msg ("Hm, a baton. Too bad you already have one.")
          }
        }
      </search>
      <object name="baton">
        <inherit name="editor_object" />
        <inherit name="weapon" />
        <atk type="int">35</atk>
        <alias>baton</alias>
        <alt>nightstick; club; beatstick</alt>
        <takemsg>You take the baton for yourself. Considering the punch it packed, it'll be useful to have on your side.</takemsg>
        <displayverbs>Look at; Take; Equip</displayverbs>
        <equipped type="boolean">false</equipped>
        <look><![CDATA[A heavy black club with a reinforced, insulated grip. There's a button on it that activates the electric charge on it that gives it some extra 'oomph', and another button that you can't figure out. <br/><br/><i>(It looks like a self-destruct button.)</i> Caleb remarks bitterly. He <b>really</b> doesn't like electric-based weapons, especially if they're used on him.]]></look>
        <scenery />
        <usedefaultprefix />
        <prefix type="string"></prefix>
        <take type="script"><![CDATA[
          if (Got(travel_bag)) {
            msg ("You take the baton for yourself. Considering the punch it packed, it'll be useful to have on your side.")
            MoveObject (baton, travel_bag)
          }
          else if (Got(taser)) {
            msg ("<i>(You cannot carry another weapon while you currently have one in your possession, " + player.playername + ". There is no room for it. Please drop the weapon you have now if you wish to take this one.)</i> Caleb tells you.")
          }
          else {
            msg ("You take the baton for yourself. Considering the punch it packed, it'll be useful to have on your side.")
            MoveObject (baton, player)
          }
        ]]></take>
        <use type="script"><![CDATA[
          msg ("<i>(Augh! <b>Why</b> do you insist on trying to damage me, " + player.playername + "?!)</i> Caleb cries in frustration, <i>(How is <b>that</b> going to be of any help to us?! You were given the equipment to help me, not find ways of making my existence a living hell!)</i><br/><br/>He starts fuming under his breath in a language you've never heard of. Maybe trying to hit yourself with this thing wasn't a good idea after all?")
          IncScore ("self-harming 2", -5)
        ]]></use>
        <drop type="script">
          msg ("You press the little self-destruct button and then throw the baton away from yourself. It explodes halfway through the air and leaves a few pieces behind. There, that's one less electric baton you'll have to worry about.")
          MoveObject (baton1, hidden_inv)
          MoveObject (baton, sec_guard2)
          baton.alias = "baton"
          player.atk = 30
        </drop>
      </object>
    </object>
    <object name="baton1">
      <inherit name="editor_object" />
      <atk type="int">25</atk>
      <alias>baton</alias>
      <alt>nightstick; club; beatstick</alt>
      <take type="boolean">false</take>
      <takemsg>You take the baton for yourself. Considering the punch it packed, it'll be useful to have on your side.</takemsg>
      <scenery />
      <look>A heavy black club with a reinforced, insulated grip just like the one you took earlier. No need to get another one, since the one you have is still good.</look>
    </object>
    <object name="wonder_fork">
      <inherit name="editor_object" />
      <inherit name="weapon" />
      <alias>Wonder Fork</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <look>A 5-foot long giant fork made of wood and metal. Looking at it makes you snicker, but Caleb swears this thing is both ancient and powerful. He just can't quite explain how he knows that or why he's so darn protective of the thing.</look>
      <alt>fork</alt>
      <take />
      <takemsg>You grab the giant fork, trying not to laugh at the silliness of the weapon. This must be one of those joke weapons, right?</takemsg>
      <inventoryverbs>Look at; Use; Drop</inventoryverbs>
      <atk type="int">50</atk>
      <drop type="script">
        msg ("You try to drop the fork, but Caleb suddenly snarls in your ear when you move to set it down, like he somehow knew you were trying to ditch it. You quickly change your mind about that, because it might still be handy! It's not like that vicious snarl actually scared you or anything.... Yeah....")
        IncScore ("do not drop under penalty of very bad things happening", -30)
      </drop>
    </object>
    <object name="duplicatestarting">
      <inherit name="editor_room" />
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <alias>the Aqua Lab</alias>
      <prefix type="string"></prefix>
    </object>
    <object name="security_cameras">
      <inherit name="editor_object" />
      <visible />
      <scenery />
      <look>Small ominous-looking cameras that watch the halls and you. Every hall has them, which is how those security mooks know where to find you to attack.</look>
      <alias>security cameras</alias>
      <alt>cams</alt>
    </object>
    <object name="sec_chief">
      <inherit name="editor_object" />
      <inherit name="male" />
      <inherit name="mob" />
      <inherit name="container_open" />
      <alias>chief</alias>
      <health type="int">200</health>
      <atk type="int">30</atk>
      <open type="boolean">false</open>
      <close type="boolean">false</close>
      <contentsprefix type="string"></contentsprefix>
      <look type="script">
        if (GetBoolean(sec_chief, "dead")) {
          msg ("A very dead security chief. Ick.")
        }
        else {
          msg ("A buff security chief in a suit and dark glasses. He seems to have a permanent scowl on his face.")
        }
      </look>
      <attack type="script"><![CDATA[
        if (not GetBoolean(sec_chief, "dead")) {
          sec_chief.health = sec_chief.health-player.atk
          if (sec_chief.health > 0) {
            msg ("<br/>The chief counter-attacks!")
            if (Contains (sec_chief,taser1)) {
              if (RandomChance(40)) {
                msg ("<br/>The chief used a taser on you! Caleb yells in your ear while you're trying to figure out how to fight back.")
                damage_amount = sec_chief.atk+taser1.atk
                damage_player (damage_amount)
              }
              else {
                msg ("<br/>The chief attacked you bare-handed! Yikes!")
                damage_amount = sec_chief.atk
                damage_player (damage_amount)
              }
            }
            else if (Contains (sec_chief,taser3)) {
              if (RandomChance(40)) {
                msg ("<br/>The chief used a taser on you! Caleb yells in your ear while you're trying to figure out how to fight back.")
                damage_amount = sec_chief.atk+taser3.atk
                damage_player (damage_amount)
              }
              else {
                msg ("<br/>The chief attacked you bare-handed! Yikes!")
                damage_amount = sec_chief.atk
                damage_player (damage_amount)
              }
            }
          }
          else if (sec_chief.health < 1) {
            SetObjectFlagOn (sec_chief, "dead")
            DisableTimer (auto_attack4)
            msg ("<br/>The security chief falls over and goes still. You want to keep thinking this is all a game, but for some reason, you're feeling less sure about that as you continue exploring the building.")
            EnableTimer (removal4)
          }
        }
        else {
          msg ("The chief's already dead. Why are you still attacking him?")
        }
      ]]></attack>
      <search type="script">
        if (not GetBoolean(sec_chief, "dead")) {
          msg ("Why are you trying to search him?! He's attacking you!")
        }
        else {
          if (Contains (sec_chief,taser1)) {
            taser1.scenery = False
            msg ("Hm, a taser. This might be useful.")
          }
          else if (Contains (secguard_2,taser3)) {
            taser3.scenery = False
            msg ("Hm, a taser. Too bad you already have one.")
          }
        }
      </search>
      <object name="taser1">
        <inherit name="editor_object" />
        <inherit name="weapon" />
        <alias>taser</alias>
        <look>It's a small black taser. This thing shoots a ton of electricity into anyone unfortunate enough to be on the business end of it. Ouch.</look>
        <atk type="int">10</atk>
        <equipped type="boolean">false</equipped>
        <scenery />
        <takemsg>Ooh, taser. Yoink.</takemsg>
        <dropmsg>You drop the taser. Caleb recommends destroying it so no one else can use it against you, so you smash your foot on it. Fun!</dropmsg>
        <displayverbs>Look at; Take; Equip</displayverbs>
        <take type="script">
          if (Got(taser)) {
            msg ("You already have a taser, you don't need another one.")
          }
          else if (Got(taser4)) {
            msg ("You already have a taser, you don't need another one.")
          }
          else {
            msg ("Ooh, a taser. Yoink!")
          }
        </take>
        <use type="script"><![CDATA[
          msg ("<i>(<b>NO!</b>)</i> Caleb practically screams this into your ear when you  turn the taser towards yourself. You flinch in reaction; geez, you were just gonna mess with it, see what funny actions come up from using stuff on your character. <i>(My systems are barely tolerable towards Lightning attacks as it is; I do <b>not</b> need you taxing my limits for your personal amusement!)</i><br/><br/>\"Sorry.\" you mutter back under your breath, rolling your eyes. Some designers just have no sense of humor, you suppose.")
          IncScore ("self-harming", -5)
        ]]></use>
        <equip type="script"><![CDATA[
          msg ("You decide to equip the taser but aren't able to find an equip screen. Finally, you just ask Caleb to equip the taser.<br/><br/>(You mean, you want me to use this device as a primary weapon?) the android questions, (I don't have control of my body, remember? If you wish to 'equip' items, just have it on hand.)")
        ]]></equip>
        <ondrop type="script">
          MoveObject (taser1, lab_assist)
          MoveObject (taser3, hidden_inv)
          taser1.alias = "taser"
          player.atk = 30
        </ondrop>
        <ontake type="script">
          if (Got(travel_bag)) {
            MoveObject (taser1, travel_bag)
            taser1.alias = "taser"
          }
        </ontake>
      </object>
    </object>
    <object name="taser3">
      <inherit name="editor_object" />
      <inherit name="weapon" />
      <alias>taser</alias>
      <scenery />
      <look>It's a taser just like the one you took earlier. No point trying to take another one, since the one you have is still good.</look>
      <atk type="int">10</atk>
    </object>
    <object name="lab_assist">
      <inherit name="editor_object" />
      <inherit name="male" />
      <inherit name="mob" />
      <inherit name="container_open" />
      <alias>lab assistant</alias>
      <health type="int">200</health>
      <atk type="int">30</atk>
      <open type="boolean">false</open>
      <close type="boolean">false</close>
      <contentsprefix type="string"></contentsprefix>
      <look type="script">
        if (GetBoolean(lab_assist, "dead")) {
          msg ("A very dead lab assistant. Ick.")
        }
        else {
          msg ("A scrawny lab assistant in a white coat and glasses. He seems determined to take you back to a lab or something.")
        }
      </look>
      <attack type="script"><![CDATA[
        if (not GetBoolean(lab_assist, "dead")) {
          lab_assist.health = lab_assist.health-player.atk
          if (lab_assist.health > 0) {
            msg ("<br/>The lab assistant counter-attacks!")
            if (Contains (lab_assist,taser4)) {
              if (RandomChance(40)) {
                msg ("<br/>The lab assistant used a taser on you! Caleb yells in your ear while you're trying to figure out how to fight back.")
                damage_amount = lab_assist.atk+taser4.atk
                damage_player (damage_amount)
              }
              else {
                msg ("<br/>The lab assistant attacked you bare-handed! Yikes!")
                damage_amount = lab_assist.atk
                damage_player (damage_amount)
              }
            }
            else if (Contains (lab_assist,taser5)) {
              if (RandomChance(40)) {
                msg ("<br/>The lab assistant used a taser on you! Caleb yells in your ear while you're trying to figure out how to fight back.")
                damage_amount = lab_assist.atk+taser3.atk
                damage_player (damage_amount)
              }
              else {
                msg ("<br/>The lab assistant attacked you bare-handed! Yikes!")
                damage_amount = lab_assist.atk
                damage_player (damage_amount)
              }
            }
          }
          else if (lab_assist.health < 1) {
            SetObjectFlagOn (lab_assist, "dead")
            DisableTimer (auto_attack5)
            msg ("<br/>The lab assistant falls over and goes still. You want to keep thinking this is all a game, but for some reason, you're feeling less sure about that as you continue exploring the building.")
            EnableTimer (removal5)
          }
        }
        else {
          msg ("The lab assistant is already dead. Why are you still attacking him?")
        }
      ]]></attack>
      <search type="script">
        if (not GetBoolean(lab_assist, "dead")) {
          msg ("Why are you trying to search him?! He's attacking you!")
        }
        else {
          if (Contains (lab_assist,taser4)) {
            taser4.scenery = False
            msg ("Hm, a taser. This might be useful.")
          }
          else if (Contains (lab_assist,taser5)) {
            taser5.scenery = False
            msg ("Hm, a taser. Too bad you already have one.")
          }
        }
      </search>
      <object name="taser4">
        <inherit name="editor_object" />
        <inherit name="weapon" />
        <alias>taser</alias>
        <look>It's a small black taser. This thing shoots a ton of electricity into anyone unfortunate enough to be on the business end of it. Ouch.</look>
        <atk type="int">10</atk>
        <equipped type="boolean">false</equipped>
        <scenery />
        <takemsg>Ooh, taser. Yoink.</takemsg>
        <dropmsg>You drop the taser. Caleb recommends destroying it so no one else can use it against you, so you smash your foot on it. Fun!</dropmsg>
        <displayverbs>Look at; Take; Equip</displayverbs>
        <take type="script">
          if (Got(taser)) {
            msg ("You already have a taser, you don't need another one.")
          }
          else if (Got(taser1)) {
            msg ("You already have a taser, you don't need another one.")
          }
          else {
            msg ("Ooh, a taser. Yoink!")
          }
        </take>
        <use type="script"><![CDATA[
          msg ("<i>(<b>NO!</b>)</i> Caleb practically screams this into your ear when you  turn the taser towards yourself. You flinch in reaction; geez, you were just gonna mess with it, see what funny actions come up from using stuff on your character. <i>(My systems are barely tolerable towards Lightning attacks as it is; I do <b>not</b> need you taxing my limits for your personal amusement!)</i><br/><br/>\"Sorry.\" you mutter back under your breath, rolling your eyes. Some designers just have no sense of humor, you suppose.")
          IncScore ("self-harming", -5)
        ]]></use>
        <equip type="script"><![CDATA[
          msg ("You decide to equip the taser but aren't able to find an equip screen. Finally, you just ask Caleb to equip the taser.<br/><br/>(You mean, you want me to use this device as a primary weapon?) the android questions, (I don't have control of my body, remember? If you wish to 'equip' items, just have it on hand.)")
        ]]></equip>
        <ondrop type="script">
          MoveObject (taser4, lab_assist)
          MoveObject (taser5, hidden_inv)
          taser4.alias = "taser"
          player.atk = 30
        </ondrop>
        <ontake type="script">
          if (Got(travel_bag)) {
            MoveObject (taser, travel_bag)
            taser.alias = "taser"
          }
        </ontake>
      </object>
    </object>
    <object name="taser5">
      <inherit name="editor_object" />
      <inherit name="weapon" />
      <alias>taser</alias>
      <scenery />
      <look>It's a taser just like the one you took earlier. No point trying to take another one, since the one you have is still good.</look>
      <atk type="int">10</atk>
    </object>
    <object name="master_card">
      <inherit name="editor_object" />
      <alias>Master Card</alias>
      <look>For testing.</look>
      <selfuseon type="scriptdictionary">
        <item key="contraband_cardreader">
          msg ("Door is unlocked.")
          UnlockExit (Locker Door)
        </item>
      </selfuseon>
    </object>
  </object>
  <verb name="attack">
    <property>attack</property>
    <defaultexpression>"You can't attack " + object.article + "."</defaultexpression>
    <pattern>attack #object#; fight #object#</pattern>
    <defaulttext>You can't really attack that.</defaulttext>
  </verb>
  <verb name="watch">
    <property>watch</property>
    <pattern>watch #object#</pattern>
    <defaultexpression><![CDATA["<i>(There's no reason to watch " + object.article + ".)</i>"]]></defaultexpression>
    <defaulttext>There's no reason to watch that, is there?</defaulttext>
  </verb>
  <command name="equip">
    <pattern>equip #object#</pattern>
    <unresolved>"You can't equip this."</unresolved>
    <script>
      if (object.equipped = False) {
        object.equipped = True
        object.alias = object.alias + " (equipped) "
        player.atk = player.atk+object.atk
        msg ("You've equipped it.")
      }
      else if (object.equipped = True) {
        msg ("It's already equipped.")
      }
    </script>
  </command>
  <object name="ground_floor">
    <inherit name="editor_room" />
    <object name="hallway1">
      <inherit name="editor_room" />
      <alias>Ground Floor - Hallway A</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <description><![CDATA[<br/>The hallway is long and has four other doors besides the one you just walked through. It looks empty, but glancing around reveals security cameras mounted on the ceiling at each end of the hall. There could be security guards watching you right now. <br/><br/>Looking to the south, you can see the hallway ends in an 'L' shape. To the north is an elevator and a door with a sign that says 'Stairs'. All the doors here are marked with a colored square on them.]]></description>
      <hidechildren type="boolean">false</hidechildren>
      <firstenter type="script"><![CDATA[
        msg ("<br/>On a hunch, you look back over your shoulder at the door you just came out of and see an aqua-colored square on the door right under the little window. You bring out the Aqua Keycard and compare the two.<br/><br/><i>(I would assume you are thinking that the <color color=\"Red\">Aqua Keycard opens Aqua Doors</color>.)</i> Caleb suddenly comments and you nod. <i>(Perhaps <color color=\"Red\">other Keycards</color> are needed to access <color color=\"Red\">other colored doors</color>?)</i><br/><br/>\"Yeah. I kinda figured that. Every game's got their thing; color cards and doors must be this one's quirk.\" you return dryly, looking around for any sign of security.<br/><br/><i>(Game?)</i> Funny how Caleb sounds puzzled by that. Must be a scripting glitch. <i>(Well, at this point, I feel I must warn you that we are now able to be confronted by any enemies that may be here to hinder us. I would prefer if we did not encounter any, so please <color color=\"Red\">try not to linger too long in open areas like this hallway</color>. Rooms should be safe, so long as there is no one already inside them, of course.)</i><br/><br/>Well, at least he gave you fair warning of <b>that</b>, too.")
      ]]></firstenter>
      <enter type="script">
        scenery_shift1
        EnableTimer (security)
        if (Contains (hallway1,secguard)) {
          EnableTimer (auto_attack)
          DisableTimer (security)
        }
      </enter>
      <onexit type="script">
        DisableTimer (security)
        if (Contains (hallway1,secguard)) {
          DisableTimer (auto_attack)
        }
      </onexit>
      <exit name="Aqua Door" alias="west" to="startingroom">
        <inherit name="westdirection" />
        <locked type="boolean">false</locked>
        <suffix>to the Aqua Lab</suffix>
        <look>It's the door to the lab you first woke up in.</look>
      </exit>
      <exit name="Green Door" alias="northeast" to="greenroom">
        <inherit name="northeastdirection" />
        <prefix type="string"></prefix>
        <locked />
        <lockmessage>The door is locked. You'll need the Green Keycard to open it.</lockmessage>
        <suffix>to the Green Lab</suffix>
        <look type="script">
          msg ("There's another card reader here for this door.")
          MakeObjectVisible (greenreader)
        </look>
      </exit>
      <object name="greenroom">
        <alias>Green Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <description><![CDATA[<br/>The Green Lab seems to be mirroring the Aqua Lab in some ways. There's a dark wooden desk with a computer, several tables with various bits of metal scattered over them and a painting of some kind of scene hanging on the wall. Another of those long mirrors also sits in a corner, reflecting the empty room.]]></description>
        <scenery type="boolean">false</scenery>
        <look type="script">
          msg ("A door leading to another lab. It has a green square on it. There is a card reader beside it, too.")
          MakeObjectVisible (greenreader)
        </look>
        <enter type="script">
          scenery_shift
          DisableTimer (security)
          MakeObjectInvisible (greenreader)
        </enter>
        <firstenter type="script"><![CDATA[
          msg ("<br/><i>(I like the color green very much.)</i> Caleb suddenly says and you pause to think over what he just said. Did you hear that right? Did the robot just say he liked the color green? That's some scary self-awareness there. Thank goodness this is just a game. This must be one of those player interaction skits so you pull out the Green Keycard to look at it.<br/><br/>\"Green. Like this card?\" you ask. It's a bright green that makes you think of neon lights and highlighters.<br/><br/><i>(Actually, I prefer a darker shade than that. Like the color of my clothes.)</i> Caleb returns, <i>(Or a forest. The leaves on the trees and the grass, the leafy vegetables used in making salads. The color of the clothes my friend used to wear....)</i> He trails off into silence after that. You wait a bit to see if he'll say anything more but he doesn't and you put the card back into your pocket. For some reason, you get the feeling that this wasn't a skit after all.")
        ]]></firstenter>
        <onexit type="script">
          LockExit (Green Door)
          MakeObjectInvisible (bent_metal)
          MakeObjectInvisible (broken_metal)
          MakeObjectInvisible (twisted_metal)
          if (not Got(block_metal)) {
            MakeObjectInvisible (block_metal)
          }
        </onexit>
        <exit alias="east" to="hallway1">
          <inherit name="eastdirection" />
        </exit>
        <object name="wooden_desk">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <alias>wooden desk</alias>
          <contentsprefix>with</contentsprefix>
          <look type="script">
            msg ("A dark wooden desk, it's glossy with protective oil coatings and looks pretty expensive. Caleb points out that it's made of black cherry wood, like it means anything. Wood is wood.")
            MakeObjectVisible (greenlab_comp)
          </look>
          <object name="greenlab_comp">
            <inherit name="editor_object" />
            <inherit name="container_closed" />
            <alias>computer</alias>
            <open type="boolean">false</open>
            <close type="boolean">false</close>
            <hidechildren />
            <contentsprefix>with</contentsprefix>
            <transparent type="boolean">false</transparent>
            <alt>comp; terminal; PC</alt>
            <isopen />
            <visible type="boolean">false</visible>
            <displayverbs>Look at; Take</displayverbs>
            <look type="script"><![CDATA[
              if (GetBoolean(player, "spelldoc")) {
                msg ("You look at the computer again and see the file Caleb left open for you to read.<br/><br/><i>\"File Type: <color color=\"Blue\">Magic</color><br/>Magic Type: <color color=\"Blue\">Healing</color><br/>File Name: <color color=\"Red\">Nano-Aid</color><br/><br/>Appears to be a repair spell of sorts. Surface damages are reversed upon use. Deeper, more extensive damages remain, however, so the spell must not be very powerful. Each use takes a small amount of magic power to restore a small amount of integrity. The formula is calculated as thus:<br/><br/><color color=\"Red\">Cast Nano-Aid - cost 15 TP - recovers 30 HP</color>.\"</i><br/><br/>There's some other stuff but it goes over your head pretty fast. Too long; didn't read, as the saying goes. You lift a hand and look at it warily; do you have to make some weird pose to use spells?<br/><br/><i>(My spells are voice-activated. Just <color color=\"Red\">Cast Nano-Aid</color> to recover a little of my HP.)</i> Caleb assures you with that same even tone as always, <i>(However, you must say it <color color=\"Red\">exactly as the file says</color> or it will not work. As advanced as I am, I am in the end still a computer and computers are very specifics-driven.)</i><br/><br/>\"Sooo... write it down?\" you return questioningly.<br/><br/><i>(Good idea. You can also practice casting it a few times to memorize it, but I must warn you. If I am already at <color color=\"Red\">full health</color> when you do, you will use up the TP but I <color color=\"Red\">will not gain any HP</color>. We will have to find a way to recover TP eventually, so until then, be careful.)</i>")
              }
              else {
                msg ("A desktop computer with flatscreen monitor, mouse and keyboard. It's just like the one in the Aqua Lab. Checking it out a little closer, you spot a flat panel plugged into the computer with an LCD screen in it.<br/><br/>\"Caleb, there's another of those pad things for you.\" you murmur, \"Wonder if there's anything in here that can add stuff to you.\"")
                MakeObjectVisible (input2)
              }
            ]]></look>
            <use type="script">
              msg ("It would probably be easier to let Caleb access it. You poked at a key and went cross-eyed at the block of text that doesn't look anything like English sentences.")
            </use>
            <object name="input2">
              <inherit name="editor_object" />
              <alias>connector's input pad</alias>
              <visible type="boolean">false</visible>
              <displayverbs>Look at; Take; Use</displayverbs>
              <look type="script"><![CDATA[
                msg ("A flat screen pad that Caleb can <color color=\"Blue\">use</color> to access computers directly.")
              ]]></look>
              <use type="script"><![CDATA[
                msg ("You place Caleb's hand on the pad and watch him tear through the files in the computer for anything useful. After a few moments, you hear him make a pleased sound.<br/><br/>\"Find something good?\" you ask him.<br/><br/><i>(Yes. I had an extensive library of <color color=\"Red\">magical spells</color> at my disposal but they were also disabled and some of those files were <color color=\"Red\">removed</color>.)</i> he returns, <i>(A majority of them are protected, so we cannot access them <color color=\"Red\">as I am now</color> but this also means whomever did this to me could not, either. However, one of my spells was being kept here and I have regained its use. Check the computer for relevant information.)</i><br/><br/>He sounds kind of smug about that and you laugh. Robot angel with magic, huh? Interesting choice of main character, but you're liking how it's going so far.")
                SetObjectFlagOn (player, "spelldoc")
                player.aid = true
              ]]></use>
            </object>
          </object>
        </object>
        <object name="angel_painting">
          <inherit name="editor_object" />
          <alias>large painting</alias>
          <look>A very large painting of two glowing angelic figures floating side by side. Their hands are raised and held together over their hearts, like they're praying or something, and their eyes are closed. The angel on the right has short red hair that looks like it's being blown around by wind and has its left wing spread. The angel on the left has short blonde hair that also looks just as messy and has its right wing spread. There's a space between the two angels that looks like someone painted a glow, but there's nothing to be 'glowy'.</look>
          <alt>angel painting</alt>
          <wash type="string"></wash>
        </object>
        <object name="metal_table">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <alias>examining table</alias>
          <contentsprefix>with</contentsprefix>
          <hidechildren />
          <look type="script">
            msg ("One of several long tables with various scientific tools and assorted pieces of metal scattered over it. This one had the most bits of metal, so it looked the most interesting.")
            MakeObjectVisible (twisted_metal)
            MakeObjectVisible (broken_metal)
            MakeObjectVisible (bent_metal)
            MakeObjectVisible (block_metal)
          </look>
          <object name="twisted_metal">
            <inherit name="editor_object" />
            <alias>twisted metal</alias>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>some</prefix>
            <take />
            <displayverbs>Look at; Take; Scan</displayverbs>
            <visible type="boolean">false</visible>
            <look type="script"><![CDATA[
              if (GetBoolean(twisted_metal, "scanned")) {
                msg ("This ruined piece of twisted metal is what's left of a diamond-tipped drill bit. Whatever this thing was used on, it lost horribly against it.<br/><br/>\"Okay, <b>this</b> is scary, and I haven't even seen blood and gore yet!\" you exclaim in shock.<br/><br/><i>(Why would you even want to?)</i> Caleb mutters in sotto. You glare at the metal pointedly and he sighs. <i>(At least you know what it is. I still do not see how this is of any help to us.)</i>")
              }
              else {
                msg ("A long piece of metal that's been pretty badly twisted and mangled. You wince looking at it. Somehow, you doubt that this thing is supposed to look like this.<br/><br/>\"What <b>is</b> this thing?\" you ask in a mix of fascination and horror. Something <b>did</b> this to it, and you don't want to run into it anytime soon.<br/><br/><i>(If you wish, " + player.playername + ", I can run a <color color=\"Blue\">scan</color> on it and try to identify it.)</i> Caleb offers. Huh, now why didn't you think of that?")
              }
            ]]></look>
            <scan type="script"><![CDATA[
              msg ("You pick up the twisted piece of metal and turn it slowly to look at it from all angles. \"Okay, Caleb,\" you mutter, \"Scan away!\"<br/><br/>The visor suddenly displays a wire-frame model of the twisted metal and you watch in awe as Caleb starts visually untwisting the model, a stream of complex calculations scrolling beside it as he works. In just a few moments, the untwisting is done and Caleb makes a small huffing noise that almost sounds amused.<br/><br/>\"No <i>way</i>.\" you mumble. Is this <b>really</b> what you think it is?<br/><br/><i>(Look at it again if you do not believe my data.)</i> Caleb just grumbles back.")
              SetObjectFlagOn (twisted_metal, "scanned")
            ]]></scan>
          </object>
          <object name="broken_metal">
            <inherit name="editor_object" />
            <alias>broken metal</alias>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>some</prefix>
            <suffix>and rubber</suffix>
            <take />
            <displayverbs>Look at; Take; Scan</displayverbs>
            <visible type="boolean">false</visible>
            <look type="script"><![CDATA[
              if (GetBoolean(broken_metal, "scanned")) {
                msg ("Shattered metal and a hard rubber grip are what's left of a first-class chisel. You scratch your head as you stare down at the pieces.<br/><br/>\"What the heck can just turn high carbon steel into bits of useless metal?\" you ask aloud incredulously.<br/><br/><i>(Hmm.)</i> Caleb makes a thoughtful sound, as if he's got some idea. You wait for him to spill it. <i>(I'd like to examine more items before I can say for certain.)</i> he finally says and you just roll your eyes.")
              }
              else {
                msg ("A piece of metal with a rubber handle surrounded by shards and splinters of metal. You squint at the pieces, trying to figure out what this thing used to be. Somehow, you doubt it's supposed to look shattered like this.<br/><br/>\"What's <b>this</b> thing?\" you ask in confusion. What's with all the broken metal junk?<br/><br/><i>(If you wish, " + player.playername + ", I can run a <color color=\"Blue\">scan</color> on it and try to identify it.)</i> Caleb offers. Huh, now why didn't you think of that?\"")
              }
            ]]></look>
            <scan type="script"><![CDATA[
              msg ("You look over the many pieces and shards of broken metal and watch as the visor makes wire-frame copies of them. Watching as they are carefully labeled and reassembled, complex calculations scrolling alongside them as Caleb pulls together what little data he can get from them, you find yourself a little envious of the android brain. Eventually, the scan stops.<br/><br/><i>(It is a high quality, carbonized steel chisel.)</i> he reports at last, <i>(If it was not in this state, I might even have been impressed by the craftsmanship. Unfortunately, it has been completely destroyed. Pity.)</i>")
              SetObjectFlagOn (broken_metal, "scanned")
            ]]></scan>
          </object>
          <object name="bent_metal">
            <inherit name="editor_object" />
            <alias>bent metal</alias>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>some</prefix>
            <take />
            <displayverbs>Look at; Take; Scan</displayverbs>
            <visible type="boolean">false</visible>
            <look type="script"><![CDATA[
              if (GetBoolean(bent_metal, "scanned")) {
                msg ("The bent and battered remains of a jackhammer bit. Caleb's still a little put out that he couldn't identify it. Once the humor of that little side-venture wore off, you find yourself growing a bit disturbed by the sight of the thing.<br/><br/>What the heck did that to a <i>jackhammer</i>?")
              }
              else {
                msg ("A large piece of metal that's been bent so many times it looks like a very thick zig-zag. You gape at it for a second before shaking your head and slapping your hand over your face.<br/><br/>\"What is this I don't even....\" you ramble under your breath in exasperation.<br/><br/><i>(Stop whining and let me <color color=\"Blue\">scan</color> it. I will find what it is and then that will be that.)</i> Caleb huffs.")
              }
            ]]></look>
            <scan type="script"><![CDATA[
              msg ("You pick up the bent piece of metal and turn it in every angle you can think of so Caleb can get a good scan of it. A wire-frame copy appears in the visor and you watch as Caleb stretches the metal back out and returns it to its former shape.<br/><br/><i>(What is this I do not even....)</i> he suddenly blurts out in utter confusion and you laugh as you recognize the long piece of metal.<br/><br/>\"It's the bit to a jackhammer.\" you tell him with a grin, \"What? Never seen one before?\"<br/><br/><i>(The image keeps trying to reference one of my files that I cannot read yet!)</i> Caleb complains, <i>(How am I to know what this is?!)</i><br/><br/>\"Now who's whining?\" you joke and laugh as the android grumbles <i>(I am <b>not</b> whining; I am complaining!)</i> under his breath.")
              SetObjectFlagOn (bent_metal, "scanned")
            ]]></scan>
          </object>
          <object name="block_metal">
            <inherit name="editor_object" />
            <alias>block of metal</alias>
            <alt>brick of metal; block of mythril; mythril brick; brick of mythril; metal brick; metal block</alt>
            <takemsg>What the heck; you pocket the block of metal. Caleb hums a little note of appreciation. For some reason, that makes you feel pretty good.</takemsg>
            <dropmsg>You drop the brick... right on Caleb's foot. You laugh nervously while he growls in your ear.</dropmsg>
            <displayverbs>Look at; Take; Scan</displayverbs>
            <visible type="boolean">false</visible>
            <take type="script">
              if (Got(travel_bag)) {
                msg ("What the heck; you stuff the block of metal into the travel bag. Caleb hums a little note of appreciation. For some reason, that makes you feel pretty good")
                MoveObject (block_metal, travel_bag)
                IncScore ("collected mythril", 15)
              }
              else {
                msg ("What the heck; you pocket the block of metal. Caleb hums a little note of appreciation. For some reason, that makes you feel pretty good.")
                MoveObject (block_metal, player)
                IncScore ("collected mythril", 15)
              }
            </take>
            <look type="script"><![CDATA[
              if (not GetBoolean(block_metal, "scan")) {
                msg ("A block of metal about the size of a soda can. It's a shimmering silver color and kind of pretty to look at. Unlike the other screwed up bits of metal on the table, this block looks nearly perfect. It just has a few scratches on the top. <br/><br/>\"I wonder what this is?\" you ask aloud, expecting Caleb to pipe up with a helpful suggestion. <br/><br/><i>(Hm? Oh, that? It is a block of solid mythril. I keep it around in case I feel like crafting something.)</i> Caleb answers absently. You glare at nothing at all and wish you were in front of the mirror so you could at least glare at his reflection. <i>(Were you expecting me to suggest <color color=\"Blue\">scanning</color> it? Why should I? I recognized it as soon as you laid eyes on it.)</i> <br/><br/>Sometimes, you want to just bash his head against the wall, but then you remember that this is just part of the game. Still, this robot character seems to be just too realistic to be a simple video game protagonist.")
              }
              else {
                msg ("A block of mythril. Caleb says he uses it for crafting, but you gotta wonder how he can make anything out of a brick of metal that destroys pretty much anything that tries to chip pieces off.")
              }
            ]]></look>
            <scan type="script"><![CDATA[
              msg ("You pick up the metal block and glare at it until Caleb gets the idea you want to scan it. <i>(Oh, fine. I will tell you more; do not bother with the scanning.)</i> he finally relents in irritation, <i>(As I have said, it is solid mythril. Mythril is a metal that was more readily available during the age in which I was built. It does not exist in this era. Mythril is the hardest metal known to living beings, used only in the very best armor and weapons. Forging and crafting with it is very labor-intensive and time-consuming, making any object made from it very rare and very expensive.)</i><br/><br/>\"And?\" you prompt, feeling like there's still a bit more he's not saying.<br/><br/><i>(And based on the evidence I see here, all the wrecked metal on this table was the result of people trying to use them on this mythril block.)</i> Caleb finished bluntly. You stare at the little brick of shiny, barely scratched metal, then look at the twisted, bent, broken and mangled pieces of tools and machinery lying nearby. <i>(Interesting fact, my clothes have mythril threads woven into them. Makes it a little harder to wash, but they are impossible to tear.)</i><br/><br/>You just slap your hand over your face.")
              SetObjectFlagOn (block_metal, "scan")
              block_metal.alias = "block of mythril"
            ]]></scan>
            <ontake type="script">
              if (not GetBoolean(player, "brick_frst")) {
                player.affection = player.affection+20
                SetObjectFlagOn (player, "brick_frst")
              }
            </ontake>
            <ondrop type="script">
              IncScore ("dropped mythril", -10)
            </ondrop>
            <drop type="script">
              firsttime {
                msg ("You drop the brick... right on Caleb's foot. You laugh nervously while he growls in your ear.")
                IncScore ("dropping block", -10)
              }
              otherwise {
                msg ("You carefully set the brick down elsewhere. You've already learned your lesson.")
                MoveObject (block_metal, player.parent)
              }
            </drop>
          </object>
        </object>
        <object name="mirror1">
          <inherit name="editor_object" />
          <alias>mirror</alias>
          <alt>looking glass</alt>
          <firstglance />
          <look type="script"><![CDATA[
            if (not ListContains(ScopeVisible(), eternalpin)) {
              if (mirror1.firstglance = true) {
                msg ("Looking into the mirror presents you with a reflection of Caleb, the android you're controlling in this game. He seems kind of pretty for being male; pale skin, bright red hair tied back into a very long ponytail, a green and white butler's outfit, green eyes, neutral expression, and a glowing pin on his lapel. Huh, you hadn't noticed that before.<br/><br/><i>(I hope you don't plan on admiring me all day, " + player.playername + "; I would very much like to be restored as soon as possible.)</i> Caleb's voice replies curtly. <br/><br/>\"Yeah, yeah. Don't get your wires in a twist.\" you mutter. Caleb simply huffs indignantly.")
                MakeObjectVisible (eternalpin)
                mirror1.firstglance = false
              }
              else {
                msg ("A long rectangular mirror. Looking into it gives you Caleb's reflection. It's kind of scary how responsive he is to your every thought.")
              }
            }
            else {
              msg ("A long rectangular mirror. Looking into it gives you Caleb's reflection. It's kind of scary how responsive he is to your every thought.")
            }
          ]]></look>
        </object>
      </object>
      <object name="greenreader">
        <inherit name="editor_object" />
        <alias>Green Keycard Reader</alias>
        <scenery type="boolean">false</scenery>
        <look>A card reader. Nothing else special about it really.</look>
        <usedefaultprefix />
        <alt>green reader</alt>
        <visible type="boolean">false</visible>
        <useanything type="script">
          msg ("It doesn't look like it'll take anything else. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary">
          <item key="greencard">
            msg ("You swipe the Green Keycard through the reader. There's a soft Beep! and the light turns green.")
            UnlockExit (Green Door)
          </item>
        </useon>
      </object>
      <object name="blueroom">
        <alias>Blue Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <description><![CDATA[<br/>Another drab lab room, the Blue Lab doesn't seem to offer much that is different. It isn't even blue in color; none of the lab rooms you've seen on this floor so far have anything to do with their name. Boring. There's a computer desk as usual in one corner, a small potted plant on a stand by the back wall, a closet or supply room in the far wall and the usual rows of examining tables in the center of the room.]]></description>
        <enter type="script">
          scenery_shift
          if (Contains (blue_closet,lab_geek)) {
            EnableTimer (closet_panic)
          }
          MakeObjectInvisible (blue_reader)
        </enter>
        <look type="script">
          msg ("The door leads to another lab and has a blue square on it. There is a card reader beside it.")
          MakeObjectVisible (blue_reader)
        </look>
        <onexit type="script">
          MoveObject (lab_geek, blue_closet)
          HelperCloseObject (blue_closet)
          DisableTimer (closet_panic)
        </onexit>
        <beforefirstenter type="script"><![CDATA[
          ClearScreen
          msg ("<i>(Please be sure to save often.)</i> Caleb suddenly remarks. You stop and look a little puzzled by that. Nice of the game to remind you of that, but you don't see a save button in the user interface anywhere. <i>(Oh, I apologize. I am not sure why I chose to say that just now.)</i><br/><br/>\"Well, it's still a helpful reminder.\" you reply with a shrug.<br/><br/><color color=\"Green\"><b>Type 'save' whenever you wish to save your progress, and remember to take breaks often to rest your eyes.</b></color><br/><br/>")
        ]]></beforefirstenter>
        <object name="comp_desk4">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <alias>computer desk</alias>
          <look>A dark wooden desk, it's glossy with protective oil coatings and looks pretty expensive. Caleb points out that it's made of black cherry wood, like it means anything. Wood is wood.</look>
          <listchildren type="boolean">false</listchildren>
          <hidechildren type="boolean">false</hidechildren>
          <contentsprefix>with</contentsprefix>
          <displayverbs>Look at; Take; Search</displayverbs>
          <search type="script">
            msg ("You search the desk until you find an open drawer. There's quite a few of these around this place.")
            MakeObjectVisible (drawer3)
          </search>
          <object name="bluelab_comp">
            <inherit name="editor_object" />
            <alias>computer</alias>
            <alt>comp; PC</alt>
            <firstglance type="boolean">false</firstglance>
            <look type="script"><![CDATA[
              if (GetBoolean(bluelab_comp, "opendoc") and bluelab_comp.firstglance = false) {
                msg ("The computer screen displays a new message after Caleb searched its files.<br/><br/><i>\"The weapon was taken to the Gold Lab for further analysis. We're not sure how it functions in the hands of the Guardian Angel, but R&D is working on making a suitable substitute for <color color=\"Red\">Project: Gatekeeper</color> to use.\"</i><br/><br/>\"Weapon?\" you ask with interest, \"You have your own special weapon?\" Caleb makes a small puzzled sound.<br/><br/><i>(I seem to recall that I did. Some of my memories have become accessible, and there is a strong impression that I was meant to hold something important in my hands.)</i> he replies. Looks like there's a valuable treasure in the Gold Lab. Now to figure out where that is and get to it.")
                bluelab_comp.firstglance = true
              }
              else if (GetBoolean(bluelab_comp, "memo") and bluelab_comp.firstglance = true) {
                msg ("The computer screen displays an in-lab memo.<br/><br/><i>\"The weapon was taken to the Gold Lab for further analysis. We're not sure how it functions in the hands of the Guardian Angel, but R&D is working on making a suitable substitute for <color color=\"Red\">Project: Gatekeeper</color> to use.\"</i><br/><br/>Caleb was right. It hasn't changed since last time you saw it. At least it's a good reminder.")
                SetObjectFlagOff (bluelab_comp, "memo")
              }
              else if (GetBoolean(bluelab_comp, "atkspell")) {
                msg ("<i>\"File Type: <color color=\"Blue\">Magic</color><br/>Magic Type: <color color=\"Blue\">Attack</color><br/>File Name: <color color=\"Red\">Luna-Flare</color><br/><br/>Appears to be some kind of weak attack spell. Similar to a stronger spell that the Guardian Angel has used, it creates a bright flash of light within the body of the target. Each use takes a small amount of magic power. The formula is calculated as thus:<br/><br/><color color=\"Red\">Cast Luna-Flare on Target - cost 20 TP - does 40 HP of damage to the target</color>.\"</i><br/><br/>Ooh, a Light spell. This should come in handy.")
                wait {
                  SetObjectFlagOff (bluelab_comp, "atkspell")
                }
              }
              else {
                msg ("There's a message already on the computer screen, like it'd been left there just before the author headed out on break.<br/><br/><i>\"Dear Journal,<br/><br/>That <color color=\"Red\">painting</color> just creeps me out whenever I see it. Why doesn't anyone do something about it? Is it even allowed to be here? Some days I just feel like going up to it and <color color=\"Green\">scrubbing or washing</color> it until all the paint's gone. Then I can actually sleep at night, instead of have nightmares that it's going to grab me next.\"</i>")
              }
            ]]></look>
          </object>
          <object name="input_5">
            <inherit name="editor_object" />
            <visible />
            <alias>connector's input pad</alias>
            <displayverbs>Look at; Take; Use</displayverbs>
            <look type="script"><![CDATA[
              msg ("A flat screen pad that Caleb can <color color=\"Blue\">use</color> to access computers directly.")
            ]]></look>
            <use type="script"><![CDATA[
              if (not GetBoolean(input_5, "disc")) {
                firsttime {
                  msg ("You put Caleb's hand on the pad and the files get sifted through at high speed as usual. After a bit, Caleb sighs a little grumpily.<br/><br/><i>(There is nothing of use to me here, not immediately. There is a file of some interest, though. I have put it up for you to see, " + player.playername + ".)</i> he remarks.")
                }
                otherwise {
                  msg ("Caleb speeds through the files and brings up the same one as before. <i>(It has not changed since we last accessed it. I do not see why you want to look at it again.)</i> he points out. Whatever, you still want to see it.")
                }
              }
              else if (GetBoolean(input_5, "disc")) {
                msg ("The installation doesn't take very long and Caleb makes a pleased sound at having another of his spells returned. <i>(You might want to read about it on the computer screen, " + player.playername + ". It should be useful to learn about this spell.)</i> he remarks.")
                SetObjectFlagOn (bluelab_comp, "atkspell")
                player.luna = true
              }
            ]]></use>
          </object>
          <object name="drawer3">
            <inherit name="editor_object" />
            <inherit name="container_closed" />
            <visible type="boolean">false</visible>
            <look>A simple desk drawer. Nothing special about it, really.</look>
            <alias>drawer</alias>
            <listchildren />
            <listchildrenprefix>It has</listchildrenprefix>
            <openmsg>You open the drawer.</openmsg>
            <closemsg>You close the drawer out of habit.</closemsg>
            <onclose type="script">
              firsttime {
                msg ("Caleb hums a bit in appreciation. The sound makes you smile a little. The guy's not so bad, once you get used to him.")
                IncScore ("good guy greg 2", 15)
              }
            </onclose>
            <object name="closet_key">
              <inherit name="editor_object" />
              <alias>small key</alias>
              <look>It's a small metal key with a tag on it that's colored blue. Wonder what this unlocks?</look>
              <take />
              <alt>closet key</alt>
            </object>
          </object>
        </object>
        <object name="small_plant">
          <inherit name="editor_object" />
          <alias>potted plant</alias>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>a small</prefix>
          <look>It's a little leafy plant in a dark green pot. Your mom has a plant like this one; the cat keeps trying to chew the leaves and she spends a lot of time shooing it away and moving the plant around. It doesn't look poisonous, but maybe your mom is just trying to protect the niceness of the thing.</look>
        </object>
        <object name="blue_closet">
          <inherit name="editor_object" />
          <inherit name="container_closed" />
          <inherit name="container_lockable" />
          <alias>supply closet</alias>
          <autoopen type="boolean">false</autoopen>
          <contentsprefix>holding</contentsprefix>
          <key type="object">closet_key</key>
          <look type="script"><![CDATA[
            if (not GetBoolean(blue_closet, "hiding")) {
              msg ("Looks like a closet or supply room. This is the first lab you've seen with one. Maybe this game is stingy with the items put into it? Which is weird considering the double bathroom you saw earlier. Hey, is there something <i>moving</i> in there...?")
            }
            else {
              msg ("Looks like a closet or supply room. This is the first lab you've seen with one. Maybe this game is stingy with the items put into it? Which is weird considering the double bathroom you saw earlier. That freaked out lab nut is usually hiding in there.")
            }
          ]]></look>
          <onopen type="script"><![CDATA[
            firsttime {
              MoveObject (lab_geek, blueroom)
              msg ("The door flings open, smacking you in the face and sending you stumbling back from the surprise. A middle-aged man leaps out with a warbling cry that can't seem to decide if it's out of fear or anger. In his hands is a device that he points and shoots in your direction blindly.<br/><br/><i>(That device has locked my spells out temporarily!)</i> Caleb exclaimed, <i>(We can only use physical attacks now, so hurry and defeat him. He looks like he's panicking, so there's no need for excessive force.)</i><br/><br/>\"But I <b>like</b> excessive force!\" you shout, but get ready to pull your punches anyway.")
              DisableTimer (closet_panic)
              EnableTimer (auto_attack2)
              player.luna = false
              player.ifrit = false
              player.aid = false
              player.sylph = false
              player.gnome = false
              player.shadow = false
              player.celsius = false
              player.undine = false
              player.volt = false
            }
            otherwise {
              msg ("The sweaty, nervous researcher is hiding in there again. \"Oh.\" he groans as he recognizes you, \"I guess you want me to come out and talk some more huh?\" He shuffles out of the closet and stands nearby, still fidgeting and looking around like something could get him at any moment.")
              MoveObject (lab_geek, blueroom)
            }
          ]]></onopen>
          <object name="lab_geek">
            <inherit name="editor_object" />
            <inherit name="male" />
            <inherit name="mob" />
            <inherit name="container_closed" />
            <alias>lab geek</alias>
            <health type="int">120</health>
            <atk type="int">10</atk>
            <alt>lab assistant; researcher</alt>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <open type="boolean">false</open>
            <close type="boolean">false</close>
            <isopen />
            <contentsprefix>holding</contentsprefix>
            <displayverbs>Look at; Speak to; Give</displayverbs>
            <look type="script"><![CDATA[
              msg ("A rather nervous looking man in his forties. He keeps wiping the sweat off his forehead and the light likes to shine where his hairline's receding. While he keeps looking around like something's going to jump out of nowhere and grab him, he also has a distressing tendency to want to grab Caleb's arm and hug it. It grosses you out and the android complains about it a lot. No one likes a clingy lab geek. The nametag on his lab coat says '<color color=\"Blue\">Frank</color>'.")
              lab_geek.alias = "Frank"
            ]]></look>
            <attack type="script"><![CDATA[
              msg ("You strike back against the lab geek!")
              if (not GetBoolean(lab_geek, "defeated")) {
                lab_geek.health = lab_geek.health-player.atk
                if (lab_geek.health > 0) {
                  msg ("The lab geek flails about in a panic!")
                  damage_amount = lab_geek.atk
                  damage_player (damage_amount)
                }
                else if (lab_geek.health < 1) {
                  SetObjectFlagOn (lab_geek, "defeated")
                  player.luna = true
                  player.ifrit = true
                  player.aid = true
                  DisableTimer (auto_attack2)
                  msg ("<br/>You knock the weird device out of the man's hands and it shatters on the floor. <i>(Ah. My magic system is back online. A bit late, but no matter.)</i> Caleb remarks with a little breath of relief. The lab geek finally calms down as well and seems to slouch before you, wiping at his forehead with a handkerchief. He keeps mumbling apologies over and over.<br/><br/>\"Okay, I accept! Just quit it already!\" you tell him in exasperation.<br/><br/>\"Sorry. I thought you were one of... <b>them</b>.\" the geek mumbles, twisting his glasses nervously and then wiping his forehead again. He squints up at you and his eyes go wide. \"Oh, oh my! Caleb! How did you escape the Aqua Lab? I thought the team fully <color color=\"Red\">disabled</color> you!\" he adds in surprise.<br/><br/><i>(You may want to tell him that you are not really me. It may calm him down. Just <color color=\"Blue\">tell him about your real name</color> or about how you are not me. That may do it.)</i> Caleb suggests.")
                  lab_geek.enemy = false
                  SetObjectFlagOn (blue_closet, "hiding")
                }
              }
              else {
                msg ("This guy isn't a threat, why are you still trying to attack them?")
              }
            ]]></attack>
            <askdefault type="script">
              msg ("\"I don't know. I'm just a lowly researcher.\" the man mumbles nervously, \"Can I go back to hiding now?\"")
            </askdefault>
            <telldefault type="script">
              msg ("\"Oh, um, good to know.\" the man mumbles, \"Can I go back to hiding now?\"")
            </telldefault>
            <giveanything type="script">
              msg ("\"Oh, um. Thanks but no thanks. I don't think that makes a good present though.\" Frank mumbles nervously.")
            </giveanything>
            <speak type="script"><![CDATA[
              msg ("\"I'm telling you, I don't know anything more about <color color=\"Red\">Project: Gatekeeper</color> than what I was told.\" the man says nervously, \"You can ask about anything else you want, but when it comes to that all I know is it was supposed to be MasaTech's big breakthrough. And now look at this place. I knew Caleb would be trouble the moment I laid eyes on him in the Aqua Lab.\"")
            ]]></speak>
            <ask type="scriptdictionary">
              <item key="his name identity himself"><![CDATA[
                msg ("\"Oh, uh. My n-name's <color color=\"Blue\">Frank</color>, I'm one of the researchers for MasaTech Industries.\" the middle-aged man answers nervously, \"Um, uh, I was s-supposed to put Caleb into cold storage for further research... but then people started <color color=\"Red\">going crazy</color>.\"")
                lab_geek.alias = "Frank"
              ]]></item>
              <item key="people going crazy what's going on"><![CDATA[
                msg ("\"Oh, I don't know, really. Some of the head researchers were talking about testing out <color color=\"Red\">Project: Gatekeeper</color> today. Just to see how it works before they show it off at that press conference.\" Frank mumbles, wiping his forehead again, \"Next thing I know, there are people evacuating, yelling, and then the building just went quiet. I tried to escape, but the windows are super-reinforced and the doors are all locked down. That <color color=\"Red\">shouldn't be possible</color>, though.\"")
              ]]></item>
              <item key="doors windows escape impossible why not"><![CDATA[
                msg ("\"The building's security system is controlled by the computers on the <color color=\"Red\">top floor</color>.\" Frank mumbles, shifting around nervously, \"I guess they were hacked somehow. The only way to get to them is using the Express Elevator, and you need a special clearance <color color=\"Blue\">Keycard</color> for that.\"")
              ]]></item>
              <item key="elevator special clearance keycard"><![CDATA[
                msg ("\"The Elevator Keycard? Um, I don't know much about it. I'm just a lowly researcher; I do grunt work in the labs.\" Frank moans pathetically, \"All I know is you need <color color=\"Red\">all the colors from the first floor</color> to get the Elevator Keycard.\"")
              ]]></item>
              <item key="the kidnapping being disabled"><![CDATA[
                msg ("\"I don't know. I showed up for work a month ago and he was already here. There was some celebration about it; I guess he was really hard to capture undamaged?\" Frank mumbles, \"MasaTech has been trying for years to build a working android that had all the advanced tech Caleb possessed, but nothing we created came close and it would be years longer before we scratched the surface of what he's capable of. So  the higher-ups decided to just copy Caleb. That's <color color=\"Red\">Project: Gatekeeper</color>.\"")
              ]]></item>
              <item key="soul stolen removed Caleb's"><![CDATA[
                msg ("\"An android with a soul? That's unlikely.\" Frank huffs, even as he looks around nervously, \"That's the sort of thing you read about in comic books. Although... now that you mention it, that would explain why a lot of files suddenly went missing and why some of the sample code we extracted didn't function like we thought they would.\" He wipes at his forehead again. \"I don't know. You might have better luck asking <color color=\"Blue\">someone else</color> about that.\"")
              ]]></item>
              <item key="Project: Gatekeeper Project"><![CDATA[
                msg ("Frank's eyes go huge at the question. \"Oh, oh, I don't know, that's top secret stuff.\" he whines softly, \"All I know is that MasaTech wanted to copy Caleb's design and build its own android and they called it <color color=\"Red\">Project: Gatekeeper</color>.\" He fidgets around in place. \"They were gonna test it today, and then everyone <color color=\"Red\">went crazy</color>. I don't know. You might have to ask <color color=\"Blue\">someone else</color> about it, if you can find anyone else still here.\"")
              ]]></item>
              <item key="weird device"><![CDATA[
                msg ("\"Oh, that thing? I don't know, I grabbed it from one of the emergency kits around the building.\" Frank mutters, fidgeting in place, \"It was built by MasaTech Industries to <color color=\"Red\">cancel energy systems</color> like Caleb's magic system. It only works for a short time, but I guess that's how the security guys managed to bring him down in the first place.\"")
              ]]></item>
            </ask>
            <tell type="scriptdictionary">
              <item key="your real name you're not Caleb"><![CDATA[
                msg ("The man's eyes go wide. \"You say you're not Caleb, and that your name is actually " + player.playername + "?\" he exclaims, \"That explains how Caleb's moving even though we disconnected his motor controls; you're controlling him remotely!\"<br/><br/>\"Man, this game likes to state the obvious.\" you sigh and the man blinks at you.<br/><br/>\"Game? This isn't a game; is that how Caleb got you to help him? By making you think this was some silly computer game?\" the researcher asks and wipes at his forehead again, \"Oh, we're all going to die. I should have stayed home today.\"")
              ]]></item>
              <item key="happy birthday"><![CDATA[
                msg ("Frank looks surprised. \"Oh, how did you know it was my birthday?\" he asks, but looks a little cheered up, \"I suppose it's too much to ask if you have a <color color=\"Blue\">present</color> for me.\" You just stare at him and he deflates a little. \"No, of course not. This company is responsible for <color color=\"Red\">kidnapping</color> Caleb, so why bother with a little birthday present? Oh, I should have just stayed home today....\"")
              ]]></item>
            </tell>
            <give type="scriptdictionary">
              <item key="box_donuts"><![CDATA[
                msg ("You give Frank the box of donuts you found in the security room. He gives a weak smile back. \"Oh, thanks for the <color color=\"Blue\">present</color>.\" he says, clutching the box. He digs around in his pocket and brings out a disc, offering it to you.<br/><br/>\"It's not much, but if you're going to be running around to undo the damages MasaTech did to Caleb, you'll need this.\" he tells you, \"It contains one of his attack spells. Use it on the computer over there and reinstall it. Better that you have it than <color color=\"Red\">Project: Gatekeeper</color>.\"<br/><br/>You got a <color color=\"Blue\">mysterious disc</color>.")
                RemoveObject (box_donuts)
                MakeObjectVisible (blueroom_disc)
                MoveObject (blueroom_disc, player)
              ]]></item>
            </give>
            <object name="blueroom_disc">
              <inherit name="editor_object" />
              <alias>mysterious disc</alias>
              <visible type="boolean">false</visible>
              <look>An odd disc that Frank gave you. It's supposed to have one of Caleb's spells on it.</look>
              <giveto type="scriptdictionary">
                <item key="bluelab_comp">
                  msg ("You slide the disc into the computer and the machine starts to hum. Guess now you put Caleb's hand on the pad and install the spell.")
                  RemoveObject (blueroom_disc)
                  SetObjectFlagOn (input_5, "disc")
                </item>
              </giveto>
            </object>
          </object>
        </object>
        <object name="metal_table3">
          <inherit name="editor_object" />
          <look>One of several long metal examining tables in the center of the lab. It seems to be common to see these.</look>
          <alias>examining table</alias>
        </object>
        <exit alias="east" to="hallway1">
          <inherit name="eastdirection" />
        </exit>
      </object>
      <object name="blue_reader">
        <inherit name="editor_object" />
        <alias>Blue Keycard Reader</alias>
        <scenery type="boolean">false</scenery>
        <look>A card reader. Nothing much to it.</look>
        <visible type="boolean">false</visible>
        <useanything type="script">
          msg ("It doesn't look like it'll take anything else. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary">
          <item key="blue_keycard">
            msg ("You swipe the Blue Keycard through the reader. There's a soft beep and the light turns green.")
            UnlockExit (Blue Door)
          </item>
        </useon>
      </object>
      <exit name="Blue Door" alias="southwest" to="blueroom">
        <inherit name="southwestdirection" />
        <prefix type="string"></prefix>
        <locked />
        <lockmessage>The door is locked. You'll need the Blue Keycard to open it.</lockmessage>
        <suffix>to the Blue Lab</suffix>
      </exit>
      <object name="yellowroom">
        <alias>Yellow Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <enter type="script">
          scenery_shift
          MakeObjectInvisible (yellow_reader)
        </enter>
        <look type="script">
          msg ("The door leads to another lab and has a yellow square on it. There's a card reader beside it.")
          MakeObjectVisible (yellow_reader)
        </look>
        <exit alias="northwest" to="hallway1">
          <inherit name="northwestdirection" />
        </exit>
      </object>
      <object name="yellow_reader">
        <inherit name="editor_object" />
        <scenery type="boolean">false</scenery>
        <alias>Yellow Keycard Reader</alias>
        <look>A card reader. Nothing much to it.</look>
        <visible type="boolean">false</visible>
        <useanything type="script">
          msg ("It doesn't look like it'll take anything else. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary" />
      </object>
      <exit name="Yellow Door" alias="southeast" to="yellowroom">
        <inherit name="southeastdirection" />
        <locked />
        <lockmessage>The door is locked. You'll need the Yellow Keycard to open it.</lockmessage>
        <suffix>to the Yellow Lab</suffix>
      </exit>
      <object name="orangeroom">
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <alias>Orange Lab</alias>
        <prefix>the</prefix>
        <enter type="script">
          scenery_shift
          MakeObjectInvisible (orange_reader)
        </enter>
        <look type="script">
          msg ("The door leads to another lab. There's an orange square on it. A card reader is beside the door.")
          MakeObjectVisible (orange_reader)
        </look>
        <exit alias="west" to="hallway1">
          <inherit name="westdirection" />
        </exit>
      </object>
      <exit name="Orange Door" alias="east" to="orangeroom">
        <inherit name="eastdirection" />
        <locked />
        <lockmessage>The door is locked. You'll need the Orange Keycard to open it.</lockmessage>
        <suffix>to the Orange Lab</suffix>
      </exit>
      <object name="orange_reader">
        <inherit name="editor_object" />
        <alias>Orange Keycard Reader</alias>
        <scenery type="boolean">false</scenery>
        <look>A card reader. Nothing much to it.</look>
        <visible type="boolean">false</visible>
        <useanything type="script">
          msg ("It doesn't look like it'll take anything else. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary" />
      </object>
      <exit alias="north" to="ground_elevator_stairs">
        <inherit name="northdirection" />
        <suffix>to the stairs and elevator</suffix>
      </exit>
      <exit alias="south" to="hallway2">
        <inherit name="southdirection" />
        <suffix>to Hallway B</suffix>
      </exit>
    </object>
    <object name="hallway2">
      <inherit name="editor_room" />
      <alias>Ground Floor - Hallway B</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <description><![CDATA[<br/>An 'L' shaped bend that turns into another hallway, this place has four more rooms and a few more cameras. The tile floor is shiny under the harsh flourescent lights. Both sides of the hall have two doors but only three of them have colored squares and card readers. The last door is unmarked and -miraculously- has no card reader.]]></description>
      <enter type="script">
        scenery_shift1
        EnableTimer (security)
        if (Contains (hallway2,secguard)) {
          EnableTimer (auto_attack)
          DisableTimer (security)
        }
      </enter>
      <onexit type="script">
        DisableTimer (security)
        if (Contains (hallway2,secguard)) {
          DisableTimer (auto_attack)
        }
      </onexit>
      <firstenter type="script"><![CDATA[
        msg ("<br/>\"These graphics are amazing! Why haven't I ever heard of a game company called Archives of the Twin Blades?\" you wonder aloud as you step into the second hallway, looking around at the doors and walls. You reach out to put Caleb's hand against one and the visor starts scrolling with data about its density, possible construction materials, and temperature.<br/><br/><i>(It is not a game company, but we <b>do</b> hold large amounts of stock in several others. The Archives was built to house the knowledge of the world.)</i> Caleb returns.<br/><br/>\"Then they paid an awful lot of cash to have a game made this good. I wonder what the rest of the story is gonna be like?\" you mutter under your breath. Caleb just sighs and for a second there you wonder if you really just held a conversation with a character in a video game.")
      ]]></firstenter>
      <exit alias="north" to="hallway1">
        <inherit name="northdirection" />
        <suffix>to Hallway A</suffix>
      </exit>
      <object name="violetroom">
        <alias>Violet Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <enter type="script">
          scenery_shift
          MakeObjectInvisible (violet_reader)
        </enter>
        <look type="script">
          msg ("A door leading to another lab. There's a violet square on it. A card reader is beside it.")
          MakeObjectVisible (violet_reader)
        </look>
        <exit alias="southwest" to="hallway2">
          <inherit name="southwestdirection" />
        </exit>
      </object>
      <object name="violet_reader">
        <inherit name="editor_object" />
        <scenery type="boolean">false</scenery>
        <alias>Violet Keycard Reader</alias>
        <look>A card reader. Nothing special about it.</look>
        <visible type="boolean">false</visible>
        <useanything type="script">
          msg ("It doesn't look like it'll take anything else. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary" />
      </object>
      <object name="indigoroom">
        <alias>Indigo Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <enter type="script">
          scenery_shift
          MakeObjectInvisible (indigo_reader)
        </enter>
        <look type="script">
          msg ("A door with an indigo square on it leading to another lab. There's a card reader beside it.")
          MakeObjectVisible (indigo_reader)
        </look>
        <exit alias="northwest" to="hallway2">
          <inherit name="northwestdirection" />
        </exit>
      </object>
      <object name="indigo_reader">
        <inherit name="editor_object" />
        <scenery type="boolean">false</scenery>
        <alias>Indigo Card Reader</alias>
        <look>A card reader. Nothing special about it.</look>
        <visible type="boolean">false</visible>
        <useanything type="script">
          msg ("It doesn't look like it'll take anything else. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary" />
      </object>
      <object name="redroom">
        <alias>Red Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <enter type="script">
          scenery_shift
          MakeObjectInvisible (red_reader)
        </enter>
        <look type="script">
          msg ("A door leading to another lab. It has a red square on it and a card reader beside it.")
          MakeObjectVisible (red_reader)
        </look>
        <exit alias="southwest" to="hallway2">
          <inherit name="southwestdirection" />
        </exit>
      </object>
      <object name="red_reader">
        <inherit name="editor_object" />
        <look>A card reader. Nothing special about it.</look>
        <scenery type="boolean">false</scenery>
        <alias>Red Keycard Reader</alias>
        <visible type="boolean">false</visible>
        <useanything type="script">
          msg ("It doesn't look like it'll take anything else. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary" />
      </object>
      <exit name="Red Door" alias="southwest" to="redroom">
        <inherit name="southwestdirection" />
        <locked />
        <lockmessage>The door is locked. You'll need the Red Keycard to open it.</lockmessage>
        <suffix>to the Red Lab</suffix>
      </exit>
      <object name="lounge">
        <inherit name="editor_room" />
        <alias>Lounge</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <description><![CDATA[<br/>The inside of the lounge makes you think of employee perks. The room looks cushy; it's big and well lit with several tables and chairs, a mini-kitchen and juice bar, and an area with sofas and a big-screen plasma TV. Vases of flowers and elegant curtains decorate the room, and the walls are painted a soft beige. It's really relaxing to look at. You gape at all the stuff until Caleb plays a little coughing audio into your ear to get your attention.]]></description>
        <firstenter type="script"><![CDATA[
          msg ("<br/>\"Man, these bad guys must be <b>loaded</b>!\" you exclaim, \"It's kind of a cliché for video game villains to be filthy rich, but I haven't seen anything <i>this</i> over the top since the latest Grand Larceny game came out!\"<br/><br/><i>(If we are going to be doing comparisons, then this situation is more of a Grand Theft Me.)</i> Caleb returns in an unamused tone, <i>(Will you <b>please</b> stay on track, " + player.playername + "? We need to find another <color color=\"Red\">Keycard</color>.)</i><br/><br/>\"Yeah, yeah. Spoilsport.\" you mutter, but he's right. Gotta keep your focus on the game so you don't lose this early.")
        ]]></firstenter>
        <enter type="script">
          DisableTimer (security)
        </enter>
        <exit alias="east" to="hallway2">
          <inherit name="eastdirection" />
        </exit>
        <object name="kitchen">
          <look>A small kitchen area with sink, counters, refrigerator and microwave. Pretty much everything a company needs to keep their employees fed and content.</look>
          <alias>kitchen</alias>
          <description type="script"><![CDATA[
            if (GetBoolean(player, "frstkitch")) {
              msg ("<br/>Standing in the kitchen area makes you feel a little weird. Why would a game bother to put something like this in here? On top of that, Caleb keeps making little clicking sounds, like a hard drive trying stubbornly to access a bad sector, and it's getting kind of annoying. You decide to search the area quickly so you can get out and make him stop that.")
            }
            else {
              msg ("<br/>Standing in the kitchen area makes you feel a little weird. Why would a game bother to put something like this in here? It doesn't seem to make much sense. You suppose it's just to take up space or provide a break from the rest of the game.")
            }
          ]]></description>
          <firstenter type="script"><![CDATA[
            msg ("<br/><i>(A kitchen....)</i> Caleb trails off, sounding a little sad and uncertain, maybe even sad that he was uncertain. You look around and shrug.<br/><br/>\"Yeah, it's a kitchen. So what?\" you ask.<br/><br/><i>(I...Kitchen... Cooking... It was part of my original function.)</i> Caleb returns almost brokenly, <i>(Function... call to....)</i> He starts clicking, a kind of nervous tic that has you wonder if maybe you just stumbled across a major glitch in the game. Seriously, who would build a robotic guardian angel and have him do something as stupid as <b>cook</b>?")
            SetObjectFlagOn (player, "frstkitch")
          ]]></firstenter>
          <enter type="script">
            DisableTimer (security)
          </enter>
          <exit alias="out" to="lounge">
            <inherit name="outdirection" />
            <suffix>of the kitchen</suffix>
          </exit>
          <object name="refrigerator">
            <inherit name="editor_object" />
            <inherit name="container_open" />
            <look><![CDATA[A full-size double door refrigerator with built in freezer and ice-maker. It's made of smooth metal and bears the brand JuneTag. Which is kind of funny because that's the brand of refrigerator that's in <b>your</b> kitchen and this model just came out last month. Games like this one take years of development so how did...? Then you decide not to question it right now.]]></look>
            <alias>refrigerator</alias>
            <isopen type="boolean">false</isopen>
            <listchildren />
            <listchildrenprefix>It has</listchildrenprefix>
            <alt>fridge; cooler; icebox</alt>
            <maxobjects type="int">5</maxobjects>
            <openmsg>You open the refrigerator and see a bunch of bottles of water. Boring.</openmsg>
            <closemsg>You close the refrigerator and Caleb hums a little note of appreciation. For some reason, that makes you feel pretty good about yourself.</closemsg>
            <onopen type="script">
              if (GetBoolean(player, "restore")) {
                msg ("On second thought, you decide to look at the labels a little closer.")
              }
            </onopen>
            <object name="bottles">
              <inherit name="editor_object" />
              <alias>bottle of water</alias>
              <usedefaultprefix />
              <prefix type="string"></prefix>
              <takemsg>You grab a bottle for yourself.</takemsg>
              <dropmsg>You drop the bottle.</dropmsg>
              <alt>water; potion; mana</alt>
              <empty type="boolean">false</empty>
              <displayverbs>Look at; Take</displayverbs>
              <inventoryverbs>Look at; Drop; Drink</inventoryverbs>
              <gulps type="int">0</gulps>
              <take type="script">
                if (Got(travel_bag)) {
                  MoveObject (bottles, travel_bag)
                  msg ("You grab a bottle and stuff it into the travel bag. This could be useful.")
                }
                else {
                  MoveObject (bottles, player)
                  msg ("You grab a bottle for yourself. Score! Company freebie!")
                }
              </take>
              <look type="script"><![CDATA[
                if (not GetBoolean(player, "restore")) {
                  msg ("A bottle of water. Bleh. Not that impressive really.")
                }
                else if (GetBoolean(player, "restore")) {
                  bottles.alias = bottle of liquid mana
                  msg ("You study the label more closely and realize this is the <color color=\"Blue\">liquid mana</color> that file was talking about. So these are good for restoring Caleb's <color color=\"Red\">magical power</color>? Makes about as much sense as everything else, you guess.")
                }
                else if (bottles.empty = true) {
                  msg ("An empty bottle. Not much else to be said about it.")
                }
              ]]></look>
              <drink type="script"><![CDATA[
                if (not GetBoolean(bottles, "restore")) {
                  msg ("You look at the bottle and wonder what you were thinking, trying to drink this thing. Robots don't need water.")
                }
                else if (GetBoolean(bottles, "restore")) {
                  healing_amount = 200
                  restore_player (healing_amount)
                  msg ("You open the bottle and take a drink. Or rather, Caleb does. You're sitting there wondering if you look dumb holding your hand out like you actually have something there, and then you wonder what liquid mana tastes like.<br/><br/>200 TP restored!")
                  if (bottles.gulps = 3) {
                    bottles.alias = "empty bottle"
                    bottles.empty = true
                    msg ("<br/>Looks like that was the last of the liquid mana. You're left with an empty bottle. Wonder if you can get a refill somewhere....")
                  }
                  else {
                    bottles.gulps = bottles.gulps+1
                  }
                }
                else if (bottles.empty = true) {
                  msg ("It's empty.")
                }
              ]]></drink>
              <ontake type="script">
                if (Got(travel_bag)) {
                  MoveObject (bottles, travel_bag)
                }
                else {
                }
              </ontake>
              <ondrop type="script">
                SetObjectFlagOn (bottles, "dropped")
              </ondrop>
            </object>
          </object>
          <object name="sink">
            <inherit name="editor_object" />
            <alias>sink</alias>
            <look>A metal sink with one of those flexible faucets your mom tends to rave about. It's very shiny and looks really expensive for a sink.</look>
            <alt>basin</alt>
          </object>
          <object name="counter">
            <inherit name="editor_object" />
            <alias>counters</alias>
            <look>Several counters made of smooth marble and wood. They look classy and expensive, just the kind of thing for a major multi-billion dollar evil corporation. Caleb gives a low whistle in your ear that you roll your eyes at; why would he care about counters anyway?</look>
          </object>
          <object name="microwave">
            <inherit name="editor_object" />
            <alias>microwave</alias>
            <look><![CDATA[A chic black microwave oven. The keypad is touch sensitive and it has a digital timer. There are even preset keys for various common uses, like a popcorn timer and a reheating option. Your mom would go nuts if she saw a microwave like this, the jealousy would just eat her alive. Knowing where it is, the thing is probably more expensive than your game collection, and you have a <b>ton</b> of games.]]></look>
          </object>
        </object>
        <exit alias="in" to="kitchen">
          <inherit name="indirection" />
          <suffix>the kitchen area</suffix>
        </exit>
        <object name="juicebar">
          <inherit name="editor_object" />
          <alias>juice bar</alias>
          <look>A juice bar styled to look like a regular bar from any tavern or club. The bottles of drinks are all various juices and nectars. It kind of makes you thirsty to look at.</look>
        </object>
        <object name="couch">
          <inherit name="editor_object" />
          <inherit name="container_open" />
          <alias>sofa</alias>
          <look>A big, plush, comfy-looking sofa set right in front of that sweet plasma TV. It would totally drive your mom crazy if she had one of these in the living room. You want to just throw yourself onto it, relax, and watch some movies. Or maybe play some sports games. You kinda hope you can play a game within this game.</look>
          <displayverbs>Look at; Search</displayverbs>
          <close type="boolean">false</close>
          <open type="boolean">false</open>
          <alt>couch</alt>
          <listchildren />
          <listchildrenprefix>There's</listchildrenprefix>
          <sit type="script"><![CDATA[
            msg ("You flop onto the couch and wince at the sound of it protesting and cracking under Caleb's weight. Oh, right. Android means heavy metal body.<br/><br/><i>(I am not paying for the damage to this.)</i> Caleb suddenly butts in and you lift an eyebrow at the random statement. <i>(How strange. It was like a compulsion to say that. It may be related to the files I cannot fully access without a soul.)</i> Silently, you agree that it's weird.")
          ]]></sit>
          <search type="script"><![CDATA[
            if (not GetBoolean(couch, "greencard")) {
              MakeObjectVisible (greencard)
              msg ("Searching the sofa usually gets you stuff like change and the TV remote at home, so maybe the same is here? You pull the cushions off the couch and reveal a <color color=\"Red\">Green Keycard</color> underneath them. Some poor sap must have lost it here during break.")
              SetObjectFlagOn (couch, "greencard")
            }
            else {
              msg ("You scrounge around in the sofa looking for something more, but there doesn't seem to be any new things to find. Oh well, you doubt someone would be able to hide a soul in the couch anyway.")
            }
          ]]></search>
          <object name="greencard">
            <inherit name="editor_object" />
            <alias>Green Keycard</alias>
            <look>A green colored keycard with a magnetic strip. It says 'Level 2' on it.</look>
            <alt>green card; greencard</alt>
            <take />
            <takemsg>You take the Green Keycard. This should come in handy.</takemsg>
            <dropmsg>You toss the Green Keycard away. Don't need that anymore.</dropmsg>
            <scenery type="boolean">false</scenery>
            <visible type="boolean">false</visible>
          </object>
        </object>
        <object name="television">
          <inherit name="editor_object" />
          <inherit name="switchable" />
          <alias>plasma television</alias>
          <look>It's a massively huge plasma TV mounted on the wall. Sweet! Something like that in real life would cost a fortune. It's amazing how detailed this thing is.</look>
          <switchedondesc>The TV's on. That's right; you're wasting electricity. Such a bad, bad thing to do.</switchedondesc>
          <switchedoffdesc>The TV is currently off.</switchedoffdesc>
          <displayverbs>Look at; Switch on; Switch off; Watch</displayverbs>
          <switchonmsg>On a whim, you reach out and poke the power button. The TV comes on in a beautiful blossom of light and color. Caleb just sighs in resignation.</switchonmsg>
          <switchoffmsg>You turn the television off by habit.</switchoffmsg>
          <alt>tv; telly</alt>
          <Watch type="script"><![CDATA[
            if (IsSwitchedOn(television)) {
              msg ("<br/>A familiar news anchorwoman is in the middle of her report. The letters REC in the corner of the screen tell you that this was previously recorded and is just playing back video. You wonder why the woman looks familiar before realizing that she's a real person, an anchorwoman that you see every night on the news. She's pretty famous, but she's also new, so seeing her in this game is a bit jarring.<br/><br/>\"...anxiously awaiting the big reveal of Project: GateKeeper. Sources say this miracle of technology will revolutionize the industry....\"<br/><br/>\"Boring.\" you declare at the screen. Caleb just sighs in your ear, a vaguely exasperated sound.")
            }
            else {
              msg ("<br/>(Explain to me the reasoning behind watching a television that is not activated.) Caleb demands in that same even tone your mother takes when she catches you doing something stupid.<br/><br/>\"I'm wondering if a cheat code is hidden here.\" you return absently, squinting at the dark screen.<br/><br/>(I will spare you the effort in futility. There is not. Stop that.)")
            }
          ]]></Watch>
          <watch type="script"><![CDATA[
            if (not IsSwitchedOn(television)) {
              msg ("<i>(Explain to me the reasoning behind watching an inactive device, " + player.playername + ".)</i> Caleb demands flatly after a couple of minutes of you staring at the black screen.<br/><br/>\"I kind of hoped a cheat code would appear after a while. Some games have them set up like that.\" you explain to him.<br/><br/><i>(Ah. Let me make that effort easier for you. There is none.)</i> Sometimes, this character can be <b>such</b> a buzzkill....")
            }
            else if (IsSwitchedOn(television)) {
              msg ("<br/>The image of a pretty anchorwoman takes you by surprise. You know that lady; she's a new face on the news you watch with your mom every night, but she's already pretty famous. The words <i>'Previously Recorded'</i> in the corner lets you know that this is a video on loop, but you've already missed a lot of her reporting from the shock of seeing her.<br/><br/><i>\"...eagerly awaiting the unveiling of <color color=\"Red\">Project: Gatekeeper</color>, which will revolutionize the robotics industry....\"</i><br/><br/>\"Does that mean there's more of you?\" you ask of Caleb. He's been awful quiet ever since you turned this thing on.<br/><br/><i>(For both our sakes, I hope not.)</i> he finally returns quietly, <i>(I was built around the concept of preservation of life and knowledge, with the two to be inclusive. Another like me with a different core concept...)</i> He doesn't finish the thought. He doesn't have to; you've seen enough movies to know where that would go.")
            }
          ]]></watch>
          <onswitchoff type="script">
            firsttime {
              msg ("Caleb hums a little note of appreciation. For some reason, that makes you feel pretty good about yourself.")
              IncScore ("saving elec TV", 20)
            }
          </onswitchoff>
        </object>
        <object name="walls">
          <inherit name="editor_object" />
          <scenery />
          <look>The walls are painted soft beige and make you feel relaxed when you look at them. You wonder if your mom might like that color in the living room.</look>
          <alt>wall; wallpaper</alt>
          <displayverbs>Look at</displayverbs>
        </object>
        <object name="carpet">
          <inherit name="editor_object" />
          <scenery />
          <look><![CDATA[The floor is covered in a dark maroon carpet that absorbs the sound of Caleb's steps. Now <b>that's</b> money being spent!]]></look>
          <alt>floor</alt>
          <displayverbs>Look at</displayverbs>
        </object>
      </object>
      <exit name="Violet Door" alias="northeast" to="violetroom">
        <inherit name="northeastdirection" />
        <locked />
        <lockmessage>The door is locked. You'll need the Violet Keycard to open it.</lockmessage>
        <prefix type="string"></prefix>
        <suffix>to the Violet Lab</suffix>
      </exit>
      <exit name="Indigo Door" alias="southeast" to="indigoroom">
        <inherit name="southeastdirection" />
        <locked />
        <lockmessage>The door is locked. You'll need the Indigo Keycard to open it.</lockmessage>
        <prefix type="string"></prefix>
        <suffix>to the Indigo Lab</suffix>
      </exit>
      <exit name="Lounge Door" alias="west" to="lounge">
        <inherit name="westdirection" />
        <prefix type="string"></prefix>
        <suffix>to the Lounge</suffix>
      </exit>
    </object>
    <object name="ground_elevator_stairs">
      <inherit name="editor_room" />
      <alias>Ground Floor - Elevator/Stairwell</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>at the</prefix>
      <description><![CDATA[<br/>At this end of the hallway is a single elevator and a door to the stairs. Beside both are card readers, just like the ones you've been running into lately. The elevator also has a sign, 'Express'.]]></description>
      <descprefix>You are</descprefix>
      <enter type="script">
        scenery_shift
      </enter>
      <object name="elevator_reader">
        <inherit name="editor_object" />
        <alias>Elevator Card Reader</alias>
        <look>The card reader for the express elevator.</look>
        <alt>elevator reader</alt>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <scenery type="boolean">false</scenery>
        <visible type="boolean">false</visible>
        <useanything type="script">
          msg ("Doesn't look like the reader will take this. Oh well.")
        </useanything>
        <useon type="scriptdictionary">
          <item key="aquacard">
            msg ("You try the Aqua Keycard on the reader. It gives you back an error beep and the light stays red. Doesn't look like this is the right card.")
          </item>
          <item key="greencard">
            msg ("You try the Green Keycard on the reader. It gives you back and error beep and the light stays red. Doesn't look like this is the right card.")
          </item>
        </useon>
      </object>
      <object name="express_elevator">
        <alias>Express Elevator</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <look type="script">
          msg ("An elevator with the sign 'Express' hanging over where the numbers should be showing for the different floors.")
          MakeObjectVisible (elevator_reader)
        </look>
        <enter type="script">
          MakeObjectInvisible (elevator_reader)
        </enter>
        <exit alias="out" to="ground_elevator_stairs">
          <inherit name="outdirection" />
        </exit>
      </object>
      <exit name="Elevator Doors" alias="in" to="express_elevator">
        <inherit name="indirection" />
        <locked />
        <lockmessage>The doors won't open and there's no button to press to call for the elevator. There's a card reader beside it, too. The light is red.</lockmessage>
        <suffix>the elevator</suffix>
      </exit>
      <object name="ground_stairs">
        <alias>Ground Floor - Stairwell</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <description><![CDATA[<br/>There are several flights of stairs ascending to the top of the building and one flight descending to another door. It's eerily quiet, and the echoing sounds of Caleb's footsteps on the metal floor makes your hair stand on end. You're half-expecting the game to suddenly change genres and become a survival horror with fungus-brainwashed zombies or something. The idea makes you grin; <b>that</b> would be pretty cool.]]></description>
        <descprefix>You are in</descprefix>
        <alt>stairs</alt>
        <look type="script">
          msg ("The door to the stairs is just a few feet away from the elevator. It also has a card reader beside it. You wonder why practically every door has one of these. Would the emergency exits have them too?")
          MakeObjectVisible (stair_reader1)
        </look>
        <beforefirstenter type="script">
          ClearScreen
        </beforefirstenter>
        <enter type="script">
          stairscene_shift
          MakeObjectInvisible (stair_reader1)
          LockExit (Stairwell Door)
        </enter>
        <exit alias="south" to="ground_elevator_stairs">
          <inherit name="southdirection" />
        </exit>
        <exit alias="down" to="underground_stairwell">
          <inherit name="downdirection" />
          <suffix>the stairs to the basement</suffix>
        </exit>
        <exit alias="up" to="second_floor_stairwell">
          <inherit name="updirection" />
          <suffix>the stairs to the Second Floor</suffix>
        </exit>
        <object name="walls1">
          <inherit name="editor_object" />
          <scenery />
          <alias>walls</alias>
          <look>The walls are textured white concrete. They would probably feel rough but passing Caleb's hand over the surface just gets you data on what the wall is made of, its temperature and some faint energy readings. For some reason, that kind of makes you feel a little sad for him.</look>
          <alt>wall</alt>
        </object>
        <object name="floor1">
          <inherit name="editor_object" />
          <scenery />
          <alias>floor</alias>
          <look>The floor and stairs are all made of metal, stainless steel and very cold.</look>
        </object>
      </object>
      <object name="stair_reader1">
        <inherit name="editor_object" />
        <alias>Ground Floor - Stairs Card Reader</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <look>A card reader for the stairs. This is getting to be a bit much.</look>
        <alt>stair reader; stairs reader</alt>
        <scenery type="boolean">false</scenery>
        <visible type="boolean">false</visible>
        <useanything type="script">
          msg ("Hmm, doesn't look like it'll take that. Stubborn card reader....")
        </useanything>
        <useon type="scriptdictionary">
          <item key="aquacard">
            UnlockExit (Stairwell Door)
            msg ("You use the Aqua Keycard on the reader. To your surprise, there's a soft 'Beep!' and the light turns green. So this Keycard not only opens the Aqua Lab but the door to the stairs too? That seems... odd.")
          </item>
          <item key="greencard">
            msg ("You try the Green Keycard on the reader. It gives an error beep and the light stays red. Looks like this isn't the right card.")
          </item>
        </useon>
      </object>
      <exit name="Stairwell Door" alias="north" to="ground_stairs">
        <inherit name="northdirection" />
        <prefix type="string"></prefix>
        <locked />
        <lockmessage>The door to the stairs is locked and there's a card reader beside it as well. All these readers are starting to become annoying.</lockmessage>
        <suffix>through the stairwell door</suffix>
        <look type="script">
          msg ("There's the card reader for the stairwell door beside it.")
          MakeObjectVisible (stair_reader1)
        </look>
      </exit>
      <exit alias="south" to="hallway1">
        <inherit name="southdirection" />
        <suffix>to Hallway A</suffix>
      </exit>
    </object>
  </object>
  <command name="cast1">
    <pattern>cast #text#</pattern>
    <unresolved>No such spell.</unresolved>
    <script><![CDATA[
      switch (text) {
        case ("Nano-Aid") {
          if (player.aid = true) {
            healing_amount = 30
            player.mana = player.mana-15
            heal_player (healing_amount)
            msg ("You cast Nano-Aid to repair some of Caleb's surface damage. Handy, but it doesn't take care of the System Damage.")
          }
          else {
            msg ("<i>(I have not recovered the files for this spell yet.)</i> Caleb tells you, <i>(You must recover the spell for me before I can use it.)</i>")
          }
        }
        case ("Nano-Heal") {
          if (player.heal = true) {
            healing_amount = 80
            player.mana = player.mana-35
            heal_player (healing_amount)
            msg ("You cast Nano-Heal and restore a moderate amount of surface damages. Nice, but you still need to repair System Damages separately.")
          }
          else {
            msg ("<i>(I have not recovered the files for this spell yet.)</i> Caleb tells you, <i>(You must recover the spell for me before I can use it.)</i>")
          }
        }
        case ("Nano-Cure") {
          if (player.cure = true) {
            healing_amount = 150
            player.mana = player.mana-50
            heal_player (healing_amount)
            msg ("You cast Nano-Cure and restore a large amount of health. Sweet! Still gotta fix those System Damages, though.")
          }
          else {
            msg ("<i>(I have not recovered the files for this spell yet.)</i> Caleb tells you, <i>(You must recover the spell for me before I can use it.)</i>")
          }
        }
        default {
          msg ("<i>(I told you to be exact. Are you even certain that you are using the right kind of spell? Attack spells are not to be used on myself!)</i> Caleb gripes. Sheesh, touchy, touchy.")
        }
      }
    ]]></script>
  </command>
  <verb name="scan">
    <property>scan</property>
    <pattern>scan #object#</pattern>
    <defaultexpression>"You can't scan " + object.article + "."</defaultexpression>
  </verb>
  <object name="stairwell">
    <inherit name="editor_room" />
    <object name="underground_stairwell">
      <alias>Basement Stairwell</alias>
      <look>The steps lead to a large metal door with a darkened window. A card reader is beside it, like everywhere else in this crazy place.</look>
      <description><![CDATA[<br/>You find yourself standing in front of a large metal door after coming down the stairs. Pushing on it doesn't get you anywhere. There's another card reader beside the door, and you're getting pretty sick of seeing the same machine over and over again.]]></description>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <enter type="script">
        stairscene_shift
      </enter>
      <onexit type="script">
        LockExit (Basement Door)
      </onexit>
      <exit alias="up" to="ground_stairs">
        <inherit name="updirection" />
        <suffix>the stairs to the Second Floor</suffix>
      </exit>
      <object name="basement_reader">
        <inherit name="editor_object" />
        <alias>Basement Card Reader</alias>
        <look>A card reader for the basement.</look>
        <scenery type="boolean">false</scenery>
        <useanything type="script">
          msg ("Doesn't look like the reader will take it. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary" />
      </object>
      <exit name="Basement Door" alias="north" to="basement">
        <inherit name="northdirection" />
        <locked />
        <prefix type="string"></prefix>
        <suffix>to the Underground Level</suffix>
        <lockmessage>The door is locked. There is a card reader beside it with a red light on.</lockmessage>
      </exit>
      <object name="door2">
        <inherit name="editor_object" />
        <scenery />
        <alias>door</alias>
        <look>A thick metal door. Wonder what's behind it?</look>
      </object>
    </object>
    <object name="second_floor_stairwell">
      <inherit name="editor_room" />
      <alias>Second Floor - Stairwell</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <description><![CDATA[<br/>This area has stairs going down and going up. There's a door with a sign that says 'Second Floor' on it. There's also a card reader beside it. So many card readers....]]></description>
      <enter type="script">
        stairscene_shift
      </enter>
      <onexit type="script">
        LockExit (Second Floor Door)
      </onexit>
      <exit alias="down" to="ground_stairs">
        <inherit name="downdirection" />
        <suffix>the stairs to the Ground Floor</suffix>
      </exit>
      <object name="second_floor_reader">
        <inherit name="editor_object" />
        <alias>Second Floor Card Reader</alias>
        <scenery type="boolean">false</scenery>
        <look>A card reader for the door to the second floor.</look>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <useanything type="script">
          msg ("Hmm. Doesn't look like it'll take that. Stubborn card reader.")
        </useanything>
        <useon type="scriptdictionary">
          <item key="aquacard">
            msg ("You try swiping the Aqua Keycard through the reader. There's an error beep and the light stays red. Looks like this isn't the right card to use.")
          </item>
          <item key="greencard">
            UnlockExit (Second Floor Door)
            msg ("You try using the Green Keycard on the reader. There's a soft Beep! and the light turns green. A click sounds as the door unlocks.")
          </item>
        </useon>
      </object>
      <exit name="Second Floor Door" alias="north" to="hallway_A">
        <inherit name="northdirection" />
        <locked />
        <suffix>to the Second Floor</suffix>
        <lockmessage>The door's locked. There's a card reader beside it with a red light.</lockmessage>
      </exit>
      <exit alias="up" to="third_floor_stairwell">
        <inherit name="updirection" />
        <suffix>the stairs to the Third Floor</suffix>
      </exit>
    </object>
    <object name="third_floor_stairwell">
      <inherit name="editor_room" />
      <alias>Third Floor - Stairwell</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <description><![CDATA[<br/>Another flight of stairs, another door and another card reader. You kind of wish you could just smash all the readers and never have to deal with cards ever again. The sign on the door reads 'Third Floor'.]]></description>
      <onexit type="script">
        LockExit (Third Floor Door)
      </onexit>
      <exit alias="down" to="second_floor_stairwell">
        <inherit name="downdirection" />
        <suffix>the stairs to the Second Floor</suffix>
      </exit>
      <object name="third_floor_reader">
        <inherit name="editor_object" />
        <alias>Third Floor Reader</alias>
        <look>The card reader for the third floor. Nothing much else to it.</look>
        <useanything type="script">
          msg ("Looks like the reader won't accept this. Stupid card reader.")
        </useanything>
        <useon type="scriptdictionary">
          <item key="blue_keycard">
            msg ("You swipe the Blue Keycard through the reader. There's a soft 'beep' and the light turns green. Door's unlocked!")
            UnlockExit (Third Floor Door)
          </item>
        </useon>
      </object>
      <exit name="Third Floor Door" alias="north" to="hallway_D">
        <inherit name="northdirection" />
        <locked />
        <lockmessage>The door is locked. Good thing there's a card reader beside it and you have a ton of cards.</lockmessage>
        <suffix>to the Third Floor</suffix>
      </exit>
    </object>
  </object>
  <object name="basement">
    <inherit name="editor_room" />
    <alias>Underground Level</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <prefix>the</prefix>
    <exit alias="south" to="underground_stairwell">
      <inherit name="southdirection" />
    </exit>
  </object>
  <object name="second_floor">
    <inherit name="editor_room" />
    <object name="hallway_A">
      <inherit name="editor_room" />
      <alias>Second Floor - Hallway A</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <description><![CDATA[<br/>The hallway is long and straight, ending in a T-junction at the very end. There are two doors on each side of the hallway, and each one has a card reader next to it. All these readers are so annoying. The stairwell door is in the southern part of the hall. Oddly enough, the elevator doors aren't there.]]></description>
      <firstenter type="script"><![CDATA[
        msg ("<br/>\"Why are there so many card readers? It's getting annoying having to keep track of which card goes where.\" you complain, \"This game needs a better organization system, and maybe some trophies.\"<br/><br/><i>(What are you talking about, " + player.playername + "?)</i> Caleb asks with disbelief in his voice, <i>(Please, remain on task! We must find my missing soul as quickly as possible! If you do not wish to help me locate my possessions and files, I can get them on my own once you have restored my soul.)</i><br/><br/>\"Ah hah!\" you declare triumphantly, pointing at your computer screen and thus making Caleb point at empty air, \"So there <b>is</b> a <color color=\"Green\">secret score system</color> buried in this game! It has something to do with me <color color=\"Blue\">doing things you like</color>! That's why you keep bugging me to follow the storyline!\"<br/><br/><i>(Whatever. Believe what you want, as long as it gets the job done.)</i> he just mutters under his breath.")
      ]]></firstenter>
      <enter type="script">
        EnableTimer (security)
        scenery_shift1
        if (Contains (hallway_A,secguard)) {
          EnableTimer (auto_attack)
          DisableTimer (security)
        }
      </enter>
      <onexit type="script">
        DisableTimer (security)
        if (Contains (hallway_A,secguard)) {
          DisableTimer (auto_attack)
        }
      </onexit>
      <exit alias="south" to="second_floor_stairwell">
        <inherit name="southdirection" />
        <suffix>into the stairwell</suffix>
      </exit>
      <object name="fire_lab">
        <alias>Fire Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <description><![CDATA[<br/>The Fire Lab looks a little smaller than the Earth Lab, but that's probably because of all the metal tables in here. In a corner of the room is a computer desk with a terminal, while another painting hangs on the far wall. Funny, aren't labs supposed to be sterile or something? Wouldn't a painting burn up or get contaminated in a 'Fire' lab? Maybe this game just really wanted to have interesting things to look at sometimes. ]]></description>
        <look type="script">
          msg ("The door to this lab has a black square on it, with the image of a red flame in its center. There is a card reader next to the door.")
          MakeObjectVisible (fire_reader)
        </look>
        <enter type="script">
          scenery_shift
          MakeObjectInvisible (fire_reader)
        </enter>
        <exit alias="west" to="hallway_A">
          <inherit name="westdirection" />
          <suffix>into Hallway A</suffix>
        </exit>
        <object name="compdesk_3">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <contentsprefix>with</contentsprefix>
          <alias>wooden desk</alias>
          <hidechildren type="boolean">false</hidechildren>
          <displayverbs>Look at; Take; Search</displayverbs>
          <look type="script">
            msg ("A dark wooden desk, it's glossy with protective oil coatings and looks pretty expensive. Caleb points out that it's made of black cherry wood, like it means anything. Wood is wood.")
            MakeObjectVisible (firelab_comp)
            MakeObjectVisible (input_4)
          </look>
          <search type="script">
            msg ("You search the desk and find all the drawers locked except one. Lucky!")
            MakeObjectVisible (drawer2)
          </search>
          <object name="drawer2">
            <inherit name="editor_object" />
            <inherit name="container_open" />
            <look>A simple wooden drawer. Nothing much else to it.</look>
            <visible type="boolean">false</visible>
            <alias>drawer</alias>
            <isopen type="boolean">false</isopen>
            <listchildren type="boolean">false</listchildren>
            <listchildrenprefix>It has</listchildrenprefix>
            <closemsg>Out of habit, you close the drawer when you're done.</closemsg>
            <displayverbs>Look at; Open; Close; Search</displayverbs>
            <search type="script">
              if (not Got(blue_keycard)) {
                if (drawer2.isopen) {
                  msg ("Searching the drawer, you find a keycard taped to the underside of it. Somebody wanted to have a really good hiding place for this thing. Oh well, finders keepers!")
                  HelperOpenObject (drawer2)
                  MakeObjectVisible (blue_keycard)
                }
                else {
                  msg ("You can't search a closed drawer.")
                }
              }
              else {
                msg ("Nope, nothing else is taped on, glued on, or otherwise hidden anywhere outside of the drawer.")
              }
            </search>
            <onclose type="script">
              firsttime {
                msg ("Caleb makes a pleased little humming sound and it makes you feel oddly proud of yourself.")
                IncScore ("good guy greg", 20)
                MakeObjectInvisible (drawer2)
              }
            </onclose>
            <object name="blue_keycard">
              <inherit name="editor_object" />
              <look>A blue-colored keycard with a magnetic strip. It says 'Level 3' on it.</look>
              <alias>Blue Keycard</alias>
              <visible type="boolean">false</visible>
              <take />
              <takemsg>You take the Blue Keycard. It might come in handy.</takemsg>
              <dropmsg>You toss the Blue Keycard away. Don't need that anymore.</dropmsg>
              <alt>blue card</alt>
              <usedefaultprefix />
              <prefix>the</prefix>
            </object>
          </object>
          <object name="firelab_comp">
            <inherit name="editor_object" />
            <alt>terminal; comp; PC</alt>
            <visible type="boolean">false</visible>
            <alias>computer</alias>
            <look type="script"><![CDATA[
              if (GetBoolean(firelab_comp, "active")) {
                msg ("The screen has a new message on display after Caleb finished ransacking it.<br/><br/><i>\"Hello, 'Caleb'.\"</i> it reads, <i>\"I know it's not really you running around this building. I have enough of your system files to understand how you behave and your movements, your attacks, they are all so pitiful and amateurish.\"</i><br/><br/>Okay, you don't know who wrote this, but they've just jumped to the top of your 'Characters to Hunt Down and Beat Horribly' list.<br/><br/><i>\"Scurry around all you like, it doesn't matter. I will finish assimilating the rest of your files, and when I'm done... I will <b>end</b> you. You, and all the little inferior humans infesting this planet.\"</i> Yeah, this guy is <b>so</b> gonna get it once you figure out where he's hiding.")
              }
              else {
                msg ("The computer screen is dark and it doesn't respond to anything you do to the keyboard or mouse.")
              }
            ]]></look>
            <give type="scriptdictionary">
              <item key="startup_disc"><![CDATA[
                msg ("The computer takes the disc in. There's a faint hum and the screen blinks on, revealing the normal desktop.<br/><br/>\"Okay, do your robot thing on it now.\" you remark with a grin.<br/><br/><i>(Very funny, " + player.playername + ". You instill me with such confidence that I will get my soul back.)</i> Caleb returns sarcastically. Maybe he'll get a sense of humor once you get that back to him?")
                SetObjectFlagOn (firelab_comp, "active")
              ]]></item>
            </give>
          </object>
          <object name="input_4">
            <inherit name="editor_object" />
            <visible type="boolean">false</visible>
            <alias>connector's input pad</alias>
            <displayverbs>Look at; Take; Use</displayverbs>
            <look type="script"><![CDATA[
              msg ("A flat screen pad that Caleb can <color color=\"Blue\">use</color> to access computers directly.")
            ]]></look>
            <use type="script"><![CDATA[
              if (GetBoolean(firelab_comp, "active")) {
                msg ("You put Caleb's hand on the pad and the files get sifted through at high speed as usual. Caleb makes a pleased sound after a moment.<br/><br/><i>(I can use contractions now! Oh, that's nice. I was getting annoyed with having to say everything without them.)</i> he sighs happily, <i>(It's not as nice as having my soul back, -which I'm really looking forward to regaining, hint, hint- but it'll do for now.)</i> He pauses for a moment, then adds. <i>(Oh, and there's a message on the screen which looked interesting. I didn't really read it, but you can if you want. Ah, lovely contractions!)</i>")
              }
              else {
                msg ("You put Caleb's hand on the pad, but the computer screen remains blank. \"Um, why aren't you doing your robot reading thing?\" you finally ask aloud.<br/><br/><i>(This computer will not run without a disc in the drive. Someone has set it up to prevent access without that special disc.)</i> he replies. Darn. Better keep an eye out for that disc, then.")
              }
            ]]></use>
          </object>
        </object>
        <object name="metal_table2">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <alias>examining table</alias>
          <look>One of several long metal examining tables in the lab. This one was closest to you when you came in, so it automatically became the most interesting of the bunch. There are some Bunsen burners on top and cabinet doors along the bottom.</look>
          <nokeymessage>The doors are locked. You need a key.</nokeymessage>
          <contentsprefix>containing</contentsprefix>
          <hidechildren />
          <openmsg>You open the cabinet doors under the table.</openmsg>
          <closemsg>You close the cabinet doors.</closemsg>
          <autoopen type="boolean">false</autoopen>
          <object name="bunsen_burners">
            <inherit name="editor_object" />
            <inherit name="switchable" />
            <alias>Bunsen burners</alias>
            <look>A small device that can be switched on to produce a flame, it's connected to the table through a gas line feeding into it. There are three of them on the table.</look>
            <alt>Bunsen burner; burner; burners</alt>
            <switchonmsg>You switch on one of the burners. A bright blue flame shoots out of the nozzle.</switchonmsg>
            <switchoffmsg>You switch off the burner.</switchoffmsg>
            <switchedondesc>A burner's flame is lit.</switchedondesc>
            <switchedoffdesc>The burners are currently off.</switchedoffdesc>
            <onswitchoff type="script">
              firsttime {
                msg ("Caleb gives a little hum of approval. For some reason, that makes you feel pretty good.")
                IncScore ("fire prevention", 25)
              }
            </onswitchoff>
          </object>
          <object name="cabinet">
            <inherit name="editor_object" />
            <inherit name="container_closed" />
            <inherit name="container_lockable" />
            <openmsg>You open the cabinet doors under the table.</openmsg>
            <closemsg>You close the doors.</closemsg>
            <autoopen type="boolean">false</autoopen>
            <nokeymessage>You don't have the key to this.</nokeymessage>
            <look>A simple cabinet built into the examination table.</look>
            <key type="object">cabinet_key</key>
            <onclose type="script">
              firsttime {
                msg ("Caleb gives a little hum of approval. He seems to like it when you close things after you're done.")
                IncScore ("close cabinet", 15)
              }
            </onclose>
            <object name="travel_bag">
              <inherit name="editor_object" />
              <inherit name="container_open" />
              <alias>travel pack</alias>
              <look><![CDATA[A rather large, beaten-up looking leather bag with a long strap and numerous stitches. It looks positively <i>ancient</i> and you say so to Caleb. <br/><br/><i>(Of course it is.)</i> Caleb returns with a faint touch of pride in his voice,<i> (That bag's been with me since I was first activated. I wasn't carrying all of my possessions at the time I was abducted, so only a few items were taken from it. This will give us extra inventory space.)</i> <br/><br/>"The clasp looks new." you point out suspiciously. <br/><br/><i>(Of course it does. I replaced it before I was kidnapped.)</i> Caleb returns with equal pride. You just roll your eyes at him. ]]></look>
              <take />
              <drop type="boolean">false</drop>
              <takemsg>You pick up the travel pack and sling it over Caleb's head. The strap settles on his shoulder and the bag rests against his hip. It looks a little funny but you don't mention that to him.</takemsg>
              <listchildren />
              <listchildrenprefix>It currently has</listchildrenprefix>
              <isopen type="boolean">false</isopen>
              <openmsg>You open the flap of the bag and peek inside.</openmsg>
              <closemsg>You close the flap and secure the clasp.</closemsg>
              <alt>satchel; tote; canvas bag; bag; pack</alt>
              <inventoryverbs>Look at; Use</inventoryverbs>
              <ontake type="script">
                firsttime {
                  msg ("Caleb seems quite pleased with the recovery of his bag, if the happy little humming in your ear is any indication.")
                  IncScore ("pack rat", 80)
                }
              </ontake>
            </object>
          </object>
        </object>
        <object name="demon_painting">
          <inherit name="editor_object" />
          <look>A strange, abstract painting of a terrible creature standing on the top of a dark tower. It looks big and bulky, and it's holding a tiny figure of a person tightly in one massive fist. Looking at it makes you shiver a little. Whatever kind of painting this is, it's creepy.</look>
          <alias>strange painting</alias>
        </object>
      </object>
      <object name="fire_reader">
        <inherit name="editor_object" />
        <alias>Fire Keycard Reader</alias>
        <scenery type="boolean">false</scenery>
        <look>A card reader. This one has a little sticker on it that looks like a hot dog on a stick. Someone around here has a sense of humor....</look>
        <visible type="boolean">false</visible>
        <useanything type="script">
          msg ("Doesn't look like the reader will accept this. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary">
          <item key="fire_keycard">
            msg ("You swipe the Fire Keycard through the reader. There's a soft beep and the light turns green.")
            UnlockExit (Fire Door)
          </item>
        </useon>
      </object>
      <object name="water_lab">
        <alias>Water Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <look type="script">
          msg ("The door to a lab has a black square on it, with the image of an ocean wave in the center.")
          MakeObjectVisible (water_reader)
        </look>
        <enter type="script">
          scenery_shift
          MakeObjectInvisible (water_reader)
        </enter>
        <exit alias="east" to="hallway_A">
          <inherit name="eastdirection" />
          <suffix>into Hallway A</suffix>
        </exit>
        <object name="comp_desk5">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <alias>wooden desk</alias>
          <look type="script">
            msg ("A dark wooden desk, it's glossy with protective oil coatings and looks pretty expensive. Caleb points out that it's made of black cherry wood, like it means anything. Wood is wood.")
            MakeObjectVisible (input_6)
            MakeObjectVisible (water_comp)
          </look>
          <object name="water_comp">
            <inherit name="editor_object" />
            <visible type="boolean">false</visible>
            <alias>computer</alias>
            <look type="script"><![CDATA[
              firsttime {
                msg ("There's some kind of document on the screen along with a picture of a water bottle. There is also a small box of data in a corner. It doesn't make any sense to you, but Caleb seems to understand it.<br/><br/><i>(Ah, those are instructions for using that machine on the other table.)</i> he tells you, <i>(Now I can use the input pad to tell it to make liquid mana. <color color=\"Blue\">Read</color> the document for more information.)</i>")
                distiller.active = true
              }
              otherwise {
                msg ("There's a document on the screen with a picture of a water bottle and the instructions for using the machine on the examining table.")
              }
            ]]></look>
            <read type="script"><![CDATA[
              firsttime {
                msg ("You read the document on the screen.<br/><br/><i>\"MasaTech Research has taken notes on the information found in the Guardian Angel's possession, identifying small fragments of some iridescent material as <color color=\"Blue\">mana shards</color>. We have found a way to liquify these fragments into a sparkling clear liquid that, when ingested, greatly enhances a person's strength, stamina, and can even heal injuries. MasaTech plans on obtaining rights and patents to this substance for the new medical technologies field.<br/><br/>Several bottles of this 'liquid mana' are currently stored in the lounge for further testing on human subjects.\"</i><br/><br/>\"I can't believe this! These jerks are stealing your stuff and trying to make money off it!\" you exclaim. Typical evil corporation....<br/><br/><i>(Liquid mana... ah! We can use that to refill my <color color=\"Blue\">TP</color>!)</i> Caleb replies, <i>(We should get a bottle for ourselves.)</i>")
                SetObjectFlagOn (bottles, "restore")
              }
              otherwise {
                msg ("You read the document on the screen.<br/><br/><i>\"MasaTech Research has taken notes on the information found in the Guardian Angel's possession, identifying small fragments of some iridescent material as <color color=\"Blue\">mana shards</color>. We have found a way to liquify these fragments into a sparkling clear liquid that, when ingested, greatly enhances a person's strength, stamina, and can even heal injuries. MasaTech plans on obtaining rights and patents to this substance for the new medical technologies field.<br/><br/>Several bottles of this 'liquid mana' are currently stored in the lounge for further testing on human subjects.\"</i><br/><br/>Yep. Still evil.")
              }
            ]]></read>
          </object>
          <object name="input_6">
            <inherit name="editor_object" />
            <visible type="boolean">false</visible>
            <alias>input pad</alias>
            <look type="string"></look>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>an</prefix>
            <use type="script"><![CDATA[
              if (distiller.active = true) {
                if (GetBoolean(distiller, "loaded")) {
                  msg ("You place Caleb's hand on the pad and let him start up the machine on the table. It grinds and hums and wheezes, then a clear liquid bubbles through the tubes into a small tank on one end of the machine. Cool.")
                  distiller.distilled = true
                  SetObjectFlagOff (distiller, "loaded")
                }
                else {
                  msg ("<i>(There is nothing in the machine to liquefy.)</i> Caleb tells you, <i>(So there is no point to activating it.)</i>")
                }
              }
              else {
                msg ("<i>\"File Type: <color color=\"Blue\">Magic</color><br/>Magic Type: <color color=\"Blue\">Attack</color><br/>File Name: <color color=\"Red\">Hydro-Wave</color><br/><br/>Appears to be some kind of weak attack spell. Similar to a stronger spell that the Guardian Angel has used, it generates a small flood of water that slams into the target. Each use takes a small amount of magic power. The formula is calculated as thus:<br/><br/><color color=\"Red\">Cast Hydro-Wave on Target - cost 20 TP - does 40 HP of damage to the target</color>.\"</i>")
              }
            ]]></use>
          </object>
        </object>
        <object name="metal_table6">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <alias>examining table</alias>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>an</prefix>
          <look>A metal examining table like all the others you've seen.</look>
          <hidechildren />
          <object name="distiller">
            <inherit name="editor_object" />
            <alias>mana steeping machine</alias>
            <active type="boolean">false</active>
            <distilled type="boolean">false</distilled>
            <look type="script">
              if (distiller.active = true) {
                msg ("It's a machine that can turn mana shards into liquid mana. That seems not only cool, but useful too. With this, you can refill your water bottle as long as you can find mana shards.")
              }
              else {
                msg ("It's some kind of machine. There's a part on one end where there's space to put something inside and a bunch of tubes and other science-y things that all ends at a nozzle. Some part of your brain points out helpfully that it probably would have helped if you bothered to pay attention in science class.")
              }
            </look>
            <giveanything type="script">
              msg ("That doesn't work out.")
            </giveanything>
            <give type="scriptdictionary">
              <item key="mana_shard">
                msg ("You put the mana shard into the distiller.")
                RemoveObject (mana_shard)
                SetObjectFlagOn (distiller, "loaded")
              </item>
            </give>
            <useon type="scriptdictionary">
              <item key="bottles">
                if (bottles.empty = true) {
                  if (distiller.distilled = true) {
                    msg ("You turn the nozzle open and refill your bottle with liquid mana.")
                    distiller.distilled = false
                    bottles.empty = false
                  }
                  else {
                    msg ("There's no liquid mana to fill the bottle with.")
                  }
                }
                else {
                  msg ("You still have some liquid mana left in the bottle. You don't want to waste the new batch, do you? If you try to fill this, it will spill over.")
                }
              </item>
            </useon>
          </object>
        </object>
      </object>
      <object name="water_reader">
        <inherit name="editor_object" />
        <alias>Water Keycard Reader</alias>
        <scenery type="boolean">false</scenery>
        <look>A card reader. Nothing much to it.</look>
        <visible type="boolean">false</visible>
      </object>
      <object name="earth_lab">
        <alias>Earth Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <description><![CDATA[<br/>The Earth Lab seems to be little different from all the other lab rooms you've been in so far. There's a desk with a computer on it against one wall, and another tall mirror in a corner. It seems to be a common thing to see. There is also a tall potted plant in another corner, which is a nice change of pace. You wonder if the people who worked in this lab wanted something to keep from being bored out of their heads while working.]]></description>
        <look type="script">
          msg ("The door to this lab has a black square on it, with the image of a yellow rock in the center.")
          MakeObjectVisible (earth_reader)
        </look>
        <enter type="script">
          scenery_shift
          MakeObjectInvisible (earth_reader)
        </enter>
        <exit alias="west" to="hallway_A">
          <inherit name="westdirection" />
          <suffix>into Hallway A</suffix>
        </exit>
        <object name="compdesk_2">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <alias>computer desk</alias>
          <usedefaultprefix />
          <prefix type="string"></prefix>
          <look>A black and grey desk with a computer terminal on it. There are some pen holders but otherwise, it's completely bare.</look>
          <hidechildren type="boolean">false</hidechildren>
          <contentsprefix>with</contentsprefix>
          <object name="earthlab_comp">
            <inherit name="editor_object" />
            <alias>computer terminal</alias>
            <contentsprefix>with</contentsprefix>
            <alt>terminal; comp; PC</alt>
            <look type="script"><![CDATA[
              if (GetBoolean(earthlab_comp, "atkspell")) {
                msg ("You look at the computer to see the file Caleb left open for you to read.<br/><br/><i>\"File Type: <color color=\"Blue\">Magic</color><br/>Magic Type: <color color=\"Blue\">Attack</color><br/>File Name: <color color=\"Red\">Fireball</color><br/><br/>Appears to be a weak attack spell. Sets an enemy target on fire to cause damage. Each use takes a small amount of magic power. The formula is calculated as thus:<br/><br/><color color=\"Red\">Cast Fireball on Target - cost 10 TP - damages for 25</color>.\"</i><br/><br/><i>(Like before, the spells are voice-activated. Just <color color=\"Red\">Cast Fireball</color> to attack an enemy with the spell.)</i> Caleb assures you with that same even tone as always, <i>(However, you must <color color=\"Red\">cast it on an enemy target</color> or it will not work. You cannot just expect the magic to know exactly what you want it to do in combat.)</i><br/><br/>\"Can I use it to set random stuff on fire?\" you ask hopefully.<br/><br/><i>(No.)</i> Aw, spoilsport.")
              }
              else {
                msg ("A desktop computer with flatscreen monitor, mouse and keyboard. Checking it out a little closer, you spot a flat panel plugged into the computer with an LCD screen in it. Looks like more stuff to install into your android buddy....")
              }
            ]]></look>
          </object>
          <object name="input_3">
            <inherit name="editor_object" />
            <visible />
            <scenery type="boolean">false</scenery>
            <alias>connector's input pad</alias>
            <displayverbs>Look at; Take; Use</displayverbs>
            <look type="script"><![CDATA[
              msg ("A flat screen pad that Caleb can <color color=\"Blue\">use</color> to access computers directly.")
            ]]></look>
            <use type="script"><![CDATA[
              firsttime {
                msg ("You press Caleb's hand against the pad and watch as numerous files get sifted through. Finally, the android gives a surprised little hum. <i>(They had one of my low level attack spells here. I have downloaded the data and opened the file for you to read on the screen.)</i> he remarks.<br/><br/>Finally, some <color color=\"Red\">attack magic</color>!")
                SetObjectFlagOn (earthlab_comp, "atkspell")
                player.ifrit = true
              }
              otherwise {
                msg ("There's nothing else Caleb can find after searching the files again. Just the same stuff about his attack magic.")
              }
            ]]></use>
          </object>
        </object>
        <object name="plant">
          <inherit name="editor_object" />
          <inherit name="container_open" />
          <alias>decorative plant</alias>
          <look>A leafy green plant in a dark red pot. It adds a little color to the stark whiteness of the room.</look>
          <open type="boolean">false</open>
          <close type="boolean">false</close>
          <hidechildren type="boolean">false</hidechildren>
          <listchildren />
          <listchildrenprefix>It has</listchildrenprefix>
          <displayverbs>Look at; Take</displayverbs>
          <useon type="scriptdictionary">
            <item key="flathead screwdriver">
              msg ("You use the screwdriver to dig around the potted plant at random. Eventually, it hits something buried in the dirt and you pry it up with the tool.")
              MakeObjectVisible (mana_shard)
            </item>
          </useon>
          <object name="mana_shard">
            <inherit name="editor_object" />
            <visible type="boolean">false</visible>
            <scenery type="boolean">false</scenery>
            <alias>mana shard</alias>
            <look>A little shard of stone that glitters and sparkles, like it has its own light source. Very pretty.</look>
            <take />
            <takemsg>You take the mana shard.</takemsg>
            <dropmsg>You throw the shard away.</dropmsg>
          </object>
        </object>
        <object name="mirror2">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <alias>mirror</alias>
          <displayverbs>Look at; Take; Search; Hit</displayverbs>
          <listchildren type="boolean">false</listchildren>
          <hidechildren type="boolean">false</hidechildren>
          <close type="boolean">false</close>
          <open type="boolean">false</open>
          <contentsprefix>with</contentsprefix>
          <look type="script"><![CDATA[
            if (not ListContains(ScopeVisible(), eternalpin)) {
              if (mirror1.firstglance = true) {
                msg ("Looking into the mirror presents you with a reflection of Caleb, the android you're controlling in this game. He seems kind of pretty for being male; pale skin, bright red hair tied back into a very long ponytail, a green and white butler's outfit, green eyes, neutral expression, and a glowing pin on his lapel. Huh, you hadn't noticed that before.<br/><br/><i>(I hope you don't plan on admiring me all day, " + player.playername + "; I would very much like to be restored as soon as possible.)</i> Caleb's voice replies curtly. <br/><br/>\"Yeah, yeah. Don't get your wires in a twist.\" you mutter. Caleb simply huffs indignantly.")
                MakeObjectVisible (eternalpin)
                mirror1.firstglance = false
              }
              else {
                msg ("A long rectangular mirror. Looking into it gives you Caleb's reflection. It's kind of scary how responsive he is to your every thought.")
              }
            }
            else if (mirror2.alias = "broken mirror") {
              msg ("A long rectangular backing with shards of broken mirror in it. The rest of the pieces are scattered around it. You really hope you don't get bad luck for breaking it.")
            }
            else {
              msg ("A long rectangular mirror. Looking into it gives you Caleb's reflection. It's kind of scary how responsive he is to your every thought.")
            }
          ]]></look>
          <search type="script"><![CDATA[
            if (not Got(fire_keycard)) {
              msg ("You search the mirror on a whim and find a brightly colored card stuck to the back of the mirror.")
              MakeObjectVisible (fire_keycard)
            }
            else {
              msg ("You search the mirror, but nothing else can be found. Well, there are some <color color=\"Green\">scratches</color> there, but that's all.")
            }
          ]]></search>
          <hit type="scriptdictionary">
            <item key="hammer"><![CDATA[
              firsttime {
                msg ("You smash the mirror with the hammer. As the glass pieces fall out, you find a piece of paper taped to the backing.<br/><br/><i>(Ah! Why did you do that?!)</i> Caleb exclaims at the sight, <i>(Now there is glass everywhere and I do <b>not</b> want to be responsible for this mess!)</i>")
                MakeObjectVisible (paper_clue)
                mirror2.alias = "broken mirror"
                IncScore ("bad luck chuck", -10)
              }
              otherwise {
                msg ("It's already broken.")
              }
            ]]></item>
          </hit>
          <useon type="scriptdictionary">
            <item key="paper_clue">
              msg ("You tape the paper over the scratches on the back of the mirror.")
              MoveObject (paper_clue, player.parent)
              SetObjectFlagOn (paper_clue, "mirror")
            </item>
          </useon>
          <object name="paper_clue">
            <inherit name="editor_object" />
            <visible type="boolean">false</visible>
            <alias>note</alias>
            <usedefaultprefix />
            <dropmsg>You throw the paper away.</dropmsg>
            <look type="script">
              if (GetBoolean(paper_clue, "numbered")) {
                msg ("A torn piece of paper with some red writing on it. There's a rubbing of numbers on the other side that says '7125'.")
              }
              else {
                msg ("A torn piece of paper with some red writing on it.")
              }
            </look>
            <take type="script">
              if (GetBoolean(paper_clue, "mirror")) {
                msg ("You take the paper off the scratched part of the mirror.")
                MoveObject (paper_clue, player)
                SetObjectFlagOff (paper_clue, "mirror")
              }
              else {
                msg ("You take the paper from the mirror's backing. Might be useful later, who knows?")
                MoveObject (paper_clue, player)
              }
            </take>
            <ondrop type="script">
              firsttime {
                msg ("Caleb huffs in annoyance when you toss the paper. Apparently, he doesn't like littering.")
                IncScore ("litterbug", -25)
              }
            </ondrop>
            <read type="script"><![CDATA[
              msg ("You look at the note. It says <i>'Don't trust the angel'</i>, and it looks like... this was written in <b>blood</b>....<br/><br/>\"Um....\" you mutter uncertainly and Caleb sighs in exasperation.<br/><br/><i>(Please tell me you do not believe this pertains to me.)</i> he remarks dryly, <i>(Do you think this was written about <b>me</b>?)</i>")
              get input {
                if (result="yes") {
                  firsttime {
                    msg ("Caleb doesn't say anything, but you get the strangest feeling that you've hurt his feelings. Things are awkward for a bit and you aren't sure what to do next.<br/><br/><i>(Let us just keep going.)</i> the android finally mutters, a little coldly. Brr, guess that wasn't the best answer.")
                    IncScore ("lack of trust", -60)
                  }
                  otherwise {
                    msg ("<i>(Stop reading the damn note.)</i> Caleb growls. Ouch.")
                  }
                }
                else if (result="no") {
                  msg ("<i>(Ah, th-thank you.)</i> Caleb stammers in surprise, <i>(I must admit, I thought you would have said otherwise. Thank you, " + player.playername + ", for believing in me.)</i><br/><br/>\"If we can't trust one another, how can we get through this together?\" you return with a shrug, \"But if this note isn't about you, then what other angel is it talking about?\"<br/><br/><i>(I do not know, but it worries me.)</i> Caleb admits quietly.")
                  IncScore ("strong bond", 50)
                }
                else {
                  msg ("<i>(That made no sense at all.)</i> Caleb muttered. You laugh nervously at your attempt to dodge the question. <i>(Never mind. Let us continue recovering my files.)</i>")
                }
              }
            ]]></read>
          </object>
        </object>
        <object name="fire_keycard">
          <inherit name="editor_object" />
          <visible type="boolean">false</visible>
          <alias>Fire Keycard</alias>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>the</prefix>
          <look>An orange keycard with a magnetic strip and the image of a red and yellow flame. It says 'Fire' on it.</look>
          <take />
          <takemsg>You take the Fire Keycard. This should come in handy.</takemsg>
          <dropmsg>You toss the Fire Keycard away. Don't need that anymore.</dropmsg>
          <alt>fire card</alt>
        </object>
      </object>
      <object name="earth_reader">
        <inherit name="editor_object" />
        <alias>Earth Keycard Reader</alias>
        <scenery type="boolean">false</scenery>
        <look>A card reader. Nothing much to it....</look>
        <visible type="boolean">false</visible>
        <search type="script"><![CDATA[
          msg ("Someone scratched their initials into the side of the reader. <color color=\"Blue\">A.W.D.</color> Huh. What a weird Easter Egg.")
        ]]></search>
        <useanything type="script">
          msg ("Doesn't look like the reader will take this. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary">
          <item key="earth_keycard">
            UnlockExit (earth door)
            msg ("You slide the Earth Keycard through the reader. It gives a soft beep and the light turns green.")
          </item>
        </useon>
      </object>
      <object name="wind_lab">
        <alias>Wind Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <look type="script">
          msg ("The door to this lab has a black square on it, with a few lines that you suppose means 'wind' etched in the center.")
          MakeObjectVisible (wind_reader)
        </look>
        <enter type="script">
          scenery_shift
          MakeObjectInvisible (wind_reader)
        </enter>
        <exit alias="east" to="hallway_A">
          <inherit name="eastdirection" />
          <suffix>into Hallway A</suffix>
        </exit>
      </object>
      <object name="wind_reader">
        <inherit name="editor_object" />
        <scenery type="boolean">false</scenery>
        <alias>Wind Keycard Reader</alias>
        <look>A card reader. Nothing much to it.</look>
        <visible type="boolean">false</visible>
      </object>
      <exit name="Fire Door" alias="east" to="fire_lab">
        <inherit name="eastdirection" />
        <locked />
        <lockmessage>The door is locked. Looks like you'll be looking for another keycard.</lockmessage>
        <suffix>to the Fire Lab</suffix>
        <look type="script">
          msg ("The door to the Fire Lab has a card reader beside it.")
          MakeObjectVisible (fire_reader)
        </look>
      </exit>
      <exit name="water door" alias="west" to="water_lab">
        <inherit name="westdirection" />
        <locked />
        <lockmessage>The door is locked. Looks like you need a keycard.</lockmessage>
        <suffix>to the Water Lab</suffix>
      </exit>
      <exit name="wind door" alias="southwest" to="wind_lab">
        <inherit name="southwestdirection" />
        <locked />
        <lockmessage>The door is locked. Better find a keycard.</lockmessage>
        <suffix>to the Wind Lab</suffix>
      </exit>
      <exit name="earth door" alias="southeast" to="earth_lab">
        <inherit name="southeastdirection" />
        <locked />
        <lockmessage>The door is locked. Looks like you have another keycard to find.</lockmessage>
        <suffix>to the Earth Lab</suffix>
        <look type="script">
          msg ("The door to the Earth Lab. Hey, look, there's a card reader right next to it.")
          MakeObjectVisible (earth_reader)
        </look>
      </exit>
      <exit alias="north" to="second_floor_junction">
        <inherit name="northdirection" />
        <suffix>to the T-Junction</suffix>
      </exit>
    </object>
    <object name="second_floor_junction">
      <alias>T-Junction</alias>
      <scenery />
      <description><![CDATA[<br/>You stand in the junction at the end of Hallway A. There are only three directions to go from here.]]></description>
      <enter type="script">
        EnableTimer (security)
        scenery_shift1
        if (Contains (second_floor_junction,secguard)) {
          EnableTimer (auto_attack)
          DisableTimer (security)
        }
      </enter>
      <onexit type="script">
        DisableTimer (security)
        if (Contains (second_floor_junction,secguard)) {
          DisableTimer (auto_attack)
        }
      </onexit>
      <exit alias="south" to="hallway_A">
        <inherit name="southdirection" />
        <suffix>to Hallway A</suffix>
      </exit>
      <exit alias="west" to="hallway_B">
        <inherit name="westdirection" />
        <suffix>to Hallway B</suffix>
      </exit>
      <exit alias="east" to="hallway_C">
        <inherit name="eastdirection" />
        <suffix>to Hallway C</suffix>
      </exit>
    </object>
    <object name="hallway_B">
      <inherit name="editor_room" />
      <alias>Second Floor - Hallway B</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <description><![CDATA[<br/>This short hallway has three rooms, but only one of them has a card reader beside it. One door is on the south side of the hall. The two doors without readers are along the northern side. At the end of the hallway is a dead end. Cameras are still mounted all over the place, so it's probably a good idea not to stand around forever.]]></description>
      <enter type="script">
        EnableTimer (security)
        scenery_shift1
        if (Contains (hallway_B,secguard)) {
          EnableTimer (auto_attack)
          DisableTimer (security)
        }
      </enter>
      <onexit type="script">
        DisableTimer (security)
        if (Contains (hallway_B,secguard)) {
          DisableTimer (auto_attack)
        }
      </onexit>
      <firstenter type="script"><![CDATA[
        msg ("<br/><i>(Do you remember when I spoke of a friend in green?)</i> Caleb asks suddenly. You nod your head while watching the cameras moving. <i>(I am not sure why I said that. In the memories I have access to without my soul, there is no mention of a friend in green. My creator wore green, but I thought of him as a father, not a friend.)</i><br/><br/>\"Maybe that's something in the files you can't read yet. Say, how far are you in fixing those damaged ones?\" you return.<br/><br/><i>(Almost done. Once they have been repaired, I may be able to shed light on what happened to me. I hope.)</i> he mumbles. This game is really good; you really feel for the guy when he says that.")
      ]]></firstenter>
      <exit alias="east" to="second_floor_junction">
        <inherit name="eastdirection" />
        <suffix>to the T-Junction</suffix>
      </exit>
      <object name="plasma_lab">
        <alias>Lightning Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <alt>plasma lab</alt>
        <look type="script">
          msg ("The door to this lab has a black square on it, with the image of a lightning bolt in the center. Caleb whimpers a little at the sight of it. There's a card reader beside the door.")
          MakeObjectVisible (plasma_reader)
        </look>
        <enter type="script">
          scenery_shift
          MakeObjectInvisible (plasma_reader)
        </enter>
        <exit alias="east" to="hallway_B">
          <inherit name="eastdirection" />
          <suffix>to Hallway B</suffix>
        </exit>
      </object>
      <object name="plasma_reader">
        <inherit name="editor_object" />
        <scenery type="boolean">false</scenery>
        <look>A card reader. Nothing much to it.</look>
        <alias>Lightning Keycard Reader</alias>
        <alt>lightning reader; plasma reader</alt>
        <visible type="boolean">false</visible>
      </object>
      <object name="janitor_closet">
        <look>The door to this room has the picture of a man with a mop and bucket. Hmm, not that hard to figure out what this could be then. There doesn't appear to be a card reader beside it, so it should be easy to get into.</look>
        <alias>Janitor's Closet</alias>
        <description><![CDATA[<br/>The janitor's closet is actually kind of roomy. There are many shelves stacked with cleaning supplies and tools. Jugs of chemicals of varying colors and covered in bright warning labels line the walls, with enough mops, brooms, buckets and towels to arm an entire cleaning crew.]]></description>
        <enter type="script">
          scenery_shift
        </enter>
        <object name="janitor_shelf">
          <inherit name="editor_object" />
          <inherit name="plural" />
          <inherit name="container_open" />
          <alias>shelves</alias>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>a lot of</prefix>
          <contentsprefix type="string"></contentsprefix>
          <close type="boolean">false</close>
          <open type="boolean">false</open>
          <hidechildren type="boolean">false</hidechildren>
          <displayverbs>Look at; Take; Search</displayverbs>
          <look type="script">
            msg ("A wall of shelves full of jugs of chemicals, cleaning supplies, tools and towels. That's a whole lot of stuff to clean this building with, though Caleb keeps muttering that he got along fine with just soap and water. Seriously, who builds a robot angel, gives him superhuman strength and magic powers, and then programs him to clean house?")
            janitor_chemicals.scenery = false
          </look>
          <search type="script">
            msg ("You search the shelves out of curiosity and find a small keyring with a key on it hidden behind one of the containers of cleaning fluid.")
            MakeObjectVisible (janitor_keyring)
          </search>
          <object name="janitor_chemicals">
            <inherit name="editor_object" />
            <inherit name="plural" />
            <alias>chemical containers</alias>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>several</prefix>
            <look>Several jugs and containers of industrial strength cleaning chemicals. There are many bright hazard warning labels slapped all over them. It kind of makes you want to see if you can make a bonfire with them. Caleb doesn't seem to like them very much, muttering how anyone could live in a place that keeps getting coated with poisonous things is beyond his understanding.</look>
            <alt>cleaners; cleansers; chemicals</alt>
            <scenery />
          </object>
          <object name="janitor_keyring">
            <inherit name="editor_object" />
            <alias>spare key</alias>
            <usedefaultprefix />
            <scenery type="boolean">false</scenery>
            <prefix type="string"></prefix>
            <look>A small key on a ring with the word 'Spare' engraved on it. It must be a copy of one of the janitor's keys, but what does it open?</look>
            <take />
            <takemsg>For lack of anything else to do, and because keys mean doors that need opening, you pocket the key.</takemsg>
            <dropmsg>Well, this might not be as handy as you thought. You toss the key away.</dropmsg>
            <visible type="boolean">false</visible>
            <alt>keyring</alt>
          </object>
        </object>
        <object name="janitor_mops">
          <inherit name="editor_object" />
          <inherit name="plural" />
          <inherit name="container_open" />
          <alias>mops</alias>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>a row of</prefix>
          <displayverbs>Look at; Take; Search</displayverbs>
          <open type="boolean">false</open>
          <close type="boolean">false</close>
          <hidechildren type="boolean">false</hidechildren>
          <look type="script">
            msg ("Several mops all lined up in a neat row next to some buckets and brooms.")
            janitor_buckets.scenery = False
            janitor_brooms.scenery = False
          </look>
          <search type="script">
            msg ("One of these mops looks new. Caleb makes a little pleased sound at the sight of it. Weird robot....")
            MakeObjectVisible (weapon_mop)
          </search>
          <object name="weapon_mop">
            <inherit name="editor_object" />
            <inherit name="weapon" />
            <alias>dry mop</alias>
            <usedefaultprefix />
            <prefix>a</prefix>
            <scenery type="boolean">false</scenery>
            <look>A dry mop that looks like it hasn't been used at all yet. Caleb seems to like it.</look>
            <dropmsg>You set the mop against the wall and leave it there. Maybe a security guard will trip over it.</dropmsg>
            <atk type="int">10</atk>
            <visible type="boolean">false</visible>
            <inventoryverbs>Look at; Use; Equip; Drop</inventoryverbs>
            <take type="script"><![CDATA[
              if (Got(weapon_broom)) {
                msg ("<i>(As much as I like mops, we are already carrying a two-handed weapon. We will need to drop the one we have first before we can take this one.)</i> Caleb tells you.")
              }
              else if (Got(toolbox)) {
                msg ("<i>(I would very much like to take this item, but we have one hand occupied with carrying the toolbox. This would be easier if I had my <color color=\"Blue\">travel bag</color>.)</i> Caleb sighs wistfully.")
              }
              else if (baton.equipped = true) {
                msg ("<i>(I would very much like to take this item, but we have one hand occupied with wielding the baton. If you want to exchange weapons, you will have to remove the baton.)</i> Caleb tells you.")
              }
              else if (taser.equipped = true) {
                msg ("<i>(I would very much like to take this item, but we have one hand occupied with wielding the taser. If you want to exchange weapons, you will have to remove the taser.)</i> Caleb tells you.")
              }
              else {
                msg ("This looks like it might dish out a few good whacks to some security mooks. You grab it and Caleb gives a happy little hum. You just roll your eyes at the sound, but it does give you a little smile.")
                MoveObject (weapon_mop, player)
                IncScore ("mopping up mooks", 30)
              }
            ]]></take>
            <ondrop type="script">
              weapon_mop.equipped = false
              weapon_mop.alias = "dry mop"
              player.atk = 30
            </ondrop>
          </object>
        </object>
        <exit alias="east" to="hallway_B">
          <inherit name="eastdirection" />
          <suffix>to the hallway</suffix>
        </exit>
        <object name="janitor_buckets">
          <inherit name="editor_object" />
          <inherit name="plural" />
          <inherit name="container_open" />
          <scenery />
          <alias>buckets</alias>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>some</prefix>
          <look>Several large buckets, the kind with wheels on them. They look more like mobile cleaning carts, there's places on it to stock towels, cleaning supplies, mops and brooms.</look>
          <open type="boolean">false</open>
          <close type="boolean">false</close>
          <hidechildren type="boolean">false</hidechildren>
          <alt>cleaning carts; wash buckets</alt>
          <take type="boolean">false</take>
          <displayverbs>Look at; Take; Search</displayverbs>
          <search type="script">
            msg ("One of the buckets has a toolbox hidden away inside of it.")
            MakeObjectVisible (toolbox)
          </search>
          <object name="toolbox">
            <inherit name="editor_object" />
            <inherit name="container_closed" />
            <inherit name="container_lockable" />
            <inherit name="weapon" />
            <alias>janitor's toolbox</alias>
            <scenery type="boolean">false</scenery>
            <look>A red toolbox that looks like it's been through hell, all dented and covered in scrapes and scratches.</look>
            <autoopen type="boolean">false</autoopen>
            <nokeymessage>It's locked tight. Better find the key for it first.</nokeymessage>
            <unlockmessage>The key you found fits! It's unlocked now.</unlockmessage>
            <lockmessage>You lock the box back up.</lockmessage>
            <listchildren />
            <listchildrenprefix>The toolbox has</listchildrenprefix>
            <take />
            <takemsg>You take the toolbox. Never know when it might be handy.</takemsg>
            <dropmsg>You decide to leave the toolbox behind.</dropmsg>
            <alt>toolbox; toolkit; tool box; tool kit</alt>
            <visible type="boolean">false</visible>
            <atk type="int">15</atk>
            <autounlock />
            <openmsg>You flip open the toolbox and look inside.</openmsg>
            <closemsg>You close up the toolbox.</closemsg>
            <displayverbs>Look at; Take; Open; Close</displayverbs>
            <inventoryverbs>Look at; Use; Drop; Equip</inventoryverbs>
            <key type="object">janitor_keyring</key>
            <onlock type="script">
              IncScore ("safe keeper", 15)
            </onlock>
            <onclose type="script">
              msg ("Caleb gives a little hum of approval.")
              IncScore ("safety first", 10)
            </onclose>
            <ondrop type="script">
              toolbox.alias = "janitor's toolbox"
              toolbox.equipped = false
              player.atk = 30
            </ondrop>
            <object name="hammer">
              <inherit name="editor_object" />
              <alias>hammer</alias>
              <look>A sturdy hammer with a rubber grip.</look>
              <take />
              <takemsg>You take the hammer.</takemsg>
              <drop type="script">
                if (Got(toolbox)) {
                  msg ("You put the hammer back in the toolbox.")
                  MoveObject (hammer, toolbox)
                }
                else if (ListContains(ScopeVisible(), toolbox)) {
                  msg ("You put the hammer back in the toolbox.")
                  MoveObject (hammer, toolbox)
                }
                else {
                  msg ("You leave the hammer out.")
                  MoveObject (hammer, player.parent)
                }
              </drop>
            </object>
            <object name="flathead screwdriver">
              <inherit name="editor_object" />
              <alias>screwdriver</alias>
              <look>A screwdriver with a flat head. Good for taking apart toys and fixing stuff. Not so good on trying to fix robot angels with sparkly magic powers.</look>
              <take />
              <takemsg>You take the screwdriver.</takemsg>
              <dropmsg>You put the screwdriver away.</dropmsg>
              <ondrop type="script">
                if (Got(toolbox)) {
                  MoveObject (flathead screwdriver, toolbox)
                }
                else {
                  MoveObject (flathead screwdriver, player.parent)
                }
              </ondrop>
              <drop type="script">
                if (Got(toolbox)) {
                  msg ("You put the screwdriver back in the toolbox.")
                  MoveObject (flathead screwdriver, toolbox)
                }
                else if (ListContains(ScopeVisible(), toolbox)) {
                  msg ("You put the screwdriver back in the toolbox.")
                  MoveObject (flathead screwdriver, toolbox)
                }
                else {
                  msg ("You leave the screwdriver out.")
                  MoveObject (flathead screwdriver, player.parent)
                }
              </drop>
            </object>
          </object>
        </object>
        <object name="janitor_brooms">
          <inherit name="editor_object" />
          <inherit name="plural" />
          <inherit name="container_open" />
          <alias>brooms</alias>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>a row of</prefix>
          <scenery />
          <look>Several push brooms all lined up in a row next to some buckets and mops.</look>
          <alt>push brooms</alt>
          <open type="boolean">false</open>
          <close type="boolean">false</close>
          <hidechildren type="boolean">false</hidechildren>
          <displayverbs>Look at; Take; Search</displayverbs>
          <search type="script">
            msg ("One of these brooms looks new. Caleb makes a little pleased sound at the sight of it. Weird robot....")
            MakeObjectVisible (weapon_broom)
          </search>
          <object name="weapon_broom">
            <inherit name="editor_object" />
            <inherit name="weapon" />
            <alias>broom</alias>
            <scenery type="boolean">false</scenery>
            <look>A clean, brand new broom. Caleb seems to like it.</look>
            <visible type="boolean">false</visible>
            <atk type="int">10</atk>
            <inventoryverbs>Look at; Use; Equip; Drop</inventoryverbs>
            <take type="script"><![CDATA[
              if (Got(weapon_mop)) {
                msg ("<i>(We are already carrying a weapon that takes two hands, so we won't be able to take this one.)</i> Caleb remarks, <i>(Too bad. I like brooms, too.)</i>")
              }
              else if (Got(toolbox)) {
                msg ("<i>(I would very much like to take this item, but we have one hand occupied with carrying the toolbox. This would be easier if I had my <color color=\"Blue\">travel bag</color>.)</i> Caleb sighs wistfully.")
              }
              else if (baton.equipped = true) {
                msg ("<i>(I would very much like to take this item, but we have one hand occupied with wielding the baton. If you want to exchange weapons, you will have to remove the baton.)</i> Caleb tells you.")
              }
              else if (taser.equipped = true) {
                msg ("<i>(I would very much like to take this item, but we have one hand occupied with wielding the taser. If you want to exchange weapons, you will have to remove the taser.)</i> Caleb tells you.")
              }
              else {
                msg ("This looks like it might hurt someone if you whack them with it. You grab the broom and Caleb gives a happy little hum at it. Man, he likes cleaning stuff way too much. Perfectly good waste of a super-robot, in your opinion.")
                MoveObject (weapon_broom, player)
                IncScore ("sweep sweep", 30)
              }
            ]]></take>
            <ondrop type="script">
              weapon_broom.equipped = false
              weapon_broom.alias = "broom"
              player.atk = 30
            </ondrop>
          </object>
        </object>
      </object>
      <object name="bathroom">
        <alias>Co-Ed Restroom</alias>
        <look><![CDATA[The door to this room has a plaque with the image of a man and a woman on it. If it's a restroom, then people must be <b>really</b> comfortable with each other here to share it.]]></look>
        <description><![CDATA[<br/>There are two doors inside the little break room, facing opposite each other. One has the men's symbol, the other has the women's. Okay, so this room serves as a break room before dividing up to the men's and women's restrooms. How complicated. <br/><br/>There are also a few chairs and a small table with some magazines, for those who have to wait their turn.]]></description>
        <usedefaultprefix />
        <displayverbs>Look at; Take</displayverbs>
        <enter type="script">
          scenery_shift
          if (Contains (bathroom,secguard_2)) {
            EnableTimer (auto_attack1)
          }
        </enter>
        <onexit type="script">
          if (Contains (bathroom,secguard_2)) {
            DisableTimer (auto_attack1)
          }
          MakeObjectInvisible (mens_reader)
          MakeObjectInvisible (womens_reader)
        </onexit>
        <object name="mens_restroom">
          <alias>Men's Restroom</alias>
          <description><![CDATA[<br/>The men's restroom. It looks very clean and fancy. There are a few stalls with stainless steel dividers, a row of sinks with soap dispensers and a shelf of fluffy white towels to dry with. No paper towels for the rich and powerful, you suppose.]]></description>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>the</prefix>
          <broken_door type="boolean">false</broken_door>
          <alt>men's room; mens room</alt>
          <displayverbs>Look at; Attack</displayverbs>
          <look type="script">
            if (mens_restroom.broken_door = true) {
              msg ("The door to the men's restroom. It's been broken open so you can pretty much ignore the reader beside it.")
              mens_reader.scenery = false
            }
            else {
              msg ("The door to the men's restroom. There's a strange reader beside it.")
              MakeObjectVisible (mens_reader)
            }
          </look>
          <attack type="script">
            msg ("It takes you a bit to realize you're in the body of an android with superhuman strength and power. Who needs palm-print scanners?! You kick the door and it flies open. Caleb just sighs at your cackling indulgence of destruction.")
            UnlockExit (mens door)
            mens_restroom.broken_door = true
          </attack>
          <enter type="script">
            scenery_shift
            MakeObjectInvisible (mens_reader)
          </enter>
          <object name="mens_stalls">
            <inherit name="editor_object" />
            <inherit name="plural" />
            <alias>restroom stalls</alias>
            <look><![CDATA[Stainless steel dividers are put up for the sake of privacy between each of the facilities. You're pretty sure robots don't need to use the bathroom, so you don't bother poking around there. Then you wonder aloud when was the last time you had a bathroom break. <br/><br/><i>(I would rather you did not leave just yet. You are still in control of my body and I am uncertain that you will be able to maintain the neuro-link if you abandon me now.)</i> Caleb replies worriedly, <i>(I do not wish to be left alone and helpless in a bathroom.)</i> So much for that.]]></look>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>the</prefix>
          </object>
          <object name="mens_sinks">
            <inherit name="editor_object" />
            <inherit name="surface" />
            <inherit name="plural" />
            <alias>bathroom sinks</alias>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>some</prefix>
            <look>A row of bone-white sinks set into a marble top and lined with individual soap dispensers. The extravagance of it makes you want to gag.</look>
            <hidechildren />
            <contentsprefix>with</contentsprefix>
            <alt>wash basin</alt>
            <useon type="scriptdictionary">
              <item key="mens_towel">
                if (GetBoolean(mens_towel, "soapy")) {
                  msg ("You rinse the soap out of the towel until it's just damp again.")
                  SetObjectFlagOff (mens_towel, "soapy")
                  SetObjectFlagOn (mens_towel, "damp")
                }
                else {
                  msg ("You wave the towel under the faucets and let the motion detectors turn on the water. It soaks the towel and makes it nice and damp.")
                  mens_towel.alias = "moist towel"
                  SetObjectFlagOn (mens_towel, "damp")
                }
              </item>
              <item key="womens_towel">
                if (GetBoolean(womens_towel, "soapy")) {
                  msg ("You rinse the soap out of the towel until it's just damp again.")
                  SetObjectFlagOff (womens_towel, "soapy")
                  SetObjectFlagOn (womens_towel, "damp")
                }
                else {
                  msg ("You wave the towel under the faucets and let the motion detectors turn on the water. It soaks the towel and makes it nice and damp.")
                  womens_towel.alias = "moist towel"
                  SetObjectFlagOn (womens_towel, "damp")
                }
              </item>
            </useon>
            <object name="soap_dispenser">
              <inherit name="editor_object" />
              <alias>soap dispenser</alias>
              <usedefaultprefix type="boolean">false</usedefaultprefix>
              <prefix>a</prefix>
              <look>A small dispenser of fragrant soap. The label boasts it has vitamins and natural oils to keep your hands smooth and moisturized. It says it smells a bit like strawberries, but Caleb remarks that he can't actually smell anything. He can, however, identify the chemical markers of the soap's ingredients, which might have been cool if you hadn't felt bad that the guy was missing out.</look>
              <takemsg>You take the dispenser of soap. Never know when you might need to wash a robot's hands.</takemsg>
              <dropmsg>You drop the dispenser of soap. It's not like you have to worry over Caleb being covered in germs or anything.</dropmsg>
              <alt>soap bottle</alt>
              <take type="script"><![CDATA[
                if (Got(travel_bag)) {
                  msg ("You take the dispenser of soap. Never know when you might need to wash a robot's hands.")
                  MoveObject (soap_dispenser, travel_bag)
                  IncScore ("soap not on a rope", 10)
                }
                else {
                  msg ("<i>(As nice as it would be to take that with us, we just do not have the ability to carry many items. You will have to find my <color color=\"Blue\">travel pack</color> first.)</i> Caleb remarks pointedly. Apparently, he doesn't like the idea of you stuffing everything you find in his pockets.")
                }
              ]]></take>
              <selfuseon type="scriptdictionary">
                <item key="mens_towel"><![CDATA[
                  if (GetBoolean(mens_towel, "damp")) {
                    msg ("You squeeze out some soap onto the towel. There. That should do it. Now you've got a soapy towel.")
                    mens_towel.alias = "soapy towel"
                    SetObjectFlagOff (mens_towel, "damp")
                    SetObjectFlagOn (mens_towel, "soapy")
                  }
                  else {
                    msg ("This towel is too <color color'\"Blue\">dry</color> to put soap on it and make anything useful.")
                  }
                ]]></item>
              </selfuseon>
            </object>
          </object>
          <object name="mens_shelf">
            <inherit name="editor_object" />
            <inherit name="surface" />
            <alias>shelf</alias>
            <look>A shelf full of fluffy white towels. Your mom might like some towels like those.</look>
            <hidechildren />
            <contentsprefix>with</contentsprefix>
            <alt>shelves</alt>
            <object name="mens_towel">
              <inherit name="editor_object" />
              <usedefaultprefix type="boolean">false</usedefaultprefix>
              <prefix>a fluffy white</prefix>
              <alias>towel</alias>
              <look>A fluffy white towel. It looks so soft and warm. Caleb keeps mumbling how much he likes this thing.</look>
              <alt>wash cloth; washcloth; hand towel</alt>
              <dropmsg>You toss the towel away. Caleb gives a little whimper of loss. Man, he really likes towels or something....</dropmsg>
              <take type="script"><![CDATA[
                if (Got(travel_bag)) {
                  msg ("You decide to take one of the fluffy towels for yourself. After all, it's very important that one should always know where their towel is; it's like a law of the universe or something! Caleb hums happily.")
                  MoveObject (mens_towel, travel_bag)
                  IncScore ("know where your towel is", 15)
                }
                else {
                  msg ("<i>(As nice as it would be to take that with us, we just do not have the ability to carry many items. You will have to find my <color color=\"Blue\">travel pack</color> first.)</i> Caleb remarks with a wistful sigh, <i>(It is really a very nice towel.)</i>")
                }
              ]]></take>
            </object>
          </object>
          <exit alias="east" to="bathroom">
            <inherit name="eastdirection" />
          </exit>
        </object>
        <object name="mens_reader">
          <inherit name="editor_object" />
          <scenery type="boolean">false</scenery>
          <alias>Men's Palm Scanner</alias>
          <first_look type="boolean">false</first_look>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>the</prefix>
          <alt>men's scanner; men's reader; mens scanner</alt>
          <visible type="boolean">false</visible>
          <look type="script"><![CDATA[
            if (mens_reader.first_look = false) {
              msg ("A scanner of some kind is mounted on the wall next to the door. The screen glows pale blue and a line of light scrolls across it every now and then. The faint outline of a hand is displayed, like a prompt for someone to put their hand there.<br/><br/><i>(Ah, this device must be connected to a database of employees. They place their hand on it and their fingerprints are scanned.)</i> Caleb remarks thoughtfully, <i>(It then identifies the user by their gender. If they are male, the door is unlocked. If they are female, the door remains shut.)</i><br/><br/>\"That's cool. I guess.\" you mutter, scratching your head absently.<br/><br/><i>(I recommend <b>not</b> using the scanner. I am not an employee here, and if I am detected, security may show up to detain us.)</i> he adds firmly.")
              mens_reader.first_look = true
            }
            else {
              msg ("A scanner of some kind is mounted on the wall next to the door. The screen glows pale blue and a line of light scrolls across it every now and then. The faint outline of a hand is displayed, like a prompt for someone to put their hand there. If you use it, a guard will show up.")
            }
          ]]></look>
          <use type="script"><![CDATA[
            if (Contains (bathroom,secguard_2)) {
              msg ("<i>(Stop trying to call more of them after us!)</i> Caleb yells at you, <i>(Do you want us to get caught?!)</i>")
              IncScore ("more the merrier", -10)
            }
            else {
              msg ("The scanner flashes red and the door to the break room flies open, revealing a security officer ready to take you down!")
              MoveObject (secguard_2, player.parent)
              EnableTimer (auto_attack1)
            }
          ]]></use>
        </object>
        <exit name="mens door" alias="west" to="mens_restroom">
          <inherit name="westdirection" />
          <locked />
          <lockmessage>The door is locked. That strange reader must be a way to open it.</lockmessage>
          <suffix>to the Men's Restroom</suffix>
        </exit>
        <object name="womens_restroom">
          <alias>Women's Restroom</alias>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>the</prefix>
          <broken_door type="boolean">false</broken_door>
          <description><![CDATA[<br/>The women's restroom is really nice and elegant, like the kind of restroom you'd expect to see in a fancy hotel or expensive restaraunt. Stainless steel divides up the stalls for privacy and there is a row of nice sinks with soap dispensers. A shelf is stocked with fluffy white towels. No paper towels for the rich and powerful, you suppose.]]></description>
          <alt>women's room; ladies' room; ladies room; girls' restroom; girls' room; girls room; womens room</alt>
          <displayverbs>Look at; Attack</displayverbs>
          <look type="script">
            if (womens_restroom.broken_door = true) {
              msg ("The door to the women's restroom. It's been broken open so you can pretty much ignore the reader beside it. Caleb is still a little mad that you broke it, though.")
              womens_reader.scenery = false
            }
            else {
              msg ("The door to the women's restroom. There's a strange reader beside it.")
              MakeObjectVisible (womens_reader)
            }
          </look>
          <attack type="script"><![CDATA[
            msg ("It takes you a bit to realize you're in the body of an android with superhuman strength and power. Who needs palm-print scanners?! You kick the door and it flies open.<br/><br/><i>(How could you?! That is the women's restroom!)</i> Caleb cries in shock.<br/><br/>\"You look girly enough to pass.\" you reply cheerfully, and he just grumbles under his breath.")
            UnlockExit (womens door)
            womens_restroom.broken_door = true
            IncScore ("peeping tom", -10)
          ]]></attack>
          <enter type="script">
            scenery_shift
            MakeObjectInvisible (womens_reader)
          </enter>
          <exit alias="west" to="bathroom">
            <inherit name="westdirection" />
          </exit>
          <object name="womens_stalls">
            <inherit name="editor_object" />
            <inherit name="plural" />
            <alias>restroom stalls</alias>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>the</prefix>
            <look><![CDATA[Stainless steel dividers are put up for the sake of privacy between each of the facilities. You're pretty sure robots don't need to use the bathroom, so you don't bother poking around there. Then you wonder aloud when was the last time you had a bathroom break. <br/><br/><i>(I would rather you did not leave just yet. You are still in control of my body and I am uncertain that you will be able to maintain the neuro-link if you abandon me now.)</i> Caleb replies worriedly, <i>(I do not wish to be left alone and helpless in a bathroom.)</i> So much for that.]]></look>
          </object>
          <object name="womens_sinks">
            <inherit name="editor_object" />
            <inherit name="plural" />
            <alias>sinks</alias>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>the</prefix>
            <look>A row of bone-white sinks set into a marble top and lined with individual soap dispensers. The extravagance of it makes you want to gag.</look>
            <useon type="scriptdictionary">
              <item key="mens_towel">
                if (GetBoolean(mens_towel, "soapy")) {
                  msg ("You rinse the soap out of the towel until it's just damp again.")
                  SetObjectFlagOff (mens_towel, "soapy")
                  SetObjectFlagOn (mens_towel, "damp")
                }
                else {
                  msg ("You wave the towel under the faucets and let the motion detectors turn on the water. It soaks the towel and makes it nice and damp.")
                  mens_towel.alias = "moist towel"
                  SetObjectFlagOn (mens_towel, "damp")
                }
              </item>
              <item key="womens_towel">
                if (GetBoolean(womens_towel, "soapy")) {
                  msg ("You rinse the soap out of the towel until it's just damp again.")
                  SetObjectFlagOff (womens_towel, "soapy")
                  SetObjectFlagOn (womens_towel, "damp")
                }
                else {
                  msg ("You wave the towel under the faucets and let the motion detectors turn on the water. It soaks the towel and makes it nice and damp.")
                  womens_towel.alias = "moist towel"
                  SetObjectFlagOn (womens_towel, "damp")
                }
              </item>
            </useon>
          </object>
          <object name="womens_shelf">
            <inherit name="editor_object" />
            <inherit name="surface" />
            <alias>shelf</alias>
            <look>A shelf full of fluffy white towels. Your mom might like some towels like those.</look>
            <hidechildren />
            <alt>shelves</alt>
            <object name="womens_towel">
              <inherit name="editor_object" />
              <inherit name="plural" />
              <alias>towels</alias>
              <usedefaultprefix type="boolean">false</usedefaultprefix>
              <prefix>some fluffy white</prefix>
              <look>A bunch of folded, fluffy white towels. Caleb keeps mumbling about how much he likes them.</look>
              <dropmsg>You toss the towel away. Caleb gives a little whimper of loss. Man, he really likes towels or something....</dropmsg>
              <take type="script"><![CDATA[
                if (Got(travel_bag)) {
                  msg ("You decide to take one of the fluffy towels for yourself. After all, it's very important that one should always know where their towel is; it's like a law of the universe or something! Caleb hums happily.")
                  MoveObject (womens_towel, travel_bag)
                  IncScore ("know where your towel is 2", 15)
                }
                else {
                  msg ("<i>(As nice as it would be to take that with us, we just do not have the ability to carry many items. You will have to find my <color color=\"Blue\">travel pack</color> first.)</i> Caleb remarks with a wistful sigh, <i>(It is really a very nice towel.)</i>")
                }
              ]]></take>
            </object>
          </object>
        </object>
        <object name="womens_reader">
          <inherit name="editor_object" />
          <first_look type="boolean">false</first_look>
          <alias>Women's Palm Scanner</alias>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>the</prefix>
          <alt>women's scanner; women's reader; ladies' scanner; ladies reader; womens scanner; girls scanner</alt>
          <scenery type="boolean">false</scenery>
          <visible type="boolean">false</visible>
          <look type="script"><![CDATA[
            if (womens_reader.first_look = false) {
              msg ("A scanner of some kind is mounted on the wall next to the door. The screen glows pale blue and a line of light scrolls across it every now and then. The faint outline of a hand is displayed, like a prompt for someone to put their hand there.<br/><br/><i>(Ah, this device must be connected to a database of employees. They place their hand on it and their fingerprints are scanned.)</i> Caleb remarks thoughtfully, <i>(It then identifies the user by their gender. If they are female, the door is unlocked. If they are male, the door remains shut.)</i><br/><br/>\"That's cool. I guess.\" you mutter, scratching your head absently.<br/><br/><i>(I recommend <b>not</b> using the scanner. I am not an employee here, and if I am detected, security may show up to detain us.)</i> he adds firmly.")
              womens_reader.first_look = true
            }
            else {
              msg ("A scanner of some kind is mounted on the wall next to the door. The screen glows pale blue and a line of light scrolls across it every now and then. The faint outline of a hand is displayed, like a prompt for someone to put their hand there. If you use it, a guard will show up.")
            }
          ]]></look>
          <use type="script"><![CDATA[
            if (Contains (bathroom,secguard_2)) {
              msg ("<i>(Stop trying to call more of them after us!)</i> Caleb yells at you, <i>(Do you want us to get caught?!)</i>")
              IncScore ("more the merrier", -10)
            }
            else {
              msg ("The scanner flashes red and the door to the break room flies open, revealing a security officer ready to take you down!")
              MoveObject (secguard_2, player.parent)
              EnableTimer (auto_attack1)
            }
          ]]></use>
        </object>
        <exit name="womens door" alias="east" to="womens_restroom">
          <inherit name="eastdirection" />
          <locked />
          <lockmessage>The door is locked. That strange scanner beside it might be the key to unlocking it.</lockmessage>
        </exit>
        <object name="break_chairs">
          <inherit name="editor_object" />
          <inherit name="plural" />
          <scenery type="boolean">false</scenery>
          <alias>break room chairs</alias>
          <look>A couple of upholstered chairs arranged to look elegant in the little room. You're used to seeing chairs like these while waiting for a meeting at a bank, not for waiting your turn to use the bathroom.</look>
          <alt>seats</alt>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>some</prefix>
          <sit>Hm, plush and comfy all right. You decide to get up before they start cracking under Caleb's weight, too.</sit>
        </object>
        <object name="break_table">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <alias>table</alias>
          <scenery type="boolean">false</scenery>
          <hidechildren />
          <contentsprefix>on which there are</contentsprefix>
          <look type="script">
            msg ("A glass table covered in magazines. None of them look especially interesting.")
            MakeObjectVisible (break_magazines)
          </look>
          <object name="break_magazines">
            <inherit name="editor_object" />
            <inherit name="plural" />
            <alias>magazines</alias>
            <look>Several magazines lay scattered on the table. They have titles like 'Business Update' and 'The Weekly Tech Report' and other stuff that make them sound like only the geeky or the business-savvy would read. You poke around a bit in a halfhearted attempt to find something gamer-related. Nope, nothing.</look>
            <visible type="boolean">false</visible>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>some</prefix>
            <displayverbs>Look at; Take; Read</displayverbs>
            <read type="script"><![CDATA[
              msg ("Against the part of you that would rather play Hiyo Puppy Online than be caught reading these things, you pick up a magazine at random and crack it open. The binding on the magazines have worn away at a particular spot, so just flipping it open brings you to the most read section.<br/><br/>\"Let's see. 'Sources at MasaTech Industries are touting the marvels that will come to the world at the unveiling of <color color=\"Red\">Project: Gatekeeper</color>. This mysterious project is undergoing final touches before being revealed at the National Science and Technology Summit at the end of the next week.'\" you read aloud and then glance at the date. Shocked, you drop the magazine. That date! That was last week's issue of this magazine!<br/><br/><i>(Is something the matter, " + player.playername + "?)</i> Caleb asks out of concern. You don't answer. What kind of crazy game is this?!")
            ]]></read>
          </object>
        </object>
        <exit alias="south" to="hallway_B">
          <inherit name="southdirection" />
          <suffix>to the hallway</suffix>
        </exit>
        <object name="earth_keycard">
          <inherit name="editor_object" />
          <alias>Earth Keycard</alias>
          <look>A dusty-yellow keycard with the image of a gray stone and has a magnetic strip. It says 'Earth' on it.</look>
          <alt>earth card; stone card</alt>
          <take />
          <takemsg>You take the Earth Keycard. This should come in handy.</takemsg>
          <dropmsg>You toss the Earth Keycard away. Don't need that anymore.</dropmsg>
          <visible type="boolean">false</visible>
        </object>
      </object>
      <exit alias="northwest" to="bathroom">
        <inherit name="northwestdirection" />
        <suffix>into the bathroom</suffix>
      </exit>
      <exit alias="north" to="janitor_closet">
        <inherit name="northdirection" />
        <suffix>to the janitor's closet</suffix>
      </exit>
      <exit name="Plasma Door" alias="south" to="plasma_lab">
        <inherit name="southdirection" />
        <suffix>to the Plasma Lab</suffix>
        <locked />
        <lockmessage>The door is locked. No surprise there.</lockmessage>
        <look type="script">
          msg ("A card reader is set beside the door.")
          MakeObjectVisible (plasma_reader)
        </look>
      </exit>
    </object>
    <object name="hallway_C">
      <inherit name="editor_room" />
      <alias>Second Floor - Hallway C</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>the</prefix>
      <description><![CDATA[<br/>There aren't many rooms in this hallway. Just one door to the north and one door to the south. The cameras are still posted up all over. With the strange lack of signs on both doors, you peek into each one's window just to see what's inside and identify the rooms. The one to the north must be a security room, while the one to the south just has a lot of crates. Stuff that was seized or shipped, maybe?]]></description>
      <enter type="script">
        EnableTimer (security)
        scenery_shift1
        if (Contains (hallway_C,secguard)) {
          EnableTimer (auto_attack)
          DisableTimer (security)
        }
      </enter>
      <onexit type="script">
        DisableTimer (security)
        if (Contains (hallway_C,secguard)) {
          DisableTimer (auto_attack)
        }
        MakeObjectInvisible (security_reader)
        MakeObjectInvisible (contraband_cardreader)
      </onexit>
      <exit alias="west" to="second_floor_junction">
        <inherit name="westdirection" />
        <suffix>to the T-Junction</suffix>
      </exit>
      <object name="security_room">
        <alias>Security Room</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>a</prefix>
        <description><![CDATA[<br/>A spacious room full of monitors and computers, with a wall of metal lockers on one side, this place seems like it should be full of alert and attentive security officers watching every moment of camera footage. Instead, there was just one overweight grunt. There are a few chairs where officers should be sitting to watch the monitors and a small safe tucked under the main console.]]></description>
        <displayverbs>Look at; Attack</displayverbs>
        <alt>security office; watch room</alt>
        <look type="script">
          msg ("The door to a security room is pretty thick and heavy. You'd have to wonder if even an android can get through it, but that's okay. There's a card reader right beside it. Peering into the window, you can see a security grunt sitting on his chair and watching the monitors absently, munching on a donut. Doesn't seem like he's paying any attention to you at the door.")
          MakeObjectVisible (security_reader)
        </look>
        <onexit type="script">
          LockExit (Security Door)
        </onexit>
        <attack type="script">
          msg ("There's gotta be somebody in that room to watch the cameras. You kick the door as hard as you can and then step back quickly. It flies open just as you get out of the way and a pudgy security grunt comes out. Boy, does he look angry!")
          MoveObject (secguard_3, player.parent)
        </attack>
        <enter type="script">
          scenery_shift
          MakeObjectInvisible (security_reader)
        </enter>
        <exit alias="east" to="hallway_C">
          <inherit name="eastdirection" />
          <suffix>into Hallway C</suffix>
        </exit>
        <object name="secguard_3">
          <inherit name="editor_object" />
          <inherit name="male" />
          <inherit name="container_open" />
          <inherit name="mob" />
          <alias>grunt</alias>
          <open type="boolean">false</open>
          <close type="boolean">false</close>
          <health type="int">120</health>
          <displayverbs>Look at; Attack</displayverbs>
          <atk type="int">15</atk>
          <look type="script">
            if (GetBoolean(secguard_3, "dead")) {
              msg ("A very dead grunt. Ick.")
            }
            else {
              msg ("A stout, overweight security grunt who looks like he's about to pop out of his uniform. You feel almost embarrassed to fight him.")
            }
          </look>
          <attack type="script"><![CDATA[
            msg ("You attack the grunt fiercely!")
            if (not GetBoolean(secguard_3, "dead")) {
              secguard_3.health = secguard_3.health-player.atk
              if (secguard_3.health > 0) {
                msg ("The grunt's still standing and fighting back!")
                if (Contains (secguard,handgun)) {
                  if (RandomChance(40)) {
                    msg ("The grunt fires his handgun at you! You wince at the loud noise, but it doesn't do as much damage as you thought it would to an android.")
                    damage_amount = handgun.atk
                    damage_player (damage_amount)
                  }
                  else {
                    msg ("The grunt swings a beefy fist at you! Gross and embarrassing....")
                    damage_amount = secguard_3.atk
                    damage_player (damage_amount)
                  }
                }
                else {
                  msg ("The grunt swings a beefy fist at you! Gross and embarrassing....")
                  damage_amount = secguard_3.atk
                  damage_player (damage_amount)
                }
              }
              else if (secguard_3.health < 1) {
                SetObjectFlagOn (secguard_3, "dead")
                msg ("The grunt goes down and lies motionless on the floor. What an embarrassing battle. All that's left is for the body to disappear in that weird light like all the others.")
                EnableTimer (removal2)
              }
            }
            else {
              msg ("The guard's already dead, why are you still trying to attack them?")
            }
          ]]></attack>
          <search type="script">
            msg ("You search the guard and find his handgun nearby. Ooh...")
            MakeObjectVisible (handgun)
          </search>
          <object name="handgun">
            <inherit name="editor_object" />
            <inherit name="weapon" />
            <atk type="int">20</atk>
            <takemsg>You try to take it, but Caleb growls in your ear when you reach for it. That's okay... you didn't really want it anyway....</takemsg>
            <visible type="boolean">false</visible>
            <look>A small handgun of unknown make and model, but it has an MT symbol on the barrel. Maybe a weapon made by this company?</look>
            <take type="script">
              msg ("You try to take it, but Caleb growls in your ear when you reach for it. That's okay... you didn't really want it anyway....")
            </take>
          </object>
          <object name="security_keycard">
            <inherit name="editor_object" />
            <alias>Security Keycard</alias>
            <visible type="boolean">false</visible>
            <look><![CDATA[A gray and blue keycard with a magnetic strip on it. There's also a picture of the pudgy grunt that dropped it after you beat him up. Man, just <b>having</b> this card is embarrassing you....]]></look>
            <take />
            <takemsg>You take the Security Keycard. This should come in handy.</takemsg>
            <dropmsg>You toss the Security Keycard away. Don't need that anymore.</dropmsg>
            <alt>security card</alt>
          </object>
        </object>
        <object name="security_console">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <alias>security console</alias>
          <contentsprefix>with</contentsprefix>
          <watch>You watch the monitors for a little while, but it gets boring really fast. No one else is wandering the halls, except for you, and those random security guards that tend to harrass you in the halls aren't showing up either. Weird.</watch>
          <displayverbs>Look at; Take; Watch</displayverbs>
          <listchildren />
          <listchildrenprefix>You see</listchildrenprefix>
          <look type="script">
            msg ("A rather sizable computer console with built in monitors and connected to various other ones all around the room. It hums as it goes about its business without human intervention.")
          </look>
          <object name="box_donuts">
            <inherit name="editor_object" />
            <alias>box of donuts</alias>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>a</prefix>
            <look>A box of donuts. From the size of it, it should be holding a full dozen. There are only six donuts left. Stupid security grunt....</look>
            <alt>pastries</alt>
            <take />
            <takemsg>You take the box of donuts. May as well. It'll go bad if you just leave it out like this.</takemsg>
            <dropmsg>You set the box down. Maybe a guard will start eating it and leave you alone for a while.</dropmsg>
          </object>
        </object>
        <object name="security_safe">
          <inherit name="editor_object" />
          <inherit name="container_closed" />
          <alias>digital safe</alias>
          <look>A small sturdy safe with a digital pad. You're supposed to press in a series of numbers to unlock the safe.</look>
          <alt>vault</alt>
          <open type="boolean">false</open>
          <input type="script"><![CDATA[
            switch ("text") {
              case ("1412") {
                msg ("<I>(Ah? That number is familiar to me. I wonder why?)</i> Caleb murmurs. You don't know either; you just put in some random numbers trying to open this thing. Of course it doesn't work.")
              }
              case ("666") {
                msg ("<i>(Ugh, really? Did you <b>have</b> to put that in?)</i> Caleb groans in exasperation. Well, it's kind of a traditional thing to do, isn't it? Just to mess with people's heads? Okay, so the joke's lost on the android, big whoop.")
              }
              case ("7125") {
                msg ("The safe clicks as it accepts the input code. Now you can open it and see what's inside!")
                security_safe.open = true
              }
              default {
                msg ("It doesn't seem that combination of numbers works.")
              }
            }
          ]]></input>
          <object name="startup_disc">
            <inherit name="editor_object" />
            <alias>mysterious CD</alias>
            <look>An unlabeled CD of some kind. Why would it be inside a safe?</look>
            <giveto type="scriptdictionary">
              <item key="firelab_comp"><![CDATA[
                msg ("The computer takes the disc in. There's a faint hum and the screen blinks on, revealing the normal desktop.<br/><br/>\"Okay, do your robot thing on it now.\" you remark with a grin.<br/><br/><i>(Very funny, " + player.playername + ". You instill me with such confidence that I will get my soul back.)</i> Caleb returns sarcastically. Maybe he'll get a sense of humor once you get that back to him?")
                SetObjectFlagOn (firelab_comp, "active")
              ]]></item>
            </giveto>
          </object>
          <object name="water_keycard">
            <inherit name="editor_object" />
            <alias>Water Keycard</alias>
            <look>A pale blue keycard with the image of a large darker blue teardrop and a magnetic strip.</look>
            <take />
            <takemsg>You take the Water Keycard.This should come in handy.</takemsg>
            <dropmsg>You toss the Water Keycard away. Don't need that anymore.</dropmsg>
          </object>
        </object>
        <object name="security_chairs">
          <inherit name="editor_object" />
          <inherit name="plural" />
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>several</prefix>
          <alias>swivel chairs</alias>
          <look><![CDATA[A few swivel chairs for the security officers to sit on while they monitor the cameras. It makes you want to sit on one and spin around for a while. <br/><br/><i>(Please do not sit and spin on those things. I do not want to wind up breaking something sensitive because you want to play games.)</i> Caleb suddenly remarks flatly. Guess you're easy for him to figure out, huh?]]></look>
          <sit type="script"><![CDATA[
            msg ("You can't resist. You sit in one of the chairs and spin around and around, grinning like an idiot the whole time. When it starts to creak and you're dizzy, you jump off and end up stumbling around the room. Then you trip and crash right into metal lockers, denting them pretty badly. Oops. Oh well; property damage at last!<br/><br/><i>(What did I do to deserve you controlling my body?)</i> Caleb grumbles under his breath.")
            metal_lockers.alias = "dented metal lockers"
            IncScore ("property damage", -20)
            damage_amount = 15
            damage_player (damage_amount)
          ]]></sit>
        </object>
        <object name="metal_lockers">
          <inherit name="editor_object" />
          <inherit name="plural" />
          <inherit name="container_closed" />
          <inherit name="container_lockable" />
          <alias>metal lockers</alias>
          <look>A row of metal lockers. Wonder what's inside them?</look>
          <autoopen type="boolean">false</autoopen>
          <nokeymessage>Looks like these lockers need a key to get into them.</nokeymessage>
          <listchildren />
          <listchildrenprefix>You see</listchildrenprefix>
          <object name="disruptor_gun">
            <inherit name="editor_object" />
            <alias>energy disruptor</alias>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>an</prefix>
            <look>A familiar looking device, it's shaped a bit like a rocket launcher with a big plastice cone at the end of the barrel. Oh, that's right. Frank had a smaller version of this that you smashed when he zapped Caleb with it.</look>
            <take />
            <takemsg>The disrupter has a belt on it that lets you sling it over your shoulder. Something like this must be useful later, since it can shut down Caleb's magic system.</takemsg>
            <dropmsg>You set the disrupter down.</dropmsg>
            <fire type="script">
              msg ("")
            </fire>
          </object>
        </object>
        <object name="first_aid_kit">
          <inherit name="editor_object" />
          <inherit name="container_closed" />
          <alias>first aid kit</alias>
          <usedefaultprefix />
          <prefix type="string"></prefix>
          <look>An easily recognizable first aid kit with its white box and red cross. It's mounted on the wall by the row of lockers.</look>
          <alt>med kit; medical kit; health kit; medkit</alt>
          <displayverbs>Look at; Take</displayverbs>
          <take type="boolean">false</take>
        </object>
      </object>
      <object name="security_reader">
        <inherit name="editor_object" />
        <visible type="boolean">false</visible>
        <alias>Security Keycard Reader</alias>
        <look>A card reader for the security room on the second floor.</look>
        <alt>reader</alt>
        <useanything type="script">
          msg ("Looks like the card reader won't take this. Stubborn reader.")
        </useanything>
        <useon type="scriptdictionary">
          <item key="security_keycard">
            msg ("You swipe the Security Keycard into the reader. There's a soft beep and the light turns green.")
            UnlockExit (Security Door)
          </item>
        </useon>
      </object>
      <exit name="Security Door" alias="north" to="security_room">
        <inherit name="northdirection" />
        <suffix>into the Security Room</suffix>
        <locked />
        <lockmessage>The door is locked. What a surprise. Good thing there's a card reader beside it.</lockmessage>
      </exit>
      <object name="contraband_locker">
        <alias>Contraband Locker</alias>
        <description><![CDATA[<br/>The inside of the contraband locker is full of shelves stocked with wooden crates all in rows. It's a little creepy. The light is dim, as though there's not enough power. But just outside the locker, the halls are brightly lit. Something doesn't seem right here. <br/><br/><i>(My long-range sensors are still disabled; we have not found those files yet.)</i> Caleb murmurs softly, <i>(Tread carefully.)</i> <br/><br/>Ha, he doesn't need to tell <b>you</b> twice.]]></description>
        <alt>locker room</alt>
        <look type="script">
          msg ("This door is just as reinforced as the one for the security room. Luckily, there's a card reader next to it. What card does it want?")
          MakeObjectVisible (contraband_cardreader)
        </look>
        <enter type="script">
          scenery_shift
          MakeObjectInvisible (contraband_cardreader)
          EnableTurnScript (light flicker)
        </enter>
        <onexit type="script">
          LockExit (Locker Door)
          DisableTurnScript (light flicker)
        </onexit>
        <beforefirstenter type="script"><![CDATA[
          ClearScreen
          msg ("<i>(It would be wise to save while we have the chance. In the event things go unwell, you will want to still be able to explore the building further in search of items and spells that will help us.)</i> Caleb suddenly says, his voice a little puzzled. It's almost like he doesn't know why he's saying it.<br/><br/>\"Um, yeah. Good idea.\" you remark, just as confused as him. Seriously, there's no save option anywhere on the visor's display!<br/><br/><color color=\"Green\"><b>-It will be a good idea to save now and before entering certain other rooms, in case you missed exploring something that would help you greatly.-</b></color><br/><br/>")
        ]]></beforefirstenter>
        <exit alias="west" to="hallway_C">
          <inherit name="westdirection" />
          <suffix>to Hallway C</suffix>
        </exit>
        <object name="contra_shelves">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <alias>shelves</alias>
          <look>Rows and rows of sturdy shelves, all of them holding wooden crates. It's hard to see very far in the dim light, which is weird since robot vision is supposed to be like way better than a human's. Then again, Caleb's been pretty badly mangled by this evil corporation, so some vision loss is understandable.</look>
          <contentsprefix>holding</contentsprefix>
          <hidechildren />
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>many</prefix>
          <search type="script">
            msg ("Not much here. Just dust and more wooden crates.")
          </search>
          <object name="wooden_crates">
            <inherit name="editor_object" />
            <alias>wooden crates</alias>
            <alt>small crates</alt>
            <look>Small wooden crates are stacked on the shelves. Each of them are nailed shut, so getting into them isn't going to be possible.</look>
          </object>
        </object>
        <object name="large_crate">
          <alias>large wooden crate</alias>
          <contentsprefix>with</contentsprefix>
          <alt>shipping crate; large crate</alt>
          <description><![CDATA[<br/>A cramped shipping crate stuffed with straw padding and barely enough room to wiggle around in. Caleb came back online while stuffed in here and neither of you were happy about that. For all you know, this could be the crate these MasaTech jerks used to ship Caleb into the building.]]></description>
          <displayverbs>Look at; Search</displayverbs>
          <exitslistprefix>You can</exitslistprefix>
          <look type="script">
            firsttime {
              msg ("A large wooden crate about six feet long and three feet high. What kind of thing got smuggled into this place to have a box that big? A missile?")
            }
            otherwise {
              if (GetBoolean(large_crate, "broken")) {
                msg ("The crate that Caleb was locked in by the Elite. It's been broken open from the inside.")
              }
              else {
                msg ("A large wooden crate about six feet long and three feet high.")
              }
            }
          </look>
          <beforefirstenter type="script"><![CDATA[
            msg ("After a few minutes of calling out to Caleb, checking the connections on your computer and visor, taking a break to assure your mom the game's fine and grab a snack, the visor and screen finally come back online. For a second you're not sure where Caleb is now, and his soft groan of pain in your ear holds no clues. Then you start to recognize the planks of wood just inches from in front of your face.<br/><br/>\"What the-? Did they just stuff us in that big crate we were checking out earlier?!\" you cry out incredulously.<br/><br/><i>(Ugh... not so loud, " + player.playername + ". My head is feeling horrendous.)</i> Caleb whimpers, <i>(What hap-?)</i> He pauses, then gasps. <i>(I remember! Not everything, because many files are still only available to my body with a soul, but I seem to have restored a great deal of what happened to me before I awoke here!)</i><br/><br/>\"So what happened?\" you ask.<br/><br/><i>(I had gotten a letter asking me to meet a new Hero in New York City. When I got to the meeting place, I was ambushed by five heavily armored and armed humans. I tried to escape using magic and nearly got away, but then they used something on me, like that device the lab assistant had. My magic shorted out and they brought me down with a barrage of electric attacks. Before I lost consciousness, I heard one of them say transferring my 'core' would make the <color color=\"Red\">Gatekeeper</color> the most powerful android in the world. I think what they transferred was my soul!)</i><br/><br/>Which meant that this Gatekeeper thing you keep hearing about has Caleb's soul and if you know how games go, then the Gatekeeper's the final boss. Great.<br/><br/>")
            IncScore ("sharing tales 1", 30)
          ]]></beforefirstenter>
          <search type="script">
            firsttime {
              msg ("Just as you start trying to pry open the large crate, a huge guard steps out of the shadows and attacks!")
              MakeObjectVisible (miniboss_1)
              EnableTimer (auto_attack3)
            }
            otherwise {
              msg ("A broken open shipping crate. Caleb had been stuffed in here after the Elite zapped him with that weird baton.")
            }
          </search>
          <exit name="inner lid" alias="out" to="contraband_locker">
            <inherit name="outdirection" />
            <suffix>of the crate</suffix>
            <prefix>get</prefix>
            <lookonly type="boolean">false</lookonly>
            <look>The underside of the lid to the crate. Not that impressive, really.</look>
            <locked />
            <lockmessage>The lid has been locked down somehow. You need to bust out of here.</lockmessage>
          </exit>
          <object name="charge crystal">
            <inherit name="editor_object" />
            <displayverbs>Look at; Take; Scan; Use</displayverbs>
            <take />
            <takemsg>You pocket the charge crystal.</takemsg>
            <dropmsg>You toss the charge crystal away.</dropmsg>
            <TP type="int">500</TP>
            <alt>fragment</alt>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>a</prefix>
            <suffix>hidden in the straw</suffix>
            <look type="script">
              firsttime {
                msg ("A small crystal shard that resembles a fragment of ice. It's not cold and it doesn't melt. How strange.")
              }
              otherwise {
                msg ("A small crystal shard that resembles a fragment of ice. Caleb says it will restore 500 TP. Wow!")
              }
            </look>
            <use type="script">
              msg ("You crush the charge crystal in one hand and it turns into sparkling dust that seeps into Caleb's body. It doesn't repair the System Damages or refill HP, but it fills a ton of TP.")
              healing_amount = charge crystal.TP
              restore_player (healing_amount)
              RemoveObject (charge crystal)
            </use>
            <scan type="script"><![CDATA[
              msg ("<i>(Ah, a charge crystal.)</i> Caleb remarks after he runs a scan on the little shard you picked up from the straw padding the inside of the crate, <i>(It is only good for a single use, but it will restore 500 TP. Very useful. I had not known one was in here.)</i><br/><br/>Well, if it gives back half your TP, then it's going with you.")
            ]]></scan>
          </object>
          <object name="side">
            <inherit name="editor_object" />
            <scenery type="boolean">false</scenery>
            <alias>sides</alias>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>the</prefix>
            <suffix>of the crate</suffix>
            <look>The sides of the crate.</look>
            <displayverbs>Look at; Attack</displayverbs>
            <attack type="script">
              msg ("You're not about to stay here any longer. Despite the damages Caleb's taken, you get enough control in the cramped space to twist around and punch the side of the crate. It takes a few blows before it finally gives and several more punches and kicks before the whole side of the crate is splintered open.")
              UnlockExit (cratelid)
              UnlockExit (inner lid)
              miniboss_1.lock = true
              SetObjectFlagOn (large_crate, "broken")
            </attack>
          </object>
        </object>
        <turnscript name="light flicker">
          <script><![CDATA[
            if (player.parent = contraband_locker) {
              if (RandomChance(50)) {
                msg ("<br/>The lights flicker rapidly, as if there's not enough power going to the room.")
              }
              else if (RandomChance(60)) {
                if (not ListContains(ScopeVisible(), miniboss_1)) {
                  msg ("<br/>You feel a strange sense of eyes on you, like you're not alone in this room.")
                }
                else {
                  msg ("<br/>The fighting makes the shelves shake, and it worries you that some of those crates might fall on you.")
                }
              }
              else {
                msg ("<br/>The lights go out and it's completely dark. You freeze in place for a moment, and the light eventually comes back, just as dim as ever.")
              }
            }
          ]]></script>
        </turnscript>
        <exit name="cratelid" alias="in" to="large_crate">
          <inherit name="indirection" />
          <prefix>climb</prefix>
          <suffix>the large crate</suffix>
          <locked />
          <lockmessage>The lid's locked down and you don't have a key for it.</lockmessage>
        </exit>
        <object name="miniboss_1">
          <inherit name="editor_object" />
          <inherit name="male" />
          <inherit name="mob" />
          <alias>Elite Anti-Angel Agent #1</alias>
          <health type="int">500</health>
          <visible type="boolean">false</visible>
          <lock type="boolean">false</lock>
          <atk type="int">30</atk>
          <displayverbs>Look at; Speak to; Attack</displayverbs>
          <look type="script">
            if (GetBoolean(miniboss_1, "dead")) {
              msg ("A very dead Elite. Ick. Man, that was a tough fight!")
            }
            else {
              msg ("A huge guard that towers over you and is heavily padded with body armor and muscle. You can't see his face through the dark plate on his helmet, but you're pretty sure he's not at all happy that Caleb's running free in the building. Doesn't look like he'll go down as easily as the regular guards.")
            }
          </look>
          <attack type="script"><![CDATA[
            if (not GetBoolean(miniboss_1, "dead")) {
              msg ("You attack the Elite fiercely!")
              miniboss_1.health = miniboss_1.health-player.atk
              if (miniboss_1.health>250) {
                msg ("The Elite is still standing and fights back!")
                damage_amount = miniboss_1.atk
                damage_player (damage_amount)
              }
              else if (miniboss_1.health<249 and miniboss_1.lock = false) {
                msg ("The Elite is still standing and fights back!")
                damage_amount = miniboss_1.atk+20
                damage_player (damage_amount)
                UnlockExit (cratelid)
                DisableTurnScript (light flicker)
                DisableTimer (auto_attack3)
                msg ("<br/>The Elite suddenly jabs the end of a slender black baton into Caleb's chest and a massive shock of electricity goes off. You shut your eyes against the blinding flickering light as he screams in your ears. Suddenly, he goes silent and the visor goes dark. You're not sure what just happened, but that didn't seem normal for a game.<br/><br/>You call Caleb's name a few times, but there's no response. You try focusing your thoughts to move him, but the screen and visor are still dark and you can't tell if you've done anything. Was he okay? Was your connection still online?<br/><br/>All you can do is keep calling his name and trying to move something, a hand, anything, and hope you get through....")
                wait {
                  ClearScreen
                  MoveObject (player, large_crate)
                }
              }
              else if (miniboss_1.health<249 and miniboss_1.lock = true) {
                msg ("The Elite is still standing and fights back!")
                damage_amount = miniboss_1.atk
                damage_player (damage_amount)
              }
              else if (miniboss_1.health<1 and miniboss_1.lock = true) {
                SetObjectFlagOn (miniboss_1, "dead")
                DisableTimer (auto_attack3)
                msg ("The Elite finally goes down with a heavy thud on the floor. You're breathing hard at your computer, feeling a bit winded from trying to keep out of that crate. Caleb doesn't seem to be doing so well, barely able to stand straight even with you focusing your thoughts to make him do so. Those System Damages just keep piling on and you haven't found anything that can fix him yet.<br/><br/><i>(" + player.playername + ", I want to rest. I do not think I can continue, not like this.)</i> Caleb mumbles softly. You shake your head, looking over your items and trying to think of where else you can go, where you haven't explored yet. <i>(You are a cruel taskmaster, " + player.playername + ".)</i><br/><br/>\"You'll thank me for it when I beat the final boss.\" you mutter as you let Caleb sit on the floor to try and get a little energy back, \"But yeah. I hope there aren't anymore guards like that one, too.\"<br/><br/><i>(Then I am afraid to say... there are four more. This is one of the humans who ambushed me that day.)</i><br/><br/>Of course.....")
                EnableTimer (removal3)
              }
            }
            else {
              msg ("<i>(There's no point in attacking something that's already dead.)</i> Caleb points out dryly.")
            }
          ]]></attack>
        </object>
        <object name="copper_keycard">
          <inherit name="editor_object" />
          <visible type="boolean">false</visible>
          <alias>Copper Keycard</alias>
          <look>A copper-colored card with a magnetic strip on it. Kind of pretty to look at.</look>
          <selfuseon type="scriptdictionary">
            <item key="copper_reader">
              msg ("You swipe the keycard through the reader. There's a soft beep and the light turns green.")
              UnlockExit (copper door)
            </item>
          </selfuseon>
        </object>
      </object>
      <object name="contraband_cardreader">
        <inherit name="editor_object" />
        <alias>Locker Keycard Reader</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <look>A card reader. Just like all the other ones you've seen.</look>
        <visible type="boolean">false</visible>
        <alt>locker reader</alt>
        <useanything type="script">
          msg ("The reader won't take anything else. Stupid card reader.")
        </useanything>
        <useon type="scriptdictionary">
          <item key="security_keycard">
            msg ("You swipe the Security Keycard through the reader. There's a soft beep and the light turns green. Figures this card would work on a room full of confiscated stuff!")
            UnlockExit (Locker Door)
          </item>
          <item key="master_card">
            msg ("Door is unlocked.")
            UnlockExit (Locker Door)
          </item>
        </useon>
      </object>
      <exit name="Locker Door" alias="south" to="contraband_locker">
        <inherit name="southdirection" />
        <suffix>into the Contraband Locker</suffix>
        <locked />
        <lockmessage>The door is locked. That's typical.</lockmessage>
      </exit>
    </object>
  </object>
  <command name="cast2">
    <unresolved>No such spell.</unresolved>
    <pattern>cast #text# on #object#</pattern>
    <script><![CDATA[
      switch (text) {
        case ("Luna-Flare") {
          if (player.luna = true) {
            if (not DoesInherit (object, "mob")) {
              msg ("<i>(Now what would be the point of that, " + player.playername + "?)</i> Caleb sighs. Darn, no property damage variables on....")
            }
            else {
              switch (object.enemy) {
                case (secguard.enemy) {
                  if (secguard.health>0) {
                    msg (" An intense burst of magic light erupts from within the enemy's body. It might look like much, but they're squirming in pain.<br/><br/>40 Damage dealt!")
                    secguard.health = secguard.health-40
                    player.mana = player.mana-20
                  }
                  else if (secguard.health<1) {
                    SetObjectFlagOn (secguard, "dead")
                    DisableTimer (auto_attack)
                    msg (" An intense burst of magic light erupts from within the enemy's body. 40 Damage dealt!<br/><br/>The guard goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
                    player.mana = player.mana-20
                    EnableTimer (removal)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (secguard_2.enemy) {
                  if (secguard_2.health>0) {
                    msg (" An intense burst of magic light erupts from within the enemy's body. It might look like much, but they're squirming in pain.<br/><br/>40 Damage dealt!")
                    secguard_2.health = secguard_2.health-40
                    player.mana = player.mana-20
                  }
                  else if (secguard_2.health<1) {
                    SetObjectFlagOn (secguard_2, "dead")
                    DisableTimer (auto_attack1)
                    msg (" An intense burst of magic light erupts from within the enemy's body. 40 Damage dealt!<br/><br/>The officer goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
                    player.mana = player.mana-20
                    EnableTimer (removal1)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (secguard_3.enemy) {
                  if (secguard_3.health>0) {
                    player.mana = player.mana-20
                    msg (" An intense burst of magic light erupts from within the enemy's body. It might look like much, but they're squirming in pain.<br/><br/>40 Damage dealt!")
                    secguard.health = secguard_3.health-40
                  }
                  else if (secguard_3.health<1) {
                    player.mana = player.mana-20
                    SetObjectFlagOn (secguard_3, "dead")
                    msg (" An intense burst of magic light erupts from within the enemy's body. It might look like much, but they're squirming in pain. 40 Damage dealt!<br/><br/>The grunt goes down and lies motionless on the floor. After a moment, he vanishes in a burst of light and leaves behind his keycard. What is causing that? It's been happening to every mook you beat up in this place. Weird game mechanics...")
                    MakeObjectVisible (security_keycard)
                    MoveObject (security_keycard, player.parent)
                    RemoveObject (secguard_3)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (miniboss_1.enemy) {
                  if (miniboss_1.health>0) {
                    msg (" An intense burst of magic light erupts from within the enemy's body. It might look like much, but they're squirming in pain.<br/><br/>40 Damage dealt!")
                    miniboss_1.health = miniboss_1.health-40
                    player.mana = player.mana-20
                  }
                  else if (miniboss_1<249 and miniboss_1.lock = false) {
                    player.mana = player.mana-10
                    damage_amount = miniboss_1.atk+20
                    damage_player (damage_amount)
                    UnlockExit (cratelid)
                    DisableTurnScript (light flicker)
                    DisableTimer (auto_attack3)
                    msg ("<br/>The Elite suddenly jabs the end of a slender black baton into Caleb's chest and a massive shock of electricity goes off. You shut your eyes against the blinding flickering light as he screams in your ears. Suddenly, he goes silent and the visor goes dark. You're not sure what just happened, but that didn't seem normal for a game.<br/><br/>You call Caleb's name a few times, but there's no response. You try focusing your thoughts to move him, but the screen and visor are still dark and you can't tell if you've done anything. Was he okay? Was your connection still online?<br/><br/>All you can do is keep calling his name and trying to move something, a hand, anything, and hope you get through....")
                    wait {
                      ClearScreen
                      MoveObject (player, large_crate)
                    }
                  }
                  else if (miniboss_1<249 and miniboss_1.lock = true) {
                    msg (" An intense burst of magic light erupts from within the enemy's body. It might look like much, but they're squirming in pain.<br/><br/>40 Damage dealt!")
                    miniboss_1.health = miniboss_1.health-40
                    player.mana = player.mana-20
                  }
                  else if (miniboss_1>1 and miniboss_1.lock = true) {
                    SetObjectFlagOn (miniboss_1, "dead")
                    player.mana = player.mana-20
                    msg (" An intense burst of magic light erupts from within the enemy's body. 40 Damage dealt!<br/><br/>The Elite goes down and lies motionless on the floor. That was a tough fight....")
                    DisableTimer (auto_attack3)
                    EnableTimer (removal3)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                default {
                  msg ("<i>(I do not think it works that way.)</i> Caleb remarks dryly.")
                }
              }
            }
          }
          else {
            msg ("<i>(I have not recovered the files for this spell yet.)</i> Caleb tells you, <i>(You must recover the spell for me before I can use it.)</i>")
          }
        }
        case ("Fireball") {
          if (player.ifrit = true) {
            if (not DoesInherit (object, "mob")) {
              msg ("<i>(Now what would be the point of that, " + player.playername + "?)</i> Caleb sighs. Darn, no property damage variables on....")
            }
            else {
              switch (object.enemy) {
                case (secguard.enemy) {
                  if (secguard.health>0) {
                    msg (" A flurry of fireballs launches at the enemy, setting them aflame. It might not look like much, but they seem to think it hurts a lot.<br/><br/>25 Damage dealt!")
                    secguard.health = secguard.health-25
                    player.mana = player.mana-10
                  }
                  else if (secguard.health<1) {
                    SetObjectFlagOn (secguard, "dead")
                    DisableTimer (auto_attack)
                    msg (" A flurry of fireballs launches at the enemy, setting them aflame. It might not look like much, but they seem to think it hurts a lot. 25 Damage dealt!<br/><br/>The guard goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
                    player.mana = player.mana-10
                    EnableTimer (removal)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (secguard_2.enemy) {
                  if (secguard_2.health>0) {
                    msg (" A flurry of fireballs launches at the enemy, setting them aflame. It might not look like much, but they seem to think it hurts a lot.<br/><br/>25 Damage dealt!")
                    secguard_2.health = secguard_2.health-25
                    player.mana = player.mana-10
                  }
                  else if (secguard_2.health<1) {
                    SetObjectFlagOn (secguard_2, "dead")
                    DisableTimer (auto_attack1)
                    msg (" A flurry of fireballs launches at the enemy, setting them aflame. It might not look like much, but they seem to think it hurts a lot. 25 Damage dealt!<br/><br/>The officer goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
                    player.mana = player.mana-10
                    EnableTimer (removal1)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (secguard_3.enemy) {
                  if (secguard_3.health>0) {
                    player.mana = player.mana-10
                    msg (" A flurry of fireballs launches at the enemy, setting them aflame. It might not look like much, but they seem to think it hurts a lot.<br/><br/>25 Damage dealt!")
                    secguard.health = secguard_3.health-25
                  }
                  else if (secguard_3.health<1) {
                    player.mana = player.mana-10
                    SetObjectFlagOn (secguard_3, "dead")
                    msg (" A flurry of fireballs launches at the enemy, setting them aflame. It might not look like much, but they seem to think it hurts a lot. 25 Damage dealt!<br/><br/>The grunt goes down and lies motionless on the floor. After a moment, he vanishes in a burst of light and leaves behind his keycard. What is causing that? It's been happening to every mook you beat up in this place. Weird game mechanics...")
                    MakeObjectVisible (security_keycard)
                    MoveObject (security_keycard, player.parent)
                    RemoveObject (secguard_3)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (miniboss_1.enemy) {
                  if (miniboss_1.health>0) {
                    player.mana = player.mana-10
                    msg (" A flurry of fireballs launches at the enemy, setting them aflame. It might not look like much, but they seem to think it hurts a lot.<br/><br/>25 Damage dealt!")
                    miniboss_1.health = miniboss_1.health-25
                  }
                  else if (miniboss_1.health<249 and miniboss_1.lock = false) {
                    player.mana = player.mana-10
                    miniboss_1.health = miniboss_1.health-25
                    damage_amount = miniboss_1.atk+20
                    damage_player (damage_amount)
                    UnlockExit (cratelid)
                    DisableTurnScript (light flicker)
                    DisableTimer (auto_attack3)
                    msg ("<br/>The Elite suddenly jabs the end of a slender black baton into Caleb's chest and a massive shock of electricity goes off. You shut your eyes against the blinding flickering light as he screams in your ears. Suddenly, he goes silent and the visor goes dark. You're not sure what just happened, but that didn't seem normal for a game.<br/><br/>You call Caleb's name a few times, but there's no response. You try focusing your thoughts to move him, but the screen and visor are still dark and you can't tell if you've done anything. Was he okay? Was your connection still online?<br/><br/>All you can do is keep calling his name and trying to move something, a hand, anything, and hope you get through....")
                    wait {
                      ClearScreen
                      MoveObject (player, large_crate)
                    }
                  }
                  else if (miniboss_1.health<249 and miniboss_1.lock = true) {
                    player.mana = player.mana-10
                    msg (" A flurry of fireballs launches at the enemy, setting them aflame. It might not look like much, but they seem to think it hurts a lot.<br/><br/>25 Damage dealt!")
                    miniboss_1.health = miniboss_1.health-25
                  }
                  else if (miniboss_1>1 and miniboss_1.lock = true) {
                    player.mana = player.mana-10
                    SetObjectFlagOn (miniboss_1, "dead")
                    msg (" A flurry of fireballs launches at the enemy, setting them aflame. It might not look like much, but they seem to think it hurts a lot. 25 Damage dealt!<br/><br/>The Elite goes down and lies motionless on the floor. That was a tough fight...")
                    EnableTimer (removal3)
                    DisableTimer (auto_attack3)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                default {
                  msg ("<i>(I do not think it works that way.)</i> Caleb remarks dryly.")
                }
              }
            }
          }
          else {
            msg ("<i>(I have not recovered the files for this spell yet.)</i> Caleb tells you, <i>(You must recover the spell for me before I can use it.)</i>")
          }
        }
        case ("Gale-Force") {
          if (player.sylph = true) {
            if (not DoesInherit (object, "mob")) {
              msg ("<i>(Now what would be the point of that, " + player.playername + "?)</i> Caleb sighs. Darn, no property damage variables on....")
            }
            else {
              switch (object.enemy) {
                case (secguard.enemy) {
                  if (secguard.health>0) {
                    msg ("A blast of concentrated air pressure sweeps over the enemy, cutting into them like invisible blades. Cool!<br/><br/>35 Damage dealt!")
                    secguard.health = secguard.health-35
                    player.mana = player.mana-15
                  }
                  else if (secguard.health<1) {
                    SetObjectFlagOn (secguard, "dead")
                    DisableTimer (auto_attack)
                    msg ("A blast of concentrated air pressure sweeps over the enemy, cutting into them like invisible blades. 35 Damage dealt!<br/><br/>The guard goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
                    player.mana = player.mana-15
                    EnableTimer (removal)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (secguard_2.enemy) {
                  if (secguard_2.health>0) {
                    msg ("A blast of concentrated air pressure sweeps over the enemy, cutting into them like invisible blades. Cool!<br/><br/>35 Damage dealt!")
                    secguard_2.health = secguard_2.health-35
                    player.mana = player.mana-15
                  }
                  else if (secguard_2.health<1) {
                    SetObjectFlagOn (secguard_2, "dead")
                    DisableTimer (auto_attack1)
                    msg ("A blast of concentrated air pressure sweeps over the enemy, cutting into them like invisible blades. 35 Damage dealt!<br/><br/>The officer goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
                    player.mana = player.mana-15
                    EnableTimer (removal1)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (secguard_3.enemy) {
                  if (secguard_3.health>0) {
                    player.mana = player.mana-15
                    msg ("A blast of concentrated air pressure sweeps over the enemy, cutting into them like invisible blades. Cool!<br/><br/>35 Damage dealt!")
                    secguard.health = secguard_3.health-35
                  }
                  else if (secguard_3.health<1) {
                    player.mana = player.mana-15
                    SetObjectFlagOn (secguard_3, "dead")
                    msg ("A blast of concentrated air pressure sweeps over the enemy, cutting into them like invisible blades. 35 Damage dealt!<br/><br/>The grunt goes down and lies motionless on the floor. That was embarrassing. You wish the weird light would hurry up and take the guy away already.")
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (miniboss_1.enemy) {
                  if (miniboss_1.health>0) {
                    player.mana = player.mana-15
                    msg ("A blast of concentrated air pressure sweeps over the enemy, cutting into them like invisible blades. Cool!<br/><br/>35 Damage dealt!")
                    miniboss_1.health = miniboss_1.health-35
                  }
                  else if (miniboss_1.health<1) {
                    player.mana = player.mana-15
                    SetObjectFlagOn (miniboss_1, "dead")
                    msg ("A blast of concentrated air pressure sweeps over the enemy, cutting into them like invisible blades. 35 Damage dealt!<br/><br/>The Elite goes down and lies motionless on the floor. That was a tough fight...")
                    EnableTimer (removal3)
                    DisableTimer (auto_attack3)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                default {
                  msg ("<i>(I do not think it works that way.)</i> Caleb remarks dryly.")
                }
              }
            }
          }
          else {
            msg ("<i>(I have not recovered the files for this spell yet.)</i> Caleb tells you, <i>(You must recover the spell for me before I can use it.)</i>")
          }
        }
        case ("Spire") {
          if (player.gnome = true) {
            if (not DoesInherit (object, "mob")) {
              msg ("<i>(Now what would be the point of that, " + player.playername + "?)</i> Caleb sighs. Darn, no property damage variables on....")
            }
            else {
              switch (object.enemy) {
                case (secguard.enemy) {
                  if (secguard.health>0) {
                    msg ("A shaft of earth suddenly materializes below the enemy, slamming right into their guts. Oooh, that's gotta hurt!<br/><br/>50 Damage dealt!")
                    secguard.health = secguard.health-50
                    player.mana = player.mana-20
                  }
                  else if (secguard.health<1) {
                    SetObjectFlagOn (secguard, "dead")
                    DisableTimer (auto_attack)
                    msg ("A shaft of earth suddenly materializes below the enemy, slamming right into their guts. Oooh, that's gotta hurt! 50 Damage dealt!<br/><br/>The guard goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
                    player.mana = player.mana-20
                    EnableTimer (removal)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (secguard_2.enemy) {
                  if (secguard_2.health>0) {
                    msg ("A shaft of earth suddenly materializes below the enemy, slamming right into their guts. Oooh, that's gotta hurt!<br/><br/>50 Damage dealt!")
                    secguard_2.health = secguard_2.health-50
                    player.mana = player.mana-20
                  }
                  else if (secguard_2.health<1) {
                    SetObjectFlagOn (secguard_2, "dead")
                    DisableTimer (auto_attack1)
                    msg ("A shaft of earth suddenly materializes below the enemy, slamming right into their guts. Oooh, that's gotta hurt! 50 Damage dealt!<br/><br/>The officer goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
                    player.mana = player.mana-20
                    EnableTimer (removal1)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (secguard_3.enemy) {
                  if (secguard_3.health>0) {
                    player.mana = player.mana-20
                    msg ("A shaft of earth suddenly materializes below the enemy, slamming right into their guts. Oooh, that's gotta hurt!<br/><br/>50 Damage dealt!")
                    secguard.health = secguard_3.health-50
                  }
                  else if (secguard_3.health<1) {
                    player.mana = player.mana-20
                    SetObjectFlagOn (secguard_3, "dead")
                    msg ("A shaft of earth suddenly materializes below the enemy, slamming right into their guts. Oooh, that's gotta hurt! 50 Damage dealt!<br/><br/>The grunt goes down and lies motionless on the floor. Man, that was embarrassing. Hope that weird light takes him away soon.")
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (miniboss_1.enemy) {
                  if (miniboss_1.health>0) {
                    player.mana = player.mana-20
                    msg ("A shaft of earth suddenly materializes below the enemy, slamming right into their guts. Oooh, that's gotta hurt!<br/><br/>50 Damage dealt!")
                    miniboss_1.health = miniboss_1.health-50
                  }
                  else if (miniboss_1.health<1) {
                    player.mana = player.mana-20
                    SetObjectFlagOn (miniboss_1, "dead")
                    msg ("A shaft of earth suddenly materializes below the enemy, slamming right into their guts. Oooh, that's gotta hurt! 50 Damage dealt!<br/><br/>The Elite goes down and lies motionless on the floor. That was a tough fight...")
                    DisableTimer (auto_attack3)
                    EnableTimer (removal3)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                default {
                  msg ("<i>(I do not think it works that way.)</i> Caleb remarks dryly.")
                }
              }
            }
          }
          else {
            msg ("<i>(I have not recovered the files for this spell yet.)</i> Caleb tells you, <i>(You must recover the spell for me before I can use it.)</i>")
          }
        }
        case ("Glacial") {
          if (player.celsius = true) {
            if (not DoesInherit (object, "mob")) {
              msg ("<i>(Now what would be the point of that, " + player.playername + "?)</i> Caleb sighs. Darn, no property damage variables on....")
            }
            else {
              switch (object.enemy) {
                case (secguard.enemy) {
                  if (secguard.health>0) {
                    msg ("A storm of hailstones forms around you and fires at the enemy, pummeling them with chunks of frozen water. Sweet!<br/><br/>60 Damage dealt!")
                    secguard.health = secguard.health-60
                    player.mana = player.mana-35
                  }
                  else if (secguard.health<1) {
                    SetObjectFlagOn (secguard, "dead")
                    DisableTimer (auto_attack)
                    msg ("A storm of hailstones forms around you and fires at the enemy, pummeling them with chunks of frozen water. 60 Damage dealt!<br/><br/>The guard goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
                    player.mana = player.mana-35
                    EnableTimer (removal)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (secguard_2.enemy) {
                  if (secguard_2.health>0) {
                    msg ("A storm of hailstones forms around you and fires at the enemy, pummeling them with chunks of frozen water. Sweet!<br/><br/>60 Damage dealt!")
                    secguard_2.health = secguard_2.health-60
                    player.mana = player.mana-35
                  }
                  else if (secguard_2.health<1) {
                    SetObjectFlagOn (secguard_2, "dead")
                    DisableTimer (auto_attack1)
                    msg ("A storm of hailstones forms around you and fires at the enemy, pummeling them with chunks of frozen water. 60 Damage dealt!<br/><br/>The officer goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
                    player.mana = player.mana-35
                    EnableTimer (removal1)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (secguard_3.enemy) {
                  if (secguard_3.health>0) {
                    player.mana = player.mana-35
                    msg ("A storm of hailstones forms around you and fires at the enemy, pummeling them with chunks of frozen water. Sweet!<br/><br/>60 Damage dealt!")
                    secguard.health = secguard_3.health-60
                  }
                  else if (secguard_3.health<1) {
                    player.mana = player.mana-35
                    SetObjectFlagOn (secguard_3, "dead")
                    msg ("A storm of hailstones forms around you and fires at the enemy, pummeling them with chunks of frozen water. 60 Damage dealt!<br/><br/>The grunt goes down and lies motionless on the floor. Man, that was embarrassing. You hope that weird light takes him away soon.")
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (miniboss_1.enemy) {
                  if (miniboss_1.health>0) {
                    player.mana = player.mana-35
                    msg ("A storm of hailstones forms around you and fires at the enemy, pummeling them with chunks of frozen water. Sweet!<br/><br/>60 Damage dealt!")
                    miniboss_1.health = miniboss_1.health-60
                  }
                  else if (miniboss_1.health<1) {
                    player.mana = player.mana-35
                    SetObjectFlagOn (miniboss_1, "dead")
                    msg ("A storm of hailstones forms around you and fires at the enemy, pummeling them with chunks of frozen water. 60 Damage dealt!<br/><br/>The Elite goes down and lies motionless on the floor. That was a tough fight...")
                    EnableTimer (removal3)
                    DisableTimer (auto_attack3)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                default {
                  msg ("<i>(I do not think it works that way.)</i> Caleb remarks dryly.")
                }
              }
            }
          }
          else {
            msg ("<i>(I have not recovered the files for this spell yet.)</i> Caleb tells you, <i>(You must recover the spell for me before I can use it.)</i>")
          }
        }
        case ("Hydro-Wave") {
          if (player.undine = true) {
            if (not DoesInherit (object, "mob")) {
              msg ("<i>(Now what would be the point of that, " + player.playername + "?)</i> Caleb sighs. Darn, no property damage variables on....")
            }
            else {
              switch (object.enemy) {
                case (secguard.enemy) {
                  if (secguard.health>0) {
                    msg ("A flood of water is summoned that slams into the enemy and sends them flailing about and sputtering for air. Yeah! Take that!<br/><br/>50 Damage dealt!")
                    secguard.health = secguard.health-50
                    player.mana = player.mana-30
                  }
                  else if (secguard.health<1) {
                    SetObjectFlagOn (secguard, "dead")
                    DisableTimer (auto_attack)
                    msg ("A flood of water is summoned that slams into the enemy and sends them flailing about and sputtering for air. 50 Damage dealt!<br/><br/>The guard goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
                    player.mana = player.mana-30
                    EnableTimer (removal)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (secguard_2.enemy) {
                  if (secguard_2.health>0) {
                    msg ("A flood of water is summoned that slams into the enemy and sends them flailing about and sputtering for air. Yeah! Take that!<br/><br/>50 Damage dealt!")
                    secguard_2.health = secguard_2.health-50
                    player.mana = player.mana-30
                  }
                  else if (secguard_2.health<1) {
                    SetObjectFlagOn (secguard_2, "dead")
                    DisableTimer (auto_attack1)
                    msg ("A flood of water is summoned that slams into the enemy and sends them flailing about and sputtering for air. 50 Damage dealt!<br/><br/>The officer goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
                    player.mana = player.mana-30
                    EnableTimer (removal1)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (secguard_3.enemy) {
                  if (secguard_3.health>0) {
                    player.mana = player.mana-30
                    msg ("A flood of water is summoned that slams into the enemy and sends them flailing about and sputtering for air. Yeah! Take that!<br/><br/>50 Damage dealt!")
                    secguard.health = secguard_3.health-50
                  }
                  else if (secguard_3.health<1) {
                    player.mana = player.mana-30
                    SetObjectFlagOn (secguard_3, "dead")
                    msg ("A flood of water is summoned that slams into the enemy and sends them flailing about and sputtering for air. 50 Damage dealt!<br/><br/>The grunt goes down and lies motionless on the floor. Man, that was embarrassing. You hope that weird light takes him away soon.")
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (miniboss_1.enemy) {
                  if (miniboss_1.health>0) {
                    player.mana = player.mana-30
                    msg ("A flood of water is summoned that slams into the enemy and sends them flailing about and sputtering for air. Yeah! Take that!<br/><br/>50 Damage dealt!")
                    miniboss_1.health = miniboss_1.health-50
                  }
                  else if (miniboss_1.health<1) {
                    player.mana = player.mana-30
                    SetObjectFlagOn (miniboss_1, "dead")
                    msg ("A flood of water is summoned that slams into the enemy and sends them flailing about and sputtering for air. 50 Damage dealt!<br/><br/>The Elite goes down and lies motionless on the floor. That was a tough fight...")
                    EnableTimer (removal3)
                    DisableTimer (auto_attack3)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                default {
                  msg ("<i>(I do not think it works that way.)</i> Caleb remarks dryly.")
                }
              }
            }
          }
          else {
            msg ("<i>(I have not recovered the files for this spell yet.)</i> Caleb tells you, <i>(You must recover the spell for me before I can use it.)</i>")
          }
        }
        case ("Volt-Burst") {
          if (player.volt = true) {
            if (not DoesInherit (object, "mob")) {
              msg ("<i>(Now what would be the point of that, " + player.playername + "?)</i> Caleb sighs. Darn, no property damage variables on....")
            }
            else {
              switch (object.enemy) {
                case (secguard.enemy) {
                  if (secguard.health>0) {
                    msg ("A blast of electricity stuns and sends the enemy reeling. Built in taser, yeah! They drop for a bit and then stagger back to their feet.<br/><br/>75 Damage dealt!")
                    secguard.health = secguard.health-75
                    player.mana = player.mana-40
                  }
                  else if (secguard.health<1) {
                    player.mana = player.mana-40
                    msg ("A blast of electricity stuns and sends the enemy reeling. 75 Damage dealt!<br/><br/>The guard goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
                    SetObjectFlagOn (secguard, "dead")
                    DisableTimer (auto_attack)
                    EnableTimer (removal)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (secguard_2.enemy) {
                  if (secguard_2.health>0) {
                    msg ("A blast of electricity stuns and sends the enemy reeling. Built in taser, yeah! They drop for a bit and then stagger back to their feet.<br/><br/>75 Damage dealt!")
                    secguard_2.health = secguard_2.health-75
                    player.mana = player.mana-40
                  }
                  else if (secguard_2.health<1) {
                    player.mana = player.mana-40
                    msg ("A blast of electricity stuns and sends the enemy reeling. 75 Damage dealt!<br/><br/>The officer goes down and lies motionless on the floor. It's a little disturbing to see since the body isn't fading away. But then you remember that some newer games leave bodies behind for the shock value. This is taking it a bit far, though, considering the realism of these graphics.")
                    SetObjectFlagOn (secguard_2, "dead")
                    DisableTimer (auto_attack1)
                    EnableTimer (removal1)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (secguard_3.enemy) {
                  if (secguard_3.health>0) {
                    msg ("A blast of electricity stuns and sends the enemy reeling. Built in taser, yeah! They drop for a bit and then stagger back to their feet.<br/><br/>75 Damage dealt!")
                    secguard_3.health = secguard_3.health-75
                    player.mana = player.mana-40
                  }
                  else if (secguard_3.health<1) {
                    player.mana = player.mana-40
                    msg ("A blast of electricity stuns and sends the enemy reeling. 75 Damage dealt!<br/><br/>The grunt goes down and lies motionless on the floor. Man, that was embarrassing. You hope that weird light takes him away soon.")
                    SetObjectFlagOn (secguard_3, "dead")
                    DisableTimer (auto_attack2)
                    EnableTimer (removal2)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                case (miniboss_1.enemy) {
                  if (miniboss_1.health>0) {
                    msg ("A blast of electricity stuns and sends the enemy reeling. Built in taser, yeah! They drop for a bit and then stagger back to their feet.<br/><br/>75 Damage dealt!")
                    miniboss_1.health = miniboss_1.health-75
                    player.mana = player.mana-40
                  }
                  else if (miniboss_1.health<1) {
                    player.mana = player.mana-40
                    msg ("A blast of electricity stuns and sends the enemy reeling. 75 Damage dealt!<br/><br/>The Elite goes down and lies motionless on the floor. That was a tough fight...")
                    SetObjectFlagOn (miniboss_1, "dead")
                    DisableTimer (auto_attack3)
                    EnableTimer (removal3)
                  }
                  else {
                    msg ("<i>(There's no point in casting an attack spell on an enemy that's already fallen.)</i> Caleb tells you in an annoyed tone.")
                  }
                }
                default {
                  msg ("<i>(I do not think it works that way.)</i> Caleb remarks dryly.")
                }
              }
            }
          }
          else {
            msg ("<i>(I have not recovered the files for this spell yet.)</i> Caleb tells you, <i>(You must recover the spell for me before I can use it.)</i>")
          }
        }
        default {
          msg ("<i>(You need to define the right target for this kind of spell. Healing anything other than us is counter-productive, do you not agree?)</i> Caleb points out. Oops, heh heh.")
        }
      }
    ]]></script>
  </command>
  <object name="third_floor">
    <inherit name="editor_room" />
    <object name="hallway_D">
      <inherit name="editor_room" />
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <alias>Third Floor - Hallway A</alias>
      <prefix>the</prefix>
      <description><![CDATA[<br/>The hallway is long and straight, ending in a T-junction at the very end. There are two doors on each side of the hallway, and each one has a card reader next to it. The stairwell door is in the southern part of the hall but still no elevator doors. This floor looks a bit different from the lower two....]]></description>
      <enter type="script">
        EnableTimer (security1)
        EnableTimer (labstaff)
        scenery_shift1
        if (Contains (hallway_C,sec_chief)) {
          EnableTimer (auto_attack4)
          DisableTimer (security1)
        }
        else if (Contains (hallway_C,lab_assist)) {
          EnableTimer (auto_attack5)
          DisableTimer (labstaff)
        }
      </enter>
      <onexit type="script">
        DisableTimer (security1)
        DisableTimer (labstaff)
        if (Contains (hallway_C,sec_chief)) {
          DisableTimer (auto_attack4)
        }
        else if (Contains (hallway_C,lab_assist)) {
          DisableTimer (auto_attack5)
        }
      </onexit>
      <object name="copper_lab">
        <alias>Copper Lab</alias>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <description><![CDATA[<br/>This lab is just like all the others you've seen so far. There's a computer desk with a terminal and input pad on it. Examining tables take up space in the center while a lone plant stands in a corner of the room. You wonder if there's anything you can find here that will help you get through this annoying building any easier.]]></description>
        <look type="script">
          msg ("The door leading to the Copper Lab has a copper plate on it and a card reader beside it. Like it was going to be any different from the other labs....")
          MakeObjectVisible (copper_reader)
        </look>
        <exit alias="west" to="hallway_D">
          <inherit name="westdirection" />
        </exit>
        <object name="compdesk_4">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <hidechildren />
          <alias>computer desk</alias>
          <look>A black and grey desk with a computer terminal on it. There are some pen holders but otherwise, it's completely bare.</look>
          <search type="script">
            msg ("You search the desk and find a pair of unlocked drawers.")
            MakeObjectVisible (drawer4)
            MakeObjectVisible (drawer5)
          </search>
          <object name="copper_comp">
            <inherit name="editor_object" />
            <alias>computer</alias>
            <alt>terminal; PC; comp</alt>
            <look type="script"><![CDATA[
              if (player.sylph = true) {
                firsttime {
                  msg ("You look at the computer to see the file Caleb left open for you.<br/><br/><i>\"File Type: <color color=\"Blue\">Magic</color><br/>Magic Type: <color color=\"Blue\">Attack</color><br/>File Name: <color color=\"Red\">Gale-Force</color><br/><br/>Appears to be a weak attack spell. Causes damage by sending blades of air pressure after a target. Each use takes a small amount of magic power. The formula is calculated as thus:<br/><br/><color color=\"Red\">Cast Gale-Force on Target - cost 15 TP - damages for 35</color>.\"</i><br/><br/>\"You attack with <i>air</i>?\" you ask Caleb in disbelief.<br/><br/><i>(Yes. Why?)</i> he returns curiously.<br/><br/>\"That's just messed up. We use air to breathe and here you are using it to slice people up.\" you complain. Oh well, at least it's another spell.")
                }
                otherwise {
                  msg ("<i>\"File Type: <color color=\"Blue\">Magic</color><br/>Magic Type: <color color=\"Blue\">Attack</color><br/>File Name: <color color=\"Red\">Gale-Force</color><br/><br/>Appears to be a weak attack spell. Causes damage by sending blades of air pressure after a target. Each use takes a small amount of magic power. The formula is calculated as thus:<br/><br/><color color=\"Red\">Cast Gale-Force on Target - cost 15 TP - damages for 35</color>.\"</i><br/><br/>Yeah, still the same old info.")
                }
              }
              else {
                msg ("A memo has been left open on the screen.<br/><br/><i>\"I'm getting annoyed with people copying the <color color=\"Blue\">safe</color> combination from my notepad by rubbing pencil lead on the paper to get the impression of numbers. So I scratched the new combination in a place where no one would think to find it. Hah! I'm such a genius.\"</i>")
              }
            ]]></look>
          </object>
          <object name="input5">
            <inherit name="editor_object" />
            <alt>pad</alt>
            <alias>input pad</alias>
            <look type="string"></look>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>an</prefix>
            <displayverbs>Look at; Take; Use</displayverbs>
            <use type="script"><![CDATA[
              firsttime {
                msg ("You place Caleb's hand on the pad and let him sift through the files at high speed. Eventually he stops with a pleased hum.<br/><br/><i>(Another attack spell has been installed and information about it has been put onto the screen for you. There are still a few more of these low-level spells to find and install for me to find the paths to my high-level spells.)</i> he tells you.<br/><br/>\"And then I can use those?\" you ask hopefully.")
                if (player.affection = < 230) {
                  msg ("<br/><i>(It is possible, but not right away. First, find and install the missing spells and I will unlock more powerful spells for your use.)</i> Caleb replies with an uncertain tone. That's okay; it just gives you more motivation to find those other spells!")
                  player.highlevel = true
                }
                else {
                  msg ("<br/><i>(No. I would rather you continue using these low-level spells, since the high-level ones drain more TP than I am comfortable with.)</i> Caleb returns shortly. Darn it. Guess he hasn't warmed up to you enough to let you play with the cooler spells.")
                }
                player.sylph = true
              }
              otherwise {
                msg ("You let Caleb search through the files again but there's nothing new here. Just the same information about the new spell.")
              }
            ]]></use>
          </object>
          <object name="drawer4">
            <inherit name="editor_object" />
            <inherit name="container_open" />
            <visible type="boolean">false</visible>
            <look>A simple desk drawer. Nothing much to it.</look>
            <alias>drawer</alias>
            <isopen type="boolean">false</isopen>
            <closemsg>Out of habit, you close the drawer when you're done.</closemsg>
            <onclose type="script">
              firsttime {
                msg ("Caleb makes a pleased little humming sound and it makes you feel oddly proud of yourself.")
                IncScore ("good guy greg 1", 25)
                MakeObjectInvisible (drawer2)
              }
            </onclose>
            <object name="pencil">
              <inherit name="editor_object" />
              <look>A simple mechanical pencil, like the kind you use for school.</look>
              <take />
              <takemsg>You take the pencil. Never know when it might be handy.</takemsg>
              <dropmsg>You drop the pencil. Don't need this anymore.</dropmsg>
              <selfuseon type="scriptdictionary">
                <item key="paper_clue"><![CDATA[
                  if (GetBoolean(paper_clue, "mirror")) {
                    msg ("You lightly rub the pencil lead over the paper, and a number appears through the faint scratches. <b>7125.</b> What could this be useful for?")
                    SetObjectFlagOn (paper_clue, "numbered")
                    SetObjectFlagOff (paper_clue, "mirror")
                  }
                  else {
                    msg ("You doodle a bit in a corner of the paper. Meh, this doesn't seem to be of any help.")
                  }
                ]]></item>
              </selfuseon>
            </object>
          </object>
          <object name="drawer5">
            <inherit name="editor_object" />
            <inherit name="container_open" />
            <visible type="boolean">false</visible>
            <look>A simple desk drawer. Nothing much to it.</look>
            <alias>drawer</alias>
            <isopen type="boolean">false</isopen>
            <closemsg>Out of habit, you close the drawer when you're done.</closemsg>
            <onclose type="script">
              firsttime {
                msg ("Caleb makes a pleased little humming sound and it makes you feel oddly proud of yourself.")
                IncScore ("good guy greg 2", 25)
                MakeObjectInvisible (drawer2)
              }
            </onclose>
            <object name="cabinet_key">
              <inherit name="editor_object" />
              <alias>cabinet key</alias>
              <look>A small key with a tag that has a square of copper on it. Is it used on something in this lab?</look>
            </object>
          </object>
        </object>
        <object name="metal_table1">
          <inherit name="editor_object" />
          <alias>examining table</alias>
          <look>A metal examining table covered in parts. Looks like leftovers from making something electronic.</look>
          <hidechildren />
          <contentsprefix>on which there are</contentsprefix>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>an</prefix>
        </object>
        <object name="metal_table4">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <alias>examining table</alias>
          <look>A metal examining table covered in more parts. Seriously, how big is the thing these people made to have so many leftover parts?</look>
          <hidechildren />
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>an</prefix>
          <search type="script">
            msg ("You check out the examining table a bit more and find a locked cabinet. Hmm....")
            MakeObjectVisible (cabinet_2)
          </search>
          <object name="cabinet_2">
            <inherit name="editor_object" />
            <inherit name="container_closed" />
            <inherit name="container_lockable" />
            <alias>cabinet</alias>
            <look>A cabinet that's built into the examining table.</look>
            <autoopen type="boolean">false</autoopen>
            <nokeymessage>You don't have the key to this.</nokeymessage>
            <visible type="boolean">false</visible>
            <key type="object">cabinet_key</key>
            <object name="repair_kit">
              <inherit name="editor_object" />
              <alias>repair kit</alias>
              <look>Caleb's repair kit. It has all the tools needed to restore his System Damages so he doesn't shut down on you. Some of these tools look really weird, but that's okay. As long as it works, that's all you need to worry about.</look>
              <takemsg>You take the repair kit. It's one of those things that seems pretty dang important</takemsg>
              <drop />
              <dropmsg>You set the kit down.</dropmsg>
              <inventoryverbs>Look at; Use; Drop; Use</inventoryverbs>
              <use type="script"><![CDATA[
                msg ("You bring out the repair kit and crack it open. Caleb gives you step by step instructions on how to repair the damages you've built up wandering around here. It's kind of creepy, like performing surgery on yourself, but the results are worth it.<br/><br/>System Damages reset!")
                player.damage = 1
              ]]></use>
              <take type="script">
                if (Got(travel_bag)) {
                  msg ("You take the repair kit. It's one of those things that seems pretty important, so it's good to keep it around. Caleb seems to be relieved that you've found it.")
                  MoveObject (repair_kit, travel_bag)
                  IncScore ("repairman", 30)
                }
                else {
                  msg ("You take the repair kit. It's one of those things that seems pretty important, so it's good to keep it around. Caleb seems to be relieved that you've found it.")
                  AddToInventory (player)
                  IncScore ("repairman", 30)
                }
              </take>
            </object>
          </object>
        </object>
        <object name="tall_plant">
          <inherit name="editor_object" />
          <alias>tall plant</alias>
          <look>A tall leafy plant that stands in a corner and looks nice. Seems like that's all it's good for.</look>
        </object>
      </object>
      <object name="copper_reader">
        <inherit name="editor_object" />
        <visible type="boolean">false</visible>
        <alias>Copper Keycard Reader</alias>
        <look>A card reader. That's it. Nothing else. It's the same as all the others.</look>
      </object>
      <exit name="copper door" alias="east" to="copper_lab">
        <inherit name="eastdirection" />
        <suffix>to the Copper Lab</suffix>
        <locked />
        <lockmessage>The door is locked. Looks like you'll need another keycard to open it.</lockmessage>
      </exit>
      <exit alias="south" to="third_floor_stairwell">
        <inherit name="southdirection" />
      </exit>
    </object>
  </object>
  <verb name="fire">
    <property>fire</property>
    <pattern>fire #object# at #object2#</pattern>
    <defaultexpression>"You can't fire " + object.article + "."</defaultexpression>
  </verb>
  <verb name="wash">
    <property>wash</property>
    <pattern>wash #object# with #object2#; scrub #object# with #object2#</pattern>
    <defaultexpression>"You can't wash " + object.article + "."</defaultexpression>
  </verb>
  <verb name="input">
    <property>input</property>
    <pattern>input</pattern>
    <defaultexpression>"You can't input " + object.article + "."</defaultexpression>
  </verb>
  <command name="teleport">
    <pattern>teleport</pattern>
    <script>
      MoveObject (player, hallway_C)
      player.luna = true
      player.ifrit = true
      player.heal = true
      MoveObject (master_card, player)
    </script>
  </command>
  <type name="weapon">
    <inherit name="editor_object" />
    <equipped type="boolean">false</equipped>
    <atk type="int">0</atk>
  </type>
  <type name="mob">
    <inherit name="editor_object" />
    <enemy />
    <health type="int">0</health>
    <atk type="int">0</atk>
  </type>
  <function name="InitScore" parameters="max, true">
    game.score_max = max
    game.score_achievements = NewStringDictionary()
    player.affection = 0
  </function>
  <function name="IncScore" parameters="str, inc">
    if (not DictionaryContains(game.score_achievements, str)) {
      player.affection = player.affection+ inc
      dictionary add (game.score_achievements, str, ToString(inc))
    }
  </function>
  <function name="damage_player" parameters="damage_amount"><![CDATA[
    player.health = player.health - damage_amount
    player.sysupdate = player.sysupdate + damage_amount
    if (player.sysupdate >= 50) {
      player.damage = player.damage + (player.sysupdate / 50)
      player.sysupdate = 0
    }
  ]]></function>
  <function name="scenery_shift">
    MoveObject (wall, player.parent)
    MoveObject (floor, player.parent)
    MoveObject (door, player.parent)
  </function>
  <function name="name_player"><![CDATA[
    msg ("<color color=\"Red\">Requesting Name...:</color><br/>")
    player.playername = GetInput()
    msg ("<i>(Data recorded.)</i><br/>")
  ]]></function>
  <function name="heal_player" parameters="healing_amount"><![CDATA[
    player.recover_amount = player.health + healing_amount
    if (player.recover_amount>=990) {
      player.health = 990
      player.recover_amount = 0
    }
    else {
      player.health = player.health + healing_amount
    }
  ]]></function>
  <function name="restore_player" parameters="healing_amount"><![CDATA[
    player.recover_amount = player.mana + healing_amount
    if (player.recover_amount>=1000) {
      player.mana = 1000
      player.recover_amount = 0
    }
    else {
      player.mana = player.mana + healing_amount
    }
  ]]></function>
  <function name="stairscene_shift">
    MoveObject (walls1, player.parent)
    MoveObject (floor1, player.parent)
  </function>
  <function name="scenery_shift1">
    MoveObject (wall, player.parent)
    MoveObject (floor, player.parent)
    MoveObject (door, player.parent)
    MoveObject (security_cameras, player.parent)
  </function>
  <timer name="removal">
    <interval>15</interval>
    <script><![CDATA[
      if (GetBoolean(secguard, "dead")) {
        if (player.parent = secguard.parent) {
          msg ("<br/>The body suddenly vanishes in a burst of light. While you're blinking away the spots in your eyes, Caleb just makes a small huffing sound.")
          MoveObject (secguard, hidden_inv)
        }
        else {
          MoveObject (secguard, hidden_inv)
        }
        SetObjectFlagOff (secguard, "dead")
        secguard.health = 100
        if (Contains (secguard,taser)) {
          taser.scenery = True
        }
        else if (not Contains (secguard,taser)) {
          MoveObject (taser2, secguard)
        }
        DisableTimer (removal)
        if (player.parent = secguard.parent) {
          EnableTimer (security)
        }
      }
    ]]></script>
  </timer>
  <timer name="security">
    <interval>20</interval>
    <script><![CDATA[
      if (RandomChance(50)) {
        MoveObject (secguard, player.parent)
        msg ("<br/>Uh-oh! You must have taken too long to get anywhere. Here comes a security guard to 'take care' of you!")
        DisableTimer (security)
        EnableTimer (auto_attack)
      }
      else {
        msg ("<i>(" + player.playername + ", I believe we are still very much exposed here. Have you decided where to go next?)</i> Caleb warns after a little while.")
      }
    ]]></script>
  </timer>
  <timer name="auto_attack">
    <interval>10</interval>
    <script><![CDATA[
      if (not GetBoolean(secguard, "dead")) {
        if (secguard.health > 0) {
          if (Contains (secguard,taser)) {
            if (RandomChance(40)) {
              msg ("<br/>The guard used a taser on you! Caleb yells in your ear while you're trying to figure out how to fight back.")
              damage_amount = secguard.atk+taser.atk
              damage_player (damage_amount)
            }
            else {
              msg ("<br/>The guard attacked you bare-handed! Yikes!")
              damage_amount = secguard.atk
              damage_player (damage_amount)
            }
          }
          else if (Contains (secguard,taser2)) {
            if (RandomChance(40)) {
              msg ("<br/>The guard used a taser on you! Caleb yells in your ear while you're trying to figure out how to fight back.")
              damage_amount = secguard.atk+taser2.atk
              damage_player (damage_amount)
            }
            else {
              msg ("<br/>The guard attacked you bare-handed! Yikes!")
              damage_amount = secguard.atk
              damage_player (damage_amount)
            }
          }
        }
      }
    ]]></script>
  </timer>
  <timer name="auto_attack1">
    <interval>10</interval>
    <script><![CDATA[
      if (not GetBoolean(secguard_2, "dead")) {
        if (secguard_2.health > 0) {
          if (Contains (secguard_2,baton)) {
            if (RandomChance(55)) {
              msg ("<br/>The officer clubs you with his baton. Instead of breaking on your arm, it zaps you with electricity! Caleb gives a little scream while you're still stunned by the idea of a lightning baton.")
              damage_amount = 45
              damage_player (damage_amount)
            }
            else {
              msg ("<br/>The officer clubs you with his baton. It doesn't break against Caleb's android body, but it does some wicked damage, considering the power of that blow. It even caused some System Damage!")
              damage_amount = baton.atk
              damage_player (damage_amount)
              player.damage = player.damage+1
            }
          }
          else if (Contains (secguard_2,baton1)) {
            if (RandomChance(55)) {
              msg ("<br/>The officer clubs you with his baton. Instead of breaking on your arm, it zaps you with electricity! Caleb gives a little scream while you're still stunned by the idea of a lightning baton.")
              damage_amount = 45
              damage_player (damage_amount)
            }
            else {
              msg ("<br/>The officer clubs you with his baton. It doesn't break against Caleb's android body, but it does some wicked damage, considering the power of that blow. It even caused some System Damage!")
              damage_amount = baton1.atk
              damage_player (damage_amount)
              player.damage = player.damage+1
            }
          }
        }
      }
    ]]></script>
  </timer>
  <timer name="removal1">
    <interval>10</interval>
    <script><![CDATA[
      if (GetBoolean(secguard_2, "dead")) {
        if (player.parent = secguard_2.parent) {
          msg ("<br/>The body suddenly vanishes in a burst of light. While you're blinking away the spots in your eyes, Caleb just makes a small huffing sound.")
          MoveObject (secguard_2, hidden_inv)
          if (RandomChance(70)) {
            if (not Got(earth_keycard)) {
              msg ("<br/>A small <color color=\"Red\">object</color> was left behind when the officer vanished. Looks like a keycard.")
              MakeObjectVisible (earth_keycard)
            }
          }
        }
        else {
          MoveObject (sec_guard2, hidden_inv)
        }
        SetObjectFlagOff (secguard_2, "dead")
        secguard_2.health = 150
        if (Contains (secguard_2,baton)) {
          baton.scenery = True
        }
        else if (not Contains (secguard_2,baton)) {
          MoveObject (baton1, secguard_2)
        }
        DisableTimer (removal1)
      }
    ]]></script>
  </timer>
  <timer name="health_check">
    <interval>3</interval>
    <enabled type="boolean">false</enabled>
    <script><![CDATA[
      if (player.health < 100) {
        if (Got(wonder_fork)) {
          if (not GetBoolean(player, "frst_teleport")) {
            ClearScreen
            MoveObject (player, duplicatestarting)
            DisableTimer (health_check)
            DisableTimer (auto_attack1)
            DisableTimer (auto_attack2)
            DisableTimer (auto_attack3)
            DisableTimer (auto_attack)
            DisableTimer (auto_attack4)
            DisableTimer (auto_attack5)
            msg ("<br/>A blast of white smoke suddenly fills your vision, blinding you for a few seconds. When it clears, you find yourself in a recognizable place.<br/><br/>\"What happened?!\" you exclaim in surprise.<br/><br/><i>(A fail-safe, I would assume.)</i> Caleb murmurs breathlessly, <i>(Although my <color color=\"Red\">health</color> isn't as vital to me as my System Damages, I do still need enough of it to maintain this connection to you, " + player.playername + ".)</i><br/><br/>\"Oh, I guess that's not so bad. We just get teleported when you're in danger, huh?\" you comment idly.<br/><br/><i>(Yes, because if my health drops to 0 while you're connected to me, the force feedback could fry your brain.)</i> the android agrees. You gulp and laugh nervously. Well, when he puts it that way....")
            wait {
              MoveObject (player, startingroom)
              SetObjectFlagOn (player, "frst_teleport")
              player.health = 100
              EnableTimer (health_check)
            }
          }
          else {
            ClearScreen
            MoveObject (player, duplicatestarting)
            DisableTimer (health_check)
            DisableTimer (auto_attack1)
            DisableTimer (auto_attack2)
            DisableTimer (auto_attack3)
            DisableTimer (auto_attack)
            msg ("<br/>A blast of white smoke suddenly fills your vision, blinding you for a few seconds. When it clears, you find yourself in a recognizable place.<br/><br/>\"Darn it! Not again!\" you gripe under your breath, glaring around yourself.<br/><br/><i>(Please try to be a bit more careful in the future.)</i> Caleb sighs in response.")
            wait {
              MoveObject (player, startingroom)
              player.health = 100
              EnableTimer (health_check)
            }
          }
        }
        else {
          if (not GetBoolean(player, "frst_capture")) {
            ClearScreen
            MoveObject (player, duplicatestarting)
            DisableTimer (health_check)
            DisableTimer (auto_attack1)
            DisableTimer (auto_attack)
            DisableTimer (auto_attack2)
            DisableTimer (auto_attack3)
            DisableTimer (auto_attack4)
            DisableTimer (auto_attack5)
            msg ("<br/><i>(Neural Link overload imminent. Shutting down connection.)</i> Caleb growls just before the visor blinks out and the screen goes dark. Huh? Did you get a game over? You push the visor up and rub at your eyes, feeling a bit disoriented now that all you see is your computer and your house.<br/><br/>That's dumb. You're not anywhere near done with the game, how could it kick you out like that when you still had a little bit of health left? Oh well. You decide to take a little break to tend to some basic needs before coming back to the game.<br/><br/>You're only gone for a few minutes, then it's back in your chair and visor on to restart the Remote Link, hoping this thing auto-saves because there wasn't an option anywhere you could find.<br/><br/>When the link comes back on, you're startled to find yourself back where everything started, the Aqua Lab. Or at least, that's what it looks like; you're kind of curled up on the floor with your hands tied behind your back so it's a bit hard to really see.<br/><br/><i>(Welcome back, " + player.playername + ".)</i> Caleb remarks dryly, <i>(As you can see, I've been recaptured and forced back here while I was immobilized. Please try to be more careful with me!)</i><br/><br/>\"Sorry.\" you grumble, breaking the bonds easily and standing back up.")
            wait {
              ClearScreen
              SetObjectFlagOn (player, "frst_capture")
              MoveObject (player, startingroom)
              player.health = 100
              EnableTimer (health_check)
            }
          }
          else {
            ClearScreen
            MoveObject (player, duplicatestarting)
            DisableTimer (health_check)
            DisableTimer (auto_attack1)
            DisableTimer (auto_attack)
            DisableTimer (auto_attack2)
            DisableTimer (auto_attack3)
            DisableTimer (auto_attack4)
            DisableTimer (auto_attack5)
            msg ("<br/>The screen and visor suddenly shut off again and you sit back with a harsh growl, rubbing your eyes under the visor. You didn't mean to get caught off guard that badly again, and Caleb's probably going to be pretty peeved about being thrown back into the Aqua Lab.<br/><br/>You still don't get how the game can do that, or how Caleb can even remember it, when it goes all FUBAR like that without saving.<br/><br/>\"Okay, this time for sure!\" you tell yourself firmly and pull the visor back down, restarting the Remote Link.")
            wait {
              ClearScreen
              MoveObject (player, startingroom)
              player.health = 100
              EnableTimer (health_check)
            }
          }
        }
      }
    ]]></script>
  </timer>
  <timer name="damage_check">
    <interval>20</interval>
    <enabled type="boolean">false</enabled>
    <script><![CDATA[
      if (player.damage >= 70) {
        if (RandomChance(50)) {
          msg ("<br/>Your field of vision flickers a little and Caleb mutters irritably in sotto. It might be a good idea to repair these damages. Soon.")
        }
        else {
          msg ("<br/>Your field of vision skews and sometimes gets covered with static. Caleb whimpers softly, worriedly, and it really sounds like he's afraid of what's going on. Maybe you should get these damages repaired soon.")
        }
      }
      else if (player.damage >=80) {
        ClearScreen
        msg ("The visor suddenly blinks out and you find yourself looking at a blank screen, both in the visor and on your computer screen. Looks like you took too much damage and got a game over, but you didn't get any kind of warning or even a typical 'Game Over' screen. You try clicking around on the black screen to restart the game, but nothing happens.<br/><br/>Fed up with the game crash and lack of response, you decide to just unplug the drive and visor and toss them in your room to deal with later.<br/><br/>A couple days later, you're watching the news with your mom, watching in shock as a blonde madman sets off an Extinction Level Event to wipe out the human race, laughing at the cameras all pointed at him. As bad as that is, your attention is riveted on the figure slumped in a chair behind the nut.<br/><br/>A familiar red-haired young man in green clothes, exactly like Caleb from the game, sits lifelessly in that chair. Maybe... it <b>wasn't</b> a game after all...?")
        SetFontSize (16)
        PrintCentered ("Game Over")
        finish
      }
    ]]></script>
  </timer>
  <timer name="auto_attack2">
    <interval>8</interval>
    <script><![CDATA[
      if (not GetBoolean(lab_geek, "defeated")) {
        if (lab_geek.health > 0) {
          msg ("<br/>The lab geek keeps flailing around!")
          damage_amount = lab_geek.atk
          damage_player (damage_amount)
        }
      }
    ]]></script>
  </timer>
  <timer name="closet_panic">
    <interval>11</interval>
    <script><![CDATA[
      if (player.parent = blueroom) {
        if (Contains (blue_closet,lab_geek)) {
          msg ("<br/>There's a faint sound of shuffling cloth coming from the closet.")
        }
      }
    ]]></script>
  </timer>
  <timer name="removal2">
    <interval>10</interval>
    <script><![CDATA[
      if (GetBoolean(secguard_3, "dead")) {
        if (player.parent = secguard_3.parent) {
          msg ("<br/>The body suddenly vanishes in a burst of light. While you're blinking away the spots in your eyes, Caleb just makes a small huffing sound.<br/><br/>It looks like a small <color color=\"Red\">object</color> was left behind.")
          RemoveObject (secguard_3)
          MakeObjectVisible (security_keycard)
          MoveObject (security_keycard, player.parent)
        }
        else {
          RemoveObject (secguard_3)
          MakeObjectVisible (security_keycard)
          MoveObject (security_keycard, secguard_3.parent)
        }
        DisableTimer (removal2)
      }
    ]]></script>
  </timer>
  <timer name="removal3">
    <interval>8</interval>
    <script><![CDATA[
      if (GetBoolean(miniboss_1, "dead")) {
        if (player.parent = miniboss_1.parent) {
          msg ("<br/>The body suddenly vanishes in a burst of light. While you're blinking away the spots in your eyes, Caleb gives a little sigh of relief.<br/><br/>It looks like a small <color color=\"Red\">object</color> was left behind.")
          RemoveObject (miniboss_1)
          MakeObjectVisible (copper_keycard)
          DisableTimer (removal3)
        }
        else {
          RemoveObject (miniboss_1)
          MakeObjectVisible (copper_keycard)
          DisableTimer (removal3)
        }
      }
    ]]></script>
  </timer>
  <timer name="auto_attack3">
    <interval>8</interval>
    <script><![CDATA[
      if (not GetBoolean(miniboss_1, "dead")) {
        if (miniboss_1.health > 0) {
          msg ("<br/>The Elite is pressing his attack, whether you're ready or not!")
          damage_amount = miniboss_1.atk
          damage_player (damage_amount)
        }
      }
    ]]></script>
  </timer>
  <timer name="auto_attack4">
    <interval>10</interval>
    <script><![CDATA[
      if (not GetBoolean(sec_chief, "dead")) {
        if (sec_chief.health > 0) {
          msg ("<br/>The chief attacks you!")
          if (Contains (sec_chief,taser1)) {
            if (RandomChance(40)) {
              msg ("<br/>The chief used a taser on you! Caleb yells in your ear while you're trying to figure out how to fight back.")
              damage_amount = secguard.atk+taser1.atk
              damage_player (damage_amount)
            }
            else {
              msg ("<br/>The chief attacked you bare-handed! Yikes!")
              damage_amount = sec_chief.atk
              damage_player (damage_amount)
            }
          }
          else if (Contains (sec_chief,taser3)) {
            if (RandomChance(40)) {
              msg ("<br/>The chief used a taser on you! Caleb yells in your ear while you're trying to figure out how to fight back.")
              damage_amount = secguard.atk+taser3.atk
              damage_player (damage_amount)
            }
            else {
              msg ("<br/>The chief attacked you bare-handed! Yikes!")
              damage_amount = secguard.atk
              damage_player (damage_amount)
            }
          }
        }
      }
    ]]></script>
  </timer>
  <timer name="removal4">
    <interval>10</interval>
    <script><![CDATA[
      if (GetBoolean(sec_chief, "dead")) {
        if (player.parent = sec_chief.parent) {
          msg ("<br/>The body suddenly vanishes in a burst of light. Somehow, that doesn't make you feel any better about this.")
          MoveObject (sec_chief, hidden_inv)
          DisableTimer (removal4)
        }
        else {
          MoveObject (sec_chief, hidden_inv)
          DisableTimer (removal4)
        }
      }
    ]]></script>
  </timer>
  <timer name="security1">
    <interval>20</interval>
    <script><![CDATA[
      if (RandomChance(50)) {
        MoveObject (sec_chief, player.parent)
        msg ("<br/>\"Halt right there!\" A security chief is yelling as he runs up to you. Uh-oh! You must have taken too long to get anywhere.")
        DisableTimer (security1)
        EnableTimer (auto_attack4)
      }
      else {
        msg ("<i>(" + player.playername + ", I believe we are still very much exposed here. Have you decided where to go next?)</i> Caleb warns after a little while.")
      }
    ]]></script>
  </timer>
  <timer name="labstaff">
    <interval>20</interval>
    <script><![CDATA[
      if (RandomChance(50)) {
        MoveObject (lab_assist, player.parent)
        msg ("<br/>\"Oh, you! If I take you in, I'll get promoted to head of R&D!\" a lab assistant declares as he charges at you. Oops, took too long to get anywhere!")
        DisableTimer (labstaff)
        EnableTimer (auto_attack5)
      }
      else if (sec_chief.parent = player.parent) {
        MoveObject (lab_assist, player.parent)
        msg ("<br/>\"Oh, you! If we take you in, I'll get promoted to head of R&D!\" a lab assistant declares as he charges at you. Drats! You're taking too long to deal with mooks in this hall!")
        DisableTimer (labstaff)
        EnableTimer (auto_attack5)
      }
      else {
        msg ("<i>(" + player.playername + ", I believe we are still very much exposed here. Have you decided where to go next?)</i> Caleb warns after a little while.")
      }
    ]]></script>
  </timer>
  <timer name="removal5">
    <interval>10</interval>
    <script><![CDATA[
      if (GetBoolean(lab_assist, "dead")) {
        if (player.parent = lab_assist.parent) {
          msg ("<br/>The body suddenly vanishes in a burst of light. Somehow, that doesn't make you feel any better about this.")
          MoveObject (lab_assist, hidden_inv)
          DisableTimer (removal5)
        }
        else {
          MoveObject (lab_assist, hidden_inv)
          DisableTimer (removal5)
        }
      }
    ]]></script>
  </timer>
  <timer name="auto_attack5">
    <interval>10</interval>
    <script><![CDATA[
      if (not GetBoolean(lab_assist, "dead")) {
        if (lab_assist.health > 0) {
          msg ("<br/>The lab assistant attacks you!")
          if (Contains (lab_assist,taser4)) {
            if (RandomChance(40)) {
              msg ("<br/>The lab assistant used a taser on you! Caleb yells in your ear while you're trying to figure out how to fight back.")
              damage_amount = lab_assist.atk+taser4.atk
              damage_player (damage_amount)
            }
            else {
              msg ("<br/>The lab assistant attacked you bare-handed! Yikes!")
              damage_amount = lab_assist.atk
              damage_player (damage_amount)
            }
          }
          else if (Contains (lab_assist,taser5)) {
            if (RandomChance(40)) {
              msg ("<br/>The lab assistant used a taser on you! Caleb yells in your ear while you're trying to figure out how to fight back.")
              damage_amount = lab_assist.atk+taser5.atk
              damage_player (damage_amount)
            }
            else {
              msg ("<br/>The lab assistant attacked you bare-handed! Yikes!")
              damage_amount = lab_assist.atk
              damage_player (damage_amount)
            }
          }
        }
      }
    ]]></script>
  </timer>
</asl>