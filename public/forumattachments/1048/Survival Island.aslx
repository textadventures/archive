<!--Saved by Quest 5.5.5328.26617-->
<asl version="550">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <include ref="StackLibrary.aslx" />
  <game name="Survival Island">
    <gameid>78d569e0-d5fe-4b3e-9e3b-584f2b3835f5</gameid>
    <version>0.1</version>
    <firstpublished>2014</firstpublished>
    <feature_limitinventory />
    <setcustomwidth type="boolean">false</setcustomwidth>
    <setcustompadding type="boolean">false</setcustompadding>
    <gridmap type="boolean">false</gridmap>
    <attr name="feature_pictureframe" type="boolean">false</attr>
    <feature_lightdark />
    <difficulty>Medium</difficulty>
    <cruelty>Tough</cruelty>
    <attr name="autodescription_youarein_newline" type="boolean">false</attr>
    <attr name="autodescription_youcansee_newline" type="boolean">false</attr>
    <attr name="autodescription_description_newline" type="boolean">false</attr>
    <attr name="autodescription_youcango_newline" type="boolean">false</attr>
    <category>Simulation</category>
    <description><![CDATA[Days have gone by since you went on a cruise, crashing into a government asylum they do every thing to cover up the cruise wrekage.<br/>With no body looking for survivors it is up to you to survive. How many days will you survive on the Island? Use your knowledge to craft and build <br/>from resources around the Island, use traps to capture animals and fire to cook them with.  Use campfires and get creative to make you <br/>a water container to boil some water to drink, also use the campfires and cabin to reduce you exposer to the elements.]]></description>
    <author>Michael Oldham</author>
    <cover>Help-Castaway.jpg</cover>
    <backgroundimage type="string"></backgroundimage>
    <setbackgroundopacity />
    <backgroundopacity type="double">0.3</backgroundopacity>
    <attr name="campfire present" type="boolean">false</attr>
    <povstatusattributes type="stringdictionary" />
    <subtitle>Exposed</subtitle>
    <appendobjectdescription />
    <command_newline />
    <echohyperlinks />
    <autodisplayverbs />
    <attr name="autodescription_youcansee" type="int">3</attr>
    <attr name="autodescription_youcango" type="int">4</attr>
    <attr name="autodescription_description" type="int">2</attr>
    <attr name="autodescription_youarein" type="int">1</attr>
    <pov type="object">player</pov>
    <start type="script">
    </start>
    <attr name="fire sound" type="script">
      if (game.pov.parent = basic campfire) {
        if (basic campfire.lightsource = True) {
          play sound ("large_fire_burning.mp3", false, true)
        }
      }
    </attr>
    <object name="foods stuff">
      <inherit name="editor_room" />
      <object name="deer meat">
        <inherit name="editor_object" />
        <take />
        <eat type="script">
          effectsmenu = NewStringList()
          list add (effectsmenu, "Yes")
          list add (effectsmenu, "No")
          ShowMenu ("You could get food posioning from eating raw food, do you still want to eat it?", effectsmenu, false) {
            if (result="Yes") {
              DecreaseObjectCounter (deer meat, "volume")
              player.Hunger = player.Hunger + 3
              player.Thirst = player.Thirst - 4
              EnableTimer (posined timer)
              msg ("God thats awful.")
            }
            else if (result="No") {
              msg ("Smart might want to cook it first.")
            }
          }
        </eat>
      </object>
      <object name="coffee">
        <inherit name="editor_object" />
      </object>
      <object name="tea">
        <inherit name="editor_object" />
      </object>
      <object name="eggs">
        <inherit name="editor_object" />
        <take />
        <eat type="script">
          effectsmenu = NewStringList()
          list add (effectsmenu, "Yes")
          list add (effectsmenu, "No")
          ShowMenu ("You might get food posioning.. You sure you want to eat it?", effectsmenu, false) {
            if (result="Yes") {
              DecreaseObjectCounter (eggs, "volume")
              IncreaseObjectCounter (player, "Hunger")
              EnableTimer (posined timer)
              msg ("God thats awful.")
            }
            else if (result="No") {
              msg ("Smart might want to cook it first.")
            }
          }
        </eat>
      </object>
      <object name="bacon_eggs">
        <inherit name="editor_object" />
        <alias>bacon and eggs</alias>
        <eat type="script"><![CDATA[
          DecreaseObjectCounter (bacon_eggs, "volume")
          if (GetInt(player, "Health") < 96) {
            player.Health = player.Health + 4
            player.Hunger = player.Hunger + 8
            player.Thirst = player.Thirst - 3
            msg ("Mmmm, bacon and eggs taste great.")
          }
        ]]></eat>
      </object>
      <object name="boar meat">
        <inherit name="editor_object" />
        <take />
        <eat type="script">
          effectsmenu = NewStringList()
          list add (effectsmenu, "Yes")
          list add (effectsmenu, "No")
          ShowMenu ("You have a chance of food posioning if you eat this, do you want to eat it?", effectsmenu, false) {
            if (result="Yes") {
              DecreaseObjectCounter (boar meat, "volume")
              player.Hunger = player.Hunger + 5
              player.Thirst = player.Thirst - 4
              EnableTimer (posined timer)
              msg ("God thats awful.")
            }
            else if (result="No") {
              msg ("Smart might want to cook it first.")
            }
          }
        </eat>
      </object>
      <object name="rabbit meat">
        <inherit name="editor_object" />
        <take />
        <eat type="script">
          effectsmenu = NewStringList()
          list add (effectsmenu, "Yes")
          list add (effectsmenu, "No")
          ShowMenu ("The effects, you will lose 4 health and 2 thirst but gain 2 hunger. You sure you want to eat it?", effectsmenu, false) {
            if (result="Yes") {
              DecreaseObjectCounter (rabbit meat, "volume")
              player.Hunger = player.Hunger + 2
              player.Thirst = player.Thirst - 2
              EnableTimer (posined timer)
              msg ("God thats awful.")
            }
            else if (result="No") {
              msg ("Smart might want to cook it first.")
            }
          }
        </eat>
      </object>
      <object name="coffee beans">
        <inherit name="editor_object" />
      </object>
      <object name="deer steak">
        <inherit name="editor_object" />
      </object>
    </object>
    <object name="resourses">
      <inherit name="editor_room" />
      <object name="iron scrap">
        <inherit name="editor_object" />
        <volume type="int">1</volume>
        <take />
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
        </inventoryverbs>
        <scenery type="boolean">false</scenery>
        <inroomdescription>"You have" + iron scrap.volume + "scrap pieces."</inroomdescription>
      </object>
      <object name="canteen">
        <inherit name="editor_object" />
        <inherit name="container_limited" />
        <take />
        <volume type="int">1</volume>
        <feature_container />
        <isopen type="boolean">false</isopen>
        <maxvolume type="int">20</maxvolume>
        <listchildren />
        <feature_usegive />
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
        </inventoryverbs>
        <drink type="script">
          if (Contains (canteen,water)) {
          }
        </drink>
      </object>
      <object name="stick">
        <inherit name="editor_object" />
        <take />
        <feature_usegive />
        <volume type="int">0</volume>
        <look type="script">
          if (Got(this)) {
            msg ("You have" + stick.volume + "sticks left.")
          }
          else {
            picture ("stick.jpg")
          }
        </look>
        <craft type="script">
          stickmenu = NewStringList()
          list add (stickmenu, "handle")
          list add (stickmenu, "sharpened sticks")
          list add (stickmenu, "torch")
          list add (stickmenu, "tent frame")
          ShowMenu ("What would you like to craft?", stickmenu, true) {
            if (result="handle") {
              handle crafting
            }
            if (result="torch") {
              torch crafting
            }
            if (result="tent frame") {
              tent frame crafting
            }
            else if (result="sharpened sticks") {
            }
          }
        </craft>
      </object>
      <object name="leaves">
        <inherit name="editor_object" />
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
        </inventoryverbs>
        <take />
        <volume type="int">1</volume>
        <inroomdescription type="string"></inroomdescription>
        <look type="script">
          msg ("You have" + leaves.volume + "leaves.")
        </look>
      </object>
      <object name="boar">
        <inherit name="editor_object" />
      </object>
      <object name="fallen tree">
        <inherit name="editor_object" />
        <inherit name="enviroment" />
        <health type="int">5</health>
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
        </inventoryverbs>
        <chop type="script"><![CDATA[
          if (Got(stone axe)) {
            if (GetInt(fthis, "health") >= 4) {
              DecreaseObjectCounter (this, "health")
              play sound ("tree_branch_fall_on_leaves_and_twigs.mp3", true, false)
              adding leaves
            }
            else if (GetInt(this, "health") <= 3) {
              play sound ("hammer_hitting_nail_into_wood.mp3", true, false)
              DecreaseObjectCounter (this, "health")
              DecreaseObjectCounter (stone axe, "weapon health")
            }
          }
          else if (not Got(stone axe)) {
            msg ("Ok so I chop this with my hands?")
          }
          if (GetInt(this, "health") <= 0) {
            adding trunks
            tree health value
          }
        ]]></chop>
      </object>
      <object name="flint">
        <inherit name="editor_object" />
        <volume type="int">1</volume>
        <take />
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
        </inventoryverbs>
        <inroomdescription>"You have" + flint.volume + "pieces of flint."</inroomdescription>
      </object>
      <object name="coal">
        <inherit name="editor_object" />
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
        </inventoryverbs>
        <volume type="int">0</volume>
        <inroomdescription>"You have" + coal.volume + "pieces of coal."</inroomdescription>
        <take />
        <ontake type="script">
          MoveObject (coal, stash)
          adding coal pieces
        </ontake>
      </object>
      <object name="bamboo stalks">
        <inherit name="editor_object" />
        <inroomdescription type="string"></inroomdescription>
        <take />
        <craft type="script">
          if (Got(stone knife)) {
            play sound ("", true, false)
          }
        </craft>
        <look type="script">
          msg ("You have" + bamboo stalks.volume + "bamboo stalks left.")
        </look>
      </object>
      <object name="drinking water">
        <inherit name="editor_object" />
        <volume type="int">0</volume>
        <inroomdescription type="string"></inroomdescription>
        <look type="script">
          msg ("You have" + drinking water.volume + "liters of water.")
        </look>
      </object>
      <object name="coal pieces">
        <inherit name="editor_object" />
        <take />
      </object>
      <object name="feathers">
        <inherit name="editor_object" />
        <inherit name="childstack_object" />
        <take />
        <volume type="int">0</volume>
        <inroomdescription>"You have" + feathers.volume + "feathers left."</inroomdescription>
        <stackparent type="object">storage chest</stackparent>
      </object>
    </object>
    <object name="craftable matirel">
      <inherit name="editor_room" />
      <object name="wood stuff">
        <inherit name="editor_room" />
        <object name="tent frame">
          <inherit name="editor_object" />
          <take />
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <attr name="feature_usegive" type="boolean">false</attr>
          <look>Multiple sticks tied together in a frame ready to have a cover around it.</look>
          <inroomdescription>There is a tent frame sitting here, some cloth and you could have a shelter.</inroomdescription>
          <upgrade type="script"><![CDATA[
            if (Got(canvas)) {
              if (Got(rope)) {
                if (GetInt(rope, "volume") >= 3) {
                  MoveObject (canvas, stash)
                  rope.volume = rope.volume - 3
                  nomore rope
                  MoveObject (tent frame, stash)
                  MoveObjectHere (tent)
                  msg ("Very nice now you have a homestead.")
                }
                else if (GetInt(rope, "volume") < 3) {
                  msg ("Not going to tie any thing don with that little bit of rope.")
                }
              }
              else if (not Got(rope)) {
                msg ("Helps to have some thing to tie canvas down with.")
              }
            }
            else if (not Got(canvas)) {
              msg ("You need a canvas to tie down around the frame, best bet is some sort of cloth.")
            }
          ]]></upgrade>
        </object>
        <object name="handle">
          <inherit name="editor_object" />
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <inroomdescription>"You have" + handle.volume + "handles left."</inroomdescription>
          <combine type="script"><![CDATA[
            if (Got(handle)) {
              if (Got(rope)) {
                if (GetInt(rope, "volume") >= 3) {
                  rope.volume = rope.volume - 3
                  MoveObject (handle, stash)
                  AddToInventory (man catcher)
                  nomore rope
                  msg ("Man catcher crafted now you have a way to tie up that stone for a makeshift hatchet.")
                }
                else if (GetInt(rope, "volume") < 3) {
                  msg ("If you had more rope you could craft a man catcher.")
                }
              }
              else if (not Got(rope)) {
                msg ("Helps to have some rope to make a mancatcher.")
              }
            }
            else if (not Got(handle)) {
              msg ("Would be nice if you had some sort of a handle to craft this.")
            }
          ]]></combine>
        </object>
        <object name="storage crate">
          <inherit name="editor_object" />
          <inherit name="container_limited" />
          <feature_container />
          <isopen type="boolean">false</isopen>
          <maxobjects type="int">9</maxobjects>
          <maxvolume type="int">50</maxvolume>
          <listchildren />
          <volume type="int">15</volume>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
        </object>
        <object name="wood frame">
          <inherit name="editor_object" />
          <inventoryverbs type="stringlist">
            <value>Drop</value>
            <value>Look At</value>
          </inventoryverbs>
          <take />
          <volume type="int">5</volume>
          <feature_usegive />
          <craft type="script">
            frame crafting
          </craft>
          <look type="script">
            msg ("You have " + wood frame.volume + "frames.")
          </look>
          <upgrade type="script">
            wood_frame_upgrade
          </upgrade>
        </object>
        <object name="wood wall">
          <inherit name="editor_object" />
          <volume type="int">20</volume>
          <feature_usegive />
          <look type="script">
            msg ("You have " + wood wall.volume + "sections of wall.")
          </look>
        </object>
        <object name="fortify wood">
          <inherit name="editor_object" />
          <inherit name="enviroment" />
          <health type="int">25</health>
          <attr name="max_health" type="int">25</attr>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <upgrade type="script">
            wood_frame_upgrade_1
          </upgrade>
        </object>
        <object name="fortified wood 1">
          <inherit name="editor_object" />
          <inherit name="enviroment" />
          <health type="int">60</health>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <upgrade type="script"><![CDATA[
            if (Got(planks)) {
              if (GetInt(planks, "volume") >= 4) {
                MoveObject (fortified wood 1, stash)
                play sound ("hammer_hitting_nail_into_wood.mp3", true, false)
                DecreaseObjectCounter (planks, "volume")
                DecreaseObjectCounter (planks, "volume")
                DecreaseObjectCounter (planks, "volume")
                DecreaseObjectCounter (planks, "volume")
                MoveObjectHere (crafting table)
                msg ("Now you have many more craftable items you can make.<br/>Note only 1 craft table maybe made at any given time.")
              }
              else if (GetInt(planks, "volume") < 4) {
                msg ("You need more planks to craft this table.")
              }
            }
            else if (not Got(planks)) {
              msg ("You need to get some planks before you start this craft.")
            }
          ]]></upgrade>
        </object>
        <object name="planks">
          <inherit name="editor_object" />
          <volume type="int">3</volume>
          <attr name="max volume" type="boolean">false</attr>
          <take />
          <feature_usegive />
          <look type="script">
            msg ("You have " + planks.volume + "planks of wood.")
          </look>
          <craft type="script">
            plank crafting
          </craft>
        </object>
        <object name="small cabin">
          <inherit name="container_limited" />
          <dark />
          <volume type="int">30</volume>
          <feature_container />
          <maxobjects type="int">3</maxobjects>
          <maxvolume type="int">100</maxvolume>
          <transparent type="boolean">false</transparent>
          <isopen type="boolean">false</isopen>
          <attr name="grid_parent_offset_auto" type="boolean">false</attr>
          <attr name="grid_parent_offset_x" type="int">1</attr>
          <attr name="grid_parent_offset_y" type="int">-1</attr>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <ondrop type="script">
            play sound ("hammer_hitting_nail_into_wood.mp3", true, false)
            msg ("You build a nice little cabin from the resources you gathered.")
          </ondrop>
          <onopen type="script">
          </onopen>
        </object>
        <object name="sharp sticks">
          <inherit name="editor_object" />
          <inroomdescription>"You have" + sharp sticks.volume + "sharp sticks left."</inroomdescription>
        </object>
        <object name="bamboo cup">
          <inherit name="editor_object" />
          <inherit name="container_limited" />
          <feature_container />
          <close type="boolean">false</close>
          <open type="boolean">false</open>
          <maxvolume type="int">20</maxvolume>
          <containermaxobjects>You know nomore water can fit in there.</containermaxobjects>
          <take />
          <volume type="int">3</volume>
          <inroomdescription type="string"></inroomdescription>
          <displayverbs type="stringlist">
            <value>Look at</value>
            <value>Take</value>
          </displayverbs>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <fillwithwater type="script">
            if (pond.room = game.pov.room) {
              adding drinking water
            }
            else {
              msg ("Fill it with what? Grass?")
            }
          </fillwithwater>
          <drink type="script"><![CDATA[
            if (Contains (bamboo cup,drinking water)) {
              if (GetInt(drinking water, "volume") >= 5) {
                play sound ("drink_slurp_from_cup_001.mp3", true, false)
                DecreaseObjectCounter (drinking water, "volume")
                DecreaseObjectCounter (drinking water, "volume")
                DecreaseObjectCounter (drinking water, "volume")
                DecreaseObjectCounter (drinking water, "volume")
                DecreaseObjectCounter (drinking water, "volume")
                IncreaseObjectCounter (player, "Thirst")
                IncreaseObjectCounter (player, "Thirst")
                IncreaseObjectCounter (player, "Thirst")
                nomore drinking water
              }
            }
          ]]></drink>
          <look type="script">
            picture ("bamboo cup.jpg")
            msg ("Its a decently crafted cuo out of bamboo.")
          </look>
        </object>
        <object name="tree trunks">
          <inherit name="editor_object" />
          <volume type="int">0</volume>
          <attr name="max volume" type="boolean">false</attr>
          <feature_usegive />
          <take />
          <craft type="script">
            if (Got(tree trunks)) {
              trunk crafting
            }
            else if (not Got(tree trunks)) {
              msg ("You must have in inventory to craft.")
            }
          </craft>
          <look type="script">
            msg ("You have " + tree trunks.volume + "trunks left.")
          </look>
          <ontake type="script">
          </ontake>
        </object>
        <object name="storage chest">
          <inherit name="editor_object" />
          <inherit name="container_limited" />
          <feature_container />
          <isopen type="boolean">false</isopen>
          <maxobjects type="int">20</maxobjects>
          <maxvolume type="int">150</maxvolume>
          <volume type="int">8</volume>
          <attr name="feature_usegive" type="boolean">false</attr>
          <stacklimit type="int">20</stacklimit>
          <take type="boolean">false</take>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <look><![CDATA[It's a storage chest to put and store items away to keep your inventory from being to cluttered.<br/><br/>Use (put item in storage chest) as command to store items.]]></look>
          <onopen type="script">
            play sound ("1103114_SOUNDDOGS__ch.mp3", true, false)
          </onopen>
          <onclose type="script">
            play sound ("320915_SOUNDDOGS__ch.mp3", true, false)
          </onclose>
          <ondrop type="script">
            SetObjectFlagOn (storage chest, "placed")
          </ondrop>
          <addtochest type="scriptdictionary">
            <item key="arrows">
              MoveObject (arrows, storage chest)
              msg ("Arrows moved!")
            </item>
            <item key="feathers">
              MoveObject (feathers, storage chest)
              msg ("Feathers moved!")
            </item>
            <item key="bamboo cup">
              MoveObject (bamboo cup, storage chest)
              msg ("Bamboo cup moved!")
            </item>
            <item key="bamboo stalks">
              MoveObject (bamboo stalks, storage chest)
              msg ("Bamboo stalks moved!")
            </item>
            <item key="boar meat">
              MoveObject (boar meat, storage chest)
              msg ("Boar meat moved!")
            </item>
            <item key="bow">
              MoveObject (bow, storage chest)
              msg ("Bow moved!")
            </item>
            <item key="cloth">
              MoveObject (cloth, storage chest)
              msg ("Cloth moved!")
            </item>
            <item key="coal pieces">
              MoveObject (coal pieces, storage chest)
              msg ("Coal pieces moved!")
            </item>
            <item key="coffee">
              MoveObject (coffee, storage chest)
              msg ("Coffee moved!")
            </item>
            <item key="coffee beans">
              MoveObject (coffee beans, storage chest)
              msg ("Coffee beans moved!")
            </item>
            <item key="cross bow">
              MoveObject (cross bow, storage chest)
              msg ("Crossbow moved!")
            </item>
            <item key="deer meat">
              MoveObject (deer meat, storage chest)
              msg ("Deer meat moved!")
            </item>
            <item key="deer steak">
              MoveObject (deer steak, storage chest)
              msg ("Deer steaks moved!")
            </item>
            <item key="dutch oven">
              MoveObject (dutch oven, storage chest)
              msg ("Dutch oven moved!")
            </item>
            <item key="eggs">
              MoveObject (eggs, storage chest)
              msg ("Eggs moved!")
            </item>
            <item key="fish">
              MoveObject (fish, storage chest)
              msg ("Fish moved!")
            </item>
            <item key="flint">
              MoveObject (flint, storage chest)
              msg ("Flint moved!")
            </item>
            <item key="flint_steel"><![CDATA[
              MoveObject (flint_steel, storage chest)
              msg ("Flint & Steel moved!")
            ]]></item>
            <item key="grill">
              MoveObject (grill, storage chest)
              msg ("Grill moved!")
            </item>
            <item key="rock">
              MoveObject (rock, storage chest)
              msg ("Rock moved!")
            </item>
            <item key="rock1">
              MoveObject (rock1, storage chest)
              msg ("Rock moved!")
            </item>
            <item key="rock2">
              MoveObject (rock2, storage chest)
              msg ("Rock moved!")
            </item>
            <item key="rock3">
              MoveObject (rock3, storage chest)
              msg ("Rock moved!")
            </item>
          </addtochest>
        </object>
        <object name="crafting table">
          <inherit name="editor_object" />
          <volume type="int">25</volume>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <inroomdescription>A crafting table sits in here.</inroomdescription>
          <alt type="stringlist">
            <value>work bench</value>
          </alt>
          <displayverbs type="stringlist">
            <value>Look at</value>
          </displayverbs>
          <linkcolour>Red</linkcolour>
          <craft type="script"><![CDATA[
            craftmenu = NewStringList()
            list add (craftmenu, "traps")
            list add (craftmenu, "tools")
            list add (craftmenu, "shelters")
            list add (craftmenu, "weapons")
            list add (craftmenu, "food & drinks")
            ShowMenu ("choose a category", craftmenu, true) {
              if (result="tools") {
                tool crafting
              }
              if (result="shelters") {
                shelter crafting
              }
              if (result="weapons") {
                weapon crafting
              }
              if (result="food & drinks") {
                food_drinks crafting
              }
              if (result="traps") {
                trap crafting
              }
            }
          ]]></craft>
          <look type="script">
            picture ("craft table.jpg")
            msg ("A very decent little crafting table.")
          </look>
        </object>
        <object name="basic campfire">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <feature_lightdark />
          <lightsource type="boolean">false</lightsource>
          <lightstrength>strong</lightstrength>
          <volume type="int">5</volume>
          <feature_container />
          <hidechildren />
          <ignite type="script">
            ignitemenu = NewStringList()
            list add (ignitemenu, "flint and steel")
            list add (ignitemenu, "sticks and leaves")
            list add (ignitemenu, "sticks and coal")
            ShowMenu ("Ignite with what?", ignitemenu, true) {
              if (result="sticks and leaves") {
                sticks_leaves fire
              }
              else if (result="sticks and coal") {
                sticks_coal fire
              }
              else if (result="flint and steel") {
                flint_steel fire
              }
            }
            if (basic campfire.lightsource = True) {
              msg ("Fire is lit add fuel to keep fire going.")
            }
          </ignite>
          <addwood type="script"><![CDATA[
            if (basic campfire.lightsource = True) {
              if (Got(tree trunks)) {
                SetTimerInterval (Fire Burning, 10)
                DecreaseObjectCounter (tree trunks, "volume")
                msg ("There that should last a little longer.")
                if (GetInt(tree trunks, "volume") <= 0) {
                  MoveObject (tree trunks, stash)
                  msg ("Out of trunks.")
                }
              }
              else if (not Got(tree trunks)) {
                msg ("You need a fuel sorce.")
              }
            }
            else if (basic campfire.lightsource = False) {
              msg ("You need to light the fire before you add a fuel source.")
            }
          ]]></addwood>
          <cook type="script">
            cookmenu = NewStringList()
            list add (cookmenu, "meat")
            list add (cookmenu, "liquid")
            ShowMenu ("What are you cooking?", cookmenu, true) {
              if (result="meat") {
              }
              else if (result="liquid") {
              }
            }
          </cook>
          <look type="script"><![CDATA[
            if (basic campfire.lightsource = True) {
              picture ("campfire.png")
              play sound ("large_fire_burning.mp3", false, false)
              msg ("Fire roaring, very toasty and cozy.")
            }
            else if (basic campfire.lightsource = False) {
              picture ("burntout campfire.png")
              msg ("Just a burnt out campfire. <br/>I bet more wood and a fire starter would get this pit back to life!")
            }
          ]]></look>
        </object>
      </object>
      <object name="weapons ammo">
        <inherit name="editor_room" />
        <object name="bow">
          <inherit name="editor_object" />
          <take />
          <volume type="int">4</volume>
          <shoot type="scriptdictionary">
            <item key="rabbit">
              if (Got(arrows)) {
                if (Got(bow)) {
                  if (RandomChance(30)) {
                    DisableTurnScript (rabbitmoves)
                    set (rabbit, "dead", True)
                  }
                  else {
                    msg ("You missed maybe next time.")
                  }
                }
              }
            </item>
            <item key="rabbit1">
              if (Got(arrows)) {
                if (Got(bow)) {
                  if (RandomChance(30)) {
                    DisableTurnScript (rabbitmoves1)
                  }
                  else {
                    msg ("You missed maybe next time.")
                  }
                }
              }
            </item>
            <item key="deer">
              if (Got(arrows)) {
                if (Got(bow)) {
                  if (RandomChance(30)) {
                    DisableTurnScript (deermoves)
                    set (deer, "dead", True)
                  }
                  else {
                    msg ("You missed maybe next time.")
                  }
                }
              }
            </item>
            <item key="deer1">
              if (Got(arrows)) {
                if (Got(bow)) {
                  if (RandomChance(30)) {
                    DisableTurnScript (deermoves1)
                    set (deer1, "dead", True)
                  }
                  else {
                    msg ("You missed maybe next time.")
                  }
                }
              }
            </item>
          </shoot>
        </object>
        <object name="cross bow">
          <inherit name="editor_object" />
        </object>
        <object name="man catcher">
          <inherit name="editor_object" />
          <volume type="int">2</volume>
        </object>
        <object name="arrows">
          <inherit name="editor_object" />
          <inroomdescription>"You have" + arrows.volume + "arrows left."</inroomdescription>
        </object>
        <object name="machete">
          <inherit name="editor_object" />
        </object>
        <object name="stone knife">
          <inherit name="editor_object" />
        </object>
        <object name="spear">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <feature_container />
          <listchildren />
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <take />
          <volume type="int">4</volume>
          <spearfish type="script">
            if (ListContains(ScopeVisible(), fish)) {
              if (RandomChance(75)) {
                set (fish, "dead", True)
                MoveObject (fish, spear)
              }
            }
          </spearfish>
        </object>
      </object>
      <object name="traps">
        <inherit name="editor_room" />
        <object name="net trap">
          <inherit name="editor_object" />
        </object>
        <object name="snare trap">
          <inherit name="editor_object" />
        </object>
        <object name="drop trap">
          <inherit name="editor_object" />
          <inherit name="container_closed" />
          <attr name="set trap" type="boolean">false</attr>
          <take />
          <volume type="int">10</volume>
          <feature_container />
          <listchildren />
          <attr name="trap set" type="int">0</attr>
          <ondrop type="script">
          </ondrop>
          <set type="script">
            if (not Got(drop trap)) {
              set (drop trap, "set trap", True)
              EnableTurnScript (trapset)
              msg ("Trap is set.")
            }
            else if (Got(drop trap)) {
              msg ("Helps to sit the trap down first.")
            }
          </set>
          <onopen type="script">
          </onopen>
        </object>
        <object name="camo pit trap">
          <inherit name="editor_object" />
        </object>
        <object name="pit">
          <inherit name="editor_object" />
          <camoflauge type="scriptdictionary">
            <item key="leaves"><![CDATA[
              if (Got(leaves)) {
                if (GetInt(leaves, "volume") >= 10) {
                  MoveObject (pit, stash)
                  MoveObjectHere (camo pit trap)
                }
                else if (GetInt(leaves, "volume") > 10) {
                  msg ("You need more leaves to cover the pit.")
                }
              }
              else if (not Got(leaves)) {
                msg ("Helps to have some foliage for a natural ground cover.")
              }
            ]]></item>
          </camoflauge>
        </object>
        <object name="hole">
          <spikepit type="scriptdictionary">
            <item key="sharp sticks">
              if (Got(pit spikes)) {
                MoveObject (pit spikes, stash)
                MoveObject (hole, stash)
                MoveObjectHere (pit)
              }
            </item>
          </spikepit>
        </object>
        <object name="pit spikes">
          <inherit name="editor_object" />
        </object>
        <object name="box trap">
          <inherit name="editor_object" />
          <inherit name="container_open" />
          <trapset type="boolean">false</trapset>
          <feature_container />
          <close type="boolean">false</close>
          <listchildren />
          <isopen type="boolean">false</isopen>
          <hidechildren />
          <inroomdescription type="string"></inroomdescription>
          <settrap type="script">
            if (Got(box trap)) {
              msg ("You need to place the trap first then set the trap.")
            }
            else if (not Got(box trap)) {
              HelperOpenObject (box trap)
              set (box trap, "trapset", True)
              box trap setting
              msg ("You set the trap check back to see if you caught something.")
            }
          </settrap>
          <look type="script">
            if (box trap.trapset = True) {
              picture ("trap set.jpg")
            }
            else if (Contains (box trap,deer)) {
              picture ("deer caught trap.jpg")
            }
            else if (Contains (box trap,deer1)) {
              picture ("deer caught trap.jpg")
            }
            else if (box trap.trapset = False) {
              if (not Contains (box trap,deer)) {
                picture ("trap set.jpg")
              }
              else if (not Contains (box trap,deer1)) {
                picture ("trap set.jpg")
              }
            }
          </look>
        </object>
      </object>
      <object name="cooking stuff">
        <inherit name="editor_room" />
        <object name="dutch oven">
          <inherit name="editor_object" />
          <inherit name="container_limited" />
          <feature_container />
          <isopen type="boolean">false</isopen>
          <maxobjects type="int">1</maxobjects>
          <maxvolume type="int">10</maxvolume>
          <onopen type="script">
            ovenmenu = NewStringList()
            list add (ovenmenu, "deer meat ")
            list add (ovenmenu, "rabbit meat")
            list add (ovenmenu, "boar meat")
            list add (ovenmenu, "eggs")
            list add (ovenmenu, "bacon and eggs")
            list add (ovenmenu, "boil water")
            list add (ovenmenu, "tea")
            list add (ovenmenu, "coffee")
            ShowMenu ("What would you like to cook", craftmenu, true) {
              if (result="deer meat") {
                cooking meat
              }
              if (result="tea") {
                tool crafting
              }
              if (result="coffee") {
                shelter crafting
              }
              if (result="boar meat") {
                cooking meat
              }
              if (result="bacon and eggs") {
                food_drinks crafting
              }
              if (result="eggs") {
                trap crafting
              }
              if (result="rabbit meat") {
                cooking meat
              }
              if (result="boil water") {
              }
            }
          </onopen>
        </object>
        <object name="grill">
          <inherit name="editor_object" />
        </object>
      </object>
      <object name="misc">
        <inherit name="editor_room" />
        <object name="torch">
          <inherit name="editor_object" />
          <feature_lightdark />
          <lightsource />
          <take />
          <volume type="int">1</volume>
          <ignite type="string"></ignite>
          <lightstrength>weak</lightstrength>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
        </object>
        <object name="sharp stone">
          <inherit name="editor_object" />
          <volume type="int">1</volume>
          <create type="script">
          </create>
          <look type="script">
            msg ("You have " + sharp stone.volume + ".")
          </look>
          <dig type="script">
            if (Got(sharp stone)) {
              play sound ("shovelling_gravel.mp3", true, false)
              MoveObjectHere (hole)
            }
          </dig>
          <combine type="scriptdictionary">
            <item key="man catcher"><![CDATA[
              if (GetInt(sharp stone, "volume") >= 1) {
                DecreaseObjectCounter (sharp stone, "volume")
                MoveObject (man catcher, stash)
                AddToInventory (stone axe)
                nomore sharp stones
              }
            ]]></item>
          </combine>
        </object>
        <object name="rope">
          <inherit name="editor_object" />
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <look type="script">
            msg ("You have" + rope.volume + "feet of rope.")
          </look>
        </object>
        <object name="forge">
          <inherit name="editor_object" />
          <volume type="int">10</volume>
          <forge type="script">
            forgemenu = NewStringList()
            list add (forgemenu, "shovel head")
            list add (forgemenu, "garden hoe bit")
            list add (forgemenu, "hammer head")
            list add (forgemenu, "steel")
            ShowMenu ("choose a item to forge.", forgemenu, true) {
              if (result="shovel head") {
              }
              else if (result="hammer head") {
              }
              else if (result="garden hoe bit") {
              }
              else if (result="steel") {
              }
            }
          </forge>
        </object>
        <object name="plant fiber">
          <inherit name="editor_object" />
          <volume type="int">0</volume>
          <craft type="script"><![CDATA[
            if (Got(plant fiber)) {
              if (GetInt(plant fiber, "volume") >= 1) {
                adding rope
              }
              else if (GetInt(plant fiber, "volume") < 1) {
                msg ("You need more fibers before making rope.")
              }
            }
            else if (not Got(plant fiber)) {
              msg ("You need to have a plant fiber before you can craft a item.")
            }
          ]]></craft>
          <look type="script">
            msg ("You have " + plant fiber.volume + "left.")
          </look>
        </object>
        <object name="cloth">
          <inherit name="editor_object" />
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <craft type="script"><![CDATA[
            if (GetInt(cloth, "volume") <= 6) {
              cloth.volume = cloth.volume - 6
              nomore cloth
              AddToInventory (canvas)
              msg ("That should make a nice tent cover.")
            }
            else if (GetInt(cloth, "volume") < 6) {
              msg ("You need more cloth before making a canvas.")
            }
          ]]></craft>
          <look type="script">
            msg ("You have" + cloth.volume + "pieces of cloth.")
          </look>
        </object>
        <object name="canvas">
          <inherit name="editor_object" />
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <take />
          <volume type="int">10</volume>
        </object>
        <object name="tent">
          <inherit name="openable" />
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <take />
          <volume type="int">10</volume>
          <feature_container />
          <close type="boolean">false</close>
          <open type="boolean">false</open>
          <displayverbs type="stringlist">
            <value>Look at</value>
            <value>Take</value>
          </displayverbs>
          <ondrop type="script">
            create exit ("in tent", game.pov.parent, tent)
          </ondrop>
          <enter type="script">
            firsttime {
              create exit ("out of tent.", tent, tent.parent)
              EnableTimer (exposed tent)
            }
            otherwise {
              EnableTimer (exposed tent)
              msg ("Good to be out of the elements.")
            }
          </enter>
          <onexit type="script">
            DisableTimer (exposed tent)
            EnableTimer (Exposer meter)
            msg ("Like the woods I see!")
          </onexit>
          <look type="script">
            firsttime {
              msg ("Nice a tent beats the hell out of sleeping outside.")
              create exit ("in tent", game.pov.parent, tent)
            }
            otherwise {
              msg ("Good place to go get out of the elements.")
            }
          </look>
        </object>
        <object name="flint_steel">
          <inherit name="editor_object" />
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <take />
        </object>
        <object name="coconut">
          <inherit name="editor_object" />
        </object>
      </object>
    </object>
  </game>
  <object name="room">
    <inherit name="editor_room" />
    <alias>woods</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <descprefix>You are in the</descprefix>
    <attr name="grid_width" type="int">2</attr>
    <attr name="grid_length" type="int">2</attr>
    <description type="script">
      play sound ("forest_ambience.mp3", false, false)
    </description>
    <object name="rock">
      <inherit name="editor_object" />
      <take />
      <attr name="feature_usegive" type="boolean">false</attr>
      <givesingle />
      <volume type="int">1</volume>
      <inroomdescription>A small pile of rocks are cluddered along the forest floor.</inroomdescription>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Drop</value>
      </inventoryverbs>
      <scenery type="boolean">false</scenery>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <prefix>there are some</prefix>
      <suffix>here</suffix>
      <stackparent type="object">rock</stackparent>
      <look type="script"><![CDATA[
        picture ("rock.jpg")
        msg ("The rock seems to have the perfect angle for cutting with. <br/>You might to to sharpen it up a little.")
      ]]></look>
      <sharpen type="script">
        if (not Got(this)) {
          msg ("You have to pick the rock up before you can sharpen it.")
        }
        else if (Got(this)) {
          rock crafting
        }
      </sharpen>
    </object>
    <object name="tree">
      <inherit name="editor_object" />
      <inherit name="enviroment" />
      <inherit name="surface" />
      <health type="int">5</health>
      <attr name="max_health" type="int">5</attr>
      <feature_container />
      <hidechildren />
      <look>The tree stands tall, banches hang down as the remains of bird droppings are glued to them.</look>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inroomdescription>Branches hang over blocking some field of view. Great source of wood you think to your self.</inroomdescription>
      <chop type="script">
        if (Got(stone axe)) {
          play sound ("axe_chop_wood_007.mp3", true, false)
          DecreaseObjectCounter (this, "health")
          adding leaves
        }
        if (not Got(stone axe)) {
          msg ("With what my bare hands?")
        }
        if (GetInt(this, "health") = 0) {
          msg ("TIMBER!")
          play sound ("tree_fall_down.mp3", true, false)
          MoveObject (tris, stash)
          MoveObjectHere (fallen tree)
        }
      </chop>
      <object name="bird nest">
        <inherit name="editor_object" />
        <inherit name="container_limited" />
        <attr name="feature_container" type="boolean">false</attr>
        <maxobjects type="int">2</maxobjects>
        <maxvolume type="int">10</maxvolume>
        <isopen type="boolean">false</isopen>
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <look>Its a birds nest, bird droppings remain on some branches.</look>
        <onopen type="script">
        </onopen>
        <search type="script">
          firsttime {
            nest loot
          }
          otherwise {
            msg ("You have searched this already.")
          }
        </search>
      </object>
    </object>
    <exit alias="east" to="woods1">
      <inherit name="eastdirection" />
    </exit>
    <object name="player">
      <inherit name="editor_object" />
      <inherit name="editor_player" />
      <maxobjects type="int">12</maxobjects>
      <volume type="int">0</volume>
      <maxvolume type="int">100</maxvolume>
      <statusattributes type="stringdictionary">
        <item>
          <key>Health</key>
          <value></value>
        </item>
        <item>
          <key>Hunger</key>
          <value></value>
        </item>
        <item>
          <key>Thirst</key>
          <value></value>
        </item>
        <item>
          <key>Exposer</key>
          <value></value>
        </item>
        <item>
          <key>Wounded</key>
          <value></value>
        </item>
        <item>
          <key>Days Survived</key>
          <value></value>
        </item>
      </statusattributes>
      <Health type="int">20</Health>
      <Hunger type="int">25</Hunger>
      <Exposer type="int">6</Exposer>
      <Wounded type="boolean">false</Wounded>
      <Thirst type="int">20</Thirst>
      <attr name="max health" type="int">100</attr>
      <attr name="Days Survived" type="int">0</attr>
      <object name="stone axe">
        <inherit name="editor_object" />
        <attr name="weapon health" type="int">25</attr>
        <inventoryverbs type="stringlist">
          <value>Drop</value>
          <value>Look at</value>
        </inventoryverbs>
        <volume type="int">3</volume>
        <take />
        <look type="script">
          picture ("stone axe.png")
          msg ("A nicely crafted stone axe.")
        </look>
      </object>
    </object>
  </object>
  <verb>
    <property>craft</property>
    <pattern>craft</pattern>
    <defaultexpression>"You can't craft " + object.article + "."</defaultexpression>
  </verb>
  <object name="stash">
    <inherit name="editor_room" />
  </object>
  <verb>
    <property>combine</property>
    <pattern>combine</pattern>
    <defaultexpression>"You can't combine " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>chop</property>
    <pattern>chop</pattern>
    <defaultexpression>"You can't chop " + object.article + "."</defaultexpression>
  </verb>
  <object name="woods">
    <inherit name="editor_room" />
    <descprefix>You are in the</descprefix>
    <alias>woods</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <attr name="grid_width" type="int">2</attr>
    <attr name="grid_length" type="int">2</attr>
    <description type="script">
      play sound ("forest_ambience.mp3", false, false)
    </description>
    <beforefirstenter type="script">
      CloneObjectAndMove (rock, woods)
      CloneObjectAndMove (tree, woods)
      CloneObjectAndMove (grass, woods)
    </beforefirstenter>
    <exit alias="south" to="woods1">
      <inherit name="southdirection" />
    </exit>
    <exit alias="east" to="woods11">
      <inherit name="eastdirection" />
    </exit>
  </object>
  <verb>
    <property>upgrade</property>
    <pattern>upgrade</pattern>
    <defaultexpression>"You can't upgrade " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>resource</property>
    <pattern>resource</pattern>
    <defaultexpression>"You can't resource " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>mineboulder</property>
    <pattern>mine boulder</pattern>
    <defaultexpression>"You can't mine boulder " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>ignite</property>
    <pattern>ignite</pattern>
    <defaultexpression>"You can't ignite " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>addwood</property>
    <pattern>add wood</pattern>
    <defaultexpression>"You can't add wood " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>forge</property>
    <pattern>forge</pattern>
    <defaultexpression>"You can't forge " + object.article + "."</defaultexpression>
  </verb>
  <turnscript name="raining">
    <enabled type="boolean">false</enabled>
    <script>
    </script>
  </turnscript>
  <object name="hunting grounds">
    <inherit name="editor_room" />
    <object name="woods1">
      <inherit name="editor_room" />
      <attr name="grid_width" type="int">2</attr>
      <attr name="grid_length" type="int">2</attr>
      <alias>woods</alias>
      <description type="script">
        play sound ("forest_ambience.mp3", false, false)
      </description>
      <beforefirstenter type="script">
        CloneObjectAndMove (rock, woods1)
        CloneObjectAndMove (tree, woods1)
        CloneObjectAndMove (boulder, woods1)
        CloneObjectAndMove (bush, woods1)
      </beforefirstenter>
      <exit alias="west" to="room">
        <inherit name="westdirection" />
      </exit>
      <exit alias="north" to="woods">
        <inherit name="northdirection" />
      </exit>
      <exit alias="south" to="woods2">
        <inherit name="southdirection" />
      </exit>
      <exit alias="east" to="woods3">
        <inherit name="eastdirection" />
      </exit>
    </object>
    <object name="woods2">
      <inherit name="editor_room" />
      <attr name="grid_width" type="int">2</attr>
      <attr name="grid_length" type="int">2</attr>
      <alias>woods</alias>
      <description type="script">
        play sound ("forest_ambience.mp3", false, false)
      </description>
      <beforefirstenter type="script">
        CloneObjectAndMove (rock, woods2)
        CloneObjectAndMove (tree, woods2)
        CloneObjectAndMove (grass, woods2)
      </beforefirstenter>
      <exit alias="north" to="woods1">
        <inherit name="northdirection" />
      </exit>
    </object>
    <object name="woods3">
      <inherit name="editor_room" />
      <attr name="grid_width" type="int">2</attr>
      <attr name="grid_length" type="int">2</attr>
      <alias>woods</alias>
      <description type="script">
        play sound ("forest_ambience.mp3", false, false)
      </description>
      <beforefirstenter type="script">
        CloneObjectAndMove (rock, woods3)
        CloneObjectAndMove (bush, woods3)
        CloneObjectAndMove (tree, woods3)
        CloneObjectAndMove (bamboo, woods3)
      </beforefirstenter>
      <object name="deer">
        <inherit name="switchable" />
        <inherit name="enviroment" />
        <attr name="hunting ground">hunting grounds</attr>
        <movechance type="int">60</movechance>
        <attr name="feature_switchable" type="boolean">false</attr>
        <attr name="feature_container" type="boolean">false</attr>
        <switchedon type="boolean">false</switchedon>
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <health type="int">8</health>
        <dead type="boolean">false</dead>
        <onswitchon type="script">
          if (drop trap.isopen) {
          }
        </onswitchon>
        <skin type="script">
          if (Got(stone knife)) {
            if (game.pov.parent = crafting table) {
              MoveObject (deer, stash)
              adding deer meat
            }
            else if (not game.pov.parent = crafting table) {
              msg ("You need a crafting table before you can skin the deer.")
            }
          }
          else if (not Got(stone knife)) {
            msg ("Need something to cut into the hide!")
          }
        </skin>
        <take type="script">
          if (deer.dead = True) {
            AddToInventory (deer)
          }
          else if (deer.dead = False) {
            msg ("You have to kill or trap it first.")
          }
        </take>
      </object>
      <exit alias="west" to="woods1">
        <inherit name="westdirection" />
      </exit>
      <exit alias="east" to="woods5">
        <inherit name="eastdirection" />
      </exit>
      <exit alias="north" to="woods11">
        <inherit name="northdirection" />
      </exit>
      <exit alias="south" to="woods13">
        <inherit name="southdirection" />
      </exit>
    </object>
    <object name="woods4">
      <inherit name="editor_room" />
      <attr name="grid_width" type="int">2</attr>
      <attr name="grid_length" type="int">2</attr>
      <alias>woods</alias>
      <beforeenter type="script">
      </beforeenter>
      <enter type="script">
      </enter>
      <beforefirstenter type="script">
        CloneObjectAndMove (boulder, woods4)
        CloneObjectAndMove (tree, woods4)
        CloneObjectAndMove (grass, woods4)
      </beforefirstenter>
      <firstenter type="script">
      </firstenter>
      <object name="bush">
        <inherit name="editor_object" />
        <inherit name="enviroment" />
        <attr name="max_health" type="int">15</attr>
        <health type="int">3</health>
        <volume type="int">0</volume>
        <feature_usegive />
        <inroomdescription type="string"></inroomdescription>
        <hit type="script"><![CDATA[
          if (this.destroied = false) {
            DecreaseObjectCounter (this, "health")
            play sound ("tree_branch_fall_on_leaves_and_twigs.mp3", true, false)
            switch (GetRandomInt (1, 3)) {
              case (1) {
                msg ("Tearing at the bush you wish you had a hatchet of some sort.")
              }
              case (2) {
                msg ("Yanking and tugging bush just not enough to break it down.")
              }
              case (3) {
                msg ("You think to yourself \"How did people survive with out tools?\"")
              }
            }
          }
          if (GetInt(this, "health") <= 0) {
            set (this, "destroied", True)
            MoveObject (this, stash)
            msg ("You take one more good whack with your hands ripping sticks from the bush.")
            adding sticks
          }
        ]]></hit>
        <look type="script">
          picture ("bushes.jpg")
          msg ("It's a mass of bushes, bet you could use some of them as sticks.")
        </look>
      </object>
      <exit alias="south" to="woods5">
        <inherit name="southdirection" />
      </exit>
      <exit alias="east" to="woods10">
        <inherit name="eastdirection" />
      </exit>
      <exit alias="west" to="woods11">
        <inherit name="westdirection" />
      </exit>
      <object name="pond">
        <inherit name="container_closed" />
        <feature_container />
        <hidechildren type="boolean">false</hidechildren>
        <inventoryverbs type="stringlist">
          <value>Look at</value>
        </inventoryverbs>
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <listchildren type="boolean">false</listchildren>
        <openmsg>Hopfully yo will see some fish.</openmsg>
        <description type="script">
        </description>
        <look type="script">
          play sound ("footsteps_in_water_2.mp3", false, false)
          HelperOpenObject (pond)
          if (ListContains(ScopeVisible(), fish)) {
            picture ("pond with fish.jpg")
          }
          else {
            picture ("pond.jpg")
          }
        </look>
        <onopen type="script">
          if (not Got(fish)) {
            if (RandomChance(50)) {
              MakeObjectVisible (fish)
              msg ("Oh a fish better try and catch it quick before it gets away.")
            }
            else {
              MakeObjectInvisible (fish)
              msg ("It's a little murky right now, try later when it clears up.")
            }
          }
          EnableTimer (pond fish timer)
        </onopen>
        <onclose type="script"><![CDATA[
          if (Contains (pond,fish)) {
            msg ("\"Humm! Wonder if that pond has cleared up yet?\"")
          }
          else {
            msg ("That was a close one, looks like fish for dinner.<br/> Gonna eat it raw or cook it up?")
          }
        ]]></onclose>
        <object name="fish">
          <inherit name="editor_object" />
          <dead type="boolean">false</dead>
          <trapped type="boolean">false</trapped>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <volume type="int">2</volume>
          <take type="script">
            if (fish.dead = True) {
              AddToInventory (fish)
            }
            else if (fish.dead = False) {
              msg ("You have to kill or trap it first.")
            }
          </take>
          <eat type="script">
            if (Got(fish)) {
              play sound ("Smack Lips-SoundBible.com-411304180.mp3", true, false)
              MoveObject (fish, pond)
              IncreaseObjectCounter (player, "Hunger")
              IncreaseObjectCounter (player, "Hunger")
              IncreaseObjectCounter (player, "Hunger")
              IncreaseObjectCounter (player, "Thrist")
              msg ("Mmmm sushi is delisious!")
            }
            else if (not Got(fish)) {
              if (fish.dead = True) {
                msg ("It helps to pick it up.")
              }
              else if (fish.dead = False) {
                msg ("Helps to catch the fish first.")
              }
            }
          </eat>
        </object>
        <object name="water">
          <inherit name="editor_object" />
          <volume type="int">0</volume>
          <feature_usegive />
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <drink type="script">
            play sound ("drink_slurp_from_cup_001.mp3", false, false)
            IncreaseObjectCounter (player, "Thirst")
            IncreaseObjectCounter (player, "Thirst")
            DecreaseObjectCounter (player, "Health")
            msg ("\"Little unsettling but not bad.\"")
          </drink>
        </object>
      </object>
      <object name="bamboo">
        <inherit name="editor_object" />
        <health type="int">3</health>
        <alias>bamboo</alias>
        <chop type="script">
          if (Got(stone axe)) {
            play sound ("1146958_SOUNDDOGS__ba.mp3", true, false)
            DecreaseObjectCounter (this, "health")
          }
          if (not Got(stone axe)) {
            msg ("With what my bare hands?")
          }
          if (GetInt(this, "health") = 0) {
            msg ("TIMBER!")
            play sound ("tree_fall_down.mp3", true, false)
            MoveObject (this, stash)
            adding bamboo stalks
          }
        </chop>
      </object>
    </object>
    <object name="hunting grounds 1">
      <inherit name="editor_room" />
      <object name="woods5">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
        <alias>woods</alias>
        <description type="script">
          play sound ("forest_ambience.mp3", false, false)
        </description>
        <beforefirstenter type="script">
          CloneObjectAndMove (bamboo, woods5)
          CloneObjectAndMove (rock, woods5)
          CloneObjectAndMove (grass, woods5)
        </beforefirstenter>
        <exit alias="west" to="woods3">
          <inherit name="westdirection" />
        </exit>
        <exit alias="north" to="woods4">
          <inherit name="northdirection" />
        </exit>
        <exit alias="south" to="woods6">
          <inherit name="southdirection" />
        </exit>
        <exit alias="east" to="woods7">
          <inherit name="eastdirection" />
        </exit>
        <object name="boulder">
          <inherit name="editor_object" />
          <inherit name="enviroment" />
          <health type="int">6</health>
          <attr name="feature_usegive" type="boolean">false</attr>
          <attr name="max_health" type="int">6</attr>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <mineboulder type="script"><![CDATA[
            if (Got(stone axe)) {
              play sound ("impact_rock_on_rubble_006.mp3", true, false)
              DecreaseObjectCounter (this, "health")
              switch (GetRandomInt (1, 5)) {
                case (1) {
                  msg ("You smash your stone axe into the boulder sending tiny fragments flying out spraying you in the face!")
                }
                case (2) {
                  msg ("Panting you swing hard cracking the massive boulder a little more and more each time.")
                }
                case (3) {
                  msg ("Hitting the giant boulder hard you wish you had an actual pickaxe.")
                }
                case (4) {
                  msg ("Massive crack splits in the boulder leaving more dust.")
                }
                case (5) {
                  msg ("There has to be an easier way to do this?")
                }
              }
            }
            else if (not Got(stone axe)) {
              msg ("You need a way to break boulder down.")
            }
            if (GetInt(this, "health") <= 0) {
              play sound ("impact_rock_on_rubble_004.mp3", true, false)
              MoveObject (this, stash)
              adding iron
              adding flint
              msg ("The boulder shatters into pieces leaving behind small remains,<br/>which can be used in different ways.")
            }
          ]]></mineboulder>
          <look type="script">
            picture ("boulder.png")
            msg ("A huge boulder sits in between the mass of trees.")
          </look>
        </object>
      </object>
      <object name="woods6">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
        <alias>woods</alias>
        <description type="script">
        </description>
        <beforefirstenter type="script">
          CloneObjectAndMove (tree, woods6)
          CloneObjectAndMove (grass, woods6)
          CloneObjectAndMove (bamboo, woods6)
        </beforefirstenter>
        <exit alias="north" to="woods5">
          <inherit name="northdirection" />
        </exit>
        <object name="deer1">
          <alias>deer</alias>
          <movechance type="int">50</movechance>
          <volume type="int">25</volume>
          <dead type="boolean">false</dead>
          <attr name="hunting ground">hunting grounds 1</attr>
          <skin type="script">
            if (Got(stone knife)) {
              if (game.pov.parent = crafting table) {
                MoveObject (deer1, stash)
                adding deer meat
              }
              else if (not game.pov.parent = crafting table) {
                msg ("You need a crafting table before you can skin the deer.")
              }
            }
            else if (not Got(stone knife)) {
              msg ("Need something to cut into the hide!")
            }
          </skin>
          <take type="script">
            if (deer1.dead = True) {
              AddToInventory (deer1)
            }
            else if (deer1.dead = False) {
              msg ("You have to kill or trap it first.")
            }
          </take>
        </object>
        <exit alias="west" to="woods13">
          <inherit name="westdirection" />
        </exit>
      </object>
      <object name="woods7">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
        <alias>woods</alias>
        <description type="script">
          play sound ("forest_ambience.mp3", false, false)
        </description>
        <beforefirstenter type="script">
          CloneObjectAndMove (tree, woods7)
        </beforefirstenter>
        <object name="grass">
          <inherit name="editor_object" />
          <feature_usegive />
          <inroomdescription type="string"></inroomdescription>
          <health type="int">2</health>
          <destroied type="boolean">false</destroied>
          <inventoryverbs type="stringlist">
            <value>Drop</value>
          </inventoryverbs>
          <displayverbs type="stringlist">
            <value>Look at</value>
            <value>Take</value>
          </displayverbs>
          <dropmsg>Dropped grass.</dropmsg>
          <volume type="int">2</volume>
          <usedefaultprefix type="boolean">false</usedefaultprefix>
          <prefix>bundle of </prefix>
          <suffix>to the side</suffix>
          <take type="script"><![CDATA[
            if (GetInt(this, "health") <= 0) {
              AddToInventory (this)
              msg ("You picked up grass.")
            }
            else if (GetInt(this, "health") > 0) {
              msg ("You must break it down before taking.")
            }
          ]]></take>
          <pull type="script"><![CDATA[
            if (this.destroied = false) {
              if (GetInt(this, "health") > 0) {
                DecreaseObjectCounter (this, "health")
                play sound ("punch_or_whack_-Vladimir-403040765.wav", true, false)
                msg ("Pulling at the grass you realize it tougher then you thought.<br/>Bet you can make some good matiral with this.")
              }
            }
            if (GetInt(this, "health") <= 0) {
              set (this, "destroied", True)
              firsttime {
                msg ("<br/><br/><br/><br/>You pull the last strand up panting a little,<br/>thought pulling grasswouln't ware you out.")
              }
              otherwise {
                msg ("You pulled them already, now its time to take them it could make for some good material.")
              }
            }
          ]]></pull>
          <Craft type="script">
            if (not Got(grass)) {
              msg ("You must take item first.")
            }
            if (Got(grass)) {
              RemoveObject (grass)
              AddToInventory (plant fiber)
            }
          </Craft>
          <makerope type="script">
            if (not Got(this)) {
              msg ("You can't do any thing if you don't pick it up first.")
            }
            else if (Got(this)) {
              adding plant fibers
              MoveObject (this, stash)
            }
          </makerope>
        </object>
        <exit alias="west" to="woods5">
          <inherit name="westdirection" />
        </exit>
        <exit alias="east" to="woods9">
          <inherit name="eastdirection" />
        </exit>
        <exit alias="north" to="woods10">
          <inherit name="northdirection" />
        </exit>
        <object name="rabbit">
          <movechance type="int">95</movechance>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <dead type="boolean">false</dead>
          <attr name="hunting ground">hunting grounds 1</attr>
          <skin type="script">
            if (Got(stone knife)) {
              if (game.pov.parent = crafting table) {
                MoveObject (rabbit, stash)
                adding rabbit meat
              }
              else if (not game.pov.parent = crafting table) {
                msg ("You need a crafting table before you can skin the rabbit.")
              }
            }
            else if (not Got(stone knife)) {
              msg ("Need something to cut into the hide!")
            }
          </skin>
          <take type="script">
            if (rabbit.dead = True) {
              AddToInventory (rabbit)
            }
            else if (rabbit.dead = False) {
              msg ("You have to kill or trap it first.")
            }
          </take>
        </object>
      </object>
      <object name="woods9">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
        <dark type="boolean">false</dark>
        <alias>woods</alias>
        <description type="script">
          play sound ("forest_ambience.mp3", false, false)
        </description>
        <beforefirstenter type="script">
          CloneObjectAndMove (tree, woods9)
        </beforefirstenter>
        <exit alias="west" to="woods7">
          <inherit name="westdirection" />
          <look>Looking in this direction still seems point less just more grass and woods.</look>
        </exit>
        <exit alias="north" to="woods8">
          <inherit name="northdirection" />
        </exit>
      </object>
    </object>
    <object name="hunting grounds 2">
      <inherit name="editor_room" />
      <object name="woods10">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
        <alias>woods</alias>
        <description type="script">
          play sound ("forest_ambience.mp3", false, false)
        </description>
        <exit alias="south" to="woods7">
          <inherit name="southdirection" />
        </exit>
        <exit alias="east" to="woods8">
          <inherit name="eastdirection" />
        </exit>
        <exit alias="west" to="woods4">
          <inherit name="westdirection" />
        </exit>
      </object>
      <object name="woods8">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
        <alias>woods</alias>
        <description type="script">
        </description>
        <exit alias="west" to="woods10">
          <inherit name="westdirection" />
        </exit>
        <exit alias="south" to="woods9">
          <inherit name="southdirection" />
        </exit>
        <object name="posioned pond">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <alias>pond</alias>
          <feature_container />
          <hidechildren />
          <look type="script">
            play sound ("footsteps_in_water_2.mp3", true, false)
          </look>
          <object name="dirty water">
            <inherit name="editor_object" />
            <inherit name="surface" />
            <alias>water</alias>
            <feature_container />
            <hidechildren />
            <drink type="script">
              play sound ("drink_slurp_from_cup_001.mp3", true, false)
              IncreaseObjectCounter (player, "Thirst")
              IncreaseObjectCounter (player, "Thirst")
              msg ("Oh thats not gonna settle well.")
              EnableTimer (posined timer)
              SetTimeout (29) {
                DisableTimer (posined timer)
                msg ("\" Oh I think my stomach is settling a little.\"")
              }
            </drink>
            <look type="script">
              switch (GetRandomInt (1, 3)) {
                case (1) {
                  msg ("\"Oh God thats nasty water I don't think its safe to drink.\"")
                }
                case (2) {
                  msg ("\"Water looks pretty rank!\"")
                }
                case (3) {
                  msg ("\"Oh man what's that smell?\"")
                }
                default {
                  MakeObjectVisible (dead fish)
                }
              }
            </look>
            <object name="dead fish">
              <inherit name="editor_object" />
            </object>
          </object>
        </object>
      </object>
      <object name="woods11">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
        <alias>woods</alias>
        <description type="script">
          play sound ("forest_ambience.mp3", false, false)
        </description>
        <exit alias="south" to="woods3">
          <inherit name="southdirection" />
        </exit>
        <exit alias="east" to="woods4">
          <inherit name="eastdirection" />
        </exit>
        <exit alias="west" to="woods">
          <inherit name="westdirection" />
        </exit>
        <object name="rabbit1">
          <movechance type="int">95</movechance>
          <inventoryverbs type="stringlist">
            <value>Look at</value>
            <value>Drop</value>
          </inventoryverbs>
          <dead type="boolean">false</dead>
          <alias>rabbit</alias>
          <attr name="hunting ground">hunting grounds 2</attr>
          <skin type="script">
            if (Got(stone knife)) {
              if (game.pov.parent = crafting table) {
                MoveObject (rabbit1, stash)
                adding rabbit meat
              }
              else if (not game.pov.parent = crafting table) {
                msg ("You need a crafting table before you can skin the rabbit.")
              }
            }
            else if (not Got(stone knife)) {
              msg ("Need something to cut into the hide!")
            }
          </skin>
          <take type="script">
            if (rabbit.dead = True) {
              AddToInventory (rabbit)
            }
            else if (rabbit.dead = False) {
              msg ("You have to kill or trap it first.")
            }
          </take>
        </object>
      </object>
      <object name="woods12">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
        <alias>woods</alias>
      </object>
    </object>
    <object name="hunting grounds 3">
      <inherit name="editor_room" />
      <object name="woods13">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
        <description type="script">
          play sound ("forest_ambience.mp3", false, false)
        </description>
        <exit alias="north" to="woods3">
          <inherit name="northdirection" />
        </exit>
        <exit alias="east" to="woods6">
          <inherit name="eastdirection" />
        </exit>
      </object>
      <object name="woods14">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
      </object>
      <object name="woods15">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
      </object>
      <object name="woods16">
        <inherit name="editor_room" />
        <attr name="grid_width" type="int">2</attr>
        <attr name="grid_length" type="int">2</attr>
      </object>
    </object>
  </object>
  <verb>
    <property>set</property>
    <pattern>set</pattern>
    <defaultexpression>"You can't set " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>skin</property>
    <pattern>skin</pattern>
    <defaultexpression>"You can't skin " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>cook</property>
    <pattern>cook</pattern>
    <defaultexpression>"You can't cook " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>shoot</property>
    <pattern>shoot</pattern>
    <defaultexpression>"You can't shoot " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>spearfish</property>
    <pattern>spear fish</pattern>
    <defaultexpression>"You can't spear fish " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>spikepit</property>
    <pattern>spike pit</pattern>
    <defaultexpression>"You can't spike pit " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>camoflauge</property>
    <pattern>camoflauge</pattern>
    <defaultexpression>"You can't camoflauge " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>dig</property>
    <pattern>dig</pattern>
    <defaultexpression>"You can't dig " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>settrap</property>
    <pattern>set trap</pattern>
    <defaultexpression>"You can't set trap " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>fillwithwater</property>
    <pattern>fill with water</pattern>
    <defaultexpression>"You can't fill with water " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>addtochest</property>
    <pattern>add to chest</pattern>
    <defaultexpression>"You can't add to chest " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>sharpen</property>
    <pattern>sharpen</pattern>
    <defaultexpression>"You can't sharpen " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>makerope</property>
    <pattern>make rope</pattern>
    <defaultexpression>"You can't make rope " + object.article + "."</defaultexpression>
  </verb>
  <type name="enviroment">
    <health type="int">0</health>
    <destroied type="boolean">false</destroied>
  </type>
  <type name="weapon">
    <attr name="weapon health" type="int">0</attr>
    <destroied type="boolean">false</destroied>
    <damage type="int">0</damage>
  </type>
  <function name="trunk crafting" type="int"><![CDATA[
    if (GetInt(tree trunks, "volume") >= 1) {
      if (Got(planks)) {
        planks.volume = planks.volume + 3
      }
      else if (not Got(planks)) {
        AddToInventory (planks)
      }
      DecreaseObjectCounter (tree trunks, "volume")
    }
    if (GetInt(tree trunks, "volume") <= 0) {
      MoveObject (tree trunks, stash)
    }
  ]]></function>
  <function name="plank crafting" type="int"><![CDATA[
    menulist = NewStringList()
    list add (menulist, "stick")
    list add (menulist, "wood frame")
    list add (menulist, "basic campfire")
    list add (menulist, "storage chest")
    ShowMenu ("select what to craft", menulist, true) {
      if (result="wood frame") {
        if (GetInt(planks, "volume") >= 4) {
          if (Got(wood frame)) {
            IncreaseObjectCounter (wood frame, "volume")
          }
          else if (not Got(wood frame)) {
            IncreaseObjectCounter (wood frame, "volume")
            AddToInventory (wood frame)
          }
          planks.volume = planks.volume - 4
          msg ("Wood Frame crafted!")
        }
        else if (GetInt(planks, "volume") < 4) {
          msg ("You need more planks before you can craft.")
        }
      }
      else if (result="stick") {
        if (GetInt(planks, "volume") >= 1) {
          DecreaseObjectCounter (planks, "volume")
          adding sticks
          msg ("Stick crafted!")
        }
        else if (GetInt(planks, "volume") < 1) {
          msg ("All out of planks.")
        }
      }
      else if (result="basic campfire") {
        if (GetInt(planks, "volume") >= 3) {
          if (Got(sharp stone)) {
            planks.volume = planks.volume - 3
            DecreaseObjectCounter (sharp stone, "volume")
            MoveObjectHere (basic campfire)
            msg ("Ahhhh a campfire now you have ways<br/>to cook, boil water and stay warm. Just<br/>make sure your near the fire our you won't<br/>stay warm!")
            nomore sharp stones
          }
          else if (not Got(sharp stone)) {
            msg ("You have no stones to incase the fire.")
          }
        }
        else if (GetInt(planks, "volume") < 3) {
          msg ("You need more planks before you can craft a campfire.")
        }
      }
      else if (result="storage chest") {
        storage chest crafting
      }
    }
    nomore planks
  ]]></function>
  <function name="frame crafting"><![CDATA[
    if (GetInt(wood frame, "volume") >= 20) {
      if (not Got(wood wall)) {
        AddToInventory (wood wall)
      }
      else if (Got(wood wall)) {
        IncreaseObjectCounter (wood wall, "volume")
      }
      wood frame.volume = wood frame.volume - 20
    }
    else if (GetInt(wood frame, "volume") < 20) {
      msg ("You need more frames before crafting that.")
    }
    nomore frames
  ]]></function>
  <function name="adding trunks" type="int"><![CDATA[
    if (Got(tree trunks)) {
      tree trunks.volume = tree trunks.volume + 5
      msg ("Picked up tree trunks.")
    }
    else if (not Got(tree trunks)) {
      if (GetInt(tree trunks, "volume") >= 0) {
        tree trunks.volume = tree trunks.volume + 5
        MoveObjectHere (tree trunks)
      }
    }
    MoveObject (fallen tree, stash)
  ]]></function>
  <function name="tool crafting">
    toolsmenu = NewStringList()
    list add (toolsmenu, "shovel")
    list add (toolsmenu, "cloth")
    list add (toolsmenu, "hammer")
    list add (toolsmenu, "forge")
    list add (toolsmenu, "gardening hoe")
    list add (toolsmenu, "flint and steel")
    ShowMenu ("choose an item to craft.", toolsmenu, true) {
      if (result="shovel") {
      }
      else if (result="hammer") {
      }
      else if (result="forge") {
      }
      else if (result="gardening hoe") {
      }
      else if (result="flint and steel") {
        combine flint_steel
      }
      else if (result="cloth") {
        adding cloth
      }
    }
  </function>
  <function name="shelter crafting">
    sheltermenu = NewStringList()
    list add (sheltermenu, "teepee")
    list add (sheltermenu, "tent")
    list add (sheltermenu, "small cabin")
    list add (sheltermenu, "cabin")
    list add (sheltermenu, "large cabin")
    ShowMenu ("choose a shelter to craft.", sheltermenu, true) {
      if (result="teepee") {
      }
      else if (result="tent") {
      }
      else if (result="small cabin") {
      }
      else if (result="cabin") {
      }
      else if (result="large cabin") {
      }
    }
  </function>
  <function name="food_drinks crafting">
    food_drinkmenu = NewStringList()
    list add (food_drinkmenu, "tea")
    list add (food_drinkmenu, "grilled rabbit")
    list add (food_drinkmenu, "grilled venison")
    list add (food_drinkmenu, "grilled fish")
    list add (food_drinkmenu, "coffee")
    list add (food_drinkmenu, "water")
    ShowMenu ("choose a item to craft.", food_drinkmenu, true) {
    }
  </function>
  <function name="weapon crafting">
    weaponsmenu = NewStringList()
    list add (weaponsmenu, "bow")
    list add (weaponsmenu, "arrows")
    list add (weaponsmenu, "stone knife")
    list add (weaponsmenu, "machete")
    list add (weaponsmenu, "spear")
    list add (weaponsmenu, "cross bow")
    ShowMenu ("What weapon do you want to craft?", weaponsmenu, true) {
      if (result="arrows") {
        arrow crafting
      }
      if (result="stone knife") {
        stone knife crafting
      }
      if (result="bow") {
        bow crafting
      }
      if (result="cross bow") {
        cross bow crafting
      }
      if (result="machete") {
        machete crafting
      }
      else if (result="spear") {
        spear crafting
      }
    }
  </function>
  <function name="wood_frame_upgrade">
    if (Got(planks)) {
      if (not Got(wood frame)) {
        MoveObject (wood frame, stash)
        play sound ("hammer_hitting_nail_into_wood.mp3", true, false)
        planks.volume = planks.volume - 2
        MoveObjectHere (fortify wood)
        msg ("Frame upgraded.")
      }
      else if (Got(wood frame)) {
        msg ("You must place frame frist.")
      }
    }
    if (not Got(planks)) {
      msg ("You need planks to upgrade this frame.")
    }
    nomore planks
  </function>
  <function name="wood_frame_upgrade_1"><![CDATA[
    if (GetInt(planks, "volume") >= 3) {
      MoveObject (fortify wood, stash)
      play sound ("hammer_hitting_nail_into_wood.mp3", true, false)
      planks.volume = planks.volume - 3
      MoveObjectHere (fortified wood 1)
    }
    else if (GetInt(planks, "volume") <= 3) {
      msg ("You need more plamks to upgrade.")
    }
    nomore planks
  ]]></function>
  <function name="trap crafting">
    trapmenu = NewStringList()
    list add (trapmenu, "snare trap")
    list add (trapmenu, "box trap")
    list add (trapmenu, "net trap")
    list add (trapmenu, "drop trap")
    ShowMenu ("choose a trap to craft.", trapmenu, true) {
      if (result="snare trap") {
      }
      else if (result="box trap") {
      }
      else if (result="net trap") {
      }
      else if (result="drop trap") {
        drop trap crafting
      }
    }
  </function>
  <function name="flint_steel fire"><![CDATA[
    if (Got(flint_steel)) {
      if (Got(tree trunks)) {
        set (basic campfire, "lightsource", True)
        if (basic campfire.lightsource = True) {
          msg ("You lite the fire!<br/> Now that should keep you warm for awhile<br/> and be able to cook and clean water.")
          EnableTimer (Fire Burning)
          EnableTimer (Exposer Fire)
        }
      }
      else if (not Got(tree trunks)) {
        msg ("You need a fuel source to burn.")
      }
    }
    else if (not Got(flint_steel)) {
      msg ("It would help if you had fint & steel, you might want to craft some.")
    }
  ]]></function>
  <function name="sticks_leaves fire"><![CDATA[
    if (Got(stick)) {
      if (Got(leaves)) {
        if (RandomChance(25)) {
          set (basic campfire, "lightsource", True)
          DecreaseObjectCounter (stick, "volume")
          DecreaseObjectCounter (leaves, "volume")
        }
        if (basic campfire.lightsource = True) {
          msg ("You lite the fire!<br/> Now that should keep you warm for awhile and be able to cook and clean water.")
          EnableTimer (Fire Burning)
          EnableTimer (Exposer Fire)
        }
        if (basic campfire.lightsource = False) {
          msg ("No luck on lighting the fire keep trying!")
        }
      }
      else if (not Got(leaves)) {
        msg ("You need some leaves to help light the fire.")
      }
    }
    else if (not Got(stick)) {
      msg ("Try using a stick, that might help.")
    }
    nomore sticks
    nomore leaves
  ]]></function>
  <function name="sticks_coal fire"><![CDATA[
    if (Got(stick)) {
      if (Got(coal)) {
        if (RandomChance(75)) {
          set (basic campfire, "lightsource", True)
          DecreaseObjectCounter (coal pieces, "volume")
          DecreaseObjectCounter (stick, "volume")
          nomore sticks
          nomore coal
        }
      }
      else if (not Got(coal)) {
        msg ("You need to add some coad before this fire has a chance to lite.")
      }
      if (basic campfire.lightsource = False) {
        msg ("No luck on lighting the fire keep trying!")
      }
      if (basic campfire.lightsource = True) {
        msg ("You lite the fire!<br/> Now that should keep you warm for awhile and be able to cook and clean water.")
        EnableTimer (Fire Burning)
        EnableTimer (Exposer Fire)
      }
    }
    else if (not Got(stick)) {
      msg ("Help to have some sticks before trying this.")
    }
  ]]></function>
  <function name="rock crafting"><![CDATA[
    if (game.pov.parent = boulder.parent) {
      if (not Got(sharp stone)) {
        IncreaseObjectCounter (sharp stone, "volume")
        AddToInventory (sharp stone)
        msg ("Pounding on the side of the boulder for a few seconds<br/>a chunk falls off leaving a perfect hatchet shaped blade, <br/>now to find a way to tie it to a handle.")
      }
      else if (Got(sharp stone)) {
        IncreaseObjectCounter (sharp stone, "volume")
        msg ("Pounding on the side of the boulder for a few seconds<br/>a chunk falls off leaving a perfect hatchet shaped blade, <br/>now to find a way to tie it to a handle.")
      }
    }
  ]]></function>
  <function name="combine flint_steel">
    if (Got(flint)) {
      if (Got(iron scrap)) {
        DecreaseObjectCounter (iron scrap, "volume")
        DecreaseObjectCounter (flint, "volume")
        AddToInventory (flint_steel)
        msg ("This should help you starta fire alot easier.")
      }
      else if (not Got(iron scrap)) {
        msg ("Well you have the flint but no metal.")
      }
      nomore flint
      nomore iron scrap
    }
    else if (not Got(flint)) {
      msg ("It would help if you had some flint.")
    }
  </function>
  <function name="adding iron">
    if (Got(iron scrap)) {
      IncreaseObjectCounter (iron scrap, "volume")
      msg ("You picked up more iron scraps.")
    }
    else if (not Got(iron scrap)) {
      IncreaseObjectCounter (iron scrap, "volume")
      MoveObjectHere (iron scrap)
    }
  </function>
  <function name="adding flint">
    if (Got(flint)) {
      IncreaseObjectCounter (flint, "volume")
    }
    else if (not Got(flint)) {
      IncreaseObjectCounter (flint, "volume")
      MoveObjectHere (flint)
    }
  </function>
  <function name="exposed rain">
    if (not game.pov.parent = basic campfire) {
      EnableTimer (rain Exposer)
    }
    else if (game.pov.parent = basic campfire) {
      if (basic campfire.lightsource = True) {
        msg ("Good thing im by the fire.")
        DisableTimer (rain Exposer)
      }
      else if (basic campfire.lightsource = False) {
        msg ("Better get a fire going if I wanna stay warm.")
        EnableTimer (rain Exposer)
      }
    }
  </function>
  <function name="drop trap setting">
    if (RandomChance(60)) {
      SetTimeout (120) {
        DisableTurnScript (trapset)
        DisableTurnScript (deermoves)
        MoveObject (deer, drop trap)
        set (drop trap, "set trap", False)
      }
    }
  </function>
  <function name="drop trap crafting"><![CDATA[
    if (Got(planks)) {
      if (Got(rope)) {
        if (GetInt(planks, "volume") >= 6) {
          if (GetInt(rope, "volume") >= 4) {
            rope.volume = rope.volume - 4
            planks.volume = planks.volume - 6
            MoveObjectHere (drop trap)
            nomore rope
            nomore planks
          }
          else if (GetInt(rope, "volume") < 4) {
            msg ("You need more rope.")
          }
        }
        else if (GetInt(planks, "volume") > 6) {
          msg ("You don't have enough planks for this.")
        }
      }
      else if (not Got(rope)) {
        msg ("You need rope t tie it together.")
      }
    }
    else if (not Got(planks)) {
      msg ("Help to have planks to make the cage with.")
    }
  ]]></function>
  <function name="adding rope"><![CDATA[
    if (Got(rope)) {
      rope.volume = rope.volume +6
      plant fiber.volume = plant fiber.volume - 1
      nomore plantfibers
      msg ("You crafted" + rope.volume + "feet of rope.")
    }
    else if (not Got(rope)) {
      if (GetInt(rope, "volume") <= 1) {
        plant fiber.volume = plant fiber.volume - 1
        nomore plantfibers
        rope.volume = rope.volume +6
        AddToInventory (rope)
        msg ("You crafted" + rope.volume + "feet of rope.")
      }
    }
  ]]></function>
  <function name="adding plant fibers">
    if (Got(plant fiber)) {
      IncreaseObjectCounter (plant fiber, "volume")
      msg ("You crafted more plant fibers.")
    }
    else if (not Got(plant fiber)) {
      IncreaseObjectCounter (plant fiber, "volume")
      AddToInventory (plant fiber)
      msg ("You crafted a plant fiber.")
    }
  </function>
  <function name="cooking meat">
    meatmenu = NewStringList()
    list add (meatmenu, "deer meat")
    list add (meatmenu, "rabbit meat")
    list add (meatmenu, "fish fillet")
    list add (meatmenu, "boar meat")
    list add (meatmenu, "bird meat")
    ShowMenu ("What are you cooking?", meatmenu, true) {
      if (result="deer meat") {
        deer cooking
      }
      if (result="rabbit meat") {
        rabbit cooking
      }
      if (result="fish fillet") {
        weapon crafting
      }
      if (result="boar meat") {
        food_drinks crafting
      }
      if (result="bird meat") {
        trap crafting
      }
    }
  </function>
  <function name="liquid cooking">
  </function>
  <function name="deer cooking">
    if (Got(deer meat)) {
      if (basic campfire.lightsource = True) {
        MoveObject (deer meat, stash)
        AddToInventory (deer steak)
      }
      else if (basic campfire.lightsource = False) {
        msg ("Helps to have fire to cook with.")
      }
    }
  </function>
  <function name="handle crafting"><![CDATA[
    if (Got(stick)) {
      if (GetInt(stick, "volume") >= 2) {
        if (not Got(handle)) {
          stick.volume = stick.volume - 2
          AddToInventory (handle)
          msg ("You made a handle.")
          nomore sticks
        }
        else if (Got(handle)) {
          msg ("You can only craft one handle at a time, try making a tool first.")
        }
      }
      else if (GetInt(stick, "volume") < 2) {
        msg ("You need more sticks, makes the handle stronger.")
      }
    }
  ]]></function>
  <function name="torch crafting">
    if (Got(stick)) {
      if (Got(cloth)) {
        DecreaseObjectCounter (stick, "volume")
        DecreaseObjectCounter (cloth, "volume")
        AddToInventory (torch)
        nomore sticks
        nomore cloth
      }
    }
  </function>
  <function name="tent frame crafting"><![CDATA[
    if (Got(stick)) {
      if (GetInt(stick, "volume") >= 5) {
        stick.volume = stick.volume - 5
        AddToInventory (tent frame)
        msg ("Tent frame crafted.")
        nomore sticks
      }
      else if (GetInt(stick, "volume") < 5) {
        msg ("You do not have enough sticks to make this.")
      }
    }
    else if (not Got(stick)) {
      msg ("You are not carry the item you want to craft with.")
    }
  ]]></function>
  <function name="nest loot">
    adding eggs
    adding feathers
  </function>
  <function name="adding eggs"><![CDATA[
    if (Got(eggs)) {
      if (RandomChance(70)) {
        eggs.volume = eggs.volume + 2
        msg ("You picked up some extra eggs. <br/>Keep an eye out for more.")
      }
      else if (RandomChance(25)) {
        msg ("You didn't find any eggs this time.<br/>Keep looking you'll find something.")
      }
    }
    else if (not Got(eggs)) {
      if (RandomChance(70)) {
        eggs.volume = eggs.volume + 2
        MoveObjectHere (eggs)
        msg ("Oh look some eggs.")
      }
      else if (RandomChance(25)) {
        msg ("No eggs this time.")
      }
    }
  ]]></function>
  <function name="adding feathers"><![CDATA[
    if (Got(feathers)) {
      if (RandomChance(80)) {
        feathers.volume = feathers.volume + 3
        msg ("You picked up some feathers.<br/>Keep an eye out for more.")
      }
      else if (RandomChance(25)) {
        msg ("You didn't find any feathers this time.<br/>Keep looking you'll find something.")
      }
    }
    else if (not Got(feathers)) {
      if (RandomChance(80)) {
        feathers.volume = feathers.volume + 3
        MoveObjectHere (feathers)
        msg ("There are some feathers.")
      }
      else if (RandomChance(25)) {
        msg ("No feathers this time.")
      }
    }
  ]]></function>
  <function name="adding deer meat"><![CDATA[
    if (Got(deer meat)) {
      deer meat.volume = deer meat.volume + 3
      msg ("You have skiinned the deer, blood steams down your hands as you think you better wash that off before it causes an infection.<br/>You added the meat to the others.")
    }
    else if (not Got(deer meat)) {
      deer meat.volume = deer meat.volume + 3
      MoveObjectHere (deer meat)
      msg ("You have skiinned the deer, blood steams down your hands as you think you better wash that off before it causes an infection.")
    }
  ]]></function>
  <function name="adding rabbit meat"><![CDATA[
    if (Got(rabbit meat)) {
      rabbit meat.volume = rabbit meat.volume + 2
      msg ("You have skiinned the rabbit, blood steams down your hands as you think you better wash that off before it causes an infection<br/>You added the meat to the others.")
    }
    else if (not Got(rabbit meat)) {
      rabbit meat.volume = rabbit meat.volume + 2
      MoveObjectHere (rabbit meat)
      msg ("You have skiinned the rabbit, blood steams down your hands as you think you better wash that off before it causes an infection.")
    }
  ]]></function>
  <function name="adding boar meat"><![CDATA[
    if (Got(boar meat)) {
      boar meat.volume = boar meat.volume + 3
      msg ("You have skiinned the boar, blood steams down your hands as you think you better wash that off before it causes an infection.<br/>You added the meat to the others.")
    }
    else if (not Got(boar meat)) {
      boar meat.volume = boar meat.volume + 3
      MoveObjectHere (boar meat)
      msg ("You have skiinned the boar, blood steams down your hands as you think you better wash that off before it causes an infection.")
    }
  ]]></function>
  <function name="arrow crafting">
    if (Got(feathers)) {
      if (Got(flint)) {
        if (Got(stick)) {
          DecreaseObjectCounter (stick, "volume")
          DecreaseObjectCounter (feathers, "volume")
          DecreaseObjectCounter (flint, "volume")
          adding arrows
          nomore sticks
          nomore flint
          nomore feathers
        }
        else if (not Got(stick)) {
          msg ("You do not have any sticks for arrows.")
        }
      }
      else if (not Got(flint)) {
        msg ("Need to find some flint for the tip befor you can finish this.")
      }
    }
    else if (not Got(feathers)) {
      msg ("You need a guide for the arrow. Maybe try to find some feathers.")
    }
  </function>
  <function name="adding arrows">
    if (Got(arrows)) {
      IncreaseObjectCounter (arrows, "volume")
      msg ("You crafted up a arrow, you might want more.")
    }
    else if (not Got(arrows)) {
      IncreaseObjectCounter (arrows, "volume")
      AddToInventory (arrows)
      msg ("You crafted up a arrow, you might want more.")
    }
  </function>
  <function name="stone knife crafting"><![CDATA[
    if (Got(sharp stone)) {
      if (Got(handle)) {
        if (Got(rope)) {
          rope.volume = rope.volume - 3
          DecreaseObjectCounter (handle, "volume")
          DecreaseObjectCounter (sharp stone, "volume")
          AddToInventory (stone knife)
          nomore rope
          nomore sharp stones
        }
        else if (GetInt(rope, "volume") < 3) {
          msg ("You need more rope to craft this.")
        }
      }
      else if (not Got(handle)) {
        msg ("You need a handle to be able to craft this.")
      }
    }
    else if (not Got(sharp stone)) {
      msg ("You will need a sharp stone for a blade.")
    }
  ]]></function>
  <function name="bow crafting"><![CDATA[
    if (Got(stick)) {
      if (GetInt(stick, "volume") >= 2) {
        if (Got(handle)) {
          if (Got(rope)) {
            if (GetInt(rope, "volume") >= 2) {
              rope.volume = rope.volume - 2
              stick.volume = stick.volume - 2
              AddToInventory (bow)
              nomore sticks
              nomore rope
            }
            else if (GetInt(rope, "volume") < 2) {
              msg ("You need more rope before making a bow.")
            }
          }
          else if (not Got(rope)) {
            msg ("You some rope to make the bow.")
          }
        }
        else if (not Got(handle)) {
          msg ("You need to craft a handle for the bow first.")
        }
      }
      else if (GetInt(stick, "volume") < 2) {
        msg ("You need to gather more sticks to craft the bow.")
      }
    }
    else if (not Got(stick)) {
      msg ("Without any sticks you can not craft a bow.")
    }
  ]]></function>
  <function name="cross bow crafting">
  </function>
  <function name="machete crafting"><![CDATA[
    if (Got(machete)) {
      msg ("You already got one! How many do you need?<br/>Why don't you try repairing the one you have.")
    }
    else if (not Got(machete)) {
      if (Got(iron scrap)) {
        if (GetInt(iron scrap, "volume") < 4) {
          if (Got(handle)) {
            iron scrap.volume = iron scrap.volume - 4
            DecreaseObjectCounter (handle, "volume")
            AddToInventory (machete)
            msg ("Very nice a machete!")
            nomore iron scrap
          }
          else if (not Got(handle)) {
            msg ("You need a handle for the grip.")
          }
        }
        else if (GetInt(iron scrap, "volume") < 4) {
          msg ("You need more iron befroe you can craft a machete.")
        }
      }
      else if (not Got(iron scrap)) {
        msg ("You should find some iron first to craft this.")
      }
    }
  ]]></function>
  <function name="box trap crafting"><![CDATA[
    if (Got(wood frame)) {
      if (Got(stick)) {
        if (GetInt(stick, "volume") >= 4) {
          stick.volume = stick.volume - 4
          DecreaseObjectCounter (wood frame, "volume")
          AddToInventory (box trap)
          msg ("Very nice, now dont forget lace it in a dense area.")
          nomore sticks
          nomore frames
        }
        else if (GetInt(stick, "volume") < 4) {
          msg ("Need some more sticks to complete the box.")
        }
      }
    }
    else if (not Got(wood frame)) {
      msg ("You need to build a frame for the box first.")
    }
  ]]></function>
  <function name="nomore rope"><![CDATA[
    if (GetInt(rope, "volume") <= 0) {
      MoveObject (rope, stash)
    }
  ]]></function>
  <function name="nomore plantfibers"><![CDATA[
    if (GetInt(plant fiber, "volume") <= 0) {
      MoveObject (plant fiber, stash)
    }
  ]]></function>
  <function name="nomore planks"><![CDATA[
    if (GetInt(planks, "volume") <= 0) {
      MoveObject (planks, stash)
    }
  ]]></function>
  <function name="nomore sharp stones"><![CDATA[
    if (GetInt(sharp stone, "volume") <= 0) {
      MoveObject (sharp stone, stash)
    }
  ]]></function>
  <function name="nomore sticks"><![CDATA[
    if (GetInt(stick, "volume") <= 0) {
      MoveObject (stick, stash)
    }
  ]]></function>
  <function name="nomore cloth"><![CDATA[
    if (GetInt(cloth, "volume") <= 0) {
      MoveObject (cloth, stash)
    }
  ]]></function>
  <function name="adding sticks">
    if (Got(stick)) {
      stick.volume = stick.volume + 3
      msg ("You got some more sticks.")
    }
    else if (not Got(stick)) {
      stick.volume = stick.volume + 3
      MoveObjectHere (stick)
      msg ("There are some sticks.")
    }
  </function>
  <function name="skinning animal">
  </function>
  <function name="sharp stick crafting">
    if (Got(stone knife)) {
      if (Got(stick)) {
        DecreaseObjectCounter (stick, "volume")
        AddToInventory (sharp sticks)
        nomore sticks
      }
      else if (not Got(stick)) {
        msg ("You need to pick up the stick before sharpening it.")
      }
    }
    else if (not Got(stone knife)) {
      msg ("You need a knife before you can sharpen this stick.")
    }
  </function>
  <function name="spear crafting"><![CDATA[
    if (Got(handle)) {
      if (Got(flint)) {
        if (Got(rope)) {
          if (GetInt(rope, "volume") >= 3) {
            MoveObject (handle, stash)
            DecreaseObjectCounter (flint, "volume")
            rope.volume = rope.volume - 3
            AddToInventory (spear)
            nomore rope
            nomore flint
          }
          else if (GetInt(rope, "volume") < 3) {
            msg ("You need a little more rope then that to tie down the head.")
          }
        }
        else if (not Got(rope)) {
          msg ("Always help to have a way to tie stuff with, don't you think?")
        }
      }
      else if (not Got(flint)) {
        msg ("You need something better then a stone for a head.")
      }
    }
    else if (not Got(handle)) {
      msg ("Try having a handle on this situation, what is a spear made of?")
    }
  ]]></function>
  <function name="nomore flint"><![CDATA[
    if (GetInt(flint, "volume") <= 0) {
      MoveObject (flint, stash)
    }
  ]]></function>
  <function name="adding leaves">
    if (not Got(leaves)) {
      IncreaseObjectCounter (leaves, "volume")
      AddToInventory (leaves)
    }
    else if (Got(leaves)) {
      IncreaseObjectCounter (leaves, "volume")
    }
  </function>
  <function name="nomore leaves"><![CDATA[
    if (GetInt(leaves, "volume") <= 0) {
      MoveObject (leaves, stash)
    }
  ]]></function>
  <function name="box trap setting">
    if (box trap.trapset = True) {
      SetTimeout (150) {
        if (deer.parent = box trap.parent) {
          if (RandomChance(50)) {
            DisableTimer (deer moves)
            HelperCloseObject (box trap)
            MoveObject (deer, box trap)
            play sound ("Red_stag_roar-Juan_Carlos_-2004708707.mp3", false, false)
            set (box trap, "trapset", False)
            msg ("What an awful sound, what is it?")
          }
          else {
            msg ("Should go check on that trap!")
          }
        }
        else if (deer1.parent = box trap.parent) {
          if (RandomChance(50)) {
            DisableTimer (deer moves1)
            HelperCloseObject (box trap)
            MoveObject (deer1, box trap)
            play sound ("Red_stag_roar-Juan_Carlos_-2004708707.mp3", false, false)
            set (box trap, "trapset", False)
            msg ("What an awful sound, what is it?")
          }
          else {
            msg ("Should go check on that trap!")
          }
        }
      }
    }
  </function>
  <function name="net trap setting">
  </function>
  <function name="tree health value"><![CDATA[
    if (GetInt(fallen tree, "health") < 5) {
      fallen tree.volume = fallen tree.volume + 5
    }
  ]]></function>
  <function name="bamboo cup crafting">
    if (Got(stone knife)) {
      play sound ("157524_SOUNDDOGS__wh.mp3", false, false)
      DecreaseObjectCounter (bamboo stalks, "volume")
      DecreaseObjectCounter (stone knife, "health")
      AddToInventory (bamboo cup)
      msg ("You crafted a cup! \" Good now I can bring water with me\".")
      nomore bamboo stalkss
    }
  </function>
  <function name="adding bamboo stalks"><![CDATA[
    if (Got(bamboo stalks)) {
      bamboo stalks.volume = bamboo stalks.volume + 3
      msg ("Picked up more bamboo stalks.")
    }
    else if (not Got(bamboo stalks)) {
      if (GetInt(bamboo stalks, "volume") >= 0) {
        bamboo stalks.volume = bamboo stalks.volume + 3
        MoveObjectHere (bamboo stalks)
      }
    }
  ]]></function>
  <function name="adding drinking water"><![CDATA[
    if (Contains (bamboo cup,drinking water)) {
      if (GetInt(drinking water, "volume") <= 15) {
        play sound ("Large Bubble-SoundBible.com-1084083477.mp3", true, false)
        drinking water.volume = drinking water.volume + 5
        switch (GetRandomInt (1, 5)) {
          case (1) {
            msg ("There some water to hold you over for awhile.")
          }
          case (2) {
            msg ("AH alittle more to go for a walk with.")
          }
          case (3) {
            msg ("Be glad you crafted this cup now you have water on the go.")
          }
          case (4) {
            msg ("This container can hold up to 20 liters.")
          }
          case (5) {
            msg ("Bet you could boil some liquids in this bamboo also!")
          }
        }
      }
      else if (GetInt(drinking water, "volume") >= 20) {
        msg ("It's only a stalk of bamboo not a big gulp.")
      }
    }
    else if (not Contains (bamboo cup,drinking water)) {
      play sound ("Large Bubble-SoundBible.com-1084083477.mp3", true, false)
      drinking water.volume = drinking water.volume + 5
      MoveObject (drinking water, bamboo cup)
      msg ("Yes finally some water, you can look at to see how many liters you have.")
    }
  ]]></function>
  <function name="nomore feathers"><![CDATA[
    if (GetInt(feathers, "volume") <= 0) {
      MoveObject (feathers, stash)
    }
  ]]></function>
  <function name="nomore drinking water">
    if (drinking water.volume = 0) {
      MoveObject (drinking water, stash)
      msg ("That was your last drink.")
    }
  </function>
  <function name="adding coal pieces">
    if (Got(coal pieces)) {
      coal pieces.volume = coal pieces.volume + 2
      msg ("You picked up some pieces of coal.")
    }
    else if (not Got(coal pieces)) {
      coal pieces.volume = coal pieces.volume + 2
      AddToInventory (coal pieces)
      msg ("You picked up some pieces of coal.")
    }
  </function>
  <function name="nomore coal">
    if (coal pieces.volume = 0) {
      MoveObject (coal pieces, stash)
    }
  </function>
  <function name="storage chest crafting"><![CDATA[
    if (GetBoolean(storage chest, "placed")) {
      if (Got(planks)) {
        if (GetInt(planks, "volume") >= 6) {
          if (Got(stone axe)) {
            play sound ("hammer_hitting_nail_into_wood.mp3", true, false)
            planks.volume = planks.volume - 6
            CloneObjectAndMove (storage chest, game.pov.parent)
            SetObjectFlagOn (storage chest, "placed")
          }
          else if (not Got(stone axe)) {
            msg ("Would help if you had a tool to put your chest together with. A stone axe is very versatile.")
          }
        }
        else if (GetInt(planks, "volume") < 6) {
          msg ("You need some more planks before crafting a chest.")
        }
      }
    }
    else if (not GetBoolean(storage chest, "placed")) {
      if (Got(planks)) {
        if (GetInt(planks, "volume") >= 6) {
          if (Got(stone axe)) {
            play sound ("hammer_hitting_nail_into_wood.mp3", true, false)
            DecreaseObjectCounter (stone axe, "health")
            MoveObjectHere (storage chest)
            SetObjectFlagOn (storage chest, "placed")
          }
          else if (not Got(stone axe)) {
            msg ("Would help if you had a tool to put your chest together with. A stone axe is very versatile.")
          }
        }
        else if (GetInt(planks, "volume") < 6) {
          msg ("You don't have enough planks to make this.")
        }
      }
    }
  ]]></function>
  <function name="nomore iron scrap"><![CDATA[
    if (GetInt(iron scrap, "volume") <= 0) {
      MoveObject (iron scrap, stash)
    }
  ]]></function>
  <function name="nomore frames"><![CDATA[
    if (GetInt(wood frame, "volume") >= 0) {
      MoveObject (wood frame, stash)
    }
  ]]></function>
  <function name="nomore bamboo stalks"><![CDATA[
    if (GetInt(bamboo stalks, "volume") >= 0) {
      MoveObject (bamboo stalks, stash)
    }
  ]]></function>
  <function name="adding cloth"><![CDATA[
    if (Got(plant fiber)) {
      if (GetInt(plant fiber, "volume") >= 1) {
        if (not Got(cloth)) {
          DecreaseObjectCounter (plant fiber, "volume")
          cloth.volume = cloth.volume + 2
          AddToInventory (cloth)
          msg ("You crafted a couple  of pieces of cloth.")
        }
        else if (Got(cloth)) {
          DecreaseObjectCounter (plant fiber, "volume")
          cloth.volume = cloth.volume + 2
          msg ("You crafted a couple  of pieces of cloth.")
        }
        nomore plantfibers
      }
    }
    else if (not Got(plant fiber)) {
      msg ("You need some sort of fber to craft cloth from.")
    }
  ]]></function>
  <walkthrough name="The Starting Basics">
    <steps type="simplestringlist">
      Start by collecting rocks, hit, destroy and take 3 grass. Find a bush, hit the bush 3 times, take stick. Combine stick into handle, craft rock into sharp stone, craft all grass then craft plant fiber. Now combine rope and handle for mancatcher then combine sharp stone with mancatcher for a stone axe. Now you can mine boulders, cut down trees and much more.
    </steps>
  </walkthrough>
  <walkthrough name="Campfire">
    <steps type="simplestringlist">
      After making stone axe cut down a tree (not bamboo) it takes 5 hits. Then its turns into fallen tree so chop up fallen tree 5 times and this will give you tree trunks to pick up. Once you have them craft 1 time and see inventory you'll have planks. Look at planks,; there it should tell you the number of planks you have (should be 3). Now find a rock, pick it up and craft it. This will give you a sharp stone; Now goto planks in inventory and click craft. A menu should appear with 3 options choose basic campfire and it will appear in room.
    </steps>
  </walkthrough>
  <walkthrough name="Crafting Table">
    <steps type="simplestringlist">
      Please read all walkthroughs to fully know how to craft each item. You will need stone axe and at least  13 planks; Once you have planks and stone axe click on planks then craft to bring up menu. Now from menu choose 2 or wood frame, drop wood frame then click on it in room,  click on upgrade, this will give you fortified wood. Repeat this click on fortified wood then upgrade to give you fortified wood1; Do this once more giving you your crafting table.
    </steps>
  </walkthrough>
  <timer name="Hunger">
    <interval>60</interval>
    <enabled />
    <script><![CDATA[
      DecreaseObjectCounter (player, "Hunger")
      if (GetInt(player, "Hunger") <= 0) {
        DisableTimer (Hunger)
        EnableTimer (Health)
      }
    ]]></script>
  </timer>
  <timer name="Health">
    <interval>25</interval>
    <enabled type="boolean">false</enabled>
    <script><![CDATA[
      if (GetInt(player, "Hunger") <= 0) {
        DecreaseObjectCounter (player, "Health")
        switch (GetRandomInt (1,5)) {
          case (1) {
            msg ("You should really get something to eat.")
          }
          case (2) {
            msg ("\"Came to far to die of hunger!\"")
          }
          case (3) {
            msg ("In a forest full of wild life and you're hungry!")
          }
          case (4) {
            msg ("\"God I'm gonna starve to death if I don't eat something soon!\"")
          }
          case (5) {
            msg ("To bad rocks don't give nurishment, huh?")
          }
        }
      }
      else if (GetInt(player, "Hunger") >= 1) {
        EnableTimer (Hunger)
      }
      if (GetInt(player, "Thirst") <= 0) {
        DecreaseObjectCounter (player, "Health")
        switch (GetRandomInt (1,5)) {
          case (1) {
            msg ("If you were smart you would have brought something to drink.")
          }
          case (2) {
            msg ("\"Would suck to die of thirst in a rain forest!\"")
          }
          case (3) {
            msg ("I heard certain protiens carry a hydration value, what do you think?")
          }
          case (4) {
            msg ("\"God I'm gonna die of thirst without something to drink!\"")
          }
          case (5) {
            msg ("Maybe you'll be able to collect water from leaves and stuff eventually?")
          }
        }
      }
      else if (GetInt(player, "Thirst") >= 1) {
        EnableTimer (Thirst)
      }
      if (GetInt(player, "Exposer") >= 20) {
        DecreaseObjectCounter (player, "Health")
        switch (GetRandomInt (1,5)) {
          case (1) {
            msg ("You need to seek shelter or build a fire before you die.")
          }
          case (2) {
            msg ("\"It's Damn cold!\"")
          }
          case (3) {
            msg ("Bet you wish you were at home right now huh?")
          }
          case (4) {
            msg ("\"If I don't get warm soon I'm gonna die from hypothermia!\"")
          }
          case (5) {
            msg ("So is it cold out here or is it just you?")
          }
        }
      }
      else if (GetInt(player, "Exposer") < 19) {
        EnableTimer (Exposer meter)
      }
    ]]></script>
  </timer>
  <timer name="Days Survived">
    <interval>300</interval>
    <enabled />
    <script>
      IncreaseObjectCounter (player, "Days Survived")
    </script>
  </timer>
  <timer name="Fire Burning">
    <interval>60</interval>
    <script>
      set (basic campfire, "lightsource", False)
      msg ("Fire died out.")
      MoveObject (coal, basic campfire)
      DisableTimer (Exposer Fire)
      DisableTimer (Fire Burning)
      stop sound
    </script>
  </timer>
  <timer name="Exposer Fire">
    <interval>5</interval>
    <script><![CDATA[
      if (ListContains(ScopeReachable(), basic campfire)) {
        if (basic campfire.lightsource = True) {
          if (GetInt(player, "Exposer") > 1) {
            player.Exposer = player.Exposer + 2
            msg ("Warming up pretty quickly.")
          }
          else if (GetInt(player, "Exposer") <= 0) {
            switch (GetRandomInt (1,3)) {
              case (1) {
                msg ("Much better being warm.")
              }
              case (2) {
                msg ("Bet your happy to be warm.")
              }
              case (3) {
                msg ("Can't beat a fire in the wilderness.")
              }
            }
          }
        }
      }
    ]]></script>
  </timer>
  <timer name="Exposer meter">
    <interval>45</interval>
    <enabled />
    <script><![CDATA[
      if (not game.pov.parent = basic campfire) {
        IncreaseObjectCounter (player, "Exposer")
        if (GetInt(player, "Exposer") >= 20) {
          EnableTimer (Health)
        }
        firsttime {
          msg ("Being exposed to the elements will kill you eventually.")
        }
        otherwise {
          switch (GetRandomInt (1, 5)) {
            case (1) {
              msg ("This bitterness will kill you if you don't get shelter or a fire.")
            }
            case (2) {
              msg ("Really should work on some sort of fire.")
            }
            case (3) {
              msg ("Won't survive long being exposed!")
            }
            case (4) {
              msg ("Getting colder might want to start a fire.")
            }
            case (5) {
              msg ("You're really going to want a way to stay warm.")
            }
          }
        }
      }
      else if (game.pov.parent = basic campfire) {
        if (basic campfire.lightsource = True) {
          msg ("Good thing im by the fire.")
          DisableTimer (Exposer meter)
        }
        else if (basic campfire.lightsource = False) {
          msg ("Better get a fire going if I wanna stay warm.")
          EnableTimer (Exposer meter)
        }
      }
    ]]></script>
  </timer>
  <timer name="rain Exposer">
    <interval>8</interval>
    <script>
      IncreaseObjectCounter (player, "Exposer")
      IncreaseObjectCounter (player, "Exposer")
      exposed rain
    </script>
  </timer>
  <timer name="deer meat cooking">
    <interval>60</interval>
  </timer>
  <timer name="posined timer">
    <interval>7</interval>
    <enabled type="boolean">false</enabled>
    <script>
      DecreaseObjectCounter (player, "Hunger")
      DecreaseObjectCounter (player, "Thirst")
      DecreaseObjectCounter (player, "Thirst")
      DecreaseObjectCounter (player, "Health")
      play sound ("stomach_gurgle_version_5.mp3", false, false)
      msg ("\" Oh my God, this stomach virus is going to kill me!\" Need to find a way to cure this, maybe something warm.")
    </script>
  </timer>
  <timer name="pond fish timer">
    <interval>20</interval>
    <script>
      HelperCloseObject (pond)
    </script>
  </timer>
  <timer name="rabbit moves">
    <interval>4</interval>
    <enabled />
    <script><![CDATA[
      object1 = rabbit
      numberofexits = 0
      moveornot = GetRandomInt (1, 100)
      if (not moveornot > object1.movechance) {
        list1 = NewObjectList ()
        foreach (exit, AllExits()) {
          if (Contains (object1.parent,exit) and exit.visible and not exit.lookonly and not exit.locked) {
            list add (list1, exit)
          }
        }
        list2 = NewObjectList()
        foreach (room, AllObjects()) {
          foreach (exit, list1) {
            if (Contains (room,exit.to) and object1.hunting ground = room.name) {
              numberofexits = numberofexits + 1
              list add (list2, exit)
            }
          }
        }
        if (not numberofexits = 0) {
          randomexit = GetRandomInt (1, numberofexits)
          chosenexit = ObjectListItem(list2, randomexit - 1)
          if (not HasScript(chosenexit, "script")) {
            object1.parent = chosenexit.to
          }
        }
        else {
        }
      }
    ]]></script>
  </timer>
  <timer name="rabbit moves1">
    <interval>2</interval>
    <enabled />
    <script><![CDATA[
      object3 = rabbit1
      numberofexits = 0
      moveornot = GetRandomInt (1, 100)
      if (not moveornot > object3.movechance) {
        list3 = NewObjectList ()
        foreach (exit, AllExits()) {
          if (Contains (object3.parent,exit) and exit.visible and not exit.lookonly and not exit.locked) {
            list add (list3, exit)
          }
        }
        list4 = NewObjectList()
        foreach (room, AllObjects()) {
          foreach (exit, list3) {
            if (Contains (room,exit.to) and object3.hunting ground = room.name) {
              numberofexits = numberofexits + 1
              list add (list4, exit)
            }
          }
        }
        if (not numberofexits = 0) {
          randomexit = GetRandomInt (1, numberofexits)
          chosenexit = ObjectListItem(list4, randomexit - 1)
          if (not HasScript(chosenexit, "script")) {
            object3.parent = chosenexit.to
          }
        }
        else {
        }
      }
    ]]></script>
  </timer>
  <timer name="deer moves">
    <interval>8</interval>
    <enabled />
    <script><![CDATA[
      object1 = deer
      numberofexits = 0
      moveornot = GetRandomInt (1, 100)
      if (not moveornot > object1.movechance) {
        list1 = NewObjectList ()
        foreach (exit, AllExits()) {
          if (Contains (object1.parent,exit) and exit.visible and not exit.lookonly and not exit.locked) {
            list add (list1, exit)
          }
        }
        list2 = NewObjectList()
        foreach (room, AllObjects()) {
          foreach (exit, list1) {
            if (Contains (room,exit.to) and object1.hunting ground = room.name) {
              numberofexits = numberofexits + 1
              list add (list2, exit)
            }
          }
        }
        if (not numberofexits = 0) {
          randomexit = GetRandomInt (1, numberofexits)
          chosenexit = ObjectListItem(list2, randomexit - 1)
          if (not HasScript(chosenexit, "script")) {
            object1.parent = chosenexit.to
          }
        }
        else {
        }
      }
    ]]></script>
  </timer>
  <timer name="deer moves1">
    <interval>6</interval>
    <enabled />
    <script><![CDATA[
      object1 = deer1
      numberofexits = 0
      moveornot = GetRandomInt (1, 100)
      if (not moveornot > object1.movechance) {
        list1 = NewObjectList ()
        foreach (exit, AllExits()) {
          if (Contains (object1.parent,exit) and exit.visible and not exit.lookonly and not exit.locked) {
            list add (list1, exit)
          }
        }
        list2 = NewObjectList()
        foreach (room, AllObjects()) {
          foreach (exit, list1) {
            if (Contains (room,exit.to) and object1.hunting ground = room.name) {
              numberofexits = numberofexits + 1
              list add (list2, exit)
            }
          }
        }
        if (not numberofexits = 0) {
          randomexit = GetRandomInt (1, numberofexits)
          chosenexit = ObjectListItem(list2, randomexit - 1)
          if (not HasScript(chosenexit, "script")) {
            object1.parent = chosenexit.to
          }
        }
        else {
        }
      }
    ]]></script>
  </timer>
  <timer name="dead">
    <interval>1</interval>
    <enabled />
    <script><![CDATA[
      if (GetInt(player, "Health") <= 0) {
        msg ("You survived" + player.Days Survived + "days.")
        finish
      }
    ]]></script>
  </timer>
  <timer name="Thirst">
    <interval>45</interval>
    <enabled />
    <script><![CDATA[
      DecreaseObjectCounter (player, "Thirst")
      if (GetInt(player, "Thirst") <= 0) {
        DisableTimer (Thirst)
        EnableTimer (Health)
      }
    ]]></script>
  </timer>
  <timer name="exposed tent">
    <interval>7</interval>
    <script><![CDATA[
      if (GetInt(player, "Exposer") >= 1) {
        DisableTimer (Exposer meter)
        DecreaseObjectCounter (player, "Exposer")
      }
    ]]></script>
  </timer>
</asl>