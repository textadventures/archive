<!--Saved by Quest 5.5.5328.26617-->
<asl version="550">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <game name="Rookie">
    <gameid>47ddde8e-4090-4ae1-969e-5586e1f2baa7</gameid>
    <version>1.0</version>
    <firstpublished>2014</firstpublished>
    <StrAccept type="int">0</StrAccept>
    <showdescriptiononenter />
    <autodescription type="boolean">false</autodescription>
    <appendobjectdescription type="boolean">false</appendobjectdescription>
    <gridmap />
    <author>Avantar</author>
    <DexAccept type="int">0</DexAccept>
    <ConAccept type="int">0</ConAccept>
    <DiceRoll type="int">0</DiceRoll>
    <IntAccept type="int">0</IntAccept>
    <rcount type="int">0</rcount>
    <WisAccept type="int">0</WisAccept>
    <hair type="int">1</hair>
    <colour type="int">1</colour>
    <face type="int">1</face>
    <ChaAccept type="int">0</ChaAccept>
    <attr name="Ability_number" type="int">0</attr>
    <attr name="menu_active" type="int">0</attr>
    <roomenter type="script">
    </roomenter>
    <start type="script">
    </start>
  </game>
  <object name="Character Creation Sheet">
    <inherit name="editor_room" />
    <alias>Character Creation Sheet</alias>
    <description><![CDATA[<h2>Character Creation Sheet</h2><br/><br/>You will be playing a <b>Tough Hero</b> and therefore your primary ability will be <b>Constitution</b>.<br/><br/><br/>Your name is: Agent <b>{player.alias}</b> &nbsp;<a class="cmdlink"  onclick="ASLEvent('cc',null)">Choose your name.</a><br/><br/>Strenght &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp{player.Str}  &nbsp;&nbsp;<a class="cmdlink"  onclick="ASLEvent('str_info',null)">Determine</a><br/>Dexterity &nbsp;&nbsp;&nbsp;&nbsp;=&nbsp{player.Dex} &nbsp;&nbsp;<a class="cmdlink"  onclick="ASLEvent('dex_info',null)">Determine</a><br/>Constitution  = {player.Con} &nbsp;&nbsp;<a class="cmdlink"  onclick="ASLEvent('con_info',null)">Determine</a><br/>Intelligence &nbsp;= {player.Int} &nbsp;&nbsp;<a class="cmdlink"  onclick="ASLEvent('int_info',null)">Determine</a><br/>Wisdom &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= {player.Wis} &nbsp;&nbsp;<a class="cmdlink"  onclick="ASLEvent('wis_info',null)">Determine</a><br/>Charisma &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= {player.Cha} &nbsp;&nbsp;<a class="cmdlink"  onclick="ASLEvent('cha_info',null)">Determine</a><br/><br/>Select your <a class="cmdlink"  onclick="ASLEvent('feats_select',null)">Feats</a><br/><br/>{object:Hair} &nbsp;&nbsp;{object:Hair Colour} &nbsp;&nbsp;{object:Face}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="cmdlink"  onclick="ASLEvent('start_game',null)">Play Game</a>]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <attr name="grid_fill">Violet</attr>
    <attr name="grid_label">kjkkjkjkjkjk</attr>
    <beforeenter type="script">
      JS.ShowGrid (0)
    </beforeenter>
    <enter type="script">
      picture ("Face"+game.hair+game.colour+game.face+".jpg")
    </enter>
    <object name="Hair">
      <inherit name="editor_object" />
      <short type="script">
        game.hair = 1
        game.pov.parent = Empty
        ClearScreen
        game.pov.parent = Character Creation Sheet
      </short>
      <long type="script">
        game.hair = 2
        game.pov.parent = Empty
        ClearScreen
        game.pov.parent = Character Creation Sheet
      </long>
      <visible />
      <scenery />
      <displayverbs type="stringlist" />
    </object>
    <object name="Hair Colour">
      <inherit name="editor_object" />
      <black type="script">
        game.colour = 1
        game.pov.parent = Empty
        ClearScreen
        game.pov.parent = Character Creation Sheet
      </black>
      <brown type="script">
        game.colour = 2
        game.pov.parent = Empty
        ClearScreen
        game.pov.parent = Character Creation Sheet
      </brown>
      <blonde type="script">
        game.colour = 3
        game.pov.parent = Empty
        ClearScreen
        game.pov.parent = Character Creation Sheet
      </blonde>
      <visible />
      <scenery />
      <displayverbs type="stringlist" />
    </object>
    <object name="Face">
      <inherit name="editor_object" />
      <face1 type="script">
        game.face = 1
        game.pov.parent = Empty
        ClearScreen
        game.pov.parent = Character Creation Sheet
      </face1>
      <face2 type="script">
        game.face = 2
        game.pov.parent = Empty
        ClearScreen
        game.pov.parent = Character Creation Sheet
      </face2>
      <face3 type="script">
        game.face = 3
        game.pov.parent = Empty
        ClearScreen
        game.pov.parent = Character Creation Sheet
      </face3>
      <visible />
      <scenery />
      <displayverbs type="stringlist" />
    </object>
    <object name="player">
      <inherit name="editor_object" />
      <inherit name="editor_player" />
      <Str type="int">0</Str>
      <Dex type="int">0</Dex>
      <Con type="int">0</Con>
      <Int type="int">0</Int>
      <Wis type="int">0</Wis>
      <Cha type="int">0</Cha>
      <statusattributes type="stringdictionary">
        <item>
          <key>hp_display</key>
          <value>HP:!</value>
        </item>
        <item>
          <key>equippedstatusr</key>
          <value>!</value>
        </item>
        <item>
          <key>equippedstatusl</key>
          <value>!</value>
        </item>
      </statusattributes>
      <HP type="int">0</HP>
      <BAB type="int">1</BAB>
      <attr name="hp_display" type="int">0</attr>
      <attr name="max_HP" type="int">0</attr>
      <alias>player</alias>
      <StrMod type="int">0</StrMod>
      <DexMod type="int">0</DexMod>
      <ConMod type="int">0</ConMod>
      <IntMod type="int">0</IntMod>
      <WisMod type="int">0</WisMod>
      <ChaMod type="string"></ChaMod>
      <PreviousRoom type="string"></PreviousRoom>
      <bullets type="int">0</bullets>
      <attr name="max_bullets" type="int">0</attr>
      <equippedstatusr>Right Hand: Nothing</equippedstatusr>
      <equippedstatusl>Left Hand: Nothing</equippedstatusl>
      <stry type="boolean">false</stry>
      <object name="Fists">
        <inherit name="editor_object" />
        <inherit name="weapon" />
        <visible type="boolean">false</visible>
        <damage>1d3</damage>
      </object>
    </object>
  </object>
  <command name="CSheet">
    <pattern>c; character sheet</pattern>
    <script>
      character sheet
    </script>
  </command>
  <turnscript name="Display HP">
    <enabled />
    <script>
      sa
    </script>
  </turnscript>
  <object name="Character Sheet">
    <inherit name="editor_room" />
    <description><![CDATA[<br/>{object:Info}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="cmdlink"  onclick="ASLEvent('Close',null)">Return To Game</a><br/><br/><br/>]]></description>
    <alias>Character Sheet</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <beforeenter type="script">
      ClearScreen
      msg ("")
      picture ("CSheet.JPG")
      msg ("")
      picture ("Strength"+game.pov.Str+".jpg")
      picture ("Dexterity"+game.pov.Dex+".jpg")
      picture ("Constitution"+game.pov.Con+".jpg")
      picture ("Intelligence"+game.pov.Int+".jpg")
      picture ("Wisdom"+game.pov.Wis+".jpg")
      picture ("Charisma"+game.pov.Cha+".jpg")
    </beforeenter>
    <enter type="script">
    </enter>
    <object name="Info">
      <inherit name="editor_object" />
      <take type="boolean">false</take>
      <alias>Info</alias>
      <visible />
      <scenery type="boolean">false</scenery>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <look>More information about your ability scores.</look>
    </object>
  </object>
  <object name="Strength">
    <inherit name="editor_room" />
    <description><![CDATA[<h2>Strength</h2> <br/><br/>Strength depicts your physical strength. It determines how hard you hit in melee combat and how much weight you can lift.<br/><br/><b>Rolling the dice</b><br/>Three six sided dice (d6) will be rolled and the totals added to form your Strength ability score of a possible score between 1 and 18.<br/>You can re-roll a maximum of three times.<br/><br/>Please click on 'Roll Dice' to determine your Strenght ability score:<br/><a class="cmdlink"  onclick="ASLEvent('str_roll',null)">Roll Dice</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="cmdlink"  onclick="ASLEvent('Close',null)">Return to Character Sheet</a>]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
  </object>
  <object name="Dexterity">
    <inherit name="editor_room" />
    <description><![CDATA[<h2>Dexterity</h2><br/><br/>Dexterity measures hand-eye coordination, agility, reflexes, and balance.<br/><br/><b>Rolling the dice</b><br/>Three six sided dice (d6) will be rolled and the totals added to form your Dexterity ability score of a possible score between 1 and 18.<br/>You can re-roll a maximum of three times.<br/><br/>Please click on 'Roll Dice' to determine your Dexterity ability score:<br/><a class="cmdlink"  onclick="ASLEvent('dex_roll',null)">Roll Dice</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="cmdlink"  onclick="ASLEvent('Close',null)">Return to Character Sheet</a>]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
  </object>
  <object name="Constitution">
    <inherit name="editor_room" />
    <description><![CDATA[<h2>Constitution</h2><br/><br/>Constitution represents your character’s health and stamina. A<br/>Constitution bonus increases a character’s hit points. (Hit Points = How much damage you can take before you die.)<br/><br/><b>Rolling the dice</b><br/>Three six sided dice (d6) will be rolled and the totals added to form your Constitution ability score of a possible score between 1 and 18.<br/>You can re-roll a maximum of three times.<br/><br/>Please click on 'Roll Dice' to determine your Constitution ability score:<br/><a class="cmdlink"  onclick="ASLEvent('con_roll',null)">Roll Dice</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="cmdlink"  onclick="ASLEvent('Close',null)">Return to Character Sheet</a>]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
  </object>
  <object name="Intelligence">
    <inherit name="editor_room" />
    <description><![CDATA[<h2>Intelligence</h2><br/><br/>Intelligence determines how well your character learns and reasons.<br/><br/><b>Rolling the dice</b><br/>Three six sided dice (d6) will be rolled and the totals added to form your Intelligence ability score of a possible score between 1 and 18.<br/>You can re-roll a maximum of three times.<br/><br/>Please click on 'Roll Dice' to determine your Intelligence ability score:<br/><a class="cmdlink"  onclick="ASLEvent('int_roll',null)">Roll Dice</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="cmdlink"  onclick="ASLEvent('Close',null)">Return to Character Sheet</a>]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
  </object>
  <object name="Wisdom">
    <inherit name="editor_room" />
    <description><![CDATA[<h2>Wisdom</h2><br/><br/>Wisdom describes a character’s willpower, common sense, perception,<br/>and intuition. While Intelligence represents one’s ability to<br/>analyze information, Wisdom represents being in tune with and<br/>aware of one’s surroundings. An “absentminded professor” has low<br/>Wisdom and high Intelligence. A simpleton (low Intelligence)<br/>might still have great insight (high Wisdom).<br/><br/><b>Rolling the dice</b><br/>Three six sided dice (d6) will be rolled and the totals added to form your Wisdom ability score of a possible score between 1 and 18.<br/>You can re-roll a maximum of three times.<br/><br/>Please click on 'Roll Dice' to determine your Wisdom ability score:<br/><a class="cmdlink"  onclick="ASLEvent('wis_roll',null)">Roll Dice</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="cmdlink"  onclick="ASLEvent('Close',null)">Return to Character Sheet</a>]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
  </object>
  <object name="Charisma">
    <inherit name="editor_room" />
    <description><![CDATA[<h2>Charisma</h2><br/><br/>Charisma measures a character’s force of personality, persuasiveness,<br/>personal magnetism, ability to lead, and physical attractiveness. This<br/>ability represents actual strength of personality, not merely how one<br/>is perceived by others in a social setting.<br/><br/><b>Rolling the dice</b><br/>Three six sided dice (d6) will be rolled and the totals added to form your Charisma ability score of a possible score between 1 and 18.<br/>You can re-roll a maximum of three times.<br/><br/>Please click on 'Roll Dice' to determine your Charisma ability score:<br/><a class="cmdlink"  onclick="ASLEvent('cha_roll',null)">Roll Dice</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class="cmdlink"  onclick="ASLEvent('Close',null)">Return to Character Sheet</a>]]></description>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
  </object>
  <verb>
    <pattern>equipl</pattern>
    <property>equipl</property>
    <defaulttext>You can only equip weapons and armor.</defaulttext>
  </verb>
  <verb>
    <pattern>equipr</pattern>
    <property>equipr</property>
    <defaulttext>You can only equip weapons and armor.</defaulttext>
  </verb>
  <verb>
    <pattern>reload</pattern>
    <property>reload</property>
    <defaulttext>You can only reload weapons that take some kind of ammunition.</defaulttext>
  </verb>
  <verb>
    <pattern>shoot</pattern>
    <property>shoot</property>
    <defaulttext>You can not shoot that.</defaulttext>
  </verb>
  <turnscript name="Bare Hands">
    <enabled />
    <script>
      if (not HasAttribute (player, "equippedl") and not HasAttribute (player, "equippedr") and not HasAttribute (player, "equippedt")) {
        player.equippedf = Fists
      }
    </script>
  </turnscript>
  <object name="Test">
    <inherit name="editor_room" />
    <description><![CDATA[<h2>Test Room</h2><br/><br/>You are in a small room with a window in the north facing wall and a door exiting the room to the East.<br/>{if potplant.parent=Test:An empty potplant is standing on the window sill.} In the center of the room stands a metal table {if Walter PPK.parent=Test:with a pistol laying on the cold and bare tabletop}.<br/><br/><br/><br/>]]></description>
    <alias>Test</alias>
    <object name="Walter PPK">
      <inherit name="editor_object" />
      <inherit name="weapon" />
      <bullets type="int">2</bullets>
      <attr name="max_bullets" type="int">14</attr>
      <damage>1d6</damage>
      <ranged />
      <attr name="weapon_type">Pistol</attr>
      <attr name="ammo_type">9mm</attr>
      <alias>Walter PPK</alias>
      <attr name="feature_usegive" type="boolean">false</attr>
      <alt type="stringlist">
        <value>pistol</value>
      </alt>
    </object>
    <object name="potplant">
      <inherit name="editor_object" />
      <inherit name="abstract_target" />
      <alias>potplant</alias>
    </object>
  </object>
  <verb>
    <property>short</property>
    <pattern>short</pattern>
    <defaultexpression>"You can't short " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>long</property>
    <pattern>long</pattern>
    <defaultexpression>"You can't long " + object.article + "."</defaultexpression>
  </verb>
  <object name="Empty">
    <inherit name="editor_room" />
  </object>
  <verb>
    <property>black</property>
    <pattern>black</pattern>
    <defaultexpression>"You can't black " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>brown</property>
    <pattern>brown</pattern>
    <defaultexpression>"You can't brown " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>blonde</property>
    <pattern>blonde</pattern>
    <defaultexpression>"You can't blonde " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>face1</property>
    <pattern>face1</pattern>
    <defaultexpression>"You can't face1 " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>face2</property>
    <pattern>face2</pattern>
    <defaultexpression>"You can't face2 " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>face3</property>
    <pattern>face3</pattern>
    <defaultexpression>"You can't face3 " + object.article + "."</defaultexpression>
  </verb>
  <object name="Shooting Range">
    <inherit name="editor_room" />
  </object>
  <object name="Feats">
    <inherit name="editor_room" />
    <description><![CDATA[<input type="checkbox" name="vehicle" value="Car" checked> I have a car<br>]]></description>
  </object>
  <type name="weapon">
    <location>single</location>
    <take />
    <attr name="ammo_type" type="string"></attr>
    <equipl type="script">
      if (this.parent = game.pov) {
        if (this.location="dhand") {
          msg ("Please use the command 'equip' for two handed weapons.")
        }
        else if (HasAttribute(game.pov, "equippedt")) {
          msg ("You put away your " + game.pov.equippedt.alias + " and draw your " + this.alias + ".")
          game.pov.equippedt.inventoryverbs = Split ("Look at;Drop;Equip;Identify", ";")
          game.pov.equippedl = this
          game.pov.equippedt = null
          this.inventoryverbs = Split ("Look at;Drop;Unequip", ";")
          game.pov.equippedstatusl = "Left Hand: " + this.alias
          game.pov.equippedstatusr = "Right Hand: nothing"
          game.pov.bullets = this.bullets
          game.pov.max_bullets = this.max_bullets
        }
        else if (this = GetAttribute(game.pov, "equippedl")) {
          msg ("You already have this weapon equipped in your left hand.")
        }
        else if (this = GetAttribute(game.pov, "equippedr")) {
          msg ("You already have this weapon equipped in your right hand")
        }
        else if (HasAttribute(game.pov, "equippedl")) {
          msg ("You put away your " + game.pov.equippedl.alias + " and draw your " + this.alias + ".")
          game.pov.equippedl.inventoryverbs = Split ("Look at;Drop;Equipl;Equipr;Identify", ";")
          game.pov.equippedl = this
          game.pov.equippedt = null
          game.pov.bullets = this.bullets
          game.pov.max_bullets = this.max_bullets
          this.inventoryverbs = Split ("Look at;Drop;Unequip", ";")
          game.pov.equippedstatusl = "Left Hand: " + this.alias
        }
        else if (null = GetAttribute(game.pov, "equippedl")) {
          msg ("You draw your " + this.alias + ".")
          game.pov.equippedl = this
          game.pov.bullets = this.bullets
          game.pov.max_bullets = this.max_bullets
          this.inventoryverbs = Split ("Look at;Drop;Unequip", ";")
          game.pov.equippedstatusl = "Left Hand: " + this.alias
        }
        else {
          msg ("You put away your " + game.pov.equippedl.alias + " and draw your " + this.alias + ".")
          game.pov.equippedl = this
          game.pov.bullets = this.bullets
          game.pov.max_bullets = this.max_bullets
          this.inventoryverbs = Split ("Look at;Drop;Unequip", ";")
          game.pov.equippedstatusl = "Wielding(LHand): " + this.alias
        }
      }
      else {
        msg ("You don't have it on your person. Try to take or pick it up first.")
      }
    </equipl>
    <equipr type="script">
      if (this.parent = game.pov) {
        if (this.location="dhand") {
          msg ("Please use the command 'equip' for two handed weapons.")
        }
        else if (HasAttribute(game.pov, "equippedt")) {
          msg ("You put away your " + game.pov.equippedt.alias + " and draw your " + this.alias + ".")
          game.pov.equippedt.inventoryverbs = Split ("Look at;Drop;Equip;Identify", ";")
          game.pov.equippedr = this
          game.pov.equippedt = null
          game.pov.bullets = this.bullets
          game.pov.max_bullets = this.max_bullets
          this.inventoryverbs = Split ("Look at;Drop;Unequip", ";")
          game.pov.equippedstatusr = "Right Hand: " + this.alias+ "(" +this.bullets+"/"+this.max_bullets+")"
          game.pov.equippedstatusl = "Left Hand: nothing"
        }
        else if (this = GetAttribute(game.pov, "equippedl")) {
          msg ("You already have this weapon equipped in your left hand.")
        }
        else if (this = GetAttribute(game.pov, "equippedr")) {
          msg ("You already have this weapon equipped in your right hand")
        }
        else if (HasAttribute(game.pov, "equippedl")) {
          msg ("You draw your " + this.alias + ".")
          game.pov.equippedr = this
          game.pov.bullets = this.bullets
          game.pov.max_bullets = this.max_bullets
          this.inventoryverbs = Split ("Look at;Drop;Unequip", ";")
          game.pov.equippedstatusr = "Right Hand: " + this.alias + "(" +this.bullets+"/"+this.max_bullets+")"
        }
        else if (null = GetAttribute(game.pov, "equippedr")) {
          msg ("You draw your " + this.alias + ".")
          game.pov.equippedr = this
          game.pov.bullets = this.bullets
          game.pov.max_bullets = this.max_bullets
          this.inventoryverbs = Split ("Look at;Drop;Unequip", ";")
          game.pov.equippedstatusr = "Right Hand: " + this.alias+ "(" +this.bullets+"/"+this.max_bullets+")"
        }
        else {
          msg ("You put away your " + game.pov.equippedr.alias + " and draw your " + this.alias + ".")
          game.pov.equippedr.inventoryverbs = Split ("Look at;Drop;Equipl;Equipr;Identify", ";")
          game.pov.equippedr = this
          game.pov.bullets = this.bullets
          game.pov.max_bullets = this.max_bullets
          this.inventoryverbs = Split ("Look at;Drop;Unequip", ";")
          game.pov.equippedstatusr = "Right Hand: " + this.alias+ "(" +this.bullets+"/"+this.max_bullets+")"
        }
      }
      else {
        msg ("You don't have it on your person. Try to take or pick it up first.")
      }
    </equipr>
    <selfuseon type="script">
      msg ("Please use equipl or equipr to place the weapon in your left - or right hand.")
    </selfuseon>
    <use type="script">
      msg ("Please use equipl or equipr to place the weapon in your left - or right hand.")
    </use>
    <reload type="script"><![CDATA[
      ca = NewStringList ()
      wa = NewStringList ()
      if (this.parent = game.pov) {
        if (this = GetAttribute(game.pov, "equippedl") or this = GetAttribute(game.pov, "equippedr") or this = GetAttribute(game.pov, "equippedt")) {
          foreach (obj, GetDirectChildren (game.pov)) {
            if (DoesInherit(obj, "ammo") and obj.ammo_type = this.ammo_type) {
              list add (ca, obj.alias)
              cammo = obj
            }
            else if (DoesInherit(obj, "ammo") and not obj.ammo_type=this.ammo_type) {
              list add (wa, obj.alias)
            }
          }
          if (ListCount (ca) >= 1) {
            count = this.max_bullets - this.bullets
            if (count = 0) {
              msg ("Your weapon can not hold any more bullets than it currently has.")
            }
            else if (count > cammo.amount) {
              this.bullets = this.bullets + cammo.amount
              RemoveObject (cammo)
              msg ("You reload your "+this.alias+".")
              if (this = player.equippedl) {
                game.pov.equippedstatusl = "Left Hand: " + this.alias + "(" +this.bullets+"/"+this.max_bullets+")"
              }
              else if (this = player.equippedr) {
                game.pov.equippedstatusr = "Right Hand: " + this.alias + "(" +this.bullets+"/"+this.max_bullets+")"
              }
              else {
                game.pov.equippedstatusr = "Right Hand: " + this.alias + "(" +this.bullets+"/"+this.max_bullets+")"
                game.pov.equippedstatusr = "Left Hand: " + this.alias
              }
            }
            else {
              this.bullets = this.bullets + count
              cammo.amount = cammo.amount - count
              msg ("You reload your "+this.alias+".")
              if (this = player.equippedl) {
                game.pov.equippedstatusl = "Left Hand: " + this.alias + "(" +this.bullets+"/"+this.max_bullets+")"
              }
              else if (this = player.equippedr) {
                game.pov.equippedstatusr = "Right Hand: " + this.alias + "(" +this.bullets+"/"+this.max_bullets+")"
              }
              else {
                game.pov.equippedstatusr = "Right Hand: " + this.alias + "(" +this.bullets+"/"+this.max_bullets+")"
                game.pov.equippedstatusr = "Left Hand: " + this.alias
              }
            }
          }
          else if (ListCount (wa) >= 1) {
            msg ("You do not have the correct ammunition for your "+this.weapon_type+" on your person.")
          }
          else {
            msg ("You do not have any ammunition on your person.")
          }
        }
        else {
          msg ("You do not have the "+this.alias+" equipped in your hands. Please equip the weapon first.")
        }
      }
      else {
        msg ("You do not have the "+this.alias+" on your person.")
      }
    ]]></reload>
  </type>
  <type name="ammo">
    <amount type="int">0</amount>
    <attr name="ammo_type">9mm</attr>
  </type>
  <type name="enemy_target">
    <defense type="int">10</defense>
    <shoot type="script">
      if (not HasAttribute (player, "equippedl") and not HasAttribute (player, "equippedr") and not HasAttribute (player, "equippedt")) {
        player.equippedd = player.equippedf
        player.stry = false
      }
      else if (HasAttribute (player, "equippedr") and HasAttribute (player, "equippedl")) {
        player.equippedd = player.equippedr
        player.stry = true
      }
      else if (HasAttribute (player, "equippedr")) {
        player.equippedd = player.equippedr
        msg (player.equippedd)
        player.stry = false
      }
      else if (HasAttribute (player, "equippedl")) {
        player.equippedd = player.equippedl
        player.stry = false
      }
      else if (HasAttribute (player, "equippedt")) {
        player.equippedd = player.equippedt
        player.stry = false
      }
      if (player.equippedd = null) {
        msg ("You do not have any weapon equipped.")
      }
      else if (HasAttribute (player, "equippedd") and GetBoolean(player.equippedd,"ranged")=true) {
        msg ("You shoot the "+this.alias+" f****ed-up with your "+player.equippedd.alias)
      }
      else {
        msg ("You can do not have a ranged weapon equipped!")
      }
    </shoot>
  </type>
  <type name="abstract_target">
    <shoot type="script">
      if (not HasAttribute (player, "equippedl") and not HasAttribute (player, "equippedr") and not HasAttribute (player, "equippedt")) {
        player.equippedd = player.equippedf
        player.stry = false
      }
      else if (HasAttribute (player, "equippedr") and HasAttribute (player, "equippedl")) {
        player.equippedd = player.equippedr
        player.stry = true
      }
      else if (HasAttribute (player, "equippedr")) {
        player.equippedd = player.equippedr
        msg (player.equippedd)
        player.stry = false
      }
      else if (HasAttribute (player, "equippedl")) {
        player.equippedd = player.equippedl
        player.stry = false
      }
      else if (HasAttribute (player, "equippedt")) {
        player.equippedd = player.equippedt
        player.stry = false
      }
      if (player.equippedd = null) {
        msg ("You do not have any weapon equipped.")
      }
      else if (HasAttribute (player, "equippedd") and GetBoolean(player.equippedd,"ranged")=true) {
        msg ("You shoot the crap out of the "+this.alias+" for some reason.")
      }
      else {
        msg ("You do not have a ranged weapon equipped!")
      }
      if (player.stry = true) {
        player.stry = false
        player.equippedd = player.equippedl
        msg ("You fire a second shot at the "+this.alias+"with your "+player.equippedd.alias)
      }
    </shoot>
  </type>
  <function name="ProcessTextCommand_If" parameters="section, data" type="string"><![CDATA[
    command = Mid(section, 4)
    colon = Instr(command, ":")
    if (colon = 0) {
      return ("{if " + command + "}")
    }
    else {
      text = Mid(command, colon + 1)
      condition = Left(command, colon - 1)
      operator = Instr(condition, "<=")
      if (operator <> 0) {
        operatorlength = 2
      }
      if (operator = 0) {
        operator = Instr(condition, ">=")
        if (operator <> 0) {
          operatorlength = 2
        }
      }
      if (operator = 0) {
        operator = Instr(condition, "<>")
        if (operator <> 0) {
          operatorlength = 2
        }
      }
      if (operator = 0) {
        operator = Instr(condition, "<")
        if (operator <> 0) {
          operatorlength = 1
        }
      }
      if (operator = 0) {
        operator = Instr(condition, ">")
        if (operator <> 0) {
          operatorlength = 1
        }
      }
      if (operator = 0) {
        operator = Instr(condition, "=")
        if (operator <> 0) {
          operatorlength = 1
        }
      }
      if (operator = 0) {
        checkfor = true
        if (StartsWith(condition, "not ")) {
          checkfor = false
          condition = Mid(condition, 5)
        }
        dot = Instr(condition, ".")
        if (dot = 0) {
          result = GetBoolean(game, condition)
        }
        else {
          objectname = Left(condition, dot - 1)
          attributename = Mid(condition, dot + 1)
          object = GetObject(objectname)
          if (object = null) {
            result = false
          }
          else {
            result = GetBoolean(object, attributename)
          }
        }
        if (result = checkfor) {
          return (ProcessTextSection(text, data))
        }
        else {
          return ("")
        }
      }
      else {
        lhs = Left(condition, operator - 1)
        rhs = Mid(condition, operator + operatorlength)
        op = Mid(condition, operator, operatorlength)
        dot = Instr(lhs, ".")
        if (dot = 0) {
          objectname = ""
          attributename = ""
          if (HasInt(game, lhs)) {
            objectname = "game"
            attributename = lhs
          }
          else {
            return ("{if " + command + "}")
          }
        }
        else {
          objectname = Left(lhs, dot - 1)
          attributename = Mid(lhs, dot + 1)
        }
        object = GetObject(objectname)
        if (object = null) {
          return ("{if " + command + "}")
        }
        else {
          value = GetAttribute(object, attributename)
          // Next three lines added by The pixie
          if (TypeOf(value) = "object") {
            value = value.name
          }
          if (op = "=") {
            if (ToString(value) = rhs) {
              return (ProcessTextSection(text, data))
            }
            else {
              return ("")
            }
          }
          else if (op = "<>") {
            if (not ToString(value) = rhs) {
              return (ProcessTextSection(text, data))
            }
            else {
              return ("")
            }
          }
          else if (op = ">") {
            if (ToDouble(ToString(value)) > ToDouble(rhs)) {
              return (ProcessTextSection(text, data))
            }
            else {
              return ("")
            }
          }
          else if (op = "<") {
            if (ToDouble(ToString(value)) < ToDouble(rhs)) {
              return (ProcessTextSection(text, data))
            }
            else {
              return ("")
            }
          }
          else if (op = ">=") {
            if (ToDouble(ToString(value)) >= ToDouble(rhs)) {
              return (ProcessTextSection(text, data))
            }
            else {
              return ("")
            }
          }
          else if (op = "<=") {
            if (ToDouble(ToString(value)) <= ToDouble(rhs)) {
              return (ProcessTextSection(text, data))
            }
            else {
              return ("")
            }
          }
        }
      }
    }
  ]]></function>
  <function name="character sheet">
    game.pov.PreviousRoom = game.pov.parent
    game.pov.parent = Character Sheet
  </function>
  <function name="sa">
    game.pov.hp_display = game.pov.HP + " / " + game.pov.max_HP
  </function>
  <function name="Close" parameters="args">
    if (game.DiceRoll = 0) {
      ClearScreen
      if (game.pov.PreviousRoom = "") {
        game.pov.parent = Character Creation Sheet
      }
      else {
        game.pov.parent = game.pov.PreviousRoom
      }
    }
  </function>
  <function name="roll">
    if (game.RollAccept=0) {
      ClearScreen
      ShowRoomDescription
      game.pov.Str = DiceRoll("3d6")
      game.pov.Dex = DiceRoll("3d6")
      game.pov.Int = DiceRoll("3d6")
      game.pov.Wis = DiceRoll("3d6")
      game.pov.Con = DiceRoll("3d6")
      game.pov.Cha = DiceRoll("3d6")
      ConMod = (game.pov.Con/2-5)
      BabMod = (game.pov.BAB*6)
      game.pov.HP = game.pov.Con+BabMod+ConMod
      game.pov.max_HP = game.pov.HP
      msg ("Strength = "+game.pov.Str+" "+"{object:Info}")
      msg ("Dexterity = "+game.pov.Dex)
      msg ("Constitution = "+game.pov.Con)
      msg ("Intelligence = "+game.pov.Int)
      msg ("Wisdom = "+game.pov.Wis)
      msg ("Charisma = "+game.pov.Cha)
      msg ("")
      msg ("Do you accept your ability scores?")
      get input {
        if (not result="yes" and not result="no") {
          msg ("Please answer only 'yes' or 'no'. I will consider it as a 'no' and will re-roll for you.")
          wait {
            roll
          }
        }
        else if (result = "no") {
          msg ("Please press any key to re-roll.")
          wait {
            roll
          }
        }
        else if (result = "yes") {
          ConMod = (game.pov.Con/2-5)
          game.pov.StrMod = (game.pov.Str/2-5)
          msg ("StrMod: "+player.StrMod)
          game.pov.IntMod = (game.pov.Int/2-5)
          msg ("IntMod: "+player.IntMod)
          game.pov.WisMod = (game.pov.Wis/2-5)
          msg ("WisMod: "+player.WisMod)
          game.pov.ChaMod = (game.pov.Cha/2-5)
          msg ("ChaMod: "+player.ChaMod)
          game.pov.DexMod = (game.pov.Dex/2-5)
          msg ("DexMod: "+player.DexMod)
          game.pov.ConMod = (game.pov.Con/2-5)
          msg ("ConMod: "+player.ConMod)
          game.RollAccept = 1
          msg ("Your have accepted your ability scores.")
        }
      }
    }
    else {
      msg ("You have already accepted your ability scores and cannot roll for new ability scores.")
    }
  </function>
  <function name="str_info" parameters="args">
    ClearScreen
    MoveObject (player, Strength)
  </function>
  <function name="dex_info" parameters="args">
    ClearScreen
    MoveObject (player, Dexterity)
  </function>
  <function name="con_info" parameters="args">
    ClearScreen
    MoveObject (player, Constitution)
  </function>
  <function name="int_info" parameters="args">
    ClearScreen
    MoveObject (player, Intelligence)
  </function>
  <function name="wis_info" parameters="args">
    ClearScreen
    MoveObject (player, Wisdom)
  </function>
  <function name="cha_info" parameters="args">
    ClearScreen
    MoveObject (player, Charisma)
  </function>
  <function name="cc" parameters="args">
    msg ("")
    msg ("")
    msg ("What would be your character name?")
    get input {
      game.pov.alias = result
      msg (" - " + game.pov.alias)
      wait {
        ClearScreen
        ShowRoomDescription
      }
    }
  </function>
  <function name="str_roll" parameters="args"><![CDATA[
    if (game.DiceRoll = 0) {
      if (game.StrAccept=0) {
        ClearScreen
        ShowRoomDescription
        game.DiceRoll = 1
        msg ("<b>Dice Results:</b>")
        s1 = DiceRoll("1d6")
        msg ("Dice 1 = "+s1)
        s2 = DiceRoll("1d6")
        msg ("Dice 2 = "+s2)
        s3 = DiceRoll("1d6")
        st = s1+s2+s3
        msg ("Dice 3 = "+s3)
        msg ("<b>Total</b> = "+st)
        msg ("")
        msg ("Do you accept your ability scores?")
        get input {
          if (not result="yes" and not result="no") {
            if (game.rcount < 3) {
              msg ("Please answer only 'yes' or 'no'. I will consider it as a 'no' and will re-roll for you.")
              wait {
                game.rcount = game.rcount +1
                game.DiceRoll = 0
                str_roll (args)
              }
            }
            else {
              msg ("The maximum re-rolls have been reached. The current total will be applied to your Strength ability score.")
              game.rcount = 0
              game.Ability_number = game.Ability_number + 1
              game.StrAccept = 1
              game.DiceRoll = 0
              game.pov.StrMod = (game.pov.Str/2-5)
              game.pov.Str = st
              msg ("Your <b>Strength</b> ability score is now set. Please Return to the Character Sheet to continue.")
            }
          }
          else if (result = "no") {
            if (game.rcount < 3) {
              msg ("Please press any key to re-roll.")
              wait {
                game.rcount = game.rcount +1
                game.DiceRoll = 0
                str_roll (args)
              }
            }
            else {
              msg ("The maximum re-rolls have been reached. The current total will be applied to your Strength ability score.")
              game.rcount = 0
              game.Ability_number = game.Ability_number + 1
              game.StrAccept = 1
              game.DiceRoll = 0
              game.pov.StrMod = (game.pov.Str/2-5)
              game.pov.Str = st
              msg ("Your <b>Strength</b> ability score is now set. Please Return to the Character Sheet to continue.")
            }
          }
          else if (result = "yes") {
            game.rcount = 0
            game.Ability_number = game.Ability_number + 1
            game.StrAccept = 1
            game.DiceRoll = 0
            game.pov.StrMod = (game.pov.Str/2-5)
            game.pov.Str = st
            msg ("Your <b>Strength</b> ability score is now set. Please Return to the Character Sheet to continue.")
          }
        }
      }
      else {
        msg ("")
        msg ("<b>You have already accepted your Strength ability score and cannot roll for new ability scores.</b>")
      }
    }
  ]]></function>
  <function name="dex_roll" parameters="args"><![CDATA[
    if (game.DiceRoll = 0) {
      if (game.DexAccept=0) {
        ClearScreen
        ShowRoomDescription
        game.DiceRoll = 1
        msg ("<b>Dice Results:</b>")
        d1 = DiceRoll("1d6")
        msg ("Dice 1 = "+d1)
        d2 = DiceRoll("1d6")
        msg ("Dice 2 = "+d2)
        d3 = DiceRoll("1d6")
        dt = d1+d2+d3
        msg ("Dice 3 = "+d3)
        msg ("<b>Total</b> = "+dt)
        msg ("")
        msg ("Do you accept your abildty scores?")
        get input {
          if (not result="yes" and not result="no") {
            if (game.rcount < 3) {
              msg ("Please answer only 'yes' or 'no'. I will consider dt as a 'no' and will re-roll for you.")
              wait {
                game.rcount = game.rcount +1
                game.DiceRoll = 0
                dex_roll (args)
              }
            }
            else {
              msg ("The maximum re-rolls have been reached. The current total will be applied to your Dexterity ability score.")
              game.rcount = 0
              game.Ability_number = game.Ability_number + 1
              game.DexAccept = 1
              game.DiceRoll = 0
              game.pov.DexMod = (game.pov.Dex/2-5)
              game.pov.Dex = dt
              msg ("Your <b>Dexterity</b> ability score is now set. Please Return to the Character Sheet to continue.")
            }
          }
          else if (result = "no") {
            if (game.rcount < 3) {
              msg ("Please press any key to re-roll.")
              wait {
                game.rcount = game.rcount +1
                game.DiceRoll = 0
                dex_roll (args)
              }
            }
            else {
              msg ("The maximum re-rolls have been reached. The current total will be applied to your Dexterity ability score.")
              game.rcount = 0
              game.Ability_number = game.Ability_number + 1
              game.DexAccept = 1
              game.DiceRoll = 0
              game.pov.DexMod = (game.pov.Dex/2-5)
              game.pov.Dex = dt
              msg ("Your <b>Dexterity</b> ability score is now set. Please Return to the Character Sheet to continue.")
            }
          }
          else if (result = "yes") {
            game.rcount = 0
            game.Ability_number = game.Ability_number + 1
            game.DexAccept = 1
            game.DiceRoll = 0
            game.pov.DexMod = (game.pov.Dex/2-5)
            game.pov.Dex = dt
            msg ("Your <b>Dexterity</b> ability score is now set. Please Return to the Character Sheet to continue.")
          }
        }
      }
      else {
        msg ("")
        msg ("<b>You have already accepted your Dexterity ability score and cannot roll for new ability scores.</b>")
      }
    }
  ]]></function>
  <function name="con_roll" parameters="args"><![CDATA[
    if (game.DiceRoll = 0) {
      if (game.ConAccept=0) {
        ClearScreen
        ShowRoomDescription
        game.DiceRoll = 1
        msg ("<b>Dice Results:</b>")
        c1 = DiceRoll("1d6")
        msg ("Dice 1 = "+c1)
        c2 = DiceRoll("1d6")
        msg ("Dice 2 = "+c2)
        c3 = DiceRoll("1d6")
        ct = c1+c2+c3
        msg ("Dice 3 = "+c3)
        msg ("<b>Total</b> = "+ct)
        msg ("")
        msg ("Do you accept your ability scores?")
        get input {
          if (not result="yes" and not result="no") {
            if (game.rcount < 3) {
              msg ("Please answer only 'yes' or 'no'. I will consider it as a 'no' and will re-roll for you.")
              wait {
                game.rcount = game.rcount +1
                game.DiceRoll = 0
                con_roll (args)
              }
            }
            else {
              msg ("The maximum re-rolls have been reached. The current total will be applied to your Constitution ability score.")
              game.rcount = 0
              game.Ability_number = game.Ability_number + 1
              game.ConAccept = 1
              game.DiceRoll = 0
              game.pov.ConMod = (game.pov.Con/2-5)
              game.pov.Con = ct
              msg ("Your <b>Constitution</b> ability score is now set. Please Return to the Character Sheet to continue.")
            }
          }
          else if (result = "no") {
            if (game.rcount < 3) {
              msg ("Please press any key to re-roll.")
              wait {
                game.rcount = game.rcount +1
                game.DiceRoll = 0
                con_roll (args)
              }
            }
            else {
              msg ("The maximum re-rolls have been reached. The current total will be applied to your Constitution ability score.")
              game.rcount = 0
              game.Ability_number = game.Ability_number + 1
              game.ConAccept = 1
              game.DiceRoll = 0
              game.pov.ConMod = (game.pov.Con/2-5)
              game.pov.Con = ct
              msg ("Your <b>Constitution</b> ability score is now set. Please Return to the Character Sheet to continue.")
            }
          }
          else if (result = "yes") {
            game.rcount = 0
            game.Ability_number = game.Ability_number + 1
            game.ConAccept = 1
            game.DiceRoll = 0
            game.pov.ConMod = (game.pov.Con/2-5)
            game.pov.Con = ct
            msg ("Your <b>Constitution</b> ability score is now set. Please Return to the Character Sheet to continue.")
          }
        }
      }
      else {
        msg ("")
        msg ("<b>You have already accepted your Constitution ability score and cannot roll for new ability scores.</b>")
      }
    }
  ]]></function>
  <function name="int_roll" parameters="args"><![CDATA[
    if (game.DiceRoll = 0) {
      if (game.IntAccept=0) {
        ClearScreen
        ShowRoomDescription
        game.DiceRoll = 1
        msg ("<b>Dice Results:</b>")
        i1 = DiceRoll("1d6")
        msg ("Dice 1 = "+i1)
        i2 = DiceRoll("1d6")
        msg ("Dice 2 = "+i2)
        i3 = DiceRoll("1d6")
        it = i1+i2+i3
        msg ("Dice 3 = "+i3)
        msg ("<b>Total</b> = "+it)
        msg ("")
        msg ("Do you accept your ability scores?")
        get input {
          if (not result="yes" and not result="no") {
            if (game.rcount < 3) {
              msg ("Please answer only 'yes' or 'no'. I will consider it as a 'no' and will re-roll for you.")
              wait {
                game.rcount = game.rcount +1
                game.DiceRoll = 0
                int_roll (args)
              }
            }
            else {
              msg ("The maximum re-rolls have been reached. The current total will be applied to your Intelligence ability score.")
              game.pov.rcount = 0
              game.Ability_number = game.Ability_number + 1
              game.IntAccept = 1
              game.DiceRoll = 0
              game.pov.IntMod = (game.pov.Int/2-5)
              game.pov.Int = it
              msg ("Your <b>Intelligence</b> ability score is now set. Please Return to the Character Sheet to continue.")
            }
          }
          else if (result = "no") {
            if (game.rcount < 3) {
              msg ("Please press any key to re-roll.")
              wait {
                game.rcount = game.rcount +1
                game.DiceRoll = 0
                int_roll (args)
              }
            }
            else {
              msg ("The maximum re-rolls have been reached. The current total will be applied to your Intelligence ability score.")
              game.rcount = 0
              game.Ability_number = game.Ability_number + 1
              game.IntAccept = 1
              game.DiceRoll = 0
              game.pov.IntMod = (game.pov.Int/2-5)
              game.pov.Int = it
              msg ("Your <b>Intelligence</b> ability score is now set. Please Return to the Character Sheet to continue.")
            }
          }
          else if (result = "yes") {
            game.rcount = 0
            game.Ability_number = game.Ability_number + 1
            game.IntAccept = 1
            game.DiceRoll = 0
            game.pov.IntMod = (game.pov.Int/2-5)
            game.pov.Int = it
            msg ("Your <b>Intelligence</b> ability score is now set. Please Return to the Character Sheet to continue.")
          }
        }
      }
      else {
        msg ("")
        msg ("<b>You have already accepted your Intelligence ability score and cannot roll for new ability scores.</b>")
      }
    }
  ]]></function>
  <function name="wis_roll" parameters="args"><![CDATA[
    if (game.DiceRoll = 0) {
      if (game.WisAccept=0) {
        ClearScreen
        ShowRoomDescription
        game.DiceRoll = 1
        msg ("<b>Dice Results:</b>")
        w1 = DiceRoll("1d6")
        msg ("Dice 1 = "+w1)
        w2 = DiceRoll("1d6")
        msg ("Dice 2 = "+w2)
        w3 = DiceRoll("1d6")
        wt = w1+w2+w3
        msg ("Dice 3 = "+w3)
        msg ("<b>Total</b> = "+wt)
        msg ("")
        msg ("Do you accept your ability scores?")
        get input {
          if (not result="yes" and not result="no") {
            if (game.rcount < 3) {
              msg ("Please answer only 'yes' or 'no'. I will consider it as a 'no' and will re-roll for you.")
              wait {
                game.rcount = game.rcount +1
                game.DiceRoll = 0
                wis_roll (args)
              }
            }
            else {
              msg ("The maximum re-rolls have been reached. The current total will be applied to your Wisdom ability score.")
              game.rcount = 0
              game.Ability_number = game.Ability_number + 1
              game.WisAccept = 1
              game.DiceRoll = 0
              game.pov.WisMod = (game.pov.Wis/2-5)
              game.pov.Wis = wt
              msg ("Your <b>Wisdom</b> ability score is now set. Please Return to the Character Sheet to continue.")
            }
          }
          else if (result = "no") {
            if (game.rcount < 3) {
              msg ("Please press any key to re-roll.")
              wait {
                game.rcount = game.rcount +1
                game.DiceRoll = 0
                wis_roll (args)
              }
            }
            else {
              msg ("The maximum re-rolls have been reached. The current total will be applied to your Wisdom ability score.")
              game.rcount = 0
              game.Ability_number = game.Ability_number + 1
              game.WisAccept = 1
              game.DiceRoll = 0
              game.pov.WisMod = (game.pov.Wis/2-5)
              game.pov.Wis = wt
              msg ("Your <b>Wisdom</b> ability score is now set. Please Return to the Character Sheet to continue.")
            }
          }
          else if (result = "yes") {
            game.WisAccept = 1
            game.rcount = 0
            game.Ability_number = game.Ability_number + 1
            game.DiceRoll = 0
            game.pov.WisMod = (game.pov.Wis/2-5)
            game.pov.Wis = wt
            msg ("Your <b>Wisdom</b> ability score is now set. Please Return to the Character Sheet to continue.")
          }
        }
      }
      else {
        msg ("")
        msg ("<b>You have already accepted your Wisdom ability score and cannot roll for new ability scores.</b>")
      }
    }
  ]]></function>
  <function name="cha_roll" parameters="args"><![CDATA[
    if (game.DiceRoll = 0) {
      if (game.ChaAccept=0) {
        ClearScreen
        ShowRoomDescription
        game.DiceRoll = 1
        msg ("<b>Dice Results:</b>")
        ch1 = DiceRoll("1d6")
        msg ("Dice 1 = "+ch1)
        ch2 = DiceRoll("1d6")
        msg ("Dice 2 = "+ch2)
        ch3 = DiceRoll("1d6")
        cht = ch1+ch2+ch3
        msg ("Dice 3 = "+ch3)
        msg ("<b>Total</b> = "+cht)
        msg ("")
        msg ("Do you accept your ability scores?")
        get input {
          if (not result="yes" and not result="no") {
            if (game.rcount < 3) {
              msg ("Please answer only 'yes' or 'no'. I will consider it as a 'no' and will re-roll for you.")
              wait {
                game.rcount = game.rcount +1
                game.DiceRoll = 0
                cha_roll (args)
              }
            }
            else {
              msg ("The maximum re-rolls have been reached. The current total will be applied to your Charisma ability score.")
              game.rcount = 0
              game.Ability_number = game.Ability_number + 1
              game.ChaAccept = 1
              game.DiceRoll = 0
              game.pov.ChaMod = (game.pov.Cha/2-5)
              game.pov.Cha = cht
              msg ("Your <b>Charisma</b> ability score is now set. Please Return to the Character Sheet to continue.")
            }
          }
          else if (result = "no") {
            if (game.rcount < 3) {
              msg ("Please press any key to re-roll.")
              wait {
                game.rcount = game.rcount +1
                game.DiceRoll = 0
                cha_roll (args)
              }
            }
            else {
              msg ("The maximum re-rolls have been reached. The current total will be applied to your Charisma ability score.")
              game.rcount = 0
              game.Ability_number = game.Ability_number + 1
              game.ChaAccept = 1
              game.DiceRoll = 0
              game.pov.ChaMod = (game.pov.Cha/2-5)
              game.pov.Cha = cht
              msg ("Your <b>Charisma</b> ability score is now set. Please Return to the Character Sheet to continue.")
            }
          }
          else if (result = "yes") {
            game.ChaAccept = 1
            game.rcount = 0
            game.Ability_number = game.Ability_number + 1
            game.DiceRoll = 0
            game.pov.ChaMod = (game.pov.Cha/2-5)
            game.pov.Cha = cht
            msg ("Your <b>Charisma</b> ability score is now set. Please Return to the Character Sheet to continue.")
          }
        }
      }
      else {
        msg ("")
        msg ("<b>You have already accepted your Charisma ability score and cannot roll for new ability scores.</b>")
      }
    }
  ]]></function>
  <function name="start_game" parameters="args"><![CDATA[
    if (game.Ability_number < 6 and game.menu_active = 0) {
      game.menu_active = 1
      msg ("You have not yet chosen all your ability scores. Please go back and roll for all your abilities.")
      wait {
        game.menu_active = 0
        player.parent = Empty
        ClearScreen
        player.parent = Character Creation Sheet
      }
    }
    else if (game.menu_active = 0 and game.Ability_number = 6) {
      ClearScreen
      player.parent = Shooting Range
      ConMod = (game.pov.Con/2-5)
      BabMod = (game.pov.BAB*6)
      game.pov.HP = game.pov.Con+BabMod+ConMod
      game.pov.max_HP = game.pov.HP
    }
    else {
      msg ("Click on 'Continue' at the bottom please.")
    }
  ]]></function>
  <function name="feats_select" parameters="args">
    ClearScreen
    MoveObject (player, Feats)
  </function>
</asl>