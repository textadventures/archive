{
  "Topic": {
    "TopicId": "gmtm7mkjik_iz-7ulritaa",
    "ForumId": "10",
    "Title": "Change Value of Dictionary Key?  [SOLVED]",
    "LastUpdated": "2017-06-15T21:20:26.3855336Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "c2149db9-2167-4e13-a8f6-a1190eb35710",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Me again.  How do you change the value of a dictionary key (in this case, the first key), and without changing the order of the dictionary keys?\r\n\r\nBecause the order must be preserved, I can't use \"remove value from dictionary\" and then \"add value to dictionary\", as the key will then be placed at the end.  I also can't add the same key but with a new value, because you can't add a key that already exists.  I tried changing the value of the key with \"set variable\", but I don't think Quest recognizes a dictionary key as a variable.  I've run out of ideas...",
      "EditableFormat": "markdown",
      "HTML": "<p>Me again.  How do you change the value of a dictionary key (in this case, the first key), and without changing the order of the dictionary keys?</p>\n<p>Because the order must be preserved, I can't use \"remove value from dictionary\" and then \"add value to dictionary\", as the key will then be placed at the end.  I also can't add the same key but with a new value, because you can't add a key that already exists.  I tried changing the value of the key with \"set variable\", but I don't think Quest recognizes a dictionary key as a variable.  I've run out of ideas...</p>\n\n",
      "PostDate": "2017-06-15T21:20:26.3855336Z",
      "LastEditDate": "2017-06-18T09:21:15.3264872Z",
      "link": null
    },
    {
      "PostId": "7dea4340-4abd-4be0-8321-cdc0411f5abc",
      "UserId": 168877,
      "Username": "TinFoilMkIV",
      "AvatarUrl": "http://i.imgur.com/j34jdCvb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't think you can alter the ordering of a dictionaries items other than copying and rebuilding it every time it changes. Alternatively you could sort the results before doing anything else with them.\r\n\r\nCan you explain why you specifically need both a dictionary and a set order to the items it contains?",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't think you can alter the ordering of a dictionaries items other than copying and rebuilding it every time it changes. Alternatively you could sort the results before doing anything else with them.</p>\n<p>Can you explain why you specifically need both a dictionary and a set order to the items it contains?</p>\n\n",
      "PostDate": "2017-06-15T21:57:07.8200132Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ef040cad-6d01-4632-9a54-cd5ea26f2d17",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "chuckles... Dcoder wants/needs tree data management :D (or beyond: dictionaries, maps, etc...)\r\n\r\nhttps://en.wikipedia.org/wiki/Binary_search_tree\r\nhttps://en.wikipedia.org/wiki/2–3_tree\r\nhttps://en.wikipedia.org/wiki/2–3–4_tree\r\n\r\nand/or maybe Dcoder, should create a heap, which he/she can then have functions for handling it (keeping the correct order/placement of items after adding/removing), which then would that correct item be used as the input value for the dictionary to get the resultant output.\r\n\r\n-------\r\n\r\nI failed this class though, so I can't be of much help... my mind/brain hasn't yet learned to think in this structural and abstract way... sighs.",
      "EditableFormat": "markdown",
      "HTML": "<p>chuckles... Dcoder wants/needs tree data management :D (or beyond: dictionaries, maps, etc...)</p>\n<p>https://en.wikipedia.org/wiki/Binary_search_tree<br>\nhttps://en.wikipedia.org/wiki/2–3_tree<br>\nhttps://en.wikipedia.org/wiki/2–3–4_tree</p>\n<p>and/or maybe Dcoder, should create a heap, which he/she can then have functions for handling it (keeping the correct order/placement of items after adding/removing), which then would that correct item be used as the input value for the dictionary to get the resultant output.</p>\n<hr>\n<p>I failed this class though, so I can't be of much help... my mind/brain hasn't yet learned to think in this structural and abstract way... sighs.</p>\n\n",
      "PostDate": "2017-06-15T22:29:55.0710998Z",
      "LastEditDate": "2017-06-15T22:30:39.2223411Z",
      "link": null
    },
    {
      "PostId": "90fbb490-7318-497f-8d23-c0abed69d7ca",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I need a way to update the player.statusattributes dictionary.  The player can suffer from multiple conditions at any given time (Poisoned, Woozy, Cleansed, etc.).  So I am using a different dictionary key and value for each condition (Poisoned key and Poisoned string value, Woozy key and Woozy string value, etc.).  I just add and remove keys as needed.\r\n\r\nI DON'T want a long list of text that says this:\r\n\r\nCondition: Poisoned\r\nCondition: Woozy\r\nCondition: Cleansed\r\n\r\nI DO want \"Condition: \" to be displayed just once, with each following condition displayed in a vertical list, and DIRECTLY BENEATH the first condition:\r\n\r\nCondition: Poisoned\r\n -------------> Woozy // the arrows should not be there (Forum won't post multiple blank spaces)\r\n -------------> Cleansed\r\n\r\nSo far, I can do all of this by using Pixie's \"WhiteSpaces\" function to print a bunch of blank spaces followed by the word \"Woozy\" (the Woozy value code is this expression: BlankSpaces(17) + \"!\").\r\n\r\nThe problem arises when the first condition (Poisoned) goes away, and the next condition (Woozy) goes up the list and is listed first.  I need to change the Woozy value to \"Condition: !\" instead of BlankSpaces(17) + \"!\".  Thus, how do I change a dictionary key value without upsetting the order?  Actually, the order doesn't matter, so long as \"Condition: \" is displayed in the first key.\r\n\r\nAren't you glad you asked, haha?",
      "EditableFormat": "markdown",
      "HTML": "<p>I need a way to update the player.statusattributes dictionary.  The player can suffer from multiple conditions at any given time (Poisoned, Woozy, Cleansed, etc.).  So I am using a different dictionary key and value for each condition (Poisoned key and Poisoned string value, Woozy key and Woozy string value, etc.).  I just add and remove keys as needed.</p>\n<p>I DON'T want a long list of text that says this:</p>\n<p>Condition: Poisoned<br>\nCondition: Woozy<br>\nCondition: Cleansed</p>\n<p>I DO want \"Condition: \" to be displayed just once, with each following condition displayed in a vertical list, and DIRECTLY BENEATH the first condition:</p>\n<p>Condition: Poisoned<br>\n-------------&gt; Woozy // the arrows should not be there (Forum won't post multiple blank spaces)<br>\n-------------&gt; Cleansed</p>\n<p>So far, I can do all of this by using Pixie's \"WhiteSpaces\" function to print a bunch of blank spaces followed by the word \"Woozy\" (the Woozy value code is this expression: BlankSpaces(17) + \"!\").</p>\n<p>The problem arises when the first condition (Poisoned) goes away, and the next condition (Woozy) goes up the list and is listed first.  I need to change the Woozy value to \"Condition: !\" instead of BlankSpaces(17) + \"!\".  Thus, how do I change a dictionary key value without upsetting the order?  Actually, the order doesn't matter, so long as \"Condition: \" is displayed in the first key.</p>\n<p>Aren't you glad you asked, haha?</p>\n\n",
      "PostDate": "2017-06-15T23:17:02.5309282Z",
      "LastEditDate": "2017-06-15T23:31:35.0352139Z",
      "link": null
    },
    {
      "PostId": "251783c7-c3db-41a5-a6ec-ae4b2a3d7e8c",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "One option, as you are already using Quest 5.7, would be a custom status pane (on the _Interface_ tab). You would have to reset it manually when any attribute changes. Example code that puts the conditions in a table to align them:\r\n\r\n```\r\nJS.setCustomStatus(\"<table><tr><td width=\\\"50%\\\">Condition:</td><td>Poisoned</td></tr><tr><td></td><td>Woozy</td></tr></table>\")\r\n```\r\n\r\nA knowledge of HTML and (to some degree) CSS would be useful here!\r\n\r\nETA: See here:\r\nhttp://docs.textadventures.co.uk/quest/custom_panes",
      "EditableFormat": "markdown",
      "HTML": "<p>One option, as you are already using Quest 5.7, would be a custom status pane (on the <em>Interface</em> tab). You would have to reset it manually when any attribute changes. Example code that puts the conditions in a table to align them:</p>\n<pre><code>JS.setCustomStatus(\"&lt;table&gt;&lt;tr&gt;&lt;td width=\\\"50%\\\"&gt;Condition:&lt;/td&gt;&lt;td&gt;Poisoned&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Woozy&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\")\n</code></pre>\n<p>A knowledge of HTML and (to some degree) CSS would be useful here!</p>\n<p>ETA: See here:<br>\nhttp://docs.textadventures.co.uk/quest/custom_panes</p>\n\n",
      "PostDate": "2017-06-16T06:53:27.5789736Z",
      "LastEditDate": "2017-06-16T07:57:18.5499439Z",
      "link": null
    },
    {
      "PostId": "7fb27b5d-4a47-4b16-83f1-84d42c3a59a4",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "for just having the formating you desire, you can set your first condition to be a separate String Attribute:\r\n\r\n```\r\n<attr name=\"first_condition_string_attribute\" type=\"string\">unknown</attr>\r\n\r\n<attr name=\"condition_stringlist_attribute\" type=\"simplestringlist\">unknown</attr>\r\n\r\n<attr name=\"changedfirst_condition_string_attribute\" type=\"script\">\r\n  this.first_condition_string_attribute = \"Condition: \" + this.first_condition_string_attribute\r\n</attr>\r\n\r\n<attr name=\"statusattributes\" type=\"simplestringdictionary\">first_condition_string_attribute = !; /* however you do the tab-margin formatting for all of your other conditions: poisoned_string_attribute = (spacing) poisoned; confused_string_attribute = (spacing) confused*/</attr>\r\n```\r\n\r\nhopefully, you get the idea... as I'm not sure how you're handling the statusattributes and the margin/tab formatting... beyond my understanding/ability in how you/pixie are doing it... lol",
      "EditableFormat": "markdown",
      "HTML": "<p>for just having the formating you desire, you can set your first condition to be a separate String Attribute:</p>\n<pre><code>&lt;attr name=\"first_condition_string_attribute\" type=\"string\"&gt;unknown&lt;/attr&gt;\n\n&lt;attr name=\"condition_stringlist_attribute\" type=\"simplestringlist\"&gt;unknown&lt;/attr&gt;\n\n&lt;attr name=\"changedfirst_condition_string_attribute\" type=\"script\"&gt;\n  this.first_condition_string_attribute = \"Condition: \" + this.first_condition_string_attribute\n&lt;/attr&gt;\n\n&lt;attr name=\"statusattributes\" type=\"simplestringdictionary\"&gt;first_condition_string_attribute = !; /* however you do the tab-margin formatting for all of your other conditions: poisoned_string_attribute = (spacing) poisoned; confused_string_attribute = (spacing) confused*/&lt;/attr&gt;\n</code></pre>\n<p>hopefully, you get the idea... as I'm not sure how you're handling the statusattributes and the margin/tab formatting... beyond my understanding/ability in how you/pixie are doing it... lol</p>\n\n",
      "PostDate": "2017-06-16T12:37:34.4190997Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "69394a75-60dc-4759-ad55-670531b954f5",
      "UserId": 255368,
      "Username": "DarkBlueMonkey",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Perhaps a custom statusAttribute with a turn script to update it every turn?\r\nAssuming that all the conditions that can affect the user are in a player attribute called \"conditions\" which is a dictionary, where the value is a string representation of an integer of the severity of the condition:\r\n\r\nTry this:\r\nCreate a player attribute called \"condstatus\".  Make it a status attribute whose value is just \"!\".\r\n\r\nCreate a function called \"DisplayCondition\" and fill it with\r\n```\r\nnewtext = \"Condition: \"\r\nif (DictionaryCount(player.conditions) = 0) {\r\n  newtext = newtext + \"Fine\"\r\n}\r\nelse {\r\n  slist = NewStringList()\r\n  foreach (entry, player.conditions) {\r\n    list add (slist, entry)\r\n  }\r\n  item = ListItem(slist,0)\r\n  newtext = newtext + \" \" + GetCondition( item ) + \"<br/>\"\r\n  list remove (slist, item)\r\n  while (ListCount(slist) > 0) {\r\n    item = ListItem(slist,0)\r\n    newtext = newtext + \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\" + GetCondition(item ) + \"<br/>\"\r\n    list remove (slist, item)\r\n  }\r\n}\r\nplayer.condstatus = newtext\r\nUpdateStatusAttributes\r\n```\r\n\r\nThen create a function called GetCondition and fill it with\r\n\r\n```\r\nl = player.conditions\r\nif (not DictionaryContains(l,condname)) {\r\n  return (\"\")\r\n}\r\nelse {\r\n  i = StringDictionaryItem(l,condname)\r\n  return (condname + \"(\" + ToString(i) + \")\")\r\n}\r\n```\r\n\r\nLastly, create a TurnScript called \"CondStatusPrint\" which just calls:-\r\n\r\n```\r\nCondStatusText\r\n```\r\n\r\nevery turn.   Now the turn script will pre-sort the list of conditions, generate the status attribute, and print it automatically.\r\n\r\nMaybe that might help?",
      "EditableFormat": "markdown",
      "HTML": "<p>Perhaps a custom statusAttribute with a turn script to update it every turn?<br>\nAssuming that all the conditions that can affect the user are in a player attribute called \"conditions\" which is a dictionary, where the value is a string representation of an integer of the severity of the condition:</p>\n<p>Try this:<br>\nCreate a player attribute called \"condstatus\".  Make it a status attribute whose value is just \"!\".</p>\n<p>Create a function called \"DisplayCondition\" and fill it with</p>\n<pre><code>newtext = \"Condition: \"\nif (DictionaryCount(player.conditions) = 0) {\n  newtext = newtext + \"Fine\"\n}\nelse {\n  slist = NewStringList()\n  foreach (entry, player.conditions) {\n    list add (slist, entry)\n  }\n  item = ListItem(slist,0)\n  newtext = newtext + \" \" + GetCondition( item ) + \"&lt;br/&gt;\"\n  list remove (slist, item)\n  while (ListCount(slist) &gt; 0) {\n    item = ListItem(slist,0)\n    newtext = newtext + \"&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\" + GetCondition(item ) + \"&lt;br/&gt;\"\n    list remove (slist, item)\n  }\n}\nplayer.condstatus = newtext\nUpdateStatusAttributes\n</code></pre>\n<p>Then create a function called GetCondition and fill it with</p>\n<pre><code>l = player.conditions\nif (not DictionaryContains(l,condname)) {\n  return (\"\")\n}\nelse {\n  i = StringDictionaryItem(l,condname)\n  return (condname + \"(\" + ToString(i) + \")\")\n}\n</code></pre>\n<p>Lastly, create a TurnScript called \"CondStatusPrint\" which just calls:-</p>\n<pre><code>CondStatusText\n</code></pre>\n<p>every turn.   Now the turn script will pre-sort the list of conditions, generate the status attribute, and print it automatically.</p>\n<p>Maybe that might help?</p>\n\n",
      "PostDate": "2017-06-17T00:03:43.4000265Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "160fc57f-d1a9-418c-a43d-6b43c020bd1a",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm in the process of getting my head around these suggestions.....",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm in the process of getting my head around these suggestions.....</p>\n\n",
      "PostDate": "2017-06-17T09:26:10.4826771Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2431fac3-9ed7-4be9-9e25-62306a6dc444",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok, I came up with a simpler variation of DarkBlueMonkey's code that seems to work.  This is a global turn script:\r\n```\r\nif (ListCount(player.MultiConditionList) = 0) {\r\n  player.Condition = \"Condition: Normal\"\r\n}\r\nelse {\r\n  count = 0\r\n  player.Condition = \"\"\r\n  for (ConditionLoop, 1, ListCount(player.MultiConditionList), 1) {\r\n    if (ConditionLoop = 1) {\r\n      player.Condition = player.Condition + \"Condition: \" + ListItem(player.MultiConditionList, 0) + \"<br/>\"\r\n    }\r\n    else {\r\n      player.Condition = player.Condition + BlankSpaces(17) + ListItem(player.MultiConditionList, count) + \"<br/>\"\r\n    }\r\n    count = count+1\r\n  }\r\n}\r\nUpdateStatusAttributes\r\n```\r\n\"player.Condition\" is a key within \"player.statusattributes\", and displays the player's conditions.  It is a string \"built up\" from \"player.MultiConditionList\", which is a string list hidden from the player that \"holds\" all of the current conditions (besides \"Normal\"), and is \"fed\" those conditions by actions within the game.  BlankSpaces is Pixie's handy function for returning any # of blank spaces (found that somewhere in the forum under \"WhiteSpaces\").\r\n\r\nLooks simple, but that took me all day to come up with (as well as editing everything else that got affected in my game).  Thanks everyone, especially DarkBlueMonkey, for all the help.  Back to bug-fixing and playtesting Q5.7!",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok, I came up with a simpler variation of DarkBlueMonkey's code that seems to work.  This is a global turn script:</p>\n<pre><code>if (ListCount(player.MultiConditionList) = 0) {\n  player.Condition = \"Condition: Normal\"\n}\nelse {\n  count = 0\n  player.Condition = \"\"\n  for (ConditionLoop, 1, ListCount(player.MultiConditionList), 1) {\n    if (ConditionLoop = 1) {\n      player.Condition = player.Condition + \"Condition: \" + ListItem(player.MultiConditionList, 0) + \"&lt;br/&gt;\"\n    }\n    else {\n      player.Condition = player.Condition + BlankSpaces(17) + ListItem(player.MultiConditionList, count) + \"&lt;br/&gt;\"\n    }\n    count = count+1\n  }\n}\nUpdateStatusAttributes\n</code></pre>\n<p>\"player.Condition\" is a key within \"player.statusattributes\", and displays the player's conditions.  It is a string \"built up\" from \"player.MultiConditionList\", which is a string list hidden from the player that \"holds\" all of the current conditions (besides \"Normal\"), and is \"fed\" those conditions by actions within the game.  BlankSpaces is Pixie's handy function for returning any # of blank spaces (found that somewhere in the forum under \"WhiteSpaces\").</p>\n<p>Looks simple, but that took me all day to come up with (as well as editing everything else that got affected in my game).  Thanks everyone, especially DarkBlueMonkey, for all the help.  Back to bug-fixing and playtesting Q5.7!</p>\n\n",
      "PostDate": "2017-06-18T09:20:50.8834226Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "15018443-5535-4245-8c9a-40635bea09bc",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "unfortunately, that's how it always is... the code itself looks so simple (when it's done and you look at it, and it makes sense and is easy to understand)... but coming up with it and/or understanding it's needed workings (as you try to craft/create/come up with it) is another matter... sighs.\r\n\r\n---------\r\n\r\nit's not much fun when you're a coding/programming noob and it takes a full day or worse (a week or a month or even a few months!) to come up with something (and often it's just a single simple piece/part of coding/functionality/feature, argh!) that works and/or understanding it... sighs... but this is the process of learning to program... getting experience...\r\n\r\ncompared to being a professional coder/programmer, and you can create full complex working programs/stuff with ease and quickness, sighs.",
      "EditableFormat": "markdown",
      "HTML": "<p>unfortunately, that's how it always is... the code itself looks so simple (when it's done and you look at it, and it makes sense and is easy to understand)... but coming up with it and/or understanding it's needed workings (as you try to craft/create/come up with it) is another matter... sighs.</p>\n<hr>\n<p>it's not much fun when you're a coding/programming noob and it takes a full day or worse (a week or a month or even a few months!) to come up with something (and often it's just a single simple piece/part of coding/functionality/feature, argh!) that works and/or understanding it... sighs... but this is the process of learning to program... getting experience...</p>\n<p>compared to being a professional coder/programmer, and you can create full complex working programs/stuff with ease and quickness, sighs.</p>\n\n",
      "PostDate": "2017-06-19T08:46:42.5969686Z",
      "LastEditDate": "2017-06-19T08:50:30.1285984Z",
      "link": null
    }
  ]
}
