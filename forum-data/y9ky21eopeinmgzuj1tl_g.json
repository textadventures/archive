{
  "Topic": {
    "TopicId": "y9ky21eopeinmgzuj1tl_g",
    "ForumId": "15",
    "Title": "Quest 6: Messing around with JS regex group capture code",
    "LastUpdated": "2020-12-06T23:12:39.176555Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "7e5c1e28-628e-45c6-8d47-5a1ae0e1ef46",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm running this script in the Firefox Web Developer Web Console.\r\n\r\n(For those who are unfamiliar with this: I pushed **\\<F12>** then **Ctrl+B** with Firefox open, entered the code in the field on the left, then pressed **Ctrl+ENTER** to run the code.)\r\n\r\n---\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/101291475-b5557780-37ce-11eb-8e9e-9ccd1d65ee81.png)](https://user-images.githubusercontent.com/30656341/101291475-b5557780-37ce-11eb-8e9e-9ccd1d65ee81.png)\r\n\r\n---\r\n# The Mission\r\n\r\nThe GiveTo command only has one regular expression set up: ```/^(?:give) (.+) (?:to) (.+)$/```\r\n\r\n<sup>[VIEW THE REFERENCED LINE OF CODE ON GITHUB](https://github.com/ThePix/QuestJS/blob/c8a5e409f2084b8dceb012baed9a0616e1324b19/lang/lang-en.js#L109)</sup>\r\n\r\n\r\nSo, the player *must* enter:  <samp style=\"padding:2px;background-color:black;color:green\">GIVE [object(s)] TO [npc]</samp>.\r\n\r\nI want to add this optional format (or syntax, or whatever): <samp style=\"padding:2px;background-color:black;color:green\">GIVE [npc] [object(s)]</samp>.\r\n\r\nWell . . .\r\n\r\nLong story a little shorter, I had to learn how to use regular expression capture groups to pull this off.\r\n\r\n---\r\n## The Code\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/101291483-c7cfb100-37ce-11eb-9643-17761b991026.png)](https://user-images.githubusercontent.com/30656341/101291483-c7cfb100-37ce-11eb-9643-17761b991026.png)\r\n\r\n<details><summary style=\"cursor:pointer\"><b>[ CLICK HERE TO VIEW THE CODE'S TEXT (for Copying and Pasting purposes) ]</b> </summary>\r\n\r\n```js\r\nclear()\r\nvar log = console.log\r\nvar regexes = [\r\n  /^(?:give) (?<obj>.+) (?:to) (?<npc>.+)$/,\r\n  /^(?:give) (?<npc>\\w.?(?!= to)) (?<obj>.+)$/\r\n]\r\nvar arrS = [\"give the sword to rp\",\"give rp the sword\",\"give all to rp\",\r\n            \"give rp all\",  \"give mask and hat to rp\",  \"give rp mask and hat\",\r\n           \"give mask, hat, and sword to rp\", \"give rp mask, hat, and sword\"]\r\nvar res = []\r\narrS.forEach((s,i) => {\r\n  log(`INPUT: ${s}`)\r\n  regexes.forEach((rgx,j) => {\r\n    log(`rgx[${j}]: ${rgx}`)\r\n    log(rgx.exec(s))\r\n    if(rgx.exec(s)) {\r\n        res.push(rgx.exec(s))\r\n    }\r\n  })\r\n})\r\nlog(`==============RESULTS==============\\nres:`)\r\nlog(res)\r\nlog(`======res breakdown=========`)\r\nvar obj,npc\r\nres.forEach((cand,i) => {\r\n  log(`----res.${i}----------------\\nINPUT: ${cand.input}`)\r\n  npc = cand.groups.npc\r\n  log(`npc: ${npc}`)\r\n  obj = cand.groups.obj\r\n  log(`obj: ${obj}`)\r\n  log(`----==end of res.${i}==-----`)\r\n})\r\n\r\n```\r\n\r\n</details>\r\n\r\n\r\n---\r\n## **OUTPUT**\r\n\r\n<details><summary style=\"cursor:pointer\"><b>[ CLICK HERE TO VIEW THE OUTPUT ]</b> </summary>\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/101291554-462c5300-37cf-11eb-84aa-bf5db3f9b60c.png)](https://user-images.githubusercontent.com/30656341/101291554-462c5300-37cf-11eb-84aa-bf5db3f9b60c.png)\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/101291563-65c37b80-37cf-11eb-88b9-ce0605c1d64a.png)](https://user-images.githubusercontent.com/30656341/101291563-65c37b80-37cf-11eb-88b9-ce0605c1d64a.png)\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/101291568-783db500-37cf-11eb-9f68-3bfbde7a9fde.png)](https://user-images.githubusercontent.com/30656341/101291568-783db500-37cf-11eb-9f68-3bfbde7a9fde.png)\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/101291587-8e4b7580-37cf-11eb-96c5-bbdf007d07af.png)](https://user-images.githubusercontent.com/30656341/101291587-8e4b7580-37cf-11eb-96c5-bbdf007d07af.png)\r\n\r\n</details>\r\n\r\n---\r\n# RESULTS\r\n\r\n<details><summary style=\"cursor:pointer\"><b>[ CLICK HERE TO VIEW THE RESULTS ]</b> </summary>\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/101291635-e1bdc380-37cf-11eb-8614-b52b31596bac.png)](https://user-images.githubusercontent.com/30656341/101291635-e1bdc380-37cf-11eb-8614-b52b31596bac.png)\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/101291643-f437fd00-37cf-11eb-9b30-cb381a8bf46e.png)](https://user-images.githubusercontent.com/30656341/101291643-f437fd00-37cf-11eb-9b30-cb381a8bf46e.png)\r\n\r\n</details>\r\n\r\n---\r\n## RESULTS BREAKDOWN\r\n\r\n<details><summary style=\"cursor:pointer\"><b>[ CLICK HERE TO VIEW THE RESULTS BREAKDOWN ]</b> </summary>\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/101291651-1598e900-37d0-11eb-9c3b-60f6b42b7077.png)](https://user-images.githubusercontent.com/30656341/101291651-1598e900-37d0-11eb-9c3b-60f6b42b7077.png)\r\n\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/101291659-25b0c880-37d0-11eb-96c5-b9b54f031f4d.png)](https://user-images.githubusercontent.com/30656341/101291659-25b0c880-37d0-11eb-96c5-b9b54f031f4d.png)\r\n\r\n</details>\r\n\r\n---\r\nSo, after lots of learning and coding, I made it work (I think).\r\n\r\nNow, I only need to learn how to feed that to the QuestJS parser.  The parser is not at all set up to work with regex capture groups.\r\n\r\n\r\nSo . . .\r\n\r\nI wrote some (sloppy) code to modify \"GiveTo\".\r\n\r\n\r\n<details><summary style=\"cursor:pointer\"><b>[ CLICK HERE TO VIEW THE MODIFIED 'GiveTo' CODE ]</b> </summary>\r\n\r\n\r\n```js\r\n\r\n//CHANGE GIVE TO FUNCTIONALITY (to add 'GIVE [npc] [object(s)]\r\n\r\nfindCmd(\"GiveTo\").regexes = [/^(?:give) (?<obj>.+) (?:to) (?<npc>.+)$/,\r\n  /^(?:give) (?<npc>\\w.?(?!= to)) (?<obj>.+)$/]\r\n  \r\nfindCmd(\"GiveTo\").multiple = true\r\n\r\nfindCmd(\"GiveTo\").script = function(objects) {\r\n      //parser.debug = true\r\n      parser.msg(\"Running giveTo function.\")\r\n\t  var objArr = []\r\n      findCmd(\"GiveTo\").regexes.forEach(rgx => {\r\n\t\t  if (rgx.exec(parser.currentCommand.cmdString)) {\r\n\t\t\t  objArr = rgx.exec(parser.currentCommand.cmdString)\r\n\t\t  }\r\n\t  })\r\n\t  //game.objArr = objArr\r\n\t  var npc = objArr.groups.npc\r\n\t  if (parser.debug) {console.log(\"npc\");console.log(npc)}\r\n\t  var obj = objArr.groups.obj\r\n\t  var isAll = false;\r\n\t  if (obj == \"all\") {\r\n\t\t  isAll = true;\r\n\t\t  if(parser.debug){console.log(\"Attempting ALL\")}\r\n\t\t  obj = game.player.getContents()\r\n\t\t  if(parser.debug){console.log(\"Changing obj to game.player.getContents() . . . :\");console.log(obj)}\r\n\t  }\r\n\t  //TODO: if object is multiple objects!!!\r\n\t  var newObj1Arr = []\r\n\t  var mult = false\r\n\t  var multObjs\r\n\t  if (!isAll && (obj.includes(', ')||obj.includes(' and '))){\r\n\t\t  mult = true\r\n\t\t  if(parser.debug){console.log(\"I'm running!\")}\r\n\t\t  multObjs = obj.replace(/\\, and /g, '|').replace(/ and /g, '|').replace(/\\, /g, '|').split('|')\r\n\t\t  if(parser.debug){console.log(`multObjs`);console.log(multObjs)}\r\n\t  }\r\n\t  if(mult && multObjs.length>1) {\r\n\t\t  multObjs.forEach(o => {\r\n\t\t\t  if(parser.debug){console.log(\"Finding: \"+o)}\r\n\t\t\t  var fnd = findObjByParser(o)\r\n\t\t\t  if(parser.debug){console.log(fnd)}\r\n\t\t\t  newObj1Arr.push(fnd)\r\n\t\t  })\r\n\t\t  obj = newObj1Arr\r\n\t  }\r\n\t  if(parser.debug){console.log(\"mult?\");console.log(mult);console.log(\"npc\");console.log(npc);console.log(\"objArr\");console.log(objArr)}\r\n\t  objects[1][0] = findObjByParser(npc) //This should be the npc\r\n      if (!isAll && !mult) {\r\n\t\t  objects[0] = [findObjByParser(obj)] //This should be the item(s)(?) given\r\n\t  }else{\r\n\t\t  objects[0] = obj\r\n\t  }\r\n      if(parser.debug){console.log('objects[1][0] (the npc)');console.log(objects[1][0]);console.log('objects[0][0] (the item(s) given)');console.log(objects[0][0])}\r\n      return handleGiveToNpc(game.player, objects);\r\n}\r\n\r\n//END OF CHANGE GIVE TO FUNCTIONALITY\r\n\r\n```\r\n\r\n</details>\r\n\r\n---\r\nNow, this is where I'm hitting a snag.\r\n\r\nI recently [added an OOPS command](http://textadventures.co.uk/forum/questkit/topic/czqpdgt2guogrbtfwxgxbg/quest-6-hack-adding-the-oops-command-to-quest-6-v0-3), and I modified ```parser.parse``` and ```parser.matchItemsToCmd``` to do so.  Then, The Pixie updated QuestJS with his own code to add OOPS (which I honestly haven't perused because I've been busy messing with this code).\r\n\r\nSo, I'm not even certain that I'm editing the same ```parser.matchItemsToCmd``` which is now in the QuestJS code, but these are the two blocks of code from the current version of ```parser.matchItemsToCmd``` that mess up my \"GiveTo\" hack:\r\n\r\nLines 295 - 299\r\nhttps://github.com/ThePix/QuestJS/blob/master/lib/_parser.js#L295\r\n\r\n```js\r\n        if (list.length > 1 && !cmd.objects[i].multiple) {\r\n          res.error = no_multiples_msg;\r\n          res.score = -1;\r\n          return res;\r\n        }\r\n\r\n```\r\n\r\n...and lines 313 - 317:\r\nhttps://github.com/ThePix/QuestJS/blob/master/lib/_parser.js#L313\r\n\r\n```js\r\n\r\n        if (objectNames.length > 1 && !cmd.objects[i].multiple) {\r\n          res.error = no_multiples_msg;\r\n          res.score = -1;\r\n          return res;\r\n        }\r\n```\r\n\r\n---\r\nI cannot find any object with a ```multiple``` attribute set on it.  So, I don't understand why that code is there (which definitely doesn't mean that code serves no purpose (it may deal with containers or something)).  I commented out both of those blocks of code, and my stuff (mostly) works now!  (I just hope I didn't break something else in the game world!)\r\n\r\nHere are some screenshots of the gameplay:\r\n\r\n<details><summary style=\"cursor:pointer\"><b>[ CLICK HERE TO VIEW THE SCREENSHOTS ]</b> </summary>\r\n\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/101295403-1ab36380-37e3-11eb-8d55-bac28f6ff524.png)](https://user-images.githubusercontent.com/30656341/101295403-1ab36380-37e3-11eb-8d55-bac28f6ff524.png)\r\n\r\n---\r\n[![image](https://user-images.githubusercontent.com/30656341/101295464-72ea6580-37e3-11eb-8e0e-e4cdeb7a341a.png)](https://user-images.githubusercontent.com/30656341/101295464-72ea6580-37e3-11eb-8e0e-e4cdeb7a341a.png)\r\n\r\n\r\n---\r\n[![image](https://user-images.githubusercontent.com/30656341/101295523-b7760100-37e3-11eb-989f-a3fabef7071b.png)](https://user-images.githubusercontent.com/30656341/101295523-b7760100-37e3-11eb-989f-a3fabef7071b.png)\r\n\r\n---\r\n[![image](https://user-images.githubusercontent.com/30656341/101295535-cb216780-37e3-11eb-8f23-6269358b70ce.png)](https://user-images.githubusercontent.com/30656341/101295535-cb216780-37e3-11eb-8f23-6269358b70ce.png)\r\n\r\n---\r\n[![image](https://user-images.githubusercontent.com/30656341/101295546-e55b4580-37e3-11eb-8c5d-d554b6726c7f.png)](https://user-images.githubusercontent.com/30656341/101295546-e55b4580-37e3-11eb-8c5d-d554b6726c7f.png)\r\n\r\n---\r\n[![image](https://user-images.githubusercontent.com/30656341/101295556-fb690600-37e3-11eb-9019-316e1f838663.png)](https://user-images.githubusercontent.com/30656341/101295556-fb690600-37e3-11eb-9019-316e1f838663.png)\r\n\r\n</details>\r\n\r\n---\r\n### ISSUES\r\n\r\nI just realized there are (at least) two issues whilst writing this.\r\n\r\n1. I didn't code the comma splitting correctly.\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/101295676-b8f3f900-37e4-11eb-902b-8b1a065b68b7.png)](https://user-images.githubusercontent.com/30656341/101295676-b8f3f900-37e4-11eb-902b-8b1a065b68b7.png)\r\n\r\n---\r\n2. I can't use articles with the objects.\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/101295694-e476e380-37e4-11eb-9f41-aed1ab590eef.png)](https://user-images.githubusercontent.com/30656341/101295694-e476e380-37e4-11eb-9f41-aed1ab590eef.png)\r\n\r\n---\r\nI probably just need to change one bit of code to fix the comma issue, and there's probably a parser function that removes an object's articles (a, an, the, etc.) before trying to match the text to objects.\r\n\r\nAfter a nap, I'll try to fix those two things and come back and edit the code.\r\n\r\nAs always, comments and suggestions are welcomed!\r\n\r\nHappy gaming!\r\n\r\n---\r\nPS\r\n\r\nI had to add something to this post to edit the title.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm running this script in the Firefox Web Developer Web Console.</p>\n<p>(For those who are unfamiliar with this: I pushed <strong>&lt;F12&gt;</strong> then <strong>Ctrl+B</strong> with Firefox open, entered the code in the field on the left, then pressed <strong>Ctrl+ENTER</strong> to run the code.)</p>\n<hr>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101291475-b5557780-37ce-11eb-8e9e-9ccd1d65ee81.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101291475-b5557780-37ce-11eb-8e9e-9ccd1d65ee81.png\" alt=\"image\"></a></p>\n<hr>\n<h1>The Mission</h1>\n<p>The GiveTo command only has one regular expression set up: <code>/^(?:give) (.+) (?:to) (.+)$/</code></p>\n<p><sup><a href=\"https://github.com/ThePix/QuestJS/blob/c8a5e409f2084b8dceb012baed9a0616e1324b19/lang/lang-en.js#L109\">VIEW THE REFERENCED LINE OF CODE ON GITHUB</a></sup></p>\n<p>So, the player <em>must</em> enter:  <samp style=\"padding: 2px; background-color: black; color: green\">GIVE [object(s)] TO [npc]</samp>.</p>\n<p>I want to add this optional format (or syntax, or whatever): <samp style=\"padding: 2px; background-color: black; color: green\">GIVE [npc] [object(s)]</samp>.</p>\n<p>Well . . .</p>\n<p>Long story a little shorter, I had to learn how to use regular expression capture groups to pull this off.</p>\n<hr>\n<h2>The Code</h2>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101291483-c7cfb100-37ce-11eb-9643-17761b991026.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101291483-c7cfb100-37ce-11eb-9643-17761b991026.png\" alt=\"image\"></a></p>\n<details><summary style=\"cursor: pointer\"><b>[ CLICK HERE TO VIEW THE CODE'S TEXT (for Copying and Pasting purposes) ]</b> </summary>\n<pre><code>clear()\nvar log = console.log\nvar regexes = [\n  /^(?:give) (?&lt;obj&gt;.+) (?:to) (?&lt;npc&gt;.+)$/,\n  /^(?:give) (?&lt;npc&gt;\\w.?(?!= to)) (?&lt;obj&gt;.+)$/\n]\nvar arrS = [\"give the sword to rp\",\"give rp the sword\",\"give all to rp\",\n            \"give rp all\",  \"give mask and hat to rp\",  \"give rp mask and hat\",\n           \"give mask, hat, and sword to rp\", \"give rp mask, hat, and sword\"]\nvar res = []\narrS.forEach((s,i) =&gt; {\n  log(`INPUT: ${s}`)\n  regexes.forEach((rgx,j) =&gt; {\n    log(`rgx[${j}]: ${rgx}`)\n    log(rgx.exec(s))\n    if(rgx.exec(s)) {\n        res.push(rgx.exec(s))\n    }\n  })\n})\nlog(`==============RESULTS==============\\nres:`)\nlog(res)\nlog(`======res breakdown=========`)\nvar obj,npc\nres.forEach((cand,i) =&gt; {\n  log(`----res.${i}----------------\\nINPUT: ${cand.input}`)\n  npc = cand.groups.npc\n  log(`npc: ${npc}`)\n  obj = cand.groups.obj\n  log(`obj: ${obj}`)\n  log(`----==end of res.${i}==-----`)\n})\n\n</code></pre>\n</details>\n<hr>\n<h2><strong>OUTPUT</strong></h2>\n<details><summary style=\"cursor: pointer\"><b>[ CLICK HERE TO VIEW THE OUTPUT ]</b> </summary>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101291554-462c5300-37cf-11eb-84aa-bf5db3f9b60c.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101291554-462c5300-37cf-11eb-84aa-bf5db3f9b60c.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101291563-65c37b80-37cf-11eb-88b9-ce0605c1d64a.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101291563-65c37b80-37cf-11eb-88b9-ce0605c1d64a.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101291568-783db500-37cf-11eb-9f68-3bfbde7a9fde.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101291568-783db500-37cf-11eb-9f68-3bfbde7a9fde.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101291587-8e4b7580-37cf-11eb-96c5-bbdf007d07af.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101291587-8e4b7580-37cf-11eb-96c5-bbdf007d07af.png\" alt=\"image\"></a></p>\n</details>\n<hr>\n<h1>RESULTS</h1>\n<details><summary style=\"cursor: pointer\"><b>[ CLICK HERE TO VIEW THE RESULTS ]</b> </summary>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101291635-e1bdc380-37cf-11eb-8614-b52b31596bac.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101291635-e1bdc380-37cf-11eb-8614-b52b31596bac.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101291643-f437fd00-37cf-11eb-9b30-cb381a8bf46e.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101291643-f437fd00-37cf-11eb-9b30-cb381a8bf46e.png\" alt=\"image\"></a></p>\n</details>\n<hr>\n<h2>RESULTS BREAKDOWN</h2>\n<details><summary style=\"cursor: pointer\"><b>[ CLICK HERE TO VIEW THE RESULTS BREAKDOWN ]</b> </summary>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101291651-1598e900-37d0-11eb-9c3b-60f6b42b7077.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101291651-1598e900-37d0-11eb-9c3b-60f6b42b7077.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101291659-25b0c880-37d0-11eb-96c5-b9b54f031f4d.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101291659-25b0c880-37d0-11eb-96c5-b9b54f031f4d.png\" alt=\"image\"></a></p>\n</details>\n<hr>\n<p>So, after lots of learning and coding, I made it work (I think).</p>\n<p>Now, I only need to learn how to feed that to the QuestJS parser.  The parser is not at all set up to work with regex capture groups.</p>\n<p>So . . .</p>\n<p>I wrote some (sloppy) code to modify \"GiveTo\".</p>\n<details><summary style=\"cursor: pointer\"><b>[ CLICK HERE TO VIEW THE MODIFIED 'GiveTo' CODE ]</b> </summary>\n<pre><code>\n//CHANGE GIVE TO FUNCTIONALITY (to add 'GIVE [npc] [object(s)]\n\nfindCmd(\"GiveTo\").regexes = [/^(?:give) (?&lt;obj&gt;.+) (?:to) (?&lt;npc&gt;.+)$/,\n  /^(?:give) (?&lt;npc&gt;\\w.?(?!= to)) (?&lt;obj&gt;.+)$/]\n  \nfindCmd(\"GiveTo\").multiple = true\n\nfindCmd(\"GiveTo\").script = function(objects) {\n      //parser.debug = true\n      parser.msg(\"Running giveTo function.\")\n\t  var objArr = []\n      findCmd(\"GiveTo\").regexes.forEach(rgx =&gt; {\n\t\t  if (rgx.exec(parser.currentCommand.cmdString)) {\n\t\t\t  objArr = rgx.exec(parser.currentCommand.cmdString)\n\t\t  }\n\t  })\n\t  //game.objArr = objArr\n\t  var npc = objArr.groups.npc\n\t  if (parser.debug) {console.log(\"npc\");console.log(npc)}\n\t  var obj = objArr.groups.obj\n\t  var isAll = false;\n\t  if (obj == \"all\") {\n\t\t  isAll = true;\n\t\t  if(parser.debug){console.log(\"Attempting ALL\")}\n\t\t  obj = game.player.getContents()\n\t\t  if(parser.debug){console.log(\"Changing obj to game.player.getContents() . . . :\");console.log(obj)}\n\t  }\n\t  //TODO: if object is multiple objects!!!\n\t  var newObj1Arr = []\n\t  var mult = false\n\t  var multObjs\n\t  if (!isAll &amp;&amp; (obj.includes(', ')||obj.includes(' and '))){\n\t\t  mult = true\n\t\t  if(parser.debug){console.log(\"I'm running!\")}\n\t\t  multObjs = obj.replace(/\\, and /g, '|').replace(/ and /g, '|').replace(/\\, /g, '|').split('|')\n\t\t  if(parser.debug){console.log(`multObjs`);console.log(multObjs)}\n\t  }\n\t  if(mult &amp;&amp; multObjs.length&gt;1) {\n\t\t  multObjs.forEach(o =&gt; {\n\t\t\t  if(parser.debug){console.log(\"Finding: \"+o)}\n\t\t\t  var fnd = findObjByParser(o)\n\t\t\t  if(parser.debug){console.log(fnd)}\n\t\t\t  newObj1Arr.push(fnd)\n\t\t  })\n\t\t  obj = newObj1Arr\n\t  }\n\t  if(parser.debug){console.log(\"mult?\");console.log(mult);console.log(\"npc\");console.log(npc);console.log(\"objArr\");console.log(objArr)}\n\t  objects[1][0] = findObjByParser(npc) //This should be the npc\n      if (!isAll &amp;&amp; !mult) {\n\t\t  objects[0] = [findObjByParser(obj)] //This should be the item(s)(?) given\n\t  }else{\n\t\t  objects[0] = obj\n\t  }\n      if(parser.debug){console.log('objects[1][0] (the npc)');console.log(objects[1][0]);console.log('objects[0][0] (the item(s) given)');console.log(objects[0][0])}\n      return handleGiveToNpc(game.player, objects);\n}\n\n//END OF CHANGE GIVE TO FUNCTIONALITY\n\n</code></pre>\n</details>\n<hr>\n<p>Now, this is where I'm hitting a snag.</p>\n<p>I recently <a href=\"http://textadventures.co.uk/forum/questkit/topic/czqpdgt2guogrbtfwxgxbg/quest-6-hack-adding-the-oops-command-to-quest-6-v0-3\">added an OOPS command</a>, and I modified <code>parser.parse</code> and <code>parser.matchItemsToCmd</code> to do so.  Then, The Pixie updated QuestJS with his own code to add OOPS (which I honestly haven't perused because I've been busy messing with this code).</p>\n<p>So, I'm not even certain that I'm editing the same <code>parser.matchItemsToCmd</code> which is now in the QuestJS code, but these are the two blocks of code from the current version of <code>parser.matchItemsToCmd</code> that mess up my \"GiveTo\" hack:</p>\n<p>Lines 295 - 299<br>\nhttps://github.com/ThePix/QuestJS/blob/master/lib/_parser.js#L295</p>\n<pre><code>        if (list.length &gt; 1 &amp;&amp; !cmd.objects[i].multiple) {\n          res.error = no_multiples_msg;\n          res.score = -1;\n          return res;\n        }\n\n</code></pre>\n<p>...and lines 313 - 317:<br>\nhttps://github.com/ThePix/QuestJS/blob/master/lib/_parser.js#L313</p>\n<pre><code>\n        if (objectNames.length &gt; 1 &amp;&amp; !cmd.objects[i].multiple) {\n          res.error = no_multiples_msg;\n          res.score = -1;\n          return res;\n        }\n</code></pre>\n<hr>\n<p>I cannot find any object with a <code>multiple</code> attribute set on it.  So, I don't understand why that code is there (which definitely doesn't mean that code serves no purpose (it may deal with containers or something)).  I commented out both of those blocks of code, and my stuff (mostly) works now!  (I just hope I didn't break something else in the game world!)</p>\n<p>Here are some screenshots of the gameplay:</p>\n<details><summary style=\"cursor: pointer\"><b>[ CLICK HERE TO VIEW THE SCREENSHOTS ]</b> </summary>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101295403-1ab36380-37e3-11eb-8d55-bac28f6ff524.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101295403-1ab36380-37e3-11eb-8d55-bac28f6ff524.png\" alt=\"image\"></a></p>\n<hr>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101295464-72ea6580-37e3-11eb-8e0e-e4cdeb7a341a.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101295464-72ea6580-37e3-11eb-8e0e-e4cdeb7a341a.png\" alt=\"image\"></a></p>\n<hr>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101295523-b7760100-37e3-11eb-989f-a3fabef7071b.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101295523-b7760100-37e3-11eb-989f-a3fabef7071b.png\" alt=\"image\"></a></p>\n<hr>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101295535-cb216780-37e3-11eb-8f23-6269358b70ce.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101295535-cb216780-37e3-11eb-8f23-6269358b70ce.png\" alt=\"image\"></a></p>\n<hr>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101295546-e55b4580-37e3-11eb-8c5d-d554b6726c7f.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101295546-e55b4580-37e3-11eb-8c5d-d554b6726c7f.png\" alt=\"image\"></a></p>\n<hr>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101295556-fb690600-37e3-11eb-9019-316e1f838663.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101295556-fb690600-37e3-11eb-9019-316e1f838663.png\" alt=\"image\"></a></p>\n</details>\n<hr>\n<h3>ISSUES</h3>\n<p>I just realized there are (at least) two issues whilst writing this.</p>\n<ol>\n<li>I didn't code the comma splitting correctly.</li>\n</ol>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101295676-b8f3f900-37e4-11eb-902b-8b1a065b68b7.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101295676-b8f3f900-37e4-11eb-902b-8b1a065b68b7.png\" alt=\"image\"></a></p>\n<hr>\n<ol start=\"2\">\n<li>I can't use articles with the objects.</li>\n</ol>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101295694-e476e380-37e4-11eb-9f41-aed1ab590eef.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101295694-e476e380-37e4-11eb-9f41-aed1ab590eef.png\" alt=\"image\"></a></p>\n<hr>\n<p>I probably just need to change one bit of code to fix the comma issue, and there's probably a parser function that removes an object's articles (a, an, the, etc.) before trying to match the text to objects.</p>\n<p>After a nap, I'll try to fix those two things and come back and edit the code.</p>\n<p>As always, comments and suggestions are welcomed!</p>\n<p>Happy gaming!</p>\n<hr>\n<p>PS</p>\n<p>I had to add something to this post to edit the title.</p>\n\n",
      "PostDate": "2020-12-06T23:12:39.176555Z",
      "LastEditDate": "2020-12-06T23:14:18.670559Z",
      "link": null
    },
    {
      "PostId": "177c1da0-c503-48b4-836b-788f22d26880",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "UPDATE\r\n\r\nI solved the issue with the articles quite easily.\r\n\r\nI mostly (technically) fixed the issue with commas, but I just realized I'm using the version of QuestJS that didn't have the Oxford comma coded.  Therefore, I can do ```give this, that and the other to ralph```, but not ```give this, that, and the other to ralph```.\r\n\r\nThat Oxford comma has been indirectly kicking my butt for two hours.  I just now planted enough logs to the console to figure out that it never makes it to my \"GiveTo\" script at all.\r\n\r\nMore on this as it comes in.  Plus, I'll update the code.",
      "EditableFormat": "markdown",
      "HTML": "<p>UPDATE</p>\n<p>I solved the issue with the articles quite easily.</p>\n<p>I mostly (technically) fixed the issue with commas, but I just realized I'm using the version of QuestJS that didn't have the Oxford comma coded.  Therefore, I can do <code>give this, that and the other to ralph</code>, but not <code>give this, that, and the other to ralph</code>.</p>\n<p>That Oxford comma has been indirectly kicking my butt for two hours.  I just now planted enough logs to the console to figure out that it never makes it to my \"GiveTo\" script at all.</p>\n<p>More on this as it comes in.  Plus, I'll update the code.</p>\n\n",
      "PostDate": "2020-12-07T02:14:03.5747735Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3be74b93-b442-426f-8898-8085d1bfa7d8",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "# UPDATE\r\n\r\nFor the record, this is for QuestJS v0.3.\r\n\r\n---\r\nIt seems to be in working order now.\r\n\r\nAdding this line of code (which familiarizes the parser with the Oxford comma) fixed my main issue:\r\n\r\n```js\r\nlang.joiner_regex = /\\b\\, and\\b|\\,|\\band\\b/\r\n```\r\n\r\nI forgot to include this code in the original post, but the function needed to be updated (meaning fixed) anyway:\r\n\r\n```js\r\nfunction findObjByParser(s){\r\n\tconsole.log(\"Running findObjByParser\")\r\n\tconsole.log(s)\r\n\ts = lang.article_filter_regex.exec(s)[1]\r\n\tconsole.log(s)\r\n\tvar scr = parser.findInList(s,allObjects(),{})\r\n\tif (scr.length>1) {\r\n\t\tscr = findObjByParser(s,scr)\r\n\t}\r\n\tscr = scr[0]\r\n\tconsole.log(scr)\r\n\treturn scr\r\n}\r\n\r\n```\r\n\r\n---\r\nMy final (?) \"GiveTo\" script:\r\n\r\n```js\r\n//CHANGE GIVE TO FUNCTIONALITY (to add 'GIVE [npc] [object(s)]\r\n\r\nfindCmd(\"GiveTo\").regexes = [/^(?:give) (?<obj>.+) (?:to) (?<npc>.+)$/,\r\n  /^(?:give) (?<npc>\\w.?(?!= to)) (?<obj>.+)$/]\r\n  \r\n//findCmd(\"GiveTo\").multiple = true\r\n\r\nfindCmd(\"GiveTo\").script = function(objects) {\r\n      //parser.debug = true\r\n      //console.log(\"Running giveTo function.\")\r\n\t  var objArr = []\r\n      findCmd(\"GiveTo\").regexes.forEach(rgx => {\r\n\t\t  if (rgx.exec(parser.currentCommand.cmdString)) {\r\n\t\t\t  objArr = rgx.exec(parser.currentCommand.cmdString)\r\n\t\t  }\r\n\t  })\r\n\t  //game.objArr = objArr\r\n\t  var npc = objArr.groups.npc\r\n\t  if (parser.debug) {console.log(\"npc\");console.log(npc)}\r\n\t  var obj = objArr.groups.obj\r\n\t  if (parser.debug) {console.log(\"obj\");console.log(obj)}\r\n\t  var isAll = false;\r\n\t  var newObj1Arr = []\r\n\t  var mult = false\r\n\t  var multObjs\r\n\t  if (obj == \"all\") {\r\n\t\t  isAll = true;\r\n\t\t  if(parser.debug){console.log(\"Attempting ALL\")}\r\n\t\t  obj = game.player.getContents()\r\n\t\t  if(parser.debug){console.log(\"Changing obj to game.player.getContents() . . . :\");console.log(obj)}\r\n\t  }else{\r\n\t\t  //console.log(\"Not ALL\")\r\n\t\t  if (obj.includes(',')||obj.includes(' and ')){\r\n\t\t\t  mult = true\r\n\t\t\t  if(parser.debug){console.log(\"I'm running!\")}\r\n\t\t\t  //console.log(obj)\r\n\t\t\t  multObjs = obj.replace(/\\, and /g, '|').replace(/\\, /g, '|').replace(/ and /g, '|').trim().split('|')\r\n\t\t\t  //console.log(multObjs)\r\n\t\t\t  multObjs.forEach((o,i) => {\r\n\t\t\t\t  multObjs[i] = o.trim()\r\n\t\t\t  })\r\n\t\t\t  if(parser.debug){console.log(`multObjs`);console.log(multObjs)}\r\n\t\t  }\r\n\t\t  if(mult && multObjs.length>1) {\r\n\t\t\t  multObjs.forEach(o => {\r\n\t\t\t\t  o = o.trim()\r\n\t\t\t\t  if(parser.debug){console.log(\"Finding: \"+o)}\r\n\t\t\t\t  var fnd = findObjByParser(o)\r\n\t\t\t\t  if(parser.debug){console.log(fnd)}\r\n\t\t\t\t  newObj1Arr.push(fnd)\r\n\t\t\t  })\r\n\t\t\t  obj = newObj1Arr\r\n\t\t  }\r\n\t  }\t\r\n\t  if(parser.debug){console.log(\"mult?\");console.log(mult);console.log(\"npc\");console.log(npc);console.log(\"objArr\");console.log(objArr)}\r\n\t  objects[1][0] = findObjByParser(npc) //This should be the npc\r\n      if (!isAll && !mult) {\r\n\t\t  objects[0] = [findObjByParser(obj)] //This should be the item(s)(?) given\r\n\t  }else{\r\n\t\t  objects[0] = obj\r\n\t  }\r\n      if(parser.debug){console.log('objects[1][0] (the npc)');console.log(objects[1][0]);console.log('objects[0][0] (the item(s) given)');console.log(objects[0][0])}\r\n      return handleGiveToNpc(game.player, objects);\r\n}\r\n\r\n//END OF CHANGE GIVE TO FUNCTIONALITY\r\n\r\n\r\n```\r\n\r\n---\r\nAlso, I still have to modify these IF blocks in ```parser.matchItemsToCmd```:\r\n\r\n```\r\n        list = list.filter(function(el) { return !exclude.includes(el); });\r\n        //KV removed next block because this seems to want the NPC to have multiple setup by default?\r\n        //TODO  maybe this affects CONTAINERS ???\r\n        //if (list.length > 1 && !cmd.objects[i].multiple) {\r\n          //console.log(list)\r\n          //console.log(cmd)\r\n          //console.log(cmd.objects[i]) //This is the npc.\r\n          //res.error = no_multiples_msg;\r\n          //res.score = -1;\r\n          //return res;\r\n        //}\r\n        score = 2;\r\n        res.objects.push(list.map(function(el) { return [el]; }));\r\n        res.matches.push(arr[i]);\r\n        res.all = true;\r\n      }\r\n      \r\n      else {\r\n        objectNames = arr[i].split(lang.joiner_regex).map(function(el){ return el.trim() });\r\n        //KV removed next block because this seems to want the NPC to have multiple setup by default?\r\n        //TODO  maybe this affects CONTAINERS ???\r\n        //if (objectNames.length > 1 && !cmd.objects[i].multiple) {\r\n          //console.log(cmd)\r\n          //console.log(cmd.objects[i]) //This is the npc\r\n          //res.error = no_multiples_msg;\r\n          //res.score = -1;\r\n          //return res;\r\n        //}\r\n```\r\n\r\nHere's the original code on lines 295 - 313:  https://github.com/ThePix/QuestJS/blob/master/lib/_parser.js#L295\r\n\r\nIt throws an error when I \"give ralph all\", but not when I \"give rp all\" or \"give all to ralph\".\r\n\r\nStill a mystery to me, and I haven't tested out other objects after changing that.\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/101304912-04b79a00-3807-11eb-864d-a5469eb2d94f.png)](https://user-images.githubusercontent.com/30656341/101304912-04b79a00-3807-11eb-864d-a5469eb2d94f.png)\r\n\r\n---\r\n---\r\n\r\nIt's probably a setting on the Ralph  object.\r\n\r\nHere's Ralph:\r\n\r\n```js\r\ncreateItem(\"Ralph\", NPC(false), {\r\n  loc:\"cellar\",\r\n  examine:\"Your trusty sidekick.\",\r\n  regex:/^(ralph|rp)$/,\r\n  shadowingPlayer:true,\r\n  properName:true,\r\n  talkto:\"Ralph waves you off.\",\r\n  getAgreementGo:function(dir) {\r\n\t  msg(\"Ralph never voluntarily leaves your side in this game.\");\r\n\t  return false;\r\n  },\r\n  hug:\"\\\"Whoa, whoa, whoa,\\\" says Ralph.  \\\"Social distancing!  Remember?!?\\\"\",\r\n  love:\"This is not that kind of game!\",\r\n});\r\n```\r\n\r\n---\r\nWill update after a break.",
      "EditableFormat": "markdown",
      "HTML": "<h1>UPDATE</h1>\n<p>For the record, this is for QuestJS v0.3.</p>\n<hr>\n<p>It seems to be in working order now.</p>\n<p>Adding this line of code (which familiarizes the parser with the Oxford comma) fixed my main issue:</p>\n<pre><code>lang.joiner_regex = /\\b\\, and\\b|\\,|\\band\\b/\n</code></pre>\n<p>I forgot to include this code in the original post, but the function needed to be updated (meaning fixed) anyway:</p>\n<pre><code>function findObjByParser(s){\n\tconsole.log(\"Running findObjByParser\")\n\tconsole.log(s)\n\ts = lang.article_filter_regex.exec(s)[1]\n\tconsole.log(s)\n\tvar scr = parser.findInList(s,allObjects(),{})\n\tif (scr.length&gt;1) {\n\t\tscr = findObjByParser(s,scr)\n\t}\n\tscr = scr[0]\n\tconsole.log(scr)\n\treturn scr\n}\n\n</code></pre>\n<hr>\n<p>My final (?) \"GiveTo\" script:</p>\n<pre><code>//CHANGE GIVE TO FUNCTIONALITY (to add 'GIVE [npc] [object(s)]\n\nfindCmd(\"GiveTo\").regexes = [/^(?:give) (?&lt;obj&gt;.+) (?:to) (?&lt;npc&gt;.+)$/,\n  /^(?:give) (?&lt;npc&gt;\\w.?(?!= to)) (?&lt;obj&gt;.+)$/]\n  \n//findCmd(\"GiveTo\").multiple = true\n\nfindCmd(\"GiveTo\").script = function(objects) {\n      //parser.debug = true\n      //console.log(\"Running giveTo function.\")\n\t  var objArr = []\n      findCmd(\"GiveTo\").regexes.forEach(rgx =&gt; {\n\t\t  if (rgx.exec(parser.currentCommand.cmdString)) {\n\t\t\t  objArr = rgx.exec(parser.currentCommand.cmdString)\n\t\t  }\n\t  })\n\t  //game.objArr = objArr\n\t  var npc = objArr.groups.npc\n\t  if (parser.debug) {console.log(\"npc\");console.log(npc)}\n\t  var obj = objArr.groups.obj\n\t  if (parser.debug) {console.log(\"obj\");console.log(obj)}\n\t  var isAll = false;\n\t  var newObj1Arr = []\n\t  var mult = false\n\t  var multObjs\n\t  if (obj == \"all\") {\n\t\t  isAll = true;\n\t\t  if(parser.debug){console.log(\"Attempting ALL\")}\n\t\t  obj = game.player.getContents()\n\t\t  if(parser.debug){console.log(\"Changing obj to game.player.getContents() . . . :\");console.log(obj)}\n\t  }else{\n\t\t  //console.log(\"Not ALL\")\n\t\t  if (obj.includes(',')||obj.includes(' and ')){\n\t\t\t  mult = true\n\t\t\t  if(parser.debug){console.log(\"I'm running!\")}\n\t\t\t  //console.log(obj)\n\t\t\t  multObjs = obj.replace(/\\, and /g, '|').replace(/\\, /g, '|').replace(/ and /g, '|').trim().split('|')\n\t\t\t  //console.log(multObjs)\n\t\t\t  multObjs.forEach((o,i) =&gt; {\n\t\t\t\t  multObjs[i] = o.trim()\n\t\t\t  })\n\t\t\t  if(parser.debug){console.log(`multObjs`);console.log(multObjs)}\n\t\t  }\n\t\t  if(mult &amp;&amp; multObjs.length&gt;1) {\n\t\t\t  multObjs.forEach(o =&gt; {\n\t\t\t\t  o = o.trim()\n\t\t\t\t  if(parser.debug){console.log(\"Finding: \"+o)}\n\t\t\t\t  var fnd = findObjByParser(o)\n\t\t\t\t  if(parser.debug){console.log(fnd)}\n\t\t\t\t  newObj1Arr.push(fnd)\n\t\t\t  })\n\t\t\t  obj = newObj1Arr\n\t\t  }\n\t  }\t\n\t  if(parser.debug){console.log(\"mult?\");console.log(mult);console.log(\"npc\");console.log(npc);console.log(\"objArr\");console.log(objArr)}\n\t  objects[1][0] = findObjByParser(npc) //This should be the npc\n      if (!isAll &amp;&amp; !mult) {\n\t\t  objects[0] = [findObjByParser(obj)] //This should be the item(s)(?) given\n\t  }else{\n\t\t  objects[0] = obj\n\t  }\n      if(parser.debug){console.log('objects[1][0] (the npc)');console.log(objects[1][0]);console.log('objects[0][0] (the item(s) given)');console.log(objects[0][0])}\n      return handleGiveToNpc(game.player, objects);\n}\n\n//END OF CHANGE GIVE TO FUNCTIONALITY\n\n\n</code></pre>\n<hr>\n<p>Also, I still have to modify these IF blocks in <code>parser.matchItemsToCmd</code>:</p>\n<pre><code>        list = list.filter(function(el) { return !exclude.includes(el); });\n        //KV removed next block because this seems to want the NPC to have multiple setup by default?\n        //TODO  maybe this affects CONTAINERS ???\n        //if (list.length &gt; 1 &amp;&amp; !cmd.objects[i].multiple) {\n          //console.log(list)\n          //console.log(cmd)\n          //console.log(cmd.objects[i]) //This is the npc.\n          //res.error = no_multiples_msg;\n          //res.score = -1;\n          //return res;\n        //}\n        score = 2;\n        res.objects.push(list.map(function(el) { return [el]; }));\n        res.matches.push(arr[i]);\n        res.all = true;\n      }\n      \n      else {\n        objectNames = arr[i].split(lang.joiner_regex).map(function(el){ return el.trim() });\n        //KV removed next block because this seems to want the NPC to have multiple setup by default?\n        //TODO  maybe this affects CONTAINERS ???\n        //if (objectNames.length &gt; 1 &amp;&amp; !cmd.objects[i].multiple) {\n          //console.log(cmd)\n          //console.log(cmd.objects[i]) //This is the npc\n          //res.error = no_multiples_msg;\n          //res.score = -1;\n          //return res;\n        //}\n</code></pre>\n<p>Here's the original code on lines 295 - 313:  https://github.com/ThePix/QuestJS/blob/master/lib/_parser.js#L295</p>\n<p>It throws an error when I \"give ralph all\", but not when I \"give rp all\" or \"give all to ralph\".</p>\n<p>Still a mystery to me, and I haven't tested out other objects after changing that.</p>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101304912-04b79a00-3807-11eb-864d-a5469eb2d94f.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101304912-04b79a00-3807-11eb-864d-a5469eb2d94f.png\" alt=\"image\"></a></p>\n<hr>\n<hr>\n<p>It's probably a setting on the Ralph  object.</p>\n<p>Here's Ralph:</p>\n<pre><code>createItem(\"Ralph\", NPC(false), {\n  loc:\"cellar\",\n  examine:\"Your trusty sidekick.\",\n  regex:/^(ralph|rp)$/,\n  shadowingPlayer:true,\n  properName:true,\n  talkto:\"Ralph waves you off.\",\n  getAgreementGo:function(dir) {\n\t  msg(\"Ralph never voluntarily leaves your side in this game.\");\n\t  return false;\n  },\n  hug:\"\\\"Whoa, whoa, whoa,\\\" says Ralph.  \\\"Social distancing!  Remember?!?\\\"\",\n  love:\"This is not that kind of game!\",\n});\n</code></pre>\n<hr>\n<p>Will update after a break.</p>\n\n",
      "PostDate": "2020-12-07T03:08:52.7128074Z",
      "LastEditDate": "2020-12-07T03:12:48.749215Z",
      "link": null
    },
    {
      "PostId": "b4efcd25-af00-48df-9758-1ca7c7a2b2a7",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have yet to read this fully, this is just some initial thoughts.\r\n\r\nFirst, an excellent place to test regular expressions is this web page (ideally set to ECMAScript, though it does not make much difference):\r\nhttps://regex101.com/\r\n\r\n> So, the player must enter: GIVE [object(s)] TO [npc].\r\n> I want to add this optional format (or syntax, or whatever): GIVE [npc] [object(s)].\r\n\r\nThe big problem is how the parser will decide where to break the text. Consider:\r\n\r\n> GIVE BIG MIKE HAT COAT\r\n\r\nDo you want to give Mike, the hat and the coat to Big (which could be short for Big Jim)? Or give the hat and coat to Big Mike?\r\n\r\n> The parser is not at all set up to work with regex capture groups.\r\n\r\nNot sure what that means. The parser does just that!\r\n\r\n> Then, The Pixie updated QuestJS with his own code to add OOPS (which I honestly haven't perused because I've been busy messing with this code).\r\n\r\nShould not be an issue; I do not think I edited the parser itself, just added the command to _commands.js and modified _io.js. The only change to _parser.js in the last month was your fix for DROP ALL.\r\n\r\n> I cannot find any object with a multiple attribute set on it. So, I don't understand why that code is there (which definitely doesn't mean that code serves no purpose (it may deal with containers or something)).\r\n\r\nThere are _commands_ with \"multiple\" set, indicating they can be used with multiple items. If you set your command to `multiple:true`, that may fix it - though the parser may expect the first item to be multiple rather than the last. Thinking about it, that could be an issue in some languages.\r\n\r\n> I mostly (technically) fixed the issue with commas, but I just realized I'm using the version of QuestJS that didn't have the Oxford comma coded.\r\n\r\nIt is only coded in the output, i.e., `formatList`, so not an issue. I am not sure how the input handles commas... I will have to check.\r\n\r\n_ETA:_ The commas in the input are handled with a regex called \"joiner_regex\", and the Oxford comma can be accomodated by changing that:\r\n```\r\n  joiner_regex:/\\band\\b|\\, ?and\\b|\\,/,\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I have yet to read this fully, this is just some initial thoughts.</p>\n<p>First, an excellent place to test regular expressions is this web page (ideally set to ECMAScript, though it does not make much difference):<br>\nhttps://regex101.com/</p>\n<blockquote>\n<p>So, the player must enter: GIVE [object(s)] TO [npc].<br>\nI want to add this optional format (or syntax, or whatever): GIVE [npc] [object(s)].</p>\n</blockquote>\n<p>The big problem is how the parser will decide where to break the text. Consider:</p>\n<blockquote>\n<p>GIVE BIG MIKE HAT COAT</p>\n</blockquote>\n<p>Do you want to give Mike, the hat and the coat to Big (which could be short for Big Jim)? Or give the hat and coat to Big Mike?</p>\n<blockquote>\n<p>The parser is not at all set up to work with regex capture groups.</p>\n</blockquote>\n<p>Not sure what that means. The parser does just that!</p>\n<blockquote>\n<p>Then, The Pixie updated QuestJS with his own code to add OOPS (which I honestly haven't perused because I've been busy messing with this code).</p>\n</blockquote>\n<p>Should not be an issue; I do not think I edited the parser itself, just added the command to _commands.js and modified _io.js. The only change to _parser.js in the last month was your fix for DROP ALL.</p>\n<blockquote>\n<p>I cannot find any object with a multiple attribute set on it. So, I don't understand why that code is there (which definitely doesn't mean that code serves no purpose (it may deal with containers or something)).</p>\n</blockquote>\n<p>There are <em>commands</em> with \"multiple\" set, indicating they can be used with multiple items. If you set your command to <code>multiple:true</code>, that may fix it - though the parser may expect the first item to be multiple rather than the last. Thinking about it, that could be an issue in some languages.</p>\n<blockquote>\n<p>I mostly (technically) fixed the issue with commas, but I just realized I'm using the version of QuestJS that didn't have the Oxford comma coded.</p>\n</blockquote>\n<p>It is only coded in the output, i.e., <code>formatList</code>, so not an issue. I am not sure how the input handles commas... I will have to check.</p>\n<p><em>ETA:</em> The commas in the input are handled with a regex called \"joiner_regex\", and the Oxford comma can be accomodated by changing that:</p>\n<pre><code>  joiner_regex:/\\band\\b|\\, ?and\\b|\\,/,\n</code></pre>\n\n",
      "PostDate": "2020-12-07T08:40:40.5527777Z",
      "LastEditDate": "2020-12-07T09:44:42.3886931Z",
      "link": null
    },
    {
      "PostId": "e91e191f-e7cc-468f-9718-ffbaec03f0cb",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> The commas in the input are handled with a regex called \"joiner_regex\", and the Oxford comma can be accomodated by changing that\r\n\r\nI found that just before my last post last night.  My regex works but I like your regex better.\r\n\r\nI also found that I had already transferred my game into a QuestJS v0.3 folder.  So, I *did* already have the updated ```formatList```.  It took a while to find ```joiner_regex```, but changing that immediately solved that issue.\r\n\r\n---\r\n> The big problem is how the parser will decide where to break the text. Consider:\r\n\r\n>>    GIVE BIG MIKE HAT COAT\r\n\r\n> Do you want to give Mike, the hat and the coat to Big (which could be short for Big Jim)? Or give the hat and coat to Big Mike?\r\n\r\nVery good point.  I had not considered object names with more than one word.\r\n\r\nI need to test that with my current code.\r\n\r\n---\r\n>>    The parser is not at all set up to work with regex capture groups.\r\n\r\n>Not sure what that means. The parser does just that!\r\n\r\nWell, I'm probably not using the proper terminology.\r\n\r\nI figured out how to add what I believe is called regex templates in Quest 5.\r\n\r\nI changed the regex on GiveTo:\r\n\r\n```\r\n//CHANGE GIVE TO FUNCTIONALITY (to add 'GIVE [npc] [object(s)]\r\n\r\nfindCmd(\"GiveTo\").regexes = [/^(?:give) (?<obj>.+) (?:to) (?<npc>.+)$/,\r\n  /^(?:give) (?<npc>\\w.?(?!= to)) (?<obj>.+)$/]\r\n```\r\n\r\n---\r\nAnd I easily pull the matched text for ```<obj>``` and ```<npc>``` like so:\r\n\r\n```\r\nfindCmd(\"GiveTo\").script = function(objects) {\r\n\t  var objArr = []\r\n          findCmd(\"GiveTo\").regexes.forEach(rgx => {\r\n\t\t  if (rgx.exec(parser.currentCommand.cmdString)) {\r\n\t\t\t  objArr = rgx.exec(parser.currentCommand.cmdString)\r\n\t\t  }\r\n\t  })\r\n\t  var npc = objArr.groups.npc //This is the magic!\r\n\t  var obj = objArr.groups.obj //This is the magic!\r\n\r\n\r\n//...the code continues...\r\n```\r\n\r\n---\r\nDoes the parser already check for anything like ```<object>``` or ```<object1>``` and ```<object2>```in the regex?\r\n\r\nI (think I) have to reset ```objects[1][0]``` (which is the npc in GiveTo) and ```objects[0]``` manually after my script finds the JS objects that match ```<npc>``` and ```<obj>``` from my regex capture groups.\r\n\r\n---\r\nRight now, everything seems to work except the one way I enter GIVE RALPH ALL.\r\n\r\nI get: I don't even know where to begin with that.\r\n\r\nBut everything else works:  GIVE RP ALL or GIVE ALL TO RALPH or GIVE ALL TO RP.\r\n\r\nFor some reason, the parser doesn't like it when I say RALPH before I say ALL.\r\n\r\nACTUAL TEXT FROM THE GAME:\r\n\r\n```\r\n> give ralph cig\r\n\r\nI don't even know where to begin with that.\r\n\r\n> give rp cig\r\n\r\nDone.\r\n\r\n> give mask to rp\r\n\r\nDone.\r\n\r\n> give lighter to ralph\r\n\r\nDone.\r\n>\r\n```\r\n\r\n---\r\nLike I say, I'm sure I've done something to the code that makes it ignore Ralph's actual name.  I shall research that and return here.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>The commas in the input are handled with a regex called \"joiner_regex\", and the Oxford comma can be accomodated by changing that</p>\n</blockquote>\n<p>I found that just before my last post last night.  My regex works but I like your regex better.</p>\n<p>I also found that I had already transferred my game into a QuestJS v0.3 folder.  So, I <em>did</em> already have the updated <code>formatList</code>.  It took a while to find <code>joiner_regex</code>, but changing that immediately solved that issue.</p>\n<hr>\n<blockquote>\n<p>The big problem is how the parser will decide where to break the text. Consider:</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>GIVE BIG MIKE HAT COAT</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>Do you want to give Mike, the hat and the coat to Big (which could be short for Big Jim)? Or give the hat and coat to Big Mike?</p>\n</blockquote>\n<p>Very good point.  I had not considered object names with more than one word.</p>\n<p>I need to test that with my current code.</p>\n<hr>\n<blockquote>\n<blockquote>\n<p>The parser is not at all set up to work with regex capture groups.</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>Not sure what that means. The parser does just that!</p>\n</blockquote>\n<p>Well, I'm probably not using the proper terminology.</p>\n<p>I figured out how to add what I believe is called regex templates in Quest 5.</p>\n<p>I changed the regex on GiveTo:</p>\n<pre><code>//CHANGE GIVE TO FUNCTIONALITY (to add 'GIVE [npc] [object(s)]\n\nfindCmd(\"GiveTo\").regexes = [/^(?:give) (?&lt;obj&gt;.+) (?:to) (?&lt;npc&gt;.+)$/,\n  /^(?:give) (?&lt;npc&gt;\\w.?(?!= to)) (?&lt;obj&gt;.+)$/]\n</code></pre>\n<hr>\n<p>And I easily pull the matched text for <code>&lt;obj&gt;</code> and <code>&lt;npc&gt;</code> like so:</p>\n<pre><code>findCmd(\"GiveTo\").script = function(objects) {\n\t  var objArr = []\n          findCmd(\"GiveTo\").regexes.forEach(rgx =&gt; {\n\t\t  if (rgx.exec(parser.currentCommand.cmdString)) {\n\t\t\t  objArr = rgx.exec(parser.currentCommand.cmdString)\n\t\t  }\n\t  })\n\t  var npc = objArr.groups.npc //This is the magic!\n\t  var obj = objArr.groups.obj //This is the magic!\n\n\n//...the code continues...\n</code></pre>\n<hr>\n<p>Does the parser already check for anything like <code>&lt;object&gt;</code> or <code>&lt;object1&gt;</code> and <code>&lt;object2&gt;</code>in the regex?</p>\n<p>I (think I) have to reset <code>objects[1][0]</code> (which is the npc in GiveTo) and <code>objects[0]</code> manually after my script finds the JS objects that match <code>&lt;npc&gt;</code> and <code>&lt;obj&gt;</code> from my regex capture groups.</p>\n<hr>\n<p>Right now, everything seems to work except the one way I enter GIVE RALPH ALL.</p>\n<p>I get: I don't even know where to begin with that.</p>\n<p>But everything else works:  GIVE RP ALL or GIVE ALL TO RALPH or GIVE ALL TO RP.</p>\n<p>For some reason, the parser doesn't like it when I say RALPH before I say ALL.</p>\n<p>ACTUAL TEXT FROM THE GAME:</p>\n<pre><code>&gt; give ralph cig\n\nI don't even know where to begin with that.\n\n&gt; give rp cig\n\nDone.\n\n&gt; give mask to rp\n\nDone.\n\n&gt; give lighter to ralph\n\nDone.\n&gt;\n</code></pre>\n<hr>\n<p>Like I say, I'm sure I've done something to the code that makes it ignore Ralph's actual name.  I shall research that and return here.</p>\n\n",
      "PostDate": "2020-12-07T12:41:01.337997Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0bdb0442-73eb-43ba-a099-55292ad1f29d",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Does the parser already check for anything like &lt;object> or &lt;object1> and &lt;object2>in the regex?\r\n\r\nIt does... But not by name. JavaScript support for named capture groups is pretty recent - 2018, when I started this, and browser support was patching.\r\n\r\nIt assumes you capture groups are in order. What is passed to the command script is an array of objects in the order of the capture groups.\r\n\r\nThis would mean two commands for GIVE. But both could use the same function, so not much of a deal.\r\n\r\n> Does the parser already check for anything like &lt;object> or &lt;object1> and &lt;object2>in the regex?\r\n\r\nYes, if I understand right. The parser will match what is thinks are suitable objects before passing the results to the command script.\r\n\r\n> I don't even know where to begin with that.\r\n\r\nYou can use the PARSER command to get some idea of how the parser is comparing different options for commands and then fir objects to work with them.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Does the parser already check for anything like &lt;object&gt; or &lt;object1&gt; and &lt;object2&gt;in the regex?</p>\n</blockquote>\n<p>It does... But not by name. JavaScript support for named capture groups is pretty recent - 2018, when I started this, and browser support was patching.</p>\n<p>It assumes you capture groups are in order. What is passed to the command script is an array of objects in the order of the capture groups.</p>\n<p>This would mean two commands for GIVE. But both could use the same function, so not much of a deal.</p>\n<blockquote>\n<p>Does the parser already check for anything like &lt;object&gt; or &lt;object1&gt; and &lt;object2&gt;in the regex?</p>\n</blockquote>\n<p>Yes, if I understand right. The parser will match what is thinks are suitable objects before passing the results to the command script.</p>\n<blockquote>\n<p>I don't even know where to begin with that.</p>\n</blockquote>\n<p>You can use the PARSER command to get some idea of how the parser is comparing different options for commands and then fir objects to work with them.</p>\n\n",
      "PostDate": "2020-12-07T14:22:10.6402476Z",
      "LastEditDate": "2020-12-07T14:23:45.1280713Z",
      "link": null
    },
    {
      "PostId": "1692c5c7-f4bc-4dd6-ab22-89b93fca8383",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I am miscommunicating.  I should be saying \"named capture groups\" rather than \"capture groups\".\r\n\r\nAs far as I can tell, nothing in the existing code is checking for named capture groups.\r\n\r\nOh, I see.  You just said \"not by name\" because it's relatively new.\r\n\r\nHrmm.  I wonder how hard it would be to have the actual parser try to match named groups and move on to do what is already scripted if none exist . . .\r\n\r\n---\r\nThat site to which you linked to test regex is freakin' awesome!\r\n\r\n<details><summary>SCREENSHOT</summary>\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/101365494-817b6000-3869-11eb-9191-5cee50f59b5a.png)](https://user-images.githubusercontent.com/30656341/101365494-817b6000-3869-11eb-9191-5cee50f59b5a.png)\r\n\r\n</details>\r\n\r\n---\r\n\r\n> You can use the PARSER command\r\n\r\nI can't get that command to work.  I've tried with the game set on \"dev\" and on \"beta\".\r\n\r\nI have to manually do ```parser.debug = true``` to get the parser messages.\r\n\r\nDoes it have to be all caps? (Or am I just being silly?) If it does need to be all caps, does this line in parser.js affect that?:  [```let cmdString = inputText.toLowerCase().trim().replace(/\\s+/g, ' ');```](https://github.com/ThePix/QuestJS/blob/e3b597416c252ed9c2a08dcb5f10d026724d58da/lib/_parser.js#L151)\r\n\r\n---\r\n> This would mean two commands for GIVE.\r\n\r\nHey . . .\r\n\r\nI just looked, and that's how Inform 7 handles it, too.  I added a regex to the GiveTo.  Perhaps creating a GiveToToo with a separate regex (leaving GiveTo's regex alone) would do the trick.\r\n\r\nThat's a marvelous idea!\r\n\r\n[MANIACAL LAUGH]",
      "EditableFormat": "markdown",
      "HTML": "<p>I am miscommunicating.  I should be saying \"named capture groups\" rather than \"capture groups\".</p>\n<p>As far as I can tell, nothing in the existing code is checking for named capture groups.</p>\n<p>Oh, I see.  You just said \"not by name\" because it's relatively new.</p>\n<p>Hrmm.  I wonder how hard it would be to have the actual parser try to match named groups and move on to do what is already scripted if none exist . . .</p>\n<hr>\n<p>That site to which you linked to test regex is freakin' awesome!</p>\n<details><summary>SCREENSHOT</summary>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101365494-817b6000-3869-11eb-9191-5cee50f59b5a.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101365494-817b6000-3869-11eb-9191-5cee50f59b5a.png\" alt=\"image\"></a></p>\n</details>\n<hr>\n<blockquote>\n<p>You can use the PARSER command</p>\n</blockquote>\n<p>I can't get that command to work.  I've tried with the game set on \"dev\" and on \"beta\".</p>\n<p>I have to manually do <code>parser.debug = true</code> to get the parser messages.</p>\n<p>Does it have to be all caps? (Or am I just being silly?) If it does need to be all caps, does this line in parser.js affect that?:  <a href=\"https://github.com/ThePix/QuestJS/blob/e3b597416c252ed9c2a08dcb5f10d026724d58da/lib/_parser.js#L151\"><code>let cmdString = inputText.toLowerCase().trim().replace(/\\s+/g, ' ');</code></a></p>\n<hr>\n<blockquote>\n<p>This would mean two commands for GIVE.</p>\n</blockquote>\n<p>Hey . . .</p>\n<p>I just looked, and that's how Inform 7 handles it, too.  I added a regex to the GiveTo.  Perhaps creating a GiveToToo with a separate regex (leaving GiveTo's regex alone) would do the trick.</p>\n<p>That's a marvelous idea!</p>\n<p>[MANIACAL LAUGH]</p>\n\n",
      "PostDate": "2020-12-07T15:01:17.1120046Z",
      "LastEditDate": "2020-12-07T23:25:31.5610971Z",
      "link": null
    },
    {
      "PostId": "16709c25-55c9-4b63-8225-aa9908c3c0eb",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "SIDETRACK\r\n\r\nI can't find the PARSER command.\r\n\r\nI listed out all the commands in the console, but I can't see it.  (I also printed out the regexes, just to make sure I wasn't overlooking anything.\r\n\r\n<details>\r\n\r\n```commands.forEach(n => {console.log(n.name)})```\r\n\r\nMetaHelp\r\n\r\nMetaHint\r\n\r\nMetaCredits\r\n\r\nMetaDarkMode\r\n\r\nMetaSilent\r\n\r\nMetaWarnings\r\n\r\nMetaSpoken\r\n\r\nMetaIntro\r\n\r\nMetaBrief\r\n\r\nMetaTerse\r\n\r\nMetaVerbose\r\n\r\nMetaTranscript\r\n\r\nMetaTranscriptOn\r\n\r\nMetaTranscriptOff\r\n\r\nMetaTranscriptClear\r\n\r\nMetaTranscriptShow\r\n\r\nMetaTranscriptShowWithOptions\r\n\r\nMetaTranscriptToWalkthrough\r\n\r\nMetaPlayerComment\r\n\r\nMetaSave\r\n\r\nMetaSaveGame\r\n\r\nMetaLoad\r\n\r\nMetaLoadGame\r\n\r\nMetaDir\r\n\r\nMetaDeleteGame\r\n\r\nMetaUndo\r\n\r\nMetaAgain\r\n\r\nLook\r\n\r\nExits\r\n\r\nWait\r\n\r\nTopicsNote\r\n\r\nInv\r\n\r\nMap\r\n\r\nSmell\r\n\r\nListen\r\n\r\nPurchaseFromList\r\n\r\nExamine\r\n\r\nLookAt\r\n\r\nLookOut\r\n\r\nLookBehind\r\n\r\nLookUnder\r\n\r\nLookInside\r\n\r\nSearch\r\n\r\nTake\r\n\r\nDrop\r\n\r\nWear2\r\n\r\nWear\r\n\r\nRemove\r\n\r\nRemove2\r\n\r\nRead\r\n\r\nEat\r\n\r\nPurchase\r\n\r\nSell\r\n\r\nSmash\r\n\r\nSwitchOn\r\n\r\nSwitchOn2\r\n\r\nSwitchOff2\r\n\r\nSwitchOff\r\n\r\nOpen\r\n\r\nClose\r\n\r\nLock\r\n\r\nUnlock\r\n\r\nPush\r\n\r\nPull\r\n\r\nFill\r\n\r\nEmpty\r\n\r\nSmellItem\r\n\r\nListenToItem\r\n\r\nEat\r\n\r\nDrink\r\n\r\nIngest\r\n\r\nSitOn\r\n\r\nStandOn\r\n\r\nReclineOn\r\n\r\nGetOff\r\n\r\nUse\r\n\r\nTalkTo\r\n\r\nTopics\r\n\r\nSay\r\n\r\nStand\r\n\r\nNpcStand\r\n\r\nFillWith\r\n\r\nNpcFillWith\r\n\r\nPutIn\r\n\r\nNpcPutIn\r\n\r\nTakeOut\r\n\r\nNpcTakeOut\r\n\r\nGiveTo\r\n\r\nNpcGiveTo\r\n\r\nPushExit\r\n\r\nNpcPushExit\r\n\r\nTieTo\r\n\r\nNpcTieTo\r\n\r\nUntie\r\n\r\nNpcUntie\r\n\r\nUntieFrom\r\n\r\nNpcUntieFrom\r\n\r\nUseWith\r\n\r\nAskAbout\r\n\r\nTellAbout\r\n\r\nOops\r\n\r\nLove\r\n\r\nHug\r\n\r\nLight\r\n\r\nEnjoy\r\n\r\nSmoke\r\n\r\nMetaRestart\r\n\r\nMetaQuit\r\n\r\nNpcExamine\r\n\r\nNpcLookAt\r\n\r\nNpcLookOut\r\n\r\nNpcLookBehind\r\n\r\nNpcLookUnder\r\n\r\nNpcLookInside\r\n\r\nNpcSearch\r\n\r\nNpcTake\r\n\r\nNpcDrop\r\n\r\nNpcWear2\r\n\r\nNpcWear\r\n\r\nNpcRemove\r\n\r\nNpcRemove2\r\n\r\nNpcRead\r\n\r\nNpcEat\r\n\r\nNpcPurchase\r\n\r\nNpcSell\r\n\r\nNpcSmash\r\n\r\nNpcSwitchOn\r\n\r\nNpcSwitchOn2\r\n\r\nNpcSwitchOff2\r\n\r\nNpcSwitchOff\r\n\r\nNpcOpen\r\n\r\nNpcClose\r\n\r\nNpcLock\r\n\r\nNpcUnlock\r\n\r\nNpcPush\r\n\r\nNpcPull\r\n\r\nNpcFill\r\n\r\nNpcEmpty\r\n\r\nNpcSmellItem\r\n\r\nNpcListenToItem\r\n\r\nNpcEat\r\n\r\nNpcDrink\r\n\r\nNpcIngest\r\n\r\nNpcSitOn\r\n\r\nNpcStandOn\r\n\r\nNpcReclineOn\r\n\r\nNpcGetOff\r\n\r\nNpcUse\r\n\r\nGoNorthwest\r\n\r\nNpcGoNorthwest2\r\n\r\nGoNorth\r\n\r\nNpcGoNorth2\r\n\r\nGoNortheast\r\n\r\nNpcGoNortheast2\r\n\r\nGoIn\r\n\r\nNpcGoIn2\r\n\r\nGoUp\r\n\r\nNpcGoUp2\r\n\r\nGoWest\r\n\r\nNpcGoWest2\r\n\r\nGoEast\r\n\r\nNpcGoEast2\r\n\r\nGoOut\r\n\r\nNpcGoOut2\r\n\r\nGoDown\r\n\r\nNpcGoDown2\r\n\r\nGoSouthwest\r\n\r\nNpcGoSouthwest2\r\n\r\nGoSouth\r\n\r\nNpcGoSouth2\r\n\r\nGoSoutheast\r\n\r\nNpcGoSoutheast2\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>SIDETRACK</p>\n<p>I can't find the PARSER command.</p>\n<p>I listed out all the commands in the console, but I can't see it.  (I also printed out the regexes, just to make sure I wasn't overlooking anything.</p>\n<details>\n<p><code>commands.forEach(n =&gt; {console.log(n.name)})</code></p>\n<p>MetaHelp</p>\n<p>MetaHint</p>\n<p>MetaCredits</p>\n<p>MetaDarkMode</p>\n<p>MetaSilent</p>\n<p>MetaWarnings</p>\n<p>MetaSpoken</p>\n<p>MetaIntro</p>\n<p>MetaBrief</p>\n<p>MetaTerse</p>\n<p>MetaVerbose</p>\n<p>MetaTranscript</p>\n<p>MetaTranscriptOn</p>\n<p>MetaTranscriptOff</p>\n<p>MetaTranscriptClear</p>\n<p>MetaTranscriptShow</p>\n<p>MetaTranscriptShowWithOptions</p>\n<p>MetaTranscriptToWalkthrough</p>\n<p>MetaPlayerComment</p>\n<p>MetaSave</p>\n<p>MetaSaveGame</p>\n<p>MetaLoad</p>\n<p>MetaLoadGame</p>\n<p>MetaDir</p>\n<p>MetaDeleteGame</p>\n<p>MetaUndo</p>\n<p>MetaAgain</p>\n<p>Look</p>\n<p>Exits</p>\n<p>Wait</p>\n<p>TopicsNote</p>\n<p>Inv</p>\n<p>Map</p>\n<p>Smell</p>\n<p>Listen</p>\n<p>PurchaseFromList</p>\n<p>Examine</p>\n<p>LookAt</p>\n<p>LookOut</p>\n<p>LookBehind</p>\n<p>LookUnder</p>\n<p>LookInside</p>\n<p>Search</p>\n<p>Take</p>\n<p>Drop</p>\n<p>Wear2</p>\n<p>Wear</p>\n<p>Remove</p>\n<p>Remove2</p>\n<p>Read</p>\n<p>Eat</p>\n<p>Purchase</p>\n<p>Sell</p>\n<p>Smash</p>\n<p>SwitchOn</p>\n<p>SwitchOn2</p>\n<p>SwitchOff2</p>\n<p>SwitchOff</p>\n<p>Open</p>\n<p>Close</p>\n<p>Lock</p>\n<p>Unlock</p>\n<p>Push</p>\n<p>Pull</p>\n<p>Fill</p>\n<p>Empty</p>\n<p>SmellItem</p>\n<p>ListenToItem</p>\n<p>Eat</p>\n<p>Drink</p>\n<p>Ingest</p>\n<p>SitOn</p>\n<p>StandOn</p>\n<p>ReclineOn</p>\n<p>GetOff</p>\n<p>Use</p>\n<p>TalkTo</p>\n<p>Topics</p>\n<p>Say</p>\n<p>Stand</p>\n<p>NpcStand</p>\n<p>FillWith</p>\n<p>NpcFillWith</p>\n<p>PutIn</p>\n<p>NpcPutIn</p>\n<p>TakeOut</p>\n<p>NpcTakeOut</p>\n<p>GiveTo</p>\n<p>NpcGiveTo</p>\n<p>PushExit</p>\n<p>NpcPushExit</p>\n<p>TieTo</p>\n<p>NpcTieTo</p>\n<p>Untie</p>\n<p>NpcUntie</p>\n<p>UntieFrom</p>\n<p>NpcUntieFrom</p>\n<p>UseWith</p>\n<p>AskAbout</p>\n<p>TellAbout</p>\n<p>Oops</p>\n<p>Love</p>\n<p>Hug</p>\n<p>Light</p>\n<p>Enjoy</p>\n<p>Smoke</p>\n<p>MetaRestart</p>\n<p>MetaQuit</p>\n<p>NpcExamine</p>\n<p>NpcLookAt</p>\n<p>NpcLookOut</p>\n<p>NpcLookBehind</p>\n<p>NpcLookUnder</p>\n<p>NpcLookInside</p>\n<p>NpcSearch</p>\n<p>NpcTake</p>\n<p>NpcDrop</p>\n<p>NpcWear2</p>\n<p>NpcWear</p>\n<p>NpcRemove</p>\n<p>NpcRemove2</p>\n<p>NpcRead</p>\n<p>NpcEat</p>\n<p>NpcPurchase</p>\n<p>NpcSell</p>\n<p>NpcSmash</p>\n<p>NpcSwitchOn</p>\n<p>NpcSwitchOn2</p>\n<p>NpcSwitchOff2</p>\n<p>NpcSwitchOff</p>\n<p>NpcOpen</p>\n<p>NpcClose</p>\n<p>NpcLock</p>\n<p>NpcUnlock</p>\n<p>NpcPush</p>\n<p>NpcPull</p>\n<p>NpcFill</p>\n<p>NpcEmpty</p>\n<p>NpcSmellItem</p>\n<p>NpcListenToItem</p>\n<p>NpcEat</p>\n<p>NpcDrink</p>\n<p>NpcIngest</p>\n<p>NpcSitOn</p>\n<p>NpcStandOn</p>\n<p>NpcReclineOn</p>\n<p>NpcGetOff</p>\n<p>NpcUse</p>\n<p>GoNorthwest</p>\n<p>NpcGoNorthwest2</p>\n<p>GoNorth</p>\n<p>NpcGoNorth2</p>\n<p>GoNortheast</p>\n<p>NpcGoNortheast2</p>\n<p>GoIn</p>\n<p>NpcGoIn2</p>\n<p>GoUp</p>\n<p>NpcGoUp2</p>\n<p>GoWest</p>\n<p>NpcGoWest2</p>\n<p>GoEast</p>\n<p>NpcGoEast2</p>\n<p>GoOut</p>\n<p>NpcGoOut2</p>\n<p>GoDown</p>\n<p>NpcGoDown2</p>\n<p>GoSouthwest</p>\n<p>NpcGoSouthwest2</p>\n<p>GoSouth</p>\n<p>NpcGoSouth2</p>\n<p>GoSoutheast</p>\n<p>NpcGoSoutheast2</p>\n</details>\n\n",
      "PostDate": "2020-12-07T15:12:18.4384152Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "aff0775b-cf3f-4783-98b2-e5a1f285bdc3",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It is a debugging command, so only present if:\r\n```\r\nsettings.playMode = 'dev'\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>It is a debugging command, so only present if:</p>\n<pre><code>settings.playMode = 'dev'\n</code></pre>\n\n",
      "PostDate": "2020-12-07T15:18:35.8205561Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0a21e376-cfab-4c21-b7f5-c8a7d081123f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(EDIT: I see more posts while I was typing this; so it's probably redundant. But may as well share anyway)\r\n\r\n(EDIT 3: changed handling of commas in the pseudocode so that objects with commas in their names don't cause issues)\r\n\r\n> `/^(?:give) (?<npc>\\w.?(?!= to)) (?<obj>.+)$/`\r\n\r\nSo that matches (taking the parts one by one)…\r\n* `/(?:give) /` - the literal word \"give\". Exactly the same behaviour as `/give /` so not sure why the parentheses are there\r\n* `/(?<npc>\\w.?(?!= to))/` - the named group `npc`, which matches either one or two characters, the first of which must be a letter or underscore, which are not followed by the string `= to`.\r\n* `/ /` - a  space (I'm including this as a separate part because it isn't captured)\r\n* `/(?<obj>.+)$/` - the named capture group `obj`, which matches any one or more characters until the end of the string\r\n\r\nI've only skimmed this post because there's so much of it. But do you really want to limit the npc name to 2 letters?\r\n\r\nI suspect you want something more like:\r\n```\r\n/^give(?!.*\\bto\\b) (?<npc>\\w+?) (?<obj>.+)$/i\r\n```\r\nwhich is slightly slower, and still forces the NPC name to be a single word, but allows it to be longer than 2 letters.\r\n\r\nIf you want the NPC name and the object to both have spaces in, you need a lexer rather than a pattern engine. (as in, you need to interpret the line in the context of the available objects). You'd probably want to match everything as a single string and then interpret it later.\r\n\r\nAn algorithm for this could be (pseudocode):\r\n* objects = new Array()\r\n* npcpos = 0\r\n* words = args.split (/\\s+|\\b/)\r\n* while (words) {\r\n    * while (current_word.match(/^(?:and|or|\\W+)$/))\r\n        * current_word = words.shift\r\n    * if (current_word == \"to\") {\r\n        * current_word = words.shift\r\n        * npcpos = objects.length\r\n    * }\r\n    * current_word = words.shift\r\n    * matched_objects = all objects in scope whose names include current_word\r\n    * while (words && any of matched_objects contains words[0] in its name && !current_word.match(/,$/)) {\r\n        * current_word = words.shift\r\n        * remove from matched_objects any whose name doesn't include current_word\r\n    * }\r\n    * if (matched_objects.length == 1)\r\n        * objects.push( matched_objects[0] )\r\n    * else\r\n        * disambiguation time! no idea how this is handled\r\n* }\r\n* npc = objects.splice(npcpos, 1).shift\r\n\r\nIt basically parses a list of objects where the comma and/or \"and\" between objects is optional; by checking each word to see if it could be part of the name of the previous object, and assuming a new object otherwise. Then assume the first object is the NPC. Making a regex do this would require the regex to be modified based on the objects in scope, and would be horrific.\r\n\r\n(EDIT2: fixed the random parser pseudocode so that it works for constructs and errors like \"give statue to barry\", \"give ralph cheese and pickles\", \"give john smith bell book and candle\", \"give ham,eggs,key to cellar, and biscuits to mike\", and \"give dave the key to the cellar\")",
      "EditableFormat": "markdown",
      "HTML": "<p>(EDIT: I see more posts while I was typing this; so it's probably redundant. But may as well share anyway)</p>\n<p>(EDIT 3: changed handling of commas in the pseudocode so that objects with commas in their names don't cause issues)</p>\n<blockquote>\n<p><code>/^(?:give) (?&lt;npc&gt;\\w.?(?!= to)) (?&lt;obj&gt;.+)$/</code></p>\n</blockquote>\n<p>So that matches (taking the parts one by one)…</p>\n<ul>\n<li><code>/(?:give) /</code> - the literal word \"give\". Exactly the same behaviour as <code>/give /</code> so not sure why the parentheses are there</li>\n<li><code>/(?&lt;npc&gt;\\w.?(?!= to))/</code> - the named group <code>npc</code>, which matches either one or two characters, the first of which must be a letter or underscore, which are not followed by the string <code>= to</code>.</li>\n<li><code>/ /</code> - a  space (I'm including this as a separate part because it isn't captured)</li>\n<li><code>/(?&lt;obj&gt;.+)$/</code> - the named capture group <code>obj</code>, which matches any one or more characters until the end of the string</li>\n</ul>\n<p>I've only skimmed this post because there's so much of it. But do you really want to limit the npc name to 2 letters?</p>\n<p>I suspect you want something more like:</p>\n<pre><code>/^give(?!.*\\bto\\b) (?&lt;npc&gt;\\w+?) (?&lt;obj&gt;.+)$/i\n</code></pre>\n<p>which is slightly slower, and still forces the NPC name to be a single word, but allows it to be longer than 2 letters.</p>\n<p>If you want the NPC name and the object to both have spaces in, you need a lexer rather than a pattern engine. (as in, you need to interpret the line in the context of the available objects). You'd probably want to match everything as a single string and then interpret it later.</p>\n<p>An algorithm for this could be (pseudocode):</p>\n<ul>\n<li>objects = new Array()</li>\n<li>npcpos = 0</li>\n<li>words = args.split (/\\s+|\\b/)</li>\n<li>while (words) {\n<ul>\n<li>while (current_word.match(/^(?:and|or|\\W+)$/))\n<ul>\n<li>current_word = words.shift</li>\n</ul>\n</li>\n<li>if (current_word == \"to\") {\n<ul>\n<li>current_word = words.shift</li>\n<li>npcpos = objects.length</li>\n</ul>\n</li>\n<li>}</li>\n<li>current_word = words.shift</li>\n<li>matched_objects = all objects in scope whose names include current_word</li>\n<li>while (words &amp;&amp; any of matched_objects contains words[0] in its name &amp;&amp; !current_word.match(/,$/)) {\n<ul>\n<li>current_word = words.shift</li>\n<li>remove from matched_objects any whose name doesn't include current_word</li>\n</ul>\n</li>\n<li>}</li>\n<li>if (matched_objects.length == 1)\n<ul>\n<li>objects.push( matched_objects[0] )</li>\n</ul>\n</li>\n<li>else\n<ul>\n<li>disambiguation time! no idea how this is handled</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>}</li>\n<li>npc = objects.splice(npcpos, 1).shift</li>\n</ul>\n<p>It basically parses a list of objects where the comma and/or \"and\" between objects is optional; by checking each word to see if it could be part of the name of the previous object, and assuming a new object otherwise. Then assume the first object is the NPC. Making a regex do this would require the regex to be modified based on the objects in scope, and would be horrific.</p>\n<p>(EDIT2: fixed the random parser pseudocode so that it works for constructs and errors like \"give statue to barry\", \"give ralph cheese and pickles\", \"give john smith bell book and candle\", \"give ham,eggs,key to cellar, and biscuits to mike\", and \"give dave the key to the cellar\")</p>\n\n",
      "PostDate": "2020-12-07T15:44:25.600894Z",
      "LastEditDate": "2020-12-07T18:23:09.2706402Z",
      "link": null
    },
    {
      "PostId": "be7cd9cd-5f16-441a-8d42-0bf29c50eefa",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">It is a debugging command, so only present if:\r\n```\r\nsettings.playMode = 'dev'\r\n```\r\n\r\nI have it set that way.  I still can't get it to work.\r\n\r\n<details><summary>SCREENSHOTS \\<---</summary>\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/101377828-f48bd300-3877-11eb-9f9c-a9c504334726.png)](https://user-images.githubusercontent.com/30656341/101377828-f48bd300-3877-11eb-9f9c-a9c504334726.png)\r\n\r\n</details>\r\n\r\n---\r\nI'll try it in a new game (with none of my added code) later today.\r\n\r\n\r\n<div style=\"padding:12px;border:1px solid black;background-color:silver\">\r\n<b style=\"color:red\"><center><u style=\"font-size:125%;background-color:red;color:white;padding:1px;\">[UPDATE]</u></center><hr>  In my settings.js file, <code style=\"color:blue\">settings.playMode</code> was set to <code style=\"color:blue\">'play'</code> on one of the first few lines.  I had other code in <code style=\"color:blue\">settings.setup</code> which called a function which sometimes set <code style=\"color:blue\">settings.playMode</code> to <code style=\"color:blue\">'dev'</code>, but this was after the code already set it to <code style=\"color:blue\">'play'</code>.  I'm assuming the initial setting is what decides whether or not the PARSER command will exist in the <code style=\"color:blue\">commands</code> array. </b></div>\r\n\r\n---\r\n---\r\n> I've only skimmed this post because there's so much of it. But do you really want to limit the npc name to 2 letters?\r\n\r\nHa!  No.  That has to be most of my problem, too.\r\n\r\nI'll read your post in full and try your code out later today.\r\n\r\nThanks, everyone!",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>It is a debugging command, so only present if:</p>\n</blockquote>\n<pre><code>settings.playMode = 'dev'\n</code></pre>\n<p>I have it set that way.  I still can't get it to work.</p>\n<details><summary>SCREENSHOTS \\&lt;---</summary>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/101377828-f48bd300-3877-11eb-9f9c-a9c504334726.png\"><img src=\"https://user-images.githubusercontent.com/30656341/101377828-f48bd300-3877-11eb-9f9c-a9c504334726.png\" alt=\"image\"></a></p>\n</details>\n<hr>\n<p>I'll try it in a new game (with none of my added code) later today.</p>\n<div style=\"padding: 12px; border: 1px solid black; background-color: silver\">\n<b style=\"color: red\"><center><u style=\"font-size: 125%; background-color: red; color: white; padding: 1px\">[UPDATE]</u></center><hr>  In my settings.js file, <code style=\"color: blue\">settings.playMode</code> was set to <code style=\"color: blue\">'play'</code> on one of the first few lines.  I had other code in <code style=\"color: blue\">settings.setup</code> which called a function which sometimes set <code style=\"color: blue\">settings.playMode</code> to <code style=\"color: blue\">'dev'</code>, but this was after the code already set it to <code style=\"color: blue\">'play'</code>.  I'm assuming the initial setting is what decides whether or not the PARSER command will exist in the <code style=\"color: blue\">commands</code> array. </b></div>\n<hr>\n<hr>\n<blockquote>\n<p>I've only skimmed this post because there's so much of it. But do you really want to limit the npc name to 2 letters?</p>\n</blockquote>\n<p>Ha!  No.  That has to be most of my problem, too.</p>\n<p>I'll read your post in full and try your code out later today.</p>\n<p>Thanks, everyone!</p>\n\n",
      "PostDate": "2020-12-07T16:38:48.4765692Z",
      "LastEditDate": "2020-12-08T18:29:44.6981909Z",
      "link": null
    },
    {
      "PostId": "2d20c89c-cbec-40ca-ab76-78d6308c3cb2",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Looking at the pseudocode again, it might be worth adding a line at the end of the outermost while loop:\r\n```\r\nif (current_word.match(/^(?:and|to)\\W*$/i)) {words.unshift(current_word);}\r\n```\r\nfor the edge case where you have an object named \"key to cellar\" and the player types \"give key to dave\".\r\nThis would mean that it doesn't accept \"key to\" as a shortened form of \"key to cellar\"; it matches \"key\" and uses the \"to\" to indicate which object is the NPC",
      "EditableFormat": "markdown",
      "HTML": "<p>Looking at the pseudocode again, it might be worth adding a line at the end of the outermost while loop:</p>\n<pre><code>if (current_word.match(/^(?:and|to)\\W*$/i)) {words.unshift(current_word);}\n</code></pre>\n<p>for the edge case where you have an object named \"key to cellar\" and the player types \"give key to dave\".<br>\nThis would mean that it doesn't accept \"key to\" as a shortened form of \"key to cellar\"; it matches \"key\" and uses the \"to\" to indicate which object is the NPC</p>\n\n",
      "PostDate": "2020-12-07T17:20:56.4959448Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1e6311d2-8c15-4c88-afce-7313e231ef89",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(depending on the function you use for \"does this object's name contain this word\", the algorithm could easily be changed to allow, for example, the player entering the words of an object name in the wrong order (treating \"book about snails\" and \"snail book\" as equivalent); or to handle pronouns, articles, and other weirdnesses)\r\n\r\nI'm pretty sure some variant of this could be included as a parser function, for cases where the arguments to a command could be treated as a list of objects; from which the first and/or last might be treated as a separate argument, allowing for both commas, words like \"and\", prepositions which indicate the variable of the following word (\"to\", \"in\", \"with\"), and *work correctly with object names that contain those words*.\r\nWorking out a data structure so that commands can indicate what parameters/prepositions they understand would be time consuming, but I think that it would be worthwhile, if only because plain regexes can't tell if words like \"to\" or \"and\" are part of an object name or not.\r\n\r\nHeck, using this for a \"put\" command might mean that commands like:\r\n==> give letter to gordon to man who is eager to punch someone\r\ncan be parsed correctly :p",
      "EditableFormat": "markdown",
      "HTML": "<p>(depending on the function you use for \"does this object's name contain this word\", the algorithm could easily be changed to allow, for example, the player entering the words of an object name in the wrong order (treating \"book about snails\" and \"snail book\" as equivalent); or to handle pronouns, articles, and other weirdnesses)</p>\n<p>I'm pretty sure some variant of this could be included as a parser function, for cases where the arguments to a command could be treated as a list of objects; from which the first and/or last might be treated as a separate argument, allowing for both commas, words like \"and\", prepositions which indicate the variable of the following word (\"to\", \"in\", \"with\"), and <em>work correctly with object names that contain those words</em>.<br>\nWorking out a data structure so that commands can indicate what parameters/prepositions they understand would be time consuming, but I think that it would be worthwhile, if only because plain regexes can't tell if words like \"to\" or \"and\" are part of an object name or not.</p>\n<p>Heck, using this for a \"put\" command might mean that commands like:<br>\n==&gt; give letter to gordon to man who is eager to punch someone<br>\ncan be parsed correctly :p</p>\n\n",
      "PostDate": "2020-12-07T18:18:53.7155504Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6b742869-3bac-48a6-b9b9-59b6d740407a",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have to look at mrangel's code later.  I'm sure it parses better then mine.  For now, all I'm using of his is the regex, and it works well with my current code.\r\n\r\nHere's what I've got now, and everything seems to work:\r\n\r\n<details id='det1'><summary style=\"font-weight:bold\">[ <code>GiveNpcStuff</code> command ]</summary>\r\n\r\n```js\r\ncommands.push(new Cmd('GiveNpcStuff', {\r\n\tregex:/^give(?!.*\\bto\\b) (?<npc>\\w+?) (?<obj>.+)$/i ,\r\n\trules:[cmdRules.canManipulate, cmdRules.isHeld],\r\n    objects:[\r\n      {scope:parser.isPresent, attName: \"npc\"},  //This one has to go first, or it throws the multiple error.  I don't really know why.\r\n      {scope:parser.isHeld, multiple:true},\r\n    ],\r\n    defmsg:(char,item)=>{return \"Char: \"+char+\" / item: \"+item},\r\n\tscript: function(objects) {\r\n\t\treturn handleGiveNpcStuff(objects)\r\n\t},\r\n\tdefault:function(item, isMultiple, char) { \r\n\t\tif (typeof this.defmsg === \"string\") {\r\n\t\t\tfailedmsg(prefix(item, isMultiple) + this.defmsg, {char:char, item:item});\r\n\t\t}\r\n\t\telse if (typeof this.defmsg === \"function\") {\r\n\t\t\tfailedmsg(prefix(item, isMultiple) + this.defmsg(char, item), {char:char, item:item});\r\n\t\t}\r\n\t\telse {\r\n\t\t\terrormsg(\"No default set for command '\" + this.name + \"'.\");\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n}))\r\n```\r\n\r\n</details>\r\n\r\n\r\n<details><summary style=\"font-weight:bold\">[ <code>handleGiveNpcStuff</code> function ]</summary>\r\n\r\n```js\r\nfunction handleGiveNpcStuff(objects){\r\n\t  //parser.debug = true\r\n      if(parser.debug){\r\n\t\t   alert(\"RUNNING GiveNpcStuff function!\")\r\n\t\t   console.log(\"Running GiveNpcSomething_RH function.\")\r\n\t  }\r\n\t  var objArr = []\r\n      findCmd(\"GiveNpcStuff\").regexes.forEach(rgx => {\r\n\t\t  if (rgx.exec(parser.currentCommand.cmdString)) {\r\n\t\t\t  objArr = rgx.exec(parser.currentCommand.cmdString)\r\n\t\t  }\r\n\t  })\r\n\t  var npc = objArr.groups.npc\r\n\t  if (parser.debug) {console.log(\"npc\");console.log(npc)}\r\n\t  var obj = objArr.groups.obj\r\n\t  if (parser.debug) {console.log(\"obj\");console.log(obj)}\r\n\t  var isAll = false;\r\n\t  var newObj1Arr = []\r\n\t  var mult = false\r\n\t  var multObjs\r\n\t  if (obj == \"all\") {\r\n\t\t  isAll = true;\r\n\t\t  if(parser.debug){console.log(\"Attempting ALL\")}\r\n\t\t  obj = scopeHeldBy(game.player)\r\n\t\t  if(parser.debug){console.log(\"Changing obj to game.player.getContents() . . . :\");console.log(obj)}\r\n\t  }else{\r\n\t\t  //console.log(\"Not ALL\")\r\n\t\t  if (obj.includes(',')||obj.includes(' and ')){\r\n\t\t\t  mult = true\r\n\t\t\t  if(parser.debug){console.log(\"I'm running!\")}\r\n\t\t\t  //console.log(obj)\r\n\t\t\t  multObjs = obj.replace(/\\, and /g, '|').replace(/\\, /g, '|').replace(/ and /g, '|').trim().split('|')\r\n\t\t\t  //console.log(multObjs)\r\n\t\t\t  multObjs.forEach((o,i) => {\r\n\t\t\t\t  multObjs[i] = o.trim()\r\n\t\t\t  })\r\n\t\t\t  if(parser.debug){console.log(`multObjs`);console.log(multObjs)}\r\n\t\t  }\r\n\t\t  if(mult && multObjs.length>1) {\r\n\t\t\t  multObjs.forEach(o => {\r\n\t\t\t\t  o = o.trim()\r\n\t\t\t\t  if(parser.debug){console.log(\"Finding: \"+o)}\r\n\t\t\t\t  var fnd = findObjByParser(o)\r\n\t\t\t\t  if(parser.debug){console.log(fnd)}\r\n\t\t\t\t  newObj1Arr.push(fnd)\r\n\t\t\t  })\r\n\t\t\t  obj = newObj1Arr\r\n\t\t  }\r\n\t  }\t\r\n\t  if(parser.debug){console.log(\"mult?\");console.log(mult);console.log(\"npc\");console.log(npc);console.log(\"objArr\");console.log(objArr)}\r\n\t  objects[1][0] = findObjByParser(npc) //This should be the npc\r\n      if (!isAll && !mult) {\r\n\t\t  objects[0] = [findObjByParser(obj)] //This should be the item given\r\n\t  }else{\r\n\t\t  objects[0] = obj  //The items given have already been put into this list\r\n\t  }\r\n      if(parser.debug){console.log('objects[1][0] (the npc)');console.log(objects[1][0]);console.log('objects[0][0] (the item(s) given)');console.log(objects[0][0])}\r\n      return handleGiveToNpc(game.player, objects);\t\r\n}\r\n```\r\n</details>\r\n\r\n<details><summary style=\"font-weight:bold\">[ <code>findObjByParser</code> function ]</summary>\r\n\r\n```js\r\nfunction findObjByParser(s){\r\n\tif(parser.debug) {\r\n\t\tconsole.log(\"Running findObjByParser\")\r\n\t\tconsole.log(\"DATA: \"+s)\r\n\t}\r\n\ts = lang.article_filter_regex.exec(s)[1]\r\n\tif(parser.debug){console.log(\"After article filter regexp exec:\");console.log(s);}\r\n\tvar scr = parser.findInList(s,allObjects(),{})\r\n\tif(parser.debug){console.log(\"scr: \");console.log(scr)}\r\n\tif (scr.length>1) {\r\n\t\tif(parser.debug){console.log(\"scr.length is > 1!\");console.log(scr)}\r\n\t\tscr = findObjByParser(s,scr)\r\n\t}\r\n\tscr = scr[0]\r\n\tif(parser.debug) console.log(scr)\r\n\treturn scr\r\n}\r\n\r\n```\r\n\r\n</details>\r\n\r\n---\r\nTRANSCRIPT\r\n\r\n<details><summary style=\"font-weight:bold\">[ TRANSCRIPT TEXT]</summary>\r\n\r\n```\r\nYou can go up.\r\n\r\n> give rp all\r\n\r\nCigarette: Done.\r\n\r\nPurple lighter: Done.\r\n\r\nMask: Done.\r\n\r\n> undo\r\n\r\nUndoing...\r\nThe cellar\r\n\r\nThe cellar is small, dimly lit, and dingy.\r\n\r\nYou can see Ralph and a TV here.\r\n\r\nYou can go up.\r\n\r\n> give all to rp\r\n\r\nCigarette: Done.\r\n\r\nPurple lighter: Done.\r\n\r\nMask: Done.\r\n\r\n> undo\r\n\r\nUndoing...\r\nThe cellar\r\n\r\nThe cellar is small, dimly lit, and dingy.\r\n\r\nYou can see Ralph and a TV here.\r\n\r\nYou can go up.\r\n\r\n> give mask, cig, and light to rp\r\n\r\nMask: Done.\r\n\r\nCigarette: Done.\r\n\r\nPurple lighter: Done.\r\n\r\n> undo\r\n\r\nUndoing...\r\nThe cellar\r\n\r\nThe cellar is small, dimly lit, and dingy.\r\n\r\nYou can see Ralph and a TV here.\r\n\r\nYou can go up.\r\n\r\n> give ralph mask, cig, and light\r\n\r\nMask: Done.\r\n\r\nCigarette: Done.\r\n\r\nPurple lighter: Done.\r\n\r\n> undo\r\n\r\nUndoing...\r\nThe cellar\r\n\r\nThe cellar is small, dimly lit, and dingy.\r\n\r\nYou can see Ralph and a TV here.\r\n\r\nYou can go up.\r\n\r\n> give all to ralph\r\n\r\nCigarette: Done.\r\n\r\nPurple lighter: Done.\r\n\r\nMask: Done.\r\n>\r\n\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>I have to look at mrangel's code later.  I'm sure it parses better then mine.  For now, all I'm using of his is the regex, and it works well with my current code.</p>\n<p>Here's what I've got now, and everything seems to work:</p>\n<details><summary style=\"font-weight: bold\">[ <code>GiveNpcStuff</code> command ]</summary>\n<pre><code>commands.push(new Cmd('GiveNpcStuff', {\n\tregex:/^give(?!.*\\bto\\b) (?&lt;npc&gt;\\w+?) (?&lt;obj&gt;.+)$/i ,\n\trules:[cmdRules.canManipulate, cmdRules.isHeld],\n    objects:[\n      {scope:parser.isPresent, attName: \"npc\"},  //This one has to go first, or it throws the multiple error.  I don't really know why.\n      {scope:parser.isHeld, multiple:true},\n    ],\n    defmsg:(char,item)=&gt;{return \"Char: \"+char+\" / item: \"+item},\n\tscript: function(objects) {\n\t\treturn handleGiveNpcStuff(objects)\n\t},\n\tdefault:function(item, isMultiple, char) { \n\t\tif (typeof this.defmsg === \"string\") {\n\t\t\tfailedmsg(prefix(item, isMultiple) + this.defmsg, {char:char, item:item});\n\t\t}\n\t\telse if (typeof this.defmsg === \"function\") {\n\t\t\tfailedmsg(prefix(item, isMultiple) + this.defmsg(char, item), {char:char, item:item});\n\t\t}\n\t\telse {\n\t\t\terrormsg(\"No default set for command '\" + this.name + \"'.\");\n\t\t}\n\t\treturn false;\n\t},\n}))\n</code></pre>\n</details>\n<details><summary style=\"font-weight: bold\">[ <code>handleGiveNpcStuff</code> function ]</summary>\n<pre><code>function handleGiveNpcStuff(objects){\n\t  //parser.debug = true\n      if(parser.debug){\n\t\t   alert(\"RUNNING GiveNpcStuff function!\")\n\t\t   console.log(\"Running GiveNpcSomething_RH function.\")\n\t  }\n\t  var objArr = []\n      findCmd(\"GiveNpcStuff\").regexes.forEach(rgx =&gt; {\n\t\t  if (rgx.exec(parser.currentCommand.cmdString)) {\n\t\t\t  objArr = rgx.exec(parser.currentCommand.cmdString)\n\t\t  }\n\t  })\n\t  var npc = objArr.groups.npc\n\t  if (parser.debug) {console.log(\"npc\");console.log(npc)}\n\t  var obj = objArr.groups.obj\n\t  if (parser.debug) {console.log(\"obj\");console.log(obj)}\n\t  var isAll = false;\n\t  var newObj1Arr = []\n\t  var mult = false\n\t  var multObjs\n\t  if (obj == \"all\") {\n\t\t  isAll = true;\n\t\t  if(parser.debug){console.log(\"Attempting ALL\")}\n\t\t  obj = scopeHeldBy(game.player)\n\t\t  if(parser.debug){console.log(\"Changing obj to game.player.getContents() . . . :\");console.log(obj)}\n\t  }else{\n\t\t  //console.log(\"Not ALL\")\n\t\t  if (obj.includes(',')||obj.includes(' and ')){\n\t\t\t  mult = true\n\t\t\t  if(parser.debug){console.log(\"I'm running!\")}\n\t\t\t  //console.log(obj)\n\t\t\t  multObjs = obj.replace(/\\, and /g, '|').replace(/\\, /g, '|').replace(/ and /g, '|').trim().split('|')\n\t\t\t  //console.log(multObjs)\n\t\t\t  multObjs.forEach((o,i) =&gt; {\n\t\t\t\t  multObjs[i] = o.trim()\n\t\t\t  })\n\t\t\t  if(parser.debug){console.log(`multObjs`);console.log(multObjs)}\n\t\t  }\n\t\t  if(mult &amp;&amp; multObjs.length&gt;1) {\n\t\t\t  multObjs.forEach(o =&gt; {\n\t\t\t\t  o = o.trim()\n\t\t\t\t  if(parser.debug){console.log(\"Finding: \"+o)}\n\t\t\t\t  var fnd = findObjByParser(o)\n\t\t\t\t  if(parser.debug){console.log(fnd)}\n\t\t\t\t  newObj1Arr.push(fnd)\n\t\t\t  })\n\t\t\t  obj = newObj1Arr\n\t\t  }\n\t  }\t\n\t  if(parser.debug){console.log(\"mult?\");console.log(mult);console.log(\"npc\");console.log(npc);console.log(\"objArr\");console.log(objArr)}\n\t  objects[1][0] = findObjByParser(npc) //This should be the npc\n      if (!isAll &amp;&amp; !mult) {\n\t\t  objects[0] = [findObjByParser(obj)] //This should be the item given\n\t  }else{\n\t\t  objects[0] = obj  //The items given have already been put into this list\n\t  }\n      if(parser.debug){console.log('objects[1][0] (the npc)');console.log(objects[1][0]);console.log('objects[0][0] (the item(s) given)');console.log(objects[0][0])}\n      return handleGiveToNpc(game.player, objects);\t\n}\n</code></pre>\n</details>\n<details><summary style=\"font-weight: bold\">[ <code>findObjByParser</code> function ]</summary>\n<pre><code>function findObjByParser(s){\n\tif(parser.debug) {\n\t\tconsole.log(\"Running findObjByParser\")\n\t\tconsole.log(\"DATA: \"+s)\n\t}\n\ts = lang.article_filter_regex.exec(s)[1]\n\tif(parser.debug){console.log(\"After article filter regexp exec:\");console.log(s);}\n\tvar scr = parser.findInList(s,allObjects(),{})\n\tif(parser.debug){console.log(\"scr: \");console.log(scr)}\n\tif (scr.length&gt;1) {\n\t\tif(parser.debug){console.log(\"scr.length is &gt; 1!\");console.log(scr)}\n\t\tscr = findObjByParser(s,scr)\n\t}\n\tscr = scr[0]\n\tif(parser.debug) console.log(scr)\n\treturn scr\n}\n\n</code></pre>\n</details>\n<hr>\n<p>TRANSCRIPT</p>\n<details><summary style=\"font-weight: bold\">[ TRANSCRIPT TEXT]</summary>\n<pre><code>You can go up.\n\n&gt; give rp all\n\nCigarette: Done.\n\nPurple lighter: Done.\n\nMask: Done.\n\n&gt; undo\n\nUndoing...\nThe cellar\n\nThe cellar is small, dimly lit, and dingy.\n\nYou can see Ralph and a TV here.\n\nYou can go up.\n\n&gt; give all to rp\n\nCigarette: Done.\n\nPurple lighter: Done.\n\nMask: Done.\n\n&gt; undo\n\nUndoing...\nThe cellar\n\nThe cellar is small, dimly lit, and dingy.\n\nYou can see Ralph and a TV here.\n\nYou can go up.\n\n&gt; give mask, cig, and light to rp\n\nMask: Done.\n\nCigarette: Done.\n\nPurple lighter: Done.\n\n&gt; undo\n\nUndoing...\nThe cellar\n\nThe cellar is small, dimly lit, and dingy.\n\nYou can see Ralph and a TV here.\n\nYou can go up.\n\n&gt; give ralph mask, cig, and light\n\nMask: Done.\n\nCigarette: Done.\n\nPurple lighter: Done.\n\n&gt; undo\n\nUndoing...\nThe cellar\n\nThe cellar is small, dimly lit, and dingy.\n\nYou can see Ralph and a TV here.\n\nYou can go up.\n\n&gt; give all to ralph\n\nCigarette: Done.\n\nPurple lighter: Done.\n\nMask: Done.\n&gt;\n\n</code></pre>\n</details>\n\n",
      "PostDate": "2020-12-07T21:27:30.1151648Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "08f31b4f-9efe-48a9-b079-575b32fbc3cc",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here is a link to this \"test\" game's title page, if anyone feels like trying to break something:  \r\n\r\n\r\n[Quest 6 Game 1](http://media.textadventures.co.uk/games/R-PODbpzSk_rxIcdAq1RQA/index.html \"Play Quest 6 Game 1 at 'http://media.textadventures.co.uk/games/R-PODbpzSk_rxIcdAq1RQA/index.html'\")",
      "EditableFormat": "markdown",
      "HTML": "<p>Here is a link to this \"test\" game's title page, if anyone feels like trying to break something:</p>\n<p><a href=\"http://media.textadventures.co.uk/games/R-PODbpzSk_rxIcdAq1RQA/index.html\" title=\"Play Quest 6 Game 1 at 'http://media.textadventures.co.uk/games/R-PODbpzSk_rxIcdAq1RQA/index.html'\">Quest 6 Game 1</a></p>\n\n",
      "PostDate": "2020-12-07T22:26:06.8246647Z",
      "LastEditDate": "2020-12-08T01:18:09.6101103Z",
      "link": null
    },
    {
      "PostId": "f832c35b-fdfb-453e-9b9e-47caedcecc45",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "PS\r\n\r\nIf anyone gives this a play, you could also test this out (just for kicks):\r\n\r\n- Turn on the TV in the first room. (If on a mobile browser, I believe you have to start the video manually, as autoplay usually won't work with the volume on.)\r\n\r\n- Leave it on and go UP.  (The YouTube video should disappear and the volume should lower, as if the TV were a room away.)\r\n\r\n- Go UP once more and the TV's sound should disappear.\r\n\r\n- Go back DOWN, and the muffled sound should return.\r\n\r\n- Going DOWN once more brings you back to the first room, and the video should pop back up on full volume.",
      "EditableFormat": "markdown",
      "HTML": "<p>PS</p>\n<p>If anyone gives this a play, you could also test this out (just for kicks):</p>\n<ul>\n<li>\n<p>Turn on the TV in the first room. (If on a mobile browser, I believe you have to start the video manually, as autoplay usually won't work with the volume on.)</p>\n</li>\n<li>\n<p>Leave it on and go UP.  (The YouTube video should disappear and the volume should lower, as if the TV were a room away.)</p>\n</li>\n<li>\n<p>Go UP once more and the TV's sound should disappear.</p>\n</li>\n<li>\n<p>Go back DOWN, and the muffled sound should return.</p>\n</li>\n<li>\n<p>Going DOWN once more brings you back to the first room, and the video should pop back up on full volume.</p>\n</li>\n</ul>\n\n",
      "PostDate": "2020-12-07T22:32:38.3156755Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f6ef2780-ff2e-4084-a7ae-2dfb07505866",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "### UPDATE\r\n\r\nThe PARSER command works.  I had some invalid code.\r\n\r\nSorry, Pixie, if I made you waste time on that.",
      "EditableFormat": "markdown",
      "HTML": "<h3>UPDATE</h3>\n<p>The PARSER command works.  I had some invalid code.</p>\n<p>Sorry, Pixie, if I made you waste time on that.</p>\n\n",
      "PostDate": "2020-12-08T00:41:57.2245673Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4da8ef59-f3e2-4e5a-bde2-4e242f4f18f5",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That is really cool.\r\n\r\nCould you write up how you did the video in a form that can be added to the documentation? It is something that has been on the list of outstanding features for over year.\r\n\r\nI would also be interested how you did the landing page.",
      "EditableFormat": "markdown",
      "HTML": "<p>That is really cool.</p>\n<p>Could you write up how you did the video in a form that can be added to the documentation? It is something that has been on the list of outstanding features for over year.</p>\n<p>I would also be interested how you did the landing page.</p>\n\n",
      "PostDate": "2020-12-08T07:36:02.9339182Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "adfd7229-e801-4683-a903-db859238cfe2",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I would also be interested how you did the landing page.\r\n\r\nI just created a landing page ('index.html') and added it to my main directory.\r\n\r\n\r\n<details><summary><a>index.html</a></summary>\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n\t<head>\r\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\r\n\t\t<meta charset=\"UTF-8\">\r\n\t\t<title>Quest 6 Adventure 1  by Richard Headkid</title>\r\n\t\t<style >\r\n\t\t\tbody{\r\n\t\t\t\tbackground-color:lightgoldenrodyellow;\r\n\t\t\t\tfont-family: courier, monospace;\r\n\t\t\t\tfont-weight:bold;\r\n\t\t\t\tline-height:16px;\r\n\t\t\t\tfont-size:16px;\r\n\t\t\t}\r\n\t\t\t#game-desc{\r\n\t\t\t\tmargin-right:15%;\r\n\t\t\t\tmargin-left:15%;\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\ttext-justify: inter-word;\r\n\t\t\t\tborder:5px solid black;\r\n\t\t\t\tbackground-color:silver;\r\n\t\t\t\tpadding:12px;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbutton {\r\n\t\t\t    background-color: Green;\r\n\t\t\t    border: 2px solid black;\r\n\t\t\t    color: white;\r\n\t\t\t    padding: 15px 32px;\r\n\t\t\t    text-align: center;\r\n\t\t\t    text-decoration: none;\r\n\t\t\t    display: inline-block;\r\n\t\t\t    font-size: 22px;\r\n\t\t\t  \tfont-family: courier, cursive;\r\n\t\t\t  \tfont-weight:bold;\r\n\t\t\t  \twidth: 34%;\r\n\t\t\t}\r\n\t\t\tbutton:hover {\r\n\t\t\t  background-color: blue;\r\n\t\t\t  color: white;\r\n\t\t\t  border: 2px solid green;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbuttonalt {\r\n\t\t\t    background-color: green;\r\n\t\t\t    border: 2px solid black;\r\n\t\t\t    color: silver;\r\n\t\t\t    padding: 15px 32px;\r\n\t\t\t    text-align: center;\r\n\t\t\t    text-decoration: none;\r\n\t\t\t    display: inline-block;\r\n\t\t\t    font-size: 14px;\r\n\t\t\t  \tfont-family: 'Rye', cursive;\r\n\t\t\t  \twidth: 33%;\r\n\t\t\t}\r\n\t\t\tbuttonalt:hover {\r\n\t\t\t  background-color: white;\r\n\t\t\t  color: green;\r\n\t\t\t  border: 2px solid saddlebrown;\r\n\t\t\t}\r\n\t\t\r\n\t\t</style>\r\n\t\t\r\n\t\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n\t\t<link rel=\"stylesheet\" href=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css\">\r\n\t\t<script src=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js\"></script>\r\n\t\t\r\n\t\t\r\n\t</head>\r\n\t\r\n\t<body>\r\n\t\t\r\n\t\t<center id=\"thetopofthepage\">\r\n\t\t\t<!--<audio controls loop autoplay controlsList=\"nodownload\">\r\n\t\t\t\t<source src=\"\" type=\"audio/ogg\">\r\n\t\t\t\tYour browser does not support the audio element.\r\n\t\t\t</audio>-->\r\n\t\t</center>\r\n\t\t<!--<br /><br />\r\n\t\t<img src=\"\" id=\"base64image\" style=\"width:100%;\"><br /><br />-->\r\n\t\t<center><h1>Quest 6 Adventure 1</h1><h3>by Richard Headkid</h3></center>\r\n\t\t<hr>\r\n\t\t<center><u><p id='game-desc-div'>\r\n\t\t<big><b>GAME DESCRIPTION</b></big></u><br/>\r\n\t\t<p id='game-desc'></p> \r\n\t\t\r\n\t\t</p></center>\r\n\t\t<hr>\t\t\r\n\t\t<center><div class=\"button\">\r\n\t\t  <button onclick=\"location.href='page.html'\">Play Now!</button>\r\n\t\t  <!--<button onclick=\"location.href='src/hints.html'\" target=\"_blank\">Hints & Clues</button>-->\r\n\t\t</div></center>\r\n\t\t<center><div class=\"button\">\r\n\t\t  <button onclick=\"location.href='quest6game1.zip'\">Download the website (zip file)</button>\r\n\t\t</div></center>\r\n\t\t<hr />\r\n\t\t<center>Comments or suggestions?</center><br />\r\n\t\t<center>Please contact me at:<br /> <small><a href=\"http://textadventures.co.uk/user/view/gudejtsx9komagj-tffyfg/richard-headkid\" target=\"_blank\">RICHARD HEADKID @ TextAdventures </a></small></center>\r\n\t\t<hr /><center><br /><br />\r\n\t\t<p style=\"font-family: courier, monospace;font-weight:bold;color:black;line-height:18px; font-size:16px;\" id=\"demo\" onclick=\"myFunction()\"><big><b><u><big>CREDITS</big></u></b></big></p>\r\n\t\t\r\n\t\t</center>\r\n\t\t<script>\r\n\t\tvar desc = \"In this small text adventure, you and your trusty sidekick, Ralph, \"+\r\n\t\t    \"need to look around and interact with things (and XanMag) until you figure out what to do.\"+\r\n\t\t    \"<br/><br/>It's pretty straightforward.  It's really just to test out the new version of Quest.\"+\r\n\t\t    \"<br/><br/><center>(Click on CREDITS at the bottom of this page for more info!)</center>\";\r\n\t\t    \r\n\t\t$(\"#game-desc\").html(desc);\r\n\t\t    \r\n\t\t    \r\n\t\tfunction myFunction() {\r\n\t\t\tvar s = \"<big><b>CREDITS</b></big><br /><br />\"+\r\n\t\t\t\"The main game was created with <a href='https://github.com/ThePix/QuestJS/wiki' target='_blank'>\"+\r\n\t\t\t\"Quest 6 AKA QuestJS</a>.\"+\r\n\t\t\t//\"<br /><br />The HINTS & CLUES menu was \"+\r\n\t\t\t//\"created with <a href='https://twinery.org' target='_blank'>Twine</a>.\"+\r\n\t\t\t\"<br />I learned how to code this \"+\r\n\t\t\t\"page by studying up at <a href='https://www.w3schools.com' target='_blank'>www.w3schools.com</a>.\"+\r\n\t\t\t\"<br /><br/>\"+\r\n\t\t\t\"Don't forget those who make these games available to the public AT NO CHARGE:<br />\"+\r\n\t\t\t\"<a href='http://textadventures.co.uk/' target='_blank'>TEXTADVENTURES.CO.UK</a><br />\"+\r\n\t\t\t\"<a href='http://ifdb.tads.org/' target='_blank'>IFDB</a><br />\"+\r\n\t\t\t\"<a href='http://ifarchive.org/' target='_blank'>IFArchive</a><br /><br />\"+\r\n\t\t\t\"This game is a work of fiction.<br />Any names, characters, businesses, places, events,\"+\r\n\t\t\t\" incidents, products, spells, weapons, talking animals, magikal things, and non-magikal things\"+\r\n\t\t\t\" are purely fictitious. Any resemblance to actual persons, living or dead, or actual businesses,\"+\r\n\t\t\t\" places, events, incidents, products, spells, weapons, talking animals, magikal things, or non-magikal\"+\r\n\t\t\t\" things is purely coincidental.<br /><br />Ralph the penguin was created by an author friend of mine,\"+\r\n\t\t\t\" and appears in this game with his consent.<br /><br />\"+\r\n\t\t\t\"<strong>SPECIAL THANKS TO:</strong><br /><br />LUKE A. JONES, ANDREW PLOTKIN (AND ASSOCIATES),\"+\r\n\t\t\t\" EMILY SHORT (AND ASSOCIATES), THE PIXIE, MRANGEL, XANMAG, AND EVERYONE AT TEXTADVENTURES.CO.UK \"+\r\n\t\t\t\"(EXTRA SPECIAL THANKS TO LUIS FELIPE MORALES), CHRIS KLIMAS (AND ASSOCIATES), \"+\r\n\t\t\t\"STEVE MERETZKY (AND ASSOCIATES, AND EVERYONE WHO EVER WORKED FOR INFOCOM), EVERYONE AT IFDB, \"+\r\n\t\t\t\"EVERYONE AT IFARCHIVE (EXTRA SPECIAL THANKS TO DOUG),<br /><br />\"+\r\n\t\t\t\"<big>AND AN ESPECIALLY BIG THANKS TO: PLAYERS LIKE YOU!</big></p>\"+\r\n\t\t\t\"<a href='#thetopofthepage'><br />BACK TO TOP</a>\";\r\n\t\t\t\r\n\t\t    $(\"#demo\").html(s);\r\n\t\t    \r\n\t\t    \r\n\t\t}\r\n\t\t</script>\r\n\t</body>\r\n\r\n</html>\r\n\r\n\r\n\r\n```\r\n\r\n</details>\r\n\r\n---\r\n\r\nAs far as I understand it, when we upload a ZIP file as a game, this site has default ways of choosing which page is the \"home\" page.  First, it checks for 'index.html'.  If that doesn't exist, it checks for 'play.html'.  If neither exist, and there is only one HTML file, it just loads that page.  If there are numerous HTML files in the main directory, and none are named \"play\" or \"index\", I have no clue how it works.  (Alphabetical order maybe?)\r\n\r\n---\r\n> That is really cool.\r\n\r\nWell, thank ya'.  Thank ya' very much!\r\n\r\n**EDIT**\r\n\r\nI started a [new thread](http://textadventures.co.uk/forum/questkit/topic/vqas_xivue_l3jugeo7t5a/quest-6-adding-youtube-api \"http://textadventures.co.uk/forum/questkit/topic/vqas_xivue_l3jugeo7t5a/quest-6-adding-youtube-api\") about YouTube API.\r\n\r\n---\r\n> Could you write up how you did the video in a form that can be added to the documentation?\r\n\r\nCertainly, but I'd better make sure my code doesn't need any updating before I do that.  (It most assuredly does.)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I would also be interested how you did the landing page.</p>\n</blockquote>\n<p>I just created a landing page ('index.html') and added it to my main directory.</p>\n<details><summary><a>index.html</a></summary>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\t&lt;head&gt;\n\t\t&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/&gt;\n\t\t&lt;meta charset=\"UTF-8\"&gt;\n\t\t&lt;title&gt;Quest 6 Adventure 1  by Richard Headkid&lt;/title&gt;\n\t\t&lt;style &gt;\n\t\t\tbody{\n\t\t\t\tbackground-color:lightgoldenrodyellow;\n\t\t\t\tfont-family: courier, monospace;\n\t\t\t\tfont-weight:bold;\n\t\t\t\tline-height:16px;\n\t\t\t\tfont-size:16px;\n\t\t\t}\n\t\t\t#game-desc{\n\t\t\t\tmargin-right:15%;\n\t\t\t\tmargin-left:15%;\n\t\t\t\ttext-align: justify;\n\t\t\t\ttext-justify: inter-word;\n\t\t\t\tborder:5px solid black;\n\t\t\t\tbackground-color:silver;\n\t\t\t\tpadding:12px;\n\t\t\t}\n\t\t\t\n\t\t\tbutton {\n\t\t\t    background-color: Green;\n\t\t\t    border: 2px solid black;\n\t\t\t    color: white;\n\t\t\t    padding: 15px 32px;\n\t\t\t    text-align: center;\n\t\t\t    text-decoration: none;\n\t\t\t    display: inline-block;\n\t\t\t    font-size: 22px;\n\t\t\t  \tfont-family: courier, cursive;\n\t\t\t  \tfont-weight:bold;\n\t\t\t  \twidth: 34%;\n\t\t\t}\n\t\t\tbutton:hover {\n\t\t\t  background-color: blue;\n\t\t\t  color: white;\n\t\t\t  border: 2px solid green;\n\t\t\t}\n\t\t\t\n\t\t\tbuttonalt {\n\t\t\t    background-color: green;\n\t\t\t    border: 2px solid black;\n\t\t\t    color: silver;\n\t\t\t    padding: 15px 32px;\n\t\t\t    text-align: center;\n\t\t\t    text-decoration: none;\n\t\t\t    display: inline-block;\n\t\t\t    font-size: 14px;\n\t\t\t  \tfont-family: 'Rye', cursive;\n\t\t\t  \twidth: 33%;\n\t\t\t}\n\t\t\tbuttonalt:hover {\n\t\t\t  background-color: white;\n\t\t\t  color: green;\n\t\t\t  border: 2px solid saddlebrown;\n\t\t\t}\n\t\t\n\t\t&lt;/style&gt;\n\t\t\n\t\t&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"&gt;&lt;/script&gt;\n\t\t&lt;link rel=\"stylesheet\" href=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css\"&gt;\n\t\t&lt;script src=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js\"&gt;&lt;/script&gt;\n\t\t\n\t\t\n\t&lt;/head&gt;\n\t\n\t&lt;body&gt;\n\t\t\n\t\t&lt;center id=\"thetopofthepage\"&gt;\n\t\t\t&lt;!--&lt;audio controls loop autoplay controlsList=\"nodownload\"&gt;\n\t\t\t\t&lt;source src=\"\" type=\"audio/ogg\"&gt;\n\t\t\t\tYour browser does not support the audio element.\n\t\t\t&lt;/audio&gt;--&gt;\n\t\t&lt;/center&gt;\n\t\t&lt;!--&lt;br /&gt;&lt;br /&gt;\n\t\t&lt;img src=\"\" id=\"base64image\" style=\"width:100%;\"&gt;&lt;br /&gt;&lt;br /&gt;--&gt;\n\t\t&lt;center&gt;&lt;h1&gt;Quest 6 Adventure 1&lt;/h1&gt;&lt;h3&gt;by Richard Headkid&lt;/h3&gt;&lt;/center&gt;\n\t\t&lt;hr&gt;\n\t\t&lt;center&gt;&lt;u&gt;&lt;p id='game-desc-div'&gt;\n\t\t&lt;big&gt;&lt;b&gt;GAME DESCRIPTION&lt;/b&gt;&lt;/big&gt;&lt;/u&gt;&lt;br/&gt;\n\t\t&lt;p id='game-desc'&gt;&lt;/p&gt; \n\t\t\n\t\t&lt;/p&gt;&lt;/center&gt;\n\t\t&lt;hr&gt;\t\t\n\t\t&lt;center&gt;&lt;div class=\"button\"&gt;\n\t\t  &lt;button onclick=\"location.href='page.html'\"&gt;Play Now!&lt;/button&gt;\n\t\t  &lt;!--&lt;button onclick=\"location.href='src/hints.html'\" target=\"_blank\"&gt;Hints &amp; Clues&lt;/button&gt;--&gt;\n\t\t&lt;/div&gt;&lt;/center&gt;\n\t\t&lt;center&gt;&lt;div class=\"button\"&gt;\n\t\t  &lt;button onclick=\"location.href='quest6game1.zip'\"&gt;Download the website (zip file)&lt;/button&gt;\n\t\t&lt;/div&gt;&lt;/center&gt;\n\t\t&lt;hr /&gt;\n\t\t&lt;center&gt;Comments or suggestions?&lt;/center&gt;&lt;br /&gt;\n\t\t&lt;center&gt;Please contact me at:&lt;br /&gt; &lt;small&gt;&lt;a href=\"http://textadventures.co.uk/user/view/gudejtsx9komagj-tffyfg/richard-headkid\" target=\"_blank\"&gt;RICHARD HEADKID @ TextAdventures &lt;/a&gt;&lt;/small&gt;&lt;/center&gt;\n\t\t&lt;hr /&gt;&lt;center&gt;&lt;br /&gt;&lt;br /&gt;\n\t\t&lt;p style=\"font-family: courier, monospace;font-weight:bold;color:black;line-height:18px; font-size:16px;\" id=\"demo\" onclick=\"myFunction()\"&gt;&lt;big&gt;&lt;b&gt;&lt;u&gt;&lt;big&gt;CREDITS&lt;/big&gt;&lt;/u&gt;&lt;/b&gt;&lt;/big&gt;&lt;/p&gt;\n\t\t\n\t\t&lt;/center&gt;\n\t\t&lt;script&gt;\n\t\tvar desc = \"In this small text adventure, you and your trusty sidekick, Ralph, \"+\n\t\t    \"need to look around and interact with things (and XanMag) until you figure out what to do.\"+\n\t\t    \"&lt;br/&gt;&lt;br/&gt;It's pretty straightforward.  It's really just to test out the new version of Quest.\"+\n\t\t    \"&lt;br/&gt;&lt;br/&gt;&lt;center&gt;(Click on CREDITS at the bottom of this page for more info!)&lt;/center&gt;\";\n\t\t    \n\t\t$(\"#game-desc\").html(desc);\n\t\t    \n\t\t    \n\t\tfunction myFunction() {\n\t\t\tvar s = \"&lt;big&gt;&lt;b&gt;CREDITS&lt;/b&gt;&lt;/big&gt;&lt;br /&gt;&lt;br /&gt;\"+\n\t\t\t\"The main game was created with &lt;a href='https://github.com/ThePix/QuestJS/wiki' target='_blank'&gt;\"+\n\t\t\t\"Quest 6 AKA QuestJS&lt;/a&gt;.\"+\n\t\t\t//\"&lt;br /&gt;&lt;br /&gt;The HINTS &amp; CLUES menu was \"+\n\t\t\t//\"created with &lt;a href='https://twinery.org' target='_blank'&gt;Twine&lt;/a&gt;.\"+\n\t\t\t\"&lt;br /&gt;I learned how to code this \"+\n\t\t\t\"page by studying up at &lt;a href='https://www.w3schools.com' target='_blank'&gt;www.w3schools.com&lt;/a&gt;.\"+\n\t\t\t\"&lt;br /&gt;&lt;br/&gt;\"+\n\t\t\t\"Don't forget those who make these games available to the public AT NO CHARGE:&lt;br /&gt;\"+\n\t\t\t\"&lt;a href='http://textadventures.co.uk/' target='_blank'&gt;TEXTADVENTURES.CO.UK&lt;/a&gt;&lt;br /&gt;\"+\n\t\t\t\"&lt;a href='http://ifdb.tads.org/' target='_blank'&gt;IFDB&lt;/a&gt;&lt;br /&gt;\"+\n\t\t\t\"&lt;a href='http://ifarchive.org/' target='_blank'&gt;IFArchive&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;\"+\n\t\t\t\"This game is a work of fiction.&lt;br /&gt;Any names, characters, businesses, places, events,\"+\n\t\t\t\" incidents, products, spells, weapons, talking animals, magikal things, and non-magikal things\"+\n\t\t\t\" are purely fictitious. Any resemblance to actual persons, living or dead, or actual businesses,\"+\n\t\t\t\" places, events, incidents, products, spells, weapons, talking animals, magikal things, or non-magikal\"+\n\t\t\t\" things is purely coincidental.&lt;br /&gt;&lt;br /&gt;Ralph the penguin was created by an author friend of mine,\"+\n\t\t\t\" and appears in this game with his consent.&lt;br /&gt;&lt;br /&gt;\"+\n\t\t\t\"&lt;strong&gt;SPECIAL THANKS TO:&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;LUKE A. JONES, ANDREW PLOTKIN (AND ASSOCIATES),\"+\n\t\t\t\" EMILY SHORT (AND ASSOCIATES), THE PIXIE, MRANGEL, XANMAG, AND EVERYONE AT TEXTADVENTURES.CO.UK \"+\n\t\t\t\"(EXTRA SPECIAL THANKS TO LUIS FELIPE MORALES), CHRIS KLIMAS (AND ASSOCIATES), \"+\n\t\t\t\"STEVE MERETZKY (AND ASSOCIATES, AND EVERYONE WHO EVER WORKED FOR INFOCOM), EVERYONE AT IFDB, \"+\n\t\t\t\"EVERYONE AT IFARCHIVE (EXTRA SPECIAL THANKS TO DOUG),&lt;br /&gt;&lt;br /&gt;\"+\n\t\t\t\"&lt;big&gt;AND AN ESPECIALLY BIG THANKS TO: PLAYERS LIKE YOU!&lt;/big&gt;&lt;/p&gt;\"+\n\t\t\t\"&lt;a href='#thetopofthepage'&gt;&lt;br /&gt;BACK TO TOP&lt;/a&gt;\";\n\t\t\t\n\t\t    $(\"#demo\").html(s);\n\t\t    \n\t\t    \n\t\t}\n\t\t&lt;/script&gt;\n\t&lt;/body&gt;\n\n&lt;/html&gt;\n\n\n\n</code></pre>\n</details>\n<hr>\n<p>As far as I understand it, when we upload a ZIP file as a game, this site has default ways of choosing which page is the \"home\" page.  First, it checks for 'index.html'.  If that doesn't exist, it checks for 'play.html'.  If neither exist, and there is only one HTML file, it just loads that page.  If there are numerous HTML files in the main directory, and none are named \"play\" or \"index\", I have no clue how it works.  (Alphabetical order maybe?)</p>\n<hr>\n<blockquote>\n<p>That is really cool.</p>\n</blockquote>\n<p>Well, thank ya'.  Thank ya' very much!</p>\n<p><strong>EDIT</strong></p>\n<p>I started a <a href=\"http://textadventures.co.uk/forum/questkit/topic/vqas_xivue_l3jugeo7t5a/quest-6-adding-youtube-api\" title=\"http://textadventures.co.uk/forum/questkit/topic/vqas_xivue_l3jugeo7t5a/quest-6-adding-youtube-api\">new thread</a> about YouTube API.</p>\n<hr>\n<blockquote>\n<p>Could you write up how you did the video in a form that can be added to the documentation?</p>\n</blockquote>\n<p>Certainly, but I'd better make sure my code doesn't need any updating before I do that.  (It most assuredly does.)</p>\n\n",
      "PostDate": "2020-12-08T12:31:30.1035217Z",
      "LastEditDate": "2020-12-08T18:46:51.3191494Z",
      "link": null
    },
    {
      "PostId": "9d363a92-6d0c-4852-9cb6-d9fe312fa238",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Just to include all the YouTube stuff here (in case I lose it somehow), see [this thread](http://textadventures.co.uk/forum/questkit/topic/vqas_xivue_l3jugeo7t5a/quest-6-adding-youtube-api#a6228584-2e1c-498e-8ffb-74fd74d17929).  (It's the same one to which I linked above.)",
      "EditableFormat": "markdown",
      "HTML": "<p>Just to include all the YouTube stuff here (in case I lose it somehow), see <a href=\"http://textadventures.co.uk/forum/questkit/topic/vqas_xivue_l3jugeo7t5a/quest-6-adding-youtube-api#a6228584-2e1c-498e-8ffb-74fd74d17929\">this thread</a>.  (It's the same one to which I linked above.)</p>\n\n",
      "PostDate": "2020-12-08T12:57:03.8856692Z",
      "LastEditDate": "2020-12-08T18:51:10.5668784Z",
      "link": null
    },
    {
      "PostId": "54f4b2fd-4a42-4cd0-a7db-41e7105e10c8",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> (If on a mobile browser, I believe you have to start the video manually, as autoplay usually won't work with the volume on.)\r\n\r\nThis isn't necessarily the case. If, rather than using autoplay, you use the API to start the video as a response to a click or keypress on the same page, it would be allowed.\r\n\r\nOn Quest 5.x, you couldn't autoplay videos because clicking a command link or typing a command has the sole result of sending a string to the server. When you execute a command, the stuff that comes up on screen is in response to a message back from the server, and responses to *external* events can't trigger autoplay.\r\n\r\nBut with a more JS-based engine, I think it should be possible to have the video load and initialise when you enter the room, and use the YouTupe API to press play and unhide it in response to the player clicking/typing \"turn on tv\". Not sure if some workaround would be necessary; but if the command script is called (through however many layers of function calls) from an 'click' or 'keyup' event within the same page as the video, it should work.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>(If on a mobile browser, I believe you have to start the video manually, as autoplay usually won't work with the volume on.)</p>\n</blockquote>\n<p>This isn't necessarily the case. If, rather than using autoplay, you use the API to start the video as a response to a click or keypress on the same page, it would be allowed.</p>\n<p>On Quest 5.x, you couldn't autoplay videos because clicking a command link or typing a command has the sole result of sending a string to the server. When you execute a command, the stuff that comes up on screen is in response to a message back from the server, and responses to <em>external</em> events can't trigger autoplay.</p>\n<p>But with a more JS-based engine, I think it should be possible to have the video load and initialise when you enter the room, and use the YouTupe API to press play and unhide it in response to the player clicking/typing \"turn on tv\". Not sure if some workaround would be necessary; but if the command script is called (through however many layers of function calls) from an 'click' or 'keyup' event within the same page as the video, it should work.</p>\n\n",
      "PostDate": "2020-12-08T14:05:46.9696755Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "19bd6500-9072-42ea-8b6b-27edf0983665",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> This isn't necessarily the case. If, rather than using autoplay, you use the API to start the video as a response to a click or keypress on the same page, it would be allowed.\r\n\r\nThat fits with what I found when looking at sound.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>This isn't necessarily the case. If, rather than using autoplay, you use the API to start the video as a response to a click or keypress on the same page, it would be allowed.</p>\n</blockquote>\n<p>That fits with what I found when looking at sound.</p>\n\n",
      "PostDate": "2020-12-08T14:18:51.1166287Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6ac4c3e7-095e-47fe-afdc-e3c5fd6f07ab",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> This isn't necessarily the case. If, rather than using autoplay, you use the API to start the video as a response to a click or keypress on the same page, it would be allowed.\r\n\r\nHrmm... I shall add the call to play the video the first time the TV is turned on.  As it is now, it loads the video the first time, and that made it play on my PC.  So, I never coded it to play in that code block.  After testing on my Android, I just assumed it wouldn't autoplay due to the mobile restrictions.  But, like I say, I'm going to add the call to play after loading it initially and see how that works out on mobile.\r\n\r\nWill update.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>This isn't necessarily the case. If, rather than using autoplay, you use the API to start the video as a response to a click or keypress on the same page, it would be allowed.</p>\n</blockquote>\n<p>Hrmm... I shall add the call to play the video the first time the TV is turned on.  As it is now, it loads the video the first time, and that made it play on my PC.  So, I never coded it to play in that code block.  After testing on my Android, I just assumed it wouldn't autoplay due to the mobile restrictions.  But, like I say, I'm going to add the call to play after loading it initially and see how that works out on mobile.</p>\n<p>Will update.</p>\n\n",
      "PostDate": "2020-12-08T14:53:09.7259086Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0463c7af-65ae-45b9-a9f4-991ad8970cad",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Nope.  (Unless it's operator error on my behalf.)\r\n\r\nEven having the API call the play function doesn't automatically play it in my Andoid's Chrome browser.\r\n\r\n...nor does it work in its Firefox browser.\r\n\r\nI have to manually click on it to start the video before the rest of the YouTube functions work.  (The phone is a Galaxy S6, so it is rather old.)",
      "EditableFormat": "markdown",
      "HTML": "<p>Nope.  (Unless it's operator error on my behalf.)</p>\n<p>Even having the API call the play function doesn't automatically play it in my Andoid's Chrome browser.</p>\n<p>...nor does it work in its Firefox browser.</p>\n<p>I have to manually click on it to start the video before the rest of the YouTube functions work.  (The phone is a Galaxy S6, so it is rather old.)</p>\n\n",
      "PostDate": "2020-12-08T15:04:24.8923884Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9f383458-78a9-40b2-8f77-81c8f3c471df",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Not sure if there could be some indirection somewhere between the click handler and the actual function.\r\nOr if loading the video (but having it hidden) when the room is first entered could make a difference; so that the video is already in existence when the click event is delivered.\r\n\r\nI heard that some ads are using a workaround where they have autoplay but are muted (which is allowed for some reason), and then using a timeout to turn the volume up after a second. But I wouldn't try that, as it's likely to be fixed soon if it hasn't already.",
      "EditableFormat": "markdown",
      "HTML": "<p>Not sure if there could be some indirection somewhere between the click handler and the actual function.<br>\nOr if loading the video (but having it hidden) when the room is first entered could make a difference; so that the video is already in existence when the click event is delivered.</p>\n<p>I heard that some ads are using a workaround where they have autoplay but are muted (which is allowed for some reason), and then using a timeout to turn the volume up after a second. But I wouldn't try that, as it's likely to be fixed soon if it hasn't already.</p>\n\n",
      "PostDate": "2020-12-08T16:12:08.8161383Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "36b58d58-3ec4-4e8b-8762-650b4f71f6dc",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "UPDATE\r\n\r\nI got sidetracked with YouTube.\r\n\r\nI removed my changes to the GiveTo command, and I created a GiveNpcStuff command with this regex:\r\n\r\n```(?!.* to )^(?:give) (?<npc>.+?) (?<obj>.+)$```\r\n\r\n---\r\nThe ```(?!.* to )^``` tells it NOT to match any string that includes the word \"to\".  (I call this overkill, as it seemed to work already with mrangel's code.  I'm just trying to learn stuff.  #KnowingIsHalfTheBattle)\r\n\r\n---\r\n---\r\n\r\n> Not sure if there could be some indirection somewhere between the click handler and the actual function.\r\n\r\nI just added the call to play the video to ```onPlayerReady``` function.  Now, I have to upload the game again and check with my phone to see if it makes the video start by itself.\r\n\r\nMore on this as it comes in . . .\r\n\r\n---\r\nPS\r\n\r\n(I might create a new thread for this YouTube API stuff.  The regex is crazy enough on its own.)\r\n\r\n**EDIT**\r\n\r\nhttp://textadventures.co.uk/forum/questkit/topic/vqas_xivue_l3jugeo7t5a/quest-6-adding-youtube-api#a6228584-2e1c-498e-8ffb-74fd74d17929",
      "EditableFormat": "markdown",
      "HTML": "<p>UPDATE</p>\n<p>I got sidetracked with YouTube.</p>\n<p>I removed my changes to the GiveTo command, and I created a GiveNpcStuff command with this regex:</p>\n<p><code>(?!.* to )^(?:give) (?&lt;npc&gt;.+?) (?&lt;obj&gt;.+)$</code></p>\n<hr>\n<p>The <code>(?!.* to )^</code> tells it NOT to match any string that includes the word \"to\".  (I call this overkill, as it seemed to work already with mrangel's code.  I'm just trying to learn stuff.  #KnowingIsHalfTheBattle)</p>\n<hr>\n<hr>\n<blockquote>\n<p>Not sure if there could be some indirection somewhere between the click handler and the actual function.</p>\n</blockquote>\n<p>I just added the call to play the video to <code>onPlayerReady</code> function.  Now, I have to upload the game again and check with my phone to see if it makes the video start by itself.</p>\n<p>More on this as it comes in . . .</p>\n<hr>\n<p>PS</p>\n<p>(I might create a new thread for this YouTube API stuff.  The regex is crazy enough on its own.)</p>\n<p><strong>EDIT</strong></p>\n<p>http://textadventures.co.uk/forum/questkit/topic/vqas_xivue_l3jugeo7t5a/quest-6-adding-youtube-api#a6228584-2e1c-498e-8ffb-74fd74d17929</p>\n\n",
      "PostDate": "2020-12-08T18:03:08.9509303Z",
      "LastEditDate": "2020-12-08T18:51:57.9063101Z",
      "link": null
    },
    {
      "PostId": "94cc0946-8301-411d-87cd-eb743e4973af",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Back to RegExp name capture groups . . .\r\n\r\nI broke out my Windows 7 machine.  When I tried **GIVE RALPH MASK**, it got an error.  The game still did everything else, even after that, but it definitely didn't work.  If this were an important thing to do to win the game, that would be bad.\r\n\r\nBut Firefox constantly badgered me to update.  So, I don't know.  After updating Firefox, it worked fine in Windows 7.  I guess if someone has a machine that's older than Windows 7, they couldn't update to a recent browser version maybe?\r\n\r\nI don't know . . .\r\n\r\n\r\n\r\nEither way, Quest 6 is Pixie's baby.  If Pixie decides name capture groups are <span class=\"rh\" title=\"no good\" style=\":hover span{color:red};cursor:help;\">no bueno</span>, then I shall post code without them.\r\n\r\n---\r\n### New COMMAND: ```giveNpcStuff```\r\n\r\nPattern: **GIVE [npc] [objects]**\r\n<br/>\r\n<div id\"code-div\" style=\"resize:both;height:200px;overflow:scroll\">\r\n\r\n```\r\n\r\ncommands.push(new Cmd('GiveNpcStuff', {\r\n\tregex:/(?!.* to )^give (\\w+?) (.+)$/i,\r\n\trules:[cmdRules.canManipulate, cmdRules.isHeld],\r\n    objects:[\r\n      \r\n      {scope:parser.isPresent, attName: \"npc\"},  //This one has to go first, or it throws the multiple error.  I don't really know why.\r\n      {scope:parser.isHeld, multiple:true},\r\n    ],\r\n    defmsg:(char,item)=>{return \"Char: \"+char+\" / item: \"+item},\r\n\tscript: function(objects) {\r\n\t\treturn handleGiveNpcStuff(game.player, objects)\r\n\t},\r\n\tdefault:function(item, isMultiple, char) { \r\n\t\tif (typeof this.defmsg === \"string\") {\r\n\t\t\tfailedmsg(prefix(item, isMultiple) + this.defmsg, {char:char, item:item});\r\n\t\t}\r\n\t\telse if (typeof this.defmsg === \"function\") {\r\n\t\t\tfailedmsg(prefix(item, isMultiple) + this.defmsg(char, item), {char:char, item:item});\r\n\t\t}\r\n\t\telse {\r\n\t\t\terrormsg(\"No default set for command '\" + this.name + \"'.\");\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n}))\r\n\r\nfunction handleGiveNpcStuff(char, objects) {\r\n  let success = false;\r\n  const npc = objects[0][0];\r\n  const multiple = objects[1].length > 1 || parser.currentCommand.all;\r\n  if (!npc.npc && npc !== game.player) {\r\n    failedmsg(lang.not_npc_for_give, {char:char, item:npc});\r\n    return world.FAILED; \r\n  }\r\n  for (let obj of objects[1]) {\r\n    let flag = true;\r\n    if (!char.getAgreement(\"Give\", obj)) {\r\n      // The getAgreement should give the response\r\n    }\r\n    if (npc.testRestrictions) {\r\n      flag = npc.testRestrictions(obj);\r\n    }\r\n    if (!npc.canManipulate(obj, \"give\")) {\r\n      return world.FAILED;\r\n    }\r\n    if (flag) {\r\n      if (!obj.isAtLoc(char.name)) {\r\n        failedmsg(prefix(obj, multiple) + lang.not_carrying, {char:char, item:obj});\r\n      }\r\n      else {\r\n        if (npc.giveReaction) {\r\n          npc.giveReaction(obj, multiple, char);\r\n        }\r\n        else {\r\n          msg(prefix(obj, multiple) + lang.done_msg);\r\n          obj.moveToFrom(npc.name, char.name);\r\n        }\r\n        success = true;\r\n      }\r\n    }\r\n  }\r\n  if (success === world.SUCCESS) char.pause();\r\n  return success ? world.SUCCESS : world.FAILED;\r\n}\r\n```\r\n\r\n</div>\r\n\r\n---\r\nNOTE\r\n\r\nI combined mrangel's regex with mine, and this works perfectly (as far as I've tested it).",
      "EditableFormat": "markdown",
      "HTML": "<p>Back to RegExp name capture groups . . .</p>\n<p>I broke out my Windows 7 machine.  When I tried <strong>GIVE RALPH MASK</strong>, it got an error.  The game still did everything else, even after that, but it definitely didn't work.  If this were an important thing to do to win the game, that would be bad.</p>\n<p>But Firefox constantly badgered me to update.  So, I don't know.  After updating Firefox, it worked fine in Windows 7.  I guess if someone has a machine that's older than Windows 7, they couldn't update to a recent browser version maybe?</p>\n<p>I don't know . . .</p>\n<p>Either way, Quest 6 is Pixie's baby.  If Pixie decides name capture groups are <span title=\"no good\" style=\"cursor: help\">no bueno</span>, then I shall post code without them.</p>\n<hr>\n<h3>New COMMAND: <code>giveNpcStuff</code></h3>\n<p>Pattern: <strong>GIVE [npc] [objects]</strong><br>\n<br></p>\n<div style=\"height: 200px; overflow: scroll\">\n<pre><code>\ncommands.push(new Cmd('GiveNpcStuff', {\n\tregex:/(?!.* to )^give (\\w+?) (.+)$/i,\n\trules:[cmdRules.canManipulate, cmdRules.isHeld],\n    objects:[\n      \n      {scope:parser.isPresent, attName: \"npc\"},  //This one has to go first, or it throws the multiple error.  I don't really know why.\n      {scope:parser.isHeld, multiple:true},\n    ],\n    defmsg:(char,item)=&gt;{return \"Char: \"+char+\" / item: \"+item},\n\tscript: function(objects) {\n\t\treturn handleGiveNpcStuff(game.player, objects)\n\t},\n\tdefault:function(item, isMultiple, char) { \n\t\tif (typeof this.defmsg === \"string\") {\n\t\t\tfailedmsg(prefix(item, isMultiple) + this.defmsg, {char:char, item:item});\n\t\t}\n\t\telse if (typeof this.defmsg === \"function\") {\n\t\t\tfailedmsg(prefix(item, isMultiple) + this.defmsg(char, item), {char:char, item:item});\n\t\t}\n\t\telse {\n\t\t\terrormsg(\"No default set for command '\" + this.name + \"'.\");\n\t\t}\n\t\treturn false;\n\t},\n}))\n\nfunction handleGiveNpcStuff(char, objects) {\n  let success = false;\n  const npc = objects[0][0];\n  const multiple = objects[1].length &gt; 1 || parser.currentCommand.all;\n  if (!npc.npc &amp;&amp; npc !== game.player) {\n    failedmsg(lang.not_npc_for_give, {char:char, item:npc});\n    return world.FAILED; \n  }\n  for (let obj of objects[1]) {\n    let flag = true;\n    if (!char.getAgreement(\"Give\", obj)) {\n      // The getAgreement should give the response\n    }\n    if (npc.testRestrictions) {\n      flag = npc.testRestrictions(obj);\n    }\n    if (!npc.canManipulate(obj, \"give\")) {\n      return world.FAILED;\n    }\n    if (flag) {\n      if (!obj.isAtLoc(char.name)) {\n        failedmsg(prefix(obj, multiple) + lang.not_carrying, {char:char, item:obj});\n      }\n      else {\n        if (npc.giveReaction) {\n          npc.giveReaction(obj, multiple, char);\n        }\n        else {\n          msg(prefix(obj, multiple) + lang.done_msg);\n          obj.moveToFrom(npc.name, char.name);\n        }\n        success = true;\n      }\n    }\n  }\n  if (success === world.SUCCESS) char.pause();\n  return success ? world.SUCCESS : world.FAILED;\n}\n</code></pre>\n</div>\n<hr>\n<p>NOTE</p>\n<p>I combined mrangel's regex with mine, and this works perfectly (as far as I've tested it).</p>\n\n",
      "PostDate": "2020-12-12T03:29:25.196915Z",
      "LastEditDate": "2020-12-12T03:35:59.4292921Z",
      "link": null
    },
    {
      "PostId": "8fc78e9f-cfb9-4014-910a-1c7914b7b1e0",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "See here:\r\nhttps://github.com/ThePix/QuestJS/wiki/Implementation-notes#no-named-capture-groups\r\n\r\nIf I was doing this in 2022, it would be different, and it _might_ be worthwhile changing at some point.",
      "EditableFormat": "markdown",
      "HTML": "<p>See here:<br>\nhttps://github.com/ThePix/QuestJS/wiki/Implementation-notes#no-named-capture-groups</p>\n<p>If I was doing this in 2022, it would be different, and it <em>might</em> be worthwhile changing at some point.</p>\n\n",
      "PostDate": "2020-12-12T09:40:54.3609562Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f94bdb64-a79b-4053-ba7c-319227cdbae3",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> If I was doing this in 2022, it would be different\r\n\r\nI wasn't trying to be negative (if it seemed that way).\r\n\r\n---\r\n>  it <strong><em>might</em></strong> be worthwhile changing at some point.\r\n\r\nMaybe, but rewriting all that parser stuff sounds like an awful lot of work. If I got this pattern to work without the named capture groups, I bet most other patterns can be matched without it, too.\r\n\r\n---\r\nAll in all, I'm having a marvelous time learning all this JS.\r\n\r\nAnd I get to help some people out along the way?\r\n\r\nOh yeah.  This is fun.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>If I was doing this in 2022, it would be different</p>\n</blockquote>\n<p>I wasn't trying to be negative (if it seemed that way).</p>\n<hr>\n<blockquote>\n<p>it <strong><em>might</em></strong> be worthwhile changing at some point.</p>\n</blockquote>\n<p>Maybe, but rewriting all that parser stuff sounds like an awful lot of work. If I got this pattern to work without the named capture groups, I bet most other patterns can be matched without it, too.</p>\n<hr>\n<p>All in all, I'm having a marvelous time learning all this JS.</p>\n<p>And I get to help some people out along the way?</p>\n<p>Oh yeah.  This is fun.</p>\n\n",
      "PostDate": "2020-12-12T11:29:06.7861707Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1eb4de00-a28b-4e88-838e-2c21800bce36",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I didn't realise support was so recent. Javascript regular expressions must have lagged a bit behind other languages.\r\n\r\nI remember the first time I was working on a project and got told not to use named groups because not everyone had upgraded to Perl 5.10 yet; that was in 2008.",
      "EditableFormat": "markdown",
      "HTML": "<p>I didn't realise support was so recent. Javascript regular expressions must have lagged a bit behind other languages.</p>\n<p>I remember the first time I was working on a project and got told not to use named groups because not everyone had upgraded to Perl 5.10 yet; that was in 2008.</p>\n\n",
      "PostDate": "2020-12-12T11:43:50.7119586Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
