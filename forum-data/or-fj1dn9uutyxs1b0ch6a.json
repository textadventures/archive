{
  "Topic": {
    "TopicId": "or-fj1dn9uutyxs1b0ch6a",
    "ForumId": "10",
    "Title": "Ask A Character About An Object That's Elsewhere.",
    "LastUpdated": "2021-09-17T02:10:35.7627412Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "b615a299-11c6-47f9-adbd-5f689bd871ba",
      "UserId": 552432,
      "Username": "Samuel014",
      "AvatarUrl": "https://secure.gravatar.com/avatar/fc580b423bbe5767634bd0e6415ad386?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If Player is in same room with a character, you can ask him about an object that is also in that room. And you can get a different response depending on whether Player is carrying the object or not. But can you ask a character about an object that's not in the room??\r\n\r\nThis code doesn't give an error msg:\r\n\r\n```\r\n  <command name=\"asking\">\r\n    <pattern>ask #object# about #object_one#</pattern>\r\n    <unresolved>He ain't here.</unresolved>\r\n    <script>\r\n      switch (object_one) {\r\n        case (pistol) {\r\n          if (object_one not here) {\r\n            msg (\"Yo\")\r\n          }\r\n        }\r\n      }\r\n    </script>\r\n  </command>\r\n```\r\n\r\nBut it also doesn't work. Gives the message \"He ain't here (pistol)\"\r\n\r\nAny ideas??",
      "EditableFormat": "markdown",
      "HTML": "<p>If Player is in same room with a character, you can ask him about an object that is also in that room. And you can get a different response depending on whether Player is carrying the object or not. But can you ask a character about an object that's not in the room??</p>\n<p>This code doesn't give an error msg:</p>\n<pre><code>  &lt;command name=\"asking\"&gt;\n    &lt;pattern&gt;ask #object# about #object_one#&lt;/pattern&gt;\n    &lt;unresolved&gt;He ain't here.&lt;/unresolved&gt;\n    &lt;script&gt;\n      switch (object_one) {\n        case (pistol) {\n          if (object_one not here) {\n            msg (\"Yo\")\n          }\n        }\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n</code></pre>\n<p>But it also doesn't work. Gives the message \"He ain't here (pistol)\"</p>\n<p>Any ideas??</p>\n\n",
      "PostDate": "2021-09-17T02:10:35.7627412Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "280b270d-3d99-403c-9d88-17eb3e21d9c6",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You want to set the scope for the command to something like `object=room|object_one=world`.\r\n\r\nThat means that when trying to match the player's input to an object, for `object` it considers objects in the room, and for `object_one` it considers objects anywhere in the world.\r\n\r\nOther values you can use include `all` (all visible objects; same as `room;inventory`), `room` or `notheld` (those two are the same), `inventory` (objects in the inventory), `container` (visible containers; used for the \"put in\" command), and `contents` (objects that are in a visible container, whether or not they are visible)\r\n\r\nIf you want to stop the autocomplete suggesting the names of things the player hasn't even seen, it would be a bit more complex. You could give the player object an objectlist attribute named something like `things_seen` and add objects to the list when the player encounters them; and then set the command's scope to `object=room|object_one=things_seen`. You can do whatever you want with that; adding all objects visible when the player enters a new room, or just the things that are worth asking about.\r\n\r\nA more powerful option would be giving the command a script attribute named `changecommandscope`. That script is run before trying to match the player's input to an object. Within the script, you will have the following variables available:\r\n* `items` - the items list generated by the normal scope attribute. You can add and remove objects on this list to change which objects the game considers as valid candidates.\r\n* `command` - the command itself (not really useful in this case)\r\n* `variable` - will be \"object\" or \"object_one\", so the script knows which command we're matching against\r\n* `objtype` - \"object\", \"exit\", or \"text\"\r\n* `matched` - a dictionary containing any objects that have already been matched for this command.",
      "EditableFormat": "markdown",
      "HTML": "<p>You want to set the scope for the command to something like <code>object=room|object_one=world</code>.</p>\n<p>That means that when trying to match the player's input to an object, for <code>object</code> it considers objects in the room, and for <code>object_one</code> it considers objects anywhere in the world.</p>\n<p>Other values you can use include <code>all</code> (all visible objects; same as <code>room;inventory</code>), <code>room</code> or <code>notheld</code> (those two are the same), <code>inventory</code> (objects in the inventory), <code>container</code> (visible containers; used for the \"put in\" command), and <code>contents</code> (objects that are in a visible container, whether or not they are visible)</p>\n<p>If you want to stop the autocomplete suggesting the names of things the player hasn't even seen, it would be a bit more complex. You could give the player object an objectlist attribute named something like <code>things_seen</code> and add objects to the list when the player encounters them; and then set the command's scope to <code>object=room|object_one=things_seen</code>. You can do whatever you want with that; adding all objects visible when the player enters a new room, or just the things that are worth asking about.</p>\n<p>A more powerful option would be giving the command a script attribute named <code>changecommandscope</code>. That script is run before trying to match the player's input to an object. Within the script, you will have the following variables available:</p>\n<ul>\n<li><code>items</code> - the items list generated by the normal scope attribute. You can add and remove objects on this list to change which objects the game considers as valid candidates.</li>\n<li><code>command</code> - the command itself (not really useful in this case)</li>\n<li><code>variable</code> - will be \"object\" or \"object_one\", so the script knows which command we're matching against</li>\n<li><code>objtype</code> - \"object\", \"exit\", or \"text\"</li>\n<li><code>matched</code> - a dictionary containing any objects that have already been matched for this command.</li>\n</ul>\n\n",
      "PostDate": "2021-09-17T08:48:27.2430321Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "352ec2cd-a7ba-4e15-a011-636642de6527",
      "UserId": 552432,
      "Username": "Samuel014",
      "AvatarUrl": "https://secure.gravatar.com/avatar/fc580b423bbe5767634bd0e6415ad386?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Mr. Angel, I hate being so dumb, but I can't figure out WHERE to put the scope instruction.\r\n\r\n```\r\n <command name=\"asking\">\r\n    <pattern>ask #object# about #object_one#</pattern>\r\n    <unresolved>He ain't here.</unresolved>\r\n    <script>\r\n      if (object = Bob) {\r\n        switch (object_one = world) { // _Gets error msg below_\r\n          case (pen) {\r\n            msg (\"Nice pen.\")\r\n          }\r\n          case (pistol) {\r\n            msg (\"Good gun.\")\r\n          }\r\n        }\r\n      }\r\n    </script>\r\n  </command>\r\n```\r\nError running script: Error compiling expression 'object_one = world': Unknown object or variable 'world'\r\n \r\nI tried it in the first line of the command:\r\n\r\n```\r\n    <pattern>ask #object# about #object_one# = world</pattern>\r\n```\r\n\r\nDoesn't get an error msg, but it doesn't work. It says, \"He does not reply\" no matter if the object I ask him about is in the room or not.\r\n\r\nSo I'm baffled.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Mr. Angel, I hate being so dumb, but I can't figure out WHERE to put the scope instruction.</p>\n<pre><code> &lt;command name=\"asking\"&gt;\n    &lt;pattern&gt;ask #object# about #object_one#&lt;/pattern&gt;\n    &lt;unresolved&gt;He ain't here.&lt;/unresolved&gt;\n    &lt;script&gt;\n      if (object = Bob) {\n        switch (object_one = world) { // _Gets error msg below_\n          case (pen) {\n            msg (\"Nice pen.\")\n          }\n          case (pistol) {\n            msg (\"Good gun.\")\n          }\n        }\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n</code></pre>\n<p>Error running script: Error compiling expression 'object_one = world': Unknown object or variable 'world'</p>\n<p>I tried it in the first line of the command:</p>\n<pre><code>    &lt;pattern&gt;ask #object# about #object_one# = world&lt;/pattern&gt;\n</code></pre>\n<p>Doesn't get an error msg, but it doesn't work. It says, \"He does not reply\" no matter if the object I ask him about is in the room or not.</p>\n<p>So I'm baffled.</p>\n\n",
      "PostDate": "2021-09-18T04:00:04.5979007Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f00618d0-0ecb-4d86-9331-b20aeea66ecd",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In the GUI there's a separate box for scope. In full code view it would be:\r\n<pre><code>  &lt;command name=\"asking\">\r\n    &lt;pattern>ask #object# about #object_one#&lt;/pattern>\r\n    <b>&lt;scope>object=room|object_one=world&lt;/scope></b>\r\n    &lt;unresolved>He ain't here.&lt;/unresolved>\r\n    &lt;script>\r\n      if (object = Bob) {\r\n        switch (object_one = world) {\r\n          case (pen) {\r\n            msg (\"Nice pen.\")\r\n          }\r\n          case (pistol) {\r\n            msg (\"Good gun.\")\r\n          }\r\n          case (player) {\r\n            msg (\"I think you're a nice guy.\")\r\n          }\r\n        }\r\n      }\r\n    &lt;/script>\r\n  &lt;/command></code></pre>\r\n\r\nOne thing to be careful about if using `world`: It includes all objects, whether or not they're reachable by the player. So it would be a good idea to consider sensible messages for rooms and the player. I used the 'player' as an example, just for the players who will try \"ask Bob about myself\".",
      "EditableFormat": "markdown",
      "HTML": "<p>In the GUI there's a separate box for scope. In full code view it would be:</p>\n<pre><code>  &lt;command name=\"asking\"&gt;\n    &lt;pattern&gt;ask #object# about #object_one#&lt;/pattern&gt;\n    <b>&lt;scope&gt;object=room|object_one=world&lt;/scope&gt;</b>\n    &lt;unresolved&gt;He ain't here.&lt;/unresolved&gt;\n    &lt;script&gt;\n      if (object = Bob) {\n        switch (object_one = world) {\n          case (pen) {\n            msg (\"Nice pen.\")\n          }\n          case (pistol) {\n            msg (\"Good gun.\")\n          }\n          case (player) {\n            msg (\"I think you're a nice guy.\")\n          }\n        }\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;</code></pre>\n<p>One thing to be careful about if using <code>world</code>: It includes all objects, whether or not they're reachable by the player. So it would be a good idea to consider sensible messages for rooms and the player. I used the 'player' as an example, just for the players who will try \"ask Bob about myself\".</p>\n\n",
      "PostDate": "2021-09-18T09:41:53.7330806Z",
      "LastEditDate": "2021-09-18T09:42:23.0418524Z",
      "link": null
    },
    {
      "PostId": "8d570cad-f4cc-4218-822c-4e80cf9b1ebc",
      "UserId": 552432,
      "Username": "Samuel014",
      "AvatarUrl": "https://secure.gravatar.com/avatar/fc580b423bbe5767634bd0e6415ad386?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah, I was pretty dumb to not figure that out. Thanks.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah, I was pretty dumb to not figure that out. Thanks.</p>\n\n",
      "PostDate": "2021-09-19T05:09:19.7670473Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0fe6058c-44b3-49c1-8746-6e9e53aeaca6",
      "UserId": 195121,
      "Username": "iantommo",
      "AvatarUrl": "https://i.imgur.com/NUcwrIKb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ASK/TELL panel : ask ; ask about \r\n\r\n\"ask character about object\" for nearly all objects or other characters in your game is easy.\r\n\r\nJust add another \"ask about object script\" \r\n\r\nObjects, words  or characters you ask about don't have to be in the same room or visible at all! After all , it is just a question.",
      "EditableFormat": "markdown",
      "HTML": "<p>ASK/TELL panel : ask ; ask about</p>\n<p>\"ask character about object\" for nearly all objects or other characters in your game is easy.</p>\n<p>Just add another \"ask about object script\"</p>\n<p>Objects, words  or characters you ask about don't have to be in the same room or visible at all! After all , it is just a question.</p>\n\n",
      "PostDate": "2021-10-05T10:44:09.841722Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5cf51e4e-4c93-4bb1-9f72-5695c395678b",
      "UserId": 552432,
      "Username": "Samuel014",
      "AvatarUrl": "https://secure.gravatar.com/avatar/fc580b423bbe5767634bd0e6415ad386?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks, iantommo.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks, iantommo.</p>\n\n",
      "PostDate": "2021-10-08T00:47:39.6687409Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
