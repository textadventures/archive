{
  "Topic": {
    "TopicId": "-y8fnklrhuskyzz1vbeoxq",
    "ForumId": "10",
    "Title": "Declaring variables?",
    "LastUpdated": "2018-08-18T14:46:13.0480066Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "5fbc870d-70b8-4b51-8575-32201394c3fd",
      "UserId": 350656,
      "Username": "jamrobeprom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7a2fe681688706984a39df2ac42d55dc?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've had a look at the tutorial, and I can't figure out how to declare a variable.\r\nI've tried all sorts, using the attributes tab, the \"Set value of variable or attribute\" script part, etc.\r\nI'm sure the solution is simple and easy to understand and I'm just overthinking this.",
      "EditableFormat": "markdown",
      "HTML": "<p>I've had a look at the tutorial, and I can't figure out how to declare a variable.<br>\nI've tried all sorts, using the attributes tab, the \"Set value of variable or attribute\" script part, etc.<br>\nI'm sure the solution is simple and easy to understand and I'm just overthinking this.</p>\n\n",
      "PostDate": "2018-08-18T14:46:13.0480066Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d4e9388a-448b-40ef-8793-33467e9574c5",
      "UserId": 369970,
      "Username": "Selsynn",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You just have to set a value to your variable\r\n```\r\nYourVariableName= The value you want\r\n```\r\nWith the gui it is with the Variable/Set a variable or attribute\r\nYou enter the name in the first input, the type of the creation in the second one. If it is Expression, you can affect a value directly in the third one",
      "EditableFormat": "markdown",
      "HTML": "<p>You just have to set a value to your variable</p>\n<pre><code>YourVariableName= The value you want\n</code></pre>\n<p>With the gui it is with the Variable/Set a variable or attribute<br>\nYou enter the name in the first input, the type of the creation in the second one. If it is Expression, you can affect a value directly in the third one</p>\n\n",
      "PostDate": "2018-08-18T16:18:12.6231245Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6ac2f275-9082-4e60-86d1-e0ae3bcb896e",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Quest has 3 types of VARIABLES (keeping this simple):\r\n\r\nVARIABLES:\r\n1. Variables: temporary and local scope VARIABLE, won't cover them in this post\r\n2. Attributes: permanent (so long as its parent Object exists or still exists of course) and global scope VARIABLE\r\n3. Parameters: deals with Functions/Commands, won't get into them in this post\r\n\r\n-------------\r\n\r\nyou want to use Attributes (Attribute VARIABLES), until/unless you learn/know coding and understand scope, the difference between and in usage of global Object's Attribute VARIABLES and local Element's scripting's Variable VARIABLES\r\n\r\nthus, I'll show how to do Attributes, as this is what you want to be using\r\n\r\n-------------\r\n\r\nAttribute VARIABLES:\r\n\r\n------------\r\n\r\nin the GUI/Editor:\r\n\r\n'NAME_OF_OBJECT' Object -> 'Attributes' Tab -> Attributes (bottom box I think) -> Add -> (see below)\r\n\r\n(Object Name: NAME_OF_OBJECT)\r\nAttribute Name: NAME_OF_ATTRIBUTE\r\nAttribute Type (drop down box): (String/Int:Integer/Boolean/Double/Object/Script/List/Dictionary)\r\nAttribute Value: (whatever, but depends upon selected Attribute Type)\r\n\r\n--------------\r\n\r\nor, as scripting (in the GUI/Editor):\r\n\r\n(whatever Element --- Objects' Script Attributes, Functions, Commands, Turnscripts, Timers, etc --- that can do scripting) -> run as script -> add new script -> 'variables' section/category -> 'set a variable or attribute' Script -> (see below)\r\n\r\n(I use the '[EXPRESSION]' script option, as it allows you to directly type/code in what value or expression you want, as I don't have the GUI/Editor's Script options down, lol. My way of cheating around not knowing the GUI/Editor, hehe)\r\n\r\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION\r\n\r\n(vs in-code, as can see, the syntax is slightly different: NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = VALUE_OR_EXPRESSION)\r\n\r\nimportant: Quest parses the 'VALUE_OR_EXPRESSION', to determine/know what Attribute Type the Attribute is to be created as\r\n\r\nfor examples:\r\n\r\nset variable player.strength = [EXPRESSION] 100 // Integer Attribute\r\nset variable game.state = [EXPRESSION] 0 // Integer Attribute\r\nset variable player.alias = [EXPRESSION] \"HK\" // String Attribute\r\nset variable game.intro = [EXPRESSION] \"Welcome to my game, I hope you enjoy it!\" // String Attribute\r\nset variable player.flying = [EXPRESSION] false // Boolean Attribute\r\nset variable orc.dead = [EXPRESSION] false // Boolean Attribute\r\nset variable game.paused = [EXPRESSION] true // Boolean Attribute\r\n\r\ncreate (\"katana\") // creating a 'katana' Object\r\nset variable katana.damage = [EXPRESSION] 50 // Integer Attribute\r\nset variable player.weapon = [EXPRESSION] katana // Object (pointer/reference) Attribute\r\n\r\na more complex expression example (Integer Attribute):\r\n\r\nset variable player.damage = [EXPRESSION] player.weapon.damage + player.weapon.damage * player.strength / 100\r\n\r\n-----------\r\n\r\nif you want to create/set/declare an Attribute VARIABLE and its initial Value and/or alter/change an Attribute's Value, via inputs during game play:\r\n\r\nthere's the 'get input' Script/Function:\r\n\r\n(whatever Element --- Objects' Script Attributes, Functions, Commands, Turnscripts, Timers, etc --- that can do scripting) -> run as script -> add new script -> 'output' section/category -> get input' Script -> (see below, in-code example)\r\n\r\n```\r\nmsg (\"Name?\")\r\n\r\nget input {\r\n\r\n  // quest automatically (hidden from you) stores your typed-in input (always as a String - but you can then convert it into another Data Type if/as needed) into the built-in 'result' Variable VARIABLE:\r\n\r\n  // result = \"YOUR_TYPED_IN_INPUT\"\r\n\r\n  player.alias = result // we then store the 'result' Variable VARIABLE's value or expression String into the built-in 'alias' String Attribute of the 'player' Player Object\r\n\r\n  // essentially, what we are doing:\r\n\r\n  // B = C\r\n  // A = B\r\n  // (A = B = C)\r\n  // A = C\r\n\r\n  // B <=== C\r\n  // A <=== B\r\n  // (A <=== B <=== C)\r\n  // A <=== C\r\n\r\n  // player.alias = result = \"YOUR_TYPED_IN_INPUT\"\r\n  // player.alias = \"YOUR_TYPED_IN_INPUT\"\r\n\r\n  // player.alias <=== result <=== \"YOUR_TYPED_IN_INPUT\"\r\n  // player.alias <=== \"YOUR_TYPED_IN_INPUT\"\r\n\r\n}\r\n```\r\n\r\n---------\r\n\r\nyou can also create/add 'Command' Elements, which also are able to get typed-in inputs\r\n\r\nand there's also the 'show menu / ShowMenu', 'ask/Ask', and etc Scripts/Functions that do menus (getting inputs as your menu item selections)",
      "EditableFormat": "markdown",
      "HTML": "<p>Quest has 3 types of VARIABLES (keeping this simple):</p>\n<p>VARIABLES:</p>\n<ol>\n<li>Variables: temporary and local scope VARIABLE, won't cover them in this post</li>\n<li>Attributes: permanent (so long as its parent Object exists or still exists of course) and global scope VARIABLE</li>\n<li>Parameters: deals with Functions/Commands, won't get into them in this post</li>\n</ol>\n<hr>\n<p>you want to use Attributes (Attribute VARIABLES), until/unless you learn/know coding and understand scope, the difference between and in usage of global Object's Attribute VARIABLES and local Element's scripting's Variable VARIABLES</p>\n<p>thus, I'll show how to do Attributes, as this is what you want to be using</p>\n<hr>\n<p>Attribute VARIABLES:</p>\n<hr>\n<p>in the GUI/Editor:</p>\n<p>'NAME_OF_OBJECT' Object -&gt; 'Attributes' Tab -&gt; Attributes (bottom box I think) -&gt; Add -&gt; (see below)</p>\n<p>(Object Name: NAME_OF_OBJECT)<br>\nAttribute Name: NAME_OF_ATTRIBUTE<br>\nAttribute Type (drop down box): (String/Int:Integer/Boolean/Double/Object/Script/List/Dictionary)<br>\nAttribute Value: (whatever, but depends upon selected Attribute Type)</p>\n<hr>\n<p>or, as scripting (in the GUI/Editor):</p>\n<p>(whatever Element --- Objects' Script Attributes, Functions, Commands, Turnscripts, Timers, etc --- that can do scripting) -&gt; run as script -&gt; add new script -&gt; 'variables' section/category -&gt; 'set a variable or attribute' Script -&gt; (see below)</p>\n<p>(I use the '[EXPRESSION]' script option, as it allows you to directly type/code in what value or expression you want, as I don't have the GUI/Editor's Script options down, lol. My way of cheating around not knowing the GUI/Editor, hehe)</p>\n<p>set variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION</p>\n<p>(vs in-code, as can see, the syntax is slightly different: NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = VALUE_OR_EXPRESSION)</p>\n<p>important: Quest parses the 'VALUE_OR_EXPRESSION', to determine/know what Attribute Type the Attribute is to be created as</p>\n<p>for examples:</p>\n<p>set variable player.strength = [EXPRESSION] 100 // Integer Attribute<br>\nset variable game.state = [EXPRESSION] 0 // Integer Attribute<br>\nset variable player.alias = [EXPRESSION] \"HK\" // String Attribute<br>\nset variable game.intro = [EXPRESSION] \"Welcome to my game, I hope you enjoy it!\" // String Attribute<br>\nset variable player.flying = [EXPRESSION] false // Boolean Attribute<br>\nset variable orc.dead = [EXPRESSION] false // Boolean Attribute<br>\nset variable game.paused = [EXPRESSION] true // Boolean Attribute</p>\n<p>create (\"katana\") // creating a 'katana' Object<br>\nset variable katana.damage = [EXPRESSION] 50 // Integer Attribute<br>\nset variable player.weapon = [EXPRESSION] katana // Object (pointer/reference) Attribute</p>\n<p>a more complex expression example (Integer Attribute):</p>\n<p>set variable player.damage = [EXPRESSION] player.weapon.damage + player.weapon.damage * player.strength / 100</p>\n<hr>\n<p>if you want to create/set/declare an Attribute VARIABLE and its initial Value and/or alter/change an Attribute's Value, via inputs during game play:</p>\n<p>there's the 'get input' Script/Function:</p>\n<p>(whatever Element --- Objects' Script Attributes, Functions, Commands, Turnscripts, Timers, etc --- that can do scripting) -&gt; run as script -&gt; add new script -&gt; 'output' section/category -&gt; get input' Script -&gt; (see below, in-code example)</p>\n<pre><code>msg (\"Name?\")\n\nget input {\n\n  // quest automatically (hidden from you) stores your typed-in input (always as a String - but you can then convert it into another Data Type if/as needed) into the built-in 'result' Variable VARIABLE:\n\n  // result = \"YOUR_TYPED_IN_INPUT\"\n\n  player.alias = result // we then store the 'result' Variable VARIABLE's value or expression String into the built-in 'alias' String Attribute of the 'player' Player Object\n\n  // essentially, what we are doing:\n\n  // B = C\n  // A = B\n  // (A = B = C)\n  // A = C\n\n  // B &lt;=== C\n  // A &lt;=== B\n  // (A &lt;=== B &lt;=== C)\n  // A &lt;=== C\n\n  // player.alias = result = \"YOUR_TYPED_IN_INPUT\"\n  // player.alias = \"YOUR_TYPED_IN_INPUT\"\n\n  // player.alias &lt;=== result &lt;=== \"YOUR_TYPED_IN_INPUT\"\n  // player.alias &lt;=== \"YOUR_TYPED_IN_INPUT\"\n\n}\n</code></pre>\n<hr>\n<p>you can also create/add 'Command' Elements, which also are able to get typed-in inputs</p>\n<p>and there's also the 'show menu / ShowMenu', 'ask/Ask', and etc Scripts/Functions that do menus (getting inputs as your menu item selections)</p>\n\n",
      "PostDate": "2018-08-18T17:55:57.0932001Z",
      "LastEditDate": "2018-08-18T18:09:34.4692055Z",
      "link": null
    }
  ]
}
