{
  "Topic": {
    "TopicId": "fysbpd5iveywmt3zfdf8qw",
    "ForumId": "10",
    "Title": "Functions to Deal with Clones",
    "LastUpdated": "2018-02-27T02:53:44.9562452Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "a6fe28de-7c48-4145-a179-47648c2cf182",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello!\r\n\r\nPlease add functions or suggest changes!\r\n\r\nThank you!\r\n\r\n---\r\nRevised functions:\r\n\r\n```\r\n  <function name=\"GetDirectCloneChildren\" parameters=\"parent, prototype\" type=\"objectlist\">\r\n    return (FilterByAttribute(GetDirectChildren(parent),\"prototype\", prototype))\r\n  </function>\r\n```\r\n```\r\n  <function name=\"IsCloneOf\" parameters=\"object, prototype\" type=\"boolean\">\r\n    return (object.prototype = prototype)\r\n  </function>\r\n```\r\n```\r\n  <function name=\"ScopeReachableClonesOf\" parameters=\"prototype\" type=\"objectlist\">\r\n    return (FilterByAttribute(ScopeReachable(), \"prototype\", prototype))\r\n  </function>\r\n```\r\n```\r\n  <function name=\"GetRandomReachableCloneOf\" parameters=\"prototype\" type=\"object\">\r\n    PickOneObject (ScopeReachableClonesOf(prototype))\r\n  </function>\r\n```\r\n```\r\n  <function name=\"AnyReachableCloneGetBoolean\" parameters=\"prototype, attribute\" type=\"boolean\">\r\n    return (ListCount(FilterByAttribute(ScopeReachableClonesOf(prototype), attribute, true))>0)\r\n  </function>\r\n```\r\n```\r\n  <!-- This function written by mrangel -->\r\n  <function name=\"GetReachableClonesWithBoolean\" parameters=\"prototype, attribute\" type=\"objectlist\">\r\n    return (FilterByAttribute(ScopeReachableClonesOf(prototype), attribute, true))\r\n  </function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello!</p>\n<p>Please add functions or suggest changes!</p>\n<p>Thank you!</p>\n<hr>\n<p>Revised functions:</p>\n<pre><code>  &lt;function name=\"GetDirectCloneChildren\" parameters=\"parent, prototype\" type=\"objectlist\"&gt;\n    return (FilterByAttribute(GetDirectChildren(parent),\"prototype\", prototype))\n  &lt;/function&gt;\n</code></pre>\n<pre><code>  &lt;function name=\"IsCloneOf\" parameters=\"object, prototype\" type=\"boolean\"&gt;\n    return (object.prototype = prototype)\n  &lt;/function&gt;\n</code></pre>\n<pre><code>  &lt;function name=\"ScopeReachableClonesOf\" parameters=\"prototype\" type=\"objectlist\"&gt;\n    return (FilterByAttribute(ScopeReachable(), \"prototype\", prototype))\n  &lt;/function&gt;\n</code></pre>\n<pre><code>  &lt;function name=\"GetRandomReachableCloneOf\" parameters=\"prototype\" type=\"object\"&gt;\n    PickOneObject (ScopeReachableClonesOf(prototype))\n  &lt;/function&gt;\n</code></pre>\n<pre><code>  &lt;function name=\"AnyReachableCloneGetBoolean\" parameters=\"prototype, attribute\" type=\"boolean\"&gt;\n    return (ListCount(FilterByAttribute(ScopeReachableClonesOf(prototype), attribute, true))&gt;0)\n  &lt;/function&gt;\n</code></pre>\n<pre><code>  &lt;!-- This function written by mrangel --&gt;\n  &lt;function name=\"GetReachableClonesWithBoolean\" parameters=\"prototype, attribute\" type=\"objectlist\"&gt;\n    return (FilterByAttribute(ScopeReachableClonesOf(prototype), attribute, true))\n  &lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2018-02-27T02:53:44.9562452Z",
      "LastEditDate": "2018-02-28T14:24:09.3833696Z",
      "link": null
    },
    {
      "PostId": "f0aa3aac-6e81-4dfd-a0b7-33ef40ff4908",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In ReachableClonesGetBoolean, you're testing if one or more clones has that flag. In that case, once you found it there's no need to loop over the remaining clones (and there's actually no need to loop over all the reachable objects to find out if one is a clone. In this case, you can make it faster by:\r\n```\r\n  <function name=\"ReachableClonesGetBoolean\" parameters=\"prototype, attribute\" type=\"boolean\">\r\n    foreach (o, ScopeReachable()) {\r\n      if (HasObject(o, \"prototype\")) {\r\n        if (GetBoolean(o,attribute)) {\r\n          if (o.prototype = prototype) {\r\n            return (true)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return (false)\r\n  </function>\r\n```\r\n\r\nHowever, I'm not sure what you'd use this function for. Every case I can think of, it would be more useful to return a list of clones with that attribute; or the number of them. In which case you can't stop as soon as you find one, so you'd do:\r\n```\r\n  <function name=\"GetReachableClonesWithBoolean\" parameters=\"prototype, attribute\" type=\"objectlist\">\r\n    return (FilterByAttribute(ScopeReachableClones(), attribute, true))\r\n  </function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>In ReachableClonesGetBoolean, you're testing if one or more clones has that flag. In that case, once you found it there's no need to loop over the remaining clones (and there's actually no need to loop over all the reachable objects to find out if one is a clone. In this case, you can make it faster by:</p>\n<pre><code>  &lt;function name=\"ReachableClonesGetBoolean\" parameters=\"prototype, attribute\" type=\"boolean\"&gt;\n    foreach (o, ScopeReachable()) {\n      if (HasObject(o, \"prototype\")) {\n        if (GetBoolean(o,attribute)) {\n          if (o.prototype = prototype) {\n            return (true)\n          }\n        }\n      }\n    }\n    return (false)\n  &lt;/function&gt;\n</code></pre>\n<p>However, I'm not sure what you'd use this function for. Every case I can think of, it would be more useful to return a list of clones with that attribute; or the number of them. In which case you can't stop as soon as you find one, so you'd do:</p>\n<pre><code>  &lt;function name=\"GetReachableClonesWithBoolean\" parameters=\"prototype, attribute\" type=\"objectlist\"&gt;\n    return (FilterByAttribute(ScopeReachableClones(), attribute, true))\n  &lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2018-02-27T03:43:22.5785719Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "32f40f6a-0c58-400b-bb9e-f1be0c79e413",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Aha!\r\n\r\nGood stuff!\r\n\r\n---\r\n```ReachableClonesGetBoolean()```\r\nI changed it to return the first time it finds a clone with the attribute set to true.\r\n\r\nThis is to quickly check if the player has access to something like a cloned lantern which is currently switched on.\r\n\r\n---\r\n\r\nI've got ```ScopeReachableClones()``` to return the object list.",
      "EditableFormat": "markdown",
      "HTML": "<p>Aha!</p>\n<p>Good stuff!</p>\n<hr>\n<p><code>ReachableClonesGetBoolean()</code><br>\nI changed it to return the first time it finds a clone with the attribute set to true.</p>\n<p>This is to quickly check if the player has access to something like a cloned lantern which is currently switched on.</p>\n<hr>\n<p>I've got <code>ScopeReachableClones()</code> to return the object list.</p>\n\n",
      "PostDate": "2018-02-27T11:46:47.881326Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "540b2645-fae8-4efb-a0ee-6ff83f70974d",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**NOTE: ```ReachableClonesGetBoolean()``` has recently been changed to ```AnyReachableCloneGetBoolean()```.**\r\n\r\n---\r\n\r\nThe purpose of ```ReachableClonesGetBoolean()```?\r\n\r\nWe have a friend who is a text-processor abuser.\r\n\r\nThis anonymous person is also very much into cloning.\r\n\r\nThere is so much code written at this point, going back and doing away any text-processor stuff is out of the question.\r\n\r\n...but we can replace bits and pieces to make things work.\r\n\r\nE.g.,\r\n\r\nSay there is a ```lamp``` object in an out of world room.  It's sole purpose is to be cloned.\r\n\r\nNow, at some point during play, we want to know if a clone of lamp which is reachable is switched on.\r\n\r\nThere are many ways to approach this, I know, but the code consists of text-processor stuff nested inside each other numerous times and strung together more intricately than ...  well, than I've ever seen!  And it all works, except for a few bits concerning clones.\r\n\r\nSo, where there is something like:\r\n```\r\n{either lamp.switchedon:but at least you've got the lamp providing light.|and it's too bad you haven't switched that lamp on!}\r\n```\r\n\r\n...we could put:\r\n```\r\n{either \"+ReachableClonesGetBoolean(lamp,\"switchedon\")+\":but at least you've got the lamp providing light.|and it's too bad you haven't switched that lamp on!}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>NOTE: <code>ReachableClonesGetBoolean()</code> has recently been changed to <code>AnyReachableCloneGetBoolean()</code>.</strong></p>\n<hr>\n<p>The purpose of <code>ReachableClonesGetBoolean()</code>?</p>\n<p>We have a friend who is a text-processor abuser.</p>\n<p>This anonymous person is also very much into cloning.</p>\n<p>There is so much code written at this point, going back and doing away any text-processor stuff is out of the question.</p>\n<p>...but we can replace bits and pieces to make things work.</p>\n<p>E.g.,</p>\n<p>Say there is a <code>lamp</code> object in an out of world room.  It's sole purpose is to be cloned.</p>\n<p>Now, at some point during play, we want to know if a clone of lamp which is reachable is switched on.</p>\n<p>There are many ways to approach this, I know, but the code consists of text-processor stuff nested inside each other numerous times and strung together more intricately than ...  well, than I've ever seen!  And it all works, except for a few bits concerning clones.</p>\n<p>So, where there is something like:</p>\n<pre><code>{either lamp.switchedon:but at least you've got the lamp providing light.|and it's too bad you haven't switched that lamp on!}\n</code></pre>\n<p>...we could put:</p>\n<pre><code>{either \"+ReachableClonesGetBoolean(lamp,\"switchedon\")+\":but at least you've got the lamp providing light.|and it's too bad you haven't switched that lamp on!}\n</code></pre>\n\n",
      "PostDate": "2018-02-27T16:29:33.2280819Z",
      "LastEditDate": "2018-02-28T14:26:09.9040221Z",
      "link": null
    },
    {
      "PostId": "35a2df2b-f22b-4207-a913-765b51f754cb",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hmm ... very specific case there. I can come up with a few more edge cases where that function could be useful. But they all seem to be tied in with hysterical raisins.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hmm ... very specific case there. I can come up with a few more edge cases where that function could be useful. But they all seem to be tied in with hysterical raisins.</p>\n\n",
      "PostDate": "2018-02-27T17:13:38.115199Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5a6af8a2-2482-4771-8c71-e0e098799c4c",
      "UserId": 227864,
      "Username": "Talon",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3b6191c9adc337e83fec8e293e3fc584?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This looks like some very useful stuff, Im notorious for using clones(Generating npcs/monsters and so on) having functions to help work with em can only help",
      "EditableFormat": "markdown",
      "HTML": "<p>This looks like some very useful stuff, Im notorious for using clones(Generating npcs/monsters and so on) having functions to help work with em can only help</p>\n\n",
      "PostDate": "2018-02-27T17:29:12.6408063Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "895822ac-3dd4-4b5a-8e89-7e11b2b0d08e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">[mrangel](http://textadventures.co.uk/user/view/15sc1UtrKE_AtrcyYd1vOw/mrangel) [said](http://textadventures.co.uk/forum/quest/topic/fysbpd5iveywmt3zfdf8qw/functions-to-deal-with-clones#35a2df2b-f22b-4207-a913-765b51f754cb): **\"...hysterical raisins...\"**\r\n\r\nVery punny!\r\n\r\n>[Talon](http://textadventures.co.uk/user/view/6UteN7nhhEi5ktmM4pviWQ/talon) [said](http://textadventures.co.uk/forum/quest/topic/fysbpd5iveywmt3zfdf8qw/functions-to-deal-with-clones#5a6af8a2-2482-4771-8c71-e0e098799c4c): **\"This looks like some very useful stuff, I'm notorious for using clones...\"**\r\n\r\nRock and roll!\r\n\r\nFeel free to share any code you may have cooked up (or request a function we're overlooking)!",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p><a href=\"http://textadventures.co.uk/user/view/15sc1UtrKE_AtrcyYd1vOw/mrangel\">mrangel</a> <a href=\"http://textadventures.co.uk/forum/quest/topic/fysbpd5iveywmt3zfdf8qw/functions-to-deal-with-clones#35a2df2b-f22b-4207-a913-765b51f754cb\">said</a>: <strong>\"...hysterical raisins...\"</strong></p>\n</blockquote>\n<p>Very punny!</p>\n<blockquote>\n<p><a href=\"http://textadventures.co.uk/user/view/6UteN7nhhEi5ktmM4pviWQ/talon\">Talon</a> <a href=\"http://textadventures.co.uk/forum/quest/topic/fysbpd5iveywmt3zfdf8qw/functions-to-deal-with-clones#5a6af8a2-2482-4771-8c71-e0e098799c4c\">said</a>: <strong>\"This looks like some very useful stuff, I'm notorious for using clones...\"</strong></p>\n</blockquote>\n<p>Rock and roll!</p>\n<p>Feel free to share any code you may have cooked up (or request a function we're overlooking)!</p>\n\n",
      "PostDate": "2018-02-27T18:03:04.8484189Z",
      "LastEditDate": "2018-02-27T18:04:09.793214Z",
      "link": null
    }
  ]
}
