{
  "Topic": {
    "TopicId": "mac0sqkyqucrei3chwnc9w",
    "ForumId": "10",
    "Title": " A puzzle about carrying too much",
    "LastUpdated": "2019-11-06T19:32:21.4042331Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "3486bf19-91a8-45b9-916f-2b41cb668fe0",
      "UserId": 77575,
      "Username": "Juniper200",
      "AvatarUrl": "https://i.imgur.com/ps2US7Cb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "My player character really loves books. At one point, he'll be in a bookshop picking up books he'll need to research a task. I'd like to have him pick up, let's say five books and then print a message like, \"That's all the books you can carry, and you don't want to put any back.\" But the character loves books, right? So he might try to pick up another book despite carrying too many. Then he'd drop the books he's carrying and find that the last book he was trying to pick up was actually the book he needed all along.\r\n\r\nSo this is something I've been noodling over for a little while. I'm not actually going to implement any inventory limits (weight, volume, etc.) in the game since this  is the only place inventory limits come up. My biggest issue is that if there are six books that can be picked up, and they can be picked up in any order, how do I make the last one the right book? \r\n\r\nI was thinking I could create a list or an array that adds an item every time the player picks up an item with`\"book*`in the object name. I'd have something that checks how many items are in the list/array/whichever. Once it hits five, the game prints the message about this being all the books you can carry. If it hits six, a script runs that drops the other books, changes the last book's alias to the title the character was looking for and then prints the descriptive text for the incident. \r\n\r\nDoes that sound like a real thing that could happen? If it is, I'm not totally clear on how to implement it. I would love to hear what you think and see your takes on how to execute the puzzle. \r\n\r\nThanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>My player character really loves books. At one point, he'll be in a bookshop picking up books he'll need to research a task. I'd like to have him pick up, let's say five books and then print a message like, \"That's all the books you can carry, and you don't want to put any back.\" But the character loves books, right? So he might try to pick up another book despite carrying too many. Then he'd drop the books he's carrying and find that the last book he was trying to pick up was actually the book he needed all along.</p>\n<p>So this is something I've been noodling over for a little while. I'm not actually going to implement any inventory limits (weight, volume, etc.) in the game since this  is the only place inventory limits come up. My biggest issue is that if there are six books that can be picked up, and they can be picked up in any order, how do I make the last one the right book?</p>\n<p>I was thinking I could create a list or an array that adds an item every time the player picks up an item with<code>\"book*</code>in the object name. I'd have something that checks how many items are in the list/array/whichever. Once it hits five, the game prints the message about this being all the books you can carry. If it hits six, a script runs that drops the other books, changes the last book's alias to the title the character was looking for and then prints the descriptive text for the incident.</p>\n<p>Does that sound like a real thing that could happen? If it is, I'm not totally clear on how to implement it. I would love to hear what you think and see your takes on how to execute the puzzle.</p>\n<p>Thanks!</p>\n\n",
      "PostDate": "2019-11-06T19:32:21.4042331Z",
      "LastEditDate": "2019-11-06T19:32:56.9722775Z",
      "link": null
    },
    {
      "PostId": "235eef5a-a263-419a-992c-2bbe65065954",
      "UserId": 418279,
      "Username": "Zesc",
      "AvatarUrl": "https://i.imgur.com/bGcfC7sb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hmm... as i see this, all you need to do is to save the first book which is picked up, and after that the number of books. That way, you can refer to the bottom most book explicitly, probably even use unique flavour text on each one.\r\n\r\nAnd you can check the items in the inventory for this, of course, but my (allegedly dumb) way to do it would be having a counter/function run every time a book is picked up. So other stuff in the pockets aren't counted and so on.\r\n\r\nI'm not as fit when it comes to posting code as other's here, but i hope you get what i mean.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hmm... as i see this, all you need to do is to save the first book which is picked up, and after that the number of books. That way, you can refer to the bottom most book explicitly, probably even use unique flavour text on each one.</p>\n<p>And you can check the items in the inventory for this, of course, but my (allegedly dumb) way to do it would be having a counter/function run every time a book is picked up. So other stuff in the pockets aren't counted and so on.</p>\n<p>I'm not as fit when it comes to posting code as other's here, but i hope you get what i mean.</p>\n\n",
      "PostDate": "2019-11-06T19:49:07.7359035Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8d934839-6995-44d0-adff-06118c2bc050",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n\r\n----------------\r\n\r\nyou basically got the idea correct already...\r\n\r\nuse a String List Attribute or an Object List Attribute (in quest, Lists, are basically the same as Arrays)\r\n\r\nIMPORTANT: there's a difference between a 'STRING' Data Type (using a String List Attribute) and an 'OBJECT REFERENCE/POINTER (ADDRESS)' Data Type (using an Object List Attribute)\r\n\r\npush/enque/add functionality: check if at item quantity limit via 'if (ListCount(NAME_OF_OBJECT.NAME_OF_LIST_ATTRIBUTE)) = MAX_QUANTITY' Function, for adding new item to list or not ('msg' that the list is full and/or ask-to-or-do-so 'clear/empty' the entire List and/or to remove a single item, either from the front, the back, or anywhere, coding required varies, along if desired sorting, such coding may be required, and/or check if the correct/required/needed item is in the list or not, if not, than can remove an item from list or clear/empty the entire list, lots of ways to do your code designing/methods)\r\n\r\npop/deque/remove functionality:\r\n\r\nclear/empty/remove-all functionality:\r\n\r\nview/peek/ functionality:\r\n\r\nsearch/find/get functionality:\r\n\r\nsort functionality:\r\n\r\ncopy functionality:\r\n\r\ndisplay list functionality: quest has built-in function to do this: DisplayList (NAME_OF_BJECT.NAME_OF_LIST_ATTRIBUTE, 0_or_1 or false_or_true), (1/true: numbered or 0/false: not numbered), or you can create your own function\r\n\r\n----------------\r\n\r\nif you want more reading/info on this type of stuff (Abstract Data Structures and their Management/Handling):\r\n\r\nhttps://en.wikipedia.org/wiki/List_of_data_structures\r\n\r\nhttps://en.wikipedia.org/wiki/Linked_list\r\nhttps://en.wikipedia.org/wiki/Doubly_linked_list\r\n\r\nhttps://en.wikipedia.org/wiki/Stack_(abstract_data_type)\r\n\r\nhttps://en.wikipedia.org/wiki/Queue_(abstract_data_type)\r\nhttps://en.wikipedia.org/wiki/Double-ended_queue\r\n\r\nhttps://en.wikipedia.org/wiki/Tree_(data_structure)\r\n\r\n---------\r\n\r\nquest documentation:\r\n\r\nhttps://docs.textadventures.co.uk/quest/\r\n\r\nhttps://docs.textadventures.co.uk/quest/tutorial/\r\n\r\nhttps://docs.textadventures.co.uk/quest/elements/ (the \"physical things\" of quest: the OBJECTS/Elements of quest's engine/internal coding, which includes the 'Object' Element/OBJECT)\r\n\r\nhttps://docs.textadventures.co.uk/quest/elements/object.html (the built-in Attributes of the 'Object' Element/OBJECT)\r\n\r\nhttps://docs.textadventures.co.uk/quest/types/ (Data/Attribute/Value Types)\r\n\r\nhttps://docs.textadventures.co.uk/quest/null.html (more details about the 'null' Data/Attribute/Value/Object Type)\r\n\r\nhttps://docs.textadventures.co.uk/quest/scripts/\r\n\r\nhttps://docs.textadventures.co.uk/quest/functions/ (categorical order)\r\nhttps://docs.textadventures.co.uk/quest/functions/index_allfunctions.html (alphabetical order)\r\n\r\nhttps://docs.textadventures.co.uk/quest/using_lists.html\r\n\r\nhttps://docs.textadventures.co.uk/quest/using_dictionaries.html\r\n\r\nsome more useful Functions (see the 'functions: categorical/alphabetical' links above):\r\n\r\n1. the 'HasXXX' Functions\r\n2. the 'GetXXX' Functions\r\n3. the 'IsXXX' Functions\r\n4. the 'ToXXX' Functions\r\n5. the 'AllXXX' Functions\r\n6. the list functions: https://docs.textadventures.co.uk/quest/functions/#list\r\n7. the dictionary functions: https://docs.textadventures.co.uk/quest/functions/#dictionary\r\n8.  the 'ScopeXXX' Functions\r\n9. the 'string manipulation/formatting' functions: https://docs.textadventures.co.uk/quest/functions/#string",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>you basically got the idea correct already...</p>\n<p>use a String List Attribute or an Object List Attribute (in quest, Lists, are basically the same as Arrays)</p>\n<p>IMPORTANT: there's a difference between a 'STRING' Data Type (using a String List Attribute) and an 'OBJECT REFERENCE/POINTER (ADDRESS)' Data Type (using an Object List Attribute)</p>\n<p>push/enque/add functionality: check if at item quantity limit via 'if (ListCount(NAME_OF_OBJECT.NAME_OF_LIST_ATTRIBUTE)) = MAX_QUANTITY' Function, for adding new item to list or not ('msg' that the list is full and/or ask-to-or-do-so 'clear/empty' the entire List and/or to remove a single item, either from the front, the back, or anywhere, coding required varies, along if desired sorting, such coding may be required, and/or check if the correct/required/needed item is in the list or not, if not, than can remove an item from list or clear/empty the entire list, lots of ways to do your code designing/methods)</p>\n<p>pop/deque/remove functionality:</p>\n<p>clear/empty/remove-all functionality:</p>\n<p>view/peek/ functionality:</p>\n<p>search/find/get functionality:</p>\n<p>sort functionality:</p>\n<p>copy functionality:</p>\n<p>display list functionality: quest has built-in function to do this: DisplayList (NAME_OF_BJECT.NAME_OF_LIST_ATTRIBUTE, 0_or_1 or false_or_true), (1/true: numbered or 0/false: not numbered), or you can create your own function</p>\n<hr>\n<p>if you want more reading/info on this type of stuff (Abstract Data Structures and their Management/Handling):</p>\n<p>https://en.wikipedia.org/wiki/List_of_data_structures</p>\n<p>https://en.wikipedia.org/wiki/Linked_list<br>\nhttps://en.wikipedia.org/wiki/Doubly_linked_list</p>\n<p>https://en.wikipedia.org/wiki/Stack_(abstract_data_type)</p>\n<p>https://en.wikipedia.org/wiki/Queue_(abstract_data_type)<br>\nhttps://en.wikipedia.org/wiki/Double-ended_queue</p>\n<p>https://en.wikipedia.org/wiki/Tree_(data_structure)</p>\n<hr>\n<p>quest documentation:</p>\n<p>https://docs.textadventures.co.uk/quest/</p>\n<p>https://docs.textadventures.co.uk/quest/tutorial/</p>\n<p>https://docs.textadventures.co.uk/quest/elements/ (the \"physical things\" of quest: the OBJECTS/Elements of quest's engine/internal coding, which includes the 'Object' Element/OBJECT)</p>\n<p>https://docs.textadventures.co.uk/quest/elements/object.html (the built-in Attributes of the 'Object' Element/OBJECT)</p>\n<p>https://docs.textadventures.co.uk/quest/types/ (Data/Attribute/Value Types)</p>\n<p>https://docs.textadventures.co.uk/quest/null.html (more details about the 'null' Data/Attribute/Value/Object Type)</p>\n<p>https://docs.textadventures.co.uk/quest/scripts/</p>\n<p>https://docs.textadventures.co.uk/quest/functions/ (categorical order)<br>\nhttps://docs.textadventures.co.uk/quest/functions/index_allfunctions.html (alphabetical order)</p>\n<p>https://docs.textadventures.co.uk/quest/using_lists.html</p>\n<p>https://docs.textadventures.co.uk/quest/using_dictionaries.html</p>\n<p>some more useful Functions (see the 'functions: categorical/alphabetical' links above):</p>\n<ol>\n<li>the 'HasXXX' Functions</li>\n<li>the 'GetXXX' Functions</li>\n<li>the 'IsXXX' Functions</li>\n<li>the 'ToXXX' Functions</li>\n<li>the 'AllXXX' Functions</li>\n<li>the list functions: https://docs.textadventures.co.uk/quest/functions/#list</li>\n<li>the dictionary functions: https://docs.textadventures.co.uk/quest/functions/#dictionary</li>\n<li>the 'ScopeXXX' Functions</li>\n<li>the 'string manipulation/formatting' functions: https://docs.textadventures.co.uk/quest/functions/#string</li>\n</ol>\n\n",
      "PostDate": "2019-11-07T00:39:15.2786335Z",
      "LastEditDate": "2019-11-07T01:07:04.4014462Z",
      "link": null
    },
    {
      "PostId": "af4bff60-16ba-43d2-b505-c0a0fe4b7bbb",
      "UserId": 77575,
      "Username": "Juniper200",
      "AvatarUrl": "https://i.imgur.com/ps2US7Cb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's really helpful! Thanks!\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>That's really helpful! Thanks!</p>\n\n",
      "PostDate": "2019-11-08T00:32:05.676013Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
