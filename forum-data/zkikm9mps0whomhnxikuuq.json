{
  "Topic": {
    "TopicId": "zkikm9mps0whomhnxikuuq",
    "ForumId": "10",
    "Title": "DictionaryAdd error",
    "LastUpdated": "2024-06-05T05:20:05.3549183Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "b310afbf-9c35-49b0-b988-235573fa154e",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It says in documentation that the DictionaryAdd function was updated for 5.8 so that an error didn't happen when adding a duplicate.  It would just remove it quietly and replace with the new one.\r\n\r\nBut I'm getting this error:\r\nError running script: Error adding key 'xp' to dictionary: An item with the same key has already been added.\r\n\r\nI checked the DictionaryAdd function, and it looked alright, but just in case I modified it to make it a little clearer, and still got the same error.  my updated version is this...\r\n\r\n```\r\n  <function name=\"DictionaryAdd\" parameters=\"dict, key, val\">\r\n    if (dict = null or TypeOf(dict)=\"object\") {\r\n      error (\"DictionaryAdd:  Dictionary does not exist!\")\r\n    }\r\n    if (DictionaryContains(dict, key)) {\r\n      dictionary remove (dict, key)\r\n      dictionary add (dict, key, val)\r\n    }\r\n    else {\r\n      dictionary add (dict, key, val)\r\n    }\r\n  </function>\r\n```\r\n\r\nPlease and thank you for any help!",
      "EditableFormat": "markdown",
      "HTML": "<p>It says in documentation that the DictionaryAdd function was updated for 5.8 so that an error didn't happen when adding a duplicate.  It would just remove it quietly and replace with the new one.</p>\n<p>But I'm getting this error:<br>\nError running script: Error adding key 'xp' to dictionary: An item with the same key has already been added.</p>\n<p>I checked the DictionaryAdd function, and it looked alright, but just in case I modified it to make it a little clearer, and still got the same error.  my updated version is this...</p>\n<pre><code>  &lt;function name=\"DictionaryAdd\" parameters=\"dict, key, val\"&gt;\n    if (dict = null or TypeOf(dict)=\"object\") {\n      error (\"DictionaryAdd:  Dictionary does not exist!\")\n    }\n    if (DictionaryContains(dict, key)) {\n      dictionary remove (dict, key)\n      dictionary add (dict, key, val)\n    }\n    else {\n      dictionary add (dict, key, val)\n    }\n  &lt;/function&gt;\n</code></pre>\n<p>Please and thank you for any help!</p>\n\n",
      "PostDate": "2024-06-05T05:20:05.3549183Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9bd91440-277a-4c04-8a69-ef4810c87494",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok, so I couldn't figure out how to fix the problem by modifying DictionaryAdd\r\n\r\nIt might be a lost cause, as I read this:\r\nhttps://docs.textadventures.co.uk/quest/using_dictionaries.html\r\n\r\nBut... the checks that it gives to try helped me find a workaround.   I ended up changing the function that was adding to the dictionary by using a check from the documentation instead.\r\n\r\n```\r\nif (\"xp\" in game.pov.statusattributes) {\r\n}\r\nelse {\r\n  dictionary add (game.pov.statusattributes, \"xp\", \"XP: !\")\r\n}\r\n```\r\nI had to run the check for each attribute being possibly added in the script.\r\nThis seems to have made the engine happy and everything working...",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok, so I couldn't figure out how to fix the problem by modifying DictionaryAdd</p>\n<p>It might be a lost cause, as I read this:<br>\nhttps://docs.textadventures.co.uk/quest/using_dictionaries.html</p>\n<p>But... the checks that it gives to try helped me find a workaround.   I ended up changing the function that was adding to the dictionary by using a check from the documentation instead.</p>\n<pre><code>if (\"xp\" in game.pov.statusattributes) {\n}\nelse {\n  dictionary add (game.pov.statusattributes, \"xp\", \"XP: !\")\n}\n</code></pre>\n<p>I had to run the check for each attribute being possibly added in the script.<br>\nThis seems to have made the engine happy and everything working...</p>\n\n",
      "PostDate": "2024-06-05T06:22:41.8290627Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "79ae5dc5-9967-4fa8-9011-fd271c6ffce2",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Edit: Good to see it works. But I can't figure out why that should make a difference.",
      "EditableFormat": "markdown",
      "HTML": "<p>Edit: Good to see it works. But I can't figure out why that should make a difference.</p>\n\n",
      "PostDate": "2024-06-05T06:28:07.4355052Z",
      "LastEditDate": "2024-06-05T06:30:59.3206281Z",
      "link": null
    },
    {
      "PostId": "4dbdfb3e-e159-44e1-8eb0-2da6eb820c7b",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hmmm... It might be something like what you're describing.\r\n\r\nThe context is that I'm updating to integrate Pixie's CombatLib into my core as a \"feature.\"\r\n (if everything goes smoothly, I'll figure out how to work github and share \"core3\" with everyone plus the documentation of any updates and additions.)\r\n\r\nSo in the case of using Pixie's CombatLib, ChangePOV doesn't do all that it needs to.\r\nPixie has a function called \"CombatInitialise,\" which sets a whole bunch of attributes needed for the library to check.  It sets some to the game object, and others to game.pov.\r\n\r\nI've created a CombatInitialiseChgPOV to be called in the updated \"InitPOV\" function if the game object has the CombatLib Feature enabled.\r\n\r\nAll this to say that in context, the DictionaryAdds are being done every time the POV changes to the \"new\" POV object.  But if you're changing to something that already had that in the dictionary, then it was erroring before my workaround.\r\n\r\nMy current CombatInitialiseChgPOV function looks like this:\r\n\r\n```\r\nif (game.povstatusattributes = null) {\r\n  game.povstatusattributes = NewStringDictionary()\r\n}\r\nif (game.pov.statusattributes = null) {\r\n  game.pov.statusattributes = NewStringDictionary()\r\n}\r\nif (not HasScript (game.pov, \"changedhitpoints\")) {\r\n  game.pov.changedhitpoints = scriptholder.changedhitpoints\r\n}\r\nif (not HasScript (game.pov, \"changedstamina\")) {\r\n  game.pov.changedstamina = scriptholder.changedstamina\r\n}\r\nif (not HasScript (game.pov, \"changedmoney\")) {\r\n  game.pov.changedmoney = scriptholder.changedmoney\r\n}\r\nif (not HasScript (game.pov, \"changedequipped\")) {\r\n  game.pov.changedequipped = scriptholder.changedequipped\r\n}\r\nif (not HasScript (game.pov, \"changedshield\")) {\r\n  game.pov.changedshield = scriptholder.changedshield\r\n}\r\natts = \"money;turncount;armour;armour10;stamina;xp;ob_bonus;next_round_ob_bonus;db_bonus;defence;magiccurse;sneaklevel;magiccountdown\"\r\natts = atts + \";attackbonus;defencebonus;armourbonus;magicbonus;damagebonus\"\r\natts = atts + \";strength;agility;stamina;intelligence;pointsleft;level\"\r\nforeach (s, Split(atts, \";\")) {\r\n  if (not HasInt (game.pov, s)) {\r\n    set (game.pov, s, 0)\r\n  }\r\n}\r\nif (\"xp\" in game.pov.statusattributes) {\r\n}\r\nelse {\r\n  dictionary add (game.pov.statusattributes, \"xp\", \"XP: !\")\r\n}\r\nif (\"hitpoints\" in game.pov.statusattributes) {\r\n}\r\nelse {\r\n  dictionary add (game.pov.statusattributes, \"hitpoints\", \"Hitpoints: !\")\r\n}\r\nif (\"money\" in game.pov.statusattributes) {\r\n}\r\nelse {\r\n  dictionary add (game.pov.statusattributes, \"money\", \"Money: !\")\r\n}\r\ngame.pov.status = \"\"\r\ngame.pov.immunities = NewStringList()\r\nif (game.pov.equipped = null) {\r\n  game.pov.equipped = game.pov.defaultunequipped\r\n}\r\nif (HasAttribute(game.pov, \"dead\")) {\r\n}\r\nelse {\r\n  game.pov.dead = false\r\n}\r\nif (not HasAttribute(game.pov, \"hitpoints\")) {\r\n  game.pov.hitpoints = CalcFullHits()\r\n}\r\nif (game.pov.hitpoints < 1) {\r\n  if (GetBoolean(game.pov, \"dead\")) {\r\n    msg (\"It's dead, you can't change into it!\")\r\n  }\r\n  else {\r\n    game.pov.hitpoints = CalcFullHits()\r\n  }\r\n}\r\nelse {\r\n}\r\ngame.pov.hitpointmax = CalcFullHits()\r\nUpdateStatus\r\nif (not HasAttribute(game, \"statnames\")) {\r\n  game.statnames = NewStringDictionary()\r\n}\r\nif (not DictionaryContains(game.statnames, \"strength\")) {\r\n  dictionary add (game.statnames, \"strength\", \"Strength\")\r\n}\r\nif (not DictionaryContains(game.statnames, \"stamina\")) {\r\n  dictionary add (game.statnames, \"stamina\", \"Stamina\")\r\n}\r\nif (not DictionaryContains(game.statnames, \"agility\")) {\r\n  dictionary add (game.statnames, \"agility\", \"Agility\")\r\n}\r\nif (not DictionaryContains(game.statnames, \"intelligence\")) {\r\n  dictionary add (game.statnames, \"intelligence\", \"Intelligence\")\r\n}\r\nforeach (att, game.statnames) {\r\n  if (not HasInt(game.pov, att)) {\r\n    set (game.pov, att, 0)\r\n  }\r\n}\r\nif (not HasAttribute(game.pov, \"statnames\")) {\r\n  game.pov.statnames = NewStringDictionary()\r\n}\r\nforeach (att, game.pov.statnames) {\r\n  if (not HasInt(game.pov, att)) {\r\n    set (game.pov, att, 0)\r\n  }\r\n}\r\nif (GetBoolean(game, \"feature_mana\")) {\r\n  if (not HasScript (game.pov, \"changedmana\")) {\r\n    game.pov.changedmana = scriptholder.changedmana\r\n  }\r\n  if (not HasScript (game.pov, \"changedmana_bonus\")) {\r\n    game.pov.changedmana_bonus = scriptholder.changedmana_bonus\r\n  }\r\n  if (not HasScript (game.pov, \"changedintelligence\")) {\r\n    game.pov.changedintelligence = scriptholder.changedintelligence\r\n  }\r\n  if (not HasScript (game.pov, \"changedmagicuser\")) {\r\n    game.pov.changedmagicuser = scriptholder.changedmagicuser\r\n  }\r\n  if (GetBoolean(game.pov, \"magicuser\")) {\r\n    if (HasAttribute(game.pov, \"mana\")) {\r\n      if (HasAttribute(game.pov, \"mana_max\")) {\r\n      }\r\n      else {\r\n        game.pov.mana_max = 0\r\n      }\r\n    }\r\n    else if (HasAttribute(game.pov, \"mana_max\")) {\r\n      if (HasAttribute(game.pov, \"mana\")) {\r\n      }\r\n      else {\r\n        game.pov.mana = 0\r\n      }\r\n    }\r\n    else {\r\n      SetMana\r\n    }\r\n    if (\"mana\" in game.pov.statusattributes) {\r\n    }\r\n    else {\r\n      dictionary add (game.pov.statusattributes, \"mana\", \"MP: !\")\r\n    }\r\n  }\r\n  else {\r\n  }\r\n}\r\nelse {\r\n}\r\nif (game.showhealth) {\r\n  if (\"health\" in game.pov.statusattributes) {\r\n  }\r\n  else {\r\n    dictionary add (game.pov.statusattributes, \"health\", \"Health: !%\")\r\n  }\r\n}\r\n```\r\nSome of the dictionary adds are because I updated InitStatusAttributes also, so that if CombatLib is enabled, then attributes are added to game.pov.statusattributes instead of game.povstatusattributes. This was for stats where I thought maybe someone might want to make a creature that didn't have a particular attribute which was auto-set by the core.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hmmm... It might be something like what you're describing.</p>\n<p>The context is that I'm updating to integrate Pixie's CombatLib into my core as a \"feature.\"<br>\n(if everything goes smoothly, I'll figure out how to work github and share \"core3\" with everyone plus the documentation of any updates and additions.)</p>\n<p>So in the case of using Pixie's CombatLib, ChangePOV doesn't do all that it needs to.<br>\nPixie has a function called \"CombatInitialise,\" which sets a whole bunch of attributes needed for the library to check.  It sets some to the game object, and others to game.pov.</p>\n<p>I've created a CombatInitialiseChgPOV to be called in the updated \"InitPOV\" function if the game object has the CombatLib Feature enabled.</p>\n<p>All this to say that in context, the DictionaryAdds are being done every time the POV changes to the \"new\" POV object.  But if you're changing to something that already had that in the dictionary, then it was erroring before my workaround.</p>\n<p>My current CombatInitialiseChgPOV function looks like this:</p>\n<pre><code>if (game.povstatusattributes = null) {\n  game.povstatusattributes = NewStringDictionary()\n}\nif (game.pov.statusattributes = null) {\n  game.pov.statusattributes = NewStringDictionary()\n}\nif (not HasScript (game.pov, \"changedhitpoints\")) {\n  game.pov.changedhitpoints = scriptholder.changedhitpoints\n}\nif (not HasScript (game.pov, \"changedstamina\")) {\n  game.pov.changedstamina = scriptholder.changedstamina\n}\nif (not HasScript (game.pov, \"changedmoney\")) {\n  game.pov.changedmoney = scriptholder.changedmoney\n}\nif (not HasScript (game.pov, \"changedequipped\")) {\n  game.pov.changedequipped = scriptholder.changedequipped\n}\nif (not HasScript (game.pov, \"changedshield\")) {\n  game.pov.changedshield = scriptholder.changedshield\n}\natts = \"money;turncount;armour;armour10;stamina;xp;ob_bonus;next_round_ob_bonus;db_bonus;defence;magiccurse;sneaklevel;magiccountdown\"\natts = atts + \";attackbonus;defencebonus;armourbonus;magicbonus;damagebonus\"\natts = atts + \";strength;agility;stamina;intelligence;pointsleft;level\"\nforeach (s, Split(atts, \";\")) {\n  if (not HasInt (game.pov, s)) {\n    set (game.pov, s, 0)\n  }\n}\nif (\"xp\" in game.pov.statusattributes) {\n}\nelse {\n  dictionary add (game.pov.statusattributes, \"xp\", \"XP: !\")\n}\nif (\"hitpoints\" in game.pov.statusattributes) {\n}\nelse {\n  dictionary add (game.pov.statusattributes, \"hitpoints\", \"Hitpoints: !\")\n}\nif (\"money\" in game.pov.statusattributes) {\n}\nelse {\n  dictionary add (game.pov.statusattributes, \"money\", \"Money: !\")\n}\ngame.pov.status = \"\"\ngame.pov.immunities = NewStringList()\nif (game.pov.equipped = null) {\n  game.pov.equipped = game.pov.defaultunequipped\n}\nif (HasAttribute(game.pov, \"dead\")) {\n}\nelse {\n  game.pov.dead = false\n}\nif (not HasAttribute(game.pov, \"hitpoints\")) {\n  game.pov.hitpoints = CalcFullHits()\n}\nif (game.pov.hitpoints &lt; 1) {\n  if (GetBoolean(game.pov, \"dead\")) {\n    msg (\"It's dead, you can't change into it!\")\n  }\n  else {\n    game.pov.hitpoints = CalcFullHits()\n  }\n}\nelse {\n}\ngame.pov.hitpointmax = CalcFullHits()\nUpdateStatus\nif (not HasAttribute(game, \"statnames\")) {\n  game.statnames = NewStringDictionary()\n}\nif (not DictionaryContains(game.statnames, \"strength\")) {\n  dictionary add (game.statnames, \"strength\", \"Strength\")\n}\nif (not DictionaryContains(game.statnames, \"stamina\")) {\n  dictionary add (game.statnames, \"stamina\", \"Stamina\")\n}\nif (not DictionaryContains(game.statnames, \"agility\")) {\n  dictionary add (game.statnames, \"agility\", \"Agility\")\n}\nif (not DictionaryContains(game.statnames, \"intelligence\")) {\n  dictionary add (game.statnames, \"intelligence\", \"Intelligence\")\n}\nforeach (att, game.statnames) {\n  if (not HasInt(game.pov, att)) {\n    set (game.pov, att, 0)\n  }\n}\nif (not HasAttribute(game.pov, \"statnames\")) {\n  game.pov.statnames = NewStringDictionary()\n}\nforeach (att, game.pov.statnames) {\n  if (not HasInt(game.pov, att)) {\n    set (game.pov, att, 0)\n  }\n}\nif (GetBoolean(game, \"feature_mana\")) {\n  if (not HasScript (game.pov, \"changedmana\")) {\n    game.pov.changedmana = scriptholder.changedmana\n  }\n  if (not HasScript (game.pov, \"changedmana_bonus\")) {\n    game.pov.changedmana_bonus = scriptholder.changedmana_bonus\n  }\n  if (not HasScript (game.pov, \"changedintelligence\")) {\n    game.pov.changedintelligence = scriptholder.changedintelligence\n  }\n  if (not HasScript (game.pov, \"changedmagicuser\")) {\n    game.pov.changedmagicuser = scriptholder.changedmagicuser\n  }\n  if (GetBoolean(game.pov, \"magicuser\")) {\n    if (HasAttribute(game.pov, \"mana\")) {\n      if (HasAttribute(game.pov, \"mana_max\")) {\n      }\n      else {\n        game.pov.mana_max = 0\n      }\n    }\n    else if (HasAttribute(game.pov, \"mana_max\")) {\n      if (HasAttribute(game.pov, \"mana\")) {\n      }\n      else {\n        game.pov.mana = 0\n      }\n    }\n    else {\n      SetMana\n    }\n    if (\"mana\" in game.pov.statusattributes) {\n    }\n    else {\n      dictionary add (game.pov.statusattributes, \"mana\", \"MP: !\")\n    }\n  }\n  else {\n  }\n}\nelse {\n}\nif (game.showhealth) {\n  if (\"health\" in game.pov.statusattributes) {\n  }\n  else {\n    dictionary add (game.pov.statusattributes, \"health\", \"Health: !%\")\n  }\n}\n</code></pre>\n<p>Some of the dictionary adds are because I updated InitStatusAttributes also, so that if CombatLib is enabled, then attributes are added to game.pov.statusattributes instead of game.povstatusattributes. This was for stats where I thought maybe someone might want to make a creature that didn't have a particular attribute which was auto-set by the core.</p>\n\n",
      "PostDate": "2024-06-05T06:46:29.2887199Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c3739d4b-e9da-4c61-ad39-665836f67cd6",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\nIt looks like you are actually using the `dictionary add`Quest Script in your scripts?\r\n\r\nI'm not sure, though, because I see you modifying the `DictionaryAdd` function in your posts...\r\n\r\nIt is slightly muddled. Before Quest 5.8, all that existed was the `dictionary add` Quest script, which throws an error if the dictionary already has the same key. Quest 5.8 introduced a function called `DictionaryAdd` to handle things if the key already exists.\r\n\r\nI just made a test game, and `DictionaryAdd` works for me.\r\n\r\n```xml\r\n<!--Saved by Quest 5.8.7753.35184-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"DictionaryAdd Tester\">\r\n    <gameid>804fad71-5fa1-4b9f-ac11-9fd5d8b4ddf8</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2024</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n      <statusattributes type=\"stringdictionary\">\r\n      <item>\r\n        <key>xp</key>\r\n        <value>XP: !</value>\r\n      </item>\r\n    </statusattributes>\r\n    <xp type=\"int\">0</xp>\r\n    </object>\r\n  </object>\r\n  <command name=\"test\">\r\n    <pattern>test</pattern>\r\n    <script><![CDATA[\r\n      msg (\"Attempting to add <code>xp</code> to game.pov.statusattributes when it already exists as set up in the editor...\")\r\n      msg(\"\")\r\n      msg(\"Before the change, game.pov.statusattributes[\\\"xp\\\"]:\")\r\n      msg(game.pov.statusattributes[\"xp\"])\r\n      msg(\"\")\r\n      DictionaryAdd (game.pov.statusattributes, \"xp\", \"XXPP !!\")\r\n      msg(\"After the change, game.pov.statusattributes[\\\"xp\\\"]:\")\r\n      msg(game.pov.statusattributes[\"xp\"])\r\n    ]]></script>\r\n  </command>\r\n</asl>\r\n```\r\n\r\n---\r\n> ### DictionaryAdd Tester\r\n>\r\n> You are in a room.\r\n>\r\n> \\> test\r\n> Attempting to add xp to game.pov.statusattributes when it already exists as set up in the editor...\r\n> \r\n> Before the change, game.pov.statusattributes[\"xp\"]:\r\n> XP: !\r\n> \r\n> After the change, game.pov.statusattributes[\"xp\"]:\r\n> XXPP !!",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p>It looks like you are actually using the <code>dictionary add</code>Quest Script in your scripts?</p>\n<p>I'm not sure, though, because I see you modifying the <code>DictionaryAdd</code> function in your posts...</p>\n<p>It is slightly muddled. Before Quest 5.8, all that existed was the <code>dictionary add</code> Quest script, which throws an error if the dictionary already has the same key. Quest 5.8 introduced a function called <code>DictionaryAdd</code> to handle things if the key already exists.</p>\n<p>I just made a test game, and <code>DictionaryAdd</code> works for me.</p>\n<pre><code>&lt;!--Saved by Quest 5.8.7753.35184--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"DictionaryAdd Tester\"&gt;\n    &lt;gameid&gt;804fad71-5fa1-4b9f-ac11-9fd5d8b4ddf8&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2024&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n      &lt;statusattributes type=\"stringdictionary\"&gt;\n      &lt;item&gt;\n        &lt;key&gt;xp&lt;/key&gt;\n        &lt;value&gt;XP: !&lt;/value&gt;\n      &lt;/item&gt;\n    &lt;/statusattributes&gt;\n    &lt;xp type=\"int\"&gt;0&lt;/xp&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;command name=\"test\"&gt;\n    &lt;pattern&gt;test&lt;/pattern&gt;\n    &lt;script&gt;&lt;![CDATA[\n      msg (\"Attempting to add &lt;code&gt;xp&lt;/code&gt; to game.pov.statusattributes when it already exists as set up in the editor...\")\n      msg(\"\")\n      msg(\"Before the change, game.pov.statusattributes[\\\"xp\\\"]:\")\n      msg(game.pov.statusattributes[\"xp\"])\n      msg(\"\")\n      DictionaryAdd (game.pov.statusattributes, \"xp\", \"XXPP !!\")\n      msg(\"After the change, game.pov.statusattributes[\\\"xp\\\"]:\")\n      msg(game.pov.statusattributes[\"xp\"])\n    ]]&gt;&lt;/script&gt;\n  &lt;/command&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<blockquote>\n<h3>DictionaryAdd Tester</h3>\n<p>You are in a room.</p>\n<p>&gt; test<br>\nAttempting to add xp to game.pov.statusattributes when it already exists as set up in the editor...</p>\n<p>Before the change, game.pov.statusattributes[\"xp\"]:<br>\nXP: !</p>\n<p>After the change, game.pov.statusattributes[\"xp\"]:<br>\nXXPP !!</p>\n</blockquote>\n\n",
      "PostDate": "2024-09-08T17:49:54.296595Z",
      "LastEditDate": "2024-09-08T17:58:43.1119866Z",
      "link": null
    }
  ]
}
