{
  "Topic": {
    "TopicId": "t8jhx5pkh0cixjezahmq4a",
    "ForumId": "15",
    "Title": "give man boots",
    "LastUpdated": "2021-08-05T08:15:46.464278Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "ea9705af-7b5d-41b2-9f9a-720472a7d966",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I asked family members to beta-test a game, and they approached it with a whole different set of expectations. One was that they tried GIVE MAN BOOTS or just GIVE BOOTS, instead of the conventional GIVE BOOTS TO MAN.\r\n\r\nOkay, so that is a challenge.\r\n\r\nThe problem is that the Quest way to handle commands is effectively to use the joining words - TO in this case - to delimit the words.\r\n\r\nThe first step then was to refactor the parser, giving commands the responsibility of scoring themselves, \"matchItems\" (so-called because we can also match items at the same time, and use the success of that as part of the scoring). This actually makes the parser pretty simple. It just goes through the list of commands, getting each one to rate itself, keeping the one with the highest score.\r\n\r\nThen I could give my new GIVE command its own custom \"matchItems\" function. This in turn tries to match the string with items in scope, using the new `array.fromTokens` function, which in turn uses the old `parser.findInList` function the standard  \"matchItems\" function uses. Then it checks it the first item is an NPC, and if not looks for an NPC in scope.\r\n\r\nIf it matches, you end up with the same set of parameters as you would have with GIVE BOOTS TO MAN, so when it comes to executing the command the same function can be used.\r\n\r\nThe end result is that now users can do GIVE MAN BOOTS, but at the same time the parser is now much more flexible for custom commands.",
      "EditableFormat": "markdown",
      "HTML": "<p>I asked family members to beta-test a game, and they approached it with a whole different set of expectations. One was that they tried GIVE MAN BOOTS or just GIVE BOOTS, instead of the conventional GIVE BOOTS TO MAN.</p>\n<p>Okay, so that is a challenge.</p>\n<p>The problem is that the Quest way to handle commands is effectively to use the joining words - TO in this case - to delimit the words.</p>\n<p>The first step then was to refactor the parser, giving commands the responsibility of scoring themselves, \"matchItems\" (so-called because we can also match items at the same time, and use the success of that as part of the scoring). This actually makes the parser pretty simple. It just goes through the list of commands, getting each one to rate itself, keeping the one with the highest score.</p>\n<p>Then I could give my new GIVE command its own custom \"matchItems\" function. This in turn tries to match the string with items in scope, using the new <code>array.fromTokens</code> function, which in turn uses the old <code>parser.findInList</code> function the standard  \"matchItems\" function uses. Then it checks it the first item is an NPC, and if not looks for an NPC in scope.</p>\n<p>If it matches, you end up with the same set of parameters as you would have with GIVE BOOTS TO MAN, so when it comes to executing the command the same function can be used.</p>\n<p>The end result is that now users can do GIVE MAN BOOTS, but at the same time the parser is now much more flexible for custom commands.</p>\n\n",
      "PostDate": "2021-08-05T08:15:46.464278Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "11fb8aff-72d8-40d1-9293-0ca1d4272bbe",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> GIVE MAN BOOTS\r\n\r\nI actually tried that, too.\r\n\r\nThat command structure works in the old parser games. Every time I try entering something like that in a Quest 6 game, I immediately think, *'oh yeah... Regular expression patterns don't work that way.'*",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>GIVE MAN BOOTS</p>\n</blockquote>\n<p>I actually tried that, too.</p>\n<p>That command structure works in the old parser games. Every time I try entering something like that in a Quest 6 game, I immediately think, <em>'oh yeah... Regular expression patterns don't work that way.'</em></p>\n\n",
      "PostDate": "2021-08-05T12:28:58.5241771Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b3fa48fb-d855-491b-b4b8-5f109ce83eb1",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I actually tried that, too.\r\n\r\nYou probably did not mean about it as much as they did.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I actually tried that, too.</p>\n</blockquote>\n<p>You probably did not mean about it as much as they did.</p>\n\n",
      "PostDate": "2021-08-05T13:29:15.7662708Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6f6accc4-c6de-4eca-8b40-8cc2f5159208",
      "UserId": 924,
      "Username": "Pertex",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4cc1e52f99452e841ecf4cbee9eadde9?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Could this cause problems with games in other languages? And does it only affect the give command?",
      "EditableFormat": "markdown",
      "HTML": "<p>Could this cause problems with games in other languages? And does it only affect the give command?</p>\n\n",
      "PostDate": "2021-08-06T08:12:52.9821442Z",
      "LastEditDate": "2021-08-06T08:14:18.3759047Z",
      "link": null
    },
    {
      "PostId": "479da2a9-1e3e-489d-8c18-0323648ebc97",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I modified the parser to allow commands to be customised to allow stuff like this, but the default is unchanged. There are then two Give commands, one with its custom bit.\r\n\r\nSo the default is the same, and therefore no negative impact on other languages. However, it gives extra flexibility, so potentially could make it possible to do stuff in other languages that was not possible before. I will not say _easy_, as the custom function is pretty complicated, ",
      "EditableFormat": "markdown",
      "HTML": "<p>I modified the parser to allow commands to be customised to allow stuff like this, but the default is unchanged. There are then two Give commands, one with its custom bit.</p>\n<p>So the default is the same, and therefore no negative impact on other languages. However, it gives extra flexibility, so potentially could make it possible to do stuff in other languages that was not possible before. I will not say <em>easy</em>, as the custom function is pretty complicated,</p>\n\n",
      "PostDate": "2021-08-07T09:44:37.2389106Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
