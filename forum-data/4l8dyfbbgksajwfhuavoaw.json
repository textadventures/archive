{
  "Topic": {
    "TopicId": "4l8dyfbbgksajwfhuavoaw",
    "ForumId": "10",
    "Title": "Function not found \"ScriptDictionaryItem\"",
    "LastUpdated": "2023-10-05T14:27:56.6516434Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "1e471d7e-1c96-4610-9388-6ff71f995c8c",
      "UserId": 227864,
      "Username": "Talon",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3b6191c9adc337e83fec8e293e3fc584?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "for once I have a simple question i think,  was going to try Script Dictionaries  to expand my skillset... and this error came up, I'm still using 5.72...so was this function added in 5.8? otherwise I'm a bit confused. I know \"Do\" can run an attribute script but had no luck when trying to get it to run a script dictionary",
      "EditableFormat": "markdown",
      "HTML": "<p>for once I have a simple question i think,  was going to try Script Dictionaries  to expand my skillset... and this error came up, I'm still using 5.72...so was this function added in 5.8? otherwise I'm a bit confused. I know \"Do\" can run an attribute script but had no luck when trying to get it to run a script dictionary</p>\n\n",
      "PostDate": "2023-10-05T14:27:56.6516434Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3424d386-eefe-4921-aabc-4831cf7b3a3f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The function could be new; I remember checking and finding there wasn't a function like that. Maybe it's been added in a later version and I didn't notice.\r\n\r\nIf it isn't available, you would have to do something like:\r\n```\r\nscript = DictionaryItem (dict, key)\r\ninvoke (script)\r\n```\r\nNote that splitting it over two lines like that may be necessary… built-in statements like `invoke` often check the type of their arguments at compile time, so `invoke (DictionaryItem (dict, key))` could check whether `DictionaryItem`'s return type is \"script\" (it isn't, because it depends on the type of the dictionary) and then fail without even trying to execute the line.",
      "EditableFormat": "markdown",
      "HTML": "<p>The function could be new; I remember checking and finding there wasn't a function like that. Maybe it's been added in a later version and I didn't notice.</p>\n<p>If it isn't available, you would have to do something like:</p>\n<pre><code>script = DictionaryItem (dict, key)\ninvoke (script)\n</code></pre>\n<p>Note that splitting it over two lines like that may be necessary… built-in statements like <code>invoke</code> often check the type of their arguments at compile time, so <code>invoke (DictionaryItem (dict, key))</code> could check whether <code>DictionaryItem</code>'s return type is \"script\" (it isn't, because it depends on the type of the dictionary) and then fail without even trying to execute the line.</p>\n\n",
      "PostDate": "2023-10-06T09:16:45.243371Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b125eca7-ae26-419c-ad40-f10bcdf01238",
      "UserId": 227864,
      "Username": "Talon",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3b6191c9adc337e83fec8e293e3fc584?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah, I think my version really doesn't have much in the way of Dictionary functions, also seem to be missing  DictionaryItem using the editor to search for functions w/show library elements shows none of them as well.\r\n\r\nThink I'll have to upgrade at last and just tell my players they'll have to as well..\r\n\r\nedit-nope, new version only added functions i thought it did, Maybe its my logic that going wrong\r\n```\r\nDictionaryItem (Vendor 2.plush, 1)\r\ninvoke(script)\r\n```\r\nWhere the Vendor 2.plush is the object attribute and 1 is the associated key, \r\nI assume this would run the script(and code)  the key refers too.\r\n\r\nedit 2, I think i figured it out, putting the key  in \" \" to treat it like a string seem to have been able to parse it, since i had been using numbers i kept thinking int's\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah, I think my version really doesn't have much in the way of Dictionary functions, also seem to be missing  DictionaryItem using the editor to search for functions w/show library elements shows none of them as well.</p>\n<p>Think I'll have to upgrade at last and just tell my players they'll have to as well..</p>\n<p>edit-nope, new version only added functions i thought it did, Maybe its my logic that going wrong</p>\n<pre><code>DictionaryItem (Vendor 2.plush, 1)\ninvoke(script)\n</code></pre>\n<p>Where the Vendor 2.plush is the object attribute and 1 is the associated key,<br>\nI assume this would run the script(and code)  the key refers too.</p>\n<p>edit 2, I think i figured it out, putting the key  in \" \" to treat it like a string seem to have been able to parse it, since i had been using numbers i kept thinking int's</p>\n\n",
      "PostDate": "2023-10-06T13:05:18.0755133Z",
      "LastEditDate": "2023-10-06T14:28:17.7018791Z",
      "link": null
    },
    {
      "PostId": "cd2d4a28-ce6e-43e5-a881-6d132e9bfa7c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> also seem to be missing DictionaryItem using the editor to search for functions w/show library elements shows none of them as well.\r\n\r\nIt's a hard-coded function; it's written in C#, so you can't see it in the editor.\r\n\r\n> edit 2, I think i figured it out, putting the key in \" \" to treat it like a string seem to have been able to parse it, since i had been using numbers i kept thinking int's\r\n\r\nYeah… hard-coded functions are strongly typed; so `ScriptDictionaryItem (dictionary, int)` and `ScriptDictionaryItem (dictionary, string)` would be completely separate functions, and it wouldn't find one while looking for the other.\r\n\r\nIf you'd quoted the whole error message, I would have pointed that out right away.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>also seem to be missing DictionaryItem using the editor to search for functions w/show library elements shows none of them as well.</p>\n</blockquote>\n<p>It's a hard-coded function; it's written in C#, so you can't see it in the editor.</p>\n<blockquote>\n<p>edit 2, I think i figured it out, putting the key in \" \" to treat it like a string seem to have been able to parse it, since i had been using numbers i kept thinking int's</p>\n</blockquote>\n<p>Yeah… hard-coded functions are strongly typed; so <code>ScriptDictionaryItem (dictionary, int)</code> and <code>ScriptDictionaryItem (dictionary, string)</code> would be completely separate functions, and it wouldn't find one while looking for the other.</p>\n<p>If you'd quoted the whole error message, I would have pointed that out right away.</p>\n\n",
      "PostDate": "2023-10-06T22:53:40.8897788Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
