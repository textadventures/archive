{
  "Topic": {
    "TopicId": "5543",
    "ForumId": "10",
    "Title": "Closing The Loop",
    "LastUpdated": "2015-10-10T13:19:12+01:00",
    "ReplyCount": 12
  },
  "Posts": [
    {
      "PostId": "38263",
      "UserId": 0,
      "Username": "Encrtia",
      "UserAvatar": null,
      "UserGravatar": "dcb4dcc7796cdbad6fbb09ace8754047",
      "EditableText": "So I create some Wheat. And I let the player &quot;Pick&quot; the wheat with a new verb.\n\n[code:20ncmdsk]AddToInventory (Wheat Stem)\nmsg (&quot;You decided to pick one of the wheat stems&#46;&quot;)[/code:20ncmdsk]\n\nThat's great. Now, with the Wheat Stem [i:20ncmdsk]Object[/i:20ncmdsk], I let him eat it. He ate it. Cool.\n\nNow, the player goes to pick up another Wheat stem. \n\nError running script&#058; Unknown object or variable 'Wheat Stem'. \n\nNo doubt, the player can't add an object to his inventory that was already added &amp; eaten (deleted?), so how do I allow the player to be permitted to continually add a maximum of 1 Wheat Stem to his inventory, even after the object's been [i:20ncmdsk]eaten[/i:20ncmdsk]?\n\nDisclaimer: I'm not sure what to search for in the forums to find a solution to this.. apologies if I'm duplicating a thread..",
      "EditableFormat": "bbcode",
      "HTML": "So I create some Wheat. And I let the player &quot;Pick&quot; the wheat with a new verb.<br/><br/><pre><code>AddToInventory (Wheat Stem)<br/>msg (&quot;You decided to pick one of the wheat stems&#46;&quot;)</code></pre><br/><br/>That's great. Now, with the Wheat Stem <span style=\"font-style:italic;\">Object</span>, I let him eat it. He ate it. Cool.<br/><br/>Now, the player goes to pick up another Wheat stem. <br/><br/>Error running script&#058; Unknown object or variable 'Wheat Stem'. <br/><br/>No doubt, the player can't add an object to his inventory that was already added &amp; eaten (deleted?), so how do I allow the player to be permitted to continually add a maximum of 1 Wheat Stem to his inventory, even after the object's been <span style=\"font-style:italic;\">eaten</span>?<br/><br/>Disclaimer: I'm not sure what to search for in the forums to find a solution to this.. apologies if I'm duplicating a thread..",
      "PostDate": "2015-10-09T03:06:55+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38264",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "After you 'eat wheat stem', use the move object script to move the wheat stem back to the place where you picked it.  Then it will be pickable and edible again.\n\nMy desert berry in my first game is a bit more complex than that - it IS a magically berry after all... but the code for it is below.   I think you can just do as I mentioned above and it should work though.\n\n[code:3lb09ok4]if (HasString(this, &quot;eatmsg&quot;)) {\n  msg (this&#46;eatmsg)\n}\nelse {\n  msg (DynamicTemplate(&quot;Eaten&quot;, this))\n}\nif (HasInt(game&#46;pov, &quot;health&quot;)) {\n  game&#46;pov&#46;health = game&#46;pov&#46;health + this&#46;eathealth\n}\nMoveObject (desert berry, desert shrub)\nif (ListContains(ScopeVisible(), desert shrub)) {\n  msg (&quot;&lt;br/&gt;You watch the purple gas swirl in the air, pause for a brief moment, and dive directly into the desert shrub&#46;  A flower blooms on the bush, and the flower morphs into a new berry right in front of your eyes!&lt;br/&gt;&quot;)\n}\nelse if (not ListContains(ScopeVisible(), desert shrub)) {\n  msg (&quot;&lt;br/&gt;The purple gas swirls in the air, pauses for a brief moment, and zooms off in the direction of the desert shrub from which it was plucked!&lt;br/&gt;&quot;)\n}\n[/code:3lb09ok4]\n\nYou will probably want to put an 'If/Then' script to check to see if the player has already picked a wheat stem.  If the player picks a wheat stem maybe raise a flag on the wheat and name it taken.  Then if the player tries to pick the wheat again (while the flag is set), you can print a message like &quot;You already have picked a wheat stem.  You don't need more than one.&quot;  When the player eats the wheat, unset the flag so that it can be picked again and move it back to the wheat plant so it can be picked again.\n\nLet me know if it helps.\n\nXanMag",
      "EditableFormat": "bbcode",
      "HTML": "After you 'eat wheat stem', use the move object script to move the wheat stem back to the place where you picked it.  Then it will be pickable and edible again.<br/><br/>My desert berry in my first game is a bit more complex than that - it IS a magically berry after all... but the code for it is below.   I think you can just do as I mentioned above and it should work though.<br/><br/><pre><code>if (HasString(this, &quot;eatmsg&quot;)) {<br/>  msg (this&#46;eatmsg)<br/>}<br/>else {<br/>  msg (DynamicTemplate(&quot;Eaten&quot;, this))<br/>}<br/>if (HasInt(game&#46;pov, &quot;health&quot;)) {<br/>  game&#46;pov&#46;health = game&#46;pov&#46;health + this&#46;eathealth<br/>}<br/>MoveObject (desert berry, desert shrub)<br/>if (ListContains(ScopeVisible(), desert shrub)) {<br/>  msg (&quot;&lt;br/&gt;You watch the purple gas swirl in the air, pause for a brief moment, and dive directly into the desert shrub&#46;  A flower blooms on the bush, and the flower morphs into a new berry right in front of your eyes!&lt;br/&gt;&quot;)<br/>}<br/>else if (not ListContains(ScopeVisible(), desert shrub)) {<br/>  msg (&quot;&lt;br/&gt;The purple gas swirls in the air, pauses for a brief moment, and zooms off in the direction of the desert shrub from which it was plucked!&lt;br/&gt;&quot;)<br/>}<br/></code></pre><br/><br/>You will probably want to put an 'If/Then' script to check to see if the player has already picked a wheat stem.  If the player picks a wheat stem maybe raise a flag on the wheat and name it taken.  Then if the player tries to pick the wheat again (while the flag is set), you can print a message like &quot;You already have picked a wheat stem.  You don't need more than one.&quot;  When the player eats the wheat, unset the flag so that it can be picked again and move it back to the wheat plant so it can be picked again.<br/><br/>Let me know if it helps.<br/><br/>XanMag",
      "PostDate": "2015-10-09T03:23:11+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38266",
      "UserId": 0,
      "Username": "Encrtia",
      "UserAvatar": null,
      "UserGravatar": "dcb4dcc7796cdbad6fbb09ace8754047",
      "EditableText": "One step at a time, adding the &quot;Move Object&quot; after the &quot;Eat&quot; Verb.\n\nUnder the &quot;Edible&quot; tab (GUI-Editor, Online-Based) there's no option to edit the script to cause that secondary action of &quot;Move object to&quot;. So, I decided to disable it &amp; remove the Object's listed verb of &quot;Eat&quot;, then went under the Verb tab to add &quot;Eat&quot; so I can attach a scipt to it , but apparently the Verb already exists.\n\nIn order to achieve what you suggested, I've had to create a brand new object to create the Verb eat without it stating it already exists. Why is the first object still holding onto the Verb &quot;Eat&quot; ?\n\nFurthermore, what else should I add to the script to make it function as the normal &quot;Eat&quot; script would? As when testing it, I'm able to continously eat the same Wheat Stem from the hyperlink on screen, despite it already being eaten.",
      "EditableFormat": "bbcode",
      "HTML": "One step at a time, adding the &quot;Move Object&quot; after the &quot;Eat&quot; Verb.<br/><br/>Under the &quot;Edible&quot; tab (GUI-Editor, Online-Based) there's no option to edit the script to cause that secondary action of &quot;Move object to&quot;. So, I decided to disable it &amp; remove the Object's listed verb of &quot;Eat&quot;, then went under the Verb tab to add &quot;Eat&quot; so I can attach a scipt to it , but apparently the Verb already exists.<br/><br/>In order to achieve what you suggested, I've had to create a brand new object to create the Verb eat without it stating it already exists. Why is the first object still holding onto the Verb &quot;Eat&quot; ?<br/><br/>Furthermore, what else should I add to the script to make it function as the normal &quot;Eat&quot; script would? As when testing it, I'm able to continously eat the same Wheat Stem from the hyperlink on screen, despite it already being eaten.",
      "PostDate": "2015-10-09T04:02:00+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38268",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "What you're asking for directly, is actually really complicated~advanced, as can be seen here:\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=3515\">viewtopic.php?f=18&amp;t=3515</a><!-- l -->\n\n------\n\nunless you're a really good coder like Sora and others, it's better if you just work with Attributes, adjusting them as need be, instead of trying to move around tons of objects, or advancedly increase~decrease a quantity upon a container object of objects, like how Sora did it (way beyond my coding ability, lol).\n\nsimply create~add a 'wheat' Integer Attribute to your player object, and upon eating it, decrease your attribute. (also, you could alter 'take' or create a new like Verb, that instead of moving it to your player object, it increases your 'wheat' Attribute ~ XanMag can help you with this, and~or with the cloning, I'm sure, he can do this easily for you)\n\nif you do want to move~take the wheat and put it into your inventory (into~on your player object), then, probably the best thing to do, is to use cloning:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/cloneobjectandmove.html\">http://docs.textadventures.co.uk/quest/ ... dmove.html</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/cloneobject.html\">http://docs.textadventures.co.uk/quest/ ... bject.html</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/clone.html\">http://docs.textadventures.co.uk/quest/ ... clone.html</a><!-- m -->\n\nas if you just move your object (then it's no longer at it's original location), and upon eating it, you of course remove~destroy it, then you no longer have it. This is why for non-good coders, using and adjusting Attributes is much better than the headache of dealing with moving and cloning Objects around, at least once you learn Attribute usage, anyways (not that easy to learn for new people).",
      "EditableFormat": "bbcode",
      "HTML": "What you're asking for directly, is actually really complicated~advanced, as can be seen here:<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=3515\">viewtopic.php?f=18&amp;t=3515</a><!-- l --><br/><br/>------<br/><br/>unless you're a really good coder like Sora and others, it's better if you just work with Attributes, adjusting them as need be, instead of trying to move around tons of objects, or advancedly increase~decrease a quantity upon a container object of objects, like how Sora did it (way beyond my coding ability, lol).<br/><br/>simply create~add a 'wheat' Integer Attribute to your player object, and upon eating it, decrease your attribute. (also, you could alter 'take' or create a new like Verb, that instead of moving it to your player object, it increases your 'wheat' Attribute ~ XanMag can help you with this, and~or with the cloning, I'm sure, he can do this easily for you)<br/><br/>if you do want to move~take the wheat and put it into your inventory (into~on your player object), then, probably the best thing to do, is to use cloning:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/cloneobjectandmove.html\">http://docs.textadventures.co.uk/quest/ ... dmove.html</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/cloneobject.html\">http://docs.textadventures.co.uk/quest/ ... bject.html</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/clone.html\">http://docs.textadventures.co.uk/quest/ ... clone.html</a><!-- m --><br/><br/>as if you just move your object (then it's no longer at it's original location), and upon eating it, you of course remove~destroy it, then you no longer have it. This is why for non-good coders, using and adjusting Attributes is much better than the headache of dealing with moving and cloning Objects around, at least once you learn Attribute usage, anyways (not that easy to learn for new people).",
      "PostDate": "2015-10-09T04:13:35+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38269",
      "UserId": 0,
      "Username": "Encrtia",
      "UserAvatar": null,
      "UserGravatar": "dcb4dcc7796cdbad6fbb09ace8754047",
      "EditableText": "Oh right! Ok, will do. Wasn't aware it was complex haha, I hadn't touched attributes thinking this was going to be simple.\n\nI'll go through the links provided, &amp; see about understanding Attributes then.",
      "EditableFormat": "bbcode",
      "HTML": "Oh right! Ok, will do. Wasn't aware it was complex haha, I hadn't touched attributes thinking this was going to be simple.<br/><br/>I'll go through the links provided, &amp; see about understanding Attributes then.",
      "PostDate": "2015-10-09T04:17:41+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38272",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "See if this helps at all.  I just ran this through quickly in my tutorial game so pardon if there are any mistakes.  The Quest .aslx is below.  If I were you, I would download it and open it with Quest and play it and view it in the editor.  You can use this as a template for what you want to do.\n\nAlso... I now no longer ever tick the edibles box for an object.  If you don't click that, you can add the verb &quot;eat&quot; without any interference from Quest pre-programming.  I would not tick the edible box and instead add the verb.  I think this makes it easier to do other things when you eat something.  Just my opinion.  If you don't like doing it this way, I think there might be a microscopic button hidden in there where you can make an editable copy of the built-in eat command.\n\n[attachment=0:1x2zbsjk]<!-- ia0 -->Edibles demo.aslx<!-- ia0 -->[/attachment:1x2zbsjk]\n\nI'm not sure how your web-based version works as I've only used the download version of Quest, but, maybe you could start a new game and post this code between the /game and the /asl in the code view.  Use this code and replace whatever is there.  Let me know if it works.\n\n[code:1x2zbsjk]  &lt;object name=&quot;edibles room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;description type=&quot;script&quot;&gt;\n    &lt;/description&gt;\n    &lt;object name=&quot;Watermelon&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;look&gt;It's a big, green, seedless watermelon!  Eat up!&lt;/look&gt;\n      &lt;take /&gt;\n      &lt;takemsg&gt;It's heavy, but you take it&#46;  Now eat it!&lt;/takemsg&gt;\n      &lt;eat type=&quot;script&quot;&gt;\n        msg (&quot;You annihilate that watermelon like Gallagher at a comedy show&#46;  Watermelon eaten!&quot;)\n        RemoveObject (Watermelon)\n      &lt;/eat&gt;\n    &lt;/object&gt;\n    &lt;object name=&quot;Magoo&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n      &lt;inherit name=&quot;namedmale&quot; /&gt;\n      &lt;attr name=&quot;pov_look&quot;&gt;You're Magoo&#46;  A simple being trapped in a test game&#46;&lt;/attr&gt;\n      &lt;look type=&quot;script&quot;&gt;\n        if (game&#46;pov = Xanadu) {\n          msg (&quot;Holy moly!  That looks exactly like you!  To take control of Magoo, just type 'switch to Magoo'&#46;&quot;)\n        }\n        else {\n          msg (&quot;You are a simple being trapped in a test game&#46;&quot;)\n        }\n      &lt;/look&gt;\n    &lt;/object&gt;\n    &lt;object name=&quot;apple tree&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;surface&quot; /&gt;\n      &lt;takemsg&gt;You can't take the entire tree!&lt;/takemsg&gt;\n      &lt;feature_container /&gt;\n      &lt;hidechildren /&gt;\n      &lt;listchildren /&gt;\n      &lt;look type=&quot;script&quot;&gt;\n        if (Contains (apple tree,apple1)) {\n          msg (&quot;It's a very healthy looking apple tree, but oddly enough it only contains one apple!  It is within reach so you could pick it if you wish&#46;&quot;)\n          MakeObjectVisible (apple1)\n        }\n        else {\n          msg (&quot;It's a very healthy looking apple tree, but oddly enough it does not contain any apples!&quot;)\n        }\n      &lt;/look&gt;\n      &lt;object name=&quot;apple1&quot;&gt;\n        &lt;inherit name=&quot;editor_object&quot; /&gt;\n        &lt;alias&gt;apple&lt;/alias&gt;\n        &lt;visible type=&quot;boolean&quot;&gt;false&lt;/visible&gt;\n        &lt;scenery type=&quot;boolean&quot;&gt;false&lt;/scenery&gt;\n        &lt;look type=&quot;script&quot;&gt;\n          if (GetBoolean(apple1, &quot;picked&quot;)) {\n            msg (&quot;It's a lovely looking apple&#46;  You should eat it!&quot;)\n          }\n          else {\n            msg (&quot;It's a lovely looking apple&#46;  You should pick it from the tree if you want it!&quot;)\n          }\n        &lt;/look&gt;\n        &lt;pick type=&quot;script&quot;&gt;\n          msg (&quot;You stand on your tippy toes and snatch the apple from the tree&#46;&quot;)\n          AddToInventory (apple1)\n        &lt;/pick&gt;\n        &lt;eat type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n          if (Got(apple1)) {\n            msg (&quot;You scarf the apple down in one giant bite&#46;  Tasty!&lt;br/&gt;&lt;br/&gt;You hear an odd sound like one you have never heard before - something on the apple tree catches your eye&#46;&quot;)\n            MoveObject (apple1, apple tree)\n            MakeObjectInvisible (apple1)\n          }\n        &#93;&#93;&gt;&lt;/eat&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;verb&gt;\n    &lt;property&gt;pick&lt;/property&gt;\n    &lt;pattern&gt;pick&lt;/pattern&gt;\n    &lt;defaultexpression&gt;&quot;You can't pick &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  [/code:1x2zbsjk]",
      "EditableFormat": "bbcode",
      "HTML": "See if this helps at all.  I just ran this through quickly in my tutorial game so pardon if there are any mistakes.  The Quest .aslx is below.  If I were you, I would download it and open it with Quest and play it and view it in the editor.  You can use this as a template for what you want to do.<br/><br/>Also... I now no longer ever tick the edibles box for an object.  If you don't click that, you can add the verb &quot;eat&quot; without any interference from Quest pre-programming.  I would not tick the edible box and instead add the verb.  I think this makes it easier to do other things when you eat something.  Just my opinion.  If you don't like doing it this way, I think there might be a microscopic button hidden in there where you can make an editable copy of the built-in eat command.<br/><br/><div><a href=\"/attachment/1353\">Edibles demo.aslx</a></div><br/><br/>I'm not sure how your web-based version works as I've only used the download version of Quest, but, maybe you could start a new game and post this code between the /game and the /asl in the code view.  Use this code and replace whatever is there.  Let me know if it works.<br/><br/><pre><code>  &lt;object name=&quot;edibles room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;description type=&quot;script&quot;&gt;<br/>    &lt;/description&gt;<br/>    &lt;object name=&quot;Watermelon&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;look&gt;It's a big, green, seedless watermelon!  Eat up!&lt;/look&gt;<br/>      &lt;take /&gt;<br/>      &lt;takemsg&gt;It's heavy, but you take it&#46;  Now eat it!&lt;/takemsg&gt;<br/>      &lt;eat type=&quot;script&quot;&gt;<br/>        msg (&quot;You annihilate that watermelon like Gallagher at a comedy show&#46;  Watermelon eaten!&quot;)<br/>        RemoveObject (Watermelon)<br/>      &lt;/eat&gt;<br/>    &lt;/object&gt;<br/>    &lt;object name=&quot;Magoo&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>      &lt;inherit name=&quot;namedmale&quot; /&gt;<br/>      &lt;attr name=&quot;pov_look&quot;&gt;You're Magoo&#46;  A simple being trapped in a test game&#46;&lt;/attr&gt;<br/>      &lt;look type=&quot;script&quot;&gt;<br/>        if (game&#46;pov = Xanadu) {<br/>          msg (&quot;Holy moly!  That looks exactly like you!  To take control of Magoo, just type 'switch to Magoo'&#46;&quot;)<br/>        }<br/>        else {<br/>          msg (&quot;You are a simple being trapped in a test game&#46;&quot;)<br/>        }<br/>      &lt;/look&gt;<br/>    &lt;/object&gt;<br/>    &lt;object name=&quot;apple tree&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;surface&quot; /&gt;<br/>      &lt;takemsg&gt;You can't take the entire tree!&lt;/takemsg&gt;<br/>      &lt;feature_container /&gt;<br/>      &lt;hidechildren /&gt;<br/>      &lt;listchildren /&gt;<br/>      &lt;look type=&quot;script&quot;&gt;<br/>        if (Contains (apple tree,apple1)) {<br/>          msg (&quot;It's a very healthy looking apple tree, but oddly enough it only contains one apple!  It is within reach so you could pick it if you wish&#46;&quot;)<br/>          MakeObjectVisible (apple1)<br/>        }<br/>        else {<br/>          msg (&quot;It's a very healthy looking apple tree, but oddly enough it does not contain any apples!&quot;)<br/>        }<br/>      &lt;/look&gt;<br/>      &lt;object name=&quot;apple1&quot;&gt;<br/>        &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>        &lt;alias&gt;apple&lt;/alias&gt;<br/>        &lt;visible type=&quot;boolean&quot;&gt;false&lt;/visible&gt;<br/>        &lt;scenery type=&quot;boolean&quot;&gt;false&lt;/scenery&gt;<br/>        &lt;look type=&quot;script&quot;&gt;<br/>          if (GetBoolean(apple1, &quot;picked&quot;)) {<br/>            msg (&quot;It's a lovely looking apple&#46;  You should eat it!&quot;)<br/>          }<br/>          else {<br/>            msg (&quot;It's a lovely looking apple&#46;  You should pick it from the tree if you want it!&quot;)<br/>          }<br/>        &lt;/look&gt;<br/>        &lt;pick type=&quot;script&quot;&gt;<br/>          msg (&quot;You stand on your tippy toes and snatch the apple from the tree&#46;&quot;)<br/>          AddToInventory (apple1)<br/>        &lt;/pick&gt;<br/>        &lt;eat type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>          if (Got(apple1)) {<br/>            msg (&quot;You scarf the apple down in one giant bite&#46;  Tasty!&lt;br/&gt;&lt;br/&gt;You hear an odd sound like one you have never heard before - something on the apple tree catches your eye&#46;&quot;)<br/>            MoveObject (apple1, apple tree)<br/>            MakeObjectInvisible (apple1)<br/>          }<br/>        &#93;&#93;&gt;&lt;/eat&gt;<br/>      &lt;/object&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;verb&gt;<br/>    &lt;property&gt;pick&lt;/property&gt;<br/>    &lt;pattern&gt;pick&lt;/pattern&gt;<br/>    &lt;defaultexpression&gt;&quot;You can't pick &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;<br/>  &lt;/verb&gt;<br/>  </code></pre>",
      "PostDate": "2015-10-09T04:30:12+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38274",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "If you can get the above to work by copy-pasting code...\n\nI know you mentioned flag use to me.  Here is the code for the flag setting and unsetting demo I have in my tutorial.\n\n[code:1tqhpe83]  &lt;object name=&quot;flag setting unsetting room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;description&gt;&lt;!&#91;CDATA&#91;In this room, you will hopefully master flag setting and unsetting!&lt;br/&gt;&lt;br/&gt;There are flags in the room&#46;  Look at them&#46;  To raise them, type &quot;raise flag (of your choice)&quot;&#46;  To lower them, type &quot;lower flag (of your choice)&quot;&#46;&lt;br/&gt;&lt;br/&gt;This room assumes you have knowledge of 'If'/'Then' statements&#46;  If you don't type &quot;if then help&quot;&#46;&lt;br/&gt;&lt;br/&gt;Notice that when you raise a flag, I have set that particular flag on that flag object to 'raised'&#46;  If you look at the particular flag, I have used an 'If'/'Else' script to give a different viewpoint of the flag&#46;  The country's flag with a flag titled 'raised' will look as though it is standing erect&#46;  When you &quot;lower&quot; the flag, I unset that country's flag 'raised' so it appears in the look at description as on the ground&#46;&#93;&#93;&gt;&lt;/description&gt;\n    &lt;alias&gt;flag setting and unsetting room&lt;/alias&gt;\n    &lt;enter type=&quot;script&quot;&gt;\n    &lt;/enter&gt;\n    &lt;object name=&quot;The Flag of England&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;alt type=&quot;stringlist&quot;&gt;\n        &lt;value&gt;english flag&lt;/value&gt;\n      &lt;/alt&gt;\n      &lt;usedefaultprefix type=&quot;boolean&quot;&gt;false&lt;/usedefaultprefix&gt;\n      &lt;look type=&quot;script&quot;&gt;\n        if (GetBoolean(The Flag of England, &quot;raised&quot;)) {\n          msg (&quot;You behold the proud English flag rippling in the breeze&#46;  To lower the flag, simply type 'lower' flag&#46;&quot;)\n        }\n        else {\n          msg (&quot;The English Flag and its pole rest on the ground&#46;  To raise the flag, simply type 'raise' flag&#46;&quot;)\n        }\n      &lt;/look&gt;\n      &lt;raise type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n        msg (&quot;You lift the English Flag from the ground and nestle the pole it is tied to neatly into the ground&#46;  The English Flag is now raised!&lt;br/&gt;&lt;br/&gt;In code, we have set flag 'object' 'The Flag of England' 'flag name' \\&quot;raised\\&quot;&quot;)\n        SetObjectFlagOn (The Flag of England, &quot;raised&quot;)\n      &#93;&#93;&gt;&lt;/raise&gt;\n      &lt;lower type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n        msg (&quot;You lift the English Flag from the earth and rest it gently on the ground&#46;&lt;br/&gt;&lt;br/&gt;In code, we have Unset flag 'object' 'The Flag of England' 'flag name' \\&quot;raised\\&quot;&#46;&quot;)\n        SetObjectFlagOff (The Flag of England, &quot;raised&quot;)\n      &#93;&#93;&gt;&lt;/lower&gt;\n    &lt;/object&gt;\n    &lt;object name=&quot;The Flag of the USA&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;usedefaultprefix type=&quot;boolean&quot;&gt;false&lt;/usedefaultprefix&gt;\n      &lt;raise type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n        msg (&quot;You lift the American Flag from the ground and nestle the pole it is tied to neatly into the ground&#46;  The Stars and Stripes is now raised!&lt;br/&gt;&lt;br/&gt;In code, we have set flag 'object' 'The Flag of the USA' 'flag name' \\&quot;raised\\&quot;&quot;)\n        SetObjectFlagOn (The Flag of the USA, &quot;raised&quot;)\n      &#93;&#93;&gt;&lt;/raise&gt;\n      &lt;lower type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n        msg (&quot;You lift the American Flag from the earth and rest it gently on the ground&#46;&lt;br/&gt;&lt;br/&gt;In code, we have Unset flag 'object' 'The Flag of the USA' 'flag name' \\&quot;raised\\&quot;&#46;&quot;)\n        SetObjectFlagOff (The Flag of the USA, &quot;raised&quot;)\n      &#93;&#93;&gt;&lt;/lower&gt;\n      &lt;look type=&quot;script&quot;&gt;\n        if (GetBoolean(The Flag of the USA, &quot;raised&quot;)) {\n          msg (&quot;You behold the proud American flag rippling in the breeze&#46;  To lower the flag, simply type 'lower' flag&#46;&quot;)\n        }\n        else {\n          msg (&quot;The American Flag and its pole rest on the ground&#46;  To raise the flag, simply type 'raise' flag&#46;&quot;)\n        }\n      &lt;/look&gt;\n    &lt;/object&gt;\n    &lt;object name=&quot;German Flag&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;usedefaultprefix /&gt;\n      &lt;look type=&quot;script&quot;&gt;\n        if (GetBoolean(German Flag, &quot;raised&quot;)) {\n          msg (&quot;You behold the proud German flag rippling in the breeze&#46;  To lower the flag, simply type 'lower' flag&#46;&quot;)\n        }\n        else {\n          msg (&quot;The German Flag and its pole rest on the ground&#46;  To raise the flag simply type 'raise' flag&#46;&quot;)\n        }\n      &lt;/look&gt;\n      &lt;raise type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n        msg (&quot;You lift the German Flag from the ground and nestle the pole it is tied to neatly into the ground&#46;  The German Flag is now raised!&lt;br/&gt;&lt;br/&gt;In code, we have set flag 'object' 'German Flag' 'flag name' \\&quot;raised\\&quot;&quot;)\n        SetObjectFlagOn (German Flag, &quot;raised&quot;)\n      &#93;&#93;&gt;&lt;/raise&gt;\n      &lt;lower type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n        msg (&quot;You lift the German Flag from the earth and rest it gently on the ground&#46;&lt;br/&gt;&lt;br/&gt;In code, we have Unset flag 'object' 'German Flag' 'flag name' \\&quot;raised\\&quot;&#46;&quot;)\n        SetObjectFlagOff (German Flag, &quot;raised&quot;)\n      &#93;&#93;&gt;&lt;/lower&gt;\n    &lt;/object&gt;\n    &lt;command name=&quot;I IE E help cmd&quot;&gt;\n      &lt;pattern&gt;if then help&lt;/pattern&gt;\n      &lt;script&gt;&lt;!&#91;CDATA&#91;\n        msg (&quot;An 'If' script is likely the most useful script in the game&#46;&lt;br/&gt;&lt;br/&gt;Simply put, you set a condition with the 'If' script&#46;  In the GUI change the 'expression' box to whatever condition you want to set&#46;  In this room, I have set an 'If' object has flag&#46;  Choose the object you want to conditionalize&#46;  I chose 'German Flag'&#46;  Then name the flag&#46;  In this room, I chose the flag name 'raised'&#46;&lt;br/&gt;&lt;br/&gt;Now, choose what happens next with the 'Then' script&#46;  Click 'add new script'&#46;  In this room, I set the description of the raised flag as a 'print a message' script&#46;  In this box I described the German Flag as if it had been raised&#46;&lt;br/&gt;&lt;br/&gt;In the 'Else' box, you choose what happens if the condition is NOT met&#46;  So, in this room, when the German Flag did NOT have the 'raised' flag name active, I described it as lying on the ground&#46;&lt;br/&gt;&lt;br/&gt;If you are interested in how to use the 'Else If' part of this script, visit the If Then room!&quot;)\n      &#93;&#93;&gt;&lt;/script&gt;\n    &lt;/command&gt;\n    &lt;object name=&quot;Magoo&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n      &lt;inherit name=&quot;namedmale&quot; /&gt;\n      &lt;attr name=&quot;pov_look&quot;&gt;You're Magoo&#46;  A simple being trapped in a test game&#46;&lt;/attr&gt;\n      &lt;look type=&quot;script&quot;&gt;\n        if (game&#46;pov = Xanadu) {\n          msg (&quot;Holy moly!  That looks exactly like you!  To take control of Magoo, just type 'switch to Magoo'&#46;&quot;)\n        }\n        else {\n          msg (&quot;You are a simple being trapped in a test game&#46;&quot;)\n        }\n      &lt;/look&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;verb&gt;\n    &lt;property&gt;raise&lt;/property&gt;\n    &lt;pattern&gt;raise&lt;/pattern&gt;\n    &lt;defaultexpression&gt;&quot;You can't raise &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;verb&gt;\n    &lt;property&gt;lower&lt;/property&gt;\n    &lt;pattern&gt;lower&lt;/pattern&gt;\n    &lt;defaultexpression&gt;&quot;You can't lower &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n[/code:1tqhpe83]",
      "EditableFormat": "bbcode",
      "HTML": "If you can get the above to work by copy-pasting code...<br/><br/>I know you mentioned flag use to me.  Here is the code for the flag setting and unsetting demo I have in my tutorial.<br/><br/><pre><code>  &lt;object name=&quot;flag setting unsetting room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;description&gt;&lt;!&#91;CDATA&#91;In this room, you will hopefully master flag setting and unsetting!&lt;br/&gt;&lt;br/&gt;There are flags in the room&#46;  Look at them&#46;  To raise them, type &quot;raise flag (of your choice)&quot;&#46;  To lower them, type &quot;lower flag (of your choice)&quot;&#46;&lt;br/&gt;&lt;br/&gt;This room assumes you have knowledge of 'If'/'Then' statements&#46;  If you don't type &quot;if then help&quot;&#46;&lt;br/&gt;&lt;br/&gt;Notice that when you raise a flag, I have set that particular flag on that flag object to 'raised'&#46;  If you look at the particular flag, I have used an 'If'/'Else' script to give a different viewpoint of the flag&#46;  The country's flag with a flag titled 'raised' will look as though it is standing erect&#46;  When you &quot;lower&quot; the flag, I unset that country's flag 'raised' so it appears in the look at description as on the ground&#46;&#93;&#93;&gt;&lt;/description&gt;<br/>    &lt;alias&gt;flag setting and unsetting room&lt;/alias&gt;<br/>    &lt;enter type=&quot;script&quot;&gt;<br/>    &lt;/enter&gt;<br/>    &lt;object name=&quot;The Flag of England&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;alt type=&quot;stringlist&quot;&gt;<br/>        &lt;value&gt;english flag&lt;/value&gt;<br/>      &lt;/alt&gt;<br/>      &lt;usedefaultprefix type=&quot;boolean&quot;&gt;false&lt;/usedefaultprefix&gt;<br/>      &lt;look type=&quot;script&quot;&gt;<br/>        if (GetBoolean(The Flag of England, &quot;raised&quot;)) {<br/>          msg (&quot;You behold the proud English flag rippling in the breeze&#46;  To lower the flag, simply type 'lower' flag&#46;&quot;)<br/>        }<br/>        else {<br/>          msg (&quot;The English Flag and its pole rest on the ground&#46;  To raise the flag, simply type 'raise' flag&#46;&quot;)<br/>        }<br/>      &lt;/look&gt;<br/>      &lt;raise type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>        msg (&quot;You lift the English Flag from the ground and nestle the pole it is tied to neatly into the ground&#46;  The English Flag is now raised!&lt;br/&gt;&lt;br/&gt;In code, we have set flag 'object' 'The Flag of England' 'flag name' \\&quot;raised\\&quot;&quot;)<br/>        SetObjectFlagOn (The Flag of England, &quot;raised&quot;)<br/>      &#93;&#93;&gt;&lt;/raise&gt;<br/>      &lt;lower type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>        msg (&quot;You lift the English Flag from the earth and rest it gently on the ground&#46;&lt;br/&gt;&lt;br/&gt;In code, we have Unset flag 'object' 'The Flag of England' 'flag name' \\&quot;raised\\&quot;&#46;&quot;)<br/>        SetObjectFlagOff (The Flag of England, &quot;raised&quot;)<br/>      &#93;&#93;&gt;&lt;/lower&gt;<br/>    &lt;/object&gt;<br/>    &lt;object name=&quot;The Flag of the USA&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;usedefaultprefix type=&quot;boolean&quot;&gt;false&lt;/usedefaultprefix&gt;<br/>      &lt;raise type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>        msg (&quot;You lift the American Flag from the ground and nestle the pole it is tied to neatly into the ground&#46;  The Stars and Stripes is now raised!&lt;br/&gt;&lt;br/&gt;In code, we have set flag 'object' 'The Flag of the USA' 'flag name' \\&quot;raised\\&quot;&quot;)<br/>        SetObjectFlagOn (The Flag of the USA, &quot;raised&quot;)<br/>      &#93;&#93;&gt;&lt;/raise&gt;<br/>      &lt;lower type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>        msg (&quot;You lift the American Flag from the earth and rest it gently on the ground&#46;&lt;br/&gt;&lt;br/&gt;In code, we have Unset flag 'object' 'The Flag of the USA' 'flag name' \\&quot;raised\\&quot;&#46;&quot;)<br/>        SetObjectFlagOff (The Flag of the USA, &quot;raised&quot;)<br/>      &#93;&#93;&gt;&lt;/lower&gt;<br/>      &lt;look type=&quot;script&quot;&gt;<br/>        if (GetBoolean(The Flag of the USA, &quot;raised&quot;)) {<br/>          msg (&quot;You behold the proud American flag rippling in the breeze&#46;  To lower the flag, simply type 'lower' flag&#46;&quot;)<br/>        }<br/>        else {<br/>          msg (&quot;The American Flag and its pole rest on the ground&#46;  To raise the flag, simply type 'raise' flag&#46;&quot;)<br/>        }<br/>      &lt;/look&gt;<br/>    &lt;/object&gt;<br/>    &lt;object name=&quot;German Flag&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;usedefaultprefix /&gt;<br/>      &lt;look type=&quot;script&quot;&gt;<br/>        if (GetBoolean(German Flag, &quot;raised&quot;)) {<br/>          msg (&quot;You behold the proud German flag rippling in the breeze&#46;  To lower the flag, simply type 'lower' flag&#46;&quot;)<br/>        }<br/>        else {<br/>          msg (&quot;The German Flag and its pole rest on the ground&#46;  To raise the flag simply type 'raise' flag&#46;&quot;)<br/>        }<br/>      &lt;/look&gt;<br/>      &lt;raise type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>        msg (&quot;You lift the German Flag from the ground and nestle the pole it is tied to neatly into the ground&#46;  The German Flag is now raised!&lt;br/&gt;&lt;br/&gt;In code, we have set flag 'object' 'German Flag' 'flag name' \\&quot;raised\\&quot;&quot;)<br/>        SetObjectFlagOn (German Flag, &quot;raised&quot;)<br/>      &#93;&#93;&gt;&lt;/raise&gt;<br/>      &lt;lower type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>        msg (&quot;You lift the German Flag from the earth and rest it gently on the ground&#46;&lt;br/&gt;&lt;br/&gt;In code, we have Unset flag 'object' 'German Flag' 'flag name' \\&quot;raised\\&quot;&#46;&quot;)<br/>        SetObjectFlagOff (German Flag, &quot;raised&quot;)<br/>      &#93;&#93;&gt;&lt;/lower&gt;<br/>    &lt;/object&gt;<br/>    &lt;command name=&quot;I IE E help cmd&quot;&gt;<br/>      &lt;pattern&gt;if then help&lt;/pattern&gt;<br/>      &lt;script&gt;&lt;!&#91;CDATA&#91;<br/>        msg (&quot;An 'If' script is likely the most useful script in the game&#46;&lt;br/&gt;&lt;br/&gt;Simply put, you set a condition with the 'If' script&#46;  In the GUI change the 'expression' box to whatever condition you want to set&#46;  In this room, I have set an 'If' object has flag&#46;  Choose the object you want to conditionalize&#46;  I chose 'German Flag'&#46;  Then name the flag&#46;  In this room, I chose the flag name 'raised'&#46;&lt;br/&gt;&lt;br/&gt;Now, choose what happens next with the 'Then' script&#46;  Click 'add new script'&#46;  In this room, I set the description of the raised flag as a 'print a message' script&#46;  In this box I described the German Flag as if it had been raised&#46;&lt;br/&gt;&lt;br/&gt;In the 'Else' box, you choose what happens if the condition is NOT met&#46;  So, in this room, when the German Flag did NOT have the 'raised' flag name active, I described it as lying on the ground&#46;&lt;br/&gt;&lt;br/&gt;If you are interested in how to use the 'Else If' part of this script, visit the If Then room!&quot;)<br/>      &#93;&#93;&gt;&lt;/script&gt;<br/>    &lt;/command&gt;<br/>    &lt;object name=&quot;Magoo&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>      &lt;inherit name=&quot;namedmale&quot; /&gt;<br/>      &lt;attr name=&quot;pov_look&quot;&gt;You're Magoo&#46;  A simple being trapped in a test game&#46;&lt;/attr&gt;<br/>      &lt;look type=&quot;script&quot;&gt;<br/>        if (game&#46;pov = Xanadu) {<br/>          msg (&quot;Holy moly!  That looks exactly like you!  To take control of Magoo, just type 'switch to Magoo'&#46;&quot;)<br/>        }<br/>        else {<br/>          msg (&quot;You are a simple being trapped in a test game&#46;&quot;)<br/>        }<br/>      &lt;/look&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;verb&gt;<br/>    &lt;property&gt;raise&lt;/property&gt;<br/>    &lt;pattern&gt;raise&lt;/pattern&gt;<br/>    &lt;defaultexpression&gt;&quot;You can't raise &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;<br/>  &lt;/verb&gt;<br/>  &lt;verb&gt;<br/>    &lt;property&gt;lower&lt;/property&gt;<br/>    &lt;pattern&gt;lower&lt;/pattern&gt;<br/>    &lt;defaultexpression&gt;&quot;You can't lower &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;<br/>  &lt;/verb&gt;<br/></code></pre>",
      "PostDate": "2015-10-09T04:50:30+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38275",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "if you're using Attributes, you'll want to create~add to both your player object and the wheat object, for an example:\n\n(think of these Attributes as imaginary, formally: logical, 'purses' or 'wallets' or 'bags' for your 'player' Object and for your 'wheat' Object)\n\n'player' Player Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)\n\n(Object Name: player)\nAttribute Name: wheat_quantity // or whatever you want to call it\nAttribute Type: int (integer: a non-decimal number: etc, -100, -1, 0, 1, 100, etc)\nAttribute Value: 0 // or whatever amount of wheat you want to start with\n\n---------------\n\n'wheat' Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)\n\n(Object Name: wheat)\nAttribute Name: quantity // or whatever you want to call it\nAttribute Type: int\nAttribute Value: 99 // or whatever amount of wheat you want the wheat to be starting at\n\n----------\n\nAttribute Usage (Adjusting Attributes):\n\nthen you got to do an Attribute transaction (buy-sell structure) when you 'eat~take' the wheat or 'give~whatever' more wheat to the wheat object:\n\n(we are imaginatorily~pretendingly, aka logically, transacting our imaginary quantities of wheat, as opposed to the actual &quot;physical&quot; wheat object~s, think of like trading stocks at wall street, imaginary money or imaginary quantities of products)\n\nadd new script -&gt; variables -&gt; 'set a variable or attribute' -&gt; (see below)\n\nset variable Object_name.Attribute_name = [expression] Object_name.Attribute_name OPERATOR Value\n\nfor my example of my own general format~syntax, hopefully explaning it for you:\n\nreplace my 'Object_name'  with 'player'\nreplace my 'Attribute_name' with 'wheat_quantity'\n\nreplace my 'Object_name'  with 'wheat'\nreplace my 'Attribute_name' with 'quantity'\n\nreplace my 'OPERATOR' with '+'\nreplace my 'OPERATOR' with '-'\n\nreplace my 'Value' with '1'\n\n--------\n\nso for example:\n\nusually the OPERATOR is addition (+) or subtraction (-), but you can use multiplication (*), division: division_for_quotient (/), modulus: division_for_remainder (%), exponentials (probably: ** or ^, but not sure in quest what it is, lol), etc\n\n-------------------\n\nfor 'eat~take':\n\nincrease the player's wheat quantity attribute by a value (usually 1, but you can do 5, 10, 50, 100, etc, lol):\n\nset variable player.wheat_quantity = [expression] player.wheat_quantity + 1\n\nconceptually of how it works:\n\ninitial value: player.wheat_quantity = 0\n\nold value: player.wheat_quantity = 0\n\nplayer.wheat_quantity (new) = player.wheat_quantity (old: 0) + 1\nplayer.wheat_quantity (new) =  (0) + 1 = 1\n\nnew value: player.wheat_quantity = 1\n\nold value: player.wheat_quantity = 1\n\nplayer.wheat_quantity (new) = player.wheat_quantity (old: 1) + 1\nplayer.wheat_quantity (new) =  (1) + 1 = 2\n\nnew value: player.wheat_quantity = 2\n\nold value: player.wheat_quantity = 2\n\nplayer.wheat_quantity (new) = player.wheat_quantity (old: 2) + 1\nplayer.wheat_quantity (new) =  (2) + 1 = 3\n\nnew value: player.wheat_quantity = 3\n\netc etc etc\n\n---\n\ndecrease the wheat's quantity attribute by the same value amount:\n\nset variable wheat.quantity = [expression] wheat.quantity - 1\n\n-------------------\n\nfor 'give~whatever' (example of if the player was giving his wheat back to the wheat object):\n\ndecrease the player's wheat quantity attribute by a value (usually 1, but you can do 5, 10, 50, 100, etc, lol):\n\nset variable player.wheat_quantity = [expression] player.wheat_quantity - 1\n\n----\n\nincrease the wheat's quantity attribute by the same value amount\n\nset variable wheat.quantity = [expression] wheat.quantity + 1",
      "EditableFormat": "bbcode",
      "HTML": "if you're using Attributes, you'll want to create~add to both your player object and the wheat object, for an example:<br/><br/>(think of these Attributes as imaginary, formally: logical, 'purses' or 'wallets' or 'bags' for your 'player' Object and for your 'wheat' Object)<br/><br/>'player' Player Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)<br/><br/>(Object Name: player)<br/>Attribute Name: wheat_quantity // or whatever you want to call it<br/>Attribute Type: int (integer: a non-decimal number: etc, -100, -1, 0, 1, 100, etc)<br/>Attribute Value: 0 // or whatever amount of wheat you want to start with<br/><br/>---------------<br/><br/>'wheat' Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)<br/><br/>(Object Name: wheat)<br/>Attribute Name: quantity // or whatever you want to call it<br/>Attribute Type: int<br/>Attribute Value: 99 // or whatever amount of wheat you want the wheat to be starting at<br/><br/>----------<br/><br/>Attribute Usage (Adjusting Attributes):<br/><br/>then you got to do an Attribute transaction (buy-sell structure) when you 'eat~take' the wheat or 'give~whatever' more wheat to the wheat object:<br/><br/>(we are imaginatorily~pretendingly, aka logically, transacting our imaginary quantities of wheat, as opposed to the actual &quot;physical&quot; wheat object~s, think of like trading stocks at wall street, imaginary money or imaginary quantities of products)<br/><br/>add new script -&gt; variables -&gt; 'set a variable or attribute' -&gt; (see below)<br/><br/>set variable Object_name.Attribute_name = [expression] Object_name.Attribute_name OPERATOR Value<br/><br/>for my example of my own general format~syntax, hopefully explaning it for you:<br/><br/>replace my 'Object_name'  with 'player'<br/>replace my 'Attribute_name' with 'wheat_quantity'<br/><br/>replace my 'Object_name'  with 'wheat'<br/>replace my 'Attribute_name' with 'quantity'<br/><br/>replace my 'OPERATOR' with '+'<br/>replace my 'OPERATOR' with '-'<br/><br/>replace my 'Value' with '1'<br/><br/>--------<br/><br/>so for example:<br/><br/>usually the OPERATOR is addition (+) or subtraction (-), but you can use multiplication (*), division: division_for_quotient (/), modulus: division_for_remainder (%), exponentials (probably: ** or ^, but not sure in quest what it is, lol), etc<br/><br/>-------------------<br/><br/>for 'eat~take':<br/><br/>increase the player's wheat quantity attribute by a value (usually 1, but you can do 5, 10, 50, 100, etc, lol):<br/><br/>set variable player.wheat_quantity = [expression] player.wheat_quantity + 1<br/><br/>conceptually of how it works:<br/><br/>initial value: player.wheat_quantity = 0<br/><br/>old value: player.wheat_quantity = 0<br/><br/>player.wheat_quantity (new) = player.wheat_quantity (old: 0) + 1<br/>player.wheat_quantity (new) =  (0) + 1 = 1<br/><br/>new value: player.wheat_quantity = 1<br/><br/>old value: player.wheat_quantity = 1<br/><br/>player.wheat_quantity (new) = player.wheat_quantity (old: 1) + 1<br/>player.wheat_quantity (new) =  (1) + 1 = 2<br/><br/>new value: player.wheat_quantity = 2<br/><br/>old value: player.wheat_quantity = 2<br/><br/>player.wheat_quantity (new) = player.wheat_quantity (old: 2) + 1<br/>player.wheat_quantity (new) =  (2) + 1 = 3<br/><br/>new value: player.wheat_quantity = 3<br/><br/>etc etc etc<br/><br/>---<br/><br/>decrease the wheat's quantity attribute by the same value amount:<br/><br/>set variable wheat.quantity = [expression] wheat.quantity - 1<br/><br/>-------------------<br/><br/>for 'give~whatever' (example of if the player was giving his wheat back to the wheat object):<br/><br/>decrease the player's wheat quantity attribute by a value (usually 1, but you can do 5, 10, 50, 100, etc, lol):<br/><br/>set variable player.wheat_quantity = [expression] player.wheat_quantity - 1<br/><br/>----<br/><br/>increase the wheat's quantity attribute by the same value amount<br/><br/>set variable wheat.quantity = [expression] wheat.quantity + 1",
      "PostDate": "2015-10-09T04:58:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38282",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;Encrtia&quot;:2xbhmdd2]Oh right! Ok, will do. Wasn't aware it was complex haha, I hadn't touched attributes thinking this was going to be simple.\n\nI'll go through the links provided, &amp; see about understanding Attributes then.[/quote:2xbhmdd2]\nThe first thing you need to do is decide exactly what the player will experience. As you have described it, a new wheat stem will magically appear when the player eats the old one. Does that make sense in the game?\n\nFrom a realism point of view, the player should pick a wheat stem, but there should still be one left in the room (which you can do fairly easily using the clone script command; when the player picks a wheat stem, do not move it, but clone a new one, and put it in the player inventory). \n\nBut then what happens if the player picks another and another and another? Does it matter if he has two thousand in his inventory? Or do you want to limit it to just one?",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Encrtia wrote:</cite>Oh right! Ok, will do. Wasn't aware it was complex haha, I hadn't touched attributes thinking this was going to be simple.<br/><br/>I'll go through the links provided, &amp; see about understanding Attributes then.</blockquote><br/>The first thing you need to do is decide exactly what the player will experience. As you have described it, a new wheat stem will magically appear when the player eats the old one. Does that make sense in the game?<br/><br/>From a realism point of view, the player should pick a wheat stem, but there should still be one left in the room (which you can do fairly easily using the clone script command; when the player picks a wheat stem, do not move it, but clone a new one, and put it in the player inventory). <br/><br/>But then what happens if the player picks another and another and another? Does it matter if he has two thousand in his inventory? Or do you want to limit it to just one?",
      "PostDate": "2015-10-09T08:57:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38283",
      "UserId": 0,
      "Username": "Encrtia",
      "UserAvatar": null,
      "UserGravatar": "dcb4dcc7796cdbad6fbb09ace8754047",
      "EditableText": "Yes,The Pixie, I thought about this. I was going to go with the concept of, in non-coding terminology:\n\nCommand to pick a wheat stem -&gt; check if Wheat stem clone exists in inventory. If no, clone wheat stem. If yes, &quot;Only need 1 to look like you work on the farm&quot; message + no clone.\n\nI've yet to experiment with what's already typed in this thread.",
      "EditableFormat": "bbcode",
      "HTML": "Yes,The Pixie, I thought about this. I was going to go with the concept of, in non-coding terminology:<br/><br/>Command to pick a wheat stem -&gt; check if Wheat stem clone exists in inventory. If no, clone wheat stem. If yes, &quot;Only need 1 to look like you work on the farm&quot; message + no clone.<br/><br/>I've yet to experiment with what's already typed in this thread.",
      "PostDate": "2015-10-09T09:58:23+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38287",
      "UserId": 0,
      "Username": "Encrtia",
      "UserAvatar": null,
      "UserGravatar": "dcb4dcc7796cdbad6fbb09ace8754047",
      "EditableText": "I'm going to be honest - the attributes are still a little hazy for me. But as The Pixie was aware, having the player collect something isn't actually a top priority. So having this effect, at least currently, is a resource I'm aware of but not using for now. Thank you HegemonKhan.\n\nPlaying around with your EdiblesDemo, XanMag, I was sadly not able to interact with Magoo x3 However, I was able to see your example. As it currently stands though, I'm able to take an indefinite amount of Apples, but only actually take &amp; eat one. A loop hole in effect.\n\nSo, what I'm thinking now - or at least, trying to tinker with - is the cloning concept. I forget that at the end of the day, when coding, it's not about making everything work the way you'd expect it to in real life, but make it [i:34s47gc8]look[/i:34s47gc8] how it should. \nRight now, I'm running this model:\n[code:34s47gc8]if (Got(wheat1)) {\n  msg (&quot;You can't&#46;&quot;)\n}\nelse if (not Got(wheat1)) {\n  msg (&quot;You decided to pick one of the wheat stems&#46;&quot;)\n  CloneObjectAndMove (Wheat Ste, player)\n  AddToInventory (wheat1)\n  MakeObjectInvisible (wheat1)\n}[/code:34s47gc8]\nI would have initially done an &quot;if the player has a clone of Wheat Stem&quot;, but I don't think you can haha, so instead, I've added the Wheat Stem to his inventory, &amp; made it invisible, to fulfill the check. However, the [i:34s47gc8]if[/i:34s47gc8] check can't detect Invisible objects? I'm not sure how to proceed with cloni....or perhaps I could simply make a random room that the player will never go into, clone the object &amp; put it in there... then do the clone check on that room, which'll be fine if it's visible since the player will never enter that room... that could work. Is this method usable? Or will that eventually clog things up?\n\nBut then going back to XanMag's demonstration of Flagging...\n\n[code:34s47gc8]if (GetBoolean(Wheat Ste, &quot;taken&quot;)) {\n  msg (&quot;You can't&#46;&quot;)\n}\nelse if (not GetBoolean(Wheat Ste, &quot;taken&quot;)) {\n  msg (&quot;You decided to pick one of the wheat stems&#46;&quot;)\n  AddToInventory (Wheat Ste)\n  SetObjectFlagOn (Wheat Ste, &quot;taken&quot;)\n}[/code:34s47gc8]\n[code:34s47gc8]msg (&quot;You ate it&#46;&#46;&#46;&quot;)\nMoveObject (Wheat Ste, Room1)\nSetObjectFlagOff (Wheat Ste, &quot;taken&quot;)[/code:34s47gc8]\nI'm set.. that does it perfectly. The only thing I need to cover from this thread in more depth now, is Attributes &amp; tiny bit more on the cloning concept.",
      "EditableFormat": "bbcode",
      "HTML": "I'm going to be honest - the attributes are still a little hazy for me. But as The Pixie was aware, having the player collect something isn't actually a top priority. So having this effect, at least currently, is a resource I'm aware of but not using for now. Thank you HegemonKhan.<br/><br/>Playing around with your EdiblesDemo, XanMag, I was sadly not able to interact with Magoo x3 However, I was able to see your example. As it currently stands though, I'm able to take an indefinite amount of Apples, but only actually take &amp; eat one. A loop hole in effect.<br/><br/>So, what I'm thinking now - or at least, trying to tinker with - is the cloning concept. I forget that at the end of the day, when coding, it's not about making everything work the way you'd expect it to in real life, but make it <span style=\"font-style:italic;\">look</span> how it should. <br/>Right now, I'm running this model:<br/><pre><code>if (Got(wheat1)) {<br/>  msg (&quot;You can't&#46;&quot;)<br/>}<br/>else if (not Got(wheat1)) {<br/>  msg (&quot;You decided to pick one of the wheat stems&#46;&quot;)<br/>  CloneObjectAndMove (Wheat Ste, player)<br/>  AddToInventory (wheat1)<br/>  MakeObjectInvisible (wheat1)<br/>}</code></pre><br/>I would have initially done an &quot;if the player has a clone of Wheat Stem&quot;, but I don't think you can haha, so instead, I've added the Wheat Stem to his inventory, &amp; made it invisible, to fulfill the check. However, the <span style=\"font-style:italic;\">if</span> check can't detect Invisible objects? I'm not sure how to proceed with cloni....or perhaps I could simply make a random room that the player will never go into, clone the object &amp; put it in there... then do the clone check on that room, which'll be fine if it's visible since the player will never enter that room... that could work. Is this method usable? Or will that eventually clog things up?<br/><br/>But then going back to XanMag's demonstration of Flagging...<br/><br/><pre><code>if (GetBoolean(Wheat Ste, &quot;taken&quot;)) {<br/>  msg (&quot;You can't&#46;&quot;)<br/>}<br/>else if (not GetBoolean(Wheat Ste, &quot;taken&quot;)) {<br/>  msg (&quot;You decided to pick one of the wheat stems&#46;&quot;)<br/>  AddToInventory (Wheat Ste)<br/>  SetObjectFlagOn (Wheat Ste, &quot;taken&quot;)<br/>}</code></pre><br/><pre><code>msg (&quot;You ate it&#46;&#46;&#46;&quot;)<br/>MoveObject (Wheat Ste, Room1)<br/>SetObjectFlagOff (Wheat Ste, &quot;taken&quot;)</code></pre><br/>I'm set.. that does it perfectly. The only thing I need to cover from this thread in more depth now, is Attributes &amp; tiny bit more on the cloning concept.",
      "PostDate": "2015-10-09T12:24:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38290",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "You have this:\n[code:6srbuqcq]if (Got(wheat1)) {\n  msg (&quot;You can't&#46;&quot;)\n}\nelse if (not Got(wheat1)) {\n  msg (&quot;You decided to pick one of the wheat stems&#46;&quot;)\n  CloneObjectAndMove (Wheat Ste, player)\n  AddToInventory (wheat1)\n  MakeObjectInvisible (wheat1)\n}[/code:6srbuqcq]\nThe last two lines are unnecessary. The cloned object will be the the inventory already, as you are moving it to the player, and you want the thing to be visible. The tricky bit then is checking if the player has the wheat, because each time it is cloned it will get a new name. This is where the flags come in.\n[code:6srbuqcq]if (GetBoolean(Wheat Ste, &quot;taken&quot;)) {\n  msg (&quot;You can't&#46;&quot;)\n}\nelse if (not Got(wheat1)) {\n  msg (&quot;You decided to pick one of the wheat stems&#46;&quot;)\n  CloneObjectAndMove (Wheat Ste, player)\n  SetObjectFlagOn (Wheat Ste, &quot;taken&quot;)\n}[/code:6srbuqcq]\nWhen eating, you need one line less:\n[code:6srbuqcq]msg (&quot;You ate it&#46;&#46;&#46;&quot;)\nSetObjectFlagOff (Wheat Ste, &quot;taken&quot;)[/code:6srbuqcq]",
      "EditableFormat": "bbcode",
      "HTML": "You have this:<br/><pre><code>if (Got(wheat1)) {<br/>  msg (&quot;You can't&#46;&quot;)<br/>}<br/>else if (not Got(wheat1)) {<br/>  msg (&quot;You decided to pick one of the wheat stems&#46;&quot;)<br/>  CloneObjectAndMove (Wheat Ste, player)<br/>  AddToInventory (wheat1)<br/>  MakeObjectInvisible (wheat1)<br/>}</code></pre><br/>The last two lines are unnecessary. The cloned object will be the the inventory already, as you are moving it to the player, and you want the thing to be visible. The tricky bit then is checking if the player has the wheat, because each time it is cloned it will get a new name. This is where the flags come in.<br/><pre><code>if (GetBoolean(Wheat Ste, &quot;taken&quot;)) {<br/>  msg (&quot;You can't&#46;&quot;)<br/>}<br/>else if (not Got(wheat1)) {<br/>  msg (&quot;You decided to pick one of the wheat stems&#46;&quot;)<br/>  CloneObjectAndMove (Wheat Ste, player)<br/>  SetObjectFlagOn (Wheat Ste, &quot;taken&quot;)<br/>}</code></pre><br/>When eating, you need one line less:<br/><pre><code>msg (&quot;You ate it&#46;&#46;&#46;&quot;)<br/>SetObjectFlagOff (Wheat Ste, &quot;taken&quot;)</code></pre>",
      "PostDate": "2015-10-09T15:31:29+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38300",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "@Encrtia:\n\ndon't worry about the Attributes, after you learned more with quest, you can come back to this thread later, and see if you understand them better, as right now, I'm sure my long Attribute explanation is daunting and~or you're overwhelmed by it or all the terms~stuff involved (I was ~3 years ago when I first discovered quest).\n\nI understand Attributes now, because it's 3 years later, lol. It took me quite awhile to understand them, so don't worry if you don't get them right away.",
      "EditableFormat": "bbcode",
      "HTML": "@Encrtia:<br/><br/>don't worry about the Attributes, after you learned more with quest, you can come back to this thread later, and see if you understand them better, as right now, I'm sure my long Attribute explanation is daunting and~or you're overwhelmed by it or all the terms~stuff involved (I was ~3 years ago when I first discovered quest).<br/><br/>I understand Attributes now, because it's 3 years later, lol. It took me quite awhile to understand them, so don't worry if you don't get them right away.",
      "PostDate": "2015-10-10T13:19:12+01:00",
      "LastEditDate": null
    }
  ]
}
