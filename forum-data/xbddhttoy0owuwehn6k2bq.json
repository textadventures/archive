{
  "Topic": {
    "TopicId": "xbddhttoy0owuwehn6k2bq",
    "ForumId": "10",
    "Title": "Wait Scope Difference? [Resolved]",
    "LastUpdated": "2019-01-30T09:06:09.9128774Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "775f1336-dbd0-4421-a040-030dd0a16237",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Just noticed that while\r\n```\r\nstr = \"okay\"\r\nwait {\r\n  msg (str)\r\n}\r\n```\r\nis fine,\r\n```\r\nstr = \"okay\"\r\nSetTimeout (1) {\r\n  msg (str)\r\n}\r\n```\r\nproduces an error message: _Error running script: Error compiling expression 'str': Unknown object or variable 'str'_?\r\n\r\nAnyone have an explanation?",
      "EditableFormat": "markdown",
      "HTML": "<p>Just noticed that while</p>\n<pre><code>str = \"okay\"\nwait {\n  msg (str)\n}\n</code></pre>\n<p>is fine,</p>\n<pre><code>str = \"okay\"\nSetTimeout (1) {\n  msg (str)\n}\n</code></pre>\n<p>produces an error message: <em>Error running script: Error compiling expression 'str': Unknown object or variable 'str'</em>?</p>\n<p>Anyone have an explanation?</p>\n\n",
      "PostDate": "2019-01-30T09:06:09.9128774Z",
      "LastEditDate": "2019-01-30T10:49:12.2592641Z",
      "link": null
    },
    {
      "PostId": "4a645d9f-f9ce-45e0-96f0-e99335326c87",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "`wait` is special; it defines a block of code, and is implemented in C# as a special case.\r\n\r\nSetTimeout is a function (defined in `CoreTimers.aslx`) whose second parameter is a script. It creates a timer, and saves the script you pass to it as a script attribute of that timer. And script attributes don't have access to the scope they were created in (unlike Javascript's scope-frame model, where they do)",
      "EditableFormat": "markdown",
      "HTML": "<p><code>wait</code> is special; it defines a block of code, and is implemented in C# as a special case.</p>\n<p>SetTimeout is a function (defined in <code>CoreTimers.aslx</code>) whose second parameter is a script. It creates a timer, and saves the script you pass to it as a script attribute of that timer. And script attributes don't have access to the scope they were created in (unlike Javascript's scope-frame model, where they do)</p>\n\n",
      "PostDate": "2019-01-30T09:34:19.5751588Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "43908fb7-2d85-4020-ae60-e9f78ca6953b",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks mrangel, good to know. I can pass values in through game attributes:\r\n```\r\ngame.str = \"okay\"\r\nSetTimeout (1) {\r\n  msg (game.str)\r\n}\r\n```\r\nwhich works fine!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks mrangel, good to know. I can pass values in through game attributes:</p>\n<pre><code>game.str = \"okay\"\nSetTimeout (1) {\n  msg (game.str)\n}\n</code></pre>\n<p>which works fine!</p>\n\n",
      "PostDate": "2019-01-30T10:00:09.9406819Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7c2662ce-0239-4f10-a181-354e63dc20d4",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You could also do what I did, and create a version of SetTimeout that takes parameters:\r\n```\r\n  <function name=\"SetTimeoutParams\" parameters=\"interval, params, script\">\r\n    timername = GetUniqueElementName(\"timeout\")\r\n    create timer (timername)\r\n    timer = GetTimer(timername)\r\n    SetTimerInterval(timer, interval)\r\n    timer.timeoutscript = script\r\n    timer.parameters = params\r\n    SetTimerScript(timer) {\r\n      this.enabled = false\r\n      invoke (this.timeoutscript, this.parameters)\r\n      JS.scrollToEnd ()\r\n      destroy (this.name)\r\n    }\r\n    EnableTimer(timer)\r\n  </function>\r\n```\r\nand then use it like:\r\n```\r\nSetTimeoutParams (1, QuickParams(\"str\", \"okay\")) {\r\n  msg (str)\r\n}\r\n```\r\n(I've also done this with SetTurnTimeout as well, because it's useful to pass parameters to a callback)",
      "EditableFormat": "markdown",
      "HTML": "<p>You could also do what I did, and create a version of SetTimeout that takes parameters:</p>\n<pre><code>  &lt;function name=\"SetTimeoutParams\" parameters=\"interval, params, script\"&gt;\n    timername = GetUniqueElementName(\"timeout\")\n    create timer (timername)\n    timer = GetTimer(timername)\n    SetTimerInterval(timer, interval)\n    timer.timeoutscript = script\n    timer.parameters = params\n    SetTimerScript(timer) {\n      this.enabled = false\n      invoke (this.timeoutscript, this.parameters)\n      JS.scrollToEnd ()\n      destroy (this.name)\n    }\n    EnableTimer(timer)\n  &lt;/function&gt;\n</code></pre>\n<p>and then use it like:</p>\n<pre><code>SetTimeoutParams (1, QuickParams(\"str\", \"okay\")) {\n  msg (str)\n}\n</code></pre>\n<p>(I've also done this with SetTurnTimeout as well, because it's useful to pass parameters to a callback)</p>\n\n",
      "PostDate": "2019-01-30T14:48:23.3187767Z",
      "LastEditDate": "2019-01-30T14:49:36.9845383Z",
      "link": null
    },
    {
      "PostId": "f435169f-6215-476c-8d9d-0f84eeb93453",
      "UserId": 360312,
      "Username": "agariogames",
      "AvatarUrl": "https://secure.gravatar.com/avatar/fcf691f093c181d49cf0761c4fb6755f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I really wanted to send a small word to say thanks to you for the fantastic points you are writing on this site. i returned to <a href=\"http://basketballlegends.co/sports-heads-basketball-championship\">sports head basketball</a>\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I really wanted to send a small word to say thanks to you for the fantastic points you are writing on this site. i returned to <a href=\"http://basketballlegends.co/sports-heads-basketball-championship\">sports head basketball</a></p>\n\n",
      "PostDate": "2019-02-01T05:19:07.5720794Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
