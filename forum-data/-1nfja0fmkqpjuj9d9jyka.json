{
  "Topic": {
    "TopicId": "-1nfja0fmkqpjuj9d9jyka",
    "ForumId": "10",
    "Title": "How do I use w3schools or learn coding?",
    "LastUpdated": "2024-03-24T14:32:29.0835111Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "c690bcb5-ad64-4213-9071-500f5376d72f",
      "UserId": 31991,
      "Username": "daeun",
      "AvatarUrl": "https://i.imgur.com/Xvt8zzBb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "mrangel kindly revealed a huge coding explanation website at\r\nhttps://textadventures.co.uk/forum/quest/topic/jue4u7tdj06fgq4ap5n53q/trying-to-change-the-inventory-pane\r\nBut I did not want to hijack that thread and go off topic, so I post a new topic instead.\r\n\r\nQuick link to w3schools:\r\nhttps://www.w3schools.com/howto/howto_css_custom_scrollbar.asp\r\n\r\n_______________________\r\n\r\nFirst of all, I am completely stuck and do not know how to use that website or learn coding from other websites.\r\nEventually, I realized that is because textadventures is using a completely different set of coding possibly ASLX which is not taught at other websites.\r\n\r\nSo, yes, it is possible to learn ASLX from quest documentation.\r\nBut I got a gut feeling that it doesn't teaches everything, as every time a coder or mrangel speaks, my head goes blank.\r\nI am unable to understand why this advanced code is more advanced, more efficient, more easier to do or what does the code means.\r\n\r\n>Note: Yes, it's a spring tensor distribution algorithm implemented using bubble sort. As much as I'd like to do it more efficiently, every method I could think of ends up being way more complex thanks to the interesting quirks of Quest's data scructures.\r\n\r\nhttps://textadventures.co.uk/forum/samples/topic/qlq41v0lkky5hlf_rnk5sw/silly-way-to-do-page-numbers-quest-gamebook\r\nHoly, what is spring? what is tensor? what is distribution? what is algorithm? what is bubble sort?\r\n\r\nBecause I do not understand advanced coding, I cannot modify, upgrade or create a better coding or evaluate the efficiency of a code.\r\n\r\n>foreach (object, GetDirectChildren (room)) {\r\n  if (HasInt (object, \"x\") and HasInt (object, \"y\") and not Contains (game.pov, object)) {\r\n    object.visible = (object.x = game.x and object.y = game.y)\r\n  }\r\n}\r\nfloorlist = FilterByAttribute (GetDirectChildren (game.pov.parent), \"prototype\", Floor)\r\nif (ListCount (floorlist) = 0) {\r\n  // do whatever you wanted to do if there *isn't* a floor here\r\n  thisfloor = CloneObjectAndMoveHere (Floor)\r\n  thisfloor.x = game.x\r\n  thisfloor.y = game.y\r\n}\r\n\r\nhttps://textadventures.co.uk/forum/quest/topic/igcf62bri0ovenfu0aapwg/how-to-create-infinite-maze\r\n\r\nHoly, what is foreach?, what is hasint? what is floorlist? what is filterbyattribute? what is thisfloor?\r\nOkay, I understand each of the definition can be found in quest documentation, but it does not explains it well enough.\r\n1. Why use this method?\r\n2. Why is this method more efficient?\r\n3. When do I use this method?\r\n4. Which coding methods works well with which coding methods?\r\n\r\nAt the very beginning, I have only known if else loop.\r\n\r\nOver the years, I have understood more concepts with mrangel's help like\r\ngame.pov (Player.)\r\nthis.parent (Teleporting.)\r\nthis.visible (Purchase/sell, kill/respawn.)\r\na little bit of parser command (Parser games.)\r\npixie's library (Most efficient npc conversation and possibly detective style games.)\r\n\r\nBut I feel like I am missing out on something, something like a \"coder style\" or efficiency guide or \"other methods besides if else loops\".\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>mrangel kindly revealed a huge coding explanation website at<br>\nhttps://textadventures.co.uk/forum/quest/topic/jue4u7tdj06fgq4ap5n53q/trying-to-change-the-inventory-pane<br>\nBut I did not want to hijack that thread and go off topic, so I post a new topic instead.</p>\n<p>Quick link to w3schools:<br>\nhttps://www.w3schools.com/howto/howto_css_custom_scrollbar.asp</p>\n<hr>\n<p>First of all, I am completely stuck and do not know how to use that website or learn coding from other websites.<br>\nEventually, I realized that is because textadventures is using a completely different set of coding possibly ASLX which is not taught at other websites.</p>\n<p>So, yes, it is possible to learn ASLX from quest documentation.<br>\nBut I got a gut feeling that it doesn't teaches everything, as every time a coder or mrangel speaks, my head goes blank.<br>\nI am unable to understand why this advanced code is more advanced, more efficient, more easier to do or what does the code means.</p>\n<blockquote>\n<p>Note: Yes, it's a spring tensor distribution algorithm implemented using bubble sort. As much as I'd like to do it more efficiently, every method I could think of ends up being way more complex thanks to the interesting quirks of Quest's data scructures.</p>\n</blockquote>\n<p>https://textadventures.co.uk/forum/samples/topic/qlq41v0lkky5hlf_rnk5sw/silly-way-to-do-page-numbers-quest-gamebook<br>\nHoly, what is spring? what is tensor? what is distribution? what is algorithm? what is bubble sort?</p>\n<p>Because I do not understand advanced coding, I cannot modify, upgrade or create a better coding or evaluate the efficiency of a code.</p>\n<blockquote>\n<p>foreach (object, GetDirectChildren (room)) {<br>\nif (HasInt (object, \"x\") and HasInt (object, \"y\") and not Contains (game.pov, object)) {<br>\nobject.visible = (object.x = game.x and object.y = game.y)<br>\n}<br>\n}<br>\nfloorlist = FilterByAttribute (GetDirectChildren (game.pov.parent), \"prototype\", Floor)<br>\nif (ListCount (floorlist) = 0) {<br>\n// do whatever you wanted to do if there <em>isn't</em> a floor here<br>\nthisfloor = CloneObjectAndMoveHere (Floor)<br>\nthisfloor.x = game.x<br>\nthisfloor.y = game.y<br>\n}</p>\n</blockquote>\n<p>https://textadventures.co.uk/forum/quest/topic/igcf62bri0ovenfu0aapwg/how-to-create-infinite-maze</p>\n<p>Holy, what is foreach?, what is hasint? what is floorlist? what is filterbyattribute? what is thisfloor?<br>\nOkay, I understand each of the definition can be found in quest documentation, but it does not explains it well enough.</p>\n<ol>\n<li>Why use this method?</li>\n<li>Why is this method more efficient?</li>\n<li>When do I use this method?</li>\n<li>Which coding methods works well with which coding methods?</li>\n</ol>\n<p>At the very beginning, I have only known if else loop.</p>\n<p>Over the years, I have understood more concepts with mrangel's help like<br>\ngame.pov (Player.)<br>\nthis.parent (Teleporting.)<br>\nthis.visible (Purchase/sell, kill/respawn.)<br>\na little bit of parser command (Parser games.)<br>\npixie's library (Most efficient npc conversation and possibly detective style games.)</p>\n<p>But I feel like I am missing out on something, something like a \"coder style\" or efficiency guide or \"other methods besides if else loops\".</p>\n\n",
      "PostDate": "2024-03-24T14:32:29.0835111Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
