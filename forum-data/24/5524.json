{
  "Topic": {
    "TopicId": "5524",
    "ForumId": "24",
    "Title": "Newbie at JavaScript - Why does this kill my game?",
    "LastUpdated": "2015-10-07T00:18:35+01:00",
    "ReplyCount": 6
  },
  "Posts": [
    {
      "PostId": "38183",
      "UserId": 0,
      "Username": "Kilyle",
      "UserAvatar": null,
      "UserGravatar": "f6292e98a3467e3936d6b11598988843",
      "EditableText": "I'm not a newbie at programming (I hail from way back in the GW-BASIC days, and made it through to C++ in college), but I'm newbie at JavaScript and obviously haven't internalized the little bits that can break a program.\n\nWell, my program's broken.  It works okay until I add one line of Javascript, at which point it kills further progression of the Squiffy script into the next section of my game.  And if I can't figure out how to make one function call work, I don't hold out much hope for the rest of this enterprise  <!-- s:? --><img src=\"{SMILIES_PATH}/icon_confused.gif\" alt=\":?\" title=\"Confused\" /><!-- s:? --> \n\nHere is how the code made it through to Squiffy's story file:\n[code:1300gzuu]\n'js'&#58; function() {\n\tnewTheme('ZeyMidnight&#46;css');\n},\n[/code:1300gzuu]\nAnd here are my declared functions, in the HTML document itself.  I'm adding the entire script section, at the bottom of the body section (just before the closing &lt;/body&gt; tag), so if anything's weird you can point it out.\n[code:1300gzuu]\n&lt;script src=&quot;jquery&#46;min&#46;js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;story&#46;js&quot;&gt;&lt;/script&gt;\n\n&lt;script&gt; /* Squiffy's Native Functions */\n\t$(function(){\n\t\t$('#squiffy')&#46;squiffy();\n\t\t$('#restart')&#46;click(function () {\n\t\t\t$('#squiffy')&#46;squiffy('restart');\n\t\t});\n\t});\n&lt;/script&gt;\n&lt;script&gt; /* Zeyovian Functions */\n\tfunction newTheme(theme) {\n\t\tif (!plain) {\n\t\t\tdocument&#46;getElementById('theme')&#46;setAttribute('href', theme);\n\t\t}\n\t}\n\t/* The title fades out every time there's a new theme&#46; */\n\t/* CSS handles transition and timing&#46;  Assuming this works, we drop the defined color for the faded class&#46; */\n\tfunction titleFadeout() {\n\t\tvar bg = getComputedStyle(document&#46;body)&#46;getPropertyValue(&quot;background-color&quot;);\n\t\tdocument&#46;getElementById(&quot;theTitle&quot;)&#46;style&#46;color = bg;\n\t}\n\t\n\t/* Change the location titles&#46; */\n\tfunction newLoc(loc) {\n\t\tdocument&#46;getElementById('loc')&#46;innerHTML=loc;\n\t}\n\tfunction newSubloc(loc) {\n\t\tdocument&#46;getElementById('subloc')&#46;innerHTML=loc;\n\t}\n&lt;/script&gt;\n[/code:1300gzuu]\nOnce I hit the link that starts the story proper and runs that little snippet of code, it just shows a blank screen.  None of the rest of my story comes through.  Help?\n\nNote: The &quot;plain&quot; variable gets set when you choose whether you want changing themes or just a normal theme the whole way through.  I like my changing themes but I know some players might not like them or might have vision problems, so I give them the option of avoiding the themes entirely.",
      "EditableFormat": "bbcode",
      "HTML": "I'm not a newbie at programming (I hail from way back in the GW-BASIC days, and made it through to C++ in college), but I'm newbie at JavaScript and obviously haven't internalized the little bits that can break a program.<br/><br/>Well, my program's broken.  It works okay until I add one line of Javascript, at which point it kills further progression of the Squiffy script into the next section of my game.  And if I can't figure out how to make one function call work, I don't hold out much hope for the rest of this enterprise  <!-- s:? --><img src=\"{SMILIES_PATH}/icon_confused.gif\" alt=\":?\" title=\"Confused\" /><!-- s:? --> <br/><br/>Here is how the code made it through to Squiffy's story file:<br/><pre><code><br/>'js'&#58; function() {<br/>\tnewTheme('ZeyMidnight&#46;css');<br/>},<br/></code></pre><br/>And here are my declared functions, in the HTML document itself.  I'm adding the entire script section, at the bottom of the body section (just before the closing &lt;/body&gt; tag), so if anything's weird you can point it out.<br/><pre><code><br/>&lt;script src=&quot;jquery&#46;min&#46;js&quot;&gt;&lt;/script&gt;<br/>&lt;script src=&quot;story&#46;js&quot;&gt;&lt;/script&gt;<br/><br/>&lt;script&gt; /* Squiffy's Native Functions */<br/>\t$(function(){<br/>\t\t$('#squiffy')&#46;squiffy();<br/>\t\t$('#restart')&#46;click(function () {<br/>\t\t\t$('#squiffy')&#46;squiffy('restart');<br/>\t\t});<br/>\t});<br/>&lt;/script&gt;<br/>&lt;script&gt; /* Zeyovian Functions */<br/>\tfunction newTheme(theme) {<br/>\t\tif (!plain) {<br/>\t\t\tdocument&#46;getElementById('theme')&#46;setAttribute('href', theme);<br/>\t\t}<br/>\t}<br/>\t/* The title fades out every time there's a new theme&#46; */<br/>\t/* CSS handles transition and timing&#46;  Assuming this works, we drop the defined color for the faded class&#46; */<br/>\tfunction titleFadeout() {<br/>\t\tvar bg = getComputedStyle(document&#46;body)&#46;getPropertyValue(&quot;background-color&quot;);<br/>\t\tdocument&#46;getElementById(&quot;theTitle&quot;)&#46;style&#46;color = bg;<br/>\t}<br/>\t<br/>\t/* Change the location titles&#46; */<br/>\tfunction newLoc(loc) {<br/>\t\tdocument&#46;getElementById('loc')&#46;innerHTML=loc;<br/>\t}<br/>\tfunction newSubloc(loc) {<br/>\t\tdocument&#46;getElementById('subloc')&#46;innerHTML=loc;<br/>\t}<br/>&lt;/script&gt;<br/></code></pre><br/>Once I hit the link that starts the story proper and runs that little snippet of code, it just shows a blank screen.  None of the rest of my story comes through.  Help?<br/><br/>Note: The &quot;plain&quot; variable gets set when you choose whether you want changing themes or just a normal theme the whole way through.  I like my changing themes but I know some players might not like them or might have vision problems, so I give them the option of avoiding the themes entirely.",
      "PostDate": "2015-10-06T02:12:59+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38184",
      "UserId": 0,
      "Username": "Kilyle",
      "UserAvatar": null,
      "UserGravatar": "f6292e98a3467e3936d6b11598988843",
      "EditableText": "Experimenting a bit.  First I put an else segment on the IF part, and then I turned it into an explicit &quot;if this isn't true&quot; part.  It still fails.  Then I commented out the contents of the function, and the program runs properly.\n\nSo it's somewhere in this code here:\n[code:uxtnqnbv]\nif (plain != true) {\n\tdocument&#46;getElementById('theme')&#46;setAttribute('href', theme);\n}\nelse {\n\tnewLoc(&quot;Whoops&quot;);\n}\n[/code:uxtnqnbv]\nNow, I had this working earlier before integration with Squiffy, and the new themes were fine.  I'm gonna go experiment with that again and see if the code works when not messing with Squiffy.  But I'm failing to see anything weird with the code.  Again, JavaScript newbie here, and I could really use some fresh (and more experienced) eyes to see what I'm failing to see.",
      "EditableFormat": "bbcode",
      "HTML": "Experimenting a bit.  First I put an else segment on the IF part, and then I turned it into an explicit &quot;if this isn't true&quot; part.  It still fails.  Then I commented out the contents of the function, and the program runs properly.<br/><br/>So it's somewhere in this code here:<br/><pre><code><br/>if (plain != true) {<br/>\tdocument&#46;getElementById('theme')&#46;setAttribute('href', theme);<br/>}<br/>else {<br/>\tnewLoc(&quot;Whoops&quot;);<br/>}<br/></code></pre><br/>Now, I had this working earlier before integration with Squiffy, and the new themes were fine.  I'm gonna go experiment with that again and see if the code works when not messing with Squiffy.  But I'm failing to see anything weird with the code.  Again, JavaScript newbie here, and I could really use some fresh (and more experienced) eyes to see what I'm failing to see.",
      "PostDate": "2015-10-06T09:53:03+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38185",
      "UserId": 0,
      "Username": "Kilyle",
      "UserAvatar": null,
      "UserGravatar": "f6292e98a3467e3936d6b11598988843",
      "EditableText": "Never mind, I think I just figured out the problem.  Will be testing this.",
      "EditableFormat": "bbcode",
      "HTML": "Never mind, I think I just figured out the problem.  Will be testing this.",
      "PostDate": "2015-10-06T10:15:32+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38186",
      "UserId": 0,
      "Username": "Kilyle",
      "UserAvatar": null,
      "UserGravatar": "f6292e98a3467e3936d6b11598988843",
      "EditableText": "Nope, totally did not figure out the problem.\n\nI did realize that I was failing to distinguish between Squiffy's internal set of variables and JavaScript's, which became clear upon reviewing Squiffy's [url=http&#58;//docs&#46;textadventures&#46;co&#46;uk/squiffy/attributes&#46;html:33mqxsye]attributes page[/url:33mqxsye].  So I tried to put that information to work.\n\nI managed to make some variables cross over:\n[code:33mqxsye]\n    var plain = squiffy&#46;get(&quot;plain&quot;);\n    squiffy&#46;set(&quot;jplain&quot;, plain);\n\nSquiffy's Plain&#58; {plain}\nJavaScript's Plain&#58; {jplain}\n[/code:33mqxsye]\nBoth of these agree with each other, and agree with the links that set them to get to this page.  So I can set them to true or false, and both Squiffy and JavaScript have access to this setting.\n\nBUT!  My newTheme function is still failing to pick up on any of this!\n\n[code:33mqxsye]\nfunction newTheme(theme) {\n\tvar plain = squiffy&#46;get(plain);\n\talert (plain);\n\tif (!plain) {\n\t\tdocument&#46;getElementById('theme')&#46;setAttribute('href', theme);\n\t}\n}\n[/code:33mqxsye]\nIt's not running at all, which I take to mean that there's an error in here that is preventing the entire script from functioning.\n\nI tried it while Squiffy was the only thing messing with variables, and that didn't work.  So I put in a direct call here, and that didn't work either.\n\nI tried commenting out the document call there and adding the alert to see if it were getting the right variable, and even that isn't working.\n\nIt's like the thing refuses to interface with Squiffy's variables at all!\n\nI am at an utter loss.  I've spent several hours today going through beginner-level JavaScript lessons and it seems straightforward, pretty simple even, nothing particularly weird or hard to grasp.  I will continue working my way through the lessons but... what the hell is going on here??",
      "EditableFormat": "bbcode",
      "HTML": "Nope, totally did not figure out the problem.<br/><br/>I did realize that I was failing to distinguish between Squiffy's internal set of variables and JavaScript's, which became clear upon reviewing Squiffy's <a href=\"http&#58;//docs&#46;textadventures&#46;co&#46;uk/squiffy/attributes&#46;html\" rel=\"nofollow\">attributes page</a>.  So I tried to put that information to work.<br/><br/>I managed to make some variables cross over:<br/><pre><code><br/>    var plain = squiffy&#46;get(&quot;plain&quot;);<br/>    squiffy&#46;set(&quot;jplain&quot;, plain);<br/><br/>Squiffy's Plain&#58; {plain}<br/>JavaScript's Plain&#58; {jplain}<br/></code></pre><br/>Both of these agree with each other, and agree with the links that set them to get to this page.  So I can set them to true or false, and both Squiffy and JavaScript have access to this setting.<br/><br/>BUT!  My newTheme function is still failing to pick up on any of this!<br/><br/><pre><code><br/>function newTheme(theme) {<br/>\tvar plain = squiffy&#46;get(plain);<br/>\talert (plain);<br/>\tif (!plain) {<br/>\t\tdocument&#46;getElementById('theme')&#46;setAttribute('href', theme);<br/>\t}<br/>}<br/></code></pre><br/>It's not running at all, which I take to mean that there's an error in here that is preventing the entire script from functioning.<br/><br/>I tried it while Squiffy was the only thing messing with variables, and that didn't work.  So I put in a direct call here, and that didn't work either.<br/><br/>I tried commenting out the document call there and adding the alert to see if it were getting the right variable, and even that isn't working.<br/><br/>It's like the thing refuses to interface with Squiffy's variables at all!<br/><br/>I am at an utter loss.  I've spent several hours today going through beginner-level JavaScript lessons and it seems straightforward, pretty simple even, nothing particularly weird or hard to grasp.  I will continue working my way through the lessons but... what the hell is going on here??",
      "PostDate": "2015-10-06T10:36:02+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38187",
      "UserId": 0,
      "Username": "Kilyle",
      "UserAvatar": null,
      "UserGravatar": "f6292e98a3467e3936d6b11598988843",
      "EditableText": "Apparently booleans hate me.  Switching to numbers has cleared the whole thing up.\n\nThis is unacceptable.  Booleans are useful and straightforward yes/no, true/false quantities that numbers cannot adequately substitute for (not least because if I code for an expected dichotomy, a number can always be a third option, while a boolean by nature [i:7xn9szbg]cannot[/i:7xn9szbg] be).\n\nHowever, for now the solution works, and I will wait for an answer as to why booleans are acting crazy.\n\nETA: Solution works only if I put the if statement (&quot;did the user actually want this setting?&quot;) in Squiffy.  The minute I move it to be internal to the function, it fails again.\n\nThis is also unacceptable, as it means adding extra code to every single function call, rather than having the code work inside the function itself.\n\nI hope someone can explain this to me so I can do it right, because this is clearly wrong.\n\nETA 2: Now I'm double-guessing whether I was using assignment instead of equals earlier... but I was using not-equals more often, so I don't think that's the problem.  Yargh.",
      "EditableFormat": "bbcode",
      "HTML": "Apparently booleans hate me.  Switching to numbers has cleared the whole thing up.<br/><br/>This is unacceptable.  Booleans are useful and straightforward yes/no, true/false quantities that numbers cannot adequately substitute for (not least because if I code for an expected dichotomy, a number can always be a third option, while a boolean by nature <span style=\"font-style:italic;\">cannot</span> be).<br/><br/>However, for now the solution works, and I will wait for an answer as to why booleans are acting crazy.<br/><br/>ETA: Solution works only if I put the if statement (&quot;did the user actually want this setting?&quot;) in Squiffy.  The minute I move it to be internal to the function, it fails again.<br/><br/>This is also unacceptable, as it means adding extra code to every single function call, rather than having the code work inside the function itself.<br/><br/>I hope someone can explain this to me so I can do it right, because this is clearly wrong.<br/><br/>ETA 2: Now I'm double-guessing whether I was using assignment instead of equals earlier... but I was using not-equals more often, so I don't think that's the problem.  Yargh.",
      "PostDate": "2015-10-06T10:50:03+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38191",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "When you get a problem like this, the very first thing to do is look in your browser console. On Chrome you get to it from the View menu, then Developer, then JavaScript Console.\n\nFirstly, this will never work:\n\n[code:198xdgeh]\nvar plain = squiffy&#46;get(plain);\n[/code:198xdgeh]\n\nIt should be:\n\n[code:198xdgeh]\nvar plain = squiffy&#46;get(&quot;plain&quot;);\n[/code:198xdgeh]\n\nBecause otherwise it's trying to get the attribute value named by the [i:198xdgeh]value of[/i:198xdgeh] &quot;plain&quot;, which doesn't exist yet.\n\nBut that still won't work, because you're running this in an external script tag. External scripts can't access Squiffy directly using things like &quot;squiffy.get&quot; (because Squiffy doesn't add anything to the global window object - this is so you can have multiple Squiffy stories in the same HTML page). You have to access it using the jQuery element instead. The HTML element is called &quot;squiffy&quot;, and you can call &quot;get&quot; and &quot;set&quot; on it like this:\n\n[code:198xdgeh]\n$(&quot;#squiffy&quot;)&#46;squiffy(&quot;set&quot;, &quot;something&quot;, 123);\n$(&quot;#squiffy&quot;)&#46;squiffy(&quot;get&quot;, &quot;something&quot;);   // returns 123\n[/code:198xdgeh]\n\nSoooo something like this should work (not tested)...\n\n[code:198xdgeh]\nfunction newTheme(theme) {\n   var plain = $(&quot;#squiffy&quot;)&#46;squiffy(&quot;get&quot;, &quot;plain&quot;);\n   alert (plain);\n   if (!plain) {\n      document&#46;getElementById('theme')&#46;setAttribute('href', theme);\n   }\n}\n[/code:198xdgeh]",
      "EditableFormat": "bbcode",
      "HTML": "When you get a problem like this, the very first thing to do is look in your browser console. On Chrome you get to it from the View menu, then Developer, then JavaScript Console.<br/><br/>Firstly, this will never work:<br/><br/><pre><code><br/>var plain = squiffy&#46;get(plain);<br/></code></pre><br/><br/>It should be:<br/><br/><pre><code><br/>var plain = squiffy&#46;get(&quot;plain&quot;);<br/></code></pre><br/><br/>Because otherwise it's trying to get the attribute value named by the <span style=\"font-style:italic;\">value of</span> &quot;plain&quot;, which doesn't exist yet.<br/><br/>But that still won't work, because you're running this in an external script tag. External scripts can't access Squiffy directly using things like &quot;squiffy.get&quot; (because Squiffy doesn't add anything to the global window object - this is so you can have multiple Squiffy stories in the same HTML page). You have to access it using the jQuery element instead. The HTML element is called &quot;squiffy&quot;, and you can call &quot;get&quot; and &quot;set&quot; on it like this:<br/><br/><pre><code><br/>$(&quot;#squiffy&quot;)&#46;squiffy(&quot;set&quot;, &quot;something&quot;, 123);<br/>$(&quot;#squiffy&quot;)&#46;squiffy(&quot;get&quot;, &quot;something&quot;);   // returns 123<br/></code></pre><br/><br/>Soooo something like this should work (not tested)...<br/><br/><pre><code><br/>function newTheme(theme) {<br/>   var plain = $(&quot;#squiffy&quot;)&#46;squiffy(&quot;get&quot;, &quot;plain&quot;);<br/>   alert (plain);<br/>   if (!plain) {<br/>      document&#46;getElementById('theme')&#46;setAttribute('href', theme);<br/>   }<br/>}<br/></code></pre>",
      "PostDate": "2015-10-06T19:44:23+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38197",
      "UserId": 0,
      "Username": "Kilyle",
      "UserAvatar": null,
      "UserGravatar": "f6292e98a3467e3936d6b11598988843",
      "EditableText": "Okay, so... that seems to have worked, and I have a value that comes through to my JavaScript.\n\nBut I'm not sure why this isn't working to sort through which set of themes to use.  It clearly has a different themestyle each time, but evidently my syntax is wrong for basing a switch statement on this value, because it keeps going straight through to default:\n[code:3kuy9kqw]\nfunction newTheme(theme) {\n\tvar themestyle = $(&quot;#squiffy&quot;)&#46;squiffy(&quot;get&quot;, &quot;themestyle&quot;);\n\tnewLoc(themestyle);\n\tswitch (themestyle) {\n\t\tcase &quot;full&quot;&#58;\n\t\t\t/* theme = theme;  Don't need to change anything&#46; */\n\t\t\tnewSubloc(theme);\n\t\t\tbreak;\n\t\tcase &quot;pale&quot;&#58;\n\t\t\t/* Use alternates for the dark versions&#46; */\n\t\t\tbreak;\n\t\tcase &quot;dark&quot;&#58;\n\t\t\t/* Use alternates for the light versions&#46; */\n\t\t\tbreak;\n\t\tcase &quot;plain&quot;&#58;\n\t\t\t/* Don't change it at all&#46; */\n\t\t\ttheme = &quot;&quot;;\n\t\t\tnewSubloc(theme);\n\t\t\tbreak;\n\t\tdefault&#58;\n\t\t\t/* Don't change the theme&#46; */\n\t\t\ttheme = &quot;&quot;;\n\t}\n\tif (theme != &quot;&quot;) {\n\t\tdocument&#46;getElementById('theme')&#46;setAttribute('href', theme + &quot;&#46;css&quot;);\n\t}\n}\n[/code:3kuy9kqw]\nAll these extra quotes are throwing me for a bit of a loop, because in my previous languages you'd be tossing strings everywhere instead of referencing variables... and I guess that's actually what's happening here as well, except that the strings are what's needed by the functions, which is something I still have to wrap my head around.\n\nNote: I threw in newLoc() and newSubloc() in to show me which spots of the code it's getting to and what the variables are at the time.  I'll see about figuring out the browser console thing later.",
      "EditableFormat": "bbcode",
      "HTML": "Okay, so... that seems to have worked, and I have a value that comes through to my JavaScript.<br/><br/>But I'm not sure why this isn't working to sort through which set of themes to use.  It clearly has a different themestyle each time, but evidently my syntax is wrong for basing a switch statement on this value, because it keeps going straight through to default:<br/><pre><code><br/>function newTheme(theme) {<br/>\tvar themestyle = $(&quot;#squiffy&quot;)&#46;squiffy(&quot;get&quot;, &quot;themestyle&quot;);<br/>\tnewLoc(themestyle);<br/>\tswitch (themestyle) {<br/>\t\tcase &quot;full&quot;&#58;<br/>\t\t\t/* theme = theme;  Don't need to change anything&#46; */<br/>\t\t\tnewSubloc(theme);<br/>\t\t\tbreak;<br/>\t\tcase &quot;pale&quot;&#58;<br/>\t\t\t/* Use alternates for the dark versions&#46; */<br/>\t\t\tbreak;<br/>\t\tcase &quot;dark&quot;&#58;<br/>\t\t\t/* Use alternates for the light versions&#46; */<br/>\t\t\tbreak;<br/>\t\tcase &quot;plain&quot;&#58;<br/>\t\t\t/* Don't change it at all&#46; */<br/>\t\t\ttheme = &quot;&quot;;<br/>\t\t\tnewSubloc(theme);<br/>\t\t\tbreak;<br/>\t\tdefault&#58;<br/>\t\t\t/* Don't change the theme&#46; */<br/>\t\t\ttheme = &quot;&quot;;<br/>\t}<br/>\tif (theme != &quot;&quot;) {<br/>\t\tdocument&#46;getElementById('theme')&#46;setAttribute('href', theme + &quot;&#46;css&quot;);<br/>\t}<br/>}<br/></code></pre><br/>All these extra quotes are throwing me for a bit of a loop, because in my previous languages you'd be tossing strings everywhere instead of referencing variables... and I guess that's actually what's happening here as well, except that the strings are what's needed by the functions, which is something I still have to wrap my head around.<br/><br/>Note: I threw in newLoc() and newSubloc() in to show me which spots of the code it's getting to and what the variables are at the time.  I'll see about figuring out the browser console thing later.",
      "PostDate": "2015-10-07T00:18:35+01:00",
      "LastEditDate": null
    }
  ]
}
