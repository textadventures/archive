{
  "Topic": {
    "TopicId": "6350",
    "ForumId": "24",
    "Title": "Newbie question - mulitple booleans in \"IF\"",
    "LastUpdated": "2016-05-19T17:00:22+01:00",
    "ReplyCount": 4
  },
  "Posts": [
    {
      "PostId": "42945",
      "UserId": 0,
      "Username": "Bluevoss",
      "UserAvatar": null,
      "UserGravatar": "3162fe2e57e4cae90adf321de975a9da",
      "EditableText": "Playing with code. There are Booleans to tell you if you have a &quot;tube&quot; and a &quot;bracket&quot;. If you have both, you can build a &quot;fitting&quot; (which sets tube and bracket to false and fitting to true). I've looked all over, even the source code, and am stumped how to do this. Ideas?\n\n[[hall]]:\n{if tube: You have a tube}\n{if bracket: You have a bracket}\n{if fitting: You have a fitting}\n\n{if tube: [examine tube]}\n{if bracket: [examine bracket]}\n{if tube and bracket:[[make fitting]]}  &lt;&lt;this ain't right!\n\nThanks in advance!",
      "EditableFormat": "bbcode",
      "HTML": "Playing with code. There are Booleans to tell you if you have a &quot;tube&quot; and a &quot;bracket&quot;. If you have both, you can build a &quot;fitting&quot; (which sets tube and bracket to false and fitting to true). I've looked all over, even the source code, and am stumped how to do this. Ideas?<br/><br/>[[hall]]:<br/>{if tube: You have a tube}<br/>{if bracket: You have a bracket}<br/>{if fitting: You have a fitting}<br/><br/>{if tube: [examine tube]}<br/>{if bracket: [examine bracket]}<br/>{if tube and bracket:[[make fitting]]}  &lt;&lt;this ain't right!<br/><br/>Thanks in advance!",
      "PostDate": "2016-05-18T21:09:23+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42947",
      "UserId": 0,
      "Username": "TyCamden",
      "UserAvatar": null,
      "UserGravatar": "ff398cb6356c99be5c3547c4a683a2f8",
      "EditableText": "This is the only way I know how to handle it. I am fairly new as well:\n\n[code:t0u4rskq]@start start\n\n&#91;&#91;start&#93;&#93;&#58;\n    set(&quot;tube&quot;,1)\n    set(&quot;bracket&quot;,1)\n    set(&quot;fitting&quot;,0)\n\n&#91;&#91;begin&#93;&#93;\n\n&#91;&#91;begin&#93;&#93;&#58;\n\n{if tube=1&#58; You have a tube}\n\n{if bracket=1&#58; You have a bracket}\n\n{if fitting=1&#58; You have a fitting}\n\n{if tube=1&#58; &#91;examine tube&#93;}\n\n{if bracket=1&#58; &#91;examine bracket&#93;}\n\n{if tube=1&#58;{if bracket=1&#58;&#91;&#91;make fitting&#93;&#93;}}\n\n&#91;&#91;leave&#93;&#93;\n\n&#91;examine tube&#93;&#58;\n\nexamine tube section\n\n&#91;examine bracket&#93;&#58;\n\nexamine bracket section\n\n&#91;&#91;make fitting&#93;&#93;&#58;\n\n    set(&quot;fitting&quot;,1)\n\n    set (&quot;tube&quot;, get(&quot;tube&quot;) - 1 );\n\n    set (&quot;bracket&quot;, get(&quot;bracket&quot;) - 1 );\n\nYou have created a fitting&#46;\n\n&#91;&#91;begin&#93;&#93;\n\n&#91;&#91;leave&#93;&#93;&#58;\n\nYou leave[/code:t0u4rskq]",
      "EditableFormat": "bbcode",
      "HTML": "This is the only way I know how to handle it. I am fairly new as well:<br/><br/><pre><code>@start start<br/><br/>&#91;&#91;start&#93;&#93;&#58;<br/>    set(&quot;tube&quot;,1)<br/>    set(&quot;bracket&quot;,1)<br/>    set(&quot;fitting&quot;,0)<br/><br/>&#91;&#91;begin&#93;&#93;<br/><br/>&#91;&#91;begin&#93;&#93;&#58;<br/><br/>{if tube=1&#58; You have a tube}<br/><br/>{if bracket=1&#58; You have a bracket}<br/><br/>{if fitting=1&#58; You have a fitting}<br/><br/>{if tube=1&#58; &#91;examine tube&#93;}<br/><br/>{if bracket=1&#58; &#91;examine bracket&#93;}<br/><br/>{if tube=1&#58;{if bracket=1&#58;&#91;&#91;make fitting&#93;&#93;}}<br/><br/>&#91;&#91;leave&#93;&#93;<br/><br/>&#91;examine tube&#93;&#58;<br/><br/>examine tube section<br/><br/>&#91;examine bracket&#93;&#58;<br/><br/>examine bracket section<br/><br/>&#91;&#91;make fitting&#93;&#93;&#58;<br/><br/>    set(&quot;fitting&quot;,1)<br/><br/>    set (&quot;tube&quot;, get(&quot;tube&quot;) - 1 );<br/><br/>    set (&quot;bracket&quot;, get(&quot;bracket&quot;) - 1 );<br/><br/>You have created a fitting&#46;<br/><br/>&#91;&#91;begin&#93;&#93;<br/><br/>&#91;&#91;leave&#93;&#93;&#58;<br/><br/>You leave</code></pre>",
      "PostDate": "2016-05-18T22:01:41+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42950",
      "UserId": 0,
      "Username": "Dennis Carlyle",
      "UserAvatar": null,
      "UserGravatar": "85ebb8105680cf9551a4943b3c2c28c8",
      "EditableText": "I came up with this, which may be only part of what you're looking for.  You'd have to tinker with it to get a good range of &quot;You have ... but you need...&quot; messages, but at least it shows only what you [u:3iir0tjq]haven't[/u:3iir0tjq] picked up in the basement.  I found trying to do too much with Squiffy's If/Else when it comes to setting / displaying attributes to be very problematic.\n\n[code:3iir0tjq]\n@start start\n\n&#91;&#91;start&#93;&#93;&#58;\n@set tube = 0\n@set bracket = 0\n@set fitting = 0\n\n&#91;&#91; Start it up! &#93;&#93;(Basement)\n\n&#91;&#91;Basement&#93;&#93;&#58;\n@clear\nThere's a lot of stuff here in the basement&#46;\n{if tube=0&#58;You see a &#91;tube&#93; here&#46;}\n{if bracket=0&#58;There is a &#91;bracket&#93; here&#46;}\n\nA tube and bracket might go together to make a &#91;&#91;fitting&#93;&#93;&#46;\n\n&#91;tube&#93;&#58;\n@set tube = 1\nYou pick up the tube&#46; It's about two feet long, and should work as part of a &#91;&#91;fitting&#93;&#93;&#46;\n\n&#91;&#91;continue &#46; &#46; &#46;&#93;&#93;(Basement)\n\n&#91;bracket&#93;&#58;\n@set bracket = 2\nYou take a sturdy steel bracket&#46; It could form part of a &#91;&#91;fitting&#93;&#93;&#46;\n\n&#91;&#91;continue &#46; &#46; &#46;&#93;&#93;(Basement)\n\n\n&#91;&#91;fitting&#93;&#93;&#58;\n    var Txt = &quot;&quot;;\n    if (get(&quot;tube&quot;) == 1) {Txt = Txt +&quot;You have a tube&#46;&quot;;}\n    if (get(&quot;bracket&quot;) == 2) {Txt = Txt +&quot; You have a bracket&#46;&quot;;}\n    \n    if ((get(&quot;tube&quot;) == 1) &amp;&amp; (get(&quot;bracket&quot;) == 2)) { Txt = Txt + &quot; You have both parts needed, so you now have a fitting&#46;&quot;; }\n\n    set(&quot;Gtxt&quot;, Txt);\n\nTube&#58; {tube}\nBracket&#58; {bracket}\n\n{Gtxt}\n\n&#91;&#91;continue &#46; &#46; &#46;&#93;&#93;(Basement)\n\n[/code:3iir0tjq]",
      "EditableFormat": "bbcode",
      "HTML": "I came up with this, which may be only part of what you're looking for.  You'd have to tinker with it to get a good range of &quot;You have ... but you need...&quot; messages, but at least it shows only what you <span style=\"text-decoration:underline;\">haven't</span> picked up in the basement.  I found trying to do too much with Squiffy's If/Else when it comes to setting / displaying attributes to be very problematic.<br/><br/><pre><code><br/>@start start<br/><br/>&#91;&#91;start&#93;&#93;&#58;<br/>@set tube = 0<br/>@set bracket = 0<br/>@set fitting = 0<br/><br/>&#91;&#91; Start it up! &#93;&#93;(Basement)<br/><br/>&#91;&#91;Basement&#93;&#93;&#58;<br/>@clear<br/>There's a lot of stuff here in the basement&#46;<br/>{if tube=0&#58;You see a &#91;tube&#93; here&#46;}<br/>{if bracket=0&#58;There is a &#91;bracket&#93; here&#46;}<br/><br/>A tube and bracket might go together to make a &#91;&#91;fitting&#93;&#93;&#46;<br/><br/>&#91;tube&#93;&#58;<br/>@set tube = 1<br/>You pick up the tube&#46; It's about two feet long, and should work as part of a &#91;&#91;fitting&#93;&#93;&#46;<br/><br/>&#91;&#91;continue &#46; &#46; &#46;&#93;&#93;(Basement)<br/><br/>&#91;bracket&#93;&#58;<br/>@set bracket = 2<br/>You take a sturdy steel bracket&#46; It could form part of a &#91;&#91;fitting&#93;&#93;&#46;<br/><br/>&#91;&#91;continue &#46; &#46; &#46;&#93;&#93;(Basement)<br/><br/><br/>&#91;&#91;fitting&#93;&#93;&#58;<br/>    var Txt = &quot;&quot;;<br/>    if (get(&quot;tube&quot;) == 1) {Txt = Txt +&quot;You have a tube&#46;&quot;;}<br/>    if (get(&quot;bracket&quot;) == 2) {Txt = Txt +&quot; You have a bracket&#46;&quot;;}<br/>    <br/>    if ((get(&quot;tube&quot;) == 1) &amp;&amp; (get(&quot;bracket&quot;) == 2)) { Txt = Txt + &quot; You have both parts needed, so you now have a fitting&#46;&quot;; }<br/><br/>    set(&quot;Gtxt&quot;, Txt);<br/><br/>Tube&#58; {tube}<br/>Bracket&#58; {bracket}<br/><br/>{Gtxt}<br/><br/>&#91;&#91;continue &#46; &#46; &#46;&#93;&#93;(Basement)<br/><br/></code></pre>",
      "PostDate": "2016-05-19T00:49:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42954",
      "UserId": 0,
      "Username": "Bluevoss",
      "UserAvatar": null,
      "UserGravatar": "3162fe2e57e4cae90adf321de975a9da",
      "EditableText": "TyCam had the trick I was looking for, but both of these examples are going into my how-to file. Using his trick, I could do it with Booleans...\n\n[[start]]:\n\n@set tube\n@set bracket\n@set not fitting\n\n[[go to main room]]\n\n[[go to main room]]:\n\n{if tube: you have a tube&lt;br&gt;}\n{if bracket: you have a bracket&lt;br&gt;}\n{if fitting: you have a fitting&lt;br&gt;}\n{if tube:{if bracket:[build a fitting](buildit)}}\n\n[[bug out]]\n\n[buildit]:\n\n@set not tube\n@set not bracket\n@set fitting\n\nYou build a fitting out of your tube and bracket.\n\n[[bug out]]:\nAnd we're done.&lt;br&gt;\n{if tube: you have a tube&lt;br&gt;}\n{if bracket: you have a bracket&lt;br&gt;}\n{if fitting: you have a fitting&lt;br&gt;}\n\n=====\n\nThis way, I can handle objects as straight Booleans: you have one or you don't. But now I can do nested IFs to get that AND. Thanks to all!",
      "EditableFormat": "bbcode",
      "HTML": "TyCam had the trick I was looking for, but both of these examples are going into my how-to file. Using his trick, I could do it with Booleans...<br/><br/>[[start]]:<br/><br/>@set tube<br/>@set bracket<br/>@set not fitting<br/><br/>[[go to main room]]<br/><br/>[[go to main room]]:<br/><br/>{if tube: you have a tube&lt;br&gt;}<br/>{if bracket: you have a bracket&lt;br&gt;}<br/>{if fitting: you have a fitting&lt;br&gt;}<br/>{if tube:{if bracket:[build a fitting](buildit)}}<br/><br/>[[bug out]]<br/><br/>[buildit]:<br/><br/>@set not tube<br/>@set not bracket<br/>@set fitting<br/><br/>You build a fitting out of your tube and bracket.<br/><br/>[[bug out]]:<br/>And we're done.&lt;br&gt;<br/>{if tube: you have a tube&lt;br&gt;}<br/>{if bracket: you have a bracket&lt;br&gt;}<br/>{if fitting: you have a fitting&lt;br&gt;}<br/><br/>=====<br/><br/>This way, I can handle objects as straight Booleans: you have one or you don't. But now I can do nested IFs to get that AND. Thanks to all!",
      "PostDate": "2016-05-19T02:55:06+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42963",
      "UserId": 0,
      "Username": "TyCamden",
      "UserAvatar": null,
      "UserGravatar": "ff398cb6356c99be5c3547c4a683a2f8",
      "EditableText": "And you taught me how to use Boolean logic. Thanks!",
      "EditableFormat": "bbcode",
      "HTML": "And you taught me how to use Boolean logic. Thanks!",
      "PostDate": "2016-05-19T17:00:22+01:00",
      "LastEditDate": null
    }
  ]
}
