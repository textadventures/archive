{
  "Topic": {
    "TopicId": "tlxwkb0pckckozsuu72itw",
    "ForumId": "24",
    "Title": "Write/Read from text file in Squiffy?",
    "LastUpdated": "2022-08-26T14:39:53.7554091Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "aaeee902-c396-4656-bfe0-2ee3ae3c768d",
      "UserId": 436124,
      "Username": "kyrathasoft",
      "AvatarUrl": "https://secure.gravatar.com/avatar/eb96df0912997a1aec832f4601047aef?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is there a way to read/write from/to a text file in the local game's directory?",
      "EditableFormat": "markdown",
      "HTML": "<p>Is there a way to read/write from/to a text file in the local game's directory?</p>\n\n",
      "PostDate": "2022-08-26T14:39:53.7554091Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0959a9d8-2078-4810-9edd-63c89093ca5a",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The Squiffy editor deletes ```<script>``` tags and their contents when it compiles. So you have to use the command line version, or figure out where exactly in the squiffy.js to put ```<script>```. I don't know how to use the command line version. So the only reason I know this, is that other friendly Squiffy users have always told me where and how to change the squiffy.js file. I'm sorry I can't be more help. I hope somebody answers your question, because I'd also very much like to know.\r\n\r\nIn the meantime, it's easy to frequently embed the same html or text in different places by making your beginning tag and content into an attribute with ```@set attribute_name = ???```. It's almost as easy to frequently embed the same js  snippet by:\r\n\r\n1.  putting it into it's own ```[[section]]```.\r\n2.  Looping into and out of that section.\r\n     a. Use ```@set next_section_for_my_reader_to_see = ???``` in the section before you wish to loop.\r\n    b. Use ```[[Link text]](section_with_my_js_snippet)``` to let the reader loop in and trigger your js snippet.\r\n   c. End your js snippet with ```squiffy.story.go(next_section_for_my_reader_to_see)```.\r\n\r\nActually I'm doing a bad job. Bluevoss discovered this ability and explains it [here](http://textadventures.co.uk/forum/squiffy/topic/_dinu8uc70gkg-gumpiw6a/how-to-write-pure-squiffy-functions).\r\n\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>The Squiffy editor deletes <code>&lt;script&gt;</code> tags and their contents when it compiles. So you have to use the command line version, or figure out where exactly in the squiffy.js to put <code>&lt;script&gt;</code>. I don't know how to use the command line version. So the only reason I know this, is that other friendly Squiffy users have always told me where and how to change the squiffy.js file. I'm sorry I can't be more help. I hope somebody answers your question, because I'd also very much like to know.</p>\n<p>In the meantime, it's easy to frequently embed the same html or text in different places by making your beginning tag and content into an attribute with <code>@set attribute_name = ???</code>. It's almost as easy to frequently embed the same js  snippet by:</p>\n<ol>\n<li>putting it into it's own <code>[[section]]</code>.</li>\n<li>Looping into and out of that section.<br>\na. Use <code>@set next_section_for_my_reader_to_see = ???</code> in the section before you wish to loop.<br>\nb. Use <code>[[Link text]](section_with_my_js_snippet)</code> to let the reader loop in and trigger your js snippet.<br>\nc. End your js snippet with <code>squiffy.story.go(next_section_for_my_reader_to_see)</code>.</li>\n</ol>\n<p>Actually I'm doing a bad job. Bluevoss discovered this ability and explains it <a href=\"http://textadventures.co.uk/forum/squiffy/topic/_dinu8uc70gkg-gumpiw6a/how-to-write-pure-squiffy-functions\">here</a>.</p>\n\n",
      "PostDate": "2022-08-27T22:42:33.0219129Z",
      "LastEditDate": "2022-08-28T23:32:26.0350203Z",
      "link": null
    },
    {
      "PostId": "fe392421-5c3a-425c-93a9-14c3209ef0a0",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't think there's a way to write to a file. Reading might be possible, as it should be the same as the way images/media work.\r\n\r\nFor more detailed guidance, I think it would depend on what kind of file it is, and what you want to do to it.",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't think there's a way to write to a file. Reading might be possible, as it should be the same as the way images/media work.</p>\n<p>For more detailed guidance, I think it would depend on what kind of file it is, and what you want to do to it.</p>\n\n",
      "PostDate": "2022-08-28T10:23:20.7602218Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d43709d1-6bdc-4dfb-9eac-d0748feb2531",
      "UserId": 251768,
      "Username": "Bluevoss",
      "AvatarUrl": "https://i.imgur.com/6mfIIbhb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It would be possible to add a number of \"stock\" files in place, allowing you to pick which one to read. In essence, you'd not be reading a file but possibly a section (or a case segment from JS). As for writing, it would be simply saving current values.\r\n\r\nI guess what I'm clumsily saying it that, since you can really only play squiffy through in one session, you'll have to think of different \"out of the box\" ways for doing this. And yes, you cannot read or write to local directories.\r\n\r\nThere was a thread a while ago about using JS to save your current variables. Mrangel, I thought you helped me with this. I ended up ditching the project, but you could have squiffy generate a unique code to save all your variables/conditions and then reload them (using a coded key) to restart.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>It would be possible to add a number of \"stock\" files in place, allowing you to pick which one to read. In essence, you'd not be reading a file but possibly a section (or a case segment from JS). As for writing, it would be simply saving current values.</p>\n<p>I guess what I'm clumsily saying it that, since you can really only play squiffy through in one session, you'll have to think of different \"out of the box\" ways for doing this. And yes, you cannot read or write to local directories.</p>\n<p>There was a thread a while ago about using JS to save your current variables. Mrangel, I thought you helped me with this. I ended up ditching the project, but you could have squiffy generate a unique code to save all your variables/conditions and then reload them (using a coded key) to restart.</p>\n\n",
      "PostDate": "2022-08-28T13:44:39.4419645Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
