{
  "Topic": {
    "TopicId": "101",
    "ForumId": "10",
    "Title": "A Quest library for common verbs",
    "LastUpdated": "2003-09-20T05:39:06+01:00",
    "ReplyCount": 8
  },
  "Posts": [
    {
      "PostId": "463",
      "UserId": 0,
      "Username": "Farvardin",
      "UserAvatar": null,
      "UserGravatar": "b6ea46e28b64e5f7c68f80468607f022",
      "EditableText": "Some people complained Quest wasn't powerfull enough in comparison to other system such as Inform, Tads etc.\n\nI think this is especially because Quest lacks most of the built-in verbs other system has. It's a bit annoying when one is performing a simple action such as \n\n&gt; throw knife\n&gt; swim \n&gt; lift bed\n\nto get the reply :\n\n\"I don't understand your command. Type HELP for a list of valid commands.\"\n\nOf course every author can (should) add his / her own commands, but it's quite a bit task for general replies (some players could test some normal command to see if an action is possible in the game, and then get this default reply intead).\n\nSo I thought we could make available a library for Quest, with many commands. Authors could modify it, or better add his / her modified commands to suit the game's needs, and even if the author doesn't modify it much, at least there would be more interesting replies and it would give a better opinion of Quest to other people.\n\nHere are some commonly used verbs I've begun to gather. The replies I've made for some of them are not especially good, english is not my mother tongue after all... but are some people here interested in developping this ? Could you find more usefull verbs ?\nAnyway I'll develop this list for my own game, and I'll re-post it later when all will be filled, and then maybe it would be possible to begin to correct all the mistakes <!-- s:) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\n\n[code:2hab0ezz]\n!addto game\n\tcommand &lt;blow in #@quest&#46;objects#&gt;\n\tcommand &lt;borrow&gt;\n\tcommand &lt;buy #quest&#46;objects#&gt; msg &lt;#quest&#46;error&#46;article# is not for sale&gt;\n\tcommand\t&lt;bring&gt;\n\tcommand\t&lt;cancel&gt;\n\tcommand\t&lt;cast&gt;\n\tcommand\t&lt;carve, dig, pick&gt;\n\tcommand\t&lt;change&gt;\n\tcommand\t&lt;clean&gt;\n\tcommand\t&lt;climb&gt;\n\tcommand\t&lt;close&gt;\n\tcommand\t&lt;comb&gt;\n\tcommand\t&lt;complain&gt; msg &lt;Don't complain all the time !&gt;\n\tcommand\t&lt;cook&gt; msg &lt;Maybe it's not time to cook now ?&gt;\n\tcommand\t&lt;cough&gt; msg &lt;Reuf, reuf&gt;\n\tcommand\t&lt;count&gt;\n\tcommand &lt;commit suicide&gt; playerlose\n\tcommand &lt;cry&gt; msg &lt;You don't need to do that now&#46; Crying can't be made on command&#46;&gt;\n\tcommand &lt;cut #@quest&#46;objects#&gt; &#123;\n\t\tif property &lt;#quest&#46;objects#; breakable&gt; then &#123;\n\t\tmsg &lt;You torn #quest&#46;error&#46;gender# #quest&#46;objects# to pieces, and nothing usefull remains&#46;&gt;\n\t\tconceal &lt;#quest&#46;objects#&gt;\n\t\t&#125;\n\t\t&#125;\n\tcommand &lt;change #@quest&#46;objects#&gt; msg &lt;Change what ?&gt;\n\tcommand\t&lt;crawl&gt;\n\tcommand\t&lt;dance&gt; msg &lt;You dance a bit for your own pleasure&gt;\n\tcommand\t&lt;desire&gt;\n\tcommand\t&lt;detach&gt;\n\tcommand\t&lt;dive&gt;\n\tcommand\t&lt;dig&gt;\n\tcommand\t&lt;draw&gt;\n\tcommand\t&lt;dream&gt;\n\tcommand\t&lt;drive&gt;\n\tcommand &lt;drink #@quest&#46;objects#&gt; &#123;\n\t\tif property &lt;#quest&#46;objects#; drinkable&gt; then &#123;\n\t\tmsg &lt;You drink #quest&#46;error&#46;gender# #quest&#46;objects#&gt;\n\t\tconceal &lt;#quest&#46;objects#&gt;\n\t\t&#125; \n\t\telse msg &lt;#quest&#46;error&#46;gender# #quest&#46;objects# doesn't seem good to drink, you should forget this&#46;&gt;\n\t\t&#125;\n\tcommand &lt;eat #@quest&#46;objects#&gt; &#123;\n\t\tif property &lt;#quest&#46;objects#; edible&gt; then &#123;\n\t\tmsg &lt;You eat #quest&#46;error&#46;gender# #quest&#46;objects#&gt;\n\t\tconceal &lt;#quest&#46;objects#&gt;\n\t\t&#125; \n\t\telse &#123; \n\t\t\tmsg &lt;#quest&#46;error&#46;gender# #quest&#46;objects# doesn't appear appetizing, you shouldn't do this&#46;&gt;\n\t\t\t&#125;\n\t\t&#125;\n\tcommand &lt;erode&gt; \n\tcommand\t&lt;edit&gt;\n\tcommand\t&lt;enter&gt;\n\tcommand\t&lt;escape&gt;\n\tcommand\t&lt;explain&gt;\n\tcommand\t&lt;empty&gt;\n\tcommand\t&lt;fill&gt;\n\tcommand\t&lt;find&gt;\n\tcommand\t&lt;finish&gt;\n\tcommand\t&lt;fix&gt;\n\tcommand\t&lt;fly&gt;\n\tcommand\t&lt;glitter&gt;\n\tcommand\t&lt;help #@object#&gt;\n\tcommand &lt;hit #@quest&#46;objects#&gt; msg &lt;What do you plan to use for this courageous action ?&gt;\n\tcommand\t&lt;hurt&gt;\n\tcommand\t&lt;jump&gt;\n\tcommand\t&lt;kiss&gt;\n\tcommand &lt;laugh&gt; msg &lt;Ha ha ha |n Ha ha ha ha&gt;\n\tcommand &lt;love #quest&#46;objects# ; like #quest&#46;objects# ; enjoy #quest&#46;objects#&gt; msg &lt;We're glad you enjoy #quest&#46;error&#46;article#&#46;&gt;\n\tcommand\t&lt;learn&gt;\n\tcommand\t&lt;leave&gt;\n\tcommand\t&lt;lift&gt;\n\tcommand\t&lt;listen&gt;\n\tcommand\t&lt;lose&gt;\n\tcommand\t&lt;pay&gt;\n\tcommand\t&lt;pick, pluck&gt;\n\tcommand\t&lt;plant&gt;\n'\tcommand\t&lt;put&gt;\n'\tcommand\t&lt;put on&gt;\n' put = drop\n\tcommand &lt;drop #@thing# on #@support#&gt; &#123;\n\t\tif property &lt;#support#; supporter&gt; then &#123;\n\t\tmsg &lt;You put #quest&#46;error&#46;gender# #thing# on #support#&gt;\n\t\t&#125; \n\t\telse &#123; \n\t\t\tmsg &lt;You can't put #quest&#46;error&#46;gender# #thing# on this&gt;\n\t\t\t&#125;\n\t\t&#125;\n\n'\tcommand &lt;put #@thing# and #@otherthing# in #@container#&gt; \n\tcommand\t&lt;radiate&gt;\n\tcommand\t&lt;rain&gt;\n\tcommand\t&lt;read&gt;\n\tcommand\t&lt;release&gt;\n\tcommand\t&lt;reply&gt;\n\tcommand\t&lt;ride&gt;\n\tcommand\t&lt;rub&gt;\n\tcommand &lt;run&gt; msg &lt;Where could you run ?&gt;\n\tcommand\t&lt;say&gt;\n\tcommand\t&lt;see&gt;\n\tcommand\t&lt;seek&gt;\n\tcommand\t&lt;sell&gt;\n\tcommand\t&lt;send&gt;\n\tcommand\t&lt;show&gt;\n\tcommand\t&lt;sit&gt;\n\tcommand &lt;sing&gt; msg &lt;You sing a bit&gt;\n\tcommand\t&lt;sleep&gt;\n\tcommand\t&lt;smell&gt; msg &lt;You smell nothing unexpected here&#46;&gt;\n\tcommand\t&lt;smell #quest&#46;objects#&gt; msg &lt;You smell nothing unexpected here&#46;&gt;\n\tcommand\t&lt;smoke&gt;\n\tcommand &lt;smile&gt; msg &lt;You're smiling now&gt;\n\tcommand &lt;shout&gt; msg &lt;You don't need to shout now&gt;\n\tcommand\t&lt;spend&gt;\n\tcommand\t&lt;stand up, get up&gt;\n\tcommand\t&lt;start&gt;\n\tcommand\t&lt;steal&gt;\n\tcommand\t&lt;swim&gt; msg &lt;You don't want to wet your clothes&#46;&gt;\n\tcommand\t&lt;take&gt;\n\tcommand\t&lt;take, receive&gt;\n\tcommand\t&lt;teach&gt;\n\tcommand\t&lt;throw&gt;\n\tcommand\t&lt;wear&gt;\n\tcommand\t&lt;travel&gt;\n\tcommand\t&lt;try&gt;\n\tcommand\t&lt;turn off&gt;\n\tcommand\t&lt;turn on&gt;\n\tcommand\t&lt;undo&gt;\n\tcommand &lt;wait&gt; msg &lt;You wait for a while&#46;&gt;\n\tcommand\t&lt;wake&gt;\n\tcommand\t&lt;walk&gt;\n\tcommand\t&lt;wash&gt;\n\tcommand\t&lt;weep&gt;\n\tcommand\t&lt;work&gt;\n\tcommand\t&lt;worry&gt;\n\tcommand\t&lt;write&gt;\n\n\n!end\n\n\n!addto synonyms\n\tinspect = examine\n\tleave = drop\n\tswallow = eat\n\tfetch = bring\n!end\n\n\n[/code:2hab0ezz]",
      "EditableFormat": "bbcode",
      "HTML": "Some people complained Quest wasn't powerfull enough in comparison to other system such as Inform, Tads etc.<br/><br/>I think this is especially because Quest lacks most of the built-in verbs other system has. It's a bit annoying when one is performing a simple action such as <br/><br/>&gt; throw knife<br/>&gt; swim <br/>&gt; lift bed<br/><br/>to get the reply :<br/><br/>\"I don't understand your command. Type HELP for a list of valid commands.\"<br/><br/>Of course every author can (should) add his / her own commands, but it's quite a bit task for general replies (some players could test some normal command to see if an action is possible in the game, and then get this default reply intead).<br/><br/>So I thought we could make available a library for Quest, with many commands. Authors could modify it, or better add his / her modified commands to suit the game's needs, and even if the author doesn't modify it much, at least there would be more interesting replies and it would give a better opinion of Quest to other people.<br/><br/>Here are some commonly used verbs I've begun to gather. The replies I've made for some of them are not especially good, english is not my mother tongue after all... but are some people here interested in developping this ? Could you find more usefull verbs ?<br/>Anyway I'll develop this list for my own game, and I'll re-post it later when all will be filled, and then maybe it would be possible to begin to correct all the mistakes <!-- s:) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/><br/><pre><code><br/>!addto game<br/>\tcommand &lt;blow in #@quest&#46;objects#&gt;<br/>\tcommand &lt;borrow&gt;<br/>\tcommand &lt;buy #quest&#46;objects#&gt; msg &lt;#quest&#46;error&#46;article# is not for sale&gt;<br/>\tcommand\t&lt;bring&gt;<br/>\tcommand\t&lt;cancel&gt;<br/>\tcommand\t&lt;cast&gt;<br/>\tcommand\t&lt;carve, dig, pick&gt;<br/>\tcommand\t&lt;change&gt;<br/>\tcommand\t&lt;clean&gt;<br/>\tcommand\t&lt;climb&gt;<br/>\tcommand\t&lt;close&gt;<br/>\tcommand\t&lt;comb&gt;<br/>\tcommand\t&lt;complain&gt; msg &lt;Don't complain all the time !&gt;<br/>\tcommand\t&lt;cook&gt; msg &lt;Maybe it's not time to cook now ?&gt;<br/>\tcommand\t&lt;cough&gt; msg &lt;Reuf, reuf&gt;<br/>\tcommand\t&lt;count&gt;<br/>\tcommand &lt;commit suicide&gt; playerlose<br/>\tcommand &lt;cry&gt; msg &lt;You don't need to do that now&#46; Crying can't be made on command&#46;&gt;<br/>\tcommand &lt;cut #@quest&#46;objects#&gt; &#123;<br/>\t\tif property &lt;#quest&#46;objects#; breakable&gt; then &#123;<br/>\t\tmsg &lt;You torn #quest&#46;error&#46;gender# #quest&#46;objects# to pieces, and nothing usefull remains&#46;&gt;<br/>\t\tconceal &lt;#quest&#46;objects#&gt;<br/>\t\t&#125;<br/>\t\t&#125;<br/>\tcommand &lt;change #@quest&#46;objects#&gt; msg &lt;Change what ?&gt;<br/>\tcommand\t&lt;crawl&gt;<br/>\tcommand\t&lt;dance&gt; msg &lt;You dance a bit for your own pleasure&gt;<br/>\tcommand\t&lt;desire&gt;<br/>\tcommand\t&lt;detach&gt;<br/>\tcommand\t&lt;dive&gt;<br/>\tcommand\t&lt;dig&gt;<br/>\tcommand\t&lt;draw&gt;<br/>\tcommand\t&lt;dream&gt;<br/>\tcommand\t&lt;drive&gt;<br/>\tcommand &lt;drink #@quest&#46;objects#&gt; &#123;<br/>\t\tif property &lt;#quest&#46;objects#; drinkable&gt; then &#123;<br/>\t\tmsg &lt;You drink #quest&#46;error&#46;gender# #quest&#46;objects#&gt;<br/>\t\tconceal &lt;#quest&#46;objects#&gt;<br/>\t\t&#125; <br/>\t\telse msg &lt;#quest&#46;error&#46;gender# #quest&#46;objects# doesn't seem good to drink, you should forget this&#46;&gt;<br/>\t\t&#125;<br/>\tcommand &lt;eat #@quest&#46;objects#&gt; &#123;<br/>\t\tif property &lt;#quest&#46;objects#; edible&gt; then &#123;<br/>\t\tmsg &lt;You eat #quest&#46;error&#46;gender# #quest&#46;objects#&gt;<br/>\t\tconceal &lt;#quest&#46;objects#&gt;<br/>\t\t&#125; <br/>\t\telse &#123; <br/>\t\t\tmsg &lt;#quest&#46;error&#46;gender# #quest&#46;objects# doesn't appear appetizing, you shouldn't do this&#46;&gt;<br/>\t\t\t&#125;<br/>\t\t&#125;<br/>\tcommand &lt;erode&gt; <br/>\tcommand\t&lt;edit&gt;<br/>\tcommand\t&lt;enter&gt;<br/>\tcommand\t&lt;escape&gt;<br/>\tcommand\t&lt;explain&gt;<br/>\tcommand\t&lt;empty&gt;<br/>\tcommand\t&lt;fill&gt;<br/>\tcommand\t&lt;find&gt;<br/>\tcommand\t&lt;finish&gt;<br/>\tcommand\t&lt;fix&gt;<br/>\tcommand\t&lt;fly&gt;<br/>\tcommand\t&lt;glitter&gt;<br/>\tcommand\t&lt;help #@object#&gt;<br/>\tcommand &lt;hit #@quest&#46;objects#&gt; msg &lt;What do you plan to use for this courageous action ?&gt;<br/>\tcommand\t&lt;hurt&gt;<br/>\tcommand\t&lt;jump&gt;<br/>\tcommand\t&lt;kiss&gt;<br/>\tcommand &lt;laugh&gt; msg &lt;Ha ha ha |n Ha ha ha ha&gt;<br/>\tcommand &lt;love #quest&#46;objects# ; like #quest&#46;objects# ; enjoy #quest&#46;objects#&gt; msg &lt;We're glad you enjoy #quest&#46;error&#46;article#&#46;&gt;<br/>\tcommand\t&lt;learn&gt;<br/>\tcommand\t&lt;leave&gt;<br/>\tcommand\t&lt;lift&gt;<br/>\tcommand\t&lt;listen&gt;<br/>\tcommand\t&lt;lose&gt;<br/>\tcommand\t&lt;pay&gt;<br/>\tcommand\t&lt;pick, pluck&gt;<br/>\tcommand\t&lt;plant&gt;<br/>'\tcommand\t&lt;put&gt;<br/>'\tcommand\t&lt;put on&gt;<br/>' put = drop<br/>\tcommand &lt;drop #@thing# on #@support#&gt; &#123;<br/>\t\tif property &lt;#support#; supporter&gt; then &#123;<br/>\t\tmsg &lt;You put #quest&#46;error&#46;gender# #thing# on #support#&gt;<br/>\t\t&#125; <br/>\t\telse &#123; <br/>\t\t\tmsg &lt;You can't put #quest&#46;error&#46;gender# #thing# on this&gt;<br/>\t\t\t&#125;<br/>\t\t&#125;<br/><br/>'\tcommand &lt;put #@thing# and #@otherthing# in #@container#&gt; <br/>\tcommand\t&lt;radiate&gt;<br/>\tcommand\t&lt;rain&gt;<br/>\tcommand\t&lt;read&gt;<br/>\tcommand\t&lt;release&gt;<br/>\tcommand\t&lt;reply&gt;<br/>\tcommand\t&lt;ride&gt;<br/>\tcommand\t&lt;rub&gt;<br/>\tcommand &lt;run&gt; msg &lt;Where could you run ?&gt;<br/>\tcommand\t&lt;say&gt;<br/>\tcommand\t&lt;see&gt;<br/>\tcommand\t&lt;seek&gt;<br/>\tcommand\t&lt;sell&gt;<br/>\tcommand\t&lt;send&gt;<br/>\tcommand\t&lt;show&gt;<br/>\tcommand\t&lt;sit&gt;<br/>\tcommand &lt;sing&gt; msg &lt;You sing a bit&gt;<br/>\tcommand\t&lt;sleep&gt;<br/>\tcommand\t&lt;smell&gt; msg &lt;You smell nothing unexpected here&#46;&gt;<br/>\tcommand\t&lt;smell #quest&#46;objects#&gt; msg &lt;You smell nothing unexpected here&#46;&gt;<br/>\tcommand\t&lt;smoke&gt;<br/>\tcommand &lt;smile&gt; msg &lt;You're smiling now&gt;<br/>\tcommand &lt;shout&gt; msg &lt;You don't need to shout now&gt;<br/>\tcommand\t&lt;spend&gt;<br/>\tcommand\t&lt;stand up, get up&gt;<br/>\tcommand\t&lt;start&gt;<br/>\tcommand\t&lt;steal&gt;<br/>\tcommand\t&lt;swim&gt; msg &lt;You don't want to wet your clothes&#46;&gt;<br/>\tcommand\t&lt;take&gt;<br/>\tcommand\t&lt;take, receive&gt;<br/>\tcommand\t&lt;teach&gt;<br/>\tcommand\t&lt;throw&gt;<br/>\tcommand\t&lt;wear&gt;<br/>\tcommand\t&lt;travel&gt;<br/>\tcommand\t&lt;try&gt;<br/>\tcommand\t&lt;turn off&gt;<br/>\tcommand\t&lt;turn on&gt;<br/>\tcommand\t&lt;undo&gt;<br/>\tcommand &lt;wait&gt; msg &lt;You wait for a while&#46;&gt;<br/>\tcommand\t&lt;wake&gt;<br/>\tcommand\t&lt;walk&gt;<br/>\tcommand\t&lt;wash&gt;<br/>\tcommand\t&lt;weep&gt;<br/>\tcommand\t&lt;work&gt;<br/>\tcommand\t&lt;worry&gt;<br/>\tcommand\t&lt;write&gt;<br/><br/><br/>!end<br/><br/><br/>!addto synonyms<br/>\tinspect = examine<br/>\tleave = drop<br/>\tswallow = eat<br/>\tfetch = bring<br/>!end<br/><br/><br/></code></pre>",
      "PostDate": "2003-08-27T11:35:11+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "464",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "This sounds like a good idea.\n\nI'd recommend not using #quest.objects# in a command though, as the #quest.objects# string variable stores the list of objects for the current room's description. Having said that, I don't [i:ovihbwdk]think[/i:ovihbwdk] you'll break anything by using it, as it's not needed after the description is printed, and you're only using it temporarily. It might break MaDbRiT's library perhaps though. I suggest you just use something like #object# instead.\n\nAlso, if you use things like \"command &lt;bring&gt;\" that will only work for \"bring\" - not \"bring (some object)\".\n\nUsing the #@...# in \"command &lt;change #@quest.objects#&gt; msg &lt;Change what ?&gt;\" will be annoying, since the only response is that the command doesn't work, there's not much point in forcing the player to use a valid object name, in my opinion.\n\nEr, \"radiate\"...?! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "This sounds like a good idea.<br/><br/>I'd recommend not using #quest.objects# in a command though, as the #quest.objects# string variable stores the list of objects for the current room's description. Having said that, I don't <span style=\"font-style:italic;\">think</span> you'll break anything by using it, as it's not needed after the description is printed, and you're only using it temporarily. It might break MaDbRiT's library perhaps though. I suggest you just use something like #object# instead.<br/><br/>Also, if you use things like \"command &lt;bring&gt;\" that will only work for \"bring\" - not \"bring (some object)\".<br/><br/>Using the #@...# in \"command &lt;change #@quest.objects#&gt; msg &lt;Change what ?&gt;\" will be annoying, since the only response is that the command doesn't work, there's not much point in forcing the player to use a valid object name, in my opinion.<br/><br/>Er, \"radiate\"...?! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2003-08-27T13:55:43+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "466",
      "UserId": 0,
      "Username": "Farvardin",
      "UserAvatar": null,
      "UserGravatar": "b6ea46e28b64e5f7c68f80468607f022",
      "EditableText": "[quote:lak26ebp]I'd recommend not using #quest.objects# in a command though...[/quote:lak26ebp]\n\nok, it's noted... as I said, it's only a 1st try, I'll fix all that is necessary later. \nFor #quest.objects#, I thought it was only related to object used by the player, but I know now that any object typed by player will be put in a variable of any name, #object# included.\n\n[quote:lak26ebp]Er, \"radiate\"...?! [/quote:lak26ebp]\n\nheu... yes... I have a list of common verbs and I copied it and deleted the unnecessary entries. It seems that I forget this one, and probably a few others too...\n\nAbout library, it could be fine too to have a powerfull library for handly object put on something. (I don't think I have the capacity to make it myself)\nMaDbRiT's library is good for object put in. I could try to change it a bit for handling objects put on.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>I'd recommend not using #quest.objects# in a command though...</p></blockquote><br/><br/>ok, it's noted... as I said, it's only a 1st try, I'll fix all that is necessary later. <br/>For #quest.objects#, I thought it was only related to object used by the player, but I know now that any object typed by player will be put in a variable of any name, #object# included.<br/><br/><blockquote><p>Er, \"radiate\"...?! </p></blockquote><br/><br/>heu... yes... I have a list of common verbs and I copied it and deleted the unnecessary entries. It seems that I forget this one, and probably a few others too...<br/><br/>About library, it could be fine too to have a powerfull library for handly object put on something. (I don't think I have the capacity to make it myself)<br/>MaDbRiT's library is good for object put in. I could try to change it a bit for handling objects put on.",
      "PostDate": "2003-08-27T18:10:27+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "467",
      "UserId": 0,
      "Username": "Anonymous",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "[quote:1qx6r7w7]\nMaDbRiT's library is good for object put in. I could try to change it a bit for handling objects put on.\n[/quote:1qx6r7w7]\n\nYou don't need to change it to do that <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->\n\nall you need it to add a command in your own ASL that makes 'put jug on shelf' (for example) call the put jug IN shelf routine, and then change the shelf's 'header for listing' to read something more appropriate <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --> That will have the effect you need (albeit it would be a little clumsy).\n\nI have a new much enhanced version of that library in test at the moment, I could quite easily add a new object type of 'surface' for an object things could be placed ON rather than IN if it is thought generally worthwhile.\n\nAl (a.k.a. MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p><br/>MaDbRiT's library is good for object put in. I could try to change it a bit for handling objects put on.<br/></p></blockquote><br/><br/>You don't need to change it to do that <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --><br/><br/>all you need it to add a command in your own ASL that makes 'put jug on shelf' (for example) call the put jug IN shelf routine, and then change the shelf's 'header for listing' to read something more appropriate <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --> That will have the effect you need (albeit it would be a little clumsy).<br/><br/>I have a new much enhanced version of that library in test at the moment, I could quite easily add a new object type of 'surface' for an object things could be placed ON rather than IN if it is thought generally worthwhile.<br/><br/>Al (a.k.a. MaDbRiT)",
      "PostDate": "2003-08-27T21:39:31+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "468",
      "UserId": 0,
      "Username": "Anonymous",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "[quote:29lohlec]\nSo I thought we could make available a library for Quest, with many commands. Authors could modify it, or better add his / her modified commands to suit the game's needs, and even if the author doesn't modify it much, at least there would be more interesting replies and it would give a better opinion of Quest to other people.\n[/quote:29lohlec]\n\nActually this idea is exactly the one used by the ALAN I-F system, there is a library of 'verb stubs' that just provide simple default messages for a LOT of relatively routine game playing input. Authors are expected to expand the stubs where they want more than the default response.\n\nAs my typelib adds quite a few commands itself, (the new version adds commands that deal with things like 'tell Fred to take the jug') perhaps i should convert the ALAN stub verb library to a Quest Library that is either part of, or better yet seperate but called by, my \"typelib.qlb\"?\n\nAs I'm pretty conversant with ALAN, (large parts of my 'typelib.qlb' were converted from my own ALAN library code) converting the ALAN code would be pretty easy, plus the list of verbs is likely to be a 'play tested' set of really useful ones <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p><br/>So I thought we could make available a library for Quest, with many commands. Authors could modify it, or better add his / her modified commands to suit the game's needs, and even if the author doesn't modify it much, at least there would be more interesting replies and it would give a better opinion of Quest to other people.<br/></p></blockquote><br/><br/>Actually this idea is exactly the one used by the ALAN I-F system, there is a library of 'verb stubs' that just provide simple default messages for a LOT of relatively routine game playing input. Authors are expected to expand the stubs where they want more than the default response.<br/><br/>As my typelib adds quite a few commands itself, (the new version adds commands that deal with things like 'tell Fred to take the jug') perhaps i should convert the ALAN stub verb library to a Quest Library that is either part of, or better yet seperate but called by, my \"typelib.qlb\"?<br/><br/>As I'm pretty conversant with ALAN, (large parts of my 'typelib.qlb' were converted from my own ALAN library code) converting the ALAN code would be pretty easy, plus the list of verbs is likely to be a 'play tested' set of really useful ones <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --><br/><br/>Al (MaDbRiT)",
      "PostDate": "2003-08-27T21:52:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "469",
      "UserId": 0,
      "Username": "Farvardin",
      "UserAvatar": null,
      "UserGravatar": "b6ea46e28b64e5f7c68f80468607f022",
      "EditableText": "[quote:1tivefid]\nYou don't need to change it to do that\n\nall you need it to add a command in your own ASL[/quote:1tivefid]\n\nI didn't say it correctly, I wanted to say \"copy a part of this lib. code, change it, and add it to a new library\".\n\nI prefer not to alter your own library. For my game I override some of your synonyms and verbs in typelib by creating a new library\n([code:1tivefid]!addto game\n   command &lt;give #TLSdObj# to #TLSiObj#;give #TLSiObj# the #TLSdObj#&gt; exec &lt;give #TLSdObj# to #TLSiObj#;normal&gt;\n'   nodebug\n   command &lt;drop #TLSdObj# on #support#&gt; exec &lt;drop #TLSdObj# on #support#;normal&gt; \n!end[/code:1tivefid]\n)\n\n[quote:1tivefid]I have a new much enhanced version of that library in test at the moment, I could quite easily add a new object type of 'surface' for an object things could be placed ON rather than IN if it is thought generally worthwhile. [/quote:1tivefid]\n\nyes, it'd be great ! In Inform the property is called \"supporter\" for an object that can receive other things. I think it's an usefull feature since players are likely to put things ON other things as much as they can put them IN. For ex. only the act of sitting somewhere, even if this can be coded in an other way...\n\nI'm curious also to see your enhanced version of typelib. If you need a beta tester, tell me <!-- s:) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\n\n[quote:1tivefid]Actually this idea is exactly the one used by the ALAN I-F system, there is a library of 'verb stubs' that just provide simple default messages for a LOT of relatively routine game playing input. Authors are expected to expand the stubs where they want more than the default response. [/quote:1tivefid]\n\nyes, it's exactly what I had in mind. \n\nAbout Alan I downloaded the system some times ago (as I did for many other IF systems) but I haven't tried it much.\nI've found something related to such a standard library at :\n<!-- m --><a class=\"postlink\" href=\"http://bang.dhs.org/if/raif/pre1997/msg00374.html\">http://bang.dhs.org/if/raif/pre1997/msg00374.html</a><!-- m -->\n(by Luis E. Torres)\n\nIt's also this kind of replies I had in mind. I checked also the Inform library about this issue, it can gives some ideas. I think when we'll have a similar for Quest, it will be much conveniant. I'll search more for new usefull verbs, and synomyms.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p><br/>You don't need to change it to do that<br/><br/>all you need it to add a command in your own ASL</p></blockquote><br/><br/>I didn't say it correctly, I wanted to say \"copy a part of this lib. code, change it, and add it to a new library\".<br/><br/>I prefer not to alter your own library. For my game I override some of your synonyms and verbs in typelib by creating a new library<br/>(<pre><code>!addto game<br/>   command &lt;give #TLSdObj# to #TLSiObj#;give #TLSiObj# the #TLSdObj#&gt; exec &lt;give #TLSdObj# to #TLSiObj#;normal&gt;<br/>'   nodebug<br/>   command &lt;drop #TLSdObj# on #support#&gt; exec &lt;drop #TLSdObj# on #support#;normal&gt; <br/>!end</code></pre><br/>)<br/><br/><blockquote><p>I have a new much enhanced version of that library in test at the moment, I could quite easily add a new object type of 'surface' for an object things could be placed ON rather than IN if it is thought generally worthwhile. </p></blockquote><br/><br/>yes, it'd be great ! In Inform the property is called \"supporter\" for an object that can receive other things. I think it's an usefull feature since players are likely to put things ON other things as much as they can put them IN. For ex. only the act of sitting somewhere, even if this can be coded in an other way...<br/><br/>I'm curious also to see your enhanced version of typelib. If you need a beta tester, tell me <!-- s:) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/><br/><blockquote><p>Actually this idea is exactly the one used by the ALAN I-F system, there is a library of 'verb stubs' that just provide simple default messages for a LOT of relatively routine game playing input. Authors are expected to expand the stubs where they want more than the default response. </p></blockquote><br/><br/>yes, it's exactly what I had in mind. <br/><br/>About Alan I downloaded the system some times ago (as I did for many other IF systems) but I haven't tried it much.<br/>I've found something related to such a standard library at :<br/><!-- m --><a class=\"postlink\" href=\"http://bang.dhs.org/if/raif/pre1997/msg00374.html\">http://bang.dhs.org/if/raif/pre1997/msg00374.html</a><!-- m --><br/>(by Luis E. Torres)<br/><br/>It's also this kind of replies I had in mind. I checked also the Inform library about this issue, it can gives some ideas. I think when we'll have a similar for Quest, it will be much conveniant. I'll search more for new usefull verbs, and synomyms.",
      "PostDate": "2003-08-28T07:58:52+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "470",
      "UserId": 0,
      "Username": "Anonymous",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "[quote:2wgihin9]\nI didn't say it correctly, I wanted to say \"copy a part of this lib. code, change it, and add it to a new library\". \n\nI prefer not to alter your own library. For my game I override some of your synonyms and verbs in typelib by creating a new library \n[/quote:2wgihin9]\n\nThat's MUCH the better way, because it doesn't risk breaking the existing library <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->  As is repeated continually in TADS documentation as well as in mine, 'Don't EVER change the library, override it external code where you need to'.\n\n[quote:2wgihin9]\nI have a new much enhanced version of that library in test at the moment, I could quite easily add a new object type of 'surface' for an object things could be placed ON rather than IN if it is thought generally worthwhile.  \n\nyes, it'd be great ! In Inform the property is called \"supporter\" for an object that can receive other things. I think it's an usefull feature since players are likely to put things ON other things as much as they can put them IN. For ex. only the act of sitting somewhere, even if this can be coded in an other way... \n[/quote:2wgihin9]\n\nYeah, Inform calls it a 'supporter', TADS calls it a 'surface', I chose to go with the TADS naming convention, though it makes little difference really.\n\nSitting in/on and lying in/on things is a bit more complex than that, because you have to get into the possibilities of what can be seen/reached from the sitting/lying position. I've not really investigated the possibilities of this too much yet, but it is something I plan to do in a later version of the typelib library, by means of 'chair' and 'bed' types. You should be able to sit on and lie on (or lie IN) a bed, so there's a few little nuances to sort out. \n\nAl (MaDbRiT)\n\nPS Luis Torres' library for ALAN is way, way old. There's a much more up to date one (for ALAN 3) on the ALAN website.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p><br/>I didn't say it correctly, I wanted to say \"copy a part of this lib. code, change it, and add it to a new library\". <br/><br/>I prefer not to alter your own library. For my game I override some of your synonyms and verbs in typelib by creating a new library <br/></p></blockquote><br/><br/>That's MUCH the better way, because it doesn't risk breaking the existing library <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->  As is repeated continually in TADS documentation as well as in mine, 'Don't EVER change the library, override it external code where you need to'.<br/><br/><blockquote><p><br/>I have a new much enhanced version of that library in test at the moment, I could quite easily add a new object type of 'surface' for an object things could be placed ON rather than IN if it is thought generally worthwhile.  <br/><br/>yes, it'd be great ! In Inform the property is called \"supporter\" for an object that can receive other things. I think it's an usefull feature since players are likely to put things ON other things as much as they can put them IN. For ex. only the act of sitting somewhere, even if this can be coded in an other way... <br/></p></blockquote><br/><br/>Yeah, Inform calls it a 'supporter', TADS calls it a 'surface', I chose to go with the TADS naming convention, though it makes little difference really.<br/><br/>Sitting in/on and lying in/on things is a bit more complex than that, because you have to get into the possibilities of what can be seen/reached from the sitting/lying position. I've not really investigated the possibilities of this too much yet, but it is something I plan to do in a later version of the typelib library, by means of 'chair' and 'bed' types. You should be able to sit on and lie on (or lie IN) a bed, so there's a few little nuances to sort out. <br/><br/>Al (MaDbRiT)<br/><br/>PS Luis Torres' library for ALAN is way, way old. There's a much more up to date one (for ALAN 3) on the ALAN website.",
      "PostDate": "2003-08-28T09:51:46+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "682",
      "UserId": 0,
      "Username": "Chuck",
      "UserAvatar": null,
      "UserGravatar": "83ce4d51e53c95caf8c825289180a9ad",
      "EditableText": "[code:1lj5a85u]!addto game \n   command &lt;give #TLSdObj# to #TLSiObj#;give #TLSiObj# the #TLSdObj#&gt; exec &lt;give #TLSdObj# to #TLSiObj#;normal&gt; \n'   nodebug \n   command &lt;drop #TLSdObj# on #support#&gt; exec &lt;drop #TLSdObj# on #support#;normal&gt; \n!end[/code:1lj5a85u]\n\nI too am interested in having objects with a surface and objects that can be placed there (e.g., cup and table). The above code that Farvardin offered is incomplete.\n\nAl said\n\n[quote:1lj5a85u]all you need it to add a command in your own ASL that makes 'put jug on shelf' (for example) call the put jug IN shelf routine, and then change the shelf's 'header for listing' to read something more appropriate  That will have the effect you need (albeit it would be a little clumsy). \n\nI have a new much enhanced version of that library in test at the moment, I could quite easily add a new object type of 'surface' for an object things could be placed ON rather than IN if it is thought generally worthwhile.[/quote:1lj5a85u]\n\nI'd like to see the code for successfully putting the jug on the shelf if you have it. I'm looking forward to the library that includes an optional surface for an object with the action ON. Yes, that's worthwhile (though I'd give a priority to your conversation additions to the library).\n\nWhat say you, the MaDbRit magic man?\n\nChuck Smith",
      "EditableFormat": "bbcode",
      "HTML": "<pre><code>!addto game <br/>   command &lt;give #TLSdObj# to #TLSiObj#;give #TLSiObj# the #TLSdObj#&gt; exec &lt;give #TLSdObj# to #TLSiObj#;normal&gt; <br/>'   nodebug <br/>   command &lt;drop #TLSdObj# on #support#&gt; exec &lt;drop #TLSdObj# on #support#;normal&gt; <br/>!end</code></pre><br/><br/>I too am interested in having objects with a surface and objects that can be placed there (e.g., cup and table). The above code that Farvardin offered is incomplete.<br/><br/>Al said<br/><br/><blockquote><p>all you need it to add a command in your own ASL that makes 'put jug on shelf' (for example) call the put jug IN shelf routine, and then change the shelf's 'header for listing' to read something more appropriate  That will have the effect you need (albeit it would be a little clumsy). <br/><br/>I have a new much enhanced version of that library in test at the moment, I could quite easily add a new object type of 'surface' for an object things could be placed ON rather than IN if it is thought generally worthwhile.</p></blockquote><br/><br/>I'd like to see the code for successfully putting the jug on the shelf if you have it. I'm looking forward to the library that includes an optional surface for an object with the action ON. Yes, that's worthwhile (though I'd give a priority to your conversation additions to the library).<br/><br/>What say you, the MaDbRit magic man?<br/><br/>Chuck Smith",
      "PostDate": "2003-09-20T02:24:43+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "684",
      "UserId": 0,
      "Username": "Farvardin",
      "UserAvatar": null,
      "UserGravatar": "b6ea46e28b64e5f7c68f80468607f022",
      "EditableText": "[quote:1xo8e0no]The above code that Farvardin offered is incomplete. [/quote:1xo8e0no]\n\nI've only given an example of what can be a shortcut to get something that work, but is very limited.\n\nFor climbing on something I've made : (in an object's def.) \n\n\t\tproperties &lt;climbable; supporter; not takeable; noTake=Take the stool if you wish, but not this table.&gt;\n\t\taction &lt;climbing&gt; do {\n\t\t\tmsg &lt;You climb on it.&gt;\n\t\t\tproperty &lt;table; climbed&gt;\n\t\t}\n\nAs I said, it's very very limited, and doesn\"t handle the fact the player has to type \"climb down\" or someting similar, like in other IF system. It's less realistic but still usable.\n\nI'd like very much to see / try the new version of the TypeLib too <!-- s:) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>The above code that Farvardin offered is incomplete. </p></blockquote><br/><br/>I've only given an example of what can be a shortcut to get something that work, but is very limited.<br/><br/>For climbing on something I've made : (in an object's def.) <br/><br/>\t\tproperties &lt;climbable; supporter; not takeable; noTake=Take the stool if you wish, but not this table.&gt;<br/>\t\taction &lt;climbing&gt; do {<br/>\t\t\tmsg &lt;You climb on it.&gt;<br/>\t\t\tproperty &lt;table; climbed&gt;<br/>\t\t}<br/><br/>As I said, it's very very limited, and doesn\"t handle the fact the player has to type \"climb down\" or someting similar, like in other IF system. It's less realistic but still usable.<br/><br/>I'd like very much to see / try the new version of the TypeLib too <!-- s:) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2003-09-20T05:39:06+01:00",
      "LastEditDate": null
    }
  ]
}
