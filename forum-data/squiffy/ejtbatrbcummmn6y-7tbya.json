{
  "Topic": {
    "TopicId": "ejtbatrbcummmn6y-7tbya",
    "ForumId": "24",
    "Title": "\"Hacking Squiffy Further...\" by mrangel",
    "LastUpdated": "2022-05-25T06:22:45.387046Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "7dde6a51-2107-456d-8257-a01d8ff96206",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi mrangel,\r\n\r\nIn days of old you made a format for altering Squiffy's defaults from within the Squiffy editor. It was way over my head, but I make habitual use of your nesting function, that you used as an example.\r\n```\r\n@start nesting \r\n[[nesting]]:\r\n    window.sq = squiffy;\r\n    var transition = function () {\r\n        console.log(\"Initialising...\");\r\n        var setfunc = setAttribute;\r\n        var processtextoriginal = squiffy.ui.processText;\r\n        squiffy.story.save = function () {\r\n            squiffy.set('_output', squiffy.ui.output.html() || \"  \");\r\n            squiffy.set('_transition', squiffy.get('_transitioncode'));\r\n        };\r\n        setAttribute = function (expr) {\r\n            var matches = /^(\\w*\\s*):=(.*)$/.exec(expr);\r\n            if (matches) {\r\n                console.log(\"Matches\");\r\n                console.log(matches);\r\n                expr = matches[1] + '=' + squiffy.ui.processText(matches[2]);\r\n            }\r\n            console.log(\"Evaluating set: \"+expr)\r\n            setfunc(expr);\r\n        };\r\n        squiffy.ui.processText = function (text) {\r\n            // insert modified text processor here\r\n            return (processtextoriginal(text));\r\n        };\r\n    }.toString();\r\n    squiffy.set('_transitioncode', transition);\r\n    squiffy.set('_transition', transition);\r\n    squiffy.set('_output', ' ');\r\n    squiffy.story.load();\r\n    squiffy.story.go(\"start\");\r\n```\r\nIs there a way to put this nesting function into \"C:\\Program Files (x86)\\Squiffy\\resources\\app\\node_modules\\squiffy\\squiffy.template.js\"? \r\n\r\nThanks for all you do for us Squiffy users!",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi mrangel,</p>\n<p>In days of old you made a format for altering Squiffy's defaults from within the Squiffy editor. It was way over my head, but I make habitual use of your nesting function, that you used as an example.</p>\n<pre><code>@start nesting \n[[nesting]]:\n    window.sq = squiffy;\n    var transition = function () {\n        console.log(\"Initialising...\");\n        var setfunc = setAttribute;\n        var processtextoriginal = squiffy.ui.processText;\n        squiffy.story.save = function () {\n            squiffy.set('_output', squiffy.ui.output.html() || \"  \");\n            squiffy.set('_transition', squiffy.get('_transitioncode'));\n        };\n        setAttribute = function (expr) {\n            var matches = /^(\\w*\\s*):=(.*)$/.exec(expr);\n            if (matches) {\n                console.log(\"Matches\");\n                console.log(matches);\n                expr = matches[1] + '=' + squiffy.ui.processText(matches[2]);\n            }\n            console.log(\"Evaluating set: \"+expr)\n            setfunc(expr);\n        };\n        squiffy.ui.processText = function (text) {\n            // insert modified text processor here\n            return (processtextoriginal(text));\n        };\n    }.toString();\n    squiffy.set('_transitioncode', transition);\n    squiffy.set('_transition', transition);\n    squiffy.set('_output', ' ');\n    squiffy.story.load();\n    squiffy.story.go(\"start\");\n</code></pre>\n<p>Is there a way to put this nesting function into \"C:\\Program Files (x86)\\Squiffy\\resources\\app\\node_modules\\squiffy\\squiffy.template.js\"?</p>\n<p>Thanks for all you do for us Squiffy users!</p>\n\n",
      "PostDate": "2022-05-25T06:22:45.387046Z",
      "LastEditDate": "2022-05-25T08:53:44.7321653Z",
      "link": null
    },
    {
      "PostId": "6ba559fc-9427-4335-84b3-13db81ee031f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "A lot of that is a wrapper to actually run the custom code.\r\nI think if you were doing it manually, you could search for the line:\r\n\r\n```\r\n    var setAttribute = function(expr) {\r\n```\r\nand change it to:\r\n```\r\n    var setAttribute = function(expr) {\r\n        expr = expr.replace(/^(\\w*\\s*):=(.*)$/, (match,name,value) => (name + \"=\" + squiffy.ui.processText(value));\r\n```\r\nso that the text processing stuff is done at the start of the original function.\r\n\r\nThe second part, changing the text processor, you can just replace the original definition of `squiffy.ui.processText` I think.",
      "EditableFormat": "markdown",
      "HTML": "<p>A lot of that is a wrapper to actually run the custom code.<br>\nI think if you were doing it manually, you could search for the line:</p>\n<pre><code>    var setAttribute = function(expr) {\n</code></pre>\n<p>and change it to:</p>\n<pre><code>    var setAttribute = function(expr) {\n        expr = expr.replace(/^(\\w*\\s*):=(.*)$/, (match,name,value) =&gt; (name + \"=\" + squiffy.ui.processText(value));\n</code></pre>\n<p>so that the text processing stuff is done at the start of the original function.</p>\n<p>The second part, changing the text processor, you can just replace the original definition of <code>squiffy.ui.processText</code> I think.</p>\n\n",
      "PostDate": "2022-05-25T15:40:52.0023488Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9008985c-115b-4dc0-935d-09b1e9cbe2cf",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks, mrangel. There's a fatal bug in it somewhere, but don't understand JavaScript remotely well enough to find it.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks, mrangel. There's a fatal bug in it somewhere, but don't understand JavaScript remotely well enough to find it.</p>\n\n",
      "PostDate": "2022-05-27T08:13:11.4493944Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a0956ca1-1b69-462b-8969-d6fd3cb4b709",
      "UserId": 251768,
      "Username": "Bluevoss",
      "AvatarUrl": "https://i.imgur.com/6mfIIbhb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I sure with the squiffy editor would identify the line where errors occur. That's the one that keeps me up at night, that I'm going to make a boatload of changes and then break something.",
      "EditableFormat": "markdown",
      "HTML": "<p>I sure with the squiffy editor would identify the line where errors occur. That's the one that keeps me up at night, that I'm going to make a boatload of changes and then break something.</p>\n\n",
      "PostDate": "2022-05-27T13:18:15.44308Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f6043272-a83d-467d-91f2-6071c40d1823",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ugh, careless. The `));` at the end of the line should be `)));`. Sorry about that; it can happen if I'm writing code off the top of my head without checking it.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ugh, careless. The <code>));</code> at the end of the line should be <code>)));</code>. Sorry about that; it can happen if I'm writing code off the top of my head without checking it.</p>\n\n",
      "PostDate": "2022-05-27T13:50:08.6692485Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "04ed0170-04de-44cb-910d-7a2ae6bbc39c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Actually… it might make more sense to add a little extra:\r\n```\r\n    var setAttribute = function(expr) {\r\n        expr = expr.replace(/^(\\w*\\s*):=(.*)$/, (match,name,value) => (name + \"=\" + squiffy.ui.processText(value.match(/^@[\\w\\s]+]$) ? squiffy.get(value.substring(1)) : value))));\r\n```\r\n\r\nThen you could use it for something like (for example):\r\n```\r\n@set expression = some string with {oooh!} text processor stuff in\r\n@set value1 := @expression\r\n@set value2 := @expression\r\n```\r\nBasically, lets you have the text processor string in another attribute so you can evaluate it later.\r\n\r\n(again, not tested)",
      "EditableFormat": "markdown",
      "HTML": "<p>Actually… it might make more sense to add a little extra:</p>\n<pre><code>    var setAttribute = function(expr) {\n        expr = expr.replace(/^(\\w*\\s*):=(.*)$/, (match,name,value) =&gt; (name + \"=\" + squiffy.ui.processText(value.match(/^@[\\w\\s]+]$) ? squiffy.get(value.substring(1)) : value))));\n</code></pre>\n<p>Then you could use it for something like (for example):</p>\n<pre><code>@set expression = some string with {oooh!} text processor stuff in\n@set value1 := @expression\n@set value2 := @expression\n</code></pre>\n<p>Basically, lets you have the text processor string in another attribute so you can evaluate it later.</p>\n<p>(again, not tested)</p>\n\n",
      "PostDate": "2022-05-27T13:57:46.0744001Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "31e8e6bf-168e-46c5-a2ed-a3f44c739b04",
      "UserId": 251768,
      "Username": "Bluevoss",
      "AvatarUrl": "https://i.imgur.com/6mfIIbhb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "THIS makes more sense...???\r\n\r\nexpr.replace(/^(\\w*\\s*):=(.*)$/, (match,name,value) => (name + \"=\" + squiffy.ui.processText(value.match(/^@[\\w\\s]+]$) ? squiffy.get(value.substring(1)) : value))));\r\n\r\nVery dry humor, sir!",
      "EditableFormat": "markdown",
      "HTML": "<p>THIS makes more sense...???</p>\n<p>expr.replace(/^(\\w*\\s*):=(.*)$/, (match,name,value) =&gt; (name + \"=\" + squiffy.ui.processText(value.match(/^@[\\w\\s]+]$) ? squiffy.get(value.substring(1)) : value))));</p>\n<p>Very dry humor, sir!</p>\n\n",
      "PostDate": "2022-05-28T20:16:48.8808198Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d29dcb7d-bf0a-4f2c-88c5-a7abc1f55462",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks mrangel! It works great now, and I've gone ahead and inserted it with your other improvements in another forum post. \r\n\r\nYes, Bluevoss! The Squiffy editor really needs some work.  \"SyntaxError: Unexpected token\" is really not at all a helpful clue.\r\n\r\nAnd I sadly didn't include mrangel's shuffle fuction in unofficial Squiffy 5.1.4 because it breaks the editor, even though it works perfectly fine and dandy in the browser.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks mrangel! It works great now, and I've gone ahead and inserted it with your other improvements in another forum post.</p>\n<p>Yes, Bluevoss! The Squiffy editor really needs some work.  \"SyntaxError: Unexpected token\" is really not at all a helpful clue.</p>\n<p>And I sadly didn't include mrangel's shuffle fuction in unofficial Squiffy 5.1.4 because it breaks the editor, even though it works perfectly fine and dandy in the browser.</p>\n\n",
      "PostDate": "2022-05-29T05:24:32.8073434Z",
      "LastEditDate": "2022-05-31T23:02:42.6416507Z",
      "link": null
    },
    {
      "PostId": "544a29e2-5b09-4c8c-bfc2-fdd3c09accd9",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Actually, that @ thing looks a little awkward. I should have done something like:\r\n```\r\n    var setAttribute = function(expr) {\r\n        expr = expr.replace(/^(\\w*[\\s:]*):=(.*)$/, (match,name,value) => (name + \"=\" + squiffy.ui.processText(value)));\r\n```\r\n\r\nOff the top of my head, makes the expression stackable.\r\nSo\r\n* `@set var1 = {var2}` sets var1 to the string `{var2}`\r\n* `@set var1 := {var2}` sets var1 to the contents of the attribute var2\r\n* `@set var1 ::= {var2}` sets var1 to the results of running the text processor on var2's contents, interpolating any mentions of `{var3}` in it\r\n* `@set var1 :::= {var2}` sets var1 to the results of running the text processor on var2, interpolating any mentions of `{var3}` in it, and then runs the text processor again on the result so that any `{}` commands in var3 are executed\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Actually, that @ thing looks a little awkward. I should have done something like:</p>\n<pre><code>    var setAttribute = function(expr) {\n        expr = expr.replace(/^(\\w*[\\s:]*):=(.*)$/, (match,name,value) =&gt; (name + \"=\" + squiffy.ui.processText(value)));\n</code></pre>\n<p>Off the top of my head, makes the expression stackable.<br>\nSo</p>\n<ul>\n<li><code>@set var1 = {var2}</code> sets var1 to the string <code>{var2}</code></li>\n<li><code>@set var1 := {var2}</code> sets var1 to the contents of the attribute var2</li>\n<li><code>@set var1 ::= {var2}</code> sets var1 to the results of running the text processor on var2's contents, interpolating any mentions of <code>{var3}</code> in it</li>\n<li><code>@set var1 :::= {var2}</code> sets var1 to the results of running the text processor on var2, interpolating any mentions of <code>{var3}</code> in it, and then runs the text processor again on the result so that any <code>{}</code> commands in var3 are executed</li>\n</ul>\n\n",
      "PostDate": "2022-05-31T22:15:26.3982699Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
