{
  "Topic": {
    "TopicId": "-1_dvogyqeuuuuolllotvg",
    "ForumId": "24",
    "Title": "Sidebar code revisited",
    "LastUpdated": "2021-05-21T11:10:13.3568497Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "5107ab73-2ea3-46f2-b61a-296cdd386d08",
      "UserId": 471103,
      "Username": "Avaruushiiri",
      "AvatarUrl": "https://i.imgur.com/P3h3qvcb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Greetings all. Last August, mrangel posted some clever JS code (here: http://textadventures.co.uk/forum/squiffy/topic/twsu7sqjoegndwy3_g_qxq/inventory-show-hide) in response to a user's request for a hideable sidebar for their game. When I came across that, it turned out to be exactly what the game I'm writing needed, so I stole it wholesale.\r\n\r\nNow I find myself relying heavily on passages – but the sidebar only updates when changing sections. Unfortunately, I'm a rank amateur with JS, and have been unable to figure out a way to update the sidebar on demand, either in the sidebar code itself or in a master passage added where necessary. I would be much obliged if anyone can help.\r\n\r\nI opened a new topic as the original post is now closed (and finding old forum posts on given topics is, shall we say, a bit of a hassle).",
      "EditableFormat": "markdown",
      "HTML": "<p>Greetings all. Last August, mrangel posted some clever JS code (here: http://textadventures.co.uk/forum/squiffy/topic/twsu7sqjoegndwy3_g_qxq/inventory-show-hide) in response to a user's request for a hideable sidebar for their game. When I came across that, it turned out to be exactly what the game I'm writing needed, so I stole it wholesale.</p>\n<p>Now I find myself relying heavily on passages – but the sidebar only updates when changing sections. Unfortunately, I'm a rank amateur with JS, and have been unable to figure out a way to update the sidebar on demand, either in the sidebar code itself or in a master passage added where necessary. I would be much obliged if anyone can help.</p>\n<p>I opened a new topic as the original post is now closed (and finding old forum posts on given topics is, shall we say, a bit of a hassle).</p>\n\n",
      "PostDate": "2021-05-21T11:10:13.3568497Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1f8d1938-5fcc-4ba0-8dc5-40c8ce7c1a69",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The code there was my first attempt at using Squiffy, so it's very rough. I think there are a few other bugs I've discovered since, and I'm not sure if I remembered to update that.\r\n\r\nI hadn't discovered passages at that point, which is probably why I failed to handle them. I'll take a look later and see if I can clean that up at all. If your game is anything like my first attempt, it would probably help to combine the code with my later master section mod, which allows passages under the master section to be accessed from anywhere; this would be a better way to handle stuff like `[drink potion]` or similar.",
      "EditableFormat": "markdown",
      "HTML": "<p>The code there was my first attempt at using Squiffy, so it's very rough. I think there are a few other bugs I've discovered since, and I'm not sure if I remembered to update that.</p>\n<p>I hadn't discovered passages at that point, which is probably why I failed to handle them. I'll take a look later and see if I can clean that up at all. If your game is anything like my first attempt, it would probably help to combine the code with my later master section mod, which allows passages under the master section to be accessed from anywhere; this would be a better way to handle stuff like <code>[drink potion]</code> or similar.</p>\n\n",
      "PostDate": "2021-05-21T13:03:09.1526021Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9e51bb82-fa83-4c81-8ae7-275d0f3e4e36",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OK… rebuilding this off the top of my head, haven't tested yet.\r\n\r\nEDIT: Briefly tested, corrected two trivial errors.\r\nEDIT2: Updated to fix another bug\r\n```\r\n@start initialise_interface\r\n\r\n[[initialise_interface]]:\r\n    $(function () {\r\n      squiffy.story.save = function () {\r\n        squiffy.set('_output', squiffy.ui.output.html());\r\n        squiffy.set('_transition', \"squiffy.story.sections['initialise_interface'].js\");\r\n      };\r\n\r\n      var showSidebar = function () {\r\n        squiffy.ui.write(squiffy.story.sections['sidebar container'].text);\r\n        if ($('.ui-layout-north:visible').length) {\r\n          $('#showinv').css('top', $('#showinv').offset()['top']+92);\r\n          $('#sidebar').css('top', $('#sidebar').offset()['top']+92);\r\n          $('#sidebar').css('bottom', '100px');\r\n          $('<button>', {id: 'killsidebar', style: 'position: absolute; bottom: 4px; right: 4px'}).click(function () {\r\n            $('#killsidebar,#sidebar,#showinv').remove();\r\n          }).text('kill sidebar').appendTo('#sidebar');\r\n        }\r\n        $('#showinv').click(e => $('#sidebar').animate({left: 0}));\r\n        $('#hideinv').click(e => $('#sidebar').animate({left: 5-$('#sidebar').width()}));\r\n      };\r\n      var updateSidebar = function() {\r\n        if (!$('#sidebar').length) {\r\n          showSidebar();\r\n        }\r\n        if ($('#sidebar:visible').length) {\r\n          $('#sidebar').children(':not(#hideinv,#killsidebar)').remove();\r\n          $('#sidebar').append(squiffy.ui.processText(squiffy.story.sections['sidebar contents'].text));\r\n          if (squiffy.get('gameover')) {\r\n            $('#sidebar a').remove();\r\n          }\r\n        }\r\n      };\r\n\r\n      var original_go = squiffy.story.go;\r\n      squiffy.story.go = function (section) {\r\n        original_go(section);\r\n        \r\n        if (squiffy.afterText) {\r\n          var after = squiffy.afterText;\r\n          delete(squiffy['afterText']);\r\n          after();\r\n        }\r\n        updateSidebar();\r\n      };\r\n\r\n      var setSeen = function (sectionName) {\r\n        var seenSections = squiffy.get('_seen_sections');\r\n        if (!seenSections) seenSections = [];\r\n        if (seenSections.indexOf(sectionName) == -1) {\r\n          seenSections.push(sectionName);\r\n          squiffy.set('_seen_sections', seenSections);\r\n        }\r\n      };\r\n      squiffy.story.passage = function(passageName) {\r\n        var passage = squiffy.story.section.passages[passageName];\r\n        if (passage) setSeen(squiffy.get('_section') + '.' + passageName);\r\n        var masterSection = squiffy.story.sections[''];\r\n        if (!(passage || masterSection)) return;\r\n        if (masterSection) {\r\n          if (!passage) {\r\n            passage = masterSection.passages[passageName];\r\n            if (!passage) return;\r\n          }\r\n          var masterPassage = masterSection.passages[''];\r\n          if (masterPassage) {\r\n            squiffy.story.run(masterPassage);\r\n            squiffy.ui.write(masterPassage.text);\r\n          }\r\n        }\r\n        setSeen('.' + passageName);\r\n        var master = squiffy.story.section.passages[''];\r\n        if (master) {\r\n          squiffy.story.run(master);\r\n          squiffy.ui.write(master.text);\r\n        }\r\n        squiffy.story.run(passage);\r\n        squiffy.ui.write(passage.text);\r\n        squiffy.story.save();\r\n        updateSidebar();\r\n      };\r\n\r\n      // any other  JS functions you need to modify will go here\r\n\r\n      if (squiffy.get('_transition')) {\r\n        // If we're loading a saved game, display the sidebar\r\n        updateSidebar();\r\n      } else {\r\n        // Go to the actual start of the game; change the name as appropriate\r\n        squiffy.story.go('first section');\r\n      }\r\n    });\r\n\r\n[[sidebar container]]:\r\n<button style=\"position: fixed; top: 6px; left: 2px;\" id=\"showinv\" type=\"button\">Show sidebar</button>\r\n<div id=\"sidebar\" style=\"background-color: white; position: fixed; left: 1px; top: 4px; bottom: 4px; width: 20%; overflow-y: auto; border: 1px double blue;\"><button style=\"position: absolute; top: 2px; right: 2px;\" id=\"hideinv\"  type=\"button\">Hide sidebar</button></div>\r\n\r\n[[sidebar contents]]:\r\n\r\n<p style=\"font-weight: bold;\">Inventory</p>\r\n\r\n<p>You are {if health=true:healthy}{else: unhealthy}.</p>\r\n{if has_potions:<p>You have {has_potions} potions. [Drink potion]</p>}\r\n\r\n[[]]:\r\n[Drink potion]:\r\n@dec has_potions\r\n\r\nYou drink it. It tastes great!\r\n\r\n[[first section]]:\r\nHere's the actual start of the game.\r\n```\r\n\r\nThat's off the top of my head, pulling together a few different bits of code from past experiments. This should make the sidebar update for passages as well as sections. Also, if the global section (`[[]]:`) has passages, they can be visited while in any session.\r\n\r\nI've also tweaked `seen` so that it'll work if you have passages with the same name within different sections.\r\nNow you can use:\r\n```\r\n{if seen name of section:You have been to [[name of section]]}\r\n{if seen .name of passage: You have seen a passage named \"name of passage\", but I don't know which section it was in (this is how 'seen' used to work)}\r\n{if seen section name.passage name: You have seen the passage named \"passage name\" in the section [[section name]].}\r\n```\r\nI think that makes it a little more useful.",
      "EditableFormat": "markdown",
      "HTML": "<p>OK… rebuilding this off the top of my head, haven't tested yet.</p>\n<p>EDIT: Briefly tested, corrected two trivial errors.<br>\nEDIT2: Updated to fix another bug</p>\n<pre><code>@start initialise_interface\n\n[[initialise_interface]]:\n    $(function () {\n      squiffy.story.save = function () {\n        squiffy.set('_output', squiffy.ui.output.html());\n        squiffy.set('_transition', \"squiffy.story.sections['initialise_interface'].js\");\n      };\n\n      var showSidebar = function () {\n        squiffy.ui.write(squiffy.story.sections['sidebar container'].text);\n        if ($('.ui-layout-north:visible').length) {\n          $('#showinv').css('top', $('#showinv').offset()['top']+92);\n          $('#sidebar').css('top', $('#sidebar').offset()['top']+92);\n          $('#sidebar').css('bottom', '100px');\n          $('&lt;button&gt;', {id: 'killsidebar', style: 'position: absolute; bottom: 4px; right: 4px'}).click(function () {\n            $('#killsidebar,#sidebar,#showinv').remove();\n          }).text('kill sidebar').appendTo('#sidebar');\n        }\n        $('#showinv').click(e =&gt; $('#sidebar').animate({left: 0}));\n        $('#hideinv').click(e =&gt; $('#sidebar').animate({left: 5-$('#sidebar').width()}));\n      };\n      var updateSidebar = function() {\n        if (!$('#sidebar').length) {\n          showSidebar();\n        }\n        if ($('#sidebar:visible').length) {\n          $('#sidebar').children(':not(#hideinv,#killsidebar)').remove();\n          $('#sidebar').append(squiffy.ui.processText(squiffy.story.sections['sidebar contents'].text));\n          if (squiffy.get('gameover')) {\n            $('#sidebar a').remove();\n          }\n        }\n      };\n\n      var original_go = squiffy.story.go;\n      squiffy.story.go = function (section) {\n        original_go(section);\n        \n        if (squiffy.afterText) {\n          var after = squiffy.afterText;\n          delete(squiffy['afterText']);\n          after();\n        }\n        updateSidebar();\n      };\n\n      var setSeen = function (sectionName) {\n        var seenSections = squiffy.get('_seen_sections');\n        if (!seenSections) seenSections = [];\n        if (seenSections.indexOf(sectionName) == -1) {\n          seenSections.push(sectionName);\n          squiffy.set('_seen_sections', seenSections);\n        }\n      };\n      squiffy.story.passage = function(passageName) {\n        var passage = squiffy.story.section.passages[passageName];\n        if (passage) setSeen(squiffy.get('_section') + '.' + passageName);\n        var masterSection = squiffy.story.sections[''];\n        if (!(passage || masterSection)) return;\n        if (masterSection) {\n          if (!passage) {\n            passage = masterSection.passages[passageName];\n            if (!passage) return;\n          }\n          var masterPassage = masterSection.passages[''];\n          if (masterPassage) {\n            squiffy.story.run(masterPassage);\n            squiffy.ui.write(masterPassage.text);\n          }\n        }\n        setSeen('.' + passageName);\n        var master = squiffy.story.section.passages[''];\n        if (master) {\n          squiffy.story.run(master);\n          squiffy.ui.write(master.text);\n        }\n        squiffy.story.run(passage);\n        squiffy.ui.write(passage.text);\n        squiffy.story.save();\n        updateSidebar();\n      };\n\n      // any other  JS functions you need to modify will go here\n\n      if (squiffy.get('_transition')) {\n        // If we're loading a saved game, display the sidebar\n        updateSidebar();\n      } else {\n        // Go to the actual start of the game; change the name as appropriate\n        squiffy.story.go('first section');\n      }\n    });\n\n[[sidebar container]]:\n&lt;button style=\"position: fixed; top: 6px; left: 2px;\" id=\"showinv\" type=\"button\"&gt;Show sidebar&lt;/button&gt;\n&lt;div id=\"sidebar\" style=\"background-color: white; position: fixed; left: 1px; top: 4px; bottom: 4px; width: 20%; overflow-y: auto; border: 1px double blue;\"&gt;&lt;button style=\"position: absolute; top: 2px; right: 2px;\" id=\"hideinv\"  type=\"button\"&gt;Hide sidebar&lt;/button&gt;&lt;/div&gt;\n\n[[sidebar contents]]:\n\n&lt;p style=\"font-weight: bold;\"&gt;Inventory&lt;/p&gt;\n\n&lt;p&gt;You are {if health=true:healthy}{else: unhealthy}.&lt;/p&gt;\n{if has_potions:&lt;p&gt;You have {has_potions} potions. [Drink potion]&lt;/p&gt;}\n\n[[]]:\n[Drink potion]:\n@dec has_potions\n\nYou drink it. It tastes great!\n\n[[first section]]:\nHere's the actual start of the game.\n</code></pre>\n<p>That's off the top of my head, pulling together a few different bits of code from past experiments. This should make the sidebar update for passages as well as sections. Also, if the global section (<code>[[]]:</code>) has passages, they can be visited while in any session.</p>\n<p>I've also tweaked <code>seen</code> so that it'll work if you have passages with the same name within different sections.<br>\nNow you can use:</p>\n<pre><code>{if seen name of section:You have been to [[name of section]]}\n{if seen .name of passage: You have seen a passage named \"name of passage\", but I don't know which section it was in (this is how 'seen' used to work)}\n{if seen section name.passage name: You have seen the passage named \"passage name\" in the section [[section name]].}\n</code></pre>\n<p>I think that makes it a little more useful.</p>\n\n",
      "PostDate": "2021-05-21T17:08:21.4738724Z",
      "LastEditDate": "2021-09-22T11:31:02.9754814Z",
      "link": null
    },
    {
      "PostId": "94e2c754-ec0e-431d-93d1-f45526c42aff",
      "UserId": 471103,
      "Username": "Avaruushiiri",
      "AvatarUrl": "https://i.imgur.com/P3h3qvcb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That certainly looks good! (I too had wondered whether something like that wouldn't be better for \"seen\" notation.)\r\n\r\nUnfortunately, there's something wonky with it, and I can't put my finger on it. It probably has something to do with setting the current section, since passage links seem to work erratically. More alarmingly, after I run this code once, after restarting the sidebar refuses to appear at all – and so does the text of the game itself. I have to restart the editor.\r\n\r\nHelp pls? ^.^",
      "EditableFormat": "markdown",
      "HTML": "<p>That certainly looks good! (I too had wondered whether something like that wouldn't be better for \"seen\" notation.)</p>\n<p>Unfortunately, there's something wonky with it, and I can't put my finger on it. It probably has something to do with setting the current section, since passage links seem to work erratically. More alarmingly, after I run this code once, after restarting the sidebar refuses to appear at all – and so does the text of the game itself. I have to restart the editor.</p>\n<p>Help pls? ^.^</p>\n\n",
      "PostDate": "2021-05-26T09:39:49.9849038Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "efaa0431-88b1-42e5-a36e-7d8de761669c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'll give it a try later if I have time. I was writing off the top of my head there, as I was on my phone without access to Squiffy.\r\n\r\n… or now, if it's only a 2-minute fix.\r\n\r\nOK… 2 careless typos.\r\nChanging the line\r\n<pre><code style=\"color: brown;\">      var setSeen = function (section) {</code></pre>\r\nto\r\n<pre><code style=\"color: green;\">      var setSeen = function (section<b>Name</b>) {</code></pre>\r\n\r\nand at the end, changing\r\n<pre><code style=\"color: brown;\">        squiffy.story.go('<s>F</s>irst section');</code></pre>\r\nto\r\n<pre><code style=\"color: green;\">        squiffy.story.go('<b>f</b>irst section');</code></pre>\r\n(or whatever the name of your actual first section is)\r\n\r\nAfter that it seems to work as planned :)",
      "EditableFormat": "markdown",
      "HTML": "<p>I'll give it a try later if I have time. I was writing off the top of my head there, as I was on my phone without access to Squiffy.</p>\n<p>… or now, if it's only a 2-minute fix.</p>\n<p>OK… 2 careless typos.<br>\nChanging the line</p>\n<pre><code style=\"color: brown\">      var setSeen = function (section) {</code></pre>\n<p>to</p>\n<pre><code style=\"color: green\">      var setSeen = function (section<b>Name</b>) {</code></pre>\n<p>and at the end, changing</p>\n<pre><code style=\"color: brown\">        squiffy.story.go('<s>F</s>irst section');</code></pre>\n<p>to</p>\n<pre><code style=\"color: green\">        squiffy.story.go('<b>f</b>irst section');</code></pre>\n<p>(or whatever the name of your actual first section is)</p>\n<p>After that it seems to work as planned :)</p>\n\n",
      "PostDate": "2021-05-26T11:04:14.5739605Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5aec4531-0a6e-4bdd-bcb3-21d91586b22d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(I only tested these fixes in the scratchpad, so if it still fails in the editor and/or when published, I'll take another look)",
      "EditableFormat": "markdown",
      "HTML": "<p>(I only tested these fixes in the scratchpad, so if it still fails in the editor and/or when published, I'll take another look)</p>\n\n",
      "PostDate": "2021-05-26T11:08:06.9727188Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a22e5ec7-7eae-4ffe-be27-7017f4fc201e",
      "UserId": 471103,
      "Username": "Avaruushiiri",
      "AvatarUrl": "https://i.imgur.com/P3h3qvcb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well I am flabbergasted. I copied the code verbatim, checked to see all section names were called correctly, and still it won't work. (I'm using the editor on Ubuntu Mate.) No sidebar, nor anything else when \"Built\" and run in a browser. (In the editor's Output tab, it works _once_, but not a second time without restarting the editor. And the sidebar is still missing.)\r\n\r\nBut! If I delete the very useful altered master passage code, everything works. So it has to be something to do with that bit. What exactly, I have no clue.",
      "EditableFormat": "markdown",
      "HTML": "<p>Well I am flabbergasted. I copied the code verbatim, checked to see all section names were called correctly, and still it won't work. (I'm using the editor on Ubuntu Mate.) No sidebar, nor anything else when \"Built\" and run in a browser. (In the editor's Output tab, it works <em>once</em>, but not a second time without restarting the editor. And the sidebar is still missing.)</p>\n<p>But! If I delete the very useful altered master passage code, everything works. So it has to be something to do with that bit. What exactly, I have no clue.</p>\n\n",
      "PostDate": "2021-05-31T19:42:27.0887497Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "35a33b1c-724a-4673-971c-dbf14d793b27",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's weird. Do any errors show up in the console?\r\n\r\nI'll take a look when I get back to my computer",
      "EditableFormat": "markdown",
      "HTML": "<p>That's weird. Do any errors show up in the console?</p>\n<p>I'll take a look when I get back to my computer</p>\n\n",
      "PostDate": "2021-06-01T08:42:24.6291222Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0eec7555-65c4-4f5a-83a1-423780292a3e",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I can't understand what `_output` is doing here.\r\n\r\nThe attribute should be created every time `squiffy.story.save()` is called, saving the current contents of the output pane.\r\nSo in that script, I tested if that attribute exists to see if the game is already running.\r\n\r\nWhen the game initialises, it uses the exact same test to decide whether to load a saved game or go to the start section.\r\n\r\nBut it seems like that only works in the editor's test pane… once I publish the game, `_output` starts as `<div id=\\\"squiffy-section-1\\\"><div></div><div>`.\r\n\r\nSo… need to use other means to check if we're loading a saved game or starting a new one.\r\n\r\nI tried changing:\r\n<pre><code>      if (<b style=\"color: brown\">squiffy.get('_output')</b>) {\r\n        // If we're loading a saved game, display the sidebar\r\n        updateSidebar();\r\n      } else {</code></pre>\r\nto\r\n<pre><code>      if (<b style=\"color: green\">squiffy.get('_section') != \"initialise_interface\"</b>) {\r\n        // If we're loading a saved game, display the sidebar\r\n        updateSidebar();\r\n      } else {</code></pre>\r\nand it seems to work in preview.\r\n\r\nThat's basically testing if we're actually on this section.\r\n\r\nAlthough now I think about it,\r\n<pre><code>      if (squiffy.get('_transition')) {</code></pre>\r\nmight have been more logical.\r\n\r\nHaven't tried that yet.",
      "EditableFormat": "markdown",
      "HTML": "<p>I can't understand what <code>_output</code> is doing here.</p>\n<p>The attribute should be created every time <code>squiffy.story.save()</code> is called, saving the current contents of the output pane.<br>\nSo in that script, I tested if that attribute exists to see if the game is already running.</p>\n<p>When the game initialises, it uses the exact same test to decide whether to load a saved game or go to the start section.</p>\n<p>But it seems like that only works in the editor's test pane… once I publish the game, <code>_output</code> starts as <code>&lt;div id=\\\"squiffy-section-1\\\"&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;</code>.</p>\n<p>So… need to use other means to check if we're loading a saved game or starting a new one.</p>\n<p>I tried changing:</p>\n<pre><code>      if (<b style=\"color: brown\">squiffy.get('_output')</b>) {\n        // If we're loading a saved game, display the sidebar\n        updateSidebar();\n      } else {</code></pre>\n<p>to</p>\n<pre><code>      if (<b style=\"color: green\">squiffy.get('_section') != \"initialise_interface\"</b>) {\n        // If we're loading a saved game, display the sidebar\n        updateSidebar();\n      } else {</code></pre>\n<p>and it seems to work in preview.</p>\n<p>That's basically testing if we're actually on this section.</p>\n<p>Although now I think about it,</p>\n<pre><code>      if (squiffy.get('_transition')) {</code></pre>\n<p>might have been more logical.</p>\n<p>Haven't tried that yet.</p>\n\n",
      "PostDate": "2021-06-01T10:37:56.289406Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
