{
  "Topic": {
    "TopicId": "wyfnaiizykgoh7sik0la7a",
    "ForumId": "24",
    "Title": "Appending a randomly generated number to a string to make an attribute",
    "LastUpdated": "2020-09-22T17:15:24.6951706Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "e1f58b0d-4600-4b42-a6ca-174f83243dbc",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is there a way to generate a random number and append it to an attribute, eg\r\n\r\n```@set description1 = The car was red```\r\n```@set description2  = The bus was blue```\r\n\r\n```[[next]]```\r\n\r\n```[[next]]:```\r\n```var randomnumber = function rng(min, max) {```\r\n```return Math.floor(Math.random() * (max - min) + min);```\r\n```}```\r\n```set (\"rnd\", randomnumber(1,2));```\r\n\r\n...and then append the rnd result to description to make {description1} or {description2}, randomly displaying either 'The car was red' or 'The bus was blue' (without having to do if statements for each possible result of rnd)?\r\n\r\nAnd somewhat related, is there a way to set an attribute with another attribute in it?\r\n\r\n```@set colour = red```\r\n```@set description1 = The car was {colour}```\r\n\r\n...just produces _The car was {colour}_ from {description1}\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Is there a way to generate a random number and append it to an attribute, eg</p>\n<p><code>@set description1 = The car was red</code><br>\n<code>@set description2 = The bus was blue</code></p>\n<p><code>[[next]]</code></p>\n<p><code>[[next]]:</code><br>\n<code>var randomnumber = function rng(min, max) {</code><br>\n<code>return Math.floor(Math.random() * (max - min) + min);</code><br>\n<code>}</code><br>\n<code>set (\"rnd\", randomnumber(1,2));</code></p>\n<p>...and then append the rnd result to description to make {description1} or {description2}, randomly displaying either 'The car was red' or 'The bus was blue' (without having to do if statements for each possible result of rnd)?</p>\n<p>And somewhat related, is there a way to set an attribute with another attribute in it?</p>\n<p><code>@set colour = red</code><br>\n<code>@set description1 = The car was {colour}</code></p>\n<p>...just produces <em>The car was {colour}</em> from {description1}</p>\n\n",
      "PostDate": "2020-09-22T17:15:24.6951706Z",
      "LastEditDate": "2020-09-22T17:15:59.2597644Z",
      "link": null
    },
    {
      "PostId": "aa2134f6-210d-4c09-ba65-4a7024021e2d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For the first, I think your javascript should be:\r\n```\r\n    squiffy.set(\"result\", squiffy.get(\"description\" + randomnumber(1,2));\r\n```\r\n\r\nIt's probably easier to do in javascript, because you can combine a string and a random number to get the parameter you need for  `squiffy.get` to get a Squiffy attribute.\r\n\r\nIf you want it to work with other attributes inside that string, you'd want to call processText. Something like this:\r\n<pre><code>    var rnd = randomnumber(1,2);\r\n    var result = squiffy.get(\"description\" + rnd);\r\n<b style=\"color:darkgreen\">    result = squiffy.ui.processText(result);</b>\r\n    squiffy.set(\"result\", result);</code></pre>\r\nSo you can then use `{result}` in your text.\r\n\r\nIf you don't need to do anything else with the result before it's displayed, you can compress that down into a single line:\r\n```\r\n    squiffy.set(\"result\", squiffy.ui.processText(squiffy.get(\"description\" + randomnumber(1,2))));\r\n```\r\nwhich is more efficient, but may be harder to read if you're not used to looking at code.",
      "EditableFormat": "markdown",
      "HTML": "<p>For the first, I think your javascript should be:</p>\n<pre><code>    squiffy.set(\"result\", squiffy.get(\"description\" + randomnumber(1,2));\n</code></pre>\n<p>It's probably easier to do in javascript, because you can combine a string and a random number to get the parameter you need for  <code>squiffy.get</code> to get a Squiffy attribute.</p>\n<p>If you want it to work with other attributes inside that string, you'd want to call processText. Something like this:</p>\n<pre><code>    var rnd = randomnumber(1,2);\n    var result = squiffy.get(\"description\" + rnd);\n<b style=\"color: darkgreen\">    result = squiffy.ui.processText(result);</b>\n    squiffy.set(\"result\", result);</code></pre>\n<p>So you can then use <code>{result}</code> in your text.</p>\n<p>If you don't need to do anything else with the result before it's displayed, you can compress that down into a single line:</p>\n<pre><code>    squiffy.set(\"result\", squiffy.ui.processText(squiffy.get(\"description\" + randomnumber(1,2))));\n</code></pre>\n<p>which is more efficient, but may be harder to read if you're not used to looking at code.</p>\n\n",
      "PostDate": "2020-09-22T19:38:28.5823888Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "96c2f62f-b5fa-4fd3-b548-acaae6cad41f",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "mrangel :)\r\n\r\n```var randomnumber = function rng(min, max) {```\r\n```return Math.floor(Math.random() * (max - min) + min);```\r\n``` }```\r\n``` squiffy.set(\"result\", squiffy.get(\"description\" + randomnumber(1,2)));```\r\n```{result}```\r\n\r\nworks beautifully for me, thank you :)\r\n\r\nCould you elaborate on the processText alternative? I can't get either to work in my demo, but I'd like to know more - could I use it to stick together (technical term!) different attributes and random results?\r\n\r\n\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>mrangel :)</p>\n<p><code>var randomnumber = function rng(min, max) {</code><br>\n<code>return Math.floor(Math.random() * (max - min) + min);</code><br>\n<code>}</code><br>\n<code>squiffy.set(\"result\", squiffy.get(\"description\" + randomnumber(1,2)));</code><br>\n<code>{result}</code></p>\n<p>works beautifully for me, thank you :)</p>\n<p>Could you elaborate on the processText alternative? I can't get either to work in my demo, but I'd like to know more - could I use it to stick together (technical term!) different attributes and random results?</p>\n\n",
      "PostDate": "2020-09-22T21:11:19.4305571Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e7a3a64e-9eb9-4d5c-8cac-0cf2612775e3",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Also this is a real rookie question (but I still don't have my head around javascript). In this example from one of the other solutions you've helped me with, how would I append (or prepend) a string of drag to the pageNumber created by the rng so that I'd have an attribute of {dragA} {dragB} etc (dependent on what the rng generated)?\r\n\r\n```squiffy.set(\"pagesToVisit\", \"ABCDEFGHIJKLMNOPQRST\")```\r\n```var pages = get(\"pagesToVisit\");```\r\n```if (pages) {```\r\n```var rnd = pages.charAt(Math.floor(Math.random() * pages.length)); // pick a random character from pages```\r\n```squiffy.set(\"pageNumber\", rnd);```\r\n```squiffy.set(\"pagesToVisit\", pages.replace(rnd, \"\")); // remove that page from the list so it won't be picked again```\r\n```} else {```\r\n```squiffy.story.go(\"leftStanding\");```\r\n```    }```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Also this is a real rookie question (but I still don't have my head around javascript). In this example from one of the other solutions you've helped me with, how would I append (or prepend) a string of drag to the pageNumber created by the rng so that I'd have an attribute of {dragA} {dragB} etc (dependent on what the rng generated)?</p>\n<p><code>squiffy.set(\"pagesToVisit\", \"ABCDEFGHIJKLMNOPQRST\")</code><br>\n<code>var pages = get(\"pagesToVisit\");</code><br>\n<code>if (pages) {</code><br>\n<code>var rnd = pages.charAt(Math.floor(Math.random() * pages.length)); // pick a random character from pages</code><br>\n<code>squiffy.set(\"pageNumber\", rnd);</code><br>\n<code>squiffy.set(\"pagesToVisit\", pages.replace(rnd, \"\")); // remove that page from the list so it won't be picked again</code><br>\n<code>} else {</code><br>\n<code>squiffy.story.go(\"leftStanding\");</code><br>\n<code>}</code></p>\n\n",
      "PostDate": "2020-09-22T21:40:32.5405562Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e483521e-0f6a-44ae-9e5b-a0360ea870bb",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Could you elaborate on the processText alternative? I can't get either to work in my demo, but I'd like to know more\r\n\r\nHere's what I've tried. It seems to work for me:\r\n\r\n```\r\n@title Dumb test game\r\n\r\n[[first section]]:\r\n\r\n    window.randomnumber = function(min, max) {\r\n      return Math.floor(Math.random() * (1 + max - min) + min);\r\n    };\r\n\r\n@set color1 = red\r\n@set color2 = blue\r\n@set color3 = green\r\n@set description1 = The car is {color}\r\n@set description2 = The truck is {color}\r\n\r\nThe initial attributes are set. Would you like to [[pick a color]] or [[pick a description]]?\r\n\r\n[[pick a color]]:\r\n\r\n    var rnd = randomnumber(1,3);\r\n    var result = squiffy.get(\"color\" + rnd);\r\n    result = squiffy.ui.processText(result);\r\n    squiffy.set(\"color\", result);\r\n\r\nOkay, so far we've picked a color. It was {color}.\r\n\r\nNext, would you like to [[pick a color]] or [[pick a description]]?\r\n\r\n[[pick a description]]:\r\n\r\n    var rnd = randomnumber(1,2);\r\n    var result = squiffy.get(\"description\" + rnd);\r\n    result = squiffy.ui.processText(result);\r\n    squiffy.set(\"description\", result);\r\n\r\nYou look at the traffic. {description}.\r\n\r\nNext, would you like to [[pick a color]] or [[pick a description]]?\r\n```\r\n\r\nTo summarise how it works:\r\n\r\n* `   var rnd = randomnumber(1,2);`\r\nGets a random number from 1 to 2, and puts that in the javascript variable `rnd`.\r\n\r\n* `var result = squiffy.get(\"description\" + rnd);`\r\nSticks the string `\"description\"` and the value of `rnd` together to get a name like `description2`, and uses `squiffy.get` to get the value of the named attribute, which it puts in the javascript variable `result`.\r\n\r\n* `result = squiffy.ui.processText(result);`\r\nDoes the text processor thing to the text in `result`, the same as is done with a section's description when visiting it. This changes `{color}` to the current value of the `color` attribute and similar things. The result is stored back in the javascript variable `result`.\r\n\r\n* `squiffy.set(\"description\", result);`\r\nSets the squiffy attribute `description` to the value of the javascript variable `result`. This means that you can then use `{description}` in your section text.\r\n\r\n<hr style=\"border-top: 1px solid green\"/>\r\n\r\n> Also this is a real rookie question (but I still don't have my head around javascript). In this example from one of the other solutions you've helped me with, how would I append (or prepend) a string of drag to the pageNumber created by the rng so that I'd have an attribute of {dragA} {dragB} etc (dependent on what the rng generated)?\r\n\r\nOK, I'm not sure exactly what you mean here.\r\n\r\nThis line:\r\n`squiffy.set(\"pageNumber\", rnd);`\r\nsets the attribute `pagenumber` to the randomly chosen letter. If you want to do something else, you'll want to put a different line either after or instead of that one. Different things you might want include:\r\n\r\n* Set an attribute (let's call it `pagename`) to a string like \"dragA\" or \"dragB\"\r\n`squiffy.set(\"pagename\", \"drag\" + rnd);`\r\n\r\n* Set an attribute (let's call it `dragrnd` to the contents of the attribute `dargA` etc, so you can use `{dragrnd}` instead of `{dragA}`, `{dargB}`, etc.\r\n`squiffy.set(\"dragrnd\", squiffy.get(\"drag\" + rnd));`\r\n\r\n* Go to the page `dragA`, `dragB`, or so on.\r\n`squiffy.story.go(\"drag\" + rnd);`\r\n\r\nIs one of these what you wanted, or am I missing something?",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Could you elaborate on the processText alternative? I can't get either to work in my demo, but I'd like to know more</p>\n</blockquote>\n<p>Here's what I've tried. It seems to work for me:</p>\n<pre><code>@title Dumb test game\n\n[[first section]]:\n\n    window.randomnumber = function(min, max) {\n      return Math.floor(Math.random() * (1 + max - min) + min);\n    };\n\n@set color1 = red\n@set color2 = blue\n@set color3 = green\n@set description1 = The car is {color}\n@set description2 = The truck is {color}\n\nThe initial attributes are set. Would you like to [[pick a color]] or [[pick a description]]?\n\n[[pick a color]]:\n\n    var rnd = randomnumber(1,3);\n    var result = squiffy.get(\"color\" + rnd);\n    result = squiffy.ui.processText(result);\n    squiffy.set(\"color\", result);\n\nOkay, so far we've picked a color. It was {color}.\n\nNext, would you like to [[pick a color]] or [[pick a description]]?\n\n[[pick a description]]:\n\n    var rnd = randomnumber(1,2);\n    var result = squiffy.get(\"description\" + rnd);\n    result = squiffy.ui.processText(result);\n    squiffy.set(\"description\", result);\n\nYou look at the traffic. {description}.\n\nNext, would you like to [[pick a color]] or [[pick a description]]?\n</code></pre>\n<p>To summarise how it works:</p>\n<ul>\n<li>\n<p><code>var rnd = randomnumber(1,2);</code><br>\nGets a random number from 1 to 2, and puts that in the javascript variable <code>rnd</code>.</p>\n</li>\n<li>\n<p><code>var result = squiffy.get(\"description\" + rnd);</code><br>\nSticks the string <code>\"description\"</code> and the value of <code>rnd</code> together to get a name like <code>description2</code>, and uses <code>squiffy.get</code> to get the value of the named attribute, which it puts in the javascript variable <code>result</code>.</p>\n</li>\n<li>\n<p><code>result = squiffy.ui.processText(result);</code><br>\nDoes the text processor thing to the text in <code>result</code>, the same as is done with a section's description when visiting it. This changes <code>{color}</code> to the current value of the <code>color</code> attribute and similar things. The result is stored back in the javascript variable <code>result</code>.</p>\n</li>\n<li>\n<p><code>squiffy.set(\"description\", result);</code><br>\nSets the squiffy attribute <code>description</code> to the value of the javascript variable <code>result</code>. This means that you can then use <code>{description}</code> in your section text.</p>\n</li>\n</ul>\n<hr style=\"border-top: 1px solid green\">\n<blockquote>\n<p>Also this is a real rookie question (but I still don't have my head around javascript). In this example from one of the other solutions you've helped me with, how would I append (or prepend) a string of drag to the pageNumber created by the rng so that I'd have an attribute of {dragA} {dragB} etc (dependent on what the rng generated)?</p>\n</blockquote>\n<p>OK, I'm not sure exactly what you mean here.</p>\n<p>This line:<br>\n<code>squiffy.set(\"pageNumber\", rnd);</code><br>\nsets the attribute <code>pagenumber</code> to the randomly chosen letter. If you want to do something else, you'll want to put a different line either after or instead of that one. Different things you might want include:</p>\n<ul>\n<li>\n<p>Set an attribute (let's call it <code>pagename</code>) to a string like \"dragA\" or \"dragB\"<br>\n<code>squiffy.set(\"pagename\", \"drag\" + rnd);</code></p>\n</li>\n<li>\n<p>Set an attribute (let's call it <code>dragrnd</code> to the contents of the attribute <code>dargA</code> etc, so you can use <code>{dragrnd}</code> instead of <code>{dragA}</code>, <code>{dargB}</code>, etc.<br>\n<code>squiffy.set(\"dragrnd\", squiffy.get(\"drag\" + rnd));</code></p>\n</li>\n<li>\n<p>Go to the page <code>dragA</code>, <code>dragB</code>, or so on.<br>\n<code>squiffy.story.go(\"drag\" + rnd);</code></p>\n</li>\n</ul>\n<p>Is one of these what you wanted, or am I missing something?</p>\n\n",
      "PostDate": "2020-09-23T20:46:24.9219891Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fee3b446-d429-488f-9824-46fd36a573a5",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "First thing - brilliant, that's exactly what I needed! I'm trying to construct unique passages using random choices for each part of the sentence, and that does it beautifully, thank you!\r\n\r\nOn the second one, I think what I'm after is your second example:\r\n\r\n```squiffy.set(\"dragrnd\", squiffy.get(\"drag\" + rnd));```\r\n\r\n...so that I can use {dragrnd} instead of having to specify dragA, dragB etc. However for me {dragrnd} is returning null if I use it like this:\r\n\r\n```var pages = get(\"pagesToVisit\");```\r\n```    if (pages) {```\r\n```      var rnd = pages.charAt(Math.floor(Math.random() * pages.length)); // pick a random character from pages```\r\n```      squiffy.set(\"dragrnd\", squiffy.get(\"drag\" + rnd));```\r\n```      squiffy.set(\"pagesToVisit\", pages.replace(rnd, \"\")); // remove that page from the list so it won't be picked again```\r\n```    } else {```\r\n```      squiffy.story.go(\"leftStanding\");```\r\n```    }```\r\n\r\n```{dragrnd}```\r\n\r\nA further thought (once it's not returning null!) - would I be able to stick a string on the beginning and the end of rnd, like\r\n\r\n```      squiffy.set(\"dragcolour\", squiffy.get(\"drag\" + rnd + _colour));```\r\n\r\nto produce an attribute {dragcolour} that would return the value of dragA_colour, dragB_colour etc?\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>First thing - brilliant, that's exactly what I needed! I'm trying to construct unique passages using random choices for each part of the sentence, and that does it beautifully, thank you!</p>\n<p>On the second one, I think what I'm after is your second example:</p>\n<p><code>squiffy.set(\"dragrnd\", squiffy.get(\"drag\" + rnd));</code></p>\n<p>...so that I can use {dragrnd} instead of having to specify dragA, dragB etc. However for me {dragrnd} is returning null if I use it like this:</p>\n<p><code>var pages = get(\"pagesToVisit\");</code><br>\n<code>if (pages) {</code><br>\n<code>var rnd = pages.charAt(Math.floor(Math.random() * pages.length)); // pick a random character from pages</code><br>\n<code>squiffy.set(\"dragrnd\", squiffy.get(\"drag\" + rnd));</code><br>\n<code>squiffy.set(\"pagesToVisit\", pages.replace(rnd, \"\")); // remove that page from the list so it won't be picked again</code><br>\n<code>} else {</code><br>\n<code>squiffy.story.go(\"leftStanding\");</code><br>\n<code>}</code></p>\n<p><code>{dragrnd}</code></p>\n<p>A further thought (once it's not returning null!) - would I be able to stick a string on the beginning and the end of rnd, like</p>\n<p><code>squiffy.set(\"dragcolour\", squiffy.get(\"drag\" + rnd + _colour));</code></p>\n<p>to produce an attribute {dragcolour} that would return the value of dragA_colour, dragB_colour etc?</p>\n\n",
      "PostDate": "2020-09-23T21:53:19.8396077Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "18c8266f-c449-4a67-880f-b7eaaba4e9fd",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> ...so that I can use {dragrnd} instead of having to specify dragA, dragB etc. However for me {dragrnd} is returning null if I use it like this:\r\n\r\nThat looks like it should work. Are you sure that the attribute `pagesToVisit` has been set before that point?\r\nI can only see 'null' coming out of that in 3 situations:\r\n* `pagesToVisit` hasn't been set yet\r\n* all the options have already been used\r\n* one of the `dragA`, `dragB`, `dragC` attributes hasn't been set yet (if the one that gets picked is null, dragrnd will be null as well)\r\n\r\n> `squiffy.set(\"dragcolour\", squiffy.get(\"drag\" + rnd + _colour));`\r\n\r\nShould be <code style=\"color: green;\">squiffy.set(\"dragcolour\", squiffy.get(\"drag\" + rnd + <b>\"</b>_colour<b>\"</b>));</code>, because `_colour` is a string rather than the name of a javascript variable.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>...so that I can use {dragrnd} instead of having to specify dragA, dragB etc. However for me {dragrnd} is returning null if I use it like this:</p>\n</blockquote>\n<p>That looks like it should work. Are you sure that the attribute <code>pagesToVisit</code> has been set before that point?<br>\nI can only see 'null' coming out of that in 3 situations:</p>\n<ul>\n<li><code>pagesToVisit</code> hasn't been set yet</li>\n<li>all the options have already been used</li>\n<li>one of the <code>dragA</code>, <code>dragB</code>, <code>dragC</code> attributes hasn't been set yet (if the one that gets picked is null, dragrnd will be null as well)</li>\n</ul>\n<blockquote>\n<p><code>squiffy.set(\"dragcolour\", squiffy.get(\"drag\" + rnd + _colour));</code></p>\n</blockquote>\n<p>Should be <code style=\"color: green\">squiffy.set(\"dragcolour\", squiffy.get(\"drag\" + rnd + <b>\"</b>_colour<b>\"</b>));</code>, because <code>_colour</code> is a string rather than the name of a javascript variable.</p>\n\n",
      "PostDate": "2020-09-24T09:00:31.0107918Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "da5c2515-b24f-49fd-81f4-423a119228dd",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ahh, that was what I hadn't done - defined dragA, dragB etc. Thank you!\r\n\r\nThat makes sense on the string, too. Honestly, I'm nearly there with this game (she says, after six months...)",
      "EditableFormat": "markdown",
      "HTML": "<p>Ahh, that was what I hadn't done - defined dragA, dragB etc. Thank you!</p>\n<p>That makes sense on the string, too. Honestly, I'm nearly there with this game (she says, after six months...)</p>\n\n",
      "PostDate": "2020-09-25T11:57:28.2767702Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0611831c-1321-43e8-a011-4cb33c33de14",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Of course I have another question : )\r\n\r\nSo I have this:\r\n\r\n```@set dragA = Bob```\r\n```@set dragB = Fred```\r\n```@set dragA_hatched=false```\r\n```@set dragB_hatched=false```\r\n\r\n```squiffy.set(\"pagesToVisit\", \"AB\")```\r\n```var pages = get(\"pagesToVisit\");```\r\n```if (pages) {```\r\n```var rnd = pages.charAt(Math.floor(Math.random() * pages.length)); // pick a random character from pages```\r\n```squiffy.set(\"dragrnd\", squiffy.get(\"drag\" + rnd));```\r\n```squiffy.set(\"pagesToVisit\", pages.replace(rnd, \"\")); // remove that page from the list so it won't be picked again```\r\n```} else {```\r\n```squiffy.story.go(\"leftStanding\");```\r\n```}```\r\n\r\n```{dragrnd} has hatched```\r\n\r\nOnce a drag eg dragA has been randomly selected, dragA_hatched needs to change to 'true' (as that true/false is used elsewhere) - can that be done?",
      "EditableFormat": "markdown",
      "HTML": "<p>Of course I have another question : )</p>\n<p>So I have this:</p>\n<p><code>@set dragA = Bob</code><br>\n<code>@set dragB = Fred</code><br>\n<code>@set dragA_hatched=false</code><br>\n<code>@set dragB_hatched=false</code></p>\n<p><code>squiffy.set(\"pagesToVisit\", \"AB\")</code><br>\n<code>var pages = get(\"pagesToVisit\");</code><br>\n<code>if (pages) {</code><br>\n<code>var rnd = pages.charAt(Math.floor(Math.random() * pages.length)); // pick a random character from pages</code><br>\n<code>squiffy.set(\"dragrnd\", squiffy.get(\"drag\" + rnd));</code><br>\n<code>squiffy.set(\"pagesToVisit\", pages.replace(rnd, \"\")); // remove that page from the list so it won't be picked again</code><br>\n<code>} else {</code><br>\n<code>squiffy.story.go(\"leftStanding\");</code><br>\n<code>}</code></p>\n<p><code>{dragrnd} has hatched</code></p>\n<p>Once a drag eg dragA has been randomly selected, dragA_hatched needs to change to 'true' (as that true/false is used elsewhere) - can that be done?</p>\n\n",
      "PostDate": "2020-09-25T12:30:06.3173469Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b8e0b9d9-1dfb-477c-be93-fe850866e573",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think `squiffy.set(\"drag\" + rnd + \"_hatched\", true);` may be the line you're looking for.",
      "EditableFormat": "markdown",
      "HTML": "<p>I think <code>squiffy.set(\"drag\" + rnd + \"_hatched\", true);</code> may be the line you're looking for.</p>\n\n",
      "PostDate": "2020-09-25T14:18:06.7185398Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6b69076e-5962-4b31-92f5-5c29306aa1b9",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Also, if you're pasting a whole bunch of code in the forum, rather than putting <code>`</code>s on each line, you can put three of them before and three after, like this:\r\n````\r\n```\r\n    here is some code\r\n    as many lines as you want {\r\n      and we can see the spaces\r\n      at the start of the lines\r\n        so it's easier to read\r\n    }\r\n```\r\n````",
      "EditableFormat": "markdown",
      "HTML": "<p>Also, if you're pasting a whole bunch of code in the forum, rather than putting <code>`</code>s on each line, you can put three of them before and three after, like this:</p>\n<pre><code>```\n    here is some code\n    as many lines as you want {\n      and we can see the spaces\n      at the start of the lines\n        so it's easier to read\n    }\n```\n</code></pre>\n\n",
      "PostDate": "2020-09-25T14:23:16.7704414Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "871e0a1f-d19a-44d9-bc58-97408e1ccce2",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You thought I'd gone away satisfied, didn't you? Ahahahahaha nope!\r\n\r\nSo the player randomly selected a dragon (eg dragA, dragB), and whatever drag they select additionally gets eg ```dragA_current=true``` set for them to indicate that dragA is the one currently in focus. ```{dragCurrent}``` returns a true/false based on ```dragA_current```.\r\n\r\n```\r\n@set dragA = Bob\r\n@set dragB = Fred\r\n@set dragA_hatched=false\r\n@set dragB_hatched=false\r\n@set dragA_current=false\r\n@set dragB_current= false\r\n\r\nsquiffy.set(\"pagesToVisit\", \"AB\")\r\nvar pages = get(\"pagesToVisit\");\r\nif (pages) {\r\nvar rnd = pages.charAt(Math.floor(Math.random() * pages.length)); // pick a random character from pages\r\nsquiffy.set(\"dragname\", squiffy.get(\"drag\" + rnd));\r\nsquiffy.set(\"drag\" + rnd + \"_current\", \"true\");\r\nsquiffy.set(\"dragCurrent\", squiffy.get(\"drag\" + rnd + \"_current\"));\r\nsquiffy.set(\"pagesToVisit\", pages.replace(rnd, \"\")); // remove that page from the list so it won't be picked again\r\n} else {\r\nsquiffy.story.go(\"leftStanding\");\r\n}\r\n\r\n{dragname} has hatched{if dragCurrent=true:  and is the current dragonet}.  But he doesn't seem interested in you.\r\n[[Leave him alone and wait for another dragon to hatch]](Hatching)\r\n[[Try harder]](Try harder)\r\n```\r\nHowever if (after other stuff happens in that section) dragA isn't interested in the player, ```dragA_current``` needs to be set back to false so that the next dragon can be set to current. I tried this with:\r\n```\r\n[[Leave him alone and wait for another dragon to hatch]](Hatching,dragCurrent=false)\r\n```\r\nbut that doesn't affect ```dragA_current``` -  it remains set to true.\r\n\r\nObviously by this point in the passage I can't set it using another line of javascript because the javascript always has to be the first thing in the section! Any advice?\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>You thought I'd gone away satisfied, didn't you? Ahahahahaha nope!</p>\n<p>So the player randomly selected a dragon (eg dragA, dragB), and whatever drag they select additionally gets eg <code>dragA_current=true</code> set for them to indicate that dragA is the one currently in focus. <code>{dragCurrent}</code> returns a true/false based on <code>dragA_current</code>.</p>\n<pre><code>@set dragA = Bob\n@set dragB = Fred\n@set dragA_hatched=false\n@set dragB_hatched=false\n@set dragA_current=false\n@set dragB_current= false\n\nsquiffy.set(\"pagesToVisit\", \"AB\")\nvar pages = get(\"pagesToVisit\");\nif (pages) {\nvar rnd = pages.charAt(Math.floor(Math.random() * pages.length)); // pick a random character from pages\nsquiffy.set(\"dragname\", squiffy.get(\"drag\" + rnd));\nsquiffy.set(\"drag\" + rnd + \"_current\", \"true\");\nsquiffy.set(\"dragCurrent\", squiffy.get(\"drag\" + rnd + \"_current\"));\nsquiffy.set(\"pagesToVisit\", pages.replace(rnd, \"\")); // remove that page from the list so it won't be picked again\n} else {\nsquiffy.story.go(\"leftStanding\");\n}\n\n{dragname} has hatched{if dragCurrent=true:  and is the current dragonet}.  But he doesn't seem interested in you.\n[[Leave him alone and wait for another dragon to hatch]](Hatching)\n[[Try harder]](Try harder)\n</code></pre>\n<p>However if (after other stuff happens in that section) dragA isn't interested in the player, <code>dragA_current</code> needs to be set back to false so that the next dragon can be set to current. I tried this with:</p>\n<pre><code>[[Leave him alone and wait for another dragon to hatch]](Hatching,dragCurrent=false)\n</code></pre>\n<p>but that doesn't affect <code>dragA_current</code> -  it remains set to true.</p>\n<p>Obviously by this point in the passage I can't set it using another line of javascript because the javascript always has to be the first thing in the section! Any advice?</p>\n\n",
      "PostDate": "2020-09-29T16:29:03.6650381Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1218086d-657b-41b5-bb1f-a63d3460812b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'd suggest setting an attribute to the chosen letter, so you can access it on other pages.\r\nFor example:\r\n```\r\n    squiffy.set(\"chosenLetter\", rnd);\r\n```\r\n\r\nThen you can have your link not modifying the variables yet:\r\n```\r\n[[Leave him alone and wait for another dragon to hatch]](Hatching)\r\n```\r\n\r\nAnd have the Hatching page set it to false as soon as the player gets there, before doing anything else:\r\n```\r\n[[Hatching]]:\r\n\r\n    if(squiffy.get(\"dragCurrent\")) {\r\n      squiffy.set(\"dragCurrent\", false);\r\n      squiffy.set(\"drag\" + squiffy.get(\"chosenLetter\") + \"_current\", false);\r\n    }\r\n```\r\n\r\nDoes that make sense?",
      "EditableFormat": "markdown",
      "HTML": "<p>I'd suggest setting an attribute to the chosen letter, so you can access it on other pages.<br>\nFor example:</p>\n<pre><code>    squiffy.set(\"chosenLetter\", rnd);\n</code></pre>\n<p>Then you can have your link not modifying the variables yet:</p>\n<pre><code>[[Leave him alone and wait for another dragon to hatch]](Hatching)\n</code></pre>\n<p>And have the Hatching page set it to false as soon as the player gets there, before doing anything else:</p>\n<pre><code>[[Hatching]]:\n\n    if(squiffy.get(\"dragCurrent\")) {\n      squiffy.set(\"dragCurrent\", false);\n      squiffy.set(\"drag\" + squiffy.get(\"chosenLetter\") + \"_current\", false);\n    }\n</code></pre>\n<p>Does that make sense?</p>\n\n",
      "PostDate": "2020-09-29T20:10:57.3771313Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3f717a46-7ded-4783-a405-76bb24d0c16d",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes it does - in fact the even more simple way I realised I could do, it based on your solution was \r\n```\r\nsquiffy.set(\"chosenLetter\", rnd);\r\n\r\n[[Leave him alone and wait for another dragon to hatch]](Hatching, {chosenLetter}_current=false)\r\n```\r\nThank you!",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes it does - in fact the even more simple way I realised I could do, it based on your solution was</p>\n<pre><code>squiffy.set(\"chosenLetter\", rnd);\n\n[[Leave him alone and wait for another dragon to hatch]](Hatching, {chosenLetter}_current=false)\n</code></pre>\n<p>Thank you!</p>\n\n",
      "PostDate": "2020-09-29T20:41:35.4605623Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b8a632c7-6a04-410e-81c4-8f7ac5656d94",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Nice :) I wasn't 100% sure that would work, but good to see it does :)",
      "EditableFormat": "markdown",
      "HTML": "<p>Nice :) I wasn't 100% sure that would work, but good to see it does :)</p>\n\n",
      "PostDate": "2020-09-29T20:59:56.046582Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
