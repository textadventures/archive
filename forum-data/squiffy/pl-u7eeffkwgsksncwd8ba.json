{
  "Topic": {
    "TopicId": "pl-u7eeffkwgsksncwd8ba",
    "ForumId": "24",
    "Title": "Unsetting an attribute previously set via jQuery",
    "LastUpdated": "2020-05-04T20:31:51.6532348Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "cf8eca1f-0999-4122-9fce-dc3ed395f503",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have a logic puzzle as part of my game, in which the user has to figure out the name, title etc of five individuals from the clues given.\r\n\r\nFor each individual there's a dropdown box for their title, and I capture the user's choice using jQuery:\r\n\r\n``` \r\n    <select name=\"Title1Guess\" id=\"Title1Guess\">\r\n    <option value=\"\" selected disabled>Select a title</option>\r\n    <option value=\"Mr\">Mr</option>\r\n    <option value=\"Mrs\">Mrs</option>\r\n    <option value=\"Ms\">Ms</option>\r\n    <option value=\"Miss\">Miss</option>\r\n    <option value=\"Dr\">Dr</option>\r\n    </select>\r\n```\r\nIn the next section I set ```{Title1Guess}``` with:\r\n```\r\nsquiffy.set(\"Title1Guess\", jQuery(\"#Title1Guess\").val());\r\n```\r\nThat works fine - if the user selects Mr, I can then do a check to see if ```{Title1Guess}``` matches ```{Title1}```.\r\n\r\nHowever I'd like to give my users the opportunity to go back and change their choices. What I'm finding is that if I send them back to the section with the dropdowns, whatever the user chose the first time is persisting - even if they choose something else the second time. Eg if they choose Mr the first time and Miss the second time, Mr is still being returned for #Title1Guess.\r\n\r\nCan anyone help me with unsetting that value so the user can choose completely new options from the dropdowns if they so choose?\r\n\r\nThanks in advance!",
      "EditableFormat": "markdown",
      "HTML": "<p>I have a logic puzzle as part of my game, in which the user has to figure out the name, title etc of five individuals from the clues given.</p>\n<p>For each individual there's a dropdown box for their title, and I capture the user's choice using jQuery:</p>\n<pre><code>    &lt;select name=\"Title1Guess\" id=\"Title1Guess\"&gt;\n    &lt;option value=\"\" selected disabled&gt;Select a title&lt;/option&gt;\n    &lt;option value=\"Mr\"&gt;Mr&lt;/option&gt;\n    &lt;option value=\"Mrs\"&gt;Mrs&lt;/option&gt;\n    &lt;option value=\"Ms\"&gt;Ms&lt;/option&gt;\n    &lt;option value=\"Miss\"&gt;Miss&lt;/option&gt;\n    &lt;option value=\"Dr\"&gt;Dr&lt;/option&gt;\n    &lt;/select&gt;\n</code></pre>\n<p>In the next section I set <code>{Title1Guess}</code> with:</p>\n<pre><code>squiffy.set(\"Title1Guess\", jQuery(\"#Title1Guess\").val());\n</code></pre>\n<p>That works fine - if the user selects Mr, I can then do a check to see if <code>{Title1Guess}</code> matches <code>{Title1}</code>.</p>\n<p>However I'd like to give my users the opportunity to go back and change their choices. What I'm finding is that if I send them back to the section with the dropdowns, whatever the user chose the first time is persisting - even if they choose something else the second time. Eg if they choose Mr the first time and Miss the second time, Mr is still being returned for #Title1Guess.</p>\n<p>Can anyone help me with unsetting that value so the user can choose completely new options from the dropdowns if they so choose?</p>\n<p>Thanks in advance!</p>\n\n",
      "PostDate": "2020-05-04T20:31:51.6532348Z",
      "LastEditDate": "2020-05-04T20:32:29.6994944Z",
      "link": null
    },
    {
      "PostId": "5c882458-f97b-4d5a-9de9-672cf8acd7b3",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've not got much experience in Squiffy; but that seems an odd condition. So it displays the drop down with \"Select a title\" selected, but after they choose another option, the variable is loaded with what they entered the first time?\r\n\r\nIf so, I have one guess about how the problem might be sneaking in. Does it change the results if you change the line to:\r\n```\r\n    squiffy.set(\"Title1Guess\", jQuery(\"#Title1Guess\").last().val());\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I've not got much experience in Squiffy; but that seems an odd condition. So it displays the drop down with \"Select a title\" selected, but after they choose another option, the variable is loaded with what they entered the first time?</p>\n<p>If so, I have one guess about how the problem might be sneaking in. Does it change the results if you change the line to:</p>\n<pre><code>    squiffy.set(\"Title1Guess\", jQuery(\"#Title1Guess\").last().val());\n</code></pre>\n\n",
      "PostDate": "2020-05-04T23:26:30.4147751Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "22d9e5ab-ee06-4805-9cd8-78e6e474542f",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yep, that's exactly what's happening.\r\n\r\nTried your solution with .last - that doesn't seem to have solved it though...",
      "EditableFormat": "markdown",
      "HTML": "<p>Yep, that's exactly what's happening.</p>\n<p>Tried your solution with .last - that doesn't seem to have solved it though...</p>\n\n",
      "PostDate": "2020-05-05T08:43:20.4306521Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "64e48586-83e6-4025-a33d-9b2c9768174e",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "My guess was that previous copies of the form might be hidden rather than removed, so jQuery finds the first. Guess that isn't the case here.\r\n\r\nAre you sure the JS code is being run the second time?\r\n\r\nAfraid nothing else comes to mind without poking at the game.",
      "EditableFormat": "markdown",
      "HTML": "<p>My guess was that previous copies of the form might be hidden rather than removed, so jQuery finds the first. Guess that isn't the case here.</p>\n<p>Are you sure the JS code is being run the second time?</p>\n<p>Afraid nothing else comes to mind without poking at the game.</p>\n\n",
      "PostDate": "2020-05-05T09:46:51.4136132Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b53d3881-4e28-4088-9f6f-8df7f2327bcf",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The form fields are definitely there and interactable the second time around - but yeah, maybe the JS isn't being run the second time. I'm just not sure why that would be the case (or indeed how to check!)\r\n\r\nI've simplified it down to the following - if you drop this into the Squiffy editor you should get what I'm getting. EG you select 'Mr' the first time, then when prompted opt to change your selection, and change to 'Miss' - the change of selection isn't reflected.\r\n\r\n```\r\n@title Dining hall logic\r\n@set Title1 = Miss\r\n\r\n[[Start]]\r\n\r\n[[Start]]:\r\n\r\n<p>Guess the title</p>\r\n\r\n<p>For testing purposes the correct title is Miss.</p>\r\n<p><strong>Title</strong><br />\r\n\r\n<select name=\"Title1Guess\" id=\"Title1Guess\">\r\n<option value=\"\" selected disabled>Select a title</option>\r\n  <option value=\"Mr\">Mr</option>\r\n  <option value=\"Miss\">Miss</option>\r\n</select>\r\n\r\n<p>[[Happy with your selection?]](Guess result)</p>\r\n\r\n[[Guess result]]:\r\n\r\n    squiffy.set(\"Title1Guess\", jQuery(\"#Title1Guess\").val());\r\n\r\n<p>You guessed {Title1Guess}. (The correct title is {Title1}).</p>\r\n\r\n<ul>\r\n<li>[[See if you're right]](Guess result 2)</li>\r\n<li>[[Change your selection]](Start)</li>\r\n\r\n</ul>\r\n\r\n[[Guess result 2]]:\r\n\r\n<p>Your guess {Title1Guess} was {if Title1Guess=@Title1: right}{else: wrong.} The correct title was {Title1}.</p>\r\n```\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>The form fields are definitely there and interactable the second time around - but yeah, maybe the JS isn't being run the second time. I'm just not sure why that would be the case (or indeed how to check!)</p>\n<p>I've simplified it down to the following - if you drop this into the Squiffy editor you should get what I'm getting. EG you select 'Mr' the first time, then when prompted opt to change your selection, and change to 'Miss' - the change of selection isn't reflected.</p>\n<pre><code>@title Dining hall logic\n@set Title1 = Miss\n\n[[Start]]\n\n[[Start]]:\n\n&lt;p&gt;Guess the title&lt;/p&gt;\n\n&lt;p&gt;For testing purposes the correct title is Miss.&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Title&lt;/strong&gt;&lt;br /&gt;\n\n&lt;select name=\"Title1Guess\" id=\"Title1Guess\"&gt;\n&lt;option value=\"\" selected disabled&gt;Select a title&lt;/option&gt;\n  &lt;option value=\"Mr\"&gt;Mr&lt;/option&gt;\n  &lt;option value=\"Miss\"&gt;Miss&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;p&gt;[[Happy with your selection?]](Guess result)&lt;/p&gt;\n\n[[Guess result]]:\n\n    squiffy.set(\"Title1Guess\", jQuery(\"#Title1Guess\").val());\n\n&lt;p&gt;You guessed {Title1Guess}. (The correct title is {Title1}).&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;[[See if you're right]](Guess result 2)&lt;/li&gt;\n&lt;li&gt;[[Change your selection]](Start)&lt;/li&gt;\n\n&lt;/ul&gt;\n\n[[Guess result 2]]:\n\n&lt;p&gt;Your guess {Title1Guess} was {if Title1Guess=@Title1: right}{else: wrong.} The correct title was {Title1}.&lt;/p&gt;\n</code></pre>\n\n",
      "PostDate": "2020-05-05T10:55:20.3573458Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "50305846-e84a-4cf2-a381-8ba09c43f8a7",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OK… you have multiple selectors on the page with the same ID.\r\nFor optimisation, jQuery uses `document.getElementById()` when you only pass it an ID. So it only gets the *first* element with the same ID.\r\n\r\nYou'll notice on that example that if you click \"Change your selection\" and then change the selection on the first dropdown list (not the new one), it registers the changed input.\r\n\r\nThree possible solutions:\r\n* `squiffy.set(\"Title1Guess\", jQuery(\"[id=Title1Guess]\").last().val());` - gets the list of all the elements with that ID, and picks the last one. (Note that having 2 elements with the same ID is invalid HTML; and might not work the same in all browsers)\r\n* `squiffy.set(\"Title1Guess\", jQuery(\"select#Title1Guess\").last().val());` - selecting by element type *and* ID prevents the special behaviour of only getting the first match; as above.\r\n* `squiffy.set(\"Title1Guess\", jQuery(\"#Title1Guess\").prop('disabled', true).removeAttr(\"id\").val());` - back to selecting only the first `<select>` element with that ID - but this time, after we've found it, we disable that field and remove its ID. This means that next time, it only finds the new one.",
      "EditableFormat": "markdown",
      "HTML": "<p>OK… you have multiple selectors on the page with the same ID.<br>\nFor optimisation, jQuery uses <code>document.getElementById()</code> when you only pass it an ID. So it only gets the <em>first</em> element with the same ID.</p>\n<p>You'll notice on that example that if you click \"Change your selection\" and then change the selection on the first dropdown list (not the new one), it registers the changed input.</p>\n<p>Three possible solutions:</p>\n<ul>\n<li><code>squiffy.set(\"Title1Guess\", jQuery(\"[id=Title1Guess]\").last().val());</code> - gets the list of all the elements with that ID, and picks the last one. (Note that having 2 elements with the same ID is invalid HTML; and might not work the same in all browsers)</li>\n<li><code>squiffy.set(\"Title1Guess\", jQuery(\"select#Title1Guess\").last().val());</code> - selecting by element type <em>and</em> ID prevents the special behaviour of only getting the first match; as above.</li>\n<li><code>squiffy.set(\"Title1Guess\", jQuery(\"#Title1Guess\").prop('disabled', true).removeAttr(\"id\").val());</code> - back to selecting only the first <code>&lt;select&gt;</code> element with that ID - but this time, after we've found it, we disable that field and remove its ID. This means that next time, it only finds the new one.</li>\n</ul>\n\n",
      "PostDate": "2020-05-05T17:17:12.8774587Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "13ce9004-84d7-4c72-b6d0-51158bc7fc61",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's solved it (went with the last option) - thank you mrangel!\r\n\r\nWhen you say I have multiple selectors using the same ID, do you mean because the field's ID was Title1Guess as well as the attribute name being Title1Guess? (ie should I avoid using the same string for the ID of a field and a Squiffy attribute name?) \r\n\r\nOr was it simply because looping through the dropdown twice set #Title1Guess twice (where I assumed it would just change the original choice to the later choice?) My javascript is not strong, so the more I understand about what I did wrong, the better equipped I am to avoid doing it again in future.\r\n\r\nThanks again for your help!",
      "EditableFormat": "markdown",
      "HTML": "<p>That's solved it (went with the last option) - thank you mrangel!</p>\n<p>When you say I have multiple selectors using the same ID, do you mean because the field's ID was Title1Guess as well as the attribute name being Title1Guess? (ie should I avoid using the same string for the ID of a field and a Squiffy attribute name?)</p>\n<p>Or was it simply because looping through the dropdown twice set #Title1Guess twice (where I assumed it would just change the original choice to the later choice?) My javascript is not strong, so the more I understand about what I did wrong, the better equipped I am to avoid doing it again in future.</p>\n<p>Thanks again for your help!</p>\n\n",
      "PostDate": "2020-05-05T21:37:55.7725061Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e9094cbe-a9a2-4e41-8952-596b9ea34f06",
      "UserId": 251768,
      "Username": "Bluevoss",
      "AvatarUrl": "https://i.imgur.com/6mfIIbhb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wow. This one was above my pay grade. Good solution!",
      "EditableFormat": "markdown",
      "HTML": "<p>Wow. This one was above my pay grade. Good solution!</p>\n\n",
      "PostDate": "2020-05-05T22:50:10.0571044Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8505d40a-56fb-49bf-b8c2-7730e4f72370",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> When you say I have multiple selectors using the same ID, do you mean because the field's ID was Title1Guess as well as the attribute name being Title1Guess? (ie should I avoid using the same string for the ID of a field and a Squiffy attribute name?)\r\n>\r\n> Or was it simply because looping through the dropdown twice set #Title1Guess twice (where I assumed it would just change the original choice to the later choice?) My javascript is not strong, so the more I understand about what I did wrong, the better equipped I am to avoid doing it again in future.\r\n\r\nIt's just because the expression `jQuery(\"#Title1Guess\")` (or `$(\"#Title1Guess\")`, which is equivalent) looks for a form field with `id=\"Title1Guess\"` in it. There's more than one of those being displayed (even if you have to scroll up to see the old ones), so it picks the *first* one.\r\n\r\nI'm not good at explaining :S Does a doodle/screenshot help?\r\n<img src=\"https://mrangel.info/squiffy-help1.png\" style=\"border: 1px solid grey\"/>\r\n\r\nI don't think there's any problem with using the same name for the attribute and the field; it's only an issue having two IDs the same.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>When you say I have multiple selectors using the same ID, do you mean because the field's ID was Title1Guess as well as the attribute name being Title1Guess? (ie should I avoid using the same string for the ID of a field and a Squiffy attribute name?)</p>\n<p>Or was it simply because looping through the dropdown twice set #Title1Guess twice (where I assumed it would just change the original choice to the later choice?) My javascript is not strong, so the more I understand about what I did wrong, the better equipped I am to avoid doing it again in future.</p>\n</blockquote>\n<p>It's just because the expression <code>jQuery(\"#Title1Guess\")</code> (or <code>$(\"#Title1Guess\")</code>, which is equivalent) looks for a form field with <code>id=\"Title1Guess\"</code> in it. There's more than one of those being displayed (even if you have to scroll up to see the old ones), so it picks the <em>first</em> one.</p>\n<p>I'm not good at explaining :S Does a doodle/screenshot help?<br>\n<img src=\"https://mrangel.info/squiffy-help1.png\" style=\"border: 1px solid grey\"></p>\n<p>I don't think there's any problem with using the same name for the attribute and the field; it's only an issue having two IDs the same.</p>\n\n",
      "PostDate": "2020-05-06T00:14:26.3266784Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4cc94ade-2078-4a62-9ddb-95a96406a48d",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah, I understand now! Thank you again for solving my problem - you're  a diamond!",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah, I understand now! Thank you again for solving my problem - you're  a diamond!</p>\n\n",
      "PostDate": "2020-05-06T08:59:16.3867233Z",
      "LastEditDate": "2020-05-06T09:54:39.515466Z",
      "link": null
    }
  ]
}
