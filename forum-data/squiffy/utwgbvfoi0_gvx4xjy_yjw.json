{
  "Topic": {
    "TopicId": "utwgbvfoi0_gvx4xjy_yjw",
    "ForumId": "24",
    "Title": "Why doesn't the javascript from w3schools.com ever seem to work in Squiffy?",
    "LastUpdated": "2020-08-26T07:24:18.3751413Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "e63463b6-906f-4f43-95e8-d968d066e133",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In w3schools.com, you can separate two words in an input like this:\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n<body>\r\n\r\n\r\n\r\n<p>What is your first and last name?</p>\r\n<input id=\"firstlast\" name=\"firstlast\">\r\n<button onclick=\"myFunction()\">Try it</button>\r\n<p id=\"first\"></p> \r\n<p id=\"last\"></p>\r\n\r\n<script>\r\nfunction myFunction() {\r\n  var firstlast = document.getElementById(\"firstlast\").value;\r\n  var first = firstlast.split(/ +/)[0];\r\n  var last = firstlast.split(/ +/)[1];\r\n  document.getElementById(\"first\").innerHTML = first;\r\n  document.getElementById(\"last\").innerHTML = last;\r\n\r\n}\r\n</script>\r\n\r\n</body>\r\n</html>\r\n```\r\n\r\nNothing remotely similar seems to work in Squiffy. Does anyone know why this is? How can I get Squiffy to do the same thing?\r\n\r\nThanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>In w3schools.com, you can separate two words in an input like this:</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n\n\n\n&lt;p&gt;What is your first and last name?&lt;/p&gt;\n&lt;input id=\"firstlast\" name=\"firstlast\"&gt;\n&lt;button onclick=\"myFunction()\"&gt;Try it&lt;/button&gt;\n&lt;p id=\"first\"&gt;&lt;/p&gt; \n&lt;p id=\"last\"&gt;&lt;/p&gt;\n\n&lt;script&gt;\nfunction myFunction() {\n  var firstlast = document.getElementById(\"firstlast\").value;\n  var first = firstlast.split(/ +/)[0];\n  var last = firstlast.split(/ +/)[1];\n  document.getElementById(\"first\").innerHTML = first;\n  document.getElementById(\"last\").innerHTML = last;\n\n}\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>Nothing remotely similar seems to work in Squiffy. Does anyone know why this is? How can I get Squiffy to do the same thing?</p>\n<p>Thanks!</p>\n\n",
      "PostDate": "2020-08-26T07:24:18.3751413Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c13d518b-bf0f-4acc-b96f-406f0c95e652",
      "UserId": 10695,
      "Username": "Rich Bunnett",
      "AvatarUrl": "https://graph.facebook.com/500025716/picture?width=80&height=80",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have the same question...",
      "EditableFormat": "markdown",
      "HTML": "<p>I have the same question...</p>\n\n",
      "PostDate": "2020-10-24T11:29:40.6968423Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d60ecebb-773e-42df-92cf-4db8eeaeff1b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Because you're putting HTML and Javascript where it's expecting HTML and Squiffy markup.\r\n\r\nSquiffy lets you put stuff like `{attribute_name}` in your text, and they are replaced by the value of the attribute.\r\nIn this case, the `{` and `}` on your function are causing it to look for an attribute with a very long name that starts with `var firstname`.\r\n\r\nAs there is no such attribute, the line which gets added to the document is:\r\n```\r\n<script>\r\nfunction myFunction() null\r\n</script>\r\n```\r\nwhich doesn't work.\r\n\r\nSquiffy has its own way of including javascript in a section: you put it before the text, with four spaces at the beginning of the line.\r\nAlthough this code is run inside an `eval` block, which means that local variables defined inside it (including old-style function definitions) will be local, and only accessible within that particular code block.\r\n\r\nSo to make it work as you wanted, you will need to explicitly declare the function as global by referring to the `window` object by name.\r\nLike this:\r\n```\r\n    window.myFunction = function() {\r\n      var firstlast = document.getElementById(\"firstlast\").value;\r\n      var first = firstlast.split(/ +/)[0];\r\n      var last = firstlast.split(/ +/)[1];\r\n      document.getElementById(\"first\").innerHTML = first;\r\n      document.getElementById(\"last\").innerHTML = last;\r\n    };\r\n\r\n<p>What is your first and last name?</p>\r\n<input id=\"firstlast\" name=\"firstlast\">\r\n<button onclick=\"myFunction()\">Try it</button>\r\n<p id=\"first\"></p> \r\n<p id=\"last\"></p>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Because you're putting HTML and Javascript where it's expecting HTML and Squiffy markup.</p>\n<p>Squiffy lets you put stuff like <code>{attribute_name}</code> in your text, and they are replaced by the value of the attribute.<br>\nIn this case, the <code>{</code> and <code>}</code> on your function are causing it to look for an attribute with a very long name that starts with <code>var firstname</code>.</p>\n<p>As there is no such attribute, the line which gets added to the document is:</p>\n<pre><code>&lt;script&gt;\nfunction myFunction() null\n&lt;/script&gt;\n</code></pre>\n<p>which doesn't work.</p>\n<p>Squiffy has its own way of including javascript in a section: you put it before the text, with four spaces at the beginning of the line.<br>\nAlthough this code is run inside an <code>eval</code> block, which means that local variables defined inside it (including old-style function definitions) will be local, and only accessible within that particular code block.</p>\n<p>So to make it work as you wanted, you will need to explicitly declare the function as global by referring to the <code>window</code> object by name.<br>\nLike this:</p>\n<pre><code>    window.myFunction = function() {\n      var firstlast = document.getElementById(\"firstlast\").value;\n      var first = firstlast.split(/ +/)[0];\n      var last = firstlast.split(/ +/)[1];\n      document.getElementById(\"first\").innerHTML = first;\n      document.getElementById(\"last\").innerHTML = last;\n    };\n\n&lt;p&gt;What is your first and last name?&lt;/p&gt;\n&lt;input id=\"firstlast\" name=\"firstlast\"&gt;\n&lt;button onclick=\"myFunction()\"&gt;Try it&lt;/button&gt;\n&lt;p id=\"first\"&gt;&lt;/p&gt; \n&lt;p id=\"last\"&gt;&lt;/p&gt;\n</code></pre>\n\n",
      "PostDate": "2020-10-24T15:25:44.0622868Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ec64b7e3-dc50-44ca-9867-f912eb8f3334",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I tried your solution, Mrangel, and unfortunately Squiffy just gave me a blank screen.",
      "EditableFormat": "markdown",
      "HTML": "<p>I tried your solution, Mrangel, and unfortunately Squiffy just gave me a blank screen.</p>\n\n",
      "PostDate": "2020-11-09T13:23:22.5484582Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "dc100542-1e72-47d3-9bab-d281c9c6dc7e",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It works fine for me.\r\n\r\nWhat exactly did you try?\r\nCan you show an example that doesn't work?",
      "EditableFormat": "markdown",
      "HTML": "<p>It works fine for me.</p>\n<p>What exactly did you try?<br>\nCan you show an example that doesn't work?</p>\n\n",
      "PostDate": "2020-11-09T15:40:33.4441719Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e51c59df-b073-4c0f-9c4e-037f8dd5fa7d",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm an idiot! I pasted your code exactly but forgot to tab the first line to make Squiffy know it was javascript. It works great now. You are a wonderful person, Mrangel!\r\n\r\nIs there a way to use ```squiffy.get``` to make Squiffy continue recognizing {first} and {last} as attributes?",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm an idiot! I pasted your code exactly but forgot to tab the first line to make Squiffy know it was javascript. It works great now. You are a wonderful person, Mrangel!</p>\n<p>Is there a way to use <code>squiffy.get</code> to make Squiffy continue recognizing {first} and {last} as attributes?</p>\n\n",
      "PostDate": "2020-11-10T04:45:10.0806176Z",
      "LastEditDate": "2020-11-10T05:03:12.1214295Z",
      "link": null
    },
    {
      "PostId": "67eb4fe1-2950-4f3e-8fa4-9de2fb31e5ed",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Is there a way to use `squiffy.get` to make Squiffy continue recognizing {first} and {last} as attributes?\r\n\r\nThat's what `squiffy.set` is for.\r\n\r\nWithin your function you could have a line like `squiffy.set(\"first\", first);` which creates a squiffy attribute from the javascript variable.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Is there a way to use <code>squiffy.get</code> to make Squiffy continue recognizing {first} and {last} as attributes?</p>\n</blockquote>\n<p>That's what <code>squiffy.set</code> is for.</p>\n<p>Within your function you could have a line like <code>squiffy.set(\"first\", first);</code> which creates a squiffy attribute from the javascript variable.</p>\n\n",
      "PostDate": "2020-11-10T10:54:44.8924518Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ba361b83-8ab2-4675-947c-82fe87a496aa",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Mrangel you really are a great person. Thanks so much for helping with this! It works perfectly now!",
      "EditableFormat": "markdown",
      "HTML": "<p>Mrangel you really are a great person. Thanks so much for helping with this! It works perfectly now!</p>\n\n",
      "PostDate": "2020-11-10T23:35:22.4189879Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "68324911-04e6-4a6f-833a-447d0930f390",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In order to keep my game consistent, what if I want to use a Squiffy link instead of a button to call \"myFunction()\"? Is there a way to do that?",
      "EditableFormat": "markdown",
      "HTML": "<p>In order to keep my game consistent, what if I want to use a Squiffy link instead of a button to call \"myFunction()\"? Is there a way to do that?</p>\n\n",
      "PostDate": "2020-11-16T01:04:09.0156313Z",
      "LastEditDate": "2020-11-16T01:04:26.2037866Z",
      "link": null
    },
    {
      "PostId": "d448a33d-4ed8-4196-b500-f1c06809f6b9",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think I got it!\r\n\r\n    @title Finally a Squiffy Two-Word Parser\r\n\r\n    window.myFunction = function() {\r\n      var firstlast = document.getElementById(\"firstlast\").value;\r\n      var first = firstlast.split(/ +/)[0];\r\n      var last = firstlast.split(/ +/)[1];\r\n      document.getElementById(\"first\").innerHTML = first;\r\n      document.getElementById(\"last\").innerHTML = last;\r\n      squiffy.set(\"first\", first);\r\n      squiffy.set(\"last\", last);\r\n    };\r\n\r\n    What is your first and last name?\r\n    <input id=\"firstlast\" oninput=\"myFunction()\" name=\"firstlast\"> [next]\r\n    <meta id=\"first\"></meta> <meta id=\"last\"></meta>\r\n\r\n    [next]:\r\n \r\n    I'm {first} of the family {last}.",
      "EditableFormat": "markdown",
      "HTML": "<p>I think I got it!</p>\n<pre><code>@title Finally a Squiffy Two-Word Parser\n\nwindow.myFunction = function() {\n  var firstlast = document.getElementById(\"firstlast\").value;\n  var first = firstlast.split(/ +/)[0];\n  var last = firstlast.split(/ +/)[1];\n  document.getElementById(\"first\").innerHTML = first;\n  document.getElementById(\"last\").innerHTML = last;\n  squiffy.set(\"first\", first);\n  squiffy.set(\"last\", last);\n};\n\nWhat is your first and last name?\n&lt;input id=\"firstlast\" oninput=\"myFunction()\" name=\"firstlast\"&gt; [next]\n&lt;meta id=\"first\"&gt;&lt;/meta&gt; &lt;meta id=\"last\"&gt;&lt;/meta&gt;\n\n[next]:\n\nI'm {first} of the family {last}.\n</code></pre>\n\n",
      "PostDate": "2020-11-18T08:08:07.1001907Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
