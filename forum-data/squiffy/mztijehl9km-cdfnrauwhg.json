{
  "Topic": {
    "TopicId": "mztijehl9km-cdfnrauwhg",
    "ForumId": "24",
    "Title": "Help with solution to lack of @import in editor?",
    "LastUpdated": "2023-03-21T23:46:25.8974236Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "3f6462c0-d084-4788-a097-a324214761ba",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I (and other people I've seen on this forum) have several things I'd like to be able to import into my games/toys and not copy-paste whole-cloth each time. Lines of JavaScript, lists of useful Squiffy attributes, that sort of thing.\r\n\r\nHere's one solution I thought of. It has major problems.\r\n1. It can't get ```@set``` style attributes nor Javascript. It can only get ```{@attribute}``` style attributes.\r\n2. It works in the <u>editor</u> but <u>not</u> in the browser. SURELY a file in the same folder should pass the domain test?!\r\n3. It only works with complete file paths, never with relative file paths.\r\n\r\n```    var month = squiffy.get(\"month\")\r\n\r\n        $.get ( 'textFileToImport.txt' ).done(    //Do I really need the entire URL?\r\n        function (data, status, xhr) {\r\n            squiffy.ui.processText(data);\r\n            squiffy.story.go(\"section_name\")\r\n\r\n        }\r\n    ).fail(\r\n        function (data, status, xhr) {\r\n            squiffy.set(\"data\", status);\r\n        }\r\n    );\r\n```\r\nI'd really rather there was an ```@import``` solution. This is the only meager success I've had.",
      "EditableFormat": "markdown",
      "HTML": "<p>I (and other people I've seen on this forum) have several things I'd like to be able to import into my games/toys and not copy-paste whole-cloth each time. Lines of JavaScript, lists of useful Squiffy attributes, that sort of thing.</p>\n<p>Here's one solution I thought of. It has major problems.</p>\n<ol>\n<li>It can't get <code>@set</code> style attributes nor Javascript. It can only get <code>{@attribute}</code> style attributes.</li>\n<li>It works in the <u>editor</u> but <u>not</u> in the browser. SURELY a file in the same folder should pass the domain test?!</li>\n<li>It only works with complete file paths, never with relative file paths.</li>\n</ol>\n<pre><code>\n        $.get ( 'textFileToImport.txt' ).done(    //Do I really need the entire URL?\n        function (data, status, xhr) {\n            squiffy.ui.processText(data);\n            squiffy.story.go(\"section_name\")\n\n        }\n    ).fail(\n        function (data, status, xhr) {\n            squiffy.set(\"data\", status);\n        }\n    );\n</code></pre>\n<p>I'd really rather there was an <code>@import</code> solution. This is the only meager success I've had.</p>\n\n",
      "PostDate": "2023-03-21T23:46:25.8974236Z",
      "LastEditDate": "2023-03-21T23:47:01.0555601Z",
      "link": null
    },
    {
      "PostId": "d6e9acad-5a53-4ab0-94c4-0695b2ac86dd",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok, this works.\r\n1. Upload your game to textadventures.co.uk.\r\n1. Replace 'textFileToImport.txt' with the complete URL of the text file as generated by textadventures.co.uk.\r\n\r\nHOWever,\r\n\r\nThis still does not get JavaScript or @set Attributes. It only gets {@Attributes}.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok, this works.</p>\n<ol>\n<li>Upload your game to textadventures.co.uk.</li>\n<li>Replace 'textFileToImport.txt' with the complete URL of the text file as generated by textadventures.co.uk.</li>\n</ol>\n<p>HOWever,</p>\n<p>This still does not get JavaScript or @set Attributes. It only gets {@Attributes}.</p>\n\n",
      "PostDate": "2023-03-23T00:50:05.3612494Z",
      "LastEditDate": "2023-03-23T01:00:24.1432901Z",
      "link": null
    },
    {
      "PostId": "a96f6ba9-254d-422b-8179-78769359ac36",
      "UserId": 8923,
      "Username": "CrisisSDK",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a1e2fe3ea718f55772fbbce83cb4016e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In the console version of Squiffy, it does of course support `@import` - and when I use Squiffy I do tend to use the console version. Of course, that doesn't help people using the editor...\r\n\r\nI have looked into supporting `@import` in the Squiffy Editor (at least the local version, rather than the web version) and it *should* be possible, but honestly my current changes to the editor for a potential new version are somewhat of a mess.\r\n\r\nFor the web version, having `@import` support using a full URL might work, but then we get into XSS issues and I definitely ***do not*** want to potentially open up any security holes.\r\nI would however like it to be able to support importing other Squiffy scripts you have saved in your account when online, and accessing them directly. I don't know how I would go about attempting to do that though.",
      "EditableFormat": "markdown",
      "HTML": "<p>In the console version of Squiffy, it does of course support <code>@import</code> - and when I use Squiffy I do tend to use the console version. Of course, that doesn't help people using the editor...</p>\n<p>I have looked into supporting <code>@import</code> in the Squiffy Editor (at least the local version, rather than the web version) and it <em>should</em> be possible, but honestly my current changes to the editor for a potential new version are somewhat of a mess.</p>\n<p>For the web version, having <code>@import</code> support using a full URL might work, but then we get into XSS issues and I definitely <strong><em>do not</em></strong> want to potentially open up any security holes.<br>\nI would however like it to be able to support importing other Squiffy scripts you have saved in your account when online, and accessing them directly. I don't know how I would go about attempting to do that though.</p>\n\n",
      "PostDate": "2023-03-23T04:07:58.2933243Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d94a7119-3aa8-4f27-9444-2f89ba9f2a03",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks for taking a stab at it, CrisisSDX!\r\n\r\nChat GPT provided this code, which allows Squiffy to process Javascript. It doesn't understand Squiffy enough to make it do both in the same $.get() function.\r\n\r\n```\r\n    $.get(\"file:///C:/Users/mwvog/OneDrive/Desktop/Squiffy/Squiffy%20Attribute%20API/TextFileToImport.txt\")\r\n    .done(function (data, status, xhr) {\r\n    try {\r\n        // Evaluate the text file as JavaScript code\r\n        eval(data);\r\n    } catch (e) {\r\n        console.error(\"Error evaluating JavaScript code from file:\", e);\r\n    }\r\n    // Process the text content as usual\r\n    squiffy.story.go(\"test\");\r\n    })\r\n    .fail(function (data, status, xhr) {\r\n    squiffy.set(\"data\", status);\r\n    });\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks for taking a stab at it, CrisisSDX!</p>\n<p>Chat GPT provided this code, which allows Squiffy to process Javascript. It doesn't understand Squiffy enough to make it do both in the same $.get() function.</p>\n<pre><code>    $.get(\"file:///C:/Users/mwvog/OneDrive/Desktop/Squiffy/Squiffy%20Attribute%20API/TextFileToImport.txt\")\n    .done(function (data, status, xhr) {\n    try {\n        // Evaluate the text file as JavaScript code\n        eval(data);\n    } catch (e) {\n        console.error(\"Error evaluating JavaScript code from file:\", e);\n    }\n    // Process the text content as usual\n    squiffy.story.go(\"test\");\n    })\n    .fail(function (data, status, xhr) {\n    squiffy.set(\"data\", status);\n    });\n</code></pre>\n\n",
      "PostDate": "2023-03-23T04:52:12.5446579Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7ceef997-716c-45aa-90a6-bc82dbe0f53e",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">For the web version, having ```@import``` support using a full URL might work, but then we get into XSS issues and I definitely do not want to potentially open up any security holes.\r\n\r\nAm I endangering textadventures.co.uk by using ```$.get```? \r\n\r\n>I would however like it to be able to support importing other Squiffy scripts you have saved in your account when online, and accessing them directly. I don't know how I would go about attempting to do that though.\r\n\r\nTo be intuitively consistent, you could have it import a saved .sq/.squiffy file from the same zipped folder.\r\n```@import Title.sq [[section_name]]: [passage_name]```",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>For the web version, having <code>@import</code> support using a full URL might work, but then we get into XSS issues and I definitely do not want to potentially open up any security holes.</p>\n</blockquote>\n<p>Am I endangering textadventures.co.uk by using <code>$.get</code>?</p>\n<blockquote>\n<p>I would however like it to be able to support importing other Squiffy scripts you have saved in your account when online, and accessing them directly. I don't know how I would go about attempting to do that though.</p>\n</blockquote>\n<p>To be intuitively consistent, you could have it import a saved .sq/.squiffy file from the same zipped folder.<br>\n<code>@import Title.sq [[section_name]]: [passage_name]</code></p>\n\n",
      "PostDate": "2023-03-29T06:17:13.1802136Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
