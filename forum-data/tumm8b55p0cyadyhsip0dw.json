{
  "Topic": {
    "TopicId": "tumm8b55p0cyadyhsip0dw",
    "ForumId": "10",
    "Title": "Couple of quick questions!",
    "LastUpdated": "2018-03-20T12:16:03.5123212Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "23f84cdf-f943-4138-9773-067a3f54d88e",
      "UserId": 350325,
      "Username": "Bobinator",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey! I've been messing around with Quest, and I've been slowly figuring it out. But I have a few questions, and to be honest, I'll be likely to have a lot more as I go. Please bear with me.\r\n\r\nOK, so.\r\n\r\n1. If you're using hyperlinks, how do you have it so certain actions DON'T show? Let's say you have a key the player needs to unlock something with. Is there a way to have it so the \"Unlock\" command does NOT appear unless the player has a key? You can set a message if the player isn't holding a key, I'm aware, but that's not quite the same thing.\r\n\r\n2. Is there a list of expressions Quest uses I can use for a reference? For example, I'd want to know somewhere I can check what the expression for checking if an object's Boolean value is off hand, instead of having to ask each time I have a question like that.\r\n\r\n3. Is there a way to have something happen as SOON as a variable hits a certain value, instead of the turn after? Like, say, if you have a countdown, is there any way to have something on the turn the countdown hits zero, and not afterwards?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey! I've been messing around with Quest, and I've been slowly figuring it out. But I have a few questions, and to be honest, I'll be likely to have a lot more as I go. Please bear with me.</p>\n<p>OK, so.</p>\n<ol>\n<li>\n<p>If you're using hyperlinks, how do you have it so certain actions DON'T show? Let's say you have a key the player needs to unlock something with. Is there a way to have it so the \"Unlock\" command does NOT appear unless the player has a key? You can set a message if the player isn't holding a key, I'm aware, but that's not quite the same thing.</p>\n</li>\n<li>\n<p>Is there a list of expressions Quest uses I can use for a reference? For example, I'd want to know somewhere I can check what the expression for checking if an object's Boolean value is off hand, instead of having to ask each time I have a question like that.</p>\n</li>\n<li>\n<p>Is there a way to have something happen as SOON as a variable hits a certain value, instead of the turn after? Like, say, if you have a countdown, is there any way to have something on the turn the countdown hits zero, and not afterwards?</p>\n</li>\n</ol>\n\n",
      "PostDate": "2018-03-20T12:16:03.5123212Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "11aaeb9e-ff34-4ca0-85ba-cba6ae805dd9",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "1. An object's `displayverbs` attribute is a string list containing the actions that will show on the menu. You can remove or add items to this list during the game; or set it's initial values on the object's \"verbs\" tab.\r\n\r\n2. Not quite sure what you mean by a list of expressions; but in most cases you'll probably want to be looking at the [list of functions](http://docs.textadventures.co.uk/quest/functions/).\r\n\r\n3. If you're checking the value of a variable each turn, then you just need to make sure that the check happens after the script that is changing the value.\r\nAlternatively, you could use a change script. For example, if you change an object's `countdown` attribute, then a script attribute (on the same object) called `changedcountdown` will be run immediately. You could create this script attribute, and have it do whatever actions are necessary. (Within the script, you can assume that the variable `oldvalue` will refer to what the previous value of the changed attribute is).",
      "EditableFormat": "markdown",
      "HTML": "<ol>\n<li>\n<p>An object's <code>displayverbs</code> attribute is a string list containing the actions that will show on the menu. You can remove or add items to this list during the game; or set it's initial values on the object's \"verbs\" tab.</p>\n</li>\n<li>\n<p>Not quite sure what you mean by a list of expressions; but in most cases you'll probably want to be looking at the <a href=\"http://docs.textadventures.co.uk/quest/functions/\">list of functions</a>.</p>\n</li>\n<li>\n<p>If you're checking the value of a variable each turn, then you just need to make sure that the check happens after the script that is changing the value.<br>\nAlternatively, you could use a change script. For example, if you change an object's <code>countdown</code> attribute, then a script attribute (on the same object) called <code>changedcountdown</code> will be run immediately. You could create this script attribute, and have it do whatever actions are necessary. (Within the script, you can assume that the variable <code>oldvalue</code> will refer to what the previous value of the changed attribute is).</p>\n</li>\n</ol>\n\n",
      "PostDate": "2018-03-20T13:55:31.3461667Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b36b684c-c742-451a-98f6-28097d18f060",
      "UserId": 350325,
      "Username": "Bobinator",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm really sorry, but would you mind going through that first point again? I tried to set up a turn script that was enabled at the start, where if the player was holding the key, a text value of \"Unlock\" would be added to door.displayverbs. Is that the best way to do it, or am I missing something?",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm really sorry, but would you mind going through that first point again? I tried to set up a turn script that was enabled at the start, where if the player was holding the key, a text value of \"Unlock\" would be added to door.displayverbs. Is that the best way to do it, or am I missing something?</p>\n\n",
      "PostDate": "2018-03-20T14:48:48.5913984Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "84f8be59-403c-44de-ab8a-738ceb8d1d48",
      "UserId": 326173,
      "Username": "Curt A. P.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/bc1d5d57408cf4d13f9d9f23c1e3dc56?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "1\\. What you need is the build-in **displayverbs** or **inventoryverbs** list.\r\n\r\nYou have the object **key** \r\nQuest automatically make the stringlist **key.displayverbs** and **key.inventoryverbs**.\r\n\r\n**key.displayverbs** \r\nThis list contains all verbs if the object **is not** in the player inventory. So it contains most likely **take**. \r\n\r\n**key.inventoryverbs**\r\nThis list contains all verbs if the object **is** in the player inventory. So it contains most likely **drop**. \r\n\r\nYou can easily remove verbs and add verbs. Remove a verb from one of these two list won't affect the verbs behaviour itself. The player still can type 'unlock' by himself and it would run the verb's or the  command's script.\r\n\r\nI just show a example for the inventory verbs. Additionally, you can remove you 'unlock' verbs from the display verbs.\r\nRemoving/adding lists items via the editor or browser:\r\n\r\nClick  add new script >>  Variables tab >> Remove a value from a list\r\n\r\nThe first text box is for the list. Type here: **key.inventoryverbs**\r\n\r\nThe next text box is for the value: **\"unlock\"**\r\n\r\nThe quotation marks are important. This let quest know the value is a string. \r\n\r\nCode examples\r\n```\r\nlist remove (key.inventoryverbs, \"unlock\")\r\n\r\nlist add (key.inventoryverbs, \"unlock\")\r\n\r\nlist remove (key.displayverbs, \"unlock\")\r\n\r\nlist add (key.displayverbs, \"unlock\")\r\n```\r\n\r\nThere's also the object's object tab. At the bottom of this tab you can add and remove the  display and inventory verbs. This good for the start, before you got the key. ",
      "EditableFormat": "markdown",
      "HTML": "<p>1. What you need is the build-in <strong>displayverbs</strong> or <strong>inventoryverbs</strong> list.</p>\n<p>You have the object <strong>key</strong><br>\nQuest automatically make the stringlist <strong>key.displayverbs</strong> and <strong>key.inventoryverbs</strong>.</p>\n<p><strong>key.displayverbs</strong><br>\nThis list contains all verbs if the object <strong>is not</strong> in the player inventory. So it contains most likely <strong>take</strong>.</p>\n<p><strong>key.inventoryverbs</strong><br>\nThis list contains all verbs if the object <strong>is</strong> in the player inventory. So it contains most likely <strong>drop</strong>.</p>\n<p>You can easily remove verbs and add verbs. Remove a verb from one of these two list won't affect the verbs behaviour itself. The player still can type 'unlock' by himself and it would run the verb's or the  command's script.</p>\n<p>I just show a example for the inventory verbs. Additionally, you can remove you 'unlock' verbs from the display verbs.<br>\nRemoving/adding lists items via the editor or browser:</p>\n<p>Click  add new script &gt;&gt;  Variables tab &gt;&gt; Remove a value from a list</p>\n<p>The first text box is for the list. Type here: <strong>key.inventoryverbs</strong></p>\n<p>The next text box is for the value: <strong>\"unlock\"</strong></p>\n<p>The quotation marks are important. This let quest know the value is a string.</p>\n<p>Code examples</p>\n<pre><code>list remove (key.inventoryverbs, \"unlock\")\n\nlist add (key.inventoryverbs, \"unlock\")\n\nlist remove (key.displayverbs, \"unlock\")\n\nlist add (key.displayverbs, \"unlock\")\n</code></pre>\n<p>There's also the object's object tab. At the bottom of this tab you can add and remove the  display and inventory verbs. This good for the start, before you got the key.</p>\n\n",
      "PostDate": "2018-03-20T16:18:14.5803497Z",
      "LastEditDate": "2018-03-21T22:13:17.7891546Z",
      "link": null
    },
    {
      "PostId": "fae2387d-caeb-45d4-880c-d050791cf04c",
      "UserId": 326173,
      "Username": "Curt A. P.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/bc1d5d57408cf4d13f9d9f23c1e3dc56?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "2\\. Sounds like you are looking for the 'If' script. There you can select 'object has flag'. **Have you played/created the tutorial game?** [Quest documentation - Tutorial](http://docs.textadventures.co.uk/quest/tutorial/)\r\n\r\nIn code:\r\n```\r\nif (GetBoolean(player, \"is_male\")) {\r\n}\r\n```\r\n\r\n3\\.  Make a turn script and then 'If' again.\r\n'If object attribute equals' \r\n\r\nThis would check every turn if the object's attribute reached a certain value.\r\n\r\nIn code:\r\n```\r\ncreate turnscript (\"TurnCheckValue\")\r\nSetTurnScript (TurnCheckValue) {\r\n  if (player.lifepoints = 0) {\r\n    PrintCentered (\"Game Over<br/><br/>You are dead\")\r\n  }\r\n}\r\n```\r\nJust a short example. Normally I ask for **= 0** and **<= 0**.\r\n\r\nI use this kind of turn script to keep things like the lifepoints under the maximum, too.  ",
      "EditableFormat": "markdown",
      "HTML": "<p>2. Sounds like you are looking for the 'If' script. There you can select 'object has flag'. <strong>Have you played/created the tutorial game?</strong> <a href=\"http://docs.textadventures.co.uk/quest/tutorial/\">Quest documentation - Tutorial</a></p>\n<p>In code:</p>\n<pre><code>if (GetBoolean(player, \"is_male\")) {\n}\n</code></pre>\n<p>3.  Make a turn script and then 'If' again.<br>\n'If object attribute equals'</p>\n<p>This would check every turn if the object's attribute reached a certain value.</p>\n<p>In code:</p>\n<pre><code>create turnscript (\"TurnCheckValue\")\nSetTurnScript (TurnCheckValue) {\n  if (player.lifepoints = 0) {\n    PrintCentered (\"Game Over&lt;br/&gt;&lt;br/&gt;You are dead\")\n  }\n}\n</code></pre>\n<p>Just a short example. Normally I ask for <strong>= 0</strong> and <strong>&lt;= 0</strong>.</p>\n<p>I use this kind of turn script to keep things like the lifepoints under the maximum, too.</p>\n\n",
      "PostDate": "2018-03-20T17:02:59.7890762Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8d29e101-0198-46d3-b2d4-fec44033361c",
      "UserId": 350325,
      "Username": "Bobinator",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OK, new problem... doing what Curt A. P. suggested, I made a turn script that checks if the player has the key every turn. Unfortunately, that has it so that every turn the player is holding the key, a new 'Unlock' option appears in the menu. I know this must be really obvious, but what can I do to fix this?",
      "EditableFormat": "markdown",
      "HTML": "<p>OK, new problem... doing what Curt A. P. suggested, I made a turn script that checks if the player has the key every turn. Unfortunately, that has it so that every turn the player is holding the key, a new 'Unlock' option appears in the menu. I know this must be really obvious, but what can I do to fix this?</p>\n\n",
      "PostDate": "2018-03-20T17:50:05.2142786Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "06539a8a-137d-4c73-9c14-03577e658c1d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I thjnk you could use:\r\n`door.displayverbs = ListCompact (door.displayverbs + \"Unlock\")`\r\n\r\nOr something lkke\r\n(typing on my phone, so may have typos due to autocorrect)\r\n```\r\nif (Has(key)) {\r\n  if (not ListContains(door.displayverbs, \"Unlock\")) {\r\n    list add (door.displayverbs, \"Unlock\")\r\n  }\r\n)\r\nelse {\r\n  if (ListContains(door.displayverbs, \"Unlock\")) {\r\n    list remove (door.displayverbs, \"Unlock\")\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I thjnk you could use:<br>\n<code>door.displayverbs = ListCompact (door.displayverbs + \"Unlock\")</code></p>\n<p>Or something lkke<br>\n(typing on my phone, so may have typos due to autocorrect)</p>\n<pre><code>if (Has(key)) {\n  if (not ListContains(door.displayverbs, \"Unlock\")) {\n    list add (door.displayverbs, \"Unlock\")\n  }\n)\nelse {\n  if (ListContains(door.displayverbs, \"Unlock\")) {\n    list remove (door.displayverbs, \"Unlock\")\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2018-03-20T18:06:11.7110653Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "382a4e41-480c-4b78-b64d-7930a885ccb3",
      "UserId": 326173,
      "Username": "Curt A. P.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/bc1d5d57408cf4d13f9d9f23c1e3dc56?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Maybe it helps if you tell what this flag is supposed to check. (?)\r\n\r\nEdit: Idiot me... \r\nOnly if you try/need to unlock something you should check for the key.\r\n\r\nYou have a key. \r\nThere is a closed door. \r\nNow, if you type 'unlock door' the first thing quest should do is checking for the key. Then you insert the scripts for what happens if you have the key and else. \r\nGo to your unlock command or to the door's/key's verb tab. Here you need to check for the flag.\r\n\r\n**Turn scripts will be executed every turn and there dozens of ways to use it but there are scripts which won't make much sense.\r\nLike moving the player to somewhere. I use a turn script to make sure my hidden inventory container is always in the same room as the player. Yesterday set a turn script for a morning > noon > evening > night day cycle.** ",
      "EditableFormat": "markdown",
      "HTML": "<p>Maybe it helps if you tell what this flag is supposed to check. (?)</p>\n<p>Edit: Idiot me...<br>\nOnly if you try/need to unlock something you should check for the key.</p>\n<p>You have a key.<br>\nThere is a closed door.<br>\nNow, if you type 'unlock door' the first thing quest should do is checking for the key. Then you insert the scripts for what happens if you have the key and else.<br>\nGo to your unlock command or to the door's/key's verb tab. Here you need to check for the flag.</p>\n<p><strong>Turn scripts will be executed every turn and there dozens of ways to use it but there are scripts which won't make much sense.<br>\nLike moving the player to somewhere. I use a turn script to make sure my hidden inventory container is always in the same room as the player. Yesterday set a turn script for a morning &gt; noon &gt; evening &gt; night day cycle.</strong></p>\n\n",
      "PostDate": "2018-03-20T18:32:37.1481781Z",
      "LastEditDate": "2018-03-20T19:04:46.9117096Z",
      "link": null
    },
    {
      "PostId": "03227761-8410-484d-9ce0-9e22a451dbcd",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "1. here's some useful resources:\r\n\r\nhttp://docs.textadventures.co.uk/quest/display_verbs.html (Pixie's guide on using, adding/removing and etc, the built-in 'displayverbs' and 'inventoryverbs' Stringlist Attributes)\r\n\r\nhttp://docs.textadventures.co.uk/quest/attributes/displayverbs.html\r\nhttp://docs.textadventures.co.uk/quest/attributes/inventoryverbs.html\r\n\r\n2. here's some useful resources:\r\n\r\nhttp://docs.textadventures.co.uk/quest/\r\n\r\nhttp://docs.textadventures.co.uk/quest/elements/ (Elements)\r\n\r\nhttp://docs.textadventures.co.uk/quest/types/ (Attribute/Value/VARIABLE/Data Types)\r\n\r\nhttp://docs.textadventures.co.uk/quest/null.html (the 'null' Data Type)\r\n\r\nhttp://docs.textadventures.co.uk/quest/elements/object.html (all/most of the 'Object' Element's built-in Attributes and etc)\r\n\r\nhttp://docs.textadventures.co.uk/quest/scripts/ (Scripts/Functions)\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/ (more Scripts/Functions, categorical order)\r\nhttp://docs.textadventures.co.uk/quest/functions/index_allfunctions.html (same as link above, but as alphabetical order)\r\n\r\n3. there's two ways of doing 'always checking' (which is what's done/needed for knowing immediately when a value changes):\r\n\r\n(1) Turnscripts/Timers\r\n\r\n(2) the 'changedNAME_OF_ATTRIBUTE' special Script Attribute for a specific Object\r\n\r\nthere's pros and cons to both of them:\r\n\r\nthe 'changed' Script Attribute runs immediately upon a value changing, but this can cause problems with the order of things happening, as you don't have control over it\r\n\r\nTurnscipts/Timers provide great control (Timers much less so, do to all of the issues with actual time and its timing), but they have a few quirks with their internal turns if you're dealing with that stuff at that level of control with turns, there's some solutions, but it can be a hassle, trying to get it right",
      "EditableFormat": "markdown",
      "HTML": "<ol>\n<li>here's some useful resources:</li>\n</ol>\n<p>http://docs.textadventures.co.uk/quest/display_verbs.html (Pixie's guide on using, adding/removing and etc, the built-in 'displayverbs' and 'inventoryverbs' Stringlist Attributes)</p>\n<p>http://docs.textadventures.co.uk/quest/attributes/displayverbs.html<br>\nhttp://docs.textadventures.co.uk/quest/attributes/inventoryverbs.html</p>\n<ol start=\"2\">\n<li>here's some useful resources:</li>\n</ol>\n<p>http://docs.textadventures.co.uk/quest/</p>\n<p>http://docs.textadventures.co.uk/quest/elements/ (Elements)</p>\n<p>http://docs.textadventures.co.uk/quest/types/ (Attribute/Value/VARIABLE/Data Types)</p>\n<p>http://docs.textadventures.co.uk/quest/null.html (the 'null' Data Type)</p>\n<p>http://docs.textadventures.co.uk/quest/elements/object.html (all/most of the 'Object' Element's built-in Attributes and etc)</p>\n<p>http://docs.textadventures.co.uk/quest/scripts/ (Scripts/Functions)</p>\n<p>http://docs.textadventures.co.uk/quest/functions/ (more Scripts/Functions, categorical order)<br>\nhttp://docs.textadventures.co.uk/quest/functions/index_allfunctions.html (same as link above, but as alphabetical order)</p>\n<ol start=\"3\">\n<li>there's two ways of doing 'always checking' (which is what's done/needed for knowing immediately when a value changes):</li>\n</ol>\n<p>(1) Turnscripts/Timers</p>\n<p>(2) the 'changedNAME_OF_ATTRIBUTE' special Script Attribute for a specific Object</p>\n<p>there's pros and cons to both of them:</p>\n<p>the 'changed' Script Attribute runs immediately upon a value changing, but this can cause problems with the order of things happening, as you don't have control over it</p>\n<p>Turnscipts/Timers provide great control (Timers much less so, do to all of the issues with actual time and its timing), but they have a few quirks with their internal turns if you're dealing with that stuff at that level of control with turns, there's some solutions, but it can be a hassle, trying to get it right</p>\n\n",
      "PostDate": "2018-03-20T22:29:45.9642098Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b15740cd-3c51-49ec-84a6-97987997a324",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ Curt A.P.\r\n\r\n\"Yesterday set a turn script for a morning > noon > evening > night day cycle (Curt A.P.)\"\r\n\r\nthis is a bit more advanced (and a new, I think) method for you:\r\n\r\nthere's the 'modulus' operator/operation: %\r\n\r\nit's division, except it gets/returns/finds the REMAINDER\r\n\r\nthis enables cyclic (and odd/even and factors/divisible-ness) applications\r\n\r\nfor examples: (see below)\r\n\r\n----------------------------\r\n\r\nCYCLIC:\r\n\r\n(you can use any number, such as '7' for days of the week: 0:sunday to 6:saturday, '4' for seasons: 0:winter to 3:autumn, '9' for decimal number system: 0 to 9 digits, etc etc etc, anything you can think of, any cyclic thing or usage you want/need/can-think-of)\r\n\r\n```\r\nmsg (\"Type in whatever integer number amount you want\")\r\nget input {\r\n  if (IsInt (result)) {\r\n\r\n    input_integer_variable = ToInt (result)\r\n\r\n    game.civilian_hour_integer_attribute = input_integer_variable % 12\r\n    game.military_hour_integer_attribute = input_integer_variable % 24\r\n\r\n    game.clock_second_or_minute_integer_attribute = input_integer_variable % 60\r\n\r\n    msg (\"Civilian Hour: \" + game.civilian_hour_integer_attribute)\r\n    msg (\"Military Hour: \" + game.military_hour_integer_attribute)\r\n\r\n    msg (\"Clock (Second or Minute): \" + game.clock_second_or_minute_integer_attribute)\r\n\r\n    // the 'civilian hour' will always be: 0 to 11\r\n   // the 'military hour' will always be: 0 to 23\r\n\r\n   // the 'clock second or minute' will always be: 0 to 59\r\n\r\n  } else {\r\n    msg (\"Wrong input, try again\")\r\n  }\r\n}\r\n```\r\n\r\n----------------------------\r\n\r\nFactors/Divisibility (and even/odd of a number):\r\n\r\n```\r\nmsg (\"Type in whatever integer number amount you want\")\r\nget input {\r\n  if (IsInt (result)) {\r\n    input_integer_variable = ToInt (result)\r\n    if (input_integer_variable % 2 = 0) {\r\n      msg (result + \" is a EVEN number, as \" + result + \" is divisible by 2 (or to say it differently: 2 is a factor of \" + result + \")\") \r\n    } else if (input_integer_variable % 2 = 1) {\r\n      msg (result + \" is a ODD number, as \" + result + \" is NOT divisible by 2 (or to say it differently: 2 is NOT a factor of \" + result + \")\") \r\n    } else if (input_integer_variable % 3 = 0) {\r\n      msg (result + \" is divisible by 3 (or to say it differently: 3 is a factor of \" + result + \")\") \r\n    } else if (input_integer_variable % 4 = 0) {\r\n      msg (result + \" is divisible by 4 (or to say it differently: 4 is a factor of \" + result + \")\") \r\n    } else if (input_integer_variable % 5 = 0) {\r\n      msg (result + \" is divisible by 5 (or to say it differently: 5 is a factor of \" + result + \")\") \r\n    }\r\n    // etc 'else ifs' of numbers (6, 7, 8, ...)\r\n  } else {\r\n    msg (\"wrong input, try again\")\r\n  }\r\n}\r\n```\r\n\r\n-----------\r\n\r\nI'll let you try to apply this stuff, such as for your 'hours of the day' (twilight, dawn/sunrise, morning, noon/mid-day, afternoon, dusk/sunset, twilight, evening, night, midnight, etc), but if you need help, let me know\r\n\r\nhere's a hint: use the 'modulus' and a stringlist (or rather, an 'if' with a range check) of the hours of a day",
      "EditableFormat": "markdown",
      "HTML": "<p>@ Curt A.P.</p>\n<p>\"Yesterday set a turn script for a morning &gt; noon &gt; evening &gt; night day cycle (Curt A.P.)\"</p>\n<p>this is a bit more advanced (and a new, I think) method for you:</p>\n<p>there's the 'modulus' operator/operation: %</p>\n<p>it's division, except it gets/returns/finds the REMAINDER</p>\n<p>this enables cyclic (and odd/even and factors/divisible-ness) applications</p>\n<p>for examples: (see below)</p>\n<hr>\n<p>CYCLIC:</p>\n<p>(you can use any number, such as '7' for days of the week: 0:sunday to 6:saturday, '4' for seasons: 0:winter to 3:autumn, '9' for decimal number system: 0 to 9 digits, etc etc etc, anything you can think of, any cyclic thing or usage you want/need/can-think-of)</p>\n<pre><code>msg (\"Type in whatever integer number amount you want\")\nget input {\n  if (IsInt (result)) {\n\n    input_integer_variable = ToInt (result)\n\n    game.civilian_hour_integer_attribute = input_integer_variable % 12\n    game.military_hour_integer_attribute = input_integer_variable % 24\n\n    game.clock_second_or_minute_integer_attribute = input_integer_variable % 60\n\n    msg (\"Civilian Hour: \" + game.civilian_hour_integer_attribute)\n    msg (\"Military Hour: \" + game.military_hour_integer_attribute)\n\n    msg (\"Clock (Second or Minute): \" + game.clock_second_or_minute_integer_attribute)\n\n    // the 'civilian hour' will always be: 0 to 11\n   // the 'military hour' will always be: 0 to 23\n\n   // the 'clock second or minute' will always be: 0 to 59\n\n  } else {\n    msg (\"Wrong input, try again\")\n  }\n}\n</code></pre>\n<hr>\n<p>Factors/Divisibility (and even/odd of a number):</p>\n<pre><code>msg (\"Type in whatever integer number amount you want\")\nget input {\n  if (IsInt (result)) {\n    input_integer_variable = ToInt (result)\n    if (input_integer_variable % 2 = 0) {\n      msg (result + \" is a EVEN number, as \" + result + \" is divisible by 2 (or to say it differently: 2 is a factor of \" + result + \")\") \n    } else if (input_integer_variable % 2 = 1) {\n      msg (result + \" is a ODD number, as \" + result + \" is NOT divisible by 2 (or to say it differently: 2 is NOT a factor of \" + result + \")\") \n    } else if (input_integer_variable % 3 = 0) {\n      msg (result + \" is divisible by 3 (or to say it differently: 3 is a factor of \" + result + \")\") \n    } else if (input_integer_variable % 4 = 0) {\n      msg (result + \" is divisible by 4 (or to say it differently: 4 is a factor of \" + result + \")\") \n    } else if (input_integer_variable % 5 = 0) {\n      msg (result + \" is divisible by 5 (or to say it differently: 5 is a factor of \" + result + \")\") \n    }\n    // etc 'else ifs' of numbers (6, 7, 8, ...)\n  } else {\n    msg (\"wrong input, try again\")\n  }\n}\n</code></pre>\n<hr>\n<p>I'll let you try to apply this stuff, such as for your 'hours of the day' (twilight, dawn/sunrise, morning, noon/mid-day, afternoon, dusk/sunset, twilight, evening, night, midnight, etc), but if you need help, let me know</p>\n<p>here's a hint: use the 'modulus' and a stringlist (or rather, an 'if' with a range check) of the hours of a day</p>\n\n",
      "PostDate": "2018-03-20T23:03:06.0920363Z",
      "LastEditDate": "2018-03-20T23:08:34.3727296Z",
      "link": null
    },
    {
      "PostId": "31f56a42-3829-4e70-b64b-f6d01ee64edb",
      "UserId": 326173,
      "Username": "Curt A. P.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/bc1d5d57408cf4d13f9d9f23c1e3dc56?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@hegemonkhan\r\n\r\nOh- Thank you, \r\nthis is what I'm looking for. If it's what I think I can see a way to a game based on a full clock. Last time I dropped the 24 h clock inc. seconds indicator because applying scripts to certain times was a pain of work. I already finished a working clock with day counter and waiting command where the player could type a integer and the time unit to wait. I haven't touched weekdays and months because my method efforts too much work.\r\nI had many calculations like this to handle the different time units:\r\n```\r\n[•••]\r\n        if (player.waiting_integer <= 60) {\r\n          player.waiting_integer = world_time.clock_minutes + player.waiting_integer - 60\r\n          world_time.clock_minutes = 0\r\n          world_time.clock_minutes = world_time.clock_minutes + player.waiting_integer\r\n          if (world_time.clock_hours = 59) {\r\n            world_time.clock_days = world_time.clock_days + 1\r\n          }\r\n          world_time.clock_hours = world_time.clock_hours + 1\r\n        }\r\n      }\r\n      else {\r\n        SetObjectFlagOn (world_time, \"wait_check_1\")\r\n      }\r\n      if (player.waiting_integer >= 60) {\r\n        msg (\"<br/>You can only wait 60 minutes. Please type hours for longer waiting sessions.<br/>\")\r\n      }\r\n[•••]\r\n```\r\n\r\n\r\nWith this Cyclic function I can already smell how good it would work. \r\n\r\n@hegemonkhan \r\nBtw: Yesterday I've read your guide about lists. It was very useful and I do understand lists, especially object lists, much better now. \r\n[List and Dictionary Extensive Guide (by HK)](http://textadventures.co.uk/forum/samples/topic/5137/list-and-dictionary-extensive-guide-by-hk)\r\n\r\nEdit:\r\n@hegemonkhan\r\nOh, and  finally I do understand the 'For' function xD",
      "EditableFormat": "markdown",
      "HTML": "<p>@hegemonkhan</p>\n<p>Oh- Thank you,<br>\nthis is what I'm looking for. If it's what I think I can see a way to a game based on a full clock. Last time I dropped the 24 h clock inc. seconds indicator because applying scripts to certain times was a pain of work. I already finished a working clock with day counter and waiting command where the player could type a integer and the time unit to wait. I haven't touched weekdays and months because my method efforts too much work.<br>\nI had many calculations like this to handle the different time units:</p>\n<pre><code>[•••]\n        if (player.waiting_integer &lt;= 60) {\n          player.waiting_integer = world_time.clock_minutes + player.waiting_integer - 60\n          world_time.clock_minutes = 0\n          world_time.clock_minutes = world_time.clock_minutes + player.waiting_integer\n          if (world_time.clock_hours = 59) {\n            world_time.clock_days = world_time.clock_days + 1\n          }\n          world_time.clock_hours = world_time.clock_hours + 1\n        }\n      }\n      else {\n        SetObjectFlagOn (world_time, \"wait_check_1\")\n      }\n      if (player.waiting_integer &gt;= 60) {\n        msg (\"&lt;br/&gt;You can only wait 60 minutes. Please type hours for longer waiting sessions.&lt;br/&gt;\")\n      }\n[•••]\n</code></pre>\n<p>With this Cyclic function I can already smell how good it would work.</p>\n<p>@hegemonkhan<br>\nBtw: Yesterday I've read your guide about lists. It was very useful and I do understand lists, especially object lists, much better now.<br>\n<a href=\"http://textadventures.co.uk/forum/samples/topic/5137/list-and-dictionary-extensive-guide-by-hk\">List and Dictionary Extensive Guide (by HK)</a></p>\n<p>Edit:<br>\n@hegemonkhan<br>\nOh, and  finally I do understand the 'For' function xD</p>\n\n",
      "PostDate": "2018-03-21T00:10:59.327312Z",
      "LastEditDate": "2018-03-21T00:24:12.354233Z",
      "link": null
    },
    {
      "PostId": "57a6af1c-82ce-43dc-bcf8-937dc35a0539",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "if you want a creative/unique/novel (but complicated: used change scripts to do the carrying/adjusting of the digits: 9 to 0, increase the higher-next digit by 1, etc etc etc) way of doing a 'countdown' timer (this was before I learned of the modulus operation myself, lol):\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/4162/countdown-timer-code\r\n\r\nit was fun creating it and then seeing it work, lol\r\n\r\n-----------\r\n\r\ntime and date stuff is really complicated stuff... you probably just want to use Pixie's stuff, unless you're really smart, good with math, and good at programming, as time and date stuff is really complex (well, if you try to do non-simple advanced/extensive time and date stuff/mechanics/features in your game, especially, lol)",
      "EditableFormat": "markdown",
      "HTML": "<p>if you want a creative/unique/novel (but complicated: used change scripts to do the carrying/adjusting of the digits: 9 to 0, increase the higher-next digit by 1, etc etc etc) way of doing a 'countdown' timer (this was before I learned of the modulus operation myself, lol):</p>\n<p>http://textadventures.co.uk/forum/samples/topic/4162/countdown-timer-code</p>\n<p>it was fun creating it and then seeing it work, lol</p>\n<hr>\n<p>time and date stuff is really complicated stuff... you probably just want to use Pixie's stuff, unless you're really smart, good with math, and good at programming, as time and date stuff is really complex (well, if you try to do non-simple advanced/extensive time and date stuff/mechanics/features in your game, especially, lol)</p>\n\n",
      "PostDate": "2018-03-21T00:31:49.337731Z",
      "LastEditDate": "2018-03-21T00:34:05.9977158Z",
      "link": null
    },
    {
      "PostId": "139e8b8e-54a8-45f4-97c2-6ba4716e8b01",
      "UserId": 326173,
      "Username": "Curt A. P.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/bc1d5d57408cf4d13f9d9f23c1e3dc56?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">time and date stuff is really complicated stuff... you probably just want to use Pixie's stuff, unless you're really smart, good with math, and good at programming, as time and date stuff is really complex (well, if you try to do non-simple advanced/extensive time and date stuff/mechanics/features in your game, especially, lol) \r\n\r\nYes, realized it by myself and dropped it completely. Later I decided to make simple day and night system. The possible times was only day and night. Also counting the days. So it wasn't much of a effort to make it morning, afternoon, evening and night (+ counting days). Just thinking of it, I believe it's best to keep it like this until I am more experienced with programming. \r\n\r\nLol, Math was always one of favourite school themes. I did not like English in school, so this is (only) a bit problematic with Quest. The last six years I've learned English on my own via gaming, TV shows/movies, talking with English speaking persons (No grammar lessons or anything, sigh). I keep running into Functions which I don't understand as English word first. ",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>time and date stuff is really complicated stuff... you probably just want to use Pixie's stuff, unless you're really smart, good with math, and good at programming, as time and date stuff is really complex (well, if you try to do non-simple advanced/extensive time and date stuff/mechanics/features in your game, especially, lol)</p>\n</blockquote>\n<p>Yes, realized it by myself and dropped it completely. Later I decided to make simple day and night system. The possible times was only day and night. Also counting the days. So it wasn't much of a effort to make it morning, afternoon, evening and night (+ counting days). Just thinking of it, I believe it's best to keep it like this until I am more experienced with programming.</p>\n<p>Lol, Math was always one of favourite school themes. I did not like English in school, so this is (only) a bit problematic with Quest. The last six years I've learned English on my own via gaming, TV shows/movies, talking with English speaking persons (No grammar lessons or anything, sigh). I keep running into Functions which I don't understand as English word first.</p>\n\n",
      "PostDate": "2018-03-21T00:58:28.1364836Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
