{
  "Topic": {
    "TopicId": "ntah-093ekkcyiswpys_aw",
    "ForumId": "10",
    "Title": "User selects multiple from a list",
    "LastUpdated": "2018-11-06T15:16:26.4517433Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "270f9bb7-37c6-4830-aefe-20495972d298",
      "UserId": 384420,
      "Username": "nishma18",
      "AvatarUrl": "https://secure.gravatar.com/avatar/ebb5a1df255cd18ea8a90ee40a03c771?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm trying to create a game where the player can select multiple classes each year to add to their course load. Is that possible in Quest? Is there any way to list out a bunch of courses and have the player select multiple and then add them to a course list?",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm trying to create a game where the player can select multiple classes each year to add to their course load. Is that possible in Quest? Is there any way to list out a bunch of courses and have the player select multiple and then add them to a course list?</p>\n\n",
      "PostDate": "2018-11-06T15:16:26.4517433Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "42a8313e-0b6b-4225-a99d-3d4f02f60f0a",
      "UserId": 383686,
      "Username": "myarichuk",
      "AvatarUrl": "https://i.imgur.com/B2r7Dfxb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I am new to Quest myself so I can think of one way of doing it. (probably there is more than of one way to achieve this)\r\nSince the objects are persistant, you could create something like \"GameState\" object with two lists. \r\nOne list would hold the possible courses that can be selected and the second would be empty.\r\nOnce the player selects courses, the selected ones could be added to the second list.\r\n\r\nSo, conceptually you would have the following structure :\r\n\r\n**>>GameObject**\r\n* AvailableCoursesList (StringList)\r\n* SelectedCoursesList (StringList)\r\n\r\nAny changes made to lists in **GameObject** by scripts would be stored when a game is saved.",
      "EditableFormat": "markdown",
      "HTML": "<p>I am new to Quest myself so I can think of one way of doing it. (probably there is more than of one way to achieve this)<br>\nSince the objects are persistant, you could create something like \"GameState\" object with two lists.<br>\nOne list would hold the possible courses that can be selected and the second would be empty.<br>\nOnce the player selects courses, the selected ones could be added to the second list.</p>\n<p>So, conceptually you would have the following structure :</p>\n<p><strong>&gt;&gt;GameObject</strong></p>\n<ul>\n<li>AvailableCoursesList (StringList)</li>\n<li>SelectedCoursesList (StringList)</li>\n</ul>\n<p>Any changes made to lists in <strong>GameObject</strong> by scripts would be stored when a game is saved.</p>\n\n",
      "PostDate": "2018-11-06T16:54:09.7344205Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f0968a0a-7de2-4243-9aaa-1e499a130cc4",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Would feel slightly clunky from the player's perspective, with the menu collapsing after each addition (and presumably a \"done\" option appearing as the last option in the menu).\r\n\r\nI'd be tempted to display a list with a bunch of javascript to enable selecting choices. You could make a \"done\" button which makes a stringlist of selected courses and submits it to a Quest function.",
      "EditableFormat": "markdown",
      "HTML": "<p>Would feel slightly clunky from the player's perspective, with the menu collapsing after each addition (and presumably a \"done\" option appearing as the last option in the menu).</p>\n<p>I'd be tempted to display a list with a bunch of javascript to enable selecting choices. You could make a \"done\" button which makes a stringlist of selected courses and submits it to a Quest function.</p>\n\n",
      "PostDate": "2018-11-06T19:21:48.9082138Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b9386ad7-93cb-4ed6-ba3a-028ee1eb22e7",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Would feel slightly clunky from the player's perspective, with the menu collapsing after each addition (and presumably a \"done\" option appearing as the last option in the menu).\r\n\r\nI'd be tempted to display a list with a bunch of javascript to enable selecting choices. You could make a \"done\" button which makes a stringlist of selected courses and submits it to a Quest function.",
      "EditableFormat": "markdown",
      "HTML": "<p>Would feel slightly clunky from the player's perspective, with the menu collapsing after each addition (and presumably a \"done\" option appearing as the last option in the menu).</p>\n<p>I'd be tempted to display a list with a bunch of javascript to enable selecting choices. You could make a \"done\" button which makes a stringlist of selected courses and submits it to a Quest function.</p>\n\n",
      "PostDate": "2018-11-06T19:22:09.2461229Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "846dabcf-d392-489a-9981-f762abd8f573",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is this for a school? I don't follow.\r\n\r\nWhy not create multiple games? Why not erase code and start the game all over again?",
      "EditableFormat": "markdown",
      "HTML": "<p>Is this for a school? I don't follow.</p>\n<p>Why not create multiple games? Why not erase code and start the game all over again?</p>\n\n",
      "PostDate": "2018-11-07T07:51:15.7779479Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
