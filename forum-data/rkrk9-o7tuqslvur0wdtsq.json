{
  "Topic": {
    "TopicId": "rkrk9-o7tuqslvur0wdtsq",
    "ForumId": "10",
    "Title": "Idea for a future release of Quest",
    "LastUpdated": "2018-05-07T11:32:52.9492648Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "cd39d301-7eeb-49b2-a095-1c3f5ddfba5f",
      "UserId": 344046,
      "Username": "baskham",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7689475b10ef3f61ec180330cc180daa?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello all.\r\n\r\nWhen I create a Quest adventure my workflow is like this:\r\n- First i create all the rooms.\r\nI give them names, but do only the very basic configurations.\r\n- Then I create all the exits connecting everything and effectually create the world.\r\n- Then I go back and start completing the rooms one at a time adding descriptions, aliases, objects inside the room etc.\r\n- Finally I put the NPC's in their right places.\r\n\r\nThis approach works very well for me (I was inspired by a thread inhere somewhere, thank you)\r\n\r\nBut if the world is big it can be a little overwhelming to keep track of which rooms are completed (or maybe semi-completed) and which have not been toughed yet.\r\n\r\nSo.\r\nIt would be great for me if it was possible to for example rightclick on a room in the left pane, and assign a colour to it.\r\nOr something like that.\r\nThat way it would be easier to keep track.\r\n\r\nAnd come to think of it, the same goes for any other object.\r\nI actually put objects in the rooms fairly early and then return to complete them.\r\n\r\nJust a though :-)\r\n\r\nBest regards\r\nBenny\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello all.</p>\n<p>When I create a Quest adventure my workflow is like this:</p>\n<ul>\n<li>First i create all the rooms.<br>\nI give them names, but do only the very basic configurations.</li>\n<li>Then I create all the exits connecting everything and effectually create the world.</li>\n<li>Then I go back and start completing the rooms one at a time adding descriptions, aliases, objects inside the room etc.</li>\n<li>Finally I put the NPC's in their right places.</li>\n</ul>\n<p>This approach works very well for me (I was inspired by a thread inhere somewhere, thank you)</p>\n<p>But if the world is big it can be a little overwhelming to keep track of which rooms are completed (or maybe semi-completed) and which have not been toughed yet.</p>\n<p>So.<br>\nIt would be great for me if it was possible to for example rightclick on a room in the left pane, and assign a colour to it.<br>\nOr something like that.<br>\nThat way it would be easier to keep track.</p>\n<p>And come to think of it, the same goes for any other object.<br>\nI actually put objects in the rooms fairly early and then return to complete them.</p>\n<p>Just a though :-)</p>\n<p>Best regards<br>\nBenny</p>\n\n",
      "PostDate": "2018-05-07T11:32:52.9492648Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "157645f2-ea08-4cc4-9bf0-e7865836bb68",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "while not quite the same as what you want...\r\n\r\nyou can use Objects like a 'folder', for your own internal (specifically using/within the GUI/Editor, though also via directly in-code too, it can be useful as well) organization (these Objects are NOT interactable within your game world by the person playing the game, they can't be visited by the person playing the game):\r\n\r\n```\r\n<object name=\"room_objects_folder\">\r\n\r\n  <object name=\"completed_room_objects_folder\">\r\n\r\n    <object name=\"room_99\">\r\n    </object>\r\n\r\n    <object name=\"room_98\">\r\n    </object>\r\n\r\n  </object>\r\n\r\n  <object name=\"incomplete_room_object_folder\">\r\n\r\n    <object name=\"room_1\">\r\n    </object>\r\n\r\n    <object name=\"room_2\">\r\n    </object>\r\n\r\n  </object>\r\n\r\n</object>\r\n\r\n<object name=\"npc_objects_folder\">\r\n\r\n  <object name=\"completed_npc_objects_folder\">\r\n\r\n    <object name=\"npc_1\">\r\n      <attr name=\"parent\" type=\"object\">room_1</attr>\r\n    </object>\r\n\r\n    <object name=\"npc_2\">\r\n      <attr name=\"parent\" type=\"object\">room_2</attr>\r\n    </object>\r\n\r\n  </object>\r\n\r\n  <object name=\"incomplete_npc_objects_folder\">\r\n\r\n    <object name=\"npc_99\">\r\n      <attr name=\"parent\" type=\"object\">room_99</attr>\r\n    </object>\r\n\r\n    <object name=\"npc_98\">\r\n      <attr name=\"parent\" type=\"object\">room_98</attr>\r\n    </object>\r\n\r\n  </object>\r\n\r\n</object>\r\n```\r\n\r\n----------\r\n\r\nand... there's also the comment lines/blocks too:\r\n\r\n```\r\nwithin scripting (within a scripting container) only:\r\n\r\n<object name=\"example_object\">\r\n  <attr name=\"example_script_attribute\" type=\"Script\">\r\n    // your comments (comment line)\r\n    msg (\"blah\")\r\n  </attr>\r\n</object>\r\n\r\n<function name=\"example_function\">\r\n  // your comments (comment line)\r\n  msg (\"blah\")\r\n</function>\r\n\r\netc scripting containers (within Command's 'script' Attribute, Turnscript's 'script' Attribute, etc etc etc)\r\n\r\n--------\r\n\r\nI think... this can go anywhere... but not sure....\r\n\r\na comment line:\r\n\r\n<!-- your comments -->\r\n\r\nor, a comment block:\r\n\r\n<!--\r\nyour comments\r\n-->\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>while not quite the same as what you want...</p>\n<p>you can use Objects like a 'folder', for your own internal (specifically using/within the GUI/Editor, though also via directly in-code too, it can be useful as well) organization (these Objects are NOT interactable within your game world by the person playing the game, they can't be visited by the person playing the game):</p>\n<pre><code>&lt;object name=\"room_objects_folder\"&gt;\n\n  &lt;object name=\"completed_room_objects_folder\"&gt;\n\n    &lt;object name=\"room_99\"&gt;\n    &lt;/object&gt;\n\n    &lt;object name=\"room_98\"&gt;\n    &lt;/object&gt;\n\n  &lt;/object&gt;\n\n  &lt;object name=\"incomplete_room_object_folder\"&gt;\n\n    &lt;object name=\"room_1\"&gt;\n    &lt;/object&gt;\n\n    &lt;object name=\"room_2\"&gt;\n    &lt;/object&gt;\n\n  &lt;/object&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"npc_objects_folder\"&gt;\n\n  &lt;object name=\"completed_npc_objects_folder\"&gt;\n\n    &lt;object name=\"npc_1\"&gt;\n      &lt;attr name=\"parent\" type=\"object\"&gt;room_1&lt;/attr&gt;\n    &lt;/object&gt;\n\n    &lt;object name=\"npc_2\"&gt;\n      &lt;attr name=\"parent\" type=\"object\"&gt;room_2&lt;/attr&gt;\n    &lt;/object&gt;\n\n  &lt;/object&gt;\n\n  &lt;object name=\"incomplete_npc_objects_folder\"&gt;\n\n    &lt;object name=\"npc_99\"&gt;\n      &lt;attr name=\"parent\" type=\"object\"&gt;room_99&lt;/attr&gt;\n    &lt;/object&gt;\n\n    &lt;object name=\"npc_98\"&gt;\n      &lt;attr name=\"parent\" type=\"object\"&gt;room_98&lt;/attr&gt;\n    &lt;/object&gt;\n\n  &lt;/object&gt;\n\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p>and... there's also the comment lines/blocks too:</p>\n<pre><code>within scripting (within a scripting container) only:\n\n&lt;object name=\"example_object\"&gt;\n  &lt;attr name=\"example_script_attribute\" type=\"Script\"&gt;\n    // your comments (comment line)\n    msg (\"blah\")\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;function name=\"example_function\"&gt;\n  // your comments (comment line)\n  msg (\"blah\")\n&lt;/function&gt;\n\netc scripting containers (within Command's 'script' Attribute, Turnscript's 'script' Attribute, etc etc etc)\n\n--------\n\nI think... this can go anywhere... but not sure....\n\na comment line:\n\n&lt;!-- your comments --&gt;\n\nor, a comment block:\n\n&lt;!--\nyour comments\n--&gt;\n</code></pre>\n\n",
      "PostDate": "2018-05-07T15:05:16.8728481Z",
      "LastEditDate": "2018-05-07T15:18:03.7392347Z",
      "link": null
    },
    {
      "PostId": "9dfa273c-deeb-41c9-a807-702f39dae45e",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you can also create a library and just use it manually (copy and paste the code from library into your game file as needed) (NOT as an actual library that is added to your game):\r\n\r\nexample_library_file.aslx\r\n\r\n\r\n(the below is just a brief/quick example, to give you an idea of how you can use it for your own organization/reference/usage... my library is much more expansive... lol)\r\n\r\n```\r\n<library>\r\n\r\n  <!--\r\n  Functions\r\n  -->\r\n\r\n  <function name=\"example_function\">\r\n  </function>\r\n\r\n  <!--\r\n  Commands\r\n  -->\r\n\r\n  <command name=\"example_command\">\r\n  </command>\r\n\r\n  <!--\r\n  Verbs\r\n  -->\r\n\r\n  <verb>\r\n    <property>XXX</property>\r\n    <pattern>XXX</pattern>\r\n  </verb>\r\n\r\n  <!--\r\n  Libraries\r\n  -->\r\n\r\n  <include ref=\"magic_library_file.aslx\" />\r\n\r\n  <!--\r\n  Templates\r\n  -->\r\n\r\n  (I don't know templates that well, hadn't learned how to use them yet, and nor how to write their syntax yet)\r\n\r\n  <!--\r\n  Delegates\r\n  -->\r\n\r\n  <delegate name=\"example_delegate\" />\r\n\r\n  <!--\r\n  Attributes\r\n  -->\r\n\r\n  <!--\r\n  Integer Attributes\r\n  -->\r\n\r\n  <attr name=\"strength\" type=\"int\">0</attr>\r\n  <attr name=\"endurance\" type=\"int\">0</attr>\r\n\r\n  <!--\r\n  Boolean Attributes\r\n  -->\r\n\r\n  <attr name=\"dead\" type=\"boolean\">false</attr>\r\n\r\n  <!--\r\n  Objects\r\n  -->\r\n\r\n  <!--\r\n  Player Objects\r\n  -->\r\n\r\n  <object name=\"player\">\r\n  </object>\r\n\r\n  <!--\r\n  Room Objects\r\n  -->\r\n\r\n  <object name=\"room\">\r\n  </object>\r\n\r\n  <!--\r\n  NPC Objects\r\n  -->\r\n\r\n  <object name=\"npc_1\">\r\n  </object>\r\n\r\n  <!--\r\n  Mechanics/Formulas/Equations/Expressions/etc\r\n  -->\r\n\r\n  // player.base_damage = player.weapon.damage + player.weapon.damage * player.strength / 100\r\n\r\n  // damage = (attacker base damage * critical_function) - defender base armor rating\r\n\r\n  <function name=\"leveling_function\">\r\n    <![CDATA[\r\n      if (player.experience >= player.level * 100 + 100) {\r\n        player.experience = player.experience - (player.level * 100 + 100)\r\n        player.level = player.level + 1\r\n        leveling_function\r\n      }\r\n    ]]>\r\n  </function>\r\n\r\n  // damage_modifier_integer_attribute = critical_function (player.luck)\r\n\r\n  <function name=\"critical_function\" parameters=\"luck_integer_attribute_parameter\" type=\"int\">\r\n    if (RandomChance (luck_integer_attribute_parameter)) {\r\n      return (2)\r\n    } else {\r\n      return (1)\r\n    }\r\n  </function>\r\n\r\n  <!--\r\n  NOTES:\r\n\r\n  // blah notes\r\n  -->\r\n\r\n  <!--\r\n  To Do List:\r\n  \r\n  // blah to do list\r\n  -->\r\n\r\n</library>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>you can also create a library and just use it manually (copy and paste the code from library into your game file as needed) (NOT as an actual library that is added to your game):</p>\n<p>example_library_file.aslx</p>\n<p>(the below is just a brief/quick example, to give you an idea of how you can use it for your own organization/reference/usage... my library is much more expansive... lol)</p>\n<pre><code>&lt;library&gt;\n\n  &lt;!--\n  Functions\n  --&gt;\n\n  &lt;function name=\"example_function\"&gt;\n  &lt;/function&gt;\n\n  &lt;!--\n  Commands\n  --&gt;\n\n  &lt;command name=\"example_command\"&gt;\n  &lt;/command&gt;\n\n  &lt;!--\n  Verbs\n  --&gt;\n\n  &lt;verb&gt;\n    &lt;property&gt;XXX&lt;/property&gt;\n    &lt;pattern&gt;XXX&lt;/pattern&gt;\n  &lt;/verb&gt;\n\n  &lt;!--\n  Libraries\n  --&gt;\n\n  &lt;include ref=\"magic_library_file.aslx\" /&gt;\n\n  &lt;!--\n  Templates\n  --&gt;\n\n  (I don't know templates that well, hadn't learned how to use them yet, and nor how to write their syntax yet)\n\n  &lt;!--\n  Delegates\n  --&gt;\n\n  &lt;delegate name=\"example_delegate\" /&gt;\n\n  &lt;!--\n  Attributes\n  --&gt;\n\n  &lt;!--\n  Integer Attributes\n  --&gt;\n\n  &lt;attr name=\"strength\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"endurance\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;!--\n  Boolean Attributes\n  --&gt;\n\n  &lt;attr name=\"dead\" type=\"boolean\"&gt;false&lt;/attr&gt;\n\n  &lt;!--\n  Objects\n  --&gt;\n\n  &lt;!--\n  Player Objects\n  --&gt;\n\n  &lt;object name=\"player\"&gt;\n  &lt;/object&gt;\n\n  &lt;!--\n  Room Objects\n  --&gt;\n\n  &lt;object name=\"room\"&gt;\n  &lt;/object&gt;\n\n  &lt;!--\n  NPC Objects\n  --&gt;\n\n  &lt;object name=\"npc_1\"&gt;\n  &lt;/object&gt;\n\n  &lt;!--\n  Mechanics/Formulas/Equations/Expressions/etc\n  --&gt;\n\n  // player.base_damage = player.weapon.damage + player.weapon.damage * player.strength / 100\n\n  // damage = (attacker base damage * critical_function) - defender base armor rating\n\n  &lt;function name=\"leveling_function\"&gt;\n    &lt;![CDATA[\n      if (player.experience &gt;= player.level * 100 + 100) {\n        player.experience = player.experience - (player.level * 100 + 100)\n        player.level = player.level + 1\n        leveling_function\n      }\n    ]]&gt;\n  &lt;/function&gt;\n\n  // damage_modifier_integer_attribute = critical_function (player.luck)\n\n  &lt;function name=\"critical_function\" parameters=\"luck_integer_attribute_parameter\" type=\"int\"&gt;\n    if (RandomChance (luck_integer_attribute_parameter)) {\n      return (2)\n    } else {\n      return (1)\n    }\n  &lt;/function&gt;\n\n  &lt;!--\n  NOTES:\n\n  // blah notes\n  --&gt;\n\n  &lt;!--\n  To Do List:\n  \n  // blah to do list\n  --&gt;\n\n&lt;/library&gt;\n</code></pre>\n\n",
      "PostDate": "2018-05-07T15:32:38.126255Z",
      "LastEditDate": "2018-05-07T15:45:32.2443624Z",
      "link": null
    },
    {
      "PostId": "e4d044d9-0ee8-4b02-b49b-f8eaa1b8d626",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I like the folder idea... \r\nV1)  folders to separate the rooms\r\nrooms not finished..\r\nRooms finished\r\nV2) group like rooms together...\r\nWorld map\r\nHouse 1\r\nHouse 2\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I like the folder idea...<br>\nV1)  folders to separate the rooms<br>\nrooms not finished..<br>\nRooms finished<br>\nV2) group like rooms together...<br>\nWorld map<br>\nHouse 1<br>\nHouse 2</p>\n\n",
      "PostDate": "2018-05-07T20:12:30.0681103Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0c69d04c-dd8e-4301-a616-79907eb92b1b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The problem with using objects as folders is if you already use them for some in-game purpose. Like an NPC who wanders around rooms within his house, or similar.",
      "EditableFormat": "markdown",
      "HTML": "<p>The problem with using objects as folders is if you already use them for some in-game purpose. Like an NPC who wanders around rooms within his house, or similar.</p>\n\n",
      "PostDate": "2018-05-07T23:58:14.0123337Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4c33dd30-e639-4785-a588-0c49727aad43",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you can always have a higher (or highest/root) Object be the 'folder' Object(s), containing your 'group' Object(s) (which contain your individual Objects that can be visited/interacted with by the person playing your game) for your in-game functionalities (such as your random npc movement for a house, if I'm guessing right at what you were referencing in your example in your post, or whatever the in-game usage of your 'group' Object might be used for doing)\r\n\r\nthe nesting/layering can be as deep/high as you want in general (there might be a limit at some point, lol)\r\n\r\nexample:\r\n\r\nthe in-game 'city' Objects (Sacramento) would be the visitable/interactable individual Objects by the person playing the game\r\n\r\nyou have one code functionality upon the 'california' 'group' Object, moving an 'npc' Object random amongst the 'city' individual Objects (I only have Sacramento in my example though) in the 'California' 'group' Object\r\n\r\nat some layer of Objects, there's NO (or no/less significant game-playing) code functionality, and thus these Objects with no (or no/less significant game-playing) code functionality, would be your internal organization 'folder' Objects, unlike your 'group' Objects with code functionality (or significant or more significant code functionality) (but are otherwise non-visitable/non-interactable by the person playing your game), and unlike the individual Objects that the person playing the game actually can visit/interact with\r\n\r\nexistence\r\n-> multiverse 1\r\n->-> universe 1\r\n->->->galaxy cluster 1\r\n->->->-> Milky Way spiral galaxy\r\n->->->->-> \"The Sun\" (a star near the end of one of the milky way galaxy's tendrils)\r\n->->->->->-> Earth planet\r\n->->->->->->-> North America continent\r\n->->->->->->->-> United States of America country\r\n->->->->->->->->-> California state\r\n->->->->->->->->->-> Sacramento capitol city\r\n->->->->->->->-> Canada country\r\n->->->->->->-> Asia continent\r\n->->->->->->->-> China country\r\n->->->->->-> Mars planet\r\n->->->-> Andromeda spiral galaxy\r\n->->-> galaxy cluster 2\r\n->-> universe 2\r\n-> multiverse 2\r\nnon-existence/ \"the void\"",
      "EditableFormat": "markdown",
      "HTML": "<p>you can always have a higher (or highest/root) Object be the 'folder' Object(s), containing your 'group' Object(s) (which contain your individual Objects that can be visited/interacted with by the person playing your game) for your in-game functionalities (such as your random npc movement for a house, if I'm guessing right at what you were referencing in your example in your post, or whatever the in-game usage of your 'group' Object might be used for doing)</p>\n<p>the nesting/layering can be as deep/high as you want in general (there might be a limit at some point, lol)</p>\n<p>example:</p>\n<p>the in-game 'city' Objects (Sacramento) would be the visitable/interactable individual Objects by the person playing the game</p>\n<p>you have one code functionality upon the 'california' 'group' Object, moving an 'npc' Object random amongst the 'city' individual Objects (I only have Sacramento in my example though) in the 'California' 'group' Object</p>\n<p>at some layer of Objects, there's NO (or no/less significant game-playing) code functionality, and thus these Objects with no (or no/less significant game-playing) code functionality, would be your internal organization 'folder' Objects, unlike your 'group' Objects with code functionality (or significant or more significant code functionality) (but are otherwise non-visitable/non-interactable by the person playing your game), and unlike the individual Objects that the person playing the game actually can visit/interact with</p>\n<p>existence<br>\n-&gt; multiverse 1<br>\n-&gt;-&gt; universe 1<br>\n-&gt;-&gt;-&gt;galaxy cluster 1<br>\n-&gt;-&gt;-&gt;-&gt; Milky Way spiral galaxy<br>\n-&gt;-&gt;-&gt;-&gt;-&gt; \"The Sun\" (a star near the end of one of the milky way galaxy's tendrils)<br>\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Earth planet<br>\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; North America continent<br>\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; United States of America country<br>\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; California state<br>\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Sacramento capitol city<br>\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Canada country<br>\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Asia continent<br>\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; China country<br>\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Mars planet<br>\n-&gt;-&gt;-&gt;-&gt; Andromeda spiral galaxy<br>\n-&gt;-&gt;-&gt; galaxy cluster 2<br>\n-&gt;-&gt; universe 2<br>\n-&gt; multiverse 2<br>\nnon-existence/ \"the void\"</p>\n\n",
      "PostDate": "2018-05-08T03:49:24.7141873Z",
      "LastEditDate": "2018-05-08T04:27:30.5982208Z",
      "link": null
    },
    {
      "PostId": "41a277cb-7372-4c66-9942-5475d9a4b921",
      "UserId": 344046,
      "Username": "baskham",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7689475b10ef3f61ec180330cc180daa?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I like the idea of moving romms into folders.\r\nI allready something similar to hegemonkhans last suggestion.\r\n\r\nThe problem with that for my current purpose is, that if I have for example Sacramento and San Fransisco.\r\nThen I want those to be in California.\r\nBut If I have only finished the descriptions of Sacramento I want San Fransisco to be in an \"incompleted items\" folder.\r\nAnd it can't be in both folders at the same time.\r\n\r\nBut as I tend to finish the California level before I move on to different states, I can keep California in the \"incompleted items\" folder.\r\nSo it does give me some help.\r\n\r\nI would still love to do the color coding though.\r\nOr the ability to let an object be in two folders at once for organisational purposes.\r\n\r\nOr HEY!\r\nMaybe also for plot purposes.\r\nMaybe some quantum mechanics fun :-D",
      "EditableFormat": "markdown",
      "HTML": "<p>I like the idea of moving romms into folders.<br>\nI allready something similar to hegemonkhans last suggestion.</p>\n<p>The problem with that for my current purpose is, that if I have for example Sacramento and San Fransisco.<br>\nThen I want those to be in California.<br>\nBut If I have only finished the descriptions of Sacramento I want San Fransisco to be in an \"incompleted items\" folder.<br>\nAnd it can't be in both folders at the same time.</p>\n<p>But as I tend to finish the California level before I move on to different states, I can keep California in the \"incompleted items\" folder.<br>\nSo it does give me some help.</p>\n<p>I would still love to do the color coding though.<br>\nOr the ability to let an object be in two folders at once for organisational purposes.</p>\n<p>Or HEY!<br>\nMaybe also for plot purposes.<br>\nMaybe some quantum mechanics fun :-D</p>\n\n",
      "PostDate": "2018-05-08T07:30:38.5083093Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d7c7582a-1c96-43c7-b723-278b5e34c68f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "no, it can't be in two 'folder' Objects (as then you've got two of the same Objects, which can't be done, everything must be unique via its 'name' as its 'ID' String Attribute), though you could have a cloned Object be in the other folder Object, but containment is actually controlled by the built-in 'parent' Object Attribute... so, using the same example:\r\n\r\nso, if you forget where an Object goes, you can just look at its 'parent' Object Attribute, and technically, you don't even have to move (cut and paste) it over to the 'california' Object, as that's what the 'parent' Object Attribute already does, though yes you would move (cut and paste) it over, as for your own continued work on your game and its organization for yourself, of course.\r\n\r\n(when you nest Objects within the code, it knows the Object's parent is the Object you nested it within, and thus it doesn't show the 'parent' Object Attribute, but it's there (created), as it's the 'parent' Object Attribute, which actually controls the containment/parent-child/location structure/heirarchy of your Objects)\r\n\r\n```\r\n<object name=\"completed\">\r\n  <object name=\"california\">\r\n    <object name=\"sacramento\">\r\n    </object>\r\n  </object>\r\n</object>\r\n\r\n<object name=\"incompleted\">\r\n  <object name=\"san_francisco\">\r\n    <attr name=\"parent\" type=\"object\">california</attr>\r\n  </object>\r\n</object>\r\n```\r\n\r\n----------\r\n\r\nand of course... once you're done with 'san_francisco' Object, you'd move (cut and paste) it over to within your 'california' Object\r\n\r\n----------------\r\n\r\nif the above wasn't clear... hopefully this will make it clear:\r\n\r\nThis:\r\n\r\n```\r\n<object name=\"room\">\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n</object>\r\n```\r\n\r\nis functionally (code/game running-wise) the exact same as:\r\n\r\n```\r\n<object name=\"room\">\r\n  <object name=\"player\">\r\n  </object>\r\n</object>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>no, it can't be in two 'folder' Objects (as then you've got two of the same Objects, which can't be done, everything must be unique via its 'name' as its 'ID' String Attribute), though you could have a cloned Object be in the other folder Object, but containment is actually controlled by the built-in 'parent' Object Attribute... so, using the same example:</p>\n<p>so, if you forget where an Object goes, you can just look at its 'parent' Object Attribute, and technically, you don't even have to move (cut and paste) it over to the 'california' Object, as that's what the 'parent' Object Attribute already does, though yes you would move (cut and paste) it over, as for your own continued work on your game and its organization for yourself, of course.</p>\n<p>(when you nest Objects within the code, it knows the Object's parent is the Object you nested it within, and thus it doesn't show the 'parent' Object Attribute, but it's there (created), as it's the 'parent' Object Attribute, which actually controls the containment/parent-child/location structure/heirarchy of your Objects)</p>\n<pre><code>&lt;object name=\"completed\"&gt;\n  &lt;object name=\"california\"&gt;\n    &lt;object name=\"sacramento\"&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/object&gt;\n\n&lt;object name=\"incompleted\"&gt;\n  &lt;object name=\"san_francisco\"&gt;\n    &lt;attr name=\"parent\" type=\"object\"&gt;california&lt;/attr&gt;\n  &lt;/object&gt;\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p>and of course... once you're done with 'san_francisco' Object, you'd move (cut and paste) it over to within your 'california' Object</p>\n<hr>\n<p>if the above wasn't clear... hopefully this will make it clear:</p>\n<p>This:</p>\n<pre><code>&lt;object name=\"room\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n<p>is functionally (code/game running-wise) the exact same as:</p>\n<pre><code>&lt;object name=\"room\"&gt;\n  &lt;object name=\"player\"&gt;\n  &lt;/object&gt;\n&lt;/object&gt;\n</code></pre>\n\n",
      "PostDate": "2018-05-08T12:03:06.3489326Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "53deee14-507b-4b37-91a4-94284e452519",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@HK\r\n\r\nThanks for the info.  Does it mean that a player (at level 0) inside a room (at level 1) can interact with objects at the player's and rooms' levels (levels 0 and 1), but not at the house level (level 2)?\r\n\r\nI also remember that a player at level 0 can, of course, interact with other objects at level 0, but not with objects nested within those level 0 objects (at level -1, assuming the level 0 object is not a container).\r\n\r\nAs an aside, I like your comprehensive \"model of everything\" analogy -- didn't realize that there might be multiple multiverses (j/k)",
      "EditableFormat": "markdown",
      "HTML": "<p>@HK</p>\n<p>Thanks for the info.  Does it mean that a player (at level 0) inside a room (at level 1) can interact with objects at the player's and rooms' levels (levels 0 and 1), but not at the house level (level 2)?</p>\n<p>I also remember that a player at level 0 can, of course, interact with other objects at level 0, but not with objects nested within those level 0 objects (at level -1, assuming the level 0 object is not a container).</p>\n<p>As an aside, I like your comprehensive \"model of everything\" analogy -- didn't realize that there might be multiple multiverses (j/k)</p>\n\n",
      "PostDate": "2018-05-08T12:44:45.1695451Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d4e7c04c-3754-4515-9fd2-788e756fc3bc",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Thanks for the info. Does it mean that a player (at level 0) inside a room (at level 1) can interact with objects at the player's and rooms' levels (levels 0 and 1), but not at the house level (level 2)?\r\n\r\nNot quite; a player can only reach objects with the same parent as them (so at the same level), and the children of any reachable objects that are containers. In order to move from one room to another, the player is interacting with an exit at the same level as them, not the room itself.\r\n\r\nOf course, you can write a script that does things with the room; but then a script can do anything at any level. Things like the \"look\" command show a description of an object (the room) which the player can't actually reach as far as Quest is concerned.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Thanks for the info. Does it mean that a player (at level 0) inside a room (at level 1) can interact with objects at the player's and rooms' levels (levels 0 and 1), but not at the house level (level 2)?</p>\n</blockquote>\n<p>Not quite; a player can only reach objects with the same parent as them (so at the same level), and the children of any reachable objects that are containers. In order to move from one room to another, the player is interacting with an exit at the same level as them, not the room itself.</p>\n<p>Of course, you can write a script that does things with the room; but then a script can do anything at any level. Things like the \"look\" command show a description of an object (the room) which the player can't actually reach as far as Quest is concerned.</p>\n\n",
      "PostDate": "2018-05-08T13:18:45.0032477Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "996b5d84-f2ff-41ac-be87-719a7cf57b2e",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "think of it this way:\r\n\r\nyou're in a box, so you know you're in a box, and you know of other things that are in the box with you, and also if one of those other things in the box with you, is also a (smaller) box, you can open up that (smaller) box and know of the things inside of it (and on and on), as well\r\n\r\nbut, you can't know of anything outside of that box, you can't know of another box (or whatever thing) next to your box, and you can't know that the box you're in, is actually within another (bigger) box.\r\n\r\ndoes this make sense?\r\n\r\n------\r\n\r\nnow, during game play, you can traverse the Objects via:\r\n\r\n(1) normally using the 'Exits' you added/coded into your game\r\nand/or\r\n(2) using scripting via changing the value of the 'parent' Object Attribute (or the 'MoveObject' helper Function, which is just doing the changing of the value of the 'parent' Object Attribute for you)\r\n\r\nalso, coding/scripting wise, you can have interaction/functionality with any Object(s) and any other object(s) of course\r\n\r\n---------\r\n\r\nbut outside-of (withOUT any) scripting/coding... the 'box world' analogy at the top of my post applies, that's how containment/parent-child structure/heirarchy works in programming (and in real life, as shown by my 'box world' analogy)\r\n\r\n(or if you want a different analogy: an ant doesn't know it's in ant farm container, with you looking at it, nor would humans know of higher planes and their inhabitants/\"gods\" if you want a religious/spiritual/fantasy analogy, or some scientific theories, that we humans and our world is also just an \"ant farm container\" with some higher being looking at us or we're a computer simulation/game and of course we're not aware of it, thinking we're real and in the real world, when we're just a computer simulation/game, the two dimensional doesn't know of the 3 dimensional, the 3 dimensional doesn't know of the 4 dimensional, etc etc etc)",
      "EditableFormat": "markdown",
      "HTML": "<p>think of it this way:</p>\n<p>you're in a box, so you know you're in a box, and you know of other things that are in the box with you, and also if one of those other things in the box with you, is also a (smaller) box, you can open up that (smaller) box and know of the things inside of it (and on and on), as well</p>\n<p>but, you can't know of anything outside of that box, you can't know of another box (or whatever thing) next to your box, and you can't know that the box you're in, is actually within another (bigger) box.</p>\n<p>does this make sense?</p>\n<hr>\n<p>now, during game play, you can traverse the Objects via:</p>\n<p>(1) normally using the 'Exits' you added/coded into your game<br>\nand/or<br>\n(2) using scripting via changing the value of the 'parent' Object Attribute (or the 'MoveObject' helper Function, which is just doing the changing of the value of the 'parent' Object Attribute for you)</p>\n<p>also, coding/scripting wise, you can have interaction/functionality with any Object(s) and any other object(s) of course</p>\n<hr>\n<p>but outside-of (withOUT any) scripting/coding... the 'box world' analogy at the top of my post applies, that's how containment/parent-child structure/heirarchy works in programming (and in real life, as shown by my 'box world' analogy)</p>\n<p>(or if you want a different analogy: an ant doesn't know it's in ant farm container, with you looking at it, nor would humans know of higher planes and their inhabitants/\"gods\" if you want a religious/spiritual/fantasy analogy, or some scientific theories, that we humans and our world is also just an \"ant farm container\" with some higher being looking at us or we're a computer simulation/game and of course we're not aware of it, thinking we're real and in the real world, when we're just a computer simulation/game, the two dimensional doesn't know of the 3 dimensional, the 3 dimensional doesn't know of the 4 dimensional, etc etc etc)</p>\n\n",
      "PostDate": "2018-05-08T16:29:28.2150568Z",
      "LastEditDate": "2018-05-08T16:45:56.224765Z",
      "link": null
    },
    {
      "PostId": "b01a1a38-909c-472e-a588-696423402611",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "here's another explanation:\r\n\r\nHK\r\n-> pants\r\n->-> wallet\r\n->>-> dollar\r\n\r\nHK is the root/main/\"top\" parent of pants, wallet, and dollar\r\nHK is the direct parent of pants\r\nHK is the indirect parent of wallet and dollar\r\n\r\npants is the direct child of HK\r\npants is the direct parent of wallet\r\npants is the indirect parent of dollar\r\n\r\nwallet is the indirect child of HK\r\nwallet is the direct child of pants\r\nwallet is the direct parent of dollar\r\n\r\ndollar is the indirect child of HK and pants\r\ndollar is the direct child of wallet\r\n\r\n--------\r\n\r\nnow, let's manipulate it:\r\n\r\ndollar.parent = null (technically/underneath its the 'asl' GAME OBJECT, the ROOT OBJECT containing your entire game: your game's contents/code)\r\n\r\nwallet.parent = dollar\r\n\r\npants.parent = wallet\r\n\r\nHK.parent = pants\r\n\r\ncreating this new containment/parent-child structure/heirarchy:\r\n\r\ndollar\r\n-> wallet\r\n->-> pants\r\n->->-> HK\r\n\r\n-----\r\n\r\nlet's manipulate it (continuing-on-with/using the new structure/heirarchy) again....\r\n\r\nHK.parent = wallet\r\n\r\ncreating this new containment/parent-child structure/heirarchy:\r\n\r\ndollar\r\n-> wallet\r\n->-> pants\r\n->-> HK\r\n\r\n---------------------\r\n\r\nlet's manipulate it (continuing-on-with/using the new structure/heirarchy) again....\r\n\r\ndollar.parent = pants\r\nwallet.parent = null\r\n\r\ncreating this new containment/parent-child structure/heirarchy:\r\n\r\nwallet\r\n-> pants\r\n->-> dollar\r\n-> HK\r\n\r\n----------------\r\n\r\nI think you get the idea now...",
      "EditableFormat": "markdown",
      "HTML": "<p>here's another explanation:</p>\n<p>HK<br>\n-&gt; pants<br>\n-&gt;-&gt; wallet<br>\n-&gt;&gt;-&gt; dollar</p>\n<p>HK is the root/main/\"top\" parent of pants, wallet, and dollar<br>\nHK is the direct parent of pants<br>\nHK is the indirect parent of wallet and dollar</p>\n<p>pants is the direct child of HK<br>\npants is the direct parent of wallet<br>\npants is the indirect parent of dollar</p>\n<p>wallet is the indirect child of HK<br>\nwallet is the direct child of pants<br>\nwallet is the direct parent of dollar</p>\n<p>dollar is the indirect child of HK and pants<br>\ndollar is the direct child of wallet</p>\n<hr>\n<p>now, let's manipulate it:</p>\n<p>dollar.parent = null (technically/underneath its the 'asl' GAME OBJECT, the ROOT OBJECT containing your entire game: your game's contents/code)</p>\n<p>wallet.parent = dollar</p>\n<p>pants.parent = wallet</p>\n<p>HK.parent = pants</p>\n<p>creating this new containment/parent-child structure/heirarchy:</p>\n<p>dollar<br>\n-&gt; wallet<br>\n-&gt;-&gt; pants<br>\n-&gt;-&gt;-&gt; HK</p>\n<hr>\n<p>let's manipulate it (continuing-on-with/using the new structure/heirarchy) again....</p>\n<p>HK.parent = wallet</p>\n<p>creating this new containment/parent-child structure/heirarchy:</p>\n<p>dollar<br>\n-&gt; wallet<br>\n-&gt;-&gt; pants<br>\n-&gt;-&gt; HK</p>\n<hr>\n<p>let's manipulate it (continuing-on-with/using the new structure/heirarchy) again....</p>\n<p>dollar.parent = pants<br>\nwallet.parent = null</p>\n<p>creating this new containment/parent-child structure/heirarchy:</p>\n<p>wallet<br>\n-&gt; pants<br>\n-&gt;-&gt; dollar<br>\n-&gt; HK</p>\n<hr>\n<p>I think you get the idea now...</p>\n\n",
      "PostDate": "2018-05-08T16:41:11.4606141Z",
      "LastEditDate": "2018-05-08T16:41:51.4912312Z",
      "link": null
    },
    {
      "PostId": "740d4ed9-1b2b-4f17-aba4-f41d4f7ad703",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "this is also how the internet works (same \"tree\" heirarchy/structure as described in my previous post):\r\n\r\nhttps://docs.oracle.com/cd/E19683-01/817-4843/dnsintro-70/index.html\r\n\r\n(and recursion is used to traverse/check to get to your desired destination and back to your computer)\r\n\r\nquick search for it... and it does show/explain it... might not be the best resource, but it works... lol\r\n\r\n-----------\r\n\r\nthe \"tree\" diagram shows the structure/heirarchy much better:\r\n\r\nhttps://en.wikipedia.org/wiki/Tree_(data_structure)\r\n\r\n(see the little picture on the right side)\r\n\r\nanother link of some tree structures:\r\n\r\nhttps://en.wikipedia.org/wiki/Tree_structure",
      "EditableFormat": "markdown",
      "HTML": "<p>this is also how the internet works (same \"tree\" heirarchy/structure as described in my previous post):</p>\n<p>https://docs.oracle.com/cd/E19683-01/817-4843/dnsintro-70/index.html</p>\n<p>(and recursion is used to traverse/check to get to your desired destination and back to your computer)</p>\n<p>quick search for it... and it does show/explain it... might not be the best resource, but it works... lol</p>\n<hr>\n<p>the \"tree\" diagram shows the structure/heirarchy much better:</p>\n<p>https://en.wikipedia.org/wiki/Tree_(data_structure)</p>\n<p>(see the little picture on the right side)</p>\n<p>another link of some tree structures:</p>\n<p>https://en.wikipedia.org/wiki/Tree_structure</p>\n\n",
      "PostDate": "2018-05-08T16:55:34.6142526Z",
      "LastEditDate": "2018-05-08T16:59:25.6582287Z",
      "link": null
    },
    {
      "PostId": "f1d9864d-19bc-4452-822a-502c74ed0bdd",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok, thanks guys",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok, thanks guys</p>\n\n",
      "PostDate": "2018-05-08T18:22:15.9305398Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1df960ad-79b5-4ac8-a3a4-c4b667385d47",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "One way to do that would be to turn annotations on on the _Features_ tab of the game object, then on the _Notes_ tab, list everything outstanding, under the heading \"TODO\". In the start script of the game, check for any object that has a TODO list:\r\n```\r\nforeach (o, AllObjects()) {\r\n  if (Instr(o.implementation_notes, \"TODO\") > 0) {\r\n    msg (\"TODO: \" + o.name)\r\n  }\r\n}\r\n```\r\nEvery time you play your game you will get a list of rooms that have work outstanding.",
      "EditableFormat": "markdown",
      "HTML": "<p>One way to do that would be to turn annotations on on the <em>Features</em> tab of the game object, then on the <em>Notes</em> tab, list everything outstanding, under the heading \"TODO\". In the start script of the game, check for any object that has a TODO list:</p>\n<pre><code>foreach (o, AllObjects()) {\n  if (Instr(o.implementation_notes, \"TODO\") &gt; 0) {\n    msg (\"TODO: \" + o.name)\n  }\n}\n</code></pre>\n<p>Every time you play your game you will get a list of rooms that have work outstanding.</p>\n\n",
      "PostDate": "2018-05-09T09:59:15.6349601Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e0a3b3e6-2e48-4a5c-856b-901f39ff7f17",
      "UserId": 348994,
      "Username": "CheeseMyBaby",
      "AvatarUrl": "https://i.imgur.com/c5nBbAgb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Every time you play your game you will get a list of rooms that have work outstanding.\r\n\r\nThat's really handy! Thanks man!\r\n\r\n\r\n\r\nOn another note: I second the use of colours on rooms/objects. Would really make things easier!\r\n\r\nOn a third note: One thing (pretty much the only thing to be honest) I've really missed is the possibility to right click on a room (in dev mode, desktop) and choosing \"move player here\". to move the player object into the room you just rightclicked.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Every time you play your game you will get a list of rooms that have work outstanding.</p>\n</blockquote>\n<p>That's really handy! Thanks man!</p>\n<p>On another note: I second the use of colours on rooms/objects. Would really make things easier!</p>\n<p>On a third note: One thing (pretty much the only thing to be honest) I've really missed is the possibility to right click on a room (in dev mode, desktop) and choosing \"move player here\". to move the player object into the room you just rightclicked.</p>\n\n",
      "PostDate": "2018-05-10T16:05:23.5182652Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
