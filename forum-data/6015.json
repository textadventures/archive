{
  "Topic": {
    "TopicId": "6015",
    "ForumId": "18",
    "Title": "Extending the text processor",
    "LastUpdated": "2016-03-03T12:20:07+00:00",
    "ReplyCount": 1
  },
  "Posts": [
    {
      "PostId": "41575",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "This code gives a couple of extra options to the text processor. \n\nUse &quot;either&quot; instead of &quot;if&quot; when you also have text for when the condition is false. Here is an example. If game.weather is over 5 the player is told it is sunny, otherwise she is told it is cloudy.\n\nYou look up at the sky. It is {either game.weather &gt; 5:sunny:cloudy}.\n\nUse &quot;eval&quot; to display the result of a Quest expression. This could be the return value of a function, a calculation, etc.\n\nYou look up at the sky. {eval:WeatherDescription()}\nYour health is {eval:GetHealth()}.\nYour progress is {eval:100 * GetScore() / 312}%.\nHi, {eval:CapFirst(\\&quot;mary\\&quot;)}\n\nThe expression must return a value, you will get an error otherwise. If the expression has double quotes, you will need to escape them, as shown in the last example.\n\nThe code itself consists of three functions, the first replacing the original (with six new lines as indicated), and two new functions. You can paste the whole lot into a library file or the game file.\n[code:31288l5e]  &lt;function name=&quot;ProcessTextCommand&quot; parameters=&quot;section, data&quot; type=&quot;string&quot;&gt;\n    if (StartsWith(section, &quot;if &quot;)) {\n      return (ProcessTextCommand_If(section, data))\n    }\n    // Next six lines added by The Pixie\n    else if (StartsWith(section, &quot;either &quot;)) {\n      return (ProcessTextCommand_Either(section, data))\n    }\n    else if (StartsWith(section, &quot;eval&#58;&quot;)) {\n      return (ProcessTextCommand_Eval(section, data))\n    }\n    else if (StartsWith(section, &quot;object&#58;&quot;)) {\n      return (ProcessTextCommand_Object(section, data))\n    }\n    else if (StartsWith(section, &quot;command&#58;&quot;)) {\n      return (ProcessTextCommand_Command(Mid(section, 9), data))\n    }\n    else if (StartsWith(section, &quot;page&#58;&quot;)) {\n      return (ProcessTextCommand_Command(Mid(section, 6), data))\n    }\n    else if (StartsWith(section, &quot;exit&#58;&quot;)) {\n      return (ProcessTextCommand_Exit(section, data))\n    }\n    else if (StartsWith(section, &quot;once&#58;&quot;)) {\n      return (ProcessTextCommand_Once(section, data))\n    }\n    else if (StartsWith(section, &quot;random&#58;&quot;)) {\n      return (ProcessTextCommand_Random(section, data))\n    }\n    else if (StartsWith(section, &quot;rndalt&#58;&quot;)) {\n      return (ProcessTextCommand_RandomAlias(section, data))\n    }\n    else if (StartsWith(section, &quot;img&#58;&quot;)) {\n      return (ProcessTextCommand_Img(section, data))\n    }\n    else if (StartsWith(section, &quot;counter&#58;&quot;)) {\n      return (ProcessTextCommand_Counter(Mid(section, 9), data))\n    }\n    else if (StartsWith(section, &quot;select&#58;&quot;)) {\n      return (ProcessTextCommand_Select(section, data))\n    }\n    else {\n      dot = Instr(section, &quot;&#46;&quot;)\n      if (dot = 0) {\n        return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)\n      }\n      else {\n        objectname = Left(section, dot - 1)\n        attributename = Mid(section, dot + 1)\n        object = GetObject(objectname)\n        if (object = null) {\n          return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)\n        }\n        else {\n          if (HasAttribute(object, attributename)) {\n            type = TypeOf(object, attributename)\n            switch (type) {\n              case (&quot;string&quot;, &quot;int&quot;, &quot;double&quot;) {\n                return (ToString(GetAttribute(object, attributename)))\n              }\n              case (&quot;boolean&quot;) {\n                result = GetAttribute(object, attributename)\n                if (result) {\n                  return (&quot;true&quot;)\n                }\n                else {\n                  return (&quot;false&quot;)\n                }\n              }\n              default {\n                return (&quot;(&quot; + type + &quot;)&quot;)\n              }\n            }\n          }\n          else {\n            return (&quot;&quot;)\n          }\n        }\n      }\n    }\n  &lt;/function&gt;\n  \n  &lt;function name=&quot;ProcessTextCommand_Either&quot; parameters=&quot;section, data&quot; type=&quot;string&quot;&gt;&lt;!&#91;CDATA&#91;\n    command = Mid(section, 8)\n    colon = Instr(command, &quot;&#58;&quot;)\n    colon2 = Instr(colon + 1, command, &quot;&#58;&quot;)\n    if (colon = 0 or colon2 = 0) {\n      return (&quot;{either &quot; + command + &quot;}&quot;)\n    }\n    else {\n      text = Mid(command, colon + 1, colon2 - colon - 1)\n      text2 = Mid(command, colon2 + 1)\n      condition = Left(command, colon - 1)\n      result = Eval(condition)\n      if (result) {\n        return (ProcessTextSection(text, data))\n      }\n      else {\n        return (ProcessTextSection(text2, data))\n      }\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n  \n  \n  &lt;function name=&quot;ProcessTextCommand_Eval&quot; parameters=&quot;section, data&quot; type=&quot;string&quot;&gt;&lt;!&#91;CDATA&#91;\n    exp = Mid(section, 6)\n    return(&quot;&quot; + Eval(exp))\n  &#93;&#93;&gt;&lt;/function&gt;[/code:31288l5e]",
      "EditableFormat": "bbcode",
      "HTML": "This code gives a couple of extra options to the text processor. <br/><br/>Use &quot;either&quot; instead of &quot;if&quot; when you also have text for when the condition is false. Here is an example. If game.weather is over 5 the player is told it is sunny, otherwise she is told it is cloudy.<br/><br/>You look up at the sky. It is {either game.weather &gt; 5:sunny:cloudy}.<br/><br/>Use &quot;eval&quot; to display the result of a Quest expression. This could be the return value of a function, a calculation, etc.<br/><br/>You look up at the sky. {eval:WeatherDescription()}<br/>Your health is {eval:GetHealth()}.<br/>Your progress is {eval:100 * GetScore() / 312}%.<br/>Hi, {eval:CapFirst(\\&quot;mary\\&quot;)}<br/><br/>The expression must return a value, you will get an error otherwise. If the expression has double quotes, you will need to escape them, as shown in the last example.<br/><br/>The code itself consists of three functions, the first replacing the original (with six new lines as indicated), and two new functions. You can paste the whole lot into a library file or the game file.<br/><pre><code>  &lt;function name=&quot;ProcessTextCommand&quot; parameters=&quot;section, data&quot; type=&quot;string&quot;&gt;<br/>    if (StartsWith(section, &quot;if &quot;)) {<br/>      return (ProcessTextCommand_If(section, data))<br/>    }<br/>    // Next six lines added by The Pixie<br/>    else if (StartsWith(section, &quot;either &quot;)) {<br/>      return (ProcessTextCommand_Either(section, data))<br/>    }<br/>    else if (StartsWith(section, &quot;eval&#58;&quot;)) {<br/>      return (ProcessTextCommand_Eval(section, data))<br/>    }<br/>    else if (StartsWith(section, &quot;object&#58;&quot;)) {<br/>      return (ProcessTextCommand_Object(section, data))<br/>    }<br/>    else if (StartsWith(section, &quot;command&#58;&quot;)) {<br/>      return (ProcessTextCommand_Command(Mid(section, 9), data))<br/>    }<br/>    else if (StartsWith(section, &quot;page&#58;&quot;)) {<br/>      return (ProcessTextCommand_Command(Mid(section, 6), data))<br/>    }<br/>    else if (StartsWith(section, &quot;exit&#58;&quot;)) {<br/>      return (ProcessTextCommand_Exit(section, data))<br/>    }<br/>    else if (StartsWith(section, &quot;once&#58;&quot;)) {<br/>      return (ProcessTextCommand_Once(section, data))<br/>    }<br/>    else if (StartsWith(section, &quot;random&#58;&quot;)) {<br/>      return (ProcessTextCommand_Random(section, data))<br/>    }<br/>    else if (StartsWith(section, &quot;rndalt&#58;&quot;)) {<br/>      return (ProcessTextCommand_RandomAlias(section, data))<br/>    }<br/>    else if (StartsWith(section, &quot;img&#58;&quot;)) {<br/>      return (ProcessTextCommand_Img(section, data))<br/>    }<br/>    else if (StartsWith(section, &quot;counter&#58;&quot;)) {<br/>      return (ProcessTextCommand_Counter(Mid(section, 9), data))<br/>    }<br/>    else if (StartsWith(section, &quot;select&#58;&quot;)) {<br/>      return (ProcessTextCommand_Select(section, data))<br/>    }<br/>    else {<br/>      dot = Instr(section, &quot;&#46;&quot;)<br/>      if (dot = 0) {<br/>        return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)<br/>      }<br/>      else {<br/>        objectname = Left(section, dot - 1)<br/>        attributename = Mid(section, dot + 1)<br/>        object = GetObject(objectname)<br/>        if (object = null) {<br/>          return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)<br/>        }<br/>        else {<br/>          if (HasAttribute(object, attributename)) {<br/>            type = TypeOf(object, attributename)<br/>            switch (type) {<br/>              case (&quot;string&quot;, &quot;int&quot;, &quot;double&quot;) {<br/>                return (ToString(GetAttribute(object, attributename)))<br/>              }<br/>              case (&quot;boolean&quot;) {<br/>                result = GetAttribute(object, attributename)<br/>                if (result) {<br/>                  return (&quot;true&quot;)<br/>                }<br/>                else {<br/>                  return (&quot;false&quot;)<br/>                }<br/>              }<br/>              default {<br/>                return (&quot;(&quot; + type + &quot;)&quot;)<br/>              }<br/>            }<br/>          }<br/>          else {<br/>            return (&quot;&quot;)<br/>          }<br/>        }<br/>      }<br/>    }<br/>  &lt;/function&gt;<br/>  <br/>  &lt;function name=&quot;ProcessTextCommand_Either&quot; parameters=&quot;section, data&quot; type=&quot;string&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    command = Mid(section, 8)<br/>    colon = Instr(command, &quot;&#58;&quot;)<br/>    colon2 = Instr(colon + 1, command, &quot;&#58;&quot;)<br/>    if (colon = 0 or colon2 = 0) {<br/>      return (&quot;{either &quot; + command + &quot;}&quot;)<br/>    }<br/>    else {<br/>      text = Mid(command, colon + 1, colon2 - colon - 1)<br/>      text2 = Mid(command, colon2 + 1)<br/>      condition = Left(command, colon - 1)<br/>      result = Eval(condition)<br/>      if (result) {<br/>        return (ProcessTextSection(text, data))<br/>      }<br/>      else {<br/>        return (ProcessTextSection(text2, data))<br/>      }<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/>  <br/>  <br/>  &lt;function name=&quot;ProcessTextCommand_Eval&quot; parameters=&quot;section, data&quot; type=&quot;string&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    exp = Mid(section, 6)<br/>    return(&quot;&quot; + Eval(exp))<br/>  &#93;&#93;&gt;&lt;/function&gt;</code></pre>",
      "PostDate": "2016-03-03T09:46:00+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "41576",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Very nice!",
      "EditableFormat": "bbcode",
      "HTML": "Very nice!",
      "PostDate": "2016-03-03T12:20:07+00:00",
      "LastEditDate": null
    }
  ]
}
