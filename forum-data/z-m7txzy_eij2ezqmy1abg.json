{
  "Topic": {
    "TopicId": "z-m7txzy_eij2ezqmy1abg",
    "ForumId": "10",
    "Title": "Accumulated removed clones",
    "LastUpdated": "2021-02-21T23:29:22.5183476Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "b93180db-27f4-4b91-bf57-cce4205bc8c5",
      "UserId": 327530,
      "Username": "D4r4dragon",
      "AvatarUrl": "https://i.imgur.com/wvI4YAtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've been working on a combat system that makes enemies as it needs, then removes them. But the engine still keeps them. Is there a way to remove these clones from the stored objects so it doesn't end up with Enemy2985553?",
      "EditableFormat": "markdown",
      "HTML": "<p>I've been working on a combat system that makes enemies as it needs, then removes them. But the engine still keeps them. Is there a way to remove these clones from the stored objects so it doesn't end up with Enemy2985553?</p>\n\n",
      "PostDate": "2021-02-21T23:29:22.5183476Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3e2700cb-6fd9-49a4-a5ea-0a338823773a",
      "UserId": 521812,
      "Username": "GW Grue",
      "AvatarUrl": "https://i.imgur.com/yhbswwKb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\nWhat code are you using to remove the clones?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p>What code are you using to remove the clones?</p>\n\n",
      "PostDate": "2021-02-22T00:28:35.9031357Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2b1913b0-b974-4d3e-ba1e-93150b7d8eeb",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```DeleteObject (this)```",
      "EditableFormat": "markdown",
      "HTML": "<p><code>DeleteObject (this)</code></p>\n\n",
      "PostDate": "2021-02-22T02:33:15.291921Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4d87360e-92cd-4b81-9cb9-0f8759aae767",
      "UserId": 327530,
      "Username": "D4r4dragon",
      "AvatarUrl": "https://i.imgur.com/wvI4YAtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh, there is a ```DeleteObject``` function,  cool. That should be part of the script items menu rather then the remove one.",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh, there is a <code>DeleteObject</code> function,  cool. That should be part of the script items menu rather then the remove one.</p>\n\n",
      "PostDate": "2021-02-22T05:33:31.6561997Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c784162c-9bf3-475e-baf4-f532b0b65ea5",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't think there is a `DeleteObject`, it doesn't appear in my copy of the core libraries.\r\n\r\nThe usual way to delete objects is:\r\n```\r\ndestroy (\"monster25\")\r\n```\r\nNote that like its counterpart `create`, the parameter here is a string containing the *name* of the object to destroy. Which means that if you're working with clones, you would most likely be doing:\r\n```\r\ndestroy (this.name)\r\n```\r\n\r\nYou also need to be careful with other variables. When you destroy an object, any attributes and variables which point to it become `null`, and it is removed from any objectlists that contain it. This wouldn't be a problem in most cases; but if you're using parallel lists or similar (generally bad practice, but a lot of people do) this can lead to some very confusing bugs. Also, the `foreach` statement will cause an error if you modify the list it is looping over. So you can't destroy an object inside a foreach loop whose list initially contains the object.\r\n\r\nSo some people might write code like this:\r\n```\r\nforeach (monster, SomeFunctionThatReturnsAListOfMonsters()) {\r\n  ApplyStatusEffects (monster)\r\n  if (monster.hp > 0) {\r\n    TakeMonsterTurn (monster)\r\n  }\r\n  else {\r\n    // if it's been poisoned or something\r\n    destroy (monster.name)\r\n  }\r\n}\r\n```\r\nThat breaks because the 'destroy' modifies the internal list that is being used by the foreach loop, causing it to end immediately. It would also cause an error if the `ApplyStatusEffects` function destroyed the monster,\r\n\r\nTo make that work, you'd have to do something like:\r\n```\r\nmonsters_to_destroy = NewStringList()\r\nforeach (monster, SomeFunctionThatReturnsAListOfMonsters()) {\r\n  ApplyStatusEffects (monster)\r\n  if (monster.hp > 0) {\r\n    TakeMonsterTurn (monster)\r\n  }\r\n  else {\r\n    list add (monsters_to_destroy, monster.name)\r\n  }\r\n}\r\nforeach (name, monsters_to_destroy) {\r\n  destroy (name)\r\n}\r\n```\r\n(which works because in the second loop the list contains the *name* of the monster, rather than the monster itself)\r\n\r\nHope that all makes sense :)",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't think there is a <code>DeleteObject</code>, it doesn't appear in my copy of the core libraries.</p>\n<p>The usual way to delete objects is:</p>\n<pre><code>destroy (\"monster25\")\n</code></pre>\n<p>Note that like its counterpart <code>create</code>, the parameter here is a string containing the <em>name</em> of the object to destroy. Which means that if you're working with clones, you would most likely be doing:</p>\n<pre><code>destroy (this.name)\n</code></pre>\n<p>You also need to be careful with other variables. When you destroy an object, any attributes and variables which point to it become <code>null</code>, and it is removed from any objectlists that contain it. This wouldn't be a problem in most cases; but if you're using parallel lists or similar (generally bad practice, but a lot of people do) this can lead to some very confusing bugs. Also, the <code>foreach</code> statement will cause an error if you modify the list it is looping over. So you can't destroy an object inside a foreach loop whose list initially contains the object.</p>\n<p>So some people might write code like this:</p>\n<pre><code>foreach (monster, SomeFunctionThatReturnsAListOfMonsters()) {\n  ApplyStatusEffects (monster)\n  if (monster.hp &gt; 0) {\n    TakeMonsterTurn (monster)\n  }\n  else {\n    // if it's been poisoned or something\n    destroy (monster.name)\n  }\n}\n</code></pre>\n<p>That breaks because the 'destroy' modifies the internal list that is being used by the foreach loop, causing it to end immediately. It would also cause an error if the <code>ApplyStatusEffects</code> function destroyed the monster,</p>\n<p>To make that work, you'd have to do something like:</p>\n<pre><code>monsters_to_destroy = NewStringList()\nforeach (monster, SomeFunctionThatReturnsAListOfMonsters()) {\n  ApplyStatusEffects (monster)\n  if (monster.hp &gt; 0) {\n    TakeMonsterTurn (monster)\n  }\n  else {\n    list add (monsters_to_destroy, monster.name)\n  }\n}\nforeach (name, monsters_to_destroy) {\n  destroy (name)\n}\n</code></pre>\n<p>(which works because in the second loop the list contains the <em>name</em> of the monster, rather than the monster itself)</p>\n<p>Hope that all makes sense :)</p>\n\n",
      "PostDate": "2021-02-22T10:44:42.6497433Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9e0fa974-16f6-4f1b-a86b-7bdcdb77cb25",
      "UserId": 327530,
      "Username": "D4r4dragon",
      "AvatarUrl": "https://i.imgur.com/wvI4YAtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You were right about DeleteObject, it was ```destroy```, but as of your script examples, I don't know what they are doing. Mine is\r\n```\r\n<function name=\"Enemy combat\"><![CDATA[\r\nEnemies = Listcount (GetDirectChildren(Arena))\r\nmsg (\"There are \" + Enemies + \" enemies to fight.\")\r\nForeach (Enemy, GetDirectChildren(Arena)) {\r\n   msg (\"It is \" Enemy.name + \"'s turn.\")\r\n   do (Enemy,  \"CombatPref\")\r\n}\r\nEnemies = Listcount (GetDirectChildren(Arena))\r\nif (Enemies = 0) {\r\n   msg (\"Enemy combat complete.\")\r\n   wait {\r\n      PlayerCombat\r\n   }\r\n}\r\n]]></function>\r\n```\r\nAnd the ```do (Enemy,  \"CombatPref\")```\r\n```\r\n<CombatPref type=\"script\"><![CDATA[\r\n   action = GetRandomInt(1,10)\r\n   if (action > 1) {\r\n      msg (\"Enemy attacks.\")\r\n   }\r\n   else {\r\n      msg (\"Enemy flees.\")\r\n      destroy (this.name)\r\n   }\r\n]]></CombatPref>\r\n```\r\n\r\n\r\nIt's not quite a combat system yet... But it functions fine.",
      "EditableFormat": "markdown",
      "HTML": "<p>You were right about DeleteObject, it was <code>destroy</code>, but as of your script examples, I don't know what they are doing. Mine is</p>\n<pre><code>&lt;function name=\"Enemy combat\"&gt;&lt;![CDATA[\nEnemies = Listcount (GetDirectChildren(Arena))\nmsg (\"There are \" + Enemies + \" enemies to fight.\")\nForeach (Enemy, GetDirectChildren(Arena)) {\n   msg (\"It is \" Enemy.name + \"'s turn.\")\n   do (Enemy,  \"CombatPref\")\n}\nEnemies = Listcount (GetDirectChildren(Arena))\nif (Enemies = 0) {\n   msg (\"Enemy combat complete.\")\n   wait {\n      PlayerCombat\n   }\n}\n]]&gt;&lt;/function&gt;\n</code></pre>\n<p>And the <code>do (Enemy, \"CombatPref\")</code></p>\n<pre><code>&lt;CombatPref type=\"script\"&gt;&lt;![CDATA[\n   action = GetRandomInt(1,10)\n   if (action &gt; 1) {\n      msg (\"Enemy attacks.\")\n   }\n   else {\n      msg (\"Enemy flees.\")\n      destroy (this.name)\n   }\n]]&gt;&lt;/CombatPref&gt;\n</code></pre>\n<p>It's not quite a combat system yet... But it functions fine.</p>\n\n",
      "PostDate": "2021-02-23T01:47:32.2335535Z",
      "LastEditDate": "2021-02-23T01:52:28.1145854Z",
      "link": null
    }
  ]
}
