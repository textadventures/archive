{
  "Topic": {
    "TopicId": "1709",
    "ForumId": "10",
    "Title": "Incrementing a Property",
    "LastUpdated": "2007-07-21T03:59:41+01:00",
    "ReplyCount": 18
  },
  "Posts": [
    {
      "PostId": "13474",
      "UserId": 0,
      "Username": "henrytj",
      "UserAvatar": null,
      "UserGravatar": "5f6247178d5dd662b392a89e1e31284c",
      "EditableText": "New to Quest (2 days) and IF in general (started researching it about a week ago, so I'm trying out several different systems.)\r\n\r\nSo far I like Quest the best (and not just because that rhymes.). But, I am having some problems already. I am trying to give an object a property that I can increment or decrement. But, best as I can tell properties can only be character strings, and maybe booleans. I think I saw another post that was similar where the advice was to convert the numeric text string into a numeric variable, perform the math there, and convert it back again. Sorry to say, but, that seems clunky. It seems that numeric object properties would be a common thing to have to work with. Is that really the solution?\r\n\r\nThanks in advance,\r\nHenry",
      "EditableFormat": "bbcode",
      "HTML": "New to Quest (2 days) and IF in general (started researching it about a week ago, so I'm trying out several different systems.)<br/><br/>So far I like Quest the best (and not just because that rhymes.). But, I am having some problems already. I am trying to give an object a property that I can increment or decrement. But, best as I can tell properties can only be character strings, and maybe booleans. I think I saw another post that was similar where the advice was to convert the numeric text string into a numeric variable, perform the math there, and convert it back again. Sorry to say, but, that seems clunky. It seems that numeric object properties would be a common thing to have to work with. Is that really the solution?<br/><br/>Thanks in advance,<br/>Henry",
      "PostDate": "2007-07-11T14:02:10+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13476",
      "UserId": 0,
      "Username": "Elexxorine",
      "UserAvatar": null,
      "UserGravatar": "a220ee44d8fe2f07029cf1f61b98bf40",
      "EditableText": "KK. I'm asuming you're using QDK, so here goes: set a numeric to the property which can be done via the string version (#object:property#). then do whatever you want with that numeric and finally set the property to its value. As asl it'd look like this:[code:unnfkw72]set numeric &lt;health; #player&#58;health#&gt;\ninc &lt;health; 5&gt; ' adds 5 to 'health'&#46;\nproperty &lt;player; health=%health%&gt;[/code:unnfkw72]It would be nice to not have to use a temp. numeric but this method only means 3 steps/lines. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Hope this helps, I'm not that great at QDK but I think can onw see what the asl looks like from QDK so you can check to see if you've done it right. <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->",
      "EditableFormat": "bbcode",
      "HTML": "KK. I'm asuming you're using QDK, so here goes: set a numeric to the property which can be done via the string version (#object:property#). then do whatever you want with that numeric and finally set the property to its value. As asl it'd look like this:<pre><code>set numeric &lt;health; #player&#58;health#&gt;<br/>inc &lt;health; 5&gt; ' adds 5 to 'health'&#46;<br/>property &lt;player; health=%health%&gt;</code></pre>It would be nice to not have to use a temp. numeric but this method only means 3 steps/lines. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Hope this helps, I'm not that great at QDK but I think can onw see what the asl looks like from QDK so you can check to see if you've done it right. <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->",
      "PostDate": "2007-07-11T21:24:12+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13478",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "He considered that method (where the advice was to convert the numeric text string into a numeric variable, perform the math there, and convert it back again) and considered it clunky.",
      "EditableFormat": "bbcode",
      "HTML": "He considered that method (where the advice was to convert the numeric text string into a numeric variable, perform the math there, and convert it back again) and considered it clunky.",
      "PostDate": "2007-07-11T21:46:03+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13480",
      "UserId": 0,
      "Username": "henrytj",
      "UserAvatar": null,
      "UserGravatar": "5f6247178d5dd662b392a89e1e31284c",
      "EditableText": "Thank you for the information. Yes, I am using the QDK interface. I have done little programming since my Fortran/Pascal years. (Personally I dont like the newer C-derived case sensitive languages. I think they are unnecessarily arcane.) Anyway, trying to evaluate different IF systems for a course I might teach at a community college. I need something that doesn't require programming background. (Trying out Inform and Quest-QDK at this time.)\r\n\r\nAnd yes, I find this solution to be clunky. Why can game variables have a string or numeric data type, but object properties have a string (or boolean?) type? Part of the utility of variables are to modify (arithmetic, etc) and transfer data around. It seams that numeric data for objects (health level, weight, weapon clip ammo count, magic/energy level, etc.) should a common thing to do.",
      "EditableFormat": "bbcode",
      "HTML": "Thank you for the information. Yes, I am using the QDK interface. I have done little programming since my Fortran/Pascal years. (Personally I dont like the newer C-derived case sensitive languages. I think they are unnecessarily arcane.) Anyway, trying to evaluate different IF systems for a course I might teach at a community college. I need something that doesn't require programming background. (Trying out Inform and Quest-QDK at this time.)<br/><br/>And yes, I find this solution to be clunky. Why can game variables have a string or numeric data type, but object properties have a string (or boolean?) type? Part of the utility of variables are to modify (arithmetic, etc) and transfer data around. It seams that numeric data for objects (health level, weight, weapon clip ammo count, magic/energy level, etc.) should a common thing to do.",
      "PostDate": "2007-07-12T01:05:16+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13481",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "If you're going to be teaching, you should probably avoid Quest.  It's not designed like other languages (it's not designed around a context-free grammar); it has numerous inconsistencies; there's not a lot of sample code.",
      "EditableFormat": "bbcode",
      "HTML": "If you're going to be teaching, you should probably avoid Quest.  It's not designed like other languages (it's not designed around a context-free grammar); it has numerous inconsistencies; there's not a lot of sample code.",
      "PostDate": "2007-07-12T01:41:03+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13482",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "Quest doesn't have a separate boolean property type; to give an object a property FOO, it puts an entry in the appropriate hashtable with key &quot;FOO&quot; and value &quot;&quot;; to give an object a property not FOO, it removes the entry with key &quot;FOO&quot;.",
      "EditableFormat": "bbcode",
      "HTML": "Quest doesn't have a separate boolean property type; to give an object a property FOO, it puts an entry in the appropriate hashtable with key &quot;FOO&quot; and value &quot;&quot;; to give an object a property not FOO, it removes the entry with key &quot;FOO&quot;.",
      "PostDate": "2007-07-12T01:43:26+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13483",
      "UserId": 0,
      "Username": "henrytj",
      "UserAvatar": null,
      "UserGravatar": "5f6247178d5dd662b392a89e1e31284c",
      "EditableText": "[quote=&quot;Freak&quot;:2y8vubqj]If you're going to be teaching, you should probably avoid Quest.  It's not designed like other languages (it's not designed around a context-free grammar); it has numerous inconsistencies; there's not a lot of sample code.[/quote:2y8vubqj]\r\n\r\nFrom the Quest home page:\r\n\r\n*** (copied and pasted) ***\r\nEasily create your own text adventure games\r\n\r\nQuest brings 1980's-style text adventure games up to date. Now you can create your own exciting text adventure, and you don't need to know how to program.\r\n\r\nEasy-to-use visual editor\r\nNo programming required. Everything about your game is displayed in plain English, and a full tutorial is included. If you've ever wanted to create your own game, but have been put off by complicated programming languages, Quest is a great way to get started.\r\n***\r\n\r\nSo it sourds like you are saying that the above is incorrect. Then maybe someone should tell the makers of this system.  Then they can either change the wording on the web page or improve the program.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Freak wrote:</cite>If you're going to be teaching, you should probably avoid Quest.  It's not designed like other languages (it's not designed around a context-free grammar); it has numerous inconsistencies; there's not a lot of sample code.</blockquote><br/><br/>From the Quest home page:<br/><br/>*** (copied and pasted) ***<br/>Easily create your own text adventure games<br/><br/>Quest brings 1980's-style text adventure games up to date. Now you can create your own exciting text adventure, and you don't need to know how to program.<br/><br/>Easy-to-use visual editor<br/>No programming required. Everything about your game is displayed in plain English, and a full tutorial is included. If you've ever wanted to create your own game, but have been put off by complicated programming languages, Quest is a great way to get started.<br/>***<br/><br/>So it sourds like you are saying that the above is incorrect. Then maybe someone should tell the makers of this system.  Then they can either change the wording on the web page or improve the program.",
      "PostDate": "2007-07-12T06:59:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13485",
      "UserId": 0,
      "Username": "Elexxorine",
      "UserAvatar": null,
      "UserGravatar": "a220ee44d8fe2f07029cf1f61b98bf40",
      "EditableText": "lolz. There is samples and such, in the tutorials. i find asl, the quest programming language. If you want help in planning lessons in quest and finding stuff out, I'll be happy to help. <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->",
      "EditableFormat": "bbcode",
      "HTML": "lolz. There is samples and such, in the tutorials. i find asl, the quest programming language. If you want help in planning lessons in quest and finding stuff out, I'll be happy to help. <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->",
      "PostDate": "2007-07-12T10:40:51+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13491",
      "UserId": 0,
      "Username": "davidw",
      "UserAvatar": null,
      "UserGravatar": "5d9c9199ac213c3e7284cd76a2262c4a",
      "EditableText": "I always think a good way of seeing the strengths of a program and what it's capable of is to download some of the games written with it and play them.",
      "EditableFormat": "bbcode",
      "HTML": "I always think a good way of seeing the strengths of a program and what it's capable of is to download some of the games written with it and play them.",
      "PostDate": "2007-07-12T21:15:17+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13493",
      "UserId": 0,
      "Username": "Cryophile",
      "UserAvatar": null,
      "UserGravatar": "cbb093447274bd6d64613a0a60a7ab52",
      "EditableText": "That doesn't necessarily work, though. We have yet to see a game that properly uses the full potential of Quest, and frankly, I'm unsure if we will. I seriously hope we do, as there is definitely a future in the system, but we don't seem to be attracting any IF fanatics, or real coders. It seems to only be the dabblers that make it to Quest.",
      "EditableFormat": "bbcode",
      "HTML": "That doesn't necessarily work, though. We have yet to see a game that properly uses the full potential of Quest, and frankly, I'm unsure if we will. I seriously hope we do, as there is definitely a future in the system, but we don't seem to be attracting any IF fanatics, or real coders. It seems to only be the dabblers that make it to Quest.",
      "PostDate": "2007-07-12T21:49:18+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13495",
      "UserId": 0,
      "Username": "Elexxorine",
      "UserAvatar": null,
      "UserGravatar": "a220ee44d8fe2f07029cf1f61b98bf40",
      "EditableText": "My game was pushing quest's limits quite nicely, doing things I didn't think posiible until I tried to do them with my tricky little coding (though there are parts of code I did years ago and have no clue how they work but they do, it's scarey). If anybody wants my codes they can ask. Also I think Lyteside's game was so huge he had to wait til Quest up'ed the maximum lines so he could contiue. It's no where near finished though he tells me. I may be working on my game this summer or turning it into an orpg engine for quest, either way i'll be finishing off the feature list i made, and hopefully it'll push some more limits. <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->",
      "EditableFormat": "bbcode",
      "HTML": "My game was pushing quest's limits quite nicely, doing things I didn't think posiible until I tried to do them with my tricky little coding (though there are parts of code I did years ago and have no clue how they work but they do, it's scarey). If anybody wants my codes they can ask. Also I think Lyteside's game was so huge he had to wait til Quest up'ed the maximum lines so he could contiue. It's no where near finished though he tells me. I may be working on my game this summer or turning it into an orpg engine for quest, either way i'll be finishing off the feature list i made, and hopefully it'll push some more limits. <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->",
      "PostDate": "2007-07-12T21:55:08+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13498",
      "UserId": 0,
      "Username": "davidw",
      "UserAvatar": null,
      "UserGravatar": "5d9c9199ac213c3e7284cd76a2262c4a",
      "EditableText": "[quote=&quot;S1aY3R&quot;:2eki3w46]That doesn't necessarily work, though. We have yet to see a game that properly uses the full potential of Quest, and frankly, I'm unsure if we will. I seriously hope we do, as there is definitely a future in the system, but we don't seem to be attracting any IF fanatics, or real coders. It seems to only be the dabblers that make it to Quest.[/quote:2eki3w46]\r\n\r\nTrue, but I'd have said the very fact that no one has yet written a game that uses the full potential of Quest, despite the fact that it's been out for nearly a decade in one form or another, speaks volumes.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>S1aY3R wrote:</cite>That doesn't necessarily work, though. We have yet to see a game that properly uses the full potential of Quest, and frankly, I'm unsure if we will. I seriously hope we do, as there is definitely a future in the system, but we don't seem to be attracting any IF fanatics, or real coders. It seems to only be the dabblers that make it to Quest.</blockquote><br/><br/>True, but I'd have said the very fact that no one has yet written a game that uses the full potential of Quest, despite the fact that it's been out for nearly a decade in one form or another, speaks volumes.",
      "PostDate": "2007-07-13T01:02:48+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13499",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "I doubt anybody will ever use the full potential of any system, but even the highly-rated Quest games I've played rarely rise above the technical level that Inform / TADS programmers tend to take for granted.",
      "EditableFormat": "bbcode",
      "HTML": "I doubt anybody will ever use the full potential of any system, but even the highly-rated Quest games I've played rarely rise above the technical level that Inform / TADS programmers tend to take for granted.",
      "PostDate": "2007-07-13T01:29:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13502",
      "UserId": 0,
      "Username": "henrytj",
      "UserAvatar": null,
      "UserGravatar": "5f6247178d5dd662b392a89e1e31284c",
      "EditableText": "[quote=&quot;Freak&quot;:2oojqmhp]I doubt anybody will ever use the full potential of any system, but even the highly-rated Quest games I've played rarely rise above the technical level that Inform / TADS programmers tend to take for granted.[/quote:2oojqmhp]\r\n\r\nTrue in that any one application rare uses all the features of a system, but one game might make heavy use of one feature while a different game makes extensive use of a different feature. \r\n\r\nTHe problem I am seeing with Quest is that is seems not to be rigorously worked out. (AS someone pointed out that it lacks a rigorous context free grammar and therefore has inconsistencies and perhaps gaps in its abilities.) There is a difference between writing an application and designing a system. Sorta like the difference between a brick-layer building a wall, and an architect designing a building. \r\n\r\nI think Quest, and QDK, has good potential, but its not there yet.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Freak wrote:</cite>I doubt anybody will ever use the full potential of any system, but even the highly-rated Quest games I've played rarely rise above the technical level that Inform / TADS programmers tend to take for granted.</blockquote><br/><br/>True in that any one application rare uses all the features of a system, but one game might make heavy use of one feature while a different game makes extensive use of a different feature. <br/><br/>THe problem I am seeing with Quest is that is seems not to be rigorously worked out. (AS someone pointed out that it lacks a rigorous context free grammar and therefore has inconsistencies and perhaps gaps in its abilities.) There is a difference between writing an application and designing a system. Sorta like the difference between a brick-layer building a wall, and an architect designing a building. <br/><br/>I think Quest, and QDK, has good potential, but its not there yet.",
      "PostDate": "2007-07-13T01:41:38+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13581",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "To answer the original question, you can do it in one line. Here's a modified version of Elexxorine's code:\r\n\r\n[code:s9vktne7]\nproperty &lt;player; health=&#123;#player&#58;health# + 5&#125;&gt;\n[/code:s9vktne7]\n\nThis makes use of the ability in Quest 4.0 to evaluate an expression anywhere, by surrounding it in curly brackets.\n\nIf you're using QDK, in the Script Editor you need to select the &quot;Modify&quot; category, then &quot;Property&quot;. From &quot;Object or Room name&quot;, choose &quot;player&quot;, and then enter the following in the &quot;Property data&quot; box:\n\n[code:s9vktne7]\nhealth=&#123;#player&#58;health# + 5&#125;\n[/code:s9vktne7]\r\n\r\nIncidentally, I'm sure Quest's apparent lack of a &quot;context free grammar&quot; has been explained to me before, but I'm not sure I've fully grasped what this actually means in terms of missing features (or confusing behaviour). Specific feature requests are always welcome though!",
      "EditableFormat": "bbcode",
      "HTML": "To answer the original question, you can do it in one line. Here's a modified version of Elexxorine's code:<br/><br/><pre><code><br/>property &lt;player; health=&#123;#player&#58;health# + 5&#125;&gt;<br/></code></pre><br/><br/>This makes use of the ability in Quest 4.0 to evaluate an expression anywhere, by surrounding it in curly brackets.<br/><br/>If you're using QDK, in the Script Editor you need to select the &quot;Modify&quot; category, then &quot;Property&quot;. From &quot;Object or Room name&quot;, choose &quot;player&quot;, and then enter the following in the &quot;Property data&quot; box:<br/><br/><pre><code><br/>health=&#123;#player&#58;health# + 5&#125;<br/></code></pre><br/><br/>Incidentally, I'm sure Quest's apparent lack of a &quot;context free grammar&quot; has been explained to me before, but I'm not sure I've fully grasped what this actually means in terms of missing features (or confusing behaviour). Specific feature requests are always welcome though!",
      "PostDate": "2007-07-20T15:04:59+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13582",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "[quote=&quot;Alex&quot;:2scb54xy]To answer the original question, you can do it in one line. Here's a modified version of Elexxorine's code:\n\n[code:2scb54xy]\nproperty &lt;player; health=&#123;#player&#58;health# + 5&#125;&gt;\n[/code:2scb54xy]\n\nThis makes use of the ability in Quest 4.0 to evaluate an expression anywhere, by surrounding it in curly brackets.\n[/quote:2scb54xy]\n\nIck.  I think that \n[code:2scb54xy]player&#46;health = player&#46;health + 5;[/code:2scb54xy]\nand the general rule of treating as expressions by default is cleaner.\n\n[quote:2scb54xy]Incidentally, I'm sure Quest's apparent lack of a &quot;context free grammar&quot; has been explained to me before, but I'm not sure I've fully grasped what this actually means in terms of missing features (or confusing behaviour). Specific feature requests are always welcome though![/quote:2scb54xy]\r\n\r\nThe grammar refers to how the source file is defined; a context-free grammar is at a balance of being able to handle complex behavior while still being machine readable in reasonable time.  CFGs are good at reducing the need for code duplication within a parser, so such languages tend to be consistent.  A regular grammar can not handle nested braces on its own; Quest uses a number of ad hoc mechanisms to handle braces and comparisons in parens which don't quite work.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Alex wrote:</cite>To answer the original question, you can do it in one line. Here's a modified version of Elexxorine's code:<br/><br/><pre><code><br/>property &lt;player; health=&#123;#player&#58;health# + 5&#125;&gt;<br/></code></pre><br/><br/>This makes use of the ability in Quest 4.0 to evaluate an expression anywhere, by surrounding it in curly brackets.<br/></blockquote><br/><br/>Ick.  I think that <br/><pre><code>player&#46;health = player&#46;health + 5;</code></pre><br/>and the general rule of treating as expressions by default is cleaner.<br/><br/><blockquote><p>Incidentally, I'm sure Quest's apparent lack of a &quot;context free grammar&quot; has been explained to me before, but I'm not sure I've fully grasped what this actually means in terms of missing features (or confusing behaviour). Specific feature requests are always welcome though!</p></blockquote><br/><br/>The grammar refers to how the source file is defined; a context-free grammar is at a balance of being able to handle complex behavior while still being machine readable in reasonable time.  CFGs are good at reducing the need for code duplication within a parser, so such languages tend to be consistent.  A regular grammar can not handle nested braces on its own; Quest uses a number of ad hoc mechanisms to handle braces and comparisons in parens which don't quite work.",
      "PostDate": "2007-07-20T17:00:59+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13584",
      "UserId": 0,
      "Username": "henrytj",
      "UserAvatar": null,
      "UserGravatar": "5f6247178d5dd662b392a89e1e31284c",
      "EditableText": "Thank you for the excellent answer. \r\n\r\nI think Quest has good promise as a system. But it still lacks some generally useful features. To some extent, IF are a &quot;state change&quot; system. Quest makes a good start is setting up such a IF/game system, but it still lacks the ability to adiquately define certain kinds of &quot;states&quot; and additionally the rules that work on them. IT would be nice to define a limited (and named) set of states. Such as the comic book condition that I mentioned, perhaps in another thread. (MintCondition, FineCondition, GoodCondition, PoorCondition, etc.) Then be able to set and compare the Condition state of a comic book objects to these named contition. In some cases it makes sense to allow the condition states to be &quot;ordered.&quot; So decrimenting the Condition state would deteriorate the comic book, etc.\r\n\r\nI certainly hope Quest continues to improve and develop.",
      "EditableFormat": "bbcode",
      "HTML": "Thank you for the excellent answer. <br/><br/>I think Quest has good promise as a system. But it still lacks some generally useful features. To some extent, IF are a &quot;state change&quot; system. Quest makes a good start is setting up such a IF/game system, but it still lacks the ability to adiquately define certain kinds of &quot;states&quot; and additionally the rules that work on them. IT would be nice to define a limited (and named) set of states. Such as the comic book condition that I mentioned, perhaps in another thread. (MintCondition, FineCondition, GoodCondition, PoorCondition, etc.) Then be able to set and compare the Condition state of a comic book objects to these named contition. In some cases it makes sense to allow the condition states to be &quot;ordered.&quot; So decrimenting the Condition state would deteriorate the comic book, etc.<br/><br/>I certainly hope Quest continues to improve and develop.",
      "PostDate": "2007-07-21T00:22:10+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13587",
      "UserId": 0,
      "Username": "cangelo",
      "UserAvatar": null,
      "UserGravatar": "1b8de8e7a06afeccae35afb22dc64a58",
      "EditableText": "[quote=&quot;henrytj&quot;:1ty6en5s]Thank you for the excellent answer. \nIT would be nice to define a limited (and named) set of states. Such as the comic book condition that I mentioned, perhaps in another thread. (MintCondition, FineCondition, GoodCondition, PoorCondition, etc.) Then be able to set and compare the Condition state of a comic book objects to these named contition. In some cases it makes sense to allow the condition states to be &quot;ordered.&quot; So decrementing the Condition state would deteriorate the comic book, etc.\n[/quote:1ty6en5s]\r\n\r\nCreate a type (let's say Collectible) that includes a property named condition (even treat it like a string if you like).  Include the following actions (compare, increment, decrement).  Lookie here, you get to define the exact logic / rules for those actions without having to depend on or being forced into a certain style.  Heck, you can even capitalize any letter(s) you like.\r\n\r\nNow, any object you add type collectible to can be treated with \r\nmyObject; compare\r\nmyObject; increment\r\nmyObject; decrement\r\n\r\nNot to mention it is now useful for anything collectible object (NOT just comics).  \r\n\r\nThank goodness we, as programmers are not limited (er forced) to program in one way without the flexibility to think outside the box to elegantly and simply solve routine problems.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>henrytj wrote:</cite>Thank you for the excellent answer. <br/>IT would be nice to define a limited (and named) set of states. Such as the comic book condition that I mentioned, perhaps in another thread. (MintCondition, FineCondition, GoodCondition, PoorCondition, etc.) Then be able to set and compare the Condition state of a comic book objects to these named contition. In some cases it makes sense to allow the condition states to be &quot;ordered.&quot; So decrementing the Condition state would deteriorate the comic book, etc.<br/></blockquote><br/><br/>Create a type (let's say Collectible) that includes a property named condition (even treat it like a string if you like).  Include the following actions (compare, increment, decrement).  Lookie here, you get to define the exact logic / rules for those actions without having to depend on or being forced into a certain style.  Heck, you can even capitalize any letter(s) you like.<br/><br/>Now, any object you add type collectible to can be treated with <br/>myObject; compare<br/>myObject; increment<br/>myObject; decrement<br/><br/>Not to mention it is now useful for anything collectible object (NOT just comics).  <br/><br/>Thank goodness we, as programmers are not limited (er forced) to program in one way without the flexibility to think outside the box to elegantly and simply solve routine problems.",
      "PostDate": "2007-07-21T02:31:50+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13588",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "[quote=&quot;henrytj&quot;:20ofutxx]Thank you for the excellent answer. \n\nI think Quest has good promise as a system.[/quote:20ofutxx]\r\n\r\nI thought that when I first encountered Quest.  Then I tried to clone the Quest runner (project Geas), and had to really analyze it.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>henrytj wrote:</cite>Thank you for the excellent answer. <br/><br/>I think Quest has good promise as a system.</blockquote><br/><br/>I thought that when I first encountered Quest.  Then I tried to clone the Quest runner (project Geas), and had to really analyze it.",
      "PostDate": "2007-07-21T03:59:41+01:00",
      "LastEditDate": null
    }
  ]
}
