{
  "Topic": {
    "TopicId": "4166",
    "ForumId": "10",
    "Title": "Using \"Play\" with different rooms?",
    "LastUpdated": "2014-02-01T16:32:51+00:00",
    "ReplyCount": 3
  },
  "Posts": [
    {
      "PostId": "27706",
      "UserId": 0,
      "Username": "michaelsahn",
      "UserAvatar": null,
      "UserGravatar": "3a9802e1b3c8187c840fa757ffeb896b",
      "EditableText": "I'm a new user and enjoying Quest very much.  Forgive the basic question but I've searched the forum and FAQ for this and cannot find an answer - \n\nWhen I use the play command to play through my game, is there a way I can move directly to a specific room, so that I don't have to play from the beginning?\n\nThanks!\n\nMike",
      "EditableFormat": "bbcode",
      "HTML": "I'm a new user and enjoying Quest very much.  Forgive the basic question but I've searched the forum and FAQ for this and cannot find an answer - <br/><br/>When I use the play command to play through my game, is there a way I can move directly to a specific room, so that I don't have to play from the beginning?<br/><br/>Thanks!<br/><br/>Mike",
      "PostDate": "2014-01-31T01:50:06+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27707",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "You can create a COMMAND:\n\nA Command will take whatever is typed in during game play, using that as an input, and execute scripting (a Function) using it.\n\nthough, you have to also create that scripting (a Function) too, of course.\n\nYou use a Function as the scripting, as a Function enables the use of Parameters, which allows for the transfer of the typed-in input from the Command into the Function's scripting (and changing the labels of the used things within the parameters too).\n\nconceptually:\n\nCommand: &quot;goto_command&quot;\nCommand's input pattern: goto #text# (or: goto #object#)\nCommand's Parameters: &quot;player&quot; and &quot;text&quot;\nduring game play, the user types in: goto room_2 (for example)\nCommand's Script&#058; (call upon a function): goto_function (player, text) ~ or: goto_function (player, object)\n\nFunction: &quot;goto_function&quot;\nFunction's Parameters: (player -&gt; moving_object, text -&gt; destination_object)&quot;\nFunction's Scripting:\n\nif (&quot;destination_object&quot; is a Room Object), then move &quot;moving_object&quot; to &quot;destination_object&quot;\n\nin the GUI~Editor, the &quot;moving&quot; script is:\n\nrun as a script -&gt; add a~new script -&gt; Objects -&gt; MoveObject -&gt; (set it up)\n~OR~\nrun as a script -&gt; add a~new script -&gt; Variables -&gt; Set a variable or attribute -&gt; player.parent = room_2\n\nIn Code: the &quot;moving&quot; script is:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/MoveObject\">http://quest5.net/wiki/MoveObject</a><!-- m -->\nMoveObject (player, room_2)\n~OR~\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Parent\">http://quest5.net/wiki/Parent</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Object\">http://quest5.net/wiki/Object</a><!-- m -->\nplayer.parent = room_2\n\n-------\n\nconcept of &quot;parents~children, nesting, or indenting&quot;:\n\nHK = (ROOT) parent, direct parent of &quot;HK's pants with pockets&quot;, and indirect parent of &quot;wallet&quot;, &quot;$1&quot;, and &quot;$5&quot;\n-&gt; HK's pants with pockets = direct parent of &quot;wallet&quot;, indirect parent of &quot;$1&quot; and &quot;$5&quot;, and direct child of &quot;HK&quot;\n-&gt;-&gt; wallet = I think you get the idea \n-&gt;-&gt;-&gt; $ 1 = I think you get the idea\n-&gt;-&gt;-&gt; $ 5 = I think you get the idea\n\nc:\\\\ \n-&gt; programs\n-&gt;-&gt; quest\n\nthis applies to the Scripting too (showing it in code):\n\n&lt;object name=&quot;monster_1&quot;&gt;\n-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;\n-&gt; &lt;alias&gt;orc&lt;/alias&gt;\n-&gt; &lt;attr name=&quot;hp&quot; type=&quot;int&quot;&gt;50&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;dead&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;displayverbs&quot; type=&quot;listextend&quot;&gt;Fight&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;fight&quot; type=&quot;script&quot;&gt;&lt;![CDATA[\n-&gt;-&gt; if (this.dead=true) {\n-&gt;-&gt;-&gt; msg (&quot;It's already dead, silly!&quot;)\n-&gt;-&gt; } else if (this.dead=false) {\n-&gt;-&gt;-&gt; this.hp = this.hp - player.damage\n-&gt;-&gt;-&gt; msg (&quot;You attack the &quot; + this.alias + &quot;, doing &quot; + player.damage + &quot; damage, and it now has &quot; + this.hp + &quot; HP left.&quot;)\n-&gt;-&gt;-&gt; if (this.hp &lt;= 0) {\n-&gt;-&gt;-&gt;-&gt; this.dead=true\n-&gt;-&gt;-&gt;-&gt; msg (&quot;You killed the &quot; + this.alias + &quot;.&quot;)\n-&gt;-&gt;-&gt; }\n-&gt;-&gt; }\n-&gt; ]]&gt;&lt;/attr&gt;\n&lt;/object&gt;\n\n[code:2y1skwaj]&lt;object name=&quot;monster_1&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;alias&gt;orc&lt;/alias&gt;\n  &lt;attr name=&quot;hp&quot; type=&quot;int&quot;&gt;50&lt;/attr&gt;\n  &lt;attr name=&quot;dead&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;\n  &lt;attr name=&quot;displayverbs&quot; type=&quot;listextend&quot;&gt;Fight&lt;/attr&gt;\n  &lt;attr name=&quot;fight&quot; type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n    if (this&#46;dead=true) {\n      msg (&quot;It's already dead, silly!&quot;)\n    } else if (this&#46;dead=false) {\n      this&#46;hp = this&#46;hp - player&#46;damage\n      msg (&quot;You attack the &quot; + this&#46;alias + &quot;, doing &quot; + player&#46;damage + &quot; damage, and it now has &quot; + this&#46;hp + &quot; HP left&#46;&quot;)\n      if (this&#46;hp &lt;= 0) {\n        this&#46;dead=true\n        msg (&quot;You killed the &quot; + this&#46;alias + &quot;&#46;&quot;)\n      }\n    }\n  &#93;&#93;&gt;&lt;/attr&gt;\n&lt;/object&gt;[/code:2y1skwaj]\n\n--------\n\nto do this in the GUI~Editor:\n\nclick on 'Commands' in the &quot;tree of stuff&quot;, so that it is highlighted:\n\n[code:2y1skwaj]the left side (left pane) 's new game default's &quot;tree of stuff&quot;&#58;\n\nObjects\n  Game\n    Verbs\n    Commands\n  Room\n    Player\nFunctions\nTimers\nWalkthrough\nAdvanced\n  Included Libraries\n    English&#46;aslx\n    Core&#46;aslx\n  Templates\n  Dynamic Templates\n  Object Types\n  Javascript\nFilter -&gt; Show Library Objects[/code:2y1skwaj]\n\nnow, that 'Commands' is highlighted, it's further details~options are shown on the right side (right pane).\n\nclick on the &quot;Add&quot; button -&gt;\n\nPattern drop down box: [command pattern] (leave it as this)\nthe empty box: goto #object#\n\nName box: goto_command\n\n&quot;Unresolved object text&quot; box: You can't go here, as it doesn't exist.\n\nScript&#058; add new script -&gt; Scripts -&gt; Call Function -&gt;\n\nCall function: goto_function\nwith Parameters: Add -&gt; player\nwith Parameters: Add (again) -&gt; object\n\nnow, again in the &quot;tree of stuff&quot;, click on 'Functions' so that it is highlighted:\n\nand on the right side: Add -&gt;\n\nFunction Name: goto_function\n\nReturn Type: [none] (leave this as none)\n\nParameters: Add -&gt; moving_object\nParameters: Add (again) -&gt; destination_object\n\nScript&#058; Add new script -&gt;\n\nScripts -&gt; If... -&gt; [EXPRESSION] -&gt; destination_object = null -&gt;\n-&gt; then -&gt; Add new script -&gt; Scripts -&gt; for each... -&gt;\n\nFor each: loop variable: object_x\nin source: [ALL OBJECTS]\n\n-&gt;-&gt; run script -&gt; Scripts -&gt; If... -&gt; [EXPRESSION] -&gt; object_x.alias = destination_object.alias\n-&gt;-&gt;-&gt; then -&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt;\n\nSet variable destination_object = [EXPRESSION] object_x\n\nAdd new script -&gt; Scripts -&gt; If... -&gt; [EXPRESSION] -&gt; destination_object = null -&gt;\n-&gt; then -&gt; Add new script -&gt; Output -&gt; Print a message -&gt; [MESSAGE] -&gt; You can't go here, as it doesn't exist.\n\nAdd new script -&gt; Scripts -&gt; If... -&gt; [EXPRESSION] -&gt; HasAttribute (destination_object, &quot;inherit&quot;) = true -&gt;\n-&gt; then -&gt; Add new script -&gt; Scripts -&gt; If... -&gt; [EXPRESSION] -&gt; GetAttribute (destination_object, &quot;inherit&quot;) = &quot;editor_object&quot;\n-&gt;-&gt; then -&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; moving_object.parent = destination_object\n-&gt; Add else if -&gt; Output -&gt; Print a message -&gt; [MESSAGE] -&gt; You can't go here, as it's not a room.\nAdd else if -&gt; Output -&gt; Print a message -&gt; [MESSAGE] -&gt; You can't go here, as it's not a room.\n\nargh... this is a pain in the &quot;rear end&quot; to try to do in the GUI~Editor (I have no idea if the above will work or not), lol ... so much easier in code... lol",
      "EditableFormat": "bbcode",
      "HTML": "You can create a COMMAND:<br/><br/>A Command will take whatever is typed in during game play, using that as an input, and execute scripting (a Function) using it.<br/><br/>though, you have to also create that scripting (a Function) too, of course.<br/><br/>You use a Function as the scripting, as a Function enables the use of Parameters, which allows for the transfer of the typed-in input from the Command into the Function's scripting (and changing the labels of the used things within the parameters too).<br/><br/>conceptually:<br/><br/>Command: &quot;goto_command&quot;<br/>Command's input pattern: goto #text# (or: goto #object#)<br/>Command's Parameters: &quot;player&quot; and &quot;text&quot;<br/>during game play, the user types in: goto room_2 (for example)<br/>Command's Script&#058; (call upon a function): goto_function (player, text) ~ or: goto_function (player, object)<br/><br/>Function: &quot;goto_function&quot;<br/>Function's Parameters: (player -&gt; moving_object, text -&gt; destination_object)&quot;<br/>Function's Scripting:<br/><br/>if (&quot;destination_object&quot; is a Room Object), then move &quot;moving_object&quot; to &quot;destination_object&quot;<br/><br/>in the GUI~Editor, the &quot;moving&quot; script is:<br/><br/>run as a script -&gt; add a~new script -&gt; Objects -&gt; MoveObject -&gt; (set it up)<br/>~OR~<br/>run as a script -&gt; add a~new script -&gt; Variables -&gt; Set a variable or attribute -&gt; player.parent = room_2<br/><br/>In Code: the &quot;moving&quot; script is:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/MoveObject\">http://quest5.net/wiki/MoveObject</a><!-- m --><br/>MoveObject (player, room_2)<br/>~OR~<br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Parent\">http://quest5.net/wiki/Parent</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Object\">http://quest5.net/wiki/Object</a><!-- m --><br/>player.parent = room_2<br/><br/>-------<br/><br/>concept of &quot;parents~children, nesting, or indenting&quot;:<br/><br/>HK = (ROOT) parent, direct parent of &quot;HK's pants with pockets&quot;, and indirect parent of &quot;wallet&quot;, &quot;$1&quot;, and &quot;$5&quot;<br/>-&gt; HK's pants with pockets = direct parent of &quot;wallet&quot;, indirect parent of &quot;$1&quot; and &quot;$5&quot;, and direct child of &quot;HK&quot;<br/>-&gt;-&gt; wallet = I think you get the idea <br/>-&gt;-&gt;-&gt; $ 1 = I think you get the idea<br/>-&gt;-&gt;-&gt; $ 5 = I think you get the idea<br/><br/>c:\\\\ <br/>-&gt; programs<br/>-&gt;-&gt; quest<br/><br/>this applies to the Scripting too (showing it in code):<br/><br/>&lt;object name=&quot;monster_1&quot;&gt;<br/>-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>-&gt; &lt;alias&gt;orc&lt;/alias&gt;<br/>-&gt; &lt;attr name=&quot;hp&quot; type=&quot;int&quot;&gt;50&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;dead&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;displayverbs&quot; type=&quot;listextend&quot;&gt;Fight&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;fight&quot; type=&quot;script&quot;&gt;&lt;![CDATA[<br/>-&gt;-&gt; if (this.dead=true) {<br/>-&gt;-&gt;-&gt; msg (&quot;It's already dead, silly!&quot;)<br/>-&gt;-&gt; } else if (this.dead=false) {<br/>-&gt;-&gt;-&gt; this.hp = this.hp - player.damage<br/>-&gt;-&gt;-&gt; msg (&quot;You attack the &quot; + this.alias + &quot;, doing &quot; + player.damage + &quot; damage, and it now has &quot; + this.hp + &quot; HP left.&quot;)<br/>-&gt;-&gt;-&gt; if (this.hp &lt;= 0) {<br/>-&gt;-&gt;-&gt;-&gt; this.dead=true<br/>-&gt;-&gt;-&gt;-&gt; msg (&quot;You killed the &quot; + this.alias + &quot;.&quot;)<br/>-&gt;-&gt;-&gt; }<br/>-&gt;-&gt; }<br/>-&gt; ]]&gt;&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/><pre><code>&lt;object name=&quot;monster_1&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;alias&gt;orc&lt;/alias&gt;<br/>  &lt;attr name=&quot;hp&quot; type=&quot;int&quot;&gt;50&lt;/attr&gt;<br/>  &lt;attr name=&quot;dead&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;<br/>  &lt;attr name=&quot;displayverbs&quot; type=&quot;listextend&quot;&gt;Fight&lt;/attr&gt;<br/>  &lt;attr name=&quot;fight&quot; type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    if (this&#46;dead=true) {<br/>      msg (&quot;It's already dead, silly!&quot;)<br/>    } else if (this&#46;dead=false) {<br/>      this&#46;hp = this&#46;hp - player&#46;damage<br/>      msg (&quot;You attack the &quot; + this&#46;alias + &quot;, doing &quot; + player&#46;damage + &quot; damage, and it now has &quot; + this&#46;hp + &quot; HP left&#46;&quot;)<br/>      if (this&#46;hp &lt;= 0) {<br/>        this&#46;dead=true<br/>        msg (&quot;You killed the &quot; + this&#46;alias + &quot;&#46;&quot;)<br/>      }<br/>    }<br/>  &#93;&#93;&gt;&lt;/attr&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>--------<br/><br/>to do this in the GUI~Editor:<br/><br/>click on 'Commands' in the &quot;tree of stuff&quot;, so that it is highlighted:<br/><br/><pre><code>the left side (left pane) 's new game default's &quot;tree of stuff&quot;&#58;<br/><br/>Objects<br/>  Game<br/>    Verbs<br/>    Commands<br/>  Room<br/>    Player<br/>Functions<br/>Timers<br/>Walkthrough<br/>Advanced<br/>  Included Libraries<br/>    English&#46;aslx<br/>    Core&#46;aslx<br/>  Templates<br/>  Dynamic Templates<br/>  Object Types<br/>  Javascript<br/>Filter -&gt; Show Library Objects</code></pre><br/><br/>now, that 'Commands' is highlighted, it's further details~options are shown on the right side (right pane).<br/><br/>click on the &quot;Add&quot; button -&gt;<br/><br/>Pattern drop down box: [command pattern] (leave it as this)<br/>the empty box: goto #object#<br/><br/>Name box: goto_command<br/><br/>&quot;Unresolved object text&quot; box: You can't go here, as it doesn't exist.<br/><br/>Script&#058; add new script -&gt; Scripts -&gt; Call Function -&gt;<br/><br/>Call function: goto_function<br/>with Parameters: Add -&gt; player<br/>with Parameters: Add (again) -&gt; object<br/><br/>now, again in the &quot;tree of stuff&quot;, click on 'Functions' so that it is highlighted:<br/><br/>and on the right side: Add -&gt;<br/><br/>Function Name: goto_function<br/><br/>Return Type: [none] (leave this as none)<br/><br/>Parameters: Add -&gt; moving_object<br/>Parameters: Add (again) -&gt; destination_object<br/><br/>Script&#058; Add new script -&gt;<br/><br/>Scripts -&gt; If... -&gt; [EXPRESSION] -&gt; destination_object = null -&gt;<br/>-&gt; then -&gt; Add new script -&gt; Scripts -&gt; for each... -&gt;<br/><br/>For each: loop variable: object_x<br/>in source: [ALL OBJECTS]<br/><br/>-&gt;-&gt; run script -&gt; Scripts -&gt; If... -&gt; [EXPRESSION] -&gt; object_x.alias = destination_object.alias<br/>-&gt;-&gt;-&gt; then -&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt;<br/><br/>Set variable destination_object = [EXPRESSION] object_x<br/><br/>Add new script -&gt; Scripts -&gt; If... -&gt; [EXPRESSION] -&gt; destination_object = null -&gt;<br/>-&gt; then -&gt; Add new script -&gt; Output -&gt; Print a message -&gt; [MESSAGE] -&gt; You can't go here, as it doesn't exist.<br/><br/>Add new script -&gt; Scripts -&gt; If... -&gt; [EXPRESSION] -&gt; HasAttribute (destination_object, &quot;inherit&quot;) = true -&gt;<br/>-&gt; then -&gt; Add new script -&gt; Scripts -&gt; If... -&gt; [EXPRESSION] -&gt; GetAttribute (destination_object, &quot;inherit&quot;) = &quot;editor_object&quot;<br/>-&gt;-&gt; then -&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; moving_object.parent = destination_object<br/>-&gt; Add else if -&gt; Output -&gt; Print a message -&gt; [MESSAGE] -&gt; You can't go here, as it's not a room.<br/>Add else if -&gt; Output -&gt; Print a message -&gt; [MESSAGE] -&gt; You can't go here, as it's not a room.<br/><br/>argh... this is a pain in the &quot;rear end&quot; to try to do in the GUI~Editor (I have no idea if the above will work or not), lol ... so much easier in code... lol",
      "PostDate": "2014-01-31T04:06:20+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27708",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "You can also simply drag and drop the player into the desired room before you hit Play...",
      "EditableFormat": "bbcode",
      "HTML": "You can also simply drag and drop the player into the desired room before you hit Play...",
      "PostDate": "2014-01-31T22:55:07+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27712",
      "UserId": 0,
      "Username": "michaelsahn",
      "UserAvatar": null,
      "UserGravatar": "3a9802e1b3c8187c840fa757ffeb896b",
      "EditableText": "Thank you both for your help!  The drag/drop player does exactly what I need. \n\n-Mike",
      "EditableFormat": "bbcode",
      "HTML": "Thank you both for your help!  The drag/drop player does exactly what I need. <br/><br/>-Mike",
      "PostDate": "2014-02-01T16:32:51+00:00",
      "LastEditDate": null
    }
  ]
}
