{
  "Topic": {
    "TopicId": "3692",
    "ForumId": "10",
    "Title": "What is your name?",
    "LastUpdated": "2013-05-23T02:27:43+01:00",
    "ReplyCount": 6
  },
  "Posts": [
    {
      "PostId": "24673",
      "UserId": 0,
      "Username": "wdele",
      "UserAvatar": "6867_1369330918.jpg",
      "UserGravatar": "2ef050f863d32ef79a54f1337febb5df",
      "EditableText": "Hello,\n\nI would like to know how to create a function 'what is your name?' to be able to return the name of the user with a message like ''Nice to meet you, [name]&quot;. Does anybody know how to do this?\n\nI know it has something to do with get input and things like that, but I have no idea how to create such a function like this. Could anybody post the code of this so I can split it out later and see how it works, and of course integrate in my (our) game?\n\nThank you in advance,\nWilliam",
      "EditableFormat": "bbcode",
      "HTML": "Hello,<br/><br/>I would like to know how to create a function 'what is your name?' to be able to return the name of the user with a message like ''Nice to meet you, [name]&quot;. Does anybody know how to do this?<br/><br/>I know it has something to do with get input and things like that, but I have no idea how to create such a function like this. Could anybody post the code of this so I can split it out later and see how it works, and of course integrate in my (our) game?<br/><br/>Thank you in advance,<br/>William",
      "PostDate": "2013-05-22T16:18:08+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24676",
      "UserId": 0,
      "Username": "Liam315",
      "UserAvatar": null,
      "UserGravatar": "ded290a24d340d761d42c897d08111aa",
      "EditableText": "It's fairly straightforward, but it depends if you want to store the name for later use as well. To print the message by itself without storing it your script needs to:\n\n1. Print a message saying What is your name?\n2. Get Input then:\nPrint an expression saying &quot;Nice to meet you, &quot; + result + &quot;.&quot;\n\nWhich in code looks like this:\n[code:2acl6ei0]msg (&quot;What is your name?&quot;)\nget input {\n  msg (&quot;Nice to meet you, &quot; + result + &quot;&#46;&quot;)\n}[/code:2acl6ei0]\n\nAs you can see, for get input scripts you can refer to whatever the player typed in with the expression [result]\n\nIf you want to store that name for later use, you'll need to somewhere to store it and that can depend on the nature of your game. The best place (so long as you don't change the character you are playing during the game) would probably be in Player.alias. In this case you need to use the script called set objects attribute (named by an expression). The object is the player, the attribute alias, and result would be what you are setting it to. Your code would then look like this.\n\n[code:2acl6ei0]msg (&quot;What is your name?&quot;)\nget input {\n  set (game&#46;pov, &quot;alias&quot;, result)\n  msg (&quot;Nice to meet you, &quot; + game&#46;pov&#46;alias + &quot;&#46;&quot;)\n}[/code:2acl6ei0]\n\nYou'll notice I changed the script slightly for the second one, this is just to demonstrate how you would be referring to the stored name for the rest of your script, i.e. game.pov.alias.\n\nHope this helps.",
      "EditableFormat": "bbcode",
      "HTML": "It's fairly straightforward, but it depends if you want to store the name for later use as well. To print the message by itself without storing it your script needs to:<br/><br/>1. Print a message saying What is your name?<br/>2. Get Input then:<br/>Print an expression saying &quot;Nice to meet you, &quot; + result + &quot;.&quot;<br/><br/>Which in code looks like this:<br/><pre><code>msg (&quot;What is your name?&quot;)<br/>get input {<br/>  msg (&quot;Nice to meet you, &quot; + result + &quot;&#46;&quot;)<br/>}</code></pre><br/><br/>As you can see, for get input scripts you can refer to whatever the player typed in with the expression [result]<br/><br/>If you want to store that name for later use, you'll need to somewhere to store it and that can depend on the nature of your game. The best place (so long as you don't change the character you are playing during the game) would probably be in Player.alias. In this case you need to use the script called set objects attribute (named by an expression). The object is the player, the attribute alias, and result would be what you are setting it to. Your code would then look like this.<br/><br/><pre><code>msg (&quot;What is your name?&quot;)<br/>get input {<br/>  set (game&#46;pov, &quot;alias&quot;, result)<br/>  msg (&quot;Nice to meet you, &quot; + game&#46;pov&#46;alias + &quot;&#46;&quot;)<br/>}</code></pre><br/><br/>You'll notice I changed the script slightly for the second one, this is just to demonstrate how you would be referring to the stored name for the rest of your script, i.e. game.pov.alias.<br/><br/>Hope this helps.",
      "PostDate": "2013-05-22T16:55:04+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24677",
      "UserId": 0,
      "Username": "wdele",
      "UserAvatar": "6867_1369330918.jpg",
      "UserGravatar": "2ef050f863d32ef79a54f1337febb5df",
      "EditableText": "Thanks! This worked out great! And now I would like to know whether the player is a man or a woman... So the player object can change to man or woman.",
      "EditableFormat": "bbcode",
      "HTML": "Thanks! This worked out great! And now I would like to know whether the player is a man or a woman... So the player object can change to man or woman.",
      "PostDate": "2013-05-22T17:12:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24684",
      "UserId": 0,
      "Username": "Liam315",
      "UserAvatar": null,
      "UserGravatar": "ded290a24d340d761d42c897d08111aa",
      "EditableText": "Battery is about to die on my laptop so this will have to be brief. Because you will want to limit the options, using a menu is a better way to go for this. The code populates a list with your options first, then runs the menu displaying the newly created list.\n\n[code:3s91pbck]choosegender = NewStringList()\nlist add (choosegender, &quot;Male&quot;)\nlist add (choosegender, &quot;Female&quot;)\nShowMenu (&quot;What is your gender?&quot;, choosegender, false) {\n  if (result = &quot;Male&quot;) {\n    set (game&#46;pov, &quot;gender&quot;, &quot;Male&quot;)\n  }\n  else {\n    set (game&#46;pov, &quot;gender&quot;, &quot;Female&quot;)\n  }\n  msg (&quot;&gt; &quot; + result)\n}[/code:3s91pbck]\n\nThat isn't the only way to do it though. Depending on how these choices will affect your code you may find it easier to set them as a boolean attribute (e.g. the attribute is male, which can be true or false).",
      "EditableFormat": "bbcode",
      "HTML": "Battery is about to die on my laptop so this will have to be brief. Because you will want to limit the options, using a menu is a better way to go for this. The code populates a list with your options first, then runs the menu displaying the newly created list.<br/><br/><pre><code>choosegender = NewStringList()<br/>list add (choosegender, &quot;Male&quot;)<br/>list add (choosegender, &quot;Female&quot;)<br/>ShowMenu (&quot;What is your gender?&quot;, choosegender, false) {<br/>  if (result = &quot;Male&quot;) {<br/>    set (game&#46;pov, &quot;gender&quot;, &quot;Male&quot;)<br/>  }<br/>  else {<br/>    set (game&#46;pov, &quot;gender&quot;, &quot;Female&quot;)<br/>  }<br/>  msg (&quot;&gt; &quot; + result)<br/>}</code></pre><br/><br/>That isn't the only way to do it though. Depending on how these choices will affect your code you may find it easier to set them as a boolean attribute (e.g. the attribute is male, which can be true or false).",
      "PostDate": "2013-05-22T18:02:13+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24685",
      "UserId": 0,
      "Username": "wdele",
      "UserAvatar": "6867_1369330918.jpg",
      "UserGravatar": "2ef050f863d32ef79a54f1337febb5df",
      "EditableText": "Thanks!",
      "EditableFormat": "bbcode",
      "HTML": "Thanks!",
      "PostDate": "2013-05-22T19:16:22+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24697",
      "UserId": 0,
      "Username": "Sora574",
      "UserAvatar": null,
      "UserGravatar": "5691c27a3aa3e56e879a3f8545b28ef2",
      "EditableText": "@Liam: I'm sorry, this just bothered me <!-- s:oops: --><img src=\"{SMILIES_PATH}/icon_redface.gif\" alt=\":oops:\" title=\"Embarassed\" /><!-- s:oops: --> ... using the 'set' command isn't necessary in most cases, especially when the attribute name is known (like now). It's much simpler to use something like [game.pov.attribute = &quot;something&quot;] than it is to use [set (game.pov, &quot;attribute&quot;, &quot;something&quot;)]",
      "EditableFormat": "bbcode",
      "HTML": "@Liam: I'm sorry, this just bothered me <!-- s:oops: --><img src=\"{SMILIES_PATH}/icon_redface.gif\" alt=\":oops:\" title=\"Embarassed\" /><!-- s:oops: --> ... using the 'set' command isn't necessary in most cases, especially when the attribute name is known (like now). It's much simpler to use something like [game.pov.attribute = &quot;something&quot;] than it is to use [set (game.pov, &quot;attribute&quot;, &quot;something&quot;)]",
      "PostDate": "2013-05-23T01:38:26+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24699",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "What has been asked thus far (input name and input gender), falls under &quot;character creation&quot;, which we've already got here:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Character_Creation\">http://quest5.net/wiki/Character_Creation</a><!-- m -->\n\nif you need help with understanding the coding~scripting or whatever (such as explaining and~or showing it via the GUI-Editor instead), just ask for help, and we'll continue to help you further.\n\n---------------------------------\n\nfor using a game player~user 's input, you need this:\n\nto create and store~save it (we have to attach it to some permanent object to do this):\n\n[code:1r2axene]get input {\n  object_attribute_name&#46;object_attribute_whatever=result\n}[/code:1r2axene]\n\nthen to use it wherever you want, you need this:\n\nobject_attribute_name.object_attribute_whatever\n\nso for example:\n\n[code:1r2axene]&lt;game name=&quot;HK Game Testing&quot;&gt;\n  // (blah blah blah other code lines)\n  &lt;start type=&quot;script&quot;&gt;\n    character_creation_function\n  &lt;/start&gt;\n  // (blah blah blah other code lines)\n&lt;/game&gt;\n\n&lt;function name=&quot;character_creation_function&quot;&gt;\n  msg (&quot;What is your name?&quot;)\n  get input {\n    player&#46;alias // (or you can do&#58; game&#46;pov&#46;alias) (game&#46;pov = your currently controlled Player Object) (your default player object is &quot;player&quot;, but you can create more player objects too and switch~change control between them)\n  }\n&lt;/function&gt;\n\n&lt;object name=&quot;friend_1&quot;&gt;\n  &lt;alias&gt;John&lt;/alias&gt;\n  &lt;displayverbs=&quot;simplestringlist&quot;&gt;chat&lt;/displayverbs&gt;\n  &lt;chat type=&quot;script&quot;&gt;\n    msg (&quot;You say hello, and &quot; + this&#46;alias + &quot; returns the greeting, \\&quot;Hello &quot; + game&#46;pov&#46;alias + &quot;!\\&quot;)\n  &lt;/chat&gt;\n&lt;/object&gt;[/code:1r2axene]\n\n--------------------------------------\n\nfor creating a set of choices to choose from, there's a few ways to do this:\n\n***\n\nshow menu:\n\n(see above posts for the longer process of manually creating the list first and then &quot;calling upon&quot; the list, that you've created, in the &quot;show menu&quot; function)\n\nor\n\nyou can use the &quot;split&quot; function command, it automatically creates the list with only one simple line instead (much nicer, hehe)\n\nsplit (&quot;choice_one; choice_two; choice_etc&quot; , &quot;;&quot;)\n\nin full:\n\n[code:1r2axene]show menu (&quot;your_question&quot;, split (&quot;choice_one; choice_two; choice_3; etc_etc_etc&quot; , &quot;;&quot;), true_or_false__for_whether_you_want_to_be_able_to_cancel_your_choice_aka_go_back) {\n  (etc etc etc script)\n}[/code:1r2axene]\n\n****\n\nanother way is to create your own type of list-menu (such as for example, if you don't like the window that comes up with the &quot;show menu&quot; or for whatever other reasons for doing it this way too, as shown below):\n\n[code:1r2axene]msg (&quot;Type the number of the choice you want&quot;)\nmsg (&quot;(1) choice_one, (2) choice_two, (3) choice_three, &#46;&#46;&#46; etc etc etc&quot;)\nget input {\n  switch (result) {\n    case (&quot;1)&quot; {\n      msg (&quot;choice_one_response&quot;) // you can do whatever script you want, I'm only using the &quot;msg&quot; script for an example\n    }\n    case (&quot;2&quot;) {\n      msg (&quot;choice_two_response&quot;) // you can do whatever script you want, I'm only using the &quot;msg&quot; script for an example\n   }\n   case (&quot;3&quot;) {\n     msg (&quot;choice_three_response&quot;) // you can do whatever script you want, I'm only using the &quot;msg&quot; script for an example\n   }\n }\n}[/code:1r2axene]\n\nor you can use lists or dictionaries in the same way, but these are a bit more difficult to learn how to use.\n\nThe &quot;switch&quot; function command is pretty simple (hopefully) to understand it. The &quot;switch&quot; is just a more tidy~organized and faster way of doing (instead of having~doing) many individual &quot;if&quot; scripts.\n\n------------------\n\nhow the &quot;get input&quot; (and all the code &quot;definers&quot; too) work:\n\nAlgebraic Substitution (though you've got to think about it in the correct way, as it's a bit tricky to grasp correctly)\n\nhere's a conceptual model of how it works:\n\nHK&lt;=&gt;result&lt;=&gt;game.pov.alias\n\ninput == output\nHK =&gt; result =&gt; game.pov.alias == game.pov.alias =&gt; result =&gt; HK\n(this is mostly the same structure as how computers &quot;talk&quot; to one another, except that it goes both ways, unlike the above, which is only going from left=&quot;input&quot; to right=&quot;output&quot;)\n( the 7 layered OSI model: <!-- m --><a class=\"postlink\" href=\"http://www.petri.co.il/images/osi_model.JPG\">http://www.petri.co.il/images/osi_model.JPG</a><!-- m --> )\n\n[ (game player~user 's) input: &quot;HK&quot; -&gt; result -&gt; game.pov.alias ] -&gt; [ game.pov.alias -&gt; result -&gt; HK : (game engine's) output ]\n\n(game player~user 's) input: &quot;HK&quot; -&gt; result -&gt; game.pov.alias\n(game engine's) output: game.pov.alias -&gt; result -&gt; HK",
      "EditableFormat": "bbcode",
      "HTML": "What has been asked thus far (input name and input gender), falls under &quot;character creation&quot;, which we've already got here:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Character_Creation\">http://quest5.net/wiki/Character_Creation</a><!-- m --><br/><br/>if you need help with understanding the coding~scripting or whatever (such as explaining and~or showing it via the GUI-Editor instead), just ask for help, and we'll continue to help you further.<br/><br/>---------------------------------<br/><br/>for using a game player~user 's input, you need this:<br/><br/>to create and store~save it (we have to attach it to some permanent object to do this):<br/><br/><pre><code>get input {<br/>  object_attribute_name&#46;object_attribute_whatever=result<br/>}</code></pre><br/><br/>then to use it wherever you want, you need this:<br/><br/>object_attribute_name.object_attribute_whatever<br/><br/>so for example:<br/><br/><pre><code>&lt;game name=&quot;HK Game Testing&quot;&gt;<br/>  // (blah blah blah other code lines)<br/>  &lt;start type=&quot;script&quot;&gt;<br/>    character_creation_function<br/>  &lt;/start&gt;<br/>  // (blah blah blah other code lines)<br/>&lt;/game&gt;<br/><br/>&lt;function name=&quot;character_creation_function&quot;&gt;<br/>  msg (&quot;What is your name?&quot;)<br/>  get input {<br/>    player&#46;alias // (or you can do&#58; game&#46;pov&#46;alias) (game&#46;pov = your currently controlled Player Object) (your default player object is &quot;player&quot;, but you can create more player objects too and switch~change control between them)<br/>  }<br/>&lt;/function&gt;<br/><br/>&lt;object name=&quot;friend_1&quot;&gt;<br/>  &lt;alias&gt;John&lt;/alias&gt;<br/>  &lt;displayverbs=&quot;simplestringlist&quot;&gt;chat&lt;/displayverbs&gt;<br/>  &lt;chat type=&quot;script&quot;&gt;<br/>    msg (&quot;You say hello, and &quot; + this&#46;alias + &quot; returns the greeting, \\&quot;Hello &quot; + game&#46;pov&#46;alias + &quot;!\\&quot;)<br/>  &lt;/chat&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>--------------------------------------<br/><br/>for creating a set of choices to choose from, there's a few ways to do this:<br/><br/>***<br/><br/>show menu:<br/><br/>(see above posts for the longer process of manually creating the list first and then &quot;calling upon&quot; the list, that you've created, in the &quot;show menu&quot; function)<br/><br/>or<br/><br/>you can use the &quot;split&quot; function command, it automatically creates the list with only one simple line instead (much nicer, hehe)<br/><br/>split (&quot;choice_one; choice_two; choice_etc&quot; , &quot;;&quot;)<br/><br/>in full:<br/><br/><pre><code>show menu (&quot;your_question&quot;, split (&quot;choice_one; choice_two; choice_3; etc_etc_etc&quot; , &quot;;&quot;), true_or_false__for_whether_you_want_to_be_able_to_cancel_your_choice_aka_go_back) {<br/>  (etc etc etc script)<br/>}</code></pre><br/><br/>****<br/><br/>another way is to create your own type of list-menu (such as for example, if you don't like the window that comes up with the &quot;show menu&quot; or for whatever other reasons for doing it this way too, as shown below):<br/><br/><pre><code>msg (&quot;Type the number of the choice you want&quot;)<br/>msg (&quot;(1) choice_one, (2) choice_two, (3) choice_three, &#46;&#46;&#46; etc etc etc&quot;)<br/>get input {<br/>  switch (result) {<br/>    case (&quot;1)&quot; {<br/>      msg (&quot;choice_one_response&quot;) // you can do whatever script you want, I'm only using the &quot;msg&quot; script for an example<br/>    }<br/>    case (&quot;2&quot;) {<br/>      msg (&quot;choice_two_response&quot;) // you can do whatever script you want, I'm only using the &quot;msg&quot; script for an example<br/>   }<br/>   case (&quot;3&quot;) {<br/>     msg (&quot;choice_three_response&quot;) // you can do whatever script you want, I'm only using the &quot;msg&quot; script for an example<br/>   }<br/> }<br/>}</code></pre><br/><br/>or you can use lists or dictionaries in the same way, but these are a bit more difficult to learn how to use.<br/><br/>The &quot;switch&quot; function command is pretty simple (hopefully) to understand it. The &quot;switch&quot; is just a more tidy~organized and faster way of doing (instead of having~doing) many individual &quot;if&quot; scripts.<br/><br/>------------------<br/><br/>how the &quot;get input&quot; (and all the code &quot;definers&quot; too) work:<br/><br/>Algebraic Substitution (though you've got to think about it in the correct way, as it's a bit tricky to grasp correctly)<br/><br/>here's a conceptual model of how it works:<br/><br/>HK&lt;=&gt;result&lt;=&gt;game.pov.alias<br/><br/>input == output<br/>HK =&gt; result =&gt; game.pov.alias == game.pov.alias =&gt; result =&gt; HK<br/>(this is mostly the same structure as how computers &quot;talk&quot; to one another, except that it goes both ways, unlike the above, which is only going from left=&quot;input&quot; to right=&quot;output&quot;)<br/>( the 7 layered OSI model: <!-- m --><a class=\"postlink\" href=\"http://www.petri.co.il/images/osi_model.JPG\">http://www.petri.co.il/images/osi_model.JPG</a><!-- m --> )<br/><br/>[ (game player~user 's) input: &quot;HK&quot; -&gt; result -&gt; game.pov.alias ] -&gt; [ game.pov.alias -&gt; result -&gt; HK : (game engine's) output ]<br/><br/>(game player~user 's) input: &quot;HK&quot; -&gt; result -&gt; game.pov.alias<br/>(game engine's) output: game.pov.alias -&gt; result -&gt; HK",
      "PostDate": "2013-05-23T02:27:43+01:00",
      "LastEditDate": null
    }
  ]
}
