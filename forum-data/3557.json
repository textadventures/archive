{
  "Topic": {
    "TopicId": "3557",
    "ForumId": "10",
    "Title": "Quest mindblower for the day",
    "LastUpdated": "2013-03-23T19:55:19+00:00",
    "ReplyCount": 6
  },
  "Posts": [
    {
      "PostId": "23574",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Given these definitions:\n\n[code:2gdnuccl]  &lt;type name=&quot;BaseA&quot;&gt;\n    &lt;attr1&gt;foo&lt;/attr1&gt;\n  &lt;/type&gt;\n  &lt;object name=&quot;Obj1&quot;&gt;\n    &lt;inherit name=&quot;BaseA&quot;/&gt;\n    &lt;attr1&gt;bar&lt;/attr1&gt;\n  &lt;/object&gt;[/code:2gdnuccl]\n\nwhat will this code print out?\n\n[code:2gdnuccl]      msg (&quot;Before Obj1&#46;attr1 = &quot; + Obj1&#46;attr1)\n      Obj1&#46;attr1 = null\n      msg (&quot;After Obj1&#46;attr1 = &quot; + Obj1&#46;attr1)[/code:2gdnuccl]\n\nThe answer is:\nv\nv\nv\nv\nv\nv\nv\nv\nv\nv\nv\nv\nv\nv\nv\nv\nv\nv\nv\nv\nv\nv\nv\nBefore Obj1.attr1 = bar\nAfter Obj1.attr1 = foo\n\nMaybe that was clear to everyone, but it confirms a bit for me how types are used in Quest - and that attribute lookup is done dynamically at runtime.\n\nThe reason why this happens is that assigning null to attr1 in Obj1 removes the attribute from that object - and the attribute in the base type then shows through. So... if you have an attribute in a base type, there is *no way* to get rid of it. Ever.",
      "EditableFormat": "bbcode",
      "HTML": "Given these definitions:<br/><br/><pre><code>  &lt;type name=&quot;BaseA&quot;&gt;<br/>    &lt;attr1&gt;foo&lt;/attr1&gt;<br/>  &lt;/type&gt;<br/>  &lt;object name=&quot;Obj1&quot;&gt;<br/>    &lt;inherit name=&quot;BaseA&quot;/&gt;<br/>    &lt;attr1&gt;bar&lt;/attr1&gt;<br/>  &lt;/object&gt;</code></pre><br/><br/>what will this code print out?<br/><br/><pre><code>      msg (&quot;Before Obj1&#46;attr1 = &quot; + Obj1&#46;attr1)<br/>      Obj1&#46;attr1 = null<br/>      msg (&quot;After Obj1&#46;attr1 = &quot; + Obj1&#46;attr1)</code></pre><br/><br/>The answer is:<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>v<br/>Before Obj1.attr1 = bar<br/>After Obj1.attr1 = foo<br/><br/>Maybe that was clear to everyone, but it confirms a bit for me how types are used in Quest - and that attribute lookup is done dynamically at runtime.<br/><br/>The reason why this happens is that assigning null to attr1 in Obj1 removes the attribute from that object - and the attribute in the base type then shows through. So... if you have an attribute in a base type, there is *no way* to get rid of it. Ever.",
      "PostDate": "2013-03-19T23:25:16+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23576",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Good discovery, will be useful for anyone who wants to remove attributes, to know about this conundrum, with using object types (inherited attributes).",
      "EditableFormat": "bbcode",
      "HTML": "Good discovery, will be useful for anyone who wants to remove attributes, to know about this conundrum, with using object types (inherited attributes).",
      "PostDate": "2013-03-20T04:14:00+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23581",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "Setting an attribute to null deletes the attribute from the object. This means that the attribute from the underlying type is now &quot;showing through&quot; the hole left behind. The effect is the same as if the attribute had never been set on the object in the first place.\n\nThis is a bug I suppose, but there's no other way of deleting an attribute at the moment, so we would need to think about adding one - and then think about what the effect of deleting an attribute should be in this case too.",
      "EditableFormat": "bbcode",
      "HTML": "Setting an attribute to null deletes the attribute from the object. This means that the attribute from the underlying type is now &quot;showing through&quot; the hole left behind. The effect is the same as if the attribute had never been set on the object in the first place.<br/><br/>This is a bug I suppose, but there's no other way of deleting an attribute at the moment, so we would need to think about adding one - and then think about what the effect of deleting an attribute should be in this case too.",
      "PostDate": "2013-03-20T09:58:57+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23585",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "To be honest, with all the code I have written so far, that line above is the first time I ever actually deleted an attribute, and that was just to see what would happen. It has never come up so far that I needed that ability. (Perhaps others without a &quot;traditional&quot; programming background will find all sorts of idioms for that, but I just don't think that way.)\n\nI just enjoyed having that peek into how Quest operates. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "To be honest, with all the code I have written so far, that line above is the first time I ever actually deleted an attribute, and that was just to see what would happen. It has never come up so far that I needed that ability. (Perhaps others without a &quot;traditional&quot; programming background will find all sorts of idioms for that, but I just don't think that way.)<br/><br/>I just enjoyed having that peek into how Quest operates. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-03-20T11:29:44+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23596",
      "UserId": 0,
      "Username": "levicki",
      "UserAvatar": null,
      "UserGravatar": "be743462cd257b8490bed6cc0d3795ea",
      "EditableText": "In my opinion, setting the attribute to null should not delete it. Null is a valid value. I would also like to be able to set attributes of type &quot;object&quot; to null in theb base type so that I don't have to add them to each object manually, and then set their value later in the code or in the editor.\n\nAlso, what I would expect if you do delete the attribute would be that the base type attribute does not apply to that object anymore instead of &quot;showing through&quot;.\n\nRationale:\nIf you can already override the base type attribute value, you should be able to override it existence too.",
      "EditableFormat": "bbcode",
      "HTML": "In my opinion, setting the attribute to null should not delete it. Null is a valid value. I would also like to be able to set attributes of type &quot;object&quot; to null in theb base type so that I don't have to add them to each object manually, and then set their value later in the code or in the editor.<br/><br/>Also, what I would expect if you do delete the attribute would be that the base type attribute does not apply to that object anymore instead of &quot;showing through&quot;.<br/><br/>Rationale:<br/>If you can already override the base type attribute value, you should be able to override it existence too.",
      "PostDate": "2013-03-20T18:14:20+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23597",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "Just a question: is this a theoretical or a practical problem? I mean Quest is not a all-embracing language like Java or C#, it's a script language of a textadventure creator. I think only 0.01% of all users will use this feature and for this few people it shouldn't be a problem to find an alternative.",
      "EditableFormat": "bbcode",
      "HTML": "Just a question: is this a theoretical or a practical problem? I mean Quest is not a all-embracing language like Java or C#, it's a script language of a textadventure creator. I think only 0.01% of all users will use this feature and for this few people it shouldn't be a problem to find an alternative.",
      "PostDate": "2013-03-20T19:52:47+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23656",
      "UserId": 0,
      "Username": "levicki",
      "UserAvatar": null,
      "UserGravatar": "be743462cd257b8490bed6cc0d3795ea",
      "EditableText": "[quote=&quot;Pertex&quot;:2bn2qslu]Just a question: is this a theoretical or a practical problem? I mean Quest is not a all-embracing language like Java or C#, it's a script language of a textadventure creator. I think only 0.01% of all users will use this feature and for this few people it shouldn't be a problem to find an alternative.[/quote:2bn2qslu]\n\nIf you are asking about attribute overloading, I am not sure what to answer because I haven't given it much thought yet.\n\nIf you are asking about the effect of assigning null, to me it would matter what it does.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Pertex wrote:</cite>Just a question: is this a theoretical or a practical problem? I mean Quest is not a all-embracing language like Java or C#, it's a script language of a textadventure creator. I think only 0.01% of all users will use this feature and for this few people it shouldn't be a problem to find an alternative.</blockquote><br/><br/>If you are asking about attribute overloading, I am not sure what to answer because I haven't given it much thought yet.<br/><br/>If you are asking about the effect of assigning null, to me it would matter what it does.",
      "PostDate": "2013-03-23T19:55:19+00:00",
      "LastEditDate": null
    }
  ]
}
