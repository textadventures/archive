{
  "Topic": {
    "TopicId": "3630",
    "ForumId": "10",
    "Title": "Bob and the defibrillator",
    "LastUpdated": "2013-04-20T21:36:17+01:00",
    "ReplyCount": 7
  },
  "Posts": [
    {
      "PostId": "24127",
      "UserId": 0,
      "Username": "Candacis",
      "UserAvatar": "6829_1366365668.jpg",
      "UserGravatar": "7a1eed5e1c199fcb7203af5a03714db6",
      "EditableText": "Hi there, I'm really new at Quest and so I'm trying to do the tutorial. I got to the &quot;More things to do with objects&quot; chapter.\nFirst, I think, I spotted a little mistake in the tutorial:\n\n[quote:204ml9yx]First, go to Bob's inventory tab, and double click &quot;defibrillator&quot; in the &quot;Use&quot; table to bring up the Script Editor.[/quote:204ml9yx]\n\nThis confused me at first, because the tutorial used the Use/Take tab all the time and not the inventory tab. Is this from an older version?\n\nAnyway, now I'm stuck at this:\n\n[quote:204ml9yx]Note that if you pick up the defibrillator and go to the kitchen, &quot;use defibrillator&quot; will still work. It would be pretty remarkable for a defibrillator to work at such a long range, so consider adding an &quot;if&quot; command to the &quot;revive bob&quot; procedure. You can select &quot;player is in room&quot; from the list of conditions to check whether the player is in the lounge before carrying out the defibrillation. If they're not in the lounge, print a suitably sarcastic message. [/quote:204ml9yx]\n\nI don't even know where to begin. I assumed I have to alter the script on the defibrillator use/take tab under &quot;use (on its own)&quot;. I've tried to make a new script, starting with &quot;If&quot; and &quot;player is in room&quot;. But when I try to print a message under the &quot;else&quot; tab, I get an error:\n\n[code:204ml9yx]System&#46;NullReferenceException&#58; Object reference not set to an instance of an object&#46;\n   at TextAdventures&#46;Quest&#46;EditorControls&#46;ScriptEditorControl&#46;AddNewScriptCommand(String script)\n   at TextAdventures&#46;Quest&#46;EditorControls&#46;ScriptEditorControl&#46;cmdAddScript_Click(Object sender, RoutedEventArgs e)\n   at System&#46;Windows&#46;RoutedEventHandlerInfo&#46;InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\n   at System&#46;Windows&#46;EventRoute&#46;InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\n   at System&#46;Windows&#46;UIElement&#46;RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)\n   at System&#46;Windows&#46;UIElement&#46;RaiseEvent(RoutedEventArgs e)\n   at System&#46;Windows&#46;Controls&#46;Primitives&#46;ButtonBase&#46;OnClick()\n   at System&#46;Windows&#46;Controls&#46;Button&#46;OnClick()\n   at System&#46;Windows&#46;Controls&#46;Primitives&#46;ButtonBase&#46;OnMouseLeftButtonUp(MouseButtonEventArgs e)\n   at System&#46;Windows&#46;UIElement&#46;OnMouseLeftButtonUpThunk(Object sender, MouseButtonEventArgs e)\n   at System&#46;Windows&#46;Input&#46;MouseButtonEventArgs&#46;InvokeEventHandler(Delegate genericHandler, Object genericTarget)\n   at System&#46;Windows&#46;RoutedEventArgs&#46;InvokeHandler(Delegate handler, Object target)\n   at System&#46;Windows&#46;RoutedEventHandlerInfo&#46;InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\n   at System&#46;Windows&#46;EventRoute&#46;InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\n   at System&#46;Windows&#46;UIElement&#46;ReRaiseEventAs(DependencyObject sender, RoutedEventArgs args, RoutedEvent newEvent)\n   at System&#46;Windows&#46;UIElement&#46;OnMouseUpThunk(Object sender, MouseButtonEventArgs e)\n   at System&#46;Windows&#46;Input&#46;MouseButtonEventArgs&#46;InvokeEventHandler(Delegate genericHandler, Object genericTarget)\n   at System&#46;Windows&#46;RoutedEventArgs&#46;InvokeHandler(Delegate handler, Object target)\n   at System&#46;Windows&#46;RoutedEventHandlerInfo&#46;InvokeHandler(Object target, RoutedEventArgs routedEventArgs)\n   at System&#46;Windows&#46;EventRoute&#46;InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\n   at System&#46;Windows&#46;UIElement&#46;RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)\n   at System&#46;Windows&#46;UIElement&#46;RaiseTrustedEvent(RoutedEventArgs args)\n   at System&#46;Windows&#46;UIElement&#46;RaiseEvent(RoutedEventArgs args, Boolean trusted)\n   at System&#46;Windows&#46;Input&#46;InputManager&#46;ProcessStagingArea()\n   at System&#46;Windows&#46;Input&#46;InputManager&#46;ProcessInput(InputEventArgs input)\n   at System&#46;Windows&#46;Input&#46;InputProviderSite&#46;ReportInput(InputReport inputReport)\n   at System&#46;Windows&#46;Interop&#46;HwndMouseInputProvider&#46;ReportInput(IntPtr hwnd, InputMode mode, Int32 timestamp, RawMouseActions actions, Int32 x, Int32 y, Int32 wheel)\n   at System&#46;Windows&#46;Interop&#46;HwndMouseInputProvider&#46;FilterMessage(IntPtr hwnd, WindowMessage msg, IntPtr wParam, IntPtr lParam, Boolean&amp; handled)\n   at System&#46;Windows&#46;Interop&#46;HwndSource&#46;InputFilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp; handled)\n   at MS&#46;Win32&#46;HwndWrapper&#46;WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp; handled)\n   at MS&#46;Win32&#46;HwndSubclass&#46;DispatcherCallbackOperation(Object o)\n   at System&#46;Windows&#46;Threading&#46;ExceptionWrapper&#46;InternalRealCall(Delegate callback, Object args, Int32 numArgs)\n   at MS&#46;Internal&#46;Threading&#46;ExceptionFilterHelper&#46;TryCatchWhen(Object source, Delegate method, Object args, Int32 numArgs, Delegate catchHandler)[/code:204ml9yx]\n\nThis is a screenshot from my problem page:\n\n[img:204ml9yx]http&#58;//i1135&#46;photobucket&#46;com/albums/m629/Lhassar/tutorial_quest_zpsb38ae599&#46;jpg[/img:204ml9yx]\n\nCan someone help me? What did I do wrong?",
      "EditableFormat": "bbcode",
      "HTML": "Hi there, I'm really new at Quest and so I'm trying to do the tutorial. I got to the &quot;More things to do with objects&quot; chapter.<br/>First, I think, I spotted a little mistake in the tutorial:<br/><br/><blockquote><p>First, go to Bob's inventory tab, and double click &quot;defibrillator&quot; in the &quot;Use&quot; table to bring up the Script Editor.</p></blockquote><br/><br/>This confused me at first, because the tutorial used the Use/Take tab all the time and not the inventory tab. Is this from an older version?<br/><br/>Anyway, now I'm stuck at this:<br/><br/><blockquote><p>Note that if you pick up the defibrillator and go to the kitchen, &quot;use defibrillator&quot; will still work. It would be pretty remarkable for a defibrillator to work at such a long range, so consider adding an &quot;if&quot; command to the &quot;revive bob&quot; procedure. You can select &quot;player is in room&quot; from the list of conditions to check whether the player is in the lounge before carrying out the defibrillation. If they're not in the lounge, print a suitably sarcastic message. </p></blockquote><br/><br/>I don't even know where to begin. I assumed I have to alter the script on the defibrillator use/take tab under &quot;use (on its own)&quot;. I've tried to make a new script, starting with &quot;If&quot; and &quot;player is in room&quot;. But when I try to print a message under the &quot;else&quot; tab, I get an error:<br/><br/><pre><code>System&#46;NullReferenceException&#58; Object reference not set to an instance of an object&#46;<br/>   at TextAdventures&#46;Quest&#46;EditorControls&#46;ScriptEditorControl&#46;AddNewScriptCommand(String script)<br/>   at TextAdventures&#46;Quest&#46;EditorControls&#46;ScriptEditorControl&#46;cmdAddScript_Click(Object sender, RoutedEventArgs e)<br/>   at System&#46;Windows&#46;RoutedEventHandlerInfo&#46;InvokeHandler(Object target, RoutedEventArgs routedEventArgs)<br/>   at System&#46;Windows&#46;EventRoute&#46;InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)<br/>   at System&#46;Windows&#46;UIElement&#46;RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)<br/>   at System&#46;Windows&#46;UIElement&#46;RaiseEvent(RoutedEventArgs e)<br/>   at System&#46;Windows&#46;Controls&#46;Primitives&#46;ButtonBase&#46;OnClick()<br/>   at System&#46;Windows&#46;Controls&#46;Button&#46;OnClick()<br/>   at System&#46;Windows&#46;Controls&#46;Primitives&#46;ButtonBase&#46;OnMouseLeftButtonUp(MouseButtonEventArgs e)<br/>   at System&#46;Windows&#46;UIElement&#46;OnMouseLeftButtonUpThunk(Object sender, MouseButtonEventArgs e)<br/>   at System&#46;Windows&#46;Input&#46;MouseButtonEventArgs&#46;InvokeEventHandler(Delegate genericHandler, Object genericTarget)<br/>   at System&#46;Windows&#46;RoutedEventArgs&#46;InvokeHandler(Delegate handler, Object target)<br/>   at System&#46;Windows&#46;RoutedEventHandlerInfo&#46;InvokeHandler(Object target, RoutedEventArgs routedEventArgs)<br/>   at System&#46;Windows&#46;EventRoute&#46;InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)<br/>   at System&#46;Windows&#46;UIElement&#46;ReRaiseEventAs(DependencyObject sender, RoutedEventArgs args, RoutedEvent newEvent)<br/>   at System&#46;Windows&#46;UIElement&#46;OnMouseUpThunk(Object sender, MouseButtonEventArgs e)<br/>   at System&#46;Windows&#46;Input&#46;MouseButtonEventArgs&#46;InvokeEventHandler(Delegate genericHandler, Object genericTarget)<br/>   at System&#46;Windows&#46;RoutedEventArgs&#46;InvokeHandler(Delegate handler, Object target)<br/>   at System&#46;Windows&#46;RoutedEventHandlerInfo&#46;InvokeHandler(Object target, RoutedEventArgs routedEventArgs)<br/>   at System&#46;Windows&#46;EventRoute&#46;InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)<br/>   at System&#46;Windows&#46;UIElement&#46;RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)<br/>   at System&#46;Windows&#46;UIElement&#46;RaiseTrustedEvent(RoutedEventArgs args)<br/>   at System&#46;Windows&#46;UIElement&#46;RaiseEvent(RoutedEventArgs args, Boolean trusted)<br/>   at System&#46;Windows&#46;Input&#46;InputManager&#46;ProcessStagingArea()<br/>   at System&#46;Windows&#46;Input&#46;InputManager&#46;ProcessInput(InputEventArgs input)<br/>   at System&#46;Windows&#46;Input&#46;InputProviderSite&#46;ReportInput(InputReport inputReport)<br/>   at System&#46;Windows&#46;Interop&#46;HwndMouseInputProvider&#46;ReportInput(IntPtr hwnd, InputMode mode, Int32 timestamp, RawMouseActions actions, Int32 x, Int32 y, Int32 wheel)<br/>   at System&#46;Windows&#46;Interop&#46;HwndMouseInputProvider&#46;FilterMessage(IntPtr hwnd, WindowMessage msg, IntPtr wParam, IntPtr lParam, Boolean&amp; handled)<br/>   at System&#46;Windows&#46;Interop&#46;HwndSource&#46;InputFilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp; handled)<br/>   at MS&#46;Win32&#46;HwndWrapper&#46;WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean&amp; handled)<br/>   at MS&#46;Win32&#46;HwndSubclass&#46;DispatcherCallbackOperation(Object o)<br/>   at System&#46;Windows&#46;Threading&#46;ExceptionWrapper&#46;InternalRealCall(Delegate callback, Object args, Int32 numArgs)<br/>   at MS&#46;Internal&#46;Threading&#46;ExceptionFilterHelper&#46;TryCatchWhen(Object source, Delegate method, Object args, Int32 numArgs, Delegate catchHandler)</code></pre><br/><br/>This is a screenshot from my problem page:<br/><br/><img src=\"http&#58;//i1135&#46;photobucket&#46;com/albums/m629/Lhassar/tutorial_quest_zpsb38ae599&#46;jpg\" alt=\"\" /><br/><br/>Can someone help me? What did I do wrong?",
      "PostDate": "2013-04-19T11:15:01+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24129",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "Yes , you are right. I changed the first point in the wiki.\n\nFor your second problem we need more information. Could you click this button\n[attachment=0:1lxm20v3]<!-- ia0 -->tutorial_quest_zpsb38ae599.jpg<!-- ia0 -->[/attachment:1lxm20v3]\nand post the complete code here?",
      "EditableFormat": "bbcode",
      "HTML": "Yes , you are right. I changed the first point in the wiki.<br/><br/>For your second problem we need more information. Could you click this button<br/><div><img src=\"/attachment/589\" alt=\"tutorial_quest_zpsb38ae599.jpg\" /></div><br/>and post the complete code here?",
      "PostDate": "2013-04-19T14:29:58+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24130",
      "UserId": 0,
      "Username": "Candacis",
      "UserAvatar": "6829_1366365668.jpg",
      "UserGravatar": "7a1eed5e1c199fcb7203af5a03714db6",
      "EditableText": "Thanks for the fast reply ^_^\n\nHere is the code you asked for:\n\n[code:1zpjetlc]if (game&#46;pov&#46;parent = lounge) {\n  revive Bob\n}\nelse {\n}[/code:1zpjetlc]\n\nIf I try to get a else message, it doesn't let me and displays the error I posted earlier.\nHere is the code from my revive Bob function:\n\n[code:1zpjetlc]if (GetBoolean(Bob, &quot;alive&quot;)) {\n  msg (&quot;Bob is alive&#46; You don't need to use the defibrillator again&#46;&quot;)\n}\nelse {\n  msg (&quot;Miraculously, the defibrillator lived up to is promise, and Bob is now alive again&#46; He says his head feels kind of fuzzy&#46;&quot;)\n  SetObjectFlagOn (Bob, &quot;alive&quot;)\n}[/code:1zpjetlc]\n\nAm I even on the right path trying to get an if command unter the defibrillator use (on its own) tab? I'm not really familiar with code language except a little html and css.",
      "EditableFormat": "bbcode",
      "HTML": "Thanks for the fast reply ^_^<br/><br/>Here is the code you asked for:<br/><br/><pre><code>if (game&#46;pov&#46;parent = lounge) {<br/>  revive Bob<br/>}<br/>else {<br/>}</code></pre><br/><br/>If I try to get a else message, it doesn't let me and displays the error I posted earlier.<br/>Here is the code from my revive Bob function:<br/><br/><pre><code>if (GetBoolean(Bob, &quot;alive&quot;)) {<br/>  msg (&quot;Bob is alive&#46; You don't need to use the defibrillator again&#46;&quot;)<br/>}<br/>else {<br/>  msg (&quot;Miraculously, the defibrillator lived up to is promise, and Bob is now alive again&#46; He says his head feels kind of fuzzy&#46;&quot;)<br/>  SetObjectFlagOn (Bob, &quot;alive&quot;)<br/>}</code></pre><br/><br/>Am I even on the right path trying to get an if command unter the defibrillator use (on its own) tab? I'm not really familiar with code language except a little html and css.",
      "PostDate": "2013-04-19T17:15:04+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24132",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "Strange, I don't get this message. I don't know why this message appears. Are you working with the online or the oflline editor?\n\nAnd no, you are not on the right way. <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> &quot;use (on its own)&quot; is correct if you want to &quot;use defibrilator&quot;. If you want to &quot;use defibrilator on bob&quot; you have to add a script at the &quot;use this on other object&quot; section\n\n[attachment=0:28wuwrjc]<!-- ia0 -->sshot-1.png<!-- ia0 -->[/attachment:28wuwrjc]",
      "EditableFormat": "bbcode",
      "HTML": "Strange, I don't get this message. I don't know why this message appears. Are you working with the online or the oflline editor?<br/><br/>And no, you are not on the right way. <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> &quot;use (on its own)&quot; is correct if you want to &quot;use defibrilator&quot;. If you want to &quot;use defibrilator on bob&quot; you have to add a script at the &quot;use this on other object&quot; section<br/><br/><div><img src=\"/attachment/590\" alt=\"sshot-1.png\" /></div>",
      "PostDate": "2013-04-19T19:48:10+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24139",
      "UserId": 0,
      "Username": "Candacis",
      "UserAvatar": "6829_1366365668.jpg",
      "UserGravatar": "7a1eed5e1c199fcb7203af5a03714db6",
      "EditableText": "I'm using the offline editor and the newest version of Quest (downloaded it yesterday).\nI thought, if you want to use defibrillator on bob, I have to add a script under Bobs use/take script. Is this not enough? Is your approach to add a script under the defibrillator &quot;use this on other objects&quot; better? Should I then delete the script in the use/take tab from Bob? I'm just trying to understand.\n\nOkay, I just tried again to add a message under the &quot;else&quot; line and now it worked properly. ^_^ I don't know what I did to get the error message last time. Sorry for the trouble  <!-- s:oops: --><img src=\"{SMILIES_PATH}/icon_redface.gif\" alt=\":oops:\" title=\"Embarassed\" /><!-- s:oops: -->",
      "EditableFormat": "bbcode",
      "HTML": "I'm using the offline editor and the newest version of Quest (downloaded it yesterday).<br/>I thought, if you want to use defibrillator on bob, I have to add a script under Bobs use/take script. Is this not enough? Is your approach to add a script under the defibrillator &quot;use this on other objects&quot; better? Should I then delete the script in the use/take tab from Bob? I'm just trying to understand.<br/><br/>Okay, I just tried again to add a message under the &quot;else&quot; line and now it worked properly. ^_^ I don't know what I did to get the error message last time. Sorry for the trouble  <!-- s:oops: --><img src=\"{SMILIES_PATH}/icon_redface.gif\" alt=\":oops:\" title=\"Embarassed\" /><!-- s:oops: -->",
      "PostDate": "2013-04-19T23:19:04+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24143",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'm not sure if this is the error, but I would constantly get errors when I was a noob working with the GUI~Editor and with the tutorial, due to my deleting of script lines (due to messing up and putting in the wrong script or at the wrong &quot;nesting&quot; ~ indenting level ~ the wrong &quot;add new script&quot; button or whatever other mistake I'd make), and not then re-adding a script there at that spot. Quest is waiting for me to put in the script line that I want, and thus when I don't do so, it gives me the error message, when I try to add in another script line elsewhere (not realizing at the time that I have the &quot;hanging&quot; empty script line that quest needs me to re-add in for it, and so, quest blocks me from doing so. Upon saving, exiting ~ closing quest, and re-opening ~ starting quest, the error message is now removed, and I can add script lines again anywhere (however, this might be only temporary, as the missing~&quot;hanging&quot; empty script line remains still, I can't remember, if the error message re-pops up again, or not).\n\nI could help you through the tutorial, if you want, though it'll take me a bit of time, to re-read the updated tutorial to get to the spot that you're at, so that I know what I'm doing, so that I can then help you through it correctly. As it's been quite a while since I've done the tutorial (and a now obsolete~old tutorial at that too), so I don't remember much of the content of it, and nor of the defibriliator part, though it shouldn't take me too long to get &quot;up-to-speed&quot; on the new tutorial, and be ready to help you. The only problem though, is that I'm very busy with things, work, I got to do in real life (yes, even on the weekend, sighs).\n\nI'll see if I can find~have the time to work on this for you, but I may not have the time to do so too.",
      "EditableFormat": "bbcode",
      "HTML": "I'm not sure if this is the error, but I would constantly get errors when I was a noob working with the GUI~Editor and with the tutorial, due to my deleting of script lines (due to messing up and putting in the wrong script or at the wrong &quot;nesting&quot; ~ indenting level ~ the wrong &quot;add new script&quot; button or whatever other mistake I'd make), and not then re-adding a script there at that spot. Quest is waiting for me to put in the script line that I want, and thus when I don't do so, it gives me the error message, when I try to add in another script line elsewhere (not realizing at the time that I have the &quot;hanging&quot; empty script line that quest needs me to re-add in for it, and so, quest blocks me from doing so. Upon saving, exiting ~ closing quest, and re-opening ~ starting quest, the error message is now removed, and I can add script lines again anywhere (however, this might be only temporary, as the missing~&quot;hanging&quot; empty script line remains still, I can't remember, if the error message re-pops up again, or not).<br/><br/>I could help you through the tutorial, if you want, though it'll take me a bit of time, to re-read the updated tutorial to get to the spot that you're at, so that I know what I'm doing, so that I can then help you through it correctly. As it's been quite a while since I've done the tutorial (and a now obsolete~old tutorial at that too), so I don't remember much of the content of it, and nor of the defibriliator part, though it shouldn't take me too long to get &quot;up-to-speed&quot; on the new tutorial, and be ready to help you. The only problem though, is that I'm very busy with things, work, I got to do in real life (yes, even on the weekend, sighs).<br/><br/>I'll see if I can find~have the time to work on this for you, but I may not have the time to do so too.",
      "PostDate": "2013-04-20T07:48:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24144",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Note: this is for quest v5.3, I've not updated to v5.4 yet. Some things might be different, but I think most will be the same, hopefully.\n\n----------------------\n\nA Partial Tutorial Guide:\n\nThe &quot;GUI&quot; (Graphical User Interface) or &quot;Editor&quot; is the screen or window that you can click on, and choose the objects and settings~options, with dropdown menus for you to choose from. Your own computer's~window's desktop is an example of a GUI~Editor (compared to using the MS Dos like command prompts). This is made for noobs, and thus a big appeal~mission of Alex' Quest, to make a text adventure game available for non-coders to use (while still as well also being even more powerful a text adventure game engine for coders to use too).\n\non the left side (the &quot;left pane&quot;) is the &quot;tree of stuff&quot;, a new game's tree would look like this:\n\n[b:1bgja13i]Objects[/b:1bgja13i] (everything is either an object or a script. A script is code that which does, conditions, and~or defines stuff)\n-&gt; [b:1bgja13i]Game[/b:1bgja13i] (this is a unique object, the Game Object)\n-&gt;-&gt; [b:1bgja13i]Verbs[/b:1bgja13i] (&quot;Local&quot; Verbs. Local means that the verb ONLY works on that specific object that you created it for. Verbs show up as buttons on the right pane, &quot;Places and Objects&quot;, and as &quot;hyperlinks = the blue text that you can click on for options&quot; when you are playing the game)\n-&gt;-&gt; [b:1bgja13i]Commands[/b:1bgja13i] (&quot;Universal&quot; Verbs. Universal means for commands that the command can be &quot;attempted = depends on how the command is set up&quot; on any object anywhere. Commands require that the game player actually type in the command itself)\n-&gt; [b:1bgja13i]Room[/b:1bgja13i] (the default and initial Room Object. A &quot;Room&quot; type object)\n-&gt;-&gt; [b:1bgja13i]Player[/b:1bgja13i] (the default Player Object. the Player Objects are another unique object. you can create many other Player Objects too, and be able to switch between them)\n[b:1bgja13i]Functions[/b:1bgja13i] (&quot;passive&quot; powerful action scripts. Passive means that quest doesn't automatically and nor constantly do the script)\n[b:1bgja13i]Timers[/b:1bgja13i] (&quot;clock&quot; scripts = used to create seconds, minutes, hours, and~or etc ... though very unpractical to go into days, weeks, months, years, lol)\n[b:1bgja13i]Walkthrough[/b:1bgja13i] (for game making and~or game testing)\n[b:1bgja13i]Advanced[/b:1bgja13i]\n-&gt; [b:1bgja13i]Included Libraries[/b:1bgja13i] (a game file made as a &quot;library&quot; file, so that others can put it into their own game and use it's stuff, as their Included Libraries, notice the default two Included Libraries: Core.aslx = the game engine, and english.aslx = english language text~font)\n-&gt;-&gt; [b:1bgja13i]English.aslx[/b:1bgja13i]\n-&gt;-&gt; [b:1bgja13i]Core.aslx[/b:1bgja13i]\n[b:1bgja13i]Templates[/b:1bgja13i] (a useful &quot;tool&quot; for easy~&quot;Universal&quot; labeling things, making messages too ,and~or to change the labelings of things = such as for foreign language game makers, converting~translating an english game into their language)\n[b:1bgja13i]Dynamic Templates[/b:1bgja13i] (see Templates, basically it's the same in differences to a Template, as with the example of: Print a [MESSAGE] = just text = Template vs Print an [EXPRESSION] = script and~or text = Dynamic Template)\n[b:1bgja13i]Object Types[/b:1bgja13i] (think of this as creating an &quot;object group&quot;, such as for example a &quot;monster_type&quot;. I set all the attributes such as &quot;dead=false&quot;, &quot;hp&quot;, &quot;mp&quot;, and etc, that I want for this Object Type, &quot;monster_type&quot;, and then for each object that I create to be a &quot;monster object&quot;, all I have to do is to add the &quot;Inherited&quot; attribute, &quot;monster_type&quot;, and that object gets all of the attributes of that object type, and so it automatically gives that object, the attributes: &quot;dead=false&quot;, &quot;hp&quot;, &quot;mp&quot;, and etc. I can do this again, for another object that I want to be a &quot;monster object&quot;, by again just adding the &quot;Inherited&quot; attribute, &quot;monster_type&quot;. so, this saves me the redundency of having to manually add these same attributes over and over again for every object that I make and want to be a &quot;monster object&quot;. I think &quot;room&quot; objects, &quot;object&quot; objects, and &quot;object and/or room&quot; objects are all Object Types. You can see &quot;Inherited&quot; = Object Type = &quot;Type&quot; Attributes by: Player -&gt; Attributes Tab. All the light greyed stuff, under &quot;Inherited Types&quot; and &quot;Attributes ~ the bottom box&quot; are attributes that are automatically given from the Inherited Type, &quot;defaultplayer&quot; or the other Inherited Type attributes too. So, yes, you can assign an Inherited Type upon~within another Inherited Type, you can have many layers~levels deep of Inherited Types and their Attributes for just a single Inherited Type)\n[b:1bgja13i]Javascript[/b:1bgja13i] (this is for coders to use alternative additional coding, Javascript, to do more cool stuff, lol)\n\nand, the right side (right pane),\n\nis additional details~options menu~window, for whatever you've clicked on (have highlighted) in the left pane (the &quot;tree of stuff&quot;)\n\nlastly, there's also the bar at the top:\n\nFile ~ Edit ~ [b:1bgja13i]Add[/b:1bgja13i] ~ Tools ~ Help\n\nThe &quot;[b:1bgja13i]Add[/b:1bgja13i]&quot; is also (just like the right pane) based upon what you got highlighted in the left pane (the tree of stuff).\n\nNotable &quot;[b:1bgja13i]Add[/b:1bgja13i]&quot; choices are:\n\n[b:1bgja13i]Object[/b:1bgja13i] (let's you add an &quot;object&quot; object)\n[b:1bgja13i]Room[/b:1bgja13i] (let's you add a &quot;room&quot; object)\n[b:1bgja13i]Exit[/b:1bgja13i] (let's you add~create &quot;Exits&quot; = connects two rooms together)\n[b:1bgja13i]Turnscript[/b:1bgja13i] (this is an &quot;Active&quot; action script. &quot;Active&quot; means that the game engine is constantly and automatically running~using it. Do note that you can create an &quot;Universal&quot; Turnscript or a specific Turnscript for a room, depending on whether you got &quot;Object&quot;, or, for example, &quot;Room&quot;, highlighted in the left pane ~ the &quot;tree of stuff&quot;)\n\nGenerally about the right pane:\n\nfor an example, click on &quot;Game&quot; (left pane, the &quot;tree of stuff&quot;) so that it is highlighted:\n\nyou'll now see further details about &quot;Game&quot; (remember that this is the unique object, Game Object), in the right pane, which looks like this:\n\n[b:1bgja13i]game[/b:1bgja13i]\n6 Tabs: Setup (1) ~ Script (2) ~ Room Descriptions (3) ~ Player (4) ~ Display (5) ~ Attributes (6)\n\nclicking on the different Tabs, changes what is displayed below the Tabs\n\nsome of the options are the exact same as in the top bar's &quot;[b:1bgja13i]Add[/b:1bgja13i]&quot; choice (File ~ Edit ~ [b:1bgja13i]Add[/b:1bgja13i] ~ Tools ~ Help), you can use either method (the way of reaching the desired option), the options are the exact same, they do the same thing.\n\nso for an example, in my guide I'll give a &quot;path&quot; for you to follow to get to the right place, and then what you do there:\n\nPath: Game -&gt; Script (Tab) -&gt; Start Script (such as for a character creation script block) -&gt; Add new script -&gt;\n\n[code:1bgja13i]the character creation script block&#58;\n\n(continued from the path above) -&gt; Output -&gt; Print a message -&gt; Print &#91;EXPRESSION&#93; &quot;What is your name?&quot;\nAdd new script -&gt; Output -&gt; Get input -&gt; Get input, then run script -&gt;\n-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;alias = &#91;EXPRESSION&#93; result\n-&gt; Add new script -&gt; Output -&gt; Print a message -&gt; Print &#91;EXPRESSION&#93; &quot; - &quot; + game&#46;pov&#46;alias\n-&gt; Add new script -&gt; Output -&gt; Show a menu -&gt;\n-&gt; Show menu with &#91;text&#93; &quot;What is your gender?&quot;\n-&gt; Options from list/dictionary split (&quot;male;female&quot;,&quot;;&quot;)\n-&gt; Allow player to cancel &#91;yes/no ~ your choice&#93;\n-&gt; After choosing, run script -&gt;\n-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;gender = &#91;EXPRESSION&#93; result\n-&gt;-&gt; Add new script -&gt; Output -&gt; Show a menu -&gt;\n-&gt;-&gt; Show menu with &#91;text&#93; &quot;What is your race?&quot;\n-&gt;-&gt; Options from list/dictionary split (&quot;human;dwarf;elf;orc&quot;,&quot;;&quot;)\n-&gt;-&gt; Allow player to cancel &#91;yes/no ~ your choice&#93;\n-&gt;-&gt; After choosing, run script -&gt;\n-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;race = &#91;EXPRESSION&#93; result\n-&gt;-&gt;-&gt; Add new script -&gt; Output -&gt; Show a menu -&gt;\n-&gt;-&gt;-&gt; Show menu with &#91;text&#93; &quot;What is your class?&quot;\n-&gt;-&gt;-&gt; Options from list/dictionary split (&quot;technomancer ~ your wizard;warrior;cleric;thief&quot;,&quot;;&quot;)\n-&gt;-&gt;-&gt; Allow player to cancel &#91;yes/no ~ your choice&#93;\n-&gt;-&gt;-&gt; After choosing, run script -&gt;\n-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;class = &#91;EXPRESSION&#93; result\n-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Output -&gt; Print a message -&gt; Print &#91;EXPRESSION&#93; game&#46;pov&#46;alias + &quot; is a &quot; + game&#46;pov&#46;gender + &quot; &quot; + game&#46;pov&#46;race + &quot; &quot; + game&#46;pov&#46;class +&quot;&#46;&quot;\n-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Scripts -&gt; Switch&#46;&#46;&#46; -&gt;\n-&gt;-&gt;-&gt;-&gt; Switch&#58; game&#46;pov&#46;gender\n-&gt;-&gt;-&gt;-&gt;-&gt; Cases&#58; Add -&gt; Add (do again as needed) -&gt;\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Case Expression&#58; &quot;male&quot;\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;endurance = &#91;EXPRESSION&#93; game&#46;pov&#46;endurance + 1\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Case Expression&#58; &quot;female&quot;\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;agility = &#91;EXPRESSION&#93; game&#46;pov&#46;agility + 1\n-&gt;-&gt;-&gt;-&gt; Switch&#58; game&#46;pov&#46;race\n-&gt;-&gt;-&gt;-&gt;-&gt; Cases&#58; Add -&gt; Add (do again as needed) -&gt;\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Case Expression&#58; &quot;human&quot;\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;endurance = &#91;EXPRESSION&#93; game&#46;pov&#46;endurance + 1\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;agility = &#91;EXPRESSION&#93; game&#46;pov&#46;agility + 1\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Case Expression&#58; &quot;dwarf&quot;\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;strength = &#91;EXPRESSION&#93; game&#46;pov&#46;strength + 1\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;endurance = &#91;EXPRESSION&#93; game&#46;pov&#46;endurance + 1\n-&gt;-&gt;-&gt;-&gt; Switch&#58; game&#46;pov&#46;class\n-&gt;-&gt;-&gt;-&gt;-&gt; Cases&#58; Add -&gt; Add (do again as needed) -&gt;\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Case Expression&#58; &quot;technomancer&quot;\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;intelligence = &#91;EXPRESSION&#93; game&#46;pov&#46;intelligence + 2\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Case Expression&#58; &quot;cleric&quot;\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;spirituality = &#91;EXPRESSION&#93; game&#46;pov&#46;spirituality + 2\n-&gt;-&gt;-&gt;-&gt; Add new script -&gt; output -&gt; Wait for key press -&gt; Wait for key press, then run script -&gt;\n-&gt;-&gt;-&gt;-&gt;-&gt; Output -&gt; Clear the screen[/code:1bgja13i]\n\nso, as practice, do you understand this?\n\n---------------------------\n\ntwo extremely powerful, useful, and commonly~constantly used scripts:\n\nVariables -&gt; Set a variable or attribute\nScripts -&gt; If... ( or Switch... )\n\ntwo extremely powerful, useful, and commonly~constantly used attribute types:\n\nboolean = &quot;flagging&quot; = true/false\ninteger = -OO , ... , -1, 0, +1, ... , +OO\n\nexample of a boolean (&quot;flagging&quot;):\n\na key is too high to reach, but if you could fly, you can get the key.\n\nboolean: &quot;flying&quot; = false (because you are &quot;walking&quot;) :: can't get the key\nboolean: &quot;flying = true :: can get the key\n\nor (explanation shouldn't be needed, lol):\n\nboolean: &quot;running&quot; = false :: game.pov.speed = 1\nboolean: &quot;running&quot; = true :: game.pov.speed = 2\n\nintegers (creatively) can be used as booleans:\n\nif (npc.dialogue = 0), then msg (&quot;Hi&quot;)\nif (npc.dialogue = 1), then msg (&quot;Bye&quot;)\nif (npc.dialogue = 2), then msg (&quot;Die!&quot;)\nif (npc.dialogue = -10), then msg (&quot;I hate you!&quot;)\nif (npc.dialogue = 10), then msg (&quot;I love you!&quot;)\n\nOR\n\nswitch (npc.dialogue)\n-&gt; case\n-&gt;-&gt; (&quot;0&quot;)\n-&gt;-&gt;-&gt; msg (&quot;Hi&quot;)\n-&gt;-&gt; (&quot;1&quot;)\n-&gt;-&gt;-&gt; msg (&quot;Bye&quot;)\n-&gt;-&gt; (&quot;2&quot;)\n-&gt;-&gt;-&gt; msg (&quot;Die!&quot;)\n-&gt;-&gt; (&quot;-10&quot;)\n-&gt;-&gt;-&gt; msg (&quot;I hate you!&quot;)\n-&gt;-&gt; (&quot;10&quot;)\n-&gt;-&gt;-&gt; msg (&quot;I love you!&quot;)\n\nexamples of these in use (but they're not in correct format, this is for concept~understanding only, intentional shown in a code-like fashion, so you start to get used to code, lol. As the GUI~Editor is not easy to do guides of~for, nor to fix problems, and etc, lol):\n\n[code:1bgja13i]&lt;object name=&quot;orc&quot;&gt;&lt;!&#91;CDATA&#91;\n  &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;\n  &lt;hp type=&quot;integer&quot;&gt;100&lt;/hp&gt;\n  &lt;verb name=&quot;attack&quot;&gt;\n    Scripts&#58; If (Scripts&#58; Firsttime (&quot;dead&quot; boolean = true)) {\n      then&#58; Set a variable or attribute&#58; game&#46;pov&#46;experience = game&#46;pov&#46;experience + orc&#46;experience\n    } otherwise {\n      Print Message&#58; msg (&quot;It's long dead already')\n    } else {\n      Set a variable or attribute&#58; orc&#46;hp = orc&#46;hp - game&#46;pov&#46;physical_damage\n      Print Expression&#58; msg (&quot;You hit it for &quot; + game&#46;pov&#46;physical_damage + &quot; and now it only has &quot; + orc&#46;hp + &quot; hp left&#46;&quot;)\n      Scripts&#58; If (Print Expression&#58; msg (orc&#46;hp &lt;= 0)) {\n        then&#58; Set a variable or attribute&#58; orc&#46;dead = true\n      }\n    }\n  &lt;/verb&gt;\n&#93;&#93;&gt;&lt;/object&gt;[/code:1bgja13i]\n\n--------------------------------------------------------------------------------\n\nDefibriliator section:\n\n(you've no idea how many times I had to spell out defibrillator, when I was a noob trying to do the tutorial myself, I actually learned how to spell out defibrillator at the time, and I've proudly forgotten and never spelled that cursed word again, until now, lol)\n\nhere's the steps:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Interacting_with_objects\">http://quest5.net/wiki/Interacting_with_objects</a><!-- m -->\n\n[b:1bgja13i]CREATING A CHARACTER[/b:1bgja13i]\n\nRoom -&gt; Objects (Tab) -&gt; Add -&gt; name: Bob\nBob -&gt; Setup (Tab) -&gt; (lower) Type -&gt; [MALE CHARACTER]\nBob -&gt; Setup (Tab) -&gt; Description -&gt; [TEXT] -&gt; Bob is lying on the floor, a lot more still than usual.\n\n[b:1bgja13i]PREFIX AND SUFFIX[/b:1bgja13i]\n\nBob -&gt; Setup (Tab) -&gt; [X] Use default prefix and suffix -&gt; [] Use default prefix and suffix\nOR\nBob -&gt; Setup (Tab) -&gt; (lower) Type -&gt; [ MALE CHARACTER (NAMED) ] (I don't have this option in v5.3, lol)\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/More_things_to_do_with_objects\">http://quest5.net/wiki/More_things_to_do_with_objects</a><!-- m -->\n\n[b:1bgja13i]GIVING AND USING OBJECTS[/b:1bgja13i]\n\nThis just gives a general overview of what will be discussed in actual detail on how to do this stuff in the below sections\n\n[b:1bgja13i]UPDATING THE DESCRIPTION[/b:1bgja13i]\n\nBob -&gt; Setup (Tab) -&gt; Description -&gt; [RUN SCRIPT] -&gt; Add new script -&gt;\n\nScripts -&gt; If... -&gt; If [OBJECT HAS FLAG] -&gt; If [OBJECT HAS FLAG] [OBJECT] [Bob] [FLAG NAME] alive -&gt;\n-&gt; then, Add a script -&gt; Output -&gt; Print A Message -&gt; Print [MESSAGE] &quot;(see tutorial)&quot; -&gt;\nAdd Else, Add new script -&gt;\n-&gt; Print [MESSAGE] &quot;(see tutorial)&quot;\n\n[b:1bgja13i]USING THE DEFIBRILLATOR[/b:1bgja13i]\n\nObject (left pane) -&gt; top bar -&gt; Add -&gt; Room -&gt; name: Lounge (or did the tutorial have you simply change your &quot;Room&quot; object's Name or Alias to &quot;Lounge&quot; ??? meh)\n\nLounge -&gt; Object (Tab) -&gt; Add -&gt; name: defibrillator\n\ndefibrillator -&gt; Setup (Tab) -&gt; Description -&gt; [TEXT] -&gt; &quot;(see tutorial)&quot;\n\ndefibrillator -&gt; Inventory (Tab) -&gt; [] Object can be taken -&gt; [X] Object can be taken\n\nBob -&gt; Use/Give (Tab) -&gt; Use other object on this -&gt; action [HANDLE OBJECTS INDIVIDUALLY] -&gt; Add (box) -&gt; name: defibrillator (spell exactly correctly ~ the same as your &quot;defibrillator&quot; object) or just choose from the drop~pull down arrow, lol -&gt;\n\nScript Window (if you can't see this script window, then close, but don't exit~quit lol, all your other windows, as it gets hidden behind them) -&gt;\n\nOutput -&gt; Print A Message -&gt; Print [MESSAGE] -&gt; &quot;(see tutorial)&quot;\nAdd new script -&gt; Variables -&gt; Set Object Flag -&gt; Set flag [OBJECT] [Bob] [FLAG NAME] alive\n\nBob -&gt; Use/Give (Tab) -&gt; Use other object on this -&gt; action [HANDLE OBJECTS INDIVIDUALLY] -&gt; Edit Script (box) -&gt;\n\n(if you need help with this, let me know), change it so it looks like this:\n\nIf Bob is not alive, then -&gt;\n-&gt; print message -&gt; &quot;(miraculously...he comes back to life... or blah blah blah = see tutorial)&quot;\n-&gt; Set Object Flag -&gt; Set ( [b:1bgja13i]= true[/b:1bgja13i] ) flag [OBJECT] [Bob] [FLAG NAME] alive ( [b:1bgja13i]= true[/b:1bgja13i] )\nelse -&gt;\n-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;\n\nor, you can do the opposite too (use &quot;dead&quot;, instead of &quot;alive&quot;):\n\nIf Bob is dead, then -&gt;\n-&gt; print message -&gt; &quot;(miraculously...he comes back to life... or blah blah blah = see tutorial)&quot;\n-&gt; Set Object Flag -&gt; Unset ( [b:1bgja13i]= false[/b:1bgja13i] ) flag [OBJECT] [Bob] [FLAG NAME] dead ( [b:1bgja13i]= false[/b:1bgja13i] )\nelse -&gt;\n-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;\n\n[b:1bgja13i]USING FUNCTIONS[/b:1bgja13i]\n\ndefibrillator -&gt; Use/Give (Tab) -&gt; Use (on its own) -&gt; [] Display menu of objects this can be used on -&gt; [X] Display menu of objects this can be used on -&gt; menu caption -&gt; (leave blank, or type something in, like &quot;what do you want to use the defibrillator on?&quot;)\n\nOR\n\ndefibrillator -&gt; Use/Give (Tab) -&gt; Use (on its own) -&gt; Action [RUN SCRIPT] -&gt; add new script -&gt; ( see below the: VVVVVVVV )\n\nOR\n\ndefibrillator -&gt; Use/Give (Tab) -&gt; Use (on its own) -&gt; Action [RUN SCRIPT] -&gt; add new script -&gt; copy and paste -&gt;\n\n[code:1bgja13i]If Bob is not alive, then -&gt;\n-&gt; print message -&gt; &quot;(miraculously&#46;&#46;&#46;he comes back to life&#46;&#46;&#46; or blah blah blah = see tutorial)&quot;\n-&gt; Set Object Flag -&gt; Set ( &#91;b&#93;= true&#91;/b&#93; ) flag &#91;OBJECT&#93; &#91;Bob&#93; &#91;FLAG NAME&#93; alive ( &#91;b&#93;= true&#91;/b&#93; )\nelse -&gt;\n-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;\n\nor, you can do the opposite too (use &quot;dead&quot;, instead of &quot;alive&quot;)&#58;\n\nIf Bob is dead, then -&gt;\n-&gt; print message -&gt; &quot;(miraculously&#46;&#46;&#46;he comes back to life&#46;&#46;&#46; or blah blah blah = see tutorial)&quot;\n-&gt; Set Object Flag -&gt; Unset ( &#91;b&#93;= false&#91;/b&#93; ) flag &#91;OBJECT&#93; &#91;Bob&#93; &#91;FLAG NAME&#93; dead ( &#91;b&#93;= false&#91;/b&#93; )\nelse -&gt;\n-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;[/code:1bgja13i]\n\nVVVVVVVVV\n\nfrom the tutorial: &quot;...The way to do this is to set up a function.&quot;\n\n[b:1bgja13i]MY EXPLANATION OF WHAT WE'RE DOING FOR THIS PART OF THE TUTORIAL[/b:1bgja13i]\n\nWhat we're doing is to create a function with~having the script block:\n\n[code:1bgja13i]If Bob is not alive, then -&gt;\n-&gt; print message -&gt; &quot;(miraculously&#46;&#46;&#46;he comes back to life&#46;&#46;&#46; or blah blah blah = see tutorial)&quot;\n-&gt; Set Object Flag -&gt; Set ( &#91;b&#93;= true&#91;/b&#93; ) flag &#91;OBJECT&#93; &#91;Bob&#93; &#91;FLAG NAME&#93; alive ( &#91;b&#93;= true&#91;/b&#93; )\nelse -&gt;\n-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;\n\nor, you can do the opposite too (use &quot;dead&quot;, instead of &quot;alive&quot;)&#58;\n\nIf Bob is dead, then -&gt;\n-&gt; print message -&gt; &quot;(miraculously&#46;&#46;&#46;he comes back to life&#46;&#46;&#46; or blah blah blah = see tutorial)&quot;\n-&gt; Set Object Flag -&gt; Unset ( &#91;b&#93;= false&#91;/b&#93; ) flag &#91;OBJECT&#93; &#91;Bob&#93; &#91;FLAG NAME&#93; dead ( &#91;b&#93;= false&#91;/b&#93; )\nelse -&gt;\n-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;[/code:1bgja13i]\n\nso that for the:\n\nBob -&gt; Use/Give (Tab) -&gt; Use (other object) on this -&gt; box -&gt; defibrillator -&gt; Script -&gt; ( see between the ******* )\nAND\ndefibrillator -&gt; Use/Give (Tab) -&gt; Use (on its own) -&gt; Action [RUN SCRIPT] -&gt; Script -&gt; ( see between the ******* )\n\n************\n\nScript&#058;\n\nScripts -&gt; Call Function -&gt; Call function (the name that you gave the function that you made) with parameters: add (box) -&gt; (leave this blank, don't add any parameters)\n\nso that you only need to put this single script (call function) in for these (or more) script areas, instead of having this large script block for these (or more areas):\n\n(you should NOT have this in these script areas)\n[code:1bgja13i]If Bob is not alive, then -&gt;\n-&gt; print message -&gt; &quot;(miraculously&#46;&#46;&#46;he comes back to life&#46;&#46;&#46; or blah blah blah = see tutorial)&quot;\n-&gt; Set Object Flag -&gt; Set ( &#91;b&#93;= true&#91;/b&#93; ) flag &#91;OBJECT&#93; &#91;Bob&#93; &#91;FLAG NAME&#93; alive ( &#91;b&#93;= true&#91;/b&#93; )\nelse -&gt;\n-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;\n\nor, you can do the opposite too (use &quot;dead&quot;, instead of &quot;alive&quot;)&#58;\n\nIf Bob is dead, then -&gt;\n-&gt; print message -&gt; &quot;(miraculously&#46;&#46;&#46;he comes back to life&#46;&#46;&#46; or blah blah blah = see tutorial)&quot;\n-&gt; Set Object Flag -&gt; Unset ( &#91;b&#93;= false&#91;/b&#93; ) flag &#91;OBJECT&#93; &#91;Bob&#93; &#91;FLAG NAME&#93; dead ( &#91;b&#93;= false&#91;/b&#93; )\nelse -&gt;\n-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;[/code:1bgja13i]\n\n************\n\n[b:1bgja13i]HOW TO ACTUALLY DO WHAT THE TUTORIAL IS ASKING FOR[/b:1bgja13i]\n\nBob -&gt; Use/Give (Tab) -&gt; Use (other object) on this -&gt; box -&gt; defibrillator (double click on this to bring up the &quot;Edit Script&quot; window, or you can click once on this to highlight it and then click on the &quot;Edit &quot;Script&quot; button: Add ~ Edit Object ~ [b:1bgja13i]Edit Script[/b:1bgja13i] ~ Delete) -&gt;\n\nin the script editor window:\n\nclick and hold shift, and then try to drag the mouse to highlight all the scripts, so you can then cut it (so you can then paste it into your soon-to-be-made: Function). be very careful here, as it's not fun to lose a large script block and have to redo it, lol. I'd practice first on some test script block, until you can do it correctly.\n\nObject (left pane) -&gt; top bar -&gt; Add -&gt; Function -&gt; name: (tutorial says to use: revive bob)\n\n[b:1bgja13i]revive bob[/b:1bgja13i]\nFunction (Tab)\nName: revive bob\nReturn Type: [NONE] (leave this as: NONE, don't change it)\nParameters: Add (box): (leave this blank, don't add any parameters)\nScript&#058; Add new script -&gt; (paste, see below)\n\n[code:1bgja13i]If Bob is not alive, then -&gt;\n-&gt; print message -&gt; &quot;(miraculously&#46;&#46;&#46;he comes back to life&#46;&#46;&#46; or blah blah blah = see tutorial)&quot;\n-&gt; Set Object Flag -&gt; Set ( &#91;b&#93;= true&#91;/b&#93; ) flag &#91;OBJECT&#93; &#91;Bob&#93; &#91;FLAG NAME&#93; alive ( &#91;b&#93;= true&#91;/b&#93; )\nelse -&gt;\n-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;\n\nor, you can do the opposite too (use &quot;dead&quot;, instead of &quot;alive&quot;)&#58;\n\nIf Bob is dead, then -&gt;\n-&gt; print message -&gt; &quot;(miraculously&#46;&#46;&#46;he comes back to life&#46;&#46;&#46; or blah blah blah = see tutorial)&quot;\n-&gt; Set Object Flag -&gt; Unset ( &#91;b&#93;= false&#91;/b&#93; ) flag &#91;OBJECT&#93; &#91;Bob&#93; &#91;FLAG NAME&#93; dead ( &#91;b&#93;= false&#91;/b&#93; )\nelse -&gt;\n-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;[/code:1bgja13i]\n\nand now:\n\nBob -&gt; Use/Give (Tab) -&gt; Use (other object) on this -&gt; box -&gt; defibrillator (double click on this to bring up the &quot;Edit Script&quot; window, or you can click once on this to highlight it and then click on the &quot;Edit &quot;Script&quot; button: Add ~ Edit Object ~ [b:1bgja13i]Edit Script[/b:1bgja13i] ~ Delete) -&gt;\n\nScript&#058;\n\nit should be empty, but now, add this script line:\n\nScripts -&gt; Call Function -&gt; Call function revive bob with parameters: add (box) -&gt; (leave this blank, don't add any parameters)\n\nand also do this now too:\n\ndefibrillator -&gt; Use/Give (Tab) -&gt; Use (on its own) -&gt; Action [RUN SCRIPT] -&gt; add new script or Edit Script -&gt;\n\n(this either should be empty, or if it got the large script block, then delete it)\n\nbut now you want to do this as well:\n\nScripts -&gt; Call Function -&gt; Call function revive bob with parameters: add (box) -&gt; (leave this blank, don't add any parameters)\n\nyou're now almost done, but we got one last thing to do, to put a &quot;check&quot; (an &quot;If...&quot; script) so that you can't use the defibrillator on dead bob, when you're not in the same room as him, lol (unless you got a magical defibrillator, hehe).\n\n(this is the last paragraph right above: GIVING OBJECTS)\n\nso, this is what you do:\n\nObject (left pane) -&gt; top bar -&gt; Add -&gt; Function -&gt; revive bob\n\nwe just need to edit the script a bit, so it looks like this now:\n\nIf Player is in Lounge, then:\n-&gt; If Bob is not alive, then -&gt;\n-&gt;-&gt; print message -&gt; &quot;(miraculously...he comes back to life... or blah blah blah = see tutorial)&quot;\n-&gt;-&gt; Set Object Flag -&gt; Set ( [b:1bgja13i]= true[/b:1bgja13i] ) flag [OBJECT] [Bob] [FLAG NAME] alive ( [b:1bgja13i]= true[/b:1bgja13i] )\n-&gt; else -&gt;\n-&gt;-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;\nelse -&gt;\n-&gt; Print message (&quot;What?! Did you think this was a magical defibrillator? you need to get near bob first, in order to use the defibrillator on him, silly!&quot;)\n\nor, you can do the opposite too (use &quot;dead&quot;, instead of &quot;alive&quot;):\n\nIf Player is in Lounge, then:\n-&gt; If Bob is dead, then -&gt;\n-&gt;-&gt; print message -&gt; &quot;(miraculously...he comes back to life... or blah blah blah = see tutorial)&quot;\n-&gt;-&gt; Set Object Flag -&gt; Unset ( [b:1bgja13i]= false[/b:1bgja13i] ) flag [OBJECT] [Bob] [FLAG NAME] dead ( [b:1bgja13i]= false[/b:1bgja13i] )\n-&gt; else -&gt;\n-&gt;-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;\nelse -&gt;\n-&gt; Print message (&quot;What?! Did you think this was a magical defibrillator? you need to get near bob first, in order to use the defibrillator on him, silly!&quot;)\n\nor...\n\nIf Player is not in Lounge, then:\n-&gt; Print message (&quot;What?! Did you think this was a magical defibrillator? you need to get near bob first, in order to use the defibrillator on him, silly!&quot;)\nElse -&gt;\n-&gt; If Bob is dead, then -&gt;\n-&gt;-&gt; print message -&gt; &quot;(miraculously...he comes back to life... or blah blah blah = see tutorial)&quot;\n-&gt;-&gt; Set Object Flag -&gt; Unset ( [b:1bgja13i]= false[/b:1bgja13i] ) flag [OBJECT] [Bob] [FLAG NAME] dead ( [b:1bgja13i]= false[/b:1bgja13i] )\n-&gt; else -&gt;\n-&gt;-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;",
      "EditableFormat": "bbcode",
      "HTML": "Note: this is for quest v5.3, I've not updated to v5.4 yet. Some things might be different, but I think most will be the same, hopefully.<br/><br/>----------------------<br/><br/>A Partial Tutorial Guide:<br/><br/>The &quot;GUI&quot; (Graphical User Interface) or &quot;Editor&quot; is the screen or window that you can click on, and choose the objects and settings~options, with dropdown menus for you to choose from. Your own computer's~window's desktop is an example of a GUI~Editor (compared to using the MS Dos like command prompts). This is made for noobs, and thus a big appeal~mission of Alex' Quest, to make a text adventure game available for non-coders to use (while still as well also being even more powerful a text adventure game engine for coders to use too).<br/><br/>on the left side (the &quot;left pane&quot;) is the &quot;tree of stuff&quot;, a new game's tree would look like this:<br/><br/><span style=\"font-weight:bold;\">Objects</span> (everything is either an object or a script. A script is code that which does, conditions, and~or defines stuff)<br/>-&gt; <span style=\"font-weight:bold;\">Game</span> (this is a unique object, the Game Object)<br/>-&gt;-&gt; <span style=\"font-weight:bold;\">Verbs</span> (&quot;Local&quot; Verbs. Local means that the verb ONLY works on that specific object that you created it for. Verbs show up as buttons on the right pane, &quot;Places and Objects&quot;, and as &quot;hyperlinks = the blue text that you can click on for options&quot; when you are playing the game)<br/>-&gt;-&gt; <span style=\"font-weight:bold;\">Commands</span> (&quot;Universal&quot; Verbs. Universal means for commands that the command can be &quot;attempted = depends on how the command is set up&quot; on any object anywhere. Commands require that the game player actually type in the command itself)<br/>-&gt; <span style=\"font-weight:bold;\">Room</span> (the default and initial Room Object. A &quot;Room&quot; type object)<br/>-&gt;-&gt; <span style=\"font-weight:bold;\">Player</span> (the default Player Object. the Player Objects are another unique object. you can create many other Player Objects too, and be able to switch between them)<br/><span style=\"font-weight:bold;\">Functions</span> (&quot;passive&quot; powerful action scripts. Passive means that quest doesn't automatically and nor constantly do the script)<br/><span style=\"font-weight:bold;\">Timers</span> (&quot;clock&quot; scripts = used to create seconds, minutes, hours, and~or etc ... though very unpractical to go into days, weeks, months, years, lol)<br/><span style=\"font-weight:bold;\">Walkthrough</span> (for game making and~or game testing)<br/><span style=\"font-weight:bold;\">Advanced</span><br/>-&gt; <span style=\"font-weight:bold;\">Included Libraries</span> (a game file made as a &quot;library&quot; file, so that others can put it into their own game and use it's stuff, as their Included Libraries, notice the default two Included Libraries: Core.aslx = the game engine, and english.aslx = english language text~font)<br/>-&gt;-&gt; <span style=\"font-weight:bold;\">English.aslx</span><br/>-&gt;-&gt; <span style=\"font-weight:bold;\">Core.aslx</span><br/><span style=\"font-weight:bold;\">Templates</span> (a useful &quot;tool&quot; for easy~&quot;Universal&quot; labeling things, making messages too ,and~or to change the labelings of things = such as for foreign language game makers, converting~translating an english game into their language)<br/><span style=\"font-weight:bold;\">Dynamic Templates</span> (see Templates, basically it's the same in differences to a Template, as with the example of: Print a [MESSAGE] = just text = Template vs Print an [EXPRESSION] = script and~or text = Dynamic Template)<br/><span style=\"font-weight:bold;\">Object Types</span> (think of this as creating an &quot;object group&quot;, such as for example a &quot;monster_type&quot;. I set all the attributes such as &quot;dead=false&quot;, &quot;hp&quot;, &quot;mp&quot;, and etc, that I want for this Object Type, &quot;monster_type&quot;, and then for each object that I create to be a &quot;monster object&quot;, all I have to do is to add the &quot;Inherited&quot; attribute, &quot;monster_type&quot;, and that object gets all of the attributes of that object type, and so it automatically gives that object, the attributes: &quot;dead=false&quot;, &quot;hp&quot;, &quot;mp&quot;, and etc. I can do this again, for another object that I want to be a &quot;monster object&quot;, by again just adding the &quot;Inherited&quot; attribute, &quot;monster_type&quot;. so, this saves me the redundency of having to manually add these same attributes over and over again for every object that I make and want to be a &quot;monster object&quot;. I think &quot;room&quot; objects, &quot;object&quot; objects, and &quot;object and/or room&quot; objects are all Object Types. You can see &quot;Inherited&quot; = Object Type = &quot;Type&quot; Attributes by: Player -&gt; Attributes Tab. All the light greyed stuff, under &quot;Inherited Types&quot; and &quot;Attributes ~ the bottom box&quot; are attributes that are automatically given from the Inherited Type, &quot;defaultplayer&quot; or the other Inherited Type attributes too. So, yes, you can assign an Inherited Type upon~within another Inherited Type, you can have many layers~levels deep of Inherited Types and their Attributes for just a single Inherited Type)<br/><span style=\"font-weight:bold;\">Javascript</span> (this is for coders to use alternative additional coding, Javascript, to do more cool stuff, lol)<br/><br/>and, the right side (right pane),<br/><br/>is additional details~options menu~window, for whatever you've clicked on (have highlighted) in the left pane (the &quot;tree of stuff&quot;)<br/><br/>lastly, there's also the bar at the top:<br/><br/>File ~ Edit ~ <span style=\"font-weight:bold;\">Add</span> ~ Tools ~ Help<br/><br/>The &quot;<span style=\"font-weight:bold;\">Add</span>&quot; is also (just like the right pane) based upon what you got highlighted in the left pane (the tree of stuff).<br/><br/>Notable &quot;<span style=\"font-weight:bold;\">Add</span>&quot; choices are:<br/><br/><span style=\"font-weight:bold;\">Object</span> (let's you add an &quot;object&quot; object)<br/><span style=\"font-weight:bold;\">Room</span> (let's you add a &quot;room&quot; object)<br/><span style=\"font-weight:bold;\">Exit</span> (let's you add~create &quot;Exits&quot; = connects two rooms together)<br/><span style=\"font-weight:bold;\">Turnscript</span> (this is an &quot;Active&quot; action script. &quot;Active&quot; means that the game engine is constantly and automatically running~using it. Do note that you can create an &quot;Universal&quot; Turnscript or a specific Turnscript for a room, depending on whether you got &quot;Object&quot;, or, for example, &quot;Room&quot;, highlighted in the left pane ~ the &quot;tree of stuff&quot;)<br/><br/>Generally about the right pane:<br/><br/>for an example, click on &quot;Game&quot; (left pane, the &quot;tree of stuff&quot;) so that it is highlighted:<br/><br/>you'll now see further details about &quot;Game&quot; (remember that this is the unique object, Game Object), in the right pane, which looks like this:<br/><br/><span style=\"font-weight:bold;\">game</span><br/>6 Tabs: Setup (1) ~ Script (2) ~ Room Descriptions (3) ~ Player (4) ~ Display (5) ~ Attributes (6)<br/><br/>clicking on the different Tabs, changes what is displayed below the Tabs<br/><br/>some of the options are the exact same as in the top bar's &quot;<span style=\"font-weight:bold;\">Add</span>&quot; choice (File ~ Edit ~ <span style=\"font-weight:bold;\">Add</span> ~ Tools ~ Help), you can use either method (the way of reaching the desired option), the options are the exact same, they do the same thing.<br/><br/>so for an example, in my guide I'll give a &quot;path&quot; for you to follow to get to the right place, and then what you do there:<br/><br/>Path: Game -&gt; Script (Tab) -&gt; Start Script (such as for a character creation script block) -&gt; Add new script -&gt;<br/><br/><pre><code>the character creation script block&#58;<br/><br/>(continued from the path above) -&gt; Output -&gt; Print a message -&gt; Print &#91;EXPRESSION&#93; &quot;What is your name?&quot;<br/>Add new script -&gt; Output -&gt; Get input -&gt; Get input, then run script -&gt;<br/>-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;alias = &#91;EXPRESSION&#93; result<br/>-&gt; Add new script -&gt; Output -&gt; Print a message -&gt; Print &#91;EXPRESSION&#93; &quot; - &quot; + game&#46;pov&#46;alias<br/>-&gt; Add new script -&gt; Output -&gt; Show a menu -&gt;<br/>-&gt; Show menu with &#91;text&#93; &quot;What is your gender?&quot;<br/>-&gt; Options from list/dictionary split (&quot;male;female&quot;,&quot;;&quot;)<br/>-&gt; Allow player to cancel &#91;yes/no ~ your choice&#93;<br/>-&gt; After choosing, run script -&gt;<br/>-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;gender = &#91;EXPRESSION&#93; result<br/>-&gt;-&gt; Add new script -&gt; Output -&gt; Show a menu -&gt;<br/>-&gt;-&gt; Show menu with &#91;text&#93; &quot;What is your race?&quot;<br/>-&gt;-&gt; Options from list/dictionary split (&quot;human;dwarf;elf;orc&quot;,&quot;;&quot;)<br/>-&gt;-&gt; Allow player to cancel &#91;yes/no ~ your choice&#93;<br/>-&gt;-&gt; After choosing, run script -&gt;<br/>-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;race = &#91;EXPRESSION&#93; result<br/>-&gt;-&gt;-&gt; Add new script -&gt; Output -&gt; Show a menu -&gt;<br/>-&gt;-&gt;-&gt; Show menu with &#91;text&#93; &quot;What is your class?&quot;<br/>-&gt;-&gt;-&gt; Options from list/dictionary split (&quot;technomancer ~ your wizard;warrior;cleric;thief&quot;,&quot;;&quot;)<br/>-&gt;-&gt;-&gt; Allow player to cancel &#91;yes/no ~ your choice&#93;<br/>-&gt;-&gt;-&gt; After choosing, run script -&gt;<br/>-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;class = &#91;EXPRESSION&#93; result<br/>-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Output -&gt; Print a message -&gt; Print &#91;EXPRESSION&#93; game&#46;pov&#46;alias + &quot; is a &quot; + game&#46;pov&#46;gender + &quot; &quot; + game&#46;pov&#46;race + &quot; &quot; + game&#46;pov&#46;class +&quot;&#46;&quot;<br/>-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Scripts -&gt; Switch&#46;&#46;&#46; -&gt;<br/>-&gt;-&gt;-&gt;-&gt; Switch&#58; game&#46;pov&#46;gender<br/>-&gt;-&gt;-&gt;-&gt;-&gt; Cases&#58; Add -&gt; Add (do again as needed) -&gt;<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Case Expression&#58; &quot;male&quot;<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;endurance = &#91;EXPRESSION&#93; game&#46;pov&#46;endurance + 1<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Case Expression&#58; &quot;female&quot;<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;agility = &#91;EXPRESSION&#93; game&#46;pov&#46;agility + 1<br/>-&gt;-&gt;-&gt;-&gt; Switch&#58; game&#46;pov&#46;race<br/>-&gt;-&gt;-&gt;-&gt;-&gt; Cases&#58; Add -&gt; Add (do again as needed) -&gt;<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Case Expression&#58; &quot;human&quot;<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;endurance = &#91;EXPRESSION&#93; game&#46;pov&#46;endurance + 1<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;agility = &#91;EXPRESSION&#93; game&#46;pov&#46;agility + 1<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Case Expression&#58; &quot;dwarf&quot;<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;strength = &#91;EXPRESSION&#93; game&#46;pov&#46;strength + 1<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;endurance = &#91;EXPRESSION&#93; game&#46;pov&#46;endurance + 1<br/>-&gt;-&gt;-&gt;-&gt; Switch&#58; game&#46;pov&#46;class<br/>-&gt;-&gt;-&gt;-&gt;-&gt; Cases&#58; Add -&gt; Add (do again as needed) -&gt;<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Case Expression&#58; &quot;technomancer&quot;<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;intelligence = &#91;EXPRESSION&#93; game&#46;pov&#46;intelligence + 2<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Case Expression&#58; &quot;cleric&quot;<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; Add new script -&gt; Variables -&gt; Set a variable or attribute -&gt; Set variable game&#46;pov&#46;spirituality = &#91;EXPRESSION&#93; game&#46;pov&#46;spirituality + 2<br/>-&gt;-&gt;-&gt;-&gt; Add new script -&gt; output -&gt; Wait for key press -&gt; Wait for key press, then run script -&gt;<br/>-&gt;-&gt;-&gt;-&gt;-&gt; Output -&gt; Clear the screen</code></pre><br/><br/>so, as practice, do you understand this?<br/><br/>---------------------------<br/><br/>two extremely powerful, useful, and commonly~constantly used scripts:<br/><br/>Variables -&gt; Set a variable or attribute<br/>Scripts -&gt; If... ( or Switch... )<br/><br/>two extremely powerful, useful, and commonly~constantly used attribute types:<br/><br/>boolean = &quot;flagging&quot; = true/false<br/>integer = -OO , ... , -1, 0, +1, ... , +OO<br/><br/>example of a boolean (&quot;flagging&quot;):<br/><br/>a key is too high to reach, but if you could fly, you can get the key.<br/><br/>boolean: &quot;flying&quot; = false (because you are &quot;walking&quot;) :: can't get the key<br/>boolean: &quot;flying = true :: can get the key<br/><br/>or (explanation shouldn't be needed, lol):<br/><br/>boolean: &quot;running&quot; = false :: game.pov.speed = 1<br/>boolean: &quot;running&quot; = true :: game.pov.speed = 2<br/><br/>integers (creatively) can be used as booleans:<br/><br/>if (npc.dialogue = 0), then msg (&quot;Hi&quot;)<br/>if (npc.dialogue = 1), then msg (&quot;Bye&quot;)<br/>if (npc.dialogue = 2), then msg (&quot;Die!&quot;)<br/>if (npc.dialogue = -10), then msg (&quot;I hate you!&quot;)<br/>if (npc.dialogue = 10), then msg (&quot;I love you!&quot;)<br/><br/>OR<br/><br/>switch (npc.dialogue)<br/>-&gt; case<br/>-&gt;-&gt; (&quot;0&quot;)<br/>-&gt;-&gt;-&gt; msg (&quot;Hi&quot;)<br/>-&gt;-&gt; (&quot;1&quot;)<br/>-&gt;-&gt;-&gt; msg (&quot;Bye&quot;)<br/>-&gt;-&gt; (&quot;2&quot;)<br/>-&gt;-&gt;-&gt; msg (&quot;Die!&quot;)<br/>-&gt;-&gt; (&quot;-10&quot;)<br/>-&gt;-&gt;-&gt; msg (&quot;I hate you!&quot;)<br/>-&gt;-&gt; (&quot;10&quot;)<br/>-&gt;-&gt;-&gt; msg (&quot;I love you!&quot;)<br/><br/>examples of these in use (but they're not in correct format, this is for concept~understanding only, intentional shown in a code-like fashion, so you start to get used to code, lol. As the GUI~Editor is not easy to do guides of~for, nor to fix problems, and etc, lol):<br/><br/><pre><code>&lt;object name=&quot;orc&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;<br/>  &lt;hp type=&quot;integer&quot;&gt;100&lt;/hp&gt;<br/>  &lt;verb name=&quot;attack&quot;&gt;<br/>    Scripts&#58; If (Scripts&#58; Firsttime (&quot;dead&quot; boolean = true)) {<br/>      then&#58; Set a variable or attribute&#58; game&#46;pov&#46;experience = game&#46;pov&#46;experience + orc&#46;experience<br/>    } otherwise {<br/>      Print Message&#58; msg (&quot;It's long dead already')<br/>    } else {<br/>      Set a variable or attribute&#58; orc&#46;hp = orc&#46;hp - game&#46;pov&#46;physical_damage<br/>      Print Expression&#58; msg (&quot;You hit it for &quot; + game&#46;pov&#46;physical_damage + &quot; and now it only has &quot; + orc&#46;hp + &quot; hp left&#46;&quot;)<br/>      Scripts&#58; If (Print Expression&#58; msg (orc&#46;hp &lt;= 0)) {<br/>        then&#58; Set a variable or attribute&#58; orc&#46;dead = true<br/>      }<br/>    }<br/>  &lt;/verb&gt;<br/>&#93;&#93;&gt;&lt;/object&gt;</code></pre><br/><br/>--------------------------------------------------------------------------------<br/><br/>Defibriliator section:<br/><br/>(you've no idea how many times I had to spell out defibrillator, when I was a noob trying to do the tutorial myself, I actually learned how to spell out defibrillator at the time, and I've proudly forgotten and never spelled that cursed word again, until now, lol)<br/><br/>here's the steps:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Interacting_with_objects\">http://quest5.net/wiki/Interacting_with_objects</a><!-- m --><br/><br/><span style=\"font-weight:bold;\">CREATING A CHARACTER</span><br/><br/>Room -&gt; Objects (Tab) -&gt; Add -&gt; name: Bob<br/>Bob -&gt; Setup (Tab) -&gt; (lower) Type -&gt; [MALE CHARACTER]<br/>Bob -&gt; Setup (Tab) -&gt; Description -&gt; [TEXT] -&gt; Bob is lying on the floor, a lot more still than usual.<br/><br/><span style=\"font-weight:bold;\">PREFIX AND SUFFIX</span><br/><br/>Bob -&gt; Setup (Tab) -&gt; [X] Use default prefix and suffix -&gt; [] Use default prefix and suffix<br/>OR<br/>Bob -&gt; Setup (Tab) -&gt; (lower) Type -&gt; [ MALE CHARACTER (NAMED) ] (I don't have this option in v5.3, lol)<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/More_things_to_do_with_objects\">http://quest5.net/wiki/More_things_to_do_with_objects</a><!-- m --><br/><br/><span style=\"font-weight:bold;\">GIVING AND USING OBJECTS</span><br/><br/>This just gives a general overview of what will be discussed in actual detail on how to do this stuff in the below sections<br/><br/><span style=\"font-weight:bold;\">UPDATING THE DESCRIPTION</span><br/><br/>Bob -&gt; Setup (Tab) -&gt; Description -&gt; [RUN SCRIPT] -&gt; Add new script -&gt;<br/><br/>Scripts -&gt; If... -&gt; If [OBJECT HAS FLAG] -&gt; If [OBJECT HAS FLAG] [OBJECT] [Bob] [FLAG NAME] alive -&gt;<br/>-&gt; then, Add a script -&gt; Output -&gt; Print A Message -&gt; Print [MESSAGE] &quot;(see tutorial)&quot; -&gt;<br/>Add Else, Add new script -&gt;<br/>-&gt; Print [MESSAGE] &quot;(see tutorial)&quot;<br/><br/><span style=\"font-weight:bold;\">USING THE DEFIBRILLATOR</span><br/><br/>Object (left pane) -&gt; top bar -&gt; Add -&gt; Room -&gt; name: Lounge (or did the tutorial have you simply change your &quot;Room&quot; object's Name or Alias to &quot;Lounge&quot; ??? meh)<br/><br/>Lounge -&gt; Object (Tab) -&gt; Add -&gt; name: defibrillator<br/><br/>defibrillator -&gt; Setup (Tab) -&gt; Description -&gt; [TEXT] -&gt; &quot;(see tutorial)&quot;<br/><br/>defibrillator -&gt; Inventory (Tab) -&gt; [] Object can be taken -&gt; [X] Object can be taken<br/><br/>Bob -&gt; Use/Give (Tab) -&gt; Use other object on this -&gt; action [HANDLE OBJECTS INDIVIDUALLY] -&gt; Add (box) -&gt; name: defibrillator (spell exactly correctly ~ the same as your &quot;defibrillator&quot; object) or just choose from the drop~pull down arrow, lol -&gt;<br/><br/>Script Window (if you can't see this script window, then close, but don't exit~quit lol, all your other windows, as it gets hidden behind them) -&gt;<br/><br/>Output -&gt; Print A Message -&gt; Print [MESSAGE] -&gt; &quot;(see tutorial)&quot;<br/>Add new script -&gt; Variables -&gt; Set Object Flag -&gt; Set flag [OBJECT] [Bob] [FLAG NAME] alive<br/><br/>Bob -&gt; Use/Give (Tab) -&gt; Use other object on this -&gt; action [HANDLE OBJECTS INDIVIDUALLY] -&gt; Edit Script (box) -&gt;<br/><br/>(if you need help with this, let me know), change it so it looks like this:<br/><br/>If Bob is not alive, then -&gt;<br/>-&gt; print message -&gt; &quot;(miraculously...he comes back to life... or blah blah blah = see tutorial)&quot;<br/>-&gt; Set Object Flag -&gt; Set ( <span style=\"font-weight:bold;\">= true</span> ) flag [OBJECT] [Bob] [FLAG NAME] alive ( <span style=\"font-weight:bold;\">= true</span> )<br/>else -&gt;<br/>-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;<br/><br/>or, you can do the opposite too (use &quot;dead&quot;, instead of &quot;alive&quot;):<br/><br/>If Bob is dead, then -&gt;<br/>-&gt; print message -&gt; &quot;(miraculously...he comes back to life... or blah blah blah = see tutorial)&quot;<br/>-&gt; Set Object Flag -&gt; Unset ( <span style=\"font-weight:bold;\">= false</span> ) flag [OBJECT] [Bob] [FLAG NAME] dead ( <span style=\"font-weight:bold;\">= false</span> )<br/>else -&gt;<br/>-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;<br/><br/><span style=\"font-weight:bold;\">USING FUNCTIONS</span><br/><br/>defibrillator -&gt; Use/Give (Tab) -&gt; Use (on its own) -&gt; [] Display menu of objects this can be used on -&gt; [X] Display menu of objects this can be used on -&gt; menu caption -&gt; (leave blank, or type something in, like &quot;what do you want to use the defibrillator on?&quot;)<br/><br/>OR<br/><br/>defibrillator -&gt; Use/Give (Tab) -&gt; Use (on its own) -&gt; Action [RUN SCRIPT] -&gt; add new script -&gt; ( see below the: VVVVVVVV )<br/><br/>OR<br/><br/>defibrillator -&gt; Use/Give (Tab) -&gt; Use (on its own) -&gt; Action [RUN SCRIPT] -&gt; add new script -&gt; copy and paste -&gt;<br/><br/><pre><code>If Bob is not alive, then -&gt;<br/>-&gt; print message -&gt; &quot;(miraculously&#46;&#46;&#46;he comes back to life&#46;&#46;&#46; or blah blah blah = see tutorial)&quot;<br/>-&gt; Set Object Flag -&gt; Set ( &#91;b&#93;= true&#91;/b&#93; ) flag &#91;OBJECT&#93; &#91;Bob&#93; &#91;FLAG NAME&#93; alive ( &#91;b&#93;= true&#91;/b&#93; )<br/>else -&gt;<br/>-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;<br/><br/>or, you can do the opposite too (use &quot;dead&quot;, instead of &quot;alive&quot;)&#58;<br/><br/>If Bob is dead, then -&gt;<br/>-&gt; print message -&gt; &quot;(miraculously&#46;&#46;&#46;he comes back to life&#46;&#46;&#46; or blah blah blah = see tutorial)&quot;<br/>-&gt; Set Object Flag -&gt; Unset ( &#91;b&#93;= false&#91;/b&#93; ) flag &#91;OBJECT&#93; &#91;Bob&#93; &#91;FLAG NAME&#93; dead ( &#91;b&#93;= false&#91;/b&#93; )<br/>else -&gt;<br/>-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;</code></pre><br/><br/>VVVVVVVVV<br/><br/>from the tutorial: &quot;...The way to do this is to set up a function.&quot;<br/><br/><span style=\"font-weight:bold;\">MY EXPLANATION OF WHAT WE'RE DOING FOR THIS PART OF THE TUTORIAL</span><br/><br/>What we're doing is to create a function with~having the script block:<br/><br/><pre><code>If Bob is not alive, then -&gt;<br/>-&gt; print message -&gt; &quot;(miraculously&#46;&#46;&#46;he comes back to life&#46;&#46;&#46; or blah blah blah = see tutorial)&quot;<br/>-&gt; Set Object Flag -&gt; Set ( &#91;b&#93;= true&#91;/b&#93; ) flag &#91;OBJECT&#93; &#91;Bob&#93; &#91;FLAG NAME&#93; alive ( &#91;b&#93;= true&#91;/b&#93; )<br/>else -&gt;<br/>-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;<br/><br/>or, you can do the opposite too (use &quot;dead&quot;, instead of &quot;alive&quot;)&#58;<br/><br/>If Bob is dead, then -&gt;<br/>-&gt; print message -&gt; &quot;(miraculously&#46;&#46;&#46;he comes back to life&#46;&#46;&#46; or blah blah blah = see tutorial)&quot;<br/>-&gt; Set Object Flag -&gt; Unset ( &#91;b&#93;= false&#91;/b&#93; ) flag &#91;OBJECT&#93; &#91;Bob&#93; &#91;FLAG NAME&#93; dead ( &#91;b&#93;= false&#91;/b&#93; )<br/>else -&gt;<br/>-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;</code></pre><br/><br/>so that for the:<br/><br/>Bob -&gt; Use/Give (Tab) -&gt; Use (other object) on this -&gt; box -&gt; defibrillator -&gt; Script -&gt; ( see between the ******* )<br/>AND<br/>defibrillator -&gt; Use/Give (Tab) -&gt; Use (on its own) -&gt; Action [RUN SCRIPT] -&gt; Script -&gt; ( see between the ******* )<br/><br/>************<br/><br/>Script&#058;<br/><br/>Scripts -&gt; Call Function -&gt; Call function (the name that you gave the function that you made) with parameters: add (box) -&gt; (leave this blank, don't add any parameters)<br/><br/>so that you only need to put this single script (call function) in for these (or more) script areas, instead of having this large script block for these (or more areas):<br/><br/>(you should NOT have this in these script areas)<br/><pre><code>If Bob is not alive, then -&gt;<br/>-&gt; print message -&gt; &quot;(miraculously&#46;&#46;&#46;he comes back to life&#46;&#46;&#46; or blah blah blah = see tutorial)&quot;<br/>-&gt; Set Object Flag -&gt; Set ( &#91;b&#93;= true&#91;/b&#93; ) flag &#91;OBJECT&#93; &#91;Bob&#93; &#91;FLAG NAME&#93; alive ( &#91;b&#93;= true&#91;/b&#93; )<br/>else -&gt;<br/>-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;<br/><br/>or, you can do the opposite too (use &quot;dead&quot;, instead of &quot;alive&quot;)&#58;<br/><br/>If Bob is dead, then -&gt;<br/>-&gt; print message -&gt; &quot;(miraculously&#46;&#46;&#46;he comes back to life&#46;&#46;&#46; or blah blah blah = see tutorial)&quot;<br/>-&gt; Set Object Flag -&gt; Unset ( &#91;b&#93;= false&#91;/b&#93; ) flag &#91;OBJECT&#93; &#91;Bob&#93; &#91;FLAG NAME&#93; dead ( &#91;b&#93;= false&#91;/b&#93; )<br/>else -&gt;<br/>-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;</code></pre><br/><br/>************<br/><br/><span style=\"font-weight:bold;\">HOW TO ACTUALLY DO WHAT THE TUTORIAL IS ASKING FOR</span><br/><br/>Bob -&gt; Use/Give (Tab) -&gt; Use (other object) on this -&gt; box -&gt; defibrillator (double click on this to bring up the &quot;Edit Script&quot; window, or you can click once on this to highlight it and then click on the &quot;Edit &quot;Script&quot; button: Add ~ Edit Object ~ <span style=\"font-weight:bold;\">Edit Script</span> ~ Delete) -&gt;<br/><br/>in the script editor window:<br/><br/>click and hold shift, and then try to drag the mouse to highlight all the scripts, so you can then cut it (so you can then paste it into your soon-to-be-made: Function). be very careful here, as it's not fun to lose a large script block and have to redo it, lol. I'd practice first on some test script block, until you can do it correctly.<br/><br/>Object (left pane) -&gt; top bar -&gt; Add -&gt; Function -&gt; name: (tutorial says to use: revive bob)<br/><br/><span style=\"font-weight:bold;\">revive bob</span><br/>Function (Tab)<br/>Name: revive bob<br/>Return Type: [NONE] (leave this as: NONE, don't change it)<br/>Parameters: Add (box): (leave this blank, don't add any parameters)<br/>Script&#058; Add new script -&gt; (paste, see below)<br/><br/><pre><code>If Bob is not alive, then -&gt;<br/>-&gt; print message -&gt; &quot;(miraculously&#46;&#46;&#46;he comes back to life&#46;&#46;&#46; or blah blah blah = see tutorial)&quot;<br/>-&gt; Set Object Flag -&gt; Set ( &#91;b&#93;= true&#91;/b&#93; ) flag &#91;OBJECT&#93; &#91;Bob&#93; &#91;FLAG NAME&#93; alive ( &#91;b&#93;= true&#91;/b&#93; )<br/>else -&gt;<br/>-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;<br/><br/>or, you can do the opposite too (use &quot;dead&quot;, instead of &quot;alive&quot;)&#58;<br/><br/>If Bob is dead, then -&gt;<br/>-&gt; print message -&gt; &quot;(miraculously&#46;&#46;&#46;he comes back to life&#46;&#46;&#46; or blah blah blah = see tutorial)&quot;<br/>-&gt; Set Object Flag -&gt; Unset ( &#91;b&#93;= false&#91;/b&#93; ) flag &#91;OBJECT&#93; &#91;Bob&#93; &#91;FLAG NAME&#93; dead ( &#91;b&#93;= false&#91;/b&#93; )<br/>else -&gt;<br/>-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;</code></pre><br/><br/>and now:<br/><br/>Bob -&gt; Use/Give (Tab) -&gt; Use (other object) on this -&gt; box -&gt; defibrillator (double click on this to bring up the &quot;Edit Script&quot; window, or you can click once on this to highlight it and then click on the &quot;Edit &quot;Script&quot; button: Add ~ Edit Object ~ <span style=\"font-weight:bold;\">Edit Script</span> ~ Delete) -&gt;<br/><br/>Script&#058;<br/><br/>it should be empty, but now, add this script line:<br/><br/>Scripts -&gt; Call Function -&gt; Call function revive bob with parameters: add (box) -&gt; (leave this blank, don't add any parameters)<br/><br/>and also do this now too:<br/><br/>defibrillator -&gt; Use/Give (Tab) -&gt; Use (on its own) -&gt; Action [RUN SCRIPT] -&gt; add new script or Edit Script -&gt;<br/><br/>(this either should be empty, or if it got the large script block, then delete it)<br/><br/>but now you want to do this as well:<br/><br/>Scripts -&gt; Call Function -&gt; Call function revive bob with parameters: add (box) -&gt; (leave this blank, don't add any parameters)<br/><br/>you're now almost done, but we got one last thing to do, to put a &quot;check&quot; (an &quot;If...&quot; script) so that you can't use the defibrillator on dead bob, when you're not in the same room as him, lol (unless you got a magical defibrillator, hehe).<br/><br/>(this is the last paragraph right above: GIVING OBJECTS)<br/><br/>so, this is what you do:<br/><br/>Object (left pane) -&gt; top bar -&gt; Add -&gt; Function -&gt; revive bob<br/><br/>we just need to edit the script a bit, so it looks like this now:<br/><br/>If Player is in Lounge, then:<br/>-&gt; If Bob is not alive, then -&gt;<br/>-&gt;-&gt; print message -&gt; &quot;(miraculously...he comes back to life... or blah blah blah = see tutorial)&quot;<br/>-&gt;-&gt; Set Object Flag -&gt; Set ( <span style=\"font-weight:bold;\">= true</span> ) flag [OBJECT] [Bob] [FLAG NAME] alive ( <span style=\"font-weight:bold;\">= true</span> )<br/>-&gt; else -&gt;<br/>-&gt;-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;<br/>else -&gt;<br/>-&gt; Print message (&quot;What?! Did you think this was a magical defibrillator? you need to get near bob first, in order to use the defibrillator on him, silly!&quot;)<br/><br/>or, you can do the opposite too (use &quot;dead&quot;, instead of &quot;alive&quot;):<br/><br/>If Player is in Lounge, then:<br/>-&gt; If Bob is dead, then -&gt;<br/>-&gt;-&gt; print message -&gt; &quot;(miraculously...he comes back to life... or blah blah blah = see tutorial)&quot;<br/>-&gt;-&gt; Set Object Flag -&gt; Unset ( <span style=\"font-weight:bold;\">= false</span> ) flag [OBJECT] [Bob] [FLAG NAME] dead ( <span style=\"font-weight:bold;\">= false</span> )<br/>-&gt; else -&gt;<br/>-&gt;-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;<br/>else -&gt;<br/>-&gt; Print message (&quot;What?! Did you think this was a magical defibrillator? you need to get near bob first, in order to use the defibrillator on him, silly!&quot;)<br/><br/>or...<br/><br/>If Player is not in Lounge, then:<br/>-&gt; Print message (&quot;What?! Did you think this was a magical defibrillator? you need to get near bob first, in order to use the defibrillator on him, silly!&quot;)<br/>Else -&gt;<br/>-&gt; If Bob is dead, then -&gt;<br/>-&gt;-&gt; print message -&gt; &quot;(miraculously...he comes back to life... or blah blah blah = see tutorial)&quot;<br/>-&gt;-&gt; Set Object Flag -&gt; Unset ( <span style=\"font-weight:bold;\">= false</span> ) flag [OBJECT] [Bob] [FLAG NAME] dead ( <span style=\"font-weight:bold;\">= false</span> )<br/>-&gt; else -&gt;<br/>-&gt;-&gt; print message -&gt; &quot;bob is already alive, silly!&quot;",
      "PostDate": "2013-04-20T13:08:44+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24149",
      "UserId": 0,
      "Username": "Candacis",
      "UserAvatar": "6829_1366365668.jpg",
      "UserGravatar": "7a1eed5e1c199fcb7203af5a03714db6",
      "EditableText": "Oh my god, Hegemon, wow, thank you so much  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> \nIt is a lot of information to take in, I think I have to re-read this several times ^^\nBut I understand the revive Bob function now a little bit better and it makes more sense to insert the player in lounge command there. Thanks!\nNow it works good and I made my way past the bee timer  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> \n\nAnother question turned up. I made a picture frame for the kitchen (500x300), but in the game it only shows a thin line of the picture and not the whole picture. I suspect, it conflicts with the map, because as long as I turn the map off, it shows the picture properly. Is there a way to have both? Picture frame and map or do I have to choose? ^^",
      "EditableFormat": "bbcode",
      "HTML": "Oh my god, Hegemon, wow, thank you so much  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> <br/>It is a lot of information to take in, I think I have to re-read this several times ^^<br/>But I understand the revive Bob function now a little bit better and it makes more sense to insert the player in lounge command there. Thanks!<br/>Now it works good and I made my way past the bee timer  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> <br/><br/>Another question turned up. I made a picture frame for the kitchen (500x300), but in the game it only shows a thin line of the picture and not the whole picture. I suspect, it conflicts with the map, because as long as I turn the map off, it shows the picture properly. Is there a way to have both? Picture frame and map or do I have to choose? ^^",
      "PostDate": "2013-04-20T21:36:17+01:00",
      "LastEditDate": null
    }
  ]
}
