{
  "Topic": {
    "TopicId": "6dx95noteuoswbxixqpvmw",
    "ForumId": "10",
    "Title": "verb and attributes ",
    "LastUpdated": "2021-07-25T02:05:52.9993015Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "7b324514-e3ad-4791-b349-5977ed27332b",
      "UserId": 553223,
      "Username": "dav_erage",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a7b67660c0a45ab799632f1374f40df9?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello! Im new to Quest and have been making my way through the docs and tutorials. I do not though understand the _Verbs are just script attributes_ section.  Specifically this code:\r\n\r\n```if (chair.parent = player.parent) {\r\n  do (chair, \"sit\")\r\n}\r\nelse {\r\n  msg (\"Nothing to sit on here!\")\r\n}.\r\n```\r\nThe example I follow in my test game crashes the program. I don't know if its the wording of the doc or something Im not following correctly but I cant seem to get it right. I think its because the code calls back to itself?  If someone could show or explain to me what is should look like so if functions properly Id really appreciate it because I am stumped.\r\n\r\n**doc being referred to:** http://docs.textadventures.co.uk/quest/using_verbs.html",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello! Im new to Quest and have been making my way through the docs and tutorials. I do not though understand the <em>Verbs are just script attributes</em> section.  Specifically this code:</p>\n<pre><code>  do (chair, \"sit\")\n}\nelse {\n  msg (\"Nothing to sit on here!\")\n}.\n</code></pre>\n<p>The example I follow in my test game crashes the program. I don't know if its the wording of the doc or something Im not following correctly but I cant seem to get it right. I think its because the code calls back to itself?  If someone could show or explain to me what is should look like so if functions properly Id really appreciate it because I am stumped.</p>\n<p><strong>doc being referred to:</strong> http://docs.textadventures.co.uk/quest/using_verbs.html</p>\n\n",
      "PostDate": "2021-07-25T02:05:52.9993015Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "98a0c712-5a14-47ef-8a9b-63bbc5c95552",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello!\r\n\r\nWelcome to the Quest community!\r\n\r\nAlso, thanks for linking to what you're working with! That is very helpful!\r\n\r\n---\r\nI think (maybe) this part of the docs was written before Quest had a default ```sit``` command, and then some parts of it were updated later (maybe; I'm just guessing).\r\n\r\nAnyway, to see why your code is causing Quest to misbehave, we'd really need to see (at least that part) of your code.\r\n\r\n...but it might help if I showed you how I would handle this in the current version of Quest.\r\n\r\nFirst, (only if using the desktop version of Quest) I would copy the ```sit``` command into my game's main code to [override it](https://docs.textadventures.co.uk/quest/overriding.html \"https://docs.textadventures.co.uk/quest/overriding.html\"). \r\n\r\n*(If using the online Quest editor, you just create a new command named ```sit_cmd``` with the pattern ```sit;sit down```, and that would override the default ```sit``` command. You can also do it this way in the desktop editor, by the way.)*\r\n\r\nThen, I would change the script of that \"imported\" ```sit``` command to this (which is very similar to the script in the example to which you are referring, but updated for Quest 5.8 (and overall performance)):\r\n\r\n```\r\nif (chair.parent = game.pov.parent) {\r\n  do (chair, \"sit\")\r\n}\r\nelse {\r\n  msg (\"Nothing to sit on here!\")\r\n}\r\n```\r\n\r\n---\r\nNote that there will be an error if there is no existing ```chair``` object in your code.\r\n\r\n```Error running script: Error compiling expression 'chair.parent = game.pov.parent': Unknown object or variable 'chair'```\r\n\r\n---\r\nAlso, if you were to post your error, we can usually read the error to get closer to what the problems is. :o)\r\n\r\n---\r\nAnyway, then I add my \"sit on; sit upon; sit down on; sit down upon\" verb to my ```chair``` object, and I just put a text response to test things out in this example. My string is ```This is no time to be sitting around in chairs!```\r\n\r\n...and I get an error!\r\n\r\n```Error running script: Object reference not set to an instance of an object.```\r\n\r\nOh, no!\r\n\r\nThis is happening because the line of code ```do (chair, \"sit\")``` expects a script, not a string of text.\r\n\r\nIf I change my verb on the chair to this script, everything works: \r\n\r\n```\r\nmsg (\"This is no time to be sitting around in chairs!\")\r\n```\r\n\r\n---\r\nAnother solution (the better solution) would be to alter the ```sit``` command's script to handle things whether or not the verb on the chair is a string or if it's a script:\r\n\r\n```\r\nif (chair.parent = game.pov.parent) {\r\n  if (TypeOf(chair.sit) = \"string\") {\r\n    msg (chair.sit)\r\n  }\r\n  else {\r\n    do (chair, \"sit\")\r\n  }\r\n}\r\nelse {\r\n  msg (\"Nothing to sit on here!\")\r\n}\r\n```\r\n\r\n---\r\nNow, that works no matter what kind of verb attribute we decide to use (string (meaning a text response) or to run a script).\r\n\r\nHere is the example game I used to test things:\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.8.7753.35184-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"chair_example\">\r\n    <gameid>b74d0d62-f664-4d6f-b1b4-39af84095b0e</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2021</firstpublished>\r\n  </game>\r\n  <command name=\"sit\">\r\n    <pattern type=\"string\">^sit$|^sit down$</pattern>\r\n    <script>\r\n      if (chair.parent = game.pov.parent) {\r\n        if (TypeOf(chair.sit) = \"string\") {\r\n          msg (chair.sit)\r\n        }\r\n        else {\r\n          do (chair, \"sit\")\r\n        }\r\n      }\r\n      else {\r\n        msg (\"Nothing to sit on here!\")\r\n      }\r\n    </script>\r\n  </command>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"chair\">\r\n      <inherit name=\"editor_object\" />\r\n      <sit>This is no time to be sitting around in chairs!</sit>\r\n    </object>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n</details>\r\n\r\n---\r\nPS\r\n\r\nThe example expects the ```sit``` attribute on the chair object to be a script because logic dictates that.\r\n\r\nIf the player can actually sit in the chair, there are most probably object attributes which need to be set to let the game know the player is now sitting in the chair -- because you'd now need to check if the player is sitting in the chair before the player might try taking the chair that the player is in, hence causing the entire game universe to collapse in on itself due to too much recursion (the player carrying an object that the player is also sitting in).\r\n\r\nSo, minimum effort, you'd need to have a script that moved the player object to the chair object when sitting. Then, you'd need another script on a command with the pattern ```stand;stand up;get up``` to move the player object from the ```chair``` object to the ```chair``` object's parent object when the player is sitting in the ```chair``` object --  or to otherwise say the player is not sitting in anything when applicable.\r\n\r\nActually moving the player object to the chair object would probably cause behavior you wouldn't expect, though, unless you already set the ```chair``` object up as an object/room. Usually, there would be a flag set up on either the player or the chair (or preferably both) to let the game know when the player is \"sitting\" in the chair.\r\n\r\nThis factor alone (actually moving the player to the chair) would cause everything to behave differently than in the example I am currently going by, though. So, ignore that. No moving. We'll just pretend we set ```chair.being_used``` to ```true``` in the script when the player sits down, and setting it to ```false``` when the player stands up or goes somewhere (if possible while sitting).\r\n\r\nYou'd also want to add a ```take``` script to the chair to check whether or not the player is sitting in it before taking it.\r\n\r\nAlso, you'd want to modify the ```go``` command's script to handle whether or not the player gets up out of the chair automatically before going anywhere while seated, or if the player has to manually stand up before going somewhere while seated.\r\n\r\n---\r\nAlso also, sorry to get so technical after you said you are new, but you started it by asking about this!\r\n\r\n:)\r\n\r\n---\r\nIf you have any more questions, please, do not hesitate to ask!\r\n\r\nGood luck!",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello!</p>\n<p>Welcome to the Quest community!</p>\n<p>Also, thanks for linking to what you're working with! That is very helpful!</p>\n<hr>\n<p>I think (maybe) this part of the docs was written before Quest had a default <code>sit</code> command, and then some parts of it were updated later (maybe; I'm just guessing).</p>\n<p>Anyway, to see why your code is causing Quest to misbehave, we'd really need to see (at least that part) of your code.</p>\n<p>...but it might help if I showed you how I would handle this in the current version of Quest.</p>\n<p>First, (only if using the desktop version of Quest) I would copy the <code>sit</code> command into my game's main code to <a href=\"https://docs.textadventures.co.uk/quest/overriding.html\" title=\"https://docs.textadventures.co.uk/quest/overriding.html\">override it</a>.</p>\n<p><em>(If using the online Quest editor, you just create a new command named <code>sit_cmd</code> with the pattern <code>sit;sit down</code>, and that would override the default <code>sit</code> command. You can also do it this way in the desktop editor, by the way.)</em></p>\n<p>Then, I would change the script of that \"imported\" <code>sit</code> command to this (which is very similar to the script in the example to which you are referring, but updated for Quest 5.8 (and overall performance)):</p>\n<pre><code>if (chair.parent = game.pov.parent) {\n  do (chair, \"sit\")\n}\nelse {\n  msg (\"Nothing to sit on here!\")\n}\n</code></pre>\n<hr>\n<p>Note that there will be an error if there is no existing <code>chair</code> object in your code.</p>\n<p><code>Error running script: Error compiling expression 'chair.parent = game.pov.parent': Unknown object or variable 'chair'</code></p>\n<hr>\n<p>Also, if you were to post your error, we can usually read the error to get closer to what the problems is. :o)</p>\n<hr>\n<p>Anyway, then I add my \"sit on; sit upon; sit down on; sit down upon\" verb to my <code>chair</code> object, and I just put a text response to test things out in this example. My string is <code>This is no time to be sitting around in chairs!</code></p>\n<p>...and I get an error!</p>\n<p><code>Error running script: Object reference not set to an instance of an object.</code></p>\n<p>Oh, no!</p>\n<p>This is happening because the line of code <code>do (chair, \"sit\")</code> expects a script, not a string of text.</p>\n<p>If I change my verb on the chair to this script, everything works:</p>\n<pre><code>msg (\"This is no time to be sitting around in chairs!\")\n</code></pre>\n<hr>\n<p>Another solution (the better solution) would be to alter the <code>sit</code> command's script to handle things whether or not the verb on the chair is a string or if it's a script:</p>\n<pre><code>if (chair.parent = game.pov.parent) {\n  if (TypeOf(chair.sit) = \"string\") {\n    msg (chair.sit)\n  }\n  else {\n    do (chair, \"sit\")\n  }\n}\nelse {\n  msg (\"Nothing to sit on here!\")\n}\n</code></pre>\n<hr>\n<p>Now, that works no matter what kind of verb attribute we decide to use (string (meaning a text response) or to run a script).</p>\n<p>Here is the example game I used to test things:</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.8.7753.35184--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"chair_example\"&gt;\n    &lt;gameid&gt;b74d0d62-f664-4d6f-b1b4-39af84095b0e&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2021&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;command name=\"sit\"&gt;\n    &lt;pattern type=\"string\"&gt;^sit$|^sit down$&lt;/pattern&gt;\n    &lt;script&gt;\n      if (chair.parent = game.pov.parent) {\n        if (TypeOf(chair.sit) = \"string\") {\n          msg (chair.sit)\n        }\n        else {\n          do (chair, \"sit\")\n        }\n      }\n      else {\n        msg (\"Nothing to sit on here!\")\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"chair\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;sit&gt;This is no time to be sitting around in chairs!&lt;/sit&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n<hr>\n<p>PS</p>\n<p>The example expects the <code>sit</code> attribute on the chair object to be a script because logic dictates that.</p>\n<p>If the player can actually sit in the chair, there are most probably object attributes which need to be set to let the game know the player is now sitting in the chair -- because you'd now need to check if the player is sitting in the chair before the player might try taking the chair that the player is in, hence causing the entire game universe to collapse in on itself due to too much recursion (the player carrying an object that the player is also sitting in).</p>\n<p>So, minimum effort, you'd need to have a script that moved the player object to the chair object when sitting. Then, you'd need another script on a command with the pattern <code>stand;stand up;get up</code> to move the player object from the <code>chair</code> object to the <code>chair</code> object's parent object when the player is sitting in the <code>chair</code> object --  or to otherwise say the player is not sitting in anything when applicable.</p>\n<p>Actually moving the player object to the chair object would probably cause behavior you wouldn't expect, though, unless you already set the <code>chair</code> object up as an object/room. Usually, there would be a flag set up on either the player or the chair (or preferably both) to let the game know when the player is \"sitting\" in the chair.</p>\n<p>This factor alone (actually moving the player to the chair) would cause everything to behave differently than in the example I am currently going by, though. So, ignore that. No moving. We'll just pretend we set <code>chair.being_used</code> to <code>true</code> in the script when the player sits down, and setting it to <code>false</code> when the player stands up or goes somewhere (if possible while sitting).</p>\n<p>You'd also want to add a <code>take</code> script to the chair to check whether or not the player is sitting in it before taking it.</p>\n<p>Also, you'd want to modify the <code>go</code> command's script to handle whether or not the player gets up out of the chair automatically before going anywhere while seated, or if the player has to manually stand up before going somewhere while seated.</p>\n<hr>\n<p>Also also, sorry to get so technical after you said you are new, but you started it by asking about this!</p>\n<p>:)</p>\n<hr>\n<p>If you have any more questions, please, do not hesitate to ask!</p>\n<p>Good luck!</p>\n\n",
      "PostDate": "2021-07-25T02:51:42.2398999Z",
      "LastEditDate": "2021-07-25T03:08:48.5315666Z",
      "link": null
    },
    {
      "PostId": "edf0675e-6520-4754-a97b-563d4942b2da",
      "UserId": 553223,
      "Username": "dav_erage",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a7b67660c0a45ab799632f1374f40df9?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wow yeah this was very helpful, thanks a lot! I understand what's going on much more now. Taking your suggestion also worked.  I cant code myself so some of this is hard to understand or fully grasp when reading the code view.  I had the idea that some default code was at play when trying to go by the docs example but I didn't know you could override them in the library elements until now. (Also sorry I'm just now noticing I was missing the first line of that code from the doc.)\r\n\r\nGoing over your PS  trying to make it so you can sit, stand, take (only when standing) the chair and stand from where ever you drop the chair to understand things more. I seem to have it working with adding the ```being_used``` attribute if that's what you meant. Made it so that the player can only take the chair if its ```false``` and making it ```true``` when sat on. Is that what you meant by using that instead of the flags? \r\n\r\nAs for the ```go``` command the only thing I can think of to make it so that you leave the chair when you go to another room was setting the ```chair.being_used``` to ```false```. \r\n\r\nAgain thank you for your help! ",
      "EditableFormat": "markdown",
      "HTML": "<p>Wow yeah this was very helpful, thanks a lot! I understand what's going on much more now. Taking your suggestion also worked.  I cant code myself so some of this is hard to understand or fully grasp when reading the code view.  I had the idea that some default code was at play when trying to go by the docs example but I didn't know you could override them in the library elements until now. (Also sorry I'm just now noticing I was missing the first line of that code from the doc.)</p>\n<p>Going over your PS  trying to make it so you can sit, stand, take (only when standing) the chair and stand from where ever you drop the chair to understand things more. I seem to have it working with adding the <code>being_used</code> attribute if that's what you meant. Made it so that the player can only take the chair if its <code>false</code> and making it <code>true</code> when sat on. Is that what you meant by using that instead of the flags?</p>\n<p>As for the <code>go</code> command the only thing I can think of to make it so that you leave the chair when you go to another room was setting the <code>chair.being_used</code> to <code>false</code>.</p>\n<p>Again thank you for your help!</p>\n\n",
      "PostDate": "2021-07-27T21:43:54.188536Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "40eae772-ccb5-4912-a0e8-19e78d1cbe52",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">  I cant code myself so some of this is hard to understand or fully grasp when reading the code view. \r\n\r\nI was in the same boat 3 or 4 years ago.\r\n\r\nYou'll catch on. :o)\r\n\r\n---\r\n> Going over your PS trying to make it so you can sit, stand, take (only when standing) the chair and stand from where ever you drop the chair to understand things more.\r\n\r\nIt seems like you pretty much got a handle on it.\r\n\r\nAlso, a flag is the same thing as a ```boolean attribute```. So, you did it exactly the same way I'd have done it; you just call it a flag (which is correct; both things mean the same thing).\r\n\r\n---\r\n> As for the ```go``` command the only thing I can think of to make it so that you leave the chair when you go to another room was setting the ```chair.being_used``` to ```false```.\r\n\r\nThat's a good way to handle it.\r\n\r\nThe easiest thing would probably be putting an **After leaving the room** script on the room with the chair to handle that.\r\n\r\n---\r\nIf you need any more help, that's what we're here for!\r\n\r\nGood luck, and happy gaming!",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I cant code myself so some of this is hard to understand or fully grasp when reading the code view.</p>\n</blockquote>\n<p>I was in the same boat 3 or 4 years ago.</p>\n<p>You'll catch on. :o)</p>\n<hr>\n<blockquote>\n<p>Going over your PS trying to make it so you can sit, stand, take (only when standing) the chair and stand from where ever you drop the chair to understand things more.</p>\n</blockquote>\n<p>It seems like you pretty much got a handle on it.</p>\n<p>Also, a flag is the same thing as a <code>boolean attribute</code>. So, you did it exactly the same way I'd have done it; you just call it a flag (which is correct; both things mean the same thing).</p>\n<hr>\n<blockquote>\n<p>As for the <code>go</code> command the only thing I can think of to make it so that you leave the chair when you go to another room was setting the <code>chair.being_used</code> to <code>false</code>.</p>\n</blockquote>\n<p>That's a good way to handle it.</p>\n<p>The easiest thing would probably be putting an <strong>After leaving the room</strong> script on the room with the chair to handle that.</p>\n<hr>\n<p>If you need any more help, that's what we're here for!</p>\n<p>Good luck, and happy gaming!</p>\n\n",
      "PostDate": "2021-07-28T18:56:10.8180357Z",
      "LastEditDate": "2021-07-28T19:17:55.8225607Z",
      "link": null
    },
    {
      "PostId": "f1bab3c1-833f-405f-8fc1-7cebb0ef9571",
      "UserId": 553223,
      "Username": "dav_erage",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a7b67660c0a45ab799632f1374f40df9?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry, one more thing (for now!)\r\n\r\nIn the same part of the doc it says you can add multiple verbs that have different meanings, in the **verbs and attributes** section,  to the same object and have one invoke the other! When I add the verbs though it also displays both of them in the game and I'm sure no one would want two verbs being displayed that do the same thing and that that wasn't the docs intention.\r\n\r\nI could disable the display for the verbs and only have it display the ones I want but that seems like much more of a roundabout way of doing it.  Is this another case of  it being for an older version of Quest or am I doing something wrong?",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry, one more thing (for now!)</p>\n<p>In the same part of the doc it says you can add multiple verbs that have different meanings, in the <strong>verbs and attributes</strong> section,  to the same object and have one invoke the other! When I add the verbs though it also displays both of them in the game and I'm sure no one would want two verbs being displayed that do the same thing and that that wasn't the docs intention.</p>\n<p>I could disable the display for the verbs and only have it display the ones I want but that seems like much more of a roundabout way of doing it.  Is this another case of  it being for an older version of Quest or am I doing something wrong?</p>\n\n",
      "PostDate": "2021-07-30T21:34:02.4780367Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "51ead96b-afd0-4351-ae98-3d9d9280933c",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello!\r\n\r\nUm... I usually disable the links. So, I'm not very knowledgeable concerning this, but I think it's just a little complicated and nothing you're doing incorrectly or anything like that.\r\n\r\nLet me find a link that might help. . .\r\n\r\nHere we are:\r\nhttps://docs.textadventures.co.uk/quest/display_verbs.html\r\n\r\nThis section in particular:\r\nhttps://docs.textadventures.co.uk/quest/display_verbs.html#coding\r\n\r\n\r\nIf that doesn't help, just let us know. I may not be well-versed in this particular part of Quest, but other people here are. :)",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello!</p>\n<p>Um... I usually disable the links. So, I'm not very knowledgeable concerning this, but I think it's just a little complicated and nothing you're doing incorrectly or anything like that.</p>\n<p>Let me find a link that might help. . .</p>\n<p>Here we are:<br>\nhttps://docs.textadventures.co.uk/quest/display_verbs.html</p>\n<p>This section in particular:<br>\nhttps://docs.textadventures.co.uk/quest/display_verbs.html#coding</p>\n<p>If that doesn't help, just let us know. I may not be well-versed in this particular part of Quest, but other people here are. :)</p>\n\n",
      "PostDate": "2021-07-31T17:12:40.9142487Z",
      "LastEditDate": "2021-07-31T17:17:22.2980469Z",
      "link": null
    },
    {
      "PostId": "340baf27-7f21-40e0-9a9e-b889ed83c728",
      "UserId": 553223,
      "Username": "dav_erage",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a7b67660c0a45ab799632f1374f40df9?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It kindve helps. Its just odd that the doc has you go about this way of using different verbs that mean the same thing to one object when you can just add those different words to the command pattern. Maybe that was for a version before you could have more than one.",
      "EditableFormat": "markdown",
      "HTML": "<p>It kindve helps. Its just odd that the doc has you go about this way of using different verbs that mean the same thing to one object when you can just add those different words to the command pattern. Maybe that was for a version before you could have more than one.</p>\n\n",
      "PostDate": "2021-07-31T21:04:15.0113793Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
