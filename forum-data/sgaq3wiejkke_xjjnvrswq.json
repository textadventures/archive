{
  "Topic": {
    "TopicId": "sgaq3wiejkke_xjjnvrswq",
    "ForumId": "10",
    "Title": "Choosing/Changing Characters",
    "LastUpdated": "2016-12-03T00:06:43.882124Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "dc29816a-cc2d-4a22-8993-6517dc68cc7a",
      "UserId": 279091,
      "Username": "lizzytypeperson",
      "AvatarUrl": "https://secure.gravatar.com/avatar/975cf844811c378a735db655b303b6f5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey, so, I've gone through the tutorial and I've been working on this game pretty successfully so far but I just can't wrap my head around one thing that I feel is probably pretty simple. At the start of my game, I'd like for the player to select one of three characters to play as and I just kind of don't understand how to do that. \r\nAdditionally, I wanted to see if I could make the player able to switch between the characters at will, and I know there's a thing about scripting that somewhere online. I have read it but it says it's obsolete because that's a function that's just programmed into the latest versions of Quest. Except I don't know how to make that work. Like, I have the character objects set to be things the player can turn into, but I don't know how to make it work in-game. The command for it, I guess. Or if I need to make a command for it.\r\nAny help would be greatly appreciated!!",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey, so, I've gone through the tutorial and I've been working on this game pretty successfully so far but I just can't wrap my head around one thing that I feel is probably pretty simple. At the start of my game, I'd like for the player to select one of three characters to play as and I just kind of don't understand how to do that.<br>\nAdditionally, I wanted to see if I could make the player able to switch between the characters at will, and I know there's a thing about scripting that somewhere online. I have read it but it says it's obsolete because that's a function that's just programmed into the latest versions of Quest. Except I don't know how to make that work. Like, I have the character objects set to be things the player can turn into, but I don't know how to make it work in-game. The command for it, I guess. Or if I need to make a command for it.<br>\nAny help would be greatly appreciated!!</p>\n\n",
      "PostDate": "2016-12-03T00:06:43.882124Z",
      "LastEditDate": null
    },
    {
      "PostId": "a62c5569-d277-4baf-bbcb-c6ec44cedc29",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is an explanation from my tutorial game that is hiding in some dark recesses of Quests game bank!  It needs some user friendliness added but I like to refer to it when I run into problems, so here is code from my switching POV rooms.\r\n\r\n**You can skip down to the bottom if you don't want to mess with the code below**\r\n\r\n```\r\n<description><![CDATA[<br/>You are in a changing player object room.  If you want to give it a shot, simply type either \"switch to magoo\" or \"switch to xanadu\" to see what happens.<br/><br/>Also, there is a ladder here that leads up to the 'changing room'.  Try taking your controlled character up there and type the switch commands mentioned above.  <br/><br/>For more of an explanation of how this switching of characters works, type 'explain switch'.]]></description>\r\n    <command name=\"switch to xan cmd\">\r\n      <pattern>switch to xanadu; switch to Xanadu; switch to xan; switch to Xan</pattern>\r\n      <script><![CDATA[\r\n        if (game.pov = player) {\r\n          msg (\"You close your eyes and grunt real hard.  When you open them...<br/>\")\r\n          wait {\r\n            msg (\"<br/>You feel different, but oddly look quite similar.  You have switched places with Xanadu, your alter ego.  To change back to Magoo, simply type 'switch to magoo'.<br/>\")\r\n          }\r\n          ChangePOV (Xanadu)\r\n        }\r\n        else {\r\n          msg (\"Ummm... you already are Xanadu.\")\r\n        }\r\n      ]]></script>\r\n    </command>\r\n    <command name=\"switch to magoo cmd\">\r\n      <pattern>switch to magoo; switch to Magoo; switch to mag; switch to Mag</pattern>\r\n      <script><![CDATA[\r\n        if (game.pov = Xanadu) {\r\n          msg (\"<br/>You close your eyes and grunt real hard.  When you open them...<br/>\")\r\n          wait {\r\n            msg (\"<br/>You feel different, but oddly look quite similar.  You have switched places with Xanadu, your alter ego.  To change back to xanadu, simply type 'switch to xanadu'.<br/>\")\r\n          }\r\n          ChangePOV (player)\r\n        }\r\n        else {\r\n          msg (\"You already are Magoo, dork.\")\r\n        }\r\n      ]]></script>\r\n```\r\n\r\nI know this only answers part of your question.  I'll look at the other part of it.  You do need to tick the box that makes it possible for the object to become a player object under the feature tabs.   You need a global command if you want to be able to switch players from any location in the game.  \r\n\r\nQuite easy after all... all you need to do is choose the change player object script and it will move you into the room that the player is in.  Pretty simple after all.\r\n\r\nSo...\r\n1.  Create all of your character objects by adding each object and tick the player can become object box under features.\r\n2a.  Create a global command and type --> change characters; change player; --> any command you want the player to type to be able to change players.  Note - if you have multiple characters you can switch to, you will want to add a command for each character object --> change to Fred AND change to Frank AND change to FIDO, etc... I'm sure there might be a fancy command string you can type in the box that can account for change to (whomever) and run a bunch of else if's but I think this is easier.\r\n2b.  If you want to change characters when only in certain room, place the command in the room and not in the game object in the tree.\r\n2c.  If you want to change characters when only in the same room, place an IF in there to check and see if the player you want to change to is in the same room as the player.\r\n**I have a small bit of sample code if you need to see a simpler switch in action**\r\nLet me know if this answers your questions!  Good luck!",
      "EditableFormat": "markdown",
      "HTML": "<p>This is an explanation from my tutorial game that is hiding in some dark recesses of Quests game bank!  It needs some user friendliness added but I like to refer to it when I run into problems, so here is code from my switching POV rooms.</p>\n<p><strong>You can skip down to the bottom if you don't want to mess with the code below</strong></p>\n<pre><code>&lt;description&gt;&lt;![CDATA[&lt;br/&gt;You are in a changing player object room.  If you want to give it a shot, simply type either \"switch to magoo\" or \"switch to xanadu\" to see what happens.&lt;br/&gt;&lt;br/&gt;Also, there is a ladder here that leads up to the 'changing room'.  Try taking your controlled character up there and type the switch commands mentioned above.  &lt;br/&gt;&lt;br/&gt;For more of an explanation of how this switching of characters works, type 'explain switch'.]]&gt;&lt;/description&gt;\n    &lt;command name=\"switch to xan cmd\"&gt;\n      &lt;pattern&gt;switch to xanadu; switch to Xanadu; switch to xan; switch to Xan&lt;/pattern&gt;\n      &lt;script&gt;&lt;![CDATA[\n        if (game.pov = player) {\n          msg (\"You close your eyes and grunt real hard.  When you open them...&lt;br/&gt;\")\n          wait {\n            msg (\"&lt;br/&gt;You feel different, but oddly look quite similar.  You have switched places with Xanadu, your alter ego.  To change back to Magoo, simply type 'switch to magoo'.&lt;br/&gt;\")\n          }\n          ChangePOV (Xanadu)\n        }\n        else {\n          msg (\"Ummm... you already are Xanadu.\")\n        }\n      ]]&gt;&lt;/script&gt;\n    &lt;/command&gt;\n    &lt;command name=\"switch to magoo cmd\"&gt;\n      &lt;pattern&gt;switch to magoo; switch to Magoo; switch to mag; switch to Mag&lt;/pattern&gt;\n      &lt;script&gt;&lt;![CDATA[\n        if (game.pov = Xanadu) {\n          msg (\"&lt;br/&gt;You close your eyes and grunt real hard.  When you open them...&lt;br/&gt;\")\n          wait {\n            msg (\"&lt;br/&gt;You feel different, but oddly look quite similar.  You have switched places with Xanadu, your alter ego.  To change back to xanadu, simply type 'switch to xanadu'.&lt;br/&gt;\")\n          }\n          ChangePOV (player)\n        }\n        else {\n          msg (\"You already are Magoo, dork.\")\n        }\n      ]]&gt;&lt;/script&gt;\n</code></pre>\n<p>I know this only answers part of your question.  I'll look at the other part of it.  You do need to tick the box that makes it possible for the object to become a player object under the feature tabs.   You need a global command if you want to be able to switch players from any location in the game.</p>\n<p>Quite easy after all... all you need to do is choose the change player object script and it will move you into the room that the player is in.  Pretty simple after all.</p>\n<p>So...</p>\n<ol>\n<li>Create all of your character objects by adding each object and tick the player can become object box under features.<br>\n2a.  Create a global command and type --&gt; change characters; change player; --&gt; any command you want the player to type to be able to change players.  Note - if you have multiple characters you can switch to, you will want to add a command for each character object --&gt; change to Fred AND change to Frank AND change to FIDO, etc... I'm sure there might be a fancy command string you can type in the box that can account for change to (whomever) and run a bunch of else if's but I think this is easier.<br>\n2b.  If you want to change characters when only in certain room, place the command in the room and not in the game object in the tree.<br>\n2c.  If you want to change characters when only in the same room, place an IF in there to check and see if the player you want to change to is in the same room as the player.<br>\n<strong>I have a small bit of sample code if you need to see a simpler switch in action</strong><br>\nLet me know if this answers your questions!  Good luck!</li>\n</ol>\n\n",
      "PostDate": "2016-12-03T00:58:46.5307516Z",
      "LastEditDate": "2016-12-03T01:46:14.3546468Z"
    },
    {
      "PostId": "4ccf5742-9031-438b-9d27-d322a99888fa",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the 'pov' system documentation/links:\r\n\r\nhttp://docs.textadventures.co.uk/quest/tutorial/changing_the_player_object.html\r\nhttp://docs.textadventures.co.uk/quest/functions/corelibrary/changepov.html\r\nhttp://docs.textadventures.co.uk/quest/upgrade_notes.html (see the link for the 5.3 beta game release, it is when the 'pov' system was added to quest)\r\nhttps://blog.textadventures.co.uk/2012/12/03/quest-5-3-beta-is-now-available/ ( scroll down to 'game change' section: see the 'changeable pov' content )\r\nhttps://blog.textadventures.co.uk/2012/09/19/pov-support-multiple-player-objects-in-quest-5-3/\r\n\r\n------------\r\n\r\nthe 'pov' system:\r\n\r\nprior (v5.2- / 520-) to quest version 5.3+ (530+), there was a single Player Object only, but now we can have multiple Player Objects, which we can switch the current control of for the person playing the game. This current-control is done via the 'pov' (point of view) Object Attribute contained within the 'game' Game (global settings and etc) Object. This 'game.pov' stores/saves and is/determines the currently controlled Player Object, an example in code:\r\n\r\n```\r\n<game name=\"example_game\">\r\n  <attr name=\"pov\" type=\"object\">player</attr> // this is your initially controlled Player Object\r\n</game>\r\n\r\n<object name=\"room\">\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n  <attr name=\"feature_player\" type=\"boolean\">true</attr> // it's shortened form is this: <feature_player /> // when you check for the Object to be '[can be player object]' in the GUI/Editor, this is the code line (it's the built-in 'feature_player' Boolean Attribute with it's Value as 'true' ) that makes the Object a Player Object, or in-code, you can also add the '<inherit name=\"editor_object\" />' and must also add too: '<inherit name=\"editor_player\" />', which will also make your Object a Player Object too\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n</object>\r\n\r\n<object name=\"HK\">\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n  <attr name=\"feature_player\" type=\"boolean\">true</attr> \r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n</object>\r\n\r\n<object name=\"lizzytypeperson\">\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n  <attr name=\"feature_player\" type=\"boolean\">true</attr>\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n</object>\r\n\r\n// ------\r\n\r\nand you can set/re-set/change who you're currently controlling in scripting, via:\r\n\r\nrun as script -> add new attribute -> 'variables' section/category -> 'set a variable or attribute' Script -> (see below)\r\n\r\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION\r\n\r\nexamples:\r\n\r\nset variable game.pov = [EXPRESSION] player // the currently controlled Player Object is the 'player' Player Object\r\nset variable game.pov = [EXPRESSION] HK // the currently controlled Player Object is the 'HK' Player Object\r\nset variable game.pov = [EXPRESSION] lizzytypeperson // the currently controlled Player Object is the 'lizzytypeperson' Player Object\r\n\r\nor directly in code, as:\r\n\r\ngame.pov = player // the currently controlled Player Object is the 'player' Player Object\r\ngame.pov = HK // the currently controlled Player Object is the 'HK' Player Object\r\ngame.pov = lizzytypeperson // the currently controlled Player Object is the 'lizzytypeperson' Player Object\r\n\r\nor, you can use the 'ChangePov' Script/Function:\r\n\r\nChangePov (player)\r\nChangePov (HK)\r\nChangePov (lizzytypeperson)\r\n\r\n// -----------\r\n\r\nIn the GUI/Editor:\r\n\r\nrun as script -> add new script -> 'Objects' section/category -> 'Change player object' script option // I think this is the same as the 'ChangePov' Function shown above\r\n```\r\n\r\n----------------------\r\n\r\nconceptually, this is what you want to do:\r\n\r\n1. create/add 3 Objects to be your 3 Player Objects, make sure you set them as 'can be Player Objects', which is done like this:\r\n\r\n'whatever' Object -> 'Features' Tab -> check in (or make sure it is checked in) the 'Player: player can become this object' box\r\n\r\n'whatever' Object -> 'Player' Tab -> Player: [Can be a player] // make sure it is on this option\r\n\r\nAlso, on the 'game' Game (global settings and etc) Object, you can set what Player Object is your initial/starting current Player Object (it doesn't matter if you do this as at game start you're going to be choosing which Player Object to start as anyways --- which will over-ride your initially setted Player Object, so you might as well do so, to avoid any possible issues that may come up if you don't):\r\n\r\n'game' Game (global settings and etc) Object -> 'Player' Tab -> Player Object: [PLAYER_OBJECT_THAT_YOU_WANT_TO_INITIALLY_START_AS]\r\n\r\n2. create the menu at the start of the game to select your initial/starting Player Object:\r\n\r\nthe built-in 'start' Script Attribute contained within the 'game' Game (global settings and etc) Object is the first thing that is done at the start of the game:\r\n\r\n'game' Game (global settings and etc) Object -> 'Scripts' Tab -> 'start' Script -> (see below)\r\n\r\nadd new script -> 'output' section/category -> 'Show a menu' Script -> (see below)\r\n\r\nShow menu with caption [text]: YOUR_PROMPT/QUESTION\r\nOptions from list/dictionary: game.pov_objectlist_attribute\r\nAllow player to ignore menu: [no]\r\nAfter choosing, run script: (see below)\r\n\r\nadd new script -> 'Objects' section/category -> 'change player object' -> (see below)\r\n\r\nchange player object to [expression] result // or if just the 'result' doesn't work, then try typing in this instead: GetObject (result)\r\n\r\n3. we need to now actually create/add our 'pov_objectlist_attribute' Objectlist Attribute contained within the 'game' Game (global settings and etc) Object (as the menu in #2, can't use an Objectlist Attribute that doesn't exist):\r\n\r\n(unfortunately, this can't be done in the GUI/Editor --- well maybe it can be with scripting, but let's just code it in directly, to be safe)\r\n\r\nat the very top of the screen, there's a horizontal menu bar, find the notepaper-like button between the 'play' and 'help' buttons, Click on this notepaper-like button, as it's a toggle between the GUI/Editor view mode and for this top horizontal menu bar notepaper-like button its the full/entire game code Code View mode. Now that you're looking at the GUI/Editor's code view of your entire/full game code, find this 'creation' tag block:\r\n\r\n```\r\n<game name=\"NAME_OF_YOUR_GAME\">\r\n  // various content: Attributes (author, version, firstpublished, start, etc etc etc)\r\n</game>\r\n```\r\n\r\nand we want to type/add in this 'creation' tag line/block, so it looks like this:\r\n\r\n```\r\n<game name=\"NAME_OF_YOUR_GAME\">\r\n  // various content: Attributes (author, version, firstpublished, start, etc etc etc)\r\n  <attr name=\"pov_objectlist_attribute\" type=\"objectlist\">NAME_OF_PLAYER_OBJECT_1;NAME_OF_PLAYER_OBJECT_2;NAME_OF_PLAYER_OBJECT_3</attr>\r\n</game>\r\n```\r\n\r\nnote that in #2, for the menu creation, we added/typed in: game.pov_objectlist_attribute, do you see how it matches up to the above? NAME_OF_CONTAINING_OBJECT.NAME_OF_ITS_CONTAINED_ATTRIBUTE: game.pov_objectlist_attribute, just so you can understand coding and its matchup to using the GUI/Editor stuff. The '<game name=\"xxx\">content</game>' tag block is the same as in the GUI/Editor: the 'game' Game Object -> its various Tabs for adding Attributes and whatever else\r\n\r\n4. create a Command to be able to type in a command during game play, to change your Player Objects (or let me know if you want to have a different game design on how/when/where you switch amongst your Player Objects), an example:\r\n\r\nObjects -> game -> Commands -> Add -> (see below)\r\n\r\n'Command' Tab:\r\n\r\nPattern: [Command pattern]\r\ntext box: cp\r\n// 'cp' for 'change pov', this (cp) is what you type in during game play, to change amongst your Player Objects\r\nName: change_pov_command\r\nUnresolved Object text: Failed to change your pov\r\nScript: (see below, it's the same as what you did in #2)\r\n\r\nadd new script -> 'output' section/category -> 'Show a menu' Script -> (see below)\r\n\r\nShow menu with caption [text]: YOUR_PROMPT/QUESTION\r\nOptions from list/dictionary: game.pov_objectlist_attribute\r\nAllow player to ignore menu: [no]\r\nAfter choosing, run script: (see below)\r\n\r\nadd new script -> 'Objects' section/category -> 'change player object' -> (see below)\r\n\r\nchange player object to [expression] result // or if just the 'result' doesn't work, then try typing in this instead: GetObject (result)\r\n\r\n--------\r\n\r\n5. I should have shown you in putting our menu scripting block into a Function... but whatever... meh. If you use the menu scripting block a lot, let me know, and I'll help show you how to put it into a Function, and how to use Functions, to make it easier for you. Or... we could just run the 'game.start' Script Attribute... to re-use the change pov menu... meh, whatever.",
      "EditableFormat": "markdown",
      "HTML": "<p>the 'pov' system documentation/links:</p>\n<p>http://docs.textadventures.co.uk/quest/tutorial/changing_the_player_object.html<br>\nhttp://docs.textadventures.co.uk/quest/functions/corelibrary/changepov.html<br>\nhttp://docs.textadventures.co.uk/quest/upgrade_notes.html (see the link for the 5.3 beta game release, it is when the 'pov' system was added to quest)<br>\nhttps://blog.textadventures.co.uk/2012/12/03/quest-5-3-beta-is-now-available/ ( scroll down to 'game change' section: see the 'changeable pov' content )<br>\nhttps://blog.textadventures.co.uk/2012/09/19/pov-support-multiple-player-objects-in-quest-5-3/</p>\n<hr>\n<p>the 'pov' system:</p>\n<p>prior (v5.2- / 520-) to quest version 5.3+ (530+), there was a single Player Object only, but now we can have multiple Player Objects, which we can switch the current control of for the person playing the game. This current-control is done via the 'pov' (point of view) Object Attribute contained within the 'game' Game (global settings and etc) Object. This 'game.pov' stores/saves and is/determines the currently controlled Player Object, an example in code:</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"pov\" type=\"object\"&gt;player&lt;/attr&gt; // this is your initially controlled Player Object\n&lt;/game&gt;\n\n&lt;object name=\"room\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n  &lt;attr name=\"feature_player\" type=\"boolean\"&gt;true&lt;/attr&gt; // it's shortened form is this: &lt;feature_player /&gt; // when you check for the Object to be '[can be player object]' in the GUI/Editor, this is the code line (it's the built-in 'feature_player' Boolean Attribute with it's Value as 'true' ) that makes the Object a Player Object, or in-code, you can also add the '&lt;inherit name=\"editor_object\" /&gt;' and must also add too: '&lt;inherit name=\"editor_player\" /&gt;', which will also make your Object a Player Object too\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"HK\"&gt;\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n  &lt;attr name=\"feature_player\" type=\"boolean\"&gt;true&lt;/attr&gt; \n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"lizzytypeperson\"&gt;\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n  &lt;attr name=\"feature_player\" type=\"boolean\"&gt;true&lt;/attr&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n&lt;/object&gt;\n\n// ------\n\nand you can set/re-set/change who you're currently controlling in scripting, via:\n\nrun as script -&gt; add new attribute -&gt; 'variables' section/category -&gt; 'set a variable or attribute' Script -&gt; (see below)\n\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION\n\nexamples:\n\nset variable game.pov = [EXPRESSION] player // the currently controlled Player Object is the 'player' Player Object\nset variable game.pov = [EXPRESSION] HK // the currently controlled Player Object is the 'HK' Player Object\nset variable game.pov = [EXPRESSION] lizzytypeperson // the currently controlled Player Object is the 'lizzytypeperson' Player Object\n\nor directly in code, as:\n\ngame.pov = player // the currently controlled Player Object is the 'player' Player Object\ngame.pov = HK // the currently controlled Player Object is the 'HK' Player Object\ngame.pov = lizzytypeperson // the currently controlled Player Object is the 'lizzytypeperson' Player Object\n\nor, you can use the 'ChangePov' Script/Function:\n\nChangePov (player)\nChangePov (HK)\nChangePov (lizzytypeperson)\n\n// -----------\n\nIn the GUI/Editor:\n\nrun as script -&gt; add new script -&gt; 'Objects' section/category -&gt; 'Change player object' script option // I think this is the same as the 'ChangePov' Function shown above\n</code></pre>\n<hr>\n<p>conceptually, this is what you want to do:</p>\n<ol>\n<li>create/add 3 Objects to be your 3 Player Objects, make sure you set them as 'can be Player Objects', which is done like this:</li>\n</ol>\n<p>'whatever' Object -&gt; 'Features' Tab -&gt; check in (or make sure it is checked in) the 'Player: player can become this object' box</p>\n<p>'whatever' Object -&gt; 'Player' Tab -&gt; Player: [Can be a player] // make sure it is on this option</p>\n<p>Also, on the 'game' Game (global settings and etc) Object, you can set what Player Object is your initial/starting current Player Object (it doesn't matter if you do this as at game start you're going to be choosing which Player Object to start as anyways --- which will over-ride your initially setted Player Object, so you might as well do so, to avoid any possible issues that may come up if you don't):</p>\n<p>'game' Game (global settings and etc) Object -&gt; 'Player' Tab -&gt; Player Object: [PLAYER_OBJECT_THAT_YOU_WANT_TO_INITIALLY_START_AS]</p>\n<ol start=\"2\">\n<li>create the menu at the start of the game to select your initial/starting Player Object:</li>\n</ol>\n<p>the built-in 'start' Script Attribute contained within the 'game' Game (global settings and etc) Object is the first thing that is done at the start of the game:</p>\n<p>'game' Game (global settings and etc) Object -&gt; 'Scripts' Tab -&gt; 'start' Script -&gt; (see below)</p>\n<p>add new script -&gt; 'output' section/category -&gt; 'Show a menu' Script -&gt; (see below)</p>\n<p>Show menu with caption [text]: YOUR_PROMPT/QUESTION<br>\nOptions from list/dictionary: game.pov_objectlist_attribute<br>\nAllow player to ignore menu: [no]<br>\nAfter choosing, run script: (see below)</p>\n<p>add new script -&gt; 'Objects' section/category -&gt; 'change player object' -&gt; (see below)</p>\n<p>change player object to [expression] result // or if just the 'result' doesn't work, then try typing in this instead: GetObject (result)</p>\n<ol start=\"3\">\n<li>we need to now actually create/add our 'pov_objectlist_attribute' Objectlist Attribute contained within the 'game' Game (global settings and etc) Object (as the menu in #2, can't use an Objectlist Attribute that doesn't exist):</li>\n</ol>\n<p>(unfortunately, this can't be done in the GUI/Editor --- well maybe it can be with scripting, but let's just code it in directly, to be safe)</p>\n<p>at the very top of the screen, there's a horizontal menu bar, find the notepaper-like button between the 'play' and 'help' buttons, Click on this notepaper-like button, as it's a toggle between the GUI/Editor view mode and for this top horizontal menu bar notepaper-like button its the full/entire game code Code View mode. Now that you're looking at the GUI/Editor's code view of your entire/full game code, find this 'creation' tag block:</p>\n<pre><code>&lt;game name=\"NAME_OF_YOUR_GAME\"&gt;\n  // various content: Attributes (author, version, firstpublished, start, etc etc etc)\n&lt;/game&gt;\n</code></pre>\n<p>and we want to type/add in this 'creation' tag line/block, so it looks like this:</p>\n<pre><code>&lt;game name=\"NAME_OF_YOUR_GAME\"&gt;\n  // various content: Attributes (author, version, firstpublished, start, etc etc etc)\n  &lt;attr name=\"pov_objectlist_attribute\" type=\"objectlist\"&gt;NAME_OF_PLAYER_OBJECT_1;NAME_OF_PLAYER_OBJECT_2;NAME_OF_PLAYER_OBJECT_3&lt;/attr&gt;\n&lt;/game&gt;\n</code></pre>\n<p>note that in #2, for the menu creation, we added/typed in: game.pov_objectlist_attribute, do you see how it matches up to the above? NAME_OF_CONTAINING_OBJECT.NAME_OF_ITS_CONTAINED_ATTRIBUTE: game.pov_objectlist_attribute, just so you can understand coding and its matchup to using the GUI/Editor stuff. The '' tag block is the same as in the GUI/Editor: the 'game' Game Object -&gt; its various Tabs for adding Attributes and whatever else</p>\n<ol start=\"4\">\n<li>create a Command to be able to type in a command during game play, to change your Player Objects (or let me know if you want to have a different game design on how/when/where you switch amongst your Player Objects), an example:</li>\n</ol>\n<p>Objects -&gt; game -&gt; Commands -&gt; Add -&gt; (see below)</p>\n<p>'Command' Tab:</p>\n<p>Pattern: [Command pattern]<br>\ntext box: cp<br>\n// 'cp' for 'change pov', this (cp) is what you type in during game play, to change amongst your Player Objects<br>\nName: change_pov_command<br>\nUnresolved Object text: Failed to change your pov<br>\nScript: (see below, it's the same as what you did in #2)</p>\n<p>add new script -&gt; 'output' section/category -&gt; 'Show a menu' Script -&gt; (see below)</p>\n<p>Show menu with caption [text]: YOUR_PROMPT/QUESTION<br>\nOptions from list/dictionary: game.pov_objectlist_attribute<br>\nAllow player to ignore menu: [no]<br>\nAfter choosing, run script: (see below)</p>\n<p>add new script -&gt; 'Objects' section/category -&gt; 'change player object' -&gt; (see below)</p>\n<p>change player object to [expression] result // or if just the 'result' doesn't work, then try typing in this instead: GetObject (result)</p>\n<hr>\n<ol start=\"5\">\n<li>I should have shown you in putting our menu scripting block into a Function... but whatever... meh. If you use the menu scripting block a lot, let me know, and I'll help show you how to put it into a Function, and how to use Functions, to make it easier for you. Or... we could just run the 'game.start' Script Attribute... to re-use the change pov menu... meh, whatever.</li>\n</ol>\n\n",
      "PostDate": "2016-12-03T07:35:45.4884706Z",
      "LastEditDate": "2016-12-03T07:46:45.0692831Z"
    }
  ]
}
