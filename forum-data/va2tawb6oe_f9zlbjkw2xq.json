{
  "Topic": {
    "TopicId": "va2tawb6oe_f9zlbjkw2xq",
    "ForumId": "10",
    "Title": "Can I do this? Text Processor within String Lists",
    "LastUpdated": "2019-11-18T05:46:50.874954Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "a35b8e6f-ca9e-4555-aec8-2619d2806468",
      "UserId": 227864,
      "Username": "Talon",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3b6191c9adc337e83fec8e293e3fc584?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm dabbling with string lists for random stuff and flavor,  and also to learn more about how code works . the idea I have is to have a big of ambiance trigger every minute or so using a timer. Simple enough with this code. \r\n\r\n```\r\ngame.text_processor_this = this \r\nenvironment.sound = PickOneStr (environment effects)\r\nmsg (\"<B>{environment.sound}</B>\")\r\n ```\r\n\r\n\r\nThis is simple enough, works fine , however I'm also trying to use the string lists to reference where the event is occurring.. something like this is one of the string list entries.\r\n\r\nA gentle breeze is blowing through the {this.alias}\r\nor\r\nA gentle breeze is blowing through the {player.parent.alias}\r\n\r\n\r\nWhen tried out the code just ignores any of the text processing done in the string list itself\r\n\r\nAm I trying to do something far to complex for a very minor aspect of my project\r\n\r\nThank you Talon",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm dabbling with string lists for random stuff and flavor,  and also to learn more about how code works . the idea I have is to have a big of ambiance trigger every minute or so using a timer. Simple enough with this code.</p>\n<pre><code>game.text_processor_this = this \nenvironment.sound = PickOneStr (environment effects)\nmsg (\"&lt;B&gt;{environment.sound}&lt;/B&gt;\")\n</code></pre>\n<p>This is simple enough, works fine , however I'm also trying to use the string lists to reference where the event is occurring.. something like this is one of the string list entries.</p>\n<p>A gentle breeze is blowing through the {this.alias}<br>\nor<br>\nA gentle breeze is blowing through the {player.parent.alias}</p>\n<p>When tried out the code just ignores any of the text processing done in the string list itself</p>\n<p>Am I trying to do something far to complex for a very minor aspect of my project</p>\n<p>Thank you Talon</p>\n\n",
      "PostDate": "2019-11-18T05:46:50.874954Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c4060586-1512-4840-8cfe-2b1d5d0c22b2",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**EDIT: I think this might be wrong. I glanced through the text processor code and didn't see where it would recurse into included strings, but I think that's done by `ProcessTextSection`. So there could be another error here, that I've missed because I wasn't following your explanation clearly.**\r\n\r\nThe text processor runs when a string is sent to the frontend. That is, when you run the `msg` command with it.\r\n\r\n`this.alias` should work properly, as long as the text_processor_this actually has an alias.\r\n\r\nDo you mean one of the elements in your stringlist contains text processor directives? In that case, you may need to run `ProcessText` manually.\r\n\r\n\r\nIf environment.sound is set to `A gentle breeze is blowing through the {this.alias}` then Quest would process it like this:\r\n\r\n* `message = \"<b>{environment.sound}</b>\"` - the message is now <code style=\"color: blue\">&lt;b>{environment.sound}&lt;/b></code>\r\n* `message = ProcessText (message)` - the message variable is now <code style=\"color: blue\">&lt;b>A gentle breeze is blowing through the {this.alias}&lt;/b></code>\r\n* `message = ProcessText (message)` - the message variable is now <code style=\"color: blue\">&lt;b>A gentle breeze is blowing through the fields&lt;/b></code>\r\n\r\nRunning `msg` calls `ProcessText` once only. You could run it again if you want that to work. Or build the string manually.\r\nSo the last line could be:\r\n```\r\nmsg (ProcessText(\"<B>{environment.sound}</B>\"))\r\n```\r\nor\r\n```\r\nmsg (\"<B>\" + environment.sound + \"</B>\")\r\n```\r\nthen it should work, because the string passed to the text processor is the one you want.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>EDIT: I think this might be wrong. I glanced through the text processor code and didn't see where it would recurse into included strings, but I think that's done by <code>ProcessTextSection</code>. So there could be another error here, that I've missed because I wasn't following your explanation clearly.</strong></p>\n<p>The text processor runs when a string is sent to the frontend. That is, when you run the <code>msg</code> command with it.</p>\n<p><code>this.alias</code> should work properly, as long as the text_processor_this actually has an alias.</p>\n<p>Do you mean one of the elements in your stringlist contains text processor directives? In that case, you may need to run <code>ProcessText</code> manually.</p>\n<p>If environment.sound is set to <code>A gentle breeze is blowing through the {this.alias}</code> then Quest would process it like this:</p>\n<ul>\n<li><code>message = \"&lt;b&gt;{environment.sound}&lt;/b&gt;\"</code> - the message is now <code style=\"color: blue\">&lt;b&gt;{environment.sound}&lt;/b&gt;</code></li>\n<li><code>message = ProcessText (message)</code> - the message variable is now <code style=\"color: blue\">&lt;b&gt;A gentle breeze is blowing through the {this.alias}&lt;/b&gt;</code></li>\n<li><code>message = ProcessText (message)</code> - the message variable is now <code style=\"color: blue\">&lt;b&gt;A gentle breeze is blowing through the fields&lt;/b&gt;</code></li>\n</ul>\n<p>Running <code>msg</code> calls <code>ProcessText</code> once only. You could run it again if you want that to work. Or build the string manually.<br>\nSo the last line could be:</p>\n<pre><code>msg (ProcessText(\"&lt;B&gt;{environment.sound}&lt;/B&gt;\"))\n</code></pre>\n<p>or</p>\n<pre><code>msg (\"&lt;B&gt;\" + environment.sound + \"&lt;/B&gt;\")\n</code></pre>\n<p>then it should work, because the string passed to the text processor is the one you want.</p>\n\n",
      "PostDate": "2019-11-18T08:51:36.2088843Z",
      "LastEditDate": "2019-11-19T09:12:22.2092777Z",
      "link": null
    }
  ]
}
