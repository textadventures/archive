{
  "Topic": {
    "TopicId": "rkhveef3zkwlhdntwamlva",
    "ForumId": "10",
    "Title": "How do I count up the volume of all the items in the Inventory? (Solved)",
    "LastUpdated": "2022-02-21T11:14:44.5489451Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "92fbf04e-bf0f-4b15-8a01-02ea2d75387c",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is there just a term for this? game.pov.volume doesn't seem to work.\r\n\r\nI was trying to create a function or turn timer which made a stat game.pov.INV_C (current Inventory weight) equal to the volume of all Child Objects in the player at all times, or each turn at least.\r\n\r\nUltimately I want to keep a Fishing Command from allowing the player to receive a fish if they dont have volume space for it.\r\n```\r\nI have stats INV_C and INV_M (maximum) on the Character.\r\n```\r\nI have a status that shows 'Encumbrance 0 / 21' in the panels (INV_C / INV_M)\r\n\r\n```I need to:```\r\n[set variable] game.pov.INV_C = player inventory volume\r\n\r\n```and for the fishing command I need:```\r\nIf [fish weight] exceeds [remaining inv space]\r\n   then 'Tough luck, buddy!'\r\n\r\n\r\nexamples of what im playing with:\r\n```\r\ngame.pov.INV = game.pov.INV_C + \" / \" + game.pov.INV_M\r\ngame.pov.INV_C = game.pov.volume\r\n```\r\n```\r\n  }\r\n  else if (game.pov.INV_C >= game.pov.INV_M) {\r\n    msg (\"You couldn't possibly add even one fish to your person...\")\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Is there just a term for this? game.pov.volume doesn't seem to work.</p>\n<p>I was trying to create a function or turn timer which made a stat game.pov.INV_C (current Inventory weight) equal to the volume of all Child Objects in the player at all times, or each turn at least.</p>\n<p>Ultimately I want to keep a Fishing Command from allowing the player to receive a fish if they dont have volume space for it.</p>\n<pre><code>I have stats INV_C and INV_M (maximum) on the Character.\n</code></pre>\n<p>I have a status that shows 'Encumbrance 0 / 21' in the panels (INV_C / INV_M)</p>\n<p><code>I need to:</code><br>\n[set variable] game.pov.INV_C = player inventory volume</p>\n<p><code>and for the fishing command I need:</code><br>\nIf [fish weight] exceeds [remaining inv space]<br>\nthen 'Tough luck, buddy!'</p>\n<p>examples of what im playing with:</p>\n<pre><code>game.pov.INV = game.pov.INV_C + \" / \" + game.pov.INV_M\ngame.pov.INV_C = game.pov.volume\n</code></pre>\n<pre><code>  }\n  else if (game.pov.INV_C &gt;= game.pov.INV_M) {\n    msg (\"You couldn't possibly add even one fish to your person...\")\n</code></pre>\n\n",
      "PostDate": "2022-02-21T11:14:44.5489451Z",
      "LastEditDate": "2022-02-24T19:43:37.4411004Z",
      "link": null
    },
    {
      "PostId": "37efc398-1747-4d7c-b0e1-a99eb24cbf91",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Is there just a term for this? game.pov.volume doesn't seem to work.\r\n\r\nGenerally, attributes such as `game.pov.volume` hold a static number that has already been calculated. In this case, the volume used for determining whether a player with an empty inventory will fit in a container.\r\n\r\nIf you're using the built-in volume/weight system, the expression `GetVolume (game.pov, false)` will calculate the volume of everything the player is currently carrying. (`GetVolume (game.pov, true)` is the combined volume of `game.pov` and its contents).\r\n\r\n> I have a status that shows 'Encumbrance 0 / 21' in the panels (INV_C / INV_M)\r\n\r\nIs INV_M the same as `maxvolume`? Or are you making your own system to replace the built in one?\r\n\r\n> and for the fishing command I need:\r\n\r\nOne common way to do this (if you're using the built in inventory volume limits) would be:\r\n<pre><code>MoveObjectHere (<em style=\"color: blue\">some fish</em>)\r\nDoTake (<em style=\"color: blue\">some fish</em>, false)</code></pre>\r\nOr (same thing, slightly more efficient, but slightly less easy to read):\r\n<pre><code><em style=\"color: blue\">some fish</em>.parent = game.pov.parent\r\nDoTake (<em style=\"color: blue\">some fish</em>, false)</code></pre>\r\n\r\n(assuming that <em style=\"color: blue\">some fish</em> is either the fish object, or a variable referring to the fish object)\r\n(if you're cloning the fish at this point, it would be more like\r\n<pre><code>newfish = CloneObjectAndMoveHere (<em style=\"color: blue\">original fish</em>)\r\nDoTake (newfish, false)</code></pre>\r\n)\r\nInstead of putting the fish straight in the inventory, it puts it on the ground next to the player, and then runs the built in \"take\" command, which already has suitable responses if the inventory is full. Some players prefer this because if they run out of space, they can choose to drop something else to make space for the fish.\r\n\r\nIf you don't want to do it like that, you'd probably want to do something like:\r\n<pre><code>volume = <em style=\"color: blue\">some fish</em>.volume\r\nforeach (object, GetAllChildObjects (game.pov)) {\r\n  if (HasInt (object, \"volume\") and GetBoolean (object, \"visible\")) {\r\n    volume = volume + object.volume\r\n  }\r\n}\r\nif (volume > game.pov.INV_M) {\r\n  msg (\"<em style=\"color: orange\">There isn't space for another fish in your pockets.</em>\")\r\n}\r\nelse {\r\n  <em style=\"color: blue\">some fish</em>.parent = game.pov\r\n  game.pov.INV_C = volume\r\n}</code></pre>",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Is there just a term for this? game.pov.volume doesn't seem to work.</p>\n</blockquote>\n<p>Generally, attributes such as <code>game.pov.volume</code> hold a static number that has already been calculated. In this case, the volume used for determining whether a player with an empty inventory will fit in a container.</p>\n<p>If you're using the built-in volume/weight system, the expression <code>GetVolume (game.pov, false)</code> will calculate the volume of everything the player is currently carrying. (<code>GetVolume (game.pov, true)</code> is the combined volume of <code>game.pov</code> and its contents).</p>\n<blockquote>\n<p>I have a status that shows 'Encumbrance 0 / 21' in the panels (INV_C / INV_M)</p>\n</blockquote>\n<p>Is INV_M the same as <code>maxvolume</code>? Or are you making your own system to replace the built in one?</p>\n<blockquote>\n<p>and for the fishing command I need:</p>\n</blockquote>\n<p>One common way to do this (if you're using the built in inventory volume limits) would be:</p>\n<pre><code>MoveObjectHere (<em style=\"color: blue\">some fish</em>)\nDoTake (<em style=\"color: blue\">some fish</em>, false)</code></pre>\n<p>Or (same thing, slightly more efficient, but slightly less easy to read):</p>\n<pre><code><em style=\"color: blue\">some fish</em>.parent = game.pov.parent\nDoTake (<em style=\"color: blue\">some fish</em>, false)</code></pre>\n<p>(assuming that <em style=\"color: blue\">some fish</em> is either the fish object, or a variable referring to the fish object)<br>\n(if you're cloning the fish at this point, it would be more like</p>\n<pre><code>newfish = CloneObjectAndMoveHere (<em style=\"color: blue\">original fish</em>)\nDoTake (newfish, false)</code></pre>\n<p>)<br>\nInstead of putting the fish straight in the inventory, it puts it on the ground next to the player, and then runs the built in \"take\" command, which already has suitable responses if the inventory is full. Some players prefer this because if they run out of space, they can choose to drop something else to make space for the fish.</p>\n<p>If you don't want to do it like that, you'd probably want to do something like:</p>\n<pre><code>volume = <em style=\"color: blue\">some fish</em>.volume\nforeach (object, GetAllChildObjects (game.pov)) {\n  if (HasInt (object, \"volume\") and GetBoolean (object, \"visible\")) {\n    volume = volume + object.volume\n  }\n}\nif (volume &gt; game.pov.INV_M) {\n  msg (\"<em style=\"color: orange\">There isn't space for another fish in your pockets.</em>\")\n}\nelse {\n  <em style=\"color: blue\">some fish</em>.parent = game.pov\n  game.pov.INV_C = volume\n}</code></pre>\n\n",
      "PostDate": "2022-02-21T11:34:47.5773315Z",
      "LastEditDate": "2022-02-21T11:45:06.5220558Z",
      "link": null
    },
    {
      "PostId": "7b29f365-9e34-437d-865c-2f1283323e19",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ok, so the GetVolume (game.pov, false) was the syntax I needed to set INV_C to Player carried volume, but I have it in a turn script, so it takes 1 action to catch up and show the correct Status in the panel.\r\n\r\nIs there a way to have a script which runs at the end of a turn, or every time the character picks something up?",
      "EditableFormat": "markdown",
      "HTML": "<p>ok, so the GetVolume (game.pov, false) was the syntax I needed to set INV_C to Player carried volume, but I have it in a turn script, so it takes 1 action to catch up and show the correct Status in the panel.</p>\n<p>Is there a way to have a script which runs at the end of a turn, or every time the character picks something up?</p>\n\n",
      "PostDate": "2022-02-21T11:44:41.4548699Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e8f5d874-92cf-4b9c-a8c0-aa8a36de4f65",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "INV_M is the same as maxvolume, i already used a system for health and food, so i was just doing the same for sake of ease. I could remove INV_M from the game and just use maxvolume in all instances.",
      "EditableFormat": "markdown",
      "HTML": "<p>INV_M is the same as maxvolume, i already used a system for health and food, so i was just doing the same for sake of ease. I could remove INV_M from the game and just use maxvolume in all instances.</p>\n\n",
      "PostDate": "2022-02-21T11:45:51.5126194Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "db453625-c3a6-4bf4-90d9-77bfd79c680d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I edited the previous post to add some more detail and fix a small mistake.\r\n\r\n> but I have it in a turn script, so it takes 1 action to catch up and show the correct Status in the panel.\r\n\r\nTurnscripts run at the end of every turn; are you using more than one turnscript to do this?\r\nThe most common thing people try is having one script to set `INV_C` to the current value, and then another to set a string attribute based on the current value of `INV_C`,  which is displayed in the status attributes panel.\r\n\r\nIf this is the case, you could either put those two things into a single script (so you know that `INV_C` is updated before the string attribute), or put the code that creates the string in a script attribute called `game.pov.changedINV_C` (which causes Quest to run it automatically and immediately whenever the value of `INV_C` changes).",
      "EditableFormat": "markdown",
      "HTML": "<p>I edited the previous post to add some more detail and fix a small mistake.</p>\n<blockquote>\n<p>but I have it in a turn script, so it takes 1 action to catch up and show the correct Status in the panel.</p>\n</blockquote>\n<p>Turnscripts run at the end of every turn; are you using more than one turnscript to do this?<br>\nThe most common thing people try is having one script to set <code>INV_C</code> to the current value, and then another to set a string attribute based on the current value of <code>INV_C</code>,  which is displayed in the status attributes panel.</p>\n<p>If this is the case, you could either put those two things into a single script (so you know that <code>INV_C</code> is updated before the string attribute), or put the code that creates the string in a script attribute called <code>game.pov.changedINV_C</code> (which causes Quest to run it automatically and immediately whenever the value of <code>INV_C</code> changes).</p>\n\n",
      "PostDate": "2022-02-21T11:51:22.6012617Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e531d58d-b525-4a96-85d3-9246a07e2bf7",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\nnewfish = CloneObjectAndMoveHere (original fish)\r\nDoTake (newfish, false)\r\n```\r\n\r\nIs there a way to replace these lines so that they utilise the attribute:\r\n(object.prototype = FISH_Carp) ",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>newfish = CloneObjectAndMoveHere (original fish)\nDoTake (newfish, false)\n</code></pre>\n<p>Is there a way to replace these lines so that they utilise the attribute:<br>\n(object.prototype = FISH_Carp)</p>\n\n",
      "PostDate": "2022-02-21T11:53:36.1048518Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "427f30b3-21d6-400a-ac5c-af187045b53f",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">If this is the case, you could either put those two things into a single script \r\n\r\nYup, I had them in the wrong order in the script... it was updating panel first. Doi!",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>If this is the case, you could either put those two things into a single script</p>\n</blockquote>\n<p>Yup, I had them in the wrong order in the script... it was updating panel first. Doi!</p>\n\n",
      "PostDate": "2022-02-21T11:55:12.9738207Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6fffe337-53d4-41d8-8ee5-351dbffa58f4",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Is there a way to replace these lines so that they utilise the attribute:\r\n(object.prototype = FISH_Carp)\r\n\r\nI'm not sure what you mean here. What do you want it to use that attribute for? If you're cloning the object here, you already know what its prototype is. You would just be doing:\r\n```\r\nnewfish = CloneObjectAndMoveHere (FISH_Carp)\r\nDoTake (newfish, false)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Is there a way to replace these lines so that they utilise the attribute:<br>\n(object.prototype = FISH_Carp)</p>\n</blockquote>\n<p>I'm not sure what you mean here. What do you want it to use that attribute for? If you're cloning the object here, you already know what its prototype is. You would just be doing:</p>\n<pre><code>newfish = CloneObjectAndMoveHere (FISH_Carp)\nDoTake (newfish, false)\n</code></pre>\n\n",
      "PostDate": "2022-02-21T12:16:05.9434811Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f3917be3-fb15-4b58-a33f-9927d5780b95",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok, I get it now, it looked like it was causing a problem but the problem was caused elsewhere. Thanks for the help!",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok, I get it now, it looked like it was causing a problem but the problem was caused elsewhere. Thanks for the help!</p>\n\n",
      "PostDate": "2022-02-21T13:42:20.9445277Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
