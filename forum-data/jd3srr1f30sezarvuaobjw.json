{
  "Topic": {
    "TopicId": "jd3srr1f30sezarvuaobjw",
    "ForumId": "10",
    "Title": "I want to make stats for the PC, but I can't figure out how! [SOLVED]",
    "LastUpdated": "2018-05-01T19:48:18.9230127Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "1ec8512d-23e7-4e7b-ba19-068e83a5693c",
      "UserId": 356818,
      "Username": "ThunderKid",
      "AvatarUrl": "https://secure.gravatar.com/avatar/07cd2dc7097cc78d79e93a99047269c4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "To preface: I'm extremely new to Quest (as in I'm making my first ever game right now with it) and I have absolutely no background in JavaScript (or really...any kind of programming) though my girlfriend does and she's been helping me as much as she can lol.\r\n\r\nI'm using 'gamebook' type, since what I'm creating is an interactive novel and I'm not comfortable enough to mess around with Squiffy yet.\r\n\r\nAnyway, what I'm looking to do is give the PC personality stats (brave, kind etcetc) by choosing different paths, and then have more paths along the story line open up based on how high a personality trait is. \r\n\r\nAs an example:\r\n\"Hello! How are you doing?\"\r\n1) Fuck you. (+1 mean)\r\n2) Hi! I'm doing well, how about yourself? (+1 Nice)\r\n\r\n[a page in the future]\r\n\r\n\"Do you want to go on a roller coaster?\"\r\n1) No, I'm scared of them.\r\n2) Sure! Sounds like fun.\r\n3) (Only shows up if you have at least 1 mean point) Of course I don't! Who even invited you, anyway?!\r\n\r\nWhat my girlfriend thought would work (and me, because it makes sense) would be to add a function with a script that says:  \"If player has seen page x    Increase counter kind\" with return type being \"Integer\". And then creating another function with a script that says: \"If counter kind >= number 1 add page link from page y to page z\" with no return type.\r\n\r\nI've tried what feels like every combination of things to get this to work, but it doesn't. And I haven't found anything on the help page about it so far as I can tell, or any forums (feel free to link one if there is one I missed!).  I've tried every return type for both functions, and I've tried putting the functions on the individual pages they apply to, but I can't get any of it to work. \r\n\r\nThank y'all so much in advance!",
      "EditableFormat": "markdown",
      "HTML": "<p>To preface: I'm extremely new to Quest (as in I'm making my first ever game right now with it) and I have absolutely no background in JavaScript (or really...any kind of programming) though my girlfriend does and she's been helping me as much as she can lol.</p>\n<p>I'm using 'gamebook' type, since what I'm creating is an interactive novel and I'm not comfortable enough to mess around with Squiffy yet.</p>\n<p>Anyway, what I'm looking to do is give the PC personality stats (brave, kind etcetc) by choosing different paths, and then have more paths along the story line open up based on how high a personality trait is.</p>\n<p>As an example:<br>\n\"Hello! How are you doing?\"</p>\n<ol>\n<li>Fuck you. (+1 mean)</li>\n<li>Hi! I'm doing well, how about yourself? (+1 Nice)</li>\n</ol>\n<p>[a page in the future]</p>\n<p>\"Do you want to go on a roller coaster?\"</p>\n<ol>\n<li>No, I'm scared of them.</li>\n<li>Sure! Sounds like fun.</li>\n<li>(Only shows up if you have at least 1 mean point) Of course I don't! Who even invited you, anyway?!</li>\n</ol>\n<p>What my girlfriend thought would work (and me, because it makes sense) would be to add a function with a script that says:  \"If player has seen page x    Increase counter kind\" with return type being \"Integer\". And then creating another function with a script that says: \"If counter kind &gt;= number 1 add page link from page y to page z\" with no return type.</p>\n<p>I've tried what feels like every combination of things to get this to work, but it doesn't. And I haven't found anything on the help page about it so far as I can tell, or any forums (feel free to link one if there is one I missed!).  I've tried every return type for both functions, and I've tried putting the functions on the individual pages they apply to, but I can't get any of it to work.</p>\n<p>Thank y'all so much in advance!</p>\n\n",
      "PostDate": "2018-05-01T19:48:18.9230127Z",
      "LastEditDate": "2018-05-08T16:27:43.151992Z",
      "link": null
    },
    {
      "PostId": "ee76702a-c47d-4384-8456-ecd7eca2abfb",
      "UserId": 341201,
      "Username": "Raist",
      "AvatarUrl": "https://i.imgur.com/0UTKrlab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello ThunderKid,\r\nYour girlfriend's logic is sound. You would be adding an attribute to the Player object in Quest. Here's how it can work:\r\n\r\nOn the Player object, go to the Attribute tab and add all the attribute(s) you wish to track.\r\nAt the top of the Attribute tab, you will also see Status Attributes. This is where you take the attribute(s) you just added to the player and assign the formatting (how the value is displayed).\r\nGo to the Game object and select the Player tab. At the bottom you will see: Player object status attributes (these are a repeat of the Status Attributes from the Attribute tab on the player).\r\nAfter that it is just increasing/decreasing the object counter on the player for whatever you are tracking.\r\n\r\nKindness\r\nPlayer object -> Attribute tab: \r\n1. (At the bottom) Add Attribute kindness, with an Integer value (this becomes the \"counter\" you will increase/decrease).\r\n2. (At the top) Add Status Attribute kindness with value of \"Kindness: !\" (the ! represents the variable for the value).\r\n\r\nGame object - Player tab:\r\n1. (At the bottom) Add Player object status attribute kindness with value of \"Kindness: !\" (again the ! represents the variable for the value).\r\n\r\nAll of that above sets up and displays the values for the player that you (the author) set up to track.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello ThunderKid,<br>\nYour girlfriend's logic is sound. You would be adding an attribute to the Player object in Quest. Here's how it can work:</p>\n<p>On the Player object, go to the Attribute tab and add all the attribute(s) you wish to track.<br>\nAt the top of the Attribute tab, you will also see Status Attributes. This is where you take the attribute(s) you just added to the player and assign the formatting (how the value is displayed).<br>\nGo to the Game object and select the Player tab. At the bottom you will see: Player object status attributes (these are a repeat of the Status Attributes from the Attribute tab on the player).<br>\nAfter that it is just increasing/decreasing the object counter on the player for whatever you are tracking.</p>\n<p>Kindness<br>\nPlayer object -&gt; Attribute tab:</p>\n<ol>\n<li>(At the bottom) Add Attribute kindness, with an Integer value (this becomes the \"counter\" you will increase/decrease).</li>\n<li>(At the top) Add Status Attribute kindness with value of \"Kindness: !\" (the ! represents the variable for the value).</li>\n</ol>\n<p>Game object - Player tab:</p>\n<ol>\n<li>(At the bottom) Add Player object status attribute kindness with value of \"Kindness: !\" (again the ! represents the variable for the value).</li>\n</ol>\n<p>All of that above sets up and displays the values for the player that you (the author) set up to track.</p>\n\n",
      "PostDate": "2018-05-01T20:48:20.7881595Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2026e02d-ae67-424f-97d5-679a52093f10",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ Raist:\r\n\r\nthe 'Game Book' version of quest doesn't have the Attribute (and etc) Tabs that are within the 'Text Adventure' version of quest\r\n\r\n-------------------\r\n\r\n(lazy, putting the whole post in a code box, so the backspaces show up and/or for whatever other possible issues, lol)\r\n\r\n```\r\nso, you got to create and manipulate/adjust/change your 'Attribute' VARIABLES via scripting\r\n\r\n------------\r\n\r\nin quest, there's generally 3 type of VARIABLES (keeping this simple):\r\n\r\nVARIABLES:\r\n\r\n1. a 'Variable' VARIABLE: these are local VARIABLES, they are destroyed upon its container's (an 'Element' in quest, quest's OBJECTS: Objects, Exits, Functions, Commands, Turnscripts, Timers, and etc) scripting finishing and its scope (usage) is limited to only its container's scripting, so it doesn't exist (can't be used) outside of its container's scripting\r\n\r\n2. an 'Attribute' VARIABLE: these are global VARIABLES, they can be used anywhere, as they're \"permanent\" (so long as the Object containing them, exists or still exists)\r\n\r\n3. an/a 'Argument/Parameter' VARIABLE: these deal with Functions, Commands, and Delegates+Script_Attributes+Objects\r\n\r\n---------\r\n\r\nalso, unlike the 'Text Adventure', the 'Game Book' only has two Objects (aside from its: Pages / Page Objects) that you can use for Attributes:\r\n\r\n1. the special 'game' Object\r\n2. the default-named 'player' Player Object (if you change its name, then you got to use that new name within the scripting, instead of using 'player' as seen/used within my scripting examples)\r\n\r\n-------\r\n\r\nto do scripting:\r\n\r\n'WHATEVER PAGE' -> 'Page' Tab -> Page Type: [SCRIPT] or [SCRIPT+TEXT]\r\n\r\n--------\r\n\r\nAttribute Scripting:\r\n\r\ncreation/setting and/or manipulating/changing/adjusting/re-setting/over-riding/etc an 'Attribute' VARIABLE:\r\n\r\nScript: add new script -> 'variables' category/section -> 'add a variable or attribute' Script -> (see below)\r\n\r\nGENERIC SYNTAX via GUI/Editor:\r\n\r\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION\r\n\r\n**********\r\nI'm using the '[EXPRESSION]' script option, as I'm not familar with the GUI/Editor's specific options, so I'm cheating by using the '[EXPRESSION]' option, as it lets me code in directly what I want to do, lol\r\n\r\nbut you can use the specific script options instead\r\n**********\r\n\r\nfor examples:\r\n\r\nset variable game.state = [EXPRESSION] 0 // an Integer Attribute due to having an Integer Value (quest parses the type of the Value to determine its type of Attribute)\r\n\r\nset variable player.strength = [EXPRESSION] 0 // an Integer Attribute due to having an Integer Value (quest parses the type of the Value to determine its type of Attribute)\r\n\r\nset variable player.strength = [EXPRESSION] 100 // it's Value is now '100', it changed from its previous Value of '0' to '100'\r\n\r\nset variable Page1.visited = [EXPRESSION] true // a Boolean Attribute\r\n// or:\r\nset variable Page1.visited = [EXPRESSION] false // a Boolean Attribute\r\n\r\nset variable player.alias = [EXPRESSION] \"HK\" // a String Attribute\r\n\r\nset variable game.introduction = [EXPRESSION] \"Hi, welcome to my game, I hope you enjoy it, muwhaha!\" // a String Attribute\r\n\r\nset variable player.damage = [EXPRESSION] 40.3298 // a Double (Float / Floating Point / Decimal / Fractional) Attribute\r\n\r\nset variable player.strength = [EXPRESSION] 100\r\nset variable player.weapon_damage = [EXPRESSION] 50\r\nset variable player.damage = [EXPRESSION] player.weapon_damage + player.weapon_damage * player.strength / 100\r\n// player.damage = (50) + [ (50) * (100) / 100 ] = 100\r\n\r\nset variable player.strength = [EXPRESSION] 0\r\nset variable player.weapon_damage = [EXPRESSION] 50\r\nset variable player.damage = [EXPRESSION] player.weapon_damage + player.weapon_damage * player.strength / 100\r\n// player.damage = (50) + [ (50) * (0) / 100 ] = 50\r\n\r\n---------\r\n\r\n'if' Scripting:\r\n\r\nScript: add new script -> 'scripts' category/section -> 'if' Script -> (see below)\r\n\r\nFORMAT:\r\n\r\nif [EXPRESSION] EXPRESSION\r\n-> then -> add new script -> (WHATEVER Script)\r\n\r\nexample:\r\n\r\nScript: add new script -> 'scripts' category/section -> 'if' Script -> (see below)\r\n\r\nif [EXPRESSION] player.current_life_integer_attribute < 1\r\n\r\n-> then -> add new script -> 'output' section/category -> 'print a message' Script -> (see below)\r\n\r\n// the '[MESSSAGE]' option is for TEXT only:\r\n\r\nPrint [MESSAGE] You're dead and/or were killed\r\n\r\n// output:\r\n// You're dead and/or were killed\r\n\r\n// vs:\r\n\r\n// Print [MESSAGE] \"You're dead and/or were killed\"\r\n// output:\r\n// \"You're dead and/or were killed\"\r\n\r\n// or:\r\n\r\n// the '[EXPRESSION]' can do: TEXT only, VARIABLE only, or TEXT+VARIABLE: (the example below is doing TEXT+VARIABLE):\r\n\r\nPrint [EXPRESSION] \"You're dead and/or were killed, as can be seen by your 0 or negative current life stat: \" + player.current_life_integer_attribute\r\n\r\n// output (using for example: player.current_life_attribute = -89):\r\n\r\nYou're dead and/or were killed as can be seen by your 0 or negative current life stat: -89\r\n\r\n// vs:\r\n\r\nPrint [EXPRESSION] \"\\\"You're dead and/or were killed, as can be seen by your 0 or negative current life stat: \" + player.current_life_integer_attribute + \"\\\"\"\r\n\r\n// output:\r\n\r\n\"You're dead and/or were killed, as can be seen by your 0 or negative current life stat: -89\"\r\n\r\n-------\r\n\r\nif [EXPRESSION] Page.visited // quest understands this shortened form of 'Page1.visited' as being 'Page1.visited = true'\r\n\r\n// vs (if FALSE):\r\n\r\n// if [EXPRESSION] not Page.visited\r\n// or:\r\n// if [EXPRESSION] Page.visited = false\r\n\r\n-> then -> add new script -> (WHATEVER script)\r\n```\r\n\r\n---------\r\n\r\nhere's a link to guides on coding with quest:\r\n\r\nhttp://textadventures.co.uk/forum/general/topic/ljjm32av4e2t9ot49k478g/help#710be61e-eae1-4af1-8363-520cc718ba1c\r\n\r\n(the 'attributes and if script' and the 'lists and dictionary attributes' guides are for a Text Adventure, but the scripting and Attributes-via-scripting, is the same for the Game Book, so it can still be helpful)",
      "EditableFormat": "markdown",
      "HTML": "<p>@ Raist:</p>\n<p>the 'Game Book' version of quest doesn't have the Attribute (and etc) Tabs that are within the 'Text Adventure' version of quest</p>\n<hr>\n<p>(lazy, putting the whole post in a code box, so the backspaces show up and/or for whatever other possible issues, lol)</p>\n<pre><code>so, you got to create and manipulate/adjust/change your 'Attribute' VARIABLES via scripting\n\n------------\n\nin quest, there's generally 3 type of VARIABLES (keeping this simple):\n\nVARIABLES:\n\n1. a 'Variable' VARIABLE: these are local VARIABLES, they are destroyed upon its container's (an 'Element' in quest, quest's OBJECTS: Objects, Exits, Functions, Commands, Turnscripts, Timers, and etc) scripting finishing and its scope (usage) is limited to only its container's scripting, so it doesn't exist (can't be used) outside of its container's scripting\n\n2. an 'Attribute' VARIABLE: these are global VARIABLES, they can be used anywhere, as they're \"permanent\" (so long as the Object containing them, exists or still exists)\n\n3. an/a 'Argument/Parameter' VARIABLE: these deal with Functions, Commands, and Delegates+Script_Attributes+Objects\n\n---------\n\nalso, unlike the 'Text Adventure', the 'Game Book' only has two Objects (aside from its: Pages / Page Objects) that you can use for Attributes:\n\n1. the special 'game' Object\n2. the default-named 'player' Player Object (if you change its name, then you got to use that new name within the scripting, instead of using 'player' as seen/used within my scripting examples)\n\n-------\n\nto do scripting:\n\n'WHATEVER PAGE' -&gt; 'Page' Tab -&gt; Page Type: [SCRIPT] or [SCRIPT+TEXT]\n\n--------\n\nAttribute Scripting:\n\ncreation/setting and/or manipulating/changing/adjusting/re-setting/over-riding/etc an 'Attribute' VARIABLE:\n\nScript: add new script -&gt; 'variables' category/section -&gt; 'add a variable or attribute' Script -&gt; (see below)\n\nGENERIC SYNTAX via GUI/Editor:\n\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION\n\n**********\nI'm using the '[EXPRESSION]' script option, as I'm not familar with the GUI/Editor's specific options, so I'm cheating by using the '[EXPRESSION]' option, as it lets me code in directly what I want to do, lol\n\nbut you can use the specific script options instead\n**********\n\nfor examples:\n\nset variable game.state = [EXPRESSION] 0 // an Integer Attribute due to having an Integer Value (quest parses the type of the Value to determine its type of Attribute)\n\nset variable player.strength = [EXPRESSION] 0 // an Integer Attribute due to having an Integer Value (quest parses the type of the Value to determine its type of Attribute)\n\nset variable player.strength = [EXPRESSION] 100 // it's Value is now '100', it changed from its previous Value of '0' to '100'\n\nset variable Page1.visited = [EXPRESSION] true // a Boolean Attribute\n// or:\nset variable Page1.visited = [EXPRESSION] false // a Boolean Attribute\n\nset variable player.alias = [EXPRESSION] \"HK\" // a String Attribute\n\nset variable game.introduction = [EXPRESSION] \"Hi, welcome to my game, I hope you enjoy it, muwhaha!\" // a String Attribute\n\nset variable player.damage = [EXPRESSION] 40.3298 // a Double (Float / Floating Point / Decimal / Fractional) Attribute\n\nset variable player.strength = [EXPRESSION] 100\nset variable player.weapon_damage = [EXPRESSION] 50\nset variable player.damage = [EXPRESSION] player.weapon_damage + player.weapon_damage * player.strength / 100\n// player.damage = (50) + [ (50) * (100) / 100 ] = 100\n\nset variable player.strength = [EXPRESSION] 0\nset variable player.weapon_damage = [EXPRESSION] 50\nset variable player.damage = [EXPRESSION] player.weapon_damage + player.weapon_damage * player.strength / 100\n// player.damage = (50) + [ (50) * (0) / 100 ] = 50\n\n---------\n\n'if' Scripting:\n\nScript: add new script -&gt; 'scripts' category/section -&gt; 'if' Script -&gt; (see below)\n\nFORMAT:\n\nif [EXPRESSION] EXPRESSION\n-&gt; then -&gt; add new script -&gt; (WHATEVER Script)\n\nexample:\n\nScript: add new script -&gt; 'scripts' category/section -&gt; 'if' Script -&gt; (see below)\n\nif [EXPRESSION] player.current_life_integer_attribute &lt; 1\n\n-&gt; then -&gt; add new script -&gt; 'output' section/category -&gt; 'print a message' Script -&gt; (see below)\n\n// the '[MESSSAGE]' option is for TEXT only:\n\nPrint [MESSAGE] You're dead and/or were killed\n\n// output:\n// You're dead and/or were killed\n\n// vs:\n\n// Print [MESSAGE] \"You're dead and/or were killed\"\n// output:\n// \"You're dead and/or were killed\"\n\n// or:\n\n// the '[EXPRESSION]' can do: TEXT only, VARIABLE only, or TEXT+VARIABLE: (the example below is doing TEXT+VARIABLE):\n\nPrint [EXPRESSION] \"You're dead and/or were killed, as can be seen by your 0 or negative current life stat: \" + player.current_life_integer_attribute\n\n// output (using for example: player.current_life_attribute = -89):\n\nYou're dead and/or were killed as can be seen by your 0 or negative current life stat: -89\n\n// vs:\n\nPrint [EXPRESSION] \"\\\"You're dead and/or were killed, as can be seen by your 0 or negative current life stat: \" + player.current_life_integer_attribute + \"\\\"\"\n\n// output:\n\n\"You're dead and/or were killed, as can be seen by your 0 or negative current life stat: -89\"\n\n-------\n\nif [EXPRESSION] Page.visited // quest understands this shortened form of 'Page1.visited' as being 'Page1.visited = true'\n\n// vs (if FALSE):\n\n// if [EXPRESSION] not Page.visited\n// or:\n// if [EXPRESSION] Page.visited = false\n\n-&gt; then -&gt; add new script -&gt; (WHATEVER script)\n</code></pre>\n<hr>\n<p>here's a link to guides on coding with quest:</p>\n<p>http://textadventures.co.uk/forum/general/topic/ljjm32av4e2t9ot49k478g/help#710be61e-eae1-4af1-8363-520cc718ba1c</p>\n<p>(the 'attributes and if script' and the 'lists and dictionary attributes' guides are for a Text Adventure, but the scripting and Attributes-via-scripting, is the same for the Game Book, so it can still be helpful)</p>\n\n",
      "PostDate": "2018-05-02T00:05:45.8967833Z",
      "LastEditDate": "2018-05-02T00:17:33.5565541Z",
      "link": null
    },
    {
      "PostId": "0afe323b-4c69-4906-af05-03647dad54c9",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n\r\n---------------------\r\n\r\n```\r\nforgot, the arithmetic scripting examples (sorry about that), so here they are:\r\n\r\n(the 'add/decrease object counter' Script can only do addition/subtraction using only a value of '1', operations, so no different values, nor different arithmetic operations, but you can use the 'EXPRESSION' with the 'set a variable or attribute' Script to do whatever arithmetic operation and value you want)\r\n\r\nAddition:\r\n\r\nset variable player.strength [EXPRESSION] player.strength + 5\r\n\r\n// or (a bit more complex expression using sum of two Attributes shown below, instead of just adding a simple value to it, as done in the scripting line above):\r\n\r\nset variable player.maximum_life [EXPRESSION] player.strength + player.endurance\r\nset variable player.minimum_life [EXPRESSION] player.maximum_life\r\n\r\nSubtraction:\r\n\r\nset variable player.strength [EXPRESSION] player.strength - 8\r\n\r\nMultiplication:\r\n\r\nset variable player.strength [EXPRESSION] player.strength * 3\r\n\r\nDivision:\r\n\r\nset variable player.strength [EXPRESSION] player.strength / 2\r\n\r\nModulus (division, but it gets/finds the REMAINDER):\r\n\r\n(for: cyclic, even/odd numbers, or factors/divisibility of any number)\r\n\r\nset variable game.military_hours [EXPRESSION] game.hour_count % 24\r\nset variable game.civilian_hours [EXPRESSION] game.hour_count % 12\r\n\r\nset variable game.clock_minutes [EXPRESSION] game.minute_count % 60\r\n\r\n// odd/even of numbers:\r\n\r\n// (in code, lazy):\r\nif (game.number % 2 = 0) {\r\n  msg (\"The number: \" + game.number + \", is even\")\r\n} else {\r\n  msg (\"The number: \" + game.number + \", is odd\")\r\n}\r\n// or:\r\nif (game.number % 2 = 1) {\r\n  msg (\"The number: \" + game.number + \", is odd\")\r\n} else {\r\n  msg (\"The number: \" + game.number + \", is even\")\r\n}\r\n\r\n// factors/divisibility of a number:\r\n\r\n// (in code, lazy):\r\n\r\nif (game.number % 2 = 0) {\r\n  msg (\"The number: \" + game.number + \", is divisible by 2, or to say it differently, 2 is a factor of the number: \" + game.number)\r\n} else if (game.number % 3 = 0) {\r\n  msg (\"The number: \" + game.number + \", is divisible by 3, or to say it differently, 3 is a factor of the number: \" + game.number)\r\n} else if (game.number % 4 = 0) {\r\n  msg (\"The number: \" + game.number + \", is divisible by 4, or to say it differently, 4 is a factor of the number: \" + game.number)\r\n} else if (game.number % 5 = 0) {\r\n  msg (\"The number: \" + game.number + \", is divisible by 5, or to say it differently, 5 is a factor of the number: \" + game.number)\r\n}\r\n// etc etc etc\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)</p>\n<hr>\n<pre><code>forgot, the arithmetic scripting examples (sorry about that), so here they are:\n\n(the 'add/decrease object counter' Script can only do addition/subtraction using only a value of '1', operations, so no different values, nor different arithmetic operations, but you can use the 'EXPRESSION' with the 'set a variable or attribute' Script to do whatever arithmetic operation and value you want)\n\nAddition:\n\nset variable player.strength [EXPRESSION] player.strength + 5\n\n// or (a bit more complex expression using sum of two Attributes shown below, instead of just adding a simple value to it, as done in the scripting line above):\n\nset variable player.maximum_life [EXPRESSION] player.strength + player.endurance\nset variable player.minimum_life [EXPRESSION] player.maximum_life\n\nSubtraction:\n\nset variable player.strength [EXPRESSION] player.strength - 8\n\nMultiplication:\n\nset variable player.strength [EXPRESSION] player.strength * 3\n\nDivision:\n\nset variable player.strength [EXPRESSION] player.strength / 2\n\nModulus (division, but it gets/finds the REMAINDER):\n\n(for: cyclic, even/odd numbers, or factors/divisibility of any number)\n\nset variable game.military_hours [EXPRESSION] game.hour_count % 24\nset variable game.civilian_hours [EXPRESSION] game.hour_count % 12\n\nset variable game.clock_minutes [EXPRESSION] game.minute_count % 60\n\n// odd/even of numbers:\n\n// (in code, lazy):\nif (game.number % 2 = 0) {\n  msg (\"The number: \" + game.number + \", is even\")\n} else {\n  msg (\"The number: \" + game.number + \", is odd\")\n}\n// or:\nif (game.number % 2 = 1) {\n  msg (\"The number: \" + game.number + \", is odd\")\n} else {\n  msg (\"The number: \" + game.number + \", is even\")\n}\n\n// factors/divisibility of a number:\n\n// (in code, lazy):\n\nif (game.number % 2 = 0) {\n  msg (\"The number: \" + game.number + \", is divisible by 2, or to say it differently, 2 is a factor of the number: \" + game.number)\n} else if (game.number % 3 = 0) {\n  msg (\"The number: \" + game.number + \", is divisible by 3, or to say it differently, 3 is a factor of the number: \" + game.number)\n} else if (game.number % 4 = 0) {\n  msg (\"The number: \" + game.number + \", is divisible by 4, or to say it differently, 4 is a factor of the number: \" + game.number)\n} else if (game.number % 5 = 0) {\n  msg (\"The number: \" + game.number + \", is divisible by 5, or to say it differently, 5 is a factor of the number: \" + game.number)\n}\n// etc etc etc\n</code></pre>\n\n",
      "PostDate": "2018-05-02T00:31:20.1173736Z",
      "LastEditDate": "2018-05-02T00:44:36.6170963Z",
      "link": null
    },
    {
      "PostId": "3a07327b-91c3-419a-ac60-5df96fe6f284",
      "UserId": 181096,
      "Username": "BethNicole71",
      "AvatarUrl": "https://secure.gravatar.com/avatar/334458b1b2032ff0dd2444f0f5097816?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I used Flags for on/off objects and Counters for variable value objects\r\nIf statements work well with these.\r\nhttp://benico.biz/benicoadventures/index.html\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I used Flags for on/off objects and Counters for variable value objects<br>\nIf statements work well with these.<br>\nhttp://benico.biz/benicoadventures/index.html</p>\n\n",
      "PostDate": "2018-05-02T09:55:29.5208944Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f6a3772b-22f5-40c8-9831-6a48c0ee7f7f",
      "UserId": 341771,
      "Username": "JenniferCampbell",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8b9a63b5bbacc531368953df3a1709ec?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Assign the attributes to the 'player' object using a page set to page type 'script' or 'script + text'.\r\nFormat your variables like so:\r\nplayer.kindness\r\nplayer.meanness\r\nBut realize that 'kind' and 'mean' are really just opposite ends of the same spectrum, so only one variable is required.  Then you test the level for meanness by by looking for the variable to be below some value, and test for kindness by looking for the variable to be above some value.\r\n\r\nYou can do this right in the text processor (the text window):\r\n\r\n```{if player.kindness<7:3. Of course I don't! Who even invited you, anyway?!}```\r\n\r\nThere may be a text processor function that checks to see if the player object has been to a particular page, but I can't find it right now.  Just set a flag on the page you need visited if it only needs to be visited once to work.  If multiple visits to the page will increase or decrease the attribute, use the 'set variable' script:\r\n\r\n```player.kindness = player.kindness + 1``` OR ```player.kindness = player.kindness - 1```\r\n\r\nGood luck!",
      "EditableFormat": "markdown",
      "HTML": "<p>Assign the attributes to the 'player' object using a page set to page type 'script' or 'script + text'.<br>\nFormat your variables like so:<br>\nplayer.kindness<br>\nplayer.meanness<br>\nBut realize that 'kind' and 'mean' are really just opposite ends of the same spectrum, so only one variable is required.  Then you test the level for meanness by by looking for the variable to be below some value, and test for kindness by looking for the variable to be above some value.</p>\n<p>You can do this right in the text processor (the text window):</p>\n<p><code>{if player.kindness&lt;7:3. Of course I don't! Who even invited you, anyway?!}</code></p>\n<p>There may be a text processor function that checks to see if the player object has been to a particular page, but I can't find it right now.  Just set a flag on the page you need visited if it only needs to be visited once to work.  If multiple visits to the page will increase or decrease the attribute, use the 'set variable' script:</p>\n<p><code>player.kindness = player.kindness + 1</code> OR <code>player.kindness = player.kindness - 1</code></p>\n<p>Good luck!</p>\n\n",
      "PostDate": "2018-05-02T13:50:26.0244383Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a24e0d09-ac6d-4597-bf48-f8fce26c5501",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "example of scripting amount ranges (using a Text Adventure coding example, but the concept is the same, just got limited Objects to work with when using the Game Book, unlike a Text Adventure):\r\n\r\n(alternative to using the text processor commands that Jennifer Campbell explains/shows in her post)\r\n\r\n(direct coding/scripting, not showing/doing the GUI/Editor scripting, lazy)\r\n\r\n```\r\n// max to min:\r\n\r\nif (test.score > 89) {\r\n  test.grade = \"A\"\r\n} else if (test.score > 79) {\r\n  test.grade = \"B\"\r\n} else if (test.score > 69) {\r\n  test.grade = \"C\"\r\n} else if (test.score > 59) {\r\n  test.grade = \"D\"\r\n} else {\r\n  test.grade = \"F\"\r\n}\r\n\r\n// you can do this too (it's nearly the same thing), but it's more operations, though not as confusing and/or it's more exact/precise:\r\n\r\n// max to min:\r\n\r\nif (test.score >= 90) {\r\n  test.grade = \"A\"\r\n} else if (test.score >= 80) {\r\n  test.grade = \"B\"\r\n} else if (test.score >= 70) {\r\n  test.grade = \"C\"\r\n} else if (test.score >= 60) {\r\n  test.grade = \"D\"\r\n} else {\r\n  test.grade = \"F\"\r\n}\r\n\r\n// --------------------------------------------------------\r\n\r\n// min to max:\r\n\r\nif (test.score < 60) {\r\n  test.grade = \"F\"\r\n} else if (test.score < 70) {\r\n  test.grade = \"D\"\r\n} else if (test.score < 80) {\r\n  test.grade = \"C\"\r\n} else if (test.score < 90) {\r\n  test.grade = \"B\"\r\n} else {\r\n  test.grade = \"A\"\r\n}\r\n\r\n// or:\r\n\r\n// min to max:\r\n\r\nif (test.score <= 59) {\r\n  test.grade = \"F\"\r\n} else if (test.score <= 69) {\r\n  test.grade = \"D\"\r\n} else if (test.score <= 79) {\r\n  test.grade = \"C\"\r\n} else if (test.score <= 89) {\r\n  test.grade = \"B\"\r\n} else {\r\n  test.grade = \"A\"\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>example of scripting amount ranges (using a Text Adventure coding example, but the concept is the same, just got limited Objects to work with when using the Game Book, unlike a Text Adventure):</p>\n<p>(alternative to using the text processor commands that Jennifer Campbell explains/shows in her post)</p>\n<p>(direct coding/scripting, not showing/doing the GUI/Editor scripting, lazy)</p>\n<pre><code>// max to min:\n\nif (test.score &gt; 89) {\n  test.grade = \"A\"\n} else if (test.score &gt; 79) {\n  test.grade = \"B\"\n} else if (test.score &gt; 69) {\n  test.grade = \"C\"\n} else if (test.score &gt; 59) {\n  test.grade = \"D\"\n} else {\n  test.grade = \"F\"\n}\n\n// you can do this too (it's nearly the same thing), but it's more operations, though not as confusing and/or it's more exact/precise:\n\n// max to min:\n\nif (test.score &gt;= 90) {\n  test.grade = \"A\"\n} else if (test.score &gt;= 80) {\n  test.grade = \"B\"\n} else if (test.score &gt;= 70) {\n  test.grade = \"C\"\n} else if (test.score &gt;= 60) {\n  test.grade = \"D\"\n} else {\n  test.grade = \"F\"\n}\n\n// --------------------------------------------------------\n\n// min to max:\n\nif (test.score &lt; 60) {\n  test.grade = \"F\"\n} else if (test.score &lt; 70) {\n  test.grade = \"D\"\n} else if (test.score &lt; 80) {\n  test.grade = \"C\"\n} else if (test.score &lt; 90) {\n  test.grade = \"B\"\n} else {\n  test.grade = \"A\"\n}\n\n// or:\n\n// min to max:\n\nif (test.score &lt;= 59) {\n  test.grade = \"F\"\n} else if (test.score &lt;= 69) {\n  test.grade = \"D\"\n} else if (test.score &lt;= 79) {\n  test.grade = \"C\"\n} else if (test.score &lt;= 89) {\n  test.grade = \"B\"\n} else {\n  test.grade = \"A\"\n}\n</code></pre>\n\n",
      "PostDate": "2018-05-02T15:06:38.0357272Z",
      "LastEditDate": "2018-05-02T15:07:06.9355551Z",
      "link": null
    },
    {
      "PostId": "420faa51-9f9d-43ba-b033-8d07d77ca983",
      "UserId": 356818,
      "Username": "ThunderKid",
      "AvatarUrl": "https://i.imgur.com/CPgrcrEb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've actually figured out the problem, but oh my gosh thank you all so much! And to be honest, a lot of the code here doesn't make much sense to me but I'm learning.\r\n\r\nTurns out, my problem was that I was putting it under the functions tab, instead of on individual pages, thus putting the code at the end of the script where it doesn't actually do anything when you play. The counters also don't work if you put them directly on the pages that would effect the counter. So I put them on the pages directly after the one that effects the counter, with the page being \"text+script\".\r\n\r\nThe basic code I'm using for this looks like:\r\n```\r\nif (HasSeenPage(Page1)) {\r\n  ChangeCounter (\"mean\", 1)\r\n}\r\n```\r\n\r\nAs for needing a \"mean level 1\" to go down a different path, what I've done is create the mean path link on the relevant page, and then use the following script to hide it if mean is <1 since I can't seem to get the \"add page\" script to work. But honestly this is perfectly fine, and does what I need it to do. This one works when you put it directly on the page it's effecting.\r\n\r\n```\r\nif (GetInt(game, \"mean\") = 1) {\r\n  RemovePageLink (Page1, Page2)\r\n}\r\n```\r\n\r\nAlso, with a lot of help from my girlfriend, here's a way to cap attribute levels. Instead of putting the first script I posted you'll do this:\r\n\r\n```\r\nif (HasSeenPage(Page1)) {\r\n  if (GetInt(game, \"mean\") = 10) {\r\n    ChangeCounter (\"mean\", 0)\r\n  }\r\n  else if (GetInt(game, \"mean\") <= 9) {\r\n    ChangeCounter (\"mean\", 1)\r\n  }\r\n}\r\n```\r\n\r\nHope this helps someone with no javascript background trying to make something with Gamebook!",
      "EditableFormat": "markdown",
      "HTML": "<p>I've actually figured out the problem, but oh my gosh thank you all so much! And to be honest, a lot of the code here doesn't make much sense to me but I'm learning.</p>\n<p>Turns out, my problem was that I was putting it under the functions tab, instead of on individual pages, thus putting the code at the end of the script where it doesn't actually do anything when you play. The counters also don't work if you put them directly on the pages that would effect the counter. So I put them on the pages directly after the one that effects the counter, with the page being \"text+script\".</p>\n<p>The basic code I'm using for this looks like:</p>\n<pre><code>if (HasSeenPage(Page1)) {\n  ChangeCounter (\"mean\", 1)\n}\n</code></pre>\n<p>As for needing a \"mean level 1\" to go down a different path, what I've done is create the mean path link on the relevant page, and then use the following script to hide it if mean is &lt;1 since I can't seem to get the \"add page\" script to work. But honestly this is perfectly fine, and does what I need it to do. This one works when you put it directly on the page it's effecting.</p>\n<pre><code>if (GetInt(game, \"mean\") = 1) {\n  RemovePageLink (Page1, Page2)\n}\n</code></pre>\n<p>Also, with a lot of help from my girlfriend, here's a way to cap attribute levels. Instead of putting the first script I posted you'll do this:</p>\n<pre><code>if (HasSeenPage(Page1)) {\n  if (GetInt(game, \"mean\") = 10) {\n    ChangeCounter (\"mean\", 0)\n  }\n  else if (GetInt(game, \"mean\") &lt;= 9) {\n    ChangeCounter (\"mean\", 1)\n  }\n}\n</code></pre>\n<p>Hope this helps someone with no javascript background trying to make something with Gamebook!</p>\n\n",
      "PostDate": "2018-05-02T23:27:45.5007789Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
