{
  "Topic": {
    "TopicId": "5mzueemcpu295wbxoeverw",
    "ForumId": "10",
    "Title": "Deleting/Modifying CoreCommands Library [SOLVED]",
    "LastUpdated": "2016-07-23T18:04:30.075271Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "c6a1d0ad-8a25-4bf8-85ce-399fcd452bbf",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/28lV6nMb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I know, I know you aren't supposed to modify or delete things from the CoreCommand Library if you are completely inexperienced with it, but I'm more concerned if it's possible to delete something like \"DefaultKiss\" without destroying the game's loading process. \r\n\r\nI'm moderately experienced the the CoreCommands, but I've never tried to delete one or erase everything from it. ",
      "EditableFormat": "markdown",
      "HTML": "<p>I know, I know you aren't supposed to modify or delete things from the CoreCommand Library if you are completely inexperienced with it, but I'm more concerned if it's possible to delete something like \"DefaultKiss\" without destroying the game's loading process.</p>\n<p>I'm moderately experienced the the CoreCommands, but I've never tried to delete one or erase everything from it.</p>\n\n",
      "PostDate": "2016-07-23T18:04:30.075271Z",
      "LastEditDate": "2016-07-24T03:48:44.4352387Z"
    },
    {
      "PostId": "91e2b6f4-d631-4fe4-aed0-5fa433d48c4e",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So you want to remove it entirely so instead of \"you can't kiss that\" it will print \"I don't recognize your command\"?\r\n\r\nI assume in your game you want a response to kissing stuff, right?  If you are creating your own response, modify the heck out of it (after making an editable copy).  If you want it gone altogether, I tried deleting kiss and defaultkiss, but I guess it was still hidden somewhere I couldn't see.  Also, after tinkering with those two commands (deleting, altering) the game loaded without a problem.\r\n\r\nSo, instead, I went into the kiss attributes and made the 'is a verb' false instead of true.  That essentially turns off the the built in kiss (you'll get the \"I don't recognize your command\" response) when trying to kiss anything.",
      "EditableFormat": "markdown",
      "HTML": "<p>So you want to remove it entirely so instead of \"you can't kiss that\" it will print \"I don't recognize your command\"?</p>\n<p>I assume in your game you want a response to kissing stuff, right?  If you are creating your own response, modify the heck out of it (after making an editable copy).  If you want it gone altogether, I tried deleting kiss and defaultkiss, but I guess it was still hidden somewhere I couldn't see.  Also, after tinkering with those two commands (deleting, altering) the game loaded without a problem.</p>\n<p>So, instead, I went into the kiss attributes and made the 'is a verb' false instead of true.  That essentially turns off the the built in kiss (you'll get the \"I don't recognize your command\" response) when trying to kiss anything.</p>\n\n",
      "PostDate": "2016-07-23T19:16:46.3931897Z",
      "LastEditDate": "2016-07-23T19:17:37.9045927Z"
    },
    {
      "PostId": "9c3804c2-b4d4-48f3-9df9-e058cb949be5",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "an alternative way...\r\n\r\nput a 'if (Boolean Attribute)' check on them, for example:\r\n\r\n(using reverse logic of 'enabled' instead of 'block/disabled': if 'enabled' then display the code that you don't want displayed, otehrwise if 'not enabled' then don't display the code that you don't want displayed)\r\n\r\n```\r\n<object name=\"global_data_object\">\r\n  <attr name=\"enable_code_boolean_attribute\" type=\"boolean\">true</attr>\r\n</object>\r\n\r\nfor all the code you want to remove (hopefully there's some way of scripting this: maybe there's a \"master handle command/whatever\" for all of the Commands/whatever, as it'd be a huge pain to have to do this for every single piece of code you want blocked, lol), for example with say your 'kisscommand' or whatever piece of code:\r\n\r\n// kisscommand:\r\n\r\nif (not global_data_object.block_code_boolean_attribue) {\r\n  // the normal/default kisscommand code, it's content will be displayed ONLY if the condtion above was met (it's correctly not met), which is what we (if it was being met) don't want, which this code example is handling correctly (the Boolean Attribute is correctly set to true, which causes the condition NOT to be met and thus its code content is blocked from being run, which is the same effect as if you had deleted it)\r\n}\r\n// we don't even need an 'else', as we just want to block the normal code from being activated, which this code example does.\r\n```\r\n\r\n---------------\r\n\r\nactually...\r\n\r\nwhy do you need something to be deleted?\r\n\r\n(if you just merely don't use it in your game, then it's effectively \"deleted\", lol. Well, maybe there's some built-in things that are normally used by quest that you don't want... hmm...)\r\n~OR~\r\n(if you put in your own scripts for any such code piece/Element/Command/Verb/whatever, you OVER-RIDE it, meaning only your new scripting is being done, and not the default/original/initial/built-in scripting for it, effectively \"deleting\" that old/initial/original/built-in scripting without actually deleting it --- you're over-riding it)",
      "EditableFormat": "markdown",
      "HTML": "<p>an alternative way...</p>\n<p>put a 'if (Boolean Attribute)' check on them, for example:</p>\n<p>(using reverse logic of 'enabled' instead of 'block/disabled': if 'enabled' then display the code that you don't want displayed, otehrwise if 'not enabled' then don't display the code that you don't want displayed)</p>\n<pre><code>&lt;object name=\"global_data_object\"&gt;\n  &lt;attr name=\"enable_code_boolean_attribute\" type=\"boolean\"&gt;true&lt;/attr&gt;\n&lt;/object&gt;\n\nfor all the code you want to remove (hopefully there's some way of scripting this: maybe there's a \"master handle command/whatever\" for all of the Commands/whatever, as it'd be a huge pain to have to do this for every single piece of code you want blocked, lol), for example with say your 'kisscommand' or whatever piece of code:\n\n// kisscommand:\n\nif (not global_data_object.block_code_boolean_attribue) {\n  // the normal/default kisscommand code, it's content will be displayed ONLY if the condtion above was met (it's correctly not met), which is what we (if it was being met) don't want, which this code example is handling correctly (the Boolean Attribute is correctly set to true, which causes the condition NOT to be met and thus its code content is blocked from being run, which is the same effect as if you had deleted it)\n}\n// we don't even need an 'else', as we just want to block the normal code from being activated, which this code example does.\n</code></pre>\n<hr>\n<p>actually...</p>\n<p>why do you need something to be deleted?</p>\n<p>(if you just merely don't use it in your game, then it's effectively \"deleted\", lol. Well, maybe there's some built-in things that are normally used by quest that you don't want... hmm...)<br>\n~OR~<br>\n(if you put in your own scripts for any such code piece/Element/Command/Verb/whatever, you OVER-RIDE it, meaning only your new scripting is being done, and not the default/original/initial/built-in scripting for it, effectively \"deleting\" that old/initial/original/built-in scripting without actually deleting it --- you're over-riding it)</p>\n\n",
      "PostDate": "2016-07-23T20:29:36.8491633Z",
      "LastEditDate": "2016-07-23T20:40:06.5226095Z"
    },
    {
      "PostId": "ab11ba4d-9a70-41c7-8ef8-3199c27a8aa7",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/28lV6nMb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah, so I can just over-ride it and not worry about it. Thanks! :D Appreciate it Xan and HK.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah, so I can just over-ride it and not worry about it. Thanks! :D Appreciate it Xan and HK.</p>\n\n",
      "PostDate": "2016-07-24T03:48:27.7099835Z",
      "LastEditDate": null
    },
    {
      "PostId": "cceb1515-b17c-4e05-8343-a4d3890c87e8",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the caveat (doesn't apply directly to your topic):\r\n\r\njust don't over-ride anything (especially not any of the underlying robust functionalities that Alex, and any co-helpers on/for/with the quest coding, has done for us with quest, unless you can code in your own such systems/robust code functionalities) the that you don't want to over-ride (as you plan on using/needing it).\r\n\r\n(over-riding doesn't do anything to the over-ridden default/underlying code, but it can be hard in some cases to track down what+where you did to over-ride what+where to delete those part/s of your code out, if you want to undo/remove your over-ridding code parts)\r\n\r\n------\r\n\r\nalso however, I'm not fully sure/clear on/of how the over-riding works (or doesn't work) with user-level functionality vs the underlying functionality.\r\n\r\nwhat I mean by this, for example:\r\n\r\njust changing what scripts are run by say a 'whatever' individual Object's 'take' Verb; just changing what scripts to put/add into say the 'take' Verb of 'whatever' individual Object\r\nVS\r\nchanging the underlying functionality of say the 'taking' system coding of it how, say, 'take', works / is able to work.",
      "EditableFormat": "markdown",
      "HTML": "<p>the caveat (doesn't apply directly to your topic):</p>\n<p>just don't over-ride anything (especially not any of the underlying robust functionalities that Alex, and any co-helpers on/for/with the quest coding, has done for us with quest, unless you can code in your own such systems/robust code functionalities) the that you don't want to over-ride (as you plan on using/needing it).</p>\n<p>(over-riding doesn't do anything to the over-ridden default/underlying code, but it can be hard in some cases to track down what+where you did to over-ride what+where to delete those part/s of your code out, if you want to undo/remove your over-ridding code parts)</p>\n<hr>\n<p>also however, I'm not fully sure/clear on/of how the over-riding works (or doesn't work) with user-level functionality vs the underlying functionality.</p>\n<p>what I mean by this, for example:</p>\n<p>just changing what scripts are run by say a 'whatever' individual Object's 'take' Verb; just changing what scripts to put/add into say the 'take' Verb of 'whatever' individual Object<br>\nVS<br>\nchanging the underlying functionality of say the 'taking' system coding of it how, say, 'take', works / is able to work.</p>\n\n",
      "PostDate": "2016-07-24T05:29:01.4558982Z",
      "LastEditDate": "2016-07-24T09:02:13.5249772Z"
    }
  ]
}
