{
  "Topic": {
    "TopicId": "4750",
    "ForumId": "10",
    "Title": "coding?",
    "LastUpdated": "2014-11-17T12:45:59+00:00",
    "ReplyCount": 12
  },
  "Posts": [
    {
      "PostId": "31226",
      "UserId": 0,
      "Username": "onimike",
      "UserAvatar": null,
      "UserGravatar": "81a1a7d9be523aa5ac1d92fa2660b397",
      "EditableText": "Hey all, was wondering if there are any walkthroughs, videos or step by step instructions on learning quest coding? And if not could some one recommend what coding language I should look into to use with quest please? Thank you in advance.",
      "EditableFormat": "bbcode",
      "HTML": "Hey all, was wondering if there are any walkthroughs, videos or step by step instructions on learning quest coding? And if not could some one recommend what coding language I should look into to use with quest please? Thank you in advance.",
      "PostDate": "2014-11-16T15:21:19+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "31227",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "There's the tutorial linked to from here:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/\">http://docs.textadventures.co.uk/quest/</a><!-- m -->\n\nBeyond that, just what's on the forums, that I know of. However, it wouldn't surprise me if there were something out there!\n\nEdit: funny how when you look...\n\n<!-- m --><a class=\"postlink\" href=\"https://www.youtube.com/watch?v=uNrF4QB7yiY&amp;list=PL38B91F04663EE7A2\">https://www.youtube.com/watch?v=uNrF4QB ... 04663EE7A2</a><!-- m -->",
      "EditableFormat": "bbcode",
      "HTML": "There's the tutorial linked to from here:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/\">http://docs.textadventures.co.uk/quest/</a><!-- m --><br/><br/>Beyond that, just what's on the forums, that I know of. However, it wouldn't surprise me if there were something out there!<br/><br/>Edit: funny how when you look...<br/><br/><!-- m --><a class=\"postlink\" href=\"https://www.youtube.com/watch?v=uNrF4QB7yiY&amp;list=PL38B91F04663EE7A2\">https://www.youtube.com/watch?v=uNrF4QB ... 04663EE7A2</a><!-- m -->",
      "PostDate": "2014-11-16T15:33:05+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "31245",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "That doesn't seem to cover coding though.",
      "EditableFormat": "bbcode",
      "HTML": "That doesn't seem to cover coding though.",
      "PostDate": "2014-11-16T18:50:46+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "31249",
      "UserId": 0,
      "Username": "onimike",
      "UserAvatar": null,
      "UserGravatar": "81a1a7d9be523aa5ac1d92fa2660b397",
      "EditableText": "No but I thank you for checking I have seen those was looking for more of a direct coding and understanding including all functionality such as AllObjects (), GetInt, Got (obj) and what they mean, when to add in a script etc. But I'm looking at the coding itself when I use the GUI editor trying to understand <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->. Thanks again I'll have it down when they have an engine that does it all for you lmao.",
      "EditableFormat": "bbcode",
      "HTML": "No but I thank you for checking I have seen those was looking for more of a direct coding and understanding including all functionality such as AllObjects (), GetInt, Got (obj) and what they mean, when to add in a script etc. But I'm looking at the coding itself when I use the GUI editor trying to understand <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->. Thanks again I'll have it down when they have an engine that does it all for you lmao.",
      "PostDate": "2014-11-16T19:02:02+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "31258",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "One good thing to do is to look at the Quest core code that ships with the desktop version. You can see how the various functions and methods are used. That's not a great answer, but it's how I learned a lot about how things worked (besides just trying it myself).\n\nOn my computer, those files live in:\n\nC:\\Program Files (x86)\\Quest 5\\Core\n\nYou can also view them in any editing session by clicking FIlter at the bottom left and then &quot;Show Library Elements&quot;. That will make all the core script visible to be looked at. (They will all be gray and not editable unless you explicitly copy them into your game.)",
      "EditableFormat": "bbcode",
      "HTML": "One good thing to do is to look at the Quest core code that ships with the desktop version. You can see how the various functions and methods are used. That's not a great answer, but it's how I learned a lot about how things worked (besides just trying it myself).<br/><br/>On my computer, those files live in:<br/><br/>C:\\Program Files (x86)\\Quest 5\\Core<br/><br/>You can also view them in any editing session by clicking FIlter at the bottom left and then &quot;Show Library Elements&quot;. That will make all the core script visible to be looked at. (They will all be gray and not editable unless you explicitly copy them into your game.)",
      "PostDate": "2014-11-16T19:36:57+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "31260",
      "UserId": 0,
      "Username": "onimike",
      "UserAvatar": null,
      "UserGravatar": "81a1a7d9be523aa5ac1d92fa2660b397",
      "EditableText": "Thanks Jay yeah its my best bet plus I need to learn any way if I want to make a good game and have the correct functionality.",
      "EditableFormat": "bbcode",
      "HTML": "Thanks Jay yeah its my best bet plus I need to learn any way if I want to make a good game and have the correct functionality.",
      "PostDate": "2014-11-16T19:40:07+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "31261",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "HK is a good guide for you (albiet it might take him many attempts until his posts are clear and understandable, laughs) <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\nI'd be happy to be your quest code guide or instructor, lol. HK likes (trying anyways) to teach others about quest's code, as I myself was a total noob 2-3 years ago, knowing nothing not only about quest's coding, but nothing about coding~programming in general as well, so thus I post a lot, as I want to give back to this great software and website, by trying to help others learn to code and~or just to code in general, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\n--------\n\nso, ask (post publically or pm me) away your questions at me (I'll be glad to help with everyone of them, ask all you want as much as you want), though I'm busy in real life (got a job), so I may not be able to answer right away though.",
      "EditableFormat": "bbcode",
      "HTML": "HK is a good guide for you (albiet it might take him many attempts until his posts are clear and understandable, laughs) <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>I'd be happy to be your quest code guide or instructor, lol. HK likes (trying anyways) to teach others about quest's code, as I myself was a total noob 2-3 years ago, knowing nothing not only about quest's coding, but nothing about coding~programming in general as well, so thus I post a lot, as I want to give back to this great software and website, by trying to help others learn to code and~or just to code in general, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>--------<br/><br/>so, ask (post publically or pm me) away your questions at me (I'll be glad to help with everyone of them, ask all you want as much as you want), though I'm busy in real life (got a job), so I may not be able to answer right away though.",
      "PostDate": "2014-11-16T19:42:54+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "31265",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "[quote=&quot;onimike&quot;:ek023a4w]AllObjects (), GetInt, Got (obj)[/quote:ek023a4w]\n\n--------\n\nAllObjects () : a 'scope like function' that gets *ALL* Objects in the ENTIRE game: as for exactly what it is doing internally: I *guess* it gets all the Objects and puts~uses them in a variable_name = NewObjectList (), as you see the similiarity: AllObjects () &lt;===&gt; NewObjectList () ~ the parenthesis' are empty, internally within the Function itself: AllObjects ()\n\n------\n\nget input { script } : this simply (internally~hidden from you) sets: result = (your typed-in input into the command bar during game play), so:\n\n[code:ek023a4w]msg (&quot;What is your name?&quot;)\nget input {\n  // I type in during game play&#58; HK\n  // hidden from you, this is done&#58; result = &quot;HK&quot;\n  // thus this can be set below&#58;\n  player&#46;alias = result\n  // as conceptually&#58; player&#46;alias = result = &quot;HK&quot;\n  msg (player&#46;alias)\n  // outputs&#58; HK\n}[/code:ek023a4w]\n\nas for GetInput... oops... haha... GetInt... wow, I need to read more closely, haha...\n\n-----------\n\nfor 'Get' (Attribute: all types~any type, Int, String, etc):\n\nvariable_name = GetInt (Object_name, &quot;Attribute_name&quot;)\n\n'Get' is a one step process that does the three processes:\n\n1. checking if your Object has the Attribute\n2. checking if your Attribute has the correct Value (if the Attribute's Attribute Type matches up with the Attribute's Value's  Attribute Type)\n3. and if yes, then it returns~outputs that Value (in this case of GetInt, then the # amount, or if no, then it returns~outputs NULL (it fails to do the script as it failed the check conditions).\n\nfor direct example (I think I call ...\n\n[code:ek023a4w]&lt;function name=&quot;age_integer_function&quot;&gt;\n  msg (&quot;What is your age?&quot;)\n  get input {\n    if (IsNumeric (result) = true) {\n      if (ToInt (result) &gt;= 0) {\n      } else if (IsNumeric (result) = false) {\n    }\n  }\n&lt;/function&gt;[/code:ek023a4w]\n\n-----\n\nerr... sorry... I just got called into work... got to go right now, lol...",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>onimike wrote:</cite>AllObjects (), GetInt, Got (obj)</blockquote><br/><br/>--------<br/><br/>AllObjects () : a 'scope like function' that gets *ALL* Objects in the ENTIRE game: as for exactly what it is doing internally: I *guess* it gets all the Objects and puts~uses them in a variable_name = NewObjectList (), as you see the similiarity: AllObjects () &lt;===&gt; NewObjectList () ~ the parenthesis' are empty, internally within the Function itself: AllObjects ()<br/><br/>------<br/><br/>get input { script } : this simply (internally~hidden from you) sets: result = (your typed-in input into the command bar during game play), so:<br/><br/><pre><code>msg (&quot;What is your name?&quot;)<br/>get input {<br/>  // I type in during game play&#58; HK<br/>  // hidden from you, this is done&#58; result = &quot;HK&quot;<br/>  // thus this can be set below&#58;<br/>  player&#46;alias = result<br/>  // as conceptually&#58; player&#46;alias = result = &quot;HK&quot;<br/>  msg (player&#46;alias)<br/>  // outputs&#58; HK<br/>}</code></pre><br/><br/>as for GetInput... oops... haha... GetInt... wow, I need to read more closely, haha...<br/><br/>-----------<br/><br/>for 'Get' (Attribute: all types~any type, Int, String, etc):<br/><br/>variable_name = GetInt (Object_name, &quot;Attribute_name&quot;)<br/><br/>'Get' is a one step process that does the three processes:<br/><br/>1. checking if your Object has the Attribute<br/>2. checking if your Attribute has the correct Value (if the Attribute's Attribute Type matches up with the Attribute's Value's  Attribute Type)<br/>3. and if yes, then it returns~outputs that Value (in this case of GetInt, then the # amount, or if no, then it returns~outputs NULL (it fails to do the script as it failed the check conditions).<br/><br/>for direct example (I think I call ...<br/><br/><pre><code>&lt;function name=&quot;age_integer_function&quot;&gt;<br/>  msg (&quot;What is your age?&quot;)<br/>  get input {<br/>    if (IsNumeric (result) = true) {<br/>      if (ToInt (result) &gt;= 0) {<br/>      } else if (IsNumeric (result) = false) {<br/>    }<br/>  }<br/>&lt;/function&gt;</code></pre><br/><br/>-----<br/><br/>err... sorry... I just got called into work... got to go right now, lol...",
      "PostDate": "2014-11-16T20:11:23+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "31267",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "1) The parentheses are optional if there are no parameters.\n\n2) The one difference in the Get* functions is GetBoolean, which returns false if the attribute doesn't exist - which is quite handy.\n\n3) In this code:\n\n[code:3j61w6kc]&lt;function name=&quot;age_integer_function&quot;&gt;\n  msg (&quot;What is your age?&quot;)\n  get input {\n    if (IsNumeric (result) = true) {\n      if (ToInt (result) &gt;= 0) {\n      } else if (IsNumeric (result) = false) {\n    }\n  }\n&lt;/function&gt;[/code:3j61w6kc]\nthe &quot;if IsNumeric = false&quot; will never be true, as it will only get there if IsNumeric is already true. So that else is not needed. If you meant it to be the else for IsNumeric = true, then you don't need the check. A simple else will do. If it's not true, it must be false.\n\n4) Got(object) returns true if the player currently has the object (that is, the object's parent is the player). More or less equivalent to whether the object is in the player's inventory.",
      "EditableFormat": "bbcode",
      "HTML": "1) The parentheses are optional if there are no parameters.<br/><br/>2) The one difference in the Get* functions is GetBoolean, which returns false if the attribute doesn't exist - which is quite handy.<br/><br/>3) In this code:<br/><br/><pre><code>&lt;function name=&quot;age_integer_function&quot;&gt;<br/>  msg (&quot;What is your age?&quot;)<br/>  get input {<br/>    if (IsNumeric (result) = true) {<br/>      if (ToInt (result) &gt;= 0) {<br/>      } else if (IsNumeric (result) = false) {<br/>    }<br/>  }<br/>&lt;/function&gt;</code></pre><br/>the &quot;if IsNumeric = false&quot; will never be true, as it will only get there if IsNumeric is already true. So that else is not needed. If you meant it to be the else for IsNumeric = true, then you don't need the check. A simple else will do. If it's not true, it must be false.<br/><br/>4) Got(object) returns true if the player currently has the object (that is, the object's parent is the player). More or less equivalent to whether the object is in the player's inventory.",
      "PostDate": "2014-11-16T20:18:05+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "31285",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "err... I typo'ed in my haste to close out of quest and my pc (to get to work), I put it on the wrong line Jay, lol.\n\n(now that I'm back from work, let me finish up this example)\n\n(code is stupid and redundant, but doing it to show all the different uses: 'Is', 'Has', 'Get', and 'To' Functions)\n\n[code:i2sgh9vm]&lt;function name=&quot;age_integer_function&quot;&gt;\n  msg (&quot;What is your age?&quot;)\n  get input {\n    if (IsNumeric (result) = true) {\n      if (ToInt (result) &gt;= 0) {\n        player&#46;age_integer = ToInt (result)\n        if (IsInt (player, &quot;age_integer&quot;) = true) {\n          if (HasInt (player, &quot;age_integer&quot;) = true) {\n            if (GetInt (player, &quot;age_integer&quot;) &gt;= 0) {\n              msg (player&#46;age_integer)\n            }\n          }\n        }\n      } else if (ToInt (result) &lt; 0) {\n        // call function (loop~repeat function)\n      }\n    } else if (IsNumeric (result) = false) {\n      // call function (loop~repeat function)\n    }\n  }\n&lt;/function&gt;[/code:i2sgh9vm]",
      "EditableFormat": "bbcode",
      "HTML": "err... I typo'ed in my haste to close out of quest and my pc (to get to work), I put it on the wrong line Jay, lol.<br/><br/>(now that I'm back from work, let me finish up this example)<br/><br/>(code is stupid and redundant, but doing it to show all the different uses: 'Is', 'Has', 'Get', and 'To' Functions)<br/><br/><pre><code>&lt;function name=&quot;age_integer_function&quot;&gt;<br/>  msg (&quot;What is your age?&quot;)<br/>  get input {<br/>    if (IsNumeric (result) = true) {<br/>      if (ToInt (result) &gt;= 0) {<br/>        player&#46;age_integer = ToInt (result)<br/>        if (IsInt (player, &quot;age_integer&quot;) = true) {<br/>          if (HasInt (player, &quot;age_integer&quot;) = true) {<br/>            if (GetInt (player, &quot;age_integer&quot;) &gt;= 0) {<br/>              msg (player&#46;age_integer)<br/>            }<br/>          }<br/>        }<br/>      } else if (ToInt (result) &lt; 0) {<br/>        // call function (loop~repeat function)<br/>      }<br/>    } else if (IsNumeric (result) = false) {<br/>      // call function (loop~repeat function)<br/>    }<br/>  }<br/>&lt;/function&gt;</code></pre>",
      "PostDate": "2014-11-17T07:02:40+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "31286",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Got:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/got.html\">http://docs.textadventures.co.uk/quest/ ... y/got.html</a><!-- m -->\n\n[code:mwceqzyk]if (Got (million_dollar_bill) = true) {\n  player&#46;alias = &quot;HK&quot;\n  msg (player&#46;alias + &quot; is very very very very happy !!!!!!!!!!!&quot;)\n}\n\nor, the exact same thing&#58;\n\nif (million_dollar_bill&#46;parent = player) {\n  player&#46;alias = &quot;HK&quot;\n  msg (player&#46;alias + &quot; is very very very very happy !!!!!!!!!!!&quot;)\n}\n\nOr, the exact same thing&#58;\n\n(syntax is probably wrong, too lazy to look up how to do it)\n\nif (Contains (ScopeInventory (), million_dollar_bill) = true) {\n  player&#46;alias = &quot;HK&quot;\n  msg (player&#46;alias + &quot; is very very very very happy !!!!!!!!!!!&quot;)\n}[/code:mwceqzyk]\n\n---------------\n\nin case you're wondering about the:\n\nIsNumeric vs IsInt\n\nIt took me a long time to understand the difference myself... lol\n\nIsNumeric is asking if the character~symbol itself is a number, or not.\n\nIsInt is asking if it's set as being the Attribute Type of 'Integer', or not.",
      "EditableFormat": "bbcode",
      "HTML": "Got:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/got.html\">http://docs.textadventures.co.uk/quest/ ... y/got.html</a><!-- m --><br/><br/><pre><code>if (Got (million_dollar_bill) = true) {<br/>  player&#46;alias = &quot;HK&quot;<br/>  msg (player&#46;alias + &quot; is very very very very happy !!!!!!!!!!!&quot;)<br/>}<br/><br/>or, the exact same thing&#58;<br/><br/>if (million_dollar_bill&#46;parent = player) {<br/>  player&#46;alias = &quot;HK&quot;<br/>  msg (player&#46;alias + &quot; is very very very very happy !!!!!!!!!!!&quot;)<br/>}<br/><br/>Or, the exact same thing&#58;<br/><br/>(syntax is probably wrong, too lazy to look up how to do it)<br/><br/>if (Contains (ScopeInventory (), million_dollar_bill) = true) {<br/>  player&#46;alias = &quot;HK&quot;<br/>  msg (player&#46;alias + &quot; is very very very very happy !!!!!!!!!!!&quot;)<br/>}</code></pre><br/><br/>---------------<br/><br/>in case you're wondering about the:<br/><br/>IsNumeric vs IsInt<br/><br/>It took me a long time to understand the difference myself... lol<br/><br/>IsNumeric is asking if the character~symbol itself is a number, or not.<br/><br/>IsInt is asking if it's set as being the Attribute Type of 'Integer', or not.",
      "PostDate": "2014-11-17T07:08:22+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "31292",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "as for coding language:\n\nquest's code language is it's own, however it does resemble 'XML (eXtensive Markup Language)'\n\ndownload this program~software:\n\n<!-- m --><a class=\"postlink\" href=\"http://notepad-plus-plus.org/\">http://notepad-plus-plus.org/</a><!-- m -->\n\nand when you got it installed and opened up:\n\nat the top, click on 'languages', and choose 'XML', and craft your own (or copy and paste others' code into it, from posts in the forum such as mine or Jay's or Pixie's or etc's) quest code. Then for the file itself's name, change~rename it's extension to: *.aslx (ie: your_name_of_file.aslx), to play it as a quest game (if the code is that of a functioning game and is of the same version as your quest.exe, current is: version=&quot;550&quot; ). Err, you can always have it be a library file, if its code does not create a functional game.\n\ndue to the color coding that it uses, it makes it SOOOO much easier ro read, write, and~or troubleshoot your (or others' ) quest code <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n(and a lot of other really cool features, which I've not learned to use yet... doh!)\n\nalso, it tells you the 'line' and 'line position' of where your cursor is at, so very useful for finding your errors from the error messages, made up example:\n\nError code: extra ' ) ' at line 8 position 5, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\nor my own personal common typo~error:\n\nError code: missing ' { ' at line X position Y, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\n------------------\n\nas for learning to code in quest:\n\nfirst first (forgot, lol): complete the tutorial in its entirety\n\nfirst understand all the terms (or stuff) and about them (able to use them) in quest:\n\nElements (THINGS~Physics: MATTER)\n-&gt; Objects\n-&gt; Turnscripts\n-&gt; Timers\n-&gt; Verbs\n-&gt; Commands\n-&gt; Functions\n-&gt; Object Types\n-&gt; Exits\n-&gt; etc etc etc\nAttributes (Types of Attributes) ~ (MECHANICS~DATA)\n-&gt; String\n-&gt; Integer (int)\n-&gt; Double\n-&gt; Boolean\n-&gt; Object\nScripting (ACTIONS~Physics: ENERGY~FORCES~WAVES)\n-&gt; 'set a variable or attribute' Script\n-&gt; 'if' Script\n-&gt; 'msg' Script\n-&gt; 'get input' Script\n-&gt; Parameters (Commands and Functions)\n-&gt; etc etc etc\n\nsecond, understand Attribute usage (setting and altering Attributes)\n\nthird, understanding the 'if' code mindset~mentality~logic~thinking of scripting (which means: 'if' Scripts + 'set a variable or attribute' Scripts: understanding 'if' logic and Attributes)\n\nfourth, 'character creation' Scripting\n\n4.5 (forgot these), Parameters (Functions and Commands), Functions, Commands, and (separate~unrelated from the rest) Object Types\n\nfifth, lists + 'foreach' and 'for' + Randomization Scripts~Functions ( 'DiceRoll', 'RandomChance', 'GetRandomInt', and 'GetRandomDouble' )\n\nsixth, dictionaries + (see lists' above)\n\nseventh, take some small simple code, learn it, and keep building up more and more small code things.\n\nfor challenges, when you feel you're ready:\n\ncombat, equipment, magic, 'explore' and 'travel', dynamic dialogue, and etc etc etc",
      "EditableFormat": "bbcode",
      "HTML": "as for coding language:<br/><br/>quest's code language is it's own, however it does resemble 'XML (eXtensive Markup Language)'<br/><br/>download this program~software:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://notepad-plus-plus.org/\">http://notepad-plus-plus.org/</a><!-- m --><br/><br/>and when you got it installed and opened up:<br/><br/>at the top, click on 'languages', and choose 'XML', and craft your own (or copy and paste others' code into it, from posts in the forum such as mine or Jay's or Pixie's or etc's) quest code. Then for the file itself's name, change~rename it's extension to: *.aslx (ie: your_name_of_file.aslx), to play it as a quest game (if the code is that of a functioning game and is of the same version as your quest.exe, current is: version=&quot;550&quot; ). Err, you can always have it be a library file, if its code does not create a functional game.<br/><br/>due to the color coding that it uses, it makes it SOOOO much easier ro read, write, and~or troubleshoot your (or others' ) quest code <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/>(and a lot of other really cool features, which I've not learned to use yet... doh!)<br/><br/>also, it tells you the 'line' and 'line position' of where your cursor is at, so very useful for finding your errors from the error messages, made up example:<br/><br/>Error code: extra ' ) ' at line 8 position 5, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>or my own personal common typo~error:<br/><br/>Error code: missing ' { ' at line X position Y, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>------------------<br/><br/>as for learning to code in quest:<br/><br/>first first (forgot, lol): complete the tutorial in its entirety<br/><br/>first understand all the terms (or stuff) and about them (able to use them) in quest:<br/><br/>Elements (THINGS~Physics: MATTER)<br/>-&gt; Objects<br/>-&gt; Turnscripts<br/>-&gt; Timers<br/>-&gt; Verbs<br/>-&gt; Commands<br/>-&gt; Functions<br/>-&gt; Object Types<br/>-&gt; Exits<br/>-&gt; etc etc etc<br/>Attributes (Types of Attributes) ~ (MECHANICS~DATA)<br/>-&gt; String<br/>-&gt; Integer (int)<br/>-&gt; Double<br/>-&gt; Boolean<br/>-&gt; Object<br/>Scripting (ACTIONS~Physics: ENERGY~FORCES~WAVES)<br/>-&gt; 'set a variable or attribute' Script<br/>-&gt; 'if' Script<br/>-&gt; 'msg' Script<br/>-&gt; 'get input' Script<br/>-&gt; Parameters (Commands and Functions)<br/>-&gt; etc etc etc<br/><br/>second, understand Attribute usage (setting and altering Attributes)<br/><br/>third, understanding the 'if' code mindset~mentality~logic~thinking of scripting (which means: 'if' Scripts + 'set a variable or attribute' Scripts: understanding 'if' logic and Attributes)<br/><br/>fourth, 'character creation' Scripting<br/><br/>4.5 (forgot these), Parameters (Functions and Commands), Functions, Commands, and (separate~unrelated from the rest) Object Types<br/><br/>fifth, lists + 'foreach' and 'for' + Randomization Scripts~Functions ( 'DiceRoll', 'RandomChance', 'GetRandomInt', and 'GetRandomDouble' )<br/><br/>sixth, dictionaries + (see lists' above)<br/><br/>seventh, take some small simple code, learn it, and keep building up more and more small code things.<br/><br/>for challenges, when you feel you're ready:<br/><br/>combat, equipment, magic, 'explore' and 'travel', dynamic dialogue, and etc etc etc",
      "PostDate": "2014-11-17T10:09:35+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "31294",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Just to comment a bit (since this is targetted to a new scripter who may not know otherwise):\n\nIn languages where you have boolean-taking &quot;if&quot; statements as well as boolean-returning functions (and there are a lot of them out there), you would never see something like this:\n\n[code:3cr9j9yz]    if (IsNumeric (result) = true) {[/code:3cr9j9yz]\nexcept in newbie programmers who didn't understand. The thought of taking a boolean result and comparing it to true or false to generate *another* boolean result is not only unnecessary, but it breaks the readability of the code. All you need to do is:\n\n[code:3cr9j9yz]    if (IsNumeric (result)) {[/code:3cr9j9yz]\nwhich actually reads the way you want (&quot;If the result is numeric&quot; as opposed to &quot;if the result of the IsNumeric function on result is true&quot;). I know HK prefers it that way, so I won't argue with him. But I would not want to propagate such a style issue to someone new. If you were working in an actual coding environment (e.g. a company) and wrote code like that, you'd end up with at least raised eyebrows and concerned looks if not outright censure.\n\nAs well, the basic construct for handling the two sides of a condtion is &quot;if/else&quot;:\n\n[code:3cr9j9yz]if (some_condition) {\n   // handle the condition\n} else {\n   // handle the opposite condition\n}[/code:3cr9j9yz]\nThat is the idiom for if/else. If you had three conditions, you'd add in an additional &quot;else if&quot;:\n\n[code:3cr9j9yz]if (some_condition) {\n   // handle the condition\n} else if (some_other_condition) {\n   // handle the second special condition\n} else {\n   // neither of those\n}[/code:3cr9j9yz]\n\nYou would (should) never see code like this:\n[code:3cr9j9yz]if (some_condition) {\n   // handle the condition\n} else if (not some_other_condition) {\n   // handle the opposite case\n}[/code:3cr9j9yz]\nAgain, proper coding style guides for *any* language with such a construct would frown on that because:\n1) it's needless additional code to test the opposite condition which a simple &quot;else&quot; already covers\n2) it would probably be confusing to someone besides you looking at the code because the &quot;else if&quot; is setting up the idiom and expectation that there are more than two conditions being checked\n3) it's just pointless and overly complicated. You have to actually work out and make sure you get right the opposite condition to the original if. That's an error and bug waiting to happen. And all to gain code bloat...\n4) If you ever showed the code to anyone who knew better, you'd lose brownie points.\n\nNow, people can write code how they want. It's always possible to write worse code than necessary, and I'm not one to dictate. Feel free. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I just don't want to see some of the examples given above as the way you *need* to write the code. You can if you want. But there is absolutely no need to propagate boolean expressions ( &quot;(((((IsInt(result) = true) = true ) = true)...&quot;)  or avoid the use of a straight &quot;else&quot; in your conditionals. You really don't want to pick up bad style habits so early. Then you just have to break them later.  As they say, Keep It Simple, Son!",
      "EditableFormat": "bbcode",
      "HTML": "Just to comment a bit (since this is targetted to a new scripter who may not know otherwise):<br/><br/>In languages where you have boolean-taking &quot;if&quot; statements as well as boolean-returning functions (and there are a lot of them out there), you would never see something like this:<br/><br/><pre><code>    if (IsNumeric (result) = true) {</code></pre><br/>except in newbie programmers who didn't understand. The thought of taking a boolean result and comparing it to true or false to generate *another* boolean result is not only unnecessary, but it breaks the readability of the code. All you need to do is:<br/><br/><pre><code>    if (IsNumeric (result)) {</code></pre><br/>which actually reads the way you want (&quot;If the result is numeric&quot; as opposed to &quot;if the result of the IsNumeric function on result is true&quot;). I know HK prefers it that way, so I won't argue with him. But I would not want to propagate such a style issue to someone new. If you were working in an actual coding environment (e.g. a company) and wrote code like that, you'd end up with at least raised eyebrows and concerned looks if not outright censure.<br/><br/>As well, the basic construct for handling the two sides of a condtion is &quot;if/else&quot;:<br/><br/><pre><code>if (some_condition) {<br/>   // handle the condition<br/>} else {<br/>   // handle the opposite condition<br/>}</code></pre><br/>That is the idiom for if/else. If you had three conditions, you'd add in an additional &quot;else if&quot;:<br/><br/><pre><code>if (some_condition) {<br/>   // handle the condition<br/>} else if (some_other_condition) {<br/>   // handle the second special condition<br/>} else {<br/>   // neither of those<br/>}</code></pre><br/><br/>You would (should) never see code like this:<br/><pre><code>if (some_condition) {<br/>   // handle the condition<br/>} else if (not some_other_condition) {<br/>   // handle the opposite case<br/>}</code></pre><br/>Again, proper coding style guides for *any* language with such a construct would frown on that because:<br/>1) it's needless additional code to test the opposite condition which a simple &quot;else&quot; already covers<br/>2) it would probably be confusing to someone besides you looking at the code because the &quot;else if&quot; is setting up the idiom and expectation that there are more than two conditions being checked<br/>3) it's just pointless and overly complicated. You have to actually work out and make sure you get right the opposite condition to the original if. That's an error and bug waiting to happen. And all to gain code bloat...<br/>4) If you ever showed the code to anyone who knew better, you'd lose brownie points.<br/><br/>Now, people can write code how they want. It's always possible to write worse code than necessary, and I'm not one to dictate. Feel free. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I just don't want to see some of the examples given above as the way you *need* to write the code. You can if you want. But there is absolutely no need to propagate boolean expressions ( &quot;(((((IsInt(result) = true) = true ) = true)...&quot;)  or avoid the use of a straight &quot;else&quot; in your conditionals. You really don't want to pick up bad style habits so early. Then you just have to break them later.  As they say, Keep It Simple, Son!",
      "PostDate": "2014-11-17T12:45:59+00:00",
      "LastEditDate": null
    }
  ]
}
