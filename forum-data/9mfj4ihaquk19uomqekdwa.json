{
  "Topic": {
    "TopicId": "9mfj4ihaquk19uomqekdwa",
    "ForumId": "10",
    "Title": "How do I make equipment increase more than 1 of a stat? Provide passives?",
    "LastUpdated": "2020-04-24T21:01:49.0941372Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "0952a43f-4fbd-4c62-9c66-d3f66b083d18",
      "UserId": 420742,
      "Username": "GC2",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Under Wearable and then under Advanced features, there's a section where you can type in attributes to increase, but it only increases that attribute by 1. \r\n\r\nHow do I get it to increase by more than 1?\r\n\r\nAlso, how do I give equipment passives? \r\nFor example: lifesteal all damage dealt",
      "EditableFormat": "markdown",
      "HTML": "<p>Under Wearable and then under Advanced features, there's a section where you can type in attributes to increase, but it only increases that attribute by 1.</p>\n<p>How do I get it to increase by more than 1?</p>\n<p>Also, how do I give equipment passives?<br>\nFor example: lifesteal all damage dealt</p>\n\n",
      "PostDate": "2020-04-24T21:01:49.0941372Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "25a32fd8-fbc6-4f17-baca-31480a5bb6cd",
      "UserId": 207026,
      "Username": "Pykrete",
      "AvatarUrl": "https://i.imgur.com/n9Ygszeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I personally ignore that bit entirely.\r\n\r\nYou can set scripts for when an item is worn, and when it is removed. Use those.\r\n\r\nRather than directly affecting the attribute, I personally have everything that could affect an attribute given an attribute of its own; for example, I have Strength, Strength Weapon, Strength Armour, Strength Accessory, and Strength Bonus (Bonus being temporary buffs/debuffs in battles which resets to 0 at the end of a fight.)\r\n\r\nSo, on wear, player.strength armour = 2. Or, player.strength weapon = 3, etc.\r\n\r\nI then have a turnscript running which updates these attributes into 'Strength Total', which is what I actually use for calculations in battle, calling on for 'can I lift this rock', etc. (Literally, just;\r\n``player.strength total = player.strength + player.strength weapon + player.strength armour (etc``\r\n)\r\n\r\nThis turnscript running probably isn't very sensible, though. You could get the same affect with a good Change script, though I've not personally fiddled with them.\r\n\r\nOn remove, player.strength weapon/armour/whatever = 0.\r\n\r\nAs for giving equipment passives... same thing. On wear, set a flag. ``Player.lifesteal``.\r\n\r\nThis, of course, is assuming these passives come from one source. If lifesteal can only come from weapons,  then this is fine. If lifesteal could come from, say, accessories too, then you'd need to figure out a way of making it so that if the player puts on a lifesteal sword and a lifesteal ring, they don't deactivate lifesteal when removing either one while the other remains. You could, in that instance, turn it into a variable instead, and rather than checking to see if the player has 'lifesteal' as a flag, check to see if player.lifesteal > 0. With two items, it would be 2, with one removed, it would go down to 1. With neither, it would be 0, effectively the same as turning off a flag.",
      "EditableFormat": "markdown",
      "HTML": "<p>I personally ignore that bit entirely.</p>\n<p>You can set scripts for when an item is worn, and when it is removed. Use those.</p>\n<p>Rather than directly affecting the attribute, I personally have everything that could affect an attribute given an attribute of its own; for example, I have Strength, Strength Weapon, Strength Armour, Strength Accessory, and Strength Bonus (Bonus being temporary buffs/debuffs in battles which resets to 0 at the end of a fight.)</p>\n<p>So, on wear, player.strength armour = 2. Or, player.strength weapon = 3, etc.</p>\n<p>I then have a turnscript running which updates these attributes into 'Strength Total', which is what I actually use for calculations in battle, calling on for 'can I lift this rock', etc. (Literally, just;<br>\n<code>player.strength total = player.strength + player.strength weapon + player.strength armour (etc</code><br>\n)</p>\n<p>This turnscript running probably isn't very sensible, though. You could get the same affect with a good Change script, though I've not personally fiddled with them.</p>\n<p>On remove, player.strength weapon/armour/whatever = 0.</p>\n<p>As for giving equipment passives... same thing. On wear, set a flag. <code>Player.lifesteal</code>.</p>\n<p>This, of course, is assuming these passives come from one source. If lifesteal can only come from weapons,  then this is fine. If lifesteal could come from, say, accessories too, then you'd need to figure out a way of making it so that if the player puts on a lifesteal sword and a lifesteal ring, they don't deactivate lifesteal when removing either one while the other remains. You could, in that instance, turn it into a variable instead, and rather than checking to see if the player has 'lifesteal' as a flag, check to see if player.lifesteal &gt; 0. With two items, it would be 2, with one removed, it would go down to 1. With neither, it would be 0, effectively the same as turning off a flag.</p>\n\n",
      "PostDate": "2020-04-24T21:13:35.0629893Z",
      "LastEditDate": "2020-04-24T21:13:59.6509561Z",
      "link": null
    },
    {
      "PostId": "d36cf4dc-c23e-4436-8aa7-499f78a4b5cd",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> How do I get it to increase by more than 1?\r\n\r\nYou can enter something like `strength+4` in that field. Or `strength+2;speed-1` if you want to affect multiple attributes.\r\n\r\n> Also, how do I give equipment passives?\r\nFor example: lifesteal all damage dealt\r\n\r\nIn the script that handles the player dealing damage to something else, you would have to check if they're wearing an item with that attribute, and handle it appropriately.\r\n\r\nI'd probably implement it by creating a dictionary of different passive abilities. Your damage-dealing script can do something like:\r\n```\r\nforeach (garment, FilterByAttribute(ScopeInventory(), \"worn\", true)) {\r\n  if (HasAttribute (garment, \"passive\")) {\r\n    if (DictionaryContains (garment.passive, \"lifesteal\")) {\r\n      player.health = player.health + damage\r\n    }\r\n  }\r\n}\r\n```\r\n(just as an example. The details will depend on how you're handling combat)\r\n\r\nUsing a dictionary rather than a list can mean that you can give it a value, which some passive abilities might need. (For example, if a ring gives you an elemental resistance, you could use the value to store which element).",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>How do I get it to increase by more than 1?</p>\n</blockquote>\n<p>You can enter something like <code>strength+4</code> in that field. Or <code>strength+2;speed-1</code> if you want to affect multiple attributes.</p>\n<blockquote>\n<p>Also, how do I give equipment passives?<br>\nFor example: lifesteal all damage dealt</p>\n</blockquote>\n<p>In the script that handles the player dealing damage to something else, you would have to check if they're wearing an item with that attribute, and handle it appropriately.</p>\n<p>I'd probably implement it by creating a dictionary of different passive abilities. Your damage-dealing script can do something like:</p>\n<pre><code>foreach (garment, FilterByAttribute(ScopeInventory(), \"worn\", true)) {\n  if (HasAttribute (garment, \"passive\")) {\n    if (DictionaryContains (garment.passive, \"lifesteal\")) {\n      player.health = player.health + damage\n    }\n  }\n}\n</code></pre>\n<p>(just as an example. The details will depend on how you're handling combat)</p>\n<p>Using a dictionary rather than a list can mean that you can give it a value, which some passive abilities might need. (For example, if a ring gives you an elemental resistance, you could use the value to store which element).</p>\n\n",
      "PostDate": "2020-04-24T22:12:52.8935002Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "19679d88-b6ed-47be-9b0d-275f52496cde",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Using a dictionary rather than a list can mean that you can give it a value, which some passive abilities might need. (For example, if a ring gives you an elemental resistance, you could use the value to store which element).\r\n\r\nMrangel , as soon as you mentioned the dictionary, I was lost.  Could you give an example of what you mean by:\r\n> if a ring gives you an elemental resistance, <b>you could use the value to store which element?\r\n\r\nWhy is it necessary to use a dictionary? \r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Using a dictionary rather than a list can mean that you can give it a value, which some passive abilities might need. (For example, if a ring gives you an elemental resistance, you could use the value to store which element).</p>\n</blockquote>\n<p>Mrangel , as soon as you mentioned the dictionary, I was lost.  Could you give an example of what you mean by:</p>\n<blockquote>\n<p>if a ring gives you an elemental resistance, <b>you could use the value to store which element?</b></p><b>\n</b></blockquote><b>\n<p>Why is it necessary to use a dictionary?</p>\n\n</b>",
      "PostDate": "2020-04-25T07:17:59.1529147Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
