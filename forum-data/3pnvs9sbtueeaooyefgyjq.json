{
  "Topic": {
    "TopicId": "3pnvs9sbtueeaooyefgyjq",
    "ForumId": "10",
    "Title": "[SOLVED] Clear specific text strings?",
    "LastUpdated": "2016-12-22T10:51:43.1958514Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "4c2f84f1-e0d6-4cee-acb0-1a473aa8d914",
      "UserId": 208856,
      "Username": "Groctel",
      "AvatarUrl": "http://i.imgur.com/hoKlmU5b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I want my game to delete some specific lines and overwrite them right after. Clearing the screen is not an option, because that would mean entering new rooms to simulate that overwriting and breaking some scripts running on the background :(\r\n\r\nI'll show you a quick example of what I want:\r\n\r\n```\r\nmsg (\"Please login to start:\")\r\nmsg (\"<br>\")\r\nmsg (\"U S E R N A M E :\")\r\nget input {\r\n// check input and see if it is correct goes here, no problem with that\r\n}\r\n// mysterious script that deletes the text shown when 'msg (\"U S E R N A M E :\") was executed goes here, this is what I need and don't know how to do\r\nmsg (\"P A S S W O R D :\")\r\n// the password msg needs to go at the same line username did\r\n```\r\nI think I explained it more or less well, but tell me if you have any problems understanding ^^",
      "EditableFormat": "markdown",
      "HTML": "<p>I want my game to delete some specific lines and overwrite them right after. Clearing the screen is not an option, because that would mean entering new rooms to simulate that overwriting and breaking some scripts running on the background :(</p>\n<p>I'll show you a quick example of what I want:</p>\n<pre><code>msg (\"Please login to start:\")\nmsg (\"&lt;br&gt;\")\nmsg (\"U S E R N A M E :\")\nget input {\n// check input and see if it is correct goes here, no problem with that\n}\n// mysterious script that deletes the text shown when 'msg (\"U S E R N A M E :\") was executed goes here, this is what I need and don't know how to do\nmsg (\"P A S S W O R D :\")\n// the password msg needs to go at the same line username did\n</code></pre>\n<p>I think I explained it more or less well, but tell me if you have any problems understanding ^^</p>\n\n",
      "PostDate": "2016-12-22T10:51:43.1958514Z",
      "LastEditDate": "2016-12-27T17:42:14.9511877Z"
    },
    {
      "PostId": "99d54baa-0362-47e6-b82f-8a0c893606ba",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm probably no understanding what you want... but there's:\r\n\r\nClearScreen ( http://docs.textadventures.co.uk/quest/functions/corelibrary/clearscreen.html )\r\n\r\n(or, did you want to delete specific lines: current, above, or below? I'm not sure if or how this would/could be done in quest)\r\n\r\nand then you can concatenate, if you want username+password to all be on same line:\r\n\r\n(adjust it as you want, as I've no idea what you want, lol)\r\n\r\n(I just chose to use the 'game' Game Object for the Object, but you can use whatever Object, having whatever String Attribute, you want)\r\n\r\n```\r\nmsg (\"Please login to start:<br>U S E R N A M E :\")\r\nget input {\r\n  game.username_string_attribute = result\r\n  if (game.username_string_attribute = \"WHATEVER\") {\r\n    ClearScreen\r\n    msg (\"U S E R N A M E : \" + game.username_string_sttribute + \", P A S S W O R D : \")\r\n    get input {\r\n      game.password_string_attribute = result\r\n      if (game.password_string_attribute = \"WHATEVER\") {\r\n        ClearScreen\r\n        msg (\"U S E R N A M E : \" + game.username_string_attribute + \", P A S S W O R D : \" + game.password_string_attribute + \"<BR>Logging in, please wait...\")\r\n        // whatever you want to do now...\r\n      } else {\r\n        msg (\"Wrong input, try again.\")\r\n        wait {\r\n          ClearScreen\r\n          // loop/call/do this scripting block again\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    msg (\"Wrong input, try again.\")\r\n    wait {\r\n      ClearScreen\r\n      // loop/call/do this scripting block again\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n---------------\r\n\r\nif you want to see some examples, or at least ideas on things, you can take a look at this:\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/4988/character-creation-crude-code-and-sample-game",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm probably no understanding what you want... but there's:</p>\n<p>ClearScreen ( http://docs.textadventures.co.uk/quest/functions/corelibrary/clearscreen.html )</p>\n<p>(or, did you want to delete specific lines: current, above, or below? I'm not sure if or how this would/could be done in quest)</p>\n<p>and then you can concatenate, if you want username+password to all be on same line:</p>\n<p>(adjust it as you want, as I've no idea what you want, lol)</p>\n<p>(I just chose to use the 'game' Game Object for the Object, but you can use whatever Object, having whatever String Attribute, you want)</p>\n<pre><code>msg (\"Please login to start:&lt;br&gt;U S E R N A M E :\")\nget input {\n  game.username_string_attribute = result\n  if (game.username_string_attribute = \"WHATEVER\") {\n    ClearScreen\n    msg (\"U S E R N A M E : \" + game.username_string_sttribute + \", P A S S W O R D : \")\n    get input {\n      game.password_string_attribute = result\n      if (game.password_string_attribute = \"WHATEVER\") {\n        ClearScreen\n        msg (\"U S E R N A M E : \" + game.username_string_attribute + \", P A S S W O R D : \" + game.password_string_attribute + \"&lt;BR&gt;Logging in, please wait...\")\n        // whatever you want to do now...\n      } else {\n        msg (\"Wrong input, try again.\")\n        wait {\n          ClearScreen\n          // loop/call/do this scripting block again\n        }\n      }\n    }\n  } else {\n    msg (\"Wrong input, try again.\")\n    wait {\n      ClearScreen\n      // loop/call/do this scripting block again\n    }\n  }\n}\n</code></pre>\n<hr>\n<p>if you want to see some examples, or at least ideas on things, you can take a look at this:</p>\n<p>http://textadventures.co.uk/forum/samples/topic/4988/character-creation-crude-code-and-sample-game</p>\n\n",
      "PostDate": "2016-12-22T16:00:10.3861206Z",
      "LastEditDate": "2016-12-22T16:07:46.4372444Z"
    },
    {
      "PostId": "b9f35b84-9abb-4d6d-8e89-2f1587066637",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This might work:\r\n\r\n```\r\n\t\tmsg (\"Please login to start:\")\r\n\t\tsection = StartNewOutputSection()\r\n\t\tmsg (\"U S E R N A M E :\")\r\n\t\tEndOutputSection(section)\r\n\t\tget input {\r\n\t\t\tHideOutputSection(section)\r\n\t\t\tname = result\r\n\t\t\tsection = StartNewOutputSection()\r\n\t\t\tmsg (\"P A S S W O R D :\")\r\n\t\t\tEndOutputSection(section)\r\n\t\t\tget input {\r\n\t\t\t\tHideOutputSection(section)\r\n\t\t\t\tpassword = result\r\n\t\t\t}\r\n\t\t}\r\n```\r\nIf you want more advanced control, you can output actual HTML (divs with IDs, etc), and then use jquery JavaScript commands to style, hide, animate, etc them.",
      "EditableFormat": "markdown",
      "HTML": "<p>This might work:</p>\n<pre><code>\t\tmsg (\"Please login to start:\")\n\t\tsection = StartNewOutputSection()\n\t\tmsg (\"U S E R N A M E :\")\n\t\tEndOutputSection(section)\n\t\tget input {\n\t\t\tHideOutputSection(section)\n\t\t\tname = result\n\t\t\tsection = StartNewOutputSection()\n\t\t\tmsg (\"P A S S W O R D :\")\n\t\t\tEndOutputSection(section)\n\t\t\tget input {\n\t\t\t\tHideOutputSection(section)\n\t\t\t\tpassword = result\n\t\t\t}\n\t\t}\n</code></pre>\n<p>If you want more advanced control, you can output actual HTML (divs with IDs, etc), and then use jquery JavaScript commands to style, hide, animate, etc them.</p>\n\n",
      "PostDate": "2016-12-22T21:04:20.3865732Z",
      "LastEditDate": "2016-12-22T21:06:37.1870458Z"
    },
    {
      "PostId": "ced20dbb-33b7-4eed-b7d2-0c306a542036",
      "UserId": 208856,
      "Username": "Groctel",
      "AvatarUrl": "http://i.imgur.com/hoKlmU5b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi! Sorry for the late response.\r\n\r\nI may be a bit (or too) perfectionist with my code and how the \"visuals\" are rendered in the screen. I know that the feature I want to add is very hard and specific, so don't worry :p\r\n\r\nStill, thank you very much for your help... and for that beautiful  character creation system I will use in the future, crediting you, of course!\r\n\r\nI will do some research on js and notify you if I find a way to do exactly what I want!",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi! Sorry for the late response.</p>\n<p>I may be a bit (or too) perfectionist with my code and how the \"visuals\" are rendered in the screen. I know that the feature I want to add is very hard and specific, so don't worry :p</p>\n<p>Still, thank you very much for your help... and for that beautiful  character creation system I will use in the future, crediting you, of course!</p>\n<p>I will do some research on js and notify you if I find a way to do exactly what I want!</p>\n\n",
      "PostDate": "2016-12-23T10:06:41.5437487Z",
      "LastEditDate": null
    },
    {
      "PostId": "6a0fadc2-2fc2-4286-9451-b4881df834ba",
      "UserId": 208856,
      "Username": "Groctel",
      "AvatarUrl": "http://i.imgur.com/hoKlmU5b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Jay, we replied at the same time!\r\n\r\nI'm going to try that. Thanks ^^/",
      "EditableFormat": "markdown",
      "HTML": "<p>Jay, we replied at the same time!</p>\n<p>I'm going to try that. Thanks ^^/</p>\n\n",
      "PostDate": "2016-12-23T10:07:48.542521Z",
      "LastEditDate": null
    },
    {
      "PostId": "3ef25ae1-fd07-4b48-9b9c-394a83e6dda6",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm a bit of perfectionist myself. Not that I ever achieve perfection, mind you, but I have no problem spending time on the little details that add up to a larger impression. Keep pushing for your vision. :) We'll help make it happen.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm a bit of perfectionist myself. Not that I ever achieve perfection, mind you, but I have no problem spending time on the little details that add up to a larger impression. Keep pushing for your vision. :) We'll help make it happen.</p>\n\n",
      "PostDate": "2016-12-23T12:29:15.1468871Z",
      "LastEditDate": null
    },
    {
      "PostId": "7e833c10-8d8f-47e9-9d8f-8ba206fa9298",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the character creation code is old, for some reason during that time, it never occurred to me (my mind failed) that I can use only a few dynamic Functions via parameters to handle all of those tons of redundent Functions you see in that link to my old character creation code. I've improved upon it, but am still working on trying to make it better (wanna-be perfectionist too, argh). But, I still like linking to it, as the first Functions give some good examples of various things you can do with the handling/manipulation of input, as at the very least ideas for people, and the redundent Functions gives examples of what (and how) you can do with List and/or Dictionary Attributes. Right now, I'm trying to use Objects (Object Oriented Design) instead of Functions/scripting, as at the very least, they're more organized and easier to edit/scale, though this Object Oriented Design is still quite a bit foreign to my brain. Also, my brain just has a hard time with so many files/Objects/Object Types, the most basic aspect of Object Oriented design, lol-argh.\r\n\r\n---------\r\n\r\n@ anyone who might be able to answer this in terms of generally only of course, if that's even possible, of course:\r\n\r\nIs using Objects and their Script (+ Delegates) Attributes better than using Functions with Quest's programming? Do Objects+Script Attributes+Delegates require more overhead (activation records/memory/space/operations/etc) than do Functions, or is it vice versa, and if so, is it significant, or is the organizational and editibility/scalability of Objects+Scripts+Delegates outweigh whatever more overhead they have if they do, over using Functions? Also, how about in terms of recursion, are Objects+Scripts+Delegates worse recursion'ing or Functions, or are they they same? I still need to wrap my head around understanding and successfully coding/doing Data Management structures/systems (trees, dictionaries, heaps, queues, maps/whatever it's called, etc), so that's completely out of the question at the moment, though if/when I finally learn this stuff, it'll greatly make the coding more efficient with handling Object Ortiented Design. But for now, I'll likely have to use basic 'helper-like' scripting/Functions for handling the actions/stuff to do with the Objects or from one action/Object to the next, etc...\r\n\r\nAs there's quest's surface-user-level programming, on top of quest's actual underneath programming (I mean it's source/developmental code that makes quest work/be quest: connects quest's surface code with the computer system code), on top of the computer system code, as well.",
      "EditableFormat": "markdown",
      "HTML": "<p>the character creation code is old, for some reason during that time, it never occurred to me (my mind failed) that I can use only a few dynamic Functions via parameters to handle all of those tons of redundent Functions you see in that link to my old character creation code. I've improved upon it, but am still working on trying to make it better (wanna-be perfectionist too, argh). But, I still like linking to it, as the first Functions give some good examples of various things you can do with the handling/manipulation of input, as at the very least ideas for people, and the redundent Functions gives examples of what (and how) you can do with List and/or Dictionary Attributes. Right now, I'm trying to use Objects (Object Oriented Design) instead of Functions/scripting, as at the very least, they're more organized and easier to edit/scale, though this Object Oriented Design is still quite a bit foreign to my brain. Also, my brain just has a hard time with so many files/Objects/Object Types, the most basic aspect of Object Oriented design, lol-argh.</p>\n<hr>\n<p>@ anyone who might be able to answer this in terms of generally only of course, if that's even possible, of course:</p>\n<p>Is using Objects and their Script (+ Delegates) Attributes better than using Functions with Quest's programming? Do Objects+Script Attributes+Delegates require more overhead (activation records/memory/space/operations/etc) than do Functions, or is it vice versa, and if so, is it significant, or is the organizational and editibility/scalability of Objects+Scripts+Delegates outweigh whatever more overhead they have if they do, over using Functions? Also, how about in terms of recursion, are Objects+Scripts+Delegates worse recursion'ing or Functions, or are they they same? I still need to wrap my head around understanding and successfully coding/doing Data Management structures/systems (trees, dictionaries, heaps, queues, maps/whatever it's called, etc), so that's completely out of the question at the moment, though if/when I finally learn this stuff, it'll greatly make the coding more efficient with handling Object Ortiented Design. But for now, I'll likely have to use basic 'helper-like' scripting/Functions for handling the actions/stuff to do with the Objects or from one action/Object to the next, etc...</p>\n<p>As there's quest's surface-user-level programming, on top of quest's actual underneath programming (I mean it's source/developmental code that makes quest work/be quest: connects quest's surface code with the computer system code), on top of the computer system code, as well.</p>\n\n",
      "PostDate": "2016-12-23T13:39:51.8921694Z",
      "LastEditDate": "2016-12-23T13:49:34.2307926Z"
    },
    {
      "PostId": "81a9c390-c0db-4cea-8056-4a11c0b66411",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "As with most things, you can't generally say one is better than the other. If they could both be used for the same thing and one was clearly better than the other, then there would be no need to implement both.\r\n\r\nFunctions are simple bits of functionality, with an input and output (though, sadly, they can have side effects by reaching out to global objects). If you just need some functionality, and you don't need to worry about state associated with the function, then a function is all you need.\r\n\r\nObjects encapsulate both functionality *and* data. A script attribute on an object is just a function (though the way they are invoked in Quest makes this less clear than a language like C++ of JavaScript, where the syntax is the same, just with a binding to an object (e.g. object->someFunction(a, b) ). Script attributes on objects are handy when you want to call the same function on different objects by the same name but have different behavior. (In computer programming parlance, this is called \"polymorphism\", where the same call on different objects has different behavior.)\r\n\r\nSo it comes down to what you want to do. Creating an object with a script attribute when all you need is a bit of functionality is overkill. Trying to use functions for functionality+data is possible (e.g. you can always pass in the object data you want to operate on), but I can't even think of way to create polymorphism without binding a function to an object somehow. And using \"if\" statements to simulate polymorphism (e.g. \"if it's object A, do this, else if it's object B do that, else...\") makes for tightly coupled, brittle code. \r\n\r\nI wouldn't even bother worrying about overhead unless you have a specific case where performance becomes a problem. The level of scripting that is typically done in a text adventure game isn't going to do much to tax a computer either way. (I ran into performance problems myself with the path finding code I wrote, but that's the only time I ever had that sort of problem.)\r\n\r\nI hope that helps!",
      "EditableFormat": "markdown",
      "HTML": "<p>As with most things, you can't generally say one is better than the other. If they could both be used for the same thing and one was clearly better than the other, then there would be no need to implement both.</p>\n<p>Functions are simple bits of functionality, with an input and output (though, sadly, they can have side effects by reaching out to global objects). If you just need some functionality, and you don't need to worry about state associated with the function, then a function is all you need.</p>\n<p>Objects encapsulate both functionality <em>and</em> data. A script attribute on an object is just a function (though the way they are invoked in Quest makes this less clear than a language like C++ of JavaScript, where the syntax is the same, just with a binding to an object (e.g. object-&gt;someFunction(a, b) ). Script attributes on objects are handy when you want to call the same function on different objects by the same name but have different behavior. (In computer programming parlance, this is called \"polymorphism\", where the same call on different objects has different behavior.)</p>\n<p>So it comes down to what you want to do. Creating an object with a script attribute when all you need is a bit of functionality is overkill. Trying to use functions for functionality+data is possible (e.g. you can always pass in the object data you want to operate on), but I can't even think of way to create polymorphism without binding a function to an object somehow. And using \"if\" statements to simulate polymorphism (e.g. \"if it's object A, do this, else if it's object B do that, else...\") makes for tightly coupled, brittle code.</p>\n<p>I wouldn't even bother worrying about overhead unless you have a specific case where performance becomes a problem. The level of scripting that is typically done in a text adventure game isn't going to do much to tax a computer either way. (I ran into performance problems myself with the path finding code I wrote, but that's the only time I ever had that sort of problem.)</p>\n<p>I hope that helps!</p>\n\n",
      "PostDate": "2016-12-23T16:24:45.3439781Z",
      "LastEditDate": null
    },
    {
      "PostId": "5dc6f18d-e74f-42f3-8759-e4680fcc0347",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "thanks Jay, I was just curious with quest's coding structure on these things as I'm getting into learning using Data Structures and design/operation efficiency of them (logorithmic base 2, logorithmic base N, Ns, N^2s, etc), I was wondering with quest if generally using Objects+Script Attributes+Delagates and trees/queues/etc vs scripting/Functions, if there was any clear differences, though I should be more aware, as, as you said, if there was a clearly better method, then there'd just be that method. And (now) obviously your point about if you only need an operation, then use Functions (+Parameters), if you need operations+data storage, then use Objects(+Script Attributes + Delegates).\r\n\r\n------------\r\n\r\nAnd in my classes we never covered (probably will get into it in more higher/advanced classes later on) in general the Activation Records (overhead/etc) of Functions vs that of Objects, so tried asking about it here, to just learn and understand a bit more on this type of stuff. Obviously, it depends on design/needs, but I was just trying to understand more of this aspect of programming in data management/limiting space/memory, and operational efficiencies.\r\n\r\n---------\r\n\r\nis there any differences in regards with recursion, are Object's Script Attributes+Delegates recursive usage the same as Function (+Parameters, of course) recursive usage?",
      "EditableFormat": "markdown",
      "HTML": "<p>thanks Jay, I was just curious with quest's coding structure on these things as I'm getting into learning using Data Structures and design/operation efficiency of them (logorithmic base 2, logorithmic base N, Ns, N^2s, etc), I was wondering with quest if generally using Objects+Script Attributes+Delagates and trees/queues/etc vs scripting/Functions, if there was any clear differences, though I should be more aware, as, as you said, if there was a clearly better method, then there'd just be that method. And (now) obviously your point about if you only need an operation, then use Functions (+Parameters), if you need operations+data storage, then use Objects(+Script Attributes + Delegates).</p>\n<hr>\n<p>And in my classes we never covered (probably will get into it in more higher/advanced classes later on) in general the Activation Records (overhead/etc) of Functions vs that of Objects, so tried asking about it here, to just learn and understand a bit more on this type of stuff. Obviously, it depends on design/needs, but I was just trying to understand more of this aspect of programming in data management/limiting space/memory, and operational efficiencies.</p>\n<hr>\n<p>is there any differences in regards with recursion, are Object's Script Attributes+Delegates recursive usage the same as Function (+Parameters, of course) recursive usage?</p>\n\n",
      "PostDate": "2016-12-24T08:46:15.9851911Z",
      "LastEditDate": "2016-12-24T08:48:10.9974399Z"
    },
    {
      "PostId": "af7e0c04-23a7-47a4-ba13-9887fb1d8114",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "As far as overhead goes, for a function, it has to look up the function by name in a global space. For the script of an object, assuming you have the object, it's just a name lookup in the attributes of the object. If you don't have the object yet, then you have to look up the object by name. However, unless you're doing high performance programming, I wouldn't worry about it. According to Donald Knuth, \"The real problem is that programmers have spent far too much time worrying about efficiency in the wrong places and at the wrong times; premature optimization is the root of all evil (or at least most of it) in programming.\" For what you're asking about, if there's a difference, it would be on the order of milliseconds or microseconds, which won't even be noticeable to a player. The only way you could know for sure would be to measure it. If you really wish to know, that's the only way to find out - write some code that executes a function call and then an object script call millions of times to make the time measurable, and then measure it!\r\n\r\nThere is no difference in how you do recursion with the two, beyond the differences involved in making the calls to begin with.",
      "EditableFormat": "markdown",
      "HTML": "<p>As far as overhead goes, for a function, it has to look up the function by name in a global space. For the script of an object, assuming you have the object, it's just a name lookup in the attributes of the object. If you don't have the object yet, then you have to look up the object by name. However, unless you're doing high performance programming, I wouldn't worry about it. According to Donald Knuth, \"The real problem is that programmers have spent far too much time worrying about efficiency in the wrong places and at the wrong times; premature optimization is the root of all evil (or at least most of it) in programming.\" For what you're asking about, if there's a difference, it would be on the order of milliseconds or microseconds, which won't even be noticeable to a player. The only way you could know for sure would be to measure it. If you really wish to know, that's the only way to find out - write some code that executes a function call and then an object script call millions of times to make the time measurable, and then measure it!</p>\n<p>There is no difference in how you do recursion with the two, beyond the differences involved in making the calls to begin with.</p>\n\n",
      "PostDate": "2016-12-24T10:39:51.9603245Z",
      "LastEditDate": null
    },
    {
      "PostId": "34e6a6d0-698c-4dc9-b38c-d38ea4c3124d",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "thanks jay. I know I'm asking a lot of generalized questions which don't have answers (generalized nor specific), but I'm doing so, just to try to understand more about the inner workings of programming. Though, I'm definately falling prey exactly what Donald Knuth is talking about laughs, but for me, it's about just trying to get a better sense/understanding of the inner workings that're going on, and not about the actual specific/definitiveness of the efficiencies/etc, just trying to learn the whats, hows, and whys, of stuff. So, thanks for answering these poor unanswerable questions of mine, your answers, are really helpful for me in understanding more about programming, though I still get a lot of it mixed up, but that'll come later when I really start to understand programming... hopefully, laughs (I'll probably still get a lot of stuff confused... knowing me... lol).\r\n\r\n--------\r\n\r\nI am aware that most of this is indeed in terms of nanoseconds (and that it's too generalized to give answers: as you mention, you need to actually have a high perforance stop watch and actually time the program/code execution), as we're not likely to be working with 'big data' or a really huge-complex program, nor with embedded/critical systems, where the inefficiences/memory/space do become noticeable and/or dire with many embedded/critcal systems and/or their limitations of memory/space (due to cost and/or actual physical space available for the hardware and/or whatever else), as it seems most people do software, and not hardware and/or embedded/critical systems, unless you're more into physical engineering and thus you're more interested in hardware/embeded systems and the archecture of computer/circuitry than just high level software programming.\r\n\r\nI am interested in efficiency, as my brain likes procedural, I find it fun trying to come up with the most efficient code I can, though I know it's not that hard to do so, meh. At least for now anyways, while I'm still trying to train my brain in more abstract thinking with OOP/OOD and Data Structures. Working with Assembly was a lot of fun for me. Though, my brain works more on the generalized/theoretical/big/macro outlook, than on specfic details / micro... not a good thing for being a programmer, I know... hopefully that'll eventually come with time, when I'm actually interested in actually clocking it, seeing if something is more or less effecient than other code designs. So that's why I'm still asking a lot of useless unanaswerable questions, I'm just trying to grasp stuff in the big/broad picture, which doesn't work with programming, but it helps me with my understanding of it.",
      "EditableFormat": "markdown",
      "HTML": "<p>thanks jay. I know I'm asking a lot of generalized questions which don't have answers (generalized nor specific), but I'm doing so, just to try to understand more about the inner workings of programming. Though, I'm definately falling prey exactly what Donald Knuth is talking about laughs, but for me, it's about just trying to get a better sense/understanding of the inner workings that're going on, and not about the actual specific/definitiveness of the efficiencies/etc, just trying to learn the whats, hows, and whys, of stuff. So, thanks for answering these poor unanswerable questions of mine, your answers, are really helpful for me in understanding more about programming, though I still get a lot of it mixed up, but that'll come later when I really start to understand programming... hopefully, laughs (I'll probably still get a lot of stuff confused... knowing me... lol).</p>\n<hr>\n<p>I am aware that most of this is indeed in terms of nanoseconds (and that it's too generalized to give answers: as you mention, you need to actually have a high perforance stop watch and actually time the program/code execution), as we're not likely to be working with 'big data' or a really huge-complex program, nor with embedded/critical systems, where the inefficiences/memory/space do become noticeable and/or dire with many embedded/critcal systems and/or their limitations of memory/space (due to cost and/or actual physical space available for the hardware and/or whatever else), as it seems most people do software, and not hardware and/or embedded/critical systems, unless you're more into physical engineering and thus you're more interested in hardware/embeded systems and the archecture of computer/circuitry than just high level software programming.</p>\n<p>I am interested in efficiency, as my brain likes procedural, I find it fun trying to come up with the most efficient code I can, though I know it's not that hard to do so, meh. At least for now anyways, while I'm still trying to train my brain in more abstract thinking with OOP/OOD and Data Structures. Working with Assembly was a lot of fun for me. Though, my brain works more on the generalized/theoretical/big/macro outlook, than on specfic details / micro... not a good thing for being a programmer, I know... hopefully that'll eventually come with time, when I'm actually interested in actually clocking it, seeing if something is more or less effecient than other code designs. So that's why I'm still asking a lot of useless unanaswerable questions, I'm just trying to grasp stuff in the big/broad picture, which doesn't work with programming, but it helps me with my understanding of it.</p>\n\n",
      "PostDate": "2016-12-25T14:26:43.0342415Z",
      "LastEditDate": "2016-12-25T14:48:58.6338425Z"
    },
    {
      "PostId": "356c28c5-acc9-4662-9645-e3b0799c546b",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The questions you ask aren't unanswerable. They're just not answerable in a theoretical way. If you truly are interested in writing efficient code, then the *only* way to do it is to actually measure the performance with different code and work out which is more efficient. This video is really interesting in terms of how you really need to understand how things work down to the CPU cache level (and how you have to measure to see what is going on) if you want to write the most optimal code: https://www.youtube.com/watch?v=WDIkqP4JbkE\r\n\r\nThe problem with worrying about efficiency too soon (in the absolute sense) is that the changes you have to make to code to really make it efficient often make the code worst in terms of readability and maintainability. And if the efficiency you're gaining is so minor in that it makes absolutely no difference to a user of your software, then you end up with code that's harder to work with for questionable gain. if you're doing it for fun, then by all mean, go for it! Just keep in mind that the only way to really improve code efficiency is to measure before and after.\r\n\r\nIn the case for the question you're asking - function call vs object script attribute call - if I were to say to you that a function call might be slightly more efficient than a script attribute call, then it would be a disservice to you: it still wouldn't justify using one over the other, as they serve different needs and designs. And trying to use functions when script attributes would give a better design might end up with worse performance, as you'd have to possibly use *more* code to implement - with performance hit - what you really need by trying to avoid a \"slower\" feature. That's again why you can't just look at A vs B. You need to look at the overall code and the implementation you need and measure it *in context* given the larger code picture. In that sense, being higher level will actually serve you better - write good code at the high level and then dive down to the micro level to optimize *where needed* once the code works. And if you want to know how different kinds of code perform... measure! Then you'll know. :)\r\n\r\nYour questions are all answerable. You just might have to work for it.",
      "EditableFormat": "markdown",
      "HTML": "<p>The questions you ask aren't unanswerable. They're just not answerable in a theoretical way. If you truly are interested in writing efficient code, then the <em>only</em> way to do it is to actually measure the performance with different code and work out which is more efficient. This video is really interesting in terms of how you really need to understand how things work down to the CPU cache level (and how you have to measure to see what is going on) if you want to write the most optimal code: https://www.youtube.com/watch?v=WDIkqP4JbkE</p>\n<p>The problem with worrying about efficiency too soon (in the absolute sense) is that the changes you have to make to code to really make it efficient often make the code worst in terms of readability and maintainability. And if the efficiency you're gaining is so minor in that it makes absolutely no difference to a user of your software, then you end up with code that's harder to work with for questionable gain. if you're doing it for fun, then by all mean, go for it! Just keep in mind that the only way to really improve code efficiency is to measure before and after.</p>\n<p>In the case for the question you're asking - function call vs object script attribute call - if I were to say to you that a function call might be slightly more efficient than a script attribute call, then it would be a disservice to you: it still wouldn't justify using one over the other, as they serve different needs and designs. And trying to use functions when script attributes would give a better design might end up with worse performance, as you'd have to possibly use <em>more</em> code to implement - with performance hit - what you really need by trying to avoid a \"slower\" feature. That's again why you can't just look at A vs B. You need to look at the overall code and the implementation you need and measure it <em>in context</em> given the larger code picture. In that sense, being higher level will actually serve you better - write good code at the high level and then dive down to the micro level to optimize <em>where needed</em> once the code works. And if you want to know how different kinds of code perform... measure! Then you'll know. :)</p>\n<p>Your questions are all answerable. You just might have to work for it.</p>\n\n",
      "PostDate": "2016-12-26T12:42:43.1869235Z",
      "LastEditDate": "2016-12-26T12:48:34.4811819Z"
    },
    {
      "PostId": "eebaebc2-f93a-464a-9694-e843cae45501",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "yea, design, is a huge factor, as well as \"developer's time/effort\" as my prof says, is a huge factor too, aka \"it's not worth the effort/time you'd have to put in compared to the reward/achievement of whatever you might gain: efficiency/performance/limiting memory usage/great organized efficient scalable/editable design/etc\" of yourself (completion speed/minimal effort, IS just as important as performance/results/etc). I was just indeed asking in the theoretical way, ignoring these other vital factors in actual practice (design, \"developer's time/effort\", etc).\r\n\r\nP.S.\r\n\r\nthanks for the link/vid !!! (watching it right now, lol)\r\n\r\nP.S.S.\r\n\r\nlots of videos... I'm going to be busy for quite a while, lol. I got a lot of videos to watch! :D\r\n\r\nagain thanks, wow great resource, all these tech conference/seminar videos! thank you for them!",
      "EditableFormat": "markdown",
      "HTML": "<p>yea, design, is a huge factor, as well as \"developer's time/effort\" as my prof says, is a huge factor too, aka \"it's not worth the effort/time you'd have to put in compared to the reward/achievement of whatever you might gain: efficiency/performance/limiting memory usage/great organized efficient scalable/editable design/etc\" of yourself (completion speed/minimal effort, IS just as important as performance/results/etc). I was just indeed asking in the theoretical way, ignoring these other vital factors in actual practice (design, \"developer's time/effort\", etc).</p>\n<p>P.S.</p>\n<p>thanks for the link/vid !!! (watching it right now, lol)</p>\n<p>P.S.S.</p>\n<p>lots of videos... I'm going to be busy for quite a while, lol. I got a lot of videos to watch! :D</p>\n<p>again thanks, wow great resource, all these tech conference/seminar videos! thank you for them!</p>\n\n",
      "PostDate": "2016-12-26T17:07:33.9777294Z",
      "LastEditDate": "2016-12-26T17:16:52.1662419Z"
    },
    {
      "PostId": "ade77cd3-31b5-45cf-9926-89b09f0d1e69",
      "UserId": 208856,
      "Username": "Groctel",
      "AvatarUrl": "http://i.imgur.com/hoKlmU5b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello and merry xmas, happy holidays or any way you wish to express this beautiful winter joy <(￣︶￣)>\r\n\r\nAgain, sorry for the super late reply, my real life presence is more important to my family than my questing time :p\r\n\r\nI tried Jay's code and it **almost** worked! AAAGH it is too close but yet far from done! My problem is that it does work, but not when the indentation changes D:\r\n\r\nI tried to use it on my main menu screen to show two sentences before the menu and it gave me a compilation error.\r\n\r\nFor example, this does not work:\r\n```\r\nsection = StartNewOutputSection()\r\nmsg (\"<br><br>\")\r\nPrintCentered (\"<b>Inspired by We Lost The Sea's work<b>\")\r\nmsg (\"<br><br><br>\")\r\nEndOutputSection (section)\r\nSetTimeout (3) {\r\n  HideOutputSection (section)\r\n  section = StartNewOutputSection()\r\n  msg (\"<br><br>\")\r\n  PrintCentered (\"<b>Made with Quest<b>\")\r\n  msg (\"<br><br><br>\")\r\n  EndOutputSection (section)\r\n  SetTimeout (3) {\r\n    HideOutputSection (section)\r\n    PrintCentered (\"Please type the option you wish to proceed with.<br/><br/><br/>- <b>New game</b> - <br/>- <b>Restore game</b> -<br/><br/><br/>\")\r\n  }\r\n}\r\n```\r\n\r\nBut this one does work, at least for instantly showing and hiding the first text and showing the second one three seconds later:\r\n```\r\nsection = StartNewOutputSection()\r\nmsg (\"<br><br>\")\r\nPrintCentered (\"<b>Inspired by We Lost The Sea's work<b>\")\r\nmsg (\"<br><br><br>\")\r\nEndOutputSection (section)\r\nHideOutputSection (section)\r\nSetTimeout (3) {\r\n  section = StartNewOutputSection()\r\n  msg (\"<br><br>\")\r\n  PrintCentered (\"<b>Made with Quest<b>\")\r\n  msg (\"<br><br><br>\")\r\n  EndOutputSection (section)\r\n  SetTimeout (3) {\r\n    HideOutputSection (section)\r\n    PrintCentered (\"Please type the option you wish to proceed with.<br/><br/><br/>- <b>New game</b> - <br/>- <b>Restore game</b> -<br/><br/><br/>\")\r\n  }\r\n}\r\n```\r\nMy deduction is that, when the indentation is changed and the _HideOutputSection_ function is called inside a subscript (either _wait_ and _get input_ are described as 'wait/get input and run a script) Quest fails to recognize the _section_ variable, since it was declared in another script. Also, _HideOutputSection_ makes the text move when fading, and I need a non-fading, non-moving way to make it disappear xD\r\n\r\nAny ideas?\r\n\r\nBtw, thank both of you very much for your great help with this problem. I admire how you keep the forums alive with love for IF games. Is there a place, aside from the Quest documentation, where I can find more information about functions and code to use while developing?\r\n\r\nThank you very much ^^\r\n\r\nPS: I just saved your video in my watch later tab. I'll check it when I'm on wifi :p",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello and merry xmas, happy holidays or any way you wish to express this beautiful winter joy &lt;(￣︶￣)&gt;</p>\n<p>Again, sorry for the super late reply, my real life presence is more important to my family than my questing time :p</p>\n<p>I tried Jay's code and it <strong>almost</strong> worked! AAAGH it is too close but yet far from done! My problem is that it does work, but not when the indentation changes D:</p>\n<p>I tried to use it on my main menu screen to show two sentences before the menu and it gave me a compilation error.</p>\n<p>For example, this does not work:</p>\n<pre><code>section = StartNewOutputSection()\nmsg (\"&lt;br&gt;&lt;br&gt;\")\nPrintCentered (\"&lt;b&gt;Inspired by We Lost The Sea's work&lt;b&gt;\")\nmsg (\"&lt;br&gt;&lt;br&gt;&lt;br&gt;\")\nEndOutputSection (section)\nSetTimeout (3) {\n  HideOutputSection (section)\n  section = StartNewOutputSection()\n  msg (\"&lt;br&gt;&lt;br&gt;\")\n  PrintCentered (\"&lt;b&gt;Made with Quest&lt;b&gt;\")\n  msg (\"&lt;br&gt;&lt;br&gt;&lt;br&gt;\")\n  EndOutputSection (section)\n  SetTimeout (3) {\n    HideOutputSection (section)\n    PrintCentered (\"Please type the option you wish to proceed with.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;- &lt;b&gt;New game&lt;/b&gt; - &lt;br/&gt;- &lt;b&gt;Restore game&lt;/b&gt; -&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;\")\n  }\n}\n</code></pre>\n<p>But this one does work, at least for instantly showing and hiding the first text and showing the second one three seconds later:</p>\n<pre><code>section = StartNewOutputSection()\nmsg (\"&lt;br&gt;&lt;br&gt;\")\nPrintCentered (\"&lt;b&gt;Inspired by We Lost The Sea's work&lt;b&gt;\")\nmsg (\"&lt;br&gt;&lt;br&gt;&lt;br&gt;\")\nEndOutputSection (section)\nHideOutputSection (section)\nSetTimeout (3) {\n  section = StartNewOutputSection()\n  msg (\"&lt;br&gt;&lt;br&gt;\")\n  PrintCentered (\"&lt;b&gt;Made with Quest&lt;b&gt;\")\n  msg (\"&lt;br&gt;&lt;br&gt;&lt;br&gt;\")\n  EndOutputSection (section)\n  SetTimeout (3) {\n    HideOutputSection (section)\n    PrintCentered (\"Please type the option you wish to proceed with.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;- &lt;b&gt;New game&lt;/b&gt; - &lt;br/&gt;- &lt;b&gt;Restore game&lt;/b&gt; -&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;\")\n  }\n}\n</code></pre>\n<p>My deduction is that, when the indentation is changed and the <em>HideOutputSection</em> function is called inside a subscript (either <em>wait</em> and <em>get input</em> are described as 'wait/get input and run a script) Quest fails to recognize the <em>section</em> variable, since it was declared in another script. Also, <em>HideOutputSection</em> makes the text move when fading, and I need a non-fading, non-moving way to make it disappear xD</p>\n<p>Any ideas?</p>\n<p>Btw, thank both of you very much for your great help with this problem. I admire how you keep the forums alive with love for IF games. Is there a place, aside from the Quest documentation, where I can find more information about functions and code to use while developing?</p>\n<p>Thank you very much ^^</p>\n<p>PS: I just saved your video in my watch later tab. I'll check it when I'm on wifi :p</p>\n\n",
      "PostDate": "2016-12-27T09:01:07.4686607Z",
      "LastEditDate": null
    },
    {
      "PostId": "853b86b1-df07-471b-8c2e-b7219ec0afc4",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't think so, aside from the forums' (this one and the 'library and code samples' forum) posts/threads and scouring through the quest code/files.",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't think so, aside from the forums' (this one and the 'library and code samples' forum) posts/threads and scouring through the quest code/files.</p>\n\n",
      "PostDate": "2016-12-27T09:06:38.0591947Z",
      "LastEditDate": "2016-12-27T09:07:21.5764712Z"
    },
    {
      "PostId": "89194c87-c7dd-42c3-ac7d-9188a7d3f40b",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You have identified the problem, which is that nested scripts don't *generally* have access to the variables used in the outer script scope (this is called a \"closure\", and, sadly, it doesn't work like that in Quest). I used \"generally\" because some *do* preserve the enclosing variables (e.g. \"get input\" and, I think, \"wait\". Since you used \"get input\" in your question, that was the one I tested).\r\n\r\nThe solution, though a bit ugly, is to store the section variable as the attribute of an object. For example, if you use \"game.section\" or \"player.section\" instead of just plain \"section\" in the code, then the value will be stored and accessed globally in all scripts. It does mean you need to attach it to some object (you can decide which - it might even make sense to store it as an attribute of the room the player is in), and you have to be careful about multiple scripts using the same variable for different purposes if you use the technique a lot. But that might not be that big of an issue in this case. ",
      "EditableFormat": "markdown",
      "HTML": "<p>You have identified the problem, which is that nested scripts don't <em>generally</em> have access to the variables used in the outer script scope (this is called a \"closure\", and, sadly, it doesn't work like that in Quest). I used \"generally\" because some <em>do</em> preserve the enclosing variables (e.g. \"get input\" and, I think, \"wait\". Since you used \"get input\" in your question, that was the one I tested).</p>\n<p>The solution, though a bit ugly, is to store the section variable as the attribute of an object. For example, if you use \"game.section\" or \"player.section\" instead of just plain \"section\" in the code, then the value will be stored and accessed globally in all scripts. It does mean you need to attach it to some object (you can decide which - it might even make sense to store it as an attribute of the room the player is in), and you have to be careful about multiple scripts using the same variable for different purposes if you use the technique a lot. But that might not be that big of an issue in this case.</p>\n\n",
      "PostDate": "2016-12-27T09:21:16.6079622Z",
      "LastEditDate": "2016-12-27T09:21:48.6074724Z"
    },
    {
      "PostId": "596c3efd-d61c-4aa3-9cef-ba02d6a034fc",
      "UserId": 208856,
      "Username": "Groctel",
      "AvatarUrl": "http://i.imgur.com/hoKlmU5b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Jay, that's brilliant! I'll test it when I get on the pc and will tell you how it works. Thank you very much ^^\r\n\r\nAlso, I'll lurk the forums and games for more docs. Thank you too hegemonkhan :)",
      "EditableFormat": "markdown",
      "HTML": "<p>Jay, that's brilliant! I'll test it when I get on the pc and will tell you how it works. Thank you very much ^^</p>\n<p>Also, I'll lurk the forums and games for more docs. Thank you too hegemonkhan :)</p>\n\n",
      "PostDate": "2016-12-27T10:12:03.4320481Z",
      "LastEditDate": null
    },
    {
      "PostId": "47f3bcb4-69b0-4983-8329-ffeea573eec0",
      "UserId": 208856,
      "Username": "Groctel",
      "AvatarUrl": "http://i.imgur.com/hoKlmU5b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It works!!!!!!!\r\n\r\nThe only little thing that it needs to be perfect is a way to have the text disappear with no movement and no fade. Any ideas on how to do this?",
      "EditableFormat": "markdown",
      "HTML": "<p>It works!!!!!!!</p>\n<p>The only little thing that it needs to be perfect is a way to have the text disappear with no movement and no fade. Any ideas on how to do this?</p>\n\n",
      "PostDate": "2016-12-27T11:50:55.2847215Z",
      "LastEditDate": null
    },
    {
      "PostId": "7b6a097a-ca2f-40e9-bb0c-c50899d5d64f",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Drop this function into your game:\r\n\r\n```\r\n  <function name=\"HideOutputSectionNow\" parameters=\"name\">\r\n\tJS.eval(\"$('.\" + name+\"').hide(0, function () { $(this).remove(); });\")\r\n  </function>\r\n```\r\nand then use HideOutputSectionNow instead of HideOutputSection.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Drop this function into your game:</p>\n<pre><code>  &lt;function name=\"HideOutputSectionNow\" parameters=\"name\"&gt;\n\tJS.eval(\"$('.\" + name+\"').hide(0, function () { $(this).remove(); });\")\n  &lt;/function&gt;\n</code></pre>\n<p>and then use HideOutputSectionNow instead of HideOutputSection.</p>\n\n",
      "PostDate": "2016-12-27T14:20:41.9801155Z",
      "LastEditDate": null
    },
    {
      "PostId": "61db4459-c4a5-4193-8843-703de303f011",
      "UserId": 208856,
      "Username": "Groctel",
      "AvatarUrl": "http://i.imgur.com/hoKlmU5b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Mmmmm, sorry if I am the most illiterate coder here, but I cannot make it work. When I place the function, I get an error saying **Error running script: Too many parameters passed to HideOutputSectionNow function - 1 passed, but only 0 expected**, but if I delete the parameters I get **Error running script: Error compiling expression '\"$('.\" + name+\"').hide(0, function () { $(this).remove(); });\"': Unknown object or variable 'name'**.\r\n\r\nI'm like 100% sure I have to replace the ```name```,  ```function ()``` and ```this``` with my own code, but I'm still too nooby to do it ;_;\r\n\r\nIf you can help me with this last piece I will immediately post here the full result so you can see it ^^",
      "EditableFormat": "markdown",
      "HTML": "<p>Mmmmm, sorry if I am the most illiterate coder here, but I cannot make it work. When I place the function, I get an error saying <strong>Error running script: Too many parameters passed to HideOutputSectionNow function - 1 passed, but only 0 expected</strong>, but if I delete the parameters I get <strong>Error running script: Error compiling expression '\"$('.\" + name+\"').hide(0, function () { $(this).remove(); });\"': Unknown object or variable 'name'</strong>.</p>\n<p>I'm like 100% sure I have to replace the <code>name</code>,  <code>function ()</code> and <code>this</code> with my own code, but I'm still too nooby to do it ;_;</p>\n<p>If you can help me with this last piece I will immediately post here the full result so you can see it ^^</p>\n\n",
      "PostDate": "2016-12-27T14:42:19.1041388Z",
      "LastEditDate": null
    },
    {
      "PostId": "698c7bea-4e87-4f32-8d6d-c4517ad51f0f",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You shouldn't need to replace anything in the function. Just be sure to add the code in the main game body (e.g. insert it right before the closing \"&lt;/aslx&gt;\" tag at the bottom, or after the closing \"&lt;/game&gt;\" tag).\r\n\r\nAre you using the Windows desktop version or the online editor?",
      "EditableFormat": "markdown",
      "HTML": "<p>You shouldn't need to replace anything in the function. Just be sure to add the code in the main game body (e.g. insert it right before the closing \"&lt;/aslx&gt;\" tag at the bottom, or after the closing \"&lt;/game&gt;\" tag).</p>\n<p>Are you using the Windows desktop version or the online editor?</p>\n\n",
      "PostDate": "2016-12-27T14:48:10.0128894Z",
      "LastEditDate": "2016-12-27T14:49:03.5030379Z"
    },
    {
      "PostId": "8bb090c0-a19c-49cc-96d4-af2d17a87eef",
      "UserId": 208856,
      "Username": "Groctel",
      "AvatarUrl": "http://i.imgur.com/hoKlmU5b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm using the online editor. I know it's heresy, but it lets me work on the game while on my cell xD\r\n\r\nStill, I test all this things on the Windows desktop first, then copy them to the web.\r\n\r\nI'm going to recheck everything as you said.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm using the online editor. I know it's heresy, but it lets me work on the game while on my cell xD</p>\n<p>Still, I test all this things on the Windows desktop first, then copy them to the web.</p>\n<p>I'm going to recheck everything as you said.</p>\n\n",
      "PostDate": "2016-12-27T14:52:59.0915529Z",
      "LastEditDate": null
    },
    {
      "PostId": "9de567fa-c67c-4995-bf00-39ba65f91272",
      "UserId": 208856,
      "Username": "Groctel",
      "AvatarUrl": "http://i.imgur.com/hoKlmU5b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well, this is what I've accomplished, but as hard as I try I cannot make the _HideOutputSectionNow_ work. I know this is a bit abrupt, but here is my code.\r\n\r\nAlso, I used the command bar function you posted in other thread. You are a hero!\r\n\r\n```\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Further Shores\">\r\n    <inherit name=\"theme_novella\" />\r\n    <gameid>bebc055b-d16a-4f31-bca0-e07f88346a6c</gameid>\r\n    <version>Alpha 0.1</version>\r\n    <firstpublished>2016</firstpublished>\r\n    <author>Groctel</author>\r\n    <category>Sci-Fi</category>\r\n    <enablehyperlinks type=\"boolean\">false</enablehyperlinks>\r\n    <menufont>Georgia, serif</menufont>\r\n    <feature_limitinventory />\r\n    <feature_lightdark />\r\n    <appendobjectdescription />\r\n    <multiplecommands />\r\n    <showpanes type=\"boolean\">false</showpanes>\r\n    <showcommandbar />\r\n    <showlocation type=\"boolean\">false</showlocation>\r\n    <autodisplayverbs type=\"boolean\">false</autodisplayverbs>\r\n    <attr name=\"autodescription_youcansee\" type=\"int\">3</attr>\r\n    <attr name=\"autodescription_youcango\" type=\"int\">0</attr>\r\n    <attr name=\"autodescription_description\" type=\"int\">2</attr>\r\n    <attr name=\"autodescription_youarein_useprefix\" type=\"boolean\">false</attr>\r\n    <defaultfont>Georgia, serif</defaultfont>\r\n    <defaultfontsize type=\"int\">12</defaultfontsize>\r\n    <autodescription_youarein_newline />\r\n    <cover>Cover.png</cover>\r\n    <pov type=\"object\">AAA_Player</pov>\r\n  </game>\r\n  <object name=\"Main\">\r\n    <inherit name=\"editor_object\" />\r\n    <object name=\"Main_Menu\">\r\n      <inherit name=\"editor_room\" />\r\n      <objectslistprefix type=\"string\"></objectslistprefix>\r\n      <alias type=\"string\"></alias>\r\n      <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n      <description type=\"script\"><![CDATA[\r\n        HideCommandBar\r\n        Main.section = StartNewOutputSection()\r\n        msg (\"<br><br>\")\r\n        TextFX_Unscramble (\"Inspired by We Lost The Sea's work\", 100, 1)\r\n        EndOutputSection (Main.section)\r\n        JS.eval (\"$('.\"+Main.section+\"').css('text-align', 'center').css('font-weight', 'bold');\")\r\n        SetTimeout (5) {\r\n          HideOutputSection (Main.section)\r\n          SetTimeout (1) {\r\n            Main.section = StartNewOutputSection()\r\n            msg (\"<br><br>\")\r\n            TextFX_Unscramble (\"Made with Quest\", 100, 1)\r\n            EndOutputSection (Main.section)\r\n            JS.eval (\"$('.\"+Main.section+\"').css('text-align', 'center').css('font-weight', 'bold');\")\r\n            SetTimeout (3) {\r\n              HideOutputSection (Main.section)\r\n              SetTimeout (1) {\r\n                Main.section0 = StartNewOutputSection()\r\n                TextFX_Unscramble (\"Please type the option you wish to proceed with.\", 100, 1)\r\n                EndOutputSection (Main.section0)\r\n                JS.eval (\"$('.\"+Main.section0+\"').css('text-align', 'center');\")\r\n                msg (\"<br><br>\")\r\n                Main.section1 = StartNewOutputSection()\r\n                TextFX_Unscramble (\"- New game -\", 100, 1)\r\n                EndOutputSection (Main.section1)\r\n                JS.eval (\"$('.\"+Main.section1+\"').css('text-align', 'center').css('font-weight', 'bold');\")\r\n                Main.section2 = StartNewOutputSection()\r\n                TextFX_Unscramble (\"- Restore game -\", 100, 1)\r\n                EndOutputSection (Main.section2)\r\n                JS.eval (\"$('.\"+Main.section2+\"').css('text-align', 'center').css('font-weight', 'bold');\")\r\n                msg (\"<br><br>\")\r\n                SetFontSize (8)\r\n                TextFX_Typewriter (\"©Groctel // Alpha 0.1\", 100)\r\n                SetFontSize (12)\r\n                SetTimeout (5) {\r\n                  ShowCommandBar\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ]]></description>\r\n      <object name=\"AAA_Player\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"editor_player\" />\r\n        <look>Looking good.</look>\r\n        <gender>you</gender>\r\n        <article>you</article>\r\n      </object>\r\n    </object>\r\n  </object>\r\n  <function name=\"HideCommandBar\">\r\n    request (Hide, \"Command\")\r\n  </function>\r\n  <function name=\"ShowCommandBar\">\r\n    request (Show, \"Command\")\r\n  </function>\r\n  <function name=\"HideOutputSectionNow\">\r\n    JS.eval (\"$('.\" + name+\"').hide(0, function () { $(this).remove(); });\")\r\n  </function>\r\n</asl>\r\n```\r\n\r\nI'm obviously crediting you for all you've done to help me!\r\n\r\nThank you very much <3",
      "EditableFormat": "markdown",
      "HTML": "<p>Well, this is what I've accomplished, but as hard as I try I cannot make the <em>HideOutputSectionNow</em> work. I know this is a bit abrupt, but here is my code.</p>\n<p>Also, I used the command bar function you posted in other thread. You are a hero!</p>\n<pre><code>&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Further Shores\"&gt;\n    &lt;inherit name=\"theme_novella\" /&gt;\n    &lt;gameid&gt;bebc055b-d16a-4f31-bca0-e07f88346a6c&lt;/gameid&gt;\n    &lt;version&gt;Alpha 0.1&lt;/version&gt;\n    &lt;firstpublished&gt;2016&lt;/firstpublished&gt;\n    &lt;author&gt;Groctel&lt;/author&gt;\n    &lt;category&gt;Sci-Fi&lt;/category&gt;\n    &lt;enablehyperlinks type=\"boolean\"&gt;false&lt;/enablehyperlinks&gt;\n    &lt;menufont&gt;Georgia, serif&lt;/menufont&gt;\n    &lt;feature_limitinventory /&gt;\n    &lt;feature_lightdark /&gt;\n    &lt;appendobjectdescription /&gt;\n    &lt;multiplecommands /&gt;\n    &lt;showpanes type=\"boolean\"&gt;false&lt;/showpanes&gt;\n    &lt;showcommandbar /&gt;\n    &lt;showlocation type=\"boolean\"&gt;false&lt;/showlocation&gt;\n    &lt;autodisplayverbs type=\"boolean\"&gt;false&lt;/autodisplayverbs&gt;\n    &lt;attr name=\"autodescription_youcansee\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youcango\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;attr name=\"autodescription_description\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youarein_useprefix\" type=\"boolean\"&gt;false&lt;/attr&gt;\n    &lt;defaultfont&gt;Georgia, serif&lt;/defaultfont&gt;\n    &lt;defaultfontsize type=\"int\"&gt;12&lt;/defaultfontsize&gt;\n    &lt;autodescription_youarein_newline /&gt;\n    &lt;cover&gt;Cover.png&lt;/cover&gt;\n    &lt;pov type=\"object\"&gt;AAA_Player&lt;/pov&gt;\n  &lt;/game&gt;\n  &lt;object name=\"Main\"&gt;\n    &lt;inherit name=\"editor_object\" /&gt;\n    &lt;object name=\"Main_Menu\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;objectslistprefix type=\"string\"&gt;&lt;/objectslistprefix&gt;\n      &lt;alias type=\"string\"&gt;&lt;/alias&gt;\n      &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n      &lt;description type=\"script\"&gt;&lt;![CDATA[\n        HideCommandBar\n        Main.section = StartNewOutputSection()\n        msg (\"&lt;br&gt;&lt;br&gt;\")\n        TextFX_Unscramble (\"Inspired by We Lost The Sea's work\", 100, 1)\n        EndOutputSection (Main.section)\n        JS.eval (\"$('.\"+Main.section+\"').css('text-align', 'center').css('font-weight', 'bold');\")\n        SetTimeout (5) {\n          HideOutputSection (Main.section)\n          SetTimeout (1) {\n            Main.section = StartNewOutputSection()\n            msg (\"&lt;br&gt;&lt;br&gt;\")\n            TextFX_Unscramble (\"Made with Quest\", 100, 1)\n            EndOutputSection (Main.section)\n            JS.eval (\"$('.\"+Main.section+\"').css('text-align', 'center').css('font-weight', 'bold');\")\n            SetTimeout (3) {\n              HideOutputSection (Main.section)\n              SetTimeout (1) {\n                Main.section0 = StartNewOutputSection()\n                TextFX_Unscramble (\"Please type the option you wish to proceed with.\", 100, 1)\n                EndOutputSection (Main.section0)\n                JS.eval (\"$('.\"+Main.section0+\"').css('text-align', 'center');\")\n                msg (\"&lt;br&gt;&lt;br&gt;\")\n                Main.section1 = StartNewOutputSection()\n                TextFX_Unscramble (\"- New game -\", 100, 1)\n                EndOutputSection (Main.section1)\n                JS.eval (\"$('.\"+Main.section1+\"').css('text-align', 'center').css('font-weight', 'bold');\")\n                Main.section2 = StartNewOutputSection()\n                TextFX_Unscramble (\"- Restore game -\", 100, 1)\n                EndOutputSection (Main.section2)\n                JS.eval (\"$('.\"+Main.section2+\"').css('text-align', 'center').css('font-weight', 'bold');\")\n                msg (\"&lt;br&gt;&lt;br&gt;\")\n                SetFontSize (8)\n                TextFX_Typewriter (\"©Groctel // Alpha 0.1\", 100)\n                SetFontSize (12)\n                SetTimeout (5) {\n                  ShowCommandBar\n                }\n              }\n            }\n          }\n        }\n      ]]&gt;&lt;/description&gt;\n      &lt;object name=\"AAA_Player\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"editor_player\" /&gt;\n        &lt;look&gt;Looking good.&lt;/look&gt;\n        &lt;gender&gt;you&lt;/gender&gt;\n        &lt;article&gt;you&lt;/article&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;function name=\"HideCommandBar\"&gt;\n    request (Hide, \"Command\")\n  &lt;/function&gt;\n  &lt;function name=\"ShowCommandBar\"&gt;\n    request (Show, \"Command\")\n  &lt;/function&gt;\n  &lt;function name=\"HideOutputSectionNow\"&gt;\n    JS.eval (\"$('.\" + name+\"').hide(0, function () { $(this).remove(); });\")\n  &lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n<p>I'm obviously crediting you for all you've done to help me!</p>\n<p>Thank you very much &lt;3</p>\n\n",
      "PostDate": "2016-12-27T15:17:30.6537263Z",
      "LastEditDate": null
    },
    {
      "PostId": "053e8458-4929-456e-a28c-4f6543059ca2",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The HideOutputSectionNow function has lost its parameter. It should have a ```parameters=\"name\"``` attribute. Check out the original code. If you can't edit it in the script view, you should be able to add the parameter via the GUI editor for the function.",
      "EditableFormat": "markdown",
      "HTML": "<p>The HideOutputSectionNow function has lost its parameter. It should have a <code>parameters=\"name\"</code> attribute. Check out the original code. If you can't edit it in the script view, you should be able to add the parameter via the GUI editor for the function.</p>\n\n",
      "PostDate": "2016-12-27T16:11:19.0318704Z",
      "LastEditDate": null
    },
    {
      "PostId": "585d6625-e709-4a93-a2d2-a8fd3cb082ac",
      "UserId": 208856,
      "Username": "Groctel",
      "AvatarUrl": "http://i.imgur.com/hoKlmU5b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Done! Here is a link to the menu intro file ^^\r\n\r\nhttp://play.textadventures.co.uk/Play.aspx?id=msbosynqs0oow7sxeld9ba\r\n\r\nThank you very very much for your help <3",
      "EditableFormat": "markdown",
      "HTML": "<p>Done! Here is a link to the menu intro file ^^</p>\n<p>http://play.textadventures.co.uk/Play.aspx?id=msbosynqs0oow7sxeld9ba</p>\n<p>Thank you very very much for your help &lt;3</p>\n\n",
      "PostDate": "2016-12-27T17:28:17.9418096Z",
      "LastEditDate": null
    },
    {
      "PostId": "f52f7b8f-a710-4db4-9e9d-d545cf468c6d",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Glad it's all working now. :)",
      "EditableFormat": "markdown",
      "HTML": "<p>Glad it's all working now. :)</p>\n\n",
      "PostDate": "2016-12-27T18:13:26.3435824Z",
      "LastEditDate": null
    }
  ]
}
