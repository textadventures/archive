{
  "Topic": {
    "TopicId": "i-wl5efmlueaiyz8beeyaa",
    "ForumId": "10",
    "Title": "FYI --- Microsoft Copilot can write .aslx files and has found errors",
    "LastUpdated": "2024-11-12T17:53:33.6768163Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "4484cb54-077c-4d15-b763-305d78080a98",
      "UserId": 153491,
      "Username": "xordevoreaux",
      "AvatarUrl": "https://secure.gravatar.com/avatar/fb83cd3d4e151cfbdbac21768c23b9dc?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here are a few errors that Microsoft Copilot has caught.  The codebase and the .asxl file are out of date, I didn't use 580 for this, will get that exported eventually, but here is the general result.\r\n\r\nME: Are you famliar with the interactive fiction generator program Quest?\r\n\r\nYes, I'm familiar with Quest! It's a fantastic tool for creating interactive fiction and text adventure games. With Quest, you can build games similar to classics like Zork and The Hitchhiker's Guide to the Galaxy, without needing to know how to program. It offers a visual script editor, so you can pick commands from a list, making it accessible even for beginners2.\r\n\r\nYou can create games that include text, images, music, and even videos. Plus, it's open-source and free to use, so you can modify the source code and share your creations with others1.\r\n\r\nAre you thinking about using Quest to create your own interactive fiction?\r\n\r\n\r\n\r\n\r\nI've done so a few times in the past, I'm wondering if you can write scripts for the desktop standalone version. There are certain routines / scripts I want that I don't know how to program myself.\r\nI'd love to help you with that! If you describe the specific routines or scripts you need for your Quest project, I can definitely assist you in crafting them. Whether it's for handling player input, creating complex conditions, or managing inventory, just let me know the details, and we'll get started on writing those scripts together.\r\n\r\nWhat do you have in mind?\r\n\r\nThis is my part of quest file so far.\r\n\r\n```\r\n <!--Saved by Quest 5.7.6404.15496--> <asl version=\"550\"> <include ref=\"English.aslx\" /> <include ref=\"Core.aslx\" /> <game name=\"World Template\"> <gameid>1508bec4-6d7d-4fac-b10e-e9a8e2662cc1</gameid> <version>1.1.2</version> <firstpublished>2017</firstpublished> <author>xordevoreaux</author> <attr name=\"autodescription_description\" type=\"int\">2</attr> <attr name=\"autodescription_youcansee\" type=\"int\">3</attr> <attr name=\"autodescription_youcango\" type=\"int\">4</attr> <feature_limitinventory /> <feature_lightdark /> <feature_asktell /> <appendobjectdescription /> <attr name=\"wt_worldclock_hour\" type=\"int\">0</attr> <attr name=\"wt_worldclock_min\" type=\"int\">0</attr> <attr name=\"wt_worldclock_str\" type=\"string\"></attr> <attr name=\"wt_worldclock_darktime\" type=\"int\">20</attr> <attr name=\"wt_worldclock_lighttime\" type=\"int\">6</attr> <attr name=\"wt_InitError\" type=\"boolean\">false</attr> <statusattributes type=\"stringdictionary\"> <item> <key>wt_worldclock_str</key> <value>Time: !</value> </item> </statusattributes> <description><![CDATA[Updated for use for version 5.7 of Quest.<br/>Provides additional functionality for manipulating physical processes:<br/>a) flammability and burning objects<br/>b) fragility and how a fragile item breaks (whether it \"shatters\" and is removed from the game)<br/>c) a generic book-making function<br/>d) ambience and a sense of time<br/><br/>Manipulatable things fall into one of 3 categories:<br/>wt_obj (object, facilitating flammability, fragility, and books)<br/>wt_env (environment, such as land, sea, or sky, facilitating ambience)<br/>wt_spc (space, existing within an environment).<br/>Do not modify or directly use the object types wt_objmod_burn, wt_objmod_fragility, and wt_objmod_book. They are collections of attributes rolled into the wt_obj mod and separated for the sake of programmability.<br/>]]></description> <setbackgroundopacity type=\"boolean\">false</setbackgroundopacity> <defaultwebfont>Lora</defaultwebfont> <gridmap type=\"boolean\">false</gridmap> <commandpane type=\"boolean\">false</commandpane> <customstatuspane type=\"boolean\">false</customstatuspane> <shadowbox type=\"boolean\">false</shadowbox> <cover>worldtemplateimg.png</cover> <attr name=\"wt_CurrentBook\" type=\"object\">wt_defaultObject</attr> <Home type=\"object\">Area_01</Home> <pov type=\"object\">player</pov> <start type=\"script\"><![CDATA[ game.wt_worldclock_hour = 5 game.wt_worldclock_min = 50 wt_fn_worldclock wt_fn_env // All wt_spc objects must be nested in either another wt_spc or in an wt_env. A top-level wt_spc (whose parent = game) is not allowed. // We loop through all objects. For any space objects, we test that they're properly nested. If not, the game aborts. game.wt_InitError = False foreach (item, AllObjects()) { currentObject = item if (currentObject.name <> \"wt_defaultObject\" and currentObject.name <> \"wt_defaultEnv\") { if (HasAttribute(currentObject, \"IsWorldSpace\")) { if (HasAttribute(currentObject, \"parent\")) { if (HasAttribute(currentObject.parent, \"IsWorldSpace\")) { } else if (HasAttribute(currentObject.parent, \"IsWorldEnv\")) { } else { msg (\"<b>Game configuration error:</b>\") msg (\"Please set the parent for [\" + currentObject.name + \"] to be either a space or an environment by assigning either the wt_spc or wt_env attribute to the object.\") game.wt_InitError = True } } else { msg (\"<b>Game configuration error:</b>\") msg (\"The top-most object in any heirarchy must be an environment, but a non-environment object was detected instead.\") msg (\"Object: [\" + currentObject.name + \"]\") msg (\"<br/><b>Solutions:</b>\") msg (\" Change it from a space to an environment by removing the wt_spc attribute and <br/> adding the wt_env attribute.\") msg (\" <br/> Nest it farther down the hierarchy, either in an environment or another space.\") game.wt_InitError = True } } } } // We have not found any errors in the configuration, so we can continue with initialization: if (game.wt_InitError=False) { foreach (item, AllObjects()) { if (HasAttribute(item, \"IsWorldSpace\")) { do (item, \"GetEnv\") } else if (HasAttribute(item, \"IsWorldObject\")) { if (item.IsIgnitable=True or item.IsFlammable=True) { item.feature_lightdark = True if (item.lightstrength=\"\") { item.lightstrength = \"weak\" } } } } } else { msg (\"<br/>Game aborted.<br/>\") finish } ]]></start> <roomenter type=\"script\"> </roomenter> <object name=\"wt_defaultObject\"> <inherit name=\"editor_object\" /> <inherit name=\"wt_obj\" /> </object> <object name=\"wt_defaultEnv\"> <inherit name=\"editor_room\" /> <inherit name=\"wt_env\" /> <EnvironmentName>Default</EnvironmentName> </object> </game> <command name=\"lookat\"> <pattern>look at #object#; x #object#; examine #object#; exam #object#; ex #object#</pattern> <script> if (GetBoolean(object, \"hidechildren\")) { object.hidechildren = false } if (TypeOf(object, \"look\") = \"script\") { do (object, \"look\") } else { lookdesc = \"\" if (HasString(object, \"look\")) { lookdesc = object.look } if (LengthOf(lookdesc) = 0) { lookdesc = Template(\"DefaultObjectDescription\") } if (GetBoolean(object, \"switchedon\")) { if (HasString(object, \"switchedondesc\")) { lookdesc = lookdesc + \" \" + object.switchedondesc } } else { if (HasString(object, \"switchedoffdesc\")) { lookdesc = lookdesc + \" \" + object.switchedoffdesc } } isDark = CheckDarkness() if (isDark and not GetBoolean(object, \"lightsource\")) { lookdesc = DynamicTemplate(\"LookAtDarkness\", object) } msg (lookdesc) } ListObjectContents (object) if (HasAttribute(object, \"IsWorldObject\")) { if (object.IsBroken=true) { msg (\"The \" + object.alias + \" appears broken.\") } else if (object.IsBroken=False and object.IsFragile=True) { msg (\"The \" + object.alias + \" appears fragile.\") } if (object.IsIgnitable = True and object.IsBurning = False) { msg (\"It looks like you could light or ignite the \" + object.alias + \" on fire.\") } else if (object.IsBurning=True) { msg (\"The \" + object.alias + \" is currently burning.\") } } </script> </command> <command name=\"look\"> <pattern type=\"string\">^look$|^l$</pattern> <script><![CDATA[ ShowRoomDescription if (HasAttribute(player.parent, \"IsWorldSpace\")) { if (player.parent.IsOutside=True) { if (game.wt_worldclock_hour < game.wt_worldclock_lighttime or game.wt_worldclock_hour >= game.wt_worldclock_darktime) { msg (\"It's dark out here.\") } } } ]]></script> </command> <command> <pattern>test</pattern> <script> MoveObject (player, testroom) </script> </command> <command name=\"douse\"> <pattern>douse #object#</pattern> <script> if (HasAttribute(object, \"IsWorldObject\")) { do (object, \"OnDouse\") } </script> </command> <command name=\"burn\"> <pattern>burn #object1# with #object2#; burn #object1#; light #object1# with #object2#; light #object1#; ignite #object1# with #object2#; ignite #object1#</pattern> <script><![CDATA[ if (not IsDefined(\"object2\")) { object2 = null } if (HasAttribute(object1, \"IsWorldObject\")) { if (object1.IsFlammable=False) { msg (\"That doesn't seem to want to burn.\") } if (object1.IsIgnitable=True and object2=null and object1.parent = player) { do (object1, \"OnIgnite\") } else if (object1.IsIgnitable=True and object2 = null and object1.parent <> player) { msg (\"But you're not holding that to ignite it.\") } if (object1.IsIgnitable=False and object2=null) { msg (\"You'll need something to light or ignite that with. The \" + object1.alias + \" won't ignite by itself.\") } if (object1.IsFlammable=True and object2<>null) { if (HasAttribute(object2, \"IsWorldObject\")) { if (object2.IsBurning=False) { msg (\"But the \" + object2.alias + \" isn't on fire.\") } if (object2.IsBurning=True) { do (object1, \"OnIgnite\") } } else { msg (\"Using the \" + object2.alias + \" to burn the \" + object1.alias + \" doesn't seem to work.\") } } } else { msg (\"You're not quite sure how you'd go about burning the \" + object1.alias + \".\") } ]]></script> </command>\r\n```\r\n\r\nYour Quest file is shaping up nicely! Here are a few tweaks and a script that might help:\r\n\r\nTweak for Conditional Check\r\nIn your start script, there's a small typo in the conditional check for game.wt_InitError. It should use == for comparison, not = for assignment:\r\n\r\n```\r\nquest\r\nif (game.wt_InitError == False) {\r\n  // Rest of the script\r\n}\r\n```\r\n\r\nSample Script: Resetting an Object's State\r\nHere's a sample script for resetting an object's state, which might be useful for your project:\r\n\r\nAdd a Command to Reset an Object:\r\n\r\nquest\r\n```\r\n<command name=\"reset\">\r\n  <pattern>reset #object#</pattern>\r\n  <script>\r\n    if (HasAttribute(object, \"IsWorldObject\")) {\r\n      do (object, \"OnReset\")\r\n    }\r\n    else {\r\n      msg (\"You can't reset that object.\")\r\n    }\r\n  </script>\r\n</command>\r\n```\r\n\r\nDefine the OnReset Script for Your Objects: You can create a default OnReset script that objects inherit:\r\n\r\nquest\r\n```\r\n<object name=\"wt_defaultObject\">\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"wt_obj\" />\r\n  <script name=\"OnReset\"><![CDATA[\r\n    // Reset attributes\r\n    object.IsBroken = False\r\n    object.IsBurning = False\r\n    // Add more attributes to reset as needed\r\n    msg (\"The \" + object.alias + \" has been reset.\")\r\n  ]]></script>\r\n</object>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Here are a few errors that Microsoft Copilot has caught.  The codebase and the .asxl file are out of date, I didn't use 580 for this, will get that exported eventually, but here is the general result.</p>\n<p>ME: Are you famliar with the interactive fiction generator program Quest?</p>\n<p>Yes, I'm familiar with Quest! It's a fantastic tool for creating interactive fiction and text adventure games. With Quest, you can build games similar to classics like Zork and The Hitchhiker's Guide to the Galaxy, without needing to know how to program. It offers a visual script editor, so you can pick commands from a list, making it accessible even for beginners2.</p>\n<p>You can create games that include text, images, music, and even videos. Plus, it's open-source and free to use, so you can modify the source code and share your creations with others1.</p>\n<p>Are you thinking about using Quest to create your own interactive fiction?</p>\n<p>I've done so a few times in the past, I'm wondering if you can write scripts for the desktop standalone version. There are certain routines / scripts I want that I don't know how to program myself.<br>\nI'd love to help you with that! If you describe the specific routines or scripts you need for your Quest project, I can definitely assist you in crafting them. Whether it's for handling player input, creating complex conditions, or managing inventory, just let me know the details, and we'll get started on writing those scripts together.</p>\n<p>What do you have in mind?</p>\n<p>This is my part of quest file so far.</p>\n<pre><code> &lt;!--Saved by Quest 5.7.6404.15496--&gt; &lt;asl version=\"550\"&gt; &lt;include ref=\"English.aslx\" /&gt; &lt;include ref=\"Core.aslx\" /&gt; &lt;game name=\"World Template\"&gt; &lt;gameid&gt;1508bec4-6d7d-4fac-b10e-e9a8e2662cc1&lt;/gameid&gt; &lt;version&gt;1.1.2&lt;/version&gt; &lt;firstpublished&gt;2017&lt;/firstpublished&gt; &lt;author&gt;xordevoreaux&lt;/author&gt; &lt;attr name=\"autodescription_description\" type=\"int\"&gt;2&lt;/attr&gt; &lt;attr name=\"autodescription_youcansee\" type=\"int\"&gt;3&lt;/attr&gt; &lt;attr name=\"autodescription_youcango\" type=\"int\"&gt;4&lt;/attr&gt; &lt;feature_limitinventory /&gt; &lt;feature_lightdark /&gt; &lt;feature_asktell /&gt; &lt;appendobjectdescription /&gt; &lt;attr name=\"wt_worldclock_hour\" type=\"int\"&gt;0&lt;/attr&gt; &lt;attr name=\"wt_worldclock_min\" type=\"int\"&gt;0&lt;/attr&gt; &lt;attr name=\"wt_worldclock_str\" type=\"string\"&gt;&lt;/attr&gt; &lt;attr name=\"wt_worldclock_darktime\" type=\"int\"&gt;20&lt;/attr&gt; &lt;attr name=\"wt_worldclock_lighttime\" type=\"int\"&gt;6&lt;/attr&gt; &lt;attr name=\"wt_InitError\" type=\"boolean\"&gt;false&lt;/attr&gt; &lt;statusattributes type=\"stringdictionary\"&gt; &lt;item&gt; &lt;key&gt;wt_worldclock_str&lt;/key&gt; &lt;value&gt;Time: !&lt;/value&gt; &lt;/item&gt; &lt;/statusattributes&gt; &lt;description&gt;&lt;![CDATA[Updated for use for version 5.7 of Quest.&lt;br/&gt;Provides additional functionality for manipulating physical processes:&lt;br/&gt;a) flammability and burning objects&lt;br/&gt;b) fragility and how a fragile item breaks (whether it \"shatters\" and is removed from the game)&lt;br/&gt;c) a generic book-making function&lt;br/&gt;d) ambience and a sense of time&lt;br/&gt;&lt;br/&gt;Manipulatable things fall into one of 3 categories:&lt;br/&gt;wt_obj (object, facilitating flammability, fragility, and books)&lt;br/&gt;wt_env (environment, such as land, sea, or sky, facilitating ambience)&lt;br/&gt;wt_spc (space, existing within an environment).&lt;br/&gt;Do not modify or directly use the object types wt_objmod_burn, wt_objmod_fragility, and wt_objmod_book. They are collections of attributes rolled into the wt_obj mod and separated for the sake of programmability.&lt;br/&gt;]]&gt;&lt;/description&gt; &lt;setbackgroundopacity type=\"boolean\"&gt;false&lt;/setbackgroundopacity&gt; &lt;defaultwebfont&gt;Lora&lt;/defaultwebfont&gt; &lt;gridmap type=\"boolean\"&gt;false&lt;/gridmap&gt; &lt;commandpane type=\"boolean\"&gt;false&lt;/commandpane&gt; &lt;customstatuspane type=\"boolean\"&gt;false&lt;/customstatuspane&gt; &lt;shadowbox type=\"boolean\"&gt;false&lt;/shadowbox&gt; &lt;cover&gt;worldtemplateimg.png&lt;/cover&gt; &lt;attr name=\"wt_CurrentBook\" type=\"object\"&gt;wt_defaultObject&lt;/attr&gt; &lt;Home type=\"object\"&gt;Area_01&lt;/Home&gt; &lt;pov type=\"object\"&gt;player&lt;/pov&gt; &lt;start type=\"script\"&gt;&lt;![CDATA[ game.wt_worldclock_hour = 5 game.wt_worldclock_min = 50 wt_fn_worldclock wt_fn_env // All wt_spc objects must be nested in either another wt_spc or in an wt_env. A top-level wt_spc (whose parent = game) is not allowed. // We loop through all objects. For any space objects, we test that they're properly nested. If not, the game aborts. game.wt_InitError = False foreach (item, AllObjects()) { currentObject = item if (currentObject.name &lt;&gt; \"wt_defaultObject\" and currentObject.name &lt;&gt; \"wt_defaultEnv\") { if (HasAttribute(currentObject, \"IsWorldSpace\")) { if (HasAttribute(currentObject, \"parent\")) { if (HasAttribute(currentObject.parent, \"IsWorldSpace\")) { } else if (HasAttribute(currentObject.parent, \"IsWorldEnv\")) { } else { msg (\"&lt;b&gt;Game configuration error:&lt;/b&gt;\") msg (\"Please set the parent for [\" + currentObject.name + \"] to be either a space or an environment by assigning either the wt_spc or wt_env attribute to the object.\") game.wt_InitError = True } } else { msg (\"&lt;b&gt;Game configuration error:&lt;/b&gt;\") msg (\"The top-most object in any heirarchy must be an environment, but a non-environment object was detected instead.\") msg (\"Object: [\" + currentObject.name + \"]\") msg (\"&lt;br/&gt;&lt;b&gt;Solutions:&lt;/b&gt;\") msg (\" Change it from a space to an environment by removing the wt_spc attribute and &lt;br/&gt; adding the wt_env attribute.\") msg (\" &lt;br/&gt; Nest it farther down the hierarchy, either in an environment or another space.\") game.wt_InitError = True } } } } // We have not found any errors in the configuration, so we can continue with initialization: if (game.wt_InitError=False) { foreach (item, AllObjects()) { if (HasAttribute(item, \"IsWorldSpace\")) { do (item, \"GetEnv\") } else if (HasAttribute(item, \"IsWorldObject\")) { if (item.IsIgnitable=True or item.IsFlammable=True) { item.feature_lightdark = True if (item.lightstrength=\"\") { item.lightstrength = \"weak\" } } } } } else { msg (\"&lt;br/&gt;Game aborted.&lt;br/&gt;\") finish } ]]&gt;&lt;/start&gt; &lt;roomenter type=\"script\"&gt; &lt;/roomenter&gt; &lt;object name=\"wt_defaultObject\"&gt; &lt;inherit name=\"editor_object\" /&gt; &lt;inherit name=\"wt_obj\" /&gt; &lt;/object&gt; &lt;object name=\"wt_defaultEnv\"&gt; &lt;inherit name=\"editor_room\" /&gt; &lt;inherit name=\"wt_env\" /&gt; &lt;EnvironmentName&gt;Default&lt;/EnvironmentName&gt; &lt;/object&gt; &lt;/game&gt; &lt;command name=\"lookat\"&gt; &lt;pattern&gt;look at #object#; x #object#; examine #object#; exam #object#; ex #object#&lt;/pattern&gt; &lt;script&gt; if (GetBoolean(object, \"hidechildren\")) { object.hidechildren = false } if (TypeOf(object, \"look\") = \"script\") { do (object, \"look\") } else { lookdesc = \"\" if (HasString(object, \"look\")) { lookdesc = object.look } if (LengthOf(lookdesc) = 0) { lookdesc = Template(\"DefaultObjectDescription\") } if (GetBoolean(object, \"switchedon\")) { if (HasString(object, \"switchedondesc\")) { lookdesc = lookdesc + \" \" + object.switchedondesc } } else { if (HasString(object, \"switchedoffdesc\")) { lookdesc = lookdesc + \" \" + object.switchedoffdesc } } isDark = CheckDarkness() if (isDark and not GetBoolean(object, \"lightsource\")) { lookdesc = DynamicTemplate(\"LookAtDarkness\", object) } msg (lookdesc) } ListObjectContents (object) if (HasAttribute(object, \"IsWorldObject\")) { if (object.IsBroken=true) { msg (\"The \" + object.alias + \" appears broken.\") } else if (object.IsBroken=False and object.IsFragile=True) { msg (\"The \" + object.alias + \" appears fragile.\") } if (object.IsIgnitable = True and object.IsBurning = False) { msg (\"It looks like you could light or ignite the \" + object.alias + \" on fire.\") } else if (object.IsBurning=True) { msg (\"The \" + object.alias + \" is currently burning.\") } } &lt;/script&gt; &lt;/command&gt; &lt;command name=\"look\"&gt; &lt;pattern type=\"string\"&gt;^look$|^l$&lt;/pattern&gt; &lt;script&gt;&lt;![CDATA[ ShowRoomDescription if (HasAttribute(player.parent, \"IsWorldSpace\")) { if (player.parent.IsOutside=True) { if (game.wt_worldclock_hour &lt; game.wt_worldclock_lighttime or game.wt_worldclock_hour &gt;= game.wt_worldclock_darktime) { msg (\"It's dark out here.\") } } } ]]&gt;&lt;/script&gt; &lt;/command&gt; &lt;command&gt; &lt;pattern&gt;test&lt;/pattern&gt; &lt;script&gt; MoveObject (player, testroom) &lt;/script&gt; &lt;/command&gt; &lt;command name=\"douse\"&gt; &lt;pattern&gt;douse #object#&lt;/pattern&gt; &lt;script&gt; if (HasAttribute(object, \"IsWorldObject\")) { do (object, \"OnDouse\") } &lt;/script&gt; &lt;/command&gt; &lt;command name=\"burn\"&gt; &lt;pattern&gt;burn #object1# with #object2#; burn #object1#; light #object1# with #object2#; light #object1#; ignite #object1# with #object2#; ignite #object1#&lt;/pattern&gt; &lt;script&gt;&lt;![CDATA[ if (not IsDefined(\"object2\")) { object2 = null } if (HasAttribute(object1, \"IsWorldObject\")) { if (object1.IsFlammable=False) { msg (\"That doesn't seem to want to burn.\") } if (object1.IsIgnitable=True and object2=null and object1.parent = player) { do (object1, \"OnIgnite\") } else if (object1.IsIgnitable=True and object2 = null and object1.parent &lt;&gt; player) { msg (\"But you're not holding that to ignite it.\") } if (object1.IsIgnitable=False and object2=null) { msg (\"You'll need something to light or ignite that with. The \" + object1.alias + \" won't ignite by itself.\") } if (object1.IsFlammable=True and object2&lt;&gt;null) { if (HasAttribute(object2, \"IsWorldObject\")) { if (object2.IsBurning=False) { msg (\"But the \" + object2.alias + \" isn't on fire.\") } if (object2.IsBurning=True) { do (object1, \"OnIgnite\") } } else { msg (\"Using the \" + object2.alias + \" to burn the \" + object1.alias + \" doesn't seem to work.\") } } } else { msg (\"You're not quite sure how you'd go about burning the \" + object1.alias + \".\") } ]]&gt;&lt;/script&gt; &lt;/command&gt;\n</code></pre>\n<p>Your Quest file is shaping up nicely! Here are a few tweaks and a script that might help:</p>\n<p>Tweak for Conditional Check<br>\nIn your start script, there's a small typo in the conditional check for game.wt_InitError. It should use == for comparison, not = for assignment:</p>\n<pre><code>quest\nif (game.wt_InitError == False) {\n  // Rest of the script\n}\n</code></pre>\n<p>Sample Script: Resetting an Object's State<br>\nHere's a sample script for resetting an object's state, which might be useful for your project:</p>\n<p>Add a Command to Reset an Object:</p>\n<p>quest</p>\n<pre><code>&lt;command name=\"reset\"&gt;\n  &lt;pattern&gt;reset #object#&lt;/pattern&gt;\n  &lt;script&gt;\n    if (HasAttribute(object, \"IsWorldObject\")) {\n      do (object, \"OnReset\")\n    }\n    else {\n      msg (\"You can't reset that object.\")\n    }\n  &lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n<p>Define the OnReset Script for Your Objects: You can create a default OnReset script that objects inherit:</p>\n<p>quest</p>\n<pre><code>&lt;object name=\"wt_defaultObject\"&gt;\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"wt_obj\" /&gt;\n  &lt;script name=\"OnReset\"&gt;&lt;![CDATA[\n    // Reset attributes\n    object.IsBroken = False\n    object.IsBurning = False\n    // Add more attributes to reset as needed\n    msg (\"The \" + object.alias + \" has been reset.\")\n  ]]&gt;&lt;/script&gt;\n&lt;/object&gt;\n</code></pre>\n\n",
      "PostDate": "2024-11-12T17:53:33.6768163Z",
      "LastEditDate": "2024-11-12T22:34:42.6001332Z",
      "link": null
    },
    {
      "PostId": "5a1d6320-d2b6-45e1-ba7e-937d9998df1f",
      "UserId": 153491,
      "Username": "xordevoreaux",
      "AvatarUrl": "https://secure.gravatar.com/avatar/fb83cd3d4e151cfbdbac21768c23b9dc?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Bah, the code was deleted by the forum. I'm thinking some of the errors it caught were part of the codebase itself and not my game, so it would be interesting to take a raw game, unedited, and cut & paste it into Microsoft Copilot to see what errors it catches.\r\n\r\n---\r\n**NOTE FROM THE MODERATOR: I fixed the formatting to display the code in that post.**",
      "EditableFormat": "markdown",
      "HTML": "<p>Bah, the code was deleted by the forum. I'm thinking some of the errors it caught were part of the codebase itself and not my game, so it would be interesting to take a raw game, unedited, and cut &amp; paste it into Microsoft Copilot to see what errors it catches.</p>\n<hr>\n<p><strong>NOTE FROM THE MODERATOR: I fixed the formatting to display the code in that post.</strong></p>\n\n",
      "PostDate": "2024-11-12T17:54:18.0794827Z",
      "LastEditDate": "2024-11-12T22:38:32.8071915Z",
      "link": null
    },
    {
      "PostId": "c99119a5-96a1-4cd2-b232-21fec8dd1080",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Odr8Efkb.jpeg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\n>  The codebase and the .asxl file are out of date, I didn't use 580 for this, will get that exported eventually, but here is the general result.\r\n\r\nI think Alex Warren created the ASLX file extension when he created Quest.\r\n\r\n...and the current ASL version (as you say)  is 580. So, maybe that program is simply comparing the 550 ASL version from your file to the current file in the GitHub repo and declaring yours out of date?\r\n\r\nWhat other errors did it find?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<blockquote>\n<p>The codebase and the .asxl file are out of date, I didn't use 580 for this, will get that exported eventually, but here is the general result.</p>\n</blockquote>\n<p>I think Alex Warren created the ASLX file extension when he created Quest.</p>\n<p>...and the current ASL version (as you say)  is 580. So, maybe that program is simply comparing the 550 ASL version from your file to the current file in the GitHub repo and declaring yours out of date?</p>\n<p>What other errors did it find?</p>\n\n",
      "PostDate": "2024-11-12T20:25:22.1564467Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "eaf9ef7e-fa6b-4018-8091-0af828e0266d",
      "UserId": 153491,
      "Username": "xordevoreaux",
      "AvatarUrl": "https://secure.gravatar.com/avatar/fb83cd3d4e151cfbdbac21768c23b9dc?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Stuff like this, which I don't understand would be an error. Maybe it's hallucinating?\r\n----------\r\n\r\nIn your start script, there's a small typo in the conditional check for game.wt_InitError. It should use == for comparison, not = for assignment:\r\n\r\nquest\r\nif (game.wt_InitError == False) {\r\n  // Rest of the script\r\n}",
      "EditableFormat": "markdown",
      "HTML": "<h2>Stuff like this, which I don't understand would be an error. Maybe it's hallucinating?</h2>\n<p>In your start script, there's a small typo in the conditional check for game.wt_InitError. It should use == for comparison, not = for assignment:</p>\n<p>quest<br>\nif (game.wt_InitError == False) {<br>\n// Rest of the script<br>\n}</p>\n\n",
      "PostDate": "2024-11-12T20:33:38.0394002Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "252e9254-9753-4b88-90f7-af1592960074",
      "UserId": 153491,
      "Username": "xordevoreaux",
      "AvatarUrl": "https://secure.gravatar.com/avatar/fb83cd3d4e151cfbdbac21768c23b9dc?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It wrote this suggestion as an example to reset an object's state:\r\n\r\n\r\n```\r\n<command name=\"reset\"> <pattern>reset #object#</pattern> <script> if (HasAttribute(object, \"IsWorldObject\")) { do (object, \"OnReset\") } else { msg (\"You can't reset that object.\") } </script> </command>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>It wrote this suggestion as an example to reset an object's state:</p>\n<pre><code>&lt;command name=\"reset\"&gt; &lt;pattern&gt;reset #object#&lt;/pattern&gt; &lt;script&gt; if (HasAttribute(object, \"IsWorldObject\")) { do (object, \"OnReset\") } else { msg (\"You can't reset that object.\") } &lt;/script&gt; &lt;/command&gt;\n</code></pre>\n\n",
      "PostDate": "2024-11-12T20:36:12.2547044Z",
      "LastEditDate": "2024-11-12T22:21:02.1375545Z",
      "link": null
    },
    {
      "PostId": "128fae03-2571-4a78-bc9d-00f9543bf45d",
      "UserId": 153491,
      "Username": "xordevoreaux",
      "AvatarUrl": "https://secure.gravatar.com/avatar/fb83cd3d4e151cfbdbac21768c23b9dc?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ugh the forum keeps stripping out the code.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ugh the forum keeps stripping out the code.</p>\n\n",
      "PostDate": "2024-11-12T20:36:33.6489196Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1607a3ee-0b8d-4310-8ce4-93ca820bbfd0",
      "UserId": 153491,
      "Username": "xordevoreaux",
      "AvatarUrl": "https://secure.gravatar.com/avatar/fb83cd3d4e151cfbdbac21768c23b9dc?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "````<command name=\"reset\"> <pattern>reset #object#</pattern> <script> if (HasAttribute(object, \"IsWorldObject\")) { do (object, \"OnReset\") } else { msg (\"You can't reset that object.\") } </script> </command>````",
      "EditableFormat": "markdown",
      "HTML": "<p><code>&lt;command name=\"reset\"&gt; &lt;pattern&gt;reset #object#&lt;/pattern&gt; &lt;script&gt; if (HasAttribute(object, \"IsWorldObject\")) { do (object, \"OnReset\") } else { msg (\"You can't reset that object.\") } &lt;/script&gt; &lt;/command&gt;</code></p>\n\n",
      "PostDate": "2024-11-12T20:37:05.6362385Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "928546a4-09c4-421f-8aa3-e14ecfc0ccb7",
      "UserId": 153491,
      "Username": "xordevoreaux",
      "AvatarUrl": "https://secure.gravatar.com/avatar/fb83cd3d4e151cfbdbac21768c23b9dc?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think the idea of using AI to write the code might be good, but the results would need to be assessed closely.",
      "EditableFormat": "markdown",
      "HTML": "<p>I think the idea of using AI to write the code might be good, but the results would need to be assessed closely.</p>\n\n",
      "PostDate": "2024-11-12T20:38:08.2254322Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "953ef63a-1d35-4a51-a049-b818aee83e02",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Odr8Efkb.jpeg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "`if (game.wt_InitError == False) {`\r\n\r\nWell, it seems to be trying to help, but Quest scripts never use `==`. It's always `=`.\r\n\r\nJavaScript has `==`, but not Quest.\r\n\r\n---\r\nI edited [this post of yours](https://textadventures.co.uk/forum/quest/topic/i-wl5efmlueaiyz8beeyaa/fyi-microsoft-copilot-can-write-aslx-files-and-has-found-errors#252e9254-9753-4b88-90f7-af1592960074) to illustrate how to post that code.\r\n\r\nSo it says:\r\n```\r\n<command name=\"reset\">\r\n  <pattern>reset #object#</pattern>\r\n  <script>\r\n     if (HasAttribute(object, \"IsWorldObject\")) {\r\n      do (object, \"OnReset\")\r\n    }\r\n    else {\r\n      msg (\"You can't reset that object.\")\r\n    }\r\n  </script>\r\n</command>\r\n```\r\n\r\nIf `IsWorldObject` is a boolean attribute I'd probably change that line to `if (GetBoolean(object, \"IsWorldObject\")) {`.\r\n\r\nThat way, it will not throw an error if the attribute does not exist. It will only return `true` if it is a boolean attribute that is set to `true`. Otherwise, it would return `false`.\r\n\r\nI'd have to see all the code to approve of this line: `do (object, \"OnReset\")`\r\n\r\n> I think the idea of using AI to write the code might be good, but the results would need to be assessed closely.\r\n\r\nExactly. `:)`\r\n\r\n---\r\nPS\r\n\r\nSorry about editing your posts. I was too interested to stop myself, and the forum is funny when it comes to sharing code with `<>`.",
      "EditableFormat": "markdown",
      "HTML": "<p><code>if (game.wt_InitError == False) {</code></p>\n<p>Well, it seems to be trying to help, but Quest scripts never use <code>==</code>. It's always <code>=</code>.</p>\n<p>JavaScript has <code>==</code>, but not Quest.</p>\n<hr>\n<p>I edited <a href=\"https://textadventures.co.uk/forum/quest/topic/i-wl5efmlueaiyz8beeyaa/fyi-microsoft-copilot-can-write-aslx-files-and-has-found-errors#252e9254-9753-4b88-90f7-af1592960074\">this post of yours</a> to illustrate how to post that code.</p>\n<p>So it says:</p>\n<pre><code>&lt;command name=\"reset\"&gt;\n  &lt;pattern&gt;reset #object#&lt;/pattern&gt;\n  &lt;script&gt;\n     if (HasAttribute(object, \"IsWorldObject\")) {\n      do (object, \"OnReset\")\n    }\n    else {\n      msg (\"You can't reset that object.\")\n    }\n  &lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n<p>If <code>IsWorldObject</code> is a boolean attribute I'd probably change that line to <code>if (GetBoolean(object, \"IsWorldObject\")) {</code>.</p>\n<p>That way, it will not throw an error if the attribute does not exist. It will only return <code>true</code> if it is a boolean attribute that is set to <code>true</code>. Otherwise, it would return <code>false</code>.</p>\n<p>I'd have to see all the code to approve of this line: <code>do (object, \"OnReset\")</code></p>\n<blockquote>\n<p>I think the idea of using AI to write the code might be good, but the results would need to be assessed closely.</p>\n</blockquote>\n<p>Exactly. <code>:)</code></p>\n<hr>\n<p>PS</p>\n<p>Sorry about editing your posts. I was too interested to stop myself, and the forum is funny when it comes to sharing code with <code>&lt;&gt;</code>.</p>\n\n",
      "PostDate": "2024-11-12T22:31:05.7734915Z",
      "LastEditDate": "2024-11-12T22:43:26.7020582Z",
      "link": null
    }
  ]
}
