{
  "Topic": {
    "TopicId": "berzvdpnakomoryltnnaig",
    "ForumId": "10",
    "Title": "Functions",
    "LastUpdated": "2017-07-15T08:37:18.4133804Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "ee695135-2b25-4438-b01a-609e3c88f9e2",
      "UserId": 316011,
      "Username": "NinjaNin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/404cc44b9e0a72308fe02e5a99b23aa4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So I'm at another roadblock. I'm on the next part of the tutorial and am having problems with the function. I can get the function to run through but it's like looking at bob is the same as using the defibrillator. I have the function set up pretty good, not getting any error messages, but I can't look at bob and use the defibrillator.  I kept Bob's description the same with the flagging. \r\n\r\nLooking at him brings up the message he's lying still and trying to use the object on him brings up you already revived bob, which is what I put for the message.  Can anyone tell me what I need to do? The tutorial is really good but sometimes it feels like they miss some basic things or gloss over details.  ",
      "EditableFormat": "markdown",
      "HTML": "<p>So I'm at another roadblock. I'm on the next part of the tutorial and am having problems with the function. I can get the function to run through but it's like looking at bob is the same as using the defibrillator. I have the function set up pretty good, not getting any error messages, but I can't look at bob and use the defibrillator.  I kept Bob's description the same with the flagging.</p>\n<p>Looking at him brings up the message he's lying still and trying to use the object on him brings up you already revived bob, which is what I put for the message.  Can anyone tell me what I need to do? The tutorial is really good but sometimes it feels like they miss some basic things or gloss over details.</p>\n\n",
      "PostDate": "2017-07-15T08:37:18.4133804Z",
      "LastEditDate": "2017-07-15T08:40:46.0836519Z",
      "link": null
    },
    {
      "PostId": "e101d280-fb68-4f14-9be8-53c074d9f6ff",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Have you changed the 'look at bob' to an 'if... then... else...' script. Sometimes it's best to check spelling of flags, even capital letters",
      "EditableFormat": "markdown",
      "HTML": "<p>Have you changed the 'look at bob' to an 'if... then... else...' script. Sometimes it's best to check spelling of flags, even capital letters</p>\n\n",
      "PostDate": "2017-07-15T08:44:53.5103402Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "de37eb78-c78d-4bcf-b8a8-4f91037457b9",
      "UserId": 316011,
      "Username": "NinjaNin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/404cc44b9e0a72308fe02e5a99b23aa4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yea, I changed the look at bob to the if... then... else script. It works when I look at bob. But it seems the game takes looking at bob the same as using the defibrillator on him. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Yea, I changed the look at bob to the if... then... else script. It works when I look at bob. But it seems the game takes looking at bob the same as using the defibrillator on him.</p>\n\n",
      "PostDate": "2017-07-15T09:06:04.4767468Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "06f11c0f-9fea-4bc7-899a-adde5e6d651b",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm not totally sure what the tutorial says to do, but it seems like this question/problem pops up now and again.  \r\n\r\nHere is what I would do to achieve desired effect:\r\n1.  On defib object, select 'use on other object'\r\n2.  Choose Bob as other object\r\n3.  In the script for this, place an If script and choose 'If object Bob has flag alive' THEN print message \"You cannot use a defib on someone who is alive and well!\" (or like message).  In the Else part of this script, run your print message script reviving Bob AND set flag on object Bob and name it 'alive'.\r\n4.  In the look at description for Bob, place an If script and check for the 'alive' flag.  If object Bob has flag 'alive', then print message \"Bob is alive.  Well done!\" ELSE print message \"Bob ain't looking so good.\"\r\n\r\nI know you probably already know how to do this, but I typically reserve functions for actions that can be triggered through multiple inputs.\r\n\r\nAs an example, I might use a function to respond to the player typing \"Ask [insert NPC name here] about treasure\" and if you want multiple NPCs to respond the same way (or, more advanced, pull from a set of seemingly random responses) you might be better served calling a function.  This is a pretty lame example, but I think you understand what I mean.  Bottom line, I use functions to clean-up and organize multiple responses.  I would never use it for a simple instance like reviving Bob.\r\n\r\nAs I ramble on... in fact, in a real game, I would likely use a \"second\" Bob entirely.  When you use the defib on the \"dead Bob\" I would remove object Bob from game and make Bob1 (alias Bob) visible.  This way, you can talk to Bob and ask him all sorts of questions and you wouldn't have to fiddle with IF/THEN scripts for every new thing the \"dead Bob\" couldn't do!  =)",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not totally sure what the tutorial says to do, but it seems like this question/problem pops up now and again.</p>\n<p>Here is what I would do to achieve desired effect:</p>\n<ol>\n<li>On defib object, select 'use on other object'</li>\n<li>Choose Bob as other object</li>\n<li>In the script for this, place an If script and choose 'If object Bob has flag alive' THEN print message \"You cannot use a defib on someone who is alive and well!\" (or like message).  In the Else part of this script, run your print message script reviving Bob AND set flag on object Bob and name it 'alive'.</li>\n<li>In the look at description for Bob, place an If script and check for the 'alive' flag.  If object Bob has flag 'alive', then print message \"Bob is alive.  Well done!\" ELSE print message \"Bob ain't looking so good.\"</li>\n</ol>\n<p>I know you probably already know how to do this, but I typically reserve functions for actions that can be triggered through multiple inputs.</p>\n<p>As an example, I might use a function to respond to the player typing \"Ask [insert NPC name here] about treasure\" and if you want multiple NPCs to respond the same way (or, more advanced, pull from a set of seemingly random responses) you might be better served calling a function.  This is a pretty lame example, but I think you understand what I mean.  Bottom line, I use functions to clean-up and organize multiple responses.  I would never use it for a simple instance like reviving Bob.</p>\n<p>As I ramble on... in fact, in a real game, I would likely use a \"second\" Bob entirely.  When you use the defib on the \"dead Bob\" I would remove object Bob from game and make Bob1 (alias Bob) visible.  This way, you can talk to Bob and ask him all sorts of questions and you wouldn't have to fiddle with IF/THEN scripts for every new thing the \"dead Bob\" couldn't do!  =)</p>\n\n",
      "PostDate": "2017-07-15T11:13:12.1307333Z",
      "LastEditDate": "2017-07-15T11:14:33.2825158Z",
      "link": null
    },
    {
      "PostId": "b32ba452-cfde-4464-b41e-ab6f253e0c65",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\n     <object name=\"defibrillator\">\r\n        <inherit name=\"editor_object\" />\r\n        <look>A heart defibrillator can magically revive a dead person, if all those hospital dramas are to be believed.</look>\r\n        <take />\r\n        <use type=\"script\">\r\n          if (player.parent = lounge) {\r\n            revive Bob\r\n          }\r\n          else {\r\n            msg (\"You're not even remotely close enough to place the defibrillator on Bob's chest.\")\r\n          }\r\n        </use>\r\n      </object>\r\n```\r\n\r\n-------------------------\r\n\r\n```\r\n    <object name=\"Bob\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"male\" />\r\n      <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n      <alt type=\"list\"></alt>\r\n      <look type=\"script\">\r\n        if (GetBoolean(Bob, \"alive\")) {\r\n          msg (\"Bob is sitting up, appearing to feel somewhat under the weather.\")\r\n        }\r\n        else {\r\n          msg (\"Bob is lying on the floor, a lot more still than usual.\")\r\n        }\r\n      </look>\r\n      <askdefault type=\"script\">\r\n        if (GetBoolean(Bob, \"alive\")) {\r\n          msg (\"I can't help you, sorry.\")\r\n        }\r\n        else {\r\n          msg (\"He is dead, you won't get an answer from him.\")\r\n        }\r\n      </askdefault>\r\n      <useon type=\"scriptdictionary\">\r\n        <item key=\"defibrillator\">\r\n          revive Bob\r\n        </item>\r\n      </useon>\r\n      <tell type=\"scriptdictionary\" />\r\n      <ask type=\"scriptdictionary\">\r\n        <item key=\"heart attack cardiac arrest\">\r\n          if (GetBoolean(Bob, \"alive\")) {\r\n            msg (\"Well, one moment I was sitting there, feeling pretty happy with myself after eating my afternoon snack - a cheeseburger, pizza and ice cream pie, smothered in bacon, which I'd washed down with a bucket of coffee and six cans of Red Bull - when all of a sudden, I was in terrible pain, and then everything was peaceful. Then you came along.\")\r\n          }\r\n          else {\r\n            msg (\"He is dead, you won't get an answer from him.\")\r\n          }\r\n        </item>\r\n      </ask>\r\n    </object>\r\n```\r\n\r\n---------------------\r\n\r\n```\r\n<function name=\"revive Bob\">\r\n    if (GetBoolean(Bob, \"alive\")) {\r\n      msg (\"Bob is already alive.\")\r\n    }\r\n    else {\r\n      msg (\"Miraculously, the defibrillator lived up to its promise, and Bob is now alive again. He says his head feels kind of fuzzy.\")\r\n      SetObjectFlagOn (Bob, \"alive\")\r\n    }\r\n  </function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>     &lt;object name=\"defibrillator\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;look&gt;A heart defibrillator can magically revive a dead person, if all those hospital dramas are to be believed.&lt;/look&gt;\n        &lt;take /&gt;\n        &lt;use type=\"script\"&gt;\n          if (player.parent = lounge) {\n            revive Bob\n          }\n          else {\n            msg (\"You're not even remotely close enough to place the defibrillator on Bob's chest.\")\n          }\n        &lt;/use&gt;\n      &lt;/object&gt;\n</code></pre>\n<hr>\n<pre><code>    &lt;object name=\"Bob\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"male\" /&gt;\n      &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n      &lt;alt type=\"list\"&gt;&lt;/alt&gt;\n      &lt;look type=\"script\"&gt;\n        if (GetBoolean(Bob, \"alive\")) {\n          msg (\"Bob is sitting up, appearing to feel somewhat under the weather.\")\n        }\n        else {\n          msg (\"Bob is lying on the floor, a lot more still than usual.\")\n        }\n      &lt;/look&gt;\n      &lt;askdefault type=\"script\"&gt;\n        if (GetBoolean(Bob, \"alive\")) {\n          msg (\"I can't help you, sorry.\")\n        }\n        else {\n          msg (\"He is dead, you won't get an answer from him.\")\n        }\n      &lt;/askdefault&gt;\n      &lt;useon type=\"scriptdictionary\"&gt;\n        &lt;item key=\"defibrillator\"&gt;\n          revive Bob\n        &lt;/item&gt;\n      &lt;/useon&gt;\n      &lt;tell type=\"scriptdictionary\" /&gt;\n      &lt;ask type=\"scriptdictionary\"&gt;\n        &lt;item key=\"heart attack cardiac arrest\"&gt;\n          if (GetBoolean(Bob, \"alive\")) {\n            msg (\"Well, one moment I was sitting there, feeling pretty happy with myself after eating my afternoon snack - a cheeseburger, pizza and ice cream pie, smothered in bacon, which I'd washed down with a bucket of coffee and six cans of Red Bull - when all of a sudden, I was in terrible pain, and then everything was peaceful. Then you came along.\")\n          }\n          else {\n            msg (\"He is dead, you won't get an answer from him.\")\n          }\n        &lt;/item&gt;\n      &lt;/ask&gt;\n    &lt;/object&gt;\n</code></pre>\n<hr>\n<pre><code>&lt;function name=\"revive Bob\"&gt;\n    if (GetBoolean(Bob, \"alive\")) {\n      msg (\"Bob is already alive.\")\n    }\n    else {\n      msg (\"Miraculously, the defibrillator lived up to its promise, and Bob is now alive again. He says his head feels kind of fuzzy.\")\n      SetObjectFlagOn (Bob, \"alive\")\n    }\n  &lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2017-07-15T23:10:37.3486846Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ee43fbec-283b-4ed5-8db3-73474fa1e54c",
      "UserId": 316011,
      "Username": "NinjaNin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/404cc44b9e0a72308fe02e5a99b23aa4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I didn't know how to do that exactly but it's a good idea. to be honest I just want to figure out how to use the functions. \r\n\r\nEdit: So a few hours later reading through the whole tutorial again I realized that I had another flag on the second part of Bob's description and that's what was messing me up. Thank you everyone for your replies though. Now can someone help me on the part of where you can only use the difib in the same room as bob? \r\n\r\nEdit 2: Wait never mind thank you so much for the help! ",
      "EditableFormat": "markdown",
      "HTML": "<p>I didn't know how to do that exactly but it's a good idea. to be honest I just want to figure out how to use the functions.</p>\n<p>Edit: So a few hours later reading through the whole tutorial again I realized that I had another flag on the second part of Bob's description and that's what was messing me up. Thank you everyone for your replies though. Now can someone help me on the part of where you can only use the difib in the same room as bob?</p>\n<p>Edit 2: Wait never mind thank you so much for the help!</p>\n\n",
      "PostDate": "2017-07-16T03:49:50.8017Z",
      "LastEditDate": "2017-07-16T03:53:43.2158119Z",
      "link": null
    },
    {
      "PostId": "19eb05fe-f7ca-49e8-8796-37450558e21f",
      "UserId": 316011,
      "Username": "NinjaNin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/404cc44b9e0a72308fe02e5a99b23aa4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wait never mind im still confused on how to make it check for where the player is in the room or not. Right now it just gives me two messages. One where it says you cant use the defib on bob, and the message where you revive him. Where do I put in the extra if command if I'm using Functions?\r\n\r\nEdit: I put the script in the function I had and put it as an Else If player is not in lounge. Would it work the same way if I said Player is in the lounge or is that the hard way around? Either way I seem to have done it, finally. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Wait never mind im still confused on how to make it check for where the player is in the room or not. Right now it just gives me two messages. One where it says you cant use the defib on bob, and the message where you revive him. Where do I put in the extra if command if I'm using Functions?</p>\n<p>Edit: I put the script in the function I had and put it as an Else If player is not in lounge. Would it work the same way if I said Player is in the lounge or is that the hard way around? Either way I seem to have done it, finally.</p>\n\n",
      "PostDate": "2017-07-16T04:01:11.2553434Z",
      "LastEditDate": "2017-07-16T04:20:37.7349945Z",
      "link": null
    },
    {
      "PostId": "cc396b61-e625-44b2-b829-5d8e61942f33",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "here's an explanation on the built-in 'parent' Object (reference/pointer) Attribute:\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/edvc3mylr0amfxqz-ac65w/objects-in-libraries#04260348-4da3-41aa-a765-120f654a87c3\r\n\r\nif confused, let me know, and I'll try to explain it in hopefully a less confusing way, lol.\r\n\r\n-----------\r\n\r\nyou can use this to do some fancy coding, such as a 'following effect' action:\r\n\r\n```\r\n// team_member.parent = room // team member is currently in the 'room' Room Object\r\n// player.parent = room2 // you are currently in the 'room2' Room Object\r\n\r\nif (not team_member.parent = player.parent) // if the team member isn't in the same room as you\r\n  team_member.parent = player.parent // set/place/put/move team member into the same room as you\r\n}\r\n\r\n// result:\r\n//\r\n// team_member.parent = room 2// team member is currently in the 'room2' Room Object\r\n// player.parent = room2 // you are currently in the 'room2' Room Object\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>here's an explanation on the built-in 'parent' Object (reference/pointer) Attribute:</p>\n<p>http://textadventures.co.uk/forum/samples/topic/edvc3mylr0amfxqz-ac65w/objects-in-libraries#04260348-4da3-41aa-a765-120f654a87c3</p>\n<p>if confused, let me know, and I'll try to explain it in hopefully a less confusing way, lol.</p>\n<hr>\n<p>you can use this to do some fancy coding, such as a 'following effect' action:</p>\n<pre><code>// team_member.parent = room // team member is currently in the 'room' Room Object\n// player.parent = room2 // you are currently in the 'room2' Room Object\n\nif (not team_member.parent = player.parent) // if the team member isn't in the same room as you\n  team_member.parent = player.parent // set/place/put/move team member into the same room as you\n}\n\n// result:\n//\n// team_member.parent = room 2// team member is currently in the 'room2' Room Object\n// player.parent = room2 // you are currently in the 'room2' Room Object\n</code></pre>\n\n",
      "PostDate": "2017-07-16T06:28:11.6293848Z",
      "LastEditDate": "2017-07-16T06:33:22.1816917Z",
      "link": null
    },
    {
      "PostId": "0ccafedc-1909-4c2c-84e7-3960e9f1621d",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi NinjaNin, personally, I'd put an 'If object is visable' script on Bob in the 'Revive Bob' function, just in case he starts wandering around and has another attack, then it wouldn't matter if he was in the Lounge or Kitchen.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi NinjaNin, personally, I'd put an 'If object is visable' script on Bob in the 'Revive Bob' function, just in case he starts wandering around and has another attack, then it wouldn't matter if he was in the Lounge or Kitchen.</p>\n\n",
      "PostDate": "2017-07-16T08:05:57.4343812Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "12630ea6-e488-4db4-a5f1-55cc514c7f4d",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "'calling' (using/doing) the 'Function' Element:\r\n\r\nin the GUI/Editor:\r\n\r\nrun as script -> add new script -> 'scripts' section/category -> 'call function' Script -> (see below)\r\n\r\nCall function NAME_OF_THE_FUNCTION_YOU_WANT_TO_USE/DO/CALL With parameter (inputs/arguments to be stored into the Parameter VARIABLE to be used by the Function's scripting): (our Function's scripting doesn't use any inputs, so do NOT 'ADD' in any inputs/arguments'parameters)\r\n\r\nin code: literally type in the name of the function, for example:\r\n\r\n```\r\n// blah blah blah required stuff\r\n\r\n<game name=\"example_game\">\r\n  // the special 'game.start' Script Attribute is the first thing done when the game begins, making it great for character creation and/or a game introduction:\r\n  <attr name=\"start\" type=\"script\">\r\n    hi_function // this is a use (a 'function call') of the 'hi_function' Function\r\n    hi_function // this is another use of the Function, we can use/call Functions from anywhere that does scripting throughout our entire game code, we can have an npc Object that upon talking to it, uses the 'hi_function' Function. This global/game-wide usage of Functions make them more easy for people to use. Though, when you got really big complex games, than it can be better to use Objects and Script Attributes (and Delegates for them, so they have the same ability as Functions do: Arguments/inputs into Parameters, and being able to return a Value).\r\n  </attr>\r\n</game>\r\n\r\n// this is the 'definition' (creation) of the Function, aka setting it up / what it does:\r\n\r\n<function name=\"hi_function\">\r\n  msg (\"hi\")\r\n</function>\r\n\r\n// blah blah blah required stuff\r\n```\r\n\r\n-------------\r\n\r\nsimple example of using a Function's ability to return a Value:\r\n\r\n```\r\n<game name=\"example_game\">\r\n  <attr name=\"start\" type=\"script\">\r\n    player.alias = name_function\r\n  </attr>\r\n</game>\r\n\r\n<function name=\"name_function\" type=\"string\"> // 'type' means 'return type' in this case (quest has to be told what Data Type the Value returned by the Function is, as it needs to know, as it matters)\r\n  msg (\"What is your name?\")\r\n  get input {\r\n    // quest automatically (hidden from you) does this: result = YOUR_INPUT\r\n    return (result)\r\n  }\r\n</function>\r\n```\r\n\r\n---------------------\r\n\r\nsimple (and very impractical/bad, lol) example of using Arguments/Parameters:\r\n\r\n```\r\n<game name=\"example_game\">\r\n  <attr name=\"start\" type=\"script\">\r\n    msg (\"What is your name?\")\r\n    get input {\r\n      name_function (result)\r\n      msg (player.alias)\r\n    }\r\n  </attr>\r\n</game>\r\n\r\n// what is going on:\r\n// player.alias <==== string_parameter <=== result <==== YOUR_INPUT\r\n\r\n<function name=\"name_function\" parameters=\"string_parameter\">\r\n  player.alias = string_parameter\r\n</function>\r\n```\r\n\r\n-------\r\n\r\ntoo lazy to write/code an exmaple, but you can do both (Arguments/Parameters and have a return type) as well with your Functions.",
      "EditableFormat": "markdown",
      "HTML": "<p>'calling' (using/doing) the 'Function' Element:</p>\n<p>in the GUI/Editor:</p>\n<p>run as script -&gt; add new script -&gt; 'scripts' section/category -&gt; 'call function' Script -&gt; (see below)</p>\n<p>Call function NAME_OF_THE_FUNCTION_YOU_WANT_TO_USE/DO/CALL With parameter (inputs/arguments to be stored into the Parameter VARIABLE to be used by the Function's scripting): (our Function's scripting doesn't use any inputs, so do NOT 'ADD' in any inputs/arguments'parameters)</p>\n<p>in code: literally type in the name of the function, for example:</p>\n<pre><code>// blah blah blah required stuff\n\n&lt;game name=\"example_game\"&gt;\n  // the special 'game.start' Script Attribute is the first thing done when the game begins, making it great for character creation and/or a game introduction:\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    hi_function // this is a use (a 'function call') of the 'hi_function' Function\n    hi_function // this is another use of the Function, we can use/call Functions from anywhere that does scripting throughout our entire game code, we can have an npc Object that upon talking to it, uses the 'hi_function' Function. This global/game-wide usage of Functions make them more easy for people to use. Though, when you got really big complex games, than it can be better to use Objects and Script Attributes (and Delegates for them, so they have the same ability as Functions do: Arguments/inputs into Parameters, and being able to return a Value).\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n// this is the 'definition' (creation) of the Function, aka setting it up / what it does:\n\n&lt;function name=\"hi_function\"&gt;\n  msg (\"hi\")\n&lt;/function&gt;\n\n// blah blah blah required stuff\n</code></pre>\n<hr>\n<p>simple example of using a Function's ability to return a Value:</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    player.alias = name_function\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;function name=\"name_function\" type=\"string\"&gt; // 'type' means 'return type' in this case (quest has to be told what Data Type the Value returned by the Function is, as it needs to know, as it matters)\n  msg (\"What is your name?\")\n  get input {\n    // quest automatically (hidden from you) does this: result = YOUR_INPUT\n    return (result)\n  }\n&lt;/function&gt;\n</code></pre>\n<hr>\n<p>simple (and very impractical/bad, lol) example of using Arguments/Parameters:</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    msg (\"What is your name?\")\n    get input {\n      name_function (result)\n      msg (player.alias)\n    }\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n// what is going on:\n// player.alias &lt;==== string_parameter &lt;=== result &lt;==== YOUR_INPUT\n\n&lt;function name=\"name_function\" parameters=\"string_parameter\"&gt;\n  player.alias = string_parameter\n&lt;/function&gt;\n</code></pre>\n<hr>\n<p>too lazy to write/code an exmaple, but you can do both (Arguments/Parameters and have a return type) as well with your Functions.</p>\n\n",
      "PostDate": "2017-07-16T08:23:02.960731Z",
      "LastEditDate": "2017-07-16T08:34:19.7027637Z",
      "link": null
    },
    {
      "PostId": "7fac54db-2727-4354-b538-589fca861c2f",
      "UserId": 26011,
      "Username": "onimike",
      "AvatarUrl": "http://i.imgur.com/yL1GRWab.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here is what you do, make def object under features mark use/give. Now goto Use/Give tab and select use this on (other object), select Handle objects individually. Add Bob to the object to handle then under script go to code view and add this\r\n\r\n```\r\nif (Bob.parent = player.parent) {\r\n  if (not GetBoolean(Bob, \"alive\")) {\r\n    msg (\"It seems to have worked Bob is recovering.\")\r\n    SetObjectFlagOn (Bob, \"alive\")\r\n  }\r\n  else {\r\n    msg (\"Bob is already alive no sence to use this.\")\r\n  }\r\n}\r\nelse {\r\n  msg (\"You need to be in same room as person you want to use this on.\")\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Here is what you do, make def object under features mark use/give. Now goto Use/Give tab and select use this on (other object), select Handle objects individually. Add Bob to the object to handle then under script go to code view and add this</p>\n<pre><code>if (Bob.parent = player.parent) {\n  if (not GetBoolean(Bob, \"alive\")) {\n    msg (\"It seems to have worked Bob is recovering.\")\n    SetObjectFlagOn (Bob, \"alive\")\n  }\n  else {\n    msg (\"Bob is already alive no sence to use this.\")\n  }\n}\nelse {\n  msg (\"You need to be in same room as person you want to use this on.\")\n}\n</code></pre>\n\n",
      "PostDate": "2017-07-17T12:39:26.9693585Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e9a5be0a-6f63-4721-a606-a650f32816df",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/4DfRYkpb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**SOLVED**\r\n\r\nWhen calling a function, I noticed an error about not recognizing the (this.attribute) I used in the function. Is there a way to carry a specific attribute value over to a general function so it will recognize this.attribute?\r\nHope that's understandable.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>SOLVED</strong></p>\n<p>When calling a function, I noticed an error about not recognizing the (this.attribute) I used in the function. Is there a way to carry a specific attribute value over to a general function so it will recognize this.attribute?<br>\nHope that's understandable.</p>\n\n",
      "PostDate": "2017-08-04T15:45:14.8511297Z",
      "LastEditDate": "2017-08-04T20:13:05.3428792Z",
      "link": null
    },
    {
      "PostId": "058ee7e0-8931-49fa-83c1-45faa87c4362",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the special 'this' key-word/key-command GETS the parent Object of the scripting it's used in, hence the error:\r\n\r\nexample_function (this.attribute)\r\n// example_function (example_function.attribute) // or: example_function (UNKNOWN/NULL.attribute)\r\n// ERROR!\r\n\r\nyou just can NOT use 'this' for this (bad pun) type of stuff\r\n\r\n------------------\r\n\r\n```\r\n<game name=\"example_game\">\r\n  <attr name=\"state_integer_attribute\" type=\"int\">1</attr>\r\n  <attr name=\"start\"> type=\"script\">\r\n    example_function_1 (game.state_integer_attribute)\r\n    // output:\r\n    // 1\r\n    // 2\r\n    // 3\r\n    // NO error\r\n  </attr>\r\n</game>\r\n\r\n<function name=\"example_function_1\" parameters=\"game_state_parameter_1\">\r\n  msg (game_state_parameter_1)\r\n  game_state_parameter_1 = game_state_parameter_1 + 1\r\n  example_function_2 (game_state_parameter_1)\r\n</function>\r\n\r\n<function name=\"example_function_2\" parameters=\"game_state_parameter_2\">\r\n  msg (game_state_parameter_2)\r\n  game_state_parameter_2 = game_state_parameter_2 + 1\r\n  example_function_3 (game_state_parameter_2)\r\n</function>\r\n\r\n<function name=\"example_function_3\" parameters=\"game_state_parameter_3\">\r\n  msg (game_state_parameter_3)\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>the special 'this' key-word/key-command GETS the parent Object of the scripting it's used in, hence the error:</p>\n<p>example_function (this.attribute)<br>\n// example_function (example_function.attribute) // or: example_function (UNKNOWN/NULL.attribute)<br>\n// ERROR!</p>\n<p>you just can NOT use 'this' for this (bad pun) type of stuff</p>\n<hr>\n<pre><code>&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"state_integer_attribute\" type=\"int\"&gt;1&lt;/attr&gt;\n  &lt;attr name=\"start\"&gt; type=\"script\"&gt;\n    example_function_1 (game.state_integer_attribute)\n    // output:\n    // 1\n    // 2\n    // 3\n    // NO error\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;function name=\"example_function_1\" parameters=\"game_state_parameter_1\"&gt;\n  msg (game_state_parameter_1)\n  game_state_parameter_1 = game_state_parameter_1 + 1\n  example_function_2 (game_state_parameter_1)\n&lt;/function&gt;\n\n&lt;function name=\"example_function_2\" parameters=\"game_state_parameter_2\"&gt;\n  msg (game_state_parameter_2)\n  game_state_parameter_2 = game_state_parameter_2 + 1\n  example_function_3 (game_state_parameter_2)\n&lt;/function&gt;\n\n&lt;function name=\"example_function_3\" parameters=\"game_state_parameter_3\"&gt;\n  msg (game_state_parameter_3)\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2017-08-04T17:18:12.3371575Z",
      "LastEditDate": "2017-08-04T17:23:19.9623642Z",
      "link": null
    },
    {
      "PostId": "35813126-d4ce-47bb-a8ee-bd32ac1d09c8",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/4DfRYkpb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "*** SOLVED***\r\nHere's the eat verb:\r\n```\r\nif (this.dead) {\r\n  eat_it4\r\n  destroy (this.name)\r\n  msg (this.deadeatmessage)\r\n}\r\n```\r\nI'll end up put more into the verb later.\r\n\r\nHere's the eat_it4 function:\r\n```\r\n<function name=\"eat_it4\"><![CDATA[\r\n    s = player.hitpoints + 4\r\n    player.hitpoints = s\r\n    UpdateHitPoints\r\n    if (player.hitpoints > player.maxpoints) {\r\n      player.hitpoints = player.maxpoints\r\n    }\r\n  ]]></function>\r\n```\r\nIt was _maxpoints_ not maxhitpoints. The cdata did work...\r\nThanks for the info.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>*** SOLVED***<br>\nHere's the eat verb:</p>\n<pre><code>if (this.dead) {\n  eat_it4\n  destroy (this.name)\n  msg (this.deadeatmessage)\n}\n</code></pre>\n<p>I'll end up put more into the verb later.</p>\n<p>Here's the eat_it4 function:</p>\n<pre><code>&lt;function name=\"eat_it4\"&gt;&lt;![CDATA[\n    s = player.hitpoints + 4\n    player.hitpoints = s\n    UpdateHitPoints\n    if (player.hitpoints &gt; player.maxpoints) {\n      player.hitpoints = player.maxpoints\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<p>It was <em>maxpoints</em> not maxhitpoints. The cdata did work...<br>\nThanks for the info.</p>\n\n",
      "PostDate": "2017-08-04T18:51:35.5115516Z",
      "LastEditDate": "2017-08-04T20:19:17.2826476Z",
      "link": null
    },
    {
      "PostId": "6c6e35ea-8529-4eb9-86b8-b5602a1c2838",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/4DfRYkpb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'll just make 3 functions that add different int to hitpoints and only have 3 different eatpoints say, 4, 8, 12, for small, medium, large objects.\r\nName the functions\r\neat_it4\r\neat_it8\r\neat_it12",
      "EditableFormat": "markdown",
      "HTML": "<p>I'll just make 3 functions that add different int to hitpoints and only have 3 different eatpoints say, 4, 8, 12, for small, medium, large objects.<br>\nName the functions<br>\neat_it4<br>\neat_it8<br>\neat_it12</p>\n\n",
      "PostDate": "2017-08-04T20:22:49.3603124Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0b2ea426-4ec3-4115-a0ac-6c99fe85f11f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you can do this (I think it'll work as the scripting is a Script Attribute, which means it has a parent Object: the 'katana' Object...,but  if it gives you an error, let me know, so I'll know it just can't be done with 'this' at all no matter what):\r\n\r\n```\r\n<object name=\"katana\">\r\n  <attr name=\"damage\" type=\"int\">50</attr>\r\n  <attr name=\"attack\" type=\"script\">\r\n    attack_function (this.damage)\r\n  </attr>\r\n</object>\r\n\r\n<function name=\"attack_function\" parameter=\"example_parameter\">\r\n  msg (\"Weapon Damage: \" + example_parameter)\r\n  // output: Weapon Damage: 50\r\n</function>\r\n```\r\n\r\n----------------\r\n\r\nif you rather, you can learn how Delegates work, letting you use Objects and their Script Attributes, being able to function as Functions: Parameters/Arguments/inputs and/or returning a value (of a specific data type).\r\n\r\nI can help you with learning to use delegates, if you're interested, as being able to use Objects (everything can be self-contained within them: they're \"local\": encapsulation/compartmentalization/organized-structurally) is much more nice than global (messy) Functions.",
      "EditableFormat": "markdown",
      "HTML": "<p>you can do this (I think it'll work as the scripting is a Script Attribute, which means it has a parent Object: the 'katana' Object...,but  if it gives you an error, let me know, so I'll know it just can't be done with 'this' at all no matter what):</p>\n<pre><code>&lt;object name=\"katana\"&gt;\n  &lt;attr name=\"damage\" type=\"int\"&gt;50&lt;/attr&gt;\n  &lt;attr name=\"attack\" type=\"script\"&gt;\n    attack_function (this.damage)\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;function name=\"attack_function\" parameter=\"example_parameter\"&gt;\n  msg (\"Weapon Damage: \" + example_parameter)\n  // output: Weapon Damage: 50\n&lt;/function&gt;\n</code></pre>\n<hr>\n<p>if you rather, you can learn how Delegates work, letting you use Objects and their Script Attributes, being able to function as Functions: Parameters/Arguments/inputs and/or returning a value (of a specific data type).</p>\n<p>I can help you with learning to use delegates, if you're interested, as being able to use Objects (everything can be self-contained within them: they're \"local\": encapsulation/compartmentalization/organized-structurally) is much more nice than global (messy) Functions.</p>\n\n",
      "PostDate": "2017-08-05T01:00:12.2090754Z",
      "LastEditDate": "2017-08-05T01:03:32.1418199Z",
      "link": null
    },
    {
      "PostId": "f2ba8833-ae95-4ef0-a40f-413fdf336de5",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "try this (altered your code and added in more functionality:made-dynamic --- not fully: more can be done --- let me know if you want it to be even more dynamic, and made-up stuff for seeing as an example of how its used), and see if it works or not (let me know if it doesn't):\r\n\r\n```\r\n<object name=\"room\">\r\n  <inherit name=\"editor_room\" />\r\n</object>\r\n\r\n<object name=\"demon_cow\">\r\n\r\n  <inherit name=\"editor_object\" />\r\n\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  <attr name=\"alias\" type=\"string\">cow</attr>\r\n\r\n  <attr name=\"dead\" type=\"boolean\">false</attr>\r\n\r\n  <attr name=\"deadeatmessage\" type=\"string\">You ate the hamburger, MMMmmm, delicious!!!</attr>\r\n\r\n  <attr name=\"my_eat_script_attribute\" type=\"script\">\r\n    if (this.dead) {\r\n\r\n      msg (\"(TESTING) \" + game.pov.name + \" Hit Points: \" + game.pov.hitpoints)\r\n      msg (\"(TESTING) \" + game.pov.name + \" Max Points: \" + game.pov.maxpoints)\r\n\r\n      my_eat_function (game.pov, 4)\r\n\r\n      msg (\"(TESTING) \" + game.pov.name + \" Hit Points: \" + game.pov.hitpoints)\r\n      msg (\"(TESTING) \" + game.pov.name + \" Max Points: \" + game.pov.maxpoints)\r\n\r\n      my_eat_function (game.pov, 8)\r\n\r\n      msg (\"(TESTING) \" + game.pov.name + \" Hit Points: \" + game.pov.hitpoints)\r\n      msg (\"(TESTING) \" + game.pov.name + \" Max Points: \" + game.pov.maxpoints)\r\n\r\n      my_eat_function (game.pov, 12)\r\n\r\n      msg (\"(TESTING) \" + game.pov.name + \" Hit Points: \" + game.pov.hitpoints)\r\n      msg (\"(TESTING) \" + game.pov.name + \" Max Points: \" + game.pov.maxpoints)\r\n\r\n      msg (this.deadeatmessage) // this has to be done BEFORE you destroy the Object !!!!\r\n      destroy (this.name) // also, you might just want to remove it (sets its parent to 'null': directly a child of the 'asl' GAME OBJECT: NOT contained within another 'Object' Element) instead (as if this Object is ever referenced/used elsewhere in your code, you'll get an ERROR, as it's destroyed and thus doesn't exist, which quest is looking for, and thus can't find, and thus the ERROR): http://docs.textadventures.co.uk/quest/functions/corelibrary/removeobject.html : RemoveObject (this.name)\r\n    } else {\r\n      msg (\"Sorry, but the demon cow is not going to let you eat it, long as it lives...\")\r\n    }\r\n  </attr>\r\n\r\n</object>\r\n\r\n<object name=\"player_1\">\r\n\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  <attr name=\"hitpoints\" type=\"int\">500</attr>\r\n  <attr name=\"maxpoints\" type=\"int\">999</attr>\r\n\r\n</object>\r\n\r\n<object name=\"player_2\">\r\n\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  <attr name=\"hitpoints\" type=\"int\">300</attr>\r\n  <attr name=\"maxpoints\" type=\"int\">699</attr>\r\n\r\n</object>\r\n\r\n<function name=\"my_eat_function\" parameters=\"player_object_parameter_1, modifier_integer_parameter\">\r\n  player_object_parameter_1.hitpoints = player_object_parameter_1.hitpoints + modifier_integer_parameter\r\n  UpdateHitPoints (player_object_parameter_1)\r\n</function>\r\n\r\n<function name=\"updateHitPoints\" parameters=\"player_object_parameter_2\">\r\n  <![CDATA[\r\n    if (player_object_parameter_2.hitpoints > player_object_parameter_2.maxpoints) {\r\n      player_object_parameter_2.hitpoints = player_object_parameter_2.maxpoints\r\n    }\r\n  ]]>\r\n</function>\r\n\r\n<verb>\r\n  <property>my_eat_script_attribute</property>\r\n  <pattern>my_eat_script_attribute</pattern>\r\n  <defaultexpression>You can't eat that!</defaultexpression>\r\n</verb>\r\n```\r\n\r\n-------------\r\n\r\nalso, note that there's the special 'changedNAME_OF_ATTRIBUTE' Script Attribute (which IMMEDIATELY ACTS upon the specified Attribute's Value being changed, which can be good or bad... it can mess up your \"order of operations\", depending on your various coding designs/systems):\r\n\r\n```\r\n<object name=\"room\">\r\n  <inherit name=\"editor_room\" />\r\n</object>\r\n\r\n<object name=\"demon_cow\">\r\n\r\n  <inherit name=\"editor_object\" />\r\n\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  <attr name=\"alias\" type=\"string\">cow</attr>\r\n\r\n  <attr name=\"dead\" type=\"boolean\">false</attr>\r\n\r\n  <attr name=\"deadeatmessage\" type=\"string\">You ate the hamburger, MMMmmm, delicious!!!</attr> // this would be an example, of why/when you wouldn't want to use the special 'changed' Script attribute, as you likely have other stuff you want to do first, and thus not want to see the \"You ate the hamburger, MMMmmm, delicious!!!\" in the middle of those other things you're doing/displaying, lol\r\n\r\n  <attr name=\"my_eat_script_attribute\" type=\"script\">\r\n    if (this.dead) {\r\n\r\n      msg (\"(TESTING) \" + game.pov.name + \" Hit Points: \" + game.pov.hitpoints)\r\n      msg (\"(TESTING) \" + game.pov.name + \" Max Points: \" + game.pov.maxpoints)\r\n\r\n      my_eat_function (game.pov, 4)\r\n\r\n      msg (\"(TESTING) \" + game.pov.name + \" Hit Points: \" + game.pov.hitpoints)\r\n      msg (\"(TESTING) \" + game.pov.name + \" Max Points: \" + game.pov.maxpoints)\r\n\r\n      my_eat_function (game.pov, 8)\r\n\r\n      msg (\"(TESTING) \" + game.pov.name + \" Hit Points: \" + game.pov.hitpoints)\r\n      msg (\"(TESTING) \" + game.pov.name + \" Max Points: \" + game.pov.maxpoints)\r\n\r\n      my_eat_function (game.pov, 12)\r\n\r\n      msg (\"(TESTING) \" + game.pov.name + \" Hit Points: \" + game.pov.hitpoints)\r\n      msg (\"(TESTING) \" + game.pov.name + \" Max Points: \" + game.pov.maxpoints)\r\n\r\n      msg (this.deadeatmessage) // this has to be done BEFORE you destroy the Object !!!!!\r\n      destroy (this.name) // also, you might just want to remove it (sets its parent to 'null': directly a child of the 'asl' GAME OBJECT: NOT contained within another 'Object' Element) instead (as if this Object is ever referenced/used elsewhere in your code, you'll get an ERROR, as it's destroyed and thus doesn't exist, which quest is looking for, and thus can't find, and thus the ERROR): http://docs.textadventures.co.uk/quest/functions/corelibrary/removeobject.html : RemoveObject (this.name)\r\n    } else {\r\n      msg (\"Sorry, but the demon cow is not going to let you eat it, long as it lives...\")\r\n    }\r\n  </attr>\r\n\r\n</object>\r\n\r\n<object name=\"player_1\">\r\n\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  <attr name=\"maxpoints\" type=\"int\">500</attr>\r\n\r\n  <attr name=\"hitpoints\" type=\"int\">999</attr>\r\n\r\n  <attr name=\"changedhitpoints\" type=\"script\">\r\n    <![CDATA[\r\n      if (this.hitpoints > this.maxpoints) {\r\n       this.hitpoints = this.maxpoints\r\n      }\r\n    ]]>\r\n  </attr>\r\n\r\n</object>\r\n\r\n<object name=\"player_2\">\r\n\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  <attr name=\"maxpoints\" type=\"int\">300</attr>\r\n\r\n  <attr name=\"hitpoints\" type=\"int\">699</attr>\r\n\r\n  <attr name=\"changedhitpoints\" type=\"script\">\r\n    <![CDATA[\r\n      if (this.hitpoints > this.maxpoints) {\r\n       this.hitpoints = this.maxpoints\r\n      }\r\n    ]]>\r\n  </attr>\r\n\r\n</object>\r\n\r\n<function name=\"my_eat_function\" parameters=\"player_object_parameter, modifier_integer_parameter\">\r\n  player_object_parameter.hitpoints = player_object_parameter.hitpoints + modifier_integer_parameter\r\n</function>\r\n\r\n<verb>\r\n  <property>my_eat_script_attribute</property>\r\n  <pattern>my_eat_script_attribute</pattern>\r\n  <defaultexpression>You can't eat that!</defaultexpression>\r\n</verb>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>try this (altered your code and added in more functionality:made-dynamic --- not fully: more can be done --- let me know if you want it to be even more dynamic, and made-up stuff for seeing as an example of how its used), and see if it works or not (let me know if it doesn't):</p>\n<pre><code>&lt;object name=\"room\"&gt;\n  &lt;inherit name=\"editor_room\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"demon_cow\"&gt;\n\n  &lt;inherit name=\"editor_object\" /&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;attr name=\"alias\" type=\"string\"&gt;cow&lt;/attr&gt;\n\n  &lt;attr name=\"dead\" type=\"boolean\"&gt;false&lt;/attr&gt;\n\n  &lt;attr name=\"deadeatmessage\" type=\"string\"&gt;You ate the hamburger, MMMmmm, delicious!!!&lt;/attr&gt;\n\n  &lt;attr name=\"my_eat_script_attribute\" type=\"script\"&gt;\n    if (this.dead) {\n\n      msg (\"(TESTING) \" + game.pov.name + \" Hit Points: \" + game.pov.hitpoints)\n      msg (\"(TESTING) \" + game.pov.name + \" Max Points: \" + game.pov.maxpoints)\n\n      my_eat_function (game.pov, 4)\n\n      msg (\"(TESTING) \" + game.pov.name + \" Hit Points: \" + game.pov.hitpoints)\n      msg (\"(TESTING) \" + game.pov.name + \" Max Points: \" + game.pov.maxpoints)\n\n      my_eat_function (game.pov, 8)\n\n      msg (\"(TESTING) \" + game.pov.name + \" Hit Points: \" + game.pov.hitpoints)\n      msg (\"(TESTING) \" + game.pov.name + \" Max Points: \" + game.pov.maxpoints)\n\n      my_eat_function (game.pov, 12)\n\n      msg (\"(TESTING) \" + game.pov.name + \" Hit Points: \" + game.pov.hitpoints)\n      msg (\"(TESTING) \" + game.pov.name + \" Max Points: \" + game.pov.maxpoints)\n\n      msg (this.deadeatmessage) // this has to be done BEFORE you destroy the Object !!!!\n      destroy (this.name) // also, you might just want to remove it (sets its parent to 'null': directly a child of the 'asl' GAME OBJECT: NOT contained within another 'Object' Element) instead (as if this Object is ever referenced/used elsewhere in your code, you'll get an ERROR, as it's destroyed and thus doesn't exist, which quest is looking for, and thus can't find, and thus the ERROR): http://docs.textadventures.co.uk/quest/functions/corelibrary/removeobject.html : RemoveObject (this.name)\n    } else {\n      msg (\"Sorry, but the demon cow is not going to let you eat it, long as it lives...\")\n    }\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"player_1\"&gt;\n\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;attr name=\"hitpoints\" type=\"int\"&gt;500&lt;/attr&gt;\n  &lt;attr name=\"maxpoints\" type=\"int\"&gt;999&lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"player_2\"&gt;\n\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;attr name=\"hitpoints\" type=\"int\"&gt;300&lt;/attr&gt;\n  &lt;attr name=\"maxpoints\" type=\"int\"&gt;699&lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;function name=\"my_eat_function\" parameters=\"player_object_parameter_1, modifier_integer_parameter\"&gt;\n  player_object_parameter_1.hitpoints = player_object_parameter_1.hitpoints + modifier_integer_parameter\n  UpdateHitPoints (player_object_parameter_1)\n&lt;/function&gt;\n\n&lt;function name=\"updateHitPoints\" parameters=\"player_object_parameter_2\"&gt;\n  &lt;![CDATA[\n    if (player_object_parameter_2.hitpoints &gt; player_object_parameter_2.maxpoints) {\n      player_object_parameter_2.hitpoints = player_object_parameter_2.maxpoints\n    }\n  ]]&gt;\n&lt;/function&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;my_eat_script_attribute&lt;/property&gt;\n  &lt;pattern&gt;my_eat_script_attribute&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't eat that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n</code></pre>\n<hr>\n<p>also, note that there's the special 'changedNAME_OF_ATTRIBUTE' Script Attribute (which IMMEDIATELY ACTS upon the specified Attribute's Value being changed, which can be good or bad... it can mess up your \"order of operations\", depending on your various coding designs/systems):</p>\n<pre><code>&lt;object name=\"room\"&gt;\n  &lt;inherit name=\"editor_room\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"demon_cow\"&gt;\n\n  &lt;inherit name=\"editor_object\" /&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;attr name=\"alias\" type=\"string\"&gt;cow&lt;/attr&gt;\n\n  &lt;attr name=\"dead\" type=\"boolean\"&gt;false&lt;/attr&gt;\n\n  &lt;attr name=\"deadeatmessage\" type=\"string\"&gt;You ate the hamburger, MMMmmm, delicious!!!&lt;/attr&gt; // this would be an example, of why/when you wouldn't want to use the special 'changed' Script attribute, as you likely have other stuff you want to do first, and thus not want to see the \"You ate the hamburger, MMMmmm, delicious!!!\" in the middle of those other things you're doing/displaying, lol\n\n  &lt;attr name=\"my_eat_script_attribute\" type=\"script\"&gt;\n    if (this.dead) {\n\n      msg (\"(TESTING) \" + game.pov.name + \" Hit Points: \" + game.pov.hitpoints)\n      msg (\"(TESTING) \" + game.pov.name + \" Max Points: \" + game.pov.maxpoints)\n\n      my_eat_function (game.pov, 4)\n\n      msg (\"(TESTING) \" + game.pov.name + \" Hit Points: \" + game.pov.hitpoints)\n      msg (\"(TESTING) \" + game.pov.name + \" Max Points: \" + game.pov.maxpoints)\n\n      my_eat_function (game.pov, 8)\n\n      msg (\"(TESTING) \" + game.pov.name + \" Hit Points: \" + game.pov.hitpoints)\n      msg (\"(TESTING) \" + game.pov.name + \" Max Points: \" + game.pov.maxpoints)\n\n      my_eat_function (game.pov, 12)\n\n      msg (\"(TESTING) \" + game.pov.name + \" Hit Points: \" + game.pov.hitpoints)\n      msg (\"(TESTING) \" + game.pov.name + \" Max Points: \" + game.pov.maxpoints)\n\n      msg (this.deadeatmessage) // this has to be done BEFORE you destroy the Object !!!!!\n      destroy (this.name) // also, you might just want to remove it (sets its parent to 'null': directly a child of the 'asl' GAME OBJECT: NOT contained within another 'Object' Element) instead (as if this Object is ever referenced/used elsewhere in your code, you'll get an ERROR, as it's destroyed and thus doesn't exist, which quest is looking for, and thus can't find, and thus the ERROR): http://docs.textadventures.co.uk/quest/functions/corelibrary/removeobject.html : RemoveObject (this.name)\n    } else {\n      msg (\"Sorry, but the demon cow is not going to let you eat it, long as it lives...\")\n    }\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"player_1\"&gt;\n\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;attr name=\"maxpoints\" type=\"int\"&gt;500&lt;/attr&gt;\n\n  &lt;attr name=\"hitpoints\" type=\"int\"&gt;999&lt;/attr&gt;\n\n  &lt;attr name=\"changedhitpoints\" type=\"script\"&gt;\n    &lt;![CDATA[\n      if (this.hitpoints &gt; this.maxpoints) {\n       this.hitpoints = this.maxpoints\n      }\n    ]]&gt;\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"player_2\"&gt;\n\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;attr name=\"maxpoints\" type=\"int\"&gt;300&lt;/attr&gt;\n\n  &lt;attr name=\"hitpoints\" type=\"int\"&gt;699&lt;/attr&gt;\n\n  &lt;attr name=\"changedhitpoints\" type=\"script\"&gt;\n    &lt;![CDATA[\n      if (this.hitpoints &gt; this.maxpoints) {\n       this.hitpoints = this.maxpoints\n      }\n    ]]&gt;\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;function name=\"my_eat_function\" parameters=\"player_object_parameter, modifier_integer_parameter\"&gt;\n  player_object_parameter.hitpoints = player_object_parameter.hitpoints + modifier_integer_parameter\n&lt;/function&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;my_eat_script_attribute&lt;/property&gt;\n  &lt;pattern&gt;my_eat_script_attribute&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't eat that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n</code></pre>\n\n",
      "PostDate": "2017-08-05T01:40:55.6815935Z",
      "LastEditDate": "2017-08-05T02:11:01.9086111Z",
      "link": null
    },
    {
      "PostId": "18a4e075-25b3-4724-b232-5e72f9e5582b",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/4DfRYkpb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Tested the first one. each test says it only expects one parameter in the updatehitpoints function called in the my_eat_function. I deleted the player parameter and it works! All the tests were successful and kept the hitpoints from going over maxpoints. Just home for lunch hour so no time for second one yet. Thanks. Nice work ",
      "EditableFormat": "markdown",
      "HTML": "<p>Tested the first one. each test says it only expects one parameter in the updatehitpoints function called in the my_eat_function. I deleted the player parameter and it works! All the tests were successful and kept the hitpoints from going over maxpoints. Just home for lunch hour so no time for second one yet. Thanks. Nice work</p>\n\n",
      "PostDate": "2017-08-05T07:19:17.4983834Z",
      "LastEditDate": "2017-08-05T12:07:42.1776907Z",
      "link": null
    },
    {
      "PostId": "f6f8e316-c042-4270-9d73-d2a3dcc392c9",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "hmm.. it (the logic of it anyways --- as my code likely has more mistakes/typos/etc I'm not finding/seeing/noticing) should work (unless you got some of your code set up a bit differently:\r\n\r\nthe logic/process of what's going on:\r\n\r\nmy_eat_function (game.pov, 4)\r\n\r\nthe 'Argument (input)' of 'game.pov' (this is who-ever is your currently controlled Player Object, the default is the 'player' Player object: game.pov = player) is passed/stored into the 'player_object_attribute_1' Parameter VARIABLE, which is then used by the 'my_eat_function' Function's scripting\r\n\r\nsame for the '4 Literal Value, Integer Data Type/Value' Argument (input), which is passed/stored into the 'modifier_integer_parameter' Parameter VARIABLE, which is then used by the 'my_eat_function' Function's scripting\r\n\r\nwithin the 'my_eat_function' Function's scripting is the 'function call' to the 'updateHitPoints' Function\r\n\r\nerr.... just spotting a mistake/typo in my code:\r\n\r\nupdateHitPoints vs UpdateHitPoints\r\n\r\nwhoops, stupid case-typo, this is why I hate using caps, lol: all lower case and using the underscore to separate words. I don't like the camel case convention/standard/system, lol. I always have to be careful when I say/type tha,. as when I'm not, I always say or type: camel toe. programmers should know what I meant: camel case.... but whatever, it's still funny..., NOT MY FAULT they're similar, LOLOLOL, heh. At least, I never accidentally said that to my professor... though probably get a laugh out of him/her too, I'm sure it's a common mistake, I'm sure I'm not the first to say/type camel toe instead of camel case\r\n\r\n anyways, just back to the logic/process:\r\n\r\nwithin the 'my_eat_function' Function's scripting is the 'function call' to the 'updateHitPoints' Function\r\n\r\nUpdateHitPoints (player_object_parameter_1)\r\n\r\nso this Argument(input) is taking the Parameter Variable from 'my_eat_function' Function (which remember is: player_object_parameter_1 = game.pov = player)\r\n\r\nand is passing/storing it into the 'player_object_parameter_2' Parameter VARIABLE, which is used by the 'UpdateHotPoints' Function's scripting\r\n\r\nso, it's like this:\r\n\r\ngame.pov = player\r\n\r\nplayer_object_parameter_1 = game.pov = player\r\nmodifier_integer_prameter = 4\r\n\r\nplayer_object_parameter_2 = player_object_parameter_1 = game.pov = player\r\n\r\n(ignoring any arithmetic operations or direct setting/re-setting/assignment operations, causing change to the value of it of course):\r\nplayer.hitpoints = game.pov.hitpoints = player_object_parameter_1.hitpoints = player_object_parameter_2.hitpoints\r\n\r\n---------\r\n\r\nthough, I'm sure my code has a bunch of other mistakes that I'm not seeing/finding/noticing... meh...\r\n\r\nalso might have something to do with the 'game.pov', as you might need to set that up correctly if you're using the GUI/editor... it's a bit funky/confusing... lol\r\n\r\nor maybe I need to have the 'xxx.name' String Attribute onto it... I easily get confused whether I use the Object reference/pointer directly or its 'name' String Attribute:\r\n\r\n```\r\n<object name=\"ball\"></object>\r\n\r\n// scripting:\r\n\r\nmy_function (ball)\r\n\r\nvs:\r\n\r\nmy_function (ball.name)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>hmm.. it (the logic of it anyways --- as my code likely has more mistakes/typos/etc I'm not finding/seeing/noticing) should work (unless you got some of your code set up a bit differently:</p>\n<p>the logic/process of what's going on:</p>\n<p>my_eat_function (game.pov, 4)</p>\n<p>the 'Argument (input)' of 'game.pov' (this is who-ever is your currently controlled Player Object, the default is the 'player' Player object: game.pov = player) is passed/stored into the 'player_object_attribute_1' Parameter VARIABLE, which is then used by the 'my_eat_function' Function's scripting</p>\n<p>same for the '4 Literal Value, Integer Data Type/Value' Argument (input), which is passed/stored into the 'modifier_integer_parameter' Parameter VARIABLE, which is then used by the 'my_eat_function' Function's scripting</p>\n<p>within the 'my_eat_function' Function's scripting is the 'function call' to the 'updateHitPoints' Function</p>\n<p>err.... just spotting a mistake/typo in my code:</p>\n<p>updateHitPoints vs UpdateHitPoints</p>\n<p>whoops, stupid case-typo, this is why I hate using caps, lol: all lower case and using the underscore to separate words. I don't like the camel case convention/standard/system, lol. I always have to be careful when I say/type tha,. as when I'm not, I always say or type: camel toe. programmers should know what I meant: camel case.... but whatever, it's still funny..., NOT MY FAULT they're similar, LOLOLOL, heh. At least, I never accidentally said that to my professor... though probably get a laugh out of him/her too, I'm sure it's a common mistake, I'm sure I'm not the first to say/type camel toe instead of camel case</p>\n<p>anyways, just back to the logic/process:</p>\n<p>within the 'my_eat_function' Function's scripting is the 'function call' to the 'updateHitPoints' Function</p>\n<p>UpdateHitPoints (player_object_parameter_1)</p>\n<p>so this Argument(input) is taking the Parameter Variable from 'my_eat_function' Function (which remember is: player_object_parameter_1 = game.pov = player)</p>\n<p>and is passing/storing it into the 'player_object_parameter_2' Parameter VARIABLE, which is used by the 'UpdateHotPoints' Function's scripting</p>\n<p>so, it's like this:</p>\n<p>game.pov = player</p>\n<p>player_object_parameter_1 = game.pov = player<br>\nmodifier_integer_prameter = 4</p>\n<p>player_object_parameter_2 = player_object_parameter_1 = game.pov = player</p>\n<p>(ignoring any arithmetic operations or direct setting/re-setting/assignment operations, causing change to the value of it of course):<br>\nplayer.hitpoints = game.pov.hitpoints = player_object_parameter_1.hitpoints = player_object_parameter_2.hitpoints</p>\n<hr>\n<p>though, I'm sure my code has a bunch of other mistakes that I'm not seeing/finding/noticing... meh...</p>\n<p>also might have something to do with the 'game.pov', as you might need to set that up correctly if you're using the GUI/editor... it's a bit funky/confusing... lol</p>\n<p>or maybe I need to have the 'xxx.name' String Attribute onto it... I easily get confused whether I use the Object reference/pointer directly or its 'name' String Attribute:</p>\n<pre><code>&lt;object name=\"ball\"&gt;&lt;/object&gt;\n\n// scripting:\n\nmy_function (ball)\n\nvs:\n\nmy_function (ball.name)\n</code></pre>\n\n",
      "PostDate": "2017-08-05T13:46:33.00018Z",
      "LastEditDate": "2017-08-05T13:51:57.1022731Z",
      "link": null
    },
    {
      "PostId": "870332e2-5ace-40bb-92dc-dbc8ced949c9",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/4DfRYkpb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Was excited at lunch to see the scripts you provided and set them into a game using my libraries (quite on the fly). I quickly made some attribute changes and everything appeared to work. After some rest, I will go over it again step by step and see if I had changed anything I shouldn't . Once I have followed the programing and debugging I'll show what I have.\r\n\r\nI was curious as to why you made player 1 and player 2. Then referenced player 1 in the my_eat_function and player 2 in the UpdateHitPoints function. Was that for testing?\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Was excited at lunch to see the scripts you provided and set them into a game using my libraries (quite on the fly). I quickly made some attribute changes and everything appeared to work. After some rest, I will go over it again step by step and see if I had changed anything I shouldn't . Once I have followed the programing and debugging I'll show what I have.</p>\n<p>I was curious as to why you made player 1 and player 2. Then referenced player 1 in the my_eat_function and player 2 in the UpdateHitPoints function. Was that for testing?</p>\n\n",
      "PostDate": "2017-08-05T15:35:03.6497228Z",
      "LastEditDate": "2017-08-05T16:04:17.4635282Z",
      "link": null
    },
    {
      "PostId": "07c54041-7a58-434c-9d0e-bedc618e926c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting editing post updated/posted)\r\n\r\n-----------\r\n\r\njust to demonstrate that Parameters are VARIABLES, which you pass/store the Argument (input as a VARIABLE or Literal Value), which is then used by the Function's scripting, making it dynamic, it'll work for any Object passed into it as an Argument, though my example was of using Player Objects (player_1 and player_2) so that's what I named the Parameter as 'player_object_parameter_1' (as I like to be descriptive in my names, lol) as to stay consistent (and also the Object would have to have the Attribute used in the example as well). The number at the end of it, is just to show you how one Function's Parameter VARIABLE can be used by another Function's Parameter, but you can name the Parameters watever you want, they can be the same name or different name, pros and cons to both naming schemes.\r\n\r\nThe number has NOTHING to do with player_1 and player_2, but rather:\r\n\r\nplayer_object_parameter_1: is the parameter for the 'eat_function' Function\r\nplayer_object_parameter_2: is the parameter for the 'update hitpoints' Function\r\n// just so you can see how they're working (but I never explained any of this in my previous post, lol. I assumed you were telepathic... you disapoint me! joking around here, hehe)\r\n\r\nusing Parameters (VARIABLES) means that it's \"dynamic/universal\" (it'll use ANY VARIABLE/VALUE), so one dynamic/universal Function can be used for many different things and it'll still work.\r\n\r\nJust like how Commands are dynamic/universal (they can be used for any input) whereas Verbs are static: specific to only work for its parent Object's Script Attributes, the 'talk' Verb for npc1 is not the same as the 'talk' Verb for npc2, each have their own scripting, totally separate from each other.\r\n\r\nParameter VARIABLES are basically a way of \"transfering\" data to a Function/Command and optionally to other Functions/Commands):\r\n\r\n```\r\n<game name=\"example\">\r\n  <attr name=\"count\" type=\"int\">1</attr>\r\n  <attr name=\"start\" type=\"script\">\r\n    count_function (this.count)\r\n  </attr>\r\n</game>\r\n\r\n// game.count = 1\r\n\r\n// the 'count_parameters' are 4 SEPARATE/DIFFERENT 'count_parameters' as they're local-scoped to their parent Function, but they're used to give/determine the Value for the next Function's 'count_parameter'\r\n\r\n// count_parameter = game.count\r\n\r\n// count_parameter = 1\r\n\r\n<function name=\"count_function\" parameters=\"count_parameter\">\r\n  msg (count_parameter)\r\n  count_parameter = count_parameter + 1\r\n  count_function_2 (count_parameter)\r\n</function>\r\n\r\n// count_parameter = (1) + 1 = 2\r\n\r\n<function name=\"count_function_2\" parameters=\"count_parameter\">\r\n  msg (count_parameter)\r\n  count_parameter = count_parameter + 1\r\n  count_function_3 (count_parameter)\r\n</function>\r\n\r\n// count_parameter = (2) + 1 = 3\r\n\r\n<function name=\"count_function_3\" parameters=\"count_parameter\">\r\n  msg (count_parameter)\r\n  count_parameter = count_parameter + 1\r\n  count_function_4 (count_parameter)\r\n</function>\r\n\r\n// count_parameter = (3) + 1 = 4 = game.count\r\n\r\n// the Value of the 'cp' (count_paramter -- geting lazy lol) for F1 is: 1\r\n// the Value of the 'cp' for F2 is: 2\r\n// the Value of the 'cp' for F3 is: 3\r\n// the Value of the 'cp' for F4 is: 4\r\n// also, each of these don't exist outside (out of scope) their parent Function: the 'call function' is still within its parent function, and so the cp is being used within its parent function, being set to be pointed to by the next function's cp:\r\n// the arrows represent the value being \"transfered\" (stored/assigned)\r\n// whereas the 'points to' is saying that the left cp is pointing to the right cp\r\n// F4's cp (4) <---  points to <--- F3's cp (3+1=4) <---  points to <--- F2's cp (2+1=3) <---  points to <--- F1's cp (1+1=2) <---  points to <--- game.count <--- 1\r\n// does this help explain what's going on? or did I make it more confusing?\r\n\r\n<function name=\"count_function_4\" parameters=\"count_parameter\">\r\n  msg (count_parameter)\r\n  msg (game.count) // the 'count_parameter' is storing the 'game.count', so they'll both be storing the same value of: 4\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting editing post updated/posted)</p>\n<hr>\n<p>just to demonstrate that Parameters are VARIABLES, which you pass/store the Argument (input as a VARIABLE or Literal Value), which is then used by the Function's scripting, making it dynamic, it'll work for any Object passed into it as an Argument, though my example was of using Player Objects (player_1 and player_2) so that's what I named the Parameter as 'player_object_parameter_1' (as I like to be descriptive in my names, lol) as to stay consistent (and also the Object would have to have the Attribute used in the example as well). The number at the end of it, is just to show you how one Function's Parameter VARIABLE can be used by another Function's Parameter, but you can name the Parameters watever you want, they can be the same name or different name, pros and cons to both naming schemes.</p>\n<p>The number has NOTHING to do with player_1 and player_2, but rather:</p>\n<p>player_object_parameter_1: is the parameter for the 'eat_function' Function<br>\nplayer_object_parameter_2: is the parameter for the 'update hitpoints' Function<br>\n// just so you can see how they're working (but I never explained any of this in my previous post, lol. I assumed you were telepathic... you disapoint me! joking around here, hehe)</p>\n<p>using Parameters (VARIABLES) means that it's \"dynamic/universal\" (it'll use ANY VARIABLE/VALUE), so one dynamic/universal Function can be used for many different things and it'll still work.</p>\n<p>Just like how Commands are dynamic/universal (they can be used for any input) whereas Verbs are static: specific to only work for its parent Object's Script Attributes, the 'talk' Verb for npc1 is not the same as the 'talk' Verb for npc2, each have their own scripting, totally separate from each other.</p>\n<p>Parameter VARIABLES are basically a way of \"transfering\" data to a Function/Command and optionally to other Functions/Commands):</p>\n<pre><code>&lt;game name=\"example\"&gt;\n  &lt;attr name=\"count\" type=\"int\"&gt;1&lt;/attr&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    count_function (this.count)\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n// game.count = 1\n\n// the 'count_parameters' are 4 SEPARATE/DIFFERENT 'count_parameters' as they're local-scoped to their parent Function, but they're used to give/determine the Value for the next Function's 'count_parameter'\n\n// count_parameter = game.count\n\n// count_parameter = 1\n\n&lt;function name=\"count_function\" parameters=\"count_parameter\"&gt;\n  msg (count_parameter)\n  count_parameter = count_parameter + 1\n  count_function_2 (count_parameter)\n&lt;/function&gt;\n\n// count_parameter = (1) + 1 = 2\n\n&lt;function name=\"count_function_2\" parameters=\"count_parameter\"&gt;\n  msg (count_parameter)\n  count_parameter = count_parameter + 1\n  count_function_3 (count_parameter)\n&lt;/function&gt;\n\n// count_parameter = (2) + 1 = 3\n\n&lt;function name=\"count_function_3\" parameters=\"count_parameter\"&gt;\n  msg (count_parameter)\n  count_parameter = count_parameter + 1\n  count_function_4 (count_parameter)\n&lt;/function&gt;\n\n// count_parameter = (3) + 1 = 4 = game.count\n\n// the Value of the 'cp' (count_paramter -- geting lazy lol) for F1 is: 1\n// the Value of the 'cp' for F2 is: 2\n// the Value of the 'cp' for F3 is: 3\n// the Value of the 'cp' for F4 is: 4\n// also, each of these don't exist outside (out of scope) their parent Function: the 'call function' is still within its parent function, and so the cp is being used within its parent function, being set to be pointed to by the next function's cp:\n// the arrows represent the value being \"transfered\" (stored/assigned)\n// whereas the 'points to' is saying that the left cp is pointing to the right cp\n// F4's cp (4) &lt;---  points to &lt;--- F3's cp (3+1=4) &lt;---  points to &lt;--- F2's cp (2+1=3) &lt;---  points to &lt;--- F1's cp (1+1=2) &lt;---  points to &lt;--- game.count &lt;--- 1\n// does this help explain what's going on? or did I make it more confusing?\n\n&lt;function name=\"count_function_4\" parameters=\"count_parameter\"&gt;\n  msg (count_parameter)\n  msg (game.count) // the 'count_parameter' is storing the 'game.count', so they'll both be storing the same value of: 4\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2017-08-05T23:29:30.2211621Z",
      "LastEditDate": "2017-08-05T23:52:05.204325Z",
      "link": null
    },
    {
      "PostId": "3f67269d-31aa-4dd3-89c2-54f53caac2d5",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/4DfRYkpb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'll have to chew on this one awhile...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I'll have to chew on this one awhile...</p>\n\n",
      "PostDate": "2017-08-06T06:49:21.7286502Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
