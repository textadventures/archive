{
  "Topic": {
    "TopicId": "fhzmewcfbuk37a-wip4xsg",
    "ForumId": "10",
    "Title": "problem with comands",
    "LastUpdated": "2018-08-31T00:39:50.9653241Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "4b7c40d0-e805-48f1-99d7-83942c8e1bf1",
      "UserId": 373997,
      "Username": "zacman",
      "AvatarUrl": "https://secure.gravatar.com/avatar/ba3b22a63e4b5cff3069d4280942fe54?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "i fallowed the tutorial to the letter, but i can't get my commands to work, what's going on?",
      "EditableFormat": "markdown",
      "HTML": "<p>i fallowed the tutorial to the letter, but i can't get my commands to work, what's going on?</p>\n\n",
      "PostDate": "2018-08-31T00:39:50.9653241Z",
      "LastEditDate": "2018-08-31T01:14:20.3046489Z",
      "link": null
    },
    {
      "PostId": "b1be4d98-c47e-4c50-963e-b6f754b54b72",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you want someone to tell you what's wrong, you need to give more detail.\r\n\r\n1) Your code [the bit that's having the problem - if you're not sure where the problem is, it's better to show more. Maybe a link to your game if it's online]\r\n\r\n2) Steps to reproduce the problem. Is it just certain commands that don't work? Give an example of something the player could type that doesn't work properly.\r\n\r\n3) What happens? Does an error message appear? Does the command not work? Does it do the wrong thing? What does it say?",
      "EditableFormat": "markdown",
      "HTML": "<p>If you want someone to tell you what's wrong, you need to give more detail.</p>\n<ol>\n<li>\n<p>Your code [the bit that's having the problem - if you're not sure where the problem is, it's better to show more. Maybe a link to your game if it's online]</p>\n</li>\n<li>\n<p>Steps to reproduce the problem. Is it just certain commands that don't work? Give an example of something the player could type that doesn't work properly.</p>\n</li>\n<li>\n<p>What happens? Does an error message appear? Does the command not work? Does it do the wrong thing? What does it say?</p>\n</li>\n</ol>\n\n",
      "PostDate": "2018-08-31T01:31:00.0835156Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8b18d3d7-ad14-4b09-a334-87425c6d8736",
      "UserId": 373997,
      "Username": "zacman",
      "AvatarUrl": "https://secure.gravatar.com/avatar/ba3b22a63e4b5cff3069d4280942fe54?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "i fallowed what the tutorial for quest gave me in making the custom command say, but when i try and use it in game i can't get it to work, i put in the examples that they gave, i put them in the right spaces, but no matter how i try i can't get it to work",
      "EditableFormat": "markdown",
      "HTML": "<p>i fallowed what the tutorial for quest gave me in making the custom command say, but when i try and use it in game i can't get it to work, i put in the examples that they gave, i put them in the right spaces, but no matter how i try i can't get it to work</p>\n\n",
      "PostDate": "2018-08-31T01:58:55.1077552Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c30ac86d-b012-4acd-a787-5bbf75e98bf0",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "is this the 'bob' and 'defibrilator' Command part of the tutorial? This is much more advanced stuff than the rest of the tutorial, and stumps everyone who's new to quest and especially to coding.\r\n\r\nOr, are you stuck on the 'weigh' Command part of the tutorial? This is also difficult, but not as much as the 'bob' and 'defibriliator' part of the tutorial.\r\n\r\n----------\r\n\r\noh... so, you're doing the 'say' Command in the tutorial... (helps to read your post, lol)\r\n\r\nlet's see if I can help with Commands...\r\n\r\n-----------------\r\n\r\nA Command does an action, when you type in a specific syntax pattern, which you selected/determined/specified/crafted/wrote for that Command. The Command can just do an action or it can be given data inputs to be used within/for the action its doing\r\n\r\nlet's give some examples, as that's probably confusing...\r\n\r\n---------------\r\n\r\nCommand Name: hi_command\r\n\r\nCommand Pattern: greet\r\n\r\nCommand Scripting: msg (\"Hi!\")\r\n\r\nduring game play, you type in:\r\n\r\ngreet\r\n\r\nand the 'hi_command' is activated, doing its actions (scripting: script/s), outputing/resulting/displaying:\r\n\r\nHi!\r\n\r\n----------------------\r\n\r\nor, we can have it take in data inputs and use them in its actions, like so:\r\n\r\nCommand Name: hi_command\r\n\r\nCommand Pattern: greet #text#\r\n\r\nCommand Scripting: msg (\"Hi, \" + text + \"!\")\r\n\r\nand you type in during game play:\r\n\r\ngreet HK\r\n\r\nand the 'hi_command' is activated, doing its actions (scripting: script/s), outputing/resulting/displaying:\r\n\r\nHi, HK!\r\n\r\nand you type in during game play:\r\n\r\ngreet Zacman\r\n\r\nand the 'hi_command' is activated, doing its actions (scripting: script/s), outputing/resulting/displaying:\r\n\r\nHi, Zacman!\r\n\r\n-------------\r\n\r\nlet's get into some more detail/explanation now in what is going on, okay?\r\n\r\nCommand Pattern: greet #text#\r\n\r\nthe first word of the Command's 'pattern' Attribute, is what I like to call the 'activator', as it best determines what Command to use/do/activate/execute/run, and so, to avoid any issues, every Command should have an unique 'activator' word (the first word of the pattern), like so:\r\n\r\nCommand Name: talk_command\r\nCommand Pattern: talk\r\n\r\nCommand Name: kick_command\r\nCommand Pattern: kick\r\n\r\nas look at the issues that happen when its not unique:\r\n\r\nCommand Name: greet_command\r\nCommand Pattern: greet\r\nCommand Scripting: msg (\"Hi!\")\r\n\r\nCommand Name: dynamic_greet_command\r\nCommand Pattern: greet #text#\r\nCommand Scripting: msg (\"Hi, \" + text + \"!\")\r\n\r\nand you type in:\r\n\r\ngreet HK\r\n\r\nwhich Command does quest do?\r\n\r\nquest can/will see the 'greet' and go: \"ah, you want to do the 'greet_command', and thus outputs: Hi!\r\n\r\nand thus, it'll never do the 'dynamic_greet_command' ... as just the 'greet' is a Command right there... so it's never able to see the 'greet HK', and thus will never display: 'Hi, HK!', which would be from telling it to do the 'dynamic_hi_command'...\r\n\r\ndoes that make sense?\r\n\r\nbut what if you do want both of these Commands? how do you get them to work?\r\n\r\nyou have to have quest check for the most complex (the longest) pattern first and then check for less complex (shorter) patterns, until the last (least complex: shortest) pattern, like so, as a single Command:\r\n\r\nCommand Name: super_dynamic_greet_command\r\nCommand Pattern: greet #text#;greet\r\n\r\nthe semicolon separates patterns (and the order is by which is typed in first, aka: left to right)\r\n\r\nso, it'll first check for if you typed in 'greet XXX', but if all you typed in was 'greet', then it fails the 'greet XXX' pattern check, and goes to the next pattern 'greet' to check, which is a match, and then it goes to the scripting/action\r\n\r\nhopefully, you can see that this has a problem in that if you don't just type in 'greet', it'll always do the 'greet XXX' pattern, as you typed in something after the 'greet + [SPACE]'...\r\n\r\nthe other issue is that you got to do scripting that acts upon which pattern is used... which is a bit advanced stuff for people who don't know coding...\r\n\r\nif you want to get into it...\r\n\r\nyou'd have to check whether the 'text' VARIABLE has a Value a stored in it (text = XXX) or not (text = null)\r\n\r\n```\r\n<command name=\"super_dynamic_greet_command\">\r\n\r\n  <pattern>greet #text#;greet</pattern>\r\n\r\n  <script>\r\n\r\n    if (text = null) {\r\n      msg (\"Hi!\")\r\n    } else {\r\n      msg (\"Hi, \" + text + \"!\")\r\n    }\r\n\r\n  </script>\r\n\r\n</command>\r\n```\r\n\r\n--------------------------\r\n\r\nso, let's now get into understanding the use of the 'text' VARIABLE, as we need to understand it, which we've not done yet, lol:\r\n\r\nCommands have two types of VARIABLES for storing in the typed in inputs to be used by the Command's scripting (its action/s):\r\n\r\n'text' and 'object'\r\n\r\nlet's first explain the 'text' VARIABLE, as that's what I've been using/showing in this post so far:\r\n\r\nCommand Pattern: greet #text#\r\n\r\nin the pattern, the hash/pound symbols '#XXX#' is telling quest/the-Command that, that part/segment of what is typed in during game play is to be stored into the 'XXX' VARIABLE, AS A STRING VALUE, for examples:\r\n\r\nyou type in: greet HK\r\n\r\nthe 'HK' gets stored into the 'text' VARIABLE: text = \"HK\"\r\n\r\nas what I typed in, matched up with the pattern, as can be seen:\r\n\r\npattern: greet[SPACE]XXX\r\ntyped in: greet[SPACE]HK\r\n\r\nthe VARIABLE must either:\r\n\r\n1. be 'text'\r\n2. start with 'text'\r\n\r\nfor examples:\r\n\r\nCommand Pattern: greet #text# <---> VARIABLE: text\r\nCommand Pattern: greet #text1# <---> VARIABLE: text1\r\nCommand Pattern: greet #text_1# <---> VARIABLE: text_1\r\nCommand Pattern: greet #text_variable# <---> VARIABLE: text_variable\r\nCommand Pattern: greet #text_HK# <---> VARIABLE: text_HK\r\nCommand Pattern: greet #text_Zacman# <---> VARIABLE: text_Zacman\r\n\r\nCommand Pattern: greet #HK# ---> ERROR! Unrecognized VARIABLE!\r\nCommand Pattern: greet #HKtext# ---> ERROR! Unrecognized VARIABLE!\r\nCommand Pattern: greet #textHK# <---> VARIABLE: textHK\r\n\r\nand its the same with the use of the 'object' VARIABLE:\r\n\r\nCommand Pattern: greet #object# <---> VARIABLE: object\r\nCommand Pattern: greet #object# <---> VARIABLE: object1\r\nCommand Pattern: greet #object_1# <---> VARIABLE: object_1\r\nCommand Pattern: greet #object_variable# <---> VARIABLE: object_variable\r\nCommand Pattern: greet #object_HK# <---> VARIABLE: object_HK\r\nCommand Pattern: greet #object_Zacman# <---> VARIABLE: object_Zacman\r\n\r\nCommand Pattern: greet #HK# ---> ERROR! Unrecognized VARIABLE!\r\nCommand Pattern: greet #HKobject# ---> ERROR! Unrecognized VARIABLE!\r\nCommand Pattern: greet #objectHK# <---> VARIABLE: objectHK\r\n\r\nnow, the difference between the 'text' and 'object' VARIABLES is:\r\n\r\nthe 'text' VARIABLE takes that input as a STRING Value (stored within the 'text' VARIABLE), which you can then do whatever with/upon within the Command's scripting\r\n\r\nhowever, the 'object' VARIABLE, is different, as it tells quest to check if such an Object, of what you typed in for that designated part/segment, exists, and not just exists anywhere within the game, but only if it exists within the room you're currently within (it might also check if the Object exists in the inventory: aka, on the Player Object you're currently controlling - I tried searching but couldn't find anything on whether it checks within the inventory or just the room you're currently within, meh).\r\n\r\nso, the use of the 'text' VARIABLE is all powerful, whereas the use of the 'object' VARIABLE is more limited, though with the Command's scripting, you can bypass the limitation of using the 'object' VARIABLE, anyways, lol. Both (text vs object) VARIABLES have their pros and cons, and whichever you use, the Command's scripting can bypass whichever one you choose to use anyways (for examples, even though you use the 'text' VARIABLE, in the Command's scripting, you can use the 'GetObject (TEXT_VARIABLE)' to check/convert the String Value stored into the 'text' VARIABLE, into an Object. And with using the 'object' VARIABLE, if the Object doesn't exist within the room you're currently within, you can just do scripting that checks all of the objects of the entire game, and see if it exists or not, and if it does, than you can get/use it within the Command's scripting anyways)\r\n\r\n-----------\r\n\r\noh, I almost forgot, you can have/use multiple VARIABLES (as well as both types) within your Command pattern, for a quick example:\r\n\r\nCommand Pattern: craft #object_1#, #object_2#, #text_1#, and #text_2#\r\ntyped in: craft steel, oxygen, forge, and katana\r\n\r\n// 'steel' and 'ogygen' would need to existing Objects, and have scripting that handles all of the inputs, and for example, it'd return a 'stainless_steel_katana' Object to you (your inventory)\r\n\r\nP.S.\r\n\r\nyou don't need the commas and the 'and' in the pattern, as you can just do this:\r\n\r\nCommand Pattern: craft #object_1# #object_2# #text_1# #text_2#\r\ntyped in: craft steel oxygen forge katana\r\n\r\njust as my own personal taste only, I like having/using this grammar stuff (the commas and the 'and') within my pattern, but it's not required as shown above.\r\n\r\n--------------\r\n\r\nso, let's see if this post helps you with using Commands... hopefully the only issues you'll have is with the scripting itself...\r\n\r\nwhich we can/will help you with... take a try again at the tutorial's 'say' (and etc) Command practice problems and see if you can understand them and do them correctly now... and if you still need help, either with the Command itself, or with the scripting needed with the Command, let us know, and we'll help you with it.",
      "EditableFormat": "markdown",
      "HTML": "<p>is this the 'bob' and 'defibrilator' Command part of the tutorial? This is much more advanced stuff than the rest of the tutorial, and stumps everyone who's new to quest and especially to coding.</p>\n<p>Or, are you stuck on the 'weigh' Command part of the tutorial? This is also difficult, but not as much as the 'bob' and 'defibriliator' part of the tutorial.</p>\n<hr>\n<p>oh... so, you're doing the 'say' Command in the tutorial... (helps to read your post, lol)</p>\n<p>let's see if I can help with Commands...</p>\n<hr>\n<p>A Command does an action, when you type in a specific syntax pattern, which you selected/determined/specified/crafted/wrote for that Command. The Command can just do an action or it can be given data inputs to be used within/for the action its doing</p>\n<p>let's give some examples, as that's probably confusing...</p>\n<hr>\n<p>Command Name: hi_command</p>\n<p>Command Pattern: greet</p>\n<p>Command Scripting: msg (\"Hi!\")</p>\n<p>during game play, you type in:</p>\n<p>greet</p>\n<p>and the 'hi_command' is activated, doing its actions (scripting: script/s), outputing/resulting/displaying:</p>\n<p>Hi!</p>\n<hr>\n<p>or, we can have it take in data inputs and use them in its actions, like so:</p>\n<p>Command Name: hi_command</p>\n<p>Command Pattern: greet #text#</p>\n<p>Command Scripting: msg (\"Hi, \" + text + \"!\")</p>\n<p>and you type in during game play:</p>\n<p>greet HK</p>\n<p>and the 'hi_command' is activated, doing its actions (scripting: script/s), outputing/resulting/displaying:</p>\n<p>Hi, HK!</p>\n<p>and you type in during game play:</p>\n<p>greet Zacman</p>\n<p>and the 'hi_command' is activated, doing its actions (scripting: script/s), outputing/resulting/displaying:</p>\n<p>Hi, Zacman!</p>\n<hr>\n<p>let's get into some more detail/explanation now in what is going on, okay?</p>\n<p>Command Pattern: greet #text#</p>\n<p>the first word of the Command's 'pattern' Attribute, is what I like to call the 'activator', as it best determines what Command to use/do/activate/execute/run, and so, to avoid any issues, every Command should have an unique 'activator' word (the first word of the pattern), like so:</p>\n<p>Command Name: talk_command<br>\nCommand Pattern: talk</p>\n<p>Command Name: kick_command<br>\nCommand Pattern: kick</p>\n<p>as look at the issues that happen when its not unique:</p>\n<p>Command Name: greet_command<br>\nCommand Pattern: greet<br>\nCommand Scripting: msg (\"Hi!\")</p>\n<p>Command Name: dynamic_greet_command<br>\nCommand Pattern: greet #text#<br>\nCommand Scripting: msg (\"Hi, \" + text + \"!\")</p>\n<p>and you type in:</p>\n<p>greet HK</p>\n<p>which Command does quest do?</p>\n<p>quest can/will see the 'greet' and go: \"ah, you want to do the 'greet_command', and thus outputs: Hi!</p>\n<p>and thus, it'll never do the 'dynamic_greet_command' ... as just the 'greet' is a Command right there... so it's never able to see the 'greet HK', and thus will never display: 'Hi, HK!', which would be from telling it to do the 'dynamic_hi_command'...</p>\n<p>does that make sense?</p>\n<p>but what if you do want both of these Commands? how do you get them to work?</p>\n<p>you have to have quest check for the most complex (the longest) pattern first and then check for less complex (shorter) patterns, until the last (least complex: shortest) pattern, like so, as a single Command:</p>\n<p>Command Name: super_dynamic_greet_command<br>\nCommand Pattern: greet #text#;greet</p>\n<p>the semicolon separates patterns (and the order is by which is typed in first, aka: left to right)</p>\n<p>so, it'll first check for if you typed in 'greet XXX', but if all you typed in was 'greet', then it fails the 'greet XXX' pattern check, and goes to the next pattern 'greet' to check, which is a match, and then it goes to the scripting/action</p>\n<p>hopefully, you can see that this has a problem in that if you don't just type in 'greet', it'll always do the 'greet XXX' pattern, as you typed in something after the 'greet + [SPACE]'...</p>\n<p>the other issue is that you got to do scripting that acts upon which pattern is used... which is a bit advanced stuff for people who don't know coding...</p>\n<p>if you want to get into it...</p>\n<p>you'd have to check whether the 'text' VARIABLE has a Value a stored in it (text = XXX) or not (text = null)</p>\n<pre><code>&lt;command name=\"super_dynamic_greet_command\"&gt;\n\n  &lt;pattern&gt;greet #text#;greet&lt;/pattern&gt;\n\n  &lt;script&gt;\n\n    if (text = null) {\n      msg (\"Hi!\")\n    } else {\n      msg (\"Hi, \" + text + \"!\")\n    }\n\n  &lt;/script&gt;\n\n&lt;/command&gt;\n</code></pre>\n<hr>\n<p>so, let's now get into understanding the use of the 'text' VARIABLE, as we need to understand it, which we've not done yet, lol:</p>\n<p>Commands have two types of VARIABLES for storing in the typed in inputs to be used by the Command's scripting (its action/s):</p>\n<p>'text' and 'object'</p>\n<p>let's first explain the 'text' VARIABLE, as that's what I've been using/showing in this post so far:</p>\n<p>Command Pattern: greet #text#</p>\n<p>in the pattern, the hash/pound symbols '#XXX#' is telling quest/the-Command that, that part/segment of what is typed in during game play is to be stored into the 'XXX' VARIABLE, AS A STRING VALUE, for examples:</p>\n<p>you type in: greet HK</p>\n<p>the 'HK' gets stored into the 'text' VARIABLE: text = \"HK\"</p>\n<p>as what I typed in, matched up with the pattern, as can be seen:</p>\n<p>pattern: greet[SPACE]XXX<br>\ntyped in: greet[SPACE]HK</p>\n<p>the VARIABLE must either:</p>\n<ol>\n<li>be 'text'</li>\n<li>start with 'text'</li>\n</ol>\n<p>for examples:</p>\n<p>Command Pattern: greet #text# &lt;---&gt; VARIABLE: text<br>\nCommand Pattern: greet #text1# &lt;---&gt; VARIABLE: text1<br>\nCommand Pattern: greet #text_1# &lt;---&gt; VARIABLE: text_1<br>\nCommand Pattern: greet #text_variable# &lt;---&gt; VARIABLE: text_variable<br>\nCommand Pattern: greet #text_HK# &lt;---&gt; VARIABLE: text_HK<br>\nCommand Pattern: greet #text_Zacman# &lt;---&gt; VARIABLE: text_Zacman</p>\n<p>Command Pattern: greet #HK# ---&gt; ERROR! Unrecognized VARIABLE!<br>\nCommand Pattern: greet #HKtext# ---&gt; ERROR! Unrecognized VARIABLE!<br>\nCommand Pattern: greet #textHK# &lt;---&gt; VARIABLE: textHK</p>\n<p>and its the same with the use of the 'object' VARIABLE:</p>\n<p>Command Pattern: greet #object# &lt;---&gt; VARIABLE: object<br>\nCommand Pattern: greet #object# &lt;---&gt; VARIABLE: object1<br>\nCommand Pattern: greet #object_1# &lt;---&gt; VARIABLE: object_1<br>\nCommand Pattern: greet #object_variable# &lt;---&gt; VARIABLE: object_variable<br>\nCommand Pattern: greet #object_HK# &lt;---&gt; VARIABLE: object_HK<br>\nCommand Pattern: greet #object_Zacman# &lt;---&gt; VARIABLE: object_Zacman</p>\n<p>Command Pattern: greet #HK# ---&gt; ERROR! Unrecognized VARIABLE!<br>\nCommand Pattern: greet #HKobject# ---&gt; ERROR! Unrecognized VARIABLE!<br>\nCommand Pattern: greet #objectHK# &lt;---&gt; VARIABLE: objectHK</p>\n<p>now, the difference between the 'text' and 'object' VARIABLES is:</p>\n<p>the 'text' VARIABLE takes that input as a STRING Value (stored within the 'text' VARIABLE), which you can then do whatever with/upon within the Command's scripting</p>\n<p>however, the 'object' VARIABLE, is different, as it tells quest to check if such an Object, of what you typed in for that designated part/segment, exists, and not just exists anywhere within the game, but only if it exists within the room you're currently within (it might also check if the Object exists in the inventory: aka, on the Player Object you're currently controlling - I tried searching but couldn't find anything on whether it checks within the inventory or just the room you're currently within, meh).</p>\n<p>so, the use of the 'text' VARIABLE is all powerful, whereas the use of the 'object' VARIABLE is more limited, though with the Command's scripting, you can bypass the limitation of using the 'object' VARIABLE, anyways, lol. Both (text vs object) VARIABLES have their pros and cons, and whichever you use, the Command's scripting can bypass whichever one you choose to use anyways (for examples, even though you use the 'text' VARIABLE, in the Command's scripting, you can use the 'GetObject (TEXT_VARIABLE)' to check/convert the String Value stored into the 'text' VARIABLE, into an Object. And with using the 'object' VARIABLE, if the Object doesn't exist within the room you're currently within, you can just do scripting that checks all of the objects of the entire game, and see if it exists or not, and if it does, than you can get/use it within the Command's scripting anyways)</p>\n<hr>\n<p>oh, I almost forgot, you can have/use multiple VARIABLES (as well as both types) within your Command pattern, for a quick example:</p>\n<p>Command Pattern: craft #object_1#, #object_2#, #text_1#, and #text_2#<br>\ntyped in: craft steel, oxygen, forge, and katana</p>\n<p>// 'steel' and 'ogygen' would need to existing Objects, and have scripting that handles all of the inputs, and for example, it'd return a 'stainless_steel_katana' Object to you (your inventory)</p>\n<p>P.S.</p>\n<p>you don't need the commas and the 'and' in the pattern, as you can just do this:</p>\n<p>Command Pattern: craft #object_1# #object_2# #text_1# #text_2#<br>\ntyped in: craft steel oxygen forge katana</p>\n<p>just as my own personal taste only, I like having/using this grammar stuff (the commas and the 'and') within my pattern, but it's not required as shown above.</p>\n<hr>\n<p>so, let's see if this post helps you with using Commands... hopefully the only issues you'll have is with the scripting itself...</p>\n<p>which we can/will help you with... take a try again at the tutorial's 'say' (and etc) Command practice problems and see if you can understand them and do them correctly now... and if you still need help, either with the Command itself, or with the scripting needed with the Command, let us know, and we'll help you with it.</p>\n\n",
      "PostDate": "2018-08-31T05:10:45.406374Z",
      "LastEditDate": "2018-08-31T05:39:09.3750736Z",
      "link": null
    },
    {
      "PostId": "9f3907b1-ef5a-47aa-9746-0faed6f3f676",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "here's the tutorial's first 'say' Command example:\r\n\r\n```\r\n<command name=\"say_command\">\r\n\r\n  <pattern>say #text#</pattern>\r\n\r\n  <script>\r\n\r\n    msg (\"You say \\\"\" + text + \"\\\", but nobody replies.\")\r\n\r\n  </script>\r\n\r\n</command>\r\n\r\n// -------------------------------------------------\r\n\r\nyou type in: say hi\r\noutput: You say \"hi\", but nobody replies.\r\n\r\nyou type in: say hello\r\noutput: You say \"hello\", but nobody replies.\r\n\r\nyou type in: say ABC\r\noutput: You say \"ABC\", but nobody replies.\r\n\r\n// --------\r\n\r\nthe use of the backslashes '\\', are known as 'escape characters' in programming, which acts as a Command, which reads/uses the very next character following it for doing whatever (so you can NOT have a space between the backward slash and the next character), be it displaying a character or doing some action:\r\n\r\n\\\" ---- this is telling the programming software (ie quest for us, lol) to display the double quote\r\n\r\n\\' --- this is telling the programming software (ie quest for us, lol) to display the single quote (though in quest, you actually don't need the escape character at all, the single quote will always be displayed anyways)\r\n\r\netc etc etc\r\n\r\nexamples of escape character commands and their actions of some programming languages:\r\n\r\nhttps://msdn.microsoft.com/en-us/library/h21280bw.aspx\r\nhttps://docs.python.org/2.0/ref/strings.html\r\nhttps://www.w3schools.com/js/js_strings.asp (have to scroll down a bit)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>here's the tutorial's first 'say' Command example:</p>\n<pre><code>&lt;command name=\"say_command\"&gt;\n\n  &lt;pattern&gt;say #text#&lt;/pattern&gt;\n\n  &lt;script&gt;\n\n    msg (\"You say \\\"\" + text + \"\\\", but nobody replies.\")\n\n  &lt;/script&gt;\n\n&lt;/command&gt;\n\n// -------------------------------------------------\n\nyou type in: say hi\noutput: You say \"hi\", but nobody replies.\n\nyou type in: say hello\noutput: You say \"hello\", but nobody replies.\n\nyou type in: say ABC\noutput: You say \"ABC\", but nobody replies.\n\n// --------\n\nthe use of the backslashes '\\', are known as 'escape characters' in programming, which acts as a Command, which reads/uses the very next character following it for doing whatever (so you can NOT have a space between the backward slash and the next character), be it displaying a character or doing some action:\n\n\\\" ---- this is telling the programming software (ie quest for us, lol) to display the double quote\n\n\\' --- this is telling the programming software (ie quest for us, lol) to display the single quote (though in quest, you actually don't need the escape character at all, the single quote will always be displayed anyways)\n\netc etc etc\n\nexamples of escape character commands and their actions of some programming languages:\n\nhttps://msdn.microsoft.com/en-us/library/h21280bw.aspx\nhttps://docs.python.org/2.0/ref/strings.html\nhttps://www.w3schools.com/js/js_strings.asp (have to scroll down a bit)\n</code></pre>\n\n",
      "PostDate": "2018-08-31T05:18:09.7114312Z",
      "LastEditDate": "2018-08-31T05:30:04.6268641Z",
      "link": null
    },
    {
      "PostId": "4cf9aea7-686e-427e-8b9b-4d3d01333888",
      "UserId": 373997,
      "Username": "zacman",
      "AvatarUrl": "https://secure.gravatar.com/avatar/ba3b22a63e4b5cff3069d4280942fe54?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "it's not the fact i'm not fallowing it, it's the fact even when i follow it';s instructions, the command doesn't seem to work, it keep's saying \"does not understand command\"",
      "EditableFormat": "markdown",
      "HTML": "<p>it's not the fact i'm not fallowing it, it's the fact even when i follow it';s instructions, the command doesn't seem to work, it keep's saying \"does not understand command\"</p>\n\n",
      "PostDate": "2018-08-31T13:52:53.2917998Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cee56438-5fe4-4560-85d4-2892698a77e2",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If it isn't working, there must be something wrong with the command.\r\n\r\nCan you share what you've got, so that we can try to help you?\r\n\r\nEither\r\n\r\n1. Take a screenshot of the command in the editor and put it somewhere like imgur so that we can see it\r\n\r\nor\r\n\r\n2. Upload your .aslx file somewhere we can see it. Like dropbox, google drive, or upload it to this site and publish it unlisted.",
      "EditableFormat": "markdown",
      "HTML": "<p>If it isn't working, there must be something wrong with the command.</p>\n<p>Can you share what you've got, so that we can try to help you?</p>\n<p>Either</p>\n<ol>\n<li>Take a screenshot of the command in the editor and put it somewhere like imgur so that we can see it</li>\n</ol>\n<p>or</p>\n<ol start=\"2\">\n<li>Upload your .aslx file somewhere we can see it. Like dropbox, google drive, or upload it to this site and publish it unlisted.</li>\n</ol>\n\n",
      "PostDate": "2018-08-31T14:18:07.4469667Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b2f1580e-14c1-4857-8185-4a920999c28e",
      "UserId": 373997,
      "Username": "zacman",
      "AvatarUrl": "https://secure.gravatar.com/avatar/ba3b22a63e4b5cff3069d4280942fe54?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "how do i get a picture onto a reply?",
      "EditableFormat": "markdown",
      "HTML": "<p>how do i get a picture onto a reply?</p>\n\n",
      "PostDate": "2018-08-31T14:30:10.2646543Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7f2526ea-854d-48ca-ab0b-9b36365419a3",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You'd need to upload them to another site (I usually use imgur.com because it's fast and reliable), then either provide a link or embed the image link in the post (something like `<img src=\"http://i.imgur.com/WRGpWfz.jpg\" />`)\r\n\r\n\r\n<small>(the image is irrelevant, it's just the last picture someone sent me a link to)</small>",
      "EditableFormat": "markdown",
      "HTML": "<p>You'd need to upload them to another site (I usually use imgur.com because it's fast and reliable), then either provide a link or embed the image link in the post (something like <code>&lt;img src=\"http://i.imgur.com/WRGpWfz.jpg\" /&gt;</code>)</p>\n<p><small>(the image is irrelevant, it's just the last picture someone sent me a link to)</small></p>\n\n",
      "PostDate": "2018-08-31T15:03:01.1414341Z",
      "LastEditDate": "2018-08-31T15:04:27.297014Z",
      "link": null
    },
    {
      "PostId": "2c64f330-ac95-4502-9d1f-643ba0effe53",
      "UserId": 373997,
      "Username": "zacman",
      "AvatarUrl": "https://secure.gravatar.com/avatar/ba3b22a63e4b5cff3069d4280942fe54?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "https://imgur.com/gallery/UvFkb5a",
      "EditableFormat": "markdown",
      "HTML": "<p>https://imgur.com/gallery/UvFkb5a</p>\n\n",
      "PostDate": "2018-08-31T17:34:32.3215941Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ee6ad093-a8cc-4d69-a172-a60cc96a8973",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "When I copy the script you've got into my own game, it gives me exactly the error I'd expect:\r\n\r\n`Error running script: Error compiling expression '\"\"\"You say \\\"\" + text + \"\\\" but nobody replies.\"': SyntaxError: Unexpected token \"\"You say \\\"\"\" <STRING_LITERAL>; expected one of <EOF>Line: 1, Column: 3`\r\n\r\nThis error is caused by too many `\"` at the start of the expression.\r\n\r\nBut you said it was responding \"does not understand command\". I assume you mean the default \"I don't understand your command.\" message?\r\n\r\nIn that case, I'd check that the command pattern is correct (which it looks like it is), or check the command's location. Is this command in the room, or in the main commands list for the game?",
      "EditableFormat": "markdown",
      "HTML": "<p>When I copy the script you've got into my own game, it gives me exactly the error I'd expect:</p>\n<p><code>Error running script: Error compiling expression '\"\"\"You say \\\"\" + text + \"\\\" but nobody replies.\"': SyntaxError: Unexpected token \"\"You say \\\"\"\" &lt;STRING_LITERAL&gt;; expected one of &lt;EOF&gt;Line: 1, Column: 3</code></p>\n<p>This error is caused by too many <code>\"</code> at the start of the expression.</p>\n<p>But you said it was responding \"does not understand command\". I assume you mean the default \"I don't understand your command.\" message?</p>\n<p>In that case, I'd check that the command pattern is correct (which it looks like it is), or check the command's location. Is this command in the room, or in the main commands list for the game?</p>\n\n",
      "PostDate": "2018-08-31T18:05:11.670964Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f3184917-6cd2-4310-a09b-17e8759cf967",
      "UserId": 373997,
      "Username": "zacman",
      "AvatarUrl": "https://secure.gravatar.com/avatar/ba3b22a63e4b5cff3069d4280942fe54?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "it's in the main commands list for the game, and yes the defuilt one",
      "EditableFormat": "markdown",
      "HTML": "<p>it's in the main commands list for the game, and yes the defuilt one</p>\n\n",
      "PostDate": "2018-08-31T20:10:58.2293156Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "59fc5b17-de0b-4e01-9f7c-e570d714ae9b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What command are you typing?",
      "EditableFormat": "markdown",
      "HTML": "<p>What command are you typing?</p>\n\n",
      "PostDate": "2018-08-31T21:16:14.3553697Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9284f4f2-63ef-48b4-9c58-2f4116510115",
      "UserId": 373997,
      "Username": "zacman",
      "AvatarUrl": "https://secure.gravatar.com/avatar/ba3b22a63e4b5cff3069d4280942fe54?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "i'm trying to make it work by typing \"say hello\" but can never get it to work.",
      "EditableFormat": "markdown",
      "HTML": "<p>i'm trying to make it work by typing \"say hello\" but can never get it to work.</p>\n\n",
      "PostDate": "2018-08-31T21:45:09.5350301Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b285daea-d611-4800-b4cd-483bb855a381",
      "UserId": 373997,
      "Username": "zacman",
      "AvatarUrl": "https://secure.gravatar.com/avatar/ba3b22a63e4b5cff3069d4280942fe54?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "i'm trying to make it work by typing \"say hello\" but can never get it to work.",
      "EditableFormat": "markdown",
      "HTML": "<p>i'm trying to make it work by typing \"say hello\" but can never get it to work.</p>\n\n",
      "PostDate": "2018-08-31T21:45:28.1739667Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2e66fb7a-89db-47f6-a371-bdebb687a899",
      "UserId": 373997,
      "Username": "zacman",
      "AvatarUrl": "https://secure.gravatar.com/avatar/ba3b22a63e4b5cff3069d4280942fe54?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "sorry, sent the same message twice",
      "EditableFormat": "markdown",
      "HTML": "<p>sorry, sent the same message twice</p>\n\n",
      "PostDate": "2018-08-31T22:40:49.1181554Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f7c2a5f4-d01a-4773-8708-bb6b362dc3f6",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm really confused by this one. I can't see where a problem might be creeping in.\r\n\r\nI assume this is a small game, while you're still looking at the tutorials.\r\nCould you open the .aslx file in Notepad or vim, copy the whole code, and paste it here? Put it between lines of backticks so the forum doesn't mangle it.\r\n\r\nLike this:\r\n````\r\n```\r\ncode goes here\r\n```\r\n````",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm really confused by this one. I can't see where a problem might be creeping in.</p>\n<p>I assume this is a small game, while you're still looking at the tutorials.<br>\nCould you open the .aslx file in Notepad or vim, copy the whole code, and paste it here? Put it between lines of backticks so the forum doesn't mangle it.</p>\n<p>Like this:</p>\n<pre><code>```\ncode goes here\n```\n</code></pre>\n\n",
      "PostDate": "2018-08-31T22:43:10.9727206Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "999aa259-a17b-4990-aabd-119417360bf3",
      "UserId": 373997,
      "Username": "zacman",
      "AvatarUrl": "https://secure.gravatar.com/avatar/ba3b22a63e4b5cff3069d4280942fe54?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "it's the tutorial game example, you know the oen the tutorial makes? it's literally that",
      "EditableFormat": "markdown",
      "HTML": "<p>it's the tutorial game example, you know the oen the tutorial makes? it's literally that</p>\n\n",
      "PostDate": "2018-08-31T22:47:27.2548652Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6f928265-ab01-4fc8-9bb8-2b05a141f3b0",
      "UserId": 369970,
      "Username": "Selsynn",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@zacman : if it's only the tutorial, your game will not have this weird bug. If you don't know how to download the .aslx because you'd be in the web version, it is just the download button and after you'll need to unzip to found the .aslx",
      "EditableFormat": "markdown",
      "HTML": "<p>@zacman : if it's only the tutorial, your game will not have this weird bug. If you don't know how to download the .aslx because you'd be in the web version, it is just the download button and after you'll need to unzip to found the .aslx</p>\n\n",
      "PostDate": "2018-09-01T03:40:12.1581597Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "27f1761e-11ac-4769-8eea-be32fb4b81bf",
      "UserId": 373997,
      "Username": "zacman",
      "AvatarUrl": "https://secure.gravatar.com/avatar/ba3b22a63e4b5cff3069d4280942fe54?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "no, this isn't a bug on my part, even the web version now doesn't work for me in this comand stuff, and i[m just fallowing the totuial, now it's showing a error message",
      "EditableFormat": "markdown",
      "HTML": "<p>no, this isn't a bug on my part, even the web version now doesn't work for me in this comand stuff, and i[m just fallowing the totuial, now it's showing a error message</p>\n\n",
      "PostDate": "2018-09-01T04:19:24.1278448Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "71013fa1-4b39-4b0e-ab57-7b2fd52faa78",
      "UserId": 329383,
      "Username": "J_J",
      "AvatarUrl": "https://secure.gravatar.com/avatar/d6dcf2651a8e3cfe546c1fe096981552?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Zacman, copy and paste your work here. Otherwise no one can fix it. \r\n\r\n If you're concerned about your story showing up, just delete out the text in the msg sections.",
      "EditableFormat": "markdown",
      "HTML": "<p>Zacman, copy and paste your work here. Otherwise no one can fix it.</p>\n<p>If you're concerned about your story showing up, just delete out the text in the msg sections.</p>\n\n",
      "PostDate": "2018-09-01T06:58:03.0406355Z",
      "LastEditDate": "2018-09-01T07:04:05.2983181Z",
      "link": null
    },
    {
      "PostId": "13ff6b94-31ac-424c-aebd-c0cd52c1b8fa",
      "UserId": 373997,
      "Username": "zacman",
      "AvatarUrl": "https://secure.gravatar.com/avatar/ba3b22a63e4b5cff3069d4280942fe54?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "... you have got to be KIDDING ME..... well, i nolonger have a problem, it FIXED ITSELF",
      "EditableFormat": "markdown",
      "HTML": "<p>... you have got to be KIDDING ME..... well, i nolonger have a problem, it FIXED ITSELF</p>\n\n",
      "PostDate": "2018-09-01T07:33:39.173302Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
