{
  "Topic": {
    "TopicId": "khcqc--pfuyspiyacrpvvg",
    "ForumId": "10",
    "Title": "Pain with Panes: Issue 2: Scenery in Containers ",
    "LastUpdated": "2018-05-12T07:00:23.5140079Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "72829cbf-7a88-4311-8474-5ce1fa7aab0a",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If I have a scenery object in a container it is revealed in the Inventory pane but not in Places and Objects. This occurred with a spade implemented as a surface on which there was a scenery handle.  That seems an obvious bug but perhaps it has not been reported because what I'm doing is not the usual way to implement a spade? I want the handle to be inspected but never detached.",
      "EditableFormat": "markdown",
      "HTML": "<p>If I have a scenery object in a container it is revealed in the Inventory pane but not in Places and Objects. This occurred with a spade implemented as a surface on which there was a scenery handle.  That seems an obvious bug but perhaps it has not been reported because what I'm doing is not the usual way to implement a spade? I want the handle to be inspected but never detached.</p>\n\n",
      "PostDate": "2018-05-12T07:00:23.5140079Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2571cf9d-ad3d-493b-a8b7-a13f9c99330c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The `scenery` flag is ignored in the inventory. I think the issue's been discussed before; but it's not so easy to resolve.",
      "EditableFormat": "markdown",
      "HTML": "<p>The <code>scenery</code> flag is ignored in the inventory. I think the issue's been discussed before; but it's not so easy to resolve.</p>\n\n",
      "PostDate": "2018-05-12T09:45:55.9524662Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "755e285c-c648-4ae0-b3ee-e33463394aab",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I brought this up a while back.  Pixie tried to fix it, but it caused a lot of problems in the web player.",
      "EditableFormat": "markdown",
      "HTML": "<p>I brought this up a while back.  Pixie tried to fix it, but it caused a lot of problems in the web player.</p>\n\n",
      "PostDate": "2018-05-12T11:57:37.314164Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0c98dbf7-a464-40ed-b1b8-3df38a6c8e66",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@DavyB\r\n\r\nYou can call your next post \"A Paean to Pain in the Pane (in the glass)\".",
      "EditableFormat": "markdown",
      "HTML": "<p>@DavyB</p>\n<p>You can call your next post \"A Paean to Pain in the Pane (in the glass)\".</p>\n\n",
      "PostDate": "2018-05-12T12:09:32.2576069Z",
      "LastEditDate": "2018-05-12T12:26:05.1380999Z",
      "link": null
    },
    {
      "PostId": "619990f3-5cbe-42bd-ad47-8ca3d2fb40a5",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@Dcoder, When I've completed the series of 'pains', a 'paean' may be in order depending on the responses, ...not just for the title! For the moment, I'm about to put up Pain #3...",
      "EditableFormat": "markdown",
      "HTML": "<p>@Dcoder, When I've completed the series of 'pains', a 'paean' may be in order depending on the responses, ...not just for the title! For the moment, I'm about to put up Pain #3...</p>\n\n",
      "PostDate": "2018-05-13T06:12:29.563354Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "43ed8e81-70d1-4e75-a3f0-8762431b58a6",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm going to modify my games to minimise the effect of this issue and of course will leave the thread open in the hope that it can be looked at again.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm going to modify my games to minimise the effect of this issue and of course will leave the thread open in the hope that it can be looked at again.</p>\n\n",
      "PostDate": "2018-05-19T17:10:33.509445Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6447e344-5610-4e68-962e-4bc60f61857b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here's a workaround, maybe.\r\n\r\n```\r\n<turnscript name=\"Scenery excluder\">\r\n  <enabled />\r\n  <script>\r\n    script = \"$(function () {if(!inner_updateList) {inner_updateList = updateList;} updateList = function(n, d) { inner_updateList(n, $.grep(d, function (i) { data = JSON.parse(i);\"\r\n    foreach (o, ScopeReachable()) {\r\n      if (GetBoolean(o, \"scenery\")) {\r\n        script = script + \"if (data['ElementId'] == '\"+o.name+\"') { return false; } \"\r\n      }\r\n    }\r\n    script = script + \"return true; })); });\"\r\n    JS.eval (script)\r\n  </script>\r\n  <changedenabled type=\"script\">\r\n    if (not this.enabled) JS.eval (\"if (inner_updateList) {updateList = inner_updateList;}\");\r\n  </changedenabled>\r\n</turnscript>\r\n```\r\n(off the top of my head; don't blame me for mismatched brackets. Basically, it replaces the javascript function updateList with one that removes scenery objects from the list before passing it on to the real updateList)\r\n\r\nOr if you have a scenery-container and want to hide its children, you could do…\r\n```\r\n<turnscript name=\"Scenery excluder\">\r\n  <enabled />\r\n  <script>\r\n    hiddenobjects = NewObjectList()\r\n    foreach (o, ScopeReachable()) {\r\n      if (GetBoolean(o, \"scenery\")) {\r\n        list add (hiddenobjects, o)\r\n        hiddenobjects = ListCombine (hiddenobjects, GetAllChildObjects(o))\r\n      }\r\n    }\r\n    script = \"$(function () {if(!inner_updateList) {inner_updateList = updateList;} updateList = function(n, d) { inner_updateList(n, $.grep(d, function (i) { data = JSON.parse(i);\"\r\n    foreach (o, CompactList(hiddenobjects)) {\r\n      script = script + \"if (data['ElementId'] == '\"+o.name+\"') { return false; } \"\r\n    }\r\n    script = script + \"return true; })); });\"\r\n    JS.eval (script)\r\n  </script>\r\n  <changedenabled type=\"script\">\r\n    if (not this.enabled) JS.eval (\"if (inner_updateList) {updateList = inner_updateList;}\");\r\n  </changedenabled>\r\n</turnscript>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Here's a workaround, maybe.</p>\n<pre><code>&lt;turnscript name=\"Scenery excluder\"&gt;\n  &lt;enabled /&gt;\n  &lt;script&gt;\n    script = \"$(function () {if(!inner_updateList) {inner_updateList = updateList;} updateList = function(n, d) { inner_updateList(n, $.grep(d, function (i) { data = JSON.parse(i);\"\n    foreach (o, ScopeReachable()) {\n      if (GetBoolean(o, \"scenery\")) {\n        script = script + \"if (data['ElementId'] == '\"+o.name+\"') { return false; } \"\n      }\n    }\n    script = script + \"return true; })); });\"\n    JS.eval (script)\n  &lt;/script&gt;\n  &lt;changedenabled type=\"script\"&gt;\n    if (not this.enabled) JS.eval (\"if (inner_updateList) {updateList = inner_updateList;}\");\n  &lt;/changedenabled&gt;\n&lt;/turnscript&gt;\n</code></pre>\n<p>(off the top of my head; don't blame me for mismatched brackets. Basically, it replaces the javascript function updateList with one that removes scenery objects from the list before passing it on to the real updateList)</p>\n<p>Or if you have a scenery-container and want to hide its children, you could do…</p>\n<pre><code>&lt;turnscript name=\"Scenery excluder\"&gt;\n  &lt;enabled /&gt;\n  &lt;script&gt;\n    hiddenobjects = NewObjectList()\n    foreach (o, ScopeReachable()) {\n      if (GetBoolean(o, \"scenery\")) {\n        list add (hiddenobjects, o)\n        hiddenobjects = ListCombine (hiddenobjects, GetAllChildObjects(o))\n      }\n    }\n    script = \"$(function () {if(!inner_updateList) {inner_updateList = updateList;} updateList = function(n, d) { inner_updateList(n, $.grep(d, function (i) { data = JSON.parse(i);\"\n    foreach (o, CompactList(hiddenobjects)) {\n      script = script + \"if (data['ElementId'] == '\"+o.name+\"') { return false; } \"\n    }\n    script = script + \"return true; })); });\"\n    JS.eval (script)\n  &lt;/script&gt;\n  &lt;changedenabled type=\"script\"&gt;\n    if (not this.enabled) JS.eval (\"if (inner_updateList) {updateList = inner_updateList;}\");\n  &lt;/changedenabled&gt;\n&lt;/turnscript&gt;\n</code></pre>\n\n",
      "PostDate": "2018-05-19T19:06:19.3825982Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4a4dca8b-d511-4d32-9ad9-885d94fe1c81",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry @mrangle, I'm mostly at 'cut and paste' level for JavaScript. Tried this and it gave the error message:\r\n>Error compiling expression 'CompactList(hiddenobjects)': FunctionCallElement: Could find not function 'CompactList(QuestList`1)'\r\n\r\nApologies if this is just a missing bracket!",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry @mrangle, I'm mostly at 'cut and paste' level for JavaScript. Tried this and it gave the error message:</p>\n<blockquote>\n<p>Error compiling expression 'CompactList(hiddenobjects)': FunctionCallElement: Could find not function 'CompactList(QuestList`1)'</p>\n</blockquote>\n<p>Apologies if this is just a missing bracket!</p>\n\n",
      "PostDate": "2018-05-20T09:57:51.9075865Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c4666055-362a-4133-80dc-c64ab8b658e0",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry, my mistake. `CompactList` should have been `ListCompact`.\r\nToo many languages, with different conventions for function names.",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry, my mistake. <code>CompactList</code> should have been <code>ListCompact</code>.<br>\nToo many languages, with different conventions for function names.</p>\n\n",
      "PostDate": "2018-05-20T10:04:06.5078963Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0f7429c7-2ca8-4a19-9d4c-8debcb111f64",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry @mrangle, no difference? No errors reported but scenery objects in containers are still being shown.",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry @mrangle, no difference? No errors reported but scenery objects in containers are still being shown.</p>\n\n",
      "PostDate": "2018-05-20T10:27:10.1316999Z",
      "LastEditDate": "2018-05-20T10:30:12.5937892Z",
      "link": null
    },
    {
      "PostId": "4cb10778-22c3-462b-842d-7b4fd5a44e38",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ugh ... $.each works on enumerable objects, $.grep doesn't.\r\n\r\n```\r\n<turnscript name=\"Scenery excluder\">\r\n  <enabled />\r\n  <script>\r\n    firsttime {\r\n      JS.eval (\"inner_updateList = updateList\")\r\n    }\r\n    hiddenobjects = NewObjectList()\r\n    foreach (o, ScopeReachable()) {\r\n      if (GetBoolean(o, \"scenery\")) {\r\n        list add (hiddenobjects, o)\r\n        hiddenobjects = ListCombine (hiddenobjects, GetAllChildObjects(o))\r\n      }\r\n    }\r\n    script = \"updateList = function(n, d) { $.each(d, function (i, x) { x = JSON.parse(x);\"\r\n    foreach (o, ListCompact(hiddenobjects)) {\r\n      script = script + \"if (x['ElementId'] == '\"+o.name+\"') { delete d[i]; } \"\r\n    }\r\n    script = script + \"}); inner_updateList(n, d) };\"\r\n    JS.eval (script)\r\n  </script>\r\n  <changedenabled type=\"script\">\r\n    if (not this.enabled) JS.eval (\"if (inner_updateList) {updateList = inner_updateList;}\");\r\n  </changedenabled>\r\n</turnscript>\r\n```\r\nHaven't tested in Quest; but have tested the JS it creates in the developer console in my browser.\r\n\r\nDoes that work any better?",
      "EditableFormat": "markdown",
      "HTML": "<p>Ugh ... $.each works on enumerable objects, $.grep doesn't.</p>\n<pre><code>&lt;turnscript name=\"Scenery excluder\"&gt;\n  &lt;enabled /&gt;\n  &lt;script&gt;\n    firsttime {\n      JS.eval (\"inner_updateList = updateList\")\n    }\n    hiddenobjects = NewObjectList()\n    foreach (o, ScopeReachable()) {\n      if (GetBoolean(o, \"scenery\")) {\n        list add (hiddenobjects, o)\n        hiddenobjects = ListCombine (hiddenobjects, GetAllChildObjects(o))\n      }\n    }\n    script = \"updateList = function(n, d) { $.each(d, function (i, x) { x = JSON.parse(x);\"\n    foreach (o, ListCompact(hiddenobjects)) {\n      script = script + \"if (x['ElementId'] == '\"+o.name+\"') { delete d[i]; } \"\n    }\n    script = script + \"}); inner_updateList(n, d) };\"\n    JS.eval (script)\n  &lt;/script&gt;\n  &lt;changedenabled type=\"script\"&gt;\n    if (not this.enabled) JS.eval (\"if (inner_updateList) {updateList = inner_updateList;}\");\n  &lt;/changedenabled&gt;\n&lt;/turnscript&gt;\n</code></pre>\n<p>Haven't tested in Quest; but have tested the JS it creates in the developer console in my browser.</p>\n<p>Does that work any better?</p>\n\n",
      "PostDate": "2018-05-20T11:23:18.4290522Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ade2da52-a73d-452f-86d7-400ed4f0aa66",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Excellent! That does the job. I think I may be at the bottom of my issues list for panes. That's a pleasant surprise!!! I imagined the scenery in containers problem would be the easiest to sort out as I'd assumed that pretty much the same code would (should?) be used for both the Inventory and the Places and Objects panes.\r\n\r\nThanks again!",
      "EditableFormat": "markdown",
      "HTML": "<p>Excellent! That does the job. I think I may be at the bottom of my issues list for panes. That's a pleasant surprise!!! I imagined the scenery in containers problem would be the easiest to sort out as I'd assumed that pretty much the same code would (should?) be used for both the Inventory and the Places and Objects panes.</p>\n<p>Thanks again!</p>\n\n",
      "PostDate": "2018-05-20T11:38:36.0864984Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "653ef5af-139c-42f0-ba40-aecfe43445e4",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "KV says:\r\n>There is no reason to fool around with scenery in containers. If something is scenery, it shouldn't be in the player's inventory (or inside of anything in the player's inventory).\r\nIf we want to hide something until a certain event has taken place, we need to set visible to false.\r\nIf we want something to exist just in case the player tries to interact with it, we need to make it scenery. (Sidenote: Once something set as scenery is directly taken, its scenery attribute is set to false.)\r\n\r\nCan you say something more about the sidenote? Why is the attribute set to false? Is that the underlying issue?",
      "EditableFormat": "markdown",
      "HTML": "<p>KV says:</p>\n<blockquote>\n<p>There is no reason to fool around with scenery in containers. If something is scenery, it shouldn't be in the player's inventory (or inside of anything in the player's inventory).<br>\nIf we want to hide something until a certain event has taken place, we need to set visible to false.<br>\nIf we want something to exist just in case the player tries to interact with it, we need to make it scenery. (Sidenote: Once something set as scenery is directly taken, its scenery attribute is set to false.)</p>\n</blockquote>\n<p>Can you say something more about the sidenote? Why is the attribute set to false? Is that the underlying issue?</p>\n\n",
      "PostDate": "2018-05-21T06:09:54.3696311Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "15c86962-f5cd-4ad4-b65a-5ef55a0ae5e6",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "![image](https://user-images.githubusercontent.com/30656341/40307584-b536797c-5cc8-11e8-87b0-068fe4cf1ce2.png)\r\n\r\n---\r\n**Scenery** is something which is either mentioned in the prose or something which would be expected to exist (floor, wall, sky, etc.).  We don't want scenery listed in the objects list, but we do want the player to be able to interact with it.  In other words, it is there, and you can see it and touch it, but it is unimportant.\r\n\r\nThings which should be scenery in this scene:\r\n\r\n- counter\r\n- moldy food\r\n- dead insects\r\n- floor\r\n- fungus\r\n- fridge (scenery here because it is stuck closed and pointless)\r\n- kitchen (optional)\r\n\r\n---\r\nIf something which is scenery can be taken, it should no longer be scenery once it is taken.  Otherwise, you'd be carrying something which didn't show up in your inventory, which would be counter-productive.\r\n\r\nSince that is the case, why script the code which updates the inventory lists to ignore scenery?\r\n\r\n---\r\n**```visible```** is an attribute which actually decides whether an object is in play or not.\r\n\r\nIf we want an object to appear after some specific event during play, we want to make it invisible at first by setting ```visible``` to false.\r\n\r\nThis is not scenery.  Scenery is something which the player *should* be able to interact with but isn't important enough to list in object lists.\r\n\r\nOnce it's time to add our invisible object into play, we set ```visible``` to true and print a message letting the player know that something new has just been added to the location.\r\n\r\n---\r\nEXAMPLE GAME\r\n\r\nThere is a sticky note \"underneath\" the Squiffy Tart in the lunchbox.  I don't want the player to see it or interact with it until the Squiffy Tart has been handled, so it starts off with ```visible``` set to false.  Once the Squiffy Tart's parent object changes, the sticky note's ```visible``` attribute is set to true, and a message prints to let you know this.\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Scenery VS Visible\">\r\n    <gameid>89164b33-2b4a-4175-acaa-8ab6b3b246a5</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <attr name=\"autodescription_youarein_useprefix\" type=\"boolean\">false</attr>\r\n    <attr name=\"autodescription_youcango\" type=\"int\">4</attr>\r\n    <attr name=\"autodescription_youcansee\" type=\"int\">3</attr>\r\n    <attr name=\"autodescription_description\" type=\"int\">2</attr>\r\n    <start type=\"script\">\r\n      foreach (o, FilterByNotAttribute(AllObjects(),\"feature_usable\", true)) {\r\n        o.inventoryverbs = ListExclude(o.inventoryverbs,\"Use\")\r\n      }\r\n      foreach (o, FilterByNotAttribute(AllObjects(),\"take\", true)) {\r\n        o.displayverbs = ListExclude(o.displayverbs,\"Take\")\r\n      }\r\n    </start>\r\n  </game>\r\n  <object name=\"living room\">\r\n    <inherit name=\"editor_room\" />\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <description><![CDATA[This room is completely bare. No furniture at all.<br/><br/>Please proceed to the next location.<br/>]]></description>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"east\" to=\"kitchen\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"kitchen\">\r\n    <inherit name=\"editor_room\" />\r\n    <description><![CDATA[This may be the nastiest kitchen you've ever seen. The counter is covered in moldy food and dead insects. The floor is so greasy, you could skate on it. And there is some strange fungus growing on the outside of the fridge.<br/>]]></description>\r\n    <exitslistprefix>You can see an exit to the</exitslistprefix>\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <exit alias=\"west\" to=\"living room\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n    <object name=\"counter\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"surface\" />\r\n      <scenery />\r\n      <feature_container />\r\n      <listchildren />\r\n      <look>Its very nasty!  The dead bugs are the worst part.</look>\r\n      <takemsg>It is fixed in place.</takemsg>\r\n      <addscript type=\"script\">\r\n        msg (\"Putting anything on this funky counter would be unwise.\")\r\n      </addscript>\r\n    </object>\r\n    <object name=\"moldy food\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"edible\" />\r\n      <scenery />\r\n      <look>You can't even tell what sort of food this used to be!</look>\r\n      <take />\r\n      <feature_edible />\r\n    </object>\r\n    <object name=\"dead insects\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"plural\" />\r\n      <scenery />\r\n      <look>Eww... Cockroaches!</look>\r\n      <takemsg>You'd rather not touch the dead insects.{once:  Plus, there's nothing to be done with them, anyway.}</takemsg>\r\n    </object>\r\n    <object name=\"floor\">\r\n      <inherit name=\"editor_object\" />\r\n      <scenery />\r\n      <look>It is completely covered in grease and something which looks a lot like dried-up chicken blood.</look>\r\n      <takemsg>You can't take the floor.{once:  Good try, though!}</takemsg>\r\n    </object>\r\n    <object name=\"kitchen1\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>kitchen</alias>\r\n      <scenery />\r\n      <takemsg>Impossible.</takemsg>\r\n      <look type=\"script\">\r\n        ShowRoomDescription\r\n      </look>\r\n    </object>\r\n    <object name=\"fridge\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"container_closed\" />\r\n      <inherit name=\"container_lockable\" />\r\n      <alt type=\"stringlist\">\r\n        <value>refrigerator</value>\r\n      </alt>\r\n      <feature_container />\r\n      <open />\r\n      <nokeymessage>It is stuck closed.</nokeymessage>\r\n      <takemsg>It's much too heavy to pick up.</takemsg>\r\n      <scenery />\r\n    </object>\r\n    <object name=\"lunchbox\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"container_closed\" />\r\n      <alias>He-Man lunchbox</alias>\r\n      <look><![CDATA[A red, plastic lunchbox featuring an image of the toy once meant to be Conan.<br/>]]></look>\r\n      <feature_container />\r\n      <take />\r\n      <listchildren />\r\n      <object name=\"Squiffy Tart\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"edible\" />\r\n        <take />\r\n        <feature_edible />\r\n        <eatmsg>Mm.  Tastes just like heaven!</eatmsg>\r\n        <look><![CDATA[Mmmm...  A \"Heaven-flavored\" Squiffy Tart...<br/><br/>It looks quite tasty!]]></look>\r\n        <ontake type=\"script\"><![CDATA[\r\n          firsttime {\r\n            sticky note.visible = true\r\n            msg (\"<br/>You notice a {object:sticky note} which was previously hidden underneath the Squiffy Tart.\")\r\n          }\r\n        ]]></ontake>\r\n        <changedparent type=\"script\"><![CDATA[\r\n          if (game.pov = this) {\r\n            if (IsDefined(\"oldvalue\")) {\r\n              OnEnterRoom (oldvalue)\r\n            }\r\n            else {\r\n              OnEnterRoom (null)\r\n            }\r\n            if (game.gridmap) {\r\n              MergePOVCoordinates\r\n            }\r\n          }\r\n          this.hasbeenmoved = true\r\n          firsttime {\r\n            sticky note.visible = true\r\n            msg (\"<br/>You notice a {object:sticky note} which was previously hidden underneath the Squiffy Tart.\")\r\n          }\r\n        ]]></changedparent>\r\n        <eat type=\"script\">\r\n          if (HasString(this, \"eatmsg\")) {\r\n            msg (this.eatmsg)\r\n          }\r\n          else {\r\n            msg (DynamicTemplate(\"Eaten\", this))\r\n          }\r\n          if (HasInt(game.pov, \"health\")) {\r\n            game.pov.health = game.pov.health + this.eathealth\r\n          }\r\n          RemoveObject (this)\r\n        </eat>\r\n        <move type=\"script\">\r\n          parent = this.parent\r\n          if (not parent = game.pov) {\r\n            msg (\"You move it a little.\")\r\n            MoveObject (this, game)\r\n            MoveObject (this, parent)\r\n          }\r\n          else {\r\n            msg (\"You wave it around in the air a little.\")\r\n          }\r\n        </move>\r\n      </object>\r\n      <object name=\"sticky note\">\r\n        <inherit name=\"editor_object\" />\r\n        <look><![CDATA[A small sticky-note.<br/><br/>It reads:<br/><br/>\"If you can read this, you moved the Squiffy Tart!\"]]></look>\r\n        <visible type=\"boolean\">false</visible>\r\n        <takemsg>It is stuck to the lunchbox.</takemsg>\r\n        <read>\"If you can read this, you moved the Squiffy Tart!\"</read>\r\n      </object>\r\n    </object>\r\n    <object name=\"fungus\">\r\n      <inherit name=\"editor_object\" />\r\n      <look>The fridge has begun to grow hair!</look>\r\n      <takemsg>You try to scrape off some fungus, but it's too thick and tough.{once:  (Perhaps you should just leave it be.)}</takemsg>\r\n      <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n      <prefix>some</prefix>\r\n      <scenery />\r\n    </object>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p><img src=\"https://user-images.githubusercontent.com/30656341/40307584-b536797c-5cc8-11e8-87b0-068fe4cf1ce2.png\" alt=\"image\"></p>\n<hr>\n<p><strong>Scenery</strong> is something which is either mentioned in the prose or something which would be expected to exist (floor, wall, sky, etc.).  We don't want scenery listed in the objects list, but we do want the player to be able to interact with it.  In other words, it is there, and you can see it and touch it, but it is unimportant.</p>\n<p>Things which should be scenery in this scene:</p>\n<ul>\n<li>counter</li>\n<li>moldy food</li>\n<li>dead insects</li>\n<li>floor</li>\n<li>fungus</li>\n<li>fridge (scenery here because it is stuck closed and pointless)</li>\n<li>kitchen (optional)</li>\n</ul>\n<hr>\n<p>If something which is scenery can be taken, it should no longer be scenery once it is taken.  Otherwise, you'd be carrying something which didn't show up in your inventory, which would be counter-productive.</p>\n<p>Since that is the case, why script the code which updates the inventory lists to ignore scenery?</p>\n<hr>\n<p><strong><code>visible</code></strong> is an attribute which actually decides whether an object is in play or not.</p>\n<p>If we want an object to appear after some specific event during play, we want to make it invisible at first by setting <code>visible</code> to false.</p>\n<p>This is not scenery.  Scenery is something which the player <em>should</em> be able to interact with but isn't important enough to list in object lists.</p>\n<p>Once it's time to add our invisible object into play, we set <code>visible</code> to true and print a message letting the player know that something new has just been added to the location.</p>\n<hr>\n<p>EXAMPLE GAME</p>\n<p>There is a sticky note \"underneath\" the Squiffy Tart in the lunchbox.  I don't want the player to see it or interact with it until the Squiffy Tart has been handled, so it starts off with <code>visible</code> set to false.  Once the Squiffy Tart's parent object changes, the sticky note's <code>visible</code> attribute is set to true, and a message prints to let you know this.</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Scenery VS Visible\"&gt;\n    &lt;gameid&gt;89164b33-2b4a-4175-acaa-8ab6b3b246a5&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;attr name=\"autodescription_youarein_useprefix\" type=\"boolean\"&gt;false&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youcango\" type=\"int\"&gt;4&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youcansee\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"autodescription_description\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;start type=\"script\"&gt;\n      foreach (o, FilterByNotAttribute(AllObjects(),\"feature_usable\", true)) {\n        o.inventoryverbs = ListExclude(o.inventoryverbs,\"Use\")\n      }\n      foreach (o, FilterByNotAttribute(AllObjects(),\"take\", true)) {\n        o.displayverbs = ListExclude(o.displayverbs,\"Take\")\n      }\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"living room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;description&gt;&lt;![CDATA[This room is completely bare. No furniture at all.&lt;br/&gt;&lt;br/&gt;Please proceed to the next location.&lt;br/&gt;]]&gt;&lt;/description&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"east\" to=\"kitchen\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"kitchen\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description&gt;&lt;![CDATA[This may be the nastiest kitchen you've ever seen. The counter is covered in moldy food and dead insects. The floor is so greasy, you could skate on it. And there is some strange fungus growing on the outside of the fridge.&lt;br/&gt;]]&gt;&lt;/description&gt;\n    &lt;exitslistprefix&gt;You can see an exit to the&lt;/exitslistprefix&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;exit alias=\"west\" to=\"living room\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;object name=\"counter\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"surface\" /&gt;\n      &lt;scenery /&gt;\n      &lt;feature_container /&gt;\n      &lt;listchildren /&gt;\n      &lt;look&gt;Its very nasty!  The dead bugs are the worst part.&lt;/look&gt;\n      &lt;takemsg&gt;It is fixed in place.&lt;/takemsg&gt;\n      &lt;addscript type=\"script\"&gt;\n        msg (\"Putting anything on this funky counter would be unwise.\")\n      &lt;/addscript&gt;\n    &lt;/object&gt;\n    &lt;object name=\"moldy food\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"edible\" /&gt;\n      &lt;scenery /&gt;\n      &lt;look&gt;You can't even tell what sort of food this used to be!&lt;/look&gt;\n      &lt;take /&gt;\n      &lt;feature_edible /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"dead insects\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"plural\" /&gt;\n      &lt;scenery /&gt;\n      &lt;look&gt;Eww... Cockroaches!&lt;/look&gt;\n      &lt;takemsg&gt;You'd rather not touch the dead insects.{once:  Plus, there's nothing to be done with them, anyway.}&lt;/takemsg&gt;\n    &lt;/object&gt;\n    &lt;object name=\"floor\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;scenery /&gt;\n      &lt;look&gt;It is completely covered in grease and something which looks a lot like dried-up chicken blood.&lt;/look&gt;\n      &lt;takemsg&gt;You can't take the floor.{once:  Good try, though!}&lt;/takemsg&gt;\n    &lt;/object&gt;\n    &lt;object name=\"kitchen1\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;kitchen&lt;/alias&gt;\n      &lt;scenery /&gt;\n      &lt;takemsg&gt;Impossible.&lt;/takemsg&gt;\n      &lt;look type=\"script\"&gt;\n        ShowRoomDescription\n      &lt;/look&gt;\n    &lt;/object&gt;\n    &lt;object name=\"fridge\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"container_closed\" /&gt;\n      &lt;inherit name=\"container_lockable\" /&gt;\n      &lt;alt type=\"stringlist\"&gt;\n        &lt;value&gt;refrigerator&lt;/value&gt;\n      &lt;/alt&gt;\n      &lt;feature_container /&gt;\n      &lt;open /&gt;\n      &lt;nokeymessage&gt;It is stuck closed.&lt;/nokeymessage&gt;\n      &lt;takemsg&gt;It's much too heavy to pick up.&lt;/takemsg&gt;\n      &lt;scenery /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"lunchbox\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"container_closed\" /&gt;\n      &lt;alias&gt;He-Man lunchbox&lt;/alias&gt;\n      &lt;look&gt;&lt;![CDATA[A red, plastic lunchbox featuring an image of the toy once meant to be Conan.&lt;br/&gt;]]&gt;&lt;/look&gt;\n      &lt;feature_container /&gt;\n      &lt;take /&gt;\n      &lt;listchildren /&gt;\n      &lt;object name=\"Squiffy Tart\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"edible\" /&gt;\n        &lt;take /&gt;\n        &lt;feature_edible /&gt;\n        &lt;eatmsg&gt;Mm.  Tastes just like heaven!&lt;/eatmsg&gt;\n        &lt;look&gt;&lt;![CDATA[Mmmm...  A \"Heaven-flavored\" Squiffy Tart...&lt;br/&gt;&lt;br/&gt;It looks quite tasty!]]&gt;&lt;/look&gt;\n        &lt;ontake type=\"script\"&gt;&lt;![CDATA[\n          firsttime {\n            sticky note.visible = true\n            msg (\"&lt;br/&gt;You notice a {object:sticky note} which was previously hidden underneath the Squiffy Tart.\")\n          }\n        ]]&gt;&lt;/ontake&gt;\n        &lt;changedparent type=\"script\"&gt;&lt;![CDATA[\n          if (game.pov = this) {\n            if (IsDefined(\"oldvalue\")) {\n              OnEnterRoom (oldvalue)\n            }\n            else {\n              OnEnterRoom (null)\n            }\n            if (game.gridmap) {\n              MergePOVCoordinates\n            }\n          }\n          this.hasbeenmoved = true\n          firsttime {\n            sticky note.visible = true\n            msg (\"&lt;br/&gt;You notice a {object:sticky note} which was previously hidden underneath the Squiffy Tart.\")\n          }\n        ]]&gt;&lt;/changedparent&gt;\n        &lt;eat type=\"script\"&gt;\n          if (HasString(this, \"eatmsg\")) {\n            msg (this.eatmsg)\n          }\n          else {\n            msg (DynamicTemplate(\"Eaten\", this))\n          }\n          if (HasInt(game.pov, \"health\")) {\n            game.pov.health = game.pov.health + this.eathealth\n          }\n          RemoveObject (this)\n        &lt;/eat&gt;\n        &lt;move type=\"script\"&gt;\n          parent = this.parent\n          if (not parent = game.pov) {\n            msg (\"You move it a little.\")\n            MoveObject (this, game)\n            MoveObject (this, parent)\n          }\n          else {\n            msg (\"You wave it around in the air a little.\")\n          }\n        &lt;/move&gt;\n      &lt;/object&gt;\n      &lt;object name=\"sticky note\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;look&gt;&lt;![CDATA[A small sticky-note.&lt;br/&gt;&lt;br/&gt;It reads:&lt;br/&gt;&lt;br/&gt;\"If you can read this, you moved the Squiffy Tart!\"]]&gt;&lt;/look&gt;\n        &lt;visible type=\"boolean\"&gt;false&lt;/visible&gt;\n        &lt;takemsg&gt;It is stuck to the lunchbox.&lt;/takemsg&gt;\n        &lt;read&gt;\"If you can read this, you moved the Squiffy Tart!\"&lt;/read&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n    &lt;object name=\"fungus\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;look&gt;The fridge has begun to grow hair!&lt;/look&gt;\n      &lt;takemsg&gt;You try to scrape off some fungus, but it's too thick and tough.{once:  (Perhaps you should just leave it be.)}&lt;/takemsg&gt;\n      &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n      &lt;prefix&gt;some&lt;/prefix&gt;\n      &lt;scenery /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2018-05-21T12:30:48.3339582Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2165fa01-ee0c-4202-a4b1-5028d656f4c7",
      "UserId": 329383,
      "Username": "J_J",
      "AvatarUrl": "https://secure.gravatar.com/avatar/d6dcf2651a8e3cfe546c1fe096981552?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Because of how scenery works when it's not in the player's inventory, I also initially was using scenery as details or parts of a visible object. It quickly became clear that if I tried to move it into the inventory with the object, it no longer functioned as scenery. Not a big deal, but a bit confusing for a beginner.\r\n\r\nOne way to do what you want is to delete the handle object. Then, make a command that is \"Look at handle; look at spade handle; look at spade's handle\" then add the \"if  player is carrying spade\" or \"if player is in (room with spade)\" and then have the command run a description of the spade's handle. Not super elegant, but does work.",
      "EditableFormat": "markdown",
      "HTML": "<p>Because of how scenery works when it's not in the player's inventory, I also initially was using scenery as details or parts of a visible object. It quickly became clear that if I tried to move it into the inventory with the object, it no longer functioned as scenery. Not a big deal, but a bit confusing for a beginner.</p>\n<p>One way to do what you want is to delete the handle object. Then, make a command that is \"Look at handle; look at spade handle; look at spade's handle\" then add the \"if  player is carrying spade\" or \"if player is in (room with spade)\" and then have the command run a description of the spade's handle. Not super elegant, but does work.</p>\n\n",
      "PostDate": "2018-05-21T12:44:46.7734909Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6c2e5565-b56f-42ae-8e65-b2a69d0d388f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "J_J,\r\n\r\nI've run into and tried the same things, and it drove me crazy, too!  (But I'm much better now! (maniacal laugh))\r\n\r\n...and mrangel just said the same thing on another thread where I mentioned scenery.  \r\n\r\nCreating parts of objects as scenery seems to be the first time most authors notice this unusual behavior.  Should we start up a club?  We could call it the \"Weird Things Fan-club\", aka:  WTF.\r\n\r\n---\r\nFor the record, I was trying to explain how Quest handles ```scenery``` and ```visible``` objects, not how I believe it should actually work.",
      "EditableFormat": "markdown",
      "HTML": "<p>J_J,</p>\n<p>I've run into and tried the same things, and it drove me crazy, too!  (But I'm much better now! (maniacal laugh))</p>\n<p>...and mrangel just said the same thing on another thread where I mentioned scenery.</p>\n<p>Creating parts of objects as scenery seems to be the first time most authors notice this unusual behavior.  Should we start up a club?  We could call it the \"Weird Things Fan-club\", aka:  WTF.</p>\n<hr>\n<p>For the record, I was trying to explain how Quest handles <code>scenery</code> and <code>visible</code> objects, not how I believe it should actually work.</p>\n\n",
      "PostDate": "2018-05-21T13:01:23.5535164Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3305b57a-bf7c-4079-b317-2687692938e7",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@KV, I meant comment specifically on \"_Once something set as scenery is directly taken, its scenery attribute is set to false._\"\r\n\r\nThis would explain the inconsistency between seeing the handle in the inventory but not seeing it on the ground before it is picked up. So why is scenery set to false and then, presumably, back to true when the spade is dropped again? Why bother with this change?",
      "EditableFormat": "markdown",
      "HTML": "<p>@KV, I meant comment specifically on \"<em>Once something set as scenery is directly taken, its scenery attribute is set to false.</em>\"</p>\n<p>This would explain the inconsistency between seeing the handle in the inventory but not seeing it on the ground before it is picked up. So why is scenery set to false and then, presumably, back to true when the spade is dropped again? Why bother with this change?</p>\n\n",
      "PostDate": "2018-05-21T13:12:02.8236775Z",
      "LastEditDate": "2018-05-21T13:13:12.0274713Z",
      "link": null
    },
    {
      "PostId": "f32b6b42-468f-49fc-942d-2f0c1548c7b2",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> So why is scenery set to false and then, presumably, back to true when the spade is dropped again?\r\n\r\nIt doesn't get changed back.\r\n\r\nOnce you take it, it is no longer scenery.\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/40310289-e961e264-5cd1-11e8-8941-ae17c93a83c9.png)\r\n\r\n---\r\n## Scenery objects inside of carried objects\r\n\r\nThe inventory list does not check for scenery.  As far as Quest is concerned, scenery shouldn't be held, only examined.  Therefore, it doesn't \"know\" to check for it in the inventory list.  It simply displays the list.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>So why is scenery set to false and then, presumably, back to true when the spade is dropped again?</p>\n</blockquote>\n<p>It doesn't get changed back.</p>\n<p>Once you take it, it is no longer scenery.</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/40310289-e961e264-5cd1-11e8-8941-ae17c93a83c9.png\" alt=\"image\"></p>\n<hr>\n<h2>Scenery objects inside of carried objects</h2>\n<p>The inventory list does not check for scenery.  As far as Quest is concerned, scenery shouldn't be held, only examined.  Therefore, it doesn't \"know\" to check for it in the inventory list.  It simply displays the list.</p>\n\n",
      "PostDate": "2018-05-21T13:35:52.7838118Z",
      "LastEditDate": "2018-05-21T13:36:35.3099736Z",
      "link": null
    },
    {
      "PostId": "f522246f-824d-4d36-9a72-4eee3c9c47a8",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Testing [this code](http://textadventures.co.uk/forum/quest/topic/khcqc--pfuyspiyacrpvvg/pain-with-panes-issue-2-scenery-in-containers#4cb10778-22c3-462b-842d-7b4fd5a44e38).\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/40311236-df4a5d8a-5cd4-11e8-81b8-3d1046ff986e.png)\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/40310847-ba3f5b68-5cd3-11e8-96f1-7b2e0c686b52.png)\r\n\r\n\r\n---\r\nWhen I move the code which declares ```inner_updateList``` to the User Interface Initialisation script, the apple (scenery) shows up in a loaded save until I do something that alters the inventory list's contents.\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/40310975-1dd01cd0-5cd4-11e8-9be4-e15b7bc2095c.png)\r\n\r\n---\r\nNOTE:\r\n\r\nThe only method I've tried that behaves correctly online and in the desktop player is the one that hides the list elements with a ```setTimeout```, and I agree with mrangel: we should be doing something in ```updateList``` instead.  And modifying ```updateList``` works when including a Javascript file, because that file is loaded *before* any of the game's code, therefore all variables and functions exist.  This cannot be done in inituserinterface, though, because Quest is loading the list before it runs that when it loads a saved game online.  (Online authors can't add JS files, so I try to avoid things which depend on them.)",
      "EditableFormat": "markdown",
      "HTML": "<p>Testing <a href=\"http://textadventures.co.uk/forum/quest/topic/khcqc--pfuyspiyacrpvvg/pain-with-panes-issue-2-scenery-in-containers#4cb10778-22c3-462b-842d-7b4fd5a44e38\">this code</a>.</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/40311236-df4a5d8a-5cd4-11e8-81b8-3d1046ff986e.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/40310847-ba3f5b68-5cd3-11e8-96f1-7b2e0c686b52.png\" alt=\"image\"></p>\n<hr>\n<p>When I move the code which declares <code>inner_updateList</code> to the User Interface Initialisation script, the apple (scenery) shows up in a loaded save until I do something that alters the inventory list's contents.</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/40310975-1dd01cd0-5cd4-11e8-9be4-e15b7bc2095c.png\" alt=\"image\"></p>\n<hr>\n<p>NOTE:</p>\n<p>The only method I've tried that behaves correctly online and in the desktop player is the one that hides the list elements with a <code>setTimeout</code>, and I agree with mrangel: we should be doing something in <code>updateList</code> instead.  And modifying <code>updateList</code> works when including a Javascript file, because that file is loaded <em>before</em> any of the game's code, therefore all variables and functions exist.  This cannot be done in inituserinterface, though, because Quest is loading the list before it runs that when it loads a saved game online.  (Online authors can't add JS files, so I try to avoid things which depend on them.)</p>\n\n",
      "PostDate": "2018-05-21T13:59:12.3058943Z",
      "LastEditDate": "2018-05-21T14:06:40.7003382Z",
      "link": null
    },
    {
      "PostId": "fc32050a-61f7-4fc0-82af-ac3a3970c339",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh, I didn't know that was possible...I don't like it...but there are enough open issues at the moment!  :)\r\n\r\nAs the 'displaying scenery in the inventory' issue has been brought up before, probably the best I can do is add encouragement for it to be resolved. In the meantime, I now know about it and can work around it until a fix has been found.",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh, I didn't know that was possible...I don't like it...but there are enough open issues at the moment!  :)</p>\n<p>As the 'displaying scenery in the inventory' issue has been brought up before, probably the best I can do is add encouragement for it to be resolved. In the meantime, I now know about it and can work around it until a fix has been found.</p>\n\n",
      "PostDate": "2018-05-21T14:33:04.9639658Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0c039cc3-652f-46bd-913e-4974f27532b7",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Oh, I didn't know that was possible...I don't like it...but there are enough open issues at the moment! :)\r\n\r\n...sorry KV, this refers to an earlier message talking about picking up scenery and it being converted to non-scenery in the process.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Oh, I didn't know that was possible...I don't like it...but there are enough open issues at the moment! :)</p>\n</blockquote>\n<p>...sorry KV, this refers to an earlier message talking about picking up scenery and it being converted to non-scenery in the process.</p>\n\n",
      "PostDate": "2018-05-21T14:36:37.4660189Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2c48d727-dcb1-4999-b22a-509b7f31bd2c",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You're cool, DavyB!\r\n\r\n---\r\nWhen picking up scenery, if it can be taken, I think Quest has it right.  \r\n\r\nIf it can be taken, it should show up in your inventory when carried.\r\n\r\nIf it can be moved, it does not need to be scenery, because scenery is not listed in the room description.  If you go through the trouble of making an object takeable, it must serve some purpose.  So, if it is dropped in a random location while still flagged ```scenery```, it would be lost forever if the player didn't remember where he or she dropped it.\r\n\r\n---\r\nNow, I do agree with everyone else about scenery in the Inventory pane.\r\n\r\nIf something is carried and is still flagged ```scenery```, this can only mean that the object was not directly taken.  (It is part of something carried, or a child object of something carried.)\r\n\r\nMrAngel came up with a fix, but it can't really be added to games in the web editor.  It has attracted Pixie's attention, though.  So, it will probably end up in Quest's code in a future release.\r\n\r\n---\r\nAnother thing that seems to put players off is the lack of a Take verb on objects inside of carried containers.  (I don't want anyone to try to change this behavior or anything.  I'm just rambling on incessantly at this point.)\r\n\r\nIf I there is a plate with an egg on it, and I pick up the plate, the pane list shows both plate and egg in the inventory.  Since 'Take' is a display verb and not an inventory verb, it doesn't display the 'Take' option on the egg, even though *some* games will say, \"You're not holding that.\" when trying to eat an object which isn't held.\r\n\r\nNow, I know I can just enter TAKE EGG, but not all players know that.  Most players seem to think they can't use verbs which aren't listed on the objects.",
      "EditableFormat": "markdown",
      "HTML": "<p>You're cool, DavyB!</p>\n<hr>\n<p>When picking up scenery, if it can be taken, I think Quest has it right.</p>\n<p>If it can be taken, it should show up in your inventory when carried.</p>\n<p>If it can be moved, it does not need to be scenery, because scenery is not listed in the room description.  If you go through the trouble of making an object takeable, it must serve some purpose.  So, if it is dropped in a random location while still flagged <code>scenery</code>, it would be lost forever if the player didn't remember where he or she dropped it.</p>\n<hr>\n<p>Now, I do agree with everyone else about scenery in the Inventory pane.</p>\n<p>If something is carried and is still flagged <code>scenery</code>, this can only mean that the object was not directly taken.  (It is part of something carried, or a child object of something carried.)</p>\n<p>MrAngel came up with a fix, but it can't really be added to games in the web editor.  It has attracted Pixie's attention, though.  So, it will probably end up in Quest's code in a future release.</p>\n<hr>\n<p>Another thing that seems to put players off is the lack of a Take verb on objects inside of carried containers.  (I don't want anyone to try to change this behavior or anything.  I'm just rambling on incessantly at this point.)</p>\n<p>If I there is a plate with an egg on it, and I pick up the plate, the pane list shows both plate and egg in the inventory.  Since 'Take' is a display verb and not an inventory verb, it doesn't display the 'Take' option on the egg, even though <em>some</em> games will say, \"You're not holding that.\" when trying to eat an object which isn't held.</p>\n<p>Now, I know I can just enter TAKE EGG, but not all players know that.  Most players seem to think they can't use verbs which aren't listed on the objects.</p>\n\n",
      "PostDate": "2018-05-21T15:02:21.0906502Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "236db471-a543-4401-9863-b38b00a93d1f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@DavyB\r\n\r\nMy take on the \"Once something set as scenery is directly taken, its scenery attribute is set to false\" is thinking about a sandwich.\r\n\r\nFor example…\r\n\r\n>==> examine sandwich\r\n*It's a half-eaten toasted cheese and broccoli sub*\r\n>\r\n>==> take sandwich\r\n*You pick it up*\r\n\r\nAt this point, the \"cheese\" object is still scenery. You want to be able to type \"examine cheese\", so you can find out if it's blue cheese or not. But you don't want it to appear in your inventory. At present, the cheese and broccoli would clutter your inventory list because Quest ignores the scenery attribute when displaying an inventory list. That's what the code I posted (somewhere) would change.\r\n\r\nBut...\r\n\r\n>==> take broccoli\r\n*You take a piece of green stuff out of the sandwich. Why would you do this?!?*\r\n>\r\n>==> take cheese\r\n*You now have a pocket full of stringy, melted cheese. Why would you do this?!?*\r\n>\r\n>==> drop broccoli\r\n*You put broccoli on the floor. Best place for it*\r\n\r\nNow, you want the cheese to show in the inventory pane. Especially if you grabbed the broccoli/cheese and left the sandwich behind. Because it's reasonable to assume that the sandwich contains cheese, and to type \"examine cheese\" even if it isn't in the \"You can see:\" list. But it isn't reasonable for the player to assume their pockets contain cheese and broccoli. So, if you directly take a scenery object, it ceases to be scenery, and will be displayed. The same for the broccoli on the floor; it is no longer scenery once you've moved it, so appears in the objects list for the room you dropped it in.\r\n\r\nHmm...\r\n\r\n>==> put dandruff on sandwich\r\n*Ewwww!*\r\n\r\nHere's a scenery object that starts in the inventory; the player shouldn't be alerted to its presence unless they actually look for it or try to interact with it. But as soon as you put it on the sandwich, it should change to non-scenery, because it's out of place and therefore obvious.\r\n\r\nDoes Quest automatically clear the scenery attribute when you drop things, or just when you pick them up?\r\nI think it should probably be both; because if the player moves a scenery object, they should probably be able to see where they put it.",
      "EditableFormat": "markdown",
      "HTML": "<p>@DavyB</p>\n<p>My take on the \"Once something set as scenery is directly taken, its scenery attribute is set to false\" is thinking about a sandwich.</p>\n<p>For example…</p>\n<blockquote>\n<p>==&gt; examine sandwich<br>\n<em>It's a half-eaten toasted cheese and broccoli sub</em></p>\n<p>==&gt; take sandwich<br>\n<em>You pick it up</em></p>\n</blockquote>\n<p>At this point, the \"cheese\" object is still scenery. You want to be able to type \"examine cheese\", so you can find out if it's blue cheese or not. But you don't want it to appear in your inventory. At present, the cheese and broccoli would clutter your inventory list because Quest ignores the scenery attribute when displaying an inventory list. That's what the code I posted (somewhere) would change.</p>\n<p>But...</p>\n<blockquote>\n<p>==&gt; take broccoli<br>\n<em>You take a piece of green stuff out of the sandwich. Why would you do this?!?</em></p>\n<p>==&gt; take cheese<br>\n<em>You now have a pocket full of stringy, melted cheese. Why would you do this?!?</em></p>\n<p>==&gt; drop broccoli<br>\n<em>You put broccoli on the floor. Best place for it</em></p>\n</blockquote>\n<p>Now, you want the cheese to show in the inventory pane. Especially if you grabbed the broccoli/cheese and left the sandwich behind. Because it's reasonable to assume that the sandwich contains cheese, and to type \"examine cheese\" even if it isn't in the \"You can see:\" list. But it isn't reasonable for the player to assume their pockets contain cheese and broccoli. So, if you directly take a scenery object, it ceases to be scenery, and will be displayed. The same for the broccoli on the floor; it is no longer scenery once you've moved it, so appears in the objects list for the room you dropped it in.</p>\n<p>Hmm...</p>\n<blockquote>\n<p>==&gt; put dandruff on sandwich<br>\n<em>Ewwww!</em></p>\n</blockquote>\n<p>Here's a scenery object that starts in the inventory; the player shouldn't be alerted to its presence unless they actually look for it or try to interact with it. But as soon as you put it on the sandwich, it should change to non-scenery, because it's out of place and therefore obvious.</p>\n<p>Does Quest automatically clear the scenery attribute when you drop things, or just when you pick them up?<br>\nI think it should probably be both; because if the player moves a scenery object, they should probably be able to see where they put it.</p>\n\n",
      "PostDate": "2018-05-21T16:04:08.0730108Z",
      "LastEditDate": "2018-05-21T16:10:28.5403677Z",
      "link": null
    },
    {
      "PostId": "684f5c38-9550-48de-9ce3-b5c5dfaf0e9d",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> That's what the code I posted (somewhere) would change.\r\n\r\nThis is the latest, isn't it?\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/khcqc--pfuyspiyacrpvvg/pain-with-panes-issue-2-scenery-in-containers#4cb10778-22c3-462b-842d-7b4fd5a44e38\r\n\r\nThis is what I found while testing it:\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/khcqc--pfuyspiyacrpvvg/pain-with-panes-issue-2-scenery-in-containers#f32b6b42-468f-49fc-942d-2f0c1548c7b2\r\n\r\n---\r\nI think your method (modifying ```updateList```) is better than the way I'm making it work with the call to ```setTimeout```, but I can't make the former work when loading a saved game online without something being messed up.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>That's what the code I posted (somewhere) would change.</p>\n</blockquote>\n<p>This is the latest, isn't it?</p>\n<p>http://textadventures.co.uk/forum/quest/topic/khcqc--pfuyspiyacrpvvg/pain-with-panes-issue-2-scenery-in-containers#4cb10778-22c3-462b-842d-7b4fd5a44e38</p>\n<p>This is what I found while testing it:</p>\n<p>http://textadventures.co.uk/forum/quest/topic/khcqc--pfuyspiyacrpvvg/pain-with-panes-issue-2-scenery-in-containers#f32b6b42-468f-49fc-942d-2f0c1548c7b2</p>\n<hr>\n<p>I think your method (modifying <code>updateList</code>) is better than the way I'm making it work with the call to <code>setTimeout</code>, but I can't make the former work when loading a saved game online without something being messed up.</p>\n\n",
      "PostDate": "2018-05-21T16:12:14.5781101Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a74d609f-0a63-4f4f-9ef3-95a91d9f6c72",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> but I can't make the former work when loading a saved game online without something being messed up.\r\n\r\nHmm... each time you send the new list to the browser, you could do:\r\n```\r\nvar json = $(\"#divOutput #ignoreScenery\");\r\nif (!json.length) { json = $(\"<div>\", {id: \"ignoreScenery\"}).appendTo(\"#divOutput\").hide(); }\r\njson.attr(\"scenery\", JSON.stringify(ignoreScenery));\r\n```\r\nand on loading a saved game (within the JS file? In a 'ready' block? In the UI initialisation script? I don't know what order things are loaded in) you could do:\r\n```\r\nvar json = $(\"#divOutput #ignoreScenery\");\r\nif (json.length) {\r\n  ignoreScenery = JSON.parse(json.attr(\"scenery\"));\r\n  $(\"#lstInventory\").children().each(function () {\r\n    if ($.inArray ($(this).data(\"elementid\"), ignoreScenery) >= 0) {\r\n      $(this).remove();\r\n    }\r\n  });\r\n}\r\n```\r\nIf the 'load' script is included in the same file as the modified updateList, it should work I think. If it's loaded before the lists are restored to their pre-save contents, then `ignoreScenery` (I forget if that's what we called the array, you know the one I mean) will be loaded, and the modified updateList will work correctly. If the built-in updateList is used to restore the inventory, then that function should remove the scenery items again.\r\n\r\nAm I missing something?",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>but I can't make the former work when loading a saved game online without something being messed up.</p>\n</blockquote>\n<p>Hmm... each time you send the new list to the browser, you could do:</p>\n<pre><code>var json = $(\"#divOutput #ignoreScenery\");\nif (!json.length) { json = $(\"&lt;div&gt;\", {id: \"ignoreScenery\"}).appendTo(\"#divOutput\").hide(); }\njson.attr(\"scenery\", JSON.stringify(ignoreScenery));\n</code></pre>\n<p>and on loading a saved game (within the JS file? In a 'ready' block? In the UI initialisation script? I don't know what order things are loaded in) you could do:</p>\n<pre><code>var json = $(\"#divOutput #ignoreScenery\");\nif (json.length) {\n  ignoreScenery = JSON.parse(json.attr(\"scenery\"));\n  $(\"#lstInventory\").children().each(function () {\n    if ($.inArray ($(this).data(\"elementid\"), ignoreScenery) &gt;= 0) {\n      $(this).remove();\n    }\n  });\n}\n</code></pre>\n<p>If the 'load' script is included in the same file as the modified updateList, it should work I think. If it's loaded before the lists are restored to their pre-save contents, then <code>ignoreScenery</code> (I forget if that's what we called the array, you know the one I mean) will be loaded, and the modified updateList will work correctly. If the built-in updateList is used to restore the inventory, then that function should remove the scenery items again.</p>\n<p>Am I missing something?</p>\n\n",
      "PostDate": "2018-05-21T16:30:08.3811407Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "051ee200-9162-45b9-bbbc-45bd74a4514e",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(if our scripts are being loaded before the output text is restored, the `<div>` created in the former code chunk could be replaced by a `<script>` containing the latter. Unless Quest has some special behaviour to prevent users doing this (and why should it?), it could run as soon as the saved divOutput content is restored)\r\n\r\nDisclaimer: I'm overstressing, and haven't bothered looking up the actual element IDs. You know the ones I mean, I think.",
      "EditableFormat": "markdown",
      "HTML": "<p>(if our scripts are being loaded before the output text is restored, the <code>&lt;div&gt;</code> created in the former code chunk could be replaced by a <code>&lt;script&gt;</code> containing the latter. Unless Quest has some special behaviour to prevent users doing this (and why should it?), it could run as soon as the saved divOutput content is restored)</p>\n<p>Disclaimer: I'm overstressing, and haven't bothered looking up the actual element IDs. You know the ones I mean, I think.</p>\n\n",
      "PostDate": "2018-05-21T16:34:24.0602651Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "30607422-8d27-430f-93e3-f0943f91fe3e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "First off, there is no need to fool with this until everything is nice and calm.  I'm only posting it now because I'll forget it later.\r\n\r\n---\r\nThis is the order in which things fire in the desktop player:\r\n\r\n1: LOADING PLAYERCORE.JS\r\n\r\n2: LOADING DESKTOPPLAYER.JS\r\n\r\n3: javascript.js function\r\n\r\n4: User interface initialisation.\r\n\r\n5: Start script.\r\n\r\n6: script ELEMENT IN divOutput\r\n\r\n7: library_object initialisation\r\n\r\n8: library_object js string attribute\r\n\r\n9: in-game_object initialisation\r\n\r\n10: in-game_object js string attribute\r\n\r\n11: before entering room first time\r\n\r\n12: before entering room\r\n\r\n13: after entering room first time\r\n\r\n14: after entering room\r\n\r\n---\r\n...and this is loading a saved game:\r\n\r\n1: LOADING PLAYERCORE.JS\r\n\r\n2: LOADING DESKTOPPLAYER.JS\r\n\r\n3: javascript.js function\r\n\r\n4: User interface initialisation.\r\n\r\n5: script ELEMENT IN divOutput\r\n\r\n\r\n---\r\nI'm off to try your latest suggestions, mrangel!",
      "EditableFormat": "markdown",
      "HTML": "<p>First off, there is no need to fool with this until everything is nice and calm.  I'm only posting it now because I'll forget it later.</p>\n<hr>\n<p>This is the order in which things fire in the desktop player:</p>\n<p>1: LOADING PLAYERCORE.JS</p>\n<p>2: LOADING DESKTOPPLAYER.JS</p>\n<p>3: javascript.js function</p>\n<p>4: User interface initialisation.</p>\n<p>5: Start script.</p>\n<p>6: script ELEMENT IN divOutput</p>\n<p>7: library_object initialisation</p>\n<p>8: library_object js string attribute</p>\n<p>9: in-game_object initialisation</p>\n<p>10: in-game_object js string attribute</p>\n<p>11: before entering room first time</p>\n<p>12: before entering room</p>\n<p>13: after entering room first time</p>\n<p>14: after entering room</p>\n<hr>\n<p>...and this is loading a saved game:</p>\n<p>1: LOADING PLAYERCORE.JS</p>\n<p>2: LOADING DESKTOPPLAYER.JS</p>\n<p>3: javascript.js function</p>\n<p>4: User interface initialisation.</p>\n<p>5: script ELEMENT IN divOutput</p>\n<hr>\n<p>I'm off to try your latest suggestions, mrangel!</p>\n\n",
      "PostDate": "2018-05-21T16:50:13.7179144Z",
      "LastEditDate": "2018-05-21T16:52:13.5257123Z",
      "link": null
    }
  ]
}
