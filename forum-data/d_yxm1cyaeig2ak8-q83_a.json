{
  "Topic": {
    "TopicId": "d_yxm1cyaeig2ak8-q83_a",
    "ForumId": "10",
    "Title": "Custom contextmenu",
    "LastUpdated": "2024-10-04T06:04:08.6034114Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "27af2856-e64a-4aac-a5ef-a642c428c267",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The other day, I mentioned the inability to right-click in a Quest game, and Pertex pointed out the bit of code to change that.\r\n\r\nA few minutes later, he said we should make a custom contextmenu with Quest commands. So, we did.\r\n\r\nDavy B tested it out and found erratic behavior across various mobile browsers; hence the code in `game.inituserinterface` that disables the game if it detects a mobile browser (this bit of code is new and has not yet been tested by Davy B).\r\n\r\nNOTE: There is a time lapse between JS and Quest when determining which browser is running the game using `JS.whereAmI()`. It seems to be anywhere between 500ms and 2 seconds.\r\n\r\nHere's what Davy B recently noted concerning this:\r\n\r\n> What I seem to conclude is that when playing on a mobile device (i) there has to be a time gap between executing the command and checking the results and (ii) using the command in the initialisation of the userinterface doesn't work at all? So what I'm doing is issuing the command on entry to the first room for the first time and issuing a warning about the limitations of mobile use after the player has interacted with the game.\r\n\r\n---\r\nhttps://play.textadventures.co.uk/Play.aspx?id=editor/2db0cef6-7a0e-4e16-8d7b-dfb91ffb8d64%2fCustom+ContextmenuTester+-+Online+Editor+Edition.aslx\r\n\r\nIn this test game, I am not using `JS.whereAmI()` at all. I'm directly checking the platform in JS.\r\n\r\nI can only test the part concerning the mobile player on Android, and things seem to usually work a little differently in Safari.\r\n\r\nI'm also sure there is room for improvement. Any comments or suggestions are much appreciated in advance!\r\n\r\n```\r\n<!--Saved by Quest 5.8.7753.35184-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Custom ContextmenuTester - Online Editor Edition\">\r\n    <gameid>c50900c0-cd8e-49f4-9fc8-8a2ce95d707d</gameid>\r\n    <version>1.0.1</version>\r\n    <firstpublished>2024</firstpublished>\r\n    <subtitle>v{game.version}</subtitle>\r\n    <author>KV and Pertex (with help from Davy B)</author>\r\n    <description><![CDATA[This is only a test game.<br/><br/>You can right-click for a custom menu.<br/><br/>---<br/><br/>This feature was created by Pertex.]]></description>\r\n    <inituserinterface type=\"script\"><![CDATA[\r\n      // First, let's (try to) disable the game if a mobile browser is detected\r\n      lt = Chr(60)\r\n      br = lt + \"br/>\"\r\n      textadventures = lt + \"a href=\\\"https://textadventures.co.uk\\\">textadventures.co.uk\" + lt + \"/a>\"\r\n      JS.eval (\"if (isMobilePlayer()){$('#gameContent').hide(); document.writeln('This game is not available to play on mobile browsers.\" + br + br +\"Return to \" + textadventures + \".');}else{console.log('All is well! No mobile browser detected.');}\")\r\n      //\r\n      // ---\r\n      // This is the list of options that will appear when the player right-clicks (or long-click if on mobile)\r\n      game.contextmenucommands = \"look,save,help,inventory,clear the screen,test\"\r\n      // This will change the menu options on the fly if game.contextmenucommands is altered during play\r\n      game.changedcontextmenucommands => {\r\n        CreateCustomContextmenu (game.contextmenucommands)\r\n      }\r\n      // This creates the menu using the stringlist attribute game.contextmenucommands\r\n      CreateCustomContextmenu (game.contextmenucommands)\r\n    ]]></inituserinterface>\r\n  </game>\r\n  <command name=\"clearscreen_cmd\">\r\n    <pattern>clear;clear screen;clear the screen</pattern>\r\n    <script>\r\n      JS.clearScreen ()\r\n    </script>\r\n  </command>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n  </object>\r\n  <command name=\"test_cmd\">\r\n    <pattern>test</pattern>\r\n    <script>\r\n      if (not GetBoolean(test_cmd, \"done\")) {\r\n        msg (\"{color:green:SUCCESS}\")\r\n        game.contextmenucommands = \"jump,Z,XYZZY,quit,HELP\"\r\n        test_cmd.done = true\r\n      }\r\n      else {\r\n        msg (\"This test has already been completed.\")\r\n      }\r\n    </script>\r\n  </command>\r\n  <function name=\"CreateCustomContextmenu\" parameters=\"data\"><![CDATA[\r\n    // For the parameter, you can use:\r\n    // - a string like this: \"look/wait/help\" or \"look,wait,help\" or \"look;wait;help\"\r\n    // - a string list\r\n    // - a string dictionary, which allows you to choose the text displayed for each command, like: QuickParams(\"look\", \"Look\", \"wait\", \"Take a break\", \"help\", \"HELP ME!\") or the normal way to create a string dictionary -- the key is the command sent and the value is the text displayed for that command in the contextmenu\r\n    lt = Chr(60)\r\n    JS.eval (\"$('#custom-contextmenu').remove(); function createCustomContextmenu(menu){overrideContextMenuClick = function(e) { if (!e) e = window.event;  if (e.type && e.type == 'contextmenu') { $('div.jjmenu').hide();  if($('#gamePanesFinished').css('display') != 'block'){ customContextMenu(e);} else { return false;  } } else if ((e.button && e.button == 2) || (e.which && e.which == 3)) { return false; }  else {   return true;  }};window.document.oncontextmenu = overrideContextMenuClick; $('body').append($(menu)); var customContextMenu = function(e){  $('#custom-contextmenu').show().css('left',e.x).css('top',e.y);  e.preventDefault();  return true;}; document.onclick = function(){ $('#custom-contextmenu').hide();  };}\")\r\n    menu = lt + \"div id=\\\"custom-contextmenu\\\" class=\\\"jjmenu bottomOriented\\\" style=\\\"display:none; cursor:pointer; position:fixed;\\\">\" + lt + \"span>\" + lt + \"!--PLACEHOLDER-->\" + lt + \"/span>\" + lt + \"/div>\"\r\n    options = NewStringDictionary()\r\n    if (TypeOf(data) = \"stringdictionary\" or TypeOf(data) = \"dictionary\") {\r\n      foreach (k, data) {\r\n        DictionaryAdd (options, Replace(k, \" \", \"___SPACE___\"), DictionaryItem(data,k))\r\n      }\r\n    }\r\n    else if (TypeOf(data) = \"string\") {\r\n      delimiters = Split(\"/_,_;\",\"_\")\r\n      delimiter = \",\"\r\n      foreach (d, delimiters) {\r\n        if (Instr(data, d) > 0) {\r\n          delimiter = d\r\n        }\r\n      }\r\n      cmds = Split(data, delimiter)\r\n      foreach (cmd, cmds) {\r\n        dictionary add (options, Replace(cmd, \" \", \"___SPACE___\"), CapFirst(cmd))\r\n      }\r\n    }\r\n    else if (TypeOf(data) = \"stringlist\") {\r\n      foreach (cmd, data) {\r\n        dictionary add (options, Replace(cmd, \" \", \"___SPACE___\"), CapFirst(cmd))\r\n      }\r\n    }\r\n    else {\r\n      CreateCustomContextmenu (game.contextmenucommands)\r\n      return (\"start over and use default\")\r\n    }\r\n    menuitems = NewStringList()\r\n    foreach (option, options) {\r\n      cmd = option\r\n      displayed_text = DictionaryItem(options, option)\r\n      menuitem = lt + \"div class=\\\"jj_menu_item\\\" onmouseover=\\\"$(this).addClass(&quot;jj_menu_item_hover&quot;);\\\" onmouseout=\\\"$(this).removeClass(&quot;jj_menu_item_hover&quot;)\\\">\" + lt + \"span name=\\\"\" + cmd + \"\\\" onclick=\\\"$(&quot;#custom-contextmenu&quot;).hide(); $('#txtCommand').val($(this).attr(&quot;name&quot;).replace(/___SPACE___/g,&quot; &quot;)); runCommand()\\\">\" + displayed_text + lt + \"/span>\" + lt + \"/div>\"\r\n      list add (menuitems, menuitem)\r\n    }\r\n    custom_context_menu = Replace (menu, lt + \"!--PLACEHOLDER-->\", Join(menuitems, \"\"))\r\n    JS.createCustomContextmenu (custom_context_menu)\r\n  ]]></function>\r\n</asl>\r\n```\r\n\r\n---\r\nPS\r\n\r\nThese scripts are web editor friendly thanks to Davy B.",
      "EditableFormat": "markdown",
      "HTML": "<p>The other day, I mentioned the inability to right-click in a Quest game, and Pertex pointed out the bit of code to change that.</p>\n<p>A few minutes later, he said we should make a custom contextmenu with Quest commands. So, we did.</p>\n<p>Davy B tested it out and found erratic behavior across various mobile browsers; hence the code in <code>game.inituserinterface</code> that disables the game if it detects a mobile browser (this bit of code is new and has not yet been tested by Davy B).</p>\n<p>NOTE: There is a time lapse between JS and Quest when determining which browser is running the game using <code>JS.whereAmI()</code>. It seems to be anywhere between 500ms and 2 seconds.</p>\n<p>Here's what Davy B recently noted concerning this:</p>\n<blockquote>\n<p>What I seem to conclude is that when playing on a mobile device (i) there has to be a time gap between executing the command and checking the results and (ii) using the command in the initialisation of the userinterface doesn't work at all? So what I'm doing is issuing the command on entry to the first room for the first time and issuing a warning about the limitations of mobile use after the player has interacted with the game.</p>\n</blockquote>\n<hr>\n<p>https://play.textadventures.co.uk/Play.aspx?id=editor/2db0cef6-7a0e-4e16-8d7b-dfb91ffb8d64%2fCustom+ContextmenuTester+-+Online+Editor+Edition.aslx</p>\n<p>In this test game, I am not using <code>JS.whereAmI()</code> at all. I'm directly checking the platform in JS.</p>\n<p>I can only test the part concerning the mobile player on Android, and things seem to usually work a little differently in Safari.</p>\n<p>I'm also sure there is room for improvement. Any comments or suggestions are much appreciated in advance!</p>\n<pre><code>&lt;!--Saved by Quest 5.8.7753.35184--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Custom ContextmenuTester - Online Editor Edition\"&gt;\n    &lt;gameid&gt;c50900c0-cd8e-49f4-9fc8-8a2ce95d707d&lt;/gameid&gt;\n    &lt;version&gt;1.0.1&lt;/version&gt;\n    &lt;firstpublished&gt;2024&lt;/firstpublished&gt;\n    &lt;subtitle&gt;v{game.version}&lt;/subtitle&gt;\n    &lt;author&gt;KV and Pertex (with help from Davy B)&lt;/author&gt;\n    &lt;description&gt;&lt;![CDATA[This is only a test game.&lt;br/&gt;&lt;br/&gt;You can right-click for a custom menu.&lt;br/&gt;&lt;br/&gt;---&lt;br/&gt;&lt;br/&gt;This feature was created by Pertex.]]&gt;&lt;/description&gt;\n    &lt;inituserinterface type=\"script\"&gt;&lt;![CDATA[\n      // First, let's (try to) disable the game if a mobile browser is detected\n      lt = Chr(60)\n      br = lt + \"br/&gt;\"\n      textadventures = lt + \"a href=\\\"https://textadventures.co.uk\\\"&gt;textadventures.co.uk\" + lt + \"/a&gt;\"\n      JS.eval (\"if (isMobilePlayer()){$('#gameContent').hide(); document.writeln('This game is not available to play on mobile browsers.\" + br + br +\"Return to \" + textadventures + \".');}else{console.log('All is well! No mobile browser detected.');}\")\n      //\n      // ---\n      // This is the list of options that will appear when the player right-clicks (or long-click if on mobile)\n      game.contextmenucommands = \"look,save,help,inventory,clear the screen,test\"\n      // This will change the menu options on the fly if game.contextmenucommands is altered during play\n      game.changedcontextmenucommands =&gt; {\n        CreateCustomContextmenu (game.contextmenucommands)\n      }\n      // This creates the menu using the stringlist attribute game.contextmenucommands\n      CreateCustomContextmenu (game.contextmenucommands)\n    ]]&gt;&lt;/inituserinterface&gt;\n  &lt;/game&gt;\n  &lt;command name=\"clearscreen_cmd\"&gt;\n    &lt;pattern&gt;clear;clear screen;clear the screen&lt;/pattern&gt;\n    &lt;script&gt;\n      JS.clearScreen ()\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;command name=\"test_cmd\"&gt;\n    &lt;pattern&gt;test&lt;/pattern&gt;\n    &lt;script&gt;\n      if (not GetBoolean(test_cmd, \"done\")) {\n        msg (\"{color:green:SUCCESS}\")\n        game.contextmenucommands = \"jump,Z,XYZZY,quit,HELP\"\n        test_cmd.done = true\n      }\n      else {\n        msg (\"This test has already been completed.\")\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;function name=\"CreateCustomContextmenu\" parameters=\"data\"&gt;&lt;![CDATA[\n    // For the parameter, you can use:\n    // - a string like this: \"look/wait/help\" or \"look,wait,help\" or \"look;wait;help\"\n    // - a string list\n    // - a string dictionary, which allows you to choose the text displayed for each command, like: QuickParams(\"look\", \"Look\", \"wait\", \"Take a break\", \"help\", \"HELP ME!\") or the normal way to create a string dictionary -- the key is the command sent and the value is the text displayed for that command in the contextmenu\n    lt = Chr(60)\n    JS.eval (\"$('#custom-contextmenu').remove(); function createCustomContextmenu(menu){overrideContextMenuClick = function(e) { if (!e) e = window.event;  if (e.type &amp;&amp; e.type == 'contextmenu') { $('div.jjmenu').hide();  if($('#gamePanesFinished').css('display') != 'block'){ customContextMenu(e);} else { return false;  } } else if ((e.button &amp;&amp; e.button == 2) || (e.which &amp;&amp; e.which == 3)) { return false; }  else {   return true;  }};window.document.oncontextmenu = overrideContextMenuClick; $('body').append($(menu)); var customContextMenu = function(e){  $('#custom-contextmenu').show().css('left',e.x).css('top',e.y);  e.preventDefault();  return true;}; document.onclick = function(){ $('#custom-contextmenu').hide();  };}\")\n    menu = lt + \"div id=\\\"custom-contextmenu\\\" class=\\\"jjmenu bottomOriented\\\" style=\\\"display:none; cursor:pointer; position:fixed;\\\"&gt;\" + lt + \"span&gt;\" + lt + \"!--PLACEHOLDER--&gt;\" + lt + \"/span&gt;\" + lt + \"/div&gt;\"\n    options = NewStringDictionary()\n    if (TypeOf(data) = \"stringdictionary\" or TypeOf(data) = \"dictionary\") {\n      foreach (k, data) {\n        DictionaryAdd (options, Replace(k, \" \", \"___SPACE___\"), DictionaryItem(data,k))\n      }\n    }\n    else if (TypeOf(data) = \"string\") {\n      delimiters = Split(\"/_,_;\",\"_\")\n      delimiter = \",\"\n      foreach (d, delimiters) {\n        if (Instr(data, d) &gt; 0) {\n          delimiter = d\n        }\n      }\n      cmds = Split(data, delimiter)\n      foreach (cmd, cmds) {\n        dictionary add (options, Replace(cmd, \" \", \"___SPACE___\"), CapFirst(cmd))\n      }\n    }\n    else if (TypeOf(data) = \"stringlist\") {\n      foreach (cmd, data) {\n        dictionary add (options, Replace(cmd, \" \", \"___SPACE___\"), CapFirst(cmd))\n      }\n    }\n    else {\n      CreateCustomContextmenu (game.contextmenucommands)\n      return (\"start over and use default\")\n    }\n    menuitems = NewStringList()\n    foreach (option, options) {\n      cmd = option\n      displayed_text = DictionaryItem(options, option)\n      menuitem = lt + \"div class=\\\"jj_menu_item\\\" onmouseover=\\\"$(this).addClass(&amp;quot;jj_menu_item_hover&amp;quot;);\\\" onmouseout=\\\"$(this).removeClass(&amp;quot;jj_menu_item_hover&amp;quot;)\\\"&gt;\" + lt + \"span name=\\\"\" + cmd + \"\\\" onclick=\\\"$(&amp;quot;#custom-contextmenu&amp;quot;).hide(); $('#txtCommand').val($(this).attr(&amp;quot;name&amp;quot;).replace(/___SPACE___/g,&amp;quot; &amp;quot;)); runCommand()\\\"&gt;\" + displayed_text + lt + \"/span&gt;\" + lt + \"/div&gt;\"\n      list add (menuitems, menuitem)\n    }\n    custom_context_menu = Replace (menu, lt + \"!--PLACEHOLDER--&gt;\", Join(menuitems, \"\"))\n    JS.createCustomContextmenu (custom_context_menu)\n  ]]&gt;&lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p>PS</p>\n<p>These scripts are web editor friendly thanks to Davy B.</p>\n\n",
      "PostDate": "2024-10-04T06:04:08.6034114Z",
      "LastEditDate": "2024-10-04T06:13:47.0794919Z",
      "link": null
    }
  ]
}
