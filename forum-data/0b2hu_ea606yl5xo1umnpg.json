{
  "Topic": {
    "TopicId": "0b2hu_ea606yl5xo1umnpg",
    "ForumId": "10",
    "Title": "[Solved] How to change  the Default Exit attributes?",
    "LastUpdated": "2020-12-13T00:02:40.5854564Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "5aeb2906-79c1-474e-b7e4-76d70cfc624a",
      "UserId": 326173,
      "Username": "Curt A. P.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/bc1d5d57408cf4d13f9d9f23c1e3dc56?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I want to change the default value for the **grid_length**( for exits) on the grid map. \r\nI looked into **CoreEditorExit.aslx**, **CoreEditorObjectExits.aslx**, and **CoreGrid.aslx**... but still no clue. \r\n\r\nOr a good way to set the attributes when the exits are created. My game object doesn't have any exits now and all exits and most rooms are created on the fly. I thought before I figure where to set these attributes in a convenient way, I should change the default attributes since I'm most likely not gonna change any exit's **grid_length** ever. ",
      "EditableFormat": "markdown",
      "HTML": "<p>I want to change the default value for the <strong>grid_length</strong>( for exits) on the grid map.<br>\nI looked into <strong>CoreEditorExit.aslx</strong>, <strong>CoreEditorObjectExits.aslx</strong>, and <strong>CoreGrid.aslx</strong>... but still no clue.</p>\n<p>Or a good way to set the attributes when the exits are created. My game object doesn't have any exits now and all exits and most rooms are created on the fly. I thought before I figure where to set these attributes in a convenient way, I should change the default attributes since I'm most likely not gonna change any exit's <strong>grid_length</strong> ever.</p>\n\n",
      "PostDate": "2020-12-13T00:02:40.5854564Z",
      "LastEditDate": "2020-12-13T02:45:12.9099929Z",
      "link": null
    },
    {
      "PostId": "b43e283d-c74c-4554-8131-12962e3b94c7",
      "UserId": 326173,
      "Username": "Curt A. P.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/bc1d5d57408cf4d13f9d9f23c1e3dc56?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "These are the two kinds of events that create exits. I struggled to set the **grid_length** because I didn't figure out where I can place the script so that it actually works and I forgot what I already tried because nothing worked right when I changed the length.\r\n\r\nBoth scripts are part of the same type.\r\n\r\n```\r\n  <type name=\"type_area_rdm\">\r\n    <isroom />\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <objectlistprefix type=\"string\"></objectlistprefix>\r\n    <attr name=\"coord_x\" type=\"int\">0</attr>\r\n    <attr name=\"coord_y\" type=\"int\">0</attr>\r\n    <beforefirstenter type=\"script\">\r\n      // ##############################################################################\r\n      // ______________________________________________________________________________\r\n      // CHECKS IF the room to the NORTH is already created and creates it if not\r\n      // ______________________________________________________________________________\r\n      // ##############################################################################\r\n      gen_n = true\r\n      foreach (ar, GetDirectChildren(zWorldmap)) {\r\n        // ______________________________________________________________________________\r\n        // CHECK X/Y Coords\r\n        // ______________________________________________________________________________\r\n        if (ar.coord_y = this.coord_y + 1 and ar.coord_x = this.coord_x) {\r\n          gen_n = false\r\n          foreach (xt, FilterByAttribute (ScopeExitsForRoom(this), \"alias\", \"north\")) {\r\n            RemoveObject (xt)\r\n          }\r\n          foreach (xt, FilterByAttribute (ScopeExitsForRoom(ar), \"alias\", \"south\")) {\r\n            RemoveObject (xt)\r\n          }\r\n          create exit (\"north\", this, ar, \"northdirection\")\r\n          create exit (\"south\", ar, this, \"southdirection\")\r\n        }\r\n      }\r\n      // ______________________________________________________________________________\r\n      // CREATE/CLONE a RANDOM ROOM for the world map.\r\n      // ______________________________________________________________________________\r\n      if (gen_n = true) {\r\n        game.world_gen = \"north\"\r\n        CloneObjectAndMove (PickOneObject(GetDirectChildren(zVault_World_rdm)), zWorldmap)\r\n      }\r\n```\r\n```\r\n    </changedhasbeenmoved>\r\n    <attr name=\"gen_north\" type=\"script\">\r\n      this.coord_x = player.parent.coord_x\r\n      this.coord_y = player.parent.coord_y + 1\r\n      create exit (\"north\", player.parent, this, \"northdirection\")\r\n      create exit (\"south\", this, player.parent, \"southdirection\")\r\n      game.gen = \"-\"\r\n    </attr>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>These are the two kinds of events that create exits. I struggled to set the <strong>grid_length</strong> because I didn't figure out where I can place the script so that it actually works and I forgot what I already tried because nothing worked right when I changed the length.</p>\n<p>Both scripts are part of the same type.</p>\n<pre><code>  &lt;type name=\"type_area_rdm\"&gt;\n    &lt;isroom /&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;objectlistprefix type=\"string\"&gt;&lt;/objectlistprefix&gt;\n    &lt;attr name=\"coord_x\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;attr name=\"coord_y\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;beforefirstenter type=\"script\"&gt;\n      // ##############################################################################\n      // ______________________________________________________________________________\n      // CHECKS IF the room to the NORTH is already created and creates it if not\n      // ______________________________________________________________________________\n      // ##############################################################################\n      gen_n = true\n      foreach (ar, GetDirectChildren(zWorldmap)) {\n        // ______________________________________________________________________________\n        // CHECK X/Y Coords\n        // ______________________________________________________________________________\n        if (ar.coord_y = this.coord_y + 1 and ar.coord_x = this.coord_x) {\n          gen_n = false\n          foreach (xt, FilterByAttribute (ScopeExitsForRoom(this), \"alias\", \"north\")) {\n            RemoveObject (xt)\n          }\n          foreach (xt, FilterByAttribute (ScopeExitsForRoom(ar), \"alias\", \"south\")) {\n            RemoveObject (xt)\n          }\n          create exit (\"north\", this, ar, \"northdirection\")\n          create exit (\"south\", ar, this, \"southdirection\")\n        }\n      }\n      // ______________________________________________________________________________\n      // CREATE/CLONE a RANDOM ROOM for the world map.\n      // ______________________________________________________________________________\n      if (gen_n = true) {\n        game.world_gen = \"north\"\n        CloneObjectAndMove (PickOneObject(GetDirectChildren(zVault_World_rdm)), zWorldmap)\n      }\n</code></pre>\n<pre><code>    &lt;/changedhasbeenmoved&gt;\n    &lt;attr name=\"gen_north\" type=\"script\"&gt;\n      this.coord_x = player.parent.coord_x\n      this.coord_y = player.parent.coord_y + 1\n      create exit (\"north\", player.parent, this, \"northdirection\")\n      create exit (\"south\", this, player.parent, \"southdirection\")\n      game.gen = \"-\"\n    &lt;/attr&gt;\n</code></pre>\n\n",
      "PostDate": "2020-12-13T00:24:26.0055071Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2c22d02f-7227-4f38-b023-9833e79e69cd",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you want to set it for all exits, you should modify the type `defaultexit`, which is found in `CoreTypes.aslx`.\r\n\r\nBy default it looks like this:\r\n```\r\n  <type name=\"defaultexit\">\r\n    <displayverbs type=\"simplestringlist\">[GoTo]</displayverbs>\r\n    <visible type=\"boolean\">true</visible>\r\n    <scenery type=\"boolean\">false</scenery>\r\n    <locked type=\"boolean\">false</locked>\r\n    <lockmessage>[LockedExit]</lockmessage>\r\n    <lookonly type=\"boolean\">false</lookonly>\r\n    <runscript type=\"boolean\">false</runscript>\r\n    <lightstrength type=\"string\"></lightstrength>\r\n    <grid_length type=\"int\">1</grid_length>\r\n    <grid_render type=\"boolean\">false</grid_render>\r\n    <grid_offset_x type=\"int\">0</grid_offset_x>\r\n    <grid_offset_y type=\"int\">0</grid_offset_y>\r\n  </type>\r\n```\r\nIf you want to modify it, you'll want to copy that into your own game (unless you want to modify all games).\r\n\r\nIf you want to change the length of dynamically created exits, you'll need to use `GetExitByLink` (which actually returns the *name* of the newly created exit, not the exit itself), or `GetUniqueElementName`.\r\nSo instead of:\r\n```\r\ncreate exit (\"north\", player.parent, this, \"northdirection\")\r\n```\r\nyou would have:\r\n```\r\nexitname = GetUniqueElementName(\"exit\")\r\ncreate exit (exitname, \"north\", player.parent, this, \"northdirection\")\r\nnewexit = GetObject (exitname)\r\nnewexit.grid_length = 0\r\n```\r\nOR\r\n```\r\ncreate exit (\"north\", player.parent, this, \"northdirection\")\r\nnewexit = GetObject (GetExitByLink(player.parent, this))\r\nnewexit.grid_length = 0\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>If you want to set it for all exits, you should modify the type <code>defaultexit</code>, which is found in <code>CoreTypes.aslx</code>.</p>\n<p>By default it looks like this:</p>\n<pre><code>  &lt;type name=\"defaultexit\"&gt;\n    &lt;displayverbs type=\"simplestringlist\"&gt;[GoTo]&lt;/displayverbs&gt;\n    &lt;visible type=\"boolean\"&gt;true&lt;/visible&gt;\n    &lt;scenery type=\"boolean\"&gt;false&lt;/scenery&gt;\n    &lt;locked type=\"boolean\"&gt;false&lt;/locked&gt;\n    &lt;lockmessage&gt;[LockedExit]&lt;/lockmessage&gt;\n    &lt;lookonly type=\"boolean\"&gt;false&lt;/lookonly&gt;\n    &lt;runscript type=\"boolean\"&gt;false&lt;/runscript&gt;\n    &lt;lightstrength type=\"string\"&gt;&lt;/lightstrength&gt;\n    &lt;grid_length type=\"int\"&gt;1&lt;/grid_length&gt;\n    &lt;grid_render type=\"boolean\"&gt;false&lt;/grid_render&gt;\n    &lt;grid_offset_x type=\"int\"&gt;0&lt;/grid_offset_x&gt;\n    &lt;grid_offset_y type=\"int\"&gt;0&lt;/grid_offset_y&gt;\n  &lt;/type&gt;\n</code></pre>\n<p>If you want to modify it, you'll want to copy that into your own game (unless you want to modify all games).</p>\n<p>If you want to change the length of dynamically created exits, you'll need to use <code>GetExitByLink</code> (which actually returns the <em>name</em> of the newly created exit, not the exit itself), or <code>GetUniqueElementName</code>.<br>\nSo instead of:</p>\n<pre><code>create exit (\"north\", player.parent, this, \"northdirection\")\n</code></pre>\n<p>you would have:</p>\n<pre><code>exitname = GetUniqueElementName(\"exit\")\ncreate exit (exitname, \"north\", player.parent, this, \"northdirection\")\nnewexit = GetObject (exitname)\nnewexit.grid_length = 0\n</code></pre>\n<p>OR</p>\n<pre><code>create exit (\"north\", player.parent, this, \"northdirection\")\nnewexit = GetObject (GetExitByLink(player.parent, this))\nnewexit.grid_length = 0\n</code></pre>\n\n",
      "PostDate": "2020-12-13T00:47:58.1396431Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3835a93b-89a9-448a-a07e-66f8ad0e0f83",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**EDIT**\r\n\r\nWhoops.  mrangel posted while I was typing this, and he knows much more about the grid than I do.",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>EDIT</strong></p>\n<p>Whoops.  mrangel posted while I was typing this, and he knows much more about the grid than I do.</p>\n\n",
      "PostDate": "2020-12-13T00:53:05.3457251Z",
      "LastEditDate": "2020-12-13T00:54:50.9011595Z",
      "link": null
    },
    {
      "PostId": "4d75c56e-6467-4eb9-9af8-ba231300b7cd",
      "UserId": 326173,
      "Username": "Curt A. P.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/bc1d5d57408cf4d13f9d9f23c1e3dc56?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> If you want to set it for all exits, you should modify the type defaultexit, which is found in CoreTypes.aslx.\r\n>\r\n>By default it looks like this:\r\n>```\r\n>```\r\nThat's it !\r\n\r\n>If you want to modify it, you'll want to copy that into your own game (unless you want to modify all games).\r\n\r\nAnd this advice is especially helpful.\r\n<hr>\r\n\r\n>If you want to change the length of dynamically created exits, you'll need to use GetExitByLink (which actually returns the name of the newly created exit, not the exit itself), or GetUniqueElementName.\r\nSo instead of:\r\n\r\nI don't understand what sort of advantage your second example offers.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>If you want to set it for all exits, you should modify the type defaultexit, which is found in CoreTypes.aslx.</p>\n<p>By default it looks like this:</p>\n<pre><code></code></pre>\n</blockquote>\n<p>That's it !</p>\n<blockquote>\n<p>If you want to modify it, you'll want to copy that into your own game (unless you want to modify all games).</p>\n</blockquote>\n<p>And this advice is especially helpful.</p>\n<hr>\n<blockquote>\n<p>If you want to change the length of dynamically created exits, you'll need to use GetExitByLink (which actually returns the name of the newly created exit, not the exit itself), or GetUniqueElementName.<br>\nSo instead of:</p>\n</blockquote>\n<p>I don't understand what sort of advantage your second example offers.</p>\n\n",
      "PostDate": "2020-12-13T01:18:12.982282Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "618a79fe-a04a-419f-87a1-b4738a354946",
      "UserId": 326173,
      "Username": "Curt A. P.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/bc1d5d57408cf4d13f9d9f23c1e3dc56?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is it correct if I paste this as a normal type? (There where all my other created types are) \r\n```\r\n  <type name=\"defaultexit\">\r\n    <displayverbs type=\"simplestringlist\">[GoTo]</displayverbs>\r\n    <visible type=\"boolean\">true</visible>\r\n    <scenery type=\"boolean\">false</scenery>\r\n    <locked type=\"boolean\">false</locked>\r\n    <lockmessage>[LockedExit]</lockmessage>\r\n    <lookonly type=\"boolean\">false</lookonly>\r\n    <runscript type=\"boolean\">true</runscript>\r\n    <lightstrength type=\"string\"></lightstrength>\r\n    <grid_length type=\"int\">0</grid_length>\r\n    <grid_render type=\"boolean\">true</grid_render>\r\n    <grid_offset_x type=\"int\">0</grid_offset_x>\r\n    <grid_offset_y type=\"int\">0</grid_offset_y>\r\n  </type>\r\n```\r\n\r\nEDIT: Okay, I can't create a new **defaultexit** type like usual. \r\n***\"An element called 'defaultexit' already exists in this game.\"***\r\n\r\n<hr>\r\n\r\nEDIT2:\r\nI solved it. Found this documentation entry about how to make editable copies of the core elements: [http://docs.textadventures.co.uk/quest/overriding.html](http://docs.textadventures.co.uk/quest/overriding.html) ",
      "EditableFormat": "markdown",
      "HTML": "<p>Is it correct if I paste this as a normal type? (There where all my other created types are)</p>\n<pre><code>  &lt;type name=\"defaultexit\"&gt;\n    &lt;displayverbs type=\"simplestringlist\"&gt;[GoTo]&lt;/displayverbs&gt;\n    &lt;visible type=\"boolean\"&gt;true&lt;/visible&gt;\n    &lt;scenery type=\"boolean\"&gt;false&lt;/scenery&gt;\n    &lt;locked type=\"boolean\"&gt;false&lt;/locked&gt;\n    &lt;lockmessage&gt;[LockedExit]&lt;/lockmessage&gt;\n    &lt;lookonly type=\"boolean\"&gt;false&lt;/lookonly&gt;\n    &lt;runscript type=\"boolean\"&gt;true&lt;/runscript&gt;\n    &lt;lightstrength type=\"string\"&gt;&lt;/lightstrength&gt;\n    &lt;grid_length type=\"int\"&gt;0&lt;/grid_length&gt;\n    &lt;grid_render type=\"boolean\"&gt;true&lt;/grid_render&gt;\n    &lt;grid_offset_x type=\"int\"&gt;0&lt;/grid_offset_x&gt;\n    &lt;grid_offset_y type=\"int\"&gt;0&lt;/grid_offset_y&gt;\n  &lt;/type&gt;\n</code></pre>\n<p>EDIT: Okay, I can't create a new <strong>defaultexit</strong> type like usual.<br>\n<strong><em>\"An element called 'defaultexit' already exists in this game.\"</em></strong></p>\n<hr>\n<p>EDIT2:<br>\nI solved it. Found this documentation entry about how to make editable copies of the core elements: <a href=\"http://docs.textadventures.co.uk/quest/overriding.html\">http://docs.textadventures.co.uk/quest/overriding.html</a></p>\n\n",
      "PostDate": "2020-12-13T01:22:04.6881927Z",
      "LastEditDate": "2020-12-13T02:44:44.7944632Z",
      "link": null
    },
    {
      "PostId": "dad79695-98e3-4bcc-b5a6-1bf77b8bb115",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't use the desktop editor, so haven't had much experience with the UI. On previous discussions, I've seen people  saying that for types it is often easier to paste them directly into the full code view; but don't know the details.\r\n\r\nAnd I realised after going to bed last night that there's probably a slightly simpler way to do what you want. Instead of replacing `defaultexit`, you can add your attribute to either either `direction` or `compassdirection`. (exits that don't inherit these two types don't appear on the map anyway). The default versions for those are shorter, so take up less space in your game file. The core versions are:\r\n```\r\n  <type name=\"direction\">\r\n    <displayverbs type=\"simplestringlist\">[Go]</displayverbs>\r\n  </type>\r\n\r\n  <type name=\"compassdirection\">\r\n    <inherit name=\"direction\"/>\r\n    <prefix type=\"string\">[CompassDirectionPrefix]</prefix>\r\n    <suffix type=\"string\">[CompassDirectionSuffix]</suffix>\r\n  </type>\r\n```\r\n\r\n<hr />\r\n\r\n> I don't understand what sort of advantage your second example offers.\r\n\r\nYou asked two questions: how to change the default attributes of exits, and how to change an attribute when a script is creating an exit. I answered both.\r\n\r\nYou probably only need one of those answers if you want the attribute set for all exits. But the script version is still useful if you ever decide make an exception; or if you decide you want to change some other attribute of the exits you're creating.\r\n\r\n<details><summary>I've actually tweaked one of the core functions to make creating and messing with exits in script easier. Don't know if it would be useful to you</summary>\r\n\r\nJust so that you can do `CreateBiExits (\"north\", room1, room2)` and have it create the exit in the other direction automatically (the default CreateBiExits breaks the grid map), and also so that if an exit is moved/locked/unlocked, it will affect both sides of it.\r\n```\r\n  <function name=\"CreateBiExits\" parameters=\"dir, from, to\">\r\n    exitname = GetUniqueElementName(\"exit\")\r\n    revdir = ReverseDirection(dir)\r\n    if (revdir = dir) {\r\n      create exit (exitname, dir, from, to, \"defaultexit\")\r\n      create exit (exitname+\"back\", dir, to, from, \"defaultexit\")\r\n    }\r\n    else {\r\n      create exit (exitname, dir, from, to, dir+\"direction\")\r\n      create exit (exitname+\"back\", revdir, to, from, revdir+\"direction\")\r\n    }\r\n    exit1 = GetObject (exitname)\r\n    exit2 = GetObject (exitname+\"back\")\r\n    exit1.back = exit2\r\n    exit2.back = exit1\r\n    exit1.changedlocked => {\r\n      this.back.locked = this.locked\r\n    }\r\n    exit1.changedvisible => {\r\n      this.back.visible = this.visible\r\n    }\r\n    exit1.changedparent => {\r\n      this.back.to = this.parent\r\n    }\r\n    exit1.changedto => {\r\n      this.back.parent = this.to\r\n    }\r\n    exit2.changedlocked = exit1.changedlocked\r\n    exit2.changedvisible = exit1.changedvisible\r\n    exit2.changedparent = exit1.changedparent\r\n    exit2.changedto = exit1.changedto\r\n  </function>\r\n```\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't use the desktop editor, so haven't had much experience with the UI. On previous discussions, I've seen people  saying that for types it is often easier to paste them directly into the full code view; but don't know the details.</p>\n<p>And I realised after going to bed last night that there's probably a slightly simpler way to do what you want. Instead of replacing <code>defaultexit</code>, you can add your attribute to either either <code>direction</code> or <code>compassdirection</code>. (exits that don't inherit these two types don't appear on the map anyway). The default versions for those are shorter, so take up less space in your game file. The core versions are:</p>\n<pre><code>  &lt;type name=\"direction\"&gt;\n    &lt;displayverbs type=\"simplestringlist\"&gt;[Go]&lt;/displayverbs&gt;\n  &lt;/type&gt;\n\n  &lt;type name=\"compassdirection\"&gt;\n    &lt;inherit name=\"direction\"/&gt;\n    &lt;prefix type=\"string\"&gt;[CompassDirectionPrefix]&lt;/prefix&gt;\n    &lt;suffix type=\"string\"&gt;[CompassDirectionSuffix]&lt;/suffix&gt;\n  &lt;/type&gt;\n</code></pre>\n<hr>\n<blockquote>\n<p>I don't understand what sort of advantage your second example offers.</p>\n</blockquote>\n<p>You asked two questions: how to change the default attributes of exits, and how to change an attribute when a script is creating an exit. I answered both.</p>\n<p>You probably only need one of those answers if you want the attribute set for all exits. But the script version is still useful if you ever decide make an exception; or if you decide you want to change some other attribute of the exits you're creating.</p>\n<details><summary>I've actually tweaked one of the core functions to make creating and messing with exits in script easier. Don't know if it would be useful to you</summary>\n<p>Just so that you can do <code>CreateBiExits (\"north\", room1, room2)</code> and have it create the exit in the other direction automatically (the default CreateBiExits breaks the grid map), and also so that if an exit is moved/locked/unlocked, it will affect both sides of it.</p>\n<pre><code>  &lt;function name=\"CreateBiExits\" parameters=\"dir, from, to\"&gt;\n    exitname = GetUniqueElementName(\"exit\")\n    revdir = ReverseDirection(dir)\n    if (revdir = dir) {\n      create exit (exitname, dir, from, to, \"defaultexit\")\n      create exit (exitname+\"back\", dir, to, from, \"defaultexit\")\n    }\n    else {\n      create exit (exitname, dir, from, to, dir+\"direction\")\n      create exit (exitname+\"back\", revdir, to, from, revdir+\"direction\")\n    }\n    exit1 = GetObject (exitname)\n    exit2 = GetObject (exitname+\"back\")\n    exit1.back = exit2\n    exit2.back = exit1\n    exit1.changedlocked =&gt; {\n      this.back.locked = this.locked\n    }\n    exit1.changedvisible =&gt; {\n      this.back.visible = this.visible\n    }\n    exit1.changedparent =&gt; {\n      this.back.to = this.parent\n    }\n    exit1.changedto =&gt; {\n      this.back.parent = this.to\n    }\n    exit2.changedlocked = exit1.changedlocked\n    exit2.changedvisible = exit1.changedvisible\n    exit2.changedparent = exit1.changedparent\n    exit2.changedto = exit1.changedto\n  &lt;/function&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2020-12-13T12:24:06.4888026Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "73676771-4c12-4a5c-81d7-bf0dd9922a55",
      "UserId": 326173,
      "Username": "Curt A. P.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/bc1d5d57408cf4d13f9d9f23c1e3dc56?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The built-in function to create two one-way exits are quite effortless in this case. \r\n\r\n> [...]and how to change an attribute when a script is creating an exit. \r\n>```\r\n>exitname = GetUniqueElementName(\"exit\")\r\n>create exit (exitname, \"north\", player.parent, this, \"northdirection\")\r\n>newexit = GetObject (exitname)\r\n>newexit.grid_length = 0\r\n>```\r\n\r\nYes, I got this part now. I didn't understand it at first and it's good to know for probably any sort of created objects which may come up in the future.\r\n<hr>\r\n\r\nOne more thing related to exits is still bugging me. I would like to set the exit's link color based on their **.to** object(room). All rooms have color attributes stored for multiple purposes that are related to their type. Is it possible to change an exit's link color based on a **.to** object's attribute? \r\n\r\nEdit: Is changing the exit link color even possible? ^^",
      "EditableFormat": "markdown",
      "HTML": "<p>The built-in function to create two one-way exits are quite effortless in this case.</p>\n<blockquote>\n<p>[...]and how to change an attribute when a script is creating an exit.</p>\n<pre><code>exitname = GetUniqueElementName(\"exit\")\ncreate exit (exitname, \"north\", player.parent, this, \"northdirection\")\nnewexit = GetObject (exitname)\nnewexit.grid_length = 0\n</code></pre>\n</blockquote>\n<p>Yes, I got this part now. I didn't understand it at first and it's good to know for probably any sort of created objects which may come up in the future.</p>\n<hr>\n<p>One more thing related to exits is still bugging me. I would like to set the exit's link color based on their <strong>.to</strong> object(room). All rooms have color attributes stored for multiple purposes that are related to their type. Is it possible to change an exit's link color based on a <strong>.to</strong> object's attribute?</p>\n<p>Edit: Is changing the exit link color even possible? ^^</p>\n\n",
      "PostDate": "2020-12-14T06:56:55.4313105Z",
      "LastEditDate": "2020-12-14T06:59:14.0928321Z",
      "link": null
    }
  ]
}
