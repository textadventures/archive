{
  "Topic": {
    "TopicId": "3212",
    "ForumId": "18",
    "Title": "Elevator action",
    "LastUpdated": "2016-01-27T19:30:55+00:00",
    "ReplyCount": 21
  },
  "Posts": [
    {
      "PostId": "21425",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "For those times when walking just won't do...\n\nAttached is some code I've been working on. It implements (in a hopefully extensible, customizable way) an elevator object.\n\nBasically, an elevator is a room that moves among a set of other rooms in an orderly way. To create an elevator, you set up a parameters object with a list of &quot;floor parameter&quot; objects (each of which specifies the target exit room and the room designation), and then you invoke Elevator_Create. It probably sounds more complicated than it actually is. Check out the sample to see how it works.\n\nThe core elevator code is in &quot;Elevator.aslx&quot; and the elevator sample code is in &quot;ElevatorSample.aslx&quot;. The sample includes a stairwell as well, so you can look at the elevator from different floors.\n\nThere are built-in components you can use if you just want to slam an elevator into your building. But there are provisions in place for customizing it all to your own design. If you have any trouble customizing it, let me know.\n\nThe elevator leverages some other code that was developed explicitly for it, but which has lots of other uses: a &quot;goals&quot; engine. This engine implements a &quot;goals object&quot; which is an object you wish to be &quot;goal-driven.&quot; You then add goals to it and update it periodically to let it follows its goals. The goals engines is in &quot;GoalsObject.aslx&quot;\n\nThe elevator needs to be updated regularly to operate properly. It is an autonomous object, but it needs a kick to keep it going. This can be any way you like, but the two straightforward ways are via a turn script and via a timer. The former appies if your game design (or philosophy) is for things to happen only when a user makes a turn. The latter is for those games that are comfortable with events happening in real time. I have exercised this code in both modes. In the turn-based mode, you will often need to type &quot;wait&quot; or perform some other actions (like looking around) to make the world state advance. In the real-time mode, the elevator just goes on as it does, but it won't wait for you! I have left the code in the real-time mode, since it's a bit more fun. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> (The turn script is in the sample if you want to use it. Just disable the timer and enable the turn script.)\n\nNote that you must include both &quot;GoalsObject.aslx&quot; and &quot;Elevator.aslx&quot; to incorporate this into your project.\n\nI think this code could easily be adapted to other uses - anything that has a door and travels (for example, a Star Trek style turbolift, an auto taxi sort of thing, etc.\n\nAs the elevator code is goal based (with two goals currently - &quot;close door&quot; and &quot;seek floor&quot;), its behavior can easily be adapted as well by adding your own goals. For example, if you wanted to have a haunted house where the elevator breaks down, you could implement a goal that moves the car between floors and then stops.\n\nI learned a lot writing this code. If anyone has any constructive criticism, especially about better ways to do anything, I'd love to hear! I'm looking to develop good techniques for writing modules.",
      "EditableFormat": "bbcode",
      "HTML": "For those times when walking just won't do...<br/><br/>Attached is some code I've been working on. It implements (in a hopefully extensible, customizable way) an elevator object.<br/><br/>Basically, an elevator is a room that moves among a set of other rooms in an orderly way. To create an elevator, you set up a parameters object with a list of &quot;floor parameter&quot; objects (each of which specifies the target exit room and the room designation), and then you invoke Elevator_Create. It probably sounds more complicated than it actually is. Check out the sample to see how it works.<br/><br/>The core elevator code is in &quot;Elevator.aslx&quot; and the elevator sample code is in &quot;ElevatorSample.aslx&quot;. The sample includes a stairwell as well, so you can look at the elevator from different floors.<br/><br/>There are built-in components you can use if you just want to slam an elevator into your building. But there are provisions in place for customizing it all to your own design. If you have any trouble customizing it, let me know.<br/><br/>The elevator leverages some other code that was developed explicitly for it, but which has lots of other uses: a &quot;goals&quot; engine. This engine implements a &quot;goals object&quot; which is an object you wish to be &quot;goal-driven.&quot; You then add goals to it and update it periodically to let it follows its goals. The goals engines is in &quot;GoalsObject.aslx&quot;<br/><br/>The elevator needs to be updated regularly to operate properly. It is an autonomous object, but it needs a kick to keep it going. This can be any way you like, but the two straightforward ways are via a turn script and via a timer. The former appies if your game design (or philosophy) is for things to happen only when a user makes a turn. The latter is for those games that are comfortable with events happening in real time. I have exercised this code in both modes. In the turn-based mode, you will often need to type &quot;wait&quot; or perform some other actions (like looking around) to make the world state advance. In the real-time mode, the elevator just goes on as it does, but it won't wait for you! I have left the code in the real-time mode, since it's a bit more fun. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> (The turn script is in the sample if you want to use it. Just disable the timer and enable the turn script.)<br/><br/>Note that you must include both &quot;GoalsObject.aslx&quot; and &quot;Elevator.aslx&quot; to incorporate this into your project.<br/><br/>I think this code could easily be adapted to other uses - anything that has a door and travels (for example, a Star Trek style turbolift, an auto taxi sort of thing, etc.<br/><br/>As the elevator code is goal based (with two goals currently - &quot;close door&quot; and &quot;seek floor&quot;), its behavior can easily be adapted as well by adding your own goals. For example, if you wanted to have a haunted house where the elevator breaks down, you could implement a goal that moves the car between floors and then stops.<br/><br/>I learned a lot writing this code. If anyone has any constructive criticism, especially about better ways to do anything, I'd love to hear! I'm looking to develop good techniques for writing modules.<div><a href=\"/attachment/371\">Elevator_v0.6.zip</a></div>",
      "PostDate": "2012-09-22T15:17:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21426",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Almost forgot: the purpose of all the complexity is to allow *multiple* elevators if so desired. You could put one in each building; you could have mutiple ones in the same building, all going to different floors (e.g. the primary public one, a service one, the express to the penthouse, etc).",
      "EditableFormat": "bbcode",
      "HTML": "Almost forgot: the purpose of all the complexity is to allow *multiple* elevators if so desired. You could put one in each building; you could have mutiple ones in the same building, all going to different floors (e.g. the primary public one, a service one, the express to the penthouse, etc).",
      "PostDate": "2012-09-22T15:24:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21427",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "Perfect work! But I fear it is far to complicated for most users to understand your code and create an elevator with your lib. I still don't understand your goalobject so I would code an elevator by myself.",
      "EditableFormat": "bbcode",
      "HTML": "Perfect work! But I fear it is far to complicated for most users to understand your code and create an elevator with your lib. I still don't understand your goalobject so I would code an elevator by myself.",
      "PostDate": "2012-09-23T11:05:09+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21428",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Thanks for checking it out and for your thoughts. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nAs far as complicated goes, it's ok for things to be complicated if it's all &quot;beneath the covers.&quot; My goal with this library was to have some complex code wrapped up in a nice, easy-to-use package, with &quot;easy&quot; depending on how deep you wanted to go with customizations.\n\nAs far as just whipping out a stock elevator, I (had) thought the approach I took (the one in the elevator sample) was quite straightforward - a &quot;parameters&quot; object that you fill in. Did you find that part too complicated as well? I had assumed that, since everyone is familiar with objects as things you hang attributes on, that constructing parameters that way would be in line with existing experience. However, if the concept of objects as programming constructs as opposed to just &quot;things you see in your game&quot; is too much of a leap, then perhaps other approaches can be taken. (Keep in mind that this isn't just about this elevator class - I'm keeping an eye toward making more modules in the future, and I want them to be usable.)\n\nIf the complexity is in customization, then there may be ways to make that easier. I had originally figured that if someone wanted a custom elevator, they would simply create their own prototypes in line with what's included in the library and pass them in instead with the params. I had even just now thought that perhaps the user could &quot;Show Library Elements&quot; and then copy the prototypes out of the library and into their code, where they can then be mucked with. I tried that just now, and Quest died with an error when I changed the filer (&quot;given key not present in the dictionary&quot;... knowing which key would be mighty helpful, in the error message!), so it looks like I have something to fix in the lib to make that work properly. But assuming you could copy the prototypes out of the library and then customize them at will... I don't know. I am a programmer after all, and these concepts flow freely for me. But if the typical Quest game creator has a different conceptual model of things, then I would need to understand that in order to make useful modules.\n\nAs far as the goals object goes, well... (continued)",
      "EditableFormat": "bbcode",
      "HTML": "Thanks for checking it out and for your thoughts. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>As far as complicated goes, it's ok for things to be complicated if it's all &quot;beneath the covers.&quot; My goal with this library was to have some complex code wrapped up in a nice, easy-to-use package, with &quot;easy&quot; depending on how deep you wanted to go with customizations.<br/><br/>As far as just whipping out a stock elevator, I (had) thought the approach I took (the one in the elevator sample) was quite straightforward - a &quot;parameters&quot; object that you fill in. Did you find that part too complicated as well? I had assumed that, since everyone is familiar with objects as things you hang attributes on, that constructing parameters that way would be in line with existing experience. However, if the concept of objects as programming constructs as opposed to just &quot;things you see in your game&quot; is too much of a leap, then perhaps other approaches can be taken. (Keep in mind that this isn't just about this elevator class - I'm keeping an eye toward making more modules in the future, and I want them to be usable.)<br/><br/>If the complexity is in customization, then there may be ways to make that easier. I had originally figured that if someone wanted a custom elevator, they would simply create their own prototypes in line with what's included in the library and pass them in instead with the params. I had even just now thought that perhaps the user could &quot;Show Library Elements&quot; and then copy the prototypes out of the library and into their code, where they can then be mucked with. I tried that just now, and Quest died with an error when I changed the filer (&quot;given key not present in the dictionary&quot;... knowing which key would be mighty helpful, in the error message!), so it looks like I have something to fix in the lib to make that work properly. But assuming you could copy the prototypes out of the library and then customize them at will... I don't know. I am a programmer after all, and these concepts flow freely for me. But if the typical Quest game creator has a different conceptual model of things, then I would need to understand that in order to make useful modules.<br/><br/>As far as the goals object goes, well... (continued)",
      "PostDate": "2012-09-23T11:55:32+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21429",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "The goals object is in line with my desire to have autonomous NPCs. (Or in the case of an elevator, NPEs (non-player entities)? NPTS (non-player things)?) These would not just be stock objects that sit in a room and wait for the player to interact with them, but would be entities that &quot;have a mind of their own.&quot; They might be in line with the goals of the game, or they could be used just to add color and variety.\n\nMy first piece of code along these lines was an ActiveObjects module (for lack of a better name), which was just an object that managed a list of objects and a turn script, and on each turn it called an &quot;update&quot; method on each of the objects in its list. In looking around, I know that at least one other game-creation system (no names dropped) has a built in notion of this, though they called the method invoked something to do with &quot;idle&quot;, which isn't quite the name I'd choose, but it was the right idea. My own elevator code uses it to drive the elevator, and I anticipate having further &quot;active objects&quot; in my game as well. I didn't include it in the sample since *that* was definitely needless complication. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nSo... the goals object. My vision is that there could be entities in a game that have their own agenda. Despite what we all may believe, the (game) world does not necessarily revolve around us!  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> An example:\n\nPerhaps you're making a (name deleted) game with a boy at a wizarding academy, and you wish to drop in friendly ghosts who wander the halls and cause mischief (one of whom may or may not look like John Cleese). Rather then having such &quot;color&quot; being room-based (where when the player enters the room, the code decides, say, whether there is such an entity in there and what it's doing), you can turn it around and create an independent, autonomous entity which wanders from room to room and interacts with things, whether the player is actually there or not.\n\nThe primary goal for such an entity would be &quot;Wander&quot;. There could also be other goals depending on what room its in, what objects are in the room, whether the player is present, etc. Things like this can make the game world more unpredicatable and diverse.\n\nLet's take a look at the &quot;Wander&quot; goal.\n\nThe &quot;update&quot; method for a goal updates the goal's internal state. Can the goal be tried? How high a priority is the goal? Has the goal been achieved? A goal like &quot;Wander&quot; would be low-priority and probably not actually achievable (in that it is base behavior and should never stop happening as a default). Whether the wander goal can be tried or not depends on the state of other goals. If there is another goal to have a conversation with the player, then perhaps while that is going on, the &quot;Wander&quot; goal is disabled (though that could also be handled via priorities - the goal to converse with the user takes higher priority).\n\nThe &quot;try&quot; method attempts to achieve the goal. In this case, it just makes the entity wander from room to room. That's how it &quot;tries&quot; to wander. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nThe &quot;achieve&quot; method would not be used, as the goal should never be fully achieved - it is ongoing behavior, never ending. The important thing to keep in mind about the &quot;achieve&quot; method is that, once a goal sets &quot;canAchieve&quot; to true, the goal will be removed from the list after the &quot;achieve&quot; method is invoked. It's the &quot;last gasp&quot; method. Or perhaps when night falls, then wandering would be achieved, and the &quot;achieve&quot; method would create a new goal - &quot;sleep&quot;.\n\nLet's say there is also a &quot;greet&quot; goal. When the player is in the room where the entity is, it will greet the user. &quot;The ghostly specter nods in your direction.&quot; or &quot;The shimmering annoyance says, 'Top of the morning!'&quot; Something like that.\n\nThe &quot;update&quot; method would look to see if the player was in the room with it. If not, then it can't even be tried. Or perhaps there is additional logic to see if it has already greeted the player in that room or in the past 20 turns or something like that (so that it doesn't keep saying &quot;Hi&quot; over and over).\n\nThe &quot;try&quot; method would actually cause the greeting to be displayed.\n\nWhether the &quot;achieve&quot; method makes sense or not is determined by whether &quot;greeting&quot; ever stops. Perhaps after a couple of random greetings, the goal is done - has been achieved. At that time, it will be removed from the goals list.\n\nAs a final example, let's say the entity has important information to convey to the player - but only in a certain room or under certain conditions. Once it has done so, then it never will ever again. For a goal like this, the &quot;update&quot; method will see if the player is with it in the room and if they are both in the special room. If so, then the goal's &quot;canAchieve&quot; will be set to true. And when the goal is achieved, the entity will impart the information before the goal is removed and it becomes silent thereafter. There are lot of ways you could do this.\n\nSo in the beginning, you would create your entity and give it three goals: &quot;Wander&quot;, &quot;Greet&quot;, and &quot;ImpartSecretInfo&quot;. Then set it loose in the world and let it do with it's going to do. It will wander around, greet the player when in the same room, and impart special knowledge when with player in a certain room. All done with priorities and world-examining and -modifying logic.\n\nThat's the idea anyway. It greatly simplified the control logic in the elevator. I was quite excited when the &quot;goals&quot; approach came to me on a walk, as not only did it make the elevator logic almost trivial (just two goals - &quot;close door&quot; and &quot;seek floor&quot;), it was also in line with what I outlined above.\n\nIf anyone would like to discuss this more, let me know. It may not be a typical &quot;go from room to room and look for items to unlock other items and everything is centered on the player and reactive to what the player does&quot; type of game... but then, who wants to write a &quot;typical&quot; game? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "The goals object is in line with my desire to have autonomous NPCs. (Or in the case of an elevator, NPEs (non-player entities)? NPTS (non-player things)?) These would not just be stock objects that sit in a room and wait for the player to interact with them, but would be entities that &quot;have a mind of their own.&quot; They might be in line with the goals of the game, or they could be used just to add color and variety.<br/><br/>My first piece of code along these lines was an ActiveObjects module (for lack of a better name), which was just an object that managed a list of objects and a turn script, and on each turn it called an &quot;update&quot; method on each of the objects in its list. In looking around, I know that at least one other game-creation system (no names dropped) has a built in notion of this, though they called the method invoked something to do with &quot;idle&quot;, which isn't quite the name I'd choose, but it was the right idea. My own elevator code uses it to drive the elevator, and I anticipate having further &quot;active objects&quot; in my game as well. I didn't include it in the sample since *that* was definitely needless complication. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>So... the goals object. My vision is that there could be entities in a game that have their own agenda. Despite what we all may believe, the (game) world does not necessarily revolve around us!  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> An example:<br/><br/>Perhaps you're making a (name deleted) game with a boy at a wizarding academy, and you wish to drop in friendly ghosts who wander the halls and cause mischief (one of whom may or may not look like John Cleese). Rather then having such &quot;color&quot; being room-based (where when the player enters the room, the code decides, say, whether there is such an entity in there and what it's doing), you can turn it around and create an independent, autonomous entity which wanders from room to room and interacts with things, whether the player is actually there or not.<br/><br/>The primary goal for such an entity would be &quot;Wander&quot;. There could also be other goals depending on what room its in, what objects are in the room, whether the player is present, etc. Things like this can make the game world more unpredicatable and diverse.<br/><br/>Let's take a look at the &quot;Wander&quot; goal.<br/><br/>The &quot;update&quot; method for a goal updates the goal's internal state. Can the goal be tried? How high a priority is the goal? Has the goal been achieved? A goal like &quot;Wander&quot; would be low-priority and probably not actually achievable (in that it is base behavior and should never stop happening as a default). Whether the wander goal can be tried or not depends on the state of other goals. If there is another goal to have a conversation with the player, then perhaps while that is going on, the &quot;Wander&quot; goal is disabled (though that could also be handled via priorities - the goal to converse with the user takes higher priority).<br/><br/>The &quot;try&quot; method attempts to achieve the goal. In this case, it just makes the entity wander from room to room. That's how it &quot;tries&quot; to wander. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>The &quot;achieve&quot; method would not be used, as the goal should never be fully achieved - it is ongoing behavior, never ending. The important thing to keep in mind about the &quot;achieve&quot; method is that, once a goal sets &quot;canAchieve&quot; to true, the goal will be removed from the list after the &quot;achieve&quot; method is invoked. It's the &quot;last gasp&quot; method. Or perhaps when night falls, then wandering would be achieved, and the &quot;achieve&quot; method would create a new goal - &quot;sleep&quot;.<br/><br/>Let's say there is also a &quot;greet&quot; goal. When the player is in the room where the entity is, it will greet the user. &quot;The ghostly specter nods in your direction.&quot; or &quot;The shimmering annoyance says, 'Top of the morning!'&quot; Something like that.<br/><br/>The &quot;update&quot; method would look to see if the player was in the room with it. If not, then it can't even be tried. Or perhaps there is additional logic to see if it has already greeted the player in that room or in the past 20 turns or something like that (so that it doesn't keep saying &quot;Hi&quot; over and over).<br/><br/>The &quot;try&quot; method would actually cause the greeting to be displayed.<br/><br/>Whether the &quot;achieve&quot; method makes sense or not is determined by whether &quot;greeting&quot; ever stops. Perhaps after a couple of random greetings, the goal is done - has been achieved. At that time, it will be removed from the goals list.<br/><br/>As a final example, let's say the entity has important information to convey to the player - but only in a certain room or under certain conditions. Once it has done so, then it never will ever again. For a goal like this, the &quot;update&quot; method will see if the player is with it in the room and if they are both in the special room. If so, then the goal's &quot;canAchieve&quot; will be set to true. And when the goal is achieved, the entity will impart the information before the goal is removed and it becomes silent thereafter. There are lot of ways you could do this.<br/><br/>So in the beginning, you would create your entity and give it three goals: &quot;Wander&quot;, &quot;Greet&quot;, and &quot;ImpartSecretInfo&quot;. Then set it loose in the world and let it do with it's going to do. It will wander around, greet the player when in the same room, and impart special knowledge when with player in a certain room. All done with priorities and world-examining and -modifying logic.<br/><br/>That's the idea anyway. It greatly simplified the control logic in the elevator. I was quite excited when the &quot;goals&quot; approach came to me on a walk, as not only did it make the elevator logic almost trivial (just two goals - &quot;close door&quot; and &quot;seek floor&quot;), it was also in line with what I outlined above.<br/><br/>If anyone would like to discuss this more, let me know. It may not be a typical &quot;go from room to room and look for items to unlock other items and everything is centered on the player and reactive to what the player does&quot; type of game... but then, who wants to write a &quot;typical&quot; game? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2012-09-23T12:29:49+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21430",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Updated code. This fixes the &quot;can't show library elements&quot; problems. (Yes, I had included objects in a type again...)\n\nI also restructured the built-in prototypes a bit, since now it seems people might actually want to manipulate them. And you can indeed &quot;Copy&quot; them to current project and modify them. (There are some *really* nice features in the Quest editor!) So that does provide a straightforward path for initial customizations...\n\nTo customize the main elevator car or any of its children, copy and modify ElevatorCar_Prototype.\nTo customize the elevator facade  or any of its children (what you see in the room with the elevator), copy and modify ElevatorFacade_Prototype.\nTo customize the elevator internal buttons, copy and modify ElevatorIntButton_Prototype.\n\nNote that you can remove what you don't want (e.g. the indicators) or add your own objects. The types in the elevator library are components you can pick and choose (besides the three mentioned above - car, facade and inteior buttons - which are required).",
      "EditableFormat": "bbcode",
      "HTML": "Updated code. This fixes the &quot;can't show library elements&quot; problems. (Yes, I had included objects in a type again...)<br/><br/>I also restructured the built-in prototypes a bit, since now it seems people might actually want to manipulate them. And you can indeed &quot;Copy&quot; them to current project and modify them. (There are some *really* nice features in the Quest editor!) So that does provide a straightforward path for initial customizations...<br/><br/>To customize the main elevator car or any of its children, copy and modify ElevatorCar_Prototype.<br/>To customize the elevator facade  or any of its children (what you see in the room with the elevator), copy and modify ElevatorFacade_Prototype.<br/>To customize the elevator internal buttons, copy and modify ElevatorIntButton_Prototype.<br/><br/>Note that you can remove what you don't want (e.g. the indicators) or add your own objects. The types in the elevator library are components you can pick and choose (besides the three mentioned above - car, facade and inteior buttons - which are required).<div><a href=\"/attachment/372\">Elevator_v0.65.zip</a></div>",
      "PostDate": "2012-09-23T15:26:32+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21433",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "Hi jaynabonne, thanx for the detailed explanation. &quot;Goals&quot; sounds good so I will have a closer look at it.\nCould you think of a way to integrate your code in Quest so that you can create elevators from within the gui? I think, 90% of Quest user don't have knowledge in coding or scripting and can't use your code",
      "EditableFormat": "bbcode",
      "HTML": "Hi jaynabonne, thanx for the detailed explanation. &quot;Goals&quot; sounds good so I will have a closer look at it.<br/>Could you think of a way to integrate your code in Quest so that you can create elevators from within the gui? I think, 90% of Quest user don't have knowledge in coding or scripting and can't use your code",
      "PostDate": "2012-09-24T13:28:51+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21434",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I can look into that. I haven't experimented with the editor UI pieces before, but I just found an &quot;advanced&quot; piece on just that thing on the Wiki last night, so I'll explore it. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "I can look into that. I haven't experimented with the editor UI pieces before, but I just found an &quot;advanced&quot; piece on just that thing on the Wiki last night, so I'll explore it. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2012-09-24T13:57:12+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21459",
      "UserId": 0,
      "Username": "Jsimmons",
      "UserAvatar": null,
      "UserGravatar": "929a4a99c655cfa3d599d6b82e65c965",
      "EditableText": "This is so interesting! I've created a star trek stype turbo lift before, but had trouble when I tried to add buttons instead of voice command. \n\nBasically for the turbolift I'd have a list of exits, one for each floor and would say &quot;Go to bridge&quot; or &quot;Go to deck 8&quot; as if giving the voice command like they do on Star trek, but I'd love to have access to an &quot;ordinary elevator&quot; for those non-sci-fi things.",
      "EditableFormat": "bbcode",
      "HTML": "This is so interesting! I've created a star trek stype turbo lift before, but had trouble when I tried to add buttons instead of voice command. <br/><br/>Basically for the turbolift I'd have a list of exits, one for each floor and would say &quot;Go to bridge&quot; or &quot;Go to deck 8&quot; as if giving the voice command like they do on Star trek, but I'd love to have access to an &quot;ordinary elevator&quot; for those non-sci-fi things.",
      "PostDate": "2012-09-27T20:07:39+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26584",
      "UserId": 0,
      "Username": "rcorra",
      "UserAvatar": null,
      "UserGravatar": "8b1735f0b86bc1ba1682ece03837f568",
      "EditableText": "I am new to this, but I downloaded the files. But I get an error when I am trying to open the sample to see the code and/or game.\n\nFailed to load game.\nThe following errors occurred:\nError: Cannot find a file called 'Elevator.aslx' in current path or application/resource path\n\n\nThank you,",
      "EditableFormat": "bbcode",
      "HTML": "I am new to this, but I downloaded the files. But I get an error when I am trying to open the sample to see the code and/or game.<br/><br/>Failed to load game.<br/>The following errors occurred:<br/>Error: Cannot find a file called 'Elevator.aslx' in current path or application/resource path<br/><br/><br/>Thank you,",
      "PostDate": "2013-10-16T13:48:20+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26585",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "The elevator.aslx is in the ZIP in the first post. Extract it and copy it into the directory of the other files",
      "EditableFormat": "bbcode",
      "HTML": "The elevator.aslx is in the ZIP in the first post. Extract it and copy it into the directory of the other files",
      "PostDate": "2013-10-16T14:13:03+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26586",
      "UserId": 0,
      "Username": "rcorra",
      "UserAvatar": null,
      "UserGravatar": "8b1735f0b86bc1ba1682ece03837f568",
      "EditableText": "hmmm.  I had unzipped it. I tried it (ElevatorSample and GoalsObject) in the area where the game downloads games and I tried it in the main Quest file itself. \n\nI want to see the code for the elevator and move object, as I am making a taxi service that works on the same principle. You enter, select where you want to go, and then get out at your destination....  a few dollars poorer, of course.\n\nThanks for the quick attention",
      "EditableFormat": "bbcode",
      "HTML": "hmmm.  I had unzipped it. I tried it (ElevatorSample and GoalsObject) in the area where the game downloads games and I tried it in the main Quest file itself. <br/><br/>I want to see the code for the elevator and move object, as I am making a taxi service that works on the same principle. You enter, select where you want to go, and then get out at your destination....  a few dollars poorer, of course.<br/><br/>Thanks for the quick attention",
      "PostDate": "2013-10-16T14:54:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26587",
      "UserId": 0,
      "Username": "rcorra",
      "UserAvatar": null,
      "UserGravatar": "8b1735f0b86bc1ba1682ece03837f568",
      "EditableText": "While I would still like to see your code, I think I got a work around.\n\nThe player enters the taxi (a room in front of their house).  I then give them options from Non-directional exits to go to various locations.  They are then moved to another taxi (room) but think it is the same one and get a message they are in front of their destination. They can then get out, or go elsewhere.\n\n\nIf there is a better way, I would love to hear, as I am new to this.  But I think I can copy the code for the exits and paste in each Taxi instance.",
      "EditableFormat": "bbcode",
      "HTML": "While I would still like to see your code, I think I got a work around.<br/><br/>The player enters the taxi (a room in front of their house).  I then give them options from Non-directional exits to go to various locations.  They are then moved to another taxi (room) but think it is the same one and get a message they are in front of their destination. They can then get out, or go elsewhere.<br/><br/><br/>If there is a better way, I would love to hear, as I am new to this.  But I think I can copy the code for the exits and paste in each Taxi instance.",
      "PostDate": "2013-10-16T15:39:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26588",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "The elevator code is in a library file. You can't load libraries into Quest the way you do games. You need to edit them with an external text editor. It's all a handy XML format, so it should be straightforward to peruse, if you're so inclined.",
      "EditableFormat": "bbcode",
      "HTML": "The elevator code is in a library file. You can't load libraries into Quest the way you do games. You need to edit them with an external text editor. It's all a handy XML format, so it should be straightforward to peruse, if you're so inclined.",
      "PostDate": "2013-10-16T16:09:41+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26590",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "A little OT, but I'm curious jaynabonne do you have a special editor or language file you use to edit aslx files? Typing all that xml sounds like a lot of work.",
      "EditableFormat": "bbcode",
      "HTML": "A little OT, but I'm curious jaynabonne do you have a special editor or language file you use to edit aslx files? Typing all that xml sounds like a lot of work.",
      "PostDate": "2013-10-16T16:34:32+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26607",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "notepad++ is really nice:\n\n<!-- m --><a class=\"postlink\" href=\"http://notepad-plus-plus.org/\">http://notepad-plus-plus.org/</a><!-- m -->\n\njust open your &quot;.aslx&quot; file with notepad++, then click from the top bar &quot;language&quot;, and then choose &quot;XML&quot;\n\nenjoy <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "EditableFormat": "bbcode",
      "HTML": "notepad++ is really nice:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://notepad-plus-plus.org/\">http://notepad-plus-plus.org/</a><!-- m --><br/><br/>just open your &quot;.aslx&quot; file with notepad++, then click from the top bar &quot;language&quot;, and then choose &quot;XML&quot;<br/><br/>enjoy <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "PostDate": "2013-10-18T01:02:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26609",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "Does NP ++ have autocompletion or something like that for all the aslx? Or do you have to type it all out?",
      "EditableFormat": "bbcode",
      "HTML": "Does NP ++ have autocompletion or something like that for all the aslx? Or do you have to type it all out?",
      "PostDate": "2013-10-18T03:10:34+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26610",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'm not sure what autocompletion is (I'm still a noob with coding), maybe it has it, but I don't know. I just like it, as it color-codes your code, making it easy to spot mistakes in it (and it supports a good many code languages and seems to be made and updated really well, though the extra coding languages doesn't help me much at the moment, as I am only just learning to write still in quest's code language, lol).\n\n--------------------\n\nHK Edit:\n\nyes it does, as I just looked at it's &quot;features&quot; site page, lol:\n\n•Auto-completion: Word completion, Function completion and  Function parameters hint\n\n<!-- m --><a class=\"postlink\" href=\"http://notepad-plus-plus.org/features/\">http://notepad-plus-plus.org/features/</a><!-- m -->\n\n•Syntax Highlighting and Syntax Folding\n•User Defined Syntax Highlighting and Folding: screenshot 1, screenshot 2, screenshot 3 and screenshot 4\n•PCRE (Perl Compatible Regular Expression) Search/Replace\n•GUI entirely customizable: minimalist, tab with close button, multi-line tab, vertical tab and vertical document list\n•Document Map\n•Auto-completion: Word completion, Function completion and  Function parameters hint\n•Multi-Document (Tab interface)\n•Multi-View\n•WYSIWYG (Printing)\n•Zoom in and zoom out\n•Multi-Language environment supported\n•Bookmark\n•Macro recording and playback\n•Launch with different arguments\n\nit seems to be a really code~programming professionally written and updated software program for code writing. I think many coders use notepad++, it's probably one of the best. They do document every version release, letting you know what's been changed, fixed, and~or added to it.",
      "EditableFormat": "bbcode",
      "HTML": "I'm not sure what autocompletion is (I'm still a noob with coding), maybe it has it, but I don't know. I just like it, as it color-codes your code, making it easy to spot mistakes in it (and it supports a good many code languages and seems to be made and updated really well, though the extra coding languages doesn't help me much at the moment, as I am only just learning to write still in quest's code language, lol).<br/><br/>--------------------<br/><br/>HK Edit:<br/><br/>yes it does, as I just looked at it's &quot;features&quot; site page, lol:<br/><br/>•Auto-completion: Word completion, Function completion and  Function parameters hint<br/><br/><!-- m --><a class=\"postlink\" href=\"http://notepad-plus-plus.org/features/\">http://notepad-plus-plus.org/features/</a><!-- m --><br/><br/>•Syntax Highlighting and Syntax Folding<br/>•User Defined Syntax Highlighting and Folding: screenshot 1, screenshot 2, screenshot 3 and screenshot 4<br/>•PCRE (Perl Compatible Regular Expression) Search/Replace<br/>•GUI entirely customizable: minimalist, tab with close button, multi-line tab, vertical tab and vertical document list<br/>•Document Map<br/>•Auto-completion: Word completion, Function completion and  Function parameters hint<br/>•Multi-Document (Tab interface)<br/>•Multi-View<br/>•WYSIWYG (Printing)<br/>•Zoom in and zoom out<br/>•Multi-Language environment supported<br/>•Bookmark<br/>•Macro recording and playback<br/>•Launch with different arguments<br/><br/>it seems to be a really code~programming professionally written and updated software program for code writing. I think many coders use notepad++, it's probably one of the best. They do document every version release, letting you know what's been changed, fixed, and~or added to it.",
      "PostDate": "2013-10-18T04:40:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26615",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I use Visual Studio (Express), as I've been using the full VS version for work for years. It has some nice auto-complete type things for XML (e.g. you type the opening tag, and it adds the closing one; you type an attribute and '=' and it puts the quotes in for you; it flags elements that don't match; etc.)",
      "EditableFormat": "bbcode",
      "HTML": "I use Visual Studio (Express), as I've been using the full VS version for work for years. It has some nice auto-complete type things for XML (e.g. you type the opening tag, and it adds the closing one; you type an attribute and '=' and it puts the quotes in for you; it flags elements that don't match; etc.)",
      "PostDate": "2013-10-18T17:10:04+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "40881",
      "UserId": 0,
      "Username": "Buddy Bishop",
      "UserAvatar": null,
      "UserGravatar": "cec13829fa44a780e8e7caf9fec1f261",
      "EditableText": "Is there any recent updates to Elevator.aslx?\nThe most recent one I can find is v0.65.\n\nI'm wanting to use your code for adding elevators to my game.\nI'm using Quest 5.6.2 and I'm not able to run your sample, It does load - but won't play.\n\nError messages on Play:\n*********************************************************\nError running script&#058; Unrecognised element 'span'\n\nError running script&#058; Unrecognised element 'span'\nError running script&#058; Unrecognised element 'div'\nError running script&#058; Error compiling expression 'ListExclude(ScopeVisibleNotHeldNotScenery(), game.pov)': FunctionCallElement: Could find not function 'ListExclude(QuestList`1, Object)'\nSorry, an error occurred.\nObject reference not set to an instance of an object. at TextAdventures.Quest.WorldModel.UpdateObjectsList(String scope, ListType listType) at TextAdventures.Quest.WorldModel.UpdateObjectsList() at TextAdventures.Quest.WorldModel.UpdateLists() at TextAdventures.Quest.WorldModel.b__100_0()\n*********************************************************\n\nWhen I attempt to follow the Elevator implementation directions, my game will play, but there is an error message displayed in the game:\n*********************************************************\nError running script&#058; Error evaluating expression 'RunDelegateFunction(params, &quot;createCar&quot;)': Object 'ElevatorParams' has no delegate implementation 'createCar'\n*********************************************************\n\nI also currently have the timer disabled as it too shows an error:\n*********************************************************\nError running script&#058; Error compiling expression 'game.elevator': RootExpressionElement: Cannot convert type 'Object' to expression result of 'Element'\n*********************************************************\n\nAny suggestions or reference to updated code or forum articles would be greatly appreciated.",
      "EditableFormat": "bbcode",
      "HTML": "Is there any recent updates to Elevator.aslx?<br/>The most recent one I can find is v0.65.<br/><br/>I'm wanting to use your code for adding elevators to my game.<br/>I'm using Quest 5.6.2 and I'm not able to run your sample, It does load - but won't play.<br/><br/>Error messages on Play:<br/>*********************************************************<br/>Error running script&#058; Unrecognised element 'span'<br/><br/>Error running script&#058; Unrecognised element 'span'<br/>Error running script&#058; Unrecognised element 'div'<br/>Error running script&#058; Error compiling expression 'ListExclude(ScopeVisibleNotHeldNotScenery(), game.pov)': FunctionCallElement: Could find not function 'ListExclude(QuestList`1, Object)'<br/>Sorry, an error occurred.<br/>Object reference not set to an instance of an object. at TextAdventures.Quest.WorldModel.UpdateObjectsList(String scope, ListType listType) at TextAdventures.Quest.WorldModel.UpdateObjectsList() at TextAdventures.Quest.WorldModel.UpdateLists() at TextAdventures.Quest.WorldModel.b__100_0()<br/>*********************************************************<br/><br/>When I attempt to follow the Elevator implementation directions, my game will play, but there is an error message displayed in the game:<br/>*********************************************************<br/>Error running script&#058; Error evaluating expression 'RunDelegateFunction(params, &quot;createCar&quot;)': Object 'ElevatorParams' has no delegate implementation 'createCar'<br/>*********************************************************<br/><br/>I also currently have the timer disabled as it too shows an error:<br/>*********************************************************<br/>Error running script&#058; Error compiling expression 'game.elevator': RootExpressionElement: Cannot convert type 'Object' to expression result of 'Element'<br/>*********************************************************<br/><br/>Any suggestions or reference to updated code or forum articles would be greatly appreciated.",
      "PostDate": "2016-01-22T19:04:39+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "41030",
      "UserId": 0,
      "Username": "Buddy Bishop",
      "UserAvatar": null,
      "UserGravatar": "cec13829fa44a780e8e7caf9fec1f261",
      "EditableText": "I solved these two issues by:\n1. First error: Regenerating the GUID - it worked for some reason.\n2. Second error: With a text editor, I added the line &lt;inherit name=&quot;ElevatorParamsType&quot; /&gt; immediately under the &lt;object name=&quot;ElevatorParams&quot;&gt; section.",
      "EditableFormat": "bbcode",
      "HTML": "I solved these two issues by:<br/>1. First error: Regenerating the GUID - it worked for some reason.<br/>2. Second error: With a text editor, I added the line &lt;inherit name=&quot;ElevatorParamsType&quot; /&gt; immediately under the &lt;object name=&quot;ElevatorParams&quot;&gt; section.",
      "PostDate": "2016-01-27T18:22:48+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "41034",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "For 1, it's quite possible that just the act of saving the game (which causes it to be converted - not at load time as you might expect) may have been the reason why.\n\nSo for anyone else trying this (or any other older sample), when you load the sample, immediately save it. If you try to run it before saving, it will fail, but once you save, you can run it.",
      "EditableFormat": "bbcode",
      "HTML": "For 1, it's quite possible that just the act of saving the game (which causes it to be converted - not at load time as you might expect) may have been the reason why.<br/><br/>So for anyone else trying this (or any other older sample), when you load the sample, immediately save it. If you try to run it before saving, it will fail, but once you save, you can run it.",
      "PostDate": "2016-01-27T19:30:55+00:00",
      "LastEditDate": null
    }
  ]
}
