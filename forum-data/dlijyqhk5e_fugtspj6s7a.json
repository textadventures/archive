{
  "Topic": {
    "TopicId": "dlijyqhk5e_fugtspj6s7a",
    "ForumId": "10",
    "Title": "Make objects that player can acquire from NPCs?",
    "LastUpdated": "2018-01-14T20:26:00.1692308Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "b974dcc6-ad49-484d-be4d-6830e3693e02",
      "UserId": 340237,
      "Username": "elliemcfluffle",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6c53f87272f375dd0d0796d6a2b2f8e3?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi there,\r\nIn my game, I have an NPC who has a piece of gum that the player needs to get in order to finish the game, but I can't figure out how to let the player ask for the gum. I tried using the Ask/Tell tab by running a script that puts the gum in the player's inventory when they ask the NPC for gum, but the game responds with \"I don't understand your command\" when I type \"ask Carlie for gum.\" \r\nAny help finding a (probably very simple and obvious) solution would be appreciated. Thanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi there,<br>\nIn my game, I have an NPC who has a piece of gum that the player needs to get in order to finish the game, but I can't figure out how to let the player ask for the gum. I tried using the Ask/Tell tab by running a script that puts the gum in the player's inventory when they ask the NPC for gum, but the game responds with \"I don't understand your command\" when I type \"ask Carlie for gum.\"<br>\nAny help finding a (probably very simple and obvious) solution would be appreciated. Thanks!</p>\n\n",
      "PostDate": "2018-01-14T20:26:00.1692308Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "991380a9-be30-4895-b9e5-5323b4e730af",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here is what I would do...\r\n\r\n1a.  Create the gum and have stored in an empty room (no exits or entrances).  It's used just for storage.\r\nor\r\n1b.  Have the gum in the room but have it ticked as not visible.  If you choose this option, there is no need for an empty room, just make sure you also run the script 'make object visible gum' to step 5.\r\nI used 1a in my example coded below.\r\n2.  Create a 'command expression' in the room where Carlie is.  This also assumes Carlie does not move rooms.\r\n3.  In the command input box, type something like this:  ask carlie for gum; ask carlie for the gum; get gum from carlie; ask carlie gum; ask for gum; ask for gum from carlie; ask for carlies gum; ask for carlie's gum\r\n- you can also add any other logical combination you feel will cover the players attempt to ask 'carlie for gum'\r\n4.  For the scripts for the command, I added an If script and used 'If object player has flag gummed' then print message \"I already gave you gum\"\r\n5.  In the else for this script, I ran a script 'add to inventory object gum'.  This will move the gum from the  empty room to the player inventory.  I also printed a message indicating the gum has been transferred.\r\n6.  The last thing you should add is a set flag on player object named game.  Do this in the else box, too.\r\n\r\nIf you have questions, let us know!\r\n<details>\r\n ```\r\n<object name=\"simple command room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"Carlie\">\r\n      <inherit name=\"editor_object\" />\r\n      <look>It's Carlie.</look>\r\n    </object>\r\n    <command name=\"ask for gum cmd\">\r\n      <pattern>ask carlie for gum; ask carlie for the gum; get gum from carlie; ask carlie gum; ask for gum; ask for gum from carlie; ask for carlies gum; ask for carlie's gum</pattern>\r\n      <script>\r\n        if (GetBoolean(player, \"gummed\")) {\r\n          msg (\"\\\"I've already given you the gum, silly!\\\"\")\r\n        }\r\n        else {\r\n          msg (\"Carlie politely hands you the gum.  \\\"Here you go, boss!\\\"\")\r\n          AddToInventory (gum)\r\n          SetObjectFlagOn (player, \"gummed\")\r\n        }\r\n      </script>\r\n    </command>\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>Here is what I would do...</p>\n<p>1a.  Create the gum and have stored in an empty room (no exits or entrances).  It's used just for storage.<br>\nor<br>\n1b.  Have the gum in the room but have it ticked as not visible.  If you choose this option, there is no need for an empty room, just make sure you also run the script 'make object visible gum' to step 5.<br>\nI used 1a in my example coded below.</p>\n<ol start=\"2\">\n<li>Create a 'command expression' in the room where Carlie is.  This also assumes Carlie does not move rooms.</li>\n<li>In the command input box, type something like this:  ask carlie for gum; ask carlie for the gum; get gum from carlie; ask carlie gum; ask for gum; ask for gum from carlie; ask for carlies gum; ask for carlie's gum</li>\n</ol>\n<ul>\n<li>you can also add any other logical combination you feel will cover the players attempt to ask 'carlie for gum'</li>\n</ul>\n<ol start=\"4\">\n<li>For the scripts for the command, I added an If script and used 'If object player has flag gummed' then print message \"I already gave you gum\"</li>\n<li>In the else for this script, I ran a script 'add to inventory object gum'.  This will move the gum from the  empty room to the player inventory.  I also printed a message indicating the gum has been transferred.</li>\n<li>The last thing you should add is a set flag on player object named game.  Do this in the else box, too.</li>\n</ol>\n<p>If you have questions, let us know!</p>\n<details>\n ```\n</details>",
      "PostDate": "2018-01-14T20:55:36.6710263Z",
      "LastEditDate": "2018-01-17T03:04:02.0839816Z",
      "link": null
    },
    {
      "PostId": "591b7673-2b99-49b1-9513-bbb27e7b093f",
      "UserId": 340237,
      "Username": "elliemcfluffle",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6c53f87272f375dd0d0796d6a2b2f8e3?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That worked! And now I know how to make command expressions. Thanks for your help!",
      "EditableFormat": "markdown",
      "HTML": "<p>That worked! And now I know how to make command expressions. Thanks for your help!</p>\n\n",
      "PostDate": "2018-01-15T01:02:43.5565454Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bcb1a677-6d14-4c6a-a331-7575394f77a7",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Cool.  There is some really helpful things you can use REGULAR EXPRESSIONS for as well.  If interested check this out.\r\n\r\nhttp://docs.textadventures.co.uk/quest/complex_commands.html",
      "EditableFormat": "markdown",
      "HTML": "<p>Cool.  There is some really helpful things you can use REGULAR EXPRESSIONS for as well.  If interested check this out.</p>\n<p>http://docs.textadventures.co.uk/quest/complex_commands.html</p>\n\n",
      "PostDate": "2018-01-15T01:22:05.9292068Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4815da51-b862-4fce-9b12-ab6108858c64",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Have you tried ```MoveObject``` ?\r\n\r\nI just store objects in other objects. An example, I use stores, and then I store objects in those stores.",
      "EditableFormat": "markdown",
      "HTML": "<p>Have you tried <code>MoveObject</code> ?</p>\n<p>I just store objects in other objects. An example, I use stores, and then I store objects in those stores.</p>\n\n",
      "PostDate": "2018-01-15T01:39:28.1371734Z",
      "LastEditDate": "2018-01-15T01:40:26.535051Z",
      "link": null
    },
    {
      "PostId": "072c680f-9aa4-43ea-845c-4be02c94c485",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the 'ask/Ask' Script/Function is a bit mis-leading, as it's actually just for doing a 'yes/no' type of question, an example:\r\n\r\n```\r\nask (\"Are you guilty of murder?\") {\r\n  // quest automatically (hidden from you) does this: result = true // (if you selected 'yes'), or: result = false // (if you selected 'no')\r\n  if (result) {\r\n    msg (\"You confess to the crime\")\r\n  } else {\r\n    msg (\"You state your innocence of the crime\")\r\n  }\r\n}\r\n\r\n// -------------------------\r\n\r\nask (\"Are you a male?\") {\r\n  if (result) {\r\n    player.sex = \"male\"\r\n  } else {\r\n    player.sex = \"female\"\r\n  }\r\n}\r\n\r\n// ---------------------\r\n\r\nask (\"Are you a female?\") {\r\n  if (result) {\r\n    player.sex = \"female\"\r\n  } else {\r\n    player.sex = \"male\"\r\n  }\r\n}\r\n\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>the 'ask/Ask' Script/Function is a bit mis-leading, as it's actually just for doing a 'yes/no' type of question, an example:</p>\n<pre><code>ask (\"Are you guilty of murder?\") {\n  // quest automatically (hidden from you) does this: result = true // (if you selected 'yes'), or: result = false // (if you selected 'no')\n  if (result) {\n    msg (\"You confess to the crime\")\n  } else {\n    msg (\"You state your innocence of the crime\")\n  }\n}\n\n// -------------------------\n\nask (\"Are you a male?\") {\n  if (result) {\n    player.sex = \"male\"\n  } else {\n    player.sex = \"female\"\n  }\n}\n\n// ---------------------\n\nask (\"Are you a female?\") {\n  if (result) {\n    player.sex = \"female\"\n  } else {\n    player.sex = \"male\"\n  }\n}\n\n</code></pre>\n\n",
      "PostDate": "2018-01-15T03:59:54.646587Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0d666f28-693e-4f7a-8518-cf6a7223583f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Md7yN61b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "### To build on XanMag's solution (it really doesn't need it, but I like to frustrate XanMag):\r\n\r\nYou can also make the NPC a surface (container).\r\n\r\nYou'd need to tweak a few things, like changing \"on which there is\" to \"who is carrying\", but it makes it more realistic when you can look at the NPC and see what he, she, or it is carrying.\r\n\r\nFrom there, you'd probably need to set up take scripts on the objects carried by NPCs which may or may not allow you to just take the things carried by NPCs, but would most definitely change \"You pick it up.\" to \"You take it.\" when the object is carried by someone (or some thing).\r\n\r\nYou'd also need to create a script when trying to add something to the NPC.  I just use ```msg(\"You can't put that on \"+this.article+\".\")```\r\n\r\n---\r\nI also made a global **ask_it_for_something** command, which depends on the NPC having a Boolean attribute named **giver** which is set to ```true```.  (I didn't add all the various patterns XM mentioned, but only because I am lazy.)\r\n\r\n---\r\nExample (updated 1/15/18 7:21pm CST):\r\n\r\n```\r\n<!--Saved by Quest 5.7.6572.22852-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"example_game\">\r\n    <gameid>c097997e-5053-4b48-b78a-398d5e970a9b</gameid>\r\n    <version>0.0.2</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <feature_asktell />\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"Ralph\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"namedmale\" />\r\n      <inherit name=\"surface\" />\r\n      <feature_container />\r\n      <listchildren />\r\n      <listchildrenprefix>CapFirst(this.article)+\" is carrying</listchildrenprefix>\r\n      <giver />\r\n      <addscript type=\"script\">\r\n        msg (\"You can't put that on \"+this.article+\".\")\r\n      </addscript>\r\n      <ask type=\"scriptdictionary\">\r\n        <item key=\"widget\">\r\n          if (thingy.parent = Ralph) {\r\n            msg (\"\\\"It's all yours,\\\" says Ralph, handing it to you.\")\r\n            AddToInventory (thingy)\r\n          }\r\n          else {\r\n            msg (\"\\\"I gave it to you already,\\\" says Ralph.\")\r\n          }\r\n        </item>\r\n      </ask>\r\n      <tellto type=\"scriptdictionary\" />\r\n      <contentsprefix>who is carrying</contentsprefix>\r\n      <object name=\"widget\">\r\n        <inherit name=\"editor_object\" />\r\n        <take type=\"script\">\r\n          if (this.parent = Ralph) {\r\n            msg (\"You take \"+this.article+\" from Ralph.\")\r\n          }\r\n          else {\r\n            msg (\"You pick it up.\")\r\n          }\r\n          AddToInventory (this)\r\n        </take>\r\n      </object>\r\n    </object>\r\n  </object>\r\n  <command name=\"ask_it_for_something_cmd\">\r\n    <pattern>ask #object1# for #object2#;#object1#, give me #object2#</pattern>\r\n    <script>\r\n      if (not HasAttribute(object1, \"giver\")) {\r\n        msg (CapFirst(GetDisplayName(object1)) + \" can't do that.\")\r\n      }\r\n      else if (object1.giver) {\r\n        if (HasAttribute(object1,\"gave_\"+object2.name)) {\r\n          msg (CapFirst(GetDisplayName(object1)) + \" has already given \" + object2.article + \" to you.\")\r\n        }\r\n        else if (object2.parent = object1) {\r\n          msg (CapFirst(GetDisplayName(object1)) + \" hands over \" + GetDisplayName(object2) + \".\")\r\n          set (object1, \"gave_\"+object2.name, true)\r\n          AddToInventory (object2)\r\n        }\r\n        else {\r\n          msg (CapFirst(GetDisplayName(object1)) + \" is not carrying \" + GetDisplayName(object2) + \".\")\r\n        }\r\n      }\r\n      else {\r\n        msg (CapFirst(GetDisplayName(object1)) + \" can't do that.\")\r\n      }\r\n    </script>\r\n  </command>\r\n</asl>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<h3>To build on XanMag's solution (it really doesn't need it, but I like to frustrate XanMag):</h3>\n<p>You can also make the NPC a surface (container).</p>\n<p>You'd need to tweak a few things, like changing \"on which there is\" to \"who is carrying\", but it makes it more realistic when you can look at the NPC and see what he, she, or it is carrying.</p>\n<p>From there, you'd probably need to set up take scripts on the objects carried by NPCs which may or may not allow you to just take the things carried by NPCs, but would most definitely change \"You pick it up.\" to \"You take it.\" when the object is carried by someone (or some thing).</p>\n<p>You'd also need to create a script when trying to add something to the NPC.  I just use <code>msg(\"You can't put that on \"+this.article+\".\")</code></p>\n<hr>\n<p>I also made a global <strong>ask_it_for_something</strong> command, which depends on the NPC having a Boolean attribute named <strong>giver</strong> which is set to <code>true</code>.  (I didn't add all the various patterns XM mentioned, but only because I am lazy.)</p>\n<hr>\n<p>Example (updated 1/15/18 7:21pm CST):</p>\n<pre><code>&lt;!--Saved by Quest 5.7.6572.22852--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"example_game\"&gt;\n    &lt;gameid&gt;c097997e-5053-4b48-b78a-398d5e970a9b&lt;/gameid&gt;\n    &lt;version&gt;0.0.2&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;feature_asktell /&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Ralph\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"namedmale\" /&gt;\n      &lt;inherit name=\"surface\" /&gt;\n      &lt;feature_container /&gt;\n      &lt;listchildren /&gt;\n      &lt;listchildrenprefix&gt;CapFirst(this.article)+\" is carrying&lt;/listchildrenprefix&gt;\n      &lt;giver /&gt;\n      &lt;addscript type=\"script\"&gt;\n        msg (\"You can't put that on \"+this.article+\".\")\n      &lt;/addscript&gt;\n      &lt;ask type=\"scriptdictionary\"&gt;\n        &lt;item key=\"widget\"&gt;\n          if (thingy.parent = Ralph) {\n            msg (\"\\\"It's all yours,\\\" says Ralph, handing it to you.\")\n            AddToInventory (thingy)\n          }\n          else {\n            msg (\"\\\"I gave it to you already,\\\" says Ralph.\")\n          }\n        &lt;/item&gt;\n      &lt;/ask&gt;\n      &lt;tellto type=\"scriptdictionary\" /&gt;\n      &lt;contentsprefix&gt;who is carrying&lt;/contentsprefix&gt;\n      &lt;object name=\"widget\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;take type=\"script\"&gt;\n          if (this.parent = Ralph) {\n            msg (\"You take \"+this.article+\" from Ralph.\")\n          }\n          else {\n            msg (\"You pick it up.\")\n          }\n          AddToInventory (this)\n        &lt;/take&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;command name=\"ask_it_for_something_cmd\"&gt;\n    &lt;pattern&gt;ask #object1# for #object2#;#object1#, give me #object2#&lt;/pattern&gt;\n    &lt;script&gt;\n      if (not HasAttribute(object1, \"giver\")) {\n        msg (CapFirst(GetDisplayName(object1)) + \" can't do that.\")\n      }\n      else if (object1.giver) {\n        if (HasAttribute(object1,\"gave_\"+object2.name)) {\n          msg (CapFirst(GetDisplayName(object1)) + \" has already given \" + object2.article + \" to you.\")\n        }\n        else if (object2.parent = object1) {\n          msg (CapFirst(GetDisplayName(object1)) + \" hands over \" + GetDisplayName(object2) + \".\")\n          set (object1, \"gave_\"+object2.name, true)\n          AddToInventory (object2)\n        }\n        else {\n          msg (CapFirst(GetDisplayName(object1)) + \" is not carrying \" + GetDisplayName(object2) + \".\")\n        }\n      }\n      else {\n        msg (CapFirst(GetDisplayName(object1)) + \" can't do that.\")\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2018-01-15T05:40:28.7215492Z",
      "LastEditDate": "2018-01-16T01:22:08.7930121Z",
      "link": null
    }
  ]
}
