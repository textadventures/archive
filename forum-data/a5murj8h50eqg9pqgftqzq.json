{
  "Topic": {
    "TopicId": "a5murj8h50eqg9pqgftqzq",
    "ForumId": "10",
    "Title": "Is my logic clear on how to get this done?(stopping a foreach script)",
    "LastUpdated": "2016-10-26T13:13:46.5074763Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "73191847-099b-4d7d-bc2e-3e3d630720c6",
      "UserId": 227864,
      "Username": "Talon",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3b6191c9adc337e83fec8e293e3fc584?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\r\nConceptually what I'm aiming for is this, the player encounters an NPC, engages them in conversation and if they have one of a handful of unique items(all with the attribute gem) one will be taken and the person will get a reward. \r\n\r\nMy current logic is using for each and have it check any item in the inventory for being a gemstone, while this sorta works, it takes EVERY game rather than just one..((I think I might be missing something on how to have the script stop once If finds one item that passes the check, have been looking for a stop script or similar function))\r\n\r\nWould it be better if I tried to use a list for it?",
      "EditableFormat": "markdown",
      "HTML": "<p>Conceptually what I'm aiming for is this, the player encounters an NPC, engages them in conversation and if they have one of a handful of unique items(all with the attribute gem) one will be taken and the person will get a reward.</p>\n<p>My current logic is using for each and have it check any item in the inventory for being a gemstone, while this sorta works, it takes EVERY game rather than just one..((I think I might be missing something on how to have the script stop once If finds one item that passes the check, have been looking for a stop script or similar function))</p>\n<p>Would it be better if I tried to use a list for it?</p>\n\n",
      "PostDate": "2016-10-26T13:13:46.5074763Z",
      "LastEditDate": null
    },
    {
      "PostId": "5456e9c4-33cb-440a-b967-808778217e4e",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The only way to break out of a loop early is with a return, so that would probably mean having the loop in another function, and returning the gem object from that.\r\n\r\nAn alternative would be to have a Boolean/flag that you set to true when the gem is found, and once it is true, stop doing anything in each iteration.",
      "EditableFormat": "markdown",
      "HTML": "<p>The only way to break out of a loop early is with a return, so that would probably mean having the loop in another function, and returning the gem object from that.</p>\n<p>An alternative would be to have a Boolean/flag that you set to true when the gem is found, and once it is true, stop doing anything in each iteration.</p>\n\n",
      "PostDate": "2016-10-26T14:19:30.4289554Z",
      "LastEditDate": null
    },
    {
      "PostId": "a9232c0e-d54e-412a-a250-96910c57f527",
      "UserId": 227864,
      "Username": "Talon",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3b6191c9adc337e83fec8e293e3fc584?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think i'll try the later, its something that makes so much sense, just never occurred to me to try it that way",
      "EditableFormat": "markdown",
      "HTML": "<p>I think i'll try the later, its something that makes so much sense, just never occurred to me to try it that way</p>\n\n",
      "PostDate": "2016-10-26T14:35:33.138542Z",
      "LastEditDate": null
    }
  ]
}
