{
  "Topic": {
    "TopicId": "yzfqpqpka0gufvuzpai3yq",
    "ForumId": "24",
    "Title": "Debugging (via path-fixing) in squiffy",
    "LastUpdated": "2020-09-28T19:49:32.9075802Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "c3bf6acb-079b-45e6-be12-2c7f4d1e9f25",
      "UserId": 251768,
      "Username": "Bluevoss",
      "AvatarUrl": "https://i.imgur.com/6mfIIbhb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is not squiffy-specific advice but more for newbies trying to learn how to organize things. I've got a game, \"StoreyMinus\" which I was pretty proud of. Last weekend I was playing through and there was a minor chance of something random happening at certain stages. Oddly, it happened each time I went through that point. Curiously I looked through the code.\r\n\r\nTurns out I'd been path-testing code at one point during development. Something like this...\r\n\r\n```\r\n    set(\"path2\",squiffy.getRndInteger(1,11));\r\n    set(\"path2\",1);\r\n\r\n    if (get(\"path2\")==1){squiffy.story.go(\"Tunnel special event\");}\r\n\r\n```\r\nClearly this event should happen 1 time in 11 (don't know why my probability was so specific). Still, clearly I wanted to test it and did. Then the wife must have wanted something or a cat came in to play. All I know is I left this force-test (the alteration of path2) to 1. And so you always got it. Fixed the bug and reloaded the game.\r\n\r\nNow here's the lesson. In every case (other than this) I place a TTD (Things To Do) notification next to ANY temporary code (so this sort of thing doesn't happen). It should have looked like this...\r\n\r\n```\r\n    set(\"path2\",1);  //TTD\r\n```\r\n\r\nThen, before release, I check to make sure I didn't leave any TTDs behind. This makes sure that all my debug statements and testing is cleared correctly before a release. But in this case, I didn't. Very embarrassing. \r\n\r\nIgnoring the case where I didn't, always make sure you flag temp code so you know where it is when it comes time to release. Okay, lecture over. Dismissed!",
      "EditableFormat": "markdown",
      "HTML": "<p>This is not squiffy-specific advice but more for newbies trying to learn how to organize things. I've got a game, \"StoreyMinus\" which I was pretty proud of. Last weekend I was playing through and there was a minor chance of something random happening at certain stages. Oddly, it happened each time I went through that point. Curiously I looked through the code.</p>\n<p>Turns out I'd been path-testing code at one point during development. Something like this...</p>\n<pre><code>    set(\"path2\",squiffy.getRndInteger(1,11));\n    set(\"path2\",1);\n\n    if (get(\"path2\")==1){squiffy.story.go(\"Tunnel special event\");}\n\n</code></pre>\n<p>Clearly this event should happen 1 time in 11 (don't know why my probability was so specific). Still, clearly I wanted to test it and did. Then the wife must have wanted something or a cat came in to play. All I know is I left this force-test (the alteration of path2) to 1. And so you always got it. Fixed the bug and reloaded the game.</p>\n<p>Now here's the lesson. In every case (other than this) I place a TTD (Things To Do) notification next to ANY temporary code (so this sort of thing doesn't happen). It should have looked like this...</p>\n<pre><code>    set(\"path2\",1);  //TTD\n</code></pre>\n<p>Then, before release, I check to make sure I didn't leave any TTDs behind. This makes sure that all my debug statements and testing is cleared correctly before a release. But in this case, I didn't. Very embarrassing.</p>\n<p>Ignoring the case where I didn't, always make sure you flag temp code so you know where it is when it comes time to release. Okay, lecture over. Dismissed!</p>\n\n",
      "PostDate": "2020-09-28T19:49:32.9075802Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1919a2af-01f6-4293-ae41-81187b6cce7f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm used to flagging code with `TODO` (where there's code that doesn't exist yet, or a placeholder), `FIXME` (a bug that I've found but didn't have time to fix properly), or `DEBUG` (as in this case). Using capitals makes it easier to spot them; and I assume the same words are used by a significant number of programmers, as my usual text editor's default syntax-highlighting rules make them show up bright red if they occur in comments.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm used to flagging code with <code>TODO</code> (where there's code that doesn't exist yet, or a placeholder), <code>FIXME</code> (a bug that I've found but didn't have time to fix properly), or <code>DEBUG</code> (as in this case). Using capitals makes it easier to spot them; and I assume the same words are used by a significant number of programmers, as my usual text editor's default syntax-highlighting rules make them show up bright red if they occur in comments.</p>\n\n",
      "PostDate": "2020-09-28T20:12:06.6628575Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0aa0dcd2-da9b-4b00-ac8e-d9fc2ea1fc82",
      "UserId": 251768,
      "Username": "Bluevoss",
      "AvatarUrl": "https://i.imgur.com/6mfIIbhb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yop. A lot of coders have tricks to keep things straight. It just galls me that I missed this one. I'm pretty solid about always marking temporary logic changes and this time I let it slide/got distracted. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Yop. A lot of coders have tricks to keep things straight. It just galls me that I missed this one. I'm pretty solid about always marking temporary logic changes and this time I let it slide/got distracted.</p>\n\n",
      "PostDate": "2020-09-29T10:32:25.5117122Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
