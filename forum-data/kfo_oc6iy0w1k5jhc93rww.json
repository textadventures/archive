{
  "Topic": {
    "TopicId": "kfo_oc6iy0w1k5jhc93rww",
    "ForumId": "24",
    "Title": "Omitting visited page numbers from a random number generator",
    "LastUpdated": "2020-03-31T23:12:00.7982779Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "cb90e33e-176c-414b-b88a-1b3209a87fac",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have a selection mechanism in my game which works like this.\r\n\r\n```[[Selection process]]:```\r\n\r\n```var rnd = Math.ceil(Math.random() * 20);    // random number between 1 and 20```\r\n```squiffy.set(\"pageNumber\",rnd);```\r\n\r\n```[[Continue]](page{pageNumber})```\r\n\r\ni.e. depending on the random number generated, the user is sent to [[page1]], [[page2]] etc.\r\n\r\nOn each numbered page some other game stuff happens, and the user either succeeds (and progresses) or fails and is sent back to ```[[Selection process]]``` to try again. Another random number is generated, they're sent to that page, they succeed or fail and either progress or go back to ```[[Selection process]]``` again. This loop keeps going until they succeed and progress, or if they fail all twenty pages they're sent elsewhere.\r\n\r\nHowever they should only be able to visit any given page number, eg ```[[page1]]```, ```[[page2]]``` etc, once. Can anyone advise me on how to keep track of the page numbers that have already been visited, and omit those numbers from the random number generator at ```[[Selection process]]```?",
      "EditableFormat": "markdown",
      "HTML": "<p>I have a selection mechanism in my game which works like this.</p>\n<p><code>[[Selection process]]:</code></p>\n<p><code>var rnd = Math.ceil(Math.random() * 20); // random number between 1 and 20</code><br>\n<code>squiffy.set(\"pageNumber\",rnd);</code></p>\n<p><code>[[Continue]](page{pageNumber})</code></p>\n<p>i.e. depending on the random number generated, the user is sent to [[page1]], [[page2]] etc.</p>\n<p>On each numbered page some other game stuff happens, and the user either succeeds (and progresses) or fails and is sent back to <code>[[Selection process]]</code> to try again. Another random number is generated, they're sent to that page, they succeed or fail and either progress or go back to <code>[[Selection process]]</code> again. This loop keeps going until they succeed and progress, or if they fail all twenty pages they're sent elsewhere.</p>\n<p>However they should only be able to visit any given page number, eg <code>[[page1]]</code>, <code>[[page2]]</code> etc, once. Can anyone advise me on how to keep track of the page numbers that have already been visited, and omit those numbers from the random number generator at <code>[[Selection process]]</code>?</p>\n\n",
      "PostDate": "2020-03-31T23:12:00.7982779Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9917db7e-e1cf-4985-a0e9-c77353fa3fef",
      "UserId": 251768,
      "Username": "Bluevoss",
      "AvatarUrl": "https://i.imgur.com/6mfIIbhb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "My answer is really kludgy and I'm sure some aces can probably avoid all the repeating bits. \"Seen\" commands would have been ideal but I don't know how to make seen work against a variable. That being the case, I just bully through with my own flag system. Here, I'd doing it with two pages - you'll have to C&P and modify the code to work with twenty.\r\n```\r\n[[Init]]:\r\n\r\n@set loopCnt=1\r\n@set page1\r\n@set page2\r\n\r\n[[Start this process]](Selection process)\r\n\r\n[[Selection process]]:\r\n\r\n    var rnd = Math.ceil(Math.random() * 2); // notice this is 1-2 for illustration purposes.\r\n    squiffy.set(\"pageNumber\",rnd);\r\n\r\n    set(\"pageTarget\",\"page\"+get(\"pageNumber\"));\r\n\r\n    if (get(\"loopCnt\")>2){squiffy.story.go(\"pageDone\");}\r\n    else{\r\n        if ((get(\"pageNumber\")==1) && (get(\"page1\"))){\r\n            squiffy.story.go(get(\"pageTarget\"));}\r\n        if ((get(\"pageNumber\")==2) && (get(\"page2\"))){\r\n            squiffy.story.go(get(\"pageTarget\"));}\r\n        //Copy and past the two line sections from above here.\r\n    }\r\n\r\n[[page1]]:\r\n\r\n@set not page1\r\n@inc loopCnt\r\nI'm in page one=========\r\n\r\n[[try again]](Selection process)\r\n\r\n[[page2]]:\r\n\r\n@set not page2\r\n@inc loopCnt\r\nI'm on page two=========\r\n\r\n[[try again]](Selection process)\r\n\r\n[[pageDone]]:\r\n\r\nWe're done\r\n```\r\nNot my best work. Nothing to ooh and ahh about. This was brute force. On the plus side, you don't have to hit continue every time - you'll just work through your pages and then exit.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>My answer is really kludgy and I'm sure some aces can probably avoid all the repeating bits. \"Seen\" commands would have been ideal but I don't know how to make seen work against a variable. That being the case, I just bully through with my own flag system. Here, I'd doing it with two pages - you'll have to C&amp;P and modify the code to work with twenty.</p>\n<pre><code>[[Init]]:\n\n@set loopCnt=1\n@set page1\n@set page2\n\n[[Start this process]](Selection process)\n\n[[Selection process]]:\n\n    var rnd = Math.ceil(Math.random() * 2); // notice this is 1-2 for illustration purposes.\n    squiffy.set(\"pageNumber\",rnd);\n\n    set(\"pageTarget\",\"page\"+get(\"pageNumber\"));\n\n    if (get(\"loopCnt\")&gt;2){squiffy.story.go(\"pageDone\");}\n    else{\n        if ((get(\"pageNumber\")==1) &amp;&amp; (get(\"page1\"))){\n            squiffy.story.go(get(\"pageTarget\"));}\n        if ((get(\"pageNumber\")==2) &amp;&amp; (get(\"page2\"))){\n            squiffy.story.go(get(\"pageTarget\"));}\n        //Copy and past the two line sections from above here.\n    }\n\n[[page1]]:\n\n@set not page1\n@inc loopCnt\nI'm in page one=========\n\n[[try again]](Selection process)\n\n[[page2]]:\n\n@set not page2\n@inc loopCnt\nI'm on page two=========\n\n[[try again]](Selection process)\n\n[[pageDone]]:\n\nWe're done\n</code></pre>\n<p>Not my best work. Nothing to ooh and ahh about. This was brute force. On the plus side, you don't have to hit continue every time - you'll just work through your pages and then exit.</p>\n\n",
      "PostDate": "2020-04-01T00:36:51.5626202Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6ce07415-ef05-47b3-bc6f-1da78ceabd99",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi Bluevoss!\r\n\r\nThank you again for replying so quickly! So this *almost* works the way I need it to! I've run it a number of times, and the only problem is that if the random number generator produces the same number the second time through the loop, it doesn't generate another random number as an alternative.\r\n\r\neg if rng generates a pageNumber of 1 the first time, you visit ```[[page1]]```, return to ```[[Selection process]]```, and then the pageNumber randomly generated is 1 again, the loop stops there.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi Bluevoss!</p>\n<p>Thank you again for replying so quickly! So this <em>almost</em> works the way I need it to! I've run it a number of times, and the only problem is that if the random number generator produces the same number the second time through the loop, it doesn't generate another random number as an alternative.</p>\n<p>eg if rng generates a pageNumber of 1 the first time, you visit <code>[[page1]]</code>, return to <code>[[Selection process]]</code>, and then the pageNumber randomly generated is 1 again, the loop stops there.</p>\n\n",
      "PostDate": "2020-04-01T10:52:38.7129349Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f9aec7ba-0c28-4585-9312-a695d79ee03d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't know Squiffy, but it bugs me that the solution presented above isn't completely random. So I'll try to come up with an alternative:\r\n\r\n```\r\n[[Init]]:\r\n\r\n    squiffy.set(\"pagesToVisit\", \"123456789ABCDEFGHIJK\")\r\n\r\nI assume there's a way to do the above â†‘ just in Squiffy, but I'll stick to using only functions that I've seen you use\r\n\r\n[[Start this process]](Selection process)\r\n\r\n[[Selection process]]:\r\n\r\n    var pages = get(\"pagesToVisit\");\r\n    if (pages) {\r\n      var rnd = pages.charAt(Math.floor(Math.random() * pages.length)); // pick a random character from pages\r\n      squiffy.set(\"pageNumber\", rnd);\r\n      squiffy.set(\"pagesToVisit\", pages.replace(rnd, \"\")); // remove that page from the list so it won't be picked again\r\n    } else {\r\n      squiffy.story.go(\"pageDone\");\r\n    }\r\n\r\n[[Continue]](page{pageNumber})\r\n```\r\n\r\nIn this version, the pages would be named `page1`, `page2`, `page3`, `page4`, `page5`, `page6`, `page7`, `page8`, `page9`, `pageA`, `pageB`, `pageC`, `pageD`, `pageE`, `pageF`, `pageG`, `pageH`, `pageI`, `pageJ`, and `pageK` - dealing with characters works out with simpler code than handling a list of numbers. Hope that isn't a problem.\r\n\r\nI basically made a string \"123456789ABCDEFGHIJK\", then pick a random character from the string instead of just choosing a number; and remove the chosen character from the string using `replace` so it won't be chosen again next time. When there's no pages left in the string (`if (pages)` tests for an empty string) it redirects to `pageDone` as in Bluevoss's version",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't know Squiffy, but it bugs me that the solution presented above isn't completely random. So I'll try to come up with an alternative:</p>\n<pre><code>[[Init]]:\n\n    squiffy.set(\"pagesToVisit\", \"123456789ABCDEFGHIJK\")\n\nI assume there's a way to do the above â†‘ just in Squiffy, but I'll stick to using only functions that I've seen you use\n\n[[Start this process]](Selection process)\n\n[[Selection process]]:\n\n    var pages = get(\"pagesToVisit\");\n    if (pages) {\n      var rnd = pages.charAt(Math.floor(Math.random() * pages.length)); // pick a random character from pages\n      squiffy.set(\"pageNumber\", rnd);\n      squiffy.set(\"pagesToVisit\", pages.replace(rnd, \"\")); // remove that page from the list so it won't be picked again\n    } else {\n      squiffy.story.go(\"pageDone\");\n    }\n\n[[Continue]](page{pageNumber})\n</code></pre>\n<p>In this version, the pages would be named <code>page1</code>, <code>page2</code>, <code>page3</code>, <code>page4</code>, <code>page5</code>, <code>page6</code>, <code>page7</code>, <code>page8</code>, <code>page9</code>, <code>pageA</code>, <code>pageB</code>, <code>pageC</code>, <code>pageD</code>, <code>pageE</code>, <code>pageF</code>, <code>pageG</code>, <code>pageH</code>, <code>pageI</code>, <code>pageJ</code>, and <code>pageK</code> - dealing with characters works out with simpler code than handling a list of numbers. Hope that isn't a problem.</p>\n<p>I basically made a string \"123456789ABCDEFGHIJK\", then pick a random character from the string instead of just choosing a number; and remove the chosen character from the string using <code>replace</code> so it won't be chosen again next time. When there's no pages left in the string (<code>if (pages)</code> tests for an empty string) it redirects to <code>pageDone</code> as in Bluevoss's version</p>\n\n",
      "PostDate": "2020-04-01T11:09:35.3771808Z",
      "LastEditDate": "2020-04-01T11:11:40.8469159Z",
      "link": null
    },
    {
      "PostId": "f393d131-9095-4723-8915-daaa1ad75ce4",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "mrangel you're a genius! That works beautifully! With that and bluevoss' solution to send them to pageDone if they fail all twenty pages, my random selection is working absolutely perfectly!\r\n\r\nSeriously, thank you both so much!",
      "EditableFormat": "markdown",
      "HTML": "<p>mrangel you're a genius! That works beautifully! With that and bluevoss' solution to send them to pageDone if they fail all twenty pages, my random selection is working absolutely perfectly!</p>\n<p>Seriously, thank you both so much!</p>\n\n",
      "PostDate": "2020-04-01T12:03:20.8337503Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4de82bf2-ea5e-4e7b-9ca8-a053981b1cd3",
      "UserId": 251768,
      "Username": "Bluevoss",
      "AvatarUrl": "https://i.imgur.com/6mfIIbhb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Pretty slick. I'm weak in JS but I learned something new. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Pretty slick. I'm weak in JS but I learned something new.</p>\n\n",
      "PostDate": "2020-04-02T14:55:29.4668825Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "156e2ea4-6f85-4243-a361-e6c9841065f6",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It's still bugging me that I haven't solved the original problem as stated, so with numbers 1 to 20:\r\n```\r\n    if (!window.getRandomPage) {\r\n      var pages = Array.from(Array(20).keys()).map(i=>i+1);\r\n      window.getRandomPage = function () { return (pages.length ? pages.splice(Math.floor(Math.random()*pages.length), 1)[0] : squiffy.story.go(\"PageDone\")) };\r\n    }\r\n    squiffy.set (\"pageNumber\", getRandomPage());\r\n\r\n[[Continue]](Page{pageNumber})\r\n```\r\n\r\nIf it needs explanation:\r\n* `if (!window.getRandomPage) {` - if we haven't already done this\r\n     * `var pages = Array.from(Array(20).keys()).map(i=>i+1);` - generate an array containing the numbers from 1 to 20\r\n     * `window.getRandomPage = function () { return (` - create a javascript function, getRandomPage, which returns the value of a single expression\r\n         * `pages.length ? ` - if the \"pages\" array has any elements in it\r\n             * `pages.splice(Math.floor(Math.random()*pages.length), 1)[0]` - remove a random element from an array and return the element removed (the `[0]` at the end is because splice() returns an array)\r\n         * `:` - \"else\"\r\n             * `squiffy.story.go(\"PageDone\")` - we've been to all the pages, so go to PageDone\r\n* Then we can just call `getRandomPage`",
      "EditableFormat": "markdown",
      "HTML": "<p>It's still bugging me that I haven't solved the original problem as stated, so with numbers 1 to 20:</p>\n<pre><code>    if (!window.getRandomPage) {\n      var pages = Array.from(Array(20).keys()).map(i=&gt;i+1);\n      window.getRandomPage = function () { return (pages.length ? pages.splice(Math.floor(Math.random()*pages.length), 1)[0] : squiffy.story.go(\"PageDone\")) };\n    }\n    squiffy.set (\"pageNumber\", getRandomPage());\n\n[[Continue]](Page{pageNumber})\n</code></pre>\n<p>If it needs explanation:</p>\n<ul>\n<li><code>if (!window.getRandomPage) {</code> - if we haven't already done this\n<ul>\n<li><code>var pages = Array.from(Array(20).keys()).map(i=&gt;i+1);</code> - generate an array containing the numbers from 1 to 20</li>\n<li><code>window.getRandomPage = function () { return (</code> - create a javascript function, getRandomPage, which returns the value of a single expression\n<ul>\n<li><code>pages.length ?</code> - if the \"pages\" array has any elements in it\n<ul>\n<li><code>pages.splice(Math.floor(Math.random()*pages.length), 1)[0]</code> - remove a random element from an array and return the element removed (the <code>[0]</code> at the end is because splice() returns an array)</li>\n</ul>\n</li>\n<li><code>:</code> - \"else\"\n<ul>\n<li><code>squiffy.story.go(\"PageDone\")</code> - we've been to all the pages, so go to PageDone</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Then we can just call <code>getRandomPage</code></li>\n</ul>\n\n",
      "PostDate": "2020-04-02T16:27:12.3557404Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c7e788b9-1de5-4988-8ca5-69f57da0f569",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi mrangel - sorry for the delay, I've had a week :/\r\n\r\nI've just been testing this, and it works except that sometimes pageNumber sets to 'true' - I'll get several number results as expected, but then at a random point, ```pageNumber=true``` and the selection process won't go any further. That can be on the first random number generated, the 9th, and 14th, etc. Any idea why this is happening?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi mrangel - sorry for the delay, I've had a week :/</p>\n<p>I've just been testing this, and it works except that sometimes pageNumber sets to 'true' - I'll get several number results as expected, but then at a random point, <code>pageNumber=true</code> and the selection process won't go any further. That can be on the first random number generated, the 9th, and 14th, etc. Any idea why this is happening?</p>\n\n",
      "PostDate": "2020-04-06T11:28:45.7080293Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0b67b32a-01a1-4484-b432-1545cf8f3c97",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I can't see where that's happening. Which version are you using now?\r\n\r\nI've not tried it in Squiffy, but have run through the javascript a few times and it always seems to behave as expected.",
      "EditableFormat": "markdown",
      "HTML": "<p>I can't see where that's happening. Which version are you using now?</p>\n<p>I've not tried it in Squiffy, but have run through the javascript a few times and it always seems to behave as expected.</p>\n\n",
      "PostDate": "2020-04-06T13:59:05.7041031Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6f384e8c-155f-41a0-ae91-dd48fab44113",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is the latest version, selecting a number from 1-20 rather than a character from the number and letter string. The one starting ```if (!window.getRandomPage)```\r\n\r\nDoing some more testing, it looks like this happens when I test the game multiple times (ie using the Restart or Run buttons). Between runs through the game the numbers generated seem to be stored - so if in game one I get numbers 5, 3, and 10, and then in game two I get 7, 12, 16, those all go fine, but then if in game three I get 19, 1, 3 - it either stalls (Continue link doesn't work) or sends me to ```[[PageDone]]``` at 3 because I had that number back in game one. \r\n\r\nIf I close Squiffy (I'm using the desktop app) and start again, it  clears it, but running the game multiple times in a Squiffy session using Run or Restart seems to cause this anomaly!",
      "EditableFormat": "markdown",
      "HTML": "<p>This is the latest version, selecting a number from 1-20 rather than a character from the number and letter string. The one starting <code>if (!window.getRandomPage)</code></p>\n<p>Doing some more testing, it looks like this happens when I test the game multiple times (ie using the Restart or Run buttons). Between runs through the game the numbers generated seem to be stored - so if in game one I get numbers 5, 3, and 10, and then in game two I get 7, 12, 16, those all go fine, but then if in game three I get 19, 1, 3 - it either stalls (Continue link doesn't work) or sends me to <code>[[PageDone]]</code> at 3 because I had that number back in game one.</p>\n<p>If I close Squiffy (I'm using the desktop app) and start again, it  clears it, but running the game multiple times in a Squiffy session using Run or Restart seems to cause this anomaly!</p>\n\n",
      "PostDate": "2020-04-06T14:35:35.939227Z",
      "LastEditDate": "2020-04-06T14:36:05.4510386Z",
      "link": null
    },
    {
      "PostId": "52fb7d2b-8107-4b1c-9530-a54f32e694ea",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah, I didn't think about restarting.\r\nIn that case, you'd need to split it up; put:\r\n```\r\n      var pages = Array.from(Array(20).keys()).map(i=>i+1);\r\n      window.getRandomPage = function () { return (pages.length ? pages.splice(Math.floor(Math.random()*pages.length), 1)[0] : squiffy.story.go(\"PageDone\")) };\r\n```\r\non a page before the random pages, and then use\r\n```\r\n    squiffy.set (\"pageNumber\", getRandomPage());\r\n\r\n[[Continue]](Page{pageNumber})\r\n```\r\neach time.\r\n\r\n\r\nI'm guessing that the \"broken link\" behaviour means that for some reason `squiffy.story.go('PageDone')` is returning true rather than sending the player to the right page. I'm not used to Squiffy, so not sure why that would happen.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah, I didn't think about restarting.<br>\nIn that case, you'd need to split it up; put:</p>\n<pre><code>      var pages = Array.from(Array(20).keys()).map(i=&gt;i+1);\n      window.getRandomPage = function () { return (pages.length ? pages.splice(Math.floor(Math.random()*pages.length), 1)[0] : squiffy.story.go(\"PageDone\")) };\n</code></pre>\n<p>on a page before the random pages, and then use</p>\n<pre><code>    squiffy.set (\"pageNumber\", getRandomPage());\n\n[[Continue]](Page{pageNumber})\n</code></pre>\n<p>each time.</p>\n<p>I'm guessing that the \"broken link\" behaviour means that for some reason <code>squiffy.story.go('PageDone')</code> is returning true rather than sending the player to the right page. I'm not used to Squiffy, so not sure why that would happen.</p>\n\n",
      "PostDate": "2020-04-06T15:38:38.9073534Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2e02ec1e-e98d-4c40-a84d-7f6165ac322e",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Almost there! That's mostly solved the stalling issue - the only problem I still have is that it will do 19 loops but not 20 (ie the pages are ```[[page1]]``` - ```[[page20]]```, so the user should have 20 chances before being sent to ```[[PageDone]]```, but they're stopping at 19!)",
      "EditableFormat": "markdown",
      "HTML": "<p>Almost there! That's mostly solved the stalling issue - the only problem I still have is that it will do 19 loops but not 20 (ie the pages are <code>[[page1]]</code> - <code>[[page20]]</code>, so the user should have 20 chances before being sent to <code>[[PageDone]]</code>, but they're stopping at 19!)</p>\n\n",
      "PostDate": "2020-04-06T16:35:12.5998247Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f39709e7-4361-4b3f-afff-4b0ebc9ee870",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's odd. Is it missing the same one each time?",
      "EditableFormat": "markdown",
      "HTML": "<p>That's odd. Is it missing the same one each time?</p>\n\n",
      "PostDate": "2020-04-06T18:48:30.8793421Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ca4fc704-b378-4290-8b57-15797a918520",
      "UserId": 471394,
      "Username": "fvu109",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b895f3cf2b427a32e38299edd44559a5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It doesn't seem to be - I just did some more testing, on my first attempt it ran through all 20, but on the next it only went to 19 before going to PageDone.",
      "EditableFormat": "markdown",
      "HTML": "<p>It doesn't seem to be - I just did some more testing, on my first attempt it ran through all 20, but on the next it only went to 19 before going to PageDone.</p>\n\n",
      "PostDate": "2020-04-06T21:13:54.4386328Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "70eb286c-6b5b-412a-b04f-7aad315dbd2d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The question here is which one is it missing out? Any kind of pattern to it?\r\n\r\nTry it a few times and make a note of which ones it goes through; then see if there's any kind of pattern to the conditions where it fails.\r\n\r\nI've done the same here, but that doesn't help to debug because for me it always gets to 20.",
      "EditableFormat": "markdown",
      "HTML": "<p>The question here is which one is it missing out? Any kind of pattern to it?</p>\n<p>Try it a few times and make a note of which ones it goes through; then see if there's any kind of pattern to the conditions where it fails.</p>\n<p>I've done the same here, but that doesn't help to debug because for me it always gets to 20.</p>\n\n",
      "PostDate": "2020-04-07T09:18:01.248192Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
