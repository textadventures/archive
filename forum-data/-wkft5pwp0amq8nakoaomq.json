{
  "Topic": {
    "TopicId": "-wkft5pwp0amq8nakoaomq",
    "ForumId": "10",
    "Title": "Oxygen Tank",
    "LastUpdated": "2020-07-24T02:39:56.4512391Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "01a6be86-7be0-4a80-9814-6d0cc2b77eb0",
      "UserId": 492140,
      "Username": "The Goldfish",
      "AvatarUrl": "https://i.imgur.com/Ld3KhYOb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Greetings everyone! I have a space suit that I am working on and I would like to add some 'zazz' to the game by including an oxygen tank. My goal is once you add the tank to the suit the oxygen will deplete after \"X\" amount of turns and therefore the game is over because you cannot breathe. I have tried to set up various turn scripts, change scripts, if scripts, but to no avail. I currently have my suit set up as a wearable and a surface container, and the tank under the \"Use/Give\" tab as \"Use this on (other object)\". Am I on the right track or do I need to go a whole different direction?   ",
      "EditableFormat": "markdown",
      "HTML": "<p>Greetings everyone! I have a space suit that I am working on and I would like to add some 'zazz' to the game by including an oxygen tank. My goal is once you add the tank to the suit the oxygen will deplete after \"X\" amount of turns and therefore the game is over because you cannot breathe. I have tried to set up various turn scripts, change scripts, if scripts, but to no avail. I currently have my suit set up as a wearable and a surface container, and the tank under the \"Use/Give\" tab as \"Use this on (other object)\". Am I on the right track or do I need to go a whole different direction?</p>\n\n",
      "PostDate": "2020-07-24T02:39:56.4512391Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "edb1b1b0-2d68-4f9f-add8-b54401f33876",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sounds like you've thought about what you're doing; seems a pretty sensible setup. I can't see a problem with it. Maybe you could share your code, and we might be able to see what's wrong?\r\n\r\nI'd probably use a single turnscript to handle the suit and oxygen. Something like:\r\n```\r\n// Set up the initial oxygen level. Useful on the web editor; if you're on desktop you can just set it in the Attributes tab\r\nif (not HasInt (oxygentank, \"fullness\")) {\r\n  oxygentank.fullness = 42\r\n}\r\n\r\n// check if the player needs an oxygen tank\r\n// I'm assuming a container called \"space\" which contains all space rooms\r\n//   so it's easy to see where the space suit is needed\r\n\r\nif (Contains (space, game.pov)) {\r\n  // Now check if the player can breathe\r\n  breathing = false\r\n  if (not GetBoolean (spacesuit, \"worn\")) {\r\n    OutputTextNoBr (\"It's a very bad idea to go into space without wearing your {object:spacesuit}! \")\r\n  }\r\n  else if (not Contains (spacesuit, oxygentank)) {\r\n    OutputTextNoBr (\"You need to attach an {object:oxygentank} to your {object:spacesuit}. \")\r\n  }\r\n  else if (oxygentank.fullness = 0) {\r\n    OutputTextNoBr (\"Your {object:oxygentank} is empty! \")\r\n  }\r\n  else {\r\n    // We can breathe!\r\n    breathing = true\r\n    oxygentank.fullness = oxygentank.fullness - 1\r\n    if (oxygentank.fullness = 0) {\r\n      msg (\"Your suit's air circulator rattles to a stop. Your oxygen supply is depleted.\")\r\n      // The amount of air in a suit \r\n      this.suffocating = -3\r\n    }\r\n    else if (oxygentank.fullness < 6) {\r\n      msg (\"An alarm sounds in your helmet. Your oxygen supply is nearly depleted.\")\r\n    }\r\n  }\r\n}\r\nelse {\r\n  breathing = true\r\n}\r\n\r\n// I'd probably give the player the ability to hold their breath for a few turns\r\n// so a careless mistake isn't immediately fatal.\r\nif (breathing) {\r\n  this.suffocating = null\r\n}\r\nelse {\r\n  if (not HasInt (this, \"suffocating\")) this.suffocating = 0\r\n  this.suffocating = this.suffocating + 1\r\n  switch (this.suffocating) {\r\n    case (-2,0) {\r\n      msg (\"The last bit of air in your suit is getting more stale by the second.\")\r\n    }\r\n    case (1) {\r\n      msg (\"Your lungs are burning, and you know that you need to find air quickly.\")\r\n    }\r\n    case (2) {\r\n      msg (\"You start to feel dizzy and light headed from lack of oxygen.\")\r\n    }\r\n    case (3) {\r\n      msg (\"You try to take a breath but there is nothing there. You pass out and die.\")\r\n      finish()\r\n    }\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Sounds like you've thought about what you're doing; seems a pretty sensible setup. I can't see a problem with it. Maybe you could share your code, and we might be able to see what's wrong?</p>\n<p>I'd probably use a single turnscript to handle the suit and oxygen. Something like:</p>\n<pre><code>// Set up the initial oxygen level. Useful on the web editor; if you're on desktop you can just set it in the Attributes tab\nif (not HasInt (oxygentank, \"fullness\")) {\n  oxygentank.fullness = 42\n}\n\n// check if the player needs an oxygen tank\n// I'm assuming a container called \"space\" which contains all space rooms\n//   so it's easy to see where the space suit is needed\n\nif (Contains (space, game.pov)) {\n  // Now check if the player can breathe\n  breathing = false\n  if (not GetBoolean (spacesuit, \"worn\")) {\n    OutputTextNoBr (\"It's a very bad idea to go into space without wearing your {object:spacesuit}! \")\n  }\n  else if (not Contains (spacesuit, oxygentank)) {\n    OutputTextNoBr (\"You need to attach an {object:oxygentank} to your {object:spacesuit}. \")\n  }\n  else if (oxygentank.fullness = 0) {\n    OutputTextNoBr (\"Your {object:oxygentank} is empty! \")\n  }\n  else {\n    // We can breathe!\n    breathing = true\n    oxygentank.fullness = oxygentank.fullness - 1\n    if (oxygentank.fullness = 0) {\n      msg (\"Your suit's air circulator rattles to a stop. Your oxygen supply is depleted.\")\n      // The amount of air in a suit \n      this.suffocating = -3\n    }\n    else if (oxygentank.fullness &lt; 6) {\n      msg (\"An alarm sounds in your helmet. Your oxygen supply is nearly depleted.\")\n    }\n  }\n}\nelse {\n  breathing = true\n}\n\n// I'd probably give the player the ability to hold their breath for a few turns\n// so a careless mistake isn't immediately fatal.\nif (breathing) {\n  this.suffocating = null\n}\nelse {\n  if (not HasInt (this, \"suffocating\")) this.suffocating = 0\n  this.suffocating = this.suffocating + 1\n  switch (this.suffocating) {\n    case (-2,0) {\n      msg (\"The last bit of air in your suit is getting more stale by the second.\")\n    }\n    case (1) {\n      msg (\"Your lungs are burning, and you know that you need to find air quickly.\")\n    }\n    case (2) {\n      msg (\"You start to feel dizzy and light headed from lack of oxygen.\")\n    }\n    case (3) {\n      msg (\"You try to take a breath but there is nothing there. You pass out and die.\")\n      finish()\n    }\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2020-07-24T09:59:49.0180042Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "36117efc-8706-45c5-a3a0-2bc779b840bd",
      "UserId": 492140,
      "Username": "The Goldfish",
      "AvatarUrl": "https://i.imgur.com/Ld3KhYOb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you for your reply mrangel! I was trying to use the example game code here https://docs.textadventures.co.uk/quest/guides/turn_based_events.html and then modify it for my purpose. I didn't have any luck with it as I have no idea what I am doing. Here is the game code I am currently using to test out all the ideas I would like to do with the suit. I have everything working except for the tank.\r\n\r\n```\r\n<!--Saved by Quest 5.8.6836.13983-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Space Suit Test\">\r\n    <gameid>da9a73f7-e789-4e28-8658-d361f2e0b6df</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2020</firstpublished>\r\n    <feature_advancedwearables />\r\n    <attr name=\"feature_advancedscripts\" type=\"boolean\">false</attr>\r\n  </game>\r\n  <object name=\"room1\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <attr name=\"print message\" type=\"int\">8</attr>\r\n    <description type=\"script\">\r\n    </description>\r\n    <enter type=\"script\">\r\n    </enter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"spacesuit\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"wearable\" />\r\n      <inherit name=\"surface\" />\r\n      <feature_wearable />\r\n      <alt type=\"stringlist\">\r\n        <value>suit</value>\r\n      </alt>\r\n      <feature_container />\r\n      <onafterremove type=\"script\">\r\n        if (not IsSwitchedOn(switch)) {\r\n          msg (\"There's no oxygen!\")\r\n          finish\r\n        }\r\n      </onafterremove>\r\n    </object>\r\n    <object name=\"tank\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"surface\" />\r\n      <take />\r\n      <attr name=\"feature_container\" type=\"boolean\">false</attr>\r\n      <listchildren />\r\n      <hidechildren />\r\n      <feature_usegive />\r\n    </object>\r\n    <exit alias=\"south\" to=\"room2\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"room2\">\r\n    <inherit name=\"editor_room\" />\r\n    <enter type=\"script\">\r\n      if (GetBoolean(spacesuit, \"worn\")) {\r\n      }\r\n      else {\r\n        msg (\"You're not wearing the suit!\")\r\n        finish\r\n      }\r\n    </enter>\r\n    <exit alias=\"north\" to=\"room1\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"room3\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"room3\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"north\" to=\"room2\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"room1\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <object name=\"switch\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"switchable\" />\r\n      <feature_switchable />\r\n      <onswitchon type=\"script\">\r\n        msg (\"Life support restored!\")\r\n      </onswitchon>\r\n      <onswitchoff type=\"script\">\r\n        msg (\"Main power grid offline\")\r\n      </onswitchoff>\r\n    </object>\r\n  </object>\r\n</asl>\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you for your reply mrangel! I was trying to use the example game code here https://docs.textadventures.co.uk/quest/guides/turn_based_events.html and then modify it for my purpose. I didn't have any luck with it as I have no idea what I am doing. Here is the game code I am currently using to test out all the ideas I would like to do with the suit. I have everything working except for the tank.</p>\n<pre><code>&lt;!--Saved by Quest 5.8.6836.13983--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Space Suit Test\"&gt;\n    &lt;gameid&gt;da9a73f7-e789-4e28-8658-d361f2e0b6df&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2020&lt;/firstpublished&gt;\n    &lt;feature_advancedwearables /&gt;\n    &lt;attr name=\"feature_advancedscripts\" type=\"boolean\"&gt;false&lt;/attr&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room1\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;attr name=\"print message\" type=\"int\"&gt;8&lt;/attr&gt;\n    &lt;description type=\"script\"&gt;\n    &lt;/description&gt;\n    &lt;enter type=\"script\"&gt;\n    &lt;/enter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"spacesuit\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"wearable\" /&gt;\n      &lt;inherit name=\"surface\" /&gt;\n      &lt;feature_wearable /&gt;\n      &lt;alt type=\"stringlist\"&gt;\n        &lt;value&gt;suit&lt;/value&gt;\n      &lt;/alt&gt;\n      &lt;feature_container /&gt;\n      &lt;onafterremove type=\"script\"&gt;\n        if (not IsSwitchedOn(switch)) {\n          msg (\"There's no oxygen!\")\n          finish\n        }\n      &lt;/onafterremove&gt;\n    &lt;/object&gt;\n    &lt;object name=\"tank\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"surface\" /&gt;\n      &lt;take /&gt;\n      &lt;attr name=\"feature_container\" type=\"boolean\"&gt;false&lt;/attr&gt;\n      &lt;listchildren /&gt;\n      &lt;hidechildren /&gt;\n      &lt;feature_usegive /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"south\" to=\"room2\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room2\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;enter type=\"script\"&gt;\n      if (GetBoolean(spacesuit, \"worn\")) {\n      }\n      else {\n        msg (\"You're not wearing the suit!\")\n        finish\n      }\n    &lt;/enter&gt;\n    &lt;exit alias=\"north\" to=\"room1\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"room3\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room3\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"north\" to=\"room2\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"room1\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;object name=\"switch\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"switchable\" /&gt;\n      &lt;feature_switchable /&gt;\n      &lt;onswitchon type=\"script\"&gt;\n        msg (\"Life support restored!\")\n      &lt;/onswitchon&gt;\n      &lt;onswitchoff type=\"script\"&gt;\n        msg (\"Main power grid offline\")\n      &lt;/onswitchoff&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2020-07-24T12:47:37.79512Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "59bd55f1-afd7-40fc-8280-adbde8877bff",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Seems a pretty straightforward way to implement this system.\r\n\r\nI'm not sure what the benefit is to using that event system. It seems to be quite a complex way of maintaining a countdown system; just adding more complexity.\r\n\r\nI'd suggest giving the tank an attribute to represent how much oxygen is in it, and make a turnscript which reduces that number by 1 every turn. I called the attribute `fullness` in the last example, but `oxygen` would probably be better.\r\n\r\nYou could have a turnscript which reduces the oxygen by 1 every turn, and kills the player when it runs out:\r\n```\r\ntank.oxygen = tank.oxygen - 1\r\nif (tank.oxygen = 0) {\r\n  msg (\"You have run out of oxygen.\")\r\n  finish\r\n}\r\n```\r\nThen you could modify the script when entering room 2 so that it checks for the tank:\r\n```\r\n      if (GetBoolean(spacesuit, \"worn\")) {\r\n        if (Contains (spacesuit, tank)) {\r\n          EnableTurnScript (oxygen)\r\n        }\r\n        else {\r\n          msg (\"Your spacesuit doesn't have an oxygen tank.\")\r\n          finish\r\n        }\r\n      }\r\n      else {\r\n        msg (\"You're not wearing the suit!\")\r\n        finish\r\n      }\r\n```\r\nAnd modify the script for removing the suit so that it stops the tank from emptying:\r\n```\r\n        if (IsSwitchedOn(switch)) {\r\n          DisableTurnScript (oxygen)\r\n        }\r\n        else {\r\n          msg (\"There's no oxygen!\")\r\n          finish\r\n        }\r\n```\r\n\r\nSo the whole script would look like:\r\n<pre><code>\r\n&lt;!--Saved by Quest 5.8.6836.13983-->\r\n&lt;asl version=\"580\">\r\n  &lt;include ref=\"English.aslx\" />\r\n  &lt;include ref=\"Core.aslx\" />\r\n  &lt;game name=\"Space Suit Test\">\r\n    &lt;gameid>da9a73f7-e789-4e28-8658-d361f2e0b6df&lt;/gameid>\r\n    &lt;version>1.0&lt;/version>\r\n    &lt;firstpublished>2020&lt;/firstpublished>\r\n    &lt;feature_advancedwearables />\r\n    &lt;attr name=\"feature_advancedscripts\" type=\"boolean\">false&lt;/attr>\r\n  &lt;/game>\r\n<b style=\"color: blue;\">  &lt;turnscript name=\"oxygen\">\r\n    &lt;script>\r\n      tank.oxygen = tank.oxygen - 1\r\n      if (tank.oxygen = 0) {\r\n        msg (\"You have run out of oxygen.\")\r\n        finish\r\n      }\r\n    &lt;/script>\r\n  &lt;/turnscript></b>\r\n  &lt;object name=\"room1\">\r\n    &lt;inherit name=\"editor_room\" />\r\n    &lt;isroom />\r\n    &lt;attr name=\"print message\" type=\"int\">8&lt;/attr>\r\n    &lt;description type=\"script\">\r\n    &lt;/description>\r\n    &lt;enter type=\"script\">\r\n    &lt;/enter>\r\n    &lt;object name=\"player\">\r\n      &lt;inherit name=\"editor_object\" />\r\n      &lt;inherit name=\"editor_player\" />\r\n    &lt;/object>\r\n    &lt;object name=\"spacesuit\">\r\n      &lt;inherit name=\"editor_object\" />\r\n      &lt;inherit name=\"wearable\" />\r\n      &lt;inherit name=\"surface\" />\r\n      &lt;feature_wearable />\r\n      &lt;alt type=\"stringlist\">\r\n        &lt;value>suit&lt;/value>\r\n      &lt;/alt>\r\n      &lt;feature_container />\r\n      &lt;onafterremove type=\"script\">\r\n<b style=\"color: green\">        if (IsSwitchedOn(switch)) {\r\n          DisableTurnScript (oxygen)\r\n        }\r\n        else {</b>\r\n          msg (\"There's no oxygen!\")\r\n          finish\r\n        }\r\n      &lt;/onafterremove>\r\n    &lt;/object>\r\n    &lt;object name=\"tank\">\r\n      &lt;inherit name=\"editor_object\" />\r\n      &lt;inherit name=\"surface\" />\r\n      &lt;take />\r\n<b style=\"color: green\">      &lt;oxygen type=\"int\">9&lt;/oxygen></b>\r\n      &lt;listchildren />\r\n      &lt;hidechildren />\r\n      &lt;feature_usegive />\r\n    &lt;/object>\r\n    &lt;exit alias=\"south\" to=\"room2\">\r\n      &lt;inherit name=\"southdirection\" />\r\n    &lt;/exit>\r\n  &lt;/object>\r\n  &lt;object name=\"room2\">\r\n    &lt;inherit name=\"editor_room\" />\r\n    &lt;enter type=\"script\">\r\n      if (GetBoolean(spacesuit, \"worn\")) {\r\n<b style=\"color: green\">        if (Contains (spacesuit, tank)) {\r\n          EnableTurnScript (oxygen)\r\n        }\r\n        else {\r\n          msg (\"Your spacesuit doesn't have an oxygen tank.\")\r\n          finish\r\n        }</b>\r\n      }\r\n      else {\r\n        msg (\"You're not wearing the suit!\")\r\n        finish\r\n      }\r\n    &lt;/enter>\r\n    &lt;exit alias=\"north\" to=\"room1\">\r\n      &lt;inherit name=\"northdirection\" />\r\n    &lt;/exit>\r\n    &lt;exit alias=\"south\" to=\"room3\">\r\n      &lt;inherit name=\"southdirection\" />\r\n    &lt;/exit>\r\n  &lt;/object>\r\n  &lt;object name=\"room3\">\r\n    &lt;inherit name=\"editor_room\" />\r\n    &lt;exit alias=\"north\" to=\"room2\">\r\n      &lt;inherit name=\"northdirection\" />\r\n    &lt;/exit>\r\n    &lt;exit alias=\"south\" to=\"room1\">\r\n      &lt;inherit name=\"southdirection\" />\r\n    &lt;/exit>\r\n    &lt;object name=\"switch\">\r\n      &lt;inherit name=\"editor_object\" />\r\n      &lt;inherit name=\"switchable\" />\r\n      &lt;feature_switchable />\r\n      &lt;onswitchon type=\"script\">\r\n        msg (\"Life support restored!\")\r\n      &lt;/onswitchon>\r\n      &lt;onswitchoff type=\"script\">\r\n        msg (\"Main power grid offline\")\r\n      &lt;/onswitchoff>\r\n    &lt;/object>\r\n  &lt;/object>\r\n&lt;/asl>\r\n</code></pre>\r\n\r\n\r\nAs this stands, the player would need to \"put tank on suit\" - but you said you wanted the \"use\" command to work as well.\r\nIn that case, you'd want to make the \"Use this on (other object)\" script for the tank something like:\r\n```\r\n  this.parent = object\r\n```\r\n\r\nIf you want, you could modify the turnscript so that the player is reminded how much oxygen remains:\r\n```\r\ntank.oxygen = tank.oxygen - 1\r\nif (tank.oxygen = 0) {\r\n  msg (\"You have run out of oxygen.\")\r\n  finish\r\n}\r\nelse {\r\n  msg (\"You have {tank.oxygen} turns of oxygen left.\")\r\n}\r\n```\r\n\r\nOr for a more realistic-sounding readout, you could make the number a percentage and reduce it by several points each turn. Maybe a random number (between 5% and 8% in this example) so it feels less mechanical:\r\n```\r\ntank.oxygen = tank.oxygen - GetRandomInt (5, 8)\r\nif (tank.oxygen <= 0) {\r\n  msg (\"You have run out of oxygen.\")\r\n  finish\r\n}\r\nelse {\r\n  msg (\"{tank.oxygen}% oxygen remaining.\")\r\n}\r\n```\r\n\r\nYou could even vary it based on which command the player used this turn:\r\n```\r\nswitch (game.pov.currentcommandpattern) {\r\n  case (look, lookat, lie, wait, inventory) {\r\n    tank.oxygen = tank.oxygen - GetRandomInt (2, 3)\r\n  }\r\n  case (jump, pull, push, use, useon) {\r\n    tank.oxygen = tank.oxygen - GetRandomInt (9, 12)\r\n  }\r\n  case (oops, undo, xyzzy, help, save) {\r\n    // nothing for these\r\n  }\r\n  default {\r\n    tank.oxygen = tank.oxygen - GetRandomInt (5, 8)    \r\n  }\r\n}\r\nif (tank.oxygen <= 0) {\r\n  msg (\"You have run out of oxygen.\")\r\n  finish\r\n}\r\nelse {\r\n  msg (\"{tank.oxygen}% oxygen remaining.\")\r\n}\r\n```\r\n\r\nIf you're using percentages, the player might find a reminder every turn to be annoying. So you could make it so that it only does it every time the reading passes a multiple of 10%, or when they're nearly out, by giving the tank a script attribute named `changedoxygen` containing something like:\r\n```\r\nif (this.oxygen < 0) {\r\n  msg (\"You have run out of oxygen.\")\r\n  finish\r\n}\r\nelse if (this.oxygen < 15 or this.oxygen/10 < oldvalue/10) {\r\n  msg (\"{tank.oxygen}% oxygen remaining.\")\r\n}\r\n```\r\nIn this case, the turnscript only needs to reduce the amount of oxygen in the tank.\r\nHoping that all makes sense.",
      "EditableFormat": "markdown",
      "HTML": "<p>Seems a pretty straightforward way to implement this system.</p>\n<p>I'm not sure what the benefit is to using that event system. It seems to be quite a complex way of maintaining a countdown system; just adding more complexity.</p>\n<p>I'd suggest giving the tank an attribute to represent how much oxygen is in it, and make a turnscript which reduces that number by 1 every turn. I called the attribute <code>fullness</code> in the last example, but <code>oxygen</code> would probably be better.</p>\n<p>You could have a turnscript which reduces the oxygen by 1 every turn, and kills the player when it runs out:</p>\n<pre><code>tank.oxygen = tank.oxygen - 1\nif (tank.oxygen = 0) {\n  msg (\"You have run out of oxygen.\")\n  finish\n}\n</code></pre>\n<p>Then you could modify the script when entering room 2 so that it checks for the tank:</p>\n<pre><code>      if (GetBoolean(spacesuit, \"worn\")) {\n        if (Contains (spacesuit, tank)) {\n          EnableTurnScript (oxygen)\n        }\n        else {\n          msg (\"Your spacesuit doesn't have an oxygen tank.\")\n          finish\n        }\n      }\n      else {\n        msg (\"You're not wearing the suit!\")\n        finish\n      }\n</code></pre>\n<p>And modify the script for removing the suit so that it stops the tank from emptying:</p>\n<pre><code>        if (IsSwitchedOn(switch)) {\n          DisableTurnScript (oxygen)\n        }\n        else {\n          msg (\"There's no oxygen!\")\n          finish\n        }\n</code></pre>\n<p>So the whole script would look like:</p>\n<pre><code>\n&lt;!--Saved by Quest 5.8.6836.13983--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Space Suit Test\"&gt;\n    &lt;gameid&gt;da9a73f7-e789-4e28-8658-d361f2e0b6df&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2020&lt;/firstpublished&gt;\n    &lt;feature_advancedwearables /&gt;\n    &lt;attr name=\"feature_advancedscripts\" type=\"boolean\"&gt;false&lt;/attr&gt;\n  &lt;/game&gt;\n<b style=\"color: blue\">  &lt;turnscript name=\"oxygen\"&gt;\n    &lt;script&gt;\n      tank.oxygen = tank.oxygen - 1\n      if (tank.oxygen = 0) {\n        msg (\"You have run out of oxygen.\")\n        finish\n      }\n    &lt;/script&gt;\n  &lt;/turnscript&gt;</b>\n  &lt;object name=\"room1\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;attr name=\"print message\" type=\"int\"&gt;8&lt;/attr&gt;\n    &lt;description type=\"script\"&gt;\n    &lt;/description&gt;\n    &lt;enter type=\"script\"&gt;\n    &lt;/enter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"spacesuit\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"wearable\" /&gt;\n      &lt;inherit name=\"surface\" /&gt;\n      &lt;feature_wearable /&gt;\n      &lt;alt type=\"stringlist\"&gt;\n        &lt;value&gt;suit&lt;/value&gt;\n      &lt;/alt&gt;\n      &lt;feature_container /&gt;\n      &lt;onafterremove type=\"script\"&gt;\n<b style=\"color: green\">        if (IsSwitchedOn(switch)) {\n          DisableTurnScript (oxygen)\n        }\n        else {</b>\n          msg (\"There's no oxygen!\")\n          finish\n        }\n      &lt;/onafterremove&gt;\n    &lt;/object&gt;\n    &lt;object name=\"tank\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"surface\" /&gt;\n      &lt;take /&gt;\n<b style=\"color: green\">      &lt;oxygen type=\"int\"&gt;9&lt;/oxygen&gt;</b>\n      &lt;listchildren /&gt;\n      &lt;hidechildren /&gt;\n      &lt;feature_usegive /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"south\" to=\"room2\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room2\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;enter type=\"script\"&gt;\n      if (GetBoolean(spacesuit, \"worn\")) {\n<b style=\"color: green\">        if (Contains (spacesuit, tank)) {\n          EnableTurnScript (oxygen)\n        }\n        else {\n          msg (\"Your spacesuit doesn't have an oxygen tank.\")\n          finish\n        }</b>\n      }\n      else {\n        msg (\"You're not wearing the suit!\")\n        finish\n      }\n    &lt;/enter&gt;\n    &lt;exit alias=\"north\" to=\"room1\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"room3\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room3\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"north\" to=\"room2\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"room1\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;object name=\"switch\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"switchable\" /&gt;\n      &lt;feature_switchable /&gt;\n      &lt;onswitchon type=\"script\"&gt;\n        msg (\"Life support restored!\")\n      &lt;/onswitchon&gt;\n      &lt;onswitchoff type=\"script\"&gt;\n        msg (\"Main power grid offline\")\n      &lt;/onswitchoff&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n<p>As this stands, the player would need to \"put tank on suit\" - but you said you wanted the \"use\" command to work as well.<br>\nIn that case, you'd want to make the \"Use this on (other object)\" script for the tank something like:</p>\n<pre><code>  this.parent = object\n</code></pre>\n<p>If you want, you could modify the turnscript so that the player is reminded how much oxygen remains:</p>\n<pre><code>tank.oxygen = tank.oxygen - 1\nif (tank.oxygen = 0) {\n  msg (\"You have run out of oxygen.\")\n  finish\n}\nelse {\n  msg (\"You have {tank.oxygen} turns of oxygen left.\")\n}\n</code></pre>\n<p>Or for a more realistic-sounding readout, you could make the number a percentage and reduce it by several points each turn. Maybe a random number (between 5% and 8% in this example) so it feels less mechanical:</p>\n<pre><code>tank.oxygen = tank.oxygen - GetRandomInt (5, 8)\nif (tank.oxygen &lt;= 0) {\n  msg (\"You have run out of oxygen.\")\n  finish\n}\nelse {\n  msg (\"{tank.oxygen}% oxygen remaining.\")\n}\n</code></pre>\n<p>You could even vary it based on which command the player used this turn:</p>\n<pre><code>switch (game.pov.currentcommandpattern) {\n  case (look, lookat, lie, wait, inventory) {\n    tank.oxygen = tank.oxygen - GetRandomInt (2, 3)\n  }\n  case (jump, pull, push, use, useon) {\n    tank.oxygen = tank.oxygen - GetRandomInt (9, 12)\n  }\n  case (oops, undo, xyzzy, help, save) {\n    // nothing for these\n  }\n  default {\n    tank.oxygen = tank.oxygen - GetRandomInt (5, 8)    \n  }\n}\nif (tank.oxygen &lt;= 0) {\n  msg (\"You have run out of oxygen.\")\n  finish\n}\nelse {\n  msg (\"{tank.oxygen}% oxygen remaining.\")\n}\n</code></pre>\n<p>If you're using percentages, the player might find a reminder every turn to be annoying. So you could make it so that it only does it every time the reading passes a multiple of 10%, or when they're nearly out, by giving the tank a script attribute named <code>changedoxygen</code> containing something like:</p>\n<pre><code>if (this.oxygen &lt; 0) {\n  msg (\"You have run out of oxygen.\")\n  finish\n}\nelse if (this.oxygen &lt; 15 or this.oxygen/10 &lt; oldvalue/10) {\n  msg (\"{tank.oxygen}% oxygen remaining.\")\n}\n</code></pre>\n<p>In this case, the turnscript only needs to reduce the amount of oxygen in the tank.<br>\nHoping that all makes sense.</p>\n\n",
      "PostDate": "2020-07-24T15:01:53.0735987Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fd726b20-f621-46d0-906b-3548dcfc7ef3",
      "UserId": 492140,
      "Username": "The Goldfish",
      "AvatarUrl": "https://i.imgur.com/Ld3KhYOb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you very much for your help mrangel! ",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you very much for your help mrangel!</p>\n\n",
      "PostDate": "2020-07-27T13:09:39.5975136Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
