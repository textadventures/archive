{
  "Topic": {
    "TopicId": "4368",
    "ForumId": "10",
    "Title": "Removing numbers from Menu",
    "LastUpdated": "2014-05-28T09:52:14+01:00",
    "ReplyCount": 2
  },
  "Posts": [
    {
      "PostId": "28923",
      "UserId": 0,
      "Username": "fogmike",
      "UserAvatar": null,
      "UserGravatar": "e0643fe31e6c5910ee8e1c089f300fdc",
      "EditableText": "Hi there, \n\nI'm making a game in TA mode that's reminiscent of a gamebook (I just needed the power behind TA), and it occurred to me that rather than using a lot of semi-horrific workarounds to get the results I want, I could just list the possible choices in any room as a menu. But those numbers before each option (1) ... , 2) .... etc) break the immersion. Is there an easy way to get rid of this? All I want to see when the menu is displayed is the hyperlinked actual text for each option.\n\nThanks!",
      "EditableFormat": "bbcode",
      "HTML": "Hi there, <br/><br/>I'm making a game in TA mode that's reminiscent of a gamebook (I just needed the power behind TA), and it occurred to me that rather than using a lot of semi-horrific workarounds to get the results I want, I could just list the possible choices in any room as a menu. But those numbers before each option (1) ... , 2) .... etc) break the immersion. Is there an easy way to get rid of this? All I want to see when the menu is displayed is the hyperlinked actual text for each option.<br/><br/>Thanks!",
      "PostDate": "2014-05-28T00:16:47+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28924",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "The easiest way to do that would be to copy and paste the following into your game, in Code View mode, just above the closing &lt;/asl&gt; tag at the end of the file. Be sure to back up your game first! If something goes wrong, it's easier to copy from a backup than to try to undo edits. Here is the code:\n\n[code:1cibc6ad]  &lt;function name=&quot;ShowMenu&quot; parameters=&quot;caption, options, allowCancel, callback&quot;&gt;\n    &lt;!&#91;CDATA&#91;\n    outputsection = StartNewOutputSection()\n    msg (caption)\n    \n    count = 0\n    game&#46;menuoptionskeys = NewStringList()\n    foreach (option, options) {\n      list add (game&#46;menuoptionskeys, option)\n      count = count + 1\n      if (TypeOf(options) = &quot;stringlist&quot;) {\n        optionText = option\n      }\n      else {\n        optionText = StringDictionaryItem(options, option)\n      }\n      msg (&quot;&lt;a class=\\&quot;cmdlink\\&quot; style=\\&quot;&quot; + GetCurrentLinkTextFormat() + &quot;\\&quot; onclick=\\&quot;ASLEvent('ShowMenuResponse','&quot; + option + &quot;')\\&quot;&gt;&quot; + optionText + &quot;&lt;/a&gt;&quot;)\n    }\n    EndOutputSection(outputsection)\n    \n    game&#46;menuoptions = options\n    game&#46;menuallowcancel = allowCancel\n    game&#46;menucallback = callback\n    game&#46;menuoutputsection = outputsection\n    &#93;&#93;&gt;\n  &lt;/function&gt;\n[/code:1cibc6ad]\nThis is a drop-in replacement for the core &quot;ShowMenu&quot; function, which has been modified to not print the numbers.\n\nA completely different route is to not use menus but rather just print out {cmd:xxx:yyy} text elements, which will give you the links to click on. The downside to that is needing to create a command for each option, but since commands can be per-room, you can at least group the commands with the rooms. I'm not pushing one over the other - just listing options. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "The easiest way to do that would be to copy and paste the following into your game, in Code View mode, just above the closing &lt;/asl&gt; tag at the end of the file. Be sure to back up your game first! If something goes wrong, it's easier to copy from a backup than to try to undo edits. Here is the code:<br/><br/><pre><code>  &lt;function name=&quot;ShowMenu&quot; parameters=&quot;caption, options, allowCancel, callback&quot;&gt;<br/>    &lt;!&#91;CDATA&#91;<br/>    outputsection = StartNewOutputSection()<br/>    msg (caption)<br/>    <br/>    count = 0<br/>    game&#46;menuoptionskeys = NewStringList()<br/>    foreach (option, options) {<br/>      list add (game&#46;menuoptionskeys, option)<br/>      count = count + 1<br/>      if (TypeOf(options) = &quot;stringlist&quot;) {<br/>        optionText = option<br/>      }<br/>      else {<br/>        optionText = StringDictionaryItem(options, option)<br/>      }<br/>      msg (&quot;&lt;a class=\\&quot;cmdlink\\&quot; style=\\&quot;&quot; + GetCurrentLinkTextFormat() + &quot;\\&quot; onclick=\\&quot;ASLEvent('ShowMenuResponse','&quot; + option + &quot;')\\&quot;&gt;&quot; + optionText + &quot;&lt;/a&gt;&quot;)<br/>    }<br/>    EndOutputSection(outputsection)<br/>    <br/>    game&#46;menuoptions = options<br/>    game&#46;menuallowcancel = allowCancel<br/>    game&#46;menucallback = callback<br/>    game&#46;menuoutputsection = outputsection<br/>    &#93;&#93;&gt;<br/>  &lt;/function&gt;<br/></code></pre><br/>This is a drop-in replacement for the core &quot;ShowMenu&quot; function, which has been modified to not print the numbers.<br/><br/>A completely different route is to not use menus but rather just print out {cmd:xxx:yyy} text elements, which will give you the links to click on. The downside to that is needing to create a command for each option, but since commands can be per-room, you can at least group the commands with the rooms. I'm not pushing one over the other - just listing options. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2014-05-28T03:58:54+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28928",
      "UserId": 0,
      "Username": "fogmike",
      "UserAvatar": null,
      "UserGravatar": "e0643fe31e6c5910ee8e1c089f300fdc",
      "EditableText": "Thank you! This is what I was hoping for, a replacement to the default menu code - not quite technically up to scratch enough to figure it out. \nAs for commands I thought about it, but menu seems like the best way to disable the other options. I know how to get a command hyperlink to disable after clicking, but wasn't sure how to disable all the commands in a choice after picking one. \nThanks again!\n\nAs a side-note, maybe a possible future feature for Quest would be to have an in-built way of (in TA mode) having some hyperlinked text that simply then runs a script, so you could make far more complex gamebook-style ideas much easier.",
      "EditableFormat": "bbcode",
      "HTML": "Thank you! This is what I was hoping for, a replacement to the default menu code - not quite technically up to scratch enough to figure it out. <br/>As for commands I thought about it, but menu seems like the best way to disable the other options. I know how to get a command hyperlink to disable after clicking, but wasn't sure how to disable all the commands in a choice after picking one. <br/>Thanks again!<br/><br/>As a side-note, maybe a possible future feature for Quest would be to have an in-built way of (in TA mode) having some hyperlinked text that simply then runs a script, so you could make far more complex gamebook-style ideas much easier.",
      "PostDate": "2014-05-28T09:52:14+01:00",
      "LastEditDate": null
    }
  ]
}
