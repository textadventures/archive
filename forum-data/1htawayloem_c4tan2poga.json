{
  "Topic": {
    "TopicId": "1htawayloem_c4tan2poga",
    "ForumId": "10",
    "Title": "The Stackables Library",
    "LastUpdated": "2020-06-01T10:12:09.2831954Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "09fa71a8-2fcb-4d7f-8a13-c496c5c2a953",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I am trying to use Pixie's Stackables Library again with the lasted Quest version. On desktop. \r\nI have never had it work in the past and am now searching the forums for the solution to why it acts as it is not bring used. It just places multiples of the same item in inventory. There are many references to this same problem on the forums, but the treads are unanswered and dead.\r\n\r\nI had given up in the past on trying to get it to work but I am determined to see it through this time.\r\n\r\n Using [Pixie's StackLib](https://github.com/ThePix/quest/blob/master/StackLib.aslx) \r\n\r\n\r\nGame Script\r\n<Details\r\n\r\n```\r\n<!--Saved by Quest 5.8.6836.13983-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <include ref=\"StackLib.aslx\" />\r\n  <dynamictemplate name=\"DefaultSpeakTo\">You get no response.</dynamictemplate>\r\n  <game name=\"Equipping System 5-13-20\">\r\n    <gameid>ac896f77-268d-4e18-912b-bf01791b129e</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2020</firstpublished>\r\n    <feature_lightdark />\r\n    <feature_limitinventory />\r\n    <feature_annotations />\r\n    <feature_advancedwearables />\r\n    <feature_advancedscripts />\r\n    <feature_devmode />\r\n    <allowlookdirections />\r\n    <start type=\"script\">\r\n    </start>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n      <attr name=\"torch_stack\" type=\"string\"></attr>\r\n      <object name=\"short_sword\">\r\n        <inherit name=\"editor_object\" />\r\n        <one_handed_weapon />\r\n        <equipped type=\"boolean\">false</equipped>\r\n        <attr name=\"can_equip_left\" type=\"boolean\">false</attr>\r\n        <attr name=\"two_handed_weapon\" type=\"boolean\">false</attr>\r\n        <one_handed_item />\r\n        <attr name=\"one_handed_defense\" type=\"boolean\">false</attr>\r\n        <attr name=\"two_handed_item\" type=\"boolean\">false</attr>\r\n        <attr name=\"two_handed_defense\" type=\"boolean\">false</attr>\r\n        <displayverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n          <value>Take</value>\r\n        </displayverbs>\r\n        <inventoryverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n          <value>Drop</value>\r\n          <value>Equip</value>\r\n        </inventoryverbs>\r\n        <attr name=\"is_weapon\" type=\"string\"></attr>\r\n        <alias>short sword</alias>\r\n        <originalalias>Short Sword</originalalias>\r\n        <listalias>Short Sword</listalias>\r\n        <take />\r\n        <usestandardverblist />\r\n        <volume type=\"int\">2</volume>\r\n        <changedequipped type=\"script\">\r\n          if (this.equipped = True) {\r\n            list add (this.inventoryverbs, \"Unequip\")\r\n            list remove (this.inventoryverbs, \"Equip\")\r\n            this.listalias = this.listalias + \" (equipped)\"\r\n          }\r\n          else {\r\n            list remove (this.inventoryverbs, \"Unequip\")\r\n            list add (this.inventoryverbs, \"Equip\")\r\n            this.listalias = this.originalalias\r\n          }\r\n        </changedequipped>\r\n        <equip type=\"script\">\r\n          ClearTurn\r\n          if (GetBoolean (this, \"equipped\")) {\r\n            msg (\"It is already equipped.\")\r\n          }\r\n          EquipOneHanded (this)\r\n        </equip>\r\n      </object>\r\n      <object name=\"long_sword\">\r\n        <inherit name=\"editor_object\" />\r\n        <two_handed_weapon />\r\n        <equipped type=\"boolean\">false</equipped>\r\n        <volume type=\"int\">3</volume>\r\n        <take />\r\n        <alias>long sword</alias>\r\n        <listalias>Long Sword</listalias>\r\n        <originalalias>Long Sword</originalalias>\r\n        <inventoryverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n          <value>Drop</value>\r\n          <value>Equip</value>\r\n        </inventoryverbs>\r\n        <usestandardverblist />\r\n        <equip type=\"script\">\r\n          ClearTurn\r\n          if (GetBoolean (this, \"equipped\")) {\r\n            msg (\"It is already equipped.\")\r\n          }\r\n          EquipTwoHanded (this)\r\n        </equip>\r\n        <changedequipped type=\"script\">\r\n          if (this.equipped = True) {\r\n            list add (this.inventoryverbs, \"Unequip\")\r\n            list remove (this.inventoryverbs, \"Equip\")\r\n            this.listalias = this.listalias + \" (equipped)\"\r\n          }\r\n          else {\r\n            list remove (this.inventoryverbs, \"Unequip\")\r\n            list add (this.inventoryverbs, \"Equip\")\r\n            this.listalias = this.originalalias\r\n          }\r\n        </changedequipped>\r\n      </object>\r\n      <object name=\"shield\">\r\n        <inherit name=\"editor_object\" />\r\n        <damage>1d5</damage>\r\n        <equipped type=\"boolean\">false</equipped>\r\n        <one_handed_defense />\r\n        <one_handed_item />\r\n        <inventoryverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n          <value>Drop</value>\r\n          <value>Equip</value>\r\n        </inventoryverbs>\r\n        <is_shield />\r\n        <listalias>Square Wooden Shield</listalias>\r\n        <originalalias>Shield</originalalias>\r\n        <take />\r\n        <usestandardverblist />\r\n        <volume type=\"int\">3</volume>\r\n        <alias>square wooden shield</alias>\r\n        <is_defense />\r\n        <equip type=\"script\">\r\n          ClearTurn\r\n          if (this.equipped = True) {\r\n            msg (\"It is already equipped.\")\r\n          }\r\n          EquipOneHandedShield (this)\r\n        </equip>\r\n        <changedequipped type=\"script\">\r\n          if (this.equipped = True) {\r\n            list add (this.inventoryverbs, \"Unequip\")\r\n            list remove (this.inventoryverbs, \"Equip\")\r\n            this.listalias = this.listalias + \" (equipped)\"\r\n          }\r\n          else {\r\n            list remove (this.inventoryverbs, \"Unequip\")\r\n            list add (this.inventoryverbs, \"Equip\")\r\n            this.listalias = this.originalalias\r\n          }\r\n        </changedequipped>\r\n      </object>\r\n      <object name=\"fist\">\r\n        <inherit name=\"editor_object\" />\r\n        <alias>fist</alias>\r\n        <visible type=\"boolean\">false</visible>\r\n        <equipped />\r\n        <attr name=\"is_one_handed_weapon\" type=\"string\"></attr>\r\n        <scenery />\r\n        <drop type=\"boolean\">false</drop>\r\n      </object>\r\n      <object name=\"shield1\">\r\n        <inherit name=\"editor_object\" />\r\n        <damage>1d5</damage>\r\n        <equipped type=\"boolean\">false</equipped>\r\n        <one_handed_defense />\r\n        <one_handed_item />\r\n        <inventoryverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n          <value>Drop</value>\r\n          <value>Equip</value>\r\n        </inventoryverbs>\r\n        <is_shield />\r\n        <listalias>Round Wooden Shield </listalias>\r\n        <originalalias>Shield</originalalias>\r\n        <take />\r\n        <usestandardverblist />\r\n        <volume type=\"int\">3</volume>\r\n        <alias>round wooden shield</alias>\r\n        <is_defense />\r\n        <equip type=\"script\">\r\n          ClearTurn\r\n          if (this.equipped = True) {\r\n            msg (\"It is already equipped.\")\r\n          }\r\n          EquipOneHandedShield (this)\r\n        </equip>\r\n        <changedequipped type=\"script\">\r\n          if (this.equipped = True) {\r\n            list add (this.inventoryverbs, \"Unequip\")\r\n            list remove (this.inventoryverbs, \"Equip\")\r\n            this.listalias = this.listalias + \" (equipped)\"\r\n          }\r\n          else {\r\n            list remove (this.inventoryverbs, \"Unequip\")\r\n            list add (this.inventoryverbs, \"Equip\")\r\n            this.listalias = this.originalalias\r\n          }\r\n        </changedequipped>\r\n      </object>\r\n    </object>\r\n    <object name=\"torch\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"childstack_object\" />\r\n      <equipped type=\"boolean\">false</equipped>\r\n      <take />\r\n      <attr name=\"is_torch\" type=\"string\"></attr>\r\n      <alias>torch</alias>\r\n      <listalias>Torch</listalias>\r\n      <originalalias>Torch</originalalias>\r\n      <inventoryverbs type=\"stringlist\">\r\n        <value>Look at</value>\r\n        <value>Drop</value>\r\n        <value>Equip</value>\r\n      </inventoryverbs>\r\n      <attr name=\"feature_switchable\" type=\"boolean\">false</attr>\r\n      <feature_lightdark />\r\n      <lightsource type=\"boolean\">false</lightsource>\r\n      <lightstrength>strong</lightstrength>\r\n      <volume type=\"int\">1</volume>\r\n      <life type=\"int\">50</life>\r\n      <price type=\"int\">1</price>\r\n      <state>brightly</state>\r\n      <usestandardverblist />\r\n      <stackparent type=\"object\">torch stack</stackparent>\r\n      <look type=\"script\"><![CDATA[\r\n        msg (\"A thick wooden stick. The end is wrapped with some kind of material soaked in animal fat.\")\r\n        if (this.lightsource = True) {\r\n          msg (\"<em>This one is burning \" + this.state + \" and will last \" + this.life + \" turns.\")\r\n        }\r\n        else {\r\n          msg (\"<em>This one is not lit.\")\r\n        }\r\n      ]]></look>\r\n      <changedlightsource type=\"script\">\r\n        if (this.lightsource = True) {\r\n          list add (this.inventoryverbs, \"Snuff\")\r\n          list remove (this.inventoryverbs, \"Light\")\r\n          this.listalias = this.listalias + \" (lit)\"\r\n          this.burned = True\r\n          this.price = 0\r\n          msg (\"You light the torch with your flint and steel, and hold it out in front of you.\")\r\n        }\r\n        else {\r\n          list remove (this.inventoryverbs, \"Snuff\")\r\n          list add (this.inventoryverbs, \"Light\")\r\n          this.listalias = Replace(this.listalias, \" (lit)\", \"\")\r\n          msg (\"You snuff out your torch.\")\r\n        }\r\n      </changedlightsource>\r\n      <everyturn type=\"script\">\r\n        if (this.equipped = True) {\r\n          torch.life = torch.life - 1\r\n          if (torch.life = 25) {\r\n            this.state = \"moderately\"\r\n            torch.listalias = torch.alias + \" (dimming)\"\r\n            if (torch.parent = player.parent) {\r\n              msg (\"{color:Red:Your torch is dimming and will burn out in \" + this.life + \" turns!}\")\r\n            }\r\n          }\r\n          if (torch.life = 15) {\r\n            this.state = \"dimly\"\r\n            torch.listalias = torch.alias + \" (dim)\"\r\n            if (torch.parent = player.parent or torch.parent = player) {\r\n              msg (\"{color:Red:Your torch will burn out in \" + this.life + \" turns!}\")\r\n            }\r\n          }\r\n          if (torch.life = 0) {\r\n            msg (\"Your torch flickers and burns away to nothing.\")\r\n            destroy (this)\r\n          }\r\n        }\r\n      </everyturn>\r\n      <changedequipped type=\"script\">\r\n        if (this.equipped = True) {\r\n          list add (this.inventoryverbs, \"Unequip\")\r\n          list remove (this.inventoryverbs, \"Equip\")\r\n          list add (this.inventoryverbs, \"Light\")\r\n          this.listalias = this.listalias + \" (equipped)\"\r\n          msg (\"You equip your torch.\")\r\n        }\r\n        else {\r\n          list add (this.inventoryverbs, \"Equip\")\r\n          list remove (this.inventoryverbs, \"Unequip\")\r\n          list remove (this.inventoryverbs, \"Light\")\r\n          this.listalias = this.originalalias\r\n          this.lightsource = False\r\n          msg (\"You snuff out your torch and put it away..\")\r\n        }\r\n      </changedequipped>\r\n      <lightit type=\"script\">\r\n        if (this.equipped = false) {\r\n          do (this, \"equip\")\r\n          this.lightsource = True\r\n        }\r\n        else if (this.lightsource = True) {\r\n          msg (\"It is already lit.\")\r\n        }\r\n        else {\r\n          this.lightsource = True\r\n        }\r\n      </lightit>\r\n      <snuffit type=\"script\">\r\n        if (this.lightsource = False) {\r\n          msg (\"It is already out.\")\r\n        }\r\n        else {\r\n          this.lightsource = False\r\n        }\r\n      </snuffit>\r\n      <equipit type=\"script\">\r\n        ClearTurn\r\n        if (this.equipped = True) {\r\n          msg (\"It is already equipped.\")\r\n        }\r\n        else {\r\n          EquipTorch (this)\r\n        }\r\n      </equipit>\r\n      <unequipit type=\"script\">\r\n        ClearTurn\r\n        if (this.equipped = False) {\r\n          msg (\"It is not equipped.\")\r\n        }\r\n        else if (this.lightsource = True) {\r\n          msg (\"You snuff out your torch and put it away.\")\r\n        }\r\n        else {\r\n          msg (\"You put away your torch.\")\r\n        }\r\n        if (player.left_hand = this) {\r\n          player.left_hand = null\r\n        }\r\n        if (player.right_hand = this) {\r\n          player.right_hand = null\r\n        }\r\n        this.equipped = False\r\n      </unequipit>\r\n      <ontake type=\"script\">\r\n        ClearTurn\r\n      </ontake>\r\n    </object>\r\n    <object name=\"torch1\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"childstack_object\" />\r\n      <equipped type=\"boolean\">false</equipped>\r\n      <take />\r\n      <attr name=\"is_torch\" type=\"string\"></attr>\r\n      <alias>torch</alias>\r\n      <listalias>Torch</listalias>\r\n      <originalalias>Torch</originalalias>\r\n      <inventoryverbs type=\"stringlist\">\r\n        <value>Look at</value>\r\n        <value>Drop</value>\r\n        <value>Equip</value>\r\n      </inventoryverbs>\r\n      <attr name=\"feature_switchable\" type=\"boolean\">false</attr>\r\n      <feature_lightdark />\r\n      <lightsource type=\"boolean\">false</lightsource>\r\n      <lightstrength>strong</lightstrength>\r\n      <volume type=\"int\">1</volume>\r\n      <life type=\"int\">50</life>\r\n      <price type=\"int\">1</price>\r\n      <state>brightly</state>\r\n      <usestandardverblist />\r\n      <look type=\"script\"><![CDATA[\r\n        msg (\"A thick wooden stick. The end is wrapped with some kind of material soaked in animal fat.\")\r\n        if (this.lightsource = True) {\r\n          msg (\"<em>This one is burning \" + this.state + \".\")\r\n        }\r\n        else {\r\n          msg (\"<em>This one is not lit.\")\r\n        }\r\n      ]]></look>\r\n      <changedlightsource type=\"script\">\r\n        if (GetBoolean(this, lightsource)) {\r\n          list add (this.inventoryverbs, \"Snuff\")\r\n          list remove (this.inventoryverbs, \"Light\")\r\n          this.listalias = this.listalias + \" (lit)\"\r\n          this.burned = True\r\n          this.price = 0\r\n          msg (\"You light the torch with your flint and steel, and hold it out in front of you.\")\r\n        }\r\n        else {\r\n          list remove (this.inventoryverbs, \"Snuff\")\r\n          list add (this.inventoryverbs, \"Light\")\r\n          this.listalias = Replace(this.listalias, \" (lit)\", \"\")\r\n          msg (\"You snuff out your torch.\")\r\n        }\r\n      </changedlightsource>\r\n      <everyturn type=\"script\">\r\n        if (this.equipped = True) {\r\n          torch.life = torch.life - 1\r\n          if (torch.life = 25) {\r\n            this.state = \"moderately\"\r\n            torch.listalias = torch.alias + \" (dimming)\"\r\n            if (torch.parent = player.parent) {\r\n              msg (\"{color:Red:Your torch is dimming!}\")\r\n            }\r\n          }\r\n          if (torch.life = 15) {\r\n            this.state = \"dimly\"\r\n            torch.listalias = torch.alias + \" (dim)\"\r\n            if (torch.parent = player.parent or torch.parent = player) {\r\n              msg (\"{color:Red:Your torch is about to burn out.}\")\r\n            }\r\n          }\r\n          if (torch.life = 0) {\r\n            msg (\"Your torch flickers and burns away to nothing.\")\r\n            destroy (this)\r\n          }\r\n        }\r\n      </everyturn>\r\n      <changedequipped type=\"script\">\r\n        if (this.equipped = True) {\r\n          list add (this.inventoryverbs, \"Unequip\")\r\n          list remove (this.inventoryverbs, \"Equip\")\r\n          list add (this.inventoryverbs, \"Light\")\r\n          this.listalias = this.listalias + \" (equipped)\"\r\n          msg (\"You equip your torch.\")\r\n        }\r\n        else {\r\n          list add (this.inventoryverbs, \"Equip\")\r\n          list remove (this.inventoryverbs, \"Unequip\")\r\n          list remove (this.inventoryverbs, \"Light\")\r\n          this.listalias = this.originalalias\r\n          this.lightsource = False\r\n          msg (\"You snuff out your torch and put it away..\")\r\n        }\r\n      </changedequipped>\r\n      <light type=\"script\">\r\n        if (this.equipped = false) {\r\n          do (this, \"equip\")\r\n          this.lightsource = True\r\n        }\r\n        else if (this.lightsource = True) {\r\n          msg (\"It is already lit.\")\r\n        }\r\n        else {\r\n          this.lightsource = True\r\n        }\r\n      </light>\r\n      <snuff type=\"script\">\r\n        if (this.lightsource = False) {\r\n          msg (\"It is already out.\")\r\n        }\r\n        else {\r\n          this.lightsource = False\r\n        }\r\n      </snuff>\r\n      <equip type=\"script\">\r\n        ClearTurn\r\n        if (this.equipped = True) {\r\n          msg (\"It is already equipped.\")\r\n        }\r\n        EquipTorch (this)\r\n      </equip>\r\n      <unequip type=\"script\">\r\n        ClearTurn\r\n        if (this.equipped = False) {\r\n          msg (\"It is not equipped.\")\r\n        }\r\n        else if (this.lightsource = True) {\r\n          msg (\"You snuff out your torch and put it away.\")\r\n        }\r\n        else {\r\n          msg (\"You put away your torch.\")\r\n        }\r\n        if (player.left_hand = this) {\r\n          player.left_hand = null\r\n        }\r\n        if (player.right_hand = this) {\r\n          player.right_hand = null\r\n        }\r\n        this.equipped = False\r\n      </unequip>\r\n      <ontake type=\"script\">\r\n        ClearTurn\r\n      </ontake>\r\n      <stackparent type=\"object\">torch stack</stackparent>\r\n    </object>\r\n  </object>\r\n  <turnscript name=\"torchturnscript\">\r\n    <script>\r\n      torch.life = torch.life - 1\r\n      if (torch.life = 10) {\r\n        torch.listalias = torch.alias + \" (dimming)\"\r\n        if (torch.parent = player.parent) {\r\n          msg (\"{color:Red:Your torch is dimming!}\")\r\n        }\r\n      }\r\n      if (torch.life = 5) {\r\n        torch.listalias = torch.alias + \" (dim)\"\r\n        if (torch.parent = player.parent or torch.parent = player) {\r\n          msg (\"{color:Red:The torch is about to burn out.}\")\r\n        }\r\n      }\r\n      if (torch.life = 0) {\r\n        torch.listalias = torch.alias + \" (burned out)\"\r\n        torch.lightsource = false\r\n        torch.price = 0\r\n        list remove (torch.inventoryverbs, \"snuff\")\r\n        torch.lightsource = false\r\n        DisableTurnScript (torchturnscript)\r\n        torch.cannotswitchon = \"You cannot light the torch, it has burned up.\"\r\n        if (torch.parent = player.parent or torch.parent = player) {\r\n          msg (\"Your torch flickers and dies.\")\r\n        }\r\n        if (room.dark = true) {\r\n          msg (It is too dark to see!)\r\n        }\r\n      }\r\n    </script>\r\n  </turnscript>\r\n  <verb>\r\n    <property>light</property>\r\n    <pattern>light</pattern>\r\n    <defaultexpression>\"You can't light \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n  <turnscript name=\"objects\">\r\n    <enabled />\r\n    <script>\r\n      foreach (object, AllObjects()) {\r\n        if (GetBoolean(object, \"equipped\")) {\r\n          if (HasScript (object, \"everyturn\")) {\r\n            do (object, \"everyturn\")\r\n          }\r\n        }\r\n      }\r\n    </script>\r\n  </turnscript>\r\n  <verb>\r\n    <property>snuff</property>\r\n    <pattern>snuff</pattern>\r\n    <defaultexpression>\"You can't snuff \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n  <verb>\r\n    <property>equip</property>\r\n    <pattern>equip</pattern>\r\n    <defaultexpression>\"You can't equip \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n  <verb>\r\n    <property>unequip</property>\r\n    <pattern>unequip</pattern>\r\n    <defaultexpression>\"You can't unequip \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n  <object name=\"holding\">\r\n    <inherit name=\"editor_room\" />\r\n  </object>\r\n  <object name=\"Stack Containers\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"torch stack\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"homo_stack_container\" />\r\n      <displayverbs type=\"stringlist\" />\r\n      <inventoryverbs type=\"stringlist\">\r\n        <value>Drop</value>\r\n      </inventoryverbs>\r\n      <attr name=\"how_many\" type=\"int\">1</attr>\r\n      <alias>torches</alias>\r\n      <listalias>Torches</listalias>\r\n      <take type=\"boolean\">false</take>\r\n      <attr name=\"not_all\" type=\"boolean\">false</attr>\r\n      <light type=\"script\">\r\n        DoStackVerb (this, \"light\")\r\n      </light>\r\n      <snuff type=\"script\">\r\n        DoStackVerb (this, \"snuff\")\r\n      </snuff>\r\n      <equip type=\"script\">\r\n        DoStackVerb (this, \"equip\")\r\n      </equip>\r\n    </object>\r\n  </object>\r\n  <function name=\"EquipOneHanded\" parameters=\"object\"><![CDATA[\r\n    if (player.right_hand = null) {\r\n      msg (\"You equip your \" + GetDisplayAlias(object) + \" in your right hand.\")\r\n    }\r\n    else if (player.right_hand <> null) {\r\n      msg (\"You put away your \" + GetDisplayAlias(player.right_hand) + \" and equip your \" + GetDisplayAlias(object) + \" in your right hand.\")\r\n    }\r\n    object.equipped = True\r\n    player.right_hand = object\r\n    player.right_hand.equipped = True\r\n    player.right_hand_category = \"holds_one_handed\"\r\n    if (player.left_hand_category = \"holds_two_handed\") {\r\n      player.left_hand_category = null\r\n      player.left_hand.equipped = False\r\n      player.left_hand = null\r\n    }\r\n  ]]></function>\r\n  <function name=\"ClearTurn\">\r\n    ClearScreen\r\n    ShowRoomDescription\r\n  </function>\r\n  <function name=\"EquipTwoHanded\" parameters=\"object\"><![CDATA[\r\n    if (player.right_hand = null and player.left_hand = null) {\r\n      msg (\"You equip your \" + GetDisplayAlias(object) + \", gripping it in both hands.\")\r\n    }\r\n    else if (player.right_hand.category = \"holds_two_handed\") {\r\n      msg (\"You put away your \" + GetDisplayAlias(player.right_hand) + \" and equip your \" + GetDisplayAlias(object) + \", gripping it in both hand.\")\r\n      player.right_hand.equipped = False\r\n      player.left_hand.equipped = False\r\n    }\r\n    else if (player.right_hand <> null and player.left_hand = null) {\r\n      msg (\"You put away your \" + GetDisplayAlias(player.right_hand) + \" and equip your \" + GetDisplayAlias(object) + \", gripping it in both hand.\")\r\n      player.right_hand.equipped = False\r\n      player.right_hand_category = \"holds_two_handed\"\r\n    }\r\n    else if (player.right_hand = null and player.left_hand <> null) {\r\n      msg (\"You put away your \" + GetDisplayAlias(player.left_hand) + \" and equip your \" + GetDisplayAlias(object) + \", gripping it in both hand.\")\r\n      player.left_hand.equipped = False\r\n      player.right_hand_category = \"holds_two_handed\"\r\n    }\r\n    else if (player.right_hand <> player.left_hand) {\r\n      if (player.right_hand <> null and player.left_hand <> null) {\r\n        msg (\"You put away your \" + GetDisplayAlias(player.left_hand) + \" and \" + GetDisplayAlias(player.right_hand) + \" and equip your \" + GetDisplayAlias(object) + \", gripping it in both hand.\")\r\n        player.left_hand.equipped = False\r\n        player.right_hand.equipped = False\r\n        player.right_hand_category = \"holds_two_handed\"\r\n      }\r\n    }\r\n    player.right_hand = object\r\n    player.left_hand = object\r\n    object.equipped = True\r\n  ]]></function>\r\n  <function name=\"EquipOneHandedShield\" parameters=\"object\">\r\n    if (player.left_hand = null) {\r\n      player.left_hand = object\r\n    }\r\n    else if (player.right_hand = null) {\r\n      player.right_hand = object\r\n      if (player.left_hand.is_defense = True) {\r\n        msg (\"{once:{color:silver:The hint system has detected you have equipped a defensive item in both hands. This is acceptable, but please realise you you can only use the item in your right hand for offense, IE, attacking (bashing) with a shield.}}\")\r\n      }\r\n    }\r\n    object.equipped = True\r\n  </function>\r\n  <function name=\"EquipTorch\" parameters=\"object\">\r\n    if (player.left_hand = null) {\r\n      player.left_hand = object\r\n    }\r\n    else if (player.right_hand = null) {\r\n      player.right_hand = object\r\n    }\r\n    else {\r\n      msg (\"Your hands are full.\")\r\n      options = NewStringDictionary()\r\n      dictionary add (options, \"left_hand\", GetDisplayAlias (player.left_hand))\r\n      dictionary add (options, \"right_hand\", GetDisplayAlias (player.right_hand))\r\n      ShowMenu (\"Which object would you like to unequip?\", options, true) {\r\n        set (player, result, equip.object)\r\n        object.equipped = True\r\n      }\r\n    }\r\n    object.equipped = True\r\n  </function>\r\n  <function name=\"UnequipTorch\" parameters=\"object\">\r\n    if (GetBoolean (object, \"lightsource\")) {\r\n      msg (\"You snuff out your torch and put it away.\")\r\n    }\r\n    else {\r\n      msg (\"You put away your torch.\")\r\n    }\r\n    if (player.left_hand = object) {\r\n      player.left_hand = null\r\n    }\r\n    else if (player.right_hand = object) {\r\n      player.right_hand = null\r\n    }\r\n    object.equipped = False\r\n  </function>\r\n</asl>\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I am trying to use Pixie's Stackables Library again with the lasted Quest version. On desktop.<br>\nI have never had it work in the past and am now searching the forums for the solution to why it acts as it is not bring used. It just places multiples of the same item in inventory. There are many references to this same problem on the forums, but the treads are unanswered and dead.</p>\n<p>I had given up in the past on trying to get it to work but I am determined to see it through this time.</p>\n<p>Using <a href=\"https://github.com/ThePix/quest/blob/master/StackLib.aslx\">Pixie's StackLib</a></p>\n<p>Game Script</p>\n<details><code>&lt;!--Saved by Quest 5.8.6836.13983--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;include ref=\"StackLib.aslx\" /&gt;\n  &lt;dynamictemplate name=\"DefaultSpeakTo\"&gt;You get no response.&lt;/dynamictemplate&gt;\n  &lt;game name=\"Equipping System 5-13-20\"&gt;\n    &lt;gameid&gt;ac896f77-268d-4e18-912b-bf01791b129e&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2020&lt;/firstpublished&gt;\n    &lt;feature_lightdark /&gt;\n    &lt;feature_limitinventory /&gt;\n    &lt;feature_annotations /&gt;\n    &lt;feature_advancedwearables /&gt;\n    &lt;feature_advancedscripts /&gt;\n    &lt;feature_devmode /&gt;\n    &lt;allowlookdirections /&gt;\n    &lt;start type=\"script\"&gt;\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n      &lt;attr name=\"torch_stack\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;object name=\"short_sword\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;one_handed_weapon /&gt;\n        &lt;equipped type=\"boolean\"&gt;false&lt;/equipped&gt;\n        &lt;attr name=\"can_equip_left\" type=\"boolean\"&gt;false&lt;/attr&gt;\n        &lt;attr name=\"two_handed_weapon\" type=\"boolean\"&gt;false&lt;/attr&gt;\n        &lt;one_handed_item /&gt;\n        &lt;attr name=\"one_handed_defense\" type=\"boolean\"&gt;false&lt;/attr&gt;\n        &lt;attr name=\"two_handed_item\" type=\"boolean\"&gt;false&lt;/attr&gt;\n        &lt;attr name=\"two_handed_defense\" type=\"boolean\"&gt;false&lt;/attr&gt;\n        &lt;displayverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n          &lt;value&gt;Take&lt;/value&gt;\n        &lt;/displayverbs&gt;\n        &lt;inventoryverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n          &lt;value&gt;Drop&lt;/value&gt;\n          &lt;value&gt;Equip&lt;/value&gt;\n        &lt;/inventoryverbs&gt;\n        &lt;attr name=\"is_weapon\" type=\"string\"&gt;&lt;/attr&gt;\n        &lt;alias&gt;short sword&lt;/alias&gt;\n        &lt;originalalias&gt;Short Sword&lt;/originalalias&gt;\n        &lt;listalias&gt;Short Sword&lt;/listalias&gt;\n        &lt;take /&gt;\n        &lt;usestandardverblist /&gt;\n        &lt;volume type=\"int\"&gt;2&lt;/volume&gt;\n        &lt;changedequipped type=\"script\"&gt;\n          if (this.equipped = True) {\n            list add (this.inventoryverbs, \"Unequip\")\n            list remove (this.inventoryverbs, \"Equip\")\n            this.listalias = this.listalias + \" (equipped)\"\n          }\n          else {\n            list remove (this.inventoryverbs, \"Unequip\")\n            list add (this.inventoryverbs, \"Equip\")\n            this.listalias = this.originalalias\n          }\n        &lt;/changedequipped&gt;\n        &lt;equip type=\"script\"&gt;\n          ClearTurn\n          if (GetBoolean (this, \"equipped\")) {\n            msg (\"It is already equipped.\")\n          }\n          EquipOneHanded (this)\n        &lt;/equip&gt;\n      &lt;/object&gt;\n      &lt;object name=\"long_sword\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;two_handed_weapon /&gt;\n        &lt;equipped type=\"boolean\"&gt;false&lt;/equipped&gt;\n        &lt;volume type=\"int\"&gt;3&lt;/volume&gt;\n        &lt;take /&gt;\n        &lt;alias&gt;long sword&lt;/alias&gt;\n        &lt;listalias&gt;Long Sword&lt;/listalias&gt;\n        &lt;originalalias&gt;Long Sword&lt;/originalalias&gt;\n        &lt;inventoryverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n          &lt;value&gt;Drop&lt;/value&gt;\n          &lt;value&gt;Equip&lt;/value&gt;\n        &lt;/inventoryverbs&gt;\n        &lt;usestandardverblist /&gt;\n        &lt;equip type=\"script\"&gt;\n          ClearTurn\n          if (GetBoolean (this, \"equipped\")) {\n            msg (\"It is already equipped.\")\n          }\n          EquipTwoHanded (this)\n        &lt;/equip&gt;\n        &lt;changedequipped type=\"script\"&gt;\n          if (this.equipped = True) {\n            list add (this.inventoryverbs, \"Unequip\")\n            list remove (this.inventoryverbs, \"Equip\")\n            this.listalias = this.listalias + \" (equipped)\"\n          }\n          else {\n            list remove (this.inventoryverbs, \"Unequip\")\n            list add (this.inventoryverbs, \"Equip\")\n            this.listalias = this.originalalias\n          }\n        &lt;/changedequipped&gt;\n      &lt;/object&gt;\n      &lt;object name=\"shield\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;damage&gt;1d5&lt;/damage&gt;\n        &lt;equipped type=\"boolean\"&gt;false&lt;/equipped&gt;\n        &lt;one_handed_defense /&gt;\n        &lt;one_handed_item /&gt;\n        &lt;inventoryverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n          &lt;value&gt;Drop&lt;/value&gt;\n          &lt;value&gt;Equip&lt;/value&gt;\n        &lt;/inventoryverbs&gt;\n        &lt;is_shield /&gt;\n        &lt;listalias&gt;Square Wooden Shield&lt;/listalias&gt;\n        &lt;originalalias&gt;Shield&lt;/originalalias&gt;\n        &lt;take /&gt;\n        &lt;usestandardverblist /&gt;\n        &lt;volume type=\"int\"&gt;3&lt;/volume&gt;\n        &lt;alias&gt;square wooden shield&lt;/alias&gt;\n        &lt;is_defense /&gt;\n        &lt;equip type=\"script\"&gt;\n          ClearTurn\n          if (this.equipped = True) {\n            msg (\"It is already equipped.\")\n          }\n          EquipOneHandedShield (this)\n        &lt;/equip&gt;\n        &lt;changedequipped type=\"script\"&gt;\n          if (this.equipped = True) {\n            list add (this.inventoryverbs, \"Unequip\")\n            list remove (this.inventoryverbs, \"Equip\")\n            this.listalias = this.listalias + \" (equipped)\"\n          }\n          else {\n            list remove (this.inventoryverbs, \"Unequip\")\n            list add (this.inventoryverbs, \"Equip\")\n            this.listalias = this.originalalias\n          }\n        &lt;/changedequipped&gt;\n      &lt;/object&gt;\n      &lt;object name=\"fist\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;alias&gt;fist&lt;/alias&gt;\n        &lt;visible type=\"boolean\"&gt;false&lt;/visible&gt;\n        &lt;equipped /&gt;\n        &lt;attr name=\"is_one_handed_weapon\" type=\"string\"&gt;&lt;/attr&gt;\n        &lt;scenery /&gt;\n        &lt;drop type=\"boolean\"&gt;false&lt;/drop&gt;\n      &lt;/object&gt;\n      &lt;object name=\"shield1\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;damage&gt;1d5&lt;/damage&gt;\n        &lt;equipped type=\"boolean\"&gt;false&lt;/equipped&gt;\n        &lt;one_handed_defense /&gt;\n        &lt;one_handed_item /&gt;\n        &lt;inventoryverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n          &lt;value&gt;Drop&lt;/value&gt;\n          &lt;value&gt;Equip&lt;/value&gt;\n        &lt;/inventoryverbs&gt;\n        &lt;is_shield /&gt;\n        &lt;listalias&gt;Round Wooden Shield &lt;/listalias&gt;\n        &lt;originalalias&gt;Shield&lt;/originalalias&gt;\n        &lt;take /&gt;\n        &lt;usestandardverblist /&gt;\n        &lt;volume type=\"int\"&gt;3&lt;/volume&gt;\n        &lt;alias&gt;round wooden shield&lt;/alias&gt;\n        &lt;is_defense /&gt;\n        &lt;equip type=\"script\"&gt;\n          ClearTurn\n          if (this.equipped = True) {\n            msg (\"It is already equipped.\")\n          }\n          EquipOneHandedShield (this)\n        &lt;/equip&gt;\n        &lt;changedequipped type=\"script\"&gt;\n          if (this.equipped = True) {\n            list add (this.inventoryverbs, \"Unequip\")\n            list remove (this.inventoryverbs, \"Equip\")\n            this.listalias = this.listalias + \" (equipped)\"\n          }\n          else {\n            list remove (this.inventoryverbs, \"Unequip\")\n            list add (this.inventoryverbs, \"Equip\")\n            this.listalias = this.originalalias\n          }\n        &lt;/changedequipped&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n    &lt;object name=\"torch\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"childstack_object\" /&gt;\n      &lt;equipped type=\"boolean\"&gt;false&lt;/equipped&gt;\n      &lt;take /&gt;\n      &lt;attr name=\"is_torch\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;alias&gt;torch&lt;/alias&gt;\n      &lt;listalias&gt;Torch&lt;/listalias&gt;\n      &lt;originalalias&gt;Torch&lt;/originalalias&gt;\n      &lt;inventoryverbs type=\"stringlist\"&gt;\n        &lt;value&gt;Look at&lt;/value&gt;\n        &lt;value&gt;Drop&lt;/value&gt;\n        &lt;value&gt;Equip&lt;/value&gt;\n      &lt;/inventoryverbs&gt;\n      &lt;attr name=\"feature_switchable\" type=\"boolean\"&gt;false&lt;/attr&gt;\n      &lt;feature_lightdark /&gt;\n      &lt;lightsource type=\"boolean\"&gt;false&lt;/lightsource&gt;\n      &lt;lightstrength&gt;strong&lt;/lightstrength&gt;\n      &lt;volume type=\"int\"&gt;1&lt;/volume&gt;\n      &lt;life type=\"int\"&gt;50&lt;/life&gt;\n      &lt;price type=\"int\"&gt;1&lt;/price&gt;\n      &lt;state&gt;brightly&lt;/state&gt;\n      &lt;usestandardverblist /&gt;\n      &lt;stackparent type=\"object\"&gt;torch stack&lt;/stackparent&gt;\n      &lt;look type=\"script\"&gt;&lt;![CDATA[\n        msg (\"A thick wooden stick. The end is wrapped with some kind of material soaked in animal fat.\")\n        if (this.lightsource = True) {\n          msg (\"&lt;em&gt;This one is burning \" + this.state + \" and will last \" + this.life + \" turns.\")\n        }\n        else {\n          msg (\"&lt;em&gt;This one is not lit.\")\n        }\n      ]]&gt;&lt;/look&gt;\n      &lt;changedlightsource type=\"script\"&gt;\n        if (this.lightsource = True) {\n          list add (this.inventoryverbs, \"Snuff\")\n          list remove (this.inventoryverbs, \"Light\")\n          this.listalias = this.listalias + \" (lit)\"\n          this.burned = True\n          this.price = 0\n          msg (\"You light the torch with your flint and steel, and hold it out in front of you.\")\n        }\n        else {\n          list remove (this.inventoryverbs, \"Snuff\")\n          list add (this.inventoryverbs, \"Light\")\n          this.listalias = Replace(this.listalias, \" (lit)\", \"\")\n          msg (\"You snuff out your torch.\")\n        }\n      &lt;/changedlightsource&gt;\n      &lt;everyturn type=\"script\"&gt;\n        if (this.equipped = True) {\n          torch.life = torch.life - 1\n          if (torch.life = 25) {\n            this.state = \"moderately\"\n            torch.listalias = torch.alias + \" (dimming)\"\n            if (torch.parent = player.parent) {\n              msg (\"{color:Red:Your torch is dimming and will burn out in \" + this.life + \" turns!}\")\n            }\n          }\n          if (torch.life = 15) {\n            this.state = \"dimly\"\n            torch.listalias = torch.alias + \" (dim)\"\n            if (torch.parent = player.parent or torch.parent = player) {\n              msg (\"{color:Red:Your torch will burn out in \" + this.life + \" turns!}\")\n            }\n          }\n          if (torch.life = 0) {\n            msg (\"Your torch flickers and burns away to nothing.\")\n            destroy (this)\n          }\n        }\n      &lt;/everyturn&gt;\n      &lt;changedequipped type=\"script\"&gt;\n        if (this.equipped = True) {\n          list add (this.inventoryverbs, \"Unequip\")\n          list remove (this.inventoryverbs, \"Equip\")\n          list add (this.inventoryverbs, \"Light\")\n          this.listalias = this.listalias + \" (equipped)\"\n          msg (\"You equip your torch.\")\n        }\n        else {\n          list add (this.inventoryverbs, \"Equip\")\n          list remove (this.inventoryverbs, \"Unequip\")\n          list remove (this.inventoryverbs, \"Light\")\n          this.listalias = this.originalalias\n          this.lightsource = False\n          msg (\"You snuff out your torch and put it away..\")\n        }\n      &lt;/changedequipped&gt;\n      &lt;lightit type=\"script\"&gt;\n        if (this.equipped = false) {\n          do (this, \"equip\")\n          this.lightsource = True\n        }\n        else if (this.lightsource = True) {\n          msg (\"It is already lit.\")\n        }\n        else {\n          this.lightsource = True\n        }\n      &lt;/lightit&gt;\n      &lt;snuffit type=\"script\"&gt;\n        if (this.lightsource = False) {\n          msg (\"It is already out.\")\n        }\n        else {\n          this.lightsource = False\n        }\n      &lt;/snuffit&gt;\n      &lt;equipit type=\"script\"&gt;\n        ClearTurn\n        if (this.equipped = True) {\n          msg (\"It is already equipped.\")\n        }\n        else {\n          EquipTorch (this)\n        }\n      &lt;/equipit&gt;\n      &lt;unequipit type=\"script\"&gt;\n        ClearTurn\n        if (this.equipped = False) {\n          msg (\"It is not equipped.\")\n        }\n        else if (this.lightsource = True) {\n          msg (\"You snuff out your torch and put it away.\")\n        }\n        else {\n          msg (\"You put away your torch.\")\n        }\n        if (player.left_hand = this) {\n          player.left_hand = null\n        }\n        if (player.right_hand = this) {\n          player.right_hand = null\n        }\n        this.equipped = False\n      &lt;/unequipit&gt;\n      &lt;ontake type=\"script\"&gt;\n        ClearTurn\n      &lt;/ontake&gt;\n    &lt;/object&gt;\n    &lt;object name=\"torch1\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"childstack_object\" /&gt;\n      &lt;equipped type=\"boolean\"&gt;false&lt;/equipped&gt;\n      &lt;take /&gt;\n      &lt;attr name=\"is_torch\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;alias&gt;torch&lt;/alias&gt;\n      &lt;listalias&gt;Torch&lt;/listalias&gt;\n      &lt;originalalias&gt;Torch&lt;/originalalias&gt;\n      &lt;inventoryverbs type=\"stringlist\"&gt;\n        &lt;value&gt;Look at&lt;/value&gt;\n        &lt;value&gt;Drop&lt;/value&gt;\n        &lt;value&gt;Equip&lt;/value&gt;\n      &lt;/inventoryverbs&gt;\n      &lt;attr name=\"feature_switchable\" type=\"boolean\"&gt;false&lt;/attr&gt;\n      &lt;feature_lightdark /&gt;\n      &lt;lightsource type=\"boolean\"&gt;false&lt;/lightsource&gt;\n      &lt;lightstrength&gt;strong&lt;/lightstrength&gt;\n      &lt;volume type=\"int\"&gt;1&lt;/volume&gt;\n      &lt;life type=\"int\"&gt;50&lt;/life&gt;\n      &lt;price type=\"int\"&gt;1&lt;/price&gt;\n      &lt;state&gt;brightly&lt;/state&gt;\n      &lt;usestandardverblist /&gt;\n      &lt;look type=\"script\"&gt;&lt;![CDATA[\n        msg (\"A thick wooden stick. The end is wrapped with some kind of material soaked in animal fat.\")\n        if (this.lightsource = True) {\n          msg (\"&lt;em&gt;This one is burning \" + this.state + \".\")\n        }\n        else {\n          msg (\"&lt;em&gt;This one is not lit.\")\n        }\n      ]]&gt;&lt;/look&gt;\n      &lt;changedlightsource type=\"script\"&gt;\n        if (GetBoolean(this, lightsource)) {\n          list add (this.inventoryverbs, \"Snuff\")\n          list remove (this.inventoryverbs, \"Light\")\n          this.listalias = this.listalias + \" (lit)\"\n          this.burned = True\n          this.price = 0\n          msg (\"You light the torch with your flint and steel, and hold it out in front of you.\")\n        }\n        else {\n          list remove (this.inventoryverbs, \"Snuff\")\n          list add (this.inventoryverbs, \"Light\")\n          this.listalias = Replace(this.listalias, \" (lit)\", \"\")\n          msg (\"You snuff out your torch.\")\n        }\n      &lt;/changedlightsource&gt;\n      &lt;everyturn type=\"script\"&gt;\n        if (this.equipped = True) {\n          torch.life = torch.life - 1\n          if (torch.life = 25) {\n            this.state = \"moderately\"\n            torch.listalias = torch.alias + \" (dimming)\"\n            if (torch.parent = player.parent) {\n              msg (\"{color:Red:Your torch is dimming!}\")\n            }\n          }\n          if (torch.life = 15) {\n            this.state = \"dimly\"\n            torch.listalias = torch.alias + \" (dim)\"\n            if (torch.parent = player.parent or torch.parent = player) {\n              msg (\"{color:Red:Your torch is about to burn out.}\")\n            }\n          }\n          if (torch.life = 0) {\n            msg (\"Your torch flickers and burns away to nothing.\")\n            destroy (this)\n          }\n        }\n      &lt;/everyturn&gt;\n      &lt;changedequipped type=\"script\"&gt;\n        if (this.equipped = True) {\n          list add (this.inventoryverbs, \"Unequip\")\n          list remove (this.inventoryverbs, \"Equip\")\n          list add (this.inventoryverbs, \"Light\")\n          this.listalias = this.listalias + \" (equipped)\"\n          msg (\"You equip your torch.\")\n        }\n        else {\n          list add (this.inventoryverbs, \"Equip\")\n          list remove (this.inventoryverbs, \"Unequip\")\n          list remove (this.inventoryverbs, \"Light\")\n          this.listalias = this.originalalias\n          this.lightsource = False\n          msg (\"You snuff out your torch and put it away..\")\n        }\n      &lt;/changedequipped&gt;\n      &lt;light type=\"script\"&gt;\n        if (this.equipped = false) {\n          do (this, \"equip\")\n          this.lightsource = True\n        }\n        else if (this.lightsource = True) {\n          msg (\"It is already lit.\")\n        }\n        else {\n          this.lightsource = True\n        }\n      &lt;/light&gt;\n      &lt;snuff type=\"script\"&gt;\n        if (this.lightsource = False) {\n          msg (\"It is already out.\")\n        }\n        else {\n          this.lightsource = False\n        }\n      &lt;/snuff&gt;\n      &lt;equip type=\"script\"&gt;\n        ClearTurn\n        if (this.equipped = True) {\n          msg (\"It is already equipped.\")\n        }\n        EquipTorch (this)\n      &lt;/equip&gt;\n      &lt;unequip type=\"script\"&gt;\n        ClearTurn\n        if (this.equipped = False) {\n          msg (\"It is not equipped.\")\n        }\n        else if (this.lightsource = True) {\n          msg (\"You snuff out your torch and put it away.\")\n        }\n        else {\n          msg (\"You put away your torch.\")\n        }\n        if (player.left_hand = this) {\n          player.left_hand = null\n        }\n        if (player.right_hand = this) {\n          player.right_hand = null\n        }\n        this.equipped = False\n      &lt;/unequip&gt;\n      &lt;ontake type=\"script\"&gt;\n        ClearTurn\n      &lt;/ontake&gt;\n      &lt;stackparent type=\"object\"&gt;torch stack&lt;/stackparent&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;turnscript name=\"torchturnscript\"&gt;\n    &lt;script&gt;\n      torch.life = torch.life - 1\n      if (torch.life = 10) {\n        torch.listalias = torch.alias + \" (dimming)\"\n        if (torch.parent = player.parent) {\n          msg (\"{color:Red:Your torch is dimming!}\")\n        }\n      }\n      if (torch.life = 5) {\n        torch.listalias = torch.alias + \" (dim)\"\n        if (torch.parent = player.parent or torch.parent = player) {\n          msg (\"{color:Red:The torch is about to burn out.}\")\n        }\n      }\n      if (torch.life = 0) {\n        torch.listalias = torch.alias + \" (burned out)\"\n        torch.lightsource = false\n        torch.price = 0\n        list remove (torch.inventoryverbs, \"snuff\")\n        torch.lightsource = false\n        DisableTurnScript (torchturnscript)\n        torch.cannotswitchon = \"You cannot light the torch, it has burned up.\"\n        if (torch.parent = player.parent or torch.parent = player) {\n          msg (\"Your torch flickers and dies.\")\n        }\n        if (room.dark = true) {\n          msg (It is too dark to see!)\n        }\n      }\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;verb&gt;\n    &lt;property&gt;light&lt;/property&gt;\n    &lt;pattern&gt;light&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't light \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;turnscript name=\"objects\"&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      foreach (object, AllObjects()) {\n        if (GetBoolean(object, \"equipped\")) {\n          if (HasScript (object, \"everyturn\")) {\n            do (object, \"everyturn\")\n          }\n        }\n      }\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;verb&gt;\n    &lt;property&gt;snuff&lt;/property&gt;\n    &lt;pattern&gt;snuff&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't snuff \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;verb&gt;\n    &lt;property&gt;equip&lt;/property&gt;\n    &lt;pattern&gt;equip&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't equip \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;verb&gt;\n    &lt;property&gt;unequip&lt;/property&gt;\n    &lt;pattern&gt;unequip&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't unequip \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;object name=\"holding\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Stack Containers\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"torch stack\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"homo_stack_container\" /&gt;\n      &lt;displayverbs type=\"stringlist\" /&gt;\n      &lt;inventoryverbs type=\"stringlist\"&gt;\n        &lt;value&gt;Drop&lt;/value&gt;\n      &lt;/inventoryverbs&gt;\n      &lt;attr name=\"how_many\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;alias&gt;torches&lt;/alias&gt;\n      &lt;listalias&gt;Torches&lt;/listalias&gt;\n      &lt;take type=\"boolean\"&gt;false&lt;/take&gt;\n      &lt;attr name=\"not_all\" type=\"boolean\"&gt;false&lt;/attr&gt;\n      &lt;light type=\"script\"&gt;\n        DoStackVerb (this, \"light\")\n      &lt;/light&gt;\n      &lt;snuff type=\"script\"&gt;\n        DoStackVerb (this, \"snuff\")\n      &lt;/snuff&gt;\n      &lt;equip type=\"script\"&gt;\n        DoStackVerb (this, \"equip\")\n      &lt;/equip&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;function name=\"EquipOneHanded\" parameters=\"object\"&gt;&lt;![CDATA[\n    if (player.right_hand = null) {\n      msg (\"You equip your \" + GetDisplayAlias(object) + \" in your right hand.\")\n    }\n    else if (player.right_hand &lt;&gt; null) {\n      msg (\"You put away your \" + GetDisplayAlias(player.right_hand) + \" and equip your \" + GetDisplayAlias(object) + \" in your right hand.\")\n    }\n    object.equipped = True\n    player.right_hand = object\n    player.right_hand.equipped = True\n    player.right_hand_category = \"holds_one_handed\"\n    if (player.left_hand_category = \"holds_two_handed\") {\n      player.left_hand_category = null\n      player.left_hand.equipped = False\n      player.left_hand = null\n    }\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"ClearTurn\"&gt;\n    ClearScreen\n    ShowRoomDescription\n  &lt;/function&gt;\n  &lt;function name=\"EquipTwoHanded\" parameters=\"object\"&gt;&lt;![CDATA[\n    if (player.right_hand = null and player.left_hand = null) {\n      msg (\"You equip your \" + GetDisplayAlias(object) + \", gripping it in both hands.\")\n    }\n    else if (player.right_hand.category = \"holds_two_handed\") {\n      msg (\"You put away your \" + GetDisplayAlias(player.right_hand) + \" and equip your \" + GetDisplayAlias(object) + \", gripping it in both hand.\")\n      player.right_hand.equipped = False\n      player.left_hand.equipped = False\n    }\n    else if (player.right_hand &lt;&gt; null and player.left_hand = null) {\n      msg (\"You put away your \" + GetDisplayAlias(player.right_hand) + \" and equip your \" + GetDisplayAlias(object) + \", gripping it in both hand.\")\n      player.right_hand.equipped = False\n      player.right_hand_category = \"holds_two_handed\"\n    }\n    else if (player.right_hand = null and player.left_hand &lt;&gt; null) {\n      msg (\"You put away your \" + GetDisplayAlias(player.left_hand) + \" and equip your \" + GetDisplayAlias(object) + \", gripping it in both hand.\")\n      player.left_hand.equipped = False\n      player.right_hand_category = \"holds_two_handed\"\n    }\n    else if (player.right_hand &lt;&gt; player.left_hand) {\n      if (player.right_hand &lt;&gt; null and player.left_hand &lt;&gt; null) {\n        msg (\"You put away your \" + GetDisplayAlias(player.left_hand) + \" and \" + GetDisplayAlias(player.right_hand) + \" and equip your \" + GetDisplayAlias(object) + \", gripping it in both hand.\")\n        player.left_hand.equipped = False\n        player.right_hand.equipped = False\n        player.right_hand_category = \"holds_two_handed\"\n      }\n    }\n    player.right_hand = object\n    player.left_hand = object\n    object.equipped = True\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"EquipOneHandedShield\" parameters=\"object\"&gt;\n    if (player.left_hand = null) {\n      player.left_hand = object\n    }\n    else if (player.right_hand = null) {\n      player.right_hand = object\n      if (player.left_hand.is_defense = True) {\n        msg (\"{once:{color:silver:The hint system has detected you have equipped a defensive item in both hands. This is acceptable, but please realise you you can only use the item in your right hand for offense, IE, attacking (bashing) with a shield.}}\")\n      }\n    }\n    object.equipped = True\n  &lt;/function&gt;\n  &lt;function name=\"EquipTorch\" parameters=\"object\"&gt;\n    if (player.left_hand = null) {\n      player.left_hand = object\n    }\n    else if (player.right_hand = null) {\n      player.right_hand = object\n    }\n    else {\n      msg (\"Your hands are full.\")\n      options = NewStringDictionary()\n      dictionary add (options, \"left_hand\", GetDisplayAlias (player.left_hand))\n      dictionary add (options, \"right_hand\", GetDisplayAlias (player.right_hand))\n      ShowMenu (\"Which object would you like to unequip?\", options, true) {\n        set (player, result, equip.object)\n        object.equipped = True\n      }\n    }\n    object.equipped = True\n  &lt;/function&gt;\n  &lt;function name=\"UnequipTorch\" parameters=\"object\"&gt;\n    if (GetBoolean (object, \"lightsource\")) {\n      msg (\"You snuff out your torch and put it away.\")\n    }\n    else {\n      msg (\"You put away your torch.\")\n    }\n    if (player.left_hand = object) {\n      player.left_hand = null\n    }\n    else if (player.right_hand = object) {\n      player.right_hand = null\n    }\n    object.equipped = False\n  &lt;/function&gt;\n&lt;/asl&gt;\n</code>\n\n</details>",
      "PostDate": "2020-06-01T10:12:09.2831954Z",
      "LastEditDate": "2020-06-02T00:39:01.7069498Z",
      "link": null
    },
    {
      "PostId": "45defe0f-26ed-415a-a858-e2d47b75170b",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Has the Stackables Library ever worked for anybody? ",
      "EditableFormat": "markdown",
      "HTML": "<p>Has the Stackables Library ever worked for anybody?</p>\n\n",
      "PostDate": "2020-06-02T00:35:54.5133615Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9f1bce78-57de-4765-8b59-d1d3295f8d4c",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well, anyway, if you are looking for a way to stack items in your inventory, onimike has a Youtube video showing his way to do it.\r\n\r\n[Use this link](https://www.youtube.com/watch?v=HD1Gj88KeQE&index=3&list=PLVDq5KtDCqnZzUqLZ8v-3L7icnvyV6n_d)\r\n\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Well, anyway, if you are looking for a way to stack items in your inventory, onimike has a Youtube video showing his way to do it.</p>\n<p><a href=\"https://www.youtube.com/watch?v=HD1Gj88KeQE&amp;index=3&amp;list=PLVDq5KtDCqnZzUqLZ8v-3L7icnvyV6n_d\">Use this link</a></p>\n\n",
      "PostDate": "2020-06-02T22:39:44.9027675Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
