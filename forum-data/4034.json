{
  "Topic": {
    "TopicId": "4034",
    "ForumId": "10",
    "Title": "Cloning Randomly Generated Objects and Their Scripts",
    "LastUpdated": "2013-12-05T16:22:05+00:00",
    "ReplyCount": 10
  },
  "Posts": [
    {
      "PostId": "27006",
      "UserId": 0,
      "Username": "TFG",
      "UserAvatar": null,
      "UserGravatar": "47f14351c01cdcbb4dbebfaba94fb8d9",
      "EditableText": "In my game, I am using switch scripts to randomly generate attributes of objects. For example, I have one switch script that would randomly pick a name from a list and assign that name for an object's alias. However, because I want an indeterminate number of these objects, since they will be NPCs in the game I am working on, I want to be able to create more and more of these objects without having to copy and paste the endless walls of scripts randomly generating their attributes.\n\nHow can I go about doing this? I thought I would use cloning, but I have no idea how I could make it so the scripts would also apply to the new cloned objects. My goal is to be able to have the scripts used once and be able to call upon them easily when creating or cloning new objects using commands, rather than having to tediously copy and paste all the scripts for each individual object. It's such a repetitive task of manually going into each script and changing each and every possible randomly generated attribute and assigning it to the new object that I'd rather just have an easy script to do it all for me.\n\nThanks.",
      "EditableFormat": "bbcode",
      "HTML": "In my game, I am using switch scripts to randomly generate attributes of objects. For example, I have one switch script that would randomly pick a name from a list and assign that name for an object's alias. However, because I want an indeterminate number of these objects, since they will be NPCs in the game I am working on, I want to be able to create more and more of these objects without having to copy and paste the endless walls of scripts randomly generating their attributes.<br/><br/>How can I go about doing this? I thought I would use cloning, but I have no idea how I could make it so the scripts would also apply to the new cloned objects. My goal is to be able to have the scripts used once and be able to call upon them easily when creating or cloning new objects using commands, rather than having to tediously copy and paste all the scripts for each individual object. It's such a repetitive task of manually going into each script and changing each and every possible randomly generated attribute and assigning it to the new object that I'd rather just have an easy script to do it all for me.<br/><br/>Thanks.",
      "PostDate": "2013-12-05T04:48:18+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27007",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "Could you explain more what you mean by &quot;how I could make it so the scripts would also apply to the new cloned objects&quot;? Do you mean you want the new objects to inherit behavior? Or just that you want your setup scripts to handle everything about just the one-time creation of the objects?\n\nBelow is an example of an object that creates other objects, and gives them random descriptions.\n\nIn play, \n\n[quote:2xzdnz6v]\nYou are in a room.\nYou can see a foobazatron.\n\n&gt; press foobazatron\nYou are in a room.\nYou can see a foobazatron and a glop.\n\n&gt; look at glop\nIt is argent\n\n&gt; press foobazatron\nYou are in a room.\nYou can see a foobazatron, a glop and a bar.\n\n&gt; look at bar\nIt is green\n\n&gt; press foobazatron\nYou are in a room.\nYou can see a foobazatron, a glop, a bar and a biff.\n\n&gt; look at biff\nIt is magenta\n[/quote:2xzdnz6v]\n\n(it doesn't make objects of a particular name if it already exists, since I didn't handle duplicates). \n\nThe code:\n\n[code:2xzdnz6v]\n &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n    &lt;object name=&quot;foobazatron&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;press type=&quot;script&quot;&gt;\n        name = ChooseOne(this&#46;names)\n        create (name)\n        set (GetObject(name), &quot;look&quot;, &quot;It is &quot; + ChooseOne(this&#46;colors))\n        MoveObjectHere (GetObject(name))\n        ShowRoomDescription\n      &lt;/press&gt;\n      &lt;names type=&quot;stringlist&quot;&gt;\n        &lt;value&gt;foo&lt;/value&gt;\n        &lt;value&gt;baz&lt;/value&gt;\n        &lt;value&gt;bar&lt;/value&gt;\n        &lt;value&gt;biff&lt;/value&gt;\n        &lt;value&gt;buffy&lt;/value&gt;\n        &lt;value&gt;glop&lt;/value&gt;\n        &lt;value&gt;zwert&lt;/value&gt;\n      &lt;/names&gt;\n      &lt;colors type=&quot;stringlist&quot;&gt;\n        &lt;value&gt;red&lt;/value&gt;\n        &lt;value&gt;green&lt;/value&gt;\n        &lt;value&gt;blue&lt;/value&gt;\n        &lt;value&gt;magenta&lt;/value&gt;\n        &lt;value&gt;cyan&lt;/value&gt;\n        &lt;value&gt;fuschia&lt;/value&gt;\n        &lt;value&gt;argent&lt;/value&gt;\n      &lt;/colors&gt;\n      &lt;look&gt;It's the foobazatron&lt;/look&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;verb&gt;\n    &lt;property&gt;press&lt;/property&gt;\n    &lt;pattern&gt;press&lt;/pattern&gt;\n    &lt;defaultexpression&gt;&quot;You can't press &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;function name=&quot;ChooseOne&quot; parameters=&quot;ss&quot; type=&quot;string&quot;&gt;\n    return (StringListItem(ss, GetRandomInt(0, ListCount(ss) - 1)))\n  &lt;/function&gt;\n[/code:2xzdnz6v]",
      "EditableFormat": "bbcode",
      "HTML": "Could you explain more what you mean by &quot;how I could make it so the scripts would also apply to the new cloned objects&quot;? Do you mean you want the new objects to inherit behavior? Or just that you want your setup scripts to handle everything about just the one-time creation of the objects?<br/><br/>Below is an example of an object that creates other objects, and gives them random descriptions.<br/><br/>In play, <br/><br/><blockquote><p><br/>You are in a room.<br/>You can see a foobazatron.<br/><br/>&gt; press foobazatron<br/>You are in a room.<br/>You can see a foobazatron and a glop.<br/><br/>&gt; look at glop<br/>It is argent<br/><br/>&gt; press foobazatron<br/>You are in a room.<br/>You can see a foobazatron, a glop and a bar.<br/><br/>&gt; look at bar<br/>It is green<br/><br/>&gt; press foobazatron<br/>You are in a room.<br/>You can see a foobazatron, a glop, a bar and a biff.<br/><br/>&gt; look at biff<br/>It is magenta<br/></p></blockquote><br/><br/>(it doesn't make objects of a particular name if it already exists, since I didn't handle duplicates). <br/><br/>The code:<br/><br/><pre><code><br/> &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>    &lt;object name=&quot;foobazatron&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;press type=&quot;script&quot;&gt;<br/>        name = ChooseOne(this&#46;names)<br/>        create (name)<br/>        set (GetObject(name), &quot;look&quot;, &quot;It is &quot; + ChooseOne(this&#46;colors))<br/>        MoveObjectHere (GetObject(name))<br/>        ShowRoomDescription<br/>      &lt;/press&gt;<br/>      &lt;names type=&quot;stringlist&quot;&gt;<br/>        &lt;value&gt;foo&lt;/value&gt;<br/>        &lt;value&gt;baz&lt;/value&gt;<br/>        &lt;value&gt;bar&lt;/value&gt;<br/>        &lt;value&gt;biff&lt;/value&gt;<br/>        &lt;value&gt;buffy&lt;/value&gt;<br/>        &lt;value&gt;glop&lt;/value&gt;<br/>        &lt;value&gt;zwert&lt;/value&gt;<br/>      &lt;/names&gt;<br/>      &lt;colors type=&quot;stringlist&quot;&gt;<br/>        &lt;value&gt;red&lt;/value&gt;<br/>        &lt;value&gt;green&lt;/value&gt;<br/>        &lt;value&gt;blue&lt;/value&gt;<br/>        &lt;value&gt;magenta&lt;/value&gt;<br/>        &lt;value&gt;cyan&lt;/value&gt;<br/>        &lt;value&gt;fuschia&lt;/value&gt;<br/>        &lt;value&gt;argent&lt;/value&gt;<br/>      &lt;/colors&gt;<br/>      &lt;look&gt;It's the foobazatron&lt;/look&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;verb&gt;<br/>    &lt;property&gt;press&lt;/property&gt;<br/>    &lt;pattern&gt;press&lt;/pattern&gt;<br/>    &lt;defaultexpression&gt;&quot;You can't press &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;<br/>  &lt;/verb&gt;<br/>  &lt;function name=&quot;ChooseOne&quot; parameters=&quot;ss&quot; type=&quot;string&quot;&gt;<br/>    return (StringListItem(ss, GetRandomInt(0, ListCount(ss) - 1)))<br/>  &lt;/function&gt;<br/></code></pre>",
      "PostDate": "2013-12-05T06:50:12+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27008",
      "UserId": 0,
      "Username": "TFG",
      "UserAvatar": null,
      "UserGravatar": "47f14351c01cdcbb4dbebfaba94fb8d9",
      "EditableText": "Alright, I will try to elaborate on what I am trying to do, since it is really the only way a newbie like myself can explain it. I have a bunch of switch scripts that are getting random integers, each integer representing a set attribute script. For example, one of the switch scripts is for naming the aliases of the objects I am using as NPCs, so one integer sets the alias to Tom, another to Gary, and etcetera. Instead of having to copy and paste each of these switch scripts and changing the object names the set attribute scripts refer to, I want to make it so I can somehow use this one group of switch scripts to encompass a bunch of different objects. Preferably, I want to be able to clone or create new objects while in the game and have these switch scripts automatically run for the new objects. Rather than copying and pasting these gigantic walls of switch scripts and editing them to cater to each individual object, I would like to be able to create or clone an indeterminate amount of objects and have the scripts run automatically for them.\n\nThe idea is so I can populate in-game towns with NPCs with randomly generated names, physical characteristics, and personality traits.\n\nI don't know if it is possible, but it would be so much easier to be able to do this than making hundreds of objects and copying and pasting these really long, detailed switch scripts hundreds of times just so I can have a multitude of NPCs with unique character traits in my game.\n\nIf it can't be done using the cloning/creating objects idea I had, I am open to any other way I can accomplish my goal. And thanks for bearing with me on this, I know how much of a noob I am.  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->",
      "EditableFormat": "bbcode",
      "HTML": "Alright, I will try to elaborate on what I am trying to do, since it is really the only way a newbie like myself can explain it. I have a bunch of switch scripts that are getting random integers, each integer representing a set attribute script. For example, one of the switch scripts is for naming the aliases of the objects I am using as NPCs, so one integer sets the alias to Tom, another to Gary, and etcetera. Instead of having to copy and paste each of these switch scripts and changing the object names the set attribute scripts refer to, I want to make it so I can somehow use this one group of switch scripts to encompass a bunch of different objects. Preferably, I want to be able to clone or create new objects while in the game and have these switch scripts automatically run for the new objects. Rather than copying and pasting these gigantic walls of switch scripts and editing them to cater to each individual object, I would like to be able to create or clone an indeterminate amount of objects and have the scripts run automatically for them.<br/><br/>The idea is so I can populate in-game towns with NPCs with randomly generated names, physical characteristics, and personality traits.<br/><br/>I don't know if it is possible, but it would be so much easier to be able to do this than making hundreds of objects and copying and pasting these really long, detailed switch scripts hundreds of times just so I can have a multitude of NPCs with unique character traits in my game.<br/><br/>If it can't be done using the cloning/creating objects idea I had, I am open to any other way I can accomplish my goal. And thanks for bearing with me on this, I know how much of a noob I am.  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->",
      "PostDate": "2013-12-05T07:26:06+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27009",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "OK, I think I understand what you want to do. Look at the example I posted above, and imagine that foobazatron object doesn't just create objects with a random description, but creates however many NPCs with whatever attributes you want. You would have just one object when you start the game (the foobazatron). Would that work?",
      "EditableFormat": "bbcode",
      "HTML": "OK, I think I understand what you want to do. Look at the example I posted above, and imagine that foobazatron object doesn't just create objects with a random description, but creates however many NPCs with whatever attributes you want. You would have just one object when you start the game (the foobazatron). Would that work?",
      "PostDate": "2013-12-05T07:37:04+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27010",
      "UserId": 0,
      "Username": "TFG",
      "UserAvatar": null,
      "UserGravatar": "47f14351c01cdcbb4dbebfaba94fb8d9",
      "EditableText": "Yes, I believe so. One object that can create an indeterminate amount of other objects that all have randomly generated attributes? Definitely what I am looking for.\n\nBut I want to make sure I understand how your scripts are working, so I can of course better utilize them. You are creating objects and then randomly selecting attributes, like the name and color, of the objects from string lists, yeah? In your code, I notice it says '(this.colors)' and '(this.names)'. What is the 'this' it is referring to, the newly created object? If so, how are you using it so it knows that 'this' is the newly created object and not something else?\n\nSorry, I am sort of new to this. And I should probably admit that I insert scripts mostly using the interface, since I knew next to nothing about any of this until I downloaded this program way back when and have absolutely no background in coding.",
      "EditableFormat": "bbcode",
      "HTML": "Yes, I believe so. One object that can create an indeterminate amount of other objects that all have randomly generated attributes? Definitely what I am looking for.<br/><br/>But I want to make sure I understand how your scripts are working, so I can of course better utilize them. You are creating objects and then randomly selecting attributes, like the name and color, of the objects from string lists, yeah? In your code, I notice it says '(this.colors)' and '(this.names)'. What is the 'this' it is referring to, the newly created object? If so, how are you using it so it knows that 'this' is the newly created object and not something else?<br/><br/>Sorry, I am sort of new to this. And I should probably admit that I insert scripts mostly using the interface, since I knew next to nothing about any of this until I downloaded this program way back when and have absolutely no background in coding.",
      "PostDate": "2013-12-05T07:56:13+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27011",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "I would suggest a slight modification to george's code, where you clone an existing object, rather than creating a new one.\n\nHave an original NPC set up in a room the player cannot get to. You can set attributes and types and scripts on this that are the same for all NPCs (and during development, go to the room, and check the NPC works properly, has suitable display verbs, cannot be picked up, etc.\n\nThe script on the foobazatron might then look like this (if the original has the name originalobject):\n\n     &lt;press type=&quot;script&quot;&gt;\n        newobject = Clone (originalobject)\n        newobject.look = &quot;It is &quot; + ChooseOne(this.colors))\n        newobject.name = ChooseOne(this.names)\n        newobject.parent = this.parent\n        ShowRoomDescription\n      &lt;/press&gt;\n\nThe object is cloned, then the indivuidual attributes set.\n\n&quot;this&quot; refers to the object that owns the script. In the example above, it refers to the foobazatron, because the script is an attribute of the foobazatron.",
      "EditableFormat": "bbcode",
      "HTML": "I would suggest a slight modification to george's code, where you clone an existing object, rather than creating a new one.<br/><br/>Have an original NPC set up in a room the player cannot get to. You can set attributes and types and scripts on this that are the same for all NPCs (and during development, go to the room, and check the NPC works properly, has suitable display verbs, cannot be picked up, etc.<br/><br/>The script on the foobazatron might then look like this (if the original has the name originalobject):<br/><br/>     &lt;press type=&quot;script&quot;&gt;<br/>        newobject = Clone (originalobject)<br/>        newobject.look = &quot;It is &quot; + ChooseOne(this.colors))<br/>        newobject.name = ChooseOne(this.names)<br/>        newobject.parent = this.parent<br/>        ShowRoomDescription<br/>      &lt;/press&gt;<br/><br/>The object is cloned, then the indivuidual attributes set.<br/><br/>&quot;this&quot; refers to the object that owns the script. In the example above, it refers to the foobazatron, because the script is an attribute of the foobazatron.",
      "PostDate": "2013-12-05T08:05:38+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27013",
      "UserId": 0,
      "Username": "TFG",
      "UserAvatar": null,
      "UserGravatar": "47f14351c01cdcbb4dbebfaba94fb8d9",
      "EditableText": "Thank you George and The Pixie! Your combined code is exactly what I needed. However, it was giving me some errors, so I switched 'name' to 'alias'.\n\n[code:3s54zdyq]&lt;press type=&quot;script&quot;&gt;\n        newobject = Clone (originalobject)\n        newobject&#46;look = &quot;It is &quot; + ChooseOne(this&#46;colors)\n        newobject&#46;alias = ChooseOne(this&#46;names)\n        newobject&#46;parent = this&#46;parent\n        ShowRoomDescription\n      &lt;/press&gt;[/code:3s54zdyq]\n\nUnlocking one door leads to another locked door, though. What if I wanted to make scripts that affected these new clones? Or refer to any of the clones for that matter? Since cloning makes the name of each clone like originalobject1, originalobject2, and so on and so forth, would I have to just write the scripts for each object leading from one to however many I expect there to be? Or is there something like the 'this' thing that I can use to refer to the cloned objects without having to do that?\n\nIf that made no sense, imagine if I wanted to simply hyperlink one of the cloned objects in the text processor. Normally, I'd just put {object:example}, but is there any way to do that for a clone without assuming that example1 to whatever indeterminate number was present? I mean, what if I create so many clones that it exceeds the premeditated amount of clones that I wanted, how would I be able to do that for them? Certainly there must be a way.\n\nAnd yeah, I do realize that I have no idea what I'm talking about. I apologize for that.  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->",
      "EditableFormat": "bbcode",
      "HTML": "Thank you George and The Pixie! Your combined code is exactly what I needed. However, it was giving me some errors, so I switched 'name' to 'alias'.<br/><br/><pre><code>&lt;press type=&quot;script&quot;&gt;<br/>        newobject = Clone (originalobject)<br/>        newobject&#46;look = &quot;It is &quot; + ChooseOne(this&#46;colors)<br/>        newobject&#46;alias = ChooseOne(this&#46;names)<br/>        newobject&#46;parent = this&#46;parent<br/>        ShowRoomDescription<br/>      &lt;/press&gt;</code></pre><br/><br/>Unlocking one door leads to another locked door, though. What if I wanted to make scripts that affected these new clones? Or refer to any of the clones for that matter? Since cloning makes the name of each clone like originalobject1, originalobject2, and so on and so forth, would I have to just write the scripts for each object leading from one to however many I expect there to be? Or is there something like the 'this' thing that I can use to refer to the cloned objects without having to do that?<br/><br/>If that made no sense, imagine if I wanted to simply hyperlink one of the cloned objects in the text processor. Normally, I'd just put {object:example}, but is there any way to do that for a clone without assuming that example1 to whatever indeterminate number was present? I mean, what if I create so many clones that it exceeds the premeditated amount of clones that I wanted, how would I be able to do that for them? Certainly there must be a way.<br/><br/>And yeah, I do realize that I have no idea what I'm talking about. I apologize for that.  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->",
      "PostDate": "2013-12-05T08:45:01+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27014",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;TFG&quot;:1415fdjm]Thank you George and The Pixie! Your combined code is exactly what I needed. However, it was giving me some errors, so I switched 'name' to 'alias'.[/quote:1415fdjm]\nOops, my bad!\n[quote:1415fdjm]What if I wanted to make scripts that affected these new clones?[/quote:1415fdjm]\nIt depends. If you have a script on your original object, then should get copied to the clone, and work just fine (but use &quot;this&quot; in the script to refer to the object).\n\nOtherwise, you would probably be best searching for it by alias.\n\n[code:1415fdjm]result = null\nforeach (o, AllObjects ()) {\n if (HasString (o, &quot;alias&quot;) {\n    if (o&#46;alias = nametosearchfor) {\n      result = o\n    }\n  }\n}[/code:1415fdjm]\n\nThere may be alternatives, depending on exactly what you want to do.\n[quote:1415fdjm]If that made no sense, imagine if I wanted to simply hyperlink one of the cloned objects in the text processor. Normally, I'd just put {object:example}, but is there any way to do that for a clone without assuming that example1 to whatever indeterminate number was present? I mean, what if I create so many clones that it exceeds the premeditated amount of clones that I wanted, how would I be able to do that for them? Certainly there must be a way.[/quote:1415fdjm]\nYou cannot do it using the text processor (text processor does not support the &quot;this&quot; thing). You would have to add it as a script, rather than text, select &quot;Print a message&quot;, then select &quot;Expression&quot; instead of &quot;Message&quot;. Then you can type in something like this:\n\n&quot;Here is a &quot; + ObjectLink (example) + &quot;.&quot;\n\nIf that does not mean anything to you, please say!",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>TFG wrote:</cite>Thank you George and The Pixie! Your combined code is exactly what I needed. However, it was giving me some errors, so I switched 'name' to 'alias'.</blockquote><br/>Oops, my bad!<br/><blockquote><p>What if I wanted to make scripts that affected these new clones?</p></blockquote><br/>It depends. If you have a script on your original object, then should get copied to the clone, and work just fine (but use &quot;this&quot; in the script to refer to the object).<br/><br/>Otherwise, you would probably be best searching for it by alias.<br/><br/><pre><code>result = null<br/>foreach (o, AllObjects ()) {<br/> if (HasString (o, &quot;alias&quot;) {<br/>    if (o&#46;alias = nametosearchfor) {<br/>      result = o<br/>    }<br/>  }<br/>}</code></pre><br/><br/>There may be alternatives, depending on exactly what you want to do.<br/><blockquote><p>If that made no sense, imagine if I wanted to simply hyperlink one of the cloned objects in the text processor. Normally, I'd just put {object:example}, but is there any way to do that for a clone without assuming that example1 to whatever indeterminate number was present? I mean, what if I create so many clones that it exceeds the premeditated amount of clones that I wanted, how would I be able to do that for them? Certainly there must be a way.</p></blockquote><br/>You cannot do it using the text processor (text processor does not support the &quot;this&quot; thing). You would have to add it as a script, rather than text, select &quot;Print a message&quot;, then select &quot;Expression&quot; instead of &quot;Message&quot;. Then you can type in something like this:<br/><br/>&quot;Here is a &quot; + ObjectLink (example) + &quot;.&quot;<br/><br/>If that does not mean anything to you, please say!",
      "PostDate": "2013-12-05T09:07:07+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27015",
      "UserId": 0,
      "Username": "TFG",
      "UserAvatar": null,
      "UserGravatar": "47f14351c01cdcbb4dbebfaba94fb8d9",
      "EditableText": "I sort of understand the last bit. But when you put the 'ObjectLink (example)', do you have to put like (example1) or (example2) to specify? If not, how are you specifying which clone to work with? You guys are blowing my mind with some of this code being able to refer to objects without having to manually specify their names, like with the 'newobject' and 'this'.\n\nSpeaking of which, 'this' still confuses me. You mentioned before that it works because the script belongs to the object. When I usually make scripts, I generally use them in rooms or commands. I get that I could probably just make a verb and just use 'this', so it can work for any object. However, how could I use a command to access that, or could I even use a command to access a verb? I make everything in text adventure mode but I prefer making it kind of like a gamebook in the sense that I just hyperlink commands for everything and hide the command bar. So how can I just hyperlink it and throw it up as something to click?\n\nWhat confuses me about how to really implement all this into the game I am making is really just how to refer to the objects. For example, if I want to use the if script for when an object's integer was to exceed a certain number, usually I'd just make it as a turn script and put the code as:\n\n[code:1z1vb08m]&lt;turnscript name=&quot;health cap&quot;&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;&lt;!&#91;CDATA&#91;\n      if (object&#46;health &lt; 0) {\n        object&#46;health = 0\n      }\n    &#93;&#93;&gt;&lt;/script&gt;\n  &lt;/turnscript&gt;[/code:1z1vb08m]\n\nThis is an example of what I use to cap off an attribute from going below zero. However, how would I refer to a random clone? And another thing, if I make it so that this script works for the original object, does it apply also to all of that object's clones?\n\nThe searching for it by alias part I don't understand at all. The code just looks alien to me and I have no idea where I'd even put it in at. Remember, I mostly just use the interface, so my only reference for understanding is really just inserting the code and then looking at the interface to study what the scripts are and how I assume they work.\n\nRegarding George's code, I really like how he made a function. I've never used functions before, so looking at it I have no idea how it works. The 'ss' part and then the return value line 'StringListItem(ss, GetRandomInt(0, ListCount(ss) - 1))'. Can you explain to me how this works, what it means, and how I can use functions like this for other stuff? I understand the GetRandomInt part, but I especially don't understand what ListttCount(ss) - 1) means. Really, I don't understand what anything but the GetRandomInt part means, lol.\n\nPlease excuse all the hand holding. I almost nearly completed a game I had been working on before and never did I have to use anything like this. Just when I thought I had it all figured out, this one little thing proves me to be the most ignorant, lol. It is very humbling.",
      "EditableFormat": "bbcode",
      "HTML": "I sort of understand the last bit. But when you put the 'ObjectLink (example)', do you have to put like (example1) or (example2) to specify? If not, how are you specifying which clone to work with? You guys are blowing my mind with some of this code being able to refer to objects without having to manually specify their names, like with the 'newobject' and 'this'.<br/><br/>Speaking of which, 'this' still confuses me. You mentioned before that it works because the script belongs to the object. When I usually make scripts, I generally use them in rooms or commands. I get that I could probably just make a verb and just use 'this', so it can work for any object. However, how could I use a command to access that, or could I even use a command to access a verb? I make everything in text adventure mode but I prefer making it kind of like a gamebook in the sense that I just hyperlink commands for everything and hide the command bar. So how can I just hyperlink it and throw it up as something to click?<br/><br/>What confuses me about how to really implement all this into the game I am making is really just how to refer to the objects. For example, if I want to use the if script for when an object's integer was to exceed a certain number, usually I'd just make it as a turn script and put the code as:<br/><br/><pre><code>&lt;turnscript name=&quot;health cap&quot;&gt;<br/>    &lt;enabled /&gt;<br/>    &lt;script&gt;&lt;!&#91;CDATA&#91;<br/>      if (object&#46;health &lt; 0) {<br/>        object&#46;health = 0<br/>      }<br/>    &#93;&#93;&gt;&lt;/script&gt;<br/>  &lt;/turnscript&gt;</code></pre><br/><br/>This is an example of what I use to cap off an attribute from going below zero. However, how would I refer to a random clone? And another thing, if I make it so that this script works for the original object, does it apply also to all of that object's clones?<br/><br/>The searching for it by alias part I don't understand at all. The code just looks alien to me and I have no idea where I'd even put it in at. Remember, I mostly just use the interface, so my only reference for understanding is really just inserting the code and then looking at the interface to study what the scripts are and how I assume they work.<br/><br/>Regarding George's code, I really like how he made a function. I've never used functions before, so looking at it I have no idea how it works. The 'ss' part and then the return value line 'StringListItem(ss, GetRandomInt(0, ListCount(ss) - 1))'. Can you explain to me how this works, what it means, and how I can use functions like this for other stuff? I understand the GetRandomInt part, but I especially don't understand what ListttCount(ss) - 1) means. Really, I don't understand what anything but the GetRandomInt part means, lol.<br/><br/>Please excuse all the hand holding. I almost nearly completed a game I had been working on before and never did I have to use anything like this. Just when I thought I had it all figured out, this one little thing proves me to be the most ignorant, lol. It is very humbling.",
      "PostDate": "2013-12-05T09:51:48+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27016",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote:3hx6bzoo]I sort of understand the last bit. But when you put the 'ObjectLink (example)', do you have to put like (example1) or (example2) to specify? If not, how are you specifying which clone to work with? You guys are blowing my mind with some of this code being able to refer to objects without having to manually specify their names, like with the 'newobject' and 'this'.[/quote:3hx6bzoo]\nIt depends how you are using it. If you are describing a room, you could get all the objects in the room, and then display the link for each one.\n[code:3hx6bzoo]foreach (obj, ScopeVisibleNotHeld ()) {\n  msg (&quot;You can see &quot; + ObjectLink (obj))\n}\n[/code:3hx6bzoo]\nThis will go through each object in the current room, and (kind of) temporarily call each one &quot;obj&quot; (actually it assigns each to a variable called &quot;obj&quot;). Of course, Quest does that for you, so it might be better if you gave a specific example of what you are trying to do.\n[quote:3hx6bzoo]Speaking of which, 'this' still confuses me. You mentioned before that it works because the script belongs to the object. When I usually make scripts, I generally use them in rooms or commands. I get that I could probably just make a verb and just use 'this', so it can work for any object. However, how could I use a command to access that, or could I even use a command to access a verb? I make everything in text adventure mode but I prefer making it kind of like a gamebook in the sense that I just hyperlink commands for everything and hide the command bar. So how can I just hyperlink it and throw it up as something to click?[/quote:3hx6bzoo]\nYou cannot use &quot;this&quot; with commands and functions.\n\nWith commands, you often have an &quot;object&quot; that does the same sort of thing. If your command pattern is &quot;kiss #object#&quot; then Quest will assign the thing to the variable &quot;object&quot;. Then you just do something like this:\n[code:3hx6bzoo]msg (&quot;You can see &quot; + ObjectLink (object))[/code:3hx6bzoo]\n[quote:3hx6bzoo]What confuses me about how to really implement all this into the game I am making is really just how to refer to the objects. For example, if I want to use the if script for when an object's integer was to exceed a certain number, usually I'd just make it as a turn script and put the code as:[/quote:3hx6bzoo]\nGreat. But you weant to do this for all your NPCs, so you need to go through them all. The trick is to get all objects, check if each is an NPC (just set a boolean atribute on your original called &quot;isnpc&quot; to true), and if it is, do the code.\n[code:3hx6bzoo]&lt;turnscript name=&quot;health cap&quot;&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;&lt;!&#91;CDATA&#91;\n      foreach (object, AllObjects ()) {\n        if (GetBoolean (object, &quot;isnpc&quot;)) {\n          if (object&#46;health &lt; 0) {\n            object&#46;health = 0\n          }\n        }\n      }\n    &#93;&#93;&gt;&lt;/script&gt;\n  &lt;/turnscript&gt;[/code:3hx6bzoo]\n[quote:3hx6bzoo]And another thing, if I make it so that this script works for the original object, does it apply also to all of that object's clones?[/quote:3hx6bzoo]\nNo. Once cloned, the state of the original has no effect on the clone.\n\nBit stuck for time, but here is how to get an object by its alias as a function.\n[code:3hx6bzoo]&lt;function name=&quot;Search&quot; parameters=&quot;name&quot; type=&quot;object&quot;&gt;\n  result = null\n  foreach (o, AllObjects ()) {\n    if (HasString (o, &quot;alias&quot;) {\n      if (o&#46;alias = nametosearchfor) {\n        result = o\n      }\n    }\n  }\n  return (result)\n&lt;/function&gt;[/code:3hx6bzoo]",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>I sort of understand the last bit. But when you put the 'ObjectLink (example)', do you have to put like (example1) or (example2) to specify? If not, how are you specifying which clone to work with? You guys are blowing my mind with some of this code being able to refer to objects without having to manually specify their names, like with the 'newobject' and 'this'.</p></blockquote><br/>It depends how you are using it. If you are describing a room, you could get all the objects in the room, and then display the link for each one.<br/><pre><code>foreach (obj, ScopeVisibleNotHeld ()) {<br/>  msg (&quot;You can see &quot; + ObjectLink (obj))<br/>}<br/></code></pre><br/>This will go through each object in the current room, and (kind of) temporarily call each one &quot;obj&quot; (actually it assigns each to a variable called &quot;obj&quot;). Of course, Quest does that for you, so it might be better if you gave a specific example of what you are trying to do.<br/><blockquote><p>Speaking of which, 'this' still confuses me. You mentioned before that it works because the script belongs to the object. When I usually make scripts, I generally use them in rooms or commands. I get that I could probably just make a verb and just use 'this', so it can work for any object. However, how could I use a command to access that, or could I even use a command to access a verb? I make everything in text adventure mode but I prefer making it kind of like a gamebook in the sense that I just hyperlink commands for everything and hide the command bar. So how can I just hyperlink it and throw it up as something to click?</p></blockquote><br/>You cannot use &quot;this&quot; with commands and functions.<br/><br/>With commands, you often have an &quot;object&quot; that does the same sort of thing. If your command pattern is &quot;kiss #object#&quot; then Quest will assign the thing to the variable &quot;object&quot;. Then you just do something like this:<br/><pre><code>msg (&quot;You can see &quot; + ObjectLink (object))</code></pre><br/><blockquote><p>What confuses me about how to really implement all this into the game I am making is really just how to refer to the objects. For example, if I want to use the if script for when an object's integer was to exceed a certain number, usually I'd just make it as a turn script and put the code as:</p></blockquote><br/>Great. But you weant to do this for all your NPCs, so you need to go through them all. The trick is to get all objects, check if each is an NPC (just set a boolean atribute on your original called &quot;isnpc&quot; to true), and if it is, do the code.<br/><pre><code>&lt;turnscript name=&quot;health cap&quot;&gt;<br/>    &lt;enabled /&gt;<br/>    &lt;script&gt;&lt;!&#91;CDATA&#91;<br/>      foreach (object, AllObjects ()) {<br/>        if (GetBoolean (object, &quot;isnpc&quot;)) {<br/>          if (object&#46;health &lt; 0) {<br/>            object&#46;health = 0<br/>          }<br/>        }<br/>      }<br/>    &#93;&#93;&gt;&lt;/script&gt;<br/>  &lt;/turnscript&gt;</code></pre><br/><blockquote><p>And another thing, if I make it so that this script works for the original object, does it apply also to all of that object's clones?</p></blockquote><br/>No. Once cloned, the state of the original has no effect on the clone.<br/><br/>Bit stuck for time, but here is how to get an object by its alias as a function.<br/><pre><code>&lt;function name=&quot;Search&quot; parameters=&quot;name&quot; type=&quot;object&quot;&gt;<br/>  result = null<br/>  foreach (o, AllObjects ()) {<br/>    if (HasString (o, &quot;alias&quot;) {<br/>      if (o&#46;alias = nametosearchfor) {<br/>        result = o<br/>      }<br/>    }<br/>  }<br/>  return (result)<br/>&lt;/function&gt;</code></pre>",
      "PostDate": "2013-12-05T11:53:27+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27017",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "[quote=&quot;TFG&quot;:2qnytl3z]\nRegarding George's code, I really like how he made a function. I've never used functions before, so looking at it I have no idea how it works. The 'ss' part and then the return value line 'StringListItem(ss, GetRandomInt(0, ListCount(ss) - 1))'. Can you explain to me how this works, what it means, and how I can use functions like this for other stuff? I understand the GetRandomInt part, but I especially don't understand what ListttCount(ss) - 1) means. Really, I don't understand what anything but the GetRandomInt part means, lol.[/quote:2qnytl3z]\n\nI think The Pixie answered most of your questions, however I'll give this a try. I'll just try to break down the function piece by piece. \n\nIf you'd like this explained in terms of the GUI say so but doing it in code view is just a lot faster (to do [i:2qnytl3z]and[/i:2qnytl3z] to explain <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> )\n\n[code:2qnytl3z]\n  &lt;function name=&quot;ChooseOne&quot; parameters=&quot;ss&quot; type=&quot;string&quot;&gt;\n    return (StringListItem(ss, GetRandomInt(0, ListCount(ss) - 1)))\n  &lt;/function&gt;\n[/code:2qnytl3z]\n\n* Here we have the function [u:2qnytl3z]element[/u:2qnytl3z]. \n* It is called like [b:2qnytl3z]ChooseOne[/b:2qnytl3z]([i:2qnytl3z]ss[/i:2qnytl3z]). \n* [i:2qnytl3z]ss[/i:2qnytl3z] is the only [u:2qnytl3z]parameter[/u:2qnytl3z] of the function definition. Another way to say 'function definition' is 'function [u:2qnytl3z]signature[/u:2qnytl3z]'. However when you use the function, you would call ss the only [u:2qnytl3z]argument[/u:2qnytl3z]. Yes, this is mostly programming mumbo-jumbo <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->, but it's helpful to know the lingo. \n* I have to admit I was lazy in calling the parameter 'ss'. Usually you should make parameter names more self-explanatory. For me 'ss' stands for [b:2qnytl3z]s[/b:2qnytl3z]tring[b:2qnytl3z]s[/b:2qnytl3z], and means the function expects its argument to be a StringList. \n* The return type is a string. \n* OK, the actual code. \n\n[code:2qnytl3z]\n return (StringListItem(ss, GetRandomInt(0, ListCount(ss) - 1)))\n[/code:2qnytl3z]\n\n* [b:2qnytl3z]return [/b:2qnytl3z]() is a Quest script command, <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Return\">http://quest5.net/wiki/Return</a><!-- m --> . Its only argument is [b:2qnytl3z]StringListItem[/b:2qnytl3z]. \n* StringListItem gets [b:2qnytl3z]one[/b:2qnytl3z] item from a StringList. It takes two arguments, a StringList and a number, here they are [b:2qnytl3z]ss[/b:2qnytl3z], and the function [b:2qnytl3z]GetRandomInt[/b:2qnytl3z]. In other words, StringListItem gets the 'number' item from its list, like the [b:2qnytl3z]0[/b:2qnytl3z]th, the [b:2qnytl3z]2[/b:2qnytl3z]nd, the [b:2qnytl3z]4[/b:2qnytl3z]th, etcetera. You start counting from 0. \n* As I mentioned ss is the only argument when you call ChooseOne. It's a StringList. \n* GetRandomInt, <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetRandomInt\">http://quest5.net/wiki/GetRandomInt</a><!-- m --> , takes two arguments. You see it a lot in many programming languages. It takes two arguments, both numbers, that are the minimum and maximum between which it'll randomly choose a number. Here the minimum is [b:2qnytl3z]0[/b:2qnytl3z] and the maximum is another function, [b:2qnytl3z]ListCount[/b:2qnytl3z], with 1 subtracted from it. \n* ListCount, <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ListCount\">http://quest5.net/wiki/ListCount</a><!-- m --> , tells you how many items are in a list. Why is this the maximum argument in our GetRandomInt? Because we don't want GetRandomInt to give us a number [i:2qnytl3z]bigger [/i:2qnytl3z]than the number of items in our list. But, because we start counting from [b:2qnytl3z]0[/b:2qnytl3z], we have to [i:2qnytl3z]subtract [/i:2qnytl3z]one from the number returned by ListCount. \n\nSo to summarize:\n\nWhen you call [b:2qnytl3z]ChooseOne[/b:2qnytl3z]([i:2qnytl3z]this.names[/i:2qnytl3z]), this.names is a StringList which gets sent to ChooseOne. ChooseOne gets a random number between 0 and the number of items in the StringList (minus 1), gets the 'number'th item from the StringList, and returns it. So, you put that item in place of wherever you called ChooseOne. \n\nHoly crap that was long, I hope I didn't put you to sleep! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>TFG wrote:</cite><br/>Regarding George's code, I really like how he made a function. I've never used functions before, so looking at it I have no idea how it works. The 'ss' part and then the return value line 'StringListItem(ss, GetRandomInt(0, ListCount(ss) - 1))'. Can you explain to me how this works, what it means, and how I can use functions like this for other stuff? I understand the GetRandomInt part, but I especially don't understand what ListttCount(ss) - 1) means. Really, I don't understand what anything but the GetRandomInt part means, lol.</blockquote><br/><br/>I think The Pixie answered most of your questions, however I'll give this a try. I'll just try to break down the function piece by piece. <br/><br/>If you'd like this explained in terms of the GUI say so but doing it in code view is just a lot faster (to do <span style=\"font-style:italic;\">and</span> to explain <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> )<br/><br/><pre><code><br/>  &lt;function name=&quot;ChooseOne&quot; parameters=&quot;ss&quot; type=&quot;string&quot;&gt;<br/>    return (StringListItem(ss, GetRandomInt(0, ListCount(ss) - 1)))<br/>  &lt;/function&gt;<br/></code></pre><br/><br/>* Here we have the function <span style=\"text-decoration:underline;\">element</span>. <br/>* It is called like <span style=\"font-weight:bold;\">ChooseOne</span>(<span style=\"font-style:italic;\">ss</span>). <br/>* <span style=\"font-style:italic;\">ss</span> is the only <span style=\"text-decoration:underline;\">parameter</span> of the function definition. Another way to say 'function definition' is 'function <span style=\"text-decoration:underline;\">signature</span>'. However when you use the function, you would call ss the only <span style=\"text-decoration:underline;\">argument</span>. Yes, this is mostly programming mumbo-jumbo <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->, but it's helpful to know the lingo. <br/>* I have to admit I was lazy in calling the parameter 'ss'. Usually you should make parameter names more self-explanatory. For me 'ss' stands for <span style=\"font-weight:bold;\">s</span>tring<span style=\"font-weight:bold;\">s</span>, and means the function expects its argument to be a StringList. <br/>* The return type is a string. <br/>* OK, the actual code. <br/><br/><pre><code><br/> return (StringListItem(ss, GetRandomInt(0, ListCount(ss) - 1)))<br/></code></pre><br/><br/>* <span style=\"font-weight:bold;\">return </span>() is a Quest script command, <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Return\">http://quest5.net/wiki/Return</a><!-- m --> . Its only argument is <span style=\"font-weight:bold;\">StringListItem</span>. <br/>* StringListItem gets <span style=\"font-weight:bold;\">one</span> item from a StringList. It takes two arguments, a StringList and a number, here they are <span style=\"font-weight:bold;\">ss</span>, and the function <span style=\"font-weight:bold;\">GetRandomInt</span>. In other words, StringListItem gets the 'number' item from its list, like the <span style=\"font-weight:bold;\">0</span>th, the <span style=\"font-weight:bold;\">2</span>nd, the <span style=\"font-weight:bold;\">4</span>th, etcetera. You start counting from 0. <br/>* As I mentioned ss is the only argument when you call ChooseOne. It's a StringList. <br/>* GetRandomInt, <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetRandomInt\">http://quest5.net/wiki/GetRandomInt</a><!-- m --> , takes two arguments. You see it a lot in many programming languages. It takes two arguments, both numbers, that are the minimum and maximum between which it'll randomly choose a number. Here the minimum is <span style=\"font-weight:bold;\">0</span> and the maximum is another function, <span style=\"font-weight:bold;\">ListCount</span>, with 1 subtracted from it. <br/>* ListCount, <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ListCount\">http://quest5.net/wiki/ListCount</a><!-- m --> , tells you how many items are in a list. Why is this the maximum argument in our GetRandomInt? Because we don't want GetRandomInt to give us a number <span style=\"font-style:italic;\">bigger </span>than the number of items in our list. But, because we start counting from <span style=\"font-weight:bold;\">0</span>, we have to <span style=\"font-style:italic;\">subtract </span>one from the number returned by ListCount. <br/><br/>So to summarize:<br/><br/>When you call <span style=\"font-weight:bold;\">ChooseOne</span>(<span style=\"font-style:italic;\">this.names</span>), this.names is a StringList which gets sent to ChooseOne. ChooseOne gets a random number between 0 and the number of items in the StringList (minus 1), gets the 'number'th item from the StringList, and returns it. So, you put that item in place of wherever you called ChooseOne. <br/><br/>Holy crap that was long, I hope I didn't put you to sleep! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-12-05T16:22:05+00:00",
      "LastEditDate": null
    }
  ]
}
