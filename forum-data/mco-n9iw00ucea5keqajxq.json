{
  "Topic": {
    "TopicId": "mco-n9iw00ucea5keqajxq",
    "ForumId": "10",
    "Title": "Good Way to Handle Exit Locking and Unlocking in a Maze? [Solved]",
    "LastUpdated": "2019-08-20T14:44:04.2468126Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "757d58a6-c4ab-4e19-bba1-f1293887f9f3",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm working on a maze where threats appear randomly. When a threat turns up I'd like to prevent the player leaving the location until the threat had been handled. Specifically, I'd like to run a piece of code that locks all exits that are not currently locked and later release just those locks. It feels like there should be a neat way to do this but I don't know it!",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm working on a maze where threats appear randomly. When a threat turns up I'd like to prevent the player leaving the location until the threat had been handled. Specifically, I'd like to run a piece of code that locks all exits that are not currently locked and later release just those locks. It feels like there should be a neat way to do this but I don't know it!</p>\n\n",
      "PostDate": "2019-08-20T14:44:04.2468126Z",
      "LastEditDate": "2019-08-21T08:41:02.9505836Z",
      "link": null
    },
    {
      "PostId": "a3926b09-fc4f-46c7-a53d-2fcc943cf6e0",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**Idea 1**\r\n\r\nEdit: temporarily remove the script, so that moving the player back to the room they came from doesn't trigger it again.\r\n\r\n<pre><code>player.changedparent => {\r\n  msg (\"The {game.currentthreat} won't let you leave!\")\r\n  <b>thisscript = this.changedparent\r\n  this.changedparent = null</b>\r\n  this.parent = oldvalue\r\n  <b>this.changedparent = thisscript</b>\r\n}</code></pre>\r\n\r\n(all objects have the same `changedparent` script by default; which only does something if the object is the player. So you can just do `player.changedparent = some_other_object.changedparent` when your threat is dealt with.\r\n\r\n<hr />\r\n\r\n**Idea 2**\r\n\r\nMake a command with the same pattern as the `go` command. Move it into the current room when you want to stop the player moving, and put it in a box somewhere when you don't need it.\r\n\r\n<hr />\r\n\r\n**Idea 3**\r\n\r\nMake an attribute to indicate if you can move or not.\r\n\r\nModify either `player.changdparent` or `go.script` to check it:\r\n```\r\nif (HasAttribute (game, \"immobilised_reason\")) {\r\n  msg (game.immobilised_reason)\r\n}\r\nelse {\r\n  // put the default code here\r\n}\r\n```\r\nThen you can set game.immobilised_reason whenever you want to stop the player moving.\r\n\r\n<hr />\r\n**Actually locking the exits**\r\n\r\nTo lock:\r\n```\r\nforeach (exit, AllExits()) {\r\n  if (exit.parent = game.pov.parent and not GetBoolean(exit, \"locked\")) {\r\n    exit.locked = true\r\n    exit.temporary_locked = true\r\n  }\r\n}\r\n```\r\nand to unlock them again:\r\n```\r\nforeach (exit, FilterByAttribute (AllExits(), \"temporary_locked\", true)) {\r\n  exit.locked = false\r\n  exit.temporary_locked = null\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>Idea 1</strong></p>\n<p>Edit: temporarily remove the script, so that moving the player back to the room they came from doesn't trigger it again.</p>\n<pre><code>player.changedparent =&gt; {\n  msg (\"The {game.currentthreat} won't let you leave!\")\n  <b>thisscript = this.changedparent\n  this.changedparent = null</b>\n  this.parent = oldvalue\n  <b>this.changedparent = thisscript</b>\n}</code></pre>\n<p>(all objects have the same <code>changedparent</code> script by default; which only does something if the object is the player. So you can just do <code>player.changedparent = some_other_object.changedparent</code> when your threat is dealt with.</p>\n<hr>\n<p><strong>Idea 2</strong></p>\n<p>Make a command with the same pattern as the <code>go</code> command. Move it into the current room when you want to stop the player moving, and put it in a box somewhere when you don't need it.</p>\n<hr>\n<p><strong>Idea 3</strong></p>\n<p>Make an attribute to indicate if you can move or not.</p>\n<p>Modify either <code>player.changdparent</code> or <code>go.script</code> to check it:</p>\n<pre><code>if (HasAttribute (game, \"immobilised_reason\")) {\n  msg (game.immobilised_reason)\n}\nelse {\n  // put the default code here\n}\n</code></pre>\n<p>Then you can set game.immobilised_reason whenever you want to stop the player moving.</p>\n<hr>\n**Actually locking the exits**\n<p>To lock:</p>\n<pre><code>foreach (exit, AllExits()) {\n  if (exit.parent = game.pov.parent and not GetBoolean(exit, \"locked\")) {\n    exit.locked = true\n    exit.temporary_locked = true\n  }\n}\n</code></pre>\n<p>and to unlock them again:</p>\n<pre><code>foreach (exit, FilterByAttribute (AllExits(), \"temporary_locked\", true)) {\n  exit.locked = false\n  exit.temporary_locked = null\n}\n</code></pre>\n\n",
      "PostDate": "2019-08-20T17:52:07.9935523Z",
      "LastEditDate": "2019-08-21T13:12:06.5895949Z",
      "link": null
    },
    {
      "PostId": "fe5ecdcb-9f07-4ee1-bf84-4e279d1721cf",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wow, mrangel, not just the answer I was looking for but a tutorial on other possibilities! The exit locking/unlocking code works perfectly. I also tried **Idea 1**, as it seems the simplest/best solution, but my game crashed when I tried to leave the room. I'll go with what I can understand! Many thanks as always. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Wow, mrangel, not just the answer I was looking for but a tutorial on other possibilities! The exit locking/unlocking code works perfectly. I also tried <strong>Idea 1</strong>, as it seems the simplest/best solution, but my game crashed when I tried to leave the room. I'll go with what I can understand! Many thanks as always.</p>\n\n",
      "PostDate": "2019-08-21T08:40:34.5366641Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2c68ec73-97b5-4ef7-b6b0-fbe5baa4c325",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I would say the 3rd one is the best, as it's a single modification that can then be triggered by setting a single attribute. Depends on your game, though.\r\n\r\nI fixed the first one; that was me being careless.",
      "EditableFormat": "markdown",
      "HTML": "<p>I would say the 3rd one is the best, as it's a single modification that can then be triggered by setting a single attribute. Depends on your game, though.</p>\n<p>I fixed the first one; that was me being careless.</p>\n\n",
      "PostDate": "2019-08-21T13:18:41.9331154Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
