{
  "Topic": {
    "TopicId": "eejoe5pelu__3ucgrvjkha",
    "ForumId": "10",
    "Title": "ASLEvent fires turn scripts",
    "LastUpdated": "2018-02-01T18:24:24.0061471Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "e5e6daf8-386f-485d-9649-30eeb15ad69e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It looks like an ASLEvent calls a UIEvent, which passes the parameter through cef, which sends a sort of command through, which causes the turn scripts to fire.  (I don't think it actually finishes the turn, but I'm not certain.)\r\n\r\nMy mission is to set attributes in the game from JS values without firing turn scripts.\r\n\r\nAnyone have any ideas, suggestions, or know-how?",
      "EditableFormat": "markdown",
      "HTML": "<p>It looks like an ASLEvent calls a UIEvent, which passes the parameter through cef, which sends a sort of command through, which causes the turn scripts to fire.  (I don't think it actually finishes the turn, but I'm not certain.)</p>\n<p>My mission is to set attributes in the game from JS values without firing turn scripts.</p>\n<p>Anyone have any ideas, suggestions, or know-how?</p>\n\n",
      "PostDate": "2018-02-01T18:24:24.0061471Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ae7f6ed9-3d83-41c9-9c74-987b3dc3efa6",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "PS\r\n\r\nAdding something to the source code is fine with me.\r\n\r\nI could do it in vb.net or c# in the source code, or I'd also be happy just doing it in the game's code. ",
      "EditableFormat": "markdown",
      "HTML": "<p>PS</p>\n<p>Adding something to the source code is fine with me.</p>\n<p>I could do it in vb.net or c# in the source code, or I'd also be happy just doing it in the game's code.</p>\n\n",
      "PostDate": "2018-02-01T18:41:59.1416742Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "40fbdbfa-ca51-4b79-90b5-73eb62c72444",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Someone reported this as a bug with regards to clicking on the map, which calls ASLEvent. I had a look at the code, and it is buried deep in C#, so next version of Quest just has an option to turnmap clicking on or off, which does not help this at all.",
      "EditableFormat": "markdown",
      "HTML": "<p>Someone reported this as a bug with regards to clicking on the map, which calls ASLEvent. I had a look at the code, and it is buried deep in C#, so next version of Quest just has an option to turnmap clicking on or off, which does not help this at all.</p>\n\n",
      "PostDate": "2018-02-01T19:39:46.8746486Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "aa44c40a-066e-4dee-909c-2e81a32e568d",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I thought about setting a boolean attribute, changing it to true when calling an ASLEvent, then having the turn scripts function not fire if that value is true, but I decided that sounded really dangerous.\r\n\r\nThe main reason I was fooling with this was to make the desktop player save a transcript as a text file, appending said .txt file each time something printed in the game (just like the INFOCOM games do).\r\n\r\nI actually just found some code online that I **think** is working (as far as the transcript is concerned).  (Check it out in your email, Pix.  Should be the last one I sent.)\r\n\r\n---\r\nAs far as the ASLEvent goes, I found the same thing as you:  C#.   I can sort of see where it is sort of ending a turn (kind of), but... C#...  \r\n\r\nI just can't hit that note quite yet.",
      "EditableFormat": "markdown",
      "HTML": "<p>I thought about setting a boolean attribute, changing it to true when calling an ASLEvent, then having the turn scripts function not fire if that value is true, but I decided that sounded really dangerous.</p>\n<p>The main reason I was fooling with this was to make the desktop player save a transcript as a text file, appending said .txt file each time something printed in the game (just like the INFOCOM games do).</p>\n<p>I actually just found some code online that I <strong>think</strong> is working (as far as the transcript is concerned).  (Check it out in your email, Pix.  Should be the last one I sent.)</p>\n<hr>\n<p>As far as the ASLEvent goes, I found the same thing as you:  C#.   I can sort of see where it is sort of ending a turn (kind of), but... C#...</p>\n<p>I just can't hit that note quite yet.</p>\n\n",
      "PostDate": "2018-02-01T19:59:08.2199817Z",
      "LastEditDate": "2018-02-01T20:38:02.4559234Z",
      "link": null
    },
    {
      "PostId": "b689bcd3-5ad0-4ad0-9770-a2217f679d52",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> As far as the ASLEvent goes, I found the same thing as you: C#. I can sort of see where it is sort of ending a turn (kind of), but... C#...\r\n\r\nIt looks like it may be using the same code that handles a command (as far as I can tell). and changing it could easily have undesirable side effects. One to put on the back-burner.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>As far as the ASLEvent goes, I found the same thing as you: C#. I can sort of see where it is sort of ending a turn (kind of), but... C#...</p>\n</blockquote>\n<p>It looks like it may be using the same code that handles a command (as far as I can tell). and changing it could easily have undesirable side effects. One to put on the back-burner.</p>\n\n",
      "PostDate": "2018-02-01T21:57:22.0796649Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0bb5213f-fae7-45e4-9575-274b52ea10a1",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think the only purpose of the ASLEvent was to send a command when it was birthed.\r\n\r\nI came back here to say so, but you beat me to it, Pixie.\r\n\r\nPertex slid that one function right into the code to read an online file, so I'm thinking a separate function might be a possibility.  If I can only find a way to pass a string from JS to something else (probably C#), I can get it.  (It's like a personal thing at this point.  It may lack purpose or mess something else up, but I'd be happy to remove it, once it does what I want it to.  (I'm the master.  The computer is the slave.  You understand where I'm coming from; right?)",
      "EditableFormat": "markdown",
      "HTML": "<p>I think the only purpose of the ASLEvent was to send a command when it was birthed.</p>\n<p>I came back here to say so, but you beat me to it, Pixie.</p>\n<p>Pertex slid that one function right into the code to read an online file, so I'm thinking a separate function might be a possibility.  If I can only find a way to pass a string from JS to something else (probably C#), I can get it.  (It's like a personal thing at this point.  It may lack purpose or mess something else up, but I'd be happy to remove it, once it does what I want it to.  (I'm the master.  The computer is the slave.  You understand where I'm coming from; right?)</p>\n\n",
      "PostDate": "2018-02-01T23:07:23.0322578Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e80d747c-0c82-4044-9e6c-5c664fc74890",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "SUCCESS!!!\r\n\r\nI went in Visual Studio and searched for ASLEvent, which led me to UIEvent, which led me to SendEvent.\r\n\r\nI copied every SendEvent() function in every file, pasted just below it, and renamed the copied function SendAttribute(). \r\n\r\nThen I commented out the line that finished the turn (```TryFinishTurn()```):\r\n\r\n```\r\n        public void SendAttribute(string eventName, string param)\r\n        {\r\n            Element handler;\r\n            m_elements.TryGetValue(ElementType.Function, eventName, out handler);\r\n\r\n            if (handler == null)\r\n            {\r\n                Print(string.Format(\"Error - no handler for attribute '{0}'\", eventName));\r\n                return;\r\n            }\r\n\r\n            Parameters parameters = new Parameters();\r\n            parameters.Add((string)handler.Fields[FieldDefinitions.ParamNames][0], param);\r\n\r\n            RunProcedure(eventName, parameters, false);\r\n            if (Version >= WorldModelVersion.v540)\r\n            {\r\n                //TryFinishTurn();\r\n                if (State != GameState.Finished)\r\n                {\r\n                    UpdateLists();\r\n                }\r\n                // Might need to lose this next line, too. **KV\r\n                SendNextTimerRequest();\r\n            }\r\n        }\r\n```\r\n\r\n---\r\nIt seems to work just fine, but I know that is...\r\n\r\nI'm trying to break it right now.\r\n\r\n...but all you need to do is use ASLAttribute in place of ASLEvent.  Everything else is identical.  It just doesn't try to finish the turn.  (Whoo-hoo!)",
      "EditableFormat": "markdown",
      "HTML": "<p>SUCCESS!!!</p>\n<p>I went in Visual Studio and searched for ASLEvent, which led me to UIEvent, which led me to SendEvent.</p>\n<p>I copied every SendEvent() function in every file, pasted just below it, and renamed the copied function SendAttribute().</p>\n<p>Then I commented out the line that finished the turn (<code>TryFinishTurn()</code>):</p>\n<pre><code>        public void SendAttribute(string eventName, string param)\n        {\n            Element handler;\n            m_elements.TryGetValue(ElementType.Function, eventName, out handler);\n\n            if (handler == null)\n            {\n                Print(string.Format(\"Error - no handler for attribute '{0}'\", eventName));\n                return;\n            }\n\n            Parameters parameters = new Parameters();\n            parameters.Add((string)handler.Fields[FieldDefinitions.ParamNames][0], param);\n\n            RunProcedure(eventName, parameters, false);\n            if (Version &gt;= WorldModelVersion.v540)\n            {\n                //TryFinishTurn();\n                if (State != GameState.Finished)\n                {\n                    UpdateLists();\n                }\n                // Might need to lose this next line, too. **KV\n                SendNextTimerRequest();\n            }\n        }\n</code></pre>\n<hr>\n<p>It seems to work just fine, but I know that is...</p>\n<p>I'm trying to break it right now.</p>\n<p>...but all you need to do is use ASLAttribute in place of ASLEvent.  Everything else is identical.  It just doesn't try to finish the turn.  (Whoo-hoo!)</p>\n\n",
      "PostDate": "2018-02-02T00:19:48.6205462Z",
      "LastEditDate": "2018-02-02T00:20:42.3847501Z",
      "link": null
    },
    {
      "PostId": "b18bc9a2-de88-48a6-9d4f-2395ea40ff7f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It passes all the tests, too!\r\n\r\nYay!\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/35710921-b54eea46-077f-11e8-8eff-5b56afec0333.png)",
      "EditableFormat": "markdown",
      "HTML": "<p>It passes all the tests, too!</p>\n<p>Yay!</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/35710921-b54eea46-077f-11e8-8eff-5b56afec0333.png\" alt=\"image\"></p>\n\n",
      "PostDate": "2018-02-02T00:43:14.6784997Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f976fd25-ff96-4987-9a64-953cc1bb850a",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Did you test the WebPlayer?\r\n\r\nIf so, make a pull request.",
      "EditableFormat": "markdown",
      "HTML": "<p>Did you test the WebPlayer?</p>\n<p>If so, make a pull request.</p>\n\n",
      "PostDate": "2018-02-02T07:59:31.0166803Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8b3d5958-2774-4d78-a5b7-6a6806fd0b16",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you may also want to research (find and study) the 'TryFinishTurn ()' Function too, and see where it is, what uses it, and what it does.\r\n\r\ngreat work KV... let's hope it works in the webplayer... and you got a deep code contribution to quest, hehe. Maybe, Pixie and co, should have you join the quest development team, hehe. Get QuestKit working, winks, laughs.",
      "EditableFormat": "markdown",
      "HTML": "<p>you may also want to research (find and study) the 'TryFinishTurn ()' Function too, and see where it is, what uses it, and what it does.</p>\n<p>great work KV... let's hope it works in the webplayer... and you got a deep code contribution to quest, hehe. Maybe, Pixie and co, should have you join the quest development team, hehe. Get QuestKit working, winks, laughs.</p>\n\n",
      "PostDate": "2018-02-02T09:08:11.668226Z",
      "LastEditDate": "2018-02-02T09:10:09.7303382Z",
      "link": null
    },
    {
      "PostId": "14bdd250-de27-41f4-89d6-b82e7231256e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm about to test it on the web player now.  (I've never tried to run the web player before, so it may be a bit before I return.  Reading Pixie's wiki page concerning this as soon as I click 'Post Reply'.)",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm about to test it on the web player now.  (I've never tried to run the web player before, so it may be a bit before I return.  Reading Pixie's wiki page concerning this as soon as I click 'Post Reply'.)</p>\n\n",
      "PostDate": "2018-02-02T14:54:57.6247631Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7d9430ed-b4cd-4acc-9dbb-b588e8c614fa",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It appears to work in the web editor, too.\r\n\r\nAll the JS functions react a little strangely when I enter a command that uses JS.eval to do anything (not just my new function), but opening up the Developer console and calling functions from there works perfectly.\r\n\r\nI am assuming this is because I am hosting it locally, but I hate to assume anything...\r\n\r\nAlso, I can't make the web editor find the path to Play.aslx.  Tried the actual path, then I tried file:///path/to/file, but nothing works.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>It appears to work in the web editor, too.</p>\n<p>All the JS functions react a little strangely when I enter a command that uses JS.eval to do anything (not just my new function), but opening up the Developer console and calling functions from there works perfectly.</p>\n<p>I am assuming this is because I am hosting it locally, but I hate to assume anything...</p>\n<p>Also, I can't make the web editor find the path to Play.aslx.  Tried the actual path, then I tried file:///path/to/file, but nothing works.</p>\n\n",
      "PostDate": "2018-02-02T16:23:37.0737248Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e56e068d-2df2-4a80-9e2c-2543b81cd7fe",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I got it.\r\n\r\n```\r\n<?xml version=\"1.0\" ?>\r\n\r\n<!-- After entering settings, this file should be saved as WebEditorSettings.xml -->\r\n\r\n<appSettings>\r\n  <add key=\"PlayURL\" value=\"http://localhost:52426/Play.aspx?id=1\"/>\r\n  <add key=\"PublishURL\" value=\"http://path/to/publish/app/\"/>\r\n  <!-- To enable logging, uncomment this line, and create a log config XML (see WebPlayerSettings.default.xml for example) -->\r\n  <!-- <add key=\"LogConfig\" value=\"C:\\Path\\To\\Config\\File\\logging.xml\"/> -->\r\n\r\n  <!-- PLUGINS -->\r\n\r\n  <!-- Specify the type name of a class that implements IFileManager -->\r\n  <!-- <add key=\"FileManagerType\" value=\"SomeFileManager.FileManager, SomeFileManager\"/> -->\r\n\r\n  <!-- DEBUG PLUGINS -->\r\n\r\n  <!-- OR, when debugging, use the Debug Plugins -->\r\n  <add key=\"FileManagerType\" value=\"WebEditor.Services.DebugEditorFileManager, WebEditor\"/>\r\n  <add key=\"DebugFileManagerFile\" value=\"C:\\Users\\kv\\Documents\\Quest Games\\The JS Return\\The JS Return.aslx\"/>\r\n\r\n</appSettings>\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I got it.</p>\n<pre><code>&lt;?xml version=\"1.0\" ?&gt;\n\n&lt;!-- After entering settings, this file should be saved as WebEditorSettings.xml --&gt;\n\n&lt;appSettings&gt;\n  &lt;add key=\"PlayURL\" value=\"http://localhost:52426/Play.aspx?id=1\"/&gt;\n  &lt;add key=\"PublishURL\" value=\"http://path/to/publish/app/\"/&gt;\n  &lt;!-- To enable logging, uncomment this line, and create a log config XML (see WebPlayerSettings.default.xml for example) --&gt;\n  &lt;!-- &lt;add key=\"LogConfig\" value=\"C:\\Path\\To\\Config\\File\\logging.xml\"/&gt; --&gt;\n\n  &lt;!-- PLUGINS --&gt;\n\n  &lt;!-- Specify the type name of a class that implements IFileManager --&gt;\n  &lt;!-- &lt;add key=\"FileManagerType\" value=\"SomeFileManager.FileManager, SomeFileManager\"/&gt; --&gt;\n\n  &lt;!-- DEBUG PLUGINS --&gt;\n\n  &lt;!-- OR, when debugging, use the Debug Plugins --&gt;\n  &lt;add key=\"FileManagerType\" value=\"WebEditor.Services.DebugEditorFileManager, WebEditor\"/&gt;\n  &lt;add key=\"DebugFileManagerFile\" value=\"C:\\Users\\kv\\Documents\\Quest Games\\The JS Return\\The JS Return.aslx\"/&gt;\n\n&lt;/appSettings&gt;\n</code></pre>\n\n",
      "PostDate": "2018-02-02T18:08:11.4987234Z",
      "LastEditDate": "2018-02-02T20:14:57.9900783Z",
      "link": null
    },
    {
      "PostId": "3b1e70c3-f5a3-4361-bac2-96a13303d3ff",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay, it does the same thing with the current version of Quest.  It must be something with the JS and the server running from a local host?\r\n\r\n...but the web editor doesn't load half of the time because Visual Studio deletes **CoreFunctions.aslx** from **\"WebEditor\\WebEditor\\bin\\Core\\\"** as soon as you press F5 to start everything up.  (I don't know why it does this.  I assume it's a bug with something in Visual Studio.)  BUT, one in ten times, the file did not get deleted, and the editor loaded and worked.  It even saved the changes to my game file on my hard drive.  ...and it played when I clicked 'Play'.\r\n\r\nEven in the standard version of Quest's build, with a newly created game which called ASLEvents, the events did not fire when playing the web player from Visual Studio.  They DO fire from the desktop player, though.\r\n\r\nI also get an error about KeepAlive.ashx, but this is most definitely something which needs to contact the actual server to return something.  (I bet it is an attempt to keep the game from timing out.)\r\n\r\n---\r\nIf it deletes anything (which is does 9 times out of 10), Visual Studio always deletes the same three files when starting up the web editor:\r\n\r\nCoreFunctions\r\nCoreEditorObjectWearable\r\nCoreEditorAnnotation\r\n\r\n\r\n...and this happens with every version of Quest, back to 571.  Whether it's got some files I've modified or not.\r\n\r\nI can copy those files into a different folder, then drop them back in once they're deleted, and the editor loads right up.\r\n\r\n\r\nIt may be my PC, or it may be VS, or it may be a security issue with JS...\r\n\r\n...but it happens with things I haven't modified at all.  I bet my nickel it's a security issue.\r\n\r\nSo, I'll be submitting the pull request soon.",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay, it does the same thing with the current version of Quest.  It must be something with the JS and the server running from a local host?</p>\n<p>...but the web editor doesn't load half of the time because Visual Studio deletes <strong>CoreFunctions.aslx</strong> from <strong>\"WebEditor\\WebEditor\\bin\\Core\"</strong> as soon as you press F5 to start everything up.  (I don't know why it does this.  I assume it's a bug with something in Visual Studio.)  BUT, one in ten times, the file did not get deleted, and the editor loaded and worked.  It even saved the changes to my game file on my hard drive.  ...and it played when I clicked 'Play'.</p>\n<p>Even in the standard version of Quest's build, with a newly created game which called ASLEvents, the events did not fire when playing the web player from Visual Studio.  They DO fire from the desktop player, though.</p>\n<p>I also get an error about KeepAlive.ashx, but this is most definitely something which needs to contact the actual server to return something.  (I bet it is an attempt to keep the game from timing out.)</p>\n<hr>\n<p>If it deletes anything (which is does 9 times out of 10), Visual Studio always deletes the same three files when starting up the web editor:</p>\n<p>CoreFunctions<br>\nCoreEditorObjectWearable<br>\nCoreEditorAnnotation</p>\n<p>...and this happens with every version of Quest, back to 571.  Whether it's got some files I've modified or not.</p>\n<p>I can copy those files into a different folder, then drop them back in once they're deleted, and the editor loads right up.</p>\n<p>It may be my PC, or it may be VS, or it may be a security issue with JS...</p>\n<p>...but it happens with things I haven't modified at all.  I bet my nickel it's a security issue.</p>\n<p>So, I'll be submitting the pull request soon.</p>\n\n",
      "PostDate": "2018-02-02T20:42:52.3734151Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b73c7b66-c0e8-48b8-a970-379c01e7cde5",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Before I begin, the ASLAttribute function works perfectly in the desktop version which is built in this same project.\r\n\r\nThis is all about playing a game on the web player when it is being hosted on a local server via Visual Studio 2015.\r\n\r\n\r\n---\r\nTo be thorough, I did this:\r\n\r\n-  Cloned the quest repo on a totally different machine\r\n\r\n-  Created a new test game.  It only calls ASLEvents, and was made in Quest 572 on the desktop.\r\n\r\n- Ran the web player from Visual Studio (without changing anything at all; I only clicked 'Build', then switched to the WebPlayer, then pushed F5)\r\n    - the ASLEvent misbehaves in the same exact way.  It will only work one time.\r\n\r\n\r\n-  Opened the HTML Developer thing in my browser.  \r\n\r\n-  Entered the JS ASLEvent function from the console, and it worked that way.\r\n\r\n---\r\n\r\n-  Added the new code into the newly cloned repo.\r\n\r\n-  Cleaned then rebuilt Quest.\r\n\r\n-  Added the ASLAttribute call to the game.\r\n\r\n-  Ran the web player.\r\n\r\n-  It is the same thing as before.  I can call ASLEvent() or ASLAttribute from the developer console, but it will only run one ASL Event or Attribute which is called from the game at one time.  It doesn't matter if it's an ASLEvent (which I did not modify) or an ASLAtrribute (which I just added).  It also doesn't matter if it's a version of Quest I've added the new code to.  One ASLEvent is all I get out of the web player when Visual Studio is hosting the game on a local server.\r\n\r\n---\r\n### CONCLUSION\r\n\r\nThis works.  the ASLEvent is just finicky when running the web player this way.\r\n\r\nI am submitting the pull request now.\r\n\r\n---\r\nPS\r\n\r\nIf my conclusion is incorrect (or might be), that will not upset me, but I would wish to be enlightened as to the reason(s), just so I can learn stuff.",
      "EditableFormat": "markdown",
      "HTML": "<p>Before I begin, the ASLAttribute function works perfectly in the desktop version which is built in this same project.</p>\n<p>This is all about playing a game on the web player when it is being hosted on a local server via Visual Studio 2015.</p>\n<hr>\n<p>To be thorough, I did this:</p>\n<ul>\n<li>\n<p>Cloned the quest repo on a totally different machine</p>\n</li>\n<li>\n<p>Created a new test game.  It only calls ASLEvents, and was made in Quest 572 on the desktop.</p>\n</li>\n<li>\n<p>Ran the web player from Visual Studio (without changing anything at all; I only clicked 'Build', then switched to the WebPlayer, then pushed F5)</p>\n<ul>\n<li>the ASLEvent misbehaves in the same exact way.  It will only work one time.</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>\n<p>Opened the HTML Developer thing in my browser.</p>\n</li>\n<li>\n<p>Entered the JS ASLEvent function from the console, and it worked that way.</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>Added the new code into the newly cloned repo.</p>\n</li>\n<li>\n<p>Cleaned then rebuilt Quest.</p>\n</li>\n<li>\n<p>Added the ASLAttribute call to the game.</p>\n</li>\n<li>\n<p>Ran the web player.</p>\n</li>\n<li>\n<p>It is the same thing as before.  I can call ASLEvent() or ASLAttribute from the developer console, but it will only run one ASL Event or Attribute which is called from the game at one time.  It doesn't matter if it's an ASLEvent (which I did not modify) or an ASLAtrribute (which I just added).  It also doesn't matter if it's a version of Quest I've added the new code to.  One ASLEvent is all I get out of the web player when Visual Studio is hosting the game on a local server.</p>\n</li>\n</ul>\n<hr>\n<h3>CONCLUSION</h3>\n<p>This works.  the ASLEvent is just finicky when running the web player this way.</p>\n<p>I am submitting the pull request now.</p>\n<hr>\n<p>PS</p>\n<p>If my conclusion is incorrect (or might be), that will not upset me, but I would wish to be enlightened as to the reason(s), just so I can learn stuff.</p>\n\n",
      "PostDate": "2018-02-02T22:39:41.7554563Z",
      "LastEditDate": "2018-06-04T01:16:13.975983Z",
      "link": null
    },
    {
      "PostId": "7c036166-f459-4f6e-ad53-d13a40655bbb",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here's the skinny on ```TryFinishTurn()```, HK.\r\n\r\nI don't want any of this to happen when I only need to retrieve a value from JS.\r\n\r\n```ASLEvent()``` calls this to finish the turn because (I think) it's sole purpose was always to click on something which executed a command, therefore a turn needed to roll.\r\n\r\n```ASLAttribute()``` is a copy of ```ASLEvent()```, except the part of the script that calls ```TryFinishTurn()``` is commented out.\r\n\r\n<details>\r\n\r\n```\r\nprivate void TryFinishTurn()\r\n        {\r\n            TryRunOnFinallyScripts();\r\n            if (!m_callbacks.AnyOutstanding())\r\n            {\r\n                if (m_elements.ContainsKey(ElementType.Function, \"FinishTurn\"))\r\n                {\r\n                    try\r\n                    {\r\n                        RunProcedure(\"FinishTurn\");\r\n                    }\r\n                    catch (Exception ex)\r\n                    {\r\n                        LogException(ex);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        private void TryRunOnFinallyScripts()\r\n        {\r\n            if (m_callbacks.AnyOutstanding()) return;\r\n            IEnumerable<Callback> onReadyScripts = m_callbacks.FlushOnReadyCallbacks();\r\n            foreach (var callback in onReadyScripts)\r\n            {\r\n                RunScript(callback.Script, callback.Context);\r\n            }\r\n        }\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>Here's the skinny on <code>TryFinishTurn()</code>, HK.</p>\n<p>I don't want any of this to happen when I only need to retrieve a value from JS.</p>\n<p><code>ASLEvent()</code> calls this to finish the turn because (I think) it's sole purpose was always to click on something which executed a command, therefore a turn needed to roll.</p>\n<p><code>ASLAttribute()</code> is a copy of <code>ASLEvent()</code>, except the part of the script that calls <code>TryFinishTurn()</code> is commented out.</p>\n<details>\n<pre><code>private void TryFinishTurn()\n        {\n            TryRunOnFinallyScripts();\n            if (!m_callbacks.AnyOutstanding())\n            {\n                if (m_elements.ContainsKey(ElementType.Function, \"FinishTurn\"))\n                {\n                    try\n                    {\n                        RunProcedure(\"FinishTurn\");\n                    }\n                    catch (Exception ex)\n                    {\n                        LogException(ex);\n                    }\n                }\n            }\n        }\n\n        private void TryRunOnFinallyScripts()\n        {\n            if (m_callbacks.AnyOutstanding()) return;\n            IEnumerable&lt;Callback&gt; onReadyScripts = m_callbacks.FlushOnReadyCallbacks();\n            foreach (var callback in onReadyScripts)\n            {\n                RunScript(callback.Script, callback.Context);\n            }\n        }\n</code></pre>\n</details>\n\n",
      "PostDate": "2018-02-03T17:55:27.7504859Z",
      "LastEditDate": "2018-02-03T17:56:04.8087819Z",
      "link": null
    },
    {
      "PostId": "fcacd851-849d-47c5-a28c-bd4a5eab0883",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Could we call it `ASLMessage` or something?",
      "EditableFormat": "markdown",
      "HTML": "<p>Could we call it <code>ASLMessage</code> or something?</p>\n\n",
      "PostDate": "2018-02-03T19:18:45.1898197Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9dbff077-4ba9-4d9a-9470-fd05e149de2f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "We certainly can.\r\n\r\nI just picked ```ASLAttribute``` because I was only thinking of using it to set attributes.\r\n\r\nHow about ```ASLSet```?\r\n\r\n...or ```ASLMessage``` is perfectly fine, too.\r\n\r\n...but I was only calling a function that simply printed a message to show it in action.  I'd really use it to get return values from JS functions (like retrieving the actual time and date, and easily pulling the displayed text out of HTML).\r\n\r\nAs long as it doesn't finish the turn, we could call it ```ASLAntidisestablishmentarianism``` as far as I'm concerned.  (I'd type it out!)\r\n\r\n---\r\nSeriously, though:  Just say the word, and I'll change it to ```ASLMessage``` in the pull request.",
      "EditableFormat": "markdown",
      "HTML": "<p>We certainly can.</p>\n<p>I just picked <code>ASLAttribute</code> because I was only thinking of using it to set attributes.</p>\n<p>How about <code>ASLSet</code>?</p>\n<p>...or <code>ASLMessage</code> is perfectly fine, too.</p>\n<p>...but I was only calling a function that simply printed a message to show it in action.  I'd really use it to get return values from JS functions (like retrieving the actual time and date, and easily pulling the displayed text out of HTML).</p>\n<p>As long as it doesn't finish the turn, we could call it <code>ASLAntidisestablishmentarianism</code> as far as I'm concerned.  (I'd type it out!)</p>\n<hr>\n<p>Seriously, though:  Just say the word, and I'll change it to <code>ASLMessage</code> in the pull request.</p>\n\n",
      "PostDate": "2018-02-03T19:46:35.5126275Z",
      "LastEditDate": "2018-02-03T19:57:48.0761505Z",
      "link": null
    },
    {
      "PostId": "d8f6a405-dcbe-4df6-9f7f-4270e7adc743",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I was thinking \"message\" in the object-orientated sense where calling a method (function) on an object is also called sending a message to it.If that is not clear, may not be such a good idea.\r\n\r\nASLCall maybe?",
      "EditableFormat": "markdown",
      "HTML": "<p>I was thinking \"message\" in the object-orientated sense where calling a method (function) on an object is also called sending a message to it.If that is not clear, may not be such a good idea.</p>\n<p>ASLCall maybe?</p>\n\n",
      "PostDate": "2018-02-04T15:40:56.325043Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fa9ef351-d315-4294-9b1f-f17dadd7ba98",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh.\r\n\r\nWell, I learned something today!\r\n\r\nASLMessage or ASLCall...\r\n\r\nEither sounds good to me.  (ASLCall is easier to type.)",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh.</p>\n<p>Well, I learned something today!</p>\n<p>ASLMessage or ASLCall...</p>\n<p>Either sounds good to me.  (ASLCall is easier to type.)</p>\n\n",
      "PostDate": "2018-02-04T16:51:33.7838712Z",
      "LastEditDate": "2018-02-04T18:14:02.3802586Z",
      "link": null
    },
    {
      "PostId": "fa7af8df-0276-4e73-adf4-a09a18651097",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Duplicate post removed",
      "EditableFormat": "markdown",
      "HTML": "<p>Duplicate post removed</p>\n\n",
      "PostDate": "2018-02-04T18:11:44.8791058Z",
      "LastEditDate": "2018-02-04T18:12:55.7664721Z",
      "link": null
    },
    {
      "PostId": "5b53eedc-dc1c-4335-8ee1-11ca817830f5",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I believe I've found a fix which doesn't involve tampering with the source code.\r\n\r\n---\r\nHere is the modified ```FinishTurn()``` function:\r\n```\r\n  <function name=\"FinishTurn\">\r\n    if (not HasAttribute(game,\"aslcalling\")) {\r\n      game.aslcalling = false\r\n    }\r\n    if (not game.aslcalling) {\r\n      RunTurnScripts\r\n    }\r\n    if (game.aslcalling) {\r\n      game.aslcalling = false\r\n    }\r\n    UpdateStatusAttributes\r\n    CheckDarkness\r\n    UpdateObjectLinks\r\n  </function>\r\n```\r\n\r\n---\r\n...and here is the new ```AslCall()``` function:\r\n```\r\n  <function name=\"AslCall\" parameters=\"data\">\r\n    game.aslcalling = true\r\n    stuff = Split(data,\"=\")\r\n    obj_attr = stuff[0]\r\n    obj_attr = Split(obj_attr,\".\")\r\n    obj = obj_attr[0]\r\n    obj = GetObject(obj)\r\n    attr = obj_attr[1]\r\n    val = stuff[1]\r\n    if (EndsWith(val,\"_toInt\")) {\r\n      val = ToInt(Replace(val,\"_toInt\",\"\"))\r\n    }\r\n    else if (EndsWith(val,\"_toDouble\")) {\r\n      val = ToDouble(Replace(val,\"_toDouble\",\"\"))\r\n    }\r\n    set (obj, attr, val)\r\n  </function>\r\n```\r\n\r\n---\r\n\r\nThe example game:\r\n\r\nhttp://textadventures.co.uk/games/view/ah1jc6dzt0osqapak9ulya/aslcalling\r\n\r\n**NOTE:  When playing online, the ```.``` in a double is printed as a ```,```.**\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"AslCalling\">\r\n    <gameid>e7a54f73-820c-4f97-97f8-e00327fe4ddf</gameid>\r\n    <version>0.2</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <description>Example game.</description>\r\n    <attr name=\"autodescription_youarein\" type=\"int\">0</attr>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <description><![CDATA[{command:LOOK} or {command:WAIT} to finish a turn.  <br/><br/>The ASLEvents in this game's start script will not finish turns.  (This will work in scripts other than the starts script.  I'm just lazy.)<br/><br/><hr/><br/>After causing a single turn to pass, you might as well  quit.<br/><br/><hr/><br/>THANK YOU FOR PLAYING THIS EXAMPLE GAME!<br/><hr/>]]></description>\r\n    <enter type=\"script\">\r\n      JS.eval (\"ASLEvent('AslCall','player.aslcall_aka=KV||player.aslcall_int=42_toInt||player.aslcall_double=1.21_toDouble');\")\r\n    </enter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n  </object>\r\n  <turnscript name=\"turnscript_msg\">\r\n    <enabled />\r\n    <script><![CDATA[\r\n      msg (\"<br/>FIRING TURN SCRIPTS!<br/><br/>player.aslcall_aka = {player.aslcall_aka}<br/><br/>player.aslcall_int = {player.aslcall_int}<br/><br/>player.aslcall_double = {player.aslcall_double}\")\r\n    ]]></script>\r\n  </turnscript>\r\n  <function name=\"FinishTurn\">\r\n    if (not HasAttribute(game,\"aslcalling\")) {\r\n      game.aslcalling = false\r\n    }\r\n    if (not game.aslcalling) {\r\n      RunTurnScripts\r\n    }\r\n    if (game.aslcalling) {\r\n      game.aslcalling = false\r\n    }\r\n    UpdateStatusAttributes\r\n    CheckDarkness\r\n    UpdateObjectLinks\r\n  </function>\r\n  <function name=\"AslCall\" parameters=\"data\">\r\n    game.aslcalling = true\r\n    data = Split(data,\"||\")\r\n    foreach (bit, data) {\r\n      stuff = Split(bit,\"=\")\r\n      obj_attr = stuff[0]\r\n      obj_attr = Split(obj_attr,\".\")\r\n      obj = obj_attr[0]\r\n      obj = GetObject(obj)\r\n      attr = obj_attr[1]\r\n      val = stuff[1]\r\n      if (EndsWith(val,\"_toInt\")) {\r\n        val = ToInt(Replace(val,\"_toInt\",\"\"))\r\n      }\r\n      else if (EndsWith(val,\"_toDouble\")) {\r\n        val = ToDouble(Replace(val,\"_toDouble\",\"\"))\r\n      }\r\n      set (obj, attr, val)\r\n    }\r\n  </function>\r\n</asl>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I believe I've found a fix which doesn't involve tampering with the source code.</p>\n<hr>\n<p>Here is the modified <code>FinishTurn()</code> function:</p>\n<pre><code>  &lt;function name=\"FinishTurn\"&gt;\n    if (not HasAttribute(game,\"aslcalling\")) {\n      game.aslcalling = false\n    }\n    if (not game.aslcalling) {\n      RunTurnScripts\n    }\n    if (game.aslcalling) {\n      game.aslcalling = false\n    }\n    UpdateStatusAttributes\n    CheckDarkness\n    UpdateObjectLinks\n  &lt;/function&gt;\n</code></pre>\n<hr>\n<p>...and here is the new <code>AslCall()</code> function:</p>\n<pre><code>  &lt;function name=\"AslCall\" parameters=\"data\"&gt;\n    game.aslcalling = true\n    stuff = Split(data,\"=\")\n    obj_attr = stuff[0]\n    obj_attr = Split(obj_attr,\".\")\n    obj = obj_attr[0]\n    obj = GetObject(obj)\n    attr = obj_attr[1]\n    val = stuff[1]\n    if (EndsWith(val,\"_toInt\")) {\n      val = ToInt(Replace(val,\"_toInt\",\"\"))\n    }\n    else if (EndsWith(val,\"_toDouble\")) {\n      val = ToDouble(Replace(val,\"_toDouble\",\"\"))\n    }\n    set (obj, attr, val)\n  &lt;/function&gt;\n</code></pre>\n<hr>\n<p>The example game:</p>\n<p>http://textadventures.co.uk/games/view/ah1jc6dzt0osqapak9ulya/aslcalling</p>\n<p><strong>NOTE:  When playing online, the <code>.</code> in a double is printed as a <code>,</code>.</strong></p>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"AslCalling\"&gt;\n    &lt;gameid&gt;e7a54f73-820c-4f97-97f8-e00327fe4ddf&lt;/gameid&gt;\n    &lt;version&gt;0.2&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;description&gt;Example game.&lt;/description&gt;\n    &lt;attr name=\"autodescription_youarein\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description&gt;&lt;![CDATA[{command:LOOK} or {command:WAIT} to finish a turn.  &lt;br/&gt;&lt;br/&gt;The ASLEvents in this game's start script will not finish turns.  (This will work in scripts other than the starts script.  I'm just lazy.)&lt;br/&gt;&lt;br/&gt;&lt;hr/&gt;&lt;br/&gt;After causing a single turn to pass, you might as well  quit.&lt;br/&gt;&lt;br/&gt;&lt;hr/&gt;&lt;br/&gt;THANK YOU FOR PLAYING THIS EXAMPLE GAME!&lt;br/&gt;&lt;hr/&gt;]]&gt;&lt;/description&gt;\n    &lt;enter type=\"script\"&gt;\n      JS.eval (\"ASLEvent('AslCall','player.aslcall_aka=KV||player.aslcall_int=42_toInt||player.aslcall_double=1.21_toDouble');\")\n    &lt;/enter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;turnscript name=\"turnscript_msg\"&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;&lt;![CDATA[\n      msg (\"&lt;br/&gt;FIRING TURN SCRIPTS!&lt;br/&gt;&lt;br/&gt;player.aslcall_aka = {player.aslcall_aka}&lt;br/&gt;&lt;br/&gt;player.aslcall_int = {player.aslcall_int}&lt;br/&gt;&lt;br/&gt;player.aslcall_double = {player.aslcall_double}\")\n    ]]&gt;&lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;function name=\"FinishTurn\"&gt;\n    if (not HasAttribute(game,\"aslcalling\")) {\n      game.aslcalling = false\n    }\n    if (not game.aslcalling) {\n      RunTurnScripts\n    }\n    if (game.aslcalling) {\n      game.aslcalling = false\n    }\n    UpdateStatusAttributes\n    CheckDarkness\n    UpdateObjectLinks\n  &lt;/function&gt;\n  &lt;function name=\"AslCall\" parameters=\"data\"&gt;\n    game.aslcalling = true\n    data = Split(data,\"||\")\n    foreach (bit, data) {\n      stuff = Split(bit,\"=\")\n      obj_attr = stuff[0]\n      obj_attr = Split(obj_attr,\".\")\n      obj = obj_attr[0]\n      obj = GetObject(obj)\n      attr = obj_attr[1]\n      val = stuff[1]\n      if (EndsWith(val,\"_toInt\")) {\n        val = ToInt(Replace(val,\"_toInt\",\"\"))\n      }\n      else if (EndsWith(val,\"_toDouble\")) {\n        val = ToDouble(Replace(val,\"_toDouble\",\"\"))\n      }\n      set (obj, attr, val)\n    }\n  &lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2018-02-14T05:08:23.5039381Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
