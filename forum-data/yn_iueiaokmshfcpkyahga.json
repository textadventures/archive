{
  "Topic": {
    "TopicId": "yn_iueiaokmshfcpkyahga",
    "ForumId": "18",
    "Title": "Code for Printing an Image instead of a Standard Map Room?  [mostly mostly FINITO]",
    "LastUpdated": "2018-01-22T17:34:59.8597826Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "dab93d1d-1335-4904-a93e-eb5589d89295",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "When the map displays a new room, how do you display a picture instead of the 1x1 room?  Something to do with \"img src\"...",
      "EditableFormat": "markdown",
      "HTML": "<p>When the map displays a new room, how do you display a picture instead of the 1x1 room?  Something to do with \"img src\"...</p>\n\n",
      "PostDate": "2018-01-22T17:34:59.8597826Z",
      "LastEditDate": "2018-02-11T03:39:12.7397582Z",
      "link": null
    },
    {
      "PostId": "1a3b73ac-801c-4f2c-be0d-4886e206f570",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I can't figure it out.\r\n\r\nThis is the best I've come up with (displays an image INSTEAD OF THE MAP while in **another room**):\r\n\r\n**EDITED**\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6596.21854_KVMod-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Map Test\">\r\n    <gameid>22dff91e-f9d0-4446-b6a5-000c32b50197</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <gridmap />\r\n    <start type=\"script\"><![CDATA[\r\n      JS.eval (\"addText(\\\"<img id='map-image-pic1' style='display:none;margin-left:auto;margin-right:auto;margin-top:20px' src='https://i.imgur.com/d9UrZ6lb.jpg' />\\\");\")\r\n    ]]></start>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"north\" to=\"another room\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"another room\">\r\n    <inherit name=\"editor_room\" />\r\n    <beforeenter type=\"script\">\r\n      JS.eval (\"$('#map-image-pic1').insertBefore($('#gridCanvas')).css('display','block');$('#gridCanvas').hide();\")\r\n    </beforeenter>\r\n    <onexit type=\"script\">\r\n      JS.eval (\"$('#gridCanvas').show();$('#map-image-pic1').hide();\")\r\n    </onexit>\r\n    <exit alias=\"south\" to=\"room\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <exit alias=\"north\" to=\"third\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"third\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"south\" to=\"another room\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>I can't figure it out.</p>\n<p>This is the best I've come up with (displays an image INSTEAD OF THE MAP while in <strong>another room</strong>):</p>\n<p><strong>EDITED</strong></p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6596.21854_KVMod--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Map Test\"&gt;\n    &lt;gameid&gt;22dff91e-f9d0-4446-b6a5-000c32b50197&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;gridmap /&gt;\n    &lt;start type=\"script\"&gt;&lt;![CDATA[\n      JS.eval (\"addText(\\\"&lt;img id='map-image-pic1' style='display:none;margin-left:auto;margin-right:auto;margin-top:20px' src='https://i.imgur.com/d9UrZ6lb.jpg' /&gt;\\\");\")\n    ]]&gt;&lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"north\" to=\"another room\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"another room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      JS.eval (\"$('#map-image-pic1').insertBefore($('#gridCanvas')).css('display','block');$('#gridCanvas').hide();\")\n    &lt;/beforeenter&gt;\n    &lt;onexit type=\"script\"&gt;\n      JS.eval (\"$('#gridCanvas').show();$('#map-image-pic1').hide();\")\n    &lt;/onexit&gt;\n    &lt;exit alias=\"south\" to=\"room\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"north\" to=\"third\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"third\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"south\" to=\"another room\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2018-01-22T19:02:38.6904321Z",
      "LastEditDate": "2018-03-10T06:47:14.8536589Z",
      "link": null
    },
    {
      "PostId": "59af2c57-db74-4d1d-83a1-5484685f5d5d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think I can work out how to do this using JS; would take a fair bit of experimenting though, and I've got 3000 words still to write in a little over 3 hours.\r\nI'll see if I can get it working when I have a little more time, if I remember.",
      "EditableFormat": "markdown",
      "HTML": "<p>I think I can work out how to do this using JS; would take a fair bit of experimenting though, and I've got 3000 words still to write in a little over 3 hours.<br>\nI'll see if I can get it working when I have a little more time, if I remember.</p>\n\n",
      "PostDate": "2018-01-22T20:38:26.7084274Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "01118ee1-2bca-4a55-85c2-81a994c538c2",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks guys.  I thought this was a simple thing, but apparently not.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks guys.  I thought this was a simple thing, but apparently not.</p>\n\n",
      "PostDate": "2018-01-22T21:20:57.0493655Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cdf14a65-8967-452d-a7a2-4a3f8ac0edb6",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "My first guess is that you want a function like this:\r\n```\r\n  <function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\">\r\n    <![CDATA[\r\n    if (room.grid_render) {\r\n      if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\r\n\r\n        if (room.parent <> null) {\r\n          Grid_DrawRoom (room.parent, redraw, playerobject)\r\n        }\r\n\r\n        gridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")#\r\n        gridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\r\n        JS.Grid_DrawBox(gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\r\n        if (HasString(room, \"grid_image\")) {\r\n\r\n          // FIXME - Grid_DrawImage takes an \"id\" parameter; I have no idea what this is supposed to be.\r\n          // There needs to be a line here to set the \"imageid\" variable to something reasonable. Maybe the name of the room?\r\n\r\n          Grid_DrawImage (imageid, GetFileURL(room.grid_image), gridx, gridy, room.grid_width, room.grid_length)\r\n        }\r\n\r\n        if (LengthOf(room.grid_label) > 0) {\r\n          label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\r\n          label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\r\n          JS.Grid_DrawLabel(label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\r\n        }\r\n\r\n        foreach (exit, AllExits()) {\r\n          if (exit.grid_render and exit.parent = room and exit.grid_length > 0) {\r\n            Grid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\r\n          }\r\n        }\r\n\r\n        Grid_SetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\", true)\r\n      }\r\n    }\r\n    ]]>\r\n  </function>\r\n```\r\n\r\nNot yet tested, but I suspect someone who isn't panicking would be better at doing the experiments to make it work.\r\nThe function is designed to override the default one in the grid/map library; drawing an image for the room if it has a `grid_image` attribute containing the name of an image.",
      "EditableFormat": "markdown",
      "HTML": "<p>My first guess is that you want a function like this:</p>\n<pre><code>  &lt;function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"&gt;\n    &lt;![CDATA[\n    if (room.grid_render) {\n      if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\n\n        if (room.parent &lt;&gt; null) {\n          Grid_DrawRoom (room.parent, redraw, playerobject)\n        }\n\n        gridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")#\n        gridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\n        JS.Grid_DrawBox(gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\n        if (HasString(room, \"grid_image\")) {\n\n          // FIXME - Grid_DrawImage takes an \"id\" parameter; I have no idea what this is supposed to be.\n          // There needs to be a line here to set the \"imageid\" variable to something reasonable. Maybe the name of the room?\n\n          Grid_DrawImage (imageid, GetFileURL(room.grid_image), gridx, gridy, room.grid_width, room.grid_length)\n        }\n\n        if (LengthOf(room.grid_label) &gt; 0) {\n          label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\n          label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\n          JS.Grid_DrawLabel(label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\n        }\n\n        foreach (exit, AllExits()) {\n          if (exit.grid_render and exit.parent = room and exit.grid_length &gt; 0) {\n            Grid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\n          }\n        }\n\n        Grid_SetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\", true)\n      }\n    }\n    ]]&gt;\n  &lt;/function&gt;\n</code></pre>\n<p>Not yet tested, but I suspect someone who isn't panicking would be better at doing the experiments to make it work.<br>\nThe function is designed to override the default one in the grid/map library; drawing an image for the room if it has a <code>grid_image</code> attribute containing the name of an image.</p>\n\n",
      "PostDate": "2018-01-23T18:51:21.046227Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fd131918-ca2e-45f1-b244-d3a85d9efa0b",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I will test that out in a few hours.\r\n\r\nIt looks like a good learning experience, if nothing else.",
      "EditableFormat": "markdown",
      "HTML": "<p>I will test that out in a few hours.</p>\n<p>It looks like a good learning experience, if nothing else.</p>\n\n",
      "PostDate": "2018-01-23T20:32:39.1121094Z",
      "LastEditDate": "2018-01-23T22:53:48.7138071Z",
      "link": null
    },
    {
      "PostId": "bea4d24b-9010-450d-a22e-170b947ce766",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have not panicked yet and will test this out too...\r\n\r\nWhat does the \"redraw\" parameter do?",
      "EditableFormat": "markdown",
      "HTML": "<p>I have not panicked yet and will test this out too...</p>\n<p>What does the \"redraw\" parameter do?</p>\n\n",
      "PostDate": "2018-01-23T21:14:20.7829075Z",
      "LastEditDate": "2018-01-23T21:22:45.7025548Z",
      "link": null
    },
    {
      "PostId": "973c32a0-763f-4679-9a7a-55669cda0e39",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm usually fairly decent at adding debugging messages to get parameter values, but I'm getting nowhere fast with this.  (Still playing with it, though.)",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm usually fairly decent at adding debugging messages to get parameter values, but I'm getting nowhere fast with this.  (Still playing with it, though.)</p>\n\n",
      "PostDate": "2018-01-23T23:53:39.2790305Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2684aa58-0ce2-4050-ad4b-f73b4b04c330",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "As far as I can tell, 'redraw' causes the room to be drawn even if it's already been visited. The function I posted is the one that the existing map system uses; I just added the few lines to call DrawImage after DrawBox. If it works, then you could use this function to override the provided one.\r\n\r\nLooking at grid.js, I think this should mostly work. imageid is just an identifier for the image, so that you can replace one image with another. So maybe replace the imageid in my code with `room.name` (meaning that changing the `grid_image` attribute will cause a new image to replace the old one the next time the image is redrawn). I've not played with Paper before, and there's a lot of code I haven't looked at, but I think this might work.",
      "EditableFormat": "markdown",
      "HTML": "<p>As far as I can tell, 'redraw' causes the room to be drawn even if it's already been visited. The function I posted is the one that the existing map system uses; I just added the few lines to call DrawImage after DrawBox. If it works, then you could use this function to override the provided one.</p>\n<p>Looking at grid.js, I think this should mostly work. imageid is just an identifier for the image, so that you can replace one image with another. So maybe replace the imageid in my code with <code>room.name</code> (meaning that changing the <code>grid_image</code> attribute will cause a new image to replace the old one the next time the image is redrawn). I've not played with Paper before, and there's a lot of code I haven't looked at, but I think this might work.</p>\n\n",
      "PostDate": "2018-01-23T23:55:32.5361102Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8c57e24e-1d44-49de-a327-30d3717f58da",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ha!\r\n\r\nGot it (thanks to MrAngel)!\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Map Image Test\">\r\n    <gameid>22dff91e-f9d0-4446-b6a5-000c32b50197</gameid>\r\n    <version>0.0.1</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <gridmap />\r\n    <debugging />\r\n    <start type=\"script\">\r\n    </start>\r\n  </game>\r\n  <object name=\"room one\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"north\" to=\"room two\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"room two\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_image\">qu.png</attr>\r\n    <attr name=\"grid_borderwidth\" type=\"int\">0</attr>\r\n    <beforefirstenter type=\"script\">\r\n    </beforefirstenter>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">3</attr>\r\n    <exit alias=\"south\" to=\"room one\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <exit alias=\"north\" to=\"room three\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"room three\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_image\">https://i.imgur.com/mBf7TBeb.png</attr>\r\n    <exit alias=\"south\" to=\"room two\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <command name=\"debug_cmd\">\r\n    <pattern>debug</pattern>\r\n    <script>\r\n      if (not HasAttribute(game,\"debugging\")) {\r\n        game.debugging = false\r\n      }\r\n      if (game.debugging) {\r\n        game.debugging = false\r\n      }\r\n      else {\r\n        game.debugging = true\r\n      }\r\n      msg (\"Debugging has been turned {either game.debugging:ON|OFF}.\")\r\n    </script>\r\n  </command>\r\n  <function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"><![CDATA[\r\n    if (room.grid_render) {\r\n      if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\r\n        if (room.parent <> null) {\r\n          Grid_DrawRoom (room.parent, redraw, playerobject)\r\n        }\r\n        gridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")\r\n        gridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\r\n        JS.Grid_DrawBox (gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\r\n        if (HasString(room, \"grid_image\")) {\r\n          imgfile = false\r\n          imgexts = Split(\".png;.jpeg;.gif;.jpg;svg\",\";\")\r\n          foreach (ext, imgexts) {\r\n            if (EndsWith(room.grid_image,ext)) {\r\n              imgfile = true\r\n            }\r\n            if (StartsWith(room.grid_image,\"http\")) {\r\n              imgfile = false\r\n            }\r\n          }\r\n          if (imgfile) {\r\n            room.imageid = room.name+\"-grid-image\"\r\n            room.imageurl = GetFileURL (room.grid_image)\r\n            Grid_DrawImage (room.imageid, room.imageurl, gridx, gridy, room.grid_width, room.grid_length)\r\n          }\r\n          else {\r\n            if (HasBoolean(game,\"debugging\")) {\r\n              if (game.debugging) {\r\n                msg (\"<hr/><b>Error running script:<br/>[  Grid_DrawRoom script ERROR:  The attribute <code>'\"+room.name+\".grid_image'</code> must be set to a string containing the name of an image file in the game's directory. ]</center></b><hr/>\")\r\n              }\r\n            }\r\n            return (false)\r\n          }\r\n        }\r\n        if (LengthOf(room.grid_label) > 0) {\r\n          label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\r\n          label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\r\n          JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\r\n        }\r\n        foreach (exit, AllExits()) {\r\n          if (exit.grid_render and exit.parent = room and exit.grid_length > 0) {\r\n            Grid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\r\n          }\r\n        }\r\n        Grid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\r\n      }\r\n    }\r\n  ]]></function>\r\n</asl>\r\n```\r\n\r\n</details>\r\n\r\n---\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/corelibrary/grid_drawimage.html",
      "EditableFormat": "markdown",
      "HTML": "<p>Ha!</p>\n<p>Got it (thanks to MrAngel)!</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Map Image Test\"&gt;\n    &lt;gameid&gt;22dff91e-f9d0-4446-b6a5-000c32b50197&lt;/gameid&gt;\n    &lt;version&gt;0.0.1&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;gridmap /&gt;\n    &lt;debugging /&gt;\n    &lt;start type=\"script\"&gt;\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room one\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"north\" to=\"room two\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room two\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_image\"&gt;qu.png&lt;/attr&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;beforefirstenter type=\"script\"&gt;\n    &lt;/beforefirstenter&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;exit alias=\"south\" to=\"room one\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"north\" to=\"room three\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room three\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_image\"&gt;https://i.imgur.com/mBf7TBeb.png&lt;/attr&gt;\n    &lt;exit alias=\"south\" to=\"room two\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;command name=\"debug_cmd\"&gt;\n    &lt;pattern&gt;debug&lt;/pattern&gt;\n    &lt;script&gt;\n      if (not HasAttribute(game,\"debugging\")) {\n        game.debugging = false\n      }\n      if (game.debugging) {\n        game.debugging = false\n      }\n      else {\n        game.debugging = true\n      }\n      msg (\"Debugging has been turned {either game.debugging:ON|OFF}.\")\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"&gt;&lt;![CDATA[\n    if (room.grid_render) {\n      if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\n        if (room.parent &lt;&gt; null) {\n          Grid_DrawRoom (room.parent, redraw, playerobject)\n        }\n        gridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")\n        gridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\n        JS.Grid_DrawBox (gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\n        if (HasString(room, \"grid_image\")) {\n          imgfile = false\n          imgexts = Split(\".png;.jpeg;.gif;.jpg;svg\",\";\")\n          foreach (ext, imgexts) {\n            if (EndsWith(room.grid_image,ext)) {\n              imgfile = true\n            }\n            if (StartsWith(room.grid_image,\"http\")) {\n              imgfile = false\n            }\n          }\n          if (imgfile) {\n            room.imageid = room.name+\"-grid-image\"\n            room.imageurl = GetFileURL (room.grid_image)\n            Grid_DrawImage (room.imageid, room.imageurl, gridx, gridy, room.grid_width, room.grid_length)\n          }\n          else {\n            if (HasBoolean(game,\"debugging\")) {\n              if (game.debugging) {\n                msg (\"&lt;hr/&gt;&lt;b&gt;Error running script:&lt;br/&gt;[  Grid_DrawRoom script ERROR:  The attribute &lt;code&gt;'\"+room.name+\".grid_image'&lt;/code&gt; must be set to a string containing the name of an image file in the game's directory. ]&lt;/center&gt;&lt;/b&gt;&lt;hr/&gt;\")\n              }\n            }\n            return (false)\n          }\n        }\n        if (LengthOf(room.grid_label) &gt; 0) {\n          label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\n          label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\n          JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\n        }\n        foreach (exit, AllExits()) {\n          if (exit.grid_render and exit.parent = room and exit.grid_length &gt; 0) {\n            Grid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\n          }\n        }\n        Grid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n<hr>\n<p>http://docs.textadventures.co.uk/quest/functions/corelibrary/grid_drawimage.html</p>\n\n",
      "PostDate": "2018-01-24T01:24:03.2403991Z",
      "LastEditDate": "2018-03-10T06:46:44.2340144Z",
      "link": null
    },
    {
      "PostId": "f1f7a3e4-420d-48cd-b268-538e4d617174",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I tried to figure out how to see if ```GetFileURL()``` was returning a value without it messing everything up, but ```if(GetFileURL(input) <> null){}``` was never successful, even when I knew that ```GetFileURL()``` was returning the proper url.\r\n\r\nCurrently, if you don't have a valid image file name as that value, it messes up the map functionality in a different, seemingly random way each time you first enter that room.  After that, the map is upset, and it doesn't want to play with me anymore.\r\n\r\n---\r\nI also tried to figure out how to feed it an ACTUAL url, but I didn't dig very deeply because this code is deep, man.  It's far out!\r\n\r\n...and I was just thinking I was getting the hang of things...\r\n\r\nI need cookies and juice, then I'll see what else I can tear up in this here grid.  (Mm-hmm.  I reckon cookies and juice is good fer ya'.  Mm.)",
      "EditableFormat": "markdown",
      "HTML": "<p>I tried to figure out how to see if <code>GetFileURL()</code> was returning a value without it messing everything up, but <code>if(GetFileURL(input) &lt;&gt; null){}</code> was never successful, even when I knew that <code>GetFileURL()</code> was returning the proper url.</p>\n<p>Currently, if you don't have a valid image file name as that value, it messes up the map functionality in a different, seemingly random way each time you first enter that room.  After that, the map is upset, and it doesn't want to play with me anymore.</p>\n<hr>\n<p>I also tried to figure out how to feed it an ACTUAL url, but I didn't dig very deeply because this code is deep, man.  It's far out!</p>\n<p>...and I was just thinking I was getting the hang of things...</p>\n<p>I need cookies and juice, then I'll see what else I can tear up in this here grid.  (Mm-hmm.  I reckon cookies and juice is good fer ya'.  Mm.)</p>\n\n",
      "PostDate": "2018-01-24T01:31:57.9387542Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5f72c801-0456-44f7-ac66-e6dc625f94f4",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh yeah...\r\n\r\n```\r\ngridApi.drawCustomLayerImage = function(id, url, x, y, width, height) {\r\n    var existing = customLayerImages[id];\r\nar raster = existing ? existing : new Raster(url);\r\n    var resizeRaster = function() {\r\n        raster.scale(gridX.x * width / raster.bounds.width, gridY.y * height / raster.bounds.height);\r\n        raster.position = gridPoint(x, y) + raster.bounds.size / 2;\r\n    };\r\n    if (existing) {\r\n        resizeRaster();\r\n    } else {\r\n        raster.onLoad = resizeRaster;\r\n        addPathToCurrentLayerList(raster);\r\n        customLayerImages[id] = raster;\r\n    }    \r\n}\r\n```\r\n\r\n---\r\n\r\nI also need to research Raster.  (Never heard of it.)",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh yeah...</p>\n<pre><code>gridApi.drawCustomLayerImage = function(id, url, x, y, width, height) {\n    var existing = customLayerImages[id];\nar raster = existing ? existing : new Raster(url);\n    var resizeRaster = function() {\n        raster.scale(gridX.x * width / raster.bounds.width, gridY.y * height / raster.bounds.height);\n        raster.position = gridPoint(x, y) + raster.bounds.size / 2;\n    };\n    if (existing) {\n        resizeRaster();\n    } else {\n        raster.onLoad = resizeRaster;\n        addPathToCurrentLayerList(raster);\n        customLayerImages[id] = raster;\n    }    \n}\n</code></pre>\n<hr>\n<p>I also need to research Raster.  (Never heard of it.)</p>\n\n",
      "PostDate": "2018-01-24T01:34:25.3916038Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e73efeca-fab4-4e2e-bfe3-f4feb3232127",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't think you should need to play with anything that deep.\r\n\r\nIf the grid_image attribute is the name of an image in the game, it should work fine. Unfortunately, GetFileURL will happily convert a filename that doesn't exist into a URL that doesn't exist. Does GetFileData return null if it doesn't exist, or cause an error?\r\n\r\nIf you're using an external URL, just pass it to Grid_DrawImage. Or use JS to check it exists, and then use the JS version of Grid_DrawImage.",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't think you should need to play with anything that deep.</p>\n<p>If the grid_image attribute is the name of an image in the game, it should work fine. Unfortunately, GetFileURL will happily convert a filename that doesn't exist into a URL that doesn't exist. Does GetFileData return null if it doesn't exist, or cause an error?</p>\n<p>If you're using an external URL, just pass it to Grid_DrawImage. Or use JS to check it exists, and then use the JS version of Grid_DrawImage.</p>\n\n",
      "PostDate": "2018-01-24T04:12:41.8092649Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "423d3431-22b9-4250-97c0-2e8aea8b77e1",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well...\r\n\r\nIt looks like ```Raster``` is doing what ```GetFileURL()``` normally does, but that's only a theory.  (I still haven't looked into this one any further.)\r\n\r\nThe problem is that it doesn't throw an error when the grid_image attribute is wrong.  It messes the map up.  Usually the dot that represents the player disappears, but sometimes other things go haywire (like the game freezes, or the map just stops updating).\r\n\r\n\r\nI was trying to make it bypass the script if the url was incorrect.",
      "EditableFormat": "markdown",
      "HTML": "<p>Well...</p>\n<p>It looks like <code>Raster</code> is doing what <code>GetFileURL()</code> normally does, but that's only a theory.  (I still haven't looked into this one any further.)</p>\n<p>The problem is that it doesn't throw an error when the grid_image attribute is wrong.  It messes the map up.  Usually the dot that represents the player disappears, but sometimes other things go haywire (like the game freezes, or the map just stops updating).</p>\n<p>I was trying to make it bypass the script if the url was incorrect.</p>\n\n",
      "PostDate": "2018-01-24T05:55:16.068249Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6b15d160-494d-4399-8f17-f25aab1c9700",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "No, Raster takes a URL and transforms it into an array of pixel colours. If it's an image within the game file, you need to call GetFileURL first.\r\n\r\nIf you pass it an invalid URL, it seems to fail every time it tries to render the canvas; which means that part of the map disappears (the layers above the invalid image)\r\n\r\nIf you're using files within the game, then calling `GetFileData(room.grid_image)` first will cause an error, preventing the non-existing image from being added to the map (so it doesn't break anything later). Using an external URL is harder, because there doesn't seem to be any way to check that in Quest. We'll have to go to JS.\r\n\r\nCan't test this (can't override functions on web version, so I'm working from my mental model of the scripts), but fingers crossed :)\r\n\r\n[Note: I think this might fail to remove the image again when the map is cleared. I'll look at it when I'm less panicked over my amazon Sales Rank]\r\n```\r\n  <function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\">\r\n    <![CDATA[\r\n    if (room.grid_render) {\r\n      if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\r\n\r\n        if (room.parent <> null) {\r\n          Grid_DrawRoom (room.parent, redraw, playerobject)\r\n        }\r\n\r\n        gridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")#\r\n        gridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\r\n        JS.Grid_DrawBox(gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\r\n        if (HasString(room, \"grid_image\")) {\r\n          imgurl = room.grid_image\r\n          if (Instr(imgurl, \":\") = 0) {\r\n            // Not 100% sure, but I think a URL that returns an object always contains \":\"\r\n            // So we don't call GetFileURL if it starts with http://, or ftp://, or gopher: or something\r\n            imgurl = GetFileURL(imgurl)\r\n          }\r\n          JS.eval(\"var testimg = new Image();testimg.onload = function() { gridApi.drawCustomLayerImage('\"+room.name+\"-grid-image', '\"+imgurl+\"', \"+gridx+\", \"+gridy+\", \"+room.grid_width+\", \"+room.grid_height+\"); };testimg.onerror = function() { addText('Could not load map image!'); };testimg.src = '\"+imgurl+\"';\")\r\n        }\r\n\r\n        if (LengthOf(room.grid_label) > 0) {\r\n          label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\r\n          label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\r\n          JS.Grid_DrawLabel(label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\r\n        }\r\n\r\n        foreach (exit, AllExits()) {\r\n          if (exit.grid_render and exit.parent = room and exit.grid_length > 0) {\r\n            Grid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\r\n          }\r\n        }\r\n\r\n        Grid_SetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\", true)\r\n      }\r\n    }\r\n    ]]>\r\n  </function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>No, Raster takes a URL and transforms it into an array of pixel colours. If it's an image within the game file, you need to call GetFileURL first.</p>\n<p>If you pass it an invalid URL, it seems to fail every time it tries to render the canvas; which means that part of the map disappears (the layers above the invalid image)</p>\n<p>If you're using files within the game, then calling <code>GetFileData(room.grid_image)</code> first will cause an error, preventing the non-existing image from being added to the map (so it doesn't break anything later). Using an external URL is harder, because there doesn't seem to be any way to check that in Quest. We'll have to go to JS.</p>\n<p>Can't test this (can't override functions on web version, so I'm working from my mental model of the scripts), but fingers crossed :)</p>\n<p>[Note: I think this might fail to remove the image again when the map is cleared. I'll look at it when I'm less panicked over my amazon Sales Rank]</p>\n<pre><code>  &lt;function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"&gt;\n    &lt;![CDATA[\n    if (room.grid_render) {\n      if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\n\n        if (room.parent &lt;&gt; null) {\n          Grid_DrawRoom (room.parent, redraw, playerobject)\n        }\n\n        gridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")#\n        gridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\n        JS.Grid_DrawBox(gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\n        if (HasString(room, \"grid_image\")) {\n          imgurl = room.grid_image\n          if (Instr(imgurl, \":\") = 0) {\n            // Not 100% sure, but I think a URL that returns an object always contains \":\"\n            // So we don't call GetFileURL if it starts with http://, or ftp://, or gopher: or something\n            imgurl = GetFileURL(imgurl)\n          }\n          JS.eval(\"var testimg = new Image();testimg.onload = function() { gridApi.drawCustomLayerImage('\"+room.name+\"-grid-image', '\"+imgurl+\"', \"+gridx+\", \"+gridy+\", \"+room.grid_width+\", \"+room.grid_height+\"); };testimg.onerror = function() { addText('Could not load map image!'); };testimg.src = '\"+imgurl+\"';\")\n        }\n\n        if (LengthOf(room.grid_label) &gt; 0) {\n          label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\n          label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\n          JS.Grid_DrawLabel(label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\n        }\n\n        foreach (exit, AllExits()) {\n          if (exit.grid_render and exit.parent = room and exit.grid_length &gt; 0) {\n            Grid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\n          }\n        }\n\n        Grid_SetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\", true)\n      }\n    }\n    ]]&gt;\n  &lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2018-01-24T10:20:33.6200348Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d45b03e5-4470-41fe-88ed-1aa767bd923c",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I copied mrangel's code (the last posting) and put it in a new game.  I created 2 connected rooms and game them both a \"grid_image\" string attribute with the value of a .png file that I put in the game folder.  I created a global turn script that calls mrangel's function with 3 arguments -- game.pov.parent, True, game.pov.  Also called mrangel's function from the room's \"enter\" and \"beforeenter\" script attributes with the same 3 arguments.\r\n\r\nThe map works normally but the image doesn't display when the player moves back and forth between the 2 rooms.  Only the regular mapped room displays and the yellow player icon disappears.  Did I miss anything?  Thanks.",
      "EditableFormat": "markdown",
      "HTML": "<p>I copied mrangel's code (the last posting) and put it in a new game.  I created 2 connected rooms and game them both a \"grid_image\" string attribute with the value of a .png file that I put in the game folder.  I created a global turn script that calls mrangel's function with 3 arguments -- game.pov.parent, True, game.pov.  Also called mrangel's function from the room's \"enter\" and \"beforeenter\" script attributes with the same 3 arguments.</p>\n<p>The map works normally but the image doesn't display when the player moves back and forth between the 2 rooms.  Only the regular mapped room displays and the yellow player icon disappears.  Did I miss anything?  Thanks.</p>\n\n",
      "PostDate": "2018-01-27T06:25:44.9892607Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "96eff51a-8540-43cb-8742-d0045861e364",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Unfortunately I can't test it on the online version, and haven't got around to setting up the desktop version yet. I'll see if I can fix the issues when I've got a bit more free time.\r\n\r\n> I created a global turn script that calls mrangel's function with 3 arguments -- game.pov.parent, True, game.pov. Also called mrangel's function from the room's \"enter\" and \"beforeenter\" script attributes with the same 3 arguments.\r\n\r\nYou shouldn't need to do this. The function Grid_DrawRoom is automatically called by the existing map system; you don't need to call it yourself",
      "EditableFormat": "markdown",
      "HTML": "<p>Unfortunately I can't test it on the online version, and haven't got around to setting up the desktop version yet. I'll see if I can fix the issues when I've got a bit more free time.</p>\n<blockquote>\n<p>I created a global turn script that calls mrangel's function with 3 arguments -- game.pov.parent, True, game.pov. Also called mrangel's function from the room's \"enter\" and \"beforeenter\" script attributes with the same 3 arguments.</p>\n</blockquote>\n<p>You shouldn't need to do this. The function Grid_DrawRoom is automatically called by the existing map system; you don't need to call it yourself</p>\n\n",
      "PostDate": "2018-01-27T10:20:39.8914205Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8f877174-390a-4b3f-8285-6cfb4dec0f77",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "... I'm trying to work out why the image might not appear.\r\n\r\nCould you add a debugging statement to test if it's *trying* to draw the image? Change the JS line to\r\n\r\n`JS.eval(\"var testimg = new Image();testimg.onload = function() { alert('URL '+testimg.src+' exists, displaying map image');gridApi.drawCustomLayerImage('\"+room.name+\"-grid-image', testimg.src, \"+gridx+\", \"+gridy+\", \"+room.grid_width+\", \"+room.grid_height+\"); };testimg.onerror = function() { addText('Could not load map image!'); };testimg.src = '\"+imgurl+\"';\")`",
      "EditableFormat": "markdown",
      "HTML": "<p>... I'm trying to work out why the image might not appear.</p>\n<p>Could you add a debugging statement to test if it's <em>trying</em> to draw the image? Change the JS line to</p>\n<p><code>JS.eval(\"var testimg = new Image();testimg.onload = function() { alert('URL '+testimg.src+' exists, displaying map image');gridApi.drawCustomLayerImage('\"+room.name+\"-grid-image', testimg.src, \"+gridx+\", \"+gridy+\", \"+room.grid_width+\", \"+room.grid_height+\"); };testimg.onerror = function() { addText('Could not load map image!'); };testimg.src = '\"+imgurl+\"';\")</code></p>\n\n",
      "PostDate": "2018-01-27T10:29:52.2230225Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8924bb1b-d813-4119-bd95-e302e755f749",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I replaced the old JS line with the new one.  Quest does NOT print the error message \"Could not load map image!\" when you move back and forth between the two rooms.\r\n\r\nDon't know if this helps, but I added a print message line directly before your new JS line, and my message does print.  So at least we know Quest does reach your JS line.",
      "EditableFormat": "markdown",
      "HTML": "<p>I replaced the old JS line with the new one.  Quest does NOT print the error message \"Could not load map image!\" when you move back and forth between the two rooms.</p>\n<p>Don't know if this helps, but I added a print message line directly before your new JS line, and my message does print.  So at least we know Quest does reach your JS line.</p>\n\n",
      "PostDate": "2018-01-27T11:09:08.5722221Z",
      "LastEditDate": "2018-01-27T11:28:58.8588959Z",
      "link": null
    },
    {
      "PostId": "5598d867-992b-40b7-b8a2-98c849c2fc97",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Does it display the message to say that the URL exists? (I should probably have used `addText` rather than `alert`)\r\n\r\nI can't tell if I'm misunderstanding how the grid map works, or if there's an error in my image-validating code",
      "EditableFormat": "markdown",
      "HTML": "<p>Does it display the message to say that the URL exists? (I should probably have used <code>addText</code> rather than <code>alert</code>)</p>\n<p>I can't tell if I'm misunderstanding how the grid map works, or if there's an error in my image-validating code</p>\n\n",
      "PostDate": "2018-01-27T12:58:58.7457156Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c5d15059-fea1-4901-9f3e-cd19b55bd56f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Slightly more elegant jQuery-ish way of doing that line. If the above doesn't generate a message, maybe try this?\r\n\r\n`JS.eval(\"$.ajax({url: '\"+imgurl+\"',type:'HEAD',success:function() {addText('Map image loading');gridApi.drawCustomLayerImage('\"+room.name+\"-grid-image', '\"+imgurl+\"', \"+gridx+\", \"+gridy+\", \"+room.grid_width+\", \"+room.grid_height+\"); }, error: function() {addText('Could not load map image!'); }});\")`",
      "EditableFormat": "markdown",
      "HTML": "<p>Slightly more elegant jQuery-ish way of doing that line. If the above doesn't generate a message, maybe try this?</p>\n<p><code>JS.eval(\"$.ajax({url: '\"+imgurl+\"',type:'HEAD',success:function() {addText('Map image loading');gridApi.drawCustomLayerImage('\"+room.name+\"-grid-image', '\"+imgurl+\"', \"+gridx+\", \"+gridy+\", \"+room.grid_width+\", \"+room.grid_height+\"); }, error: function() {addText('Could not load map image!'); }});\")</code></p>\n\n",
      "PostDate": "2018-01-27T13:06:10.292703Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7d70f5e6-587b-4565-abf2-c3eeb1c21802",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'll test it out.\r\n\r\n--\r\nDoes this not work?\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/yn_iueiaokmshfcpkyahga/code-for-printing-an-image-instead-of-a-standard-map-room#8c57e24e-1d44-49de-a327-30d3717f58da\r\n\r\n\r\nIt works for me, as long as you put the correct file name.  (I was having problems setting up a catch to throw an error if the file name was incorrect or not in the game folder, but the image displayed correctly (I think).)",
      "EditableFormat": "markdown",
      "HTML": "<p>I'll test it out.</p>\n<p>--<br>\nDoes this not work?</p>\n<p>http://textadventures.co.uk/forum/quest/topic/yn_iueiaokmshfcpkyahga/code-for-printing-an-image-instead-of-a-standard-map-room#8c57e24e-1d44-49de-a327-30d3717f58da</p>\n<p>It works for me, as long as you put the correct file name.  (I was having problems setting up a catch to throw an error if the file name was incorrect or not in the game folder, but the image displayed correctly (I think).)</p>\n\n",
      "PostDate": "2018-01-27T13:58:32.9292261Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a515f07c-836c-47b8-893e-e749d1fcb3f1",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This works flawlessly for me (but I may be missing what we're trying to accomplish):\r\n\r\n\r\n**javascript.js** (UPDATED - now brings in image from url beginning with \"http\" or \"ftp\")\r\n\r\n<details>\r\n\r\n```\r\ngetFileUrlJS = function(filename){\r\n  var bool = filename.indexOf(\"http\") === 0;\r\n  if (!bool){bool = filename.indexOf(\"ftp\") === 0;}\r\n  if(!bool){\r\n    filename = encodeURIComponent(filename);\r\n    return \"quest://local/\" + filename;\r\n  }else{\r\n    return filename;\r\n  }\r\n};\r\n\r\nvar imagesToCheck = [];\r\n\r\nfunction checkImages(){\r\n  imagesToCheck.forEach(function(img){\r\n    isFileGood(img)\r\n  });\r\n};\r\n\r\nvar failedImgs = [];\r\n\r\nfunction imgFail(){\r\n  failedImgs.push(imgFile);\r\n};\r\n\r\nfunction isFileGood(url){\r\n  imgFile = getFileUrlJS(url);\r\n  addText(\"<img style='display:none' onload='addToMap()' onerror='imgFail()' src='\"+imgFile+\"'/>\");\r\n\r\n};\r\n\r\ncustomDrawImage = function(url){\r\n var imgFile = getFileUrlJS(url);\r\n var failnumber = failedImgs.indexOf(imgFile);\r\n if(failnumber === -1){gridApi.drawCustomLayerImage(roomImageId, imgFile, parseInt(gridX), parseInt(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));}\r\n};\r\n```\r\n\r\n\r\n---\r\n```\r\n    <start type=\"script\">\r\n      foreach (room, AllObjects()) {\r\n        if (HasAttribute(room,\"grid_image\")) {\r\n          JS.eval (\"imagesToCheck.push('\"+room.grid_image+\"');\")\r\n        }\r\n      }\r\n      JS.checkImages ()\r\n    </start>\r\n  </game>\r\n```\r\n\r\n\r\n---\r\n```\r\n<function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"><![CDATA[\r\n    if (room.grid_render) {\r\n      if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\r\n        if (room.parent <> null) {\r\n          Grid_DrawRoom (room.parent, redraw, playerobject)\r\n        }\r\n        gridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")\r\n        gridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\r\n        JS.Grid_DrawBox (gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\r\n        if (HasString(room, \"grid_image\")) {\r\n          imgfile = false\r\n          imgexts = Split(\".png;.jpeg;.gif;.jpg;svg\",\";\")\r\n          room.imageid = room.name+\"-grid-image\"\r\n          JS.eval (\"var roomImageId = '\"+room.imageid+\"';var gridX = '\"+gridx+\"';var gridY = '\"+gridy+\"';var roomGridWidth = '\"+room.grid_width+\"';var roomGridHeight = '\"+room.grid_length+\"';customDrawImage('\"+room.grid_image+\"');\")\r\n        }\r\n        if (LengthOf(room.grid_label) > 0) {\r\n          label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\r\n          label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\r\n          JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\r\n        }\r\n        foreach (exit, AllExits()) {\r\n          if (exit.grid_render and exit.parent = room and exit.grid_length > 0) {\r\n            Grid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\r\n          }\r\n        }\r\n        Grid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\r\n      }\r\n    }\r\n  ]]></function>\r\n```\r\n\r\n</details>\r\n\r\n---\r\nExample game code:\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Map Image Test\">\r\n    <gameid>22dff91e-f9d0-4446-b6a5-000c32b50197</gameid>\r\n    <version>0.0.1</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <gridmap />\r\n    <debugging />\r\n    <start type=\"script\">\r\n      foreach (room, AllObjects()) {\r\n        if (HasAttribute(room,\"grid_image\")) {\r\n          JS.eval (\"imagesToCheck.push('\"+room.grid_image+\"');\")\r\n        }\r\n      }\r\n      JS.checkImages ()\r\n    </start>\r\n  </game>\r\n  <object name=\"room one\">\r\n    <inherit name=\"editor_room\" />\r\n    <beforeenter type=\"script\">\r\n    </beforeenter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"north\" to=\"room two\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"room two\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_image\">qu.png</attr>\r\n    <attr name=\"grid_borderwidth\" type=\"int\">0</attr>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">3</attr>\r\n    <beforefirstenter type=\"script\">\r\n    </beforefirstenter>\r\n    <exit alias=\"south\" to=\"room one\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <exit alias=\"north\" to=\"room three\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"room three\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_image\">https://i.imgur.com/mBf7TBeb.png</attr>\r\n    <exit alias=\"south\" to=\"room two\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <command name=\"debug_cmd\">\r\n    <pattern>debug</pattern>\r\n    <script>\r\n      if (not HasAttribute(game,\"debugging\")) {\r\n        game.debugging = false\r\n      }\r\n      if (game.debugging) {\r\n        game.debugging = false\r\n      }\r\n      else {\r\n        game.debugging = true\r\n      }\r\n      msg (\"Debugging has been turned {either game.debugging:ON|OFF}.\")\r\n    </script>\r\n  </command>\r\n  <function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"><![CDATA[\r\n    if (room.grid_render) {\r\n      if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\r\n        if (room.parent <> null) {\r\n          Grid_DrawRoom (room.parent, redraw, playerobject)\r\n        }\r\n        gridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")\r\n        gridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\r\n        JS.Grid_DrawBox (gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\r\n        if (HasString(room, \"grid_image\")) {\r\n          imgfile = false\r\n          imgexts = Split(\".png;.jpeg;.gif;.jpg;svg\",\";\")\r\n          room.imageid = room.name+\"-grid-image\"\r\n          JS.eval (\"var roomImageId = '\"+room.imageid+\"';var gridX = '\"+gridx+\"';var gridY = '\"+gridy+\"';var roomGridWidth = '\"+room.grid_width+\"';var roomGridHeight = '\"+room.grid_length+\"';customDrawImage('\"+room.grid_image+\"');\")\r\n        }\r\n        if (LengthOf(room.grid_label) > 0) {\r\n          label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\r\n          label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\r\n          JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\r\n        }\r\n        foreach (exit, AllExits()) {\r\n          if (exit.grid_render and exit.parent = room and exit.grid_length > 0) {\r\n            Grid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\r\n          }\r\n        }\r\n        Grid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\r\n      }\r\n    }\r\n  ]]></function>\r\n  <javascript src=\"javascript.js\" />\r\n</asl>\r\n```\r\n\r\n</details>\r\n\r\n---\r\nimage\r\n\r\nhttps://drive.google.com/file/d/1ld4xZ8wI-uhLK6y_hTBUotwwLMHHOsaK/view?usp=sharing\r\n\r\n---\r\nThe image for room three previously threw an error.  Now, it does not.\r\n\r\n\r\n---\r\nVideo of this in action (very short):\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/35474452-0da98cc6-0354-11e8-83c2-37d17fda4b98.png)](https://drive.google.com/file/d/19QoTc5LwnvFVpc16NIj_3p8oP1BTXCw1/view?usp=sharing)",
      "EditableFormat": "markdown",
      "HTML": "<p>This works flawlessly for me (but I may be missing what we're trying to accomplish):</p>\n<p><strong>javascript.js</strong> (UPDATED - now brings in image from url beginning with \"http\" or \"ftp\")</p>\n<details>\n<pre><code>getFileUrlJS = function(filename){\n  var bool = filename.indexOf(\"http\") === 0;\n  if (!bool){bool = filename.indexOf(\"ftp\") === 0;}\n  if(!bool){\n    filename = encodeURIComponent(filename);\n    return \"quest://local/\" + filename;\n  }else{\n    return filename;\n  }\n};\n\nvar imagesToCheck = [];\n\nfunction checkImages(){\n  imagesToCheck.forEach(function(img){\n    isFileGood(img)\n  });\n};\n\nvar failedImgs = [];\n\nfunction imgFail(){\n  failedImgs.push(imgFile);\n};\n\nfunction isFileGood(url){\n  imgFile = getFileUrlJS(url);\n  addText(\"&lt;img style='display:none' onload='addToMap()' onerror='imgFail()' src='\"+imgFile+\"'/&gt;\");\n\n};\n\ncustomDrawImage = function(url){\n var imgFile = getFileUrlJS(url);\n var failnumber = failedImgs.indexOf(imgFile);\n if(failnumber === -1){gridApi.drawCustomLayerImage(roomImageId, imgFile, parseInt(gridX), parseInt(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));}\n};\n</code></pre>\n<hr>\n<pre><code>    &lt;start type=\"script\"&gt;\n      foreach (room, AllObjects()) {\n        if (HasAttribute(room,\"grid_image\")) {\n          JS.eval (\"imagesToCheck.push('\"+room.grid_image+\"');\")\n        }\n      }\n      JS.checkImages ()\n    &lt;/start&gt;\n  &lt;/game&gt;\n</code></pre>\n<hr>\n<pre><code>&lt;function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"&gt;&lt;![CDATA[\n    if (room.grid_render) {\n      if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\n        if (room.parent &lt;&gt; null) {\n          Grid_DrawRoom (room.parent, redraw, playerobject)\n        }\n        gridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")\n        gridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\n        JS.Grid_DrawBox (gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\n        if (HasString(room, \"grid_image\")) {\n          imgfile = false\n          imgexts = Split(\".png;.jpeg;.gif;.jpg;svg\",\";\")\n          room.imageid = room.name+\"-grid-image\"\n          JS.eval (\"var roomImageId = '\"+room.imageid+\"';var gridX = '\"+gridx+\"';var gridY = '\"+gridy+\"';var roomGridWidth = '\"+room.grid_width+\"';var roomGridHeight = '\"+room.grid_length+\"';customDrawImage('\"+room.grid_image+\"');\")\n        }\n        if (LengthOf(room.grid_label) &gt; 0) {\n          label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\n          label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\n          JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\n        }\n        foreach (exit, AllExits()) {\n          if (exit.grid_render and exit.parent = room and exit.grid_length &gt; 0) {\n            Grid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\n          }\n        }\n        Grid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n</details>\n<hr>\n<p>Example game code:</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Map Image Test\"&gt;\n    &lt;gameid&gt;22dff91e-f9d0-4446-b6a5-000c32b50197&lt;/gameid&gt;\n    &lt;version&gt;0.0.1&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;gridmap /&gt;\n    &lt;debugging /&gt;\n    &lt;start type=\"script\"&gt;\n      foreach (room, AllObjects()) {\n        if (HasAttribute(room,\"grid_image\")) {\n          JS.eval (\"imagesToCheck.push('\"+room.grid_image+\"');\")\n        }\n      }\n      JS.checkImages ()\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room one\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;beforeenter type=\"script\"&gt;\n    &lt;/beforeenter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"north\" to=\"room two\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room two\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_image\"&gt;qu.png&lt;/attr&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;beforefirstenter type=\"script\"&gt;\n    &lt;/beforefirstenter&gt;\n    &lt;exit alias=\"south\" to=\"room one\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"north\" to=\"room three\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room three\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_image\"&gt;https://i.imgur.com/mBf7TBeb.png&lt;/attr&gt;\n    &lt;exit alias=\"south\" to=\"room two\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;command name=\"debug_cmd\"&gt;\n    &lt;pattern&gt;debug&lt;/pattern&gt;\n    &lt;script&gt;\n      if (not HasAttribute(game,\"debugging\")) {\n        game.debugging = false\n      }\n      if (game.debugging) {\n        game.debugging = false\n      }\n      else {\n        game.debugging = true\n      }\n      msg (\"Debugging has been turned {either game.debugging:ON|OFF}.\")\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"&gt;&lt;![CDATA[\n    if (room.grid_render) {\n      if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\n        if (room.parent &lt;&gt; null) {\n          Grid_DrawRoom (room.parent, redraw, playerobject)\n        }\n        gridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")\n        gridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\n        JS.Grid_DrawBox (gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\n        if (HasString(room, \"grid_image\")) {\n          imgfile = false\n          imgexts = Split(\".png;.jpeg;.gif;.jpg;svg\",\";\")\n          room.imageid = room.name+\"-grid-image\"\n          JS.eval (\"var roomImageId = '\"+room.imageid+\"';var gridX = '\"+gridx+\"';var gridY = '\"+gridy+\"';var roomGridWidth = '\"+room.grid_width+\"';var roomGridHeight = '\"+room.grid_length+\"';customDrawImage('\"+room.grid_image+\"');\")\n        }\n        if (LengthOf(room.grid_label) &gt; 0) {\n          label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\n          label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\n          JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\n        }\n        foreach (exit, AllExits()) {\n          if (exit.grid_render and exit.parent = room and exit.grid_length &gt; 0) {\n            Grid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\n          }\n        }\n        Grid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n  &lt;javascript src=\"javascript.js\" /&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n<hr>\n<p>image</p>\n<p>https://drive.google.com/file/d/1ld4xZ8wI-uhLK6y_hTBUotwwLMHHOsaK/view?usp=sharing</p>\n<hr>\n<p>The image for room three previously threw an error.  Now, it does not.</p>\n<hr>\n<p>Video of this in action (very short):</p>\n<p><a href=\"https://drive.google.com/file/d/19QoTc5LwnvFVpc16NIj_3p8oP1BTXCw1/view?usp=sharing\"><img src=\"https://user-images.githubusercontent.com/30656341/35474452-0da98cc6-0354-11e8-83c2-37d17fda4b98.png\" alt=\"image\"></a></p>\n\n",
      "PostDate": "2018-01-27T17:03:17.4532124Z",
      "LastEditDate": "2018-03-10T06:49:14.0919441Z",
      "link": null
    },
    {
      "PostId": "e4e7326a-cbe7-435e-b39f-a41066583d12",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@KV - I was trying to display a local image, not one from imgur.  Can you modify your code to do that?\r\n\r\n@mrangel - I tried your latest code.  It does the same thing -- no image, no error message, just the regular map display.  Let me see if KV can modify his code.",
      "EditableFormat": "markdown",
      "HTML": "<p>@KV - I was trying to display a local image, not one from imgur.  Can you modify your code to do that?</p>\n<p>@mrangel - I tried your latest code.  It does the same thing -- no image, no error message, just the regular map display.  Let me see if KV can modify his code.</p>\n\n",
      "PostDate": "2018-01-30T07:56:03.6029924Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f09ba365-1eaa-498e-8241-38a920ecf210",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I was trying to display a local image, not one from imgur. Can you modify your code to do that?\r\n\r\nMaybe?  I'm fairly certain it will...\r\n\r\n(I'll go check.)\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I was trying to display a local image, not one from imgur. Can you modify your code to do that?</p>\n</blockquote>\n<p>Maybe?  I'm fairly certain it will...</p>\n<p>(I'll go check.)</p>\n\n",
      "PostDate": "2018-01-30T08:47:29.3416292Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8d617296-6c07-4d09-ab31-1be154cc8e02",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@Dcoder\r\n\r\nDo you like apples?\r\n\r\n<s>\r\n\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Images\">\r\n    <gameid>6bee0a7d-3023-4b48-8b17-7417a148659a</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <feature_pictureframe />\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum</description>\r\n    \r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"avatar\">\r\n      <inherit name=\"editor_object\" />\r\n      <listalias><![CDATA[<hr/><img onerror='$(this).hide();console.log(\"Image failed to load!\");' width='33%' src='quest://local/qu-shrunk.png'/><br/>Avatar<hr/>]]></listalias>\r\n    </object>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n---\r\n![image removed]()\r\n\r\n---\r\nYou have to start it with ```quest://local/```.\r\n\r\nLike:  ```src='quest://local/filename.png```.\r\n\r\n---\r\nWith a bad url, it hides the image element and saves an entry to the console.log:\r\n\r\n![image removed]()\r\n\r\n---\r\nYou can open the HTML tools, then click 'Console', to see the log I entered if it failed:\r\n\r\n![image removed]()\r\n\r\n---\r\n\r\n\r\n\r\nHow about _them_&nbsp;apples? </s>\r\n\r\n---\r\n\r\n</details>\r\n\r\nI hope you don't like apples.\r\n...because I thought apples were oranges while writing this post!  (I was thinking of a different thread (and game).  Sorry!)",
      "EditableFormat": "markdown",
      "HTML": "<p>@Dcoder</p>\n<p>Do you like apples?</p>\n<s>\n</s><details><s>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Images\"&gt;\n    &lt;gameid&gt;6bee0a7d-3023-4b48-8b17-7417a148659a&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;feature_pictureframe /&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum&lt;/description&gt;\n    \n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"avatar\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;listalias&gt;&lt;![CDATA[&lt;hr/&gt;&lt;img onerror='$(this).hide();console.log(\"Image failed to load!\");' width='33%' src='quest://local/qu-shrunk.png'/&gt;&lt;br/&gt;Avatar&lt;hr/&gt;]]&gt;&lt;/listalias&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p><img src=\"\" alt=\"image removed\"></p>\n<hr>\n<p>You have to start it with <code>quest://local/</code>.</p>\n<p>Like:  <code>src='quest://local/filename.png</code>.</p>\n<hr>\n<p>With a bad url, it hides the image element and saves an entry to the console.log:</p>\n<p><img src=\"\" alt=\"image removed\"></p>\n<hr>\n<p>You can open the HTML tools, then click 'Console', to see the log I entered if it failed:</p>\n<p><img src=\"\" alt=\"image removed\"></p>\n<hr>\n</s><p><s>How about <em>them</em>&nbsp;apples? </s></p>\n<hr>\n</details>\n<p>I hope you don't like apples.<br>\n...because I thought apples were oranges while writing this post!  (I was thinking of a different thread (and game).  Sorry!)</p>\n\n",
      "PostDate": "2018-01-30T09:11:07.413355Z",
      "LastEditDate": "2018-01-30T15:31:44.2273355Z",
      "link": null
    },
    {
      "PostId": "4728bd09-0dfa-476e-a1f9-f30b092c1998",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@KV\r\n\r\nUmm, just to be sure that we're on the same page, this is what I was trying to do -- I wanted to use the regular mapping function, but I wanted to replace the drawing of a standard room with a local image from the Quest game folder (or wherever on my local hard disk).\r\n\r\nSo I copied your \"example game code\" (the one with \"details\", above) into a new game.  I changed the \"grid_image\" attribute of \"room two\" to:\r\n\r\nquest://local/green-gray-forest-hi.png (the name of the image file in the same folder as the game file) -- that doesn't work.\r\n\r\nI also tried this pathname:\r\n\r\nC://Users/DH/Documents/Quest Games/KV TEST Map/green-gray-forest-hi.png (exact pathname to the image file) -- also doesn't work.  What's wrong here?",
      "EditableFormat": "markdown",
      "HTML": "<p>@KV</p>\n<p>Umm, just to be sure that we're on the same page, this is what I was trying to do -- I wanted to use the regular mapping function, but I wanted to replace the drawing of a standard room with a local image from the Quest game folder (or wherever on my local hard disk).</p>\n<p>So I copied your \"example game code\" (the one with \"details\", above) into a new game.  I changed the \"grid_image\" attribute of \"room two\" to:</p>\n<p>quest://local/green-gray-forest-hi.png (the name of the image file in the same folder as the game file) -- that doesn't work.</p>\n<p>I also tried this pathname:</p>\n<p>C://Users/DH/Documents/Quest Games/KV TEST Map/green-gray-forest-hi.png (exact pathname to the image file) -- also doesn't work.  What's wrong here?</p>\n\n",
      "PostDate": "2018-01-30T11:42:36.6691611Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2e3349c3-80be-4ee6-a9d2-0fdf09ae95dd",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think KV got confused :p\r\nThere's two threads open at present about adding an image; one in the map and one in the inventory.",
      "EditableFormat": "markdown",
      "HTML": "<p>I think KV got confused :p<br>\nThere's two threads open at present about adding an image; one in the map and one in the inventory.</p>\n\n",
      "PostDate": "2018-01-30T14:50:08.0931246Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fa6d98af-8104-4810-8b8f-6a7804e6faf9",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry!\r\n\r\nI'm offering oranges and telling you they're apples...\r\n\r\n\r\n\r\nI was deliriously tired and got example games crossed up!  (mrangel hit the nail on the head!)\r\n\r\n\r\n---\r\nThat's the first thing I got working, though.  It was the online images that gave me the problem for a short whilel\r\n\r\n---\r\n**OLD CODE (that loaded local images, but not online images):**\r\nhttp://textadventures.co.uk/forum/quest/topic/yn_iueiaokmshfcpkyahga/code-for-printing-an-image-instead-of-a-standard-map-room#8c57e24e-1d44-49de-a327-30d3717f58da\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/yn_iueiaokmshfcpkyahga/code-for-printing-an-image-instead-of-a-standard-map-room#a515f07c-836c-47b8-893e-e749d1fcb3f1\r\n\r\n---\r\n**NEW CODE THAT DISPLAYS ONLINE OR LOCAL IMAGES IN THE ROOM ON THE MAP:**\r\n\r\n\r\n<details>\r\n\r\nThis is an example game with a local file and an online image being displayed:\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Map Image Test\">\r\n    <gameid>22dff91e-f9d0-4446-b6a5-000c32b50197</gameid>\r\n    <version>0.0.1</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <gridmap />\r\n    <debugging />\r\n    <start type=\"script\">\r\n      foreach (room, AllObjects()) {\r\n        if (HasAttribute(room,\"grid_image\")) {\r\n          JS.eval (\"imagesToCheck.push('\"+room.grid_image+\"');\")\r\n        }\r\n      }\r\n      JS.checkImages ()\r\n    </start>\r\n  </game>\r\n  <object name=\"room one\">\r\n    <inherit name=\"editor_room\" />\r\n    <beforeenter type=\"script\">\r\n    </beforeenter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"north\" to=\"room two\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"room two\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_image\">qu.png</attr>\r\n    <attr name=\"grid_borderwidth\" type=\"int\">0</attr>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">3</attr>\r\n    <beforefirstenter type=\"script\">\r\n    </beforefirstenter>\r\n    <exit alias=\"south\" to=\"room one\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <exit alias=\"north\" to=\"room three\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"room three\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_image\">https://i.imgur.com/mBf7TBeb.png</attr>\r\n    <exit alias=\"south\" to=\"room two\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <command name=\"debug_cmd\">\r\n    <pattern>debug</pattern>\r\n    <script>\r\n      if (not HasAttribute(game,\"debugging\")) {\r\n        game.debugging = false\r\n      }\r\n      if (game.debugging) {\r\n        game.debugging = false\r\n      }\r\n      else {\r\n        game.debugging = true\r\n      }\r\n      msg (\"Debugging has been turned {either game.debugging:ON|OFF}.\")\r\n    </script>\r\n  </command>\r\n  <function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"><![CDATA[\r\n    if (room.grid_render) {\r\n      if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\r\n        if (room.parent <> null) {\r\n          Grid_DrawRoom (room.parent, redraw, playerobject)\r\n        }\r\n        gridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")\r\n        gridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\r\n        JS.Grid_DrawBox (gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\r\n        if (HasString(room, \"grid_image\")) {\r\n          imgfile = false\r\n          imgexts = Split(\".png;.jpeg;.gif;.jpg;svg\",\";\")\r\n          room.imageid = room.name+\"-grid-image\"\r\n          JS.eval (\"var roomImageId = '\"+room.imageid+\"';var gridX = '\"+gridx+\"';var gridY = '\"+gridy+\"';var roomGridWidth = '\"+room.grid_width+\"';var roomGridHeight = '\"+room.grid_length+\"';customDrawImage('\"+room.grid_image+\"');\")\r\n        }\r\n        if (LengthOf(room.grid_label) > 0) {\r\n          label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\r\n          label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\r\n          JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\r\n        }\r\n        foreach (exit, AllExits()) {\r\n          if (exit.grid_render and exit.parent = room and exit.grid_length > 0) {\r\n            Grid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\r\n          }\r\n        }\r\n        Grid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\r\n      }\r\n    }\r\n  ]]></function>\r\n  <javascript src=\"javascript.js\" />\r\n</asl>\r\n```\r\n\r\n**javascript.js**\r\n```\r\ngetFileUrlJS = function(filename){\r\n  var bool = filename.indexOf(\"http\") === 0;\r\n  if (!bool){bool = filename.indexOf(\"ftp\") === 0;}\r\n  if(!bool){\r\n    filename = encodeURIComponent(filename);\r\n    return \"quest://local/\" + filename;\r\n  }else{\r\n    return filename;\r\n  }\r\n};\r\n\r\nvar imagesToCheck = [];\r\n\r\nfunction checkImages(){\r\n  imagesToCheck.forEach(function(img){\r\n    isFileGood(img)\r\n  });\r\n};\r\n\r\nvar failedImgs = [];\r\n\r\nfunction imgFail(){\r\n  failedImgs.push(imgFile);\r\n};\r\n\r\nfunction isFileGood(url){\r\n  imgFile = getFileUrlJS(url);\r\n  addText(\"<img style='display:none' onload='addToMap()' onerror='imgFail()' src='\"+imgFile+\"'/>\");\r\n\r\n};\r\n\r\ncustomDrawImage = function(url){\r\n var imgFile = getFileUrlJS(url);\r\n var failnumber = failedImgs.indexOf(imgFile);\r\n if(failnumber === -1){gridApi.drawCustomLayerImage(roomImageId, imgFile, parseInt(gridX), parseInt(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));}\r\n};\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry!</p>\n<p>I'm offering oranges and telling you they're apples...</p>\n<p>I was deliriously tired and got example games crossed up!  (mrangel hit the nail on the head!)</p>\n<hr>\n<p>That's the first thing I got working, though.  It was the online images that gave me the problem for a short whilel</p>\n<hr>\n<p><strong>OLD CODE (that loaded local images, but not online images):</strong><br>\nhttp://textadventures.co.uk/forum/quest/topic/yn_iueiaokmshfcpkyahga/code-for-printing-an-image-instead-of-a-standard-map-room#8c57e24e-1d44-49de-a327-30d3717f58da</p>\n<p>http://textadventures.co.uk/forum/quest/topic/yn_iueiaokmshfcpkyahga/code-for-printing-an-image-instead-of-a-standard-map-room#a515f07c-836c-47b8-893e-e749d1fcb3f1</p>\n<hr>\n<p><strong>NEW CODE THAT DISPLAYS ONLINE OR LOCAL IMAGES IN THE ROOM ON THE MAP:</strong></p>\n<details>\n<p>This is an example game with a local file and an online image being displayed:</p>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Map Image Test\"&gt;\n    &lt;gameid&gt;22dff91e-f9d0-4446-b6a5-000c32b50197&lt;/gameid&gt;\n    &lt;version&gt;0.0.1&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;gridmap /&gt;\n    &lt;debugging /&gt;\n    &lt;start type=\"script\"&gt;\n      foreach (room, AllObjects()) {\n        if (HasAttribute(room,\"grid_image\")) {\n          JS.eval (\"imagesToCheck.push('\"+room.grid_image+\"');\")\n        }\n      }\n      JS.checkImages ()\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room one\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;beforeenter type=\"script\"&gt;\n    &lt;/beforeenter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"north\" to=\"room two\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room two\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_image\"&gt;qu.png&lt;/attr&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;beforefirstenter type=\"script\"&gt;\n    &lt;/beforefirstenter&gt;\n    &lt;exit alias=\"south\" to=\"room one\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"north\" to=\"room three\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room three\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_image\"&gt;https://i.imgur.com/mBf7TBeb.png&lt;/attr&gt;\n    &lt;exit alias=\"south\" to=\"room two\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;command name=\"debug_cmd\"&gt;\n    &lt;pattern&gt;debug&lt;/pattern&gt;\n    &lt;script&gt;\n      if (not HasAttribute(game,\"debugging\")) {\n        game.debugging = false\n      }\n      if (game.debugging) {\n        game.debugging = false\n      }\n      else {\n        game.debugging = true\n      }\n      msg (\"Debugging has been turned {either game.debugging:ON|OFF}.\")\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"&gt;&lt;![CDATA[\n    if (room.grid_render) {\n      if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\n        if (room.parent &lt;&gt; null) {\n          Grid_DrawRoom (room.parent, redraw, playerobject)\n        }\n        gridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")\n        gridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\n        JS.Grid_DrawBox (gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\n        if (HasString(room, \"grid_image\")) {\n          imgfile = false\n          imgexts = Split(\".png;.jpeg;.gif;.jpg;svg\",\";\")\n          room.imageid = room.name+\"-grid-image\"\n          JS.eval (\"var roomImageId = '\"+room.imageid+\"';var gridX = '\"+gridx+\"';var gridY = '\"+gridy+\"';var roomGridWidth = '\"+room.grid_width+\"';var roomGridHeight = '\"+room.grid_length+\"';customDrawImage('\"+room.grid_image+\"');\")\n        }\n        if (LengthOf(room.grid_label) &gt; 0) {\n          label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\n          label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\n          JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\n        }\n        foreach (exit, AllExits()) {\n          if (exit.grid_render and exit.parent = room and exit.grid_length &gt; 0) {\n            Grid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\n          }\n        }\n        Grid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n  &lt;javascript src=\"javascript.js\" /&gt;\n&lt;/asl&gt;\n</code></pre>\n<p><strong>javascript.js</strong></p>\n<pre><code>getFileUrlJS = function(filename){\n  var bool = filename.indexOf(\"http\") === 0;\n  if (!bool){bool = filename.indexOf(\"ftp\") === 0;}\n  if(!bool){\n    filename = encodeURIComponent(filename);\n    return \"quest://local/\" + filename;\n  }else{\n    return filename;\n  }\n};\n\nvar imagesToCheck = [];\n\nfunction checkImages(){\n  imagesToCheck.forEach(function(img){\n    isFileGood(img)\n  });\n};\n\nvar failedImgs = [];\n\nfunction imgFail(){\n  failedImgs.push(imgFile);\n};\n\nfunction isFileGood(url){\n  imgFile = getFileUrlJS(url);\n  addText(\"&lt;img style='display:none' onload='addToMap()' onerror='imgFail()' src='\"+imgFile+\"'/&gt;\");\n\n};\n\ncustomDrawImage = function(url){\n var imgFile = getFileUrlJS(url);\n var failnumber = failedImgs.indexOf(imgFile);\n if(failnumber === -1){gridApi.drawCustomLayerImage(roomImageId, imgFile, parseInt(gridX), parseInt(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));}\n};\n</code></pre>\n</details>\n\n",
      "PostDate": "2018-01-30T14:54:16.489543Z",
      "LastEditDate": "2018-03-10T06:49:37.346115Z",
      "link": null
    },
    {
      "PostId": "7b781a1d-95a8-457d-b345-18765ddcc982",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\n  <object name=\"room two\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_image\">qu.png</attr>\r\n```\r\n\r\n```\r\n  <object name=\"room three\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_image\">https://i.imgur.com/mBf7TBeb.png</attr>\r\n```\r\n\r\n---\r\n<a href=\"https://user-images.githubusercontent.com/30656341/35574943-c922b22c-05a0-11e8-9568-980d6eb99aa7.png\"><image width=\"33%\" src=\"https://user-images.githubusercontent.com/30656341/35574943-c922b22c-05a0-11e8-9568-980d6eb99aa7.png\"/></a>",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>  &lt;object name=\"room two\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_image\"&gt;qu.png&lt;/attr&gt;\n</code></pre>\n<pre><code>  &lt;object name=\"room three\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_image\"&gt;https://i.imgur.com/mBf7TBeb.png&lt;/attr&gt;\n</code></pre>\n<hr>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/35574943-c922b22c-05a0-11e8-9568-980d6eb99aa7.png\"><img width=\"33%\" src=\"https://user-images.githubusercontent.com/30656341/35574943-c922b22c-05a0-11e8-9568-980d6eb99aa7.png\"></a></p>\n\n",
      "PostDate": "2018-01-30T15:34:49.9547785Z",
      "LastEditDate": "2018-03-10T06:50:33.969767Z",
      "link": null
    },
    {
      "PostId": "2d59384f-4fcb-4166-b55c-678069e39e9d",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "No problem guys : )  Those were delicious orange-apples or whatever the heck they were, KV!\r\n\r\n@KV\r\nI'm copying your code \"NEW CODE THAT DISPLAYS ONLINE OR LOCAL IMAGES IN THE ROOM ON THE MAP\".  The part I don't understand is the \"javascript.js\" part (I've never worked with that before).  Where do I put that code?  Sorry to be such a JS newbie, haha.",
      "EditableFormat": "markdown",
      "HTML": "<p>No problem guys : )  Those were delicious orange-apples or whatever the heck they were, KV!</p>\n<p>@KV<br>\nI'm copying your code \"NEW CODE THAT DISPLAYS ONLINE OR LOCAL IMAGES IN THE ROOM ON THE MAP\".  The part I don't understand is the \"javascript.js\" part (I've never worked with that before).  Where do I put that code?  Sorry to be such a JS newbie, haha.</p>\n\n",
      "PostDate": "2018-01-31T10:44:32.3292422Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "91c28e5e-a8af-4a76-9075-03f5efb3b3f0",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You have to create the file **javascript.js**, and make sure it's in the game folder.\r\n\r\nThen, that second to last line in full code view will include it in the game.\r\n\r\n```\r\n  <javascript src=\"javascript.js\" />\r\n</asl>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>You have to create the file <strong>javascript.js</strong>, and make sure it's in the game folder.</p>\n<p>Then, that second to last line in full code view will include it in the game.</p>\n<pre><code>  &lt;javascript src=\"javascript.js\" /&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2018-01-31T10:56:15.5629194Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "311f8076-1b56-4d5f-8c8b-9a7188e5a0cf",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "...or....\r\n\r\n<a href=\"https://user-images.githubusercontent.com/30656341/35619300-36618776-0643-11e8-9dc5-19cdbb2398b6.png\"><image width=\"25%\" src=\"https://user-images.githubusercontent.com/30656341/35619300-36618776-0643-11e8-9dc5-19cdbb2398b6.png\" /></a><a href=\"https://user-images.githubusercontent.com/30656341/35619300-36618776-0643-11e8-9dc5-19cdbb2398b6.png\"><image width=\"25%\" src=\"https://user-images.githubusercontent.com/30656341/35619300-36618776-0643-11e8-9dc5-19cdbb2398b6.png\" /></a><a href=\"https://user-images.githubusercontent.com/30656341/35619329-49cf99ce-0643-11e8-9c81-5ca93696e661.png\"><image width=\"25%\" src=\"https://user-images.githubusercontent.com/30656341/35619329-49cf99ce-0643-11e8-9c81-5ca93696e661.png\" /></a><a href=\"https://user-images.githubusercontent.com/30656341/35619399-8403dac4-0643-11e8-9356-e8ab41a2e933.png\"><image width=\"25%\" src=\"https://user-images.githubusercontent.com/30656341/35619399-8403dac4-0643-11e8-9356-e8ab41a2e933.png\" /></a>\r\n\r\n---\r\nNow, it looks like you can't do anything here, but you can enter text (or paste it in), and Quest automatically saves your changes to the JS file in the game folder.\r\n\r\n\r\n\r\n<a href=\"https://user-images.githubusercontent.com/30656341/35619434-a6c8def6-0643-11e8-8c31-3e075fdde9ef.png\"><image width=\"25%\" src=\"https://user-images.githubusercontent.com/30656341/35619434-a6c8def6-0643-11e8-8c31-3e075fdde9ef.png\" /></a>",
      "EditableFormat": "markdown",
      "HTML": "<p>...or....</p>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/35619300-36618776-0643-11e8-9dc5-19cdbb2398b6.png\"><img width=\"25%\" src=\"https://user-images.githubusercontent.com/30656341/35619300-36618776-0643-11e8-9dc5-19cdbb2398b6.png\"></a><a href=\"https://user-images.githubusercontent.com/30656341/35619300-36618776-0643-11e8-9dc5-19cdbb2398b6.png\"><img width=\"25%\" src=\"https://user-images.githubusercontent.com/30656341/35619300-36618776-0643-11e8-9dc5-19cdbb2398b6.png\"></a><a href=\"https://user-images.githubusercontent.com/30656341/35619329-49cf99ce-0643-11e8-9c81-5ca93696e661.png\"><img width=\"25%\" src=\"https://user-images.githubusercontent.com/30656341/35619329-49cf99ce-0643-11e8-9c81-5ca93696e661.png\"></a><a href=\"https://user-images.githubusercontent.com/30656341/35619399-8403dac4-0643-11e8-9356-e8ab41a2e933.png\"><img width=\"25%\" src=\"https://user-images.githubusercontent.com/30656341/35619399-8403dac4-0643-11e8-9356-e8ab41a2e933.png\"></a></p>\n<hr>\n<p>Now, it looks like you can't do anything here, but you can enter text (or paste it in), and Quest automatically saves your changes to the JS file in the game folder.</p>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/35619434-a6c8def6-0643-11e8-8c31-3e075fdde9ef.png\"><img width=\"25%\" src=\"https://user-images.githubusercontent.com/30656341/35619434-a6c8def6-0643-11e8-8c31-3e075fdde9ef.png\"></a></p>\n\n",
      "PostDate": "2018-01-31T11:01:07.5622976Z",
      "LastEditDate": "2018-03-10T06:51:02.6826177Z",
      "link": null
    },
    {
      "PostId": "a903acef-c0ab-407b-9040-ef3fc9fc5f32",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "PS\r\n\r\nYou can also click \"Browse\" instead of \"New\" and select a JS file from your PC.  Quest will copy it into the game folder, just like it would an image or audio file when you add them via GUI.",
      "EditableFormat": "markdown",
      "HTML": "<p>PS</p>\n<p>You can also click \"Browse\" instead of \"New\" and select a JS file from your PC.  Quest will copy it into the game folder, just like it would an image or audio file when you add them via GUI.</p>\n\n",
      "PostDate": "2018-01-31T11:02:40.502631Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "869d6c61-8cec-4500-8f63-8899ff12e557",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yay!  It works!  Hooray!  Thank you for the hand-holding!\r\n\r\nI am making an outdoor map generator.  When I make some more progress, I will share it online.  Thanks again KV and mrangel.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yay!  It works!  Hooray!  Thank you for the hand-holding!</p>\n<p>I am making an outdoor map generator.  When I make some more progress, I will share it online.  Thanks again KV and mrangel.</p>\n\n",
      "PostDate": "2018-01-31T11:12:54.8777356Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "862c18e9-1ca8-4788-8b04-3221844cfb73",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(golf clap)",
      "EditableFormat": "markdown",
      "HTML": "<p>(golf clap)</p>\n\n",
      "PostDate": "2018-01-31T11:26:27.603219Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2e9ecf08-4496-4846-b12c-c3224aa908b6",
      "UserId": 341744,
      "Username": "adran06",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "... I might need that when I get further along in my game XD",
      "EditableFormat": "markdown",
      "HTML": "<p>... I might need that when I get further along in my game XD</p>\n\n",
      "PostDate": "2018-01-31T11:40:58.4923973Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6d5513ea-ee33-48ec-aa1c-7ad46a00c932",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok, I've got the demo finished and working when I play it on my desktop.  I've published it to a .quest file, and that works perfectly too on my desktop.\r\n\r\nHowever, after I've successfully uploaded it to the Quest website and play it online, a couple of things don't work -- no images show (these replaced the regular rooms), and the map does not work; i.e., only the starting room shows but other rooms don't show after you've moved into them (through teleport).  Movement from room to room otherwise seems to work, though (the text panel shows the correct room name and exits).  It seems that the room images display offline but not online, due to something about the modified \"grid_DrawRoom\" function and/or the added \"javascript.js\" function?  This is the demo:\r\n\r\nhttp://textadventures.co.uk/games/view/mctudqh-00mot77wz2zigg/map-rpg-demo\r\n\r\nI can show you my code on request.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok, I've got the demo finished and working when I play it on my desktop.  I've published it to a .quest file, and that works perfectly too on my desktop.</p>\n<p>However, after I've successfully uploaded it to the Quest website and play it online, a couple of things don't work -- no images show (these replaced the regular rooms), and the map does not work; i.e., only the starting room shows but other rooms don't show after you've moved into them (through teleport).  Movement from room to room otherwise seems to work, though (the text panel shows the correct room name and exits).  It seems that the room images display offline but not online, due to something about the modified \"grid_DrawRoom\" function and/or the added \"javascript.js\" function?  This is the demo:</p>\n<p>http://textadventures.co.uk/games/view/mctudqh-00mot77wz2zigg/map-rpg-demo</p>\n<p>I can show you my code on request.</p>\n\n",
      "PostDate": "2018-02-06T08:27:56.0895919Z",
      "LastEditDate": "2018-02-06T08:46:46.6903644Z",
      "link": null
    },
    {
      "PostId": "bca48045-57a6-49b8-83ef-d3605f4ae0f9",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wow.\r\n\r\nOkay...\r\n\r\nWhen I play online, the URL of my image become this:\r\n```\r\n<img src=\"https://textadventures.blob.core.windows.net/gameresources/22dff91e-f9d0-4446-b6a5-000c32b50197/qu.png\" width=\"22%\">\r\n```\r\n\r\nWhen I play on the desktop, the URL is this:\r\n```\r\n<img width=\"22%\" src=\"quest://local/qu.png?c=192514460\">\r\n```\r\n\r\n---\r\nThe number following ```?c=``` is the time since 1/1/2012.  \r\n\r\n```\r\n filename += \"?c=\" + (Convert.ToInt32((DateTime.Now - (New DateTime(2012, 1, 1))).TotalSeconds)).ToString()\r\n```\r\n\r\nAll of this can be left off in the desktop version.  You only need to prefix the filename with ```quest://local/``` to make it work.\r\n\r\n(I think the suffix has to do with cookies.)\r\n\r\n---\r\n```src=\"https://textadventures.blob.core.windows.net/gameresources/22dff91e-f9d0-4446-b6a5-000c32b50197/qu.png\"```\r\n\r\nI have no idea where that id comes from.\r\n\r\nBe back shortly.",
      "EditableFormat": "markdown",
      "HTML": "<p>Wow.</p>\n<p>Okay...</p>\n<p>When I play online, the URL of my image become this:</p>\n<pre><code>&lt;img src=\"https://textadventures.blob.core.windows.net/gameresources/22dff91e-f9d0-4446-b6a5-000c32b50197/qu.png\" width=\"22%\"&gt;\n</code></pre>\n<p>When I play on the desktop, the URL is this:</p>\n<pre><code>&lt;img width=\"22%\" src=\"quest://local/qu.png?c=192514460\"&gt;\n</code></pre>\n<hr>\n<p>The number following <code>?c=</code> is the time since 1/1/2012.</p>\n<pre><code> filename += \"?c=\" + (Convert.ToInt32((DateTime.Now - (New DateTime(2012, 1, 1))).TotalSeconds)).ToString()\n</code></pre>\n<p>All of this can be left off in the desktop version.  You only need to prefix the filename with <code>quest://local/</code> to make it work.</p>\n<p>(I think the suffix has to do with cookies.)</p>\n<hr>\n<p><code>src=\"https://textadventures.blob.core.windows.net/gameresources/22dff91e-f9d0-4446-b6a5-000c32b50197/qu.png\"</code></p>\n<p>I have no idea where that id comes from.</p>\n<p>Be back shortly.</p>\n\n",
      "PostDate": "2018-02-06T10:25:33.4412674Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "417e52f0-ad10-4eda-93d3-e6d3788e6e2a",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This appears to be what you need:\r\n```\r\nhttps://textadventures.blob.core.windows.net/gameresources/73ae1f35-2c11-41ce-8cb5-97bfb1392ce1/\r\n```\r\n\r\nGive me one more minute or two...",
      "EditableFormat": "markdown",
      "HTML": "<p>This appears to be what you need:</p>\n<pre><code>https://textadventures.blob.core.windows.net/gameresources/73ae1f35-2c11-41ce-8cb5-97bfb1392ce1/\n</code></pre>\n<p>Give me one more minute or two...</p>\n\n",
      "PostDate": "2018-02-06T10:30:13.1222352Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ac531aeb-d6fa-46be-9847-7f3488405408",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Try this.\r\n\r\n```\r\ngetFileUrlJS = function(filename){\r\n  var bool = filename.indexOf(\"http\") === 0;\r\n  if (!bool){bool = filename.indexOf(\"ftp\") === 0;}\r\n  if(!bool){\r\n    filename = encodeURIComponent(filename);\r\n    if(!webPlayer){return \"quest://local/\" + filename;}\r\n\telse {return\"https://textadventures.blob.core.windows.net/gameresources/73ae1f35-2c11-41ce-8cb5-97bfb1392ce1/\"+filename;}\r\n  }else{\r\n    return filename;\r\n  }\r\n};\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Try this.</p>\n<pre><code>getFileUrlJS = function(filename){\n  var bool = filename.indexOf(\"http\") === 0;\n  if (!bool){bool = filename.indexOf(\"ftp\") === 0;}\n  if(!bool){\n    filename = encodeURIComponent(filename);\n    if(!webPlayer){return \"quest://local/\" + filename;}\n\telse {return\"https://textadventures.blob.core.windows.net/gameresources/73ae1f35-2c11-41ce-8cb5-97bfb1392ce1/\"+filename;}\n  }else{\n    return filename;\n  }\n};\n</code></pre>\n\n",
      "PostDate": "2018-02-06T10:32:29.7379843Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3b92b467-f003-4b7a-ba49-1292c823a5a0",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That id will probably be different for every game, but I'm not sure about that.\r\n\r\nI did update my example with the new code (using the ID from my game).\r\n\r\nBEFORE:\r\n<a href=\"https://user-images.githubusercontent.com/30656341/35855245-42f7757c-0af8-11e8-8cd5-9add45f1b41f.png\"><image width=\"25%\" src=\"https://user-images.githubusercontent.com/30656341/35855245-42f7757c-0af8-11e8-8cd5-9add45f1b41f.png\"/></a>\r\n\r\n\r\n\r\n---\r\nAFTER:\r\n<a href=\"https://user-images.githubusercontent.com/30656341/35855265-4ee08400-0af8-11e8-9759-4bc5030b7e9e.png\"><image width=\"25%\" src=\"https://user-images.githubusercontent.com/30656341/35855265-4ee08400-0af8-11e8-9759-4bc5030b7e9e.png\"/></a>\r\n\r\n\r\n---\r\n...and it still works in the desktop player, too.",
      "EditableFormat": "markdown",
      "HTML": "<p>That id will probably be different for every game, but I'm not sure about that.</p>\n<p>I did update my example with the new code (using the ID from my game).</p>\n<p>BEFORE:<br>\n<a href=\"https://user-images.githubusercontent.com/30656341/35855245-42f7757c-0af8-11e8-8cd5-9add45f1b41f.png\"><img width=\"25%\" src=\"https://user-images.githubusercontent.com/30656341/35855245-42f7757c-0af8-11e8-8cd5-9add45f1b41f.png\"></a></p>\n<hr>\n<p>AFTER:<br>\n<a href=\"https://user-images.githubusercontent.com/30656341/35855265-4ee08400-0af8-11e8-9759-4bc5030b7e9e.png\"><img width=\"25%\" src=\"https://user-images.githubusercontent.com/30656341/35855265-4ee08400-0af8-11e8-9759-4bc5030b7e9e.png\"></a></p>\n<hr>\n<p>...and it still works in the desktop player, too.</p>\n\n",
      "PostDate": "2018-02-06T10:44:18.3852088Z",
      "LastEditDate": "2018-03-10T06:42:04.0257829Z",
      "link": null
    },
    {
      "PostId": "023d7377-b6ea-4428-b0e8-9e9df5a88fd7",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I bet a nickel that works for this game for you.\r\n\r\nHere's the code to directly display the grass (I'm only shrinking the width in the actual image's code to save space on this page):\r\n```\r\n<img src='https://textadventures.blob.core.windows.net/gameresources/73ae1f35-2c11-41ce-8cb5-97bfb1392ce1/Demo%20GrasslandB.jpg'/>\r\n```\r\n\r\n<img width='5%' src='https://textadventures.blob.core.windows.net/gameresources/73ae1f35-2c11-41ce-8cb5-97bfb1392ce1/Demo%20GrasslandB.jpg'/>",
      "EditableFormat": "markdown",
      "HTML": "<p>I bet a nickel that works for this game for you.</p>\n<p>Here's the code to directly display the grass (I'm only shrinking the width in the actual image's code to save space on this page):</p>\n<pre><code>&lt;img src='https://textadventures.blob.core.windows.net/gameresources/73ae1f35-2c11-41ce-8cb5-97bfb1392ce1/Demo%20GrasslandB.jpg'/&gt;\n</code></pre>\n<img width=\"5%\" src=\"https://textadventures.blob.core.windows.net/gameresources/73ae1f35-2c11-41ce-8cb5-97bfb1392ce1/Demo%20GrasslandB.jpg\">\n\n",
      "PostDate": "2018-02-06T10:49:17.8406625Z",
      "LastEditDate": "2018-03-10T06:39:30.0859028Z",
      "link": null
    },
    {
      "PostId": "1fc6d495-8cd3-45ff-86f1-806c67a1779c",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The ID is different for each game.\r\n\r\nIt appears you'll have to upload your game, then play online once to get the ID, then change your ```getFileUrlJS()``` script, then re-submit your game.\r\n\r\n---\r\nTo get around this, you can upload your images to an external site and use that link for both versions, desktop and online.\r\n\r\n---\r\nI don't know why the ```onerror``` thing doesn't keep it from messing everything up when playing online, either.\r\n\r\npaper.js is the script an incorrect URL in the map's code breaks online.  \r\n\r\nI've perused paper.js a few times, but it's still Greek to me!\r\n\r\nAnyway, I thought I had it whipped...\r\n\r\nSorry about all that!",
      "EditableFormat": "markdown",
      "HTML": "<p>The ID is different for each game.</p>\n<p>It appears you'll have to upload your game, then play online once to get the ID, then change your <code>getFileUrlJS()</code> script, then re-submit your game.</p>\n<hr>\n<p>To get around this, you can upload your images to an external site and use that link for both versions, desktop and online.</p>\n<hr>\n<p>I don't know why the <code>onerror</code> thing doesn't keep it from messing everything up when playing online, either.</p>\n<p>paper.js is the script an incorrect URL in the map's code breaks online.</p>\n<p>I've perused paper.js a few times, but it's still Greek to me!</p>\n<p>Anyway, I thought I had it whipped...</p>\n<p>Sorry about all that!</p>\n\n",
      "PostDate": "2018-02-06T10:55:03.0539572Z",
      "LastEditDate": "2018-02-06T11:01:12.1393754Z",
      "link": null
    },
    {
      "PostId": "c3cbcb89-ee32-4eed-be6e-b1d3ae82f2d8",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks KV.  So it sounds like I would need to get the ID for each image (don't even know where to find that).  It also sounds easier to just upload the images to imgur, so I'll probably go that route.  I'll re-post when I'm done...",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks KV.  So it sounds like I would need to get the ID for each image (don't even know where to find that).  It also sounds easier to just upload the images to imgur, so I'll probably go that route.  I'll re-post when I'm done...</p>\n\n",
      "PostDate": "2018-02-06T12:25:49.308654Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5eb61cf1-bd68-43cd-9b1b-7ac7d995ca23",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You only need an ID for each game.\r\n\r\nYou can just replace your function with the one I posted. \r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/yn_iueiaokmshfcpkyahga/code-for-printing-an-image-instead-of-a-standard-map-room-mostly-finito#ac531aeb-d6fa-46be-9847-7f3488405408\r\n\r\nIt has your game's ID on it already.\r\n\r\n...and it checks for the web player.  If you're online, it goes to the online image.  If on the desktop, it loads the local image.\r\n\r\nIt should work for every image in your game, too.\r\n\r\nSo, you wouldn't need to upload the files or change all that code.  You can just paste over that one function to fix the whole game.  (I think.  It definitely worked in my example game.)",
      "EditableFormat": "markdown",
      "HTML": "<p>You only need an ID for each game.</p>\n<p>You can just replace your function with the one I posted.</p>\n<p>http://textadventures.co.uk/forum/quest/topic/yn_iueiaokmshfcpkyahga/code-for-printing-an-image-instead-of-a-standard-map-room-mostly-finito#ac531aeb-d6fa-46be-9847-7f3488405408</p>\n<p>It has your game's ID on it already.</p>\n<p>...and it checks for the web player.  If you're online, it goes to the online image.  If on the desktop, it loads the local image.</p>\n<p>It should work for every image in your game, too.</p>\n<p>So, you wouldn't need to upload the files or change all that code.  You can just paste over that one function to fix the whole game.  (I think.  It definitely worked in my example game.)</p>\n\n",
      "PostDate": "2018-02-06T12:56:27.5253722Z",
      "LastEditDate": "2018-02-06T13:03:29.8103314Z",
      "link": null
    },
    {
      "PostId": "8dd680d6-0158-40d3-9bbe-c5a0444bf123",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> It appears you'll have to upload your game, then play online once to get the ID, then change your getFileUrlJS() script, then re-submit your game.\r\n\r\n(from memory, sorry if I got the function name wrong)\r\n\r\nQuest's `GetFileURL()` will prepend the ID to whatever string you pass it; without checking if the file exists, is a valid filename, or is already a URL. So you could easily call it once to generate the ID, and pass this to the JS. I *think* that calling `GetFileURL(\"\")` might be an easy way to get `https://textadventures.blob.core.windows.net/gameresources/73ae1f35-2c11-41ce-8cb5-97bfb1392ce1/` or `quest://local/` as appropriate.\r\n\r\nMaybe just cache it so your javascript can use it. In your UI initialisation script:\r\n```\r\nJS.setImagePath(GetFileUrl(\":FILENAME:\"))\r\n```\r\nand then the JS:\r\n```\r\nsetImagePath = function(path) {\r\n  window.questImagePath = path;\r\n};\r\n\r\ngetFileUrlJS = function(filename){\r\n  if(filename.indexOf(\"://\") > 0) {\r\n    return (filename);\r\n  } else {\r\n    return (window.questImagePath.replace(\":FILENAME:\", filename));\r\n  }\r\n};\r\n```\r\n\r\n\r\n(On a slight tangent; this might be an easy way to test if you're playing online or not without the need for JS callbacks. By checking if the value returned by `GetFileUrl(\"fnord\")` starts with `quest` or `http`)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>It appears you'll have to upload your game, then play online once to get the ID, then change your getFileUrlJS() script, then re-submit your game.</p>\n</blockquote>\n<p>(from memory, sorry if I got the function name wrong)</p>\n<p>Quest's <code>GetFileURL()</code> will prepend the ID to whatever string you pass it; without checking if the file exists, is a valid filename, or is already a URL. So you could easily call it once to generate the ID, and pass this to the JS. I <em>think</em> that calling <code>GetFileURL(\"\")</code> might be an easy way to get <code>https://textadventures.blob.core.windows.net/gameresources/73ae1f35-2c11-41ce-8cb5-97bfb1392ce1/</code> or <code>quest://local/</code> as appropriate.</p>\n<p>Maybe just cache it so your javascript can use it. In your UI initialisation script:</p>\n<pre><code>JS.setImagePath(GetFileUrl(\":FILENAME:\"))\n</code></pre>\n<p>and then the JS:</p>\n<pre><code>setImagePath = function(path) {\n  window.questImagePath = path;\n};\n\ngetFileUrlJS = function(filename){\n  if(filename.indexOf(\"://\") &gt; 0) {\n    return (filename);\n  } else {\n    return (window.questImagePath.replace(\":FILENAME:\", filename));\n  }\n};\n</code></pre>\n<p>(On a slight tangent; this might be an easy way to test if you're playing online or not without the need for JS callbacks. By checking if the value returned by <code>GetFileUrl(\"fnord\")</code> starts with <code>quest</code> or <code>http</code>)</p>\n\n",
      "PostDate": "2018-02-06T20:07:14.2109667Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d8f36b3d-2bbb-40cc-9383-c67fca82d2b9",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@KV -\r\nSo I replaced your original javascript.js function:\r\n```\r\ngetFileUrlJS = function(filename){\r\n  var bool = filename.indexOf(\"http\") === 0;\r\n  if (!bool){bool = filename.indexOf(\"ftp\") === 0;}\r\n  if(!bool){\r\n    filename = encodeURIComponent(filename);\r\n    return \"quest://local/\" + filename;\r\n  }else{\r\n    return filename;\r\n  }\r\n};\r\n\r\nvar imagesToCheck = [];\r\n\r\nfunction checkImages(){\r\n  imagesToCheck.forEach(function(img){\r\n    isFileGood(img)\r\n  });\r\n};\r\n\r\nvar failedImgs = [];\r\n\r\nfunction imgFail(){\r\n  failedImgs.push(imgFile);\r\n};\r\n\r\nfunction isFileGood(url){\r\n  imgFile = getFileUrlJS(url);\r\n  addText(\"<img style='display:none' onload='addToMap()' onerror='imgFail()' src='\"+imgFile+\"'/>\");\r\n\r\n};\r\n\r\ncustomDrawImage = function(url){\r\n var imgFile = getFileUrlJS(url);\r\n var failnumber = failedImgs.indexOf(imgFile);\r\n if(failnumber === -1){gridApi.drawCustomLayerImage(roomImageId, imgFile, parseInt(gridX), parseInt(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));}\r\n};\r\n```\r\nwith your new js code:\r\n```\r\ngetFileUrlJS = function(filename){\r\n  var bool = filename.indexOf(\"http\") === 0;\r\n  if (!bool){bool = filename.indexOf(\"ftp\") === 0;}\r\n  if(!bool){\r\n    filename = encodeURIComponent(filename);\r\n    if(!webPlayer){return \"quest://local/\" + filename;}\r\n\telse {return\"https://textadventures.blob.core.windows.net/gameresources/73ae1f35-2c11-41ce-8cb5-97bfb1392ce1\"+filename;}\r\n  }else{\r\n    return filename;\r\n  }\r\n};\r\n```\r\n...but the room images won't even display when I play the demo in the offline editor (just blank white rooms).  Or I should substitute the filename \"Map RPG Demo.quest\" wherever the js code says \"filename\"?",
      "EditableFormat": "markdown",
      "HTML": "<p>@KV -<br>\nSo I replaced your original javascript.js function:</p>\n<pre><code>getFileUrlJS = function(filename){\n  var bool = filename.indexOf(\"http\") === 0;\n  if (!bool){bool = filename.indexOf(\"ftp\") === 0;}\n  if(!bool){\n    filename = encodeURIComponent(filename);\n    return \"quest://local/\" + filename;\n  }else{\n    return filename;\n  }\n};\n\nvar imagesToCheck = [];\n\nfunction checkImages(){\n  imagesToCheck.forEach(function(img){\n    isFileGood(img)\n  });\n};\n\nvar failedImgs = [];\n\nfunction imgFail(){\n  failedImgs.push(imgFile);\n};\n\nfunction isFileGood(url){\n  imgFile = getFileUrlJS(url);\n  addText(\"&lt;img style='display:none' onload='addToMap()' onerror='imgFail()' src='\"+imgFile+\"'/&gt;\");\n\n};\n\ncustomDrawImage = function(url){\n var imgFile = getFileUrlJS(url);\n var failnumber = failedImgs.indexOf(imgFile);\n if(failnumber === -1){gridApi.drawCustomLayerImage(roomImageId, imgFile, parseInt(gridX), parseInt(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));}\n};\n</code></pre>\n<p>with your new js code:</p>\n<pre><code>getFileUrlJS = function(filename){\n  var bool = filename.indexOf(\"http\") === 0;\n  if (!bool){bool = filename.indexOf(\"ftp\") === 0;}\n  if(!bool){\n    filename = encodeURIComponent(filename);\n    if(!webPlayer){return \"quest://local/\" + filename;}\n\telse {return\"https://textadventures.blob.core.windows.net/gameresources/73ae1f35-2c11-41ce-8cb5-97bfb1392ce1\"+filename;}\n  }else{\n    return filename;\n  }\n};\n</code></pre>\n<p>...but the room images won't even display when I play the demo in the offline editor (just blank white rooms).  Or I should substitute the filename \"Map RPG Demo.quest\" wherever the js code says \"filename\"?</p>\n\n",
      "PostDate": "2018-02-07T10:21:12.2449647Z",
      "LastEditDate": "2018-02-07T10:45:21.5513404Z",
      "link": null
    },
    {
      "PostId": "471e191e-a506-4e4c-8c9c-fc92c685f6d6",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@mrangel -\r\nI replaced the javascript.js function with your code:\r\n```\r\nsetImagePath = function(path) {\r\n  window.questImagePath = path;\r\n};\r\n\r\ngetFileUrlJS = function(filename){\r\n  if(filename.indexOf(\"://\") > 0) {\r\n    return (filename);\r\n  } else {\r\n    return (window.questImagePath.replace(\":Map RPG Demo.quest:\", filename));\r\n  }\r\n};\r\n```\r\nAnd under the UI tab added:\r\n```\r\nJS.setImagePath(GetFileUrl(\":Map RPG Demo.quest:\"))\r\n```\r\nbut same as KV's code, the map shows blank white rooms without the images.  Uploaded to Quest website with same results.  Obviously I don't know what I'm doing...",
      "EditableFormat": "markdown",
      "HTML": "<p>@mrangel -<br>\nI replaced the javascript.js function with your code:</p>\n<pre><code>setImagePath = function(path) {\n  window.questImagePath = path;\n};\n\ngetFileUrlJS = function(filename){\n  if(filename.indexOf(\"://\") &gt; 0) {\n    return (filename);\n  } else {\n    return (window.questImagePath.replace(\":Map RPG Demo.quest:\", filename));\n  }\n};\n</code></pre>\n<p>And under the UI tab added:</p>\n<pre><code>JS.setImagePath(GetFileUrl(\":Map RPG Demo.quest:\"))\n</code></pre>\n<p>but same as KV's code, the map shows blank white rooms without the images.  Uploaded to Quest website with same results.  Obviously I don't know what I'm doing...</p>\n\n",
      "PostDate": "2018-02-07T10:44:26.4074613Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "110263e1-ab8b-4a22-ad5b-aa3fff9633c4",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've got that code in your game, and it works for me:\r\n\r\n<a href=\"https://user-images.githubusercontent.com/30656341/35915237-b11e403e-0bcb-11e8-893c-64195bdc910f.png\"><image width=\"30%\" src=\"https://user-images.githubusercontent.com/30656341/35915237-b11e403e-0bcb-11e8-893c-64195bdc910f.png\"/></a>\r\n\r\n\r\n---\r\nMaybe you're missing a function or something.\r\n\r\nIt doesn't look like you are, but all I changed was this one function in the JS and it works for me...\r\n\r\nHere's the entire JS file (I changed was ```getFileUrlJs()```):\r\n\r\n<details>\r\n\r\n```\r\ngetFileUrlJS = function(filename){\r\n  var bool = filename.indexOf(\"http\") === 0;\r\n  if (!bool){bool = filename.indexOf(\"ftp\") === 0;}\r\n  if(!bool){\r\n    filename = encodeURIComponent(filename);\r\n    if(!webPlayer){return \"quest://local/\" + filename;}\r\n\telse {return\"https://textadventures.blob.core.windows.net/gameresources/22dff91e-f9d0-4446-b6a5-000c32b50197/\"+filename;}\r\n  }else{\r\n    return filename;\r\n  }\r\n};\r\n\r\nvar imagesToCheck = [];\r\n\r\nfunction checkImages(){\r\n  imagesToCheck.forEach(function(img){\r\n    isFileGood(img)\r\n  });\r\n};\r\n\r\nvar failedImgs = [];\r\n\r\nfunction imgFail(){\r\n  failedImgs.push(imgFile);\r\n};\r\n\r\nfunction isFileGood(url){\r\n  imgFile = getFileUrlJS(url);\r\n  addText(\"<img style='display:none' onload='addToMap()' onerror='imgFail()' src='\"+imgFile+\"'/>\");\r\n\r\n};\r\n\r\ncustomDrawImage = function(url){\r\n var imgFile = getFileUrlJS(url);\r\n var failnumber = failedImgs.indexOf(imgFile);\r\n if(failnumber === -1){gridApi.drawCustomLayerImage(roomImageId, imgFile, parseFloat(gridX), parseFloat(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));}\r\n};\r\n```\r\n</details>\r\n\r\n---\r\nThe modded   ```Grid_DrawRoom``` (Quest function):\r\n\r\n<details>\r\n\r\n```\r\n<function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"><![CDATA[\r\n    if (room.grid_render) {\r\n      if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\r\n        if (room.parent <> null) {\r\n          Grid_DrawRoom (room.parent, redraw, playerobject)\r\n        }\r\n        gridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")\r\n        gridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\r\n        JS.Grid_DrawBox (gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\r\n        if (HasString(room, \"grid_image\")) {\r\n          imgfile = false\r\n          imgexts = Split(\".png;.jpeg;.gif;.jpg;svg\",\";\")\r\n          room.imageid = room.name+\"-grid-image\"\r\n          JS.eval (\"var roomImageId = '\"+room.imageid+\"';var gridX = '\"+gridx+\"';var gridY = '\"+gridy+\"';var roomGridWidth = '\"+room.grid_width+\"';var roomGridHeight = '\"+room.grid_length+\"';customDrawImage('\"+room.grid_image+\"');\")\r\n        }\r\n        if (LengthOf(room.grid_label) > 0) {\r\n          label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\r\n          label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\r\n          JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\r\n        }\r\n        foreach (exit, AllExits()) {\r\n          if (exit.grid_render and exit.parent = room and exit.grid_length > 0) {\r\n            Grid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\r\n          }\r\n        }\r\n        Grid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\r\n      }\r\n    }\r\n  ]]></function>\r\n```\r\n\r\n</details>\r\n\r\n---\r\n> should substitute the filename \"Map RPG Demo.quest\" wherever the js code says \"filename\"?\r\n\r\nYou shouldn't need to change anything.\r\n\r\nThe Quest function should send the filename, so you shouldn't be having to deal with filenames at all.\r\n\r\nAs long as the room has a ```grid_image``` attribute, the game will automatically send the filename to ```getFileUrlJs()```.\r\n\r\nIn fact, ```getFileUrlJs()```runs at the start of the game.  If the file doesn't return a good URL (or file path), ```getFileUrlJs()``` throws it into a 'failed to load' array (or list), and it is ignored by the map.\r\n\r\nThe purpose:  if the map tries to load a bad url, the map breaks.\r\n\r\n```isFileGood()``` is pre-loading the images.  Each image has an ```onerror()``` script, which adds any image which doesn't load to the blacklist.",
      "EditableFormat": "markdown",
      "HTML": "<p>I've got that code in your game, and it works for me:</p>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/35915237-b11e403e-0bcb-11e8-893c-64195bdc910f.png\"><img width=\"30%\" src=\"https://user-images.githubusercontent.com/30656341/35915237-b11e403e-0bcb-11e8-893c-64195bdc910f.png\"></a></p>\n<hr>\n<p>Maybe you're missing a function or something.</p>\n<p>It doesn't look like you are, but all I changed was this one function in the JS and it works for me...</p>\n<p>Here's the entire JS file (I changed was <code>getFileUrlJs()</code>):</p>\n<details>\n<pre><code>getFileUrlJS = function(filename){\n  var bool = filename.indexOf(\"http\") === 0;\n  if (!bool){bool = filename.indexOf(\"ftp\") === 0;}\n  if(!bool){\n    filename = encodeURIComponent(filename);\n    if(!webPlayer){return \"quest://local/\" + filename;}\n\telse {return\"https://textadventures.blob.core.windows.net/gameresources/22dff91e-f9d0-4446-b6a5-000c32b50197/\"+filename;}\n  }else{\n    return filename;\n  }\n};\n\nvar imagesToCheck = [];\n\nfunction checkImages(){\n  imagesToCheck.forEach(function(img){\n    isFileGood(img)\n  });\n};\n\nvar failedImgs = [];\n\nfunction imgFail(){\n  failedImgs.push(imgFile);\n};\n\nfunction isFileGood(url){\n  imgFile = getFileUrlJS(url);\n  addText(\"&lt;img style='display:none' onload='addToMap()' onerror='imgFail()' src='\"+imgFile+\"'/&gt;\");\n\n};\n\ncustomDrawImage = function(url){\n var imgFile = getFileUrlJS(url);\n var failnumber = failedImgs.indexOf(imgFile);\n if(failnumber === -1){gridApi.drawCustomLayerImage(roomImageId, imgFile, parseFloat(gridX), parseFloat(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));}\n};\n</code></pre>\n</details>\n<hr>\n<p>The modded   <code>Grid_DrawRoom</code> (Quest function):</p>\n<details>\n<pre><code>&lt;function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"&gt;&lt;![CDATA[\n    if (room.grid_render) {\n      if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\n        if (room.parent &lt;&gt; null) {\n          Grid_DrawRoom (room.parent, redraw, playerobject)\n        }\n        gridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")\n        gridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\n        JS.Grid_DrawBox (gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\n        if (HasString(room, \"grid_image\")) {\n          imgfile = false\n          imgexts = Split(\".png;.jpeg;.gif;.jpg;svg\",\";\")\n          room.imageid = room.name+\"-grid-image\"\n          JS.eval (\"var roomImageId = '\"+room.imageid+\"';var gridX = '\"+gridx+\"';var gridY = '\"+gridy+\"';var roomGridWidth = '\"+room.grid_width+\"';var roomGridHeight = '\"+room.grid_length+\"';customDrawImage('\"+room.grid_image+\"');\")\n        }\n        if (LengthOf(room.grid_label) &gt; 0) {\n          label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\n          label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\n          JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\n        }\n        foreach (exit, AllExits()) {\n          if (exit.grid_render and exit.parent = room and exit.grid_length &gt; 0) {\n            Grid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\n          }\n        }\n        Grid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n</details>\n<hr>\n<blockquote>\n<p>should substitute the filename \"Map RPG Demo.quest\" wherever the js code says \"filename\"?</p>\n</blockquote>\n<p>You shouldn't need to change anything.</p>\n<p>The Quest function should send the filename, so you shouldn't be having to deal with filenames at all.</p>\n<p>As long as the room has a <code>grid_image</code> attribute, the game will automatically send the filename to <code>getFileUrlJs()</code>.</p>\n<p>In fact, <code>getFileUrlJs()</code>runs at the start of the game.  If the file doesn't return a good URL (or file path), <code>getFileUrlJs()</code> throws it into a 'failed to load' array (or list), and it is ignored by the map.</p>\n<p>The purpose:  if the map tries to load a bad url, the map breaks.</p>\n<p><code>isFileGood()</code> is pre-loading the images.  Each image has an <code>onerror()</code> script, which adds any image which doesn't load to the blacklist.</p>\n\n",
      "PostDate": "2018-02-07T11:59:52.8401439Z",
      "LastEditDate": "2018-03-10T06:38:10.7367739Z",
      "link": null
    },
    {
      "PostId": "01e2d89f-8e98-4ad2-b7b6-05229b325b23",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I combined some of my code with some of mrangel's.\r\n\r\nIt now works online or offline, with included local files or with online images.\r\n\r\n---\r\nTry this:\r\n\r\n1\\. Create a new game.\r\n\r\n2\\. Include this library:\r\nhttps://github.com/KVonGit/QuestStuff/blob/master/libraries/GridImageLib/GridImageLib.zip?raw=true\r\n\r\n3\\. Make sure you have at least 2 or 3 rooms to move through (just to test things out).\r\n\r\n4\\. Enable the map and add ```SetupGridImages``` to your User Interface Initialisation script.\r\n\r\n5\\. Select a room in the editor, and you will see a new \"Grid Image\" tab.  Click on that.\r\n\r\n6\\.  Use the dropdown to select and import a local image (as you normally would), OR check the box to enter a URL (to use an online image).\r\n\r\n7\\.  That's it.  Give it a test run!  Let me know if it works!\r\n\r\n---\r\nhttp://textadventures.co.uk/games/view/cl4g-hnzikujwr2rofu68a/gridimglib-tester\r\n\r\n---\r\n<img width='33%' src='https://user-images.githubusercontent.com/30656341/35951929-304c4c4e-0c43-11e8-98bd-f1a7708d6f46.png'/><img width='33%' src='https://user-images.githubusercontent.com/30656341/35951938-39cd3ada-0c43-11e8-8756-41a9136e8da7.png'/><img width='33%' src='https://user-images.githubusercontent.com/30656341/35951950-4801b702-0c43-11e8-813a-6eaa773cf463.png'/>\r\n\r\n---\r\n\r\n---\r\n**The Example Game**\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <include ref=\"GridImageLib.aslx\" />\r\n  <game name=\"Image Map\">\r\n    <gameid>f127803f-b2dd-4ced-b58c-bd9202fe0284</gameid>\r\n    <version>2.3</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <gridmap />\r\n    <respondtogridclicks />\r\n    <feature_advancedscripts />\r\n    <inituserinterface type=\"script\"><![CDATA[\r\n      SetupGridImages\r\n    ]]></inituserinterface>\r\n    <commandpane type=\"boolean\">false</commandpane>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <gridimg_custompath />\r\n    <attr name=\"grid_image\">https://i.imgur.com/mBf7TBeb.png</attr>\r\n    <enter type=\"script\">\r\n      Grid_SetGridCoordinateForPlayer (game.pov, attic, \"z\", Grid_GetGridCoordinateForPlayer(game.pov, this, \"z\")+1)\r\n    </enter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n      <changedparent type=\"script\">\r\n        if (game.pov = this) {\r\n          if (IsDefined(\"oldvalue\")) {\r\n            OnEnterRoom (oldvalue)\r\n            this.lastparent = oldvalue\r\n          }\r\n          else {\r\n            OnEnterRoom (null)\r\n          }\r\n          if (game.gridmap) {\r\n            MergePOVCoordinates\r\n          }\r\n        }\r\n        this.hasbeenmoved = true\r\n      </changedparent>\r\n    </object>\r\n    <exit alias=\"north\" to=\"second room\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"up\" to=\"attic\">\r\n      <inherit name=\"updirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"second room\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_image\">http://cdn3.everyjoe.com/wp-content/gallery/kate-upton-zero-gravity/kate-upton-zero-gravity-1.jpg</attr>\r\n    <gridimg_custompath />\r\n    <exit alias=\"south\" to=\"room\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"attic\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_image\">http://cdn3.everyjoe.com/wp-content/gallery/kate-upton-zero-gravity/kate-upton-zero-gravity-2.jpg</attr>\r\n    <enter type=\"script\">\r\n      Grid_SetGridCoordinateForPlayer (game.pov, this, \"z\", Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\")+1)\r\n    </enter>\r\n    <exit alias=\"down\" to=\"room\">\r\n      <inherit name=\"downdirection\" />\r\n    </exit>\r\n  </object>\r\n  <function name=\"GridSquareClick\" parameters=\"x, y\"><![CDATA[\r\n    z = Grid_GetGridCoordinateForPlayer(game.pov, game.pov.parent, \"z\")\r\n    d = Grid_GetPlayerCoordinateDictionary(player)\r\n    foreach (key, d) {\r\n      d2 = DictionaryItem(d, key)\r\n      if (DictionaryContains(d2, \"grid_isdrawn\")) {\r\n        r = GetObject(key)\r\n        if (InGridRoom(r, d2, x, y, z)) {\r\n          if (not game.pov.parent = r) {\r\n            msg (\"<br/>>map_click-goto: \"+GetDisplayName(r)+\"<br/>\")\r\n            MoveObject (game.pov, r)\r\n            JS.scrollToEnd ()\r\n          }\r\n          else {\r\n            msg (\"<br/>>map_click-look<br/>\")\r\n            ShowRoomDescription\r\n            JS.scrollToEnd ()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ]]></function>\r\n  <function name=\"InGridRoom\" parameters=\"room, dict, x, y, z\" type=\"boolean\"><![CDATA[\r\n    flag = DictionaryItem(dict, \"grid_isdrawn\")\r\n    if (not flag) {\r\n      return (false)\r\n    }\r\n    z1 = DictionaryItem(dict, \"z\")\r\n    if (not z = z1) {\r\n      return (false)\r\n    }\r\n    n = DictionaryItem(dict, \"x\")\r\n    x1 = n - room.grid_width / 2.0\r\n    x2 = x1 + room.grid_width\r\n    n = DictionaryItem(dict, \"y\")\r\n    y1 = n - room.grid_length / 2.0\r\n    y2 = y1 + room.grid_length\r\n    if (x < x1 or x > x2) {\r\n      return (false)\r\n    }\r\n    if (y < y1 or y > y2) {\r\n      return (false)\r\n    }\r\n    return (true)\r\n  ]]></function>\r\n</asl>\r\n```\r\n\r\n</details>\r\n\r\n---\r\nThanks Dcoder, mrangel, and Pixie!\r\n\r\nThis was fun, and I'd never have done this if you all had not shared your thoughts and wisdom!",
      "EditableFormat": "markdown",
      "HTML": "<p>I combined some of my code with some of mrangel's.</p>\n<p>It now works online or offline, with included local files or with online images.</p>\n<hr>\n<p>Try this:</p>\n<p>1. Create a new game.</p>\n<p>2. Include this library:<br>\nhttps://github.com/KVonGit/QuestStuff/blob/master/libraries/GridImageLib/GridImageLib.zip?raw=true</p>\n<p>3. Make sure you have at least 2 or 3 rooms to move through (just to test things out).</p>\n<p>4. Enable the map and add <code>SetupGridImages</code> to your User Interface Initialisation script.</p>\n<p>5. Select a room in the editor, and you will see a new \"Grid Image\" tab.  Click on that.</p>\n<p>6.  Use the dropdown to select and import a local image (as you normally would), OR check the box to enter a URL (to use an online image).</p>\n<p>7.  That's it.  Give it a test run!  Let me know if it works!</p>\n<hr>\n<p>http://textadventures.co.uk/games/view/cl4g-hnzikujwr2rofu68a/gridimglib-tester</p>\n<hr>\n<p><img width=\"33%\" src=\"https://user-images.githubusercontent.com/30656341/35951929-304c4c4e-0c43-11e8-98bd-f1a7708d6f46.png\"><img width=\"33%\" src=\"https://user-images.githubusercontent.com/30656341/35951938-39cd3ada-0c43-11e8-8756-41a9136e8da7.png\"><img width=\"33%\" src=\"https://user-images.githubusercontent.com/30656341/35951950-4801b702-0c43-11e8-813a-6eaa773cf463.png\"></p>\n<hr>\n<hr>\n<p><strong>The Example Game</strong></p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;include ref=\"GridImageLib.aslx\" /&gt;\n  &lt;game name=\"Image Map\"&gt;\n    &lt;gameid&gt;f127803f-b2dd-4ced-b58c-bd9202fe0284&lt;/gameid&gt;\n    &lt;version&gt;2.3&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;gridmap /&gt;\n    &lt;respondtogridclicks /&gt;\n    &lt;feature_advancedscripts /&gt;\n    &lt;inituserinterface type=\"script\"&gt;&lt;![CDATA[\n      SetupGridImages\n    ]]&gt;&lt;/inituserinterface&gt;\n    &lt;commandpane type=\"boolean\"&gt;false&lt;/commandpane&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;gridimg_custompath /&gt;\n    &lt;attr name=\"grid_image\"&gt;https://i.imgur.com/mBf7TBeb.png&lt;/attr&gt;\n    &lt;enter type=\"script\"&gt;\n      Grid_SetGridCoordinateForPlayer (game.pov, attic, \"z\", Grid_GetGridCoordinateForPlayer(game.pov, this, \"z\")+1)\n    &lt;/enter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n      &lt;changedparent type=\"script\"&gt;\n        if (game.pov = this) {\n          if (IsDefined(\"oldvalue\")) {\n            OnEnterRoom (oldvalue)\n            this.lastparent = oldvalue\n          }\n          else {\n            OnEnterRoom (null)\n          }\n          if (game.gridmap) {\n            MergePOVCoordinates\n          }\n        }\n        this.hasbeenmoved = true\n      &lt;/changedparent&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"north\" to=\"second room\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"up\" to=\"attic\"&gt;\n      &lt;inherit name=\"updirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"second room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_image\"&gt;http://cdn3.everyjoe.com/wp-content/gallery/kate-upton-zero-gravity/kate-upton-zero-gravity-1.jpg&lt;/attr&gt;\n    &lt;gridimg_custompath /&gt;\n    &lt;exit alias=\"south\" to=\"room\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"attic\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_image\"&gt;http://cdn3.everyjoe.com/wp-content/gallery/kate-upton-zero-gravity/kate-upton-zero-gravity-2.jpg&lt;/attr&gt;\n    &lt;enter type=\"script\"&gt;\n      Grid_SetGridCoordinateForPlayer (game.pov, this, \"z\", Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\")+1)\n    &lt;/enter&gt;\n    &lt;exit alias=\"down\" to=\"room\"&gt;\n      &lt;inherit name=\"downdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;function name=\"GridSquareClick\" parameters=\"x, y\"&gt;&lt;![CDATA[\n    z = Grid_GetGridCoordinateForPlayer(game.pov, game.pov.parent, \"z\")\n    d = Grid_GetPlayerCoordinateDictionary(player)\n    foreach (key, d) {\n      d2 = DictionaryItem(d, key)\n      if (DictionaryContains(d2, \"grid_isdrawn\")) {\n        r = GetObject(key)\n        if (InGridRoom(r, d2, x, y, z)) {\n          if (not game.pov.parent = r) {\n            msg (\"&lt;br/&gt;&gt;map_click-goto: \"+GetDisplayName(r)+\"&lt;br/&gt;\")\n            MoveObject (game.pov, r)\n            JS.scrollToEnd ()\n          }\n          else {\n            msg (\"&lt;br/&gt;&gt;map_click-look&lt;br/&gt;\")\n            ShowRoomDescription\n            JS.scrollToEnd ()\n          }\n        }\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"InGridRoom\" parameters=\"room, dict, x, y, z\" type=\"boolean\"&gt;&lt;![CDATA[\n    flag = DictionaryItem(dict, \"grid_isdrawn\")\n    if (not flag) {\n      return (false)\n    }\n    z1 = DictionaryItem(dict, \"z\")\n    if (not z = z1) {\n      return (false)\n    }\n    n = DictionaryItem(dict, \"x\")\n    x1 = n - room.grid_width / 2.0\n    x2 = x1 + room.grid_width\n    n = DictionaryItem(dict, \"y\")\n    y1 = n - room.grid_length / 2.0\n    y2 = y1 + room.grid_length\n    if (x &lt; x1 or x &gt; x2) {\n      return (false)\n    }\n    if (y &lt; y1 or y &gt; y2) {\n      return (false)\n    }\n    return (true)\n  ]]&gt;&lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n<hr>\n<p>Thanks Dcoder, mrangel, and Pixie!</p>\n<p>This was fun, and I'd never have done this if you all had not shared your thoughts and wisdom!</p>\n\n",
      "PostDate": "2018-02-08T02:18:08.6210106Z",
      "LastEditDate": "2018-04-05T16:22:51.4379149Z",
      "link": null
    },
    {
      "PostId": "ddc89d41-7f43-4f69-80c7-4f4031a0eb08",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<strike>No luck. There is a space at the top for the map but no map....</strike>\r\nDuh. Had to add exits...\r\nWorks!\r\n\r\nI used png images to get this in maps:\r\n\r\n<img src=\"https://bobslifeblog.files.wordpress.com/2018/02/gridbristol2.jpg\" />\r\n\r\nI thought this added a new level to it!\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p><strike>No luck. There is a space at the top for the map but no map....</strike><br>\nDuh. Had to add exits...<br>\nWorks!</p>\n<p>I used png images to get this in maps:</p>\n<img src=\"https://bobslifeblog.files.wordpress.com/2018/02/gridbristol2.jpg\">\n<p>I thought this added a new level to it!</p>\n\n",
      "PostDate": "2018-02-08T11:46:47.7698161Z",
      "LastEditDate": "2018-02-08T13:44:21.6770024Z",
      "link": null
    },
    {
      "PostId": "b3f8083b-df90-48b5-adfe-d5984ea3081e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Very nice!!!",
      "EditableFormat": "markdown",
      "HTML": "<p>Very nice!!!</p>\n\n",
      "PostDate": "2018-02-08T15:06:56.7908006Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7a7ae04c-6494-4b7b-89ee-380809471d33",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wow guys!\r\n\r\nSorry I was busy the last couple of days.  When I come back, I see that this whole topic has been moved to Libraries and Code Samples (where it belongs).  Let me try your new library KV, and if I can get things working, I will repost my outdoor map demo.  Thanks everyone!  Be back soon!",
      "EditableFormat": "markdown",
      "HTML": "<p>Wow guys!</p>\n<p>Sorry I was busy the last couple of days.  When I come back, I see that this whole topic has been moved to Libraries and Code Samples (where it belongs).  Let me try your new library KV, and if I can get things working, I will repost my outdoor map demo.  Thanks everyone!  Be back soon!</p>\n\n",
      "PostDate": "2018-02-10T03:16:45.6249023Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3b816beb-b5d3-4486-b13c-438f8ace9c4f",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm getting an error when using grid clicks to move on the map. I haven't set any coordinates for the rooms as the tutorial just shows it as needed for changing levels (upper and lower).\r\nIf I need to add coordinates, I'll figure that out...\r\n\r\nError running script: Error compiling expression 'InGridRoom(r, d 2, x, y, z)': Value cannot be null. Parameter name: key",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm getting an error when using grid clicks to move on the map. I haven't set any coordinates for the rooms as the tutorial just shows it as needed for changing levels (upper and lower).<br>\nIf I need to add coordinates, I'll figure that out...</p>\n<p>Error running script: Error compiling expression 'InGridRoom(r, d 2, x, y, z)': Value cannot be null. Parameter name: key</p>\n\n",
      "PostDate": "2018-02-10T15:11:34.2962092Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "51b89368-9bdc-44e9-b92d-25c9b65f3a65",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Uh oh...\r\n\r\nI haven't messed with grid clicks yet.\r\n\r\nI assume it works in the same game when not using the images for the rooms?",
      "EditableFormat": "markdown",
      "HTML": "<p>Uh oh...</p>\n<p>I haven't messed with grid clicks yet.</p>\n<p>I assume it works in the same game when not using the images for the rooms?</p>\n\n",
      "PostDate": "2018-02-10T15:32:39.4970624Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5c4d7c6f-b64b-4691-b2ac-c23ed7482fc8",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It works for me after following these instructions (under VERTICAL MOVEMENT):\r\nhttp://docs.textadventures.co.uk/quest/showing_a_map.html\r\n\r\n\r\n---\r\nYou can only click on rooms on the same level, though, as far as I can tell.\r\n\r\nExample game:\r\n\r\n<details>\r\n\r\n**UPDATED**\r\n\r\n```\r\n<<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <include ref=\"GridImageLib.aslx\" />\r\n  <game name=\"Image Map\">\r\n    <gameid>f127803f-b2dd-4ced-b58c-bd9202fe0284</gameid>\r\n    <version>1.1</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <gridmap />\r\n    <respondtogridclicks />\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <gridimg_custompath />\r\n    <attr name=\"grid_image\">https://i.imgur.com/mBf7TBeb.png</attr>\r\n    <enter type=\"script\">\r\n      Grid_SetGridCoordinateForPlayer (game.pov, attic, \"z\", Grid_GetGridCoordinateForPlayer(game.pov, this, \"z\")+1)\r\n    </enter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"north\" to=\"second room\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"up\" to=\"attic\">\r\n      <inherit name=\"updirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"second room\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_image\">http://cdn3.everyjoe.com/wp-content/gallery/kate-upton-zero-gravity/kate-upton-zero-gravity-1.jpg</attr>\r\n    <exit alias=\"south\" to=\"room\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"attic\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_image\">http://cdn3.everyjoe.com/wp-content/gallery/kate-upton-zero-gravity/kate-upton-zero-gravity-2.jpg</attr>\r\n    <enter type=\"script\">\r\n      Grid_SetGridCoordinateForPlayer (game.pov, this, \"z\", Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\")+1)\r\n    </enter>\r\n    <exit alias=\"down\" to=\"room\">\r\n      <inherit name=\"downdirection\" />\r\n    </exit>\r\n  </object>\r\n  <function name=\"GridSquareClick\" parameters=\"x, y\"><![CDATA[\r\n    z = Grid_GetGridCoordinateForPlayer(game.pov, game.pov.parent, \"z\")\r\n    d = Grid_GetPlayerCoordinateDictionary(player)\r\n    foreach (key, d) {\r\n      d2 = DictionaryItem(d, key)\r\n      if (DictionaryContains(d2, \"grid_isdrawn\")) {\r\n        r = GetObject(key)\r\n        if (InGridRoom(r, d2, x, y, z)) {\r\n          if(not game.pov.parent = r){\r\n            msg(\"<br/>>map_click-goto: \"+GetDisplayName(r)+\"<br/>\")\r\n            MoveObject(game.pov,r)\r\n            JS.scrollToEnd()\r\n          }\r\n          else {\r\n            msg(\"<br/>>map_click-look<br/>\")\r\n            ShowRoomDescription\r\n            JS.scrollToEnd()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ]]></function>\r\n  <function name=\"InGridRoom\" parameters=\"room, dict, x, y, z\" type=\"boolean\"><![CDATA[\r\n    flag = DictionaryItem(dict, \"grid_isdrawn\")\r\n    if (not flag) {\r\n      return (false)\r\n    }\r\n    z1 = DictionaryItem(dict, \"z\")\r\n    if (not z = z1) {\r\n      return (false)\r\n    }\r\n    n = DictionaryItem(dict, \"x\")\r\n    x1 = n - room.grid_width / 2.0\r\n    x2 = x1 + room.grid_width\r\n    n = DictionaryItem(dict, \"y\")\r\n    y1 = n - room.grid_length / 2.0\r\n    y2 = y1 + room.grid_length\r\n    if (x < x1 or x > x2) {\r\n      return (false)\r\n    }\r\n    if (y < y1 or y > y2) {\r\n      return (false)\r\n    }\r\n    return (true)\r\n  ]]></function>\r\n</asl>\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>It works for me after following these instructions (under VERTICAL MOVEMENT):<br>\nhttp://docs.textadventures.co.uk/quest/showing_a_map.html</p>\n<hr>\n<p>You can only click on rooms on the same level, though, as far as I can tell.</p>\n<p>Example game:</p>\n<details>\n<p><strong>UPDATED</strong></p>\n<pre><code>&lt;&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;include ref=\"GridImageLib.aslx\" /&gt;\n  &lt;game name=\"Image Map\"&gt;\n    &lt;gameid&gt;f127803f-b2dd-4ced-b58c-bd9202fe0284&lt;/gameid&gt;\n    &lt;version&gt;1.1&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;gridmap /&gt;\n    &lt;respondtogridclicks /&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;gridimg_custompath /&gt;\n    &lt;attr name=\"grid_image\"&gt;https://i.imgur.com/mBf7TBeb.png&lt;/attr&gt;\n    &lt;enter type=\"script\"&gt;\n      Grid_SetGridCoordinateForPlayer (game.pov, attic, \"z\", Grid_GetGridCoordinateForPlayer(game.pov, this, \"z\")+1)\n    &lt;/enter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"north\" to=\"second room\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"up\" to=\"attic\"&gt;\n      &lt;inherit name=\"updirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"second room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_image\"&gt;http://cdn3.everyjoe.com/wp-content/gallery/kate-upton-zero-gravity/kate-upton-zero-gravity-1.jpg&lt;/attr&gt;\n    &lt;exit alias=\"south\" to=\"room\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"attic\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_image\"&gt;http://cdn3.everyjoe.com/wp-content/gallery/kate-upton-zero-gravity/kate-upton-zero-gravity-2.jpg&lt;/attr&gt;\n    &lt;enter type=\"script\"&gt;\n      Grid_SetGridCoordinateForPlayer (game.pov, this, \"z\", Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\")+1)\n    &lt;/enter&gt;\n    &lt;exit alias=\"down\" to=\"room\"&gt;\n      &lt;inherit name=\"downdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;function name=\"GridSquareClick\" parameters=\"x, y\"&gt;&lt;![CDATA[\n    z = Grid_GetGridCoordinateForPlayer(game.pov, game.pov.parent, \"z\")\n    d = Grid_GetPlayerCoordinateDictionary(player)\n    foreach (key, d) {\n      d2 = DictionaryItem(d, key)\n      if (DictionaryContains(d2, \"grid_isdrawn\")) {\n        r = GetObject(key)\n        if (InGridRoom(r, d2, x, y, z)) {\n          if(not game.pov.parent = r){\n            msg(\"&lt;br/&gt;&gt;map_click-goto: \"+GetDisplayName(r)+\"&lt;br/&gt;\")\n            MoveObject(game.pov,r)\n            JS.scrollToEnd()\n          }\n          else {\n            msg(\"&lt;br/&gt;&gt;map_click-look&lt;br/&gt;\")\n            ShowRoomDescription\n            JS.scrollToEnd()\n          }\n        }\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"InGridRoom\" parameters=\"room, dict, x, y, z\" type=\"boolean\"&gt;&lt;![CDATA[\n    flag = DictionaryItem(dict, \"grid_isdrawn\")\n    if (not flag) {\n      return (false)\n    }\n    z1 = DictionaryItem(dict, \"z\")\n    if (not z = z1) {\n      return (false)\n    }\n    n = DictionaryItem(dict, \"x\")\n    x1 = n - room.grid_width / 2.0\n    x2 = x1 + room.grid_width\n    n = DictionaryItem(dict, \"y\")\n    y1 = n - room.grid_length / 2.0\n    y2 = y1 + room.grid_length\n    if (x &lt; x1 or x &gt; x2) {\n      return (false)\n    }\n    if (y &lt; y1 or y &gt; y2) {\n      return (false)\n    }\n    return (true)\n  ]]&gt;&lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2018-02-10T16:07:57.5101208Z",
      "LastEditDate": "2018-02-10T16:17:46.8067379Z",
      "link": null
    },
    {
      "PostId": "0cb3868f-9451-46e8-b19f-56a7b8800ae4",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here's a version of the same thing with the map in the dialog window (just in case that's what FW is doing):\r\n\r\n<details>\r\n\r\n```xml\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <include ref=\"GridImageLib.aslx\" />\r\n  <game name=\"Image Map\">\r\n    <gameid>f127803f-b2dd-4ced-b58c-bd9202fe0284</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <gridmap />\r\n    <respondtogridclicks />\r\n    <start type=\"script\"><![CDATA[\r\n      JS.eval (\"$('#gamePanelSpacer').height(0);\")\r\n      msg (\"<div id='mapHolder' style='display:none;'></div>\")\r\n      JS.eval (\"$('#gridPanel').appendTo($('#mapHolder')).css({'left':'63%','position':'absolute'});var mh = $('#mapHolder');mh.dialog({height: 400, width: 700,close: function(){mh.dialog('close');}});mh.dialog('option', 'title', 'Map');mh.dialog('open');$('.ui-dialog').css('position', 'fixed');openMap = function(){mh.dialog('open');};\")\r\n    ]]></start>\r\n    <inituserinterface type=\"script\">\r\n      JS.setCommands (\"SHOW MAP\")\r\n    </inituserinterface>\r\n  </game>\r\n  <command name=\"view_map_command\">\r\n    <pattern>view map;open map;map;show map</pattern>\r\n    <script>\r\n      JS.openMap ()\r\n      game.notarealturn = true\r\n    </script>\r\n  </command>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <gridimg_custompath />\r\n    <attr name=\"grid_image\">https://i.imgur.com/mBf7TBeb.png</attr>\r\n    <enter type=\"script\">\r\n      Grid_SetGridCoordinateForPlayer (game.pov, attic, \"z\", Grid_GetGridCoordinateForPlayer(game.pov, this, \"z\")+1)\r\n    </enter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"north\" to=\"second room\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"up\" to=\"attic\">\r\n      <inherit name=\"updirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"second room\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_image\">http://cdn3.everyjoe.com/wp-content/gallery/kate-upton-zero-gravity/kate-upton-zero-gravity-1.jpg</attr>\r\n    <exit alias=\"south\" to=\"room\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"attic\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_image\">http://cdn3.everyjoe.com/wp-content/gallery/kate-upton-zero-gravity/kate-upton-zero-gravity-2.jpg</attr>\r\n    <enter type=\"script\">\r\n      Grid_SetGridCoordinateForPlayer (game.pov, this, \"z\", Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\")+1)\r\n    </enter>\r\n    <exit alias=\"down\" to=\"room\">\r\n      <inherit name=\"downdirection\" />\r\n    </exit>\r\n  </object>\r\n  <function name=\"GridSquareClick\" parameters=\"x, y\"><![CDATA[\r\n    z = Grid_GetGridCoordinateForPlayer(game.pov, game.pov.parent, \"z\")\r\n    d = Grid_GetPlayerCoordinateDictionary(player)\r\n    foreach (key, d) {\r\n      d2 = DictionaryItem(d, key)\r\n      if (DictionaryContains(d2, \"grid_isdrawn\")) {\r\n        r = GetObject(key)\r\n        if (InGridRoom(r, d2, x, y, z)) {\r\n          if(not game.pov.parent = r){\r\n            msg(\"<br/>>map_click-goto: \"+GetDisplayName(r)+\"<br/>\")\r\n            MoveObject(game.pov,r)\r\n            JS.scrollToEnd()\r\n          }\r\n          else {\r\n            msg(\"<br/>>map_click-look<br/>\")\r\n            ShowRoomDescription\r\n            JS.scrollToEnd()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ]]></function>\r\n  <function name=\"InGridRoom\" parameters=\"room, dict, x, y, z\" type=\"boolean\"><![CDATA[\r\n    flag = DictionaryItem(dict, \"grid_isdrawn\")\r\n    if (not flag) {\r\n      return (false)\r\n    }\r\n    z1 = DictionaryItem(dict, \"z\")\r\n    if (not z = z1) {\r\n      return (false)\r\n    }\r\n    n = DictionaryItem(dict, \"x\")\r\n    x1 = n - room.grid_width / 2.0\r\n    x2 = x1 + room.grid_width\r\n    n = DictionaryItem(dict, \"y\")\r\n    y1 = n - room.grid_length / 2.0\r\n    y2 = y1 + room.grid_length\r\n    if (x < x1 or x > x2) {\r\n      return (false)\r\n    }\r\n    if (y < y1 or y > y2) {\r\n      return (false)\r\n    }\r\n    return (true)\r\n  ]]></function>\r\n</asl>\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>Here's a version of the same thing with the map in the dialog window (just in case that's what FW is doing):</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;include ref=\"GridImageLib.aslx\" /&gt;\n  &lt;game name=\"Image Map\"&gt;\n    &lt;gameid&gt;f127803f-b2dd-4ced-b58c-bd9202fe0284&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;gridmap /&gt;\n    &lt;respondtogridclicks /&gt;\n    &lt;start type=\"script\"&gt;&lt;![CDATA[\n      JS.eval (\"$('#gamePanelSpacer').height(0);\")\n      msg (\"&lt;div id='mapHolder' style='display:none;'&gt;&lt;/div&gt;\")\n      JS.eval (\"$('#gridPanel').appendTo($('#mapHolder')).css({'left':'63%','position':'absolute'});var mh = $('#mapHolder');mh.dialog({height: 400, width: 700,close: function(){mh.dialog('close');}});mh.dialog('option', 'title', 'Map');mh.dialog('open');$('.ui-dialog').css('position', 'fixed');openMap = function(){mh.dialog('open');};\")\n    ]]&gt;&lt;/start&gt;\n    &lt;inituserinterface type=\"script\"&gt;\n      JS.setCommands (\"SHOW MAP\")\n    &lt;/inituserinterface&gt;\n  &lt;/game&gt;\n  &lt;command name=\"view_map_command\"&gt;\n    &lt;pattern&gt;view map;open map;map;show map&lt;/pattern&gt;\n    &lt;script&gt;\n      JS.openMap ()\n      game.notarealturn = true\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;gridimg_custompath /&gt;\n    &lt;attr name=\"grid_image\"&gt;https://i.imgur.com/mBf7TBeb.png&lt;/attr&gt;\n    &lt;enter type=\"script\"&gt;\n      Grid_SetGridCoordinateForPlayer (game.pov, attic, \"z\", Grid_GetGridCoordinateForPlayer(game.pov, this, \"z\")+1)\n    &lt;/enter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"north\" to=\"second room\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"up\" to=\"attic\"&gt;\n      &lt;inherit name=\"updirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"second room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_image\"&gt;http://cdn3.everyjoe.com/wp-content/gallery/kate-upton-zero-gravity/kate-upton-zero-gravity-1.jpg&lt;/attr&gt;\n    &lt;exit alias=\"south\" to=\"room\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"attic\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_image\"&gt;http://cdn3.everyjoe.com/wp-content/gallery/kate-upton-zero-gravity/kate-upton-zero-gravity-2.jpg&lt;/attr&gt;\n    &lt;enter type=\"script\"&gt;\n      Grid_SetGridCoordinateForPlayer (game.pov, this, \"z\", Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\")+1)\n    &lt;/enter&gt;\n    &lt;exit alias=\"down\" to=\"room\"&gt;\n      &lt;inherit name=\"downdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;function name=\"GridSquareClick\" parameters=\"x, y\"&gt;&lt;![CDATA[\n    z = Grid_GetGridCoordinateForPlayer(game.pov, game.pov.parent, \"z\")\n    d = Grid_GetPlayerCoordinateDictionary(player)\n    foreach (key, d) {\n      d2 = DictionaryItem(d, key)\n      if (DictionaryContains(d2, \"grid_isdrawn\")) {\n        r = GetObject(key)\n        if (InGridRoom(r, d2, x, y, z)) {\n          if(not game.pov.parent = r){\n            msg(\"&lt;br/&gt;&gt;map_click-goto: \"+GetDisplayName(r)+\"&lt;br/&gt;\")\n            MoveObject(game.pov,r)\n            JS.scrollToEnd()\n          }\n          else {\n            msg(\"&lt;br/&gt;&gt;map_click-look&lt;br/&gt;\")\n            ShowRoomDescription\n            JS.scrollToEnd()\n          }\n        }\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"InGridRoom\" parameters=\"room, dict, x, y, z\" type=\"boolean\"&gt;&lt;![CDATA[\n    flag = DictionaryItem(dict, \"grid_isdrawn\")\n    if (not flag) {\n      return (false)\n    }\n    z1 = DictionaryItem(dict, \"z\")\n    if (not z = z1) {\n      return (false)\n    }\n    n = DictionaryItem(dict, \"x\")\n    x1 = n - room.grid_width / 2.0\n    x2 = x1 + room.grid_width\n    n = DictionaryItem(dict, \"y\")\n    y1 = n - room.grid_length / 2.0\n    y2 = y1 + room.grid_length\n    if (x &lt; x1 or x &gt; x2) {\n      return (false)\n    }\n    if (y &lt; y1 or y &gt; y2) {\n      return (false)\n    }\n    return (true)\n  ]]&gt;&lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2018-02-10T16:22:57.7364962Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "84f927a2-764e-47c5-bd97-c4a60cc14a18",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Crap. I had forgotten to make the  type boolean. It works fine.\r\n\r\nMister HurryPants.com here...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Crap. I had forgotten to make the  type boolean. It works fine.</p>\n<p>Mister HurryPants.com here...</p>\n\n",
      "PostDate": "2018-02-10T17:12:13.4117905Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6861bb13-3e0c-4a7c-b3de-35cfc692044d",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "We've entered a new level in map-making!  Outdoor Map-Generator Demo:\r\n\r\nhttp://textadventures.co.uk/games/view/mctudqh-00mot77wz2zigg/map-rpg-demo\r\n\r\nPlease DOWNLOAD the game, INSTEAD of playing it online! (It will work much better)",
      "EditableFormat": "markdown",
      "HTML": "<p>We've entered a new level in map-making!  Outdoor Map-Generator Demo:</p>\n<p>http://textadventures.co.uk/games/view/mctudqh-00mot77wz2zigg/map-rpg-demo</p>\n<p>Please DOWNLOAD the game, INSTEAD of playing it online! (It will work much better)</p>\n\n",
      "PostDate": "2018-02-11T03:31:28.0505653Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ed9afd21-932e-48ba-b916-b88f9e2aa6d5",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Up-to-date version of GridImageLib.aslx:\r\n\r\nhttps://github.com/KVonGit/QuestStuff/blob/master/libraries/GridImageLib/GridImageLib.zip?raw=true",
      "EditableFormat": "markdown",
      "HTML": "<p>Up-to-date version of GridImageLib.aslx:</p>\n<p>https://github.com/KVonGit/QuestStuff/blob/master/libraries/GridImageLib/GridImageLib.zip?raw=true</p>\n\n",
      "PostDate": "2018-02-16T05:26:03.6515473Z",
      "LastEditDate": "2018-04-05T15:34:54.8528886Z",
      "link": null
    },
    {
      "PostId": "fdf2a7c1-7da0-4207-9194-b1c38999ca4d",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\nAnyone have any ideas as to why this reloads the online images but not the local images when loading a saved game?\r\n\r\nGridImageLib.aslx\r\n```\r\n<?xml version=\"1.0\"?>\r\n\t<!--\r\n\t\r\n\tIMPORTANT:\r\n\tYou must add the following line to you User Interface Initialisation script:\r\n\t\r\n\tSetupGridImages\r\n\t\r\n\t-->\r\n<!--\r\n\t\tGridImgLib \r\n\t\t\r\n\t\tby KV\r\n\t\t\r\n\t\tSpecial Guest Coders:  MrAngel & Dcoder\r\n\t\t\r\n\t\tVERSION 2.0\r\n\t\t\r\n\t\tThis will allow you to set a picture to display in place of a room's \r\n\t\tstandard map image.  \r\n\t\t\r\n\t\tAll you need to do is include this library along (make sure its js file is in the folder as well!), make sure the map is enabled,\r\n\t\tthen go to the new \"Grid Image\" tab on the room object.  From there, you\r\n\t\tcan use the file browser to import an image file, or you can enter a URL\r\n\t\tto use an online image.  \r\n\t\t\r\n\t\t(You can NOT enter the path to the file!  If using a local image,\r\n\t\tthe file MUST be in the game's main folder!!!)\r\n\t\t\r\n\t\t===\r\n\t\t\r\n\t\tIMPORTANT NOTE:\r\n\t\t\r\n\t\tIf you want to switch back to using the standard map image, you must completely\r\n\t\tremove the \"grid_image\" attribute from the room!!!\r\n\t\t\r\n\t\t===\r\n\t\t\r\n\t\tDesigned for Quest 5.7.1\r\n\t\tYear of publication: 2018\r\n\r\n-->\r\n\t<!--\r\n\t\r\n\tIMPORTANT:\r\n\tYou must add the following line to you User Interface Initialisation script:\r\n\t\r\n\tSetupGridImages\r\n\t\r\n\t-->\r\n  <library>\r\n  \r\n\t<function name=\"SetGridImgPath\" parameters=\"filename\">\r\n\t\tJS.setImagePath (GetFileUrl(\"_FILENAME_\"))\r\n\t</function>\r\n  \r\n\t<function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"><![CDATA[\r\n\t\tif (room.grid_render) {\r\n\t\t  if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\r\n\t\t\tif (room.parent <> null) {\r\n\t\t\t  Grid_DrawRoom (room.parent, redraw, playerobject)\r\n\t\t\t}\r\n\t\t\tgridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")\r\n\t\t\tgridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\r\n\t\t\tJS.Grid_DrawBox (gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\r\n\t\t\tif (HasString(room, \"grid_image\")) {\r\n\t\t\t  imgfile = false\r\n\t\t\t  imgexts = Split(\".png;.jpeg;.gif;.jpg;svg\",\";\")\r\n\t\t\t  room.imageid = room.name+\"-grid-image\"\r\n\t\t\t  JS.eval (\"var roomImageId = '\"+room.imageid+\"';var gridX = '\"+gridx+\"';var gridY = '\"+gridy+\"';var roomGridWidth = '\"+room.grid_width+\"';var roomGridHeight = '\"+room.grid_length+\"';customDrawImage('\"+room.grid_image+\"');\")\r\n\t\t\t}\r\n\t\t\tif (LengthOf(room.grid_label) > 0) {\r\n\t\t\t  label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\r\n\t\t\t  label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\r\n\t\t\t  JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\r\n\t\t\t}\r\n\t\t\tforeach (exit, AllExits()) {\r\n\t\t\t  if (exit.grid_render and exit.parent = room and exit.grid_length > 0) {\r\n\t\t\t\tGrid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t\tGrid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\r\n\t\t  }\r\n\t\t}\r\n\t]]></function>\r\n    \r\n\r\n\t\r\n\t<function name=\"SetupGridImages\"><![CDATA[\r\n\t  SetGridImgPath(\"\")\r\n\t  foreach (room, AllObjects()) {\r\n\t\tif (HasAttribute(room,\"grid_image\")) {\r\n\t\t  JS.eval (\"imagesToCheck.push('\"+room.grid_image+\"');checkImages();\")\r\n\t\t}\r\n\t  }\r\n\t]]></function>\r\n  \r\n\r\n\t<!--\r\n\tAdd a tab to the editor.\r\n\t-->\r\n\r\n\t<tab>\r\n\t\t<parent>_ObjectEditor</parent>\r\n\t\t<onlydisplayif>game.gridmap</onlydisplayif>\r\n\t\t<caption>Grid Image(optional)</caption>\r\n\t\t<title>Select an image to display in the map</title>\r\n\t\t<mustnotinherit>editor_object</mustnotinherit>\r\n\t\t<control>\r\n\t\t  <controltype>checkbox</controltype>\r\n\t\t  <caption>Enter a URL (or file name) instead of loading a local image</caption>\r\n\t\t  <attribute>gridimg_custompath</attribute>\r\n\t\t</control>\r\n\t\t<control>\r\n\t\t\t<caption>Grid Image</caption>\r\n\t\t\t<controltype>file</controltype>\r\n\t\t\t<attribute>grid_image</attribute>\r\n\t\t\t<source>[EditorImageFormats]</source>\r\n\t\t\t<filefiltername>Picture Files</filefiltername>\r\n\t\t\t<onlydisplayif>not HasAttribute(this,\"gridimg_custompath\")</onlydisplayif>\r\n\t\t\t<preview/>\r\n\t\t</control>\r\n\t\t<control>\r\n\t\t\t<caption>Grid Image</caption>\r\n\t\t\t<controltype>file</controltype>\r\n\t\t\t<attribute>grid_image</attribute>\r\n\t\t\t<source>[EditorImageFormats]</source>\r\n\t\t\t<filefiltername>Picture Files</filefiltername>\r\n\t\t\t<onlydisplayif>not this.gridimg_custompath</onlydisplayif>\r\n\t\t\t<preview/>\r\n\t\t</control>\r\n\t\t<control>\r\n\t\t\t  <controltype>label</controltype>\r\n\t\t\t  <onlydisplayif>not this.gridimg_custompath</onlydisplayif>\r\n\t\t\t  <caption>THIS FILE WILL BE IMPORTED BY QUEST</caption>\r\n\t\t\t</control>\r\n\t\t<control>\r\n\t\t  <caption>Enter the URL or file name</caption>\r\n\t\t  <attribute>grid_image</attribute>\r\n\t\t  <controltype>textbox</controltype>\r\n\t\t  <onlydisplayif>this.gridimg_custompath</onlydisplayif>\r\n\t\t</control>\r\n\t\t<control>\r\n\t\t  <controltype>label</controltype>\r\n\t\t  <onlydisplayif>this.gridimg_custompath</onlydisplayif>\r\n\t\t  <caption>IF ENTERING A FILE NAME, BE SURE THE FILE IS IN THE GAME'S FOLDER!!!</caption>\r\n\t\t</control>\r\n\t</tab>\r\n  <javascript src=\"GridImageLib.js\" />\r\n  \r\n  </library>\r\n```\r\n\r\n---\r\nGridImageLib.js\r\n```\r\nvar questImagePath = \"\";\r\n\r\nsetImagePath = function(path) {\r\n  questImagePath = path;\r\n};\r\n\r\ngetFileUrlJS = function(filename){\r\n  if(filename.indexOf(\"://\") > 0) {\r\n\treturn (filename);\r\n  } else {\r\n\treturn questImagePath.replace(\"_FILENAME_\", filename);\r\n  }\r\n};\r\nvar imagesToCheck = [];\r\n\r\nfunction checkImages(){\r\n\timagesToCheck.forEach(function(img){\r\n\t\tisFileGood(img)\r\n\t});\r\n};\r\n\r\nvar failedImgs = [];\r\n\r\nfunction imgFail(imgFailed){\r\n\tfailedImgs.push(imgFailed.src);\r\n};\r\n\r\nfunction isFileGood(url){\r\n\timgFile = getFileUrlJS(url);\r\n\taddText(\"<img style='display:none' /*onload='addToMap()'*/ onerror='imgFail(this)' src='\"+imgFile+\"'/>\");\r\n};\r\n\r\ncustomDrawImage = function(url){\r\n\tvar imgFile = getFileUrlJS(url);\r\n\tvar failnumber = failedImgs.indexOf(imgFile);\r\n\tif(failnumber === -1){\r\n\t\tgridApi.drawCustomLayerImage(roomImageId, imgFile, parseFloat(gridX), parseFloat(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));\r\n\t}\r\n};\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p>Anyone have any ideas as to why this reloads the online images but not the local images when loading a saved game?</p>\n<p>GridImageLib.aslx</p>\n<pre><code>&lt;?xml version=\"1.0\"?&gt;\n\t&lt;!--\n\t\n\tIMPORTANT:\n\tYou must add the following line to you User Interface Initialisation script:\n\t\n\tSetupGridImages\n\t\n\t--&gt;\n&lt;!--\n\t\tGridImgLib \n\t\t\n\t\tby KV\n\t\t\n\t\tSpecial Guest Coders:  MrAngel &amp; Dcoder\n\t\t\n\t\tVERSION 2.0\n\t\t\n\t\tThis will allow you to set a picture to display in place of a room's \n\t\tstandard map image.  \n\t\t\n\t\tAll you need to do is include this library along (make sure its js file is in the folder as well!), make sure the map is enabled,\n\t\tthen go to the new \"Grid Image\" tab on the room object.  From there, you\n\t\tcan use the file browser to import an image file, or you can enter a URL\n\t\tto use an online image.  \n\t\t\n\t\t(You can NOT enter the path to the file!  If using a local image,\n\t\tthe file MUST be in the game's main folder!!!)\n\t\t\n\t\t===\n\t\t\n\t\tIMPORTANT NOTE:\n\t\t\n\t\tIf you want to switch back to using the standard map image, you must completely\n\t\tremove the \"grid_image\" attribute from the room!!!\n\t\t\n\t\t===\n\t\t\n\t\tDesigned for Quest 5.7.1\n\t\tYear of publication: 2018\n\n--&gt;\n\t&lt;!--\n\t\n\tIMPORTANT:\n\tYou must add the following line to you User Interface Initialisation script:\n\t\n\tSetupGridImages\n\t\n\t--&gt;\n  &lt;library&gt;\n  \n\t&lt;function name=\"SetGridImgPath\" parameters=\"filename\"&gt;\n\t\tJS.setImagePath (GetFileUrl(\"_FILENAME_\"))\n\t&lt;/function&gt;\n  \n\t&lt;function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"&gt;&lt;![CDATA[\n\t\tif (room.grid_render) {\n\t\t  if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\n\t\t\tif (room.parent &lt;&gt; null) {\n\t\t\t  Grid_DrawRoom (room.parent, redraw, playerobject)\n\t\t\t}\n\t\t\tgridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")\n\t\t\tgridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\n\t\t\tJS.Grid_DrawBox (gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\n\t\t\tif (HasString(room, \"grid_image\")) {\n\t\t\t  imgfile = false\n\t\t\t  imgexts = Split(\".png;.jpeg;.gif;.jpg;svg\",\";\")\n\t\t\t  room.imageid = room.name+\"-grid-image\"\n\t\t\t  JS.eval (\"var roomImageId = '\"+room.imageid+\"';var gridX = '\"+gridx+\"';var gridY = '\"+gridy+\"';var roomGridWidth = '\"+room.grid_width+\"';var roomGridHeight = '\"+room.grid_length+\"';customDrawImage('\"+room.grid_image+\"');\")\n\t\t\t}\n\t\t\tif (LengthOf(room.grid_label) &gt; 0) {\n\t\t\t  label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\n\t\t\t  label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\n\t\t\t  JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\n\t\t\t}\n\t\t\tforeach (exit, AllExits()) {\n\t\t\t  if (exit.grid_render and exit.parent = room and exit.grid_length &gt; 0) {\n\t\t\t\tGrid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\n\t\t\t  }\n\t\t\t}\n\t\t\tGrid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\n\t\t  }\n\t\t}\n\t]]&gt;&lt;/function&gt;\n    \n\n\t\n\t&lt;function name=\"SetupGridImages\"&gt;&lt;![CDATA[\n\t  SetGridImgPath(\"\")\n\t  foreach (room, AllObjects()) {\n\t\tif (HasAttribute(room,\"grid_image\")) {\n\t\t  JS.eval (\"imagesToCheck.push('\"+room.grid_image+\"');checkImages();\")\n\t\t}\n\t  }\n\t]]&gt;&lt;/function&gt;\n  \n\n\t&lt;!--\n\tAdd a tab to the editor.\n\t--&gt;\n\n\t&lt;tab&gt;\n\t\t&lt;parent&gt;_ObjectEditor&lt;/parent&gt;\n\t\t&lt;onlydisplayif&gt;game.gridmap&lt;/onlydisplayif&gt;\n\t\t&lt;caption&gt;Grid Image(optional)&lt;/caption&gt;\n\t\t&lt;title&gt;Select an image to display in the map&lt;/title&gt;\n\t\t&lt;mustnotinherit&gt;editor_object&lt;/mustnotinherit&gt;\n\t\t&lt;control&gt;\n\t\t  &lt;controltype&gt;checkbox&lt;/controltype&gt;\n\t\t  &lt;caption&gt;Enter a URL (or file name) instead of loading a local image&lt;/caption&gt;\n\t\t  &lt;attribute&gt;gridimg_custompath&lt;/attribute&gt;\n\t\t&lt;/control&gt;\n\t\t&lt;control&gt;\n\t\t\t&lt;caption&gt;Grid Image&lt;/caption&gt;\n\t\t\t&lt;controltype&gt;file&lt;/controltype&gt;\n\t\t\t&lt;attribute&gt;grid_image&lt;/attribute&gt;\n\t\t\t&lt;source&gt;[EditorImageFormats]&lt;/source&gt;\n\t\t\t&lt;filefiltername&gt;Picture Files&lt;/filefiltername&gt;\n\t\t\t&lt;onlydisplayif&gt;not HasAttribute(this,\"gridimg_custompath\")&lt;/onlydisplayif&gt;\n\t\t\t&lt;preview/&gt;\n\t\t&lt;/control&gt;\n\t\t&lt;control&gt;\n\t\t\t&lt;caption&gt;Grid Image&lt;/caption&gt;\n\t\t\t&lt;controltype&gt;file&lt;/controltype&gt;\n\t\t\t&lt;attribute&gt;grid_image&lt;/attribute&gt;\n\t\t\t&lt;source&gt;[EditorImageFormats]&lt;/source&gt;\n\t\t\t&lt;filefiltername&gt;Picture Files&lt;/filefiltername&gt;\n\t\t\t&lt;onlydisplayif&gt;not this.gridimg_custompath&lt;/onlydisplayif&gt;\n\t\t\t&lt;preview/&gt;\n\t\t&lt;/control&gt;\n\t\t&lt;control&gt;\n\t\t\t  &lt;controltype&gt;label&lt;/controltype&gt;\n\t\t\t  &lt;onlydisplayif&gt;not this.gridimg_custompath&lt;/onlydisplayif&gt;\n\t\t\t  &lt;caption&gt;THIS FILE WILL BE IMPORTED BY QUEST&lt;/caption&gt;\n\t\t\t&lt;/control&gt;\n\t\t&lt;control&gt;\n\t\t  &lt;caption&gt;Enter the URL or file name&lt;/caption&gt;\n\t\t  &lt;attribute&gt;grid_image&lt;/attribute&gt;\n\t\t  &lt;controltype&gt;textbox&lt;/controltype&gt;\n\t\t  &lt;onlydisplayif&gt;this.gridimg_custompath&lt;/onlydisplayif&gt;\n\t\t&lt;/control&gt;\n\t\t&lt;control&gt;\n\t\t  &lt;controltype&gt;label&lt;/controltype&gt;\n\t\t  &lt;onlydisplayif&gt;this.gridimg_custompath&lt;/onlydisplayif&gt;\n\t\t  &lt;caption&gt;IF ENTERING A FILE NAME, BE SURE THE FILE IS IN THE GAME'S FOLDER!!!&lt;/caption&gt;\n\t\t&lt;/control&gt;\n\t&lt;/tab&gt;\n  &lt;javascript src=\"GridImageLib.js\" /&gt;\n  \n  &lt;/library&gt;\n</code></pre>\n<hr>\n<p>GridImageLib.js</p>\n<pre><code>var questImagePath = \"\";\n\nsetImagePath = function(path) {\n  questImagePath = path;\n};\n\ngetFileUrlJS = function(filename){\n  if(filename.indexOf(\"://\") &gt; 0) {\n\treturn (filename);\n  } else {\n\treturn questImagePath.replace(\"_FILENAME_\", filename);\n  }\n};\nvar imagesToCheck = [];\n\nfunction checkImages(){\n\timagesToCheck.forEach(function(img){\n\t\tisFileGood(img)\n\t});\n};\n\nvar failedImgs = [];\n\nfunction imgFail(imgFailed){\n\tfailedImgs.push(imgFailed.src);\n};\n\nfunction isFileGood(url){\n\timgFile = getFileUrlJS(url);\n\taddText(\"&lt;img style='display:none' /*onload='addToMap()'*/ onerror='imgFail(this)' src='\"+imgFile+\"'/&gt;\");\n};\n\ncustomDrawImage = function(url){\n\tvar imgFile = getFileUrlJS(url);\n\tvar failnumber = failedImgs.indexOf(imgFile);\n\tif(failnumber === -1){\n\t\tgridApi.drawCustomLayerImage(roomImageId, imgFile, parseFloat(gridX), parseFloat(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));\n\t}\n};\n</code></pre>\n\n",
      "PostDate": "2018-04-07T01:35:24.8394277Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "34db58f2-3b76-4bc1-a02c-58b5d5d026c0",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, as KV stated, I created a barebones desktop game (in Q5.7.2) with KV's \"GridImageLib.aslx\" installed (which also contains \"GridImageLib.js\").  This overlays the standard map room shape with a custom image.\r\n\r\nThe problem is when you reload a saved game -- the rooms that were previously entered won't show the custom image, even after reentering the rooms.  Newly entered rooms, however, will show the custom image properly.  Also, this issue ONLY arises if the custom images are stored in the local game folder, not if they are stored online.\r\n\r\nThoughts?",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, as KV stated, I created a barebones desktop game (in Q5.7.2) with KV's \"GridImageLib.aslx\" installed (which also contains \"GridImageLib.js\").  This overlays the standard map room shape with a custom image.</p>\n<p>The problem is when you reload a saved game -- the rooms that were previously entered won't show the custom image, even after reentering the rooms.  Newly entered rooms, however, will show the custom image properly.  Also, this issue ONLY arises if the custom images are stored in the local game folder, not if they are stored online.</p>\n<p>Thoughts?</p>\n\n",
      "PostDate": "2018-04-07T04:03:22.9820622Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "96e2dcb1-05e0-4a7e-b1ef-2d8eb0617f0f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thoughts since last time I looked at this:\r\n\r\nThe `url` parameter of `gridApi.drawCustomLayerImage(` *doesn't have to be a URL*. It can also be the id of an `<img>` element that already exists.\r\nAs you're creating a load of `<img>` elements for testing, you could give them an `id` attribute, (`id=\"grid_image_'+room.name+'\"'`?) and then if it loads successfully, you can pass the id instead of a URL to drawCustomLayerImage, allowing it to use the data already received.\r\n\r\nso you could do something like…\r\n```\r\n        <function name=\"SetupGridImages\"><![CDATA[\r\n\t  SetGridImgPath(\"\")\r\n\t  foreach (room, AllObjects()) {\r\n            if (HasAttribute(room,\"grid_image\")) {\r\n              JS.CheckImage(room.name, room.grid_image)\r\n            }\r\n\t  }\r\n\t]]></function>\r\n```\r\nand\r\n```\r\nCheckImage = function (name, url) {\r\n  name = name.replace(/\\s/, \"\");\r\n  if (!$(\"#grid_image_\"+name).length) {\r\n    imgFile = getFileUrlJS(url);\r\n    $('<img id=\"grid_image_'+name+'\" style=\"display:none\" onload=\"$(this).addClass(\\'grid-image-loaded\\');\" src=\"'+GetFileUrlJS(url)+'\" onerror=\"imgFail(this)\" />').appendTo(\"#divOutput\");\r\n  }\r\n};\r\n\r\nDrawRoomImage = function(name, gridX, gridY, gridWidth, gridHeight) {\r\n  name = name.replace(/\\s/, \"\");\r\n  var id = 'grid_image_'+name;\r\n  var img = $(\"#\"+id);\r\n  if (img.length > 0) {\r\n    if (img[0].complete) {  // test if the browser is still waiting for a response\r\n      if (img.is(\".grid-image-loaded\")) {\r\n        gridApi.drawCustomLayerImage(id, id, parseFloat(gridX), parseFloat(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));\r\n      }\r\n    } else {\r\n      // keep on trying ever half-second until the image loads\r\n      SetTimeout(function () { DrawRoomImage(name, gridX, gridY, gridWidth, gridHeight);}, 500);\r\n    }\r\n  }\r\n};\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Thoughts since last time I looked at this:</p>\n<p>The <code>url</code> parameter of <code>gridApi.drawCustomLayerImage(</code> <em>doesn't have to be a URL</em>. It can also be the id of an <code>&lt;img&gt;</code> element that already exists.<br>\nAs you're creating a load of <code>&lt;img&gt;</code> elements for testing, you could give them an <code>id</code> attribute, (<code>id=\"grid_image_'+room.name+'\"'</code>?) and then if it loads successfully, you can pass the id instead of a URL to drawCustomLayerImage, allowing it to use the data already received.</p>\n<p>so you could do something like…</p>\n<pre><code>        &lt;function name=\"SetupGridImages\"&gt;&lt;![CDATA[\n\t  SetGridImgPath(\"\")\n\t  foreach (room, AllObjects()) {\n            if (HasAttribute(room,\"grid_image\")) {\n              JS.CheckImage(room.name, room.grid_image)\n            }\n\t  }\n\t]]&gt;&lt;/function&gt;\n</code></pre>\n<p>and</p>\n<pre><code>CheckImage = function (name, url) {\n  name = name.replace(/\\s/, \"\");\n  if (!$(\"#grid_image_\"+name).length) {\n    imgFile = getFileUrlJS(url);\n    $('&lt;img id=\"grid_image_'+name+'\" style=\"display:none\" onload=\"$(this).addClass(\\'grid-image-loaded\\');\" src=\"'+GetFileUrlJS(url)+'\" onerror=\"imgFail(this)\" /&gt;').appendTo(\"#divOutput\");\n  }\n};\n\nDrawRoomImage = function(name, gridX, gridY, gridWidth, gridHeight) {\n  name = name.replace(/\\s/, \"\");\n  var id = 'grid_image_'+name;\n  var img = $(\"#\"+id);\n  if (img.length &gt; 0) {\n    if (img[0].complete) {  // test if the browser is still waiting for a response\n      if (img.is(\".grid-image-loaded\")) {\n        gridApi.drawCustomLayerImage(id, id, parseFloat(gridX), parseFloat(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));\n      }\n    } else {\n      // keep on trying ever half-second until the image loads\n      SetTimeout(function () { DrawRoomImage(name, gridX, gridY, gridWidth, gridHeight);}, 500);\n    }\n  }\n};\n</code></pre>\n\n",
      "PostDate": "2018-04-07T20:23:43.7289033Z",
      "LastEditDate": "2018-04-07T20:44:11.682416Z",
      "link": null
    },
    {
      "PostId": "b44bc9ce-4cca-480e-9879-8ed3aebf4af3",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This (mrangel's new code) still works (perhaps more efficiently), but the local images still don't load in a saved game.\r\n\r\nI have this as one room's image \"https://i.imgur.com/mBf7TBeb.png\", and another room is a local image.  The local image does not appear in the grid on the map when loading a saved game, but the url is still there.",
      "EditableFormat": "markdown",
      "HTML": "<p>This (mrangel's new code) still works (perhaps more efficiently), but the local images still don't load in a saved game.</p>\n<p>I have this as one room's image \"https://i.imgur.com/mBf7TBeb.png\", and another room is a local image.  The local image does not appear in the grid on the map when loading a saved game, but the url is still there.</p>\n\n",
      "PostDate": "2018-04-08T01:34:01.1248781Z",
      "LastEditDate": "2018-04-08T01:34:21.4365926Z",
      "link": null
    },
    {
      "PostId": "0d82d2cd-7fff-4cf1-b800-fe0e9cf58a71",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The only thing I can think of is some kind of race condition on startup. Try putting JS breadcrumbs to track all calls to CheckImage, DrawRoomImage, and the onload/onerror handlers for the image. See if we can figure out if those functions are being hit in a different order for local vs external images.",
      "EditableFormat": "markdown",
      "HTML": "<p>The only thing I can think of is some kind of race condition on startup. Try putting JS breadcrumbs to track all calls to CheckImage, DrawRoomImage, and the onload/onerror handlers for the image. See if we can figure out if those functions are being hit in a different order for local vs external images.</p>\n\n",
      "PostDate": "2018-04-08T02:05:35.3285491Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8805c3d2-24ab-44b4-9bf4-9f5cb6ce8210",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Gotcha.",
      "EditableFormat": "markdown",
      "HTML": "<p>Gotcha.</p>\n\n",
      "PostDate": "2018-04-08T03:34:28.9166921Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bb8f7309-aa83-4ae2-bf5e-b891f219cc60",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I added all the debugging log entries I could think of.  Here's the library, the JS file, the game, the log from a normal game, and the log from a saved game:\r\n\r\n\r\nGridImageLib.aslx\r\n```\r\n<?xml version=\"1.0\"?>\r\n\t<!--\r\n\t\r\n\tIMPORTANT:\r\n\tYou must add the following line to you User Interface Initialisation script:\r\n\t\r\n\tSetupGridImages\r\n\t\r\n\t-->\r\n<!--\r\n\t\tGridImgLib \r\n\t\t\r\n\t\tby KV\r\n\t\t\r\n\t\tSpecial Guest Coders:  MrAngel & Dcoder\r\n\t\t\r\n\t\tVERSION 2.0\r\n\t\t\r\n\t\tThis will allow you to set a picture to display in place of a room's \r\n\t\tstandard map image.  \r\n\t\t\r\n\t\tAll you need to do is include this library along (make sure its js file is in the folder as well!), make sure the map is enabled,\r\n\t\tthen go to the new \"Grid Image\" tab on the room object.  From there, you\r\n\t\tcan use the file browser to import an image file, or you can enter a URL\r\n\t\tto use an online image.  \r\n\t\t\r\n\t\t(You can NOT enter the path to the file!  If using a local image,\r\n\t\tthe file MUST be in the game's main folder!!!)\r\n\t\t\r\n\t\t===\r\n\t\t\r\n\t\tIMPORTANT NOTE:\r\n\t\t\r\n\t\tIf you want to switch back to using the standard map image, you must completely\r\n\t\tremove the \"grid_image\" attribute from the room!!!\r\n\t\t\r\n\t\t===\r\n\t\t\r\n\t\tDesigned for Quest 5.7.1\r\n\t\tYear of publication: 2018\r\n\r\n-->\r\n\t<!--\r\n\t\r\n\tIMPORTANT:\r\n\tYou must add the following line to you User Interface Initialisation script:\r\n\t\r\n\tSetupGridImages\r\n\t\r\n\t-->\r\n  <library>\r\n  \r\n\t<function name=\"SetGridImgPath\" parameters=\"filename\">\r\n\t\tJS.setImagePath (GetFileUrl(\"_FILENAME_\"))\r\n\t</function>\r\n  \r\n\t<function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"><![CDATA[\r\n\t\tif (room.grid_render) {\r\n\t\t  if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\r\n\t\t\tif (room.parent <> null) {\r\n\t\t\t  Grid_DrawRoom (room.parent, redraw, playerobject)\r\n\t\t\t}\r\n\t\t\tgridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")\r\n\t\t\tgridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\r\n\t\t\tJS.Grid_DrawBox (gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\r\n\t\t\tif (HasString(room, \"grid_image\")) {\r\n\t\t\t  imgfile = false\r\n\t\t\t  imgexts = Split(\".png;.jpeg;.gif;.jpg;svg\",\";\")\r\n\t\t\t  room.imageid = room.name+\"-grid-image\"\r\n\t\t\t  JS.eval (\"var roomImageId = '\"+room.imageid+\"';var gridX = '\"+gridx+\"';var gridY = '\"+gridy+\"';var roomGridWidth = '\"+room.grid_width+\"';var roomGridHeight = '\"+room.grid_length+\"';customDrawImage('\"+room.grid_image+\"');\")\r\n\t\t\t}\r\n\t\t\tif (LengthOf(room.grid_label) > 0) {\r\n\t\t\t  label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\r\n\t\t\t  label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\r\n\t\t\t  JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\r\n\t\t\t}\r\n\t\t\tforeach (exit, AllExits()) {\r\n\t\t\t  if (exit.grid_render and exit.parent = room and exit.grid_length > 0) {\r\n\t\t\t\tGrid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t\tGrid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\r\n\t\t  }\r\n\t\t}\r\n\t]]></function>\r\n    \r\n\r\n\t\r\n    <function name=\"SetupGridImages\"><![CDATA[\r\n\t  SetGridImgPath(\"\")\r\n\t  foreach (room, AllObjects()) {\r\n            if (HasAttribute(room,\"grid_image\")) {\r\n              JS.CheckImage(room.name, room.grid_image)\r\n            }\r\n\t  }\r\n\t]]></function>\r\n  \r\n\r\n\t<!--\r\n\tAdd a tab to the editor.\r\n\t-->\r\n\r\n\t<tab>\r\n\t\t<parent>_ObjectEditor</parent>\r\n\t\t<onlydisplayif>game.gridmap</onlydisplayif>\r\n\t\t<caption>Grid Image(optional)</caption>\r\n\t\t<title>Select an image to display in the map</title>\r\n\t\t<mustnotinherit>editor_object</mustnotinherit>\r\n\t\t<control>\r\n\t\t  <controltype>checkbox</controltype>\r\n\t\t  <caption>Enter a URL (or file name) instead of loading a local image</caption>\r\n\t\t  <attribute>gridimg_custompath</attribute>\r\n\t\t</control>\r\n\t\t<control>\r\n\t\t\t<caption>Grid Image</caption>\r\n\t\t\t<controltype>file</controltype>\r\n\t\t\t<attribute>grid_image</attribute>\r\n\t\t\t<source>[EditorImageFormats]</source>\r\n\t\t\t<filefiltername>Picture Files</filefiltername>\r\n\t\t\t<onlydisplayif>not HasAttribute(this,\"gridimg_custompath\")</onlydisplayif>\r\n\t\t\t<preview/>\r\n\t\t</control>\r\n\t\t<control>\r\n\t\t\t<caption>Grid Image</caption>\r\n\t\t\t<controltype>file</controltype>\r\n\t\t\t<attribute>grid_image</attribute>\r\n\t\t\t<source>[EditorImageFormats]</source>\r\n\t\t\t<filefiltername>Picture Files</filefiltername>\r\n\t\t\t<onlydisplayif>not this.gridimg_custompath</onlydisplayif>\r\n\t\t\t<preview/>\r\n\t\t</control>\r\n\t\t<control>\r\n\t\t\t  <controltype>label</controltype>\r\n\t\t\t  <onlydisplayif>not this.gridimg_custompath</onlydisplayif>\r\n\t\t\t  <caption>THIS FILE WILL BE IMPORTED BY QUEST</caption>\r\n\t\t\t</control>\r\n\t\t<control>\r\n\t\t  <caption>Enter the URL or file name</caption>\r\n\t\t  <attribute>grid_image</attribute>\r\n\t\t  <controltype>textbox</controltype>\r\n\t\t  <onlydisplayif>this.gridimg_custompath</onlydisplayif>\r\n\t\t</control>\r\n\t\t<control>\r\n\t\t  <controltype>label</controltype>\r\n\t\t  <onlydisplayif>this.gridimg_custompath</onlydisplayif>\r\n\t\t  <caption>IF ENTERING A FILE NAME, BE SURE THE FILE IS IN THE GAME'S FOLDER!!!</caption>\r\n\t\t</control>\r\n\t</tab>\r\n  <javascript src=\"GridImageLib.js\" />\r\n  \r\n  </library>\r\n```\r\n\r\n---\r\nGridImageLib.js\r\n```\r\nvar questImagePath = \"\";\r\n\r\nsetImagePath = function(path) {\r\n\tconsole.log(\"\");\r\n\tconsole.log(\"setImagePath\");\r\n\tconsole.log(path);\r\n  questImagePath = path;\r\n};\r\n\r\ngetFileUrlJS = function(filename){\r\n\tconsole.log(\"\");\r\n\tconsole.log(\"getFileUrlJS\");\r\n\tconsole.log(filename);\r\n  if(filename.indexOf(\"://\") > 0) {\r\n\t  console.log(filename);\r\n\treturn (filename);\r\n  } else {\r\n\t  console.log(questImagePath.replace(\"_FILENAME_\", filename));\r\n\treturn questImagePath.replace(\"_FILENAME_\", filename);\r\n  }\r\n};\r\nvar imagesToCheck = [];\r\n\r\nfunction checkImages(){\r\n\tconsole.log(\"\");\r\n\tconsole.log(\"checkImages\");\r\n\timagesToCheck.forEach(function(img){\r\n\t\tisFileGood(img)\r\n\t});\r\n};\r\n\r\nvar failedImgs = [];\r\n\r\nfunction imgFail(imgFailed){\r\n\tconsole.log(\"\");\r\n\tconsole.log(\"imgFail\");\r\n\tconsole.log(imgFailed);\r\n\tfailedImgs.push(imgFailed.src);\r\n};\r\n\r\nfunction isFileGood(url){\r\n\tconsole.log(\"\");\r\n\tconsole.log(\"isFileGood\");\r\n\tconsole.log(url);\r\n\timgFile = getFileUrlJS(url);\r\n\tconsole.log(imgFile);\r\n\taddText(\"<img style='display:none' /*onload='addToMap()'*/ onerror='imgFail(this)' src='\"+imgFile+\"'/>\");\r\n};\r\n\r\ncustomDrawImage = function(url){\r\n\tconsole.log(\"\");\r\n\tconsole.log(\"customDrawImage\");\r\n\tconsole.log(url);\r\n\tvar imgFile = getFileUrlJS(url);\r\n\tvar failnumber = failedImgs.indexOf(imgFile);\r\n\tif(failnumber === -1){\r\n\t\tconsole.log(\"drawing custom layer\");\r\n\t\tconsole.log(imgFile);\r\n\t\tgridApi.drawCustomLayerImage(roomImageId, imgFile, parseFloat(gridX), parseFloat(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));\r\n\t}\r\n};\r\n\r\nCheckImage = function (name, url) {\r\n\tconsole.log(\"\");\r\n\tconsole.log(\"CheckImage\");\r\n\tconsole.log(name);\r\n\tconsole.log(url);\r\n  name = name.replace(/\\s/, \"\");\r\n  if (!$(\"#grid_image_\"+name).length) {\r\n    imgFile = getFileUrlJS(url);\r\n\tconsole.log(imgFile);\r\n    $('<img id=\"grid_image_'+name+'\" style=\"display:none\" onload=\"$(this).addClass(\\'grid-image-loaded\\');\" src=\"'+getFileUrlJS(url)+'\" onerror=\"imgFail(this)\" />').appendTo(\"#divOutput\");\r\n  }\r\n};\r\n\r\nDrawRoomImage = function(name, gridX, gridY, gridWidth, gridHeight) {\r\n\tconsole.log(\"\");\r\n\tconsole.log(\"DrawRoomImage\");\r\n\tconsole.log(name);\r\n  name = name.replace(/\\s/, \"\");\r\n  var id = 'grid_image_'+name;\r\n  var img = $(\"#\"+id);\r\n  if (img.length > 0) {\r\n    if (img[0].complete) {  // test if the browser is still waiting for a response\r\n      if (img.is(\".grid-image-loaded\")) {\r\n\t\t  console.log(\"drawing img\");\r\n\t\t  console.log(name);\r\n        gridApi.drawCustomLayerImage(id, id, parseFloat(gridX), parseFloat(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));\r\n      }\r\n    } else {\r\n      // keep on trying ever half-second until the image loads\r\n\t  console.log(\"setting timeout to retry drawing img\");\r\n\t  console.log(name);\r\n      SetTimeout(function () { DrawRoomImage(name, gridX, gridY, gridWidth, gridHeight);}, 500);\r\n    }\r\n  }\r\n};\r\n```\r\n\r\n---\r\ngame file\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <include ref=\"GridImageLib.aslx\" />\r\n  <game name=\"TESTMAP2\">\r\n    <gameid>f63f6998-9c91-461a-b7ac-f4c97644ad0d</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <feature_advancedscripts />\r\n    <gridmap />\r\n    <inituserinterface type=\"script\">\r\n      SetupGridImages\r\n    </inituserinterface>\r\n    <start type=\"script\">\r\n    </start>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_image\">https://i.imgur.com/mBf7TBeb.png</attr>\r\n    <gridimg_custompath />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"south\" to=\"room2\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"room2\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_image\">SunflowersD.jpg</attr>\r\n    <exit alias=\"north\" to=\"room\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"room3\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"room3\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_image\">GrasslandB.png</attr>\r\n    <exit alias=\"north\" to=\"room2\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n\r\n---\r\nnormal game console log\r\n\r\n```\r\n \r\nGridImageLib.js?c=197805992:5 setImagePath\r\nGridImageLib.js?c=197805992:6 quest://local/_FILENAME_?c=197805992\r\nGridImageLib.js?c=197805992:64 \r\nGridImageLib.js?c=197805992:65 CheckImage\r\nGridImageLib.js?c=197805992:66 room\r\nGridImageLib.js?c=197805992:67 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js?c=197805992:11 \r\nGridImageLib.js?c=197805992:12 getFileUrlJS\r\nGridImageLib.js?c=197805992:13 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js?c=197805992:15 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js?c=197805992:71 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js?c=197805992:11 \r\nGridImageLib.js?c=197805992:12 getFileUrlJS\r\nGridImageLib.js?c=197805992:13 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js?c=197805992:15 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js?c=197805992:64 \r\nGridImageLib.js?c=197805992:65 CheckImage\r\nGridImageLib.js?c=197805992:66 room2\r\nGridImageLib.js?c=197805992:67 SunflowersD.jpg\r\nGridImageLib.js?c=197805992:11 \r\nGridImageLib.js?c=197805992:12 getFileUrlJS\r\nGridImageLib.js?c=197805992:13 SunflowersD.jpg\r\nGridImageLib.js?c=197805992:18 quest://local/SunflowersD.jpg?c=197805992\r\nGridImageLib.js?c=197805992:71 quest://local/SunflowersD.jpg?c=197805992\r\nGridImageLib.js?c=197805992:11 \r\nGridImageLib.js?c=197805992:12 getFileUrlJS\r\nGridImageLib.js?c=197805992:13 SunflowersD.jpg\r\nGridImageLib.js?c=197805992:18 quest://local/SunflowersD.jpg?c=197805992\r\nGridImageLib.js?c=197805992:64 \r\nGridImageLib.js?c=197805992:65 CheckImage\r\nGridImageLib.js?c=197805992:66 room3\r\nGridImageLib.js?c=197805992:67 GrasslandB.png\r\nGridImageLib.js?c=197805992:11 \r\nGridImageLib.js:12 getFileUrlJS\r\nGridImageLib.js:13 GrasslandB.png\r\nGridImageLib.js:18 quest://local/GrasslandB.png?c=197805992\r\nGridImageLib.js:71 quest://local/GrasslandB.png?c=197805992\r\nGridImageLib.js:11 \r\nGridImageLib.js:12 getFileUrlJS\r\nGridImageLib.js:13 GrasslandB.png\r\nGridImageLib.js:18 quest://local/GrasslandB.png?c=197805992\r\nGridImageLib.js:51 \r\nGridImageLib.js:52 customDrawImage\r\nGridImageLib.js:53 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js:11 \r\nGridImageLib.js:12 getFileUrlJS\r\nGridImageLib.js:13 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js:15 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js:57 drawing custom layer\r\nGridImageLib.js:58 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js:51 \r\nGridImageLib.js:52 customDrawImage\r\nGridImageLib.js:53 SunflowersD.jpg\r\nGridImageLib.js:11 \r\nGridImageLib.js:12 getFileUrlJS\r\nGridImageLib.js:13 SunflowersD.jpg\r\nGridImageLib.js:18 quest://local/SunflowersD.jpg?c=197805992\r\nGridImageLib.js:57 drawing custom layer\r\nGridImageLib.js:58 quest://local/SunflowersD.jpg?c=197805992\r\n```\r\n\r\n\r\n\r\n---\r\nsave game console log\r\n\r\n```\r\n \r\nGridImageLib.js?c=197806018:52 customDrawImage\r\nGridImageLib.js?c=197806018:53 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js?c=197806018:11 \r\nGridImageLib.js?c=197806018:12 getFileUrlJS\r\nGridImageLib.js?c=197806018:13 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js?c=197806018:15 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js?c=197806018:57 drawing custom layer\r\nGridImageLib.js?c=197806018:58 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js?c=197806018:51 \r\nGridImageLib.js?c=197806018:52 customDrawImage\r\nGridImageLib.js?c=197806018:53 SunflowersD.jpg\r\nGridImageLib.js?c=197806018:11 \r\nGridImageLib.js?c=197806018:12 getFileUrlJS\r\nGridImageLib.js?c=197806018:13 SunflowersD.jpg\r\nGridImageLib.js?c=197806018:18 \r\nGridImageLib.js?c=197806018:57 drawing custom layer\r\nGridImageLib.js?c=197806018:58 \r\nGridImageLib.js?c=197806018:4 \r\nGridImageLib.js?c=197806018:5 setImagePath\r\nGridImageLib.js?c=197806018:6 quest://local/_FILENAME_?c=197806020\r\nGridImageLib.js?c=197806018:64 \r\nGridImageLib.js?c=197806018:65 CheckImage\r\nGridImageLib.js?c=197806018:66 room\r\nGridImageLib.js?c=197806018:67 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js?c=197806018:11 \r\nGridImageLib.js?c=197806018:12 getFileUrlJS\r\nGridImageLib.js?c=197806018:13 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js?c=197806018:15 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js?c=197806018:71 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js?c=197806018:11 \r\nGridImageLib.js?c=197806018:12 getFileUrlJS\r\nGridImageLib.js?c=197806018:13 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js?c=197806018:15 https://i.imgur.com/mBf7TBeb.png\r\nGridImageLib.js?c=197806018:64 \r\nGridImageLib.js?c=197806018:65 CheckImage\r\nGridImageLib.js?c=197806018:66 room2\r\nGridImageLib.js?c=197806018:67 SunflowersD.jpg\r\nGridImageLib.js?c=197806018:11 \r\nGridImageLib.js?c=197806018:12 getFileUrlJS\r\nGridImageLib.js?c=197806018:13 SunflowersD.jpg\r\nGridImageLib.js?c=197806018:18 quest://local/SunflowersD.jpg?c=197806020\r\nGridImageLib.js?c=197806018:71 quest://local/SunflowersD.jpg?c=197806020\r\nGridImageLib.js?c=197806018:11 \r\nGridImageLib.js?c=197806018:12 getFileUrlJS\r\nGridImageLib.js?c=197806018:13 SunflowersD.jpg\r\nGridImageLib.js?c=197806018:18 quest://local/SunflowersD.jpg?c=197806020\r\nGridImageLib.js?c=197806018:64 \r\nGridImageLib.js?c=197806018:65 CheckImage\r\nGridImageLib.js?c=197806018:66 room3\r\nGridImageLib.js?c=197806018:67 GrasslandB.png\r\nGridImageLib.js?c=197806018:11 \r\nGridImageLib.js?c=197806018:12 getFileUrlJS\r\nGridImageLib.js?c=197806018:13 GrasslandB.png\r\nGridImageLib.js?c=197806018:18 quest://local/GrasslandB.png?c=197806020\r\nGridImageLib.js?c=197806018:71 quest://local/GrasslandB.png?c=197806020\r\nGridImageLib.js?c=197806018:11 \r\nGridImageLib.js?c=197806018:12 getFileUrlJS\r\nGridImageLib.js?c=197806018:13 GrasslandB.png\r\nGridImageLib.js?c=197806018:18 quest://local/GrasslandB.png?c=197806020\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I added all the debugging log entries I could think of.  Here's the library, the JS file, the game, the log from a normal game, and the log from a saved game:</p>\n<p>GridImageLib.aslx</p>\n<pre><code>&lt;?xml version=\"1.0\"?&gt;\n\t&lt;!--\n\t\n\tIMPORTANT:\n\tYou must add the following line to you User Interface Initialisation script:\n\t\n\tSetupGridImages\n\t\n\t--&gt;\n&lt;!--\n\t\tGridImgLib \n\t\t\n\t\tby KV\n\t\t\n\t\tSpecial Guest Coders:  MrAngel &amp; Dcoder\n\t\t\n\t\tVERSION 2.0\n\t\t\n\t\tThis will allow you to set a picture to display in place of a room's \n\t\tstandard map image.  \n\t\t\n\t\tAll you need to do is include this library along (make sure its js file is in the folder as well!), make sure the map is enabled,\n\t\tthen go to the new \"Grid Image\" tab on the room object.  From there, you\n\t\tcan use the file browser to import an image file, or you can enter a URL\n\t\tto use an online image.  \n\t\t\n\t\t(You can NOT enter the path to the file!  If using a local image,\n\t\tthe file MUST be in the game's main folder!!!)\n\t\t\n\t\t===\n\t\t\n\t\tIMPORTANT NOTE:\n\t\t\n\t\tIf you want to switch back to using the standard map image, you must completely\n\t\tremove the \"grid_image\" attribute from the room!!!\n\t\t\n\t\t===\n\t\t\n\t\tDesigned for Quest 5.7.1\n\t\tYear of publication: 2018\n\n--&gt;\n\t&lt;!--\n\t\n\tIMPORTANT:\n\tYou must add the following line to you User Interface Initialisation script:\n\t\n\tSetupGridImages\n\t\n\t--&gt;\n  &lt;library&gt;\n  \n\t&lt;function name=\"SetGridImgPath\" parameters=\"filename\"&gt;\n\t\tJS.setImagePath (GetFileUrl(\"_FILENAME_\"))\n\t&lt;/function&gt;\n  \n\t&lt;function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"&gt;&lt;![CDATA[\n\t\tif (room.grid_render) {\n\t\t  if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\n\t\t\tif (room.parent &lt;&gt; null) {\n\t\t\t  Grid_DrawRoom (room.parent, redraw, playerobject)\n\t\t\t}\n\t\t\tgridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")\n\t\t\tgridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\n\t\t\tJS.Grid_DrawBox (gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\n\t\t\tif (HasString(room, \"grid_image\")) {\n\t\t\t  imgfile = false\n\t\t\t  imgexts = Split(\".png;.jpeg;.gif;.jpg;svg\",\";\")\n\t\t\t  room.imageid = room.name+\"-grid-image\"\n\t\t\t  JS.eval (\"var roomImageId = '\"+room.imageid+\"';var gridX = '\"+gridx+\"';var gridY = '\"+gridy+\"';var roomGridWidth = '\"+room.grid_width+\"';var roomGridHeight = '\"+room.grid_length+\"';customDrawImage('\"+room.grid_image+\"');\")\n\t\t\t}\n\t\t\tif (LengthOf(room.grid_label) &gt; 0) {\n\t\t\t  label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\n\t\t\t  label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\n\t\t\t  JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\n\t\t\t}\n\t\t\tforeach (exit, AllExits()) {\n\t\t\t  if (exit.grid_render and exit.parent = room and exit.grid_length &gt; 0) {\n\t\t\t\tGrid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\n\t\t\t  }\n\t\t\t}\n\t\t\tGrid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\n\t\t  }\n\t\t}\n\t]]&gt;&lt;/function&gt;\n    \n\n\t\n    &lt;function name=\"SetupGridImages\"&gt;&lt;![CDATA[\n\t  SetGridImgPath(\"\")\n\t  foreach (room, AllObjects()) {\n            if (HasAttribute(room,\"grid_image\")) {\n              JS.CheckImage(room.name, room.grid_image)\n            }\n\t  }\n\t]]&gt;&lt;/function&gt;\n  \n\n\t&lt;!--\n\tAdd a tab to the editor.\n\t--&gt;\n\n\t&lt;tab&gt;\n\t\t&lt;parent&gt;_ObjectEditor&lt;/parent&gt;\n\t\t&lt;onlydisplayif&gt;game.gridmap&lt;/onlydisplayif&gt;\n\t\t&lt;caption&gt;Grid Image(optional)&lt;/caption&gt;\n\t\t&lt;title&gt;Select an image to display in the map&lt;/title&gt;\n\t\t&lt;mustnotinherit&gt;editor_object&lt;/mustnotinherit&gt;\n\t\t&lt;control&gt;\n\t\t  &lt;controltype&gt;checkbox&lt;/controltype&gt;\n\t\t  &lt;caption&gt;Enter a URL (or file name) instead of loading a local image&lt;/caption&gt;\n\t\t  &lt;attribute&gt;gridimg_custompath&lt;/attribute&gt;\n\t\t&lt;/control&gt;\n\t\t&lt;control&gt;\n\t\t\t&lt;caption&gt;Grid Image&lt;/caption&gt;\n\t\t\t&lt;controltype&gt;file&lt;/controltype&gt;\n\t\t\t&lt;attribute&gt;grid_image&lt;/attribute&gt;\n\t\t\t&lt;source&gt;[EditorImageFormats]&lt;/source&gt;\n\t\t\t&lt;filefiltername&gt;Picture Files&lt;/filefiltername&gt;\n\t\t\t&lt;onlydisplayif&gt;not HasAttribute(this,\"gridimg_custompath\")&lt;/onlydisplayif&gt;\n\t\t\t&lt;preview/&gt;\n\t\t&lt;/control&gt;\n\t\t&lt;control&gt;\n\t\t\t&lt;caption&gt;Grid Image&lt;/caption&gt;\n\t\t\t&lt;controltype&gt;file&lt;/controltype&gt;\n\t\t\t&lt;attribute&gt;grid_image&lt;/attribute&gt;\n\t\t\t&lt;source&gt;[EditorImageFormats]&lt;/source&gt;\n\t\t\t&lt;filefiltername&gt;Picture Files&lt;/filefiltername&gt;\n\t\t\t&lt;onlydisplayif&gt;not this.gridimg_custompath&lt;/onlydisplayif&gt;\n\t\t\t&lt;preview/&gt;\n\t\t&lt;/control&gt;\n\t\t&lt;control&gt;\n\t\t\t  &lt;controltype&gt;label&lt;/controltype&gt;\n\t\t\t  &lt;onlydisplayif&gt;not this.gridimg_custompath&lt;/onlydisplayif&gt;\n\t\t\t  &lt;caption&gt;THIS FILE WILL BE IMPORTED BY QUEST&lt;/caption&gt;\n\t\t\t&lt;/control&gt;\n\t\t&lt;control&gt;\n\t\t  &lt;caption&gt;Enter the URL or file name&lt;/caption&gt;\n\t\t  &lt;attribute&gt;grid_image&lt;/attribute&gt;\n\t\t  &lt;controltype&gt;textbox&lt;/controltype&gt;\n\t\t  &lt;onlydisplayif&gt;this.gridimg_custompath&lt;/onlydisplayif&gt;\n\t\t&lt;/control&gt;\n\t\t&lt;control&gt;\n\t\t  &lt;controltype&gt;label&lt;/controltype&gt;\n\t\t  &lt;onlydisplayif&gt;this.gridimg_custompath&lt;/onlydisplayif&gt;\n\t\t  &lt;caption&gt;IF ENTERING A FILE NAME, BE SURE THE FILE IS IN THE GAME'S FOLDER!!!&lt;/caption&gt;\n\t\t&lt;/control&gt;\n\t&lt;/tab&gt;\n  &lt;javascript src=\"GridImageLib.js\" /&gt;\n  \n  &lt;/library&gt;\n</code></pre>\n<hr>\n<p>GridImageLib.js</p>\n<pre><code>var questImagePath = \"\";\n\nsetImagePath = function(path) {\n\tconsole.log(\"\");\n\tconsole.log(\"setImagePath\");\n\tconsole.log(path);\n  questImagePath = path;\n};\n\ngetFileUrlJS = function(filename){\n\tconsole.log(\"\");\n\tconsole.log(\"getFileUrlJS\");\n\tconsole.log(filename);\n  if(filename.indexOf(\"://\") &gt; 0) {\n\t  console.log(filename);\n\treturn (filename);\n  } else {\n\t  console.log(questImagePath.replace(\"_FILENAME_\", filename));\n\treturn questImagePath.replace(\"_FILENAME_\", filename);\n  }\n};\nvar imagesToCheck = [];\n\nfunction checkImages(){\n\tconsole.log(\"\");\n\tconsole.log(\"checkImages\");\n\timagesToCheck.forEach(function(img){\n\t\tisFileGood(img)\n\t});\n};\n\nvar failedImgs = [];\n\nfunction imgFail(imgFailed){\n\tconsole.log(\"\");\n\tconsole.log(\"imgFail\");\n\tconsole.log(imgFailed);\n\tfailedImgs.push(imgFailed.src);\n};\n\nfunction isFileGood(url){\n\tconsole.log(\"\");\n\tconsole.log(\"isFileGood\");\n\tconsole.log(url);\n\timgFile = getFileUrlJS(url);\n\tconsole.log(imgFile);\n\taddText(\"&lt;img style='display:none' /*onload='addToMap()'*/ onerror='imgFail(this)' src='\"+imgFile+\"'/&gt;\");\n};\n\ncustomDrawImage = function(url){\n\tconsole.log(\"\");\n\tconsole.log(\"customDrawImage\");\n\tconsole.log(url);\n\tvar imgFile = getFileUrlJS(url);\n\tvar failnumber = failedImgs.indexOf(imgFile);\n\tif(failnumber === -1){\n\t\tconsole.log(\"drawing custom layer\");\n\t\tconsole.log(imgFile);\n\t\tgridApi.drawCustomLayerImage(roomImageId, imgFile, parseFloat(gridX), parseFloat(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));\n\t}\n};\n\nCheckImage = function (name, url) {\n\tconsole.log(\"\");\n\tconsole.log(\"CheckImage\");\n\tconsole.log(name);\n\tconsole.log(url);\n  name = name.replace(/\\s/, \"\");\n  if (!$(\"#grid_image_\"+name).length) {\n    imgFile = getFileUrlJS(url);\n\tconsole.log(imgFile);\n    $('&lt;img id=\"grid_image_'+name+'\" style=\"display:none\" onload=\"$(this).addClass(\\'grid-image-loaded\\');\" src=\"'+getFileUrlJS(url)+'\" onerror=\"imgFail(this)\" /&gt;').appendTo(\"#divOutput\");\n  }\n};\n\nDrawRoomImage = function(name, gridX, gridY, gridWidth, gridHeight) {\n\tconsole.log(\"\");\n\tconsole.log(\"DrawRoomImage\");\n\tconsole.log(name);\n  name = name.replace(/\\s/, \"\");\n  var id = 'grid_image_'+name;\n  var img = $(\"#\"+id);\n  if (img.length &gt; 0) {\n    if (img[0].complete) {  // test if the browser is still waiting for a response\n      if (img.is(\".grid-image-loaded\")) {\n\t\t  console.log(\"drawing img\");\n\t\t  console.log(name);\n        gridApi.drawCustomLayerImage(id, id, parseFloat(gridX), parseFloat(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));\n      }\n    } else {\n      // keep on trying ever half-second until the image loads\n\t  console.log(\"setting timeout to retry drawing img\");\n\t  console.log(name);\n      SetTimeout(function () { DrawRoomImage(name, gridX, gridY, gridWidth, gridHeight);}, 500);\n    }\n  }\n};\n</code></pre>\n<hr>\n<p>game file</p>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;include ref=\"GridImageLib.aslx\" /&gt;\n  &lt;game name=\"TESTMAP2\"&gt;\n    &lt;gameid&gt;f63f6998-9c91-461a-b7ac-f4c97644ad0d&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;feature_advancedscripts /&gt;\n    &lt;gridmap /&gt;\n    &lt;inituserinterface type=\"script\"&gt;\n      SetupGridImages\n    &lt;/inituserinterface&gt;\n    &lt;start type=\"script\"&gt;\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_image\"&gt;https://i.imgur.com/mBf7TBeb.png&lt;/attr&gt;\n    &lt;gridimg_custompath /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"south\" to=\"room2\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room2\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_image\"&gt;SunflowersD.jpg&lt;/attr&gt;\n    &lt;exit alias=\"north\" to=\"room\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"room3\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room3\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_image\"&gt;GrasslandB.png&lt;/attr&gt;\n    &lt;exit alias=\"north\" to=\"room2\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p>normal game console log</p>\n<pre><code> \nGridImageLib.js?c=197805992:5 setImagePath\nGridImageLib.js?c=197805992:6 quest://local/_FILENAME_?c=197805992\nGridImageLib.js?c=197805992:64 \nGridImageLib.js?c=197805992:65 CheckImage\nGridImageLib.js?c=197805992:66 room\nGridImageLib.js?c=197805992:67 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js?c=197805992:11 \nGridImageLib.js?c=197805992:12 getFileUrlJS\nGridImageLib.js?c=197805992:13 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js?c=197805992:15 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js?c=197805992:71 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js?c=197805992:11 \nGridImageLib.js?c=197805992:12 getFileUrlJS\nGridImageLib.js?c=197805992:13 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js?c=197805992:15 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js?c=197805992:64 \nGridImageLib.js?c=197805992:65 CheckImage\nGridImageLib.js?c=197805992:66 room2\nGridImageLib.js?c=197805992:67 SunflowersD.jpg\nGridImageLib.js?c=197805992:11 \nGridImageLib.js?c=197805992:12 getFileUrlJS\nGridImageLib.js?c=197805992:13 SunflowersD.jpg\nGridImageLib.js?c=197805992:18 quest://local/SunflowersD.jpg?c=197805992\nGridImageLib.js?c=197805992:71 quest://local/SunflowersD.jpg?c=197805992\nGridImageLib.js?c=197805992:11 \nGridImageLib.js?c=197805992:12 getFileUrlJS\nGridImageLib.js?c=197805992:13 SunflowersD.jpg\nGridImageLib.js?c=197805992:18 quest://local/SunflowersD.jpg?c=197805992\nGridImageLib.js?c=197805992:64 \nGridImageLib.js?c=197805992:65 CheckImage\nGridImageLib.js?c=197805992:66 room3\nGridImageLib.js?c=197805992:67 GrasslandB.png\nGridImageLib.js?c=197805992:11 \nGridImageLib.js:12 getFileUrlJS\nGridImageLib.js:13 GrasslandB.png\nGridImageLib.js:18 quest://local/GrasslandB.png?c=197805992\nGridImageLib.js:71 quest://local/GrasslandB.png?c=197805992\nGridImageLib.js:11 \nGridImageLib.js:12 getFileUrlJS\nGridImageLib.js:13 GrasslandB.png\nGridImageLib.js:18 quest://local/GrasslandB.png?c=197805992\nGridImageLib.js:51 \nGridImageLib.js:52 customDrawImage\nGridImageLib.js:53 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js:11 \nGridImageLib.js:12 getFileUrlJS\nGridImageLib.js:13 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js:15 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js:57 drawing custom layer\nGridImageLib.js:58 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js:51 \nGridImageLib.js:52 customDrawImage\nGridImageLib.js:53 SunflowersD.jpg\nGridImageLib.js:11 \nGridImageLib.js:12 getFileUrlJS\nGridImageLib.js:13 SunflowersD.jpg\nGridImageLib.js:18 quest://local/SunflowersD.jpg?c=197805992\nGridImageLib.js:57 drawing custom layer\nGridImageLib.js:58 quest://local/SunflowersD.jpg?c=197805992\n</code></pre>\n<hr>\n<p>save game console log</p>\n<pre><code> \nGridImageLib.js?c=197806018:52 customDrawImage\nGridImageLib.js?c=197806018:53 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js?c=197806018:11 \nGridImageLib.js?c=197806018:12 getFileUrlJS\nGridImageLib.js?c=197806018:13 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js?c=197806018:15 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js?c=197806018:57 drawing custom layer\nGridImageLib.js?c=197806018:58 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js?c=197806018:51 \nGridImageLib.js?c=197806018:52 customDrawImage\nGridImageLib.js?c=197806018:53 SunflowersD.jpg\nGridImageLib.js?c=197806018:11 \nGridImageLib.js?c=197806018:12 getFileUrlJS\nGridImageLib.js?c=197806018:13 SunflowersD.jpg\nGridImageLib.js?c=197806018:18 \nGridImageLib.js?c=197806018:57 drawing custom layer\nGridImageLib.js?c=197806018:58 \nGridImageLib.js?c=197806018:4 \nGridImageLib.js?c=197806018:5 setImagePath\nGridImageLib.js?c=197806018:6 quest://local/_FILENAME_?c=197806020\nGridImageLib.js?c=197806018:64 \nGridImageLib.js?c=197806018:65 CheckImage\nGridImageLib.js?c=197806018:66 room\nGridImageLib.js?c=197806018:67 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js?c=197806018:11 \nGridImageLib.js?c=197806018:12 getFileUrlJS\nGridImageLib.js?c=197806018:13 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js?c=197806018:15 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js?c=197806018:71 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js?c=197806018:11 \nGridImageLib.js?c=197806018:12 getFileUrlJS\nGridImageLib.js?c=197806018:13 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js?c=197806018:15 https://i.imgur.com/mBf7TBeb.png\nGridImageLib.js?c=197806018:64 \nGridImageLib.js?c=197806018:65 CheckImage\nGridImageLib.js?c=197806018:66 room2\nGridImageLib.js?c=197806018:67 SunflowersD.jpg\nGridImageLib.js?c=197806018:11 \nGridImageLib.js?c=197806018:12 getFileUrlJS\nGridImageLib.js?c=197806018:13 SunflowersD.jpg\nGridImageLib.js?c=197806018:18 quest://local/SunflowersD.jpg?c=197806020\nGridImageLib.js?c=197806018:71 quest://local/SunflowersD.jpg?c=197806020\nGridImageLib.js?c=197806018:11 \nGridImageLib.js?c=197806018:12 getFileUrlJS\nGridImageLib.js?c=197806018:13 SunflowersD.jpg\nGridImageLib.js?c=197806018:18 quest://local/SunflowersD.jpg?c=197806020\nGridImageLib.js?c=197806018:64 \nGridImageLib.js?c=197806018:65 CheckImage\nGridImageLib.js?c=197806018:66 room3\nGridImageLib.js?c=197806018:67 GrasslandB.png\nGridImageLib.js?c=197806018:11 \nGridImageLib.js?c=197806018:12 getFileUrlJS\nGridImageLib.js?c=197806018:13 GrasslandB.png\nGridImageLib.js?c=197806018:18 quest://local/GrasslandB.png?c=197806020\nGridImageLib.js?c=197806018:71 quest://local/GrasslandB.png?c=197806020\nGridImageLib.js?c=197806018:11 \nGridImageLib.js?c=197806018:12 getFileUrlJS\nGridImageLib.js?c=197806018:13 GrasslandB.png\nGridImageLib.js?c=197806018:18 quest://local/GrasslandB.png?c=197806020\n</code></pre>\n\n",
      "PostDate": "2018-04-08T15:17:19.6114726Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2f33f31e-bcfa-4a38-a555-b09a694cb2a7",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Fixed!\r\n\r\nI change the ```grid_image``` attribute to the result of ```getFileUrlJs()``` during the initial setup.  The saved game will load from that url.  (Works in the desktop player and online.)\r\n\r\n```\r\ncustomDrawImage = function(url){\r\n\tvar imgFile = getFileUrlJS(url);\r\n\tvar failnumber = failedImgs.indexOf(imgFile);\r\n\tif(failnumber === -1){\r\n\t\tASLEvent('AslSet', roomImageId.replace(\"-\",\".\").replace(\"grid-image\",\"grid_image\")+\"=\"+imgFile);\r\n\t\tgridApi.drawCustomLayerImage(roomImageId, imgFile, parseFloat(gridX), parseFloat(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));\r\n\t}\r\n};\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Fixed!</p>\n<p>I change the <code>grid_image</code> attribute to the result of <code>getFileUrlJs()</code> during the initial setup.  The saved game will load from that url.  (Works in the desktop player and online.)</p>\n<pre><code>customDrawImage = function(url){\n\tvar imgFile = getFileUrlJS(url);\n\tvar failnumber = failedImgs.indexOf(imgFile);\n\tif(failnumber === -1){\n\t\tASLEvent('AslSet', roomImageId.replace(\"-\",\".\").replace(\"grid-image\",\"grid_image\")+\"=\"+imgFile);\n\t\tgridApi.drawCustomLayerImage(roomImageId, imgFile, parseFloat(gridX), parseFloat(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));\n\t}\n};\n</code></pre>\n\n",
      "PostDate": "2018-04-08T16:23:37.6134503Z",
      "LastEditDate": "2018-04-08T16:37:59.1362322Z",
      "link": null
    },
    {
      "PostId": "c0b59d0e-416d-4361-906f-f504b84fa41f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's kind of what I expected in the logs; in the saved game, it's drawing the image before you make the call to checkImages, because the grid is restored to its previous state before UI initialisation. This means that as it stands, a URL that fails to load will remain in the save file, and will be passed to Raster (I believe someone said that messed up the map) when the save is restored because `failedImgs` hasn't been populated yet.\r\n\r\nThe `DrawRoomImage` function in the last example was intended to be a replacement for your `customDrawImage`; drawing the image from the existing `<img>` rather than going back to the URL.",
      "EditableFormat": "markdown",
      "HTML": "<p>That's kind of what I expected in the logs; in the saved game, it's drawing the image before you make the call to checkImages, because the grid is restored to its previous state before UI initialisation. This means that as it stands, a URL that fails to load will remain in the save file, and will be passed to Raster (I believe someone said that messed up the map) when the save is restored because <code>failedImgs</code> hasn't been populated yet.</p>\n<p>The <code>DrawRoomImage</code> function in the last example was intended to be a replacement for your <code>customDrawImage</code>; drawing the image from the existing <code>&lt;img&gt;</code> rather than going back to the URL.</p>\n\n",
      "PostDate": "2018-04-08T16:35:10.4991036Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "049169ff-f17e-4d62-a8ed-f1b77c80a921",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> The ```DrawRoomImage``` function in the last example was intended to be a replacement for your ```customDrawImage```\r\n\r\nOh.  (I should have noticed that.  It didn't even add an entry showing ```DrawRoomImage``` being called in the console log, and I didn't notice that, either.  Doh!)\r\n\r\nIt's working now, though.  \r\n\r\nThanks mrangel and Dcoder!",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>The <code>DrawRoomImage</code> function in the last example was intended to be a replacement for your <code>customDrawImage</code></p>\n</blockquote>\n<p>Oh.  (I should have noticed that.  It didn't even add an entry showing <code>DrawRoomImage</code> being called in the console log, and I didn't notice that, either.  Doh!)</p>\n<p>It's working now, though.</p>\n<p>Thanks mrangel and Dcoder!</p>\n\n",
      "PostDate": "2018-04-08T16:42:43.8617166Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
