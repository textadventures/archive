{
  "Topic": {
    "TopicId": "ykouw7idaeytupcl3rmywa",
    "ForumId": "10",
    "Title": "Isn't There an Easy Way to Add Text Processor Commands? [SOLVED]",
    "LastUpdated": "2024-10-07T01:27:21.6925232Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "c382e407-8fc9-4a0e-9f95-35743702485e",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Odr8Efkb.jpeg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think the online authors deserve a text processor command that wraps a string with `<` `>`.\r\n\r\nMy original thought was to add a `\"{br}\"` for `\"<br/>\"`, but it seems like it would be almost the same amount of work to have `\"{element:br/}\"` print `<br/>`, or `\"{element:style}\"` print `<style>`, or what have you.\r\n\r\nWould this be handy to have in the web editor?\r\n\r\n(At the moment it doesn't matter, because I can't find where I once read how to add text processor commands, but I'll eventually find it. Or someone will hit me with a link or something.)",
      "EditableFormat": "markdown",
      "HTML": "<p>I think the online authors deserve a text processor command that wraps a string with <code>&lt;</code> <code>&gt;</code>.</p>\n<p>My original thought was to add a <code>\"{br}\"</code> for <code>\"&lt;br/&gt;\"</code>, but it seems like it would be almost the same amount of work to have <code>\"{element:br/}\"</code> print <code>&lt;br/&gt;</code>, or <code>\"{element:style}\"</code> print <code>&lt;style&gt;</code>, or what have you.</p>\n<p>Would this be handy to have in the web editor?</p>\n<p>(At the moment it doesn't matter, because I can't find where I once read how to add text processor commands, but I'll eventually find it. Or someone will hit me with a link or something.)</p>\n\n",
      "PostDate": "2024-10-07T01:27:21.6925232Z",
      "LastEditDate": "2024-11-29T03:27:33.3322267Z",
      "link": null
    },
    {
      "PostId": "ca1c7f4e-e4c0-4ff9-b889-cac5c160afd5",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Odr8Efkb.jpeg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Doh! It was my post I was almost remembering.\r\n\r\nhttps://textadventures.co.uk/forum/quest/topic/qfu6jgz52u6pteocerjavw/text-processor-adding-br-hr-etc",
      "EditableFormat": "markdown",
      "HTML": "<p>Doh! It was my post I was almost remembering.</p>\n<p>https://textadventures.co.uk/forum/quest/topic/qfu6jgz52u6pteocerjavw/text-processor-adding-br-hr-etc</p>\n\n",
      "PostDate": "2024-10-07T01:55:05.6044427Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b6d3a7cd-a2a8-42c6-a9b7-d74a76d40f62",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hmm… That `{element:` command sounds like a good idea (at least for the online editor, where strings containing `<` break code view). But I think it might get tiresome typing `element` so many times; maybe a shorter synonym would be a good idea. Even something like `{:style}`.\r\n\r\nOff the top of my head, maybe you could do something like (**edited**)…\r\n```\r\ntextprocessordefault => {\r\n  if (IsRegexMatch(\":?/?\\\\w+\\\\b((?<=\\\\s)\\\\w+\\\\b|(?<=\\\\s)\\\\w+=\\\\w+\\\\b|(?<=\\\\s)\\\\w+=\\\"[^\\\"]*\\\"|(?<=\\\\s)\\\\w+='[^']*')*/?\\\\s*\", section)) {\r\n    if (StartsWith (section, \":\")) section = LTrim (Mid (section, 2))\r\n    game.textprocessorcommandresult = \"<\" + section + \">\"\r\n  }\r\n  else {\r\n    game.textprocessorcommandresult = \"@@@open@@@\" + ProcessTextSection (section, data) + \"@@@close@@@\"\r\n  }\r\n}\r\ngame.textprocessorcommands = game.textprocessorcommands\r\ndictionary add (game.textprocessorcommands, \":\", textprocessordefault)\r\ndictionary add (game.textprocessorcommands, \"/\", textprocessordefault)\r\n```\r\n\r\nThen you can do `{:span id=\"spoooon\"}spoon?{/span}` or whatever if you're getting frustrated with the online editor :)",
      "EditableFormat": "markdown",
      "HTML": "<p>Hmm… That <code>{element:</code> command sounds like a good idea (at least for the online editor, where strings containing <code>&lt;</code> break code view). But I think it might get tiresome typing <code>element</code> so many times; maybe a shorter synonym would be a good idea. Even something like <code>{:style}</code>.</p>\n<p>Off the top of my head, maybe you could do something like (<strong>edited</strong>)…</p>\n<pre><code>textprocessordefault =&gt; {\n  if (IsRegexMatch(\":?/?\\\\w+\\\\b((?&lt;=\\\\s)\\\\w+\\\\b|(?&lt;=\\\\s)\\\\w+=\\\\w+\\\\b|(?&lt;=\\\\s)\\\\w+=\\\"[^\\\"]*\\\"|(?&lt;=\\\\s)\\\\w+='[^']*')*/?\\\\s*\", section)) {\n    if (StartsWith (section, \":\")) section = LTrim (Mid (section, 2))\n    game.textprocessorcommandresult = \"&lt;\" + section + \"&gt;\"\n  }\n  else {\n    game.textprocessorcommandresult = \"@@@open@@@\" + ProcessTextSection (section, data) + \"@@@close@@@\"\n  }\n}\ngame.textprocessorcommands = game.textprocessorcommands\ndictionary add (game.textprocessorcommands, \":\", textprocessordefault)\ndictionary add (game.textprocessorcommands, \"/\", textprocessordefault)\n</code></pre>\n<p>Then you can do <code>{:span id=\"spoooon\"}spoon?{/span}</code> or whatever if you're getting frustrated with the online editor :)</p>\n\n",
      "PostDate": "2024-10-07T08:46:39.96635Z",
      "LastEditDate": "2024-11-28T12:27:57.3721596Z",
      "link": null
    },
    {
      "PostId": "a2754d32-3ddd-45b5-8904-1a6b7561d78d",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Odr8Efkb.jpeg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh yeah, that looks much better.\r\n\r\nI was trying to avoid adding new things to any pull requests this time around, but this would make like much easier for online authors -- and I don't see how it could hurt anything.",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh yeah, that looks much better.</p>\n<p>I was trying to avoid adding new things to any pull requests this time around, but this would make like much easier for online authors -- and I don't see how it could hurt anything.</p>\n\n",
      "PostDate": "2024-10-07T15:40:00.5479327Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bf5e08a1-cbca-406d-91ed-3112af9c4107",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Odr8Efkb.jpeg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Just got around to this.\r\n\r\nI used that code, and:\r\n\r\n```\r\nError running script: Error compiling expression 'IsRegexMatch(\":?/?\\w+\\\\b((?<=\\\\s)\\\\w+\\\\b|(?<=\\\\s)\\\\w+=\\\\w+\\\\b|(?<=\\\\s)\\\\w+=\\\"[^\\\"]*\\\"|(?<=\\\\s)\\\\w+='[^']*')*/?\\\\s*\", section)': SyntaxError: Unexpected character: \"Line: 1, Column: 14\r\nError running script: Error compiling expression 'IsRegexMatch(\":?/?\\w+\\\\b((?<=\\\\s)\\\\w+\\\\b|(?<=\\\\s)\\\\w+=\\\\w+\\\\b|(?<=\\\\s)\\\\w+=\\\"[^\\\"]*\\\"|(?<=\\\\s)\\\\w+='[^']*')*/?\\\\s*\", section)': SyntaxError: Unexpected character: \"Line: 1, Column: 14\r\n{:b}Hello{:/b} world.\r\n```\r\n\r\n---\r\nI'm betting it's just a minor typo, but I can't figure it out. (I need to learn RegEx.)\r\n\r\nI tried it on RegExr, and it said it had unescaped `/` When I escaped those, it still didn't like me.\r\n\r\n---\r\nI did, however, seem to get it working with `@@@lt@@@` for `<`. Typing `@@@lt@@@` sucks, though. `:)`",
      "EditableFormat": "markdown",
      "HTML": "<p>Just got around to this.</p>\n<p>I used that code, and:</p>\n<pre><code>Error running script: Error compiling expression 'IsRegexMatch(\":?/?\\w+\\\\b((?&lt;=\\\\s)\\\\w+\\\\b|(?&lt;=\\\\s)\\\\w+=\\\\w+\\\\b|(?&lt;=\\\\s)\\\\w+=\\\"[^\\\"]*\\\"|(?&lt;=\\\\s)\\\\w+='[^']*')*/?\\\\s*\", section)': SyntaxError: Unexpected character: \"Line: 1, Column: 14\nError running script: Error compiling expression 'IsRegexMatch(\":?/?\\w+\\\\b((?&lt;=\\\\s)\\\\w+\\\\b|(?&lt;=\\\\s)\\\\w+=\\\\w+\\\\b|(?&lt;=\\\\s)\\\\w+=\\\"[^\\\"]*\\\"|(?&lt;=\\\\s)\\\\w+='[^']*')*/?\\\\s*\", section)': SyntaxError: Unexpected character: \"Line: 1, Column: 14\n{:b}Hello{:/b} world.\n</code></pre>\n<hr>\n<p>I'm betting it's just a minor typo, but I can't figure it out. (I need to learn RegEx.)</p>\n<p>I tried it on RegExr, and it said it had unescaped <code>/</code> When I escaped those, it still didn't like me.</p>\n<hr>\n<p>I did, however, seem to get it working with <code>@@@lt@@@</code> for <code>&lt;</code>. Typing <code>@@@lt@@@</code> sucks, though. <code>:)</code></p>\n\n",
      "PostDate": "2024-11-27T22:15:58.1211713Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d5f01a73-8053-4fbb-b15b-429d017ae391",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Tested and debugged. Like every time I try writing long regexes off the top of my head, there's a missing `\\`. In this case, it was `\\w` instead of `\\\\w` the first time. (One backslash for Quest's string processing, one for the regex engine)\r\n\r\n> I tried it on RegExr, and it said it had unescaped `/` When I escaped those, it still didn't like me.\r\n\r\nIt was actually an unescaped `\\`. The reason it probably complains about the `/` is because many languages (inspired by Perl) use `/` as an alternate quote character for surrounding regexes; which doesn't apply in Quest.\r\n\r\n**Tips for debugging this stuff**: It says the error is at character 14, which I believe is the opening quote, and the error message isn't regex specific. So search the string for its backslashes, and make sure they're all escaping a `\\` or a `\"`. Any stray `\\w` or `\\S` or whatever needs to be passed to the regex engine, so the slash should be doubled to keep the Quest interpreter trying to do stuff with it.",
      "EditableFormat": "markdown",
      "HTML": "<p>Tested and debugged. Like every time I try writing long regexes off the top of my head, there's a missing <code>\\</code>. In this case, it was <code>\\w</code> instead of <code>\\\\w</code> the first time. (One backslash for Quest's string processing, one for the regex engine)</p>\n<blockquote>\n<p>I tried it on RegExr, and it said it had unescaped <code>/</code> When I escaped those, it still didn't like me.</p>\n</blockquote>\n<p>It was actually an unescaped <code>\\</code>. The reason it probably complains about the <code>/</code> is because many languages (inspired by Perl) use <code>/</code> as an alternate quote character for surrounding regexes; which doesn't apply in Quest.</p>\n<p><strong>Tips for debugging this stuff</strong>: It says the error is at character 14, which I believe is the opening quote, and the error message isn't regex specific. So search the string for its backslashes, and make sure they're all escaping a <code>\\</code> or a <code>\"</code>. Any stray <code>\\w</code> or <code>\\S</code> or whatever needs to be passed to the regex engine, so the slash should be doubled to keep the Quest interpreter trying to do stuff with it.</p>\n\n",
      "PostDate": "2024-11-28T12:27:15.7994294Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "695fe896-64b9-4687-9534-299413d62a31",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Odr8Efkb.jpeg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you!\r\n\r\n> Like every time I try writing long regexes off the top of my head, there's a missing `\\`.\r\n\r\nYou, sir, are a wealth of knowledge. I knew it was just something trivial like that. I didn't add it to a game or anything like that. `:)`\r\n\r\n---\r\n> Tips for debugging this stuff\r\n\r\nOh, I see! I just learned (at least) two things from that.\r\n\r\nThanks again! I'm about to add this to the changes for the upcoming Quest release. This will be a great addition for online authors.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you!</p>\n<blockquote>\n<p>Like every time I try writing long regexes off the top of my head, there's a missing <code>\\</code>.</p>\n</blockquote>\n<p>You, sir, are a wealth of knowledge. I knew it was just something trivial like that. I didn't add it to a game or anything like that. <code>:)</code></p>\n<hr>\n<blockquote>\n<p>Tips for debugging this stuff</p>\n</blockquote>\n<p>Oh, I see! I just learned (at least) two things from that.</p>\n<p>Thanks again! I'm about to add this to the changes for the upcoming Quest release. This will be a great addition for online authors.</p>\n\n",
      "PostDate": "2024-11-28T17:04:32.9511093Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2648dbbe-0ee1-48ac-8ef6-3a8e0174fed2",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "To be honest, for stuff like this it would probably be easier to put the regex in a string attribute; so that you don't have to worry about what it looks like escaped to work with the `\"` operator. But of course I can't do that online :p\r\n\r\nAlthough I could have a dummy game on my account with a blank `msg` line; paste the correct regex in and then change the type from \"Message\" to \"Expression\" to get a quoted string. Not 100% sure, but I suspect that the editor will escape characters when you do that, won't it?",
      "EditableFormat": "markdown",
      "HTML": "<p>To be honest, for stuff like this it would probably be easier to put the regex in a string attribute; so that you don't have to worry about what it looks like escaped to work with the <code>\"</code> operator. But of course I can't do that online :p</p>\n<p>Although I could have a dummy game on my account with a blank <code>msg</code> line; paste the correct regex in and then change the type from \"Message\" to \"Expression\" to get a quoted string. Not 100% sure, but I suspect that the editor will escape characters when you do that, won't it?</p>\n\n",
      "PostDate": "2024-11-28T17:33:15.7219313Z",
      "LastEditDate": "2024-11-28T17:35:18.2500552Z",
      "link": null
    },
    {
      "PostId": "c1138d1b-ceef-48a8-b215-3800d58969a9",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Odr8Efkb.jpeg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay, so, to be sure (because I'm not, haha), to add this to the Core libraries:\r\n\r\n**WorldModel\\WorldModel\\CoreTypes.aslx**\r\n\r\nAdd this to `game.textprocessorcommands`:\r\n```xml\r\n      <item key=\":\">\r\n        game.textprocessorcommandresult = ProcessTextCommand_Element (section, data)\r\n      </item>\r\n      <item key=\"/\">\r\n        game.textprocessorcommandresult = ProcessTextCommand_Element (section, data)\r\n      </item>\r\n```\r\n\r\n---\r\n**WorldModel\\WorldModel\\CoreOutput.aslx**\r\n\r\nAdd this function:\r\n```xml\r\n  <function name=\"ProcessTextCommand_Element\" type=\"string\" parameters=\"section, data\"><![CDATA[\r\n    if (IsRegexMatch(\":?/?\\\\w+\\\\b((?<=\\\\s)\\\\w+\\\\b|(?<=\\\\s)\\\\w+=\\\\w+\\\\b|(?<=\\\\s)\\\\w+=\\\"[^\\\"]*\\\"|(?<=\\\\s)\\\\w+='[^']*')*/?\\\\s*\", section)) {\r\n      if (StartsWith (section, \":\")) section = LTrim (Mid (section, 2))\r\n      return (\"<\" + section + \">\")\r\n    }\r\n    else {\r\n      return (\"@@@open@@@\" + ProcessTextSection (section, data) + \"@@@close@@@\")\r\n    }\r\n  ]]></function>\r\n```\r\n\r\n---\r\nThis works when I test it, but I tend to overlook changes that might effect other functions.",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay, so, to be sure (because I'm not, haha), to add this to the Core libraries:</p>\n<p><strong>WorldModel\\WorldModel\\CoreTypes.aslx</strong></p>\n<p>Add this to <code>game.textprocessorcommands</code>:</p>\n<pre><code>      &lt;item key=\":\"&gt;\n        game.textprocessorcommandresult = ProcessTextCommand_Element (section, data)\n      &lt;/item&gt;\n      &lt;item key=\"/\"&gt;\n        game.textprocessorcommandresult = ProcessTextCommand_Element (section, data)\n      &lt;/item&gt;\n</code></pre>\n<hr>\n<p><strong>WorldModel\\WorldModel\\CoreOutput.aslx</strong></p>\n<p>Add this function:</p>\n<pre><code>  &lt;function name=\"ProcessTextCommand_Element\" type=\"string\" parameters=\"section, data\"&gt;&lt;![CDATA[\n    if (IsRegexMatch(\":?/?\\\\w+\\\\b((?&lt;=\\\\s)\\\\w+\\\\b|(?&lt;=\\\\s)\\\\w+=\\\\w+\\\\b|(?&lt;=\\\\s)\\\\w+=\\\"[^\\\"]*\\\"|(?&lt;=\\\\s)\\\\w+='[^']*')*/?\\\\s*\", section)) {\n      if (StartsWith (section, \":\")) section = LTrim (Mid (section, 2))\n      return (\"&lt;\" + section + \"&gt;\")\n    }\n    else {\n      return (\"@@@open@@@\" + ProcessTextSection (section, data) + \"@@@close@@@\")\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<hr>\n<p>This works when I test it, but I tend to overlook changes that might effect other functions.</p>\n\n",
      "PostDate": "2024-11-28T17:41:18.743043Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "39c41e55-ce1d-47e1-ab64-64786f189457",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That looks right to me :)",
      "EditableFormat": "markdown",
      "HTML": "<p>That looks right to me :)</p>\n\n",
      "PostDate": "2024-11-28T23:00:37.4957771Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3b1a8dac-6cc7-41a4-8cf1-1a1451170fc7",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Odr8Efkb.jpeg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Groovy! I added those changes, and everything seems to be working smoothly.\r\n\r\nYou will be an unsung hero. Everyone who creates Quest games online will unknowingly be in your debt. `:)`\r\n\r\n---\r\nhttps://textadventures.co.uk/forum/site/topic/oylj_u9vquwpqzv6itgnya/moving-the-forums-to-github-discussions\r\n\r\nHow do you feel about switching from the forums to GitHub Discussions, mrangel?\r\n\r\nDo you think you'd be active there like you are here?",
      "EditableFormat": "markdown",
      "HTML": "<p>Groovy! I added those changes, and everything seems to be working smoothly.</p>\n<p>You will be an unsung hero. Everyone who creates Quest games online will unknowingly be in your debt. <code>:)</code></p>\n<hr>\n<p>https://textadventures.co.uk/forum/site/topic/oylj_u9vquwpqzv6itgnya/moving-the-forums-to-github-discussions</p>\n<p>How do you feel about switching from the forums to GitHub Discussions, mrangel?</p>\n<p>Do you think you'd be active there like you are here?</p>\n\n",
      "PostDate": "2024-11-29T00:02:13.7055649Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4d2f33d2-5fa9-4f59-b95d-fee039701e90",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Odr8Efkb.jpeg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> To be honest, for stuff like this it would probably be easier to put the regex in a string attribute; so that you don't have to worry about what it looks like escaped to work with the \" operator. But of course I can't do that online :p\r\n\r\nI added these changes, and I also modified things so there is a game attribute tab in the online editor.\r\n\r\nIf you want to check it out: <a target=\"_blank\" href=\"http://quest-test.textadventures.co.uk/Edit/Game/1\">http://quest-test.textadventures.co.uk/Edit/Game/1</a>\r\n\r\nIt is set up for debugging; so, it only loads that one game, but it does save the changes.\r\n\r\nAlso, the play button won't work from the editor. You can, however, use this link to play the game file: <a target=\"_blank\" href=\"http://play-test.textadventures.co.uk/Play.aspx?id=editorgame&file=h:\\root\\home\\kvqueststuff-001\\www\\WebEditor\\EditorGames\\c8b531c8-d071-482b-a41b-578a4f657a9d\\WebEditorTester.aslx\">http://play-test.textadventures.co.uk/Play.aspx?id=editorgame&file=h:\\root\\home\\kvqueststuff-001\\www\\WebEditor\\EditorGames\\c8b531c8-d071-482b-a41b-578a4f657a9d\\WebEditorTester.aslx</a>",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>To be honest, for stuff like this it would probably be easier to put the regex in a string attribute; so that you don't have to worry about what it looks like escaped to work with the \" operator. But of course I can't do that online :p</p>\n</blockquote>\n<p>I added these changes, and I also modified things so there is a game attribute tab in the online editor.</p>\n<p>If you want to check it out: <a target=\"_blank\" href=\"http://quest-test.textadventures.co.uk/Edit/Game/1\">http://quest-test.textadventures.co.uk/Edit/Game/1</a></p>\n<p>It is set up for debugging; so, it only loads that one game, but it does save the changes.</p>\n<p>Also, the play button won't work from the editor. You can, however, use this link to play the game file: <a target=\"_blank\" href=\"http://play-test.textadventures.co.uk/Play.aspx?id=editorgame&amp;file=h:%5Croot%5Chome%5Ckvqueststuff-001%5Cwww%5CWebEditor%5CEditorGames%5Cc8b531c8-d071-482b-a41b-578a4f657a9d%5CWebEditorTester.aslx\">http://play-test.textadventures.co.uk/Play.aspx?id=editorgame&amp;file=h:\\root\\home\\kvqueststuff-001\\www\\WebEditor\\EditorGames\\c8b531c8-d071-482b-a41b-578a4f657a9d\\WebEditorTester.aslx</a></p>\n\n",
      "PostDate": "2024-11-29T06:36:08.044549Z",
      "LastEditDate": "2024-11-29T06:43:55.7481954Z",
      "link": null
    }
  ]
}
