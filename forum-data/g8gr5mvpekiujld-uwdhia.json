{
  "Topic": {
    "TopicId": "g8gr5mvpekiujld-uwdhia",
    "ForumId": "10",
    "Title": "Attack Player Error (subtraction error) [SOLVED-ISH]",
    "LastUpdated": "2019-11-04T08:40:32.1666251Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "457083e3-0904-47ea-b9f4-ee95d08f4e71",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/HEtnsWqb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "_________________________\r\n**EDIT**\r\nSo I figured out the problem. I had the damage and bonusdamage scripts on only the Zombie Types and not the Monster Type. So I created them and set them both as a 0 Integer and it removed the error. Sorry about that! Now if I can just figure out how to get everything from missing so much.\r\n_________________________\r\n_________________________\r\n_________________________\r\n\r\nSo this error is randomly happening out of nowhere and I'm not sure why since I haven't messed with these scripts in a while. \r\n```\r\nError running script: Error compiling expression 'this.damagebonus - player.agility / 2': ArithmeticElement: Operation 'Subtract' is not defined for types 'Object' and 'Int32'\r\nError running script: Error compiling expression 'this.damagebonus - player.agility / 2': ArithmeticElement: Operation 'Subtract' is not defined for types 'Object' and 'Int32'\r\n```\r\n^ these are the errors I'm getting. Subtract not defined.\r\n\r\nSo I have a\r\n```\r\nMonster Type\r\nFemale_Zombie_Type\r\nMale_Zombie_Type \r\n```\r\n^ Zombie Type inherits the Monster Type. Monster Type has this attack script.\r\n```\r\nbonus = this.damagebonus - player.agility / 2\r\ndamage = this.damage - player.defense / 3\r\nif (damage < 1) {\r\n  if (player.ghost=True) {\r\n    if (RandomChance(47)) {\r\n      damage = 1\r\n    }\r\n    else {\r\n      damage = 0\r\n    }\r\n  }\r\n  else {\r\n    if (RandomChance(50)) {\r\n      damage = 1\r\n    }\r\n    else {\r\n      damage = 0\r\n    }\r\n  }\r\n}\r\nif (player.ghost=False) {\r\n  if (RandomChance(40 + bonus * 5)) {\r\n    msg (this.attackplayerhit)\r\n    player.health = player.health - damage\r\n  }\r\n  else {\r\n    msg (this.attackplayermissed)\r\n  }\r\n}\r\nelse {\r\n  if (RandomChance(37 + bonus * 5)) {\r\n    msg (this.attackplayerhit)\r\n    player.health = player.health - damage\r\n  }\r\n  else {\r\n    msg (this.attackplayermissed)\r\n  }\r\n}\r\n```\r\n And when I remove the agility and defense it says   ```if (RandomChance(40 + bonus * 5)) {}``` is not defined. Anyone know a possible solution? I would be very grateful.\r\n\r\nIt's been a long while since something has stumped me like this.\r\n\r\nAnonynn. \r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<hr>\n<p><strong>EDIT</strong><br>\nSo I figured out the problem. I had the damage and bonusdamage scripts on only the Zombie Types and not the Monster Type. So I created them and set them both as a 0 Integer and it removed the error. Sorry about that! Now if I can just figure out how to get everything from missing so much.</p>\n<hr>\n<hr>\n<hr>\n<p>So this error is randomly happening out of nowhere and I'm not sure why since I haven't messed with these scripts in a while.</p>\n<pre><code>Error running script: Error compiling expression 'this.damagebonus - player.agility / 2': ArithmeticElement: Operation 'Subtract' is not defined for types 'Object' and 'Int32'\nError running script: Error compiling expression 'this.damagebonus - player.agility / 2': ArithmeticElement: Operation 'Subtract' is not defined for types 'Object' and 'Int32'\n</code></pre>\n<p>^ these are the errors I'm getting. Subtract not defined.</p>\n<p>So I have a</p>\n<pre><code>Monster Type\nFemale_Zombie_Type\nMale_Zombie_Type \n</code></pre>\n<p>^ Zombie Type inherits the Monster Type. Monster Type has this attack script.</p>\n<pre><code>bonus = this.damagebonus - player.agility / 2\ndamage = this.damage - player.defense / 3\nif (damage &lt; 1) {\n  if (player.ghost=True) {\n    if (RandomChance(47)) {\n      damage = 1\n    }\n    else {\n      damage = 0\n    }\n  }\n  else {\n    if (RandomChance(50)) {\n      damage = 1\n    }\n    else {\n      damage = 0\n    }\n  }\n}\nif (player.ghost=False) {\n  if (RandomChance(40 + bonus * 5)) {\n    msg (this.attackplayerhit)\n    player.health = player.health - damage\n  }\n  else {\n    msg (this.attackplayermissed)\n  }\n}\nelse {\n  if (RandomChance(37 + bonus * 5)) {\n    msg (this.attackplayerhit)\n    player.health = player.health - damage\n  }\n  else {\n    msg (this.attackplayermissed)\n  }\n}\n</code></pre>\n<p>And when I remove the agility and defense it says   <code>if (RandomChance(40 + bonus * 5)) {}</code> is not defined. Anyone know a possible solution? I would be very grateful.</p>\n<p>It's been a long while since something has stumped me like this.</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2019-11-04T08:40:32.1666251Z",
      "LastEditDate": "2019-11-04T09:07:15.5399365Z",
      "link": null
    },
    {
      "PostId": "4af55e5a-98c0-4df6-b144-4f49e0d63001",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "just note that:\r\n\r\nany/all Attribute(s) given-to/used-with the Object Types / Types, their Values are locked-in, so if you were to try to change those Values for within some action, it'll cause an error\r\n\r\nto handle it, so that it doesn't cause an error, you got to set/create the Attribute upon the Object in use, as that will over-ride/over-write the same inherited Attribute from the Object Type / Type, that it is using, allowing you to now change it's Value, within any such action within your game\r\n\r\nthere is a good reason for the Object Types / Types (as Inherited by Objects) Attributes Values to be locked (but not going to try to explain it here, as it's complicated), but it also causes these other problems/issues to deal with as well...\r\n\r\nthis causes using Object Types / Types somewhat less useful, as you got to give every Object those Attributes manually anyways, if you're going to use changing Values of those Attributes within any action within your game. There's two main reasons to use Object Types / Types: (1) any Attribute who's Value will never be changed within actions in your game, and/or (2) a way to ensure that you have that Attribute on the Object, instead of having to have the script check for it, but still, you're going to have scripting anyways, as you'll need a script to set/create that Attribute on the Object, so that you can change its Value within some action in your game, so it might just be better to check if the Attribute exists within the script, instead... best most-efficient game/code and/or data-structuring mechanics/organization is very complicated... lol",
      "EditableFormat": "markdown",
      "HTML": "<p>just note that:</p>\n<p>any/all Attribute(s) given-to/used-with the Object Types / Types, their Values are locked-in, so if you were to try to change those Values for within some action, it'll cause an error</p>\n<p>to handle it, so that it doesn't cause an error, you got to set/create the Attribute upon the Object in use, as that will over-ride/over-write the same inherited Attribute from the Object Type / Type, that it is using, allowing you to now change it's Value, within any such action within your game</p>\n<p>there is a good reason for the Object Types / Types (as Inherited by Objects) Attributes Values to be locked (but not going to try to explain it here, as it's complicated), but it also causes these other problems/issues to deal with as well...</p>\n<p>this causes using Object Types / Types somewhat less useful, as you got to give every Object those Attributes manually anyways, if you're going to use changing Values of those Attributes within any action within your game. There's two main reasons to use Object Types / Types: (1) any Attribute who's Value will never be changed within actions in your game, and/or (2) a way to ensure that you have that Attribute on the Object, instead of having to have the script check for it, but still, you're going to have scripting anyways, as you'll need a script to set/create that Attribute on the Object, so that you can change its Value within some action in your game, so it might just be better to check if the Attribute exists within the script, instead... best most-efficient game/code and/or data-structuring mechanics/organization is very complicated... lol</p>\n\n",
      "PostDate": "2019-11-04T20:03:44.8363983Z",
      "LastEditDate": "2019-11-04T20:05:04.3456939Z",
      "link": null
    }
  ]
}
