{
  "Topic": {
    "TopicId": "3118",
    "ForumId": "10",
    "Title": "Object to get used up",
    "LastUpdated": "2012-07-22T03:15:52+01:00",
    "ReplyCount": 3
  },
  "Posts": [
    {
      "PostId": "20993",
      "UserId": 0,
      "Username": "Omega001",
      "UserAvatar": null,
      "UserGravatar": "90566a87ee1b60b74c3f956825800ad6",
      "EditableText": "I need to make a object that gets destroyed after a certain amount of uses. What it is a antiseptic spray that runs out after 5 uses, so I'm working in the &quot;use on it's own&quot; section, then after it's used 5 times, gets removed from the game. I need a way to do this.",
      "EditableFormat": "bbcode",
      "HTML": "I need to make a object that gets destroyed after a certain amount of uses. What it is a antiseptic spray that runs out after 5 uses, so I'm working in the &quot;use on it's own&quot; section, then after it's used 5 times, gets removed from the game. I need a way to do this.",
      "PostDate": "2012-07-19T11:38:25+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "20995",
      "UserId": 0,
      "Username": "sgreig",
      "UserAvatar": null,
      "UserGravatar": "9117185af66d72729b195384e3a446f0",
      "EditableText": "All you really need is to set an attribute on the bottle, and call it something like &quot;uses&quot;. Then in the use script for the object, first have it check that &quot;object.uses&quot; is less than 5. If it is, use the object as normal and add 1 to the &quot;uses&quot; attribute. If it's equal to 5, display a message that it's empty. So code-wise it would look something like this:\n\n[code:uqhx94r2]\nif (object&#46;uses &lt; 5) {\n  code for what happens when you use the spray bottle\n  object&#46;uses = object&#46;uses + 1\n}\nelse {\n  msg (&quot;The bottle is empty&#46;&quot;)\n}\n[/code:uqhx94r2]",
      "EditableFormat": "bbcode",
      "HTML": "All you really need is to set an attribute on the bottle, and call it something like &quot;uses&quot;. Then in the use script for the object, first have it check that &quot;object.uses&quot; is less than 5. If it is, use the object as normal and add 1 to the &quot;uses&quot; attribute. If it's equal to 5, display a message that it's empty. So code-wise it would look something like this:<br/><br/><pre><code><br/>if (object&#46;uses &lt; 5) {<br/>  code for what happens when you use the spray bottle<br/>  object&#46;uses = object&#46;uses + 1<br/>}<br/>else {<br/>  msg (&quot;The bottle is empty&#46;&quot;)<br/>}<br/></code></pre>",
      "PostDate": "2012-07-19T12:32:14+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "20997",
      "UserId": 0,
      "Username": "Omega001",
      "UserAvatar": null,
      "UserGravatar": "90566a87ee1b60b74c3f956825800ad6",
      "EditableText": "Yes that worked. Thank you for this I should be able to imply this into other stuff.",
      "EditableFormat": "bbcode",
      "HTML": "Yes that worked. Thank you for this I should be able to imply this into other stuff.",
      "PostDate": "2012-07-19T13:39:50+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21031",
      "UserId": 0,
      "Username": "xordevoreaux",
      "UserAvatar": null,
      "UserGravatar": "7429ebfb6f14ed642c7649e6f5e8abca",
      "EditableText": "I do something similar for burning matches, lighting lighters, etc.  I have an object class that I apply to everything in the game, and it has various properties regarding an object's ability to burn:\n\nburnability, isburning, burnticklife, burntickconsumed,\nwhere:\nburnability determines if it can be burned at all, \nisburning is lit, essentially\nburnticklife is the total number of ticks of the timer that the object can burn, for the life of the object\nburntickconsumed is how many of the total ticks of the burnticklife have been spent.\n\nSo for a candle, for instance, it may have a burnticklife of 50, but if you keep dousing it before burntickconsumed &gt;= burnticklife, you can ignite it over and over again, until, of course, burntickconsumed &gt;= burnticklife, and then it's spent, it cannot burn any more.",
      "EditableFormat": "bbcode",
      "HTML": "I do something similar for burning matches, lighting lighters, etc.  I have an object class that I apply to everything in the game, and it has various properties regarding an object's ability to burn:<br/><br/>burnability, isburning, burnticklife, burntickconsumed,<br/>where:<br/>burnability determines if it can be burned at all, <br/>isburning is lit, essentially<br/>burnticklife is the total number of ticks of the timer that the object can burn, for the life of the object<br/>burntickconsumed is how many of the total ticks of the burnticklife have been spent.<br/><br/>So for a candle, for instance, it may have a burnticklife of 50, but if you keep dousing it before burntickconsumed &gt;= burnticklife, you can ignite it over and over again, until, of course, burntickconsumed &gt;= burnticklife, and then it's spent, it cannot burn any more.",
      "PostDate": "2012-07-22T03:15:52+01:00",
      "LastEditDate": null
    }
  ]
}
