{
  "Topic": {
    "TopicId": "eq9parbesk2elgyleiqngw",
    "ForumId": "10",
    "Title": "In Game Journal or Book",
    "LastUpdated": "2018-03-14T23:55:30.7310436Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "be81a20a-4920-4a57-a75e-6fad58cefd7a",
      "UserId": 250512,
      "Username": "hungryhungryterrors",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So in the game I'm working on, the player will have a journal that they can write in- I used the tutorial for how to Keep a Journal in Quest Documentation for it. The journal works fine, but now I'm trying to figure out how to let the player turn the page. Not only will the player be able to write their own entries, but they'll also be finding several pages from npc journals that give game hints and story, and after a while it's going to be really inconvenient to pull up EVERYTHING in the journal just to read something from several rooms ago. I'm considering setting the journal up like a room, and having each entry be an object the player can look at, but that's kinda clunky, and I know there's gotta be a better way to do it.",
      "EditableFormat": "markdown",
      "HTML": "<p>So in the game I'm working on, the player will have a journal that they can write in- I used the tutorial for how to Keep a Journal in Quest Documentation for it. The journal works fine, but now I'm trying to figure out how to let the player turn the page. Not only will the player be able to write their own entries, but they'll also be finding several pages from npc journals that give game hints and story, and after a while it's going to be really inconvenient to pull up EVERYTHING in the journal just to read something from several rooms ago. I'm considering setting the journal up like a room, and having each entry be an object the player can look at, but that's kinda clunky, and I know there's gotta be a better way to do it.</p>\n\n",
      "PostDate": "2018-03-14T23:55:30.7310436Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "be53fc95-b649-4c45-ad3f-3f0b5a40bd6e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Using objects may be the best way to handle it.\r\n\r\nYou can make a book.  Make it openable/closable.  Put page objects into it.\r\n\r\nWhen the book is open, the player can enter READ BOOK and get a menu of pages.  The player could also read a single page by entering READ PAGE 2 or clicking the page number in the pane when the book is open and selecting READ.\r\n\r\n---\r\nI have a library, if you have the desktop version of Quest and would like to check it out.\r\n\r\nhttps://github.com/KVonGit/QuestStuff/wiki/BookLib",
      "EditableFormat": "markdown",
      "HTML": "<p>Using objects may be the best way to handle it.</p>\n<p>You can make a book.  Make it openable/closable.  Put page objects into it.</p>\n<p>When the book is open, the player can enter READ BOOK and get a menu of pages.  The player could also read a single page by entering READ PAGE 2 or clicking the page number in the pane when the book is open and selecting READ.</p>\n<hr>\n<p>I have a library, if you have the desktop version of Quest and would like to check it out.</p>\n<p>https://github.com/KVonGit/QuestStuff/wiki/BookLib</p>\n\n",
      "PostDate": "2018-03-15T02:23:57.3299727Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "57eb42a6-6975-458e-b415-dcaf87dabecb",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "this gets into 'Data Structures' concepts of programming/coding, which I'm still learning myself, the simplest is using a linked list with iterators (but you can create 'trees' too and etc Data Structures that might be more efficient/powerful, but they're a bit more advanced designs):\r\n\r\nsome sources (not sure how good/bad they are, hadn't looked at them other than a very quick skim):\r\n\r\nhttps://en.wikipedia.org/wiki/Linked_list\r\nhttps://en.wikipedia.org/wiki/Iterator\r\n\r\nhttps://en.wikipedia.org/wiki/Tree_structure\r\nhttps://en.wikipedia.org/wiki/Tree_(data_structure)\r\nhttps://en.wikipedia.org/wiki/Binary_tree\r\n\r\nhttps://www.cs.cmu.edu/~tcortina/15-121sp10/Unit04B.pdf\r\nhttp://www2.lawrence.edu/fast/GREGGJ/CMSC270/list.html\r\nhttps://www2.hawaii.edu/~esb/2011spring.ics211/feb03.html\r\nhttps://www.cs.princeton.edu/courses/archive/fall06/cos226/lectures/27iterator.pdf",
      "EditableFormat": "markdown",
      "HTML": "<p>this gets into 'Data Structures' concepts of programming/coding, which I'm still learning myself, the simplest is using a linked list with iterators (but you can create 'trees' too and etc Data Structures that might be more efficient/powerful, but they're a bit more advanced designs):</p>\n<p>some sources (not sure how good/bad they are, hadn't looked at them other than a very quick skim):</p>\n<p>https://en.wikipedia.org/wiki/Linked_list<br>\nhttps://en.wikipedia.org/wiki/Iterator</p>\n<p>https://en.wikipedia.org/wiki/Tree_structure<br>\nhttps://en.wikipedia.org/wiki/Tree_(data_structure)<br>\nhttps://en.wikipedia.org/wiki/Binary_tree</p>\n<p>https://www.cs.cmu.edu/~tcortina/15-121sp10/Unit04B.pdf<br>\nhttp://www2.lawrence.edu/fast/GREGGJ/CMSC270/list.html<br>\nhttps://www2.hawaii.edu/~esb/2011spring.ics211/feb03.html<br>\nhttps://www.cs.princeton.edu/courses/archive/fall06/cos226/lectures/27iterator.pdf</p>\n\n",
      "PostDate": "2018-03-15T05:19:47.4201278Z",
      "LastEditDate": "2018-03-15T05:22:11.6957177Z",
      "link": null
    }
  ]
}
