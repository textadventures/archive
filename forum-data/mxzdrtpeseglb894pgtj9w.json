{
  "Topic": {
    "TopicId": "mxzdrtpeseglb894pgtj9w",
    "ForumId": "10",
    "Title": "Showing Game Time / Creating Highscore",
    "LastUpdated": "2021-06-08T14:45:16.7639211Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "71099077-b3d3-4272-8dcb-1f8b1fae53fb",
      "UserId": 548153,
      "Username": "Jato Lino",
      "AvatarUrl": "https://secure.gravatar.com/avatar/188a7d9b39a09070f72c84c01e53d445?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is there a way to create a visible clock that shows how long the player takes to finish the game?\r\nOr can I at least show that as an end result when the game ends?\r\n\r\nCan I create a highscore list (or low-score, actually) showing the players who finished it the fastest?",
      "EditableFormat": "markdown",
      "HTML": "<p>Is there a way to create a visible clock that shows how long the player takes to finish the game?<br>\nOr can I at least show that as an end result when the game ends?</p>\n<p>Can I create a highscore list (or low-score, actually) showing the players who finished it the fastest?</p>\n\n",
      "PostDate": "2021-06-08T14:45:16.7639211Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "69ed93b7-dba3-4169-83a9-91f4846d03ba",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\n> Is there a way to create a visible clock that shows how long the player takes to finish the game?\r\nOr can I at least show that as an end result when the game ends?\r\n\r\nYes.\r\n\r\n```game.timeelapsed``` is a default integer attribute which keeps track of the seconds since play began.\r\n\r\n---\r\n> Can I create a highscore list (or low-score, actually) showing the players who finished it the fastest?\r\n\r\nThere is not an easy way of which I am aware.\r\n\r\n...but that doesn't mean it's not possible.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<blockquote>\n<p>Is there a way to create a visible clock that shows how long the player takes to finish the game?<br>\nOr can I at least show that as an end result when the game ends?</p>\n</blockquote>\n<p>Yes.</p>\n<p><code>game.timeelapsed</code> is a default integer attribute which keeps track of the seconds since play began.</p>\n<hr>\n<blockquote>\n<p>Can I create a highscore list (or low-score, actually) showing the players who finished it the fastest?</p>\n</blockquote>\n<p>There is not an easy way of which I am aware.</p>\n<p>...but that doesn't mean it's not possible.</p>\n\n",
      "PostDate": "2021-06-08T14:56:19.1554706Z",
      "LastEditDate": "2021-06-08T14:56:50.4558024Z",
      "link": null
    },
    {
      "PostId": "ee54b230-e1f6-413e-a0ef-1d34c236828a",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/HiZKEtPb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Like this?\r\nplayer.score=0\r\ncup.score=5\r\ncup.got=False\r\n[player pick's up the cup]\r\nplayer.score=player.score+(cup.score * cup.got)\r\ncup.got=True\r\nThis way, the player doesn't get 5 points every time he pick's up the cup.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Like this?<br>\nplayer.score=0<br>\ncup.score=5<br>\ncup.got=False<br>\n[player pick's up the cup]<br>\nplayer.score=player.score+(cup.score * cup.got)<br>\ncup.got=True<br>\nThis way, the player doesn't get 5 points every time he pick's up the cup.</p>\n\n",
      "PostDate": "2021-06-08T16:26:06.2895635Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b4253c25-8297-4011-b75c-7b4c4626c436",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Create 1 timer with 2 attributes.\r\n\r\nPut this in the game start script.\r\n```\r\ngame.minute = 0\r\ngame.hour = 1\r\n```\r\nMake a timer that goes off every 60 seconds and have it start at the start of the game.\r\nThe code goes like this.\r\n```\r\ngame.minute = game.minute + 1\r\nif (game.minute = 60) {\r\n  game.hour = game.hour + 1\r\n  game.minute = 0\r\n}\r\nif (game.hour = 25) {\r\n  game.hour = 0\r\n}\r\n```\r\nYou can also create an object like a clock. Looking at it can give the time!\r\nThe code should look like this:\r\n```\r\nmsg (\"The time is \" + game.hour + \" hours and \" + game.minute + \" minutes.\")\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Create 1 timer with 2 attributes.</p>\n<p>Put this in the game start script.</p>\n<pre><code>game.minute = 0\ngame.hour = 1\n</code></pre>\n<p>Make a timer that goes off every 60 seconds and have it start at the start of the game.<br>\nThe code goes like this.</p>\n<pre><code>game.minute = game.minute + 1\nif (game.minute = 60) {\n  game.hour = game.hour + 1\n  game.minute = 0\n}\nif (game.hour = 25) {\n  game.hour = 0\n}\n</code></pre>\n<p>You can also create an object like a clock. Looking at it can give the time!<br>\nThe code should look like this:</p>\n<pre><code>msg (\"The time is \" + game.hour + \" hours and \" + game.minute + \" minutes.\")\n</code></pre>\n\n",
      "PostDate": "2021-06-10T01:20:00.7522618Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "40b7d431-d398-4c41-97d5-0ce4c50aca5c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you're just displaying a clock at the end of the game, or when the player runs a certain command, it should be simple enough to do.\r\n\r\nIf you want it to be always displayed, there are a few options.\r\n\r\nYou could set it as a status attribute, to always be visible. But then you would need to update it using either a turnscript (updates whenever the player takes a turn), or a timer (probably a bad idea, as any verb menus the player has open would disappear when the clock changes).\r\n\r\nIf you want it to update in real time, the better option is probably using Javascript. This runs in the browser, and doesn't require the Quest backend to do any work.\r\n\r\nIf that's what you're after, I could try writing some code when I'm less busy. For now, just a response to the previous reply:\r\n\r\n> Create 1 timer with 2 attributes.\r\n\r\nThis seems a lot of work to do something simple.\r\n\r\nI think it would be simpler not to bother with a timer, or a start script, and just use something like:\r\n```\r\nmsg (\"You have been playing for \" + (game.timeelapsed / 3600) + \" hours and \" + ((game.timeelapsed/60)%60) + \" minutes.\")\r\n```\r\n\r\nor the same code  spread out a bit more so it's easier to understand:\r\n```\r\nseconds = game.timeelapsed\r\nminutes = seconds / 60\r\nseconds = seconds % 60\r\nhours = minutes / 60\r\nminutes = minutes % 60\r\nmsg (\"You have been playing for \" + hours + \" hours and \" + minutes + \" minutes.\")\r\n```\r\n\r\nOr a really fancy version that hides the zeros:\r\n```\r\nunits = NewStringList()\r\nseconds = game.timeelapsed % 60\r\nminutes = (game.timeelapsed / 60) % 60\r\nhours = (game.timeelapsed / 3600)\r\nif (hours >= 48) {\r\n  list add (units, ToWords(hours/24) + \" days\")\r\n  hours = hours % 24\r\n}\r\nif (hours > 1) {\r\n  list add (units, hours + \" hours\")\r\n}\r\nelse if (hours = 1) {\r\n  list add (units, \"an hour\")\r\n}\r\nif (minutes > 1) {\r\n  list add (units, minutes + \" minutes\")\r\n}\r\nelse if (minutes = 1) {\r\n  list add (units, \"a minute\")\r\n}\r\nif (seconds > 1) {\r\n  list add (units, seconds + \" seconds\")\r\n}\r\nelse if (seconds = 1) {\r\n  list add (units, \"a second\")\r\n}\r\nmsg (\"You have been playing for \" + FormatList (units, \", \", \"and\", \"no time at all\") + \".\")\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>If you're just displaying a clock at the end of the game, or when the player runs a certain command, it should be simple enough to do.</p>\n<p>If you want it to be always displayed, there are a few options.</p>\n<p>You could set it as a status attribute, to always be visible. But then you would need to update it using either a turnscript (updates whenever the player takes a turn), or a timer (probably a bad idea, as any verb menus the player has open would disappear when the clock changes).</p>\n<p>If you want it to update in real time, the better option is probably using Javascript. This runs in the browser, and doesn't require the Quest backend to do any work.</p>\n<p>If that's what you're after, I could try writing some code when I'm less busy. For now, just a response to the previous reply:</p>\n<blockquote>\n<p>Create 1 timer with 2 attributes.</p>\n</blockquote>\n<p>This seems a lot of work to do something simple.</p>\n<p>I think it would be simpler not to bother with a timer, or a start script, and just use something like:</p>\n<pre><code>msg (\"You have been playing for \" + (game.timeelapsed / 3600) + \" hours and \" + ((game.timeelapsed/60)%60) + \" minutes.\")\n</code></pre>\n<p>or the same code  spread out a bit more so it's easier to understand:</p>\n<pre><code>seconds = game.timeelapsed\nminutes = seconds / 60\nseconds = seconds % 60\nhours = minutes / 60\nminutes = minutes % 60\nmsg (\"You have been playing for \" + hours + \" hours and \" + minutes + \" minutes.\")\n</code></pre>\n<p>Or a really fancy version that hides the zeros:</p>\n<pre><code>units = NewStringList()\nseconds = game.timeelapsed % 60\nminutes = (game.timeelapsed / 60) % 60\nhours = (game.timeelapsed / 3600)\nif (hours &gt;= 48) {\n  list add (units, ToWords(hours/24) + \" days\")\n  hours = hours % 24\n}\nif (hours &gt; 1) {\n  list add (units, hours + \" hours\")\n}\nelse if (hours = 1) {\n  list add (units, \"an hour\")\n}\nif (minutes &gt; 1) {\n  list add (units, minutes + \" minutes\")\n}\nelse if (minutes = 1) {\n  list add (units, \"a minute\")\n}\nif (seconds &gt; 1) {\n  list add (units, seconds + \" seconds\")\n}\nelse if (seconds = 1) {\n  list add (units, \"a second\")\n}\nmsg (\"You have been playing for \" + FormatList (units, \", \", \"and\", \"no time at all\") + \".\")\n</code></pre>\n\n",
      "PostDate": "2021-06-10T14:39:55.8967828Z",
      "LastEditDate": "2021-06-10T14:45:51.316342Z",
      "link": null
    }
  ]
}
