{
  "Topic": {
    "TopicId": "xusqemta4kwwisdqa4xada",
    "ForumId": "10",
    "Title": "Using Keys [Solved]",
    "LastUpdated": "2018-04-22T09:45:59.7589259Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "58e19acc-0d1b-46c4-9c82-0dedc9ff810f",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hopefully something simple for a change...\r\nIf I have a door implemented as a locked container, I typically assume the player with a key would use \"unlock door\". How can I arrange for \"use key\" and \"use key with door\" to achieve the same effect?\r\n\r\nI know I can use HandleCommand (\"unlock door\", null) in a script but the resulting output might confuse the player.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hopefully something simple for a change...<br>\nIf I have a door implemented as a locked container, I typically assume the player with a key would use \"unlock door\". How can I arrange for \"use key\" and \"use key with door\" to achieve the same effect?</p>\n<p>I know I can use HandleCommand (\"unlock door\", null) in a script but the resulting output might confuse the player.</p>\n\n",
      "PostDate": "2018-04-22T09:45:59.7589259Z",
      "LastEditDate": "2018-04-22T20:15:43.2426509Z",
      "link": null
    },
    {
      "PostId": "0f3de598-d850-4584-a7fc-c16d4e1902ae",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the locked/unlocked state is controlled by the 'NAME_OF_OBJECT_OR_EXIT.locked' (locked) Boolean Attribute:\r\n\r\nlocked state: NAME_OF_OBJECT_OR_EXIT.locked = true\r\nunlocked state: NAME_OF_OBJECT_OR_EXIT.locked = false\r\n\r\nwhereas, for the opened/closed state, it's the 'NAME_OF_OBJECT_OR_EXIT.isopen' (isopen) Boolean Attribute:\r\n\r\nopened state: NAME_OF_OBJECT_OR_EXIT.isopen = true\r\nclosed state: NAME_OF_OBJECT_OR_EXIT.isopen = false",
      "EditableFormat": "markdown",
      "HTML": "<p>the locked/unlocked state is controlled by the 'NAME_OF_OBJECT_OR_EXIT.locked' (locked) Boolean Attribute:</p>\n<p>locked state: NAME_OF_OBJECT_OR_EXIT.locked = true<br>\nunlocked state: NAME_OF_OBJECT_OR_EXIT.locked = false</p>\n<p>whereas, for the opened/closed state, it's the 'NAME_OF_OBJECT_OR_EXIT.isopen' (isopen) Boolean Attribute:</p>\n<p>opened state: NAME_OF_OBJECT_OR_EXIT.isopen = true<br>\nclosed state: NAME_OF_OBJECT_OR_EXIT.isopen = false</p>\n\n",
      "PostDate": "2018-04-22T16:41:51.746231Z",
      "LastEditDate": "2018-04-22T16:43:01.4182279Z",
      "link": null
    },
    {
      "PostId": "b81b13df-1bb5-4b70-8db1-24a6989e8913",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello, DavyB!\r\n\r\nHere's a small example game which should help you out:\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Keyses\">\r\n    <gameid>7b8e2bfc-8ece-4d1b-a828-2ae54e27d7c6</gameid>\r\n    <version>2.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"door\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"openable\" />\r\n      <inherit name=\"container_lockable\" />\r\n      <feature_container />\r\n      <keycount type=\"int\">1</keycount>\r\n      <key type=\"object\">Skellington Key</key>\r\n      <autoopen />\r\n      <autounlock />\r\n      <look>It is {either door.isopen:open|closed} and {either door.locked:locked|unlocked}.</look>\r\n      <displayverbs type=\"stringlist\">\r\n        <value>Look at</value>\r\n        <value>Open</value>\r\n        <value>Close</value>\r\n        <value>Unlock</value>\r\n        <value>Lock</value>\r\n      </displayverbs>\r\n    </object>\r\n    <object name=\"Skellington Key\">\r\n      <inherit name=\"editor_object\" />\r\n      <take />\r\n      <look>It's just an average key.</look>\r\n      <feature_usegive />\r\n      <use />\r\n      <selfuseon type=\"scriptdictionary\">\r\n        <item key=\"door\">\r\n          do (door, \"unlock\")\r\n        </item>\r\n      </selfuseon>\r\n    </object>\r\n  </object>\r\n</asl>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello, DavyB!</p>\n<p>Here's a small example game which should help you out:</p>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Keyses\"&gt;\n    &lt;gameid&gt;7b8e2bfc-8ece-4d1b-a828-2ae54e27d7c6&lt;/gameid&gt;\n    &lt;version&gt;2.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"door\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"openable\" /&gt;\n      &lt;inherit name=\"container_lockable\" /&gt;\n      &lt;feature_container /&gt;\n      &lt;keycount type=\"int\"&gt;1&lt;/keycount&gt;\n      &lt;key type=\"object\"&gt;Skellington Key&lt;/key&gt;\n      &lt;autoopen /&gt;\n      &lt;autounlock /&gt;\n      &lt;look&gt;It is {either door.isopen:open|closed} and {either door.locked:locked|unlocked}.&lt;/look&gt;\n      &lt;displayverbs type=\"stringlist\"&gt;\n        &lt;value&gt;Look at&lt;/value&gt;\n        &lt;value&gt;Open&lt;/value&gt;\n        &lt;value&gt;Close&lt;/value&gt;\n        &lt;value&gt;Unlock&lt;/value&gt;\n        &lt;value&gt;Lock&lt;/value&gt;\n      &lt;/displayverbs&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Skellington Key\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;take /&gt;\n      &lt;look&gt;It's just an average key.&lt;/look&gt;\n      &lt;feature_usegive /&gt;\n      &lt;use /&gt;\n      &lt;selfuseon type=\"scriptdictionary\"&gt;\n        &lt;item key=\"door\"&gt;\n          do (door, \"unlock\")\n        &lt;/item&gt;\n      &lt;/selfuseon&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2018-04-22T17:29:24.0034893Z",
      "LastEditDate": "2018-04-22T17:30:36.9489301Z",
      "link": null
    },
    {
      "PostId": "61c62f6d-6f48-4bf3-92c5-1d4244e54df5",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks KV. What that boils down to is providing\r\n_do (door, \"unlock\")_\r\nas the script action for \"use key with door\", which is what I was hoping to find, ...and it works!\r\n\r\nMore code would be needed to achieve the same effect with \"use key\" (making sure the door is within scope and dealing with the error case) but I decided to simply respond \"How do you want to use the key?\"\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks KV. What that boils down to is providing<br>\n<em>do (door, \"unlock\")</em><br>\nas the script action for \"use key with door\", which is what I was hoping to find, ...and it works!</p>\n<p>More code would be needed to achieve the same effect with \"use key\" (making sure the door is within scope and dealing with the error case) but I decided to simply respond \"How do you want to use the key?\"</p>\n\n",
      "PostDate": "2018-04-22T20:15:15.1401208Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "984cb08e-5bee-422d-a36e-e5bf6fafdd76",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "With the set up in that example game, USE KEY will provide a menu of all reachable objects:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/39100394-60eb974c-464f-11e8-95a9-6848c33ddbb2.png)",
      "EditableFormat": "markdown",
      "HTML": "<p>With the set up in that example game, USE KEY will provide a menu of all reachable objects:</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/39100394-60eb974c-464f-11e8-95a9-6848c33ddbb2.png\" alt=\"image\"></p>\n\n",
      "PostDate": "2018-04-22T22:05:50.1814308Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
