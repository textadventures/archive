{
  "Topic": {
    "TopicId": "puf1v8mpiega3xt47dwivw",
    "ForumId": "10",
    "Title": "Creating a Library filled with Turn-Scripts/Commands/Rooms. (Unsolved)",
    "LastUpdated": "2018-07-22T21:37:55.0615775Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "2da3cbb1-5735-48aa-9cbc-e8b011002dd0",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello all!\r\n\r\nI was wondering if creating a library with turn-scripts, rooms or commands is the same way you do it with Functions?\r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello all!</p>\n<p>I was wondering if creating a library with turn-scripts, rooms or commands is the same way you do it with Functions?</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-07-22T21:37:55.0615775Z",
      "LastEditDate": "2018-07-22T22:24:03.0371615Z",
      "link": null
    },
    {
      "PostId": "140a3733-a1f7-40da-8b88-3baedf69708c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Pretty much. When a game is published, the line `<include ref=\"SomeLibrary.aslx\"/>` is replaced by the contents of the library; so it can contain anything that a regular game file does.\r\n\r\nIf you want to put objects in a library, you can give them a \"parent\" attribute and they should be moved to the right place as soon as the game is loaded; not sure how easy that is to do within the editor.\r\n\r\nPutting rooms in a library seems a little odd. In most of the circumstances where you might consider this, it would be more efficient to have the library contain a type, and then put the actual room in the main game file. But if you're using library functionality to split different parts of your game into different files, then go ahead ^^\r\n\r\n(Note: I'm only referring to the way the player handles libraries; I don't know if the GUI is going to be a pain over them)",
      "EditableFormat": "markdown",
      "HTML": "<p>Pretty much. When a game is published, the line <code>&lt;include ref=\"SomeLibrary.aslx\"/&gt;</code> is replaced by the contents of the library; so it can contain anything that a regular game file does.</p>\n<p>If you want to put objects in a library, you can give them a \"parent\" attribute and they should be moved to the right place as soon as the game is loaded; not sure how easy that is to do within the editor.</p>\n<p>Putting rooms in a library seems a little odd. In most of the circumstances where you might consider this, it would be more efficient to have the library contain a type, and then put the actual room in the main game file. But if you're using library functionality to split different parts of your game into different files, then go ahead ^^</p>\n<p>(Note: I'm only referring to the way the player handles libraries; I don't know if the GUI is going to be a pain over them)</p>\n\n",
      "PostDate": "2018-07-23T09:00:42.1161169Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a98a6654-baa2-4672-9424-f8841d26bc35",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> If you want to put objects in a library, you can give them a \"parent\" attribute and they should be moved to the right place as soon as the game is loaded; not sure how easy that is to do within the editor.\r\n\r\nBut do not do it the other way around. If an object in the main file has a parent attribute set to a room or object in the library, Quest will crash when opening the GUI interface.\r\n\r\nGenerally I would not recommend moving rooms and objects to a library, just because it is so much easy to edit them through the GUI. If you have a whole chunk of your game that is finished, it might be worthwhile moving that, for a very large game (and I know Anonynn's is).",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>If you want to put objects in a library, you can give them a \"parent\" attribute and they should be moved to the right place as soon as the game is loaded; not sure how easy that is to do within the editor.</p>\n</blockquote>\n<p>But do not do it the other way around. If an object in the main file has a parent attribute set to a room or object in the library, Quest will crash when opening the GUI interface.</p>\n<p>Generally I would not recommend moving rooms and objects to a library, just because it is so much easy to edit them through the GUI. If you have a whole chunk of your game that is finished, it might be worthwhile moving that, for a very large game (and I know Anonynn's is).</p>\n\n",
      "PostDate": "2018-07-23T09:40:13.1113513Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d4a7e7b9-e530-40b2-afc6-7c6fd421dcf4",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks guys :D I appreciate your time!\r\n\r\nYeah, once I completely remaster the first chapter which is very, very close to being finished, I was thinking of just moving the entire section into a library. \r\n\r\nFor the time being, I'm learning how to move Functions over and was going to start doing the same to the Commands and Turn-Scripts too that way I can reduce the size. I think it's around 10-11MB and I've been getting really weird out-of-memory errors dealing with CEF or something like that (not even the normal Error out of memory error) xD \r\n\r\nIf you don't mind I'll likely ask for Objects and Rooms to libraries down the road when it comes time!\r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks guys :D I appreciate your time!</p>\n<p>Yeah, once I completely remaster the first chapter which is very, very close to being finished, I was thinking of just moving the entire section into a library.</p>\n<p>For the time being, I'm learning how to move Functions over and was going to start doing the same to the Commands and Turn-Scripts too that way I can reduce the size. I think it's around 10-11MB and I've been getting really weird out-of-memory errors dealing with CEF or something like that (not even the normal Error out of memory error) xD</p>\n<p>If you don't mind I'll likely ask for Objects and Rooms to libraries down the road when it comes time!</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-07-23T17:15:32.2282392Z",
      "LastEditDate": "2018-07-23T17:21:46.0857119Z",
      "link": null
    },
    {
      "PostId": "990fcd6e-6d16-4aae-885c-249f7992493f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n(again, filler for getting my edited post, updated/posted)\r\n\r\n--------------------------\r\n\r\nto expound upon mrangel's post about how library files work (or rather what are library files, whatever, lol) ...\r\n\r\n-------------------------\r\n\r\n**LIBRARY FILE USAGE GUIDE (below within this post and within my additional posts below as well)**\r\n\r\n---------------\r\n\r\nthink of the files as literally folders for your entire game code:\r\n\r\n1. you got your 'NAME_OF_GAME_FILE.aslx' game file, which requires some special code in order to run/play your game (the 'asl' GAME OBJECT, human language and engine code, the special Game Settings and Publishing Info 'game' Object, a Room Object containing a Player Object, and etc code?)\r\n\r\n2. otherwise, you got your 'NAME_OF_LIBRARY_FILE.aslx' library files, which requires the 'library' LIBRARY OBJECT, and whatever game code (aside from the required game code for the game to run, as this code must be within the game file) you want to put/store within your library file\r\n\r\n-------------\r\n\r\nyou can literally have your entire game code within a single \"folder\" (file): your 'NAME_OF_GAME_FILE.aslx' game file\r\n\r\nbut, when your game gets big, this becomes a huge hassle, having all of your code in a single file, lots of searching/scrolling... lol\r\n\r\nwhich is when you should use library files for separating/organizing various segments/parts/pieces/types of your game code\r\n\r\n---------\r\n\r\nbut first, let's just examine/understand game files and library files...\r\n\r\n----\r\n\r\nthe default new game file:\r\n\r\n(example name of our game file: example_game_file.aslx)\r\n\r\n```\r\n<asl version=\"550\">\r\n\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n\r\n  <game name=\"example game\">\r\n  </game>\r\n\r\n  <object name=\"room\">\r\n\r\n    <inherit name=\"editor_room\" />\r\n\r\n  </object>\r\n\r\n  <object name=\"player\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n    <inherit name=\"editor_player\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  </object>\r\n\r\n</asl>\r\n```\r\n\r\n----\r\n\r\nmore game code (an 'orc' Object, also contained within the 'room' Room Object, just like the 'player' Player Object):\r\n\r\n```\r\n<asl version=\"550\">\r\n\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n\r\n  <game name=\"example game\">\r\n  </game>\r\n\r\n  <object name=\"room\">\r\n\r\n    <inherit name=\"editor_room\" />\r\n\r\n  </object>\r\n\r\n  <object name=\"player\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n    <inherit name=\"editor_player\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  </object>\r\n\r\n  <object name=\"orc\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  </object>\r\n\r\n</asl>\r\n```\r\n\r\n-----\r\n\r\nnow, let's just compartmentalize/organize/\"file-folder-away\"/separate parts/pieces/segments/types of our game code into multiple files (a game file and a library file):\r\n\r\nour 'example_game_file.aslx' game file:\r\n\r\n```\r\n<asl version=\"550\">\r\n\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n\r\n  <include ref=\"orc_library_file.aslx\" />\r\n\r\n  <game name=\"example game\">\r\n  </game>\r\n\r\n  <object name=\"room\">\r\n\r\n    <inherit name=\"editor_room\" />\r\n\r\n  </object>\r\n\r\n  <object name=\"player\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n    <inherit name=\"editor_player\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  </object>\r\n\r\n</asl>\r\n```\r\n\r\nand our (example named):\r\n\r\n'orc_library_file.aslx' library file\r\n\r\n```\r\n<library>\r\n\r\n  <object name=\"orc\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  </object>\r\n\r\n</library>\r\n```\r\n\r\n----\r\n\r\nthese two files are the exact same as if we only had our game file containing all of our game code (the required stuff and our 'orc' Object)\r\n\r\nas literally the:\r\n\r\n```\r\n<include ref=\"NAME_OF_LIBRARY_FILE.aslx\" />\r\n\r\n\r\ncode line is telling quest to go find and open up that file, highlight and copy all of its code (except the '<library>' and '</library>' code lines), and then to paste it into your game file's code, just as if you just had all of the code within your game file to begin with\r\n```\r\n\r\n---------------\r\n\r\nOrganizing your code, via multiple files (your game file and your X-quantity-of library files), makes it much easier on you!\r\n\r\n(there are some issues though in using multiple, aka library, files, as they got to be compatible: placed in the correct order, and etc various other issues involved, like duplication of your code, unfortunately I don't think quest as the 'def/ifdef/ifndef' functionality for its library files: https://msdn.microsoft.com/en-us/library/2a1b21sf.aspx , though please correct me, if it indeed does have this very important functionality!)\r\n\r\n-----------\r\n\r\nP.S.\r\n\r\nIMPORTANT:\r\n\r\nyour library files must be within the same folder as either: your game file and/or quest (the 'quest.exe' file-program), as otherwise, quest won't be able to find/locate your library files (these are the places/folders that it searches for your library files)",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)<br>\n(again, filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>to expound upon mrangel's post about how library files work (or rather what are library files, whatever, lol) ...</p>\n<hr>\n<p><strong>LIBRARY FILE USAGE GUIDE (below within this post and within my additional posts below as well)</strong></p>\n<hr>\n<p>think of the files as literally folders for your entire game code:</p>\n<ol>\n<li>\n<p>you got your 'NAME_OF_GAME_FILE.aslx' game file, which requires some special code in order to run/play your game (the 'asl' GAME OBJECT, human language and engine code, the special Game Settings and Publishing Info 'game' Object, a Room Object containing a Player Object, and etc code?)</p>\n</li>\n<li>\n<p>otherwise, you got your 'NAME_OF_LIBRARY_FILE.aslx' library files, which requires the 'library' LIBRARY OBJECT, and whatever game code (aside from the required game code for the game to run, as this code must be within the game file) you want to put/store within your library file</p>\n</li>\n</ol>\n<hr>\n<p>you can literally have your entire game code within a single \"folder\" (file): your 'NAME_OF_GAME_FILE.aslx' game file</p>\n<p>but, when your game gets big, this becomes a huge hassle, having all of your code in a single file, lots of searching/scrolling... lol</p>\n<p>which is when you should use library files for separating/organizing various segments/parts/pieces/types of your game code</p>\n<hr>\n<p>but first, let's just examine/understand game files and library files...</p>\n<hr>\n<p>the default new game file:</p>\n<p>(example name of our game file: example_game_file.aslx)</p>\n<pre><code>&lt;asl version=\"550\"&gt;\n\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n\n  &lt;game name=\"example game\"&gt;\n  &lt;/game&gt;\n\n  &lt;object name=\"room\"&gt;\n\n    &lt;inherit name=\"editor_room\" /&gt;\n\n  &lt;/object&gt;\n\n  &lt;object name=\"player\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n    &lt;inherit name=\"editor_player\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p>more game code (an 'orc' Object, also contained within the 'room' Room Object, just like the 'player' Player Object):</p>\n<pre><code>&lt;asl version=\"550\"&gt;\n\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n\n  &lt;game name=\"example game\"&gt;\n  &lt;/game&gt;\n\n  &lt;object name=\"room\"&gt;\n\n    &lt;inherit name=\"editor_room\" /&gt;\n\n  &lt;/object&gt;\n\n  &lt;object name=\"player\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n    &lt;inherit name=\"editor_player\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n  &lt;object name=\"orc\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p>now, let's just compartmentalize/organize/\"file-folder-away\"/separate parts/pieces/segments/types of our game code into multiple files (a game file and a library file):</p>\n<p>our 'example_game_file.aslx' game file:</p>\n<pre><code>&lt;asl version=\"550\"&gt;\n\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n\n  &lt;include ref=\"orc_library_file.aslx\" /&gt;\n\n  &lt;game name=\"example game\"&gt;\n  &lt;/game&gt;\n\n  &lt;object name=\"room\"&gt;\n\n    &lt;inherit name=\"editor_room\" /&gt;\n\n  &lt;/object&gt;\n\n  &lt;object name=\"player\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n    &lt;inherit name=\"editor_player\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n&lt;/asl&gt;\n</code></pre>\n<p>and our (example named):</p>\n<p>'orc_library_file.aslx' library file</p>\n<pre><code>&lt;library&gt;\n\n  &lt;object name=\"orc\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n&lt;/library&gt;\n</code></pre>\n<hr>\n<p>these two files are the exact same as if we only had our game file containing all of our game code (the required stuff and our 'orc' Object)</p>\n<p>as literally the:</p>\n<pre><code>&lt;include ref=\"NAME_OF_LIBRARY_FILE.aslx\" /&gt;\n\n\ncode line is telling quest to go find and open up that file, highlight and copy all of its code (except the '&lt;library&gt;' and '&lt;/library&gt;' code lines), and then to paste it into your game file's code, just as if you just had all of the code within your game file to begin with\n</code></pre>\n<hr>\n<p>Organizing your code, via multiple files (your game file and your X-quantity-of library files), makes it much easier on you!</p>\n<p>(there are some issues though in using multiple, aka library, files, as they got to be compatible: placed in the correct order, and etc various other issues involved, like duplication of your code, unfortunately I don't think quest as the 'def/ifdef/ifndef' functionality for its library files: https://msdn.microsoft.com/en-us/library/2a1b21sf.aspx , though please correct me, if it indeed does have this very important functionality!)</p>\n<hr>\n<p>P.S.</p>\n<p>IMPORTANT:</p>\n<p>your library files must be within the same folder as either: your game file and/or quest (the 'quest.exe' file-program), as otherwise, quest won't be able to find/locate your library files (these are the places/folders that it searches for your library files)</p>\n\n",
      "PostDate": "2018-07-23T19:27:50.447884Z",
      "LastEditDate": "2018-07-23T20:43:05.7428002Z",
      "link": null
    },
    {
      "PostId": "5100d9eb-e210-4f74-a8ea-82396e44169f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you can have any (more or less, might be some exceptions) Element (Objects, Functions, Commands, Turnscripts, Timers, Verbs, Object Types, and etc) within a library file:\r\n\r\n```\r\n<library>\r\n\r\n  <object name=\"orc\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n\r\n    <inherit name=\"monster_type\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  </object>\r\n\r\n  <object name=\"ogre\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n\r\n    <inherit name=\"monster_type\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  </object>\r\n\r\n  <type name=\"monster_type\">\r\n\r\n    <attr name=\"dead\" type=\"boolean\">false</attr>\r\n\r\n  </type>\r\n\r\n  <command name=\"example_command\">\r\n  </command>\r\n\r\n  <function name=\"example_function\">\r\n  </function>\r\n\r\n  <verb name=\"example_verb\">\r\n  </verb>\r\n\r\n  <turnscript name=\"example_turnscript\">\r\n  </turnscript>\r\n\r\n  <timer name=\"example_timer\">\r\n  </timer>\r\n\r\n</library>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>you can have any (more or less, might be some exceptions) Element (Objects, Functions, Commands, Turnscripts, Timers, Verbs, Object Types, and etc) within a library file:</p>\n<pre><code>&lt;library&gt;\n\n  &lt;object name=\"orc\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n\n    &lt;inherit name=\"monster_type\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n  &lt;object name=\"ogre\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n\n    &lt;inherit name=\"monster_type\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n  &lt;type name=\"monster_type\"&gt;\n\n    &lt;attr name=\"dead\" type=\"boolean\"&gt;false&lt;/attr&gt;\n\n  &lt;/type&gt;\n\n  &lt;command name=\"example_command\"&gt;\n  &lt;/command&gt;\n\n  &lt;function name=\"example_function\"&gt;\n  &lt;/function&gt;\n\n  &lt;verb name=\"example_verb\"&gt;\n  &lt;/verb&gt;\n\n  &lt;turnscript name=\"example_turnscript\"&gt;\n  &lt;/turnscript&gt;\n\n  &lt;timer name=\"example_timer\"&gt;\n  &lt;/timer&gt;\n\n&lt;/library&gt;\n</code></pre>\n\n",
      "PostDate": "2018-07-23T19:42:39.87206Z",
      "LastEditDate": "2018-07-23T19:44:21.077033Z",
      "link": null
    },
    {
      "PostId": "a597fb26-14fc-426f-bbb6-f3f32260d92f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "P.S.\r\n\r\nlibrary files can be nested (library files can be loaded/copied into other library files: library files do NOT have to be loaded/copied into the game file, well, eventually they have to from some library file, but hopefully you understand from the example below), an example of it:\r\n\r\n(btw: the 'Core.aslx' is the default/built-in engine code and it's a hub library file to the various/numerous individual 'core' library files found in the quest folder)\r\n\r\n'example_game_file.aslx' game file:\r\n\r\n```\r\n<asl version=\"550\">\r\n\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n\r\n  <include ref=\"monster_hub_library_file.aslx\" />\r\n\r\n  <game name=\"NAME_OF_GAME\">\r\n  </game>\r\n\r\n  <object name=\"room\">\r\n\r\n    <inherit name=\"editor_room\" />\r\n\r\n  </object>\r\n\r\n  <object name=\"player\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n    <inherit name=\"editor_player\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  </object>\r\n\r\n</asl>\r\n```\r\n\r\n'monster_hub_library_file.aslx' hub library file:\r\n\r\n```\r\n<library>\r\n\r\n  <include ref=\"orc_libary_file.aslx\" />\r\n  <include ref=\"ogre_libary_file.aslx\" />\r\n  <include ref=\"troll_libary_file.aslx\" />\r\n  <include ref=\"goblin_libary_file.aslx\" />\r\n  <include ref=\"gremlin_libary_file.aslx\" />\r\n  <include ref=\"cyclops_libary_file.aslx\" />\r\n\r\n  <object name=\"monster_object\">\r\n\r\n    <monster_species_stringlist_attribute type=\"stringlist\">\r\n\r\n      <value>orc</value>\r\n      <value>ogre</value>\r\n      <value>troll</value>\r\n      <value>goblin</value>\r\n      <value>gremlin</value>\r\n      <value>cyclops</value>\r\n\r\n    </monster_species_stringlist_attribute>\r\n\r\n  </object>\r\n\r\n</library>\r\n```\r\n\r\n'orc_library_file.aslx' library file:\r\n\r\n```\r\n<library>\r\n\r\n  <object name=\"orc\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n\r\n    <inherit name=\"orc_type\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  </object>\r\n\r\n  <type name=\"orc_type\">\r\n\r\n    <attr name=\"species_string_attribute\" type=\"string\">orc</attr>\r\n\r\n  </type>\r\n\r\n</library>\r\n```\r\n\r\n'ogre_library_file.aslx' library file:\r\n\r\n```\r\n<library>\r\n\r\n  <object name=\"ogre\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n\r\n    <inherit name=\"ogre_type\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  </object>\r\n\r\n  <type name=\"ogre_type\">\r\n\r\n    <attr name=\"species_string_attribute\" type=\"string\">ogre</attr>\r\n\r\n  </type>\r\n\r\n</library>\r\n```\r\n\r\n'troll_library_file.aslx' library file:\r\n\r\n```\r\n<library>\r\n\r\n  <object name=\"troll\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n\r\n    <inherit name=\"troll_type\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  </object>\r\n\r\n  <type name=\"troll_type\">\r\n\r\n    <attr name=\"species_string_attribute\" type=\"string\">troll</attr>\r\n\r\n  </type>\r\n\r\n</library>\r\n```\r\n\r\n'goblin_library_file.aslx' library file:\r\n\r\n```\r\n<library>\r\n\r\n  <object name=\"goblin\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n\r\n    <inherit name=\"goblin_type\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  </object>\r\n\r\n  <type name=\"goblin_type\">\r\n\r\n    <attr name=\"species_string_attribute\" type=\"string\">goblin</attr>\r\n\r\n  </type>\r\n\r\n</library>\r\n```\r\n\r\n'gremlin_library_file.aslx' library file:\r\n\r\n```\r\n<library>\r\n\r\n  <object name=\"gremlin\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n\r\n    <inherit name=\"gremlin_type\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  </object>\r\n\r\n  <type name=\"gremlin_type\">\r\n\r\n    <attr name=\"species_string_attribute\" type=\"string\">gremlin</attr>\r\n\r\n  </type>\r\n\r\n</library>\r\n```\r\n\r\n'cyclops_library_file.aslx' library file:\r\n\r\n```\r\n<library>\r\n\r\n  <object name=\"cyclops\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n\r\n    <inherit name=\"cyclops_type\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  </object>\r\n\r\n  <type name=\"cyclops_type\">\r\n\r\n    <attr name=\"species_string_attribute\" type=\"string\">cyclops</attr>\r\n\r\n  </type>\r\n\r\n</library>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>P.S.</p>\n<p>library files can be nested (library files can be loaded/copied into other library files: library files do NOT have to be loaded/copied into the game file, well, eventually they have to from some library file, but hopefully you understand from the example below), an example of it:</p>\n<p>(btw: the 'Core.aslx' is the default/built-in engine code and it's a hub library file to the various/numerous individual 'core' library files found in the quest folder)</p>\n<p>'example_game_file.aslx' game file:</p>\n<pre><code>&lt;asl version=\"550\"&gt;\n\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n\n  &lt;include ref=\"monster_hub_library_file.aslx\" /&gt;\n\n  &lt;game name=\"NAME_OF_GAME\"&gt;\n  &lt;/game&gt;\n\n  &lt;object name=\"room\"&gt;\n\n    &lt;inherit name=\"editor_room\" /&gt;\n\n  &lt;/object&gt;\n\n  &lt;object name=\"player\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n    &lt;inherit name=\"editor_player\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n&lt;/asl&gt;\n</code></pre>\n<p>'monster_hub_library_file.aslx' hub library file:</p>\n<pre><code>&lt;library&gt;\n\n  &lt;include ref=\"orc_libary_file.aslx\" /&gt;\n  &lt;include ref=\"ogre_libary_file.aslx\" /&gt;\n  &lt;include ref=\"troll_libary_file.aslx\" /&gt;\n  &lt;include ref=\"goblin_libary_file.aslx\" /&gt;\n  &lt;include ref=\"gremlin_libary_file.aslx\" /&gt;\n  &lt;include ref=\"cyclops_libary_file.aslx\" /&gt;\n\n  &lt;object name=\"monster_object\"&gt;\n\n    &lt;monster_species_stringlist_attribute type=\"stringlist\"&gt;\n\n      &lt;value&gt;orc&lt;/value&gt;\n      &lt;value&gt;ogre&lt;/value&gt;\n      &lt;value&gt;troll&lt;/value&gt;\n      &lt;value&gt;goblin&lt;/value&gt;\n      &lt;value&gt;gremlin&lt;/value&gt;\n      &lt;value&gt;cyclops&lt;/value&gt;\n\n    &lt;/monster_species_stringlist_attribute&gt;\n\n  &lt;/object&gt;\n\n&lt;/library&gt;\n</code></pre>\n<p>'orc_library_file.aslx' library file:</p>\n<pre><code>&lt;library&gt;\n\n  &lt;object name=\"orc\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n\n    &lt;inherit name=\"orc_type\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n  &lt;type name=\"orc_type\"&gt;\n\n    &lt;attr name=\"species_string_attribute\" type=\"string\"&gt;orc&lt;/attr&gt;\n\n  &lt;/type&gt;\n\n&lt;/library&gt;\n</code></pre>\n<p>'ogre_library_file.aslx' library file:</p>\n<pre><code>&lt;library&gt;\n\n  &lt;object name=\"ogre\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n\n    &lt;inherit name=\"ogre_type\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n  &lt;type name=\"ogre_type\"&gt;\n\n    &lt;attr name=\"species_string_attribute\" type=\"string\"&gt;ogre&lt;/attr&gt;\n\n  &lt;/type&gt;\n\n&lt;/library&gt;\n</code></pre>\n<p>'troll_library_file.aslx' library file:</p>\n<pre><code>&lt;library&gt;\n\n  &lt;object name=\"troll\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n\n    &lt;inherit name=\"troll_type\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n  &lt;type name=\"troll_type\"&gt;\n\n    &lt;attr name=\"species_string_attribute\" type=\"string\"&gt;troll&lt;/attr&gt;\n\n  &lt;/type&gt;\n\n&lt;/library&gt;\n</code></pre>\n<p>'goblin_library_file.aslx' library file:</p>\n<pre><code>&lt;library&gt;\n\n  &lt;object name=\"goblin\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n\n    &lt;inherit name=\"goblin_type\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n  &lt;type name=\"goblin_type\"&gt;\n\n    &lt;attr name=\"species_string_attribute\" type=\"string\"&gt;goblin&lt;/attr&gt;\n\n  &lt;/type&gt;\n\n&lt;/library&gt;\n</code></pre>\n<p>'gremlin_library_file.aslx' library file:</p>\n<pre><code>&lt;library&gt;\n\n  &lt;object name=\"gremlin\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n\n    &lt;inherit name=\"gremlin_type\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n  &lt;type name=\"gremlin_type\"&gt;\n\n    &lt;attr name=\"species_string_attribute\" type=\"string\"&gt;gremlin&lt;/attr&gt;\n\n  &lt;/type&gt;\n\n&lt;/library&gt;\n</code></pre>\n<p>'cyclops_library_file.aslx' library file:</p>\n<pre><code>&lt;library&gt;\n\n  &lt;object name=\"cyclops\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n\n    &lt;inherit name=\"cyclops_type\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n  &lt;type name=\"cyclops_type\"&gt;\n\n    &lt;attr name=\"species_string_attribute\" type=\"string\"&gt;cyclops&lt;/attr&gt;\n\n  &lt;/type&gt;\n\n&lt;/library&gt;\n</code></pre>\n\n",
      "PostDate": "2018-07-23T20:00:22.7449412Z",
      "LastEditDate": "2018-07-23T20:35:35.3916033Z",
      "link": null
    }
  ]
}
