{
  "Topic": {
    "TopicId": "zupeji5z00yste6t50jema",
    "ForumId": "18",
    "Title": "A neater WriteVerb? (Quest)",
    "LastUpdated": "2022-02-21T17:10:47.1084136Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "9f6277e7-16a1-4639-9fd4-05ebc7381bd7",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is something that's been bugging me for a while. It seems that `WriteVerb` would be a little more useful if it had some context for what has been said before. (For example, knowing whether to refer to an object by its pronouns or alias).\r\n\r\nSo how about:\r\n```\r\n  <function name=\"WriteVerb\" type=\"string\" parameters=\"obj, verb\">\r\n    return (CapFirst(WriteNoun (obj)) + \" \" + Conjugate(obj, verb))\r\n  </function>\r\n\r\n  <function name=\"WriteNoun\" type=\"string\" parameters=\"obj, definite\">\r\n    result = GetDisplayAlias (obj)\r\n    if (IsDefined (\"definite\")) {\r\n      if (defiinite) {\r\n        result = GetDefiniteName (obj)\r\n      }\r\n    }\r\n    if (not HasAttribute (game, \"lastobjects\")) {\r\n      game.lastobjects = NewObjectList()\r\n    }\r\n    if (ListContains (game.lastobjects, obj)) {\r\n      filtered = FilterByAttribute (game.lastobjects, \"gender\", obj.gender))\r\n      // Use \"he\", \"it\", etc sensibly depending on its position in lastobjects\r\n      // Either it's the only object of its gender mentioned in the command, or it's one of the last two objects mentioned\r\n      if (IndexOf (game.lastobjects, obj) + 2 >= ListCount (game.lastobjects) or ListCount (FilterByAttribute (game.lastobjects, \"gender\", obj.gender)) == 1) {\r\n        result = obj.gender\r\n      }\r\n    }\r\n    // Move the object to the end of lastobjects\r\n    while (ListContains (game.lastobjects, obj)) {\r\n      list remove (game.lastobjects, obj)\r\n    }\r\n    list add (game.lastobjects, obj)\r\n    return (result)\r\n  </function>\r\n```\r\n\r\nI think that should mean that if you do something like:\r\n```\r\nmsg (CapFirst(WriteVerb(bob, \"eat\") + \" \" + WriteNoun(cake, true) + \".\"))\r\n```\r\nfor a command that can be phrased in several ways, you could get output like:\r\n```\r\n==> give cake to bob\r\nHe eats it.\r\n\r\n==> drop cake\r\nBob eats it.\r\n\r\n==> feed bob\r\nHe eats the cake.\r\n```\r\n\r\nIf you tweak other parts of the game, like `FormatObjectList`, to use a function like this, it could make it more convenient to output text. Having the output system come out with \"He\" or \"Bob\" automatically, depending on if Bob was the last person mentioned. This could be especially useful if you have quite complex text in the text processor, with many optional or random parts.",
      "EditableFormat": "markdown",
      "HTML": "<p>This is something that's been bugging me for a while. It seems that <code>WriteVerb</code> would be a little more useful if it had some context for what has been said before. (For example, knowing whether to refer to an object by its pronouns or alias).</p>\n<p>So how about:</p>\n<pre><code>  &lt;function name=\"WriteVerb\" type=\"string\" parameters=\"obj, verb\"&gt;\n    return (CapFirst(WriteNoun (obj)) + \" \" + Conjugate(obj, verb))\n  &lt;/function&gt;\n\n  &lt;function name=\"WriteNoun\" type=\"string\" parameters=\"obj, definite\"&gt;\n    result = GetDisplayAlias (obj)\n    if (IsDefined (\"definite\")) {\n      if (defiinite) {\n        result = GetDefiniteName (obj)\n      }\n    }\n    if (not HasAttribute (game, \"lastobjects\")) {\n      game.lastobjects = NewObjectList()\n    }\n    if (ListContains (game.lastobjects, obj)) {\n      filtered = FilterByAttribute (game.lastobjects, \"gender\", obj.gender))\n      // Use \"he\", \"it\", etc sensibly depending on its position in lastobjects\n      // Either it's the only object of its gender mentioned in the command, or it's one of the last two objects mentioned\n      if (IndexOf (game.lastobjects, obj) + 2 &gt;= ListCount (game.lastobjects) or ListCount (FilterByAttribute (game.lastobjects, \"gender\", obj.gender)) == 1) {\n        result = obj.gender\n      }\n    }\n    // Move the object to the end of lastobjects\n    while (ListContains (game.lastobjects, obj)) {\n      list remove (game.lastobjects, obj)\n    }\n    list add (game.lastobjects, obj)\n    return (result)\n  &lt;/function&gt;\n</code></pre>\n<p>I think that should mean that if you do something like:</p>\n<pre><code>msg (CapFirst(WriteVerb(bob, \"eat\") + \" \" + WriteNoun(cake, true) + \".\"))\n</code></pre>\n<p>for a command that can be phrased in several ways, you could get output like:</p>\n<pre><code>==&gt; give cake to bob\nHe eats it.\n\n==&gt; drop cake\nBob eats it.\n\n==&gt; feed bob\nHe eats the cake.\n</code></pre>\n<p>If you tweak other parts of the game, like <code>FormatObjectList</code>, to use a function like this, it could make it more convenient to output text. Having the output system come out with \"He\" or \"Bob\" automatically, depending on if Bob was the last person mentioned. This could be especially useful if you have quite complex text in the text processor, with many optional or random parts.</p>\n\n",
      "PostDate": "2022-02-21T17:10:47.1084136Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
