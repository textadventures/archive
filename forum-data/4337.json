{
  "Topic": {
    "TopicId": "4337",
    "ForumId": "10",
    "Title": "How To Get Rid Of Default Responses",
    "LastUpdated": "2014-06-03T18:46:18+01:00",
    "ReplyCount": 19
  },
  "Posts": [
    {
      "PostId": "28775",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Is there, maybe even an easy way to get rid of all the default responses in Quest? I'd like in my game to be reactions to only those things I set to generate reactions. Anything else would ruin it. \nI talk about the &quot;I can't see that.&quot; or &quot;I don't understand your command.&quot; type of responses. Can I get rid of those?",
      "EditableFormat": "bbcode",
      "HTML": "Is there, maybe even an easy way to get rid of all the default responses in Quest? I'd like in my game to be reactions to only those things I set to generate reactions. Anything else would ruin it. <br/>I talk about the &quot;I can't see that.&quot; or &quot;I don't understand your command.&quot; type of responses. Can I get rid of those?",
      "PostDate": "2014-05-15T17:54:13+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28777",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "The first question is: what do you want instead? For example, if they type a command that is not recognized, do you want it to print something? (I assume so; it would be a bit strange to get no feedback.) If so, then you can change what the responses are by overriding the appropriate templates.\n\nIf you'd like something else, then it would be helpful to know what your design is (e.g. what happens if they try to look at something not visible).",
      "EditableFormat": "bbcode",
      "HTML": "The first question is: what do you want instead? For example, if they type a command that is not recognized, do you want it to print something? (I assume so; it would be a bit strange to get no feedback.) If so, then you can change what the responses are by overriding the appropriate templates.<br/><br/>If you'd like something else, then it would be helpful to know what your design is (e.g. what happens if they try to look at something not visible).",
      "PostDate": "2014-05-15T19:34:30+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28790",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "There should be nothing. Really. No feedback.\nI want to achieve a very consistent feedback loop. I show the player what input makes sense and anything beside that just isn't really input. You don't get any feedback in a video game when you hit a useless button, do you? Or miss a button.\nPeople tend to think that in a textadventure they merely have to use the right language and any activity they suggest or input they type in, should work in way or another. And showing feedback to no input is just giving the player the impression that that's how it works. I use all I can think of and something is bound to be right. But I want to discourage that sort of thinking. The player should never be in doubt what he can and can't do.",
      "EditableFormat": "bbcode",
      "HTML": "There should be nothing. Really. No feedback.<br/>I want to achieve a very consistent feedback loop. I show the player what input makes sense and anything beside that just isn't really input. You don't get any feedback in a video game when you hit a useless button, do you? Or miss a button.<br/>People tend to think that in a textadventure they merely have to use the right language and any activity they suggest or input they type in, should work in way or another. And showing feedback to no input is just giving the player the impression that that's how it works. I use all I can think of and something is bound to be right. But I want to discourage that sort of thinking. The player should never be in doubt what he can and can't do.",
      "PostDate": "2014-05-16T10:30:43+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28795",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "It looks like if you add a script called &quot;unresolvedcommandhandler&quot; to your &quot;game&quot; object, then that will be invoked whenever a command is not recognized. You can have it do nothing.\n\nIt also looks like if you drop this into your game:\n\n[code:33e2owsb]&lt;function name=&quot;UnresolvedCommand&quot; parameters=&quot;objectname, varname&quot;&gt;\n&lt;/function&gt;[/code:33e2owsb]\nthen it won't complain about missing objects either.  Both of the above are untested, so let me know if they don't work.\n\nSince you had asked for game discussion in another thread, and since you're verging out into uncharted territory, I just wanted to give you your first actual player feedback, based on your &quot;A Test Concerning...&quot; game that I have seen so far.\n\nWhile analogies can be insightful and make us look at things in new and different ways, not every analogy is valid. The fact that there is no feedback to an incorrect button press on a game controller can lead to a *thought* that perhaps it can work for text as well. Maybe it can and maybe it can't. The important thing is to try and see how it works with real live people. There are other analogies you could follow - for example, the same game controller used when watching video will typically get a circle-with-slash-through-it in an upper corner if they try to hit something incorrect. (I've worked on such software.) What's the difference? Conventions. The convention in console games is that when you press a button that has no function, nothing happens. The convention when using video playback software is that you get a rude sound and a red circle. The convention in text adventures is that when you type something unrecognized, it tells you.\n\nSo here's my feedback: when I got into your first room and it said to look around and then exit through the door, I thought, &quot;OK, to look around in a text adventure game, I type 'look'.&quot; So I did that, and it did nothing. No response. So I typed &quot;l&quot;, and the same non-response. I tried other things, all with no response, and my conclusion was that the game was broken. Or that you would fix it later. I didn't see it as a paradigm-busting innovation on your part. I didn't see it as me doing something wrong. I saw it as the game wasn't designed properly.\n\nFor me, the feedback from the game is not implying that there is this large range of commands for me to try. The text prompt itself does that. Actually, the feedback tells me the opposite - it tells me I *can't* type certain things, that I need to figure out (from the text or whatnot) what to type in that will work. Removing that feedback does not remove the mentality or even the need on the part of the player to work out what to type. It's the same loop, it's the same process, just with even less feedback, so with even more frustration. \n\nNow to your mind, perhaps saying in your text, &quot;Look around and ...&quot; means that they should know to type the exact words &quot;look around.&quot; From your point of view, I'm sure it's quite clear. That is the advantage of the author point of view. But from the player point of view, I'm still struggling to figure out what to input. I'm still trying to find the magic incantation that works. And under the covers, you're still using the same code that everyone else uses to parse input - you're just not providing any feedback to what has gone wrong when they get it wrong. That doesn't cause a mind shift for the player to &quot;oh, I can't type just anything. I have to type just certain things.&quot;, because parser-based games already are that and because despite the text you put in your game, we're all still human beings interpreting things and trying to map that into thing to type in. As I have never had to type &quot;look around&quot; in a text adventure before, it simply did not occur to me, because I did not think so literally. The lack of feedback did not cause a mental shift to some other meaning of what I was typing. So I walked away. If that's what you're going for - where the input is actually part of the puzzle to the extent that you want to throw out all conventions - then I say more power to you. But go into it with eyes wide open about what that will cause. My bet: people are not going to say, &quot;Here's a new ground-breaking paradigm we should all adopt.&quot; They're probably going to say, &quot;Here's someone making the painful experience of using a text parser even worse by not even telling the player what they're doing wrong.&quot;\n\nYou say, &quot;But I want to discourage that sort of thinking.&quot; What I'm telling you is, based on my own experience, that doesn't happen. It didn't discourage the &quot;I need to figure out what to type&quot; mentality. It just discouraged me from wanting to play at all.\n\nImagine you're playing a game on a PC and you see a button on your computer screen and when you click it with your mouse, it depresses but then nothing happens. You'd think it was broken. Because the convention is that when a button is active and enabled, that it does something. Someone could say, well, in console games, pressing an inactive button does nothing, so I'm not going to do anything either. And people will say, fine, and the convention then is to disable it so that the user knows. Feedback up front. I would suggest you do more than you're doing so far. If you're not going to provide feedback after the fact, then make it crystal clear up front - and just having it in the body text just might not be enough.\n\nI applaud your attempt to go in new directions. If you wish to play with conventions - well, the best and most creative people do that all the time. And they get blasted to bits if it doesn't work. So be prepared. My suggestion to you is to have empathy for the player - have thoughts from the author's point of view about what people &quot;should&quot; do, but then also put yourself in the player's place and make sure that, if they can only do X, Y or Z and you expect them to only input X, Y, or Z, that you make it really clear. And know that what I have played so far, it was not clear, because you have something that looks like standard IF but isn't.\n\nAnd get lots of people to test. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "It looks like if you add a script called &quot;unresolvedcommandhandler&quot; to your &quot;game&quot; object, then that will be invoked whenever a command is not recognized. You can have it do nothing.<br/><br/>It also looks like if you drop this into your game:<br/><br/><pre><code>&lt;function name=&quot;UnresolvedCommand&quot; parameters=&quot;objectname, varname&quot;&gt;<br/>&lt;/function&gt;</code></pre><br/>then it won't complain about missing objects either.  Both of the above are untested, so let me know if they don't work.<br/><br/>Since you had asked for game discussion in another thread, and since you're verging out into uncharted territory, I just wanted to give you your first actual player feedback, based on your &quot;A Test Concerning...&quot; game that I have seen so far.<br/><br/>While analogies can be insightful and make us look at things in new and different ways, not every analogy is valid. The fact that there is no feedback to an incorrect button press on a game controller can lead to a *thought* that perhaps it can work for text as well. Maybe it can and maybe it can't. The important thing is to try and see how it works with real live people. There are other analogies you could follow - for example, the same game controller used when watching video will typically get a circle-with-slash-through-it in an upper corner if they try to hit something incorrect. (I've worked on such software.) What's the difference? Conventions. The convention in console games is that when you press a button that has no function, nothing happens. The convention when using video playback software is that you get a rude sound and a red circle. The convention in text adventures is that when you type something unrecognized, it tells you.<br/><br/>So here's my feedback: when I got into your first room and it said to look around and then exit through the door, I thought, &quot;OK, to look around in a text adventure game, I type 'look'.&quot; So I did that, and it did nothing. No response. So I typed &quot;l&quot;, and the same non-response. I tried other things, all with no response, and my conclusion was that the game was broken. Or that you would fix it later. I didn't see it as a paradigm-busting innovation on your part. I didn't see it as me doing something wrong. I saw it as the game wasn't designed properly.<br/><br/>For me, the feedback from the game is not implying that there is this large range of commands for me to try. The text prompt itself does that. Actually, the feedback tells me the opposite - it tells me I *can't* type certain things, that I need to figure out (from the text or whatnot) what to type in that will work. Removing that feedback does not remove the mentality or even the need on the part of the player to work out what to type. It's the same loop, it's the same process, just with even less feedback, so with even more frustration. <br/><br/>Now to your mind, perhaps saying in your text, &quot;Look around and ...&quot; means that they should know to type the exact words &quot;look around.&quot; From your point of view, I'm sure it's quite clear. That is the advantage of the author point of view. But from the player point of view, I'm still struggling to figure out what to input. I'm still trying to find the magic incantation that works. And under the covers, you're still using the same code that everyone else uses to parse input - you're just not providing any feedback to what has gone wrong when they get it wrong. That doesn't cause a mind shift for the player to &quot;oh, I can't type just anything. I have to type just certain things.&quot;, because parser-based games already are that and because despite the text you put in your game, we're all still human beings interpreting things and trying to map that into thing to type in. As I have never had to type &quot;look around&quot; in a text adventure before, it simply did not occur to me, because I did not think so literally. The lack of feedback did not cause a mental shift to some other meaning of what I was typing. So I walked away. If that's what you're going for - where the input is actually part of the puzzle to the extent that you want to throw out all conventions - then I say more power to you. But go into it with eyes wide open about what that will cause. My bet: people are not going to say, &quot;Here's a new ground-breaking paradigm we should all adopt.&quot; They're probably going to say, &quot;Here's someone making the painful experience of using a text parser even worse by not even telling the player what they're doing wrong.&quot;<br/><br/>You say, &quot;But I want to discourage that sort of thinking.&quot; What I'm telling you is, based on my own experience, that doesn't happen. It didn't discourage the &quot;I need to figure out what to type&quot; mentality. It just discouraged me from wanting to play at all.<br/><br/>Imagine you're playing a game on a PC and you see a button on your computer screen and when you click it with your mouse, it depresses but then nothing happens. You'd think it was broken. Because the convention is that when a button is active and enabled, that it does something. Someone could say, well, in console games, pressing an inactive button does nothing, so I'm not going to do anything either. And people will say, fine, and the convention then is to disable it so that the user knows. Feedback up front. I would suggest you do more than you're doing so far. If you're not going to provide feedback after the fact, then make it crystal clear up front - and just having it in the body text just might not be enough.<br/><br/>I applaud your attempt to go in new directions. If you wish to play with conventions - well, the best and most creative people do that all the time. And they get blasted to bits if it doesn't work. So be prepared. My suggestion to you is to have empathy for the player - have thoughts from the author's point of view about what people &quot;should&quot; do, but then also put yourself in the player's place and make sure that, if they can only do X, Y or Z and you expect them to only input X, Y, or Z, that you make it really clear. And know that what I have played so far, it was not clear, because you have something that looks like standard IF but isn't.<br/><br/>And get lots of people to test. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2014-05-16T14:45:12+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28798",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Ok, thanks, I'm going to try the script.\n\nAs for your concerns, I actually did some playtesting already. With people, who didn't play textadventures before. And all of them typed &quot;look around&quot;. So, I guess I just have to take in account the textadventure-conventions that &quot;look&quot; works as well.\nI'm not trying to allienate anybody. I actually try to include a lot of people. I'm just still working out the game design and the underlying game mechanics. I'm just not there yet to take all the sensible input in account.\nThe problem I had a lot with playtesting that players always were messing around with the input. what happens if I type that in, what happens if I type that in. And the focus shouldn't lie on typing. It should lie on the game mechanics. And I think, I'm not sure, it is indeed an assumption and I want to test it, that the cause of that problem is, that input and output are very similiar, people have different expectations concerning the feedback loop than with video games. With video games you push buttons and you get an audiovisual feedback. Because input and output is so different from each other, people have an easy time understanding the feedback loop. With textadventures it is different. You type in text and the feedback is text. Because input and output are so similiar, people have a harder time understanding what the focus lies on. And I think removing non-game mechanical text input out of the feedback loop will give a better focus.\nYou posted a topic, I believe, about how you describe IF as a conversation and while I believe it is true for a certain kind of IF, I don't believe it is true for this one. With this one, I don't regard merely typing a text as interaction. \nSo, thanks for the concern, but I'm not blind to this issues. I'm doing playtesting, I didn't even start with designing the game, I'm still trying to figure out how to get the focus right and so on and on.\nBut you did show me the problems with conventions and I certainly will take them into account. I want this game to be pretty accesible. So, thanks.",
      "EditableFormat": "bbcode",
      "HTML": "Ok, thanks, I'm going to try the script.<br/><br/>As for your concerns, I actually did some playtesting already. With people, who didn't play textadventures before. And all of them typed &quot;look around&quot;. So, I guess I just have to take in account the textadventure-conventions that &quot;look&quot; works as well.<br/>I'm not trying to allienate anybody. I actually try to include a lot of people. I'm just still working out the game design and the underlying game mechanics. I'm just not there yet to take all the sensible input in account.<br/>The problem I had a lot with playtesting that players always were messing around with the input. what happens if I type that in, what happens if I type that in. And the focus shouldn't lie on typing. It should lie on the game mechanics. And I think, I'm not sure, it is indeed an assumption and I want to test it, that the cause of that problem is, that input and output are very similiar, people have different expectations concerning the feedback loop than with video games. With video games you push buttons and you get an audiovisual feedback. Because input and output is so different from each other, people have an easy time understanding the feedback loop. With textadventures it is different. You type in text and the feedback is text. Because input and output are so similiar, people have a harder time understanding what the focus lies on. And I think removing non-game mechanical text input out of the feedback loop will give a better focus.<br/>You posted a topic, I believe, about how you describe IF as a conversation and while I believe it is true for a certain kind of IF, I don't believe it is true for this one. With this one, I don't regard merely typing a text as interaction. <br/>So, thanks for the concern, but I'm not blind to this issues. I'm doing playtesting, I didn't even start with designing the game, I'm still trying to figure out how to get the focus right and so on and on.<br/>But you did show me the problems with conventions and I certainly will take them into account. I want this game to be pretty accesible. So, thanks.",
      "PostDate": "2014-05-16T15:58:02+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28799",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I appreciate your response, and I've actually been thinking some more, while I took a long walk. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I'll provide these last thoughts and then leave you in peace.\n\nI'm glad non-IF people went for &quot;look around&quot;. I can't put myself into that mindset because I'm not there any more, so the feedback is good. What I wonder is: what happened to those who typed something else and got an empty response? A big part of these text input games is working out the mechanics up front. There's just no way to avoid it. So we type something and see what happens. We naturally work out what happens with good from what happens with bad. Once we do that, we get on with things.\n\nIf we're lucky and provide good input up front, then we see a positive response. Nice. Then if we type something that doesn't fit and nothing happens, we can say, &quot;Ok, when I get it right, it responds, and when I don't, it says nothing.&quot; Easy peasy, move on to enjoying the game.\n\nIf we aren't so lucky and type something wrong up front... well, no response. I wonder what a typical user will make of that? The problem I can see is that there is a convention with text input as well. When I type something and submit it (hit Enter, click a button, etc), something happens. Whether it's the command prompt on a computer or a text input field in a web browser (e.g. the address bar) or the input line in a chat/IM program, when I type something and &quot;submit&quot; it, something happens.\n\nI can really understand and appreciate your thoughts about text output vs input. I hope you can also appreciate when I say, at least in my opinion, I don't think that's the issue. To me empty feedback is just an alternate form of textual feedback. Basically, I type something in, and I want to see what happens, whether I typed something good or not. In a traditional IF game, it tells you, no, sorry that's right. In your game, it will respond with silence - which the player will eventually interpret as, no, sorry, that's not right. In the overall feedback loop of the game, it will come to signify the same result as a message - I did something wrong. So I'm still not seeing where the difference will come in. To me it's still the same:\n\n1) Read what's on screen\n2) Try to work out what to type in\n3) Type it in\n4) See what happens. It's either good input or not.\n5) If it's good, then something interesting happens.\n6) If not (the game responds in its &quot;negative&quot; way, which might be silence in your case; it could be text, or it could be a little figure in the corner wagging his finger going &quot;uh uh uhhh&quot;), then I'll have to try again with something else\n7) Either way, go back to 1.\n\nI'm curious how your player testing works out! (not that I expect or deserve to know lol)",
      "EditableFormat": "bbcode",
      "HTML": "I appreciate your response, and I've actually been thinking some more, while I took a long walk. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I'll provide these last thoughts and then leave you in peace.<br/><br/>I'm glad non-IF people went for &quot;look around&quot;. I can't put myself into that mindset because I'm not there any more, so the feedback is good. What I wonder is: what happened to those who typed something else and got an empty response? A big part of these text input games is working out the mechanics up front. There's just no way to avoid it. So we type something and see what happens. We naturally work out what happens with good from what happens with bad. Once we do that, we get on with things.<br/><br/>If we're lucky and provide good input up front, then we see a positive response. Nice. Then if we type something that doesn't fit and nothing happens, we can say, &quot;Ok, when I get it right, it responds, and when I don't, it says nothing.&quot; Easy peasy, move on to enjoying the game.<br/><br/>If we aren't so lucky and type something wrong up front... well, no response. I wonder what a typical user will make of that? The problem I can see is that there is a convention with text input as well. When I type something and submit it (hit Enter, click a button, etc), something happens. Whether it's the command prompt on a computer or a text input field in a web browser (e.g. the address bar) or the input line in a chat/IM program, when I type something and &quot;submit&quot; it, something happens.<br/><br/>I can really understand and appreciate your thoughts about text output vs input. I hope you can also appreciate when I say, at least in my opinion, I don't think that's the issue. To me empty feedback is just an alternate form of textual feedback. Basically, I type something in, and I want to see what happens, whether I typed something good or not. In a traditional IF game, it tells you, no, sorry that's right. In your game, it will respond with silence - which the player will eventually interpret as, no, sorry, that's not right. In the overall feedback loop of the game, it will come to signify the same result as a message - I did something wrong. So I'm still not seeing where the difference will come in. To me it's still the same:<br/><br/>1) Read what's on screen<br/>2) Try to work out what to type in<br/>3) Type it in<br/>4) See what happens. It's either good input or not.<br/>5) If it's good, then something interesting happens.<br/>6) If not (the game responds in its &quot;negative&quot; way, which might be silence in your case; it could be text, or it could be a little figure in the corner wagging his finger going &quot;uh uh uhhh&quot;), then I'll have to try again with something else<br/>7) Either way, go back to 1.<br/><br/>I'm curious how your player testing works out! (not that I expect or deserve to know lol)",
      "PostDate": "2014-05-16T16:22:31+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28800",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "so, I found the function you mentioned, but I don't know what to do with it. How can I make it do nothing?",
      "EditableFormat": "bbcode",
      "HTML": "so, I found the function you mentioned, but I don't know what to do with it. How can I make it do nothing?",
      "PostDate": "2014-05-16T16:23:43+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28802",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Ok, I see what you mean.\nHm, I really didn't think about what happened if the first response was silence.\nSo, I included an introduction to the game where I try to give the player a clear mindset and I even add a list with all the text-input that works to the inventory. I hope that will be enough, but as I said, it is indeed experimental and I want to test it.\nI think the difference is a focus-shifting one.\nIn a classic textadventure, I read a text and try to figure out what to type in. But I want the player to read a text and try to figure out what interaction to perform. It may not seem like a huge difference, but I think it can mean the world.\nAnd I think giving the player feedback to typing, gives the impression that the player is interacting, regardless if it's meaningful or not.\nNot giving any feedback gives the impression of not interacting. So the focus shifts from typing to performing an interaction.\nI think.",
      "EditableFormat": "bbcode",
      "HTML": "Ok, I see what you mean.<br/>Hm, I really didn't think about what happened if the first response was silence.<br/>So, I included an introduction to the game where I try to give the player a clear mindset and I even add a list with all the text-input that works to the inventory. I hope that will be enough, but as I said, it is indeed experimental and I want to test it.<br/>I think the difference is a focus-shifting one.<br/>In a classic textadventure, I read a text and try to figure out what to type in. But I want the player to read a text and try to figure out what interaction to perform. It may not seem like a huge difference, but I think it can mean the world.<br/>And I think giving the player feedback to typing, gives the impression that the player is interacting, regardless if it's meaningful or not.<br/>Not giving any feedback gives the impression of not interacting. So the focus shifts from typing to performing an interaction.<br/>I think.",
      "PostDate": "2014-05-16T16:39:18+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28814",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "ok, so I dropped your script into my game and it got rid of some default responses, but some still remain.\nHow can I get rid of the rest?",
      "EditableFormat": "bbcode",
      "HTML": "ok, so I dropped your script into my game and it got rid of some default responses, but some still remain.<br/>How can I get rid of the rest?",
      "PostDate": "2014-05-17T08:29:54+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28816",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "If you could let me know what's left, we can pick them off one by one.",
      "EditableFormat": "bbcode",
      "HTML": "If you could let me know what's left, we can pick them off one by one.",
      "PostDate": "2014-05-17T16:02:36+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28821",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "I'm not sure. For example I tried out &quot;jump&quot; and that had a response, so I guess there are much more default responses that I don't know of.\nBut just typing something randomly in, generates no response anymore, so that's a huge step.\nSo, sorry, I can't really tell you all. I just don't know the input that usually works. But for example taking objects that can't be taken says &quot;You can't take that.&quot;",
      "EditableFormat": "bbcode",
      "HTML": "I'm not sure. For example I tried out &quot;jump&quot; and that had a response, so I guess there are much more default responses that I don't know of.<br/>But just typing something randomly in, generates no response anymore, so that's a huge step.<br/>So, sorry, I can't really tell you all. I just don't know the input that usually works. But for example taking objects that can't be taken says &quot;You can't take that.&quot;",
      "PostDate": "2014-05-17T20:47:20+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28822",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "If you go to the bottom of the left pane, click Filter and then Show Library Elements, then all the verbs and commands will show up in your tree. So, for example, &quot;jump&quot; is there and &quot;take&quot;.\n\nFor something like &quot;jump&quot;, you can click on the command and then click the Copy button in the top right to make a local copy in your game. Then you can just make it do nothing by deleting the script inside. Something like &quot;take&quot; will require a look, as you probably want some &quot;takes&quot; to work and others not.",
      "EditableFormat": "bbcode",
      "HTML": "If you go to the bottom of the left pane, click Filter and then Show Library Elements, then all the verbs and commands will show up in your tree. So, for example, &quot;jump&quot; is there and &quot;take&quot;.<br/><br/>For something like &quot;jump&quot;, you can click on the command and then click the Copy button in the top right to make a local copy in your game. Then you can just make it do nothing by deleting the script inside. Something like &quot;take&quot; will require a look, as you probably want some &quot;takes&quot; to work and others not.",
      "PostDate": "2014-05-17T21:01:00+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28849",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Alright, jump is disabled now.\nWith &quot;take&quot;, I run a script instead of the default behaviour, so that works as well.\nThanks again!",
      "EditableFormat": "bbcode",
      "HTML": "Alright, jump is disabled now.<br/>With &quot;take&quot;, I run a script instead of the default behaviour, so that works as well.<br/>Thanks again!",
      "PostDate": "2014-05-20T20:39:27+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28916",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "I've encountered a problem with disabling verbs. when I start the game, an error occurs, something like Error running script&#058; Error adding key '' to dictionary: an element with a same key already has been added.\nit happens when I disable two or more verbs, only one works fine.",
      "EditableFormat": "bbcode",
      "HTML": "I've encountered a problem with disabling verbs. when I start the game, an error occurs, something like Error running script&#058; Error adding key '' to dictionary: an element with a same key already has been added.<br/>it happens when I disable two or more verbs, only one works fine.",
      "PostDate": "2014-05-27T10:22:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28920",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Do you have a small game sample where this is happening?",
      "EditableFormat": "bbcode",
      "HTML": "Do you have a small game sample where this is happening?",
      "PostDate": "2014-05-27T13:54:07+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28962",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Here it is, simply start the game and it's the first thing that appears.",
      "EditableFormat": "bbcode",
      "HTML": "Here it is, simply start the game and it's the first thing that appears.<div><a href=\"/attachment/911\">Game design game.7z</a></div>",
      "PostDate": "2014-05-31T15:49:24+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28963",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "It seems the &quot;attribute&quot; value (known as &quot;property&quot; in code view) must be unique. You can't have two of the same, even an empty string. I would leave that attribute value alone in the verbs you disable. The pattern can be made empty, which means the verb won't match any input, but the attribute needs to be something unique, even if the verb is never called.",
      "EditableFormat": "bbcode",
      "HTML": "It seems the &quot;attribute&quot; value (known as &quot;property&quot; in code view) must be unique. You can't have two of the same, even an empty string. I would leave that attribute value alone in the verbs you disable. The pattern can be made empty, which means the verb won't match any input, but the attribute needs to be something unique, even if the verb is never called.",
      "PostDate": "2014-05-31T16:10:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29007",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Ah, yes, now it's gone, thanks a lot. I would have never come up with that. How do you do it, do you just mess around with another code, imitating the things I did until something happens? or did you study coding? or I don't know.",
      "EditableFormat": "bbcode",
      "HTML": "Ah, yes, now it's gone, thanks a lot. I would have never come up with that. How do you do it, do you just mess around with another code, imitating the things I did until something happens? or did you study coding? or I don't know.",
      "PostDate": "2014-06-02T10:48:20+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29008",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "It's hard to identify a single process. It really depends on the situation. (But, then, I've had lots of experience debugging problems over a long period of time!)\n\nFor this one, I first looked for clues in the error message. It was complaining about trying to add the same key twice, and the key was an empty string. Unfortunately, there was no direct code in your game that was adding a dictionary key, which made it more difficult to work out.\n\nThen knowing you had been overriding verbs, I looked at the verbs you created, in Code View. Each verb was very simple - only four fields. And all the fields were empty, So first I reduced them down to empty verbs, with no fields at all (just the verb name). And that worked - no error. So now I had bracketing cases, and I just worked my way in, going back to the failing case and removing fields one by one until I found the one that made it work again. Then I changed the code back to what you had and just set that one field to a non-empty value to prove it was the problem.\n\nI'm not sure if that makes sense or not. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "It's hard to identify a single process. It really depends on the situation. (But, then, I've had lots of experience debugging problems over a long period of time!)<br/><br/>For this one, I first looked for clues in the error message. It was complaining about trying to add the same key twice, and the key was an empty string. Unfortunately, there was no direct code in your game that was adding a dictionary key, which made it more difficult to work out.<br/><br/>Then knowing you had been overriding verbs, I looked at the verbs you created, in Code View. Each verb was very simple - only four fields. And all the fields were empty, So first I reduced them down to empty verbs, with no fields at all (just the verb name). And that worked - no error. So now I had bracketing cases, and I just worked my way in, going back to the failing case and removing fields one by one until I found the one that made it work again. Then I changed the code back to what you had and just set that one field to a non-empty value to prove it was the problem.<br/><br/>I'm not sure if that makes sense or not. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2014-06-03T07:32:17+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29010",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Oh, it totally does. That's what I was thinking too. I just come up with it way too late. Anyways, thanks again.",
      "EditableFormat": "bbcode",
      "HTML": "Oh, it totally does. That's what I was thinking too. I just come up with it way too late. Anyways, thanks again.",
      "PostDate": "2014-06-03T18:46:18+01:00",
      "LastEditDate": null
    }
  ]
}
