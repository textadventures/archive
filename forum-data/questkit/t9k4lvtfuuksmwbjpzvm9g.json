{
  "Topic": {
    "TopicId": "t9k4lvtfuuksmwbjpzvm9g",
    "ForumId": "15",
    "Title": "The Future of Quest?",
    "LastUpdated": "2019-01-12T16:27:18.8340725Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "3b2598c4-b989-49b9-85b5-4ad535d5e434",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have been having a play around with JavaScript, building a new version of Quest. Note that this will not work with existing games, and as yet there is no editor. There definitely will be an editor eventually. There may be a way to convert files from Quest 5, at least to some degree, one day.\r\n\r\nWhat there is at the minute is a framework to create games in JavaScript.\r\n\r\nYou can see an example game here. There is not much in the way of plot, but stuff to interact with to see how the world model feels. Let me know if there is anything important I see to have missed out.\r\nhttp://textadventures.co.uk/games/view/48pkf40on0soigganjtatq/first-steps\r\n\r\n**Why JavaScript?**\r\n\r\nBetter for players\r\n\r\n* No lag between turns\r\n* Game does not time-out\r\n\r\n Better for authors\r\n\r\n* Authors can upload games to their own web site\r\n* Authors are learning/using JavaScript, the computer language of the internet, rather than ASL, which is exclusive to Quest 5.\r\n* Authors can change absolutely anything in the game system; everything is accessible\r\n\r\nBetter for me\r\n\r\n* No need to support legacy games in the app (Quest 5 and the web player both have to support every version of Quest 5, and Quest 4 (and I think all the way back to Quest 1).\r\n* Updates are far easier to publish without legacy support\r\n\r\n**What else?**\r\n\r\nAs I was building this from scratch, I could build in some features from seem lacking or are tricky to implement in Quest 5. The parser has a better idea of context, looking at what objects are where when matching commands, so should be better able to guess what the player means when it is ambiguous.\r\n\r\nAs much as possible is neutral with regards to the character (i.e., works for both the player character and NPCs), making it easy to add commands allowing the player to command an NPC.\r\n\r\nObjects can be in several rooms at once. Countable objects that have specific numbers at different locations are built-in.\r\n\r\n**See more...**\r\n\r\nMore details here, including a tutorial on how to create a game in this framework.\r\nhttps://github.com/ThePix/QuestJS/wiki",
      "EditableFormat": "markdown",
      "HTML": "<p>I have been having a play around with JavaScript, building a new version of Quest. Note that this will not work with existing games, and as yet there is no editor. There definitely will be an editor eventually. There may be a way to convert files from Quest 5, at least to some degree, one day.</p>\n<p>What there is at the minute is a framework to create games in JavaScript.</p>\n<p>You can see an example game here. There is not much in the way of plot, but stuff to interact with to see how the world model feels. Let me know if there is anything important I see to have missed out.<br>\nhttp://textadventures.co.uk/games/view/48pkf40on0soigganjtatq/first-steps</p>\n<p><strong>Why JavaScript?</strong></p>\n<p>Better for players</p>\n<ul>\n<li>No lag between turns</li>\n<li>Game does not time-out</li>\n</ul>\n<p>Better for authors</p>\n<ul>\n<li>Authors can upload games to their own web site</li>\n<li>Authors are learning/using JavaScript, the computer language of the internet, rather than ASL, which is exclusive to Quest 5.</li>\n<li>Authors can change absolutely anything in the game system; everything is accessible</li>\n</ul>\n<p>Better for me</p>\n<ul>\n<li>No need to support legacy games in the app (Quest 5 and the web player both have to support every version of Quest 5, and Quest 4 (and I think all the way back to Quest 1).</li>\n<li>Updates are far easier to publish without legacy support</li>\n</ul>\n<p><strong>What else?</strong></p>\n<p>As I was building this from scratch, I could build in some features from seem lacking or are tricky to implement in Quest 5. The parser has a better idea of context, looking at what objects are where when matching commands, so should be better able to guess what the player means when it is ambiguous.</p>\n<p>As much as possible is neutral with regards to the character (i.e., works for both the player character and NPCs), making it easy to add commands allowing the player to command an NPC.</p>\n<p>Objects can be in several rooms at once. Countable objects that have specific numbers at different locations are built-in.</p>\n<p><strong>See more...</strong></p>\n<p>More details here, including a tutorial on how to create a game in this framework.<br>\nhttps://github.com/ThePix/QuestJS/wiki</p>\n\n",
      "PostDate": "2019-01-12T16:27:18.8340725Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f83ca194-77f8-4d63-895b-02f554c03f8d",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I this is new, from the ground up, can I add an idea...\r\nWhen the script has a get input command, the script stops and waits for the player to answer it?\r\nThis way, there is no need to nest get inputs inside of get input...\r\nIE:\r\nmsg(\"Hello player, what is your name?\")\r\nget input\r\n// script stops waiting for the answer...\r\n\r\nor even:\r\nget input player.alias\r\n\r\nThen you could do this:\r\n// player set-up\r\nmsg (\"Name?\")\r\nget input player.alias\r\nmsg(\"sex: (M/F)\")\r\nget input player.gender\r\nmsg (\"{player.alias}, what is your class? (Fighter, Thief, Cleric, Magic User)\")\r\nget input player.class\r\n\r\ndirect, no nesting, and no need to keep track of how many nests you did...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I this is new, from the ground up, can I add an idea...<br>\nWhen the script has a get input command, the script stops and waits for the player to answer it?<br>\nThis way, there is no need to nest get inputs inside of get input...<br>\nIE:<br>\nmsg(\"Hello player, what is your name?\")<br>\nget input<br>\n// script stops waiting for the answer...</p>\n<p>or even:<br>\nget input player.alias</p>\n<p>Then you could do this:<br>\n// player set-up<br>\nmsg (\"Name?\")<br>\nget input player.alias<br>\nmsg(\"sex: (M/F)\")<br>\nget input player.gender<br>\nmsg (\"{player.alias}, what is your class? (Fighter, Thief, Cleric, Magic User)\")<br>\nget input player.class</p>\n<p>direct, no nesting, and no need to keep track of how many nests you did...</p>\n\n",
      "PostDate": "2019-01-14T04:10:39.5098105Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "68f10403-8680-4507-8233-6b7011c9345e",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That is built-in to JavaScript already, with the `prompt` function.\r\n\r\n```\r\n      msg(\"'What's you name?' she asks.\");\r\n      var name = prompt(\"Your name?\");\r\n      msg(\"'Hi \" + name + \",' she says. 'You're very sweet.'\");\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>That is built-in to JavaScript already, with the <code>prompt</code> function.</p>\n<pre><code>      msg(\"'What's you name?' she asks.\");\n      var name = prompt(\"Your name?\");\n      msg(\"'Hi \" + name + \",' she says. 'You're very sweet.'\");\n</code></pre>\n\n",
      "PostDate": "2019-01-14T10:13:15.996179Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6d734785-58c3-49a8-9a80-c1f869289ba4",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That is what I was suggesting...\r\nAnd not that far from Basic's input command...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>That is what I was suggesting...<br>\nAnd not that far from Basic's input command...</p>\n\n",
      "PostDate": "2019-01-15T19:55:09.3826616Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "abe757c7-894d-4fe5-91f9-ed007592e0e4",
      "UserId": 383686,
      "Username": "myarichuk",
      "AvatarUrl": "https://i.imgur.com/B2r7Dfxb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Couple of thoughts on possible next steps with Quest\r\n* I've been playing with the code base, writing and testing stuff for the last couple of months.\r\nI thought of perhaps implemeting some improvements into how the script language works, but have reached the conclusion that 5.8.0 code base is too interconnected and too complex to refactor and improve - making it much more efficient to do a rewrite from scratch.\r\n* I've been thinking about a good way how something like Quest can be implemented from scratch. I am wondering - have you looked at the possibility of using the [Electron project ](https://electronjs.org/) as UI and self-hosted ASP.Net Core endpoints as actual functionality? (they can be self-hosted using in-process Kestrel server)\r\nAnother potential bonus in such approach - since Electron based apps are essentially websites, it should be relatively easy to implement a web-based player.\r\n\r\nThe Electron project is essentially a Node.js application that hosts border-less browser window with Chromuim as UI engine - it is essentially similar to what Quest 5.8 uses currently so existing UI code can potentially be re-used, and \"backend\" using .Net Core could be leveraged to re-use some parts of existing code.\r\n\r\nI don't have too much free time, so my progress in this is very slow, but I did some testing - it is certainly possible. (Node.js  interop with .Net to start the self-hosted ASP.Net Core server can be made possible by the [Edge](https://github.com/agracio/electron-edge-js) library) ",
      "EditableFormat": "markdown",
      "HTML": "<p>Couple of thoughts on possible next steps with Quest</p>\n<ul>\n<li>I've been playing with the code base, writing and testing stuff for the last couple of months.<br>\nI thought of perhaps implemeting some improvements into how the script language works, but have reached the conclusion that 5.8.0 code base is too interconnected and too complex to refactor and improve - making it much more efficient to do a rewrite from scratch.</li>\n<li>I've been thinking about a good way how something like Quest can be implemented from scratch. I am wondering - have you looked at the possibility of using the <a href=\"https://electronjs.org/\">Electron project </a> as UI and self-hosted ASP.Net Core endpoints as actual functionality? (they can be self-hosted using in-process Kestrel server)<br>\nAnother potential bonus in such approach - since Electron based apps are essentially websites, it should be relatively easy to implement a web-based player.</li>\n</ul>\n<p>The Electron project is essentially a Node.js application that hosts border-less browser window with Chromuim as UI engine - it is essentially similar to what Quest 5.8 uses currently so existing UI code can potentially be re-used, and \"backend\" using .Net Core could be leveraged to re-use some parts of existing code.</p>\n<p>I don't have too much free time, so my progress in this is very slow, but I did some testing - it is certainly possible. (Node.js  interop with .Net to start the self-hosted ASP.Net Core server can be made possible by the <a href=\"https://github.com/agracio/electron-edge-js\">Edge</a> library)</p>\n\n",
      "PostDate": "2019-01-16T09:20:35.9433966Z",
      "LastEditDate": "2019-01-16T09:22:24.8564531Z",
      "link": null
    },
    {
      "PostId": "0d9cc083-259f-42be-becb-65e834f4ac6f",
      "UserId": 924,
      "Username": "Pertex",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4cc1e52f99452e841ecf4cbee9eadde9?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You built all this from scratch in a month and a half? Respect! I am curious how it will develop.",
      "EditableFormat": "markdown",
      "HTML": "<p>You built all this from scratch in a month and a half? Respect! I am curious how it will develop.</p>\n\n",
      "PostDate": "2019-01-16T10:33:30.3145494Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "70b38fe7-e083-4559-84e2-24790962555b",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "myarichuk\r\n\r\nI was looking around for a good framework for the editor, and came across Electron. KV recommended it too. It does look to be the best solution. At the moment I am looking at a desktop system, but that should be cross-platform, if built on Electron. I have very little experience do this sort of stuff on a server, so that will take rather longer...",
      "EditableFormat": "markdown",
      "HTML": "<p>myarichuk</p>\n<p>I was looking around for a good framework for the editor, and came across Electron. KV recommended it too. It does look to be the best solution. At the moment I am looking at a desktop system, but that should be cross-platform, if built on Electron. I have very little experience do this sort of stuff on a server, so that will take rather longer...</p>\n\n",
      "PostDate": "2019-01-16T10:48:23.4202529Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0a48242f-9151-41a4-bc52-1875ac64cce6",
      "UserId": 80376,
      "Username": "H2359",
      "AvatarUrl": "https://secure.gravatar.com/avatar/32a1fa86ee5575a51a6a4e1053b7be58?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": " hi so I’m not sure if my reply to this is posted or not so I’m trying again I am totally blind and play these games I have tried to use the web player but I have found that it is very clunky because when you type in commands the screen reader does not read back what the command is so you have to swipe around on an iPhone to see what the command was  which is what I would like to use to play these games now using quest on the computer works fine but that’s only with the application itself  so what would be nice is to see away in the web player where you could type in a command and then have the screen reader automatically read back the response instead of making you go find it in the history of responses  for example when you type examine cat the player should automatically re-ply  The cat is round and fluffy instead of making you having to swipe left to see the response of the cat is round and fluffy  I hope I explain this well enough but if not let me know and I can try to explain it better ",
      "EditableFormat": "markdown",
      "HTML": "<p>hi so I’m not sure if my reply to this is posted or not so I’m trying again I am totally blind and play these games I have tried to use the web player but I have found that it is very clunky because when you type in commands the screen reader does not read back what the command is so you have to swipe around on an iPhone to see what the command was  which is what I would like to use to play these games now using quest on the computer works fine but that’s only with the application itself  so what would be nice is to see away in the web player where you could type in a command and then have the screen reader automatically read back the response instead of making you go find it in the history of responses  for example when you type examine cat the player should automatically re-ply  The cat is round and fluffy instead of making you having to swipe left to see the response of the cat is round and fluffy  I hope I explain this well enough but if not let me know and I can try to explain it better</p>\n\n",
      "PostDate": "2019-01-18T14:57:41.3848163Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "51e0156e-cc2f-40cc-96bf-ae5416e6bbe0",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So... maybe a text-to-speech option???\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>So... maybe a text-to-speech option???</p>\n\n",
      "PostDate": "2019-01-19T03:53:23.8965699Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5053b3a1-97a1-4ae5-bf7a-2da9be1bfdf4",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "H2359\r\n\r\nI have added a SPOKEN command to the test game, which may help (only tested on Chrome). That said, if you are using a screen reader anyway, it may make it worse, as you may get everything twice.\r\n\r\nhttp://textadventures.co.uk/games/view/48pkf40on0soigganjtatq/first-steps\r\n\r\n\r\nDarkLizerd\r\n\r\nThere is a text-to-speech option in desktop Quest 5 (or at least there is if you have some extra software). H2359 is wanting to use it on the web player, which then has the browser sat in the middle, so it is the text-to-speech in the browser. The problem with the web player I guess is that Quest inserts the response into page, rather than appending it to the end, as it needs to go in before the command bar.",
      "EditableFormat": "markdown",
      "HTML": "<p>H2359</p>\n<p>I have added a SPOKEN command to the test game, which may help (only tested on Chrome). That said, if you are using a screen reader anyway, it may make it worse, as you may get everything twice.</p>\n<p>http://textadventures.co.uk/games/view/48pkf40on0soigganjtatq/first-steps</p>\n<p>DarkLizerd</p>\n<p>There is a text-to-speech option in desktop Quest 5 (or at least there is if you have some extra software). H2359 is wanting to use it on the web player, which then has the browser sat in the middle, so it is the text-to-speech in the browser. The problem with the web player I guess is that Quest inserts the response into page, rather than appending it to the end, as it needs to go in before the command bar.</p>\n\n",
      "PostDate": "2019-01-19T14:18:20.0897437Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7554c3c8-3354-491b-a9e5-622dff4624fd",
      "UserId": 80376,
      "Username": "H2359",
      "AvatarUrl": "https://secure.gravatar.com/avatar/32a1fa86ee5575a51a6a4e1053b7be58?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": " yeah I would rather play it on my iPhone then to use the computer because I don’t use my computer very much at all and if there’s a text to speech thing built into the web player then I have no need to use my screen reader it’s just with the way the web player is right now there’s nothing implemented that I know of to read out responses as you type in the commands  also it would be great to see this be Built where  you could play all games in it including existing ones ",
      "EditableFormat": "markdown",
      "HTML": "<p>yeah I would rather play it on my iPhone then to use the computer because I don’t use my computer very much at all and if there’s a text to speech thing built into the web player then I have no need to use my screen reader it’s just with the way the web player is right now there’s nothing implemented that I know of to read out responses as you type in the commands  also it would be great to see this be Built where  you could play all games in it including existing ones</p>\n\n",
      "PostDate": "2019-01-24T14:51:41.4056777Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "64163f1f-491b-487b-b695-a052a2831e49",
      "UserId": 80376,
      "Username": "H2359",
      "AvatarUrl": "https://secure.gravatar.com/avatar/32a1fa86ee5575a51a6a4e1053b7be58?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": " Also I tried to use the spoken feedback in the game and I tried it on Safari and chrome and when I turn on the spoken mode and try and type in a command still nothing is automatically read out  and this is on an iPhone eights running the latest version of iOS if that helps s",
      "EditableFormat": "markdown",
      "HTML": "<p>Also I tried to use the spoken feedback in the game and I tried it on Safari and chrome and when I turn on the spoken mode and try and type in a command still nothing is automatically read out  and this is on an iPhone eights running the latest version of iOS if that helps s</p>\n\n",
      "PostDate": "2019-01-24T15:06:56.8026003Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4851ce30-5aeb-4140-916e-db7ec0e8629b",
      "UserId": 25543,
      "Username": "Silver",
      "AvatarUrl": "https://i.imgur.com/LMGdoqRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Positive news. Presumably it'll help with the server issues which is rendering larger games unplayable? I like the interface. \r\nI doubt you're looking for bug reports but in case you are it says Turn Script! after every turn and speak to works but talk to doesn't (which is the one listed in the interface). Also it doesn't force the page to scroll downwards meaning it has to be done manually once the page is filled. Good stuff so far though. I probably ought to attempt learning javascript again. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Positive news. Presumably it'll help with the server issues which is rendering larger games unplayable? I like the interface.<br>\nI doubt you're looking for bug reports but in case you are it says Turn Script! after every turn and speak to works but talk to doesn't (which is the one listed in the interface). Also it doesn't force the page to scroll downwards meaning it has to be done manually once the page is filled. Good stuff so far though. I probably ought to attempt learning javascript again.</p>\n\n",
      "PostDate": "2019-01-28T10:21:21.4858312Z",
      "LastEditDate": "2019-01-28T10:22:39.6990254Z",
      "link": null
    },
    {
      "PostId": "4070a534-8272-4304-878d-921a9312b347",
      "UserId": 25543,
      "Username": "Silver",
      "AvatarUrl": "https://i.imgur.com/LMGdoqRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Looking at the tutorial on github, this is the perfect opportunity to help me learn js!",
      "EditableFormat": "markdown",
      "HTML": "<p>Looking at the tutorial on github, this is the perfect opportunity to help me learn js!</p>\n\n",
      "PostDate": "2019-01-28T11:56:26.7531505Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8b88947e-e563-4ba7-91b8-9e05c97599bb",
      "UserId": 363515,
      "Username": "Kernog",
      "AvatarUrl": "https://i.imgur.com/IupEsRDb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I took the liberty to fork the repository, to test and play with this new version of Quest.\r\n\r\nA quick remark about the documentation: for NPC conversation, the verb is currently `talkto`, and not `speakto`\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I took the liberty to fork the repository, to test and play with this new version of Quest.</p>\n<p>A quick remark about the documentation: for NPC conversation, the verb is currently <code>talkto</code>, and not <code>speakto</code></p>\n\n",
      "PostDate": "2019-02-18T15:10:16.2558308Z",
      "LastEditDate": "2019-02-18T15:13:08.2572724Z",
      "link": null
    },
    {
      "PostId": "2a3ff538-7201-40ab-8d7e-86be1dcf3de9",
      "UserId": 363515,
      "Username": "Kernog",
      "AvatarUrl": "https://i.imgur.com/IupEsRDb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've made a few experiments. I like it so far.\r\n\r\nI suggest adding a \"use\" verb in lang.js:\r\n```\r\nconst VERBS = {\r\n  examine:\"Examine\",\r\n  ...\r\n  use: \"Use\",\r\n};\r\n```\r\nand add it in the default list of verbs of the TAKEABLE template. This will allow the player to use an item through links, and ensure that they play as much as possible through hyperlinks (less time to enter a command, more control on player output, less errors due to typos).\r\n\r\n```\r\n//The crystal ball is fixed in place, so I don't want my player to take it, but I would like them to use it\r\ncreateItem(\"crystalBall\",\r\n  TAKEABLE(),\r\n  {\r\n\t\tgetVerbs:function() {\r\n\t\t\treturn [VERBS.examine, VERBS.use];\r\n\t  },\r\n\t\tloc:\"Office\",\r\n\t\tregex:/^ball|crystal ball$/,\r\n\t\tuse:function() {\r\n\t\t\tmsg(\"You use the crystal ball (yay).\");\r\n    },\r\n\t\talias: \"Crystal ball\",\r\n\t}\r\n);\r\n```\r\n\r\nI also suggest adding a chapter on the wiki about editing the verb list of an item (by changing its getVerbs attribute).",
      "EditableFormat": "markdown",
      "HTML": "<p>I've made a few experiments. I like it so far.</p>\n<p>I suggest adding a \"use\" verb in lang.js:</p>\n<pre><code>const VERBS = {\n  examine:\"Examine\",\n  ...\n  use: \"Use\",\n};\n</code></pre>\n<p>and add it in the default list of verbs of the TAKEABLE template. This will allow the player to use an item through links, and ensure that they play as much as possible through hyperlinks (less time to enter a command, more control on player output, less errors due to typos).</p>\n<pre><code>//The crystal ball is fixed in place, so I don't want my player to take it, but I would like them to use it\ncreateItem(\"crystalBall\",\n  TAKEABLE(),\n  {\n\t\tgetVerbs:function() {\n\t\t\treturn [VERBS.examine, VERBS.use];\n\t  },\n\t\tloc:\"Office\",\n\t\tregex:/^ball|crystal ball$/,\n\t\tuse:function() {\n\t\t\tmsg(\"You use the crystal ball (yay).\");\n    },\n\t\talias: \"Crystal ball\",\n\t}\n);\n</code></pre>\n<p>I also suggest adding a chapter on the wiki about editing the verb list of an item (by changing its getVerbs attribute).</p>\n\n",
      "PostDate": "2019-02-21T18:57:47.6958653Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b7ac2fd6-aaa6-4761-8d59-5154fa2bb60b",
      "UserId": 179499,
      "Username": "Sturmjger",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3b9d37ec93b67985cfc8aafe9ed8437c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi all,\r\n\r\nre spoken command: What you're looking for here is <B>ARIA</b>.\r\n\r\nIt is included in the W3C HTML5 standard, so anything starting with `<!DOCTYPE html>` should definitely have access to ARIA. \r\n\r\nHow to use it?\r\n\r\nIf output returned by JS still is in divs, it's ridiculously easy to implement. All you need is add two attributes to the div: `role=\"status\"` and `aria-live=\"polite\"` So, for example:\r\n```<div id=\"output1\" role=\"status\" aria-live=\"polite\">This is the game output...</div>```\r\n\r\nI'll do a small demo.\r\n\r\n```<button onclick=\"document.getElementById('demodiv').innerHTML = '<p>Upon clicking the button, the text gets inserted. At the same time, it gets spoken by any active screenreader.</p>'\">Clic. this button to show demo...</button>```\r\n```<button onclick=\"document.getElementById('demodiv').innerHTML = ''\">Clear the div again.</button>```\r\n```<div id=\"demodiv\" role=\"status\" aria-live=\"polite\"></div>```\r\n\r\nNote that this method has one major drawback: In roundbased fights, the output will come in fast. No issue for speech as due to the polite parameter of aria-live the new messages won't interrupt the screenreader (as opposed to assertive mode). But for braille display users - they're not so lucky, as there's no \"polite\" mode for braille messages. Basically, one message will pop up on the braille display after the other, rapidly, making the unfortunate user incapable of interacting with the site. So make sure there's an option to switch this reporting behaviour off, especially when using round-based fights.\r\n\r\nYours,\r\nSturmjaeger",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi all,</p>\n<p>re spoken command: What you're looking for here is <b>ARIA</b>.</p>\n<p>It is included in the W3C HTML5 standard, so anything starting with <code>&lt;!DOCTYPE html&gt;</code> should definitely have access to ARIA.</p>\n<p>How to use it?</p>\n<p>If output returned by JS still is in divs, it's ridiculously easy to implement. All you need is add two attributes to the div: <code>role=\"status\"</code> and <code>aria-live=\"polite\"</code> So, for example:<br>\n<code>&lt;div id=\"output1\" role=\"status\" aria-live=\"polite\"&gt;This is the game output...&lt;/div&gt;</code></p>\n<p>I'll do a small demo.</p>\n<p><code>&lt;button onclick=\"document.getElementById('demodiv').innerHTML = '&lt;p&gt;Upon clicking the button, the text gets inserted. At the same time, it gets spoken by any active screenreader.&lt;/p&gt;'\"&gt;Clic. this button to show demo...&lt;/button&gt;</code><br>\n<code>&lt;button onclick=\"document.getElementById('demodiv').innerHTML = ''\"&gt;Clear the div again.&lt;/button&gt;</code><br>\n<code>&lt;div id=\"demodiv\" role=\"status\" aria-live=\"polite\"&gt;&lt;/div&gt;</code></p>\n<p>Note that this method has one major drawback: In roundbased fights, the output will come in fast. No issue for speech as due to the polite parameter of aria-live the new messages won't interrupt the screenreader (as opposed to assertive mode). But for braille display users - they're not so lucky, as there's no \"polite\" mode for braille messages. Basically, one message will pop up on the braille display after the other, rapidly, making the unfortunate user incapable of interacting with the site. So make sure there's an option to switch this reporting behaviour off, especially when using round-based fights.</p>\n<p>Yours,<br>\nSturmjaeger</p>\n\n",
      "PostDate": "2019-02-22T23:22:01.5352112Z",
      "LastEditDate": "2019-02-22T23:32:42.0118503Z",
      "link": null
    },
    {
      "PostId": "aed91856-4dc6-4257-9f38-634581ada4a4",
      "UserId": 363515,
      "Username": "Kernog",
      "AvatarUrl": "https://i.imgur.com/IupEsRDb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For other experimenters, here is a  template for a gun, or other kinds of ranged weapons, with basic ammunition management: \r\nhttps://pastebin.com/6zSAJKbb",
      "EditableFormat": "markdown",
      "HTML": "<p>For other experimenters, here is a  template for a gun, or other kinds of ranged weapons, with basic ammunition management:<br>\nhttps://pastebin.com/6zSAJKbb</p>\n\n",
      "PostDate": "2019-02-25T10:10:01.0632918Z",
      "LastEditDate": "2019-02-25T10:11:00.0783618Z",
      "link": null
    },
    {
      "PostId": "573bcec9-2048-44cc-874e-3fb94eca7b34",
      "UserId": 363515,
      "Username": "Kernog",
      "AvatarUrl": "https://i.imgur.com/IupEsRDb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here I am (again), this time with a question.\r\n\r\nIs there a function allowing you to pause the text until the player presses a key. This would be useful for long narration, or to create some suspense:\r\n```\r\nmsg(\"You open the chest, and...\");\r\n//Wait for key\r\nif(this.isMimic){msg(\"The chest comes to life! It's a trap!\")}\r\nelse { msg(\"You found a treasure!\"); }\r\n```\r\nFor now, the only way I found is to use indirectly the `showMenu` function, by offering the player a single choice which is \"continue\".\r\n```\r\nmsg(\"You open the chest, and...\");\r\nshowMenu(\"\", {\"continue\"}, function() {\r\n    if(this.isMimic){msg(\"The chest comes to life! It's a trap!\")}\r\n    else { msg(\"You found a treasure!\");\r\n});\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Here I am (again), this time with a question.</p>\n<p>Is there a function allowing you to pause the text until the player presses a key. This would be useful for long narration, or to create some suspense:</p>\n<pre><code>msg(\"You open the chest, and...\");\n//Wait for key\nif(this.isMimic){msg(\"The chest comes to life! It's a trap!\")}\nelse { msg(\"You found a treasure!\"); }\n</code></pre>\n<p>For now, the only way I found is to use indirectly the <code>showMenu</code> function, by offering the player a single choice which is \"continue\".</p>\n<pre><code>msg(\"You open the chest, and...\");\nshowMenu(\"\", {\"continue\"}, function() {\n    if(this.isMimic){msg(\"The chest comes to life! It's a trap!\")}\n    else { msg(\"You found a treasure!\");\n});\n</code></pre>\n\n",
      "PostDate": "2019-03-04T15:23:05.8833494Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0ae04937-8968-430b-943e-9e2ae306b91b",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Is there a function allowing you to pause the text until the player presses a key. This would be useful for long narration, or to create some suspense:\r\n\r\nNo there is not, and thanks for reminding me; it is something I have realised is going to have to be included. Creating something generic (so can be used with mouse and keyboard, both with a the text box and without, has so far stumped me, but it will happen eventually.\r\n\r\nBy the way, your earlier points have now been added to the code.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Is there a function allowing you to pause the text until the player presses a key. This would be useful for long narration, or to create some suspense:</p>\n</blockquote>\n<p>No there is not, and thanks for reminding me; it is something I have realised is going to have to be included. Creating something generic (so can be used with mouse and keyboard, both with a the text box and without, has so far stumped me, but it will happen eventually.</p>\n<p>By the way, your earlier points have now been added to the code.</p>\n\n",
      "PostDate": "2019-03-04T22:08:57.0791549Z",
      "LastEditDate": "2019-03-04T22:10:09.06202Z",
      "link": null
    },
    {
      "PostId": "cc4d9059-1dce-4205-92e3-12ec8d4db65e",
      "UserId": 363515,
      "Username": "Kernog",
      "AvatarUrl": "https://i.imgur.com/IupEsRDb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks.\r\n\r\nI am having a lot of fun with this framework, even if I am doing my own experiments for the moment, and not a lot of \"pure\" writing. I am already fluent in javascript, so it is much easier for me to work with this than Quest5's UI, or even Inform7's mix of code and full sentences. Having your result displayed instantly without compiling time is also a huge plus.\r\n\r\nI see that you have started tackling the RPG angle. This will be interesting as well.\r\n\r\nIn the meantime, here is another pastebin: https://pastebin.com/GC5a3xDa\r\nI saw that there is only a \"real time\" clock, so I coded for myself a custom clock with a turnscript, and a function to display the time, with a couple of options.\r\nI also added a utilitary function that you could put in your utils, that takes a number and automatically adds \"st\", \"nd\", \"rd\" or \"th\" depending on the number.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks.</p>\n<p>I am having a lot of fun with this framework, even if I am doing my own experiments for the moment, and not a lot of \"pure\" writing. I am already fluent in javascript, so it is much easier for me to work with this than Quest5's UI, or even Inform7's mix of code and full sentences. Having your result displayed instantly without compiling time is also a huge plus.</p>\n<p>I see that you have started tackling the RPG angle. This will be interesting as well.</p>\n<p>In the meantime, here is another pastebin: https://pastebin.com/GC5a3xDa<br>\nI saw that there is only a \"real time\" clock, so I coded for myself a custom clock with a turnscript, and a function to display the time, with a couple of options.<br>\nI also added a utilitary function that you could put in your utils, that takes a number and automatically adds \"st\", \"nd\", \"rd\" or \"th\" depending on the number.</p>\n\n",
      "PostDate": "2019-03-05T11:04:20.8562307Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "252ac6c1-64f6-41c1-8977-285ab73f3aa4",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I saw that there is only a \"real time\" clock, so I coded for myself a custom clock with a turnscript, and a function to display the time, with a couple of options.\r\n\r\nIt is not a real time clock, it uses turnscripts. It does use the built-in JavaScript display functions, however.\r\n\r\n> I also added a utilitary function that you could put in your utils, that takes a number and automatically adds \"st\", \"nd\", \"rd\" or \"th\" depending on the number.\r\n\r\nAlready done that too. It is in lang-en.js, and called `toOrdinal` (though mine gives the word, first, second, third, etc.).",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I saw that there is only a \"real time\" clock, so I coded for myself a custom clock with a turnscript, and a function to display the time, with a couple of options.</p>\n</blockquote>\n<p>It is not a real time clock, it uses turnscripts. It does use the built-in JavaScript display functions, however.</p>\n<blockquote>\n<p>I also added a utilitary function that you could put in your utils, that takes a number and automatically adds \"st\", \"nd\", \"rd\" or \"th\" depending on the number.</p>\n</blockquote>\n<p>Already done that too. It is in lang-en.js, and called <code>toOrdinal</code> (though mine gives the word, first, second, third, etc.).</p>\n\n",
      "PostDate": "2019-03-05T15:58:23.7957004Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ad351582-f92b-4bbc-a806-626033066eb0",
      "UserId": 80376,
      "Username": "H2359",
      "AvatarUrl": "https://secure.gravatar.com/avatar/32a1fa86ee5575a51a6a4e1053b7be58?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": " is this still actively being updated and work done I haven’t seen a post to this thread in a while so it’s why I was wondering s",
      "EditableFormat": "markdown",
      "HTML": "<p>is this still actively being updated and work done I haven’t seen a post to this thread in a while so it’s why I was wondering s</p>\n\n",
      "PostDate": "2019-03-18T13:19:06.851586Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4c285d57-48a1-46a1-8627-74e40f5d0fdf",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes it is. Updates occasionally appear on the GitHub site linked at the bottom of the OP. I am having a go at creating a couple of games in it to see what there is missing. The editor is progressing slowly...",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes it is. Updates occasionally appear on the GitHub site linked at the bottom of the OP. I am having a go at creating a couple of games in it to see what there is missing. The editor is progressing slowly...</p>\n\n",
      "PostDate": "2019-03-18T15:54:30.3012998Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "85de3522-bb1a-4053-88f6-57f6aa5cf21a",
      "UserId": 80376,
      "Username": "H2359",
      "AvatarUrl": "https://secure.gravatar.com/avatar/32a1fa86ee5575a51a6a4e1053b7be58?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": " OK do you know when you would be able to play current games in it  for example games that are already on the site ",
      "EditableFormat": "markdown",
      "HTML": "<p>OK do you know when you would be able to play current games in it  for example games that are already on the site</p>\n\n",
      "PostDate": "2019-03-18T17:23:04.5297996Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7ca7e0ac-9c94-4448-abc6-035a4a5414e5",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It will not be possible to play current games on it, it will not be backwards compatible.\r\n\r\nIt would be possible to play new games on it right now, but without an editor you need at least a passing knowledge of JavaScript to create a game. There is a tutorial to show you how, including how to publish your game.",
      "EditableFormat": "markdown",
      "HTML": "<p>It will not be possible to play current games on it, it will not be backwards compatible.</p>\n<p>It would be possible to play new games on it right now, but without an editor you need at least a passing knowledge of JavaScript to create a game. There is a tutorial to show you how, including how to publish your game.</p>\n\n",
      "PostDate": "2019-03-19T08:48:53.3061385Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bed2a1d3-6d78-40d6-8f3c-ae56bfe1f480",
      "UserId": 80376,
      "Username": "H2359",
      "AvatarUrl": "https://secure.gravatar.com/avatar/32a1fa86ee5575a51a6a4e1053b7be58?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": " oh OK I’m not concerned with building games I’m just more concerned with playing them the way it stands right now the web player is not built for excess ability for blind people lease not that I can tell  inquest on the computer works but there’s no way to stop the speech from talking after making a command  for example when you type in go north the speech player keeps giving room descriptions every time and there’s no way to stop the speech  so that after you’ve already visited a room once it will just say the room name and that’s it ",
      "EditableFormat": "markdown",
      "HTML": "<p>oh OK I’m not concerned with building games I’m just more concerned with playing them the way it stands right now the web player is not built for excess ability for blind people lease not that I can tell  inquest on the computer works but there’s no way to stop the speech from talking after making a command  for example when you type in go north the speech player keeps giving room descriptions every time and there’s no way to stop the speech  so that after you’ve already visited a room once it will just say the room name and that’s it</p>\n\n",
      "PostDate": "2019-03-19T16:27:24.4032117Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b2ec4e34-77ac-43a4-9876-046fe89857aa",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@H2359 Blind people barely use the computer anyway. Some have special computers that read everything out on the screen to them. One of my counselors had one. Anyways, I doubt blind people can feel the literal light coming out of the screen to make a game, or something else, I don't know. Are you blind? All those computers do the read out loud until the end thing.",
      "EditableFormat": "markdown",
      "HTML": "<p>@H2359 Blind people barely use the computer anyway. Some have special computers that read everything out on the screen to them. One of my counselors had one. Anyways, I doubt blind people can feel the literal light coming out of the screen to make a game, or something else, I don't know. Are you blind? All those computers do the read out loud until the end thing.</p>\n\n",
      "PostDate": "2019-03-30T05:05:18.7561368Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "23b2f061-8c84-4699-80af-af303e5c6748",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "jmnevil54, from communications elsewhere, I think H2359 really is blind, and uses a screen reader of some sort.\r\n\r\nI would certainly want games to be playable by as wide an audience as possible, and it does seem particularly suitable with those with impaired vision.",
      "EditableFormat": "markdown",
      "HTML": "<p>jmnevil54, from communications elsewhere, I think H2359 really is blind, and uses a screen reader of some sort.</p>\n<p>I would certainly want games to be playable by as wide an audience as possible, and it does seem particularly suitable with those with impaired vision.</p>\n\n",
      "PostDate": "2019-03-30T08:43:04.8609455Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "511ab080-8b75-443d-bc85-2db3f91bd0b4",
      "UserId": 169472,
      "Username": "Nile",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8269ddb57689c254aea6750f12e2397f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "jmnevil54, what you said is pretty much nonsense. I'm legally deafblind and started using computers at age seven. Blind people heavily rely on computers (and smartphones) for their everyday life, and quite some play text-based games (ask around in Avalon - the legend lives or Alter Aeon...).<br/>Hence, I highly recommend taking blind people seriously. Both as users, and as developers. Regardless of any light (what did you even get at there?)",
      "EditableFormat": "markdown",
      "HTML": "<p>jmnevil54, what you said is pretty much nonsense. I'm legally deafblind and started using computers at age seven. Blind people heavily rely on computers (and smartphones) for their everyday life, and quite some play text-based games (ask around in Avalon - the legend lives or Alter Aeon...).<br>Hence, I highly recommend taking blind people seriously. Both as users, and as developers. Regardless of any light (what did you even get at there?)</p>\n\n",
      "PostDate": "2019-04-20T15:41:06.5559888Z",
      "LastEditDate": "2019-04-20T15:56:34.0133331Z",
      "link": null
    },
    {
      "PostId": "2eb4ac06-2702-4d24-b9af-18e310358985",
      "UserId": 169472,
      "Username": "Nile",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8269ddb57689c254aea6750f12e2397f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Pixie, I've been working with QuestJS for two months now and I absolutely love how customizable it is. Will upload the library (with accessibility improvements) once I'm done.<br/>\r\nOne question though: How can you pass variables to a regex in QuestJS?\r\n```regex:/^me|myself|player|(insert the player's choosen name here...)$/,```\r\nNormally in JavaScript, a regex would be a string, so you could add the variable in quite easily. But Somehow I couldn't figure out how to do this in QuestJS...<br/>\r\nPS. In the Wiki, you should turn this PLAYER into a PLAYER() in tutorial one ;-) Could cause some copy-paste-confusion...",
      "EditableFormat": "markdown",
      "HTML": "<p>Pixie, I've been working with QuestJS for two months now and I absolutely love how customizable it is. Will upload the library (with accessibility improvements) once I'm done.<br><br>\nOne question though: How can you pass variables to a regex in QuestJS?<br>\n<code>regex:/^me|myself|player|(insert the player's choosen name here...)$/,</code><br>\nNormally in JavaScript, a regex would be a string, so you could add the variable in quite easily. But Somehow I couldn't figure out how to do this in QuestJS...<br><br>\nPS. In the Wiki, you should turn this PLAYER into a PLAYER() in tutorial one ;-) Could cause some copy-paste-confusion...</p>\n\n",
      "PostDate": "2019-04-20T16:00:16.3751842Z",
      "LastEditDate": "2019-04-20T16:01:58.6602056Z",
      "link": null
    },
    {
      "PostId": "396e7ed5-b32d-4afa-b6d7-26d79cc4ca35",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi Nile\r\n\r\nIn JavaScript a string is different to a regex, but you can create a regex from a string:\r\n```\r\nregex: new RegExp(\"^me|myself|player|\" + playerName + \"$\"),",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi Nile</p>\n<p>In JavaScript a string is different to a regex, but you can create a regex from a string:</p>\n<pre><code>regex: new RegExp(\"^me|myself|player|\" + playerName + \"$\"),\n</code></pre>\n\n",
      "PostDate": "2019-04-22T16:15:06.4565172Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "dafb39c8-66fc-47f7-9571-8f6426d61bcb",
      "UserId": 169472,
      "Username": "Nile",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8269ddb57689c254aea6750f12e2397f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi, Pixie,<br/>\r\nI tested this thoroughly now and am slightly clueless. If I do the following:<br/>\r\n```createItem(\"me\", PLAYER(), { regex:new RegExp(\"^me|myself|player|\"+this.firstName.toLowerCase()+\"$\"), firstName:\"Joe\", desc:\"To do\", });```<br/>\r\nThe game throws the error that no player object got found; in the console I get the message that \"undefined is not an object\". When I console.log the string I use for the new RegExp, everything looks fine thoug (^me|myself|player|joe$). If I use<br/>\r\n```regex:function() { return new RegExp(\"^me|myself|player|\"+this.firstName.toLowerCase()+\"$\"); },``` <br/>\r\nthe game initializes fine, but once I enter \"look joe\", the command only gets echoed, no action executed, and the text input doesn't get cleared.<br/>\r\n```typeof(this.firstName.toLowerCase())```<br/>\r\nis string. What am I missing?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi, Pixie,<br><br>\nI tested this thoroughly now and am slightly clueless. If I do the following:<br><br>\n<code>createItem(\"me\", PLAYER(), { regex:new RegExp(\"^me|myself|player|\"+this.firstName.toLowerCase()+\"$\"), firstName:\"Joe\", desc:\"To do\", });</code><br><br>\nThe game throws the error that no player object got found; in the console I get the message that \"undefined is not an object\". When I console.log the string I use for the new RegExp, everything looks fine thoug (^me|myself|player|joe$). If I use<br><br>\n<code>regex:function() { return new RegExp(\"^me|myself|player|\"+this.firstName.toLowerCase()+\"$\"); },</code> <br><br>\nthe game initializes fine, but once I enter \"look joe\", the command only gets echoed, no action executed, and the text input doesn't get cleared.<br><br>\n<code>typeof(this.firstName.toLowerCase())</code><br><br>\nis string. What am I missing?</p>\n\n",
      "PostDate": "2019-04-23T12:04:51.1046368Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "30d0033c-4bff-4243-9c77-da287c8b2a40",
      "UserId": 169472,
      "Username": "Nile",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8269ddb57689c254aea6750f12e2397f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay. I <b>think</b> I have figured everything out.<br/>\r\nthe regex property does not execute functions. If you specify a function for regex, the regex will fall back to using the default (for PLAYER(), this is /^me|myself|player$/). I'm not sure why regex doesn't execute functions. I'd have to find out where in the lib the regex property gets defined - I guess I'll get to that in the next days.<br/>\r\nUsing variables in the regex directly doesn't work, as at the time the regex gets evaluated, the properties my variables referred to did not exist yet. It's a subtle difference, but an important one: Functions run each time when needed, so generally aall objects are already created when the function gets called for the first time; but strings, integers, booleans and all the other non-function values get evaluated before the object is fully created. At least that's how I explain my variables always ending up as \"undefined\" when I do the following:<br/>\r\n```regex:new RegExp(\"^me|myself|player|\"+this.firstName),```<br/>\r\nAs a Quick, hacky fix I created the following function:<br/>\r\n```function setRegex(obj, regexString) {```<br/>\r\n```w[obj].regex = new RegExp(regexString);```<br/>\r\n```}```<br/>\r\nYou can call this function whenever you need to change the regex of any object. Just pass it the object.name property as first argument and the string of your regular expression (so quotation marks instead of slashes) as second parameter.<br/>\r\nThis works, but is unpleasantly hacky mn my opinion. Pixie, do you have an idea why setting the regex property to a function doesn't work?<br/>\r\nAlright, that's all from my side ;-) Happy coding/writing y'all.",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay. I <b>think</b> I have figured everything out.<br><br>\nthe regex property does not execute functions. If you specify a function for regex, the regex will fall back to using the default (for PLAYER(), this is /^me|myself|player$/). I'm not sure why regex doesn't execute functions. I'd have to find out where in the lib the regex property gets defined - I guess I'll get to that in the next days.<br><br>\nUsing variables in the regex directly doesn't work, as at the time the regex gets evaluated, the properties my variables referred to did not exist yet. It's a subtle difference, but an important one: Functions run each time when needed, so generally aall objects are already created when the function gets called for the first time; but strings, integers, booleans and all the other non-function values get evaluated before the object is fully created. At least that's how I explain my variables always ending up as \"undefined\" when I do the following:<br><br>\n<code>regex:new RegExp(\"^me|myself|player|\"+this.firstName),</code><br><br>\nAs a Quick, hacky fix I created the following function:<br><br>\n<code>function setRegex(obj, regexString) {</code><br><br>\n<code>w[obj].regex = new RegExp(regexString);</code><br><br>\n<code>}</code><br><br>\nYou can call this function whenever you need to change the regex of any object. Just pass it the object.name property as first argument and the string of your regular expression (so quotation marks instead of slashes) as second parameter.<br><br>\nThis works, but is unpleasantly hacky mn my opinion. Pixie, do you have an idea why setting the regex property to a function doesn't work?<br><br>\nAlright, that's all from my side ;-) Happy coding/writing y'all.</p>\n\n",
      "PostDate": "2019-04-23T20:08:41.8547597Z",
      "LastEditDate": "2019-04-23T20:11:53.821691Z",
      "link": null
    },
    {
      "PostId": "bbfaa4ce-b94a-4a16-9fda-131ab5c1864a",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I would guess `this` is not defined. I cannot see what it would refer to. Which makes it very odd that you got `typeof(this.firstName.toLowerCase())` to work, but maybe te context was different? ",
      "EditableFormat": "markdown",
      "HTML": "<p>I would guess <code>this</code> is not defined. I cannot see what it would refer to. Which makes it very odd that you got <code>typeof(this.firstName.toLowerCase())</code> to work, but maybe te context was different?</p>\n\n",
      "PostDate": "2019-04-23T20:21:26.1101197Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "93675fba-89ae-4770-b06a-3cbba77223b6",
      "UserId": 420406,
      "Username": "Starrigger",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "New to Quest and am really enjoying it. Working on a game I hope to publish shortly. The move to all JS is very exciting to me and I will keep my eye on its development.\r\n\r\nI ran across Blockly a few years back. Might this be of use (or at least an inspiration) in the forthcoming editor UI?\r\n\r\nhttps://developers.google.com/blockly/\r\n\r\nSteve",
      "EditableFormat": "markdown",
      "HTML": "<p>New to Quest and am really enjoying it. Working on a game I hope to publish shortly. The move to all JS is very exciting to me and I will keep my eye on its development.</p>\n<p>I ran across Blockly a few years back. Might this be of use (or at least an inspiration) in the forthcoming editor UI?</p>\n<p>https://developers.google.com/blockly/</p>\n<p>Steve</p>\n\n",
      "PostDate": "2019-06-01T04:53:19.6888089Z",
      "LastEditDate": "2019-06-01T04:57:38.5004294Z",
      "link": null
    },
    {
      "PostId": "f2a4c72b-6a84-4af3-a894-b90f02d3a8f5",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That would be excellent, and I seem to remember someone suggesting it to Alex a long time ago (thanks for reminding me!). How easy it will be to integrate I do not know, but definitely something to try.",
      "EditableFormat": "markdown",
      "HTML": "<p>That would be excellent, and I seem to remember someone suggesting it to Alex a long time ago (thanks for reminding me!). How easy it will be to integrate I do not know, but definitely something to try.</p>\n\n",
      "PostDate": "2019-06-01T07:53:45.4553865Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cbd0acfd-c1a6-4dde-8f45-3f07d3199a70",
      "UserId": 418790,
      "Username": "shooting_star",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a3fdc8cfed6124c2ecfd831c3c730a35?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi,<br>I might have found a \"bug\" -- at least something that isn't quite working as advertised. Let's assume we have a container -- e.g. a wallet -- and want to put countables in it, for example coins. If we create each coin uniquely, and then type TAKE COIN, the coin gets taken from the wallet without complaint (provided the wallet is open). But if I turn this into a countable, I always get the response: \"There's no coins here.\", which has to do with how the COUNTABLE() template processes take. The take is only successful if the coins are in the same room as the player -- but not if they are in a container in the same room, or in a container in the player's inventory.<br>I'll try to find a fix for this, but as I don't fully understand scope yet, I'm not sure I could find a workaround so wanted to put this out there.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi,<br>I might have found a \"bug\" -- at least something that isn't quite working as advertised. Let's assume we have a container -- e.g. a wallet -- and want to put countables in it, for example coins. If we create each coin uniquely, and then type TAKE COIN, the coin gets taken from the wallet without complaint (provided the wallet is open). But if I turn this into a countable, I always get the response: \"There's no coins here.\", which has to do with how the COUNTABLE() template processes take. The take is only successful if the coins are in the same room as the player -- but not if they are in a container in the same room, or in a container in the player's inventory.<br>I'll try to find a fix for this, but as I don't fully understand scope yet, I'm not sure I could find a workaround so wanted to put this out there.</p>\n\n",
      "PostDate": "2019-07-09T05:44:44.808892Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4000f884-9012-471d-9af5-2f4932f2db6e",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks for highlighting that. I am guessing TAKE COINS FROM WALLET works... Hmm, no that fails too, even for a unique coin because there is no such command!\r\n\r\nI have made an update. The fix requiring tweaking the scoping, and the TAKE command as well as adding the extra command.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks for highlighting that. I am guessing TAKE COINS FROM WALLET works... Hmm, no that fails too, even for a unique coin because there is no such command!</p>\n<p>I have made an update. The fix requiring tweaking the scoping, and the TAKE command as well as adding the extra command.</p>\n\n",
      "PostDate": "2019-07-09T08:52:36.4553774Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "346ccb52-9c1c-4720-9ee5-f2b6d4245647",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/HEtnsWqb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Just curious. Has any progress been made to move Quest into HTML or away from Visual Basic? I haven't heard anything from that front in a while. ^_^ Keep up the great work everyone!\r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Just curious. Has any progress been made to move Quest into HTML or away from Visual Basic? I haven't heard anything from that front in a while. ^_^ Keep up the great work everyone!</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2019-07-29T23:51:16.3286145Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8ce9c20a-9552-4170-aa40-ca73d489f519",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It is on-going. The editor is going much slower because it is using two frameworks, React and Electron, that I am not familiar with, so properly understanding them is taking some time. I am also hoping to use Blockly, which again is new, and may not work with React/Electron.\r\n\r\nI have recently changed it so it will read a Quest 5 file, to make conversion easier, but you would still have to modify code by hand to convert that to JavaScript.\r\n\r\nYou can fint it all here:\r\nhttps://github.com/ThePix/QEdit",
      "EditableFormat": "markdown",
      "HTML": "<p>It is on-going. The editor is going much slower because it is using two frameworks, React and Electron, that I am not familiar with, so properly understanding them is taking some time. I am also hoping to use Blockly, which again is new, and may not work with React/Electron.</p>\n<p>I have recently changed it so it will read a Quest 5 file, to make conversion easier, but you would still have to modify code by hand to convert that to JavaScript.</p>\n<p>You can fint it all here:<br>\nhttps://github.com/ThePix/QEdit</p>\n\n",
      "PostDate": "2019-07-30T07:17:45.2618067Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
