{
  "Topic": {
    "TopicId": "kekl9gancekln0bh6yln-w",
    "ForumId": "15",
    "Title": "Addition: Talk to with topics -> Add a custom greeting before the list of topics",
    "LastUpdated": "2020-12-26T11:45:08.3207951Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "0daa5fab-055a-4c67-b367-fba9e52875c7",
      "UserId": 215742,
      "Username": "Kln",
      "AvatarUrl": "https://secure.gravatar.com/avatar/031273026f596d006f35f260c1e95bbf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The title speaks for itself. The aim is to have the NPC greet the player with a message, instead of simply presenting the list of topics. This will help give dialogues some fluff.\r\n**Prerequisite**\r\nAdd a `greeting` property to your NPC. The greeting can be either a string or a function.\r\n```\r\ncreateItem(\"Mark\", NPC(false), {\r\n  loc: \"lounge\",\r\n  properName: true,\r\n  //greeting: \"Hello\"\r\n  greeting: () => {msg(\"Hello\"); msg(\"What can I do for you?\")}\r\n});\r\n```\r\n**Updated npc.talkto**\r\n```\r\nres.talkto = function() {\r\n    if (!game.player.canTalk(this)) {\r\n      return false;\r\n    }\r\n    if (settings.noTalkTo !== false) {\r\n      metamsg(settings.noTalkTo);\r\n      return false;\r\n    }\r\n    \r\n    const topics = this.getTopics(this);\r\n    if (topics.length === 0) return failedmsg(lang.no_topics, {char:game.player, item:this});\r\n\r\n    // If the greeting property is present, we print or run the greeting before the topics\r\n    if (this.greeting) { printOrRun(game.player, this, \"greeting\") }\r\n    \r\n    topics.push(lang.never_mind);\r\n    if (settings.dropdownForConv) {\r\n      showDropDown(lang.speak_to_menu_title(this), topics, function(result) {\r\n        if (result !== lang.never_mind) {\r\n          result.runscript();\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      showMenu(lang.speak_to_menu_title(this), topics, function(result) {\r\n        if (result !== lang.never_mind) {\r\n          result.runscript();\r\n        }\r\n      });\r\n    }\r\n    \r\n    return world.SUCCESS_NO_TURNSCRIPTS;\r\n  };\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>The title speaks for itself. The aim is to have the NPC greet the player with a message, instead of simply presenting the list of topics. This will help give dialogues some fluff.<br>\n<strong>Prerequisite</strong><br>\nAdd a <code>greeting</code> property to your NPC. The greeting can be either a string or a function.</p>\n<pre><code>createItem(\"Mark\", NPC(false), {\n  loc: \"lounge\",\n  properName: true,\n  //greeting: \"Hello\"\n  greeting: () =&gt; {msg(\"Hello\"); msg(\"What can I do for you?\")}\n});\n</code></pre>\n<p><strong>Updated npc.talkto</strong></p>\n<pre><code>res.talkto = function() {\n    if (!game.player.canTalk(this)) {\n      return false;\n    }\n    if (settings.noTalkTo !== false) {\n      metamsg(settings.noTalkTo);\n      return false;\n    }\n    \n    const topics = this.getTopics(this);\n    if (topics.length === 0) return failedmsg(lang.no_topics, {char:game.player, item:this});\n\n    // If the greeting property is present, we print or run the greeting before the topics\n    if (this.greeting) { printOrRun(game.player, this, \"greeting\") }\n    \n    topics.push(lang.never_mind);\n    if (settings.dropdownForConv) {\n      showDropDown(lang.speak_to_menu_title(this), topics, function(result) {\n        if (result !== lang.never_mind) {\n          result.runscript();\n        }\n      });\n    }\n    else {\n      showMenu(lang.speak_to_menu_title(this), topics, function(result) {\n        if (result !== lang.never_mind) {\n          result.runscript();\n        }\n      });\n    }\n    \n    return world.SUCCESS_NO_TURNSCRIPTS;\n  };\n</code></pre>\n\n",
      "PostDate": "2020-12-26T11:45:08.3207951Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
