{
  "Topic": {
    "TopicId": "hsiwbhkde025wgiqqaxrnq",
    "ForumId": "15",
    "Title": "Tip: how to allow your player to attribute stats without inputs",
    "LastUpdated": "2020-12-25T11:13:05.7472278Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "8c2910f6-6054-4169-b5b3-741edbef61b4",
      "UserId": 215742,
      "Username": "Kln",
      "AvatarUrl": "https://secure.gravatar.com/avatar/031273026f596d006f35f260c1e95bbf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I experimented with this method out of curiosity and, while not optimal, it works.\r\nIn the same vein as using the rooms as menus, you can use commands to make your player distribute stats.\r\n\r\n**Prerequisites**\r\nA variable that will be used as a point pool. For instance: `var statPool = 3`\r\nModify this variable whenever you want to give your player points to allocate.\r\n\r\nA function that will do the allocation. Here, the variables are stored in the player object.\r\n```\r\nfunction editStat(statName, isIncrease=true) {\r\n  if (!statName){\r\n     errormsg(\"Stat unknown:\" + statNane);\r\n     return world.FAILED;\r\n  }\r\n\r\n  if (isIncrease) {\r\n    if (statPool == 0) {\r\n      errormsg(\"You do not have any points to allocate\");\r\n      return world.FAILED;\r\n    } else {\r\n      game.player[statName] ++;\r\n      statPool --;\r\n    }\r\n  } else {\r\n    if (game.player[statName] == 1) {\r\n      errormsg(\"You cannot decrease \" + statName + \" further\";\r\n      return world.FAILED;\r\n    } else {\r\n      game.player[statName] --;\r\n      statPool ++;\r\n    }\r\n    game.player.statName --;\r\n  }\r\n\r\n  return world.SUCCESS;\r\n}\r\n```\r\nNote that you can add other conditions, such as the player needing to be in a specific room.\r\n\r\n**Increase command**\r\n```\r\n  new Cmd('Increase', {\r\n    regex:/^(increase) (.+)$/,\r\n    objects:[\r\n      {ignore:true},\r\n      {text:true}\r\n    ],\r\n   script: function(objects) {\r\n     return editStat(objects[0][0]);\r\n   }\r\n  }),\r\n```\r\n**Decrease command**\r\n```\r\n  new Cmd('Decrease', {\r\n    regex:/^(decrease) (.+)$/,\r\n    objects:[\r\n      {ignore:true},\r\n      {text:true}\r\n    ],\r\n   script: function(objects) {\r\n     return editStat(objects[0][0], false);\r\n   }\r\n  }),\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I experimented with this method out of curiosity and, while not optimal, it works.<br>\nIn the same vein as using the rooms as menus, you can use commands to make your player distribute stats.</p>\n<p><strong>Prerequisites</strong><br>\nA variable that will be used as a point pool. For instance: <code>var statPool = 3</code><br>\nModify this variable whenever you want to give your player points to allocate.</p>\n<p>A function that will do the allocation. Here, the variables are stored in the player object.</p>\n<pre><code>function editStat(statName, isIncrease=true) {\n  if (!statName){\n     errormsg(\"Stat unknown:\" + statNane);\n     return world.FAILED;\n  }\n\n  if (isIncrease) {\n    if (statPool == 0) {\n      errormsg(\"You do not have any points to allocate\");\n      return world.FAILED;\n    } else {\n      game.player[statName] ++;\n      statPool --;\n    }\n  } else {\n    if (game.player[statName] == 1) {\n      errormsg(\"You cannot decrease \" + statName + \" further\";\n      return world.FAILED;\n    } else {\n      game.player[statName] --;\n      statPool ++;\n    }\n    game.player.statName --;\n  }\n\n  return world.SUCCESS;\n}\n</code></pre>\n<p>Note that you can add other conditions, such as the player needing to be in a specific room.</p>\n<p><strong>Increase command</strong></p>\n<pre><code>  new Cmd('Increase', {\n    regex:/^(increase) (.+)$/,\n    objects:[\n      {ignore:true},\n      {text:true}\n    ],\n   script: function(objects) {\n     return editStat(objects[0][0]);\n   }\n  }),\n</code></pre>\n<p><strong>Decrease command</strong></p>\n<pre><code>  new Cmd('Decrease', {\n    regex:/^(decrease) (.+)$/,\n    objects:[\n      {ignore:true},\n      {text:true}\n    ],\n   script: function(objects) {\n     return editStat(objects[0][0], false);\n   }\n  }),\n</code></pre>\n\n",
      "PostDate": "2020-12-25T11:13:05.7472278Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
