{
  "Topic": {
    "TopicId": "i8iyvde9_ke_4g7qihzolw",
    "ForumId": "10",
    "Title": "About the JS function \"ASLEvent\"",
    "LastUpdated": "2017-09-04T01:18:01.7875192Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "d4b6eff6-839d-4845-8455-663400d5ae0f",
      "UserId": 282932,
      "Username": "Datomas",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f3a44e6c6939a576a3020d55e816924a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm working on something with Quest that uses JavaScript frequently, with Quest sending values to a JS function and JS functions passing them back to Quest. ASLEvent only being able to take one string parameter functions really limits what I can do with this. Only being able to get a string back means I have to do annoying conversions and type checking, as I'm sending back and forth multiple data types.\r\n\r\nThis, combined with the fact that Quest script processing and JavaScript processing seem to be asynchronous  makes it even harder to work with. For example, if I were to run Quest Function 1 that calls JS Function (that in turn calls another Quest function that sets object attributes), and then call Quest Function 2 the line after, Quest Function 2 would run before or in the middle of the JS  function, causing errors in some situations.\r\n\r\nIt would be nice if there was a more graceful approach to having Quest and JavaScript communicate, because things that should be very simple end up becoming a hassle.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm working on something with Quest that uses JavaScript frequently, with Quest sending values to a JS function and JS functions passing them back to Quest. ASLEvent only being able to take one string parameter functions really limits what I can do with this. Only being able to get a string back means I have to do annoying conversions and type checking, as I'm sending back and forth multiple data types.</p>\n<p>This, combined with the fact that Quest script processing and JavaScript processing seem to be asynchronous  makes it even harder to work with. For example, if I were to run Quest Function 1 that calls JS Function (that in turn calls another Quest function that sets object attributes), and then call Quest Function 2 the line after, Quest Function 2 would run before or in the middle of the JS  function, causing errors in some situations.</p>\n<p>It would be nice if there was a more graceful approach to having Quest and JavaScript communicate, because things that should be very simple end up becoming a hassle.</p>\n\n",
      "PostDate": "2017-09-04T01:18:01.7875192Z",
      "LastEditDate": "2017-09-04T01:38:19.8761466Z",
      "link": null
    }
  ]
}
