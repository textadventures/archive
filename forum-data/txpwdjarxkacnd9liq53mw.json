{
  "Topic": {
    "TopicId": "txpwdjarxkacnd9liq53mw",
    "ForumId": "24",
    "Title": "Passage links in a loop",
    "LastUpdated": "2021-04-15T06:53:52.8905607Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "927fac07-8430-46af-ae94-fc71ccb1ca4b",
      "UserId": 451668,
      "Username": "carlsagan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello again, I have a list of names and a list of links to images, and I would like to use a loop to show them in the screen,\r\n```\r\n    var imgs = [\"img1\", \"img2\", \"img3\"]\r\n    var names = [\"a\", \"b\", \"c\"]\r\n    for (var i = 0; i < imgs.length; i++) \r\n        {\r\n        squiffy.set(\"img\",imgs[i])\r\n        squiffy.set(\"name\",names[i])\r\n        squiffy.story.go(\"pics\");\r\n        }\r\n\r\n[[pics]]:\r\n<p style=\"text-align: center;\">\r\n<img src=\"{img}\" alt=\"{name}\" width=\"100\" height=\"100\">\r\n[[{name}]]</p>\r\n\r\n[[a]]:\r\n\\\\ first link\r\n\r\n[[b]]:\r\n\\\\ second link\r\n\r\n[[c]]:\r\n\\\\ third link\r\n```\r\nBut only the link that was printed last stays, the other ones aren't clickable. Can I do something about this? Or is there a better way to do this?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello again, I have a list of names and a list of links to images, and I would like to use a loop to show them in the screen,</p>\n<pre><code>    var imgs = [\"img1\", \"img2\", \"img3\"]\n    var names = [\"a\", \"b\", \"c\"]\n    for (var i = 0; i &lt; imgs.length; i++) \n        {\n        squiffy.set(\"img\",imgs[i])\n        squiffy.set(\"name\",names[i])\n        squiffy.story.go(\"pics\");\n        }\n\n[[pics]]:\n&lt;p style=\"text-align: center;\"&gt;\n&lt;img src=\"{img}\" alt=\"{name}\" width=\"100\" height=\"100\"&gt;\n[[{name}]]&lt;/p&gt;\n\n[[a]]:\n\\\\ first link\n\n[[b]]:\n\\\\ second link\n\n[[c]]:\n\\\\ third link\n</code></pre>\n<p>But only the link that was printed last stays, the other ones aren't clickable. Can I do something about this? Or is there a better way to do this?</p>\n\n",
      "PostDate": "2021-04-15T06:53:52.8905607Z",
      "LastEditDate": "2021-04-15T07:14:20.764341Z",
      "link": null
    },
    {
      "PostId": "a47bc1f1-a13d-4400-91a7-42ed97b6398f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Your problem is that you're going to a different section. Any time you use `squiffy.story.go`, it disables all links.\r\n\r\nA simple solution might be to use passages instead, which don't clear links:\r\n```\r\n    var imgs = [\"img1\", \"img2\", \"img3\"]\r\n    var names = [\"a\", \"b\", \"c\"]\r\n    for (var i = 0; i < imgs.length; i++) \r\n        {\r\n        squiffy.set(\"img\",imgs[i])\r\n        squiffy.set(\"name\",names[i])\r\n        squiffy.story.passage(\"pics\");\r\n        }\r\n\r\n[pics]:\r\n<p style=\"text-align: center;\">\r\n<img src=\"{img}\" alt=\"{name}\" width=\"100\" height=\"100\">\r\n[[{name}]]</p>\r\n```\r\n\r\nOr you could include the text within the javascript, rather than having a section or passage for it:\r\n```\r\n    var imgs = [\"img1\", \"img2\", \"img3\"]\r\n    var names = [\"a\", \"b\", \"c\"]\r\n    for (var i = 0; i < imgs.length; i++) \r\n        {\r\n        squiffy.set(\"img\",imgs[i])\r\n        squiffy.set(\"name\",names[i])\r\n        squiffy.ui.write('<p style=\"text-align: center;\"> <img src=\"{img}\" alt=\"{name}\" width=\"100\" height=\"100\"> [[{name}]]')\r\n        }\r\n```\r\n\r\nAlthough if you're using two arrays in parallel, it's probably more efficient to store them as an object. This makes it harder to make mistakes if you want to add more to the list later:\r\n```\r\n    var imgs = {a: \"img1\", b: \"img2\", c: \"img3\"}\r\n    $.each(imgs, (name, img) => {\r\n        squiffy.set(\"img\",img)\r\n        squiffy.set(\"name\",name)\r\n        squiffy.ui.write('<p style=\"text-align: center;\"> <img src=\"{img}\" alt=\"{name}\" width=\"100\" height=\"100\"> [[{name}]]')\r\n    });\r\n```\r\n\r\nalthough in this case, there's really no benefit to using the squiffy attributes. You could just do:\r\n```\r\n    var imgs = {a: \"img1\", b: \"img2\", c: \"img3\"}\r\n    $.each(imgs, (name, img) => {\r\n        squiffy.ui.write('<p style=\"text-align: center;\"> <img src=\"' + img + '\" alt=\"' + name + '\" width=\"100\" height=\"100\"> [[' + name + ']]')\r\n    });\r\n```\r\n\r\nOr you could put the different parts together into a single attribute:\r\n```\r\n    var imgs = {a: \"img1\", b: \"img2\", c: \"img3\"}\r\n    squiffy.set(\"imgs\", $.map(imgs, (name, img) => ('<p style=\"text-align: center;\"> <img src=\"' + img + '\" alt=\"' + name + '\" width=\"100\" height=\"100\"> [[' + name + ']]</p>')).join());\r\n\r\n{imgs}\r\n```\r\n\r\nThis is all off the top of my head, so there may be typos in there. But hopefully some of those will prove useful.\r\n\r\n(In general, I might recommend changing `for (var i = 0; i < imgs.length; i++)` to <code style=\"color:green\">for (var i in imgs)</code>, which does the same thing but is generally faster to type.",
      "EditableFormat": "markdown",
      "HTML": "<p>Your problem is that you're going to a different section. Any time you use <code>squiffy.story.go</code>, it disables all links.</p>\n<p>A simple solution might be to use passages instead, which don't clear links:</p>\n<pre><code>    var imgs = [\"img1\", \"img2\", \"img3\"]\n    var names = [\"a\", \"b\", \"c\"]\n    for (var i = 0; i &lt; imgs.length; i++) \n        {\n        squiffy.set(\"img\",imgs[i])\n        squiffy.set(\"name\",names[i])\n        squiffy.story.passage(\"pics\");\n        }\n\n[pics]:\n&lt;p style=\"text-align: center;\"&gt;\n&lt;img src=\"{img}\" alt=\"{name}\" width=\"100\" height=\"100\"&gt;\n[[{name}]]&lt;/p&gt;\n</code></pre>\n<p>Or you could include the text within the javascript, rather than having a section or passage for it:</p>\n<pre><code>    var imgs = [\"img1\", \"img2\", \"img3\"]\n    var names = [\"a\", \"b\", \"c\"]\n    for (var i = 0; i &lt; imgs.length; i++) \n        {\n        squiffy.set(\"img\",imgs[i])\n        squiffy.set(\"name\",names[i])\n        squiffy.ui.write('&lt;p style=\"text-align: center;\"&gt; &lt;img src=\"{img}\" alt=\"{name}\" width=\"100\" height=\"100\"&gt; [[{name}]]')\n        }\n</code></pre>\n<p>Although if you're using two arrays in parallel, it's probably more efficient to store them as an object. This makes it harder to make mistakes if you want to add more to the list later:</p>\n<pre><code>    var imgs = {a: \"img1\", b: \"img2\", c: \"img3\"}\n    $.each(imgs, (name, img) =&gt; {\n        squiffy.set(\"img\",img)\n        squiffy.set(\"name\",name)\n        squiffy.ui.write('&lt;p style=\"text-align: center;\"&gt; &lt;img src=\"{img}\" alt=\"{name}\" width=\"100\" height=\"100\"&gt; [[{name}]]')\n    });\n</code></pre>\n<p>although in this case, there's really no benefit to using the squiffy attributes. You could just do:</p>\n<pre><code>    var imgs = {a: \"img1\", b: \"img2\", c: \"img3\"}\n    $.each(imgs, (name, img) =&gt; {\n        squiffy.ui.write('&lt;p style=\"text-align: center;\"&gt; &lt;img src=\"' + img + '\" alt=\"' + name + '\" width=\"100\" height=\"100\"&gt; [[' + name + ']]')\n    });\n</code></pre>\n<p>Or you could put the different parts together into a single attribute:</p>\n<pre><code>    var imgs = {a: \"img1\", b: \"img2\", c: \"img3\"}\n    squiffy.set(\"imgs\", $.map(imgs, (name, img) =&gt; ('&lt;p style=\"text-align: center;\"&gt; &lt;img src=\"' + img + '\" alt=\"' + name + '\" width=\"100\" height=\"100\"&gt; [[' + name + ']]&lt;/p&gt;')).join());\n\n{imgs}\n</code></pre>\n<p>This is all off the top of my head, so there may be typos in there. But hopefully some of those will prove useful.</p>\n<p>(In general, I might recommend changing <code>for (var i = 0; i &lt; imgs.length; i++)</code> to <code style=\"color: green\">for (var i in imgs)</code>, which does the same thing but is generally faster to type.</p>\n\n",
      "PostDate": "2021-04-15T09:24:56.3203728Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "64db6f7a-2c1f-4c8f-aa78-910989d9f09c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(actually, if you're going for maximum efficiency then creating elements on the DOM might turn out faster than creating an HTML string and parsing it. I'm not sure)\r\n\r\n```\r\n    var imgs = {a: \"img1\", b: \"img2\", c: \"img3\"}\r\n    var currentSection = squiffy.ui.output.children('div').last()\r\n    $.each(imgs,\r\n        (name, img) => $('<p>').css('text-align', 'center').append(\r\n            $('<img>', {src: img, alt: name, width: 100, height: 100})\r\n        ).append(\r\n            squiffy.ui.processText('[['+name+']]')\r\n        ).appendTo(currentSection)\r\n    );\r\n```\r\nI find this easier to read, but that's because I've got more experience with javascript than with HTML",
      "EditableFormat": "markdown",
      "HTML": "<p>(actually, if you're going for maximum efficiency then creating elements on the DOM might turn out faster than creating an HTML string and parsing it. I'm not sure)</p>\n<pre><code>    var imgs = {a: \"img1\", b: \"img2\", c: \"img3\"}\n    var currentSection = squiffy.ui.output.children('div').last()\n    $.each(imgs,\n        (name, img) =&gt; $('&lt;p&gt;').css('text-align', 'center').append(\n            $('&lt;img&gt;', {src: img, alt: name, width: 100, height: 100})\n        ).append(\n            squiffy.ui.processText('[['+name+']]')\n        ).appendTo(currentSection)\n    );\n</code></pre>\n<p>I find this easier to read, but that's because I've got more experience with javascript than with HTML</p>\n\n",
      "PostDate": "2021-04-15T09:36:13.4137892Z",
      "LastEditDate": "2021-04-15T09:37:07.7431696Z",
      "link": null
    },
    {
      "PostId": "597c6bf1-26df-40a5-8693-0286ad6df359",
      "UserId": 451668,
      "Username": "carlsagan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh, wow,  I tried to use passages but with squiffy.story.go(), I didn't know about squiffy.story.passage(),  the first solution works fine for me. If I find it to be too slow once I add more images to the list I'll definitely try the last one, thanks! \r\n\r\nI tried the second one, but the it isn't generating a link to the sections. Any ideas about that? Using JS only does look more clean.",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh, wow,  I tried to use passages but with squiffy.story.go(), I didn't know about squiffy.story.passage(),  the first solution works fine for me. If I find it to be too slow once I add more images to the list I'll definitely try the last one, thanks!</p>\n<p>I tried the second one, but the it isn't generating a link to the sections. Any ideas about that? Using JS only does look more clean.</p>\n\n",
      "PostDate": "2021-04-15T17:17:29.3112797Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
