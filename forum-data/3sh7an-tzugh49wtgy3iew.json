{
  "Topic": {
    "TopicId": "3sh7an-tzugh49wtgy3iew",
    "ForumId": "10",
    "Title": "help with a script command",
    "LastUpdated": "2020-02-02T06:44:53.9830649Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "200f0c1d-f85e-4882-8fc7-16d2b5a40101",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I was studying some script command examples for the 'cloak of darkness' adventure.\r\n\r\nWhat does this mean?\r\nset variable object parent = expression player \r\n\r\n(It's part of the Wear command)",
      "EditableFormat": "markdown",
      "HTML": "<p>I was studying some script command examples for the 'cloak of darkness' adventure.</p>\n<p>What does this mean?<br>\nset variable object parent = expression player</p>\n<p>(It's part of the Wear command)</p>\n\n",
      "PostDate": "2020-02-02T06:44:53.9830649Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "80a99d94-a7ed-4168-87ff-28e3bf14869b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I assume that's how it appears in the GUI.\r\n\r\nIn code view, that would be:\r\n```\r\nobject.parent = player\r\n```\r\nIt takes the object `object` (which can be either an object named \"object\", or an object which the variable \"object\" refers to), and sets its `parent` attribute to be a reference to the result of the expression `player`.\r\n\r\nIn this case, `player` is probably the name of an object.\r\nSo, that line sets an object's `parent` attribute to be the object named `player`.\r\n\r\n`parent` is a special attribute; it controls where an object is in the world. `parent` will always be the object that another object is inside. So an object's parent could be a room, or a container.\r\n\r\nIn this case, setting `parent` to the player object puts it in your inventory.",
      "EditableFormat": "markdown",
      "HTML": "<p>I assume that's how it appears in the GUI.</p>\n<p>In code view, that would be:</p>\n<pre><code>object.parent = player\n</code></pre>\n<p>It takes the object <code>object</code> (which can be either an object named \"object\", or an object which the variable \"object\" refers to), and sets its <code>parent</code> attribute to be a reference to the result of the expression <code>player</code>.</p>\n<p>In this case, <code>player</code> is probably the name of an object.<br>\nSo, that line sets an object's <code>parent</code> attribute to be the object named <code>player</code>.</p>\n<p><code>parent</code> is a special attribute; it controls where an object is in the world. <code>parent</code> will always be the object that another object is inside. So an object's parent could be a room, or a container.</p>\n<p>In this case, setting <code>parent</code> to the player object puts it in your inventory.</p>\n\n",
      "PostDate": "2020-02-02T09:26:45.7473096Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cfacc19e-39c7-4465-a30b-ae04ee35217f",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is the script command of my example. (I removed the \"<\" character so it would print).\r\n\r\ncommand name=\"Wear\">\r\n    pattern>put #object# on; wear #object#; put on #object#; don #object#; wear #object#</pattern>\r\n    unresolved>You want to wear what?</unresolved>\r\n    scope>inventory</scope>\r\n    script>\r\n      if (not HasBoolean(object, \"worn\")) {\r\n        msg (\"That's not something you can wear.\")\r\n      }\r\n      else if (object.worn) {\r\n        msg (\"You're already wearing \" + object.article + \".\")\r\n      }\r\n      else {\r\n        msg (\"You put \" + object.article + \" on.\")\r\n        object.parent = player\r\n        object.worn = true\r\n      }\r\n    /script>\r\n  /command>\r\n\r\nIn this case from what I understand if I was to type \"wear hat\" then object.article becomes hat and object.parent becomes hat \r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>This is the script command of my example. (I removed the \"&lt;\" character so it would print).</p>\n<p>command name=\"Wear\"&gt;<br>\npattern&gt;put #object# on; wear #object#; put on #object#; don #object#; wear #object#<br>\nunresolved&gt;You want to wear what?<br>\nscope&gt;inventory<br>\nscript&gt;<br>\nif (not HasBoolean(object, \"worn\")) {<br>\nmsg (\"That's not something you can wear.\")<br>\n}<br>\nelse if (object.worn) {<br>\nmsg (\"You're already wearing \" + object.article + \".\")<br>\n}<br>\nelse {<br>\nmsg (\"You put \" + object.article + \" on.\")<br>\nobject.parent = player<br>\nobject.worn = true<br>\n}<br>\n/script&gt;<br>\n/command&gt;</p>\n<p>In this case from what I understand if I was to type \"wear hat\" then object.article becomes hat and object.parent becomes hat</p>\n\n",
      "PostDate": "2020-02-02T10:22:19.2845635Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a4d7b9f3-3061-4635-bbc7-26f2274686a8",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> In this case from what I understand if I was to type \"wear hat\" then object.article becomes hat and object.parent becomes hat\r\n\r\nNo.\r\nIf the player types \"wear hat\" then `object` is the hat.\r\nAssuming that the hat can be worn, it does 3 things:\r\n\r\n>     msg (\"You put \" + object.article + \" on.\")\r\nThis line generates a message, using the attribute `object.article` (which would be \"it\" or \"them\" depending if the object is plural). So \"wear hat\" would display the response \"You put it on.\" but \"wear shoes\" would result in \"You put them on\".\r\n\r\n`object.article` is used in the message, but it isn't changed.\r\n\r\n>     object.parent = player\r\nThis sets `hat.parent` to `player` (putting the hat in the inventory if it isn't already).\r\n\r\n>     object.worn = true\r\nThis sets the hat's `worn` flag to true.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>In this case from what I understand if I was to type \"wear hat\" then object.article becomes hat and object.parent becomes hat</p>\n</blockquote>\n<p>No.<br>\nIf the player types \"wear hat\" then <code>object</code> is the hat.<br>\nAssuming that the hat can be worn, it does 3 things:</p>\n<blockquote>\n<pre><code>msg (\"You put \" + object.article + \" on.\")\n</code></pre>\n</blockquote>\n<p>This line generates a message, using the attribute <code>object.article</code> (which would be \"it\" or \"them\" depending if the object is plural). So \"wear hat\" would display the response \"You put it on.\" but \"wear shoes\" would result in \"You put them on\".</p>\n<p><code>object.article</code> is used in the message, but it isn't changed.</p>\n<blockquote>\n<pre><code>object.parent = player\n</code></pre>\n</blockquote>\n<p>This sets <code>hat.parent</code> to <code>player</code> (putting the hat in the inventory if it isn't already).</p>\n<blockquote>\n<pre><code>object.worn = true\n</code></pre>\n</blockquote>\n<p>This sets the hat's <code>worn</code> flag to true.</p>\n\n",
      "PostDate": "2020-02-02T12:40:56.4041808Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e9fd6b4d-3ad5-405a-8d72-f4d137959286",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks mrangel.\r\nThat helps to clear up a few things.\r\n\r\nOut of interest as you know Quest very well have you been using Quest for a long time or do you work closely with Quest's creator on Quest?\r\n\r\nBrian",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks mrangel.<br>\nThat helps to clear up a few things.</p>\n<p>Out of interest as you know Quest very well have you been using Quest for a long time or do you work closely with Quest's creator on Quest?</p>\n<p>Brian</p>\n\n",
      "PostDate": "2020-02-03T09:37:08.3703672Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
