{
  "Topic": {
    "TopicId": "lbmx4pid10yo58qdmzf8aq",
    "ForumId": "10",
    "Title": "is there a workaround for showmenu?",
    "LastUpdated": "2022-04-26T19:37:13.1443508Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "2c8efe44-fe09-4561-8f8c-5d36557d090f",
      "UserId": 583976,
      "Username": "Nemec",
      "AvatarUrl": "https://secure.gravatar.com/avatar/02e242f1bf25ef36324ec008681b6d9e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So from what I gathered reading the section on how 'on ready' works, and from my experiments, it seems that you cannot make the game wait for the player's choice for showmenu and it's nested showmenus.  Am I misunderstanding something here?  Is there an alternative that works like showmenu that can be 'on ready' or has a built in 'on ready' like behavior?",
      "EditableFormat": "markdown",
      "HTML": "<p>So from what I gathered reading the section on how 'on ready' works, and from my experiments, it seems that you cannot make the game wait for the player's choice for showmenu and it's nested showmenus.  Am I misunderstanding something here?  Is there an alternative that works like showmenu that can be 'on ready' or has a built in 'on ready' like behavior?</p>\n\n",
      "PostDate": "2022-04-26T19:37:13.1443508Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "af33eac6-1f4c-44c6-97ae-6e2eb02f390f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What do you want it to do?\r\n\r\nIf you want something to happen after a menu selection is made, it would be normal to put it inside the menu's script.\r\n\r\nIn the past, I've suggested putting code in a turnscript as an alternative to wait for a menu being gone:\r\n```\r\nif (not HasScript (game, \"menucallback\")) {\r\n  // do stuff and then set a flag or something to make sure it isn't done more than once\r\n}\r\n```\r\n\r\n(a while back I posted an alternative version of the `ShowMenu` function which would do this if it was called when a menu was already on the screen, so  that each menu appears after the last one has been resolved. But that's quite a complex task)\r\n\r\nTo find the best approach for this situation, we'd probably need more information about what you're actually trying to do.",
      "EditableFormat": "markdown",
      "HTML": "<p>What do you want it to do?</p>\n<p>If you want something to happen after a menu selection is made, it would be normal to put it inside the menu's script.</p>\n<p>In the past, I've suggested putting code in a turnscript as an alternative to wait for a menu being gone:</p>\n<pre><code>if (not HasScript (game, \"menucallback\")) {\n  // do stuff and then set a flag or something to make sure it isn't done more than once\n}\n</code></pre>\n<p>(a while back I posted an alternative version of the <code>ShowMenu</code> function which would do this if it was called when a menu was already on the screen, so  that each menu appears after the last one has been resolved. But that's quite a complex task)</p>\n<p>To find the best approach for this situation, we'd probably need more information about what you're actually trying to do.</p>\n\n",
      "PostDate": "2022-04-26T23:41:19.7699352Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3d4c4daa-61f9-4d07-a202-dc9dfcd69179",
      "UserId": 583976,
      "Username": "Nemec",
      "AvatarUrl": "https://secure.gravatar.com/avatar/02e242f1bf25ef36324ec008681b6d9e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "well the game I am making is a somewhat tactical  turn based rpg.  I do like the idea of having the option to perform actions after the monsters make their turns so I did exploit the showmenu limitations (wait for the wolf, zombie, orc to use their action t approach you THEN push them off the cliff.  However, when the player wishes to push a monster off a cliff before the monster attacks, because it has already reached them, then I need a neat menu that displays all possible exits that can be used.  Unfortunately the menu causes the monsters to attack before the player selects the location they wish to push the monster.\r\n\r\nI will definitely come across this issue again with multi target spells so figuring out a solution would be fantastic and save me a lot of headache.",
      "EditableFormat": "markdown",
      "HTML": "<p>well the game I am making is a somewhat tactical  turn based rpg.  I do like the idea of having the option to perform actions after the monsters make their turns so I did exploit the showmenu limitations (wait for the wolf, zombie, orc to use their action t approach you THEN push them off the cliff.  However, when the player wishes to push a monster off a cliff before the monster attacks, because it has already reached them, then I need a neat menu that displays all possible exits that can be used.  Unfortunately the menu causes the monsters to attack before the player selects the location they wish to push the monster.</p>\n<p>I will definitely come across this issue again with multi target spells so figuring out a solution would be fantastic and save me a lot of headache.</p>\n\n",
      "PostDate": "2022-04-27T03:15:43.4422815Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4323f297-bbb3-4fe3-aca4-bee0bb210c93",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm assuming the monster's turn is a turnscript?\r\n\r\nIn that case, you can call `SuppressTurnscripts()` before displaying a menu. Or have your turnscript check `HasScript (game, \"menucallback\")`, which is true only if a menu is currently displayed.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm assuming the monster's turn is a turnscript?</p>\n<p>In that case, you can call <code>SuppressTurnscripts()</code> before displaying a menu. Or have your turnscript check <code>HasScript (game, \"menucallback\")</code>, which is true only if a menu is currently displayed.</p>\n\n",
      "PostDate": "2022-04-27T05:12:30.2251121Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "802ab015-6281-42a7-9f1e-ee6ad447a7ed",
      "UserId": 583976,
      "Username": "Nemec",
      "AvatarUrl": "https://secure.gravatar.com/avatar/02e242f1bf25ef36324ec008681b6d9e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That seems to work. I used SuppressTurnscripts() in the command push #object# and RunTurnScripts at the end of the if (result = ...) block.  Thanks so much for such a simple, yet elegant, solution!  It even leaves my turnscript uncluttered.",
      "EditableFormat": "markdown",
      "HTML": "<p>That seems to work. I used SuppressTurnscripts() in the command push #object# and RunTurnScripts at the end of the if (result = ...) block.  Thanks so much for such a simple, yet elegant, solution!  It even leaves my turnscript uncluttered.</p>\n\n",
      "PostDate": "2022-04-27T14:07:52.5338458Z",
      "LastEditDate": "2022-04-27T14:19:35.7075307Z",
      "link": null
    },
    {
      "PostId": "996f25cf-5cfe-4217-a48f-40d0467af4da",
      "UserId": 583976,
      "Username": "Nemec",
      "AvatarUrl": "https://secure.gravatar.com/avatar/02e242f1bf25ef36324ec008681b6d9e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is there a way to call a turnscript to run immediately?\r\n\r\nedit: nevermind fixed it. Also sorry I accidently deleted the message as I edited it.  I reposted what you responded to.",
      "EditableFormat": "markdown",
      "HTML": "<p>Is there a way to call a turnscript to run immediately?</p>\n<p>edit: nevermind fixed it. Also sorry I accidently deleted the message as I edited it.  I reposted what you responded to.</p>\n\n",
      "PostDate": "2022-04-27T14:34:24.3654519Z",
      "LastEditDate": "2022-04-27T15:36:35.1269586Z",
      "link": null
    },
    {
      "PostId": "0d0eae06-6861-40a3-aefd-b2f2454e8878",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Is there a way to call a turnscript to run immediately?\r\n\r\nYou could do:\r\n```\r\ndo (some_turnscript, \"script\")\r\n```\r\nA turnscript is an object-like element whose script is stored in its `script` attribute.\r\n\r\n\r\nIf you want to run more than one turnscript at this point, it might be worth looking into how the disambiguation system works; I suspect there's an approach that's closer to how Quest does it internally. I'll try to remember to add a proper answer when I'm not on my phone.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Is there a way to call a turnscript to run immediately?</p>\n</blockquote>\n<p>You could do:</p>\n<pre><code>do (some_turnscript, \"script\")\n</code></pre>\n<p>A turnscript is an object-like element whose script is stored in its <code>script</code> attribute.</p>\n<p>If you want to run more than one turnscript at this point, it might be worth looking into how the disambiguation system works; I suspect there's an approach that's closer to how Quest does it internally. I'll try to remember to add a proper answer when I'm not on my phone.</p>\n\n",
      "PostDate": "2022-04-27T14:55:03.6103218Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bda8bd7c-34d4-4ee5-a938-d9ad5ef471e6",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you want to push an object in a direction, I would make two commands. One would be the single command version; with a pattern like `push #object# to #exit#`. That way, you get both variables and you can handle the action itself. I'd name the command something like `pushto` so it's easy to refer to. And then have a second command, `push #object#`, which would have a script like:\r\n```\r\n// If there are objects that don't need a direction, like \"push button\" or \"push door\", handle them first\r\n// and put the rest of this in an else clause\r\n// maybe check that the object can be pushed, as well\r\n\r\n// Then work out what directions the player is choosing from (change this line if it's not so simple)\r\ncandidates = ScopeExits()\r\n\r\n// And put the command through as if it's an object disambiguation:\r\ngame.disambiguating = true\r\nShowMenu (\"Which way would you like to push it?\", candidates, true) {\r\n  if (TypeOf (result) = \"string\") {\r\n    game.pov.currentcommandpattern = pushto\r\n    AddToResolvedNames (\"exit\", GetObject (result))\r\n  }\r\n}\r\n```\r\nNot 100% sure about this; the changes in 5.8 with `runturnscripts` and `suppressturnscripts` seem to be a bit weird, but I think it should make the turnscripts behave rationally.",
      "EditableFormat": "markdown",
      "HTML": "<p>If you want to push an object in a direction, I would make two commands. One would be the single command version; with a pattern like <code>push #object# to #exit#</code>. That way, you get both variables and you can handle the action itself. I'd name the command something like <code>pushto</code> so it's easy to refer to. And then have a second command, <code>push #object#</code>, which would have a script like:</p>\n<pre><code>// If there are objects that don't need a direction, like \"push button\" or \"push door\", handle them first\n// and put the rest of this in an else clause\n// maybe check that the object can be pushed, as well\n\n// Then work out what directions the player is choosing from (change this line if it's not so simple)\ncandidates = ScopeExits()\n\n// And put the command through as if it's an object disambiguation:\ngame.disambiguating = true\nShowMenu (\"Which way would you like to push it?\", candidates, true) {\n  if (TypeOf (result) = \"string\") {\n    game.pov.currentcommandpattern = pushto\n    AddToResolvedNames (\"exit\", GetObject (result))\n  }\n}\n</code></pre>\n<p>Not 100% sure about this; the changes in 5.8 with <code>runturnscripts</code> and <code>suppressturnscripts</code> seem to be a bit weird, but I think it should make the turnscripts behave rationally.</p>\n\n",
      "PostDate": "2022-04-27T17:06:55.50547Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
