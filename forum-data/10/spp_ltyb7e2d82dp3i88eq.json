{
  "Topic": {
    "TopicId": "spp_ltyb7e2d82dp3i88eq",
    "ForumId": "10",
    "Title": "Changing room desciptions when multiple items are removed",
    "LastUpdated": "2019-10-12T22:03:20.7974594Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "2e431580-a47a-430a-88cd-7290a1a5c233",
      "UserId": 77575,
      "Username": "Juniper200",
      "AvatarUrl": "https://i.imgur.com/mm9Ar3Bb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm working on a section of my game where there are three objects on a table:\r\n\r\n```The workbench serves as storage. On the worktop you see thing1, thing2, and thing3.```\r\n\r\nI read the section on Visible and Scenery Attributes <a href=\"https://docs.textadventures.co.uk/quest/important_attributes.html\">here</a>, and I got this far:\r\n\r\n    The workbench serves as storage. On the worktop you see{if thing1.scenery: thing1, }\r\n    {if thing2.scenery:thing2, }{if thing3.scenery: and thing3}.\r\n\r\nThe problem I'm running into is that I'm getting into all kinds of trouble with stray commas and \"and\" when things are removed or if only one thing remains on the worktop. I thought something from the Better Descriptions section of <a href=\"http://docs.textadventures.co.uk/quest/cloak_of_darkness.html\">Cloak of Darkness</a> might be able to help me, but I don't know if functions are really the way to go here. \r\n\r\nI was going with a basic example here, but the actual workbench description is:\r\n\r\n```The workbench serves as storage. There are a plant mister, some potting soil, and a lighter on the worktop.```\r\n\r\nSo you see it's got an are/is problem depending on the state of the list in addition to the commas and the \"and.\" I'm at a point where I might just rewrite the description if this gives me enough trouble, but I feel like this is a problem I should work out and a solution I should be able to deploy later on if I need it.\r\n\r\nThis is honestly making me a little crazy. I know there has to be a way to do it; I'm hoping someone has some helpful advice for a novice coder who's fairly handy with the GUI.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm working on a section of my game where there are three objects on a table:</p>\n<p><code>The workbench serves as storage. On the worktop you see thing1, thing2, and thing3.</code></p>\n<p>I read the section on Visible and Scenery Attributes <a href=\"https://docs.textadventures.co.uk/quest/important_attributes.html\">here</a>, and I got this far:</p>\n<pre><code>The workbench serves as storage. On the worktop you see{if thing1.scenery: thing1, }\n{if thing2.scenery:thing2, }{if thing3.scenery: and thing3}.\n</code></pre>\n<p>The problem I'm running into is that I'm getting into all kinds of trouble with stray commas and \"and\" when things are removed or if only one thing remains on the worktop. I thought something from the Better Descriptions section of <a href=\"http://docs.textadventures.co.uk/quest/cloak_of_darkness.html\">Cloak of Darkness</a> might be able to help me, but I don't know if functions are really the way to go here.</p>\n<p>I was going with a basic example here, but the actual workbench description is:</p>\n<p><code>The workbench serves as storage. There are a plant mister, some potting soil, and a lighter on the worktop.</code></p>\n<p>So you see it's got an are/is problem depending on the state of the list in addition to the commas and the \"and.\" I'm at a point where I might just rewrite the description if this gives me enough trouble, but I feel like this is a problem I should work out and a solution I should be able to deploy later on if I need it.</p>\n<p>This is honestly making me a little crazy. I know there has to be a way to do it; I'm hoping someone has some helpful advice for a novice coder who's fairly handy with the GUI.</p>\n\n",
      "PostDate": "2019-10-12T22:03:20.7974594Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "77a14a8e-14f2-43a0-a911-f36852a25bf7",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hmm… is the workbench a surface or container that contains those objects?\r\n\r\nCould use either:\r\n```\r\nThe workbench serves as storage. On the worktop you see {=FormatList(FilterByAttribute(GetDirectChildren(workbench),\"scenery\",true),\", \",\", and\", \"nothing\")}.\r\n```\r\nor\r\n```\r\nThe workbench serves as storage. On the worktop you see {=FormatList(GetDirectChildren(workbench),\", \",\", and\", \"nothing\")}.\r\n```\r\n(the former lists all scenery objects on the workbench; the latter all objects on the workbench)\r\n\r\nAnything more complex than that, you'd likely have to create a function for.\r\n\r\nHmm…\r\nif you made a function like this:\r\n```\r\n<function name=\"GetObjectsList\" parameters=\"input\" type=\"objectlist\">\r\n  output = NewObjectList()\r\n  if (TypeOf(input) = \"string\") {\r\n    input = Split (input)\r\n  }\r\n  foreach (name, input) {\r\n    if (TypeOf (name) = \"string\") {\r\n      obj = GetObject (name)\r\n      if (not obj = null) {\r\n        list add (output, obj)\r\n      }\r\n    }\r\n    else if (TypeOf (name) = \"object\") {\r\n      list add (output, object)\r\n    }\r\n  }\r\n  return (output)\r\n</function>\r\n```\r\nthen you could do:\r\n```\r\nThe workbench serves as storage. On the worktop you see {=FormatList(FilterByAttribute(GetObjectsList(\"thing1;thing2;thing3\"),\"scenery\",true),\", \",\", and\", \"nothing\")}.\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Hmm… is the workbench a surface or container that contains those objects?</p>\n<p>Could use either:</p>\n<pre><code>The workbench serves as storage. On the worktop you see {=FormatList(FilterByAttribute(GetDirectChildren(workbench),\"scenery\",true),\", \",\", and\", \"nothing\")}.\n</code></pre>\n<p>or</p>\n<pre><code>The workbench serves as storage. On the worktop you see {=FormatList(GetDirectChildren(workbench),\", \",\", and\", \"nothing\")}.\n</code></pre>\n<p>(the former lists all scenery objects on the workbench; the latter all objects on the workbench)</p>\n<p>Anything more complex than that, you'd likely have to create a function for.</p>\n<p>Hmm…<br>\nif you made a function like this:</p>\n<pre><code>&lt;function name=\"GetObjectsList\" parameters=\"input\" type=\"objectlist\"&gt;\n  output = NewObjectList()\n  if (TypeOf(input) = \"string\") {\n    input = Split (input)\n  }\n  foreach (name, input) {\n    if (TypeOf (name) = \"string\") {\n      obj = GetObject (name)\n      if (not obj = null) {\n        list add (output, obj)\n      }\n    }\n    else if (TypeOf (name) = \"object\") {\n      list add (output, object)\n    }\n  }\n  return (output)\n&lt;/function&gt;\n</code></pre>\n<p>then you could do:</p>\n<pre><code>The workbench serves as storage. On the worktop you see {=FormatList(FilterByAttribute(GetObjectsList(\"thing1;thing2;thing3\"),\"scenery\",true),\", \",\", and\", \"nothing\")}.\n</code></pre>\n\n",
      "PostDate": "2019-10-12T23:14:15.2840665Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "afc42e0a-53fd-4e50-bb6b-13cea0fe1c20",
      "UserId": 77575,
      "Username": "Juniper200",
      "AvatarUrl": "https://i.imgur.com/ps2US7Cb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you! The first and second bits of code work great, and I'll keep the function in mind for when things get more complicated. I appreciate your help!\r\n\r\n**EDIT:** Now that I think about it for a second, is there an advantage to using the function rather than the shorter code blocks? I know the function would be applicable elsewhere, but I'd still have to enter the items on the list manually in the description code, right?",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you! The first and second bits of code work great, and I'll keep the function in mind for when things get more complicated. I appreciate your help!</p>\n<p><strong>EDIT:</strong> Now that I think about it for a second, is there an advantage to using the function rather than the shorter code blocks? I know the function would be applicable elsewhere, but I'd still have to enter the items on the list manually in the description code, right?</p>\n\n",
      "PostDate": "2019-10-13T22:07:11.1021253Z",
      "LastEditDate": "2019-10-13T22:14:40.793529Z",
      "link": null
    },
    {
      "PostId": "3457a712-f3a6-44dc-a3b1-de2f3e5d2264",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Now that I think about it for a second, is there an advantage to using the function rather than the shorter code blocks?\r\n\r\nThe function might be useful if there's any case where you only want it to list a specific set of items. I wasn't sure if that was what you wanted.\r\n\r\nIf I was doing it, I'd probably make a function anyway, because I don't like the way FormatList handles an empty list.\r\nSomething like:\r\n\r\n```\r\n<function name=\"FancyObjectList\" parameters=\"preList, objects, postList, empty\" type=\"string\">\r\n  if (TypeOf (objects) = \"object\") {\r\n    objects = GetDirectChildren (objects)\r\n  }\r\n  if (ListCount (objects) = 0) {\r\n    if (IsDefined (\"empty\") {\r\n      return (empty)\r\n    }\r\n    else {\r\n      return (\"\")\r\n    }\r\n  }\r\n  else {\r\n    return (preList + FormatList (objects, \", \", \" and \", \"\") + postList)\r\n  }\r\n</function>\r\n```\r\n\r\nThen you could do something like:\r\n```\r\nThe workbench serves as storage. {=FancyObjectList(\"On the worktop you see \", FilterByAttribute(GetDirectChildren(workbench),\"scenery\",true), \".\")}\r\n```\r\n(So that if none of the objects are there, it doesn't bother printing \"On the worktop you see nothing.\")\r\n\r\nor\r\n```\r\nThe workbench serves as storage. {=FancyObjectList(\"On the worktop you see \", workbench, \".\", \"You don't see anything interesting among the junk on the bench.\")}\r\n```\r\nso that you can use a more imaginative message for an empty list.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Now that I think about it for a second, is there an advantage to using the function rather than the shorter code blocks?</p>\n</blockquote>\n<p>The function might be useful if there's any case where you only want it to list a specific set of items. I wasn't sure if that was what you wanted.</p>\n<p>If I was doing it, I'd probably make a function anyway, because I don't like the way FormatList handles an empty list.<br>\nSomething like:</p>\n<pre><code>&lt;function name=\"FancyObjectList\" parameters=\"preList, objects, postList, empty\" type=\"string\"&gt;\n  if (TypeOf (objects) = \"object\") {\n    objects = GetDirectChildren (objects)\n  }\n  if (ListCount (objects) = 0) {\n    if (IsDefined (\"empty\") {\n      return (empty)\n    }\n    else {\n      return (\"\")\n    }\n  }\n  else {\n    return (preList + FormatList (objects, \", \", \" and \", \"\") + postList)\n  }\n&lt;/function&gt;\n</code></pre>\n<p>Then you could do something like:</p>\n<pre><code>The workbench serves as storage. {=FancyObjectList(\"On the worktop you see \", FilterByAttribute(GetDirectChildren(workbench),\"scenery\",true), \".\")}\n</code></pre>\n<p>(So that if none of the objects are there, it doesn't bother printing \"On the worktop you see nothing.\")</p>\n<p>or</p>\n<pre><code>The workbench serves as storage. {=FancyObjectList(\"On the worktop you see \", workbench, \".\", \"You don't see anything interesting among the junk on the bench.\")}\n</code></pre>\n<p>so that you can use a more imaginative message for an empty list.</p>\n\n",
      "PostDate": "2019-10-14T08:53:59.6134535Z",
      "LastEditDate": "2019-10-15T17:25:58.9917741Z",
      "link": null
    },
    {
      "PostId": "e4199abb-6a6e-43e8-b4d1-16c662bb50e5",
      "UserId": 77575,
      "Username": "Juniper200",
      "AvatarUrl": "https://i.imgur.com/ps2US7Cb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I see! The results of the new function were what I was really going for, so that's very helpful. Thank you!\r\n\r\nI have to admit, I'm finding it very difficult to solve problems like this on my own. I don't have a programming background, and the solutions turn out to require expertise I just don't have. So I appreciate your help.",
      "EditableFormat": "markdown",
      "HTML": "<p>I see! The results of the new function were what I was really going for, so that's very helpful. Thank you!</p>\n<p>I have to admit, I'm finding it very difficult to solve problems like this on my own. I don't have a programming background, and the solutions turn out to require expertise I just don't have. So I appreciate your help.</p>\n\n",
      "PostDate": "2019-10-15T16:57:05.9241845Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0cd6fcf8-ba6e-4f9a-aa5b-65c6c726e128",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you like the Oxford comma (which I believe is standard in US English), you could add:\r\n```\r\n<function name=\"FancyObjectList\" parameters=\"preList, objects, postList, empty\" type=\"string\">\r\n  if (TypeOf (objects) = \"object\") {\r\n    objects = GetDirectChildren (objects)\r\n  }\r\n  if (ListCount (objects) = 0) {\r\n    if (IsDefined (\"empty\") {\r\n      return (empty)\r\n    }\r\n    else {\r\n      return (\"\")\r\n    }\r\n  }\r\n  else if (ListCount (objects) = 2) {\r\n    return (preList + FormatList (objects, \", \", \" and \", \"\") + postList)\r\n  }\r\n  else {\r\n    return (preList + FormatList (objects, \", \", \", and \", \"\") + postList)\r\n  }\r\n</function>\r\n```\r\n(Because `object1, object2, and object3` has a comma before the \"and\",  but `object1 and object2` doesn't)",
      "EditableFormat": "markdown",
      "HTML": "<p>If you like the Oxford comma (which I believe is standard in US English), you could add:</p>\n<pre><code>&lt;function name=\"FancyObjectList\" parameters=\"preList, objects, postList, empty\" type=\"string\"&gt;\n  if (TypeOf (objects) = \"object\") {\n    objects = GetDirectChildren (objects)\n  }\n  if (ListCount (objects) = 0) {\n    if (IsDefined (\"empty\") {\n      return (empty)\n    }\n    else {\n      return (\"\")\n    }\n  }\n  else if (ListCount (objects) = 2) {\n    return (preList + FormatList (objects, \", \", \" and \", \"\") + postList)\n  }\n  else {\n    return (preList + FormatList (objects, \", \", \", and \", \"\") + postList)\n  }\n&lt;/function&gt;\n</code></pre>\n<p>(Because <code>object1, object2, and object3</code> has a comma before the \"and\",  but <code>object1 and object2</code> doesn't)</p>\n\n",
      "PostDate": "2019-10-15T17:31:03.3091134Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6e35de25-a23e-4c20-bf38-53be9ac89027",
      "UserId": 77575,
      "Username": "Juniper200",
      "AvatarUrl": "https://i.imgur.com/ps2US7Cb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ha! You've hit on a sore subject with my friends and me - I went to journalism school, where they teach you to root out and destroy the Oxford comma wherever you find it. They think I should be using it, and I'm resisting. But it will do their hearts good to know they have leverage over me now! :D",
      "EditableFormat": "markdown",
      "HTML": "<p>Ha! You've hit on a sore subject with my friends and me - I went to journalism school, where they teach you to root out and destroy the Oxford comma wherever you find it. They think I should be using it, and I'm resisting. But it will do their hearts good to know they have leverage over me now! :D</p>\n\n",
      "PostDate": "2019-10-16T11:43:33.7328849Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e7a135c7-d9be-4fd7-af48-0c8b0698fca3",
      "UserId": 77575,
      "Username": "Juniper200",
      "AvatarUrl": "https://i.imgur.com/ps2US7Cb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "First of all, I want to thank you again for all your help, mrangel. I created the function you described in your last post, and put \r\n\r\n    The workbench serves as storage. {=FancyObjectList(\"On the worktop you see \", workbench, \".\", \"You don't see anything interesting among the junk on the bench.\")}\r\n\r\nin the table description. Everything works great throughout removing each object from the workbench and looking to see how the workbench's description changes, but when I `look workbench` after all three objects have been removed, I get\r\n\r\n    Error running script: Missing ')'\r\n    Error running script: Error evaluating expression 'ToString(eval(section))': Object reference not set to an instance of an object. The workbench serves as storage. {=FancyObjectList(\"On the worktop you see \", workbench, \".\", \"You don't see anything interesting among the junk on the bench.\")}\r\n\r\nAccording to the GUI, there's a problem in the `ListCount (objects) = 0` section of the function. I've tried adding `)` in a couple of places where it looked like there might be something open, but no luck. Is there something I'm doing wrong?",
      "EditableFormat": "markdown",
      "HTML": "<p>First of all, I want to thank you again for all your help, mrangel. I created the function you described in your last post, and put</p>\n<pre><code>The workbench serves as storage. {=FancyObjectList(\"On the worktop you see \", workbench, \".\", \"You don't see anything interesting among the junk on the bench.\")}\n</code></pre>\n<p>in the table description. Everything works great throughout removing each object from the workbench and looking to see how the workbench's description changes, but when I <code>look workbench</code> after all three objects have been removed, I get</p>\n<pre><code>Error running script: Missing ')'\nError running script: Error evaluating expression 'ToString(eval(section))': Object reference not set to an instance of an object. The workbench serves as storage. {=FancyObjectList(\"On the worktop you see \", workbench, \".\", \"You don't see anything interesting among the junk on the bench.\")}\n</code></pre>\n<p>According to the GUI, there's a problem in the <code>ListCount (objects) = 0</code> section of the function. I've tried adding <code>)</code> in a couple of places where it looked like there might be something open, but no luck. Is there something I'm doing wrong?</p>\n\n",
      "PostDate": "2019-10-17T11:00:52.7704571Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a846e1f6-8e75-4bfa-ac20-97341188d014",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think this is the error:\r\n`if (IsDefined (\"empty\") {`\r\nblame my careless typing. It should be:\r\n<code style=\"color: green\">if (IsDefined (\"empty\")<b>)</b> {</code>\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I think this is the error:<br>\n<code>if (IsDefined (\"empty\") {</code><br>\nblame my careless typing. It should be:<br>\n<code style=\"color: green\">if (IsDefined (\"empty\")<b>)</b> {</code></p>\n\n",
      "PostDate": "2019-10-17T12:02:26.0303524Z",
      "LastEditDate": "2019-10-17T12:03:56.9759811Z",
      "link": null
    },
    {
      "PostId": "df19a0dd-e5ee-44d7-b013-7bac4a1a2d84",
      "UserId": 77575,
      "Username": "Juniper200",
      "AvatarUrl": "https://i.imgur.com/ps2US7Cb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Worked perfectly! Thanks again!",
      "EditableFormat": "markdown",
      "HTML": "<p>Worked perfectly! Thanks again!</p>\n\n",
      "PostDate": "2019-10-17T23:50:25.5243081Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
