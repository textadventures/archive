{
  "Topic": {
    "TopicId": "4082",
    "ForumId": "10",
    "Title": "How To Create a Library",
    "LastUpdated": "2013-12-28T05:45:01+00:00",
    "ReplyCount": 5
  },
  "Posts": [
    {
      "PostId": "27267",
      "UserId": 0,
      "Username": "TriangleGames",
      "UserAvatar": null,
      "UserGravatar": "134d9e995777da65c5cf8efda551d579",
      "EditableText": "I'm making my own library for the first time, and I think I'm &quot;doing it wrong.&quot;\nI created the whole thing in Quest using the GUI, thinking I could just add the &lt;library&gt;&lt;/library&gt; tags in notepad after I finished it,\nbut it doesn't seem to like that. If it's possible to make it work, I'm assuming I need to remove something from it, or place the tags in a different spot maybe? I [i:m619mlcq]might[/i:m619mlcq] be able to experiment and figure it out, but I thought I'd ask in case anybody else ever has this issue.",
      "EditableFormat": "bbcode",
      "HTML": "I'm making my own library for the first time, and I think I'm &quot;doing it wrong.&quot;<br/>I created the whole thing in Quest using the GUI, thinking I could just add the &lt;library&gt;&lt;/library&gt; tags in notepad after I finished it,<br/>but it doesn't seem to like that. If it's possible to make it work, I'm assuming I need to remove something from it, or place the tags in a different spot maybe? I <span style=\"font-style:italic;\">might</span> be able to experiment and figure it out, but I thought I'd ask in case anybody else ever has this issue.",
      "PostDate": "2013-12-27T18:05:32+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27268",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "A Library File (.aslx):\n\n&lt;library&gt;\n-&gt; // mass of code, everything has to be within the &lt;library&gt;&lt;/library&gt; tags\n&lt;/library\n\nyou probably have to take out these tags too:\n\nA Game File (.aslx):\n\n&lt;asl version=&quot;540&quot;&gt;\n&lt;/asl&gt;\n\n&lt;game name=&quot;blah&quot;&gt;\n-&gt; // and all of these code lines too removed\n&lt;/game&gt;",
      "EditableFormat": "bbcode",
      "HTML": "A Library File (.aslx):<br/><br/>&lt;library&gt;<br/>-&gt; // mass of code, everything has to be within the &lt;library&gt;&lt;/library&gt; tags<br/>&lt;/library<br/><br/>you probably have to take out these tags too:<br/><br/>A Game File (.aslx):<br/><br/>&lt;asl version=&quot;540&quot;&gt;<br/>&lt;/asl&gt;<br/><br/>&lt;game name=&quot;blah&quot;&gt;<br/>-&gt; // and all of these code lines too removed<br/>&lt;/game&gt;",
      "PostDate": "2013-12-27T18:12:27+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27269",
      "UserId": 0,
      "Username": "TriangleGames",
      "UserAvatar": null,
      "UserGravatar": "134d9e995777da65c5cf8efda551d579",
      "EditableText": "That makes sense I guess. Remove anything that defines it as a game file.\nOne other problem I'm going to have then is that I've put custom attributes on the game object.\nWhere might I include these kind of &quot;global attributes&quot; after removing the &lt;game&gt; section?\nCan I just leave them &quot;loose&quot; or will they need to be &quot;attached&quot; to something?",
      "EditableFormat": "bbcode",
      "HTML": "That makes sense I guess. Remove anything that defines it as a game file.<br/>One other problem I'm going to have then is that I've put custom attributes on the game object.<br/>Where might I include these kind of &quot;global attributes&quot; after removing the &lt;game&gt; section?<br/>Can I just leave them &quot;loose&quot; or will they need to be &quot;attached&quot; to something?",
      "PostDate": "2013-12-27T18:19:20+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27270",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "make a new Object (non-room and non-player), but NOT within any Room Object:\n\nhere's an example of it (as a Game File):\n\n[code:2omc3oze]&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot;/&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot;/&gt;\n  &lt;game name=&quot;Testing Game Stuff&quot;&gt;\n    &lt;gameid&gt;d67ec73f-f879-4911-9d88-c02ea527c534&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;string_data_object&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n    // all of my string attributes\n  &lt;/object&gt;\n  &lt;object name=&quot;boolean_data_object&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n    // all of my boolean attributes\n  &lt;/object&gt;\n  &lt;object name=&quot;integer_data_object&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n    // all of my integer attributes\n  &lt;/object&gt;\n  &lt;object name=&quot;double_data_object&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n    // all of my double attributes\n  &lt;/object&gt;\n  &lt;object name=&quot;string_list_data_object&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n    // all of my string list attributes\n  &lt;/object&gt;\n  &lt;object name=&quot;character_data_object&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n    // all of my character attributes\n  &lt;/object&gt;\n  &lt;object name=&quot;equipment_data_object&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n    // all of my equipment attributes\n  &lt;/object&gt;\n  // etc etc etc &quot;data objects&quot;\n&lt;/asl&gt;[/code:2omc3oze]\n-------------\n\nhere's an example of one (my workings on date and time, and etc stuff, lol) of mine:\n\n[code:2omc3oze]&lt;object name=&quot;global_data_object&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n\t&lt;month_string_list type=&quot;simplestringlist&quot;&gt;january;february;march;april;may;june;july;august;september;october;november;december&lt;/month_string_list&gt;\n\t&lt;thirty_one_day_string_list type=&quot;simplestringlist&quot;&gt;1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31&lt;thirty_one_day_string_list&gt;\n    &lt;thirty_day_string_list type=&quot;simplestringlist&quot;&gt;1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30&lt;thirty_day_string_list&gt;\n    &lt;twenty_nine_day_string_list type=&quot;simplestringlist&quot;&gt;1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29&lt;twenty_nine_day_string_list&gt;\n    &lt;twenty_eight_day_string_list type=&quot;simplestringlist&quot;&gt;1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28&lt;twenty_eight_day_string_list&gt;\n\t&lt;gender_string_list type=&quot;simplestringlist&quot;&gt;male;female&lt;/gender_string_list&gt;\n\t&lt;specialization_string_list type=&quot;simplestringlist&quot;&gt;combat;magic;stealth;diplomacy;science&lt;/specialization_string_list&gt;\n\t&lt;maturity_string_list type=&quot;simplestringlist&quot;&gt;baby;child;teen;adult&lt;/maturity_string_list&gt;\n\t&lt;elemental_string_list type=&quot;simplestringlist&quot;&gt;physical;magical;fire;water;air;earth;light;dark;holy;unholy&lt;/elemental_string_list&gt;\n\t&lt;elemental_string_dictionary type=&quot;simplestringdictionary&quot;&gt;physical=magical;magical=physical;fire=water;water=fire;air=earth;earth=air;light=dark;dark=light;holy=unholy;unholy=holy&lt;/elemental_string_dictionary&gt;\n    &lt;season_string_dictionary type=&quot;simplestringdictionary&quot;&gt;january=winter;february=winter;march=spring;april=spring;may=spring;june=summer;july=summer;august=summer;september=autumn;october=autumn;november=autumn;december=winter&lt;season_string_dictionary&gt;\n    &lt;month_string_dictionary type=&quot;simplestringdictionary&quot;&gt;january=1;1=january;february=2;2=february;march=3;3=march;april=4;4=april;may=5;5=may;june=6;6=june;july=7;7=july;august=8;8=august;september=9;9=september;october=10;10=october;november=11;11=november;december=12;12=december&lt;/month_string_dictionary&gt;\n\t&lt;human_string_list type=&quot;simplestringlist&quot;&gt;european;african;asian;american&lt;/human_string_list&gt;\n\t&lt;season_string_list type=&quot;simplestringlist&quot;&gt;winter;spring;summer;autumn&lt;/season_string_list&gt;\n\t&lt;day_string_list type=&quot;simplestringlist&quot;&gt;sunday;monday;tuesday;wednesday;thursday;friday;saturday&lt;day_string_list&gt;\n\t&lt;skin_string_list type=&quot;simplestringlist&quot;&gt;skin;fur;feathers;scales&lt;/skin_string_list&gt;\n\t&lt;old_leap_year_integer type=&quot;int&quot;&gt;2012&lt;/old_leap_year_integer&gt;\n\t&lt;new_leap_year_integer type=&quot;int&quot;&gt;2016&lt;/new_leap_year_integer&gt;\n\t&lt;year_integer type=&quot;int&quot;&gt;2013&lt;/year_integer&gt;\n\t&lt;second_integer type=&quot;int&quot;&gt;0&lt;/second_integer&gt;\n    &lt;minute_integer type=&quot;int&quot;&gt;0&lt;/minute_integer&gt;\n    &lt;hour_integer type=&quot;int&quot;&gt;0&lt;/hour_integer&gt;\n    &lt;day_integer type=&quot;int&quot;&gt;0&lt;/day_integer&gt;\n    &lt;week_integer type=&quot;int&quot;&gt;0&lt;/week_integer&gt;\n    &lt;month_integer type=&quot;int&quot;&gt;0&lt;/month_integer&gt;\n\t&lt;day_string type=&quot;string&quot;&gt;&lt;/day_string&gt;\n    &lt;month_string type=&quot;string&quot;&gt;&lt;/month_string&gt;\n    &lt;season_string type=&quot;string&quot;&gt;&lt;/season_string&gt;\n&lt;/object&gt;[/code:2omc3oze]\n\n----------------------------\n\nhere's a Library Template, that I like to use:\n\n(and along with using notepad++)\n\n[code:2omc3oze]&lt;library&gt;\n\n&lt;!-- Libraries --&gt;\n\n&lt;!-- Templates --&gt;\n\n&lt;!-- Verbs --&gt;\n\n&lt;!-- Commands --&gt;\n\n&lt;!-- Functions --&gt;\n\n&lt;!-- Turnscripts --&gt;\n\n&lt;!-- Timers --&gt;\n\n&lt;!-- Object Types --&gt;\n\n&lt;!-- Attributes --&gt;\n\n&lt;!-- Strings --&gt;\n\n&lt;!-- Booleans --&gt;\n\n&lt;!-- Integers --&gt;\n\n&lt;!-- Doubles --&gt;\n\n&lt;!-- Lists --&gt;\n\n&lt;!-- String Lists --&gt;\n\n&lt;!-- Object Lists --&gt;\n\n&lt;!-- Dictionaries --&gt;\n\n&lt;!-- String Dictionaries --&gt;\n\n&lt;!-- Object Dictionaries --&gt;\n\n&lt;!-- Script Dictionaries --&gt;\n\n&lt;!-- Scripts --&gt;\n\n&lt;!-- Changed Scripts --&gt;\n\n&lt;!-- Inherited --&gt;\n\n&lt;!-- Game Object --&gt;\n\n&lt;!-- Player Objects --&gt;\n\n&lt;!-- Room Objects --&gt;\n\n&lt;!-- Data Objects --&gt;\n\n&lt;!-- Combat System --&gt;\n\n&lt;!-- Equipment System --&gt;\n\n&lt;!-- Magic System --&gt;\n\n&lt;!-- Dialogue System --&gt;\n\n&lt;!-- Game Mechanics --&gt;\n\n&lt;!-- My Own Extra Notes --&gt;\n\n&lt;/library&gt;[/code:2omc3oze]\n\n---------------------------\n\nP.S.\n\njust remember that your &quot;statusattributes&quot; String Dictionaries (your displayment within the game right side pane) must be placed back upon your &quot;game&quot; or &quot;player&quot; Objects for them to work.\n\n--------------------------\n\nP.S.S.\n\nI just use my library file more simply as a &quot;saved document&quot;, where I can just open it up and copy and paste whatever code I want into my game file of the game project that I'm working on.\n\nAs, making library files as &quot;patches&quot; or &quot;expansion packs&quot; to be included within a game, is still beyond my coding ability (I can't code simple and universal but powerful ones like Pixie, Sora, Chase, Jayna, and etc), lol.",
      "EditableFormat": "bbcode",
      "HTML": "make a new Object (non-room and non-player), but NOT within any Room Object:<br/><br/>here's an example of it (as a Game File):<br/><br/><pre><code>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot;/&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot;/&gt;<br/>  &lt;game name=&quot;Testing Game Stuff&quot;&gt;<br/>    &lt;gameid&gt;d67ec73f-f879-4911-9d88-c02ea527c534&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;string_data_object&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>    // all of my string attributes<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;boolean_data_object&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>    // all of my boolean attributes<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;integer_data_object&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>    // all of my integer attributes<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;double_data_object&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>    // all of my double attributes<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;string_list_data_object&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>    // all of my string list attributes<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;character_data_object&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>    // all of my character attributes<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;equipment_data_object&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>    // all of my equipment attributes<br/>  &lt;/object&gt;<br/>  // etc etc etc &quot;data objects&quot;<br/>&lt;/asl&gt;</code></pre><br/>-------------<br/><br/>here's an example of one (my workings on date and time, and etc stuff, lol) of mine:<br/><br/><pre><code>&lt;object name=&quot;global_data_object&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>\t&lt;month_string_list type=&quot;simplestringlist&quot;&gt;january;february;march;april;may;june;july;august;september;october;november;december&lt;/month_string_list&gt;<br/>\t&lt;thirty_one_day_string_list type=&quot;simplestringlist&quot;&gt;1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31&lt;thirty_one_day_string_list&gt;<br/>    &lt;thirty_day_string_list type=&quot;simplestringlist&quot;&gt;1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30&lt;thirty_day_string_list&gt;<br/>    &lt;twenty_nine_day_string_list type=&quot;simplestringlist&quot;&gt;1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29&lt;twenty_nine_day_string_list&gt;<br/>    &lt;twenty_eight_day_string_list type=&quot;simplestringlist&quot;&gt;1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28&lt;twenty_eight_day_string_list&gt;<br/>\t&lt;gender_string_list type=&quot;simplestringlist&quot;&gt;male;female&lt;/gender_string_list&gt;<br/>\t&lt;specialization_string_list type=&quot;simplestringlist&quot;&gt;combat;magic;stealth;diplomacy;science&lt;/specialization_string_list&gt;<br/>\t&lt;maturity_string_list type=&quot;simplestringlist&quot;&gt;baby;child;teen;adult&lt;/maturity_string_list&gt;<br/>\t&lt;elemental_string_list type=&quot;simplestringlist&quot;&gt;physical;magical;fire;water;air;earth;light;dark;holy;unholy&lt;/elemental_string_list&gt;<br/>\t&lt;elemental_string_dictionary type=&quot;simplestringdictionary&quot;&gt;physical=magical;magical=physical;fire=water;water=fire;air=earth;earth=air;light=dark;dark=light;holy=unholy;unholy=holy&lt;/elemental_string_dictionary&gt;<br/>    &lt;season_string_dictionary type=&quot;simplestringdictionary&quot;&gt;january=winter;february=winter;march=spring;april=spring;may=spring;june=summer;july=summer;august=summer;september=autumn;october=autumn;november=autumn;december=winter&lt;season_string_dictionary&gt;<br/>    &lt;month_string_dictionary type=&quot;simplestringdictionary&quot;&gt;january=1;1=january;february=2;2=february;march=3;3=march;april=4;4=april;may=5;5=may;june=6;6=june;july=7;7=july;august=8;8=august;september=9;9=september;october=10;10=october;november=11;11=november;december=12;12=december&lt;/month_string_dictionary&gt;<br/>\t&lt;human_string_list type=&quot;simplestringlist&quot;&gt;european;african;asian;american&lt;/human_string_list&gt;<br/>\t&lt;season_string_list type=&quot;simplestringlist&quot;&gt;winter;spring;summer;autumn&lt;/season_string_list&gt;<br/>\t&lt;day_string_list type=&quot;simplestringlist&quot;&gt;sunday;monday;tuesday;wednesday;thursday;friday;saturday&lt;day_string_list&gt;<br/>\t&lt;skin_string_list type=&quot;simplestringlist&quot;&gt;skin;fur;feathers;scales&lt;/skin_string_list&gt;<br/>\t&lt;old_leap_year_integer type=&quot;int&quot;&gt;2012&lt;/old_leap_year_integer&gt;<br/>\t&lt;new_leap_year_integer type=&quot;int&quot;&gt;2016&lt;/new_leap_year_integer&gt;<br/>\t&lt;year_integer type=&quot;int&quot;&gt;2013&lt;/year_integer&gt;<br/>\t&lt;second_integer type=&quot;int&quot;&gt;0&lt;/second_integer&gt;<br/>    &lt;minute_integer type=&quot;int&quot;&gt;0&lt;/minute_integer&gt;<br/>    &lt;hour_integer type=&quot;int&quot;&gt;0&lt;/hour_integer&gt;<br/>    &lt;day_integer type=&quot;int&quot;&gt;0&lt;/day_integer&gt;<br/>    &lt;week_integer type=&quot;int&quot;&gt;0&lt;/week_integer&gt;<br/>    &lt;month_integer type=&quot;int&quot;&gt;0&lt;/month_integer&gt;<br/>\t&lt;day_string type=&quot;string&quot;&gt;&lt;/day_string&gt;<br/>    &lt;month_string type=&quot;string&quot;&gt;&lt;/month_string&gt;<br/>    &lt;season_string type=&quot;string&quot;&gt;&lt;/season_string&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>----------------------------<br/><br/>here's a Library Template, that I like to use:<br/><br/>(and along with using notepad++)<br/><br/><pre><code>&lt;library&gt;<br/><br/>&lt;!-- Libraries --&gt;<br/><br/>&lt;!-- Templates --&gt;<br/><br/>&lt;!-- Verbs --&gt;<br/><br/>&lt;!-- Commands --&gt;<br/><br/>&lt;!-- Functions --&gt;<br/><br/>&lt;!-- Turnscripts --&gt;<br/><br/>&lt;!-- Timers --&gt;<br/><br/>&lt;!-- Object Types --&gt;<br/><br/>&lt;!-- Attributes --&gt;<br/><br/>&lt;!-- Strings --&gt;<br/><br/>&lt;!-- Booleans --&gt;<br/><br/>&lt;!-- Integers --&gt;<br/><br/>&lt;!-- Doubles --&gt;<br/><br/>&lt;!-- Lists --&gt;<br/><br/>&lt;!-- String Lists --&gt;<br/><br/>&lt;!-- Object Lists --&gt;<br/><br/>&lt;!-- Dictionaries --&gt;<br/><br/>&lt;!-- String Dictionaries --&gt;<br/><br/>&lt;!-- Object Dictionaries --&gt;<br/><br/>&lt;!-- Script Dictionaries --&gt;<br/><br/>&lt;!-- Scripts --&gt;<br/><br/>&lt;!-- Changed Scripts --&gt;<br/><br/>&lt;!-- Inherited --&gt;<br/><br/>&lt;!-- Game Object --&gt;<br/><br/>&lt;!-- Player Objects --&gt;<br/><br/>&lt;!-- Room Objects --&gt;<br/><br/>&lt;!-- Data Objects --&gt;<br/><br/>&lt;!-- Combat System --&gt;<br/><br/>&lt;!-- Equipment System --&gt;<br/><br/>&lt;!-- Magic System --&gt;<br/><br/>&lt;!-- Dialogue System --&gt;<br/><br/>&lt;!-- Game Mechanics --&gt;<br/><br/>&lt;!-- My Own Extra Notes --&gt;<br/><br/>&lt;/library&gt;</code></pre><br/><br/>---------------------------<br/><br/>P.S.<br/><br/>just remember that your &quot;statusattributes&quot; String Dictionaries (your displayment within the game right side pane) must be placed back upon your &quot;game&quot; or &quot;player&quot; Objects for them to work.<br/><br/>--------------------------<br/><br/>P.S.S.<br/><br/>I just use my library file more simply as a &quot;saved document&quot;, where I can just open it up and copy and paste whatever code I want into my game file of the game project that I'm working on.<br/><br/>As, making library files as &quot;patches&quot; or &quot;expansion packs&quot; to be included within a game, is still beyond my coding ability (I can't code simple and universal but powerful ones like Pixie, Sora, Chase, Jayna, and etc), lol.",
      "PostDate": "2013-12-27T18:29:23+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27271",
      "UserId": 0,
      "Username": "TriangleGames",
      "UserAvatar": null,
      "UserGravatar": "134d9e995777da65c5cf8efda551d579",
      "EditableText": "Aha! It works! Thank you so much! I was really afraid I had done all that for nothing. It took me a second to realize I needed to show the library elements in order to find my &quot;briefcase&quot; object with the attributes on it  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->  but everything is looking perfect now.\n\nEDIT:\n[quote=&quot;HegemonKhan&quot;:oporasly]\nP.S.S.\n\nI just use my library file more simply as a &quot;saved document&quot;, where I can just open it up and copy and paste whatever code I want into my game file of the game project that I'm working on.\n\nAs, making library files as &quot;patches&quot; or &quot;expansion packs&quot; to be included within a game, is still beyond my coding ability (I can't code simple and universal but powerful ones like Pixie, Sora, Chase, Jayna, and etc), lol.[/quote:oporasly]\nWell, you just taught me how to make a library in Quest using the GUI and convert it. There's NO WAY I could've made that thing without the GUI. The troubleshooting alone would've confounded me. This way, I was able to just pop over and hit &quot;Play&quot; to test each part at will. I think I will save myself a template file for copying the code into for next time though. That would help with this &quot;conversion&quot; trick.",
      "EditableFormat": "bbcode",
      "HTML": "Aha! It works! Thank you so much! I was really afraid I had done all that for nothing. It took me a second to realize I needed to show the library elements in order to find my &quot;briefcase&quot; object with the attributes on it  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->  but everything is looking perfect now.<br/><br/>EDIT:<br/><blockquote><cite>HegemonKhan wrote:</cite><br/>P.S.S.<br/><br/>I just use my library file more simply as a &quot;saved document&quot;, where I can just open it up and copy and paste whatever code I want into my game file of the game project that I'm working on.<br/><br/>As, making library files as &quot;patches&quot; or &quot;expansion packs&quot; to be included within a game, is still beyond my coding ability (I can't code simple and universal but powerful ones like Pixie, Sora, Chase, Jayna, and etc), lol.</blockquote><br/>Well, you just taught me how to make a library in Quest using the GUI and convert it. There's NO WAY I could've made that thing without the GUI. The troubleshooting alone would've confounded me. This way, I was able to just pop over and hit &quot;Play&quot; to test each part at will. I think I will save myself a template file for copying the code into for next time though. That would help with this &quot;conversion&quot; trick.",
      "PostDate": "2013-12-27T19:13:48+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27280",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "You can also just simply look at others' posted library files, to see what they look like, and work, lol <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->\n\nThe &quot;Libraries and Code Samples&quot; Board~Forum of this site: <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewforum.php?f=18\">viewforum.php?f=18</a><!-- l -->\n\nAlso some Libraries (such as pixie's spell library) are here too: <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/How_to\">http://quest5.net/wiki/How_to</a><!-- m -->\nactually it's quite hidden, lol: <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_Types_and_Tabs_(Advanced\">http://quest5.net/wiki/Using_Types_and_Tabs_(Advanced</a><!-- m -->) &lt;-- (just add the ending &quot;)&quot; in the url, as it gets chopped off for some reason in this post, taking you to the null page)\n(scroll down to the very bottom of the above link to find the 2 files to download)\n\nAnd within the Tutorial as well (I think~ am pretty sure anyways, lol): <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Tutorial\">http://quest5.net/wiki/Tutorial</a><!-- m -->\n\nAnd Lastly, here as well: <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Libraries\">http://quest5.net/wiki/Libraries</a><!-- m -->\n\nAnd, truly truly Lastly (lol): this forum itself, people's threads and posts.\n\n-----------\n\nhere's an example, using Pixie's Spell Library File, a professional level of a Library File (unlike anything I could ever do at least right now, lol):\n\nthe &quot;tab&quot; coding is literally creating (adding more of) the GUI~Editor 's tabs, libraries create new tabs~abilities for using~within the GUI~Editor, to help you craft aspects of your game, and in this example, Pixie's spell library adds a magic system~options~settings~tabs to when you work on your game in the GUI~Editor.\n\nerr, when I copy and pasted this... the spacing and etc got all messed up, Pixie's library isn't actually this badly formated, lol.\n\n[code:vc2bu7nd]&lt;?xml version=&quot;1&#46;0&quot;?&gt; // HK's note&#58; this isn't needed, you don't need to include this code line in your library files, it can be removed in this library file of pixie's too, it's a way to use an online code language checker, to see if the code has any errors (but I just use notepad++ when writing, editing, and troubleshooting my code, lol)\n\n&lt;library&gt;\n\n\n  &lt;!--\n  This library adds a basic magic system to quest&#46; It allows for three types of spells&#58;\n\n  nonattackspell&#58; Instant effect\n  lastingspell&#58; An on-going spell&#46; These last until another spell is cast\n  attackspell&#58; Instant effect, attacking anything of the &quot;monster&quot; type that is not dead\n\n  Attack spells must be of an element, and eight are already set up&#46; Monsters\n  can be assigned to elements too; they will be immune to that element, but take\n  four-fold damage from the opposed element&#46;\n\n  A &quot;Magic&quot; tab is added to the editor to make setting up spells and monsters as easy as possible&#46;\n  --&gt;\n\n  &lt;!--\n  Adding new elements involves a bit of effort&#46; This system requires that elements are added in pairs or opposites,\n  such as fire and frost&#46;\n  1&#46; Create a new type for both elements, named &#91;elemem&#93;_type\n  2&#46; In the data section, the object element_struct needs both elements added to both &quot;elements&quot; and\n      &quot;opposedelements&quot;, and for the latter you need to put them in both ways around (look at existing entries)\n  3&#46; You need to add both elements to the tab, both for &quot;monster&quot; and for &quot;attackspell&quot;&#46; Again, see existing\n      entries&#46;\n  --&gt;\n\n\n  &lt;!-- =================================================== --&gt;\n  &lt;!-- Templates --&gt;\n\n  &lt;!--\n  Using templates makes it easier to convert to other languages, but also for other users to word it how they want it&#46;\n  When templates are in the library that uses them (as here) the way to change the language is to\n  modify the template in the library, so really the only benefit is that all the text is together here&#46;\n  Also modify the default responses in the verbs!\n  --&gt;\n\n  &lt;template name=&quot;Learn&quot;&gt;learn&lt;/template&gt;\n  &lt;template name=&quot;Cast&quot;&gt;cast&lt;/template&gt;\n\n  &lt;template name=&quot;LookDead&quot;&gt;Oh, and it is dead&#46;&lt;/template&gt;\n  &lt;template name=&quot;SpellAlreadyKnown&quot;&gt;Er, you already know that one!&lt;/template&gt;\n  &lt;template name=&quot;SpellNotKnown&quot;&gt;Er, you don't know that one!&lt;/template&gt;\n  &lt;template name=&quot;NoMonstersPresent&quot;&gt;No monsters present&lt;/template&gt;\n\n  &lt;dynamictemplate name=&quot;SpellEnds&quot;&gt;&lt;!&#91;CDATA&#91;&quot;The &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt; spell ends&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;\n  &lt;dynamictemplate name=&quot;SpellCast&quot;&gt;&lt;!&#91;CDATA&#91;&quot;You cast &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt;&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;\n  &lt;dynamictemplate name=&quot;SpellLearnt&quot;&gt;&lt;!&#91;CDATA&#91;&quot;In a process that seems at once unfathomable, and yet familiar, the spell fades away, and you realise you are now able to cast the &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt; spell&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;\n\n\n\n  &lt;!-- =================================================== --&gt;\n  &lt;!-- Verbs --&gt;\n\n  &lt;verb&gt;\n    &lt;property&gt;learn&lt;/property&gt;\n    &lt;pattern&gt;&#91;Learn&#93;&lt;/pattern&gt;\n    &lt;defaultexpression&gt;&quot;You can't learn &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;verb&gt;\n    &lt;property&gt;cast&lt;/property&gt;\n    &lt;pattern&gt;&#91;Cast&#93;&lt;/pattern&gt;\n    &lt;defaultexpression&gt;&quot;You can't cast &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n\n\n  &lt;!-- =================================================== --&gt;\n  &lt;!-- Functions --&gt;\n\n  &lt;!--\n  Handles an attack on the given monster, using the given spell&#46;\n  Monster loses hit points according to the spell's powerrating&#46;\n  If they share an element, then no damage, if elements are opposed, damage is multplied by 4\n  Handles monsters with no elements too, but spell must have an element set&#46;\n  --&gt;\n  &lt;function name=&quot;SpellAttackMonster&quot; parameters=&quot;monster, spell&quot;&gt;&lt;!&#91;CDATA&#91;\n    element = GetElement (monster)\n    handled = False\n    if (not element = Null) {\n      if (DoesInherit (spell, element + &quot;_type&quot;)) {\n        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;ignoreselement)\n        handled = True\n      }\n      if (DoesInherit (spell, StringDictionaryItem (element_struct&#46;opposedelements, element) + &quot;_type&quot;)) {\n        monster&#46;hitpoints = monster&#46;hitpoints -  4 * spell&#46;powerrating\n        handled = True\n        if (monster&#46;hitpoints &gt; 0) {\n          msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;hurtbyelement)\n        }\n        else {\n          msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;deathbyelement)\n          Death (monster)\n        }\n      }\n    }\n\n    if (not handled) {\n      monster&#46;hitpoints = monster&#46;hitpoints -  spell&#46;powerrating\n      if (monster&#46;hitpoints &gt; 0) {\n        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;hurt)\n      }\n      else {\n        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;death)\n        Death (monster)\n      }\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n\n\n  &lt;!--\n  Call this when a spell is cast, to ensure any on-going spells\n  are terminated&#46;\n  --&gt;\n  &lt;function name=&quot;CancelSpell&quot;&gt;&lt;!&#91;CDATA&#91;\n    if (HasObject (player, &quot;currentspell&quot;)) {\n      spell = player&#46;currentspell\n      msg (DynamicTemplate(&quot;SpellEnds&quot;, spell))\n      player&#46;currentspell = null\n      if (HasScript (spell, &quot;terminate&quot;)) {\n        do (spell, &quot;terminate&quot;)\n      }\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n\n\n  &lt;!--\n  Call this when a monster dies for some housekeeping&#46;\n  --&gt;\n  &lt;function name=&quot;Death&quot; parameters=&quot;monster&quot;&gt;&lt;!&#91;CDATA&#91;\n    monster&#46;alias = monster&#46;alias + &quot; (dead)&quot;\n    if (HasString (monster, &quot;lookwhendead&quot;)) {\n      monster&#46;look = monster&#46;lookwhendead\n    }\n    else {\n      monster&#46;look = monster&#46;look + &quot; &#91;LookDead&#93;&quot;\n    }\n    monster&#46;dead = True\n  &#93;&#93;&gt;&lt;/function&gt;\n\n\n  &lt;!--\n  Returns as a string the name of this object's element (or null)&#46;\n  --&gt;\n  &lt;function name=&quot;GetElement&quot; parameters=&quot;obj&quot; type=&quot;string&quot;&gt;&lt;!&#91;CDATA&#91;\n    result = Null\n    foreach (element, element_struct&#46;elements) {\n     type = element + &quot;_type&quot;\n      if (DoesInherit (obj, type)) {\n        result = element\n      }\n    }\n    return (result)\n  &#93;&#93;&gt;&lt;/function&gt;\n\n\n  &lt;!--\n  Describes casting\n  --&gt;\n  &lt;function name=&quot;DescribeCast&quot; parameters=&quot;spell&quot;&gt;&lt;!&#91;CDATA&#91;\n        if (HasString (spell, &quot;description&quot;)) {\n          msg (DynamicTemplate(&quot;SpellCast&quot;, spell) + &quot; &quot; + spell&#46;description)\n        }\n        else {\n          msg (DynamicTemplate(&quot;SpellCast&quot;, spell))\n        }\n  &#93;&#93;&gt;&lt;/function&gt;\n\n\n  &lt;!-- =================================================== --&gt;\n  &lt;!-- Object types --&gt;\n\n  &lt;type name=&quot;spell&quot;&gt;\n    &lt;inventoryverbs type=&quot;list&quot;&gt;Learn&lt;/inventoryverbs&gt;\n    &lt;displayverbs type=&quot;list&quot;&gt;Learn&lt;/displayverbs&gt;\n    &lt;drop type=&quot;boolean&quot;&gt;false&lt;/drop&gt;\n    &lt;take type=&quot;boolean&quot;&gt;false&lt;/take&gt;\n    &lt;usedefaultprefix type=&quot;boolean&quot;&gt;false&lt;/usedefaultprefix&gt;\n    &lt;learn type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n      if (not this&#46;parent = player) {\n        this&#46;parent = player\n        this&#46;inventoryverbs = Split (&quot;Cast&quot;, &quot; &quot;)\n        msg (DynamicTemplate(&quot;SpellLearnt&quot;, this))\n      }\n      else {\n        msg (&quot;&#91;SpellAlreadyKnown&#93;&quot;)\n      }\n    &#93;&#93;&gt;&lt;/learn&gt;\n  &lt;/type&gt;\n\n\n\n  &lt;type name=&quot;attackspell&quot;&gt;\n    &lt;inherit name=&quot;spell&quot;/&gt;\n    &lt;cast type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n      // Check the player has the spell\n      // If so iterate through all objects in the room\n      // Apply attack to those with the monster type that are not dead\n      if (this&#46;parent = player) {\n        DescribeCast (this)\n        flag = False\n        foreach (obj, ScopeVisibleNotHeld ()) {\n          if (DoesInherit (obj, &quot;monster&quot;) and not GetBoolean (obj, &quot;dead&quot;)) {\n            SpellAttackMonster (obj, this)\n            flag = True\n          }\n        }\n        if (not flag) {\n          msg (&quot;&#46;&#46;&#46; &#91;NoMonstersPresent&#93;&quot;)\n        }\n        CancelSpell ()\n      }\n      else {\n        msg (&quot;&#91;SpellNotKnown&#93;&quot;)\n      }\n    &#93;&#93;&gt;&lt;/cast&gt;\n  &lt;/type&gt;\n\n\n  &lt;type name=&quot;nonattackspell&quot;&gt;\n    &lt;inherit name=&quot;spell&quot;/&gt;\n    &lt;cast type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n      if (this&#46;parent = player) {\n        DescribeCast (this)\n        do (this, &quot;spelleffect&quot;)\n        CancelSpell ()\n      }\n      else {\n        msg (&quot;&#91;SpellNotKnown&#93;&quot;)\n      }\n    &#93;&#93;&gt;&lt;/cast&gt;\n  &lt;/type&gt;\n\n\n  &lt;type name=&quot;lastingspell&quot;&gt;\n    &lt;inherit name=&quot;spell&quot;/&gt;\n    &lt;cast type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n      if (this&#46;parent = player) {\n        DescribeCast (this)\n        do (this, &quot;spelleffect&quot;)\n        CancelSpell ()\n        player&#46;currentspell = this\n        player&#46;status = this&#46;status\n      }\n      else {\n        msg (&quot;&#91;SpellNotKnown&#93;&quot;)\n      }\n    &#93;&#93;&gt;&lt;/cast&gt;\n  &lt;/type&gt;\n\n\n  &lt;type name=&quot;fire_type&quot;&gt;\n  &lt;/type&gt;\n\n  &lt;type name=&quot;frost_type&quot;&gt;\n  &lt;/type&gt;\n\n  &lt;type name=&quot;storm_type&quot;&gt;\n  &lt;/type&gt;\n\n  &lt;type name=&quot;earthmight_type&quot;&gt;\n  &lt;/type&gt;\n\n  &lt;type name=&quot;shadow_type&quot;&gt;\n  &lt;/type&gt;\n\n  &lt;type name=&quot;rainbow_type&quot;&gt;\n  &lt;/type&gt;\n\n  &lt;type name=&quot;divine_type&quot;&gt;\n  &lt;/type&gt;\n\n  &lt;type name=&quot;necrotic_type&quot;&gt;\n  &lt;/type&gt;\n\n  &lt;type name=&quot;monster&quot;&gt;\n  &lt;/type&gt;\n\n\n  &lt;!-- =================================================== --&gt;\n  &lt;!-- Data --&gt;\n\n  &lt;!--\n  This is a data store for elements (I call it a &quot;struct&quot; after the keyword in the C programming language)\n  If you add more elements to the name, you need to add them to both lists as well as creating a new type&#46;\n  Note that your new type must end &quot;_type&quot;, but that must not be included on these lists&#46;\n  --&gt;\n  &lt;object name=&quot;element_struct&quot;&gt;\n    &lt;elements type=&quot;list&quot;&gt;fire; frost; storm; earthmight; shadow; rainbow; divine; necrotic&lt;/elements&gt;\n    &lt;opposedelements type=&quot;stringdictionary&quot;&gt;fire = frost;frost = fire;storm = earthmight;earthmight = storm;shadow = rainbow;rainbow = shadow;necrotic = divine;divine=necrotic&lt;/opposedelements&gt;\n  &lt;/object&gt;\n\n\n  &lt;!-- =================================================== --&gt;\n  &lt;!-- Tabs --&gt;\n\n  &lt;tab&gt;\n    &lt;parent&gt;_ObjectEditor&lt;/parent&gt;\n    &lt;caption&gt;Magic&lt;/caption&gt;\n    &lt;mustnotinherit&gt;editor_room; defaultplayer&lt;/mustnotinherit&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;dropdowntypes&lt;/controltype&gt;\n      &lt;caption&gt;Spell type&lt;/caption&gt;\n      &lt;types&gt;*=None; nonattackspell=Non-attack spell; lastingspell=Lasting spell; attackspell=Attack spell; monster=Monster&lt;/types&gt;\n      &lt;width&gt;150&lt;/width&gt;\n    &lt;/control&gt;\n\n\n\n    &lt;control&gt;\n      &lt;controltype&gt;title&lt;/controltype&gt;\n      &lt;caption&gt;Non-Attack Spell&lt;/caption&gt;\n      &lt;mustinherit&gt;nonattackspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Description (optional)&lt;/caption&gt;\n      &lt;attribute&gt;description&lt;/attribute&gt;\n      &lt;mustinherit&gt;nonattackspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;script&lt;/controltype&gt;\n      &lt;caption&gt;Spell effect&lt;/caption&gt;\n      &lt;attribute&gt;spelleffect&lt;/attribute&gt;\n      &lt;mustinherit&gt;nonattackspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n\n\n    &lt;control&gt;\n      &lt;controltype&gt;title&lt;/controltype&gt;\n      &lt;caption&gt;Lasting Spell&lt;/caption&gt;\n      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Description (optional)&lt;/caption&gt;\n      &lt;attribute&gt;description&lt;/attribute&gt;\n      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Status when active&lt;/caption&gt;\n      &lt;attribute&gt;status&lt;/attribute&gt;\n      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;script&lt;/controltype&gt;\n      &lt;caption&gt;Spell effect&lt;/caption&gt;\n      &lt;attribute&gt;spelleffect&lt;/attribute&gt;\n      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;script&lt;/controltype&gt;\n      &lt;caption&gt;Cacel spell effect&lt;/caption&gt;\n      &lt;attribute&gt;terminate&lt;/attribute&gt;\n      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n\n\n    &lt;control&gt;\n      &lt;controltype&gt;title&lt;/controltype&gt;\n      &lt;caption&gt;Attack Spell&lt;/caption&gt;\n      &lt;mustinherit&gt;attackspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;number&lt;/controltype&gt;\n      &lt;caption&gt;Power of attack (1-10)&lt;/caption&gt;\n      &lt;attribute&gt;powerrating&lt;/attribute&gt;\n      &lt;width&gt;100&lt;/width&gt;\n      &lt;mustinherit&gt;attackspell&lt;/mustinherit&gt;\n      &lt;minimum&gt;0&lt;/minimum&gt;\n      &lt;maximum&gt;10&lt;/maximum&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Description (optional)&lt;/caption&gt;\n      &lt;attribute&gt;description&lt;/attribute&gt;\n      &lt;mustinherit&gt;attackspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;dropdowntypes&lt;/controltype&gt;\n      &lt;caption&gt;Element&lt;/caption&gt;\n      &lt;types&gt;*=None; fire_type=Fire; frost_type=Frost; storm_type=Storm; earthmight_type=Earthmight; shadow_type=Shadow; rainbow_type=Rainbow; necrotic_type=Necrotic; divine_type=Divine&lt;/types&gt;\n      &lt;width&gt;150&lt;/width&gt;\n      &lt;mustinherit&gt;attackspell&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n\n\n    &lt;control&gt;\n      &lt;controltype&gt;title&lt;/controltype&gt;\n      &lt;caption&gt;Monster&lt;/caption&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;dropdowntypes&lt;/controltype&gt;\n      &lt;caption&gt;Element&lt;/caption&gt;\n      &lt;types&gt;*=None; fire_type=Fire; frost_type=Frost; storm_type=Storm; earthmight_type=Earthmight; shadow_type=Shadow; rainbow_type=Rainbow; necrotic_type=Necrotic; divine_type=Divine&lt;/types&gt;\n      &lt;width&gt;150&lt;/width&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;number&lt;/controltype&gt;\n      &lt;caption&gt;Hit points&lt;/caption&gt;\n      &lt;attribute&gt;hitpoints&lt;/attribute&gt;\n      &lt;width&gt;100&lt;/width&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n      &lt;minimum&gt;0&lt;/minimum&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Description on injury&lt;/caption&gt;\n      &lt;attribute&gt;hurt&lt;/attribute&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Description on death&lt;/caption&gt;\n      &lt;attribute&gt;death&lt;/attribute&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Description on injury by opposed element&lt;/caption&gt;\n      &lt;attribute&gt;hurtbyelement&lt;/attribute&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Description on death by opposed element&lt;/caption&gt;\n      &lt;attribute&gt;deathbyelement&lt;/attribute&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Description on ignore&lt;/caption&gt;\n      &lt;attribute&gt;ignoreselement&lt;/attribute&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;Look (when dead)&lt;/caption&gt;\n      &lt;attribute&gt;lookwhendead&lt;/attribute&gt;\n      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;\n    &lt;/control&gt;\n\n  &lt;/tab&gt;\n&lt;/library&gt;[/code:vc2bu7nd]",
      "EditableFormat": "bbcode",
      "HTML": "You can also just simply look at others' posted library files, to see what they look like, and work, lol <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) --><br/><br/>The &quot;Libraries and Code Samples&quot; Board~Forum of this site: <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewforum.php?f=18\">viewforum.php?f=18</a><!-- l --><br/><br/>Also some Libraries (such as pixie's spell library) are here too: <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/How_to\">http://quest5.net/wiki/How_to</a><!-- m --><br/>actually it's quite hidden, lol: <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_Types_and_Tabs_(Advanced\">http://quest5.net/wiki/Using_Types_and_Tabs_(Advanced</a><!-- m -->) &lt;-- (just add the ending &quot;)&quot; in the url, as it gets chopped off for some reason in this post, taking you to the null page)<br/>(scroll down to the very bottom of the above link to find the 2 files to download)<br/><br/>And within the Tutorial as well (I think~ am pretty sure anyways, lol): <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Tutorial\">http://quest5.net/wiki/Tutorial</a><!-- m --><br/><br/>And Lastly, here as well: <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Libraries\">http://quest5.net/wiki/Libraries</a><!-- m --><br/><br/>And, truly truly Lastly (lol): this forum itself, people's threads and posts.<br/><br/>-----------<br/><br/>here's an example, using Pixie's Spell Library File, a professional level of a Library File (unlike anything I could ever do at least right now, lol):<br/><br/>the &quot;tab&quot; coding is literally creating (adding more of) the GUI~Editor 's tabs, libraries create new tabs~abilities for using~within the GUI~Editor, to help you craft aspects of your game, and in this example, Pixie's spell library adds a magic system~options~settings~tabs to when you work on your game in the GUI~Editor.<br/><br/>err, when I copy and pasted this... the spacing and etc got all messed up, Pixie's library isn't actually this badly formated, lol.<br/><br/><pre><code>&lt;?xml version=&quot;1&#46;0&quot;?&gt; // HK's note&#58; this isn't needed, you don't need to include this code line in your library files, it can be removed in this library file of pixie's too, it's a way to use an online code language checker, to see if the code has any errors (but I just use notepad++ when writing, editing, and troubleshooting my code, lol)<br/><br/>&lt;library&gt;<br/><br/><br/>  &lt;!--<br/>  This library adds a basic magic system to quest&#46; It allows for three types of spells&#58;<br/><br/>  nonattackspell&#58; Instant effect<br/>  lastingspell&#58; An on-going spell&#46; These last until another spell is cast<br/>  attackspell&#58; Instant effect, attacking anything of the &quot;monster&quot; type that is not dead<br/><br/>  Attack spells must be of an element, and eight are already set up&#46; Monsters<br/>  can be assigned to elements too; they will be immune to that element, but take<br/>  four-fold damage from the opposed element&#46;<br/><br/>  A &quot;Magic&quot; tab is added to the editor to make setting up spells and monsters as easy as possible&#46;<br/>  --&gt;<br/><br/>  &lt;!--<br/>  Adding new elements involves a bit of effort&#46; This system requires that elements are added in pairs or opposites,<br/>  such as fire and frost&#46;<br/>  1&#46; Create a new type for both elements, named &#91;elemem&#93;_type<br/>  2&#46; In the data section, the object element_struct needs both elements added to both &quot;elements&quot; and<br/>      &quot;opposedelements&quot;, and for the latter you need to put them in both ways around (look at existing entries)<br/>  3&#46; You need to add both elements to the tab, both for &quot;monster&quot; and for &quot;attackspell&quot;&#46; Again, see existing<br/>      entries&#46;<br/>  --&gt;<br/><br/><br/>  &lt;!-- =================================================== --&gt;<br/>  &lt;!-- Templates --&gt;<br/><br/>  &lt;!--<br/>  Using templates makes it easier to convert to other languages, but also for other users to word it how they want it&#46;<br/>  When templates are in the library that uses them (as here) the way to change the language is to<br/>  modify the template in the library, so really the only benefit is that all the text is together here&#46;<br/>  Also modify the default responses in the verbs!<br/>  --&gt;<br/><br/>  &lt;template name=&quot;Learn&quot;&gt;learn&lt;/template&gt;<br/>  &lt;template name=&quot;Cast&quot;&gt;cast&lt;/template&gt;<br/><br/>  &lt;template name=&quot;LookDead&quot;&gt;Oh, and it is dead&#46;&lt;/template&gt;<br/>  &lt;template name=&quot;SpellAlreadyKnown&quot;&gt;Er, you already know that one!&lt;/template&gt;<br/>  &lt;template name=&quot;SpellNotKnown&quot;&gt;Er, you don't know that one!&lt;/template&gt;<br/>  &lt;template name=&quot;NoMonstersPresent&quot;&gt;No monsters present&lt;/template&gt;<br/><br/>  &lt;dynamictemplate name=&quot;SpellEnds&quot;&gt;&lt;!&#91;CDATA&#91;&quot;The &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt; spell ends&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;<br/>  &lt;dynamictemplate name=&quot;SpellCast&quot;&gt;&lt;!&#91;CDATA&#91;&quot;You cast &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt;&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;<br/>  &lt;dynamictemplate name=&quot;SpellLearnt&quot;&gt;&lt;!&#91;CDATA&#91;&quot;In a process that seems at once unfathomable, and yet familiar, the spell fades away, and you realise you are now able to cast the &lt;i&gt;&quot; + GetDisplayAlias(object) + &quot;&lt;/i&gt; spell&#46;&quot;&#93;&#93;&gt;&lt;/dynamictemplate&gt;<br/><br/><br/><br/>  &lt;!-- =================================================== --&gt;<br/>  &lt;!-- Verbs --&gt;<br/><br/>  &lt;verb&gt;<br/>    &lt;property&gt;learn&lt;/property&gt;<br/>    &lt;pattern&gt;&#91;Learn&#93;&lt;/pattern&gt;<br/>    &lt;defaultexpression&gt;&quot;You can't learn &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;<br/>  &lt;/verb&gt;<br/>  &lt;verb&gt;<br/>    &lt;property&gt;cast&lt;/property&gt;<br/>    &lt;pattern&gt;&#91;Cast&#93;&lt;/pattern&gt;<br/>    &lt;defaultexpression&gt;&quot;You can't cast &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;<br/>  &lt;/verb&gt;<br/><br/><br/>  &lt;!-- =================================================== --&gt;<br/>  &lt;!-- Functions --&gt;<br/><br/>  &lt;!--<br/>  Handles an attack on the given monster, using the given spell&#46;<br/>  Monster loses hit points according to the spell's powerrating&#46;<br/>  If they share an element, then no damage, if elements are opposed, damage is multplied by 4<br/>  Handles monsters with no elements too, but spell must have an element set&#46;<br/>  --&gt;<br/>  &lt;function name=&quot;SpellAttackMonster&quot; parameters=&quot;monster, spell&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    element = GetElement (monster)<br/>    handled = False<br/>    if (not element = Null) {<br/>      if (DoesInherit (spell, element + &quot;_type&quot;)) {<br/>        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;ignoreselement)<br/>        handled = True<br/>      }<br/>      if (DoesInherit (spell, StringDictionaryItem (element_struct&#46;opposedelements, element) + &quot;_type&quot;)) {<br/>        monster&#46;hitpoints = monster&#46;hitpoints -  4 * spell&#46;powerrating<br/>        handled = True<br/>        if (monster&#46;hitpoints &gt; 0) {<br/>          msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;hurtbyelement)<br/>        }<br/>        else {<br/>          msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;deathbyelement)<br/>          Death (monster)<br/>        }<br/>      }<br/>    }<br/><br/>    if (not handled) {<br/>      monster&#46;hitpoints = monster&#46;hitpoints -  spell&#46;powerrating<br/>      if (monster&#46;hitpoints &gt; 0) {<br/>        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;hurt)<br/>      }<br/>      else {<br/>        msg (&quot;&#46;&#46;&#46; &quot; + monster&#46;death)<br/>        Death (monster)<br/>      }<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/><br/><br/>  &lt;!--<br/>  Call this when a spell is cast, to ensure any on-going spells<br/>  are terminated&#46;<br/>  --&gt;<br/>  &lt;function name=&quot;CancelSpell&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    if (HasObject (player, &quot;currentspell&quot;)) {<br/>      spell = player&#46;currentspell<br/>      msg (DynamicTemplate(&quot;SpellEnds&quot;, spell))<br/>      player&#46;currentspell = null<br/>      if (HasScript (spell, &quot;terminate&quot;)) {<br/>        do (spell, &quot;terminate&quot;)<br/>      }<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/><br/><br/>  &lt;!--<br/>  Call this when a monster dies for some housekeeping&#46;<br/>  --&gt;<br/>  &lt;function name=&quot;Death&quot; parameters=&quot;monster&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    monster&#46;alias = monster&#46;alias + &quot; (dead)&quot;<br/>    if (HasString (monster, &quot;lookwhendead&quot;)) {<br/>      monster&#46;look = monster&#46;lookwhendead<br/>    }<br/>    else {<br/>      monster&#46;look = monster&#46;look + &quot; &#91;LookDead&#93;&quot;<br/>    }<br/>    monster&#46;dead = True<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/><br/><br/>  &lt;!--<br/>  Returns as a string the name of this object's element (or null)&#46;<br/>  --&gt;<br/>  &lt;function name=&quot;GetElement&quot; parameters=&quot;obj&quot; type=&quot;string&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    result = Null<br/>    foreach (element, element_struct&#46;elements) {<br/>     type = element + &quot;_type&quot;<br/>      if (DoesInherit (obj, type)) {<br/>        result = element<br/>      }<br/>    }<br/>    return (result)<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/><br/><br/>  &lt;!--<br/>  Describes casting<br/>  --&gt;<br/>  &lt;function name=&quot;DescribeCast&quot; parameters=&quot;spell&quot;&gt;&lt;!&#91;CDATA&#91;<br/>        if (HasString (spell, &quot;description&quot;)) {<br/>          msg (DynamicTemplate(&quot;SpellCast&quot;, spell) + &quot; &quot; + spell&#46;description)<br/>        }<br/>        else {<br/>          msg (DynamicTemplate(&quot;SpellCast&quot;, spell))<br/>        }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/><br/><br/>  &lt;!-- =================================================== --&gt;<br/>  &lt;!-- Object types --&gt;<br/><br/>  &lt;type name=&quot;spell&quot;&gt;<br/>    &lt;inventoryverbs type=&quot;list&quot;&gt;Learn&lt;/inventoryverbs&gt;<br/>    &lt;displayverbs type=&quot;list&quot;&gt;Learn&lt;/displayverbs&gt;<br/>    &lt;drop type=&quot;boolean&quot;&gt;false&lt;/drop&gt;<br/>    &lt;take type=&quot;boolean&quot;&gt;false&lt;/take&gt;<br/>    &lt;usedefaultprefix type=&quot;boolean&quot;&gt;false&lt;/usedefaultprefix&gt;<br/>    &lt;learn type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>      if (not this&#46;parent = player) {<br/>        this&#46;parent = player<br/>        this&#46;inventoryverbs = Split (&quot;Cast&quot;, &quot; &quot;)<br/>        msg (DynamicTemplate(&quot;SpellLearnt&quot;, this))<br/>      }<br/>      else {<br/>        msg (&quot;&#91;SpellAlreadyKnown&#93;&quot;)<br/>      }<br/>    &#93;&#93;&gt;&lt;/learn&gt;<br/>  &lt;/type&gt;<br/><br/><br/><br/>  &lt;type name=&quot;attackspell&quot;&gt;<br/>    &lt;inherit name=&quot;spell&quot;/&gt;<br/>    &lt;cast type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>      // Check the player has the spell<br/>      // If so iterate through all objects in the room<br/>      // Apply attack to those with the monster type that are not dead<br/>      if (this&#46;parent = player) {<br/>        DescribeCast (this)<br/>        flag = False<br/>        foreach (obj, ScopeVisibleNotHeld ()) {<br/>          if (DoesInherit (obj, &quot;monster&quot;) and not GetBoolean (obj, &quot;dead&quot;)) {<br/>            SpellAttackMonster (obj, this)<br/>            flag = True<br/>          }<br/>        }<br/>        if (not flag) {<br/>          msg (&quot;&#46;&#46;&#46; &#91;NoMonstersPresent&#93;&quot;)<br/>        }<br/>        CancelSpell ()<br/>      }<br/>      else {<br/>        msg (&quot;&#91;SpellNotKnown&#93;&quot;)<br/>      }<br/>    &#93;&#93;&gt;&lt;/cast&gt;<br/>  &lt;/type&gt;<br/><br/><br/>  &lt;type name=&quot;nonattackspell&quot;&gt;<br/>    &lt;inherit name=&quot;spell&quot;/&gt;<br/>    &lt;cast type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>      if (this&#46;parent = player) {<br/>        DescribeCast (this)<br/>        do (this, &quot;spelleffect&quot;)<br/>        CancelSpell ()<br/>      }<br/>      else {<br/>        msg (&quot;&#91;SpellNotKnown&#93;&quot;)<br/>      }<br/>    &#93;&#93;&gt;&lt;/cast&gt;<br/>  &lt;/type&gt;<br/><br/><br/>  &lt;type name=&quot;lastingspell&quot;&gt;<br/>    &lt;inherit name=&quot;spell&quot;/&gt;<br/>    &lt;cast type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>      if (this&#46;parent = player) {<br/>        DescribeCast (this)<br/>        do (this, &quot;spelleffect&quot;)<br/>        CancelSpell ()<br/>        player&#46;currentspell = this<br/>        player&#46;status = this&#46;status<br/>      }<br/>      else {<br/>        msg (&quot;&#91;SpellNotKnown&#93;&quot;)<br/>      }<br/>    &#93;&#93;&gt;&lt;/cast&gt;<br/>  &lt;/type&gt;<br/><br/><br/>  &lt;type name=&quot;fire_type&quot;&gt;<br/>  &lt;/type&gt;<br/><br/>  &lt;type name=&quot;frost_type&quot;&gt;<br/>  &lt;/type&gt;<br/><br/>  &lt;type name=&quot;storm_type&quot;&gt;<br/>  &lt;/type&gt;<br/><br/>  &lt;type name=&quot;earthmight_type&quot;&gt;<br/>  &lt;/type&gt;<br/><br/>  &lt;type name=&quot;shadow_type&quot;&gt;<br/>  &lt;/type&gt;<br/><br/>  &lt;type name=&quot;rainbow_type&quot;&gt;<br/>  &lt;/type&gt;<br/><br/>  &lt;type name=&quot;divine_type&quot;&gt;<br/>  &lt;/type&gt;<br/><br/>  &lt;type name=&quot;necrotic_type&quot;&gt;<br/>  &lt;/type&gt;<br/><br/>  &lt;type name=&quot;monster&quot;&gt;<br/>  &lt;/type&gt;<br/><br/><br/>  &lt;!-- =================================================== --&gt;<br/>  &lt;!-- Data --&gt;<br/><br/>  &lt;!--<br/>  This is a data store for elements (I call it a &quot;struct&quot; after the keyword in the C programming language)<br/>  If you add more elements to the name, you need to add them to both lists as well as creating a new type&#46;<br/>  Note that your new type must end &quot;_type&quot;, but that must not be included on these lists&#46;<br/>  --&gt;<br/>  &lt;object name=&quot;element_struct&quot;&gt;<br/>    &lt;elements type=&quot;list&quot;&gt;fire; frost; storm; earthmight; shadow; rainbow; divine; necrotic&lt;/elements&gt;<br/>    &lt;opposedelements type=&quot;stringdictionary&quot;&gt;fire = frost;frost = fire;storm = earthmight;earthmight = storm;shadow = rainbow;rainbow = shadow;necrotic = divine;divine=necrotic&lt;/opposedelements&gt;<br/>  &lt;/object&gt;<br/><br/><br/>  &lt;!-- =================================================== --&gt;<br/>  &lt;!-- Tabs --&gt;<br/><br/>  &lt;tab&gt;<br/>    &lt;parent&gt;_ObjectEditor&lt;/parent&gt;<br/>    &lt;caption&gt;Magic&lt;/caption&gt;<br/>    &lt;mustnotinherit&gt;editor_room; defaultplayer&lt;/mustnotinherit&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;dropdowntypes&lt;/controltype&gt;<br/>      &lt;caption&gt;Spell type&lt;/caption&gt;<br/>      &lt;types&gt;*=None; nonattackspell=Non-attack spell; lastingspell=Lasting spell; attackspell=Attack spell; monster=Monster&lt;/types&gt;<br/>      &lt;width&gt;150&lt;/width&gt;<br/>    &lt;/control&gt;<br/><br/><br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;title&lt;/controltype&gt;<br/>      &lt;caption&gt;Non-Attack Spell&lt;/caption&gt;<br/>      &lt;mustinherit&gt;nonattackspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Description (optional)&lt;/caption&gt;<br/>      &lt;attribute&gt;description&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;nonattackspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;script&lt;/controltype&gt;<br/>      &lt;caption&gt;Spell effect&lt;/caption&gt;<br/>      &lt;attribute&gt;spelleffect&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;nonattackspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/><br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;title&lt;/controltype&gt;<br/>      &lt;caption&gt;Lasting Spell&lt;/caption&gt;<br/>      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Description (optional)&lt;/caption&gt;<br/>      &lt;attribute&gt;description&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Status when active&lt;/caption&gt;<br/>      &lt;attribute&gt;status&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;script&lt;/controltype&gt;<br/>      &lt;caption&gt;Spell effect&lt;/caption&gt;<br/>      &lt;attribute&gt;spelleffect&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;script&lt;/controltype&gt;<br/>      &lt;caption&gt;Cacel spell effect&lt;/caption&gt;<br/>      &lt;attribute&gt;terminate&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;lastingspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/><br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;title&lt;/controltype&gt;<br/>      &lt;caption&gt;Attack Spell&lt;/caption&gt;<br/>      &lt;mustinherit&gt;attackspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;number&lt;/controltype&gt;<br/>      &lt;caption&gt;Power of attack (1-10)&lt;/caption&gt;<br/>      &lt;attribute&gt;powerrating&lt;/attribute&gt;<br/>      &lt;width&gt;100&lt;/width&gt;<br/>      &lt;mustinherit&gt;attackspell&lt;/mustinherit&gt;<br/>      &lt;minimum&gt;0&lt;/minimum&gt;<br/>      &lt;maximum&gt;10&lt;/maximum&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Description (optional)&lt;/caption&gt;<br/>      &lt;attribute&gt;description&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;attackspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;dropdowntypes&lt;/controltype&gt;<br/>      &lt;caption&gt;Element&lt;/caption&gt;<br/>      &lt;types&gt;*=None; fire_type=Fire; frost_type=Frost; storm_type=Storm; earthmight_type=Earthmight; shadow_type=Shadow; rainbow_type=Rainbow; necrotic_type=Necrotic; divine_type=Divine&lt;/types&gt;<br/>      &lt;width&gt;150&lt;/width&gt;<br/>      &lt;mustinherit&gt;attackspell&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/><br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;title&lt;/controltype&gt;<br/>      &lt;caption&gt;Monster&lt;/caption&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;dropdowntypes&lt;/controltype&gt;<br/>      &lt;caption&gt;Element&lt;/caption&gt;<br/>      &lt;types&gt;*=None; fire_type=Fire; frost_type=Frost; storm_type=Storm; earthmight_type=Earthmight; shadow_type=Shadow; rainbow_type=Rainbow; necrotic_type=Necrotic; divine_type=Divine&lt;/types&gt;<br/>      &lt;width&gt;150&lt;/width&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;number&lt;/controltype&gt;<br/>      &lt;caption&gt;Hit points&lt;/caption&gt;<br/>      &lt;attribute&gt;hitpoints&lt;/attribute&gt;<br/>      &lt;width&gt;100&lt;/width&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>      &lt;minimum&gt;0&lt;/minimum&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Description on injury&lt;/caption&gt;<br/>      &lt;attribute&gt;hurt&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Description on death&lt;/caption&gt;<br/>      &lt;attribute&gt;death&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Description on injury by opposed element&lt;/caption&gt;<br/>      &lt;attribute&gt;hurtbyelement&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Description on death by opposed element&lt;/caption&gt;<br/>      &lt;attribute&gt;deathbyelement&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Description on ignore&lt;/caption&gt;<br/>      &lt;attribute&gt;ignoreselement&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>    &lt;control&gt;<br/>      &lt;controltype&gt;textbox&lt;/controltype&gt;<br/>      &lt;caption&gt;Look (when dead)&lt;/caption&gt;<br/>      &lt;attribute&gt;lookwhendead&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;monster&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/><br/>  &lt;/tab&gt;<br/>&lt;/library&gt;</code></pre>",
      "PostDate": "2013-12-28T05:45:01+00:00",
      "LastEditDate": null
    }
  ]
}
