{
  "Topic": {
    "TopicId": "2040",
    "ForumId": "10",
    "Title": "Using/combining objects",
    "LastUpdated": "2009-06-23T15:43:30+01:00",
    "ReplyCount": 29
  },
  "Posts": [
    {
      "PostId": "16612",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "OK. Again, sorry if this has been asked before.  I did try the forum search, but the results just confused me.\n\nI want to use objects together, but without using the [b:hjf9kemg]use[/b:hjf9kemg] command.\n\nFor example I currently have a Brass Lantern and a Box of Matches.  I have managed to set the script so that [b:hjf9kemg]light lamp[/b:hjf9kemg] checks to see if you have the lamp (whether it is lit) and if you have a box of matches.\n\nIf you have both items, and it is unlit you will light it.  If you only have the lamp (and it is unlit) it will tell you to find something to light it with.  If the lamp is lit, whether or not you have any matches, it will tell you it is already alight.\n\nMy question here is how do I specify the [b:hjf9kemg]light lamp[/b:hjf9kemg] command to be [b:hjf9kemg]light lamp [i:hjf9kemg]with[/i:hjf9kemg] matches[/b:hjf9kemg].\n\n\nSimilarly, in one locoation I have some form of shaft and a metal post stuck in the ground.  I have created the shaft as an object so that the player can examine it, and see by [b:hjf9kemg]look[/b:hjf9kemg]ing at it, that it is too deep to just climb down.\n\nBasically I want the player to have to [b:hjf9kemg]tie rope [i:hjf9kemg]to[/i:hjf9kemg] post[/b:hjf9kemg] before he can climb down the shaft.  But I want to avoid just plainly using the rope on the shaft.\n\nI am planning on having panes disabled, but ideally dragging  the matches on the lamp or the rope on the post should not be able to work if my settings are over ruled by the player.",
      "EditableFormat": "bbcode",
      "HTML": "OK. Again, sorry if this has been asked before.  I did try the forum search, but the results just confused me.<br/><br/>I want to use objects together, but without using the <span style=\"font-weight:bold;\">use</span> command.<br/><br/>For example I currently have a Brass Lantern and a Box of Matches.  I have managed to set the script so that <span style=\"font-weight:bold;\">light lamp</span> checks to see if you have the lamp (whether it is lit) and if you have a box of matches.<br/><br/>If you have both items, and it is unlit you will light it.  If you only have the lamp (and it is unlit) it will tell you to find something to light it with.  If the lamp is lit, whether or not you have any matches, it will tell you it is already alight.<br/><br/>My question here is how do I specify the <span style=\"font-weight:bold;\">light lamp</span> command to be <span style=\"font-weight:bold;\">light lamp <span style=\"font-style:italic;\">with</span> matches</span>.<br/><br/><br/>Similarly, in one locoation I have some form of shaft and a metal post stuck in the ground.  I have created the shaft as an object so that the player can examine it, and see by <span style=\"font-weight:bold;\">look</span>ing at it, that it is too deep to just climb down.<br/><br/>Basically I want the player to have to <span style=\"font-weight:bold;\">tie rope <span style=\"font-style:italic;\">to</span> post</span> before he can climb down the shaft.  But I want to avoid just plainly using the rope on the shaft.<br/><br/>I am planning on having panes disabled, but ideally dragging  the matches on the lamp or the rope on the post should not be able to work if my settings are over ruled by the player.",
      "PostDate": "2009-05-22T00:07:23+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16613",
      "UserId": 0,
      "Username": "Redsun",
      "UserAvatar": null,
      "UserGravatar": "05086f5eba3fc1b4c0e76511e8b41500",
      "EditableText": "For the light lamp question.\n\nCreate a command called: light lamp with matches\nin the light lamp script commands, IF player has matches\nand Lamp is not already lit, then light lamp and remove matches(if is just one match).\n\nNot sure if thats what you wanted to know by that question.\n\nFor the shaft question\n\nJust like the 1st answer, \n\nUse commands, this way the player cannot simply use one object on another.\n\nnot sure if this helped or not.",
      "EditableFormat": "bbcode",
      "HTML": "For the light lamp question.<br/><br/>Create a command called: light lamp with matches<br/>in the light lamp script commands, IF player has matches<br/>and Lamp is not already lit, then light lamp and remove matches(if is just one match).<br/><br/>Not sure if thats what you wanted to know by that question.<br/><br/>For the shaft question<br/><br/>Just like the 1st answer, <br/><br/>Use commands, this way the player cannot simply use one object on another.<br/><br/>not sure if this helped or not.",
      "PostDate": "2009-05-22T08:48:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16614",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "[quote:1fua5q8a]My question here is how do I specify the light lamp command to be light lamp with matches.[/quote:1fua5q8a]\n\nOne method is to make the 'light lamp' command call a 'light lamp with matches' command if the player has matches to begin with:\n\n[code:1fua5q8a]\ncommand &lt;light lamp&gt; {\n    \n    if got &lt;matches&gt; then {\n        exec &lt;light lamp with matches&gt;\n    }\n    else {\n        if not property &lt;lamp; lit&gt; then {\n            msg &lt;You should find something to light it with&#46;&gt;\n        }\n        else {\n            msg &lt;The lamp is already lit&#46;&gt;\n        }\n    }\n}\n\ncommand &lt;light lamp with matches&gt; {\n\n    if got &lt;matches&gt; then {\n        if not property &lt;lamp; lit&gt; then {\n            msg &lt;You light the lamp&#46;&gt;\n            property &lt;lamp; lit&gt;\n        }\n        else {\n            msg &lt;The lamp is already lit&#46;&gt;\n        }\n    }\n}[/code:1fua5q8a]\n\nThere are two problems I see with doing it this way.  One, referencing the lamp or the matches by any of their alternate names won't work - each command would have to be modified to account for each alternate name.  If you change the alternate names for these objects later on, you'd have to remember to come back to these commands and change them here, too.  For instance, if the lamp has been described as 'a small green lamp', then the command would need to account for all possible ways of referencing the lamp:\n\ncommand &lt;light lamp; light green lamp; light small green lamp; light small lamp&gt;\n\nThe second problem is use of the 'exec' script command, which just forces another command to execute as though the player had typed it themselves.  This means that the beforeturn and afterturn scripts (for the game as a whole and for the particular room the player is currently in) will fire twice.  If you've got any upkeep code in these scripts, that might prove a nuisance.  I'm particularly thinking of the game afterturn script, where it might be common to increment a 'turn' variable to keep track of how many turns have passed since the game started.  If the player types 'light lamp' (and they have the matches), then 'light lamp with matches' will automatically execute.  After it is finished the afterturn script will fire and control will be passed back to the 'light lamp' command, where the afterturn script will fire once more.\n\nA better way is to implement a combination of verb and command, and then to put all the functionality for the lamp within the definition block for the lamp itself.  Here is the verb I'm thinking of:\n\n[code:1fua5q8a]verb &lt;light&#58; OnLight&gt; msg &lt;You cannot 'light' that&#46;&gt;[/code:1fua5q8a]\n\nThis verb is exactly equivalent to the following command:\n\n[code:1fua5q8a]command &lt;light #@object#&gt; {\n\n    if action &lt;#object#; OnLight&gt; then {\n        doaction &lt;#object#; OnLight&gt;\n    else {\n        msg &lt;You cannot 'light' that&#46;&gt;\n    }\n}[/code:1fua5q8a]\n\nSince Quest's verbs can only specify one noun (one object), you cannot implement 'verb OBJECT with OBJECT' as a verb (such as 'light lamp with matches').  So here is a command that mimics the logic of a verb:\n\n[code:1fua5q8a]command &lt;light #@object1# with #@object2#&gt; {\n\n    if action &lt;#object1#; OnLight&gt; then {\n        property &lt;#object1#; with = #object2#&gt;\n        doaction &lt;#object1#; OnLight&gt;\n    }\n    else {\n        msg &lt;You cannot 'light' that&#46;&gt;\n    }\n}[/code:1fua5q8a]\n\nThis second command behaves in exactly the same way as the verb, save that it sets a property (called 'with') on the object being lit to the object that is making the lighting possible.  (It sets the 'with' property of the lamp to 'matches'.)  In the verb and the command no script has been written that actually lights the lamp yet:  that's to be done in the OnLight action of the lamp itself, which both the verb and the command call:\n\n[code:1fua5q8a]define object &lt;lamp&gt;\n\n    take\n    properties &lt;with = NULL&gt;\n\n    action &lt;OnLight&gt; {\n\n        set string &lt;this; $thisobject$&gt;\n\n        if not property &lt;#this#; lit&gt; then {\n            if (#(this)&#58;with# = NULL) then { \n                if got &lt;matches&gt; then {\n                    property &lt;#this#; with = matches&gt;\n                    doaction &lt;#this#; OnLight&gt;\n                }\n                else {\n                    msg &lt;You should find something to light it with&#46;&gt;\n                }\n            }\n            else {\n                if (#(this)&#58;with# = matches) then {\n                    msg &lt;You light the lamp&#46;&gt;\n                    property &lt;#this#; lit&gt;\n                }\n                else {\n                    set string &lt;str; #(this)&#58;with#&gt;\n                    msg &lt;You cannot light the lamp with #(str)&#58;prefix# #@str#&#46;&gt;\n                }\n            }\n        }\n        else {\n            msg &lt;The lamp is already lit&#46;&gt;\n        }\n\n        property &lt;#this#; with = NULL&gt;\n\n    }\n\nend define\n[/code:1fua5q8a]\n\nThe above action (OnLight) first checks to see if the lamp is already lit.  If it's not, the script looks to see if an attempt was made to light this object (the lamp) [i:1fua5q8a]with[/i:1fua5q8a] anything.  We store any object that was used to try to light the lamp in a 'with' property on the lamp itself.  By default this property is set to NULL, and as you can see at the end of the OnLight action, it is reset to NULL after any attempt to light the lamp has been made.  If the 'with' property is NULL, a check is made to see if the player possesses the matches.  If they do, we set the 'with' property to 'matches' and recall the OnLight action immediately.  If they do not possess the matches, we tell the player they need to find something to light the lamp with.\n\nIf the 'with' property does not equal NULL, we check to see if it equals 'matches'.  If it does, the lamp is lit.  If it doesn't (as when the player tries to light the lamp with, say, a 'shoe'), a message is sent to the player indicating that they cannot light the lamp with whatever object they tried to light it with.  (IE, &quot;You cannot light the lamp with a shoe.&quot;)\n\nAs for the rope:\n\n[code:1fua5q8a]verb &lt;tie&#58; OnTie&gt; msg &lt;You cannot 'tie' that&#46;&gt;\ncommand &lt;tie #@object1# to #@object2#&gt; {\n    if action &lt;#object1#; OnTie&gt; then {\n        property &lt;#object1#; to = #@object2#&gt;\n        doaction &lt;#object1#; OnTie&gt;\n    }\n    else {\n        msg &lt;You cannot 'tie' that&#46;&gt;\n    }\n}\n\ndefine object &lt;Post&gt; {\n\n    properties &lt;CanTieRopeOnMe&gt;\n\nend define\n\ndefine object &lt;Rope&gt; {\n\n    properties &lt;to = NULL&gt;\n\n    action &lt;OnTie&gt; {\n        'check to make sure 'to' doesn't equal NULL&#46;  If it does,\n            'inform they player that they must tie the rope to\n            'something, they can't just 'tie rope'&#46;\n        'if 'to' doesn't equal NULL, check if the object it refers to\n            'has the 'CanTieRopeOnMe' property&#46;  If so, tie the\n            'rope to that object, otherwise send a denial message to\n            'the player&#46;\n    }\n\nend define[/code:1fua5q8a]\n  \nThere is (at least) one other thing you'd have to take care of in the OnTie action:  the rope has [i:1fua5q8a]two[/i:1fua5q8a] ends that can be tied, so you'll need to keep track of how many objects the rope is currently tied to.  If it's already tied to two things then you shouldn't be able to tie it to any more objects.  (Unless you can cut it, in which case I leave that coding nightmare up to you.)\n\nThe above method won't interface at all with 'use OBJECT on OBJECT', nor will dragging items in the panes trigger any of the above functionality.  Attached is a sample you can check out.\n\n[attachment=0:1fua5q8a]<!-- ia0 -->LampAndMatches.asl<!-- ia0 -->[/attachment:1fua5q8a]",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>My question here is how do I specify the light lamp command to be light lamp with matches.</p></blockquote><br/><br/>One method is to make the 'light lamp' command call a 'light lamp with matches' command if the player has matches to begin with:<br/><br/><pre><code><br/>command &lt;light lamp&gt; {<br/>    <br/>    if got &lt;matches&gt; then {<br/>        exec &lt;light lamp with matches&gt;<br/>    }<br/>    else {<br/>        if not property &lt;lamp; lit&gt; then {<br/>            msg &lt;You should find something to light it with&#46;&gt;<br/>        }<br/>        else {<br/>            msg &lt;The lamp is already lit&#46;&gt;<br/>        }<br/>    }<br/>}<br/><br/>command &lt;light lamp with matches&gt; {<br/><br/>    if got &lt;matches&gt; then {<br/>        if not property &lt;lamp; lit&gt; then {<br/>            msg &lt;You light the lamp&#46;&gt;<br/>            property &lt;lamp; lit&gt;<br/>        }<br/>        else {<br/>            msg &lt;The lamp is already lit&#46;&gt;<br/>        }<br/>    }<br/>}</code></pre><br/><br/>There are two problems I see with doing it this way.  One, referencing the lamp or the matches by any of their alternate names won't work - each command would have to be modified to account for each alternate name.  If you change the alternate names for these objects later on, you'd have to remember to come back to these commands and change them here, too.  For instance, if the lamp has been described as 'a small green lamp', then the command would need to account for all possible ways of referencing the lamp:<br/><br/>command &lt;light lamp; light green lamp; light small green lamp; light small lamp&gt;<br/><br/>The second problem is use of the 'exec' script command, which just forces another command to execute as though the player had typed it themselves.  This means that the beforeturn and afterturn scripts (for the game as a whole and for the particular room the player is currently in) will fire twice.  If you've got any upkeep code in these scripts, that might prove a nuisance.  I'm particularly thinking of the game afterturn script, where it might be common to increment a 'turn' variable to keep track of how many turns have passed since the game started.  If the player types 'light lamp' (and they have the matches), then 'light lamp with matches' will automatically execute.  After it is finished the afterturn script will fire and control will be passed back to the 'light lamp' command, where the afterturn script will fire once more.<br/><br/>A better way is to implement a combination of verb and command, and then to put all the functionality for the lamp within the definition block for the lamp itself.  Here is the verb I'm thinking of:<br/><br/><pre><code>verb &lt;light&#58; OnLight&gt; msg &lt;You cannot 'light' that&#46;&gt;</code></pre><br/><br/>This verb is exactly equivalent to the following command:<br/><br/><pre><code>command &lt;light #@object#&gt; {<br/><br/>    if action &lt;#object#; OnLight&gt; then {<br/>        doaction &lt;#object#; OnLight&gt;<br/>    else {<br/>        msg &lt;You cannot 'light' that&#46;&gt;<br/>    }<br/>}</code></pre><br/><br/>Since Quest's verbs can only specify one noun (one object), you cannot implement 'verb OBJECT with OBJECT' as a verb (such as 'light lamp with matches').  So here is a command that mimics the logic of a verb:<br/><br/><pre><code>command &lt;light #@object1# with #@object2#&gt; {<br/><br/>    if action &lt;#object1#; OnLight&gt; then {<br/>        property &lt;#object1#; with = #object2#&gt;<br/>        doaction &lt;#object1#; OnLight&gt;<br/>    }<br/>    else {<br/>        msg &lt;You cannot 'light' that&#46;&gt;<br/>    }<br/>}</code></pre><br/><br/>This second command behaves in exactly the same way as the verb, save that it sets a property (called 'with') on the object being lit to the object that is making the lighting possible.  (It sets the 'with' property of the lamp to 'matches'.)  In the verb and the command no script has been written that actually lights the lamp yet:  that's to be done in the OnLight action of the lamp itself, which both the verb and the command call:<br/><br/><pre><code>define object &lt;lamp&gt;<br/><br/>    take<br/>    properties &lt;with = NULL&gt;<br/><br/>    action &lt;OnLight&gt; {<br/><br/>        set string &lt;this; $thisobject$&gt;<br/><br/>        if not property &lt;#this#; lit&gt; then {<br/>            if (#(this)&#58;with# = NULL) then { <br/>                if got &lt;matches&gt; then {<br/>                    property &lt;#this#; with = matches&gt;<br/>                    doaction &lt;#this#; OnLight&gt;<br/>                }<br/>                else {<br/>                    msg &lt;You should find something to light it with&#46;&gt;<br/>                }<br/>            }<br/>            else {<br/>                if (#(this)&#58;with# = matches) then {<br/>                    msg &lt;You light the lamp&#46;&gt;<br/>                    property &lt;#this#; lit&gt;<br/>                }<br/>                else {<br/>                    set string &lt;str; #(this)&#58;with#&gt;<br/>                    msg &lt;You cannot light the lamp with #(str)&#58;prefix# #@str#&#46;&gt;<br/>                }<br/>            }<br/>        }<br/>        else {<br/>            msg &lt;The lamp is already lit&#46;&gt;<br/>        }<br/><br/>        property &lt;#this#; with = NULL&gt;<br/><br/>    }<br/><br/>end define<br/></code></pre><br/><br/>The above action (OnLight) first checks to see if the lamp is already lit.  If it's not, the script looks to see if an attempt was made to light this object (the lamp) <span style=\"font-style:italic;\">with</span> anything.  We store any object that was used to try to light the lamp in a 'with' property on the lamp itself.  By default this property is set to NULL, and as you can see at the end of the OnLight action, it is reset to NULL after any attempt to light the lamp has been made.  If the 'with' property is NULL, a check is made to see if the player possesses the matches.  If they do, we set the 'with' property to 'matches' and recall the OnLight action immediately.  If they do not possess the matches, we tell the player they need to find something to light the lamp with.<br/><br/>If the 'with' property does not equal NULL, we check to see if it equals 'matches'.  If it does, the lamp is lit.  If it doesn't (as when the player tries to light the lamp with, say, a 'shoe'), a message is sent to the player indicating that they cannot light the lamp with whatever object they tried to light it with.  (IE, &quot;You cannot light the lamp with a shoe.&quot;)<br/><br/>As for the rope:<br/><br/><pre><code>verb &lt;tie&#58; OnTie&gt; msg &lt;You cannot 'tie' that&#46;&gt;<br/>command &lt;tie #@object1# to #@object2#&gt; {<br/>    if action &lt;#object1#; OnTie&gt; then {<br/>        property &lt;#object1#; to = #@object2#&gt;<br/>        doaction &lt;#object1#; OnTie&gt;<br/>    }<br/>    else {<br/>        msg &lt;You cannot 'tie' that&#46;&gt;<br/>    }<br/>}<br/><br/>define object &lt;Post&gt; {<br/><br/>    properties &lt;CanTieRopeOnMe&gt;<br/><br/>end define<br/><br/>define object &lt;Rope&gt; {<br/><br/>    properties &lt;to = NULL&gt;<br/><br/>    action &lt;OnTie&gt; {<br/>        'check to make sure 'to' doesn't equal NULL&#46;  If it does,<br/>            'inform they player that they must tie the rope to<br/>            'something, they can't just 'tie rope'&#46;<br/>        'if 'to' doesn't equal NULL, check if the object it refers to<br/>            'has the 'CanTieRopeOnMe' property&#46;  If so, tie the<br/>            'rope to that object, otherwise send a denial message to<br/>            'the player&#46;<br/>    }<br/><br/>end define</code></pre><br/>  <br/>There is (at least) one other thing you'd have to take care of in the OnTie action:  the rope has <span style=\"font-style:italic;\">two</span> ends that can be tied, so you'll need to keep track of how many objects the rope is currently tied to.  If it's already tied to two things then you shouldn't be able to tie it to any more objects.  (Unless you can cut it, in which case I leave that coding nightmare up to you.)<br/><br/>The above method won't interface at all with 'use OBJECT on OBJECT', nor will dragging items in the panes trigger any of the above functionality.  Attached is a sample you can check out.<br/><br/><div><a href=\"/attachment/15\">LampAndMatches.asl</a></div>",
      "PostDate": "2009-05-22T15:13:00+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16616",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "Thank you both very much.  You have given me a lot to think about.\n\nI was going to go with Redsun until Overcat replied.\n\nAnd to some extent I may still do...  As defining 1 command might be all I need.\n\nHowever, the method shown by Overcat, defining the &quot;with&quot;, is the closest to what I want (so the player can try mixing items).\n\nIK am going to sit down and chew it all over, but you have been very helpful.\n\nThank you.",
      "EditableFormat": "bbcode",
      "HTML": "Thank you both very much.  You have given me a lot to think about.<br/><br/>I was going to go with Redsun until Overcat replied.<br/><br/>And to some extent I may still do...  As defining 1 command might be all I need.<br/><br/>However, the method shown by Overcat, defining the &quot;with&quot;, is the closest to what I want (so the player can try mixing items).<br/><br/>IK am going to sit down and chew it all over, but you have been very helpful.<br/><br/>Thank you.",
      "PostDate": "2009-05-22T20:11:36+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16617",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "Be careful about having a rope in your game.  Ropes are notorious for being trouble objects.  There's a lot you have to get right with them.",
      "EditableFormat": "bbcode",
      "HTML": "Be careful about having a rope in your game.  Ropes are notorious for being trouble objects.  There's a lot you have to get right with them.",
      "PostDate": "2009-05-22T20:55:23+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16618",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "Is there something in the quest engine that causes that - or is it just peoples interpretation of how to &quot;use&quot; them?",
      "EditableFormat": "bbcode",
      "HTML": "Is there something in the quest engine that causes that - or is it just peoples interpretation of how to &quot;use&quot; them?",
      "PostDate": "2009-05-22T23:49:32+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16619",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "How messy is this for my &quot;rope&quot; situation?\n\n[code:wtxatmlb]' Created with QDK Pro 4&#46;1 Beta\n\n!include &lt;stdverbs&#46;lib&gt;\n\ndefine game &lt;&gt;\n\tasl-version &lt;410&gt;\n\tstart &lt;test&gt;\n\tgame info &lt;Created with QDK Pro 4&#46;1 Beta&gt;\n\tcommand &lt;tie rope to post&gt; {\n\t\tif got &lt;rope&gt; then {\n\t\t\tif here &lt;post&gt; then {\n\t\t\t\tmsg &lt;You tie the rope to the post&#46;&gt;\n\t\t\t\tlose &lt;rope&gt;\n\t\t\t\tflag on &lt;ropedown&gt;\n\t\t\t\tunlock &lt;shaftentrance; down&gt;\n\t\t\t\thide &lt;rope&gt; } else msg &lt;There is no post here&#46;&gt; } else {\n\t\t\tmsg &lt;You don't have any rope&#46;&gt; }\n\t}\nend define\n\ndefine options\n\tdebug on\n\tpanes on\n\tabbreviations on\nend define\n\ndefine room &lt;shaftentrance&gt;\n\tlook &lt;there is a shaft down&gt;\n\tdown locked &lt;bottomofshaft; The shaft is too deep to jump down&#46;  You will need to find another way down&#46;&gt;\n\n\tdefine object &lt;rope&gt;\n\t\ttake\n\t\tdisplaytype &lt;Object&gt;\n\t\tarticle &lt;it&gt;\n\t\tgender &lt;it&gt;\n\t\tuse on &lt;post&gt; \n\tend define\n\n\tdefine object &lt;post&gt;\n\t\tlook if flag &lt;ropedown&gt; then msg &lt;A metal post with a rope tied to it&#46;&gt; else msg &lt;A metal post&#46;&gt;\n\t\tdisplaytype &lt;Object&gt;\n\t\tarticle &lt;it&gt;\n\t\tgender &lt;it&gt;\n\tend define\n\nend define\n\ndefine room &lt;bottomofshaft&gt;\n\tlook &lt;You are at the bottom of the shaft&#46;  A rope leads up&#46;&gt;\n\tup &lt;shaftentrance&gt;\nend define\n\n[/code:wtxatmlb]",
      "EditableFormat": "bbcode",
      "HTML": "How messy is this for my &quot;rope&quot; situation?<br/><br/><pre><code>' Created with QDK Pro 4&#46;1 Beta<br/><br/>!include &lt;stdverbs&#46;lib&gt;<br/><br/>define game &lt;&gt;<br/>\tasl-version &lt;410&gt;<br/>\tstart &lt;test&gt;<br/>\tgame info &lt;Created with QDK Pro 4&#46;1 Beta&gt;<br/>\tcommand &lt;tie rope to post&gt; {<br/>\t\tif got &lt;rope&gt; then {<br/>\t\t\tif here &lt;post&gt; then {<br/>\t\t\t\tmsg &lt;You tie the rope to the post&#46;&gt;<br/>\t\t\t\tlose &lt;rope&gt;<br/>\t\t\t\tflag on &lt;ropedown&gt;<br/>\t\t\t\tunlock &lt;shaftentrance; down&gt;<br/>\t\t\t\thide &lt;rope&gt; } else msg &lt;There is no post here&#46;&gt; } else {<br/>\t\t\tmsg &lt;You don't have any rope&#46;&gt; }<br/>\t}<br/>end define<br/><br/>define options<br/>\tdebug on<br/>\tpanes on<br/>\tabbreviations on<br/>end define<br/><br/>define room &lt;shaftentrance&gt;<br/>\tlook &lt;there is a shaft down&gt;<br/>\tdown locked &lt;bottomofshaft; The shaft is too deep to jump down&#46;  You will need to find another way down&#46;&gt;<br/><br/>\tdefine object &lt;rope&gt;<br/>\t\ttake<br/>\t\tdisplaytype &lt;Object&gt;<br/>\t\tarticle &lt;it&gt;<br/>\t\tgender &lt;it&gt;<br/>\t\tuse on &lt;post&gt; <br/>\tend define<br/><br/>\tdefine object &lt;post&gt;<br/>\t\tlook if flag &lt;ropedown&gt; then msg &lt;A metal post with a rope tied to it&#46;&gt; else msg &lt;A metal post&#46;&gt;<br/>\t\tdisplaytype &lt;Object&gt;<br/>\t\tarticle &lt;it&gt;<br/>\t\tgender &lt;it&gt;<br/>\tend define<br/><br/>end define<br/><br/>define room &lt;bottomofshaft&gt;<br/>\tlook &lt;You are at the bottom of the shaft&#46;  A rope leads up&#46;&gt;<br/>\tup &lt;shaftentrance&gt;<br/>end define<br/><br/></code></pre>",
      "PostDate": "2009-05-23T01:12:25+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16621",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "<!-- m --><a class=\"postlink\" href=\"http://www.inform-fiction.org/manual/html/s50.html#p402\">http://www.inform-fiction.org/manual/html/s50.html#p402</a><!-- m -->",
      "EditableFormat": "bbcode",
      "HTML": "<!-- m --><a class=\"postlink\" href=\"http://www.inform-fiction.org/manual/html/s50.html#p402\">http://www.inform-fiction.org/manual/html/s50.html#p402</a><!-- m -->",
      "PostDate": "2009-05-23T03:25:01+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16623",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "[quote=&quot;Freak&quot;:2qkotjfm]http://www.inform-fiction.org/manual/html/s50.html#p402[/quote:2qkotjfm]\n\nNoted - thanks for the link\n\n[quote=&quot;Overcat&quot;:2qkotjfm]\n\n[snip]\n\nSince Quest's verbs can only specify one noun (one object), you cannot implement 'verb OBJECT with OBJECT' as a verb (such as 'light lamp with matches').  So here is a command that mimics the logic of a verb:\n\n[code:2qkotjfm]command &lt;light #@object1# with #@object2#&gt; {\n\n    if action &lt;#object1#; OnLight&gt; then {\n        property &lt;#object1#; with = #object2#&gt;\n        doaction &lt;#object1#; OnLight&gt;\n    }\n    else {\n        msg &lt;You cannot 'light' that&#46;&gt;\n    }\n}[/code:2qkotjfm]\n\nThis second command behaves in exactly the same way as the verb, save that it sets a property (called 'with') on the object being lit to the object that is making the lighting possible.  (It sets the 'with' property of the lamp to 'matches'.)  In the verb and the command no script has been written that actually lights the lamp yet:  that's to be done in the OnLight action of the lamp itself, which both the verb and the command call:\n\n[code:2qkotjfm]define object &lt;lamp&gt;\n\n    take\n    properties &lt;with = NULL&gt;\n\n    action &lt;OnLight&gt; {\n\n        set string &lt;this; $thisobject$&gt;\n\n        if not property &lt;#this#; lit&gt; then {\n            if (#(this)&#58;with# = NULL) then { \n                if got &lt;matches&gt; then {\n                    property &lt;#this#; with = matches&gt;\n                    doaction &lt;#this#; OnLight&gt;\n                }\n                else {\n                    msg &lt;You should find something to light it with&#46;&gt;\n                }\n            }\n            else {\n                if (#(this)&#58;with# = matches) then {\n                    msg &lt;You light the lamp&#46;&gt;\n                    property &lt;#this#; lit&gt;\n                }\n                else {\n                    set string &lt;str; #(this)&#58;with#&gt;\n                    msg &lt;You cannot light the lamp with #(str)&#58;prefix# #@str#&#46;&gt;\n                }\n            }\n        }\n        else {\n            msg &lt;The lamp is already lit&#46;&gt;\n        }\n\n        property &lt;#this#; with = NULL&gt;\n\n    }\n\nend define\n[/code:2qkotjfm]\n\nThe above action (OnLight) first checks to see if the lamp is already lit.  If it's not, the script looks to see if an attempt was made to light this object (the lamp) [i:2qkotjfm]with[/i:2qkotjfm] anything.  We store any object that was used to try to light the lamp in a 'with' property on the lamp itself.  By default this property is set to NULL, and as you can see at the end of the OnLight action, it is reset to NULL after any attempt to light the lamp has been made.  If the 'with' property is NULL, a check is made to see if the player possesses the matches.  If they do, we set the 'with' property to 'matches' and recall the OnLight action immediately.  If they do not possess the matches, we tell the player they need to find something to light the lamp with.\n\nIf the 'with' property does not equal NULL, we check to see if it equals 'matches'.  If it does, the lamp is lit.  If it doesn't (as when the player tries to light the lamp with, say, a 'shoe'), a message is sent to the player indicating that they cannot light the lamp with whatever object they tried to light it with.  (IE, &quot;You cannot light the lamp with a shoe.&quot;)\n\n[snip]\n\n[/quote:2qkotjfm]\n\nI am playing with this, and am liking it a lot (thanks).  I do have one more question though.\n\nSay for arguments sake I had several items throughout the game (lamps, candles, fires, &amp;c.), is there a way I could call the contents of the OnLight script without having to write it out for each item?\n\nIf I am understanding the syntax correctly, running the command [b:2qkotjfm]light @object1 with @object2[/b:2qkotjfm] checks to see if [b:2qkotjfm]@object1[/b:2qkotjfm] has the [b:2qkotjfm]OnLight[/b:2qkotjfm] script, and if it does it runs that script.\n\nIs it possible to still do that, but have the [b:2qkotjfm]OnLight[/b:2qkotjfm] script point elsewhere.\n\nI was toying with procedures, but am not quite sure how to point everything all over the place.\n\nI was trying to straight swap some of the OnLight code inrto the procedure, but I can't get it to work.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Freak wrote:</cite>http://www.inform-fiction.org/manual/html/s50.html#p402</blockquote><br/><br/>Noted - thanks for the link<br/><br/><blockquote><cite>Overcat wrote:</cite><br/><br/>[snip]<br/><br/>Since Quest's verbs can only specify one noun (one object), you cannot implement 'verb OBJECT with OBJECT' as a verb (such as 'light lamp with matches').  So here is a command that mimics the logic of a verb:<br/><br/><pre><code>command &lt;light #@object1# with #@object2#&gt; {<br/><br/>    if action &lt;#object1#; OnLight&gt; then {<br/>        property &lt;#object1#; with = #object2#&gt;<br/>        doaction &lt;#object1#; OnLight&gt;<br/>    }<br/>    else {<br/>        msg &lt;You cannot 'light' that&#46;&gt;<br/>    }<br/>}</code></pre><br/><br/>This second command behaves in exactly the same way as the verb, save that it sets a property (called 'with') on the object being lit to the object that is making the lighting possible.  (It sets the 'with' property of the lamp to 'matches'.)  In the verb and the command no script has been written that actually lights the lamp yet:  that's to be done in the OnLight action of the lamp itself, which both the verb and the command call:<br/><br/><pre><code>define object &lt;lamp&gt;<br/><br/>    take<br/>    properties &lt;with = NULL&gt;<br/><br/>    action &lt;OnLight&gt; {<br/><br/>        set string &lt;this; $thisobject$&gt;<br/><br/>        if not property &lt;#this#; lit&gt; then {<br/>            if (#(this)&#58;with# = NULL) then { <br/>                if got &lt;matches&gt; then {<br/>                    property &lt;#this#; with = matches&gt;<br/>                    doaction &lt;#this#; OnLight&gt;<br/>                }<br/>                else {<br/>                    msg &lt;You should find something to light it with&#46;&gt;<br/>                }<br/>            }<br/>            else {<br/>                if (#(this)&#58;with# = matches) then {<br/>                    msg &lt;You light the lamp&#46;&gt;<br/>                    property &lt;#this#; lit&gt;<br/>                }<br/>                else {<br/>                    set string &lt;str; #(this)&#58;with#&gt;<br/>                    msg &lt;You cannot light the lamp with #(str)&#58;prefix# #@str#&#46;&gt;<br/>                }<br/>            }<br/>        }<br/>        else {<br/>            msg &lt;The lamp is already lit&#46;&gt;<br/>        }<br/><br/>        property &lt;#this#; with = NULL&gt;<br/><br/>    }<br/><br/>end define<br/></code></pre><br/><br/>The above action (OnLight) first checks to see if the lamp is already lit.  If it's not, the script looks to see if an attempt was made to light this object (the lamp) <span style=\"font-style:italic;\">with</span> anything.  We store any object that was used to try to light the lamp in a 'with' property on the lamp itself.  By default this property is set to NULL, and as you can see at the end of the OnLight action, it is reset to NULL after any attempt to light the lamp has been made.  If the 'with' property is NULL, a check is made to see if the player possesses the matches.  If they do, we set the 'with' property to 'matches' and recall the OnLight action immediately.  If they do not possess the matches, we tell the player they need to find something to light the lamp with.<br/><br/>If the 'with' property does not equal NULL, we check to see if it equals 'matches'.  If it does, the lamp is lit.  If it doesn't (as when the player tries to light the lamp with, say, a 'shoe'), a message is sent to the player indicating that they cannot light the lamp with whatever object they tried to light it with.  (IE, &quot;You cannot light the lamp with a shoe.&quot;)<br/><br/>[snip]<br/><br/></blockquote><br/><br/>I am playing with this, and am liking it a lot (thanks).  I do have one more question though.<br/><br/>Say for arguments sake I had several items throughout the game (lamps, candles, fires, &amp;c.), is there a way I could call the contents of the OnLight script without having to write it out for each item?<br/><br/>If I am understanding the syntax correctly, running the command <span style=\"font-weight:bold;\">light @object1 with @object2</span> checks to see if <span style=\"font-weight:bold;\">@object1</span> has the <span style=\"font-weight:bold;\">OnLight</span> script, and if it does it runs that script.<br/><br/>Is it possible to still do that, but have the <span style=\"font-weight:bold;\">OnLight</span> script point elsewhere.<br/><br/>I was toying with procedures, but am not quite sure how to point everything all over the place.<br/><br/>I was trying to straight swap some of the OnLight code inrto the procedure, but I can't get it to work.",
      "PostDate": "2009-05-24T17:43:36+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16624",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "Quest can handle the generalizing of different &quot;kinds of objects&quot; quite nicely with &quot;types&quot;.\n\nA type, as pointed out recently [url=http&#58;//www&#46;axeuk&#46;com/phpBB3/viewtopic&#46;php?f=1&amp;t=2038#p16600:1dklea61]here[/url:1dklea61], is just a collection of properties and actions that any object can inherit.  For instance:\n\n[code:1dklea61]define type &lt;item&gt;\n\n    take\n    weight = 10\n    size = rather small\n\n    action &lt;OnAttack&gt; {\n\n        set string &lt;this; $thisobject$&gt;\n        msg &lt;Now why would you attack #(this)&#58;prefix# #@this#?&gt;\n    }\n\n    action &lt;OnInspect&gt; {\n\n        set string &lt;this; $thisobject$&gt;\n        msg &lt;The #@this# weighs #(this)&#58;weight# stones and is #(this)&#58;size#&#46;&gt;\n    }\n\nend define[/code:1dklea61]\n\nThis sets up a type called 'item'.  You can read more about types in the documentation, [url=http&#58;//www&#46;axeuk&#46;com/quest/developer/documentation/script-type&#46;htm:1dklea61]here[/url:1dklea61].  The item type above can be &quot;tacked on&quot; to any object:\n\n[code:1dklea61]define object &lt;apple&gt;\n\n    look &lt;Just an apple&gt;\n    prefix &lt;an&gt;\n\n    type &lt;item&gt;\n\nend define[/code:1dklea61]\n\nEven though you've only defined the apple object with two tags (look and prefix), it also inherits all the properties and actions from any types it has been declared as.  In this case, the apple will inherit the take tag, a 'weight' and 'size' property, and an 'OnAttack' and 'OnInspect' action.\n\nIf you had verbs such as these:\n\n[code:1dklea61]verb &lt;attack&#58; OnAttack&gt; msg &lt;You can't 'attack' that&#46;&gt;\nverb &lt;inspect&#58; OnInspect&gt; msg &lt;You can't 'inspect' that&#46;&gt;[/code:1dklea61]\n\n...then typing 'attack apple' would message &quot;Now why would you attack an apple?&quot;, and 'inspect apple' would message &quot;The apple weighs 10 stones and is rather small.&quot;\n\nIt should be noted that whereas an object has its user-defined properties defined with the 'properties' tag, a type does not use the properties tag (I'm not sure why this is the case):\n\n[code:1dklea61]define object &lt;someObject&gt;\n\n    properties &lt;weight = 10; size = rather small&gt;\n\nend define\n\ndefine type &lt;someType&gt;\n\n    weight = 10\n    size = rather small\n\nend define[/code:1dklea61]\n\nSo rather than create a procedure or function to generalize the lamp behaviour (which you well can do), you can use a type, as shown below.  Remove the OnLight action and 'with' property from the lamp object and insert them into a 'lightable' type.  Then make the lamp object of the 'lightable' type.  (You must alter the OnLight action somewhat, so as to handle all sorts of lightable objects, not just the lamp.)\n\n[code:1dklea61]define type &lt;lightable&gt;\n\n    with = NULL\n\n    action &lt;OnLight&gt; {\n\n        set string &lt;this; $thisobject$&gt;\n\n        if not property &lt;#this#; lit&gt; then {\n            if (#(this)&#58;with# = NULL) then { \n                set string &lt;lightingObject; $GetValidLightingObject$&gt;\n                if (#lightingObject# &lt;&gt; NULL) then {\n                    property &lt;#this#; with = #lightingObject#&gt;\t\t\t\t\t\n                    msg &lt;(with #(lightingObject)&#58;prefix# #@lightingObject#) |xn&gt;\n                    doaction &lt;#this#; OnLight&gt;\n                }\n                else {\n                    msg &lt;You should find something to light it with&#46;&gt;\n                }\n            }\n            else {\n                if type &lt;#(this)&#58;with#; lighting&gt; then {\t\t\t\t\t\n                    set numeric &lt;i; $objectproperty(#(this)&#58;with#; uses)$&gt;\n                    if (%i% &gt; 0) then {\t\t\t\t\t\t\n                        property &lt;#this#; lit&gt;\n                        dec &lt;i&gt;\n                        property &lt;#(this)&#58;with#; uses = %i%&gt;\t\t\t\t\t\t\n                        doaction &lt;$thisobject$; AfterLight&gt;\n                        if (%i% = 0) then doaction &lt;#(this)&#58;with#; WhenEmpty&gt;\n                    }\n                    else {\n                        doaction &lt;#(this)&#58;with#; UseWhenEmpty&gt;\n                    }\n                }\n                else {\n                    set string &lt;str; #(this)&#58;with#&gt;\n                    msg &lt;You cannot light the lamp with #(str)&#58;prefix# #@str#&#46;&gt;\n                }\n            }\n        }\n        else {\n            msg &lt;The #@this# is already lit&#46;&gt;\n        }\n\n        property &lt;#this#; with = NULL&gt;\n    }\n\n    action &lt;AfterLight&gt; {\n    }\n\nend define[/code:1dklea61]\n\nThen you can define the lamp as follows:\n\n[code:1dklea61]define object &lt;lamp&gt;\n\t\n    take\n    prefix &lt;an unlit&gt;\n    look &lt;Just a lamp&#46;&gt;\n\t\t\n    type &lt;lightable&gt;\t\t\n\t\t\n    action &lt;AfterLight&gt; {\n\t\t\n        msg &lt;The lamp sputters, almost dies out, then burns brightly&#46;&gt;\n        property &lt;$thisobject$; prefix = a lit&gt;\n    }\n\t\nend define[/code:1dklea61]\n\nNow you'll have already noticed that there is a lot more going on here than before:  there is a function in the 'lightable' type called 'GetValidLightingObject'; we're tracking something called 'uses' on the object that lights the lamp; the lamp changes it's prefix from &quot;an unlit&quot; to &quot;a lit&quot;; and so on.  I'm not going to explain everything, I'll let you play with it.\n\nThere is also a type called 'lighting', which defines a type of object that can be used to light another object (like the matches).  In the attached file there are matches and a lighter, as well as four objects that can be &quot;lit&quot;:  a campfire, candle, torch, and lamp.  The lighter has very little fuel in it, and can only be used once.  The matches can be used three times.  Just experiment with changing things up - if you have any questions, are not sure how a particular effect is occurring, or don't know what some of the ASL is for, ask away.  Remember, the [url=http&#58;//www&#46;axeuk&#46;com/quest/developer/documentation/asl&#46;htm:1dklea61]documentation[/url:1dklea61] is one click away.",
      "EditableFormat": "bbcode",
      "HTML": "Quest can handle the generalizing of different &quot;kinds of objects&quot; quite nicely with &quot;types&quot;.<br/><br/>A type, as pointed out recently <a href=\"http&#58;//www&#46;axeuk&#46;com/phpBB3/viewtopic&#46;php?f=1&amp;t=2038#p16600\" rel=\"nofollow\">here</a>, is just a collection of properties and actions that any object can inherit.  For instance:<br/><br/><pre><code>define type &lt;item&gt;<br/><br/>    take<br/>    weight = 10<br/>    size = rather small<br/><br/>    action &lt;OnAttack&gt; {<br/><br/>        set string &lt;this; $thisobject$&gt;<br/>        msg &lt;Now why would you attack #(this)&#58;prefix# #@this#?&gt;<br/>    }<br/><br/>    action &lt;OnInspect&gt; {<br/><br/>        set string &lt;this; $thisobject$&gt;<br/>        msg &lt;The #@this# weighs #(this)&#58;weight# stones and is #(this)&#58;size#&#46;&gt;<br/>    }<br/><br/>end define</code></pre><br/><br/>This sets up a type called 'item'.  You can read more about types in the documentation, <a href=\"http&#58;//www&#46;axeuk&#46;com/quest/developer/documentation/script-type&#46;htm\" rel=\"nofollow\">here</a>.  The item type above can be &quot;tacked on&quot; to any object:<br/><br/><pre><code>define object &lt;apple&gt;<br/><br/>    look &lt;Just an apple&gt;<br/>    prefix &lt;an&gt;<br/><br/>    type &lt;item&gt;<br/><br/>end define</code></pre><br/><br/>Even though you've only defined the apple object with two tags (look and prefix), it also inherits all the properties and actions from any types it has been declared as.  In this case, the apple will inherit the take tag, a 'weight' and 'size' property, and an 'OnAttack' and 'OnInspect' action.<br/><br/>If you had verbs such as these:<br/><br/><pre><code>verb &lt;attack&#58; OnAttack&gt; msg &lt;You can't 'attack' that&#46;&gt;<br/>verb &lt;inspect&#58; OnInspect&gt; msg &lt;You can't 'inspect' that&#46;&gt;</code></pre><br/><br/>...then typing 'attack apple' would message &quot;Now why would you attack an apple?&quot;, and 'inspect apple' would message &quot;The apple weighs 10 stones and is rather small.&quot;<br/><br/>It should be noted that whereas an object has its user-defined properties defined with the 'properties' tag, a type does not use the properties tag (I'm not sure why this is the case):<br/><br/><pre><code>define object &lt;someObject&gt;<br/><br/>    properties &lt;weight = 10; size = rather small&gt;<br/><br/>end define<br/><br/>define type &lt;someType&gt;<br/><br/>    weight = 10<br/>    size = rather small<br/><br/>end define</code></pre><br/><br/>So rather than create a procedure or function to generalize the lamp behaviour (which you well can do), you can use a type, as shown below.  Remove the OnLight action and 'with' property from the lamp object and insert them into a 'lightable' type.  Then make the lamp object of the 'lightable' type.  (You must alter the OnLight action somewhat, so as to handle all sorts of lightable objects, not just the lamp.)<br/><br/><pre><code>define type &lt;lightable&gt;<br/><br/>    with = NULL<br/><br/>    action &lt;OnLight&gt; {<br/><br/>        set string &lt;this; $thisobject$&gt;<br/><br/>        if not property &lt;#this#; lit&gt; then {<br/>            if (#(this)&#58;with# = NULL) then { <br/>                set string &lt;lightingObject; $GetValidLightingObject$&gt;<br/>                if (#lightingObject# &lt;&gt; NULL) then {<br/>                    property &lt;#this#; with = #lightingObject#&gt;\t\t\t\t\t<br/>                    msg &lt;(with #(lightingObject)&#58;prefix# #@lightingObject#) |xn&gt;<br/>                    doaction &lt;#this#; OnLight&gt;<br/>                }<br/>                else {<br/>                    msg &lt;You should find something to light it with&#46;&gt;<br/>                }<br/>            }<br/>            else {<br/>                if type &lt;#(this)&#58;with#; lighting&gt; then {\t\t\t\t\t<br/>                    set numeric &lt;i; $objectproperty(#(this)&#58;with#; uses)$&gt;<br/>                    if (%i% &gt; 0) then {\t\t\t\t\t\t<br/>                        property &lt;#this#; lit&gt;<br/>                        dec &lt;i&gt;<br/>                        property &lt;#(this)&#58;with#; uses = %i%&gt;\t\t\t\t\t\t<br/>                        doaction &lt;$thisobject$; AfterLight&gt;<br/>                        if (%i% = 0) then doaction &lt;#(this)&#58;with#; WhenEmpty&gt;<br/>                    }<br/>                    else {<br/>                        doaction &lt;#(this)&#58;with#; UseWhenEmpty&gt;<br/>                    }<br/>                }<br/>                else {<br/>                    set string &lt;str; #(this)&#58;with#&gt;<br/>                    msg &lt;You cannot light the lamp with #(str)&#58;prefix# #@str#&#46;&gt;<br/>                }<br/>            }<br/>        }<br/>        else {<br/>            msg &lt;The #@this# is already lit&#46;&gt;<br/>        }<br/><br/>        property &lt;#this#; with = NULL&gt;<br/>    }<br/><br/>    action &lt;AfterLight&gt; {<br/>    }<br/><br/>end define</code></pre><br/><br/>Then you can define the lamp as follows:<br/><br/><pre><code>define object &lt;lamp&gt;<br/>\t<br/>    take<br/>    prefix &lt;an unlit&gt;<br/>    look &lt;Just a lamp&#46;&gt;<br/>\t\t<br/>    type &lt;lightable&gt;\t\t<br/>\t\t<br/>    action &lt;AfterLight&gt; {<br/>\t\t<br/>        msg &lt;The lamp sputters, almost dies out, then burns brightly&#46;&gt;<br/>        property &lt;$thisobject$; prefix = a lit&gt;<br/>    }<br/>\t<br/>end define</code></pre><br/><br/>Now you'll have already noticed that there is a lot more going on here than before:  there is a function in the 'lightable' type called 'GetValidLightingObject'; we're tracking something called 'uses' on the object that lights the lamp; the lamp changes it's prefix from &quot;an unlit&quot; to &quot;a lit&quot;; and so on.  I'm not going to explain everything, I'll let you play with it.<br/><br/>There is also a type called 'lighting', which defines a type of object that can be used to light another object (like the matches).  In the attached file there are matches and a lighter, as well as four objects that can be &quot;lit&quot;:  a campfire, candle, torch, and lamp.  The lighter has very little fuel in it, and can only be used once.  The matches can be used three times.  Just experiment with changing things up - if you have any questions, are not sure how a particular effect is occurring, or don't know what some of the ASL is for, ask away.  Remember, the <a href=\"http&#58;//www&#46;axeuk&#46;com/quest/developer/documentation/asl&#46;htm\" rel=\"nofollow\">documentation</a> is one click away.<div><a href=\"/attachment/16\">LightingAndLightables.asl</a></div>",
      "PostDate": "2009-05-24T22:42:52+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16625",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "Once again, thank you for taking the time to give such a good explanation.\n\nI shall play away.\n\nBTW - I downloaded Lighting&amp;Lightables.  It opens fine in QDK 4.0.5, but when I open it in 4.1 beta I get the following message...\n[quote:3vcc3os6]Error 438 - Object doesn't support this property or method\n\nin QDKGame.InitialiseTypes[/quote:3vcc3os6]",
      "EditableFormat": "bbcode",
      "HTML": "Once again, thank you for taking the time to give such a good explanation.<br/><br/>I shall play away.<br/><br/>BTW - I downloaded Lighting&amp;Lightables.  It opens fine in QDK 4.0.5, but when I open it in 4.1 beta I get the following message...<br/><blockquote><p>Error 438 - Object doesn't support this property or method<br/><br/>in QDKGame.InitialiseTypes</p></blockquote>",
      "PostDate": "2009-05-25T15:39:43+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16656",
      "UserId": 0,
      "Username": "Thanatos",
      "UserAvatar": "2160_1332681621.jpg",
      "UserGravatar": "c6621a24cf53876c4083bfb52afd2cc9",
      "EditableText": "My brain hurts.",
      "EditableFormat": "bbcode",
      "HTML": "My brain hurts.",
      "PostDate": "2009-05-30T09:10:41+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16661",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "Getting back into the code...  I am trying to fine tune it so that the adventurer can ONLY light things if he possesses them.\n\nI have tried editing the command to achieve this, and have taken:\n[code:2mnszijm]command &lt;light #@object1# with #@object2#&gt; {\n\tif action &lt;#object1#; OnLight&gt; then {\n\t\tproperty &lt;#object1#; with = #object2#&gt;\n\t\tdoaction &lt;#object1#; OnLight&gt;\n\t\t} else {\n\t\tmsg &lt;You cannot 'light' that&#46;&gt;\n\t\t}\n}[/code:2mnszijm]\n\nAnd added a further conditional statement.  It now looks like this:\n[code:2mnszijm]command &lt;light #@object1# with #@object2#&gt; {\n\tif got &lt;#@object1#&gt; then {\n\t\tif action &lt;#object1#; OnLight&gt; then {\n\t\t\tproperty &lt;#object1#; with = #object2#&gt;\n\t\t\tdoaction &lt;#object1#; OnLight&gt;\n\t\t\t} else {\n\t\t\tmsg &lt;You cannot 'light' that&#46;&gt;\n\t\t\t}\n\t\t} else {\n\t\tmsg &lt;You don't have that&#46;&gt;\n\t\t}\n}[/code:2mnszijm]\nBut doesn't seem to have made any difference.\n\nWhen I try to [b:2mnszijm]Light [i:2mnszijm]X[/i:2mnszijm][/b:2mnszijm] I get the maybe you need to find something spiel whether or not I have the lamp in my inventory.\n\nI am also trying to set a flag [b:2mnszijm]LampOn[/b:2mnszijm] so that I can control rooms that need illumination.  But again here I am struggling.\n\nI have it working in a simpler test file where I have added the verb [b:2mnszijm]Light[/b:2mnszijm] and therefore all I need to do is [b:2mnszijm]Light Lamp[/b:2mnszijm] (this was for testing only, as I wanted to use the [b:2mnszijm]Light [i:2mnszijm]X[/i:2mnszijm] with [i:2mnszijm]Y[/i:2mnszijm][/b:2mnszijm] formula.\n\nThe only problem I have with that is that while I have the conditional script set to check for the object in your inventory or in the room, unless you are holding the lit lamp, the room goes dark again <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( -->\nI have tried\n[code:2mnszijm]define room &lt;BottomOfShaft&gt;\n\talias &lt;bottom of the shaft&gt;\n\tprefix &lt;the&gt;\n\tlook &lt;The mine seems to have been abandoned for some time&#46;&gt;\n\tdescription {\n\t\tmsg &lt;You are at the bottom of the shaft&#46;|n&gt;\n\t\tif got &lt;Lamp&gt; and flag &lt;LampOn&gt; or here &lt;Lamp&gt; and flag &lt;LampOn&gt; then \n\t\tmsg &lt;#quest&#46;lookdesc#&gt; else \n\t\tmsg &lt;It is very dark!&gt;\n\t}\nend define[/code:2mnszijm]\nand\n[code:2mnszijm]define room &lt;BottomOfShaft&gt;\n\talias &lt;bottom of the shaft&gt;\n\tprefix &lt;the&gt;\n\tlook &lt;The mine seems to have been abandoned for some time&#46;&gt;\n\tdescription {\n\t\tmsg &lt;You are at the bottom of the shaft&#46;|n&gt;\n\t\tif got &lt;Lamp&gt; or here &lt;Lamp&gt; and flag &lt;LampOn&gt; then \n\t\tmsg &lt;#quest&#46;lookdesc#&gt; else \n\t\tmsg &lt;It is very dark!&gt;\n\t}\nend define[/code:2mnszijm]",
      "EditableFormat": "bbcode",
      "HTML": "Getting back into the code...  I am trying to fine tune it so that the adventurer can ONLY light things if he possesses them.<br/><br/>I have tried editing the command to achieve this, and have taken:<br/><pre><code>command &lt;light #@object1# with #@object2#&gt; {<br/>\tif action &lt;#object1#; OnLight&gt; then {<br/>\t\tproperty &lt;#object1#; with = #object2#&gt;<br/>\t\tdoaction &lt;#object1#; OnLight&gt;<br/>\t\t} else {<br/>\t\tmsg &lt;You cannot 'light' that&#46;&gt;<br/>\t\t}<br/>}</code></pre><br/><br/>And added a further conditional statement.  It now looks like this:<br/><pre><code>command &lt;light #@object1# with #@object2#&gt; {<br/>\tif got &lt;#@object1#&gt; then {<br/>\t\tif action &lt;#object1#; OnLight&gt; then {<br/>\t\t\tproperty &lt;#object1#; with = #object2#&gt;<br/>\t\t\tdoaction &lt;#object1#; OnLight&gt;<br/>\t\t\t} else {<br/>\t\t\tmsg &lt;You cannot 'light' that&#46;&gt;<br/>\t\t\t}<br/>\t\t} else {<br/>\t\tmsg &lt;You don't have that&#46;&gt;<br/>\t\t}<br/>}</code></pre><br/>But doesn't seem to have made any difference.<br/><br/>When I try to <span style=\"font-weight:bold;\">Light <span style=\"font-style:italic;\">X</span></span> I get the maybe you need to find something spiel whether or not I have the lamp in my inventory.<br/><br/>I am also trying to set a flag <span style=\"font-weight:bold;\">LampOn</span> so that I can control rooms that need illumination.  But again here I am struggling.<br/><br/>I have it working in a simpler test file where I have added the verb <span style=\"font-weight:bold;\">Light</span> and therefore all I need to do is <span style=\"font-weight:bold;\">Light Lamp</span> (this was for testing only, as I wanted to use the <span style=\"font-weight:bold;\">Light <span style=\"font-style:italic;\">X</span> with <span style=\"font-style:italic;\">Y</span></span> formula.<br/><br/>The only problem I have with that is that while I have the conditional script set to check for the object in your inventory or in the room, unless you are holding the lit lamp, the room goes dark again <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( --><br/>I have tried<br/><pre><code>define room &lt;BottomOfShaft&gt;<br/>\talias &lt;bottom of the shaft&gt;<br/>\tprefix &lt;the&gt;<br/>\tlook &lt;The mine seems to have been abandoned for some time&#46;&gt;<br/>\tdescription {<br/>\t\tmsg &lt;You are at the bottom of the shaft&#46;|n&gt;<br/>\t\tif got &lt;Lamp&gt; and flag &lt;LampOn&gt; or here &lt;Lamp&gt; and flag &lt;LampOn&gt; then <br/>\t\tmsg &lt;#quest&#46;lookdesc#&gt; else <br/>\t\tmsg &lt;It is very dark!&gt;<br/>\t}<br/>end define</code></pre><br/>and<br/><pre><code>define room &lt;BottomOfShaft&gt;<br/>\talias &lt;bottom of the shaft&gt;<br/>\tprefix &lt;the&gt;<br/>\tlook &lt;The mine seems to have been abandoned for some time&#46;&gt;<br/>\tdescription {<br/>\t\tmsg &lt;You are at the bottom of the shaft&#46;|n&gt;<br/>\t\tif got &lt;Lamp&gt; or here &lt;Lamp&gt; and flag &lt;LampOn&gt; then <br/>\t\tmsg &lt;#quest&#46;lookdesc#&gt; else <br/>\t\tmsg &lt;It is very dark!&gt;<br/>\t}<br/>end define</code></pre>",
      "PostDate": "2009-05-30T22:50:54+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16663",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "[quote=&quot;Carrot&quot;:1ncxwrgu]\n\n...\n\nI am also trying to set a flag [b:1ncxwrgu]LampOn[/b:1ncxwrgu] so that I can control rooms that need illumination.  But again here I am struggling.\n\nI have it working in a simpler test file where I have added the verb [b:1ncxwrgu]Light[/b:1ncxwrgu] and therefore all I need to do is [b:1ncxwrgu]Light Lamp[/b:1ncxwrgu] (this was for testing only, as I wanted to use the [b:1ncxwrgu]Light [i:1ncxwrgu]X[/i:1ncxwrgu] with [i:1ncxwrgu]Y[/i:1ncxwrgu][/b:1ncxwrgu] formula.\n\nThe only problem I have with that is that while I have the conditional script set to check for the object in your inventory or in the room, unless you are holding the lit lamp, the room goes dark again <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( -->\nI have tried\n[code:1ncxwrgu]define room &lt;BottomOfShaft&gt;\n\talias &lt;bottom of the shaft&gt;\n\tprefix &lt;the&gt;\n\tlook &lt;The mine seems to have been abandoned for some time&#46;&gt;\n\tdescription {\n\t\tmsg &lt;You are at the bottom of the shaft&#46;|n&gt;\n\t\tif got &lt;Lamp&gt; and flag &lt;LampOn&gt; or here &lt;Lamp&gt; and flag &lt;LampOn&gt; then \n\t\tmsg &lt;#quest&#46;lookdesc#&gt; \n\t\telse msg &lt;It is very dark!&gt;\n\t}\nend define[/code:1ncxwrgu]\nand\n[code:1ncxwrgu]define room &lt;BottomOfShaft&gt;\n\talias &lt;bottom of the shaft&gt;\n\tprefix &lt;the&gt;\n\tlook &lt;The mine seems to have been abandoned for some time&#46;&gt;\n\tdescription {\n\t\tmsg &lt;You are at the bottom of the shaft&#46;|n&gt;\n\t\tif got &lt;Lamp&gt; or here &lt;Lamp&gt; and flag &lt;LampOn&gt; then \n\t\tmsg &lt;#quest&#46;lookdesc#&gt; else \n\t\tmsg &lt;It is very dark!&gt;\n\t}\nend define[/code:1ncxwrgu][/quote:1ncxwrgu]\n\nI appear to have solved that last one by re-arranging the conditional.\n\n[code:1ncxwrgu]description {\n\t\tmsg &lt;You are at the bottom of the shaft&#46;|n&gt;\n\t\tif got &lt;Lamp&gt; and flag &lt;LampOn&gt; then \n\t\tmsg &lt;#quest&#46;lookdesc#&gt; else \n\t\tif here &lt;Lamp&gt; and flag &lt;LampOn&gt; then \n\t\tmsg &lt;#quest&#46;lookdesc#&gt; else \n\t\tmsg &lt;It is very dark!&#46;&gt;\n\t}\nend define\n[/code:1ncxwrgu]",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Carrot wrote:</cite><br/><br/>...<br/><br/>I am also trying to set a flag <span style=\"font-weight:bold;\">LampOn</span> so that I can control rooms that need illumination.  But again here I am struggling.<br/><br/>I have it working in a simpler test file where I have added the verb <span style=\"font-weight:bold;\">Light</span> and therefore all I need to do is <span style=\"font-weight:bold;\">Light Lamp</span> (this was for testing only, as I wanted to use the <span style=\"font-weight:bold;\">Light <span style=\"font-style:italic;\">X</span> with <span style=\"font-style:italic;\">Y</span></span> formula.<br/><br/>The only problem I have with that is that while I have the conditional script set to check for the object in your inventory or in the room, unless you are holding the lit lamp, the room goes dark again <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( --><br/>I have tried<br/><pre><code>define room &lt;BottomOfShaft&gt;<br/>\talias &lt;bottom of the shaft&gt;<br/>\tprefix &lt;the&gt;<br/>\tlook &lt;The mine seems to have been abandoned for some time&#46;&gt;<br/>\tdescription {<br/>\t\tmsg &lt;You are at the bottom of the shaft&#46;|n&gt;<br/>\t\tif got &lt;Lamp&gt; and flag &lt;LampOn&gt; or here &lt;Lamp&gt; and flag &lt;LampOn&gt; then <br/>\t\tmsg &lt;#quest&#46;lookdesc#&gt; <br/>\t\telse msg &lt;It is very dark!&gt;<br/>\t}<br/>end define</code></pre><br/>and<br/><pre><code>define room &lt;BottomOfShaft&gt;<br/>\talias &lt;bottom of the shaft&gt;<br/>\tprefix &lt;the&gt;<br/>\tlook &lt;The mine seems to have been abandoned for some time&#46;&gt;<br/>\tdescription {<br/>\t\tmsg &lt;You are at the bottom of the shaft&#46;|n&gt;<br/>\t\tif got &lt;Lamp&gt; or here &lt;Lamp&gt; and flag &lt;LampOn&gt; then <br/>\t\tmsg &lt;#quest&#46;lookdesc#&gt; else <br/>\t\tmsg &lt;It is very dark!&gt;<br/>\t}<br/>end define</code></pre></blockquote><br/><br/>I appear to have solved that last one by re-arranging the conditional.<br/><br/><pre><code>description {<br/>\t\tmsg &lt;You are at the bottom of the shaft&#46;|n&gt;<br/>\t\tif got &lt;Lamp&gt; and flag &lt;LampOn&gt; then <br/>\t\tmsg &lt;#quest&#46;lookdesc#&gt; else <br/>\t\tif here &lt;Lamp&gt; and flag &lt;LampOn&gt; then <br/>\t\tmsg &lt;#quest&#46;lookdesc#&gt; else <br/>\t\tmsg &lt;It is very dark!&#46;&gt;<br/>\t}<br/>end define<br/></code></pre>",
      "PostDate": "2009-05-31T17:17:46+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16664",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "[quote:3q5e20h6]And added a further conditional statement. It now looks like this:\n\n[code:3q5e20h6]command &lt;light #@object1# with #@object2#&gt; {\n   if got &lt;#@object1#&gt; then {\n      if action &lt;#object1#; OnLight&gt; then {\n         property &lt;#object1#; with = #object2#&gt;\n         doaction &lt;#object1#; OnLight&gt;\n         } else {\n         msg &lt;You cannot 'light' that&#46;&gt;\n         }\n      } else {\n      msg &lt;You don't have that&#46;&gt;\n      }\n}[/code:3q5e20h6]\nBut doesn't seem to have made any difference.\n[/quote:3q5e20h6]\n\nWell, you were on the right track.  You must omit the @ symbol when referencing the object inside the command script.  If you had put &quot;if got &lt;#object#&gt; then {&quot; instead of &quot;if got &lt;#@object#&gt; then {&quot;, it would have worked.\n\nYou would have had to update the lightable type as well, to also check if the player possessed the object they wished to light.  I've improved the LightingAndLightables demo to do this, as well as changed it to implement the 'article' property of objects.  You can read about this property [url=http&#58;//www&#46;axeuk&#46;com/quest/developer/documentation/script-object&#46;htm:3q5e20h6]here[/url:3q5e20h6].  The candle is now 'a bound set of candles', and has the article 'them', as opposed to 'it'.\n\nAlso, you cannot take the campfire, (which makes sense).  The lightable type is smart enough to figure out that you don't need to possess the campfire in order to light it.  Any lightable object that is takeable, however, (the rest of them) will require that the player possess that object before they can light it.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>And added a further conditional statement. It now looks like this:<br/><br/><pre><code>command &lt;light #@object1# with #@object2#&gt; {<br/>   if got &lt;#@object1#&gt; then {<br/>      if action &lt;#object1#; OnLight&gt; then {<br/>         property &lt;#object1#; with = #object2#&gt;<br/>         doaction &lt;#object1#; OnLight&gt;<br/>         } else {<br/>         msg &lt;You cannot 'light' that&#46;&gt;<br/>         }<br/>      } else {<br/>      msg &lt;You don't have that&#46;&gt;<br/>      }<br/>}</code></pre><br/>But doesn't seem to have made any difference.<br/></p></blockquote><br/><br/>Well, you were on the right track.  You must omit the @ symbol when referencing the object inside the command script.  If you had put &quot;if got &lt;#object#&gt; then {&quot; instead of &quot;if got &lt;#@object#&gt; then {&quot;, it would have worked.<br/><br/>You would have had to update the lightable type as well, to also check if the player possessed the object they wished to light.  I've improved the LightingAndLightables demo to do this, as well as changed it to implement the 'article' property of objects.  You can read about this property <a href=\"http&#58;//www&#46;axeuk&#46;com/quest/developer/documentation/script-object&#46;htm\" rel=\"nofollow\">here</a>.  The candle is now 'a bound set of candles', and has the article 'them', as opposed to 'it'.<br/><br/>Also, you cannot take the campfire, (which makes sense).  The lightable type is smart enough to figure out that you don't need to possess the campfire in order to light it.  Any lightable object that is takeable, however, (the rest of them) will require that the player possess that object before they can light it.<div><a href=\"/attachment/17\">LightingAndLightables.asl</a></div>",
      "PostDate": "2009-05-31T20:46:36+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16665",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "Thank you yet again. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Thank you yet again. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2009-05-31T22:24:35+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16666",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "[quote=&quot;Carrot&quot;:23eo4xmu]BTW - I downloaded Lighting&amp;Lightables.  It opens fine in QDK 4.0.5, but when I open it in 4.1 beta I get the following message...\n[quote:23eo4xmu]Error 438 - Object doesn't support this property or method\n\nin QDKGame.InitialiseTypes[/quote:23eo4xmu][/quote:23eo4xmu]\n\nWould just like to report I am getting this error witht hte new version of L&amp;L as well in 4.1, but still works fine in 4.0.5",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Carrot wrote:</cite>BTW - I downloaded Lighting&amp;Lightables.  It opens fine in QDK 4.0.5, but when I open it in 4.1 beta I get the following message...<br/><blockquote><p>Error 438 - Object doesn't support this property or method<br/><br/>in QDKGame.InitialiseTypes</blockquote></p></blockquote><br/><br/>Would just like to report I am getting this error witht hte new version of L&amp;L as well in 4.1, but still works fine in 4.0.5",
      "PostDate": "2009-05-31T22:35:49+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16667",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "[quote:1835dzjm]Would just like to report I am getting this error witht hte new version of L&amp;L as well in 4.1, but still works fine in 4.0.5[/quote:1835dzjm]\n\nWhich is odd, because I wrote that with 4.1 beta.  Perhaps one of us is not using the latest version.  Will reinstall to see if that's the case on my end.\n\n---edit---\n\nNope - works for me after reinstalling latest 4.1 beta.  Are you sure you've downloaded and installed the newest version?",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>Would just like to report I am getting this error witht hte new version of L&amp;L as well in 4.1, but still works fine in 4.0.5</p></blockquote><br/><br/>Which is odd, because I wrote that with 4.1 beta.  Perhaps one of us is not using the latest version.  Will reinstall to see if that's the case on my end.<br/><br/>---edit---<br/><br/>Nope - works for me after reinstalling latest 4.1 beta.  Are you sure you've downloaded and installed the newest version?",
      "PostDate": "2009-05-31T23:30:42+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16668",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "Had a quick play with that, and I am currently trying to swap a few things round.\n\nexample, when you try to [b:12ym305t]light lamp[/b:12ym305t] without holding either the lamp or matches/lighter you get the message [quote:12ym305t]You should find something to light it with[/quote:12ym305t]\n\nBut if you pick up some matches say, and then try to [b:12ym305t]light lamp[/b:12ym305t] (that is still on the floor) you get the message[quote:12ym305t](with a set of matches) You must possess the lamp to light it.[/quote:12ym305t]\n\nwhich seems a bit strange that you can try to light a lamp if you don't have the lamp or the matches, but as soon as you have the matches you can't try to light the lamp.\n\nI know all I have to do is give the error msg from [b:12ym305t]command &lt;light #@object1# with #@object2#&gt;[/b:12ym305t] to overide that in [b:12ym305t]define type &lt;lightable&gt;[/b:12ym305t]\n\nBut I am struggling to work out how to do that.",
      "EditableFormat": "bbcode",
      "HTML": "Had a quick play with that, and I am currently trying to swap a few things round.<br/><br/>example, when you try to <span style=\"font-weight:bold;\">light lamp</span> without holding either the lamp or matches/lighter you get the message <blockquote><p>You should find something to light it with</p></blockquote><br/><br/>But if you pick up some matches say, and then try to <span style=\"font-weight:bold;\">light lamp</span> (that is still on the floor) you get the message<blockquote><p>(with a set of matches) You must possess the lamp to light it.</p></blockquote><br/><br/>which seems a bit strange that you can try to light a lamp if you don't have the lamp or the matches, but as soon as you have the matches you can't try to light the lamp.<br/><br/>I know all I have to do is give the error msg from <span style=\"font-weight:bold;\">command &lt;light #@object1# with #@object2#&gt;</span> to overide that in <span style=\"font-weight:bold;\">define type &lt;lightable&gt;</span><br/><br/>But I am struggling to work out how to do that.",
      "PostDate": "2009-05-31T23:42:06+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16669",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "[quote=&quot;Overcat&quot;:249vtimb][quote:249vtimb]Would just like to report I am getting this error witht hte new version of L&amp;L as well in 4.1, but still works fine in 4.0.5[/quote:249vtimb]\n\nWhich is odd, because I wrote that with 4.1 beta.  Perhaps one of us is not using the latest version.  Will reinstall to see if that's the case on my end.\n\n---edit---\n\nNope - works for me after reinstalling latest 4.1 beta.  Are you sure you've downloaded and installed the newest version?[/quote:249vtimb]\n\n\nAhhh - I [i:249vtimb]was[/i:249vtimb] using build 4.1.202\n\nHave just U/G to 4.1.210\n\nAnd now it opens fine.\n\nMy Bad <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( -->",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Overcat wrote:</cite><blockquote><p>Would just like to report I am getting this error witht hte new version of L&amp;L as well in 4.1, but still works fine in 4.0.5</blockquote><br/><br/>Which is odd, because I wrote that with 4.1 beta.  Perhaps one of us is not using the latest version.  Will reinstall to see if that's the case on my end.<br/><br/>---edit---<br/><br/>Nope - works for me after reinstalling latest 4.1 beta.  Are you sure you've downloaded and installed the newest version?</p></blockquote><br/><br/><br/>Ahhh - I <span style=\"font-style:italic;\">was</span> using build 4.1.202<br/><br/>Have just U/G to 4.1.210<br/><br/>And now it opens fine.<br/><br/>My Bad <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( -->",
      "PostDate": "2009-05-31T23:47:14+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16671",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "[quote:lf6dy65d]which seems a bit strange that you can try to light a lamp if you don't have the lamp or the matches, but as soon as you have the matches you can't try to light the lamp.[/quote:lf6dy65d]\n\nYeah, that is somewhat inconsistent.\n\n[quote:lf6dy65d]I know all I have to do is give the error msg from command &lt;light #@object1# with #@object2#&gt; to overide that in define type &lt;lightable&gt;\n[/quote:lf6dy65d]\n\nYes, you would have to change that, and make another change in the lightable type.  You basically just want to check for possession (if the 'lightable' object is possessable) before you make the check to see if the player has a valid 'lighting' object.  I've made both changes.  I've also altered the GetValidLightingObject function - it's smaller and more efficient.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>which seems a bit strange that you can try to light a lamp if you don't have the lamp or the matches, but as soon as you have the matches you can't try to light the lamp.</p></blockquote><br/><br/>Yeah, that is somewhat inconsistent.<br/><br/><blockquote><p>I know all I have to do is give the error msg from command &lt;light #@object1# with #@object2#&gt; to overide that in define type &lt;lightable&gt;<br/></p></blockquote><br/><br/>Yes, you would have to change that, and make another change in the lightable type.  You basically just want to check for possession (if the 'lightable' object is possessable) before you make the check to see if the player has a valid 'lighting' object.  I've made both changes.  I've also altered the GetValidLightingObject function - it's smaller and more efficient.<div><a href=\"/attachment/18\">LightingAndLightables.asl</a></div>",
      "PostDate": "2009-06-01T17:16:35+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16695",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "Playing with this, and using it to modify some other things <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->.  You have been very helpful, thanks.\n\nOne thing though...\n\nI downloaded that latest file, opened it up, ran it and it worked fine.\n\nI added an extra room, created an exit to it from StartRoom, saved and run it again (All within QDK Pro 4.1).\n\nAnd the decsription is now minus the red line listing the exits.\n\nI have tried this several times and always get the same result.\n\nAny ideas?",
      "EditableFormat": "bbcode",
      "HTML": "Playing with this, and using it to modify some other things <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->.  You have been very helpful, thanks.<br/><br/>One thing though...<br/><br/>I downloaded that latest file, opened it up, ran it and it worked fine.<br/><br/>I added an extra room, created an exit to it from StartRoom, saved and run it again (All within QDK Pro 4.1).<br/><br/>And the decsription is now minus the red line listing the exits.<br/><br/>I have tried this several times and always get the same result.<br/><br/>Any ideas?<div><a href=\"/attachment/19\">LightingAndLightables.asl</a></div>",
      "PostDate": "2009-06-09T20:11:14+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16696",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "If you run that file and open the ASL Log Window, you'll see:\n\n[quote:1fcqiqz9]4:04:31 PM INIT: Quest Pro 4.1 (build 4.1.60)\n4:04:31 PM INIT: Opening file C:\\Users\\Jonathan\\Documents\\Desktop\\LLmodified.asl on 09/06/2009\n4:04:31 PM ERROR: No script given for 'afterlight' action data\n4:04:31 PM ERROR: No script given for 'afterlight' action data\n4:04:31 PM ERROR: No script given for 'afterlight' action data\n4:04:31 PM ERROR: No script given for 'afterlight' action data\n4:04:31 PM ERROR: No script given for 'whenempty' action data\n4:04:31 PM ERROR: No script given for 'whenempty' action data\n4:04:31 PM INIT: Finished loading file.\n4:04:32 PM ERROR: No string variable 'quest.doorways.out' defined.\n4:04:32 PM ERROR: No string variable 'quest.doorways.dirs' defined.\n4:04:32 PM ERROR: No string variable 'quest.doorways.places' defined.[/quote:1fcqiqz9]\n\nI found two things:\n\n1) Actions that I'd defined with no script in them had their curly braces removed by Quest.  This is a bug, as the action needs them (or Quest generates the 'no script given for action data' error.)\n2) The ASL version was changed from 400 as in the example to 410.  This is a 410 bug, which doesn't seem to set normally built-in string variables, such as #quest.doorways.dirs#.  I have a feeling this has to do with the way exits are being implemented now.\n\nItem 1 can be remedied by adding the curly braces to the empty actions that need them.  So, for instance\n\nAfterLight\n\nshould be changed to\n\nAfterLight {\n}\n\nItem 2 can be fixed by manually setting the asl version tag back to &lt;400&gt; instead of &lt;410&gt;.",
      "EditableFormat": "bbcode",
      "HTML": "If you run that file and open the ASL Log Window, you'll see:<br/><br/><blockquote><p>4:04:31 PM INIT: Quest Pro 4.1 (build 4.1.60)<br/>4:04:31 PM INIT: Opening file C:\\Users\\Jonathan\\Documents\\Desktop\\LLmodified.asl on 09/06/2009<br/>4:04:31 PM ERROR: No script given for 'afterlight' action data<br/>4:04:31 PM ERROR: No script given for 'afterlight' action data<br/>4:04:31 PM ERROR: No script given for 'afterlight' action data<br/>4:04:31 PM ERROR: No script given for 'afterlight' action data<br/>4:04:31 PM ERROR: No script given for 'whenempty' action data<br/>4:04:31 PM ERROR: No script given for 'whenempty' action data<br/>4:04:31 PM INIT: Finished loading file.<br/>4:04:32 PM ERROR: No string variable 'quest.doorways.out' defined.<br/>4:04:32 PM ERROR: No string variable 'quest.doorways.dirs' defined.<br/>4:04:32 PM ERROR: No string variable 'quest.doorways.places' defined.</p></blockquote><br/><br/>I found two things:<br/><br/>1) Actions that I'd defined with no script in them had their curly braces removed by Quest.  This is a bug, as the action needs them (or Quest generates the 'no script given for action data' error.)<br/>2) The ASL version was changed from 400 as in the example to 410.  This is a 410 bug, which doesn't seem to set normally built-in string variables, such as #quest.doorways.dirs#.  I have a feeling this has to do with the way exits are being implemented now.<br/><br/>Item 1 can be remedied by adding the curly braces to the empty actions that need them.  So, for instance<br/><br/>AfterLight<br/><br/>should be changed to<br/><br/>AfterLight {<br/>}<br/><br/>Item 2 can be fixed by manually setting the asl version tag back to &lt;400&gt; instead of &lt;410&gt;.",
      "PostDate": "2009-06-09T21:08:23+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16697",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "Thanks, I'll sort that out.",
      "EditableFormat": "bbcode",
      "HTML": "Thanks, I'll sort that out.",
      "PostDate": "2009-06-09T21:32:59+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16736",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "Those quest.doorways.out/dirs/places variables are obsolete in Quest 4.1, replaced simply by #quest.doorways#.",
      "EditableFormat": "bbcode",
      "HTML": "Those quest.doorways.out/dirs/places variables are obsolete in Quest 4.1, replaced simply by #quest.doorways#.",
      "PostDate": "2009-06-20T12:24:59+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16737",
      "UserId": 0,
      "Username": "Redsun",
      "UserAvatar": null,
      "UserGravatar": "05086f5eba3fc1b4c0e76511e8b41500",
      "EditableText": "How are things coming along Carrot?",
      "EditableFormat": "bbcode",
      "HTML": "How are things coming along Carrot?",
      "PostDate": "2009-06-21T00:41:24+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16738",
      "UserId": 0,
      "Username": "Carrot",
      "UserAvatar": null,
      "UserGravatar": "12db43b39ade4bc3e479fc45c24e4f23",
      "EditableText": "To be brutally honest, I haven't done much lately.\n\nToday, on top of being Fathers Day here in Blighty, is also my 6th Wedding Anniversary.  I have also been working long hours AND I will be moving house soon (hope to get completion dates middle of next week).  So been very busy <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->\n\nbut I haven't forgotten about it.\n\nOne thing I am trying to work on is darkness.  I am trying to work out the best way for a character to walk around tunnels, lets say, with a lamp - but not to be able to without.  I was thinking of using flags.  The one dilema I have come up with so far is what if the adventurer, for whatever reason, put the lamp down in a room.\n\nI was thinking that I would either have to make the lamp un-droppable in certain locations.  The other otpion would be to somehow control the exits.\n\nI am currently working on a script that is along the lines of &quot;if have, or if currentroom&quot;.  The problem with that is leaving the room if not picked up.  The problem with removing the currentroom side of things is the moment you put the lamp down  it all goes dark (not very realistic).\n\nMy third issue is with revealing the exits once the room is lit.  Say we are at the bottom of the shaft and there are exits N and U, we only want to show U until the lamp is lit becuase &quot;It is very dark&quot;.  \n\nI will admit to have not put much time (see above) into to trying to solve these issues, but the one thing I did stumble across to start with is the room description script you very kindly helped me with shows the other exits.\n\nI did have a thought that lighting the lamp could create exits, but once lit but left elsewhere those exits would still be visible.\n\nI have a lot to think on here, and I haven't even got a real storyline yet either.\n\nBut I am trying <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "To be brutally honest, I haven't done much lately.<br/><br/>Today, on top of being Fathers Day here in Blighty, is also my 6th Wedding Anniversary.  I have also been working long hours AND I will be moving house soon (hope to get completion dates middle of next week).  So been very busy <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) --><br/><br/>but I haven't forgotten about it.<br/><br/>One thing I am trying to work on is darkness.  I am trying to work out the best way for a character to walk around tunnels, lets say, with a lamp - but not to be able to without.  I was thinking of using flags.  The one dilema I have come up with so far is what if the adventurer, for whatever reason, put the lamp down in a room.<br/><br/>I was thinking that I would either have to make the lamp un-droppable in certain locations.  The other otpion would be to somehow control the exits.<br/><br/>I am currently working on a script that is along the lines of &quot;if have, or if currentroom&quot;.  The problem with that is leaving the room if not picked up.  The problem with removing the currentroom side of things is the moment you put the lamp down  it all goes dark (not very realistic).<br/><br/>My third issue is with revealing the exits once the room is lit.  Say we are at the bottom of the shaft and there are exits N and U, we only want to show U until the lamp is lit becuase &quot;It is very dark&quot;.  <br/><br/>I will admit to have not put much time (see above) into to trying to solve these issues, but the one thing I did stumble across to start with is the room description script you very kindly helped me with shows the other exits.<br/><br/>I did have a thought that lighting the lamp could create exits, but once lit but left elsewhere those exits would still be visible.<br/><br/>I have a lot to think on here, and I haven't even got a real storyline yet either.<br/><br/>But I am trying <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2009-06-21T10:49:24+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16741",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "There are several different ways of doing all of those things.\n\nI would recommend trying to come up with a &quot;generic&quot; way of implementing light/darkness. That way if you create, for instance, a glowing wand as an unanticipated development, you won't have to adjust your code to accommodate the wand's emission of light.  So any dark location that has an exposed &quot;lit&quot; object in it would show a description, otherwise it would not.\n\nIf you need help coming up with a way to do this, let me know.  (If so, start a new thread with a descriptive title.)",
      "EditableFormat": "bbcode",
      "HTML": "There are several different ways of doing all of those things.<br/><br/>I would recommend trying to come up with a &quot;generic&quot; way of implementing light/darkness. That way if you create, for instance, a glowing wand as an unanticipated development, you won't have to adjust your code to accommodate the wand's emission of light.  So any dark location that has an exposed &quot;lit&quot; object in it would show a description, otherwise it would not.<br/><br/>If you need help coming up with a way to do this, let me know.  (If so, start a new thread with a descriptive title.)",
      "PostDate": "2009-06-21T13:35:08+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16744",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "A few other things to keep in mind:\n\n1)  What happens if the player puts the lamp in a container?\n2)  What happens if the player tries examining things while it's dark?\n3)  If the room is dark, and the player tries referring to an object on the floor, what happens?",
      "EditableFormat": "bbcode",
      "HTML": "A few other things to keep in mind:<br/><br/>1)  What happens if the player puts the lamp in a container?<br/>2)  What happens if the player tries examining things while it's dark?<br/>3)  If the room is dark, and the player tries referring to an object on the floor, what happens?",
      "PostDate": "2009-06-23T05:25:40+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16747",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "Yeah, good things to remember.  Also, if the room is dark it may still be plausible to &quot;feel&quot; or &quot;feel around for&quot; ambient objects, though I haven't attempted to script that yet.",
      "EditableFormat": "bbcode",
      "HTML": "Yeah, good things to remember.  Also, if the room is dark it may still be plausible to &quot;feel&quot; or &quot;feel around for&quot; ambient objects, though I haven't attempted to script that yet.",
      "PostDate": "2009-06-23T15:43:30+01:00",
      "LastEditDate": null
    }
  ]
}
