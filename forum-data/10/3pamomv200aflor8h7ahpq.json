{
  "Topic": {
    "TopicId": "3pamomv200aflor8h7ahpq",
    "ForumId": "10",
    "Title": "Changing the Colour of an {exit:} link",
    "LastUpdated": "2021-05-12T18:49:49.539104Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "d880f263-414b-438a-b23b-e1c2afee8e90",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Heya all,\r\n\r\nRight now I'm using a set up where all my exits are ```{exit:}``` links. For example, going from The Bar to The Bathroom through the Door uses an ```{exit:ToBarBathroom: door}```. But I want my exit tags to be a different colour to my `{object}` tag.\r\n\r\n \r\nWondering there's a way to change the colour of an ```{exit:text}``` using ```{colour:text} ```.\r\n\r\nI've tried a few permutations already, like `{exit:ToBarBathroom:{colour:crimson:door}` and tried changing the door alias to `{colour:crimson:door}` but haven't found anything that works properly.\r\n\r\nAny suggestions would be greatly appreciated, thanks",
      "EditableFormat": "markdown",
      "HTML": "<p>Heya all,</p>\n<p>Right now I'm using a set up where all my exits are <code>{exit:}</code> links. For example, going from The Bar to The Bathroom through the Door uses an <code>{exit:ToBarBathroom: door}</code>. But I want my exit tags to be a different colour to my <code>{object}</code> tag.</p>\n<p>Wondering there's a way to change the colour of an <code>{exit:text}</code> using <code>{colour:text}</code>.</p>\n<p>I've tried a few permutations already, like <code>{exit:ToBarBathroom:{colour:crimson:door}</code> and tried changing the door alias to <code>{colour:crimson:door}</code> but haven't found anything that works properly.</p>\n<p>Any suggestions would be greatly appreciated, thanks</p>\n\n",
      "PostDate": "2021-05-12T18:49:49.539104Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "73294621-03c7-47a0-9ca7-3eec52e73318",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\nI'll show you how I found the required information to do this.\r\n\r\nFirst, when the game is running and an exit link is on the screen, open the HTML Tools.\r\n\r\nClick on the magnifying glass, then click on an exit link.\r\n\r\nThis will select the element in the HTML Tools elements viewer.\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/118030594-21627b80-b32b-11eb-8b11-2567bbe3e24c.png)\r\n\r\n---\r\nMy link's HTML is:\r\n\r\n```<a style=\"font-family:Georgia, serif;color:Blue;font-size:12pt;\" class=\"cmdlink exitlink\" data-elementid=\"n_from_room\" data-command=\"go north\">north</a>```\r\n\r\nSee how it has two classes? ```cmdlink``` and ```exitlink```\r\n\r\nThat means we can use the Quest function ```JS.setCss()``` to set it to whatever color we please, like so:\r\n\r\n```\r\nJS.setCss(\".exitlink\",\"color:green\")\r\n```\r\n\r\n---\r\nI chose green, but you can choose whatever color you like.\r\n\r\n---\r\n## How to add this code to a script to make the changes actually work all the time\r\n\r\n**EDIT**\r\n\r\nI had misinformation here. (Whoops.)\r\n\r\nClick [here](https://textadventures.co.uk/forum/quest/topic/3pamomv200aflor8h7ahpq/changing-the-colour-of-an-exit-link#864d2eb9-a68f-4bda-8642-58e1d911b1df) to scroll down to the post with the answer!",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p>I'll show you how I found the required information to do this.</p>\n<p>First, when the game is running and an exit link is on the screen, open the HTML Tools.</p>\n<p>Click on the magnifying glass, then click on an exit link.</p>\n<p>This will select the element in the HTML Tools elements viewer.</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/118030594-21627b80-b32b-11eb-8b11-2567bbe3e24c.png\" alt=\"image\"></p>\n<hr>\n<p>My link's HTML is:</p>\n<p><code>&lt;a style=\"font-family:Georgia, serif;color:Blue;font-size:12pt;\" class=\"cmdlink exitlink\" data-elementid=\"n_from_room\" data-command=\"go north\"&gt;north&lt;/a&gt;</code></p>\n<p>See how it has two classes? <code>cmdlink</code> and <code>exitlink</code></p>\n<p>That means we can use the Quest function <code>JS.setCss()</code> to set it to whatever color we please, like so:</p>\n<pre><code>JS.setCss(\".exitlink\",\"color:green\")\n</code></pre>\n<hr>\n<p>I chose green, but you can choose whatever color you like.</p>\n<hr>\n<h2>How to add this code to a script to make the changes actually work all the time</h2>\n<p><strong>EDIT</strong></p>\n<p>I had misinformation here. (Whoops.)</p>\n<p>Click <a href=\"https://textadventures.co.uk/forum/quest/topic/3pamomv200aflor8h7ahpq/changing-the-colour-of-an-exit-link#864d2eb9-a68f-4bda-8642-58e1d911b1df\">here</a> to scroll down to the post with the answer!</p>\n\n",
      "PostDate": "2021-05-12T19:25:30.5195679Z",
      "LastEditDate": "2021-05-12T19:52:37.1021375Z",
      "link": null
    },
    {
      "PostId": "19055a20-02b8-4f72-80f9-b3fe699cf180",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "PS\r\n\r\nI'm wrong. Putting that code in that script doesn't do anything.\r\n\r\nHold on . . .",
      "EditableFormat": "markdown",
      "HTML": "<p>PS</p>\n<p>I'm wrong. Putting that code in that script doesn't do anything.</p>\n<p>Hold on . . .</p>\n\n",
      "PostDate": "2021-05-12T19:40:15.9720759Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "864d2eb9-a68f-4bda-8642-58e1d911b1df",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ha!\r\n\r\nPut it in the game object's script: \"Script when entering a room\".\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/118035230-91bfcb80-b330-11eb-9cc2-d43b72bc2774.png)\r\n\r\n---\r\nThat's the only place you need it.\r\n\r\nIt even works when loading a saved game.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ha!</p>\n<p>Put it in the game object's script: \"Script when entering a room\".</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/118035230-91bfcb80-b330-11eb-9cc2-d43b72bc2774.png\" alt=\"image\"></p>\n<hr>\n<p>That's the only place you need it.</p>\n<p>It even works when loading a saved game.</p>\n\n",
      "PostDate": "2021-05-12T19:50:20.7306707Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "40767b5d-9ce4-4543-ae86-321571018a91",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm not sure why exits don't have an option for link colour like objects do.\r\n\r\nHere's a quick script to enable this functionality.  In the desktop editor, you could find this function and modify it. If you're on the web editor, I'll post an alternate version below.\r\n```\r\n  <function name=\"ProcessTextCommand_Exit\" type=\"string\" parameters=\"section, data\">\r\n    exitname = Mid(section, 6)\r\n    text = \"\"\r\n    colon = Instr(exitname, \":\")\r\n    if (colon > 0) {\r\n      text = Mid(exitname, colon + 1)\r\n      exitname = Left(exitname, colon - 1)\r\n    }\r\n    exit = ObjectForTextProcessor(exitname)\r\n    if (exit = null) {\r\n      exits = FilterByAttribute (FilterByAttribute (AllExits(), \"alias\", exitname), \"parent\", game.pov.parent)\r\n      if (ListCount (exits) = 1) {\r\n        exit = ListItem (exits, 0)\r\n      }\r\n    }\r\n    if (exit = null) {\r\n      return (\"@@@open@@@\" + ProcessTextSection(section, data) + \"@@@close@@@\")\r\n    }\r\n    else {\r\n      if (LengthOf(text) = 0) {\r\n        text = SafeXML(GetDisplayAlias(exit))\r\n      }\r\n      text = ProcessTextSection (text, data)\r\n      if (game.enablehyperlinks) {\r\n        colour = \"\"\r\n        if (HasString(object, \"linkcolour\") and GetUIOption(\"UseGameColours\") = \"true\") {\r\n          style = GetCurrentTextFormat (object.linkcolour)\r\n        }\r\n        else {\r\n          style = GetCurrentLinkTextFormat()\r\n        }\r\n        verbs = GetDisplayVerbs(exit)\r\n        command = LCase(StringListItem(verbs, 0)) + \" \" + exit.alias\r\n        return (\"<a style=\\\"\" + style + \"\\\" class=\\\"cmdlink exitlink\\\" data-elementid=\\\"\" + exit.name + \"\\\" data-command=\\\"\" + command + \"\\\">\" + text + \"</a>\")\r\n      }\r\n      else {\r\n        return (text)\r\n      }\r\n    }\r\n</function>\r\n```\r\n\r\nThis should:\r\n* Allow you to set the colour of exit links by giving an exit a `linkcolour` attribute, like you can for objects\r\n* Allows `{exit:ToBarBathroom:{colour:crimson:door}}` to work as a backup\r\n* Allows `{exit:north}` to work (a common complaint from new users who expect it to work like that; if you give the wrong name for an exit, it tries it as an alias instead)\r\n\r\nIf you're on the desktop editor you should be able to change the function. If you don't know how, someone who has the desktop version could help you. \r\n\r\n<details><summary>Using the web version, you could add this modified version to your game's `start` script (click here to reveal)</summary>\r\n\r\n```\r\ngame.textprocessorcommands = game.textprocessorcommands\r\nmodified_exit => {\r\n    exitname = Mid(section, 6)\r\n    text = \"\"\r\n    colon = Instr(exitname, \":\")\r\n    if (colon > 0) {\r\n      text = Mid(exitname, colon + 1)\r\n      exitname = Left(exitname, colon - 1)\r\n    }\r\n    exit = ObjectForTextProcessor(exitname)\r\n    if (exit = null) {\r\n      exits = FilterByAttribute (FilterByAttribute (AllExits(), \"alias\", exitname), \"parent\", game.pov.parent)\r\n      if (ListCount (exits) = 1) {\r\n        exit = ListItem (exits, 0)\r\n      }\r\n    }\r\n    if (exit = null) {\r\n      game.textprocessorcommandresult = \"@@@open@@@\" + ProcessTextSection(section, data) + \"@@@close@@@\"\r\n    }\r\n    else {\r\n      if (LengthOf(text) = 0) {\r\n        text = SafeXML(GetDisplayAlias(exit))\r\n      }\r\n      text = ProcessTextSection (text, data)\r\n      if (game.enablehyperlinks) {\r\n        colour = \"\"\r\n        if (HasString(object, \"linkcolour\") and GetUIOption(\"UseGameColours\") = \"true\") {\r\n          style = GetCurrentTextFormat (object.linkcolour)\r\n        }\r\n        else {\r\n          style = GetCurrentLinkTextFormat()\r\n        }\r\n        verbs = GetDisplayVerbs(exit)\r\n        command = LCase(StringListItem(verbs, 0)) + \" \" + alias\r\n        game.textprocessorcommandresult = \"<a style=\\\"\" + style + \"\\\" class=\\\"cmdlink exitlink\\\" data-elementid=\\\"\" + exit.name + \"\\\" data-command=\\\"\" + command + \"\\\">\" + text + \"</a>\"\r\n      }\r\n      else {\r\n        game.textprocessorcommandresult = text\r\n      }\r\n    }\r\n}\r\ndictionary remove (game.textprocessorcommands, \"exit:\")\r\ndictionary add (game.textprocessorcommands, \"exit:\", modified_exit)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not sure why exits don't have an option for link colour like objects do.</p>\n<p>Here's a quick script to enable this functionality.  In the desktop editor, you could find this function and modify it. If you're on the web editor, I'll post an alternate version below.</p>\n<pre><code>  &lt;function name=\"ProcessTextCommand_Exit\" type=\"string\" parameters=\"section, data\"&gt;\n    exitname = Mid(section, 6)\n    text = \"\"\n    colon = Instr(exitname, \":\")\n    if (colon &gt; 0) {\n      text = Mid(exitname, colon + 1)\n      exitname = Left(exitname, colon - 1)\n    }\n    exit = ObjectForTextProcessor(exitname)\n    if (exit = null) {\n      exits = FilterByAttribute (FilterByAttribute (AllExits(), \"alias\", exitname), \"parent\", game.pov.parent)\n      if (ListCount (exits) = 1) {\n        exit = ListItem (exits, 0)\n      }\n    }\n    if (exit = null) {\n      return (\"@@@open@@@\" + ProcessTextSection(section, data) + \"@@@close@@@\")\n    }\n    else {\n      if (LengthOf(text) = 0) {\n        text = SafeXML(GetDisplayAlias(exit))\n      }\n      text = ProcessTextSection (text, data)\n      if (game.enablehyperlinks) {\n        colour = \"\"\n        if (HasString(object, \"linkcolour\") and GetUIOption(\"UseGameColours\") = \"true\") {\n          style = GetCurrentTextFormat (object.linkcolour)\n        }\n        else {\n          style = GetCurrentLinkTextFormat()\n        }\n        verbs = GetDisplayVerbs(exit)\n        command = LCase(StringListItem(verbs, 0)) + \" \" + exit.alias\n        return (\"&lt;a style=\\\"\" + style + \"\\\" class=\\\"cmdlink exitlink\\\" data-elementid=\\\"\" + exit.name + \"\\\" data-command=\\\"\" + command + \"\\\"&gt;\" + text + \"&lt;/a&gt;\")\n      }\n      else {\n        return (text)\n      }\n    }\n&lt;/function&gt;\n</code></pre>\n<p>This should:</p>\n<ul>\n<li>Allow you to set the colour of exit links by giving an exit a <code>linkcolour</code> attribute, like you can for objects</li>\n<li>Allows <code>{exit:ToBarBathroom:{colour:crimson:door}}</code> to work as a backup</li>\n<li>Allows <code>{exit:north}</code> to work (a common complaint from new users who expect it to work like that; if you give the wrong name for an exit, it tries it as an alias instead)</li>\n</ul>\n<p>If you're on the desktop editor you should be able to change the function. If you don't know how, someone who has the desktop version could help you.</p>\n<details><summary>Using the web version, you could add this modified version to your game's `start` script (click here to reveal)</summary>\n<pre><code>game.textprocessorcommands = game.textprocessorcommands\nmodified_exit =&gt; {\n    exitname = Mid(section, 6)\n    text = \"\"\n    colon = Instr(exitname, \":\")\n    if (colon &gt; 0) {\n      text = Mid(exitname, colon + 1)\n      exitname = Left(exitname, colon - 1)\n    }\n    exit = ObjectForTextProcessor(exitname)\n    if (exit = null) {\n      exits = FilterByAttribute (FilterByAttribute (AllExits(), \"alias\", exitname), \"parent\", game.pov.parent)\n      if (ListCount (exits) = 1) {\n        exit = ListItem (exits, 0)\n      }\n    }\n    if (exit = null) {\n      game.textprocessorcommandresult = \"@@@open@@@\" + ProcessTextSection(section, data) + \"@@@close@@@\"\n    }\n    else {\n      if (LengthOf(text) = 0) {\n        text = SafeXML(GetDisplayAlias(exit))\n      }\n      text = ProcessTextSection (text, data)\n      if (game.enablehyperlinks) {\n        colour = \"\"\n        if (HasString(object, \"linkcolour\") and GetUIOption(\"UseGameColours\") = \"true\") {\n          style = GetCurrentTextFormat (object.linkcolour)\n        }\n        else {\n          style = GetCurrentLinkTextFormat()\n        }\n        verbs = GetDisplayVerbs(exit)\n        command = LCase(StringListItem(verbs, 0)) + \" \" + alias\n        game.textprocessorcommandresult = \"&lt;a style=\\\"\" + style + \"\\\" class=\\\"cmdlink exitlink\\\" data-elementid=\\\"\" + exit.name + \"\\\" data-command=\\\"\" + command + \"\\\"&gt;\" + text + \"&lt;/a&gt;\"\n      }\n      else {\n        game.textprocessorcommandresult = text\n      }\n    }\n}\ndictionary remove (game.textprocessorcommands, \"exit:\")\ndictionary add (game.textprocessorcommands, \"exit:\", modified_exit)\n</code></pre>\n\n</details>",
      "PostDate": "2021-05-12T21:42:38.7452581Z",
      "LastEditDate": "2021-05-12T22:51:51.6429753Z",
      "link": null
    },
    {
      "PostId": "383e4103-cf0e-48c8-aca8-0f3fb9d2ac12",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That looks pretty neat!",
      "EditableFormat": "markdown",
      "HTML": "<p>That looks pretty neat!</p>\n\n",
      "PostDate": "2021-05-12T22:20:38.2335987Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5f4ea03c-34b3-4414-a96c-4447f483e8e5",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Interestingly, you could modify KV's code to do some pretty neat stuff. Like:\r\n```\r\nJS.setCss(\".exitlink[data-elementid=exit124]:not(.disabled)\",\"color:green\")\r\n```\r\nWhen run, it should change the colour of all currently-enabled links to `exit124` (using the exit's name)\r\n\r\nOr:\r\n```\r\nJS.setCss(\".exitlink[data-command$=north]:not(.disabled)\",\"color:red\")\r\n```\r\nif you want to do it by alias :)\r\n\r\n(note that these will only change the colour of links that were already printed. New links will go back to the default colour. But I think some people might find a use for it)",
      "EditableFormat": "markdown",
      "HTML": "<p>Interestingly, you could modify KV's code to do some pretty neat stuff. Like:</p>\n<pre><code>JS.setCss(\".exitlink[data-elementid=exit124]:not(.disabled)\",\"color:green\")\n</code></pre>\n<p>When run, it should change the colour of all currently-enabled links to <code>exit124</code> (using the exit's name)</p>\n<p>Or:</p>\n<pre><code>JS.setCss(\".exitlink[data-command$=north]:not(.disabled)\",\"color:red\")\n</code></pre>\n<p>if you want to do it by alias :)</p>\n<p>(note that these will only change the colour of links that were already printed. New links will go back to the default colour. But I think some people might find a use for it)</p>\n\n",
      "PostDate": "2021-05-12T22:59:05.3756023Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "dfc226cc-908e-4b12-ae4d-21df0a6ff094",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Froody!\r\n\r\nCan you manipulate disabled links, too?",
      "EditableFormat": "markdown",
      "HTML": "<p>Froody!</p>\n<p>Can you manipulate disabled links, too?</p>\n\n",
      "PostDate": "2021-05-12T23:43:09.8471838Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0464591d-cbc6-4fb0-a5bc-301b6095d65c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Can you manipulate disabled links, too?\r\n\r\nThat's why I included the `:not(.disabled)` selector. Although I think in this case it might not be necessary, as the stylesheet includes a rule that sets `color: inherit !important` for disabled links; so they will always be the same colour as the containing text unless you give them another `!important` color.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Can you manipulate disabled links, too?</p>\n</blockquote>\n<p>That's why I included the <code>:not(.disabled)</code> selector. Although I think in this case it might not be necessary, as the stylesheet includes a rule that sets <code>color: inherit !important</code> for disabled links; so they will always be the same colour as the containing text unless you give them another <code>!important</code> color.</p>\n\n",
      "PostDate": "2021-05-13T00:06:29.7188471Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6cec8eb7-d997-4ee6-886d-66be29658e13",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">  the stylesheet includes a rule that sets color: inherit !important for disabled links; so they will always be the same colour as the containing text unless you give them another !important color.\r\n\r\nI stumbled upon a way to (sort of) handle it before reading your last post.\r\n\r\n```{color:red{exit:exitname}}```\r\n\r\nThat makes that particular bit of text turn red when disabled, but it doesn't effect the link color.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>the stylesheet includes a rule that sets color: inherit !important for disabled links; so they will always be the same colour as the containing text unless you give them another !important color.</p>\n</blockquote>\n<p>I stumbled upon a way to (sort of) handle it before reading your last post.</p>\n<p><code>{color:red{exit:exitname}}</code></p>\n<p>That makes that particular bit of text turn red when disabled, but it doesn't effect the link color.</p>\n\n",
      "PostDate": "2021-05-13T00:20:26.205332Z",
      "LastEditDate": "2021-05-13T00:20:52.7338142Z",
      "link": null
    }
  ]
}
