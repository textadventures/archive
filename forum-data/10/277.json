{
  "Topic": {
    "TopicId": "277",
    "ForumId": "10",
    "Title": "TypeLib Container Question",
    "LastUpdated": "2004-01-01T11:31:36+00:00",
    "ReplyCount": 6
  },
  "Posts": [
    {
      "PostId": "1949",
      "UserId": 0,
      "Username": "Alf",
      "UserAvatar": null,
      "UserGravatar": "df6fcdbeed91f46db8f5428ad267174e",
      "EditableText": "I downloaded and tried the TypeLib library last night.  Neat!  Am having one small problem.\n\nI create a container object and a containable object.  I can pick up and take the container (a backpack), or I can pick up and take the containable object (a seashell).  However, I can't put the seashell into the backpack.  If I start the game with the shell in the backpack, I can take it out.  But, I can't put it back in.\n\nExtremely new to this, so my apologies if it's a dumb question.\n\nThanks!\n\nAlf",
      "EditableFormat": "bbcode",
      "HTML": "I downloaded and tried the TypeLib library last night.  Neat!  Am having one small problem.<br/><br/>I create a container object and a containable object.  I can pick up and take the container (a backpack), or I can pick up and take the containable object (a seashell).  However, I can't put the seashell into the backpack.  If I start the game with the shell in the backpack, I can take it out.  But, I can't put it back in.<br/><br/>Extremely new to this, so my apologies if it's a dumb question.<br/><br/>Thanks!<br/><br/>Alf",
      "PostDate": "2003-12-31T12:50:33+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "1953",
      "UserId": 0,
      "Username": "Anonymous",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Alf wrote\n\n[quote:3lrf3pqu]\nI create a container object and a containable object. I can pick up and take the container (a backpack), or I can pick up and take the containable object (a seashell). However, I can't put the seashell into the backpack. If I start the game with the shell in the backpack, I can take it out. But, I can't put it back in. [/quote:3lrf3pqu]\n\nAlmost certainly something \"not quite set up right\" in your code. You don't say whether you are using QDK or doing your coding by hand, but either way there are a few little foibles to using the currently available version of 'typelib.qlb'.\n\nIf you are using QDK you have to ingore the default TAKE tab, my typelib by necessity intercepts all take/give commands so putting anything in here will cause peculiar results. Instead go to the typelib added BASICS tab and check regular object as takeable there. Then proceed by making the backpack and seashell both takeable with the former also made a container and the latter a containable.\n\nAt that point save and run and it will all work as you require.  <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->\n\nSorry that it seems a bit messy to have to ignore bits of QDK in favour of the typelib added bits, but I think the easy to get results are worth the inconvenience.\n\nHere's a demo of the required items in ASL, should you be a hand coder, this will clear up what you need to do. If you are NOT a hand coder, cut and paste the following code into notepad and save it as \"demo.asl\" in your Quest working folder (or wherever you put typelib.qlb) - you can then run it in Quest to prove it works and open it in QDK to see how I set it up.\n\n[quote:3lrf3pqu]\n\n' Created with QDK Pro 3.5\n\n!include &lt;Typelib.qlb&gt;\n\ndefine game &lt;demo&gt;\n\tasl-version &lt;350&gt;\n\tgametype singleplayer\n\tstart &lt;here&gt;\n\tgame info &lt;Created with QDK Pro 3.5&gt;\nend define\n\ndefine synonyms\nend define\n\ndefine room &lt;here&gt;\n\tlook &lt;here&gt;\n\n\tdefine object &lt;backpack&gt;\n\t\ttype &lt;TLTobject&gt;\n\t\ttype &lt;TLTcontainer&gt;\n\tend define\n\n\tdefine object &lt;seashell&gt;\n\t\ttype &lt;TLTobject&gt;\n\t\ttype &lt;TLTcontainable&gt;\n\t\tproperties &lt;isIn=backpack&gt;\n\tend define\n\nend define\n\ndefine text &lt;intro&gt;\n\nend define\n\ndefine text &lt;win&gt;\n\nend define\n\ndefine text &lt;lose&gt;\n\nend define\n[/quote:3lrf3pqu]\n\nHope this helps - if not e-mail me or IM me and I'll go through it with you.\n\nYou may notice from the above just how little code you have to write to get all the fancy container functionality from typelib.qlb <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->\n\nGood luck with Quest, and welcome aboard!\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Alf wrote<br/><br/><blockquote><p><br/>I create a container object and a containable object. I can pick up and take the container (a backpack), or I can pick up and take the containable object (a seashell). However, I can't put the seashell into the backpack. If I start the game with the shell in the backpack, I can take it out. But, I can't put it back in. </p></blockquote><br/><br/>Almost certainly something \"not quite set up right\" in your code. You don't say whether you are using QDK or doing your coding by hand, but either way there are a few little foibles to using the currently available version of 'typelib.qlb'.<br/><br/>If you are using QDK you have to ingore the default TAKE tab, my typelib by necessity intercepts all take/give commands so putting anything in here will cause peculiar results. Instead go to the typelib added BASICS tab and check regular object as takeable there. Then proceed by making the backpack and seashell both takeable with the former also made a container and the latter a containable.<br/><br/>At that point save and run and it will all work as you require.  <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --><br/><br/>Sorry that it seems a bit messy to have to ignore bits of QDK in favour of the typelib added bits, but I think the easy to get results are worth the inconvenience.<br/><br/>Here's a demo of the required items in ASL, should you be a hand coder, this will clear up what you need to do. If you are NOT a hand coder, cut and paste the following code into notepad and save it as \"demo.asl\" in your Quest working folder (or wherever you put typelib.qlb) - you can then run it in Quest to prove it works and open it in QDK to see how I set it up.<br/><br/><blockquote><p><br/><br/>' Created with QDK Pro 3.5<br/><br/>!include &lt;Typelib.qlb&gt;<br/><br/>define game &lt;demo&gt;<br/>\tasl-version &lt;350&gt;<br/>\tgametype singleplayer<br/>\tstart &lt;here&gt;<br/>\tgame info &lt;Created with QDK Pro 3.5&gt;<br/>end define<br/><br/>define synonyms<br/>end define<br/><br/>define room &lt;here&gt;<br/>\tlook &lt;here&gt;<br/><br/>\tdefine object &lt;backpack&gt;<br/>\t\ttype &lt;TLTobject&gt;<br/>\t\ttype &lt;TLTcontainer&gt;<br/>\tend define<br/><br/>\tdefine object &lt;seashell&gt;<br/>\t\ttype &lt;TLTobject&gt;<br/>\t\ttype &lt;TLTcontainable&gt;<br/>\t\tproperties &lt;isIn=backpack&gt;<br/>\tend define<br/><br/>end define<br/><br/>define text &lt;intro&gt;<br/><br/>end define<br/><br/>define text &lt;win&gt;<br/><br/>end define<br/><br/>define text &lt;lose&gt;<br/><br/>end define<br/></p></blockquote><br/><br/>Hope this helps - if not e-mail me or IM me and I'll go through it with you.<br/><br/>You may notice from the above just how little code you have to write to get all the fancy container functionality from typelib.qlb <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --><br/><br/>Good luck with Quest, and welcome aboard!<br/><br/>Al (MaDbRiT)",
      "PostDate": "2003-12-31T15:52:30+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "1954",
      "UserId": 0,
      "Username": "Alf",
      "UserAvatar": null,
      "UserGravatar": "df6fcdbeed91f46db8f5428ad267174e",
      "EditableText": "Hi, Al, and thanks for the help.  That cleared up all the problems except that I can't wear the backpack, only take it.  Same thing, I guess.  Except I sure like the way your clothing objects show up as being worn.",
      "EditableFormat": "bbcode",
      "HTML": "Hi, Al, and thanks for the help.  That cleared up all the problems except that I can't wear the backpack, only take it.  Same thing, I guess.  Except I sure like the way your clothing objects show up as being worn.",
      "PostDate": "2003-12-31T16:07:49+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "1956",
      "UserId": 0,
      "Username": "Anonymous",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Alf,\n\nMake the backpack a \"coat\" and you should find it works as a wearable, let me know if that works for you.\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Alf,<br/><br/>Make the backpack a \"coat\" and you should find it works as a wearable, let me know if that works for you.<br/><br/>Al (MaDbRiT)",
      "PostDate": "2003-12-31T16:29:31+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "1957",
      "UserId": 0,
      "Username": "Alf",
      "UserAvatar": null,
      "UserGravatar": "df6fcdbeed91f46db8f5428ad267174e",
      "EditableText": "Sure does!\n\nThanks again for all the help, and thanks for making the library available.\n\nAlf",
      "EditableFormat": "bbcode",
      "HTML": "Sure does!<br/><br/>Thanks again for all the help, and thanks for making the library available.<br/><br/>Alf",
      "PostDate": "2003-12-31T16:58:41+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "1968",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "So Al - there's no \"outside a coat\" wearable then? No bag / outside thingy...\n\nI'm curious if you still use the old 1/2/4/8/16 method (old in the sense of \"you were using it last time I looked), or have moved to variables or flags fr the seperate layers.",
      "EditableFormat": "bbcode",
      "HTML": "So Al - there's no \"outside a coat\" wearable then? No bag / outside thingy...<br/><br/>I'm curious if you still use the old 1/2/4/8/16 method (old in the sense of \"you were using it last time I looked), or have moved to variables or flags fr the seperate layers.",
      "PostDate": "2004-01-01T06:27:00+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "1973",
      "UserId": 0,
      "Username": "Anonymous",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "[quote:5asj1u5f]\nSo Al - there's no \"outside a coat\" wearable then? No bag / outside thingy... [/quote:5asj1u5f]\n\n\nNo there's not - at least not a type officially labelled as being such. Bear in mind though that you do have 5 levels of layers already and it's unlikely you'd ever [b:5asj1u5f]truly need [/b:5asj1u5f]more than that. The layer names are mostly just there for convenience rather than labelling them layer 1,2,3,4 &amp; 5. You are at liberty to demote / promote descriptions (within some limititions) as you see fit. You are unlikely in this case to want to provide the player with a vest, shirt, sweater, jacket [b:5asj1u5f]and[/b:5asj1u5f] coat (that's the order) so you can use the coat as the top layer and call it a backpack, and if a coat is required use the jacket type instead...\n\nIf anyone thinks it is really needed, an external carryable like a rucksack or backpack type could be fairly easily built on to the exisiting structure for the next lib release - it is expandable. \n\nThe idea of typelib was for it to be a reasonably flexible general purpose add on. Being able to \"misuse\" the coat type, make it a container and treat it as a backpack object is an example of exactly the sort of thing I was trying to achieve. \n\nYou could also give the coat handy pockets in exactly the way you'd make it perform as a backpack - by just retaining it's description as 'coat' for instance\n\n[quote:5asj1u5f]\nI'm curious if you still use the old 1/2/4/8/16 method (old in the sense of \"you were using it last time I looked), or have moved to variables or flags for the seperate layers.\n[/quote:5asj1u5f]\n \n\nI am still using the binary (1,2,4,8,16) method because it means my tests can often be simplified to using addition inside a test loop, rather than add to the forest of nested IF-THEN statements that typelib already is. Basically I can add together the values of the layers already worn and do one test to check for wearability/unwearability, rather than have to test for each layer inside a test for it's preceding layer or whatever which is what variables or flags would require me to do. <!-- s;-) --><img src=\"{SMILIES_PATH}/icon_e_wink.gif\" alt=\";-)\" title=\"Wink\" /><!-- s;-) -->\n\nThis is also a case of 'if it ain't broke, don't fix it' of course. As anyone who looks back at code they wrote ages ago will confirm, you can often see another way (even a better way) to do things in retrospect.\n\nAs I've hinted before to Alex - a SELECT CASE construct would be a Godsend in Quest ASL <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->\n\nHappy new year all!\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p><br/>So Al - there's no \"outside a coat\" wearable then? No bag / outside thingy... </p></blockquote><br/><br/><br/>No there's not - at least not a type officially labelled as being such. Bear in mind though that you do have 5 levels of layers already and it's unlikely you'd ever <span style=\"font-weight:bold;\">truly need </span>more than that. The layer names are mostly just there for convenience rather than labelling them layer 1,2,3,4 &amp; 5. You are at liberty to demote / promote descriptions (within some limititions) as you see fit. You are unlikely in this case to want to provide the player with a vest, shirt, sweater, jacket <span style=\"font-weight:bold;\">and</span> coat (that's the order) so you can use the coat as the top layer and call it a backpack, and if a coat is required use the jacket type instead...<br/><br/>If anyone thinks it is really needed, an external carryable like a rucksack or backpack type could be fairly easily built on to the exisiting structure for the next lib release - it is expandable. <br/><br/>The idea of typelib was for it to be a reasonably flexible general purpose add on. Being able to \"misuse\" the coat type, make it a container and treat it as a backpack object is an example of exactly the sort of thing I was trying to achieve. <br/><br/>You could also give the coat handy pockets in exactly the way you'd make it perform as a backpack - by just retaining it's description as 'coat' for instance<br/><br/><blockquote><p><br/>I'm curious if you still use the old 1/2/4/8/16 method (old in the sense of \"you were using it last time I looked), or have moved to variables or flags for the seperate layers.<br/></p></blockquote><br/> <br/><br/>I am still using the binary (1,2,4,8,16) method because it means my tests can often be simplified to using addition inside a test loop, rather than add to the forest of nested IF-THEN statements that typelib already is. Basically I can add together the values of the layers already worn and do one test to check for wearability/unwearability, rather than have to test for each layer inside a test for it's preceding layer or whatever which is what variables or flags would require me to do. <!-- s;-) --><img src=\"{SMILIES_PATH}/icon_e_wink.gif\" alt=\";-)\" title=\"Wink\" /><!-- s;-) --><br/><br/>This is also a case of 'if it ain't broke, don't fix it' of course. As anyone who looks back at code they wrote ages ago will confirm, you can often see another way (even a better way) to do things in retrospect.<br/><br/>As I've hinted before to Alex - a SELECT CASE construct would be a Godsend in Quest ASL <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --><br/><br/>Happy new year all!<br/><br/>Al (MaDbRiT)",
      "PostDate": "2004-01-01T11:31:36+00:00",
      "LastEditDate": null
    }
  ]
}
