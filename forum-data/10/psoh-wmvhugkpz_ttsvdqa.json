{
  "Topic": {
    "TopicId": "psoh-wmvhugkpz_ttsvdqa",
    "ForumId": "10",
    "Title": "Making an object?",
    "LastUpdated": "2018-05-18T15:09:05.1009982Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "cecc5be2-a404-4b4d-b0b3-b8de43af6f08",
      "UserId": 153758,
      "Username": "Taru",
      "AvatarUrl": "https://secure.gravatar.com/avatar/052ee78666bb84bd52a2a1fd2947a87e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So I know this is a very simple question but I'm really new to this and am having a lot of trouble with the tutorials. They really don't explain it well enough for people like myself. I'm currently making a gamebook and am doing pretty well learning it all, but objects have me totally stumped.",
      "EditableFormat": "markdown",
      "HTML": "<p>So I know this is a very simple question but I'm really new to this and am having a lot of trouble with the tutorials. They really don't explain it well enough for people like myself. I'm currently making a gamebook and am doing pretty well learning it all, but objects have me totally stumped.</p>\n\n",
      "PostDate": "2018-05-18T15:09:05.1009982Z",
      "LastEditDate": "2018-05-18T15:10:13.9929043Z",
      "link": null
    },
    {
      "PostId": "105982e6-5c44-4990-8cc0-4ea9acc7cc30",
      "UserId": 341771,
      "Username": "JenniferCampbell",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8b9a63b5bbacc531368953df3a1709ec?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi Taru,\r\n\r\nThere are really only a few 'objects' in gamebooks, namely 'game', 'player' and one or two others that I can't think of at the moment.  Depending on what you're trying to accomplish, you can probably use a page as your 'object'.  You can give any page and the 'game' object attributes like:\r\ngame.d00\r\ngame.d20\r\ngame.d6\r\ngame.GOLD\r\ngame.SILVER\r\ngame.WATER\r\ngame.pricewater\r\ngame.priceGOLD\r\ngame.priceofsilver\r\ngame.goldhigh\r\ngame.goldlow\r\nplayer.alias\r\nplayer.AGE\r\nplayer.SEX\r\nplayer.gender\r\nplayer.PROFESSION\r\nplayer.LEVEL\r\nplayer.startcash\r\nplayer.NAME (I *think* this a reserved variable)\r\nplayer.GOLD\r\nplayer.cash\r\nplayer.water\r\nplayer.food\r\nplayer.health\r\nplayer.happiness\r\n\r\nweapon.TYPE\r\nweapon.BONUS\r\nwand.TYPE\r\nwand.BONUS\r\n\r\nFor the last four, I created pages called 'weapon' and 'wand' so that I can have the 'TYPE' and 'BONUS' attributes on them.\r\n\r\nYou can also use the same attribute on different pages and objects:\r\ngame.cash and player.cash are two different variables/attributes.\r\n\r\nAlso, be aware that capitalization matters, *player.cash* is different than *player.CASH* or *player.Cash*.  The same goes for pages.  You could have a page for your player's stats called 'Player'.  This is a page, where *player* is the game object, not a page.  A better example would b *Kitchen* vs *kitchen*.  These could be two different pages, both perfectly valid.\r\n\r\nGood luck with your gamebooks!",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi Taru,</p>\n<p>There are really only a few 'objects' in gamebooks, namely 'game', 'player' and one or two others that I can't think of at the moment.  Depending on what you're trying to accomplish, you can probably use a page as your 'object'.  You can give any page and the 'game' object attributes like:<br>\ngame.d00<br>\ngame.d20<br>\ngame.d6<br>\ngame.GOLD<br>\ngame.SILVER<br>\ngame.WATER<br>\ngame.pricewater<br>\ngame.priceGOLD<br>\ngame.priceofsilver<br>\ngame.goldhigh<br>\ngame.goldlow<br>\nplayer.alias<br>\nplayer.AGE<br>\nplayer.SEX<br>\nplayer.gender<br>\nplayer.PROFESSION<br>\nplayer.LEVEL<br>\nplayer.startcash<br>\nplayer.NAME (I <em>think</em> this a reserved variable)<br>\nplayer.GOLD<br>\nplayer.cash<br>\nplayer.water<br>\nplayer.food<br>\nplayer.health<br>\nplayer.happiness</p>\n<p>weapon.TYPE<br>\nweapon.BONUS<br>\nwand.TYPE<br>\nwand.BONUS</p>\n<p>For the last four, I created pages called 'weapon' and 'wand' so that I can have the 'TYPE' and 'BONUS' attributes on them.</p>\n<p>You can also use the same attribute on different pages and objects:<br>\ngame.cash and player.cash are two different variables/attributes.</p>\n<p>Also, be aware that capitalization matters, <em>player.cash</em> is different than <em>player.CASH</em> or <em>player.Cash</em>.  The same goes for pages.  You could have a page for your player's stats called 'Player'.  This is a page, where <em>player</em> is the game object, not a page.  A better example would b <em>Kitchen</em> vs <em>kitchen</em>.  These could be two different pages, both perfectly valid.</p>\n<p>Good luck with your gamebooks!</p>\n\n",
      "PostDate": "2018-05-18T15:43:25.9618878Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fbf420b4-ee00-47d2-8dc6-75448a8a1f95",
      "UserId": 153758,
      "Username": "Taru",
      "AvatarUrl": "https://secure.gravatar.com/avatar/052ee78666bb84bd52a2a1fd2947a87e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you very much, but how would I make an option for someone to choose their gender?",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you very much, but how would I make an option for someone to choose their gender?</p>\n\n",
      "PostDate": "2018-05-18T16:09:20.4530294Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7dc222eb-bbe1-420d-8e51-aa8f801590c7",
      "UserId": 341771,
      "Username": "JenniferCampbell",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8b9a63b5bbacc531368953df3a1709ec?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There are a few different ways to let your player chose gender.\r\n\r\nOne is to have a page (call it 'gender' - I know, how original), with two links, or as many as you have gender possibilities.  If the gender doesn't affect any game attributes, then the links should be to script-type pages that set a gender flag or attribute.\r\n\r\nIf, however, their choice affects things, like reduced physical strength for females and increased for males, then the links should be to script pages that set or change the affected attributes (*player.strength = player.strength - 2*, for example).  Here's the code for three pages:\r\n```\r\n    <object name=\"gender\">\r\n      <inherit name=\"scripttext\" />\r\n      <description>Is your character {page:male:male} or {page:female:female}?</description>\r\n      <object name=\"male\">\r\n        <inherit name=\"script\" />\r\n        <script type=\"script\">\r\n          player.STR = GetRandomInt(1,6) + GetRandomInt(1,6) + 4\r\n          player.DEX = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\r\n          player.CON = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\r\n          player.INT = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\r\n          player.WIS = GetRandomInt(1,6) + GetRandomInt(1,6) + 4\r\n          player.CHAR = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\r\n          SetFlagOn (\"male\")\r\n          MovePlayer (profession)\r\n        </script>\r\n      </object>\r\n      <object name=\"female\">\r\n        <inherit name=\"script\" />\r\n        <script type=\"script\">\r\n          player.STR = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\r\n          player.DEX = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\r\n          player.CON = GetRandomInt(1,6) + GetRandomInt(1,6) + 5\r\n          player.INT = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\r\n          player.WIS = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\r\n          player.CHAR = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\r\n          SetFlagOff (\"male\")\r\n          MovePlayer (profession)\r\n        </script>\r\n      </object>\r\n    </object>\r\n```\r\nYou can copy and paste all of it straight into the main 'code view' window of the desktop editor, or break it up into bits for the individual pages.  Notice that I used a flag ('male') in the two pages - in case I wanted to reference the gender later on.\r\n\r\nA third way is to use one page - again, a script type - that uses a series of nested scripts - for msg prompts, and the like.  Sorry I can't provide an example of this, I am not able to use the desktop version, currently.  it would look something like *player.sex = result*.  'result' is one of those reserved words, BTW.\r\n\r\nAnother way is to set an attribute yourself, based on the player's choice: *player.gender = male* or *player.gender = female*.  The benefit of this approach is that the player cannot enter nonsense like 'DOnkey69' when they are allowed to type it in.",
      "EditableFormat": "markdown",
      "HTML": "<p>There are a few different ways to let your player chose gender.</p>\n<p>One is to have a page (call it 'gender' - I know, how original), with two links, or as many as you have gender possibilities.  If the gender doesn't affect any game attributes, then the links should be to script-type pages that set a gender flag or attribute.</p>\n<p>If, however, their choice affects things, like reduced physical strength for females and increased for males, then the links should be to script pages that set or change the affected attributes (<em>player.strength = player.strength - 2</em>, for example).  Here's the code for three pages:</p>\n<pre><code>    &lt;object name=\"gender\"&gt;\n      &lt;inherit name=\"scripttext\" /&gt;\n      &lt;description&gt;Is your character {page:male:male} or {page:female:female}?&lt;/description&gt;\n      &lt;object name=\"male\"&gt;\n        &lt;inherit name=\"script\" /&gt;\n        &lt;script type=\"script\"&gt;\n          player.STR = GetRandomInt(1,6) + GetRandomInt(1,6) + 4\n          player.DEX = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\n          player.CON = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\n          player.INT = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\n          player.WIS = GetRandomInt(1,6) + GetRandomInt(1,6) + 4\n          player.CHAR = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\n          SetFlagOn (\"male\")\n          MovePlayer (profession)\n        &lt;/script&gt;\n      &lt;/object&gt;\n      &lt;object name=\"female\"&gt;\n        &lt;inherit name=\"script\" /&gt;\n        &lt;script type=\"script\"&gt;\n          player.STR = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\n          player.DEX = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\n          player.CON = GetRandomInt(1,6) + GetRandomInt(1,6) + 5\n          player.INT = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\n          player.WIS = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\n          player.CHAR = GetRandomInt(1,6) + GetRandomInt(1,6) + 6\n          SetFlagOff (\"male\")\n          MovePlayer (profession)\n        &lt;/script&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n</code></pre>\n<p>You can copy and paste all of it straight into the main 'code view' window of the desktop editor, or break it up into bits for the individual pages.  Notice that I used a flag ('male') in the two pages - in case I wanted to reference the gender later on.</p>\n<p>A third way is to use one page - again, a script type - that uses a series of nested scripts - for msg prompts, and the like.  Sorry I can't provide an example of this, I am not able to use the desktop version, currently.  it would look something like <em>player.sex = result</em>.  'result' is one of those reserved words, BTW.</p>\n<p>Another way is to set an attribute yourself, based on the player's choice: <em>player.gender = male</em> or <em>player.gender = female</em>.  The benefit of this approach is that the player cannot enter nonsense like 'DOnkey69' when they are allowed to type it in.</p>\n\n",
      "PostDate": "2018-05-18T17:17:42.432478Z",
      "LastEditDate": "2018-05-18T17:29:29.9135173Z",
      "link": null
    },
    {
      "PostId": "3e6dc09e-d02c-4765-97cc-758001c4beaf",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\nThere are many ways to handle attributes, but this is probably the easiest:\r\n\r\n---\r\n#### **Make 2 pages, 'Male' and 'Female', to handle the choice.**\r\n\r\n[![image](https://user-images.githubusercontent.com/27799208/40248497-b63d36ce-5a95-11e8-8836-cedb4c9d481a.png)](https://user-images.githubusercontent.com/27799208/40248497-b63d36ce-5a95-11e8-8836-cedb4c9d481a.png)\r\n\r\n---\r\n\r\n[![image](https://user-images.githubusercontent.com/27799208/40249004-4e9f4b2c-5a97-11e8-930f-d5cac55bd7da.png)](https://user-images.githubusercontent.com/27799208/40249004-4e9f4b2c-5a97-11e8-930f-d5cac55bd7da.png)\r\n\r\n---\r\n#### **Then, make a page asking the player to choose their gender, with a link to 'Male' and a link to 'Female'.**\r\n\r\n[![image](https://user-images.githubusercontent.com/27799208/40248417-852f4f22-5a95-11e8-9724-a64b3b885d7b.png)](https://user-images.githubusercontent.com/27799208/40248417-852f4f22-5a95-11e8-9724-a64b3b885d7b.png)\r\n\r\n---\r\n#### **I also made a fourth page, just to show how to link into the main story from either 'Male' or 'Female' (each of those pages have a link to the fourth page).**\r\n\r\n[![image](https://user-images.githubusercontent.com/27799208/40248553-ea211a6e-5a95-11e8-9371-00e93e239f46.png)](https://user-images.githubusercontent.com/27799208/40248553-ea211a6e-5a95-11e8-9371-00e93e239f46.png)\r\n\r\n\r\n---\r\n### The game's code:\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"GamebookCore.aslx\" />\r\n  <game name=\"Attributes Gamebook\">\r\n    <gameid>5fe64fea-2cc6-4c30-9e95-1a4c6ce12799</gameid>\r\n    <version>2.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <author>Richard Headkid</author>\r\n    <subtitle>The Unexpected Value of Pages</subtitle>\r\n  </game>\r\n  <object name=\"Page1\">\r\n    <description><![CDATA[Please select a gender.<br/><br/>]]></description>\r\n    <options type=\"stringdictionary\">\r\n      <item>\r\n        <key>Male</key>\r\n        <value>Male</value>\r\n      </item>\r\n      <item>\r\n        <key>Female</key>\r\n        <value>Female</value>\r\n      </item>\r\n    </options>\r\n    <object name=\"player\">\r\n      <inherit name=\"defaultplayer\" />\r\n    </object>\r\n  </object>\r\n  <object name=\"Male\">\r\n    <inherit name=\"scripttext\" />\r\n    <description>You selected {player.gender}.</description>\r\n    <script type=\"script\">\r\n      player.gender = \"Male\"\r\n    </script>\r\n    <options type=\"stringdictionary\">\r\n      <item>\r\n        <key>PlayBegins</key>\r\n        <value>Continue...</value>\r\n      </item>\r\n    </options>\r\n  </object>\r\n  <object name=\"Female\">\r\n    <inherit name=\"scripttext\" />\r\n    <description>You selected {player.gender}.</description>\r\n    <script type=\"script\">\r\n      player.gender = \"Female\"\r\n    </script>\r\n    <options type=\"stringdictionary\">\r\n      <item>\r\n        <key>PlayBegins</key>\r\n        <value>Continue...</value>\r\n      </item>\r\n    </options>\r\n  </object>\r\n  <object name=\"PlayBegins\">\r\n    <description><![CDATA[<center><h2>YOU HAVE WON THE GAME!</h2></center>]]></description>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p>There are many ways to handle attributes, but this is probably the easiest:</p>\n<hr>\n<h4><strong>Make 2 pages, 'Male' and 'Female', to handle the choice.</strong></h4>\n<p><a href=\"https://user-images.githubusercontent.com/27799208/40248497-b63d36ce-5a95-11e8-8836-cedb4c9d481a.png\"><img src=\"https://user-images.githubusercontent.com/27799208/40248497-b63d36ce-5a95-11e8-8836-cedb4c9d481a.png\" alt=\"image\"></a></p>\n<hr>\n<p><a href=\"https://user-images.githubusercontent.com/27799208/40249004-4e9f4b2c-5a97-11e8-930f-d5cac55bd7da.png\"><img src=\"https://user-images.githubusercontent.com/27799208/40249004-4e9f4b2c-5a97-11e8-930f-d5cac55bd7da.png\" alt=\"image\"></a></p>\n<hr>\n<h4><strong>Then, make a page asking the player to choose their gender, with a link to 'Male' and a link to 'Female'.</strong></h4>\n<p><a href=\"https://user-images.githubusercontent.com/27799208/40248417-852f4f22-5a95-11e8-9724-a64b3b885d7b.png\"><img src=\"https://user-images.githubusercontent.com/27799208/40248417-852f4f22-5a95-11e8-9724-a64b3b885d7b.png\" alt=\"image\"></a></p>\n<hr>\n<h4><strong>I also made a fourth page, just to show how to link into the main story from either 'Male' or 'Female' (each of those pages have a link to the fourth page).</strong></h4>\n<p><a href=\"https://user-images.githubusercontent.com/27799208/40248553-ea211a6e-5a95-11e8-9371-00e93e239f46.png\"><img src=\"https://user-images.githubusercontent.com/27799208/40248553-ea211a6e-5a95-11e8-9371-00e93e239f46.png\" alt=\"image\"></a></p>\n<hr>\n<h3>The game's code:</h3>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"GamebookCore.aslx\" /&gt;\n  &lt;game name=\"Attributes Gamebook\"&gt;\n    &lt;gameid&gt;5fe64fea-2cc6-4c30-9e95-1a4c6ce12799&lt;/gameid&gt;\n    &lt;version&gt;2.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;author&gt;Richard Headkid&lt;/author&gt;\n    &lt;subtitle&gt;The Unexpected Value of Pages&lt;/subtitle&gt;\n  &lt;/game&gt;\n  &lt;object name=\"Page1\"&gt;\n    &lt;description&gt;&lt;![CDATA[Please select a gender.&lt;br/&gt;&lt;br/&gt;]]&gt;&lt;/description&gt;\n    &lt;options type=\"stringdictionary\"&gt;\n      &lt;item&gt;\n        &lt;key&gt;Male&lt;/key&gt;\n        &lt;value&gt;Male&lt;/value&gt;\n      &lt;/item&gt;\n      &lt;item&gt;\n        &lt;key&gt;Female&lt;/key&gt;\n        &lt;value&gt;Female&lt;/value&gt;\n      &lt;/item&gt;\n    &lt;/options&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"defaultplayer\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Male\"&gt;\n    &lt;inherit name=\"scripttext\" /&gt;\n    &lt;description&gt;You selected {player.gender}.&lt;/description&gt;\n    &lt;script type=\"script\"&gt;\n      player.gender = \"Male\"\n    &lt;/script&gt;\n    &lt;options type=\"stringdictionary\"&gt;\n      &lt;item&gt;\n        &lt;key&gt;PlayBegins&lt;/key&gt;\n        &lt;value&gt;Continue...&lt;/value&gt;\n      &lt;/item&gt;\n    &lt;/options&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Female\"&gt;\n    &lt;inherit name=\"scripttext\" /&gt;\n    &lt;description&gt;You selected {player.gender}.&lt;/description&gt;\n    &lt;script type=\"script\"&gt;\n      player.gender = \"Female\"\n    &lt;/script&gt;\n    &lt;options type=\"stringdictionary\"&gt;\n      &lt;item&gt;\n        &lt;key&gt;PlayBegins&lt;/key&gt;\n        &lt;value&gt;Continue...&lt;/value&gt;\n      &lt;/item&gt;\n    &lt;/options&gt;\n  &lt;/object&gt;\n  &lt;object name=\"PlayBegins\"&gt;\n    &lt;description&gt;&lt;![CDATA[&lt;center&gt;&lt;h2&gt;YOU HAVE WON THE GAME!&lt;/h2&gt;&lt;/center&gt;]]&gt;&lt;/description&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2018-05-18T17:27:22.551489Z",
      "LastEditDate": "2018-05-18T17:31:26.0136439Z",
      "link": null
    },
    {
      "PostId": "ed9b3278-9e29-4829-9c4b-3aa9c1e52d1e",
      "UserId": 153758,
      "Username": "Taru",
      "AvatarUrl": "https://secure.gravatar.com/avatar/052ee78666bb84bd52a2a1fd2947a87e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you so much. That was pretty confusing honestly, I severely underestimated how complicated and in-depth this can all get but I made it all and it seems to run fine. All I need now is to find out how the player's choice can change what text does/doesn't show up. For example if you choose female an extra part might show up mentioning something that you wouldn't get if you chose male.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you so much. That was pretty confusing honestly, I severely underestimated how complicated and in-depth this can all get but I made it all and it seems to run fine. All I need now is to find out how the player's choice can change what text does/doesn't show up. For example if you choose female an extra part might show up mentioning something that you wouldn't get if you chose male.</p>\n\n",
      "PostDate": "2018-05-18T19:33:17.6707572Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d05cce65-3b9f-4cad-a33e-419cac18b839",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In a text field:\r\n\r\n```\r\nSince you are a {either player.gender=\"Male\":man, I will say this|woman, I will say {i:that}}.\r\n```\r\n\r\n---\r\nOr you could use a script:\r\n\r\n**GUI View**\r\n\r\n![image](https://user-images.githubusercontent.com/27799208/40256449-1ed90a4a-5ab0-11e8-88a2-ecabdce47e6e.png)\r\n\r\n---\r\n**Code View**\r\n\r\n```\r\nswitch (player.gender) {\r\n  case (\"Male\") {\r\n    msg (\"Since you are a man, I will display this text.\")\r\n  }\r\n  case (\"Female\") {\r\n    msg (\"I see that you are a woman, so I will try to behave myself!\")\r\n  }\r\n  default {\r\n    msg (\"Something went wrong!  Please restart the story!!!\")\r\n  }\r\n}\r\n```\r\n\r\n---\r\nThere are many other ways, too.",
      "EditableFormat": "markdown",
      "HTML": "<p>In a text field:</p>\n<pre><code>Since you are a {either player.gender=\"Male\":man, I will say this|woman, I will say {i:that}}.\n</code></pre>\n<hr>\n<p>Or you could use a script:</p>\n<p><strong>GUI View</strong></p>\n<p><img src=\"https://user-images.githubusercontent.com/27799208/40256449-1ed90a4a-5ab0-11e8-88a2-ecabdce47e6e.png\" alt=\"image\"></p>\n<hr>\n<p><strong>Code View</strong></p>\n<pre><code>switch (player.gender) {\n  case (\"Male\") {\n    msg (\"Since you are a man, I will display this text.\")\n  }\n  case (\"Female\") {\n    msg (\"I see that you are a woman, so I will try to behave myself!\")\n  }\n  default {\n    msg (\"Something went wrong!  Please restart the story!!!\")\n  }\n}\n</code></pre>\n<hr>\n<p>There are many other ways, too.</p>\n\n",
      "PostDate": "2018-05-18T20:29:47.9968411Z",
      "LastEditDate": "2018-05-18T20:30:15.2342012Z",
      "link": null
    },
    {
      "PostId": "b205397f-f4bb-4f51-a97c-8e8025ce47fb",
      "UserId": 341771,
      "Username": "JenniferCampbell",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8b9a63b5bbacc531368953df3a1709ec?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Or, if you set a flag for the gender, then you could check that right in the text window:\r\nThe following example uses the flag 'male'.  You could use anything.\r\n```\r\n{if male:The little birdie says, \"What's cookin' good lookin'?\"}{if not male:The little birdie says, \"Dude, what is wrong with you?\"}\r\n```\r\n\r\nEDIT: Yes, you would put it all on one line.  Otherwise, you'd get an extra line break in your output.",
      "EditableFormat": "markdown",
      "HTML": "<p>Or, if you set a flag for the gender, then you could check that right in the text window:<br>\nThe following example uses the flag 'male'.  You could use anything.</p>\n<pre><code>{if male:The little birdie says, \"What's cookin' good lookin'?\"}{if not male:The little birdie says, \"Dude, what is wrong with you?\"}\n</code></pre>\n<p>EDIT: Yes, you would put it all on one line.  Otherwise, you'd get an extra line break in your output.</p>\n\n",
      "PostDate": "2018-05-18T20:40:24.8664397Z",
      "LastEditDate": "2018-05-18T20:42:13.5698489Z",
      "link": null
    },
    {
      "PostId": "fd2b5265-f370-4da3-b4a8-e041a816faeb",
      "UserId": 153758,
      "Username": "Taru",
      "AvatarUrl": "https://secure.gravatar.com/avatar/052ee78666bb84bd52a2a1fd2947a87e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What script did you use for that? And what do you mean by set a flag?",
      "EditableFormat": "markdown",
      "HTML": "<p>What script did you use for that? And what do you mean by set a flag?</p>\n\n",
      "PostDate": "2018-05-18T20:44:02.5129607Z",
      "LastEditDate": "2018-05-18T21:01:55.1644847Z",
      "link": null
    },
    {
      "PostId": "809d99a5-76af-4cf4-bf0c-2a912afee85a",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "here's hopefully some help:\r\n\r\nhttp://docs.textadventures.co.uk/ifanswers/ifanswers.com/1150/gamebook-how-to-include-a-players-attributes-stats.html\r\n\r\nif you need any help or got any questions or are confused about anything, let me/us know, and we'll help you with it\r\n\r\n-----------\r\n\r\nhere's a more help for you (most of this is for using the 'Text Adventure' version of quest, but the scripting is the same for the Game Book, the only difference is in you access the scripting in the Game Book: 'WHATEVER' Page -> 'Page' Tab -> Page Type: [script] or [script+text] -> set up your scripting/attributes, compared to a Text Adventure):\r\n\r\nhttp://textadventures.co.uk/forum/general/topic/ljjm32av4e2t9ot49k478g/help#710be61e-eae1-4af1-8363-520cc718ba1c\r\n\r\nagain, ask if you need help with anything and/or are confused or whatever about anything\r\n\r\n------------------\r\n\r\n**Data Types:**\r\n\r\n------------------\r\n\r\n**String Data Type:**\r\n\r\n```\r\nString (\"text\") Values:\r\n\r\na collection (1 or more) of characters (alphabet letters, numbers, and spaces/whitespaces) and/or some (but not all) symbols\r\n\r\n(anything in double quotes is a String Value, a String Value MUST be encased within double quotes)\r\n\r\n\"a\"\r\n\"abc\"\r\n\"123\"\r\n\"abc123\"\r\n\"abc_123\"\r\n\"What is your name?\"\r\n\" \" // yes, the 'space' (whitespace) is a character/symbol, just like using \"a\"\r\n\r\nString Attributes (Attributes are global VARIABLES as they're contained within an Object, and thus can use them anywhere, so long as the Object holding them, exists or still exists, of course) and their String Values, examples:\r\n\r\n(in-code scripting examples)\r\nplayer.alias = \"HK\"\r\nplayer.sex = \"male\"\r\nplayer.age_string = \"adult\"\r\nplayer.race = \"human\"\r\nplayer.class = \"warrior\"\r\n\r\nplayer.strength_string_A = \"100\" // this is a String (\"text\") Value due to the double quotes (and thus its a String Attribute as well), it is NOT an AMOUNT Value (AMOUNT: an Integer or a Double), despite being a number Value, so you can NOT do arithmetic (addition: +, subtraction: -, multiplication: *, division: /, and modulus: % --- the 'modulus' operation is a division operation, but it finds/gets/returns the REMAINDER) operations on/with it\r\n\r\nplayer.strength_string_B = \"strong\"\r\n\r\ngame.introduction = \"Welcome to my game, I hope you enjoy it, muwahaha!\"\r\n\r\ngame.state_string = \"0\"\r\n\r\nplayer.description = player.alias + \" is a \" + player.sex + \" \" + player.age_string + \" \" + player.race + \" \" + player.class + \".\"\r\n// msg (player.description)\r\n// output: HK is a male adult human warrior.\r\n\r\nand this is what it looks like as 'creation' tags in code:\r\n\r\n<game name=\"example_game\">\r\n\r\n  <attr name=\"state_string\" type=\"string\">0</attr>\r\n\r\n  <attr name=\"introduction\" type=\"string\">Welcome to my game, I hope you enjoy it, muwahaha!</attr>\r\n\r\n</game>\r\n\r\n<object name=\"player\">\r\n\r\n  <attr name=\"alias\" type=\"string\">HK</attr>\r\n  <attr name=\"sex\" type=\"string\">male</attr>\r\n  <attr name=\"age_string\" type=\"string\">adult</attr>\r\n  <attr name=\"race\" type=\"string\">human</attr>\r\n  <attr name=\"class\" type=\"string\">warrior</attr>\r\n\r\n</object>\r\n```\r\n\r\n-------------\r\n\r\n**Integer Data Type:**\r\n\r\n```\r\na non-decimal/non-fractional AMOUNT Value: -9999999, -100, -1, 0, 1, 100, 999999999\r\n\r\nIMP0RTANT: AMOUNT (Integer/Double) Values do NOT have double quotes!\r\n\r\nInteger Attribute examples\r\n\r\ngame.A_integer_attribute = 10\r\ngame.B_integer_attribute = 40\r\ngame.C_integer_attribute = game.A_integer_attribute + game.B_integer_attribute\r\n// game.C_integer_attribute = 50\r\n\r\nplayer.strength = 100\r\nplayer.endurance = 75\r\nplayer.life = (player.strength + player.endurance) / 2\r\n// player.life = (100 + 75) / 2 = 175 / 2 = 87.5 ---> truncated (as these are Integer Values/Attributes) ----> 87\r\n\r\nplayer.age_integer = 50\r\n\r\n// -------\r\n\r\n<game name=\"example_game\">\r\n\r\n  <attr name=\"A_integer_attribute\" type=\"int\">10</attr>\r\n\r\n</game>\r\n\r\n<object name=\"player\">\r\n\r\n  <attr name=\"strength\" type=\"int\">100</attr>\r\n\r\n  <attr name=\"age_integer\" type=\"int\">50</attr>\r\n\r\n</object>\r\n```\r\n\r\n--------------------\r\n\r\n**Double Data Type:**\r\n\r\ndecimal/fractional AMOUNTS: -9999999.123, -3.876, 0.0, 1.620000, 9999999999999.9\r\n\r\n(lazy)\r\n\r\n--------------------\r\n\r\n**Boolean Data Types:**\r\n\r\n```\r\nBooleans are known as 'flags' --- but, I don't really like 'flags' being used, as technically ALL VARIABLES, as they store data/values, are 'flags/indicators', but this is the term used for 'true/false' Booleans (binary:dualism:opposites outputs: true=yes=on=1 vs false=no=off=0), and thus being 'flagged on: true' or 'flagged off: false', used as: status flags, error flags, toggles, etc etc etc, see/google about: circuitry parts / circuitry programming designs / logic gates / etc etc etc)\r\n\r\nBoolean Values:\r\n\r\ntrue\r\nfalse\r\n\r\nthese are special reserved Values, as/for being the Boolean Values, so they do NOT have double quotes, and are NOT seen as Object Values by the quest's parser / programming\r\n\r\nBoolean Attributes:\r\n\r\norc.dead = false // conceptually: the orc is alive\r\norc.dead = true // conceptually: the orc is dead\r\n// (you'd pick either 'dead' or 'alive' for this example, whichever you like/prefer or works best for you, as you've no need for both)\r\norc.alive = true // conceptually: the orc is alive\r\norc.alive = false // coneptually: the orc is dead\r\n\r\nplayer.flying = true\r\nplayer.flying = false\r\n\r\n(just some example status attributes that are common in RPGS)\r\nplayer.poisoned = true // poisoned\r\nplayer.poisoned = false // NOT poisoned\r\nplayer.asleep = true // asleep\r\nplayer.asleep = false // NOT asleep\r\nplayer.confused = true // confused\r\nplayer.confused = false // NOT confused\r\nplayer.petrified = true // petrified\r\nplayer.petrified = false // NOT petrified\r\n\r\ntv.turned_on = true // the tv is on\r\ntv.turned_on = false // the tv is off\r\n// (you'd pick either 'turned_on' or 'turned_off' for this example, whichever you like/prefer or works best for you, as you've no need for both)\r\ntv.turned_off = true // the tv is off\r\ntv.turned_off = false // the tv is on\r\n\r\n<object name=\"orc\">\r\n\r\n  <attr name=\"dead\" type=\"boolean\">false</attr>\r\n  <!-- We want our orc to start out alive, lol -->\r\n\r\n  <attr name=\"undead\" type=\"boolean\">false</attr>\r\n  <!-- yep, our orc is NOT undead, lol -->\r\n\r\n</object>\r\n\r\n<object name=\"skeleton\">\r\n\r\n  <attr name=\"dead\" type=\"boolean\">false</attr>\r\n  <!-- We want our skeleton to start out alive, lol -->\r\n\r\n  <attr name=\"undead\" type=\"boolean\">true</attr>\r\n  <!-- yep, our skeleton IS undead, lol -->\r\n\r\n</object>\r\n```\r\n\r\n-------\r\n\r\n**Object Data Types:**\r\n\r\nIMPORTANT: Object (pointer/reference) Values do NOT have double quotes (and they must NOT be any reserved/special Values, such as 'true' and 'false', which are reserved/special for being the Boolean Values)\r\n\r\n```\r\n// create (\"katana\") // this creates a 'katana' Object\r\n// katana.damage = 50 // an Integer Attribute of (contained within) the 'katana' Object\r\n\r\n// create (\"dagger\") // this creates a 'dagger' Object\r\n// dagger.damage = 1 // an Integer Attribute of (contained within) the 'dagger' Object\r\n\r\nplayer.weapon = katana\r\n// msg (player.weapon.damage)\r\n// output: 50\r\n\r\nplayer.weapon = dagger\r\n// msg (player.weapon.damage)\r\n// output: 1\r\n```\r\n\r\n--------\r\n\r\nand there's also these Data Types too:\r\n\r\n**Scripts** --- this is it's own topic: scripting/coding... lol\r\n\r\nand\r\n\r\n**Lists**\r\n\r\n**Dictionaries**\r\n\r\nbut these are a bit more advanced, so won't get into them here/now",
      "EditableFormat": "markdown",
      "HTML": "<p>here's hopefully some help:</p>\n<p>http://docs.textadventures.co.uk/ifanswers/ifanswers.com/1150/gamebook-how-to-include-a-players-attributes-stats.html</p>\n<p>if you need any help or got any questions or are confused about anything, let me/us know, and we'll help you with it</p>\n<hr>\n<p>here's a more help for you (most of this is for using the 'Text Adventure' version of quest, but the scripting is the same for the Game Book, the only difference is in you access the scripting in the Game Book: 'WHATEVER' Page -&gt; 'Page' Tab -&gt; Page Type: [script] or [script+text] -&gt; set up your scripting/attributes, compared to a Text Adventure):</p>\n<p>http://textadventures.co.uk/forum/general/topic/ljjm32av4e2t9ot49k478g/help#710be61e-eae1-4af1-8363-520cc718ba1c</p>\n<p>again, ask if you need help with anything and/or are confused or whatever about anything</p>\n<hr>\n<p><strong>Data Types:</strong></p>\n<hr>\n<p><strong>String Data Type:</strong></p>\n<pre><code>String (\"text\") Values:\n\na collection (1 or more) of characters (alphabet letters, numbers, and spaces/whitespaces) and/or some (but not all) symbols\n\n(anything in double quotes is a String Value, a String Value MUST be encased within double quotes)\n\n\"a\"\n\"abc\"\n\"123\"\n\"abc123\"\n\"abc_123\"\n\"What is your name?\"\n\" \" // yes, the 'space' (whitespace) is a character/symbol, just like using \"a\"\n\nString Attributes (Attributes are global VARIABLES as they're contained within an Object, and thus can use them anywhere, so long as the Object holding them, exists or still exists, of course) and their String Values, examples:\n\n(in-code scripting examples)\nplayer.alias = \"HK\"\nplayer.sex = \"male\"\nplayer.age_string = \"adult\"\nplayer.race = \"human\"\nplayer.class = \"warrior\"\n\nplayer.strength_string_A = \"100\" // this is a String (\"text\") Value due to the double quotes (and thus its a String Attribute as well), it is NOT an AMOUNT Value (AMOUNT: an Integer or a Double), despite being a number Value, so you can NOT do arithmetic (addition: +, subtraction: -, multiplication: *, division: /, and modulus: % --- the 'modulus' operation is a division operation, but it finds/gets/returns the REMAINDER) operations on/with it\n\nplayer.strength_string_B = \"strong\"\n\ngame.introduction = \"Welcome to my game, I hope you enjoy it, muwahaha!\"\n\ngame.state_string = \"0\"\n\nplayer.description = player.alias + \" is a \" + player.sex + \" \" + player.age_string + \" \" + player.race + \" \" + player.class + \".\"\n// msg (player.description)\n// output: HK is a male adult human warrior.\n\nand this is what it looks like as 'creation' tags in code:\n\n&lt;game name=\"example_game\"&gt;\n\n  &lt;attr name=\"state_string\" type=\"string\"&gt;0&lt;/attr&gt;\n\n  &lt;attr name=\"introduction\" type=\"string\"&gt;Welcome to my game, I hope you enjoy it, muwahaha!&lt;/attr&gt;\n\n&lt;/game&gt;\n\n&lt;object name=\"player\"&gt;\n\n  &lt;attr name=\"alias\" type=\"string\"&gt;HK&lt;/attr&gt;\n  &lt;attr name=\"sex\" type=\"string\"&gt;male&lt;/attr&gt;\n  &lt;attr name=\"age_string\" type=\"string\"&gt;adult&lt;/attr&gt;\n  &lt;attr name=\"race\" type=\"string\"&gt;human&lt;/attr&gt;\n  &lt;attr name=\"class\" type=\"string\"&gt;warrior&lt;/attr&gt;\n\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p><strong>Integer Data Type:</strong></p>\n<pre><code>a non-decimal/non-fractional AMOUNT Value: -9999999, -100, -1, 0, 1, 100, 999999999\n\nIMP0RTANT: AMOUNT (Integer/Double) Values do NOT have double quotes!\n\nInteger Attribute examples\n\ngame.A_integer_attribute = 10\ngame.B_integer_attribute = 40\ngame.C_integer_attribute = game.A_integer_attribute + game.B_integer_attribute\n// game.C_integer_attribute = 50\n\nplayer.strength = 100\nplayer.endurance = 75\nplayer.life = (player.strength + player.endurance) / 2\n// player.life = (100 + 75) / 2 = 175 / 2 = 87.5 ---&gt; truncated (as these are Integer Values/Attributes) ----&gt; 87\n\nplayer.age_integer = 50\n\n// -------\n\n&lt;game name=\"example_game\"&gt;\n\n  &lt;attr name=\"A_integer_attribute\" type=\"int\"&gt;10&lt;/attr&gt;\n\n&lt;/game&gt;\n\n&lt;object name=\"player\"&gt;\n\n  &lt;attr name=\"strength\" type=\"int\"&gt;100&lt;/attr&gt;\n\n  &lt;attr name=\"age_integer\" type=\"int\"&gt;50&lt;/attr&gt;\n\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p><strong>Double Data Type:</strong></p>\n<p>decimal/fractional AMOUNTS: -9999999.123, -3.876, 0.0, 1.620000, 9999999999999.9</p>\n<p>(lazy)</p>\n<hr>\n<p><strong>Boolean Data Types:</strong></p>\n<pre><code>Booleans are known as 'flags' --- but, I don't really like 'flags' being used, as technically ALL VARIABLES, as they store data/values, are 'flags/indicators', but this is the term used for 'true/false' Booleans (binary:dualism:opposites outputs: true=yes=on=1 vs false=no=off=0), and thus being 'flagged on: true' or 'flagged off: false', used as: status flags, error flags, toggles, etc etc etc, see/google about: circuitry parts / circuitry programming designs / logic gates / etc etc etc)\n\nBoolean Values:\n\ntrue\nfalse\n\nthese are special reserved Values, as/for being the Boolean Values, so they do NOT have double quotes, and are NOT seen as Object Values by the quest's parser / programming\n\nBoolean Attributes:\n\norc.dead = false // conceptually: the orc is alive\norc.dead = true // conceptually: the orc is dead\n// (you'd pick either 'dead' or 'alive' for this example, whichever you like/prefer or works best for you, as you've no need for both)\norc.alive = true // conceptually: the orc is alive\norc.alive = false // coneptually: the orc is dead\n\nplayer.flying = true\nplayer.flying = false\n\n(just some example status attributes that are common in RPGS)\nplayer.poisoned = true // poisoned\nplayer.poisoned = false // NOT poisoned\nplayer.asleep = true // asleep\nplayer.asleep = false // NOT asleep\nplayer.confused = true // confused\nplayer.confused = false // NOT confused\nplayer.petrified = true // petrified\nplayer.petrified = false // NOT petrified\n\ntv.turned_on = true // the tv is on\ntv.turned_on = false // the tv is off\n// (you'd pick either 'turned_on' or 'turned_off' for this example, whichever you like/prefer or works best for you, as you've no need for both)\ntv.turned_off = true // the tv is off\ntv.turned_off = false // the tv is on\n\n&lt;object name=\"orc\"&gt;\n\n  &lt;attr name=\"dead\" type=\"boolean\"&gt;false&lt;/attr&gt;\n  &lt;!-- We want our orc to start out alive, lol --&gt;\n\n  &lt;attr name=\"undead\" type=\"boolean\"&gt;false&lt;/attr&gt;\n  &lt;!-- yep, our orc is NOT undead, lol --&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"skeleton\"&gt;\n\n  &lt;attr name=\"dead\" type=\"boolean\"&gt;false&lt;/attr&gt;\n  &lt;!-- We want our skeleton to start out alive, lol --&gt;\n\n  &lt;attr name=\"undead\" type=\"boolean\"&gt;true&lt;/attr&gt;\n  &lt;!-- yep, our skeleton IS undead, lol --&gt;\n\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p><strong>Object Data Types:</strong></p>\n<p>IMPORTANT: Object (pointer/reference) Values do NOT have double quotes (and they must NOT be any reserved/special Values, such as 'true' and 'false', which are reserved/special for being the Boolean Values)</p>\n<pre><code>// create (\"katana\") // this creates a 'katana' Object\n// katana.damage = 50 // an Integer Attribute of (contained within) the 'katana' Object\n\n// create (\"dagger\") // this creates a 'dagger' Object\n// dagger.damage = 1 // an Integer Attribute of (contained within) the 'dagger' Object\n\nplayer.weapon = katana\n// msg (player.weapon.damage)\n// output: 50\n\nplayer.weapon = dagger\n// msg (player.weapon.damage)\n// output: 1\n</code></pre>\n<hr>\n<p>and there's also these Data Types too:</p>\n<p><strong>Scripts</strong> --- this is it's own topic: scripting/coding... lol</p>\n<p>and</p>\n<p><strong>Lists</strong></p>\n<p><strong>Dictionaries</strong></p>\n<p>but these are a bit more advanced, so won't get into them here/now</p>\n\n",
      "PostDate": "2018-05-19T02:54:16.6808775Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1234d3f4-4492-4b9f-b74d-e315c55da708",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "while, you can't create custom Objects in a Game Book, you can create the same effect using Attributes, for example:\r\n\r\n(using the special 'game' Object for the Attributes, which give the same effect, as if you had custom 'monster' Objects)\r\n\r\n```\r\ngame.orc_life = 10\r\ngame.orc_damage = 10\r\ngame.orc_defense = 10\r\ngame.orc_alias = \"orc\"\r\n\r\ngame.ogre_life = 100\r\ngame.ogre_damage = 100\r\ngame.ogre_defense = 100\r\ngame.ogre_alias = \"ogre\"\r\n\r\ngame.dragon_life = 999999999\r\ngame.dragon_damage = 999\r\ngame.dragon_defense = 999\r\ngame.dragon_alias = \"dragon\"\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>while, you can't create custom Objects in a Game Book, you can create the same effect using Attributes, for example:</p>\n<p>(using the special 'game' Object for the Attributes, which give the same effect, as if you had custom 'monster' Objects)</p>\n<pre><code>game.orc_life = 10\ngame.orc_damage = 10\ngame.orc_defense = 10\ngame.orc_alias = \"orc\"\n\ngame.ogre_life = 100\ngame.ogre_damage = 100\ngame.ogre_defense = 100\ngame.ogre_alias = \"ogre\"\n\ngame.dragon_life = 999999999\ngame.dragon_damage = 999\ngame.dragon_defense = 999\ngame.dragon_alias = \"dragon\"\n</code></pre>\n\n",
      "PostDate": "2018-05-19T03:10:55.6181341Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b955e200-4888-4625-9b40-d57d6fa26664",
      "UserId": 153758,
      "Username": "Taru",
      "AvatarUrl": "https://secure.gravatar.com/avatar/052ee78666bb84bd52a2a1fd2947a87e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Those two links just led to more links which led to more links and I just kinda lost it. All this code is very confusing and I just want a simple, definitive answer with how to show/not show certain text if the player chooses one option. Sorry if I sound picky or whatever but I just don't understand all this.",
      "EditableFormat": "markdown",
      "HTML": "<p>Those two links just led to more links which led to more links and I just kinda lost it. All this code is very confusing and I just want a simple, definitive answer with how to show/not show certain text if the player chooses one option. Sorry if I sound picky or whatever but I just don't understand all this.</p>\n\n",
      "PostDate": "2018-05-19T08:26:03.1408209Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9e4f744e-b3af-41ed-aa02-6e5cf71f92f8",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> a simple, definitive answer with how to show/not show certain text if the player chooses one option\r\n\r\nSorry, but we'd need a little more information:\r\n\r\n1\\. Which attribute name will you use?\r\n\r\n2\\. Will that be a string attribute or a boolean attribute?\r\n\r\n---\r\nIf you're still trying to do the gender, Jennifer and I provided simple suggestions, but neither of us know the answers to the two questions I just listed, and we need to know that sort of stuff to give you a simple, definitive answer.\r\n\r\nIf you use the example I posted to set ```player.gender``` to a string attribute, which could be either \"Male\" or \"Female\", you can put this in a text field:\r\n\r\n```\r\nSince you are a {either player.gender=\"Male\":man, I will say manly things|woman, I will say womanly things}.\r\n```\r\n\r\n<a href=\"https://user-images.githubusercontent.com/27799208/40266786-ce83ce24-5b16-11e8-8e46-a260f9c1f683.png\"><img width=\"65%\" src=\"https://user-images.githubusercontent.com/27799208/40266786-ce83ce24-5b16-11e8-8e46-a260f9c1f683.png\"/></a>\r\n\r\n---\r\nIf you are using the desktop version of Quest, you can download and open this and see if playing around with it in the editor helps:\r\n\r\nRight-click this link and \"Save Link As\":\r\n[Attributes Gamebook.aslx](https://gist.githubusercontent.com/rheadkid/dbb7af5918635832849fc0cead5a0955/raw/803221634eec858a8782ce80bf49d7d9fb4d74a1/Attributes%2520Gamebook.aslx \"DOWNLOAD Attributes Gamebook.aslx from gist.github.com\")\r\n\r\n---\r\n**NOTE:** There are at least 6 other ways to work with those same attributes, and that's without even trying to think of all the possible ways to do it.\r\n\r\n\r\n---\r\n---\r\nIf you like [Jennifer's method](http://textadventures.co.uk/forum/quest/topic/psoh-wmvhugkpz_ttsvdqa/making-an-object#b205397f-f4bb-4f51-a97c-8e8025ce47fb) better, use her example:\r\n\r\n>Or, if you set a flag for the gender, then you could check that right in the text window:\r\n>The following example uses the flag 'male'. You could use anything.\r\n\r\n```\r\n{if male:The little birdie says, \"What's cookin' good lookin'?\"}{if not male:The little birdie says, \"Dude, what is wrong with you?\"}\r\n```\r\n\r\n> EDIT: Yes, you would put it all on one line. Otherwise, you'd get an extra line break in your output.\r\n\r\n\r\n---\r\nIf you'd like to learn how it works, scroll up and read the stuff HK posted.\r\n\r\n---\r\nIf you'd rather not do anything that's been suggested, you can try Squiffy instead of Quest.  \r\n\r\n\r\nHere's the Squiffy code:\r\n\r\n\r\n<details>\r\n\r\n```\r\nPlease select your gender:\r\n\r\n[[male]](start, gender=male)\r\n\r\n[[female]](start, gender=female)\r\n    \r\n[[start]]:\r\nYou selected {gender}.\r\n\r\n[[Continue...]]\r\n\r\n[[Continue...]]:\r\nSince you are {if gender=male:man, I will say manly things}{else:woman, I will say womanly things}.\r\n\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>a simple, definitive answer with how to show/not show certain text if the player chooses one option</p>\n</blockquote>\n<p>Sorry, but we'd need a little more information:</p>\n<p>1. Which attribute name will you use?</p>\n<p>2. Will that be a string attribute or a boolean attribute?</p>\n<hr>\n<p>If you're still trying to do the gender, Jennifer and I provided simple suggestions, but neither of us know the answers to the two questions I just listed, and we need to know that sort of stuff to give you a simple, definitive answer.</p>\n<p>If you use the example I posted to set <code>player.gender</code> to a string attribute, which could be either \"Male\" or \"Female\", you can put this in a text field:</p>\n<pre><code>Since you are a {either player.gender=\"Male\":man, I will say manly things|woman, I will say womanly things}.\n</code></pre>\n<p><a href=\"https://user-images.githubusercontent.com/27799208/40266786-ce83ce24-5b16-11e8-8e46-a260f9c1f683.png\"><img width=\"65%\" src=\"https://user-images.githubusercontent.com/27799208/40266786-ce83ce24-5b16-11e8-8e46-a260f9c1f683.png\"></a></p>\n<hr>\n<p>If you are using the desktop version of Quest, you can download and open this and see if playing around with it in the editor helps:</p>\n<p>Right-click this link and \"Save Link As\":<br>\n<a href=\"https://gist.githubusercontent.com/rheadkid/dbb7af5918635832849fc0cead5a0955/raw/803221634eec858a8782ce80bf49d7d9fb4d74a1/Attributes%2520Gamebook.aslx\" title=\"DOWNLOAD Attributes Gamebook.aslx from gist.github.com\">Attributes Gamebook.aslx</a></p>\n<hr>\n<p><strong>NOTE:</strong> There are at least 6 other ways to work with those same attributes, and that's without even trying to think of all the possible ways to do it.</p>\n<hr>\n<hr>\n<p>If you like <a href=\"http://textadventures.co.uk/forum/quest/topic/psoh-wmvhugkpz_ttsvdqa/making-an-object#b205397f-f4bb-4f51-a97c-8e8025ce47fb\">Jennifer's method</a> better, use her example:</p>\n<blockquote>\n<p>Or, if you set a flag for the gender, then you could check that right in the text window:<br>\nThe following example uses the flag 'male'. You could use anything.</p>\n</blockquote>\n<pre><code>{if male:The little birdie says, \"What's cookin' good lookin'?\"}{if not male:The little birdie says, \"Dude, what is wrong with you?\"}\n</code></pre>\n<blockquote>\n<p>EDIT: Yes, you would put it all on one line. Otherwise, you'd get an extra line break in your output.</p>\n</blockquote>\n<hr>\n<p>If you'd like to learn how it works, scroll up and read the stuff HK posted.</p>\n<hr>\n<p>If you'd rather not do anything that's been suggested, you can try Squiffy instead of Quest.</p>\n<p>Here's the Squiffy code:</p>\n<details>\n<pre><code>Please select your gender:\n\n[[male]](start, gender=male)\n\n[[female]](start, gender=female)\n    \n[[start]]:\nYou selected {gender}.\n\n[[Continue...]]\n\n[[Continue...]]:\nSince you are {if gender=male:man, I will say manly things}{else:woman, I will say womanly things}.\n\n</code></pre>\n</details>\n\n",
      "PostDate": "2018-05-19T08:53:54.347487Z",
      "LastEditDate": "2018-05-19T09:22:10.7340902Z",
      "link": null
    },
    {
      "PostId": "0841dc3c-faf4-4292-8e53-c2ca10b5caf9",
      "UserId": 153758,
      "Username": "Taru",
      "AvatarUrl": "https://secure.gravatar.com/avatar/052ee78666bb84bd52a2a1fd2947a87e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you once again! All that code in the quote boxes really confused me, but I got what you were talking about in the screenshots and it works, I'm so happy! I just tried to read through it all about Boolean and Integer and all that, and while I kind of understand what it meant I really had no idea what to do with that information. Regardless, I was able to change the text that shows up on the screen depending on what option you choose. You've been very helpful, thanks again.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you once again! All that code in the quote boxes really confused me, but I got what you were talking about in the screenshots and it works, I'm so happy! I just tried to read through it all about Boolean and Integer and all that, and while I kind of understand what it meant I really had no idea what to do with that information. Regardless, I was able to change the text that shows up on the screen depending on what option you choose. You've been very helpful, thanks again.</p>\n\n",
      "PostDate": "2018-05-19T09:17:51.7571736Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "551d136a-1e8b-408f-bf01-2d2610abf997",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Glad you got it working, and you'll get the hang of it!\r\n\r\nHappy gaming!",
      "EditableFormat": "markdown",
      "HTML": "<p>Glad you got it working, and you'll get the hang of it!</p>\n<p>Happy gaming!</p>\n\n",
      "PostDate": "2018-05-19T09:18:59.3460619Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d0ec0ac9-7fff-45b3-a630-c700f558b8d1",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n\r\n---------------------------\r\n\r\n**@ Taru:**\r\n\r\n**while, you seem to have gotten it, thanks to better explain'ers like RH/KV (uses lots of useful screenshots) and JC,**\r\n\r\n**let me try again anyways, lol...**\r\n\r\n---------\r\n\r\n**This is really comprehensive/detailed step by step guide/explanation, with many examples, ...hopefully this will greatly help you understand all of this stuff... lol**\r\n\r\n---------\r\n\r\nin the 'Game Book' version of quest, you only have 2 Objects (both of which are required Objects for the quest engine for it to work) that you can use for Attributes:\r\n\r\n1. the (default-named) 'player' Player Object\r\n2. the special 'game' (Game-wide/Global Settings and publishing public info stuff) Object\r\n\r\n```\r\n<game name=\"NAME_OF_YOUR_GAME\">\r\n  <!-- BLAH Attributes -->\r\n</game>\r\n\r\n<object name=\"player\">\r\n  <!-- BLAH Attributes -->\r\n</object>\r\n```\r\n\r\n---------\r\n\r\nyou do also have all of the various Page Objects, which you can use for Attributes too (I think --- I've not really used the Game Book that much), but the 'player' Player Object and the special 'game' Object, are your two main Objects for Attributes.\r\n\r\n```\r\n<game name=\"NAME_OF_YOUR_GAME\">\r\n  <!-- BLAH Attributes -->\r\n</game>\r\n\r\n<object name=\"player\">\r\n  <!-- BLAH Attributes -->\r\n</object>\r\n\r\n<object name=\"Page1\">\r\n  <!-- BLAH Attributes -->\r\n</object>\r\n\r\n<object name=\"Page2\">\r\n  <!-- BLAH Attributes -->\r\n</object>\r\n\r\n<!-- etc etc etc Page Objects -->\r\n```\r\n\r\n----------\r\n\r\nunlike the 'Text Adventure' version of quest, you don't have the nice Tabs and options that it has for creating Attributes, so for the 'Game Book' version of quest, you got to use Scripting for creating your Attributes\r\n\r\n---------\r\n\r\nusually, you want to use your very first Page Object for creating your Attributes, so they exist for use/manipulation for the rest of your game.\r\n\r\n-------\r\n\r\nthe first/starting/initial Page Object is where/what you start your 'Game Book' version of quest playing at/within.\r\n\r\nthis is controlled/determined by which Page Object has the 'player' Player Object contained within it at the start of your game\r\n\r\nyou HAVE TO have the 'player' Player Object be contained within a Page Object, this is a requirement by the quest engine.\r\n\r\n```\r\n// this is known as 'nesting' (layering/indenting), which works for containment heirarchy:\r\n\r\n// ----------------------\r\n\r\n// 'Page1' is your starting page:\r\n\r\n<game name=\"NAME_OF_YOUR_GAME\">\r\n  <!-- BLAH Attributes -->\r\n</game>\r\n\r\n<object name=\"Page1\">\r\n\r\n  <!-- BLAH Attributes -->\r\n\r\n  <object name=\"player\">\r\n    <!-- BLAH Attributes -->\r\n  </object>\r\n\r\n</object>\r\n\r\n<object name=\"Page99\">\r\n  <!-- BLAH Attributes -->\r\n</object>\r\n\r\n// ---------------------------------------\r\n\r\n// vs, 'Page99' as your starting page:\r\n\r\n<game name=\"NAME_OF_YOUR_GAME\">\r\n  <!-- BLAH Attributes -->\r\n</game>\r\n\r\n<object name=\"Page1\">\r\n  <!-- BLAH Attributes -->\r\n</object>\r\n\r\n<object name=\"Page99\">\r\n\r\n  <!-- BLAH Attributes -->\r\n\r\n  <object name=\"player\">\r\n  </object>\r\n\r\n</object>\r\n```\r\n\r\nalternatively to \"nesting\", you can do this instead:\r\n\r\nthe containment heirarchy is actually controlled by the built-in 'parent' Object Attribute\r\n\r\n```\r\n// 'Page1' is your starting page:\r\n\r\n<game name=\"NAME_OF_YOUR_GAME\">\r\n  <!-- BLAH Attributes -->\r\n</game>\r\n\r\n<object name=\"player\">\r\n\r\n  <!-- BLAH Attributes -->\r\n\r\n  <attr name=\"parent\" type=\"object\">Page1</attr>\r\n\r\n</object>\r\n\r\n<object name=\"Page1\">\r\n  <!-- BLAH Attributes -->\r\n</object>\r\n\r\n<object name=\"Page99\">\r\n  <!-- BLAH Attributes -->\r\n</object>\r\n\r\n// ---------------------------------------\r\n\r\n// vs, 'Page99' as your starting page:\r\n\r\n<game name=\"NAME_OF_YOUR_GAME\">\r\n  <!-- BLAH Attributes -->\r\n</game>\r\n\r\n<object name=\"player\">\r\n\r\n  <!-- BLAH Attributes -->\r\n\r\n  <attr name=\"parent\" type=\"object\">Page99</attr>\r\n\r\n</object>\r\n\r\n<object name=\"Page1\">\r\n  <!-- BLAH Attributes -->\r\n</object>\r\n\r\n<object name=\"Page99\">\r\n  <!-- BLAH Attributes -->\r\n</object>\r\n```\r\n\r\n---------------------\r\n\r\non the left side, is the \"tree of stuff (OBJECTS: the special 'game' Object, the 'player' Player Object, your various Page Objects, and maybe other stuff like Functions and etc --- not sure of what else a Game Book has, lol)\", it might be helpful to think of OBJECTS as like folders, which can contain more/sub OBJECTS within them and/or Attributes within them\r\n\r\n--------------------\r\n\r\nalright, now, on how to 'access' the scripting within the Game Gook (this is the only way to access the scripting in a Game Book in its GUI/Editor, aside from working directly in-code):\r\n\r\n```\r\n(the left side's) \"tree of stuff\" -> Pages -> 'WHATEVER' Page Object -> 'Page' Tab -> Page Type: [SCRIPT] or [SCRIPT + TEXT]\r\n```\r\n\r\n------------------\r\n\r\nCreating/setting Attributes:\r\n\r\ncreating the Attribute (so it now exists and can thus then be used elsewhere/anywhere) and setting its initial Value\r\n\r\n```\r\n(the left side's) \"tree of stuff\" -> Pages -> 'WHATEVER' Page Object -> 'Page' Tab -> Page Type: [SCRIPT] or [SCRIPT + TEXT] -> see below\r\n\r\n(run as script) -> add new script -> 'variables' section/category -> 'add a variable or attribute' Script -> see below\r\n\r\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION\r\n\r\nremember, you only got two Objects (aside from the various Page Objects) to work with for Attribute usage:\r\n\r\n1. the special 'game' Object\r\n2. the 'player' (or whatever you renamed it as) Player Object\r\n\r\nso, for an example:\r\n\r\nset variable player.sex = [EXPRESSION] \"male\"\r\n// and/or (both can exist at the same time, as they're two different Attributes: a 'sex' Attribute for the 'player' and a 'sex' Attribute for the 'game'. Think of like in terms of people in how both Attributes can exist at the same time: joe.hair_color = \"brown\", and, jim.hair_color = \"brown\")\r\nset variable game.sex = [EXPRESSION] \"male\"\r\n\r\n// functionally using 'player' or 'game', are the same, though for 'sex', using 'game.sex' doesn't make much conceptual sense for us humans, lol\r\n\r\n// I used 'sex' instead of 'gender', as 'gender' is already a built-in Attribute, (along with 'article'), controlling grammer usage, which I don't want to over-write/over-ride and thus if I did, I'd be losing that built-in grammer usage functionality, which I don't want, lol:\r\n\r\n// http://docs.textadventures.co.uk/quest/elements/\r\n// ('Elements' are the OBJECTS/STUFF in quest: Objects/Pages, the special 'game' Object, Player Object/s, Verbs, Commands, Turnscripts, Timers, etc etc etc --- not all of this stuff is available in the limited for-mainly-CYOA-type-of-games 'Game Book' version of quest, unlike the 'Text Adventure' version of quest, it's FULL functionality)\r\n\r\n// http://docs.textadventures.co.uk/quest/elements/object.html\r\n// these are the built-in Attributes for Objects in quest, the Game Book's Page Objects may not have all of these Attributes, not sure\r\n\r\n// http://docs.textadventures.co.uk/quest/attributes/gender.html\r\n// http://docs.textadventures.co.uk/quest/attributes/article.html\r\n\r\n// the break down of it:\r\n\r\n(Object Name: player)\r\n\r\nAttribute Name: sex\r\n\r\n(Attribute Type: string --- due to its Value, which determines the Attribute Type, as quest parses the Value to determine the Attribute Type, Value: \"male\", which is a String Value, as anything encased within double quotes is a String Value)\r\n\r\nAttribute Value: \"male\"\r\n\r\n// and/or:\r\n\r\n(Object Name: game)\r\n\r\nAttribute Name: sex\r\n\r\n(Attribute Type: string --- due to its Value, which determines the Attribute Type, as quest parses the Value to determine the Attribute Type, Value: \"male\", which is a String Value, as anything encased within double quotes is a String Value)\r\n\r\nAttribute Value: \"male\"\r\n```\r\n\r\n-----------------\r\n\r\nManipulating/changing/altering/adjusting/re-setting an Attribute's Value:\r\n\r\n```\r\n// now, anywhere afterwards (in the same page where you created the Attribute and set its initial Value, in its following scripting, and/or in another Page that comes after the Page where you created the Attribute and set its initial Value), you can use that Attribute for whatever you wish, including:\r\n\r\n// Manipulating/changing/altering/adjusting/re-setting an Attribute's Value:\r\n\r\n(the left side's) \"tree of stuff\" -> Pages -> 'WHATEVER' Page Object -> 'Page' Tab -> Page Type: [SCRIPT] or [SCRIPT + TEXT] -> see below\r\n\r\n(run as script) -> add new script -> 'variables' section/category -> 'add a variable or attribute' Script -> see below\r\n\r\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION\r\n\r\n// so, for an example, let's use our previous example, of: player.sex = \"male\", and change its Value from 'male' to 'female', shown below:\r\n\r\nset variable player.sex = [EXPRESSION] \"female\"\r\n```\r\n\r\nfor AMOUNT (Integers/Doubles) Values/Attributes, here's how to do arithemetic operations, examples:\r\n\r\n```\r\n// created Attributes and their setted initial Values:\r\n\r\nset variable player.strength = [EXPRESSION] 0\r\nset variable player.endurance = [EXPRESSION] 9\r\n\r\n// ---------------------\r\n\r\n// Addition: +\r\n\r\n// using just a literal/direct Value:\r\nset variable player.strength = [EXPRESSION] player.strength + 5\r\n\r\n// conceptually of how it works:\r\n//\r\n// in programming, we're doing an 'Assignment' operation: storing a Value into an Attribute (which obviously is not the same as in math of doing a comparison operation: if/is 'equal to' or not, lol), and also we're of course doing an addition operation too, which if/when done again and again, is increasing the value, which is stored into the Attribute, each time its done again\r\n//\r\n// initial value: player.strength = 0\r\n//\r\n// old value: player.strength = 0\r\n//\r\n// player.strength = player.strength + 5\r\n// player.strength (new: ?) = player.strength (old: 0) + 5\r\n// player.strength (new: ?) = (0) + 5 = 5\r\n//\r\n// new value: player.strength = 5\r\n//\r\n// old value: player.strength = 5\r\n//\r\n// player.strength = player.strength + 5\r\n// player.strength (new: ?) = player.strength (old: 5) + 5\r\n// player.strength (new: ?) = (5) + 5 = 10\r\n//\r\n// new value: player.strength = 10\r\n//\r\n// old value: player.strength = 10\r\n//\r\n// player.strength = player.strength + 5\r\n// player.strength (new: ?) = player.strength (old: 10) + 5\r\n// player.strength (new: ?) = (10) + 5 = 15\r\n//\r\n// new value: player.strength = 15\r\n//\r\n// etc etc etc\r\n\r\n// using a VARIABLE (an 'Attribute' VARIABLE, an Attribute):\r\nset variable player.strength = [EXPRESSION] player.strength + player.endurance\r\n// player.strength (new: ?) = player.strength (using the initial value, for this example, old: 0) + player.endurance (9)\r\n// player.strength (new: ?) = (0) + (9) = 9\r\n// if done again:\r\n// player.strength (new: ?) = player.strength (old: 9) + player.endurance (9)\r\n// player.strength (new: ?) = (9) + (9) = 18\r\n\r\n// --------------------------\r\n\r\nSubtraction: -\r\n\r\nset variable player.strength = [EXPRESSION] player.strength - 4\r\n\r\n// --------------------------\r\n\r\nMultiplication: *\r\n\r\nset variable player.strength = [EXPRESSION] player.strength * 8\r\n\r\n// ------------------------\r\n\r\nDivision: /\r\n\r\nset variable player.strength = [EXPRESSION] player.strength / 2\r\n\r\n// ------------------------\r\n\r\nModulus (division, but it gets/finds/returns the REMAINDER): %\r\n\r\nset variable player.strength = [EXPRESSION] player.strength % 5\r\n\r\n// ------------------------\r\n\r\n// example of a more complex expression:\r\n\r\nset variable player.damage = [EXPRESSION] 1\r\nset variable player.weapon_damage = [EXPRESSION] 50\r\nset variable player.strength = [EXPRESSION] 100\r\n\r\nset variable player.damage = [EXPRESSION] player.weapon_damage + player.weapon_damage * player.strength / 100\r\n// player.damage = (50) + (50) * (100) / 100 = (50) + (50) * 1 = (50) + 50 = 100\r\n\r\n// vs\r\n\r\nset variable player.damage = [EXPRESSION] 1\r\nset variable player.weapon_damage = [EXPRESSION] 50\r\nset variable player.strength = [EXPRESSION] 0\r\n\r\nset variable player.damage = [EXPRESSION] player.weapon_damage + player.weapon_damage * player.strength / 100\r\n// player.damage = (50) + (50) * (0) / 100 = (50) + (50) * 0 = (50) + 0 = 50\r\n\r\n// vs\r\n\r\nset variable player.damage = [EXPRESSION] 1\r\nset variable player.weapon_damage = [EXPRESSION] 50\r\nset variable player.strength = [EXPRESSION] 75\r\n\r\nset variable player.damage = [EXPRESSION] player.weapon_damage + player.weapon_damage * player.strength / 100\r\n// player.damage = (50) + (50) * (75) / 100 = (50) + 1/2 * 75 = (50) + 37 (the 0.5 of 37.5, gets truncated/removed due to being Integer) = 87\r\n\r\n// vs\r\n\r\nset variable player.damage = [EXPRESSION] 1\r\nset variable player.weapon_damage = [EXPRESSION] 50\r\nset variable player.strength = [EXPRESSION] 25\r\n\r\nset variable player.damage = [EXPRESSION] player.weapon_damage + player.weapon_damage * player.strength / 100\r\n// player.damage = (50) + (50) * (25) / 100 = (50) + 1/2 * 25 = (50) + 12 (the 0.5 of 12.5, gets truncated/removed due to being Integer) = 62\r\n```\r\n\r\n------------\r\n\r\nnow, let's get into using Attributes, the most common usage is conditionally:\r\n\r\nthe via using the 'if' or 'switch' Scripts:\r\n\r\n```\r\n(the left side's) \"tree of stuff\" -> Pages -> 'WHATEVER' Page Object -> 'Page' Tab -> Page Type: [SCRIPT] or [SCRIPT + TEXT] -> see below\r\n\r\n(run as script) -> add new script -> 'scripts' section/category -> 'if/switch' Scripts -> see below\r\n\r\nthe 'if' Script block (if, if + else_if/s, or if + else_if/s + else):\r\n\r\nif [EXPRESSION] CONDITIONAL_EXPRESSION\r\n-> then -> add new script -> 'WHATEVER' scripting\r\n\r\n// optionally (as many 'else ifs' as you want):\r\nadd else if -> [EXPRESSION] CONDITIONAL_EXPRESSION\r\n-> then -> add new script -> 'WHATEVER' scripting\r\n\r\n// optionally:\r\nadd else\r\n-> then add new script -> 'WHATEVER' scripting\r\n\r\n// ------------\r\n\r\n// the 'switch' (switch + case/s, or, switch + case/s + default) script block (its functionally the same as an 'if' script block, just a different style, so use whichever you prefer, or whichever works better for the scripting you want to do):\r\n\r\n// in code, it looks like this (sorry, don't know what it looks like in the GUI/Editor, hopefully you can match it up though):\r\n\r\nswitch (CONDITIONAL_EXPRESSION) {\r\n  case (POSSIBLE_MATCHING_VALUE_1) {\r\n    // 'WHATEVER' scripting\r\n  }\r\n  // optionally as many more 'cases' as you want\r\n  // optionally:\r\n  default {\r\n    // 'WHATEVER' scripting\r\n  }\r\n}\r\n\r\n// hopefully you can kinda see how the 'if' and 'switch' are the same, though an actual example will make more sense and be more clear for you, of course, so see below for some examples:\r\n\r\n(in code, as I'm lazy to write out the extra stuff that you see and need to do within the GUI/Editor, lol)\r\n\r\n// using the 'if' Script/Function:\r\n\r\ngame.test_score = GetRandomInt (0, 100)\r\n\r\nif (game.test_score > 89) {\r\n  game.test_grade = \"A\"\r\n}\r\nelse if (game.test_score > 79) {\r\n  game.test_grade = \"B\"\r\n}\r\nelse if (game.test_score > 69) {\r\n  game.test_grade = \"C\"\r\n}\r\nelse if (game.test_score > 59) {\r\n  game.test_grade = \"D\"\r\n}\r\nelse {\r\n  game.test_grade = \"F\"\r\n}\r\n\r\nmsg (\"Test Score: \" + game.test_score)\r\nmsg (\"Test Grade: \" + game.test_grade)\r\n\r\n// using 'switch' Script/Function:\r\n\r\ngame.test_score = GetRandomInt (0, 100)\r\n\r\nswitch (true) {\r\n  case (game.test_score > 89) {\r\n    game.test_grade = \"A\"\r\n  }\r\n  case (game.test_score > 79) {\r\n    game.test_grade = \"B\"\r\n  }\r\n  case (game.test_score > 69) {\r\n    game.test_grade = \"C\"\r\n  }\r\n  case (game.test_score > 59) {\r\n    game.test_grade = \"D\"\r\n  }\r\n  default {\r\n    game.test_grade = \"F\"\r\n  }\r\n}\r\n\r\nmsg (\"Test Score: \" + game.test_score)\r\nmsg (\"Test Grade: \" + game.test_grade)\r\n\r\n// -------\r\n\r\ngame.orc_alias = \"orc\"\r\ngame.orc_dead = false\r\n\r\n// (if/when you got to some Page, you kill the orc: game.orc_dead = true)\r\n\r\n// some other Page:\r\nif (game.orc_dead) { // quest knows/parses 'game.orc_dead' to be 'game.orc_dead = true' // if (TRUE)\r\n  msg (\"The \" + game.orc_alias + \" is dead.\")\r\n} else { // if (not game.orc_dead) === if (not game.orc_dead = true) === if (game.orc_dead = false) // if (FALSE)\r\n  msg (\"The \" + game.orc_alias\" + is not dead, and it kills you!\")\r\n  msg (\"GAME OVER\")\r\n}\r\n\r\n// ----------------\r\n\r\ngame.sex_stringlist_attribute = NewStringList ()\r\nlist add (game.sex_stringlist_attribute, \"male\")\r\nlist add (game.sex_stringlist_attribute, \"female\")\r\nlist add (game.sex_stringlist_attribute, \"hermaphrodite\")\r\nlist add (game.sex_stringlist_attribute, \"asexual\")\r\n\r\nshow menu (\"Sex?\", game.sex_stringlist_attribute, false) {\r\n\r\n  // the 'show menu / ShowMenu', 'ask/Ask', 'get input', and maybe some more Functions/Scripts too, automatically (hidden from you) do this:\r\n  // result = YOUR_MENU_CHOSEN_SELECTION_OR_YOUR_TYPED_IN_INPUT\r\n\r\n  // using the 'switch' Script/Function:\r\n  //\r\n  switch (result) {\r\n    case (\"male\") {\r\n      msg (\"You are a male\")\r\n    }\r\n    case (\"female\") {\r\n      msg (\"You are a female\")\r\n    }\r\n    case (\"hermaphrodite\") {\r\n      msg (\"You are a hermaphrodite\")\r\n    }\r\n    case (\"asexual\") {\r\n      msg (\"You are asexual\")\r\n    }\r\n  }\r\n\r\n  // or, using the 'if' Script/Function (choose one, don't use both, of course, lol):\r\n\r\n  if (result = \"male\") {\r\n    msg (\"You are a male\")\r\n  }\r\n  else if (result = \"female\") {\r\n    msg (\"You are a female\")\r\n  }\r\n  else if (result = \"hermaphrodite\") {\r\n    msg (\"You are a hermaphrodite\")\r\n  }\r\n  else if (result = \"asexual\") {\r\n    msg (\"You are asexual\")\r\n  }\r\n\r\n}\r\n\r\n// -------------\r\n\r\nmsg (\"Alignment?\")\r\nmsg (\"(Type in a number from '0' to '100')\")\r\n\r\nhandled_boolean_variable = true\r\n\r\nget input {\r\n\r\n  if (result > 100) {\r\n    player.alignment = 100\r\n  }\r\n  else if (result < 0) {\r\n    player.alignment = 0\r\n  }\r\n  else if (IsInt (result)) {\r\n    player.alignment = ToInt (result)\r\n  }\r\n  else {\r\n    handled_boolean_variable = false\r\n    msg (\"Wrong input, try again, typing in a number between '0' and '100', please\")\r\n  }\r\n\r\n  if (handled_boolean_variable) // if (TRUE)\r\n    msg (\"Alignment: \" + player.alignment)\r\n  }\r\n\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)</p>\n<hr>\n<p><strong>@ Taru:</strong></p>\n<p><strong>while, you seem to have gotten it, thanks to better explain'ers like RH/KV (uses lots of useful screenshots) and JC,</strong></p>\n<p><strong>let me try again anyways, lol...</strong></p>\n<hr>\n<p><strong>This is really comprehensive/detailed step by step guide/explanation, with many examples, ...hopefully this will greatly help you understand all of this stuff... lol</strong></p>\n<hr>\n<p>in the 'Game Book' version of quest, you only have 2 Objects (both of which are required Objects for the quest engine for it to work) that you can use for Attributes:</p>\n<ol>\n<li>the (default-named) 'player' Player Object</li>\n<li>the special 'game' (Game-wide/Global Settings and publishing public info stuff) Object</li>\n</ol>\n<pre><code>&lt;game name=\"NAME_OF_YOUR_GAME\"&gt;\n  &lt;!-- BLAH Attributes --&gt;\n&lt;/game&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;!-- BLAH Attributes --&gt;\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p>you do also have all of the various Page Objects, which you can use for Attributes too (I think --- I've not really used the Game Book that much), but the 'player' Player Object and the special 'game' Object, are your two main Objects for Attributes.</p>\n<pre><code>&lt;game name=\"NAME_OF_YOUR_GAME\"&gt;\n  &lt;!-- BLAH Attributes --&gt;\n&lt;/game&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;!-- BLAH Attributes --&gt;\n&lt;/object&gt;\n\n&lt;object name=\"Page1\"&gt;\n  &lt;!-- BLAH Attributes --&gt;\n&lt;/object&gt;\n\n&lt;object name=\"Page2\"&gt;\n  &lt;!-- BLAH Attributes --&gt;\n&lt;/object&gt;\n\n&lt;!-- etc etc etc Page Objects --&gt;\n</code></pre>\n<hr>\n<p>unlike the 'Text Adventure' version of quest, you don't have the nice Tabs and options that it has for creating Attributes, so for the 'Game Book' version of quest, you got to use Scripting for creating your Attributes</p>\n<hr>\n<p>usually, you want to use your very first Page Object for creating your Attributes, so they exist for use/manipulation for the rest of your game.</p>\n<hr>\n<p>the first/starting/initial Page Object is where/what you start your 'Game Book' version of quest playing at/within.</p>\n<p>this is controlled/determined by which Page Object has the 'player' Player Object contained within it at the start of your game</p>\n<p>you HAVE TO have the 'player' Player Object be contained within a Page Object, this is a requirement by the quest engine.</p>\n<pre><code>// this is known as 'nesting' (layering/indenting), which works for containment heirarchy:\n\n// ----------------------\n\n// 'Page1' is your starting page:\n\n&lt;game name=\"NAME_OF_YOUR_GAME\"&gt;\n  &lt;!-- BLAH Attributes --&gt;\n&lt;/game&gt;\n\n&lt;object name=\"Page1\"&gt;\n\n  &lt;!-- BLAH Attributes --&gt;\n\n  &lt;object name=\"player\"&gt;\n    &lt;!-- BLAH Attributes --&gt;\n  &lt;/object&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"Page99\"&gt;\n  &lt;!-- BLAH Attributes --&gt;\n&lt;/object&gt;\n\n// ---------------------------------------\n\n// vs, 'Page99' as your starting page:\n\n&lt;game name=\"NAME_OF_YOUR_GAME\"&gt;\n  &lt;!-- BLAH Attributes --&gt;\n&lt;/game&gt;\n\n&lt;object name=\"Page1\"&gt;\n  &lt;!-- BLAH Attributes --&gt;\n&lt;/object&gt;\n\n&lt;object name=\"Page99\"&gt;\n\n  &lt;!-- BLAH Attributes --&gt;\n\n  &lt;object name=\"player\"&gt;\n  &lt;/object&gt;\n\n&lt;/object&gt;\n</code></pre>\n<p>alternatively to \"nesting\", you can do this instead:</p>\n<p>the containment heirarchy is actually controlled by the built-in 'parent' Object Attribute</p>\n<pre><code>// 'Page1' is your starting page:\n\n&lt;game name=\"NAME_OF_YOUR_GAME\"&gt;\n  &lt;!-- BLAH Attributes --&gt;\n&lt;/game&gt;\n\n&lt;object name=\"player\"&gt;\n\n  &lt;!-- BLAH Attributes --&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;Page1&lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"Page1\"&gt;\n  &lt;!-- BLAH Attributes --&gt;\n&lt;/object&gt;\n\n&lt;object name=\"Page99\"&gt;\n  &lt;!-- BLAH Attributes --&gt;\n&lt;/object&gt;\n\n// ---------------------------------------\n\n// vs, 'Page99' as your starting page:\n\n&lt;game name=\"NAME_OF_YOUR_GAME\"&gt;\n  &lt;!-- BLAH Attributes --&gt;\n&lt;/game&gt;\n\n&lt;object name=\"player\"&gt;\n\n  &lt;!-- BLAH Attributes --&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;Page99&lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"Page1\"&gt;\n  &lt;!-- BLAH Attributes --&gt;\n&lt;/object&gt;\n\n&lt;object name=\"Page99\"&gt;\n  &lt;!-- BLAH Attributes --&gt;\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p>on the left side, is the \"tree of stuff (OBJECTS: the special 'game' Object, the 'player' Player Object, your various Page Objects, and maybe other stuff like Functions and etc --- not sure of what else a Game Book has, lol)\", it might be helpful to think of OBJECTS as like folders, which can contain more/sub OBJECTS within them and/or Attributes within them</p>\n<hr>\n<p>alright, now, on how to 'access' the scripting within the Game Gook (this is the only way to access the scripting in a Game Book in its GUI/Editor, aside from working directly in-code):</p>\n<pre><code>(the left side's) \"tree of stuff\" -&gt; Pages -&gt; 'WHATEVER' Page Object -&gt; 'Page' Tab -&gt; Page Type: [SCRIPT] or [SCRIPT + TEXT]\n</code></pre>\n<hr>\n<p>Creating/setting Attributes:</p>\n<p>creating the Attribute (so it now exists and can thus then be used elsewhere/anywhere) and setting its initial Value</p>\n<pre><code>(the left side's) \"tree of stuff\" -&gt; Pages -&gt; 'WHATEVER' Page Object -&gt; 'Page' Tab -&gt; Page Type: [SCRIPT] or [SCRIPT + TEXT] -&gt; see below\n\n(run as script) -&gt; add new script -&gt; 'variables' section/category -&gt; 'add a variable or attribute' Script -&gt; see below\n\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION\n\nremember, you only got two Objects (aside from the various Page Objects) to work with for Attribute usage:\n\n1. the special 'game' Object\n2. the 'player' (or whatever you renamed it as) Player Object\n\nso, for an example:\n\nset variable player.sex = [EXPRESSION] \"male\"\n// and/or (both can exist at the same time, as they're two different Attributes: a 'sex' Attribute for the 'player' and a 'sex' Attribute for the 'game'. Think of like in terms of people in how both Attributes can exist at the same time: joe.hair_color = \"brown\", and, jim.hair_color = \"brown\")\nset variable game.sex = [EXPRESSION] \"male\"\n\n// functionally using 'player' or 'game', are the same, though for 'sex', using 'game.sex' doesn't make much conceptual sense for us humans, lol\n\n// I used 'sex' instead of 'gender', as 'gender' is already a built-in Attribute, (along with 'article'), controlling grammer usage, which I don't want to over-write/over-ride and thus if I did, I'd be losing that built-in grammer usage functionality, which I don't want, lol:\n\n// http://docs.textadventures.co.uk/quest/elements/\n// ('Elements' are the OBJECTS/STUFF in quest: Objects/Pages, the special 'game' Object, Player Object/s, Verbs, Commands, Turnscripts, Timers, etc etc etc --- not all of this stuff is available in the limited for-mainly-CYOA-type-of-games 'Game Book' version of quest, unlike the 'Text Adventure' version of quest, it's FULL functionality)\n\n// http://docs.textadventures.co.uk/quest/elements/object.html\n// these are the built-in Attributes for Objects in quest, the Game Book's Page Objects may not have all of these Attributes, not sure\n\n// http://docs.textadventures.co.uk/quest/attributes/gender.html\n// http://docs.textadventures.co.uk/quest/attributes/article.html\n\n// the break down of it:\n\n(Object Name: player)\n\nAttribute Name: sex\n\n(Attribute Type: string --- due to its Value, which determines the Attribute Type, as quest parses the Value to determine the Attribute Type, Value: \"male\", which is a String Value, as anything encased within double quotes is a String Value)\n\nAttribute Value: \"male\"\n\n// and/or:\n\n(Object Name: game)\n\nAttribute Name: sex\n\n(Attribute Type: string --- due to its Value, which determines the Attribute Type, as quest parses the Value to determine the Attribute Type, Value: \"male\", which is a String Value, as anything encased within double quotes is a String Value)\n\nAttribute Value: \"male\"\n</code></pre>\n<hr>\n<p>Manipulating/changing/altering/adjusting/re-setting an Attribute's Value:</p>\n<pre><code>// now, anywhere afterwards (in the same page where you created the Attribute and set its initial Value, in its following scripting, and/or in another Page that comes after the Page where you created the Attribute and set its initial Value), you can use that Attribute for whatever you wish, including:\n\n// Manipulating/changing/altering/adjusting/re-setting an Attribute's Value:\n\n(the left side's) \"tree of stuff\" -&gt; Pages -&gt; 'WHATEVER' Page Object -&gt; 'Page' Tab -&gt; Page Type: [SCRIPT] or [SCRIPT + TEXT] -&gt; see below\n\n(run as script) -&gt; add new script -&gt; 'variables' section/category -&gt; 'add a variable or attribute' Script -&gt; see below\n\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION\n\n// so, for an example, let's use our previous example, of: player.sex = \"male\", and change its Value from 'male' to 'female', shown below:\n\nset variable player.sex = [EXPRESSION] \"female\"\n</code></pre>\n<p>for AMOUNT (Integers/Doubles) Values/Attributes, here's how to do arithemetic operations, examples:</p>\n<pre><code>// created Attributes and their setted initial Values:\n\nset variable player.strength = [EXPRESSION] 0\nset variable player.endurance = [EXPRESSION] 9\n\n// ---------------------\n\n// Addition: +\n\n// using just a literal/direct Value:\nset variable player.strength = [EXPRESSION] player.strength + 5\n\n// conceptually of how it works:\n//\n// in programming, we're doing an 'Assignment' operation: storing a Value into an Attribute (which obviously is not the same as in math of doing a comparison operation: if/is 'equal to' or not, lol), and also we're of course doing an addition operation too, which if/when done again and again, is increasing the value, which is stored into the Attribute, each time its done again\n//\n// initial value: player.strength = 0\n//\n// old value: player.strength = 0\n//\n// player.strength = player.strength + 5\n// player.strength (new: ?) = player.strength (old: 0) + 5\n// player.strength (new: ?) = (0) + 5 = 5\n//\n// new value: player.strength = 5\n//\n// old value: player.strength = 5\n//\n// player.strength = player.strength + 5\n// player.strength (new: ?) = player.strength (old: 5) + 5\n// player.strength (new: ?) = (5) + 5 = 10\n//\n// new value: player.strength = 10\n//\n// old value: player.strength = 10\n//\n// player.strength = player.strength + 5\n// player.strength (new: ?) = player.strength (old: 10) + 5\n// player.strength (new: ?) = (10) + 5 = 15\n//\n// new value: player.strength = 15\n//\n// etc etc etc\n\n// using a VARIABLE (an 'Attribute' VARIABLE, an Attribute):\nset variable player.strength = [EXPRESSION] player.strength + player.endurance\n// player.strength (new: ?) = player.strength (using the initial value, for this example, old: 0) + player.endurance (9)\n// player.strength (new: ?) = (0) + (9) = 9\n// if done again:\n// player.strength (new: ?) = player.strength (old: 9) + player.endurance (9)\n// player.strength (new: ?) = (9) + (9) = 18\n\n// --------------------------\n\nSubtraction: -\n\nset variable player.strength = [EXPRESSION] player.strength - 4\n\n// --------------------------\n\nMultiplication: *\n\nset variable player.strength = [EXPRESSION] player.strength * 8\n\n// ------------------------\n\nDivision: /\n\nset variable player.strength = [EXPRESSION] player.strength / 2\n\n// ------------------------\n\nModulus (division, but it gets/finds/returns the REMAINDER): %\n\nset variable player.strength = [EXPRESSION] player.strength % 5\n\n// ------------------------\n\n// example of a more complex expression:\n\nset variable player.damage = [EXPRESSION] 1\nset variable player.weapon_damage = [EXPRESSION] 50\nset variable player.strength = [EXPRESSION] 100\n\nset variable player.damage = [EXPRESSION] player.weapon_damage + player.weapon_damage * player.strength / 100\n// player.damage = (50) + (50) * (100) / 100 = (50) + (50) * 1 = (50) + 50 = 100\n\n// vs\n\nset variable player.damage = [EXPRESSION] 1\nset variable player.weapon_damage = [EXPRESSION] 50\nset variable player.strength = [EXPRESSION] 0\n\nset variable player.damage = [EXPRESSION] player.weapon_damage + player.weapon_damage * player.strength / 100\n// player.damage = (50) + (50) * (0) / 100 = (50) + (50) * 0 = (50) + 0 = 50\n\n// vs\n\nset variable player.damage = [EXPRESSION] 1\nset variable player.weapon_damage = [EXPRESSION] 50\nset variable player.strength = [EXPRESSION] 75\n\nset variable player.damage = [EXPRESSION] player.weapon_damage + player.weapon_damage * player.strength / 100\n// player.damage = (50) + (50) * (75) / 100 = (50) + 1/2 * 75 = (50) + 37 (the 0.5 of 37.5, gets truncated/removed due to being Integer) = 87\n\n// vs\n\nset variable player.damage = [EXPRESSION] 1\nset variable player.weapon_damage = [EXPRESSION] 50\nset variable player.strength = [EXPRESSION] 25\n\nset variable player.damage = [EXPRESSION] player.weapon_damage + player.weapon_damage * player.strength / 100\n// player.damage = (50) + (50) * (25) / 100 = (50) + 1/2 * 25 = (50) + 12 (the 0.5 of 12.5, gets truncated/removed due to being Integer) = 62\n</code></pre>\n<hr>\n<p>now, let's get into using Attributes, the most common usage is conditionally:</p>\n<p>the via using the 'if' or 'switch' Scripts:</p>\n<pre><code>(the left side's) \"tree of stuff\" -&gt; Pages -&gt; 'WHATEVER' Page Object -&gt; 'Page' Tab -&gt; Page Type: [SCRIPT] or [SCRIPT + TEXT] -&gt; see below\n\n(run as script) -&gt; add new script -&gt; 'scripts' section/category -&gt; 'if/switch' Scripts -&gt; see below\n\nthe 'if' Script block (if, if + else_if/s, or if + else_if/s + else):\n\nif [EXPRESSION] CONDITIONAL_EXPRESSION\n-&gt; then -&gt; add new script -&gt; 'WHATEVER' scripting\n\n// optionally (as many 'else ifs' as you want):\nadd else if -&gt; [EXPRESSION] CONDITIONAL_EXPRESSION\n-&gt; then -&gt; add new script -&gt; 'WHATEVER' scripting\n\n// optionally:\nadd else\n-&gt; then add new script -&gt; 'WHATEVER' scripting\n\n// ------------\n\n// the 'switch' (switch + case/s, or, switch + case/s + default) script block (its functionally the same as an 'if' script block, just a different style, so use whichever you prefer, or whichever works better for the scripting you want to do):\n\n// in code, it looks like this (sorry, don't know what it looks like in the GUI/Editor, hopefully you can match it up though):\n\nswitch (CONDITIONAL_EXPRESSION) {\n  case (POSSIBLE_MATCHING_VALUE_1) {\n    // 'WHATEVER' scripting\n  }\n  // optionally as many more 'cases' as you want\n  // optionally:\n  default {\n    // 'WHATEVER' scripting\n  }\n}\n\n// hopefully you can kinda see how the 'if' and 'switch' are the same, though an actual example will make more sense and be more clear for you, of course, so see below for some examples:\n\n(in code, as I'm lazy to write out the extra stuff that you see and need to do within the GUI/Editor, lol)\n\n// using the 'if' Script/Function:\n\ngame.test_score = GetRandomInt (0, 100)\n\nif (game.test_score &gt; 89) {\n  game.test_grade = \"A\"\n}\nelse if (game.test_score &gt; 79) {\n  game.test_grade = \"B\"\n}\nelse if (game.test_score &gt; 69) {\n  game.test_grade = \"C\"\n}\nelse if (game.test_score &gt; 59) {\n  game.test_grade = \"D\"\n}\nelse {\n  game.test_grade = \"F\"\n}\n\nmsg (\"Test Score: \" + game.test_score)\nmsg (\"Test Grade: \" + game.test_grade)\n\n// using 'switch' Script/Function:\n\ngame.test_score = GetRandomInt (0, 100)\n\nswitch (true) {\n  case (game.test_score &gt; 89) {\n    game.test_grade = \"A\"\n  }\n  case (game.test_score &gt; 79) {\n    game.test_grade = \"B\"\n  }\n  case (game.test_score &gt; 69) {\n    game.test_grade = \"C\"\n  }\n  case (game.test_score &gt; 59) {\n    game.test_grade = \"D\"\n  }\n  default {\n    game.test_grade = \"F\"\n  }\n}\n\nmsg (\"Test Score: \" + game.test_score)\nmsg (\"Test Grade: \" + game.test_grade)\n\n// -------\n\ngame.orc_alias = \"orc\"\ngame.orc_dead = false\n\n// (if/when you got to some Page, you kill the orc: game.orc_dead = true)\n\n// some other Page:\nif (game.orc_dead) { // quest knows/parses 'game.orc_dead' to be 'game.orc_dead = true' // if (TRUE)\n  msg (\"The \" + game.orc_alias + \" is dead.\")\n} else { // if (not game.orc_dead) === if (not game.orc_dead = true) === if (game.orc_dead = false) // if (FALSE)\n  msg (\"The \" + game.orc_alias\" + is not dead, and it kills you!\")\n  msg (\"GAME OVER\")\n}\n\n// ----------------\n\ngame.sex_stringlist_attribute = NewStringList ()\nlist add (game.sex_stringlist_attribute, \"male\")\nlist add (game.sex_stringlist_attribute, \"female\")\nlist add (game.sex_stringlist_attribute, \"hermaphrodite\")\nlist add (game.sex_stringlist_attribute, \"asexual\")\n\nshow menu (\"Sex?\", game.sex_stringlist_attribute, false) {\n\n  // the 'show menu / ShowMenu', 'ask/Ask', 'get input', and maybe some more Functions/Scripts too, automatically (hidden from you) do this:\n  // result = YOUR_MENU_CHOSEN_SELECTION_OR_YOUR_TYPED_IN_INPUT\n\n  // using the 'switch' Script/Function:\n  //\n  switch (result) {\n    case (\"male\") {\n      msg (\"You are a male\")\n    }\n    case (\"female\") {\n      msg (\"You are a female\")\n    }\n    case (\"hermaphrodite\") {\n      msg (\"You are a hermaphrodite\")\n    }\n    case (\"asexual\") {\n      msg (\"You are asexual\")\n    }\n  }\n\n  // or, using the 'if' Script/Function (choose one, don't use both, of course, lol):\n\n  if (result = \"male\") {\n    msg (\"You are a male\")\n  }\n  else if (result = \"female\") {\n    msg (\"You are a female\")\n  }\n  else if (result = \"hermaphrodite\") {\n    msg (\"You are a hermaphrodite\")\n  }\n  else if (result = \"asexual\") {\n    msg (\"You are asexual\")\n  }\n\n}\n\n// -------------\n\nmsg (\"Alignment?\")\nmsg (\"(Type in a number from '0' to '100')\")\n\nhandled_boolean_variable = true\n\nget input {\n\n  if (result &gt; 100) {\n    player.alignment = 100\n  }\n  else if (result &lt; 0) {\n    player.alignment = 0\n  }\n  else if (IsInt (result)) {\n    player.alignment = ToInt (result)\n  }\n  else {\n    handled_boolean_variable = false\n    msg (\"Wrong input, try again, typing in a number between '0' and '100', please\")\n  }\n\n  if (handled_boolean_variable) // if (TRUE)\n    msg (\"Alignment: \" + player.alignment)\n  }\n\n}\n</code></pre>\n\n",
      "PostDate": "2018-05-19T17:48:55.5005272Z",
      "LastEditDate": "2018-05-19T17:59:37.161958Z",
      "link": null
    },
    {
      "PostId": "9b8d92d7-6cce-45e8-a41b-6fd3be4bbeb9",
      "UserId": 341771,
      "Username": "JenniferCampbell",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8b9a63b5bbacc531368953df3a1709ec?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> \"in the 'Game Book' version of quest, you only have 2 Objects...\"\r\n\r\nSorry, HK, but this is not true.  Every page is an object and you can assign attributes to any of them.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>\"in the 'Game Book' version of quest, you only have 2 Objects...\"</p>\n</blockquote>\n<p>Sorry, HK, but this is not true.  Every page is an object and you can assign attributes to any of them.</p>\n\n",
      "PostDate": "2018-05-21T12:49:08.2140469Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
