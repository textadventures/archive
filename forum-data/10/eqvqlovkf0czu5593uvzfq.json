{
  "Topic": {
    "TopicId": "eqvqlovkf0czu5593uvzfq",
    "ForumId": "10",
    "Title": "Silliness with status attributes",
    "LastUpdated": "2021-01-27T17:53:31.8462322Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "a1e439d4-d381-4177-9abe-3f1ac6328721",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "A few times, I've seen links to tutorials on how to add health bars in Quest; normally involving turnscripts or javascript to keep them updated.\r\n\r\nI just started thinking about what would be a much simpler way to do it. And I tried adding a health bar using the standard status attributes.\r\n\r\nJust add health to status attributes, and instead of setting the format to `Health: !%` or similar, I set it to:\r\n```\r\n<span style=\"display: block; position: relative; width: 100%; background-color: red; overflow: hidden;\"><span style=\"display: block; position: absolute; top: 0px; left: 0px; width: !%; height: 100%; background-color: green;\" /><span style=\"position: relative\">Health: !%</span></span>\r\n```\r\n\r\nThis seems to work just fine for me.\r\nNot sure if it's been done before, but if not I hope someone will find it useful.",
      "EditableFormat": "markdown",
      "HTML": "<p>A few times, I've seen links to tutorials on how to add health bars in Quest; normally involving turnscripts or javascript to keep them updated.</p>\n<p>I just started thinking about what would be a much simpler way to do it. And I tried adding a health bar using the standard status attributes.</p>\n<p>Just add health to status attributes, and instead of setting the format to <code>Health: !%</code> or similar, I set it to:</p>\n<pre><code>&lt;span style=\"display: block; position: relative; width: 100%; background-color: red; overflow: hidden;\"&gt;&lt;span style=\"display: block; position: absolute; top: 0px; left: 0px; width: !%; height: 100%; background-color: green;\" /&gt;&lt;span style=\"position: relative\"&gt;Health: !%&lt;/span&gt;&lt;/span&gt;\n</code></pre>\n<p>This seems to work just fine for me.<br>\nNot sure if it's been done before, but if not I hope someone will find it useful.</p>\n\n",
      "PostDate": "2021-01-27T17:53:31.8462322Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "dc542715-822b-45d8-9d0a-f82caad424f3",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is this for that other guy's survival thread?",
      "EditableFormat": "markdown",
      "HTML": "<p>Is this for that other guy's survival thread?</p>\n\n",
      "PostDate": "2021-01-27T18:17:06.6508173Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6d0b87a9-381e-4a9f-96f8-a1a61d4b66bb",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "No; just a simpler way to give a graphical representation of a percentile attribute.",
      "EditableFormat": "markdown",
      "HTML": "<p>No; just a simpler way to give a graphical representation of a percentile attribute.</p>\n\n",
      "PostDate": "2021-01-27T23:34:22.1111456Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a8d9d4c4-0fe7-481a-af57-e2e811a1135a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Pykrete got me thinking now, wondering if it would be easy to include status bars in the status attributes pane.\r\n\r\nI'm thinking something like…\r\n```\r\n$(function () {\r\n  var statusAttributes = {};\r\n  updateStatus = function (text) {\r\n    var oldAttributes = statusAttributes;\r\n    statusAttributes = {};\r\n    $.each(text.split(\"<br/>\"), function (i, attr) {\r\n      var results = this.match(/^((\\W*[\\w\\s]+).*?)(?:(\\d+)\\s*(%|\\/\\s*\\d+)\\s*(?:\\[\\[(.*?)(?:\\|\\|(.*?))?\\]\\])?\\s*(.*))?$/);\r\n      var pre = results[1];\r\n      var attrName = results[2].replace(/\\s/g,\"\");\r\n      var value = results[3];\r\n      var max = results[4];\r\n      var realmax = max.replace(/\\D/g,\"\") || 100;\r\n      var colour1 = results[5];\r\n      var colour2 = results[6];\r\n      var post = results[7];\r\n      var bar = oldAttributes[attrName];\r\n      if (bar) { delete oldAttributes[attrName]; }\r\n      var result;\r\n      if (value) {\r\n        if (bar && bar.length) {\r\n          result = bar;\r\n        } else {\r\n          bar = result = $('<span>', {id: 'status_'+attrName,class:'container'}).css({display:'block',position:'relative';width:'100%',overflow:'hidden',backgroundColor:'red'}).appendTo('#statusVars');\r\n          $('<span>', {class: 'slider'}).css({display:'block',position:'absolute',top:0,left:0,height:'100%',backgroundColor:green,width:(value*100/top)+\"%\"}).appendTo(bar);\r\n          $('<span>', {class: 'label'}).css({position:'relative'}).appendTo(bar);\r\n          $('<span>', {class: 'max'}).css({position:'absolute',top:0,right:0}).appendTo(bar);\r\n        }\r\n        bar.find('.slider').animate({width: bar.find(\".container\").innerWidth() * value / (realmax || bar.data('max'))});\r\n        if (colour1) { bar.find('.slider').css({backgroundColor: colour1}); }\r\n        if (colour2) { bar.find('.container').css({backgroundColor: colour2}); }\r\n        if (post) {\r\n          bar.find('.max').hide();\r\n          bar.find('.label').html(pre + \" \" + value + max + \" \" + post);\r\n        } else {\r\n          bar.find('.label').html(pre + \" \" + value);\r\n          bar.find('.max').show().html(realmax);\r\n        }\r\n      } else if (bar && bar.length) {\r\n        result = bar;\r\n        bar.html(this);\r\n      } else {\r\n        result = $('<span>', {id: 'status_'+attrName}).css('display','block').appendTo('#statusVars').html(this);\r\n      }\r\n      statusAttributes[attrName] = result;\r\n    });\r\n    $.each(oldAttributes, function () {\r\n      $(this).remove();\r\n    });\r\n  };\r\n});\r\n```\r\n(off the top of my head; probably full of bugs. Included in your UI initialisation, it should mean that in your status attributes, a line like:\r\n```\r\nHit Points: 36/38\r\n```\r\nor\r\n```\r\nBattery Level: 74% [[yellow||black]]\r\n```\r\nwill automatically get turned into a little (animated!) bar in the specified colours (green/red default)",
      "EditableFormat": "markdown",
      "HTML": "<p>Pykrete got me thinking now, wondering if it would be easy to include status bars in the status attributes pane.</p>\n<p>I'm thinking something like…</p>\n<pre><code>$(function () {\n  var statusAttributes = {};\n  updateStatus = function (text) {\n    var oldAttributes = statusAttributes;\n    statusAttributes = {};\n    $.each(text.split(\"&lt;br/&gt;\"), function (i, attr) {\n      var results = this.match(/^((\\W*[\\w\\s]+).*?)(?:(\\d+)\\s*(%|\\/\\s*\\d+)\\s*(?:\\[\\[(.*?)(?:\\|\\|(.*?))?\\]\\])?\\s*(.*))?$/);\n      var pre = results[1];\n      var attrName = results[2].replace(/\\s/g,\"\");\n      var value = results[3];\n      var max = results[4];\n      var realmax = max.replace(/\\D/g,\"\") || 100;\n      var colour1 = results[5];\n      var colour2 = results[6];\n      var post = results[7];\n      var bar = oldAttributes[attrName];\n      if (bar) { delete oldAttributes[attrName]; }\n      var result;\n      if (value) {\n        if (bar &amp;&amp; bar.length) {\n          result = bar;\n        } else {\n          bar = result = $('&lt;span&gt;', {id: 'status_'+attrName,class:'container'}).css({display:'block',position:'relative';width:'100%',overflow:'hidden',backgroundColor:'red'}).appendTo('#statusVars');\n          $('&lt;span&gt;', {class: 'slider'}).css({display:'block',position:'absolute',top:0,left:0,height:'100%',backgroundColor:green,width:(value*100/top)+\"%\"}).appendTo(bar);\n          $('&lt;span&gt;', {class: 'label'}).css({position:'relative'}).appendTo(bar);\n          $('&lt;span&gt;', {class: 'max'}).css({position:'absolute',top:0,right:0}).appendTo(bar);\n        }\n        bar.find('.slider').animate({width: bar.find(\".container\").innerWidth() * value / (realmax || bar.data('max'))});\n        if (colour1) { bar.find('.slider').css({backgroundColor: colour1}); }\n        if (colour2) { bar.find('.container').css({backgroundColor: colour2}); }\n        if (post) {\n          bar.find('.max').hide();\n          bar.find('.label').html(pre + \" \" + value + max + \" \" + post);\n        } else {\n          bar.find('.label').html(pre + \" \" + value);\n          bar.find('.max').show().html(realmax);\n        }\n      } else if (bar &amp;&amp; bar.length) {\n        result = bar;\n        bar.html(this);\n      } else {\n        result = $('&lt;span&gt;', {id: 'status_'+attrName}).css('display','block').appendTo('#statusVars').html(this);\n      }\n      statusAttributes[attrName] = result;\n    });\n    $.each(oldAttributes, function () {\n      $(this).remove();\n    });\n  };\n});\n</code></pre>\n<p>(off the top of my head; probably full of bugs. Included in your UI initialisation, it should mean that in your status attributes, a line like:</p>\n<pre><code>Hit Points: 36/38\n</code></pre>\n<p>or</p>\n<pre><code>Battery Level: 74% [[yellow||black]]\n</code></pre>\n<p>will automatically get turned into a little (animated!) bar in the specified colours (green/red default)</p>\n\n",
      "PostDate": "2021-01-29T21:36:12.433374Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "42d5dbd0-d802-4973-9568-d0c43c728a65",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I wish you luck on your project mrangel!",
      "EditableFormat": "markdown",
      "HTML": "<p>I wish you luck on your project mrangel!</p>\n\n",
      "PostDate": "2021-01-29T22:23:09.7665623Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
