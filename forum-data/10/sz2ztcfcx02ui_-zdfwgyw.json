{
  "Topic": {
    "TopicId": "sz2ztcfcx02ui_-zdfwgyw",
    "ForumId": "10",
    "Title": "Removing Cloned Objects",
    "LastUpdated": "2017-05-18T18:50:05.0750925Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "49c2c3e3-9f8c-49e9-b522-7588be5bb3c4",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi,\r\n\r\nSo currently in my combat system, I've found that the only way to \"kill\" an object is to check when the object has reached 0 or less health and then actually move the object from the current room back to some limbo room, so that I can reuse the object, and then I run a script that resets its health back to full. The issues I have with this is that:\r\n\r\n1) For the combat script, I can handle 99% of the script with just object.name, but when I want to move the object out, I have to name the creature specifically. Thus, I can use object.name to attack an orc, but once the orc's health drops below 0, I have to name the orc as the creature to be moved out of the room.\r\n\r\n2) As I have to name the creature, I've found that I have to create a large, and thoroughly confusing switch statement (object.name) with each creature being a \"key\", to handle the whole moving it out of the room process. However, this only works in such a way for single target battles, as I can only have 1 orc in the room.\r\n\r\n3) I've tried cloning an object, and most of the script works against it, but when it comes to moving the orc out of the room, it has no effect. As the orc is called orc as the object.name, and the cloned orc is called orc1, and thus any scripts affecting orc doesn't affect orc1. \r\n\r\nSo... my questions are thus:\r\n\r\n1) Is there a custom expression that I could write up such as : move object.name to limbo (limbo being the place where I store the creatures not in use)? Thus by doing so anytime any creature drops below 0 health, it would be moved out of the room.\r\n\r\n2) Would that above expression work on cloned objects? \r\n\r\n3) If not, is there a custom expression I could write up that could remove cloned objects when they reach 0 or less health?\r\n\r\nI've tried looking up the documentation on cloned objects and it is very bare bones... it tells you how to create a clone, but doesn't tell you how to move the clone once it is some place, or remove the clone or have the clone work precisely like the original object, if it is an inventory item.\r\n\r\nAny help would be appreciated!",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi,</p>\n<p>So currently in my combat system, I've found that the only way to \"kill\" an object is to check when the object has reached 0 or less health and then actually move the object from the current room back to some limbo room, so that I can reuse the object, and then I run a script that resets its health back to full. The issues I have with this is that:</p>\n<ol>\n<li>\n<p>For the combat script, I can handle 99% of the script with just object.name, but when I want to move the object out, I have to name the creature specifically. Thus, I can use object.name to attack an orc, but once the orc's health drops below 0, I have to name the orc as the creature to be moved out of the room.</p>\n</li>\n<li>\n<p>As I have to name the creature, I've found that I have to create a large, and thoroughly confusing switch statement (object.name) with each creature being a \"key\", to handle the whole moving it out of the room process. However, this only works in such a way for single target battles, as I can only have 1 orc in the room.</p>\n</li>\n<li>\n<p>I've tried cloning an object, and most of the script works against it, but when it comes to moving the orc out of the room, it has no effect. As the orc is called orc as the object.name, and the cloned orc is called orc1, and thus any scripts affecting orc doesn't affect orc1.</p>\n</li>\n</ol>\n<p>So... my questions are thus:</p>\n<ol>\n<li>\n<p>Is there a custom expression that I could write up such as : move object.name to limbo (limbo being the place where I store the creatures not in use)? Thus by doing so anytime any creature drops below 0 health, it would be moved out of the room.</p>\n</li>\n<li>\n<p>Would that above expression work on cloned objects?</p>\n</li>\n<li>\n<p>If not, is there a custom expression I could write up that could remove cloned objects when they reach 0 or less health?</p>\n</li>\n</ol>\n<p>I've tried looking up the documentation on cloned objects and it is very bare bones... it tells you how to create a clone, but doesn't tell you how to move the clone once it is some place, or remove the clone or have the clone work precisely like the original object, if it is an inventory item.</p>\n<p>Any help would be appreciated!</p>\n\n",
      "PostDate": "2017-05-18T18:50:05.0750925Z",
      "LastEditDate": null
    },
    {
      "PostId": "3cad35ec-e25f-4fbc-a37a-80c5b15c26e0",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the 'name' String Attribute is the ID for quest (so it must be unique, just as my DNA is uniquely mine/me and yours is unique yours), so while your original Object is named 'orc', Cloned Objects have to be given a different name, which is achieved by adding contigious numbers to it (I've yet never worked with clones, so I don't know whether it starts at 0, 1, or 2, and whether there's an underscore used before the number or not), for example (again, I don't know exactly how it names the Clones):\r\n\r\noriginal Object's 'name' (ID) String Attribute: orc\r\ncloned Objects' 'name' (ID) String Attribute: orc_2, orc_3, orc_4, etc\r\n\r\nthus, you (as of right now) got no way to identify the Clones vs the original Objects. So, you need a way to do so!\r\n\r\nwe can have a system for names that we can use as one way to identify them and/or simply have an Attribute for identifying them:\r\n\r\n1. by naming convention/system:\r\n\r\nwe use the 'String Manipulation' Functions:\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/ (scroll down to the very bottom, to the 'String Function' last section/category)\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/string/startswith.html\r\nhttp://docs.textadventures.co.uk/quest/functions/string/endswith.html\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/string/lengthof.html\r\n\r\nso, for example (using my own naming/labeling convention/system):\r\n\r\noriginal Objects:\r\n\r\norc_1_object, orc_2_object, etc\r\nogre_1_object, ogre_2_object, etc\r\ntroll_1_object, troll_2_object, etc\r\ngoblin_1_object, goblin_2_object, etc\r\ngremlin_1_object, gremlin_2_object, etc\r\n\r\nCloned Objects (again, I don't know how they're exactly named by quest's cloning functions):\r\n\r\norc_1_object_2, orc_1_object_3, etc\r\nogre_1_object_2, ogre_1_object_3, etc\r\ntroll_1_object_2, troll_1_object_3, etc\r\ngoblin_1_object_2, goblin_1_object_3, etc\r\ngremlin_1_object_2, goblin_1_object_3, etc\r\n\r\nexample scripting:\r\n\r\n(the code doesn't handle if your numbers are more than 1 digit, I just realized this at the end, so I'd have to think some more and re-design the code to handle if the numbers are more than 1 digit)\r\n\r\n```\r\n<function name=\"example_function\" parameters=\"object_parameter\">\r\n  <![CDATA[\r\n\r\n    // --------------------------------------\r\n\r\n    if (StartsWith (object_parameter.name, \"orc\")) {\r\n      msg (\"This is either one of your original orc Objects or one of any of your cloned orc Objects\")\r\n    } else  if (StartsWith (object_parameter.name, \"ogre\") {\r\n      msg (\"This is either one of your original ogre Objects or one of any of your cloned ogre Objects\")\r\n    } else  if (StartsWith (object_parameter.name, \"troll\") {\r\n      msg (\"This is either one of your original troll Objects or one of any of your cloned troll Objects\")\r\n    } else  if (StartsWith (object_parameter.name, \"goblin\") {\r\n      msg (\"This is either one of your original goblin Objects or one of any of your cloned goblin Objects\")\r\n    } else  if (StartsWith (object_parameter.name, \"gremlin\") {\r\n      msg (\"This is either one of your original gremlin Objects or one of any of your cloned gremlin Objects\")\r\n    }\r\n\r\n    // -----------------------------------------------------------------\r\n\r\n    if (StartsWith (object_parameter.name, \"orc\") and LengthOf (object_parameter.name) > LengthOf (\"orc_x_object\")) {\r\n      msg (\"This is one of any of your cloned orc Objects\")\r\n    } else if (StartsWith (object_parameter.name, \"orc\") and LengthOf (object_parameter.name) > LengthOf (\"ogre_x_object\")) {\r\n      msg (\"This is one of any of your cloned ogre Objects\")\r\n    } else  if (StartsWith (object_parameter.name, \"troll\") and LengthOf (object_parameter.name) > LengthOf (\"troll_x_object\")) {\r\n      msg (\"This is one of any of your cloned troll Objects\")\r\n    } else  if (StartsWith (object_parameter.name, \"goblin\") and LengthOf (object_parameter.name) > LengthOf (\"goblin_x_object\")) {\r\n      msg (\"This is one of any of your cloned goblin Objects\")\r\n    } else  if (StartsWith (object_parameter.name, \"gremlin\") and LengthOf (object_parameter.name) > LengthOf (\"gremlin_x_object\")) {\r\n      msg (\"This is one of any of your cloned gremlin Objects\")\r\n    }\r\n\r\n    // ----------------------------------------------\r\n\r\n    if (StartsWith (object_parameter.name, \"orc\") and LengthOf (object_parameter.name) = LengthOf (\"orc_x_object\")) {\r\n      msg (\"This is one of your original orc Objects\")\r\n    } else if (StartsWith (object_parameter.name, \"orc\") and LengthOf (object_parameter.name) = LengthOf (\"ogre_x_object\")) {\r\n      msg (\"This is one of your original ogre Objects\")\r\n    } else  if (StartsWith (object_parameter.name, \"troll\") and LengthOf (object_parameter.name) = LengthOf (\"troll_x_object\")) {\r\n      msg (\"This is one of your original troll Objects\")\r\n    } else  if (StartsWith (object_parameter.name, \"goblin\") and LengthOf (object_parameter.name) = LengthOf (\"goblin_x_object\")) {\r\n      msg (\"This is one of your original goblin Objects\")\r\n    } else  if (StartsWith (object_parameter.name, \"gremlin\") and LengthOf (object_parameter.name) = LengthOf (\"gremlin_x_object\")) {\r\n      msg (\"This is one of your original gremlin Objects\")\r\n    }\r\n\r\n    // ---------------------------------------\r\n\r\n    if (StartsWith (object_parameter.name, \"orc\") and LengthOf (object_parameter.name) = LengthOf (\"orc_x_object\")) {\r\n      if (Mid (object_parameter.name, 5, 1) = \"1\") {  // it might be: 4 instead of 5\r\n        msg (\"This is your 'orc_1_object' original Object\")\r\n      } else if (Mid (object_parameter.name, 5, 1) = \"2\") {  // it might be: 4 instead of 5\r\n        msg (\"This is your 'orc_2_object' original Object\")\r\n      }\r\n    } else if (StartsWith (object_parameter.name, \"ogre\") and LengthOf (object_parameter.name) = LengthOf (\"ogre_x_object\")) {\r\n      if (Mid (object_parameter.name, 5, 1) = \"1\") { // it might be: 4 instead of 5\r\n        msg (\"This is your 'ogre_1_object' original Object\")\r\n      } else if (Mid (object_parameter.name, 5, 1) = \"2\") {  // it might be: 4 instead of 5\r\n        msg (\"This is your 'ogre_2_object' original Object\")\r\n      }\r\n    } else  if (StartsWith (object_parameter.name, \"troll\") and LengthOf (object_parameter.name) = LengthOf (\"troll_x_object\")) {\r\n      if (Mid (object_parameter.name, 5, 1) = \"1\") {  // it might be: 4 instead of 5\r\n        msg (\"This is your 'troll_1_object' original Object\")\r\n      } else if (Mid (object_parameter.name, 5, 1) = \"2\") {  // it might be: 4 instead of 5\r\n        msg (\"This is your 'troll_2_object' original Object\")\r\n      }\r\n    } else  if (StartsWith (object_parameter.name, \"goblin\") and LengthOf (object_parameter.name) = LengthOf (\"goblin_x_object\")) {\r\n      if (Mid (object_parameter.name, 5, 1) = \"1\") {  // it might be: 4 instead of 5\r\n        msg (\"This is your 'goblin_1_object' original Object\")\r\n      } else if (Mid (object_parameter.name, 5, 1) = \"2\") {  // it might be: 4 instead of 5\r\n        msg (\"This is your 'goblin_2_object' original Object\")\r\n      }\r\n    } else  if (StartsWith (object_parameter.name, \"gremlin\") and LengthOf (object_parameter.name) = LengthOf (\"gremlin_x_object\")) {\r\n      if (Mid (object_parameter.name, 5, 1) = \"1\") {  // it might be: 4 instead of 5\r\n        msg (\"This is your 'gremlin_1_object' original Object\")\r\n      } else if (Mid (object_parameter.name, 5, 1) = \"2\") {  // it might be: 4 instead of 5\r\n        msg (\"This is your 'gremlin_2_object' original Object\")\r\n      }\r\n    }\r\n\r\n    // ----------------------\r\n\r\n    if (StartsWith (object_parameter.name, \"orc\") and LengthOf (object_parameter.name) > LengthOf (\"orc_x_object\")) {\r\n      if (Mid (object_parameter.name, 5, 1) = \"1\") {  // it might be: 4 instead of 5\r\n        if (EndsWith (object_parameter.name, \"2\") {\r\n          msg (\"This is your 'orc_1_object_2' cloned Object\")\r\n        } else  if (EndsWith (object_parameter.name, \"3\") {\r\n          msg (\"This is your 'orc_1_object_3' cloned Object\")\r\n        }\r\n      } else if (Mid (object_parameter.name, 5, 1) = \"2\") {  // it might be: 4 instead of 5\r\n         if (EndsWith (object_parameter.name, \"2\") {\r\n          msg (\"This is your 'orc_2_object_2' cloned Object\")\r\n        } else  if (EndsWith (object_parameter.name, \"3\") {\r\n          msg (\"This is your 'orc_2_object_3' cloned Object\")\r\n        }\r\n      }\r\n    ] else if (StartsWith (object_parameter.name, \"ogre\") and LengthOf (object_parameter.name) > LengthOf (\"ogre_x_object\")) {\r\n      if (Mid (object_parameter.name, 5, 1) = \"1\") {  // it might be: 4 instead of 5\r\n        if (EndsWith (object_parameter.name, \"2\") {\r\n          msg (\"This is your 'ogre_1_object_2' cloned Object\")\r\n        } else  if (EndsWith (object_parameter.name, \"3\") {\r\n          msg (\"This is your 'ogre_1_object_3' cloned Object\")\r\n        }\r\n      } else if (Mid (object_parameter.name, 5, 1) = \"2\") {  // it might be: 4 instead of 5\r\n         if (EndsWith (object_parameter.name, \"2\") {\r\n          msg (\"This is your 'ogre_2_object_2' cloned Object\")\r\n        } else  if (EndsWith (object_parameter.name, \"3\") {\r\n          msg (\"This is your 'ogre_2_object_3' cloned Object\")\r\n        }\r\n      }\r\n    ]\r\n    // etc etc etc (troll, goblin, gremlin)\r\n\r\n    // ------------------------------\r\n\r\n  ]]>\r\n</function\r\n```\r\n\r\n2. using Attributes:\r\n\r\n(Inherited Attributes / Object Types / Types / quest's user-level classes/groups/templates)\r\n\r\n(not sure if  you can access the nested 'monster_type', but if can't, the code can be easily fixed up)\r\n\r\n```\r\n<function name=\"example_function\" parameters=\"object_parameter\">\r\n  if (DoesInherit (object_parameter, \"monster_type\") {\r\n    if (DoesInherit (object_parameter, \"orc_type\") {\r\n      msg (\"This is either one of your original orc objects or one of your cloned orc objects\")\r\n    } else if (DoesInherit (object_parameter, \"ogre_type\") {\r\n      msg (\"This is either one of your original ogre objects or one of your cloned ogre objects\")\r\n    }\r\n    // ect etc etc (troll, goblin, gremlin)\r\n  }\r\n</function>\r\n\r\n<object name=\"orc_1_object\">\r\n  <inherit name=\"orc_type\" />\r\n</object>\r\n\r\n<object name=\"orc_2_object\">\r\n  <inherit name=\"orc_type\" />\r\n</object>\r\n\r\n<object name=\"ogre_1_object\">\r\n  <inherit name=\"ogre_type\" />\r\n</object>\r\n\r\n<object name=\"ogre_2_object\">\r\n  <inherit name=\"ogre_type\" />\r\n</object>\r\n\r\n<object name=\"troll_1_object\">\r\n  <inherit name=\"troll_type\" />\r\n</object>\r\n\r\n<object name=\"troll_2_object\">\r\n  <inherit name=\"troll_type\" />\r\n</object>\r\n\r\n<object name=\"goblin_1_object\">\r\n  <inherit name=\"goblin_type\" />\r\n</object>\r\n\r\n<object name=\"goblin_2_object\">\r\n  <inherit name=\"goblin_type\" />\r\n</object>\r\n\r\n<object name=\"gremlin_1_object\">\r\n  <inherit name=\"gremlin_type\" />\r\n</object>\r\n\r\n<object name=\"gremlin_2_object\">\r\n  <inherit name=\"gremlin_type\" />\r\n</object>\r\n\r\n<type name=\"orc_type\">\r\n  <inherit name=\"monster_type\" />\r\n</type>\r\n\r\n<type name=\"ogre_type\">\r\n  <inherit name=\"monster_type\" />\r\n</type>\r\n\r\n<type name=\"troll_type\">\r\n  <inherit name=\"monster_type\" />\r\n</type>\r\n\r\n<type name=\"goblin_type\">\r\n  <inherit name=\"monster_type\" />\r\n</type>\r\n\r\n<type name=\"gremlin_type\">\r\n  <inherit name=\"monster_type\" />\r\n</type>\r\n\r\n<type name=\"monster_type\">\r\n</type>\r\n```\r\n\r\nor using normal Attributes (String Attribute for this example):\r\n\r\n(keeping the Object Types just for this example, but we're using their String Attributes, so it doesn't matter)\r\n\r\n```\r\n<function name=\"example_function\" parameters=\"object_parameter\">\r\n  if (GetString (object_parameter, \"type_of_object\") = \"monster\") {\r\n    if (GetString (object_parameter, \"type_of_monster\") = \"orc\") {\r\n      msg (\"This is either one of your original orc objects or one of your cloned orc objects\")\r\n    } else if (GetString (object_parameter, \"type_of_monster\") = \"ogre\") {\r\n      msg (\"This is either one of your original ogre objects or one of your cloned ogre objects\")\r\n    }\r\n    // ect etc etc (troll, goblin, gremlin)\r\n  }\r\n</function>\r\n\r\n<object name=\"orc_1_object\">\r\n  <inherit name=\"orc_type\" />\r\n</object>\r\n\r\n<object name=\"orc_2_object\">\r\n  <inherit name=\"orc_type\" />\r\n</object>\r\n\r\n<object name=\"ogre_1_object\">\r\n  <inherit name=\"ogre_type\" />\r\n</object>\r\n\r\n<object name=\"ogre_2_object\">\r\n  <inherit name=\"ogre_type\" />\r\n</object>\r\n\r\n<object name=\"troll_1_object\">\r\n  <inherit name=\"troll_type\" />\r\n</object>\r\n\r\n<object name=\"troll_2_object\">\r\n  <inherit name=\"troll_type\" />\r\n</object>\r\n\r\n<object name=\"goblin_1_object\">\r\n  <inherit name=\"goblin_type\" />\r\n</object>\r\n\r\n<object name=\"goblin_2_object\">\r\n  <inherit name=\"goblin_type\" />\r\n</object>\r\n\r\n<object name=\"gremlin_1_object\">\r\n  <inherit name=\"gremlin_type\" />\r\n</object>\r\n\r\n<object name=\"gremlin_2_object\">\r\n  <inherit name=\"gremlin_type\" />\r\n</object>\r\n\r\n<type name=\"orc_type\">\r\n  <inherit name=\"monster_type\" />\r\n  <attr name=\"type_of_monster\" type=\"string\">orc</attr>\r\n</type>\r\n\r\n<type name=\"ogre_type\">\r\n  <inherit name=\"monster_type\" />\r\n  <attr name=\"type_of_monster\" type=\"string\">ogre</attr>\r\n</type>\r\n\r\n<type name=\"troll_type\">\r\n  <inherit name=\"monster_type\" />\r\n  <attr name=\"type_of_monster\" type=\"string\">troll</attr>\r\n</type>\r\n\r\n<type name=\"goblin_type\">\r\n  <inherit name=\"monster_type\" />\r\n  <attr name=\"type_of_monster\" type=\"string\">goblin</attr>\r\n</type>\r\n\r\n<type name=\"gremlin_type\">\r\n  <inherit name=\"monster_type\" />\r\n  <attr name=\"type_of_monster\" type=\"string\">gremlin</attr>\r\n</type>\r\n\r\n<type name=\"monster_type\">\r\n  <attr name=\"type_of_object\" type=\"string\">monster</attr>\r\n</type>\r\n```\r\n\r\n---------------\r\n\r\nlastly, there's also iteration and List/Dictionary Attributes, for handling many Objects/items\r\n\r\nfor example (using the example above with the normal Attributes: the String Attributes example):\r\n\r\n(using the lazy 'AllObjects()' Function, but you can use whatever generating/using Objectlist Attribute Function, you want)\r\n\r\n(this example design causes us to fight ALL monsters of the provided type of monster objectlist to the 'fight_function', not very practical, but it's jsut an example. As instead of using the created types of monster objectlists - which is obviously very impractical, we can use the 'GetDirectChildren()' Function to just get the monsters of that specific room you're in, to fight. If you need help with how to adjust/design the code for this, let me know. Though the concepts of the impractical part of this example, are very useful for application of much more practical stuff for a game)\r\n\r\n```\r\n<game name=\"example_game\">\r\n  <attr name=\"start\" type=\"script\">\r\n    monster_object_creation_and_population_function\r\n  </attr>\r\n</game>\r\n\r\n<function name=\"monster_object_creation_and_population_function\">\r\n  game.monster_objectlist_attribute = NewObjectList ()\r\n  game.orc_objectlist_attribute = NewObjectList ()\r\n  game.ogre_objectlist_attribute = NewObjectList ()\r\n  game.troll_objectlist_attribute = NewObjectList ()\r\n  game.goblin_objectlist_attribute = NewObjectList ()\r\n  game.gremlin_objectlist_attribute = NewObjectList ()\r\n  foreach (object_variable, AllObjects ()) {\r\n    if (GetString (object_variable, \"type_of_object\") = \"monster\") {\r\n      list add (game.monster_objectlist_attribute, object_variable)\r\n      if (GetString (object_variable, \"type_of_monster\") = \"orc\") {\r\n        list add (game.orc_objectlist_attribute, object_variable)\r\n      } else if (GetString (object_variable, \"type_of_monster\") = \"ogre\") {\r\n        list add (game.ogre_objectlist_attribute, object_variable)\r\n      } else if (GetString (object_variable, \"type_of_monster\") = \"troll\") {\r\n        list add (game.troll_objectlist_attribute, object_variable)\r\n      } else if (GetString (object_variable, \"type_of_monster\") = \"goblin\") {\r\n        list add (game.goblin_objectlist_attribute, object_variable)\r\n      } else if (GetString (object_variable, \"type_of_monster\") = \"gremlin\") {\r\n        list add (game.gremlin_objectlist_attribute, object_variable)\r\n      }\r\n    }\r\n  }\r\n</function>\r\n\r\n<function name=\"fight_function\" parameters=\"enemy_objectlist_parameter\">\r\n  <![CDATA[\r\n    enemy_objectlist_variable = NewObjectList ()\r\n    foreach (object_variable, enemy_objectlist_parameter) {\r\n      list add (enemy_objectlist_variable, object_variable)\r\n    }\r\n    while (ListCount (enemy_objectlist_variable) > 0) {\r\n      foreach (enemy_object_variable, enemy_objectlist_variable) {\r\n        if (not enemy_object_variable.condition_string_attribute =\"dead\") {\r\n          enemy_object_variable.current_life_integer_attribute = enemy_object_variable.current_life_integer_attribute - player.damage_integer_attribute\r\n          if (enemy_object_variable.current_life_integer_attribute < 1) {\r\n            enemy_object_variable.condition_string_attribute = \"dead\")\r\n            list remove (enemy_objectlist_variable, enemy_object_variable)\r\n          } else {\r\n            player.current_life_integer_attribute = player.current_life_integer_attribute - enemy_object_variable.damage_integer_attribute\r\n            if (player.current_life_integer_attribute < 1) {\r\n              msg (\"You were killed\")\r\n              msg (\"GAME OVER\")\r\n              finish\r\n            }\r\n          }\r\n        } else {\r\n          list remove (enemy_objectlist_variable, enemy_object_variable)\r\n        }\r\n      }\r\n    }\r\n  ]]>\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>the 'name' String Attribute is the ID for quest (so it must be unique, just as my DNA is uniquely mine/me and yours is unique yours), so while your original Object is named 'orc', Cloned Objects have to be given a different name, which is achieved by adding contigious numbers to it (I've yet never worked with clones, so I don't know whether it starts at 0, 1, or 2, and whether there's an underscore used before the number or not), for example (again, I don't know exactly how it names the Clones):</p>\n<p>original Object's 'name' (ID) String Attribute: orc<br>\ncloned Objects' 'name' (ID) String Attribute: orc_2, orc_3, orc_4, etc</p>\n<p>thus, you (as of right now) got no way to identify the Clones vs the original Objects. So, you need a way to do so!</p>\n<p>we can have a system for names that we can use as one way to identify them and/or simply have an Attribute for identifying them:</p>\n<ol>\n<li>by naming convention/system:</li>\n</ol>\n<p>we use the 'String Manipulation' Functions:</p>\n<p>http://docs.textadventures.co.uk/quest/functions/ (scroll down to the very bottom, to the 'String Function' last section/category)</p>\n<p>http://docs.textadventures.co.uk/quest/functions/string/startswith.html<br>\nhttp://docs.textadventures.co.uk/quest/functions/string/endswith.html</p>\n<p>http://docs.textadventures.co.uk/quest/functions/string/lengthof.html</p>\n<p>so, for example (using my own naming/labeling convention/system):</p>\n<p>original Objects:</p>\n<p>orc_1_object, orc_2_object, etc<br>\nogre_1_object, ogre_2_object, etc<br>\ntroll_1_object, troll_2_object, etc<br>\ngoblin_1_object, goblin_2_object, etc<br>\ngremlin_1_object, gremlin_2_object, etc</p>\n<p>Cloned Objects (again, I don't know how they're exactly named by quest's cloning functions):</p>\n<p>orc_1_object_2, orc_1_object_3, etc<br>\nogre_1_object_2, ogre_1_object_3, etc<br>\ntroll_1_object_2, troll_1_object_3, etc<br>\ngoblin_1_object_2, goblin_1_object_3, etc<br>\ngremlin_1_object_2, goblin_1_object_3, etc</p>\n<p>example scripting:</p>\n<p>(the code doesn't handle if your numbers are more than 1 digit, I just realized this at the end, so I'd have to think some more and re-design the code to handle if the numbers are more than 1 digit)</p>\n<pre><code>&lt;function name=\"example_function\" parameters=\"object_parameter\"&gt;\n  &lt;![CDATA[\n\n    // --------------------------------------\n\n    if (StartsWith (object_parameter.name, \"orc\")) {\n      msg (\"This is either one of your original orc Objects or one of any of your cloned orc Objects\")\n    } else  if (StartsWith (object_parameter.name, \"ogre\") {\n      msg (\"This is either one of your original ogre Objects or one of any of your cloned ogre Objects\")\n    } else  if (StartsWith (object_parameter.name, \"troll\") {\n      msg (\"This is either one of your original troll Objects or one of any of your cloned troll Objects\")\n    } else  if (StartsWith (object_parameter.name, \"goblin\") {\n      msg (\"This is either one of your original goblin Objects or one of any of your cloned goblin Objects\")\n    } else  if (StartsWith (object_parameter.name, \"gremlin\") {\n      msg (\"This is either one of your original gremlin Objects or one of any of your cloned gremlin Objects\")\n    }\n\n    // -----------------------------------------------------------------\n\n    if (StartsWith (object_parameter.name, \"orc\") and LengthOf (object_parameter.name) &gt; LengthOf (\"orc_x_object\")) {\n      msg (\"This is one of any of your cloned orc Objects\")\n    } else if (StartsWith (object_parameter.name, \"orc\") and LengthOf (object_parameter.name) &gt; LengthOf (\"ogre_x_object\")) {\n      msg (\"This is one of any of your cloned ogre Objects\")\n    } else  if (StartsWith (object_parameter.name, \"troll\") and LengthOf (object_parameter.name) &gt; LengthOf (\"troll_x_object\")) {\n      msg (\"This is one of any of your cloned troll Objects\")\n    } else  if (StartsWith (object_parameter.name, \"goblin\") and LengthOf (object_parameter.name) &gt; LengthOf (\"goblin_x_object\")) {\n      msg (\"This is one of any of your cloned goblin Objects\")\n    } else  if (StartsWith (object_parameter.name, \"gremlin\") and LengthOf (object_parameter.name) &gt; LengthOf (\"gremlin_x_object\")) {\n      msg (\"This is one of any of your cloned gremlin Objects\")\n    }\n\n    // ----------------------------------------------\n\n    if (StartsWith (object_parameter.name, \"orc\") and LengthOf (object_parameter.name) = LengthOf (\"orc_x_object\")) {\n      msg (\"This is one of your original orc Objects\")\n    } else if (StartsWith (object_parameter.name, \"orc\") and LengthOf (object_parameter.name) = LengthOf (\"ogre_x_object\")) {\n      msg (\"This is one of your original ogre Objects\")\n    } else  if (StartsWith (object_parameter.name, \"troll\") and LengthOf (object_parameter.name) = LengthOf (\"troll_x_object\")) {\n      msg (\"This is one of your original troll Objects\")\n    } else  if (StartsWith (object_parameter.name, \"goblin\") and LengthOf (object_parameter.name) = LengthOf (\"goblin_x_object\")) {\n      msg (\"This is one of your original goblin Objects\")\n    } else  if (StartsWith (object_parameter.name, \"gremlin\") and LengthOf (object_parameter.name) = LengthOf (\"gremlin_x_object\")) {\n      msg (\"This is one of your original gremlin Objects\")\n    }\n\n    // ---------------------------------------\n\n    if (StartsWith (object_parameter.name, \"orc\") and LengthOf (object_parameter.name) = LengthOf (\"orc_x_object\")) {\n      if (Mid (object_parameter.name, 5, 1) = \"1\") {  // it might be: 4 instead of 5\n        msg (\"This is your 'orc_1_object' original Object\")\n      } else if (Mid (object_parameter.name, 5, 1) = \"2\") {  // it might be: 4 instead of 5\n        msg (\"This is your 'orc_2_object' original Object\")\n      }\n    } else if (StartsWith (object_parameter.name, \"ogre\") and LengthOf (object_parameter.name) = LengthOf (\"ogre_x_object\")) {\n      if (Mid (object_parameter.name, 5, 1) = \"1\") { // it might be: 4 instead of 5\n        msg (\"This is your 'ogre_1_object' original Object\")\n      } else if (Mid (object_parameter.name, 5, 1) = \"2\") {  // it might be: 4 instead of 5\n        msg (\"This is your 'ogre_2_object' original Object\")\n      }\n    } else  if (StartsWith (object_parameter.name, \"troll\") and LengthOf (object_parameter.name) = LengthOf (\"troll_x_object\")) {\n      if (Mid (object_parameter.name, 5, 1) = \"1\") {  // it might be: 4 instead of 5\n        msg (\"This is your 'troll_1_object' original Object\")\n      } else if (Mid (object_parameter.name, 5, 1) = \"2\") {  // it might be: 4 instead of 5\n        msg (\"This is your 'troll_2_object' original Object\")\n      }\n    } else  if (StartsWith (object_parameter.name, \"goblin\") and LengthOf (object_parameter.name) = LengthOf (\"goblin_x_object\")) {\n      if (Mid (object_parameter.name, 5, 1) = \"1\") {  // it might be: 4 instead of 5\n        msg (\"This is your 'goblin_1_object' original Object\")\n      } else if (Mid (object_parameter.name, 5, 1) = \"2\") {  // it might be: 4 instead of 5\n        msg (\"This is your 'goblin_2_object' original Object\")\n      }\n    } else  if (StartsWith (object_parameter.name, \"gremlin\") and LengthOf (object_parameter.name) = LengthOf (\"gremlin_x_object\")) {\n      if (Mid (object_parameter.name, 5, 1) = \"1\") {  // it might be: 4 instead of 5\n        msg (\"This is your 'gremlin_1_object' original Object\")\n      } else if (Mid (object_parameter.name, 5, 1) = \"2\") {  // it might be: 4 instead of 5\n        msg (\"This is your 'gremlin_2_object' original Object\")\n      }\n    }\n\n    // ----------------------\n\n    if (StartsWith (object_parameter.name, \"orc\") and LengthOf (object_parameter.name) &gt; LengthOf (\"orc_x_object\")) {\n      if (Mid (object_parameter.name, 5, 1) = \"1\") {  // it might be: 4 instead of 5\n        if (EndsWith (object_parameter.name, \"2\") {\n          msg (\"This is your 'orc_1_object_2' cloned Object\")\n        } else  if (EndsWith (object_parameter.name, \"3\") {\n          msg (\"This is your 'orc_1_object_3' cloned Object\")\n        }\n      } else if (Mid (object_parameter.name, 5, 1) = \"2\") {  // it might be: 4 instead of 5\n         if (EndsWith (object_parameter.name, \"2\") {\n          msg (\"This is your 'orc_2_object_2' cloned Object\")\n        } else  if (EndsWith (object_parameter.name, \"3\") {\n          msg (\"This is your 'orc_2_object_3' cloned Object\")\n        }\n      }\n    ] else if (StartsWith (object_parameter.name, \"ogre\") and LengthOf (object_parameter.name) &gt; LengthOf (\"ogre_x_object\")) {\n      if (Mid (object_parameter.name, 5, 1) = \"1\") {  // it might be: 4 instead of 5\n        if (EndsWith (object_parameter.name, \"2\") {\n          msg (\"This is your 'ogre_1_object_2' cloned Object\")\n        } else  if (EndsWith (object_parameter.name, \"3\") {\n          msg (\"This is your 'ogre_1_object_3' cloned Object\")\n        }\n      } else if (Mid (object_parameter.name, 5, 1) = \"2\") {  // it might be: 4 instead of 5\n         if (EndsWith (object_parameter.name, \"2\") {\n          msg (\"This is your 'ogre_2_object_2' cloned Object\")\n        } else  if (EndsWith (object_parameter.name, \"3\") {\n          msg (\"This is your 'ogre_2_object_3' cloned Object\")\n        }\n      }\n    ]\n    // etc etc etc (troll, goblin, gremlin)\n\n    // ------------------------------\n\n  ]]&gt;\n&lt;/function\n</code></pre>\n<ol start=\"2\">\n<li>using Attributes:</li>\n</ol>\n<p>(Inherited Attributes / Object Types / Types / quest's user-level classes/groups/templates)</p>\n<p>(not sure if  you can access the nested 'monster_type', but if can't, the code can be easily fixed up)</p>\n<pre><code>&lt;function name=\"example_function\" parameters=\"object_parameter\"&gt;\n  if (DoesInherit (object_parameter, \"monster_type\") {\n    if (DoesInherit (object_parameter, \"orc_type\") {\n      msg (\"This is either one of your original orc objects or one of your cloned orc objects\")\n    } else if (DoesInherit (object_parameter, \"ogre_type\") {\n      msg (\"This is either one of your original ogre objects or one of your cloned ogre objects\")\n    }\n    // ect etc etc (troll, goblin, gremlin)\n  }\n&lt;/function&gt;\n\n&lt;object name=\"orc_1_object\"&gt;\n  &lt;inherit name=\"orc_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"orc_2_object\"&gt;\n  &lt;inherit name=\"orc_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"ogre_1_object\"&gt;\n  &lt;inherit name=\"ogre_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"ogre_2_object\"&gt;\n  &lt;inherit name=\"ogre_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"troll_1_object\"&gt;\n  &lt;inherit name=\"troll_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"troll_2_object\"&gt;\n  &lt;inherit name=\"troll_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"goblin_1_object\"&gt;\n  &lt;inherit name=\"goblin_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"goblin_2_object\"&gt;\n  &lt;inherit name=\"goblin_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"gremlin_1_object\"&gt;\n  &lt;inherit name=\"gremlin_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"gremlin_2_object\"&gt;\n  &lt;inherit name=\"gremlin_type\" /&gt;\n&lt;/object&gt;\n\n&lt;type name=\"orc_type\"&gt;\n  &lt;inherit name=\"monster_type\" /&gt;\n&lt;/type&gt;\n\n&lt;type name=\"ogre_type\"&gt;\n  &lt;inherit name=\"monster_type\" /&gt;\n&lt;/type&gt;\n\n&lt;type name=\"troll_type\"&gt;\n  &lt;inherit name=\"monster_type\" /&gt;\n&lt;/type&gt;\n\n&lt;type name=\"goblin_type\"&gt;\n  &lt;inherit name=\"monster_type\" /&gt;\n&lt;/type&gt;\n\n&lt;type name=\"gremlin_type\"&gt;\n  &lt;inherit name=\"monster_type\" /&gt;\n&lt;/type&gt;\n\n&lt;type name=\"monster_type\"&gt;\n&lt;/type&gt;\n</code></pre>\n<p>or using normal Attributes (String Attribute for this example):</p>\n<p>(keeping the Object Types just for this example, but we're using their String Attributes, so it doesn't matter)</p>\n<pre><code>&lt;function name=\"example_function\" parameters=\"object_parameter\"&gt;\n  if (GetString (object_parameter, \"type_of_object\") = \"monster\") {\n    if (GetString (object_parameter, \"type_of_monster\") = \"orc\") {\n      msg (\"This is either one of your original orc objects or one of your cloned orc objects\")\n    } else if (GetString (object_parameter, \"type_of_monster\") = \"ogre\") {\n      msg (\"This is either one of your original ogre objects or one of your cloned ogre objects\")\n    }\n    // ect etc etc (troll, goblin, gremlin)\n  }\n&lt;/function&gt;\n\n&lt;object name=\"orc_1_object\"&gt;\n  &lt;inherit name=\"orc_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"orc_2_object\"&gt;\n  &lt;inherit name=\"orc_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"ogre_1_object\"&gt;\n  &lt;inherit name=\"ogre_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"ogre_2_object\"&gt;\n  &lt;inherit name=\"ogre_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"troll_1_object\"&gt;\n  &lt;inherit name=\"troll_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"troll_2_object\"&gt;\n  &lt;inherit name=\"troll_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"goblin_1_object\"&gt;\n  &lt;inherit name=\"goblin_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"goblin_2_object\"&gt;\n  &lt;inherit name=\"goblin_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"gremlin_1_object\"&gt;\n  &lt;inherit name=\"gremlin_type\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"gremlin_2_object\"&gt;\n  &lt;inherit name=\"gremlin_type\" /&gt;\n&lt;/object&gt;\n\n&lt;type name=\"orc_type\"&gt;\n  &lt;inherit name=\"monster_type\" /&gt;\n  &lt;attr name=\"type_of_monster\" type=\"string\"&gt;orc&lt;/attr&gt;\n&lt;/type&gt;\n\n&lt;type name=\"ogre_type\"&gt;\n  &lt;inherit name=\"monster_type\" /&gt;\n  &lt;attr name=\"type_of_monster\" type=\"string\"&gt;ogre&lt;/attr&gt;\n&lt;/type&gt;\n\n&lt;type name=\"troll_type\"&gt;\n  &lt;inherit name=\"monster_type\" /&gt;\n  &lt;attr name=\"type_of_monster\" type=\"string\"&gt;troll&lt;/attr&gt;\n&lt;/type&gt;\n\n&lt;type name=\"goblin_type\"&gt;\n  &lt;inherit name=\"monster_type\" /&gt;\n  &lt;attr name=\"type_of_monster\" type=\"string\"&gt;goblin&lt;/attr&gt;\n&lt;/type&gt;\n\n&lt;type name=\"gremlin_type\"&gt;\n  &lt;inherit name=\"monster_type\" /&gt;\n  &lt;attr name=\"type_of_monster\" type=\"string\"&gt;gremlin&lt;/attr&gt;\n&lt;/type&gt;\n\n&lt;type name=\"monster_type\"&gt;\n  &lt;attr name=\"type_of_object\" type=\"string\"&gt;monster&lt;/attr&gt;\n&lt;/type&gt;\n</code></pre>\n<hr>\n<p>lastly, there's also iteration and List/Dictionary Attributes, for handling many Objects/items</p>\n<p>for example (using the example above with the normal Attributes: the String Attributes example):</p>\n<p>(using the lazy 'AllObjects()' Function, but you can use whatever generating/using Objectlist Attribute Function, you want)</p>\n<p>(this example design causes us to fight ALL monsters of the provided type of monster objectlist to the 'fight_function', not very practical, but it's jsut an example. As instead of using the created types of monster objectlists - which is obviously very impractical, we can use the 'GetDirectChildren()' Function to just get the monsters of that specific room you're in, to fight. If you need help with how to adjust/design the code for this, let me know. Though the concepts of the impractical part of this example, are very useful for application of much more practical stuff for a game)</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    monster_object_creation_and_population_function\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;function name=\"monster_object_creation_and_population_function\"&gt;\n  game.monster_objectlist_attribute = NewObjectList ()\n  game.orc_objectlist_attribute = NewObjectList ()\n  game.ogre_objectlist_attribute = NewObjectList ()\n  game.troll_objectlist_attribute = NewObjectList ()\n  game.goblin_objectlist_attribute = NewObjectList ()\n  game.gremlin_objectlist_attribute = NewObjectList ()\n  foreach (object_variable, AllObjects ()) {\n    if (GetString (object_variable, \"type_of_object\") = \"monster\") {\n      list add (game.monster_objectlist_attribute, object_variable)\n      if (GetString (object_variable, \"type_of_monster\") = \"orc\") {\n        list add (game.orc_objectlist_attribute, object_variable)\n      } else if (GetString (object_variable, \"type_of_monster\") = \"ogre\") {\n        list add (game.ogre_objectlist_attribute, object_variable)\n      } else if (GetString (object_variable, \"type_of_monster\") = \"troll\") {\n        list add (game.troll_objectlist_attribute, object_variable)\n      } else if (GetString (object_variable, \"type_of_monster\") = \"goblin\") {\n        list add (game.goblin_objectlist_attribute, object_variable)\n      } else if (GetString (object_variable, \"type_of_monster\") = \"gremlin\") {\n        list add (game.gremlin_objectlist_attribute, object_variable)\n      }\n    }\n  }\n&lt;/function&gt;\n\n&lt;function name=\"fight_function\" parameters=\"enemy_objectlist_parameter\"&gt;\n  &lt;![CDATA[\n    enemy_objectlist_variable = NewObjectList ()\n    foreach (object_variable, enemy_objectlist_parameter) {\n      list add (enemy_objectlist_variable, object_variable)\n    }\n    while (ListCount (enemy_objectlist_variable) &gt; 0) {\n      foreach (enemy_object_variable, enemy_objectlist_variable) {\n        if (not enemy_object_variable.condition_string_attribute =\"dead\") {\n          enemy_object_variable.current_life_integer_attribute = enemy_object_variable.current_life_integer_attribute - player.damage_integer_attribute\n          if (enemy_object_variable.current_life_integer_attribute &lt; 1) {\n            enemy_object_variable.condition_string_attribute = \"dead\")\n            list remove (enemy_objectlist_variable, enemy_object_variable)\n          } else {\n            player.current_life_integer_attribute = player.current_life_integer_attribute - enemy_object_variable.damage_integer_attribute\n            if (player.current_life_integer_attribute &lt; 1) {\n              msg (\"You were killed\")\n              msg (\"GAME OVER\")\n              finish\n            }\n          }\n        } else {\n          list remove (enemy_objectlist_variable, enemy_object_variable)\n        }\n      }\n    }\n  ]]&gt;\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2017-05-18T21:32:54.0636548Z",
      "LastEditDate": "2017-05-18T21:44:18.908678Z"
    },
    {
      "PostId": "574f8f1e-5c1c-4d9d-9340-40bfa20e1876",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have a tutorial here that goes through this sort of thing (it creates monsters rather than cloning, but it has the same issue.\r\nhttps://github.com/ThePix/quest/wiki/The-Zombie-Apocalypse-(on-the-web-version)\r\n\r\nIf you look down at the attacking part, by doing a command as:\r\n\r\n> attack #object#\r\n\r\nThis gives you an `object` variable to play around with. You can reduce its hits, move it away, whatever. You do not need to know its name in the code at all.\r\n\r\nThat might be enough to get you going, but if not, paste the attack code into a post, and we can look deeper.",
      "EditableFormat": "markdown",
      "HTML": "<p>I have a tutorial here that goes through this sort of thing (it creates monsters rather than cloning, but it has the same issue.<br>\nhttps://github.com/ThePix/quest/wiki/The-Zombie-Apocalypse-(on-the-web-version)</p>\n<p>If you look down at the attacking part, by doing a command as:</p>\n<blockquote>\n<p>attack #object#</p>\n</blockquote>\n<p>This gives you an <code>object</code> variable to play around with. You can reduce its hits, move it away, whatever. You do not need to know its name in the code at all.</p>\n<p>That might be enough to get you going, but if not, paste the attack code into a post, and we can look deeper.</p>\n\n",
      "PostDate": "2017-05-18T21:42:38.8493518Z",
      "LastEditDate": null
    },
    {
      "PostId": "e251c021-38f9-47d4-ae5b-bbbe546ff236",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Unfortunately, neither of these help me. \r\n\r\nI'm not using JavaScript code at all. I'm simply using the built-in features and expression boxes. I cannot use any of the suggestions as I do not understand the coding part and just using the visual scripting that comes with the editor.\r\n\r\nSo, it looks like I'll have to find a solution elsewhere. Thanks for taking some time and trying to help.",
      "EditableFormat": "markdown",
      "HTML": "<p>Unfortunately, neither of these help me.</p>\n<p>I'm not using JavaScript code at all. I'm simply using the built-in features and expression boxes. I cannot use any of the suggestions as I do not understand the coding part and just using the visual scripting that comes with the editor.</p>\n<p>So, it looks like I'll have to find a solution elsewhere. Thanks for taking some time and trying to help.</p>\n\n",
      "PostDate": "2017-05-19T09:03:04.7306435Z",
      "LastEditDate": null
    },
    {
      "PostId": "286182da-a96b-49d2-8123-8559ebf4b45f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "via the GUI/Editor:\r\n\r\n----------\r\n\r\nFunctions:\r\n\r\ncreation:\r\n\r\n(left side's tree of stuff) Functions -> Add -> (set it up / define it)\r\n\r\nusing it (your own custom Functions or the built-in Functions):\r\n\r\nrun as script -> add new script -> 'scripts' section/category -> 'call function' Script -> Name box: NAME_OF_FUNCTION, (if you have/use Parameters) Add Parameters box: input your Arguments (inputs) for your Parameters (Function's VARIABLES)\r\n\r\n-----------\r\n\r\nObject Types:\r\n\r\ncreation:\r\n\r\n(left side's tree of stuff) Advanced ->  Object Types  -> Add -> (set it up / define it: think of Object Types as a basket of Attributes, so instead of individually adding each Attribute to Objects, you can give a basket of many Attributes to Objects via using Object Types/Inherited Attributes) Name: WHATEVER\r\n\r\n(left side's tree of stuff) Advanced ->  Object Types  -> 'WHATEVER' Object Type -> 'Attributes' Box and/or 'Inherited types' box (layers of Object Types: nested Object Types) -> Add -> (set up your normal Attributes and/or Inherited Attributes/Types)\r\n\r\nusing it (adding it to an Object):\r\n\r\n(left side's tree of stuff) 'WHATEVER' Object -> 'Attributes' Tab -> 'Inherited Attributes' box (NOT the 'Attributes' box and NOT the 'statusattributes' box) -> Add -> Name: NAME_OF_OBJECT_TYPE\r\n\r\n-----\r\n\r\nScripting:\r\n\r\nthe '[EXPRESSION]' Script option lets you code in stuff (which has a slightly different syntax than to code in stuff directly, as it depends on what the GUI/Editor handles for you code wise vs having to do it yourself in code).\r\n\r\nso, for example:\r\n\r\nrun as script -> add new script -> 'scripts' section/category -> 'if' Script -> if [EXPRESSION] WRITE/TYPE/CODE_IN_YOUR_EXPRESSION(ACTION)",
      "EditableFormat": "markdown",
      "HTML": "<p>via the GUI/Editor:</p>\n<hr>\n<p>Functions:</p>\n<p>creation:</p>\n<p>(left side's tree of stuff) Functions -&gt; Add -&gt; (set it up / define it)</p>\n<p>using it (your own custom Functions or the built-in Functions):</p>\n<p>run as script -&gt; add new script -&gt; 'scripts' section/category -&gt; 'call function' Script -&gt; Name box: NAME_OF_FUNCTION, (if you have/use Parameters) Add Parameters box: input your Arguments (inputs) for your Parameters (Function's VARIABLES)</p>\n<hr>\n<p>Object Types:</p>\n<p>creation:</p>\n<p>(left side's tree of stuff) Advanced -&gt;  Object Types  -&gt; Add -&gt; (set it up / define it: think of Object Types as a basket of Attributes, so instead of individually adding each Attribute to Objects, you can give a basket of many Attributes to Objects via using Object Types/Inherited Attributes) Name: WHATEVER</p>\n<p>(left side's tree of stuff) Advanced -&gt;  Object Types  -&gt; 'WHATEVER' Object Type -&gt; 'Attributes' Box and/or 'Inherited types' box (layers of Object Types: nested Object Types) -&gt; Add -&gt; (set up your normal Attributes and/or Inherited Attributes/Types)</p>\n<p>using it (adding it to an Object):</p>\n<p>(left side's tree of stuff) 'WHATEVER' Object -&gt; 'Attributes' Tab -&gt; 'Inherited Attributes' box (NOT the 'Attributes' box and NOT the 'statusattributes' box) -&gt; Add -&gt; Name: NAME_OF_OBJECT_TYPE</p>\n<hr>\n<p>Scripting:</p>\n<p>the '[EXPRESSION]' Script option lets you code in stuff (which has a slightly different syntax than to code in stuff directly, as it depends on what the GUI/Editor handles for you code wise vs having to do it yourself in code).</p>\n<p>so, for example:</p>\n<p>run as script -&gt; add new script -&gt; 'scripts' section/category -&gt; 'if' Script -&gt; if [EXPRESSION] WRITE/TYPE/CODE_IN_YOUR_EXPRESSION(ACTION)</p>\n\n",
      "PostDate": "2017-05-19T13:25:10.4082581Z",
      "LastEditDate": "2017-05-19T13:32:19.7710785Z"
    },
    {
      "PostId": "03b54adb-bb43-45b5-9af9-1b437fbdf453",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi. I tried to reply earlier, but the computer wasn't working.\r\nI actually added this onto The Pixie's code.\r\n  msg (\"You stomp on it, safe at last!\")\r\n  RemoveObject (this)\r\n}\r\nI'm not sure what the this does, but nonetheless, you set the code up like this:\r\nobj.changedhitpoints => {\r\n  if (this.hitpoints < 1) {\r\n    msg (\"It is dead!\")\r\n    this.dead = true\r\n    player.exp = player.exp + 20\r\n    love\r\n    player.gold = player.gold + 20\r\n    msg (\"You stomp on it, safe at last!\")\r\n    RemoveObject (this)\r\n  }\r\n}\r\nAnd I suppose you need to find the name for the cloned object. Try copy-pasting my code in first. I just have a feeling.\r\n(P.S. The forums did something to the brackets, which you will need to fix.)",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi. I tried to reply earlier, but the computer wasn't working.<br>\nI actually added this onto The Pixie's code.<br>\nmsg (\"You stomp on it, safe at last!\")<br>\nRemoveObject (this)<br>\n}<br>\nI'm not sure what the this does, but nonetheless, you set the code up like this:<br>\nobj.changedhitpoints =&gt; {<br>\nif (this.hitpoints &lt; 1) {<br>\nmsg (\"It is dead!\")<br>\nthis.dead = true<br>\nplayer.exp = player.exp + 20<br>\nlove<br>\nplayer.gold = player.gold + 20<br>\nmsg (\"You stomp on it, safe at last!\")<br>\nRemoveObject (this)<br>\n}<br>\n}<br>\nAnd I suppose you need to find the name for the cloned object. Try copy-pasting my code in first. I just have a feeling.<br>\n(P.S. The forums did something to the brackets, which you will need to fix.)</p>\n\n",
      "PostDate": "2017-05-21T00:27:57.4956143Z",
      "LastEditDate": "2017-05-21T00:29:07.9454361Z"
    },
    {
      "PostId": "b9425da4-f8a3-4909-9f3d-995afabad5ac",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "'this' is a special keycommand that GETS the parent Object that is the container of the scripting that 'this' is within (there's some places that it can't be used, but otherwise it's very useful when you got to handle dynamic/many-different Objects), for example:\r\n\r\n```\r\n<object name=\"hat\">\r\n  <attr name=\"wear\" type=\"script\">\r\n    this.parent = player // the parent Object of the 'wear' Script Attribute is the 'hat' Object, so 'this' GETS the 'hat' Object (reference)\r\n  </attr>\r\n</object>\r\n\r\n----------------\r\n\r\nwhat makes 'this' useful is this (sorry, pun not intended), an example:\r\n\r\ninstead of having to do this (argh, 'this' is such a common word, going to be lots of un-intended puns, lol):\r\n\r\n<object name=\"hat\">\r\n  <attr name=\"wear\" type=\"script\">\r\n    hat.parent = player\r\n  </attr>\r\n</object>\r\n\r\n<object name=\"shirt\">\r\n  <attr name=\"wear\" type=\"script\">\r\n    shirt.parent = player\r\n  </attr>\r\n</object>\r\n\r\n<object name=\"pants\">\r\n  <attr name=\"wear\" type=\"script\">\r\n    pants.parent = player\r\n  </attr>\r\n</object>\r\n\r\netc etc etc (pretend we have a lot of Objects)\r\n\r\nYUCK! while I can copy and paste the line, I still have to delete the Object name and re-type in the correct/new Object name for every Object\r\n\r\nwe can instead do this (a bit better):\r\n\r\n<object name=\"hat\">\r\n  <attr name=\"wear\" type=\"script\">\r\n    this.parent = player\r\n  </attr>\r\n</object>\r\n\r\n<object name=\"shirt\">\r\n  <attr name=\"wear\" type=\"script\">\r\n    this.parent = player\r\n  </attr>\r\n</object>\r\n\r\n<object name=\"pants\">\r\n  <attr name=\"wear\" type=\"script\">\r\n    this.parent = player\r\n  </attr>\r\n</object>\r\n\r\nThis is a bit better, now I can just copy and paste the line for each Object, I don't have to re-type the new Object name each time, as we're not using it, we're using 'this' instead.\r\n\r\nwe can further do better (less work/typing/coding on our part hehe --- so much better!):\r\n\r\n(using Object Types, to demonstrate the usefulness of 'this' keycommand)\r\n\r\n<object name=\"hat\">\r\n  <inherit name=\"wearable_type\">\r\n</object>\r\n\r\n<object name=\"shirt\">\r\n  <inherit name=\"wearable_type\">\r\n</object>\r\n\r\n<object name=\"pants\">\r\n  <inherit name=\"wearable_type\">\r\n</object>\r\n\r\n<type name=\"wearable_type\">\r\n  <attr name=\"wear\" type=\"script\">\r\n    this.parent = player\r\n  </attr>\r\n</type>\r\n\r\nand if you really want to wipe out a huge chunk of work on your part, use scripting and let the computer do all the work for you!\r\n(however, this is slow, as you have to wait for the scripting/computer to create the code for you to have it in your game, every time you play the game)\r\n(whereas if you put in the code, it doesn't have to take the time to create the code every time you play the game)\r\n\r\nsee this link about this issue:\r\n\r\nht.tp://stackoverflow.com/questions/846103/runtime-vs-compile-time\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>'this' is a special keycommand that GETS the parent Object that is the container of the scripting that 'this' is within (there's some places that it can't be used, but otherwise it's very useful when you got to handle dynamic/many-different Objects), for example:</p>\n<pre><code>&lt;object name=\"hat\"&gt;\n  &lt;attr name=\"wear\" type=\"script\"&gt;\n    this.parent = player // the parent Object of the 'wear' Script Attribute is the 'hat' Object, so 'this' GETS the 'hat' Object (reference)\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n----------------\n\nwhat makes 'this' useful is this (sorry, pun not intended), an example:\n\ninstead of having to do this (argh, 'this' is such a common word, going to be lots of un-intended puns, lol):\n\n&lt;object name=\"hat\"&gt;\n  &lt;attr name=\"wear\" type=\"script\"&gt;\n    hat.parent = player\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"shirt\"&gt;\n  &lt;attr name=\"wear\" type=\"script\"&gt;\n    shirt.parent = player\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"pants\"&gt;\n  &lt;attr name=\"wear\" type=\"script\"&gt;\n    pants.parent = player\n  &lt;/attr&gt;\n&lt;/object&gt;\n\netc etc etc (pretend we have a lot of Objects)\n\nYUCK! while I can copy and paste the line, I still have to delete the Object name and re-type in the correct/new Object name for every Object\n\nwe can instead do this (a bit better):\n\n&lt;object name=\"hat\"&gt;\n  &lt;attr name=\"wear\" type=\"script\"&gt;\n    this.parent = player\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"shirt\"&gt;\n  &lt;attr name=\"wear\" type=\"script\"&gt;\n    this.parent = player\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"pants\"&gt;\n  &lt;attr name=\"wear\" type=\"script\"&gt;\n    this.parent = player\n  &lt;/attr&gt;\n&lt;/object&gt;\n\nThis is a bit better, now I can just copy and paste the line for each Object, I don't have to re-type the new Object name each time, as we're not using it, we're using 'this' instead.\n\nwe can further do better (less work/typing/coding on our part hehe --- so much better!):\n\n(using Object Types, to demonstrate the usefulness of 'this' keycommand)\n\n&lt;object name=\"hat\"&gt;\n  &lt;inherit name=\"wearable_type\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"shirt\"&gt;\n  &lt;inherit name=\"wearable_type\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"pants\"&gt;\n  &lt;inherit name=\"wearable_type\"&gt;\n&lt;/object&gt;\n\n&lt;type name=\"wearable_type\"&gt;\n  &lt;attr name=\"wear\" type=\"script\"&gt;\n    this.parent = player\n  &lt;/attr&gt;\n&lt;/type&gt;\n\nand if you really want to wipe out a huge chunk of work on your part, use scripting and let the computer do all the work for you!\n(however, this is slow, as you have to wait for the scripting/computer to create the code for you to have it in your game, every time you play the game)\n(whereas if you put in the code, it doesn't have to take the time to create the code every time you play the game)\n\nsee this link about this issue:\n\nht.tp://stackoverflow.com/questions/846103/runtime-vs-compile-time\n</code></pre>\n\n",
      "PostDate": "2017-05-21T06:32:18.8464258Z",
      "LastEditDate": "2017-05-21T06:51:15.0043445Z"
    }
  ]
}
