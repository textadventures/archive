{
  "Topic": {
    "TopicId": "4112",
    "ForumId": "10",
    "Title": "How do I set an object's alias via script?",
    "LastUpdated": "2014-01-12T09:04:23+00:00",
    "ReplyCount": 3
  },
  "Posts": [
    {
      "PostId": "27417",
      "UserId": 0,
      "Username": "Krammy",
      "UserAvatar": null,
      "UserGravatar": "8e4d2bfa04efd4a82422c58bf3c335a9",
      "EditableText": "I couldn't find anything in the search, so I hope this helps others in the future. Is there a way I can switch an object's alias via a script running in another object?\n\nI tried using the &quot;Set an object's attribute (named by an expression)&quot; thingy, but I couldn't figure out how it worked. It kept giving me errors.\n\nI'm using the desktop version of Quest, as it's a lot more customizable.",
      "EditableFormat": "bbcode",
      "HTML": "I couldn't find anything in the search, so I hope this helps others in the future. Is there a way I can switch an object's alias via a script running in another object?<br/><br/>I tried using the &quot;Set an object's attribute (named by an expression)&quot; thingy, but I couldn't figure out how it worked. It kept giving me errors.<br/><br/>I'm using the desktop version of Quest, as it's a lot more customizable.",
      "PostDate": "2014-01-12T00:14:54+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27418",
      "UserId": 0,
      "Username": "tlk",
      "UserAvatar": null,
      "UserGravatar": "2d59720246577f1d45f7a580bf58be52",
      "EditableText": "I believe what you want in your script is &quot;set a variable or attribute&quot;, and you want it to say:\n\nSet variable [object.alias] = [expression] [&quot;newalias&quot;]\n\nWhere &quot;object&quot; is whatever object whose alias you want to change, and &quot;newalias&quot; is whatever you want the new alias to be (make sure to include the quotes). In code it would look like this:\n\n[code:xi7nime5]object&#46;alias = &quot;newalias&quot;[/code:xi7nime5]",
      "EditableFormat": "bbcode",
      "HTML": "I believe what you want in your script is &quot;set a variable or attribute&quot;, and you want it to say:<br/><br/>Set variable [object.alias] = [expression] [&quot;newalias&quot;]<br/><br/>Where &quot;object&quot; is whatever object whose alias you want to change, and &quot;newalias&quot; is whatever you want the new alias to be (make sure to include the quotes). In code it would look like this:<br/><br/><pre><code>object&#46;alias = &quot;newalias&quot;</code></pre>",
      "PostDate": "2014-01-12T00:33:43+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27420",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "just to add:\n\nThe &quot;set a variable or attribute&quot; (and just remember in its drop-down-box to select &quot;EXPRESSION&quot;, don't leave it selected on &quot;???&quot;) and &quot;If...&quot; Scripts enables you to do most of whatever you may want to do, they're very powerful~useful Scripts.\n\nIn Code, it's syntax~format is this:\n\nobject.attribute = value_or_expression\n~OR~\nvariable = value_or_expression\n\nwhich is exactly the same thing as what you do in the GUI~Editor's &quot;set a variable or attribute&quot; Script&#058;\n\nSet variable &quot;object.attribute&quot; = [EXPRESSION] &quot;value_or_expression&quot;\n~OR~\nSet variable &quot;variable&quot; = [EXPRESSION] &quot;value_or_expression&quot;\n\nso here's some examples:\n\nObject (Name): player\nAttribute (Name): alias\nAttribute (Type): string\nValue_or_Expression: Value\nValue: &quot;HK&quot;\n\n[code:10i5gxhz]Set variable player&#46;alias = &#91;EXPRESSION&#93; &quot;HK&quot;[/code:10i5gxhz]\n\n(the quotes are required for when your Attribute Type is a: string)\n(but, the quote usage is more complicated when you're doing an Expression, and not just merely a single Value)\n(the built-in &quot;alias&quot; Attribute's Type is a: string, so it needs the quotes)\n\n-------------------------------------\n\nVariable: you_go_first\nValue_or_Expression: Value\nValue: true_or_false\n\n[code:10i5gxhz]If&#46;&#46;&#46; -&gt; Print a message &#91;EXPRESSION&#93; player&#46;speed &gt; monster&#46;speed\n-&gt; then -&gt; Set variable you_go_first = &#91;EXPRESSION&#93; true\nelse -&gt; If&#46;&#46;&#46; -&gt; Print a message &#91;EXPRESSION&#93; player&#46;speed &lt; monster&#46;speed\n-&gt; then -&gt; Set variable you_go_first = &#91;EXPRESSION&#93; false\nelse -&gt; If&#46;&#46;&#46; -&gt; Print a message &#91;EXPRESSION&#93; player&#46;speed = monster&#46;speed\n-&gt; then -&gt; If&#46;&#46;&#46; -&gt; Print a message &#91;EXPRESSION&#93; RandomChance (50) = true\n-&gt;-&gt; then -&gt; Set variable you_go_first = &#91;EXPRESSION&#93; true\n\nIf&#46;&#46;&#46; -&gt; Set variable you_go_first = &#91;EXPRESSION&#93; true\n-&gt; then -&gt; Set variable monster&#46;hit_points = &#91;EXPRESSION&#93; monster&#46;hit_points - player&#46;damage\n-&gt; then -&gt; Print a message &#91;MESSAGE&#93; You get to go first and damage the monster!\nelse -&gt; If&#46;&#46;&#46; Set variable you_go_first = &#91;EXPRESSION&#93; false\n-&gt; then -&gt; Set variable player&#46;hit_points = &#91;EXPRESSION&#93; player&#46;hit_points - monster&#46;damage\n-&gt; then -&gt; Print a message &#91;EXPRESSION&#93; &quot;The &quot; + monster&#46;alias + &quot;gets to go first and damages &quot; + player&#46;alias + &quot; for &quot; + monster&#46;damage + &quot; damage, leaving &quot; + player&#46;article + &quot; now with only &quot; + player&#46;hit_points + &quot; HP&#46;&quot;[/code:10i5gxhz]\n\n-----------\n\nObject (Name): monster\nAttribute (Name): dead\nAttribute (Type): boolean\nValue_or_Expression: Value\nValue: false\n\nboolean &lt;-- as is code built-in within quest is the same thing as specifically a --&gt; &quot;true_or_false&quot; flag\n\n[code:10i5gxhz]Set variable monster&#46;dead = &#91;EXPRESSION&#93; false\n\nyou then kill the monster&#58;\n\nSet variable monster&#46;dead = &#91;EXPRESSION&#93; true[/code:10i5gxhz]\n\nbooleans~flags is just the *specific* use of &quot;true~false&quot; (which is a type of &quot;dualism~opposites&quot; ~ 2 options) String Values to choose results\n\n----\n\nother types of CONCEPTUAL (*NOT* using the actual Attribute Type: boolean) flags~booleans (2 options for results):\n\nbinary (&quot;0~1&quot;): if &quot;0&quot; then do &quot;this&quot;, if &quot;1&quot; then do &quot;that&quot;\nnumbers (any 2 numbers, except 0 and 1): if &quot;5&quot; then do &quot;this&quot;, if &quot;23&quot;, then do &quot;that&quot;\nphysics charges: if &quot;-&quot; then do &quot;this&quot;, if &quot;+&quot; then do &quot;that&quot;\n&quot;on~off&quot;: if &quot;on&quot;, then do &quot;this&quot;, if &quot;off&quot;, then do &quot;that&quot;\n&quot;yes~no&quot;: if &quot;yes&quot;, then do &quot;this&quot;, if &quot;no&quot;, then do &quot;that&quot;\n&quot;in~out&quot;: ...\n&quot;hot~cold&quot;: ...\n&quot;up~down&quot;: ....\n&quot;left~right&quot;: ....\n&quot;male~female&quot;: ...\n&quot;tall~short&quot;: ...\n&quot;fat~skinny&quot;: ...\n...you get the idea...\n\nand we can expand this beyond dualism~opposites (ie: 3 and more options) to choose results:\n\nif &quot;1&quot;, then do &quot;this_1&quot;\nif &quot;2&quot;, then do &quot;this_2&quot;\nif &quot;3&quot;, then do &quot;this_3&quot;\nif &quot;4&quot;, ....\netc etc etc\n\nif &quot;red&quot;, then do &quot;this_1&quot;\nif &quot;blue&quot;, then do &quot;this_2&quot;\nif &quot;yellow&quot;, then do &quot;this_3&quot;\nif &quot;purple&quot;, ....\netc etc etc\n\n--------------\n\nso, actually (CONCEPTUALLY ONLY: booleans~flags) are just:\n\n(IF)\nobject.attribute = Value\n(THEN...)\n(result~action~&quot;whatever_you_want&quot; Script)\n\nobject.(Type: Boolean)attribute = (String) Value\n\nStrings ~ String Values:\n\n0, 1, 5, 23, +, -, on, off, yes, no, true, false, in, out, hot, cold, male, female, left, right, up, down, -5, hhh23_888#$%ffss, a, b, c, z, and etc...\n\n-----------\n\nObject (Name): player\nAttribute (Name): strength\nAttribute (Type): int\nValue_or_Expression: Value\nValue: 0\n\nint is used as a short form of integer, so if you were coding this, you'd not have to write out &quot;integer&quot;\n\n[code:10i5gxhz]Set variable player&#46;strength = &#91;EXPRESSION&#93; 100[/code:10i5gxhz]\n\n----------------\n\nand if you want to do (computation ~ adjusting attributes):\n\nOld player.strength Value: 10\n(In Code: player.strength = 10)\n\nObject (Name): player\nAttribute (Name): strength\nAttribute (Type): int\nValue_or_Expression: Expression\nComputational Operators: + (addition), - (subtraction), * (multiplication), and / (division)\nExpression: player.strength Operator 10\n\n[code:10i5gxhz]Set variable player&#46;strength = &#91;EXPRESSION&#93; player&#46;strength - 10\nNew player&#46;strength Value&#58; 0\n\nSet variable player&#46;strength = &#91;EXPRESSION&#93; player&#46;strength + 10\nNew player&#46;strength Value&#58; 20\n\nSet variable player&#46;strength = &#91;EXPRESSION&#93; player&#46;strength * 10\nNew player&#46;strength Value&#58; 100\n\nSet variable player&#46;strength = &#91;EXPRESSION&#93; player&#46;strength / 10\nNew player&#46;strength Value&#58; 1[/code:10i5gxhz]\n\nconceptually, it's algebraic substitution:\n\nOld: player.strength = 10\n\nplayer.strength (New) = player.strength (Old) + 10 (Value)\nplayer.strength (New) = 10 (Old player.strength Value) + 10 (Value)\nplayer.strength (New) = 10 + 10\n\nNew: player.strength = 20",
      "EditableFormat": "bbcode",
      "HTML": "just to add:<br/><br/>The &quot;set a variable or attribute&quot; (and just remember in its drop-down-box to select &quot;EXPRESSION&quot;, don't leave it selected on &quot;???&quot;) and &quot;If...&quot; Scripts enables you to do most of whatever you may want to do, they're very powerful~useful Scripts.<br/><br/>In Code, it's syntax~format is this:<br/><br/>object.attribute = value_or_expression<br/>~OR~<br/>variable = value_or_expression<br/><br/>which is exactly the same thing as what you do in the GUI~Editor's &quot;set a variable or attribute&quot; Script&#058;<br/><br/>Set variable &quot;object.attribute&quot; = [EXPRESSION] &quot;value_or_expression&quot;<br/>~OR~<br/>Set variable &quot;variable&quot; = [EXPRESSION] &quot;value_or_expression&quot;<br/><br/>so here's some examples:<br/><br/>Object (Name): player<br/>Attribute (Name): alias<br/>Attribute (Type): string<br/>Value_or_Expression: Value<br/>Value: &quot;HK&quot;<br/><br/><pre><code>Set variable player&#46;alias = &#91;EXPRESSION&#93; &quot;HK&quot;</code></pre><br/><br/>(the quotes are required for when your Attribute Type is a: string)<br/>(but, the quote usage is more complicated when you're doing an Expression, and not just merely a single Value)<br/>(the built-in &quot;alias&quot; Attribute's Type is a: string, so it needs the quotes)<br/><br/>-------------------------------------<br/><br/>Variable: you_go_first<br/>Value_or_Expression: Value<br/>Value: true_or_false<br/><br/><pre><code>If&#46;&#46;&#46; -&gt; Print a message &#91;EXPRESSION&#93; player&#46;speed &gt; monster&#46;speed<br/>-&gt; then -&gt; Set variable you_go_first = &#91;EXPRESSION&#93; true<br/>else -&gt; If&#46;&#46;&#46; -&gt; Print a message &#91;EXPRESSION&#93; player&#46;speed &lt; monster&#46;speed<br/>-&gt; then -&gt; Set variable you_go_first = &#91;EXPRESSION&#93; false<br/>else -&gt; If&#46;&#46;&#46; -&gt; Print a message &#91;EXPRESSION&#93; player&#46;speed = monster&#46;speed<br/>-&gt; then -&gt; If&#46;&#46;&#46; -&gt; Print a message &#91;EXPRESSION&#93; RandomChance (50) = true<br/>-&gt;-&gt; then -&gt; Set variable you_go_first = &#91;EXPRESSION&#93; true<br/><br/>If&#46;&#46;&#46; -&gt; Set variable you_go_first = &#91;EXPRESSION&#93; true<br/>-&gt; then -&gt; Set variable monster&#46;hit_points = &#91;EXPRESSION&#93; monster&#46;hit_points - player&#46;damage<br/>-&gt; then -&gt; Print a message &#91;MESSAGE&#93; You get to go first and damage the monster!<br/>else -&gt; If&#46;&#46;&#46; Set variable you_go_first = &#91;EXPRESSION&#93; false<br/>-&gt; then -&gt; Set variable player&#46;hit_points = &#91;EXPRESSION&#93; player&#46;hit_points - monster&#46;damage<br/>-&gt; then -&gt; Print a message &#91;EXPRESSION&#93; &quot;The &quot; + monster&#46;alias + &quot;gets to go first and damages &quot; + player&#46;alias + &quot; for &quot; + monster&#46;damage + &quot; damage, leaving &quot; + player&#46;article + &quot; now with only &quot; + player&#46;hit_points + &quot; HP&#46;&quot;</code></pre><br/><br/>-----------<br/><br/>Object (Name): monster<br/>Attribute (Name): dead<br/>Attribute (Type): boolean<br/>Value_or_Expression: Value<br/>Value: false<br/><br/>boolean &lt;-- as is code built-in within quest is the same thing as specifically a --&gt; &quot;true_or_false&quot; flag<br/><br/><pre><code>Set variable monster&#46;dead = &#91;EXPRESSION&#93; false<br/><br/>you then kill the monster&#58;<br/><br/>Set variable monster&#46;dead = &#91;EXPRESSION&#93; true</code></pre><br/><br/>booleans~flags is just the *specific* use of &quot;true~false&quot; (which is a type of &quot;dualism~opposites&quot; ~ 2 options) String Values to choose results<br/><br/>----<br/><br/>other types of CONCEPTUAL (*NOT* using the actual Attribute Type: boolean) flags~booleans (2 options for results):<br/><br/>binary (&quot;0~1&quot;): if &quot;0&quot; then do &quot;this&quot;, if &quot;1&quot; then do &quot;that&quot;<br/>numbers (any 2 numbers, except 0 and 1): if &quot;5&quot; then do &quot;this&quot;, if &quot;23&quot;, then do &quot;that&quot;<br/>physics charges: if &quot;-&quot; then do &quot;this&quot;, if &quot;+&quot; then do &quot;that&quot;<br/>&quot;on~off&quot;: if &quot;on&quot;, then do &quot;this&quot;, if &quot;off&quot;, then do &quot;that&quot;<br/>&quot;yes~no&quot;: if &quot;yes&quot;, then do &quot;this&quot;, if &quot;no&quot;, then do &quot;that&quot;<br/>&quot;in~out&quot;: ...<br/>&quot;hot~cold&quot;: ...<br/>&quot;up~down&quot;: ....<br/>&quot;left~right&quot;: ....<br/>&quot;male~female&quot;: ...<br/>&quot;tall~short&quot;: ...<br/>&quot;fat~skinny&quot;: ...<br/>...you get the idea...<br/><br/>and we can expand this beyond dualism~opposites (ie: 3 and more options) to choose results:<br/><br/>if &quot;1&quot;, then do &quot;this_1&quot;<br/>if &quot;2&quot;, then do &quot;this_2&quot;<br/>if &quot;3&quot;, then do &quot;this_3&quot;<br/>if &quot;4&quot;, ....<br/>etc etc etc<br/><br/>if &quot;red&quot;, then do &quot;this_1&quot;<br/>if &quot;blue&quot;, then do &quot;this_2&quot;<br/>if &quot;yellow&quot;, then do &quot;this_3&quot;<br/>if &quot;purple&quot;, ....<br/>etc etc etc<br/><br/>--------------<br/><br/>so, actually (CONCEPTUALLY ONLY: booleans~flags) are just:<br/><br/>(IF)<br/>object.attribute = Value<br/>(THEN...)<br/>(result~action~&quot;whatever_you_want&quot; Script)<br/><br/>object.(Type: Boolean)attribute = (String) Value<br/><br/>Strings ~ String Values:<br/><br/>0, 1, 5, 23, +, -, on, off, yes, no, true, false, in, out, hot, cold, male, female, left, right, up, down, -5, hhh23_888#$%ffss, a, b, c, z, and etc...<br/><br/>-----------<br/><br/>Object (Name): player<br/>Attribute (Name): strength<br/>Attribute (Type): int<br/>Value_or_Expression: Value<br/>Value: 0<br/><br/>int is used as a short form of integer, so if you were coding this, you'd not have to write out &quot;integer&quot;<br/><br/><pre><code>Set variable player&#46;strength = &#91;EXPRESSION&#93; 100</code></pre><br/><br/>----------------<br/><br/>and if you want to do (computation ~ adjusting attributes):<br/><br/>Old player.strength Value: 10<br/>(In Code: player.strength = 10)<br/><br/>Object (Name): player<br/>Attribute (Name): strength<br/>Attribute (Type): int<br/>Value_or_Expression: Expression<br/>Computational Operators: + (addition), - (subtraction), * (multiplication), and / (division)<br/>Expression: player.strength Operator 10<br/><br/><pre><code>Set variable player&#46;strength = &#91;EXPRESSION&#93; player&#46;strength - 10<br/>New player&#46;strength Value&#58; 0<br/><br/>Set variable player&#46;strength = &#91;EXPRESSION&#93; player&#46;strength + 10<br/>New player&#46;strength Value&#58; 20<br/><br/>Set variable player&#46;strength = &#91;EXPRESSION&#93; player&#46;strength * 10<br/>New player&#46;strength Value&#58; 100<br/><br/>Set variable player&#46;strength = &#91;EXPRESSION&#93; player&#46;strength / 10<br/>New player&#46;strength Value&#58; 1</code></pre><br/><br/>conceptually, it's algebraic substitution:<br/><br/>Old: player.strength = 10<br/><br/>player.strength (New) = player.strength (Old) + 10 (Value)<br/>player.strength (New) = 10 (Old player.strength Value) + 10 (Value)<br/>player.strength (New) = 10 + 10<br/><br/>New: player.strength = 20",
      "PostDate": "2014-01-12T02:57:27+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27421",
      "UserId": 0,
      "Username": "Krammy",
      "UserAvatar": null,
      "UserGravatar": "8e4d2bfa04efd4a82422c58bf3c335a9",
      "EditableText": "[quote=&quot;tlk&quot;:2o58txaz]I believe what you want in your script is &quot;set a variable or attribute&quot;, and you want it to say:\n\nSet variable [object.alias] = [expression] [&quot;newalias&quot;]\n\nWhere &quot;object&quot; is whatever object whose alias you want to change, and &quot;newalias&quot; is whatever you want the new alias to be (make sure to include the quotes). In code it would look like this:\n\n[code:2o58txaz]object&#46;alias = &quot;newalias&quot;[/code:2o58txaz][/quote:2o58txaz]\n\nThank you! This is the code I needed. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>tlk wrote:</cite>I believe what you want in your script is &quot;set a variable or attribute&quot;, and you want it to say:<br/><br/>Set variable [object.alias] = [expression] [&quot;newalias&quot;]<br/><br/>Where &quot;object&quot; is whatever object whose alias you want to change, and &quot;newalias&quot; is whatever you want the new alias to be (make sure to include the quotes). In code it would look like this:<br/><br/><pre><code>object&#46;alias = &quot;newalias&quot;</code></pre></blockquote><br/><br/>Thank you! This is the code I needed. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2014-01-12T09:04:23+00:00",
      "LastEditDate": null
    }
  ]
}
