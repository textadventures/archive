{
  "Topic": {
    "TopicId": "k2vdbawixeiuliu-d-v2rq",
    "ForumId": "10",
    "Title": "Generated object error when trying to move children, etc.",
    "LastUpdated": "2024-06-24T00:09:26.0723388Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "0ac5896e-3974-4aef-aca0-191d1c133c6b",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm having difficulty.  When POVs change their status as a magicuser, their flag changes, and there's a changed script which does a lot of the work setting attributes and making the spellbook pane POV specific.\r\n\r\nIn order to make it work so that game creators can change any POV they like into a magicuser, I told the script to create a spell storage room.  But I'm having trouble then running certain scripts related to that room.  I got this error\r\n\r\nError running script: Error evaluating expression '(GetDirectChildren((ProcessText(game.pov.name) + \"spells\")))': GetDirectChildren function expected object parameter but was passed 'playerspells'\r\nmagicuser on\r\n\r\nI can move the spells to the room after it's created.  But I can't seem to find them once moved and move them back to \"spells_known\" when the pov becomes a magic user again.\r\n\r\nHow do I tell the GetDirectChildren function Or other functions which don't behave like move object, that the string I'm passing is the name of the room?",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm having difficulty.  When POVs change their status as a magicuser, their flag changes, and there's a changed script which does a lot of the work setting attributes and making the spellbook pane POV specific.</p>\n<p>In order to make it work so that game creators can change any POV they like into a magicuser, I told the script to create a spell storage room.  But I'm having trouble then running certain scripts related to that room.  I got this error</p>\n<p>Error running script: Error evaluating expression '(GetDirectChildren((ProcessText(game.pov.name) + \"spells\")))': GetDirectChildren function expected object parameter but was passed 'playerspells'<br>\nmagicuser on</p>\n<p>I can move the spells to the room after it's created.  But I can't seem to find them once moved and move them back to \"spells_known\" when the pov becomes a magic user again.</p>\n<p>How do I tell the GetDirectChildren function Or other functions which don't behave like move object, that the string I'm passing is the name of the room?</p>\n\n",
      "PostDate": "2024-06-24T00:09:26.0723388Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4a1672ce-d202-4e95-9332-1ede7468c782",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What are you running `ProcessText`? All that does is check if the POV name contains any text processor commands. I don't think `{` is a valid character to include in an object name anyway.\r\n\r\nI think what you want is: `GetDirectChildren (GetObject (game.pov.name + \"spells\"))`\r\n\r\nGetObject is the function that takes an object's name and returns the actual object. But note that if this room doesn't exist, you'll still get an error. So make sure you include some kind of check to make sure this code isn't called before the spell room is created.\r\n\r\n(My usual way of dealing with spells is to put them in the inventory, and make them invisible so that they don't show up in all the standard inventory stuff; or to keep them in a single location and give the POV object an objectlist attribute showing which ones they've got)",
      "EditableFormat": "markdown",
      "HTML": "<p>What are you running <code>ProcessText</code>? All that does is check if the POV name contains any text processor commands. I don't think <code>{</code> is a valid character to include in an object name anyway.</p>\n<p>I think what you want is: <code>GetDirectChildren (GetObject (game.pov.name + \"spells\"))</code></p>\n<p>GetObject is the function that takes an object's name and returns the actual object. But note that if this room doesn't exist, you'll still get an error. So make sure you include some kind of check to make sure this code isn't called before the spell room is created.</p>\n<p>(My usual way of dealing with spells is to put them in the inventory, and make them invisible so that they don't show up in all the standard inventory stuff; or to keep them in a single location and give the POV object an objectlist attribute showing which ones they've got)</p>\n\n",
      "PostDate": "2024-06-24T09:07:08.0491385Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2a7854c6-7aae-4d28-8900-5be7e4cb7654",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Mr. Angel!  You really are amazing.  I'm saving your idea to look at later about lists and the use of spells for the player.    Learning a little here and there as I go.\r\n\r\nYour solution for finding a way to let the system know I wanted the room with the name rather than sending it a string worked.  Of course!\r\n\r\nThe context is using Pixie's CombatLib where he already had all player spells going into a room called \"spells_known\" and I added the 2nd inventory library so I could make an inventory pane for that room instead of merely pulling the list with a command and function.  \r\n\r\nBut it wasn't set up for ChangePOV or for situations where the player might become a magicuser mid-game and/or lose their magic ability.  So I created the \"changedmagicuser\" script to be added to any POV. Which reads a flag that gets set when the change happens.  The full script looks like this:\r\n\r\n```\r\nif (GetBoolean(this, \"magicuser\")) {\r\n  if (HasAttribute(this, \"mana\")) {\r\n    if (HasAttribute(this, \"mana_max\")) {\r\n    }\r\n    else {\r\n      this.mana_max = 0\r\n    }\r\n    dictionary add (game.pov.statusattributes, \"mana\", \"MP: !\")\r\n  }\r\n  else if (HasAttribute(this, \"mana_max\")) {\r\n    if (HasAttribute(this, \"mana\")) {\r\n    }\r\n    else {\r\n      game.pov.mana = 0\r\n    }\r\n    dictionary add (game.pov.statusattributes, \"mana\", \"MP: !\")\r\n  }\r\n  else {\r\n    SetMana\r\n    dictionary add (game.pov.statusattributes, \"mana\", \"MP: !\")\r\n  }\r\n  if (GetBoolean(game, ProcessText(game.pov.name) + \"spells\")) {\r\n    msg (\"Checking for spells\")\r\n    foreach (o, GetDirectChildren(GetObject(game.pov.name + \"spells\"))) {\r\n      MoveObject (o, spells_known)\r\n      msg (\"moved a spell in!\")\r\n    }\r\n    if (GetBoolean(game, ProcessText(game.pov.name) + \"spells\")) {\r\n      msg (\"Checking for spells\")\r\n      foreach (o, GetDirectChildren(GetObject(game.pov.name + \"spells\"))) {\r\n        MoveObject (o, spells_known)\r\n        msg (\"moved a spell in!\")\r\n      }\r\n    }\r\n    else {\r\n      create (ProcessText(game.pov.name) + \"spells\", \"editor_room\")\r\n      foreach (o, GetDirectChildren(GetObject(game.pov.name + \"spells\"))) {\r\n        MoveObject (o, spells_known)\r\n      }\r\n      msg (\"Created playerspells for you and moved spells into spells known...\")\r\n      SetObjectFlagOn (game, ProcessText(game.pov.name) + \"spells\")\r\n    }\r\n  }\r\n  else {\r\n    create (ProcessText(game.pov.name) + \"spells\", \"editor_room\")\r\n    foreach (o, GetDirectChildren(GetObject(game.pov.name + \"spells\"))) {\r\n      MoveObject (o, spells_known)\r\n    }\r\n    msg (\"Created playerspells for you and moved spells into spells known...\")\r\n    SetObjectFlagOn (game, ProcessText(game.pov.name) + \"spells\")\r\n  }\r\n  InitInv2 (\"Spells\")\r\n  SetInv2 (spells_known)\r\n}\r\nelse {\r\n  this.mana = 0\r\n  this.mana_max = 0\r\n  dictionary remove (game.pov.statusattributes, \"mana\")\r\n  if (GetBoolean(game, ProcessText(game.pov.name) + \"spells\")) {\r\n    msg (\"Checking for your spells\")\r\n    foreach (o, GetDirectChildren(spells_known)) {\r\n      MoveObject (o, GetObject(game.pov.name + \"spells\"))\r\n      msg (\"moved a spell! out\")\r\n    }\r\n  }\r\n  else {\r\n    create (ProcessText(game.pov.name) + \"spells\", \"editor_room\")\r\n    foreach (o, (GetDirectChildren(spells_known))) {\r\n      MoveObject (o, GetObject (game.pov.name + \"spells\"))\r\n    }\r\n    msg (\"Created playerspells for you\")\r\n    SetObjectFlagOn (game, ProcessText(game.pov.name) + \"spells\")\r\n  }\r\n  InitInv2 (\"\")\r\n  SetInv2 (emptyroom)\r\n}\r\nUpdateStatusAttributes\r\nUpdateStatus\r\n```\r\n\r\nNow the idea will be to add the new spell inventory parts to the ChangePOV process so that the game also correctly recognizes when you change your POV from a magic user to a non-magic user!  \r\n\r\nThanks as always for all your help Mr. Angel.  You, Pixie, and a couple others are going to get lines (or paragraphs) of recognition when I finally get something done that's worth sharing!",
      "EditableFormat": "markdown",
      "HTML": "<p>Mr. Angel!  You really are amazing.  I'm saving your idea to look at later about lists and the use of spells for the player.    Learning a little here and there as I go.</p>\n<p>Your solution for finding a way to let the system know I wanted the room with the name rather than sending it a string worked.  Of course!</p>\n<p>The context is using Pixie's CombatLib where he already had all player spells going into a room called \"spells_known\" and I added the 2nd inventory library so I could make an inventory pane for that room instead of merely pulling the list with a command and function.</p>\n<p>But it wasn't set up for ChangePOV or for situations where the player might become a magicuser mid-game and/or lose their magic ability.  So I created the \"changedmagicuser\" script to be added to any POV. Which reads a flag that gets set when the change happens.  The full script looks like this:</p>\n<pre><code>if (GetBoolean(this, \"magicuser\")) {\n  if (HasAttribute(this, \"mana\")) {\n    if (HasAttribute(this, \"mana_max\")) {\n    }\n    else {\n      this.mana_max = 0\n    }\n    dictionary add (game.pov.statusattributes, \"mana\", \"MP: !\")\n  }\n  else if (HasAttribute(this, \"mana_max\")) {\n    if (HasAttribute(this, \"mana\")) {\n    }\n    else {\n      game.pov.mana = 0\n    }\n    dictionary add (game.pov.statusattributes, \"mana\", \"MP: !\")\n  }\n  else {\n    SetMana\n    dictionary add (game.pov.statusattributes, \"mana\", \"MP: !\")\n  }\n  if (GetBoolean(game, ProcessText(game.pov.name) + \"spells\")) {\n    msg (\"Checking for spells\")\n    foreach (o, GetDirectChildren(GetObject(game.pov.name + \"spells\"))) {\n      MoveObject (o, spells_known)\n      msg (\"moved a spell in!\")\n    }\n    if (GetBoolean(game, ProcessText(game.pov.name) + \"spells\")) {\n      msg (\"Checking for spells\")\n      foreach (o, GetDirectChildren(GetObject(game.pov.name + \"spells\"))) {\n        MoveObject (o, spells_known)\n        msg (\"moved a spell in!\")\n      }\n    }\n    else {\n      create (ProcessText(game.pov.name) + \"spells\", \"editor_room\")\n      foreach (o, GetDirectChildren(GetObject(game.pov.name + \"spells\"))) {\n        MoveObject (o, spells_known)\n      }\n      msg (\"Created playerspells for you and moved spells into spells known...\")\n      SetObjectFlagOn (game, ProcessText(game.pov.name) + \"spells\")\n    }\n  }\n  else {\n    create (ProcessText(game.pov.name) + \"spells\", \"editor_room\")\n    foreach (o, GetDirectChildren(GetObject(game.pov.name + \"spells\"))) {\n      MoveObject (o, spells_known)\n    }\n    msg (\"Created playerspells for you and moved spells into spells known...\")\n    SetObjectFlagOn (game, ProcessText(game.pov.name) + \"spells\")\n  }\n  InitInv2 (\"Spells\")\n  SetInv2 (spells_known)\n}\nelse {\n  this.mana = 0\n  this.mana_max = 0\n  dictionary remove (game.pov.statusattributes, \"mana\")\n  if (GetBoolean(game, ProcessText(game.pov.name) + \"spells\")) {\n    msg (\"Checking for your spells\")\n    foreach (o, GetDirectChildren(spells_known)) {\n      MoveObject (o, GetObject(game.pov.name + \"spells\"))\n      msg (\"moved a spell! out\")\n    }\n  }\n  else {\n    create (ProcessText(game.pov.name) + \"spells\", \"editor_room\")\n    foreach (o, (GetDirectChildren(spells_known))) {\n      MoveObject (o, GetObject (game.pov.name + \"spells\"))\n    }\n    msg (\"Created playerspells for you\")\n    SetObjectFlagOn (game, ProcessText(game.pov.name) + \"spells\")\n  }\n  InitInv2 (\"\")\n  SetInv2 (emptyroom)\n}\nUpdateStatusAttributes\nUpdateStatus\n</code></pre>\n<p>Now the idea will be to add the new spell inventory parts to the ChangePOV process so that the game also correctly recognizes when you change your POV from a magic user to a non-magic user!</p>\n<p>Thanks as always for all your help Mr. Angel.  You, Pixie, and a couple others are going to get lines (or paragraphs) of recognition when I finally get something done that's worth sharing!</p>\n\n",
      "PostDate": "2024-06-25T03:06:57.1648178Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
