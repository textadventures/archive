{
  "Topic": {
    "TopicId": "u0pbstxtvki7uc0mwwrdja",
    "ForumId": "10",
    "Title": "Command calling command",
    "LastUpdated": "2019-05-29T09:11:03.1057391Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "5f23f79d-c7e7-409c-9b0c-9d1ec5bc638e",
      "UserId": 340011,
      "Username": "wooterslw",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7d20dd39301d8b9be2be0abaf005968d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is there a way for a command to call another command?  Basically have the command force a player input?",
      "EditableFormat": "markdown",
      "HTML": "<p>Is there a way for a command to call another command?  Basically have the command force a player input?</p>\n\n",
      "PostDate": "2019-05-29T09:11:03.1057391Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f6848e86-6af2-4df5-89cc-bd201b1833da",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://i.imgur.com/R88ag26b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You mean how do you make a command run an endless loop until the player inputs a proper response?\r\n\r\nYou script ```get input``` into a function.  If the ```result``` is improper, call the same function again at the end of that very function.",
      "EditableFormat": "markdown",
      "HTML": "<p>You mean how do you make a command run an endless loop until the player inputs a proper response?</p>\n<p>You script <code>get input</code> into a function.  If the <code>result</code> is improper, call the same function again at the end of that very function.</p>\n\n",
      "PostDate": "2019-05-29T09:34:59.1047451Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "29323f23-4f09-400f-9ed0-b1754702ea70",
      "UserId": 340011,
      "Username": "wooterslw",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7d20dd39301d8b9be2be0abaf005968d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "No. I want one command to call another command. I have a command called \"spend xp\" that explains how to spend your xp to learn new skills. the command to do that is LEARN <SKILL NAME>. But I also have LEARN ? that explains what that command does and part of that is repeating the text in SPEND XP. But instead of duplicating the text I would just like to activate that command to display that text. So, something like this:\r\n\r\nLEARN ?\r\n  msg (\"This command allows you to learn new skills as long as you have the experience to spend.\")\r\n  command (spend xp)\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>No. I want one command to call another command. I have a command called \"spend xp\" that explains how to spend your xp to learn new skills. the command to do that is LEARN </p>\n<p>LEARN ?<br>\nmsg (\"This command allows you to learn new skills as long as you have the experience to spend.\")<br>\ncommand (spend xp)</p>\n\n",
      "PostDate": "2019-05-29T09:44:52.910295Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "18d892e8-db25-4458-ba85-32cc51f3a720",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There's a couple of ways you could do it. The simplest is probably calling `HandleCommand`, which will do everything including echoing the command as if the player typed it (if echo is turned on).\r\n\r\nNote that the behaviour of turnscripts could be a little unpredictable when you do this.\r\n\r\nFor example:\r\n```\r\nHandleCommand (\"go north\", null)\r\n```\r\n\r\nIf you want to make things a little easier for the parser and ensure that it doesn't get confused, you can use a dictionary to identify the objects referenced in the command. In this case, you use strings containing the object as it is typed in the command, and a string containing the actual name of the object. For example:\r\n```\r\nparams = NewStringDictionary()\r\ndictionary add (params, \"north\", \"exit27\")\r\nHandleCommand (\"go north\", params)\r\n```\r\n\r\nThis will prevent the disambiguation menu popping up if they're in a room with more than one north exit. Though this technique is probably more useful in the case of inventory objects, in case they're still carrying an object from earlier in the game that has a similar name.\r\n\r\n<hr />\r\n\r\n**Simpler option:** if you want to run a single command that doesn't have any parameters. For example, if you wanted to display the player's inventory you could use:\r\n```\r\ndo (inventory, \"script\")\r\n```\r\nNote that this uses the *name* of the command, not its pattern. And it doesn't echo the command to the screen, clear the screen before the command, or run turnscripts after the command.",
      "EditableFormat": "markdown",
      "HTML": "<p>There's a couple of ways you could do it. The simplest is probably calling <code>HandleCommand</code>, which will do everything including echoing the command as if the player typed it (if echo is turned on).</p>\n<p>Note that the behaviour of turnscripts could be a little unpredictable when you do this.</p>\n<p>For example:</p>\n<pre><code>HandleCommand (\"go north\", null)\n</code></pre>\n<p>If you want to make things a little easier for the parser and ensure that it doesn't get confused, you can use a dictionary to identify the objects referenced in the command. In this case, you use strings containing the object as it is typed in the command, and a string containing the actual name of the object. For example:</p>\n<pre><code>params = NewStringDictionary()\ndictionary add (params, \"north\", \"exit27\")\nHandleCommand (\"go north\", params)\n</code></pre>\n<p>This will prevent the disambiguation menu popping up if they're in a room with more than one north exit. Though this technique is probably more useful in the case of inventory objects, in case they're still carrying an object from earlier in the game that has a similar name.</p>\n<hr>\n<p><strong>Simpler option:</strong> if you want to run a single command that doesn't have any parameters. For example, if you wanted to display the player's inventory you could use:</p>\n<pre><code>do (inventory, \"script\")\n</code></pre>\n<p>Note that this uses the <em>name</em> of the command, not its pattern. And it doesn't echo the command to the screen, clear the screen before the command, or run turnscripts after the command.</p>\n\n",
      "PostDate": "2019-05-29T09:48:08.328968Z",
      "LastEditDate": "2019-05-29T09:51:24.20014Z",
      "link": null
    },
    {
      "PostId": "dd018d98-a369-4f9a-9718-9c7f6a02def9",
      "UserId": 340011,
      "Username": "wooterslw",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7d20dd39301d8b9be2be0abaf005968d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Awesome! Just what I was looking for. Thanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>Awesome! Just what I was looking for. Thanks!</p>\n\n",
      "PostDate": "2019-05-29T09:53:01.5796651Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "66d30b1c-9fdd-4f76-b455-178c851eb7e0",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "LEARN ?\r\nmsg (\"This command allows you to learn new skills as long as you have the experience to spend.\")\r\n// command (spend xp)\r\n// if spend xp is a command, make it a function and call it like:\r\nspend xp()\r\n\r\nI assume that the player can \"spend xp\" directly without using \"learn\"...\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>LEARN ?<br>\nmsg (\"This command allows you to learn new skills as long as you have the experience to spend.\")<br>\n// command (spend xp)<br>\n// if spend xp is a command, make it a function and call it like:<br>\nspend xp()</p>\n<p>I assume that the player can \"spend xp\" directly without using \"learn\"...</p>\n\n",
      "PostDate": "2019-05-30T01:18:10.616793Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
