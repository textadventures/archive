{
  "Topic": {
    "TopicId": "xevxr89ghkw-uwf5dse-qg",
    "ForumId": "10",
    "Title": "Skip Menus?",
    "LastUpdated": "2021-06-19T12:08:31.9992722Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "d5f66e25-e451-41cd-b0bf-4a2d10b60500",
      "UserId": 187141,
      "Username": "Shadecerule",
      "AvatarUrl": "https://secure.gravatar.com/avatar/c73b5bde1f86d7098461d3f9889a386f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Like a lot of text adventures, mine has branching dialogue that I use menus to grab answers for. Sometimes I want a dialogue path to get to the end more quickly by skipping subsequent menus (for instance, when repeating a conversation and skipping some introduction questions). The only method I know to make this happen is to create a function that I reference to plug in the material that comes after the skip, which becomes a bit cumbersome for my function list.\r\n\r\nTo clarify, this is a simple example of what I mean:\r\n\r\n```\r\nif (player.new) {\r\n  msg (\"\\\"Hi, what's your name?\\\"\")\r\n  list = NewStringList()\r\n  list add (list, \"Give your name.\")\r\n  ShowMenu (\"\", list, false) {\r\n    msg (\"<br/>You give them your name.<br/><br/>\\\"Nice to meet you. What's up?\\\"<br/><br/>{command:ask NPC about nothing:\\\"Nothing.\\\"}\")\r\n  }\r\n}\r\nelse {\r\n  msg (\"\\\"Hey {player.name}, what's up?\\\"<br/><br/>{command:ask NPC about nothing:\\\"Nothing.\\\"}\")\r\n}\r\n```\r\n(Or, in picture form: https://i.imgur.com/SMcO7b9.png)\r\n\r\nIn a situation like this, I would place ```{command:ask NPC about nothing:\"Nothing.\"}``` into a function that I would then call at the end of each of those paths, because this \"end\" content is normally a lot longer than a single line of text like that. Sometimes it's more dialogue paths or other such things, so simply pasting it into both paths isn't always viable.\r\n\r\nWhat I want to know is, is there a better way to do this?",
      "EditableFormat": "markdown",
      "HTML": "<p>Like a lot of text adventures, mine has branching dialogue that I use menus to grab answers for. Sometimes I want a dialogue path to get to the end more quickly by skipping subsequent menus (for instance, when repeating a conversation and skipping some introduction questions). The only method I know to make this happen is to create a function that I reference to plug in the material that comes after the skip, which becomes a bit cumbersome for my function list.</p>\n<p>To clarify, this is a simple example of what I mean:</p>\n<pre><code>if (player.new) {\n  msg (\"\\\"Hi, what's your name?\\\"\")\n  list = NewStringList()\n  list add (list, \"Give your name.\")\n  ShowMenu (\"\", list, false) {\n    msg (\"&lt;br/&gt;You give them your name.&lt;br/&gt;&lt;br/&gt;\\\"Nice to meet you. What's up?\\\"&lt;br/&gt;&lt;br/&gt;{command:ask NPC about nothing:\\\"Nothing.\\\"}\")\n  }\n}\nelse {\n  msg (\"\\\"Hey {player.name}, what's up?\\\"&lt;br/&gt;&lt;br/&gt;{command:ask NPC about nothing:\\\"Nothing.\\\"}\")\n}\n</code></pre>\n<p>(Or, in picture form: https://i.imgur.com/SMcO7b9.png)</p>\n<p>In a situation like this, I would place <code>{command:ask NPC about nothing:\"Nothing.\"}</code> into a function that I would then call at the end of each of those paths, because this \"end\" content is normally a lot longer than a single line of text like that. Sometimes it's more dialogue paths or other such things, so simply pasting it into both paths isn't always viable.</p>\n<p>What I want to know is, is there a better way to do this?</p>\n\n",
      "PostDate": "2021-06-19T12:08:31.9992722Z",
      "LastEditDate": "2021-06-19T12:10:15.782933Z",
      "link": null
    },
    {
      "PostId": "4ce23c0f-3a84-42bd-bd2c-df8cbbe888c7",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Making a function for each response is probably the simplest way to do it; but can create a large list of functions.\r\n\r\nAn alternative would be to store the conversation data in a more structured form.\r\n\r\nOne method I'd consider would be making a set of 'conversation rooms'; you could put a chunk of text or script in each room's description, and use exits between them to indicate their choices. You wouldn't actually send the player to these rooms, but you could have a single function that handles a branching menu system in this way.\r\n(you could also put questions in objects, or in a dictionary… the advantage of using rooms is that you can collapse them in the sidebar of the editor, put them inside other rooms to keep them organised, and use the 'description'  editor to easily change your text.\r\n\r\nYou'd just need a function like:\r\n```\r\n<function name=\"ShowMenuFromRoom\" parameters=\"room\">\r\n  if (HasString (room, \"description\")) {\r\n    msg (room.description)\r\n  }\r\n  else if (HasScript (room, \"description\")) {\r\n    do (room, \"description\")\r\n  }\r\n  choices = ScopeUnlockedExitsForRoom (room)\r\n  if (ListCount (choices) > 0) {\r\n    ShowMenu (\"\", choices, false) {\r\n      chosen = GetObject (chosen)\r\n      // Remove the next line if you don't want to show the player's choice:\r\n      msg (\"==> \" + GetDisplayAlias (chosen))\r\n      if (HasScript (chosen, \"script\")) {\r\n        do (chosen, \"script\")\r\n      }\r\n      if (HasObject (chosen, \"to\")) {\r\n        ShowMenuFromRoom (to)\r\n      }\r\n    }\r\n  }\r\n</function>\r\n```\r\nThen you can just type all of your NPC conversations into a set of rooms. When you call this function, it displays the description of the \"room\" you name, and then displays the room's exits as a menu.\r\nYou can put the rooms in a container so that they're separate from your game's real rooms; or you could put them inside an invisible container in the NPC. You can make the description either text or a script; and you can disable choices by locking the exits.\r\n\r\nI think this is a pretty neat way to organise a conversation, rather than having a big list of functions.",
      "EditableFormat": "markdown",
      "HTML": "<p>Making a function for each response is probably the simplest way to do it; but can create a large list of functions.</p>\n<p>An alternative would be to store the conversation data in a more structured form.</p>\n<p>One method I'd consider would be making a set of 'conversation rooms'; you could put a chunk of text or script in each room's description, and use exits between them to indicate their choices. You wouldn't actually send the player to these rooms, but you could have a single function that handles a branching menu system in this way.<br>\n(you could also put questions in objects, or in a dictionary… the advantage of using rooms is that you can collapse them in the sidebar of the editor, put them inside other rooms to keep them organised, and use the 'description'  editor to easily change your text.</p>\n<p>You'd just need a function like:</p>\n<pre><code>&lt;function name=\"ShowMenuFromRoom\" parameters=\"room\"&gt;\n  if (HasString (room, \"description\")) {\n    msg (room.description)\n  }\n  else if (HasScript (room, \"description\")) {\n    do (room, \"description\")\n  }\n  choices = ScopeUnlockedExitsForRoom (room)\n  if (ListCount (choices) &gt; 0) {\n    ShowMenu (\"\", choices, false) {\n      chosen = GetObject (chosen)\n      // Remove the next line if you don't want to show the player's choice:\n      msg (\"==&gt; \" + GetDisplayAlias (chosen))\n      if (HasScript (chosen, \"script\")) {\n        do (chosen, \"script\")\n      }\n      if (HasObject (chosen, \"to\")) {\n        ShowMenuFromRoom (to)\n      }\n    }\n  }\n&lt;/function&gt;\n</code></pre>\n<p>Then you can just type all of your NPC conversations into a set of rooms. When you call this function, it displays the description of the \"room\" you name, and then displays the room's exits as a menu.<br>\nYou can put the rooms in a container so that they're separate from your game's real rooms; or you could put them inside an invisible container in the NPC. You can make the description either text or a script; and you can disable choices by locking the exits.</p>\n<p>I think this is a pretty neat way to organise a conversation, rather than having a big list of functions.</p>\n\n",
      "PostDate": "2021-06-19T12:48:11.1053563Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
