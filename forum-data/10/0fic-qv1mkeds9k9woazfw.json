{
  "Topic": {
    "TopicId": "0fic-qv1mkeds9k9woazfw",
    "ForumId": "10",
    "Title": "Multiple Start Questions",
    "LastUpdated": "2018-01-11T03:14:10.3436714Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "f95dd4ee-c2ab-498f-ad5c-cc9d7d8096f9",
      "UserId": 340011,
      "Username": "wooterslw",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7d20dd39301d8b9be2be0abaf005968d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So if I want to start a game by compiling info on the player (Race, Class, Sex, ect). How do I do that? I know how to ask the questions in the Start Area. But if I have multiple questions, they all appear at once. How do I tell the program \"Wait until valid input to previous question before asking next question.\"",
      "EditableFormat": "markdown",
      "HTML": "<p>So if I want to start a game by compiling info on the player (Race, Class, Sex, ect). How do I do that? I know how to ask the questions in the Start Area. But if I have multiple questions, they all appear at once. How do I tell the program \"Wait until valid input to previous question before asking next question.\"</p>\n\n",
      "PostDate": "2018-01-11T03:14:10.3436714Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3649bd2c-73d1-40f9-a154-3edffb03636b",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Md7yN61b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\nThe answers you seek can be found here:\r\n\r\nhttp://docs.textadventures.co.uk/quest/asking_a_question.html",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p>The answers you seek can be found here:</p>\n<p>http://docs.textadventures.co.uk/quest/asking_a_question.html</p>\n\n",
      "PostDate": "2018-01-11T04:18:11.6365689Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8bef6f57-5e6b-4cd1-8154-7bc6e97673db",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I use a switch script for stuff like this.  Below is  an example of how this works.\r\n\r\n0a.  Maybe for each question you want to ask, create a function.  Perhaps call the first function 'GenderFunction'.  In this function, you could do the following...\r\n0b.  Print message \"Are you a male or female?\"\r\n1.  I used a Get input script.  Then I added a switch script.\r\n2.  In the Switch script box, type in 'LCase(result)'.  This makes all responses typed by the player lower case and recognized in your cases!  Very useful!\r\n4.  I added each word as a case for the switch script.  Be sure to write it as follows for Case 1:  \"male\",\"m\",\"dude\",\"guy\", etc...  For Case 2:  \"female\",\"f\",\"girl\",\"lady\", etc...  If the player types 'male', 'm', 'dude', or 'guy' (or whatever other response you want to be acceptable), you can then run a script to handle the input for the player selecting a male character.\r\n5.  For each script for each acceptable case, you will need to do things that I am unfamiliar with.  There are libraries for this kind of thing too, but it sounds like you CAN manage this part.  Maybe?\r\n6.  Make sure you add a default for any comment you do not want him to recognize.  The default in your case would probably be to run the function again so there is no way the player can skip this.  Perhaps include a print message prior to calling the function?  Maybe \"Hey, ding dong!  I said 'Are you male or female?'  Please answer this question before continuing.  Then, Call function 'GenderFunction'.\r\n\r\nThere are probably more eloquent ways of doing this, but that's how I would try it.  There will probably be someone who comes along and clears this up for me.\r\n\r\nThere is also this if you can understand it.  http://textadventures.co.uk/forum/samples/topic/bt2tyfsdpuqwlawkbgfszq/character-creator\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I use a switch script for stuff like this.  Below is  an example of how this works.</p>\n<p>0a.  Maybe for each question you want to ask, create a function.  Perhaps call the first function 'GenderFunction'.  In this function, you could do the following...<br>\n0b.  Print message \"Are you a male or female?\"</p>\n<ol>\n<li>I used a Get input script.  Then I added a switch script.</li>\n<li>In the Switch script box, type in 'LCase(result)'.  This makes all responses typed by the player lower case and recognized in your cases!  Very useful!</li>\n<li>I added each word as a case for the switch script.  Be sure to write it as follows for Case 1:  \"male\",\"m\",\"dude\",\"guy\", etc...  For Case 2:  \"female\",\"f\",\"girl\",\"lady\", etc...  If the player types 'male', 'm', 'dude', or 'guy' (or whatever other response you want to be acceptable), you can then run a script to handle the input for the player selecting a male character.</li>\n<li>For each script for each acceptable case, you will need to do things that I am unfamiliar with.  There are libraries for this kind of thing too, but it sounds like you CAN manage this part.  Maybe?</li>\n<li>Make sure you add a default for any comment you do not want him to recognize.  The default in your case would probably be to run the function again so there is no way the player can skip this.  Perhaps include a print message prior to calling the function?  Maybe \"Hey, ding dong!  I said 'Are you male or female?'  Please answer this question before continuing.  Then, Call function 'GenderFunction'.</li>\n</ol>\n<p>There are probably more eloquent ways of doing this, but that's how I would try it.  There will probably be someone who comes along and clears this up for me.</p>\n<p>There is also this if you can understand it.  http://textadventures.co.uk/forum/samples/topic/bt2tyfsdpuqwlawkbgfszq/character-creator</p>\n\n",
      "PostDate": "2018-01-11T04:45:09.4583608Z",
      "LastEditDate": "2018-01-11T04:49:56.1004462Z",
      "link": null
    },
    {
      "PostId": "c11e17ad-29a5-42aa-bd0d-0fbb7256bd33",
      "UserId": 340011,
      "Username": "wooterslw",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7d20dd39301d8b9be2be0abaf005968d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok. In case anyone else comes here looking for this answer. This is  what I did. I created two (or more if you need them) functions. Say I call them \"racefunction\" and \"classfunction\". In those functions I followed the online help for asking a question with a menu. At the result step of \"racefunction\" I have it call the function \"class function\". Then in startup I had it call the \"racefunction\". So you could daisy chain all your functions together that way.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok. In case anyone else comes here looking for this answer. This is  what I did. I created two (or more if you need them) functions. Say I call them \"racefunction\" and \"classfunction\". In those functions I followed the online help for asking a question with a menu. At the result step of \"racefunction\" I have it call the function \"class function\". Then in startup I had it call the \"racefunction\". So you could daisy chain all your functions together that way.</p>\n\n",
      "PostDate": "2018-01-11T05:57:17.7367633Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "989e8a42-94de-41ef-b930-24111af3fbac",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "there's also the 'character creation' guide doc by pixie (probably more useful than Anonynn's character creation code for her game):\r\n\r\nhttp://docs.textadventures.co.uk/quest/guides/character_creation.html\r\n\r\nif you need help, ask and we'd be glad to help",
      "EditableFormat": "markdown",
      "HTML": "<p>there's also the 'character creation' guide doc by pixie (probably more useful than Anonynn's character creation code for her game):</p>\n<p>http://docs.textadventures.co.uk/quest/guides/character_creation.html</p>\n<p>if you need help, ask and we'd be glad to help</p>\n\n",
      "PostDate": "2018-01-11T13:54:50.1164028Z",
      "LastEditDate": "2018-01-11T13:55:07.5535485Z",
      "link": null
    },
    {
      "PostId": "00b631df-e885-400a-813f-8accb2debc82",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "My system was a list of questions, with a function that removes a question when the player has answered it and checks if there's another in the list. It works, but I think that daisy-chaining functions like that is a little inefficient (as the frames for all the previous function calls are still in memory). I wonder if it might be more elegant to have a turnscript that checks if all of the questions have been answered, and if not asks the next one. (Are turnscripts called after responding to a ShowMenu prompt? I don't have the script in front of me to check, so it's just an idea bouncing round my head right now)",
      "EditableFormat": "markdown",
      "HTML": "<p>My system was a list of questions, with a function that removes a question when the player has answered it and checks if there's another in the list. It works, but I think that daisy-chaining functions like that is a little inefficient (as the frames for all the previous function calls are still in memory). I wonder if it might be more elegant to have a turnscript that checks if all of the questions have been answered, and if not asks the next one. (Are turnscripts called after responding to a ShowMenu prompt? I don't have the script in front of me to check, so it's just an idea bouncing round my head right now)</p>\n\n",
      "PostDate": "2018-01-11T14:08:39.6826043Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "81921049-7629-4580-889a-22d822a2a498",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Are you talking about doing tail-recursion (a function calling itself) or just a chain/nesting of function calls?\r\n\r\ndo both methods retain the 'activation records' (function's/whatever's data) in memory (aka: wasting memory) until the entire/full scripting ends (I presume it does free up the memory once it ends, lol) ???\r\n\r\nIf that's the case... is there an alternative to tail-recursion (which works with getting user input/selection: aka, unfortunately 'while' doesn't work with getting user input/selection, thus my use of tail-recursion)... ???\r\n\r\n(also maybe using Data Structures: iterators and linked lists, trees, maps, dictionaries, etc... would be another, and probably still too advanced for me lol, method?)",
      "EditableFormat": "markdown",
      "HTML": "<p>Are you talking about doing tail-recursion (a function calling itself) or just a chain/nesting of function calls?</p>\n<p>do both methods retain the 'activation records' (function's/whatever's data) in memory (aka: wasting memory) until the entire/full scripting ends (I presume it does free up the memory once it ends, lol) ???</p>\n<p>If that's the case... is there an alternative to tail-recursion (which works with getting user input/selection: aka, unfortunately 'while' doesn't work with getting user input/selection, thus my use of tail-recursion)... ???</p>\n<p>(also maybe using Data Structures: iterators and linked lists, trees, maps, dictionaries, etc... would be another, and probably still too advanced for me lol, method?)</p>\n\n",
      "PostDate": "2018-01-11T14:17:50.2055312Z",
      "LastEditDate": "2018-01-11T14:21:06.7881991Z",
      "link": null
    },
    {
      "PostId": "b5a68241-56f0-42dd-a91a-95f809374360",
      "UserId": 340011,
      "Username": "wooterslw",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7d20dd39301d8b9be2be0abaf005968d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I just basically set up a chain of functions. The startup calls the first function, which has a menu selection (say..Race), and at the end of that it calls the next function, which has a menu selection (say..Class), and at the end of that it calls the next function, etc. Not sure if it's pretty. I would hope its clearing out of memory once the function is complete. But it works. Now I just have to think of the best/cleanest/easiest way to do skills. :P",
      "EditableFormat": "markdown",
      "HTML": "<p>I just basically set up a chain of functions. The startup calls the first function, which has a menu selection (say..Race), and at the end of that it calls the next function, which has a menu selection (say..Class), and at the end of that it calls the next function, etc. Not sure if it's pretty. I would hope its clearing out of memory once the function is complete. But it works. Now I just have to think of the best/cleanest/easiest way to do skills. :P</p>\n\n",
      "PostDate": "2018-01-11T15:02:06.6847095Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6fcbb133-c592-48ad-acad-aa0ab57a9b1f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you can just nest/indent (in code) (or via GUI/Editor) your scripting, you don't need multiple functions and their calling/usage, see the 'character creation' guide link by pixie in my post above. A quick example, below\r\n\r\n```\r\n// Function/Verb/Command/Turnscript/Timer or Object+Script_Attribute+(optional)_Delegate scripting:\r\n\r\nmsg (\"Name?\")\r\nget input {\r\n  player.alias = result\r\n  show menu (\"Sex?\", split (\"male;female\", \";\"), false) {\r\n    player.sex = result\r\n    show menu (\"Race?\", split (\"human;dwarf;elf;gnome;halfling;giant\", \";\"), false) {\r\n      player.race = result\r\n      show menu (\"Class?\", split (\"warrior;archer;thief;cleric;mage\", \";\"), false ) {\r\n        player.class = result\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n--------------\r\n\r\nmy previous post's question was more to mrangel (or whoever), on quest's inner workings, in whether the memory is wasted (retained) or freed, as I've been using tail-recursion... but if it's retaining memory until the entire scriptings operations is done, that's bad. I thought with tail-recursion, that the previous scripting operation is done, so memory is freed, as it calls/does the next scripting operation (which uses up memory for it of course). But, if it's retaining the memory of all of the scripting opertions until the entire chain of scripting operations is done... that's very bad (lots of used/wasted memory)",
      "EditableFormat": "markdown",
      "HTML": "<p>you can just nest/indent (in code) (or via GUI/Editor) your scripting, you don't need multiple functions and their calling/usage, see the 'character creation' guide link by pixie in my post above. A quick example, below</p>\n<pre><code>// Function/Verb/Command/Turnscript/Timer or Object+Script_Attribute+(optional)_Delegate scripting:\n\nmsg (\"Name?\")\nget input {\n  player.alias = result\n  show menu (\"Sex?\", split (\"male;female\", \";\"), false) {\n    player.sex = result\n    show menu (\"Race?\", split (\"human;dwarf;elf;gnome;halfling;giant\", \";\"), false) {\n      player.race = result\n      show menu (\"Class?\", split (\"warrior;archer;thief;cleric;mage\", \";\"), false ) {\n        player.class = result\n      }\n    }\n  }\n}\n</code></pre>\n<hr>\n<p>my previous post's question was more to mrangel (or whoever), on quest's inner workings, in whether the memory is wasted (retained) or freed, as I've been using tail-recursion... but if it's retaining memory until the entire scriptings operations is done, that's bad. I thought with tail-recursion, that the previous scripting operation is done, so memory is freed, as it calls/does the next scripting operation (which uses up memory for it of course). But, if it's retaining the memory of all of the scripting opertions until the entire chain of scripting operations is done... that's very bad (lots of used/wasted memory)</p>\n\n",
      "PostDate": "2018-01-12T05:29:50.3155616Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "54b26a15-02a8-4bfa-84df-0189ae24fd79",
      "UserId": 340011,
      "Username": "wooterslw",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7d20dd39301d8b9be2be0abaf005968d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well, that was much easier. :P Thanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>Well, that was much easier. :P Thanks!</p>\n\n",
      "PostDate": "2018-01-12T06:05:46.3377492Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
