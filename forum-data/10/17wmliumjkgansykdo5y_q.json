{
  "Topic": {
    "TopicId": "17wmliumjkgansykdo5y_q",
    "ForumId": "10",
    "Title": "The ideal adventure interface",
    "LastUpdated": "2021-04-09T19:12:45.0456189Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "20ebb9db-8d29-46c6-8eae-458070f9c45b",
      "UserId": 8429,
      "Username": "TriangleGames",
      "AvatarUrl": "https://secure.gravatar.com/avatar/134d9e995777da65c5cf8efda551d579?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**TL;DR:**\r\n1. Remember SCUMM? That was neat! Until it wasn't.\r\n2. What is Point-N-Click, and what is just pointless?\r\n3. How many verbs is too many or not enough?\r\n4. Pure typing VS context menus VS verb blocks?\r\n5. Could a menu based verb block work?\r\n\r\n**Verbose:**\r\nSomeone on a web-forum was joking about genre definitions losing their meaning and asked \"what _is_ point-n-click?\"\r\nThis got me thinking about SCUMM, as well as what came immediately before it and after it. I ended up reading through the entire history of the LucasArts adventure games, with a focus on what verbs were used in each game over the years.\r\nIt was like reading a Lovecraftian story of hopeless horror where wit and self identity gradually spiral into oblivion. Seriously, I almost cried. I know a lot of you basically know this, but I want to highlight it with a summery.\r\nThe 15 year process looks something like this:\r\n1. Type anything you want! Not everything will work, so you'll have to think it out.\r\n2. Select from context based \"word wheels\" with a broad list of possibilities.\r\n3. Okay, here's 15 verbs, it'll always be one of those.\r\n4. How about 12 verbs?\r\n5. Okay 9, you can handle 9, right?\r\n6. Alright, we'll keep it to Look, Take, Talk, and Use.\r\n7. You know what, just click on things, and we'll tell you what it does.\r\n8. 3D Environments! Shiny graphics!  Full immersion! No cursor! You **are** the cursor!\r\n(play control may require a tutorial, have you ever used a remote control robot?)\r\n\r\nSomewhere around step 6 is where _Sam & Max Hit the Road_  happened, and that's about where Telltale games took off doing their own stuff. From them, we got a longer continuation of \"Point-N-Click\" games that were a lot of fun, but, now that I look back on things, they're not _really_ \"Point-N-Click\" at all. They're more like ... \"Click.\"\r\n\r\nI don't know when the term was first used, but, looking at this history, it seems to me that the point was you point _at verbs_ and click on them, as opposed to typing them. From that perspective, if there are no verbs to click on, then it's not really point-n-click, it's just a modern GUI based control scheme, like everything else on your computer.\r\n\r\nI still like text adventures, but the consummate complaint is \"I don't want to have to guess what to type.\"\r\nI think SCUMM was a good answer to that complaint. You still had to think about what exactly you were doing, and how you wanted to go about doing it. Other than using a mouse instead of a keyboard, it wasn't much different from having the game come with a printed list telling you what the viable terms are.\r\n\r\nBut then, everything slowly drifted down toward the blackhole of \"USE.\" I'm not against having \"USE\" be an option when there's no obvious custom verb that makes sense, but when it becomes the _only_ action verb, the thinking part of the game is greatly diminished. You may as well just have a big white space with all of the game's items shown on it, and just figure out what order to click on them in.\r\n\r\nThe drop down menus in Quest are ... _okay_ in my opinion, for a certain kind of gamer. My problem with them is that they are completely context oriented. Either they list all the verbs that will actually work, or they only list the common verbs that will work, forcing the player to eventually type something more specific. The prior feels like it gives away the puzzle, and the latter feels misleading and inconsistent. I feel both are made worse in combination with unique custom verbs. If you tell them what the verb is, what was the point of having it be unique? If you don't, they're back to guessing. I know, the point is to avoid guessing, but I feel like there must be a happy medium in there somewhere: a place where guessing is diminished, but thinking is still required. I feel like SCUMM basically gave us that happy medium.\r\n\r\nYou don't have to have graphics to do what SCUMM did, in fact I seem to recall some iteration of Quest doing just that, but it's been a while for me. With a verb block, you limit the game to a preset list of verbs that the player can see at all times. They can look over their options while they think about what to do, and it doesn't feel as overwhelming, because you know there's not some random specific word you need to think up on your own. They do still need to make their own choice, and there is a possibility of being wrong. I like this idea, but it can easily become pointless if mishandled.\r\n\r\nWithout enough verbs to make it a puzzle, you may as well just let them USE everything, or forgo the whole deal and let them click on stuff without the need to intend anything in particular. I suppose, with too many verbs, the verb box just becomes too cumbersome, so there must be an \"ideal\" number of verbs. I've seen other text adventure makers that have a permanent set of verbs that all games made with that system use. I don't like that either. Every game should be able to have it's own unique set of verbs. That's one of the things that originally led me to Quest.\r\n\r\nSo, I'm left with a lot of questions, but two main thoughts: the debate over how many verbs is the sweet spot, and an idea for a new kind of SCUMM-like verb block. I suspect the ideal number for a traditional verb block is around 12-20 verbs. Alternatively, you could have a verb block that navigates through categories rather than displaying all the words at once. Then, you could have more words to choose from, without taking up most of the screen. I imagine it something like this, for example:\r\n1. People (talk, hit, give)\r\n2. Move (Go, Open, Unlock)\r\n3. Manipulate (twist, turn on/off, pull, push)\r\n4. Use (swing at [object], point at [object], cut [object] with, throw at [object])\r\n5. Items (take, drop, remove from/put in bag, combine, equip)\r\n\r\nAnd so on, etc.",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>TL;DR:</strong></p>\n<ol>\n<li>Remember SCUMM? That was neat! Until it wasn't.</li>\n<li>What is Point-N-Click, and what is just pointless?</li>\n<li>How many verbs is too many or not enough?</li>\n<li>Pure typing VS context menus VS verb blocks?</li>\n<li>Could a menu based verb block work?</li>\n</ol>\n<p><strong>Verbose:</strong><br>\nSomeone on a web-forum was joking about genre definitions losing their meaning and asked \"what <em>is</em> point-n-click?\"<br>\nThis got me thinking about SCUMM, as well as what came immediately before it and after it. I ended up reading through the entire history of the LucasArts adventure games, with a focus on what verbs were used in each game over the years.<br>\nIt was like reading a Lovecraftian story of hopeless horror where wit and self identity gradually spiral into oblivion. Seriously, I almost cried. I know a lot of you basically know this, but I want to highlight it with a summery.<br>\nThe 15 year process looks something like this:</p>\n<ol>\n<li>Type anything you want! Not everything will work, so you'll have to think it out.</li>\n<li>Select from context based \"word wheels\" with a broad list of possibilities.</li>\n<li>Okay, here's 15 verbs, it'll always be one of those.</li>\n<li>How about 12 verbs?</li>\n<li>Okay 9, you can handle 9, right?</li>\n<li>Alright, we'll keep it to Look, Take, Talk, and Use.</li>\n<li>You know what, just click on things, and we'll tell you what it does.</li>\n<li>3D Environments! Shiny graphics!  Full immersion! No cursor! You <strong>are</strong> the cursor!<br>\n(play control may require a tutorial, have you ever used a remote control robot?)</li>\n</ol>\n<p>Somewhere around step 6 is where <em>Sam &amp; Max Hit the Road</em>  happened, and that's about where Telltale games took off doing their own stuff. From them, we got a longer continuation of \"Point-N-Click\" games that were a lot of fun, but, now that I look back on things, they're not <em>really</em> \"Point-N-Click\" at all. They're more like ... \"Click.\"</p>\n<p>I don't know when the term was first used, but, looking at this history, it seems to me that the point was you point <em>at verbs</em> and click on them, as opposed to typing them. From that perspective, if there are no verbs to click on, then it's not really point-n-click, it's just a modern GUI based control scheme, like everything else on your computer.</p>\n<p>I still like text adventures, but the consummate complaint is \"I don't want to have to guess what to type.\"<br>\nI think SCUMM was a good answer to that complaint. You still had to think about what exactly you were doing, and how you wanted to go about doing it. Other than using a mouse instead of a keyboard, it wasn't much different from having the game come with a printed list telling you what the viable terms are.</p>\n<p>But then, everything slowly drifted down toward the blackhole of \"USE.\" I'm not against having \"USE\" be an option when there's no obvious custom verb that makes sense, but when it becomes the <em>only</em> action verb, the thinking part of the game is greatly diminished. You may as well just have a big white space with all of the game's items shown on it, and just figure out what order to click on them in.</p>\n<p>The drop down menus in Quest are ... <em>okay</em> in my opinion, for a certain kind of gamer. My problem with them is that they are completely context oriented. Either they list all the verbs that will actually work, or they only list the common verbs that will work, forcing the player to eventually type something more specific. The prior feels like it gives away the puzzle, and the latter feels misleading and inconsistent. I feel both are made worse in combination with unique custom verbs. If you tell them what the verb is, what was the point of having it be unique? If you don't, they're back to guessing. I know, the point is to avoid guessing, but I feel like there must be a happy medium in there somewhere: a place where guessing is diminished, but thinking is still required. I feel like SCUMM basically gave us that happy medium.</p>\n<p>You don't have to have graphics to do what SCUMM did, in fact I seem to recall some iteration of Quest doing just that, but it's been a while for me. With a verb block, you limit the game to a preset list of verbs that the player can see at all times. They can look over their options while they think about what to do, and it doesn't feel as overwhelming, because you know there's not some random specific word you need to think up on your own. They do still need to make their own choice, and there is a possibility of being wrong. I like this idea, but it can easily become pointless if mishandled.</p>\n<p>Without enough verbs to make it a puzzle, you may as well just let them USE everything, or forgo the whole deal and let them click on stuff without the need to intend anything in particular. I suppose, with too many verbs, the verb box just becomes too cumbersome, so there must be an \"ideal\" number of verbs. I've seen other text adventure makers that have a permanent set of verbs that all games made with that system use. I don't like that either. Every game should be able to have it's own unique set of verbs. That's one of the things that originally led me to Quest.</p>\n<p>So, I'm left with a lot of questions, but two main thoughts: the debate over how many verbs is the sweet spot, and an idea for a new kind of SCUMM-like verb block. I suspect the ideal number for a traditional verb block is around 12-20 verbs. Alternatively, you could have a verb block that navigates through categories rather than displaying all the words at once. Then, you could have more words to choose from, without taking up most of the screen. I imagine it something like this, for example:</p>\n<ol>\n<li>People (talk, hit, give)</li>\n<li>Move (Go, Open, Unlock)</li>\n<li>Manipulate (twist, turn on/off, pull, push)</li>\n<li>Use (swing at [object], point at [object], cut [object] with, throw at [object])</li>\n<li>Items (take, drop, remove from/put in bag, combine, equip)</li>\n</ol>\n<p>And so on, etc.</p>\n\n",
      "PostDate": "2021-04-09T19:12:45.0456189Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "21c68120-d78c-4b48-bcb0-309dbc5979d1",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I had a go at a verb-orientated interface for Quest 6; it can be done fairly easily. There is a tutorial here:\r\nhttps://github.com/ThePix/QuestJS/wiki/Verb-orientated-side-pane\r\n\r\nThe basic principle could probably be applied to Quest 5, but you would need some knowledge of JavaScript, HTML, CSS as well as Quest 5 code.",
      "EditableFormat": "markdown",
      "HTML": "<p>I had a go at a verb-orientated interface for Quest 6; it can be done fairly easily. There is a tutorial here:<br>\nhttps://github.com/ThePix/QuestJS/wiki/Verb-orientated-side-pane</p>\n<p>The basic principle could probably be applied to Quest 5, but you would need some knowledge of JavaScript, HTML, CSS as well as Quest 5 code.</p>\n\n",
      "PostDate": "2021-04-12T10:23:47.304421Z",
      "LastEditDate": "2021-04-12T10:24:29.8911504Z",
      "link": null
    },
    {
      "PostId": "38d6d2ac-0dfe-4dec-aefe-e70e45fff8c3",
      "UserId": 8429,
      "Username": "TriangleGames",
      "AvatarUrl": "https://secure.gravatar.com/avatar/134d9e995777da65c5cf8efda551d579?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wow! This is great, I can't wait to try it out! Thanks for looking into this and laying it all out in detail.",
      "EditableFormat": "markdown",
      "HTML": "<p>Wow! This is great, I can't wait to try it out! Thanks for looking into this and laying it all out in detail.</p>\n\n",
      "PostDate": "2021-04-12T12:25:06.2494224Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e0a6f55c-19fe-47ed-89fe-f8bd7d1bf1fd",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I was thinking about some of this stuff a while back. Never came to a conclusion about what works best, but I did think that it would be nice to make the menus/sidebars in a text adventure work more like many of the SCUMM games. So that instead of clicking a command or object and it just doing it, it would enter it in the command bar.\r\n\r\nLike, you click \"look\" in the command pane, and \"look\" appears in the command bar. Then you click on 'ball' in the places/objects pane, and the command bar says \"look at ball\". You could enter  a command by pressing enter, or double-click on the last item. Once there's a full command, you could still click on other verbs or other objects to change one part of the command, leaving the other part the same. And objects that don't work with the current verb/verbs that don't work with the current object would be greyed out. (But still selectable. \"Talk to bunch of flowers\" probably won't do much, but it's nice to give the player the option of doing silly things. So it's highlighting the logical choices, rather than restricting what you can try.\r\n\r\nJust some thoughts :)",
      "EditableFormat": "markdown",
      "HTML": "<p>I was thinking about some of this stuff a while back. Never came to a conclusion about what works best, but I did think that it would be nice to make the menus/sidebars in a text adventure work more like many of the SCUMM games. So that instead of clicking a command or object and it just doing it, it would enter it in the command bar.</p>\n<p>Like, you click \"look\" in the command pane, and \"look\" appears in the command bar. Then you click on 'ball' in the places/objects pane, and the command bar says \"look at ball\". You could enter  a command by pressing enter, or double-click on the last item. Once there's a full command, you could still click on other verbs or other objects to change one part of the command, leaving the other part the same. And objects that don't work with the current verb/verbs that don't work with the current object would be greyed out. (But still selectable. \"Talk to bunch of flowers\" probably won't do much, but it's nice to give the player the option of doing silly things. So it's highlighting the logical choices, rather than restricting what you can try.</p>\n<p>Just some thoughts :)</p>\n\n",
      "PostDate": "2021-04-12T13:48:00.0251145Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "db2af56f-3f47-48fe-90fa-4efc0807788a",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have updated the tutorial for QuestJS that I liked to above, giving an alternative approach, click on the verb in the side pane, then an item in the main text to construct a command, then click submit.\r\n\r\nThere are also now links to demo games too, so you can quickly compare the two.",
      "EditableFormat": "markdown",
      "HTML": "<p>I have updated the tutorial for QuestJS that I liked to above, giving an alternative approach, click on the verb in the side pane, then an item in the main text to construct a command, then click submit.</p>\n<p>There are also now links to demo games too, so you can quickly compare the two.</p>\n\n",
      "PostDate": "2021-04-19T10:48:58.9355544Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
