{
  "Topic": {
    "TopicId": "ymr9qgslj0eerslt-8pqog",
    "ForumId": "10",
    "Title": "Repeating Menu + Added Choices",
    "LastUpdated": "2017-08-02T17:49:01.1455009Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "01ab2aa9-7126-4229-aa80-ef93170d5294",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/FBcxPJRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey everyone. I was just wondering if it was possible to create a menu that has choices which I can make repeat again and again until cancellation. Also, upon choosing a choice it will add or hide other choices. \r\n\r\nAn example would be...\r\n\r\n_What would you like to do?_\r\nStand Up \r\nSit Down\r\nSprawl Out On the Ground\r\nHandstand\r\nCancel\r\n\r\nPlayer Picks \"Stand Up\" - Menu Appears Again.\r\n_What would you like to do?_\r\nGo for a Walk\r\nGo for a Run\r\nSit Down\r\nSprawl Out On the Ground\r\nHandstand\r\nCancel\r\n\r\nMakes sense? Whatcha guys think?\r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey everyone. I was just wondering if it was possible to create a menu that has choices which I can make repeat again and again until cancellation. Also, upon choosing a choice it will add or hide other choices.</p>\n<p>An example would be...</p>\n<p><em>What would you like to do?</em><br>\nStand Up<br>\nSit Down<br>\nSprawl Out On the Ground<br>\nHandstand<br>\nCancel</p>\n<p>Player Picks \"Stand Up\" - Menu Appears Again.<br>\n<em>What would you like to do?</em><br>\nGo for a Walk<br>\nGo for a Run<br>\nSit Down<br>\nSprawl Out On the Ground<br>\nHandstand<br>\nCancel</p>\n<p>Makes sense? Whatcha guys think?</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2017-08-02T17:49:01.1455009Z",
      "LastEditDate": "2017-08-02T18:29:38.6497933Z",
      "link": null
    },
    {
      "PostId": "d455e532-de5d-4272-8c6b-b0e13d8907c6",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello!\r\n\r\nHow about this?\r\n\r\n```\r\n<command name=\"you_must_choose\">\r\n    <pattern>test menu</pattern>\r\n    <script><![CDATA[\r\n      todo = NewStringList()\r\n      list add (todo, \"jump\")\r\n      list add (todo, \"this\")\r\n      list add (todo, \"that\")\r\n      list add (todo, \"the other\")\r\n      ShowMenu (\"What to do?\", todo, false) {\r\n        if (result = \"jump\") {\r\n          menu2\r\n        }\r\n        else {\r\n          msg (\"You have chosen:<br/>\" + result + \".\")\r\n        }\r\n      }\r\n    ]]></script>\r\n  </command>\r\n  <function name=\"menu2\"><![CDATA[\r\n    todo2 = NewStringList()\r\n    list add (todo2, \"new this\")\r\n    list add (todo2, \"new that\")\r\n    list add (todo2, \"new the other\")\r\n    ShowMenu (\"What to do now?\", todo2, false) {\r\n      msg (\"You have chosen:<br/>\" + result + \".\")\r\n    }\r\n  ]]></function>\r\n```\r\n\r\n**NOTE:** The ```false``` in ```ShowMenu``` is making the player choose something in this example.  If it were set to ```true``` (which is the default, when set up in the GUI (I think)), it would allow the player to ignore the menu.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello!</p>\n<p>How about this?</p>\n<pre><code>&lt;command name=\"you_must_choose\"&gt;\n    &lt;pattern&gt;test menu&lt;/pattern&gt;\n    &lt;script&gt;&lt;![CDATA[\n      todo = NewStringList()\n      list add (todo, \"jump\")\n      list add (todo, \"this\")\n      list add (todo, \"that\")\n      list add (todo, \"the other\")\n      ShowMenu (\"What to do?\", todo, false) {\n        if (result = \"jump\") {\n          menu2\n        }\n        else {\n          msg (\"You have chosen:&lt;br/&gt;\" + result + \".\")\n        }\n      }\n    ]]&gt;&lt;/script&gt;\n  &lt;/command&gt;\n  &lt;function name=\"menu2\"&gt;&lt;![CDATA[\n    todo2 = NewStringList()\n    list add (todo2, \"new this\")\n    list add (todo2, \"new that\")\n    list add (todo2, \"new the other\")\n    ShowMenu (\"What to do now?\", todo2, false) {\n      msg (\"You have chosen:&lt;br/&gt;\" + result + \".\")\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<p><strong>NOTE:</strong> The <code>false</code> in <code>ShowMenu</code> is making the player choose something in this example.  If it were set to <code>true</code> (which is the default, when set up in the GUI (I think)), it would allow the player to ignore the menu.</p>\n\n",
      "PostDate": "2017-08-02T18:42:04.7662002Z",
      "LastEditDate": "2017-08-02T18:52:17.7444301Z",
      "link": null
    },
    {
      "PostId": "f153049a-2048-4658-b7a0-29a9c3ec879c",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/FBcxPJRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hm. I'm not sure. I need a way to make choices appear and disappear in the same menu. \r\n\r\nHow would all that work? \r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Hm. I'm not sure. I need a way to make choices appear and disappear in the same menu.</p>\n<p>How would all that work?</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2017-08-02T20:59:01.7164301Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f5647123-8d56-4ce3-9f8a-f867543c3cee",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "#### **EDIT**\r\n\r\n```\r\nSee next post:\r\n[click here](#e5b2849d-7082-473a-b680-c64b4102ada2 \"THIS GOES TO THE NEXT POST IN THIS THREAD\") or scroll &#8659;&#8659;&#8659;\r\n\r\n```\r\n\r\n### See next post:\r\n#### [click here](#e5b2849d-7082-473a-b680-c64b4102ada2 \"THIS GOES TO THE NEXT POST IN THIS THREAD\") or scroll &#8659;&#8659;&#8659;\r\n",
      "EditableFormat": "markdown",
      "HTML": "<h4><strong>EDIT</strong></h4>\n<pre><code>See next post:\n[click here](#e5b2849d-7082-473a-b680-c64b4102ada2 \"THIS GOES TO THE NEXT POST IN THIS THREAD\") or scroll &amp;#8659;&amp;#8659;&amp;#8659;\n\n</code></pre>\n<h3>See next post:</h3>\n<h4><a href=\"#e5b2849d-7082-473a-b680-c64b4102ada2\" title=\"THIS GOES TO THE NEXT POST IN THIS THREAD\">click here</a> or scroll ⇓⇓⇓</h4>\n\n",
      "PostDate": "2017-08-02T21:01:31.5223266Z",
      "LastEditDate": "2017-08-02T22:32:46.0345849Z",
      "link": null
    },
    {
      "PostId": "e5b2849d-7082-473a-b680-c64b4102ada2",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here we go...\r\n\r\nJust change around what happens ```IF...```...\r\n\r\nChange the list items/order...\r\n\r\nYou can make it MUCH more complicated to get through.\r\n\r\n<details><summary>CLICK HERE TO VIEW THE CODE (which is not unlike the code Anonynn requested) </summary>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Menu Changing EXAMPLE\">\r\n    <gameid>af5eb6de-2cdb-473d-95bc-3c2972838341</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n    <attr name=\"autodescription_youarein\" type=\"int\">0</attr>\r\n    <attr name=\"autodescription_youcansee\" type=\"int\">0</attr>\r\n    <attr name=\"autodescription_youcango\" type=\"int\">0</attr>\r\n    <attr name=\"autodescription_description\" type=\"int\">0</attr>\r\n    <attr name=\"autodescription_youarein_useprefix\" type=\"boolean\">false</attr>\r\n    <showpanes type=\"boolean\">false</showpanes>\r\n    <showcommandbar />\r\n    <showlocation type=\"boolean\">false</showlocation>\r\n    <start type=\"script\">\r\n      player.todo = Split(\"jump|clap|whistle\", \"|\")\r\n      ShowMenu (\"What to do?\", player.todo, false) {\r\n        if (result = \"jump\") {\r\n          player.todo = Split(\"sing|clap|whistle\", \"|\")\r\n          menu2\r\n        }\r\n        if (result = \"clap\") {\r\n          player.todo = Split(\"jump|sing|whistle\", \"|\")\r\n          menu2\r\n        }\r\n        if (result = \"whistle\") {\r\n          player.todo = Split(\"sing|jump|clap\", \"|\")\r\n          menu2\r\n        }\r\n      }\r\n    </start>\r\n    <description>example game</description>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n  </object>\r\n  <command name=\"menume\">\r\n    <pattern>menume</pattern>\r\n    <script>\r\n      player.todo = Split(\"jump|clap|whistle\", \"|\")\r\n      ShowMenu (\"What to do?\", player.todo, false) {\r\n        if (result = \"jump\") {\r\n          player.todo = Split(\"sing|clap|whistle\", \"|\")\r\n          menu2\r\n        }\r\n        if (result = \"clap\") {\r\n          player.todo = Split(\"jump|sing|whistle\", \"|\")\r\n          menu2\r\n        }\r\n        if (result = \"whistle\") {\r\n          player.todo = Split(\"sing|jump|clap\", \"|\")\r\n          menu2\r\n        }\r\n      }\r\n    </script>\r\n  </command>\r\n  <function name=\"menu2\">\r\n    ShowMenu (\"What to do?\", player.todo, false) {\r\n      if (result = \"jump\") {\r\n        player.todo = Split(\"sing|clap|whistle\", \"|\")\r\n        menu2\r\n      }\r\n      if (result = \"sing\") {\r\n        player.todo = Split(\"jump|dance|whistle\", \"|\")\r\n        menu2\r\n      }\r\n      if (result = \"clap\") {\r\n        player.todo = Split(\"sing|whistle|jump\", \"|\")\r\n        menu2\r\n      }\r\n      if (result = \"whistle\") {\r\n        player.todo = Split(\"jump|clap|sing\", \"|\")\r\n        menu2\r\n      }\r\n      if (result = \"dance\") {\r\n        player.todo = Split(\"jump|bow|whistle\", \"|\")\r\n        menu2\r\n      }\r\n      if (result = \"bow\") {\r\n        msg (\"You bow.\")\r\n        msg (\"(Good job!)\")\r\n        msg (\"{command:menume:Click here to do it again} (or enter MENUME).\")\r\n        msg (\"\")\r\n        msg (\"{command:quit:QUIT}\")\r\n      }\r\n    }\r\n  </function>\r\n</asl>\r\n```\r\n\r\nTest it out:\r\nhttp://textadventures.co.uk/games/view/hehrr_xpnuyiq2hdkztmfq/menu-changing-example",
      "EditableFormat": "markdown",
      "HTML": "<p>Here we go...</p>\n<p>Just change around what happens <code>IF...</code>...</p>\n<p>Change the list items/order...</p>\n<p>You can make it MUCH more complicated to get through.</p>\n<details><summary>CLICK HERE TO VIEW THE CODE (which is not unlike the code Anonynn requested) </summary>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Menu Changing EXAMPLE\"&gt;\n    &lt;gameid&gt;af5eb6de-2cdb-473d-95bc-3c2972838341&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n    &lt;attr name=\"autodescription_youarein\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youcansee\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youcango\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;attr name=\"autodescription_description\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youarein_useprefix\" type=\"boolean\"&gt;false&lt;/attr&gt;\n    &lt;showpanes type=\"boolean\"&gt;false&lt;/showpanes&gt;\n    &lt;showcommandbar /&gt;\n    &lt;showlocation type=\"boolean\"&gt;false&lt;/showlocation&gt;\n    &lt;start type=\"script\"&gt;\n      player.todo = Split(\"jump|clap|whistle\", \"|\")\n      ShowMenu (\"What to do?\", player.todo, false) {\n        if (result = \"jump\") {\n          player.todo = Split(\"sing|clap|whistle\", \"|\")\n          menu2\n        }\n        if (result = \"clap\") {\n          player.todo = Split(\"jump|sing|whistle\", \"|\")\n          menu2\n        }\n        if (result = \"whistle\") {\n          player.todo = Split(\"sing|jump|clap\", \"|\")\n          menu2\n        }\n      }\n    &lt;/start&gt;\n    &lt;description&gt;example game&lt;/description&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;command name=\"menume\"&gt;\n    &lt;pattern&gt;menume&lt;/pattern&gt;\n    &lt;script&gt;\n      player.todo = Split(\"jump|clap|whistle\", \"|\")\n      ShowMenu (\"What to do?\", player.todo, false) {\n        if (result = \"jump\") {\n          player.todo = Split(\"sing|clap|whistle\", \"|\")\n          menu2\n        }\n        if (result = \"clap\") {\n          player.todo = Split(\"jump|sing|whistle\", \"|\")\n          menu2\n        }\n        if (result = \"whistle\") {\n          player.todo = Split(\"sing|jump|clap\", \"|\")\n          menu2\n        }\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;function name=\"menu2\"&gt;\n    ShowMenu (\"What to do?\", player.todo, false) {\n      if (result = \"jump\") {\n        player.todo = Split(\"sing|clap|whistle\", \"|\")\n        menu2\n      }\n      if (result = \"sing\") {\n        player.todo = Split(\"jump|dance|whistle\", \"|\")\n        menu2\n      }\n      if (result = \"clap\") {\n        player.todo = Split(\"sing|whistle|jump\", \"|\")\n        menu2\n      }\n      if (result = \"whistle\") {\n        player.todo = Split(\"jump|clap|sing\", \"|\")\n        menu2\n      }\n      if (result = \"dance\") {\n        player.todo = Split(\"jump|bow|whistle\", \"|\")\n        menu2\n      }\n      if (result = \"bow\") {\n        msg (\"You bow.\")\n        msg (\"(Good job!)\")\n        msg (\"{command:menume:Click here to do it again} (or enter MENUME).\")\n        msg (\"\")\n        msg (\"{command:quit:QUIT}\")\n      }\n    }\n  &lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n<p>Test it out:<br>\nhttp://textadventures.co.uk/games/view/hehrr_xpnuyiq2hdkztmfq/menu-changing-example</p>\n\n</details>",
      "PostDate": "2017-08-02T21:37:08.6286533Z",
      "LastEditDate": "2017-08-02T22:53:07.4317734Z",
      "link": null
    },
    {
      "PostId": "c8f3d4d9-09b4-409a-98d1-94f75bd5237c",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/FBcxPJRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So I could do something like...\r\n\r\nlist remove (todo2, \"old choice\")\r\nlist add (todo, \"new choice\")\r\n\r\nHow might something like that look in code?\r\n\r\n      todo = NewStringList()\r\n      list add (todo, \"jump\")\r\n      list add (todo, \"this\")\r\n      list add (todo, \"that\")\r\n      list add (todo, \"the other\")\r\n      ShowMenu (\"What to do?\", todo, false) {\r\n        if (result = \"jump\") {\r\n        list remove (todo2, \"jump\")\r\n        list add (todo, \"new choice\")\r\n        }\r\n\r\nIs that different from embedding menu's within menus? (which I'm trying to avoid)",
      "EditableFormat": "markdown",
      "HTML": "<p>So I could do something like...</p>\n<p>list remove (todo2, \"old choice\")<br>\nlist add (todo, \"new choice\")</p>\n<p>How might something like that look in code?</p>\n<pre><code>  todo = NewStringList()\n  list add (todo, \"jump\")\n  list add (todo, \"this\")\n  list add (todo, \"that\")\n  list add (todo, \"the other\")\n  ShowMenu (\"What to do?\", todo, false) {\n    if (result = \"jump\") {\n    list remove (todo2, \"jump\")\n    list add (todo, \"new choice\")\n    }\n</code></pre>\n<p>Is that different from embedding menu's within menus? (which I'm trying to avoid)</p>\n\n",
      "PostDate": "2017-08-02T22:41:39.3373966Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "38db68b0-b2d4-45d1-ba41-08dd45dfe60c",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here it is with your example selections (or a loose draft of it, at any rate):\r\n\r\n---\r\n<details><summary style=\"margin-right:65%;background:blue;color:white;padding:6px;border:1px solid black;box-shadow:-1px -1px 2px black\">CLICK HERE TO VIEW EXAMPLE</summary>\r\n\r\n#### START SCRIPT\r\n\r\n```\r\n      game.todo = Split(\"stand up|sit down|sprawl out|cancel\", \"|\")\r\n      ShowMenu (\"What to do?\", game.todo, false) {\r\n        if (result = \"stand up\") {\r\n          menu2\r\n        }\r\n        if (result = \"sit down\") {\r\n          msg (\"You sit down.\")\r\n        }\r\n        if (result = \"sprawl out\") {\r\n          msg (\"You sprawl out.\")\r\n        }\r\n        if (result = \"cancel\") {\r\n        msg (\"Canceled.\")\r\n        msg (\"{command:menume:DO IT AGAIN}\")\r\n      }\r\n      }\r\n```\r\n\r\n\r\n#### COMMAND\r\n**NAME: **```menume```\r\n\r\n```\r\n      game.todo = Split(\"stand up|sit down|sprawl out|cancel\", \"|\")\r\n      ShowMenu (\"What to do?\", game.todo, false) {\r\n        if (result = \"stand up\") {\r\n          menu2\r\n        }\r\n        if (result = \"sit down\") {\r\n          msg (\"You sit down.\")\r\n          msg (\"{command:menume:DO IT AGAIN}\")\r\n        }\r\n        if (result = \"sprawl out\") {\r\n          msg (\"You sprawl out.\")\r\n          msg (\"{command:menume:DO IT AGAIN}\")\r\n        }\r\n        if (result = \"cancel\") {\r\n        msg (\"Canceled.\")\r\n        msg (\"{command:menume:DO IT AGAIN}\")\r\n      }\r\n      }\r\n```\r\n\r\n---\r\n#### FUNCTION:\r\n**NAME: **```menu2```\r\n```\r\n    game.todo2 = Split(\"go for a walk|go for a run|sit down|sprawl out|cancel\", \"|\")\r\n    ShowMenu (\"What to do now?\", game.todo2, false) {\r\n      if (result = \"go for a walk\") {\r\n        msg (\"You walk.\")\r\n        msg (\"{command:menume:DO IT AGAIN}\")\r\n      }\r\n      if (result = \"go for a run\") {\r\n        msg (\"You run around.\")\r\n        msg (\"{command:menume:DO IT AGAIN}\")\r\n      }\r\n      if (result = \"sit down\") {\r\n          msg (\"You sit down.\")\r\n          //here's where you can change the list and call the function again, if you wish; \r\n//you could also call a new function with a list for SIT DOWN, etc...\r\n          msg (\"{command:menume:DO IT AGAIN}\")  //remove this line once you add/change the list for SIT DOWN\r\n      }\r\n      if (result = \"sprawl out\") {\r\n          msg (\"You sprawl out.\")\r\n          msg (\"{command:menume:DO IT AGAIN}\")\r\n      }\r\n      if (result = \"cancel\") {\r\n        msg (\"Canceled.\")\r\n        msg (\"{command:menume:DO IT AGAIN}\")\r\n      }\r\n    }\r\n\r\n```\r\n\r\n\r\n<span></span>\r\n\r\n\r\n</details>\r\n\r\n---\r\n<span style=\"color:white\">this is filler to edit the post!</span>",
      "EditableFormat": "markdown",
      "HTML": "<p>Here it is with your example selections (or a loose draft of it, at any rate):</p>\n<hr>\n<details><summary style=\"margin-right: 65%; background: blue; color: white; padding: 6px; border: 1px solid black\">CLICK HERE TO VIEW EXAMPLE</summary>\n<h4>START SCRIPT</h4>\n<pre><code>      game.todo = Split(\"stand up|sit down|sprawl out|cancel\", \"|\")\n      ShowMenu (\"What to do?\", game.todo, false) {\n        if (result = \"stand up\") {\n          menu2\n        }\n        if (result = \"sit down\") {\n          msg (\"You sit down.\")\n        }\n        if (result = \"sprawl out\") {\n          msg (\"You sprawl out.\")\n        }\n        if (result = \"cancel\") {\n        msg (\"Canceled.\")\n        msg (\"{command:menume:DO IT AGAIN}\")\n      }\n      }\n</code></pre>\n<h4>COMMAND</h4>\n<p>**NAME: **<code>menume</code></p>\n<pre><code>      game.todo = Split(\"stand up|sit down|sprawl out|cancel\", \"|\")\n      ShowMenu (\"What to do?\", game.todo, false) {\n        if (result = \"stand up\") {\n          menu2\n        }\n        if (result = \"sit down\") {\n          msg (\"You sit down.\")\n          msg (\"{command:menume:DO IT AGAIN}\")\n        }\n        if (result = \"sprawl out\") {\n          msg (\"You sprawl out.\")\n          msg (\"{command:menume:DO IT AGAIN}\")\n        }\n        if (result = \"cancel\") {\n        msg (\"Canceled.\")\n        msg (\"{command:menume:DO IT AGAIN}\")\n      }\n      }\n</code></pre>\n<hr>\n<h4>FUNCTION:</h4>\n<p>**NAME: **<code>menu2</code></p>\n<pre><code>    game.todo2 = Split(\"go for a walk|go for a run|sit down|sprawl out|cancel\", \"|\")\n    ShowMenu (\"What to do now?\", game.todo2, false) {\n      if (result = \"go for a walk\") {\n        msg (\"You walk.\")\n        msg (\"{command:menume:DO IT AGAIN}\")\n      }\n      if (result = \"go for a run\") {\n        msg (\"You run around.\")\n        msg (\"{command:menume:DO IT AGAIN}\")\n      }\n      if (result = \"sit down\") {\n          msg (\"You sit down.\")\n          //here's where you can change the list and call the function again, if you wish; \n//you could also call a new function with a list for SIT DOWN, etc...\n          msg (\"{command:menume:DO IT AGAIN}\")  //remove this line once you add/change the list for SIT DOWN\n      }\n      if (result = \"sprawl out\") {\n          msg (\"You sprawl out.\")\n          msg (\"{command:menume:DO IT AGAIN}\")\n      }\n      if (result = \"cancel\") {\n        msg (\"Canceled.\")\n        msg (\"{command:menume:DO IT AGAIN}\")\n      }\n    }\n\n</code></pre>\n<p><span></span></p>\n</details>\n<hr>\n<p><span style=\"color: white\">this is filler to edit the post!</span></p>\n\n",
      "PostDate": "2017-08-02T22:48:19.4508723Z",
      "LastEditDate": "2017-08-03T02:09:22.0795799Z",
      "link": null
    },
    {
      "PostId": "0bce9b02-68ad-4539-84fb-a1630c50b566",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The trick is to set the initial list as an attribute of the game object, and then call a function. In the function call ShowMenu and then inside the case bits of your switch add or remove items from the list and then call the function again. ",
      "EditableFormat": "markdown",
      "HTML": "<p>The trick is to set the initial list as an attribute of the game object, and then call a function. In the function call ShowMenu and then inside the case bits of your switch add or remove items from the list and then call the function again.</p>\n\n",
      "PostDate": "2017-08-02T22:51:34.0147996Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "03781ecf-7b04-416d-98b0-1cf0e9319b3a",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/FBcxPJRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Would the initial list be a string list?",
      "EditableFormat": "markdown",
      "HTML": "<p>Would the initial list be a string list?</p>\n\n",
      "PostDate": "2017-08-02T22:59:04.4246629Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a7baadca-0f55-4278-84c5-d9e98d25f5f3",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">So I could do something like...\r\n>\r\n>list remove (todo2, \"old choice\")\r\nlist add (todo, \"new choice\")\r\n\r\nYou sure can!\r\n\r\nThe ```Split``` thing is just a shortcut to keep from writing out ```list add``` for each choice.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>So I could do something like...</p>\n<p>list remove (todo2, \"old choice\")<br>\nlist add (todo, \"new choice\")</p>\n</blockquote>\n<p>You sure can!</p>\n<p>The <code>Split</code> thing is just a shortcut to keep from writing out <code>list add</code> for each choice.</p>\n\n",
      "PostDate": "2017-08-02T23:08:35.5526846Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "645ac9a2-acc9-4e4c-b746-f397e7a4a3a2",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Would the initial list be a string list?\r\n\r\nA string list is what I'm using, but that's just because I find them the easiest to work with.\r\n\r\n---\r\n\r\nI ***think*** you could get even trickier with String Dictionaries, but I have no experience there.\r\n\r\nhttp://docs.textadventures.co.uk/quest/using_dictionaries.html\r\n\r\n---\r\nHere's a link to tips for using String Lists.\r\n\r\nhttp://docs.textadventures.co.uk/quest/using_lists.html\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Would the initial list be a string list?</p>\n</blockquote>\n<p>A string list is what I'm using, but that's just because I find them the easiest to work with.</p>\n<hr>\n<p>I <strong><em>think</em></strong> you could get even trickier with String Dictionaries, but I have no experience there.</p>\n<p>http://docs.textadventures.co.uk/quest/using_dictionaries.html</p>\n<hr>\n<p>Here's a link to tips for using String Lists.</p>\n<p>http://docs.textadventures.co.uk/quest/using_lists.html</p>\n\n",
      "PostDate": "2017-08-02T23:34:26.2095778Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "38ac96ec-d8a8-425d-99d3-573681418b69",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post updated/posted)\r\n\r\n--------------------------\r\n\r\nyou can take a look at my old, poor/bad, and with a few mistakes/inefficiencies 'explore and travel' code, as it handles removing items, so they're not done again, which is much more simple than the super/ultimate/monstrousity dynamic menu code design that I'm working on (seen a bit further below), lol:\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5138/explore-and-travel-code-sample-by-hk\r\n\r\nlook at the 'explore_function' first, which uses the 'events_stringlist' and 'events_scriptdictionary', which adds the place to the 'travel_list' (and removes the event item from the 'events_list', as I only got one-time events of discovering/adding new places to travel to, and it's only done for 'exploring the homeland', as it's just an example), which is used by the 'travel_function' for where you can travel to.\r\n\r\n---------------------------------------\r\n\r\nand here's my own guide on using lists and dictionaries:\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5137/list-and-dictionary-extensive-guide-by-hk\r\n\r\n-----------------------------------------------\r\n\r\nI need a break !!! (and time to think on how to continue/handle with what's left to do with it)... but if anyone wants to look at this 'work in progress' ultimate dynamic menu coding of mine for: ideas, studying it, and/or edit/finish it up and using it, feel free to do so !!!\r\n\r\n----------------------------------\r\n\r\n```\r\n<delegate name=\"dynamic_menu_delegate\" parameters=\"name_of_object_dot_name_of_dictionary_attribute_parameter, menu_prompt_string_parameter, name_of_object_parameter, name_of_attribute_parameter, value_parameter\">\r\n\r\n<object name=\"npc_1_object\">\r\n  \r\n</object>\r\n\r\n<type name=\"dynamic_menu_type\">\r\n\r\n  <attr name=\"dynamic_menu_script_attribute\" type=\"dynamic_menu_delegate\">\r\n\r\n    ClearScreen // as I don't like having/keeping scrolling long walls of text in my big text box during game play\r\n\r\n    // creating a local List Variable (for beig able to remove the items from it after doing that action/item/topic, so not to be able do that action/item/topic again upon looping):\r\n\r\n    stringlist_variable = NewStringList ()\r\n\r\n    // adding the items (dictionary's string keys) to the local List Variable:\r\n    // (just to be safe, doing 'deep copying' manually):\r\n\r\n    foreach (dictionary_key_string_variable, name_of_object_dot_name_of_dictionary_attribute_parameter) {\r\n      list add (stringlist_variable, dictionary_key_string_variable)\r\n    }\r\n\r\n    // manually generating the displayment of the menu (instead of using the built-in 'DisplayList' Function, as it enables you to customize your menu displayment, such as my liking of using a random selection menu option/choice, hehe):\r\n\r\n    numbering_integer_variable = 0\r\n\r\n    msg (menu_prompt_string_parameter)\r\n    msg (\"(Type in the number of your choice)\")\r\n\r\n    msg (numbering_integer_variable + \". random selection\") // I like having a random selection menu option/choice\r\n\r\n    foreach (menu_item_string_variable, stringlist_variable) {\r\n      numbering_integer_variable = numbering_integer_variable + 1\r\n      msg (numbering_integer_variable + \". \" + menu_item_string_variable)\r\n    }\r\n\r\n    // handling selection (part 1), via a single number typed-in input (as I like it):\r\n\r\n    get input {\r\n\r\n      ClearScreen\r\n\r\n      if (isInt (result)) {\r\n\r\n        stringlist_item_string_variable = \"\"\r\n\r\n        input_integer_variable = ToInt (result)\r\n        list_count_integer_variable = ListCount (stringlist_variable)\r\n        last_index_number_integer_variable = list_count_integer_variable - 1\r\n\r\n        if (input_integer_variable = 0) {\r\n          random_in_bounds_index_number_integer_variable = GetRandomInt (0, last_index_number_integer_variable)\r\n          stringlist_item_string_variable = StringListItem (stringlist_variable, random_in_bounds_index_number_integer_variable)\r\n        } else if (input_integer_variable > 0 and input_integer_variable < list_count_integer_variable) {\r\n          stringlist_item_string_variable = StringListItem (stringlist_variable, random_in_bounds_index_number_integer_variable)\r\n        } else { if input out-of-bounds\r\n          do (this, dynamic_menu_script_attribute, name_of_object_dot_name_of_dictionary_attribute_parameter, menu_prompt_string_parameter, name_of_object_parameter, name_of_attribute_parameter, value_parameter)\r\n        }\r\n\r\n      } else { // if input not an integer\r\n         do (this, dynamic_menu_script_attribute, name_of_object_dot_name_of_dictionary_attribute_parameter, menu_prompt_string_parameter, name_of_object_parameter, name_of_attribute_parameter, value_parameter)\r\n      }\r\n    } // end of 'get input'\r\n\r\n    // handling selection (part 2):\r\n\r\n    // -------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n    // have to split the Object from the Dictionary Attribute, as required by the needed use of using the 'TypeOf' Function:\r\n\r\n    name_of_object_dot_name_of_dictionary_attribute_parameter_stringlist_variable = split (name_of_object_dot_name_of_dictionary_attribute_parameter, \".\")\r\n\r\n    name_of_object_that_is_parent_of_dictionary_attribute_string_variable = StringListItem (name_of_object_dot_name_of_dictionary_attribute_parameter, 0)\r\n\r\n    name_of_object_that_is_parent_of_dictionary_attribute_object_variable = GetObject (name_of_object_that_is_parent_of_dictionary_attribute_string_variable)\r\n\r\n    name_of_dictionary_attribute_string_variable = StringListItem (name_of_object_dot_name_of_dictionary_attribute_parameter, 1)\r\n    // -------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n    if (TypeOf (name_of_object_that_is_parent_of_dictionary_attribute_object_variable, name_of_dictionary_attribute_string_variable) = \"scriptdictionary\") {\r\n      dictionary_item_variable => { ScriptDictionaryItem (name_of_object_dot_name_of_dictionary_attribute_parameter, stringlist_item_string_variable) }\r\n    } else if (TypeOf (name_of_object_that_is_parent_of_dictionary_attribute_string_variable, name_of_dictionary_attribute_string_variable) = \"stringdictionary\") {\r\n      dictionary_item_variable = StringDictionaryItem (name_of_object_dot_name_of_dictionary_attribute_parameter, stringlist_item_string_variable)\r\n    } else {\r\n      dictionary_item_variable = ObjectDictionaryItem (name_of_object_dot_name_of_dictionary_attribute_parameter, stringlist_item_string_variable)\r\n    }\r\n\r\n    // handling actions upon your selection:\r\n\r\n    // (lots of handling I need to figure out: directly doing the dictionary item or passing it into the looping of this dynamic_menu_script_attribute, such as for doing nested dialogue topics)\r\n\r\n    // removing the selected item from your list, so it's not done again, upon looping:\r\n\r\n    list remove (stringlist_variable, stringlist_item_string_variable)\r\n\r\n  </attr>\r\n\r\n</type>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post updated/posted)</p>\n<hr>\n<p>you can take a look at my old, poor/bad, and with a few mistakes/inefficiencies 'explore and travel' code, as it handles removing items, so they're not done again, which is much more simple than the super/ultimate/monstrousity dynamic menu code design that I'm working on (seen a bit further below), lol:</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5138/explore-and-travel-code-sample-by-hk</p>\n<p>look at the 'explore_function' first, which uses the 'events_stringlist' and 'events_scriptdictionary', which adds the place to the 'travel_list' (and removes the event item from the 'events_list', as I only got one-time events of discovering/adding new places to travel to, and it's only done for 'exploring the homeland', as it's just an example), which is used by the 'travel_function' for where you can travel to.</p>\n<hr>\n<p>and here's my own guide on using lists and dictionaries:</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5137/list-and-dictionary-extensive-guide-by-hk</p>\n<hr>\n<p>I need a break !!! (and time to think on how to continue/handle with what's left to do with it)... but if anyone wants to look at this 'work in progress' ultimate dynamic menu coding of mine for: ideas, studying it, and/or edit/finish it up and using it, feel free to do so !!!</p>\n<hr>\n<pre><code>&lt;delegate name=\"dynamic_menu_delegate\" parameters=\"name_of_object_dot_name_of_dictionary_attribute_parameter, menu_prompt_string_parameter, name_of_object_parameter, name_of_attribute_parameter, value_parameter\"&gt;\n\n&lt;object name=\"npc_1_object\"&gt;\n  \n&lt;/object&gt;\n\n&lt;type name=\"dynamic_menu_type\"&gt;\n\n  &lt;attr name=\"dynamic_menu_script_attribute\" type=\"dynamic_menu_delegate\"&gt;\n\n    ClearScreen // as I don't like having/keeping scrolling long walls of text in my big text box during game play\n\n    // creating a local List Variable (for beig able to remove the items from it after doing that action/item/topic, so not to be able do that action/item/topic again upon looping):\n\n    stringlist_variable = NewStringList ()\n\n    // adding the items (dictionary's string keys) to the local List Variable:\n    // (just to be safe, doing 'deep copying' manually):\n\n    foreach (dictionary_key_string_variable, name_of_object_dot_name_of_dictionary_attribute_parameter) {\n      list add (stringlist_variable, dictionary_key_string_variable)\n    }\n\n    // manually generating the displayment of the menu (instead of using the built-in 'DisplayList' Function, as it enables you to customize your menu displayment, such as my liking of using a random selection menu option/choice, hehe):\n\n    numbering_integer_variable = 0\n\n    msg (menu_prompt_string_parameter)\n    msg (\"(Type in the number of your choice)\")\n\n    msg (numbering_integer_variable + \". random selection\") // I like having a random selection menu option/choice\n\n    foreach (menu_item_string_variable, stringlist_variable) {\n      numbering_integer_variable = numbering_integer_variable + 1\n      msg (numbering_integer_variable + \". \" + menu_item_string_variable)\n    }\n\n    // handling selection (part 1), via a single number typed-in input (as I like it):\n\n    get input {\n\n      ClearScreen\n\n      if (isInt (result)) {\n\n        stringlist_item_string_variable = \"\"\n\n        input_integer_variable = ToInt (result)\n        list_count_integer_variable = ListCount (stringlist_variable)\n        last_index_number_integer_variable = list_count_integer_variable - 1\n\n        if (input_integer_variable = 0) {\n          random_in_bounds_index_number_integer_variable = GetRandomInt (0, last_index_number_integer_variable)\n          stringlist_item_string_variable = StringListItem (stringlist_variable, random_in_bounds_index_number_integer_variable)\n        } else if (input_integer_variable &gt; 0 and input_integer_variable &lt; list_count_integer_variable) {\n          stringlist_item_string_variable = StringListItem (stringlist_variable, random_in_bounds_index_number_integer_variable)\n        } else { if input out-of-bounds\n          do (this, dynamic_menu_script_attribute, name_of_object_dot_name_of_dictionary_attribute_parameter, menu_prompt_string_parameter, name_of_object_parameter, name_of_attribute_parameter, value_parameter)\n        }\n\n      } else { // if input not an integer\n         do (this, dynamic_menu_script_attribute, name_of_object_dot_name_of_dictionary_attribute_parameter, menu_prompt_string_parameter, name_of_object_parameter, name_of_attribute_parameter, value_parameter)\n      }\n    } // end of 'get input'\n\n    // handling selection (part 2):\n\n    // -------------------------------------------------------------------------------------------------------------------------------------------------------------\n    // have to split the Object from the Dictionary Attribute, as required by the needed use of using the 'TypeOf' Function:\n\n    name_of_object_dot_name_of_dictionary_attribute_parameter_stringlist_variable = split (name_of_object_dot_name_of_dictionary_attribute_parameter, \".\")\n\n    name_of_object_that_is_parent_of_dictionary_attribute_string_variable = StringListItem (name_of_object_dot_name_of_dictionary_attribute_parameter, 0)\n\n    name_of_object_that_is_parent_of_dictionary_attribute_object_variable = GetObject (name_of_object_that_is_parent_of_dictionary_attribute_string_variable)\n\n    name_of_dictionary_attribute_string_variable = StringListItem (name_of_object_dot_name_of_dictionary_attribute_parameter, 1)\n    // -------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n    if (TypeOf (name_of_object_that_is_parent_of_dictionary_attribute_object_variable, name_of_dictionary_attribute_string_variable) = \"scriptdictionary\") {\n      dictionary_item_variable =&gt; { ScriptDictionaryItem (name_of_object_dot_name_of_dictionary_attribute_parameter, stringlist_item_string_variable) }\n    } else if (TypeOf (name_of_object_that_is_parent_of_dictionary_attribute_string_variable, name_of_dictionary_attribute_string_variable) = \"stringdictionary\") {\n      dictionary_item_variable = StringDictionaryItem (name_of_object_dot_name_of_dictionary_attribute_parameter, stringlist_item_string_variable)\n    } else {\n      dictionary_item_variable = ObjectDictionaryItem (name_of_object_dot_name_of_dictionary_attribute_parameter, stringlist_item_string_variable)\n    }\n\n    // handling actions upon your selection:\n\n    // (lots of handling I need to figure out: directly doing the dictionary item or passing it into the looping of this dynamic_menu_script_attribute, such as for doing nested dialogue topics)\n\n    // removing the selected item from your list, so it's not done again, upon looping:\n\n    list remove (stringlist_variable, stringlist_item_string_variable)\n\n  &lt;/attr&gt;\n\n&lt;/type&gt;\n</code></pre>\n\n",
      "PostDate": "2017-08-03T00:08:25.1290345Z",
      "LastEditDate": "2017-08-03T00:52:24.7954628Z",
      "link": null
    },
    {
      "PostId": "ccfe1e7d-19f2-46b6-9dbc-09feb5edeb61",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How about this?\r\n\r\nFUNCTION:\r\n```todomenu```\r\n```\r\n ShowMenu (\"What to do now?\", game.todo, false) {\r\n      if (result = \"walk\") {\r\n        msg (\"You walk.\")\r\n        game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\r\n        todomenu()\r\n      }\r\n      if (result = \"stand\") {\r\n        msg (\"You stand.\")\r\n        game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\r\n          todomenu()\r\n        }\r\n      if (result = \"run\") {\r\n        msg (\"You run around.\")\r\n        game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\r\n        todomenu()\r\n      }\r\n      if (result = \"sit\") {\r\n          msg (\"You sit down.\")\r\n          game.todo = Split(\"stand|sprawl out|cancel\", \"|\")\r\n          todomenu()\r\n      }\r\n      if (result = \"sprawl out\") {\r\n          msg (\"You sprawl out.\")\r\n          game.todo = Split(\"sit|stand|cancel\", \"|\")\r\n          todomenu()\r\n      }if (result = \"handstand\") {\r\n          msg (\"You stand on your hands for a bit, then right yourself.\")\r\n          game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\r\n          todomenu()\r\n      }\r\n      if (result = \"cancel\") {\r\n        msg (\"Canceled.\")\r\n        msg (\"{command:menume:DO IT AGAIN}\")\r\n      }\r\n    }\r\n```\r\n\r\nSTART SCRIPT\r\n```\r\ngame.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\r\n      todomenu()\r\n```\r\n\r\nCOMMAND (just to use for testing purposes)\r\nPattern: ```menume```\r\n```\r\ntodomenu()\r\n```\r\n\r\n\r\n<details><summary style=\"background:blue;color:white;padding:6px;margin-right:40%;border:1px solid black;box-shadow:-1px -1px 2px black;\">CLICK HERE TO VIEW ENTIRE EXAMPLE GAME CODE</summary>\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Changing the Menu FromWithin ShowMenu While Looping on the Fly\">\r\n    <gameid>fae7e6b0-e4f5-4217-9a59-05b929bcfd59</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n    <attr name=\"autodescription_youarein\" type=\"int\">0</attr>\r\n    <attr name=\"autodescription_youcansee\" type=\"int\">0</attr>\r\n    <attr name=\"autodescription_youcango\" type=\"int\">0</attr>\r\n    <attr name=\"autodescription_description\" type=\"int\">0</attr>\r\n    <attr name=\"autodescription_youarein_useprefix\" type=\"boolean\">false</attr>\r\n    <showpanes type=\"boolean\">false</showpanes>\r\n    <showcommandbar />\r\n    <showlocation type=\"boolean\">false</showlocation>\r\n    <description><![CDATA[example game<br/><br/>Changing the Menu FromWithin ShowMenu While Looping on the Fly]]></description>\r\n    <start type=\"script\">\r\n      game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\r\n      todomenu\r\n    </start>\r\n    <author>Quest Forum</author>\r\n    <subtitle>An Interactive Example</subtitle>\r\n    <category>Educational</category>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n  </object>\r\n  <command name=\"menume\">\r\n    <pattern>menume</pattern>\r\n    <script>\r\n      todomenu\r\n    </script>\r\n  </command>\r\n  <function name=\"todomenu\">\r\n    ShowMenu (\"What to do now?\", game.todo, false) {\r\n      if (result = \"walk\") {\r\n        msg (\"You walk.\")\r\n        game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\r\n        todomenu\r\n      }\r\n      if (result = \"stand\") {\r\n        msg (\"You stand.\")\r\n        game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\r\n        todomenu\r\n      }\r\n      if (result = \"run\") {\r\n        msg (\"You run around.\")\r\n        game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\r\n        todomenu\r\n      }\r\n      if (result = \"sit\") {\r\n        msg (\"You sit down.\")\r\n        game.todo = Split(\"stand|sprawl out|cancel\", \"|\")\r\n        todomenu\r\n      }\r\n      if (result = \"sprawl out\") {\r\n        msg (\"You sprawl out.\")\r\n        game.todo = Split(\"sit|stand|cancel\", \"|\")\r\n        todomenu\r\n      }\r\n      if (result = \"handstand\") {\r\n        msg (\"You stand on your hands for a bit, then right yourself.\")\r\n        game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\r\n        todomenu\r\n      }\r\n      if (result = \"cancel\") {\r\n        msg (\"Canceled.\")\r\n        msg (\"{command:menume:DO IT AGAIN}\")\r\n      }\r\n    }\r\n  </function>\r\n</asl>\r\n```\r\n\r\n</details>\r\n\r\n\r\n---\r\nPlay this example game online:\r\n\r\n[http://textadventures.co.uk/games/view/hehrr_xpnuyiq2hdkztmfq/showmenu-changing-and-looping-the-altered-unaltered-menu-from-within-one-script](http://textadventures.co.uk/games/view/hehrr_xpnuyiq2hdkztmfq/showmenu-changing-and-looping-the-altered-unaltered-menu-from-within-one-script \"Play the example game at textadventures.co.uk\")",
      "EditableFormat": "markdown",
      "HTML": "<p>How about this?</p>\n<p>FUNCTION:<br>\n<code>todomenu</code></p>\n<pre><code> ShowMenu (\"What to do now?\", game.todo, false) {\n      if (result = \"walk\") {\n        msg (\"You walk.\")\n        game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\n        todomenu()\n      }\n      if (result = \"stand\") {\n        msg (\"You stand.\")\n        game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\n          todomenu()\n        }\n      if (result = \"run\") {\n        msg (\"You run around.\")\n        game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\n        todomenu()\n      }\n      if (result = \"sit\") {\n          msg (\"You sit down.\")\n          game.todo = Split(\"stand|sprawl out|cancel\", \"|\")\n          todomenu()\n      }\n      if (result = \"sprawl out\") {\n          msg (\"You sprawl out.\")\n          game.todo = Split(\"sit|stand|cancel\", \"|\")\n          todomenu()\n      }if (result = \"handstand\") {\n          msg (\"You stand on your hands for a bit, then right yourself.\")\n          game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\n          todomenu()\n      }\n      if (result = \"cancel\") {\n        msg (\"Canceled.\")\n        msg (\"{command:menume:DO IT AGAIN}\")\n      }\n    }\n</code></pre>\n<p>START SCRIPT</p>\n<pre><code>game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\n      todomenu()\n</code></pre>\n<p>COMMAND (just to use for testing purposes)<br>\nPattern: <code>menume</code></p>\n<pre><code>todomenu()\n</code></pre>\n<details><summary style=\"background: blue; color: white; padding: 6px; margin-right: 40%; border: 1px solid black\">CLICK HERE TO VIEW ENTIRE EXAMPLE GAME CODE</summary>\n```\n\n\n```\n</details>\n<hr>\n<p>Play this example game online:</p>\n<p><a href=\"http://textadventures.co.uk/games/view/hehrr_xpnuyiq2hdkztmfq/showmenu-changing-and-looping-the-altered-unaltered-menu-from-within-one-script\" title=\"Play the example game at textadventures.co.uk\">http://textadventures.co.uk/games/view/hehrr_xpnuyiq2hdkztmfq/showmenu-changing-and-looping-the-altered-unaltered-menu-from-within-one-script</a></p>\n\n",
      "PostDate": "2017-08-03T00:44:18.6511742Z",
      "LastEditDate": "2017-08-03T02:13:52.0448392Z",
      "link": null
    },
    {
      "PostId": "09a07cad-5b06-405d-8ea6-dfb6795f0ad9",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ Richard:\r\n\r\njust stream-lined/re-factored (made more efficient as can, without changing your design) up your code a bit:\r\n\r\n```\r\nShowMenu (\"What to do now?\", game.todo, false) {\r\n\r\n  if (result = \"walk\") {\r\n    msg (\"You walk.\")\r\n    game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\r\n  } else if (result = \"stand\") {\r\n    msg (\"You stand.\")\r\n    game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\r\n  } else if (result = \"run\") {\r\n    msg (\"You run around.\")\r\n    game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\r\n  } else if (result = \"sit\") {\r\n    msg (\"You sit down.\")\r\n    game.todo = Split(\"stand|sprawl out|cancel\", \"|\")\r\n  } else if (result = \"sprawl out\") {\r\n    msg (\"You sprawl out.\")\r\n    game.todo = Split(\"sit|stand|cancel\", \"|\")\r\n  } else if (result = \"handstand\") {\r\n    msg (\"You stand on your hands for a bit, then right yourself.\")\r\n    game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\r\n  }\r\n      \r\n  if (result = \"cancel\") {\r\n    msg (\"Canceled.\")\r\n    // msg (\"{command:menume:DO IT AGAIN}\")\r\n  } else {\r\n    todomenu ()\r\n  }\r\n\r\n}\r\n```\r\n\r\n--------------------------\r\n\r\na slightly better design:\r\n\r\n```\r\n<game name=\"example_game\">\r\n  <attr name=\"todo\" type=\"simplestringlist\">walk; ETC; ETC; ETC</attr> // too lazy to write in all of the items...\r\n</game>\r\n\r\n// 'todomenu' Function (I'd have to indent the scripting below to put it into an actual Function tag, so just doing this instead):\r\n\r\nShowMenu (\"What to do now?\", game.todo, false) {\r\n\r\n  if (result = \"walk\") {\r\n    msg (\"You walk.\")\r\n  } else if (result = \"stand\") {\r\n    msg (\"You stand.\")\r\n  } else if (result = \"run\") {\r\n    msg (\"You run around.\")\r\n  } else if (result = \"sit\") {\r\n    msg (\"You sit down.\")\r\n  } else if (result = \"sprawl out\") {\r\n    msg (\"You sprawl out.\")\r\n  } else if (result = \"handstand\") {\r\n    msg (\"You stand on your hands for a bit, then right yourself.\")\r\n  }\r\n      \r\n  if (result = \"cancel\") {\r\n    msg (\"Canceled.\")\r\n    // msg (\"{command:menume:DO IT AGAIN}\")\r\n  } else {\r\n    list remove (game.todo, result)\r\n    todomenu ()\r\n  }\r\n\r\n}\r\n```\r\n\r\n------------------------------\r\n\r\nDictionaries are actually extremely nice, and not as complicated as them seem to be:\r\n\r\nliterally think of a Dictionary as a 'input-output' Function/Equation in math, or as a 'conversion' Function:\r\n\r\nString Dictionary:\r\n\r\nstring input: name_of_key\r\nstring output: string_value\r\n\r\nObject Dictionary:\r\n\r\nstring input: name_of_key\r\nObject reference/pointer output: name_of_object_value\r\n\r\nScript Dictionary:\r\n\r\nstring input: name_of_key\r\nscript output: script_value\r\n\r\nDictionary (dynamic: quest parses what type of dictionary to use for you): http://docs.textadventures.co.uk/quest/types/dictionary.html \r\n\r\nfor example:\r\n\r\n```\r\n<object name=\"example_object\">\r\n\r\n  // Dictionary (dynamic: quest parses what type of Dictionary to use for you) : http://docs.textadventures.co.uk/quest/types/dictionary.html\r\n\r\n  // String Dictionary ( http://docs.textadventures.co.uk/quest/types/stringdictionary.html ):\r\n\r\n  // this quick form/format/style is nice for when your values are short (and you don't want a long vertical wall of items, lol):\r\n\r\n  <attr name=\"example_stringdictionary_attribute\" type=\"simplestringdictionary\">princess = The princess has been kidnapped by the dragon; dragon = The dragon can only be killed by the dragon slayer sword; sword = The dragon slaying sword is held by the wizard; wizard = The wizard can be found in his tower</attr>\r\n\r\n  // or another form/format/style (if you got paragraphs for your values):\r\n\r\n  <attr name=\"example_stringdictionary_attribute\" type=\"simplestringdictionary\">\r\n    <item>\r\n      <key>princess</key>\r\n      <value>The princess has been kidnapped by the dragon</value>\r\n    </item>\r\n    <item>\r\n      <key>dragon</key>\r\n      <value>The dragon can only be killed by the dragon slayer sword</value>\r\n    </item>\r\n    <item>\r\n      <key>sword</key>\r\n      <value>The dragon slaying sword is held by the wizard</value>\r\n    </item>\r\n    <item>\r\n      <key>wizard</key>\r\n      <value>The wizard can be found in his tower</value>\r\n    </item>\r\n  </attr>\r\n\r\n  // Object Dictionary ( http://docs.textadventures.co.uk/quest/types/objectdictionary.html ):\r\n\r\n  <attr name=\"example_objectdictionary_attribute\" type=\"simpleobjectdictionary\">princess = princess_object; dragon = dragon_object; sword = sword_object; wizard = wizard_object</attr>\r\n\r\n  // Script Dictionary ( http://docs.textadventures.co.uk/quest/types/scriptdictionary.html ):\r\n\r\n  <attr name=\"example_scriptdictionary_attribute\" type=\"scriptdictionary\">\r\n    <item key=\"princess\">\r\n      msg (\"The princess has been kidnapped by the dragon\")\r\n    </item>\r\n    <item key=\"dragon\">\r\n      msg (\"The dragon can only be killed by the dragon slayer sword\")\r\n    </item>\r\n    <item key=\"sword\">\r\n      msg (\"The dragon slaying sword is held by the wizard\")\r\n    </item>\r\n    <item key=\"wizard\">\r\n      msg (\"The wizard can be found in his tower\")\r\n    </item>\r\n  </attr>\r\n\r\n</object>\r\n\r\n<object name=\"princess_object\">\r\n</object>\r\n\r\n<object name=\"dragon_object\">\r\n</object>\r\n\r\n<object name=\"sword_object\">\r\n</object>\r\n\r\n<object name=\"wizard_object\">\r\n</object>\r\n```\r\n\r\n-----------------\r\n\r\nthis 'input-output' or 'conversion' functionality of Dictionaries, let's you do some really cool stuff!\r\n\r\n(you can use Lists with Dictionaries, to utilize their full power, just like with Attributes and the 'if' Script being used together)\r\n\r\nfor example, Pixie's opposite spells (damage/elemental types) functionality, quick/brief conceptually about it only:\r\n\r\n```\r\n<object name=\"global_data_object\">\r\n  <attr name=\"elemental_dict\" type=\"simplestringdictionary\">fire = water; water = fire</attr> //we need the 'water = fire' (the reverse) because remember its: input ----> output, so: fire -----> water, and: water -----> fire\r\n</object>\r\n\r\n<object name=\"water_dragon\">\r\n  <attr name=\"elemental_string\" type=\"string\">water</attr>\r\n</object>\r\n\r\n<object name=\"fireball_spell\">\r\n  <attr name=\"elemental_string\" type=\"string\">fire</attr>\r\n  <attr name=\"cast\" type=\"script\">\r\n    if (fireball_spell.elemental_string = water_dragon.elemental_string) { // if (fireball:fire = fire:fire_dragon/NOT:water_dragon) // this means that you got the same elements, and so either it does no damage (\"immunity\") or it does less damage (\"strong\") or it reflects the damage back onto you (\"reflect\"):\r\n      water_dragon.current_life = water_dragon.current_life - (fireball_spell.damage / 2)\r\n    if (fireball_spell.elemental_string = StringDictionaryItem (global_data_object.elemental_dict, water_dragon.elemental_string) { // if (fireball: fire = (water_dragon:water ----> dictionary conversion ----> fire)) // if (fireball:fire = fire: opposite element of water_dragon): this means that the elementals are opposite and thus more damage (\"weak\") is to be done:\r\n      water_dragon.current_life = water_dragon.current_life - (fireball_spell.damage * 2)\r\n    } else { // not opposite elements and not same elements, so normal damage is done:\r\n      water_dragon.current_life = water_dragon.current_life - fireball_spell.damage\r\n    }\r\n  </attr>\r\n</object>\r\n```\r\n\r\n----------------\r\n\r\nand an example of using Lists with dictionaries:\r\n\r\n```\r\n<object name=\"king\">\r\n\r\n  <attr name=\"dialogue\" type=\"script\">\r\n\r\n    // as one line (easy to mess it up: missing/extra parenthesis and/or in the wrong locations and/or etc mistakes, and also having to do these iterative operations over and over, is extra/un-needed operations, whereas by creating Variables as seen a bit further below, you'll actually be doing less operations):\r\n\r\n    msg (StringDictionaryItem (this.topic_stringdictionary_attribute, StringListItem (this.topic_stringlist_attribute, GetRandomInt (0, ListCount (this.topic_stringlist_attribute) - 1))))\r\n\r\n    // or, as multiple lines (better for getting it correct and working, and for doing more stuff as you got all those Variables for use):\r\n\r\n    list_count_integer_variable = ListCount (this.topic_stringlist_attribute)\r\n    last_index_number_integer_variable = list_count_integer_variable - 1\r\n    random_in_bounds_index_number_integer_variable = GetRandomInt (0, last_index_number_integer_variable)\r\n    random_list_item_string_variable = StringListItem (this.topic_stringlist_attribute, random_in_bounds_index_number_integer_variable)\r\n    random_dictionary_item_string_variable = StringDictionaryItem (this.topic_stringdictionary_attribute, random_list_item_string_variable)\r\n\r\n    msg (random_dictionary_item_string_variable)\r\n   \r\n  </attr>\r\n\r\n  <attr name=\"topic_stringlist_attribute\" type=\"simplestringlist\">princess;dragon;sword;wizard\"</attr>\r\n\r\n  <attr name=\"topic_stringdictionary_attribute\" type=\"simplestringdictionary\">\r\n    <item>\r\n      <key>princess</key>\r\n      <value>The princess has been kidnapped by the dragon</value>\r\n    </item>\r\n    <item>\r\n      <key>dragon</key>\r\n      <value>The dragon can only be killed by the dragon slayer sword</value>\r\n    </item>\r\n    <item>\r\n      <key>sword</key>\r\n      <value>The dragon slaying sword is held by the wizard</value>\r\n    </item>\r\n    <item>\r\n      <key>wizard</key>\r\n      <value>The wizard can be found in his tower</value>\r\n    </item>\r\n  </attr>\r\n\r\n</object>\r\n```\r\n\r\nand by using lists with dictionaries, the lists are great to be used for adding/removing items from them, while leaving your dictionary alone / keeping it un-touched.",
      "EditableFormat": "markdown",
      "HTML": "<p>@ Richard:</p>\n<p>just stream-lined/re-factored (made more efficient as can, without changing your design) up your code a bit:</p>\n<pre><code>ShowMenu (\"What to do now?\", game.todo, false) {\n\n  if (result = \"walk\") {\n    msg (\"You walk.\")\n    game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\n  } else if (result = \"stand\") {\n    msg (\"You stand.\")\n    game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\n  } else if (result = \"run\") {\n    msg (\"You run around.\")\n    game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\n  } else if (result = \"sit\") {\n    msg (\"You sit down.\")\n    game.todo = Split(\"stand|sprawl out|cancel\", \"|\")\n  } else if (result = \"sprawl out\") {\n    msg (\"You sprawl out.\")\n    game.todo = Split(\"sit|stand|cancel\", \"|\")\n  } else if (result = \"handstand\") {\n    msg (\"You stand on your hands for a bit, then right yourself.\")\n    game.todo = Split(\"walk|run|sit|handstand|cancel\", \"|\")\n  }\n      \n  if (result = \"cancel\") {\n    msg (\"Canceled.\")\n    // msg (\"{command:menume:DO IT AGAIN}\")\n  } else {\n    todomenu ()\n  }\n\n}\n</code></pre>\n<hr>\n<p>a slightly better design:</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"todo\" type=\"simplestringlist\"&gt;walk; ETC; ETC; ETC&lt;/attr&gt; // too lazy to write in all of the items...\n&lt;/game&gt;\n\n// 'todomenu' Function (I'd have to indent the scripting below to put it into an actual Function tag, so just doing this instead):\n\nShowMenu (\"What to do now?\", game.todo, false) {\n\n  if (result = \"walk\") {\n    msg (\"You walk.\")\n  } else if (result = \"stand\") {\n    msg (\"You stand.\")\n  } else if (result = \"run\") {\n    msg (\"You run around.\")\n  } else if (result = \"sit\") {\n    msg (\"You sit down.\")\n  } else if (result = \"sprawl out\") {\n    msg (\"You sprawl out.\")\n  } else if (result = \"handstand\") {\n    msg (\"You stand on your hands for a bit, then right yourself.\")\n  }\n      \n  if (result = \"cancel\") {\n    msg (\"Canceled.\")\n    // msg (\"{command:menume:DO IT AGAIN}\")\n  } else {\n    list remove (game.todo, result)\n    todomenu ()\n  }\n\n}\n</code></pre>\n<hr>\n<p>Dictionaries are actually extremely nice, and not as complicated as them seem to be:</p>\n<p>literally think of a Dictionary as a 'input-output' Function/Equation in math, or as a 'conversion' Function:</p>\n<p>String Dictionary:</p>\n<p>string input: name_of_key<br>\nstring output: string_value</p>\n<p>Object Dictionary:</p>\n<p>string input: name_of_key<br>\nObject reference/pointer output: name_of_object_value</p>\n<p>Script Dictionary:</p>\n<p>string input: name_of_key<br>\nscript output: script_value</p>\n<p>Dictionary (dynamic: quest parses what type of dictionary to use for you): http://docs.textadventures.co.uk/quest/types/dictionary.html</p>\n<p>for example:</p>\n<pre><code>&lt;object name=\"example_object\"&gt;\n\n  // Dictionary (dynamic: quest parses what type of Dictionary to use for you) : http://docs.textadventures.co.uk/quest/types/dictionary.html\n\n  // String Dictionary ( http://docs.textadventures.co.uk/quest/types/stringdictionary.html ):\n\n  // this quick form/format/style is nice for when your values are short (and you don't want a long vertical wall of items, lol):\n\n  &lt;attr name=\"example_stringdictionary_attribute\" type=\"simplestringdictionary\"&gt;princess = The princess has been kidnapped by the dragon; dragon = The dragon can only be killed by the dragon slayer sword; sword = The dragon slaying sword is held by the wizard; wizard = The wizard can be found in his tower&lt;/attr&gt;\n\n  // or another form/format/style (if you got paragraphs for your values):\n\n  &lt;attr name=\"example_stringdictionary_attribute\" type=\"simplestringdictionary\"&gt;\n    &lt;item&gt;\n      &lt;key&gt;princess&lt;/key&gt;\n      &lt;value&gt;The princess has been kidnapped by the dragon&lt;/value&gt;\n    &lt;/item&gt;\n    &lt;item&gt;\n      &lt;key&gt;dragon&lt;/key&gt;\n      &lt;value&gt;The dragon can only be killed by the dragon slayer sword&lt;/value&gt;\n    &lt;/item&gt;\n    &lt;item&gt;\n      &lt;key&gt;sword&lt;/key&gt;\n      &lt;value&gt;The dragon slaying sword is held by the wizard&lt;/value&gt;\n    &lt;/item&gt;\n    &lt;item&gt;\n      &lt;key&gt;wizard&lt;/key&gt;\n      &lt;value&gt;The wizard can be found in his tower&lt;/value&gt;\n    &lt;/item&gt;\n  &lt;/attr&gt;\n\n  // Object Dictionary ( http://docs.textadventures.co.uk/quest/types/objectdictionary.html ):\n\n  &lt;attr name=\"example_objectdictionary_attribute\" type=\"simpleobjectdictionary\"&gt;princess = princess_object; dragon = dragon_object; sword = sword_object; wizard = wizard_object&lt;/attr&gt;\n\n  // Script Dictionary ( http://docs.textadventures.co.uk/quest/types/scriptdictionary.html ):\n\n  &lt;attr name=\"example_scriptdictionary_attribute\" type=\"scriptdictionary\"&gt;\n    &lt;item key=\"princess\"&gt;\n      msg (\"The princess has been kidnapped by the dragon\")\n    &lt;/item&gt;\n    &lt;item key=\"dragon\"&gt;\n      msg (\"The dragon can only be killed by the dragon slayer sword\")\n    &lt;/item&gt;\n    &lt;item key=\"sword\"&gt;\n      msg (\"The dragon slaying sword is held by the wizard\")\n    &lt;/item&gt;\n    &lt;item key=\"wizard\"&gt;\n      msg (\"The wizard can be found in his tower\")\n    &lt;/item&gt;\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"princess_object\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"dragon_object\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"sword_object\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"wizard_object\"&gt;\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p>this 'input-output' or 'conversion' functionality of Dictionaries, let's you do some really cool stuff!</p>\n<p>(you can use Lists with Dictionaries, to utilize their full power, just like with Attributes and the 'if' Script being used together)</p>\n<p>for example, Pixie's opposite spells (damage/elemental types) functionality, quick/brief conceptually about it only:</p>\n<pre><code>&lt;object name=\"global_data_object\"&gt;\n  &lt;attr name=\"elemental_dict\" type=\"simplestringdictionary\"&gt;fire = water; water = fire&lt;/attr&gt; //we need the 'water = fire' (the reverse) because remember its: input ----&gt; output, so: fire -----&gt; water, and: water -----&gt; fire\n&lt;/object&gt;\n\n&lt;object name=\"water_dragon\"&gt;\n  &lt;attr name=\"elemental_string\" type=\"string\"&gt;water&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"fireball_spell\"&gt;\n  &lt;attr name=\"elemental_string\" type=\"string\"&gt;fire&lt;/attr&gt;\n  &lt;attr name=\"cast\" type=\"script\"&gt;\n    if (fireball_spell.elemental_string = water_dragon.elemental_string) { // if (fireball:fire = fire:fire_dragon/NOT:water_dragon) // this means that you got the same elements, and so either it does no damage (\"immunity\") or it does less damage (\"strong\") or it reflects the damage back onto you (\"reflect\"):\n      water_dragon.current_life = water_dragon.current_life - (fireball_spell.damage / 2)\n    if (fireball_spell.elemental_string = StringDictionaryItem (global_data_object.elemental_dict, water_dragon.elemental_string) { // if (fireball: fire = (water_dragon:water ----&gt; dictionary conversion ----&gt; fire)) // if (fireball:fire = fire: opposite element of water_dragon): this means that the elementals are opposite and thus more damage (\"weak\") is to be done:\n      water_dragon.current_life = water_dragon.current_life - (fireball_spell.damage * 2)\n    } else { // not opposite elements and not same elements, so normal damage is done:\n      water_dragon.current_life = water_dragon.current_life - fireball_spell.damage\n    }\n  &lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p>and an example of using Lists with dictionaries:</p>\n<pre><code>&lt;object name=\"king\"&gt;\n\n  &lt;attr name=\"dialogue\" type=\"script\"&gt;\n\n    // as one line (easy to mess it up: missing/extra parenthesis and/or in the wrong locations and/or etc mistakes, and also having to do these iterative operations over and over, is extra/un-needed operations, whereas by creating Variables as seen a bit further below, you'll actually be doing less operations):\n\n    msg (StringDictionaryItem (this.topic_stringdictionary_attribute, StringListItem (this.topic_stringlist_attribute, GetRandomInt (0, ListCount (this.topic_stringlist_attribute) - 1))))\n\n    // or, as multiple lines (better for getting it correct and working, and for doing more stuff as you got all those Variables for use):\n\n    list_count_integer_variable = ListCount (this.topic_stringlist_attribute)\n    last_index_number_integer_variable = list_count_integer_variable - 1\n    random_in_bounds_index_number_integer_variable = GetRandomInt (0, last_index_number_integer_variable)\n    random_list_item_string_variable = StringListItem (this.topic_stringlist_attribute, random_in_bounds_index_number_integer_variable)\n    random_dictionary_item_string_variable = StringDictionaryItem (this.topic_stringdictionary_attribute, random_list_item_string_variable)\n\n    msg (random_dictionary_item_string_variable)\n   \n  &lt;/attr&gt;\n\n  &lt;attr name=\"topic_stringlist_attribute\" type=\"simplestringlist\"&gt;princess;dragon;sword;wizard\"&lt;/attr&gt;\n\n  &lt;attr name=\"topic_stringdictionary_attribute\" type=\"simplestringdictionary\"&gt;\n    &lt;item&gt;\n      &lt;key&gt;princess&lt;/key&gt;\n      &lt;value&gt;The princess has been kidnapped by the dragon&lt;/value&gt;\n    &lt;/item&gt;\n    &lt;item&gt;\n      &lt;key&gt;dragon&lt;/key&gt;\n      &lt;value&gt;The dragon can only be killed by the dragon slayer sword&lt;/value&gt;\n    &lt;/item&gt;\n    &lt;item&gt;\n      &lt;key&gt;sword&lt;/key&gt;\n      &lt;value&gt;The dragon slaying sword is held by the wizard&lt;/value&gt;\n    &lt;/item&gt;\n    &lt;item&gt;\n      &lt;key&gt;wizard&lt;/key&gt;\n      &lt;value&gt;The wizard can be found in his tower&lt;/value&gt;\n    &lt;/item&gt;\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n</code></pre>\n<p>and by using lists with dictionaries, the lists are great to be used for adding/removing items from them, while leaving your dictionary alone / keeping it un-touched.</p>\n\n",
      "PostDate": "2017-08-03T02:26:00.5114262Z",
      "LastEditDate": "2017-08-03T02:29:40.4538946Z",
      "link": null
    },
    {
      "PostId": "1e1408bf-1a0c-41d7-a065-a5d3b28a1a94",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "HK,\r\n\r\nWhoa! That stream-lined code DOES look better! (Plus, it looks like it would save me from constantly searching for my missing/extra ```}``` after having written an IF... statement!!!)\r\n\r\n\r\n---\r\nAlso, holy schnikeys!\r\n\r\n```<attr name=\"todo\" type=\"simplestringlist\">walk; waddle; saunter; sashay; jog; run; hop; skip; jump</attr>``` \r\n\r\nI didn't know you could do it that way in Code View!\r\n\r\n(Sweet!)",
      "EditableFormat": "markdown",
      "HTML": "<p>HK,</p>\n<p>Whoa! That stream-lined code DOES look better! (Plus, it looks like it would save me from constantly searching for my missing/extra <code>}</code> after having written an IF... statement!!!)</p>\n<hr>\n<p>Also, holy schnikeys!</p>\n<p><code>&lt;attr name=\"todo\" type=\"simplestringlist\"&gt;walk; waddle; saunter; sashay; jog; run; hop; skip; jump&lt;/attr&gt;</code></p>\n<p>I didn't know you could do it that way in Code View!</p>\n<p>(Sweet!)</p>\n\n",
      "PostDate": "2017-08-03T14:11:00.9464263Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
