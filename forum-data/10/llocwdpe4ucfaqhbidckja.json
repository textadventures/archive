{
  "Topic": {
    "TopicId": "llocwdpe4ucfaqhbidckja",
    "ForumId": "10",
    "Title": "Having pictures of inventory items appear in a line",
    "LastUpdated": "2018-01-03T05:10:50.1488894Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "bfad6471-31a5-4e89-b2e9-f02548d215d4",
      "UserId": 329383,
      "Username": "J_J",
      "AvatarUrl": "https://secure.gravatar.com/avatar/d6dcf2651a8e3cfe546c1fe096981552?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So, I'd like when you enter a room for a small panel of images of the items you've collected to appear underneath the room animation. This works:\r\n\r\npicture (\"Bedroom_house.2 Scene1.gif\")\r\nif (Got(red book) and and Got(blue book) and Got(pencil)  and Got(sweater) and Got(torn paper)) {\r\n  msg (\"{img:TestR.jpg}  {img:TestB.jpg} {img:TestPn.jpg} {img:TestSw.jpg} {img:TestTp.jpg}\")\r\n}\r\n\r\nThe problem is that I would then have to manually write out all possible combinations of items you could be carrying at any moment @_@' \r\nIt also works to have an if script for each individual item, then if the item is in your inventory the image appears, BUT the images all appear on separate lines in a column. \r\n\r\nIs there some way to have the images appear in a horizontal line correlating to your inventory without having to type out hundreds of combinations?",
      "EditableFormat": "markdown",
      "HTML": "<p>So, I'd like when you enter a room for a small panel of images of the items you've collected to appear underneath the room animation. This works:</p>\n<p>picture (\"Bedroom_house.2 Scene1.gif\")<br>\nif (Got(red book) and and Got(blue book) and Got(pencil)  and Got(sweater) and Got(torn paper)) {<br>\nmsg (\"{img:TestR.jpg}  {img:TestB.jpg} {img:TestPn.jpg} {img:TestSw.jpg} {img:TestTp.jpg}\")<br>\n}</p>\n<p>The problem is that I would then have to manually write out all possible combinations of items you could be carrying at any moment @_@'<br>\nIt also works to have an if script for each individual item, then if the item is in your inventory the image appears, BUT the images all appear on separate lines in a column.</p>\n<p>Is there some way to have the images appear in a horizontal line correlating to your inventory without having to type out hundreds of combinations?</p>\n\n",
      "PostDate": "2018-01-03T05:10:50.1488894Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "39a152f0-26bc-4922-be6d-e4418bfff23a",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n(again, filler for getting my edited post, updated/posted)\r\n\r\n----------------------------------------------------\r\n\r\nstring concatenation:\r\n\r\n---------------\r\n\r\nexample concepts:\r\n\r\n-----------\r\n\r\nmath addition:\r\n\r\n5 + 5 = 10\r\n55 + 55 = 110\r\n\r\nstring concatenation:\r\n\r\n\"5\" + \"5\" = \"55\"\r\n\"55\" + \"55\" = \"5555\"\r\n\"mama\" + \"mia\" = \"mamamia\"\r\n\"mama\" + \"3\" = \"mama3\"\r\n\"mama\" + \" \" + \"3\" + \" \" + \"mia\" = \"mama 3 mia\"\r\n\r\n------------\r\n\r\nstring_variable = \"Hi\"\r\nmsg (string_variable)\r\n// output: Hi\r\n\r\nstring_variable = string_variable + \", my name is HK.\"\r\nmsg (string_variable)\r\n// output: Hi, my name is HK.\r\n\r\nstring_variable = string_variable + \" What is your name?\"\r\nmsg (string_variable)\r\n// output: Hi, my name is HK. What is your name?\r\n\r\n--------------\r\n\r\n```\r\npicture (\"Bedroom_house.2 Scene1.gif\")\r\n\r\nstring_variable = \"\"\r\n\r\nif (Got (red book)) {\r\n  string_variable = string_variable + \"{img:TestR.jpg}\"\r\n}\r\n\r\nif (Got (blue book)) {\r\n  string_variable = string_variable + \"{img:TestB.jpg}\"\r\n}\r\n\r\nif (Got (pencil)) {\r\n  string_variable = string_variable + \"{img:TestPn.jpg}\"\r\n}\r\n\r\nif (Got (sweater)) {\r\n  string_variable = string_variable + \"{img:TestSw.jpg}\"\r\n}\r\n\r\nif (Got (torn paper)) {\r\n  string_variable = string_variable + \"{img:TestTp.jpg}\"\r\n}\r\n\r\nif (not string_variable = null) {\r\n  msg (string_variable)\r\n}\r\n```\r\n\r\n------------\r\n\r\nif you want/need a more scalable (better) design (aka, if you got a lot of items), here it is (using Dictionary Attributes and 'foreach' iteration):\r\n\r\n```\r\ncreate (\"room_X\")\r\n\r\npicture_object_variable = create (\"red book\")\r\npicture_object_variable.parent = room_X\r\n\r\npicture_object_variable = create (\"blue book\")\r\npicture_object_variable.parent = room_X\r\n\r\npicture_object_variable = create (\"pencil\")\r\npicture_object_variable.parent = room_X\r\n\r\npicture_object_variable = create (\"sweater\")\r\npicture_object_variable.parent = room_X\r\n\r\npicture_object_variable = create (\"torn paper\")\r\npicture_object_variable.parent = room_X\r\n\r\n// ------------------------------------------\r\n\r\ncreate (\"picture_data_object\")\r\n\r\npicture_data_object.picture_stringdictionary_attribute = NewStringDictionary ()\r\n\r\ndictionary add (picture_data_object.picture_stringdictionary_attribute, \"red book\", \"{img:TestR.jpg}\")\r\n\r\ndictionary add (picture_data_object.picture_stringdictionary_attribute, \"blue book\", \"{img:TestB.jpg}\")\r\n\r\ndictionary add (picture_data_object.picture_stringdictionary_attribute, \"pencil\", \"{img:TestPn.jpg}\")\r\n\r\ndictionary add (picture_data_object.picture_stringdictionary_attribute, \"sweater\", \"{img:TestSw.jpg}\")\r\n\r\ndictionary add (picture_data_object.picture_stringdictionary_attribute, \"torn paper\", \"{img:TestTp.jpg}\")\r\n\r\n// -------------------------------------------\r\n\r\npicture (\"Bedroom_house.2 Scene1.gif\")\r\n\r\nconcatenation_string_variable = \"\"\r\n\r\nforeach (string_variable, picture_data_object.picture_stringdictionary_attribute) {\r\n\r\n  object_variable = GetObject (string_variable)\r\n\r\n  if (Got (object_variable)) {\r\n\r\n    concatenation_string_variable = concatenation_string_variable + StringDictionaryItem (picture_data_object.picture_stringdictionary_attribut, string_variable)\r\n\r\n  }\r\n\r\n}\r\n\r\nif (not concatenation_string_variable = null) {\r\n\r\n  msg (concatenation_string_variable)\r\n\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)<br>\n(again, filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>string concatenation:</p>\n<hr>\n<p>example concepts:</p>\n<hr>\n<p>math addition:</p>\n<p>5 + 5 = 10<br>\n55 + 55 = 110</p>\n<p>string concatenation:</p>\n<p>\"5\" + \"5\" = \"55\"<br>\n\"55\" + \"55\" = \"5555\"<br>\n\"mama\" + \"mia\" = \"mamamia\"<br>\n\"mama\" + \"3\" = \"mama3\"<br>\n\"mama\" + \" \" + \"3\" + \" \" + \"mia\" = \"mama 3 mia\"</p>\n<hr>\n<p>string_variable = \"Hi\"<br>\nmsg (string_variable)<br>\n// output: Hi</p>\n<p>string_variable = string_variable + \", my name is HK.\"<br>\nmsg (string_variable)<br>\n// output: Hi, my name is HK.</p>\n<p>string_variable = string_variable + \" What is your name?\"<br>\nmsg (string_variable)<br>\n// output: Hi, my name is HK. What is your name?</p>\n<hr>\n<pre><code>picture (\"Bedroom_house.2 Scene1.gif\")\n\nstring_variable = \"\"\n\nif (Got (red book)) {\n  string_variable = string_variable + \"{img:TestR.jpg}\"\n}\n\nif (Got (blue book)) {\n  string_variable = string_variable + \"{img:TestB.jpg}\"\n}\n\nif (Got (pencil)) {\n  string_variable = string_variable + \"{img:TestPn.jpg}\"\n}\n\nif (Got (sweater)) {\n  string_variable = string_variable + \"{img:TestSw.jpg}\"\n}\n\nif (Got (torn paper)) {\n  string_variable = string_variable + \"{img:TestTp.jpg}\"\n}\n\nif (not string_variable = null) {\n  msg (string_variable)\n}\n</code></pre>\n<hr>\n<p>if you want/need a more scalable (better) design (aka, if you got a lot of items), here it is (using Dictionary Attributes and 'foreach' iteration):</p>\n<pre><code>create (\"room_X\")\n\npicture_object_variable = create (\"red book\")\npicture_object_variable.parent = room_X\n\npicture_object_variable = create (\"blue book\")\npicture_object_variable.parent = room_X\n\npicture_object_variable = create (\"pencil\")\npicture_object_variable.parent = room_X\n\npicture_object_variable = create (\"sweater\")\npicture_object_variable.parent = room_X\n\npicture_object_variable = create (\"torn paper\")\npicture_object_variable.parent = room_X\n\n// ------------------------------------------\n\ncreate (\"picture_data_object\")\n\npicture_data_object.picture_stringdictionary_attribute = NewStringDictionary ()\n\ndictionary add (picture_data_object.picture_stringdictionary_attribute, \"red book\", \"{img:TestR.jpg}\")\n\ndictionary add (picture_data_object.picture_stringdictionary_attribute, \"blue book\", \"{img:TestB.jpg}\")\n\ndictionary add (picture_data_object.picture_stringdictionary_attribute, \"pencil\", \"{img:TestPn.jpg}\")\n\ndictionary add (picture_data_object.picture_stringdictionary_attribute, \"sweater\", \"{img:TestSw.jpg}\")\n\ndictionary add (picture_data_object.picture_stringdictionary_attribute, \"torn paper\", \"{img:TestTp.jpg}\")\n\n// -------------------------------------------\n\npicture (\"Bedroom_house.2 Scene1.gif\")\n\nconcatenation_string_variable = \"\"\n\nforeach (string_variable, picture_data_object.picture_stringdictionary_attribute) {\n\n  object_variable = GetObject (string_variable)\n\n  if (Got (object_variable)) {\n\n    concatenation_string_variable = concatenation_string_variable + StringDictionaryItem (picture_data_object.picture_stringdictionary_attribut, string_variable)\n\n  }\n\n}\n\nif (not concatenation_string_variable = null) {\n\n  msg (concatenation_string_variable)\n\n}\n</code></pre>\n\n",
      "PostDate": "2018-01-03T06:21:30.9062366Z",
      "LastEditDate": "2018-01-03T06:56:45.8190133Z",
      "link": null
    },
    {
      "PostId": "61abeff3-2ecf-43b5-aedb-822a888b800a",
      "UserId": 329383,
      "Username": "J_J",
      "AvatarUrl": "https://secure.gravatar.com/avatar/d6dcf2651a8e3cfe546c1fe096981552?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you! This works great and looks awesome. I'm so excited. And thank you for explaining the concept first, I'm still  noob so it can be confusing just looking at the code : )",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you! This works great and looks awesome. I'm so excited. And thank you for explaining the concept first, I'm still  noob so it can be confusing just looking at the code : )</p>\n\n",
      "PostDate": "2018-01-03T23:36:48.5727909Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
