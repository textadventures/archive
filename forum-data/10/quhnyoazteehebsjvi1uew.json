{
  "Topic": {
    "TopicId": "quhnyoazteehebsjvi1uew",
    "ForumId": "10",
    "Title": "Trying out the ScopeVisible() command",
    "LastUpdated": "2020-02-29T10:54:33.7101421Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "435a2f92-19f5-40db-af03-d97f4a54ee6e",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In the help part of Quest I'm told that the ScopeVisible() command returns an objectlist of the objects that the player can see.\r\nI'm trying to display the objectlist but no luck so far.\r\n\r\nI tried this code:\r\n ll = NewObjectList()\r\n      ScopeVisible()\r\n      msg (ListCount(ll))\r\n      msg(ObjectList)\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>In the help part of Quest I'm told that the ScopeVisible() command returns an objectlist of the objects that the player can see.<br>\nI'm trying to display the objectlist but no luck so far.</p>\n<p>I tried this code:<br>\nll = NewObjectList()<br>\nScopeVisible()<br>\nmsg (ListCount(ll))<br>\nmsg(ObjectList)</p>\n\n",
      "PostDate": "2020-02-29T10:54:33.7101421Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0dc4adb1-ea65-43de-9520-a78c811326e0",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Let's look at the code line by line:\r\n* `ll = NewObjectList()` - calls the (built-in) function \"NewObjectList\", which creates a new objectlist and returns it. The returned (empty) objectlist is stored in a local variable named `ll`\r\n* `ScopeVisible()` - calls the (core) function \"ScopeVisible\", which returns an objectlist of visible objects. There's no `=`, so we don't do anything with this list.\r\n* `msg (ListCount(ll))` - calls the (built-in) function \"ListCount\", which returns the number of elements in the list `ll` (currently zero, as `ll` is the empty list returned by NewObjectList(). The returned number (0) is passed to the built-in statement \"msg\", and printed out\r\n* `msg(ObjectList)` - calls the built-in statement \"msg\", to print out the contents of a local variable named `ObjectList`. If you haven't already created this variable, you will get an error.\r\n\r\nI think what you probably meant is:\r\n```\r\nll = ScopeVisible()\r\nmsg (ListCount(ll))\r\nmsg (FormatList (ll, \", \", \", and\", \"nothing\"))\r\n```\r\n\r\n(In this case, I added the (core) function `FormatList`, which turns an objectlist into a human-readable string that looks like \"<u style=\"cursor: pointer\">my parents</u>, an <u style=\"cursor: pointer\">elephant</u>, and <u style=\"cursor: pointer\">Joe Stalin</u>\".\r\nThe parameters to this function are:\r\n* `ll` - the list to display\r\n* `\", \"` - the string which should be used to separate items in the list\r\n* `\", and\"` - the string which should be placed between the last two list elements\r\n* `\"nothing\"` - what to display if the list is empty",
      "EditableFormat": "markdown",
      "HTML": "<p>Let's look at the code line by line:</p>\n<ul>\n<li><code>ll = NewObjectList()</code> - calls the (built-in) function \"NewObjectList\", which creates a new objectlist and returns it. The returned (empty) objectlist is stored in a local variable named <code>ll</code></li>\n<li><code>ScopeVisible()</code> - calls the (core) function \"ScopeVisible\", which returns an objectlist of visible objects. There's no <code>=</code>, so we don't do anything with this list.</li>\n<li><code>msg (ListCount(ll))</code> - calls the (built-in) function \"ListCount\", which returns the number of elements in the list <code>ll</code> (currently zero, as <code>ll</code> is the empty list returned by NewObjectList(). The returned number (0) is passed to the built-in statement \"msg\", and printed out</li>\n<li><code>msg(ObjectList)</code> - calls the built-in statement \"msg\", to print out the contents of a local variable named <code>ObjectList</code>. If you haven't already created this variable, you will get an error.</li>\n</ul>\n<p>I think what you probably meant is:</p>\n<pre><code>ll = ScopeVisible()\nmsg (ListCount(ll))\nmsg (FormatList (ll, \", \", \", and\", \"nothing\"))\n</code></pre>\n<p>(In this case, I added the (core) function <code>FormatList</code>, which turns an objectlist into a human-readable string that looks like \"<u style=\"cursor: pointer\">my parents</u>, an <u style=\"cursor: pointer\">elephant</u>, and <u style=\"cursor: pointer\">Joe Stalin</u>\".<br>\nThe parameters to this function are:</p>\n<ul>\n<li><code>ll</code> - the list to display</li>\n<li><code>\", \"</code> - the string which should be used to separate items in the list</li>\n<li><code>\", and\"</code> - the string which should be placed between the last two list elements</li>\n<li><code>\"nothing\"</code> - what to display if the list is empty</li>\n</ul>\n\n",
      "PostDate": "2020-02-29T13:57:31.608694Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "feb463f1-0f04-44a3-85db-9a4d9bfd1439",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks mrangel. That works well.\r\n\r\nI don't understand why there is a command \"ScopeReachableForRoom(room)  as the player is only able to reach for objects in the current room and no other room, unless you devide the current room into two parts EastLounge and WestLounge; but then how do you tell Quest that while in the WestLounge you are able to reach for objects in the EastLounge? ",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks mrangel. That works well.</p>\n<p>I don't understand why there is a command \"ScopeReachableForRoom(room)  as the player is only able to reach for objects in the current room and no other room, unless you devide the current room into two parts EastLounge and WestLounge; but then how do you tell Quest that while in the WestLounge you are able to reach for objects in the EastLounge?</p>\n\n",
      "PostDate": "2020-03-01T01:13:09.0452039Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "789ff9e3-c09c-4dbe-a50a-23748b3f5fde",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I don't understand why there is a command \"ScopeReachableForRoom(room) as the player is only able to reach for objects in the current room\r\n\r\nIt finds objects that would be reachable if the player were in a specific room. In most cases you won't need to use it. The most obvious use I can think of is when you're writing scripts to have an NPC move around the map and do things (either automatically, or with the player telling them what to do). You'd use an expression like `ScopeReachableForRoom (npc.parent)` to find out what objects the NPC can reach.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I don't understand why there is a command \"ScopeReachableForRoom(room) as the player is only able to reach for objects in the current room</p>\n</blockquote>\n<p>It finds objects that would be reachable if the player were in a specific room. In most cases you won't need to use it. The most obvious use I can think of is when you're writing scripts to have an NPC move around the map and do things (either automatically, or with the player telling them what to do). You'd use an expression like <code>ScopeReachableForRoom (npc.parent)</code> to find out what objects the NPC can reach.</p>\n\n",
      "PostDate": "2020-03-01T09:15:16.7304026Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1877c54e-41e1-4021-92d8-bac2a5646f6b",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Useful to know thanks mrangel\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Useful to know thanks mrangel</p>\n\n",
      "PostDate": "2020-03-01T11:16:04.8260514Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
