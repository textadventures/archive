{
  "Topic": {
    "TopicId": "3040",
    "ForumId": "10",
    "Title": "Copying a stringdictionary",
    "LastUpdated": "2012-06-11T10:06:51+01:00",
    "ReplyCount": 4
  },
  "Posts": [
    {
      "PostId": "20659",
      "UserId": 0,
      "Username": "duggold",
      "UserAvatar": null,
      "UserGravatar": "3f6c04ce315c448eac13aff762967ab2",
      "EditableText": "I am enumerating through a stringdictionary using foreach. The problem is, when I process each item I may remove or add items to the stringdictionary. So, when I run it, it errors telling me the list has been changed and the enumeration may not work. So, I tried an assign:\n\nnew_list = old_list\n\nand enumerate the new_list. Unfortunately, it appears the assignment didn't copy the data but just pointed my variable to the same list so the enumeration still fails.\n\nAs a workaround, I make a new stringdictionary and one by one use dictionary add to fill it with the contents of the first list. Then, enumerate the new list. But, this is rather ugly and uses CPU time. Is there a way to force an assignment to do an actual copy rather then a reference?",
      "EditableFormat": "bbcode",
      "HTML": "I am enumerating through a stringdictionary using foreach. The problem is, when I process each item I may remove or add items to the stringdictionary. So, when I run it, it errors telling me the list has been changed and the enumeration may not work. So, I tried an assign:<br/><br/>new_list = old_list<br/><br/>and enumerate the new_list. Unfortunately, it appears the assignment didn't copy the data but just pointed my variable to the same list so the enumeration still fails.<br/><br/>As a workaround, I make a new stringdictionary and one by one use dictionary add to fill it with the contents of the first list. Then, enumerate the new list. But, this is rather ugly and uses CPU time. Is there a way to force an assignment to do an actual copy rather then a reference?",
      "PostDate": "2012-06-10T19:40:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "20671",
      "UserId": 0,
      "Username": "sgreig",
      "UserAvatar": null,
      "UserGravatar": "9117185af66d72729b195384e3a446f0",
      "EditableText": "[b:2hzsuno9]EDIT[/b:2hzsuno9]\n\nScrap that. I have a function in one of my games that makes copies of lists specifically to deal with that problem.\n\n[code:2hzsuno9]\n  &lt;function name=&quot;ObjectListCopy&quot; parameters=&quot;source&quot; type=&quot;objectlist&quot;&gt;\n    result = NewObjectList()\n    foreach (item, source) {\n      list add (result, item)\n    }\n    return (result)\n  &lt;/function&gt;\n[/code:2hzsuno9]\n\nYou would change result = NewObjectList() to result = NewStringList() for your purpose, but it should work.",
      "EditableFormat": "bbcode",
      "HTML": "<span style=\"font-weight:bold;\">EDIT</span><br/><br/>Scrap that. I have a function in one of my games that makes copies of lists specifically to deal with that problem.<br/><br/><pre><code><br/>  &lt;function name=&quot;ObjectListCopy&quot; parameters=&quot;source&quot; type=&quot;objectlist&quot;&gt;<br/>    result = NewObjectList()<br/>    foreach (item, source) {<br/>      list add (result, item)<br/>    }<br/>    return (result)<br/>  &lt;/function&gt;<br/></code></pre><br/><br/>You would change result = NewObjectList() to result = NewStringList() for your purpose, but it should work.",
      "PostDate": "2012-06-11T01:44:44+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "20675",
      "UserId": 0,
      "Username": "duggold",
      "UserAvatar": null,
      "UserGravatar": "3f6c04ce315c448eac13aff762967ab2",
      "EditableText": "Yes, I did end up putting in the copy code myself, but I felt that was pretty inefficient and thought, like other languages, there would be a copy other then by reference. Oh well...",
      "EditableFormat": "bbcode",
      "HTML": "Yes, I did end up putting in the copy code myself, but I felt that was pretty inefficient and thought, like other languages, there would be a copy other then by reference. Oh well...",
      "PostDate": "2012-06-11T03:33:08+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "20689",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "I think you could do something like this\n\n[code:1ado0583]\nnewlist = NewObjectList()\nnewlist  = ListCombine ( null , yourlist )\n [/code:1ado0583]",
      "EditableFormat": "bbcode",
      "HTML": "I think you could do something like this<br/><br/><pre><code><br/>newlist = NewObjectList()<br/>newlist  = ListCombine ( null , yourlist )<br/> </code></pre>",
      "PostDate": "2012-06-11T09:51:10+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "20691",
      "UserId": 0,
      "Username": "sgreig",
      "UserAvatar": null,
      "UserGravatar": "9117185af66d72729b195384e3a446f0",
      "EditableText": "That's originally what I was going to suggest Pertex. However, my game Sleuth makes extensive use of that list copying function and it has absolutely no discernible effect on performance. I can't take the credit for writing it though, as much as I'd like to. It was Alex who came up with it. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "That's originally what I was going to suggest Pertex. However, my game Sleuth makes extensive use of that list copying function and it has absolutely no discernible effect on performance. I can't take the credit for writing it though, as much as I'd like to. It was Alex who came up with it. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2012-06-11T10:06:51+01:00",
      "LastEditDate": null
    }
  ]
}
