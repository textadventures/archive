{
  "Topic": {
    "TopicId": "keloo4b6ekkb-s7mrkrubq",
    "ForumId": "10",
    "Title": "Equip Script Issue",
    "LastUpdated": "2020-03-20T17:45:47.6298847Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "3106ef80-cfc5-45bc-9915-08cff20e27ff",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey everyone! Back from 3 months traveling the U.S. and am working my games again.\r\n\r\nWhen I use the following equip script, I have no issue when I equip a weapon while no weapon is equipped. But when a weapon is equipped everything works but the ```player.equipped = object``` line. I look at the debugger and the previous weapon is still equipped. I don't see why. Is it not in the right line? It shows equipped in the inventory panels and the msg prints correctly.  Also FYI, the ```ClearTurn``` is a function to clearscreen and showroomdescription. \r\n\r\nSo the only issue is the player.equipped attribute is not changing to the new weapon.\r\n\r\nThe command pattern is ```equip #object#```\r\n```\r\nClearTurn\r\nif (HasBoolean(object, \"dead\")) {\r\n  msg (\"That's not something you can wield as a weapon.\")\r\n}\r\nelse if (not HasAttribute(object, \"damage\")) {\r\n  msg (\"That's not something you can wield.\")\r\n}\r\nelse if (not object.parent = player) {\r\n  msg (\"You are not carrying it.\")\r\n}\r\nelse if (object = player.equipped) {\r\n  msg (\"You already have.\")\r\n}\r\nelse if (player.equipped = null) {\r\n  msg (\"You equip your \" + GetDisplayAlias(object) + \".\")\r\n  player.equipped = object\r\n  list add (object.inventoryverbs, \"Unequip\")\r\n  list remove (object.inventoryverbs, \"Equip\")\r\n  object.listalias = object.listalias + \" (equipped)\"\r\n}\r\nelse {\r\n  msg (\"You put away your \" + GetDisplayAlias(player.equipped) + \" and equip your \" + GetDisplayAlias(object) + \".\")\r\n  list add (player.equipped.inventoryverbs, \"Equip\")\r\n  list remove (player.equipped.inventoryverbs, \"Unequip\")\r\n  player.equipped.listalias = Replace(player.equipped.listalias, \" (equipped)\", \"\")\r\n  player.equipped = object\r\n  list add (object.inventoryverbs, \"Unequip\")\r\n  list remove (object.inventoryverbs, \"Equip\")\r\n  object.listalias = object.listalias + \" (equipped)\"\r\n}\r\nforeach (obj, GetDirectChildren(player.parent)) {\r\n  if (HasBoolean(obj, \"dead\")) {\r\n    if (not obj.dead) {\r\n      if (ListContains (player.attackers, obj)) {\r\n        msg (\"{colour:red:<i>You are still in battle!}\")\r\n        do_attack (obj, obj, player, false)\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey everyone! Back from 3 months traveling the U.S. and am working my games again.</p>\n<p>When I use the following equip script, I have no issue when I equip a weapon while no weapon is equipped. But when a weapon is equipped everything works but the <code>player.equipped = object</code> line. I look at the debugger and the previous weapon is still equipped. I don't see why. Is it not in the right line? It shows equipped in the inventory panels and the msg prints correctly.  Also FYI, the <code>ClearTurn</code> is a function to clearscreen and showroomdescription.</p>\n<p>So the only issue is the player.equipped attribute is not changing to the new weapon.</p>\n<p>The command pattern is <code>equip #object#</code></p>\n<pre><code>ClearTurn\nif (HasBoolean(object, \"dead\")) {\n  msg (\"That's not something you can wield as a weapon.\")\n}\nelse if (not HasAttribute(object, \"damage\")) {\n  msg (\"That's not something you can wield.\")\n}\nelse if (not object.parent = player) {\n  msg (\"You are not carrying it.\")\n}\nelse if (object = player.equipped) {\n  msg (\"You already have.\")\n}\nelse if (player.equipped = null) {\n  msg (\"You equip your \" + GetDisplayAlias(object) + \".\")\n  player.equipped = object\n  list add (object.inventoryverbs, \"Unequip\")\n  list remove (object.inventoryverbs, \"Equip\")\n  object.listalias = object.listalias + \" (equipped)\"\n}\nelse {\n  msg (\"You put away your \" + GetDisplayAlias(player.equipped) + \" and equip your \" + GetDisplayAlias(object) + \".\")\n  list add (player.equipped.inventoryverbs, \"Equip\")\n  list remove (player.equipped.inventoryverbs, \"Unequip\")\n  player.equipped.listalias = Replace(player.equipped.listalias, \" (equipped)\", \"\")\n  player.equipped = object\n  list add (object.inventoryverbs, \"Unequip\")\n  list remove (object.inventoryverbs, \"Equip\")\n  object.listalias = object.listalias + \" (equipped)\"\n}\nforeach (obj, GetDirectChildren(player.parent)) {\n  if (HasBoolean(obj, \"dead\")) {\n    if (not obj.dead) {\n      if (ListContains (player.attackers, obj)) {\n        msg (\"{colour:red:&lt;i&gt;You are still in battle!}\")\n        do_attack (obj, obj, player, false)\n      }\n    }\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2020-03-20T17:45:47.6298847Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e6eaa2a8-695c-4a1a-88e6-ccecc3cd7a17",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://i.imgur.com/O07mlRtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Visually, your code looks fine to me.  I would guess that the ```player.equipped``` value is being changed somewhere after the above code.",
      "EditableFormat": "markdown",
      "HTML": "<p>Visually, your code looks fine to me.  I would guess that the <code>player.equipped</code> value is being changed somewhere after the above code.</p>\n\n",
      "PostDate": "2020-03-21T02:38:34.0699219Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bc8be2a5-78cc-4ff4-8ccd-7578427a8e90",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://i.imgur.com/O07mlRtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Another thing you could do is add a print script immediately after the ```player.equipped = object``` script that prints out the value of ```player.equipped```, just to verify that it is, in fact, the newly equipped weapon.  If the print script prints out the correct weapon, then ```player.equipped``` must be being changed afterwards.",
      "EditableFormat": "markdown",
      "HTML": "<p>Another thing you could do is add a print script immediately after the <code>player.equipped = object</code> script that prints out the value of <code>player.equipped</code>, just to verify that it is, in fact, the newly equipped weapon.  If the print script prints out the correct weapon, then <code>player.equipped</code> must be being changed afterwards.</p>\n\n",
      "PostDate": "2020-03-21T02:41:46.1336878Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "75f2c279-dde4-467f-9642-1d23e15fed03",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OK. I'm looking outside the script for issues. Thanks\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>OK. I'm looking outside the script for issues. Thanks</p>\n\n",
      "PostDate": "2020-03-22T00:17:50.2086574Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "97f10381-849c-470a-b7b6-3dd5e3d6acf6",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I can't find anything outside this script causing the problem. I can equip an object and it will create ```player.equiped``` but when I try to equip another weapon it will not change the ```player.equipped``` I cannot figure this out. \r\n\r\nOnce a weapon is equipped it stays as the ```player.equipped``` from then on. I really think I'm missing a step here but can't figure what that may be.\r\n\r\nEverything else in the script is running correctly but that one line...\r\n\r\nI will keep troubleshooting. ",
      "EditableFormat": "markdown",
      "HTML": "<p>I can't find anything outside this script causing the problem. I can equip an object and it will create <code>player.equiped</code> but when I try to equip another weapon it will not change the <code>player.equipped</code> I cannot figure this out.</p>\n<p>Once a weapon is equipped it stays as the <code>player.equipped</code> from then on. I really think I'm missing a step here but can't figure what that may be.</p>\n<p>Everything else in the script is running correctly but that one line...</p>\n<p>I will keep troubleshooting.</p>\n\n",
      "PostDate": "2020-03-22T12:22:06.1413853Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0ffa2004-4719-49ac-93d2-2c49accc93e8",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://i.imgur.com/O07mlRtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So I'm assuming that if you place ```msg (player.equipped)``` immediately after ```player.equipped```, it will print out the correct (new) weapon.\r\n\r\nJust brainstorming here -\r\n\r\nI wonder if creating ```player.equipped``` on the fly has anything to do with this problem.  What if you created the ```.equipped``` attribute in the player's attribute tab beforehand?  You would then have to assign it the value of some object in the game.\r\n\r\nWhat if you added ```player.equipped = null``` immediately BEFORE ```player.equipped = object```?  Maybe the attribute will be \"reset\" somehow?  Actually, that should delete the attribute, then recreate it.",
      "EditableFormat": "markdown",
      "HTML": "<p>So I'm assuming that if you place <code>msg (player.equipped)</code> immediately after <code>player.equipped</code>, it will print out the correct (new) weapon.</p>\n<p>Just brainstorming here -</p>\n<p>I wonder if creating <code>player.equipped</code> on the fly has anything to do with this problem.  What if you created the <code>.equipped</code> attribute in the player's attribute tab beforehand?  You would then have to assign it the value of some object in the game.</p>\n<p>What if you added <code>player.equipped = null</code> immediately BEFORE <code>player.equipped = object</code>?  Maybe the attribute will be \"reset\" somehow?  Actually, that should delete the attribute, then recreate it.</p>\n\n",
      "PostDate": "2020-03-22T13:12:13.1847637Z",
      "LastEditDate": "2020-03-22T13:22:33.1640744Z",
      "link": null
    },
    {
      "PostId": "4e8a24cb-10e7-4d33-a59f-b47c53b3492f",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Have tried ```player.equipped = null``` earlier with no effect.\r\n\r\njust tried ``` msg (player.equipped)``` and it prints out the change to the new weapon correctly (wow) but it does not change the player.equipped attribute correctly. (odd).\r\n\r\nso what does this tell me...?",
      "EditableFormat": "markdown",
      "HTML": "<p>Have tried <code>player.equipped = null</code> earlier with no effect.</p>\n<p>just tried <code>msg (player.equipped)</code> and it prints out the change to the new weapon correctly (wow) but it does not change the player.equipped attribute correctly. (odd).</p>\n<p>so what does this tell me...?</p>\n\n",
      "PostDate": "2020-03-22T16:34:39.3267496Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "49afd2ad-acf2-48b5-b624-8d4ff16e831d",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\nelse {\r\n  msg (\"You put away your \" + GetDisplayAlias(player.equipped) + \" and equip your \" + GetDisplayAlias(object) + \".\")\r\n  list add (player.equipped.inventoryverbs, \"Equip\")\r\n  list remove (player.equipped.inventoryverbs, \"Unequip\")\r\n  player.equipped.listalias = Replace(player.equipped.listalias, \" (equipped)\", \"\")\r\n  msg (player.equipped) \r\n  player.equipped = (object)\r\n  msg (player.equipped)\r\n  player.equipped = null \r\n  msg (player.equipped) \r\n  list add (object.inventoryverbs, \"Unequip\")\r\n  list remove (object.inventoryverbs, \"Equip\")\r\n  object.listalias = object.listalias + \" (equipped)\"\r\n}\r\n```\r\n``` player.equipped = null```deletes the ```player.equipped``` attribute as it should but gives the error  `Object reference not set to an instance of an object'\r\n",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>else {\n  msg (\"You put away your \" + GetDisplayAlias(player.equipped) + \" and equip your \" + GetDisplayAlias(object) + \".\")\n  list add (player.equipped.inventoryverbs, \"Equip\")\n  list remove (player.equipped.inventoryverbs, \"Unequip\")\n  player.equipped.listalias = Replace(player.equipped.listalias, \" (equipped)\", \"\")\n  msg (player.equipped) \n  player.equipped = (object)\n  msg (player.equipped)\n  player.equipped = null \n  msg (player.equipped) \n  list add (object.inventoryverbs, \"Unequip\")\n  list remove (object.inventoryverbs, \"Equip\")\n  object.listalias = object.listalias + \" (equipped)\"\n}\n</code></pre>\n<p><code>player.equipped = null</code>deletes the <code>player.equipped</code> attribute as it should but gives the error  `Object reference not set to an instance of an object'</p>\n\n",
      "PostDate": "2020-03-22T16:57:19.661183Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c0046b0d-574d-41d9-bebb-5198d86f9867",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://i.imgur.com/O07mlRtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So if you put ```player.equipped = null``` BEFORE ```player.equipped = object``` (and get rid of the parentheses around ```object```):\r\n```\r\n// other code here\r\n\r\nplayer.equipped = null\r\nplayer.equipped = object\r\n\r\n// other code here\r\n```\r\nDo you still get that error message?\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>So if you put <code>player.equipped = null</code> BEFORE <code>player.equipped = object</code> (and get rid of the parentheses around <code>object</code>):</p>\n<pre><code>// other code here\n\nplayer.equipped = null\nplayer.equipped = object\n\n// other code here\n</code></pre>\n<p>Do you still get that error message?</p>\n\n",
      "PostDate": "2020-03-23T00:01:28.9471288Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2927b73c-4c45-473a-a947-3186c087b8ae",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I did some editing when I posted the script and had the two lines out of order. My mistake...Opps\r\nBut I assure you it is correct in the game as you pointed out.\r\n\r\nYes, I still get the error message with the null and the player.equipped = object does not show in the Equipped attribute in the debugger. I think the player.equipped = object is not correct here in this case for some reason.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I did some editing when I posted the script and had the two lines out of order. My mistake...Opps<br>\nBut I assure you it is correct in the game as you pointed out.</p>\n<p>Yes, I still get the error message with the null and the player.equipped = object does not show in the Equipped attribute in the debugger. I think the player.equipped = object is not correct here in this case for some reason.</p>\n\n",
      "PostDate": "2020-03-23T00:36:09.8571512Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ca87966e-d830-4e0d-ac12-8400ef5c76e0",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I should copy the script into a blank game and see if it works there. Otherwise, the head-scratching will continue. Let's see.",
      "EditableFormat": "markdown",
      "HTML": "<p>I should copy the script into a blank game and see if it works there. Otherwise, the head-scratching will continue. Let's see.</p>\n\n",
      "PostDate": "2020-03-23T00:41:37.6572074Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1cd9019b-fc3d-487d-87ba-34317bffc5c5",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://i.imgur.com/O07mlRtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm stumped.  Maybe someone else with more insight can suggest something.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm stumped.  Maybe someone else with more insight can suggest something.</p>\n\n",
      "PostDate": "2020-03-23T03:21:06.8313885Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f62c4d22-1b42-4f8e-8a7c-1890a897d8ff",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I found that after I equip a short sword it works if it's the first weapon I equipped. ```player.equipped = short sword```. When I try to equip another weapon, say Eagle sword all of the script works but the debugger shows that the current command is still  ```Equip short sword```, and the player equipped is still short sword as well.",
      "EditableFormat": "markdown",
      "HTML": "<p>I found that after I equip a short sword it works if it's the first weapon I equipped. <code>player.equipped = short sword</code>. When I try to equip another weapon, say Eagle sword all of the script works but the debugger shows that the current command is still  <code>Equip short sword</code>, and the player equipped is still short sword as well.</p>\n\n",
      "PostDate": "2020-03-25T00:06:56.2714845Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "24db7079-3756-4cc0-91d4-3e232c784428",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Are you sure that it's not the debugger showing the wrong info?\r\n\r\nIf you temporarily make a command that prints the currently equipped weapon, or put \"equipped\" in the player status attributes, does it show the same values as the debugger?",
      "EditableFormat": "markdown",
      "HTML": "<p>Are you sure that it's not the debugger showing the wrong info?</p>\n<p>If you temporarily make a command that prints the currently equipped weapon, or put \"equipped\" in the player status attributes, does it show the same values as the debugger?</p>\n\n",
      "PostDate": "2020-03-25T00:20:13.6307444Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "769b2d95-16fb-4879-9e2b-aa7123ec006e",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "msg (player.equpped) show the change correctly. But debugger is wrong",
      "EditableFormat": "markdown",
      "HTML": "<p>msg (player.equpped) show the change correctly. But debugger is wrong</p>\n\n",
      "PostDate": "2020-03-25T00:50:37.1835808Z",
      "LastEditDate": "2020-03-25T03:40:33.2213969Z",
      "link": null
    },
    {
      "PostId": "549653d7-5aa3-477b-af20-2e9dc44471a3",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In that case, it looks like it's a bug in the debugger. Frustrating, but not something to lose any sleep over. Just makes it a little harder to track any other problems in your code.\r\n\r\n(for debugging, I normally have a function something like `JS.console.log(ProcessText (param))`; so in the javascript console I can type `ASLEvent('Inspect', '{player.equipped}');` to quickly look at the state of variables without interrupting the game. I never tried using the proper debugger)",
      "EditableFormat": "markdown",
      "HTML": "<p>In that case, it looks like it's a bug in the debugger. Frustrating, but not something to lose any sleep over. Just makes it a little harder to track any other problems in your code.</p>\n<p>(for debugging, I normally have a function something like <code>JS.console.log(ProcessText (param))</code>; so in the javascript console I can type <code>ASLEvent('Inspect', '{player.equipped}');</code> to quickly look at the state of variables without interrupting the game. I never tried using the proper debugger)</p>\n\n",
      "PostDate": "2020-03-25T15:01:11.785285Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "000ee657-57c3-4810-bf22-dec6343f368c",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That sounds like the best option mrangel. Thanks for helping me out with this. I have spent many days on this one. 😜",
      "EditableFormat": "markdown",
      "HTML": "<p>That sounds like the best option mrangel. Thanks for helping me out with this. I have spent many days on this one. 😜</p>\n\n",
      "PostDate": "2020-03-25T16:15:48.2135263Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7f9029d9-5414-40b5-a7ea-24ba1cf2c94f",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://i.imgur.com/O07mlRtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In the Quest debugger, maybe if you click on another object and then click back to the player.equipped attribute, it will refresh and show the correct value.",
      "EditableFormat": "markdown",
      "HTML": "<p>In the Quest debugger, maybe if you click on another object and then click back to the player.equipped attribute, it will refresh and show the correct value.</p>\n\n",
      "PostDate": "2020-03-25T19:43:59.176922Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "01c6f251-e24a-4469-900b-2b38aa0f323f",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Dcoder, you hit on the problem. Everything is working in my script. I check the debugger after the equip command and it is wrong when it replaces a weapon. However, after I enter another command say, 'stats' the debugger catches up and shows correctly. \r\n\r\n#happycamper",
      "EditableFormat": "markdown",
      "HTML": "<p>Dcoder, you hit on the problem. Everything is working in my script. I check the debugger after the equip command and it is wrong when it replaces a weapon. However, after I enter another command say, 'stats' the debugger catches up and shows correctly.</p>\n<p>#happycamper</p>\n\n",
      "PostDate": "2020-03-25T20:49:40.8757406Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3b7c42a4-0904-43ca-bc52-33339e85e1b7",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://i.imgur.com/O07mlRtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Another Scooby mystery solved!  😋",
      "EditableFormat": "markdown",
      "HTML": "<p>Another Scooby mystery solved!  😋</p>\n\n",
      "PostDate": "2020-03-26T00:50:05.7015679Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
