{
  "Topic": {
    "TopicId": "cujwzmti8kkpsm9omtk2qa",
    "ForumId": "10",
    "Title": "Roll 4d6, drop lowest.",
    "LastUpdated": "2019-04-17T09:44:30.0891939Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "9185364c-068c-4f82-ae18-2a81cf4a71e2",
      "UserId": 414779,
      "Username": "TesElentai",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a3cf6c10ba797ee7f2ae080e4d188d59?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So, I can roll 4d6, and get it to tell me what each number is and the total, by using the following code:\r\n\r\nparams = NewDictionary()\r\ndictionary add (params, \"r1\", DiceRoll(\"1d6\"))\r\ndictionary add (params, \"r2\", DiceRoll(\"1d6\"))\r\ndictionary add (params, \"r3\", DiceRoll(\"1d6\"))\r\ndictionary add (params, \"r4\", DiceRoll(\"1d6\"))\r\nmsg (Eval (\"r1\", params))\r\nmsg (Eval (\"r2\", params))\r\nmsg (Eval (\"r3\", params))\r\nmsg (Eval (\"r4\", params))\r\nmsg (Eval (\"r1 + r2 + r3 + r4\", params))\r\n\r\nIs there any way to get it to evaluate which number of the four is the minimum, ie the lowest? Ideally I would like to get it to tell me the lowest number, so that I can roll 4d6, and get it to drop the lowest.\r\n\r\nAfter that I will work on getting it to do that 6 times.\r\n\r\nIf anyone can help, that would be cool. Thanks. ",
      "EditableFormat": "markdown",
      "HTML": "<p>So, I can roll 4d6, and get it to tell me what each number is and the total, by using the following code:</p>\n<p>params = NewDictionary()<br>\ndictionary add (params, \"r1\", DiceRoll(\"1d6\"))<br>\ndictionary add (params, \"r2\", DiceRoll(\"1d6\"))<br>\ndictionary add (params, \"r3\", DiceRoll(\"1d6\"))<br>\ndictionary add (params, \"r4\", DiceRoll(\"1d6\"))<br>\nmsg (Eval (\"r1\", params))<br>\nmsg (Eval (\"r2\", params))<br>\nmsg (Eval (\"r3\", params))<br>\nmsg (Eval (\"r4\", params))<br>\nmsg (Eval (\"r1 + r2 + r3 + r4\", params))</p>\n<p>Is there any way to get it to evaluate which number of the four is the minimum, ie the lowest? Ideally I would like to get it to tell me the lowest number, so that I can roll 4d6, and get it to drop the lowest.</p>\n<p>After that I will work on getting it to do that 6 times.</p>\n<p>If anyone can help, that would be cool. Thanks.</p>\n\n",
      "PostDate": "2019-04-17T09:44:30.0891939Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0e6293a2-fbc6-4141-8889-91e993ea3ba0",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Not sure why you've decided to use Eval here rather than a straightforward expression; but I'll approach it in the same way.\r\n\r\n(I'm replacing `DiceRoll(\"1d6\")` with `GetRandomInt(1, 6)` because it's much more efficient, and not really any harder to read. If you're getting the string from somewhere else, then you can do the same with DiceRoll)\r\n\r\n```\r\nparams = NewDictionary()\r\nlowest = 6\r\nfor (roll, 1, 4) {\r\n  this_die = GetRandomInt(1, 6)\r\n  dictionary add (params, \"r\"+roll, this_die)\r\n  if (this_die < lowest) {\r\n    lowest = this_die\r\n  }\r\n}\r\ndictionary add (params, \"lowest\", lowest)\r\nmsg (\"First die: \" + Eval (\"r1\", params))\r\nmsg (\"Second die: \" + Eval (\"r2\", params))\r\nmsg (\"Third die: \" + Eval (\"r3\", params))\r\nmsg (\"Fourth die: \" + Eval (\"r4\", params))\r\nmsg (\"Total: \" + Eval (\"r1 + r2 + r3 + r4\", params))\r\nmsg (\"Total dropping lowest: \" + Eval (\"r1 + r2 + r3 + r4 - lowest\", params))\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Not sure why you've decided to use Eval here rather than a straightforward expression; but I'll approach it in the same way.</p>\n<p>(I'm replacing <code>DiceRoll(\"1d6\")</code> with <code>GetRandomInt(1, 6)</code> because it's much more efficient, and not really any harder to read. If you're getting the string from somewhere else, then you can do the same with DiceRoll)</p>\n<pre><code>params = NewDictionary()\nlowest = 6\nfor (roll, 1, 4) {\n  this_die = GetRandomInt(1, 6)\n  dictionary add (params, \"r\"+roll, this_die)\n  if (this_die &lt; lowest) {\n    lowest = this_die\n  }\n}\ndictionary add (params, \"lowest\", lowest)\nmsg (\"First die: \" + Eval (\"r1\", params))\nmsg (\"Second die: \" + Eval (\"r2\", params))\nmsg (\"Third die: \" + Eval (\"r3\", params))\nmsg (\"Fourth die: \" + Eval (\"r4\", params))\nmsg (\"Total: \" + Eval (\"r1 + r2 + r3 + r4\", params))\nmsg (\"Total dropping lowest: \" + Eval (\"r1 + r2 + r3 + r4 - lowest\", params))\n</code></pre>\n\n",
      "PostDate": "2019-04-17T17:30:09.9614526Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "91ad888f-4632-429e-b4cf-cd67d5596084",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "as 'mrangel' already showed, you just iterate/cycle through a collection (via 'foreach' and/or 'for' and/or 'while'), comparing previous value (stored in a variable) to current value being checked, and storing the value (in the variable), if it's lower/higher than the previous value\r\n\r\n(Important: for lists/arrays, the first value, uses the index number of '0' for its reference, they do NOT start with the index number of '1' -- this takes a bit to get used to, and thus the index number of the last value is: ListCount(LIST) - 1)\r\n\r\n```\r\n// creating a random collection of values:\r\n\r\n// (for my example, the range of total sum of the values are: 0 to 100: 0x10 to 10x10)\r\n\r\n// creating an Object:\r\n\r\ncreate (\"example_object\")\r\n\r\n// creating a new/blank collection (in this example, a string list -- a list and an array are nearly the same thing, quest doesn't have arrays, only lists and dictionaries) attribute:\r\n\r\nexample_object.example_stringlist_attribute = NewStringList ()\r\n\r\n// generating the random values and storing them into the collection:\r\n\r\nfor (unused_iterator_variable, 0, 9) {\r\n  list add (example_object.example_stringlist_attribute, ToString (GetRandomInt (0,10)))\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\n// getting/finding the lowest and highest values:\r\n\r\n// storing the first value in the collection into both the lowest and highest variables:\r\n\r\nexample_object.lowest_value_integer_attribute = ToInt (StringListItem (example_object.example_stringlist_attribute, 0))\r\nexample_object.highest_value_integer_attribute = example_object.lowest_value_integer_attribute\r\n\r\n// starting with the next value in the collection, checking if its higher/lower, and storing it into its higher/lower variable if it is:\r\n\r\nfor (iterator_variable, 1, 9) {\r\n\r\n  current_value_variable = ToInt (StringListItem (example_object.example_stringlist_attribute, iterator_variable))\r\n\r\n  if (current_value_variable > example_object.highest_value_integer_attribute) {\r\n    example_object.highest_value_integer_attribute = current_value_variable\r\n  } else if (current_value_variable < example_object.lowest_value_integer_attribute) {\r\n    example_object.lowest_value_integer_attribute = current_value_variable\r\n  }\r\n\r\n}\r\n\r\n// displaying the highest and lowest values:\r\n\r\nmsg (\"Highest Value: \" + example_object.highest_value_integer_attribute)\r\nmsg (\"Lowest Value: \" + example_object.lowest_value_integer_attribute)\r\n```\r\n\r\n---------\r\n\r\nthere's even more fancy/advanced designs you can do if you have a big collection (binary tree sorting) of values (using binary search):\r\n\r\nhttps://en.wikipedia.org/wiki/Binary_search_algorithm (binary searching: requires collection to already be sorted from lowest to highest, or it could be done from highest to lowest too... I think... but easier to just do lowest to highest... unless for some reason its better to do highest to lowest, lol)\r\n\r\nhttps://en.wikipedia.org/wiki/Binary_search_tree (binary tree sorting)",
      "EditableFormat": "markdown",
      "HTML": "<p>as 'mrangel' already showed, you just iterate/cycle through a collection (via 'foreach' and/or 'for' and/or 'while'), comparing previous value (stored in a variable) to current value being checked, and storing the value (in the variable), if it's lower/higher than the previous value</p>\n<p>(Important: for lists/arrays, the first value, uses the index number of '0' for its reference, they do NOT start with the index number of '1' -- this takes a bit to get used to, and thus the index number of the last value is: ListCount(LIST) - 1)</p>\n<pre><code>// creating a random collection of values:\n\n// (for my example, the range of total sum of the values are: 0 to 100: 0x10 to 10x10)\n\n// creating an Object:\n\ncreate (\"example_object\")\n\n// creating a new/blank collection (in this example, a string list -- a list and an array are nearly the same thing, quest doesn't have arrays, only lists and dictionaries) attribute:\n\nexample_object.example_stringlist_attribute = NewStringList ()\n\n// generating the random values and storing them into the collection:\n\nfor (unused_iterator_variable, 0, 9) {\n  list add (example_object.example_stringlist_attribute, ToString (GetRandomInt (0,10)))\n}\n\n// ----------------------------------------------------------------------------\n\n// getting/finding the lowest and highest values:\n\n// storing the first value in the collection into both the lowest and highest variables:\n\nexample_object.lowest_value_integer_attribute = ToInt (StringListItem (example_object.example_stringlist_attribute, 0))\nexample_object.highest_value_integer_attribute = example_object.lowest_value_integer_attribute\n\n// starting with the next value in the collection, checking if its higher/lower, and storing it into its higher/lower variable if it is:\n\nfor (iterator_variable, 1, 9) {\n\n  current_value_variable = ToInt (StringListItem (example_object.example_stringlist_attribute, iterator_variable))\n\n  if (current_value_variable &gt; example_object.highest_value_integer_attribute) {\n    example_object.highest_value_integer_attribute = current_value_variable\n  } else if (current_value_variable &lt; example_object.lowest_value_integer_attribute) {\n    example_object.lowest_value_integer_attribute = current_value_variable\n  }\n\n}\n\n// displaying the highest and lowest values:\n\nmsg (\"Highest Value: \" + example_object.highest_value_integer_attribute)\nmsg (\"Lowest Value: \" + example_object.lowest_value_integer_attribute)\n</code></pre>\n<hr>\n<p>there's even more fancy/advanced designs you can do if you have a big collection (binary tree sorting) of values (using binary search):</p>\n<p>https://en.wikipedia.org/wiki/Binary_search_algorithm (binary searching: requires collection to already be sorted from lowest to highest, or it could be done from highest to lowest too... I think... but easier to just do lowest to highest... unless for some reason its better to do highest to lowest, lol)</p>\n<p>https://en.wikipedia.org/wiki/Binary_search_tree (binary tree sorting)</p>\n\n",
      "PostDate": "2019-04-17T20:32:22.14751Z",
      "LastEditDate": "2019-04-17T21:02:21.6289608Z",
      "link": null
    },
    {
      "PostId": "37ea2be1-60bf-4099-b493-4dd3991408a1",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've done this sort of thing in Basic all the time, just don't remember how I did it...\r\nBUT, another option could be to use split in another way...\r\nR1= DiceRoll(\"1d6\")\r\nR2= DiceRoll(\"1d6\")\r\nR3= DiceRoll(\"1d6\")\r\nR4= DiceRoll(\"1d6\")\r\n(I like caps for variables... personal choice)\r\nRoll=split(\"0;0;0;0;0;0;0\")\r\n// skip 0 index...\r\nI think the next part will work:\r\n(I wanted to: select R1, add 1 to the R1 location in the list...)\r\nIE:\r\nR1=3, so add 1 to the position 3 in the list, so that:\r\nRoll=split(\"0,0,0,1,0,0,0\")\r\nthen just count up, and subtract 1 from the first non-zero value...\r\nThen, as in programming, Ver. 2.0...\r\n// Number of each die count\r\nD1=0\r\nD2=0\r\nD3=0\r\nD4=0\r\nD5=0\r\nD6=0\r\nIf (R1=1){\r\nD1=D1+1\r\n}\r\nif (R1=2){\r\nD2=D2+1\r\n}\r\nand so on for each number (1-6)\r\nthen again for each die (#1-#4)\r\n(Yes, a function would be the best choice here)\r\nThen count up from D1 to find the first non-zero value, subtract 1,\r\nthen count D1 to D6, adding up the count:\r\nTotal= (D1*1) + (D2*2) + (D3*3) + (D4*4) + (D5*5) + (D6*6)\r\n\r\nOK, now you have 2 more ways to do it...\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I've done this sort of thing in Basic all the time, just don't remember how I did it...<br>\nBUT, another option could be to use split in another way...<br>\nR1= DiceRoll(\"1d6\")<br>\nR2= DiceRoll(\"1d6\")<br>\nR3= DiceRoll(\"1d6\")<br>\nR4= DiceRoll(\"1d6\")<br>\n(I like caps for variables... personal choice)<br>\nRoll=split(\"0;0;0;0;0;0;0\")<br>\n// skip 0 index...<br>\nI think the next part will work:<br>\n(I wanted to: select R1, add 1 to the R1 location in the list...)<br>\nIE:<br>\nR1=3, so add 1 to the position 3 in the list, so that:<br>\nRoll=split(\"0,0,0,1,0,0,0\")<br>\nthen just count up, and subtract 1 from the first non-zero value...<br>\nThen, as in programming, Ver. 2.0...<br>\n// Number of each die count<br>\nD1=0<br>\nD2=0<br>\nD3=0<br>\nD4=0<br>\nD5=0<br>\nD6=0<br>\nIf (R1=1){<br>\nD1=D1+1<br>\n}<br>\nif (R1=2){<br>\nD2=D2+1<br>\n}<br>\nand so on for each number (1-6)<br>\nthen again for each die (#1-#4)<br>\n(Yes, a function would be the best choice here)<br>\nThen count up from D1 to find the first non-zero value, subtract 1,<br>\nthen count D1 to D6, adding up the count:<br>\nTotal= (D1<em>1) + (D2</em>2) + (D3<em>3) + (D4</em>4) + (D5<em>5) + (D6</em>6)</p>\n<p>OK, now you have 2 more ways to do it...</p>\n\n",
      "PostDate": "2019-04-18T01:51:29.9595375Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2b7fa6ab-dec9-4472-a0b1-4dcafdbcd3aa",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OR... option #3...\r\nLike my first version but add the value of each die roll to the list.\r\n(Not the count)\r\nIE, you roll 4,2,6,1\r\nadd each to the list so that:\r\nRoll=(\"4;2;6;1\")\r\nthen use \"ObjectListSort\" to sort the list, then subtract the first item...\r\n(Altho, I think ObjectListSort uses objects to sort in the list. so, make 4 objects called die with an attribute called number...)\r\nOR... option #4:\r\nas you roll each die, do a bubble sort to sort the dice so that the bottom value it the lowest, and drop that...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>OR... option #3...<br>\nLike my first version but add the value of each die roll to the list.<br>\n(Not the count)<br>\nIE, you roll 4,2,6,1<br>\nadd each to the list so that:<br>\nRoll=(\"4;2;6;1\")<br>\nthen use \"ObjectListSort\" to sort the list, then subtract the first item...<br>\n(Altho, I think ObjectListSort uses objects to sort in the list. so, make 4 objects called die with an attribute called number...)<br>\nOR... option #4:<br>\nas you roll each die, do a bubble sort to sort the dice so that the bottom value it the lowest, and drop that...</p>\n\n",
      "PostDate": "2019-04-18T02:01:52.3368735Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3096f99f-8aec-4d4e-bfa7-22c7fa5cb8af",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I can't update my first post, but the total line should have been:\r\n````Total= (D1*1) + (D2*2) + (D3*3) + (D4*4) + (D5*5) + (D6*6)````",
      "EditableFormat": "markdown",
      "HTML": "<p>I can't update my first post, but the total line should have been:<br>\n<code>Total= (D1*1) + (D2*2) + (D3*3) + (D4*4) + (D5*5) + (D6*6)</code></p>\n\n",
      "PostDate": "2019-04-18T02:08:24.5321138Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6093c2f0-bdc0-4f9d-8850-686c9311f698",
      "UserId": 414779,
      "Username": "TesElentai",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a3cf6c10ba797ee7f2ae080e4d188d59?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Awesome!!! Thank you very mrangel, that was incredibly helpful!!! Also thank you to hegemonkhan and DarkLizerd for your input as well!!!\r\n\r\nI only started with Quest about two or three days ago, I have just been through the tutorial, so getting it to do a random roll and tell me what it rolled was an achievement, lol. All of your responses have helped a lot in helping me to understand how the code works, what it means, and what can be done with it! :)\r\n\r\n[quote]Not sure why you've decided to use Eval here rather than a straightforward expression[/quote]\r\n\r\nMainly because I did not know how to get the same result without using Eval, lol. I mashed together two or three things I found in the tutorial and modified them to come up with the stuff from the original post. \r\n\r\nThanks again!!! :)\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Awesome!!! Thank you very mrangel, that was incredibly helpful!!! Also thank you to hegemonkhan and DarkLizerd for your input as well!!!</p>\n<p>I only started with Quest about two or three days ago, I have just been through the tutorial, so getting it to do a random roll and tell me what it rolled was an achievement, lol. All of your responses have helped a lot in helping me to understand how the code works, what it means, and what can be done with it! :)</p>\n<p>[quote]Not sure why you've decided to use Eval here rather than a straightforward expression[/quote]</p>\n<p>Mainly because I did not know how to get the same result without using Eval, lol. I mashed together two or three things I found in the tutorial and modified them to come up with the stuff from the original post.</p>\n<p>Thanks again!!! :)</p>\n\n",
      "PostDate": "2019-04-18T07:56:02.2376333Z",
      "LastEditDate": "2019-04-18T07:56:37.1393888Z",
      "link": null
    },
    {
      "PostId": "670e8019-3ee1-4695-b3c5-1a221c04ce71",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Using eval here is pretty weird. There are situations where it could be useful, but they're pretty rare and complex.\r\n\r\nThis is how I'd expect it to look in a usual beginner's code:\r\n\r\n```\r\nparams = NewDictionary()\r\nr1 = GetRandomInt(1, 6)\r\nlowest = r1\r\nr2 = GetRandomInt(1, 6)\r\nif (r2 < lowest) {\r\n  lowest = r2\r\n}\r\nr3 = GetRandomInt(1, 6)\r\nif (r3 < lowest) {\r\n  lowest = r3\r\n}\r\nr4 = GetRandomInt(1, 6)\r\nif (r4 < lowest) {\r\n  lowest = r4\r\n}\r\n\r\nmsg (\"First die: \" + r1)\r\nmsg (\"Second die: \" + r2)\r\nmsg (\"Third die: \" + r3)\r\nmsg (\"Fourth die: \" + r4)\r\nmsg (\"Total: \" + (r1 + r2 + r3 + r4))\r\nmsg (\"Total dropping lowest: \" + (r1 + r2 + r3 + r4 - lowest))\r\n```\r\n\r\nAnd how a programmer would probably approach it:\r\n```\r\nresults = NewStringList()\r\ntotal = 0\r\nlowest = 6\r\nfor (i, 1, 4) {\r\n  roll = GetRandomInt (1, 6)\r\n  total = total + roll\r\n  if (roll < lowest) {\r\n    lowest = roll\r\n  }\r\n  list add (results, ToWords(roll))\r\n}\r\nmsg (\"Dice: \" + Join (results, \", \"))\r\nmsg (\"Result: \" + ToWords(total-lowest))\r\n```\r\n\r\n(When outputting numbers, you can use `ToString` to get output like `\"2\"`; or `ToWords` if you want it to say `\"three\"` in the output. If you don't include one of those functions it will use ToString by default. I believe there's also a `ToRoman`, if you prefer it to look like that.\r\n\r\nIf you ever use decimals, you should explicitly specify ToString, because implicit conversion behaves oddly depending on the user's language settings)",
      "EditableFormat": "markdown",
      "HTML": "<p>Using eval here is pretty weird. There are situations where it could be useful, but they're pretty rare and complex.</p>\n<p>This is how I'd expect it to look in a usual beginner's code:</p>\n<pre><code>params = NewDictionary()\nr1 = GetRandomInt(1, 6)\nlowest = r1\nr2 = GetRandomInt(1, 6)\nif (r2 &lt; lowest) {\n  lowest = r2\n}\nr3 = GetRandomInt(1, 6)\nif (r3 &lt; lowest) {\n  lowest = r3\n}\nr4 = GetRandomInt(1, 6)\nif (r4 &lt; lowest) {\n  lowest = r4\n}\n\nmsg (\"First die: \" + r1)\nmsg (\"Second die: \" + r2)\nmsg (\"Third die: \" + r3)\nmsg (\"Fourth die: \" + r4)\nmsg (\"Total: \" + (r1 + r2 + r3 + r4))\nmsg (\"Total dropping lowest: \" + (r1 + r2 + r3 + r4 - lowest))\n</code></pre>\n<p>And how a programmer would probably approach it:</p>\n<pre><code>results = NewStringList()\ntotal = 0\nlowest = 6\nfor (i, 1, 4) {\n  roll = GetRandomInt (1, 6)\n  total = total + roll\n  if (roll &lt; lowest) {\n    lowest = roll\n  }\n  list add (results, ToWords(roll))\n}\nmsg (\"Dice: \" + Join (results, \", \"))\nmsg (\"Result: \" + ToWords(total-lowest))\n</code></pre>\n<p>(When outputting numbers, you can use <code>ToString</code> to get output like <code>\"2\"</code>; or <code>ToWords</code> if you want it to say <code>\"three\"</code> in the output. If you don't include one of those functions it will use ToString by default. I believe there's also a <code>ToRoman</code>, if you prefer it to look like that.</p>\n<p>If you ever use decimals, you should explicitly specify ToString, because implicit conversion behaves oddly depending on the user's language settings)</p>\n\n",
      "PostDate": "2019-04-18T10:29:40.6251437Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "87d149fc-27f3-4683-9dc7-b3a7874044ea",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Why??? What does Popeyes have to do this finding out the lowest number of rolling 4 dice???\r\nAltho, I like the Roll a die, and check if it is the lowest one... and updating it if it is...\r\n(But it's too simple to work without 95 more lines written assembly to make sure it works for every\r\ncombination of 4 dice!!!  🤣🤣🤣 )\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Why??? What does Popeyes have to do this finding out the lowest number of rolling 4 dice???<br>\nAltho, I like the Roll a die, and check if it is the lowest one... and updating it if it is...<br>\n(But it's too simple to work without 95 more lines written assembly to make sure it works for every<br>\ncombination of 4 dice!!!  🤣🤣🤣 )</p>\n\n",
      "PostDate": "2019-04-19T03:08:20.1883036Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8e26bec0-198a-4d4b-8fea-c628a733796c",
      "UserId": 414779,
      "Username": "TesElentai",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a3cf6c10ba797ee7f2ae080e4d188d59?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "dalogumix seems to either be a bot, or someone who is posting random links to things, if you check the other recent threads in this forum.\r\n\r\nCool, thanks mrangel! Good to know about ToString and ToWords! And I see what you mean about it being weird to use eval in this situation, now that I have seen the alternatives. \r\n\r\nAnd DarkLizerd, I like that approach as well, pretty elegant and not one that I would have known how to do on my own.  :)",
      "EditableFormat": "markdown",
      "HTML": "<p>dalogumix seems to either be a bot, or someone who is posting random links to things, if you check the other recent threads in this forum.</p>\n<p>Cool, thanks mrangel! Good to know about ToString and ToWords! And I see what you mean about it being weird to use eval in this situation, now that I have seen the alternatives.</p>\n<p>And DarkLizerd, I like that approach as well, pretty elegant and not one that I would have known how to do on my own.  :)</p>\n\n",
      "PostDate": "2019-04-19T08:16:42.4600095Z",
      "LastEditDate": "2019-04-19T09:37:11.2198369Z",
      "link": null
    },
    {
      "PostId": "09195e07-6920-476d-b0f0-c38b3fad255d",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I removed the Popeyes post from dalogumix.  ",
      "EditableFormat": "markdown",
      "HTML": "<p>I removed the Popeyes post from dalogumix.</p>\n\n",
      "PostDate": "2019-04-29T12:28:21.8645667Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
