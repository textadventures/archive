{
  "Topic": {
    "TopicId": "53n9tdnjuuwkj35ianwlta",
    "ForumId": "10",
    "Title": "[SOLVED] \"Type here\" command line prompt",
    "LastUpdated": "2020-01-05T18:19:39.6808792Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "9a17fbc4-7726-4910-80c0-43d5b74e5fc2",
      "UserId": 247261,
      "Username": "Motorzilla",
      "AvatarUrl": "https://i.imgur.com/x5RHXIlb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In an old (2016) trial run of Quest, I seem to have managed to stick a greater-than sign (\">\") there instead. I don't know how. I don't know where. The regular command bar with borders is chosen, no \"use cursor instead\" box ticked. I've looked to see if it's merely hidden by clever use of colours, but no: it goes away when typing, suggesting it's a complete replacement. I can't even find where in the code editor \"type here...\" is defined!\r\n\r\nWas it part of old standard to be able to pick the filled in text? Can we no longer do this?",
      "EditableFormat": "markdown",
      "HTML": "<p>In an old (2016) trial run of Quest, I seem to have managed to stick a greater-than sign (\"&gt;\") there instead. I don't know how. I don't know where. The regular command bar with borders is chosen, no \"use cursor instead\" box ticked. I've looked to see if it's merely hidden by clever use of colours, but no: it goes away when typing, suggesting it's a complete replacement. I can't even find where in the code editor \"type here...\" is defined!</p>\n<p>Was it part of old standard to be able to pick the filled in text? Can we no longer do this?</p>\n\n",
      "PostDate": "2020-01-05T18:19:39.6808792Z",
      "LastEditDate": "2020-01-05T20:07:46.434941Z",
      "link": null
    },
    {
      "PostId": "2e473b78-95ba-4cf5-802b-d2a577ebdfd0",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It's not in the GUI. It's the value of the template `TypeHereLabel`.\r\n\r\nTo change it, you could either override that template (which I think you can only do in full code view, but I could be wrong) by adding: ```<template name=\"TypeHereLabel\">Your text here</template>``` after the line `<include ref=\"English.aslx\" />`.\r\n\r\nDuring the game, you can change it using the following command:\r\n```\r\nJS.setInterfaceString(\"TypeHereLabel\", \"Insert your new label here...\")\r\n```\r\nThis will be reset when loading a saved game, as it's only stored in the javascript front end. So if you want your changes to be there when a saved game is restored, you need to put it in the UI Initialisation script, which is run before starting a game and before resuming a saved game. (UI Initialisation script is on the game's \"Advanced Scripts\" tab, which must first be enabled using a tickbox on the \"Features\" tab)",
      "EditableFormat": "markdown",
      "HTML": "<p>It's not in the GUI. It's the value of the template <code>TypeHereLabel</code>.</p>\n<p>To change it, you could either override that template (which I think you can only do in full code view, but I could be wrong) by adding: <code>&lt;template name=\"TypeHereLabel\"&gt;Your text here&lt;/template&gt;</code> after the line <code>&lt;include ref=\"English.aslx\" /&gt;</code>.</p>\n<p>During the game, you can change it using the following command:</p>\n<pre><code>JS.setInterfaceString(\"TypeHereLabel\", \"Insert your new label here...\")\n</code></pre>\n<p>This will be reset when loading a saved game, as it's only stored in the javascript front end. So if you want your changes to be there when a saved game is restored, you need to put it in the UI Initialisation script, which is run before starting a game and before resuming a saved game. (UI Initialisation script is on the game's \"Advanced Scripts\" tab, which must first be enabled using a tickbox on the \"Features\" tab)</p>\n\n",
      "PostDate": "2020-01-05T19:42:09.9732409Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cb87d89c-9442-409d-8170-5c0703692c57",
      "UserId": 247261,
      "Username": "Motorzilla",
      "AvatarUrl": "https://i.imgur.com/x5RHXIlb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Worked beautifully, thank you so much once again.",
      "EditableFormat": "markdown",
      "HTML": "<p>Worked beautifully, thank you so much once again.</p>\n\n",
      "PostDate": "2020-01-05T20:07:21.3745196Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3e75a713-27b6-4806-bdd9-51332955ba0e",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "JS.setInterfaceString can be used in the same way to set the strings: \"InventoryLabel\", \"CompassLabel\", \"PlacesObjectsLabel\", \"InButtonLabel\", \"OutButtonLabel\", or \"ContinueLabel\".\r\n\r\n(It also allows you to set \"NothingSelectedLabel\" and \"EmptyListLabel\", which I assume are holdovers from a previous version of Quest, because the strings are discarded without being displayed anywhere)",
      "EditableFormat": "markdown",
      "HTML": "<p>JS.setInterfaceString can be used in the same way to set the strings: \"InventoryLabel\", \"CompassLabel\", \"PlacesObjectsLabel\", \"InButtonLabel\", \"OutButtonLabel\", or \"ContinueLabel\".</p>\n<p>(It also allows you to set \"NothingSelectedLabel\" and \"EmptyListLabel\", which I assume are holdovers from a previous version of Quest, because the strings are discarded without being displayed anywhere)</p>\n\n",
      "PostDate": "2020-01-05T20:12:48.1970573Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "084206ac-7d9d-4ffd-97c8-d9ea9b36a917",
      "UserId": 247261,
      "Username": "Motorzilla",
      "AvatarUrl": "https://i.imgur.com/x5RHXIlb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's really interesting; what's the continue label for? Some kind of \"click here to continue\" button?",
      "EditableFormat": "markdown",
      "HTML": "<p>That's really interesting; what's the continue label for? Some kind of \"click here to continue\" button?</p>\n\n",
      "PostDate": "2020-01-05T21:00:44.9223185Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d34140df-3ebc-48dc-af8f-65905d26e52f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes; used by the `wait` command (\"Wait for key press\" in the GUI). While waiting, a \"Continue...\" link replaces the command bar.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes; used by the <code>wait</code> command (\"Wait for key press\" in the GUI). While waiting, a \"Continue...\" link replaces the command bar.</p>\n\n",
      "PostDate": "2020-01-05T21:19:23.3007789Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8276ce99-2275-43aa-a9b1-422733aa7b36",
      "UserId": 247261,
      "Username": "Motorzilla",
      "AvatarUrl": "https://i.imgur.com/x5RHXIlb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Seeing as how it's a string, does that mean that it might possibly be slave to some css, if one wanted to make it, say, center it and blink...",
      "EditableFormat": "markdown",
      "HTML": "<p>Seeing as how it's a string, does that mean that it might possibly be slave to some css, if one wanted to make it, say, center it and blink...</p>\n\n",
      "PostDate": "2020-01-05T22:03:23.5571215Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "749266e2-efad-41a4-a554-e32a36c0bd1a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Setting CSS for it should work fine. Here's the link:\r\n```\r\n<a id=\"endWaitLink\" onclick=\"endWait();\" class=\"cmdlink\" style=\"display: none\">Continue...</a>\r\n```\r\nsetInterfaceString sets the HTML inside it to the provided string; you should be able to do anything you want either by passing HTML, or setting CSS rules for #endWaitLink.",
      "EditableFormat": "markdown",
      "HTML": "<p>Setting CSS for it should work fine. Here's the link:</p>\n<pre><code>&lt;a id=\"endWaitLink\" onclick=\"endWait();\" class=\"cmdlink\" style=\"display: none\"&gt;Continue...&lt;/a&gt;\n</code></pre>\n<p>setInterfaceString sets the HTML inside it to the provided string; you should be able to do anything you want either by passing HTML, or setting CSS rules for #endWaitLink.</p>\n\n",
      "PostDate": "2020-01-05T22:19:38.3497983Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a5a8c471-e915-4dfa-8c31-646e2c3632d7",
      "UserId": 247261,
      "Username": "Motorzilla",
      "AvatarUrl": "https://i.imgur.com/x5RHXIlb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Been poking around a little and can't figure out where an ```<a>``` link should best go. It doesn't work inside or outside of the ```<game>``` tag. Just using the setInterfaceString works fine of course, as my original query, but perhaps I misunderstood you when you said you could pass html directly to the string? As it counts as nesting xml.",
      "EditableFormat": "markdown",
      "HTML": "<p>Been poking around a little and can't figure out where an <code>&lt;a&gt;</code> link should best go. It doesn't work inside or outside of the <code>&lt;game&gt;</code> tag. Just using the setInterfaceString works fine of course, as my original query, but perhaps I misunderstood you when you said you could pass html directly to the string? As it counts as nesting xml.</p>\n\n",
      "PostDate": "2020-01-05T22:59:32.311053Z",
      "LastEditDate": "2020-01-05T23:00:34.9887678Z",
      "link": null
    },
    {
      "PostId": "26311d29-0f86-4d29-8de3-e26154bd82c5",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The `<a>` tag I passed is part of the initial user interface; you don't need to put it anywhere.\r\n\r\nThe setInterfaceString function inserts its parameter as the *contents* of that element (replacing the default \"Continue...\" in that line). So you can always include `<b>` or whatever; but including another `<a>` is probably a bad idea as you'd be putting two anchors inside each other, and different browsers have different behaviour when you do that.\r\n\r\nIf you want to apply extra CSS to that element, you would do something like:\r\n```\r\nJS.setCss(\"#endWaitLink\", \"text-decoration:underline\")\r\n```\r\nor whatever changes you want to make to it.",
      "EditableFormat": "markdown",
      "HTML": "<p>The <code>&lt;a&gt;</code> tag I passed is part of the initial user interface; you don't need to put it anywhere.</p>\n<p>The setInterfaceString function inserts its parameter as the <em>contents</em> of that element (replacing the default \"Continue...\" in that line). So you can always include <code>&lt;b&gt;</code> or whatever; but including another <code>&lt;a&gt;</code> is probably a bad idea as you'd be putting two anchors inside each other, and different browsers have different behaviour when you do that.</p>\n<p>If you want to apply extra CSS to that element, you would do something like:</p>\n<pre><code>JS.setCss(\"#endWaitLink\", \"text-decoration:underline\")\n</code></pre>\n<p>or whatever changes you want to make to it.</p>\n\n",
      "PostDate": "2020-01-05T23:43:31.7348298Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7d87d9c9-7f74-44bb-96b4-d1a990746058",
      "UserId": 247261,
      "Username": "Motorzilla",
      "AvatarUrl": "https://i.imgur.com/x5RHXIlb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks mate, that did the trick, and for explaining the differences: I get it now! It didn't want to take an alignment, but that I can understand since it's probably part of a div or something similar. This gives ample room to mess around with stuff, so I really appreciate you taking your time for my sake :>\r\n\r\n(As an aside, how have you gotten to know this much info about the inner workings of Quest? Dev? Long time user?)",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks mate, that did the trick, and for explaining the differences: I get it now! It didn't want to take an alignment, but that I can understand since it's probably part of a div or something similar. This gives ample room to mess around with stuff, so I really appreciate you taking your time for my sake :&gt;</p>\n<p>(As an aside, how have you gotten to know this much info about the inner workings of Quest? Dev? Long time user?)</p>\n\n",
      "PostDate": "2020-01-06T00:13:26.973149Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fbdbe154-5e83-45c2-b8de-e4a64d3f36b8",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think I've been poking around in Quest for about 2 years now. I probably don't know that much, but I'd like to think I'm pretty good at finding stuff. I've skim-read most of the script in the \"Core\" libraries while trying to find answers to people's questions, so I think I've got a pretty good handle on the structure of most of them. I've got shortcuts saved to `playercore.htm` and `playercore.js` because most of the time questions about the UI can be answered by looking in those two files. <small>(They make up the \"front end\" of Quest. The desktop player is just an embedded copy of Chromium displaying a single page, with the Quest backend calling javascript functions on it)</small>",
      "EditableFormat": "markdown",
      "HTML": "<p>I think I've been poking around in Quest for about 2 years now. I probably don't know that much, but I'd like to think I'm pretty good at finding stuff. I've skim-read most of the script in the \"Core\" libraries while trying to find answers to people's questions, so I think I've got a pretty good handle on the structure of most of them. I've got shortcuts saved to <code>playercore.htm</code> and <code>playercore.js</code> because most of the time questions about the UI can be answered by looking in those two files. <small>(They make up the \"front end\" of Quest. The desktop player is just an embedded copy of Chromium displaying a single page, with the Quest backend calling javascript functions on it)</small></p>\n\n",
      "PostDate": "2020-01-06T00:24:22.2449798Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
