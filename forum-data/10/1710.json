{
  "Topic": {
    "TopicId": "1710",
    "ForumId": "10",
    "Title": "Other IF game systems",
    "LastUpdated": "2007-07-21T02:31:05+01:00",
    "ReplyCount": 33
  },
  "Posts": [
    {
      "PostId": "13484",
      "UserId": 0,
      "Username": "henrytj",
      "UserAvatar": null,
      "UserGravatar": "5f6247178d5dd662b392a89e1e31284c",
      "EditableText": "I am considering proposing a course in IF game making to the community college where I teach part-time. I have been warned in another thread here that Quest should probably not be considered. (Despite the Quest home page.) \r\n\r\nCan anyone suggest alternative IF based game making systems. They should not require programming skills and media elements (art and audio) inclusion would be nice. Also, by the way, free if possible, at least for a try-out version and not more than $50 for a full version. A point-and-click construction interface would be ideal. I have looked at &quot;natural-language&quot; systems like Inform and can see the possible problems with these.\r\n\r\nHenry",
      "EditableFormat": "bbcode",
      "HTML": "I am considering proposing a course in IF game making to the community college where I teach part-time. I have been warned in another thread here that Quest should probably not be considered. (Despite the Quest home page.) <br/><br/>Can anyone suggest alternative IF based game making systems. They should not require programming skills and media elements (art and audio) inclusion would be nice. Also, by the way, free if possible, at least for a try-out version and not more than $50 for a full version. A point-and-click construction interface would be ideal. I have looked at &quot;natural-language&quot; systems like Inform and can see the possible problems with these.<br/><br/>Henry",
      "PostDate": "2007-07-12T07:09:43+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13486",
      "UserId": 0,
      "Username": "Elexxorine",
      "UserAvatar": null,
      "UserGravatar": "a220ee44d8fe2f07029cf1f61b98bf40",
      "EditableText": "Stick with Quest, I'll help you in doing it if you want. <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->",
      "EditableFormat": "bbcode",
      "HTML": "Stick with Quest, I'll help you in doing it if you want. <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->",
      "PostDate": "2007-07-12T10:41:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13489",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "If you only ask on the Quest forum, you're going to get responses heavily biased towards Quest.  Try asking (usenet) rec.arts.int-fiction / rec.games.int-fiction , followed by the IF Mud <!-- m --><a class=\"postlink\" href=\"http://ifmud.port4000.com/\">http://ifmud.port4000.com/</a><!-- m --> , the IF forum <!-- m --><a class=\"postlink\" href=\"http://int-fiction.org/forum/\">http://int-fiction.org/forum/</a><!-- m --> , and the ADRIFT forum <!-- m --><a class=\"postlink\" href=\"http://www.adrift.org.uk/cgi/iB/ikonboard.cgi\">http://www.adrift.org.uk/cgi/iB/ikonboard.cgi</a><!-- m -->?",
      "EditableFormat": "bbcode",
      "HTML": "If you only ask on the Quest forum, you're going to get responses heavily biased towards Quest.  Try asking (usenet) rec.arts.int-fiction / rec.games.int-fiction , followed by the IF Mud <!-- m --><a class=\"postlink\" href=\"http://ifmud.port4000.com/\">http://ifmud.port4000.com/</a><!-- m --> , the IF forum <!-- m --><a class=\"postlink\" href=\"http://int-fiction.org/forum/\">http://int-fiction.org/forum/</a><!-- m --> , and the ADRIFT forum <!-- m --><a class=\"postlink\" href=\"http://www.adrift.org.uk/cgi/iB/ikonboard.cgi\">http://www.adrift.org.uk/cgi/iB/ikonboard.cgi</a><!-- m -->?",
      "PostDate": "2007-07-12T15:32:09+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13490",
      "UserId": 0,
      "Username": "davidw",
      "UserAvatar": null,
      "UserGravatar": "5d9c9199ac213c3e7284cd76a2262c4a",
      "EditableText": "Well, I'm probably a little biased myself here as I use Adrift and none of the others, but, well, if you want a point and click interface and something that's easy to use and doesn't require programming skills, you have a choice between Adrift and Quest. Try both out and decide for yourself which is best.\r\n\r\nOh, and I'll see you on the Adrift forum soon  8)",
      "EditableFormat": "bbcode",
      "HTML": "Well, I'm probably a little biased myself here as I use Adrift and none of the others, but, well, if you want a point and click interface and something that's easy to use and doesn't require programming skills, you have a choice between Adrift and Quest. Try both out and decide for yourself which is best.<br/><br/>Oh, and I'll see you on the Adrift forum soon  8)",
      "PostDate": "2007-07-12T18:46:32+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13492",
      "UserId": 0,
      "Username": "Cryophile",
      "UserAvatar": null,
      "UserGravatar": "cbb093447274bd6d64613a0a60a7ab52",
      "EditableText": "I've played with around 5-10 systems, and my personal favourites were Quest, Adrift, and Inform. I would check these out. I'm biased toward Inform and Quest myself, although I like Adrift a fair bit. David will be biased toward Adrift of course, for very valid reasons, and the rest of the community sticks to Quest. All three have their merits and uses, although Quest is still in its infancy compared to the other two. It's nearing adolescence, however.",
      "EditableFormat": "bbcode",
      "HTML": "I've played with around 5-10 systems, and my personal favourites were Quest, Adrift, and Inform. I would check these out. I'm biased toward Inform and Quest myself, although I like Adrift a fair bit. David will be biased toward Adrift of course, for very valid reasons, and the rest of the community sticks to Quest. All three have their merits and uses, although Quest is still in its infancy compared to the other two. It's nearing adolescence, however.",
      "PostDate": "2007-07-12T21:46:43+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13496",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "Inform was released in 1993 with one game, Curses, which is widely viewed as a classic.\r\n\r\nAccording to <!-- m --><a class=\"postlink\" href=\"http://axeuk.com/phpBB2/viewtopic.php?p=12441&amp;highlight=forum#12441\">http://axeuk.com/phpBB2/viewtopic.php?p ... orum#12441</a><!-- m --> / <!-- m --><a class=\"postlink\" href=\"http://www.network54.com/Forum/9821/page-16\">http://www.network54.com/Forum/9821/page-16</a><!-- m --> , Quest 1.0 was released in Nov. 1998.  Quest has had 8 1/2 years to produce its own great game.  That should have been plenty of time.",
      "EditableFormat": "bbcode",
      "HTML": "Inform was released in 1993 with one game, Curses, which is widely viewed as a classic.<br/><br/>According to <!-- m --><a class=\"postlink\" href=\"http://axeuk.com/phpBB2/viewtopic.php?p=12441&amp;highlight=forum#12441\">http://axeuk.com/phpBB2/viewtopic.php?p ... orum#12441</a><!-- m --> / <!-- m --><a class=\"postlink\" href=\"http://www.network54.com/Forum/9821/page-16\">http://www.network54.com/Forum/9821/page-16</a><!-- m --> , Quest 1.0 was released in Nov. 1998.  Quest has had 8 1/2 years to produce its own great game.  That should have been plenty of time.",
      "PostDate": "2007-07-12T22:48:32+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13500",
      "UserId": 0,
      "Username": "henrytj",
      "UserAvatar": null,
      "UserGravatar": "5f6247178d5dd662b392a89e1e31284c",
      "EditableText": "[quote=&quot;S1aY3R&quot;:1e3z0ix6]I've played with around 5-10 systems, and my personal favourites were Quest, Adrift, and Inform. I would check these out. I'm biased toward Inform and Quest myself, although I like Adrift a fair bit. David will be biased toward Adrift of course, for very valid reasons, and the rest of the community sticks to Quest. All three have their merits and uses, although Quest is still in its infancy compared to the other two. It's nearing adolescence, however.[/quote:1e3z0ix6]\r\n\r\nThose are in fact, the 3 I am looking into. Quest and Adrift seem most similar as they are, or have as an option, point and click interfaces. Inform is an attempt at making a natural language programming system, which of coures, has its trade offs. \r\n\r\nMy thinking at the moment if I do put together a course is to split it between Inform, and Quest or Adrift. The course would be targeted more for creative (writing) type people rather than programmers. (Not saying programmers can't be creative writers, I like to think of myself as one, but seems the point of these projects is to widen both the making and use of these kinds of games.)",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>S1aY3R wrote:</cite>I've played with around 5-10 systems, and my personal favourites were Quest, Adrift, and Inform. I would check these out. I'm biased toward Inform and Quest myself, although I like Adrift a fair bit. David will be biased toward Adrift of course, for very valid reasons, and the rest of the community sticks to Quest. All three have their merits and uses, although Quest is still in its infancy compared to the other two. It's nearing adolescence, however.</blockquote><br/><br/>Those are in fact, the 3 I am looking into. Quest and Adrift seem most similar as they are, or have as an option, point and click interfaces. Inform is an attempt at making a natural language programming system, which of coures, has its trade offs. <br/><br/>My thinking at the moment if I do put together a course is to split it between Inform, and Quest or Adrift. The course would be targeted more for creative (writing) type people rather than programmers. (Not saying programmers can't be creative writers, I like to think of myself as one, but seems the point of these projects is to widen both the making and use of these kinds of games.)",
      "PostDate": "2007-07-13T01:30:30+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13501",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "One other thing.  &quot;Inform 6&quot; is very different from &quot;Inform 7&quot;, so it's best to specify which you mean.",
      "EditableFormat": "bbcode",
      "HTML": "One other thing.  &quot;Inform 6&quot; is very different from &quot;Inform 7&quot;, so it's best to specify which you mean.",
      "PostDate": "2007-07-13T01:35:36+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13503",
      "UserId": 0,
      "Username": "cangelo",
      "UserAvatar": null,
      "UserGravatar": "1b8de8e7a06afeccae35afb22dc64a58",
      "EditableText": "[quote=&quot;henrytj&quot;:uief075h]\nThose are in fact, the 3 I am looking into. Quest and Adrift seem most similar as they are, or have as an option, point and click interfaces. Inform is an attempt at making a natural language programming system, which of coures, has its trade offs. \n\nMy thinking at the moment if I do put together a course is to split it between Inform, and Quest or Adrift. The course would be targeted more for creative (writing) type people rather than programmers. (Not saying programmers can't be creative writers, I like to think of myself as one, but seems the point of these projects is to widen both the making and use of these kinds of games.)[/quote:uief075h]\r\n\r\nTads is another option and it's free and lends itself closer to standard programming languages (primarily C/C++).  It's very nice but does not include a visual interface.  It's very mature and includes alot of libraries (for free too).  I personally would recommend that one in place of Inform but if creative writing is the focus, I would probably skip either of those options so that you don't have to teach programming concepts and the students focus more time on the class content rather than semantics of the languages.  \r\n\r\nAdrift has more built in functionality than Quest (ie: character conversation system, combat system, hint system, etc) without any need of programming knowledge and little logic.  This can be limiting in many ways.  Quest is more flexible (which is why I chose it).\r\n\r\nSince it's for a class focusing on creative writing of IF, I would go with Adrift (as much as I hate to say it because I truly prefer Quest over it).  But for your purpose, Adrift will save you and students a lot of headaches not having to deal with the language semantics.\r\n\r\nJust my 2 cents.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>henrytj wrote:</cite><br/>Those are in fact, the 3 I am looking into. Quest and Adrift seem most similar as they are, or have as an option, point and click interfaces. Inform is an attempt at making a natural language programming system, which of coures, has its trade offs. <br/><br/>My thinking at the moment if I do put together a course is to split it between Inform, and Quest or Adrift. The course would be targeted more for creative (writing) type people rather than programmers. (Not saying programmers can't be creative writers, I like to think of myself as one, but seems the point of these projects is to widen both the making and use of these kinds of games.)</blockquote><br/><br/>Tads is another option and it's free and lends itself closer to standard programming languages (primarily C/C++).  It's very nice but does not include a visual interface.  It's very mature and includes alot of libraries (for free too).  I personally would recommend that one in place of Inform but if creative writing is the focus, I would probably skip either of those options so that you don't have to teach programming concepts and the students focus more time on the class content rather than semantics of the languages.  <br/><br/>Adrift has more built in functionality than Quest (ie: character conversation system, combat system, hint system, etc) without any need of programming knowledge and little logic.  This can be limiting in many ways.  Quest is more flexible (which is why I chose it).<br/><br/>Since it's for a class focusing on creative writing of IF, I would go with Adrift (as much as I hate to say it because I truly prefer Quest over it).  But for your purpose, Adrift will save you and students a lot of headaches not having to deal with the language semantics.<br/><br/>Just my 2 cents.",
      "PostDate": "2007-07-13T02:08:35+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13505",
      "UserId": 0,
      "Username": "henrytj",
      "UserAvatar": null,
      "UserGravatar": "5f6247178d5dd662b392a89e1e31284c",
      "EditableText": "[quote=&quot;cangelo&quot;:xiqc5o3j]\nTads is another option and it's free and lends itself closer to standard programming languages (primarily C/C++).  It's very nice but does not include a visual interface.  It's very mature and includes alot of libraries (for free too).  I personally would recommend that one in place of Inform but if creative writing is the focus, I would probably skip either of those options so that you don't have to teach programming concepts and the students focus more time on the class content rather than semantics of the languages.  [/quote:xiqc5o3j]\r\n\r\nI looked at TADS and immediately rejected it for consideration.\r\n\r\nAt the risk of starting an argument, one I have had over and over again, I avoid C and its ilk as much as I can. I learned programming in the 1970s and grew up on Fortran, Pascal, Lisp, etc. all non-case sensitive languages. I don't like languages that force their coding style on me. Plus, C, was invented as an alternative to assembly language systems programing for making OS components like device drivers and never intended to be a high level general programming language. In my opinion, it became popular for the wrong reasons. The &quot;poisoning of the well&quot; with case sensitive C spin-offs is one of the reasons I left programming. \r\n\r\nAnyway, I want to avoid programming languages (especially anything like C) as much as I can.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>cangelo wrote:</cite><br/>Tads is another option and it's free and lends itself closer to standard programming languages (primarily C/C++).  It's very nice but does not include a visual interface.  It's very mature and includes alot of libraries (for free too).  I personally would recommend that one in place of Inform but if creative writing is the focus, I would probably skip either of those options so that you don't have to teach programming concepts and the students focus more time on the class content rather than semantics of the languages.  </blockquote><br/><br/>I looked at TADS and immediately rejected it for consideration.<br/><br/>At the risk of starting an argument, one I have had over and over again, I avoid C and its ilk as much as I can. I learned programming in the 1970s and grew up on Fortran, Pascal, Lisp, etc. all non-case sensitive languages. I don't like languages that force their coding style on me. Plus, C, was invented as an alternative to assembly language systems programing for making OS components like device drivers and never intended to be a high level general programming language. In my opinion, it became popular for the wrong reasons. The &quot;poisoning of the well&quot; with case sensitive C spin-offs is one of the reasons I left programming. <br/><br/>Anyway, I want to avoid programming languages (especially anything like C) as much as I can.",
      "PostDate": "2007-07-13T02:58:35+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13506",
      "UserId": 0,
      "Username": "cangelo",
      "UserAvatar": null,
      "UserGravatar": "1b8de8e7a06afeccae35afb22dc64a58",
      "EditableText": "[quote=&quot;henrytj&quot;:7sv4vdb2]I don't like languages that force their coding style on me. [/quote:7sv4vdb2]\r\n\r\nLike FORTRAN?   <!-- s:twisted: --><img src=\"{SMILIES_PATH}/icon_twisted.gif\" alt=\":twisted:\" title=\"Twisted Evil\" /><!-- s:twisted: -->",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>henrytj wrote:</cite>I don't like languages that force their coding style on me. </blockquote><br/><br/>Like FORTRAN?   <!-- s:twisted: --><img src=\"{SMILIES_PATH}/icon_twisted.gif\" alt=\":twisted:\" title=\"Twisted Evil\" /><!-- s:twisted: -->",
      "PostDate": "2007-07-13T04:47:17+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13507",
      "UserId": 0,
      "Username": "henrytj",
      "UserAvatar": null,
      "UserGravatar": "5f6247178d5dd662b392a89e1e31284c",
      "EditableText": "[quote=&quot;cangelo&quot;:z8d1i1fx][quote=&quot;henrytj&quot;:z8d1i1fx]I don't like languages that force their coding style on me. [/quote:z8d1i1fx]\n\nLike FORTRAN?   <!-- s:twisted: --><img src=\"{SMILIES_PATH}/icon_twisted.gif\" alt=\":twisted:\" title=\"Twisted Evil\" /><!-- s:twisted: -->[/quote:z8d1i1fx]\r\n\r\nOh, you should be more respectful of your founding elders. Fortran was one of the very first high level languages. Developed in the early 1950's and still in use today it has lasted half a century. Being one of the first, yes, it had its flaws. It was designed for scientific computing and did that very well. If you are in computer science, then whether or not you know it, you owe a lot to Fortran and what it accomplished. It was a ground breaking computer language for its day. \r\n\r\nC, on the other hand, has made few such accomplishments, except perhaps to make computer programming cryptic again allowing programmers to imagine that they are doing something more complex than they really are.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>cangelo wrote:</cite><blockquote><p><b>&quot;henrytj&quot;</b></p><p>I don't like languages that force their coding style on me. </blockquote><br/><br/>Like FORTRAN?   <!-- s:twisted: --><img src=\"{SMILIES_PATH}/icon_twisted.gif\" alt=\":twisted:\" title=\"Twisted Evil\" /><!-- s:twisted: --></p></blockquote><br/><br/>Oh, you should be more respectful of your founding elders. Fortran was one of the very first high level languages. Developed in the early 1950's and still in use today it has lasted half a century. Being one of the first, yes, it had its flaws. It was designed for scientific computing and did that very well. If you are in computer science, then whether or not you know it, you owe a lot to Fortran and what it accomplished. It was a ground breaking computer language for its day. <br/><br/>C, on the other hand, has made few such accomplishments, except perhaps to make computer programming cryptic again allowing programmers to imagine that they are doing something more complex than they really are.",
      "PostDate": "2007-07-13T06:29:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13509",
      "UserId": 0,
      "Username": "cangelo",
      "UserAvatar": null,
      "UserGravatar": "1b8de8e7a06afeccae35afb22dc64a58",
      "EditableText": "[quote=&quot;henrytj&quot;:f9berw2x][quote=&quot;cangelo&quot;:f9berw2x][quote=&quot;henrytj&quot;:f9berw2x]I don't like languages that force their coding style on me. [/quote:f9berw2x]\n\nLike FORTRAN?   <!-- s:twisted: --><img src=\"{SMILIES_PATH}/icon_twisted.gif\" alt=\":twisted:\" title=\"Twisted Evil\" /><!-- s:twisted: -->[/quote:f9berw2x]\n\nOh, you should be more respectful of your founding elders. Fortran was one of the very first high level languages. Developed in the early 1950's and still in use today it has lasted half a century. Being one of the first, yes, it had its flaws. It was designed for scientific computing and did that very well. If you are in computer science, then whether or not you know it, you owe a lot to Fortran and what it accomplished. It was a ground breaking computer language for its day. \n\nC, on the other hand, has made few such accomplishments, except perhaps to make computer programming cryptic again allowing programmers to imagine that they are doing something more complex than they really are.[/quote:f9berw2x]\r\n\r\nI didn't jack FORTRAN for it's purpose or use nor would I ever intend to.\r\n\r\nI was making a play on 'languages that force their coding style' which FORTRAN is one the the biggest culprits.  I just found that statement amusing.  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->\r\n\r\nC has not made programming cryptic.  Programmers with poor design skills and great laziness have caused that  <!-- s:roll: --><img src=\"{SMILIES_PATH}/icon_rolleyes.gif\" alt=\":roll:\" title=\"Rolling Eyes\" /><!-- s:roll: -->   \r\n\r\nWith that said, I could careless abou C/C++ nor have I used them in 10 years nor plan to anytime soon.\r\n\r\nBy the way, I graduated from comp sci eons ago and have been programming as a career for over 20 years, including the aforementioned FORTRAN.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>henrytj wrote:</cite><blockquote><p><b>&quot;cangelo&quot;</b></p><p>[quote=&quot;henrytj&quot;]I don't like languages that force their coding style on me. </blockquote><br/><br/>Like FORTRAN?   <!-- s:twisted: --><img src=\"{SMILIES_PATH}/icon_twisted.gif\" alt=\":twisted:\" title=\"Twisted Evil\" /><!-- s:twisted: --></p></blockquote><br/><br/>Oh, you should be more respectful of your founding elders. Fortran was one of the very first high level languages. Developed in the early 1950's and still in use today it has lasted half a century. Being one of the first, yes, it had its flaws. It was designed for scientific computing and did that very well. If you are in computer science, then whether or not you know it, you owe a lot to Fortran and what it accomplished. It was a ground breaking computer language for its day. <br/><br/>C, on the other hand, has made few such accomplishments, except perhaps to make computer programming cryptic again allowing programmers to imagine that they are doing something more complex than they really are.[/quote]<br/><br/>I didn't jack FORTRAN for it's purpose or use nor would I ever intend to.<br/><br/>I was making a play on 'languages that force their coding style' which FORTRAN is one the the biggest culprits.  I just found that statement amusing.  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --><br/><br/>C has not made programming cryptic.  Programmers with poor design skills and great laziness have caused that  <!-- s:roll: --><img src=\"{SMILIES_PATH}/icon_rolleyes.gif\" alt=\":roll:\" title=\"Rolling Eyes\" /><!-- s:roll: -->   <br/><br/>With that said, I could careless abou C/C++ nor have I used them in 10 years nor plan to anytime soon.<br/><br/>By the way, I graduated from comp sci eons ago and have been programming as a career for over 20 years, including the aforementioned FORTRAN.",
      "PostDate": "2007-07-13T14:12:08+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13512",
      "UserId": 0,
      "Username": "Cryophile",
      "UserAvatar": null,
      "UserGravatar": "cbb093447274bd6d64613a0a60a7ab52",
      "EditableText": "Well, you've got years on me. I turn 20 near the end of this month, and have little actual experience, just the research and skills I've taught myself and learned through others.",
      "EditableFormat": "bbcode",
      "HTML": "Well, you've got years on me. I turn 20 near the end of this month, and have little actual experience, just the research and skills I've taught myself and learned through others.",
      "PostDate": "2007-07-13T22:00:59+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13513",
      "UserId": 0,
      "Username": "henrytj",
      "UserAvatar": null,
      "UserGravatar": "5f6247178d5dd662b392a89e1e31284c",
      "EditableText": "[quote=&quot;cangelo&quot;:1e767gqu]\nI didn't jack FORTRAN for it's purpose or use nor would I ever intend to.\n\nI was making a play on 'languages that force their coding style' which FORTRAN is one the the biggest culprits.  I just found that statement amusing.  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->\n\nC has not made programming cryptic.  Programmers with poor design skills and great laziness have caused that  <!-- s:roll: --><img src=\"{SMILIES_PATH}/icon_rolleyes.gif\" alt=\":roll:\" title=\"Rolling Eyes\" /><!-- s:roll: -->   \n\nWith that said, I could careless abou C/C++ nor have I used them in 10 years nor plan to anytime soon.\n\nBy the way, I graduated from comp sci eons ago and have been programming as a career for over 20 years, including the aforementioned FORTRAN.[/quote:1e767gqu]\r\n\r\nYes, early Fortran was very strict in column placement and variable name lenght. But, again, that's because it was one of the very first high level languages and at a time where the punch card (which i used my first couple years of college) was a common input device. Later generations of Fortran removed many of those restrictions. But at least Fortran was not case sensative. For me, using mixed &quot;CamelCasing&quot; improves readablility, including language KeyWords. Now isnt EndIf easier to read than endif or ENDIF? For me it is and my efficiency improves when I can use it. C, Perl, Java, don't let me do that. Plus C makes heavy use of punctuation, especially / and \\ which due to my left-right dyslexia, I have a lot of trouble with. B and D do not confuse me as b and d do. Upper case has no mirror image letters. When I jot down pseudo code I do it in all upper case and they type it in in mixed CamelCase. \r\n\r\nTHe current style of C coding, with punctuation hanging in mid line by itself, looks terrible to me.  I think from a human factors standing, C is a bad choice of a language for general programming.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>cangelo wrote:</cite><br/>I didn't jack FORTRAN for it's purpose or use nor would I ever intend to.<br/><br/>I was making a play on 'languages that force their coding style' which FORTRAN is one the the biggest culprits.  I just found that statement amusing.  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --><br/><br/>C has not made programming cryptic.  Programmers with poor design skills and great laziness have caused that  <!-- s:roll: --><img src=\"{SMILIES_PATH}/icon_rolleyes.gif\" alt=\":roll:\" title=\"Rolling Eyes\" /><!-- s:roll: -->   <br/><br/>With that said, I could careless abou C/C++ nor have I used them in 10 years nor plan to anytime soon.<br/><br/>By the way, I graduated from comp sci eons ago and have been programming as a career for over 20 years, including the aforementioned FORTRAN.</blockquote><br/><br/>Yes, early Fortran was very strict in column placement and variable name lenght. But, again, that's because it was one of the very first high level languages and at a time where the punch card (which i used my first couple years of college) was a common input device. Later generations of Fortran removed many of those restrictions. But at least Fortran was not case sensative. For me, using mixed &quot;CamelCasing&quot; improves readablility, including language KeyWords. Now isnt EndIf easier to read than endif or ENDIF? For me it is and my efficiency improves when I can use it. C, Perl, Java, don't let me do that. Plus C makes heavy use of punctuation, especially / and \\ which due to my left-right dyslexia, I have a lot of trouble with. B and D do not confuse me as b and d do. Upper case has no mirror image letters. When I jot down pseudo code I do it in all upper case and they type it in in mixed CamelCase. <br/><br/>THe current style of C coding, with punctuation hanging in mid line by itself, looks terrible to me.  I think from a human factors standing, C is a bad choice of a language for general programming.",
      "PostDate": "2007-07-14T07:31:02+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13521",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "I don't know what made me come here, at 3.30 am... it must have been a disturbance of the force (seeing what's written here, I don't blame it!).\r\n[quote:20wty5cl]Now isnt EndIf easier to read than endif or ENDIF?[/quote:20wty5cl]Oh geez - now you're gonna say you work for IBM and helped them to capitalized random letters in their application names/directory structures.\nstartNode is so much more annoying to type, and AppServer!? and WebSphere - will it ever end!?\n\nBack on subject though, seriously - comments aren't good enough for you?\nAnd capitalization of variables in C/C++ is only an issue??\nFunctions should be fine cos you can overload 'em (in C++ at least), so I'm quite lost with what you're saying about capitalization - again unless you keep changing from &quot;WhOOps&quot; to &quot;wHoopS&quot; etc.\n[quote:20wty5cl]Plus C makes heavy use of punctuation, especially / and \\ [/quote:20wty5cl]You must be talking about output formatting? And maybe quotes..\n[quote:20wty5cl]I don't like languages that force their coding style on me.[/quote:20wty5cl]Yes - I [b:20wty5cl]HAD[/b:20wty5cl] to quote this one too..\nSo, you mean, like [i:20wty5cl]EVERY[/i:20wty5cl] programming language? I don't know (of) one language which doesn't have it's own syntax. Which doesn't require you to change a line of thought in your head so that it works 'in real life(tm)'.\n.. What you mean is - you don't like languages that use capitalization - which is fair enough (I find this fact to be fair - although not well thought out as I'm sure 90% of this can be sorted out with a little overloading of functions - although that does mean extra effort).\n[quote:20wty5cl]Plus, C, was invented as an alternative to assembly language systems programing[/quote:20wty5cl]...And Fortran wasn't? .. Sorry - this is quite unfair of me to keep repeating Fortran, and quite unwise.\n[quote:20wty5cl]C, on the other hand, has made few such accomplishments[/quote:20wty5cl]...Except to bring easy, [i:20wty5cl]general[/i:20wty5cl], cross-platform, extendable, customizable, fast, programming to the masses...\n[quote:20wty5cl]computer programming cryptic[/quote:20wty5cl]I don't think C/C++ quite qualify for the &quot;goto&quot; spaghetti code messes of old.\n\nI'll just like to end this saying - I am not trying to turn you into a C/C++ programmer again. That's pointless.\nI just don't like anyone poo-poo'ing a programming language based really on your own abilities.\nI don't go around (well I do - jocularly) saying how rubbish windows is because of the fact it has the telly-tubby GUI on by default..\n- I do however promote Linux, and put down Windows, based on experience (of myself and ALOT of others). The fact I like one way over the other is not of any significance.\n\n[quote:20wty5cl]Programmers with poor design skills and great laziness have caused that[/quote:20wty5cl]Oh hell yeah! People need to actually think more about the data rather then the language itself..",
      "EditableFormat": "bbcode",
      "HTML": "I don't know what made me come here, at 3.30 am... it must have been a disturbance of the force (seeing what's written here, I don't blame it!).<br/><blockquote><p>Now isnt EndIf easier to read than endif or ENDIF?</p></blockquote>Oh geez - now you're gonna say you work for IBM and helped them to capitalized random letters in their application names/directory structures.<br/>startNode is so much more annoying to type, and AppServer!? and WebSphere - will it ever end!?<br/><br/>Back on subject though, seriously - comments aren't good enough for you?<br/>And capitalization of variables in C/C++ is only an issue??<br/>Functions should be fine cos you can overload 'em (in C++ at least), so I'm quite lost with what you're saying about capitalization - again unless you keep changing from &quot;WhOOps&quot; to &quot;wHoopS&quot; etc.<br/><blockquote><p>Plus C makes heavy use of punctuation, especially / and \\ </p></blockquote>You must be talking about output formatting? And maybe quotes..<br/><blockquote><p>I don't like languages that force their coding style on me.</p></blockquote>Yes - I <span style=\"font-weight:bold;\">HAD</span> to quote this one too..<br/>So, you mean, like <span style=\"font-style:italic;\">EVERY</span> programming language? I don't know (of) one language which doesn't have it's own syntax. Which doesn't require you to change a line of thought in your head so that it works 'in real life(tm)'.<br/>.. What you mean is - you don't like languages that use capitalization - which is fair enough (I find this fact to be fair - although not well thought out as I'm sure 90% of this can be sorted out with a little overloading of functions - although that does mean extra effort).<br/><blockquote><p>Plus, C, was invented as an alternative to assembly language systems programing</p></blockquote>...And Fortran wasn't? .. Sorry - this is quite unfair of me to keep repeating Fortran, and quite unwise.<br/><blockquote><p>C, on the other hand, has made few such accomplishments</p></blockquote>...Except to bring easy, <span style=\"font-style:italic;\">general</span>, cross-platform, extendable, customizable, fast, programming to the masses...<br/><blockquote><p>computer programming cryptic</p></blockquote>I don't think C/C++ quite qualify for the &quot;goto&quot; spaghetti code messes of old.<br/><br/>I'll just like to end this saying - I am not trying to turn you into a C/C++ programmer again. That's pointless.<br/>I just don't like anyone poo-poo'ing a programming language based really on your own abilities.<br/>I don't go around (well I do - jocularly) saying how rubbish windows is because of the fact it has the telly-tubby GUI on by default..<br/>- I do however promote Linux, and put down Windows, based on experience (of myself and ALOT of others). The fact I like one way over the other is not of any significance.<br/><br/><blockquote><p>Programmers with poor design skills and great laziness have caused that</p></blockquote>Oh hell yeah! People need to actually think more about the data rather then the language itself..",
      "PostDate": "2007-07-15T04:21:08+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13527",
      "UserId": 0,
      "Username": "henrytj",
      "UserAvatar": null,
      "UserGravatar": "5f6247178d5dd662b392a89e1e31284c",
      "EditableText": "Rather than replying to each sentence one at a time I will just state my case.\r\n\r\nNo, I did some of my early, and best work, on DEC and VAX VMS machines. Never worked on an IBM mainframe. VMS was a great operating system, mainframe wise. I did some really good, perhaps my best, industrial process control work in Fortran on VMS. \r\n\r\nNot sure what you are saying in some of your comments. And yes, I do seem to have some form of reading disorder, perhaps in addition to dyslexia, where mixing my case helps me to more quickly read and understand the code. And I dont think its only me. Typographers have long discovered the what improves readability. Whey do you think that book and movie titles capitalize the first letter of most words. Computer people seem to rarely draw upon already known factors and re-invent what they think is best, based on their own personal preference. This is a factor I call &quot;computer smart, people stupid.&quot; Like naming a computer command &quot;apropos&quot; instead of the more common &quot;help&quot;, or calling a program &quot;Gimp&quot; which in some places is considered a derogatory name for handicapped people. Or even just giving the programs joke names like &quot;Archie&quot; and &quot;Veronica&quot; and then wondering why non-computer people dont take it seriously. Again, computer smart, but people stupid. \r\n\r\nC, at its creation was not meant to be, or even considered by its makers, to be a high level language. It uses alot of punctuation instead of key words of it syntax. Early there was a underground competition to see who could write the most cryptic one page program that even other C gurus could not figure out. Sorry, but that bodes bad for a general programming language.\r\n\r\nLately I have read several commentaries that object oriented programming is being over-used and even abused. Programmers are trying to show how clever they are and forcing otherwise simple programming situations to use complex objects. This is resulting in an industry wide productivity loss and difficulty in maintaining code that is unnecessarily complex.  Even Scientific American magazine had an article about the computer &quot;revolution&quot; failing to produce the productivity gain that was seen in other times with things like the industrial revolution. \r\nThe C language can too easily be used to make simple programming tasks look more complex than they really are.  Objects have their utility, but not everything should be an object. There is a difference between intelligence, and good judgment. Just because you can do something, doesn't mean that you should. \r\n\r\nOne of my experiences with C is from teaching at a community college. Ive had students, that did well in my Visual Basic class, come back to me confused why they were having such trouble with Visual C++. They were doing almost the same projects with VC++ as they did in my class. It wasn't a lack in understanding the programming concepts. It was the C language itself that was giving them difficulty. To me programming is mostly about understanding the problem, and coming up with an elegant solution. Instead, too many programmers seem to base their self-esteem on being able to code in an inherently confusing language.",
      "EditableFormat": "bbcode",
      "HTML": "Rather than replying to each sentence one at a time I will just state my case.<br/><br/>No, I did some of my early, and best work, on DEC and VAX VMS machines. Never worked on an IBM mainframe. VMS was a great operating system, mainframe wise. I did some really good, perhaps my best, industrial process control work in Fortran on VMS. <br/><br/>Not sure what you are saying in some of your comments. And yes, I do seem to have some form of reading disorder, perhaps in addition to dyslexia, where mixing my case helps me to more quickly read and understand the code. And I dont think its only me. Typographers have long discovered the what improves readability. Whey do you think that book and movie titles capitalize the first letter of most words. Computer people seem to rarely draw upon already known factors and re-invent what they think is best, based on their own personal preference. This is a factor I call &quot;computer smart, people stupid.&quot; Like naming a computer command &quot;apropos&quot; instead of the more common &quot;help&quot;, or calling a program &quot;Gimp&quot; which in some places is considered a derogatory name for handicapped people. Or even just giving the programs joke names like &quot;Archie&quot; and &quot;Veronica&quot; and then wondering why non-computer people dont take it seriously. Again, computer smart, but people stupid. <br/><br/>C, at its creation was not meant to be, or even considered by its makers, to be a high level language. It uses alot of punctuation instead of key words of it syntax. Early there was a underground competition to see who could write the most cryptic one page program that even other C gurus could not figure out. Sorry, but that bodes bad for a general programming language.<br/><br/>Lately I have read several commentaries that object oriented programming is being over-used and even abused. Programmers are trying to show how clever they are and forcing otherwise simple programming situations to use complex objects. This is resulting in an industry wide productivity loss and difficulty in maintaining code that is unnecessarily complex.  Even Scientific American magazine had an article about the computer &quot;revolution&quot; failing to produce the productivity gain that was seen in other times with things like the industrial revolution. <br/>The C language can too easily be used to make simple programming tasks look more complex than they really are.  Objects have their utility, but not everything should be an object. There is a difference between intelligence, and good judgment. Just because you can do something, doesn't mean that you should. <br/><br/>One of my experiences with C is from teaching at a community college. Ive had students, that did well in my Visual Basic class, come back to me confused why they were having such trouble with Visual C++. They were doing almost the same projects with VC++ as they did in my class. It wasn't a lack in understanding the programming concepts. It was the C language itself that was giving them difficulty. To me programming is mostly about understanding the problem, and coming up with an elegant solution. Instead, too many programmers seem to base their self-esteem on being able to code in an inherently confusing language.",
      "PostDate": "2007-07-15T09:47:10+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13529",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "That must be why I don't get along with VMS.. I just find it both archaic and too language-y..\r\nWhen I try to use a computer, I want to give it commands to execute and see the flow - I just can't with VMS.\r\n\r\nI use man -k instead of apropos.. But yes, there are some very odd commands out there which hold cryptic names.\r\nOn the issue of Gimp, Gnu, Archie etc I always find them very comical. Whether they work or not is more the issue than the name, as you can only call so many things &quot;brilliant super graphical program&quot;.\r\nAlso, avoiding a name for political correctness? That's like women getting equal rights and not complaining about there being low numbers of female trash collectors.. Now, if they had an image of a handicapped person that'd be taking it a bit far - but using it as a shortened &quot;[b:q6014y9r]G[/b:q6014y9r]nu [b:q6014y9r]IM[/b:q6014y9r]age [b:q6014y9r]P[/b:q6014y9r]rogram&quot; is fine.\r\n.. I will agree on your &quot;computer smart, people stupid&quot; though - on different grounds.\r\n\r\nYou keep loosing me with &quot;punctuation&quot;.. I don't recall C being object-oriented. The only thing I can think of is the ; ending line and output formatting (printf..). Function parameter separation (ie function(param, param2)) is used all over the place - except shell AFAIK and makes perfect sense.\r\nAt it's creation, I would have thought 'high level' would be suitable.. I really haven't read much history on the C language, nor read anything from the 'creators' of C, and so don't know what they thought at the time.. A brief look on wiki suggests it was created as a B follow-up which [i:q6014y9r]was[/i:q6014y9r] meant to be high-level.\r\nOn the cryptic one page - not sure of this either, but I can believe it I guess, since I've seen it done for BASIC, perl, pascal, shell, java and PHP. I'm sure there've been Fortran programs which have been created in a similar vein - it's what we do sometimes for 'fun'.\r\n[quote:q6014y9r]Lately I have read several commentaries that object oriented programming is being over-used and even abused.[/quote:q6014y9r]I wouldn't be surprised.. People are drifting through sci-comp classes, and getting qualifications and not fully understanding what they've written.. It truly depends on the data - which again, I think isn't thought about enough.. I think it's more real-life though to have data treated as objects, and makes for easier and more understandable code on the whole.\r\n\r\nComparing the computer &quot;revolution&quot; (which is what? Storing/processing data) to the industrial revolution is just silly! The industrial impacted so many area's of creating and processing. True, computers are all around us - but their use is generally for data storage/processing and entertainment.\r\n\r\nHAH, Visual C++ is hell.. They may find things a little easier by NOT using microsoft tools.\r\nAlso, C++ does not have the /niceties/ of VB straight off.. The basic functionality of VB is very far above C/C++ as it's a higher, interpreted language. You need to add libraries to gain 'strings', and 'vectors' (arrays - well, lovely arrays) for instance.\r\n\r\nThere are programmers which can produce more in C++ than VB, and others which find the exact reverse.. It's more based on two issues; their mindset, and their programming technique.\r\n\r\n.. To me, programming is an art, which is used to create something which does 'a job'. Figuring out how to do the job is the fun part.",
      "EditableFormat": "bbcode",
      "HTML": "That must be why I don't get along with VMS.. I just find it both archaic and too language-y..<br/>When I try to use a computer, I want to give it commands to execute and see the flow - I just can't with VMS.<br/><br/>I use man -k instead of apropos.. But yes, there are some very odd commands out there which hold cryptic names.<br/>On the issue of Gimp, Gnu, Archie etc I always find them very comical. Whether they work or not is more the issue than the name, as you can only call so many things &quot;brilliant super graphical program&quot;.<br/>Also, avoiding a name for political correctness? That's like women getting equal rights and not complaining about there being low numbers of female trash collectors.. Now, if they had an image of a handicapped person that'd be taking it a bit far - but using it as a shortened &quot;<span style=\"font-weight:bold;\">G</span>nu <span style=\"font-weight:bold;\">IM</span>age <span style=\"font-weight:bold;\">P</span>rogram&quot; is fine.<br/>.. I will agree on your &quot;computer smart, people stupid&quot; though - on different grounds.<br/><br/>You keep loosing me with &quot;punctuation&quot;.. I don't recall C being object-oriented. The only thing I can think of is the ; ending line and output formatting (printf..). Function parameter separation (ie function(param, param2)) is used all over the place - except shell AFAIK and makes perfect sense.<br/>At it's creation, I would have thought 'high level' would be suitable.. I really haven't read much history on the C language, nor read anything from the 'creators' of C, and so don't know what they thought at the time.. A brief look on wiki suggests it was created as a B follow-up which <span style=\"font-style:italic;\">was</span> meant to be high-level.<br/>On the cryptic one page - not sure of this either, but I can believe it I guess, since I've seen it done for BASIC, perl, pascal, shell, java and PHP. I'm sure there've been Fortran programs which have been created in a similar vein - it's what we do sometimes for 'fun'.<br/><blockquote><p>Lately I have read several commentaries that object oriented programming is being over-used and even abused.</p></blockquote>I wouldn't be surprised.. People are drifting through sci-comp classes, and getting qualifications and not fully understanding what they've written.. It truly depends on the data - which again, I think isn't thought about enough.. I think it's more real-life though to have data treated as objects, and makes for easier and more understandable code on the whole.<br/><br/>Comparing the computer &quot;revolution&quot; (which is what? Storing/processing data) to the industrial revolution is just silly! The industrial impacted so many area's of creating and processing. True, computers are all around us - but their use is generally for data storage/processing and entertainment.<br/><br/>HAH, Visual C++ is hell.. They may find things a little easier by NOT using microsoft tools.<br/>Also, C++ does not have the /niceties/ of VB straight off.. The basic functionality of VB is very far above C/C++ as it's a higher, interpreted language. You need to add libraries to gain 'strings', and 'vectors' (arrays - well, lovely arrays) for instance.<br/><br/>There are programmers which can produce more in C++ than VB, and others which find the exact reverse.. It's more based on two issues; their mindset, and their programming technique.<br/><br/>.. To me, programming is an art, which is used to create something which does 'a job'. Figuring out how to do the job is the fun part.",
      "PostDate": "2007-07-15T15:03:03+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13535",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "Aren't archie / jughead / veronica 20-30 years old?\r\n\r\nAlso, I think that a keyword like &quot;endif&quot; should be lowercased.  It draws attention from the variable &amp; function names.",
      "EditableFormat": "bbcode",
      "HTML": "Aren't archie / jughead / veronica 20-30 years old?<br/><br/>Also, I think that a keyword like &quot;endif&quot; should be lowercased.  It draws attention from the variable &amp; function names.",
      "PostDate": "2007-07-15T18:27:29+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13538",
      "UserId": 0,
      "Username": "cangelo",
      "UserAvatar": null,
      "UserGravatar": "1b8de8e7a06afeccae35afb22dc64a58",
      "EditableText": "[quote=&quot;henrytj&quot;:3h8x37ol]\nFor me, using mixed &quot;CamelCasing&quot; improves readablility, including language KeyWords. Now isnt EndIf easier to read than endif or ENDIF? For me it is and my efficiency improves when I can use it. \n[/quote:3h8x37ol]\n\n#define CamelCasing camelcasing\nor\n#define camel_casing camelcasing\n\nSimple macros let you do it however you prefer.  Some programmers like using the _ between words.  It has nothing to do with C as a language, it's the preference of the programmer.\n\nBut in the end, it's just a matter of how the programmer decides to do it, not the language...C allows you to name all your variables and functions the way you prefer...ie: it doesn't force it's naming conventions on you.  It does force you to stick to the naming conventions you as the programmer define.\n\n\n[quote=&quot;henrytj&quot;:3h8x37ol]\nC makes heavy use of punctuation, especially / and \\ which due to my left-right dyslexia, I have a lot of trouble with. \n[/quote:3h8x37ol]\nThe only punctuation I recall is\n; at the end of a statement\nand { } blocks for if/then, loops, and functions (which I find much more readable than IF/ELSEIF/ENDIF as long as the 'programmer' puts the { } on separate lines).  I'm not sure what / and \\ are for unless you are talking only about text formating with the printf like functions.  And for the punctuation I mention, it lets you format those items how you want and doesn't 'force' anything on you...IE: \n\nif something {\n. . .  do something;\n}\nelse {\n. . .  do something else;\n}\n\nor \n\nif something\n{\n. . .  do something;\n}\nelse {\n. . .  do something else;\n}\n\nor if you just want to be silly\n\nif something {do something;}else{do something else;}\n\nNOTE: '. . .' used because I don't know how to put a tab in this forum message.\n\nSo, C looks quite flexible in letting the programmer choose their own style.\n\n[quote=&quot;henrytj&quot;:3h8x37ol]\nB and D do not confuse me as b and d do. Upper case has no mirror image letters. When I jot down pseudo code I do it in all upper case and they type it in in mixed CamelCase. \n\nTHe current style of C coding, with punctuation hanging in mid line by itself, looks terrible to me.  I think from a human factors standing, C is a bad choice of a language for general programming.[/quote:3h8x37ol]\r\n\r\nC also allows you to create macros (via #define) and you can rename any function that you have a problem with.  Store those changes in a file one time and all you have to do is #include it with any future programs.\r\n\r\nI agree that it would be nice if C was not case sensitive (it would be pitiful programming practice to name variables/functions the same except for a case change...ie: someVar being a different variable than somevar), but I can't see a valid argument showing that C is a poor language choice in general.  Syntax?  forcing coding style? dyslexia?  not high level (if you want high level abilities, get one of the many high level libraries available or choose a high level language)?  \r\n\r\nIn the end, use the programming language you prefer or the best language for the applications purpose.  But don't trash a language  with arguments based solely on personal preferences and misleading information.  If I didn't know any better or I was new to programming or the language, I might believe it and form inaccurate assumptions on them.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>henrytj wrote:</cite><br/>For me, using mixed &quot;CamelCasing&quot; improves readablility, including language KeyWords. Now isnt EndIf easier to read than endif or ENDIF? For me it is and my efficiency improves when I can use it. <br/></blockquote><br/><br/>#define CamelCasing camelcasing<br/>or<br/>#define camel_casing camelcasing<br/><br/>Simple macros let you do it however you prefer.  Some programmers like using the _ between words.  It has nothing to do with C as a language, it's the preference of the programmer.<br/><br/>But in the end, it's just a matter of how the programmer decides to do it, not the language...C allows you to name all your variables and functions the way you prefer...ie: it doesn't force it's naming conventions on you.  It does force you to stick to the naming conventions you as the programmer define.<br/><br/><br/><blockquote><cite>henrytj wrote:</cite><br/>C makes heavy use of punctuation, especially / and \\ which due to my left-right dyslexia, I have a lot of trouble with. <br/></blockquote><br/>The only punctuation I recall is<br/>; at the end of a statement<br/>and { } blocks for if/then, loops, and functions (which I find much more readable than IF/ELSEIF/ENDIF as long as the 'programmer' puts the { } on separate lines).  I'm not sure what / and \\ are for unless you are talking only about text formating with the printf like functions.  And for the punctuation I mention, it lets you format those items how you want and doesn't 'force' anything on you...IE: <br/><br/>if something {<br/>. . .  do something;<br/>}<br/>else {<br/>. . .  do something else;<br/>}<br/><br/>or <br/><br/>if something<br/>{<br/>. . .  do something;<br/>}<br/>else {<br/>. . .  do something else;<br/>}<br/><br/>or if you just want to be silly<br/><br/>if something {do something;}else{do something else;}<br/><br/>NOTE: '. . .' used because I don't know how to put a tab in this forum message.<br/><br/>So, C looks quite flexible in letting the programmer choose their own style.<br/><br/><blockquote><cite>henrytj wrote:</cite><br/>B and D do not confuse me as b and d do. Upper case has no mirror image letters. When I jot down pseudo code I do it in all upper case and they type it in in mixed CamelCase. <br/><br/>THe current style of C coding, with punctuation hanging in mid line by itself, looks terrible to me.  I think from a human factors standing, C is a bad choice of a language for general programming.</blockquote><br/><br/>C also allows you to create macros (via #define) and you can rename any function that you have a problem with.  Store those changes in a file one time and all you have to do is #include it with any future programs.<br/><br/>I agree that it would be nice if C was not case sensitive (it would be pitiful programming practice to name variables/functions the same except for a case change...ie: someVar being a different variable than somevar), but I can't see a valid argument showing that C is a poor language choice in general.  Syntax?  forcing coding style? dyslexia?  not high level (if you want high level abilities, get one of the many high level libraries available or choose a high level language)?  <br/><br/>In the end, use the programming language you prefer or the best language for the applications purpose.  But don't trash a language  with arguments based solely on personal preferences and misleading information.  If I didn't know any better or I was new to programming or the language, I might believe it and form inaccurate assumptions on them.",
      "PostDate": "2007-07-16T02:54:54+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13540",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "Cangela - you said that more elegantly than I could..",
      "EditableFormat": "bbcode",
      "HTML": "Cangela - you said that more elegantly than I could..",
      "PostDate": "2007-07-16T12:14:47+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13552",
      "UserId": 0,
      "Username": "henrytj",
      "UserAvatar": null,
      "UserGravatar": "5f6247178d5dd662b392a89e1e31284c",
      "EditableText": "[quote=&quot;cangelo&quot;:2w9tcjqz]\nThe only punctuation I recall is\n; at the end of a statement\nand { } blocks for if/then, loops, and functions (which I find much more readable than IF/ELSEIF/ENDIF as long as the 'programmer' puts the { } on separate lines).  I'm not sure what / and \\ are for unless you are talking only about text formating with the printf like functions.  And for the punctuation I mention, it lets you format those items how you want and doesn't 'force' anything on you...IE: \n\nif something {\n. . .  do something;\n}\nelse {\n. . .  do something else;\n}\n\nor \n\nif something\n{\n. . .  do something;\n}\nelse {\n. . .  do something else;\n}\n\nor if you just want to be silly\n\nif something {do something;}else{do something else;}\n\nNOTE: '. . .' used because I don't know how to put a tab in this forum message.\n\n[/quote:2w9tcjqz]\r\n\r\nI on the otherhand find reading the single characters { and } on a line by themselve to be very distracting. If I coded in C I would be tempted to do somethnig like\r\n\r\nIf Condition\r\n...{Do;\r\n....Some;\r\n....Commands}\r\nElse\r\n...{Do;\r\n....Something;\r\n....Different}\r\n\r\nFor me the above is easier to read. I once showed something like the above to a C programmer during a argument similar to this and got a harsh, almost death threat, in return.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>cangelo wrote:</cite><br/>The only punctuation I recall is<br/>; at the end of a statement<br/>and { } blocks for if/then, loops, and functions (which I find much more readable than IF/ELSEIF/ENDIF as long as the 'programmer' puts the { } on separate lines).  I'm not sure what / and \\ are for unless you are talking only about text formating with the printf like functions.  And for the punctuation I mention, it lets you format those items how you want and doesn't 'force' anything on you...IE: <br/><br/>if something {<br/>. . .  do something;<br/>}<br/>else {<br/>. . .  do something else;<br/>}<br/><br/>or <br/><br/>if something<br/>{<br/>. . .  do something;<br/>}<br/>else {<br/>. . .  do something else;<br/>}<br/><br/>or if you just want to be silly<br/><br/>if something {do something;}else{do something else;}<br/><br/>NOTE: '. . .' used because I don't know how to put a tab in this forum message.<br/><br/></blockquote><br/><br/>I on the otherhand find reading the single characters { and } on a line by themselve to be very distracting. If I coded in C I would be tempted to do somethnig like<br/><br/>If Condition<br/>...{Do;<br/>....Some;<br/>....Commands}<br/>Else<br/>...{Do;<br/>....Something;<br/>....Different}<br/><br/>For me the above is easier to read. I once showed something like the above to a C programmer during a argument similar to this and got a harsh, almost death threat, in return.",
      "PostDate": "2007-07-17T13:30:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13556",
      "UserId": 0,
      "Username": "cangelo",
      "UserAvatar": null,
      "UserGravatar": "1b8de8e7a06afeccae35afb22dc64a58",
      "EditableText": "[quote=&quot;henrytj&quot;:2q521dgh][quote=&quot;cangelo&quot;:2q521dgh]\nThe only punctuation I recall is\n; at the end of a statement\nand { } blocks for if/then, loops, and functions (which I find much more readable than IF/ELSEIF/ENDIF as long as the 'programmer' puts the { } on separate lines).  I'm not sure what / and \\ are for unless you are talking only about text formating with the printf like functions.  And for the punctuation I mention, it lets you format those items how you want and doesn't 'force' anything on you...IE: \n\nif something {\n. . .  do something;\n}\nelse {\n. . .  do something else;\n}\n\nor \n\nif something\n{\n. . .  do something;\n}\nelse {\n. . .  do something else;\n}\n\nor if you just want to be silly\n\nif something {do something;}else{do something else;}\n\nNOTE: '. . .' used because I don't know how to put a tab in this forum message.\n\n[/quote:2q521dgh]\n\nI on the otherhand find reading the single characters { and } on a line by themselve to be very distracting. If I coded in C I would be tempted to do somethnig like\n\nIf Condition\n...{Do;\n....Some;\n....Commands}\nElse\n...{Do;\n....Something;\n....Different}\n\nFor me the above is easier to read. I once showed something like the above to a C programmer during a argument similar to this and got a harsh, almost death threat, in return.[/quote:2q521dgh]\r\n\r\nFair enough and C will let you do that, which is why I don't understand how C is forcing it's 'style' on you?",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>henrytj wrote:</cite><blockquote><p><b>&quot;cangelo&quot;</b></p><p><br/>The only punctuation I recall is<br/>; at the end of a statement<br/>and { } blocks for if/then, loops, and functions (which I find much more readable than IF/ELSEIF/ENDIF as long as the 'programmer' puts the { } on separate lines).  I'm not sure what / and \\ are for unless you are talking only about text formating with the printf like functions.  And for the punctuation I mention, it lets you format those items how you want and doesn't 'force' anything on you...IE: <br/><br/>if something {<br/>. . .  do something;<br/>}<br/>else {<br/>. . .  do something else;<br/>}<br/><br/>or <br/><br/>if something<br/>{<br/>. . .  do something;<br/>}<br/>else {<br/>. . .  do something else;<br/>}<br/><br/>or if you just want to be silly<br/><br/>if something {do something;}else{do something else;}<br/><br/>NOTE: '. . .' used because I don't know how to put a tab in this forum message.<br/><br/></blockquote><br/><br/>I on the otherhand find reading the single characters { and } on a line by themselve to be very distracting. If I coded in C I would be tempted to do somethnig like<br/><br/>If Condition<br/>...{Do;<br/>....Some;<br/>....Commands}<br/>Else<br/>...{Do;<br/>....Something;<br/>....Different}<br/><br/>For me the above is easier to read. I once showed something like the above to a C programmer during a argument similar to this and got a harsh, almost death threat, in return.</p></blockquote><br/><br/>Fair enough and C will let you do that, which is why I don't understand how C is forcing it's 'style' on you?",
      "PostDate": "2007-07-17T14:01:12+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13557",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "[quote:26eatffb]If Condition\n...{Do;\n....Some;\n....Commands}\nElse\n...{Do;\n....Something;\n....Different} [/quote:26eatffb]\r\nI prefer:\r\n[code:26eatffb]if Condition &#123;\n   do;\n   some;\n   commands;\n&#125;\nelse &#123;\n   do;\n   other;\n   commands;\n&#125;[/code:26eatffb]\r\nIt just seperates out the various parts better and looks neat.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>If Condition<br/>...{Do;<br/>....Some;<br/>....Commands}<br/>Else<br/>...{Do;<br/>....Something;<br/>....Different} </p></blockquote><br/>I prefer:<br/><pre><code>if Condition &#123;<br/>   do;<br/>   some;<br/>   commands;<br/>&#125;<br/>else &#123;<br/>   do;<br/>   other;<br/>   commands;<br/>&#125;</code></pre><br/>It just seperates out the various parts better and looks neat.",
      "PostDate": "2007-07-17T15:44:28+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13567",
      "UserId": 0,
      "Username": "henrytj",
      "UserAvatar": null,
      "UserGravatar": "5f6247178d5dd662b392a89e1e31284c",
      "EditableText": "[quote=&quot;cangelo&quot;:184imsm4][quote=&quot;henrytj&quot;:184imsm4]\nIf Condition\n...{Do;\n....Some;\n....Commands}\nElse\n...{Do;\n....Something;\n....Different}\n\nFor me the above is easier to read. I once showed something like the above to a C programmer during a argument similar to this and got a harsh, almost death threat, in return.[/quote:184imsm4]\n\nFair enough and C will let you do that, which is why I don't understand how C is forcing it's 'style' on you?[/quote:184imsm4]\r\n\r\nNo, C will not let me do that because it will not let me type in mixed case keyworks &quot;If&quot; and &quot;Else.&quot; And, yes, mixed case for me can make that much of a difference. ANd there is no reason to require case sensativity in keywords (in a compiled language) as there are no &quot;IF&quot; keyword that does something different than &quot;if&quot; or &quot;If.&quot; So after decades of mixing my case as I have done with pervious languages, I have to becarefull what I type in C and its related languages. That is forcing a style on me.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>cangelo wrote:</cite><blockquote><p><b>&quot;henrytj&quot;</b></p><p><br/>If Condition<br/>...{Do;<br/>....Some;<br/>....Commands}<br/>Else<br/>...{Do;<br/>....Something;<br/>....Different}<br/><br/>For me the above is easier to read. I once showed something like the above to a C programmer during a argument similar to this and got a harsh, almost death threat, in return.</blockquote><br/><br/>Fair enough and C will let you do that, which is why I don't understand how C is forcing it's 'style' on you?</p></blockquote><br/><br/>No, C will not let me do that because it will not let me type in mixed case keyworks &quot;If&quot; and &quot;Else.&quot; And, yes, mixed case for me can make that much of a difference. ANd there is no reason to require case sensativity in keywords (in a compiled language) as there are no &quot;IF&quot; keyword that does something different than &quot;if&quot; or &quot;If.&quot; So after decades of mixing my case as I have done with pervious languages, I have to becarefull what I type in C and its related languages. That is forcing a style on me.",
      "PostDate": "2007-07-18T16:18:30+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13568",
      "UserId": 0,
      "Username": "henrytj",
      "UserAvatar": null,
      "UserGravatar": "5f6247178d5dd662b392a89e1e31284c",
      "EditableText": "[quote=&quot;Tr0n&quot;:2zffjfli][quote:2zffjfli]If Condition\n...{Do;\n....Some;\n....Commands}\nElse\n...{Do;\n....Something;\n....Different} [/quote:2zffjfli]\nI prefer:\n[code:2zffjfli]if Condition &#123;\n   do;\n   some;\n   commands;\n&#125;\nelse &#123;\n   do;\n   other;\n   commands;\n&#125;[/code:2zffjfli]\nIt just seperates out the various parts better and looks neat.[/quote:2zffjfli]\n\nThat is better, but I still find the lines with a single character &quot;}&quot; on them to be distracting. That is while I actually like &quot;Begin&quot; and &quot;End&quot;\n\n[code:2zffjfli]\nIf &#40;Condition&#41; Then\n    Begin\n    Statement&#40;s&#41;\n    End\nElseIf &#40;Condition 2&#41; Then\n    Begin\n    Statement&#40;s&#41;\n    End\nElse\n    Begin\n    Statement&#40;s&#41;\n    End\nEndIf\n[/code:2zffjfli]\r\n\r\nFor me, the above has the most ease on the eye for following the logic &quot;flow&quot; of the code at a glance, and the readability of the keywords.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Tr0n wrote:</cite><blockquote><p>If Condition<br/>...{Do;<br/>....Some;<br/>....Commands}<br/>Else<br/>...{Do;<br/>....Something;<br/>....Different} </blockquote><br/>I prefer:<br/><pre><code>if Condition &#123;<br/>   do;<br/>   some;<br/>   commands;<br/>&#125;<br/>else &#123;<br/>   do;<br/>   other;<br/>   commands;<br/>&#125;</code></pre><br/>It just seperates out the various parts better and looks neat.</p></blockquote><br/><br/>That is better, but I still find the lines with a single character &quot;}&quot; on them to be distracting. That is while I actually like &quot;Begin&quot; and &quot;End&quot;<br/><br/><pre><code><br/>If &#40;Condition&#41; Then<br/>    Begin<br/>    Statement&#40;s&#41;<br/>    End<br/>ElseIf &#40;Condition 2&#41; Then<br/>    Begin<br/>    Statement&#40;s&#41;<br/>    End<br/>Else<br/>    Begin<br/>    Statement&#40;s&#41;<br/>    End<br/>EndIf<br/></code></pre><br/><br/>For me, the above has the most ease on the eye for following the logic &quot;flow&quot; of the code at a glance, and the readability of the keywords.",
      "PostDate": "2007-07-18T16:27:55+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13569",
      "UserId": 0,
      "Username": "henrytj",
      "UserAvatar": null,
      "UserGravatar": "5f6247178d5dd662b392a89e1e31284c",
      "EditableText": "Actually, in a syntax such as this you may not need the Begin and End delimiters, so you might be able to do\r\n\r\n[code:3r1nkzji]\nIf &#40;Condition&#41; Then\n    Statement&#40;s&#41;\nElseIf &#40;Condition&#41; Then\n    Statement&#40;s&#41;\nElse\n    Statement&#40;s&#41;\nEndIf\n[/code:3r1nkzji]\n\nNow here I admit that the single indented lines get lost, so, a variation...\n\n[code:3r1nkzji]\nIf &#40;Condition&#41; Then\n    Statement&#40;s&#41;\n\nElseIf &#40;Condition&#41; Then\n    Statement&#40;s&#41;\n\nElse\n    Statement&#40;s&#41;\n\nEndIf\n[/code:3r1nkzji]\r\n\r\nThis looks close to how a visual design typesetter might layout informative text, and for good reason,... because it works. I good solid visual line heaps to increase understandability of the structure of the material. Its too bad more computer people dont study such.",
      "EditableFormat": "bbcode",
      "HTML": "Actually, in a syntax such as this you may not need the Begin and End delimiters, so you might be able to do<br/><br/><pre><code><br/>If &#40;Condition&#41; Then<br/>    Statement&#40;s&#41;<br/>ElseIf &#40;Condition&#41; Then<br/>    Statement&#40;s&#41;<br/>Else<br/>    Statement&#40;s&#41;<br/>EndIf<br/></code></pre><br/><br/>Now here I admit that the single indented lines get lost, so, a variation...<br/><br/><pre><code><br/>If &#40;Condition&#41; Then<br/>    Statement&#40;s&#41;<br/><br/>ElseIf &#40;Condition&#41; Then<br/>    Statement&#40;s&#41;<br/><br/>Else<br/>    Statement&#40;s&#41;<br/><br/>EndIf<br/></code></pre><br/><br/>This looks close to how a visual design typesetter might layout informative text, and for good reason,... because it works. I good solid visual line heaps to increase understandability of the structure of the material. Its too bad more computer people dont study such.",
      "PostDate": "2007-07-18T16:46:34+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13570",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "I usually put in a blank line at the end (and half of the time the start) of indents.. Mostly because that's where bits get added - but it also helps to show that it's the end.\r\nSame goes for if's and select cases.\r\n\r\nI can't believe replacing &quot;{&quot;&quot;}&quot; with &quot;begin&quot;&quot;end&quot; speeds up your reading though. The test surely gives meaning to the line, and means you need to read and process it to decide it's the start or end - while {} is a much more immediate visual - much like colour.",
      "EditableFormat": "bbcode",
      "HTML": "I usually put in a blank line at the end (and half of the time the start) of indents.. Mostly because that's where bits get added - but it also helps to show that it's the end.<br/>Same goes for if's and select cases.<br/><br/>I can't believe replacing &quot;{&quot;&quot;}&quot; with &quot;begin&quot;&quot;end&quot; speeds up your reading though. The test surely gives meaning to the line, and means you need to read and process it to decide it's the start or end - while {} is a much more immediate visual - much like colour.",
      "PostDate": "2007-07-18T17:07:56+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13571",
      "UserId": 0,
      "Username": "henrytj",
      "UserAvatar": null,
      "UserGravatar": "5f6247178d5dd662b392a89e1e31284c",
      "EditableText": "[quote=&quot;Tr0n&quot;:1rpde3al]\n Now, if they had an image of a handicapped person that'd be taking it a bit far - \n[/quote:1rpde3al]\n\nNot at all, and good marketing people know this. Why do you think that an operating system called &quot;eunuchs&quot; (when spoken is the same as a term for a castrated harem guard) was change to Linux, etc? The core of the OS is great, but the name is stupid, stupid, stupid.\n\n[quote=&quot;Tr0n&quot;:1rpde3al]\nbut using it as a shortened &quot;[b:1rpde3al]G[/b:1rpde3al]nu [b:1rpde3al]IM[/b:1rpde3al]age [b:1rpde3al]P[/b:1rpde3al]rogram&quot; is fine.\n[/quote:1rpde3al]\r\n\r\nBut &quot;Gnu&quot; means nothing to most people. Its an inside joke to computer people making Gimp even worse of a name to try to market something.\r\n\r\n&quot;Project Dogwaffle&quot; an otherwise promising graphics program will probably not catch on with the public because of the stupid sounding joke name it was given.\r\n\r\nOn the other hand, &quot;Quest&quot; is a great name for a adventure game making system. Much better than TADS and some of the others that don't mean anything to most people.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Tr0n wrote:</cite><br/> Now, if they had an image of a handicapped person that'd be taking it a bit far - <br/></blockquote><br/><br/>Not at all, and good marketing people know this. Why do you think that an operating system called &quot;eunuchs&quot; (when spoken is the same as a term for a castrated harem guard) was change to Linux, etc? The core of the OS is great, but the name is stupid, stupid, stupid.<br/><br/><blockquote><cite>Tr0n wrote:</cite><br/>but using it as a shortened &quot;<span style=\"font-weight:bold;\">G</span>nu <span style=\"font-weight:bold;\">IM</span>age <span style=\"font-weight:bold;\">P</span>rogram&quot; is fine.<br/></blockquote><br/><br/>But &quot;Gnu&quot; means nothing to most people. Its an inside joke to computer people making Gimp even worse of a name to try to market something.<br/><br/>&quot;Project Dogwaffle&quot; an otherwise promising graphics program will probably not catch on with the public because of the stupid sounding joke name it was given.<br/><br/>On the other hand, &quot;Quest&quot; is a great name for a adventure game making system. Much better than TADS and some of the others that don't mean anything to most people.",
      "PostDate": "2007-07-18T17:19:23+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13575",
      "UserId": 0,
      "Username": "Elexxorine",
      "UserAvatar": null,
      "UserGravatar": "a220ee44d8fe2f07029cf1f61b98bf40",
      "EditableText": "Gnu is 'gnu not unix', even I know that!\r\n\r\nQuest is a good name.",
      "EditableFormat": "bbcode",
      "HTML": "Gnu is 'gnu not unix', even I know that!<br/><br/>Quest is a good name.",
      "PostDate": "2007-07-19T11:03:11+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13577",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "[quote:30i8wk1d](when spoken is the same as a term for a castrated harem guard)[/quote:30i8wk1d]Where did the 'i' go? It's &quot;Eu-nicks&quot;, but yes - that's joked about occasionally.. Was orriginally named &quot;Unics&quot; - which was in contrast to &quot;Multics&quot; - multi -&gt; uni.\nAlso, Linux is more of an attempt to create a free OS which mirrors Unix, and I'd have thought it was named more after his name than Unix.\n[quote:30i8wk1d]But &quot;Gnu&quot; means nothing to most people.[/quote:30i8wk1d]ASDA doesn't make any sense to me - it's not an anagram, and it's surely a bad name?\r\nThere's &quot;Wall-mart&quot;... They sell (proper) walls?\r\n&quot;AIDS&quot; how cheery does that actually sound until you know what it is?\r\n&quot;NATO&quot; - is that some kind of food?\r\n&quot;radar&quot; oh right, I had one of those when I was a kid, it lived until it was 5 and ate crumpets all the time.\r\n&quot;SNES&quot; - bless you.\r\n&quot;scuba&quot; that's a spade right?\r\n&quot;broadband&quot; when am I getting the music and exactly how wide does my TV need to be to see it?\r\n&quot;G.E.D.&quot; &quot;Q.E.D&quot; and loads more are meaningless until you're TOLD what they are [i:30i8wk1d]actually[/i:30i8wk1d] for.\r\n\r\nThere's also games: &quot;Rainbow Six&quot; - it's a kids game right? &quot;WoW&quot; - ooo, trains? &quot;Nintendo Wii&quot; Yup, you know I had to! &quot;halo&quot; that's gotta be religeous. &quot;DEFCON&quot; who wants a game about conventions? &quot;half life&quot; - granted, I don't know (REALLY!!) what it's about..... radiation?\r\n\r\nAs I've already said, only so many graphics programs can be called &quot;super paint pro&quot; before you need to make your program stand out from the crowd, not to mention picking an original name.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>(when spoken is the same as a term for a castrated harem guard)</p></blockquote>Where did the 'i' go? It's &quot;Eu-nicks&quot;, but yes - that's joked about occasionally.. Was orriginally named &quot;Unics&quot; - which was in contrast to &quot;Multics&quot; - multi -&gt; uni.<br/>Also, Linux is more of an attempt to create a free OS which mirrors Unix, and I'd have thought it was named more after his name than Unix.<br/><blockquote><p>But &quot;Gnu&quot; means nothing to most people.</p></blockquote>ASDA doesn't make any sense to me - it's not an anagram, and it's surely a bad name?<br/>There's &quot;Wall-mart&quot;... They sell (proper) walls?<br/>&quot;AIDS&quot; how cheery does that actually sound until you know what it is?<br/>&quot;NATO&quot; - is that some kind of food?<br/>&quot;radar&quot; oh right, I had one of those when I was a kid, it lived until it was 5 and ate crumpets all the time.<br/>&quot;SNES&quot; - bless you.<br/>&quot;scuba&quot; that's a spade right?<br/>&quot;broadband&quot; when am I getting the music and exactly how wide does my TV need to be to see it?<br/>&quot;G.E.D.&quot; &quot;Q.E.D&quot; and loads more are meaningless until you're TOLD what they are <span style=\"font-style:italic;\">actually</span> for.<br/><br/>There's also games: &quot;Rainbow Six&quot; - it's a kids game right? &quot;WoW&quot; - ooo, trains? &quot;Nintendo Wii&quot; Yup, you know I had to! &quot;halo&quot; that's gotta be religeous. &quot;DEFCON&quot; who wants a game about conventions? &quot;half life&quot; - granted, I don't know (REALLY!!) what it's about..... radiation?<br/><br/>As I've already said, only so many graphics programs can be called &quot;super paint pro&quot; before you need to make your program stand out from the crowd, not to mention picking an original name.",
      "PostDate": "2007-07-19T12:52:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13579",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "[quote=&quot;henrytj&quot;:1yh7vxxi]No, C will not let me do that because it will not let me type in mixed case keyworks &quot;If&quot; and &quot;Else.&quot; And, yes, mixed case for me can make that much of a difference. ANd there is no reason to require case sensativity in keywords (in a compiled language) as there are no &quot;IF&quot; keyword that does something different than &quot;if&quot; or &quot;If.&quot; So after decades of mixing my case as I have done with pervious languages, I have to becarefull what I type in C and its related languages. That is forcing a style on me.[/quote:1yh7vxxi]\r\n\r\nIf it matters that much to you, can't you do:\r\n\r\n[code:1yh7vxxi]\n#define If if\n#define Else else\n[/code:1yh7vxxi]\r\n\r\nOr, you could write a small filter than lowercases everything not in quotes, then create a makefile rule that uses it to convert your own extension to .c.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>henrytj wrote:</cite>No, C will not let me do that because it will not let me type in mixed case keyworks &quot;If&quot; and &quot;Else.&quot; And, yes, mixed case for me can make that much of a difference. ANd there is no reason to require case sensativity in keywords (in a compiled language) as there are no &quot;IF&quot; keyword that does something different than &quot;if&quot; or &quot;If.&quot; So after decades of mixing my case as I have done with pervious languages, I have to becarefull what I type in C and its related languages. That is forcing a style on me.</blockquote><br/><br/>If it matters that much to you, can't you do:<br/><br/><pre><code><br/>#define If if<br/>#define Else else<br/></code></pre><br/><br/>Or, you could write a small filter than lowercases everything not in quotes, then create a makefile rule that uses it to convert your own extension to .c.",
      "PostDate": "2007-07-20T14:30:55+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13585",
      "UserId": 0,
      "Username": "henrytj",
      "UserAvatar": null,
      "UserGravatar": "5f6247178d5dd662b392a89e1e31284c",
      "EditableText": "[quote=&quot;Tr0n&quot;:15fqcv8c]\n&quot;AIDS&quot; how cheery does that actually sound until you know what it is?\n[/quote:15fqcv8c]\r\n\r\nIf AIDS was not an incurably fatal sexually transmitted disease, then the general public would probably not know of it the way they do now. In fact I doubt that many know what the acronym stands for, they just know that it is very bad. \r\n\r\nAnd interesting about this example is that before this was known as a disease, there was a diet product frequently advertised on television (at least in the US) called something similar, like AYDS. When AIDS became known as a disease the diet product either went out of business or they changed their name. A perfect example of how a name can doom a product. (ANd I used &quot;Doom&quot; on purpose as it is yet another game name, but that one has a good name for what it is.)",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Tr0n wrote:</cite><br/>&quot;AIDS&quot; how cheery does that actually sound until you know what it is?<br/></blockquote><br/><br/>If AIDS was not an incurably fatal sexually transmitted disease, then the general public would probably not know of it the way they do now. In fact I doubt that many know what the acronym stands for, they just know that it is very bad. <br/><br/>And interesting about this example is that before this was known as a disease, there was a diet product frequently advertised on television (at least in the US) called something similar, like AYDS. When AIDS became known as a disease the diet product either went out of business or they changed their name. A perfect example of how a name can doom a product. (ANd I used &quot;Doom&quot; on purpose as it is yet another game name, but that one has a good name for what it is.)",
      "PostDate": "2007-07-21T00:44:41+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "13586",
      "UserId": 0,
      "Username": "cangelo",
      "UserAvatar": null,
      "UserGravatar": "1b8de8e7a06afeccae35afb22dc64a58",
      "EditableText": "[quote=&quot;Freak&quot;:2ntritcr][quote=&quot;henrytj&quot;:2ntritcr]No, C will not let me do that because it will not let me type in mixed case keyworks &quot;If&quot; and &quot;Else.&quot; And, yes, mixed case for me can make that much of a difference. ANd there is no reason to require case sensativity in keywords (in a compiled language) as there are no &quot;IF&quot; keyword that does something different than &quot;if&quot; or &quot;If.&quot; So after decades of mixing my case as I have done with pervious languages, I have to becarefull what I type in C and its related languages. That is forcing a style on me.[/quote:2ntritcr]\n\nIf it matters that much to you, can't you do:\n\n[code:2ntritcr]\n#define If if\n#define Else else\n[/code:2ntritcr]\n\nOr, you could write a small filter than lowercases everything not in quotes, then create a makefile rule that uses it to convert your own extension to .c.[/quote:2ntritcr]\r\n\r\nI explained this earlier, but I don't think he gets it.  He is stuck on forcing his style on the language without realizing that he can.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Freak wrote:</cite><blockquote><p><b>&quot;henrytj&quot;</b></p><p>No, C will not let me do that because it will not let me type in mixed case keyworks &quot;If&quot; and &quot;Else.&quot; And, yes, mixed case for me can make that much of a difference. ANd there is no reason to require case sensativity in keywords (in a compiled language) as there are no &quot;IF&quot; keyword that does something different than &quot;if&quot; or &quot;If.&quot; So after decades of mixing my case as I have done with pervious languages, I have to becarefull what I type in C and its related languages. That is forcing a style on me.</blockquote><br/><br/>If it matters that much to you, can't you do:<br/><br/><pre><code><br/>#define If if<br/>#define Else else<br/></code></pre><br/><br/>Or, you could write a small filter than lowercases everything not in quotes, then create a makefile rule that uses it to convert your own extension to .c.</p></blockquote><br/><br/>I explained this earlier, but I don't think he gets it.  He is stuck on forcing his style on the language without realizing that he can.",
      "PostDate": "2007-07-21T02:31:05+01:00",
      "LastEditDate": null
    }
  ]
}
