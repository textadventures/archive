{
  "Topic": {
    "TopicId": "5333",
    "ForumId": "10",
    "Title": "Something seems wrong...",
    "LastUpdated": "2015-07-04T22:22:31+01:00",
    "ReplyCount": 7
  },
  "Posts": [
    {
      "PostId": "36915",
      "UserId": 0,
      "Username": "DGNXFoxN",
      "UserAvatar": null,
      "UserGravatar": "0f6761b138c28d91f2f04728c5045e9c",
      "EditableText": "Hi there,\n\nI was working on &quot;interactivity with servers&quot; when I suddenly realized that it was a huge amount of code for just one server.\nWith the idea to add a huge amount of servers I couldn't help but thinking that there just had to be a better way.\n[b:1u8savgv]I was hoping if someone could help me out with this?[/b:1u8savgv]\n\nThere are a lot of attribute checks and flag checks done when the player interacts with a server.\nBut I still believe it could be done more effective and with way less coding... I was thinking functions but I have no clue how to do it so that\nnot every server looks exactly the same.\n\nThanks!",
      "EditableFormat": "bbcode",
      "HTML": "Hi there,<br/><br/>I was working on &quot;interactivity with servers&quot; when I suddenly realized that it was a huge amount of code for just one server.<br/>With the idea to add a huge amount of servers I couldn't help but thinking that there just had to be a better way.<br/><span style=\"font-weight:bold;\">I was hoping if someone could help me out with this?</span><br/><br/>There are a lot of attribute checks and flag checks done when the player interacts with a server.<br/>But I still believe it could be done more effective and with way less coding... I was thinking functions but I have no clue how to do it so that<br/>not every server looks exactly the same.<br/><br/>Thanks!",
      "PostDate": "2015-07-03T10:10:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36916",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "When you talk about &quot;interactivity with servers&quot; do you mean like using google, yahoo, etc?\n\nAs far as it looking different, I'm sure you are aware of being able to change the background color/picture.  I have only changed the color, which is really easy, but I have played games where they have a different picture in the background.  You could probably doctor up a google picture and have the game command bar in a location where you would typically see the search bar in google - might make it look real, too.  I'm just talking out loud really, but I think it could be done this way and it's not too hard if you get someone who knows how to do that.\n\nAs for &quot;huge amount of code for just one server&quot;... do you mean accounting for all of the possible things that players could search for?  If so, I would say, yes, looping a function is your best bet.  And, depending on how holistic you want your search engine to be (and how crazy you might be for trying it), you can add as many search queries as you want, but I'm thinking your default response will include a gigantic range possible searches.  You can loop a default script and provide with a variety of different outputs for non-important search queries too.\n\nPerhaps I totally misunderstand your question/problem though.  Good luck!",
      "EditableFormat": "bbcode",
      "HTML": "When you talk about &quot;interactivity with servers&quot; do you mean like using google, yahoo, etc?<br/><br/>As far as it looking different, I'm sure you are aware of being able to change the background color/picture.  I have only changed the color, which is really easy, but I have played games where they have a different picture in the background.  You could probably doctor up a google picture and have the game command bar in a location where you would typically see the search bar in google - might make it look real, too.  I'm just talking out loud really, but I think it could be done this way and it's not too hard if you get someone who knows how to do that.<br/><br/>As for &quot;huge amount of code for just one server&quot;... do you mean accounting for all of the possible things that players could search for?  If so, I would say, yes, looping a function is your best bet.  And, depending on how holistic you want your search engine to be (and how crazy you might be for trying it), you can add as many search queries as you want, but I'm thinking your default response will include a gigantic range possible searches.  You can loop a default script and provide with a variety of different outputs for non-important search queries too.<br/><br/>Perhaps I totally misunderstand your question/problem though.  Good luck!",
      "PostDate": "2015-07-03T11:45:20+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36920",
      "UserId": 0,
      "Username": "DGNXFoxN",
      "UserAvatar": null,
      "UserGravatar": "0f6761b138c28d91f2f04728c5045e9c",
      "EditableText": "Well,\n\nDuring the game the player will be able to connect to a large amount of servers. Some are indeed &quot;Search Engines&quot;, others could be &quot;regular pages&quot; or &quot;News pages&quot;, etc... but there will also be servers where they can go to look for (and download) specific software.\nHowever, every server that contains files will need a login or otherwise be &quot;hacked&quot; in order to gain access to the files.\nSo to briefly sum up some of the things the code does before allowing to continue:\n\n- Does the player have access to &quot;the internet&quot;?\n- Has the player already gained access before?\n- Is the player using login credentials (that can be found) or using software to gain access?\n- When logged in what does the player want to do? Browse the files, check the log files (delete traces (still needs to be put in the code)).\n- After the choice is made (ex: browse files) player will be presented with a list of files and be able to download them.\n* When the player chooses what to download the following checks occur:\n- Is the file actually on the server (player needs to type the file name in order to download)\n- if yes, does the player already have that file? If yes, continue to installation.\n- After the download they can choose to install, if they choose yes, it will check if it is already installed...\n- then it will install...\n\nOfcourse, simulating all of this and having the game check for so many things kind of creates a big pile of code.\nAnd that is just one server. Making this a function will kind off make every website look exactly the same... text-wise atleast.\n\nEDIT: The game will have little to no images since it is supposed to be a terminal (commands only) based hacking simulator.\nYou could compare it best with TELEHACK.COM. However, I want to give it a more interesting touch.",
      "EditableFormat": "bbcode",
      "HTML": "Well,<br/><br/>During the game the player will be able to connect to a large amount of servers. Some are indeed &quot;Search Engines&quot;, others could be &quot;regular pages&quot; or &quot;News pages&quot;, etc... but there will also be servers where they can go to look for (and download) specific software.<br/>However, every server that contains files will need a login or otherwise be &quot;hacked&quot; in order to gain access to the files.<br/>So to briefly sum up some of the things the code does before allowing to continue:<br/><br/>- Does the player have access to &quot;the internet&quot;?<br/>- Has the player already gained access before?<br/>- Is the player using login credentials (that can be found) or using software to gain access?<br/>- When logged in what does the player want to do? Browse the files, check the log files (delete traces (still needs to be put in the code)).<br/>- After the choice is made (ex: browse files) player will be presented with a list of files and be able to download them.<br/>* When the player chooses what to download the following checks occur:<br/>- Is the file actually on the server (player needs to type the file name in order to download)<br/>- if yes, does the player already have that file? If yes, continue to installation.<br/>- After the download they can choose to install, if they choose yes, it will check if it is already installed...<br/>- then it will install...<br/><br/>Ofcourse, simulating all of this and having the game check for so many things kind of creates a big pile of code.<br/>And that is just one server. Making this a function will kind off make every website look exactly the same... text-wise atleast.<br/><br/>EDIT: The game will have little to no images since it is supposed to be a terminal (commands only) based hacking simulator.<br/>You could compare it best with TELEHACK.COM. However, I want to give it a more interesting touch.",
      "PostDate": "2015-07-03T13:05:37+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36921",
      "UserId": 0,
      "Username": "DGNXFoxN",
      "UserAvatar": null,
      "UserGravatar": "0f6761b138c28d91f2f04728c5045e9c",
      "EditableText": "Setting up the search engines is something I think I can do with a function containing a switch with all the different searches available. Or atleast I think that would be the best way to go <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Setting up the search engines is something I think I can do with a function containing a switch with all the different searches available. Or atleast I think that would be the best way to go <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2015-07-03T13:15:25+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36923",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "The way I have seen this handled with software development in general is to, first, get your initial one done and working. In this case, make sure the first server is working the way you want it to. Then...\n\nBegin working on the second one. Where you find you would need to duplicate code, &quot;de-dup&quot; as you go along. (There are two approaches. One is to discover the duplication as you're abut to write it, knowing what you're going to write. Then you separate out the pieces you need. And roll it into the new one as well. The second approach is to actually duplicate the code and have it working. Then de-dup, making the two instances share the same code and then be sure they both still work. The first can be quicker for smaller pieces, but the second can be safer, since you know it worked at least at one time. It helps to make snapshots along way when it's working, so you can always get back to a working state as you refactor.)\n\nThings like commands can be shared globally. Code can be put into functions and passed parameters (e.g. which server is being operated on). You can also create a base type to hold common scripts and initial attributes and then inherit your new objects from that type to gain common functionality.\n\nThat's all I can offer from a general point of view. If you have specific code that you'd like to make &quot;common&quot;, then if you post it, we can work out a good way to either parametrize and share it or just share it.",
      "EditableFormat": "bbcode",
      "HTML": "The way I have seen this handled with software development in general is to, first, get your initial one done and working. In this case, make sure the first server is working the way you want it to. Then...<br/><br/>Begin working on the second one. Where you find you would need to duplicate code, &quot;de-dup&quot; as you go along. (There are two approaches. One is to discover the duplication as you're abut to write it, knowing what you're going to write. Then you separate out the pieces you need. And roll it into the new one as well. The second approach is to actually duplicate the code and have it working. Then de-dup, making the two instances share the same code and then be sure they both still work. The first can be quicker for smaller pieces, but the second can be safer, since you know it worked at least at one time. It helps to make snapshots along way when it's working, so you can always get back to a working state as you refactor.)<br/><br/>Things like commands can be shared globally. Code can be put into functions and passed parameters (e.g. which server is being operated on). You can also create a base type to hold common scripts and initial attributes and then inherit your new objects from that type to gain common functionality.<br/><br/>That's all I can offer from a general point of view. If you have specific code that you'd like to make &quot;common&quot;, then if you post it, we can work out a good way to either parametrize and share it or just share it.",
      "PostDate": "2015-07-03T13:21:15+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36938",
      "UserId": 0,
      "Username": "DGNXFoxN",
      "UserAvatar": null,
      "UserGravatar": "0f6761b138c28d91f2f04728c5045e9c",
      "EditableText": "Seems like logic <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Not sure though how to work with the function parameters and inheriting scripts and attributes to new objects.",
      "EditableFormat": "bbcode",
      "HTML": "Seems like logic <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Not sure though how to work with the function parameters and inheriting scripts and attributes to new objects.",
      "PostDate": "2015-07-04T09:34:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36955",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "As far as running the initial check list on the very basic interactions, I would create function to run through all the common items, such as as you said, is the player connected to the internet, have they logged in here before, etc...\n\nThe next important part is to have your function reference the server in question by using 'this.&lt;attribute&gt;'. As this will allow you tun run the function from any server and it will specifically look at the attributes contained by that server itself. In this way you can create the basic functionality, then store the server specific data within the server itself while using the same function across all of them.\n\nAlternatively as Jay said, you can pass the server as a parameter when running the function and reference the current one that way.",
      "EditableFormat": "bbcode",
      "HTML": "As far as running the initial check list on the very basic interactions, I would create function to run through all the common items, such as as you said, is the player connected to the internet, have they logged in here before, etc...<br/><br/>The next important part is to have your function reference the server in question by using 'this.&lt;attribute&gt;'. As this will allow you tun run the function from any server and it will specifically look at the attributes contained by that server itself. In this way you can create the basic functionality, then store the server specific data within the server itself while using the same function across all of them.<br/><br/>Alternatively as Jay said, you can pass the server as a parameter when running the function and reference the current one that way.",
      "PostDate": "2015-07-04T15:58:53+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36962",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "[quote=&quot;DGNXFoxN&quot;:34227i8p]Not sure though how to work with the function parameters and inheriting scripts and attributes to new objects.[/quote:34227i8p]\n\nObject Types (Groups~Classes):\n\n(can be found under 'advanced' in the left side's 'tree of stuff' in the GUI~Editor)\n\n(and they can be added to Objects simply via: 'Attributes' Tab -&gt; Inherited Attributes -&gt; Add)\n\nthese hold Attributes and~or other Object Types, which these Object Types, can be added to Objects (as Inherited Attributes), giving that Object every Attribute that it holds (including the Attributes of Object Types within the Object Type).\n\nfor an example:\n\nmuch better:\n\n[code:34227i8p]&lt;object name=&quot;dragon_1&quot;&gt;\n  &lt;inherit name=&quot;dragon_object_type&quot;&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;dragon_2&quot;&gt;\n  &lt;inherit name=&quot;dragon_object_type&quot;&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;dragon_3&quot;&gt;\n  &lt;inherit name=&quot;dragon_object_type&quot;&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;dragon_4&quot;&gt;\n  &lt;inherit name=&quot;dragon_object_type&quot;&gt;\n&lt;/object&gt;\n\n&lt;type name=&quot;dragon_object_type&quot;&gt;\n  &lt;attr name=&quot;strength_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;endurance_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;dexterity_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;agility_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;speed_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;luck_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n&lt;/type&gt;[/code:34227i8p]\n\nmuch worse:\n\n[code:34227i8p]&lt;object name=&quot;dragon_1&quot;&gt;\n   &lt;attr name=&quot;strength_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;endurance_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;dexterity_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;agility_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;speed_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;luck_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;dragon_2&quot;&gt;\n  &lt;attr name=&quot;strength_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;endurance_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;dexterity_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;agility_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;speed_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;luck_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;dragon_3&quot;&gt;\n  &lt;attr name=&quot;strength_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;endurance_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;dexterity_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;agility_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;speed_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;luck_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;dragon_4&quot;&gt;\n  &lt;attr name=&quot;strength_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;endurance_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;dexterity_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;agility_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;speed_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;luck_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n&lt;/object&gt;[/code:34227i8p]\n\nand any Attribute added (or via scripting) to the Object directly, will over-ride any Inherited Attribute from an Object Type:\n\n[code:34227i8p]&lt;object name=&quot;dragon_0&quot;&gt;\n  &lt;inherit name=&quot;dragon_object_type&quot;&gt;\n  &lt;attr name=&quot;strength_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt; // this will over-ride the Inherited 'strength_integer_attribute' Attribute's Value of 100, with Value 0, meaning our 'dragon_0' Object will have 0 strength&#46;\n&lt;/object&gt;\n\n&lt;type name=&quot;dragon_object_type&quot;&gt;\n  &lt;attr name=&quot;strength_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;endurance_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;dexterity_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;agility_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;speed_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;luck_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n&lt;/type&gt;[/code:34227i8p]\n\n-------------\n\nanoher example of Object Types with Object Types (layers~levels of inheritance):\n\n[code:34227i8p]&lt;object name=&quot;claymore&quot;&gt;\n  &lt;inherit name=&quot;weapon_object_type&quot;&gt;\n  &lt;attr name=&quot;type_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;weapon&lt;/attr&gt;\n  &lt;attr name=&quot;weight_integer_attribute&quot; type=&quot;int&quot;&gt;10&lt;/attr&gt;\n  &lt;attr name=&quot;layer_integer_attribute&quot; type=&quot;int&quot;&gt;2&lt;/attr&gt;\n  &lt;attr name=&quot;two_handed_boolean_attribute&quot; type=&quot;boolean&quot;&gt;true&lt;/attr&gt;\n  &lt;attr name=&quot;physical_damage_integer_attribute&quot; type=&quot;int&quot;&gt;50&lt;/attr&gt;\n  &lt;attr name=&quot;attack_rating_integer_attribute&quot; type=&quot;int&quot;&gt;25&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;type name=&quot;equipment_object_type&quot;&gt;\n  &lt;attr name=&quot;durability_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n  &lt;attr name=&quot;equipable_boolean_attribute&quot; type=&quot;boolean&quot;&gt;true&lt;/attr&gt;\n  &lt;attr name=&quot;unequipable_boolean_attribute&quot; type=&quot;boolean&quot;&gt;true&lt;/attr&gt;\n  &lt;attr name=&quot;type_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;weapon;armor;clothing&lt;/attr&gt;\n  &lt;attr name=&quot;slot_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;head;face;neck;ears;shoulders;arms;hands;fingers;left_hand;right_hand;chest;back;waist;legs;feet&lt;/attr&gt;\n  &lt;attr name=&quot;weight_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;layer_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;equip type=&quot;script&quot;&gt;\n    // blah scripting\n  &lt;/equip&gt;\n  &lt;unequip type=&quot;script&quot;&gt;\n    // blah scripting\n  &lt;/unequip&gt;\n&lt;/type&gt;\n\n&lt;type name=&quot;weapon_object_type&quot;&gt;\n  &lt;inherit name=&quot;equipment_object_type&quot; /&gt;\n  &lt;attr name=&quot;two_handed_boolean_attribute&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;\n  &lt;attr name=&quot;physical_damage_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;fire_damage_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;water_damage_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;air_damage_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;earth_damage_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;attack_rating_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;slot_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;left_hand;right_hand&lt;/attr&gt;\n&lt;/type&gt;\n\n&lt;type name=&quot;armor_object_type&quot;&gt;\n  &lt;inherit name=&quot;equipment_object_type&quot; /&gt;\n  &lt;attr name=&quot;physical_defense_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;fire_defense_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;water_defense_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;air_defense_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;earth_defense_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;armor_class_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;slot_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;head;face;neck;ears;shoulders;arms;hands;fingers;chest;back;waist;legs;feet&lt;/attr&gt;\n&lt;/type&gt;[/code:34227i8p]\n\n---------------------------\n\nParameters are VARIABLES that can be transferred between Elements (Functions, Commands, Delegates, etc?) and also can *optionally* be locally~temporarily renamed~relabeled, too.\n\nfor example...\n\n[code:34227i8p]&lt;game name=&quot;xxx&quot;&gt;\n  &lt;attr name=&quot;player_objectlist_attribute&quot; type=&quot;objectlist&quot;&gt;player_1;player_2;player_3&lt;/attr&gt;\n  &lt;start type=&quot;script&quot;&gt;\n    show menu (&quot;Character?&quot;, game&#46;player_objectlist_attribute, false) {\n      name_function (result)\n    }\n  &lt;/start&gt;\n&lt;/game&gt;\n\n&lt;function name=&quot;name_function&quot; parameters=&quot;player_parameter&quot;&gt;\n  msg (&quot;Name?&quot;)\n  get input {\n    player_parameter&#46;alias = result\n  }\n&lt;/function&gt;[/code:34227i8p]\n\nyou pick what player you'll be using: player_1, player_2, or player_3\nlet's say you pick: result = player_2\n\nthe 'name_function' Function takes the 'result' (player_2) as its Parameter for use in its scripting, and changes its label~name to: player_parameter\n\nconceptually: player_parameter &lt;=== result &lt;=== player_2\n\nso conceptually: player_parameter.alias = player_2.alias",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>DGNXFoxN wrote:</cite>Not sure though how to work with the function parameters and inheriting scripts and attributes to new objects.</blockquote><br/><br/>Object Types (Groups~Classes):<br/><br/>(can be found under 'advanced' in the left side's 'tree of stuff' in the GUI~Editor)<br/><br/>(and they can be added to Objects simply via: 'Attributes' Tab -&gt; Inherited Attributes -&gt; Add)<br/><br/>these hold Attributes and~or other Object Types, which these Object Types, can be added to Objects (as Inherited Attributes), giving that Object every Attribute that it holds (including the Attributes of Object Types within the Object Type).<br/><br/>for an example:<br/><br/>much better:<br/><br/><pre><code>&lt;object name=&quot;dragon_1&quot;&gt;<br/>  &lt;inherit name=&quot;dragon_object_type&quot;&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;dragon_2&quot;&gt;<br/>  &lt;inherit name=&quot;dragon_object_type&quot;&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;dragon_3&quot;&gt;<br/>  &lt;inherit name=&quot;dragon_object_type&quot;&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;dragon_4&quot;&gt;<br/>  &lt;inherit name=&quot;dragon_object_type&quot;&gt;<br/>&lt;/object&gt;<br/><br/>&lt;type name=&quot;dragon_object_type&quot;&gt;<br/>  &lt;attr name=&quot;strength_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;endurance_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;dexterity_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;agility_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;speed_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;luck_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>&lt;/type&gt;</code></pre><br/><br/>much worse:<br/><br/><pre><code>&lt;object name=&quot;dragon_1&quot;&gt;<br/>   &lt;attr name=&quot;strength_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;endurance_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;dexterity_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;agility_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;speed_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;luck_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;dragon_2&quot;&gt;<br/>  &lt;attr name=&quot;strength_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;endurance_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;dexterity_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;agility_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;speed_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;luck_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;dragon_3&quot;&gt;<br/>  &lt;attr name=&quot;strength_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;endurance_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;dexterity_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;agility_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;speed_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;luck_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;dragon_4&quot;&gt;<br/>  &lt;attr name=&quot;strength_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;endurance_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;dexterity_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;agility_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;speed_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;luck_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>and any Attribute added (or via scripting) to the Object directly, will over-ride any Inherited Attribute from an Object Type:<br/><br/><pre><code>&lt;object name=&quot;dragon_0&quot;&gt;<br/>  &lt;inherit name=&quot;dragon_object_type&quot;&gt;<br/>  &lt;attr name=&quot;strength_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt; // this will over-ride the Inherited 'strength_integer_attribute' Attribute's Value of 100, with Value 0, meaning our 'dragon_0' Object will have 0 strength&#46;<br/>&lt;/object&gt;<br/><br/>&lt;type name=&quot;dragon_object_type&quot;&gt;<br/>  &lt;attr name=&quot;strength_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;endurance_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;dexterity_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;agility_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;speed_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;luck_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>&lt;/type&gt;</code></pre><br/><br/>-------------<br/><br/>anoher example of Object Types with Object Types (layers~levels of inheritance):<br/><br/><pre><code>&lt;object name=&quot;claymore&quot;&gt;<br/>  &lt;inherit name=&quot;weapon_object_type&quot;&gt;<br/>  &lt;attr name=&quot;type_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;weapon&lt;/attr&gt;<br/>  &lt;attr name=&quot;weight_integer_attribute&quot; type=&quot;int&quot;&gt;10&lt;/attr&gt;<br/>  &lt;attr name=&quot;layer_integer_attribute&quot; type=&quot;int&quot;&gt;2&lt;/attr&gt;<br/>  &lt;attr name=&quot;two_handed_boolean_attribute&quot; type=&quot;boolean&quot;&gt;true&lt;/attr&gt;<br/>  &lt;attr name=&quot;physical_damage_integer_attribute&quot; type=&quot;int&quot;&gt;50&lt;/attr&gt;<br/>  &lt;attr name=&quot;attack_rating_integer_attribute&quot; type=&quot;int&quot;&gt;25&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;type name=&quot;equipment_object_type&quot;&gt;<br/>  &lt;attr name=&quot;durability_integer_attribute&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>  &lt;attr name=&quot;equipable_boolean_attribute&quot; type=&quot;boolean&quot;&gt;true&lt;/attr&gt;<br/>  &lt;attr name=&quot;unequipable_boolean_attribute&quot; type=&quot;boolean&quot;&gt;true&lt;/attr&gt;<br/>  &lt;attr name=&quot;type_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;weapon;armor;clothing&lt;/attr&gt;<br/>  &lt;attr name=&quot;slot_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;head;face;neck;ears;shoulders;arms;hands;fingers;left_hand;right_hand;chest;back;waist;legs;feet&lt;/attr&gt;<br/>  &lt;attr name=&quot;weight_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;layer_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;equip type=&quot;script&quot;&gt;<br/>    // blah scripting<br/>  &lt;/equip&gt;<br/>  &lt;unequip type=&quot;script&quot;&gt;<br/>    // blah scripting<br/>  &lt;/unequip&gt;<br/>&lt;/type&gt;<br/><br/>&lt;type name=&quot;weapon_object_type&quot;&gt;<br/>  &lt;inherit name=&quot;equipment_object_type&quot; /&gt;<br/>  &lt;attr name=&quot;two_handed_boolean_attribute&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;<br/>  &lt;attr name=&quot;physical_damage_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;fire_damage_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;water_damage_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;air_damage_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;earth_damage_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;attack_rating_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;slot_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;left_hand;right_hand&lt;/attr&gt;<br/>&lt;/type&gt;<br/><br/>&lt;type name=&quot;armor_object_type&quot;&gt;<br/>  &lt;inherit name=&quot;equipment_object_type&quot; /&gt;<br/>  &lt;attr name=&quot;physical_defense_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;fire_defense_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;water_defense_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;air_defense_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;earth_defense_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;armor_class_integer_attribute&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;slot_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;head;face;neck;ears;shoulders;arms;hands;fingers;chest;back;waist;legs;feet&lt;/attr&gt;<br/>&lt;/type&gt;</code></pre><br/><br/>---------------------------<br/><br/>Parameters are VARIABLES that can be transferred between Elements (Functions, Commands, Delegates, etc?) and also can *optionally* be locally~temporarily renamed~relabeled, too.<br/><br/>for example...<br/><br/><pre><code>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;attr name=&quot;player_objectlist_attribute&quot; type=&quot;objectlist&quot;&gt;player_1;player_2;player_3&lt;/attr&gt;<br/>  &lt;start type=&quot;script&quot;&gt;<br/>    show menu (&quot;Character?&quot;, game&#46;player_objectlist_attribute, false) {<br/>      name_function (result)<br/>    }<br/>  &lt;/start&gt;<br/>&lt;/game&gt;<br/><br/>&lt;function name=&quot;name_function&quot; parameters=&quot;player_parameter&quot;&gt;<br/>  msg (&quot;Name?&quot;)<br/>  get input {<br/>    player_parameter&#46;alias = result<br/>  }<br/>&lt;/function&gt;</code></pre><br/><br/>you pick what player you'll be using: player_1, player_2, or player_3<br/>let's say you pick: result = player_2<br/><br/>the 'name_function' Function takes the 'result' (player_2) as its Parameter for use in its scripting, and changes its label~name to: player_parameter<br/><br/>conceptually: player_parameter &lt;=== result &lt;=== player_2<br/><br/>so conceptually: player_parameter.alias = player_2.alias",
      "PostDate": "2015-07-04T22:22:31+01:00",
      "LastEditDate": null
    }
  ]
}
