{
  "Topic": {
    "TopicId": "5451",
    "ForumId": "10",
    "Title": "Problem with documented dictionary functions",
    "LastUpdated": "2015-08-31T02:32:07+01:00",
    "ReplyCount": 6
  },
  "Posts": [
    {
      "PostId": "37816",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "for some reason I seem to be having issues with the documented dictionary functions. For pretty much every dictionary related function other than adding or removing an item I get this.\n[code:1fdnipen]Failed to load game&#46;\nThe following errors occurred&#58;\nError&#58; Error adding script attribute 'roll_monster' to element 'combat'&#58; Function not found&#58; 'DictionaryItem'\n[/code:1fdnipen]\n\nThe code for this specific error is here\n[code:1fdnipen]// select random monster from the combat list\ncount = ListCount (Monster_Control&#46;combat_list)\nmonster_id = StringListItem (Monster_Control&#46;combat_list, GetRandomInt (0, count-1))\n// set monster data\nDictionaryItem (dictionary, string key)[/code:1fdnipen]\n\nI left the function parameters at default as I was changing stuff and just trying to get the game to even register the function correctly first. Did I somehow lose a library of dictionary functions or something of the sort? I can create, the dictionary and add and remove items from it, but no other related functions seem to register, at least the ones that are currently documented.",
      "EditableFormat": "bbcode",
      "HTML": "for some reason I seem to be having issues with the documented dictionary functions. For pretty much every dictionary related function other than adding or removing an item I get this.<br/><pre><code>Failed to load game&#46;<br/>The following errors occurred&#58;<br/>Error&#58; Error adding script attribute 'roll_monster' to element 'combat'&#58; Function not found&#58; 'DictionaryItem'<br/></code></pre><br/><br/>The code for this specific error is here<br/><pre><code>// select random monster from the combat list<br/>count = ListCount (Monster_Control&#46;combat_list)<br/>monster_id = StringListItem (Monster_Control&#46;combat_list, GetRandomInt (0, count-1))<br/>// set monster data<br/>DictionaryItem (dictionary, string key)</code></pre><br/><br/>I left the function parameters at default as I was changing stuff and just trying to get the game to even register the function correctly first. Did I somehow lose a library of dictionary functions or something of the sort? I can create, the dictionary and add and remove items from it, but no other related functions seem to register, at least the ones that are currently documented.",
      "PostDate": "2015-08-30T19:01:32+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37817",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "take a look at this code sample, as I'm hoping it can help you understand using Lists+Dictionaries, and be able to fix your issue from it:\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5138\">viewtopic.php?f=18&amp;t=5138</a><!-- l -->\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5137\">viewtopic.php?f=18&amp;t=5137</a><!-- l -->\n\n----------\n\nI'm not sure what your design is (need more info), so... if you're using a List and a Dictionary...\n\nmake sure that Dictionary Attributes are indeed Dictionary Attributes\nmake sure that your List Attributes are indeed  List Attributes\n\nyour code otherwise looks fine (do note that your upper code's Attributes are List Attributes), besides your 'DictionaryItem' bottom line of code, which needs to be:\n\nVARIABLE = DictionaryItem (Object_name.Attribute_name, &quot;key_string_name&quot;)\n// and if you want to display your Dictionary's (key_string_name) selected Value:\nmsg (VARIABLE)\n\nLastly, just double-check that you got no Typos, make sure your Objects and Attributes are spelled~typed correctly\n\nlastly lastly, from your error... maybe you got a 'combat' somewhere in your entire game code, when it should be (for example~possibly): 'combat_list'",
      "EditableFormat": "bbcode",
      "HTML": "take a look at this code sample, as I'm hoping it can help you understand using Lists+Dictionaries, and be able to fix your issue from it:<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5138\">viewtopic.php?f=18&amp;t=5138</a><!-- l --><br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5137\">viewtopic.php?f=18&amp;t=5137</a><!-- l --><br/><br/>----------<br/><br/>I'm not sure what your design is (need more info), so... if you're using a List and a Dictionary...<br/><br/>make sure that Dictionary Attributes are indeed Dictionary Attributes<br/>make sure that your List Attributes are indeed  List Attributes<br/><br/>your code otherwise looks fine (do note that your upper code's Attributes are List Attributes), besides your 'DictionaryItem' bottom line of code, which needs to be:<br/><br/>VARIABLE = DictionaryItem (Object_name.Attribute_name, &quot;key_string_name&quot;)<br/>// and if you want to display your Dictionary's (key_string_name) selected Value:<br/>msg (VARIABLE)<br/><br/>Lastly, just double-check that you got no Typos, make sure your Objects and Attributes are spelled~typed correctly<br/><br/>lastly lastly, from your error... maybe you got a 'combat' somewhere in your entire game code, when it should be (for example~possibly): 'combat_list'",
      "PostDate": "2015-08-30T19:15:49+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37819",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;TinFoilMkIV&quot;:2ajy1945]The code for this specific error is here\n[code:2ajy1945]// select random monster from the combat list\ncount = ListCount (Monster_Control&#46;combat_list)\nmonster_id = StringListItem (Monster_Control&#46;combat_list, GetRandomInt (0, count-1))\n// set monster data\nDictionaryItem (dictionary, string key)[/code:2ajy1945][/quote:2ajy1945]\nWhen the documentation says &quot;string key&quot; it means you need to supply a key, which is a string. And by &quot;dictionary&quot;, it means you have to send the specific dictionary\nI am not sure exactly what you are trying to do, but perhaps this:\n[code:2ajy1945]DictionaryItem (Monster_Control&#46;dictionary_of_monsters, monster_id)[/code:2ajy1945]\n... assuming you have a dictionary attribute of Monster_Control called dictionary_of_monsters, each accessed by the key you retrieve from Monster_Control.combat_list.\n\nWhat exactly are you trying to do? If you have a list of monsters, I would personally put them in a room, rather than a dictionary, and use GetDirectChildren to get a list of them.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>TinFoilMkIV wrote:</cite>The code for this specific error is here<br/><pre><code>// select random monster from the combat list<br/>count = ListCount (Monster_Control&#46;combat_list)<br/>monster_id = StringListItem (Monster_Control&#46;combat_list, GetRandomInt (0, count-1))<br/>// set monster data<br/>DictionaryItem (dictionary, string key)</code></pre></blockquote><br/>When the documentation says &quot;string key&quot; it means you need to supply a key, which is a string. And by &quot;dictionary&quot;, it means you have to send the specific dictionary<br/>I am not sure exactly what you are trying to do, but perhaps this:<br/><pre><code>DictionaryItem (Monster_Control&#46;dictionary_of_monsters, monster_id)</code></pre><br/>... assuming you have a dictionary attribute of Monster_Control called dictionary_of_monsters, each accessed by the key you retrieve from Monster_Control.combat_list.<br/><br/>What exactly are you trying to do? If you have a list of monsters, I would personally put them in a room, rather than a dictionary, and use GetDirectChildren to get a list of them.",
      "PostDate": "2015-08-30T19:48:22+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37822",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "well the problem is that it's throwing an error for the function itself, it's not even getting to the point where it attempts to look at the dictionary or key in question.\n\nAlso I'm going with this method because I plan to only use one monster object which will have it's attributes modified off a master list after having a valid id chosen.\n\nBasically it works like this. I have a monster data dictionary that contains attributes for each monster by its system name, basically a name that isn't necessarily what I want displayed, each area and such has a specific monster list which is then further limited by level requirements among other things which are used to build the combat list, which then contains the ID for each type of monster that is valid for a combat encounter, so when an encounter happens I need to pick something off the combat list, then grab its info from the master dictionary, which contains the actual monster info. If I can get that to work then I can set my universal monster object to become the monster character of an appropriate type when I need it to.\n\nBut I'm running into the above issue of Quest throwing errors for pretty much all the Dictionary functions besides add and remove.\n\n\nEDIT: okay looks like I may have just needed to take some time off and step back, I think I actually see the problem, I'm trying to reference an item from the dictionary as a function instead of assigning it to something. I was playing around with a script dictionary before and it seems I've forgotten that I actually need to specify what its doing with the dictionary item. Going to test this and see if it resolves, which I suspect it will.",
      "EditableFormat": "bbcode",
      "HTML": "well the problem is that it's throwing an error for the function itself, it's not even getting to the point where it attempts to look at the dictionary or key in question.<br/><br/>Also I'm going with this method because I plan to only use one monster object which will have it's attributes modified off a master list after having a valid id chosen.<br/><br/>Basically it works like this. I have a monster data dictionary that contains attributes for each monster by its system name, basically a name that isn't necessarily what I want displayed, each area and such has a specific monster list which is then further limited by level requirements among other things which are used to build the combat list, which then contains the ID for each type of monster that is valid for a combat encounter, so when an encounter happens I need to pick something off the combat list, then grab its info from the master dictionary, which contains the actual monster info. If I can get that to work then I can set my universal monster object to become the monster character of an appropriate type when I need it to.<br/><br/>But I'm running into the above issue of Quest throwing errors for pretty much all the Dictionary functions besides add and remove.<br/><br/><br/>EDIT: okay looks like I may have just needed to take some time off and step back, I think I actually see the problem, I'm trying to reference an item from the dictionary as a function instead of assigning it to something. I was playing around with a script dictionary before and it seems I've forgotten that I actually need to specify what its doing with the dictionary item. Going to test this and see if it resolves, which I suspect it will.",
      "PostDate": "2015-08-30T20:16:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37823",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "I put this in the start script of a test game, and it worked fine (Quest 5.6.1):\n[code:3zemf3lw]game&#46;dict = NewStringDictionary()\ndictionary add (game&#46;dict, &quot;one&quot;, &quot;Item one&quot;)\ndictionary add (game&#46;dict, &quot;two&quot;, &quot;The second item&quot;)\nmsg(DictionaryCount(game&#46;dict))\nmsg(StringDictionaryItem (game&#46;dict, &quot;one&quot;))[/code:3zemf3lw]",
      "EditableFormat": "bbcode",
      "HTML": "I put this in the start script of a test game, and it worked fine (Quest 5.6.1):<br/><pre><code>game&#46;dict = NewStringDictionary()<br/>dictionary add (game&#46;dict, &quot;one&quot;, &quot;Item one&quot;)<br/>dictionary add (game&#46;dict, &quot;two&quot;, &quot;The second item&quot;)<br/>msg(DictionaryCount(game&#46;dict))<br/>msg(StringDictionaryItem (game&#46;dict, &quot;one&quot;))</code></pre>",
      "PostDate": "2015-08-30T20:21:34+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37824",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "Yea the problem was I was just calling 'DictionaryItem' by itself as if it were a function and not as a reference, it's working fine now that I actually took a moment to notice what I was actually trying to do with it.\n\nThanks for the responses, although they didn't directly point out the problem just discussing it and taking a second look at my own code helped me see what I was overlooking.\n\nEDIT: actually HK did catch my error above although I missed that bit my first read through, maybe I subconsciously picked up on it? idk, either way I got it working now.\n\nAlso to answer the comment about 'combat' I'm using it as a control object to try and keep the references to combat related attributes clean and easy to reference, probably could stand to clean up some of my other control object names tbh.",
      "EditableFormat": "bbcode",
      "HTML": "Yea the problem was I was just calling 'DictionaryItem' by itself as if it were a function and not as a reference, it's working fine now that I actually took a moment to notice what I was actually trying to do with it.<br/><br/>Thanks for the responses, although they didn't directly point out the problem just discussing it and taking a second look at my own code helped me see what I was overlooking.<br/><br/>EDIT: actually HK did catch my error above although I missed that bit my first read through, maybe I subconsciously picked up on it? idk, either way I got it working now.<br/><br/>Also to answer the comment about 'combat' I'm using it as a control object to try and keep the references to combat related attributes clean and easy to reference, probably could stand to clean up some of my other control object names tbh.",
      "PostDate": "2015-08-30T20:27:01+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37825",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I probably edited in that part, as a later addition, after you already read my post. So, it likely wasn't there when you read my post.\n\n------\n\nremember that the 'ListItem~XXXListItem' and 'DictionaryItem~XXXDictionaryItem' are Functions that RETURN a~n: (string~text, Object, or a Script)\n\n-------\n\nso, *ONLY* the 'ScriptDictionaryItem' is different, requiring:\n\ninvoke (ScriptDictionaryItem(Object_name.Attribute_name, &quot;string_key_name&quot;))\n\nto activate the returned Script~s, as you don't set~assign a Script Attribute (a VARIABLE) to a VARIABLE, lol, you want to run~active~execute the Script Attribute.\n\n--------\n\nall of the others (String~Object List~Dictionary) require:\n\nVARIABLE = XXXListItem (Object_name.Attribute_name, index_number)\n\nVARIABLE = XXXDictionaryItem (Object_name.Attribute_name, &quot;string_key_name&quot;)\n\n-------\n\nLists:\n\ninput: (index number: 0 to ListCount) ---&gt; StringListItem ---&gt; output~returns: string~text\ninput: (index number: 0 to ListCount) ---&gt; ObjectListItem ---&gt; output~returns: Object\n\nDictionaries:\n\ninput: string ---&gt; StringDictionaryItem ---&gt; output~returns: string~text\ninput: string ---&gt; ObjectDictionaryItem ---&gt; output~returns: Object\ninput: string ---&gt; ScriptDictionaryItem ---&gt; output~returns: Script~s",
      "EditableFormat": "bbcode",
      "HTML": "I probably edited in that part, as a later addition, after you already read my post. So, it likely wasn't there when you read my post.<br/><br/>------<br/><br/>remember that the 'ListItem~XXXListItem' and 'DictionaryItem~XXXDictionaryItem' are Functions that RETURN a~n: (string~text, Object, or a Script)<br/><br/>-------<br/><br/>so, *ONLY* the 'ScriptDictionaryItem' is different, requiring:<br/><br/>invoke (ScriptDictionaryItem(Object_name.Attribute_name, &quot;string_key_name&quot;))<br/><br/>to activate the returned Script~s, as you don't set~assign a Script Attribute (a VARIABLE) to a VARIABLE, lol, you want to run~active~execute the Script Attribute.<br/><br/>--------<br/><br/>all of the others (String~Object List~Dictionary) require:<br/><br/>VARIABLE = XXXListItem (Object_name.Attribute_name, index_number)<br/><br/>VARIABLE = XXXDictionaryItem (Object_name.Attribute_name, &quot;string_key_name&quot;)<br/><br/>-------<br/><br/>Lists:<br/><br/>input: (index number: 0 to ListCount) ---&gt; StringListItem ---&gt; output~returns: string~text<br/>input: (index number: 0 to ListCount) ---&gt; ObjectListItem ---&gt; output~returns: Object<br/><br/>Dictionaries:<br/><br/>input: string ---&gt; StringDictionaryItem ---&gt; output~returns: string~text<br/>input: string ---&gt; ObjectDictionaryItem ---&gt; output~returns: Object<br/>input: string ---&gt; ScriptDictionaryItem ---&gt; output~returns: Script~s",
      "PostDate": "2015-08-31T02:32:07+01:00",
      "LastEditDate": null
    }
  ]
}
