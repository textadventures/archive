{
  "Topic": {
    "TopicId": "yu1lfwxfskwswhjkbeckcq",
    "ForumId": "10",
    "Title": "locked door",
    "LastUpdated": "2019-01-28T23:16:18.1464249Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "fd2c5e89-6972-49c2-9908-87a85e779e46",
      "UserId": 398099,
      "Username": "Lioncat850",
      "AvatarUrl": "https://secure.gravatar.com/avatar/ddd6c77f7477bf775bced0d4a5b6a139?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "how do i make it so a player can use a key on a locked door so they can get through?",
      "EditableFormat": "markdown",
      "HTML": "<p>how do i make it so a player can use a key on a locked door so they can get through?</p>\n\n",
      "PostDate": "2019-01-28T23:16:18.1464249Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5282f52a-a938-401a-8953-1aab59697e7e",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Many methods but I use this...\r\n\r\n1.  Have object door with open verb attached.  Make statement that says it’s locked.\r\n2.  Have invisible exit.\r\n3.  Have use verb on object key on object door.\r\n4.  Make door invisible (or remove object door), remove object key, and make exit visible.\r\n\r\nIt’s cheap but it’s easy especially if the door no longer needs to be visible.  And why would it?  It’s already open.  Using doors as containers is a pain in the ass.  Just an FYI.",
      "EditableFormat": "markdown",
      "HTML": "<p>Many methods but I use this...</p>\n<ol>\n<li>Have object door with open verb attached.  Make statement that says it’s locked.</li>\n<li>Have invisible exit.</li>\n<li>Have use verb on object key on object door.</li>\n<li>Make door invisible (or remove object door), remove object key, and make exit visible.</li>\n</ol>\n<p>It’s cheap but it’s easy especially if the door no longer needs to be visible.  And why would it?  It’s already open.  Using doors as containers is a pain in the ass.  Just an FYI.</p>\n\n",
      "PostDate": "2019-01-29T03:36:47.3677091Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f2d98941-963d-4d61-9b2b-04f9258c0d20",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Using doors as containers is a pain in the ass.\r\n\r\nIt is the expected way to do it, however, especially now that 'open' and 'close' are reserved, meaning the suggested first step above doesn't work in the latest version of Quest.\r\n\r\nAnother method would be:\r\n1. Decide on the desired behaviour of the door. Let's assume that commands to open, unlock, and go to the room beyond the door, _nextroom_, all result in the door being automatically unlocked, opened, and the player going forward into that room, if the player has the key.\r\n2. Define the door as a container with (a) isopen set to false (open is the default); (b) in the script section for \"after opening the object\" put: _MoveObject (player, next_room)_ (c) identify the key that will open the door; (d) if desired, fill in the message fields associated with open, close, lock and unlock. (e) leave the defaults of the door being unlocked and opened automatically if the player has the key.\r\n3. For the exit into the next room, select \"run a script (instead of moving the player automatically)\" and insert the code _do (door, \"openscript\")_\r\n4. Define the script for the command \"use key with door\" in the same way _do (door, \"openscript\")_\r\n\r\nThis seems to work pretty well, though at the moment there does seem to be a problem if you try to close the door after going through it, using _door.isopen = false_",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Using doors as containers is a pain in the ass.</p>\n</blockquote>\n<p>It is the expected way to do it, however, especially now that 'open' and 'close' are reserved, meaning the suggested first step above doesn't work in the latest version of Quest.</p>\n<p>Another method would be:</p>\n<ol>\n<li>Decide on the desired behaviour of the door. Let's assume that commands to open, unlock, and go to the room beyond the door, <em>nextroom</em>, all result in the door being automatically unlocked, opened, and the player going forward into that room, if the player has the key.</li>\n<li>Define the door as a container with (a) isopen set to false (open is the default); (b) in the script section for \"after opening the object\" put: <em>MoveObject (player, next_room)</em> (c) identify the key that will open the door; (d) if desired, fill in the message fields associated with open, close, lock and unlock. (e) leave the defaults of the door being unlocked and opened automatically if the player has the key.</li>\n<li>For the exit into the next room, select \"run a script (instead of moving the player automatically)\" and insert the code <em>do (door, \"openscript\")</em></li>\n<li>Define the script for the command \"use key with door\" in the same way <em>do (door, \"openscript\")</em></li>\n</ol>\n<p>This seems to work pretty well, though at the moment there does seem to be a problem if you try to close the door after going through it, using <em>door.isopen = false</em></p>\n\n",
      "PostDate": "2019-01-29T07:28:39.4406274Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "130e8088-899e-4020-9c4d-6f86dbe31b14",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "can't you use the 'openable' Object Type? (or, has this been removed in the most recent version of quest (I'm still using '550', before Pixie's improvements-to/development-work-with quest software/engine) ( http://docs.textadventures.co.uk/quest/attributes/openable.html )\r\n\r\nbut, you'd still have to handle the 'locking' stuff (you'd just have to add the built-in 'locked' Boolean Attribute, along with all the handling)\r\n\r\nhttp://docs.textadventures.co.uk/quest/attributes/container_lockable.html\r\n\r\nhmm... maybe you could use the 'surface' and 'container_lockable'... if not... then you got to implement the 'locking' stuff yourself (see the 'container_lockable link' above, along)",
      "EditableFormat": "markdown",
      "HTML": "<p>can't you use the 'openable' Object Type? (or, has this been removed in the most recent version of quest (I'm still using '550', before Pixie's improvements-to/development-work-with quest software/engine) ( http://docs.textadventures.co.uk/quest/attributes/openable.html )</p>\n<p>but, you'd still have to handle the 'locking' stuff (you'd just have to add the built-in 'locked' Boolean Attribute, along with all the handling)</p>\n<p>http://docs.textadventures.co.uk/quest/attributes/container_lockable.html</p>\n<p>hmm... maybe you could use the 'surface' and 'container_lockable'... if not... then you got to implement the 'locking' stuff yourself (see the 'container_lockable link' above, along)</p>\n\n",
      "PostDate": "2019-01-30T02:58:28.4803141Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
