{
  "Topic": {
    "TopicId": "svgnqdm-eki9hyotlsvdvq",
    "ForumId": "10",
    "Title": "Super Newbie Question",
    "LastUpdated": "2020-09-18T20:14:39.5320704Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "40e68580-c686-4646-b9a8-86b08fccb790",
      "UserId": 217423,
      "Username": "Narzack",
      "AvatarUrl": "https://secure.gravatar.com/avatar/af2511f8835abefb628aaa1289994b83?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So, I'm exploring the program(love it) and trying to build my first game.  My question is where can I edit the default verbs and, like, someone asked a while ago, customize the Game Over function?\r\n\r\nFor example, when I use ask/say in the game, it returns 'blank saies nothing.'  I'd like to edit that to 'says' instead of saies.",
      "EditableFormat": "markdown",
      "HTML": "<p>So, I'm exploring the program(love it) and trying to build my first game.  My question is where can I edit the default verbs and, like, someone asked a while ago, customize the Game Over function?</p>\n<p>For example, when I use ask/say in the game, it returns 'blank saies nothing.'  I'd like to edit that to 'says' instead of saies.</p>\n\n",
      "PostDate": "2020-09-18T20:14:39.5320704Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1861563e-8186-4f19-a577-a61032b6b26e",
      "UserId": 432182,
      "Username": "Mataeus",
      "AvatarUrl": "https://i.imgur.com/67NYu7hb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you're using the desktop application, I find this an effective method which helps you to learn how the game treats commands and verbs whilst creating your own:\r\n\r\nDown the left hand side where the game tree is, right at the bottom, there's a filter option. If you click on it, you can set the application to show the built in libraries. This will show you all the 'default' verbs and commands at the top of the tree, not just your created ones.\r\n\r\nIf you find the one you're looking for there and click on it, on the right pane you'll get the option to copy it, so you can create your own version of it, then you can edit it as you like.\r\n\r\nFor example, I like the LOOK command to clear the screen before it reprints the description of the room in my games. So I find LOOK on the command tree, copy it, and then edit the script by adding a simple clear screen function before the rest of the command plays out.\r\n\r\nDoing it this way allows you to gradually build your own library of commands and verbs via a method that helps you learn as you go. It's cool to see how, for example, inventory works by studying the built in commands.",
      "EditableFormat": "markdown",
      "HTML": "<p>If you're using the desktop application, I find this an effective method which helps you to learn how the game treats commands and verbs whilst creating your own:</p>\n<p>Down the left hand side where the game tree is, right at the bottom, there's a filter option. If you click on it, you can set the application to show the built in libraries. This will show you all the 'default' verbs and commands at the top of the tree, not just your created ones.</p>\n<p>If you find the one you're looking for there and click on it, on the right pane you'll get the option to copy it, so you can create your own version of it, then you can edit it as you like.</p>\n<p>For example, I like the LOOK command to clear the screen before it reprints the description of the room in my games. So I find LOOK on the command tree, copy it, and then edit the script by adding a simple clear screen function before the rest of the command plays out.</p>\n<p>Doing it this way allows you to gradually build your own library of commands and verbs via a method that helps you learn as you go. It's cool to see how, for example, inventory works by studying the built in commands.</p>\n\n",
      "PostDate": "2020-09-21T09:24:19.8623313Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1c32534c-5c45-4d22-a842-9c61f0bdde27",
      "UserId": 32920,
      "Username": "Father",
      "AvatarUrl": "http://i.imgur.com/ogRXH9lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Surely this saies is a mistake that could be simply altered. I personally have no windows and work on Apple , which restricts me to online only. Can it be altered online? Itâ€™s been there a long time and it riles me how it got there in the first place every time I see it. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Surely this saies is a mistake that could be simply altered. I personally have no windows and work on Apple , which restricts me to online only. Can it be altered online? Itâ€™s been there a long time and it riles me how it got there in the first place every time I see it.</p>\n\n",
      "PostDate": "2020-09-21T16:55:57.6591061Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fe013a9c-b331-492c-8223-5f3060e365ad",
      "UserId": 432182,
      "Username": "Mataeus",
      "AvatarUrl": "https://i.imgur.com/67NYu7hb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You would think so - but I'm not a developer. It is a very odd thing though ðŸ˜Š",
      "EditableFormat": "markdown",
      "HTML": "<p>You would think so - but I'm not a developer. It is a very odd thing though ðŸ˜Š</p>\n\n",
      "PostDate": "2020-09-21T19:42:16.7361717Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "05fc4211-55f9-4286-b78b-f248005daa3d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Unfortunately, the \"saies\" is generated by a bug in the function `Conjugate` in the English language library. And the web editor doesn't allow you to modify functions. It's about the only thing that *can't* be done in the web editor, rather than just being harder.\r\n\r\nTo fix the verb without modifying it like this, you'd need to look into how verbs process the default message. Basically, the engine looks at the attributes `defaulttext`, `defaulttemplate`, and `defaultexpression` in that order until it finds one. I think (but not sure) that the \"saies\" message will be found in `defaulttemplate`, which might be a problem because the web editor also has issues editing templates.\r\n\r\nI think (off the top of my head) the best way to do it might be (in the start script, or any script that runs before the verb is used):\r\n```\r\nspeakto.defaulttemplate = null\r\nspeakto.defaultexpression = \"CapFirst(object.article) + \\\" says nothing.\\\"\"\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Unfortunately, the \"saies\" is generated by a bug in the function <code>Conjugate</code> in the English language library. And the web editor doesn't allow you to modify functions. It's about the only thing that <em>can't</em> be done in the web editor, rather than just being harder.</p>\n<p>To fix the verb without modifying it like this, you'd need to look into how verbs process the default message. Basically, the engine looks at the attributes <code>defaulttext</code>, <code>defaulttemplate</code>, and <code>defaultexpression</code> in that order until it finds one. I think (but not sure) that the \"saies\" message will be found in <code>defaulttemplate</code>, which might be a problem because the web editor also has issues editing templates.</p>\n<p>I think (off the top of my head) the best way to do it might be (in the start script, or any script that runs before the verb is used):</p>\n<pre><code>speakto.defaulttemplate = null\nspeakto.defaultexpression = \"CapFirst(object.article) + \\\" says nothing.\\\"\"\n</code></pre>\n\n",
      "PostDate": "2020-09-21T21:57:58.9355846Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "16d3af2a-792e-49fe-bc28-36eb757ef767",
      "UserId": 217423,
      "Username": "Narzack",
      "AvatarUrl": "https://secure.gravatar.com/avatar/af2511f8835abefb628aaa1289994b83?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks for the info, guys.  I'm using the desktop version and I was looking in the conjugate rules; I saw this expression: _EndsWith(verb, \"y\") and not EndsWith(verb, \"ey\")_  \r\n and \r\n_Mid(verb, 1, Lengthof(verb) - 1) + \"ies\"_\r\n\r\nElse it just adds an S to the verb.\r\n\r\nThe way I am reading that expression, if the word ends in Y but not EY, the program will drop the Y and add IES.  Otherwise, it just adds and S.    If I am correct in understanding, could you add another _and not EndsWith(verb, \"ay\")_ to fix that it so that SAY will return SAYS?\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks for the info, guys.  I'm using the desktop version and I was looking in the conjugate rules; I saw this expression: <em>EndsWith(verb, \"y\") and not EndsWith(verb, \"ey\")</em><br>\nand<br>\n<em>Mid(verb, 1, Lengthof(verb) - 1) + \"ies\"</em></p>\n<p>Else it just adds an S to the verb.</p>\n<p>The way I am reading that expression, if the word ends in Y but not EY, the program will drop the Y and add IES.  Otherwise, it just adds and S.    If I am correct in understanding, could you add another <em>and not EndsWith(verb, \"ay\")</em> to fix that it so that SAY will return SAYS?</p>\n\n",
      "PostDate": "2020-09-24T14:44:51.8151274Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "613dc6df-fb7d-4e39-9aef-97d0e534c555",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, you could. Though that's still wrong for any verbs ending in '-oy'.\r\nI don't think there's anywhere in the default templates that such a verb is used, but I think we should have a version which works with all verbs, so you can just use `WriteVerb` in your game wherever it's convenient rather than having to double check every time you add a new verb.\r\n\r\nThe version of this function I recommended looks like this:\r\n```\r\n    <function name=\"Conjugate\" type=\"string\" parameters=\"obj, verb\">\r\n      genders = LCase(obj.gender)\r\n      if (genders = \"he\" or genders = \"she\") {\r\n          genders = genders + \";it\"\r\n      }\r\n      cmd = GetObject (verb)\r\n      foreach (gender, Split(genders)) {\r\n          if (not cmd = null and HasString (cmd, \"conjugate_\"+gender)) {\r\n              return (GetString (cmd, \"conjugate_\"+gender))\r\n          }\r\n          dict = GetAttribute (game, \"conjugations_\"+gender)\r\n          if (not dict = null) {\r\n              if (DictionaryContains (dict, verb)) {\r\n                  return (DictionaryItem (dict, verb))\r\n              }\r\n              foreach (ending, game.conjugations) {\r\n                  if (Left (ending, 1) = \"@\" and EndsWith (verb, Mid (ending, 2))) {\r\n                    return (Conjugate (obj, Left (verb, LengthOf(verb) - LengthOf(ending) + 1)) + DictionaryItem (dict, ending))\r\n                  }\r\n                  else if (Left (ending, 1) = \"*\" and EndsWith (verb, Mid (ending, 2))) {\r\n                      return (Left (verb, LengthOf(verb) - LengthOf(ending) + 1) + DictionaryItem (dict, ending))\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      return (verb)\r\n  </function>\r\n```\r\nIf that were included in the core version, it would be nice because adding some word that's a special case no longer needs editing the code, so would be possible for people on the web version.\r\n\r\nIt assumes the `game` element will have a couple of stringdictionary attributes containing the actual grammar rules, like this:\r\n```\r\n    <attr name=\"conjugations_i\" type=\"stringdictionary\">\r\n      <item><key>be</key><value>am</value></item>\r\n      <item><key>'be</key><value>'m</value></item>\r\n    </attr>\r\n\r\n    <attr name=\"conjugations_you\" type=\"stringdictionary\">\r\n      <item><key>be</key><value>are</value></item>\r\n      <item><key>'be</key><value>'re</value></item>\r\n    </attr>\r\n\r\n    <attr name=\"conjugations_we\" type=\"stringdictionary\">\r\n      <item><key>be</key><value>are</value></item>\r\n      <item><key>'be</key><value>'re</value></item>\r\n    </attr>\r\n\r\n    <attr name=\"conjugations_they\" type=\"stringdictionary\">\r\n      <item><key>be</key><value>are</value></item>\r\n      <item><key>'be</key><value>'re</value></item>\r\n    </attr>\r\n\r\n    <attr name=\"conjugations_it\" type=\"stringdictionary\">\r\n      <item><key>be</key><value>is</value></item>\r\n      <item><key>have</key><value>has</value></item>\r\n      <item><key>can</key><value>can</value></item>\r\n      <item><key>mould</key><value>moulds</value></item>\r\n      <item><key>*ould</key><value>ould</value></item>\r\n      <item><key>must</key><value>must</value></item>\r\n      <item><key>can't</key><value>can't</value></item>\r\n      <item><key>won't</key><value>won't</value></item>\r\n      <item><key>cannot</key><value>cannot</value></item>\r\n      <item><key>@n't</key><value>n't</value></item>\r\n      <item><key>'ve</key><value>'s</value></item>\r\n      <item><key>'be</key><value>'s</value></item>\r\n      <item><key>*ay</key><value>ays</value></item>\r\n      <item><key>*oy</key><value>oys</value></item>\r\n      <item><key>*ey</key><value>eys</value></item>\r\n      <item><key>*y</key><value>ies</value></item>\r\n      <item><key>*ss</key><value>sses</value></item>\r\n      <item><key>*s</key><value>sses</value></item>\r\n      <item><key>*sh</key><value>shes</value></item>\r\n      <item><key>*ch</key><value>ches</value></item>\r\n      <item><key>*o</key><value>oes</value></item>\r\n      <item><key>*x</key><value>xes</value></item>\r\n      <item><key>*z</key><value>zes</value></item>\r\n      <item><key>*</key><value>s</value></item>\r\n    </attr>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, you could. Though that's still wrong for any verbs ending in '-oy'.<br>\nI don't think there's anywhere in the default templates that such a verb is used, but I think we should have a version which works with all verbs, so you can just use <code>WriteVerb</code> in your game wherever it's convenient rather than having to double check every time you add a new verb.</p>\n<p>The version of this function I recommended looks like this:</p>\n<pre><code>    &lt;function name=\"Conjugate\" type=\"string\" parameters=\"obj, verb\"&gt;\n      genders = LCase(obj.gender)\n      if (genders = \"he\" or genders = \"she\") {\n          genders = genders + \";it\"\n      }\n      cmd = GetObject (verb)\n      foreach (gender, Split(genders)) {\n          if (not cmd = null and HasString (cmd, \"conjugate_\"+gender)) {\n              return (GetString (cmd, \"conjugate_\"+gender))\n          }\n          dict = GetAttribute (game, \"conjugations_\"+gender)\n          if (not dict = null) {\n              if (DictionaryContains (dict, verb)) {\n                  return (DictionaryItem (dict, verb))\n              }\n              foreach (ending, game.conjugations) {\n                  if (Left (ending, 1) = \"@\" and EndsWith (verb, Mid (ending, 2))) {\n                    return (Conjugate (obj, Left (verb, LengthOf(verb) - LengthOf(ending) + 1)) + DictionaryItem (dict, ending))\n                  }\n                  else if (Left (ending, 1) = \"*\" and EndsWith (verb, Mid (ending, 2))) {\n                      return (Left (verb, LengthOf(verb) - LengthOf(ending) + 1) + DictionaryItem (dict, ending))\n                  }\n              }\n          }\n      }\n      return (verb)\n  &lt;/function&gt;\n</code></pre>\n<p>If that were included in the core version, it would be nice because adding some word that's a special case no longer needs editing the code, so would be possible for people on the web version.</p>\n<p>It assumes the <code>game</code> element will have a couple of stringdictionary attributes containing the actual grammar rules, like this:</p>\n<pre><code>    &lt;attr name=\"conjugations_i\" type=\"stringdictionary\"&gt;\n      &lt;item&gt;&lt;key&gt;be&lt;/key&gt;&lt;value&gt;am&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;'be&lt;/key&gt;&lt;value&gt;'m&lt;/value&gt;&lt;/item&gt;\n    &lt;/attr&gt;\n\n    &lt;attr name=\"conjugations_you\" type=\"stringdictionary\"&gt;\n      &lt;item&gt;&lt;key&gt;be&lt;/key&gt;&lt;value&gt;are&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;'be&lt;/key&gt;&lt;value&gt;'re&lt;/value&gt;&lt;/item&gt;\n    &lt;/attr&gt;\n\n    &lt;attr name=\"conjugations_we\" type=\"stringdictionary\"&gt;\n      &lt;item&gt;&lt;key&gt;be&lt;/key&gt;&lt;value&gt;are&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;'be&lt;/key&gt;&lt;value&gt;'re&lt;/value&gt;&lt;/item&gt;\n    &lt;/attr&gt;\n\n    &lt;attr name=\"conjugations_they\" type=\"stringdictionary\"&gt;\n      &lt;item&gt;&lt;key&gt;be&lt;/key&gt;&lt;value&gt;are&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;'be&lt;/key&gt;&lt;value&gt;'re&lt;/value&gt;&lt;/item&gt;\n    &lt;/attr&gt;\n\n    &lt;attr name=\"conjugations_it\" type=\"stringdictionary\"&gt;\n      &lt;item&gt;&lt;key&gt;be&lt;/key&gt;&lt;value&gt;is&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;have&lt;/key&gt;&lt;value&gt;has&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;can&lt;/key&gt;&lt;value&gt;can&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;mould&lt;/key&gt;&lt;value&gt;moulds&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;*ould&lt;/key&gt;&lt;value&gt;ould&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;must&lt;/key&gt;&lt;value&gt;must&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;can't&lt;/key&gt;&lt;value&gt;can't&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;won't&lt;/key&gt;&lt;value&gt;won't&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;cannot&lt;/key&gt;&lt;value&gt;cannot&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;@n't&lt;/key&gt;&lt;value&gt;n't&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;'ve&lt;/key&gt;&lt;value&gt;'s&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;'be&lt;/key&gt;&lt;value&gt;'s&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;*ay&lt;/key&gt;&lt;value&gt;ays&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;*oy&lt;/key&gt;&lt;value&gt;oys&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;*ey&lt;/key&gt;&lt;value&gt;eys&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;*y&lt;/key&gt;&lt;value&gt;ies&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;*ss&lt;/key&gt;&lt;value&gt;sses&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;*s&lt;/key&gt;&lt;value&gt;sses&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;*sh&lt;/key&gt;&lt;value&gt;shes&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;*ch&lt;/key&gt;&lt;value&gt;ches&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;*o&lt;/key&gt;&lt;value&gt;oes&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;*x&lt;/key&gt;&lt;value&gt;xes&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;*z&lt;/key&gt;&lt;value&gt;zes&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;*&lt;/key&gt;&lt;value&gt;s&lt;/value&gt;&lt;/item&gt;\n    &lt;/attr&gt;\n</code></pre>\n\n",
      "PostDate": "2020-09-24T15:07:36.3549364Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e205ed98-aa2d-400a-b40c-34046cb40079",
      "UserId": 217423,
      "Username": "Narzack",
      "AvatarUrl": "https://secure.gravatar.com/avatar/af2511f8835abefb628aaa1289994b83?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah, I thought about that last night while I was trying to sleep.  Would the clumsy band-aid approach then be to just append each vowel+Y rule to the end of that expression?\r\n\r\nSo, then, do I put the WRITEVERB function with the code you just posted?  Sorry, still new at this and drawing on ancient C++and Java memory from high school.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah, I thought about that last night while I was trying to sleep.  Would the clumsy band-aid approach then be to just append each vowel+Y rule to the end of that expression?</p>\n<p>So, then, do I put the WRITEVERB function with the code you just posted?  Sorry, still new at this and drawing on ancient C++and Java memory from high school.</p>\n\n",
      "PostDate": "2020-09-25T12:38:58.8869342Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0cb7ae11-2a10-46ef-9fb5-7d0c8410757b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The default templates use WriteVerb, and WriteVerb uses Conjugate. So if you fix Conjugate, everything else should work.\r\n\r\nYou can use WriteVerb in your own messages easily enough. `WriteVerb(object, \"stroke\")` or similar \r\n\r\nI went and looked up stuff in a grammar textbook for mine, to make sure it handles more verbs correctly, like wash (add 'es'), press (add 'es'), and gas (add 'ses').\r\nI included the two special cases from the original (\"be\" â†’ am/is/are and \"have\" â†’ have/has/have), and added abbreviated forms (\"'be\" â†’ 'm/'s/'re, \"'ve\" â†’ 've/'s/'ve) - though I think making those work with WriteVerb might need an extra line to remove the extra space.",
      "EditableFormat": "markdown",
      "HTML": "<p>The default templates use WriteVerb, and WriteVerb uses Conjugate. So if you fix Conjugate, everything else should work.</p>\n<p>You can use WriteVerb in your own messages easily enough. <code>WriteVerb(object, \"stroke\")</code> or similar</p>\n<p>I went and looked up stuff in a grammar textbook for mine, to make sure it handles more verbs correctly, like wash (add 'es'), press (add 'es'), and gas (add 'ses').<br>\nI included the two special cases from the original (\"be\" â†’ am/is/are and \"have\" â†’ have/has/have), and added abbreviated forms (\"'be\" â†’ 'm/'s/'re, \"'ve\" â†’ 've/'s/'ve) - though I think making those work with WriteVerb might need an extra line to remove the extra space.</p>\n\n",
      "PostDate": "2020-09-25T14:51:22.0987952Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c1701ee8-5df8-4642-8c70-c004c6d4b13f",
      "UserId": 5574,
      "Username": "R2T1",
      "AvatarUrl": "http://i.imgur.com/32ogfqMb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "According to 3 dictionaries I check, the plural of GAS is GASES (no double S) The S is only doubled for the past tense GASSED and the present participle GASSING. But then I am only using English and Australian dictionaries. Perhaps gasses is the American spelling?",
      "EditableFormat": "markdown",
      "HTML": "<p>According to 3 dictionaries I check, the plural of GAS is GASES (no double S) The S is only doubled for the past tense GASSED and the present participle GASSING. But then I am only using English and Australian dictionaries. Perhaps gasses is the American spelling?</p>\n\n",
      "PostDate": "2020-09-26T03:12:43.3237321Z",
      "LastEditDate": "2020-09-26T03:13:12.9558209Z",
      "link": null
    },
    {
      "PostId": "d4ac0ebc-f55b-468e-bc69-a3b7e68bbd77",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://i.imgur.com/O07mlRtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In American spelling, \"gasses\" would be the present tense verb, and \"gases\" would be the plural noun.",
      "EditableFormat": "markdown",
      "HTML": "<p>In American spelling, \"gasses\" would be the present tense verb, and \"gases\" would be the plural noun.</p>\n\n",
      "PostDate": "2020-09-26T04:53:19.4731904Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2dca1eb0-4dcd-4c5e-a4d9-bbaa5b2cd3d5",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> In American spelling, \"gasses\" would be the present tense verb, and \"gases\" would be the plural noun.\r\n\r\nOK, I've checked 3 English (British) dictionaries. One says both 'gases' and 'gasses' are in use for the plural. The others say that one of those spellings is a US variant, but disagree about which one.\r\n\r\nSoâ€¦ there's some disagreement there.\r\nBut most dictionaries don't list the third person simple present for a verb; and I find different grammarians agree about which rules to follow.\r\n\r\nThat's the advantage of my function, I guess. Once you've got it set up, you can adapt it for your dialect or region by changing the elements in a dictionary, without needing to change the code again.\r\n\r\nThough one thing I did come across was that verbs ending -o take an 'es', *unless* they end -oo. In which case maybe it should be:\r\n```\r\n      <item><key>*oo</key><value>oos</value></item>\r\n      <item><key>*o</key><value>oes</value></item>\r\n```\r\nUnless that's a regional variation as well. (the only verb ending oo I can think  of is \"shoo\", but I'm sure there are others)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>In American spelling, \"gasses\" would be the present tense verb, and \"gases\" would be the plural noun.</p>\n</blockquote>\n<p>OK, I've checked 3 English (British) dictionaries. One says both 'gases' and 'gasses' are in use for the plural. The others say that one of those spellings is a US variant, but disagree about which one.</p>\n<p>Soâ€¦ there's some disagreement there.<br>\nBut most dictionaries don't list the third person simple present for a verb; and I find different grammarians agree about which rules to follow.</p>\n<p>That's the advantage of my function, I guess. Once you've got it set up, you can adapt it for your dialect or region by changing the elements in a dictionary, without needing to change the code again.</p>\n<p>Though one thing I did come across was that verbs ending -o take an 'es', <em>unless</em> they end -oo. In which case maybe it should be:</p>\n<pre><code>      &lt;item&gt;&lt;key&gt;*oo&lt;/key&gt;&lt;value&gt;oos&lt;/value&gt;&lt;/item&gt;\n      &lt;item&gt;&lt;key&gt;*o&lt;/key&gt;&lt;value&gt;oes&lt;/value&gt;&lt;/item&gt;\n</code></pre>\n<p>Unless that's a regional variation as well. (the only verb ending oo I can think  of is \"shoo\", but I'm sure there are others)</p>\n\n",
      "PostDate": "2020-09-26T09:46:37.5895067Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
