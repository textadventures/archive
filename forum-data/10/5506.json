{
  "Topic": {
    "TopicId": "5506",
    "ForumId": "10",
    "Title": "I need help with using a multi-object command",
    "LastUpdated": "2015-09-29T21:30:34+01:00",
    "ReplyCount": 2
  },
  "Posts": [
    {
      "PostId": "38094",
      "UserId": 0,
      "Username": "lightwriter",
      "UserAvatar": null,
      "UserGravatar": "4361dea0f293c64bea42cb1253ce25d4",
      "EditableText": "Basically, I added a cancook boolean attribute to the defaultobject type and am looking for a way to get this script working where if the player uses certain things like Raw Fish on any object in the room that cooks or in inventory (like a lighter) then it runs a function that makes sure object 2 (the one that would do the cooking) can cook, you can't cook with a refrigerator but you can with a stove, if only it is on.  So the function also checks to make sure that object2 is switchedon.\nNow I'm having issues with a solution that returns the cooked version of this item.  The only thing I can think of is having an script to each object (named the same thing) that the cook_item function calls if all conditions are met true.\nIs there a simpler solution?\nHere is my code if I'm making this way more complicated by trying to clarify my issue:\n[code:2zy0tlmi]\n//below is the actual command part, basically, just a copied version of useon\n^cook (?&lt;object1&gt;&#46;*) (on|with) (?&lt;object2&gt;&#46;*)$\n//here is what that does\ncook_item (object1, object2)\n//Next is the function code\nif (object2&#46;cancook) {\n  if (object2&#46;switchedon) {\n    // both conditions are met so this is where the code goes but I don't know what to do after this\n  }\n}\n[/code:2zy0tlmi]",
      "EditableFormat": "bbcode",
      "HTML": "Basically, I added a cancook boolean attribute to the defaultobject type and am looking for a way to get this script working where if the player uses certain things like Raw Fish on any object in the room that cooks or in inventory (like a lighter) then it runs a function that makes sure object 2 (the one that would do the cooking) can cook, you can't cook with a refrigerator but you can with a stove, if only it is on.  So the function also checks to make sure that object2 is switchedon.<br/>Now I'm having issues with a solution that returns the cooked version of this item.  The only thing I can think of is having an script to each object (named the same thing) that the cook_item function calls if all conditions are met true.<br/>Is there a simpler solution?<br/>Here is my code if I'm making this way more complicated by trying to clarify my issue:<br/><pre><code><br/>//below is the actual command part, basically, just a copied version of useon<br/>^cook (?&lt;object1&gt;&#46;*) (on|with) (?&lt;object2&gt;&#46;*)$<br/>//here is what that does<br/>cook_item (object1, object2)<br/>//Next is the function code<br/>if (object2&#46;cancook) {<br/>  if (object2&#46;switchedon) {<br/>    // both conditions are met so this is where the code goes but I don't know what to do after this<br/>  }<br/>}<br/></code></pre>",
      "PostDate": "2015-09-29T01:51:20+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38095",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "Add an additional object attribute to each item you want to cook where you save the name of the cooked item e.g \n[code:359g6day]&lt;object name=&quot;apple&quot;&gt;\n&#46;&#46;&#46;\n   &lt;cooked type=&quot;object&quot;&gt;roastapple&lt;/cooked&gt;\n&lt;/object&gt;[/code:359g6day]\nand move an object for the cooked item (roastapple) into an invisible room.\nIn your command move this cooked object into the inventory and remove the original item.\n\n[code:359g6day]\n//below is the actual command part, basically, just a copied version of useon\n^cook (?&lt;object1&gt;&#46;*) (on|with) (?&lt;object2&gt;&#46;*)$\n//here is what that does\ncook_item (object1, object2)\n//Next is the function code\nif (object2&#46;cancook and object2&#46;switchedon) {\n    MoveObject (object1&#46;cooked, player)\n    MoveObject (object1, junkyard))\n}\n[/code:359g6day]",
      "EditableFormat": "bbcode",
      "HTML": "Add an additional object attribute to each item you want to cook where you save the name of the cooked item e.g <br/><pre><code>&lt;object name=&quot;apple&quot;&gt;<br/>&#46;&#46;&#46;<br/>   &lt;cooked type=&quot;object&quot;&gt;roastapple&lt;/cooked&gt;<br/>&lt;/object&gt;</code></pre><br/>and move an object for the cooked item (roastapple) into an invisible room.<br/>In your command move this cooked object into the inventory and remove the original item.<br/><br/><pre><code><br/>//below is the actual command part, basically, just a copied version of useon<br/>^cook (?&lt;object1&gt;&#46;*) (on|with) (?&lt;object2&gt;&#46;*)$<br/>//here is what that does<br/>cook_item (object1, object2)<br/>//Next is the function code<br/>if (object2&#46;cancook and object2&#46;switchedon) {<br/>    MoveObject (object1&#46;cooked, player)<br/>    MoveObject (object1, junkyard))<br/>}<br/></code></pre>",
      "PostDate": "2015-09-29T07:02:41+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38097",
      "UserId": 0,
      "Username": "lightwriter",
      "UserAvatar": null,
      "UserGravatar": "4361dea0f293c64bea42cb1253ce25d4",
      "EditableText": "Thanks for the help!",
      "EditableFormat": "bbcode",
      "HTML": "Thanks for the help!",
      "PostDate": "2015-09-29T21:30:34+01:00",
      "LastEditDate": null
    }
  ]
}
