{
  "Topic": {
    "TopicId": "-w8tecqdek6kwaiyi18zog",
    "ForumId": "10",
    "Title": "Gamebook / TA hybrid",
    "LastUpdated": "2019-07-12T16:12:44.1322349Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "43aee6d8-83c6-4c85-92bf-ddecb4e61cc7",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I was looking over the Quest GamebookCore to answer somebody else's question, and an idea popped into my head.\r\n\r\nWould it be possible to combine gamebook and text adventure, to make a hybrid format? Including all the types and functions from both core sets. All the gamebook page types would inherit a new type `gamebookpage` to make them identifiable.\r\n\r\nThen you'd give the player object the `changedparent` script from the Text Adventure mode, but change a couple of functions like so:\r\n\r\n<pre><code>  &lt;function name=\"OnEnterRoom\" parameters=\"oldRoom\"&gt;\r\n    &lt;![CDATA[\r\n    game.displayroomdescriptiononstart = false\r\n    if (IsDefined(\"oldRoom\")) {\r\n      if (oldRoom &lt;&gt; null) {\r\n        if (game.clearscreenonroomenter) {\r\n          ClearScreen\r\n          if (HasString (game, \"currentexitmessage\")) {\r\n            msg(game.currentexitmessage)\r\n            game.currentexitmessage = null\r\n          }\r\n        }\r\n        if (HasScript(oldRoom, \"onexit\")) {\r\n          do (oldRoom, \"onexit\")\r\n        }\r\n      }\r\n    }\r\n   \r\n    on ready {\r\n<b style=\"color: green\">      if (DoesInherit (game.pov.parent, \"gamebookpage\")) {\r\n        game.gamebookdisplay = true\r\n        DoPage (game.pov.parent)\r\n      }\r\n      else {\r\n        game.gamebookdisplay = false</b>\r\n        if ((not GetBoolean(game.pov.parent, \"visited\")) and HasScript(game.pov.parent, \"beforefirstenter\")) {\r\n          do (game.pov.parent, \"beforefirstenter\")\r\n        }\r\n \r\n        on ready {\r\n          if (HasScript(game.pov.parent, \"beforeenter\")) {\r\n            do (game.pov.parent, \"beforeenter\")\r\n          }\r\n\r\n          on ready {\r\n            if (game.gridmap) {\r\n              Grid_CalculateMapCoordinates (game.pov.parent, game.pov)\r\n              Grid_DrawPlayerInRoom (game.pov.parent)\r\n            }\r\n\r\n            if (IsDefined(\"oldRoom\")) {\r\n              if (oldRoom &lt;&gt; null and game.changeroom_newline and not game.command_newline) {\r\n                msg (\"\")\r\n              }     \r\n            }\r\n\r\n            JS.updateLocation(CapFirst(GetDisplayName(game.pov.parent)))\r\n            roomFrameExists = false\r\n            if (HasString(game.pov.parent, \"picture\")) {\r\n              if (LengthOf(game.pov.parent.picture) > 0) {\r\n                roomFrameExists = true\r\n                SetFramePicture(game.pov.parent.picture)\r\n              }\r\n            }\r\n            if (game.clearframe and not roomFrameExists) {\r\n              ClearFramePicture\r\n            }\r\n            if (game.showdescriptiononenter) {\r\n              ShowRoomDescription\r\n            }\r\n\r\n            if (HasScript( game, \"roomenter\")) {\r\n              do (game, \"roomenter\")\r\n            }\r\n            on ready {\r\n              if ((not GetBoolean(game.pov.parent, \"visited\")) and HasScript(game.pov.parent, \"firstenter\")) {\r\n                do (game.pov.parent, \"firstenter\")\r\n              }\r\n              on ready {\r\n                if (HasScript(game.pov.parent, \"enter\")) {\r\n                  do (game.pov.parent, \"enter\")\r\n                }\r\n              }\r\n              set (game.pov.parent, \"visited\", true)\r\n            }\r\n          }\r\n        } \r\n      }\r\n    }\r\n    ]]>\r\n  &lt;/function&gt;\r\n\r\n  &lt;function name=\"InitInterface\"&gt;\r\n    &lt;![CDATA[\r\n      if (GetBoolean (game, \"gamebookdisplay\")) {\r\n        JS.uiHide (\"#txtCommandDiv,#location,#gamePanel,#gridPanel\")\r\n        JS.panesVisible (false)\r\n      }\r\n      else {\r\n        <b style=\"color: brown\">// contents of current TA InitInterface here</b>\r\n      }\r\n    ]]>\r\n  &lt;/function&gt;\r\n\r\n  &lt;function name=\"HandleCommand\" parameters=\"command, metadata\">\r\n    &lt;![CDATA[\r\n    handled = false\r\n    // Moved to the beginning so you can do transcript comments while a menu is visible\r\n    if (StartsWith (command, \"*\")) {\r\n      // Modified by KV to bypass turn scripts and turn counts, and to print \"Noted.\"\r\n      game.suppressturnscripts = true\r\n      msg (\"\")\r\n      msg (SafeXML (command))\r\n      msg(\"Noted.\")\r\n      // Added for Quest 5.8    - KV\r\n      FinishTurn\r\n      handled = true\r\n    }\r\n    if (game.menucallback <> null) {\r\n      if (HandleMenuTextResponse(command)) {\r\n        handled = true\r\n      }\r\n      else {\r\n        if (game.menuallowcancel and not handled) {\r\n          ClearMenu\r\n        }\r\n        else {\r\n          handled = true\r\n        }\r\n      }\r\n    }\r\n<b style=\"color: green\">    if (HasAttribute(game.pov.parent, \"options\") and not handled) {\r\n      if (DictionaryContains(game.pov.parent.options, command)) {\r\n        if (not GetBoolean (game, \"clearlastpage\")) {\r\n          optiontext = StringDictionaryItem(player.parent.options, command)\r\n          msg (\"&lt;b>\" + optiontext + \"&lt;/b>\")\r\n          msg (\"\")\r\n        }\r\n        JS.disableAllCommandLinks()\r\n        game.pov.parent = GetObject(command)\r\n        handled = true\r\n      }\r\n    }</b>\r\n    if (not handled) {\r\n      StartTurnOutputSection\r\n      shownlink = false\r\n      if (game.echocommand) {\r\n        if (metadata <> null and game.enablehyperlinks and game.echohyperlinks) {\r\n          foreach (key, metadata) {\r\n            if (EndsWith(command, key)) {\r\n              objectname = StringDictionaryItem(metadata, key)\r\n              object = GetObject(objectname)\r\n              if (object &lt;&gt; null) {\r\n                msg (\"\")\r\n                msg (\"&amp;gt; \" + Left(command, LengthOf(command) - LengthOf(key)) + \"{object:\" + object.name + \"}\" )\r\n                shownlink = true\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (not shownlink) {\r\n          msg (\"\")\r\n          OutputTextRaw (\"&amp;gt; \" + SafeXML(command))\r\n        }\r\n      }\r\n      if (game.command_newline) {\r\n        msg (\"\")\r\n      }\r\n      game.pov.commandmetadata = metadata\r\n      if (game.multiplecommands){\r\n        commands = Split(command, \".\")\r\n        if (ListCount(commands) = 1) {\r\n          game.pov.commandqueue = null\r\n          HandleSingleCommand (Trim(command))\r\n        }\r\n        else {\r\n          game.pov.commandqueue = commands\r\n          HandleNextCommandQueueItem\r\n        }\r\n      }\r\n      else {\r\n        game.pov.commandqueue = null\r\n        HandleSingleCommand (Trim(command))\r\n      }\r\n    }\r\n    ]]>\r\n  &lt;/function></code></pre>\r\n\r\nYou'd also want to make a script `game.changedgamebookdisplay` which just calls `InitInterface()`.\r\n\r\nNot sure if there's other elements that would need showing/hiding. But I think I've seen a few people who would have liked the ability to mix and match gamebook and text adventure sections in the same game :p\r\n\r\n\r\nThis is just off the top of my head, but it's been bouncing around in my mind for a while. Would this be a useful library? Overrides a couple of core functions, and allows you to include gamebook sections within a text adventure.",
      "EditableFormat": "markdown",
      "HTML": "<p>I was looking over the Quest GamebookCore to answer somebody else's question, and an idea popped into my head.</p>\n<p>Would it be possible to combine gamebook and text adventure, to make a hybrid format? Including all the types and functions from both core sets. All the gamebook page types would inherit a new type <code>gamebookpage</code> to make them identifiable.</p>\n<p>Then you'd give the player object the <code>changedparent</code> script from the Text Adventure mode, but change a couple of functions like so:</p>\n<pre><code>  &lt;function name=\"OnEnterRoom\" parameters=\"oldRoom\"&gt;\n    &lt;![CDATA[\n    game.displayroomdescriptiononstart = false\n    if (IsDefined(\"oldRoom\")) {\n      if (oldRoom &lt;&gt; null) {\n        if (game.clearscreenonroomenter) {\n          ClearScreen\n          if (HasString (game, \"currentexitmessage\")) {\n            msg(game.currentexitmessage)\n            game.currentexitmessage = null\n          }\n        }\n        if (HasScript(oldRoom, \"onexit\")) {\n          do (oldRoom, \"onexit\")\n        }\n      }\n    }\n   \n    on ready {\n<b style=\"color: green\">      if (DoesInherit (game.pov.parent, \"gamebookpage\")) {\n        game.gamebookdisplay = true\n        DoPage (game.pov.parent)\n      }\n      else {\n        game.gamebookdisplay = false</b>\n        if ((not GetBoolean(game.pov.parent, \"visited\")) and HasScript(game.pov.parent, \"beforefirstenter\")) {\n          do (game.pov.parent, \"beforefirstenter\")\n        }\n \n        on ready {\n          if (HasScript(game.pov.parent, \"beforeenter\")) {\n            do (game.pov.parent, \"beforeenter\")\n          }\n\n          on ready {\n            if (game.gridmap) {\n              Grid_CalculateMapCoordinates (game.pov.parent, game.pov)\n              Grid_DrawPlayerInRoom (game.pov.parent)\n            }\n\n            if (IsDefined(\"oldRoom\")) {\n              if (oldRoom &lt;&gt; null and game.changeroom_newline and not game.command_newline) {\n                msg (\"\")\n              }     \n            }\n\n            JS.updateLocation(CapFirst(GetDisplayName(game.pov.parent)))\n            roomFrameExists = false\n            if (HasString(game.pov.parent, \"picture\")) {\n              if (LengthOf(game.pov.parent.picture) &gt; 0) {\n                roomFrameExists = true\n                SetFramePicture(game.pov.parent.picture)\n              }\n            }\n            if (game.clearframe and not roomFrameExists) {\n              ClearFramePicture\n            }\n            if (game.showdescriptiononenter) {\n              ShowRoomDescription\n            }\n\n            if (HasScript( game, \"roomenter\")) {\n              do (game, \"roomenter\")\n            }\n            on ready {\n              if ((not GetBoolean(game.pov.parent, \"visited\")) and HasScript(game.pov.parent, \"firstenter\")) {\n                do (game.pov.parent, \"firstenter\")\n              }\n              on ready {\n                if (HasScript(game.pov.parent, \"enter\")) {\n                  do (game.pov.parent, \"enter\")\n                }\n              }\n              set (game.pov.parent, \"visited\", true)\n            }\n          }\n        } \n      }\n    }\n    ]]&gt;\n  &lt;/function&gt;\n\n  &lt;function name=\"InitInterface\"&gt;\n    &lt;![CDATA[\n      if (GetBoolean (game, \"gamebookdisplay\")) {\n        JS.uiHide (\"#txtCommandDiv,#location,#gamePanel,#gridPanel\")\n        JS.panesVisible (false)\n      }\n      else {\n        <b style=\"color: brown\">// contents of current TA InitInterface here</b>\n      }\n    ]]&gt;\n  &lt;/function&gt;\n\n  &lt;function name=\"HandleCommand\" parameters=\"command, metadata\"&gt;\n    &lt;![CDATA[\n    handled = false\n    // Moved to the beginning so you can do transcript comments while a menu is visible\n    if (StartsWith (command, \"*\")) {\n      // Modified by KV to bypass turn scripts and turn counts, and to print \"Noted.\"\n      game.suppressturnscripts = true\n      msg (\"\")\n      msg (SafeXML (command))\n      msg(\"Noted.\")\n      // Added for Quest 5.8    - KV\n      FinishTurn\n      handled = true\n    }\n    if (game.menucallback &lt;&gt; null) {\n      if (HandleMenuTextResponse(command)) {\n        handled = true\n      }\n      else {\n        if (game.menuallowcancel and not handled) {\n          ClearMenu\n        }\n        else {\n          handled = true\n        }\n      }\n    }\n<b style=\"color: green\">    if (HasAttribute(game.pov.parent, \"options\") and not handled) {\n      if (DictionaryContains(game.pov.parent.options, command)) {\n        if (not GetBoolean (game, \"clearlastpage\")) {\n          optiontext = StringDictionaryItem(player.parent.options, command)\n          msg (\"&lt;b&gt;\" + optiontext + \"&lt;/b&gt;\")\n          msg (\"\")\n        }\n        JS.disableAllCommandLinks()\n        game.pov.parent = GetObject(command)\n        handled = true\n      }\n    }</b>\n    if (not handled) {\n      StartTurnOutputSection\n      shownlink = false\n      if (game.echocommand) {\n        if (metadata &lt;&gt; null and game.enablehyperlinks and game.echohyperlinks) {\n          foreach (key, metadata) {\n            if (EndsWith(command, key)) {\n              objectname = StringDictionaryItem(metadata, key)\n              object = GetObject(objectname)\n              if (object &lt;&gt; null) {\n                msg (\"\")\n                msg (\"&amp;gt; \" + Left(command, LengthOf(command) - LengthOf(key)) + \"{object:\" + object.name + \"}\" )\n                shownlink = true\n              }\n            }\n          }\n        }\n        if (not shownlink) {\n          msg (\"\")\n          OutputTextRaw (\"&amp;gt; \" + SafeXML(command))\n        }\n      }\n      if (game.command_newline) {\n        msg (\"\")\n      }\n      game.pov.commandmetadata = metadata\n      if (game.multiplecommands){\n        commands = Split(command, \".\")\n        if (ListCount(commands) = 1) {\n          game.pov.commandqueue = null\n          HandleSingleCommand (Trim(command))\n        }\n        else {\n          game.pov.commandqueue = commands\n          HandleNextCommandQueueItem\n        }\n      }\n      else {\n        game.pov.commandqueue = null\n        HandleSingleCommand (Trim(command))\n      }\n    }\n    ]]&gt;\n  &lt;/function&gt;</code></pre>\n<p>You'd also want to make a script <code>game.changedgamebookdisplay</code> which just calls <code>InitInterface()</code>.</p>\n<p>Not sure if there's other elements that would need showing/hiding. But I think I've seen a few people who would have liked the ability to mix and match gamebook and text adventure sections in the same game :p</p>\n<p>This is just off the top of my head, but it's been bouncing around in my mind for a while. Would this be a useful library? Overrides a couple of core functions, and allows you to include gamebook sections within a text adventure.</p>\n\n",
      "PostDate": "2019-07-12T16:12:44.1322349Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ee0b9bb8-83bb-40b4-b90f-af36db8089f9",
      "UserId": 418279,
      "Username": "Zesc",
      "AvatarUrl": "https://i.imgur.com/bGcfC7sb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is it possible? Yes.\r\n\r\nIs it possible using your code example? To be humble, i only skimmed it.\r\n\r\nThe thing is: gamebook mode is infact just the inferior cousin of TA so far (speaking of first hand experience with it's limitations; there are literally only three kinds of objects ```game```, ```player``` and ```page```) and everything you can do in CYOA can be done with parser-based games, probably even better.\r\n\r\nThere is a library to hide the parser, inventory and the rest of the TA UI, but i think you already know that. So you only have to en-/disable it in time.\r\n\r\nAlso, i think there has been mixed CYOA/TA games on this site already, but i can't remember a game title right now.",
      "EditableFormat": "markdown",
      "HTML": "<p>Is it possible? Yes.</p>\n<p>Is it possible using your code example? To be humble, i only skimmed it.</p>\n<p>The thing is: gamebook mode is infact just the inferior cousin of TA so far (speaking of first hand experience with it's limitations; there are literally only three kinds of objects <code>game</code>, <code>player</code> and <code>page</code>) and everything you can do in CYOA can be done with parser-based games, probably even better.</p>\n<p>There is a library to hide the parser, inventory and the rest of the TA UI, but i think you already know that. So you only have to en-/disable it in time.</p>\n<p>Also, i think there has been mixed CYOA/TA games on this site already, but i can't remember a game title right now.</p>\n\n",
      "PostDate": "2019-07-12T20:24:32.1056501Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
