{
  "Topic": {
    "TopicId": "viwrav6icuypmc2kyzshqq",
    "ForumId": "10",
    "Title": "Money system",
    "LastUpdated": "2017-10-31T00:22:08.7594484Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "3565a877-5f79-4944-9a64-e8fc1c986f1b",
      "UserId": 317185,
      "Username": "Jasutt",
      "AvatarUrl": "https://secure.gravatar.com/avatar/90dafbd190a6b609eea9a5003815e969?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I seem to be having issues with the new money system. I successfully made it so the player got 10 dollars. I have an item with a price. No matter what the price is it doesnt change the amount of dollars i have. which doesnt make much sense. If the price is 11 i can still pick the item up. Is this feature not working yet or am i missing something weird.",
      "EditableFormat": "markdown",
      "HTML": "<p>I seem to be having issues with the new money system. I successfully made it so the player got 10 dollars. I have an item with a price. No matter what the price is it doesnt change the amount of dollars i have. which doesnt make much sense. If the price is 11 i can still pick the item up. Is this feature not working yet or am i missing something weird.</p>\n\n",
      "PostDate": "2017-10-31T00:22:08.7594484Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2fd835f1-d5ab-4795-8e5e-539862d5af72",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\nI believe you have to set everything up like you want it.\r\n\r\n---\r\n### A Very Simple System\r\n\r\nMake a function for taking items which can be purchased, then run that function for the **take** script.\r\n\r\nHere's a basic version:\r\n\r\n```\r\n  <function name=\"takeSaleItem\" parameters=\"this\">\r\n    if (HasAttribute(this, \"purchased\")) {\r\n      msg (\"You pick \" + this.article + \" up.\")\r\n      AddToInventory (this)\r\n    }\r\n    else {\r\n      msg (\"You'll need to buy \" + this.article + \".  Taking \" + this.article + \" before buying \" + this.article + \" would be theft.\")\r\n    }\r\n  </function>\r\n```\r\n\r\n---\r\n\r\nSet up a ```buy;purchase``` verb on each object, which calls a function created to handle purchasing.\r\n\r\nHere's a simplified example:\r\n\r\n```\r\n  <function name=\"makePurchase\" parameters=\"this\"><![CDATA[\r\n    if (game.pov.money >= this.price) {\r\n      DecreaseMoney (this.price)\r\n      msg (\"You pay for \" + GetDisplayName(this) + \" and pick \" + this.article + \" up.\")\r\n      AddToInventory (this)\r\n      this.buy = \"You have already purchased \" + this.article + \".\"\r\n      this.purchased = true\r\n      if (ListContains(this.generatedverbslist, \"buy\")) {\r\n        list remove (this.generatedverbslist, \"buy\")\r\n      }\r\n    }\r\n    else {\r\n      msg (\"You don't have enough money.\")\r\n    }\r\n  ]]></function>\r\n```\r\n\r\n---\r\nI would normally have a shopkeeper to talk to (and haggle with).\r\n\r\nI would also normally clone the purchased item and move it to the player's inventory, changing all sorts of attributes on the cloned object in that script.  (This would depend on what objects are for sale, of course)\r\n\r\n\r\n---\r\nHere's a quick example game using the scripts I posted above:\r\n\r\n\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Shopping\">\r\n    <gameid>007a2efc-0e12-4508-9148-bafaca356f42</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n    <showmoney />\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n      <money type=\"int\">10</money>\r\n    </object>\r\n    <object name=\"Doohickey\">\r\n      <inherit name=\"editor_object\" />\r\n      <price type=\"int\">5</price>\r\n      <buy type=\"script\">\r\n        makePurchase (this)\r\n      </buy>\r\n      <take type=\"script\">\r\n        takeSaleItem (this)\r\n      </take>\r\n    </object>\r\n    <object name=\"Collection of Fancy Thingies\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"plural\" />\r\n      <take type=\"script\">\r\n        takeSaleItem (this)\r\n      </take>\r\n      <price type=\"int\">11</price>\r\n      <buy type=\"script\">\r\n        makePurchase (this)\r\n      </buy>\r\n    </object>\r\n  </object>\r\n  <function name=\"makePurchase\" parameters=\"this\"><![CDATA[\r\n    if (game.pov.money >= this.price) {\r\n      DecreaseMoney (this.price)\r\n      msg (\"You pay for \" + GetDisplayName(this) + \" and pick \" + this.article + \" up.\")\r\n      AddToInventory (this)\r\n      this.buy = \"You have already purchased \" + this.article + \".\"\r\n      this.purchased = true\r\n      if (ListContains(this.generatedverbslist, \"buy\")) {\r\n        list remove (this.generatedverbslist, \"buy\")\r\n      }\r\n    }\r\n    else {\r\n      msg (\"You don't have enough money.\")\r\n    }\r\n  ]]></function>\r\n  <function name=\"takeSaleItem\" parameters=\"this\">\r\n    if (HasAttribute(this, \"purchased\")) {\r\n      msg (\"You pick \" + this.article + \" up.\")\r\n      AddToInventory (this)\r\n    }\r\n    else {\r\n      msg (\"You'll need to buy \" + this.article + \".  Taking \" + this.article + \" before buying \" + this.article + \" would be theft.\")\r\n    }\r\n  </function>\r\n</asl>\r\n```\r\n\r\n---\r\nYou can set up shops and all sorts of things, if you want, too.\r\n\r\nFurther reading:\r\n\r\nhttps://github.com/ThePix/quest/wiki/Setting-Up-Shop",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p>I believe you have to set everything up like you want it.</p>\n<hr>\n<h3>A Very Simple System</h3>\n<p>Make a function for taking items which can be purchased, then run that function for the <strong>take</strong> script.</p>\n<p>Here's a basic version:</p>\n<pre><code>  &lt;function name=\"takeSaleItem\" parameters=\"this\"&gt;\n    if (HasAttribute(this, \"purchased\")) {\n      msg (\"You pick \" + this.article + \" up.\")\n      AddToInventory (this)\n    }\n    else {\n      msg (\"You'll need to buy \" + this.article + \".  Taking \" + this.article + \" before buying \" + this.article + \" would be theft.\")\n    }\n  &lt;/function&gt;\n</code></pre>\n<hr>\n<p>Set up a <code>buy;purchase</code> verb on each object, which calls a function created to handle purchasing.</p>\n<p>Here's a simplified example:</p>\n<pre><code>  &lt;function name=\"makePurchase\" parameters=\"this\"&gt;&lt;![CDATA[\n    if (game.pov.money &gt;= this.price) {\n      DecreaseMoney (this.price)\n      msg (\"You pay for \" + GetDisplayName(this) + \" and pick \" + this.article + \" up.\")\n      AddToInventory (this)\n      this.buy = \"You have already purchased \" + this.article + \".\"\n      this.purchased = true\n      if (ListContains(this.generatedverbslist, \"buy\")) {\n        list remove (this.generatedverbslist, \"buy\")\n      }\n    }\n    else {\n      msg (\"You don't have enough money.\")\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<hr>\n<p>I would normally have a shopkeeper to talk to (and haggle with).</p>\n<p>I would also normally clone the purchased item and move it to the player's inventory, changing all sorts of attributes on the cloned object in that script.  (This would depend on what objects are for sale, of course)</p>\n<hr>\n<p>Here's a quick example game using the scripts I posted above:</p>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Shopping\"&gt;\n    &lt;gameid&gt;007a2efc-0e12-4508-9148-bafaca356f42&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n    &lt;showmoney /&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n      &lt;money type=\"int\"&gt;10&lt;/money&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Doohickey\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;price type=\"int\"&gt;5&lt;/price&gt;\n      &lt;buy type=\"script\"&gt;\n        makePurchase (this)\n      &lt;/buy&gt;\n      &lt;take type=\"script\"&gt;\n        takeSaleItem (this)\n      &lt;/take&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Collection of Fancy Thingies\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"plural\" /&gt;\n      &lt;take type=\"script\"&gt;\n        takeSaleItem (this)\n      &lt;/take&gt;\n      &lt;price type=\"int\"&gt;11&lt;/price&gt;\n      &lt;buy type=\"script\"&gt;\n        makePurchase (this)\n      &lt;/buy&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;function name=\"makePurchase\" parameters=\"this\"&gt;&lt;![CDATA[\n    if (game.pov.money &gt;= this.price) {\n      DecreaseMoney (this.price)\n      msg (\"You pay for \" + GetDisplayName(this) + \" and pick \" + this.article + \" up.\")\n      AddToInventory (this)\n      this.buy = \"You have already purchased \" + this.article + \".\"\n      this.purchased = true\n      if (ListContains(this.generatedverbslist, \"buy\")) {\n        list remove (this.generatedverbslist, \"buy\")\n      }\n    }\n    else {\n      msg (\"You don't have enough money.\")\n    }\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"takeSaleItem\" parameters=\"this\"&gt;\n    if (HasAttribute(this, \"purchased\")) {\n      msg (\"You pick \" + this.article + \" up.\")\n      AddToInventory (this)\n    }\n    else {\n      msg (\"You'll need to buy \" + this.article + \".  Taking \" + this.article + \" before buying \" + this.article + \" would be theft.\")\n    }\n  &lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p>You can set up shops and all sorts of things, if you want, too.</p>\n<p>Further reading:</p>\n<p>https://github.com/ThePix/quest/wiki/Setting-Up-Shop</p>\n\n",
      "PostDate": "2017-10-31T01:10:40.2524919Z",
      "LastEditDate": "2017-10-31T01:17:34.3601652Z",
      "link": null
    },
    {
      "PostId": "339d987d-59fc-46f8-b915-c26eb95df0c8",
      "UserId": 317185,
      "Username": "Jasutt",
      "AvatarUrl": "https://secure.gravatar.com/avatar/90dafbd190a6b609eea9a5003815e969?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you. I dont know how to program and even just looking at it in the folder view is a bit overwhelming.  I dont fully understand the expressions and stuff so every complicated thing i do it usually a crazy list of IF and object flags haha.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you. I dont know how to program and even just looking at it in the folder view is a bit overwhelming.  I dont fully understand the expressions and stuff so every complicated thing i do it usually a crazy list of IF and object flags haha.</p>\n\n",
      "PostDate": "2017-10-31T03:01:07.6794738Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c5bf34b9-8ddc-4073-9227-6f3fd8ba8afa",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I can provide an example with screenshots, if that will help you out...",
      "EditableFormat": "markdown",
      "HTML": "<p>I can provide an example with screenshots, if that will help you out...</p>\n\n",
      "PostDate": "2017-10-31T05:44:05.7862454Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "322deea2-e1d6-4893-b1ef-76ceeaa17967",
      "UserId": 317185,
      "Username": "Jasutt",
      "AvatarUrl": "https://secure.gravatar.com/avatar/90dafbd190a6b609eea9a5003815e969?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh i put the code you provided into the game and switched over to the folder view. Im just saying even that is a bit overwellming. Im trying to pick through it and figure out how to use it best.",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh i put the code you provided into the game and switched over to the folder view. Im just saying even that is a bit overwellming. Im trying to pick through it and figure out how to use it best.</p>\n\n",
      "PostDate": "2017-10-31T13:55:42.2814267Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "46737db7-a4e9-412a-96b3-e0167a2e1fe3",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "it's not too hard to learn how to read and write code, but it's scary at first...\r\n\r\nthe physical things are made up of 'tag' lines/blocks (like in writing you got: 'sentence' lines and 'paragraph' blocks):\r\n\r\na coding tag line/block, has a beginning and an ending, just as sentences and paragraphs do:\r\n\r\n(coding, in general: depends upon programing language/software used, can be vertical or horizontal)\r\n\r\na vertical tag block:\r\n\r\n```\r\n<object name=\"ball\"> // starting 'tag' of our 'ball' Object tag block\r\n  // content (other Objects and/or Attributes)\r\n</object> // ending 'tag' of our 'ball' Object tag block\r\n\r\n// without my (cluttering) comment lines (except one new comment line, as I also added in some example content into it too):\r\n\r\n<object name=\"ball\">\r\n\r\n  <attr name=\"color\" type=\"string\">red</attr>\r\n  <attr name=\"shape\" type=\"string\">sphere</attr>\r\n  <attr name=\"material\" type=\"string\">rubber</attr>\r\n  <attr name=\"type\" type=\"string\">superball</attr>\r\n\r\n  <attr name=\"displayverbs\" type=\"listextend\">throw</attr>\r\n\r\n  <attr name=\"throw\" type=\"script\">\r\n    msg (\"You throw the \" + ball.color + \" \" + ball.shape + \" \" + ball.material + \" \" + ball.type + \" at the wall\")\r\n    // output/display/result: You throw the red sphere rubber superball at the wall\r\n  </attr>\r\n\r\n</object>\r\n\r\n<verb>\r\n\r\n  <property>throw</property>\r\n  <pattern>throw</pattern>\r\n\r\n  <defaultexpression>You can't throw that!</defaultexpression>\r\n\r\n</verb>\r\n```\r\n\r\nhorizontal tag line example (Attributes DO HAVE TO BE contained within Elements, but that isn't shown below):\r\n\r\n```\r\n<attr name=\"color\" type=\"string\">red</attr>\r\n```\r\n\r\n------------\r\n\r\nhere's a pseudo-code example of a default (english language quest.exe download) new game's full game code:\r\n\r\nwith human-friendly spacing:\r\n\r\n```\r\n<asl version=\"550\">\r\n\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n\r\n  <game name=\"NAME_OF_YOUR_GAME\">\r\n\r\n    <gameid>SOME_RANDOMLY_GENERATED_HAS_STRING</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n\r\n  </game>\r\n\r\n  <object name=\"room\">\r\n\r\n    <inherit name=\"editor_room\" />\r\n\r\n    <object name=\"player\">\r\n\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n\r\n    </object>\r\n\r\n  </object>\r\n\r\n</asl>\r\n```\r\n\r\nwithout human-friendly spacing:\r\n\r\n```\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"NAME_OF_YOUR_GAME\">\r\n    <gameid>SOME_RANDOMLY_GENERATED_HAS_STRING</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n  </object>\r\n</asl>\r\n```\r\n\r\nfully horizontal (VERY NOT human-friendly) code:\r\n\r\n```\r\n<asl version=\"550\"><include ref=\"English.aslx\" /><include ref=\"Core.aslx\" /><game name=\"NAME_OF_YOUR_GAME\"><gameid>SOME_RANDOMLY_GENERATED_HAS_STRING</gameid><version>1.0</version><firstpublished>2017</firstpublished></game><object name=\"room\"><inherit name=\"editor_room\" /><object name=\"player\"><inherit name=\"editor_object\" /><inherit name=\"editor_player\" /></object></object></asl>\r\n```\r\n\r\n------------\r\n\r\nas you can see... humans like vertical (and line-spaced) code (horizontal code is fine though for short code, aka tag lines like with/of some Attributes, content), lol\r\n\r\n-----------------\r\n\r\nanyways about the code...\r\n\r\n------\r\n\r\n```\r\n<asl version=\"550\">\r\n  // mass of your entire game code's code/content\r\n</asl>\r\n```\r\n\r\nthe 'asl' tag block **IS** your GAME (your GAME OBJECT), so everything must be within it, obviously\r\n\r\nobviously the 'asl' tag block (aka, your GAME / GAME OBJECT) is required, lol\r\n\r\nthe 'version' in the starting 'als' tag (the starting tag is known as the 'signature/header' too, as it often has special parameters like 'name=xxx', 'type=xxx', etc, or in this case, 'version=xxx'), needs to match up with your downloaded quest version. There's a bit of more details/explanation about checking/matching up it as the correct quest version, but I'm too lazy to explain it here/now, lol\r\n\r\n--------------\r\n\r\n```\r\n<game name=\"NAME_OF_YOUR_GAME\">\r\n</game>\r\n```\r\n\r\nthe 'game' Game Settings Object is a special Object that is required, containing content for info about your game for people to read to see if they want to play your game or not, and etc such stuff (author, gameid, version: this is merely your own versioning/patching/updating history, first published year, category, difficulty, cruelty, description of your game, etc ect etc) and some various game-wide (global) controls and settings, and also the useful 'start' Script Attribute.\r\n\r\n---------\r\n\r\n```\r\n<include ref=\"English.aslx\" />\r\n<include ref=\"English.aslx\" />\r\n```\r\n\r\nquest is very powerful, it's engine is actually made up of library (literally code) files, so if you know quest well and are a good programmer, you can create your very own unique quest engine!\r\n\r\nanyways, these are the default (for english language quest.exe downloads) quest engine library files, obviously required (unless you've downloaded a different language than english and/or created your own engine library files, lol)\r\n\r\nyou don't have to create engine library files, as they can be as simple library files as you want, for an example of the most simple library file:\r\n\r\nmy_dragon_library_file.aslx\r\n\r\n```\r\n<library>\r\n\r\n  <object name=\"dragon\">\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n  </object>\r\n\r\n</library>\r\n```\r\n\r\nliterally this library file is just adding a 'dragon' Object within your 'room' Room Object, lol:\r\n\r\n(the 'my_dragon_library_file.aslx' library file has to be within the same folder as your 'xxx.aslx' game file, so it can be found and used)\r\n\r\n```\r\n<asl version=\"550\">\r\n\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n\r\n  <include ref=\"my_dragon_library_file\" />\r\n\r\n  <game name=\"NAME_OF_YOUR_GAME\">\r\n\r\n    <gameid>SOME_RANDOMLY_GENERATED_HAS_STRING</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n\r\n  </game>\r\n\r\n  <object name=\"room\">\r\n\r\n    <inherit name=\"editor_room\" />\r\n\r\n    <object name=\"player\">\r\n\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n\r\n    </object>\r\n\r\n  </object>\r\n\r\n</asl>\r\n```\r\n\r\nwhich is absolutely no different than had you just done this:\r\n\r\n```\r\n<asl version=\"550\">\r\n\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n\r\n  <game name=\"NAME_OF_YOUR_GAME\">\r\n\r\n    <gameid>SOME_RANDOMLY_GENERATED_HAS_STRING</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n\r\n  </game>\r\n\r\n  <object name=\"room\">\r\n\r\n    <inherit name=\"editor_room\" />\r\n\r\n    <object name=\"player\">\r\n\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n\r\n    </object>\r\n\r\n  </object>\r\n\r\n  <object name=\"dragon\">\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n  </object>\r\n\r\n</asl>\r\n```\r\n\r\nmaking library files are useful, as you can think of them as folders, so you can organize your code, making it easier on you, instead of having all of your code in one \"folder\" (aka, your game file).\r\n\r\n-------------------\r\n\r\nI think you get the idea now... hopefully... You hopefully understand the 'room' and 'player' Objects / tag blocks, that I don't have to explain them.\r\n\r\n------------------\r\n\r\naside from the \"physical things\" (the 'tag' stuff), there's also 'scripting' (actions/events) code (all the NON-tag stuff) too... which is it's own beast, so we won't get into it here, lol... well....\r\n\r\nquick example only:\r\n\r\n```\r\n<game name=\"example_game\">\r\n  <attr name=\"start\" type=\"script\">\r\n    character_creation\r\n    on ready {\r\n      msg (player.alias + \" is a \" + player.age_integer + \" year old \" + player.age_string + \" \" + player.sex + \" \" + player.race + \" \" + player.class + \".\")\r\n    }\r\n  </attr>\r\n</game>\r\n\r\n<function name=\"character_creation\">\r\n  <![CDATA[\r\n    msg (\"Name?\")\r\n    get input {\r\n      player.alias = result\r\n      msg (\"Age?\")\r\n      get input {\r\n        player.age_integer = ToInt (result)\r\n        if (player.age_integer > 17) {\r\n          player.age_string = \"adult\"\r\n        } else if (player.age_integer > 12) {\r\n          player.age_string = \"teen\"\r\n        } else if (player.age_integer > 2) {\r\n          player.age_string = \"child\"\r\n        } else {\r\n          player.age_string = \"baby\"\r\n        }\r\n        show menu (\"Sex?\", split (\"male;female\", \";\"), false) {\r\n          player.sex = result\r\n          show menu (\"Race?\", split (\"human;elf;dwarf;gnome;halfling;giant\", \";\"), false) {\r\n            player.race = result\r\n            show menu (\"Class?\", split (\"warrior;thief;cleric;wizard\", \";\"), false) {\r\n              player.class = result\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ]]>\r\n</function>\r\n```\r\n\r\n---------------\r\n\r\nthe \"physical things\" in quest are known as 'Elements (OBJECTS)' (not to be confused with the 'Object' sub-Element/sub-OBJECT), and they (well, some/most of them) are:\r\n\r\nhttp://docs.textadventures.co.uk/quest/elements/\r\n\r\n```\r\n<asl version=\"###\">\r\n</asl>\r\n\r\n<include ref=\"xxx.aslx\" />\r\n\r\n<delegate name=\"xxx\" />\r\n\r\n<game name=\"xxx\">\r\n</game>\r\n\r\n<object name=\"xxx\">\r\n</object>\r\n\r\n<exit name=\"xxx\">\r\n</exit>\r\n\r\n<type name=\"xxx\">\r\n</type>\r\n\r\n<turnscript name=\"xxx\">\r\n</turnscript>\r\n\r\n<timer name=\"xxx\">\r\n</timer>\r\n\r\n<function name=\"xxx\">\r\n</function>\r\n\r\n<command name=\"xxx\">\r\n</command>\r\n\r\n<verb>\r\n</verb>\r\n```\r\n\r\n-----------------------------\r\n\r\nAttributes:\r\n\r\nhttp://docs.textadventures.co.uk/quest/types/\r\n\r\n------------------------\r\n\r\nFunctions:\r\n\r\nhttp://docs.textadventures.co.uk/quest/scripts/\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/ // (categorical order)\r\nhttp://docs.textadventures.co.uk/quest/functions/index_allfunctions.html) // (alphabetical order)\r\n\r\n---------\r\n\r\nquest doc site main page:\r\n\r\nhttp://docs.textadventures.co.uk/quest/\r\n\r\n---------\r\n\r\ntutorial:\r\n\r\nhttp://docs.textadventures.co.uk/quest/tutorial/\r\n\r\n---------\r\n\r\none such guide (there's more via links on the quest doc main page or where-ever on/navigated-on the quest doc site, lol):\r\n\r\nhttp://docs.textadventures.co.uk/quest/#Howto\r\n\r\nmore guides:\r\n\r\nhttp://textadventures.co.uk/forum/samples\r\n\r\n-------------\r\n\r\nmy own 'Attribute and 'if' Script usage (and more detailed code help/explanation) guide:\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5559/attributes-and-if-script-guide-by-hk\r\n\r\n----------\r\n\r\nask if you need any help/explantions about anything!",
      "EditableFormat": "markdown",
      "HTML": "<p>it's not too hard to learn how to read and write code, but it's scary at first...</p>\n<p>the physical things are made up of 'tag' lines/blocks (like in writing you got: 'sentence' lines and 'paragraph' blocks):</p>\n<p>a coding tag line/block, has a beginning and an ending, just as sentences and paragraphs do:</p>\n<p>(coding, in general: depends upon programing language/software used, can be vertical or horizontal)</p>\n<p>a vertical tag block:</p>\n<pre><code>&lt;object name=\"ball\"&gt; // starting 'tag' of our 'ball' Object tag block\n  // content (other Objects and/or Attributes)\n&lt;/object&gt; // ending 'tag' of our 'ball' Object tag block\n\n// without my (cluttering) comment lines (except one new comment line, as I also added in some example content into it too):\n\n&lt;object name=\"ball\"&gt;\n\n  &lt;attr name=\"color\" type=\"string\"&gt;red&lt;/attr&gt;\n  &lt;attr name=\"shape\" type=\"string\"&gt;sphere&lt;/attr&gt;\n  &lt;attr name=\"material\" type=\"string\"&gt;rubber&lt;/attr&gt;\n  &lt;attr name=\"type\" type=\"string\"&gt;superball&lt;/attr&gt;\n\n  &lt;attr name=\"displayverbs\" type=\"listextend\"&gt;throw&lt;/attr&gt;\n\n  &lt;attr name=\"throw\" type=\"script\"&gt;\n    msg (\"You throw the \" + ball.color + \" \" + ball.shape + \" \" + ball.material + \" \" + ball.type + \" at the wall\")\n    // output/display/result: You throw the red sphere rubber superball at the wall\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;verb&gt;\n\n  &lt;property&gt;throw&lt;/property&gt;\n  &lt;pattern&gt;throw&lt;/pattern&gt;\n\n  &lt;defaultexpression&gt;You can't throw that!&lt;/defaultexpression&gt;\n\n&lt;/verb&gt;\n</code></pre>\n<p>horizontal tag line example (Attributes DO HAVE TO BE contained within Elements, but that isn't shown below):</p>\n<pre><code>&lt;attr name=\"color\" type=\"string\"&gt;red&lt;/attr&gt;\n</code></pre>\n<hr>\n<p>here's a pseudo-code example of a default (english language quest.exe download) new game's full game code:</p>\n<p>with human-friendly spacing:</p>\n<pre><code>&lt;asl version=\"550\"&gt;\n\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n\n  &lt;game name=\"NAME_OF_YOUR_GAME\"&gt;\n\n    &lt;gameid&gt;SOME_RANDOMLY_GENERATED_HAS_STRING&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n\n  &lt;/game&gt;\n\n  &lt;object name=\"room\"&gt;\n\n    &lt;inherit name=\"editor_room\" /&gt;\n\n    &lt;object name=\"player\"&gt;\n\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n\n    &lt;/object&gt;\n\n  &lt;/object&gt;\n\n&lt;/asl&gt;\n</code></pre>\n<p>without human-friendly spacing:</p>\n<pre><code>&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"NAME_OF_YOUR_GAME\"&gt;\n    &lt;gameid&gt;SOME_RANDOMLY_GENERATED_HAS_STRING&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n<p>fully horizontal (VERY NOT human-friendly) code:</p>\n<pre><code>&lt;asl version=\"550\"&gt;&lt;include ref=\"English.aslx\" /&gt;&lt;include ref=\"Core.aslx\" /&gt;&lt;game name=\"NAME_OF_YOUR_GAME\"&gt;&lt;gameid&gt;SOME_RANDOMLY_GENERATED_HAS_STRING&lt;/gameid&gt;&lt;version&gt;1.0&lt;/version&gt;&lt;firstpublished&gt;2017&lt;/firstpublished&gt;&lt;/game&gt;&lt;object name=\"room\"&gt;&lt;inherit name=\"editor_room\" /&gt;&lt;object name=\"player\"&gt;&lt;inherit name=\"editor_object\" /&gt;&lt;inherit name=\"editor_player\" /&gt;&lt;/object&gt;&lt;/object&gt;&lt;/asl&gt;\n</code></pre>\n<hr>\n<p>as you can see... humans like vertical (and line-spaced) code (horizontal code is fine though for short code, aka tag lines like with/of some Attributes, content), lol</p>\n<hr>\n<p>anyways about the code...</p>\n<hr>\n<pre><code>&lt;asl version=\"550\"&gt;\n  // mass of your entire game code's code/content\n&lt;/asl&gt;\n</code></pre>\n<p>the 'asl' tag block <strong>IS</strong> your GAME (your GAME OBJECT), so everything must be within it, obviously</p>\n<p>obviously the 'asl' tag block (aka, your GAME / GAME OBJECT) is required, lol</p>\n<p>the 'version' in the starting 'als' tag (the starting tag is known as the 'signature/header' too, as it often has special parameters like 'name=xxx', 'type=xxx', etc, or in this case, 'version=xxx'), needs to match up with your downloaded quest version. There's a bit of more details/explanation about checking/matching up it as the correct quest version, but I'm too lazy to explain it here/now, lol</p>\n<hr>\n<pre><code>&lt;game name=\"NAME_OF_YOUR_GAME\"&gt;\n&lt;/game&gt;\n</code></pre>\n<p>the 'game' Game Settings Object is a special Object that is required, containing content for info about your game for people to read to see if they want to play your game or not, and etc such stuff (author, gameid, version: this is merely your own versioning/patching/updating history, first published year, category, difficulty, cruelty, description of your game, etc ect etc) and some various game-wide (global) controls and settings, and also the useful 'start' Script Attribute.</p>\n<hr>\n<pre><code>&lt;include ref=\"English.aslx\" /&gt;\n&lt;include ref=\"English.aslx\" /&gt;\n</code></pre>\n<p>quest is very powerful, it's engine is actually made up of library (literally code) files, so if you know quest well and are a good programmer, you can create your very own unique quest engine!</p>\n<p>anyways, these are the default (for english language quest.exe downloads) quest engine library files, obviously required (unless you've downloaded a different language than english and/or created your own engine library files, lol)</p>\n<p>you don't have to create engine library files, as they can be as simple library files as you want, for an example of the most simple library file:</p>\n<p>my_dragon_library_file.aslx</p>\n<pre><code>&lt;library&gt;\n\n  &lt;object name=\"dragon\"&gt;\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;/object&gt;\n\n&lt;/library&gt;\n</code></pre>\n<p>literally this library file is just adding a 'dragon' Object within your 'room' Room Object, lol:</p>\n<p>(the 'my_dragon_library_file.aslx' library file has to be within the same folder as your 'xxx.aslx' game file, so it can be found and used)</p>\n<pre><code>&lt;asl version=\"550\"&gt;\n\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n\n  &lt;include ref=\"my_dragon_library_file\" /&gt;\n\n  &lt;game name=\"NAME_OF_YOUR_GAME\"&gt;\n\n    &lt;gameid&gt;SOME_RANDOMLY_GENERATED_HAS_STRING&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n\n  &lt;/game&gt;\n\n  &lt;object name=\"room\"&gt;\n\n    &lt;inherit name=\"editor_room\" /&gt;\n\n    &lt;object name=\"player\"&gt;\n\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n\n    &lt;/object&gt;\n\n  &lt;/object&gt;\n\n&lt;/asl&gt;\n</code></pre>\n<p>which is absolutely no different than had you just done this:</p>\n<pre><code>&lt;asl version=\"550\"&gt;\n\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n\n  &lt;game name=\"NAME_OF_YOUR_GAME\"&gt;\n\n    &lt;gameid&gt;SOME_RANDOMLY_GENERATED_HAS_STRING&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n\n  &lt;/game&gt;\n\n  &lt;object name=\"room\"&gt;\n\n    &lt;inherit name=\"editor_room\" /&gt;\n\n    &lt;object name=\"player\"&gt;\n\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n\n    &lt;/object&gt;\n\n  &lt;/object&gt;\n\n  &lt;object name=\"dragon\"&gt;\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;/object&gt;\n\n&lt;/asl&gt;\n</code></pre>\n<p>making library files are useful, as you can think of them as folders, so you can organize your code, making it easier on you, instead of having all of your code in one \"folder\" (aka, your game file).</p>\n<hr>\n<p>I think you get the idea now... hopefully... You hopefully understand the 'room' and 'player' Objects / tag blocks, that I don't have to explain them.</p>\n<hr>\n<p>aside from the \"physical things\" (the 'tag' stuff), there's also 'scripting' (actions/events) code (all the NON-tag stuff) too... which is it's own beast, so we won't get into it here, lol... well....</p>\n<p>quick example only:</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    character_creation\n    on ready {\n      msg (player.alias + \" is a \" + player.age_integer + \" year old \" + player.age_string + \" \" + player.sex + \" \" + player.race + \" \" + player.class + \".\")\n    }\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;function name=\"character_creation\"&gt;\n  &lt;![CDATA[\n    msg (\"Name?\")\n    get input {\n      player.alias = result\n      msg (\"Age?\")\n      get input {\n        player.age_integer = ToInt (result)\n        if (player.age_integer &gt; 17) {\n          player.age_string = \"adult\"\n        } else if (player.age_integer &gt; 12) {\n          player.age_string = \"teen\"\n        } else if (player.age_integer &gt; 2) {\n          player.age_string = \"child\"\n        } else {\n          player.age_string = \"baby\"\n        }\n        show menu (\"Sex?\", split (\"male;female\", \";\"), false) {\n          player.sex = result\n          show menu (\"Race?\", split (\"human;elf;dwarf;gnome;halfling;giant\", \";\"), false) {\n            player.race = result\n            show menu (\"Class?\", split (\"warrior;thief;cleric;wizard\", \";\"), false) {\n              player.class = result\n            }\n          }\n        }\n      }\n    }\n  ]]&gt;\n&lt;/function&gt;\n</code></pre>\n<hr>\n<p>the \"physical things\" in quest are known as 'Elements (OBJECTS)' (not to be confused with the 'Object' sub-Element/sub-OBJECT), and they (well, some/most of them) are:</p>\n<p>http://docs.textadventures.co.uk/quest/elements/</p>\n<pre><code>&lt;asl version=\"###\"&gt;\n&lt;/asl&gt;\n\n&lt;include ref=\"xxx.aslx\" /&gt;\n\n&lt;delegate name=\"xxx\" /&gt;\n\n&lt;game name=\"xxx\"&gt;\n&lt;/game&gt;\n\n&lt;object name=\"xxx\"&gt;\n&lt;/object&gt;\n\n&lt;exit name=\"xxx\"&gt;\n&lt;/exit&gt;\n\n&lt;type name=\"xxx\"&gt;\n&lt;/type&gt;\n\n&lt;turnscript name=\"xxx\"&gt;\n&lt;/turnscript&gt;\n\n&lt;timer name=\"xxx\"&gt;\n&lt;/timer&gt;\n\n&lt;function name=\"xxx\"&gt;\n&lt;/function&gt;\n\n&lt;command name=\"xxx\"&gt;\n&lt;/command&gt;\n\n&lt;verb&gt;\n&lt;/verb&gt;\n</code></pre>\n<hr>\n<p>Attributes:</p>\n<p>http://docs.textadventures.co.uk/quest/types/</p>\n<hr>\n<p>Functions:</p>\n<p>http://docs.textadventures.co.uk/quest/scripts/</p>\n<p>http://docs.textadventures.co.uk/quest/functions/ // (categorical order)<br>\nhttp://docs.textadventures.co.uk/quest/functions/index_allfunctions.html) // (alphabetical order)</p>\n<hr>\n<p>quest doc site main page:</p>\n<p>http://docs.textadventures.co.uk/quest/</p>\n<hr>\n<p>tutorial:</p>\n<p>http://docs.textadventures.co.uk/quest/tutorial/</p>\n<hr>\n<p>one such guide (there's more via links on the quest doc main page or where-ever on/navigated-on the quest doc site, lol):</p>\n<p>http://docs.textadventures.co.uk/quest/#Howto</p>\n<p>more guides:</p>\n<p>http://textadventures.co.uk/forum/samples</p>\n<hr>\n<p>my own 'Attribute and 'if' Script usage (and more detailed code help/explanation) guide:</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5559/attributes-and-if-script-guide-by-hk</p>\n<hr>\n<p>ask if you need any help/explantions about anything!</p>\n\n",
      "PostDate": "2017-11-01T05:37:47.8012571Z",
      "LastEditDate": "2017-11-01T05:57:22.9272719Z",
      "link": null
    }
  ]
}
