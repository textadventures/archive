{
  "Topic": {
    "TopicId": "kiqr0ve1zeszxns0g8opxa",
    "ForumId": "10",
    "Title": "[SOLOUTION] printing automated object link of dropped items from list.",
    "LastUpdated": "2021-10-14T08:56:42.9159845Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "c31967d5-bc4c-404c-8681-c893086be41f",
      "UserId": 429505,
      "Username": "Shadow666999",
      "AvatarUrl": "https://i.imgur.com/TPzC9Itb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```InRoomFloor = NewObjectList()\r\nInRoomFloor = ScopeReachable()\r\nInRoomFloor = FilterByAttribute(InRoomFloor,\"hasbeenmoved\", true)\r\nInRoomFloor = FilterByNotAttribute(InRoomFloor, \"parent\", Player)\r\nlist remove (InRoomFloor, Player)\r\nforeach (obj, InRoomFloor) {\r\n  msg (Replace((\"{\"+ obj + \"}\"), \"Object: \", \"object:\"))\r\n}",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>InRoomFloor = ScopeReachable()\nInRoomFloor = FilterByAttribute(InRoomFloor,\"hasbeenmoved\", true)\nInRoomFloor = FilterByNotAttribute(InRoomFloor, \"parent\", Player)\nlist remove (InRoomFloor, Player)\nforeach (obj, InRoomFloor) {\n  msg (Replace((\"{\"+ obj + \"}\"), \"Object: \", \"object:\"))\n}\n</code></pre>\n\n",
      "PostDate": "2021-10-14T08:56:42.9159845Z",
      "LastEditDate": "2021-10-15T00:22:48.7876366Z",
      "link": null
    },
    {
      "PostId": "54d35394-d80e-40b6-9ab6-b45aadb45bfd",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This seems a rather convoluted way to do it. Why not something like:\r\n```\r\nInRoomFloor = ScopeReachableNotHeld()\r\nInRoomFloor = FilterByAttribute(InRoomFloor,\"hasbeenmoved\", true)\r\nforeach (obj, InRoomFloor) {\r\n  msg (GetDisplayNameLink (obj, \"object\"))\r\n}\r\n```\r\nor:\r\n```\r\nInRoomFloor = ScopeReachableNotHeld()\r\nInRoomFloor = FilterByAttribute(InRoomFloor,\"hasbeenmoved\", true)\r\nmsg (FormatList (InRoomFloor, \"<br/>\", \"<br/>\", \"\"))\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>This seems a rather convoluted way to do it. Why not something like:</p>\n<pre><code>InRoomFloor = ScopeReachableNotHeld()\nInRoomFloor = FilterByAttribute(InRoomFloor,\"hasbeenmoved\", true)\nforeach (obj, InRoomFloor) {\n  msg (GetDisplayNameLink (obj, \"object\"))\n}\n</code></pre>\n<p>or:</p>\n<pre><code>InRoomFloor = ScopeReachableNotHeld()\nInRoomFloor = FilterByAttribute(InRoomFloor,\"hasbeenmoved\", true)\nmsg (FormatList (InRoomFloor, \"&lt;br/&gt;\", \"&lt;br/&gt;\", \"\"))\n</code></pre>\n\n",
      "PostDate": "2021-10-14T09:44:37.5829257Z",
      "LastEditDate": "2021-10-15T08:21:11.5623413Z",
      "link": null
    },
    {
      "PostId": "d2a5aeff-6fc1-46f6-affb-71539853d8c5",
      "UserId": 429505,
      "Username": "Shadow666999",
      "AvatarUrl": "https://i.imgur.com/TPzC9Itb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@mrangel\r\nit would still show player, and inventory, the code i have dose not and also will display object links automatically, and is far more superior then your code.",
      "EditableFormat": "markdown",
      "HTML": "<p>@mrangel<br>\nit would still show player, and inventory, the code i have dose not and also will display object links automatically, and is far more superior then your code.</p>\n\n",
      "PostDate": "2021-10-15T00:16:48.59154Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7d10fcbd-385c-4264-865e-ef02c8869065",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> it would still show player, and inventory,\r\n\r\nNo it wouldn't. `ScopeReachableNotHeld` returns only objects that are in the room.\r\n\r\nYou use `ScopeReachable`, which internally runs `ScopeReachableNotHeldForRoom` and `ScopeReachableInventory`, and combines those lists together. So you're taking  the list you want, adding the inventory, and then removing the inventory items again.\r\n\r\nThe only difference between the results is that your script will display any objects inside a bag that the player is holding.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>it would still show player, and inventory,</p>\n</blockquote>\n<p>No it wouldn't. <code>ScopeReachableNotHeld</code> returns only objects that are in the room.</p>\n<p>You use <code>ScopeReachable</code>, which internally runs <code>ScopeReachableNotHeldForRoom</code> and <code>ScopeReachableInventory</code>, and combines those lists together. So you're taking  the list you want, adding the inventory, and then removing the inventory items again.</p>\n<p>The only difference between the results is that your script will display any objects inside a bag that the player is holding.</p>\n\n",
      "PostDate": "2021-10-15T08:20:22.3935181Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
