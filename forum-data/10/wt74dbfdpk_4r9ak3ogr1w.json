{
  "Topic": {
    "TopicId": "wt74dbfdpk_4r9ak3ogr1w",
    "ForumId": "10",
    "Title": "Look at only and objeccts",
    "LastUpdated": "2020-04-27T02:56:05.0746286Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "2138674d-f6e8-4b26-93ae-02e015033359",
      "UserId": 464590,
      "Username": "GlueGunner4",
      "AvatarUrl": "https://secure.gravatar.com/avatar/78e05667a4495b9e265752ee392b4445?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I was making an escape room with look only exits to look left,  right, etc. and when I look in a direction, the objects don't show up. I don't know why. Any Ideas?\r\n\r\nEDIT: Maybe it's because the objects are under the look exit. But then how else am I supposed to only see the objects when I look in that direction?",
      "EditableFormat": "markdown",
      "HTML": "<p>I was making an escape room with look only exits to look left,  right, etc. and when I look in a direction, the objects don't show up. I don't know why. Any Ideas?</p>\n<p>EDIT: Maybe it's because the objects are under the look exit. But then how else am I supposed to only see the objects when I look in that direction?</p>\n\n",
      "PostDate": "2020-04-27T02:56:05.0746286Z",
      "LastEditDate": "2020-04-27T03:01:10.5525386Z",
      "link": null
    },
    {
      "PostId": "c873becf-88c6-46f8-839d-ee63ea4fd1fc",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "By default, a look-only exit doesn't show you objects in the other room. If you want to do that, the easiest way is to include the list of objects in the other room's description. Something like: <code>{either not game.pov.parent=<b style=\"color:red;font-family:initial\">name of room</b>:{=FormatObjectList(\"In the room you can see \", <b style=\"color:red;font-family:initial\">name of room</b>, \".\")}}</code>.\r\n\r\nIf you want to change the behaviour of looking in a direction, so that you don't need to do it for each exit, you would need to replace the \"lookdir\" script. The desktop editor should allow you to copy and edit a core command; or if you're using the web editor you could change it from the start script like this:\r\n<pre><code>lookdir.script => {\r\n    if (HasScript(exit, \"look\")) {\r\n        do (exit, \"look\")\r\n    }\r\n    else {\r\n      message = DynamicTemplate(\"YouLooking\",exit.alias)\r\n      if (HasString(exit, \"look\")){\r\n        if (exit.look <> \"\") {\r\n          message = exit.look\r\n        }\r\n      }\r\n      if (exit.locked) {\r\n        if (HasString(exit,\"lockmessage\")) {\r\n          lockmessage = exit.lockmessage\r\n        }\r\n        else {\r\n          lockmessage = Template(\"LockedExit\")\r\n        }\r\n        msg (message+\" \"+lockmessage)\r\n      }\r\n      else {\r\n        msg (message)\r\n<b style=\"color:green\">        msg (FormatObjectList (\"You can see \", exit.to, \".\"))</b>\r\n      }\r\n    }\r\n}</code></pre>\r\n\r\n<hr />\r\n\r\n**If you want the player to be able to reach objects through these exits** (so they can use commands on them), you will also need to make the objects reachable. I would suggest making containers named \"north wall\", \"east desk\", or so on, and putting the objects inside them. You can change the \"It contains\" line to something more appropriate. You can make these objects 'scenery' if you don't want the game to list them as being in the current room.\r\n\r\nIn this case, typing \"look east\" will not see a container called \"east wall\", because the direction names are special and it will trigger lookdir. So you might still need to create a look-only exit pointing into the container. In this case, because the container is in the room, you could make the exit's `look` description a script:\r\n```\r\ndo (lookat, \"script\", QuickParams (\"object\", this.to))\r\n```\r\nWhich effectively makes \"look east\" a shortened form of \"look at east wall\". If you wanted to, instead of making the exits look-only, you could give them a look description like that and an exit script like:\r\n```\r\nmsg (\"You walk over to the north wall.\")\r\ndo (lookat, \"script\", QuickParams (\"object\", this.to))\r\n```\r\nThis means that if the player enters \"go north\", it will have the same effect as looking at the north wall. I like to follow the \"principle of least surprise\"; making all the commands that a player is likely to use effective.\r\n\r\n<hr />\r\n\r\n(Actually, I'm a little unimpressed with the way scope works. We now have `changescopescript`, which gives finer-grained control than the backdrop scope script, but that doesn't help with all the core commands that check `ScopeReachable()` before doing their thing. I think I've got a neater way it could be implemented, but that would be a pretty large project)",
      "EditableFormat": "markdown",
      "HTML": "<p>By default, a look-only exit doesn't show you objects in the other room. If you want to do that, the easiest way is to include the list of objects in the other room's description. Something like: <code>{either not game.pov.parent=<b style=\"color: red; font-family: initial\">name of room</b>:{=FormatObjectList(\"In the room you can see \", <b style=\"color: red; font-family: initial\">name of room</b>, \".\")}}</code>.</p>\n<p>If you want to change the behaviour of looking in a direction, so that you don't need to do it for each exit, you would need to replace the \"lookdir\" script. The desktop editor should allow you to copy and edit a core command; or if you're using the web editor you could change it from the start script like this:</p>\n<pre><code>lookdir.script =&gt; {\n    if (HasScript(exit, \"look\")) {\n        do (exit, \"look\")\n    }\n    else {\n      message = DynamicTemplate(\"YouLooking\",exit.alias)\n      if (HasString(exit, \"look\")){\n        if (exit.look &lt;&gt; \"\") {\n          message = exit.look\n        }\n      }\n      if (exit.locked) {\n        if (HasString(exit,\"lockmessage\")) {\n          lockmessage = exit.lockmessage\n        }\n        else {\n          lockmessage = Template(\"LockedExit\")\n        }\n        msg (message+\" \"+lockmessage)\n      }\n      else {\n        msg (message)\n<b style=\"color: green\">        msg (FormatObjectList (\"You can see \", exit.to, \".\"))</b>\n      }\n    }\n}</code></pre>\n<hr>\n<p><strong>If you want the player to be able to reach objects through these exits</strong> (so they can use commands on them), you will also need to make the objects reachable. I would suggest making containers named \"north wall\", \"east desk\", or so on, and putting the objects inside them. You can change the \"It contains\" line to something more appropriate. You can make these objects 'scenery' if you don't want the game to list them as being in the current room.</p>\n<p>In this case, typing \"look east\" will not see a container called \"east wall\", because the direction names are special and it will trigger lookdir. So you might still need to create a look-only exit pointing into the container. In this case, because the container is in the room, you could make the exit's <code>look</code> description a script:</p>\n<pre><code>do (lookat, \"script\", QuickParams (\"object\", this.to))\n</code></pre>\n<p>Which effectively makes \"look east\" a shortened form of \"look at east wall\". If you wanted to, instead of making the exits look-only, you could give them a look description like that and an exit script like:</p>\n<pre><code>msg (\"You walk over to the north wall.\")\ndo (lookat, \"script\", QuickParams (\"object\", this.to))\n</code></pre>\n<p>This means that if the player enters \"go north\", it will have the same effect as looking at the north wall. I like to follow the \"principle of least surprise\"; making all the commands that a player is likely to use effective.</p>\n<hr>\n<p>(Actually, I'm a little unimpressed with the way scope works. We now have <code>changescopescript</code>, which gives finer-grained control than the backdrop scope script, but that doesn't help with all the core commands that check <code>ScopeReachable()</code> before doing their thing. I think I've got a neater way it could be implemented, but that would be a pretty large project)</p>\n\n",
      "PostDate": "2020-04-27T09:34:36.4291243Z",
      "LastEditDate": "2020-04-27T17:58:48.8097365Z",
      "link": null
    },
    {
      "PostId": "9ea8e1b6-ab47-47ef-a3c4-403fc9c080ad",
      "UserId": 464590,
      "Username": "GlueGunner4",
      "AvatarUrl": "https://secure.gravatar.com/avatar/78e05667a4495b9e265752ee392b4445?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think I edited the core command correctly, but when I tried to do the second part:\r\n<pre><code>Error running script: Error evaluating expression 'GetBoolean(object, \"hidechildren\")': GetBoolean \r\nfunction expected object parameter but was passed 'null'\r\n</code></pre>\r\nI got that error.\r\nDoes the container go in the exit or in the overall room? I think that might be where I'm Messing up.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I think I edited the core command correctly, but when I tried to do the second part:</p>\n<pre><code>Error running script: Error evaluating expression 'GetBoolean(object, \"hidechildren\")': GetBoolean \nfunction expected object parameter but was passed 'null'\n</code></pre>\n<p>I got that error.<br>\nDoes the container go in the exit or in the overall room? I think that might be where I'm Messing up.</p>\n\n",
      "PostDate": "2020-04-27T14:37:28.7223786Z",
      "LastEditDate": "2020-04-27T15:01:34.5884052Z",
      "link": null
    },
    {
      "PostId": "5e25c483-b7f6-4562-846b-c7c7a7da88ea",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That error looks like the exit doesn't have a destination. In order for that script to work correctly, you probably need to set the exit's destination to the container with the objects inside.\r\n\r\n> Does the container go in the exit or in the overall room?\r\n\r\nI assumed the exit was pointing to a room which contains the objects. If you have the objects inside the exit itself, then change `this.to` in the script to `this`. Then you don't need the containers; you can just give the exit an attribute `isopen` with the value `true`. I didn't suggest that originally because I don't know if the desktop editor will allow you to put objects inside an exit (if it does, it should work well).",
      "EditableFormat": "markdown",
      "HTML": "<p>That error looks like the exit doesn't have a destination. In order for that script to work correctly, you probably need to set the exit's destination to the container with the objects inside.</p>\n<blockquote>\n<p>Does the container go in the exit or in the overall room?</p>\n</blockquote>\n<p>I assumed the exit was pointing to a room which contains the objects. If you have the objects inside the exit itself, then change <code>this.to</code> in the script to <code>this</code>. Then you don't need the containers; you can just give the exit an attribute <code>isopen</code> with the value <code>true</code>. I didn't suggest that originally because I don't know if the desktop editor will allow you to put objects inside an exit (if it does, it should work well).</p>\n\n",
      "PostDate": "2020-04-27T18:05:02.8742874Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1c0d731c-819b-422c-88e1-7e893f2150b8",
      "UserId": 464590,
      "Username": "GlueGunner4",
      "AvatarUrl": "https://secure.gravatar.com/avatar/78e05667a4495b9e265752ee392b4445?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks for the help.\r\nYes, I'm trying to put the objects in the exit.\r\nSo I changed the script to ```this```, and made the ```isopen``` attribute true. I started the game, typed\r\n **Look West**\r\nAnd the game crashed. I tried again, with the same results. Strange, I don't know what I'm doing wrong. \r\nI'm trying to post the game code, but it formats everything weird. Something with the < and >.😕",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks for the help.<br>\nYes, I'm trying to put the objects in the exit.<br>\nSo I changed the script to <code>this</code>, and made the <code>isopen</code> attribute true. I started the game, typed<br>\n<strong>Look West</strong><br>\nAnd the game crashed. I tried again, with the same results. Strange, I don't know what I'm doing wrong.<br>\nI'm trying to post the game code, but it formats everything weird. Something with the &lt; and &gt;.😕</p>\n\n",
      "PostDate": "2020-04-28T15:22:45.6739345Z",
      "LastEditDate": "2020-04-28T15:26:36.7722515Z",
      "link": null
    },
    {
      "PostId": "4715cd19-6e4e-44d8-be84-b4404f342e41",
      "UserId": 464590,
      "Username": "GlueGunner4",
      "AvatarUrl": "https://secure.gravatar.com/avatar/78e05667a4495b9e265752ee392b4445?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wait a minute! I did it! That script worked! All I had to do was not use any look-only exits and put that script in the \"run a script instead of moving the player.\" The only problem is that the objects stay in view when you turn away. How could I fix that?",
      "EditableFormat": "markdown",
      "HTML": "<p>Wait a minute! I did it! That script worked! All I had to do was not use any look-only exits and put that script in the \"run a script instead of moving the player.\" The only problem is that the objects stay in view when you turn away. How could I fix that?</p>\n\n",
      "PostDate": "2020-04-28T16:09:03.5002759Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b1907433-d7e2-4968-b7a1-e572b8706916",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hmm… you might be able to hide the objects by adding something like:\r\n```\r\nforeach (exit, ScopeExits()) {\r\n  exit.hidechildren = true\r\n}\r\n```\r\nSo that when you look in one direction, it hides the others first.\r\n\r\nBut in that case, I think it might have been easier to make several \"rooms\" representing different parts of the room, with regular exits between them.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hmm… you might be able to hide the objects by adding something like:</p>\n<pre><code>foreach (exit, ScopeExits()) {\n  exit.hidechildren = true\n}\n</code></pre>\n<p>So that when you look in one direction, it hides the others first.</p>\n<p>But in that case, I think it might have been easier to make several \"rooms\" representing different parts of the room, with regular exits between them.</p>\n\n",
      "PostDate": "2020-04-28T17:37:00.0503547Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
