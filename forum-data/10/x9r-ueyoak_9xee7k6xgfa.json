{
  "Topic": {
    "TopicId": "x9r-ueyoak_9xee7k6xgfa",
    "ForumId": "10",
    "Title": "Picking up where you left off. ",
    "LastUpdated": "2021-09-14T20:57:39.2558223Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "3911d7bc-8e9a-4984-8f6c-93f0adc147f0",
      "UserId": 559973,
      "Username": "MaxTheSpy",
      "AvatarUrl": "https://secure.gravatar.com/avatar/e10966806d468a0a0437bc409218388d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is there a way to puck up where you left off in the game if you leave the session? If not, is there a way to move to a specific room if you input text into the text field?",
      "EditableFormat": "markdown",
      "HTML": "<p>Is there a way to puck up where you left off in the game if you leave the session? If not, is there a way to move to a specific room if you input text into the text field?</p>\n\n",
      "PostDate": "2021-09-14T20:57:39.2558223Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "62bad4eb-223a-4b2f-8c6b-89c181f89567",
      "UserId": 432182,
      "Username": "System Masters",
      "AvatarUrl": "https://i.imgur.com/Yt1XZ15b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You need to SAVE the game, by typing in that word.\r\nIf you're using the Quest app (which is the best experience), then you simply go back to your game afterwards and LOAD.\r\nIf you're using the website to play in your browser, then go to the game listing. Underneath the description and above the comments, the play button will have been replaced by two others - restart and resume.\r\n\r\nIf you clear your cookies / saved data, make sure to ignore textadventures.co.uk, or you'll LOSE that data. This of course isn't a problem if you use the Quest app.",
      "EditableFormat": "markdown",
      "HTML": "<p>You need to SAVE the game, by typing in that word.<br>\nIf you're using the Quest app (which is the best experience), then you simply go back to your game afterwards and LOAD.<br>\nIf you're using the website to play in your browser, then go to the game listing. Underneath the description and above the comments, the play button will have been replaced by two others - restart and resume.</p>\n<p>If you clear your cookies / saved data, make sure to ignore textadventures.co.uk, or you'll LOSE that data. This of course isn't a problem if you use the Quest app.</p>\n\n",
      "PostDate": "2021-09-15T14:17:50.1576623Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8b729ff8-5b57-41a7-8202-6f1a7f8ad5b8",
      "UserId": 559973,
      "Username": "MaxTheSpy",
      "AvatarUrl": "https://secure.gravatar.com/avatar/e10966806d468a0a0437bc409218388d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you are the best! Do you possibly know how to use the typewriter function and have a pause between line break in gamebook? Im having some troubles getting it to work correctly. I would like typewriter effect to print all of line 1 before it starts line 2, and once line 2 is finished start line 3. \r\n\r\nLine 1\r\nLine 2\r\nLine 3. ",
      "EditableFormat": "markdown",
      "HTML": "<p>you are the best! Do you possibly know how to use the typewriter function and have a pause between line break in gamebook? Im having some troubles getting it to work correctly. I would like typewriter effect to print all of line 1 before it starts line 2, and once line 2 is finished start line 3.</p>\n<p>Line 1<br>\nLine 2<br>\nLine 3.</p>\n\n",
      "PostDate": "2021-09-15T15:32:38.5520762Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c8337f03-5a24-4f4c-a2db-7c392ca0dc75",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The typewriter text is a little flaky. A while back I think I posted some updated javascript to change it, but doing that requires using either `inituserinterface` (not available for gamebooks) or editing `InitInterface` (not possible on the web editor).\r\n\r\nYou'll be using javascript, in any case.\r\n\r\nYou would need to either replace the javascript function `$.fn.typewriter`, or wait for the previous one to finish before starting (which would be a pain if you're doing it often, but should work)\r\n\r\nFor example, the code:\r\n```\r\nTextFX_Typewriter (\"Here is some text\", 100)\r\n```\r\n\r\nends up being broken down into:\r\n```\r\nJS.TextFX.Typewriter(\"Here is some text\", 100, GetCurrentFontFamily(), game.defaultforeground, game.defaultfontsize)\r\n```\r\n\r\nwhich is a shortcut for:\r\n```\r\nJS.eval(\"TextFX.Typewriter(\\\"Here is some text\\\", 100, '\" + GetCurrentFontFamily() + \"', '\" + game.defaultforeground + \"', \" + game.defaultfontsize + \")\")\r\n```\r\n\r\nSo you  could do something like:\r\n```\r\nJS.eval(\"TextFX.Typewriter(\\\"Here is some text\\\", 100, '\" + GetCurrentFontFamily() + \"', '\" + game.defaultforeground + \"', \" + game.defaultfontsize + \")\")\r\nJS.eval(\"setTimeout(function () {TextFX.Typewriter(\\\"And here's a second line\\\", 100, '\" + GetCurrentFontFamily() + \"', '\" + game.defaultforeground + \"', \" + game.defaultfontsize + \")}, 1800)\")\r\n```\r\nWhich (off the top of my head; there could be a mistake there) should start the second line of text 1.8 seconds after the first. 18 characters in the first message with speed 100 means that the second line starts at about the same time the first ends.\r\n\r\nThis isn't really a good way to do it; it's probably better to replace the typewriter function with one that waits for the previous line to finish. But if you're only doing this a few times, working out the time delay shouldn't be too much of a problem.\r\n\r\n\r\nIf you're doing a lot of typewriter text, you might want to do something like:\r\n```\r\n    $.fn.typewriter = function (speed) {\r\n        this.each(function () {\r\n            var $ele = $(this), str = $ele.text(), progress = 0;\r\n            $ele.text('');\r\n            if (window.typewriters && window.typewriters.length) {\r\n                window.typewriters.push({ele: $ele, str: str, speed: speed});\r\n            } else {\r\n                window.typewriters = [{ele: $ele, str: str, speed: speed}];\r\n                var timerFunction = function () {\r\n                    $ele.text(str.substring(0, progress++) + ((progress & 1) && progress < str.length ? '_' : ''));\r\n                    if (progress >= str.length) {\r\n                        clearInterval(timer);\r\n                        window.typewriters.shift();\r\n                        if (window.typewriters.length) {\r\n                            var nextTypewriter = window.typewriters[0];\r\n                            $ele = nextTypewriter.ele;\r\n                            str = nextTypewriter.str;\r\n                            progress = 0;\r\n                            timer = setInterval(timerFunction, nextTypewriter.speed);\r\n                        }\r\n                    }\r\n                };\r\n                var timer = setInterval(timerFunction, speed);\r\n            }\r\n        });\r\n        return this;\r\n    };\r\n```\r\n\r\nStill off the top of my head, but I think it might work. If not, someone can probably spot the bugs.\r\nIf you're using the desktop editor, you should be able to put that in a javascript file and include it in your Quest project. I've still not used the desktop editor, so I'm not so sure on the details of how you do that.\r\n\r\nAlternatively, this version of the function is compressed and wrapped up in Quest code, so you can use it in a normal game.\r\nYou would either have to put it into the User Interface Initialisation script (on the \"Advanced Scripts\" tab for text adventures), edit it into the function `InitInterface` (only possible on the desktop editor), or make sure that if the player loads a saved game, this is run before using the typewriter:\r\n```\r\nJS.eval(\"$.fn.typewriter=function(a){return this.each(function(){var b=$(this),c=b.text(),d=0;if(b.text(\"\"),window.typewriters&&window.typewriters.length)window.typewriters.push({ele:b,str:c,speed:a});else{window.typewriters=[{ele:b,str:c,speed:a}];var e=function(){if(b.text(c.substring(0,d++)+(1&d&&d<c.length?\"_\":\"\")),d>=c.length&&(clearInterval(f),window.typewriters.shift(),window.typewriters.length)){var a=window.typewriters[0];b=a.ele,c=a.str,d=0,f=setInterval(e,a.speed)}},f=setInterval(e,a)}}),this};\")\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>The typewriter text is a little flaky. A while back I think I posted some updated javascript to change it, but doing that requires using either <code>inituserinterface</code> (not available for gamebooks) or editing <code>InitInterface</code> (not possible on the web editor).</p>\n<p>You'll be using javascript, in any case.</p>\n<p>You would need to either replace the javascript function <code>$.fn.typewriter</code>, or wait for the previous one to finish before starting (which would be a pain if you're doing it often, but should work)</p>\n<p>For example, the code:</p>\n<pre><code>TextFX_Typewriter (\"Here is some text\", 100)\n</code></pre>\n<p>ends up being broken down into:</p>\n<pre><code>JS.TextFX.Typewriter(\"Here is some text\", 100, GetCurrentFontFamily(), game.defaultforeground, game.defaultfontsize)\n</code></pre>\n<p>which is a shortcut for:</p>\n<pre><code>JS.eval(\"TextFX.Typewriter(\\\"Here is some text\\\", 100, '\" + GetCurrentFontFamily() + \"', '\" + game.defaultforeground + \"', \" + game.defaultfontsize + \")\")\n</code></pre>\n<p>So you  could do something like:</p>\n<pre><code>JS.eval(\"TextFX.Typewriter(\\\"Here is some text\\\", 100, '\" + GetCurrentFontFamily() + \"', '\" + game.defaultforeground + \"', \" + game.defaultfontsize + \")\")\nJS.eval(\"setTimeout(function () {TextFX.Typewriter(\\\"And here's a second line\\\", 100, '\" + GetCurrentFontFamily() + \"', '\" + game.defaultforeground + \"', \" + game.defaultfontsize + \")}, 1800)\")\n</code></pre>\n<p>Which (off the top of my head; there could be a mistake there) should start the second line of text 1.8 seconds after the first. 18 characters in the first message with speed 100 means that the second line starts at about the same time the first ends.</p>\n<p>This isn't really a good way to do it; it's probably better to replace the typewriter function with one that waits for the previous line to finish. But if you're only doing this a few times, working out the time delay shouldn't be too much of a problem.</p>\n<p>If you're doing a lot of typewriter text, you might want to do something like:</p>\n<pre><code>    $.fn.typewriter = function (speed) {\n        this.each(function () {\n            var $ele = $(this), str = $ele.text(), progress = 0;\n            $ele.text('');\n            if (window.typewriters &amp;&amp; window.typewriters.length) {\n                window.typewriters.push({ele: $ele, str: str, speed: speed});\n            } else {\n                window.typewriters = [{ele: $ele, str: str, speed: speed}];\n                var timerFunction = function () {\n                    $ele.text(str.substring(0, progress++) + ((progress &amp; 1) &amp;&amp; progress &lt; str.length ? '_' : ''));\n                    if (progress &gt;= str.length) {\n                        clearInterval(timer);\n                        window.typewriters.shift();\n                        if (window.typewriters.length) {\n                            var nextTypewriter = window.typewriters[0];\n                            $ele = nextTypewriter.ele;\n                            str = nextTypewriter.str;\n                            progress = 0;\n                            timer = setInterval(timerFunction, nextTypewriter.speed);\n                        }\n                    }\n                };\n                var timer = setInterval(timerFunction, speed);\n            }\n        });\n        return this;\n    };\n</code></pre>\n<p>Still off the top of my head, but I think it might work. If not, someone can probably spot the bugs.<br>\nIf you're using the desktop editor, you should be able to put that in a javascript file and include it in your Quest project. I've still not used the desktop editor, so I'm not so sure on the details of how you do that.</p>\n<p>Alternatively, this version of the function is compressed and wrapped up in Quest code, so you can use it in a normal game.<br>\nYou would either have to put it into the User Interface Initialisation script (on the \"Advanced Scripts\" tab for text adventures), edit it into the function <code>InitInterface</code> (only possible on the desktop editor), or make sure that if the player loads a saved game, this is run before using the typewriter:</p>\n<pre><code>JS.eval(\"$.fn.typewriter=function(a){return this.each(function(){var b=$(this),c=b.text(),d=0;if(b.text(\"\"),window.typewriters&amp;&amp;window.typewriters.length)window.typewriters.push({ele:b,str:c,speed:a});else{window.typewriters=[{ele:b,str:c,speed:a}];var e=function(){if(b.text(c.substring(0,d++)+(1&amp;d&amp;&amp;d&lt;c.length?\"_\":\"\")),d&gt;=c.length&amp;&amp;(clearInterval(f),window.typewriters.shift(),window.typewriters.length)){var a=window.typewriters[0];b=a.ele,c=a.str,d=0,f=setInterval(e,a.speed)}},f=setInterval(e,a)}}),this};\")\n</code></pre>\n\n",
      "PostDate": "2021-09-15T19:39:34.7257555Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cadf59f5-93a9-4095-9353-35ab465f5e48",
      "UserId": 559973,
      "Username": "MaxTheSpy",
      "AvatarUrl": "https://secure.gravatar.com/avatar/e10966806d468a0a0437bc409218388d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you mrangel I will have to play with this tonight. My game (Gamebook) is centered around a sort of linux terminal so I will be using a lot of the typewriter function. It looks to be a pain but I think I might be able to figure it out. My last question for now is if there is a way to use the get input from player, and only continue if what they type in is correct?",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you mrangel I will have to play with this tonight. My game (Gamebook) is centered around a sort of linux terminal so I will be using a lot of the typewriter function. It looks to be a pain but I think I might be able to figure it out. My last question for now is if there is a way to use the get input from player, and only continue if what they type in is correct?</p>\n\n",
      "PostDate": "2021-09-16T17:37:42.0749952Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
