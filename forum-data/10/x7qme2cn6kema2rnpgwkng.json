{
  "Topic": {
    "TopicId": "x7qme2cn6kema2rnpgwkng",
    "ForumId": "10",
    "Title": "calling script on every exit, instead of specific exits (solved-ish for now)",
    "LastUpdated": "2019-06-14T20:09:13.7002413Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "30967064-1dc7-4718-945f-c9cee6fc4e08",
      "UserId": 423973,
      "Username": "konatethegreat",
      "AvatarUrl": "https://secure.gravatar.com/avatar/d25054976a1de2a6ac53f173d691d43a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey everyone, I just downloaded Quest, like, 2 days ago, and I'm writing an open-ended RPG adventure type game. As such, there will be skill check type rolls to pick locked doors/chests if you don't want to use the proper key.\r\n\r\nI'm using the desktop version, I am not working w/ the code directly but instead using the visual interface (it's been a long time since I've looked at any code, so it's going to be a few weeks before I'm back up to speed on that front).\r\n\r\nI have a fledgling idea of how to write this formula, and have tested it so I know it works. The question is can I have the script written in one place, like on a player or in game, instead of on each exit? If so, where do I put it, and how would I call the attribute off of the exit in question?\r\n\r\nThanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey everyone, I just downloaded Quest, like, 2 days ago, and I'm writing an open-ended RPG adventure type game. As such, there will be skill check type rolls to pick locked doors/chests if you don't want to use the proper key.</p>\n<p>I'm using the desktop version, I am not working w/ the code directly but instead using the visual interface (it's been a long time since I've looked at any code, so it's going to be a few weeks before I'm back up to speed on that front).</p>\n<p>I have a fledgling idea of how to write this formula, and have tested it so I know it works. The question is can I have the script written in one place, like on a player or in game, instead of on each exit? If so, where do I put it, and how would I call the attribute off of the exit in question?</p>\n<p>Thanks!</p>\n\n",
      "PostDate": "2019-06-14T20:09:13.7002413Z",
      "LastEditDate": "2019-06-14T20:32:01.9704162Z",
      "link": null
    },
    {
      "PostId": "e2596b2e-1a8a-4b0d-8dbb-d8e46eaf3010",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There's two ways I can think of to do this.\r\n\r\nFirst is, select the Player object, and look at their Attributes. One of them is a script-attribute called 'changedparent'. It's attached to the other Player attribute 'parent', which is always the current room it's in. The script of changedparent is called ANYTIME parent itself changes.\r\n\r\nNormally it can't be edited, but there is the Make Editable Copy to get around that. Do something like,\r\n```\r\nPlayer.changedparent = msg(\"We went to the new room, Mr. \"+this.alias+\"!\")\r\n//plus-all-the-other-base-stuff-in-changed-parent\r\n```\r\nAnd there you go.\r\n\r\nAnother way - the one I'd go for in your shoes - is if you want your code to happen for ALMOST all exits, but not precisely all of them, or if you don't want it to happen when you just use the script to move the player directly without using an exit.\r\n\r\nI assume you know how to make exits call script instead of default moving. What you can do is instead create a new function (Also assuming you know how to make functions with and without parameters) and call it, I don't know, ExitMovingRolls for example. And you put the code in _there_ and simply stick an 'ExitMovingRolls' onto each and every exit you want the special code for, and leave the others alone. If you ever need to modify the code, you just need to edit ExitMovingRolls itself instead of _every single exit with the code_.",
      "EditableFormat": "markdown",
      "HTML": "<p>There's two ways I can think of to do this.</p>\n<p>First is, select the Player object, and look at their Attributes. One of them is a script-attribute called 'changedparent'. It's attached to the other Player attribute 'parent', which is always the current room it's in. The script of changedparent is called ANYTIME parent itself changes.</p>\n<p>Normally it can't be edited, but there is the Make Editable Copy to get around that. Do something like,</p>\n<pre><code>Player.changedparent = msg(\"We went to the new room, Mr. \"+this.alias+\"!\")\n//plus-all-the-other-base-stuff-in-changed-parent\n</code></pre>\n<p>And there you go.</p>\n<p>Another way - the one I'd go for in your shoes - is if you want your code to happen for ALMOST all exits, but not precisely all of them, or if you don't want it to happen when you just use the script to move the player directly without using an exit.</p>\n<p>I assume you know how to make exits call script instead of default moving. What you can do is instead create a new function (Also assuming you know how to make functions with and without parameters) and call it, I don't know, ExitMovingRolls for example. And you put the code in <em>there</em> and simply stick an 'ExitMovingRolls' onto each and every exit you want the special code for, and leave the others alone. If you ever need to modify the code, you just need to edit ExitMovingRolls itself instead of <em>every single exit with the code</em>.</p>\n\n",
      "PostDate": "2019-06-14T20:14:15.2154673Z",
      "LastEditDate": "2019-06-14T20:14:43.6317756Z",
      "link": null
    },
    {
      "PostId": "6950c4d9-8345-4bce-b665-07893d48655c",
      "UserId": 423973,
      "Username": "konatethegreat",
      "AvatarUrl": "https://secure.gravatar.com/avatar/d25054976a1de2a6ac53f173d691d43a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So the way you recommend it is to write a new function, utilizing basically what I'm doing for the specific exit, and just make it a general-purpose version. Then, attach that function to each exit that needs it.\r\n\r\nCorrect? If so that sounds really easy to do.\r\n\r\nIf I do so, and I need to call variables for the exit or the room the exit is leaving, would I use \"parent.attribute\"? What about the room they go into? \"to.attribute\"?",
      "EditableFormat": "markdown",
      "HTML": "<p>So the way you recommend it is to write a new function, utilizing basically what I'm doing for the specific exit, and just make it a general-purpose version. Then, attach that function to each exit that needs it.</p>\n<p>Correct? If so that sounds really easy to do.</p>\n<p>If I do so, and I need to call variables for the exit or the room the exit is leaving, would I use \"parent.attribute\"? What about the room they go into? \"to.attribute\"?</p>\n\n",
      "PostDate": "2019-06-14T20:20:33.2236719Z",
      "LastEditDate": "2019-06-14T20:22:20.3539122Z",
      "link": null
    },
    {
      "PostId": "fc1f81bb-4152-4d3a-a31e-1fc6684d8d75",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Correct, except you don't need to make it general-purpose! Remember, attributes!\r\n\r\nGive your ExitMovingRolls the parameter 'GivenExit', for example. In the code itself you can have a switch block, to decide what to do depending on which exit triggers it. In psuedocode:\r\n```\r\nEXITMOVINGROLLS\r\nGivenExit Attribute\r\nswitch (GivenExit)\r\ncase 'ExitLeadingToTrapDoor'{\r\n//Do a bunch of rolls to avoid the trap door\r\n}\r\ncase 'ExitLeadingToTreasureChest'{\r\n//Do a bunch of rolls to determine the quality of the treasure you find\r\n}\r\netc\r\n```\r\nAnd in the exit itself, you call the function with the parameter of that object itself:\r\n```\r\nMove Based on Script (Not Default):\r\nCall function ExitMovingRolls(With parameter 'this')\r\n```\r\nThis will cause the code INSIDE ExitMovingRolls to treat 'GivenExit' as the exit itself (The variable 'this' is self-referential to the object itself).\r\n\r\n```\r\nIf I do so, and I need to call variables for the exit or the room the exit is leaving, would I use \"parent.attribute\"? What about the room they go into? \"to.attribute\"?\r\n```\r\n\r\nNo no, not at all!\r\n\r\nSay we have the Player object. You need to get the player's parent attribute. In code, that's just:\r\n```\r\nPlayer.parent\r\n```\r\nAnd nothing more. An exit's destination is\r\n```\r\nWhateverExit.to\r\n```\r\nIf you have the Health attribute on the player, you can change it like so:\r\n```\r\nPlayer.Health = SomeNewNumber\r\n```\r\nYou can even NEST attributes if you have an Object attribute, and you can get very creative then. For my current game I used it for the battle sequence. Like, the player has attribute Target, and OrcEnemy1 has attribute Health.\r\n```\r\nPlayer.Target = OrcEnemy1\r\nPlayer.OutgoingDamage = 50\r\nPlayer.Target.Health = Player.Target.Health - Player.OutgoingDamage (Reduces OrcEnemy1's health by 50)\r\n```\r\nHope all this helps!",
      "EditableFormat": "markdown",
      "HTML": "<p>Correct, except you don't need to make it general-purpose! Remember, attributes!</p>\n<p>Give your ExitMovingRolls the parameter 'GivenExit', for example. In the code itself you can have a switch block, to decide what to do depending on which exit triggers it. In psuedocode:</p>\n<pre><code>EXITMOVINGROLLS\nGivenExit Attribute\nswitch (GivenExit)\ncase 'ExitLeadingToTrapDoor'{\n//Do a bunch of rolls to avoid the trap door\n}\ncase 'ExitLeadingToTreasureChest'{\n//Do a bunch of rolls to determine the quality of the treasure you find\n}\netc\n</code></pre>\n<p>And in the exit itself, you call the function with the parameter of that object itself:</p>\n<pre><code>Move Based on Script (Not Default):\nCall function ExitMovingRolls(With parameter 'this')\n</code></pre>\n<p>This will cause the code INSIDE ExitMovingRolls to treat 'GivenExit' as the exit itself (The variable 'this' is self-referential to the object itself).</p>\n<pre><code>If I do so, and I need to call variables for the exit or the room the exit is leaving, would I use \"parent.attribute\"? What about the room they go into? \"to.attribute\"?\n</code></pre>\n<p>No no, not at all!</p>\n<p>Say we have the Player object. You need to get the player's parent attribute. In code, that's just:</p>\n<pre><code>Player.parent\n</code></pre>\n<p>And nothing more. An exit's destination is</p>\n<pre><code>WhateverExit.to\n</code></pre>\n<p>If you have the Health attribute on the player, you can change it like so:</p>\n<pre><code>Player.Health = SomeNewNumber\n</code></pre>\n<p>You can even NEST attributes if you have an Object attribute, and you can get very creative then. For my current game I used it for the battle sequence. Like, the player has attribute Target, and OrcEnemy1 has attribute Health.</p>\n<pre><code>Player.Target = OrcEnemy1\nPlayer.OutgoingDamage = 50\nPlayer.Target.Health = Player.Target.Health - Player.OutgoingDamage (Reduces OrcEnemy1's health by 50)\n</code></pre>\n<p>Hope all this helps!</p>\n\n",
      "PostDate": "2019-06-14T20:28:54.8588391Z",
      "LastEditDate": "2019-06-14T20:29:16.9633278Z",
      "link": null
    },
    {
      "PostId": "0c223cb2-284a-4ecc-b2a6-414bb8ce0161",
      "UserId": 423973,
      "Username": "konatethegreat",
      "AvatarUrl": "https://secure.gravatar.com/avatar/d25054976a1de2a6ac53f173d691d43a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It does, thanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>It does, thanks!</p>\n\n",
      "PostDate": "2019-06-14T20:31:33.3242817Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
