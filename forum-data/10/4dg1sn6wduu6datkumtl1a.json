{
  "Topic": {
    "TopicId": "4dg1sn6wduu6datkumtl1a",
    "ForumId": "10",
    "Title": "Attributes within attributes",
    "LastUpdated": "2016-07-27T23:44:25.9880968Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "90a6bd9b-53dd-4536-9eec-3f8835312c23",
      "UserId": 194213,
      "Username": "ReaperFace",
      "AvatarUrl": "http://i.imgur.com/s2W8meEb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay, so here's my issue. I've got a bunch of objects, named player1, player2, player3, etc.\r\nEach of those player objects have their own individual attributes - health, mood, strength, etc.\r\nThen, I've got some scripts which are intended to act differently depending on which player object interacts with it, depending on their attributes.\r\n\r\nNow, I'm assuming I could just do this with a bunch of 'if's, which would work, but I'm hoping to streamline this a little bit, if only so I can change stuff later a bit easier. To this end, I've created another object, object1 (probably not necessary, but hey, it should work, right?), which has a an attribute - objectstore, which is just a string. This effectively exists to store which player object is being affected by the script at that time - e.g. if player2 is being affected, it takes the value \"player2\".\r\n\r\nOkay, so say I wanted to do something with the health attribute of player2. So that can be expressed as:\r\n```\r\nplayer2.health\r\n```\r\nThat's easy enough. But what I want to do is express the same thing using the objectstore attribute of object1. So if that attribute is \"player2\", I want to just replace it as such:\r\n```\r\n(object1.objectstore).health\r\n```\r\nNow, that's my problem. I'm not really sure how to express this, syntax-wise. Here's a general list of the things I've tried:\r\n```\r\nobject1.objectstore.health\r\n(object1.objectstore).health\r\n{object1.objectstore}.health\r\n[object1.objectstore].health\r\n```\r\nOf course, none of these appear to work. returning errors and such.\r\n\r\nSo, I'm assuming that either this a more complex issue than I think it is, or there's something really simple I'm overlooking. Any ideas?",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay, so here's my issue. I've got a bunch of objects, named player1, player2, player3, etc.<br>\nEach of those player objects have their own individual attributes - health, mood, strength, etc.<br>\nThen, I've got some scripts which are intended to act differently depending on which player object interacts with it, depending on their attributes.</p>\n<p>Now, I'm assuming I could just do this with a bunch of 'if's, which would work, but I'm hoping to streamline this a little bit, if only so I can change stuff later a bit easier. To this end, I've created another object, object1 (probably not necessary, but hey, it should work, right?), which has a an attribute - objectstore, which is just a string. This effectively exists to store which player object is being affected by the script at that time - e.g. if player2 is being affected, it takes the value \"player2\".</p>\n<p>Okay, so say I wanted to do something with the health attribute of player2. So that can be expressed as:</p>\n<pre><code>player2.health\n</code></pre>\n<p>That's easy enough. But what I want to do is express the same thing using the objectstore attribute of object1. So if that attribute is \"player2\", I want to just replace it as such:</p>\n<pre><code>(object1.objectstore).health\n</code></pre>\n<p>Now, that's my problem. I'm not really sure how to express this, syntax-wise. Here's a general list of the things I've tried:</p>\n<pre><code>object1.objectstore.health\n(object1.objectstore).health\n{object1.objectstore}.health\n[object1.objectstore].health\n</code></pre>\n<p>Of course, none of these appear to work. returning errors and such.</p>\n<p>So, I'm assuming that either this a more complex issue than I think it is, or there's something really simple I'm overlooking. Any ideas?</p>\n\n",
      "PostDate": "2016-07-27T23:44:25.9880968Z",
      "LastEditDate": "2016-07-28T00:20:39.9303478Z"
    },
    {
      "PostId": "bc3ecb3e-30e4-4757-856c-ac1a27457c02",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "in quest, you can have multiple 'attachment/connectors/layers', so this for example works fine:\r\n\r\n```\r\norc.current_life = orc.current_life - player.weapon.damage\r\n// orc's new (reduced) life amount: 500 - 50 = 450\r\n\r\nplayer.current_life  = player.current_life - (orc.damage - player.armor.defense)\r\n// player's new (reduced) life amount: 999 - (100 - 25) = 999 - 75 = 924\r\n\r\n<object name=\"orc\">\r\n  <attr name=\"current_life\" type=\"int\">500</attr>\r\n  <attr name=\"damage\" type=\"int\">100</attr>\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <attr name=\"current_life\" type=\"int\">999</attr>\r\n  <object name=\"weapon\">\r\n    <attr name=\"damage\" type=\"int\">50</attr>\r\n  </object>\r\n  <object name=\"armor\">\r\n    <attr name=\"defense\" type=\"int\">25</attr>\r\n  </object>\r\n</object>\r\n```\r\n--------------------\r\n\r\noh, if you want the 'objectstore' to be a String Attribute... you'd do somethng like this, if I understadn you:\r\n\r\n(this is really bad design, there's much better methods to use! You really don't want to be doing this however! I don't quite understand what you want though. If you could explain more about what you want to do, then I can help you with it better)\r\n\r\n```\r\nif (object1.objectstore = \"player1\" and object1.objectstore2 = \"health\") {\r\n  player1.health = object1.health\r\n} else if (object1.objectstore = \"player2\" and object1.objectstore2 = \"health\") {\r\n  player2.health = object1.health\r\n} else if (object1.objectstore = \"player1\" and object1.objectstore2 = \"strength\") {\r\n  player1.strength = object1.strength\r\n}\r\n\r\n<object name=\"object1\">\r\n  <attr name=\"objectstore\" type=\"string\">unknown</attr> // player1/player2/player3/etc\r\n  <attr name=\"objectstore2\" type=\"string\">unknown</attr> // health/strength/mood/etc\r\n  <attr name=\"health\" type=\"int\">100</attr>\r\n  <attr name=\"strength\" type=\"int\">500</attr>\r\n</object>\r\n```\r\n\r\n---------------------\r\n\r\nBut, I'm still a bit unclear on exactly what you want to do and/or why you want to do this stuff... sorry for not understanding!\r\n\r\n------------\r\n\r\nYou might want to take a look into:\r\n\r\nusing 'game.pov' vs 'specific Player Object references (eg: player1, player2, player3)'\r\n\r\nFunctions/Commands (as they've got Parameters you can use)\r\n\r\nObjects + Delegates (Delegates basically allows you to use Parameters for Object's Script/Verb Attributes)\r\n\r\nthere's also the 'this' keyword/keycommand, which can be useful in scripting as it gets/uses/returns/outputs the Script's parent Object.\r\n\r\nAlso, there's of course List/Dictionary Attributes too. Though, if you're a code/quest noobie, these can be a bit difficult to understand, as they're a bit more advanced than the basic Attributes.\r\n\r\n----------\r\n\r\nHK edit:\r\n\r\noh... I think I see now what you wanted.... for this to work:\r\n\r\n>(object1.objectstore).health\r\n\r\nyou need to use the 'set' Script/Function (as you found out, the dot/period syntax/notation doesn't work for this stuff):\r\n\r\nhttp://docs.textadventures.co.uk/quest/scripts/set.html\r\n\r\n>set (OBJECT, \"ATTRIBUTE_NAME\", ATTRIBUTE_VALUE)\r\n\r\nso it would be (if using/having 'objectstore' as a String Attribute):\r\n\r\n(you need the 'GetObject' Script/Function to convert the string name into an actual reference of the Object)\r\n( http://docs.textadventures.co.uk/quest/functions/getobject.html )\r\n\r\n```\r\n// object1.objectstore = player1.name // or \"player1\"\r\nset (GetObject (object1.objectstore), \"health\", 100)\r\n// player1.health = 100\r\n\r\n// object1.objectstore = player2.name // or \"player2\"\r\nset (GetObject (object1.objectstore), \"health\", 250)\r\n// player2.health = 250\r\n\r\n<object name=\"object1\">\r\n  <attr name=\"objectstore\" type=\"string\">unknown</attr> // player1/player2/player3\r\n</object>\r\n\r\n<object name=\"player1\">\r\n</object>\r\n\r\n<object name=\"player2\">\r\n</object>\r\n```\r\n\r\nso it would be (if using/having 'objectstore' as an Object Attribute):\r\n\r\n```\r\n// object1.objectstore = player1\r\nset (object1.objectstore, \"health\", 100)\r\n// player1.health = 100\r\n\r\n// object1.objectstore = player2\r\nset (object1.objectstore, \"health\", 250)\r\n// player2.health = 250\r\n\r\n<object name=\"object1\">\r\n  <attr name=\"objectstore\" type=\"object\">unknown</attr> // player1/player2/player3\r\n</object>\r\n\r\n<object name=\"unknown\">\r\n</object>\r\n\r\n<object name=\"player1\">\r\n</object>\r\n\r\n<object name=\"player2\">\r\n</object>\r\n```\r\n\r\n-----------------\r\n\r\nObject references as Object Values of Object Attributes do NOT have the double quotes, for example using the built-in 'parent' Object Attribute: player.parent = room, notice how the VALUE (room) doesn't have the double quotes\r\n\r\nthere's a few exceptions of VALUES without double quotes, in NOT being an object reference: 'true/false' as these are reserved for Boolean Attributes' VALUES: orc.dead = false, orc.dead = true, for one example of an exception, I think there's a few others as well besides the ''true/false' of Boolean Attirbutes. Oops,I forgot the most obvious: any numerical Value obvious is not an Object reference (-100, -1, 0, 1, 100, -9.234, 0.0, 3.876)\r\n\r\nAny VALUE with double quotes is a String.\r\n\r\n```\r\nsome examples:\r\n\r\n1. player.right_hand = sword // this is an Object Attribute (which quest determines by it having) an Object Value (no double quotes and it's not 'true/false')\r\n// ERROR! There's no existing 'sword' Object!\r\n\r\n2. player.right_hand = \"sword\" // this is a String Attribute (which quest determines by it having) a String Value (double quotes)\r\n// NO error\r\n\r\n3. player.right_hand = sword\r\n<object name=\"sword\">\r\n</object>\r\n// NO error\r\n\r\n4. player.strength = 100\r\nplayer.strength = player.strength + 50\r\n// NO error: player.strength = 150\r\n\r\n5. player.strength = \"100\"\r\nplayer.strength = player.strength + 50\r\n// ERROR: humans/computers can't do addition of \"100\" (String) and 50 (Integer), illogically possible, lol.\r\n\r\n6. player.strength = \"100\"\r\nplayer.strength = player.strength + \"50\"\r\n// NO error: humans/computers can do concatenation (literally putting together/next-to-each each) of \"100\" (String) and \"50\" (String), making: \"10050\" (String)\r\n\r\n7. player.strength = \"mama\"\r\nplayer.strength = player.strength + \"50\"\r\n// NO error: humans/computers can do concatenation (literally putting together/next-to-each each) of \"mama\" and \"50\", making: \"mama50\"\r\n\r\n8. player.strength = \"100\"\r\nplayer.strength = player.strength + \"mama\"\r\n// NO error: humans/computers can do concatenation (literally putting together/next-to-each each) of \"mama\" and \"50\", making: \"100mama\"\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>in quest, you can have multiple 'attachment/connectors/layers', so this for example works fine:</p>\n<pre><code>orc.current_life = orc.current_life - player.weapon.damage\n// orc's new (reduced) life amount: 500 - 50 = 450\n\nplayer.current_life  = player.current_life - (orc.damage - player.armor.defense)\n// player's new (reduced) life amount: 999 - (100 - 25) = 999 - 75 = 924\n\n&lt;object name=\"orc\"&gt;\n  &lt;attr name=\"current_life\" type=\"int\"&gt;500&lt;/attr&gt;\n  &lt;attr name=\"damage\" type=\"int\"&gt;100&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;attr name=\"current_life\" type=\"int\"&gt;999&lt;/attr&gt;\n  &lt;object name=\"weapon\"&gt;\n    &lt;attr name=\"damage\" type=\"int\"&gt;50&lt;/attr&gt;\n  &lt;/object&gt;\n  &lt;object name=\"armor\"&gt;\n    &lt;attr name=\"defense\" type=\"int\"&gt;25&lt;/attr&gt;\n  &lt;/object&gt;\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p>oh, if you want the 'objectstore' to be a String Attribute... you'd do somethng like this, if I understadn you:</p>\n<p>(this is really bad design, there's much better methods to use! You really don't want to be doing this however! I don't quite understand what you want though. If you could explain more about what you want to do, then I can help you with it better)</p>\n<pre><code>if (object1.objectstore = \"player1\" and object1.objectstore2 = \"health\") {\n  player1.health = object1.health\n} else if (object1.objectstore = \"player2\" and object1.objectstore2 = \"health\") {\n  player2.health = object1.health\n} else if (object1.objectstore = \"player1\" and object1.objectstore2 = \"strength\") {\n  player1.strength = object1.strength\n}\n\n&lt;object name=\"object1\"&gt;\n  &lt;attr name=\"objectstore\" type=\"string\"&gt;unknown&lt;/attr&gt; // player1/player2/player3/etc\n  &lt;attr name=\"objectstore2\" type=\"string\"&gt;unknown&lt;/attr&gt; // health/strength/mood/etc\n  &lt;attr name=\"health\" type=\"int\"&gt;100&lt;/attr&gt;\n  &lt;attr name=\"strength\" type=\"int\"&gt;500&lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p>But, I'm still a bit unclear on exactly what you want to do and/or why you want to do this stuff... sorry for not understanding!</p>\n<hr>\n<p>You might want to take a look into:</p>\n<p>using 'game.pov' vs 'specific Player Object references (eg: player1, player2, player3)'</p>\n<p>Functions/Commands (as they've got Parameters you can use)</p>\n<p>Objects + Delegates (Delegates basically allows you to use Parameters for Object's Script/Verb Attributes)</p>\n<p>there's also the 'this' keyword/keycommand, which can be useful in scripting as it gets/uses/returns/outputs the Script's parent Object.</p>\n<p>Also, there's of course List/Dictionary Attributes too. Though, if you're a code/quest noobie, these can be a bit difficult to understand, as they're a bit more advanced than the basic Attributes.</p>\n<hr>\n<p>HK edit:</p>\n<p>oh... I think I see now what you wanted.... for this to work:</p>\n<blockquote>\n<p>(object1.objectstore).health</p>\n</blockquote>\n<p>you need to use the 'set' Script/Function (as you found out, the dot/period syntax/notation doesn't work for this stuff):</p>\n<p>http://docs.textadventures.co.uk/quest/scripts/set.html</p>\n<blockquote>\n<p>set (OBJECT, \"ATTRIBUTE_NAME\", ATTRIBUTE_VALUE)</p>\n</blockquote>\n<p>so it would be (if using/having 'objectstore' as a String Attribute):</p>\n<p>(you need the 'GetObject' Script/Function to convert the string name into an actual reference of the Object)<br>\n( http://docs.textadventures.co.uk/quest/functions/getobject.html )</p>\n<pre><code>// object1.objectstore = player1.name // or \"player1\"\nset (GetObject (object1.objectstore), \"health\", 100)\n// player1.health = 100\n\n// object1.objectstore = player2.name // or \"player2\"\nset (GetObject (object1.objectstore), \"health\", 250)\n// player2.health = 250\n\n&lt;object name=\"object1\"&gt;\n  &lt;attr name=\"objectstore\" type=\"string\"&gt;unknown&lt;/attr&gt; // player1/player2/player3\n&lt;/object&gt;\n\n&lt;object name=\"player1\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player2\"&gt;\n&lt;/object&gt;\n</code></pre>\n<p>so it would be (if using/having 'objectstore' as an Object Attribute):</p>\n<pre><code>// object1.objectstore = player1\nset (object1.objectstore, \"health\", 100)\n// player1.health = 100\n\n// object1.objectstore = player2\nset (object1.objectstore, \"health\", 250)\n// player2.health = 250\n\n&lt;object name=\"object1\"&gt;\n  &lt;attr name=\"objectstore\" type=\"object\"&gt;unknown&lt;/attr&gt; // player1/player2/player3\n&lt;/object&gt;\n\n&lt;object name=\"unknown\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player1\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player2\"&gt;\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p>Object references as Object Values of Object Attributes do NOT have the double quotes, for example using the built-in 'parent' Object Attribute: player.parent = room, notice how the VALUE (room) doesn't have the double quotes</p>\n<p>there's a few exceptions of VALUES without double quotes, in NOT being an object reference: 'true/false' as these are reserved for Boolean Attributes' VALUES: orc.dead = false, orc.dead = true, for one example of an exception, I think there's a few others as well besides the ''true/false' of Boolean Attirbutes. Oops,I forgot the most obvious: any numerical Value obvious is not an Object reference (-100, -1, 0, 1, 100, -9.234, 0.0, 3.876)</p>\n<p>Any VALUE with double quotes is a String.</p>\n<pre><code>some examples:\n\n1. player.right_hand = sword // this is an Object Attribute (which quest determines by it having) an Object Value (no double quotes and it's not 'true/false')\n// ERROR! There's no existing 'sword' Object!\n\n2. player.right_hand = \"sword\" // this is a String Attribute (which quest determines by it having) a String Value (double quotes)\n// NO error\n\n3. player.right_hand = sword\n&lt;object name=\"sword\"&gt;\n&lt;/object&gt;\n// NO error\n\n4. player.strength = 100\nplayer.strength = player.strength + 50\n// NO error: player.strength = 150\n\n5. player.strength = \"100\"\nplayer.strength = player.strength + 50\n// ERROR: humans/computers can't do addition of \"100\" (String) and 50 (Integer), illogically possible, lol.\n\n6. player.strength = \"100\"\nplayer.strength = player.strength + \"50\"\n// NO error: humans/computers can do concatenation (literally putting together/next-to-each each) of \"100\" (String) and \"50\" (String), making: \"10050\" (String)\n\n7. player.strength = \"mama\"\nplayer.strength = player.strength + \"50\"\n// NO error: humans/computers can do concatenation (literally putting together/next-to-each each) of \"mama\" and \"50\", making: \"mama50\"\n\n8. player.strength = \"100\"\nplayer.strength = player.strength + \"mama\"\n// NO error: humans/computers can do concatenation (literally putting together/next-to-each each) of \"mama\" and \"50\", making: \"100mama\"\n</code></pre>\n\n",
      "PostDate": "2016-07-28T06:05:05.6104648Z",
      "LastEditDate": "2016-07-28T06:59:13.0906185Z"
    },
    {
      "PostId": "7e953cf6-218e-4b2a-a9f6-18102ef290dc",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think you are making it overly complicated. I am not sure exactly what you want to do, but I would guess the best way is to have local variable, and use the attributes of that.\r\n```\r\ncurrent_player = player2\r\ncurrent_player.health = current_player.health - 5\r\ncurrent_player.strength = 10\r\n```\r\nOr parameter in a function.\r\n```\r\nDoStuffWithPlayer(player2)\r\n\r\n-function\r\n-parameters: current_player\r\ncurrent_player.health = current_player.health - 5\r\ncurrent_player.strength = 10\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I think you are making it overly complicated. I am not sure exactly what you want to do, but I would guess the best way is to have local variable, and use the attributes of that.</p>\n<pre><code>current_player = player2\ncurrent_player.health = current_player.health - 5\ncurrent_player.strength = 10\n</code></pre>\n<p>Or parameter in a function.</p>\n<pre><code>DoStuffWithPlayer(player2)\n\n-function\n-parameters: current_player\ncurrent_player.health = current_player.health - 5\ncurrent_player.strength = 10\n</code></pre>\n\n",
      "PostDate": "2016-07-28T07:18:04.4198785Z",
      "LastEditDate": null
    },
    {
      "PostId": "8fed54f5-6262-45c1-9735-ff86873997ee",
      "UserId": 194213,
      "Username": "ReaperFace",
      "AvatarUrl": "http://i.imgur.com/J37qXMEb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@hegemonkhan\r\n\r\nAh, I see what I was doing wrong now. I felt like what I was doing was a little ... weird, but I wasn't sure _why_ until now. Thanks for explaining it so clearly! Still got a lot to learn! :)\r\n\r\n@The Pixie\r\n\r\nParameters - I think that's the piece of the puzzle I've been missing! Certainly a lot easier than messing with attributes.\r\n\r\nThanks all for the help. :)",
      "EditableFormat": "markdown",
      "HTML": "<p>@hegemonkhan</p>\n<p>Ah, I see what I was doing wrong now. I felt like what I was doing was a little ... weird, but I wasn't sure <em>why</em> until now. Thanks for explaining it so clearly! Still got a lot to learn! :)</p>\n<p>@The Pixie</p>\n<p>Parameters - I think that's the piece of the puzzle I've been missing! Certainly a lot easier than messing with attributes.</p>\n<p>Thanks all for the help. :)</p>\n\n",
      "PostDate": "2016-07-28T12:58:44.1549907Z",
      "LastEditDate": null
    },
    {
      "PostId": "4f07b08b-464b-4470-b935-aef461990332",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You can also make the original code work (with object1.objectstore.health) simply by storing player2 (as an object reference) rather than \"player2\" (as a string).",
      "EditableFormat": "markdown",
      "HTML": "<p>You can also make the original code work (with object1.objectstore.health) simply by storing player2 (as an object reference) rather than \"player2\" (as a string).</p>\n\n",
      "PostDate": "2016-07-29T12:19:41.7114862Z",
      "LastEditDate": null
    }
  ]
}
