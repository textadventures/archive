{
  "Topic": {
    "TopicId": "canevdkftey63kdarjp2zq",
    "ForumId": "10",
    "Title": "My code is... executing in the wrong order? [Solved]",
    "LastUpdated": "2019-06-03T01:40:50.404223Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "2ecc5736-adc5-494b-9efb-83d66446805d",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "My current indev game, I make heavy use of cloning objects. I have a debug room filled with stuff like FightingCharacterBase, CelestialBodyBase, BuffBase etc. As needed, I change the attributes of the objects, clone-and-move to the needed room, and have the player interact with the clone. When no longer needed, I FilterByAttribute for the object clones and destroy them.\r\n\r\nThem problem I'm getting is that in some cases, the objects, uh, clone in the wrong order. The best example I can give is the SpaceRoom that holds Earth and Luna. It's supposed to set CelestialBodyBase's alias to Earth, clone-and-move it, then set CelestialBodyBase's alias to Luna, clone-and-move that. So you'd  get Earth first, and Luna second. Relevant code below.\r\n```\r\n// Make the worlds via a Switch and a While Loop\r\nset (StellarSystemFolder, \"WorldsToMake\", 2)\r\nwhile (StellarSystemFolder.WorldsToMake>0) {\r\n  switch (StellarSystemFolder.WorldsToMake) {\r\n    case (1) {\r\n      set (CelestialBodyBase, \"alias\", \"Luna\")\r\n      set (CelestialBodyBase, \"CanLand\", False)\r\n      set (CelestialBodyBase, \"CanMine\", False)\r\n      set (CelestialBodyBase, \"StarPlanet\", \"Planet\")\r\n      CloneObjectAndMove (CelestialBodyBase, StellarSystemC4)\r\n    }\r\n    case (2) {\r\n      set (CelestialBodyBase, \"alias\", \"Earth\")\r\n      set (CelestialBodyBase, \"CanLand\", True)\r\n      set (CelestialBodyBase, \"CanMine\", False)\r\n      set (CelestialBodyBase, \"StarPlanet\", \"Planet\")\r\n      CloneObjectAndMove (CelestialBodyBase, StellarSystemC4)\r\n    }\r\n  }\r\n  set (StellarSystemFolder, \"WorldsToMake\", StellarSystemFolder.WorldsToMake-1)\r\n}\r\n```\r\nBut at times, I get Luna first and Earth second.\r\n\r\nSomething similar happens when I clone FightingCharacterBase to make characters in a fight. I'd go 'make and clone Big Boss, then make and clone Small Enemy 1, make and clone Small Enemy 2' and I'll get them showing up in the order of \"Small Enemy 1, Small Enemy 2, Big Boss\" or something, with no apparent rhyme or reason (Different order every time). And it should be noted that even when the object clones APPEAR in the wrong order, they still have all the correct attributes that they should have - Small Enemy 1 never ever has Big Boss's HP.\r\n\r\nDoes anyone know what's going on? I'm going insane trying to solve this.",
      "EditableFormat": "markdown",
      "HTML": "<p>My current indev game, I make heavy use of cloning objects. I have a debug room filled with stuff like FightingCharacterBase, CelestialBodyBase, BuffBase etc. As needed, I change the attributes of the objects, clone-and-move to the needed room, and have the player interact with the clone. When no longer needed, I FilterByAttribute for the object clones and destroy them.</p>\n<p>Them problem I'm getting is that in some cases, the objects, uh, clone in the wrong order. The best example I can give is the SpaceRoom that holds Earth and Luna. It's supposed to set CelestialBodyBase's alias to Earth, clone-and-move it, then set CelestialBodyBase's alias to Luna, clone-and-move that. So you'd  get Earth first, and Luna second. Relevant code below.</p>\n<pre><code>// Make the worlds via a Switch and a While Loop\nset (StellarSystemFolder, \"WorldsToMake\", 2)\nwhile (StellarSystemFolder.WorldsToMake&gt;0) {\n  switch (StellarSystemFolder.WorldsToMake) {\n    case (1) {\n      set (CelestialBodyBase, \"alias\", \"Luna\")\n      set (CelestialBodyBase, \"CanLand\", False)\n      set (CelestialBodyBase, \"CanMine\", False)\n      set (CelestialBodyBase, \"StarPlanet\", \"Planet\")\n      CloneObjectAndMove (CelestialBodyBase, StellarSystemC4)\n    }\n    case (2) {\n      set (CelestialBodyBase, \"alias\", \"Earth\")\n      set (CelestialBodyBase, \"CanLand\", True)\n      set (CelestialBodyBase, \"CanMine\", False)\n      set (CelestialBodyBase, \"StarPlanet\", \"Planet\")\n      CloneObjectAndMove (CelestialBodyBase, StellarSystemC4)\n    }\n  }\n  set (StellarSystemFolder, \"WorldsToMake\", StellarSystemFolder.WorldsToMake-1)\n}\n</code></pre>\n<p>But at times, I get Luna first and Earth second.</p>\n<p>Something similar happens when I clone FightingCharacterBase to make characters in a fight. I'd go 'make and clone Big Boss, then make and clone Small Enemy 1, make and clone Small Enemy 2' and I'll get them showing up in the order of \"Small Enemy 1, Small Enemy 2, Big Boss\" or something, with no apparent rhyme or reason (Different order every time). And it should be noted that even when the object clones APPEAR in the wrong order, they still have all the correct attributes that they should have - Small Enemy 1 never ever has Big Boss's HP.</p>\n<p>Does anyone know what's going on? I'm going insane trying to solve this.</p>\n\n",
      "PostDate": "2019-06-03T01:40:50.404223Z",
      "LastEditDate": "2019-06-13T19:42:25.7593573Z",
      "link": null
    },
    {
      "PostId": "4b3c8fbe-96b4-475e-844a-64ab025e3245",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I would guess the clones are created in the right order, but it is later that it gets messed up, possibly because of when they are added to the game world or possibly because of how Quest decides the order of stuff, though both seem unlikely to cause a problem.\r\n\r\nWhat happens if you print a message in the loop saying which clone is being done? Is it done in order?\r\n\r\nUnrelated to your issue, but...\r\n\r\nWhy are you doing it in a loop?\r\n\r\nYou should get the same with this:\r\n\r\n```\r\nset (CelestialBodyBase, \"alias\", \"Luna\")\r\nset (CelestialBodyBase, \"CanLand\", False)\r\nset (CelestialBodyBase, \"CanMine\", False)\r\nset (CelestialBodyBase, \"StarPlanet\", \"Planet\")\r\nCloneObjectAndMove (CelestialBodyBase, StellarSystemC4)\r\n\r\nset (CelestialBodyBase, \"alias\", \"Earth\")\r\nset (CelestialBodyBase, \"CanLand\", True)\r\nset (CelestialBodyBase, \"CanMine\", False)\r\nset (CelestialBodyBase, \"StarPlanet\", \"Planet\")\r\nCloneObjectAndMove (CelestialBodyBase, StellarSystemC4)\r\n```\r\n\r\nAlso, I would create the clone first, and set the attributes on it. Keep the prototype as the vanilla version, with all the default values, and just set the non-defaults for each clone. I am not sure which are defaults, but it might look like this:\r\n\r\n```\r\nclone = CloneObjectAndMove (CelestialBodyBase, StellarSystemC4)\r\nset (clone, \"alias\", \"Luna\")\r\n\r\nclone = CloneObjectAndMove (CelestialBodyBase, StellarSystemC4)\r\nset (clone, \"alias\", \"Earth\")\r\nset (clone, \"CanLand\", True)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I would guess the clones are created in the right order, but it is later that it gets messed up, possibly because of when they are added to the game world or possibly because of how Quest decides the order of stuff, though both seem unlikely to cause a problem.</p>\n<p>What happens if you print a message in the loop saying which clone is being done? Is it done in order?</p>\n<p>Unrelated to your issue, but...</p>\n<p>Why are you doing it in a loop?</p>\n<p>You should get the same with this:</p>\n<pre><code>set (CelestialBodyBase, \"alias\", \"Luna\")\nset (CelestialBodyBase, \"CanLand\", False)\nset (CelestialBodyBase, \"CanMine\", False)\nset (CelestialBodyBase, \"StarPlanet\", \"Planet\")\nCloneObjectAndMove (CelestialBodyBase, StellarSystemC4)\n\nset (CelestialBodyBase, \"alias\", \"Earth\")\nset (CelestialBodyBase, \"CanLand\", True)\nset (CelestialBodyBase, \"CanMine\", False)\nset (CelestialBodyBase, \"StarPlanet\", \"Planet\")\nCloneObjectAndMove (CelestialBodyBase, StellarSystemC4)\n</code></pre>\n<p>Also, I would create the clone first, and set the attributes on it. Keep the prototype as the vanilla version, with all the default values, and just set the non-defaults for each clone. I am not sure which are defaults, but it might look like this:</p>\n<pre><code>clone = CloneObjectAndMove (CelestialBodyBase, StellarSystemC4)\nset (clone, \"alias\", \"Luna\")\n\nclone = CloneObjectAndMove (CelestialBodyBase, StellarSystemC4)\nset (clone, \"alias\", \"Earth\")\nset (clone, \"CanLand\", True)\n</code></pre>\n\n",
      "PostDate": "2019-06-03T07:34:07.461243Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4ff98b70-c600-4ae3-96b9-91fa497732a1",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm doing it in a loop because there are some very complicated systems, and the Switch view is more compact; I wouldn't have to scroll through several pages to find the obscure alien planet I wanted to edit. I omitted a few Switch cases in the code above (And also reduced the WorldsToMake value) because they weren't relevant.\r\n\r\nAs for checking when it's moved... I put in some debug code and got a following event on the fight I'm testing.\r\n\r\nBoss has been made and moved\r\nSmall Bad 1 had been made and moved\r\nSmall Bad 2 has been made and moved\r\nSmall Bad 3 has been made and moved\r\n\r\nHowever, in the actual game the order I saw was:\r\n\r\nSmall Bad 3\r\nSmall Bad 2\r\nBig Boss\r\nSmall Bad 1\r\n\r\nThe code for making an enemy doesn't use a loop, but rather a function. Basically it says:\r\n```\r\nCreateMiscFighter(IDStringOfFighter=\"Big Boss\")\r\nCreateMiscFighter(IDStringOfFighter=\"Small Bad 1\")\r\n//The Function itself being:\r\nCreateMiscFighter{\r\nswitch (IDStringOfFighter){\r\ncase(\"Big  Boss\"){\r\nFighterBase.Health=999\r\n//etc\r\nCloneObjectAndMove(FighterBase, Fight)\r\n}\r\ncase(\"Small Bad 1\"){\r\nFighterBase.Health=99\r\n//etc\r\nCloneObjectAndMove(FighterBase, Fight)\r\n}\r\n}\r\n```\r\nAlso I was not aware you could set a variable equal to the CloneObjectAndMove function and get it to return the object itself! A bit late to go back and remake the code for a minor adjustment though. Unless that might be the problem?",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm doing it in a loop because there are some very complicated systems, and the Switch view is more compact; I wouldn't have to scroll through several pages to find the obscure alien planet I wanted to edit. I omitted a few Switch cases in the code above (And also reduced the WorldsToMake value) because they weren't relevant.</p>\n<p>As for checking when it's moved... I put in some debug code and got a following event on the fight I'm testing.</p>\n<p>Boss has been made and moved<br>\nSmall Bad 1 had been made and moved<br>\nSmall Bad 2 has been made and moved<br>\nSmall Bad 3 has been made and moved</p>\n<p>However, in the actual game the order I saw was:</p>\n<p>Small Bad 3<br>\nSmall Bad 2<br>\nBig Boss<br>\nSmall Bad 1</p>\n<p>The code for making an enemy doesn't use a loop, but rather a function. Basically it says:</p>\n<pre><code>CreateMiscFighter(IDStringOfFighter=\"Big Boss\")\nCreateMiscFighter(IDStringOfFighter=\"Small Bad 1\")\n//The Function itself being:\nCreateMiscFighter{\nswitch (IDStringOfFighter){\ncase(\"Big  Boss\"){\nFighterBase.Health=999\n//etc\nCloneObjectAndMove(FighterBase, Fight)\n}\ncase(\"Small Bad 1\"){\nFighterBase.Health=99\n//etc\nCloneObjectAndMove(FighterBase, Fight)\n}\n}\n</code></pre>\n<p>Also I was not aware you could set a variable equal to the CloneObjectAndMove function and get it to return the object itself! A bit late to go back and remake the code for a minor adjustment though. Unless that might be the problem?</p>\n\n",
      "PostDate": "2019-06-03T13:32:01.5711654Z",
      "LastEditDate": "2019-06-03T15:20:02.7629813Z",
      "link": null
    },
    {
      "PostId": "ed759de1-b71b-4736-a5ed-5a1a97b7948b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> However, in the actual game the order I saw\r\n\r\nWhere are you seeing this order?",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>However, in the actual game the order I saw</p>\n</blockquote>\n<p>Where are you seeing this order?</p>\n\n",
      "PostDate": "2019-06-03T22:14:52.7234063Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "38179367-32f6-4ad4-ab8b-e70d889142d0",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Two places. First is one the right side, under the 'Places and Objects' pane. (You know, similar to Inventory, Compass etc). You'd expect, from top down, to see BigBoss, SmallBad1, SmallBad2, SmallBad3. But you get a completely different - indeed, seemingly random - order.\r\n\r\nSecond is the room description; under 'After entering this room' I have code to print out the status of every active fighter. In psuedocode:\r\n```\r\nForEach Fighter in FilterByAttribute(FightRoom, FighterBase){\r\nprint(Fighter.alias)\r\nprint(Fighter.Health+\"/\"+Fighter.MaxHealth+\" Health\")\r\nprint(Fighter.Energy+\"/\"+Fighter.MaxEnergy+\" Energy\")\r\n```\r\nWhich gives you outputs like:\r\n```\r\nPlayerName\r\n50/50 Health\r\n25/50 Energy\r\nBig Boss\r\n999/999 Health\r\n999/999 Energy\r\nSmallBad1\r\n99/99 Health\r\n99/99 Energy\r\n```\r\nOr at least it should. What it ends up giving is something like:\r\n```\r\nPlayerName\r\n50/50 Health\r\n25/50 Energy\r\nSmallBad1\r\n99/99 Health\r\n99/99 Energy\r\nBig Boss\r\n999/999 Health\r\n999/999 Energy\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Two places. First is one the right side, under the 'Places and Objects' pane. (You know, similar to Inventory, Compass etc). You'd expect, from top down, to see BigBoss, SmallBad1, SmallBad2, SmallBad3. But you get a completely different - indeed, seemingly random - order.</p>\n<p>Second is the room description; under 'After entering this room' I have code to print out the status of every active fighter. In psuedocode:</p>\n<pre><code>ForEach Fighter in FilterByAttribute(FightRoom, FighterBase){\nprint(Fighter.alias)\nprint(Fighter.Health+\"/\"+Fighter.MaxHealth+\" Health\")\nprint(Fighter.Energy+\"/\"+Fighter.MaxEnergy+\" Energy\")\n</code></pre>\n<p>Which gives you outputs like:</p>\n<pre><code>PlayerName\n50/50 Health\n25/50 Energy\nBig Boss\n999/999 Health\n999/999 Energy\nSmallBad1\n99/99 Health\n99/99 Energy\n</code></pre>\n<p>Or at least it should. What it ends up giving is something like:</p>\n<pre><code>PlayerName\n50/50 Health\n25/50 Energy\nSmallBad1\n99/99 Health\n99/99 Energy\nBig Boss\n999/999 Health\n999/999 Energy\n</code></pre>\n\n",
      "PostDate": "2019-06-03T22:33:36.1381462Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f77f3f2a-919d-471f-9334-56474b953d6a",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Bumping because still unsolved.",
      "EditableFormat": "markdown",
      "HTML": "<p>Bumping because still unsolved.</p>\n\n",
      "PostDate": "2019-06-10T04:17:08.5332566Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "12420b22-cc25-4a81-bd39-6032b6d4e949",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> As for checking when it's moved... I put in some debug code and got a following event on the fight I'm testing.\r\n>\r\n> Boss has been made and moved\r\n> Small Bad 1 had been made and moved\r\n> Small Bad 2 has been made and moved\r\n> Small Bad 3 has been made and moved\r\n\r\nOkay, so the code is executing in the right order.\r\n\r\nIt might be useful to add this, after the loop (change room to the name of the room):\r\n```\r\nmsg(GetAllChildObjects(room))\r\n```\r\nI would guess you will see the order is wrong there, and that would indicate a strange timing issue between the script and the underlying code, where the underlying code is getting the objects out of order. I cannot see why that should be or how it can be solved.\r\n\r\nThe best work-around I can think of is to sort the objects before displaying them.\r\n\r\nIn `ScopeReachableNotHeldForRoom` change the last line to:\r\n\r\n```\r\nreturn (ObjectListSort(result, \"order\", \"alias\"))\r\n```\r\n\r\nIn `FormatObjectList` change the third line to:\r\n\r\n```\r\nlist = RemoveSceneryObjects(ObjectListSort(GetDirectChildren(parent), \"order\", \"alias\"))\r\n```\r\n\r\nThe set the \"order\" attribute of your boss to 1, and for minions set it to 2.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>As for checking when it's moved... I put in some debug code and got a following event on the fight I'm testing.</p>\n<p>Boss has been made and moved<br>\nSmall Bad 1 had been made and moved<br>\nSmall Bad 2 has been made and moved<br>\nSmall Bad 3 has been made and moved</p>\n</blockquote>\n<p>Okay, so the code is executing in the right order.</p>\n<p>It might be useful to add this, after the loop (change room to the name of the room):</p>\n<pre><code>msg(GetAllChildObjects(room))\n</code></pre>\n<p>I would guess you will see the order is wrong there, and that would indicate a strange timing issue between the script and the underlying code, where the underlying code is getting the objects out of order. I cannot see why that should be or how it can be solved.</p>\n<p>The best work-around I can think of is to sort the objects before displaying them.</p>\n<p>In <code>ScopeReachableNotHeldForRoom</code> change the last line to:</p>\n<pre><code>return (ObjectListSort(result, \"order\", \"alias\"))\n</code></pre>\n<p>In <code>FormatObjectList</code> change the third line to:</p>\n<pre><code>list = RemoveSceneryObjects(ObjectListSort(GetDirectChildren(parent), \"order\", \"alias\"))\n</code></pre>\n<p>The set the \"order\" attribute of your boss to 1, and for minions set it to 2.</p>\n\n",
      "PostDate": "2019-06-10T08:11:27.5475995Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "eb334277-c595-42aa-9453-ce79708a3b3f",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "msg(GetAllChildObjects(room)) gets me a similar issue as before; GetAllChildObjects says they're in the right order. I get\r\n```\r\nBigBoss, SmallBad1, SmallBad2, SmallBad3\r\n```\r\nThough it's all stuff like FightingObjectBase3, FightingObjectBase4, but I can use the debugger to look up their alias and that's what I get.\r\n\r\nBut then in the display it's\r\n```\r\nSmallBad3\r\nBigBoss\r\nSmallBad1\r\nSmallBad2\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>msg(GetAllChildObjects(room)) gets me a similar issue as before; GetAllChildObjects says they're in the right order. I get</p>\n<pre><code>BigBoss, SmallBad1, SmallBad2, SmallBad3\n</code></pre>\n<p>Though it's all stuff like FightingObjectBase3, FightingObjectBase4, but I can use the debugger to look up their alias and that's what I get.</p>\n<p>But then in the display it's</p>\n<pre><code>SmallBad3\nBigBoss\nSmallBad1\nSmallBad2\n</code></pre>\n\n",
      "PostDate": "2019-06-10T14:00:35.7645181Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6e0d17c6-0106-4937-b3be-14025a72c1fe",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That makes even less sense!\r\n\r\nThe workaround I suggested should still work, however.",
      "EditableFormat": "markdown",
      "HTML": "<p>That makes even less sense!</p>\n<p>The workaround I suggested should still work, however.</p>\n\n",
      "PostDate": "2019-06-10T14:21:18.260768Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b4028362-602c-43ca-b820-382f3ea7193b",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The work-around... sort of worked. It works for one of the two places where the display's wrong. In the Places and Objects panel it does indeed display things, first by the order attribute, then alphabetical order of their alias.\r\n\r\nThe second part, however, is the description I have printed out; the 'Player, 50/50 Health, 25/50 Energy' I gave example of earlier. It still gives them in the wrong order. I imagine the problem is in the 'FilterByAttribute' function, but I don't know what I'd replace it with. Relevant part of the code is:\r\n```\r\nforeach (Fighter, FilterByAttribute(GetDirectChildren(Fight), \"prototype\", FightingCharacterBase)) {\r\nmsg(Fighter.alias)\r\nmsg(\"Health: \"+Fighter.Health+\"/\"+Fighter.MaxHealth)\r\nmsg(\"Energy: \"+Fighter.Energy+\"/\"+Fighter.MaxEnergy)\r\n }\r\n```\r\nAnd it's called After Entering The Room.",
      "EditableFormat": "markdown",
      "HTML": "<p>The work-around... sort of worked. It works for one of the two places where the display's wrong. In the Places and Objects panel it does indeed display things, first by the order attribute, then alphabetical order of their alias.</p>\n<p>The second part, however, is the description I have printed out; the 'Player, 50/50 Health, 25/50 Energy' I gave example of earlier. It still gives them in the wrong order. I imagine the problem is in the 'FilterByAttribute' function, but I don't know what I'd replace it with. Relevant part of the code is:</p>\n<pre><code>foreach (Fighter, FilterByAttribute(GetDirectChildren(Fight), \"prototype\", FightingCharacterBase)) {\nmsg(Fighter.alias)\nmsg(\"Health: \"+Fighter.Health+\"/\"+Fighter.MaxHealth)\nmsg(\"Energy: \"+Fighter.Energy+\"/\"+Fighter.MaxEnergy)\n }\n</code></pre>\n<p>And it's called After Entering The Room.</p>\n\n",
      "PostDate": "2019-06-10T17:06:14.9546038Z",
      "LastEditDate": "2019-06-10T23:33:01.8994259Z",
      "link": null
    },
    {
      "PostId": "3d7bded1-695c-4eea-bd57-06beb51f25ff",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I figured it out! I replace 'GetDirectChildren(Fight)' with ObjectListSort(GetDirectChildren(Fight), \"order\", \"alias\"). Thanks everyone for the help!\r\n\r\nNow I have to - ugh - look for each and every GetDirectChildren in my game and replace it with the correct code. Joy.",
      "EditableFormat": "markdown",
      "HTML": "<p>I figured it out! I replace 'GetDirectChildren(Fight)' with ObjectListSort(GetDirectChildren(Fight), \"order\", \"alias\"). Thanks everyone for the help!</p>\n<p>Now I have to - ugh - look for each and every GetDirectChildren in my game and replace it with the correct code. Joy.</p>\n\n",
      "PostDate": "2019-06-13T19:42:07.0266337Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
