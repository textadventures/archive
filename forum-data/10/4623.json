{
  "Topic": {
    "TopicId": "4623",
    "ForumId": "10",
    "Title": "Combat in gamebooks",
    "LastUpdated": "2014-10-02T14:22:42+01:00",
    "ReplyCount": 19
  },
  "Posts": [
    {
      "PostId": "30311",
      "UserId": 0,
      "Username": "adrao",
      "UserAvatar": null,
      "UserGravatar": "ed34572a31feba854c8fd911793f6b1d",
      "EditableText": "Ok, so I can see that there are some threads for the text adventures on combat, but almost nothing on how to do such a thing for gamebooks. Any ideas on how a (easy/complicated) system can be implemented for a gamebook?",
      "EditableFormat": "bbcode",
      "HTML": "Ok, so I can see that there are some threads for the text adventures on combat, but almost nothing on how to do such a thing for gamebooks. Any ideas on how a (easy/complicated) system can be implemented for a gamebook?",
      "PostDate": "2014-09-29T07:37:38+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30316",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "If it was me, I would do it as a text adventure, then modify the interface to [i:3kbnhxw2]look[/i:3kbnhxw2] like a game book, by disabling the panes on the right and the command line. That way you have full access to Quests capabilities and to what others have already done.",
      "EditableFormat": "bbcode",
      "HTML": "If it was me, I would do it as a text adventure, then modify the interface to <span style=\"font-style:italic;\">look</span> like a game book, by disabling the panes on the right and the command line. That way you have full access to Quests capabilities and to what others have already done.",
      "PostDate": "2014-09-29T15:52:22+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30353",
      "UserId": 0,
      "Username": "MrFRZ",
      "UserAvatar": null,
      "UserGravatar": "621ebabf01126aacf744822a78666996",
      "EditableText": "I suggest this too. Gamebooks, I have found, are a lot simpler than the normal text adventure format. This can be a blessing or a curse, depending on what you want. The gamebook doesn't allow any good way for stat tracking, for example. Currently I'm working on a complex zombie survival game, that tracks your choices and stats like inventory, health, your group's approval of your choices, etc. Depending on these values, different dialogue will show, and characters will react different ways. If you were to do this in a gamebook, you would have to write a different page for almost every single action, compared to text adventures where doing this would be much simpler. So if the fight sequence is going to be a simple, punch, kick, tackle, or run, kind of thing, go with gamebooks. Gamebooks would also be the better choice if you don't want all the complications of coding. However if you want to incorporate timers and variables to recall a character's health etc. A text adventure that looks like a gamebook might be the better option.",
      "EditableFormat": "bbcode",
      "HTML": "I suggest this too. Gamebooks, I have found, are a lot simpler than the normal text adventure format. This can be a blessing or a curse, depending on what you want. The gamebook doesn't allow any good way for stat tracking, for example. Currently I'm working on a complex zombie survival game, that tracks your choices and stats like inventory, health, your group's approval of your choices, etc. Depending on these values, different dialogue will show, and characters will react different ways. If you were to do this in a gamebook, you would have to write a different page for almost every single action, compared to text adventures where doing this would be much simpler. So if the fight sequence is going to be a simple, punch, kick, tackle, or run, kind of thing, go with gamebooks. Gamebooks would also be the better choice if you don't want all the complications of coding. However if you want to incorporate timers and variables to recall a character's health etc. A text adventure that looks like a gamebook might be the better option.",
      "PostDate": "2014-10-01T00:12:23+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30362",
      "UserId": 0,
      "Username": "adrao",
      "UserAvatar": null,
      "UserGravatar": "ed34572a31feba854c8fd911793f6b1d",
      "EditableText": "Thanks for the advice, had I thought about it in the beginning I would have done that. However, after I discovered Quest software I (enthusiastically) started producing my first game straight away, and now I am something like 150 pages into it, so I would like to finish it somehow, and then might do as you say for my next game. \n\nBut actually I wanted something more complicated, that tracked some sort of statistic like strength, or just gave some damage to the character, like deduce one hit point from him, what do you think is the best way of doing so?",
      "EditableFormat": "bbcode",
      "HTML": "Thanks for the advice, had I thought about it in the beginning I would have done that. However, after I discovered Quest software I (enthusiastically) started producing my first game straight away, and now I am something like 150 pages into it, so I would like to finish it somehow, and then might do as you say for my next game. <br/><br/>But actually I wanted something more complicated, that tracked some sort of statistic like strength, or just gave some damage to the character, like deduce one hit point from him, what do you think is the best way of doing so?",
      "PostDate": "2014-10-01T06:04:17+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30370",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "You can set an attribute on the player (e.g. &quot;health&quot;) which is then changed via scripts on certain pages.",
      "EditableFormat": "bbcode",
      "HTML": "You can set an attribute on the player (e.g. &quot;health&quot;) which is then changed via scripts on certain pages.",
      "PostDate": "2014-10-01T07:47:03+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30376",
      "UserId": 0,
      "Username": "adrao",
      "UserAvatar": null,
      "UserGravatar": "ed34572a31feba854c8fd911793f6b1d",
      "EditableText": "Hi, thanks for that. Somehow I had figured that this was the way to go, though I am having some trouble with attributes (variables?) and counters. Basically, the use of attributes seems better, but they are somehow not being transferred between pages, unless I am doing something wrong? Also, is there any way to ask the program to print these attributes, variables and counters on the screen? \n\n(something like: &quot;You now have %%% hit points left&quot;)",
      "EditableFormat": "bbcode",
      "HTML": "Hi, thanks for that. Somehow I had figured that this was the way to go, though I am having some trouble with attributes (variables?) and counters. Basically, the use of attributes seems better, but they are somehow not being transferred between pages, unless I am doing something wrong? Also, is there any way to ask the program to print these attributes, variables and counters on the screen? <br/><br/>(something like: &quot;You now have %%% hit points left&quot;)",
      "PostDate": "2014-10-01T14:44:10+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30377",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "It would help to know what you're doing to know if it's wrong, but I can plod on anyway.\n\nBe sure when you set the attribute that you do something like \n\n[code:9k2uzcib]player&#46;health = 100[/code:9k2uzcib]\nThat sets an attribute &quot;health&quot; on the &quot;player&quot; object. If you just do &quot;health = 100&quot;, then you're creating a local, temporary variable that disappears once that invocation of the script is over.\n\nTo print the value, you'd simply do:\n\n&quot;You now have {player.health} hit points left&quot;",
      "EditableFormat": "bbcode",
      "HTML": "It would help to know what you're doing to know if it's wrong, but I can plod on anyway.<br/><br/>Be sure when you set the attribute that you do something like <br/><br/><pre><code>player&#46;health = 100</code></pre><br/>That sets an attribute &quot;health&quot; on the &quot;player&quot; object. If you just do &quot;health = 100&quot;, then you're creating a local, temporary variable that disappears once that invocation of the script is over.<br/><br/>To print the value, you'd simply do:<br/><br/>&quot;You now have {player.health} hit points left&quot;",
      "PostDate": "2014-10-01T16:22:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30378",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "to expound on Jay's post:\n\nIn~For Quest:\n\nVARIABLES:\nVariable: [b:31drrfhz]Variable[/b:31drrfhz] = Value_or_Expression\nAttribute: Object.[b:31drrfhz]Attribute[/b:31drrfhz] = value_or_Expression\n\nthe bolded ' Variable ' and ' Attribute ' are the same thing, they're just a string name~label, such as in math with the y: y = x + 1\n\nan example of it~this below:\n\nExamples:\nVariable: strength = 100\nAttribute: player.strength = 100\n\nthe only difference between an Attribute and a Variable, is whether it is attached to an Object (global, as it's 'saved' to an Object, and so long as that Object exists, it can then be 'loaded' within any script anywhere in the game), or not attached to an Object (local, you can only use it within the same script that you set it within).\n\nthough, with the GameBook quest version, you only got two Objects for use for creating~setting Attributes (global usage):\n\n'game' and 'player'\n\ngame.strength = 100\nplayer.strength = 100\n\n----------\n\nif you don't know how to script the basic math computation code expressions in quest:\n\nin the GUI~Editor:\n\nrun as script -&gt; add a script -&gt; variables -&gt; set a variable or attribute -&gt; (set it up: Object.Attribute = Value_or_Expression, or: Variable = Value_or_Expression)\n\nin code: Variable = Value_or_Expression, or: Object.Attribute = Value_or_Expression\n\nAddition:\n\nObject.Attribute = Object.Attribute + Value_or_Expression\n\nSubtraction:\n\nObject.Attribute = Object.Attribute - Value_or_Expression\n\nMultiplication:\n\nObject.Attribute = Object.Attribute * Value_or_Expression\n\nDivision:\n\nObject.Attribute = Object.Attribute / Value_or_Expression\n\n---------------\n\nquick conception of them, using addition as an example:\n\ninitial~old: player.strength = 0\n\nplayer.strength = player.strength + 1\n\nplayer.strength (new) = player.strength (old) + 1\nplayer.strength (new) = player.strength (0) + 1\nplayer.strength (new) = 0 + 1\nplayer.strength (new) = 1\n\nnew: player.strength = 1\n\nold: player.strength = 1\n\nplayer.strength (new) = player.strength (1) + 1\nplayer.strength (new) = 1 + 1\nplayer.strength (new) = 2\n\nnew: player.strength = 2\n\nold: player.strength = 2\n\netc etc etc\netc etc etc\n\n-------------------\n\nJay's using the in-text command, but if you want to use a message script&#058;\n\nGUI~Editor:\n\nrun as script -&gt; add a script -&gt; output -&gt; Print a message -&gt; [EXPRESSION] -&gt; see below\n\nin code (VARIABLE only for this example below):\n\nmsg (Object.Attribute)\n\n----\n\nso, for example:\n\nplayer.strength = 100\n\nmsg (&quot;Strength: &quot; + Object.Attribute)\nmsg (&quot;Strength: &quot; + player.strength)\n\noutputs~returns~displays~shows: Strength: 100\n\nthough, if you're new to programming, understanding how to do text+VARIABLES isn't easy, I've got another post explaining how to do this, let me know if you need help with this, and I'll find and copy the content here from that other post of mine that has it.",
      "EditableFormat": "bbcode",
      "HTML": "to expound on Jay's post:<br/><br/>In~For Quest:<br/><br/>VARIABLES:<br/>Variable: <span style=\"font-weight:bold;\">Variable</span> = Value_or_Expression<br/>Attribute: Object.<span style=\"font-weight:bold;\">Attribute</span> = value_or_Expression<br/><br/>the bolded ' Variable ' and ' Attribute ' are the same thing, they're just a string name~label, such as in math with the y: y = x + 1<br/><br/>an example of it~this below:<br/><br/>Examples:<br/>Variable: strength = 100<br/>Attribute: player.strength = 100<br/><br/>the only difference between an Attribute and a Variable, is whether it is attached to an Object (global, as it's 'saved' to an Object, and so long as that Object exists, it can then be 'loaded' within any script anywhere in the game), or not attached to an Object (local, you can only use it within the same script that you set it within).<br/><br/>though, with the GameBook quest version, you only got two Objects for use for creating~setting Attributes (global usage):<br/><br/>'game' and 'player'<br/><br/>game.strength = 100<br/>player.strength = 100<br/><br/>----------<br/><br/>if you don't know how to script the basic math computation code expressions in quest:<br/><br/>in the GUI~Editor:<br/><br/>run as script -&gt; add a script -&gt; variables -&gt; set a variable or attribute -&gt; (set it up: Object.Attribute = Value_or_Expression, or: Variable = Value_or_Expression)<br/><br/>in code: Variable = Value_or_Expression, or: Object.Attribute = Value_or_Expression<br/><br/>Addition:<br/><br/>Object.Attribute = Object.Attribute + Value_or_Expression<br/><br/>Subtraction:<br/><br/>Object.Attribute = Object.Attribute - Value_or_Expression<br/><br/>Multiplication:<br/><br/>Object.Attribute = Object.Attribute * Value_or_Expression<br/><br/>Division:<br/><br/>Object.Attribute = Object.Attribute / Value_or_Expression<br/><br/>---------------<br/><br/>quick conception of them, using addition as an example:<br/><br/>initial~old: player.strength = 0<br/><br/>player.strength = player.strength + 1<br/><br/>player.strength (new) = player.strength (old) + 1<br/>player.strength (new) = player.strength (0) + 1<br/>player.strength (new) = 0 + 1<br/>player.strength (new) = 1<br/><br/>new: player.strength = 1<br/><br/>old: player.strength = 1<br/><br/>player.strength (new) = player.strength (1) + 1<br/>player.strength (new) = 1 + 1<br/>player.strength (new) = 2<br/><br/>new: player.strength = 2<br/><br/>old: player.strength = 2<br/><br/>etc etc etc<br/>etc etc etc<br/><br/>-------------------<br/><br/>Jay's using the in-text command, but if you want to use a message script&#058;<br/><br/>GUI~Editor:<br/><br/>run as script -&gt; add a script -&gt; output -&gt; Print a message -&gt; [EXPRESSION] -&gt; see below<br/><br/>in code (VARIABLE only for this example below):<br/><br/>msg (Object.Attribute)<br/><br/>----<br/><br/>so, for example:<br/><br/>player.strength = 100<br/><br/>msg (&quot;Strength: &quot; + Object.Attribute)<br/>msg (&quot;Strength: &quot; + player.strength)<br/><br/>outputs~returns~displays~shows: Strength: 100<br/><br/>though, if you're new to programming, understanding how to do text+VARIABLES isn't easy, I've got another post explaining how to do this, let me know if you need help with this, and I'll find and copy the content here from that other post of mine that has it.",
      "PostDate": "2014-10-01T16:50:02+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30379",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "I haven't really thought about combat too much but an interesting idea I've just had regarding masking a text adventure as a game book is you could set flags for injuries and even put them on a timer for when they heal. So if you bruised a knuckle in a fight and then went into another fight quickly afterwards you could make it have some kind of impact. \n\nNo idea if it'd work btw, just thinking out loud. <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> I imagine it could become a lot of work though monitoring a lot of flags through many scenes. It could be limited to something a bit more rare to add flavour.",
      "EditableFormat": "bbcode",
      "HTML": "I haven't really thought about combat too much but an interesting idea I've just had regarding masking a text adventure as a game book is you could set flags for injuries and even put them on a timer for when they heal. So if you bruised a knuckle in a fight and then went into another fight quickly afterwards you could make it have some kind of impact. <br/><br/>No idea if it'd work btw, just thinking out loud. <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> I imagine it could become a lot of work though monitoring a lot of flags through many scenes. It could be limited to something a bit more rare to add flavour.",
      "PostDate": "2014-10-01T17:23:16+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30380",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "you can make a counter too (it subtracts down upon each new page), or just on the future page (as with a GameBook, you know the sequence+connnections of your pages), set yourself to have been healed.\n\n------\n\nbooleans become unweildry very fast, a better method is to use lists and~or dictionaries, as this allows you to group common things together (though using lists and~or dictionaries is a bit more complex that people new to programming will have trouble with learning how to use them), for example:\n\nStatus Effects (common in RPGs):\n\nplayer.dead=false\nplayer.unconscious=false\nplayer.asleep=false\nplayer.poisoned=false\nplayer.confused=false\nplayer.paralyzed=false\nplayer.petrified=false\nplayer.silent=false\nplayer.blinded=false\nplayer.crippled=false\nplayer.cursed=false\nplayer.stunned=false\netc etc etc\n\nvery unweildy...\n\nwhereas we can group all of these together using a list instead:\n\nplayer.status_effect_stringlist = NewStringList ()\n\nthen as we get or remove the status effects:\n\nlist add (player.status_effect_stringlist, &quot;poisoned&quot;)\nlist add (player.status_effect_stringlist, &quot;confused&quot;)\n\nwe then 'if' check what's in the list, doing if's 'then' actions if that thing is in the list:\n\nPlayer's 'battle_turn_function' Function (within a 'fight' Verb), for an example:\nif (ListContains (player.status_effect_stringlist, &quot;poisoned&quot;) = true) {\nplayer.hp = player.hp - 50\n} else if (ListContains (player.status_effect_stringlist, &quot;confused&quot;) = true) {\n// player randomly attacks a target: enemy or self or ally\n}\n\nlist remove (player.status_effect_stringlist, &quot;poisoned&quot;)\n\netc etc etc\n\nmuch better than unwieldy booleans... hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\n---------\n\nanother example: locomotion\n\nplayer.walking=true\nplayer.running=false\nplayer.flying=false\nplayer.swimming=false\nplayer.jumping=false\nplayer.falling=false\nplayer.floating=false\nplayer.gliding=false\nplayer.crawling=false\nplayer.climbing=false\nplayer.sitting=false\nplayer.standing=false\nplayer.lying_down=false\nplayer.bipedal=true\nplayer.quadripedal=false\netc etc etc\n\nor, 'activities', too:\n\nreading, studying, training, sleeping, resting, casting, defending, talking, playing, working, partying, eating, drinking, etc etc etc\n\nor, 'stealth', too:\n\nsneaking,stealing,lockpicking,planting,etc etc\n\nor, 'diplomacy', too:\n\ntalking, intimidating~threatening, bartering, insulting, complimenting, flirting, seducing, bribing, etc etc etc\n\nand etc etc etc such groupings",
      "EditableFormat": "bbcode",
      "HTML": "you can make a counter too (it subtracts down upon each new page), or just on the future page (as with a GameBook, you know the sequence+connnections of your pages), set yourself to have been healed.<br/><br/>------<br/><br/>booleans become unweildry very fast, a better method is to use lists and~or dictionaries, as this allows you to group common things together (though using lists and~or dictionaries is a bit more complex that people new to programming will have trouble with learning how to use them), for example:<br/><br/>Status Effects (common in RPGs):<br/><br/>player.dead=false<br/>player.unconscious=false<br/>player.asleep=false<br/>player.poisoned=false<br/>player.confused=false<br/>player.paralyzed=false<br/>player.petrified=false<br/>player.silent=false<br/>player.blinded=false<br/>player.crippled=false<br/>player.cursed=false<br/>player.stunned=false<br/>etc etc etc<br/><br/>very unweildy...<br/><br/>whereas we can group all of these together using a list instead:<br/><br/>player.status_effect_stringlist = NewStringList ()<br/><br/>then as we get or remove the status effects:<br/><br/>list add (player.status_effect_stringlist, &quot;poisoned&quot;)<br/>list add (player.status_effect_stringlist, &quot;confused&quot;)<br/><br/>we then 'if' check what's in the list, doing if's 'then' actions if that thing is in the list:<br/><br/>Player's 'battle_turn_function' Function (within a 'fight' Verb), for an example:<br/>if (ListContains (player.status_effect_stringlist, &quot;poisoned&quot;) = true) {<br/>player.hp = player.hp - 50<br/>} else if (ListContains (player.status_effect_stringlist, &quot;confused&quot;) = true) {<br/>// player randomly attacks a target: enemy or self or ally<br/>}<br/><br/>list remove (player.status_effect_stringlist, &quot;poisoned&quot;)<br/><br/>etc etc etc<br/><br/>much better than unwieldy booleans... hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>---------<br/><br/>another example: locomotion<br/><br/>player.walking=true<br/>player.running=false<br/>player.flying=false<br/>player.swimming=false<br/>player.jumping=false<br/>player.falling=false<br/>player.floating=false<br/>player.gliding=false<br/>player.crawling=false<br/>player.climbing=false<br/>player.sitting=false<br/>player.standing=false<br/>player.lying_down=false<br/>player.bipedal=true<br/>player.quadripedal=false<br/>etc etc etc<br/><br/>or, 'activities', too:<br/><br/>reading, studying, training, sleeping, resting, casting, defending, talking, playing, working, partying, eating, drinking, etc etc etc<br/><br/>or, 'stealth', too:<br/><br/>sneaking,stealing,lockpicking,planting,etc etc<br/><br/>or, 'diplomacy', too:<br/><br/>talking, intimidating~threatening, bartering, insulting, complimenting, flirting, seducing, bribing, etc etc etc<br/><br/>and etc etc etc such groupings",
      "PostDate": "2014-10-01T17:38:56+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30381",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "What about dice? That's what Livingstone/Jackson relied on in their books. I guess the player could roll their own and input the score (and cheat like we all did back in the day <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> ) or there could be an in game one.",
      "EditableFormat": "bbcode",
      "HTML": "What about dice? That's what Livingstone/Jackson relied on in their books. I guess the player could roll their own and input the score (and cheat like we all did back in the day <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> ) or there could be an in game one.",
      "PostDate": "2014-10-01T18:01:08+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30384",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "if you're refering to how to get~determine damage in combat:\n\nhere's some links:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/\">http://docs.textadventures.co.uk/quest/functions/</a><!-- m -->\n\nyes, quest has the D&amp;D dice function for you:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/diceroll.html\">http://docs.textadventures.co.uk/quest/ ... eroll.html</a><!-- m -->\n\nand there's also a random function too:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/getrandomint.html\">http://docs.textadventures.co.uk/quest/ ... omint.html</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/getrandomdouble.html\">http://docs.textadventures.co.uk/quest/ ... ouble.html</a><!-- m -->\n\nand there's a percentage function too:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/randomchance.html\">http://docs.textadventures.co.uk/quest/ ... hance.html</a><!-- m -->\n\nand, you can simply write in your own expression too:\n\norc.hp = (orc.hp) - (critical_hit_function (player) * player.weapon_damage) - (player.weapon_damage * (player.strength / 100)) + (orc.armor_class) + (orc.armor_class * (orc.endurance / 100))\n\n&lt;function name=&quot;critical_hit_function&quot; parameters=&quot;object_x&quot; type=&quot;int&quot;&gt;\nif (RandomChance (object_x.luck) = true) {\n  value=2\n} else {\n  value=1\n}\nreturn (value)\n&lt;/function&gt;\n\nhehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\n----------------\n\nA.I.~enemy basic programming:\n\nan 'orc' Object's 'enemy_battle_turn_function' within the 'orc' Object's 'fight' Verb:\n\nvalue_x = GetRandomInt (1,4)\nswitch (value_x) {\ncase (1) {\n// physical~weapon~normal attack scripting\n}\ncase (2) {\n// magic scripting\n}\ncase (3) {\n// stealing scripting\n}\ncase (4) {\n// escape scripting\n}\n}",
      "EditableFormat": "bbcode",
      "HTML": "if you're refering to how to get~determine damage in combat:<br/><br/>here's some links:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/\">http://docs.textadventures.co.uk/quest/functions/</a><!-- m --><br/><br/>yes, quest has the D&amp;D dice function for you:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/diceroll.html\">http://docs.textadventures.co.uk/quest/ ... eroll.html</a><!-- m --><br/><br/>and there's also a random function too:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/getrandomint.html\">http://docs.textadventures.co.uk/quest/ ... omint.html</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/getrandomdouble.html\">http://docs.textadventures.co.uk/quest/ ... ouble.html</a><!-- m --><br/><br/>and there's a percentage function too:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/randomchance.html\">http://docs.textadventures.co.uk/quest/ ... hance.html</a><!-- m --><br/><br/>and, you can simply write in your own expression too:<br/><br/>orc.hp = (orc.hp) - (critical_hit_function (player) * player.weapon_damage) - (player.weapon_damage * (player.strength / 100)) + (orc.armor_class) + (orc.armor_class * (orc.endurance / 100))<br/><br/>&lt;function name=&quot;critical_hit_function&quot; parameters=&quot;object_x&quot; type=&quot;int&quot;&gt;<br/>if (RandomChance (object_x.luck) = true) {<br/>  value=2<br/>} else {<br/>  value=1<br/>}<br/>return (value)<br/>&lt;/function&gt;<br/><br/>hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>----------------<br/><br/>A.I.~enemy basic programming:<br/><br/>an 'orc' Object's 'enemy_battle_turn_function' within the 'orc' Object's 'fight' Verb:<br/><br/>value_x = GetRandomInt (1,4)<br/>switch (value_x) {<br/>case (1) {<br/>// physical~weapon~normal attack scripting<br/>}<br/>case (2) {<br/>// magic scripting<br/>}<br/>case (3) {<br/>// stealing scripting<br/>}<br/>case (4) {<br/>// escape scripting<br/>}<br/>",
      "PostDate": "2014-10-01T18:24:59+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30387",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "Code confuses my mind. I wish it didn't. \n\nIt's a bit like Motorsport. The driver can be the best in the world and suggest tyres and fuel levels without worrying about when he'll be called into the pits and what the crew will do. \n\nThe crew can refuel, change wheels/tyres without worrying about the decisions made on an engineering level.\n\nThe engineers can design cars to any specification. They don't need to worry about cost as the financiers will decide what design fits budgets and sales forecasts.\n\nIt's hard to be someone who fills every role.",
      "EditableFormat": "bbcode",
      "HTML": "Code confuses my mind. I wish it didn't. <br/><br/>It's a bit like Motorsport. The driver can be the best in the world and suggest tyres and fuel levels without worrying about when he'll be called into the pits and what the crew will do. <br/><br/>The crew can refuel, change wheels/tyres without worrying about the decisions made on an engineering level.<br/><br/>The engineers can design cars to any specification. They don't need to worry about cost as the financiers will decide what design fits budgets and sales forecasts.<br/><br/>It's hard to be someone who fills every role.",
      "PostDate": "2014-10-01T18:57:16+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30390",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "The cool thing about software is that, while you don't have to know how the &quot;tyres&quot; are made to use them, it's also a heck of lot easier for just about anyone to make their own if they want to!  <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\n&quot;We are the music makers, and we are the dreamers of dreams.&quot;",
      "EditableFormat": "bbcode",
      "HTML": "The cool thing about software is that, while you don't have to know how the &quot;tyres&quot; are made to use them, it's also a heck of lot easier for just about anyone to make their own if they want to!  <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>&quot;We are the music makers, and we are the dreamers of dreams.&quot;",
      "PostDate": "2014-10-01T19:21:11+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30393",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "[quote=&quot;silver&quot;:2u1k2g54]It's hard to be someone who fills every role.[/quote:2u1k2g54]\n\nGame Creation:\n\n1. programming (implementing all of the below)\n2. Game Design (create the game world itself and everything that your game is~will be)\n3. Authorship (writing: story, plot, dialogue, etc)\n4. Media (pictures, sounds, vids, etc)\n5. Game Mechanics (all your equations~formulas for your game stats~attributes)\n6. Game Balance (having all your game mechanics and etc working together, so there's no OP-ness or impossible difficulty or too easy difficulty, etc...)\n7. Game Play (easy to use UI or controls, and etc)\n8. probably some more aspects too...\n\nthere's a good reason Game Making companies now have a team of 100 (and it still takes them years to make a game), whereas in the early days of game making... it was solo... only a single person made the entire game!\n\nthose early game making guys must have been amazing... having the ability to do all aspects involved in game making, lol.\n\nI don't think there's anything more complex than game making... except maybe crafting an entire government... though game making can also involve this and more... lol...",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>silver wrote:</cite>It's hard to be someone who fills every role.</blockquote><br/><br/>Game Creation:<br/><br/>1. programming (implementing all of the below)<br/>2. Game Design (create the game world itself and everything that your game is~will be)<br/>3. Authorship (writing: story, plot, dialogue, etc)<br/>4. Media (pictures, sounds, vids, etc)<br/>5. Game Mechanics (all your equations~formulas for your game stats~attributes)<br/>6. Game Balance (having all your game mechanics and etc working together, so there's no OP-ness or impossible difficulty or too easy difficulty, etc...)<br/>7. Game Play (easy to use UI or controls, and etc)<br/>8. probably some more aspects too...<br/><br/>there's a good reason Game Making companies now have a team of 100 (and it still takes them years to make a game), whereas in the early days of game making... it was solo... only a single person made the entire game!<br/><br/>those early game making guys must have been amazing... having the ability to do all aspects involved in game making, lol.<br/><br/>I don't think there's anything more complex than game making... except maybe crafting an entire government... though game making can also involve this and more... lol...",
      "PostDate": "2014-10-01T19:46:11+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30394",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Those days are back again now, thankfully, with the current Indie game movement. Perhaps it's a backlash against the &quot;game studio as movie studio&quot; model, but we're back to seeing small teams (some even solo) creating games and getting them out there and actually making money. Which I think is cool, because I'd love to work on games...",
      "EditableFormat": "bbcode",
      "HTML": "Those days are back again now, thankfully, with the current Indie game movement. Perhaps it's a backlash against the &quot;game studio as movie studio&quot; model, but we're back to seeing small teams (some even solo) creating games and getting them out there and actually making money. Which I think is cool, because I'd love to work on games...",
      "PostDate": "2014-10-01T19:49:27+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30395",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "and there's great sites like this one, and its free (YES!), allowing us to learn to program, and make games, and even sell them commercially, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\n(though... I'm VERY VERY VERY VERY far off from making money off of great games of mine... laughs... argh... HK cries... lol)\n\n(real life has made it difficult to work on trying to learn more programming, and as probably seen in my posts, I'm forgetting how to do a lot of stuff in quest now too... grr)",
      "EditableFormat": "bbcode",
      "HTML": "and there's great sites like this one, and its free (YES!), allowing us to learn to program, and make games, and even sell them commercially, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>(though... I'm VERY VERY VERY VERY far off from making money off of great games of mine... laughs... argh... HK cries... lol)<br/><br/>(real life has made it difficult to work on trying to learn more programming, and as probably seen in my posts, I'm forgetting how to do a lot of stuff in quest now too... grr)",
      "PostDate": "2014-10-01T19:55:46+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30402",
      "UserId": 0,
      "Username": "adrao",
      "UserAvatar": null,
      "UserGravatar": "ed34572a31feba854c8fd911793f6b1d",
      "EditableText": "guys, thanks a lot for the answers received, its cleared a lot of the confusion in my mind, I have written extensive programs in FORTRAN (yes, prehistoric, I know, but somehow I had no choice at the time as everything in my discipline still runs on it...) but the points you make help a lot! Ok, will try to do something using your suggestions!",
      "EditableFormat": "bbcode",
      "HTML": "guys, thanks a lot for the answers received, its cleared a lot of the confusion in my mind, I have written extensive programs in FORTRAN (yes, prehistoric, I know, but somehow I had no choice at the time as everything in my discipline still runs on it...) but the points you make help a lot! Ok, will try to do something using your suggestions!",
      "PostDate": "2014-10-02T06:09:36+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30403",
      "UserId": 0,
      "Username": "Darkweaver",
      "UserAvatar": null,
      "UserGravatar": "a5f77be804f1e4b511caa208a7e91117",
      "EditableText": "[quote=&quot;HegemonKhan&quot;:2lw16miy][quote=&quot;silver&quot;:2lw16miy]It's hard to be someone who fills every role.[/quote:2lw16miy]\n\nGame Creation:\n\n1. programming (implementing all of the below)\n2. Game Design (create the game world itself and everything that your game is~will be)\n3. Authorship (writing: story, plot, dialogue, etc)\n4. Media (pictures, sounds, vids, etc)\n5. Game Mechanics (all your equations~formulas for your game stats~attributes)\n6. Game Balance (having all your game mechanics and etc working together, so there's no OP-ness or impossible difficulty or too easy difficulty, etc...)\n7. Game Play (easy to use UI or controls, and etc)\n8. probably some more aspects too...\n\nthere's a good reason Game Making companies now have a team of 100 (and it still takes them years to make a game), whereas in the early days of game making... it was solo... only a single person made the entire game!\n\nthose early game making guys must have been amazing... having the ability to do all aspects involved in game making, lol.\n\nI don't think there's anything more complex than game making... except maybe crafting an entire government... though game making can also involve this and more... lol...[/quote:2lw16miy]\nThis is so, so true.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>HegemonKhan wrote:</cite><blockquote><p><b>&quot;silver&quot;</b></p><p>It's hard to be someone who fills every role.</blockquote><br/><br/>Game Creation:<br/><br/>1. programming (implementing all of the below)<br/>2. Game Design (create the game world itself and everything that your game is~will be)<br/>3. Authorship (writing: story, plot, dialogue, etc)<br/>4. Media (pictures, sounds, vids, etc)<br/>5. Game Mechanics (all your equations~formulas for your game stats~attributes)<br/>6. Game Balance (having all your game mechanics and etc working together, so there's no OP-ness or impossible difficulty or too easy difficulty, etc...)<br/>7. Game Play (easy to use UI or controls, and etc)<br/>8. probably some more aspects too...<br/><br/>there's a good reason Game Making companies now have a team of 100 (and it still takes them years to make a game), whereas in the early days of game making... it was solo... only a single person made the entire game!<br/><br/>those early game making guys must have been amazing... having the ability to do all aspects involved in game making, lol.<br/><br/>I don't think there's anything more complex than game making... except maybe crafting an entire government... though game making can also involve this and more... lol...</p></blockquote><br/>This is so, so true.",
      "PostDate": "2014-10-02T06:25:08+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "30409",
      "UserId": 0,
      "Username": "adrao",
      "UserAvatar": null,
      "UserGravatar": "ed34572a31feba854c8fd911793f6b1d",
      "EditableText": "Just tried it, works beautifully actually, still shocked by how much its possible to do in Quest without writing a line of code (Ok, its not going to be the most amazing combat system in the world this way, but still exactly what I wanted!). Thanks guys for the help!",
      "EditableFormat": "bbcode",
      "HTML": "Just tried it, works beautifully actually, still shocked by how much its possible to do in Quest without writing a line of code (Ok, its not going to be the most amazing combat system in the world this way, but still exactly what I wanted!). Thanks guys for the help!",
      "PostDate": "2014-10-02T14:22:42+01:00",
      "LastEditDate": null
    }
  ]
}
