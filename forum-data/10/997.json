{
  "Topic": {
    "TopicId": "997",
    "ForumId": "10",
    "Title": "Properties and actions",
    "LastUpdated": "2006-03-14T15:03:17+00:00",
    "ReplyCount": 8
  },
  "Posts": [
    {
      "PostId": "7451",
      "UserId": 0,
      "Username": "ramtha",
      "UserAvatar": null,
      "UserGravatar": "c19cfa838fae3f800fd5859417259a81",
      "EditableText": "I'm quite confused when it come to the actions and properties of objects. \nit seems no matter how many times i read the manual, i cant seem to get it. so if any anyone would be so kind as to explain how they work, and how to make them... I would appreciate it alot. I think it will come in hady.",
      "EditableFormat": "bbcode",
      "HTML": "I'm quite confused when it come to the actions and properties of objects. <br/>it seems no matter how many times i read the manual, i cant seem to get it. so if any anyone would be so kind as to explain how they work, and how to make them... I would appreciate it alot. I think it will come in hady.",
      "PostDate": "2006-03-08T00:12:59+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "7455",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "To use them, you need a &quot;do object action&quot;, although I'm not sure how to get to it in QDK.\nProperties can be set quite easily - not sure [i:29oujmgt]how[/i:29oujmgt] easily through QDK.\n\nObject actions are like functions/procedures. Properties are just like variables - but properties are for objects or rooms instead.\nThe good thing about them is they can be tied into 'types', so can properties - but that's another issue I think.\n\nCalling an object action through code is:\n\ndoaction &lt;#object#;#action#&gt;\n\nFor instance, say I had an object action called &quot;jump&quot;.. And I set up a command called &quot;poke #thingy#&quot; .\nAs the script I'd have:\ncommand &lt;poke #thingy#&gt; doaction &lt;#thingy#; jump&gt;\n\nNow, to create the action - in QDK you'd have a tab at the top, and in one of those you can select actions/types (I don't have a copy of Quest installed here for reference).\n\nBefore I continue, can you give me some idea of how you are doing this - and how far you understand this?",
      "EditableFormat": "bbcode",
      "HTML": "To use them, you need a &quot;do object action&quot;, although I'm not sure how to get to it in QDK.<br/>Properties can be set quite easily - not sure <span style=\"font-style:italic;\">how</span> easily through QDK.<br/><br/>Object actions are like functions/procedures. Properties are just like variables - but properties are for objects or rooms instead.<br/>The good thing about them is they can be tied into 'types', so can properties - but that's another issue I think.<br/><br/>Calling an object action through code is:<br/><br/>doaction &lt;#object#;#action#&gt;<br/><br/>For instance, say I had an object action called &quot;jump&quot;.. And I set up a command called &quot;poke #thingy#&quot; .<br/>As the script I'd have:<br/>command &lt;poke #thingy#&gt; doaction &lt;#thingy#; jump&gt;<br/><br/>Now, to create the action - in QDK you'd have a tab at the top, and in one of those you can select actions/types (I don't have a copy of Quest installed here for reference).<br/><br/>Before I continue, can you give me some idea of how you are doing this - and how far you understand this?",
      "PostDate": "2006-03-08T11:46:20+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "7461",
      "UserId": 0,
      "Username": "ramtha",
      "UserAvatar": null,
      "UserGravatar": "c19cfa838fae3f800fd5859417259a81",
      "EditableText": "Well, I think I figured out the actions. But I was wondering if there was any specfic purpose to the Types, and how do the properties work. \nWhile I'm at it I suppose I could also ask how a function works.",
      "EditableFormat": "bbcode",
      "HTML": "Well, I think I figured out the actions. But I was wondering if there was any specfic purpose to the Types, and how do the properties work. <br/>While I'm at it I suppose I could also ask how a function works.",
      "PostDate": "2006-03-11T02:47:39+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "7462",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "Well, functions are basically blocks of code that runs when you call them.\nThey can take parameters if you want - but the most important part is that they RETURN a value.\n\nFor instance let's say you have a function that [b:392n17k2]takes[/b:392n17k2] (we usually say 'takes' in reference to a parameter - because we give this value over to the function when we [i:392n17k2]call[/i:392n17k2] it.) one parameter and add's 2 then multiplies this value by 3..\n\nThis function would be called &quot;myfunction&quot;, and we don't care how it works right now.\n\nLet's start off by CALLING a function..\nWhere you would normally just go through bit by bit in code - you can (in ASL) do the following:\nset string &lt;fail_or_succ; $myfunction(5)$&gt;\n\nThis would [b:392n17k2]pass[/b:392n17k2] 5 to the function 'myfunction'. Myfunction would change this value - and would return &quot;21&quot; into the string.\nSo now, the string is set to &quot;21&quot;.\n\nYou can do alot more with functions - but returning a value is the critical part.\n\nTypes.\nThese are useful if you want different 'types' of objects that have the same properties/actions/etc..\nLet's say you want a pumpkin type - now this type would have the following (for example);\nproperty &lt;colour=orange; shape=ovoid; taste=bad&gt;\nand the actions could be as follows:\naction &lt;eat&gt; msg &lt;you look at the #object#.. You think wiser than to eat this!&gt;\naction &lt;throw&gt; msg &lt;you throw the #object# at #person#..&gt;\n\nNow, if you have 5 objects, instead of typing the exact same thing out for those 5 objects - just put the above into a 'type', and then add the type tag into the object:\ndefine object &lt;object1&gt;\ntype &lt;pumpkin&gt;\nend define\n\nThis could give it an alias name, description, anything you like!\nAnd the best bit is it saves you LOADS of typing!\nNow - if you want something to change - say one object to have the property of &quot;taste=good&quot;, then you just set it in the object properties (as I think it over-rides type definitions... at least it should).\n\nDo you get that?",
      "EditableFormat": "bbcode",
      "HTML": "Well, functions are basically blocks of code that runs when you call them.<br/>They can take parameters if you want - but the most important part is that they RETURN a value.<br/><br/>For instance let's say you have a function that <span style=\"font-weight:bold;\">takes</span> (we usually say 'takes' in reference to a parameter - because we give this value over to the function when we <span style=\"font-style:italic;\">call</span> it.) one parameter and add's 2 then multiplies this value by 3..<br/><br/>This function would be called &quot;myfunction&quot;, and we don't care how it works right now.<br/><br/>Let's start off by CALLING a function..<br/>Where you would normally just go through bit by bit in code - you can (in ASL) do the following:<br/>set string &lt;fail_or_succ; $myfunction(5)$&gt;<br/><br/>This would <span style=\"font-weight:bold;\">pass</span> 5 to the function 'myfunction'. Myfunction would change this value - and would return &quot;21&quot; into the string.<br/>So now, the string is set to &quot;21&quot;.<br/><br/>You can do alot more with functions - but returning a value is the critical part.<br/><br/>Types.<br/>These are useful if you want different 'types' of objects that have the same properties/actions/etc..<br/>Let's say you want a pumpkin type - now this type would have the following (for example);<br/>property &lt;colour=orange; shape=ovoid; taste=bad&gt;<br/>and the actions could be as follows:<br/>action &lt;eat&gt; msg &lt;you look at the #object#.. You think wiser than to eat this!&gt;<br/>action &lt;throw&gt; msg &lt;you throw the #object# at #person#..&gt;<br/><br/>Now, if you have 5 objects, instead of typing the exact same thing out for those 5 objects - just put the above into a 'type', and then add the type tag into the object:<br/>define object &lt;object1&gt;<br/>type &lt;pumpkin&gt;<br/>end define<br/><br/>This could give it an alias name, description, anything you like!<br/>And the best bit is it saves you LOADS of typing!<br/>Now - if you want something to change - say one object to have the property of &quot;taste=good&quot;, then you just set it in the object properties (as I think it over-rides type definitions... at least it should).<br/><br/>Do you get that?",
      "PostDate": "2006-03-11T22:51:18+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "7463",
      "UserId": 0,
      "Username": "ramtha",
      "UserAvatar": null,
      "UserGravatar": "c19cfa838fae3f800fd5859417259a81",
      "EditableText": "There are just two things i dont understand, When you were talking about the functions, you mentioned mutiplying. do you know if you can have status variables mutiply to make another one. Becuse i thought you couldnt mutiply.\nAnd how do the properties work?\nI mean there is a name and value, but whats the value for?",
      "EditableFormat": "bbcode",
      "HTML": "There are just two things i dont understand, When you were talking about the functions, you mentioned mutiplying. do you know if you can have status variables mutiply to make another one. Becuse i thought you couldnt mutiply.<br/>And how do the properties work?<br/>I mean there is a name and value, but whats the value for?",
      "PostDate": "2006-03-12T00:18:14+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "7464",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "The value is exactly that - a value. <!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: -->\n\nSo if we have an object called &quot;gold&quot;, we can have a property called &quot;amount&quot;, and have the property value set to how much gold is held - say &quot;5&quot;.\n\nOr, we could have the object called &quot;sword&quot;, and give it the property &quot;power&quot; with the value of &quot;10&quot;... Which can effect combat/story events.\n\nYou can easily multiply any number - just set a variable.\nTo add two numbers together you do:\n3 + 5\nTo subtract:\n3 - 5\nTo multiply:\n3 * 5     (Remember, x is a letter - not a mathmatical symbol.. In maths it's usually not even written - unless you're pre-algebra)\nTo devide:\n3 / 5     (Something like a fraction - which is exactly a devide just not worked out yet to an exact value - usually for aesthetic reasons, or the fact that it creates a number like pi - with no end.)\n\nProperties work like variables:\nFor instance, setting the property &lt;gold; amount=20&gt; will give the property a value of 20.\nNow, to use that - you can use the following:\nmsg &lt;Hello - you have #gold:amount# pieces of gold!&gt;\n\nThe powerful part comes from if you have also potions and scrolls etc, all using &quot;amount&quot;.\nYou can get it to print out the following in about 3 or 4 lines - which you can also use for a million other objects:\n&quot;You have 5 gold pieces,&quot;\n&quot;You have 10 yellow scarfs,&quot;\n&quot;You have 15 tin cans,&quot;\n&quot;You have 3 oranges,&quot;\n&quot;You have 1 bottle of water,&quot;\n&quot;You have 11 hats,&quot;",
      "EditableFormat": "bbcode",
      "HTML": "The value is exactly that - a value. <!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: --><br/><br/>So if we have an object called &quot;gold&quot;, we can have a property called &quot;amount&quot;, and have the property value set to how much gold is held - say &quot;5&quot;.<br/><br/>Or, we could have the object called &quot;sword&quot;, and give it the property &quot;power&quot; with the value of &quot;10&quot;... Which can effect combat/story events.<br/><br/>You can easily multiply any number - just set a variable.<br/>To add two numbers together you do:<br/>3 + 5<br/>To subtract:<br/>3 - 5<br/>To multiply:<br/>3 * 5     (Remember, x is a letter - not a mathmatical symbol.. In maths it's usually not even written - unless you're pre-algebra)<br/>To devide:<br/>3 / 5     (Something like a fraction - which is exactly a devide just not worked out yet to an exact value - usually for aesthetic reasons, or the fact that it creates a number like pi - with no end.)<br/><br/>Properties work like variables:<br/>For instance, setting the property &lt;gold; amount=20&gt; will give the property a value of 20.<br/>Now, to use that - you can use the following:<br/>msg &lt;Hello - you have #gold:amount# pieces of gold!&gt;<br/><br/>The powerful part comes from if you have also potions and scrolls etc, all using &quot;amount&quot;.<br/>You can get it to print out the following in about 3 or 4 lines - which you can also use for a million other objects:<br/>&quot;You have 5 gold pieces,&quot;<br/>&quot;You have 10 yellow scarfs,&quot;<br/>&quot;You have 15 tin cans,&quot;<br/>&quot;You have 3 oranges,&quot;<br/>&quot;You have 1 bottle of water,&quot;<br/>&quot;You have 11 hats,&quot;",
      "PostDate": "2006-03-12T15:54:12+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "7465",
      "UserId": 0,
      "Username": "ramtha",
      "UserAvatar": null,
      "UserGravatar": "c19cfa838fae3f800fd5859417259a81",
      "EditableText": "Yeah.... I tried that. What I was hoping the outcome for the muliplcation would be a number. But i just end up getting the equation i put out. \nWhat i'm trying to do is have say your stats like strength and defence multiplied together to get what your heath would be. \nSay the Strength is 2 and defence is 3 I would have %Strength%*%defence%\nBut in the game it would show up as 2*3 and not 5. \nis there anyway to fix that?",
      "EditableFormat": "bbcode",
      "HTML": "Yeah.... I tried that. What I was hoping the outcome for the muliplcation would be a number. But i just end up getting the equation i put out. <br/>What i'm trying to do is have say your stats like strength and defence multiplied together to get what your heath would be. <br/>Say the Strength is 2 and defence is 3 I would have %Strength%*%defence%<br/>But in the game it would show up as 2*3 and not 5. <br/>is there anyway to fix that?",
      "PostDate": "2006-03-12T19:20:54+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "7466",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "Yes.\nset numeric &lt;health; %strength% * %defense%&gt;\nmsg &lt;Your health is %health%.&gt;",
      "EditableFormat": "bbcode",
      "HTML": "Yes.<br/>set numeric &lt;health; %strength% * %defense%&gt;<br/>msg &lt;Your health is %health%.&gt;",
      "PostDate": "2006-03-14T12:54:45+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "7467",
      "UserId": 0,
      "Username": "ramtha",
      "UserAvatar": null,
      "UserGravatar": "c19cfa838fae3f800fd5859417259a81",
      "EditableText": "one more question, do they need to be in the GT LT brakets",
      "EditableFormat": "bbcode",
      "HTML": "one more question, do they need to be in the GT LT brakets",
      "PostDate": "2006-03-14T15:03:17+00:00",
      "LastEditDate": null
    }
  ]
}
