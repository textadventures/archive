{
  "Topic": {
    "TopicId": "s8wmlchauuudcvgo5-5mdq",
    "ForumId": "10",
    "Title": "Displaying player attributes outside of the status window.",
    "LastUpdated": "2018-07-29T11:57:16.9874664Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "eec01b2c-badb-4b26-9c91-2e0123f5cd5c",
      "UserId": 341201,
      "Username": "Raist",
      "AvatarUrl": "https://i.imgur.com/0UTKrlab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "KV has been working with me for quite some time on this project and the end is almost near. That being said, I found a bug and I have not been able to work around this time. Important background information: I'm using the latest version of questJS from KV  and uploading to my own webserver.\r\n\r\nThe last hurdle was getting the shop working with money and a workaround was figured out for that. The next step is displaying stat changes on the player (wearing weapons/armor provides bonuses to player attributes). The default wearable system does not work with the way my libraries and games are set up (random properties are added to items for every new game, so adding a list of bonuses to the generic versions of those items will not work as the list will not be the same from game to game). Wearing an item DOES change the proper player attributes, so that works. I am using the code for the custom status pane to display resistances when player's look at themselves, but NOT in a custom status pane (because that is not supported by questJS), just printed into the game window. There are 5 resists: Physical, Fire, Cold, Poison & Energy. These values already exist on the player and are changed when you wear items that have those values as bonuses. When you look at yourself, you see a display of the 5 resists with the correct numeric values from the player. After you wear an item with a resist bonus and then look at yourself again, the stat display is not changing, but the values are.\r\n\r\nThis starts the build:\r\n\r\n```\r\nphys = phys()\r\nfire = fire()\r\ncold = cold()\r\npois = pois()\r\nener = ener()\r\ndo (player, \"changedphysical\")\r\ndo (player, \"changedfire\")\r\ndo (player, \"changedcold\")\r\ndo (player, \"changedpois\")\r\ndo (player, \"changedener\")\r\ns = \"\"\r\nreturn ((s))\r\n```\r\n\r\nEach one of the functions for a resist looks similar to this:\r\n```\r\nmsg (\"<td><span id=\\\"phys-indicator\\\" style=\\\"width:0px;background-color:pink;color:#000;\\\">phys </span></td>\")\r\nplayer.changedphysical => {\r\n  JS.eval (\"$('#phys-indicator').css('width', '\" + (player.physical) + \"px');\")\r\n}\r\nreturn (\"phys\")\r\n```\r\n\r\n1.) The above WORKS, halfway. The values are changing, but are not changing the display. I suppose this could be an issue with multiple html elements sharing the same name (since the display is redrawn every time in a web browser the window just scrolls up), but none of the elements are changing. At the very least, the first element of that name should get changed.\r\n\r\n2.) The other snag here is that after wearing an item with a resist bonus, the value that is being changed gets printed twice. So if you have a Physical bonus on an item, you would see it displayed twice, with the same value though (so it is being updated, but printing twice).\r\n\r\nJust a note: Every time I have attempted to send a message, I receive an error. I don't mind posting in the forums, but it seems that I am the only one using questJS. Since it really isn't supported here, I feel more as if I'm just clogging up the forums and confusing others that are just using Quest and not being all complicated and screwing with Quest/questJS inner workings.\r\n\r\nYour guidance is appreciated, thanks.\r\nRaist",
      "EditableFormat": "markdown",
      "HTML": "<p>KV has been working with me for quite some time on this project and the end is almost near. That being said, I found a bug and I have not been able to work around this time. Important background information: I'm using the latest version of questJS from KV  and uploading to my own webserver.</p>\n<p>The last hurdle was getting the shop working with money and a workaround was figured out for that. The next step is displaying stat changes on the player (wearing weapons/armor provides bonuses to player attributes). The default wearable system does not work with the way my libraries and games are set up (random properties are added to items for every new game, so adding a list of bonuses to the generic versions of those items will not work as the list will not be the same from game to game). Wearing an item DOES change the proper player attributes, so that works. I am using the code for the custom status pane to display resistances when player's look at themselves, but NOT in a custom status pane (because that is not supported by questJS), just printed into the game window. There are 5 resists: Physical, Fire, Cold, Poison &amp; Energy. These values already exist on the player and are changed when you wear items that have those values as bonuses. When you look at yourself, you see a display of the 5 resists with the correct numeric values from the player. After you wear an item with a resist bonus and then look at yourself again, the stat display is not changing, but the values are.</p>\n<p>This starts the build:</p>\n<pre><code>phys = phys()\nfire = fire()\ncold = cold()\npois = pois()\nener = ener()\ndo (player, \"changedphysical\")\ndo (player, \"changedfire\")\ndo (player, \"changedcold\")\ndo (player, \"changedpois\")\ndo (player, \"changedener\")\ns = \"\"\nreturn ((s))\n</code></pre>\n<p>Each one of the functions for a resist looks similar to this:</p>\n<pre><code>msg (\"&lt;td&gt;&lt;span id=\\\"phys-indicator\\\" style=\\\"width:0px;background-color:pink;color:#000;\\\"&gt;phys &lt;/span&gt;&lt;/td&gt;\")\nplayer.changedphysical =&gt; {\n  JS.eval (\"$('#phys-indicator').css('width', '\" + (player.physical) + \"px');\")\n}\nreturn (\"phys\")\n</code></pre>\n<p>1.) The above WORKS, halfway. The values are changing, but are not changing the display. I suppose this could be an issue with multiple html elements sharing the same name (since the display is redrawn every time in a web browser the window just scrolls up), but none of the elements are changing. At the very least, the first element of that name should get changed.</p>\n<p>2.) The other snag here is that after wearing an item with a resist bonus, the value that is being changed gets printed twice. So if you have a Physical bonus on an item, you would see it displayed twice, with the same value though (so it is being updated, but printing twice).</p>\n<p>Just a note: Every time I have attempted to send a message, I receive an error. I don't mind posting in the forums, but it seems that I am the only one using questJS. Since it really isn't supported here, I feel more as if I'm just clogging up the forums and confusing others that are just using Quest and not being all complicated and screwing with Quest/questJS inner workings.</p>\n<p>Your guidance is appreciated, thanks.<br>\nRaist</p>\n\n",
      "PostDate": "2018-07-29T11:57:16.9874664Z",
      "LastEditDate": "2018-07-30T11:12:43.4406746Z",
      "link": null
    },
    {
      "PostId": "c0f37043-f846-4523-b39d-f05700a6f942",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "KV, mrangel or anyone...!\r\nBump",
      "EditableFormat": "markdown",
      "HTML": "<p>KV, mrangel or anyone...!<br>\nBump</p>\n\n",
      "PostDate": "2018-07-31T01:49:59.3664857Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c55930f2-4dd6-4356-9d83-260311c7aaea",
      "UserId": 341201,
      "Username": "Raist",
      "AvatarUrl": "https://i.imgur.com/0UTKrlab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Update:\r\nThis almost works now. I basically had to tell the script to change ALL html elements with that name. In the original code there was a # for the ID, but I have changed that to a . for the Class. Here is the working code:\r\n\r\nresists_table function\r\n```\r\n<function name=\"resists_table\"><![CDATA[\r\nphys = phy ()\r\nfire = fir ()\r\ncold = col ()\r\npois = poi ()\r\nener = ene ()\r\ndo (player, \"changedphysical\")\r\ndo (player, \"changedfire\")\r\ndo (player, \"changedcold\")\r\ndo (player, \"changedpois\")\r\ndo (player, \"changedener\")\r\nplayer.changedphysical => {\r\n  JS.eval (\"$('.phys-indicator').css('padding-right', '\" + (player.physical - 7) + \"px');\")\r\n}\r\nplayer.changedfire => {\r\n  JS.eval (\"$('.fire-indicator').css('padding-right', '\" + (player.fire - 7) + \"px');\")\r\n}\r\nplayer.changedcold => {\r\n  JS.eval (\"$('.cold-indicator').css('padding-right', '\" + (player.cold - 7) + \"px');\")\r\n}\r\nplayer.changedpois => {\r\n  JS.eval (\"$('.pois-indicator').css('padding-right', '\" + (player.poison - 7) + \"px');\")\r\n}\r\nplayer.changedener => {\r\n  JS.eval (\"$('.ener-indicator').css('padding-right', '\" + (player.energy - 7) + \"px');\")\r\n}\r\n  ]]></function>\r\n```\r\n\r\nHere is the altered example code for each resist:\r\n```\r\n<function name=\"phy\" type=\"stringlist\"><![CDATA[\r\n    player.changedphysical => {\r\n  msg (\"<td><span class=\\\"phys-indicator\\\" style=\\\"background-color:pink;color:#000;font-size:smaller;\\\">p</span></td>\")\r\n  JS.eval (\"$('.phys-indicator').css('padding-right', '\" + (player.physical - 7) + \"px');\")\r\n}\r\nphys = NewStringList()\r\nreturn (phys)\r\n  ]]></function>\r\n```\r\n(subtracting 7 from the attribute, covers the space that the letter takes up, which is 7px. Otherwise the letters will push the padding out more.)\r\n\r\nIf you call the function resists_table, each resist is updated and printed. For my purposes, I am calling the function when a player looks at themselves and every time they wear/remove a wearable object. This works within Quest on the desktop version as well if you are just playing the game. After exporting with questJS and uploading to my webserver, the display does not update at all when the function runs. I cannot figure out why.\r\n\r\nRaist\r\n\r\nUPDATE:\r\nI figured out why the display was not updating. It was related to where each element function was located inside the game.js file. Quest/questJS added those functions after the function that calls the resists_table. Once I put them BEFORE the resists_table function, the problem was solved. All available renderings of the resists_table are updated on the entire page. If you're creating a browser-based game, you will want to try and clear the screen from time to time. Otherwise updating each css element might begin to slow things down if a lot changing is happening.\r\n\r\nRaist",
      "EditableFormat": "markdown",
      "HTML": "<p>Update:<br>\nThis almost works now. I basically had to tell the script to change ALL html elements with that name. In the original code there was a # for the ID, but I have changed that to a . for the Class. Here is the working code:</p>\n<p>resists_table function</p>\n<pre><code>&lt;function name=\"resists_table\"&gt;&lt;![CDATA[\nphys = phy ()\nfire = fir ()\ncold = col ()\npois = poi ()\nener = ene ()\ndo (player, \"changedphysical\")\ndo (player, \"changedfire\")\ndo (player, \"changedcold\")\ndo (player, \"changedpois\")\ndo (player, \"changedener\")\nplayer.changedphysical =&gt; {\n  JS.eval (\"$('.phys-indicator').css('padding-right', '\" + (player.physical - 7) + \"px');\")\n}\nplayer.changedfire =&gt; {\n  JS.eval (\"$('.fire-indicator').css('padding-right', '\" + (player.fire - 7) + \"px');\")\n}\nplayer.changedcold =&gt; {\n  JS.eval (\"$('.cold-indicator').css('padding-right', '\" + (player.cold - 7) + \"px');\")\n}\nplayer.changedpois =&gt; {\n  JS.eval (\"$('.pois-indicator').css('padding-right', '\" + (player.poison - 7) + \"px');\")\n}\nplayer.changedener =&gt; {\n  JS.eval (\"$('.ener-indicator').css('padding-right', '\" + (player.energy - 7) + \"px');\")\n}\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<p>Here is the altered example code for each resist:</p>\n<pre><code>&lt;function name=\"phy\" type=\"stringlist\"&gt;&lt;![CDATA[\n    player.changedphysical =&gt; {\n  msg (\"&lt;td&gt;&lt;span class=\\\"phys-indicator\\\" style=\\\"background-color:pink;color:#000;font-size:smaller;\\\"&gt;p&lt;/span&gt;&lt;/td&gt;\")\n  JS.eval (\"$('.phys-indicator').css('padding-right', '\" + (player.physical - 7) + \"px');\")\n}\nphys = NewStringList()\nreturn (phys)\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<p>(subtracting 7 from the attribute, covers the space that the letter takes up, which is 7px. Otherwise the letters will push the padding out more.)</p>\n<p>If you call the function resists_table, each resist is updated and printed. For my purposes, I am calling the function when a player looks at themselves and every time they wear/remove a wearable object. This works within Quest on the desktop version as well if you are just playing the game. After exporting with questJS and uploading to my webserver, the display does not update at all when the function runs. I cannot figure out why.</p>\n<p>Raist</p>\n<p>UPDATE:<br>\nI figured out why the display was not updating. It was related to where each element function was located inside the game.js file. Quest/questJS added those functions after the function that calls the resists_table. Once I put them BEFORE the resists_table function, the problem was solved. All available renderings of the resists_table are updated on the entire page. If you're creating a browser-based game, you will want to try and clear the screen from time to time. Otherwise updating each css element might begin to slow things down if a lot changing is happening.</p>\n<p>Raist</p>\n\n",
      "PostDate": "2018-08-01T15:11:06.3749371Z",
      "LastEditDate": "2018-08-04T11:49:21.2678922Z",
      "link": null
    }
  ]
}
