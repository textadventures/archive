{
  "Topic": {
    "TopicId": "6269",
    "ForumId": "10",
    "Title": "Look and Global Turn [SOLVED]",
    "LastUpdated": "2016-04-28T21:46:44+01:00",
    "ReplyCount": 19
  },
  "Posts": [
    {
      "PostId": "42495",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "I was wondering, how do you skip a global turn? And how do you remove &quot;look&quot; from being a turn?\n\nI know when you create a turn-script and have a specific thing advancing like ...\n\nSet this.blahscript = this.blahscript + 1 \nif (this.blahscript=10)\nthen blah blah. \n\nThe reason I ask is simply because I would like for enemies not to immediately attack a player but to give them a turn to read things and spot the enemy and even &quot;look&quot; at their surroundings or the enemies without having the crap kicked out of them <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->",
      "EditableFormat": "bbcode",
      "HTML": "I was wondering, how do you skip a global turn? And how do you remove &quot;look&quot; from being a turn?<br/><br/>I know when you create a turn-script and have a specific thing advancing like ...<br/><br/>Set this.blahscript = this.blahscript + 1 <br/>if (this.blahscript=10)<br/>then blah blah. <br/><br/>The reason I ask is simply because I would like for enemies not to immediately attack a player but to give them a turn to read things and spot the enemy and even &quot;look&quot; at their surroundings or the enemies without having the crap kicked out of them <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->",
      "PostDate": "2016-04-26T18:46:29+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42496",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "Brace yourself for next level stupidity...\n\nHere's what initially came to mind.  Go to the built-in commands and add a script to the functions that you don't want to count as a turn (like 'look', 'lookat').  Something like this.turnscript - 1 to counter the built-in +1?   <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> Or call a function that adds + 0 to this.turnscript in those commands?  Would that override the built-in?\n\nThere are a LOT of assumptions in that thought...  I don't know enough about the built-in functions to manipulate the code behind them.  Just enough to screw up the whole damned game...\n\nIs it in here somewhere?\nSetTurnTimeOut (I think was the name)\n[code:1i2rhsy7]this&#46;turncount = this&#46;turncount + 1\nif (this&#46;turncount &gt;= this&#46;triggerturncount) {\n  this&#46;enabled = false\n  invoke (this&#46;timeoutscript)\n  destroy (this&#46;name)\n}[/code:1i2rhsy7]\n\nI realize I should never volunteer personal ideas I have about code... <!-- s:roll: --><img src=\"{SMILIES_PATH}/icon_rolleyes.gif\" alt=\":roll:\" title=\"Rolling Eyes\" /><!-- s:roll: -->",
      "EditableFormat": "bbcode",
      "HTML": "Brace yourself for next level stupidity...<br/><br/>Here's what initially came to mind.  Go to the built-in commands and add a script to the functions that you don't want to count as a turn (like 'look', 'lookat').  Something like this.turnscript - 1 to counter the built-in +1?   <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> Or call a function that adds + 0 to this.turnscript in those commands?  Would that override the built-in?<br/><br/>There are a LOT of assumptions in that thought...  I don't know enough about the built-in functions to manipulate the code behind them.  Just enough to screw up the whole damned game...<br/><br/>Is it in here somewhere?<br/>SetTurnTimeOut (I think was the name)<br/><pre><code>this&#46;turncount = this&#46;turncount + 1<br/>if (this&#46;turncount &gt;= this&#46;triggerturncount) {<br/>  this&#46;enabled = false<br/>  invoke (this&#46;timeoutscript)<br/>  destroy (this&#46;name)<br/>}</code></pre><br/><br/>I realize I should never volunteer personal ideas I have about code... <!-- s:roll: --><img src=\"{SMILIES_PATH}/icon_rolleyes.gif\" alt=\":roll:\" title=\"Rolling Eyes\" /><!-- s:roll: -->",
      "PostDate": "2016-04-26T19:10:12+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42497",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "see Pixie's post on using 'notarealturn' in the link below:\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=5267&amp;p=36333&amp;hilit=notarealturn#p36326\">viewtopic.php?f=10&amp;t=5267&amp;p=36333&amp;hilit=notarealturn#p36326</a><!-- l -->\n\nessentially conceptually, all you do is to create a Turnscript that will be your unversal-game-master Turnscript, have a script that checks a custom (your own created) Boolean Attribute (Pixie's 'notarealturn' custom Boolean Attribute), so you can control/prevent scripts from occuring. Have all the scripts that use up a game turn be the scripts for when that 'if boolean attribute is true', and all the scripts that don't use up a turn be the scripts for the 'else'. Thus you can use the Boolean Attribute as a flag for when a turn occurs and when it doesn't. Also you create your own 'turn' Integer Attribute, so you can control it, whereas you'd otherwise need to delve into the built-in code and how it handles its &quot;internal turns&quot;... better not do this, unless you know programming well, lol. Create your own turns, much easier:\n\n[code:3armoqgp]&lt;game name=&quot;xxx&quot;&gt;\n  &lt;attr name=&quot;game_advancement&quot; type=&quot;boolean&quot;&gt;true&lt;/attr&gt;\n  &lt;attr name=&quot;game_turn&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;turnscript name=&quot;global_turnscript&quot;&gt;\n  &lt;enabled /&gt;\n  &lt;script&gt;\n    if (game&#46;game_advancement) { // if (game&#46;game_advancement = true)\n      // all your scripts that advance the game turn count\n      game&#46;game_turn = game&#46;game_turn + 1\n    } else { // if (game&#46;game_advancement = false)\n      // all your scripts that don't advance the game turn count\n    }\n  &lt;/script&gt;\n&lt;/turnscript&gt;[/code:3armoqgp]\n\n// and for every action, you'll need to &quot;set&quot; (game.game_advancement = true) or &quot;clear&quot; (game.game_advancement = false), as needed\n\n// and/or you can also &quot;outsource&quot; the control of the scripts and the amount that the 'game.game-turn' increases by, from the global turnscript to the individual actions, so you have greater control. This way, you can have each individual action advance the turns by 5 or 10 or 1 or whatever",
      "EditableFormat": "bbcode",
      "HTML": "see Pixie's post on using 'notarealturn' in the link below:<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=5267&amp;p=36333&amp;hilit=notarealturn#p36326\">viewtopic.php?f=10&amp;t=5267&amp;p=36333&amp;hilit=notarealturn#p36326</a><!-- l --><br/><br/>essentially conceptually, all you do is to create a Turnscript that will be your unversal-game-master Turnscript, have a script that checks a custom (your own created) Boolean Attribute (Pixie's 'notarealturn' custom Boolean Attribute), so you can control/prevent scripts from occuring. Have all the scripts that use up a game turn be the scripts for when that 'if boolean attribute is true', and all the scripts that don't use up a turn be the scripts for the 'else'. Thus you can use the Boolean Attribute as a flag for when a turn occurs and when it doesn't. Also you create your own 'turn' Integer Attribute, so you can control it, whereas you'd otherwise need to delve into the built-in code and how it handles its &quot;internal turns&quot;... better not do this, unless you know programming well, lol. Create your own turns, much easier:<br/><br/><pre><code>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;attr name=&quot;game_advancement&quot; type=&quot;boolean&quot;&gt;true&lt;/attr&gt;<br/>  &lt;attr name=&quot;game_turn&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>&lt;/game&gt;<br/><br/>&lt;turnscript name=&quot;global_turnscript&quot;&gt;<br/>  &lt;enabled /&gt;<br/>  &lt;script&gt;<br/>    if (game&#46;game_advancement) { // if (game&#46;game_advancement = true)<br/>      // all your scripts that advance the game turn count<br/>      game&#46;game_turn = game&#46;game_turn + 1<br/>    } else { // if (game&#46;game_advancement = false)<br/>      // all your scripts that don't advance the game turn count<br/>    }<br/>  &lt;/script&gt;<br/>&lt;/turnscript&gt;</code></pre><br/><br/>// and for every action, you'll need to &quot;set&quot; (game.game_advancement = true) or &quot;clear&quot; (game.game_advancement = false), as needed<br/><br/>// and/or you can also &quot;outsource&quot; the control of the scripts and the amount that the 'game.game-turn' increases by, from the global turnscript to the individual actions, so you have greater control. This way, you can have each individual action advance the turns by 5 or 10 or 1 or whatever",
      "PostDate": "2016-04-26T19:23:11+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42498",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "See... That makes more sense!",
      "EditableFormat": "bbcode",
      "HTML": "See... That makes more sense!",
      "PostDate": "2016-04-26T21:05:43+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42499",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Pixie's code shows how to do it more correctly/functionally, &quot;outsourcing&quot; the handling to the individual actions (which is much better than my code example of trying to have those actions inside of the Turnscript - as actions inside of the turnscript would have to be universal/turn-constantly occuring actions for when the boolean is set to true, and the same universality/non-turn constantly occuring for the non-turn actions when the boolean is set to false), by having the global/universal/master Turnscript, only handling the increase of the turn count or not.\n\n------\n\nfor example (expanded the design, combining Pixie's &quot;outsourcing&quot; and my global actions and added in an extra functionality too):\n\nmy global action is the checking script to end the game if the player is dead: player.current_life &lt;= 0, as this is a global action it's in the global/master turnscript\n\nwhereas, the &quot;info&quot; and &quot;sleep&quot; and &quot;rest&quot; and &quot;nap&quot; Commands, are individual actions, and thus their scripts aren't inside the global/master turnscript, as we want to uniquely specify how many turns they use up (or if they don't use up a turn at all) and when they occur (we don't want them to be always occuring, lol. Whereas we do want to be always checking the player's life to see if he/she is dead, ending the game if he/she is dead).\n\nadded extra functionality:\nnotice how I'm using the 'previous_game_turn' to determine/handle whether to increase the game turn by 1 or not. This is because you don't want to &quot;sleep&quot; (+8 hrs) and then also have it advance another turn too (+1), for a total of +9 hrs, when you want sleeping to just be +8 hrs. Also, as +1 game turn (1 turn = 1 hr) is our smallest/default value (in this example game we don't want to use minutes / fractional-decimal hours), we're putting it in the turnscript, so that we only need to do this once, as we don't want to be doing/writing/coding it in multiple times - in every individual action that only increases the game turn by 1, lol. \n\n(HK Edit: I just finished editing in all the small mistakes I've had priorly to now, so refresh and look at the current and corrected code of mine below)\n\n[code:wzvgdgje]&lt;game name=&quot;xxx&quot;&gt;\n  &lt;attr name=&quot;game_advancement&quot; type=&quot;boolean&quot;&gt;true&lt;/attr&gt;\n  &lt;attr name=&quot;current_game_turn&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  &lt;attr name=&quot;previous_game_turn&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;command name=&quot;info_command&quot;&gt;\n  &lt;pattern&gt;info&lt;/pattern&gt;\n  &lt;script&gt;\n    game&#46;game_advancement = false // this prevents a turn from occuring (see the turnscript code for why/how)\n    ClearScreen\n    msg (&quot;Name&#58; &quot; + player&#46;alias)\n    // etc etc etc\n    wait {\n      ClearScreen\n    }\n    // the turnscript will change the game&#46;game_advancement's value back to 'true', so game turns/advancement will occur again, so we don't need to do it here, as the turnscript does it for us&#46;\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;command name=&quot;sleep_command&quot;&gt;\n  &lt;pattern&gt;sleep&lt;/pattern&gt;\n  &lt;script&gt;\n    game&#46;previous_game_turn = game&#46;current_game_turn\n    msg (&quot;You sleep for 8 hrs&#46;&quot;) // 1 hr = 1 turn\n    game&#46;current_game_turn = game&#46;current_game_turn + 8\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;command name=&quot;rest_command&quot;&gt;\n  &lt;pattern&gt;rest&lt;/pattern&gt;\n  &lt;script&gt;\n    game&#46;previous_game_turn = game&#46;current_game_turn\n    msg (&quot;You rest for 4 hrs&#46;&quot;) // 1 hr = 1 turn\n    game&#46;current_game_turn = game&#46;current_game_turn + 4\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;command name=&quot;nap_command&quot;&gt;\n  &lt;pattern&gt;nap&lt;/pattern&gt;\n  &lt;script&gt;\n    game&#46;previous_game_turn = game&#46;current_game_turn\n    msg (&quot;You nap for an hour&#46;&quot;) // 1 hr = 1 turn\n    // the turnscript will advance the turn by 1, so you don't need to do it here\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;turnscript name=&quot;global_turnscript&quot;&gt;\n  &lt;enabled /&gt;\n  &lt;script&gt;\n    if (player&#46;current_life &lt;= 0) {\n      msg (&quot;You're dead or you've died&#46;&quot;)\n      msg (&quot;GAME OVER&quot;)\n      finish\n    } else if (game&#46;game_advancement and game&#46;current_game_turn = game&#46;previous_game_turn) {\n      game&#46;current_game_turn = game&#46;current_game_turn + 1\n    } else if (not game&#46;game_advancement) {\n      game&#46;game_advancement = true\n    }\n  &lt;/script&gt;\n&lt;/turnscript&gt;[/code:wzvgdgje]\n\n// a global Turnscript is for handling the &quot;game state&quot;, for example:\n\nif you're dead, the game should end\nif the game is set to advance, and the individual action hasn't increased the turns, then increase the turns by 1\nif the game is not set to advance, set it to advance\netc etc etc universal/global &quot;game state&quot; handling stuff (some other examples: weather/day-night/seasons/climate/etc effects, game events, npc movement, whatever else you can think of)",
      "EditableFormat": "bbcode",
      "HTML": "Pixie's code shows how to do it more correctly/functionally, &quot;outsourcing&quot; the handling to the individual actions (which is much better than my code example of trying to have those actions inside of the Turnscript - as actions inside of the turnscript would have to be universal/turn-constantly occuring actions for when the boolean is set to true, and the same universality/non-turn constantly occuring for the non-turn actions when the boolean is set to false), by having the global/universal/master Turnscript, only handling the increase of the turn count or not.<br/><br/>------<br/><br/>for example (expanded the design, combining Pixie's &quot;outsourcing&quot; and my global actions and added in an extra functionality too):<br/><br/>my global action is the checking script to end the game if the player is dead: player.current_life &lt;= 0, as this is a global action it's in the global/master turnscript<br/><br/>whereas, the &quot;info&quot; and &quot;sleep&quot; and &quot;rest&quot; and &quot;nap&quot; Commands, are individual actions, and thus their scripts aren't inside the global/master turnscript, as we want to uniquely specify how many turns they use up (or if they don't use up a turn at all) and when they occur (we don't want them to be always occuring, lol. Whereas we do want to be always checking the player's life to see if he/she is dead, ending the game if he/she is dead).<br/><br/>added extra functionality:<br/>notice how I'm using the 'previous_game_turn' to determine/handle whether to increase the game turn by 1 or not. This is because you don't want to &quot;sleep&quot; (+8 hrs) and then also have it advance another turn too (+1), for a total of +9 hrs, when you want sleeping to just be +8 hrs. Also, as +1 game turn (1 turn = 1 hr) is our smallest/default value (in this example game we don't want to use minutes / fractional-decimal hours), we're putting it in the turnscript, so that we only need to do this once, as we don't want to be doing/writing/coding it in multiple times - in every individual action that only increases the game turn by 1, lol. <br/><br/>(HK Edit: I just finished editing in all the small mistakes I've had priorly to now, so refresh and look at the current and corrected code of mine below)<br/><br/><pre><code>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;attr name=&quot;game_advancement&quot; type=&quot;boolean&quot;&gt;true&lt;/attr&gt;<br/>  &lt;attr name=&quot;current_game_turn&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  &lt;attr name=&quot;previous_game_turn&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>&lt;/game&gt;<br/><br/>&lt;command name=&quot;info_command&quot;&gt;<br/>  &lt;pattern&gt;info&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    game&#46;game_advancement = false // this prevents a turn from occuring (see the turnscript code for why/how)<br/>    ClearScreen<br/>    msg (&quot;Name&#58; &quot; + player&#46;alias)<br/>    // etc etc etc<br/>    wait {<br/>      ClearScreen<br/>    }<br/>    // the turnscript will change the game&#46;game_advancement's value back to 'true', so game turns/advancement will occur again, so we don't need to do it here, as the turnscript does it for us&#46;<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;command name=&quot;sleep_command&quot;&gt;<br/>  &lt;pattern&gt;sleep&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    game&#46;previous_game_turn = game&#46;current_game_turn<br/>    msg (&quot;You sleep for 8 hrs&#46;&quot;) // 1 hr = 1 turn<br/>    game&#46;current_game_turn = game&#46;current_game_turn + 8<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;command name=&quot;rest_command&quot;&gt;<br/>  &lt;pattern&gt;rest&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    game&#46;previous_game_turn = game&#46;current_game_turn<br/>    msg (&quot;You rest for 4 hrs&#46;&quot;) // 1 hr = 1 turn<br/>    game&#46;current_game_turn = game&#46;current_game_turn + 4<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;command name=&quot;nap_command&quot;&gt;<br/>  &lt;pattern&gt;nap&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    game&#46;previous_game_turn = game&#46;current_game_turn<br/>    msg (&quot;You nap for an hour&#46;&quot;) // 1 hr = 1 turn<br/>    // the turnscript will advance the turn by 1, so you don't need to do it here<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;turnscript name=&quot;global_turnscript&quot;&gt;<br/>  &lt;enabled /&gt;<br/>  &lt;script&gt;<br/>    if (player&#46;current_life &lt;= 0) {<br/>      msg (&quot;You're dead or you've died&#46;&quot;)<br/>      msg (&quot;GAME OVER&quot;)<br/>      finish<br/>    } else if (game&#46;game_advancement and game&#46;current_game_turn = game&#46;previous_game_turn) {<br/>      game&#46;current_game_turn = game&#46;current_game_turn + 1<br/>    } else if (not game&#46;game_advancement) {<br/>      game&#46;game_advancement = true<br/>    }<br/>  &lt;/script&gt;<br/>&lt;/turnscript&gt;</code></pre><br/><br/>// a global Turnscript is for handling the &quot;game state&quot;, for example:<br/><br/>if you're dead, the game should end<br/>if the game is set to advance, and the individual action hasn't increased the turns, then increase the turns by 1<br/>if the game is not set to advance, set it to advance<br/>etc etc etc universal/global &quot;game state&quot; handling stuff (some other examples: weather/day-night/seasons/climate/etc effects, game events, npc movement, whatever else you can think of)",
      "PostDate": "2016-04-26T21:26:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42500",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Hm. Well, I set up Pixie's notarealturn thing on my &quot;lookat&quot; command and &quot;search_room&quot; command which was a big issue but now isn't! But I still don't know how to skip a single global turn. I don't really need a new turn-script or attribute because I just need the universal turn-script to pause in one specific instance like entering a new room and then resuming once the player is inside. To prevent enemies from instantly attacking. \n\nWould it be something like...\n\ngame.turnscript = game.turnscript = 0 \n\nor something?\n\nAlso, appreciate you both: Xan and HK for chiming in so far! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\n[u:119edgli]UPDATE[/u:119edgli]: \n\nActually, this...\n\ngame.turnscript = game.turnscript + 1 from Pix's code is causing arithmetic errors @_@",
      "EditableFormat": "bbcode",
      "HTML": "Hm. Well, I set up Pixie's notarealturn thing on my &quot;lookat&quot; command and &quot;search_room&quot; command which was a big issue but now isn't! But I still don't know how to skip a single global turn. I don't really need a new turn-script or attribute because I just need the universal turn-script to pause in one specific instance like entering a new room and then resuming once the player is inside. To prevent enemies from instantly attacking. <br/><br/>Would it be something like...<br/><br/>game.turnscript = game.turnscript = 0 <br/><br/>or something?<br/><br/>Also, appreciate you both: Xan and HK for chiming in so far! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/><span style=\"text-decoration:underline;\">UPDATE</span>: <br/><br/>Actually, this...<br/><br/>game.turnscript = game.turnscript + 1 from Pix's code is causing arithmetic errors @_@",
      "PostDate": "2016-04-26T22:34:23+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42501",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I edited in more (code and text) to my previous post, it covers how to handle whether an action is a turn or not. Though, it's deisgn will take quite a bit of added in implementation, for your game.\n\nuse the same design concept for individual rooms... if you don't have or want a global turnscript, you can create a local turnscript for that specific room\n\nthe key is having your own: 'turn' Integer Attribute and a 'notarealturn' Boolean Attribute, allowing you to control (code in) where/when you want the turns to increase (and by how much) or to not increase.",
      "EditableFormat": "bbcode",
      "HTML": "I edited in more (code and text) to my previous post, it covers how to handle whether an action is a turn or not. Though, it's deisgn will take quite a bit of added in implementation, for your game.<br/><br/>use the same design concept for individual rooms... if you don't have or want a global turnscript, you can create a local turnscript for that specific room<br/><br/>the key is having your own: 'turn' Integer Attribute and a 'notarealturn' Boolean Attribute, allowing you to control (code in) where/when you want the turns to increase (and by how much) or to not increase.",
      "PostDate": "2016-04-26T22:37:47+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42505",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "[quote=&quot;Neonayon&quot;:qm9du7yk]But I still don't know how to skip a single global turn. I don't really need a new turn-script or attribute because I just need the universal turn-script to pause in one specific instance like entering a new room and then resuming once the player is inside. To prevent enemies from instantly attacking. \n\nWould it be something like...\n\ngame.turnscript = game.turnscript = 0 \n\nor something?\n\nAlso, appreciate you both: Xan and HK for chiming in so far! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\n[u:qm9du7yk]UPDATE[/u:qm9du7yk]: \n\nActually, this...\n\ngame.turnscript = game.turnscript + 1 from Pix's code is causing arithmetic errors @_@[/quote:qm9du7yk]\n\nI don't think you want to name-label your Integer Attribute as 'turnscript' (this may even cause errors/issues for quest's compiler's parsing), name-label it as 'turn' or 'game_turn' or whatever:\n\ngame.turn\ngame.game_turn\ngame.turns\ngame.turn_count\ngame.turn_integer\ngame.current_game_turn\netc etc etc\netc etc etc\n(you don't have to use the 'game' Game Object as well, you could use whatever Object you want)\n\n-----------\n\nas for getting your rooms to work with not advancing a turn, hopefully this will not be too much work for you to, adapt-for and implement-into, your game:\n\nfor example, using your 'onenterroom' Script (but apply the below code, adjusted for your game of course, for any/all relevant scripts, not just the 'onenterroom' Script):\n\nfor each relevant room:\n\n(you'll need some script beforehand to determine what is the value of your Boolean Attribute, of course)\n\n'whatever' Room Object -&gt; ?Scripts/Room Description? (whichever it is, meh) Tab -&gt; 'onenterroom' -&gt; run as script -&gt; add new script -&gt; (see below)\n\n(I'll use 'turn_flag' but you can use 'notarealturn' if you prefer as the name-label for your Boolean Attribute, though beware that our true/false logic is inverse/opposite to each other, aka: 'game.turn_flag = true ==== game.notarealturn = false' and 'game.turn_flag = false ==== game.notarealturn = true', and/or: 'game.turn_flag ==== not game.notarealturn' and 'not game.turn_flag ==== game.notarealturn' )\n\n[code:qm9du7yk]if (not game&#46;turn_flag) { // if (not game&#46;turn_flag = true) // if (not true) // if (false) // aka&#58; not a real/active turn\n  show menu (&quot;You cautiously enter the room, noticing it filled with webbing&#46;&#46;&#46; and you spot a giant spider in the upper left corner&#46;&#46;&#46; luckily, it hasn't seen you yet, giving you enough time to decide what to do&#46;&#46;&#46;&quot;, split (&quot;back out of the room very carefully; use your lit torch to ignite the webbing; etc etc etc&quot;, &quot;;&quot;), false) {\n  switch (result) {\n    case (&quot;back out of the room very carefully&quot;) {\n      msg (&quot;As you try to move carefully back out of the room, unfortunately a part of your body touches a web strand, sending vibrations to the giant spider, which with surprising speed is right behind you as you run into the previous room&#46;&#46;&#46; FIGHT and win&#46;&#46;&#46; or get eaten&#46;&#46;&#46;&quot;)\n      invoke (spider&#46;fight_script_attribute)\n    }\n    case (&quot;use your lit torch to ignite the webbing&quot;) {\n      msg (&quot;Despite that the giant spider would have probably eaten you, you feel terrible as you watch the spider burn alive, screaming just as if it were human being burnt alive&#46; You shudder at the cruelty posed by the situation you found yourself in, though you are glad that you're the one alive&#46;&#46;&#46;&quot;)\n    }\n    // etc etc etc\n  }\n} else { // if (not game&#46;turn_flag = false) //if (not false) // if (true) // aka&#58; a real/active turn\n  msg (&quot;You cautiously enter the room, noticing it filled with webbing&#46;&#46;&#46; and you spot a giant spider in the upper left corner&#46;&#46;&#46; unfortunately, it sees you too&#46;&#46;&#46;&quot;)\n  invoke (spider&#46;fight_script_attribute)\n}[/code:qm9du7yk]",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Neonayon wrote:</cite>But I still don't know how to skip a single global turn. I don't really need a new turn-script or attribute because I just need the universal turn-script to pause in one specific instance like entering a new room and then resuming once the player is inside. To prevent enemies from instantly attacking. <br/><br/>Would it be something like...<br/><br/>game.turnscript = game.turnscript = 0 <br/><br/>or something?<br/><br/>Also, appreciate you both: Xan and HK for chiming in so far! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/><span style=\"text-decoration:underline;\">UPDATE</span>: <br/><br/>Actually, this...<br/><br/>game.turnscript = game.turnscript + 1 from Pix's code is causing arithmetic errors @_@</blockquote><br/><br/>I don't think you want to name-label your Integer Attribute as 'turnscript' (this may even cause errors/issues for quest's compiler's parsing), name-label it as 'turn' or 'game_turn' or whatever:<br/><br/>game.turn<br/>game.game_turn<br/>game.turns<br/>game.turn_count<br/>game.turn_integer<br/>game.current_game_turn<br/>etc etc etc<br/>etc etc etc<br/>(you don't have to use the 'game' Game Object as well, you could use whatever Object you want)<br/><br/>-----------<br/><br/>as for getting your rooms to work with not advancing a turn, hopefully this will not be too much work for you to, adapt-for and implement-into, your game:<br/><br/>for example, using your 'onenterroom' Script (but apply the below code, adjusted for your game of course, for any/all relevant scripts, not just the 'onenterroom' Script):<br/><br/>for each relevant room:<br/><br/>(you'll need some script beforehand to determine what is the value of your Boolean Attribute, of course)<br/><br/>'whatever' Room Object -&gt; ?Scripts/Room Description? (whichever it is, meh) Tab -&gt; 'onenterroom' -&gt; run as script -&gt; add new script -&gt; (see below)<br/><br/>(I'll use 'turn_flag' but you can use 'notarealturn' if you prefer as the name-label for your Boolean Attribute, though beware that our true/false logic is inverse/opposite to each other, aka: 'game.turn_flag = true ==== game.notarealturn = false' and 'game.turn_flag = false ==== game.notarealturn = true', and/or: 'game.turn_flag ==== not game.notarealturn' and 'not game.turn_flag ==== game.notarealturn' )<br/><br/><pre><code>if (not game&#46;turn_flag) { // if (not game&#46;turn_flag = true) // if (not true) // if (false) // aka&#58; not a real/active turn<br/>  show menu (&quot;You cautiously enter the room, noticing it filled with webbing&#46;&#46;&#46; and you spot a giant spider in the upper left corner&#46;&#46;&#46; luckily, it hasn't seen you yet, giving you enough time to decide what to do&#46;&#46;&#46;&quot;, split (&quot;back out of the room very carefully; use your lit torch to ignite the webbing; etc etc etc&quot;, &quot;;&quot;), false) {<br/>  switch (result) {<br/>    case (&quot;back out of the room very carefully&quot;) {<br/>      msg (&quot;As you try to move carefully back out of the room, unfortunately a part of your body touches a web strand, sending vibrations to the giant spider, which with surprising speed is right behind you as you run into the previous room&#46;&#46;&#46; FIGHT and win&#46;&#46;&#46; or get eaten&#46;&#46;&#46;&quot;)<br/>      invoke (spider&#46;fight_script_attribute)<br/>    }<br/>    case (&quot;use your lit torch to ignite the webbing&quot;) {<br/>      msg (&quot;Despite that the giant spider would have probably eaten you, you feel terrible as you watch the spider burn alive, screaming just as if it were human being burnt alive&#46; You shudder at the cruelty posed by the situation you found yourself in, though you are glad that you're the one alive&#46;&#46;&#46;&quot;)<br/>    }<br/>    // etc etc etc<br/>  }<br/>} else { // if (not game&#46;turn_flag = false) //if (not false) // if (true) // aka&#58; a real/active turn<br/>  msg (&quot;You cautiously enter the room, noticing it filled with webbing&#46;&#46;&#46; and you spot a giant spider in the upper left corner&#46;&#46;&#46; unfortunately, it sees you too&#46;&#46;&#46;&quot;)<br/>  invoke (spider&#46;fight_script_attribute)<br/>}</code></pre>",
      "PostDate": "2016-04-27T03:24:38+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42509",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Just to be clear, here is what you need to do:\n\nThis goes in your turn script&#058;\n[code:64zjsw4x]if (not game&#46;notarealturn) {\n  game&#46;turncount = game&#46;turncount + 1\n}\ngame&#46;notarealturn = false[/code:64zjsw4x]\nGo to the Attributes tab of the game object, and add these attributes:\nturncount, an integer set to 0\nnotarealturn, a boolean set to false\nunresolvedcommandhandler, script set to game.notarealturn = true\n\nYou then need to override the look command. Set the filter at the very bottom left to show everything, then look for the Look command. The script is this:\nShowRoomDescription\n\nCopy the command to your game (button top right) and just add:\ngame.notarealturn = true",
      "EditableFormat": "bbcode",
      "HTML": "Just to be clear, here is what you need to do:<br/><br/>This goes in your turn script&#058;<br/><pre><code>if (not game&#46;notarealturn) {<br/>  game&#46;turncount = game&#46;turncount + 1<br/>}<br/>game&#46;notarealturn = false</code></pre><br/>Go to the Attributes tab of the game object, and add these attributes:<br/>turncount, an integer set to 0<br/>notarealturn, a boolean set to false<br/>unresolvedcommandhandler, script set to game.notarealturn = true<br/><br/>You then need to override the look command. Set the filter at the very bottom left to show everything, then look for the Look command. The script is this:<br/>ShowRoomDescription<br/><br/>Copy the command to your game (button top right) and just add:<br/>game.notarealturn = true",
      "PostDate": "2016-04-27T10:31:30+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42521",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Yup. I did all of that already, but when I type &quot;look&quot; and &quot;x me&quot; the enemies still attack.",
      "EditableFormat": "bbcode",
      "HTML": "Yup. I did all of that already, but when I type &quot;look&quot; and &quot;x me&quot; the enemies still attack.",
      "PostDate": "2016-04-27T19:14:59+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42526",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "maybe you could post one of your relevant 'look' Verbs/Script Attributes, your relevant code pieces of Pixie's 'notarealturn and whatever' stuff, and one your enemy attacking code stuff (however you have it setup), so we can see if we can spot why it might not be working.",
      "EditableFormat": "bbcode",
      "HTML": "maybe you could post one of your relevant 'look' Verbs/Script Attributes, your relevant code pieces of Pixie's 'notarealturn and whatever' stuff, and one your enemy attacking code stuff (however you have it setup), so we can see if we can spot why it might not be working.",
      "PostDate": "2016-04-27T19:49:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42527",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Sure thing :p \n\n[u:yxcaojjb]Lookat[/u:yxcaojjb]\n\n[code:yxcaojjb]if (GetBoolean(object, &quot;hidechildren&quot;)) {\n  object&#46;hidechildren = false\n}\nif (TypeOf(object, &quot;look&quot;) = &quot;script&quot;) {\n  do (object, &quot;look&quot;)\n}\nelse {\n  lookdesc = &quot;&quot;\n  if (HasString(object, &quot;look&quot;)) {\n    lookdesc = object&#46;look\n  }\n  if (LengthOf(lookdesc) = 0) {\n    lookdesc = Template(&quot;DefaultObjectDescription&quot;)\n  }\n  if (GetBoolean(object, &quot;switchedon&quot;)) {\n    if (HasString(object, &quot;switchedondesc&quot;)) {\n      lookdesc = lookdesc + &quot; &quot; + object&#46;switchedondesc\n    }\n  }\n  else {\n    if (HasString(object, &quot;switchedoffdesc&quot;)) {\n      lookdesc = lookdesc + &quot; &quot; + object&#46;switchedoffdesc\n    }\n  }\n  isDark = CheckDarkness()\n  if (isDark and not GetBoolean(object, &quot;lightsource&quot;)) {\n    lookdesc = DynamicTemplate(&quot;LookAtDarkness&quot;, object)\n  }\n  msg (lookdesc)\n}\nListObjectContents (object)\ngame&#46;notarealturn = True[/code:yxcaojjb]\n\n[u:yxcaojjb]Look [/u:yxcaojjb]\n\n[code:yxcaojjb]ShowRoomDescription\ngame&#46;notarealturn = True[/code:yxcaojjb]\n\n\n[u:yxcaojjb]Attack Turn-Script[/u:yxcaojjb]\n\n[code:yxcaojjb]foreach (o, GetDirectChildren(player&#46;parent)) {\n  if (GetBoolean(o, &quot;attacking_player&quot;)) {\n    if (o&#46;health &gt; 1) {\n      do (o, &quot;attackplayer&quot;)\n    }\n  }\n}[/code:yxcaojjb]",
      "EditableFormat": "bbcode",
      "HTML": "Sure thing :p <br/><br/><span style=\"text-decoration:underline;\">Lookat</span><br/><br/><pre><code>if (GetBoolean(object, &quot;hidechildren&quot;)) {<br/>  object&#46;hidechildren = false<br/>}<br/>if (TypeOf(object, &quot;look&quot;) = &quot;script&quot;) {<br/>  do (object, &quot;look&quot;)<br/>}<br/>else {<br/>  lookdesc = &quot;&quot;<br/>  if (HasString(object, &quot;look&quot;)) {<br/>    lookdesc = object&#46;look<br/>  }<br/>  if (LengthOf(lookdesc) = 0) {<br/>    lookdesc = Template(&quot;DefaultObjectDescription&quot;)<br/>  }<br/>  if (GetBoolean(object, &quot;switchedon&quot;)) {<br/>    if (HasString(object, &quot;switchedondesc&quot;)) {<br/>      lookdesc = lookdesc + &quot; &quot; + object&#46;switchedondesc<br/>    }<br/>  }<br/>  else {<br/>    if (HasString(object, &quot;switchedoffdesc&quot;)) {<br/>      lookdesc = lookdesc + &quot; &quot; + object&#46;switchedoffdesc<br/>    }<br/>  }<br/>  isDark = CheckDarkness()<br/>  if (isDark and not GetBoolean(object, &quot;lightsource&quot;)) {<br/>    lookdesc = DynamicTemplate(&quot;LookAtDarkness&quot;, object)<br/>  }<br/>  msg (lookdesc)<br/>}<br/>ListObjectContents (object)<br/>game&#46;notarealturn = True</code></pre><br/><br/><span style=\"text-decoration:underline;\">Look </span><br/><br/><pre><code>ShowRoomDescription<br/>game&#46;notarealturn = True</code></pre><br/><br/><br/><span style=\"text-decoration:underline;\">Attack Turn-Script</span><br/><br/><pre><code>foreach (o, GetDirectChildren(player&#46;parent)) {<br/>  if (GetBoolean(o, &quot;attacking_player&quot;)) {<br/>    if (o&#46;health &gt; 1) {<br/>      do (o, &quot;attackplayer&quot;)<br/>    }<br/>  }<br/>}</code></pre>",
      "PostDate": "2016-04-27T20:00:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42528",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "try putting the 'game.notarealturn = true' at the top of your codes/scriptings:\n\nLookat (edited):\n\n[code:2mopd1y2]game&#46;notarealturn = True\nif (GetBoolean(object, &quot;hidechildren&quot;)) {\n  object&#46;hidechildren = false\n}\nif (TypeOf(object, &quot;look&quot;) = &quot;script&quot;) {\n  do (object, &quot;look&quot;)\n}\nelse {\n  lookdesc = &quot;&quot;\n  if (HasString(object, &quot;look&quot;)) {\n    lookdesc = object&#46;look\n  }\n  if (LengthOf(lookdesc) = 0) {\n    lookdesc = Template(&quot;DefaultObjectDescription&quot;)\n  }\n  if (GetBoolean(object, &quot;switchedon&quot;)) {\n    if (HasString(object, &quot;switchedondesc&quot;)) {\n      lookdesc = lookdesc + &quot; &quot; + object&#46;switchedondesc\n    }\n  }\n  else {\n    if (HasString(object, &quot;switchedoffdesc&quot;)) {\n      lookdesc = lookdesc + &quot; &quot; + object&#46;switchedoffdesc\n    }\n  }\n  isDark = CheckDarkness()\n  if (isDark and not GetBoolean(object, &quot;lightsource&quot;)) {\n    lookdesc = DynamicTemplate(&quot;LookAtDarkness&quot;, object)\n  }\n  msg (lookdesc)\n}\nListObjectContents (object)[/code:2mopd1y2]\n\nLook (edited):\n\n[code:2mopd1y2]game&#46;notarealturn = True\nShowRoomDescription[/code:2mopd1y2]\n\nand for your 'attacking' Turnscript, you're missing the needed code for handling whether to attack right away or not, the edited code is shown below:\n\n[code:2mopd1y2]foreach (o, GetDirectChildren(player&#46;parent)) {\n  if (GetBoolean(o, &quot;attacking_player&quot;)) {\n    if (o&#46;health &gt; 1) {\n      if (game&#46;notarealturn) {\n        do (o, &quot;attackplayer&quot;)\n      }\n      // since this is a Turnscript, it'll keep checking/running, and thus, if/when 'game&#46;notarealturn = true', the enemy will attack, and if/when 'game&#46;notarealturn = false', the enemy will not attack&#46;\n    }\n  }\n}[/code:2mopd1y2]\n\nlastly, you do need to have Pixie's global Turnscript (or if you already have a global Turnscript, then it needs the code below inside of it), for all of this to work, with using this same implementation as Pixie's:\n\n[code:2mopd1y2]&lt;game name=&quot;xxx&quot;&gt;\n&lt;/game&gt;\n// the 'game' Object, is just added to show that the Turnscript below is a global Turnscript, and not a local Turnscript for a specific room\n\n&lt;turnscript name=&quot;xxx&quot;&gt;\n  &lt;enabled /&gt;\n  &lt;script&gt;\n    if (not game&#46;notarealturn) {\n      game&#46;turn = game&#46;turn + 1 // or whatever is your Integer Attribute's name/label for your turns\n    }\n    game&#46;notarealturn = false\n  &lt;/script&gt;\n&lt;/turnscript&gt;[/code:2mopd1y2]",
      "EditableFormat": "bbcode",
      "HTML": "try putting the 'game.notarealturn = true' at the top of your codes/scriptings:<br/><br/>Lookat (edited):<br/><br/><pre><code>game&#46;notarealturn = True<br/>if (GetBoolean(object, &quot;hidechildren&quot;)) {<br/>  object&#46;hidechildren = false<br/>}<br/>if (TypeOf(object, &quot;look&quot;) = &quot;script&quot;) {<br/>  do (object, &quot;look&quot;)<br/>}<br/>else {<br/>  lookdesc = &quot;&quot;<br/>  if (HasString(object, &quot;look&quot;)) {<br/>    lookdesc = object&#46;look<br/>  }<br/>  if (LengthOf(lookdesc) = 0) {<br/>    lookdesc = Template(&quot;DefaultObjectDescription&quot;)<br/>  }<br/>  if (GetBoolean(object, &quot;switchedon&quot;)) {<br/>    if (HasString(object, &quot;switchedondesc&quot;)) {<br/>      lookdesc = lookdesc + &quot; &quot; + object&#46;switchedondesc<br/>    }<br/>  }<br/>  else {<br/>    if (HasString(object, &quot;switchedoffdesc&quot;)) {<br/>      lookdesc = lookdesc + &quot; &quot; + object&#46;switchedoffdesc<br/>    }<br/>  }<br/>  isDark = CheckDarkness()<br/>  if (isDark and not GetBoolean(object, &quot;lightsource&quot;)) {<br/>    lookdesc = DynamicTemplate(&quot;LookAtDarkness&quot;, object)<br/>  }<br/>  msg (lookdesc)<br/>}<br/>ListObjectContents (object)</code></pre><br/><br/>Look (edited):<br/><br/><pre><code>game&#46;notarealturn = True<br/>ShowRoomDescription</code></pre><br/><br/>and for your 'attacking' Turnscript, you're missing the needed code for handling whether to attack right away or not, the edited code is shown below:<br/><br/><pre><code>foreach (o, GetDirectChildren(player&#46;parent)) {<br/>  if (GetBoolean(o, &quot;attacking_player&quot;)) {<br/>    if (o&#46;health &gt; 1) {<br/>      if (game&#46;notarealturn) {<br/>        do (o, &quot;attackplayer&quot;)<br/>      }<br/>      // since this is a Turnscript, it'll keep checking/running, and thus, if/when 'game&#46;notarealturn = true', the enemy will attack, and if/when 'game&#46;notarealturn = false', the enemy will not attack&#46;<br/>    }<br/>  }<br/>}</code></pre><br/><br/>lastly, you do need to have Pixie's global Turnscript (or if you already have a global Turnscript, then it needs the code below inside of it), for all of this to work, with using this same implementation as Pixie's:<br/><br/><pre><code>&lt;game name=&quot;xxx&quot;&gt;<br/>&lt;/game&gt;<br/>// the 'game' Object, is just added to show that the Turnscript below is a global Turnscript, and not a local Turnscript for a specific room<br/><br/>&lt;turnscript name=&quot;xxx&quot;&gt;<br/>  &lt;enabled /&gt;<br/>  &lt;script&gt;<br/>    if (not game&#46;notarealturn) {<br/>      game&#46;turn = game&#46;turn + 1 // or whatever is your Integer Attribute's name/label for your turns<br/>    }<br/>    game&#46;notarealturn = false<br/>  &lt;/script&gt;<br/>&lt;/turnscript&gt;</code></pre>",
      "PostDate": "2016-04-27T21:16:14+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42530",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;Neonayon&quot;:2zknzfz5]Yup. I did all of that already, but when I type &quot;look&quot; and &quot;x me&quot; the enemies still attack.[/quote:2zknzfz5]\nAh that is something different. In fact two different things. HK has pretty much said this but...\n\nFirst &quot;x me&quot; is the lookat command, so you will need to copy that to your game too, and add:\ngame.notarealturn = true\n\n... to that too (it will apply to looking at anything by the way).\n\nTo stop monsters attacking, you will need to combine your monster attack turnscript with the turn counting turnscript, because we need to be sure the monster attack bit is done first. I would start by copying both scripts to a text file as a back up.\n\nThe new script needs to look like this:\n\nif (not game.notarealturn) {\n[i:2zknzfz5][everything from the monster attack script][/i:2zknzfz5]\n}\n[i:2zknzfz5][everything from the turn counting script][/i:2zknzfz5]\n\nYou also need to delete the old scripts (or the monsters will attack twice!).",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Neonayon wrote:</cite>Yup. I did all of that already, but when I type &quot;look&quot; and &quot;x me&quot; the enemies still attack.</blockquote><br/>Ah that is something different. In fact two different things. HK has pretty much said this but...<br/><br/>First &quot;x me&quot; is the lookat command, so you will need to copy that to your game too, and add:<br/>game.notarealturn = true<br/><br/>... to that too (it will apply to looking at anything by the way).<br/><br/>To stop monsters attacking, you will need to combine your monster attack turnscript with the turn counting turnscript, because we need to be sure the monster attack bit is done first. I would start by copying both scripts to a text file as a back up.<br/><br/>The new script needs to look like this:<br/><br/>if (not game.notarealturn) {<br/><span style=\"font-style:italic;\">[everything from the monster attack script]</span><br/>}<br/><span style=\"font-style:italic;\">[everything from the turn counting script]</span><br/><br/>You also need to delete the old scripts (or the monsters will attack twice!).",
      "PostDate": "2016-04-27T22:18:56+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42531",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "sorry about the/my incorrect monster scripting, neonayon (and Pixie too).\n\nDo as Pixie correctly instructs about how it's to be done.",
      "EditableFormat": "bbcode",
      "HTML": "sorry about the/my incorrect monster scripting, neonayon (and Pixie too).<br/><br/>Do as Pixie correctly instructs about how it's to be done.",
      "PostDate": "2016-04-27T22:50:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42533",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Ah okay!\n\nI didn't want the monster's to never attack but to delay their attacks when you enter a room for 1 turn. Like for example...\n\nPlayer enters room with monster. \nnothing happens. \nplayer picks up object.\nMonster attacks player.\n\nUPDATE:\n\nAlso, still getting attacked when looking. Hm.",
      "EditableFormat": "bbcode",
      "HTML": "Ah okay!<br/><br/>I didn't want the monster's to never attack but to delay their attacks when you enter a room for 1 turn. Like for example...<br/><br/>Player enters room with monster. <br/>nothing happens. <br/>player picks up object.<br/>Monster attacks player.<br/><br/>UPDATE:<br/><br/>Also, still getting attacked when looking. Hm.",
      "PostDate": "2016-04-27T23:47:47+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42534",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "for that, you're going to need to implement two 'turn' Integer Attributes:\n\ngame.previous_turn // or however you want to name/label it\ngame.current_turn // or however you have it already named/labeled\n\n*************\nthe default/basic concept of what system you're doing:\n\ninitial setting:\ngame.previous_turn = 0\ngame.current_turn = 0\n\n(1) first (1 turn) action -&gt; game.current_turn = game.current_turn + 1\n\n// game.current_turn = 1\n// game.previous_turn = 0\n\n(2) save the new previous turn via: game.previous_turn = game.current_turn // game.previous_turn = game.current_turn = 1\n\n// game.current_turn = 1\n// game.previous_turn = 1\n\n(3) second (1 turn) action -&gt; game.current_turn = game.current_turn + 1\n\n// game.current_turn = 2\n// game.previous_turn = 1\n\n(4) save the new previous turn via: game.previous_turn = game.current_turn // game.previous_turn = game.current_turn = 2\n\n// game.current_turn = 2\n// game.previous_turn = 2\n\n(5) third (1 turn) action -&gt; game.current_turn = game.current_turn + 1\n\n// game.current_turn = 3\n// game.previous_turn = 2\n\n(6) save the new previous turn via: game.previous_turn = game.current_turn // game.previous_turn = game.current_turn = 3\n\n// game.current_turn = 3\n// game.previous_turn = 3\n\n(7) fourth (1 turn) action -&gt; game.current_turn = game.current_turn + 1\n\n// game.current_turn = 4\n// game.previous_turn = 3\n\netc etc etc\n\n// or you do an action that increases the turn count by more than 1... (the above only samples when you're increasing the turns by 1 each time)... example of dynamic turn increasing (non-default of +1 turns) below:\n\ninitial setting:\ngame.previous_turn = 0\ngame.current_turn = 0\n\n(1) first (5 turn) action -&gt; game.current_turn = game.current_turn + 5\n\n// game.current_turn = 5\n// game.previous_turn = 0\n\n(2) save the new previous turn via: game.previous_turn = game.current_turn // game.previous_turn = game.current_turn = 5\n\n// game.current_turn = 5\n// game.previous_turn = 5\n\n(3) second (3 turn) action -&gt; game.current_turn = game.current_turn + 3\n\n// game.current_turn = 8\n// game.previous_turn = 5\n\n(4) save the new previous turn via: game.previous_turn = game.current_turn // game.previous_turn = game.current_turn = 8\n\n// game.current_turn = 8\n// game.previous_turn = 8\n\n(5) third (7 turn) action -&gt; game.current_turn = game.current_turn + 7\n\n// game.current_turn = 15\n// game.previous_turn = 8\n\n(6) save the new previous turn via: game.previous_turn = game.current_turn // game.previous_turn = game.current_turn = 15\n\n// game.current_turn = 15\n// game.previous_turn = 15\n\n(7) fourth (5 turn) action -&gt; game.current_turn = game.current_turn + 5\n\n// game.current_turn = 20\n// game.previous_turn = 15\n\netc etc etc\n\n---\n\nthis is the same design ( of using two Attributes, 'old/previous' and 'new/current' ) for how to be able to return to whatever previous room you were in, and also is used for the returning to the original simple 'object.alias' vs the ' object.alias + &quot;(equipped)&quot; ', in Chase's/Pixie's equipment code systems)\n\n****************\n\nwhich, now allows you to:\n\nas you got to compare the new/current turn amount to the old/previous turn amount, and if they're not equal, then a turn has occured obviously, and thus now the monster attacks, and if they're equal, then obviously a turn has NOT occured, and thus the monster waits for you to do an action (real turn) first.\n\nsee this code of mine (or wait for Pixie to help you with implementing it in a much better/easier way/design than how I've done it, lol):\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=6269#p42499\">viewtopic.php?f=10&amp;t=6269#p42499</a><!-- l -->\n\nas I'm much more lazy than Pixie is, lol",
      "EditableFormat": "bbcode",
      "HTML": "for that, you're going to need to implement two 'turn' Integer Attributes:<br/><br/>game.previous_turn // or however you want to name/label it<br/>game.current_turn // or however you have it already named/labeled<br/><br/>*************<br/>the default/basic concept of what system you're doing:<br/><br/>initial setting:<br/>game.previous_turn = 0<br/>game.current_turn = 0<br/><br/>(1) first (1 turn) action -&gt; game.current_turn = game.current_turn + 1<br/><br/>// game.current_turn = 1<br/>// game.previous_turn = 0<br/><br/>(2) save the new previous turn via: game.previous_turn = game.current_turn // game.previous_turn = game.current_turn = 1<br/><br/>// game.current_turn = 1<br/>// game.previous_turn = 1<br/><br/>(3) second (1 turn) action -&gt; game.current_turn = game.current_turn + 1<br/><br/>// game.current_turn = 2<br/>// game.previous_turn = 1<br/><br/>(4) save the new previous turn via: game.previous_turn = game.current_turn // game.previous_turn = game.current_turn = 2<br/><br/>// game.current_turn = 2<br/>// game.previous_turn = 2<br/><br/>(5) third (1 turn) action -&gt; game.current_turn = game.current_turn + 1<br/><br/>// game.current_turn = 3<br/>// game.previous_turn = 2<br/><br/>(6) save the new previous turn via: game.previous_turn = game.current_turn // game.previous_turn = game.current_turn = 3<br/><br/>// game.current_turn = 3<br/>// game.previous_turn = 3<br/><br/>(7) fourth (1 turn) action -&gt; game.current_turn = game.current_turn + 1<br/><br/>// game.current_turn = 4<br/>// game.previous_turn = 3<br/><br/>etc etc etc<br/><br/>// or you do an action that increases the turn count by more than 1... (the above only samples when you're increasing the turns by 1 each time)... example of dynamic turn increasing (non-default of +1 turns) below:<br/><br/>initial setting:<br/>game.previous_turn = 0<br/>game.current_turn = 0<br/><br/>(1) first (5 turn) action -&gt; game.current_turn = game.current_turn + 5<br/><br/>// game.current_turn = 5<br/>// game.previous_turn = 0<br/><br/>(2) save the new previous turn via: game.previous_turn = game.current_turn // game.previous_turn = game.current_turn = 5<br/><br/>// game.current_turn = 5<br/>// game.previous_turn = 5<br/><br/>(3) second (3 turn) action -&gt; game.current_turn = game.current_turn + 3<br/><br/>// game.current_turn = 8<br/>// game.previous_turn = 5<br/><br/>(4) save the new previous turn via: game.previous_turn = game.current_turn // game.previous_turn = game.current_turn = 8<br/><br/>// game.current_turn = 8<br/>// game.previous_turn = 8<br/><br/>(5) third (7 turn) action -&gt; game.current_turn = game.current_turn + 7<br/><br/>// game.current_turn = 15<br/>// game.previous_turn = 8<br/><br/>(6) save the new previous turn via: game.previous_turn = game.current_turn // game.previous_turn = game.current_turn = 15<br/><br/>// game.current_turn = 15<br/>// game.previous_turn = 15<br/><br/>(7) fourth (5 turn) action -&gt; game.current_turn = game.current_turn + 5<br/><br/>// game.current_turn = 20<br/>// game.previous_turn = 15<br/><br/>etc etc etc<br/><br/>---<br/><br/>this is the same design ( of using two Attributes, 'old/previous' and 'new/current' ) for how to be able to return to whatever previous room you were in, and also is used for the returning to the original simple 'object.alias' vs the ' object.alias + &quot;(equipped)&quot; ', in Chase's/Pixie's equipment code systems)<br/><br/>****************<br/><br/>which, now allows you to:<br/><br/>as you got to compare the new/current turn amount to the old/previous turn amount, and if they're not equal, then a turn has occured obviously, and thus now the monster attacks, and if they're equal, then obviously a turn has NOT occured, and thus the monster waits for you to do an action (real turn) first.<br/><br/>see this code of mine (or wait for Pixie to help you with implementing it in a much better/easier way/design than how I've done it, lol):<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=6269#p42499\">viewtopic.php?f=10&amp;t=6269#p42499</a><!-- l --><br/><br/>as I'm much more lazy than Pixie is, lol",
      "PostDate": "2016-04-27T23:52:00+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42535",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "I'd rather get the looks working first before trying to delay the attacks @_@",
      "EditableFormat": "bbcode",
      "HTML": "I'd rather get the looks working first before trying to delay the attacks @_@",
      "PostDate": "2016-04-28T00:03:56+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42536",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "actually, depending on what design you want to use for your game, the implementation can be much more simple than my complex implementation of throwing in having to work with and check upon 'new/current' vs 'old/previous' turns... in dealing with/handling if/when the monster in a room attacks.",
      "EditableFormat": "bbcode",
      "HTML": "actually, depending on what design you want to use for your game, the implementation can be much more simple than my complex implementation of throwing in having to work with and check upon 'new/current' vs 'old/previous' turns... in dealing with/handling if/when the monster in a room attacks.",
      "PostDate": "2016-04-28T00:14:04+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42548",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Turns out I had a script resetting the notarealturn scripting! Oops! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "EditableFormat": "bbcode",
      "HTML": "Turns out I had a script resetting the notarealturn scripting! Oops! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "PostDate": "2016-04-28T21:46:44+01:00",
      "LastEditDate": null
    }
  ]
}
