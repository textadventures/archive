{
  "Topic": {
    "TopicId": "2sewm1o9fuiyfmbgq7vepq",
    "ForumId": "10",
    "Title": "Need help with script specifics",
    "LastUpdated": "2016-08-23T00:52:05.7744479Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "e7e6db49-3993-46a6-8168-ea737ba53b5b",
      "UserId": 21400,
      "Username": "Lighnagain",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Let me begin by saying I am not a coder. There is a lot of probably basic conclusions that I'm struggling with -- but that's why I am having fun learning! \r\n\r\nI am trying to make a 3 tier decision based point system. I used the example \"Good, Evil, and Neutral\" before, but I don't want a basic \"Morality\" counter, I want to be able to see how many of each  decision was made. So right now I have created the attributes, but how can I make an action increase the counter for said attribute? I would also like to make a verb react differently based on the level of said attribute. ALA, \r\n\"Enter the church\"\r\nGood > 10 = you enter the church\r\nGood < 10 = you start through the doors, but recoil in pain on the threshold and retreat. \r\n\r\nHelp! I've been working primarily in the quest editor, not actually writing scripts of code unless I am copy/pasting from something I've already worked out, so instructions on which tabs to use to create said circumstances would be most helpful!! \r\n\r\n~L",
      "EditableFormat": "markdown",
      "HTML": "<p>Let me begin by saying I am not a coder. There is a lot of probably basic conclusions that I'm struggling with -- but that's why I am having fun learning!</p>\n<p>I am trying to make a 3 tier decision based point system. I used the example \"Good, Evil, and Neutral\" before, but I don't want a basic \"Morality\" counter, I want to be able to see how many of each  decision was made. So right now I have created the attributes, but how can I make an action increase the counter for said attribute? I would also like to make a verb react differently based on the level of said attribute. ALA,<br>\n\"Enter the church\"<br>\nGood &gt; 10 = you enter the church<br>\nGood &lt; 10 = you start through the doors, but recoil in pain on the threshold and retreat.</p>\n<p>Help! I've been working primarily in the quest editor, not actually writing scripts of code unless I am copy/pasting from something I've already worked out, so instructions on which tabs to use to create said circumstances would be most helpful!!</p>\n<p>~L</p>\n\n",
      "PostDate": "2016-08-23T00:52:05.7744479Z",
      "LastEditDate": null
    },
    {
      "PostId": "59e34776-a2b9-4acc-a137-39c7292c4b42",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I THINK... \r\n\r\n1.  You should add an integer attribute to the player and call it 'MoralityCount'.  Set it to 0\r\n2.  Add a 'changedMoralityCount' attribute.\r\n3.  For the changed script, add an 'If' attribute equal to or > 9, then set flag neutral.\r\n4.  Add an 'Else If' script here and add 'Else If' attribute equal to < 10, then set flag good.\r\n5.  Add an 'Else If' script here and add 'Else If' attribute equal to > 0, then set flag evil.\r\n6.  Be sure to add to those scripts the unset flag options for each of the other two - i.e. if set good, unset neutral and evil.\r\n\r\nNow you can check the morality setting with If scripts for any action that you want.\r\n\r\nI'm not sure EXACTLY how to do it, but this makes sense to me and is what I would try.  Of course, I'm Quest's greatest hack job GUI user on the planet, so... take it for what it is worth!",
      "EditableFormat": "markdown",
      "HTML": "<p>I THINK...</p>\n<ol>\n<li>You should add an integer attribute to the player and call it 'MoralityCount'.  Set it to 0</li>\n<li>Add a 'changedMoralityCount' attribute.</li>\n<li>For the changed script, add an 'If' attribute equal to or &gt; 9, then set flag neutral.</li>\n<li>Add an 'Else If' script here and add 'Else If' attribute equal to &lt; 10, then set flag good.</li>\n<li>Add an 'Else If' script here and add 'Else If' attribute equal to &gt; 0, then set flag evil.</li>\n<li>Be sure to add to those scripts the unset flag options for each of the other two - i.e. if set good, unset neutral and evil.</li>\n</ol>\n<p>Now you can check the morality setting with If scripts for any action that you want.</p>\n<p>I'm not sure EXACTLY how to do it, but this makes sense to me and is what I would try.  Of course, I'm Quest's greatest hack job GUI user on the planet, so... take it for what it is worth!</p>\n\n",
      "PostDate": "2016-08-23T02:50:50.8684164Z",
      "LastEditDate": null
    },
    {
      "PostId": "1b8af590-6615-4bbf-a5c4-d662468b2961",
      "UserId": 21400,
      "Username": "Lighnagain",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "XanMag, \r\n\r\nProblem being I am using the morality as an example, this isn't precisely what I am trying to do--and what I am trying to do isn't a sliding scale of three things on the same category plane, they're three different categories that can gain points based on decisions that are made independently. ALA, there are 3 ways to solve every problem, and based on how you decide to solve it, you get a point in that category. ",
      "EditableFormat": "markdown",
      "HTML": "<p>XanMag,</p>\n<p>Problem being I am using the morality as an example, this isn't precisely what I am trying to do--and what I am trying to do isn't a sliding scale of three things on the same category plane, they're three different categories that can gain points based on decisions that are made independently. ALA, there are 3 ways to solve every problem, and based on how you decide to solve it, you get a point in that category.</p>\n\n",
      "PostDate": "2016-08-23T06:16:08.990044Z",
      "LastEditDate": null
    },
    {
      "PostId": "41519998-4755-4c08-bebf-983dcd58616c",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For morality, I would have two counters, \"GoodCounter\" and \"Evilcounter\", with neutral being both low. If you have played Mass Effect it uses a similar system. Entering the church could then depend on \"Evilcounter\" being low, but going into the inner sanctum requires \"GoodCounter\" to be high, say.\r\n\r\nSounds like you may need three counters in your system.",
      "EditableFormat": "markdown",
      "HTML": "<p>For morality, I would have two counters, \"GoodCounter\" and \"Evilcounter\", with neutral being both low. If you have played Mass Effect it uses a similar system. Entering the church could then depend on \"Evilcounter\" being low, but going into the inner sanctum requires \"GoodCounter\" to be high, say.</p>\n<p>Sounds like you may need three counters in your system.</p>\n\n",
      "PostDate": "2016-08-23T06:58:36.1238501Z",
      "LastEditDate": null
    },
    {
      "PostId": "2fd0b957-b2a8-4c2c-822d-8b189232326a",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "this is a bit code heavy, but maybe you can still understand and follow it:\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5559/attributes-and-if-script-guide-by-hk (specifically scroll down a bit to the 'two super scripts' sections: 'attributes / attribute usage' section and the 'if script / if script usage' section, but you may want to read the content above it, as it gives a generally understanding of coding, quest, and quest's coding)\r\n\r\n----------\r\n\r\n```\r\nconceptually:\r\n\r\nevent/action (scripting/scripts such as via a Verb and its buttons/hyperlinks during game play) that happens and/or a choice made within the event/action: whatever combination of moralities you want available/resultant from what event/action/choice you make. for example:\r\n\r\nwhere do you go to?\r\n1. forest: +1 'good' morality/alignment // you can also be more complex, for example: +1 \"good\" morality/alignment and -1 \"evil\" morality/alignment, and it doesn't have to be '1' nor '+ (addition)', you can do: multiply ( * ) by 7\r\n2. town: +1 'neutral' morality/alignment\r\n3. mountains: +1 'evil' morlaity/alignment\r\n\r\n'whatever' Element (Verb / Object's Script Attribute, Command, Function, Turnscript, etc) -> run as sript -> add new script -> 'variables' section/category -> 'set a variable or attribute' Script -> [EXPRESSION] -> (see below)\r\n\r\n// doing a simple Expression (OPERATOR VALUE, for example: + 1, * 7, - 3, / 2, % 10 --- % is known as 'modulus' operation, which is just division, except you find/get the REMAINDER, not the normal getting/finding of the quotient - this has some very cool uses. Programming has to separate division into two operations, one operation '/' finds/gets the quotient and another '%' finds/gets the remainder):\r\n\r\n// keeping these as a simple 'OPERATOR VALUE' usage examples:\r\n\r\nin GUI~Editor: set variable OBJECT_NAME.ATTRIBUTE_NAME = [EXPRESSION] OBJECT_NAME.ATTRIBUTE_NAME OPERATOR VALUE\r\n\r\nin Code: OBJECT_NAME.ATTRIBUTE_NAME = OBJECT_NAME.ATTRIBUTE_NAME OPERATOR VALUE\r\n\r\nreplace my 'OBJECT_NAME' with the name of your desired Object (which is containing the desired Attribute)\r\n\r\nreplace my 'ATTRIBUTE_NAME' with the name of your desired Attribute (which is contained/added-to/created-within your desired Object)\r\n\r\nreplace my 'OPERATOR' with the desired operator's symbol (+, -, *, /, &)\r\n\r\nreplace my 'VALUE' with some amount (some number)\r\n\r\nso, some examples (in code):\r\n\r\nOBJECT_NAME: player\r\nATTRIBUTE_NAME: good_alignment\r\nOPERATOR: +\r\nValue: 1\r\n\r\nplayer.good_alignment = player.good_alignment + 1\r\n\r\nOBJECT_NAME: player\r\nATTRIBUTE_NAME: good_alignment\r\nOPERATOR: +\r\nValue: 5\r\n\r\nplayer.good_alignment = player.good_alignment + 5\r\n\r\nOBJECT_NAME: player\r\nATTRIBUTE_NAME: evil_alignment\r\nOPERATOR: +\r\nValue: 1\r\n\r\nplayer.evil_alignment = player.evil_alignment + 1\r\n\r\nOBJECT_NAME: player\r\nATTRIBUTE_NAME: evil --- if you don't like my system of labeling/naming using underscores and being more descriptive, lol\r\nOPERATOR: +\r\nValue: 1\r\n\r\nplayer.evil = player.evil + 1\r\n\r\netc etc etc... hopefully you get the idea...\r\n\r\n----------------------\r\n\r\nconceptually of how it works, using addition as example:\r\n\r\ninitial value: player.strength = 0\r\n\r\nold value: player.strength = 0\r\n\r\nplayer.strength = player.strength + 3\r\nplayer.strength (new) = player.strength (old: 0) + 3\r\nplayer.strength (new) = (0) + 3 = 3\r\n\r\nnew value: player.strength = 3\r\n\r\nold value: player.strength = 3\r\n\r\nplayer.strength = player.strength + 3\r\nplayer.strength (new) = player.strength (old: 3) + 3\r\nplayer.strength (new) = (3) + 3 = 6\r\n\r\nnew value: player.strength = 6\r\n\r\nold value: player.strength = 6\r\n\r\nplayer.strength = player.strength + 3\r\nplayer.strength (new) = player.strength (old: 6) + 3\r\nplayer.strength (new) = (6) + 3 = 9\r\n\r\nnew value: player.strength = 9\r\n\r\netc etc etc... hopefully you get how it works now.\r\n\r\n-----------------\r\n\r\nin code, syntax for simple examples:\r\n\r\nAddition:\r\n\r\nOBJECT_NAME.ATTRIBUTE_NAME = OBJECT_NAME.ATTRIBUTE_NAME + Value\r\n\r\nSubtraction:\r\n\r\nOBJECT_NAME.ATTRIBUTE_NAME = OBJECT_NAME.ATTRIBUTE_NAME - Value\r\n\r\nMultiplication:\r\n\r\nOBJECT_NAME.ATTRIBUTE_NAME = OBJECT_NAME.ATTRIBUTE_NAME * Value\r\n\r\nDivision (Division: quotient):\r\n\r\nOBJECT_NAME.ATTRIBUTE_NAME = OBJECT_NAME.ATTRIBUTE_NAME / Value\r\n\r\nModulus (Division: remainder):\r\n\r\nOBJECT_NAME.ATTRIBUTE_NAME = OBJECT_NAME.ATTRIBUTE_NAME % Value\r\n\r\n--------------------\r\n\r\na quick simple 'if' Script usage + Attribute usage example (in code):\r\n\r\n(using the special 'changed' Script Attribute using a Function for my example)\r\n\r\n<object name=\"room\">\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"changedstrength_integer\" type=\"script\">\r\n    example_function\r\n  </attr>\r\n</object>\r\n\r\n<function name=\"example_function\">\r\n  if (player.strength_integer > 100) {\r\n    player.strength_integer = 100\r\n  } else if (player.strength_integer < 0) {\r\n    player.strength_integer = 0\r\n  }\r\n  if (player.strength_integer = 100) {\r\n    player.strength_string = \"MAX\"\r\n  } else if (player.strength_integer >= 67) {\r\n    player.strength_string = \"strong\"\r\n  } else if (player.strength_integer >= 34) {\r\n    player.strength_string = \"average\"\r\n  } else if (player.strength_integer > 0) {\r\n    player.strength_string = \"weak\"\r\n  } else {         // conceptually/logically/effectively: if (player.strength_integer = 0) {\r\n    player.strength_string = \"You are a puny wimp!\"\r\n  }\r\n</function>\r\n\r\n```\r\n\r\n---------\r\n\r\nread my link's contents, to see how to use the 'if' Script with Attributes, for the other half of this great comprehension, which let's you do 90% of everything that you want to do in your game.",
      "EditableFormat": "markdown",
      "HTML": "<p>this is a bit code heavy, but maybe you can still understand and follow it:</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5559/attributes-and-if-script-guide-by-hk (specifically scroll down a bit to the 'two super scripts' sections: 'attributes / attribute usage' section and the 'if script / if script usage' section, but you may want to read the content above it, as it gives a generally understanding of coding, quest, and quest's coding)</p>\n<hr>\n<pre><code>conceptually:\n\nevent/action (scripting/scripts such as via a Verb and its buttons/hyperlinks during game play) that happens and/or a choice made within the event/action: whatever combination of moralities you want available/resultant from what event/action/choice you make. for example:\n\nwhere do you go to?\n1. forest: +1 'good' morality/alignment // you can also be more complex, for example: +1 \"good\" morality/alignment and -1 \"evil\" morality/alignment, and it doesn't have to be '1' nor '+ (addition)', you can do: multiply ( * ) by 7\n2. town: +1 'neutral' morality/alignment\n3. mountains: +1 'evil' morlaity/alignment\n\n'whatever' Element (Verb / Object's Script Attribute, Command, Function, Turnscript, etc) -&gt; run as sript -&gt; add new script -&gt; 'variables' section/category -&gt; 'set a variable or attribute' Script -&gt; [EXPRESSION] -&gt; (see below)\n\n// doing a simple Expression (OPERATOR VALUE, for example: + 1, * 7, - 3, / 2, % 10 --- % is known as 'modulus' operation, which is just division, except you find/get the REMAINDER, not the normal getting/finding of the quotient - this has some very cool uses. Programming has to separate division into two operations, one operation '/' finds/gets the quotient and another '%' finds/gets the remainder):\n\n// keeping these as a simple 'OPERATOR VALUE' usage examples:\n\nin GUI~Editor: set variable OBJECT_NAME.ATTRIBUTE_NAME = [EXPRESSION] OBJECT_NAME.ATTRIBUTE_NAME OPERATOR VALUE\n\nin Code: OBJECT_NAME.ATTRIBUTE_NAME = OBJECT_NAME.ATTRIBUTE_NAME OPERATOR VALUE\n\nreplace my 'OBJECT_NAME' with the name of your desired Object (which is containing the desired Attribute)\n\nreplace my 'ATTRIBUTE_NAME' with the name of your desired Attribute (which is contained/added-to/created-within your desired Object)\n\nreplace my 'OPERATOR' with the desired operator's symbol (+, -, *, /, &amp;)\n\nreplace my 'VALUE' with some amount (some number)\n\nso, some examples (in code):\n\nOBJECT_NAME: player\nATTRIBUTE_NAME: good_alignment\nOPERATOR: +\nValue: 1\n\nplayer.good_alignment = player.good_alignment + 1\n\nOBJECT_NAME: player\nATTRIBUTE_NAME: good_alignment\nOPERATOR: +\nValue: 5\n\nplayer.good_alignment = player.good_alignment + 5\n\nOBJECT_NAME: player\nATTRIBUTE_NAME: evil_alignment\nOPERATOR: +\nValue: 1\n\nplayer.evil_alignment = player.evil_alignment + 1\n\nOBJECT_NAME: player\nATTRIBUTE_NAME: evil --- if you don't like my system of labeling/naming using underscores and being more descriptive, lol\nOPERATOR: +\nValue: 1\n\nplayer.evil = player.evil + 1\n\netc etc etc... hopefully you get the idea...\n\n----------------------\n\nconceptually of how it works, using addition as example:\n\ninitial value: player.strength = 0\n\nold value: player.strength = 0\n\nplayer.strength = player.strength + 3\nplayer.strength (new) = player.strength (old: 0) + 3\nplayer.strength (new) = (0) + 3 = 3\n\nnew value: player.strength = 3\n\nold value: player.strength = 3\n\nplayer.strength = player.strength + 3\nplayer.strength (new) = player.strength (old: 3) + 3\nplayer.strength (new) = (3) + 3 = 6\n\nnew value: player.strength = 6\n\nold value: player.strength = 6\n\nplayer.strength = player.strength + 3\nplayer.strength (new) = player.strength (old: 6) + 3\nplayer.strength (new) = (6) + 3 = 9\n\nnew value: player.strength = 9\n\netc etc etc... hopefully you get how it works now.\n\n-----------------\n\nin code, syntax for simple examples:\n\nAddition:\n\nOBJECT_NAME.ATTRIBUTE_NAME = OBJECT_NAME.ATTRIBUTE_NAME + Value\n\nSubtraction:\n\nOBJECT_NAME.ATTRIBUTE_NAME = OBJECT_NAME.ATTRIBUTE_NAME - Value\n\nMultiplication:\n\nOBJECT_NAME.ATTRIBUTE_NAME = OBJECT_NAME.ATTRIBUTE_NAME * Value\n\nDivision (Division: quotient):\n\nOBJECT_NAME.ATTRIBUTE_NAME = OBJECT_NAME.ATTRIBUTE_NAME / Value\n\nModulus (Division: remainder):\n\nOBJECT_NAME.ATTRIBUTE_NAME = OBJECT_NAME.ATTRIBUTE_NAME % Value\n\n--------------------\n\na quick simple 'if' Script usage + Attribute usage example (in code):\n\n(using the special 'changed' Script Attribute using a Function for my example)\n\n&lt;object name=\"room\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"changedstrength_integer\" type=\"script\"&gt;\n    example_function\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;function name=\"example_function\"&gt;\n  if (player.strength_integer &gt; 100) {\n    player.strength_integer = 100\n  } else if (player.strength_integer &lt; 0) {\n    player.strength_integer = 0\n  }\n  if (player.strength_integer = 100) {\n    player.strength_string = \"MAX\"\n  } else if (player.strength_integer &gt;= 67) {\n    player.strength_string = \"strong\"\n  } else if (player.strength_integer &gt;= 34) {\n    player.strength_string = \"average\"\n  } else if (player.strength_integer &gt; 0) {\n    player.strength_string = \"weak\"\n  } else {         // conceptually/logically/effectively: if (player.strength_integer = 0) {\n    player.strength_string = \"You are a puny wimp!\"\n  }\n&lt;/function&gt;\n\n</code></pre>\n<hr>\n<p>read my link's contents, to see how to use the 'if' Script with Attributes, for the other half of this great comprehension, which let's you do 90% of everything that you want to do in your game.</p>\n\n",
      "PostDate": "2016-08-23T08:44:12.732647Z",
      "LastEditDate": "2016-08-23T12:41:51.4931588Z"
    },
    {
      "PostId": "7f0b3229-fdc4-4fce-afaf-5d3a28542f02",
      "UserId": 21400,
      "Username": "Lighnagain",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I am working through this, and it is starting to make sense--I absolutely get how to make an action script add onto a player value... still not clear on where/how to set up the player value...",
      "EditableFormat": "markdown",
      "HTML": "<p>I am working through this, and it is starting to make sense--I absolutely get how to make an action script add onto a player value... still not clear on where/how to set up the player value...</p>\n\n",
      "PostDate": "2016-08-24T03:01:14.103481Z",
      "LastEditDate": null
    },
    {
      "PostId": "1d8c91e9-a9ee-4a54-a52f-6b0a9fc62e77",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "for creating/adding an Attribute (and setting its initial Value) that is already created before the game begins, an example:\r\n\r\n```\r\nGUI~Editor:\r\n\r\n'player' Player Object -> 'Attributes' Tab -> Attributes -> Add -> (see below example, repeat as needed)\r\n\r\n(Object Name: player)\r\nAttribute Name: good_alignment\r\nAttribute Type: int // (integer)\r\nAttribute Value: 0\r\n\r\n(Object Name: player)\r\nAttribute Name: neutral_alignment\r\nAttribute Type: int // (integer)\r\nAttribute Value: 0\r\n\r\n(Object Name: player)\r\nAttribute Name: evil_alignment\r\nAttribute Type: int // (integer)\r\nAttribute Value: 0\r\n\r\nwhich produces this in code:\r\n\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"example\">\r\n    <attr name=\"gameid\" type=\"string\">some randomly generated sequence of characters/symbols</attr>\r\n    <attr name=\"version\" type=\"string\">1.0</attr>\r\n    <attr name=\"firstpublished\" type=\"string\">2016</attr>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n      <attr name=\"good_alignment\" type=\"int\">0</attr>\r\n      <attr name=\"neutral_alignment\" type=\"int\">0</attr>\r\n      <attr name=\"evil_alignment\" type=\"int\">0</attr>\r\n    </object>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n-------------------------\r\n\r\nif you want to add/create/set/re-set/change/alter/adjust/etc your Attributes and/or their Values, during game play, you use scripting, for an example (using a 'talk' Verb added to the 'npc1' Object, for the scripting):\r\n\r\n```\r\n<object name=\"data_object\">\r\n</object>\r\n\r\n<object name=\"npc1\">\r\n  <attr name=\"talk\" type=\"script\">\r\n    firsttime {\r\n      msg (\"Save the princess from the evil dragon!\")\r\n      data_object.is_princess_saved_from_dragon_quest_completed = false // this scripting creates/adds the 'is_princess_saved_from_dragon_quest_completed' Boolean Attribute to the 'data_object' Object\r\n    } otherwise {\r\n      if (data_object.is_princess_saved_from_dragon_quest_completed) { // if (data_object.is_princess_saved_from_dragon_quest_completed = true) {\r\n        player.good_alignment = player.good_alignment + 5 // you get +5 good alignment for doing this quest; we're altering/setting/re-setting your 'good_alignment' Integer Attribute's Value, by doing addition (of: +5) upon/with it.\r\n        data_object.is_princess_saved_from_dragon_quest_completed = true // we need to make the quest be completed, so you can't keep getting +5 good alignment, lol.\r\n        msg (\"Thank you for saving the princess, you're making a good reputation for yourself, as a champion for good!\")\r\n      } else {\r\n        msg (\"The princess still needs rescuing... who knows how long she'll last in the dragon's lair... before it gets hungry and eats her up!\")\r\n      }\r\n    }\r\n  </attr>\r\n</object>\r\n\r\n<verb>\r\n  <property>talk</property>\r\n  <pattern>talk</pattern>\r\n  <defaultexpression>You can't talk to that!</defaultexpression>\r\n</verb>\r\n```\r\n\r\n------------------------\r\n\r\nlastly, if you want to display your morality/alignment Attributes in the pane on the right side for the person playing the game:\r\n\r\n```\r\nin the GUI~Editor:\r\n\r\n'player' Player Object -> 'Attributes' Tab -> Status Attributes -> Add -> (see below, repeat as needs)\r\n\r\n(Object Name: player)\r\nStatus Attribute Name: good_alignment\r\nStatus Attribute Value (field...something...): Good Alignment: !\r\n\r\n(Object Name: player)\r\nStatus Attribute Name: neutral_alignment\r\nStatus Attribute Value (field...something...): Neutral Alignment: !\r\n\r\n(Object Name: player)\r\nStatus Attribute Name: evil_alignment\r\nStatus Attribute Value (field...something...): Evil Alignment: !\r\n\r\n// the '!' will be replaced (automatically by quest) with that Attribute's Value, so it's like this:\r\n\r\n(status attribute name: what attribute do you want displayed? : good_alignment)\r\n(status attribute value/field-something: display the string: \"Good Alignment: \") + (display the Value: ! --- which will be replaced by quest with: 0)\r\n\r\nwhich will (initially) display:\r\n\r\nGood Alignment: 0\r\nNeutral Alignment: 0\r\nEvil Alignment: 0\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>for creating/adding an Attribute (and setting its initial Value) that is already created before the game begins, an example:</p>\n<pre><code>GUI~Editor:\n\n'player' Player Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below example, repeat as needed)\n\n(Object Name: player)\nAttribute Name: good_alignment\nAttribute Type: int // (integer)\nAttribute Value: 0\n\n(Object Name: player)\nAttribute Name: neutral_alignment\nAttribute Type: int // (integer)\nAttribute Value: 0\n\n(Object Name: player)\nAttribute Name: evil_alignment\nAttribute Type: int // (integer)\nAttribute Value: 0\n\nwhich produces this in code:\n\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"example\"&gt;\n    &lt;attr name=\"gameid\" type=\"string\"&gt;some randomly generated sequence of characters/symbols&lt;/attr&gt;\n    &lt;attr name=\"version\" type=\"string\"&gt;1.0&lt;/attr&gt;\n    &lt;attr name=\"firstpublished\" type=\"string\"&gt;2016&lt;/attr&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n      &lt;attr name=\"good_alignment\" type=\"int\"&gt;0&lt;/attr&gt;\n      &lt;attr name=\"neutral_alignment\" type=\"int\"&gt;0&lt;/attr&gt;\n      &lt;attr name=\"evil_alignment\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p>if you want to add/create/set/re-set/change/alter/adjust/etc your Attributes and/or their Values, during game play, you use scripting, for an example (using a 'talk' Verb added to the 'npc1' Object, for the scripting):</p>\n<pre><code>&lt;object name=\"data_object\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"npc1\"&gt;\n  &lt;attr name=\"talk\" type=\"script\"&gt;\n    firsttime {\n      msg (\"Save the princess from the evil dragon!\")\n      data_object.is_princess_saved_from_dragon_quest_completed = false // this scripting creates/adds the 'is_princess_saved_from_dragon_quest_completed' Boolean Attribute to the 'data_object' Object\n    } otherwise {\n      if (data_object.is_princess_saved_from_dragon_quest_completed) { // if (data_object.is_princess_saved_from_dragon_quest_completed = true) {\n        player.good_alignment = player.good_alignment + 5 // you get +5 good alignment for doing this quest; we're altering/setting/re-setting your 'good_alignment' Integer Attribute's Value, by doing addition (of: +5) upon/with it.\n        data_object.is_princess_saved_from_dragon_quest_completed = true // we need to make the quest be completed, so you can't keep getting +5 good alignment, lol.\n        msg (\"Thank you for saving the princess, you're making a good reputation for yourself, as a champion for good!\")\n      } else {\n        msg (\"The princess still needs rescuing... who knows how long she'll last in the dragon's lair... before it gets hungry and eats her up!\")\n      }\n    }\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;talk&lt;/property&gt;\n  &lt;pattern&gt;talk&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't talk to that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n</code></pre>\n<hr>\n<p>lastly, if you want to display your morality/alignment Attributes in the pane on the right side for the person playing the game:</p>\n<pre><code>in the GUI~Editor:\n\n'player' Player Object -&gt; 'Attributes' Tab -&gt; Status Attributes -&gt; Add -&gt; (see below, repeat as needs)\n\n(Object Name: player)\nStatus Attribute Name: good_alignment\nStatus Attribute Value (field...something...): Good Alignment: !\n\n(Object Name: player)\nStatus Attribute Name: neutral_alignment\nStatus Attribute Value (field...something...): Neutral Alignment: !\n\n(Object Name: player)\nStatus Attribute Name: evil_alignment\nStatus Attribute Value (field...something...): Evil Alignment: !\n\n// the '!' will be replaced (automatically by quest) with that Attribute's Value, so it's like this:\n\n(status attribute name: what attribute do you want displayed? : good_alignment)\n(status attribute value/field-something: display the string: \"Good Alignment: \") + (display the Value: ! --- which will be replaced by quest with: 0)\n\nwhich will (initially) display:\n\nGood Alignment: 0\nNeutral Alignment: 0\nEvil Alignment: 0\n</code></pre>\n\n",
      "PostDate": "2016-08-24T23:09:56.8125123Z",
      "LastEditDate": null
    },
    {
      "PostId": "6fce4e16-ac31-4e40-9228-c7b3d39c9dc6",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "here's a step by step guide to creating a quick demo game that you can study and play, seeing it in action in what it does:\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/5387/i-really-need-help#37375\r\n\r\nlet me know if you are having trouble with following/doing any part of it!",
      "EditableFormat": "markdown",
      "HTML": "<p>here's a step by step guide to creating a quick demo game that you can study and play, seeing it in action in what it does:</p>\n<p>http://textadventures.co.uk/forum/quest/topic/5387/i-really-need-help#37375</p>\n<p>let me know if you are having trouble with following/doing any part of it!</p>\n\n",
      "PostDate": "2016-08-24T23:13:24.8548915Z",
      "LastEditDate": null
    }
  ]
}
