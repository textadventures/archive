{
  "Topic": {
    "TopicId": "gch3krqvbkq6y8iaiahm7w",
    "ForumId": "10",
    "Title": "Unresolved text?",
    "LastUpdated": "2020-02-11T00:06:13.2525317Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "9f90a1c6-6c5f-4a03-8034-4540d8a7e6ca",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "from what I understand if the conditions of a script command are not met then the unresolved text is printed.\r\nThis does not seem to be happening.\r\nFor example if I was to type GO DOOR when standing in a forest then I'd expect the unsolved text of \"THERE ARE NO DOORS HERE\" to be displayed after the script has checked for a door at the current location.",
      "EditableFormat": "markdown",
      "HTML": "<p>from what I understand if the conditions of a script command are not met then the unresolved text is printed.<br>\nThis does not seem to be happening.<br>\nFor example if I was to type GO DOOR when standing in a forest then I'd expect the unsolved text of \"THERE ARE NO DOORS HERE\" to be displayed after the script has checked for a door at the current location.</p>\n\n",
      "PostDate": "2020-02-11T00:06:13.2525317Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bb2f751f-2406-400f-8d66-fa954b37add4",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The unresolved text is printed if Quest is unable to resolve an object.\r\n\r\nSo if the pattern for the command is `go #object#` and the player types the name of an object that isn't present or doesn't exist, the unresolved string will appear.\r\n\r\nIf your command has the pattern `go door` then no resolution takes place - it is up to your script to check for doors and display an appropriate message.",
      "EditableFormat": "markdown",
      "HTML": "<p>The unresolved text is printed if Quest is unable to resolve an object.</p>\n<p>So if the pattern for the command is <code>go #object#</code> and the player types the name of an object that isn't present or doesn't exist, the unresolved string will appear.</p>\n<p>If your command has the pattern <code>go door</code> then no resolution takes place - it is up to your script to check for doors and display an appropriate message.</p>\n\n",
      "PostDate": "2020-02-11T02:21:04.1798802Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9e494666-3ac4-4531-ac02-d67540fbb8f5",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi mrangel\r\n\r\nSo this would be like typing a certain adverb followed by any noun\r\nDig #object#\r\nwould be suitable for dig potatoes, dig weeds, dig garden etc.\r\n\r\nThat solves my problem on how to cover the player when typing Dig (any), Drink (any), etc; so that a object that is not in a pattern falls back on a certain message in the 'no resolution' being displayed. Useful.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi mrangel</p>\n<p>So this would be like typing a certain adverb followed by any noun<br>\nDig #object#<br>\nwould be suitable for dig potatoes, dig weeds, dig garden etc.</p>\n<p>That solves my problem on how to cover the player when typing Dig (any), Drink (any), etc; so that a object that is not in a pattern falls back on a certain message in the 'no resolution' being displayed. Useful.</p>\n\n",
      "PostDate": "2020-02-11T04:21:52.1381215Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
