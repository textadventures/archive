{
  "Topic": {
    "TopicId": "4885",
    "ForumId": "10",
    "Title": "If condition nesting",
    "LastUpdated": "2014-12-12T21:00:34+00:00",
    "ReplyCount": 18
  },
  "Posts": [
    {
      "PostId": "32766",
      "UserId": 0,
      "Username": "OurJud",
      "UserAvatar": "7473_1417206896.jpg",
      "UserGravatar": "7892e1059c02a91b34ffd60deb7402ff",
      "EditableText": "I still can't get my head around nesting complex 'if' scripts  <!-- s:x --><img src=\"{SMILIES_PATH}/icon_mad.gif\" alt=\":x\" title=\"Mad\" /><!-- s:x --> \n\nI want to force my player to take 'take' two items before a command to leave the room will trigger.\n\nI set the command pattern (leave; go out; out, etc) and then run the following script, but it doesn't work and typically, I can't see what I need to do in order to fix it.\n\n[code:1cvwk05l]if (Got(address book)) {\n}\nelse if (Got(ePad)) {\n  MoveObject (player, kitchen)\n}\nelse {\n  if (not Got(address book)) {\n    msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)\n  }\n  else if (not Got(ePad)) {\n    msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)\n  }\n}[/code:1cvwk05l]\n\nI then tried this, and initially thought I had it, but this allows me to leave, if I take just one of the objects.\n\n[code:1cvwk05l]if (Got(address book)) {\n}\nif (Got(ePad)) {\n  MoveObject (player, kitchen)\n}\nelse {\n  if (not Got(address book)) {\n    msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)\n  }\n  else if (not Got(ePad)) {\n    msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)\n  }\n}[/code:1cvwk05l]",
      "EditableFormat": "bbcode",
      "HTML": "I still can't get my head around nesting complex 'if' scripts  <!-- s:x --><img src=\"{SMILIES_PATH}/icon_mad.gif\" alt=\":x\" title=\"Mad\" /><!-- s:x --> <br/><br/>I want to force my player to take 'take' two items before a command to leave the room will trigger.<br/><br/>I set the command pattern (leave; go out; out, etc) and then run the following script, but it doesn't work and typically, I can't see what I need to do in order to fix it.<br/><br/><pre><code>if (Got(address book)) {<br/>}<br/>else if (Got(ePad)) {<br/>  MoveObject (player, kitchen)<br/>}<br/>else {<br/>  if (not Got(address book)) {<br/>    msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)<br/>  }<br/>  else if (not Got(ePad)) {<br/>    msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)<br/>  }<br/>}</code></pre><br/><br/>I then tried this, and initially thought I had it, but this allows me to leave, if I take just one of the objects.<br/><br/><pre><code>if (Got(address book)) {<br/>}<br/>if (Got(ePad)) {<br/>  MoveObject (player, kitchen)<br/>}<br/>else {<br/>  if (not Got(address book)) {<br/>    msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)<br/>  }<br/>  else if (not Got(ePad)) {<br/>    msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)<br/>  }<br/>}</code></pre>",
      "PostDate": "2014-12-11T07:12:47+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32767",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "You almost had it. Since you want both conditions to be true, you need to check for them together, in the positive form you have:\n\n[code:11187i3w]if (Got(address book) and Got(ePad)) {\n  MoveObject (player, kitchen)\n} else {\n  if (not Got(address book)) {\n    msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)\n  }  else if (not Got(ePad)) {\n    msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)\n  }\n}[/code:11187i3w]\nThe other way to do it is to handle the exception cases first. Then the good case falls out at the bottom:\n\n[code:11187i3w]  if (not Got(address book)) {\n    msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)\n  } else if (not Got(ePad)) {\n    msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)\n  } else {\n    // Must have both&#46;\n    MoveObject (player, kitchen)\n  }[/code:11187i3w]",
      "EditableFormat": "bbcode",
      "HTML": "You almost had it. Since you want both conditions to be true, you need to check for them together, in the positive form you have:<br/><br/><pre><code>if (Got(address book) and Got(ePad)) {<br/>  MoveObject (player, kitchen)<br/>} else {<br/>  if (not Got(address book)) {<br/>    msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)<br/>  }  else if (not Got(ePad)) {<br/>    msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)<br/>  }<br/>}</code></pre><br/>The other way to do it is to handle the exception cases first. Then the good case falls out at the bottom:<br/><br/><pre><code>  if (not Got(address book)) {<br/>    msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)<br/>  } else if (not Got(ePad)) {<br/>    msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)<br/>  } else {<br/>    // Must have both&#46;<br/>    MoveObject (player, kitchen)<br/>  }</code></pre>",
      "PostDate": "2014-12-11T08:03:10+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32769",
      "UserId": 0,
      "Username": "OurJud",
      "UserAvatar": "7473_1417206896.jpg",
      "UserGravatar": "7892e1059c02a91b34ffd60deb7402ff",
      "EditableText": "Now you see, your first example uses something I wished the 'if' scripts had.. and it seems they do! The 'and' condition. Where on earth is this is the UI??\n\nAnyway, thank you <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Now you see, your first example uses something I wished the 'if' scripts had.. and it seems they do! The 'and' condition. Where on earth is this is the UI??<br/><br/>Anyway, thank you <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2014-12-11T08:19:46+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32770",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "you could also do it this way (sometimes it makes the nesting 'and~or~not' logic operators easier; especially compared to trying to get multiple 'ands' and 'ors' working on the same single line, lol):\n\n[code:3apbzy6o]if (Got(address book)) {\n  if (Got(ePad)) {\n    MoveObject (player, kitchen)\n  } else if (not Got(ePad)) {\n    msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)\n  }\n} else if (not Got(address book)) {\n  msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)\n}[/code:3apbzy6o]\n\nor (had to massively adjust for logic, yet it still feels~seems wrong,... this is a very poor ordering-structure to use, as hopefully can be seen below):\n\n[code:3apbzy6o]if (Got(address book)) {\n  if (Got(ePad)) {\n    MoveObject (player, kitchen)\n  } \n}\nif (not Got(address book)) {\n  if (not Got(ePad)) {\n    msg (&quot;You decide it would be better to take the ePad and the address book&#46;&lt;br/&gt;&quot;)\n  } else {\n    msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)\n  }\n} else if (not Got(epad)) {\n  (&quot;You decide it would be better to take the ePad&#46;&quot;)\n}[/code:3apbzy6o]",
      "EditableFormat": "bbcode",
      "HTML": "you could also do it this way (sometimes it makes the nesting 'and~or~not' logic operators easier; especially compared to trying to get multiple 'ands' and 'ors' working on the same single line, lol):<br/><br/><pre><code>if (Got(address book)) {<br/>  if (Got(ePad)) {<br/>    MoveObject (player, kitchen)<br/>  } else if (not Got(ePad)) {<br/>    msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)<br/>  }<br/>} else if (not Got(address book)) {<br/>  msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)<br/>}</code></pre><br/><br/>or (had to massively adjust for logic, yet it still feels~seems wrong,... this is a very poor ordering-structure to use, as hopefully can be seen below):<br/><br/><pre><code>if (Got(address book)) {<br/>  if (Got(ePad)) {<br/>    MoveObject (player, kitchen)<br/>  } <br/>}<br/>if (not Got(address book)) {<br/>  if (not Got(ePad)) {<br/>    msg (&quot;You decide it would be better to take the ePad and the address book&#46;&lt;br/&gt;&quot;)<br/>  } else {<br/>    msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)<br/>  }<br/>} else if (not Got(epad)) {<br/>  (&quot;You decide it would be better to take the ePad&#46;&quot;)<br/>}</code></pre>",
      "PostDate": "2014-12-11T08:31:11+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32772",
      "UserId": 0,
      "Username": "OurJud",
      "UserAvatar": "7473_1417206896.jpg",
      "UserGravatar": "7892e1059c02a91b34ffd60deb7402ff",
      "EditableText": "Thanks, HK, I like the logic of the second, with the 'ePad and the address' condition.\n\nActually, I've just discovered another logic problem with this.\n\nYou see, the two items are on the body of a person you've just shot, and you only know they're there if you search the body, meaning that if the player tries to leave without searching the body first, they will still get the message &quot;You decide it would be better to take the ePad.&quot; which would confuse them and make them wonder what ePad the game was referring to.\n\nSo, I set a flag on the player once they've searched the body, but I can't figure out how to include the 'if player has/has not got flag' into the script Jay provided.\n\nIf the player tries to leave before searching the body, it needs to say something like: &quot;You turn to leave, but stop, convinced there must be something here than can help you.&quot;",
      "EditableFormat": "bbcode",
      "HTML": "Thanks, HK, I like the logic of the second, with the 'ePad and the address' condition.<br/><br/>Actually, I've just discovered another logic problem with this.<br/><br/>You see, the two items are on the body of a person you've just shot, and you only know they're there if you search the body, meaning that if the player tries to leave without searching the body first, they will still get the message &quot;You decide it would be better to take the ePad.&quot; which would confuse them and make them wonder what ePad the game was referring to.<br/><br/>So, I set a flag on the player once they've searched the body, but I can't figure out how to include the 'if player has/has not got flag' into the script Jay provided.<br/><br/>If the player tries to leave before searching the body, it needs to say something like: &quot;You turn to leave, but stop, convinced there must be something here than can help you.&quot;",
      "PostDate": "2014-12-11T08:58:47+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32775",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "using mine (too lazy to use Jay's lol):\n\nusing now 3 layers that you posed on how to do:\n\n(in this case) you add it to the top layer (the least indented layer), see below and see if you see what I did (lol, lots of 'sees' used)\nor, to say it in more detail:\nthe more left (less indented) the layer, the more it's an outer (top) layer. The more to the right (more indented), the more it's an inner (bottom) layer.\n\n[code:16smylly]if (xxx&#46;searched = true) {\n  if (Got(address book)) {\n    if (Got(ePad)) {\n      MoveObject (player, kitchen)\n    } else if (not Got(ePad)) {\n      msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)\n    }\n  } else if (not Got(address book)) {\n    msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)\n  }\n} else if (xxx&#46;searched = false) {\n  msg (&quot;You search the body&#46;&quot;)\n  xxx&#46;searched = true\n}[/code:16smylly]\n\n-----------------\n\nsee if you can figure it out with Jay's on your own...\n.\n.\n.\n.\n.\n.\nanswer:\n\n[code:16smylly]if (xxx&#46;searched = true) {\n  if (Got(address book) and Got(ePad)) {\n    MoveObject (player, kitchen)\n  } else {\n    if (not Got(address book)) {\n      msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)\n    }  else if (not Got(ePad)) {\n      msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)\n    }\n  }\n} else if (xxx&#46;searched = false) {\n  msg (&quot;You should search xxx more closely before you go to the next room&#46;&quot;)\n  xxx&#46;searched = true\n}[/code:16smylly]",
      "EditableFormat": "bbcode",
      "HTML": "using mine (too lazy to use Jay's lol):<br/><br/>using now 3 layers that you posed on how to do:<br/><br/>(in this case) you add it to the top layer (the least indented layer), see below and see if you see what I did (lol, lots of 'sees' used)<br/>or, to say it in more detail:<br/>the more left (less indented) the layer, the more it's an outer (top) layer. The more to the right (more indented), the more it's an inner (bottom) layer.<br/><br/><pre><code>if (xxx&#46;searched = true) {<br/>  if (Got(address book)) {<br/>    if (Got(ePad)) {<br/>      MoveObject (player, kitchen)<br/>    } else if (not Got(ePad)) {<br/>      msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)<br/>    }<br/>  } else if (not Got(address book)) {<br/>    msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)<br/>  }<br/>} else if (xxx&#46;searched = false) {<br/>  msg (&quot;You search the body&#46;&quot;)<br/>  xxx&#46;searched = true<br/>}</code></pre><br/><br/>-----------------<br/><br/>see if you can figure it out with Jay's on your own...<br/>.<br/>.<br/>.<br/>.<br/>.<br/>.<br/>answer:<br/><br/><pre><code>if (xxx&#46;searched = true) {<br/>  if (Got(address book) and Got(ePad)) {<br/>    MoveObject (player, kitchen)<br/>  } else {<br/>    if (not Got(address book)) {<br/>      msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)<br/>    }  else if (not Got(ePad)) {<br/>      msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)<br/>    }<br/>  }<br/>} else if (xxx&#46;searched = false) {<br/>  msg (&quot;You should search xxx more closely before you go to the next room&#46;&quot;)<br/>  xxx&#46;searched = true<br/>}</code></pre>",
      "PostDate": "2014-12-11T09:25:07+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32777",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;jaynabonne&quot;:2mtejrgm]\n[code:2mtejrgm]  if (not Got(address book)) {\n    msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)\n  } else if (not Got(ePad)) {\n    msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)\n  } else {\n    // Must have both&#46;\n    MoveObject (player, kitchen)\n  }[/code:2mtejrgm][/quote:2mtejrgm]\nI think this second way is generally better.\n\nThink about why the player should not be able to do something (he does not have this, that is not open, he does not know the combination). You through each one and test to see if that is the case, and if it is, give an appropriate message. You can generally avoid &quot;and&quot;, which the GUI does not readily support, and nesting too. If you realise you have another condition, just insert an extra [i:2mtejrgm]else if[/i:2mtejrgm].",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite><br/><pre><code>  if (not Got(address book)) {<br/>    msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)<br/>  } else if (not Got(ePad)) {<br/>    msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)<br/>  } else {<br/>    // Must have both&#46;<br/>    MoveObject (player, kitchen)<br/>  }</code></pre></blockquote><br/>I think this second way is generally better.<br/><br/>Think about why the player should not be able to do something (he does not have this, that is not open, he does not know the combination). You through each one and test to see if that is the case, and if it is, give an appropriate message. You can generally avoid &quot;and&quot;, which the GUI does not readily support, and nesting too. If you realise you have another condition, just insert an extra <span style=\"font-style:italic;\">else if</span>",
      "PostDate": "2014-12-11T12:40:33+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32778",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "You can tremendously simplify all that (and make it more readable and easier to understand) simply by getting rid of the redundant checks in the elses. Not only is it much more of a pain to put in with the GUI, it's absolutely unnecessary.\n\nIf you have an &quot;if (condition)&quot;, then there is absolutely no point to using &quot;else if (not condition)&quot; after it since the only way it gets to the else anyway is if the opposite condition is true. You're checking something which is *always true*.  Why would you check something that is always true? Just use an &quot;else&quot;.",
      "EditableFormat": "bbcode",
      "HTML": "You can tremendously simplify all that (and make it more readable and easier to understand) simply by getting rid of the redundant checks in the elses. Not only is it much more of a pain to put in with the GUI, it's absolutely unnecessary.<br/><br/>If you have an &quot;if (condition)&quot;, then there is absolutely no point to using &quot;else if (not condition)&quot; after it since the only way it gets to the else anyway is if the opposite condition is true. You're checking something which is *always true*.  Why would you check something that is always true? Just use an &quot;else&quot;.",
      "PostDate": "2014-12-11T12:55:11+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32780",
      "UserId": 0,
      "Username": "OurJud",
      "UserAvatar": "7473_1417206896.jpg",
      "UserGravatar": "7892e1059c02a91b34ffd60deb7402ff",
      "EditableText": "[quote=&quot;HegemonKhan&quot;:3kdjhwgh]\nanswer:\n\n[code:3kdjhwgh]if (xxx&#46;searched = true) {\n  if (Got(address book) and Got(ePad)) {\n    MoveObject (player, kitchen)\n  } else {\n    if (not Got(address book)) {\n      msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)\n    }  else if (not Got(ePad)) {\n      msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)\n    }\n  }\n} else if (xxx&#46;searched = false) {\n  msg (&quot;You should search xxx more closely before you go to the next room&#46;&quot;)\n  xxx&#46;searched = true\n}[/code:3kdjhwgh][/quote:3kdjhwgh]\nThis sounds like what I want, HK, but I'm not clear on the 'xxx.searched - true' bit.\n\nAre you saying I put the object's name in place of 'xxx' ?\n\nAnd also, how does it know that 'xxx.searched = true' refers to the body? I feel like I need to do something else, other than just insert this code, but you don't say what?\n\nOkay, I tried putting 'lance.searched = true' (Lance being the name of the dead guy) but when I tested it in-game, I got the error:\n\n[code:3kdjhwgh]Error running script&#058; Error compiling expression 'lance&#46;searched = true'&#58; CompareElement&#58; Operation 'Equal' is not defined for types 'Object' and 'Boolean[/code:3kdjhwgh]",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>HegemonKhan wrote:</cite><br/>answer:<br/><br/><pre><code>if (xxx&#46;searched = true) {<br/>  if (Got(address book) and Got(ePad)) {<br/>    MoveObject (player, kitchen)<br/>  } else {<br/>    if (not Got(address book)) {<br/>      msg (&quot;You decide it would be better to take the address book&#46;&lt;br/&gt;&quot;)<br/>    }  else if (not Got(ePad)) {<br/>      msg (&quot;You decide it would be better to take the ePad&#46;&lt;br/&gt;&quot;)<br/>    }<br/>  }<br/>} else if (xxx&#46;searched = false) {<br/>  msg (&quot;You should search xxx more closely before you go to the next room&#46;&quot;)<br/>  xxx&#46;searched = true<br/>}</code></pre></blockquote><br/>This sounds like what I want, HK, but I'm not clear on the 'xxx.searched - true' bit.<br/><br/>Are you saying I put the object's name in place of 'xxx' ?<br/><br/>And also, how does it know that 'xxx.searched = true' refers to the body? I feel like I need to do something else, other than just insert this code, but you don't say what?<br/><br/>Okay, I tried putting 'lance.searched = true' (Lance being the name of the dead guy) but when I tested it in-game, I got the error:<br/><br/><pre><code>Error running script&#058; Error compiling expression 'lance&#46;searched = true'&#58; CompareElement&#58; Operation 'Equal' is not defined for types 'Object' and 'Boolean</code></pre>",
      "PostDate": "2014-12-11T13:30:40+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32782",
      "UserId": 0,
      "Username": "OurJud",
      "UserAvatar": "7473_1417206896.jpg",
      "UserGravatar": "7892e1059c02a91b34ffd60deb7402ff",
      "EditableText": "Done it!!\n\nI just went back to setting a flag on the player when he searches the body, then checked for that instead of using 'if (xxx.searched = true) {'\n\nThanks, everyone.\n\nFor reference, the working script code is:\n\n[code:2wel3vsm]if (GetBoolean(player, &quot;lancesearched&quot;)) {\n  if (Got(address book) and Got(ePad)) {\n    MoveObject (player, kitchen)\n  }\n  else {\n    if (not Got(address book)) {\n      msg (&quot;You decide it would be better to take the address book as its probably full of useful information&#46;&lt;br/&gt;&quot;)\n    }\n    else if (not Got(ePad)) {\n      msg (&quot;You decide it would be better to take the ePad as its probably full of useful information&#46;&#46;&lt;br/&gt;&quot;)\n    }\n  }\n}\nelse if (not GetBoolean(player, &quot;lancesearched&quot;)) {\n  msg (&quot;You turn to leave, but stop, convinced there must be &lt;i&gt;something&lt;/i&gt; here that can help you&#46;&quot;)\n}[/code:2wel3vsm]",
      "EditableFormat": "bbcode",
      "HTML": "Done it!!<br/><br/>I just went back to setting a flag on the player when he searches the body, then checked for that instead of using 'if (xxx.searched = true) {'<br/><br/>Thanks, everyone.<br/><br/>For reference, the working script code is:<br/><br/><pre><code>if (GetBoolean(player, &quot;lancesearched&quot;)) {<br/>  if (Got(address book) and Got(ePad)) {<br/>    MoveObject (player, kitchen)<br/>  }<br/>  else {<br/>    if (not Got(address book)) {<br/>      msg (&quot;You decide it would be better to take the address book as its probably full of useful information&#46;&lt;br/&gt;&quot;)<br/>    }<br/>    else if (not Got(ePad)) {<br/>      msg (&quot;You decide it would be better to take the ePad as its probably full of useful information&#46;&#46;&lt;br/&gt;&quot;)<br/>    }<br/>  }<br/>}<br/>else if (not GetBoolean(player, &quot;lancesearched&quot;)) {<br/>  msg (&quot;You turn to leave, but stop, convinced there must be &lt;i&gt;something&lt;/i&gt; here that can help you&#46;&quot;)<br/>}</code></pre>",
      "PostDate": "2014-12-11T13:50:11+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32784",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Just to beat a dead horse, you can change this:\n\n[code:699s400m]else if (not GetBoolean(player, &quot;lancesearched&quot;)[/code:699s400m]\n\nto this:\n\n[code:699s400m]else[/code:699s400m]\nIf the &quot;if&quot; is not true, then you already know GetBoolean(player, &quot;lancesearched&quot;) is false, so there is no need to check for it again. It can't be anything but.",
      "EditableFormat": "bbcode",
      "HTML": "Just to beat a dead horse, you can change this:<br/><br/><pre><code>else if (not GetBoolean(player, &quot;lancesearched&quot;)</code></pre><br/><br/>to this:<br/><br/><pre><code>else</code></pre><br/>If the &quot;if&quot; is not true, then you already know GetBoolean(player, &quot;lancesearched&quot;) is false, so there is no need to check for it again. It can't be anything but.",
      "PostDate": "2014-12-11T16:52:58+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32785",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "@OurJud:\n\nmy bad, I should have explained, but I assumed you understood, and so I didn't do so.\n\nya, change the 'xxx' to whatever the Object's 'name' is that is involved, and also, change 'searched' to whatever you want as (or what is) the 'name' of (or that you choosen for) your Boolean  Attribute (SetObjectFlagOn~Off).\n\nI used the 'xxx' and 'searched' as I don't know what your words that you're using for them, are. I wasn't thinking, as I should have used 'xxx' also, instead of 'searched' to convey to fill it in with what you're using for your Boolean Attribute's 'name', lol.\n\n--------------------------\n\nGetBoolean (object_name, &quot;attribute_name&quot;)\nGetBoolean (xxx, &quot;xxx&quot;) // my laziness as 'xxx' is quicker than: 'object_name' and 'attribute_name', lol\nie: GetBoolean (player, &quot;lancesearched&quot;)\n\nis the same as:\n\nobject_name.attribute_name = true\nxxx.xxx = true\nie: player.lancesearched = true\n\n----\n\nnot GetBoolean (object_name, &quot;attribute_name&quot;)\nnot GetBoolean (xxx, &quot;xxx&quot;) // my laziness as 'xxx' is quicker to write~type in than: 'object_name' and 'attribute_name', lol\nie: not GetBoolean (player, &quot;lancesearched&quot;)\n\nis the same as:\n\nobject_name.attribute_name = false\nxxx.xxx = false\nie: player.lancesearched = false",
      "EditableFormat": "bbcode",
      "HTML": "@OurJud:<br/><br/>my bad, I should have explained, but I assumed you understood, and so I didn't do so.<br/><br/>ya, change the 'xxx' to whatever the Object's 'name' is that is involved, and also, change 'searched' to whatever you want as (or what is) the 'name' of (or that you choosen for) your Boolean  Attribute (SetObjectFlagOn~Off).<br/><br/>I used the 'xxx' and 'searched' as I don't know what your words that you're using for them, are. I wasn't thinking, as I should have used 'xxx' also, instead of 'searched' to convey to fill it in with what you're using for your Boolean Attribute's 'name', lol.<br/><br/>--------------------------<br/><br/>GetBoolean (object_name, &quot;attribute_name&quot;)<br/>GetBoolean (xxx, &quot;xxx&quot;) // my laziness as 'xxx' is quicker than: 'object_name' and 'attribute_name', lol<br/>ie: GetBoolean (player, &quot;lancesearched&quot;)<br/><br/>is the same as:<br/><br/>object_name.attribute_name = true<br/>xxx.xxx = true<br/>ie: player.lancesearched = true<br/><br/>----<br/><br/>not GetBoolean (object_name, &quot;attribute_name&quot;)<br/>not GetBoolean (xxx, &quot;xxx&quot;) // my laziness as 'xxx' is quicker to write~type in than: 'object_name' and 'attribute_name', lol<br/>ie: not GetBoolean (player, &quot;lancesearched&quot;)<br/><br/>is the same as:<br/><br/>object_name.attribute_name = false<br/>xxx.xxx = false<br/>ie: player.lancesearched = false",
      "PostDate": "2014-12-11T20:07:06+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32786",
      "UserId": 0,
      "Username": "OurJud",
      "UserAvatar": "7473_1417206896.jpg",
      "UserGravatar": "7892e1059c02a91b34ffd60deb7402ff",
      "EditableText": "[quote=&quot;jaynabonne&quot;:o1h9c5fl]Just to beat a dead horse, you can change this:\n\n[code:o1h9c5fl]else if (not GetBoolean(player, &quot;lancesearched&quot;)[/code:o1h9c5fl]\n\nto this:\n\n[code:o1h9c5fl]else[/code:o1h9c5fl]\nIf the &quot;if&quot; is not true, then you already know GetBoolean(player, &quot;lancesearched&quot;) is false, so there is no need to check for it again. It can't be anything but.[/quote:o1h9c5fl]\nUnderstood, Jay.\n\nThanks, HK, but out of interest why did you choose to use 'true/false' values instead of the 'has/has not flag' ?\n\nI think sometimes the reason I find your instructions so difficult to follow is because you code rather than use the UI, so there's always differences. When you supply a block of code to answer a question I've asked, it more often than not means nothing because it looks so different to the code I see when switching to it from the UI. You also seem to prefer using attributes and variables, rather than the conventional UI functions. Not that those functions aren't there in the UI, but I never use them as so far I've been able to do the things I need with 'ifs', flags, etc.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>Just to beat a dead horse, you can change this:<br/><br/><pre><code>else if (not GetBoolean(player, &quot;lancesearched&quot;)</code></pre><br/><br/>to this:<br/><br/><pre><code>else</code></pre><br/>If the &quot;if&quot; is not true, then you already know GetBoolean(player, &quot;lancesearched&quot;) is false, so there is no need to check for it again. It can't be anything but.</blockquote><br/>Understood, Jay.<br/><br/>Thanks, HK, but out of interest why did you choose to use 'true/false' values instead of the 'has/has not flag' ?<br/><br/>I think sometimes the reason I find your instructions so difficult to follow is because you code rather than use the UI, so there's always differences. When you supply a block of code to answer a question I've asked, it more often than not means nothing because it looks so different to the code I see when switching to it from the UI. You also seem to prefer using attributes and variables, rather than the conventional UI functions. Not that those functions aren't there in the UI, but I never use them as so far I've been able to do the things I need with 'ifs', flags, etc.",
      "PostDate": "2014-12-11T22:00:52+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32796",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "well... the:\n\nif (orc.dead = false) {\n\nis faster+shorter to type than:\n\nif (HasBoolean (orc, &quot;dead&quot;) = true) {\n\nor shortened to (as Jay prefers): if (HasBoolean (orc, &quot;dead&quot;)) {\n\nHK is VERY LAZY! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\nalso though, in coding, this uses the generic~universal syntax structure, so again, it's faster.\n\nObject.Attribute = Value_or_Expression\n\norc.dead = false\n\nwhich can be quickly switched to any other Attribute Type, as this (Object.Attribute=Value_or_Expression) is the generic~universal syntax structure:\n\norc.dead = true\norc.strength = 100\norc.skin_color = &quot;green&quot;\norc.equipment_list = split (&quot;sword;mail;shield&quot;, &quot;;&quot;)\n\n---------------\n\nas to why I add the unneccessary '=true' and 'else if (=false)' is because I need to do so, to know what is going on and~or to line it up with its upper line.\n\nJay hates this though. (when~if I become as good a coder as Jay, then I'll hate it too, lol)\n\n------------\n\nyep, lol:\n\n90% of everything that you want to do in your game uses just 2 (SUPER) Scripts:\n\n1. the 'if' Script\n\n2. the 'set a variable or attribute' Script (your use of 'quest:flags' of 'SetObjectFlagOn~Off' is just merely a different way of setting a Boolean Type Attribute, which the 'set a variable or attribute' Script does, along with all the other types of attributes too, compared to just being able to set boolean attributes)",
      "EditableFormat": "bbcode",
      "HTML": "well... the:<br/><br/>if (orc.dead = false) {<br/><br/>is faster+shorter to type than:<br/><br/>if (HasBoolean (orc, &quot;dead&quot;) = true) {<br/><br/>or shortened to (as Jay prefers): if (HasBoolean (orc, &quot;dead&quot;)) {<br/><br/>HK is VERY LAZY! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>also though, in coding, this uses the generic~universal syntax structure, so again, it's faster.<br/><br/>Object.Attribute = Value_or_Expression<br/><br/>orc.dead = false<br/><br/>which can be quickly switched to any other Attribute Type, as this (Object.Attribute=Value_or_Expression) is the generic~universal syntax structure:<br/><br/>orc.dead = true<br/>orc.strength = 100<br/>orc.skin_color = &quot;green&quot;<br/>orc.equipment_list = split (&quot;sword;mail;shield&quot;, &quot;;&quot;)<br/><br/>---------------<br/><br/>as to why I add the unneccessary '=true' and 'else if (=false)' is because I need to do so, to know what is going on and~or to line it up with its upper line.<br/><br/>Jay hates this though. (when~if I become as good a coder as Jay, then I'll hate it too, lol)<br/><br/>------------<br/><br/>yep, lol:<br/><br/>90% of everything that you want to do in your game uses just 2 (SUPER) Scripts:<br/><br/>1. the 'if' Script<br/><br/>2. the 'set a variable or attribute' Script (your use of 'quest:flags' of 'SetObjectFlagOn~Off' is just merely a different way of setting a Boolean Type Attribute, which the 'set a variable or attribute' Script does, along with all the other types of attributes too, compared to just being able to set boolean attributes)",
      "PostDate": "2014-12-12T07:56:19+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32797",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "HK, first I think you mean GetBoolean instead of HasBoolean. The former returns the value; the latter checks if a boolean attribute exists, and has very rare uses.\n\nGetBoolean can actually be ultimately less to type, because then you don't need to create an attribute - and creating an attribute takes more typing! (I am lazy as well, and True Laziness requires looking at it from all angles. lol) Also, you might want do only define a flag on an object when the flag is actually relevant. It can be cleaner to only actually set a flag when you're using it, rather than defining 20 possible flags on an object, the vast majority of which may be clutter.\n\nif (orc.dead = false) {\n\nrequires you to actually create a &quot;dead&quot; attribute and set it to false. Otherwise, you'll get a script error about &quot;dead&quot; not existing.\n\nif (GetBoolean (orc, &quot;dead&quot;)) {\n\nwill return false if orc.dead is false *or* if it doesn't exist. It can be more convenient (and safer and more expedient).\n\nI'm not saying always use GetBoolean. If you know for sure an attribute will exist, then the direct method is fine. But GetBoolean has its uses because it's behaviorally different (in other words: they are *not* totally equivalent).",
      "EditableFormat": "bbcode",
      "HTML": "HK, first I think you mean GetBoolean instead of HasBoolean. The former returns the value; the latter checks if a boolean attribute exists, and has very rare uses.<br/><br/>GetBoolean can actually be ultimately less to type, because then you don't need to create an attribute - and creating an attribute takes more typing! (I am lazy as well, and True Laziness requires looking at it from all angles. lol) Also, you might want do only define a flag on an object when the flag is actually relevant. It can be cleaner to only actually set a flag when you're using it, rather than defining 20 possible flags on an object, the vast majority of which may be clutter.<br/><br/>if (orc.dead = false) {<br/><br/>requires you to actually create a &quot;dead&quot; attribute and set it to false. Otherwise, you'll get a script error about &quot;dead&quot; not existing.<br/><br/>if (GetBoolean (orc, &quot;dead&quot;)) {<br/><br/>will return false if orc.dead is false *or* if it doesn't exist. It can be more convenient (and safer and more expedient).<br/><br/>I'm not saying always use GetBoolean. If you know for sure an attribute will exist, then the direct method is fine. But GetBoolean has its uses because it's behaviorally different (in other words: they are *not* totally equivalent).",
      "PostDate": "2014-12-12T10:17:13+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32801",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;jaynabonne&quot;:2ualhof6]if (HasBoolean (orc, &quot;dead&quot;)) {\n\nwill return false if orc.dead is false *or* if it doesn't exist.[/quote:2ualhof6]\njust a type, I am sure, but that should be GetBoolean. HasBoolean will return true if orc.dead is false, because the attribute exists.\n\nAn issue with GetBoolean is that it takes no account of typos. GetBoolean(orc, &quot;deaad&quot;) will return false, whether the orc is dead or not. On the other hand, orc.deaad will throw an error, making the problem much easier to spot and correct.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>if (HasBoolean (orc, &quot;dead&quot;)) {<br/><br/>will return false if orc.dead is false *or* if it doesn't exist.</blockquote><br/>just a type, I am sure, but that should be GetBoolean. HasBoolean will return true if orc.dead is false, because the attribute exists.<br/><br/>An issue with GetBoolean is that it takes no account of typos. GetBoolean(orc, &quot;deaad&quot;) will return false, whether the orc is dead or not. On the other hand, orc.deaad will throw an error, making the problem much easier to spot and correct.",
      "PostDate": "2014-12-12T14:42:45+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32802",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Thanks. And ironic, given what I was saying two paragraphs above. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nYour point about typos is valid. Direct binding is definitely preferred, if the attribute is guaranteed to exist.",
      "EditableFormat": "bbcode",
      "HTML": "Thanks. And ironic, given what I was saying two paragraphs above. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>Your point about typos is valid. Direct binding is definitely preferred, if the attribute is guaranteed to exist.",
      "PostDate": "2014-12-12T14:52:45+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32806",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "good points, thank you, and ya, I meant GetBoolean (pretending that I realized the difference between them which you just explained, lol).\n\nso... each have their pros and cons basically, sometimes 'Object.Attribute=Value' should be used, sometimes 'GetAttribute' should be used, and sometimes 'HasAttribute' should be used, sometimes 'Set (Object, &quot;Attribute&quot;, Value) should be used.\n\n------\n\n(correct me if wrong) to me it seems like the 'Has', 'Get', and 'Set' are more useful when you're a more advanced coder, using advanced parsing (and~or concatinating ~ can't spell) coding, whereas for me, since I usually do have those Attributes existing~created on the Objects initially, then the 'Object.Attribute=Value' works well for me.",
      "EditableFormat": "bbcode",
      "HTML": "good points, thank you, and ya, I meant GetBoolean (pretending that I realized the difference between them which you just explained, lol).<br/><br/>so... each have their pros and cons basically, sometimes 'Object.Attribute=Value' should be used, sometimes 'GetAttribute' should be used, and sometimes 'HasAttribute' should be used, sometimes 'Set (Object, &quot;Attribute&quot;, Value) should be used.<br/><br/>------<br/><br/>(correct me if wrong) to me it seems like the 'Has', 'Get', and 'Set' are more useful when you're a more advanced coder, using advanced parsing (and~or concatinating ~ can't spell) coding, whereas for me, since I usually do have those Attributes existing~created on the Objects initially, then the 'Object.Attribute=Value' works well for me.",
      "PostDate": "2014-12-12T20:38:21+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "32811",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "We've been talking about getting values. Setting is a different story. For one thing, assignment always works, even if the attribute doesn't yet exist. So &quot;object.attribute=value&quot; has little wrong with it. The only reason I'd use &quot;set&quot; over simply assigning is if &quot;attribute&quot; is a variable (e.g. you want to compute the name of the attribute to set). Otherwise, I always just assign.\n\nAnd the other Get methods besides GetBoolean are almost useless (short of the more advanced variable name case). At least GetBoolean returns a decent default if there is no attribute defined (which is at least of boolean type). The others return null. So if you have something like:\n\nn = GetInt(object, attribute)\n\ndespite &quot;n&quot; possibly being equal to null, you can't actually compare it to null, as that check will cause a Quest exception if n happens to be an integer. So basically, GetInt returns a value that you can't check for. There's no way to use the null return value in any useful way. The bottom line is that calling GetInt on a missing attribute will always cause a Quest error at some point, just as simply referencing it directly does.\n\nI would love GetInt to return a default value of the correct type as GetBoolean does (maybe 0). Then you could easily implement things like counters without having to actually set the initial value - it would just return 0 the first time you queried it. The same thing with GetString: returning an empty string instead of null would be much more useful.\n\nThe Has methods are definitely advanced. They have limited use, but when you need them, you need them. There's no other way to do what they do. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "We've been talking about getting values. Setting is a different story. For one thing, assignment always works, even if the attribute doesn't yet exist. So &quot;object.attribute=value&quot; has little wrong with it. The only reason I'd use &quot;set&quot; over simply assigning is if &quot;attribute&quot; is a variable (e.g. you want to compute the name of the attribute to set). Otherwise, I always just assign.<br/><br/>And the other Get methods besides GetBoolean are almost useless (short of the more advanced variable name case). At least GetBoolean returns a decent default if there is no attribute defined (which is at least of boolean type). The others return null. So if you have something like:<br/><br/>n = GetInt(object, attribute)<br/><br/>despite &quot;n&quot; possibly being equal to null, you can't actually compare it to null, as that check will cause a Quest exception if n happens to be an integer. So basically, GetInt returns a value that you can't check for. There's no way to use the null return value in any useful way. The bottom line is that calling GetInt on a missing attribute will always cause a Quest error at some point, just as simply referencing it directly does.<br/><br/>I would love GetInt to return a default value of the correct type as GetBoolean does (maybe 0). Then you could easily implement things like counters without having to actually set the initial value - it would just return 0 the first time you queried it. The same thing with GetString: returning an empty string instead of null would be much more useful.<br/><br/>The Has methods are definitely advanced. They have limited use, but when you need them, you need them. There's no other way to do what they do. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2014-12-12T21:00:34+00:00",
      "LastEditDate": null
    }
  ]
}
