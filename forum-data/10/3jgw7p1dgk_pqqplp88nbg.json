{
  "Topic": {
    "TopicId": "3jgw7p1dgk_pqqplp88nbg",
    "ForumId": "10",
    "Title": "Adding scenes into dialogue based on previous choices?",
    "LastUpdated": "2023-09-23T23:23:32.1190027Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "0520970a-874e-4470-80fd-f4815bf24c50",
      "UserId": 471859,
      "Username": "HiddenDark",
      "AvatarUrl": "https://i.imgur.com/S3isQf8b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello everyone! \r\n\r\nI'm working on a game currently and I've run into a bit of a head scratcher. Essentially what I'm trying to accomplish is this: I want the player to enter conversation with an NPC, the NPC will ask them a small handful of questions. The (lengthy) conversation will then progress. Then, later on, I would like to have the player's answers come back in the conversation. I figure the easiest way is have them use flags but what I'm having an issue of if having the dialogue tree not turn into a nightmare of boxes in the Quest editor. \r\n\r\nWhen doing the \"If object player has flag\" y/n rather than having to post the entire conversation under both the Yes and No answers but with the addition of the couple of extra text boxes of dialogue, my idea was to use functions to insert them and then continue the conversation.  I tried that and it almost works but the problem is I can't get it to work for more than one line of dialogue. Instead of waiting for the function to finish and then proceeding, after the first wait in the function quest immediately continues with the initial dialogue. \r\n\r\n``` </object>\r\n    <object name=\"Test\">\r\n      <inherit name=\"editor_object\" />\r\n      <look type=\"script\">\r\n        msg (\"1 I am an apple seller\")\r\n        wait {\r\n          msg (\"2 I hear you like apples\")\r\n          wait {\r\n            ShowMenu (\"3 Do you like red apples?\", Split(\"Yes;No\", \";\"), false) {\r\n              if (result=\"Yes\") {\r\n                msg (\"4 YesRed\")\r\n                SetObjectFlagOn (player, \"Red\")\r\n              }\r\n              else if (result=\"No\") {\r\n                msg (\"NoRed\")\r\n              }\r\n              wait {\r\n                msg (\"5 I have some apples\")\r\n                wait {\r\n                  if (GetBoolean(player, \"Red\")) {\r\n                    Redtest\r\n                  }\r\n                  msg (\"8 Have a nice day\")\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      </look>\r\n    </object>\r\n  </object>\r\n```\r\nAnd here is the function, very simple. \r\n```  <function name=\"Redtest\">\r\n    msg (\"6 Since you like red apples here is a red apple\")\r\n    wait {\r\n      msg (\"7 I hope you enjoy\")\r\n      wait {\r\n      }\r\n    }\r\n  </function>\r\n```\r\nSo the intent is for the dialogue to go \r\n1 I am an apple seller\r\n(wait for keypress)\r\n2 I hear you like apples\r\n(wait)\r\n3 (ask question) Do you like red apples?\r\n4 YesRed\r\n(wait)\r\n5 I have some apples\r\n(Wait, then If player said yes and has flag, show line 6 from the function)\r\n6 Since you like red apples here is a red apple\r\n(wait and show line 7 from the function)\r\n7 I hope you enjoy\r\n(wait, return to line 8 from the main dialogue)\r\n8 Have a nice day\r\n\r\nInstead, what it's doing is\r\n\r\n1 I am an apple seller\r\n(wait for keypress)\r\n2 I hear you like apples\r\n(wait)\r\n3 (ask question) Do you like red apples?\r\n4 YesRed\r\n(wait)\r\n5 I have some apples\r\n(wait, then if players said yes previously and has flag shows lines 6 from the function & 8 from the main dialogue simultaneously)\r\n6 Since you like red apples here is a red apple\r\n8 Have a nice day\r\n(wait show line 7 from the function)\r\n7 I hope you enjoy\r\n\r\nI hope that made some sense. So yeah, I'm basically just trying to do dialogue easier and have choices that have results later in the conversation and not immediately without having to copy the entire conversation after every single If box. I also struggle (and this is an ongoing issue so advice is VERY welcome) with large conversations becoming incredibly cumbersome and either too big for the screen in the editor or causing the editor to crash. My game is extremely dialogue-heavy and has very long scenes and conversations. To compensate, I've been breaking them up into multiple functions and when one finishes it just calls the next, but it has made any sort of choice trees or branching dialogue extremely unwieldy. \r\n\r\nI know one way would be to do it as:\r\nConversation in Function 1 up to If 1 which either calls function 2 if no or A if yes, \r\nA calls function 2 when finished\r\nFunction 2 runs up until If 2 which either calls function 3 if no or B if yes, \r\netc. \r\nBut if the conversation is going to have multiple choices I'm worried the one conversation is going to end up getting broken into 10 functions and I'm already sitting at around 90 functions, which I don't know if Quest is totally cool with or is going to start causing it problems eventually so if anyone knows if I'm cool to just have hundreds of functions or not I'd love to know and if it IS going to be an issue, what a better way is. \r\n\r\nThank you!",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello everyone!</p>\n<p>I'm working on a game currently and I've run into a bit of a head scratcher. Essentially what I'm trying to accomplish is this: I want the player to enter conversation with an NPC, the NPC will ask them a small handful of questions. The (lengthy) conversation will then progress. Then, later on, I would like to have the player's answers come back in the conversation. I figure the easiest way is have them use flags but what I'm having an issue of if having the dialogue tree not turn into a nightmare of boxes in the Quest editor.</p>\n<p>When doing the \"If object player has flag\" y/n rather than having to post the entire conversation under both the Yes and No answers but with the addition of the couple of extra text boxes of dialogue, my idea was to use functions to insert them and then continue the conversation.  I tried that and it almost works but the problem is I can't get it to work for more than one line of dialogue. Instead of waiting for the function to finish and then proceeding, after the first wait in the function quest immediately continues with the initial dialogue.</p>\n<pre><code>    &lt;object name=\"Test\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;look type=\"script\"&gt;\n        msg (\"1 I am an apple seller\")\n        wait {\n          msg (\"2 I hear you like apples\")\n          wait {\n            ShowMenu (\"3 Do you like red apples?\", Split(\"Yes;No\", \";\"), false) {\n              if (result=\"Yes\") {\n                msg (\"4 YesRed\")\n                SetObjectFlagOn (player, \"Red\")\n              }\n              else if (result=\"No\") {\n                msg (\"NoRed\")\n              }\n              wait {\n                msg (\"5 I have some apples\")\n                wait {\n                  if (GetBoolean(player, \"Red\")) {\n                    Redtest\n                  }\n                  msg (\"8 Have a nice day\")\n                }\n              }\n            }\n          }\n        }\n      &lt;/look&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n</code></pre>\n<p>And here is the function, very simple.</p>\n<pre><code>    msg (\"6 Since you like red apples here is a red apple\")\n    wait {\n      msg (\"7 I hope you enjoy\")\n      wait {\n      }\n    }\n  &lt;/function&gt;\n</code></pre>\n<p>So the intent is for the dialogue to go<br>\n1 I am an apple seller<br>\n(wait for keypress)<br>\n2 I hear you like apples<br>\n(wait)<br>\n3 (ask question) Do you like red apples?<br>\n4 YesRed<br>\n(wait)<br>\n5 I have some apples<br>\n(Wait, then If player said yes and has flag, show line 6 from the function)<br>\n6 Since you like red apples here is a red apple<br>\n(wait and show line 7 from the function)<br>\n7 I hope you enjoy<br>\n(wait, return to line 8 from the main dialogue)<br>\n8 Have a nice day</p>\n<p>Instead, what it's doing is</p>\n<p>1 I am an apple seller<br>\n(wait for keypress)<br>\n2 I hear you like apples<br>\n(wait)<br>\n3 (ask question) Do you like red apples?<br>\n4 YesRed<br>\n(wait)<br>\n5 I have some apples<br>\n(wait, then if players said yes previously and has flag shows lines 6 from the function &amp; 8 from the main dialogue simultaneously)<br>\n6 Since you like red apples here is a red apple<br>\n8 Have a nice day<br>\n(wait show line 7 from the function)<br>\n7 I hope you enjoy</p>\n<p>I hope that made some sense. So yeah, I'm basically just trying to do dialogue easier and have choices that have results later in the conversation and not immediately without having to copy the entire conversation after every single If box. I also struggle (and this is an ongoing issue so advice is VERY welcome) with large conversations becoming incredibly cumbersome and either too big for the screen in the editor or causing the editor to crash. My game is extremely dialogue-heavy and has very long scenes and conversations. To compensate, I've been breaking them up into multiple functions and when one finishes it just calls the next, but it has made any sort of choice trees or branching dialogue extremely unwieldy.</p>\n<p>I know one way would be to do it as:<br>\nConversation in Function 1 up to If 1 which either calls function 2 if no or A if yes,<br>\nA calls function 2 when finished<br>\nFunction 2 runs up until If 2 which either calls function 3 if no or B if yes,<br>\netc.<br>\nBut if the conversation is going to have multiple choices I'm worried the one conversation is going to end up getting broken into 10 functions and I'm already sitting at around 90 functions, which I don't know if Quest is totally cool with or is going to start causing it problems eventually so if anyone knows if I'm cool to just have hundreds of functions or not I'd love to know and if it IS going to be an issue, what a better way is.</p>\n<p>Thank you!</p>\n\n",
      "PostDate": "2023-09-23T23:23:32.1190027Z",
      "LastEditDate": "2023-09-23T23:35:15.9934774Z",
      "link": null
    },
    {
      "PostId": "8b9f7198-ccf5-4974-9c49-2555e22e7fc2",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is this with or without using Pixie's ConvLib?    If you're not using Pixie's Conversation Library, I very Highly recommend it!  It handles most of this pretty easily.  It can be found here: https://github.com/ThePix/quest/wiki/Library:-Conversations\r\n\r\nFor adding conversations later based on leaving and doing things then coming back to the NPC, I find that (when using Pixie's Converstaion LIB) the easiest thing to do is create the conversation object as a \"starting conversation\" and have it a \"waiting\" room.  Then have whatever trigger you like send it into the player's conversation holder to make it appear next time they talk to that NPC.",
      "EditableFormat": "markdown",
      "HTML": "<p>Is this with or without using Pixie's ConvLib?    If you're not using Pixie's Conversation Library, I very Highly recommend it!  It handles most of this pretty easily.  It can be found here: https://github.com/ThePix/quest/wiki/Library:-Conversations</p>\n<p>For adding conversations later based on leaving and doing things then coming back to the NPC, I find that (when using Pixie's Converstaion LIB) the easiest thing to do is create the conversation object as a \"starting conversation\" and have it a \"waiting\" room.  Then have whatever trigger you like send it into the player's conversation holder to make it appear next time they talk to that NPC.</p>\n\n",
      "PostDate": "2023-09-25T18:49:50.2681417Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a56ae298-7381-4d17-9a54-fc6f2002d712",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'd second the suggestion for ConvLib.\r\n\r\nAlternatively, you could try using a parameter and calling the same script again.\r\nFor your example, off the top of my head, your \"look\" script could be something like:\r\n```\r\nif (not IsDefined (\"topic\")) {\r\n  // If we don't have a topic specified, use the starting one\r\n  //   Of course, you could have an `if` here to start the conversation at a different point\r\n  topic = \"line1\"\r\n}\r\nnext = \"\"\r\n\r\n// And then we have all the topics in a list here, so it does whichever one was chosen\r\nswitch (topic) {\r\n  case (\"line1\") {\r\n    msg (\"1 I am an apple seller\")\r\n    next = \"line2\"\r\n  }\r\n  case (\"line2\") {\r\n    msg (\"2 I hear you like apples\")\r\n    next = \"line3\"\r\n  }\r\n  case (\"line3\") {\r\n    // using a dictionary for ShowMenu lets you\r\n    //    set the `result` to something different from the text the player sees\r\n    options = NewStringDictionary()\r\n    dictionary add (options, \"4-yes\", \"Yes\")\r\n    dictionary add (options, \"4-no\", \"No\")\r\n    ShowMenu (\"3 Do you like red apples?\", options, false) {\r\n      do (Test, \"look\", QuickParams (\"topic\", result))\r\n    }\r\n  }\r\n  case (\"4-yes\") {\r\n    msg (\"4 YesRed\")\r\n    SetObjectFlagOn (player, \"Red\")\r\n    next = \"line5\"\r\n  }\r\n  case (\"4-no\") {\r\n    msg (\"NoRed\")\r\n    next = \"line5\"\r\n  }\r\n  case (\"line5\") {\r\n    msg (\"5 I have some apples\")\r\n    // We can use an `if` to choose what to set `next` to\r\n    //    and the tree doesn't get too unwieldy, because the whole conversation isn't inside it\r\n    if (GetBoolean(player, \"Red\")) {\r\n      next = \"line6\"\r\n    }\r\n    else {\r\n      next = \"line8\"\r\n    }\r\n  }\r\n  case (\"line6\") {\r\n    msg (\"6 Since you like red apples here is a red apple\")\r\n    next = \"line7\"\r\n  }\r\n  case (\"line7\") {\r\n    msg (\"7 I hope you enjoy\")\r\n    next = \"line8\"\r\n  }\r\n  case (\"line8\") {\r\n    msg (\"8 Have a nice day\")\r\n  }\r\n}\r\n\r\n// And finally, if that topic set `next`, we do the wait\r\n//    and then call this script again to show the next line\r\n//    this is tail recursion, which is inefficient with memory,\r\n//    but I think it's easier to read in this case\r\nif (not next = \"\") {\r\n  wait {\r\n    do (this, \"look\", QuickParams (\"topic\", next))\r\n  }\r\n}\r\n```\r\n(If you're doing this for a verb other than \"look\", you'd need to change \"look\" both places it appears in that script, but I think everything else should work the same)",
      "EditableFormat": "markdown",
      "HTML": "<p>I'd second the suggestion for ConvLib.</p>\n<p>Alternatively, you could try using a parameter and calling the same script again.<br>\nFor your example, off the top of my head, your \"look\" script could be something like:</p>\n<pre><code>if (not IsDefined (\"topic\")) {\n  // If we don't have a topic specified, use the starting one\n  //   Of course, you could have an `if` here to start the conversation at a different point\n  topic = \"line1\"\n}\nnext = \"\"\n\n// And then we have all the topics in a list here, so it does whichever one was chosen\nswitch (topic) {\n  case (\"line1\") {\n    msg (\"1 I am an apple seller\")\n    next = \"line2\"\n  }\n  case (\"line2\") {\n    msg (\"2 I hear you like apples\")\n    next = \"line3\"\n  }\n  case (\"line3\") {\n    // using a dictionary for ShowMenu lets you\n    //    set the `result` to something different from the text the player sees\n    options = NewStringDictionary()\n    dictionary add (options, \"4-yes\", \"Yes\")\n    dictionary add (options, \"4-no\", \"No\")\n    ShowMenu (\"3 Do you like red apples?\", options, false) {\n      do (Test, \"look\", QuickParams (\"topic\", result))\n    }\n  }\n  case (\"4-yes\") {\n    msg (\"4 YesRed\")\n    SetObjectFlagOn (player, \"Red\")\n    next = \"line5\"\n  }\n  case (\"4-no\") {\n    msg (\"NoRed\")\n    next = \"line5\"\n  }\n  case (\"line5\") {\n    msg (\"5 I have some apples\")\n    // We can use an `if` to choose what to set `next` to\n    //    and the tree doesn't get too unwieldy, because the whole conversation isn't inside it\n    if (GetBoolean(player, \"Red\")) {\n      next = \"line6\"\n    }\n    else {\n      next = \"line8\"\n    }\n  }\n  case (\"line6\") {\n    msg (\"6 Since you like red apples here is a red apple\")\n    next = \"line7\"\n  }\n  case (\"line7\") {\n    msg (\"7 I hope you enjoy\")\n    next = \"line8\"\n  }\n  case (\"line8\") {\n    msg (\"8 Have a nice day\")\n  }\n}\n\n// And finally, if that topic set `next`, we do the wait\n//    and then call this script again to show the next line\n//    this is tail recursion, which is inefficient with memory,\n//    but I think it's easier to read in this case\nif (not next = \"\") {\n  wait {\n    do (this, \"look\", QuickParams (\"topic\", next))\n  }\n}\n</code></pre>\n<p>(If you're doing this for a verb other than \"look\", you'd need to change \"look\" both places it appears in that script, but I think everything else should work the same)</p>\n\n",
      "PostDate": "2023-09-25T20:57:58.4261517Z",
      "LastEditDate": "2023-09-25T20:59:43.2104465Z",
      "link": null
    },
    {
      "PostId": "d62b12d9-fae6-4879-8587-9855ab7a22b8",
      "UserId": 471859,
      "Username": "HiddenDark",
      "AvatarUrl": "https://i.imgur.com/S3isQf8b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oooo I've never heard of it before. I will give it a look, thank you so much for the suggestion, I'm very curious! ",
      "EditableFormat": "markdown",
      "HTML": "<p>Oooo I've never heard of it before. I will give it a look, thank you so much for the suggestion, I'm very curious!</p>\n\n",
      "PostDate": "2023-09-26T05:06:46.9379762Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
