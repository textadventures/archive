{
  "Topic": {
    "TopicId": "hm-fypt0pkgctf3fuyqqng",
    "ForumId": "10",
    "Title": "Problem with loop function",
    "LastUpdated": "2017-01-26T18:38:33.2942962Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "35cb4a02-b882-4179-b8aa-da0d36ba1603",
      "UserId": 115910,
      "Username": "Sebastian2203",
      "AvatarUrl": "https://secure.gravatar.com/avatar/2c6803847fee75ca6b74e1a846b79bc5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So.. I have a problem with the loop \"for\" function.\r\n\r\nSo this loop function that I tried to make, adds lines to a certain \"manifest\" based on the number of population.\r\nIf there are two people then it adds two lines, so far so good.\r\n\r\nBut the problem arises when there is suddenly four people, the loop decides to fire when it is not supposed to.\r\nResulting in FIVE lines for four people.\r\nI have put log scripts near the other scripts so I could pinpoint the exact moment when it happens and it is all confusing.\r\n\r\nI am not sure if this will help\r\n\r\n26/01/2017 19:32:12 Removed 1 pop to stabilize\r\n26/01/2017 19:32:12 Added 1 pop to stabilize<----- NOT SUPPOSED to be here!\r\n26/01/2017 19:32:12 Removed 1 pop to stabilize\r\n26/01/2017 19:32:12 Added 1 pop to stabilize\r\n26/01/2017 19:32:12 Added 1 pop to stabilize\r\n\r\nAnd um... I have no idea how to exactly describe the nature of my coding so I unfortunately have to paste the whole code.\r\n\r\nhttp://pastebin.com/zbQq0D21\r\n\r\nSo the problem lies in page \"X03_Manifest\" (Press CTRL+F and type that, so you don´t have to search trough the code)\r\n\r\nThe problem lies in Manifestscriptcall() which is combination of ManifestNameRNG() and ManifestAgeRNG()\r\nSo it is kinda complicated... \r\n\r\n```\r\n  <function name=\"Manifestscriptcall\" type=\"string\">\r\n    player.manifestRNG = player.manifestRNG + 1\r\n    player.population = player.population - 1\r\n    Log (\"Removed 1 pop to stabilize\")\r\n    for (, player.manifestRNG, player.population, 1) {\r\n      ManifestLoop\r\n    }\r\n    player.population = player.population + 1\r\n    Log (\"Added 1 pop to stabilize\")\r\n    return (ManifestNameRNG() + ManifestAgeRNG())\r\n  </function>\r\n```\r\n\r\n\r\nSo if anyone could help me point out what am I doing wrong, it would help me because I am stuck at this and it makes no sense as why is it happening.",
      "EditableFormat": "markdown",
      "HTML": "<p>So.. I have a problem with the loop \"for\" function.</p>\n<p>So this loop function that I tried to make, adds lines to a certain \"manifest\" based on the number of population.<br>\nIf there are two people then it adds two lines, so far so good.</p>\n<p>But the problem arises when there is suddenly four people, the loop decides to fire when it is not supposed to.<br>\nResulting in FIVE lines for four people.<br>\nI have put log scripts near the other scripts so I could pinpoint the exact moment when it happens and it is all confusing.</p>\n<p>I am not sure if this will help</p>\n<p>26/01/2017 19:32:12 Removed 1 pop to stabilize<br>\n26/01/2017 19:32:12 Added 1 pop to stabilize&lt;----- NOT SUPPOSED to be here!<br>\n26/01/2017 19:32:12 Removed 1 pop to stabilize<br>\n26/01/2017 19:32:12 Added 1 pop to stabilize<br>\n26/01/2017 19:32:12 Added 1 pop to stabilize</p>\n<p>And um... I have no idea how to exactly describe the nature of my coding so I unfortunately have to paste the whole code.</p>\n<p>http://pastebin.com/zbQq0D21</p>\n<p>So the problem lies in page \"X03_Manifest\" (Press CTRL+F and type that, so you don´t have to search trough the code)</p>\n<p>The problem lies in Manifestscriptcall() which is combination of ManifestNameRNG() and ManifestAgeRNG()<br>\nSo it is kinda complicated...</p>\n<pre><code>  &lt;function name=\"Manifestscriptcall\" type=\"string\"&gt;\n    player.manifestRNG = player.manifestRNG + 1\n    player.population = player.population - 1\n    Log (\"Removed 1 pop to stabilize\")\n    for (, player.manifestRNG, player.population, 1) {\n      ManifestLoop\n    }\n    player.population = player.population + 1\n    Log (\"Added 1 pop to stabilize\")\n    return (ManifestNameRNG() + ManifestAgeRNG())\n  &lt;/function&gt;\n</code></pre>\n<p>So if anyone could help me point out what am I doing wrong, it would help me because I am stuck at this and it makes no sense as why is it happening.</p>\n\n",
      "PostDate": "2017-01-26T18:38:33.2942962Z",
      "LastEditDate": "2017-01-26T19:27:59.3101024Z"
    },
    {
      "PostId": "7986ee96-28c3-4446-81f6-0c9d766be3ff",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I haven't looked at all of your code (I'd need to see what your 'ManifestLoop',' ManifestNameRNG', and 'ManifestAgeRNG' does), but let's just look at the process of your 'Manifestscriptcall' Function:\r\n\r\n1. player.manifestRNG = player.manifestRNG + 1\r\n2. player.population = player.population - 1\r\n3. Log (\"Removed 1 pop to stabilize\")\r\n4. for (, player.manifestRNG, player.population, 1) {\r\n\r\nfor #4, it will repeat/iterate/run, running the 'ManifestLoop' Function, a number of times based upon the difference of 'player.population - player.manifestRNG + 1'\r\n\r\n(also, you might have a problem with increasing your 'player.ManifestRNG' as you also are decreasing your 'player.population', for example: 0~5: 6 runs of 'ManifestLoop', 1~4: 4 runs of 'ManifestLoop', 2~3: 2 runs of 'ManifestLoop', 3~2: ERROR or 0 runs of 'ManifestLoop')\r\n\r\n5. AFTER #4 is done with however many iterations/repeats/run of 'ManifestLoop', (aka: #5, will WAIT/PAUSE UNTIL #4 is fully done, before #5 is run/done), it (#5) does this:\r\n\r\nplayer.population = player.population + 1\r\n\r\n6. Log (\"Added 1 pop to stabilize\") // this looks like it is your unwanted line being displayed (which may mean that you don't want #5 either, as it is actually doing the increasing of the 'player.population' Integer Attribute)\r\n7. return (ManifestNameRNG() + ManifestAgeRNG())\r\n\r\n---------\r\n\r\nnote that you are altering your Attributes' Values, and not resetting them to their default/initial/starting Values, after you're done with your 'Manifestscriptcall' --- this could cause problems/issues\r\n\r\n--------\r\n\r\nokay... your 'ManifestLoop' is (calls) your 'manifestscriptcall'...\r\n\r\nyou thus got some middle recursion going on, and I'm not sure if this is what you want... I don't really understand your code design, but it seems to be too complex (not your fault if not an expert coder of course, lol), it could probably be made more concise/efficient.\r\n\r\nhere's what's going on due to the middle recursion:\r\n\r\n(I'll make a new post actually)",
      "EditableFormat": "markdown",
      "HTML": "<p>I haven't looked at all of your code (I'd need to see what your 'ManifestLoop',' ManifestNameRNG', and 'ManifestAgeRNG' does), but let's just look at the process of your 'Manifestscriptcall' Function:</p>\n<ol>\n<li>player.manifestRNG = player.manifestRNG + 1</li>\n<li>player.population = player.population - 1</li>\n<li>Log (\"Removed 1 pop to stabilize\")</li>\n<li>for (, player.manifestRNG, player.population, 1) {</li>\n</ol>\n<p>for #4, it will repeat/iterate/run, running the 'ManifestLoop' Function, a number of times based upon the difference of 'player.population - player.manifestRNG + 1'</p>\n<p>(also, you might have a problem with increasing your 'player.ManifestRNG' as you also are decreasing your 'player.population', for example: 0~5: 6 runs of 'ManifestLoop', 1~4: 4 runs of 'ManifestLoop', 2~3: 2 runs of 'ManifestLoop', 3~2: ERROR or 0 runs of 'ManifestLoop')</p>\n<ol start=\"5\">\n<li>AFTER #4 is done with however many iterations/repeats/run of 'ManifestLoop', (aka: #5, will WAIT/PAUSE UNTIL #4 is fully done, before #5 is run/done), it (#5) does this:</li>\n</ol>\n<p>player.population = player.population + 1</p>\n<ol start=\"6\">\n<li>Log (\"Added 1 pop to stabilize\") // this looks like it is your unwanted line being displayed (which may mean that you don't want #5 either, as it is actually doing the increasing of the 'player.population' Integer Attribute)</li>\n<li>return (ManifestNameRNG() + ManifestAgeRNG())</li>\n</ol>\n<hr>\n<p>note that you are altering your Attributes' Values, and not resetting them to their default/initial/starting Values, after you're done with your 'Manifestscriptcall' --- this could cause problems/issues</p>\n<hr>\n<p>okay... your 'ManifestLoop' is (calls) your 'manifestscriptcall'...</p>\n<p>you thus got some middle recursion going on, and I'm not sure if this is what you want... I don't really understand your code design, but it seems to be too complex (not your fault if not an expert coder of course, lol), it could probably be made more concise/efficient.</p>\n<p>here's what's going on due to the middle recursion:</p>\n<p>(I'll make a new post actually)</p>\n\n",
      "PostDate": "2017-01-26T20:58:51.4657254Z",
      "LastEditDate": "2017-01-26T21:25:54.4413598Z"
    },
    {
      "PostId": "90fc8e4d-5de8-4609-9f16-e149fd85240a",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "your initial/default/starting Attributes' Values form your code:\r\n\r\n```\r\nSetCounter (\"TimeDay\", 1)\r\n        SetCounter (\"TimeMonth\", 1)\r\n        SetCounter (\"TimeYear\", 2361)\r\n        SetCounter (\"Food\", 10)\r\n        player.water = 10\r\n        player.colonistids = 0\r\n        player.manifestnamenum = 1\r\n        player.manifestname = 1\r\n        player.manifestnameRNG = 0\r\n        player.manifestageRNG = 0\r\n        player.manifestRNG = 0\r\n        player.population = 1\r\n        player.idlepopulation = 1\r\n        player.watergatherer = 0\r\n        player.explorer = 0\r\n        player.explorationpoints = 0\r\n        SetCounter (\"Credits\", 1000)\r\n        SetFlagOn (\"DEBUG\")\r\n```\r\n\r\n-----------\r\n\r\n```\r\n  <function name=\"Manifestscriptcall\" type=\"string\">\r\n    player.manifestRNG = player.manifestRNG + 1\r\n    player.population = player.population - 1\r\n    Log (\"Removed 1 pop to stabilize\")\r\n    for (, player.manifestRNG, player.population, 1) {\r\n      ManifestLoop\r\n    }\r\n    player.population = player.population + 1\r\n    Log (\"Added 1 pop to stabilize\")\r\n    return (ManifestNameRNG() + ManifestAgeRNG())\r\n  </function>\r\n```\r\n\r\n--------------\r\n\r\nhere's what's going on with your middle recursion:\r\n\r\n(assuming that you're using your default/starting/initial Attributes' Values)\r\n\r\n1. player.manifestRNG = player.manifestRNG + 1 // 0 + 1 = 1\r\n2. player.population = player.population - 1 // 1 - 1 = 0\r\n3. Log (\"Removed 1 pop to stabilize\")\r\n4.  for (, player.manifestRNG, player.population, 1) { // from 1 to 0 iterations: this should be an ERROR or 0 recursion calls, or maybe it's going in reverse order... which my brain can't even begin to follow (I have trouble enough with simple recursion), laughs.\r\n\r\n5. pretending that there's no issues with #4... let's say it's going to just do a single recursion (a single iteration, and thus a single call of 'ManfestLoop', which calls your 'manifestscriptcall', which is a single recursion call), for example: 'player.ManifestRNG=1' and 'player.population = 1':\r\n\r\n6. player.manifestRNG = player.manifestRNG + 1 // 1 + 1 = 2\r\n7. player.population = player.population - 1 // 1 - 1 = 0\r\n\r\n8. let's say it's thus unable to do any (2nd level) recursion calls, so it's going back \r\n\r\n-------\r\n\r\nERR... this is too ahrd for me... simple recursion is hard enough for me to explain/follow... and the middle recursion and details of your code, make this just too confusing for me... I'm not even understanding how it's even working at all, as it seems like it shouldn't be, to me, anyways.",
      "EditableFormat": "markdown",
      "HTML": "<p>your initial/default/starting Attributes' Values form your code:</p>\n<pre><code>SetCounter (\"TimeDay\", 1)\n        SetCounter (\"TimeMonth\", 1)\n        SetCounter (\"TimeYear\", 2361)\n        SetCounter (\"Food\", 10)\n        player.water = 10\n        player.colonistids = 0\n        player.manifestnamenum = 1\n        player.manifestname = 1\n        player.manifestnameRNG = 0\n        player.manifestageRNG = 0\n        player.manifestRNG = 0\n        player.population = 1\n        player.idlepopulation = 1\n        player.watergatherer = 0\n        player.explorer = 0\n        player.explorationpoints = 0\n        SetCounter (\"Credits\", 1000)\n        SetFlagOn (\"DEBUG\")\n</code></pre>\n<hr>\n<pre><code>  &lt;function name=\"Manifestscriptcall\" type=\"string\"&gt;\n    player.manifestRNG = player.manifestRNG + 1\n    player.population = player.population - 1\n    Log (\"Removed 1 pop to stabilize\")\n    for (, player.manifestRNG, player.population, 1) {\n      ManifestLoop\n    }\n    player.population = player.population + 1\n    Log (\"Added 1 pop to stabilize\")\n    return (ManifestNameRNG() + ManifestAgeRNG())\n  &lt;/function&gt;\n</code></pre>\n<hr>\n<p>here's what's going on with your middle recursion:</p>\n<p>(assuming that you're using your default/starting/initial Attributes' Values)</p>\n<ol>\n<li>\n<p>player.manifestRNG = player.manifestRNG + 1 // 0 + 1 = 1</p>\n</li>\n<li>\n<p>player.population = player.population - 1 // 1 - 1 = 0</p>\n</li>\n<li>\n<p>Log (\"Removed 1 pop to stabilize\")</p>\n</li>\n<li>\n<p>for (, player.manifestRNG, player.population, 1) { // from 1 to 0 iterations: this should be an ERROR or 0 recursion calls, or maybe it's going in reverse order... which my brain can't even begin to follow (I have trouble enough with simple recursion), laughs.</p>\n</li>\n<li>\n<p>pretending that there's no issues with #4... let's say it's going to just do a single recursion (a single iteration, and thus a single call of 'ManfestLoop', which calls your 'manifestscriptcall', which is a single recursion call), for example: 'player.ManifestRNG=1' and 'player.population = 1':</p>\n</li>\n<li>\n<p>player.manifestRNG = player.manifestRNG + 1 // 1 + 1 = 2</p>\n</li>\n<li>\n<p>player.population = player.population - 1 // 1 - 1 = 0</p>\n</li>\n<li>\n<p>let's say it's thus unable to do any (2nd level) recursion calls, so it's going back</p>\n</li>\n</ol>\n<hr>\n<p>ERR... this is too ahrd for me... simple recursion is hard enough for me to explain/follow... and the middle recursion and details of your code, make this just too confusing for me... I'm not even understanding how it's even working at all, as it seems like it shouldn't be, to me, anyways.</p>\n\n",
      "PostDate": "2017-01-26T21:41:23.7005708Z",
      "LastEditDate": null
    },
    {
      "PostId": "8f16feef-689b-4736-95d9-6f9b0902aa17",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So first, thanks for pasting the whole code, that helps. However, as you say, it is complicated. I wondered if it was because you had not set a loop variable, or you were changing the values of the start and end of the loop inside the loop, but apparently not. I note that `ManifestLoop` just calls  `Manifestscriptcall` recursively. Also `ManifestNameRNG` and `ManifestAgeRNG` just give strings, so the code boils down to this:\r\n```\r\n  <function name=\"Manifestscriptcall\">\r\n    player.manifestRNG = player.manifestRNG + 1\r\n    player.population = player.population - 1\r\n    Log (\"Removed 1 pop to stabilize\")\r\n    for (i, player.manifestRNG, player.population) {\r\n      Manifestscriptcall\r\n    }\r\n    player.population = player.population + 1\r\n    Log (\"Added 1 pop to stabilize\")\r\n  </function>\r\n```\r\nI would guess it is due to the loops within loops. What were player.manifestRNG and player.population when you got that off result?\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>So first, thanks for pasting the whole code, that helps. However, as you say, it is complicated. I wondered if it was because you had not set a loop variable, or you were changing the values of the start and end of the loop inside the loop, but apparently not. I note that <code>ManifestLoop</code> just calls  <code>Manifestscriptcall</code> recursively. Also <code>ManifestNameRNG</code> and <code>ManifestAgeRNG</code> just give strings, so the code boils down to this:</p>\n<pre><code>  &lt;function name=\"Manifestscriptcall\"&gt;\n    player.manifestRNG = player.manifestRNG + 1\n    player.population = player.population - 1\n    Log (\"Removed 1 pop to stabilize\")\n    for (i, player.manifestRNG, player.population) {\n      Manifestscriptcall\n    }\n    player.population = player.population + 1\n    Log (\"Added 1 pop to stabilize\")\n  &lt;/function&gt;\n</code></pre>\n<p>I would guess it is due to the loops within loops. What were player.manifestRNG and player.population when you got that off result?</p>\n\n",
      "PostDate": "2017-01-26T21:41:34.1282375Z",
      "LastEditDate": null
    },
    {
      "PostId": "831bec01-5a6f-4b33-bcd3-4ffa29a5e943",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "if the recursion works, he/she should be getting multiple 'Log (\"Removed 1 pop to stabilize\")' outputs next to each other (though based upon the recursion and further nested recursions, which could add multiple 'Added 1 pop to stabilize' outputs too, breaking up the multiple 'removed' outputs from being next to each other), I think, for examples:\r\n\r\nsay a single recursion occurs:\r\n\r\n(function's scripts begin)\r\nRemoved 1 pop to stabilize\r\n(1st level's 1st recursion begins)\r\nRemoved 1 pop to stabilize\r\n(2nd level's 1st recursion fails: back to finishing up the 1st level's 1st recursion's scripts)\r\nAdded 1 pop to stabilize\r\n(1st level's 1st recursion ends: back to finshing up the rest of the function's scripts)\r\nAdded 1 pop to stabilize\r\n(function's scripts end)\r\n\r\nR\r\nR\r\nA\r\nA\r\n\r\nsay a single 1st level single recursion recurs and a single 2nd-level single recursion occurs:\r\n\r\n(function's scripts begin)\r\nRemoved 1 pop to stabilize\r\n(1st level's 1st recursion begins)\r\nRemoved 1 pop to stabilize\r\n(2nd level's 1st recursion begins)\r\nRemoved 1 pop to stabilize\r\n(3rd level's 1st recursion fails: back to finishing up the rest of the 2nd level's 1st recursion's scripts)\r\nAdded 1 pop to stabilize\r\n(2nd level's 1st recursion ends: back to finshing up the rest of the 1st level's 1st recursion's scripts)\r\nAdded 1 pop to stabilize\r\n(1st level's 1st recursion ends: back to finshing up the rest of the function's scripts)\r\nAdded 1 pop to stabilize\r\n(function's scripts end)\r\n\r\nR\r\nR\r\nR\r\nA\r\nA\r\nA\r\n\r\nVS\r\n\r\nhis/her code output:\r\n\r\nR\r\nA\r\nR\r\nA\r\nA\r\n\r\n(I think some iterations, of the initial function's scripting, and/or, of whatever level/s of recursions, are occuring somehow, or it's doing the recursion in reverse order... my brain can't handle/follow this level of recursion and his code data, sighs)",
      "EditableFormat": "markdown",
      "HTML": "<p>if the recursion works, he/she should be getting multiple 'Log (\"Removed 1 pop to stabilize\")' outputs next to each other (though based upon the recursion and further nested recursions, which could add multiple 'Added 1 pop to stabilize' outputs too, breaking up the multiple 'removed' outputs from being next to each other), I think, for examples:</p>\n<p>say a single recursion occurs:</p>\n<p>(function's scripts begin)<br>\nRemoved 1 pop to stabilize<br>\n(1st level's 1st recursion begins)<br>\nRemoved 1 pop to stabilize<br>\n(2nd level's 1st recursion fails: back to finishing up the 1st level's 1st recursion's scripts)<br>\nAdded 1 pop to stabilize<br>\n(1st level's 1st recursion ends: back to finshing up the rest of the function's scripts)<br>\nAdded 1 pop to stabilize<br>\n(function's scripts end)</p>\n<p>R<br>\nR<br>\nA<br>\nA</p>\n<p>say a single 1st level single recursion recurs and a single 2nd-level single recursion occurs:</p>\n<p>(function's scripts begin)<br>\nRemoved 1 pop to stabilize<br>\n(1st level's 1st recursion begins)<br>\nRemoved 1 pop to stabilize<br>\n(2nd level's 1st recursion begins)<br>\nRemoved 1 pop to stabilize<br>\n(3rd level's 1st recursion fails: back to finishing up the rest of the 2nd level's 1st recursion's scripts)<br>\nAdded 1 pop to stabilize<br>\n(2nd level's 1st recursion ends: back to finshing up the rest of the 1st level's 1st recursion's scripts)<br>\nAdded 1 pop to stabilize<br>\n(1st level's 1st recursion ends: back to finshing up the rest of the function's scripts)<br>\nAdded 1 pop to stabilize<br>\n(function's scripts end)</p>\n<p>R<br>\nR<br>\nR<br>\nA<br>\nA<br>\nA</p>\n<p>VS</p>\n<p>his/her code output:</p>\n<p>R<br>\nA<br>\nR<br>\nA<br>\nA</p>\n<p>(I think some iterations, of the initial function's scripting, and/or, of whatever level/s of recursions, are occuring somehow, or it's doing the recursion in reverse order... my brain can't handle/follow this level of recursion and his code data, sighs)</p>\n\n",
      "PostDate": "2017-01-26T21:52:12.6833575Z",
      "LastEditDate": "2017-01-26T22:21:27.9328731Z"
    },
    {
      "PostId": "e47ccc0a-96d1-4706-9695-6d954da2b1ff",
      "UserId": 115910,
      "Username": "Sebastian2203",
      "AvatarUrl": "https://secure.gravatar.com/avatar/2c6803847fee75ca6b74e1a846b79bc5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wow, sorry I really didn´t mean to waste so much of your time.\r\n\r\nWell Pixie, the values of player.manifestRNG were 0 because I´ve set it to that way every time the Manifestscriptcall function finishes. This way, the manifest displays the same thing every time it is looked into.\r\n\r\nAlso, the \"added 1 pop to stabilize\" and \"removed 1 pop...\" are there because the loop function fires TWICE even when there is only one person. I should have made that more clear :/ \r\nBut this weak \"patch\" stops working at 4 population so it is useless anyway.\r\n\r\nBut this whole doesn´t make sense to me because I´ve noticed that the function does not have any logic when it fires and when not. If there is 5 population then it fires 7 times if there is 6 then it fires some another number and I have no idea why.\r\n\r\n\r\nThat´s why I think I am going to give up on this method because it is going to waste more time for very little benefit.\r\n\r\nCould someone just show me a better way to have a list, that is:\r\n\r\n-Randomly generated.\r\n-Remembers the randomly generated stuff and flags it for every different name?\r\n-Expands when there is more people...\r\n\r\nMaybe the NewStringList() function could work for this but I had a trouble trying to copy code from TA into GB and it didn´t work so I don´t know... \r\n\r\nI guess I just need to learn, way way more.\r\n\r\nBTW: This was how the whole thing is supposed to work. https://i.gyazo.com/968b92270829eca3ea44007b4e391c14.png",
      "EditableFormat": "markdown",
      "HTML": "<p>Wow, sorry I really didn´t mean to waste so much of your time.</p>\n<p>Well Pixie, the values of player.manifestRNG were 0 because I´ve set it to that way every time the Manifestscriptcall function finishes. This way, the manifest displays the same thing every time it is looked into.</p>\n<p>Also, the \"added 1 pop to stabilize\" and \"removed 1 pop...\" are there because the loop function fires TWICE even when there is only one person. I should have made that more clear :/<br>\nBut this weak \"patch\" stops working at 4 population so it is useless anyway.</p>\n<p>But this whole doesn´t make sense to me because I´ve noticed that the function does not have any logic when it fires and when not. If there is 5 population then it fires 7 times if there is 6 then it fires some another number and I have no idea why.</p>\n<p>That´s why I think I am going to give up on this method because it is going to waste more time for very little benefit.</p>\n<p>Could someone just show me a better way to have a list, that is:</p>\n<p>-Randomly generated.<br>\n-Remembers the randomly generated stuff and flags it for every different name?<br>\n-Expands when there is more people...</p>\n<p>Maybe the NewStringList() function could work for this but I had a trouble trying to copy code from TA into GB and it didn´t work so I don´t know...</p>\n<p>I guess I just need to learn, way way more.</p>\n<p>BTW: This was how the whole thing is supposed to work. https://i.gyazo.com/968b92270829eca3ea44007b4e391c14.png</p>\n\n",
      "PostDate": "2017-01-27T18:06:31.8798059Z",
      "LastEditDate": "2017-01-27T18:14:21.9274771Z"
    },
    {
      "PostId": "6c3d5a86-f3fa-4e6a-9bbf-90499b2f7c10",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If it is supposed to be making a list of people, it falls well short of that, I am afraid. It only ever generates one person.",
      "EditableFormat": "markdown",
      "HTML": "<p>If it is supposed to be making a list of people, it falls well short of that, I am afraid. It only ever generates one person.</p>\n\n",
      "PostDate": "2017-01-27T18:27:02.252633Z",
      "LastEditDate": null
    },
    {
      "PostId": "16b479ce-ed82-44ca-98a7-636958a954d8",
      "UserId": 115910,
      "Username": "Sebastian2203",
      "AvatarUrl": "https://secure.gravatar.com/avatar/2c6803847fee75ca6b74e1a846b79bc5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well, this is what happens when I add THREE people.\r\nThat is why is the ManifestLoop() in there, to keep it firing until it manifestRNG equals population.\r\n\r\nhttps://i.gyazo.com/c51b4eed1449d0a852f9d30b76e9b87f.png\r\n\r\n(In future I hope it will assing everyone an unique name AND remember it, but right now I cant even get it to display.)",
      "EditableFormat": "markdown",
      "HTML": "<p>Well, this is what happens when I add THREE people.<br>\nThat is why is the ManifestLoop() in there, to keep it firing until it manifestRNG equals population.</p>\n<p>https://i.gyazo.com/c51b4eed1449d0a852f9d30b76e9b87f.png</p>\n<p>(In future I hope it will assing everyone an unique name AND remember it, but right now I cant even get it to display.)</p>\n\n",
      "PostDate": "2017-01-27T18:34:00.1485079Z",
      "LastEditDate": "2017-01-27T18:35:04.9383465Z"
    },
    {
      "PostId": "f96f2bed-995d-4ede-9e7c-e718bef67440",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How about storing the names in a list; add a new name when someone is added to the population. Use the size of the list to track the population size perhaps. Then it is simply a matter of outputing a list.\r\n\r\nIf you want to store more than just the name, you could put it all in one long list, separated by semi-colons, then when outputing (or whatever), break it up with the Split function.",
      "EditableFormat": "markdown",
      "HTML": "<p>How about storing the names in a list; add a new name when someone is added to the population. Use the size of the list to track the population size perhaps. Then it is simply a matter of outputing a list.</p>\n<p>If you want to store more than just the name, you could put it all in one long list, separated by semi-colons, then when outputing (or whatever), break it up with the Split function.</p>\n\n",
      "PostDate": "2017-01-27T18:51:12.3117107Z",
      "LastEditDate": null
    },
    {
      "PostId": "ca5c1912-3e21-4382-90bf-0bc3573efb37",
      "UserId": 115910,
      "Username": "Sebastian2203",
      "AvatarUrl": "https://secure.gravatar.com/avatar/2c6803847fee75ca6b74e1a846b79bc5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Are you sure Split function works in GB? \r\n\r\nI can´t find it in the library elements and when I try to use it it throws the \"Could find not function 'Split()\"\r\nI might be doing something wrong maybe.\r\n\r\nEDIT: Nvm, Split works in GB, I am just dumb.\r\nEDIT EDIT: \r\nWell it seems like I didn´t do anything wrong and it really doesn´t work in GB.\r\nI´ve created a new list using NewStringList(). I am sure I´ve done it correctly.\r\nI´ve added value to it and still this is what happens. https://i.gyazo.com/76edfe0f94e88f7bd4495bce7d840795.png \r\n\r\n:/\r\nI think it´s time to move to TA I guess...",
      "EditableFormat": "markdown",
      "HTML": "<p>Are you sure Split function works in GB?</p>\n<p>I can´t find it in the library elements and when I try to use it it throws the \"Could find not function 'Split()\"<br>\nI might be doing something wrong maybe.</p>\n<p>EDIT: Nvm, Split works in GB, I am just dumb.<br>\nEDIT EDIT:<br>\nWell it seems like I didn´t do anything wrong and it really doesn´t work in GB.<br>\nI´ve created a new list using NewStringList(). I am sure I´ve done it correctly.<br>\nI´ve added value to it and still this is what happens. https://i.gyazo.com/76edfe0f94e88f7bd4495bce7d840795.png</p>\n<p>:/<br>\nI think it´s time to move to TA I guess...</p>\n\n",
      "PostDate": "2017-01-27T18:56:25.9346648Z",
      "LastEditDate": "2017-01-27T19:12:07.8320512Z"
    },
    {
      "PostId": "94f87720-539e-479d-b21e-218bedc275a9",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I think it´s time to move to TA I guess...\r\n\r\nThis.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I think it´s time to move to TA I guess...</p>\n</blockquote>\n<p>This.</p>\n\n",
      "PostDate": "2017-01-27T19:46:07.8542072Z",
      "LastEditDate": null
    }
  ]
}
