{
  "Topic": {
    "TopicId": "lu71cxaxvuy8qqp_fzaygw",
    "ForumId": "10",
    "Title": "Multiple Copies of  Items",
    "LastUpdated": "2018-01-19T07:37:35.5612497Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "39db0e5a-9bd7-47c7-a2f8-3ebd2675904b",
      "UserId": 340011,
      "Username": "wooterslw",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7d20dd39301d8b9be2be0abaf005968d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What would be the easiest way to give a player multiple copies of the same item? For instance if I want them carrying 5 Healing Potions. I would also want it to show inventory as \"Healing potion (x2)\" or something similar. Not have it show twice in inventory.",
      "EditableFormat": "markdown",
      "HTML": "<p>What would be the easiest way to give a player multiple copies of the same item? For instance if I want them carrying 5 Healing Potions. I would also want it to show inventory as \"Healing potion (x2)\" or something similar. Not have it show twice in inventory.</p>\n\n",
      "PostDate": "2018-01-19T07:37:35.5612497Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cbb96561-240f-4b6b-8b4a-e819e99d37f0",
      "UserId": 288890,
      "Username": "Zenaire",
      "AvatarUrl": "https://secure.gravatar.com/avatar/ae6fa66d5b6aa6749c7a33168b785420?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I recently did this same thing for a game I’m working on. Instead of making a huge list of the same items, what I did is make one item and then use it as a sort of container to hold a quantity.  \r\n\r\nFirst, create your object (in this case, Healing Potion). This will be what your player sees and interacts with in order to use the item. Go to the attributes tab for this item and create a “quantity” attribute (set it to however many potions you want the player to have the first time they acquire a potion).  For instance, if the player finds a random healing potion lying on the ground, set this to 1. If you give the player a couple at the beginning of the game, set it to 3 or 5 or whatever you want them to start out with. \r\n\r\nNow, go to your inventory tab and under the section for “After Taking Object,” add this code:\r\n\r\n    Healing Potion.listalias = \"Healing Potion: \" + Healing Potion.quantity\r\n\r\nThis will allow it to display in your inventory with the amount. Next, you’ll want to make sure you can Use/Give it, and then move on over to the Use/Give tab. Under “Use (on its own),” add the following code. You could also set a verb, say “drink” and then add this for that, too. \r\n\r\n```if ((Healing Potion.quantity > 0) and (player.health < 86)) {\r\n  Healing Potion.quantity = Healing Potion.quantity - 1\r\n  msg (\"You decide to use a healing potion, restoring 15% of your health. There are \" +Healing Potion.quantity+ \" left.\")\r\n  Healing Potion.listalias = \"Healing Potion: \" + Healing Potion.quantity\r\n  IncreaseHealth (15)\r\n}\r\nelse if (Healing Potion.quantity = 0) {\r\n  msg (\"There are none left!\")\r\n}\r\nelse if ((Healing Potion.quantity > 0) and (player.health = 100)) {\r\n  msg (\"You're perfectly healthy right now, so you decide against it. \")\r\n}\r\nelse if (((Healing Potion.quantity > 0)) and ((player.health > 85) and (player.health <100))) {\r\n  Healing Potion.quantity = Healing Potion.quantity - 1\r\n  msg (\"You decide to use a healing potion, restoring 15% of your health. There are \" +Healing Potion.quantity+ \" left.\")\r\n  Healing Potion.listalias = \"Healing Potion: \" + Healing Potion.quantity\r\n  set (player, \"health\", 100)\r\n}```\r\n\r\nThis section of code can get a little confusing, but basically it sets it up so that the healing potion will restore 15% of the player’s health, making sure that it does not allow the player’s max health to go over 100%. If you have at least one healing potion, it will subtract one from the inventory and update the display, and if you are out of healing potions, it will display a special message. If the player is at full health, it will not allow them to use a healing potion. \r\n\r\nFinally, if you’d like to allow the player to see how many healing potions are grouped together before they actually take it, you can add this to the object “look at” description:\r\n\r\n    msg (\"A regular healing potion. There are currently \" +Healing Potion.quantity+ \" here. Using one will restore 15% of your health.\")\r\n\r\nIn the game, whenever the player picks up a new healing potion, instead of actually adding a new object to their inventory, you simply add +1 to the Healing Potion.quantity attribute. Hopefully this helps you out. \r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I recently did this same thing for a game I’m working on. Instead of making a huge list of the same items, what I did is make one item and then use it as a sort of container to hold a quantity.</p>\n<p>First, create your object (in this case, Healing Potion). This will be what your player sees and interacts with in order to use the item. Go to the attributes tab for this item and create a “quantity” attribute (set it to however many potions you want the player to have the first time they acquire a potion).  For instance, if the player finds a random healing potion lying on the ground, set this to 1. If you give the player a couple at the beginning of the game, set it to 3 or 5 or whatever you want them to start out with.</p>\n<p>Now, go to your inventory tab and under the section for “After Taking Object,” add this code:</p>\n<pre><code>Healing Potion.listalias = \"Healing Potion: \" + Healing Potion.quantity\n</code></pre>\n<p>This will allow it to display in your inventory with the amount. Next, you’ll want to make sure you can Use/Give it, and then move on over to the Use/Give tab. Under “Use (on its own),” add the following code. You could also set a verb, say “drink” and then add this for that, too.</p>\n<pre><code>  Healing Potion.quantity = Healing Potion.quantity - 1\n  msg (\"You decide to use a healing potion, restoring 15% of your health. There are \" +Healing Potion.quantity+ \" left.\")\n  Healing Potion.listalias = \"Healing Potion: \" + Healing Potion.quantity\n  IncreaseHealth (15)\n}\nelse if (Healing Potion.quantity = 0) {\n  msg (\"There are none left!\")\n}\nelse if ((Healing Potion.quantity &gt; 0) and (player.health = 100)) {\n  msg (\"You're perfectly healthy right now, so you decide against it. \")\n}\nelse if (((Healing Potion.quantity &gt; 0)) and ((player.health &gt; 85) and (player.health &lt;100))) {\n  Healing Potion.quantity = Healing Potion.quantity - 1\n  msg (\"You decide to use a healing potion, restoring 15% of your health. There are \" +Healing Potion.quantity+ \" left.\")\n  Healing Potion.listalias = \"Healing Potion: \" + Healing Potion.quantity\n  set (player, \"health\", 100)\n}```\n\nThis section of code can get a little confusing, but basically it sets it up so that the healing potion will restore 15% of the player’s health, making sure that it does not allow the player’s max health to go over 100%. If you have at least one healing potion, it will subtract one from the inventory and update the display, and if you are out of healing potions, it will display a special message. If the player is at full health, it will not allow them to use a healing potion. \n\nFinally, if you’d like to allow the player to see how many healing potions are grouped together before they actually take it, you can add this to the object “look at” description:\n\n    msg (\"A regular healing potion. There are currently \" +Healing Potion.quantity+ \" here. Using one will restore 15% of your health.\")\n\nIn the game, whenever the player picks up a new healing potion, instead of actually adding a new object to their inventory, you simply add +1 to the Healing Potion.quantity attribute. Hopefully this helps you out. \n</code></pre>\n\n",
      "PostDate": "2018-01-19T08:21:00.6203825Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "63b3e1be-744e-4cdb-ae1b-205844c73a6f",
      "UserId": 288890,
      "Username": "Zenaire",
      "AvatarUrl": "https://secure.gravatar.com/avatar/ae6fa66d5b6aa6749c7a33168b785420?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Accidentally forgot to hit enter on the second section of code, it should end where the three backticks (```) are. It won't allow me to edit it for some reason...",
      "EditableFormat": "markdown",
      "HTML": "<p>Accidentally forgot to hit enter on the second section of code, it should end where the three backticks (```) are. It won't allow me to edit it for some reason...</p>\n\n",
      "PostDate": "2018-01-19T08:29:54.8051393Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4a26b8e2-fbbf-42e4-8065-e6bdf4ee78e7",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There is a library here that might help:\r\nhttps://github.com/ThePix/quest/wiki/StackLib",
      "EditableFormat": "markdown",
      "HTML": "<p>There is a library here that might help:<br>\nhttps://github.com/ThePix/quest/wiki/StackLib</p>\n\n",
      "PostDate": "2018-01-19T08:31:08.2248134Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8c7b9f9b-c685-46fc-8124-38aea2ee02cf",
      "UserId": 340011,
      "Username": "wooterslw",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7d20dd39301d8b9be2be0abaf005968d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you!</p>\n\n",
      "PostDate": "2018-01-19T08:39:07.9282927Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9c55c25a-16e3-42b2-ab7b-43b970a7d4e5",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "generally, the things that need to be done (as seen within the stack library):\r\n\r\n1. find/get/create a container Object of a type of quantity of Object (and if the quantity is zero, destroy/remove the container object)\r\n2. find/count all the Objects of that type in your inventory and store it as an Integer Attribute on the container Object (and also lower that Integer Attribute as you use that type of object, if quantity is zero, destroy/remove the container object)\r\n3. handling displaying it, for example: potion (99)\r\n4. destroy/remove all of the objects once you got the container object and its integer attribute set up\r\n5. handle all other features/actions that you may want (for example, if you want to put/move/sell/etc-actions an object from that quantity... you'll need to create/move one/more of those quantity Objects, as you can't do so with your container object, viewing, storing, etc actions/features)",
      "EditableFormat": "markdown",
      "HTML": "<p>generally, the things that need to be done (as seen within the stack library):</p>\n<ol>\n<li>find/get/create a container Object of a type of quantity of Object (and if the quantity is zero, destroy/remove the container object)</li>\n<li>find/count all the Objects of that type in your inventory and store it as an Integer Attribute on the container Object (and also lower that Integer Attribute as you use that type of object, if quantity is zero, destroy/remove the container object)</li>\n<li>handling displaying it, for example: potion (99)</li>\n<li>destroy/remove all of the objects once you got the container object and its integer attribute set up</li>\n<li>handle all other features/actions that you may want (for example, if you want to put/move/sell/etc-actions an object from that quantity... you'll need to create/move one/more of those quantity Objects, as you can't do so with your container object, viewing, storing, etc actions/features)</li>\n</ol>\n\n",
      "PostDate": "2018-01-19T16:18:53.1030174Z",
      "LastEditDate": "2018-01-19T16:20:28.3872392Z",
      "link": null
    }
  ]
}
