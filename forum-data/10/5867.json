{
  "Topic": {
    "TopicId": "5867",
    "ForumId": "10",
    "Title": "NPCs Recognizing Nakedness! Ahh!",
    "LastUpdated": "2016-01-13T21:28:07+00:00",
    "ReplyCount": 9
  },
  "Posts": [
    {
      "PostId": "40551",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Is there a way for the wearables library to incorporate this? Or a couple lines of code I could add to the NPC's to say something like...\n\n\nIf Player has no worn attribute, or recognizing the worn parameters like...\n\nIf player has no worn attribute in layer 2, or 3\nthen\n\nOr something like that?",
      "EditableFormat": "bbcode",
      "HTML": "Is there a way for the wearables library to incorporate this? Or a couple lines of code I could add to the NPC's to say something like...<br/><br/><br/>If Player has no worn attribute, or recognizing the worn parameters like...<br/><br/>If player has no worn attribute in layer 2, or 3<br/>then<br/><br/>Or something like that?",
      "PostDate": "2016-01-12T20:42:19+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40556",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "Funny question!  Can you just add a flag called naked to your player and then an if statement on your NPCs that responds how you want?",
      "EditableFormat": "bbcode",
      "HTML": "Funny question!  Can you just add a flag called naked to your player and then an if statement on your NPCs that responds how you want?",
      "PostDate": "2016-01-12T21:03:12+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40557",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "What Xan said, but it really should flag if certain areas are bare; wearng a hat and boots should (I guess) count as naked. Hmm, so I guess a flag on each garment as to whether it covers certain areas. May not be as simple as you might think.",
      "EditableFormat": "bbcode",
      "HTML": "What Xan said, but it really should flag if certain areas are bare; wearng a hat and boots should (I guess) count as naked. Hmm, so I guess a flag on each garment as to whether it covers certain areas. May not be as simple as you might think.",
      "PostDate": "2016-01-12T21:10:16+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40565",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Hmm....so let's say there is one pants.object, and one shirt.object. \nIn the wearables library, the &quot;chest&quot; and &quot;legs&quot; are covered; wear layer 2, 3\n\nI go to the shirt.object\nattributes, add\nscript\nflag\n\nsomething layer.....derp. \n\nMaybe I should do this after I figure out how to do the cursed stuff &gt;.&gt;",
      "EditableFormat": "bbcode",
      "HTML": "Hmm....so let's say there is one pants.object, and one shirt.object. <br/>In the wearables library, the &quot;chest&quot; and &quot;legs&quot; are covered; wear layer 2, 3<br/><br/>I go to the shirt.object<br/>attributes, add<br/>script<br/>flag<br/><br/>something layer.....derp. <br/><br/>Maybe I should do this after I figure out how to do the cursed stuff &gt;.&gt;",
      "PostDate": "2016-01-12T23:00:47+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40576",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "I think the way I would do it is to have a function, say CheckClothingState, that tests if the player is naked or has certain areas exposed, and to set flags on the player object if they are. Call the function from the end of the DoWear and DoRemove functions. You can then test the flags in a text processor command.\n\nCheckClothingState needs no parameters or return type, and would look a bit like this:\n[code:10jfzu90]player&#46;naked = true\nplayer&#46;barecrotch = true\nplayer&#46;barebust = true\nforeach (o, GetDirectChildren(player)) {\n  if (GetBoolean(o, &quot;worn&quot;)) {\n    player&#46;naked = false\n  }\n  if (HasAttribute(o,&quot;wear_slots&quot;)) {\n    if (ListContains(o&#46;wear_slots, &quot;chest&quot;)) {\n      player&#46;barebust = false\n    }\n    if (ListContains(o&#46;wear_slots, &quot;crotch&quot;)) {\n      player&#46;barecrotch = false\n    }\n  }\n}[/code:10jfzu90]\nMake sure any garment that covers her chest has &quot;chest&quot; in the list of slots (looks like you already have), and &quot;crotch&quot; if it covers the crotch.",
      "EditableFormat": "bbcode",
      "HTML": "I think the way I would do it is to have a function, say CheckClothingState, that tests if the player is naked or has certain areas exposed, and to set flags on the player object if they are. Call the function from the end of the DoWear and DoRemove functions. You can then test the flags in a text processor command.<br/><br/>CheckClothingState needs no parameters or return type, and would look a bit like this:<br/><pre><code>player&#46;naked = true<br/>player&#46;barecrotch = true<br/>player&#46;barebust = true<br/>foreach (o, GetDirectChildren(player)) {<br/>  if (GetBoolean(o, &quot;worn&quot;)) {<br/>    player&#46;naked = false<br/>  }<br/>  if (HasAttribute(o,&quot;wear_slots&quot;)) {<br/>    if (ListContains(o&#46;wear_slots, &quot;chest&quot;)) {<br/>      player&#46;barebust = false<br/>    }<br/>    if (ListContains(o&#46;wear_slots, &quot;crotch&quot;)) {<br/>      player&#46;barecrotch = false<br/>    }<br/>  }<br/>}</code></pre><br/>Make sure any garment that covers her chest has &quot;chest&quot; in the list of slots (looks like you already have), and &quot;crotch&quot; if it covers the crotch.",
      "PostDate": "2016-01-13T08:45:07+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40579",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "@ Pixie:\n\ndoes quest have any 'break' (and~or 'continue' too) commands, so quest wouldn't have to (using your~Pixie's post's code help for neonayon as example) do the operations over and over of assigning, 'player.naked = false' and~or each of the individual body~equipment slots, for every clothing item ???\n\nif not, would you have to use these code lines within a Function, using its 'return' to produce this result~effect of stopping the un-needed~redundant operations ??? Or is there some other code design way of doing this, that I'm going blank on at the moment (lol) ???",
      "EditableFormat": "bbcode",
      "HTML": "@ Pixie:<br/><br/>does quest have any 'break' (and~or 'continue' too) commands, so quest wouldn't have to (using your~Pixie's post's code help for neonayon as example) do the operations over and over of assigning, 'player.naked = false' and~or each of the individual body~equipment slots, for every clothing item ???<br/><br/>if not, would you have to use these code lines within a Function, using its 'return' to produce this result~effect of stopping the un-needed~redundant operations ??? Or is there some other code design way of doing this, that I'm going blank on at the moment (lol) ???",
      "PostDate": "2016-01-13T10:01:01+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40580",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Quest has no break or continue (as far as I know anyway).  You can break out of a loop with a return, as you say, but that is the only way. I am assuming the player inventory will not be that big, so the redundant looping will not be that much of a deal.",
      "EditableFormat": "bbcode",
      "HTML": "Quest has no break or continue (as far as I know anyway).  You can break out of a loop with a return, as you say, but that is the only way. I am assuming the player inventory will not be that big, so the redundant looping will not be that much of a deal.",
      "PostDate": "2016-01-13T10:05:41+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40581",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "could a sentinnel 'while' loop somehow be designed to do this ?\n\n(not sure if a 'foreach' and 'while' loop can be used together... if this would be the logic design to do this ~ I'm otherwise going blank on how to do the clothing items iteration, with or within, a 'while' loop argh, as I have had trouble with getting the 'while' loop to work on some other like-complex-stuff-for-me-anyways-lol, due to my lack of logic understanding, sighs).",
      "EditableFormat": "bbcode",
      "HTML": "could a sentinnel 'while' loop somehow be designed to do this ?<br/><br/>(not sure if a 'foreach' and 'while' loop can be used together... if this would be the logic design to do this ~ I'm otherwise going blank on how to do the clothing items iteration, with or within, a 'while' loop argh, as I have had trouble with getting the 'while' loop to work on some other like-complex-stuff-for-me-anyways-lol, due to my lack of logic understanding, sighs).",
      "PostDate": "2016-01-13T10:11:43+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40582",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "You could do it with while, but the code would get messy. Generally (but not always) you are better going for clean code, because maintaining bad code will cost you more than the saving in computing time. Object-orientated programming was developed and gained popularity because the programs produced were easier for humans to understand and maintain (if you want fast, you use C).",
      "EditableFormat": "bbcode",
      "HTML": "You could do it with while, but the code would get messy. Generally (but not always) you are better going for clean code, because maintaining bad code will cost you more than the saving in computing time. Object-orientated programming was developed and gained popularity because the programs produced were easier for humans to understand and maintain (if you want fast, you use C).",
      "PostDate": "2016-01-13T11:40:47+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40589",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "[quote:1dz6dmlb]I think the way I would do it is to have a function, say CheckClothingState, that tests if the player is naked or has certain areas exposed, and to set flags on the player object if they are. Call the function from the end of the DoWear and DoRemove functions. You can then test the flags in a text processor command.\n\nCheckClothingState needs no parameters or return type, and would look a bit like this:\n\nCode: Select all\nplayer.naked = true\nplayer.barecrotch = true\nplayer.barebust = true\nforeach (o, GetDirectChildren(player)) {\n  if (GetBoolean(o, &quot;worn&quot;)) {\n    player.naked = false\n  }\n  if (HasAttribute(o,&quot;wear_slots&quot;)) {\n    if (ListContains(o.wear_slots, &quot;chest&quot;)) {\n      player.barebust = false\n    }\n    if (ListContains(o.wear_slots, &quot;crotch&quot;)) {\n      player.barecrotch = false\n    }\n  }\n}\n\nMake sure any garment that covers her chest has &quot;chest&quot; in the list of slots (looks like you already have), and &quot;crotch&quot; if it covers the crotch.[/quote:1dz6dmlb]\n\nRemember we altered the DoRemove code before. Here it is...\n\n[code:1dz6dmlb]if (not object&#46;parent = player or not GetBoolean(object, &quot;worn&quot;) or not GetBoolean(object, &quot;removeable&quot;)) {\n  if (object&#46;removemsg = null) {\n    msg (DynamicTemplate(&quot;RemoveUnsuccessful&quot;,object))\n  }\n  else {\n    msg (object&#46;removemsg)\n  }\n}\nelse {\n  conflictedItem = null\n  // check if we are wearing anything over it\n  if (HasAttribute(object,&quot;wear_slots&quot;)) {\n    foreach (item, ScopeReachableInventory()) {\n      if (HasAttribute(item,&quot;wear_slots&quot;)) {\n        if (GetBoolean(item, &quot;worn&quot;)) {\n          foreach (itemSlot, item&#46;wear_slots) {\n            if (ListContains(object&#46;wear_slots,itemSlot)) {\n              if (object&#46;wear_layer &lt; item&#46;wear_layer) {\n                conflictedItem = item\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  if (conflictedItem = null) {\n    if (object&#46;removemsg = null) {\n      msg (DynamicTemplate(&quot;RemoveSuccessful&quot;,object))\n    }\n    else {\n      msg (object&#46;removemsg)\n    }\n    object&#46;worn = false\n    object&#46;drop = object&#46;original_drop\n    object&#46;alias = object&#46;original_alias\n    object&#46;original_drop = null\n    object&#46;original_alias = null\n    object&#46;display = null\n    // do after\n    if (HasScript(object, &quot;onafterremove&quot;)) {\n      do (object, &quot;onafterremove&quot;)\n    }\n    else if (HasString(object, &quot;onafterremove&quot;)) {\n      msg (object&#46;onafterremove)\n    }\n  }\n  else {\n    msg (DynamicTemplate(&quot;RemoveFirst&quot;, conflictedItem))\n  }\n}[/code:1dz6dmlb]\n\nSo with that said, where would the new code be inserted in this old one? Would it still be at the end of this code? Like underneath this line... \n\n    msg (DynamicTemplate(&quot;RemoveFirst&quot;, conflictedItem))\n  }\n\n?\n\nAnd here is the DoWear code.\n\n[code:1dz6dmlb]player&#46;toobigforitem = false\nif (HasScript(object, &quot;testplayersize&quot;)) {\n  do (object, &quot;testplayersize&quot;)\n}\nif (player&#46;toobigforitem) {\n  if (HasString(object, &quot;toobigtowearmsg&quot;)) {\n    msg (object&#46;toobigtowearmsg)\n  }\n  else {\n    msg (&quot;You try to put on the &quot; + GetDisplayName(object) + &quot; but it just won't fit!&quot;)\n  }\n}\nelse if (not HasAttribute(object,&quot;worn&quot;)) {\n  msg (DynamicTemplate(&quot;WearUnsuccessful&quot;, object))\n}\nelse if (object&#46;parent = player and GetBoolean(object, &quot;worn&quot;)) {\n  msg (DynamicTemplate(&quot;AlreadyWearing&quot;, object))\n}\nelse if (not ListContains(ScopeInventory(), object)) {\n  msg (DynamicTemplate(&quot;WearUnsuccessful&quot;, object))\n}\nelse {\n  isLayerProblem = false\n  conflictedItem = null\n  if (HasAttribute(object,&quot;wear_slots&quot;)) {\n    foreach (item, ScopeReachableInventory()) {\n      if (HasAttribute(item,&quot;wear_slots&quot;)) {\n        if (GetBoolean(item, &quot;worn&quot;)) {\n          foreach (itemSlot, item&#46;wear_slots) {\n            if (ListContains(object&#46;wear_slots,itemSlot)) {\n              if (object&#46;wear_layer &lt; item&#46;wear_layer) {\n                conflictedItem = item\n                isLayerProblem = true\n              }\n              else if (object&#46;wear_layer = item&#46;wear_layer) {\n                conflictedItem = item\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  if (conflictedItem = null) {\n    object&#46;worn = True\n    object&#46;original_drop = object&#46;drop\n    object&#46;original_alias = object&#46;alias\n    object&#46;drop = false\n    object&#46;display = GetDisplayName(object)\n    object&#46;alias = GetDisplayAlias(object) + &quot; (worn)&quot;\n    if (object&#46;wearmsg = null) {\n      msg (DynamicTemplate(&quot;WearSuccessful&quot;,object))\n    }\n    else {\n      msg (object&#46;wearmsg)\n    }\n    // do after\n    if (HasScript(object, &quot;onafterwear&quot;)) {\n      do (object, &quot;onafterwear&quot;)\n    }\n    else if (HasString(object, &quot;onafterwear&quot;)) {\n      msg (object&#46;onafterwear)\n    }\n  }\n  else if (isLayerProblem = true) {\n    msg (DynamicTemplate(&quot;CannotWearOver&quot;,conflictedItem))\n  }\n  else {\n    msg (DynamicTemplate(&quot;CannotWearWith&quot;,conflictedItem))\n  }\n}[/code:1dz6dmlb]\n\nBTW, thank you Pix <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>I think the way I would do it is to have a function, say CheckClothingState, that tests if the player is naked or has certain areas exposed, and to set flags on the player object if they are. Call the function from the end of the DoWear and DoRemove functions. You can then test the flags in a text processor command.<br/><br/>CheckClothingState needs no parameters or return type, and would look a bit like this:<br/><br/>Code: Select all<br/>player.naked = true<br/>player.barecrotch = true<br/>player.barebust = true<br/>foreach (o, GetDirectChildren(player)) {<br/>  if (GetBoolean(o, &quot;worn&quot;)) {<br/>    player.naked = false<br/>  }<br/>  if (HasAttribute(o,&quot;wear_slots&quot;)) {<br/>    if (ListContains(o.wear_slots, &quot;chest&quot;)) {<br/>      player.barebust = false<br/>    }<br/>    if (ListContains(o.wear_slots, &quot;crotch&quot;)) {<br/>      player.barecrotch = false<br/>    }<br/>  }<br/>}<br/><br/>Make sure any garment that covers her chest has &quot;chest&quot; in the list of slots (looks like you already have), and &quot;crotch&quot; if it covers the crotch.</p></blockquote><br/><br/>Remember we altered the DoRemove code before. Here it is...<br/><br/><pre><code>if (not object&#46;parent = player or not GetBoolean(object, &quot;worn&quot;) or not GetBoolean(object, &quot;removeable&quot;)) {<br/>  if (object&#46;removemsg = null) {<br/>    msg (DynamicTemplate(&quot;RemoveUnsuccessful&quot;,object))<br/>  }<br/>  else {<br/>    msg (object&#46;removemsg)<br/>  }<br/>}<br/>else {<br/>  conflictedItem = null<br/>  // check if we are wearing anything over it<br/>  if (HasAttribute(object,&quot;wear_slots&quot;)) {<br/>    foreach (item, ScopeReachableInventory()) {<br/>      if (HasAttribute(item,&quot;wear_slots&quot;)) {<br/>        if (GetBoolean(item, &quot;worn&quot;)) {<br/>          foreach (itemSlot, item&#46;wear_slots) {<br/>            if (ListContains(object&#46;wear_slots,itemSlot)) {<br/>              if (object&#46;wear_layer &lt; item&#46;wear_layer) {<br/>                conflictedItem = item<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>  if (conflictedItem = null) {<br/>    if (object&#46;removemsg = null) {<br/>      msg (DynamicTemplate(&quot;RemoveSuccessful&quot;,object))<br/>    }<br/>    else {<br/>      msg (object&#46;removemsg)<br/>    }<br/>    object&#46;worn = false<br/>    object&#46;drop = object&#46;original_drop<br/>    object&#46;alias = object&#46;original_alias<br/>    object&#46;original_drop = null<br/>    object&#46;original_alias = null<br/>    object&#46;display = null<br/>    // do after<br/>    if (HasScript(object, &quot;onafterremove&quot;)) {<br/>      do (object, &quot;onafterremove&quot;)<br/>    }<br/>    else if (HasString(object, &quot;onafterremove&quot;)) {<br/>      msg (object&#46;onafterremove)<br/>    }<br/>  }<br/>  else {<br/>    msg (DynamicTemplate(&quot;RemoveFirst&quot;, conflictedItem))<br/>  }<br/>}</code></pre><br/><br/>So with that said, where would the new code be inserted in this old one? Would it still be at the end of this code? Like underneath this line... <br/><br/>    msg (DynamicTemplate(&quot;RemoveFirst&quot;, conflictedItem))<br/>  }<br/><br/>?<br/><br/>And here is the DoWear code.<br/><br/><pre><code>player&#46;toobigforitem = false<br/>if (HasScript(object, &quot;testplayersize&quot;)) {<br/>  do (object, &quot;testplayersize&quot;)<br/>}<br/>if (player&#46;toobigforitem) {<br/>  if (HasString(object, &quot;toobigtowearmsg&quot;)) {<br/>    msg (object&#46;toobigtowearmsg)<br/>  }<br/>  else {<br/>    msg (&quot;You try to put on the &quot; + GetDisplayName(object) + &quot; but it just won't fit!&quot;)<br/>  }<br/>}<br/>else if (not HasAttribute(object,&quot;worn&quot;)) {<br/>  msg (DynamicTemplate(&quot;WearUnsuccessful&quot;, object))<br/>}<br/>else if (object&#46;parent = player and GetBoolean(object, &quot;worn&quot;)) {<br/>  msg (DynamicTemplate(&quot;AlreadyWearing&quot;, object))<br/>}<br/>else if (not ListContains(ScopeInventory(), object)) {<br/>  msg (DynamicTemplate(&quot;WearUnsuccessful&quot;, object))<br/>}<br/>else {<br/>  isLayerProblem = false<br/>  conflictedItem = null<br/>  if (HasAttribute(object,&quot;wear_slots&quot;)) {<br/>    foreach (item, ScopeReachableInventory()) {<br/>      if (HasAttribute(item,&quot;wear_slots&quot;)) {<br/>        if (GetBoolean(item, &quot;worn&quot;)) {<br/>          foreach (itemSlot, item&#46;wear_slots) {<br/>            if (ListContains(object&#46;wear_slots,itemSlot)) {<br/>              if (object&#46;wear_layer &lt; item&#46;wear_layer) {<br/>                conflictedItem = item<br/>                isLayerProblem = true<br/>              }<br/>              else if (object&#46;wear_layer = item&#46;wear_layer) {<br/>                conflictedItem = item<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>  if (conflictedItem = null) {<br/>    object&#46;worn = True<br/>    object&#46;original_drop = object&#46;drop<br/>    object&#46;original_alias = object&#46;alias<br/>    object&#46;drop = false<br/>    object&#46;display = GetDisplayName(object)<br/>    object&#46;alias = GetDisplayAlias(object) + &quot; (worn)&quot;<br/>    if (object&#46;wearmsg = null) {<br/>      msg (DynamicTemplate(&quot;WearSuccessful&quot;,object))<br/>    }<br/>    else {<br/>      msg (object&#46;wearmsg)<br/>    }<br/>    // do after<br/>    if (HasScript(object, &quot;onafterwear&quot;)) {<br/>      do (object, &quot;onafterwear&quot;)<br/>    }<br/>    else if (HasString(object, &quot;onafterwear&quot;)) {<br/>      msg (object&#46;onafterwear)<br/>    }<br/>  }<br/>  else if (isLayerProblem = true) {<br/>    msg (DynamicTemplate(&quot;CannotWearOver&quot;,conflictedItem))<br/>  }<br/>  else {<br/>    msg (DynamicTemplate(&quot;CannotWearWith&quot;,conflictedItem))<br/>  }<br/>}</code></pre><br/><br/>BTW, thank you Pix <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2016-01-13T21:28:07+00:00",
      "LastEditDate": null
    }
  ]
}
