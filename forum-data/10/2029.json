{
  "Topic": {
    "TopicId": "2029",
    "ForumId": "10",
    "Title": "Universal Exits (everyone will be happy with?)",
    "LastUpdated": "2009-05-10T15:27:50+01:00",
    "ReplyCount": 5
  },
  "Posts": [
    {
      "PostId": "16546",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "I've found a way to use the default exit functionality simultaneously with exit objects.  Don't know if anyone is interested, but I though I'd share it anyhow.  What follows allows you to devise exits in three ways.  You can:\n\n1)  Write an exit script with default syntax.  This takes the highest priority.\n\n[code:1zp74sbs]define room &lt;Cabin&gt;\n\n    north {\n        'script\n    }\n    &#46;&#46;&#46;\n    \nend define[/code:1zp74sbs]\n\n2)  Define an exit object for a particular direction, which will be used if you've not written a script for that direction as described immediately above.  The name of the exit object should be an amalgam of the room name and the direction that it controls.\n\n[code:1zp74sbs]define room &lt;Cabin&gt;\n\n    &#46;&#46;&#46;\n    define object &lt;Cabin_North&gt;\n    \n        &#46;&#46;&#46;\n        \n    end define\n    \nend define[/code:1zp74sbs]\n\n3)  Use the default exit syntax as a property.  This is the lowest priority - if you've not written a script for the direction as described in step 1, nor defined an exit object as shown in step 2, then the room specified by the exit property will be used.\n\n[code:1zp74sbs]define room &lt;Cabin&gt;\n\n    north &lt;OutsideCabin&gt;\n    &#46;&#46;&#46;    \n    \nend define[/code:1zp74sbs]\n\nSo here's how you do it:\n\nA)  Write directional commands that call the direction action of a room.  For example:\n\n[code:1zp74sbs]define game &lt;SomeGame&gt;\n\n    command &lt;north; n&gt; {\n        doaction &lt;#quest&#46;currentroom#; north&gt;\n    }\n    \nend define[/code:1zp74sbs]\n\nB)  In the defaultroom type, add all the directions as actions.  These actions call a 'travel' procedure.  For example:\n\n[code:1zp74sbs]define type &lt;defaultroom&gt;\n\n    action &lt;north&gt; {\n        do &lt;travel($thisobject$; north)&gt;\n    }\n    &#46;&#46;&#46;\nend define[/code:1zp74sbs]\n\nC)  Write a travel procedure something like this:\n\n[code:1zp74sbs]define procedure &lt;travel&gt;\n\t\n\tset string &lt;p1; $parameter(1)$&gt;\n\tset string &lt;p2; $parameter(2)$&gt;\n\tset numeric &lt;nFoundExitObject; 0&gt;\n\t\n\tset string &lt;exit; #p1#_#p2#&gt;\n\tif real &lt;#exit#&gt; then {\n\t\tif here &lt;#exit#&gt; then {\n\t\t\tif not property &lt;#exit#; hidden&gt; then {\t\t\t\n\t\t\t\tdoaction &lt;#exit#; BeforeUse&gt;\n\t\t\t\tinc &lt;nFoundExitObject&gt;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (%nFoundExitObject% = 0) then {\n\t\tif property &lt;#p1#; #p2#&gt; then {\n\t\t\tgoto &lt;$objectproperty(#p1#; #p2#)$&gt;\n\t\t}\n\t\telse {\n\t\t\tmsg &lt;You cannot go that way&#46;&gt;\n\t\t}\n\t}\t\n\nend define[/code:1zp74sbs]",
      "EditableFormat": "bbcode",
      "HTML": "I've found a way to use the default exit functionality simultaneously with exit objects.  Don't know if anyone is interested, but I though I'd share it anyhow.  What follows allows you to devise exits in three ways.  You can:<br/><br/>1)  Write an exit script with default syntax.  This takes the highest priority.<br/><br/><pre><code>define room &lt;Cabin&gt;<br/><br/>    north {<br/>        'script<br/>    }<br/>    &#46;&#46;&#46;<br/>    <br/>end define</code></pre><br/><br/>2)  Define an exit object for a particular direction, which will be used if you've not written a script for that direction as described immediately above.  The name of the exit object should be an amalgam of the room name and the direction that it controls.<br/><br/><pre><code>define room &lt;Cabin&gt;<br/><br/>    &#46;&#46;&#46;<br/>    define object &lt;Cabin_North&gt;<br/>    <br/>        &#46;&#46;&#46;<br/>        <br/>    end define<br/>    <br/>end define</code></pre><br/><br/>3)  Use the default exit syntax as a property.  This is the lowest priority - if you've not written a script for the direction as described in step 1, nor defined an exit object as shown in step 2, then the room specified by the exit property will be used.<br/><br/><pre><code>define room &lt;Cabin&gt;<br/><br/>    north &lt;OutsideCabin&gt;<br/>    &#46;&#46;&#46;    <br/>    <br/>end define</code></pre><br/><br/>So here's how you do it:<br/><br/>A)  Write directional commands that call the direction action of a room.  For example:<br/><br/><pre><code>define game &lt;SomeGame&gt;<br/><br/>    command &lt;north; n&gt; {<br/>        doaction &lt;#quest&#46;currentroom#; north&gt;<br/>    }<br/>    <br/>end define</code></pre><br/><br/>B)  In the defaultroom type, add all the directions as actions.  These actions call a 'travel' procedure.  For example:<br/><br/><pre><code>define type &lt;defaultroom&gt;<br/><br/>    action &lt;north&gt; {<br/>        do &lt;travel($thisobject$; north)&gt;<br/>    }<br/>    &#46;&#46;&#46;<br/>end define</code></pre><br/><br/>C)  Write a travel procedure something like this:<br/><br/><pre><code>define procedure &lt;travel&gt;<br/>\t<br/>\tset string &lt;p1; $parameter(1)$&gt;<br/>\tset string &lt;p2; $parameter(2)$&gt;<br/>\tset numeric &lt;nFoundExitObject; 0&gt;<br/>\t<br/>\tset string &lt;exit; #p1#_#p2#&gt;<br/>\tif real &lt;#exit#&gt; then {<br/>\t\tif here &lt;#exit#&gt; then {<br/>\t\t\tif not property &lt;#exit#; hidden&gt; then {\t\t\t<br/>\t\t\t\tdoaction &lt;#exit#; BeforeUse&gt;<br/>\t\t\t\tinc &lt;nFoundExitObject&gt;<br/>\t\t\t}<br/>\t\t}<br/>\t}<br/>\t<br/>\tif (%nFoundExitObject% = 0) then {<br/>\t\tif property &lt;#p1#; #p2#&gt; then {<br/>\t\t\tgoto &lt;$objectproperty(#p1#; #p2#)$&gt;<br/>\t\t}<br/>\t\telse {<br/>\t\t\tmsg &lt;You cannot go that way&#46;&gt;<br/>\t\t}<br/>\t}\t<br/><br/>end define</code></pre>",
      "PostDate": "2009-05-02T21:43:48+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16548",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "Think you might have a slight problem with that code overcat (nFoundExitObject) - since the IF statement will never be true if it's an exit object..\n\nI think the exits should have &quot;define exit &lt;&gt;&quot; instead of object personally.\n\n.. But yes, in order of priority:\n\nCOMMAND (quest commands have their own priority structure)\nObject\nAction (these would include &quot;north {..script..}&quot; )\nProperty (these would include &quot;north &lt;room&gt;&quot; - not &quot;north msg &lt;value&gt;&quot; )\n\nI still see a problem that exit objects are not handled in a &quot;default&quot; way (again - I haven't read the docs, sorry) yet..\nIE, no pre-defined actions/properties/whatnot.\n.. Then again maybe it's not needed? (since you'd be highly customizing the movement structure to take advantage of these objects in the first place?)",
      "EditableFormat": "bbcode",
      "HTML": "Think you might have a slight problem with that code overcat (nFoundExitObject) - since the IF statement will never be true if it's an exit object..<br/><br/>I think the exits should have &quot;define exit &lt;&gt;&quot; instead of object personally.<br/><br/>.. But yes, in order of priority:<br/><br/>COMMAND (quest commands have their own priority structure)<br/>Object<br/>Action (these would include &quot;north {..script..}&quot; )<br/>Property (these would include &quot;north &lt;room&gt;&quot; - not &quot;north msg &lt;value&gt;&quot; )<br/><br/>I still see a problem that exit objects are not handled in a &quot;default&quot; way (again - I haven't read the docs, sorry) yet..<br/>IE, no pre-defined actions/properties/whatnot.<br/>.. Then again maybe it's not needed? (since you'd be highly customizing the movement structure to take advantage of these objects in the first place?)",
      "PostDate": "2009-05-03T22:30:14+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16549",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "[quote:2u8ghq9y]since the IF statement will never be true if it's an exit object..[/quote:2u8ghq9y]\n\nWhich IF statement?\n\n[quote:2u8ghq9y]I think the exits should have &quot;define exit &lt;&gt;&quot; instead of object personally.[/quote:2u8ghq9y]\n\nI agree.  One could still implement exits via 'define object', if one so desired.\n\n[quote:2u8ghq9y]COMMAND (quest commands have their own priority structure)\nObject\nAction (these would include &quot;north {..script..}&quot; )\nProperty (these would include &quot;north &lt;room&gt;&quot; - not &quot;north msg &lt;value&gt;&quot; )[/quote:2u8ghq9y]\n\nI hadn't taken into account commands within a room (as far as priority).  Will have to play with that to see what else I can do.\n\n[quote:2u8ghq9y]I still see a problem that exit objects are not handled in a &quot;default&quot; way (again - I haven't read the docs, sorry) yet..\nIE, no pre-defined actions/properties/whatnot.\n.. Then again maybe it's not needed? (since you'd be highly customizing the movement structure to take advantage of these objects in the first place?)[/quote:2u8ghq9y]\n\nThere is a 'locked' property, and a corresponding keyword.  My opinion is that, the more ways there are to do something, the better.  Redundancy can be a good thing.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>since the IF statement will never be true if it's an exit object..</p></blockquote><br/><br/>Which IF statement?<br/><br/><blockquote><p>I think the exits should have &quot;define exit &lt;&gt;&quot; instead of object personally.</p></blockquote><br/><br/>I agree.  One could still implement exits via 'define object', if one so desired.<br/><br/><blockquote><p>COMMAND (quest commands have their own priority structure)<br/>Object<br/>Action (these would include &quot;north {..script..}&quot; )<br/>Property (these would include &quot;north &lt;room&gt;&quot; - not &quot;north msg &lt;value&gt;&quot; )</p></blockquote><br/><br/>I hadn't taken into account commands within a room (as far as priority).  Will have to play with that to see what else I can do.<br/><br/><blockquote><p>I still see a problem that exit objects are not handled in a &quot;default&quot; way (again - I haven't read the docs, sorry) yet..<br/>IE, no pre-defined actions/properties/whatnot.<br/>.. Then again maybe it's not needed? (since you'd be highly customizing the movement structure to take advantage of these objects in the first place?)</p></blockquote><br/><br/>There is a 'locked' property, and a corresponding keyword.  My opinion is that, the more ways there are to do something, the better.  Redundancy can be a good thing.",
      "PostDate": "2009-05-05T21:37:20+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16551",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "if there's a &quot;locked&quot; - I'm guessing &quot;unlocked&quot; is basically a &quot;not locked&quot; alternative?\nBecause there used to be &quot;alive&quot; and &quot;dead&quot; - I wonder what happened to those?\n\nThe last if statement (if (nobjectexitsfound) ) - I tried to point it out with the name of the variable being compared.\n\nAs said, I'm a bit flippy-floppy over a standard/default exit-object handling method.\nI'm not sure if there should or shouldn't since those using it would be customizing it etc.",
      "EditableFormat": "bbcode",
      "HTML": "if there's a &quot;locked&quot; - I'm guessing &quot;unlocked&quot; is basically a &quot;not locked&quot; alternative?<br/>Because there used to be &quot;alive&quot; and &quot;dead&quot; - I wonder what happened to those?<br/><br/>The last if statement (if (nobjectexitsfound) ) - I tried to point it out with the name of the variable being compared.<br/><br/>As said, I'm a bit flippy-floppy over a standard/default exit-object handling method.<br/>I'm not sure if there should or shouldn't since those using it would be customizing it etc.",
      "PostDate": "2009-05-06T00:16:02+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16558",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "[quote:3htgm2qd]if there's a &quot;locked&quot; - I'm guessing &quot;unlocked&quot; is basically a &quot;not locked&quot; alternative?[/quote:3htgm2qd]\n\nI think so.\n\n[quote:3htgm2qd]The last if statement (if (nobjectexitsfound) ) - I tried to point it out with the name of the variable being compared.[/quote:3htgm2qd]\n\nWell, from my last testing in 4.1, the above worked regardless - I was implementing exit objects with 'define object'.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>if there's a &quot;locked&quot; - I'm guessing &quot;unlocked&quot; is basically a &quot;not locked&quot; alternative?</p></blockquote><br/><br/>I think so.<br/><br/><blockquote><p>The last if statement (if (nobjectexitsfound) ) - I tried to point it out with the name of the variable being compared.</p></blockquote><br/><br/>Well, from my last testing in 4.1, the above worked regardless - I was implementing exit objects with 'define object'.",
      "PostDate": "2009-05-09T19:38:53+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16562",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "Ah sorry - just re-read the code and saw you were using it to check for objects and then properties.",
      "EditableFormat": "bbcode",
      "HTML": "Ah sorry - just re-read the code and saw you were using it to check for objects and then properties.",
      "PostDate": "2009-05-10T15:27:50+01:00",
      "LastEditDate": null
    }
  ]
}
