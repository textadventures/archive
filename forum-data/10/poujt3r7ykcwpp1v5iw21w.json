{
  "Topic": {
    "TopicId": "poujt3r7ykcwpp1v5iw21w",
    "ForumId": "10",
    "Title": "Am I being dumb?",
    "LastUpdated": "2017-09-13T12:14:04.2747382Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "de352ab7-ec84-4774-855b-ba4644c243a9",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm doing something weird here, I think. And would appreciate opinions on whether it's good weird or bad weird, and if there's a more \"sane\" way to do it.\r\n\r\nMy character creation menu ends up with quite a lot of internal state (a lot like the parser in some ways). I'm making a command with the pattern \"^(character )?(?<text>.*)$\" ... which removes the first question mark from the pattern when you finish it. So at a later point you can come back and type \"character race elf\" or \"character male\"; but until you've defined the mandatory options, the initial \"character\" in the command is optional and all other commands are disabled.\r\n\r\nNow, the weirdness comes in because the character creation system has some state which isn't really a property of the character, and I don't want to load him down with a ton of temporary attributes. So I figured I can just use 'this' (setting attributes on the Command itself).\r\n\r\nBut then I want to initialise those parameters to a sensible value; and the method that rolled off the end of my fingers is something that feels natural, looks elegant in a weird kind of way, but I get the impression some coders would say it's crazy:\r\n\r\n```\r\nthis.input_mode = \"menu\"\r\nthis.guidance = true\r\nthis.required_attributes = Split(\"name;pronouns;class;race\", \";\")\r\nthis.all_attribute_synonyms = Split(\"name,title;age;sex,gender;class,job;race\", \";\")\r\n// ... etc etc ...\r\n\r\nthis.script => {\r\n  // code to parse `text` and set some variables\r\n}\r\n\r\nuseless_dictionary = NewStringDictionary()\r\ndictionary add (useless_dictionary, \"text\", text)\r\ndo (this, \"script\", useless_dictionary)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm doing something weird here, I think. And would appreciate opinions on whether it's good weird or bad weird, and if there's a more \"sane\" way to do it.</p>\n<p>My character creation menu ends up with quite a lot of internal state (a lot like the parser in some ways). I'm making a command with the pattern \"^(character )?(?</p>\n<p>Now, the weirdness comes in because the character creation system has some state which isn't really a property of the character, and I don't want to load him down with a ton of temporary attributes. So I figured I can just use 'this' (setting attributes on the Command itself).</p>\n<p>But then I want to initialise those parameters to a sensible value; and the method that rolled off the end of my fingers is something that feels natural, looks elegant in a weird kind of way, but I get the impression some coders would say it's crazy:</p>\n<pre><code>this.input_mode = \"menu\"\nthis.guidance = true\nthis.required_attributes = Split(\"name;pronouns;class;race\", \";\")\nthis.all_attribute_synonyms = Split(\"name,title;age;sex,gender;class,job;race\", \";\")\n// ... etc etc ...\n\nthis.script =&gt; {\n  // code to parse `text` and set some variables\n}\n\nuseless_dictionary = NewStringDictionary()\ndictionary add (useless_dictionary, \"text\", text)\ndo (this, \"script\", useless_dictionary)\n</code></pre>\n\n",
      "PostDate": "2017-09-13T12:14:04.2747382Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "07bd9257-9585-4891-aff5-2278e80e8c28",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yet again, I forget the &amp;lt; in the post.\r\n\r\nAnd yet again, trying to edit my post gives \"You can't post that here\".\r\n\r\nParagraph 2 should read:\r\n> My character creation menu ends up with quite a lot of internal state (a lot like the parser in some ways). I'm making a command with the pattern \"^(character )?(?&lt;text&gt;.*)$\" ... which removes the first question mark from the pattern when you finish it. So at a later point you can come back and type \"character race elf\" or \"character male\"; but until you've defined the mandatory options, the initial \"character\" in the command is optional and all other commands are disabled.\r\n\r\n(though that's mostly irrelevant)",
      "EditableFormat": "markdown",
      "HTML": "<p>Yet again, I forget the &amp;lt; in the post.</p>\n<p>And yet again, trying to edit my post gives \"You can't post that here\".</p>\n<p>Paragraph 2 should read:</p>\n<blockquote>\n<p>My character creation menu ends up with quite a lot of internal state (a lot like the parser in some ways). I'm making a command with the pattern \"^(character )?(?&lt;text&gt;.*)$\" ... which removes the first question mark from the pattern when you finish it. So at a later point you can come back and type \"character race elf\" or \"character male\"; but until you've defined the mandatory options, the initial \"character\" in the command is optional and all other commands are disabled.</p>\n</blockquote>\n<p>(though that's mostly irrelevant)</p>\n\n",
      "PostDate": "2017-09-13T12:23:37.9524026Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bdd4cc79-6c42-4689-a3e3-ab32effc6126",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This will cause problems I would guess, as this will be in the \"script\" attribute:\r\n```\r\nthis.script => {\r\n  // code to parse `text` and set some variables\r\n}\r\n```\r\nThe best way to initialise objects (you cannot do this with commands though) is in their initialisation script. Look for the tick box on the _Features_ tab.\r\n\r\nAlso, you probably want a space after `(character )?`",
      "EditableFormat": "markdown",
      "HTML": "<p>This will cause problems I would guess, as this will be in the \"script\" attribute:</p>\n<pre><code>this.script =&gt; {\n  // code to parse `text` and set some variables\n}\n</code></pre>\n<p>The best way to initialise objects (you cannot do this with commands though) is in their initialisation script. Look for the tick box on the <em>Features</em> tab.</p>\n<p>Also, you probably want a space after <code>(character )?</code></p>\n\n",
      "PostDate": "2017-09-13T13:38:38.1823772Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5d7108ca-4918-4314-8f8a-e1abea9d53fa",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> This will cause problems I would guess, as this will be in the \"script\" attribute:\r\n\r\nI'm not sure why that's a problem; that's where it's supposed to be. Maybe this is what learning LISP does to your brain … too much experience on a system that likes to mix code and data :p",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>This will cause problems I would guess, as this will be in the \"script\" attribute:</p>\n</blockquote>\n<p>I'm not sure why that's a problem; that's where it's supposed to be. Maybe this is what learning LISP does to your brain … too much experience on a system that likes to mix code and data :p</p>\n\n",
      "PostDate": "2017-09-13T14:17:47.8840212Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
