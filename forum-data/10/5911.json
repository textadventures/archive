{
  "Topic": {
    "TopicId": "5911",
    "ForumId": "10",
    "Title": "Ajax call from JS code cross-domain",
    "LastUpdated": "2016-01-24T17:26:44+00:00",
    "ReplyCount": 4
  },
  "Posts": [
    {
      "PostId": "40926",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "A bit of an obscure question, but I'll ask it here in case anyone else is doing obscure stuff.\n\nI'm trying to integrate a JS library into Quest (one of mine, just for fun, to see if I can), and the code uses $.ajax to load files. However, when I provide the &quot;GetFileURL&quot; url to that API, I get an error like this:\n\n[quote:3ph8d68y]XMLHttpRequest cannot load <!-- m --><a class=\"postlink\" href=\"quest://local/helloworld.txt?_=1453648271432\">quest://local/helloworld.txt?_=1453648271432</a><!-- m -->. Cross origin requests are only supported for protocol schemes: http, data, chrome-devtools, chrome, https.[/quote:3ph8d68y]\n\nI had this problem with Chrome before, and I had to resort to using a local (node) web server to give it a URL it would be able to load from. I hadn't expected to see this with Quest. And using a web server won't work, as Quest is serving files itself.\n\nIs there a better URL to use to access local files from a JS Ajax call if the normal &quot;quest://&quot; ones don't work? Or is it just hopeless?\n\nIdeally I'd like to be able to load files on demand from the JS code, as one file can &quot;include&quot; another, and the code needs to be able to resolve those references itself without having to go back to the Quest ASLX file to load the data.\n\nIf there is no other solution, I'll have to resort to something less ideal, but let's shoot for ideal first. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "A bit of an obscure question, but I'll ask it here in case anyone else is doing obscure stuff.<br/><br/>I'm trying to integrate a JS library into Quest (one of mine, just for fun, to see if I can), and the code uses $.ajax to load files. However, when I provide the &quot;GetFileURL&quot; url to that API, I get an error like this:<br/><br/><blockquote><p>XMLHttpRequest cannot load <!-- m --><a class=\"postlink\" href=\"quest://local/helloworld.txt?_=1453648271432\">quest://local/helloworld.txt?_=1453648271432</a><!-- m -->. Cross origin requests are only supported for protocol schemes: http, data, chrome-devtools, chrome, https.</p></blockquote><br/><br/>I had this problem with Chrome before, and I had to resort to using a local (node) web server to give it a URL it would be able to load from. I hadn't expected to see this with Quest. And using a web server won't work, as Quest is serving files itself.<br/><br/>Is there a better URL to use to access local files from a JS Ajax call if the normal &quot;quest://&quot; ones don't work? Or is it just hopeless?<br/><br/>Ideally I'd like to be able to load files on demand from the JS code, as one file can &quot;include&quot; another, and the code needs to be able to resolve those references itself without having to go back to the Quest ASLX file to load the data.<br/><br/>If there is no other solution, I'll have to resort to something less ideal, but let's shoot for ideal first. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2016-01-24T15:18:25+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40927",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "There's probably a setting in CefSharp (the .net binding for Chromium embedded that Quest uses) which would allow this.\n\nCould you attach a test file?",
      "EditableFormat": "bbcode",
      "HTML": "There's probably a setting in CefSharp (the .net binding for Chromium embedded that Quest uses) which would allow this.<br/><br/>Could you attach a test file?",
      "PostDate": "2016-01-24T15:46:53+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40929",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Here's my current working folder. More files than you probably need, but it will do the trick.\n\nThe two main file to examine at this point are rif_glue.js which has the &quot;init&quot; function called by the game start script (and sets the load prefix) and rif_engine.js, where it does the actual ajax call.\n\nBut if you just start up the game and then examine the HTML console, you'll see the error.\n\nThanks!",
      "EditableFormat": "bbcode",
      "HTML": "Here's my current working folder. More files than you probably need, but it will do the trick.<br/><br/>The two main file to examine at this point are rif_glue.js which has the &quot;init&quot; function called by the game start script (and sets the load prefix) and rif_engine.js, where it does the actual ajax call.<br/><br/>But if you just start up the game and then examine the HTML console, you'll see the error.<br/><br/>Thanks!<div><a href=\"/attachment/1472\">RIF for Quest.zip</a></div>",
      "PostDate": "2016-01-24T15:57:04+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40931",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Just an FYI. I tried the route of calling up to the ASLX file and then sending the data back down, but I ran into a quirk with GetFileData, which is that when it joins the lines together into a single string, it doesn't add *any* whitespace where the EOL was. So if I have a file like:\n\n[quote:8gcgdyy7]line one\nline two\nline three[/quote:8gcgdyy7]\n\nI get back as a string\n\n[quote:8gcgdyy7]line oneline twoline three[/quote:8gcgdyy7]\n\nwhich is useless in my case (and I suspect a lot of others). I realise this is just implemented with C#'s File.ReadAllText, but I can't believe they implemented it like that. Doesn't seem entirely useful, unless it's meant for a different case than reading a file with tokens. Even human text would get mangled with that. (I could make a request to have the implementation of GetFileData changed to use GetFileLines followed by a Join with spaces, but I'm not sure it will be an issue long term if this other problem can be fixed. Otherwise, it will be.)",
      "EditableFormat": "bbcode",
      "HTML": "Just an FYI. I tried the route of calling up to the ASLX file and then sending the data back down, but I ran into a quirk with GetFileData, which is that when it joins the lines together into a single string, it doesn't add *any* whitespace where the EOL was. So if I have a file like:<br/><br/><blockquote><p>line one<br/>line two<br/>line three</p></blockquote><br/><br/>I get back as a string<br/><br/><blockquote><p>line oneline twoline three</p></blockquote><br/><br/>which is useless in my case (and I suspect a lot of others). I realise this is just implemented with C#'s File.ReadAllText, but I can't believe they implemented it like that. Doesn't seem entirely useful, unless it's meant for a different case than reading a file with tokens. Even human text would get mangled with that. (I could make a request to have the implementation of GetFileData changed to use GetFileLines followed by a Join with spaces, but I'm not sure it will be an issue long term if this other problem can be fixed. Otherwise, it will be.)",
      "PostDate": "2016-01-24T16:47:04+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40932",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "And just to round this out, if the file methods don't work (or if changing Chromium won't be available for a while), I can fall back to a plan I had originally, which is just to have the text in the .aslx file and inject it down. So it's no problem regardless.",
      "EditableFormat": "bbcode",
      "HTML": "And just to round this out, if the file methods don't work (or if changing Chromium won't be available for a while), I can fall back to a plan I had originally, which is just to have the text in the .aslx file and inject it down. So it's no problem regardless.",
      "PostDate": "2016-01-24T17:26:44+00:00",
      "LastEditDate": null
    }
  ]
}
