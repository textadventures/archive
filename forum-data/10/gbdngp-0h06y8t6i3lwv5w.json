{
  "Topic": {
    "TopicId": "gbdngp-0h06y8t6i3lwv5w",
    "ForumId": "10",
    "Title": "Moving a spaceship",
    "LastUpdated": "2018-02-19T02:03:28.2684643Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "3bc5e463-e242-440e-aa2a-ae1bf9a3d6bd",
      "UserId": 301028,
      "Username": "J_H_Bailey",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6d97974102fba5af8e88283575cc59f4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm not a \"code\" person so I'm having my doubts that this can be done through the GUI.\r\nYou have a spaceship on Planet A. You can go out to the space dock or in to the ship's airlock.\r\nOnce in the ship you want to fly the entire thing (maybe 5-10 rooms encompassing the ship) to Planet B. Now when you go out the airlock you want to be on the space dock of Planet B.\r\n\r\nOverall, I'm enjoying playing around with Quest. I'm not so much a game writer as I am an environment builder. For example, I have mapped out pretty much all of Gotham City including the entire Wayne Manor. But don't have a story to plug in to it.\r\n\r\nThanks for any help.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not a \"code\" person so I'm having my doubts that this can be done through the GUI.<br>\nYou have a spaceship on Planet A. You can go out to the space dock or in to the ship's airlock.<br>\nOnce in the ship you want to fly the entire thing (maybe 5-10 rooms encompassing the ship) to Planet B. Now when you go out the airlock you want to be on the space dock of Planet B.</p>\n<p>Overall, I'm enjoying playing around with Quest. I'm not so much a game writer as I am an environment builder. For example, I have mapped out pretty much all of Gotham City including the entire Wayne Manor. But don't have a story to plug in to it.</p>\n<p>Thanks for any help.</p>\n\n",
      "PostDate": "2018-02-19T02:03:28.2684643Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fe3b3592-e3d1-410c-9aee-2fb2cb053189",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\nThe easiest thing would probably be providing an example game.\r\n\r\n\r\n---\r\nClick details to view the code.\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"From Planet A to Planet B\">\r\n    <gameid>4fd65ae8-2209-44b5-b3cc-adfbe9648b95</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n  </game>\r\n  <object name=\"Planet A\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"SpaceshipA\">\r\n      <getinto type=\"script\">\r\n        MoveObject (player, Spaceship)\r\n      </getinto>\r\n      <alias>Spaceship</alias>\r\n      <description><![CDATA[You are currently on Planet A.<br/><br/>You can {command:FLY TO PLANET B}.]]></description>\r\n      <look>A nice, shiny spaceship.</look>\r\n      <displayverbs type=\"stringlist\">\r\n        <value>Look at</value>\r\n      </displayverbs>\r\n      <command name=\"fly_to_cmd\">\r\n        <pattern>fly to #text#</pattern>\r\n        <script>\r\n          FlyFunction (text)\r\n        </script>\r\n      </command>\r\n      <exit alias=\"out\" to=\"Planet A\">\r\n        <inherit name=\"outdirection\" />\r\n      </exit>\r\n    </object>\r\n    <exit alias=\"in\" to=\"SpaceshipA\">\r\n      <inherit name=\"indirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Planet B\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"SpaceshipB\">\r\n      <getinto type=\"script\">\r\n        MoveObject (, )\r\n      </getinto>\r\n      <alias>Spaceship</alias>\r\n      <description><![CDATA[You are currently on Planet B.<br/><br/>You can {command:FLY TO PLANET A}.]]></description>\r\n      <look>A nice, shiny spaceship.</look>\r\n      <command name=\"fly_to_cmd1\">\r\n        <pattern>fly to #text#</pattern>\r\n        <script>\r\n          FlyFunction (text)\r\n        </script>\r\n      </command>\r\n      <exit alias=\"out\" to=\"Planet B\">\r\n        <inherit name=\"outdirection\" />\r\n      </exit>\r\n    </object>\r\n    <exit alias=\"in\" to=\"SpaceshipB\">\r\n      <inherit name=\"indirection\" />\r\n    </exit>\r\n  </object>\r\n  <verb>\r\n    <property>getinto</property>\r\n    <pattern>get into</pattern>\r\n    <defaultexpression>\"You can't get into \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n  <function name=\"FlyFunction\" parameters=\"text\">\r\n    if (LCase(text) = \"planet a\") {\r\n      if (player.parent = SpaceshipA) {\r\n        msg (\"You are already there.\")\r\n      }\r\n      else {\r\n        MoveObject (player, SpaceshipA)\r\n      }\r\n    }\r\n    else if (LCase(text) = \"planet b\") {\r\n      if (player.parent = SpaceshipB) {\r\n        msg (\"You are already there.\")\r\n      }\r\n      else {\r\n        MoveObject (player, SpaceshipB)\r\n      }\r\n    }\r\n    else {\r\n      msg (\"I didn't understand your command.\")\r\n    }\r\n  </function>\r\n</asl>\r\n\r\n```\r\n\r\n</details>\r\n\r\n\r\n---\r\nYou can download this, open it up, and look around at everything.\r\n\r\n\r\nRight-click this link, then select \"Save Link As\" to download it:\r\n\r\n<a href=\"https://gist.githubusercontent.com/KVonGit/5f5937e950d2fea5f0d315d1121c15b3/raw/5f4c4fa2bf252f17dc13c9be469570847fd19602/From%2520Planet%2520A%2520to%2520Planet%2520B.aslx\">From Planet A to Planet B</a>\r\n\r\n---\r\nBasically, I made two spaceships, and I move the player to a different ship when he or she enters FLY TO PLANET A or FLY TO PLANET B.\r\n\r\nIt's a very rough example, but it's the easiest way to do it if you want to be able to enter and exit the ship without a lot of extra coding.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p>The easiest thing would probably be providing an example game.</p>\n<hr>\n<p>Click details to view the code.</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"From Planet A to Planet B\"&gt;\n    &lt;gameid&gt;4fd65ae8-2209-44b5-b3cc-adfbe9648b95&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"Planet A\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"SpaceshipA\"&gt;\n      &lt;getinto type=\"script\"&gt;\n        MoveObject (player, Spaceship)\n      &lt;/getinto&gt;\n      &lt;alias&gt;Spaceship&lt;/alias&gt;\n      &lt;description&gt;&lt;![CDATA[You are currently on Planet A.&lt;br/&gt;&lt;br/&gt;You can {command:FLY TO PLANET B}.]]&gt;&lt;/description&gt;\n      &lt;look&gt;A nice, shiny spaceship.&lt;/look&gt;\n      &lt;displayverbs type=\"stringlist\"&gt;\n        &lt;value&gt;Look at&lt;/value&gt;\n      &lt;/displayverbs&gt;\n      &lt;command name=\"fly_to_cmd\"&gt;\n        &lt;pattern&gt;fly to #text#&lt;/pattern&gt;\n        &lt;script&gt;\n          FlyFunction (text)\n        &lt;/script&gt;\n      &lt;/command&gt;\n      &lt;exit alias=\"out\" to=\"Planet A\"&gt;\n        &lt;inherit name=\"outdirection\" /&gt;\n      &lt;/exit&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"in\" to=\"SpaceshipA\"&gt;\n      &lt;inherit name=\"indirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Planet B\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"SpaceshipB\"&gt;\n      &lt;getinto type=\"script\"&gt;\n        MoveObject (, )\n      &lt;/getinto&gt;\n      &lt;alias&gt;Spaceship&lt;/alias&gt;\n      &lt;description&gt;&lt;![CDATA[You are currently on Planet B.&lt;br/&gt;&lt;br/&gt;You can {command:FLY TO PLANET A}.]]&gt;&lt;/description&gt;\n      &lt;look&gt;A nice, shiny spaceship.&lt;/look&gt;\n      &lt;command name=\"fly_to_cmd1\"&gt;\n        &lt;pattern&gt;fly to #text#&lt;/pattern&gt;\n        &lt;script&gt;\n          FlyFunction (text)\n        &lt;/script&gt;\n      &lt;/command&gt;\n      &lt;exit alias=\"out\" to=\"Planet B\"&gt;\n        &lt;inherit name=\"outdirection\" /&gt;\n      &lt;/exit&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"in\" to=\"SpaceshipB\"&gt;\n      &lt;inherit name=\"indirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;verb&gt;\n    &lt;property&gt;getinto&lt;/property&gt;\n    &lt;pattern&gt;get into&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't get into \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;function name=\"FlyFunction\" parameters=\"text\"&gt;\n    if (LCase(text) = \"planet a\") {\n      if (player.parent = SpaceshipA) {\n        msg (\"You are already there.\")\n      }\n      else {\n        MoveObject (player, SpaceshipA)\n      }\n    }\n    else if (LCase(text) = \"planet b\") {\n      if (player.parent = SpaceshipB) {\n        msg (\"You are already there.\")\n      }\n      else {\n        MoveObject (player, SpaceshipB)\n      }\n    }\n    else {\n      msg (\"I didn't understand your command.\")\n    }\n  &lt;/function&gt;\n&lt;/asl&gt;\n\n</code></pre>\n</details>\n<hr>\n<p>You can download this, open it up, and look around at everything.</p>\n<p>Right-click this link, then select \"Save Link As\" to download it:</p>\n<p><a href=\"https://gist.githubusercontent.com/KVonGit/5f5937e950d2fea5f0d315d1121c15b3/raw/5f4c4fa2bf252f17dc13c9be469570847fd19602/From%2520Planet%2520A%2520to%2520Planet%2520B.aslx\">From Planet A to Planet B</a></p>\n<hr>\n<p>Basically, I made two spaceships, and I move the player to a different ship when he or she enters FLY TO PLANET A or FLY TO PLANET B.</p>\n<p>It's a very rough example, but it's the easiest way to do it if you want to be able to enter and exit the ship without a lot of extra coding.</p>\n\n",
      "PostDate": "2018-02-19T03:14:22.8617771Z",
      "LastEditDate": "2018-02-22T15:39:59.0217765Z",
      "link": null
    },
    {
      "PostId": "0a3d3ccd-e89c-4e34-82ff-c4f56218c6bc",
      "UserId": 301028,
      "Username": "J_H_Bailey",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6d97974102fba5af8e88283575cc59f4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's quite interesting. I'm going to play around with that.\r\nThanks",
      "EditableFormat": "markdown",
      "HTML": "<p>That's quite interesting. I'm going to play around with that.<br>\nThanks</p>\n\n",
      "PostDate": "2018-02-19T03:43:27.2430006Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "45c3b932-fa49-4300-bf56-dd738bc6ddcc",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Basically, I made two spaceships, and I move the player to a different ship when he or she enters FLY TO PLANET A or FLY TO PLANET B.\r\n\r\nThat seems like it could lead to issues if the player puts objects on the ship, or if there's any other parts of the ship with more complex behaviour. You'd have to be careful that, for example, both ships are affected if some event can damage the ship, and make sure that all objects inside the ship are moved over.\r\n\r\nI'd think it might be more efficient to just move the exit. That is, give a name to the exit that leads from the ship's airlock to the landing field, and the exit that goes in the opposite direction. Then you could do something like:\r\n```\r\nMoveObject (ship_incoming_exit, planetB_landing_field)\r\nship_outgoing_exit.to = planetB_landing_field\r\n```\r\n\r\n(Yes, I know that's the opposite of what I'd suggest for a lift. But if the ship is multiple rooms, it seems the simpler choice)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Basically, I made two spaceships, and I move the player to a different ship when he or she enters FLY TO PLANET A or FLY TO PLANET B.</p>\n</blockquote>\n<p>That seems like it could lead to issues if the player puts objects on the ship, or if there's any other parts of the ship with more complex behaviour. You'd have to be careful that, for example, both ships are affected if some event can damage the ship, and make sure that all objects inside the ship are moved over.</p>\n<p>I'd think it might be more efficient to just move the exit. That is, give a name to the exit that leads from the ship's airlock to the landing field, and the exit that goes in the opposite direction. Then you could do something like:</p>\n<pre><code>MoveObject (ship_incoming_exit, planetB_landing_field)\nship_outgoing_exit.to = planetB_landing_field\n</code></pre>\n<p>(Yes, I know that's the opposite of what I'd suggest for a lift. But if the ship is multiple rooms, it seems the simpler choice)</p>\n\n",
      "PostDate": "2018-02-19T09:21:01.9361435Z",
      "LastEditDate": "2018-02-19T09:22:46.7673126Z",
      "link": null
    },
    {
      "PostId": "9eb5ceaa-043c-4790-b412-9f37e22acdd2",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How about this one?\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Space Travel\">\r\n    <gameid>683034e8-7b68-438c-9fe8-4eab0959fee9</gameid>\r\n    <version>0.0.2</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <gridmap />\r\n    <attr name=\"autodescription_youarein_useprefix\" type=\"boolean\">false</attr>\r\n    <attr name=\"autodescription_description\" type=\"int\">2</attr>\r\n    <attr name=\"autodescription_youcango\" type=\"int\">4</attr>\r\n    <attr name=\"autodescription_youcansee\" type=\"int\">3</attr>\r\n    <description>A Quest adventure.</description>\r\n    <author>K.V.</author>\r\n  </game>\r\n  <object name=\"Earth Spaceport\">\r\n    <inherit name=\"editor_room\" />\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <prefix>the</prefix>\r\n    <object name=\"Spaceship\">\r\n      <grid_render />\r\n      <grid_parent_offset_auto />\r\n      <feature_startscript />\r\n      <attr name=\"_initialise_\" type=\"script\">\r\n        AddDestination (this, Earth Spaceport)\r\n        AddDestination (this, Moon Spaceport)\r\n      </attr>\r\n      <board type=\"script\">\r\n        MoveObject (game.pov, this)\r\n      </board>\r\n      <description>Enter {command:TRAVEL} to go somewhere.</description>\r\n      <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n      <displayverbs type=\"stringlist\">\r\n        <value>Look at</value>\r\n      </displayverbs>\r\n      <command name=\"travel_cmd\">\r\n        <pattern>travel;fly</pattern>\r\n        <script>\r\n          ShowDestinationMenu\r\n        </script>\r\n      </command>\r\n      <command name=\"disembark_cmd\">\r\n        <pattern>exit;disembark</pattern>\r\n        <script>\r\n          MoveObject (game.pov, game.pov.parent.parent)\r\n        </script>\r\n      </command>\r\n      <exit name=\"ship_out\" alias=\"out\" to=\"Earth Spaceport\">\r\n        <inherit name=\"outdirection\" />\r\n      </exit>\r\n    </object>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"north\" to=\"Earth\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit name=\"ship_in\" alias=\"in\" to=\"Spaceship\">\r\n      <inherit name=\"indirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Moon Spaceport\">\r\n    <inherit name=\"editor_room\" />\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <prefix>the</prefix>\r\n    <exit alias=\"south\" to=\"Moon\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <verb>\r\n    <property>board</property>\r\n    <pattern>board</pattern>\r\n    <defaultexpression>\"You can't board \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n  <object name=\"Earth\">\r\n    <inherit name=\"editor_room\" />\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <exit alias=\"south\" to=\"Earth Spaceport\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Moon\">\r\n    <inherit name=\"editor_room\" />\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <exit alias=\"north\" to=\"Moon Spaceport\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <function name=\"AddDestination\" parameters=\"ship, destination\">\r\n    if (not HasAttribute(ship,\"destinations\")) {\r\n      ship.destinations = NewObjectList()\r\n    }\r\n    list add (ship.destinations, destination)\r\n  </function>\r\n  <function name=\"GetDestinations\" parameters=\"ship\" type=\"objectlist\">\r\n    return (ListExclude(ship.destinations,ship.parent))\r\n  </function>\r\n  <function name=\"ShowDestinationMenu\">\r\n    ShowMenu (\"Where would you like to go?\", GetDestinations(game.pov.parent), true) {\r\n      TravelTo (game.pov.parent, GetObject(result))\r\n    }\r\n  </function>\r\n  <function name=\"TravelTo\" parameters=\"ship, to\">\r\n    from = game.pov.parent.parent\r\n    set (game.pov, \"saved_map_for_\" + from.name, game.pov.grid_coordinates)\r\n    if (HasAttribute(game.pov, \"saved_map_for_\" + to.name)) {\r\n      game.pov.grid_coordinates = GetAttribute(game.pov, \"saved_map_for_\" + to.name)\r\n    }\r\n    else {\r\n      game.pov.grid_coordinates = null\r\n    }\r\n    game.pov.parent.parent = to\r\n    JS.Grid_ClearAllLayers ()\r\n    Grid_Redraw\r\n    Grid_DrawPlayerInRoom (game.pov.parent)\r\n    ship_out.to = to\r\n    ship_in.parent = to\r\n    msg (\"Time passes.  Eventually, you arrive at \" + GetDisplayName(to) + \".\")\r\n    ShowRoomDescription\r\n  </function>\r\n</asl>\r\n```\r\n\r\n</details>\r\n\r\n\r\n---\r\nhttp://textadventures.co.uk/games/view/mqraxurofkkmfcfnhxaxww/space-travel",
      "EditableFormat": "markdown",
      "HTML": "<p>How about this one?</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Space Travel\"&gt;\n    &lt;gameid&gt;683034e8-7b68-438c-9fe8-4eab0959fee9&lt;/gameid&gt;\n    &lt;version&gt;0.0.2&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;gridmap /&gt;\n    &lt;attr name=\"autodescription_youarein_useprefix\" type=\"boolean\"&gt;false&lt;/attr&gt;\n    &lt;attr name=\"autodescription_description\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youcango\" type=\"int\"&gt;4&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youcansee\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;description&gt;A Quest adventure.&lt;/description&gt;\n    &lt;author&gt;K.V.&lt;/author&gt;\n  &lt;/game&gt;\n  &lt;object name=\"Earth Spaceport\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;prefix&gt;the&lt;/prefix&gt;\n    &lt;object name=\"Spaceship\"&gt;\n      &lt;grid_render /&gt;\n      &lt;grid_parent_offset_auto /&gt;\n      &lt;feature_startscript /&gt;\n      &lt;attr name=\"_initialise_\" type=\"script\"&gt;\n        AddDestination (this, Earth Spaceport)\n        AddDestination (this, Moon Spaceport)\n      &lt;/attr&gt;\n      &lt;board type=\"script\"&gt;\n        MoveObject (game.pov, this)\n      &lt;/board&gt;\n      &lt;description&gt;Enter {command:TRAVEL} to go somewhere.&lt;/description&gt;\n      &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n      &lt;displayverbs type=\"stringlist\"&gt;\n        &lt;value&gt;Look at&lt;/value&gt;\n      &lt;/displayverbs&gt;\n      &lt;command name=\"travel_cmd\"&gt;\n        &lt;pattern&gt;travel;fly&lt;/pattern&gt;\n        &lt;script&gt;\n          ShowDestinationMenu\n        &lt;/script&gt;\n      &lt;/command&gt;\n      &lt;command name=\"disembark_cmd\"&gt;\n        &lt;pattern&gt;exit;disembark&lt;/pattern&gt;\n        &lt;script&gt;\n          MoveObject (game.pov, game.pov.parent.parent)\n        &lt;/script&gt;\n      &lt;/command&gt;\n      &lt;exit name=\"ship_out\" alias=\"out\" to=\"Earth Spaceport\"&gt;\n        &lt;inherit name=\"outdirection\" /&gt;\n      &lt;/exit&gt;\n    &lt;/object&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"north\" to=\"Earth\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit name=\"ship_in\" alias=\"in\" to=\"Spaceship\"&gt;\n      &lt;inherit name=\"indirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Moon Spaceport\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;prefix&gt;the&lt;/prefix&gt;\n    &lt;exit alias=\"south\" to=\"Moon\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;verb&gt;\n    &lt;property&gt;board&lt;/property&gt;\n    &lt;pattern&gt;board&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't board \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;object name=\"Earth\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;exit alias=\"south\" to=\"Earth Spaceport\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Moon\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;exit alias=\"north\" to=\"Moon Spaceport\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;function name=\"AddDestination\" parameters=\"ship, destination\"&gt;\n    if (not HasAttribute(ship,\"destinations\")) {\n      ship.destinations = NewObjectList()\n    }\n    list add (ship.destinations, destination)\n  &lt;/function&gt;\n  &lt;function name=\"GetDestinations\" parameters=\"ship\" type=\"objectlist\"&gt;\n    return (ListExclude(ship.destinations,ship.parent))\n  &lt;/function&gt;\n  &lt;function name=\"ShowDestinationMenu\"&gt;\n    ShowMenu (\"Where would you like to go?\", GetDestinations(game.pov.parent), true) {\n      TravelTo (game.pov.parent, GetObject(result))\n    }\n  &lt;/function&gt;\n  &lt;function name=\"TravelTo\" parameters=\"ship, to\"&gt;\n    from = game.pov.parent.parent\n    set (game.pov, \"saved_map_for_\" + from.name, game.pov.grid_coordinates)\n    if (HasAttribute(game.pov, \"saved_map_for_\" + to.name)) {\n      game.pov.grid_coordinates = GetAttribute(game.pov, \"saved_map_for_\" + to.name)\n    }\n    else {\n      game.pov.grid_coordinates = null\n    }\n    game.pov.parent.parent = to\n    JS.Grid_ClearAllLayers ()\n    Grid_Redraw\n    Grid_DrawPlayerInRoom (game.pov.parent)\n    ship_out.to = to\n    ship_in.parent = to\n    msg (\"Time passes.  Eventually, you arrive at \" + GetDisplayName(to) + \".\")\n    ShowRoomDescription\n  &lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n<hr>\n<p>http://textadventures.co.uk/games/view/mqraxurofkkmfcfnhxaxww/space-travel</p>\n\n",
      "PostDate": "2018-02-20T08:08:38.9860237Z",
      "LastEditDate": "2018-02-20T08:10:03.1029476Z",
      "link": null
    },
    {
      "PostId": "895d094d-ee85-4997-a4d8-5fb276ad2f8c",
      "UserId": 301028,
      "Username": "J_H_Bailey",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6d97974102fba5af8e88283575cc59f4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, the spaceship has more than one room and a few NPC's that would have to go with the ship.\r\n\r\nI was also wondering if I could use some sort of IF/THEN routine to move the player to a different location when he left the spaceship. I will have to play around with that idea.\r\n\r\nIt seems to me that there are often different viable solutions to things with Quest and its just a matter of finding what works for you.\r\n\r\nAgain, thanks for all the suggestions. I don't think my adventure will ever see the light of day; I'm just trying to learn to do things with Quest.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, the spaceship has more than one room and a few NPC's that would have to go with the ship.</p>\n<p>I was also wondering if I could use some sort of IF/THEN routine to move the player to a different location when he left the spaceship. I will have to play around with that idea.</p>\n<p>It seems to me that there are often different viable solutions to things with Quest and its just a matter of finding what works for you.</p>\n<p>Again, thanks for all the suggestions. I don't think my adventure will ever see the light of day; I'm just trying to learn to do things with Quest.</p>\n\n",
      "PostDate": "2018-02-20T20:22:06.9153574Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0107a017-0e1e-4338-adf9-3c7becc926f7",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "if you want to learn coding, we'd be happy to help, as quest makes it/coding really (relatively) easy, as while you CAN do everything via the GUI/Editor, being able to code makes it so much faster (and easier) for you to do whatever you want in your game. Here's some links if you're interested:\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/mu7itzjqv0yxrkdwgsbmzg/how-to-make-npc-confront-you-with-chioces#46cdb25b-4767-40a6-8bf4-3cd84e805781\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5559/attributes-and-if-script-guide-by-hk\r\n\r\nI myself found quest knowing nothing of coding at all, and through quest, I'm now taking programming classes at college towards a degree in programming, so I can personally attest to that quest is a great way to learn to code, hehe.\r\n\r\nIf you want to see my own struggle at learning to code when I first found quest:\r\n\r\nhttps://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread\r\n\r\nit's a good laugh in hindsight, but it was a struggle back then, laughs. Though it shows how far I've come/learned, since then, lol",
      "EditableFormat": "markdown",
      "HTML": "<p>if you want to learn coding, we'd be happy to help, as quest makes it/coding really (relatively) easy, as while you CAN do everything via the GUI/Editor, being able to code makes it so much faster (and easier) for you to do whatever you want in your game. Here's some links if you're interested:</p>\n<p>http://textadventures.co.uk/forum/quest/topic/mu7itzjqv0yxrkdwgsbmzg/how-to-make-npc-confront-you-with-chioces#46cdb25b-4767-40a6-8bf4-3cd84e805781</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5559/attributes-and-if-script-guide-by-hk</p>\n<p>I myself found quest knowing nothing of coding at all, and through quest, I'm now taking programming classes at college towards a degree in programming, so I can personally attest to that quest is a great way to learn to code, hehe.</p>\n<p>If you want to see my own struggle at learning to code when I first found quest:</p>\n<p>https://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread</p>\n<p>it's a good laugh in hindsight, but it was a struggle back then, laughs. Though it shows how far I've come/learned, since then, lol</p>\n\n",
      "PostDate": "2018-02-20T20:50:46.2516726Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "954c6cb2-c1c5-4abe-bb47-24ba6bfe39de",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Rooms and objects are the same, just with different properties. Just by moving the rooms around or messing with the exits, you can put multiple rooms in an object. I would just edit the exits to those rooms, you can make an object an exit. But you may want to actually put the rooms in that object.",
      "EditableFormat": "markdown",
      "HTML": "<p>Rooms and objects are the same, just with different properties. Just by moving the rooms around or messing with the exits, you can put multiple rooms in an object. I would just edit the exits to those rooms, you can make an object an exit. But you may want to actually put the rooms in that object.</p>\n\n",
      "PostDate": "2018-02-20T23:15:16.3259498Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1ab55513-f2a4-4e65-b307-4757e05e4203",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think the way I'd likely do it is by having a spaceship object that can be looked at from the outside (\"It's a spaceship, just sitting there on the landing pad\"), and similar things.\r\n\r\nThen you could have the ship's `changedparent` script move the ship's exit to the same place as the ship. Something like `ship_exit_in.parent = this.parent` and `ship_exit_out.to = this.parent` to move the two sides of the exit. That means that wherever the ship is, players will be able to enter and exit it. (if an object has a script attribute named \"changedparent\", it will be run whenever the object is moved. So in any other script or command, you could just do `MoveObject(ship, martian landing field)` or similar, and everything will work)",
      "EditableFormat": "markdown",
      "HTML": "<p>I think the way I'd likely do it is by having a spaceship object that can be looked at from the outside (\"It's a spaceship, just sitting there on the landing pad\"), and similar things.</p>\n<p>Then you could have the ship's <code>changedparent</code> script move the ship's exit to the same place as the ship. Something like <code>ship_exit_in.parent = this.parent</code> and <code>ship_exit_out.to = this.parent</code> to move the two sides of the exit. That means that wherever the ship is, players will be able to enter and exit it. (if an object has a script attribute named \"changedparent\", it will be run whenever the object is moved. So in any other script or command, you could just do <code>MoveObject(ship, martian landing field)</code> or similar, and everything will work)</p>\n\n",
      "PostDate": "2018-02-21T00:23:37.9315137Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "58b0a3ee-75e4-4a0f-b7c5-28b606cc59d7",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n\r\n----------------------\r\n\r\nThe various/differing Attributes that Objects get, either: (1) within just the GUI/Editor (meaning that you can NOT reference/use them, which are the 'editor_XXX' ones, in/for your scripting) or (2) within the entire game (aka: within/during actual game playing), is controlled by the 'core.aslx' Object Types / Inherited Attributes: see link below\r\n\r\nhttp://docs.textadventures.co.uk/quest/elements/object.html (scroll down to the very bottom section 'object types defined by core.asl', to see how Objects are given their various/differing Attributes, however it's missing the 'editor_player' Inherited Attribute / Object Type, and also note that the: 'editor_XXX': 'editor_player', 'editor_room', and 'editor_object', are all only for the GUI/Editor only, they don't exist within your actual game as they're destroyed upon playing your game, so don't try to reference/use them within any scripting, you'll have to make your own way of indicating/flagging for your scriptings' referencing/using, for example, you can create your own 'room_type' Object Type and reference/use it via its 'room_type' Inherited Attribute, or you can just use for example a string attribute, for example: NAME_of_ROOM_OBJECT.type_of_object = \"room\")\r\n\r\nthis is also why working with 'doors/containers/etc' opening/closing/locking/unlocking/etc can be so confusing and difficult... lol, there's a lot of built-in scripting, and also it depends upon what built-in 'Inherited Attribute(s) / Object Type(s)' you're using, (and understanding what and/or how they do what they do, lol)as well, lol.",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>The various/differing Attributes that Objects get, either: (1) within just the GUI/Editor (meaning that you can NOT reference/use them, which are the 'editor_XXX' ones, in/for your scripting) or (2) within the entire game (aka: within/during actual game playing), is controlled by the 'core.aslx' Object Types / Inherited Attributes: see link below</p>\n<p>http://docs.textadventures.co.uk/quest/elements/object.html (scroll down to the very bottom section 'object types defined by core.asl', to see how Objects are given their various/differing Attributes, however it's missing the 'editor_player' Inherited Attribute / Object Type, and also note that the: 'editor_XXX': 'editor_player', 'editor_room', and 'editor_object', are all only for the GUI/Editor only, they don't exist within your actual game as they're destroyed upon playing your game, so don't try to reference/use them within any scripting, you'll have to make your own way of indicating/flagging for your scriptings' referencing/using, for example, you can create your own 'room_type' Object Type and reference/use it via its 'room_type' Inherited Attribute, or you can just use for example a string attribute, for example: NAME_of_ROOM_OBJECT.type_of_object = \"room\")</p>\n<p>this is also why working with 'doors/containers/etc' opening/closing/locking/unlocking/etc can be so confusing and difficult... lol, there's a lot of built-in scripting, and also it depends upon what built-in 'Inherited Attribute(s) / Object Type(s)' you're using, (and understanding what and/or how they do what they do, lol)as well, lol.</p>\n\n",
      "PostDate": "2018-02-21T00:26:07.9364576Z",
      "LastEditDate": "2018-02-21T00:43:06.4779085Z",
      "link": null
    },
    {
      "PostId": "7bb5d8d8-9ff2-4389-a465-70127d226a97",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\r\n\r\n>I think the way I'd likely do it is by having a spaceship object that can be looked at from the outside (\"It's a spaceship, just sitting there on the landing pad\"), and similar things.\r\n>\r\n>Then you could have the ship's changedparent script move the ship's exit to the same place as the ship. Something like ship_exit_in.parent = this.parent and ship_exit_out.to = this.parent to move the two sides of the exit. That means that wherever the ship is, players will be able to enter and exit it. (if an object has a script attribute named \"changedparent\", it will be run whenever the object is moved. So in any other script or command, you could just do MoveObject(ship, martian landing field) or similar, and everything will work)\r\n\r\nThat's what this does (I think):\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/gbdngp-0h06y8t6i3lwv5w/moving-a-spaceship#9eb5ceaa-043c-4790-b412-9f37e22acdd2\r\n\r\n\r\n...and it saves and resets the map when you move the ship, too.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I think the way I'd likely do it is by having a spaceship object that can be looked at from the outside (\"It's a spaceship, just sitting there on the landing pad\"), and similar things.</p>\n<p>Then you could have the ship's changedparent script move the ship's exit to the same place as the ship. Something like ship_exit_in.parent = this.parent and ship_exit_out.to = this.parent to move the two sides of the exit. That means that wherever the ship is, players will be able to enter and exit it. (if an object has a script attribute named \"changedparent\", it will be run whenever the object is moved. So in any other script or command, you could just do MoveObject(ship, martian landing field) or similar, and everything will work)</p>\n</blockquote>\n<p>That's what this does (I think):</p>\n<p>http://textadventures.co.uk/forum/quest/topic/gbdngp-0h06y8t6i3lwv5w/moving-a-spaceship#9eb5ceaa-043c-4790-b412-9f37e22acdd2</p>\n<p>...and it saves and resets the map when you move the ship, too.</p>\n\n",
      "PostDate": "2018-02-21T00:32:58.097088Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "20cd1814-2ca0-419f-8600-7b1a8637913d",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ J.H.Bailey (and MrAngel and KV):\r\n\r\nthis isn't for J.H.Bailey 's usage (unless you guys/girls want to make such a library for him/her: probably am referring to KV, who's working his way on being pixie's rival in library making, lol, though mrangel does make some libraries too, lol/meh), as it uses a bit of more advanced coding to handle it, but I'd personally have a 'root container' Object as the 'spaceship', and have the spaceship's chambers/sectors/areas/etc be nested Objects within the 'root container' Object, as this way the entire spaceship (the 'space ship' and its 'sub-areas') can be moved easily (via moving the 'spaceship' root container Object), though again, you'll need some scripting to handle it's various aspects (such as entering/exiting it, and/or amongst: outside rooms vs 'spaceship' root container vs 'sub-areas' within the root container) working correctly.",
      "EditableFormat": "markdown",
      "HTML": "<p>@ J.H.Bailey (and MrAngel and KV):</p>\n<p>this isn't for J.H.Bailey 's usage (unless you guys/girls want to make such a library for him/her: probably am referring to KV, who's working his way on being pixie's rival in library making, lol, though mrangel does make some libraries too, lol/meh), as it uses a bit of more advanced coding to handle it, but I'd personally have a 'root container' Object as the 'spaceship', and have the spaceship's chambers/sectors/areas/etc be nested Objects within the 'root container' Object, as this way the entire spaceship (the 'space ship' and its 'sub-areas') can be moved easily (via moving the 'spaceship' root container Object), though again, you'll need some scripting to handle it's various aspects (such as entering/exiting it, and/or amongst: outside rooms vs 'spaceship' root container vs 'sub-areas' within the root container) working correctly.</p>\n\n",
      "PostDate": "2018-02-21T00:37:26.1079957Z",
      "LastEditDate": "2018-02-21T00:45:57.4573421Z",
      "link": null
    },
    {
      "PostId": "3f0f6651-06a1-4b1e-8c93-befcb1b47354",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> That's what this does (I think):\r\n\r\nNot quite. Your travel function is quite complex.\r\nI was specifically suggesting that the exit-moving code should be in the ship's changedparent script. That way, whether the player's navigating from the menu, or some in-game event causes the ship to be moved to a different field, the exits will be in the right place.\r\n\r\nThe code to save and restore the map seems a pretty neat idea. But I think at present it has a few weaknesses. The initial question was about a ship with multiple rooms inside it, so you can't assume that game.pov.parent is the ship. It also means that in a multi-room ship, the rooms within the ship would have to be explored once per planet to make them appear on the map.\r\nI was about to suggest something more complex, but then realised that if you're using the ship's `changedparent` method to do the legwork, you can use \"this\" to refer to the ship. If the rooms are nested inside the ship, then (if I remember the map data format correctly) you could have the changedparent script:\r\n```\r\n  this.airlock_exit_out.to = this.parent\r\n  this.airlock_exit_in.parent = this.parent\r\n  if (game.gridmap) {\r\n    oldmap = game.pov.grid_coordinates\r\n    shiprooms = GetAllChildObjects(this) + this\r\n    if (Contains(this, game.pov)) {\r\n      set (game.pov, \"saved_map_for_\" + oldvalue.name, oldmap)\r\n      if (HasAttribute(game.pov, \"saved_map_for_\" + this.parent.name)) {\r\n        game.pov.grid_coordinates = GetAttribute(game.pov, \"saved_map_for_\" + this.parent.name)\r\n      }\r\n      else {\r\n        game.pov.grid_coordinates = null\r\n      }\r\n      foreach (room, shiprooms) {\r\n        if (DictionaryContains (oldmap, room.name)) {\r\n          if (not DictionaryContains (game.pov.grid_coordinates, room.name)) {\r\n            dictionary add (game.pov.grid_coordinates, room.name, DictionaryItem(oldmap, room.name))\r\n            dictionary remove (oldmap, room.name)\r\n          }\r\n        }\r\n      }\r\n      JS.Grid_ClearAllLayers ()\r\n      Grid_Redraw\r\n      Grid_DrawPlayerInRoom (game.pov.parent)\r\n    }\r\n  }\r\n```\r\n\r\nOK ... super inelegant.\r\nIf the ship is stolen by an NPC while the player isn't aboard, its rooms should be removed from the map; or moved to the \"saved_map_for_\" dictionary even if the player currently isn't there. This will also get confused if there are multiple ships; but I think that's an issue that can currently occur too easily with the map system. I think I can see a way around it, but…\r\nI was interrupted in the middle of typing this post, but will try to remember to come back later.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>That's what this does (I think):</p>\n</blockquote>\n<p>Not quite. Your travel function is quite complex.<br>\nI was specifically suggesting that the exit-moving code should be in the ship's changedparent script. That way, whether the player's navigating from the menu, or some in-game event causes the ship to be moved to a different field, the exits will be in the right place.</p>\n<p>The code to save and restore the map seems a pretty neat idea. But I think at present it has a few weaknesses. The initial question was about a ship with multiple rooms inside it, so you can't assume that game.pov.parent is the ship. It also means that in a multi-room ship, the rooms within the ship would have to be explored once per planet to make them appear on the map.<br>\nI was about to suggest something more complex, but then realised that if you're using the ship's <code>changedparent</code> method to do the legwork, you can use \"this\" to refer to the ship. If the rooms are nested inside the ship, then (if I remember the map data format correctly) you could have the changedparent script:</p>\n<pre><code>  this.airlock_exit_out.to = this.parent\n  this.airlock_exit_in.parent = this.parent\n  if (game.gridmap) {\n    oldmap = game.pov.grid_coordinates\n    shiprooms = GetAllChildObjects(this) + this\n    if (Contains(this, game.pov)) {\n      set (game.pov, \"saved_map_for_\" + oldvalue.name, oldmap)\n      if (HasAttribute(game.pov, \"saved_map_for_\" + this.parent.name)) {\n        game.pov.grid_coordinates = GetAttribute(game.pov, \"saved_map_for_\" + this.parent.name)\n      }\n      else {\n        game.pov.grid_coordinates = null\n      }\n      foreach (room, shiprooms) {\n        if (DictionaryContains (oldmap, room.name)) {\n          if (not DictionaryContains (game.pov.grid_coordinates, room.name)) {\n            dictionary add (game.pov.grid_coordinates, room.name, DictionaryItem(oldmap, room.name))\n            dictionary remove (oldmap, room.name)\n          }\n        }\n      }\n      JS.Grid_ClearAllLayers ()\n      Grid_Redraw\n      Grid_DrawPlayerInRoom (game.pov.parent)\n    }\n  }\n</code></pre>\n<p>OK ... super inelegant.<br>\nIf the ship is stolen by an NPC while the player isn't aboard, its rooms should be removed from the map; or moved to the \"saved_map_for_\" dictionary even if the player currently isn't there. This will also get confused if there are multiple ships; but I think that's an issue that can currently occur too easily with the map system. I think I can see a way around it, but…<br>\nI was interrupted in the middle of typing this post, but will try to remember to come back later.</p>\n\n",
      "PostDate": "2018-02-21T01:11:09.4537869Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8c317a7d-2fb2-48a1-b530-c7de71b95ea7",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">I was specifically suggesting that the exit-moving code should be in the ship's changedparent script. That way, whether the player's navigating from the menu, or some in-game event causes the ship to be moved to a different field, the exits will be in the right place.\r\n\r\nAh!\r\n\r\nSo I see!\r\n\r\n>The code to save and restore the map seems a pretty neat idea. But...\r\n\r\nMan, I wish I'd have thought about all those possibilities!\r\n\r\n(I'm also glad you knew I was seriously asking if that's what my script did, rather than thinking I was being unpleasant.)\r\n\r\n---\r\nWhen I posted that code I was thinking it would take much more than an alias change to add rooms inside of the ship and have it all still work, but...\r\n\r\nSomebody stealing the ship or the ship being sent off-course?\r\n\r\nThat, my good sir, is thinking ahead!  (Well played!)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I was specifically suggesting that the exit-moving code should be in the ship's changedparent script. That way, whether the player's navigating from the menu, or some in-game event causes the ship to be moved to a different field, the exits will be in the right place.</p>\n</blockquote>\n<p>Ah!</p>\n<p>So I see!</p>\n<blockquote>\n<p>The code to save and restore the map seems a pretty neat idea. But...</p>\n</blockquote>\n<p>Man, I wish I'd have thought about all those possibilities!</p>\n<p>(I'm also glad you knew I was seriously asking if that's what my script did, rather than thinking I was being unpleasant.)</p>\n<hr>\n<p>When I posted that code I was thinking it would take much more than an alias change to add rooms inside of the ship and have it all still work, but...</p>\n<p>Somebody stealing the ship or the ship being sent off-course?</p>\n<p>That, my good sir, is thinking ahead!  (Well played!)</p>\n\n",
      "PostDate": "2018-02-21T01:24:44.8462886Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bacc670f-d0b8-41d6-85ce-6c95c032ea88",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "just a quick comment:\r\n\r\nJay dealt with the 'visible' issue with maps, by simply having a script iterate (foreach) through all of the rooms, setting their 'visible' to 'true', so they show up and work with the (I think also newly/re drawn) map, before you then are able to move/do stuff as a user playing the game",
      "EditableFormat": "markdown",
      "HTML": "<p>just a quick comment:</p>\n<p>Jay dealt with the 'visible' issue with maps, by simply having a script iterate (foreach) through all of the rooms, setting their 'visible' to 'true', so they show up and work with the (I think also newly/re drawn) map, before you then are able to move/do stuff as a user playing the game</p>\n\n",
      "PostDate": "2018-02-21T01:29:15.9339617Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cda2e336-81da-436e-a744-f21d50bcaa01",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(My thought for the map system was that rather than \"saved_map_for_\", we could have a list of saved disjoint maps. Any time the player teleports to a room with no coordinates, by whatever means, the grid system should add the current map to the list and start a new one. Modify the functions that initially set map coordinates for a new room so that they first check if that room exists in any of the other maps in the list. If it does, then compare its coordinates to find the x, y, and z offsets between the two maps, and copy all rooms from that disjoint map into the current one, adding the differences onto their coordinates as you do so. If the grid system worked like this, then the spaceship code could specifically override it by forcing the ship and its rooms into a separate map when it launches. When it lands again, as soon as the player walks out of the airlock, the same system would glue the map back together automatically)",
      "EditableFormat": "markdown",
      "HTML": "<p>(My thought for the map system was that rather than \"saved_map_for_\", we could have a list of saved disjoint maps. Any time the player teleports to a room with no coordinates, by whatever means, the grid system should add the current map to the list and start a new one. Modify the functions that initially set map coordinates for a new room so that they first check if that room exists in any of the other maps in the list. If it does, then compare its coordinates to find the x, y, and z offsets between the two maps, and copy all rooms from that disjoint map into the current one, adding the differences onto their coordinates as you do so. If the grid system worked like this, then the spaceship code could specifically override it by forcing the ship and its rooms into a separate map when it launches. When it lands again, as soon as the player walks out of the airlock, the same system would glue the map back together automatically)</p>\n\n",
      "PostDate": "2018-02-21T01:40:21.2786815Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "141e9493-b2e5-4ea4-9eda-42064bd9f747",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Jay dealt with the 'visible' issue with maps, by simply having a script iterate (foreach) through all of the rooms, setting their 'visible' to 'true', so they show up and work with the (I think also newly/re drawn) map, before you then are able to move/do stuff as a user playing the game\r\n\r\nI *think* that needs all the rooms to be connected, but I may be thinking of something else.\r\n\r\n(I think you're referencing the teleportation stuff here: http://docs.textadventures.co.uk/quest/showing_a_map.html)\r\n\r\n---\r\nI'm thinking (now) that the best method would be having a separate map for when you are in the spaceship.  It would simply display the rooms you have visited inside of the ship.  \r\n\r\nThis would involve saving the current map to an attribute, then resetting the map, then loading the map with saved map from each different region: the ship and the worlds to which you can travel.  That's what my last example game already does, sans making the ship a region of its own (complete with rooms inside). \r\n\r\nCombining mrangel's method (the ```changedparent``` script on the ship) with the other stuff I've got would probably work quite well. \r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Jay dealt with the 'visible' issue with maps, by simply having a script iterate (foreach) through all of the rooms, setting their 'visible' to 'true', so they show up and work with the (I think also newly/re drawn) map, before you then are able to move/do stuff as a user playing the game</p>\n</blockquote>\n<p>I <em>think</em> that needs all the rooms to be connected, but I may be thinking of something else.</p>\n<p>(I think you're referencing the teleportation stuff here: http://docs.textadventures.co.uk/quest/showing_a_map.html)</p>\n<hr>\n<p>I'm thinking (now) that the best method would be having a separate map for when you are in the spaceship.  It would simply display the rooms you have visited inside of the ship.</p>\n<p>This would involve saving the current map to an attribute, then resetting the map, then loading the map with saved map from each different region: the ship and the worlds to which you can travel.  That's what my last example game already does, sans making the ship a region of its own (complete with rooms inside).</p>\n<p>Combining mrangel's method (the <code>changedparent</code> script on the ship) with the other stuff I've got would probably work quite well.</p>\n\n",
      "PostDate": "2018-02-21T01:46:14.1280486Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fe264532-76b9-42dc-8de0-b803dfe52c0e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">My thought for the map system was that rather than \"saved_map_for_\", we could have a list of saved disjoint maps. Any time the player teleports...\r\n\r\nSee, there you went.\r\n\r\nDirectly over my head and beyond me (in a good way).\r\n\r\n\r\n\r\nI mean, I think I know what you mean (and it sounds splendid), but the coordinate functions are currently my least favorite functions.  (I may just be trying to make it all more complicated than it actually is.)\r\n\r\nDoesn't that already save maps, then create new maps or load existing maps, whichever is necessary?\r\n\r\nIt is set on ```game.pov```, but we could switch it to the ship object?  (Is that part of what you mean, mrangel?)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>My thought for the map system was that rather than \"saved_map_for_\", we could have a list of saved disjoint maps. Any time the player teleports...</p>\n</blockquote>\n<p>See, there you went.</p>\n<p>Directly over my head and beyond me (in a good way).</p>\n<p>I mean, I think I know what you mean (and it sounds splendid), but the coordinate functions are currently my least favorite functions.  (I may just be trying to make it all more complicated than it actually is.)</p>\n<p>Doesn't that already save maps, then create new maps or load existing maps, whichever is necessary?</p>\n<p>It is set on <code>game.pov</code>, but we could switch it to the ship object?  (Is that part of what you mean, mrangel?)</p>\n\n",
      "PostDate": "2018-02-21T02:17:23.279289Z",
      "LastEditDate": "2018-02-21T02:21:50.5855728Z",
      "link": null
    },
    {
      "PostId": "fc4dd34a-eb7b-4f97-be3d-55c831d36d41",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here's an old post from HK, linking to cool mapping code:\r\nhttp://textadventures.co.uk/forum/quest/topic/czwi-rm_6e6ovfp86ubipa/exit-a-moving-room#f4916645-ed9d-4e6f-b1e4-4e181e5a4648",
      "EditableFormat": "markdown",
      "HTML": "<p>Here's an old post from HK, linking to cool mapping code:<br>\nhttp://textadventures.co.uk/forum/quest/topic/czwi-rm_6e6ovfp86ubipa/exit-a-moving-room#f4916645-ed9d-4e6f-b1e4-4e181e5a4648</p>\n\n",
      "PostDate": "2018-02-21T02:32:59.035319Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e15f85c2-e7a1-4413-aa71-a223dfe2697d",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "well, the iterating (visible = true) would just be for THAT 'map' section, to create THAT map section, if you have a bunch of \"map sections\".\r\n\r\nthe ship should be a \"map section\" (specific interior cell), you'd only see THAT map section (the ship's rooms)\r\n\r\n-----\r\n\r\nusually the design is this:\r\n\r\n1. a \"world\" map (one large connected 'exterior' cell)\r\nand\r\n2. 'interior' cells/maps (a town, dungeon, ship, sub-sections of the world, etc), where'd you just see that specific interior cell/map, and not anything else, including not other interior cells/maps\r\n\r\n--------\r\n\r\nmovement can occur between:\r\n1. \"world/exterior\" map/cell and a specific interior cell/map\r\n2. specific interior cell/map and specific interior cell/map\r\n\r\n(if you want it even more complex/organized):\r\n3. specific \"world/exterior\" map/cell and specific \"world/exterior\" map/cell // (having multiple \"worlds or sub-world sections of a single world\")\r\n\r\n------\r\n\r\nand...\r\n\r\n1. have a list storing all rooms (for each \"map section\"/cell)\r\n\r\n2. have a list for storing visited (explored by you) rooms (for each \"map section\"/cell), that way you can use it to redraw that map of areas you explored, as you enter and leave those map sections, which you can adjust (adding/removing from list, now you'd probably not want to remove an explored area... unless you want a permanantly \"dark/invisible\" room, such as in the original zelda game for the NES, hehe)",
      "EditableFormat": "markdown",
      "HTML": "<p>well, the iterating (visible = true) would just be for THAT 'map' section, to create THAT map section, if you have a bunch of \"map sections\".</p>\n<p>the ship should be a \"map section\" (specific interior cell), you'd only see THAT map section (the ship's rooms)</p>\n<hr>\n<p>usually the design is this:</p>\n<ol>\n<li>a \"world\" map (one large connected 'exterior' cell)<br>\nand</li>\n<li>'interior' cells/maps (a town, dungeon, ship, sub-sections of the world, etc), where'd you just see that specific interior cell/map, and not anything else, including not other interior cells/maps</li>\n</ol>\n<hr>\n<p>movement can occur between:</p>\n<ol>\n<li>\"world/exterior\" map/cell and a specific interior cell/map</li>\n<li>specific interior cell/map and specific interior cell/map</li>\n</ol>\n<p>(if you want it even more complex/organized):</p>\n<ol start=\"3\">\n<li>specific \"world/exterior\" map/cell and specific \"world/exterior\" map/cell // (having multiple \"worlds or sub-world sections of a single world\")</li>\n</ol>\n<hr>\n<p>and...</p>\n<ol>\n<li>\n<p>have a list storing all rooms (for each \"map section\"/cell)</p>\n</li>\n<li>\n<p>have a list for storing visited (explored by you) rooms (for each \"map section\"/cell), that way you can use it to redraw that map of areas you explored, as you enter and leave those map sections, which you can adjust (adding/removing from list, now you'd probably not want to remove an explored area... unless you want a permanantly \"dark/invisible\" room, such as in the original zelda game for the NES, hehe)</p>\n</li>\n</ol>\n\n",
      "PostDate": "2018-02-21T03:06:01.8741186Z",
      "LastEditDate": "2018-02-21T03:20:24.9445279Z",
      "link": null
    },
    {
      "PostId": "2d506a64-ef74-4120-91d2-f728296a1d4e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I see what you mean, HK.\r\n\r\nAll that stuff works fine.  I think the code I used (and barely modified) originally came from Jay.\r\n\r\nI just made an example game with a one-room ship, with a map that works just like you describe when you travel to different worlds.\r\n\r\nI got side-tracked, you see.  The OP wanted numerous rooms inside of the ship.  Then, mrangel mentioned a few ways the ship could be thrown off course without the TRAVEL command being entered, which would require a map update.\r\n\r\nAs far as the TRAVEL command goes, I can just change ```game.pov.parent``` to ```game.pov.current_ship``` to move the current ship (which would be set up as an object attribute).\r\n\r\nThen, the actual mapping functions would be called from the ship's changedparent script (rather than from the TRAVEL command's script), and there would be a map for each region (and maybe each dimension).\r\n\r\nSo, it should work pretty much just like you're saying with only a few minor adjustments.",
      "EditableFormat": "markdown",
      "HTML": "<p>I see what you mean, HK.</p>\n<p>All that stuff works fine.  I think the code I used (and barely modified) originally came from Jay.</p>\n<p>I just made an example game with a one-room ship, with a map that works just like you describe when you travel to different worlds.</p>\n<p>I got side-tracked, you see.  The OP wanted numerous rooms inside of the ship.  Then, mrangel mentioned a few ways the ship could be thrown off course without the TRAVEL command being entered, which would require a map update.</p>\n<p>As far as the TRAVEL command goes, I can just change <code>game.pov.parent</code> to <code>game.pov.current_ship</code> to move the current ship (which would be set up as an object attribute).</p>\n<p>Then, the actual mapping functions would be called from the ship's changedparent script (rather than from the TRAVEL command's script), and there would be a map for each region (and maybe each dimension).</p>\n<p>So, it should work pretty much just like you're saying with only a few minor adjustments.</p>\n\n",
      "PostDate": "2018-02-21T04:16:00.0092456Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e3ae0f2e-c459-4f6a-bfd3-0663492dd51f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "PS\r\n\r\nI think only a map of the ship should be displayed when inside of it.\r\n\r\nDifferent trips would take different amounts of turns, too.\r\n\r\nAlso, I think including this would be awesome:\r\nhttps://textadventures.co.uk/forum/samples/topic/5875/creating-images-on-the-fly\r\n\r\nhttp://textadventures.co.uk/games/view/ohqyc_lfuuiqjsuwmvbkbw/star-empire-v0-1",
      "EditableFormat": "markdown",
      "HTML": "<p>PS</p>\n<p>I think only a map of the ship should be displayed when inside of it.</p>\n<p>Different trips would take different amounts of turns, too.</p>\n<p>Also, I think including this would be awesome:<br>\nhttps://textadventures.co.uk/forum/samples/topic/5875/creating-images-on-the-fly</p>\n<p>http://textadventures.co.uk/games/view/ohqyc_lfuuiqjsuwmvbkbw/star-empire-v0-1</p>\n\n",
      "PostDate": "2018-02-21T04:18:53.9374372Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fb40d9a3-314f-4fbf-9daf-cedc1d09fc9c",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "### Rooms in the spaceship\r\n\r\nIf memory serves, the *Heart of Gold* in **The Hitchhiker's Guide to the Galaxy** was set up like this:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/36508749-2c37fbe0-1723-11e8-9eea-fdfe70314f2e.png)\r\n\r\n---\r\nThis layout would require modification in an actual game, I'm sure, but something like this should be pretty easy.\r\n\r\nEverything besides the Ramp would be in a map by itself.  \r\n\r\nThe ramp would be moved to wherever the ship travels.  So the Hatchway would always exit down to the Ramp and vice-versa, but the Ramp would be the only object that actual changed parent objects.  It would have an exit to the south, also, which was changed to the Ramp's current parent in the ramp.changedparent script. \r\n\r\nWhen the player moved from the Hatchway to the Ramp, the map would switch to the current location.  The only room of the ship which would be displayed on the map would be the Ramp.\r\n\r\n(I think this is pretty much what mrangel was suggesting, too.)\r\n\r\n---\r\n### Slightly Off-topic\r\n\r\nNow, you see how I made that map in Trizbort?\r\n\r\nWell, that isn't the current release of Trizbort.  It is what you get if you build what's currently in the repository on GitHub, though.\r\n\r\n...and it can do this:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/36509156-5f70610e-1724-11e8-9521-996885728c1e.png)\r\n\r\n...which allows me to immediately paste this from my clipboard:\r\n\r\n\r\n**The code from Trizbort's export:**\r\n\r\n<details>\r\n\r\n\r\n```\r\n  <object name=\"CorridorAftEnd\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Corridor Aft End</alias>\r\n    <attr name=\"grid_width\" type=\"int\">2</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <attr name=\"implementation_notes\"></attr>\r\n    <exit alias=\"north\" to=\"CorridorForeEnd\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"EngineRoom\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <exit alias=\"west\" to=\"Pantry\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n    <exit alias=\"down\" to=\"Hatchway\">\r\n      <inherit name=\"downdirection\" />\r\n    </exit>\r\n  </object>\r\n\r\n  <object name=\"CorridorForeEnd\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Corridor Fore End</alias>\r\n    <attr name=\"grid_width\" type=\"int\">2</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <attr name=\"implementation_notes\"></attr>\r\n    <exit alias=\"north\" to=\"EntryBayTwo\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"CorridorAftEnd\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <exit alias=\"west\" to=\"Galley\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n    <exit alias=\"up\" to=\"Bridge\">\r\n      <inherit name=\"updirection\" />\r\n    </exit>\r\n  </object>\r\n\r\n  <object name=\"Bridge\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Bridge</alias>\r\n    <attr name=\"grid_width\" type=\"int\">2</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <attr name=\"implementation_notes\"></attr>\r\n    <exit alias=\"down\" to=\"CorridorForeEnd\">\r\n      <inherit name=\"downdirection\" />\r\n    </exit>\r\n  </object>\r\n\r\n  <object name=\"AccessSpace\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Access Space</alias>\r\n    <attr name=\"grid_width\" type=\"int\">2</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <attr name=\"implementation_notes\"></attr>\r\n    <exit alias=\"west\" to=\"Hatchway\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n  </object>\r\n\r\n  <object name=\"Hatchway\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Hatchway</alias>\r\n    <attr name=\"grid_width\" type=\"int\">2</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <attr name=\"implementation_notes\"></attr>\r\n    <exit alias=\"east\" to=\"AccessSpace\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n    <exit alias=\"up\" to=\"CorridorAftEnd\">\r\n      <inherit name=\"updirection\" />\r\n    </exit>\r\n    <exit alias=\"down\" to=\"Ramp\">\r\n      <inherit name=\"downdirection\" />\r\n    </exit>\r\n  </object>\r\n\r\n  <object name=\"Galley\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Galley</alias>\r\n    <attr name=\"grid_width\" type=\"int\">2</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <attr name=\"implementation_notes\"></attr>\r\n    <exit alias=\"east\" to=\"CorridorForeEnd\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n  </object>\r\n\r\n  <object name=\"EntryBayTwo\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Entry Bay Two</alias>\r\n    <attr name=\"grid_width\" type=\"int\">2</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <attr name=\"implementation_notes\"></attr>\r\n    <exit alias=\"south\" to=\"CorridorForeEnd\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n\r\n  <object name=\"EngineRoom\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Engine Room</alias>\r\n    <attr name=\"grid_width\" type=\"int\">2</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <attr name=\"implementation_notes\"></attr>\r\n    <exit alias=\"north\" to=\"CorridorAftEnd\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n\r\n  <object name=\"Ramp\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Ramp</alias>\r\n    <attr name=\"grid_width\" type=\"int\">2</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <attr name=\"implementation_notes\"></attr>\r\n    <exit alias=\"up\" to=\"Hatchway\">\r\n      <inherit name=\"updirection\" />\r\n    </exit>\r\n  </object>\r\n\r\n  <object name=\"Pantry\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Pantry</alias>\r\n    <attr name=\"grid_width\" type=\"int\">2</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <attr name=\"implementation_notes\"></attr>\r\n    <exit alias=\"east\" to=\"CorridorAftEnd\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n  </object>\r\n```\r\n\r\n\r\n</details>\r\n\r\n---\r\n\r\nNow, I can fill in this blank with that code:\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"HOG\">\r\n    <gameid>69e39e98-c7cb-4962-a064-6fec0f412d14</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"north\" to=\"Ramp\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Heart of Gold\">\r\n    <inherit name=\"editor_room\" />\r\n\r\n  \r\n  \r\n  <!--\r\n  INSERT CODE FROM TRIZBORT HERE\r\n  -->\r\n  \r\n\r\n  </object>\r\n</asl>\r\n```\r\n\r\n---\r\n...and I've got most of the ship in a game! \r\n\r\n![image](https://user-images.githubusercontent.com/30656341/36509799-78a9fe1c-1726-11e8-9593-6706ef6cfde9.png)\r\n\r\n---\r\n I only need to polish up a few details, now!\r\n\r\n(Like changing the directions to FORE, AFT, PORT, and SB (STARBOARD)!)",
      "EditableFormat": "markdown",
      "HTML": "<h3>Rooms in the spaceship</h3>\n<p>If memory serves, the <em>Heart of Gold</em> in <strong>The Hitchhiker's Guide to the Galaxy</strong> was set up like this:</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/36508749-2c37fbe0-1723-11e8-9eea-fdfe70314f2e.png\" alt=\"image\"></p>\n<hr>\n<p>This layout would require modification in an actual game, I'm sure, but something like this should be pretty easy.</p>\n<p>Everything besides the Ramp would be in a map by itself.</p>\n<p>The ramp would be moved to wherever the ship travels.  So the Hatchway would always exit down to the Ramp and vice-versa, but the Ramp would be the only object that actual changed parent objects.  It would have an exit to the south, also, which was changed to the Ramp's current parent in the ramp.changedparent script.</p>\n<p>When the player moved from the Hatchway to the Ramp, the map would switch to the current location.  The only room of the ship which would be displayed on the map would be the Ramp.</p>\n<p>(I think this is pretty much what mrangel was suggesting, too.)</p>\n<hr>\n<h3>Slightly Off-topic</h3>\n<p>Now, you see how I made that map in Trizbort?</p>\n<p>Well, that isn't the current release of Trizbort.  It is what you get if you build what's currently in the repository on GitHub, though.</p>\n<p>...and it can do this:</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/36509156-5f70610e-1724-11e8-9521-996885728c1e.png\" alt=\"image\"></p>\n<p>...which allows me to immediately paste this from my clipboard:</p>\n<p><strong>The code from Trizbort's export:</strong></p>\n<details>\n<pre><code>  &lt;object name=\"CorridorAftEnd\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Corridor Aft End&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"implementation_notes\"&gt;&lt;/attr&gt;\n    &lt;exit alias=\"north\" to=\"CorridorForeEnd\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"EngineRoom\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"west\" to=\"Pantry\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"down\" to=\"Hatchway\"&gt;\n      &lt;inherit name=\"downdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"CorridorForeEnd\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Corridor Fore End&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"implementation_notes\"&gt;&lt;/attr&gt;\n    &lt;exit alias=\"north\" to=\"EntryBayTwo\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"CorridorAftEnd\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"west\" to=\"Galley\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"up\" to=\"Bridge\"&gt;\n      &lt;inherit name=\"updirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"Bridge\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Bridge&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"implementation_notes\"&gt;&lt;/attr&gt;\n    &lt;exit alias=\"down\" to=\"CorridorForeEnd\"&gt;\n      &lt;inherit name=\"downdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"AccessSpace\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Access Space&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"implementation_notes\"&gt;&lt;/attr&gt;\n    &lt;exit alias=\"west\" to=\"Hatchway\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"Hatchway\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Hatchway&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"implementation_notes\"&gt;&lt;/attr&gt;\n    &lt;exit alias=\"east\" to=\"AccessSpace\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"up\" to=\"CorridorAftEnd\"&gt;\n      &lt;inherit name=\"updirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"down\" to=\"Ramp\"&gt;\n      &lt;inherit name=\"downdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"Galley\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Galley&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"implementation_notes\"&gt;&lt;/attr&gt;\n    &lt;exit alias=\"east\" to=\"CorridorForeEnd\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"EntryBayTwo\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Entry Bay Two&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"implementation_notes\"&gt;&lt;/attr&gt;\n    &lt;exit alias=\"south\" to=\"CorridorForeEnd\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"EngineRoom\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Engine Room&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"implementation_notes\"&gt;&lt;/attr&gt;\n    &lt;exit alias=\"north\" to=\"CorridorAftEnd\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"Ramp\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Ramp&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"implementation_notes\"&gt;&lt;/attr&gt;\n    &lt;exit alias=\"up\" to=\"Hatchway\"&gt;\n      &lt;inherit name=\"updirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"Pantry\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Pantry&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"implementation_notes\"&gt;&lt;/attr&gt;\n    &lt;exit alias=\"east\" to=\"CorridorAftEnd\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n</code></pre>\n</details>\n<hr>\n<p>Now, I can fill in this blank with that code:</p>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"HOG\"&gt;\n    &lt;gameid&gt;69e39e98-c7cb-4962-a064-6fec0f412d14&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"north\" to=\"Ramp\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Heart of Gold\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n\n  \n  \n  &lt;!--\n  INSERT CODE FROM TRIZBORT HERE\n  --&gt;\n  \n\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p>...and I've got most of the ship in a game!</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/36509799-78a9fe1c-1726-11e8-9593-6706ef6cfde9.png\" alt=\"image\"></p>\n<hr>\n<p>I only need to polish up a few details, now!</p>\n<p>(Like changing the directions to FORE, AFT, PORT, and SB (STARBOARD)!)</p>\n\n",
      "PostDate": "2018-02-21T22:40:38.8096691Z",
      "LastEditDate": "2018-02-21T22:45:31.3836317Z",
      "link": null
    },
    {
      "PostId": "930baf05-e6bc-4b53-bfca-52f35e61c1bc",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay...\r\n\r\nHere's what I've got so far:\r\n\r\n- Directions change to FORE/FORWARD,PORT,STARBOARD, and AFT when on board the ship\r\n\r\n- The map seems to work as I was hoping it would\r\n\r\n- The Ramp is in a room by itself, and this will be the only \"part of the ship\" that moves when travelling\r\n\r\n- There is no travelling functionality yet, but I'll be using things from previous posts in this thread.\r\n\r\n\r\n---\r\n**CODE:** Spacecraft Prototype\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <template name=\"go_ship\"><![CDATA[^go to (?<exit>.*)$|^go (?<exit>.*)$|^(?<exit>forward|port|starboard|aft|f|p|a|s|in|out|up|down|o|u|d)$]]></template>\r\n  <template name=\"lookdir_ship\"><![CDATA[^look (?<exit>forward|port|starboard|aft|f|p|a|s|in|out|up|down|o|u|d)$]]></template>\r\n  <game name=\"Spacecraft Prototype\">\r\n    <gameid>69e39e98-c7cb-4962-a064-6fec0f412d14</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <gridmap />\r\n    <shipDirs type=\"stringdictionary\">\r\n      <item>\r\n        <key>north</key>\r\n        <value>fore</value>\r\n      </item>\r\n      <item>\r\n        <key>east</key>\r\n        <value>starboard</value>\r\n      </item>\r\n      <item>\r\n        <key>west</key>\r\n        <value>port</value>\r\n      </item>\r\n      <item>\r\n        <key>south</key>\r\n        <value>aft</value>\r\n      </item>\r\n    </shipDirs>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"north\" to=\"Ramp\">\r\n      <inherit name=\"northdirection\" />\r\n      <attr name=\"grid_length\" type=\"int\">0</attr>\r\n    </exit>\r\n    <object name=\"Ramp\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>Ramp</alias>\r\n      <attr name=\"grid_width\" type=\"int\">1</attr>\r\n      <attr name=\"grid_length\" type=\"int\">1</attr>\r\n      <attr name=\"grid_fill\">Blue</attr>\r\n      <attr name=\"grid_border\" type=\"string\"></attr>\r\n      <implementation_notes />\r\n      <exit alias=\"in\" to=\"Ramp\">\r\n        <inherit name=\"indirection\" />\r\n        <runscript />\r\n        <attr name=\"grid_length\" type=\"int\">0</attr>\r\n        <script type=\"script\">\r\n          from = game.pov.parent.parent\r\n          to = Hatchway\r\n          set (game.pov, \"saved_map_for_\" + from.name, game.pov.grid_coordinates)\r\n          if (HasAttribute(game.pov, \"saved_map_for_Hatchway\")) {\r\n            game.pov.grid_coordinates = GetAttribute(game.pov, \"saved_map_for_Hatchway\")\r\n          }\r\n          else {\r\n            game.pov.grid_coordinates = null\r\n          }\r\n          game.pov.onboard = true\r\n          JS.eval (\"inShip = true;\")\r\n          game.pov.parent = Hatchway\r\n          JS.Grid_ClearAllLayers ()\r\n          Grid_Redraw\r\n          Grid_DrawPlayerInRoom (game.pov.parent)\r\n        </script>\r\n      </exit>\r\n      <exit alias=\"south\" to=\"room\">\r\n        <inherit name=\"southdirection\" />\r\n        <attr name=\"grid_length\" type=\"int\">1</attr>\r\n      </exit>\r\n    </object>\r\n  </object>\r\n  <object name=\"Spacecraft\">\r\n    <inherit name=\"editor_room\" />\r\n    <inherit name=\"ship\" />\r\n    <attr name=\"grid_width\" type=\"int\">14</attr>\r\n    <attr name=\"grid_length\" type=\"int\">14</attr>\r\n    <attr name=\"grid_borderwidth\" type=\"int\">0</attr>\r\n    <object name=\"Pantry\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>Pantry</alias>\r\n      <attr name=\"grid_width\" type=\"int\">1</attr>\r\n      <attr name=\"grid_length\" type=\"int\">1</attr>\r\n      <attr name=\"grid_fill\" type=\"string\"></attr>\r\n      <attr name=\"grid_border\" type=\"string\"></attr>\r\n      <implementation_notes />\r\n      <exit alias=\"east\" to=\"CorridorAftEnd\">\r\n        <inherit name=\"eastdirection\" />\r\n        <alt type=\"stringlist\">\r\n          <value>sb</value>\r\n          <value>starboard</value>\r\n        </alt>\r\n      </exit>\r\n    </object>\r\n    <object name=\"EngineRoom\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>Engine Room</alias>\r\n      <attr name=\"grid_width\" type=\"int\">1</attr>\r\n      <attr name=\"grid_length\" type=\"int\">1</attr>\r\n      <attr name=\"grid_fill\" type=\"string\"></attr>\r\n      <attr name=\"grid_border\" type=\"string\"></attr>\r\n      <implementation_notes />\r\n      <exit alias=\"north\" to=\"CorridorAftEnd\">\r\n        <inherit name=\"northdirection\" />\r\n        <alt type=\"stringlist\">\r\n          <value>f</value>\r\n          <value>fore</value>\r\n          <value>forward</value>\r\n        </alt>\r\n      </exit>\r\n    </object>\r\n    <object name=\"EntryBayTwo\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>Entry Bay Two</alias>\r\n      <attr name=\"grid_width\" type=\"int\">1</attr>\r\n      <attr name=\"grid_length\" type=\"int\">1</attr>\r\n      <attr name=\"grid_fill\" type=\"string\"></attr>\r\n      <attr name=\"grid_border\" type=\"string\"></attr>\r\n      <implementation_notes />\r\n      <exit alias=\"south\" to=\"CorridorForeEnd\">\r\n        <inherit name=\"southdirection\" />\r\n        <alt type=\"stringlist\">\r\n          <value>a</value>\r\n          <value>aft</value>\r\n        </alt>\r\n      </exit>\r\n    </object>\r\n    <object name=\"Galley\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>Galley</alias>\r\n      <attr name=\"grid_width\" type=\"int\">1</attr>\r\n      <attr name=\"grid_length\" type=\"int\">1</attr>\r\n      <attr name=\"grid_fill\" type=\"string\"></attr>\r\n      <attr name=\"grid_border\" type=\"string\"></attr>\r\n      <implementation_notes />\r\n      <exit alias=\"east\" to=\"CorridorForeEnd\">\r\n        <inherit name=\"eastdirection\" />\r\n        <alt type=\"stringlist\">\r\n          <value>sb</value>\r\n          <value>starboard</value>\r\n        </alt>\r\n      </exit>\r\n    </object>\r\n    <object name=\"Hatchway\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>Hatchway</alias>\r\n      <attr name=\"grid_width\" type=\"int\">1</attr>\r\n      <attr name=\"grid_length\" type=\"int\">1</attr>\r\n      <attr name=\"grid_fill\" type=\"string\"></attr>\r\n      <attr name=\"grid_border\" type=\"string\"></attr>\r\n      <implementation_notes />\r\n      <beforeenter type=\"script\">\r\n        firsttime {\r\n          go.pattern_bak = go.pattern\r\n          lookdir.pattern_bak = lookdir.pattern\r\n        }\r\n        go.pattern = this.parent.regEx\r\n        lookdir.pattern = this.parent.lookdir\r\n      </beforeenter>\r\n      <exit alias=\"east\" to=\"AccessSpace\">\r\n        <inherit name=\"eastdirection\" />\r\n        <alt type=\"stringlist\">\r\n          <value>sb</value>\r\n          <value>starboard</value>\r\n        </alt>\r\n      </exit>\r\n      <exit alias=\"up\" to=\"CorridorAftEnd\">\r\n        <inherit name=\"updirection\" />\r\n        <runscript />\r\n        <script type=\"script\">\r\n          MapUpFrom (game.pov.parent)\r\n          game.pov.parent = this.to\r\n        </script>\r\n      </exit>\r\n      <exit alias=\"out\" to=\"Hatchway\">\r\n        <inherit name=\"outdirection\" />\r\n        <runscript />\r\n        <script type=\"script\">\r\n          game.pov.onboard = false\r\n          from = game.pov.parent\r\n          to = Ramp\r\n          set (game.pov, \"saved_map_for_\" + from.name, game.pov.grid_coordinates)\r\n          if (HasAttribute(game.pov, \"saved_map_for_\"+this.to.parent)) {\r\n            game.pov.grid_coordinates = GetAttribute(game.pov, \"saved_map_for_\"+this.to.parent)\r\n          }\r\n          else {\r\n            game.pov.grid_coordinates = null\r\n          }\r\n          JS.eval (\"inShip = false;\")\r\n          game.pov.parent = Ramp\r\n          JS.Grid_ClearAllLayers ()\r\n          Grid_Redraw\r\n          Grid_DrawPlayerInRoom (game.pov.parent)\r\n        </script>\r\n      </exit>\r\n    </object>\r\n    <object name=\"AccessSpace\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>Access Space</alias>\r\n      <attr name=\"grid_width\" type=\"int\">1</attr>\r\n      <attr name=\"grid_length\" type=\"int\">1</attr>\r\n      <attr name=\"grid_fill\" type=\"string\"></attr>\r\n      <attr name=\"grid_border\" type=\"string\"></attr>\r\n      <implementation_notes />\r\n      <exit alias=\"west\" to=\"Hatchway\">\r\n        <inherit name=\"westdirection\" />\r\n        <alt type=\"stringlist\">\r\n          <value>port</value>\r\n          <value>p</value>\r\n        </alt>\r\n      </exit>\r\n    </object>\r\n    <object name=\"Bridge\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>Bridge</alias>\r\n      <attr name=\"grid_width\" type=\"int\">8</attr>\r\n      <attr name=\"grid_length\" type=\"int\">10</attr>\r\n      <attr name=\"grid_fill\">SteelBlue</attr>\r\n      <attr name=\"grid_border\">Transparent</attr>\r\n      <implementation_notes />\r\n      <exit alias=\"down\" to=\"CorridorForeEnd\">\r\n        <inherit name=\"downdirection\" />\r\n        <runscript />\r\n        <script type=\"script\">\r\n          MapDownFrom (game.pov.parent)\r\n          game.pov.parent = this.to\r\n        </script>\r\n      </exit>\r\n    </object>\r\n    <object name=\"CorridorForeEnd\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>Corridor, Fore End</alias>\r\n      <attr name=\"grid_width\" type=\"int\">1</attr>\r\n      <attr name=\"grid_length\" type=\"int\">1</attr>\r\n      <attr name=\"grid_fill\" type=\"string\"></attr>\r\n      <attr name=\"grid_border\" type=\"string\"></attr>\r\n      <implementation_notes />\r\n      <exit alias=\"north\" to=\"EntryBayTwo\">\r\n        <inherit name=\"northdirection\" />\r\n        <alt type=\"stringlist\">\r\n          <value>f</value>\r\n          <value>fore</value>\r\n        </alt>\r\n      </exit>\r\n      <exit alias=\"south\" to=\"CorridorAftEnd\">\r\n        <inherit name=\"southdirection\" />\r\n        <alt type=\"stringlist\">\r\n          <value>aft</value>\r\n          <value>a</value>\r\n        </alt>\r\n      </exit>\r\n      <exit alias=\"west\" to=\"Galley\">\r\n        <inherit name=\"westdirection\" />\r\n        <alt type=\"stringlist\">\r\n          <value>p</value>\r\n          <value>port</value>\r\n        </alt>\r\n      </exit>\r\n      <exit alias=\"up\" to=\"Bridge\">\r\n        <inherit name=\"updirection\" />\r\n        <runscript />\r\n        <script type=\"script\">\r\n          MapUpFrom (game.pov.parent)\r\n          game.pov.parent = this.to\r\n        </script>\r\n      </exit>\r\n    </object>\r\n    <object name=\"CorridorAftEnd\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>Corridor, Aft End</alias>\r\n      <attr name=\"grid_width\" type=\"int\">1</attr>\r\n      <attr name=\"grid_length\" type=\"int\">1</attr>\r\n      <attr name=\"grid_fill\" type=\"string\"></attr>\r\n      <attr name=\"grid_border\" type=\"string\"></attr>\r\n      <implementation_notes />\r\n      <exit alias=\"north\" to=\"CorridorForeEnd\">\r\n        <inherit name=\"northdirection\" />\r\n        <alt type=\"stringlist\">\r\n          <value>f</value>\r\n          <value>fore</value>\r\n        </alt>\r\n      </exit>\r\n      <exit alias=\"south\" to=\"EngineRoom\">\r\n        <inherit name=\"southdirection\" />\r\n        <alt type=\"stringlist\">\r\n          <value>a</value>\r\n          <value>aft</value>\r\n        </alt>\r\n      </exit>\r\n      <exit alias=\"west\" to=\"Pantry\">\r\n        <inherit name=\"westdirection\" />\r\n        <alt type=\"stringlist\">\r\n          <value>p</value>\r\n          <value>port</value>\r\n        </alt>\r\n      </exit>\r\n      <exit alias=\"down\" to=\"Hatchway\">\r\n        <inherit name=\"downdirection\" />\r\n        <runscript />\r\n        <script type=\"script\">\r\n          MapDownFrom (game.pov.parent)\r\n          game.pov.parent = this.to\r\n        </script>\r\n      </exit>\r\n    </object>\r\n  </object>\r\n  <turnscript name=\"tst\">\r\n    <enabled />\r\n    <script>\r\n      JS.sortExits ()\r\n    </script>\r\n  </turnscript>\r\n  <type name=\"ship\">\r\n    <feature_startscript />\r\n    <captain type=\"object\">player</captain>\r\n    <destination type=\"object\">Ramp</destination>\r\n    <attr name=\"_initialise_\" type=\"script\"><![CDATA[\r\n      this.regEx = \"^go to (?<exit>.*)$|^go (?<exit>.*)$|^(?<exit>fore|forward|port|starboard|aft|f|p|a|s|in|out|up|down|o|u|d)$\"\r\n    ]]></attr>\r\n    <attr name=\"locations_visited\" type=\"objectlist\"></attr>\r\n    <course type=\"objectlist\"></course>\r\n  </type>\r\n  <function name=\"GetDisplayNameLink\" parameters=\"obj, type\" type=\"string\"><![CDATA[\r\n    verbs = GetDisplayVerbs(obj)\r\n    if (verbs <> null) {\r\n      verbCount = ListCount(verbs)\r\n    }\r\n    else {\r\n      verbCount = 0\r\n    }\r\n    if (type = \"exit\" and verbCount = 1) {\r\n      if (not game.enablehyperlinks) {\r\n        result = GetDisplayAlias(obj)\r\n      }\r\n      else {\r\n        result = \"{exit:\" + obj.name + \"}\"\r\n      }\r\n    }\r\n    else if (type = \"\") {\r\n      result = GetDisplayAlias(obj)\r\n    }\r\n    else {\r\n      result = \"{object:\" + obj.name + \"}\"\r\n    }\r\n    if (not GetBoolean(obj, \"usedefaultprefix\")) {\r\n      if (obj.prefix = null) {\r\n        prefix = \"\"\r\n      }\r\n      else {\r\n        prefix = obj.prefix\r\n      }\r\n    }\r\n    else if (type = \"exit\") {\r\n      prefix = \"\"\r\n    }\r\n    else {\r\n      prefix = GetDefaultPrefix(obj)\r\n    }\r\n    if (LengthOf(prefix) > 0) {\r\n      prefix = prefix + \" \"\r\n    }\r\n    result = prefix + result\r\n    if (not GetBoolean(obj, \"usedefaultprefix\") and HasString(obj, \"suffix\")) {\r\n      if (LengthOf(obj.suffix) > 0) {\r\n        result = result + \" \" + obj.suffix\r\n      }\r\n    }\r\n    return (result)\r\n  ]]></function>\r\n  <function name=\"ProcessTextCommand_GetNextLinkId\" type=\"string\">\r\n    if (not HasInt(game, \"lastlinkid\")) {\r\n      game.lastlinkid = 0\r\n    }\r\n    game.lastlinkid = game.lastlinkid + 1\r\n    return (\"verblink\" + game.lastlinkid)\r\n  </function>\r\n  <function name=\"ProcessTextCommand_Exit\" parameters=\"section, data\" type=\"string\"><![CDATA[\r\n    exitname = Mid(section, 6)\r\n    exit = GetObject(exitname)\r\n    if (exit = null) {\r\n      return (\"@@@open@@@\" + ProcessTextSection(section, data) + \"@@@close@@@\")\r\n    }\r\n    else {\r\n      verbs = GetDisplayVerbs(exit)\r\n      alias = GetDisplayAlias(exit)\r\n      command = LCase(StringListItem(verbs, 0)) + \" \" + alias\r\n      style = GetCurrentLinkTextFormat()\r\n      if (GetBoolean(game.pov,\"onboard\") and (DictionaryContains(game.shipDirs,alias))) {\r\n        repl = StringDictionaryItem(game.shipDirs,alias)\r\n        alias = repl\r\n        command = \"go \"+repl\r\n      }\r\n      return (\"<a style=\\\"\" + style + \"\\\" class=\\\"cmdlink exitlink\\\" data-elementid=\\\"\" + exit.name + \"\\\" data-command=\\\"\" + command + \"\\\">\" + alias + \"</a>\")\r\n    }\r\n  ]]></function>\r\n  <function name=\"MapUpFrom\" parameters=\"room\">\r\n    Grid_SetGridCoordinateForPlayer (game.pov, room, \"z\", Grid_GetGridCoordinateForPlayer(game.pov, game.pov.parent, \"z\")+1)\r\n  </function>\r\n  <function name=\"MapDownFrom\" parameters=\"room\">\r\n    Grid_SetGridCoordinateForPlayer (game.pov, game.pov.parent, \"z\", Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\")+1)\r\n  </function>\r\n</asl>\r\n```\r\n\r\n</details>\r\n\r\n\r\n---\r\nTODO:\r\n\r\n- Make a real todo list\r\n- Sprinkle in the travelling functions, a list of possible destinations, and such from the other example and suggestions in this thread (this one is easy-peasy)\r\n- Add more attributes on the \"ship\" type to keep track of the status of numerous things (damage, fuel, power (I'm taking suggestions, too))\r\n- Come up with all the ways to interact with the ship.  (I'm thinking you can talk to the computer.  \"Computer, set coordinates for Phobos!\")\r\n- (Maybe) Steal the code Pixie uses for the map in [his \"proof of concept\" game](http://textadventures.co.uk/games/view/ohqyc_lfuuiqjsuwmvbkbw/star-empire-v0-1) and make that one way to plot a course.  (The course can be overridden by talking to the computer, and possibly in other ways.)\r\n- Switch all the attributes and scripts that end up on the ship object to the ship type.\r\n- Add 'embark;board' verb to the Ramp\r\n- Make sure everything that needs to keeps track of the ship's faux location at all times!\r\n- Umm... Other stuff I'm forgetting at the moment.  (I need a nap!)\r\n\r\n[Spacecraft Prototype - Play online](http://textadventures.co.uk/games/view/002sdcqptee0w-jhxrxbtw/spacecraft-prototype)",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay...</p>\n<p>Here's what I've got so far:</p>\n<ul>\n<li>\n<p>Directions change to FORE/FORWARD,PORT,STARBOARD, and AFT when on board the ship</p>\n</li>\n<li>\n<p>The map seems to work as I was hoping it would</p>\n</li>\n<li>\n<p>The Ramp is in a room by itself, and this will be the only \"part of the ship\" that moves when travelling</p>\n</li>\n<li>\n<p>There is no travelling functionality yet, but I'll be using things from previous posts in this thread.</p>\n</li>\n</ul>\n<hr>\n<p><strong>CODE:</strong> Spacecraft Prototype</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;template name=\"go_ship\"&gt;&lt;![CDATA[^go to (?&lt;exit&gt;.*)$|^go (?&lt;exit&gt;.*)$|^(?&lt;exit&gt;forward|port|starboard|aft|f|p|a|s|in|out|up|down|o|u|d)$]]&gt;&lt;/template&gt;\n  &lt;template name=\"lookdir_ship\"&gt;&lt;![CDATA[^look (?&lt;exit&gt;forward|port|starboard|aft|f|p|a|s|in|out|up|down|o|u|d)$]]&gt;&lt;/template&gt;\n  &lt;game name=\"Spacecraft Prototype\"&gt;\n    &lt;gameid&gt;69e39e98-c7cb-4962-a064-6fec0f412d14&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;gridmap /&gt;\n    &lt;shipDirs type=\"stringdictionary\"&gt;\n      &lt;item&gt;\n        &lt;key&gt;north&lt;/key&gt;\n        &lt;value&gt;fore&lt;/value&gt;\n      &lt;/item&gt;\n      &lt;item&gt;\n        &lt;key&gt;east&lt;/key&gt;\n        &lt;value&gt;starboard&lt;/value&gt;\n      &lt;/item&gt;\n      &lt;item&gt;\n        &lt;key&gt;west&lt;/key&gt;\n        &lt;value&gt;port&lt;/value&gt;\n      &lt;/item&gt;\n      &lt;item&gt;\n        &lt;key&gt;south&lt;/key&gt;\n        &lt;value&gt;aft&lt;/value&gt;\n      &lt;/item&gt;\n    &lt;/shipDirs&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"north\" to=\"Ramp\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n      &lt;attr name=\"grid_length\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;/exit&gt;\n    &lt;object name=\"Ramp\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;Ramp&lt;/alias&gt;\n      &lt;attr name=\"grid_width\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_length\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_fill\"&gt;Blue&lt;/attr&gt;\n      &lt;attr name=\"grid_border\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;implementation_notes /&gt;\n      &lt;exit alias=\"in\" to=\"Ramp\"&gt;\n        &lt;inherit name=\"indirection\" /&gt;\n        &lt;runscript /&gt;\n        &lt;attr name=\"grid_length\" type=\"int\"&gt;0&lt;/attr&gt;\n        &lt;script type=\"script\"&gt;\n          from = game.pov.parent.parent\n          to = Hatchway\n          set (game.pov, \"saved_map_for_\" + from.name, game.pov.grid_coordinates)\n          if (HasAttribute(game.pov, \"saved_map_for_Hatchway\")) {\n            game.pov.grid_coordinates = GetAttribute(game.pov, \"saved_map_for_Hatchway\")\n          }\n          else {\n            game.pov.grid_coordinates = null\n          }\n          game.pov.onboard = true\n          JS.eval (\"inShip = true;\")\n          game.pov.parent = Hatchway\n          JS.Grid_ClearAllLayers ()\n          Grid_Redraw\n          Grid_DrawPlayerInRoom (game.pov.parent)\n        &lt;/script&gt;\n      &lt;/exit&gt;\n      &lt;exit alias=\"south\" to=\"room\"&gt;\n        &lt;inherit name=\"southdirection\" /&gt;\n        &lt;attr name=\"grid_length\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;/exit&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Spacecraft\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;inherit name=\"ship\" /&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;14&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;14&lt;/attr&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;object name=\"Pantry\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;Pantry&lt;/alias&gt;\n      &lt;attr name=\"grid_width\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_length\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_fill\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;attr name=\"grid_border\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;implementation_notes /&gt;\n      &lt;exit alias=\"east\" to=\"CorridorAftEnd\"&gt;\n        &lt;inherit name=\"eastdirection\" /&gt;\n        &lt;alt type=\"stringlist\"&gt;\n          &lt;value&gt;sb&lt;/value&gt;\n          &lt;value&gt;starboard&lt;/value&gt;\n        &lt;/alt&gt;\n      &lt;/exit&gt;\n    &lt;/object&gt;\n    &lt;object name=\"EngineRoom\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;Engine Room&lt;/alias&gt;\n      &lt;attr name=\"grid_width\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_length\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_fill\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;attr name=\"grid_border\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;implementation_notes /&gt;\n      &lt;exit alias=\"north\" to=\"CorridorAftEnd\"&gt;\n        &lt;inherit name=\"northdirection\" /&gt;\n        &lt;alt type=\"stringlist\"&gt;\n          &lt;value&gt;f&lt;/value&gt;\n          &lt;value&gt;fore&lt;/value&gt;\n          &lt;value&gt;forward&lt;/value&gt;\n        &lt;/alt&gt;\n      &lt;/exit&gt;\n    &lt;/object&gt;\n    &lt;object name=\"EntryBayTwo\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;Entry Bay Two&lt;/alias&gt;\n      &lt;attr name=\"grid_width\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_length\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_fill\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;attr name=\"grid_border\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;implementation_notes /&gt;\n      &lt;exit alias=\"south\" to=\"CorridorForeEnd\"&gt;\n        &lt;inherit name=\"southdirection\" /&gt;\n        &lt;alt type=\"stringlist\"&gt;\n          &lt;value&gt;a&lt;/value&gt;\n          &lt;value&gt;aft&lt;/value&gt;\n        &lt;/alt&gt;\n      &lt;/exit&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Galley\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;Galley&lt;/alias&gt;\n      &lt;attr name=\"grid_width\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_length\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_fill\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;attr name=\"grid_border\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;implementation_notes /&gt;\n      &lt;exit alias=\"east\" to=\"CorridorForeEnd\"&gt;\n        &lt;inherit name=\"eastdirection\" /&gt;\n        &lt;alt type=\"stringlist\"&gt;\n          &lt;value&gt;sb&lt;/value&gt;\n          &lt;value&gt;starboard&lt;/value&gt;\n        &lt;/alt&gt;\n      &lt;/exit&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Hatchway\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;Hatchway&lt;/alias&gt;\n      &lt;attr name=\"grid_width\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_length\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_fill\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;attr name=\"grid_border\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;implementation_notes /&gt;\n      &lt;beforeenter type=\"script\"&gt;\n        firsttime {\n          go.pattern_bak = go.pattern\n          lookdir.pattern_bak = lookdir.pattern\n        }\n        go.pattern = this.parent.regEx\n        lookdir.pattern = this.parent.lookdir\n      &lt;/beforeenter&gt;\n      &lt;exit alias=\"east\" to=\"AccessSpace\"&gt;\n        &lt;inherit name=\"eastdirection\" /&gt;\n        &lt;alt type=\"stringlist\"&gt;\n          &lt;value&gt;sb&lt;/value&gt;\n          &lt;value&gt;starboard&lt;/value&gt;\n        &lt;/alt&gt;\n      &lt;/exit&gt;\n      &lt;exit alias=\"up\" to=\"CorridorAftEnd\"&gt;\n        &lt;inherit name=\"updirection\" /&gt;\n        &lt;runscript /&gt;\n        &lt;script type=\"script\"&gt;\n          MapUpFrom (game.pov.parent)\n          game.pov.parent = this.to\n        &lt;/script&gt;\n      &lt;/exit&gt;\n      &lt;exit alias=\"out\" to=\"Hatchway\"&gt;\n        &lt;inherit name=\"outdirection\" /&gt;\n        &lt;runscript /&gt;\n        &lt;script type=\"script\"&gt;\n          game.pov.onboard = false\n          from = game.pov.parent\n          to = Ramp\n          set (game.pov, \"saved_map_for_\" + from.name, game.pov.grid_coordinates)\n          if (HasAttribute(game.pov, \"saved_map_for_\"+this.to.parent)) {\n            game.pov.grid_coordinates = GetAttribute(game.pov, \"saved_map_for_\"+this.to.parent)\n          }\n          else {\n            game.pov.grid_coordinates = null\n          }\n          JS.eval (\"inShip = false;\")\n          game.pov.parent = Ramp\n          JS.Grid_ClearAllLayers ()\n          Grid_Redraw\n          Grid_DrawPlayerInRoom (game.pov.parent)\n        &lt;/script&gt;\n      &lt;/exit&gt;\n    &lt;/object&gt;\n    &lt;object name=\"AccessSpace\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;Access Space&lt;/alias&gt;\n      &lt;attr name=\"grid_width\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_length\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_fill\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;attr name=\"grid_border\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;implementation_notes /&gt;\n      &lt;exit alias=\"west\" to=\"Hatchway\"&gt;\n        &lt;inherit name=\"westdirection\" /&gt;\n        &lt;alt type=\"stringlist\"&gt;\n          &lt;value&gt;port&lt;/value&gt;\n          &lt;value&gt;p&lt;/value&gt;\n        &lt;/alt&gt;\n      &lt;/exit&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Bridge\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;Bridge&lt;/alias&gt;\n      &lt;attr name=\"grid_width\" type=\"int\"&gt;8&lt;/attr&gt;\n      &lt;attr name=\"grid_length\" type=\"int\"&gt;10&lt;/attr&gt;\n      &lt;attr name=\"grid_fill\"&gt;SteelBlue&lt;/attr&gt;\n      &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n      &lt;implementation_notes /&gt;\n      &lt;exit alias=\"down\" to=\"CorridorForeEnd\"&gt;\n        &lt;inherit name=\"downdirection\" /&gt;\n        &lt;runscript /&gt;\n        &lt;script type=\"script\"&gt;\n          MapDownFrom (game.pov.parent)\n          game.pov.parent = this.to\n        &lt;/script&gt;\n      &lt;/exit&gt;\n    &lt;/object&gt;\n    &lt;object name=\"CorridorForeEnd\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;Corridor, Fore End&lt;/alias&gt;\n      &lt;attr name=\"grid_width\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_length\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_fill\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;attr name=\"grid_border\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;implementation_notes /&gt;\n      &lt;exit alias=\"north\" to=\"EntryBayTwo\"&gt;\n        &lt;inherit name=\"northdirection\" /&gt;\n        &lt;alt type=\"stringlist\"&gt;\n          &lt;value&gt;f&lt;/value&gt;\n          &lt;value&gt;fore&lt;/value&gt;\n        &lt;/alt&gt;\n      &lt;/exit&gt;\n      &lt;exit alias=\"south\" to=\"CorridorAftEnd\"&gt;\n        &lt;inherit name=\"southdirection\" /&gt;\n        &lt;alt type=\"stringlist\"&gt;\n          &lt;value&gt;aft&lt;/value&gt;\n          &lt;value&gt;a&lt;/value&gt;\n        &lt;/alt&gt;\n      &lt;/exit&gt;\n      &lt;exit alias=\"west\" to=\"Galley\"&gt;\n        &lt;inherit name=\"westdirection\" /&gt;\n        &lt;alt type=\"stringlist\"&gt;\n          &lt;value&gt;p&lt;/value&gt;\n          &lt;value&gt;port&lt;/value&gt;\n        &lt;/alt&gt;\n      &lt;/exit&gt;\n      &lt;exit alias=\"up\" to=\"Bridge\"&gt;\n        &lt;inherit name=\"updirection\" /&gt;\n        &lt;runscript /&gt;\n        &lt;script type=\"script\"&gt;\n          MapUpFrom (game.pov.parent)\n          game.pov.parent = this.to\n        &lt;/script&gt;\n      &lt;/exit&gt;\n    &lt;/object&gt;\n    &lt;object name=\"CorridorAftEnd\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;Corridor, Aft End&lt;/alias&gt;\n      &lt;attr name=\"grid_width\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_length\" type=\"int\"&gt;1&lt;/attr&gt;\n      &lt;attr name=\"grid_fill\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;attr name=\"grid_border\" type=\"string\"&gt;&lt;/attr&gt;\n      &lt;implementation_notes /&gt;\n      &lt;exit alias=\"north\" to=\"CorridorForeEnd\"&gt;\n        &lt;inherit name=\"northdirection\" /&gt;\n        &lt;alt type=\"stringlist\"&gt;\n          &lt;value&gt;f&lt;/value&gt;\n          &lt;value&gt;fore&lt;/value&gt;\n        &lt;/alt&gt;\n      &lt;/exit&gt;\n      &lt;exit alias=\"south\" to=\"EngineRoom\"&gt;\n        &lt;inherit name=\"southdirection\" /&gt;\n        &lt;alt type=\"stringlist\"&gt;\n          &lt;value&gt;a&lt;/value&gt;\n          &lt;value&gt;aft&lt;/value&gt;\n        &lt;/alt&gt;\n      &lt;/exit&gt;\n      &lt;exit alias=\"west\" to=\"Pantry\"&gt;\n        &lt;inherit name=\"westdirection\" /&gt;\n        &lt;alt type=\"stringlist\"&gt;\n          &lt;value&gt;p&lt;/value&gt;\n          &lt;value&gt;port&lt;/value&gt;\n        &lt;/alt&gt;\n      &lt;/exit&gt;\n      &lt;exit alias=\"down\" to=\"Hatchway\"&gt;\n        &lt;inherit name=\"downdirection\" /&gt;\n        &lt;runscript /&gt;\n        &lt;script type=\"script\"&gt;\n          MapDownFrom (game.pov.parent)\n          game.pov.parent = this.to\n        &lt;/script&gt;\n      &lt;/exit&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;turnscript name=\"tst\"&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      JS.sortExits ()\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;type name=\"ship\"&gt;\n    &lt;feature_startscript /&gt;\n    &lt;captain type=\"object\"&gt;player&lt;/captain&gt;\n    &lt;destination type=\"object\"&gt;Ramp&lt;/destination&gt;\n    &lt;attr name=\"_initialise_\" type=\"script\"&gt;&lt;![CDATA[\n      this.regEx = \"^go to (?&lt;exit&gt;.*)$|^go (?&lt;exit&gt;.*)$|^(?&lt;exit&gt;fore|forward|port|starboard|aft|f|p|a|s|in|out|up|down|o|u|d)$\"\n    ]]&gt;&lt;/attr&gt;\n    &lt;attr name=\"locations_visited\" type=\"objectlist\"&gt;&lt;/attr&gt;\n    &lt;course type=\"objectlist\"&gt;&lt;/course&gt;\n  &lt;/type&gt;\n  &lt;function name=\"GetDisplayNameLink\" parameters=\"obj, type\" type=\"string\"&gt;&lt;![CDATA[\n    verbs = GetDisplayVerbs(obj)\n    if (verbs &lt;&gt; null) {\n      verbCount = ListCount(verbs)\n    }\n    else {\n      verbCount = 0\n    }\n    if (type = \"exit\" and verbCount = 1) {\n      if (not game.enablehyperlinks) {\n        result = GetDisplayAlias(obj)\n      }\n      else {\n        result = \"{exit:\" + obj.name + \"}\"\n      }\n    }\n    else if (type = \"\") {\n      result = GetDisplayAlias(obj)\n    }\n    else {\n      result = \"{object:\" + obj.name + \"}\"\n    }\n    if (not GetBoolean(obj, \"usedefaultprefix\")) {\n      if (obj.prefix = null) {\n        prefix = \"\"\n      }\n      else {\n        prefix = obj.prefix\n      }\n    }\n    else if (type = \"exit\") {\n      prefix = \"\"\n    }\n    else {\n      prefix = GetDefaultPrefix(obj)\n    }\n    if (LengthOf(prefix) &gt; 0) {\n      prefix = prefix + \" \"\n    }\n    result = prefix + result\n    if (not GetBoolean(obj, \"usedefaultprefix\") and HasString(obj, \"suffix\")) {\n      if (LengthOf(obj.suffix) &gt; 0) {\n        result = result + \" \" + obj.suffix\n      }\n    }\n    return (result)\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"ProcessTextCommand_GetNextLinkId\" type=\"string\"&gt;\n    if (not HasInt(game, \"lastlinkid\")) {\n      game.lastlinkid = 0\n    }\n    game.lastlinkid = game.lastlinkid + 1\n    return (\"verblink\" + game.lastlinkid)\n  &lt;/function&gt;\n  &lt;function name=\"ProcessTextCommand_Exit\" parameters=\"section, data\" type=\"string\"&gt;&lt;![CDATA[\n    exitname = Mid(section, 6)\n    exit = GetObject(exitname)\n    if (exit = null) {\n      return (\"@@@open@@@\" + ProcessTextSection(section, data) + \"@@@close@@@\")\n    }\n    else {\n      verbs = GetDisplayVerbs(exit)\n      alias = GetDisplayAlias(exit)\n      command = LCase(StringListItem(verbs, 0)) + \" \" + alias\n      style = GetCurrentLinkTextFormat()\n      if (GetBoolean(game.pov,\"onboard\") and (DictionaryContains(game.shipDirs,alias))) {\n        repl = StringDictionaryItem(game.shipDirs,alias)\n        alias = repl\n        command = \"go \"+repl\n      }\n      return (\"&lt;a style=\\\"\" + style + \"\\\" class=\\\"cmdlink exitlink\\\" data-elementid=\\\"\" + exit.name + \"\\\" data-command=\\\"\" + command + \"\\\"&gt;\" + alias + \"&lt;/a&gt;\")\n    }\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"MapUpFrom\" parameters=\"room\"&gt;\n    Grid_SetGridCoordinateForPlayer (game.pov, room, \"z\", Grid_GetGridCoordinateForPlayer(game.pov, game.pov.parent, \"z\")+1)\n  &lt;/function&gt;\n  &lt;function name=\"MapDownFrom\" parameters=\"room\"&gt;\n    Grid_SetGridCoordinateForPlayer (game.pov, game.pov.parent, \"z\", Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\")+1)\n  &lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n<hr>\n<p>TODO:</p>\n<ul>\n<li>Make a real todo list</li>\n<li>Sprinkle in the travelling functions, a list of possible destinations, and such from the other example and suggestions in this thread (this one is easy-peasy)</li>\n<li>Add more attributes on the \"ship\" type to keep track of the status of numerous things (damage, fuel, power (I'm taking suggestions, too))</li>\n<li>Come up with all the ways to interact with the ship.  (I'm thinking you can talk to the computer.  \"Computer, set coordinates for Phobos!\")</li>\n<li>(Maybe) Steal the code Pixie uses for the map in <a href=\"http://textadventures.co.uk/games/view/ohqyc_lfuuiqjsuwmvbkbw/star-empire-v0-1\">his \"proof of concept\" game</a> and make that one way to plot a course.  (The course can be overridden by talking to the computer, and possibly in other ways.)</li>\n<li>Switch all the attributes and scripts that end up on the ship object to the ship type.</li>\n<li>Add 'embark;board' verb to the Ramp</li>\n<li>Make sure everything that needs to keeps track of the ship's faux location at all times!</li>\n<li>Umm... Other stuff I'm forgetting at the moment.  (I need a nap!)</li>\n</ul>\n<p><a href=\"http://textadventures.co.uk/games/view/002sdcqptee0w-jhxrxbtw/spacecraft-prototype\">Spacecraft Prototype - Play online</a></p>\n\n",
      "PostDate": "2018-02-22T04:10:25.1311651Z",
      "LastEditDate": "2018-02-22T04:11:31.4851102Z",
      "link": null
    }
  ]
}
