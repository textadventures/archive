{
  "Topic": {
    "TopicId": "oe8p47wvfeaeahhjphiu1w",
    "ForumId": "10",
    "Title": "StringListSort",
    "LastUpdated": "2020-02-25T12:28:16.795131Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "b4bfd4d2-bdcd-4f72-b86d-706214f5465c",
      "UserId": 340011,
      "Username": "wooterslw",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7d20dd39301d8b9be2be0abaf005968d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How do you use this? There is no example in the help section. When I just enter it it makes it a Call Function and then errors out with: \r\n\r\nFunction not found: 'StringListSort'\r\n\r\nDo I have to make a new List and sort the old list into it?",
      "EditableFormat": "markdown",
      "HTML": "<p>How do you use this? There is no example in the help section. When I just enter it it makes it a Call Function and then errors out with:</p>\n<p>Function not found: 'StringListSort'</p>\n<p>Do I have to make a new List and sort the old list into it?</p>\n\n",
      "PostDate": "2020-02-25T12:28:16.795131Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "35312db9-bb74-4d2b-a89f-e9272158c95a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How are you using it?\r\n\r\nAs far as I can see, it should be simple enough. A single parameter which is a stringlist, and it returns a sorted version of the list.\r\n\r\nSo something like:\r\n\r\n<pre><code><em style=\"font-family:initial\">sortedlist</em> = StringListSort (<em style=\"font-family:initial\">originallist</em>)</code></pre>\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>How are you using it?</p>\n<p>As far as I can see, it should be simple enough. A single parameter which is a stringlist, and it returns a sorted version of the list.</p>\n<p>So something like:</p>\n<pre><code><em style=\"font-family: initial\">sortedlist</em> = StringListSort (<em style=\"font-family: initial\">originallist</em>)</code></pre>\n\n",
      "PostDate": "2020-02-25T14:08:43.3538293Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "413dddf1-5d18-4eb9-9b87-8ba1552fc03a",
      "UserId": 340011,
      "Username": "wooterslw",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7d20dd39301d8b9be2be0abaf005968d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's what I thought. I haven't tried that yet. Seems counterproductive. But, I'll try that when I get home. I was just doing StringListSort(StringList) thinking it would just sort the items within the stringlist.",
      "EditableFormat": "markdown",
      "HTML": "<p>That's what I thought. I haven't tried that yet. Seems counterproductive. But, I'll try that when I get home. I was just doing StringListSort(StringList) thinking it would just sort the items within the stringlist.</p>\n\n",
      "PostDate": "2020-02-25T14:14:48.7649512Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f2979393-f81b-423c-94fc-959c41efe9b8",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sadly, no.\r\n\r\nThere are various situations where it might be helpful to sort a list in place. For those, you would want to use a function like this:\r\n```\r\n<function name=\"StringListSortInPlace\" parameters=\"lst\">\r\n  sorted = StringListSort (lst)\r\n  foreach (i, sorted) {\r\n    list add (lst, i)\r\n    list remove (lst, i)\r\n  }\r\n</function>\r\n```\r\n\r\n(it looks weird, but it should work)\r\n\r\n<details><summary>Slight tangent; maybe some useful code</summary>\r\n\r\nOne algorithm I've occasionally found useful is:\r\n```\r\n<function name=\"ListSort\" parameters=\"lst, expr\">\r\n  stop = 0\r\n  while (ListCount (lst) > stop + 1) {\r\n    lowest = ListItem (lst, ListCount (lst)-1)\r\n    stop = ListCount (lst)\r\n    for (i, ListCount (lst) - 2, stop, -1) {\r\n      item = ListItem (lst, i)\r\n      if (Eval (expr, QuickParams (\"a\", item, \"b\", lowest))) {\r\n        list add (lst, item)\r\n        list remove (lst, item)\r\n        stop = i + 1\r\n      }\r\n      else {\r\n        lowest = item\r\n      }\r\n    }\r\n  }\r\n</function>\r\n```\r\n\r\nThis sorts a list without returning a new list. Its second parameter is an *expression* which should be true if item a should be placed after item b in the list.\r\nFor example, you might write `ListSort (somevariable, \"a > b\")` to put a list of numbers into order. The same sort function can be used with any expression (possibly a function you've written) to sort any kind of list. For example, you could sort a list of NPCs into order based on some function of their stats by doing `ListSort (competitors, \"CalculatePowerLevel (a) > CalculatePowerLevel (b)\")`.\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>Sadly, no.</p>\n<p>There are various situations where it might be helpful to sort a list in place. For those, you would want to use a function like this:</p>\n<pre><code>&lt;function name=\"StringListSortInPlace\" parameters=\"lst\"&gt;\n  sorted = StringListSort (lst)\n  foreach (i, sorted) {\n    list add (lst, i)\n    list remove (lst, i)\n  }\n&lt;/function&gt;\n</code></pre>\n<p>(it looks weird, but it should work)</p>\n<details><summary>Slight tangent; maybe some useful code</summary>\n<p>One algorithm I've occasionally found useful is:</p>\n<pre><code>&lt;function name=\"ListSort\" parameters=\"lst, expr\"&gt;\n  stop = 0\n  while (ListCount (lst) &gt; stop + 1) {\n    lowest = ListItem (lst, ListCount (lst)-1)\n    stop = ListCount (lst)\n    for (i, ListCount (lst) - 2, stop, -1) {\n      item = ListItem (lst, i)\n      if (Eval (expr, QuickParams (\"a\", item, \"b\", lowest))) {\n        list add (lst, item)\n        list remove (lst, item)\n        stop = i + 1\n      }\n      else {\n        lowest = item\n      }\n    }\n  }\n&lt;/function&gt;\n</code></pre>\n<p>This sorts a list without returning a new list. Its second parameter is an <em>expression</em> which should be true if item a should be placed after item b in the list.<br>\nFor example, you might write <code>ListSort (somevariable, \"a &gt; b\")</code> to put a list of numbers into order. The same sort function can be used with any expression (possibly a function you've written) to sort any kind of list. For example, you could sort a list of NPCs into order based on some function of their stats by doing <code>ListSort (competitors, \"CalculatePowerLevel (a) &gt; CalculatePowerLevel (b)\")</code>.</p>\n</details>\n\n",
      "PostDate": "2020-02-25T16:36:50.0607784Z",
      "LastEditDate": "2020-02-25T16:43:22.418728Z",
      "link": null
    }
  ]
}
