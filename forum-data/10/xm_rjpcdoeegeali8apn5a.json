{
  "Topic": {
    "TopicId": "xm_rjpcdoeegeali8apn5a",
    "ForumId": "10",
    "Title": "The fire is already lit",
    "LastUpdated": "2016-11-02T20:54:16.2819195Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "cf176a3a-aaf7-4d3f-b6f0-1b31916c2f37",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm getting worse at this thing, not better.\r\n\r\nI've spent almost three hours trying to create a script for a command which checks if the fire is lit, and if it is tells the player so.\r\n\r\nThis is what I have and it won't work.\r\n\r\n```\r\nif (Got(wood)) {\r\n  play sound (\"firecrackling3.mp3\", false, true)\r\n  msg (\"Fire lit.\")\r\n  SetObjectFlagOn (player, \"firelit\")\r\n}\r\nelse if (GetBoolean(player, \"firelit\")) {\r\n  msg (\"Fire's already lit.\")\r\n}\r\nelse {\r\n  msg (\"No fuel.\")\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm getting worse at this thing, not better.</p>\n<p>I've spent almost three hours trying to create a script for a command which checks if the fire is lit, and if it is tells the player so.</p>\n<p>This is what I have and it won't work.</p>\n<pre><code>if (Got(wood)) {\n  play sound (\"firecrackling3.mp3\", false, true)\n  msg (\"Fire lit.\")\n  SetObjectFlagOn (player, \"firelit\")\n}\nelse if (GetBoolean(player, \"firelit\")) {\n  msg (\"Fire's already lit.\")\n}\nelse {\n  msg (\"No fuel.\")\n}\n</code></pre>\n\n",
      "PostDate": "2016-11-02T20:54:16.2819195Z",
      "LastEditDate": null
    },
    {
      "PostId": "e7f623bb-9812-4e72-989f-e291507b030f",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Do you mean a command for lighting the fire? The best way to approach scripting a command, in my opinion, is to list all the conditions that must be met, and for each one test if it is NOT met. Then at the end of the script, actually do it. You have  two condition - must have fuel and not be lit - so test if there is not fuel, then test if it is lit, then do it.\r\n```\r\nif (not Got(wood)) {\r\n  msg (\"No fuel.\")\r\n}\r\nelse if (GetBoolean(player, \"firelit\")) {\r\n  msg (\"Fire's already lit.\")\r\n}\r\nelse {\r\n  play sound (\"firecrackling3.mp3\", false, true)\r\n  msg (\"Fire lit.\")\r\n  SetObjectFlagOn (player, \"firelit\")\r\n}",
      "EditableFormat": "markdown",
      "HTML": "<p>Do you mean a command for lighting the fire? The best way to approach scripting a command, in my opinion, is to list all the conditions that must be met, and for each one test if it is NOT met. Then at the end of the script, actually do it. You have  two condition - must have fuel and not be lit - so test if there is not fuel, then test if it is lit, then do it.</p>\n<pre><code>if (not Got(wood)) {\n  msg (\"No fuel.\")\n}\nelse if (GetBoolean(player, \"firelit\")) {\n  msg (\"Fire's already lit.\")\n}\nelse {\n  play sound (\"firecrackling3.mp3\", false, true)\n  msg (\"Fire lit.\")\n  SetObjectFlagOn (player, \"firelit\")\n}\n</code></pre>\n\n",
      "PostDate": "2016-11-02T21:31:30.7846497Z",
      "LastEditDate": null
    },
    {
      "PostId": "ab108d03-4c52-424a-9f16-e9d0cb50ab2a",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You're a genius!\r\n\r\nI'm going to study that with a fine tooth comb and try and get my head around it.\r\n\r\nThank you!\r\n\r\nI automatically check they DO have the things they need. Didn't know I should be checking what they DON'T have first.",
      "EditableFormat": "markdown",
      "HTML": "<p>You're a genius!</p>\n<p>I'm going to study that with a fine tooth comb and try and get my head around it.</p>\n<p>Thank you!</p>\n<p>I automatically check they DO have the things they need. Didn't know I should be checking what they DON'T have first.</p>\n\n",
      "PostDate": "2016-11-02T21:35:45.1958315Z",
      "LastEditDate": "2016-11-02T21:40:38.8728453Z"
    },
    {
      "PostId": "fe67a65e-73c0-4c33-a8dd-e1526f4265d8",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "if no wood (1 operation):\r\n-> msg (\" no fuel\")\r\n-> end\r\nif yes wood (implied/understood):\r\n-> if fire lit (one operation):\r\n->-> msg (\"The fire's already lit\")\r\n->-> end\r\n-> if fire not lit (3 operations):\r\n->-> play sound\r\n->-> msg (\"fire lit\")\r\n->-> set the fire to being lit\r\n->-> end\r\n\r\n-----------\r\n\r\n2 terms/variables/factors:\r\n-> wood\r\n-> lit\r\n\r\n--------------\r\n\r\nN = number of terms/variables/factors\r\n// N = 2\r\n\r\n2^N = number of conditions/combinations/steps\r\n// 2^2 = 4\r\n\r\n-------------\r\n\r\n4 combinations/conditions/steps:\r\n\r\n-> yes wood and yes lit (1 operation) // #2\r\n-> yes wood and no lit (3 operations) // #3\r\n-> no wood and yes lit (0 operations) // (nulled / skipped-ignored entirely / irrelevant, #2 and #3 is this split apart, so they cover this condition/combination/step already): N/A\r\n-> no wood and no lit (1 operation) // #1\r\n\r\n-----------\r\n\r\nit makes it more simple for yourself, to eliminate (get done and out of the way) all of the simple conditions/combinations that don't do much, first, ending up with doing your main most complex/involved condition/combination/step, last, after everything else is checked for.\r\n\r\n--------------\r\n\r\n3. your main most complex/involved condition/combination/step is to light the fire (3 operations: play sound, prompt user, and set fire to being lit), so you want to do this condition/combination/step, last\r\n\r\n-------------\r\n\r\n1. well, if you don't have any wood, you can't light the fire, so you want to do this condition/combination/step, first.\r\n\r\nN/A. (not having wood but having a lit fire, is doubly irrelevant to getting to the lighting a fire: you don't have wood, so no lighting a fire, the end, and even if pretending that not having wood is not the end, meaning you have no wood but do have an already lit fire, who cares/so what? This has nothing at all to do with moving towards your last condition/combination of lighting a fire. Also, we cover if the fire is already lit with the very next step seen below, anyways. So, that's why this condition/combination/step is completely ignored/left out --- why I have it in this parenthesis block, lol --- I should have this parenthesis block deleted out completely. Notice how this condition/combination/step 's terms are already dealt with: no wood, see above step, and fire is already lit, see below step, and thus we don't need this condition/combination/step at all. #1 and #2 handle this condition/combination/step, so this condition/combination/step is not needed at all. It's completely pointless)\r\n\r\n2. and if the fire is already lit, then you don't need to light the fire, lol, so do this condition/combination/step, next.\r\n\r\n3. which, leaves us with having wood and an unlit fire, which I've already mentioned about at the start with it being this last condition/combination/step to be done: lighting the fire.\r\n\r\n----------------\r\n\r\ndoes this help with understanding its logic, or no ???",
      "EditableFormat": "markdown",
      "HTML": "<p>if no wood (1 operation):<br>\n-&gt; msg (\" no fuel\")<br>\n-&gt; end<br>\nif yes wood (implied/understood):<br>\n-&gt; if fire lit (one operation):<br>\n-&gt;-&gt; msg (\"The fire's already lit\")<br>\n-&gt;-&gt; end<br>\n-&gt; if fire not lit (3 operations):<br>\n-&gt;-&gt; play sound<br>\n-&gt;-&gt; msg (\"fire lit\")<br>\n-&gt;-&gt; set the fire to being lit<br>\n-&gt;-&gt; end</p>\n<hr>\n<p>2 terms/variables/factors:<br>\n-&gt; wood<br>\n-&gt; lit</p>\n<hr>\n<p>N = number of terms/variables/factors<br>\n// N = 2</p>\n<p>2^N = number of conditions/combinations/steps<br>\n// 2^2 = 4</p>\n<hr>\n<p>4 combinations/conditions/steps:</p>\n<p>-&gt; yes wood and yes lit (1 operation) // #2<br>\n-&gt; yes wood and no lit (3 operations) // #3<br>\n-&gt; no wood and yes lit (0 operations) // (nulled / skipped-ignored entirely / irrelevant, #2 and #3 is this split apart, so they cover this condition/combination/step already): N/A<br>\n-&gt; no wood and no lit (1 operation) // #1</p>\n<hr>\n<p>it makes it more simple for yourself, to eliminate (get done and out of the way) all of the simple conditions/combinations that don't do much, first, ending up with doing your main most complex/involved condition/combination/step, last, after everything else is checked for.</p>\n<hr>\n<ol start=\"3\">\n<li>your main most complex/involved condition/combination/step is to light the fire (3 operations: play sound, prompt user, and set fire to being lit), so you want to do this condition/combination/step, last</li>\n</ol>\n<hr>\n<ol>\n<li>well, if you don't have any wood, you can't light the fire, so you want to do this condition/combination/step, first.</li>\n</ol>\n<p>N/A. (not having wood but having a lit fire, is doubly irrelevant to getting to the lighting a fire: you don't have wood, so no lighting a fire, the end, and even if pretending that not having wood is not the end, meaning you have no wood but do have an already lit fire, who cares/so what? This has nothing at all to do with moving towards your last condition/combination of lighting a fire. Also, we cover if the fire is already lit with the very next step seen below, anyways. So, that's why this condition/combination/step is completely ignored/left out --- why I have it in this parenthesis block, lol --- I should have this parenthesis block deleted out completely. Notice how this condition/combination/step 's terms are already dealt with: no wood, see above step, and fire is already lit, see below step, and thus we don't need this condition/combination/step at all. #1 and #2 handle this condition/combination/step, so this condition/combination/step is not needed at all. It's completely pointless)</p>\n<ol start=\"2\">\n<li>\n<p>and if the fire is already lit, then you don't need to light the fire, lol, so do this condition/combination/step, next.</p>\n</li>\n<li>\n<p>which, leaves us with having wood and an unlit fire, which I've already mentioned about at the start with it being this last condition/combination/step to be done: lighting the fire.</p>\n</li>\n</ol>\n<hr>\n<p>does this help with understanding its logic, or no ???</p>\n\n",
      "PostDate": "2016-11-04T10:08:25.3041752Z",
      "LastEditDate": "2016-11-04T11:04:20.4672334Z"
    },
    {
      "PostId": "fca078d7-b96c-4f6a-bfee-6e9d37d73884",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Not really hege, if I'm perfectly honest. That's just too much info and too deep an explanation for a brain like mine.\r\n\r\nSuffice to know that it's best to check what conditions the player HASN'T met and then check which they HAVE.",
      "EditableFormat": "markdown",
      "HTML": "<p>Not really hege, if I'm perfectly honest. That's just too much info and too deep an explanation for a brain like mine.</p>\n<p>Suffice to know that it's best to check what conditions the player HASN'T met and then check which they HAVE.</p>\n\n",
      "PostDate": "2016-11-04T12:50:49.5105169Z",
      "LastEditDate": null
    }
  ]
}
