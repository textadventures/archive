{
  "Topic": {
    "TopicId": "ew5zatkaskgyc1a7j5zqoa",
    "ForumId": "10",
    "Title": "Getting my Head Around Wearables...and vice versa.",
    "LastUpdated": "2018-04-26T07:38:56.0042019Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "5e64c50c-7fb3-4070-ab46-64d9bc7a6f6e",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Apologies, I have a series of questions but will present them one at time...\r\n\r\nQuest 5.7.2 introduced an extensive built-in 'wearables' feature. At the time of its release I looked briefly at it but couldn't immediately understand how to use it. It seemed more complex than I needed so I just defined my own \"wear/put on\" and \"remove/take off\" commands to override what was built in. Some action was needed as the 'wear' verb I had been using seemed to have disappeared from my code (though not 'remove'?).\r\n\r\nMy first question is: does the 'wearables' feature of Quest 5.7.2 affect all games using the 'wear' verb' or did I have special circumstances?",
      "EditableFormat": "markdown",
      "HTML": "<p>Apologies, I have a series of questions but will present them one at time...</p>\n<p>Quest 5.7.2 introduced an extensive built-in 'wearables' feature. At the time of its release I looked briefly at it but couldn't immediately understand how to use it. It seemed more complex than I needed so I just defined my own \"wear/put on\" and \"remove/take off\" commands to override what was built in. Some action was needed as the 'wear' verb I had been using seemed to have disappeared from my code (though not 'remove'?).</p>\n<p>My first question is: does the 'wearables' feature of Quest 5.7.2 affect all games using the 'wear' verb' or did I have special circumstances?</p>\n\n",
      "PostDate": "2018-04-26T07:38:56.0042019Z",
      "LastEditDate": "2018-04-27T06:25:28.9990752Z",
      "link": null
    },
    {
      "PostId": "60668d26-10e2-4abe-98b9-45bd6653420a",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, it will affect all games. Quest checks verbs to make sure they do not clash with anything.\r\n\r\nI would suggest having another look at the built-in system. All you _have_ to do is set \"Wearable\" on the _Features_ tab, and select \"Can be worn\" on the _Wearables_ tab. The rest is optional.\r\n\r\nIf you are sure you want to make your own system, you can disable the built in commands. At the bottom left, go _Filter - Show library elements_, and select the WEAR command. Click copy to put a copy in your game. Then type some long, random text for the command pattern. Do the same for REMOVE.  You should now be able to add your own verbs.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, it will affect all games. Quest checks verbs to make sure they do not clash with anything.</p>\n<p>I would suggest having another look at the built-in system. All you <em>have</em> to do is set \"Wearable\" on the <em>Features</em> tab, and select \"Can be worn\" on the <em>Wearables</em> tab. The rest is optional.</p>\n<p>If you are sure you want to make your own system, you can disable the built in commands. At the bottom left, go <em>Filter - Show library elements</em>, and select the WEAR command. Click copy to put a copy in your game. Then type some long, random text for the command pattern. Do the same for REMOVE.  You should now be able to add your own verbs.</p>\n\n",
      "PostDate": "2018-04-26T10:43:28.6643763Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1c1dbc40-5923-4eeb-baca-13256a6c8eb7",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Yes, it will affect all games.\r\n\r\nOkay, just to clarify. I'm assuming the change doesn't affect published games (.quest) but does affect anyone working on a game file(.aslx)? \r\n...and means that all 'wear' verbs, plus any associated scripting are removed from those games?\r\n>I would suggest having another look at the built-in system.\r\n\r\nYes, that is exactly what I'm doing, which has generated these questions...and almost certainly more to follow!",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Yes, it will affect all games.</p>\n</blockquote>\n<p>Okay, just to clarify. I'm assuming the change doesn't affect published games (.quest) but does affect anyone working on a game file(.aslx)?<br>\n...and means that all 'wear' verbs, plus any associated scripting are removed from those games?</p>\n<blockquote>\n<p>I would suggest having another look at the built-in system.</p>\n</blockquote>\n<p>Yes, that is exactly what I'm doing, which has generated these questions...and almost certainly more to follow!</p>\n\n",
      "PostDate": "2018-04-26T12:42:07.5706819Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d2a49712-dd06-46ce-9cc6-7211ca7bfd97",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Already published games will not be affected, no.",
      "EditableFormat": "markdown",
      "HTML": "<p>Already published games will not be affected, no.</p>\n\n",
      "PostDate": "2018-04-26T14:39:04.2544375Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "da168486-8fa5-4d49-b1ff-534e29e2285a",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Already published games will not be affected, no.\r\n\r\nAs games under development (or being updated) are affected, would it be possible to warn the developer?  \r\nDoes the change currently generate the rather worrying message \"Your game has been modified outside Quest\", offering a 'reload' button?\r\n \r\nI've created a small game to try out the wearable facility:\r\n1. I like the automatic indication of (worn) against an item\r\n2. I like the function that lists what I'm wearing for possible use in 'x me', for example.\r\n3. I like the fact 'wear all' has been implemented to put several items on at one time, and ditto for 'remove all'\r\n4. Not sure why I need to indicate twice that an item is wearable (pick feature and then select in a pull-down list?)\r\n5. In my own game, I allowed an item to be picked up and put on in one action and similarly dropped while being worn. Can I achieve that effect with the built-in wearable facility?",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Already published games will not be affected, no.</p>\n</blockquote>\n<p>As games under development (or being updated) are affected, would it be possible to warn the developer?<br>\nDoes the change currently generate the rather worrying message \"Your game has been modified outside Quest\", offering a 'reload' button?</p>\n<p>I've created a small game to try out the wearable facility:</p>\n<ol>\n<li>I like the automatic indication of (worn) against an item</li>\n<li>I like the function that lists what I'm wearing for possible use in 'x me', for example.</li>\n<li>I like the fact 'wear all' has been implemented to put several items on at one time, and ditto for 'remove all'</li>\n<li>Not sure why I need to indicate twice that an item is wearable (pick feature and then select in a pull-down list?)</li>\n<li>In my own game, I allowed an item to be picked up and put on in one action and similarly dropped while being worn. Can I achieve that effect with the built-in wearable facility?</li>\n</ol>\n\n",
      "PostDate": "2018-04-26T15:31:51.9700897Z",
      "LastEditDate": "2018-04-26T15:32:31.3949972Z",
      "link": null
    },
    {
      "PostId": "e95272a3-859a-4311-9a76-223314be86c5",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Shouldn‚Äôt this post be titled ‚ÄúGetting Wearables Around My Head‚Äù?\r\n\r\nüôÑ",
      "EditableFormat": "markdown",
      "HTML": "<p>Shouldn‚Äôt this post be titled ‚ÄúGetting Wearables Around My Head‚Äù?</p>\n<p>üôÑ</p>\n\n",
      "PostDate": "2018-04-26T19:49:01.629309Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "eebe0cda-4610-4d07-9092-ffebe5b536d0",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details>\r\n\r\n> Not sure why I need to indicate twice that an item is wearable (pick feature and then select in a pull-down list)\r\n\r\nThis is just the way the code works.  You enable the feature that allows you to set the wearable type.  When enabling similar features (such as a container), the drop down has numerous types to choose from.\r\n\r\n---\r\n\r\n> In my own game, I allowed an item to be picked up and put on in one action and similarly dropped while being worn. Can I achieve that effect with the built-in wearable facility?\r\n\r\nIn your take script, add ```WearGarment(this)```.\r\n\r\n---\r\n> Shouldn‚Äôt this post be titled ‚ÄúGetting Wearables Around My Head‚Äù?\r\n\r\nHave you ever heard this saying?  -->  \"Nobody likes a smart aleck!\"\r\n\r\nIt's not true.  I enjoy smart alecks!\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<details>\n<blockquote>\n<p>Not sure why I need to indicate twice that an item is wearable (pick feature and then select in a pull-down list)</p>\n</blockquote>\n<p>This is just the way the code works.  You enable the feature that allows you to set the wearable type.  When enabling similar features (such as a container), the drop down has numerous types to choose from.</p>\n<hr>\n<blockquote>\n<p>In my own game, I allowed an item to be picked up and put on in one action and similarly dropped while being worn. Can I achieve that effect with the built-in wearable facility?</p>\n</blockquote>\n<p>In your take script, add <code>WearGarment(this)</code>.</p>\n<hr>\n<blockquote>\n<p>Shouldn‚Äôt this post be titled ‚ÄúGetting Wearables Around My Head‚Äù?</p>\n</blockquote>\n<p>Have you ever heard this saying?  --&gt;  \"Nobody likes a smart aleck!\"</p>\n<p>It's not true.  I enjoy smart alecks!</p>\n</details>\n\n",
      "PostDate": "2018-04-26T20:01:58.1651449Z",
      "LastEditDate": "2018-05-17T15:08:20.7327472Z",
      "link": null
    },
    {
      "PostId": "72009e96-3690-42c9-93eb-436e0a3daf48",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details>\r\n\r\n## Pop Quiz \r\n\r\nWhy does my old 5.6.3 game with a ```wear``` verb work in the editor in ANY version of Quest?   (As an .aslx file, not as a published game.)\r\n\r\n```\r\n<!--Saved by Quest 5.6.6582.36962-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Wear 5.6.3\">\r\n    <gameid>e68e0515-68e0-46f0-89c0-8703f7e03854</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"hat\">\r\n      <inherit name=\"editor_object\" />\r\n      <take />\r\n      <look>{if hat.worn:You can't see it very well, seeming how its currently resting on top of your head.}{if not hat.worn:It's a Derby.}</look>\r\n      <don type=\"script\">\r\n        if (TypeOf(this.alias) = \"null\") {\r\n          this.alias = this.name\r\n        }\r\n        if (not GetBoolean(this,\"worn\")) {\r\n          msg (\"You put \"+Replace(GetDisplayName(this),\"a \",\"the \")+\" on.\")\r\n          this.alias = this.alias + \" (worn)\"\r\n          this.worn = true\r\n          if (not this.parent = game.pov) {\r\n            AddToInventory (this)\r\n          }\r\n        }\r\n        else {\r\n          msg (\"You are already wearing it.\")\r\n        }\r\n      </don>\r\n      <remove type=\"script\">\r\n        if (TypeOf(this.alias) = \"null\") {\r\n          this.alias = this.name\r\n        }\r\n        if (GetBoolean(this,\"worn\")) {\r\n          this.worn = false\r\n          this.alias = Replace(this.alias,\" (worn)\",\"\")\r\n          msg (\"You remove \"+Replace(GetDisplayName(this),\"a \",\"the \")+\".\")\r\n          JS.eval (\"$('span').last().prev().prev().html($('span').last().prev().prev().html().replace(/ \\\\(worn\\\\)/,''));\")\r\n        }\r\n        else {\r\n          msg (\"You aren't wearing \"+GetDisplayName(this)+\".\")\r\n        }\r\n      </remove>\r\n      <ondrop type=\"script\">\r\n        if (GetBoolean(this,\"worn\")) {\r\n          this.worn = false\r\n          this.alias = Replace(this.alias,\" (worn)\",\"\")\r\n          JS.eval (\"$('span').last().prev().prev().html($('span').last().prev().prev().html().replace(/ \\\\(worn\\\\)/,''));\")\r\n        }\r\n      </ondrop>\r\n    </object>\r\n  </object>\r\n  <verb>\r\n    <property>don</property>\r\n    <pattern>wear;don;put on;sport;put #object# on</pattern>\r\n    <defaultexpression>\"You can't wear \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n  <verb>\r\n    <property>remove</property>\r\n    <pattern>remove;take off;take #object# off</pattern>\r\n    <defaultexpression>\"You can't remove \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n</asl>\r\n```\r\n\r\n---\r\nNOTE:  I already know why it works.  This is a only a pop quiz.\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<details>\n<h2>Pop Quiz</h2>\n<p>Why does my old 5.6.3 game with a <code>wear</code> verb work in the editor in ANY version of Quest?   (As an .aslx file, not as a published game.)</p>\n<pre><code>&lt;!--Saved by Quest 5.6.6582.36962--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Wear 5.6.3\"&gt;\n    &lt;gameid&gt;e68e0515-68e0-46f0-89c0-8703f7e03854&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"hat\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;take /&gt;\n      &lt;look&gt;{if hat.worn:You can't see it very well, seeming how its currently resting on top of your head.}{if not hat.worn:It's a Derby.}&lt;/look&gt;\n      &lt;don type=\"script\"&gt;\n        if (TypeOf(this.alias) = \"null\") {\n          this.alias = this.name\n        }\n        if (not GetBoolean(this,\"worn\")) {\n          msg (\"You put \"+Replace(GetDisplayName(this),\"a \",\"the \")+\" on.\")\n          this.alias = this.alias + \" (worn)\"\n          this.worn = true\n          if (not this.parent = game.pov) {\n            AddToInventory (this)\n          }\n        }\n        else {\n          msg (\"You are already wearing it.\")\n        }\n      &lt;/don&gt;\n      &lt;remove type=\"script\"&gt;\n        if (TypeOf(this.alias) = \"null\") {\n          this.alias = this.name\n        }\n        if (GetBoolean(this,\"worn\")) {\n          this.worn = false\n          this.alias = Replace(this.alias,\" (worn)\",\"\")\n          msg (\"You remove \"+Replace(GetDisplayName(this),\"a \",\"the \")+\".\")\n          JS.eval (\"$('span').last().prev().prev().html($('span').last().prev().prev().html().replace(/ \\\\(worn\\\\)/,''));\")\n        }\n        else {\n          msg (\"You aren't wearing \"+GetDisplayName(this)+\".\")\n        }\n      &lt;/remove&gt;\n      &lt;ondrop type=\"script\"&gt;\n        if (GetBoolean(this,\"worn\")) {\n          this.worn = false\n          this.alias = Replace(this.alias,\" (worn)\",\"\")\n          JS.eval (\"$('span').last().prev().prev().html($('span').last().prev().prev().html().replace(/ \\\\(worn\\\\)/,''));\")\n        }\n      &lt;/ondrop&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;verb&gt;\n    &lt;property&gt;don&lt;/property&gt;\n    &lt;pattern&gt;wear;don;put on;sport;put #object# on&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't wear \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;verb&gt;\n    &lt;property&gt;remove&lt;/property&gt;\n    &lt;pattern&gt;remove;take off;take #object# off&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't remove \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p>NOTE:  I already know why it works.  This is a only a pop quiz.</p>\n</details>\n\n",
      "PostDate": "2018-04-26T20:51:54.3338827Z",
      "LastEditDate": "2018-05-17T15:08:45.774335Z",
      "link": null
    },
    {
      "PostId": "92153a8a-bc41-420f-8820-2d081374b033",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> This is just the way the code works. You enable the feature that allows you to set the wearable type.\r\n\r\nCould the default be 'wearable' rather than 'not wearable'? I realise it is mirroring the container code but that also looks odd!\r\n> In your take script, add WearGarment(this).\r\n\r\nNot quite, I meant the player could say 'wear garment' and it be taken up and worn. You are suggesting 'take' means an automatic wear which may not be the desired outcome. Also, what about dropping things that are worn?",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>This is just the way the code works. You enable the feature that allows you to set the wearable type.</p>\n</blockquote>\n<p>Could the default be 'wearable' rather than 'not wearable'? I realise it is mirroring the container code but that also looks odd!</p>\n<blockquote>\n<p>In your take script, add WearGarment(this).</p>\n</blockquote>\n<p>Not quite, I meant the player could say 'wear garment' and it be taken up and worn. You are suggesting 'take' means an automatic wear which may not be the desired outcome. Also, what about dropping things that are worn?</p>\n\n",
      "PostDate": "2018-04-26T21:54:53.5357472Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e2f6ccc7-77df-4bf0-ba42-475fb9bcb1f0",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details>\r\n\r\n> Could the default be 'wearable' rather than 'not wearable'?\r\n\r\nThat would mean making ```wearable``` a default type on every default object.  If that was the case, we'd have to go in and remove ```wearable``` from everything that couldn't be worn.\r\n\r\nThis is what's happening:\r\n\r\n1. The object is not wearable by default\r\n2. The 'Wearable: object can be put on and taken off' feature is enabled.\r\n\r\n_At this point, it would seem that the object is now wearable, but what this is REALLY doing is telling the Quest editor to display the Wearable options tab.  That's all that does._\r\n\r\n3. The drop-down in the new 'Wearable' tab is set to 'Can be worn', and the 'wearable' type is added to the object, hence making it wearable.\r\n\r\n4. To change the object so it is no longer wearable, that drop-down under the 'Wearable' tab must be set to 'Cannot be worn'.  This is what will remove the type from the object.\r\n\r\n---\r\nYou could bypass that 'Features' tab altogether and simply add the inherited type \"wearable\" to your object.  Everything would work.  \r\n\r\nWhen you check that first box, that ONLY tells the editor to display the 'Wearable' options tab.  You can check that box, switch to the wearable tab, set the drop-down to 'Can be worn', flip back to the features tab, uncheck \"Wearable: object can be put on and taken off\", and the object would <u>still be wearable</u>.  The only change would be that the editor no longer displayed the 'Wearable' tab.\r\n\r\n\r\n---\r\n>  I meant the player could say 'wear garment' and it be taken up and worn.\r\n\r\nOh! (Duh!)  Sorry about that.\r\n\r\nFirst, show all of your library elements:\r\n\r\n[![screenshot](http://docs.textadventures.co.uk/quest/images/Showlibraryelements.png)](http://docs.textadventures.co.uk/quest/changing_templates.html)\r\n\r\n---\r\nThen, remove 'inventory' from the scope:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/39335323-27e92d8e-4978-11e8-8fa1-3955a0209ae4.png)\r\n\r\n---\r\nThen put this in place of the script:\r\n\r\n```\r\nif (multiple and ListCount(object) = 0) {\r\n  msg (\"You've nothing to wear.\")\r\n}\r\nelse {\r\n  foreach (obj, object) {\r\n    if (not obj.parent = game.pov) {\r\n      if (ListCount(object) >1) {\r\n        OutputTextNoBr (GetDisplayAlias(obj)+\": \")\r\n      }\r\n      do (obj, \"take\")\r\n    }\r\n    if (obj.parent = game.pov) {\r\n      if (ListCount(object) >1) {\r\n        OutputTextNoBr (GetDisplayAlias(obj)+\": \")\r\n      }\r\n      f = _DoWear(obj)\r\n      UpdateArmour\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n---\r\nFinally, to make WEAR ALL work, we need to go to the WEAR commands attributes tab:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/39335171-83abaf8a-4977-11e8-904e-e2d992cece92.png)\r\n\r\n---\r\nPaste this in place of what's there:\r\n\r\n```\r\ngame.pov.currentcommandpendingobjectscope = ListExclude(ScopeReachable(),game.pov)\r\n```\r\n\r\n---\r\nAfter you're done, it should look like this in full code view:\r\n\r\n```\r\n  <command name=\"wear\">\r\n    <pattern>put #object# on; wear #object#; put on #object#; don #object#; wear #object#</pattern>\r\n    <scope type=\"string\"></scope>\r\n    <multipleobjects type=\"script\">\r\n      game.pov.currentcommandpendingobjectscope = ListExclude(ScopeReachable(),game.pov)\r\n    </multipleobjects>\r\n    <script><![CDATA[\r\n      if (multiple and ListCount(object) = 0) {\r\n        msg (\"You've nothing to wear.\")\r\n      }\r\n      else {\r\n        foreach (obj, object) {\r\n          if (not obj.parent = game.pov) {\r\n            if (ListCount(object) >1) {\r\n              OutputTextNoBr (GetDisplayAlias(obj)+\": \")\r\n            }\r\n            do (obj, \"take\")\r\n          }\r\n          if (obj.parent = game.pov) {\r\n            if (ListCount(object) >1) {\r\n              OutputTextNoBr (GetDisplayAlias(obj)+\": \")\r\n            }\r\n            f = _DoWear(obj)\r\n            UpdateArmour\r\n          }\r\n        }\r\n      }\r\n    ]]></script>\r\n  </command>\r\n```\r\n\r\n\r\n---\r\nAnd it will try to take an object first.  If the object can't be taken, it will stop the wear script.\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/39335636-715f0582-4979-11e8-99a0-f5ed7f9afaac.png)\r\n\r\n---\r\nWith another wearable object which can't be picked up in the same location:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/39335647-801048c0-4979-11e8-981d-eaa134420ec8.png)\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<details>\n<blockquote>\n<p>Could the default be 'wearable' rather than 'not wearable'?</p>\n</blockquote>\n<p>That would mean making <code>wearable</code> a default type on every default object.  If that was the case, we'd have to go in and remove <code>wearable</code> from everything that couldn't be worn.</p>\n<p>This is what's happening:</p>\n<ol>\n<li>The object is not wearable by default</li>\n<li>The 'Wearable: object can be put on and taken off' feature is enabled.</li>\n</ol>\n<p><em>At this point, it would seem that the object is now wearable, but what this is REALLY doing is telling the Quest editor to display the Wearable options tab.  That's all that does.</em></p>\n<ol start=\"3\">\n<li>\n<p>The drop-down in the new 'Wearable' tab is set to 'Can be worn', and the 'wearable' type is added to the object, hence making it wearable.</p>\n</li>\n<li>\n<p>To change the object so it is no longer wearable, that drop-down under the 'Wearable' tab must be set to 'Cannot be worn'.  This is what will remove the type from the object.</p>\n</li>\n</ol>\n<hr>\n<p>You could bypass that 'Features' tab altogether and simply add the inherited type \"wearable\" to your object.  Everything would work.</p>\n<p>When you check that first box, that ONLY tells the editor to display the 'Wearable' options tab.  You can check that box, switch to the wearable tab, set the drop-down to 'Can be worn', flip back to the features tab, uncheck \"Wearable: object can be put on and taken off\", and the object would <u>still be wearable</u>.  The only change would be that the editor no longer displayed the 'Wearable' tab.</p>\n<hr>\n<blockquote>\n<p>I meant the player could say 'wear garment' and it be taken up and worn.</p>\n</blockquote>\n<p>Oh! (Duh!)  Sorry about that.</p>\n<p>First, show all of your library elements:</p>\n<p><a href=\"http://docs.textadventures.co.uk/quest/changing_templates.html\"><img src=\"http://docs.textadventures.co.uk/quest/images/Showlibraryelements.png\" alt=\"screenshot\"></a></p>\n<hr>\n<p>Then, remove 'inventory' from the scope:</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/39335323-27e92d8e-4978-11e8-8fa1-3955a0209ae4.png\" alt=\"image\"></p>\n<hr>\n<p>Then put this in place of the script:</p>\n<pre><code>if (multiple and ListCount(object) = 0) {\n  msg (\"You've nothing to wear.\")\n}\nelse {\n  foreach (obj, object) {\n    if (not obj.parent = game.pov) {\n      if (ListCount(object) &gt;1) {\n        OutputTextNoBr (GetDisplayAlias(obj)+\": \")\n      }\n      do (obj, \"take\")\n    }\n    if (obj.parent = game.pov) {\n      if (ListCount(object) &gt;1) {\n        OutputTextNoBr (GetDisplayAlias(obj)+\": \")\n      }\n      f = _DoWear(obj)\n      UpdateArmour\n    }\n  }\n}\n</code></pre>\n<hr>\n<p>Finally, to make WEAR ALL work, we need to go to the WEAR commands attributes tab:</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/39335171-83abaf8a-4977-11e8-904e-e2d992cece92.png\" alt=\"image\"></p>\n<hr>\n<p>Paste this in place of what's there:</p>\n<pre><code>game.pov.currentcommandpendingobjectscope = ListExclude(ScopeReachable(),game.pov)\n</code></pre>\n<hr>\n<p>After you're done, it should look like this in full code view:</p>\n<pre><code>  &lt;command name=\"wear\"&gt;\n    &lt;pattern&gt;put #object# on; wear #object#; put on #object#; don #object#; wear #object#&lt;/pattern&gt;\n    &lt;scope type=\"string\"&gt;&lt;/scope&gt;\n    &lt;multipleobjects type=\"script\"&gt;\n      game.pov.currentcommandpendingobjectscope = ListExclude(ScopeReachable(),game.pov)\n    &lt;/multipleobjects&gt;\n    &lt;script&gt;&lt;![CDATA[\n      if (multiple and ListCount(object) = 0) {\n        msg (\"You've nothing to wear.\")\n      }\n      else {\n        foreach (obj, object) {\n          if (not obj.parent = game.pov) {\n            if (ListCount(object) &gt;1) {\n              OutputTextNoBr (GetDisplayAlias(obj)+\": \")\n            }\n            do (obj, \"take\")\n          }\n          if (obj.parent = game.pov) {\n            if (ListCount(object) &gt;1) {\n              OutputTextNoBr (GetDisplayAlias(obj)+\": \")\n            }\n            f = _DoWear(obj)\n            UpdateArmour\n          }\n        }\n      }\n    ]]&gt;&lt;/script&gt;\n  &lt;/command&gt;\n</code></pre>\n<hr>\n<p>And it will try to take an object first.  If the object can't be taken, it will stop the wear script.</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/39335636-715f0582-4979-11e8-99a0-f5ed7f9afaac.png\" alt=\"image\"></p>\n<hr>\n<p>With another wearable object which can't be picked up in the same location:</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/39335647-801048c0-4979-11e8-981d-eaa134420ec8.png\" alt=\"image\"></p>\n</details>\n\n",
      "PostDate": "2018-04-26T22:47:08.1838969Z",
      "LastEditDate": "2018-05-17T15:09:23.0378008Z",
      "link": null
    },
    {
      "PostId": "07c65746-79e1-4999-b324-dbdfca4ee103",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Shouldn‚Äôt this post be titled ‚ÄúGetting Wearables Around My Head‚Äù?\r\n\r\nThanks XanMag, your contribution has been acknowledged in the revised title of the post :)\r\n\r\nKV, thanks for all your work above. It's helping my understanding though tending to make me wonder if, in general, I should mod the wearable facility or block it and start from scratch. It would probably depend on the requirements in any particular game. \r\n\r\nIt does seem an issue that the 'wear' verb is automatically removed from existing games, effectively breaking them. It also seems inconsistent to leave the 'remove' operation behind, especially as it may then be broken as well.\r\n\r\nNo one has mentioned the dreaded \"... [your game] has been modified outside Quest message\" so far. Would it be possible to add an 'explain' button alongside 'reload' which could then warn and give advice? ...perhaps this point should be discussed in a separate thread?",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Shouldn‚Äôt this post be titled ‚ÄúGetting Wearables Around My Head‚Äù?</p>\n</blockquote>\n<p>Thanks XanMag, your contribution has been acknowledged in the revised title of the post :)</p>\n<p>KV, thanks for all your work above. It's helping my understanding though tending to make me wonder if, in general, I should mod the wearable facility or block it and start from scratch. It would probably depend on the requirements in any particular game.</p>\n<p>It does seem an issue that the 'wear' verb is automatically removed from existing games, effectively breaking them. It also seems inconsistent to leave the 'remove' operation behind, especially as it may then be broken as well.</p>\n<p>No one has mentioned the dreaded \"... [your game] has been modified outside Quest message\" so far. Would it be possible to add an 'explain' button alongside 'reload' which could then warn and give advice? ...perhaps this point should be discussed in a separate thread?</p>\n\n",
      "PostDate": "2018-04-27T06:24:13.0423734Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cda6742d-d940-4283-832d-af2a25b59190",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details>\r\n\r\n> block it and start from scratch\r\n\r\nGood luck!  I tried that before I came up with my workaround.\r\n\r\nYou can just alter your verb's property to make it work in the newer versions of Quest.  [This game file](http://textadventures.co.uk/forum/quest/topic/ew5zatkaskgyc1a7j5zqoa/getting-my-head-around-wearables-and-vice-versa#72009e96-3690-42c9-93eb-436e0a3daf48) proves that.  Just change your main ```wear``` verb's property to ```don```.  Then change the ```wear``` verb on your object to ```don``` in full code view. \r\n\r\n---\r\n> It does seem an issue that the 'wear' verb is automatically removed from existing games, effectively breaking them. It also seems inconsistent to leave the 'remove' operation behind, especially as it may then be broken as well.\r\n\r\nI don't think it removes it, but it definitely messes stuff up.\r\n\r\nMy advice is to finish any works in progress before updating your creation software, whether it's Quest or something else.\r\n\r\n---\r\n> No one has mentioned the dreaded \"... [your game] has been modified outside Quest message\" so far. Would it be possible to add an 'explain' button alongside 'reload' which could then warn and give advice? ...perhaps this point should be discussed in a separate thread?\r\n\r\nThis only happens when you modify a loaded game (or library) outside of the instance of Quest in which it is loaded.\r\n\r\nMeaning you have more than one Quest window open, or you have the file open in an editor while it is loaded in Quest.\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<details>\n<blockquote>\n<p>block it and start from scratch</p>\n</blockquote>\n<p>Good luck!  I tried that before I came up with my workaround.</p>\n<p>You can just alter your verb's property to make it work in the newer versions of Quest.  <a href=\"http://textadventures.co.uk/forum/quest/topic/ew5zatkaskgyc1a7j5zqoa/getting-my-head-around-wearables-and-vice-versa#72009e96-3690-42c9-93eb-436e0a3daf48\">This game file</a> proves that.  Just change your main <code>wear</code> verb's property to <code>don</code>.  Then change the <code>wear</code> verb on your object to <code>don</code> in full code view.</p>\n<hr>\n<blockquote>\n<p>It does seem an issue that the 'wear' verb is automatically removed from existing games, effectively breaking them. It also seems inconsistent to leave the 'remove' operation behind, especially as it may then be broken as well.</p>\n</blockquote>\n<p>I don't think it removes it, but it definitely messes stuff up.</p>\n<p>My advice is to finish any works in progress before updating your creation software, whether it's Quest or something else.</p>\n<hr>\n<blockquote>\n<p>No one has mentioned the dreaded \"... [your game] has been modified outside Quest message\" so far. Would it be possible to add an 'explain' button alongside 'reload' which could then warn and give advice? ...perhaps this point should be discussed in a separate thread?</p>\n</blockquote>\n<p>This only happens when you modify a loaded game (or library) outside of the instance of Quest in which it is loaded.</p>\n<p>Meaning you have more than one Quest window open, or you have the file open in an editor while it is loaded in Quest.</p>\n</details>\n\n",
      "PostDate": "2018-04-27T06:42:51.4209526Z",
      "LastEditDate": "2018-05-17T15:10:22.8040062Z",
      "link": null
    },
    {
      "PostId": "4b0b00b9-59df-408f-94dc-8d6d3f92cb55",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Good luck! I tried that before I came up with my workaround.\r\n\r\nI created two new commands \"wear/put on #object#\" and \"remove/take off #object#\" and was able to work from there. Coincidentally, I had previously  implemented wear and remove using a 'worn' attribute in the objects concerned.\r\n\r\n>This only happens when you modify a loaded game (or library) outside of the instance of Quest in which it is loaded.\r\n\r\nThat's good to know. I assume it means the removal of 'wear' is completely silent? ...which doesn't feel very friendly!",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Good luck! I tried that before I came up with my workaround.</p>\n</blockquote>\n<p>I created two new commands \"wear/put on #object#\" and \"remove/take off #object#\" and was able to work from there. Coincidentally, I had previously  implemented wear and remove using a 'worn' attribute in the objects concerned.</p>\n<blockquote>\n<p>This only happens when you modify a loaded game (or library) outside of the instance of Quest in which it is loaded.</p>\n</blockquote>\n<p>That's good to know. I assume it means the removal of 'wear' is completely silent? ...which doesn't feel very friendly!</p>\n\n",
      "PostDate": "2018-04-27T07:54:43.0437367Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bbffa9e6-b10f-4892-a7d0-d0f56aa06cde",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details>\r\n\r\nI don't think we're saying what each of us thinks the other is saying.\r\n\r\n- I thought you were trying to keep your old verbs. You can change the property of your ```wear``` verb to ```don```, then change the same thing in code view for the verb on your wearable objects.  You just have to make sure the verb's pattern matches the pattern of ```wear``` in CoreWearables.  (Also make sure the patterns for ```remove``` match.)\r\n\r\n- When you said \"block it and start from scratch\", I thought you meant removing the CoreWearables library so you could keep your old verbs without having to alter or rewrite any code.\r\n\r\n- If you have a ```wear``` verb (or command; same thing) in your game, it should override the ```wear``` command in CoreWearables.aslx, just like the new commands you just created do.  You just have to have the same patterns as the commands in CoreWearables.  If your ```wear```'s pattern is just ```wear #object#;put on #object#```, when you enter PUT HAT ON, the ```wear``` from CoreWearables will take over because PUT #OBJECT# ON matches its pattern and not the pattern of your custom ```wear```.\r\n\r\n- The \"Your game has been modified outside of Quest\" message should only display when you modify a loaded game (or library) outside of the instance of Quest in which it is loaded.  Meaning you have more than one Quest window open, or you have the file open in an editor while it is loaded in Quest.\r\n\r\n- Quest shouldn't be removing your ```wear``` verb, silently or otherwise.  Your patterns probably just don't match.\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<details>\n<p>I don't think we're saying what each of us thinks the other is saying.</p>\n<ul>\n<li>\n<p>I thought you were trying to keep your old verbs. You can change the property of your <code>wear</code> verb to <code>don</code>, then change the same thing in code view for the verb on your wearable objects.  You just have to make sure the verb's pattern matches the pattern of <code>wear</code> in CoreWearables.  (Also make sure the patterns for <code>remove</code> match.)</p>\n</li>\n<li>\n<p>When you said \"block it and start from scratch\", I thought you meant removing the CoreWearables library so you could keep your old verbs without having to alter or rewrite any code.</p>\n</li>\n<li>\n<p>If you have a <code>wear</code> verb (or command; same thing) in your game, it should override the <code>wear</code> command in CoreWearables.aslx, just like the new commands you just created do.  You just have to have the same patterns as the commands in CoreWearables.  If your <code>wear</code>'s pattern is just <code>wear #object#;put on #object#</code>, when you enter PUT HAT ON, the <code>wear</code> from CoreWearables will take over because PUT #OBJECT# ON matches its pattern and not the pattern of your custom <code>wear</code>.</p>\n</li>\n<li>\n<p>The \"Your game has been modified outside of Quest\" message should only display when you modify a loaded game (or library) outside of the instance of Quest in which it is loaded.  Meaning you have more than one Quest window open, or you have the file open in an editor while it is loaded in Quest.</p>\n</li>\n<li>\n<p>Quest shouldn't be removing your <code>wear</code> verb, silently or otherwise.  Your patterns probably just don't match.</p>\n</li>\n</ul>\n</details>\n\n",
      "PostDate": "2018-04-27T08:07:11.3502659Z",
      "LastEditDate": "2018-05-17T15:10:49.6791858Z",
      "link": null
    },
    {
      "PostId": "bd125ba8-4186-4bdb-9cbe-488f7dba4c01",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks for sticking with this KV! It's hard to explain issues as I don't want to bore anyone by writing too much and what I say is based on my limited experience as a developer.\r\n>Quest shouldn't be removing your wear verb, silently or otherwise. Your patterns probably just don't match.\r\n\r\nWe now seem to be down to the central issue. This all started after the last Quest release when I played my games through to see if anything had changed. What I found was that I could no longer see the 'wear' verb I had attached to four objects and wasn't allowed to put it back in.  This led me to look at the wearables feature, decided it was too complicated for me and implemented a workaround with 'wear' and 'remove' commands. \r\n\r\nWhile you are thinking about that, I plan to go back and use the wearables feature as far as I can and report the result. This will be on Monday as I'm away all weekend.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks for sticking with this KV! It's hard to explain issues as I don't want to bore anyone by writing too much and what I say is based on my limited experience as a developer.</p>\n<blockquote>\n<p>Quest shouldn't be removing your wear verb, silently or otherwise. Your patterns probably just don't match.</p>\n</blockquote>\n<p>We now seem to be down to the central issue. This all started after the last Quest release when I played my games through to see if anything had changed. What I found was that I could no longer see the 'wear' verb I had attached to four objects and wasn't allowed to put it back in.  This led me to look at the wearables feature, decided it was too complicated for me and implemented a workaround with 'wear' and 'remove' commands.</p>\n<p>While you are thinking about that, I plan to go back and use the wearables feature as far as I can and report the result. This will be on Monday as I'm away all weekend.</p>\n\n",
      "PostDate": "2018-04-28T06:43:37.2198497Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5f5ac8fa-7f73-40ce-91af-5fbd1edb6484",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details>\r\n\r\n>This all started after the last Quest release when I played my games through to see if anything had changed. What I found was that I could no longer see the 'wear' verb I had attached to four objects and wasn't allowed to put it back in. \r\n\r\nI'd very much like access to this file, before anything was changed to work with the new version of Quest.  I believe the evidence needed to solve this mystery can be found within that code.\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<details>\n<blockquote>\n<p>This all started after the last Quest release when I played my games through to see if anything had changed. What I found was that I could no longer see the 'wear' verb I had attached to four objects and wasn't allowed to put it back in.</p>\n</blockquote>\n<p>I'd very much like access to this file, before anything was changed to work with the new version of Quest.  I believe the evidence needed to solve this mystery can be found within that code.</p>\n</details>\n\n",
      "PostDate": "2018-04-28T07:55:33.5057267Z",
      "LastEditDate": "2018-05-17T15:11:49.4725223Z",
      "link": null
    },
    {
      "PostId": "e505894f-6067-4a5a-96dc-2f6fdb57d5b8",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">I'd very much like access to this file, before anything was changed to work with the new version of Quest. \r\n\r\nVersion 2.3 from September 2017 has been emailed to you.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I'd very much like access to this file, before anything was changed to work with the new version of Quest.</p>\n</blockquote>\n<p>Version 2.3 from September 2017 has been emailed to you.</p>\n\n",
      "PostDate": "2018-04-30T06:45:41.494852Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "689eb246-727c-4bed-a578-fe710fbe731b",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm afraid this is still an open issue. I have just helped Bitter Karella fix up Carnival of Regrets (see game comments). After a minor change unrelated to wearables and uploading a new version on 16 April, the game was broken by the 'wear' verb being suppressed without warning. In making the fix, I initially tried to just set the items affected to 'wearable' but that didn't bring back the previous 'wear' script.  It did seem to require reasonable technical knowledge to find the old code for wear and then adjust the game to make it work again. Is there something simple that I missed? Are there guidelines for the adjustment? Can game developers be warned about this issue at the time of making changes and guided through the adjustments needed? ",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm afraid this is still an open issue. I have just helped Bitter Karella fix up Carnival of Regrets (see game comments). After a minor change unrelated to wearables and uploading a new version on 16 April, the game was broken by the 'wear' verb being suppressed without warning. In making the fix, I initially tried to just set the items affected to 'wearable' but that didn't bring back the previous 'wear' script.  It did seem to require reasonable technical knowledge to find the old code for wear and then adjust the game to make it work again. Is there something simple that I missed? Are there guidelines for the adjustment? Can game developers be warned about this issue at the time of making changes and guided through the adjustments needed?</p>\n\n",
      "PostDate": "2018-05-16T07:35:11.4447932Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7b315150-1fee-4af5-9ce7-171877dc8446",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details>\r\n\r\n```wear``` is a command in the most recent versions of Quest, so it does not check for a ```wear``` attribute on an object.\r\n\r\nIn theory (as all games are coded differently), you could have simply changed the pattern for the ```wear``` command to something like \"fjsadofhiuonfbndfbnfdkjghk\".  This way, the ```wear``` verb would take precedence and actually check for attributes on objects.\r\n\r\n---\r\nThe same thing goes for ```remove```.  Changing the ```remove``` command's pattern to \"gkghlkghlsakgjlkghslghl\" would be necessary, as well.\r\n\r\n---\r\nThis is all theory (which I should have thought of the first time I saw this thread).  I'm about to go test it out.\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<details>\n<p><code>wear</code> is a command in the most recent versions of Quest, so it does not check for a <code>wear</code> attribute on an object.</p>\n<p>In theory (as all games are coded differently), you could have simply changed the pattern for the <code>wear</code> command to something like \"fjsadofhiuonfbndfbnfdkjghk\".  This way, the <code>wear</code> verb would take precedence and actually check for attributes on objects.</p>\n<hr>\n<p>The same thing goes for <code>remove</code>.  Changing the <code>remove</code> command's pattern to \"gkghlkghlsakgjlkghslghl\" would be necessary, as well.</p>\n<hr>\n<p>This is all theory (which I should have thought of the first time I saw this thread).  I'm about to go test it out.</p>\n</details>\n\n",
      "PostDate": "2018-05-16T14:36:46.2540634Z",
      "LastEditDate": "2018-05-17T15:11:20.9062022Z",
      "link": null
    },
    {
      "PostId": "27a15746-3a1d-4192-ae3a-f7d76f472ada",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "'enter' now also seems to be reserved. I'm not sure when that happened or why it was necessary but my use of enter in a game was unaffected. I cannot have new uses of  'enter' but nothing is broken. It would have been better if 'wear' had been implemented in a similar way. \r\n\r\nI am, of course, talking at a user level!",
      "EditableFormat": "markdown",
      "HTML": "<p>'enter' now also seems to be reserved. I'm not sure when that happened or why it was necessary but my use of enter in a game was unaffected. I cannot have new uses of  'enter' but nothing is broken. It would have been better if 'wear' had been implemented in a similar way.</p>\n<p>I am, of course, talking at a user level!</p>\n\n",
      "PostDate": "2018-05-16T14:48:01.4885018Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a6e208cc-6eb8-4e56-bdc3-131bb165025e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details>\r\n\r\n### Step 1\r\n\r\nChange the patterns for ```wear``` and ```remove``` by adding these two lines to the start script:\r\n\r\n```\r\nwear.pattern = \"upupdowndownleftrightleftrightba\"\r\nremove.pattern = \"upupdowndownleftrightleftrightab\"\r\n```\r\n\r\n---\r\n## Step 2\r\n\r\nAdd these verbs in full code view:\r\n\r\n```\r\n  <verb name=\"wear_verb\">\r\n    <pattern>wear</pattern>\r\n    <defaultexpression>\"You can't wear \" + object.article + \".\"</defaultexpression>\r\n    <property>wear</property>\r\n  </verb>\r\n```\r\n```\r\n  <verb name=\"remove_verb\">\r\n    <pattern>remove</pattern>\r\n    <defaultexpression>\"You can't remove \" + object.article + \".\"</defaultexpression>\r\n    <property>remove</property>\r\n  </verb>\r\n```\r\n\r\n\r\n---\r\n### Step 3\r\n\r\nTest to make sure everything works!\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<details>\n<h3>Step 1</h3>\n<p>Change the patterns for <code>wear</code> and <code>remove</code> by adding these two lines to the start script:</p>\n<pre><code>wear.pattern = \"upupdowndownleftrightleftrightba\"\nremove.pattern = \"upupdowndownleftrightleftrightab\"\n</code></pre>\n<hr>\n<h2>Step 2</h2>\n<p>Add these verbs in full code view:</p>\n<pre><code>  &lt;verb name=\"wear_verb\"&gt;\n    &lt;pattern&gt;wear&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't wear \" + object.article + \".\"&lt;/defaultexpression&gt;\n    &lt;property&gt;wear&lt;/property&gt;\n  &lt;/verb&gt;\n</code></pre>\n<pre><code>  &lt;verb name=\"remove_verb\"&gt;\n    &lt;pattern&gt;remove&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't remove \" + object.article + \".\"&lt;/defaultexpression&gt;\n    &lt;property&gt;remove&lt;/property&gt;\n  &lt;/verb&gt;\n</code></pre>\n<hr>\n<h3>Step 3</h3>\n<p>Test to make sure everything works!</p>\n</details>\n\n",
      "PostDate": "2018-05-16T14:54:55.9261593Z",
      "LastEditDate": "2018-05-17T15:04:14.3519047Z",
      "link": null
    },
    {
      "PostId": "746b8c69-98ec-44f8-963e-de8672921250",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details>\r\n\r\n> 'enter' now also seems to be reserved. I'm not sure when that happened or why it was necessary but my use of enter in a game was unaffected. I cannot have new uses of 'enter' but nothing is broken. It would have been better if 'wear' had been implemented in a similar way.\r\n\r\nI have run into this as well.  ```enter``` is a room attribute.  Quest is setup to throw an error if you try to create a verb named \"enter\".  Most people make a command to handle EVERY situation, but I prefer this method:\r\n\r\n### Step 1 (of 1)\r\n\r\nGo into full code view (or edit your .aslx file in a text editor), and change  the first line of your ```enter``` verb from ```<verb>``` to ``` <verb name=\"enter_verb\">```.  (**NOTE: You can add an \"enter\" verb to any game by doing this.**)\r\n\r\nIf the pattern is simply \"enter\", it should look like this:\r\n\r\n```\r\n  <verb name=\"enter_verb\">\r\n    <property>enter</property>\r\n    <pattern>enter</pattern>\r\n    <defaultexpression>\"You can't enter \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n```\r\n\r\n---\r\nIf you don't like to fool around in code view, you can add (or edit) a verb in the GUI:\r\n\r\n<a href=\"https://user-images.githubusercontent.com/30656341/40125828-7581ee18-58f1-11e8-9e93-3cf5c453a5ff.png\"><img src=\"https://user-images.githubusercontent.com/30656341/40125828-7581ee18-58f1-11e8-9e93-3cf5c453a5ff.png\"></a>\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<details>\n<blockquote>\n<p>'enter' now also seems to be reserved. I'm not sure when that happened or why it was necessary but my use of enter in a game was unaffected. I cannot have new uses of 'enter' but nothing is broken. It would have been better if 'wear' had been implemented in a similar way.</p>\n</blockquote>\n<p>I have run into this as well.  <code>enter</code> is a room attribute.  Quest is setup to throw an error if you try to create a verb named \"enter\".  Most people make a command to handle EVERY situation, but I prefer this method:</p>\n<h3>Step 1 (of 1)</h3>\n<p>Go into full code view (or edit your .aslx file in a text editor), and change  the first line of your <code>enter</code> verb from <code>&lt;verb&gt;</code> to <code>&lt;verb name=\"enter_verb\"&gt;</code>.  (<strong>NOTE: You can add an \"enter\" verb to any game by doing this.</strong>)</p>\n<p>If the pattern is simply \"enter\", it should look like this:</p>\n<pre><code>  &lt;verb name=\"enter_verb\"&gt;\n    &lt;property&gt;enter&lt;/property&gt;\n    &lt;pattern&gt;enter&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't enter \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n</code></pre>\n<hr>\n<p>If you don't like to fool around in code view, you can add (or edit) a verb in the GUI:</p>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/40125828-7581ee18-58f1-11e8-9e93-3cf5c453a5ff.png\"><img src=\"https://user-images.githubusercontent.com/30656341/40125828-7581ee18-58f1-11e8-9e93-3cf5c453a5ff.png\"></a></p>\n</details>\n\n",
      "PostDate": "2018-05-16T15:02:44.8371158Z",
      "LastEditDate": "2018-05-17T15:07:33.7108502Z",
      "link": null
    },
    {
      "PostId": "4a2782a3-2fe9-4d59-b05b-75e9f9faf9fa",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've just tried this with the version of Carnival of Regrets that was failing.  Unfortunately using 'wear' produces:\r\n\r\n>Error running script: Error compiling expression 'TypeOf(object, this.property)': FunctionCallElement: Could find not function 'TypeOf(Element, Object)'",
      "EditableFormat": "markdown",
      "HTML": "<p>I've just tried this with the version of Carnival of Regrets that was failing.  Unfortunately using 'wear' produces:</p>\n<blockquote>\n<p>Error running script: Error compiling expression 'TypeOf(object, this.property)': FunctionCallElement: Could find not function 'TypeOf(Element, Object)'</p>\n</blockquote>\n\n",
      "PostDate": "2018-05-16T15:18:09.9765136Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fac33b62-4244-4cd4-bb8d-4130271b4141",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details>\r\n\r\n>I've just tried this\r\n\r\nTried what code, specifically?\r\n\r\nIt doesn't sound like you changed the pattern for the ```wear``` command.\r\n\r\n---\r\nIf you email me the file, I'll forego my star for the day if I can't get it to work using [this](http://textadventures.co.uk/forum/quest/topic/ew5zatkaskgyc1a7j5zqoa/getting-my-head-around-wearables-and-vice-versa#746b8c69-98ec-44f8-963e-de8672921250) method. \r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<details>\n<blockquote>\n<p>I've just tried this</p>\n</blockquote>\n<p>Tried what code, specifically?</p>\n<p>It doesn't sound like you changed the pattern for the <code>wear</code> command.</p>\n<hr>\n<p>If you email me the file, I'll forego my star for the day if I can't get it to work using <a href=\"http://textadventures.co.uk/forum/quest/topic/ew5zatkaskgyc1a7j5zqoa/getting-my-head-around-wearables-and-vice-versa#746b8c69-98ec-44f8-963e-de8672921250\">this</a> method.</p>\n</details>\n\n",
      "PostDate": "2018-05-16T15:29:47.6068275Z",
      "LastEditDate": "2018-05-17T15:12:30.0633842Z",
      "link": null
    },
    {
      "PostId": "e3b859dc-8dda-467e-a6ad-464a1bbe0d96",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details>\r\n\r\nI just decompiled Carnival of Regrets.\r\n\r\n```new_wear``` and ```new_remove```  seem to work perfectly, (**EDIT**) but I'd still like to play with the old code to see if my new fix works.\r\n\r\n</details>\r\n",
      "EditableFormat": "markdown",
      "HTML": "<details>\n<p>I just decompiled Carnival of Regrets.</p>\n<p><code>new_wear</code> and <code>new_remove</code>  seem to work perfectly, (<strong>EDIT</strong>) but I'd still like to play with the old code to see if my new fix works.</p>\n</details>\n\n",
      "PostDate": "2018-05-16T15:53:06.5453209Z",
      "LastEditDate": "2018-05-17T15:12:52.386913Z",
      "link": null
    },
    {
      "PostId": "72394d44-8159-49cf-ae5e-7a18638fc77b",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(this probably doesn't make any difference... as I think if I understand, you're just doing this to prevent it from being used)\r\n\r\nnot sure if Davy saw/recognized this typo mistake and fixed it or not:\r\n\r\n'...tba' vs '...tab'\r\n\r\n```\r\nwear.pattern = \"upupdowndownleftrightleftrightba\"\r\n```\r\n\r\nwhich should be (I presume, lol):\r\n\r\n```\r\nwear.pattern = \"upupdowndownleftrightleftrightab\"\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(this probably doesn't make any difference... as I think if I understand, you're just doing this to prevent it from being used)</p>\n<p>not sure if Davy saw/recognized this typo mistake and fixed it or not:</p>\n<p>'...tba' vs '...tab'</p>\n<pre><code>wear.pattern = \"upupdowndownleftrightleftrightba\"\n</code></pre>\n<p>which should be (I presume, lol):</p>\n<pre><code>wear.pattern = \"upupdowndownleftrightleftrightab\"\n</code></pre>\n\n",
      "PostDate": "2018-05-16T17:22:49.9590986Z",
      "LastEditDate": "2018-05-16T17:24:34.9062734Z",
      "link": null
    },
    {
      "PostId": "b9c79735-19b3-4c4b-8e1b-784cdd86e3e9",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The Konami Code:\r\n\r\n```\r\nwear.pattern = \"upupdowndownleftrightleftrightba\"\r\n```\r\n\r\n---\r\nThe Konami Code for **Teenage Mutant Ninja Turtles III**:\r\n\r\n```\r\nremove.pattern = \"upupdowndownleftrightleftrightab\"\r\n```\r\n\r\n---\r\nI just picked something no one would ever enter, like you say, HK.",
      "EditableFormat": "markdown",
      "HTML": "<p>The Konami Code:</p>\n<pre><code>wear.pattern = \"upupdowndownleftrightleftrightba\"\n</code></pre>\n<hr>\n<p>The Konami Code for <strong>Teenage Mutant Ninja Turtles III</strong>:</p>\n<pre><code>remove.pattern = \"upupdowndownleftrightleftrightab\"\n</code></pre>\n<hr>\n<p>I just picked something no one would ever enter, like you say, HK.</p>\n\n",
      "PostDate": "2018-05-16T18:57:12.1844115Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b4fa2458-3131-4b85-aae4-6f466d609fdd",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Tried what code, specifically?\r\n>It doesn't sound like you changed the pattern for the wear command.\r\n\r\nI followed your three steps and found the error when testing. I'll try it again tomorrow, making sure I work on the original game and put everything in precisely.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Tried what code, specifically?<br>\nIt doesn't sound like you changed the pattern for the wear command.</p>\n</blockquote>\n<p>I followed your three steps and found the error when testing. I'll try it again tomorrow, making sure I work on the original game and put everything in precisely.</p>\n\n",
      "PostDate": "2018-05-16T21:41:41.2120005Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1f487992-c7bb-484e-a869-031a3acc3ee4",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details>\r\n\r\nIf it ain't broke, I wouldn't mess with it (unless you just really, really wanted to).\r\n\r\n...and it seemed to be working for me before making any changes.\r\n\r\nI simply enjoy finding my errors.  That's why I remained curious and wished for the original code.\r\n\r\n(I'm not trying to dissuade you from trying it out.  I just don't want to cause you to waste your time with my code when yours already works.)\r\n\r\n---\r\nAlso, if you're still working on that Carnival of Regrets game, this shows you how to hide the map during the prologue (since nothing is displayed in the grid until afterwards, anyway):\r\n\r\nhttp://docs.textadventures.co.uk/quest/showing_a_map.html#turning-the-grid-on-and-off\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<details>\n<p>If it ain't broke, I wouldn't mess with it (unless you just really, really wanted to).</p>\n<p>...and it seemed to be working for me before making any changes.</p>\n<p>I simply enjoy finding my errors.  That's why I remained curious and wished for the original code.</p>\n<p>(I'm not trying to dissuade you from trying it out.  I just don't want to cause you to waste your time with my code when yours already works.)</p>\n<hr>\n<p>Also, if you're still working on that Carnival of Regrets game, this shows you how to hide the map during the prologue (since nothing is displayed in the grid until afterwards, anyway):</p>\n<p>http://docs.textadventures.co.uk/quest/showing_a_map.html#turning-the-grid-on-and-off</p>\n</details>\n\n",
      "PostDate": "2018-05-16T22:39:43.1028525Z",
      "LastEditDate": "2018-05-17T15:13:19.7981095Z",
      "link": null
    },
    {
      "PostId": "cd3509d4-67c7-4fba-95fb-2793ef4f7933",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry KV, I've confused you! What you are looking at is the version of Carnival of Regrets that I've already 'fixed'. This is the game that encouraged me to try and find a way to make all Quest facilities optional. Try typing COMPLAIN to see what I mean. The next version will include the full dynamic flexibility we have discussed in separate threads over the last week or so.\r\n\r\nMy goal is not to fix a specific game but to find a simple general strategy that someone might follow if they encounter the problem with 'wear' disappearing.  I guess one possibility is to download and use an earlier version of Quest...perhaps the one used to create the game? This, however, doesn't feel like something to be encouraged!\r\n\r\nSo, the general question in this thread is: \"_My previously working game is now broken because of the wearables feature in the latest version of Quest, what can I do to fix it?_\" Is there a simple reversal to bring back the old 'wear' code? Better still, is there a simple way to switch to use the new wearables feature without losing the 'wear' code that was there before? ...and can this be described in a suitable form for developers with little technical knowledge?",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry KV, I've confused you! What you are looking at is the version of Carnival of Regrets that I've already 'fixed'. This is the game that encouraged me to try and find a way to make all Quest facilities optional. Try typing COMPLAIN to see what I mean. The next version will include the full dynamic flexibility we have discussed in separate threads over the last week or so.</p>\n<p>My goal is not to fix a specific game but to find a simple general strategy that someone might follow if they encounter the problem with 'wear' disappearing.  I guess one possibility is to download and use an earlier version of Quest...perhaps the one used to create the game? This, however, doesn't feel like something to be encouraged!</p>\n<p>So, the general question in this thread is: \"<em>My previously working game is now broken because of the wearables feature in the latest version of Quest, what can I do to fix it?</em>\" Is there a simple reversal to bring back the old 'wear' code? Better still, is there a simple way to switch to use the new wearables feature without losing the 'wear' code that was there before? ...and can this be described in a suitable form for developers with little technical knowledge?</p>\n\n",
      "PostDate": "2018-05-17T07:16:28.3985484Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "41489b99-f540-4dc7-a7ff-0b61c1762248",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> 'enter' now also seems to be reserved.\r\n\r\nUsing \"enter\" as a verb has always caused problems, because rooms have \"enter\" scripts, and rooms and items are both just objects. In Quest 5.7.x, it was added to the list of reserved verbs to prevent that.\r\n\r\n> My goal is not to fix a specific game but to find a simple general strategy that someone might follow if they encounter the problem with 'wear' disappearing. \r\n\r\n### Using commands on the desktop\r\n\r\nAt the bottom left, do _Filter - Show library elements_. Find the \"wear\" and \"remove\" commands, and copy them to your game. Change them to do whatever you want.\r\n\r\n### Using verbs on the desktop\r\n\r\nAt the bottom left, do _Filter - Show library elements_. Find the \"wear\" and \"remove\" commands, and copy them to your game. Change the pattern to some long, random text. Then go to the garment, and add a wear verb (when I did this, I got an error, but the verb object was created, and giving it a name, \"wearverb\", fixed the problem).\r\n\r\n### Using commands on the web version\r\n\r\nCreate new commands. For wear, use this pattern:\r\n\r\n> put #object# on; wear #object#; put on #object#; don #object#; wear #object#\r\n\r\nFor remove, use this:\r\n\r\n>take #object# off; remove #object#; take off #object#; doff #object#\r\n\r\n\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>'enter' now also seems to be reserved.</p>\n</blockquote>\n<p>Using \"enter\" as a verb has always caused problems, because rooms have \"enter\" scripts, and rooms and items are both just objects. In Quest 5.7.x, it was added to the list of reserved verbs to prevent that.</p>\n<blockquote>\n<p>My goal is not to fix a specific game but to find a simple general strategy that someone might follow if they encounter the problem with 'wear' disappearing.</p>\n</blockquote>\n<h3>Using commands on the desktop</h3>\n<p>At the bottom left, do <em>Filter - Show library elements</em>. Find the \"wear\" and \"remove\" commands, and copy them to your game. Change them to do whatever you want.</p>\n<h3>Using verbs on the desktop</h3>\n<p>At the bottom left, do <em>Filter - Show library elements</em>. Find the \"wear\" and \"remove\" commands, and copy them to your game. Change the pattern to some long, random text. Then go to the garment, and add a wear verb (when I did this, I got an error, but the verb object was created, and giving it a name, \"wearverb\", fixed the problem).</p>\n<h3>Using commands on the web version</h3>\n<p>Create new commands. For wear, use this pattern:</p>\n<blockquote>\n<p>put #object# on; wear #object#; put on #object#; don #object#; wear #object#</p>\n</blockquote>\n<p>For remove, use this:</p>\n<blockquote>\n<p>take #object# off; remove #object#; take off #object#; doff #object#</p>\n</blockquote>\n\n",
      "PostDate": "2018-05-17T08:21:39.3981213Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f8580f25-a4da-4bdc-9f6a-715bc80829ff",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details>\r\n\r\n> Sorry KV, I've confused you! What you are looking at is the version of Carnival of Regrets that I've already 'fixed'.\r\n\r\nNo, I'm with you.  I played the most recent version of that game and mentioned that your changes seem to have fixed ```wear``` and ```remove```.  Then, I said I'd like to see that file before you made any changes, just to make sure my fix works.\r\n\r\n---\r\n> My goal is not to fix a specific game but to find a simple general strategy that someone might follow if they encounter the problem with 'wear' disappearing.\r\n\r\nYes, I understand that.\r\n\r\nI theorized a simple, general strategy.  Then, I tested it on six older games, one game at a time (since testing it on all of the games at once wasn't really plausible, and merely theorizing only gets you so far).  It worked every time.\r\n\r\nYou add 2 lines to the start script, then you add two verbs.\r\n\r\nIf someone can come up with a method easier than this, I am quite eager to see the code.\r\n\r\n...and if this ever fails (before modifying anything else), I'd like to see that too, so I can learn from my mistakes.\r\n\r\n---\r\n# THE FOLLOWING STEPS WORK ONLINE OR IN THE DESKTOP EDITOR\r\n\r\n---\r\n# **PART ONE - A FIX FOR OLD GAMES WITH \"WEAR\" AND \"REMOVE\" VERBS**\r\n\r\n## Step 1\r\n\r\nChange the patterns for wear and remove by adding these two lines to the start script:\r\n\r\nIN CODE VIEW:\r\n\r\n```\r\nwear.pattern = \"upupdowndownleftrightleftrightba\"\r\nremove.pattern = \"upupdowndownleftrightleftrightab\"\r\n```\r\n\r\nIN GUI VIEW:\r\n\r\n<details>\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/40165555-ed4814dc-5981-11e8-83a4-d61d9ab789d3.png)\r\n\r\n</details>\r\n\r\n---\r\n## Step 2\r\n\r\nAdd these verbs:\r\n\r\nIN FULL CODE VIEW:\r\n```\r\n  <verb name=\"wear_verb\">\r\n    <pattern>wear</pattern>\r\n    <defaultexpression>\"You can't wear \" + object.article + \".\"</defaultexpression>\r\n    <property>wear</property>\r\n  </verb>\r\n```\r\n\r\nIN GUI:\r\n\r\n<details>\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/40165507-cea92e6c-5981-11e8-8f8e-b19842f9d284.png)\r\n\r\n</details>\r\n\r\n---\r\nIN FULL CODE VIEW:\r\n\r\n```\r\n  <verb name=\"remove_verb\">\r\n    <pattern>remove</pattern>\r\n    <defaultexpression>\"You can't remove \" + object.article + \".\"</defaultexpression>\r\n    <property>remove</property>\r\n  </verb>\r\n```\r\n\r\nIN GUI:\r\n\r\n<details>\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/40165522-d9396324-5981-11e8-9f9e-2be20830adb4.png)\r\n\r\n</details>\r\n\r\n---\r\n## Step 3\r\n\r\nTest to make sure everything works!\r\n\r\n---\r\n**To reiterate,** I'm not trying to say that my way is the only way, or that my way is the best way, or that my way never fails.\r\n\r\nI'd just like to see it fail if it doesn't always work, because I've tested it out six times in the past 12 hours, with 100% success rate.\r\n\r\nIf this DOES work at least 95% of the time (which I believe it will, unless someone needs to add on to the verbs' patterns), it can easily be made into a library for desktop users.\r\n\r\n\r\n**OldWearFixLib.aslx**\r\n```\r\n<?xml version=\"1.0\"?>\r\n<library>\r\n  <command name=\"wear\">\r\n    <pattern>upupdowndownleftrightleftrightba</pattern>\r\n    <script>\r\n      msg(\"Nothing happens.\")\r\n    </script>\r\n  </command>\r\n\r\n  <command name=\"remove\">\r\n    <pattern>upupdowndownleftrightleftrightab</pattern>\r\n    <script>\r\n      msg(\"Nothing happens.\")\r\n    </script>\r\n  </command>\r\n\r\n  <!-- \r\n      NOTE:  You may need to add more patterns to these verbs, depending on your game.\r\n\r\n      I did not add anything extra to these patterns because there's no telling what patterns may exist, \r\n      and the wrong pattern(s) could create bugs (i.e., if you have separate WEAR and DON verbs set up).\r\n     -->\r\n\r\n  <verb name=\"wear_verb\">\r\n    <pattern>wear</pattern>\r\n    <defaultexpression>\"You can't wear \" + object.article + \".\"</defaultexpression>\r\n    <property>wear</property>\r\n  </verb>\r\n\r\n  <verb name=\"remove_verb\">\r\n    <pattern>remove</pattern>\r\n    <defaultexpression>\"You can't remove \" + object.article + \".\"</defaultexpression>\r\n    <property>remove</property>\r\n  </verb>\r\n\r\n</library>\r\n```\r\n\r\n---\r\n# **PART TWO - AN ENTER VERB** \r\n\r\n### Step 1 (of 1)\r\n\r\nGo into full code view (or edit your .aslx file in a text editor), and change  the first line of your ```enter``` verb from ```<verb>``` to ``` <verb name=\"enter_verb\">```.  (**NOTE: You can add an \"enter\" verb to any game by doing this.**)\r\n\r\nIf the pattern is simply \"enter\", it should look like this:\r\n\r\n```\r\n  <verb name=\"enter_verb\">\r\n    <property>enter</property>\r\n    <pattern>enter</pattern>\r\n    <defaultexpression>\"You can't enter \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n```\r\n\r\n---\r\nIf you don't like to fool around in code view, you can add (or edit) a verb in the GUI:\r\n\r\n<details>\r\n\r\n<a href=\"https://user-images.githubusercontent.com/30656341/40125828-7581ee18-58f1-11e8-9e93-3cf5c453a5ff.png\"><img src=\"https://user-images.githubusercontent.com/30656341/40125828-7581ee18-58f1-11e8-9e93-3cf5c453a5ff.png\"></a>\r\n\r\n</details>\r\n\r\n\r\n---\r\nI have actually tested the code I have posted, and I have done so numerous times -- on my games as well as games made by other authors (including your game, DavyB).\r\n\r\n\r\nIf I see someone post, \"I  have tried these methods, and they do not work because ___ ,\"  I'll continue to try to help.   Otherwise, I'll assume I'm just bothering everyone, no one has even tested it out with my code, and that no one is interested in my input (for whatever reason; even if it is basically the same thing that Pixie suggested -- only a little more simplified, since I change the new commands' patterns in the start script, which can also be done online or in the desktop).\r\n\r\nI am not offended, nor do I wish to offend, by the way.  I'm just thinking that the best way to help when my input isn't helping is to nix my input.  (This is for the greater good, you understand.)\r\n\r\nSo, I apologize if I have upset anyone, or confused anyone, or in any way exacerbated things.\r\n\r\n...and I'm also sorry about this wall of text, but only if it isn't helping anyone.\r\n\r\nCheers!\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<details>\n<blockquote>\n<p>Sorry KV, I've confused you! What you are looking at is the version of Carnival of Regrets that I've already 'fixed'.</p>\n</blockquote>\n<p>No, I'm with you.  I played the most recent version of that game and mentioned that your changes seem to have fixed <code>wear</code> and <code>remove</code>.  Then, I said I'd like to see that file before you made any changes, just to make sure my fix works.</p>\n<hr>\n<blockquote>\n<p>My goal is not to fix a specific game but to find a simple general strategy that someone might follow if they encounter the problem with 'wear' disappearing.</p>\n</blockquote>\n<p>Yes, I understand that.</p>\n<p>I theorized a simple, general strategy.  Then, I tested it on six older games, one game at a time (since testing it on all of the games at once wasn't really plausible, and merely theorizing only gets you so far).  It worked every time.</p>\n<p>You add 2 lines to the start script, then you add two verbs.</p>\n<p>If someone can come up with a method easier than this, I am quite eager to see the code.</p>\n<p>...and if this ever fails (before modifying anything else), I'd like to see that too, so I can learn from my mistakes.</p>\n<hr>\n<h1>THE FOLLOWING STEPS WORK ONLINE OR IN THE DESKTOP EDITOR</h1>\n<hr>\n<h1><strong>PART ONE - A FIX FOR OLD GAMES WITH \"WEAR\" AND \"REMOVE\" VERBS</strong></h1>\n<h2>Step 1</h2>\n<p>Change the patterns for wear and remove by adding these two lines to the start script:</p>\n<p>IN CODE VIEW:</p>\n<pre><code>wear.pattern = \"upupdowndownleftrightleftrightba\"\nremove.pattern = \"upupdowndownleftrightleftrightab\"\n</code></pre>\n<p>IN GUI VIEW:</p>\n<details>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/40165555-ed4814dc-5981-11e8-83a4-d61d9ab789d3.png\" alt=\"image\"></p>\n</details>\n<hr>\n<h2>Step 2</h2>\n<p>Add these verbs:</p>\n<p>IN FULL CODE VIEW:</p>\n<pre><code>  &lt;verb name=\"wear_verb\"&gt;\n    &lt;pattern&gt;wear&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't wear \" + object.article + \".\"&lt;/defaultexpression&gt;\n    &lt;property&gt;wear&lt;/property&gt;\n  &lt;/verb&gt;\n</code></pre>\n<p>IN GUI:</p>\n<details>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/40165507-cea92e6c-5981-11e8-8f8e-b19842f9d284.png\" alt=\"image\"></p>\n</details>\n<hr>\n<p>IN FULL CODE VIEW:</p>\n<pre><code>  &lt;verb name=\"remove_verb\"&gt;\n    &lt;pattern&gt;remove&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't remove \" + object.article + \".\"&lt;/defaultexpression&gt;\n    &lt;property&gt;remove&lt;/property&gt;\n  &lt;/verb&gt;\n</code></pre>\n<p>IN GUI:</p>\n<details>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/40165522-d9396324-5981-11e8-9f9e-2be20830adb4.png\" alt=\"image\"></p>\n</details>\n<hr>\n<h2>Step 3</h2>\n<p>Test to make sure everything works!</p>\n<hr>\n<p><strong>To reiterate,</strong> I'm not trying to say that my way is the only way, or that my way is the best way, or that my way never fails.</p>\n<p>I'd just like to see it fail if it doesn't always work, because I've tested it out six times in the past 12 hours, with 100% success rate.</p>\n<p>If this DOES work at least 95% of the time (which I believe it will, unless someone needs to add on to the verbs' patterns), it can easily be made into a library for desktop users.</p>\n<p><strong>OldWearFixLib.aslx</strong></p>\n<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;library&gt;\n  &lt;command name=\"wear\"&gt;\n    &lt;pattern&gt;upupdowndownleftrightleftrightba&lt;/pattern&gt;\n    &lt;script&gt;\n      msg(\"Nothing happens.\")\n    &lt;/script&gt;\n  &lt;/command&gt;\n\n  &lt;command name=\"remove\"&gt;\n    &lt;pattern&gt;upupdowndownleftrightleftrightab&lt;/pattern&gt;\n    &lt;script&gt;\n      msg(\"Nothing happens.\")\n    &lt;/script&gt;\n  &lt;/command&gt;\n\n  &lt;!-- \n      NOTE:  You may need to add more patterns to these verbs, depending on your game.\n\n      I did not add anything extra to these patterns because there's no telling what patterns may exist, \n      and the wrong pattern(s) could create bugs (i.e., if you have separate WEAR and DON verbs set up).\n     --&gt;\n\n  &lt;verb name=\"wear_verb\"&gt;\n    &lt;pattern&gt;wear&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't wear \" + object.article + \".\"&lt;/defaultexpression&gt;\n    &lt;property&gt;wear&lt;/property&gt;\n  &lt;/verb&gt;\n\n  &lt;verb name=\"remove_verb\"&gt;\n    &lt;pattern&gt;remove&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't remove \" + object.article + \".\"&lt;/defaultexpression&gt;\n    &lt;property&gt;remove&lt;/property&gt;\n  &lt;/verb&gt;\n\n&lt;/library&gt;\n</code></pre>\n<hr>\n<h1><strong>PART TWO - AN ENTER VERB</strong></h1>\n<h3>Step 1 (of 1)</h3>\n<p>Go into full code view (or edit your .aslx file in a text editor), and change  the first line of your <code>enter</code> verb from <code>&lt;verb&gt;</code> to <code>&lt;verb name=\"enter_verb\"&gt;</code>.  (<strong>NOTE: You can add an \"enter\" verb to any game by doing this.</strong>)</p>\n<p>If the pattern is simply \"enter\", it should look like this:</p>\n<pre><code>  &lt;verb name=\"enter_verb\"&gt;\n    &lt;property&gt;enter&lt;/property&gt;\n    &lt;pattern&gt;enter&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't enter \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n</code></pre>\n<hr>\n<p>If you don't like to fool around in code view, you can add (or edit) a verb in the GUI:</p>\n<details>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/40125828-7581ee18-58f1-11e8-9e93-3cf5c453a5ff.png\"><img src=\"https://user-images.githubusercontent.com/30656341/40125828-7581ee18-58f1-11e8-9e93-3cf5c453a5ff.png\"></a></p>\n</details>\n<hr>\n<p>I have actually tested the code I have posted, and I have done so numerous times -- on my games as well as games made by other authors (including your game, DavyB).</p>\n<p>If I see someone post, \"I  have tried these methods, and they do not work because ___ ,\"  I'll continue to try to help.   Otherwise, I'll assume I'm just bothering everyone, no one has even tested it out with my code, and that no one is interested in my input (for whatever reason; even if it is basically the same thing that Pixie suggested -- only a little more simplified, since I change the new commands' patterns in the start script, which can also be done online or in the desktop).</p>\n<p>I am not offended, nor do I wish to offend, by the way.  I'm just thinking that the best way to help when my input isn't helping is to nix my input.  (This is for the greater good, you understand.)</p>\n<p>So, I apologize if I have upset anyone, or confused anyone, or in any way exacerbated things.</p>\n<p>...and I'm also sorry about this wall of text, but only if it isn't helping anyone.</p>\n<p>Cheers!</p>\n</details>\n\n",
      "PostDate": "2018-05-17T08:47:45.4563446Z",
      "LastEditDate": "2018-05-17T15:06:23.0740523Z",
      "link": null
    },
    {
      "PostId": "9dc98327-68ab-4ebd-9cf8-6a2106f5976f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details>\r\n\r\nPS\r\n\r\nIf the pattern of the existing \"wear\" verb is something other than ```wear```, that pattern will need to be applied to the new \"wear_verb\".\r\n\r\nThe same goes for the existing \"remove\" verb.\r\n\r\n(This is the 5% of the time my fix needs a little tweaking.)\r\n\r\n\r\n---\r\nHave a nice day!\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<details>\n<p>PS</p>\n<p>If the pattern of the existing \"wear\" verb is something other than <code>wear</code>, that pattern will need to be applied to the new \"wear_verb\".</p>\n<p>The same goes for the existing \"remove\" verb.</p>\n<p>(This is the 5% of the time my fix needs a little tweaking.)</p>\n<hr>\n<p>Have a nice day!</p>\n</details>\n\n",
      "PostDate": "2018-05-17T09:23:39.3393855Z",
      "LastEditDate": "2018-05-17T15:13:43.1261521Z",
      "link": null
    },
    {
      "PostId": "fe7d1c87-14a3-46cd-9797-6950b5c805b8",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks KV and Pixie. I'll try this out and get back you. One query, however, for Pixie:\r\n>At the bottom left, do Filter - Show library elements. Find the \"wear\" and \"remove\" commands, and copy them to your game. \r\n\r\nDo you mean \"wear\" and \"remove\" under \"Templates\"?",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks KV and Pixie. I'll try this out and get back you. One query, however, for Pixie:</p>\n<blockquote>\n<p>At the bottom left, do Filter - Show library elements. Find the \"wear\" and \"remove\" commands, and copy them to your game.</p>\n</blockquote>\n<p>Do you mean \"wear\" and \"remove\" under \"Templates\"?</p>\n\n",
      "PostDate": "2018-05-17T09:57:33.6925802Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cda02ec0-c6a1-497b-a7ac-011e10bf807c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ KV:\r\n\r\nhaha... never recognized that to be inputs for a game code, haha... (for some reason, I was taking the 't' off of 'right' and thinking it went with the 'ab', as 'tab'... lol --- maybe becoming dyzlexic as I'm getting older... hmm... argh... lol)\r\n\r\n(some gamer, is \"gamer HK\"... sighs, lol)\r\n\r\nHK liked TMNT 1+2 (NES), hard/fun games...\r\n\r\ndid konami do the old contra games too? (I'm sure konami has done tons of the old games... one of the big brands/companies way back then/when... lol)\r\n\r\nhttps://en.wikipedia.org/wiki/Konami (ya... lots of games... lol)\r\n\r\nwow... didn't know konami did MGS (metal gear solid, PS1)... that was a good game...",
      "EditableFormat": "markdown",
      "HTML": "<p>@ KV:</p>\n<p>haha... never recognized that to be inputs for a game code, haha... (for some reason, I was taking the 't' off of 'right' and thinking it went with the 'ab', as 'tab'... lol --- maybe becoming dyzlexic as I'm getting older... hmm... argh... lol)</p>\n<p>(some gamer, is \"gamer HK\"... sighs, lol)</p>\n<p>HK liked TMNT 1+2 (NES), hard/fun games...</p>\n<p>did konami do the old contra games too? (I'm sure konami has done tons of the old games... one of the big brands/companies way back then/when... lol)</p>\n<p>https://en.wikipedia.org/wiki/Konami (ya... lots of games... lol)</p>\n<p>wow... didn't know konami did MGS (metal gear solid, PS1)... that was a good game...</p>\n\n",
      "PostDate": "2018-05-17T10:16:54.75054Z",
      "LastEditDate": "2018-05-17T10:18:50.4258447Z",
      "link": null
    },
    {
      "PostId": "e0d42bb7-262f-453b-a51d-02d46c35d649",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details>\r\n\r\n> I was taking the 't' off of 'right' and thinking it went with the 'ab', as 'tab'... lol\r\n\r\nHehehe.\r\n\r\n I deduced that!  In your defense, it does say \"tab\"...\r\n\r\n---\r\n> did konami do the old contra games too?\r\n\r\nYes, sir!\r\n\r\nIf you input the pattern of ```wear``` while the Contra menu is on the screen, you get 30 lives!\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<details>\n<blockquote>\n<p>I was taking the 't' off of 'right' and thinking it went with the 'ab', as 'tab'... lol</p>\n</blockquote>\n<p>Hehehe.</p>\n<p>I deduced that!  In your defense, it does say \"tab\"...</p>\n<hr>\n<blockquote>\n<p>did konami do the old contra games too?</p>\n</blockquote>\n<p>Yes, sir!</p>\n<p>If you input the pattern of <code>wear</code> while the Contra menu is on the screen, you get 30 lives!</p>\n</details>\n\n",
      "PostDate": "2018-05-17T10:30:12.2392694Z",
      "LastEditDate": "2018-05-17T15:14:13.3509739Z",
      "link": null
    },
    {
      "PostId": "a20a0215-c5a8-43be-9957-76a3f7854372",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Do you mean \"wear\" and \"remove\" under \"Templates\"?\r\n\r\nNo, the commands. The commands are at the top of the list.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Do you mean \"wear\" and \"remove\" under \"Templates\"?</p>\n</blockquote>\n<p>No, the commands. The commands are at the top of the list.</p>\n\n",
      "PostDate": "2018-05-17T13:39:04.6205386Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "28c59127-b75f-4ad3-9f7b-b828c8b254cd",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay, taking into account everything that has been said so far, and what I've learned from experiments, here is DavyB's proposed 10-point plan for how to get from a broken game that had been using the 'wear' verb to one working with the new wearables feature, which is, I guess, the better way to go:\r\n1.\tYour 'wear' and 'remove' code appears to have disappeared. Don't worry, it is still there but less obvious.\r\n2.\tTo repair your game to use the new 'wearables' feature, first delete any wear-related verbs (‚Äò'wear', 'remove', put on, take off‚Ä¶)  from the verb list at the top of the panel on the left hand side. \r\n3.\tNext, click on 'game' at the top of that panel, select 'features' and tick the box for \"Show advanced options for wearables\"\r\n4.\tThen go to the (first) item that was previously using 'wear' (or any other verb that has disappeared). Click on 'attributes' for that item. You will see an entry for 'wear' (or other missing verbs). Click on it to bring up the old script for 'wear'. Take a copy. (It can also be deleted but wait until testing is complete!)\r\n5.\tFor that item, tick the 'wearables' box under the 'features' tab; and then under the 'wearable' tab that appears, select \"can be worn\".\r\n6.\tNow complete the wearable details for the item, pasting in the script you have just copied.\r\n7.\tThe 'wearables' feature uses a Boolean flag 'worn', which is set to 'true' after the 'wear' (or equivalent) verb has been used successfully (and 'false' after 'remove' or equivalent). Your game should be adjusted to use 'worn' anywhere you test for that item being on or off.\r\n8.\tRepeat for all items that had wear-related verbs in your game.\r\n9.\tTest your game from start to finish to make sure everything works as intended, with no side effects. Tune as necessary, possibly using other wearable operations.\r\n10.\tUpload the resulting game.\r\n\r\nThis seems to work with tests performed so far. The only issue I‚Äôve had is with dropping worn items. If there is an associated script the operation is blocked with the vague error message: ‚ÄúYou can‚Äôt drop it/them‚Äù and there doesn‚Äôt seem to be any way of controlling this message. If there is no script, the item appears to be dropped, which is a bug. Controlling the message for attempted ‚Äòwear‚Äô operations on items not held would also be useful‚Ä¶perhaps in the advance wearables interface?\r\nMy experimentation continues‚Ä¶",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay, taking into account everything that has been said so far, and what I've learned from experiments, here is DavyB's proposed 10-point plan for how to get from a broken game that had been using the 'wear' verb to one working with the new wearables feature, which is, I guess, the better way to go:<br>\n1.\tYour 'wear' and 'remove' code appears to have disappeared. Don't worry, it is still there but less obvious.<br>\n2.\tTo repair your game to use the new 'wearables' feature, first delete any wear-related verbs (‚Äò'wear', 'remove', put on, take off‚Ä¶)  from the verb list at the top of the panel on the left hand side.<br>\n3.\tNext, click on 'game' at the top of that panel, select 'features' and tick the box for \"Show advanced options for wearables\"<br>\n4.\tThen go to the (first) item that was previously using 'wear' (or any other verb that has disappeared). Click on 'attributes' for that item. You will see an entry for 'wear' (or other missing verbs). Click on it to bring up the old script for 'wear'. Take a copy. (It can also be deleted but wait until testing is complete!)<br>\n5.\tFor that item, tick the 'wearables' box under the 'features' tab; and then under the 'wearable' tab that appears, select \"can be worn\".<br>\n6.\tNow complete the wearable details for the item, pasting in the script you have just copied.<br>\n7.\tThe 'wearables' feature uses a Boolean flag 'worn', which is set to 'true' after the 'wear' (or equivalent) verb has been used successfully (and 'false' after 'remove' or equivalent). Your game should be adjusted to use 'worn' anywhere you test for that item being on or off.<br>\n8.\tRepeat for all items that had wear-related verbs in your game.<br>\n9.\tTest your game from start to finish to make sure everything works as intended, with no side effects. Tune as necessary, possibly using other wearable operations.<br>\n10.\tUpload the resulting game.</p>\n<p>This seems to work with tests performed so far. The only issue I‚Äôve had is with dropping worn items. If there is an associated script the operation is blocked with the vague error message: ‚ÄúYou can‚Äôt drop it/them‚Äù and there doesn‚Äôt seem to be any way of controlling this message. If there is no script, the item appears to be dropped, which is a bug. Controlling the message for attempted ‚Äòwear‚Äô operations on items not held would also be useful‚Ä¶perhaps in the advance wearables interface?<br>\nMy experimentation continues‚Ä¶</p>\n\n",
      "PostDate": "2018-05-17T15:15:06.9781972Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e7a5cdec-7bd7-4165-bf7f-a022d24bf747",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Adding this to the start script should be all that is required **if you want to keep your existing scripts, otherwise follow [Pixie's suggestion](http://textadventures.co.uk/forum/quest/topic/ew5zatkaskgyc1a7j5zqoa/getting-my-head-around-wearables-and-vice-versa#60668d26-10e2-4abe-98b9-45bd6653420a)**:\r\n\r\n---\r\n**ETA: added multiobject pre; fixed \"wear\" and \"remove\" to handle multiple; removed pattern changes as existing \"don\", \"put on\", etc. still work regardless; added check for empty object list**\r\n```\r\nwear.script => {\r\n  if (multiple and ListCount(object) = 0) {\r\n    msg (\"You've nothing to wear.\")\r\n  }\r\n  else {\r\n    foreach (o, object) {\r\n      if (ListCount(object) > 1) {\r\n        s = CapFirst(GetDisplayName(o)) + \": \"\r\n        OutputTextNoBr (s)\r\n      }\r\n      if (HasAttribute(o, \"wear\")) {\r\n        if (HasScript(o, \"wear\")) {\r\n          do (o, \"wear\")\r\n        }\r\n        if (HasString(o, \"wear\")) {\r\n          msg (o.wear)\r\n        }\r\n      }\r\n      else {\r\n        msg (s\"You can't wear \"+o.article+\".\")\r\n      }\r\n    }\r\n  }\r\n}\r\nremove.script => {\r\n  if (multiple and ListCount(object) = 0) {\r\n    msg (\"You've nothing to remove.\")\r\n  }\r\n  else if (TypeOf(object) = \"objectlist\") {\r\n    foreach (o, object) {\r\n      if (ListCount(object) > 1) {\r\n        s = CapFirst(GetDisplayName(o)) + \": \"\r\n        OutputTextNoBr (s)\r\n      }\r\n      if (HasAttribute(o, \"remove\")) {\r\n        if (HasScript(o, \"remove\")) {\r\n          do (o, \"remove\")\r\n        }\r\n        if (HasString(o, \"remove\")) {\r\n          msg (o.remove)\r\n        }\r\n      }\r\n      else {\r\n        msg (\"You can't remove \"+o.article+\".\")\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    if (HasAttribute(object, \"remove\")) {\r\n      if (HasScript(object, \"remove\")) {\r\n        do (object, \"remove\")\r\n      }\r\n      if (HasString(object, \"remove\")) {\r\n        msg (object.remove)\r\n      }\r\n    }\r\n    else {\r\n      msg (\"You can't remove \"+o.article+\".\")\r\n    }\r\n  }\r\n}\r\nforeach (o, AllObjects()) {\r\n  if (HasAttribute(o, \"wear\")) {\r\n    o.displayverbs = ListExclude(o.displayverbs, \"\")\r\n    if (not ListContains(o.displayverbs, \"Wear\")) {\r\n      list add (o.displayverbs, \"Wear\")\r\n    }\r\n    o.inventoryverbs = ListExclude(o.inventoryverbs, \"\")\r\n    if (not ListContains(o.inventoryverbs, \"Wear\")) {\r\n      list add (o.inventoryverbs, \"Wear\")\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n---\r\nTo edit the ```wear``` script on the objects in the GUI, use the '**Attributes**' tab (because \"wear\" will not be displayed in the '**Verbs**' tab).",
      "EditableFormat": "markdown",
      "HTML": "<p>Adding this to the start script should be all that is required <strong>if you want to keep your existing scripts, otherwise follow <a href=\"http://textadventures.co.uk/forum/quest/topic/ew5zatkaskgyc1a7j5zqoa/getting-my-head-around-wearables-and-vice-versa#60668d26-10e2-4abe-98b9-45bd6653420a\">Pixie's suggestion</a></strong>:</p>\n<hr>\n<p><strong>ETA: added multiobject pre; fixed \"wear\" and \"remove\" to handle multiple; removed pattern changes as existing \"don\", \"put on\", etc. still work regardless; added check for empty object list</strong></p>\n<pre><code>wear.script =&gt; {\n  if (multiple and ListCount(object) = 0) {\n    msg (\"You've nothing to wear.\")\n  }\n  else {\n    foreach (o, object) {\n      if (ListCount(object) &gt; 1) {\n        s = CapFirst(GetDisplayName(o)) + \": \"\n        OutputTextNoBr (s)\n      }\n      if (HasAttribute(o, \"wear\")) {\n        if (HasScript(o, \"wear\")) {\n          do (o, \"wear\")\n        }\n        if (HasString(o, \"wear\")) {\n          msg (o.wear)\n        }\n      }\n      else {\n        msg (s\"You can't wear \"+o.article+\".\")\n      }\n    }\n  }\n}\nremove.script =&gt; {\n  if (multiple and ListCount(object) = 0) {\n    msg (\"You've nothing to remove.\")\n  }\n  else if (TypeOf(object) = \"objectlist\") {\n    foreach (o, object) {\n      if (ListCount(object) &gt; 1) {\n        s = CapFirst(GetDisplayName(o)) + \": \"\n        OutputTextNoBr (s)\n      }\n      if (HasAttribute(o, \"remove\")) {\n        if (HasScript(o, \"remove\")) {\n          do (o, \"remove\")\n        }\n        if (HasString(o, \"remove\")) {\n          msg (o.remove)\n        }\n      }\n      else {\n        msg (\"You can't remove \"+o.article+\".\")\n      }\n    }\n  }\n  else {\n    if (HasAttribute(object, \"remove\")) {\n      if (HasScript(object, \"remove\")) {\n        do (object, \"remove\")\n      }\n      if (HasString(object, \"remove\")) {\n        msg (object.remove)\n      }\n    }\n    else {\n      msg (\"You can't remove \"+o.article+\".\")\n    }\n  }\n}\nforeach (o, AllObjects()) {\n  if (HasAttribute(o, \"wear\")) {\n    o.displayverbs = ListExclude(o.displayverbs, \"\")\n    if (not ListContains(o.displayverbs, \"Wear\")) {\n      list add (o.displayverbs, \"Wear\")\n    }\n    o.inventoryverbs = ListExclude(o.inventoryverbs, \"\")\n    if (not ListContains(o.inventoryverbs, \"Wear\")) {\n      list add (o.inventoryverbs, \"Wear\")\n    }\n  }\n}\n</code></pre>\n<hr>\n<p>To edit the <code>wear</code> script on the objects in the GUI, use the '<strong>Attributes</strong>' tab (because \"wear\" will not be displayed in the '<strong>Verbs</strong>' tab).</p>\n\n",
      "PostDate": "2018-05-17T23:34:20.7697889Z",
      "LastEditDate": "2018-05-18T02:46:51.4084823Z",
      "link": null
    },
    {
      "PostId": "2e26c9c5-8fe4-4674-b03d-e19d2d5afeba",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```Details\r\nSorry KV, I've confused you! What you are looking at is the version of Carnival of Regrets that I've already 'fixed'.\r\n\r\nNo, I'm with you. I played the most recent version of that game and mentioned that your changes seem to have fixed wear and remove. Then, I said I'd like to see that file before you made any changes, just to make sure my fix works.\r\n\r\nMy goal is not to fix a specific game but to find a simple general strategy that someone might follow if they encounter the problem with 'wear' disappearing.\r\n\r\nYes, I understand that.\r\n\r\nI theorized a simple, general strategy. Then, I tested it on six older games, one game at a time (since testing it on all of the games at once wasn't really plausible, and merely theorizing only gets you so far). It worked every time.\r\n\r\nYou add 2 lines to the start script, then you add two verbs.\r\n\r\nIf someone can come up with a method easier than this, I am quite eager to see the code.\r\n\r\n...and if this ever fails (before modifying anything else), I'd like to see that too, so I can learn from my mistakes.\r\n\r\nTHE FOLLOWING STEPS WORK ONLINE OR IN THE DESKTOP EDITOR\r\nPART ONE - A FIX FOR OLD GAMES WITH \"WEAR\" AND \"REMOVE\" VERBS\r\nStep 1\r\nChange the patterns for wear and remove by adding these two lines to the start script:\r\n\r\nIN CODE VIEW:\r\n\r\nwear.pattern = \"upupdowndownleftrightleftrightba\"\r\nremove.pattern = \"upupdowndownleftrightleftrightab\"\r\nIN GUI VIEW:\r\n\r\nDetails\r\nStep 2\r\nAdd these verbs:\r\n\r\nIN FULL CODE VIEW:\r\n\r\n  <verb name=\"wear_verb\">\r\n    <pattern>wear</pattern>\r\n    <defaultexpression>\"You can't wear \" + object.article + \".\"</defaultexpression>\r\n    <property>wear</property>\r\n  </verb>\r\nIN GUI:\r\n\r\nDetails\r\nIN FULL CODE VIEW:\r\n\r\n  <verb name=\"remove_verb\">\r\n    <pattern>remove</pattern>\r\n    <defaultexpression>\"You can't remove \" + object.article + \".\"</defaultexpression>\r\n    <property>remove</property>\r\n  </verb>\r\nIN GUI:\r\n\r\nDetails\r\nStep 3\r\nTest to make sure everything works!\r\n\r\nTo reiterate, I'm not trying to say that my way is the only way, or that my way is the best way, or that my way never fails.\r\n\r\nI'd just like to see it fail if it doesn't always work, because I've tested it out six times in the past 12 hours, with 100% success rate.\r\n\r\nIf this DOES work at least 95% of the time (which I believe it will, unless someone needs to add on to the verbs' patterns), it can easily be made into a library for desktop users.\r\n\r\nOldWearFixLib.aslx\r\n\r\n<?xml version=\"1.0\"?>\r\n<library>\r\n  <command name=\"wear\">\r\n    <pattern>upupdowndownleftrightleftrightba</pattern>\r\n    <script>\r\n      msg(\"Nothing happens.\")\r\n    </script>\r\n  </command>\r\n\r\n  <command name=\"remove\">\r\n    <pattern>upupdowndownleftrightleftrightab</pattern>\r\n    <script>\r\n      msg(\"Nothing happens.\")\r\n    </script>\r\n  </command>\r\n\r\n  <!-- \r\n      NOTE:  You may need to add more patterns to these verbs, depending on your game.\r\n\r\n      I did not add anything extra to these patterns because there's no telling what patterns may exist, \r\n      and the wrong pattern(s) could create bugs (i.e., if you have separate WEAR and DON verbs set up).\r\n     -->\r\n\r\n  <verb name=\"wear_verb\">\r\n    <pattern>wear</pattern>\r\n    <defaultexpression>\"You can't wear \" + object.article + \".\"</defaultexpression>\r\n    <property>wear</property>\r\n  </verb>\r\n\r\n  <verb name=\"remove_verb\">\r\n    <pattern>remove</pattern>\r\n    <defaultexpression>\"You can't remove \" + object.article + \".\"</defaultexpression>\r\n    <property>remove</property>\r\n  </verb>\r\n\r\n</library>\r\nPART TWO - AN ENTER VERB\r\nStep 1 (of 1)\r\nGo into full code view (or edit your .aslx file in a text editor), and change the first line of your enter verb from <verb> to <verb name=\"enter_verb\">. (NOTE: You can add an \"enter\" verb to any game by doing this.)\r\n\r\nIf the pattern is simply \"enter\", it should look like this:\r\n\r\n  <verb name=\"enter_verb\">\r\n    <property>enter</property>\r\n    <pattern>enter</pattern>\r\n    <defaultexpression>\"You can't enter \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\nIf you don't like to fool around in code view, you can add (or edit) a verb in the GUI:\r\n\r\nDetails\r\nI have actually tested the code I have posted, and I have done so numerous times -- on my games as well as games made by other authors (including your game, DavyB).\r\n\r\nIf I see someone post, \"I have tried these methods, and they do not work because ___ ,\" I'll continue to try to help. Otherwise, I'll assume I'm just bothering everyone, no one has even tested it out with my code, and that no one is interested in my input (for whatever reason; even if it is basically the same thing that Pixie suggested -- only a little more simplified, since I change the new commands' patterns in the start script, which can also be done online or in the desktop).\r\n\r\nI am not offended, nor do I wish to offend, by the way. I'm just thinking that the best way to help when my input isn't helping is to nix my input. (This is for the greater good, you understand.)\r\n\r\nSo, I apologize if I have upset anyone, or confused anyone, or in any way exacerbated things.\r\n\r\n...and I'm also sorry about this wall of text, but only if it isn't helping anyone.\r\n\r\nCheers!\r\n```\r\nHey, KV! Maybe you could put all this in the libraries and sample codes section of the forum? I'm sure it would help a lot of people!",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>Sorry KV, I've confused you! What you are looking at is the version of Carnival of Regrets that I've already 'fixed'.\n\nNo, I'm with you. I played the most recent version of that game and mentioned that your changes seem to have fixed wear and remove. Then, I said I'd like to see that file before you made any changes, just to make sure my fix works.\n\nMy goal is not to fix a specific game but to find a simple general strategy that someone might follow if they encounter the problem with 'wear' disappearing.\n\nYes, I understand that.\n\nI theorized a simple, general strategy. Then, I tested it on six older games, one game at a time (since testing it on all of the games at once wasn't really plausible, and merely theorizing only gets you so far). It worked every time.\n\nYou add 2 lines to the start script, then you add two verbs.\n\nIf someone can come up with a method easier than this, I am quite eager to see the code.\n\n...and if this ever fails (before modifying anything else), I'd like to see that too, so I can learn from my mistakes.\n\nTHE FOLLOWING STEPS WORK ONLINE OR IN THE DESKTOP EDITOR\nPART ONE - A FIX FOR OLD GAMES WITH \"WEAR\" AND \"REMOVE\" VERBS\nStep 1\nChange the patterns for wear and remove by adding these two lines to the start script:\n\nIN CODE VIEW:\n\nwear.pattern = \"upupdowndownleftrightleftrightba\"\nremove.pattern = \"upupdowndownleftrightleftrightab\"\nIN GUI VIEW:\n\nDetails\nStep 2\nAdd these verbs:\n\nIN FULL CODE VIEW:\n\n  &lt;verb name=\"wear_verb\"&gt;\n    &lt;pattern&gt;wear&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't wear \" + object.article + \".\"&lt;/defaultexpression&gt;\n    &lt;property&gt;wear&lt;/property&gt;\n  &lt;/verb&gt;\nIN GUI:\n\nDetails\nIN FULL CODE VIEW:\n\n  &lt;verb name=\"remove_verb\"&gt;\n    &lt;pattern&gt;remove&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't remove \" + object.article + \".\"&lt;/defaultexpression&gt;\n    &lt;property&gt;remove&lt;/property&gt;\n  &lt;/verb&gt;\nIN GUI:\n\nDetails\nStep 3\nTest to make sure everything works!\n\nTo reiterate, I'm not trying to say that my way is the only way, or that my way is the best way, or that my way never fails.\n\nI'd just like to see it fail if it doesn't always work, because I've tested it out six times in the past 12 hours, with 100% success rate.\n\nIf this DOES work at least 95% of the time (which I believe it will, unless someone needs to add on to the verbs' patterns), it can easily be made into a library for desktop users.\n\nOldWearFixLib.aslx\n\n&lt;?xml version=\"1.0\"?&gt;\n&lt;library&gt;\n  &lt;command name=\"wear\"&gt;\n    &lt;pattern&gt;upupdowndownleftrightleftrightba&lt;/pattern&gt;\n    &lt;script&gt;\n      msg(\"Nothing happens.\")\n    &lt;/script&gt;\n  &lt;/command&gt;\n\n  &lt;command name=\"remove\"&gt;\n    &lt;pattern&gt;upupdowndownleftrightleftrightab&lt;/pattern&gt;\n    &lt;script&gt;\n      msg(\"Nothing happens.\")\n    &lt;/script&gt;\n  &lt;/command&gt;\n\n  &lt;!-- \n      NOTE:  You may need to add more patterns to these verbs, depending on your game.\n\n      I did not add anything extra to these patterns because there's no telling what patterns may exist, \n      and the wrong pattern(s) could create bugs (i.e., if you have separate WEAR and DON verbs set up).\n     --&gt;\n\n  &lt;verb name=\"wear_verb\"&gt;\n    &lt;pattern&gt;wear&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't wear \" + object.article + \".\"&lt;/defaultexpression&gt;\n    &lt;property&gt;wear&lt;/property&gt;\n  &lt;/verb&gt;\n\n  &lt;verb name=\"remove_verb\"&gt;\n    &lt;pattern&gt;remove&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't remove \" + object.article + \".\"&lt;/defaultexpression&gt;\n    &lt;property&gt;remove&lt;/property&gt;\n  &lt;/verb&gt;\n\n&lt;/library&gt;\nPART TWO - AN ENTER VERB\nStep 1 (of 1)\nGo into full code view (or edit your .aslx file in a text editor), and change the first line of your enter verb from &lt;verb&gt; to &lt;verb name=\"enter_verb\"&gt;. (NOTE: You can add an \"enter\" verb to any game by doing this.)\n\nIf the pattern is simply \"enter\", it should look like this:\n\n  &lt;verb name=\"enter_verb\"&gt;\n    &lt;property&gt;enter&lt;/property&gt;\n    &lt;pattern&gt;enter&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't enter \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\nIf you don't like to fool around in code view, you can add (or edit) a verb in the GUI:\n\nDetails\nI have actually tested the code I have posted, and I have done so numerous times -- on my games as well as games made by other authors (including your game, DavyB).\n\nIf I see someone post, \"I have tried these methods, and they do not work because ___ ,\" I'll continue to try to help. Otherwise, I'll assume I'm just bothering everyone, no one has even tested it out with my code, and that no one is interested in my input (for whatever reason; even if it is basically the same thing that Pixie suggested -- only a little more simplified, since I change the new commands' patterns in the start script, which can also be done online or in the desktop).\n\nI am not offended, nor do I wish to offend, by the way. I'm just thinking that the best way to help when my input isn't helping is to nix my input. (This is for the greater good, you understand.)\n\nSo, I apologize if I have upset anyone, or confused anyone, or in any way exacerbated things.\n\n...and I'm also sorry about this wall of text, but only if it isn't helping anyone.\n\nCheers!\n</code></pre>\n<p>Hey, KV! Maybe you could put all this in the libraries and sample codes section of the forum? I'm sure it would help a lot of people!</p>\n\n",
      "PostDate": "2018-05-18T01:38:59.5959814Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4ddebd59-4f49-4bd9-ba5d-c63e464d1c14",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Hey, KV! Maybe you could put all this in the libraries and sample codes section of the forum? I'm sure it would help a lot of people!\r\n\r\n...wouldn't it be nice to have a 'wear_convert' among the 'wearables' operations, which took an existing game using 'wear' etc and converted it to use the new format!",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Hey, KV! Maybe you could put all this in the libraries and sample codes section of the forum? I'm sure it would help a lot of people!</p>\n</blockquote>\n<p>...wouldn't it be nice to have a 'wear_convert' among the 'wearables' operations, which took an existing game using 'wear' etc and converted it to use the new format!</p>\n\n",
      "PostDate": "2018-05-18T05:53:46.2085934Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6fb8bf73-d843-4062-8f6d-60a0cccd54d0",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "### Upgrading Wearables\r\n\r\nAdd these two functions to your game in full code view, then add ```UpgradeWearables``` to your start script:\r\n\r\n**ETA: Added remove.pattern; Resolved issues with existing verbs**\r\n```\r\n  <function name=\"UpgradeWearables\"><![CDATA[\r\n    remove.pattern = \"^take (?<object>.+) off$|^remove (?<object>.+)$|^doff (?<object>.+)$|^take off (?<object>.+)$\"\r\n    foreach (c, ScopeCommands()){\r\n      foreach (att, Split(\"don;puton;takeoff;doff\", \";\")){\r\n        if (c.property = att){\r\n          c.parent = game\r\n        }\r\n      }\r\n    }\r\n    remove.multipleobjects => {\r\n      game.pov.currentcommandpendingobjectscope = ScopeInventory()\r\n    }\r\n    remove.script => {\r\n      if (multiple and ListCount(object) = 0) {\r\n        msg (\"[NothingToRemove]\")\r\n      }\r\n      else {\r\n        foreach (obj, object) {\r\n          f = _DoRemove(obj)\r\n        }\r\n      }\r\n      UpdateArmour\r\n    }\r\n    remove.scope = \"inventory\"\r\n    foreach (o, AllObjects()) {\r\n      if (HasAttribute(o, \"wear\")) {\r\n        o.wear = null\r\n        o.don = null\r\n        o.puton = null\r\n        o.remove = null\r\n        o.takeoff = null\r\n        o.doff = null\r\n        o.wearable = true\r\n        o.usestandardverblist = true\r\n        o.worn = false\r\n        o.armour = 0\r\n        o.multistate_status = 0\r\n        o.invverbs = \"\"\r\n        o.wornverbs = \"\"\r\n        o.take => {\r\n          msg (DynamicTemplate(\"TakeSuccessful\", this))\r\n          this.parent = game.pov\r\n          SetVerbs\r\n        }\r\n        o.removeable = true\r\n        o.wear_layer = 2\r\n        o.inventoryverbs = ListCombine (o.inventoryverbs, Split(\"Wear;Remove\", \";\"))\r\n        o.wear_slots = NewStringList()\r\n        o.colourmylistalias => {\r\n          if (HasString(this, \"alias\")) {\r\n            s = CapFirst(this.alias)\r\n          }\r\n          else {\r\n            s = CapFirst(this.name)\r\n          }\r\n          if (HasString(this, \"listalias\")) {\r\n            s = this.listalias\r\n          }\r\n          this.listalias = \"<span style=\\\"color:blue\\\">\" + s + \"</span>\"\r\n          if (HasAttribute(this,\"remove\")) {\r\n            this.remove = null\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ]]></function>\r\n```\r\n\r\n```\r\n  <function name=\"SetVerbs\">\r\n    foreach (o, GetAllChildObjects(game.pov)) {\r\n      if (DoesInherit(o, \"wearable\") or HasAttribute(o, \"wearable\")) {\r\n        if (HasAttribute(o, \"wear_slots\") and HasInt(o, \"wear_layer\")) {\r\n          _SetVerbsForGarment (o)\r\n        }\r\n        if (not HasString(o, \"alias\")) {\r\n          o.alias = o.name\r\n        }\r\n        if (not HasString(o, \"listalias\")) {\r\n          o.listalias = o.alias\r\n        }\r\n      }\r\n    }\r\n  </function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<h3>Upgrading Wearables</h3>\n<p>Add these two functions to your game in full code view, then add <code>UpgradeWearables</code> to your start script:</p>\n<p><strong>ETA: Added remove.pattern; Resolved issues with existing verbs</strong></p>\n<pre><code>  &lt;function name=\"UpgradeWearables\"&gt;&lt;![CDATA[\n    remove.pattern = \"^take (?&lt;object&gt;.+) off$|^remove (?&lt;object&gt;.+)$|^doff (?&lt;object&gt;.+)$|^take off (?&lt;object&gt;.+)$\"\n    foreach (c, ScopeCommands()){\n      foreach (att, Split(\"don;puton;takeoff;doff\", \";\")){\n        if (c.property = att){\n          c.parent = game\n        }\n      }\n    }\n    remove.multipleobjects =&gt; {\n      game.pov.currentcommandpendingobjectscope = ScopeInventory()\n    }\n    remove.script =&gt; {\n      if (multiple and ListCount(object) = 0) {\n        msg (\"[NothingToRemove]\")\n      }\n      else {\n        foreach (obj, object) {\n          f = _DoRemove(obj)\n        }\n      }\n      UpdateArmour\n    }\n    remove.scope = \"inventory\"\n    foreach (o, AllObjects()) {\n      if (HasAttribute(o, \"wear\")) {\n        o.wear = null\n        o.don = null\n        o.puton = null\n        o.remove = null\n        o.takeoff = null\n        o.doff = null\n        o.wearable = true\n        o.usestandardverblist = true\n        o.worn = false\n        o.armour = 0\n        o.multistate_status = 0\n        o.invverbs = \"\"\n        o.wornverbs = \"\"\n        o.take =&gt; {\n          msg (DynamicTemplate(\"TakeSuccessful\", this))\n          this.parent = game.pov\n          SetVerbs\n        }\n        o.removeable = true\n        o.wear_layer = 2\n        o.inventoryverbs = ListCombine (o.inventoryverbs, Split(\"Wear;Remove\", \";\"))\n        o.wear_slots = NewStringList()\n        o.colourmylistalias =&gt; {\n          if (HasString(this, \"alias\")) {\n            s = CapFirst(this.alias)\n          }\n          else {\n            s = CapFirst(this.name)\n          }\n          if (HasString(this, \"listalias\")) {\n            s = this.listalias\n          }\n          this.listalias = \"&lt;span style=\\\"color:blue\\\"&gt;\" + s + \"&lt;/span&gt;\"\n          if (HasAttribute(this,\"remove\")) {\n            this.remove = null\n          }\n        }\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<pre><code>  &lt;function name=\"SetVerbs\"&gt;\n    foreach (o, GetAllChildObjects(game.pov)) {\n      if (DoesInherit(o, \"wearable\") or HasAttribute(o, \"wearable\")) {\n        if (HasAttribute(o, \"wear_slots\") and HasInt(o, \"wear_layer\")) {\n          _SetVerbsForGarment (o)\n        }\n        if (not HasString(o, \"alias\")) {\n          o.alias = o.name\n        }\n        if (not HasString(o, \"listalias\")) {\n          o.listalias = o.alias\n        }\n      }\n    }\n  &lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2018-05-18T07:23:37.7937298Z",
      "LastEditDate": "2018-05-18T07:43:22.2233479Z",
      "link": null
    },
    {
      "PostId": "a319a8b0-8c0f-4973-8c93-2dbc8b2ccc6b",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@Richard Headkid, out this morning but looking forward to trying this later!",
      "EditableFormat": "markdown",
      "HTML": "<p>@Richard Headkid, out this morning but looking forward to trying this later!</p>\n\n",
      "PostDate": "2018-05-18T07:59:11.9011757Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "94f2c6d7-f436-46ec-9432-12085414e05a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Then type some long, random text for the command pattern.\r\n\r\nCould also use one of the regular expressions `^(?!x)x`, `(*FAIL)`, `^(?<=x)`, `^\\b$`, or `^(?!)` which don't match any possible string. (Not sure if Visual Studio supports `(*FAIL)`; you should be able to see how the others work, but if not I'd love to explain them).\r\nActually, you could probably use the pattern \"`^ `\" (that's a string starting with a space) because the parser removes any spaces from the start of a command before checking it against the pattern.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Then type some long, random text for the command pattern.</p>\n</blockquote>\n<p>Could also use one of the regular expressions <code>^(?!x)x</code>, <code>(*FAIL)</code>, <code>^(?&lt;=x)</code>, <code>^\\b$</code>, or <code>^(?!)</code> which don't match any possible string. (Not sure if Visual Studio supports <code>(*FAIL)</code>; you should be able to see how the others work, but if not I'd love to explain them).<br>\nActually, you could probably use the pattern \"<code>^</code>\" (that's a string starting with a space) because the parser removes any spaces from the start of a command before checking it against the pattern.</p>\n\n",
      "PostDate": "2018-05-19T11:52:47.8946729Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "af57d2b4-69ba-4a90-9e36-23299c8bf3b6",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@Richard Headkid, sorry for the delay...working on too many issues at the same time!\r\n\r\nI tied plugging your code into a game with wearable items that was affected by the recent change. It's showing an error when I attempt to wear an item. Was your code supposed to reconnect with all previous wear and remove scripts in the game and run as it would have done before the last update? ...and also convert to the new structure? I realise that the second part cannot be completed fully because of the need to handle 'worn' in the scripts. It would be useful if the conversion displayed the items involved?",
      "EditableFormat": "markdown",
      "HTML": "<p>@Richard Headkid, sorry for the delay...working on too many issues at the same time!</p>\n<p>I tied plugging your code into a game with wearable items that was affected by the recent change. It's showing an error when I attempt to wear an item. Was your code supposed to reconnect with all previous wear and remove scripts in the game and run as it would have done before the last update? ...and also convert to the new structure? I realise that the second part cannot be completed fully because of the need to handle 'worn' in the scripts. It would be useful if the conversion displayed the items involved?</p>\n\n",
      "PostDate": "2018-05-21T13:48:21.9946777Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "67d8355e-a34e-4cee-88c7-869467c128e5",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Did you add ```UpgradeWearables``` to the start script?",
      "EditableFormat": "markdown",
      "HTML": "<p>Did you add <code>UpgradeWearables</code> to the start script?</p>\n\n",
      "PostDate": "2018-05-21T14:36:05.7761201Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cd882525-ce71-4957-b107-dbdbd8e2eb3b",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Yup, and just checked to make sure. I'll try to put in some sort of trace and run it again.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Yup, and just checked to make sure. I'll try to put in some sort of trace and run it again.</p>\n</blockquote>\n\n",
      "PostDate": "2018-05-21T14:42:19.6281672Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "eb1e829f-1b52-40cf-912c-2f93d157b8e2",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I added this line to the main function, so check the log to see what all was modified:\r\n\r\n```Log (\"Modifying wear settings for \" + o.name + \".\")```\r\n\r\nHere's the revised function (with the function on which it depends included):\r\n\r\n```\r\n  <function name=\"UpgradeWearables\"><![CDATA[\r\n    remove.pattern = \"^take (?<object>.+) off$|^remove (?<object>.+)$|^doff (?<object>.+)$|^take off (?<object>.+)$\"\r\n    foreach (c, ScopeCommands()) {\r\n      foreach (att, Split(\"don;puton;takeoff;doff\", \";\")) {\r\n        if (c.property = att) {\r\n          c.parent = game\r\n        }\r\n      }\r\n    }\r\n    remove.multipleobjects => {\r\n      game.pov.currentcommandpendingobjectscope = ScopeInventory()\r\n    }\r\n    remove.script => {\r\n      if (multiple and ListCount(object) = 0) {\r\n        msg (\"You've nothing to take off.\")\r\n      }\r\n      else {\r\n        foreach (obj, object) {\r\n          f = _DoRemove(obj)\r\n        }\r\n      }\r\n      UpdateArmour\r\n    }\r\n    remove.scope = \"inventory\"\r\n    foreach (o, AllObjects()) {\r\n      if (HasAttribute(o, \"wear\")) {\r\n        Log (\"Modifying wear settings for \" + o.name + \".\")\r\n        o.wear = null\r\n        o.don = null\r\n        o.puton = null\r\n        o.remove = null\r\n        o.takeoff = null\r\n        o.doff = null\r\n        o.wearable = true\r\n        o.usestandardverblist = true\r\n        o.worn = false\r\n        o.armour = 0\r\n        o.multistate_status = 0\r\n        o.invverbs = \"\"\r\n        o.wornverbs = \"\"\r\n        o.take => {\r\n          msg (DynamicTemplate(\"TakeSuccessful\", this))\r\n          this.parent = game.pov\r\n          SetVerbs\r\n        }\r\n        o.removeable = true\r\n        o.wear_layer = 2\r\n        o.inventoryverbs = ListCombine (o.inventoryverbs, Split(\"Wear;Remove\", \";\"))\r\n        o.wear_slots = NewStringList()\r\n        o.colourmylistalias => {\r\n          if (HasString(this, \"alias\")) {\r\n            s = CapFirst(this.alias)\r\n          }\r\n          else {\r\n            s = CapFirst(this.name)\r\n          }\r\n          if (HasString(this, \"listalias\")) {\r\n            s = this.listalias\r\n          }\r\n          this.listalias = \"<span style=\\\"color:blue\\\">\" + s + \"</span>\"\r\n          if (HasAttribute(this,\"remove\")) {\r\n            this.remove = null\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ]]></function>\r\n  <function name=\"SetVerbs\">\r\n    foreach (o, GetAllChildObjects(game.pov)) {\r\n      if (DoesInherit(o, \"wearable\") or HasAttribute(o, \"wearable\")) {\r\n        if (HasAttribute(o, \"wear_slots\") and HasInt(o, \"wear_layer\")) {\r\n          _SetVerbsForGarment (o)\r\n        }\r\n        if (not HasString(o, \"alias\")) {\r\n          o.alias = o.name\r\n        }\r\n        if (not HasString(o, \"listalias\")) {\r\n          o.listalias = o.alias\r\n        }\r\n      }\r\n    }\r\n  </function>\r\n```\r\n\r\n\r\n\r\n---\r\nCreate a GET WEARABLE command, and put this for the script to test this:\r\n```\r\nwearable = PickOneObject(FilterByAttribute(AllObjects(),\"removeable\",true))\r\ncloned_wearable = CloneObjectAndMove(wearable, game.pov)\r\nmsg(\"You are now carrying \" + GetDisplayName(cloned_wearable) + \".\")\r\ncloned_wearable.scenery = false // Just to make sure\r\ncloned_wearable.visible = true // Just to make sure\r\n```\r\n\r\n---\r\nI am testing this in the game you sent me, DavyB. \r\n\r\nI added these functions, the line in the start script, and the command to test it (which is KVTEST).\r\n\r\nI will email it to you.",
      "EditableFormat": "markdown",
      "HTML": "<p>I added this line to the main function, so check the log to see what all was modified:</p>\n<p><code>Log (\"Modifying wear settings for \" + o.name + \".\")</code></p>\n<p>Here's the revised function (with the function on which it depends included):</p>\n<pre><code>  &lt;function name=\"UpgradeWearables\"&gt;&lt;![CDATA[\n    remove.pattern = \"^take (?&lt;object&gt;.+) off$|^remove (?&lt;object&gt;.+)$|^doff (?&lt;object&gt;.+)$|^take off (?&lt;object&gt;.+)$\"\n    foreach (c, ScopeCommands()) {\n      foreach (att, Split(\"don;puton;takeoff;doff\", \";\")) {\n        if (c.property = att) {\n          c.parent = game\n        }\n      }\n    }\n    remove.multipleobjects =&gt; {\n      game.pov.currentcommandpendingobjectscope = ScopeInventory()\n    }\n    remove.script =&gt; {\n      if (multiple and ListCount(object) = 0) {\n        msg (\"You've nothing to take off.\")\n      }\n      else {\n        foreach (obj, object) {\n          f = _DoRemove(obj)\n        }\n      }\n      UpdateArmour\n    }\n    remove.scope = \"inventory\"\n    foreach (o, AllObjects()) {\n      if (HasAttribute(o, \"wear\")) {\n        Log (\"Modifying wear settings for \" + o.name + \".\")\n        o.wear = null\n        o.don = null\n        o.puton = null\n        o.remove = null\n        o.takeoff = null\n        o.doff = null\n        o.wearable = true\n        o.usestandardverblist = true\n        o.worn = false\n        o.armour = 0\n        o.multistate_status = 0\n        o.invverbs = \"\"\n        o.wornverbs = \"\"\n        o.take =&gt; {\n          msg (DynamicTemplate(\"TakeSuccessful\", this))\n          this.parent = game.pov\n          SetVerbs\n        }\n        o.removeable = true\n        o.wear_layer = 2\n        o.inventoryverbs = ListCombine (o.inventoryverbs, Split(\"Wear;Remove\", \";\"))\n        o.wear_slots = NewStringList()\n        o.colourmylistalias =&gt; {\n          if (HasString(this, \"alias\")) {\n            s = CapFirst(this.alias)\n          }\n          else {\n            s = CapFirst(this.name)\n          }\n          if (HasString(this, \"listalias\")) {\n            s = this.listalias\n          }\n          this.listalias = \"&lt;span style=\\\"color:blue\\\"&gt;\" + s + \"&lt;/span&gt;\"\n          if (HasAttribute(this,\"remove\")) {\n            this.remove = null\n          }\n        }\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"SetVerbs\"&gt;\n    foreach (o, GetAllChildObjects(game.pov)) {\n      if (DoesInherit(o, \"wearable\") or HasAttribute(o, \"wearable\")) {\n        if (HasAttribute(o, \"wear_slots\") and HasInt(o, \"wear_layer\")) {\n          _SetVerbsForGarment (o)\n        }\n        if (not HasString(o, \"alias\")) {\n          o.alias = o.name\n        }\n        if (not HasString(o, \"listalias\")) {\n          o.listalias = o.alias\n        }\n      }\n    }\n  &lt;/function&gt;\n</code></pre>\n<hr>\n<p>Create a GET WEARABLE command, and put this for the script to test this:</p>\n<pre><code>wearable = PickOneObject(FilterByAttribute(AllObjects(),\"removeable\",true))\ncloned_wearable = CloneObjectAndMove(wearable, game.pov)\nmsg(\"You are now carrying \" + GetDisplayName(cloned_wearable) + \".\")\ncloned_wearable.scenery = false // Just to make sure\ncloned_wearable.visible = true // Just to make sure\n</code></pre>\n<hr>\n<p>I am testing this in the game you sent me, DavyB.</p>\n<p>I added these functions, the line in the start script, and the command to test it (which is KVTEST).</p>\n<p>I will email it to you.</p>\n\n",
      "PostDate": "2018-05-21T14:46:58.8861366Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bf12c034-1bdc-41b2-864d-858267e317d1",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is what we've currently got (mostly coded by DavyB, which is why it looks good when it prints out).  \r\n\r\nAnyone see room for improvements?\r\n\r\n```\r\nmsg (\"</br><center>+ + + + +</center></br>\")\r\nmsg (\"<b>Wearables Conflict Report</b>\")\r\nmsg (\"Your game has been analysed to identify uses of the <i>worn</i> attribute and verbs that may have to be modified as a result of the introduction of the 'wearables' feature in Quest 5.7.2.</br>\")\r\nmsg (\"The full range of verbs for 'wear' where there may be conflict is:</br>...[wear]</br>\")\r\nmsg (\"The full range of verbs for 'remove' where there may be conflict is:</br>...[remove]</br>\")\r\nwearables = NewList()\r\nforeach (o, AllObjects()) {\r\n  if (HasAttribute(o, \"wear\") or HasAttribute(o, \"remove\") or HasAttribute(o, \"puton\") or HasAttribute(o, \"takeoff\") or HasAttribute(o, \"don\") or HasAttribute(o, \"doff\")) {\r\n    if (not DoesInherit(o,\"wearable\")) {\r\n      list add (wearables, o)\r\n    }\r\n  }\r\n}\r\nif (ListCount(wearables) = 0) {\r\n  msg (\"No use of wear-related items was found.\")\r\n}\r\nelse {\r\n  msg (\"The following use of wear-related verbs on objects was found:\")\r\n  foreach (o, wearables) {\r\n    str = \"</br><b>\" + o.name + \"</b>\"\r\n    if (HasAttribute(o, \"alias\")) {\r\n      str = str + \" (alias: \" + o.alias + \")\"\r\n    }\r\n    msg (str)\r\n    if (HasAttribute(o, \"worn\")) {\r\n      msg (\"Object \" + o.name + \" has a <i>worn</i> attribute.\")\r\n    }\r\n    str = \"\"\r\n    if (HasAttribute(o, \"wear\")) {\r\n      str = str + \" (wear)\"\r\n    }\r\n    if (HasAttribute(o, \"puton\")) {\r\n      str = str + \" (put on)\"\r\n    }\r\n    if (HasAttribute(o, \"don\")) {\r\n      str = str + \" (take off)\"\r\n    }\r\n    if (HasAttribute(o, \"remove\")) {\r\n      str = str + \" (remove)\"\r\n    }\r\n    if (HasAttribute(o, \"takeoff\")) {\r\n      str = str + \" (take off)\"\r\n    }\r\n    if (HasAttribute(o, \"doff\")) {\r\n      str = str + \" (take off)\"\r\n    }\r\n    msg (\"Verbs used are: \" + str + \".\")\r\n  }\r\n  msg (\"</br><center>+ + + + +</center></br>\")\r\n} \r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>This is what we've currently got (mostly coded by DavyB, which is why it looks good when it prints out).</p>\n<p>Anyone see room for improvements?</p>\n<pre><code>msg (\"&lt;/br&gt;&lt;center&gt;+ + + + +&lt;/center&gt;&lt;/br&gt;\")\nmsg (\"&lt;b&gt;Wearables Conflict Report&lt;/b&gt;\")\nmsg (\"Your game has been analysed to identify uses of the &lt;i&gt;worn&lt;/i&gt; attribute and verbs that may have to be modified as a result of the introduction of the 'wearables' feature in Quest 5.7.2.&lt;/br&gt;\")\nmsg (\"The full range of verbs for 'wear' where there may be conflict is:&lt;/br&gt;...[wear]&lt;/br&gt;\")\nmsg (\"The full range of verbs for 'remove' where there may be conflict is:&lt;/br&gt;...[remove]&lt;/br&gt;\")\nwearables = NewList()\nforeach (o, AllObjects()) {\n  if (HasAttribute(o, \"wear\") or HasAttribute(o, \"remove\") or HasAttribute(o, \"puton\") or HasAttribute(o, \"takeoff\") or HasAttribute(o, \"don\") or HasAttribute(o, \"doff\")) {\n    if (not DoesInherit(o,\"wearable\")) {\n      list add (wearables, o)\n    }\n  }\n}\nif (ListCount(wearables) = 0) {\n  msg (\"No use of wear-related items was found.\")\n}\nelse {\n  msg (\"The following use of wear-related verbs on objects was found:\")\n  foreach (o, wearables) {\n    str = \"&lt;/br&gt;&lt;b&gt;\" + o.name + \"&lt;/b&gt;\"\n    if (HasAttribute(o, \"alias\")) {\n      str = str + \" (alias: \" + o.alias + \")\"\n    }\n    msg (str)\n    if (HasAttribute(o, \"worn\")) {\n      msg (\"Object \" + o.name + \" has a &lt;i&gt;worn&lt;/i&gt; attribute.\")\n    }\n    str = \"\"\n    if (HasAttribute(o, \"wear\")) {\n      str = str + \" (wear)\"\n    }\n    if (HasAttribute(o, \"puton\")) {\n      str = str + \" (put on)\"\n    }\n    if (HasAttribute(o, \"don\")) {\n      str = str + \" (take off)\"\n    }\n    if (HasAttribute(o, \"remove\")) {\n      str = str + \" (remove)\"\n    }\n    if (HasAttribute(o, \"takeoff\")) {\n      str = str + \" (take off)\"\n    }\n    if (HasAttribute(o, \"doff\")) {\n      str = str + \" (take off)\"\n    }\n    msg (\"Verbs used are: \" + str + \".\")\n  }\n  msg (\"&lt;/br&gt;&lt;center&gt;+ + + + +&lt;/center&gt;&lt;/br&gt;\")\n} \n</code></pre>\n\n",
      "PostDate": "2018-05-22T20:38:41.4376371Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2809c198-a53e-425f-96a8-d4b1a826c4dd",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've modified several games to use the new wearables feature, rather than overriding it with my own commands as before. This has been fine so far but on working on Woo Goes Further, I've run into two problems...or rather one problem and a query!\r\n\r\nThe problem is that if text is specified for the attempted remove of a worn item that can't be removed, it doesn't appear to be used (I've tried this with the latest Beta)?\r\n\r\nThe query is in relation to preventing a wearable item being removed. If say, the player is wearing a gas mask and can't take if off in some parts of the game, how should that be handled? What I've done as a workaround is to move the player to the nearest safe location. I know I can take off the gas mask and add code to put it back on again but I'd prefer the player to be stopped.\r\n\r\nThanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>I've modified several games to use the new wearables feature, rather than overriding it with my own commands as before. This has been fine so far but on working on Woo Goes Further, I've run into two problems...or rather one problem and a query!</p>\n<p>The problem is that if text is specified for the attempted remove of a worn item that can't be removed, it doesn't appear to be used (I've tried this with the latest Beta)?</p>\n<p>The query is in relation to preventing a wearable item being removed. If say, the player is wearing a gas mask and can't take if off in some parts of the game, how should that be handled? What I've done as a workaround is to move the player to the nearest safe location. I know I can take off the gas mask and add code to put it back on again but I'd prefer the player to be stopped.</p>\n<p>Thanks!</p>\n\n",
      "PostDate": "2018-06-23T06:58:32.2205066Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c7201acf-0641-4b75-a2ab-e7f8379b9ec3",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello, DavyB!\r\n\r\nThis works for me in a test game:\r\n\r\n**EDIT: This did not work.  I am crazy.**\r\n\r\n<details><summary>BAD CODE</summary>\r\n\r\n```\r\n<!--Saved by Quest 5.8.6737.23645-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"The Wedding Band\">\r\n    <gameid>567d1b62-d7ca-4884-a707-b17cb9079082</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n      <object name=\"wedding band\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"wearable\" />\r\n        <feature_wearable />\r\n        <removeable type=\"boolean\">false</removeable>\r\n        <removemsg>You can't take that off!</removemsg>\r\n        <feature_startscript />\r\n        <attr name=\"_initialise_\" type=\"script\">\r\n          WearGarment (this)\r\n        </attr>\r\n      </object>\r\n    </object>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n---\r\nYou are in a room.\r\n\r\n\\> i\r\nYou are carrying a wedding band (worn).\r\n\r\n\\> remove band\r\nYou cannot remove it!\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello, DavyB!</p>\n<p>This works for me in a test game:</p>\n<p><strong>EDIT: This did not work.  I am crazy.</strong></p>\n<details><summary>BAD CODE</summary>\n<pre><code>&lt;!--Saved by Quest 5.8.6737.23645--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"The Wedding Band\"&gt;\n    &lt;gameid&gt;567d1b62-d7ca-4884-a707-b17cb9079082&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n      &lt;object name=\"wedding band\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"wearable\" /&gt;\n        &lt;feature_wearable /&gt;\n        &lt;removeable type=\"boolean\"&gt;false&lt;/removeable&gt;\n        &lt;removemsg&gt;You can't take that off!&lt;/removemsg&gt;\n        &lt;feature_startscript /&gt;\n        &lt;attr name=\"_initialise_\" type=\"script\"&gt;\n          WearGarment (this)\n        &lt;/attr&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p>You are in a room.</p>\n<p>&gt; i<br>\nYou are carrying a wedding band (worn).</p>\n<p>&gt; remove band<br>\nYou cannot remove it!</p>\n</details>\n\n",
      "PostDate": "2018-06-23T08:05:19.7586437Z",
      "LastEditDate": "2018-06-23T08:15:34.8973365Z",
      "link": null
    },
    {
      "PostId": "8885fbb0-d92e-4da2-8de3-a41fd7d2d531",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh, wait...\r\n\r\nThat didn't work. I saw that the response ended with \"!\", and I assumed it was my custom response.\r\n\r\nHrmm...",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh, wait...</p>\n<p>That didn't work. I saw that the response ended with \"!\", and I assumed it was my custom response.</p>\n<p>Hrmm...</p>\n\n",
      "PostDate": "2018-06-23T08:07:53.9233908Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "87f19a1c-ee4d-4670-928d-8fdebc0de3ef",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah...\r\n\r\nWe have to set ```removeable``` to false and add an attribute named ```notremoveablemessage``` with our message as the string.\r\n\r\n```\r\n<!--Saved by Quest 5.8.6737.23645-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"The Wedding Band\">\r\n    <gameid>567d1b62-d7ca-4884-a707-b17cb9079082</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n      <object name=\"wedding band\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"wearable\" />\r\n        <feature_wearable />\r\n        <removeable type=\"boolean\">false</removeable>\r\n        <feature_startscript />\r\n        <attr name=\"_initialise_\" type=\"script\">\r\n          WearGarment (this)\r\n        </attr>\r\n        <notremoveablemessage>You can't take that off!</notremoveablemessage>\r\n      </object>\r\n    </object>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n---\r\nYou are in a room.\r\n\r\n\\> i\r\nYou are carrying a wedding band (worn).\r\n\r\n\\> remove band\r\nYou can't take that off!",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah...</p>\n<p>We have to set <code>removeable</code> to false and add an attribute named <code>notremoveablemessage</code> with our message as the string.</p>\n<pre><code>&lt;!--Saved by Quest 5.8.6737.23645--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"The Wedding Band\"&gt;\n    &lt;gameid&gt;567d1b62-d7ca-4884-a707-b17cb9079082&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n      &lt;object name=\"wedding band\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"wearable\" /&gt;\n        &lt;feature_wearable /&gt;\n        &lt;removeable type=\"boolean\"&gt;false&lt;/removeable&gt;\n        &lt;feature_startscript /&gt;\n        &lt;attr name=\"_initialise_\" type=\"script\"&gt;\n          WearGarment (this)\n        &lt;/attr&gt;\n        &lt;notremoveablemessage&gt;You can't take that off!&lt;/notremoveablemessage&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p>You are in a room.</p>\n<p>&gt; i<br>\nYou are carrying a wedding band (worn).</p>\n<p>&gt; remove band<br>\nYou can't take that off!</p>\n\n",
      "PostDate": "2018-06-23T08:14:21.954506Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "41b878dc-4180-431e-9fa1-f71fbed645cc",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@KV, that was a short holiday!\r\nThanks for the fix. I'll assume the Pixie will look at this in terms of the higher level user interface.",
      "EditableFormat": "markdown",
      "HTML": "<p>@KV, that was a short holiday!<br>\nThanks for the fix. I'll assume the Pixie will look at this in terms of the higher level user interface.</p>\n\n",
      "PostDate": "2018-06-23T08:39:35.8044303Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
