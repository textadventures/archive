{
  "Topic": {
    "TopicId": "cxnupyhnkk6_grsodzsa1a",
    "ForumId": "10",
    "Title": "Checking for Integer and between.",
    "LastUpdated": "2017-12-03T14:17:17.7204755Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "c602a71f-c1a1-4f92-93c1-4f1416e3ae87",
      "UserId": 17092,
      "Username": "GAGE HOLSTON",
      "AvatarUrl": "https://secure.gravatar.com/avatar/57b86a567d503acfa104a604accfa863?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In my text adventure, there is a gambling minigame where the min. bet is $1 and max. bet is $200 and the player needs to type in how much they want to bet, the variable I set up for that is player.wager.\r\nThe thing is, I don't know how to get the game to check if what they typed in WAS an integer in the first place or if it's between those two numbers. I'd also need to run a check to see if they have that much money in the first place.\r\n\r\nHow would I do all this?",
      "EditableFormat": "markdown",
      "HTML": "<p>In my text adventure, there is a gambling minigame where the min. bet is $1 and max. bet is $200 and the player needs to type in how much they want to bet, the variable I set up for that is player.wager.<br>\nThe thing is, I don't know how to get the game to check if what they typed in WAS an integer in the first place or if it's between those two numbers. I'd also need to run a check to see if they have that much money in the first place.</p>\n<p>How would I do all this?</p>\n\n",
      "PostDate": "2017-12-03T14:17:17.7204755Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "afdb10ab-ec6e-46d0-bb9e-e296307564f8",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi Gage, forgive me if this is not in script form, typing it on the fly. I'm assuming you've got a money variable as well that keeps track of how much money the player has eg. player.money.\r\n```\r\nIf player.wager<1 or player.wager>200 then \\\\print a message \"that is not a bet I can handle\" or similar script\r\nelse if \r\n\\\\check if the money the player has is less than the amount they want to bet\r\nplayer.money<player.wager then print \"you don't have the money to cover that bet\"\r\nelse \r\n\\\\take the money, reduce player.money by player.wager\r\nplayer.money=player.money-player.wager\r\nprint \"money taken. good luck\"\r\n```\r\nWhat might be better is having the maximum bet equalling what the player has to spend then checking against that.\r\n```\r\nbetlimit=player.money\r\nif betlimit>200 then betlimit=200\r\nprint \"You can bet between $1 and $\" + betlimit + \".\"\r\nGet Input\r\nif player.wager<1 or player.wager>betlimit then \\\\rest of script\r\n```\r\nAs I've said this is not in code so please forgive me. Hope it helps\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi Gage, forgive me if this is not in script form, typing it on the fly. I'm assuming you've got a money variable as well that keeps track of how much money the player has eg. player.money.</p>\n<pre><code>If player.wager&lt;1 or player.wager&gt;200 then \\\\print a message \"that is not a bet I can handle\" or similar script\nelse if \n\\\\check if the money the player has is less than the amount they want to bet\nplayer.money&lt;player.wager then print \"you don't have the money to cover that bet\"\nelse \n\\\\take the money, reduce player.money by player.wager\nplayer.money=player.money-player.wager\nprint \"money taken. good luck\"\n</code></pre>\n<p>What might be better is having the maximum bet equalling what the player has to spend then checking against that.</p>\n<pre><code>betlimit=player.money\nif betlimit&gt;200 then betlimit=200\nprint \"You can bet between $1 and $\" + betlimit + \".\"\nGet Input\nif player.wager&lt;1 or player.wager&gt;betlimit then \\\\rest of script\n</code></pre>\n<p>As I've said this is not in code so please forgive me. Hope it helps</p>\n\n",
      "PostDate": "2017-12-03T15:24:35.3163485Z",
      "LastEditDate": "2017-12-03T15:28:10.019998Z",
      "link": null
    },
    {
      "PostId": "bc1c32b4-42de-4587-832b-2c7d1bcec406",
      "UserId": 17092,
      "Username": "GAGE HOLSTON",
      "AvatarUrl": "https://secure.gravatar.com/avatar/57b86a567d503acfa104a604accfa863?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So I tried to put into code what you said, and I got this error when testing the \"betting outside the limits\"\r\nError running script: Error compiling expression 'player.wager < 1 or player.wager > 200': CompareElement: Operation 'LessThan' is not defined for types 'String' and 'Int32'\r\n\r\nTHEN, when I tried betting again, I got another error:\r\nError running script: Error compiling expression 'player.wager = 0': CompareElement: Operation 'Equal' is not defined for types 'String' and 'Int32'\r\n\r\nFor the record, my script for the event looks like this :\r\n\r\nif (player.wager = 0) {\r\n  msg (\"Minimum starting amount you can insert in the slot is $1.<br/>Maximum starting amount is $200.<br/>Please enter the amount you wish to start with.\")\r\n  get input {\r\n    player.wager = result\r\n    if (player.wager < 1 or player.wager > 200) {\r\n      msg (\"That isn't a valid amount. Please use your wallet again and enter the right amount.\")\r\n      player.wager = 0\r\n    }\r\n    else {\r\n      if (player.wager > player.cash) {\r\n        msg (\"You can't bet more than you have. Please use your wallet again and enter the right amount.\")\r\n        player.wager = 0\r\n      }\r\n      else {\r\n        msg (\"You put in {player.wager} bucks, and wonder if tonight will be your lucky night.\")\r\n      }\r\n    }\r\n  }\r\n}\r\nelse {\r\n  msg (\"You already put a bet in. To put in a different bet, push the \\\"CASH OUT\\\" button<br/>and use your wallet on the slot again.\")\r\n}\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>So I tried to put into code what you said, and I got this error when testing the \"betting outside the limits\"<br>\nError running script: Error compiling expression 'player.wager &lt; 1 or player.wager &gt; 200': CompareElement: Operation 'LessThan' is not defined for types 'String' and 'Int32'</p>\n<p>THEN, when I tried betting again, I got another error:<br>\nError running script: Error compiling expression 'player.wager = 0': CompareElement: Operation 'Equal' is not defined for types 'String' and 'Int32'</p>\n<p>For the record, my script for the event looks like this :</p>\n<p>if (player.wager = 0) {<br>\nmsg (\"Minimum starting amount you can insert in the slot is $1.<br>Maximum starting amount is $200.<br>Please enter the amount you wish to start with.\")<br>\nget input {<br>\nplayer.wager = result<br>\nif (player.wager &lt; 1 or player.wager &gt; 200) {<br>\nmsg (\"That isn't a valid amount. Please use your wallet again and enter the right amount.\")<br>\nplayer.wager = 0<br>\n}<br>\nelse {<br>\nif (player.wager &gt; player.cash) {<br>\nmsg (\"You can't bet more than you have. Please use your wallet again and enter the right amount.\")<br>\nplayer.wager = 0<br>\n}<br>\nelse {<br>\nmsg (\"You put in {player.wager} bucks, and wonder if tonight will be your lucky night.\")<br>\n}<br>\n}<br>\n}<br>\n}<br>\nelse {<br>\nmsg (\"You already put a bet in. To put in a different bet, push the \"CASH OUT\" button<br>and use your wallet on the slot again.\")<br>\n}</p>\n\n",
      "PostDate": "2017-12-03T16:48:21.9353659Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b163a9f2-b2f9-4d0b-87e6-31cbc62665c7",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\nMy code is a *little* different from yours, but it may help.\r\n\r\n## **EDITED (Twice)**\r\n\r\n**Bet command script**\r\n\r\n***Pattern:***\r\n```wager #text#;bet #text#```\r\n\r\n```\r\nfirsttime {\r\n  game.minbet = 1\r\n  game.maxbet = 100\r\n  player.wager = 0\r\n}\r\nif (not player.wager = 0) {\r\n  msg (\"You've already placed a wager.\")\r\n  return(false)\r\n}\r\nif (IsInt(text)) {\r\n  wager = ToInt(text)\r\n  if (wager<game.minbet) {\r\n    msg (\"You have to wager at least $\"+game.minbet+\".  Please try again.\")\r\n    return (false)\r\n  }\r\n  if (wager>game.pov.money) {\r\n    msg (\"You don't have that much money.  Please try again.\")\r\n    return (false)\r\n  }\r\n  if (wager>game.maxbet) {\r\n    msg (\"The maximum wager is $\"+game.maxbet+\".  Please try again.\")\r\n    return (false)\r\n  }\r\n  player.wager = wager\r\n  msg (\"You wager: $\"+player.wager+\".\")\r\n  game.pot = player.wager\r\n  game.pov.money = game.pov.money - player.wager\r\n}\r\nelse {\r\n  msg (\"You must enter a number.  Please try again.\")\r\n}\r\n```\r\n\r\n---\r\nYou can change ```game.minbet``` or ```game.maxbet``` whenever you want to change the stakes.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p>My code is a <em>little</em> different from yours, but it may help.</p>\n<h2><strong>EDITED (Twice)</strong></h2>\n<p><strong>Bet command script</strong></p>\n<p><strong><em>Pattern:</em></strong><br>\n<code>wager #text#;bet #text#</code></p>\n<pre><code>firsttime {\n  game.minbet = 1\n  game.maxbet = 100\n  player.wager = 0\n}\nif (not player.wager = 0) {\n  msg (\"You've already placed a wager.\")\n  return(false)\n}\nif (IsInt(text)) {\n  wager = ToInt(text)\n  if (wager&lt;game.minbet) {\n    msg (\"You have to wager at least $\"+game.minbet+\".  Please try again.\")\n    return (false)\n  }\n  if (wager&gt;game.pov.money) {\n    msg (\"You don't have that much money.  Please try again.\")\n    return (false)\n  }\n  if (wager&gt;game.maxbet) {\n    msg (\"The maximum wager is $\"+game.maxbet+\".  Please try again.\")\n    return (false)\n  }\n  player.wager = wager\n  msg (\"You wager: $\"+player.wager+\".\")\n  game.pot = player.wager\n  game.pov.money = game.pov.money - player.wager\n}\nelse {\n  msg (\"You must enter a number.  Please try again.\")\n}\n</code></pre>\n<hr>\n<p>You can change <code>game.minbet</code> or <code>game.maxbet</code> whenever you want to change the stakes.</p>\n\n",
      "PostDate": "2017-12-03T18:37:18.3459175Z",
      "LastEditDate": "2017-12-03T18:57:29.7242453Z",
      "link": null
    },
    {
      "PostId": "203762f1-0fc3-4351-87f6-0535f05b5c76",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Also, how does player.cash work with the wallet (if the wallet is, in fact, an object)?",
      "EditableFormat": "markdown",
      "HTML": "<p>Also, how does player.cash work with the wallet (if the wallet is, in fact, an object)?</p>\n\n",
      "PostDate": "2017-12-03T20:04:34.8203021Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "36c0d2c8-54c4-4a53-8186-53b79aa489ed",
      "UserId": 17092,
      "Username": "GAGE HOLSTON",
      "AvatarUrl": "https://secure.gravatar.com/avatar/57b86a567d503acfa104a604accfa863?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The script is working, thanks for your help K.V.\r\nAs for your other question:\r\nThe wallet is an undroppable inventory item that is added to the inventory at the beginning of the game. When you look at it, you get the following message:\r\n\r\nA fine, leather-bound wallet.\r\nYou currently have ${player.cash} in cash.\r\n\r\nThat's how I decided to set it up, because I found the new built in money feature they added too confusing.",
      "EditableFormat": "markdown",
      "HTML": "<p>The script is working, thanks for your help K.V.<br>\nAs for your other question:<br>\nThe wallet is an undroppable inventory item that is added to the inventory at the beginning of the game. When you look at it, you get the following message:</p>\n<p>A fine, leather-bound wallet.<br>\nYou currently have ${player.cash} in cash.</p>\n<p>That's how I decided to set it up, because I found the new built in money feature they added too confusing.</p>\n\n",
      "PostDate": "2017-12-03T20:50:33.1935723Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "89d1dc9b-528c-4ae5-9546-dd917fc7841c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the 'get input' Script/Function stores your input **AS A STRING VALUE** into the built-in 'result' Variable VARIABLE:\r\n\r\nresult = YOUR_INPUT_AS_A_STRING_VALUE\r\n\r\nso, if you want to work with numbers/amounts, you got to convert the string value into an 'int' or 'double' value:\r\n\r\n// you input: 7\r\n// result = \"7\" // the '7' is a 'string' Value, NOT an 'int' Value\r\n\r\ninput_as_integer_variable = ToInt (result)\r\n// input_as_integer_variable = 7 // the '7' is an 'int' Value now\r\n\r\n// or (working with doubles):\r\n\r\n// you input: 7.4\r\n// result = \"7.4\" // the '7.4' is a 'string' Value, NOT a 'double' Value\r\n\r\ninput_as_double_variable = ToDouble (result)\r\n// input_as_double_variable = 7.4 // the '7.4' is a 'double' Value now\r\n\r\nso to convert:\r\n\r\nToInt (xxx) // string to int\r\nToDouble (xxx) // string to double\r\nToString (xxx) // (int or double) to string\r\n\r\nand, to check the value type first (before you then convert, if it's the right type):\r\n\r\nIsNumeric (xxx) // is (int or double) ???\r\nIsInt (xxx) // is int ???\r\nIsDouble (xxx) // is double ???\r\n\r\nhere's an example:\r\n\r\n```\r\n<game name=\"example_game\">\r\n  <attr name=\"start\" type=\"script\">\r\n    do (age_object, \"age_script_attribute\")\r\n  </attr>\r\n</game>\r\n\r\n<object name\"room\">\r\n  <inherit name=\"editor_room\" />\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"age_integer_attribute\" type=\"int\">0</attr>\r\n</object>\r\n\r\n<object name=\"age_object\">\r\n  <inherit name=\"editor_object\" />\r\n  <attr name=\"minimum_human_age_range_integer_attribute\" type=\"int\">17</attr>\r\n  <attr name=\"maximum_human_age_in_year_2017_integer_attribute\" type=\"int\">120</attr>\r\n  <attr name=\"age_script_attribute\" type=\"script\">\r\n    <![CDATA[\r\n      msg (\"Age?\")\r\n      get input {\r\n        if (IsInt (result)) {\r\n          input_integer_variable = ToInt (result)\r\n          if (input_integer_variable > minimum_human_age_range_integer_attribute and input_integer_variable < maximum_human_age_in_year_2017_integer_attribute) {\r\n            player.age_integer_attribute = input_integer_variable\r\n            msg (\"Player Age: \" + player.age_integer_attribute)\r\n          } else {\r\n            msg (\"Wrong input, try again. Please type in an integer (non-decimal number) value between 18 and 120\")\r\n            do (age_object, \"age_script_attribute\")\r\n          }\r\n        } else {\r\n          msg (\"Wrong input, try again. Please type in an integer (non-decimal number) value\")\r\n          do (age_object, \"age_script_attribute\")\r\n        }\r\n      }\r\n    ]]>\r\n  </attr>\r\n</object>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>the 'get input' Script/Function stores your input <strong>AS A STRING VALUE</strong> into the built-in 'result' Variable VARIABLE:</p>\n<p>result = YOUR_INPUT_AS_A_STRING_VALUE</p>\n<p>so, if you want to work with numbers/amounts, you got to convert the string value into an 'int' or 'double' value:</p>\n<p>// you input: 7<br>\n// result = \"7\" // the '7' is a 'string' Value, NOT an 'int' Value</p>\n<p>input_as_integer_variable = ToInt (result)<br>\n// input_as_integer_variable = 7 // the '7' is an 'int' Value now</p>\n<p>// or (working with doubles):</p>\n<p>// you input: 7.4<br>\n// result = \"7.4\" // the '7.4' is a 'string' Value, NOT a 'double' Value</p>\n<p>input_as_double_variable = ToDouble (result)<br>\n// input_as_double_variable = 7.4 // the '7.4' is a 'double' Value now</p>\n<p>so to convert:</p>\n<p>ToInt (xxx) // string to int<br>\nToDouble (xxx) // string to double<br>\nToString (xxx) // (int or double) to string</p>\n<p>and, to check the value type first (before you then convert, if it's the right type):</p>\n<p>IsNumeric (xxx) // is (int or double) ???<br>\nIsInt (xxx) // is int ???<br>\nIsDouble (xxx) // is double ???</p>\n<p>here's an example:</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    do (age_object, \"age_script_attribute\")\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;object name\"room\"&gt;\n  &lt;inherit name=\"editor_room\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"age_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"age_object\"&gt;\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;attr name=\"minimum_human_age_range_integer_attribute\" type=\"int\"&gt;17&lt;/attr&gt;\n  &lt;attr name=\"maximum_human_age_in_year_2017_integer_attribute\" type=\"int\"&gt;120&lt;/attr&gt;\n  &lt;attr name=\"age_script_attribute\" type=\"script\"&gt;\n    &lt;![CDATA[\n      msg (\"Age?\")\n      get input {\n        if (IsInt (result)) {\n          input_integer_variable = ToInt (result)\n          if (input_integer_variable &gt; minimum_human_age_range_integer_attribute and input_integer_variable &lt; maximum_human_age_in_year_2017_integer_attribute) {\n            player.age_integer_attribute = input_integer_variable\n            msg (\"Player Age: \" + player.age_integer_attribute)\n          } else {\n            msg (\"Wrong input, try again. Please type in an integer (non-decimal number) value between 18 and 120\")\n            do (age_object, \"age_script_attribute\")\n          }\n        } else {\n          msg (\"Wrong input, try again. Please type in an integer (non-decimal number) value\")\n          do (age_object, \"age_script_attribute\")\n        }\n      }\n    ]]&gt;\n  &lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n\n",
      "PostDate": "2017-12-04T00:21:51.3071826Z",
      "LastEditDate": "2017-12-04T00:31:31.4539143Z",
      "link": null
    }
  ]
}
