{
  "Topic": {
    "TopicId": "5226",
    "ForumId": "10",
    "Title": "replicating command patterns for a function",
    "LastUpdated": "2015-05-13T20:02:34+01:00",
    "ReplyCount": 8
  },
  "Posts": [
    {
      "PostId": "36013",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "So I was attempting to create a function or script that uses a pattern the way commands do, however I'm having trouble figuring out how to handle the different parts of the input.\n\nFor example, the command pattern for something like 'tell #object# #text#' basically uses the 'tell' to specify the command and then checks for an object name and saves whatever text comes after.\n\nI'm wondering if it's possible to set up a script or function that does something similar?",
      "EditableFormat": "bbcode",
      "HTML": "So I was attempting to create a function or script that uses a pattern the way commands do, however I'm having trouble figuring out how to handle the different parts of the input.<br/><br/>For example, the command pattern for something like 'tell #object# #text#' basically uses the 'tell' to specify the command and then checks for an object name and saves whatever text comes after.<br/><br/>I'm wondering if it's possible to set up a script or function that does something similar?",
      "PostDate": "2015-05-13T16:50:16+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36016",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "as far as I know, there's only two ways of GETTING INPUT from the person playing the game:\n\nthe 'get input' Script and the 'Command' Element\n\nbut otherwise...\n\n----------\n\nthis is a bit beyond me, as much of your questions are about, laughs, but I think you need to use:\n\n'regex' syntax expressions, and~or JS within them too , or just JS by itself.\n\nAlso, maybe you need to use~work with 'delegates' too:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/delegate.html\">http://docs.textadventures.co.uk/quest/ ... egate.html</a><!-- m -->\n\n---------\n\nJS:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/tutorial/using_javascript.html\">http://docs.textadventures.co.uk/quest/ ... cript.html</a><!-- m -->\n\nRegex:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/pattern_matching.html\">http://docs.textadventures.co.uk/quest/ ... ching.html</a><!-- m -->\n\nCommands:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/command.html\">http://docs.textadventures.co.uk/quest/ ... mmand.html</a><!-- m --> (read the 'pattern' section, says something about ~ 'simple syntax vs regex syntax'\n\nFunctions:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/function.html\">http://docs.textadventures.co.uk/quest/ ... ction.html</a><!-- m -->\n\n----------\n\nhopefully, something in this post is of help... laughs.",
      "EditableFormat": "bbcode",
      "HTML": "as far as I know, there's only two ways of GETTING INPUT from the person playing the game:<br/><br/>the 'get input' Script and the 'Command' Element<br/><br/>but otherwise...<br/><br/>----------<br/><br/>this is a bit beyond me, as much of your questions are about, laughs, but I think you need to use:<br/><br/>'regex' syntax expressions, and~or JS within them too , or just JS by itself.<br/><br/>Also, maybe you need to use~work with 'delegates' too:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/delegate.html\">http://docs.textadventures.co.uk/quest/ ... egate.html</a><!-- m --><br/><br/>---------<br/><br/>JS:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/tutorial/using_javascript.html\">http://docs.textadventures.co.uk/quest/ ... cript.html</a><!-- m --><br/><br/>Regex:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/pattern_matching.html\">http://docs.textadventures.co.uk/quest/ ... ching.html</a><!-- m --><br/><br/>Commands:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/command.html\">http://docs.textadventures.co.uk/quest/ ... mmand.html</a><!-- m --> (read the 'pattern' section, says something about ~ 'simple syntax vs regex syntax'<br/><br/>Functions:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/function.html\">http://docs.textadventures.co.uk/quest/ ... ction.html</a><!-- m --><br/><br/>----------<br/><br/>hopefully, something in this post is of help... laughs.",
      "PostDate": "2015-05-13T17:10:29+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36019",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "When you say &quot;something similar&quot;, do you mean takes a string and breaks it up into (say) the object and text pieces? If so, then you can use the Populate function to break a string apart. (This is the function the core code uses to parse commands.)\n\nHere is an example:\n\n[code:1fylq2lu]      pattern = &quot;^tell (?&lt;object&gt;&#46;*?) (?&lt;text&gt;&#46;*?)$&quot;\n      command = &quot;tell apple hello&quot;\n      name = &quot;foo&quot;\n      if (IsRegexMatch(pattern, command, name)) {\n\t      varlist = Populate(pattern, command, name)\n\t      msg (varlist)\n\t  } else {\n\t  \tmsg (&quot;Does not match&quot;)\n\t  }[/code:1fylq2lu]\nNote it uses a real regex string, not the &quot;#object#&quot; stuff. As coded, this will print out:\n\n[quote:1fylq2lu]Dictionary: object = apple;text = hello[/quote:1fylq2lu]\n\nIt has parsed the regex match and extracted the values into a dictionary. I put the &quot;IsRegexMatch&quot; check ahead of it, because if the command doesn't actually match the pattern, then the game just errs out, which is not desirable generally. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> So you really need to be sure the string matches before calling Populate.\n\nThe &quot;name&quot; part is actually a cache ID of sorts, if I understand it correctly. I believe what happens is that if you pass the same value to Populate that you passed to IsRegexMatch, then it will reuse the internal regex setup it used for the IsRegexMatch (so a sort of optimization).\n\nIf that's not what you were looking for, then if you could specify what part of the command line parsing you'd like in a script, I can try again. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nPopulate doc: <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/populate.html\">http://docs.textadventures.co.uk/quest/ ... ulate.html</a><!-- m -->",
      "EditableFormat": "bbcode",
      "HTML": "When you say &quot;something similar&quot;, do you mean takes a string and breaks it up into (say) the object and text pieces? If so, then you can use the Populate function to break a string apart. (This is the function the core code uses to parse commands.)<br/><br/>Here is an example:<br/><br/><pre><code>      pattern = &quot;^tell (?&lt;object&gt;&#46;*?) (?&lt;text&gt;&#46;*?)$&quot;<br/>      command = &quot;tell apple hello&quot;<br/>      name = &quot;foo&quot;<br/>      if (IsRegexMatch(pattern, command, name)) {<br/>\t      varlist = Populate(pattern, command, name)<br/>\t      msg (varlist)<br/>\t  } else {<br/>\t  \tmsg (&quot;Does not match&quot;)<br/>\t  }</code></pre><br/>Note it uses a real regex string, not the &quot;#object#&quot; stuff. As coded, this will print out:<br/><br/><blockquote><p>Dictionary: object = apple;text = hello</p></blockquote><br/><br/>It has parsed the regex match and extracted the values into a dictionary. I put the &quot;IsRegexMatch&quot; check ahead of it, because if the command doesn't actually match the pattern, then the game just errs out, which is not desirable generally. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> So you really need to be sure the string matches before calling Populate.<br/><br/>The &quot;name&quot; part is actually a cache ID of sorts, if I understand it correctly. I believe what happens is that if you pass the same value to Populate that you passed to IsRegexMatch, then it will reuse the internal regex setup it used for the IsRegexMatch (so a sort of optimization).<br/><br/>If that's not what you were looking for, then if you could specify what part of the command line parsing you'd like in a script, I can try again. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>Populate doc: <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/populate.html\">http://docs.textadventures.co.uk/quest/ ... ulate.html</a><!-- m -->",
      "PostDate": "2015-05-13T18:42:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36021",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "Yea I've looked over those previously. The Regex matching is decent but its far too forgiving. ie: looking for a Regex match for 'option1' allows you to literally type &quot;askfjld;-=34@[b:2z4c3j26]option1[/b:2z4c3j26]fkjkjl43#!$^%$7&quot; and still be considered a valid match. Granted it's pretty unlikely for that much gibberish to contain a valid match on accident, but still, I'd like to require a bit more accuracy.\n\nThe command pattern syntax is good, but unfortunately as far as I can figure out it seems to only be valid in context of an actual command object. Which is why I'm trying to look into how one would code something similar to the command pattern for handling input.",
      "EditableFormat": "bbcode",
      "HTML": "Yea I've looked over those previously. The Regex matching is decent but its far too forgiving. ie: looking for a Regex match for 'option1' allows you to literally type &quot;askfjld;-=34@<span style=\"font-weight:bold;\">option1</span>fkjkjl43#!$^%$7&quot; and still be considered a valid match. Granted it's pretty unlikely for that much gibberish to contain a valid match on accident, but still, I'd like to require a bit more accuracy.<br/><br/>The command pattern syntax is good, but unfortunately as far as I can figure out it seems to only be valid in context of an actual command object. Which is why I'm trying to look into how one would code something similar to the command pattern for handling input.",
      "PostDate": "2015-05-13T19:02:30+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36022",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "You just need a better, more exact regex pattern. See these:\n\n[code:2wycuvkt]msg(IsRegexMatch(&quot;option1&quot;, &quot;askfjld;-=34@option1fkjkjl43#!$^%$7&quot;))[/code:2wycuvkt] \nTrue\nSo... bad.\n\n[code:2wycuvkt]msg(IsRegexMatch(&quot;^option1$&quot;, &quot; ad  option1xadf jiaf&quot;)) [/code:2wycuvkt]\nFalse\n'^' says &quot;match beginning of line&quot; and &quot;$&quot; says &quot;match end of line&quot;. So it doesn't match your excessive string because it doesn't see the sequence &lt;beginning of line&gt;option1&lt;end of line&gt;.\n\nAnd, of course, the desired case\n\n[code:2wycuvkt]msg(IsRegexMatch(&quot;^option1$&quot;, &quot;option1&quot;))[/code:2wycuvkt]\nTrue\n\nIf you look into regular expressions, you'll see why Alex used them. They're fantastic for matching varying string patterns to whatever level of preciseness you wish. It all depends on the pattern you use to match against.",
      "EditableFormat": "bbcode",
      "HTML": "You just need a better, more exact regex pattern. See these:<br/><br/><pre><code>msg(IsRegexMatch(&quot;option1&quot;, &quot;askfjld;-=34@option1fkjkjl43#!$^%$7&quot;))</code></pre> <br/>True<br/>So... bad.<br/><br/><pre><code>msg(IsRegexMatch(&quot;^option1$&quot;, &quot; ad  option1xadf jiaf&quot;)) </code></pre><br/>False<br/>'^' says &quot;match beginning of line&quot; and &quot;$&quot; says &quot;match end of line&quot;. So it doesn't match your excessive string because it doesn't see the sequence &lt;beginning of line&gt;option1&lt;end of line&gt;.<br/><br/>And, of course, the desired case<br/><br/><pre><code>msg(IsRegexMatch(&quot;^option1$&quot;, &quot;option1&quot;))</code></pre><br/>True<br/><br/>If you look into regular expressions, you'll see why Alex used them. They're fantastic for matching varying string patterns to whatever level of preciseness you wish. It all depends on the pattern you use to match against.",
      "PostDate": "2015-05-13T19:15:37+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36023",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "First off sorry I missed your original post Jay, I must have been typing it up just after you posted and just double checked my post at the bottom of the thread after posting and somehow completely missed yours.\n\nThat info about the command patterns is interesting and I'm sure I'll be able to find a use for that down the road. I was actually looking more for how to imitate the pattern matching the command objects use outside of an actual command.\n\nYour examples in the second one should be just about what I'm looking for, if not exactly what I was trying to get. I was having problems locating the syntax for that sorta thing. Is there a page or listing that references these in one place that I can refer to in the future?",
      "EditableFormat": "bbcode",
      "HTML": "First off sorry I missed your original post Jay, I must have been typing it up just after you posted and just double checked my post at the bottom of the thread after posting and somehow completely missed yours.<br/><br/>That info about the command patterns is interesting and I'm sure I'll be able to find a use for that down the road. I was actually looking more for how to imitate the pattern matching the command objects use outside of an actual command.<br/><br/>Your examples in the second one should be just about what I'm looking for, if not exactly what I was trying to get. I was having problems locating the syntax for that sorta thing. Is there a page or listing that references these in one place that I can refer to in the future?",
      "PostDate": "2015-05-13T19:27:43+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36024",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I did a quick google search, and nothing jumped out as being &quot;here they are in a nutshell&quot;. But this might help get started.\n\n<!-- m --><a class=\"postlink\" href=\"http://www.andymatthews.net/read/2009/10/22/A-beginners-guide-to-regular-expressions\">http://www.andymatthews.net/read/2009/1 ... xpressions</a><!-- m -->\n\nThis has some as well:\n\n<!-- m --><a class=\"postlink\" href=\"http://www.cheatography.com/davechild/cheat-sheets/regular-expressions/\">http://www.cheatography.com/davechild/c ... pressions/</a><!-- m -->",
      "EditableFormat": "bbcode",
      "HTML": "I did a quick google search, and nothing jumped out as being &quot;here they are in a nutshell&quot;. But this might help get started.<br/><br/><!-- m --><a class=\"postlink\" href=\"http://www.andymatthews.net/read/2009/10/22/A-beginners-guide-to-regular-expressions\">http://www.andymatthews.net/read/2009/1 ... xpressions</a><!-- m --><br/><br/>This has some as well:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://www.cheatography.com/davechild/cheat-sheets/regular-expressions/\">http://www.cheatography.com/davechild/c ... pressions/</a><!-- m -->",
      "PostDate": "2015-05-13T19:34:17+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36025",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "thanks for the info, I'll take a look at those.\n\nEDIT: yea this is more or less exactly the sort of information I was looking for, I was having the issue of not knowing what I needed to search for to find this.",
      "EditableFormat": "bbcode",
      "HTML": "thanks for the info, I'll take a look at those.<br/><br/>EDIT: yea this is more or less exactly the sort of information I was looking for, I was having the issue of not knowing what I needed to search for to find this.",
      "PostDate": "2015-05-13T19:34:44+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "36026",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Here's one more. This has better (as in actual) examples:\n\n<!-- m --><a class=\"postlink\" href=\"https://www.icewarp.com/support/online_help/203030104.htm\">https://www.icewarp.com/support/online_ ... 030104.htm</a><!-- m -->",
      "EditableFormat": "bbcode",
      "HTML": "Here's one more. This has better (as in actual) examples:<br/><br/><!-- m --><a class=\"postlink\" href=\"https://www.icewarp.com/support/online_help/203030104.htm\">https://www.icewarp.com/support/online_ ... 030104.htm</a><!-- m -->",
      "PostDate": "2015-05-13T20:02:34+01:00",
      "LastEditDate": null
    }
  ]
}
