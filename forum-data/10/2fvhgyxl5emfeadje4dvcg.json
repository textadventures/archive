{
  "Topic": {
    "TopicId": "2fvhgyxl5emfeadje4dvcg",
    "ForumId": "10",
    "Title": "Testing for an attribute and printing a message if it passes",
    "LastUpdated": "2020-03-02T06:15:34.7682255Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "c45ea8a0-b5b6-4144-b1cb-a01a4cc807e3",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm trying to get this to work in the room description\r\nIf Mary has a Corolla car then I want the message \"She has a great car\" printed \r\n\r\nI tried this code which did not work:\r\n{if Mary.car=\"Corolla\":She has a great car}\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm trying to get this to work in the room description<br>\nIf Mary has a Corolla car then I want the message \"She has a great car\" printed</p>\n<p>I tried this code which did not work:<br>\n{if Mary.car=\"Corolla\":She has a great car}</p>\n\n",
      "PostDate": "2020-03-02T06:15:34.7682255Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "248aa5a2-203e-4b54-93be-f3438d820160",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have since found that this works:\r\n{if Mary.car=Corolla:She has a great car}\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I have since found that this works:<br>\n{if Mary.car=Corolla:She has a great car}</p>\n\n",
      "PostDate": "2020-03-02T06:31:14.804809Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a1ab5ca2-c863-4a14-987e-351b553baafe",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah, the text processor `if` is really weird.\r\n\r\nThe left hand side of the expression is either `object.attribute` or the name of an attribute of the `game` element. If this attribute is an object, it's replaced by its name.\r\nFor `<`, `>`, `<=`, or `>=`, both the left hand side and right hand side are converted to doubles and then compared. For `=` and `<>`, both sides are treated as strings. If none of these operators are found, the expression is treated as a boolean attribute (possibly preceded by the word `not`) .\r\n\r\nAlso beware of using `this`. An expression like `{if player.catchphrase=this is Sparta!:some response}` will most likely fail - because the text processor does a search-and-replace, changing `this` to the name of the current object (or whatever object is in the attribute `game.text_processor_this`) before it compares the values.\r\n\r\nI usually prefer to use `either`, because it at least follows the same rules as the rest of Quest.\r\nThis will work fine:\r\n```\r\n{either Mary.car=\"Corolla\":She has a great car}\r\n```\r\n(within `{either`, you can use \"this\" to refer to the object stored in `game.text_processor_this`, but unlike `{if` it only behaves like that if `this` is being used as the name of an object; not if it appears in an attribute name or in a string)",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah, the text processor <code>if</code> is really weird.</p>\n<p>The left hand side of the expression is either <code>object.attribute</code> or the name of an attribute of the <code>game</code> element. If this attribute is an object, it's replaced by its name.<br>\nFor <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, or <code>&gt;=</code>, both the left hand side and right hand side are converted to doubles and then compared. For <code>=</code> and <code>&lt;&gt;</code>, both sides are treated as strings. If none of these operators are found, the expression is treated as a boolean attribute (possibly preceded by the word <code>not</code>) .</p>\n<p>Also beware of using <code>this</code>. An expression like <code>{if player.catchphrase=this is Sparta!:some response}</code> will most likely fail - because the text processor does a search-and-replace, changing <code>this</code> to the name of the current object (or whatever object is in the attribute <code>game.text_processor_this</code>) before it compares the values.</p>\n<p>I usually prefer to use <code>either</code>, because it at least follows the same rules as the rest of Quest.<br>\nThis will work fine:</p>\n<pre><code>{either Mary.car=\"Corolla\":She has a great car}\n</code></pre>\n<p>(within <code>{either</code>, you can use \"this\" to refer to the object stored in <code>game.text_processor_this</code>, but unlike <code>{if</code> it only behaves like that if <code>this</code> is being used as the name of an object; not if it appears in an attribute name or in a string)</p>\n\n",
      "PostDate": "2020-03-02T09:49:45.6746794Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b87134fc-99d8-4508-bfcb-8289834a0f97",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi mrangel.\r\n\r\nthe command \"either\" is a strange one as it suggests that both conditions can be correct (like a OR statement). Good to know that it can be used in Quest thanks.\r\n\r\nI'm getting into the habit of reducing object names to one or two words and having the descriptive name as a prefix.\r\nSo I'm thinking that if \"this is Spartal\" is used in the prefix then there should be no problem with using \"this\" word \"this\"",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi mrangel.</p>\n<p>the command \"either\" is a strange one as it suggests that both conditions can be correct (like a OR statement). Good to know that it can be used in Quest thanks.</p>\n<p>I'm getting into the habit of reducing object names to one or two words and having the descriptive name as a prefix.<br>\nSo I'm thinking that if \"this is Spartal\" is used in the prefix then there should be no problem with using \"this\" word \"this\"</p>\n\n",
      "PostDate": "2020-03-03T00:55:22.7533116Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3818e0fd-f3cd-449e-bb31-9f8f7b6ff5c4",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I'm getting into the habit of reducing object names to one or two words and having the descriptive name as a prefix.\r\n\r\nGenerally, you want to put an object's descriptive name in its *alias*.\r\nThe *alias* is the name the player sees, the *name* is only used in your code.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I'm getting into the habit of reducing object names to one or two words and having the descriptive name as a prefix.</p>\n</blockquote>\n<p>Generally, you want to put an object's descriptive name in its <em>alias</em>.<br>\nThe <em>alias</em> is the name the player sees, the <em>name</em> is only used in your code.</p>\n\n",
      "PostDate": "2020-03-03T08:44:25.468787Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
