{
  "Topic": {
    "TopicId": "zxu85jeej0ixvwjreghk1a",
    "ForumId": "10",
    "Title": "Best Practices in Coding",
    "LastUpdated": "2017-01-03T15:07:01.7274997Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "f356e755-7329-4ae5-9e81-cc074fb6f88e",
      "UserId": 284501,
      "Username": "WrightWorth",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f367d06f404af25d42f320d426e92df8?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've just finished the tutorial in Quest and I'm quite excited to begin crafting my game. But I'm afraid I'm starting too ambitiously. A major part of the game I'm planning involves an elevator. I've searched through the forums and found that Jay already has a code sample for elevator action: https://textadventures.co.uk/forum/samples/topic/3212/elevator-action. He mentions that he has \"learned a lot\" writing the code. Meaning, even he, a more experienced coder found the task a bit of a challenge--more so, if I, a beginner, would dare to do it. That said, I don't want to borrow Jay's code sample because I feel like it wouldn't be mine. I feel like I have to earn it first by studying code and then attempt to build an elevator myself. \r\n\r\nI need some help and the kind of help I'm asking for is some direction because I'm really in the dark here. Ideally, I was hoping for some coding tutorial as comprehensive as the Quest tutorial (haha) but after searching the forums, there is none. So, I'd appreciate it if people could suggest paths I could take after having taken the tutorial.  I learn by doing so the \"functions\", \"types\", and \"elements\" tabs in the Quest documentation are all Greek to me. Code samples would be great if only I knew where to start because there are so many. It would be helpful if for example, you could reply a list of links which point to the best practices in coding that would not only help me get a feel of coding language but preferably, something that would train me in building an elevator as Jay did. I'm also asking for advice if I should sign up for coding websites like CodeAcademy so I could learn more extensively. I'm an avid adventure game fan and I feel like I could develop games like The Longest Journey and Life Is Strange someday but first I have to start by building this elevator for my first textadventure. Any help and moral support would be awesome. :)",
      "EditableFormat": "markdown",
      "HTML": "<p>I've just finished the tutorial in Quest and I'm quite excited to begin crafting my game. But I'm afraid I'm starting too ambitiously. A major part of the game I'm planning involves an elevator. I've searched through the forums and found that Jay already has a code sample for elevator action: https://textadventures.co.uk/forum/samples/topic/3212/elevator-action. He mentions that he has \"learned a lot\" writing the code. Meaning, even he, a more experienced coder found the task a bit of a challenge--more so, if I, a beginner, would dare to do it. That said, I don't want to borrow Jay's code sample because I feel like it wouldn't be mine. I feel like I have to earn it first by studying code and then attempt to build an elevator myself.</p>\n<p>I need some help and the kind of help I'm asking for is some direction because I'm really in the dark here. Ideally, I was hoping for some coding tutorial as comprehensive as the Quest tutorial (haha) but after searching the forums, there is none. So, I'd appreciate it if people could suggest paths I could take after having taken the tutorial.  I learn by doing so the \"functions\", \"types\", and \"elements\" tabs in the Quest documentation are all Greek to me. Code samples would be great if only I knew where to start because there are so many. It would be helpful if for example, you could reply a list of links which point to the best practices in coding that would not only help me get a feel of coding language but preferably, something that would train me in building an elevator as Jay did. I'm also asking for advice if I should sign up for coding websites like CodeAcademy so I could learn more extensively. I'm an avid adventure game fan and I feel like I could develop games like The Longest Journey and Life Is Strange someday but first I have to start by building this elevator for my first textadventure. Any help and moral support would be awesome. :)</p>\n\n",
      "PostDate": "2017-01-03T15:07:01.7274997Z",
      "LastEditDate": null
    },
    {
      "PostId": "0a16c86c-effc-42a6-a7b5-809e17181de2",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Quest uses its own coding language, so websites like CodeAcademy may not be so useful (and Jay was presumably talking about learning the ideosyncracies of Quest).\r\n\r\nI have a large number of tutorials, most of which are for coding:\r\nhttps://github.com/ThePix/quest/wiki\r\n\r\nThis one, for example, takes you though building a very simple lift system:\r\nhttps://github.com/ThePix/quest/wiki/Transit-System",
      "EditableFormat": "markdown",
      "HTML": "<p>Quest uses its own coding language, so websites like CodeAcademy may not be so useful (and Jay was presumably talking about learning the ideosyncracies of Quest).</p>\n<p>I have a large number of tutorials, most of which are for coding:<br>\nhttps://github.com/ThePix/quest/wiki</p>\n<p>This one, for example, takes you though building a very simple lift system:<br>\nhttps://github.com/ThePix/quest/wiki/Transit-System</p>\n\n",
      "PostDate": "2017-01-03T15:26:44.9379872Z",
      "LastEditDate": null
    },
    {
      "PostId": "28c7ec3b-8dfb-4de9-80ee-d4cafeb17eb5",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Out of sheer curiosity I looked up the two games you dream of developing, and if you can do either of those with Quest, then you're nothing short of a miracle worker, let alone a good coder.",
      "EditableFormat": "markdown",
      "HTML": "<p>Out of sheer curiosity I looked up the two games you dream of developing, and if you can do either of those with Quest, then you're nothing short of a miracle worker, let alone a good coder.</p>\n\n",
      "PostDate": "2017-01-03T18:03:01.8880529Z",
      "LastEditDate": "2017-01-03T18:04:07.1981279Z"
    },
    {
      "PostId": "5797be09-c460-433d-9b32-3a7035a4986e",
      "UserId": 284501,
      "Username": "WrightWorth",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f367d06f404af25d42f320d426e92df8?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you Pixie for the tutorials. I think they're exactly what I'm looking for. :D \r\nAnd OurJud, of course I don't hope to make those kinds of games with Quest because in the first place these are obviously not textadventures anymore and already incorporate graphics. What I meant to say is that Quest is a way for me to begin exploring my aspirations in developing games. The most important thing for me in any video game is the story and Quest can help me develop my skills for storytelling.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you Pixie for the tutorials. I think they're exactly what I'm looking for. :D<br>\nAnd OurJud, of course I don't hope to make those kinds of games with Quest because in the first place these are obviously not textadventures anymore and already incorporate graphics. What I meant to say is that Quest is a way for me to begin exploring my aspirations in developing games. The most important thing for me in any video game is the story and Quest can help me develop my skills for storytelling.</p>\n\n",
      "PostDate": "2017-01-04T17:16:37.975333Z",
      "LastEditDate": null
    },
    {
      "PostId": "eea00e06-2e8d-4c88-b856-df238ced14d2",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah, fair enough.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah, fair enough.</p>\n\n",
      "PostDate": "2017-01-04T20:28:51.5654983Z",
      "LastEditDate": null
    },
    {
      "PostId": "99177018-b35e-4d9d-819d-0c28eb2ddef1",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/28lV6nMb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I know this doesn't exactly pertain to your question but it may help you to develop bigger games with Quest and trust me, it's a LIFE SAVER. \r\n\r\nOpen a Word document...or Excel. Whatever you're most comfortable with.\r\n\r\nAfter that, make a list of every single variable as it appears in your game. It'll help you keep track of everything so much easier. Trust me. For big games you'll need it. \r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>I know this doesn't exactly pertain to your question but it may help you to develop bigger games with Quest and trust me, it's a LIFE SAVER.</p>\n<p>Open a Word document...or Excel. Whatever you're most comfortable with.</p>\n<p>After that, make a list of every single variable as it appears in your game. It'll help you keep track of everything so much easier. Trust me. For big games you'll need it.</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2017-01-05T06:26:00.6913122Z",
      "LastEditDate": null
    },
    {
      "PostId": "310d5b85-ff4f-407a-b632-7236b256dcd6",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I myself found quest 4 years ago, having zero coding knowledge, but I've been able to learn coding all thanks to quest, and am taking programming classes now at college (and was amazingly very well prepared for them, all from/thanks to quest! Well, quest helped for the first/basic programming classes, as the higher ones are about stuff you won't/can't learn from quest and most basic coding sites, as higher programming classes go into coding design / data structures, Assembly: low-level languages, and the computer archetecture: the circuitry design, logic gates and the different physical components/modules built of-from them. Though Jay, Jaynabonne, is a user/moderator here, who has lots of programming exerptise, was gracious to help me with assembly, so I was able to get help on it indirectly from quest as well. There's some really knowledgeable coding users here, as resources as well as the quest software itself. Pertex and Sgreig are also extremely knowledgeable, and of course Pixie, and Alex himself as well, though he's moving on now from his Quest endeaver/development. We also have some very knowledgeable users too, some stay, but some leave, but quest has picked up a lot recently, so hopefully we'll get more experienced coders as users).\r\n\r\nthis is what I'd recommend:\r\n\r\n0. download notepad++ (a really great free editor for coding: reading, writing, editing, troubleshooting, and understanding code, as it color codes the code, as well as having many coding languages, and lots of great editing features/capabilties that I still need to learn, lol):\r\n\r\nhttps://notepad-plus-plus.org/\r\n\r\na 'text editor' software (examples of 'text editor' software: notepad, wordpad, Apple: text editor, etc --- BUT NOT THESE FOR CODING as they're just for basic normal writing/'ms word' editing. Notepad++ is an example of a text editor for coding editing or just even just basic normal writing/'ms word' editing as it has really useful features/capabilities, but it's much more useful for coding) is good for reading/writing/troubleshooting code, but it's not an IDE/SDK that let's you compile, link, and test/run code. if you're interested in being a programmer, you need IDEs/SDKs.\r\n\r\nhttps://en.wikipedia.org/wiki/Integrated_development_environment\r\nhttps://en.wikipedia.org/wiki/Software_development_kit\r\n\r\nsome of them (free ones, though some of the sites make it difficult/confusing to get to the free versions... of course... grr, and also got to make sure you're going/getting to/the legit software of them):\r\n\r\n(these do use up a pretty lot of space/memory, be warned)\r\n\r\nMS Visual Studio (C++)\r\n?Python SDK/IDE? (forgot it's exact name)\r\nJDK (Java)\r\nNetbeans (Java)\r\nEclipse (???)\r\n\r\nand here's a very good site for various software (including some of the IDEs/SDKs: see 'Developer tools' and 'Runtimes' sections/categories):\r\n\r\nhttps://ninite.com/\r\n\r\n-------\r\n\r\nand for general coding, codecademy.com, is good for beginners and up. There's also 'udemy'(.com, I preseme) I think, but I've not tried it, and I think it is for more advanced coders... but not sure, and there's tons more sites, including infinite coding forums you can use.\r\n\r\n----------\r\n\r\n1. learning the basics of (using) quest (its GUI/Editor and all of its basic capabilities) and getting a taste into the mindset of coding / game making (\"if\" usage), which will take quite a while to slowly train your brain in, as it's not natural thinking.\r\n\r\ntutorial ( http://docs.textadventures.co.uk/quest/tutorial/ )\r\n\r\ntry to do everything in the tutorial, ask for help if you need it (most people including myself have/had trouble with the orc/saying/bob/defibrilator parts --- these are definitetely the hardest parts of the tutorial --- frankly they shouldn't be in the tutorial as they quite advanced compared to the rest of the basic stuff that is the tutorial)\r\n\r\n2. unfortunately, actually trying to do your own stuff yourself for/in your own game, is very different from the tutorial giving you specific things with step by step instructions, on doing them. Also, you're likely finding yourself overwhelmed, as while doing the tutorial steps by steps made sense, you're now on your own, and are confusing and not understanding truly all the concepts and terms that you thought made sense through the tutorial, you're overwhelmed, confused, and lost. This is where I myself found myself. There's a huge gap/jump from the tutorial to trying to do your own stuff yourself for your own game.\r\n\r\nXanMag has tried to help bridge this huge gap/jump, via his tutorial 2 'templates and tutorial' demo game, which helps guide you through, step by step, a lot of the basic things you want to do in a game. So, I highly recommend this after doing the tutorial:\r\n\r\nhttp://textadventures.co.uk/forum/games/topic/5940/quest-tutorials-and-templates-published\r\n\r\n3. however, to truly make a game, you need to learn the \"bread and butter\" of game making / coding: Attributes and the 'if' Script usages, as these, especially, when used together, let's you do 90% of everything you want to do in a game. The basics of using quest, only enables so much. Learning Attributes usage and the 'if' Script usage, opens up 90% of the game making possibilities for you, indeed these are... \"THE TWO SUPER SCRIPTS\". You can try using my guide or there's Pixie's guides on trying to learn this stuff.\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5559/attributes-and-if-script-guide-by-hk\r\n\r\n4. next or along with #3 or instead of (before) #3, I'd recommend starting by learning and understanding this:\r\n\r\nhttp://docs.textadventures.co.uk/quest/guides/character_creation.html\r\n\r\nas it helps with some basic Attribute and 'if' Script usage (as well as also the very useful 'show menu / ShowMenu / get input' Scripts/Functions as well as a taste of using the much more advanced but extremely useful List Attributes)\r\n\r\n5. after the 'character creation', look at (study / learn) other guides/code samples --- coding / libraries / etc (especially use/study Pixie's and Jaynabonne's guides --- most guides are Pixie's --- he's/she's a beast with helping others by all the public guides!) and also get more familiar with quests capabilities (it's Scripts, Functions, Elements, Objects' Attributes, Attributes: Attribute/Data Types, Scopes, and etc --- see the top menu items on doc site/link):\r\n\r\nhttp://docs.textadventures.co.uk/quest/\r\n\r\nhttp://docs.textadventures.co.uk/quest/guides/\r\nhttp://textadventures.co.uk/forum/samples\r\nhttps://github.com/ThePix/quest\r\n\r\nhttp://docs.textadventures.co.uk/quest/scripts/\r\nhttp://docs.textadventures.co.uk/quest/functions/ (categorical order)\r\nhttp://docs.textadventures.co.uk/quest/functions/index_allfunctions.html (alphabetical order)\r\nhttp://docs.textadventures.co.uk/quest/types/ (Attributes: Attributes / Data Types)\r\nhttp://docs.textadventures.co.uk/quest/elements/ (these are the 'physical things' of quest / quest's coding)\r\nhttp://docs.textadventures.co.uk/quest/elements/object.html (the built-in Attributes of the 'Object' Element)\r\nhttp://docs.textadventures.co.uk/quest/scopes.html (a convenient link/page for/of just the 'Scope' Functions/Scrips --- they can also be found in the 'Scripts' and/or the 'Functions' links)\r\n\r\n6. learn using Lists/Dictionaries (List/Dictionary Attributes), iteration, looping, and etc:\r\n\r\nhttp://docs.textadventures.co.uk/quest/guides/using_lists.html\r\nhttp://docs.textadventures.co.uk/quest/using_dictionaries.html\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5137/list-and-dictionary-extensive-guide-by-hk\r\nhttp://textadventures.co.uk/forum/samples/topic/5138/explore-and-travel-code-sample-by-hk\r\n\r\n7. keep learning more and more, and/or more advanced coding stuff...\r\n\r\n---------\r\n\r\nif you want to see my own struggle with learning quest and its coding:\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread\r\n\r\n----------\r\n\r\ngetting better at coding/design/practices, comes with time and experience and practice... the most important thing is \"getting it to work\", as you can forever, improve upon code.... perfectionists like me (well, a wanna-be / attempting perfectionist, lol) fall into this trap... always trying to make code better... all that matters is getting it to work... and as you improve... you can go back and improve your old code and/or organize it better... but don't get trapped in constantly trying to improve code, as there's no end, code can always be improved and/or better organized...\r\n\r\n-----------------------\r\n\r\nQuest is it's own coding language 'aslx', but generally can be broken up into two parts:\r\n\r\n```\r\n1. the \"physical/body or English language analogy: nouns\", which is similiar to 'xml/html' (web) languages: the 'tag' ('<xxx>xxx</xxx>') coding\r\n2. the \"actionable or English language analogy: verbs\", which is the 'scripting' (any NON-tag coding), which is similar to C++/Java scriptings\r\n```\r\n\r\n(3. Attributes are a weird/strange hybrid of 1 and 2, think of them as like 'traits/characteristics or English language analogy: adjectives/adverbs', but aren't truly either 1 or 2, either --- They're hard to explain conceptually at least for me)\r\n\r\nquest also shares some features of Python (Lists/Dictionaries)\r\n\r\nquest is also able to use JS (JavaScript) and CSS/UI/GUI stuff too (I don't know this stuff yet)\r\n\r\n--------\r\n\r\ndepending on the software's programming, your coding can be read by the computer/software horizontally or vertically, however, usually coding is vertical (as 'blocks'), as it's easier for humans to read (actually horizontal coding is nearly impossible for humans to read), unless it is just a short coding line, then it's usually written horizontally (as 'lines')\r\n\r\n1. here's some example of the 'tag' coding:\r\n\r\n```\r\n<asl version=\"550\"> // beginning of the 'asl' tag block\r\n  // your entire game content/code goes here (EVERYTHING MUST BE IN THIS 'asl' Tag block), so the/this 'asl' tag is technically your actual GAME/GAME OBJECT\r\n</asl> // end of the 'asl' tag block\r\n\r\n// ---------------------------------------\r\n\r\n// this is just your 'game settings/etc' Object, it's NOT your actual full/entire game / code / content. Yes, this is a bit confusing.\r\n<game name=\"xxx\"> // beginning of the 'game' tag block... I think you get the idea now...\r\n  // the various global/game-wide settings/controls/actions-scripts, the 'start' Script (this stuff is done at the beginning of the game, so it's good for intro dialogue/character creation like stuff), and whatever-like (author, version, firstpublished, etc), Attributes go here\r\n</game> // end of the 'game' tag block... I think you get the idea now...\r\n\r\n<object name=\"xxx\">\r\n  // content\r\n</object>\r\n\r\n<function name=\"xxx\">\r\n  // content\r\n</function>\r\n\r\n<verb>\r\n  // content\r\n</verb>\r\n\r\n<turnscript name=\"xxx\">\r\n  // content\r\n</turnscript>\r\n\r\n<type name=\"xxx\">\r\n  // content\r\n</type>\r\n\r\netc Elements\r\n```\r\n\r\n----------------------\r\n\r\nscripting examples:\r\n\r\n```\r\n// my way of explaining the scripting's generic syntax forms:\r\n\r\nNAME_OF_OBJECT.NAME_OF_ATTRIBUTE\r\nor\r\nNAME_OF_OBJECT.NAME_OF_ATTRIBUTE = VALUE_OR_EXPRESSION\r\nor\r\nNAME_OF_OBJECT.NAME_OF_ATTRIBUTE = NAME_OF_OBJECT.NAME_OF_ATTRIBUTE OPERATOR VALUE_OR_EXPRESSION\r\nor\r\nNAME_OF_FUNCTION/COMMAND\r\nor\r\nNAME_OF_FUNCTION/COMMAND (Arguments/Parameters: inputs)\r\n\r\n// -----------------------\r\n\r\nif (test.score >= 90) {\r\n  test.grade = \"A\"\r\n} else if (test.score >= 80) {\r\n  test.grade = \"B\"\r\n} else if (test.score >= 70) {\r\n  test.grade = \"C\"\r\n} else if (test.score >= 60) {\r\n  test.grade = \"D\"\r\n} else {\r\n  test.grade = \"F\"\r\n}\r\n\r\nset (player, \"strength\", 100)\r\n\r\nplayer.strength = 100\r\n\r\ndo (player, \"kiss\", frog)\r\n\r\nforeach (color_string_variable, split (\"red;blue;yellow\", \";\")) {\r\n  msg (\"The color is \" + color_string_variable + \".\")\r\n}\r\n// outputs:\r\n// The color is red.\r\n// The color is blue.\r\n// The color is yellow.\r\n\r\nmsg (\"hi\")\r\n\r\nplayer.alias = \"HK\"\r\nplayer.alias = john smith\"\r\n\r\ngame.turn = game.turn + 1\r\n\r\nplayer.strength = player.strength + 5\r\n\r\nplayer.damage = player.weapon.damage + player.weapon.damage * (player.strength / 100)\r\n\r\norc.current_life = orc.current_life - player.damage\r\n\r\netc etc etc\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I myself found quest 4 years ago, having zero coding knowledge, but I've been able to learn coding all thanks to quest, and am taking programming classes now at college (and was amazingly very well prepared for them, all from/thanks to quest! Well, quest helped for the first/basic programming classes, as the higher ones are about stuff you won't/can't learn from quest and most basic coding sites, as higher programming classes go into coding design / data structures, Assembly: low-level languages, and the computer archetecture: the circuitry design, logic gates and the different physical components/modules built of-from them. Though Jay, Jaynabonne, is a user/moderator here, who has lots of programming exerptise, was gracious to help me with assembly, so I was able to get help on it indirectly from quest as well. There's some really knowledgeable coding users here, as resources as well as the quest software itself. Pertex and Sgreig are also extremely knowledgeable, and of course Pixie, and Alex himself as well, though he's moving on now from his Quest endeaver/development. We also have some very knowledgeable users too, some stay, but some leave, but quest has picked up a lot recently, so hopefully we'll get more experienced coders as users).</p>\n<p>this is what I'd recommend:</p>\n<ol start=\"0\">\n<li>download notepad++ (a really great free editor for coding: reading, writing, editing, troubleshooting, and understanding code, as it color codes the code, as well as having many coding languages, and lots of great editing features/capabilties that I still need to learn, lol):</li>\n</ol>\n<p>https://notepad-plus-plus.org/</p>\n<p>a 'text editor' software (examples of 'text editor' software: notepad, wordpad, Apple: text editor, etc --- BUT NOT THESE FOR CODING as they're just for basic normal writing/'ms word' editing. Notepad++ is an example of a text editor for coding editing or just even just basic normal writing/'ms word' editing as it has really useful features/capabilities, but it's much more useful for coding) is good for reading/writing/troubleshooting code, but it's not an IDE/SDK that let's you compile, link, and test/run code. if you're interested in being a programmer, you need IDEs/SDKs.</p>\n<p>https://en.wikipedia.org/wiki/Integrated_development_environment<br>\nhttps://en.wikipedia.org/wiki/Software_development_kit</p>\n<p>some of them (free ones, though some of the sites make it difficult/confusing to get to the free versions... of course... grr, and also got to make sure you're going/getting to/the legit software of them):</p>\n<p>(these do use up a pretty lot of space/memory, be warned)</p>\n<p>MS Visual Studio (C++)<br>\n?Python SDK/IDE? (forgot it's exact name)<br>\nJDK (Java)<br>\nNetbeans (Java)<br>\nEclipse (???)</p>\n<p>and here's a very good site for various software (including some of the IDEs/SDKs: see 'Developer tools' and 'Runtimes' sections/categories):</p>\n<p>https://ninite.com/</p>\n<hr>\n<p>and for general coding, codecademy.com, is good for beginners and up. There's also 'udemy'(.com, I preseme) I think, but I've not tried it, and I think it is for more advanced coders... but not sure, and there's tons more sites, including infinite coding forums you can use.</p>\n<hr>\n<ol>\n<li>learning the basics of (using) quest (its GUI/Editor and all of its basic capabilities) and getting a taste into the mindset of coding / game making (\"if\" usage), which will take quite a while to slowly train your brain in, as it's not natural thinking.</li>\n</ol>\n<p>tutorial ( http://docs.textadventures.co.uk/quest/tutorial/ )</p>\n<p>try to do everything in the tutorial, ask for help if you need it (most people including myself have/had trouble with the orc/saying/bob/defibrilator parts --- these are definitetely the hardest parts of the tutorial --- frankly they shouldn't be in the tutorial as they quite advanced compared to the rest of the basic stuff that is the tutorial)</p>\n<ol start=\"2\">\n<li>unfortunately, actually trying to do your own stuff yourself for/in your own game, is very different from the tutorial giving you specific things with step by step instructions, on doing them. Also, you're likely finding yourself overwhelmed, as while doing the tutorial steps by steps made sense, you're now on your own, and are confusing and not understanding truly all the concepts and terms that you thought made sense through the tutorial, you're overwhelmed, confused, and lost. This is where I myself found myself. There's a huge gap/jump from the tutorial to trying to do your own stuff yourself for your own game.</li>\n</ol>\n<p>XanMag has tried to help bridge this huge gap/jump, via his tutorial 2 'templates and tutorial' demo game, which helps guide you through, step by step, a lot of the basic things you want to do in a game. So, I highly recommend this after doing the tutorial:</p>\n<p>http://textadventures.co.uk/forum/games/topic/5940/quest-tutorials-and-templates-published</p>\n<ol start=\"3\">\n<li>however, to truly make a game, you need to learn the \"bread and butter\" of game making / coding: Attributes and the 'if' Script usages, as these, especially, when used together, let's you do 90% of everything you want to do in a game. The basics of using quest, only enables so much. Learning Attributes usage and the 'if' Script usage, opens up 90% of the game making possibilities for you, indeed these are... \"THE TWO SUPER SCRIPTS\". You can try using my guide or there's Pixie's guides on trying to learn this stuff.</li>\n</ol>\n<p>http://textadventures.co.uk/forum/samples/topic/5559/attributes-and-if-script-guide-by-hk</p>\n<ol start=\"4\">\n<li>next or along with #3 or instead of (before) #3, I'd recommend starting by learning and understanding this:</li>\n</ol>\n<p>http://docs.textadventures.co.uk/quest/guides/character_creation.html</p>\n<p>as it helps with some basic Attribute and 'if' Script usage (as well as also the very useful 'show menu / ShowMenu / get input' Scripts/Functions as well as a taste of using the much more advanced but extremely useful List Attributes)</p>\n<ol start=\"5\">\n<li>after the 'character creation', look at (study / learn) other guides/code samples --- coding / libraries / etc (especially use/study Pixie's and Jaynabonne's guides --- most guides are Pixie's --- he's/she's a beast with helping others by all the public guides!) and also get more familiar with quests capabilities (it's Scripts, Functions, Elements, Objects' Attributes, Attributes: Attribute/Data Types, Scopes, and etc --- see the top menu items on doc site/link):</li>\n</ol>\n<p>http://docs.textadventures.co.uk/quest/</p>\n<p>http://docs.textadventures.co.uk/quest/guides/<br>\nhttp://textadventures.co.uk/forum/samples<br>\nhttps://github.com/ThePix/quest</p>\n<p>http://docs.textadventures.co.uk/quest/scripts/<br>\nhttp://docs.textadventures.co.uk/quest/functions/ (categorical order)<br>\nhttp://docs.textadventures.co.uk/quest/functions/index_allfunctions.html (alphabetical order)<br>\nhttp://docs.textadventures.co.uk/quest/types/ (Attributes: Attributes / Data Types)<br>\nhttp://docs.textadventures.co.uk/quest/elements/ (these are the 'physical things' of quest / quest's coding)<br>\nhttp://docs.textadventures.co.uk/quest/elements/object.html (the built-in Attributes of the 'Object' Element)<br>\nhttp://docs.textadventures.co.uk/quest/scopes.html (a convenient link/page for/of just the 'Scope' Functions/Scrips --- they can also be found in the 'Scripts' and/or the 'Functions' links)</p>\n<ol start=\"6\">\n<li>learn using Lists/Dictionaries (List/Dictionary Attributes), iteration, looping, and etc:</li>\n</ol>\n<p>http://docs.textadventures.co.uk/quest/guides/using_lists.html<br>\nhttp://docs.textadventures.co.uk/quest/using_dictionaries.html</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5137/list-and-dictionary-extensive-guide-by-hk<br>\nhttp://textadventures.co.uk/forum/samples/topic/5138/explore-and-travel-code-sample-by-hk</p>\n<ol start=\"7\">\n<li>keep learning more and more, and/or more advanced coding stuff...</li>\n</ol>\n<hr>\n<p>if you want to see my own struggle with learning quest and its coding:</p>\n<p>http://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread</p>\n<hr>\n<p>getting better at coding/design/practices, comes with time and experience and practice... the most important thing is \"getting it to work\", as you can forever, improve upon code.... perfectionists like me (well, a wanna-be / attempting perfectionist, lol) fall into this trap... always trying to make code better... all that matters is getting it to work... and as you improve... you can go back and improve your old code and/or organize it better... but don't get trapped in constantly trying to improve code, as there's no end, code can always be improved and/or better organized...</p>\n<hr>\n<p>Quest is it's own coding language 'aslx', but generally can be broken up into two parts:</p>\n<pre><code>1. the \"physical/body or English language analogy: nouns\", which is similiar to 'xml/html' (web) languages: the 'tag' ('&lt;xxx&gt;xxx&lt;/xxx&gt;') coding\n2. the \"actionable or English language analogy: verbs\", which is the 'scripting' (any NON-tag coding), which is similar to C++/Java scriptings\n</code></pre>\n<p>(3. Attributes are a weird/strange hybrid of 1 and 2, think of them as like 'traits/characteristics or English language analogy: adjectives/adverbs', but aren't truly either 1 or 2, either --- They're hard to explain conceptually at least for me)</p>\n<p>quest also shares some features of Python (Lists/Dictionaries)</p>\n<p>quest is also able to use JS (JavaScript) and CSS/UI/GUI stuff too (I don't know this stuff yet)</p>\n<hr>\n<p>depending on the software's programming, your coding can be read by the computer/software horizontally or vertically, however, usually coding is vertical (as 'blocks'), as it's easier for humans to read (actually horizontal coding is nearly impossible for humans to read), unless it is just a short coding line, then it's usually written horizontally (as 'lines')</p>\n<ol>\n<li>here's some example of the 'tag' coding:</li>\n</ol>\n<pre><code>&lt;asl version=\"550\"&gt; // beginning of the 'asl' tag block\n  // your entire game content/code goes here (EVERYTHING MUST BE IN THIS 'asl' Tag block), so the/this 'asl' tag is technically your actual GAME/GAME OBJECT\n&lt;/asl&gt; // end of the 'asl' tag block\n\n// ---------------------------------------\n\n// this is just your 'game settings/etc' Object, it's NOT your actual full/entire game / code / content. Yes, this is a bit confusing.\n&lt;game name=\"xxx\"&gt; // beginning of the 'game' tag block... I think you get the idea now...\n  // the various global/game-wide settings/controls/actions-scripts, the 'start' Script (this stuff is done at the beginning of the game, so it's good for intro dialogue/character creation like stuff), and whatever-like (author, version, firstpublished, etc), Attributes go here\n&lt;/game&gt; // end of the 'game' tag block... I think you get the idea now...\n\n&lt;object name=\"xxx\"&gt;\n  // content\n&lt;/object&gt;\n\n&lt;function name=\"xxx\"&gt;\n  // content\n&lt;/function&gt;\n\n&lt;verb&gt;\n  // content\n&lt;/verb&gt;\n\n&lt;turnscript name=\"xxx\"&gt;\n  // content\n&lt;/turnscript&gt;\n\n&lt;type name=\"xxx\"&gt;\n  // content\n&lt;/type&gt;\n\netc Elements\n</code></pre>\n<hr>\n<p>scripting examples:</p>\n<pre><code>// my way of explaining the scripting's generic syntax forms:\n\nNAME_OF_OBJECT.NAME_OF_ATTRIBUTE\nor\nNAME_OF_OBJECT.NAME_OF_ATTRIBUTE = VALUE_OR_EXPRESSION\nor\nNAME_OF_OBJECT.NAME_OF_ATTRIBUTE = NAME_OF_OBJECT.NAME_OF_ATTRIBUTE OPERATOR VALUE_OR_EXPRESSION\nor\nNAME_OF_FUNCTION/COMMAND\nor\nNAME_OF_FUNCTION/COMMAND (Arguments/Parameters: inputs)\n\n// -----------------------\n\nif (test.score &gt;= 90) {\n  test.grade = \"A\"\n} else if (test.score &gt;= 80) {\n  test.grade = \"B\"\n} else if (test.score &gt;= 70) {\n  test.grade = \"C\"\n} else if (test.score &gt;= 60) {\n  test.grade = \"D\"\n} else {\n  test.grade = \"F\"\n}\n\nset (player, \"strength\", 100)\n\nplayer.strength = 100\n\ndo (player, \"kiss\", frog)\n\nforeach (color_string_variable, split (\"red;blue;yellow\", \";\")) {\n  msg (\"The color is \" + color_string_variable + \".\")\n}\n// outputs:\n// The color is red.\n// The color is blue.\n// The color is yellow.\n\nmsg (\"hi\")\n\nplayer.alias = \"HK\"\nplayer.alias = john smith\"\n\ngame.turn = game.turn + 1\n\nplayer.strength = player.strength + 5\n\nplayer.damage = player.weapon.damage + player.weapon.damage * (player.strength / 100)\n\norc.current_life = orc.current_life - player.damage\n\netc etc etc\n</code></pre>\n\n",
      "PostDate": "2017-01-05T17:31:54.3049101Z",
      "LastEditDate": "2017-01-05T19:11:59.4044679Z"
    },
    {
      "PostId": "c3e35148-ea3e-4c72-9e9c-68a48c9d2b67",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ Anonynn and anyone else:\r\n\r\nyou can also use library files too\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/4808/organizational-designs",
      "EditableFormat": "markdown",
      "HTML": "<p>@ Anonynn and anyone else:</p>\n<p>you can also use library files too</p>\n<p>http://textadventures.co.uk/forum/samples/topic/4808/organizational-designs</p>\n\n",
      "PostDate": "2017-01-05T19:19:13.7111271Z",
      "LastEditDate": null
    }
  ]
}
