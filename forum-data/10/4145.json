{
  "Topic": {
    "TopicId": "4145",
    "ForumId": "10",
    "Title": "Quick (possibly stupid) question about libraries",
    "LastUpdated": "2014-01-22T05:33:50+00:00",
    "ReplyCount": 3
  },
  "Posts": [
    {
      "PostId": "27544",
      "UserId": 0,
      "Username": "tlk",
      "UserAvatar": null,
      "UserGravatar": "2d59720246577f1d45f7a580bf58be52",
      "EditableText": "So, as the subject line states, this might be a stupid question, but I've only just started utilizing libraries and I was wondering if there were any sorts of limitations on how many could be included in one game. The reason I ask is that I'm working on a dialogue-heavy game and have made a library full of functions that get called when you talk to people, which is much nicer than having them all in the game file, but because of the volume of different characters and topics involved it would probably be easier to manage individual libraries for each character. Before I set all that up though, if I do, I just wanted to make sure that including a hundred or so libraries in one game (it's a bit of an ambitious game, I must say) wouldn't for some reason cause a problem, at least as far as anyone knows.",
      "EditableFormat": "bbcode",
      "HTML": "So, as the subject line states, this might be a stupid question, but I've only just started utilizing libraries and I was wondering if there were any sorts of limitations on how many could be included in one game. The reason I ask is that I'm working on a dialogue-heavy game and have made a library full of functions that get called when you talk to people, which is much nicer than having them all in the game file, but because of the volume of different characters and topics involved it would probably be easier to manage individual libraries for each character. Before I set all that up though, if I do, I just wanted to make sure that including a hundred or so libraries in one game (it's a bit of an ambitious game, I must say) wouldn't for some reason cause a problem, at least as far as anyone knows.",
      "PostDate": "2014-01-21T17:08:43+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27551",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I can't give you an official answer, but I wanted to answer *something*. I don't think the &lt;include&gt; mechanism itself would have a limit, as it's just inserting your library text into the game. The only thing to be aware of is that it does track symbols, to know which library a function/object/whatever is in (e.g. if you change the filter on the bottom left to show library elements). I suppose it could cause a slowdown in the editor in such a case. I can't imagine it crashing or hitting a limit.\n\nI can understand your desire to have a separate file for each character. I did the same myself. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Just be sure you don't set a &lt;parent&gt; attribute on an character or object in one of the library files. Otherwise, when you save your game, Quest will pull a duplicate definition up into your main game file, which will then make it unloadable until you manually correct it. (Yes, I have run into this.) If you need to set parent rooms for your characters, do it in script.\n\nAlso note that you can include libraries inside libraries. I had a main Characters.aslx library that then included all of the character aslx library files.",
      "EditableFormat": "bbcode",
      "HTML": "I can't give you an official answer, but I wanted to answer *something*. I don't think the &lt;include&gt; mechanism itself would have a limit, as it's just inserting your library text into the game. The only thing to be aware of is that it does track symbols, to know which library a function/object/whatever is in (e.g. if you change the filter on the bottom left to show library elements). I suppose it could cause a slowdown in the editor in such a case. I can't imagine it crashing or hitting a limit.<br/><br/>I can understand your desire to have a separate file for each character. I did the same myself. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Just be sure you don't set a &lt;parent&gt; attribute on an character or object in one of the library files. Otherwise, when you save your game, Quest will pull a duplicate definition up into your main game file, which will then make it unloadable until you manually correct it. (Yes, I have run into this.) If you need to set parent rooms for your characters, do it in script.<br/><br/>Also note that you can include libraries inside libraries. I had a main Characters.aslx library that then included all of the character aslx library files.",
      "PostDate": "2014-01-21T21:04:18+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27569",
      "UserId": 0,
      "Username": "tlk",
      "UserAvatar": null,
      "UserGravatar": "2d59720246577f1d45f7a580bf58be52",
      "EditableText": "Whoa...library-ception (topical!). Had not thought of that, but it does make sense. I'm still trying to wrap my head around the idea that types can inherit from other types, so that's another thing to add to the pile. As I've been getting my hands dirty with this game idea the last couple weeks have had some major Quest-related revelations for me.\n\nI'm pretty sure I'm grasping the whole &lt;parent&gt; thing, but admittedly it's a little murky for me. I get the idea to not define an object's parent via attribute if it's in a library, though, so that's what counts. Presently I have all my character objects in the game file itself in a dummy room at the start since they'll be moved around from room to room throughout the game so I think I'm in the clear, but I might change that later since I'm still at a really early stage of development, so that'll be a good thing to keep in mind and might save me some hair-pulling down the road. Thanks for the reply!",
      "EditableFormat": "bbcode",
      "HTML": "Whoa...library-ception (topical!). Had not thought of that, but it does make sense. I'm still trying to wrap my head around the idea that types can inherit from other types, so that's another thing to add to the pile. As I've been getting my hands dirty with this game idea the last couple weeks have had some major Quest-related revelations for me.<br/><br/>I'm pretty sure I'm grasping the whole &lt;parent&gt; thing, but admittedly it's a little murky for me. I get the idea to not define an object's parent via attribute if it's in a library, though, so that's what counts. Presently I have all my character objects in the game file itself in a dummy room at the start since they'll be moved around from room to room throughout the game so I think I'm in the clear, but I might change that later since I'm still at a really early stage of development, so that'll be a good thing to keep in mind and might save me some hair-pulling down the road. Thanks for the reply!",
      "PostDate": "2014-01-22T04:36:29+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27573",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "another understanding for &quot;Object Types&quot; is a &quot;group&quot; (think of &quot;baskets&quot; of~holding~adding sub objects and~or attributes to the Object that the &quot;group&quot; ~ &quot;Object Type&quot; is attached~added on to)\n\n&lt;type&gt;&lt;/type&gt; = the &quot;type&quot; tags are short for specifically an &quot;Object Type&quot;\n\nif Object belongs to the &quot;weapon_object_type&quot; Group (Object Type), then said Object have these Attributes:\n\n&lt;type name=&quot;weapon_object_type&quot;&gt;\n-&gt; &lt;attr name=&quot;attack_rating&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;physical_damage&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;fire_damage&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;water_damage&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;earth_damage&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;air_damage&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n&lt;/type&gt;\n\nif Object belongs to the &quot;armor_object_type&quot; Group (Object Type), then said Object have these Attributes:\n\n&lt;type name=&quot;armor_object_type&quot;&gt;\n-&gt; &lt;attr name=&quot;armor_class&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;physical_defense&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;fire_defense&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;water_defense&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;earth_defense&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n-&gt; &lt;attr name=&quot;air_defense&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n&lt;/type&gt;\n\nComputer (windows 7 OS):\n\n(&quot;Object Types&quot; ~ &quot;Groups&quot;)\n\nOrganizational Unit (OU):\n-&gt; Administrators\n-&gt;-&gt; X\n-&gt; Users\n-&gt;-&gt; A\n-&gt;-&gt; B\n-&gt; Printing Operators\n-&gt;-&gt; C\n-&gt; IT Department\n-&gt;-&gt; D\n-&gt;-&gt; E\n-&gt; Financial Department\n-&gt;-&gt; F\n-&gt; Human Resources Department\n-&gt;-&gt; G\n-&gt; Etc\n-&gt;-&gt; Etc\n\n------------------\n\nif you need help understanding the concepts of &quot;parent~child~nesting~indenting&quot;:\n\nuniverse = (ROOT) parent object of all things below it\n-&gt; galaxy (milky way) = child object of &quot;universe&quot; and direct parent object of &quot;star&quot; and indirect parent of all things below it\n-&gt;-&gt; star (our sun) = direct child of &quot;galaxy&quot; and indirect child of &quot;universe&quot;\n-&gt;-&gt;-&gt; planet (earth) = .... get the idea now ???\n\nplanet.parent = star\n\nand I can change (&quot;move&quot;) the &quot;planet&quot; object to another object, the same way (only can set its direct~specific parent):\n\nplanet.parent = galaxy\n\nuniverse\n-&gt; galaxy (milky way)\n-&gt;-&gt; star (our sun)\n-&gt;-&gt; planet (earth)\n\nuniverse.parent=planet\n\ngalaxy (milky way)\n-&gt; star (our sun)\n-&gt; planet (earth)\n-&gt;-&gt; universe\n\n---------\n\nc:\\\\\n-&gt; programs\n-&gt;-&gt; quest\n\nHK\n-&gt; HK's pants with pockets\n-&gt;-&gt; wallet\n-&gt;-&gt;-&gt; $1\n-&gt;-&gt;-&gt; $5",
      "EditableFormat": "bbcode",
      "HTML": "another understanding for &quot;Object Types&quot; is a &quot;group&quot; (think of &quot;baskets&quot; of~holding~adding sub objects and~or attributes to the Object that the &quot;group&quot; ~ &quot;Object Type&quot; is attached~added on to)<br/><br/>&lt;type&gt;&lt;/type&gt; = the &quot;type&quot; tags are short for specifically an &quot;Object Type&quot;<br/><br/>if Object belongs to the &quot;weapon_object_type&quot; Group (Object Type), then said Object have these Attributes:<br/><br/>&lt;type name=&quot;weapon_object_type&quot;&gt;<br/>-&gt; &lt;attr name=&quot;attack_rating&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;physical_damage&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;fire_damage&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;water_damage&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;earth_damage&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;air_damage&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>&lt;/type&gt;<br/><br/>if Object belongs to the &quot;armor_object_type&quot; Group (Object Type), then said Object have these Attributes:<br/><br/>&lt;type name=&quot;armor_object_type&quot;&gt;<br/>-&gt; &lt;attr name=&quot;armor_class&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;physical_defense&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;fire_defense&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;water_defense&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;earth_defense&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>-&gt; &lt;attr name=&quot;air_defense&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>&lt;/type&gt;<br/><br/>Computer (windows 7 OS):<br/><br/>(&quot;Object Types&quot; ~ &quot;Groups&quot;)<br/><br/>Organizational Unit (OU):<br/>-&gt; Administrators<br/>-&gt;-&gt; X<br/>-&gt; Users<br/>-&gt;-&gt; A<br/>-&gt;-&gt; B<br/>-&gt; Printing Operators<br/>-&gt;-&gt; C<br/>-&gt; IT Department<br/>-&gt;-&gt; D<br/>-&gt;-&gt; E<br/>-&gt; Financial Department<br/>-&gt;-&gt; F<br/>-&gt; Human Resources Department<br/>-&gt;-&gt; G<br/>-&gt; Etc<br/>-&gt;-&gt; Etc<br/><br/>------------------<br/><br/>if you need help understanding the concepts of &quot;parent~child~nesting~indenting&quot;:<br/><br/>universe = (ROOT) parent object of all things below it<br/>-&gt; galaxy (milky way) = child object of &quot;universe&quot; and direct parent object of &quot;star&quot; and indirect parent of all things below it<br/>-&gt;-&gt; star (our sun) = direct child of &quot;galaxy&quot; and indirect child of &quot;universe&quot;<br/>-&gt;-&gt;-&gt; planet (earth) = .... get the idea now ???<br/><br/>planet.parent = star<br/><br/>and I can change (&quot;move&quot;) the &quot;planet&quot; object to another object, the same way (only can set its direct~specific parent):<br/><br/>planet.parent = galaxy<br/><br/>universe<br/>-&gt; galaxy (milky way)<br/>-&gt;-&gt; star (our sun)<br/>-&gt;-&gt; planet (earth)<br/><br/>universe.parent=planet<br/><br/>galaxy (milky way)<br/>-&gt; star (our sun)<br/>-&gt; planet (earth)<br/>-&gt;-&gt; universe<br/><br/>---------<br/><br/>c:\\\\<br/>-&gt; programs<br/>-&gt;-&gt; quest<br/><br/>HK<br/>-&gt; HK's pants with pockets<br/>-&gt;-&gt; wallet<br/>-&gt;-&gt;-&gt; $1<br/>-&gt;-&gt;-&gt; $5",
      "PostDate": "2014-01-22T05:33:50+00:00",
      "LastEditDate": null
    }
  ]
}
