{
  "Topic": {
    "TopicId": "tkcjolzdxuc5lfbhuithxq",
    "ForumId": "10",
    "Title": "How to change the color of the room name",
    "LastUpdated": "2020-04-04T13:09:33.497359Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "5799d71b-343f-4ec1-8d09-5434f014d95f",
      "UserId": 385983,
      "Username": "JonQ",
      "AvatarUrl": "https://i.imgur.com/AXGkXqeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Fairly simple question:  I simply want to have a different color font for a room name when the player enters.  (Instead of \"You are in\" I have opted for the room name to be in bold, but this isn't stark enough for my UI, so I want it to be a different color from the rest of the text.)\r\n\r\nI have searched far and wide, but can't find an answer to this.  I don't know how to insert JavaScript stuff into my Quest game, though I have looked at the tutorials on Customising the UI, etc.",
      "EditableFormat": "markdown",
      "HTML": "<p>Fairly simple question:  I simply want to have a different color font for a room name when the player enters.  (Instead of \"You are in\" I have opted for the room name to be in bold, but this isn't stark enough for my UI, so I want it to be a different color from the rest of the text.)</p>\n<p>I have searched far and wide, but can't find an answer to this.  I don't know how to insert JavaScript stuff into my Quest game, though I have looked at the tutorials on Customising the UI, etc.</p>\n\n",
      "PostDate": "2020-04-04T13:09:33.497359Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3866d1fc-04f9-4af7-98e1-4bb3b974d96b",
      "UserId": 385983,
      "Username": "JonQ",
      "AvatarUrl": "https://i.imgur.com/AXGkXqeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "And by the same token, how do I change the color of the game title that displays up top when you first start?",
      "EditableFormat": "markdown",
      "HTML": "<p>And by the same token, how do I change the color of the game title that displays up top when you first start?</p>\n\n",
      "PostDate": "2020-04-04T13:51:52.5296099Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b2399ea2-071b-44c9-bdab-9869be00862f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Fairly simple question: I simply want to have a different color font for a room name when the player enters.\r\n\r\nUnfortunately, there isn't such an easy way to do that.\r\n\r\nThe simplest option would be just to include the colour as part of the name. Like, giving a room the alias: `{colour:red:Kitchen}` or similar.\r\n\r\nIf you want to do it without changing every room, then you could modify the core function `GetDisplayName` like this:\r\n<pre><code>  &lt;function name=\"GetDisplayName\" type=\"string\" parameters=\"obj\"><b style=\"border: 1px dotted green; display: block\">    if (obj = game.pov.parent) {\r\n      return (\"{colour:<em style=\"color: green; font-family: initial\">green</em>:\" + GetDisplayAlias (obj) + \"}\")\r\n    }\r\n    else</b>      return (GetDisplayNameLink(obj, \"\"))<b style=\"border: 1px dotted green; display: block\">    }</b>  &lt;/function></code></pre>\r\n\r\nOr on the web version, where you can't modify the core functions, you could have a script in your `start` script to rename all the rooms:\r\n<pre><code>foreach (room, AllRooms()) {\r\n  room.alias = \"{colour:<em style=\"color: blue; font-family: initial\">blue</em>:\" + GetDisplayAlias (room) + \"}\"\r\n}</code></pre>\r\n\r\nNot really a perfect solution, but I think it should work.\r\n\r\n> And by the same token, how do I change the color of the game title that displays up top when you first start?\r\n\r\nYou can put text processor directives in the title. Or I think you could add to your UI initialisation script (on the game's \"Advanced Scripts\" tab, once you've enabled it on the \"Features\" tab):\r\n<pre><code>JS.eval(\"$('&lt;style>').text('.title span:first-child { color: <b style=\"color: purple; font-family: initial\">purple</b> }').appendTo('head');\")</code></pre>",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Fairly simple question: I simply want to have a different color font for a room name when the player enters.</p>\n</blockquote>\n<p>Unfortunately, there isn't such an easy way to do that.</p>\n<p>The simplest option would be just to include the colour as part of the name. Like, giving a room the alias: <code>{colour:red:Kitchen}</code> or similar.</p>\n<p>If you want to do it without changing every room, then you could modify the core function <code>GetDisplayName</code> like this:</p>\n<pre><code>  &lt;function name=\"GetDisplayName\" type=\"string\" parameters=\"obj\"&gt;<b style=\"border: 1px dotted green; display: block\">    if (obj = game.pov.parent) {\n      return (\"{colour:<em style=\"color: green; font-family: initial\">green</em>:\" + GetDisplayAlias (obj) + \"}\")\n    }\n    else</b>      return (GetDisplayNameLink(obj, \"\"))<b style=\"border: 1px dotted green; display: block\">    }</b>  &lt;/function&gt;</code></pre>\n<p>Or on the web version, where you can't modify the core functions, you could have a script in your <code>start</code> script to rename all the rooms:</p>\n<pre><code>foreach (room, AllRooms()) {\n  room.alias = \"{colour:<em style=\"color: blue; font-family: initial\">blue</em>:\" + GetDisplayAlias (room) + \"}\"\n}</code></pre>\n<p>Not really a perfect solution, but I think it should work.</p>\n<blockquote>\n<p>And by the same token, how do I change the color of the game title that displays up top when you first start?</p>\n</blockquote>\n<p>You can put text processor directives in the title. Or I think you could add to your UI initialisation script (on the game's \"Advanced Scripts\" tab, once you've enabled it on the \"Features\" tab):</p>\n<pre><code>JS.eval(\"$('&lt;style&gt;').text('.title span:first-child { color: <b style=\"color: purple; font-family: initial\">purple</b> }').appendTo('head');\")</code></pre>\n\n",
      "PostDate": "2020-04-04T14:52:43.3178257Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cb227410-2094-475b-8c12-5cbd52319164",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "See if this works.  It’s a copy-paste job from my “Quest - Tutorials and templates” game.\r\n```\r\n\r\nDo you see these little things: < and > ? If you type \r\n\r\nfont color = \"red\" OMG!! It's red font! \r\n\r\nbetween them, it will change the font to red!\r\n\r\nYou also need to type \r\n\r\n/font \r\n\r\nbetween those bracket things to end the red font and return to preset black.\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>See if this works.  It’s a copy-paste job from my “Quest - Tutorials and templates” game.</p>\n<pre><code>\nDo you see these little things: &lt; and &gt; ? If you type \n\nfont color = \"red\" OMG!! It's red font! \n\nbetween them, it will change the font to red!\n\nYou also need to type \n\n/font \n\nbetween those bracket things to end the red font and return to preset black.\n</code></pre>\n\n",
      "PostDate": "2020-04-04T15:06:04.8601725Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f8f73c24-214e-45f9-b544-2fa769b5ff3e",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "mrangel is way smarter than me so if you can make sense of his suggestion, try it first.  If not, try mine.  Let us know.",
      "EditableFormat": "markdown",
      "HTML": "<p>mrangel is way smarter than me so if you can make sense of his suggestion, try it first.  If not, try mine.  Let us know.</p>\n\n",
      "PostDate": "2020-04-04T15:07:51.8734246Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ed69aec5-c091-48ec-b7c8-e1f67ec06124",
      "UserId": 385983,
      "Username": "JonQ",
      "AvatarUrl": "https://i.imgur.com/AXGkXqeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi, Thanks so much for the fast response.  I tried the \"web\" option on start script first, since it seemed more simple and I knew how to access the start script.  It didn't work. \r\n\r\nAbout modifying the GetDisplayName function, how do I access that, or where in my game do I put it?  I think you mean I have to modify a Core aslx file or something, is that right?  Or can I just put it in the start script?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi, Thanks so much for the fast response.  I tried the \"web\" option on start script first, since it seemed more simple and I knew how to access the start script.  It didn't work.</p>\n<p>About modifying the GetDisplayName function, how do I access that, or where in my game do I put it?  I think you mean I have to modify a Core aslx file or something, is that right?  Or can I just put it in the start script?</p>\n\n",
      "PostDate": "2020-04-04T16:04:05.0000317Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "99fdc7a7-0f20-4b5c-adcc-f0cb80f5f554",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You can easily set a room's name to either `<span style=\"color: red\">Kitchen</span>` or `{colour:red:Kitchen}` and it should have the same effect. I suggested the latter because it's easier to type.\r\n\r\n`<span color=\"red\">Kitchen</span>` is old and generally considered by bad form, but probably still works. Using `font` as an alias for `span` is really old and its use is discouraged (I think since around 1999), but likewise, it still probably works.\r\n\r\nI also suggested alternatives in code in case the OP is making a large game and doesn't want to do that for every single name.",
      "EditableFormat": "markdown",
      "HTML": "<p>You can easily set a room's name to either <code>&lt;span style=\"color: red\"&gt;Kitchen&lt;/span&gt;</code> or <code>{colour:red:Kitchen}</code> and it should have the same effect. I suggested the latter because it's easier to type.</p>\n<p><code>&lt;span color=\"red\"&gt;Kitchen&lt;/span&gt;</code> is old and generally considered by bad form, but probably still works. Using <code>font</code> as an alias for <code>span</code> is really old and its use is discouraged (I think since around 1999), but likewise, it still probably works.</p>\n<p>I also suggested alternatives in code in case the OP is making a large game and doesn't want to do that for every single name.</p>\n\n",
      "PostDate": "2020-04-04T16:11:13.6471586Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e2c94c7d-f11a-41d5-861e-ad3c79ef1166",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I tried the \"web\" option on start script first, since it seemed more simple and I knew how to access the start script. It didn't work.\r\n\r\nDid it just not work?\r\nIt works for me.\r\n\r\nCan you share a link to your game, so I can try to work out what's different between them?\r\n\r\n> About modifying the GetDisplayName function, how do I access that, or where in my game do I put it?\r\n\r\nIn the web editor, this isn't possible. In the desktop editor, there is a way to show the core objects and edit them; but I'll have to leave someone who actually has a copy of the desktop Quest to explain that.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I tried the \"web\" option on start script first, since it seemed more simple and I knew how to access the start script. It didn't work.</p>\n</blockquote>\n<p>Did it just not work?<br>\nIt works for me.</p>\n<p>Can you share a link to your game, so I can try to work out what's different between them?</p>\n<blockquote>\n<p>About modifying the GetDisplayName function, how do I access that, or where in my game do I put it?</p>\n</blockquote>\n<p>In the web editor, this isn't possible. In the desktop editor, there is a way to show the core objects and edit them; but I'll have to leave someone who actually has a copy of the desktop Quest to explain that.</p>\n\n",
      "PostDate": "2020-04-04T16:20:24.9851835Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "62a1bd52-0185-4393-a927-87df2eb83f3f",
      "UserId": 385983,
      "Username": "JonQ",
      "AvatarUrl": "https://i.imgur.com/AXGkXqeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay, the \"start script\" option does work, but so far only with blue or green.  I was trying for \"light green\" because that seemed to go with my whole setup.  I'll keep playing with colors, but THANK YOU!  \r\n\r\nYou guys are awesome!  Thanks so much.",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay, the \"start script\" option does work, but so far only with blue or green.  I was trying for \"light green\" because that seemed to go with my whole setup.  I'll keep playing with colors, but THANK YOU!</p>\n<p>You guys are awesome!  Thanks so much.</p>\n\n",
      "PostDate": "2020-04-04T16:30:26.2391029Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3d432dda-6d67-423b-a268-7e68bccbe6dd",
      "UserId": 385983,
      "Username": "JonQ",
      "AvatarUrl": "https://i.imgur.com/AXGkXqeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "One more thing:  I need to reinstate capital (upper case) on the first letter on each room name in that bit of code.  Is that like \"UCase ()\" and where exactly would that fit in? ",
      "EditableFormat": "markdown",
      "HTML": "<p>One more thing:  I need to reinstate capital (upper case) on the first letter on each room name in that bit of code.  Is that like \"UCase ()\" and where exactly would that fit in?</p>\n\n",
      "PostDate": "2020-04-04T16:35:27.3749265Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "46e2cc5e-3cf5-4e04-8d3e-a389b58bf6d6",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I was trying for \"light green\" because that seemed to go with my whole setup.\r\n\r\nI think there's a lightgreen. A list of valid colour names can be found at https://w3schools.com/colors/colors_names.asp - note that there are no spaces in a colour name.\r\n\r\n> One more thing: I need to reinstate capital (upper case) on the first letter on each room name in that bit of code. Is that like \"UCase ()\" and where exactly would that fit in?\r\n\r\nUCase would put it in all-caps. If you want to capitalise the first letter you'd use CapFirst, like this:\r\n```\r\nforeach (room, AllRooms()) {\r\n  room.alias = \"{colour:lightseagreen:\" + CapFirst(GetDisplayAlias (room)) + \"}\"\r\n}\r\n```\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I was trying for \"light green\" because that seemed to go with my whole setup.</p>\n</blockquote>\n<p>I think there's a lightgreen. A list of valid colour names can be found at https://w3schools.com/colors/colors_names.asp - note that there are no spaces in a colour name.</p>\n<blockquote>\n<p>One more thing: I need to reinstate capital (upper case) on the first letter on each room name in that bit of code. Is that like \"UCase ()\" and where exactly would that fit in?</p>\n</blockquote>\n<p>UCase would put it in all-caps. If you want to capitalise the first letter you'd use CapFirst, like this:</p>\n<pre><code>foreach (room, AllRooms()) {\n  room.alias = \"{colour:lightseagreen:\" + CapFirst(GetDisplayAlias (room)) + \"}\"\n}\n</code></pre>\n\n",
      "PostDate": "2020-04-04T20:03:10.5354329Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "beb65de5-aa59-4fb4-8911-87631bbe3291",
      "UserId": 385983,
      "Username": "JonQ",
      "AvatarUrl": "https://i.imgur.com/AXGkXqeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey thanks a million!  I am including you in my credits for such awesome help.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey thanks a million!  I am including you in my credits for such awesome help.</p>\n\n",
      "PostDate": "2020-04-04T21:11:04.2768812Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "58772b72-c101-4136-bd9f-74eedddb0678",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't think giving the room the alias ```{colour:red:Kitchen}``` will work.\r\n\r\nSorry, I'll rephrase that... It will work, the room name will be 'Kitchen' in the colour 'red', but the location bar at the top of the screen now says '{colour:red:Kitchen}'.\r\n\r\nNot sure how you would go about changing that.\r\n\r\nYou could always decide not to show the location bar, by unchecking its function on the 'Interface' tab of the main 'game' object.",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't think giving the room the alias <code>{colour:red:Kitchen}</code> will work.</p>\n<p>Sorry, I'll rephrase that... It will work, the room name will be 'Kitchen' in the colour 'red', but the location bar at the top of the screen now says '{colour:red:Kitchen}'.</p>\n<p>Not sure how you would go about changing that.</p>\n<p>You could always decide not to show the location bar, by unchecking its function on the 'Interface' tab of the main 'game' object.</p>\n\n",
      "PostDate": "2020-04-04T21:54:08.8532856Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "31b6ce5f-cd48-482a-8a9d-8baeeab044da",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks for pointing that out Dr Agon.\r\n\r\nDoes the `<span>` version display correctly in the status bar? If not, I should be able to come up with a one-line JS to fix it.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks for pointing that out Dr Agon.</p>\n<p>Does the <code>&lt;span&gt;</code> version display correctly in the status bar? If not, I should be able to come up with a one-line JS to fix it.</p>\n\n",
      "PostDate": "2020-04-04T22:28:39.9194303Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9eb13ac9-9845-445b-bd35-bdf1fa0fa403",
      "UserId": 385983,
      "Username": "JonQ",
      "AvatarUrl": "https://i.imgur.com/AXGkXqeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't use the location bar.  But Doctor Agon, I am having that issue up top with the title of the whole game in the Quest window, due to using that same code for the game name...",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't use the location bar.  But Doctor Agon, I am having that issue up top with the title of the whole game in the Quest window, due to using that same code for the game name...</p>\n\n",
      "PostDate": "2020-04-04T23:47:44.2012545Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "92d93719-b273-47ab-bfae-90952ea981a4",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I don't think giving the room the alias {colour:red:Kitchen} will work.\r\n> \r\n> Sorry, I'll rephrase that... It will work, the room name will be 'Kitchen' in the colour 'red', but the location bar at the top of the screen now says '{colour:red:Kitchen}'.\r\n> \r\n> Not sure how you would go about changing that.\r\n\r\nTo fix that, use the `<span>` version of the code. Like this:\r\n```\r\nforeach (room, AllRooms()) {\r\n  room.alias = \"<span style=\\\"color: lightseagreen\\\">\" + CapFirst(GetDisplayAlias (room)) + \"</span>\"\r\n}\r\n```\r\nThat will, however, also cause the room name in the location bar to be that colour. If you want to prevent that happening (because you want it to be a different colour to go with the location bar's background), you would add a line to the UI Initialisation script:\r\n```\r\nJS.eval (\"$(function () {updateLocation = function(i) {$('#location').text($('<span>').html(i).text());};});\")\r\n```\r\n\r\n> I am having that issue up top with the title of the whole game in the Quest window, due to using that same code for the game name...\r\n\r\nI thought there might be an issue of that kind; the `JS.eval` code in my earlier post should work in that case.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I don't think giving the room the alias {colour:red:Kitchen} will work.</p>\n<p>Sorry, I'll rephrase that... It will work, the room name will be 'Kitchen' in the colour 'red', but the location bar at the top of the screen now says '{colour:red:Kitchen}'.</p>\n<p>Not sure how you would go about changing that.</p>\n</blockquote>\n<p>To fix that, use the <code>&lt;span&gt;</code> version of the code. Like this:</p>\n<pre><code>foreach (room, AllRooms()) {\n  room.alias = \"&lt;span style=\\\"color: lightseagreen\\\"&gt;\" + CapFirst(GetDisplayAlias (room)) + \"&lt;/span&gt;\"\n}\n</code></pre>\n<p>That will, however, also cause the room name in the location bar to be that colour. If you want to prevent that happening (because you want it to be a different colour to go with the location bar's background), you would add a line to the UI Initialisation script:</p>\n<pre><code>JS.eval (\"$(function () {updateLocation = function(i) {$('#location').text($('&lt;span&gt;').html(i).text());};});\")\n</code></pre>\n<blockquote>\n<p>I am having that issue up top with the title of the whole game in the Quest window, due to using that same code for the game name...</p>\n</blockquote>\n<p>I thought there might be an issue of that kind; the <code>JS.eval</code> code in my earlier post should work in that case.</p>\n\n",
      "PostDate": "2020-04-05T00:13:47.7574809Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c4290b19-0537-407e-9f4c-f1d9b2c51e67",
      "UserId": 385983,
      "Username": "JonQ",
      "AvatarUrl": "https://i.imgur.com/AXGkXqeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "WAIT!  mrangel, I think I just now understood your JS intructions -- I see now that it comes after my query about the game's title, so I have not tried that option yet for the name of the whole game.  (I had tried to put the {colour...} stuff right into the name box under the \"game\" tab.)",
      "EditableFormat": "markdown",
      "HTML": "<p>WAIT!  mrangel, I think I just now understood your JS intructions -- I see now that it comes after my query about the game's title, so I have not tried that option yet for the name of the whole game.  (I had tried to put the {colour...} stuff right into the name box under the \"game\" tab.)</p>\n\n",
      "PostDate": "2020-04-05T01:20:22.63684Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "830ee744-4b70-41f2-ae7e-de7233b8b659",
      "UserId": 385983,
      "Username": "JonQ",
      "AvatarUrl": "https://i.imgur.com/AXGkXqeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks !  I will try the JS on my game title.\r\n\r\nRight now, the other code for the rooms is interfering with Object/Room objects.  It won't let the player interact with obj/rm's.  So maybe I need to filter the \"All Rooms\" aspect of the code, so that only Rooms (pure ones, not hybrid ones) are affected -- in other words, I only want locations to be light green, not object-rooms.  Hmm...",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks !  I will try the JS on my game title.</p>\n<p>Right now, the other code for the rooms is interfering with Object/Room objects.  It won't let the player interact with obj/rm's.  So maybe I need to filter the \"All Rooms\" aspect of the code, so that only Rooms (pure ones, not hybrid ones) are affected -- in other words, I only want locations to be light green, not object-rooms.  Hmm...</p>\n\n",
      "PostDate": "2020-04-05T01:34:08.801802Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a3adce1d-7796-4194-8cc2-9f8c5b45ead4",
      "UserId": 385983,
      "Username": "JonQ",
      "AvatarUrl": "https://i.imgur.com/AXGkXqeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay, the JS for my game title worked like a charm!  \r\n\r\nAbout the other concern with my obj/rooms:  I am going through all rooms one by one, and I am only finding the odd one here or there.  So I put an \"if\" line in there to avoid those obj/rooms, and also an \"if\" filter to avoid anything with HasAttribute \"look.\"  So far it's working.\r\n\r\nThanks again!",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay, the JS for my game title worked like a charm!</p>\n<p>About the other concern with my obj/rooms:  I am going through all rooms one by one, and I am only finding the odd one here or there.  So I put an \"if\" line in there to avoid those obj/rooms, and also an \"if\" filter to avoid anything with HasAttribute \"look.\"  So far it's working.</p>\n<p>Thanks again!</p>\n\n",
      "PostDate": "2020-04-05T04:21:05.3664651Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7584dc44-e1ba-441e-9365-355b21bdfcfc",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The problem with filtering out object/rooms is that their names will show up a different colour from all the other rooms when the player is in them; because you're changing the colour the object displays as.\r\n\r\nI believe there's a feature which lets you give individual objects a colour for their object links; if you set this to \"red !important\" and the object/room's name to `<span style=\"color:lightgreen\">cage</span>` then it would show up red when displayed as an object link, but light green when displayed as text (such as in the \"You are in\" line).\r\n\r\nIf it's causing problems with the player being able to use commands on an object, it might help to put the object's real alias (without the colour code) into its list of alternate aliases (I think that's on the 'Object' tab but not certain).\r\n\r\nThe `GetDisplayName` option is probably better; because rather than changing the object's alias, it causes the object's name to be rendered differently when the player is inside it. But I'm afraid I don't have the desktop Quest editor here, so I can't give real advice on how to change the core functions.\r\n\r\nHmm… an **alternate method:**\r\n\r\nIf you change it back to displaying \"You are in a …\" then you could use some javascript to search for that text and change it whenever text is output.\r\n\r\nThe javascript would look like:\r\n```\r\naddText = function(text) {\r\n    if (getCurrentDiv() == null) {\r\n        createNewDiv(\"left\");\r\n    }\r\n    if (savingTranscript) {\r\n        SaveTranscript(text);\r\n        ASLEvent(\"UpdateTranscriptString\", text);\r\n    }\r\n    getCurrentDiv().append(text).find(\"span:contains(You are in)\").each(\r\n      $(this).text($(this).text().replace(/^You are in(?: an| a|)\\s*(.)/i, function (i,j) {return (j.toUpperCase());})).css({color: 'lightgreen', fontWeight: 'bold'})\r\n    );\r\n    $(\"#divOutput\").css(\"min-height\", $(\"#divOutput\").height());\r\n};\r\n```\r\n\r\nTo embed this in Quest, you would compress it down to this line, which can be included in your UI Initialisation script:\r\n<pre><code>JS.eval(\"$(function(){addText=function(t){null==getCurrentDiv()&&createNewDiv('left'),savingTranscript&&(SaveTranscript(t),ASLEvent('UpdateTranscriptString',t)),getCurrentDiv().append(t).find('span:contains(<b>You are in</b>)').each($(this).text($(this).text().replace(/^<b>You are in(?: an| a|)</b>\\s*(.)/i,function(t,e){return e.toUpperCase()})).css({<b>color:'lightgreen',fontWeight:'bold'</b>})),$('#divOutput').css('min-height',$('#divOutput').height())}});\")</code></pre>\r\n\r\nI've highlighted the parts that you might want to change:\r\n* `You are in` - text that it matches to find paragraphs to colour\r\n* `You are in(?: an| a|)` - text to remove from the start of the paragraph\r\n* `color:'lightgreen',fontWeight:'bold'` - style information to apply to matching paragraphs",
      "EditableFormat": "markdown",
      "HTML": "<p>The problem with filtering out object/rooms is that their names will show up a different colour from all the other rooms when the player is in them; because you're changing the colour the object displays as.</p>\n<p>I believe there's a feature which lets you give individual objects a colour for their object links; if you set this to \"red !important\" and the object/room's name to <code>&lt;span style=\"color:lightgreen\"&gt;cage&lt;/span&gt;</code> then it would show up red when displayed as an object link, but light green when displayed as text (such as in the \"You are in\" line).</p>\n<p>If it's causing problems with the player being able to use commands on an object, it might help to put the object's real alias (without the colour code) into its list of alternate aliases (I think that's on the 'Object' tab but not certain).</p>\n<p>The <code>GetDisplayName</code> option is probably better; because rather than changing the object's alias, it causes the object's name to be rendered differently when the player is inside it. But I'm afraid I don't have the desktop Quest editor here, so I can't give real advice on how to change the core functions.</p>\n<p>Hmm… an <strong>alternate method:</strong></p>\n<p>If you change it back to displaying \"You are in a …\" then you could use some javascript to search for that text and change it whenever text is output.</p>\n<p>The javascript would look like:</p>\n<pre><code>addText = function(text) {\n    if (getCurrentDiv() == null) {\n        createNewDiv(\"left\");\n    }\n    if (savingTranscript) {\n        SaveTranscript(text);\n        ASLEvent(\"UpdateTranscriptString\", text);\n    }\n    getCurrentDiv().append(text).find(\"span:contains(You are in)\").each(\n      $(this).text($(this).text().replace(/^You are in(?: an| a|)\\s*(.)/i, function (i,j) {return (j.toUpperCase());})).css({color: 'lightgreen', fontWeight: 'bold'})\n    );\n    $(\"#divOutput\").css(\"min-height\", $(\"#divOutput\").height());\n};\n</code></pre>\n<p>To embed this in Quest, you would compress it down to this line, which can be included in your UI Initialisation script:</p>\n<pre><code>JS.eval(\"$(function(){addText=function(t){null==getCurrentDiv()&amp;&amp;createNewDiv('left'),savingTranscript&amp;&amp;(SaveTranscript(t),ASLEvent('UpdateTranscriptString',t)),getCurrentDiv().append(t).find('span:contains(<b>You are in</b>)').each($(this).text($(this).text().replace(/^<b>You are in(?: an| a|)</b>\\s*(.)/i,function(t,e){return e.toUpperCase()})).css({<b>color:'lightgreen',fontWeight:'bold'</b>})),$('#divOutput').css('min-height',$('#divOutput').height())}});\")</code></pre>\n<p>I've highlighted the parts that you might want to change:</p>\n<ul>\n<li><code>You are in</code> - text that it matches to find paragraphs to colour</li>\n<li><code>You are in(?: an| a|)</code> - text to remove from the start of the paragraph</li>\n<li><code>color:'lightgreen',fontWeight:'bold'</code> - style information to apply to matching paragraphs</li>\n</ul>\n\n",
      "PostDate": "2020-04-05T11:34:00.1257538Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cea6caa4-8bc8-490f-be25-f18a90f293bf",
      "UserId": 385983,
      "Username": "JonQ",
      "AvatarUrl": "https://i.imgur.com/AXGkXqeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks, mrangel!  I think the \"GetDisplayAlias\" is the better way to go, 'cause I'm using it not only with Rooms, but also with certain artifacts, and so far it allows me to retain default prefixes (a/an/the) on the objects (artifacts).\r\n\r\nMy filter is working, but as you pointed out, I don't have the desired color for those Obj/Rooms on them when you enter.  It's okay with me, because something unusual is going on in the story at those points, and it's a tradeoff that is worth it to me for avoiding Error messages.\r\n\r\nWhew -- those JS!  I actually enjoy coding (and prefer it now WAY more than using the GUI interface), but the Java stuff you dropped there is beyond me.  (Instead of \"You are in...\" I opted for the room's name in bold for my game.)  At this point, I should probably play it safe.  This has been a tremendous help!!!  Thank you!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks, mrangel!  I think the \"GetDisplayAlias\" is the better way to go, 'cause I'm using it not only with Rooms, but also with certain artifacts, and so far it allows me to retain default prefixes (a/an/the) on the objects (artifacts).</p>\n<p>My filter is working, but as you pointed out, I don't have the desired color for those Obj/Rooms on them when you enter.  It's okay with me, because something unusual is going on in the story at those points, and it's a tradeoff that is worth it to me for avoiding Error messages.</p>\n<p>Whew -- those JS!  I actually enjoy coding (and prefer it now WAY more than using the GUI interface), but the Java stuff you dropped there is beyond me.  (Instead of \"You are in...\" I opted for the room's name in bold for my game.)  At this point, I should probably play it safe.  This has been a tremendous help!!!  Thank you!</p>\n\n",
      "PostDate": "2020-04-05T14:39:35.5502094Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a94b35d5-a8ff-4295-a3fb-e85b5b311041",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The javascript mostly isn't mine. When you use `msg()` in Quest, it adds some HTML for formatting, and then calls the built-in javascript function `addText` to actually display it on the screen.\r\n\r\nThe code I provided just replaces `addText` with a slightly modified version. I only changed:\r\n```\r\ngetCurrentDiv().append(text);\r\n```\r\nto:\r\n```\r\n    getCurrentDiv().append(text).find(\"span:contains(You are in)\").each(function () {\r\n      $(this).text($(this).text().replace(/^You are in(?: an| a|)\\s*(.)/i, function (i,j) {return (j.toUpperCase());})).css({color: 'lightgreen', fontWeight: 'bold'})\r\n    });\r\n```\r\nWhich breaks down as:\r\n* `getCurrentDiv` - find the current textbox being used for output (part of the original code)\r\n* `append(text)` - add the new text to the end of it (part of the original code)\r\n* `find(\"span:contains(You are in)\")` - find any paragraphs which contain the text \"You are in\"\r\n* `each (function () {` - call the following function on each matching paragraph\r\n     * `$(this)` - get the matching paragraph\r\n     * `.text(` - set its contents to the text generated by:\r\n        * `$(this)` - get the matching paragraph (again)\r\n        * `.text().` - get the text inside it\r\n        * `.replace(/^You are in(?: an| a|)\\s*(.)/i` - Find the phrase \"You are in\", optionally followed by \"a\" or \"an\", and then a single letter\r\n            * `function (i,j) {return (j.toUpperCase());}` - replace it with the final letter of the matched string, changed to upper case\r\n    * `.css({color: 'lightgreen', fontWeight: 'bold'})` - and apply bold and colour to that paragraph\r\n\r\nThis is a bit of an ugly workaround; including the \"You are in\" text just so that we can search for that text, change the colour of all the lines that contain it, and then remove it again. But it does mean that it only changes the colour of the room name in the line at the top of a description, and not anywhere else it might be used.",
      "EditableFormat": "markdown",
      "HTML": "<p>The javascript mostly isn't mine. When you use <code>msg()</code> in Quest, it adds some HTML for formatting, and then calls the built-in javascript function <code>addText</code> to actually display it on the screen.</p>\n<p>The code I provided just replaces <code>addText</code> with a slightly modified version. I only changed:</p>\n<pre><code>getCurrentDiv().append(text);\n</code></pre>\n<p>to:</p>\n<pre><code>    getCurrentDiv().append(text).find(\"span:contains(You are in)\").each(function () {\n      $(this).text($(this).text().replace(/^You are in(?: an| a|)\\s*(.)/i, function (i,j) {return (j.toUpperCase());})).css({color: 'lightgreen', fontWeight: 'bold'})\n    });\n</code></pre>\n<p>Which breaks down as:</p>\n<ul>\n<li><code>getCurrentDiv</code> - find the current textbox being used for output (part of the original code)</li>\n<li><code>append(text)</code> - add the new text to the end of it (part of the original code)</li>\n<li><code>find(\"span:contains(You are in)\")</code> - find any paragraphs which contain the text \"You are in\"</li>\n<li><code>each (function () {</code> - call the following function on each matching paragraph\n<ul>\n<li><code>$(this)</code> - get the matching paragraph</li>\n<li><code>.text(</code> - set its contents to the text generated by:\n<ul>\n<li><code>$(this)</code> - get the matching paragraph (again)</li>\n<li><code>.text().</code> - get the text inside it</li>\n<li><code>.replace(/^You are in(?: an| a|)\\s*(.)/i</code> - Find the phrase \"You are in\", optionally followed by \"a\" or \"an\", and then a single letter\n<ul>\n<li><code>function (i,j) {return (j.toUpperCase());}</code> - replace it with the final letter of the matched string, changed to upper case</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>.css({color: 'lightgreen', fontWeight: 'bold'})</code> - and apply bold and colour to that paragraph</li>\n</ul>\n</li>\n</ul>\n<p>This is a bit of an ugly workaround; including the \"You are in\" text just so that we can search for that text, change the colour of all the lines that contain it, and then remove it again. But it does mean that it only changes the colour of the room name in the line at the top of a description, and not anywhere else it might be used.</p>\n\n",
      "PostDate": "2020-04-05T16:17:37.3379374Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "76973536-5c5f-40b9-962a-f9838c7bcc7c",
      "UserId": 479542,
      "Username": "Iconaclast",
      "AvatarUrl": "https://i.imgur.com/OnE0M7Bb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey I was checking this post out and had a question of my own. I'm trying to change the color of strings in the Object/Locations panel.\r\n```\r\n\"<span style=\\\"color: red\\\">\" + CapFirst(GetDisplayAlias (room)) + \"</span>\"\r\n```\r\ndoes a great job of changing the color of the object to red, but if I try to use\r\n```\r\n\"<span style=\\\"color: black\\\">\" + CapFirst(GetDisplayAlias (room)) + \"</span>\"\r\n```\r\nOn the same alias afterwards it will not change from red to black, but instead stay red.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey I was checking this post out and had a question of my own. I'm trying to change the color of strings in the Object/Locations panel.</p>\n<pre><code>\"&lt;span style=\\\"color: red\\\"&gt;\" + CapFirst(GetDisplayAlias (room)) + \"&lt;/span&gt;\"\n</code></pre>\n<p>does a great job of changing the color of the object to red, but if I try to use</p>\n<pre><code>\"&lt;span style=\\\"color: black\\\"&gt;\" + CapFirst(GetDisplayAlias (room)) + \"&lt;/span&gt;\"\n</code></pre>\n<p>On the same alias afterwards it will not change from red to black, but instead stay red.</p>\n\n",
      "PostDate": "2020-05-12T10:13:15.629683Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "614aa11e-7c95-4966-9587-6ab7dc73648b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What do you mean by \"on the same alias\"? That code is right; but I don't know where you're putting it. Changing an attribute or return value will only make a visible change when it's actually returned.",
      "EditableFormat": "markdown",
      "HTML": "<p>What do you mean by \"on the same alias\"? That code is right; but I don't know where you're putting it. Changing an attribute or return value will only make a visible change when it's actually returned.</p>\n\n",
      "PostDate": "2020-05-12T10:36:43.1907207Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f01d7ace-53eb-4a34-a14c-10c2853688e2",
      "UserId": 479542,
      "Username": "Iconaclast",
      "AvatarUrl": "https://i.imgur.com/OnE0M7Bb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have an equip item function and unequip item function that I'm running on different objects(weapons/armors/swords/etc).\r\n\r\nIf I run the (item.alias = \"color red\") line from above in the equip function, the items name will turn red.\r\n\r\nUnfortunately when I run the (item.alias = \"color black\") line from above in the unequip function, the items name continues to stay red.\r\n\r\nHonestly I don't even really need to use color, if there's a way to unbold a name that would work great as well since making text bold is extremely simple.",
      "EditableFormat": "markdown",
      "HTML": "<p>I have an equip item function and unequip item function that I'm running on different objects(weapons/armors/swords/etc).</p>\n<p>If I run the (item.alias = \"color red\") line from above in the equip function, the items name will turn red.</p>\n<p>Unfortunately when I run the (item.alias = \"color black\") line from above in the unequip function, the items name continues to stay red.</p>\n<p>Honestly I don't even really need to use color, if there's a way to unbold a name that would work great as well since making text bold is extremely simple.</p>\n\n",
      "PostDate": "2020-05-12T10:52:18.2495693Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e398cb8a-2239-49c9-82dc-99253698e2c0",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wait... `item.alias = `?\r\n\r\nSo you're doing:\r\n```\r\nitem.alias = \"<span style=\\\"color: red\\\">\" + CapFirst(GetDisplayAlias (room)) + \"</span>\"\r\n```\r\n?\r\n\r\nSo if the item's alias was originally \"sword\", after running that function its alias is: `<span style=\"color: red;\">Sword</span>`, and after the second line it would be `<span style=\"color: black;\"><Span style=\"color: red;\">Sword</span></span>` (in which case it's red, because the innermost span takes priority)\r\n\r\nOr are you setting `item.listalias`?",
      "EditableFormat": "markdown",
      "HTML": "<p>Wait... <code>item.alias =</code>?</p>\n<p>So you're doing:</p>\n<pre><code>item.alias = \"&lt;span style=\\\"color: red\\\"&gt;\" + CapFirst(GetDisplayAlias (room)) + \"&lt;/span&gt;\"\n</code></pre>\n<p>?</p>\n<p>So if the item's alias was originally \"sword\", after running that function its alias is: <code>&lt;span style=\"color: red;\"&gt;Sword&lt;/span&gt;</code>, and after the second line it would be <code>&lt;span style=\"color: black;\"&gt;&lt;Span style=\"color: red;\"&gt;Sword&lt;/span&gt;&lt;/span&gt;</code> (in which case it's red, because the innermost span takes priority)</p>\n<p>Or are you setting <code>item.listalias</code>?</p>\n\n",
      "PostDate": "2020-05-12T12:53:48.8647736Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fd667839-9d24-49d0-91a9-2973eb9954c3",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "A thought about making an object change colour in the inventory pane if it's equipped:\r\n\r\n```\r\nitem.listalias = \"<span style=\\\"color: {either \" +item.name + \".equipped:red:black};\\\">\" + CapFirst (GetDisplayAlias (item)) + \"</span>\"\r\n```\r\nYou can just set the list alias once, and it will change colour depending on the value of the object's `equipped` flag.\r\n\r\nNote that you can *only* do this with the `listalias` variable; as the core function `GetListDisplayAlias` only runs the text processor if `listalias` exists.\r\n\r\nNote also that this might not force the list to refresh; but it shouldn't be hard to work around that.",
      "EditableFormat": "markdown",
      "HTML": "<p>A thought about making an object change colour in the inventory pane if it's equipped:</p>\n<pre><code>item.listalias = \"&lt;span style=\\\"color: {either \" +item.name + \".equipped:red:black};\\\"&gt;\" + CapFirst (GetDisplayAlias (item)) + \"&lt;/span&gt;\"\n</code></pre>\n<p>You can just set the list alias once, and it will change colour depending on the value of the object's <code>equipped</code> flag.</p>\n<p>Note that you can <em>only</em> do this with the <code>listalias</code> variable; as the core function <code>GetListDisplayAlias</code> only runs the text processor if <code>listalias</code> exists.</p>\n<p>Note also that this might not force the list to refresh; but it shouldn't be hard to work around that.</p>\n\n",
      "PostDate": "2020-05-12T16:35:58.547404Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b4a79084-d509-45f5-ab15-0c412f15377d",
      "UserId": 479542,
      "Username": "Iconaclast",
      "AvatarUrl": "https://i.imgur.com/OnE0M7Bb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I was 100% doing\r\n```\r\nitem.alias = \"<span style=\\\"color: red\\\">\" + GetDisplayAlias (item) + \"</span>\"\r\n```\r\nSo the red was taking priority.\r\n```\r\nitem.listalias = \"<span style=\\\"color: {either \" +item.name + \".equipped:red:black};\\\">\" + CapFirst (GetDisplayAlias (item)) + \"</span>\"\r\n```\r\nThis looks interesting, so this add's both red and black options to the listalias, then checks the boolean equiped and picks one based on if its true or false? \r\n\r\nI plugged it into my equip/unequip functions and everything seems to be working! How on earth does this work??",
      "EditableFormat": "markdown",
      "HTML": "<p>I was 100% doing</p>\n<pre><code>item.alias = \"&lt;span style=\\\"color: red\\\"&gt;\" + GetDisplayAlias (item) + \"&lt;/span&gt;\"\n</code></pre>\n<p>So the red was taking priority.</p>\n<pre><code>item.listalias = \"&lt;span style=\\\"color: {either \" +item.name + \".equipped:red:black};\\\"&gt;\" + CapFirst (GetDisplayAlias (item)) + \"&lt;/span&gt;\"\n</code></pre>\n<p>This looks interesting, so this add's both red and black options to the listalias, then checks the boolean equiped and picks one based on if its true or false?</p>\n<p>I plugged it into my equip/unequip functions and everything seems to be working! How on earth does this work??</p>\n\n",
      "PostDate": "2020-05-12T20:05:54.4941132Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7a6514d4-535a-4dd8-8060-36fecfdc9b56",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It sets the listalias to a string like: `<span style=\"color: {either sword7.equipped:red:black}\">Sword</span>`, with the name of the item in it.\r\n\r\nWhen the inventory pane is refreshed (which usually happens every turn, but sometimes doesn't; I've not been able to figure out why), it uses this function internally:\r\n```\r\n  <function name=\"GetListDisplayAlias\" type=\"string\" parameters=\"obj\">\r\n    <![CDATA[\r\n    if (HasString(obj, \"listalias\")) {\r\n      // Modified by KV\r\n      result = ProcessText(obj.listalias)\r\n    }\r\n    else {\r\n      result = GetDisplayAlias(obj)\r\n    }\r\n    return (result)\r\n  ]]>\r\n  </function>\r\n```\r\n\r\nSo if the object has a `listalias` attribute, it runs `ProcessText` on it first, and sends the result to the browser.\r\n\r\nProcessText searches the string it's been given for a `{`, and then checks if the word that follows that one the defined text processor commands. In this case, `{either a:b:c}` uses `eval()` to get the value of expression a (in this case `sword7.equipped`); if that's true it replaces that expression with b; otherwise it replaces it with c.\r\n\r\nSo after calling ProcessText,  `GetListDisplayAlias` returns either `<span style=\"color: red\">Sword</span>` or `<span style=\"color: black\">Sword</span>`\r\n\r\n<hr />\r\n\r\nThe text processor is pretty powerful; but can also be rather slow. So depending on your circumstances, it might be better to use your original code in the form:\r\n```\r\nitem.listalias = \"<span style=\\\"color: red\\\">\" + GetDisplayAlias (item) + \"</span>\"\r\n```\r\nBecause this one changes only the `listalias` and not the `alias` of the item, `GetDisplayAlias(item)` will return just the item's original alias, without any colour applied. So you could change it back to the default colour by doing either `item.listalias = GetDisplayAlias (item)`, or just `item.listalias = null` (the latter removes the listalias, causing the unmodified alias to appear in the sidebar).",
      "EditableFormat": "markdown",
      "HTML": "<p>It sets the listalias to a string like: <code>&lt;span style=\"color: {either sword7.equipped:red:black}\"&gt;Sword&lt;/span&gt;</code>, with the name of the item in it.</p>\n<p>When the inventory pane is refreshed (which usually happens every turn, but sometimes doesn't; I've not been able to figure out why), it uses this function internally:</p>\n<pre><code>  &lt;function name=\"GetListDisplayAlias\" type=\"string\" parameters=\"obj\"&gt;\n    &lt;![CDATA[\n    if (HasString(obj, \"listalias\")) {\n      // Modified by KV\n      result = ProcessText(obj.listalias)\n    }\n    else {\n      result = GetDisplayAlias(obj)\n    }\n    return (result)\n  ]]&gt;\n  &lt;/function&gt;\n</code></pre>\n<p>So if the object has a <code>listalias</code> attribute, it runs <code>ProcessText</code> on it first, and sends the result to the browser.</p>\n<p>ProcessText searches the string it's been given for a <code>{</code>, and then checks if the word that follows that one the defined text processor commands. In this case, <code>{either a:b:c}</code> uses <code>eval()</code> to get the value of expression a (in this case <code>sword7.equipped</code>); if that's true it replaces that expression with b; otherwise it replaces it with c.</p>\n<p>So after calling ProcessText,  <code>GetListDisplayAlias</code> returns either <code>&lt;span style=\"color: red\"&gt;Sword&lt;/span&gt;</code> or <code>&lt;span style=\"color: black\"&gt;Sword&lt;/span&gt;</code></p>\n<hr>\n<p>The text processor is pretty powerful; but can also be rather slow. So depending on your circumstances, it might be better to use your original code in the form:</p>\n<pre><code>item.listalias = \"&lt;span style=\\\"color: red\\\"&gt;\" + GetDisplayAlias (item) + \"&lt;/span&gt;\"\n</code></pre>\n<p>Because this one changes only the <code>listalias</code> and not the <code>alias</code> of the item, <code>GetDisplayAlias(item)</code> will return just the item's original alias, without any colour applied. So you could change it back to the default colour by doing either <code>item.listalias = GetDisplayAlias (item)</code>, or just <code>item.listalias = null</code> (the latter removes the listalias, causing the unmodified alias to appear in the sidebar).</p>\n\n",
      "PostDate": "2020-05-12T20:44:23.3666565Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7428689b-b96e-4c7c-bd0a-9e38851b67e2",
      "UserId": 479542,
      "Username": "Iconaclast",
      "AvatarUrl": "https://i.imgur.com/OnE0M7Bb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think I get it. So the check the browser uses, sends it through the ProcessText function first if it has a listalias. Then the process text function reads the brackets in the string as an expression ```\"{textprocessorcommand + variable:a:b:c:etc}\"```. Then depending on the ```textprocessorcommand``` it will select a:b:c:etc.\r\n\r\nIs that right?",
      "EditableFormat": "markdown",
      "HTML": "<p>I think I get it. So the check the browser uses, sends it through the ProcessText function first if it has a listalias. Then the process text function reads the brackets in the string as an expression <code>\"{textprocessorcommand + variable:a:b:c:etc}\"</code>. Then depending on the <code>textprocessorcommand</code> it will select a:b:c:etc.</p>\n<p>Is that right?</p>\n\n",
      "PostDate": "2020-05-12T22:04:07.2218312Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3e818e54-dd7c-4792-a554-957ff9c455d8",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think you got it.\r\n\r\nYou can use text processor commands in almost any text that's sent to the browser; they're the usual way to change part of an object or room's description without needing to make a script. Because they're run before sending anything to the browser, it's fine to use them to alter part of an HTML tag.",
      "EditableFormat": "markdown",
      "HTML": "<p>I think you got it.</p>\n<p>You can use text processor commands in almost any text that's sent to the browser; they're the usual way to change part of an object or room's description without needing to make a script. Because they're run before sending anything to the browser, it's fine to use them to alter part of an HTML tag.</p>\n\n",
      "PostDate": "2020-05-12T22:43:00.6005562Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
