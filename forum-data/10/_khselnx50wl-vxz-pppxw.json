{
  "Topic": {
    "TopicId": "_khselnx50wl-vxz-pppxw",
    "ForumId": "10",
    "Title": "Problems repeating verbs/commands? (resolved)",
    "LastUpdated": "2017-08-14T20:41:10.6817486Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "fc41a7c1-6ce8-4131-a57e-4d9d385ccbac",
      "UserId": 316594,
      "Username": "graveyardtrash",
      "AvatarUrl": "http://i.imgur.com/r4tNgvub.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi. I started using Quest today and I'm having a frustrating/confusing problem with verbs. I'm trying to write some interactions with NPCs and the following action is working just fine:\r\n\r\n    attack; fight; battle; combat; hit; challenge; kill    \r\nIf the player types in any of those words it will successfully print a message with the npc's reaction. However the following verb will not work at all:\r\n\r\n    flirt; flirt with; hit on; compliment; seduce    \r\n(I guess Quest would just prefer that there's no romance in my game, haha.) When the player uses a command with one of the above words, it will print the message in game: \"You can't flirt; flirt with; hit on; compliment; seduce\" or it will print: \"You can't hit on; flirt with; flirt.\" Weirdly, even when I delete the verb altogether, if the player uses a command with one of the above words it will still print the same error. And for some reason when I delete the verb and make a new one, if the new verb has any of the above words it will automatically change it back to the sequence \"hit on; flirt with; flirt.\"\r\n\r\nDoes anyone have any idea why this is happening or how to resolve it? I'm using the online editor as I have a Mac.\r\n\r\nMy other question, just out of interest, is whether it's possible to change what a verb does if it's clicked on more than once. So for example choosing to attack an npc would print a message with their reaction, but attacking them again would lead to a message like 'You've already tried that'.\r\n\r\nThanks in advance to anyone who can help me with this.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi. I started using Quest today and I'm having a frustrating/confusing problem with verbs. I'm trying to write some interactions with NPCs and the following action is working just fine:</p>\n<pre><code>attack; fight; battle; combat; hit; challenge; kill    \n</code></pre>\n<p>If the player types in any of those words it will successfully print a message with the npc's reaction. However the following verb will not work at all:</p>\n<pre><code>flirt; flirt with; hit on; compliment; seduce    \n</code></pre>\n<p>(I guess Quest would just prefer that there's no romance in my game, haha.) When the player uses a command with one of the above words, it will print the message in game: \"You can't flirt; flirt with; hit on; compliment; seduce\" or it will print: \"You can't hit on; flirt with; flirt.\" Weirdly, even when I delete the verb altogether, if the player uses a command with one of the above words it will still print the same error. And for some reason when I delete the verb and make a new one, if the new verb has any of the above words it will automatically change it back to the sequence \"hit on; flirt with; flirt.\"</p>\n<p>Does anyone have any idea why this is happening or how to resolve it? I'm using the online editor as I have a Mac.</p>\n<p>My other question, just out of interest, is whether it's possible to change what a verb does if it's clicked on more than once. So for example choosing to attack an npc would print a message with their reaction, but attacking them again would lead to a message like 'You've already tried that'.</p>\n<p>Thanks in advance to anyone who can help me with this.</p>\n\n",
      "PostDate": "2017-08-14T20:41:10.6817486Z",
      "LastEditDate": "2017-08-15T09:45:27.765879Z",
      "link": null
    },
    {
      "PostId": "91dd82b6-64fb-4c24-91b7-a872d5625b2c",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi graveyardtrash. I'll deal with the second question, as that's the one I am more confident in answering.\r\nYou set up a flag on the object in question, then when you use the verb, check the flag, if it's inactive ---> run script, else print the message. Here's an example from my game where you lever a tree stump over revealing a hole into a maze. I put the check on, because the tree stump turns up again later in the game.\r\n```\r\nif (GetBoolean(tree_stump, \"over\")) {\r\n  msg (\"You have already done that.\")\r\n}\r\nelse {\r\n  SetObjectFlagOn (tree_stump, \"over\")\r\n  MoveObject (hole1, grassy_knoll)\r\n  MoveObject (tree_stump, cliff_face)\r\n  MakeExitVisible (ExitMaze1Down)\r\n  msg (\"You lever the stump of a once mighty oak over the side of the cliff, revealing a hole going {exit:ExitMaze1Down}.\")\r\n}\r\n```\r\nHope that helps.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi graveyardtrash. I'll deal with the second question, as that's the one I am more confident in answering.<br>\nYou set up a flag on the object in question, then when you use the verb, check the flag, if it's inactive ---&gt; run script, else print the message. Here's an example from my game where you lever a tree stump over revealing a hole into a maze. I put the check on, because the tree stump turns up again later in the game.</p>\n<pre><code>if (GetBoolean(tree_stump, \"over\")) {\n  msg (\"You have already done that.\")\n}\nelse {\n  SetObjectFlagOn (tree_stump, \"over\")\n  MoveObject (hole1, grassy_knoll)\n  MoveObject (tree_stump, cliff_face)\n  MakeExitVisible (ExitMaze1Down)\n  msg (\"You lever the stump of a once mighty oak over the side of the cliff, revealing a hole going {exit:ExitMaze1Down}.\")\n}\n</code></pre>\n<p>Hope that helps.</p>\n\n",
      "PostDate": "2017-08-14T21:09:14.070432Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6f4cfb98-e843-45c7-b73f-656517c7f138",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "1) In addition to deleting the verb, also delete the verb on every object that uses that verb.  This should reset things to the default.  Better yet, use commands.\r\n\r\n2) Use the \"First time\" option -- first time, Quest will run certain scripts; then after that it will do another set of scripts.",
      "EditableFormat": "markdown",
      "HTML": "<ol>\n<li>\n<p>In addition to deleting the verb, also delete the verb on every object that uses that verb.  This should reset things to the default.  Better yet, use commands.</p>\n</li>\n<li>\n<p>Use the \"First time\" option -- first time, Quest will run certain scripts; then after that it will do another set of scripts.</p>\n</li>\n</ol>\n\n",
      "PostDate": "2017-08-14T21:23:52.5541349Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "92d85113-09f9-498b-b760-7f174072b3ae",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Are you using the desktop version? If so delete the verb object which is under the game object on the left.",
      "EditableFormat": "markdown",
      "HTML": "<p>Are you using the desktop version? If so delete the verb object which is under the game object on the left.</p>\n\n",
      "PostDate": "2017-08-14T21:40:33.4610457Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "67b80459-1b83-466a-8aa6-7a47a680603a",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "no idea what's going on with your 'Q1', but there's one mistake I can point out with it (maybe this will fix it for you, but there's likely more going on with it, for why it's not working):\r\n\r\nquest has to parse your input (indirect: using/doing the Verb, or, direct: using/doing a Command)\r\n\r\nso, this means that you must do the longer sub-pattern first, when you got multiple sub-patterns containing the same initial sequence:\r\n\r\n**flirt; flirt with**; hit on; compliment; seduce // this is wrong: 'flirt with' has to go BEFORE (to the left of) 'flirt'\r\n\r\n**flirt with; flirt**; hit on; compliment; seduce // this is correct\r\n\r\n------------\r\n\r\npossibly some of these words (flirt; flirt with; hit on; compliment; seduce) are already built-in Verbs/Commands, and so, this can possibly cause issues too...",
      "EditableFormat": "markdown",
      "HTML": "<p>no idea what's going on with your 'Q1', but there's one mistake I can point out with it (maybe this will fix it for you, but there's likely more going on with it, for why it's not working):</p>\n<p>quest has to parse your input (indirect: using/doing the Verb, or, direct: using/doing a Command)</p>\n<p>so, this means that you must do the longer sub-pattern first, when you got multiple sub-patterns containing the same initial sequence:</p>\n<p><strong>flirt; flirt with</strong>; hit on; compliment; seduce // this is wrong: 'flirt with' has to go BEFORE (to the left of) 'flirt'</p>\n<p><strong>flirt with; flirt</strong>; hit on; compliment; seduce // this is correct</p>\n<hr>\n<p>possibly some of these words (flirt; flirt with; hit on; compliment; seduce) are already built-in Verbs/Commands, and so, this can possibly cause issues too...</p>\n\n",
      "PostDate": "2017-08-14T23:29:46.3159755Z",
      "LastEditDate": "2017-08-14T23:31:37.6039859Z",
      "link": null
    },
    {
      "PostId": "3f22fb3a-8ed9-4a97-a166-878fe4bb9ed8",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "HK edited:\r\n\r\nadded in code for using a String Attribute for multiple states (as alternative to an Integer Attribute)\r\nadded in quick commentary/note of List/Dictionary being able to do multiple states at the same time\r\n\r\n--------------\r\n\r\nas for your 'Q2', there's a few ways of handling it:\r\n\r\n1. using the built-in 'firsttime/otherwise' Function (2 states)\r\n\r\n```\r\n<object name=\"orc\">\r\n  <attr name=\"fight\" type=\"script\">\r\n    // the orc's 2 states:\r\n    // the orc is alive: firsttime { /* scripting */ }\r\n    // the orc is dead: otherwise { /* scripting */ }\r\n    firsttime {\r\n      msg (\"You fight and kill the orc\")\r\n    } otherwise {\r\n      msg (\"The orc is already/still dead, silly.\")\r\n    }\r\n  </attr>\r\n</object>\r\n\r\n<verb>\r\n  <property>fight</property>\r\n  <pattern>fight</pattern>\r\n  <defaultexpression>You can't fight that!</defaultexpression>\r\n</verb>\r\n```\r\n\r\n2. using a Boolean Attribute (2 states):\r\n\r\n```\r\n<object name=\"orc\">\r\n  <attr name=\"dead\" type=\"boolean\">false</attr>\r\n  <attr name=\"fight\" type=\"script\">\r\n    // the orc's 2 states:\r\n    // the orc is alive: orc.dead = false\r\n    // the orc is dead: orc.dead = true\r\n    if (orc.dead) { // if (TRUE) // in its full long form, it is this: if (orc.dead = true) { // the orc is dead\r\n      msg (\"The orc is already/still dead, silly.\")\r\n    } else { // if (FALSE) // the orc is alive\r\n      orc.dead = true // you need to actually set/re-set/change/alter the state (orc.dead) of the orc to actually be dead (orc.dead = true) // the orc's state as being 'alive', is: orc.dead = false\r\n      msg (\"You fight and kill the orc\")\r\n    }\r\n  </attr>\r\n</object>\r\n\r\n<verb>\r\n  <property>fight</property>\r\n  <pattern>fight</pattern>\r\n  <defaultexpression>You can't fight that!</defaultexpression>\r\n</verb>\r\n\r\n// ------------------------------------\r\n\r\n// or, this slightly different logic design might be more preferred:\r\n\r\n<object name=\"orc\">\r\n  <attr name=\"dead\" type=\"boolean\">false</attr>\r\n  <attr name=\"fight\" type=\"script\">\r\n    // the orc's 2 states:\r\n    // the orc is alive: orc.dead = false\r\n    // the orc is dead: orc.dead = true\r\n    if (not orc.dead) { // if (not true) // if (FALSE) // in its full long form, it is this: 'if (not orc.dead = true) {' or 'if (orc.dead = false) {' or 'if (orc.dead <> true) :' // the orc is alive\r\n      orc.dead = true // you need to actually set/re-set/change/alter the state (orc.dead) of the orc to actually be dead (orc.dead = true) // the orc's state as being 'alive', is: orc.dead = false\r\n      msg (\"You fight and kill the orc\")\r\n    } else { // if (TRUE) // if (orc.dead) { // if (orc.dead = true) { // the orc is dead\r\n      msg (\"The orc is already/still dead, silly.\")\r\n    }\r\n  </attr>\r\n</object>\r\n\r\n<verb>\r\n  <property>fight</property>\r\n  <pattern>fight</pattern>\r\n  <defaultexpression>You can't fight that!</defaultexpression>\r\n</verb>\r\n```\r\n\r\n3. using an Integer Attribute (for/when having MORE THAN 2 states, and though, while no reason for doing so, you can also use an Integer Attribute for, 1 or 2, states, as well, lol. But, really, you use an Integer Attribute for when it's needed: more than 2 states):\r\n\r\n```\r\n<object name=\"player\">\r\n  <attr name=\"current_experience\" type=\"int\">0</attr>\r\n  <attr name=\"current_currency\" type=\"int\">0</attr>\r\n</object>\r\n\r\n<object name=\"orc\">\r\n  <attr name=\"experience\" type=\"int\">25</attr>\r\n  <attr name=\"currency\" type=\"int\">75</attr>\r\n  <attr name=\"dead\" type=\"int\">0</attr>\r\n  <attr name=\"fight\" type=\"script\">\r\n    // the orc's 3 states:\r\n    // orc is alive: orc.dead = 0\r\n    // orc is dead, but NOT looted yet: orc.dead = 1\r\n    // orc is dead AND IS looted: orc.dead = 2\r\n    if (orc.dead = 0) { // orc is alive\r\n      orc.dead = 1 // need to actually set the orc as now being dead-but-not-looted-yet\r\n      msg (\"You fight and kill the orc\")\r\n    } else if (orc.dead = 1) { // orc is dead but not yet looted\r\n      player.current_experience = player.current_experience + orc.experience // you loot/get the orc's experience\r\n      player.current_currency = player.current_curreny + orc.currency // you loot/get the orc's currency\r\n      orc.dead = 2 // need to actually set the orc as now being dead-and-looted\r\n      msg (\"You loot the corpse of the dead orc\")\r\n    } else { // if (orc.dead = 2) { // orc is dead and looted\r\n      msg (\"The orc is already/still dead, and it's already been looted too, silly.\")\r\n    }\r\n  </attr>\r\n</object>\r\n\r\n<verb>\r\n  <property>fight</property>\r\n  <pattern>fight</pattern>\r\n  <defaultexpression>You can't fight that!</defaultexpression>\r\n</verb>\r\n```\r\n\r\n4. using a String Attribute for more than 2 states (again can be used for 1 or 2 states as well, but it's really for more than 2 states):\r\n\r\n```\r\n<object name=\"player\">\r\n  <attr name=\"current_experience\" type=\"int\">0</attr>\r\n  <attr name=\"current_currency\" type=\"int\">0</attr>\r\n</object>\r\n\r\n<object name=\"orc\">\r\n  <attr name=\"experience\" type=\"int\">25</attr>\r\n  <attr name=\"currency\" type=\"int\">75</attr>\r\n  <attr name=\"dead\" type=\"string\">alive</attr>\r\n  <attr name=\"fight\" type=\"script\">\r\n    // the orc's 3 states:\r\n    // orc is alive: orc.dead = \"alive\"\r\n    // orc is dead, but NOT looted yet: orc.dead = \"dead_but_not_looted\"\r\n    // orc is dead AND IS looted: orc.dead = \"dead_and_looted\"\r\n    if (orc.dead = \"alive\") { // orc is alive\r\n      orc.dead = \"dead_but_not_looted\" // need to actually set the orc as now being dead-but-not-looted-yet\r\n      msg (\"You fight and kill the orc\")\r\n    } else if (orc.dead = \"dead_but_not_looted\") { // orc is dead but not yet looted\r\n      player.current_experience = player.current_experience + orc.experience // you loot/get the orc's experience\r\n      player.current_currency = player.current_curreny + orc.currency // you loot/get the orc's currency\r\n      orc.dead =  \"dead_and_looted\" // need to actually set the orc as now being dead-and-looted\r\n      msg (\"You loot the corpse of the dead orc\")\r\n    } else { // if (orc.dead = \"dead_and_looted\") { // orc is dead and looted\r\n      msg (\"The orc is already/still dead, and it's already been looted too, silly.\")\r\n    }\r\n  </attr>\r\n</object>\r\n\r\n<verb>\r\n  <property>fight</property>\r\n  <pattern>fight</pattern>\r\n  <defaultexpression>You can't fight that!</defaultexpression>\r\n</verb>\r\n```\r\n\r\n5. List/Dictionary Attributes:\r\n\r\nthese enable you to have multiple states at the same time\r\n\r\n(too lazy to do some code examples for it though)",
      "EditableFormat": "markdown",
      "HTML": "<p>HK edited:</p>\n<p>added in code for using a String Attribute for multiple states (as alternative to an Integer Attribute)<br>\nadded in quick commentary/note of List/Dictionary being able to do multiple states at the same time</p>\n<hr>\n<p>as for your 'Q2', there's a few ways of handling it:</p>\n<ol>\n<li>using the built-in 'firsttime/otherwise' Function (2 states)</li>\n</ol>\n<pre><code>&lt;object name=\"orc\"&gt;\n  &lt;attr name=\"fight\" type=\"script\"&gt;\n    // the orc's 2 states:\n    // the orc is alive: firsttime { /* scripting */ }\n    // the orc is dead: otherwise { /* scripting */ }\n    firsttime {\n      msg (\"You fight and kill the orc\")\n    } otherwise {\n      msg (\"The orc is already/still dead, silly.\")\n    }\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;fight&lt;/property&gt;\n  &lt;pattern&gt;fight&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't fight that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n</code></pre>\n<ol start=\"2\">\n<li>using a Boolean Attribute (2 states):</li>\n</ol>\n<pre><code>&lt;object name=\"orc\"&gt;\n  &lt;attr name=\"dead\" type=\"boolean\"&gt;false&lt;/attr&gt;\n  &lt;attr name=\"fight\" type=\"script\"&gt;\n    // the orc's 2 states:\n    // the orc is alive: orc.dead = false\n    // the orc is dead: orc.dead = true\n    if (orc.dead) { // if (TRUE) // in its full long form, it is this: if (orc.dead = true) { // the orc is dead\n      msg (\"The orc is already/still dead, silly.\")\n    } else { // if (FALSE) // the orc is alive\n      orc.dead = true // you need to actually set/re-set/change/alter the state (orc.dead) of the orc to actually be dead (orc.dead = true) // the orc's state as being 'alive', is: orc.dead = false\n      msg (\"You fight and kill the orc\")\n    }\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;fight&lt;/property&gt;\n  &lt;pattern&gt;fight&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't fight that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n\n// ------------------------------------\n\n// or, this slightly different logic design might be more preferred:\n\n&lt;object name=\"orc\"&gt;\n  &lt;attr name=\"dead\" type=\"boolean\"&gt;false&lt;/attr&gt;\n  &lt;attr name=\"fight\" type=\"script\"&gt;\n    // the orc's 2 states:\n    // the orc is alive: orc.dead = false\n    // the orc is dead: orc.dead = true\n    if (not orc.dead) { // if (not true) // if (FALSE) // in its full long form, it is this: 'if (not orc.dead = true) {' or 'if (orc.dead = false) {' or 'if (orc.dead &lt;&gt; true) :' // the orc is alive\n      orc.dead = true // you need to actually set/re-set/change/alter the state (orc.dead) of the orc to actually be dead (orc.dead = true) // the orc's state as being 'alive', is: orc.dead = false\n      msg (\"You fight and kill the orc\")\n    } else { // if (TRUE) // if (orc.dead) { // if (orc.dead = true) { // the orc is dead\n      msg (\"The orc is already/still dead, silly.\")\n    }\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;fight&lt;/property&gt;\n  &lt;pattern&gt;fight&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't fight that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n</code></pre>\n<ol start=\"3\">\n<li>using an Integer Attribute (for/when having MORE THAN 2 states, and though, while no reason for doing so, you can also use an Integer Attribute for, 1 or 2, states, as well, lol. But, really, you use an Integer Attribute for when it's needed: more than 2 states):</li>\n</ol>\n<pre><code>&lt;object name=\"player\"&gt;\n  &lt;attr name=\"current_experience\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"current_currency\" type=\"int\"&gt;0&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"orc\"&gt;\n  &lt;attr name=\"experience\" type=\"int\"&gt;25&lt;/attr&gt;\n  &lt;attr name=\"currency\" type=\"int\"&gt;75&lt;/attr&gt;\n  &lt;attr name=\"dead\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"fight\" type=\"script\"&gt;\n    // the orc's 3 states:\n    // orc is alive: orc.dead = 0\n    // orc is dead, but NOT looted yet: orc.dead = 1\n    // orc is dead AND IS looted: orc.dead = 2\n    if (orc.dead = 0) { // orc is alive\n      orc.dead = 1 // need to actually set the orc as now being dead-but-not-looted-yet\n      msg (\"You fight and kill the orc\")\n    } else if (orc.dead = 1) { // orc is dead but not yet looted\n      player.current_experience = player.current_experience + orc.experience // you loot/get the orc's experience\n      player.current_currency = player.current_curreny + orc.currency // you loot/get the orc's currency\n      orc.dead = 2 // need to actually set the orc as now being dead-and-looted\n      msg (\"You loot the corpse of the dead orc\")\n    } else { // if (orc.dead = 2) { // orc is dead and looted\n      msg (\"The orc is already/still dead, and it's already been looted too, silly.\")\n    }\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;fight&lt;/property&gt;\n  &lt;pattern&gt;fight&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't fight that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n</code></pre>\n<ol start=\"4\">\n<li>using a String Attribute for more than 2 states (again can be used for 1 or 2 states as well, but it's really for more than 2 states):</li>\n</ol>\n<pre><code>&lt;object name=\"player\"&gt;\n  &lt;attr name=\"current_experience\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"current_currency\" type=\"int\"&gt;0&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"orc\"&gt;\n  &lt;attr name=\"experience\" type=\"int\"&gt;25&lt;/attr&gt;\n  &lt;attr name=\"currency\" type=\"int\"&gt;75&lt;/attr&gt;\n  &lt;attr name=\"dead\" type=\"string\"&gt;alive&lt;/attr&gt;\n  &lt;attr name=\"fight\" type=\"script\"&gt;\n    // the orc's 3 states:\n    // orc is alive: orc.dead = \"alive\"\n    // orc is dead, but NOT looted yet: orc.dead = \"dead_but_not_looted\"\n    // orc is dead AND IS looted: orc.dead = \"dead_and_looted\"\n    if (orc.dead = \"alive\") { // orc is alive\n      orc.dead = \"dead_but_not_looted\" // need to actually set the orc as now being dead-but-not-looted-yet\n      msg (\"You fight and kill the orc\")\n    } else if (orc.dead = \"dead_but_not_looted\") { // orc is dead but not yet looted\n      player.current_experience = player.current_experience + orc.experience // you loot/get the orc's experience\n      player.current_currency = player.current_curreny + orc.currency // you loot/get the orc's currency\n      orc.dead =  \"dead_and_looted\" // need to actually set the orc as now being dead-and-looted\n      msg (\"You loot the corpse of the dead orc\")\n    } else { // if (orc.dead = \"dead_and_looted\") { // orc is dead and looted\n      msg (\"The orc is already/still dead, and it's already been looted too, silly.\")\n    }\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;fight&lt;/property&gt;\n  &lt;pattern&gt;fight&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't fight that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n</code></pre>\n<ol start=\"5\">\n<li>List/Dictionary Attributes:</li>\n</ol>\n<p>these enable you to have multiple states at the same time</p>\n<p>(too lazy to do some code examples for it though)</p>\n\n",
      "PostDate": "2017-08-14T23:58:42.9994108Z",
      "LastEditDate": "2017-08-17T19:17:11.1163726Z",
      "link": null
    },
    {
      "PostId": "7113a22f-380c-4e04-88a5-d9d66dd3c60b",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "HK is right -- \"hit\" is a built-in verb.",
      "EditableFormat": "markdown",
      "HTML": "<p>HK is right -- \"hit\" is a built-in verb.</p>\n\n",
      "PostDate": "2017-08-15T00:27:05.9718705Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2d077d2e-e199-49ca-9710-c38908988095",
      "UserId": 316594,
      "Username": "graveyardtrash",
      "AvatarUrl": "http://i.imgur.com/r4tNgvub.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you everyone. The built in firsttime function helped with my second question - I just wasn't aware that the function was there.\r\n\r\nAs for the first issue, I think it was the 'hit on' verb causing the problem as Dcoder and hegemonkhan suggested. Might have either clashed with the attack custom verb or a built in verb. Removing 'hit on' from the sequence and adding it as a separate command resolved the issue.\r\n\r\nHooray! Now the player can attempt to seduce some guards to get through an entrance and fail comically!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you everyone. The built in firsttime function helped with my second question - I just wasn't aware that the function was there.</p>\n<p>As for the first issue, I think it was the 'hit on' verb causing the problem as Dcoder and hegemonkhan suggested. Might have either clashed with the attack custom verb or a built in verb. Removing 'hit on' from the sequence and adding it as a separate command resolved the issue.</p>\n<p>Hooray! Now the player can attempt to seduce some guards to get through an entrance and fail comically!</p>\n\n",
      "PostDate": "2017-08-15T09:44:55.387184Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d42768b8-a34a-454d-a645-72015de38f6e",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Anything for love!",
      "EditableFormat": "markdown",
      "HTML": "<p>Anything for love!</p>\n\n",
      "PostDate": "2017-08-15T10:39:30.7568017Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "47980f15-114b-4ef5-ae6b-97d65f41ba02",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ graveyardtrash:\r\n\r\nsome links of some/most of the built-in stuff (Elements and their Attributes, Functions, Scripts / Script Attributes, and other Attributes) you can use:\r\n\r\n(all of this stuff is in the GUI/Editor too, but some of it is hard to find within the GUI/Editor... at least for me... easier for me to just code it in directly using these links, lol. I don't use the GUI/Editor for much anymore, now that I've learned to code, hehe)\r\n\r\nhttp://docs.textadventures.co.uk/quest/ (main doc page)\r\n\r\nhttp://docs.textadventures.co.uk/quest/elements/\r\n\r\nhttp://docs.textadventures.co.uk/quest/types/\r\n\r\nhttp://docs.textadventures.co.uk/quest/elements/game.html\r\nhttp://docs.textadventures.co.uk/quest/elements/object.html\r\nhttp://docs.textadventures.co.uk/quest/elements/exit.html\r\n\r\nhttp://docs.textadventures.co.uk/quest/scripts/\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/ (categorical order)\r\nhttp://docs.textadventures.co.uk/quest/functions/index_allfunctions.html (alpabetical order)\r\n\r\nhttp://docs.textadventures.co.uk/quest/elements/object.html (scroll down to the bottom section, as these are the Object Types / Types for Objects: the container types and other various types)\r\n\r\n----------\r\n\r\nalso:\r\n\r\nwithin the GUI/Editor, in the bottom left corner is:\r\n\r\nFilter -> Show library elements -> (toggle this \"on\" / have the box be checked in) (this is a toggle which hides/reveals the built-in stuff)\r\n\r\nwhich will show/reveal now all the built-in stuff as light grey text in the \"tree of stuff\" on the left side",
      "EditableFormat": "markdown",
      "HTML": "<p>@ graveyardtrash:</p>\n<p>some links of some/most of the built-in stuff (Elements and their Attributes, Functions, Scripts / Script Attributes, and other Attributes) you can use:</p>\n<p>(all of this stuff is in the GUI/Editor too, but some of it is hard to find within the GUI/Editor... at least for me... easier for me to just code it in directly using these links, lol. I don't use the GUI/Editor for much anymore, now that I've learned to code, hehe)</p>\n<p>http://docs.textadventures.co.uk/quest/ (main doc page)</p>\n<p>http://docs.textadventures.co.uk/quest/elements/</p>\n<p>http://docs.textadventures.co.uk/quest/types/</p>\n<p>http://docs.textadventures.co.uk/quest/elements/game.html<br>\nhttp://docs.textadventures.co.uk/quest/elements/object.html<br>\nhttp://docs.textadventures.co.uk/quest/elements/exit.html</p>\n<p>http://docs.textadventures.co.uk/quest/scripts/</p>\n<p>http://docs.textadventures.co.uk/quest/functions/ (categorical order)<br>\nhttp://docs.textadventures.co.uk/quest/functions/index_allfunctions.html (alpabetical order)</p>\n<p>http://docs.textadventures.co.uk/quest/elements/object.html (scroll down to the bottom section, as these are the Object Types / Types for Objects: the container types and other various types)</p>\n<hr>\n<p>also:</p>\n<p>within the GUI/Editor, in the bottom left corner is:</p>\n<p>Filter -&gt; Show library elements -&gt; (toggle this \"on\" / have the box be checked in) (this is a toggle which hides/reveals the built-in stuff)</p>\n<p>which will show/reveal now all the built-in stuff as light grey text in the \"tree of stuff\" on the left side</p>\n\n",
      "PostDate": "2017-08-17T20:04:12.0932278Z",
      "LastEditDate": "2017-08-17T20:08:36.8261965Z",
      "link": null
    }
  ]
}
