{
  "Topic": {
    "TopicId": "4178",
    "ForumId": "10",
    "Title": "Different Room Description on First Enter",
    "LastUpdated": "2014-02-17T16:20:49+00:00",
    "ReplyCount": 14
  },
  "Posts": [
    {
      "PostId": "27774",
      "UserId": 0,
      "Username": "cybernetsurfer7",
      "UserAvatar": "6978_1393092591.jpg",
      "UserGravatar": "c9692eeb1a6b9318315707773d5d6972",
      "EditableText": "I feel like this is probably a pretty simple answer.  I want to be able to have two room descriptions, one that runs on the first entry to the room, and the other which runs after that.  Thanks in advance!",
      "EditableFormat": "bbcode",
      "HTML": "I feel like this is probably a pretty simple answer.  I want to be able to have two room descriptions, one that runs on the first entry to the room, and the other which runs after that.  Thanks in advance!",
      "PostDate": "2014-02-07T17:20:00+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27777",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "In the room's description, enter something like this:\n\n[code:34k2l7qe]{if not room&#46;visited&#58;This is the first description&#46;}{if room&#46;visited&#58;This is the later description&#46;}[/code:34k2l7qe]\nThe first time you enter the room (when it's not yet visited), the description will print &quot;This is the first description.&quot; Every time after that, it will print &quot;This is the later description.&quot;",
      "EditableFormat": "bbcode",
      "HTML": "In the room's description, enter something like this:<br/><br/><pre><code>{if not room&#46;visited&#58;This is the first description&#46;}{if room&#46;visited&#58;This is the later description&#46;}</code></pre><br/>The first time you enter the room (when it's not yet visited), the description will print &quot;This is the first description.&quot; Every time after that, it will print &quot;This is the later description.&quot;",
      "PostDate": "2014-02-07T20:23:39+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27779",
      "UserId": 0,
      "Username": "cybernetsurfer7",
      "UserAvatar": "6978_1393092591.jpg",
      "UserGravatar": "c9692eeb1a6b9318315707773d5d6972",
      "EditableText": "Ah, that's how you access the visited attribute.  That's a bit easier than the method I'd previously been using (by creating my own attribute and running script to check it.)  Thanks!  I used to work with Quest a while back and I'm just getting back into it.",
      "EditableFormat": "bbcode",
      "HTML": "Ah, that's how you access the visited attribute.  That's a bit easier than the method I'd previously been using (by creating my own attribute and running script to check it.)  Thanks!  I used to work with Quest a while back and I'm just getting back into it.",
      "PostDate": "2014-02-07T21:01:12+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27783",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "there's also this universal (used anywhere) Script too (put it within the &quot;Room Description&quot; or &quot;On Entering Room&quot; script):\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Firsttime\">http://quest5.net/wiki/Firsttime</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Otherwise\">http://quest5.net/wiki/Otherwise</a><!-- m -->\n\n(I'm sure this is within the GUI~Editor mode too, I just don't know where off-hand without checking on it ~ too lazy to do it, lol)\n\nCorrect:\n\nfirsttime {\n-&gt; // whatever script\n} otherwise {\n-&gt; // whatever script\n}\n\nwith using the &quot;firsttime~otherwise&quot;, you do *NOT* need the &quot;if~else&quot; scripts:\n\nINcorrect:\n\nif (firsttime) {\n-&gt; // whatever script\n} else (otherwise) {\n-&gt; // whatever script\n}",
      "EditableFormat": "bbcode",
      "HTML": "there's also this universal (used anywhere) Script too (put it within the &quot;Room Description&quot; or &quot;On Entering Room&quot; script):<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Firsttime\">http://quest5.net/wiki/Firsttime</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Otherwise\">http://quest5.net/wiki/Otherwise</a><!-- m --><br/><br/>(I'm sure this is within the GUI~Editor mode too, I just don't know where off-hand without checking on it ~ too lazy to do it, lol)<br/><br/>Correct:<br/><br/>firsttime {<br/>-&gt; // whatever script<br/>} otherwise {<br/>-&gt; // whatever script<br/>}<br/><br/>with using the &quot;firsttime~otherwise&quot;, you do *NOT* need the &quot;if~else&quot; scripts:<br/><br/>INcorrect:<br/><br/>if (firsttime) {<br/>-&gt; // whatever script<br/>} else (otherwise) {<br/>-&gt; // whatever script<br/>",
      "PostDate": "2014-02-08T10:19:16+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27861",
      "UserId": 0,
      "Username": "ken412",
      "UserAvatar": "7120_1392594844.gif",
      "UserGravatar": "4eeeba0f354c25f259da0d132166dc60",
      "EditableText": "Hi,\n\nI'm still very new to QUEST, so sorry if this is a very basic question.\n\nFirstly, I cannot use the excellent &quot;Firsttime/Otherwise&quot; solution as  HegemonKhan has suggested.  Whilst it does indeed work fine, I later want to be able to use the &quot;Look&quot; verb to display the initial room description.  My testing has shown that once firstime has been triggered, I can't seem to get it to trigger again (using &quot;look&quot;).  So instead I'm trying to use the room &quot;visited&quot; attribute (which I hope I can amend even though the WiKi description suggests I should never have to amend it!).\n\nBut this does not seem to work on the very first room in the game.  It appears the core engine has already set the &quot;visited&quot; attribute to &quot;True&quot; for the room the player is placed in originally before my code gets control, so I cannot get my code to display the longer description for the first room in the game.  Ive tried to add a script to &quot;beforefirstenter&quot; for this room:\n[code:wgzszzkv]    &lt;beforefirstenter type=&quot;script&quot;&gt;\n      visited = False\n    &lt;/beforefirstenter&gt;[/code:wgzszzkv]\nbut that doesn't work for me either.  Maybe I'm not coding this correctly?  (It doesn't seem to like &quot;room.visited = False&quot; or &quot;this.visited = False&quot; either.)\n\nCan anyone give any advice on setting the &quot;visited&quot; attribute for the very first room, and how I alter the &quot;look&quot; routine to reset the visited attribute back to false before the room is described again?  (i.e. I haven't found where the &quot;look/lookat&quot; routine is coded - I assume it is in the core somewhere, but being a newbie here, I don't know; yet; how to get at and alter such code?)\n\nMany thanks",
      "EditableFormat": "bbcode",
      "HTML": "Hi,<br/><br/>I'm still very new to QUEST, so sorry if this is a very basic question.<br/><br/>Firstly, I cannot use the excellent &quot;Firsttime/Otherwise&quot; solution as  HegemonKhan has suggested.  Whilst it does indeed work fine, I later want to be able to use the &quot;Look&quot; verb to display the initial room description.  My testing has shown that once firstime has been triggered, I can't seem to get it to trigger again (using &quot;look&quot;).  So instead I'm trying to use the room &quot;visited&quot; attribute (which I hope I can amend even though the WiKi description suggests I should never have to amend it!).<br/><br/>But this does not seem to work on the very first room in the game.  It appears the core engine has already set the &quot;visited&quot; attribute to &quot;True&quot; for the room the player is placed in originally before my code gets control, so I cannot get my code to display the longer description for the first room in the game.  Ive tried to add a script to &quot;beforefirstenter&quot; for this room:<br/><pre><code>    &lt;beforefirstenter type=&quot;script&quot;&gt;<br/>      visited = False<br/>    &lt;/beforefirstenter&gt;</code></pre><br/>but that doesn't work for me either.  Maybe I'm not coding this correctly?  (It doesn't seem to like &quot;room.visited = False&quot; or &quot;this.visited = False&quot; either.)<br/><br/>Can anyone give any advice on setting the &quot;visited&quot; attribute for the very first room, and how I alter the &quot;look&quot; routine to reset the visited attribute back to false before the room is described again?  (i.e. I haven't found where the &quot;look/lookat&quot; routine is coded - I assume it is in the core somewhere, but being a newbie here, I don't know; yet; how to get at and alter such code?)<br/><br/>Many thanks",
      "PostDate": "2014-02-16T23:30:15+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27862",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Here's one way to do it:\n\n[code:mj6pg0sx]&lt;!--Saved by Quest 5&#46;4&#46;4873&#46;16527--&gt;\n&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;twodesc&quot;&gt;\n    &lt;gameid&gt;16234e53-37d9-4133-b229-08933adef2d2&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2014&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;command name=&quot;look&quot;&gt;\n    &lt;pattern type=&quot;string&quot;&gt;^look$|^l$&lt;/pattern&gt;\n    &lt;script&gt;\n      msg (game&#46;pov&#46;parent&#46;longdescription)\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;longdescription&gt;This is the long description for the room&#46;&lt;/longdescription&gt;\n    &lt;shortdescription&gt;This is the short description for the room&#46;&lt;/shortdescription&gt;\n    &lt;description type=&quot;script&quot;&gt;\n      if (GetBoolean(this, &quot;visited&quot;)) {\n        msg (this&#46;shortdescription)\n      }\n      else {\n        msg (this&#46;longdescription)\n      }\n    &lt;/description&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=&quot;north&quot; to=&quot;Another room&quot;&gt;\n      &lt;inherit name=&quot;northdirection&quot; /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;Another room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;exit alias=&quot;south&quot; to=&quot;room&quot;&gt;\n      &lt;inherit name=&quot;southdirection&quot; /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;[/code:mj6pg0sx]\n\nYou can override the &quot;look&quot; verb to handle the look description. BTW, this is a bit hacky, and I personally wouldn't leave it that way. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> But it shows you the hook. \n\n(To see the built-in commands, etc. select Filter at the bottom left, and choose Show Library Elements. If you want to modify one, select it and then click &quot;Copy&quot; at the top right to move it into your game file. It also shows you in which file it's located.)",
      "EditableFormat": "bbcode",
      "HTML": "Here's one way to do it:<br/><br/><pre><code>&lt;!--Saved by Quest 5&#46;4&#46;4873&#46;16527--&gt;<br/>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;twodesc&quot;&gt;<br/>    &lt;gameid&gt;16234e53-37d9-4133-b229-08933adef2d2&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2014&lt;/firstpublished&gt;<br/>  &lt;/game&gt;<br/>  &lt;command name=&quot;look&quot;&gt;<br/>    &lt;pattern type=&quot;string&quot;&gt;^look$|^l$&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      msg (game&#46;pov&#46;parent&#46;longdescription)<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;longdescription&gt;This is the long description for the room&#46;&lt;/longdescription&gt;<br/>    &lt;shortdescription&gt;This is the short description for the room&#46;&lt;/shortdescription&gt;<br/>    &lt;description type=&quot;script&quot;&gt;<br/>      if (GetBoolean(this, &quot;visited&quot;)) {<br/>        msg (this&#46;shortdescription)<br/>      }<br/>      else {<br/>        msg (this&#46;longdescription)<br/>      }<br/>    &lt;/description&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>    &lt;exit alias=&quot;north&quot; to=&quot;Another room&quot;&gt;<br/>      &lt;inherit name=&quot;northdirection&quot; /&gt;<br/>    &lt;/exit&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;Another room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;exit alias=&quot;south&quot; to=&quot;room&quot;&gt;<br/>      &lt;inherit name=&quot;southdirection&quot; /&gt;<br/>    &lt;/exit&gt;<br/>  &lt;/object&gt;<br/>&lt;/asl&gt;</code></pre><br/><br/>You can override the &quot;look&quot; verb to handle the look description. BTW, this is a bit hacky, and I personally wouldn't leave it that way. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> But it shows you the hook. <br/><br/>(To see the built-in commands, etc. select Filter at the bottom left, and choose Show Library Elements. If you want to modify one, select it and then click &quot;Copy&quot; at the top right to move it into your game file. It also shows you in which file it's located.)",
      "PostDate": "2014-02-16T23:45:11+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27863",
      "UserId": 0,
      "Username": "ken412",
      "UserAvatar": "7120_1392594844.gif",
      "UserGravatar": "4eeeba0f354c25f259da0d132166dc60",
      "EditableText": "Thanks  jaynabonne,\n\nThat seems to work, thank you.  I'd just found the &quot;default.object&quot; and given it a &quot;shortdescription&quot; field, so I was already starting down this path, as I want to give all rooms the possibility of two descriptions.\n\nI will need to look at this in more detail to understand how you have got it to manipulate the &quot;visited&quot; attribute, as the debugger still shows visited=True [b:3t8vzgo4]immediately [/b:3t8vzgo4]the room is described, so not sure how you got in to check its state [b:3t8vzgo4]before[/b:3t8vzgo4] the core code set it to True.  But not tonight! I've got to get up for work in the morning, so that's enough for today!\n\nThanks,\nKen",
      "EditableFormat": "bbcode",
      "HTML": "Thanks  jaynabonne,<br/><br/>That seems to work, thank you.  I'd just found the &quot;default.object&quot; and given it a &quot;shortdescription&quot; field, so I was already starting down this path, as I want to give all rooms the possibility of two descriptions.<br/><br/>I will need to look at this in more detail to understand how you have got it to manipulate the &quot;visited&quot; attribute, as the debugger still shows visited=True <span style=\"font-weight:bold;\">immediately </span>the room is described, so not sure how you got in to check its state <span style=\"font-weight:bold;\">before</span> the core code set it to True.  But not tonight! I've got to get up for work in the morning, so that's enough for today!<br/><br/>Thanks,<br/>Ken",
      "PostDate": "2014-02-17T00:22:14+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27865",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I may not be understanding this or got it right, as I'm not sure if jayna's &quot;hack&quot; (JS code syntax?) is involved in this or not, or if this is not what you're trying to ask about, or if you're saying that it's stil not working for you (maybe you made a simple mistake in adding in jayna's code or jayna' overlooked something in his code), but oh well, lol:\n\n&lt;description type=&quot;script&quot;&gt;\n-&gt; if (GetBoolean(this, &quot;visited&quot;)) {\n-&gt;-&gt; msg (this.shortdescription)\n-&gt; }\n-&gt; else {\n-&gt;-&gt; msg (this.longdescription)\n-&gt; }\n&lt;/description&gt;\n\nthe 'check' is:\n\nif (GetBoolean(this, &quot;visited&quot;)) {\n\nconceptually:\n\nif (this object has the boolean &quot;visited&quot; and it also has the value of &quot;true&quot;), then do &quot;short description&quot;\nelse, do &quot;long description&quot;\n\nAlex coded the quest engine to understand a shortened syntax of:\n\nObject.Boolean_Attribute\n\nis the same thing as it's long (full) syntax:\n\nObject.Boolean_Attribute = true\n\naka, if there's no &quot;=false&quot; value given, then the quest engine understands it to be &quot;=true&quot; value\n\n------------\n\nerrr... in reading your post over again... I think you're asking in how it works, despite the debugger still showing that the &quot;visited=true&quot;, correct? (HK crosses his fingers, lol)\n\nthis must be because jayna's &quot;hack&quot; is JS (or whatever other programming language), which bypasses and~or ignores quest's setting of &quot;visited=true&quot; (which the debugger shows, but is unable to know about the independant other programming language at work through jayna's &quot;hack&quot;).\n\n-----------\n\nP.S.\n\nmy bad, I missed that you wanted to keep the options of being able to 'see' (via two different verbs~buttons~hyperlinks) the two different room descriptions. The only other way (as far as I can think of) besides using two Verbs, is to have some script that you can activate at will (or circumstance) during game play, which would change the flags for which description is shown. This could be a neat idea (as you could connect the script, via &quot;conditionally: &quot;if&quot; scripting, to whether you have a &quot;truth revealing item&quot; in your possesion or if equiped...), hehe: if (player.item_of_truth.equiped=true), then show &quot;first time or secret description&quot;.\n\nso my apologizes for not addressing this aspect that you needed help with, as I thought you just wanted to have a &quot;first time only&quot; description, and then a more generic &quot;every other time&quot; description. I didn't know you wanted to keep the ability to see the &quot;first time&quot; description beyond it's initial appearance~usage, along with also being able to 'see' the generic &quot;every other time&quot; description too.",
      "EditableFormat": "bbcode",
      "HTML": "I may not be understanding this or got it right, as I'm not sure if jayna's &quot;hack&quot; (JS code syntax?) is involved in this or not, or if this is not what you're trying to ask about, or if you're saying that it's stil not working for you (maybe you made a simple mistake in adding in jayna's code or jayna' overlooked something in his code), but oh well, lol:<br/><br/>&lt;description type=&quot;script&quot;&gt;<br/>-&gt; if (GetBoolean(this, &quot;visited&quot;)) {<br/>-&gt;-&gt; msg (this.shortdescription)<br/>-&gt; }<br/>-&gt; else {<br/>-&gt;-&gt; msg (this.longdescription)<br/>-&gt; }<br/>&lt;/description&gt;<br/><br/>the 'check' is:<br/><br/>if (GetBoolean(this, &quot;visited&quot;)) {<br/><br/>conceptually:<br/><br/>if (this object has the boolean &quot;visited&quot; and it also has the value of &quot;true&quot;), then do &quot;short description&quot;<br/>else, do &quot;long description&quot;<br/><br/>Alex coded the quest engine to understand a shortened syntax of:<br/><br/>Object.Boolean_Attribute<br/><br/>is the same thing as it's long (full) syntax:<br/><br/>Object.Boolean_Attribute = true<br/><br/>aka, if there's no &quot;=false&quot; value given, then the quest engine understands it to be &quot;=true&quot; value<br/><br/>------------<br/><br/>errr... in reading your post over again... I think you're asking in how it works, despite the debugger still showing that the &quot;visited=true&quot;, correct? (HK crosses his fingers, lol)<br/><br/>this must be because jayna's &quot;hack&quot; is JS (or whatever other programming language), which bypasses and~or ignores quest's setting of &quot;visited=true&quot; (which the debugger shows, but is unable to know about the independant other programming language at work through jayna's &quot;hack&quot;).<br/><br/>-----------<br/><br/>P.S.<br/><br/>my bad, I missed that you wanted to keep the options of being able to 'see' (via two different verbs~buttons~hyperlinks) the two different room descriptions. The only other way (as far as I can think of) besides using two Verbs, is to have some script that you can activate at will (or circumstance) during game play, which would change the flags for which description is shown. This could be a neat idea (as you could connect the script, via &quot;conditionally: &quot;if&quot; scripting, to whether you have a &quot;truth revealing item&quot; in your possesion or if equiped...), hehe: if (player.item_of_truth.equiped=true), then show &quot;first time or secret description&quot;.<br/><br/>so my apologizes for not addressing this aspect that you needed help with, as I thought you just wanted to have a &quot;first time only&quot; description, and then a more generic &quot;every other time&quot; description. I didn't know you wanted to keep the ability to see the &quot;first time&quot; description beyond it's initial appearance~usage, along with also being able to 'see' the generic &quot;every other time&quot; description too.",
      "PostDate": "2014-02-17T01:11:09+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27866",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "HK: I have no idea where you get that the hack is JS - there is no JavaScript code in there at all.\n\nKen: After I posted that and went to bed, I realized that this code is bypassing the normal &quot;You can see...&quot; and &quot;You can go...&quot; sort of description pieces when you type &quot;l&quot; (or &quot;look&quot;). So I don't think it's really a viable solution unless you're happy with bare bones descriptions.\n\nThe default &quot;look&quot; verb just does ShowRoomDescription. What you could probably do (not tested) is what you were initially wanting to do - set visited to false before calling ShowRoomDescription in that command:\n\n[code:1rll8jsc]  &lt;command name=&quot;look&quot;&gt;\n    &lt;pattern type=&quot;string&quot;&gt;^look$|^l$&lt;/pattern&gt;\n    &lt;script&gt;\n      game&#46;pov&#46;parent&#46;visited = false\n      ShowRoomDescription\n      game&#46;pov&#46;parent&#46;visited = true\n   &lt;/script&gt;\n  &lt;/command&gt;[/code:1rll8jsc]\n\nAlso, instead of changing the default object, you might want to consider adding your own room type (MyBaseRoom or something like that). Then you can add the shortdescription there and then just inherit that type in all your rooms (more work, I know, to do all the inheritance, but it saves your code from potentially breaking in future revs of Quest if the base object type changes. And it makes the changes your own).",
      "EditableFormat": "bbcode",
      "HTML": "HK: I have no idea where you get that the hack is JS - there is no JavaScript code in there at all.<br/><br/>Ken: After I posted that and went to bed, I realized that this code is bypassing the normal &quot;You can see...&quot; and &quot;You can go...&quot; sort of description pieces when you type &quot;l&quot; (or &quot;look&quot;). So I don't think it's really a viable solution unless you're happy with bare bones descriptions.<br/><br/>The default &quot;look&quot; verb just does ShowRoomDescription. What you could probably do (not tested) is what you were initially wanting to do - set visited to false before calling ShowRoomDescription in that command:<br/><br/><pre><code>  &lt;command name=&quot;look&quot;&gt;<br/>    &lt;pattern type=&quot;string&quot;&gt;^look$|^l$&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      game&#46;pov&#46;parent&#46;visited = false<br/>      ShowRoomDescription<br/>      game&#46;pov&#46;parent&#46;visited = true<br/>   &lt;/script&gt;<br/>  &lt;/command&gt;</code></pre><br/><br/>Also, instead of changing the default object, you might want to consider adding your own room type (MyBaseRoom or something like that). Then you can add the shortdescription there and then just inherit that type in all your rooms (more work, I know, to do all the inheritance, but it saves your code from potentially breaking in future revs of Quest if the base object type changes. And it makes the changes your own).",
      "PostDate": "2014-02-17T07:56:06+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27867",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "err... I'm just refering to the symbol using language that you used here:\n\n&lt;command name=&quot;look&quot;&gt;\n-&gt; &lt;pattern type=&quot;string&quot;&gt;[b:1v9rquuw]^look$|^l$[/b:1v9rquuw]&lt;/pattern&gt;\n\nI wrongly presumed this is JS, so my apologizes for any confusion, especially to ken, and apologizes to you jayna for presuming that this is JS.\n\nI vaguely know that the &quot;|&quot; is 'piping' (connecting ~ but don't understand it very well yet)... but I don't know what the other symbols are~do without looking them up.\n\n-----\n\nI like quest's language, as it doesn't use all these symbols like so many other languages do.\n\nAs it's a pain to remember what all the symbols are or do, though it cuts down on the amount of code typing that is needed, which is good (if you can memorize~know the symbols, lol). So I like quest better, as it doesn't use these symbols that I have to try to memorize, lol. As for typing more... I like to type, and also I found that a little more typing to help me out with the organization and~or a structure~system of things is well worth it, lol.",
      "EditableFormat": "bbcode",
      "HTML": "err... I'm just refering to the symbol using language that you used here:<br/><br/>&lt;command name=&quot;look&quot;&gt;<br/>-&gt; &lt;pattern type=&quot;string&quot;&gt;<span style=\"font-weight:bold;\">^look$|^l$</span>&lt;/pattern&gt;<br/><br/>I wrongly presumed this is JS, so my apologizes for any confusion, especially to ken, and apologizes to you jayna for presuming that this is JS.<br/><br/>I vaguely know that the &quot;|&quot; is 'piping' (connecting ~ but don't understand it very well yet)... but I don't know what the other symbols are~do without looking them up.<br/><br/>-----<br/><br/>I like quest's language, as it doesn't use all these symbols like so many other languages do.<br/><br/>As it's a pain to remember what all the symbols are or do, though it cuts down on the amount of code typing that is needed, which is good (if you can memorize~know the symbols, lol). So I like quest better, as it doesn't use these symbols that I have to try to memorize, lol. As for typing more... I like to type, and also I found that a little more typing to help me out with the organization and~or a structure~system of things is well worth it, lol.",
      "PostDate": "2014-02-17T08:03:54+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27868",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "That is what's called a &quot;regular expression&quot;. It's a way of defining pattern matches in a more robust way.\n\nCheck it out here: <!-- m --><a class=\"postlink\" href=\"http://en.wikipedia.org/wiki/Regular_expression#Basic_concepts\">http://en.wikipedia.org/wiki/Regular_ex ... c_concepts</a><!-- m -->\n\nThe vertical bar ('|') is used to signify &quot;or&quot;, for multiple possibilities. The '^' means beginning of line, and the '$' means end of line. The expression is:\n\n[code:11xgdss3]^look$|^l$[/code:11xgdss3]\n\nwhich means &quot;match either 'look' or 'l', where they are on a line by themselves (only begin and end of line markers around them). I'm no regex expert (regexpert?) by any means; I'd have to look a lot of stuff up to do more complex expressions. (The one in the code was the one the look command already had.)",
      "EditableFormat": "bbcode",
      "HTML": "That is what's called a &quot;regular expression&quot;. It's a way of defining pattern matches in a more robust way.<br/><br/>Check it out here: <!-- m --><a class=\"postlink\" href=\"http://en.wikipedia.org/wiki/Regular_expression#Basic_concepts\">http://en.wikipedia.org/wiki/Regular_ex ... c_concepts</a><!-- m --><br/><br/>The vertical bar ('|') is used to signify &quot;or&quot;, for multiple possibilities. The '^' means beginning of line, and the '$' means end of line. The expression is:<br/><br/><pre><code>^look$|^l$</code></pre><br/><br/>which means &quot;match either 'look' or 'l', where they are on a line by themselves (only begin and end of line markers around them). I'm no regex expert (regexpert?) by any means; I'd have to look a lot of stuff up to do more complex expressions. (The one in the code was the one the look command already had.)",
      "PostDate": "2014-02-17T08:17:55+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27869",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "ah thank you, so it's not even a language, but merely a basic expression usage. Knowing that Quest can use JS, I had wrongly presumed that these were symbols for JS' format~syntax (having never yet examined what JS is or looks like).\n\nthat makes simple sense (though I probably will have a hard time remembering it, lol):\n\n' ^ ' is the same similar'ness (&quot;start alert&quot;) as ' &lt;object name=&quot;blah&quot;&gt; ' or ' { '\n' $ ' is the same similar'ness (&quot;end alert&quot;) as ' &lt;/object&gt; ' or ' } '",
      "EditableFormat": "bbcode",
      "HTML": "ah thank you, so it's not even a language, but merely a basic expression usage. Knowing that Quest can use JS, I had wrongly presumed that these were symbols for JS' format~syntax (having never yet examined what JS is or looks like).<br/><br/>that makes simple sense (though I probably will have a hard time remembering it, lol):<br/><br/>' ^ ' is the same similar'ness (&quot;start alert&quot;) as ' &lt;object name=&quot;blah&quot;&gt; ' or ' { '<br/>' $ ' is the same similar'ness (&quot;end alert&quot;) as ' &lt;/object&gt; ' or ' } '",
      "PostDate": "2014-02-17T08:28:19+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27870",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "It's not so much that. If you left off the '^' and '$', then it would match not only &quot;look&quot; but also &quot;have a good look&quot;, &quot;look around&quot; and &quot;look at me!&quot; (not to mention &quot;lookie here son&quot;). By adding the line markers, it forces the match only in the case where it's on a line by itself, no spaces, no other characters. It really is specifying what to match, not begin/end markers as  XML tags are.",
      "EditableFormat": "bbcode",
      "HTML": "It's not so much that. If you left off the '^' and '$', then it would match not only &quot;look&quot; but also &quot;have a good look&quot;, &quot;look around&quot; and &quot;look at me!&quot; (not to mention &quot;lookie here son&quot;). By adding the line markers, it forces the match only in the case where it's on a line by itself, no spaces, no other characters. It really is specifying what to match, not begin/end markers as  XML tags are.",
      "PostDate": "2014-02-17T09:17:43+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27871",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "ya, I was reading up on it in your wiki link, the metacharacters (?,+,*) used for the string match checking... &quot;0 or 1&quot;, &quot;1 or more&quot;, and whatever the third check was... meh, lol. (I had to look it up, lol: the third check: &quot;0 or more&quot;)\n\nthe ' | ' in regular expressions means &quot;or&quot;, but I think in some other programming language (or whatever) it is used for and known as &quot;piping&quot; or &quot;pipes&quot; ( <!-- m --><a class=\"postlink\" href=\"http://en.wikipedia.org/wiki/Pipeline_(Unix\">http://en.wikipedia.org/wiki/Pipeline_(Unix</a><!-- m -->) and <!-- m --><a class=\"postlink\" href=\"https://www.google.com/#q=programming+piping\">https://www.google.com/#q=programming+piping</a><!-- m --> )\n\nadd the ending ')' to the unix link (its url) for it to work, the ending ')' got cut off again by the posting again, not sure why...\n\nthis string matching (&quot;patterns&quot;) and coding theory stuff is quite fascinating... using it with algebra (or beyond) for matching all specified combinations of strings... though it's way over my head, laughs. Ya, learning to code is gonna take me at least 50 years, lol.\n\nlet's see if I remember the algebra (it's been so long ago)...\n\nx^2 - y^2 = (x-y) (x+y)\nfactoring... argh...\n\nthanks for that wiki link on regular expressions (&quot;regex&quot;)... though it scares me... way beyond my intelligence level... laughs.\n\nRegular Expressions are briefly touched upon in the tutorial (or some other source on this site or its wiki site), and I barely understood that uber simple example that they gave for regular expressions, so I stayed away from it, and now I know much more about regex'es, and thus know I made the right choice to stay away from them, YEESH!, lol. I now fully understand why you got to be really good at math for programming... sighs.",
      "EditableFormat": "bbcode",
      "HTML": "ya, I was reading up on it in your wiki link, the metacharacters (?,+,*) used for the string match checking... &quot;0 or 1&quot;, &quot;1 or more&quot;, and whatever the third check was... meh, lol. (I had to look it up, lol: the third check: &quot;0 or more&quot;)<br/><br/>the ' | ' in regular expressions means &quot;or&quot;, but I think in some other programming language (or whatever) it is used for and known as &quot;piping&quot; or &quot;pipes&quot; ( <!-- m --><a class=\"postlink\" href=\"http://en.wikipedia.org/wiki/Pipeline_(Unix\">http://en.wikipedia.org/wiki/Pipeline_(Unix</a><!-- m -->) and <!-- m --><a class=\"postlink\" href=\"https://www.google.com/#q=programming+piping\">https://www.google.com/#q=programming+piping</a><!-- m --> )<br/><br/>add the ending ')' to the unix link (its url) for it to work, the ending ')' got cut off again by the posting again, not sure why...<br/><br/>this string matching (&quot;patterns&quot;) and coding theory stuff is quite fascinating... using it with algebra (or beyond) for matching all specified combinations of strings... though it's way over my head, laughs. Ya, learning to code is gonna take me at least 50 years, lol.<br/><br/>let's see if I remember the algebra (it's been so long ago)...<br/><br/>x^2 - y^2 = (x-y) (x+y)<br/>factoring... argh...<br/><br/>thanks for that wiki link on regular expressions (&quot;regex&quot;)... though it scares me... way beyond my intelligence level... laughs.<br/><br/>Regular Expressions are briefly touched upon in the tutorial (or some other source on this site or its wiki site), and I barely understood that uber simple example that they gave for regular expressions, so I stayed away from it, and now I know much more about regex'es, and thus know I made the right choice to stay away from them, YEESH!, lol. I now fully understand why you got to be really good at math for programming... sighs.",
      "PostDate": "2014-02-17T15:47:40+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27872",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "If you (or anyone else) would like to see some simple regex examples, here is an interesting page:\n\n<!-- m --><a class=\"postlink\" href=\"http://www.icewarp.com/support/online_help/203030104.htm\">http://www.icewarp.com/support/online_h ... 030104.htm</a><!-- m -->",
      "EditableFormat": "bbcode",
      "HTML": "If you (or anyone else) would like to see some simple regex examples, here is an interesting page:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://www.icewarp.com/support/online_help/203030104.htm\">http://www.icewarp.com/support/online_h ... 030104.htm</a><!-- m -->",
      "PostDate": "2014-02-17T16:20:49+00:00",
      "LastEditDate": null
    }
  ]
}
