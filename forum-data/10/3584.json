{
  "Topic": {
    "TopicId": "3584",
    "ForumId": "10",
    "Title": "Feedback on a \"Reactor Core\" fuel rod placement puzzle",
    "LastUpdated": "2013-03-31T15:56:40+01:00",
    "ReplyCount": 17
  },
  "Posts": [
    {
      "PostId": "23768",
      "UserId": 0,
      "Username": "Asyranok",
      "UserAvatar": null,
      "UserGravatar": "59faabf56b4e313fc3f5a76f43bfc38d",
      "EditableText": "Hi guys,\n\nI have recently finished a fully functional puzzle for WAKE that does not involve any items to solve. This is a break from the typical puzzle where someone must use their problem solving abilities to guess a passcode, or must apply items found to a puzzle to solve it.\n\nThis puzzle purely involves logic and interaction with a visible interface to solve. It is fairly simple at the moment. The player must shift several fuel rods into reactor couplings to force the reactor to overload and reset.\n\nI've uploaded the .quest and .aslx files into a compressed folder that is attached to this post. Inside the folder are the necessary images and the convib library for playing through the .aslx. Also, the .quest file alone is uploaded to mediafire: <!-- m --><a class=\"postlink\" href=\"http://www.mediafire.com/?9pmzf0ecs70038w\">http://www.mediafire.com/?9pmzf0ecs70038w</a><!-- m -->\n\nI am looking for feedback on whether it is an interesting puzzle; what might be wrong with it; how can I improve it?\n\nI welcome feedback on the code, although I am not in a hurry to make it more efficient. This is my first attempt at coding something this large ever, so I will not be particularly efficient at it. Some people have given me advice for fixing code that I haven't even had time to get around to yet.\n\nBut, regardless - thank you for any help! Instructions are in the puzzle itself. Hopefully they are clear - which is something I'd love feedback on.",
      "EditableFormat": "bbcode",
      "HTML": "Hi guys,<br/><br/>I have recently finished a fully functional puzzle for WAKE that does not involve any items to solve. This is a break from the typical puzzle where someone must use their problem solving abilities to guess a passcode, or must apply items found to a puzzle to solve it.<br/><br/>This puzzle purely involves logic and interaction with a visible interface to solve. It is fairly simple at the moment. The player must shift several fuel rods into reactor couplings to force the reactor to overload and reset.<br/><br/>I've uploaded the .quest and .aslx files into a compressed folder that is attached to this post. Inside the folder are the necessary images and the convib library for playing through the .aslx. Also, the .quest file alone is uploaded to mediafire: <!-- m --><a class=\"postlink\" href=\"http://www.mediafire.com/?9pmzf0ecs70038w\">http://www.mediafire.com/?9pmzf0ecs70038w</a><!-- m --><br/><br/>I am looking for feedback on whether it is an interesting puzzle; what might be wrong with it; how can I improve it?<br/><br/>I welcome feedback on the code, although I am not in a hurry to make it more efficient. This is my first attempt at coding something this large ever, so I will not be particularly efficient at it. Some people have given me advice for fixing code that I haven't even had time to get around to yet.<br/><br/>But, regardless - thank you for any help! Instructions are in the puzzle itself. Hopefully they are clear - which is something I'd love feedback on.<div><a href=\"/attachment/573\">Reactor Core Puzzle Only.zip</a></div>",
      "PostDate": "2013-03-30T01:20:52+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23770",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "The graphics don't show up for me. I assume that will make it a bit tough to solve! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nIf you publish it to a .quest game, the graphics *should* be included...",
      "EditableFormat": "bbcode",
      "HTML": "The graphics don't show up for me. I assume that will make it a bit tough to solve! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>If you publish it to a .quest game, the graphics *should* be included...",
      "PostDate": "2013-03-30T09:28:11+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23771",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Just a coding tip - something like this:\n\n[code:11penwzg]if (Rod 5A&#46;position = False) {\n  Rod 5A&#46;position = True\n}\nelse if (Rod 5A&#46;position = True) {\n  Rod 5A&#46;position = False\n}[/code:11penwzg]\n\ncan be simply written as:\n\n[code:11penwzg]Rod 5A&#46;position = not Rod 5A&#46;position[/code:11penwzg]\n\nI would also take those big blocks of repeated &quot;ifs&quot; and put them in a function. That is prime candidate for factoring, and if you ever had to change things, it would keep you from going insane by having only one place to make changes!",
      "EditableFormat": "bbcode",
      "HTML": "Just a coding tip - something like this:<br/><br/><pre><code>if (Rod 5A&#46;position = False) {<br/>  Rod 5A&#46;position = True<br/>}<br/>else if (Rod 5A&#46;position = True) {<br/>  Rod 5A&#46;position = False<br/>}</code></pre><br/><br/>can be simply written as:<br/><br/><pre><code>Rod 5A&#46;position = not Rod 5A&#46;position</code></pre><br/><br/>I would also take those big blocks of repeated &quot;ifs&quot; and put them in a function. That is prime candidate for factoring, and if you ever had to change things, it would keep you from going insane by having only one place to make changes!",
      "PostDate": "2013-03-30T09:38:40+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23772",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "More thoughts... here is a little function that might help:\n\n[code:2f3xa9bn]&lt;function name=&quot;DumpRodRow&quot; parameters=&quot;rodA,rodB&quot;&gt;\n\tif (rodA&#46;position) {\n\t\ts = &quot;{img&#58;rodA&#46;png}&quot;\n\t} else {\n\t\ts = &quot;{img&#58;rodC&#46;png}&quot;\n\t}\n\ts = s + &quot; &quot;\n\tif (rodB&#46;position) {\n\t\ts = s + &quot;{img&#58;rodB&#46;png}&quot;\n\t} else {\n\t\ts = s + &quot;{img&#58;rodD&#46;png}&quot;\n\t}\n\tmsg(s)\n&lt;/function&gt;[/code:2f3xa9bn]\n\nThen you can just do:\n\n[code:2f3xa9bn]DumpRodRow(Rod 1A, Rod 1B)\nDumpRodRow(Rod 2A, Rod 2B)\nDumpRodRow(Rod 3A, Rod 3B)\nDumpRodRow(Rod 4A, Rod 4B)\nDumpRodRow(Rod 5A, Rod 5B)[/code:2f3xa9bn]\n\ninstead of 20 if's.",
      "EditableFormat": "bbcode",
      "HTML": "More thoughts... here is a little function that might help:<br/><br/><pre><code>&lt;function name=&quot;DumpRodRow&quot; parameters=&quot;rodA,rodB&quot;&gt;<br/>\tif (rodA&#46;position) {<br/>\t\ts = &quot;{img&#58;rodA&#46;png}&quot;<br/>\t} else {<br/>\t\ts = &quot;{img&#58;rodC&#46;png}&quot;<br/>\t}<br/>\ts = s + &quot; &quot;<br/>\tif (rodB&#46;position) {<br/>\t\ts = s + &quot;{img&#58;rodB&#46;png}&quot;<br/>\t} else {<br/>\t\ts = s + &quot;{img&#58;rodD&#46;png}&quot;<br/>\t}<br/>\tmsg(s)<br/>&lt;/function&gt;</code></pre><br/><br/>Then you can just do:<br/><br/><pre><code>DumpRodRow(Rod 1A, Rod 1B)<br/>DumpRodRow(Rod 2A, Rod 2B)<br/>DumpRodRow(Rod 3A, Rod 3B)<br/>DumpRodRow(Rod 4A, Rod 4B)<br/>DumpRodRow(Rod 5A, Rod 5B)</code></pre><br/><br/>instead of 20 if's.",
      "PostDate": "2013-03-30T09:45:17+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23775",
      "UserId": 0,
      "Username": "Asyranok",
      "UserAvatar": null,
      "UserGravatar": "59faabf56b4e313fc3f5a76f43bfc38d",
      "EditableText": "Thanks for that! Sorry about the images didnt think of that. I originally tried to upload it as a dot quest but for some reason that file cant be uploaded to the forums.",
      "EditableFormat": "bbcode",
      "HTML": "Thanks for that! Sorry about the images didnt think of that. I originally tried to upload it as a dot quest but for some reason that file cant be uploaded to the forums.",
      "PostDate": "2013-03-30T15:34:29+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23778",
      "UserId": 0,
      "Username": "Asyranok",
      "UserAvatar": null,
      "UserGravatar": "59faabf56b4e313fc3f5a76f43bfc38d",
      "EditableText": "I uploaded the quest file version to mediafire.\n\n<!-- m --><a class=\"postlink\" href=\"http://www.mediafire.com/?9pmzf0ecs70038w\">http://www.mediafire.com/?9pmzf0ecs70038w</a><!-- m -->",
      "EditableFormat": "bbcode",
      "HTML": "I uploaded the quest file version to mediafire.<br/><br/><!-- m --><a class=\"postlink\" href=\"http://www.mediafire.com/?9pmzf0ecs70038w\">http://www.mediafire.com/?9pmzf0ecs70038w</a><!-- m -->",
      "PostDate": "2013-03-30T16:45:19+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23780",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I had a similar problem with a .js file. You can always wrap it up in a zip fie (aka &quot;compressed folder&quot;).",
      "EditableFormat": "bbcode",
      "HTML": "I had a similar problem with a .js file. You can always wrap it up in a zip fie (aka &quot;compressed folder&quot;).",
      "PostDate": "2013-03-30T17:10:29+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23781",
      "UserId": 0,
      "Username": "Asyranok",
      "UserAvatar": null,
      "UserGravatar": "59faabf56b4e313fc3f5a76f43bfc38d",
      "EditableText": "Ah smart. Didn't think of that, but I will do that in the future! Thanks <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "EditableFormat": "bbcode",
      "HTML": "Ah smart. Didn't think of that, but I will do that in the future! Thanks <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "PostDate": "2013-03-30T17:36:41+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23782",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I think it's a nice little puzzle. I like the graphical aspect of it. I wasn't sure how to interact at first, but it didn't take long to find the Rods in the right pant. My only suggestion would be if you could put the numbers in somehow, but even that's not really necessary, as there is a logic to it, and someone can figure out which is which.\n\nNIce one! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "I think it's a nice little puzzle. I like the graphical aspect of it. I wasn't sure how to interact at first, but it didn't take long to find the Rods in the right pant. My only suggestion would be if you could put the numbers in somehow, but even that's not really necessary, as there is a logic to it, and someone can figure out which is which.<br/><br/>NIce one! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-03-30T17:38:56+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23783",
      "UserId": 0,
      "Username": "Asyranok",
      "UserAvatar": null,
      "UserGravatar": "59faabf56b4e313fc3f5a76f43bfc38d",
      "EditableText": "Thanks! I'm glad you liked it. I will try to find a way to put the numbers in there. I wouldn't be able to put the numbers in the pictures as that would complicate things too much, but I think I can just as easily post the numbers to the left and right of each picture with very little extra effort. I'll work on that now.\n\nThanks again <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\nAnd I will use your advice to make my code for flexible. That's awesome, and thanks for the sample!",
      "EditableFormat": "bbcode",
      "HTML": "Thanks! I'm glad you liked it. I will try to find a way to put the numbers in there. I wouldn't be able to put the numbers in the pictures as that would complicate things too much, but I think I can just as easily post the numbers to the left and right of each picture with very little extra effort. I'll work on that now.<br/><br/>Thanks again <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>And I will use your advice to make my code for flexible. That's awesome, and thanks for the sample!",
      "PostDate": "2013-03-30T17:46:43+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23789",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'm not sure if this can be explained, lol, but I'm having trouble in grasping the logic of:\n\nRod 5A.position = not Rod 5A.position\n(and does this need an &quot;if&quot; in front of it too?, as I haven't looked at his~her game code, so I don't know what else is in his~her coding block in relation to these code lines)\n\nin how it translates to:\n\nif rod 5A.position = true\nthen rod 5A.position = false\n\nif rod 5A.position = false\nthen rod 5A.position = true",
      "EditableFormat": "bbcode",
      "HTML": "I'm not sure if this can be explained, lol, but I'm having trouble in grasping the logic of:<br/><br/>Rod 5A.position = not Rod 5A.position<br/>(and does this need an &quot;if&quot; in front of it too?, as I haven't looked at his~her game code, so I don't know what else is in his~her coding block in relation to these code lines)<br/><br/>in how it translates to:<br/><br/>if rod 5A.position = true<br/>then rod 5A.position = false<br/><br/>if rod 5A.position = false<br/>then rod 5A.position = true",
      "PostDate": "2013-03-31T00:51:36+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "23790",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "In Quest (and other programming languages), &quot;not&quot; is an operator which returns the opposite logic value from what is given it. It is the &quot;logical negation&quot; operator. (In a language like C, C++, Java, and Javascript, the symbol &quot;!&quot; is used instead for this operator.)\n\nnot true =&gt; false\nnot false =&gt; true\n\nSo if rod 5A.position = true, then &quot;not rod 5A.position&quot; will equal false.\n\nTry this in Quest:\n\nmsg(not false)\n\nQuest will spit out: True\n\nSo &quot;rod 5A.position = not rod 5A.position&quot; will assign to rod 5A.position  the opposite logic value. Consider a parallel statement &quot;x = -x&quot; which assigns the negative of x to x (in programming languages).\n\n&quot;not&quot; just negates boolean values instead of &quot;-&quot; which negates numeric ones.",
      "EditableFormat": "bbcode",
      "HTML": "In Quest (and other programming languages), &quot;not&quot; is an operator which returns the opposite logic value from what is given it. It is the &quot;logical negation&quot; operator. (In a language like C, C++, Java, and Javascript, the symbol &quot;!&quot; is used instead for this operator.)<br/><br/>not true =&gt; false<br/>not false =&gt; true<br/><br/>So if rod 5A.position = true, then &quot;not rod 5A.position&quot; will equal false.<br/><br/>Try this in Quest:<br/><br/>msg(not false)<br/><br/>Quest will spit out: True<br/><br/>So &quot;rod 5A.position = not rod 5A.position&quot; will assign to rod 5A.position  the opposite logic value. Consider a parallel statement &quot;x = -x&quot; which assigns the negative of x to x (in programming languages).<br/><br/>&quot;not&quot; just negates boolean values instead of &quot;-&quot; which negates numeric ones.",
      "PostDate": "2013-03-31T02:14:11+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "23791",
      "UserId": 0,
      "Username": "Asyranok",
      "UserAvatar": null,
      "UserGravatar": "59faabf56b4e313fc3f5a76f43bfc38d",
      "EditableText": "Ah, makes sense. Although this would only work for boolean right? Since if it was an integer, it could be any whole number?\n\nI went straight in and made all the fixes to that to cut out unnecessary code. Although, I'm embarrassed to admit that your suggestion for the dumprow function are falling on amateur ears. I have no idea how to read that and figure out what is going on there, and no way to replace my code with that so that it all works. <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( -->",
      "EditableFormat": "bbcode",
      "HTML": "Ah, makes sense. Although this would only work for boolean right? Since if it was an integer, it could be any whole number?<br/><br/>I went straight in and made all the fixes to that to cut out unnecessary code. Although, I'm embarrassed to admit that your suggestion for the dumprow function are falling on amateur ears. I have no idea how to read that and figure out what is going on there, and no way to replace my code with that so that it all works. <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( -->",
      "PostDate": "2013-03-31T02:24:22+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "23792",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Yes, you can only apply not to boolean values.\n\nGoing further, you can do all sorts of &quot;logical arithmetic&quot; outside of if's.\n\nplayer.legal = player.age &gt;= 21\n\ngame.finished = player.dead or player.parent = FinalRoom\n\nStuff like that (and more, including as return values for functions). An &quot;if&quot; statement just looks for a true or false value coming out of an expression. You can do more with those kinds of boolean expressions than just stick them in &quot;if&quot;s. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Yes, you can only apply not to boolean values.<br/><br/>Going further, you can do all sorts of &quot;logical arithmetic&quot; outside of if's.<br/><br/>player.legal = player.age &gt;= 21<br/><br/>game.finished = player.dead or player.parent = FinalRoom<br/><br/>Stuff like that (and more, including as return values for functions). An &quot;if&quot; statement just looks for a true or false value coming out of an expression. You can do more with those kinds of boolean expressions than just stick them in &quot;if&quot;s. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-03-31T02:32:52+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "23793",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "[quote=&quot;Asyranok&quot;:25wky3y5]I went straight in and made all the fixes to that to cut out unnecessary code. Although, I'm embarrassed to admit that your suggestion for the dumprow function are falling on amateur ears. I have no idea how to read that and figure out what is going on there, and no way to replace my code with that so that it all works. <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( -->[/quote:25wky3y5]\n\nBasically, I just saw the pattern in your code. You had this (one case):\n\n[code:25wky3y5]        if (Rod 1A&#46;position = False and Rod 1B&#46;position = False ) {\n          msg ((&quot;{img&#58;rodA&#46;png} {img&#58;rodB&#46;png}&quot;))\n        }\n        if (Rod 1A&#46;position = True and Rod 1B&#46;position = True) {\n          msg ((&quot;{img&#58;rodC&#46;png} {img&#58;rodD&#46;png}&quot;))\n        }\n        if (Rod 1A&#46;position = True and Rod 1B&#46;position = False ) {\n          msg ((&quot;{img&#58;rodC&#46;png} {img&#58;rodB&#46;png}&quot;))\n        }\n        if (Rod 1A&#46;position = False and Rod 1B&#46;position = True) {\n          msg ((&quot;{img&#58;rodA&#46;png} {img&#58;rodD&#46;png}&quot;))\n        }[/code:25wky3y5]\nYou have two rod positions and two image slots. And if you study the above, you'll see that you always generate a row (so at least one &quot;if&quot; will always hit - two yes/no values make four choices). And for that, the image in slot A is rodA whenever the &quot;A&quot; position is false, else it's rodC. (So A position = false implies graphic is rodA, etc). And the same applies to the B slot - you get B or D for position being false or true, respectively.\n\nI'm not sure if that helps at all. lol Basically, instead of writing out all possible cases, it just builds the string from (I assume) the same rules that generated all the if's to begin with. But by using the rules directly instead of the end results, and by letting the code generate the string for you, it can be written more concisely and, ultimately, more clearly, because you can see *why* those if's got written the way they did.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Asyranok wrote:</cite>I went straight in and made all the fixes to that to cut out unnecessary code. Although, I'm embarrassed to admit that your suggestion for the dumprow function are falling on amateur ears. I have no idea how to read that and figure out what is going on there, and no way to replace my code with that so that it all works. <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( --></blockquote><br/><br/>Basically, I just saw the pattern in your code. You had this (one case):<br/><br/><pre><code>        if (Rod 1A&#46;position = False and Rod 1B&#46;position = False ) {<br/>          msg ((&quot;{img&#58;rodA&#46;png} {img&#58;rodB&#46;png}&quot;))<br/>        }<br/>        if (Rod 1A&#46;position = True and Rod 1B&#46;position = True) {<br/>          msg ((&quot;{img&#58;rodC&#46;png} {img&#58;rodD&#46;png}&quot;))<br/>        }<br/>        if (Rod 1A&#46;position = True and Rod 1B&#46;position = False ) {<br/>          msg ((&quot;{img&#58;rodC&#46;png} {img&#58;rodB&#46;png}&quot;))<br/>        }<br/>        if (Rod 1A&#46;position = False and Rod 1B&#46;position = True) {<br/>          msg ((&quot;{img&#58;rodA&#46;png} {img&#58;rodD&#46;png}&quot;))<br/>        }</code></pre><br/>You have two rod positions and two image slots. And if you study the above, you'll see that you always generate a row (so at least one &quot;if&quot; will always hit - two yes/no values make four choices). And for that, the image in slot A is rodA whenever the &quot;A&quot; position is false, else it's rodC. (So A position = false implies graphic is rodA, etc). And the same applies to the B slot - you get B or D for position being false or true, respectively.<br/><br/>I'm not sure if that helps at all. lol Basically, instead of writing out all possible cases, it just builds the string from (I assume) the same rules that generated all the if's to begin with. But by using the rules directly instead of the end results, and by letting the code generate the string for you, it can be written more concisely and, ultimately, more clearly, because you can see *why* those if's got written the way they did.",
      "PostDate": "2013-03-31T02:42:23+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "23795",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I understood what &quot; not &quot; is~does, that is very simple, what I don't understand is how this:\n\nRod 5A.position = not Rod 5A.position\n\nis~does the same thing as:\n\nif rod 5A.position = true\nthen rod 5A.position = false\n\nif rod 5A.position = false\nthen rod 5A.position = true\n\nhow does this, &quot; Rod 5A.position = not Rod 5A.position &quot; , work in being~producing the same as this: &quot; if rod 5A.position = true, then rod 5A.position = false, and if rod 5A.position = false, then rod 5A.position = true &quot;\n\nI don't understand the logic of it, of how it works in being the same thing as the &quot;expanded&quot; (the dual IF) statements.\n\n-------------\n\nP.S.\n\nand your other codes are very interesting, thank you, I did not know you could do all those things, and especially without using the &quot;IF&quot; scripts!\n\n-------------\n\nP.S.S.\n\nnvm (nevermind), I think I kinda understand now how it is working:\n\n&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)\n\nif Rod 5A.position = true:\n\n&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)\n&quot;function&quot;: Rod 5A.position = Return_value (not true)\n&quot;function&quot;: Rod 5A.position = Return_value (false)\n\nif Rod 5A.position = false:\n\n&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)\n&quot;function&quot;: Rod 5A.position = Return_value (not false)\n&quot;function&quot;: Rod 5A.position = Return_value (true)\n\nif Rod 5A.position = +X:\n\n(pretending that &quot;not&quot; works here)\n\n&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)\n&quot;function&quot;: Rod 5A.position = Return_value (not +X)\n&quot;function&quot;: Rod 5A.position = Return_value (-X)\n\nif Rod 5A.position = -X:\n\n(pretending that &quot;not&quot; works here)\n\n&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)\n&quot;function&quot;: Rod 5A.position = Return_value (not -X)\n&quot;function&quot;: Rod 5A.position = Return_value (+X)\n\nif Rod 5A.position = 0:\n\n(pretending that &quot;not&quot; works with binary here)\n\n&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)\n&quot;function&quot;: Rod 5A.position = Return_value (not 0)\n&quot;function&quot;: Rod 5A.position = Return_value (1)\n\nif Rod 5A.position = 1:\n\n(pretending that &quot;not&quot; works with binary here)\n\n&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)\n&quot;function&quot;: Rod 5A.position = Return_value (not 1)\n&quot;function&quot;: Rod 5A.position = Return_value (0)\n\nif Rod 5A.position = yes:\n\n&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)\n&quot;function&quot;: Rod 5A.position = Return_value (not yes)\n&quot;function&quot;: Rod 5A.position = Return_value (no)\n\nif Rod 5A.position = no:\n\n&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)\n&quot;function&quot;: Rod 5A.position = Return_value (not no)\n&quot;function&quot;: Rod 5A.position = Return_value (yes)\n\nif Rod 5A.position = hot:\n\n&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)\n&quot;function&quot;: Rod 5A.position = Return_value (not hot)\n&quot;function&quot;: Rod 5A.position = Return_value (cold)\n\nif Rod 5A.position = cold:\n\n&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)\n&quot;function&quot;: Rod 5A.position = Return_value (not cold)\n&quot;function&quot;: Rod 5A.position = Return_value (hot)\n\netc etc etc\n\nI didn't see how it &quot;functions&quot; like a function, and thus couldn't understand how it works the same as the dual IF statements.",
      "EditableFormat": "bbcode",
      "HTML": "I understood what &quot; not &quot; is~does, that is very simple, what I don't understand is how this:<br/><br/>Rod 5A.position = not Rod 5A.position<br/><br/>is~does the same thing as:<br/><br/>if rod 5A.position = true<br/>then rod 5A.position = false<br/><br/>if rod 5A.position = false<br/>then rod 5A.position = true<br/><br/>how does this, &quot; Rod 5A.position = not Rod 5A.position &quot; , work in being~producing the same as this: &quot; if rod 5A.position = true, then rod 5A.position = false, and if rod 5A.position = false, then rod 5A.position = true &quot;<br/><br/>I don't understand the logic of it, of how it works in being the same thing as the &quot;expanded&quot; (the dual IF) statements.<br/><br/>-------------<br/><br/>P.S.<br/><br/>and your other codes are very interesting, thank you, I did not know you could do all those things, and especially without using the &quot;IF&quot; scripts!<br/><br/>-------------<br/><br/>P.S.S.<br/><br/>nvm (nevermind), I think I kinda understand now how it is working:<br/><br/>&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)<br/><br/>if Rod 5A.position = true:<br/><br/>&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)<br/>&quot;function&quot;: Rod 5A.position = Return_value (not true)<br/>&quot;function&quot;: Rod 5A.position = Return_value (false)<br/><br/>if Rod 5A.position = false:<br/><br/>&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)<br/>&quot;function&quot;: Rod 5A.position = Return_value (not false)<br/>&quot;function&quot;: Rod 5A.position = Return_value (true)<br/><br/>if Rod 5A.position = +X:<br/><br/>(pretending that &quot;not&quot; works here)<br/><br/>&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)<br/>&quot;function&quot;: Rod 5A.position = Return_value (not +X)<br/>&quot;function&quot;: Rod 5A.position = Return_value (-X)<br/><br/>if Rod 5A.position = -X:<br/><br/>(pretending that &quot;not&quot; works here)<br/><br/>&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)<br/>&quot;function&quot;: Rod 5A.position = Return_value (not -X)<br/>&quot;function&quot;: Rod 5A.position = Return_value (+X)<br/><br/>if Rod 5A.position = 0:<br/><br/>(pretending that &quot;not&quot; works with binary here)<br/><br/>&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)<br/>&quot;function&quot;: Rod 5A.position = Return_value (not 0)<br/>&quot;function&quot;: Rod 5A.position = Return_value (1)<br/><br/>if Rod 5A.position = 1:<br/><br/>(pretending that &quot;not&quot; works with binary here)<br/><br/>&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)<br/>&quot;function&quot;: Rod 5A.position = Return_value (not 1)<br/>&quot;function&quot;: Rod 5A.position = Return_value (0)<br/><br/>if Rod 5A.position = yes:<br/><br/>&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)<br/>&quot;function&quot;: Rod 5A.position = Return_value (not yes)<br/>&quot;function&quot;: Rod 5A.position = Return_value (no)<br/><br/>if Rod 5A.position = no:<br/><br/>&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)<br/>&quot;function&quot;: Rod 5A.position = Return_value (not no)<br/>&quot;function&quot;: Rod 5A.position = Return_value (yes)<br/><br/>if Rod 5A.position = hot:<br/><br/>&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)<br/>&quot;function&quot;: Rod 5A.position = Return_value (not hot)<br/>&quot;function&quot;: Rod 5A.position = Return_value (cold)<br/><br/>if Rod 5A.position = cold:<br/><br/>&quot;function&quot;: Rod 5A.position = Return_value (not Rod 5A.position)<br/>&quot;function&quot;: Rod 5A.position = Return_value (not cold)<br/>&quot;function&quot;: Rod 5A.position = Return_value (hot)<br/><br/>etc etc etc<br/><br/>I didn't see how it &quot;functions&quot; like a function, and thus couldn't understand how it works the same as the dual IF statements.",
      "PostDate": "2013-03-31T13:10:14+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "23796",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I'm a bit lost by the nomenclature you are using (espcially the constant referring to &quot;function&quot; and &quot;return_value&quot;, when what we have here are really expressions - you've basically wrapped &quot;not&quot; in another level of function), but as long as it's clear now, I'm good with it. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "I'm a bit lost by the nomenclature you are using (espcially the constant referring to &quot;function&quot; and &quot;return_value&quot;, when what we have here are really expressions - you've basically wrapped &quot;not&quot; in another level of function), but as long as it's clear now, I'm good with it. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-03-31T13:46:13+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "23798",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "ya, it's just my way of being able to understand how this code line is working as a replacement to the dual IF statements, lol.\nIt's acting like a function that returns (outputs) the opposite value of the input, at least that's how I'm able to understand it.",
      "EditableFormat": "bbcode",
      "HTML": "ya, it's just my way of being able to understand how this code line is working as a replacement to the dual IF statements, lol.<br/>It's acting like a function that returns (outputs) the opposite value of the input, at least that's how I'm able to understand it.",
      "PostDate": "2013-03-31T15:56:40+01:00",
      "LastEditDate": null
    }
  ]
}
