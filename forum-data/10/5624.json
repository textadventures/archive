{
  "Topic": {
    "TopicId": "5624",
    "ForumId": "10",
    "Title": "Assistance on Creating an Item Dispenser/Spawner",
    "LastUpdated": "2015-11-15T10:03:46+00:00",
    "ReplyCount": 3
  },
  "Posts": [
    {
      "PostId": "38708",
      "UserId": 0,
      "Username": "SeanTrunks",
      "UserAvatar": "7971_1447563213.jpg",
      "UserGravatar": "1d7f5bf02826f62d0ede3fd4599f8cc5",
      "EditableText": "I'm new on using Quest so I experimented around for a while until I came across this problem.\nI was creating a dispenser that infinitely creates the same item every time the player uses it. Said dispensed item can be used on multiple objects in the game which generates different results depending on what object it is used on. Once the item is used it's deleted so in a way it's a consumable item. There's also the fact that there are multiple items in the game with the same property.\n\nThe problem with this is the fact that cloned objects have a different name, confusing the scripts thus resulting in errors.\nTo what I've gathered so far it seems that a cloned object's name has a number on the last bit of its name (like &quot;item1&quot; and &quot;item2&quot; and so on.)\nI was wondering if there is a solution to this.\n\nPerhaps there is a way in the editor can &quot;generalize things&quot; so that the scripts don't need to be as precise with the names. Something like instead of the item name itself an expression like &quot;item[something]&quot; (where [something] can be anything) is used in its place. I was wondering if there is a (combination of) word(s) or symbol(s) available in the coding that have such a function like [something]. I'm curious if this is even possible at all or perhaps there is a better way of doing this compared to what I've speculated. \n\nI also pondered of instead of making it into an object I instead should make it into a status attribute like a money-like resource though I have not found out of a way to hide an attribute on the user interface when it's 0 (so that the player won't get spoiled on what items they will be finding) nor do I know of a way of a making it count in the inventory space since I plan on a limited inventory system.\n\nIf you know of a solution of doing this so that I can making a working infinite item dispenser/spawner then please let me know. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "I'm new on using Quest so I experimented around for a while until I came across this problem.<br/>I was creating a dispenser that infinitely creates the same item every time the player uses it. Said dispensed item can be used on multiple objects in the game which generates different results depending on what object it is used on. Once the item is used it's deleted so in a way it's a consumable item. There's also the fact that there are multiple items in the game with the same property.<br/><br/>The problem with this is the fact that cloned objects have a different name, confusing the scripts thus resulting in errors.<br/>To what I've gathered so far it seems that a cloned object's name has a number on the last bit of its name (like &quot;item1&quot; and &quot;item2&quot; and so on.)<br/>I was wondering if there is a solution to this.<br/><br/>Perhaps there is a way in the editor can &quot;generalize things&quot; so that the scripts don't need to be as precise with the names. Something like instead of the item name itself an expression like &quot;item[something]&quot; (where [something] can be anything) is used in its place. I was wondering if there is a (combination of) word(s) or symbol(s) available in the coding that have such a function like [something]. I'm curious if this is even possible at all or perhaps there is a better way of doing this compared to what I've speculated. <br/><br/>I also pondered of instead of making it into an object I instead should make it into a status attribute like a money-like resource though I have not found out of a way to hide an attribute on the user interface when it's 0 (so that the player won't get spoiled on what items they will be finding) nor do I know of a way of a making it count in the inventory space since I plan on a limited inventory system.<br/><br/>If you know of a solution of doing this so that I can making a working infinite item dispenser/spawner then please let me know. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2015-11-15T04:43:22+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38709",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "Instead of removing the item and cloning it, why not just move the object back to the dispenser?  Or, do you need more than one at a time?",
      "EditableFormat": "bbcode",
      "HTML": "Instead of removing the item and cloning it, why not just move the object back to the dispenser?  Or, do you need more than one at a time?",
      "PostDate": "2015-11-15T04:59:44+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38710",
      "UserId": 0,
      "Username": "SeanTrunks",
      "UserAvatar": "7971_1447563213.jpg",
      "UserGravatar": "1d7f5bf02826f62d0ede3fd4599f8cc5",
      "EditableText": "I would prefer if the player be able to carry multiple copies of the same item but I guess that would work although that would make puzzles that require multiple copies of the same item a bit tedious for the player since they will have to backtrack to the dispenser repeatedly.",
      "EditableFormat": "bbcode",
      "HTML": "I would prefer if the player be able to carry multiple copies of the same item but I guess that would work although that would make puzzles that require multiple copies of the same item a bit tedious for the player since they will have to backtrack to the dispenser repeatedly.",
      "PostDate": "2015-11-15T05:15:05+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38711",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[b:2fb0i276][i:2fb0i276]One Attribute[/i:2fb0i276][/b:2fb0i276]\n\nIf you want to go down the attributes route, you can add a status attribute during game, when the player first gets one of these things, like this:\n[code:2fb0i276]    dictionary add (player&#46;statusattributes, &quot;itemcount&quot;, &quot;Items&#58; !&quot;)[/code:2fb0i276]\nIf there are currently no attributes to show, this will even (I think) cause the status panel to appear. There will be a fair bit of scripting this way, but it will probably look more slick to the player.\n\nI am using code here; you may find this post helpful to understand how to copy it to your game:\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4771\">viewtopic.php?f=18&amp;t=4771</a><!-- l -->\n\n\n[b:2fb0i276][i:2fb0i276]Cloned Objects[/i:2fb0i276][/b:2fb0i276]\n\nIf you want multiple actual items, the easiest way is to test the name of the alias. The alias will be the same for all the clones. Insert an &quot;If&quot;, and in the expression box, try this:\n[code:2fb0i276]object&#46;alias = item&#46;alias[/code:2fb0i276]\n(I am assuming what you want to test is called &quot;object&quot;, you will have to change accordingly.\n\nRather more advanced, but it you try to use verbs rather than commands, you might be able to get around having to test at least sometimes. Verbs use scripts attached to the object, so when you clone the object the script is still there. You just have to remember to use [i:2fb0i276]this[/i:2fb0i276] to refer to the thing the script is attached to, rather than its name.\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5023\">viewtopic.php?f=18&amp;t=5023</a><!-- l -->",
      "EditableFormat": "bbcode",
      "HTML": "<span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">One Attribute</span></span><br/><br/>If you want to go down the attributes route, you can add a status attribute during game, when the player first gets one of these things, like this:<br/><pre><code>    dictionary add (player&#46;statusattributes, &quot;itemcount&quot;, &quot;Items&#58; !&quot;)</code></pre><br/>If there are currently no attributes to show, this will even (I think) cause the status panel to appear. There will be a fair bit of scripting this way, but it will probably look more slick to the player.<br/><br/>I am using code here; you may find this post helpful to understand how to copy it to your game:<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4771\">viewtopic.php?f=18&amp;t=4771</a><!-- l --><br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Cloned Objects</span></span><br/><br/>If you want multiple actual items, the easiest way is to test the name of the alias. The alias will be the same for all the clones. Insert an &quot;If&quot;, and in the expression box, try this:<br/><pre><code>object&#46;alias = item&#46;alias</code></pre><br/>(I am assuming what you want to test is called &quot;object&quot;, you will have to change accordingly.<br/><br/>Rather more advanced, but it you try to use verbs rather than commands, you might be able to get around having to test at least sometimes. Verbs use scripts attached to the object, so when you clone the object the script is still there. You just have to remember to use <span style=\"font-style:italic;\">this</span> to refer to the thing the script is attached to, rather than its name.<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5023\">viewtopic.php?f=18&amp;t=5023</a><!-- l -->",
      "PostDate": "2015-11-15T10:03:46+00:00",
      "LastEditDate": null
    }
  ]
}
