{
  "Topic": {
    "TopicId": "luhwe6nmc0ccvqlze8lhyq",
    "ForumId": "10",
    "Title": "QuestJS - placing object in container in order and update examine",
    "LastUpdated": "2024-04-09T10:04:33.7003285Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "1116cfde-2561-4be1-b7ed-38937cb47642",
      "UserId": 4060,
      "Username": "Jamie Furlong",
      "AvatarUrl": "https://graph.facebook.com/100001158940191/picture?width=80&height=80",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi,\r\n\r\nI'm starting a game in QuestJS and it seems I can use straight JS as well as the built-in definitions. I am trying to create a container that can only accept four items and can only accept them when they are placed in order. If one or more of the items has been placed in the container, the examine description should include this. So far I have the following code without errors but it is doing neither of these. I still allows me to place any object in any order, and when I examine it won't return the included object.\r\n\r\n// Create the platform object\r\nconst platform = createItem(\"platform\", CONTAINER(), {\r\n  loc: \"lost_journal\",\r\n  examine:\r\n    \"The platform has four small, rectangular holes in it. Chiselled by the bottom-left corner of each one are the numbers I, II, III, IV.\",\r\n});\r\n\r\n// Define the expected order of item types\r\nconst expectedOrder = [\"paper1\", \"paper2\", \"paper3\"];\r\n\r\n// Custom function to handle adding items to the platform\r\nplatform.onAddItem = function (item) {\r\n  // Get the index of the expected type for the next item\r\n  const expectedIndex = this.contents.length;\r\n\r\n  // Check if the item matches the expected type and order\r\n  if (item.type === expectedOrder[expectedIndex]) {\r\n    // Item is in the correct order, allow adding\r\n    this.contents.push(item);\r\n    // Update the examine description dynamically\r\n    this.examine = `The platform has four small, rectangular holes in it. Chiselled by the bottom-left corner of each one are the numbers I, II, III, IV. and ${item.type} on it.`;\r\n    return true;\r\n  } else {\r\n    // Item is not in the correct order or not one of the allowed types, prevent adding\r\n    msg(\"You can't do that.\");\r\n    return false;\r\n  }\r\n};",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi,</p>\n<p>I'm starting a game in QuestJS and it seems I can use straight JS as well as the built-in definitions. I am trying to create a container that can only accept four items and can only accept them when they are placed in order. If one or more of the items has been placed in the container, the examine description should include this. So far I have the following code without errors but it is doing neither of these. I still allows me to place any object in any order, and when I examine it won't return the included object.</p>\n<p>// Create the platform object<br>\nconst platform = createItem(\"platform\", CONTAINER(), {<br>\nloc: \"lost_journal\",<br>\nexamine:<br>\n\"The platform has four small, rectangular holes in it. Chiselled by the bottom-left corner of each one are the numbers I, II, III, IV.\",<br>\n});</p>\n<p>// Define the expected order of item types<br>\nconst expectedOrder = [\"paper1\", \"paper2\", \"paper3\"];</p>\n<p>// Custom function to handle adding items to the platform<br>\nplatform.onAddItem = function (item) {<br>\n// Get the index of the expected type for the next item<br>\nconst expectedIndex = this.contents.length;</p>\n<p>// Check if the item matches the expected type and order<br>\nif (item.type === expectedOrder[expectedIndex]) {<br>\n// Item is in the correct order, allow adding<br>\nthis.contents.push(item);<br>\n// Update the examine description dynamically<br>\nthis.examine = <code>The platform has four small, rectangular holes in it. Chiselled by the bottom-left corner of each one are the numbers I, II, III, IV. and ${item.type} on it.</code>;<br>\nreturn true;<br>\n} else {<br>\n// Item is not in the correct order or not one of the allowed types, prevent adding<br>\nmsg(\"You can't do that.\");<br>\nreturn false;<br>\n}<br>\n};</p>\n\n",
      "PostDate": "2024-04-09T10:04:33.7003285Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
