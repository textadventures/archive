{
  "Topic": {
    "TopicId": "kka-fj9lh06r_aspxzimog",
    "ForumId": "10",
    "Title": "Removing old random objects and duplicates",
    "LastUpdated": "2016-12-29T12:10:09.8623298Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "9bdfd873-97fd-4326-a458-3c4e6208a7f5",
      "UserId": 283832,
      "Username": "scrimshaw04",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8d126990ac9c6b79315d4db221bf6ef7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi all! Apologies for making so many topics, but I just can't solve this problem.\r\n\r\nI'm trying to create a script that activates when the player enters a room and removes all objects of a certain type. The objects are clones of template objects in another room.\r\n\r\n```\r\nforeach (obj, AllObjects()) {\r\n  if (obj.parent = player.parent and DoesInherit(obj, \"object_type\")) {\r\n    RemoveObject (this)\r\n  }\r\n  else {\r\n  }\r\n}\r\n```\r\nThe script mostly works but doesn't remove any objects, and I can't figure out why.\r\n\r\nSecondly, once the old cloned objects have been removed, the turn script I'm using makes a few random checks to see if any new objects spawn in the player's room. In these instances I don't want more than one object to spawn at once.\r\n\r\nHow can I write a script that would check if there are multiple instances of objects of the same type, and remove all but one of them?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi all! Apologies for making so many topics, but I just can't solve this problem.</p>\n<p>I'm trying to create a script that activates when the player enters a room and removes all objects of a certain type. The objects are clones of template objects in another room.</p>\n<pre><code>foreach (obj, AllObjects()) {\n  if (obj.parent = player.parent and DoesInherit(obj, \"object_type\")) {\n    RemoveObject (this)\n  }\n  else {\n  }\n}\n</code></pre>\n<p>The script mostly works but doesn't remove any objects, and I can't figure out why.</p>\n<p>Secondly, once the old cloned objects have been removed, the turn script I'm using makes a few random checks to see if any new objects spawn in the player's room. In these instances I don't want more than one object to spawn at once.</p>\n<p>How can I write a script that would check if there are multiple instances of objects of the same type, and remove all but one of them?</p>\n\n",
      "PostDate": "2016-12-29T12:10:09.8623298Z",
      "LastEditDate": "2016-12-30T12:19:54.3529215Z"
    },
    {
      "PostId": "b9998712-5021-4a25-a20b-cbeb94272d31",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The site actually prefers multiple threads instead of having all of your questions/topics in a single thread, as it does make sense... searching/reading through pages upon pages within a thread for specific posts/information is not fun... thus it's better to make new threads for each topic/question you've got.",
      "EditableFormat": "markdown",
      "HTML": "<p>The site actually prefers multiple threads instead of having all of your questions/topics in a single thread, as it does make sense... searching/reading through pages upon pages within a thread for specific posts/information is not fun... thus it's better to make new threads for each topic/question you've got.</p>\n\n",
      "PostDate": "2016-12-29T19:02:31.8830353Z",
      "LastEditDate": "2016-12-29T19:02:49.5152853Z"
    },
    {
      "PostId": "982e5070-83da-4cb8-9377-d4455fcba136",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "// this script needs to be used upon the 'player' already being set inside of a (the new) room, so you can test if the 'on entering a room' Script works or not (I can't remember if it's run before you're set inside of the new room or before you're set being inside of the new room):\r\n\r\n```\r\nforeach (obj, GetDirectChildren()) { // or you can use (depends on what you want/need): GetAllChildObjects ()\r\n  if (DoesInherit(obj, \"object_type\")) {\r\n    RemoveObject (obj)\r\n  }\r\n  else {\r\n  }\r\n}\r\n```\r\n\r\nalso you may want to use the 'destroy' Function instead ( http://docs.textadventures.co.uk/quest/scripts/destroy.html )\r\n\r\nas what the 'RemoveObject' Function ( http://docs.textadventures.co.uk/quest/functions/corelibrary/removeobject.html ) actual does is this, for an example:\r\n\r\n```\r\n// the 'player' Player Object is contained within the 'room' Room Object\r\n\r\n<object name=\"room\">\r\n  <inherit name=\"editor_room\" />\r\n  <object name=\"player\">\r\n    <inherit name=\"editor_object\" />\r\n    <inherit name=\"editor_player\" />\r\n  </object>\r\n</object>\r\n\r\nthis is the exact same thing (the built-in 'parent' Object reference Attribute is what actually controls the containment heirearchy) as the above:\r\n\r\n<object name=\"room\">\r\n  <inherit name=\"editor_room\" />\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n</object>\r\n\r\nand the same thing in scripting:\r\n\r\nMoveObject (player, room)\r\n\r\nand this scripting is the same thing as well:\r\n\r\nplayer.parent = room\r\n\r\n// -----------------------------------------------------------------------\r\n\r\nso, what the 'RemoveObject' Function does is this:\r\n\r\n<object name=\"room\">\r\n  <inherit name=\"editor_room\" />\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n  // if this was shown, this would be what it looks like:\r\n  // <attr name=\"parent\" type=\"object\">null</attr>\r\n  // when any Object's 'parent' is 'null', it means that it is NOT contained within any other Object, except that of the '<asl>game content/code</asl>' GAME CODE/CONTENT OBJECT\r\n  // notice how the 'room' Room Object, is actually also NOT contained within any other Object (in the above example as well as this one), if it's parent was shown, its value would be 'null' too, as it is only contained within the '<asl></asl>' GAME CODE/CONTENT OBJECT\r\n  // so, the 'RemoveObject' merely sets the 'parent' Object reference Attribute to be 'null', it removes the Object from being contained in another Object, and thus you still got the Object being maintained by the game. So, if you don't plan on reusing the Object, then you want to use the 'destroy' Function instead of the 'RemoveObject' Function. Often you want to destroy Clones, as once you're done with them, you want to get rid of them (as you can always clone more, such as when you buy an item from a shop feature, cloning and moving that item into your inventory). However, your original Object you would NOT ever want to 'destroy', so you can keep cloning it. You may want to 'RemoveObject' it however, for whatever the possible reason (can't think of one/a-scenario at the moment though, lol)\r\n</object>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>// this script needs to be used upon the 'player' already being set inside of a (the new) room, so you can test if the 'on entering a room' Script works or not (I can't remember if it's run before you're set inside of the new room or before you're set being inside of the new room):</p>\n<pre><code>foreach (obj, GetDirectChildren()) { // or you can use (depends on what you want/need): GetAllChildObjects ()\n  if (DoesInherit(obj, \"object_type\")) {\n    RemoveObject (obj)\n  }\n  else {\n  }\n}\n</code></pre>\n<p>also you may want to use the 'destroy' Function instead ( http://docs.textadventures.co.uk/quest/scripts/destroy.html )</p>\n<p>as what the 'RemoveObject' Function ( http://docs.textadventures.co.uk/quest/functions/corelibrary/removeobject.html ) actual does is this, for an example:</p>\n<pre><code>// the 'player' Player Object is contained within the 'room' Room Object\n\n&lt;object name=\"room\"&gt;\n  &lt;inherit name=\"editor_room\" /&gt;\n  &lt;object name=\"player\"&gt;\n    &lt;inherit name=\"editor_object\" /&gt;\n    &lt;inherit name=\"editor_player\" /&gt;\n  &lt;/object&gt;\n&lt;/object&gt;\n\nthis is the exact same thing (the built-in 'parent' Object reference Attribute is what actually controls the containment heirearchy) as the above:\n\n&lt;object name=\"room\"&gt;\n  &lt;inherit name=\"editor_room\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n&lt;/object&gt;\n\nand the same thing in scripting:\n\nMoveObject (player, room)\n\nand this scripting is the same thing as well:\n\nplayer.parent = room\n\n// -----------------------------------------------------------------------\n\nso, what the 'RemoveObject' Function does is this:\n\n&lt;object name=\"room\"&gt;\n  &lt;inherit name=\"editor_room\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n  // if this was shown, this would be what it looks like:\n  // &lt;attr name=\"parent\" type=\"object\"&gt;null&lt;/attr&gt;\n  // when any Object's 'parent' is 'null', it means that it is NOT contained within any other Object, except that of the '&lt;asl&gt;game content/code&lt;/asl&gt;' GAME CODE/CONTENT OBJECT\n  // notice how the 'room' Room Object, is actually also NOT contained within any other Object (in the above example as well as this one), if it's parent was shown, its value would be 'null' too, as it is only contained within the '&lt;asl&gt;&lt;/asl&gt;' GAME CODE/CONTENT OBJECT\n  // so, the 'RemoveObject' merely sets the 'parent' Object reference Attribute to be 'null', it removes the Object from being contained in another Object, and thus you still got the Object being maintained by the game. So, if you don't plan on reusing the Object, then you want to use the 'destroy' Function instead of the 'RemoveObject' Function. Often you want to destroy Clones, as once you're done with them, you want to get rid of them (as you can always clone more, such as when you buy an item from a shop feature, cloning and moving that item into your inventory). However, your original Object you would NOT ever want to 'destroy', so you can keep cloning it. You may want to 'RemoveObject' it however, for whatever the possible reason (can't think of one/a-scenario at the moment though, lol)\n&lt;/object&gt;\n</code></pre>\n\n",
      "PostDate": "2016-12-29T19:27:02.985727Z",
      "LastEditDate": null
    },
    {
      "PostId": "8692dca7-7df9-4def-a04d-c7f663030ad5",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\"\r\nSecondly, once the old cloned objects have been removed, the turn script I'm using makes a few random checks to see if any new objects spawn in the player's room. In these instances I don't want more than one object to spawn at once.\r\n\r\nHow can I write a script that would check if there are multiple instances of objects of the same type, and remove all but one of them?\r\n(scrim)\r\n\"\r\n\r\n----------------------------------------\r\n\r\njust give your Objects an Integer Attribute\r\n\r\n```\r\n<object name=\"bear\">\r\n  <inherit name=\"bear_type\" />\r\n  <attr name=\"clone_quantity_integer_attribute\" type=\"int\">0</attr>\r\n</object>\r\n\r\n<object name=\"wolf\">\r\n  <inherit name=\"wolf_type\" />\r\n  <attr name=\"clone_quantity_integer_attribute\" type=\"int\">0</attr>\r\n</object>\r\n\r\n<type name=\"bear_type\">\r\n  <inherit name=\"animal_type\" />\r\n</type>\r\n\r\n<type name=\"wolf_type\">\r\n  <inherit name=\"animal_type\" />\r\n</type>\r\n\r\n<type name=\"animal_type\">\r\n<attr name=\"clone_quantity_integer_attribute\" type=\"int\">0</attr>\r\n</type>\r\n\r\n// scripting:\r\n\r\n(when you Clone, you'll need to increase the original 'clone_quantity_integer_attribute' by 1)\r\n\r\n(err... the below needs a bit more work... as this is a bit more complex than I realized... but at least it gives you a start/idea on this stuff)\r\n\r\nforeach (object_variable, GetDirectChildren()) {\r\n  if (DoesInherit (object_variable, \"animal_type\")) {\r\n    object_variable.clone_quantity_integer_variable = object_variable.quantity_integer_variable + 1\r\n  }\r\n}\r\n\r\n// hopefully there's no issues with using a 'while' within a 'foreach'... lol:\r\nforeach (object_variable, GetDirectChildren()) {\r\n  if (DoesInherit (object_variable, \"animal_type\")) {\r\n    while (object_variable.quantity_integer_attribute > 1) {\r\n      Destroy (object_variable)\r\n      object_varaible.quantity_integer_variable = object_variable.quantity_integer_variable - 1\r\n    }\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>\"<br>\nSecondly, once the old cloned objects have been removed, the turn script I'm using makes a few random checks to see if any new objects spawn in the player's room. In these instances I don't want more than one object to spawn at once.</p>\n<p>How can I write a script that would check if there are multiple instances of objects of the same type, and remove all but one of them?<br>\n(scrim)<br>\n\"</p>\n<hr>\n<p>just give your Objects an Integer Attribute</p>\n<pre><code>&lt;object name=\"bear\"&gt;\n  &lt;inherit name=\"bear_type\" /&gt;\n  &lt;attr name=\"clone_quantity_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"wolf\"&gt;\n  &lt;inherit name=\"wolf_type\" /&gt;\n  &lt;attr name=\"clone_quantity_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;type name=\"bear_type\"&gt;\n  &lt;inherit name=\"animal_type\" /&gt;\n&lt;/type&gt;\n\n&lt;type name=\"wolf_type\"&gt;\n  &lt;inherit name=\"animal_type\" /&gt;\n&lt;/type&gt;\n\n&lt;type name=\"animal_type\"&gt;\n&lt;attr name=\"clone_quantity_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n&lt;/type&gt;\n\n// scripting:\n\n(when you Clone, you'll need to increase the original 'clone_quantity_integer_attribute' by 1)\n\n(err... the below needs a bit more work... as this is a bit more complex than I realized... but at least it gives you a start/idea on this stuff)\n\nforeach (object_variable, GetDirectChildren()) {\n  if (DoesInherit (object_variable, \"animal_type\")) {\n    object_variable.clone_quantity_integer_variable = object_variable.quantity_integer_variable + 1\n  }\n}\n\n// hopefully there's no issues with using a 'while' within a 'foreach'... lol:\nforeach (object_variable, GetDirectChildren()) {\n  if (DoesInherit (object_variable, \"animal_type\")) {\n    while (object_variable.quantity_integer_attribute &gt; 1) {\n      Destroy (object_variable)\n      object_varaible.quantity_integer_variable = object_variable.quantity_integer_variable - 1\n    }\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2016-12-29T19:50:06.5503638Z",
      "LastEditDate": "2016-12-29T19:56:39.2435014Z"
    },
    {
      "PostId": "a9a7ce22-56fd-412f-a004-8bbaa62421ac",
      "UserId": 283832,
      "Username": "scrimshaw04",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8d126990ac9c6b79315d4db221bf6ef7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\nThe site actually prefers multiple threads instead of having all of your questions/topics in a single thread, as it does make sense... searching/reading through pages upon pages within a thread for specific posts/information is not fun... thus it's better to make new threads for each topic/question you've got. (hegemonkhan)\r\n```\r\nI'll keep that in mind. My only concern was that I have so many questions, and I don't want to spam the forum. I really appreciate the help, though. :)\r\n\r\nOkay, so this is the script I'm currently using to try to remove all the old cloned animals from the room upon entry.\r\n\r\n```\r\nforeach (obj, GetDirectChildren (player.parent)) {\r\n  if (DoesInherit(obj, \"object_animal\")) {\r\n    destroy (obj)\r\n  }\r\n  else {\r\n  }\r\n}\r\n```\r\n\r\nThere are two issues I'm having currently. Firstly, the script seems to pick up on objects/animals the same turn that they spawn. I figured that placing this script (in the script when entering a room field) before the spawning script would mean that the removal script activates first, and THEN the spawn script would happen, but apparently that's not the case. Perhaps I need to place the removal script elsewhere, maybe so that it runs _before_ the player enters the room.\r\n\r\nThe second is that it doesn't actually remove the objects. It just returns this error:\r\n\r\nError running script: Error compiling expression 'obj': RootExpressionElement: Cannot convert type 'Element' to expression result of 'String'\r\n\r\nIt seems like 'destroy' wants me to refer to a specific object name/string rather than a generic class.\r\n\r\nI'm still working on understanding the script you posted for removing duplicate spawns, but one thing I don't understand is what the advantage of creating both a generic animal type as well as types for each individual animal is. Would it be better to just create a generic animal type, and then create individual animal _objects_ that inherit that generic type?",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>The site actually prefers multiple threads instead of having all of your questions/topics in a single thread, as it does make sense... searching/reading through pages upon pages within a thread for specific posts/information is not fun... thus it's better to make new threads for each topic/question you've got. (hegemonkhan)\n</code></pre>\n<p>I'll keep that in mind. My only concern was that I have so many questions, and I don't want to spam the forum. I really appreciate the help, though. :)</p>\n<p>Okay, so this is the script I'm currently using to try to remove all the old cloned animals from the room upon entry.</p>\n<pre><code>foreach (obj, GetDirectChildren (player.parent)) {\n  if (DoesInherit(obj, \"object_animal\")) {\n    destroy (obj)\n  }\n  else {\n  }\n}\n</code></pre>\n<p>There are two issues I'm having currently. Firstly, the script seems to pick up on objects/animals the same turn that they spawn. I figured that placing this script (in the script when entering a room field) before the spawning script would mean that the removal script activates first, and THEN the spawn script would happen, but apparently that's not the case. Perhaps I need to place the removal script elsewhere, maybe so that it runs <em>before</em> the player enters the room.</p>\n<p>The second is that it doesn't actually remove the objects. It just returns this error:</p>\n<p>Error running script: Error compiling expression 'obj': RootExpressionElement: Cannot convert type 'Element' to expression result of 'String'</p>\n<p>It seems like 'destroy' wants me to refer to a specific object name/string rather than a generic class.</p>\n<p>I'm still working on understanding the script you posted for removing duplicate spawns, but one thing I don't understand is what the advantage of creating both a generic animal type as well as types for each individual animal is. Would it be better to just create a generic animal type, and then create individual animal <em>objects</em> that inherit that generic type?</p>\n\n",
      "PostDate": "2016-12-30T12:12:55.1501339Z",
      "LastEditDate": "2016-12-30T12:24:52.9607835Z"
    },
    {
      "PostId": "9a22a4c8-ec9a-4ef0-869d-61871bba2fb5",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "`destroy` needs to have the name of the object, not the object itself (no idea why).\r\n```\r\ndestroy(obj.name)\r\n```\r\nAlso, I would do this on the script that runs when the player leaves the room, personally.",
      "EditableFormat": "markdown",
      "HTML": "<p><code>destroy</code> needs to have the name of the object, not the object itself (no idea why).</p>\n<pre><code>destroy(obj.name)\n</code></pre>\n<p>Also, I would do this on the script that runs when the player leaves the room, personally.</p>\n\n",
      "PostDate": "2016-12-30T13:31:23.569839Z",
      "LastEditDate": null
    },
    {
      "PostId": "ce560a56-837d-4201-b6b4-f8fbc0ee6b86",
      "UserId": 283832,
      "Username": "scrimshaw04",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8d126990ac9c6b79315d4db221bf6ef7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's strange, but thanks very much!\r\n\r\nI think in order to run the script when the player leaves a room I would use\r\n\r\n```\r\n    <roomleave type=\"script\"><![CDATA[\r\n      foreach (obj, GetDirectChildren (player.parent)) {\r\n        if (DoesInherit(obj, \"object_animal\")) {\r\n          destroy (obj.name)\r\n        }\r\n        else {\r\n        }\r\n      }\r\n    ]]></roomleave>\r\n```\r\n\r\nCorrect?\r\n\r\nUnfortunately that still doesn't seem to work.",
      "EditableFormat": "markdown",
      "HTML": "<p>That's strange, but thanks very much!</p>\n<p>I think in order to run the script when the player leaves a room I would use</p>\n<pre><code>    &lt;roomleave type=\"script\"&gt;&lt;![CDATA[\n      foreach (obj, GetDirectChildren (player.parent)) {\n        if (DoesInherit(obj, \"object_animal\")) {\n          destroy (obj.name)\n        }\n        else {\n        }\n      }\n    ]]&gt;&lt;/roomleave&gt;\n</code></pre>\n<p>Correct?</p>\n<p>Unfortunately that still doesn't seem to work.</p>\n\n",
      "PostDate": "2016-12-30T13:42:03.8066682Z",
      "LastEditDate": "2016-12-30T13:54:53.7701322Z"
    },
    {
      "PostId": "fa92cc3b-3f95-47d6-b7e0-c1cc7063603c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the 'GetDirectChildren' Function does NOT use/need parameters/arguments (inputs), so you need to change it to this:\r\n\r\nGetDirectChildren ()\r\n\r\n```\r\n    <roomleave type=\"script\"><![CDATA[\r\n      foreach (obj, GetDirectChildren ()) {\r\n        if (DoesInherit(obj, \"object_animal\")) {\r\n          destroy (obj.name)\r\n        }\r\n        else {\r\n        }\r\n      }\r\n    ]]></roomleave>\r\n```\r\n\r\n---------\r\n\r\n```\r\nalso, the '<![CDATA[ /*scripting*/ ]]>' tags is ONLY needed when you are working directly in-code (well, maybe if you use the [EXPRESSION] option in the GUI/Editor you need to include the CDATA tags, or maybe you don't, no idea if the GUI/Editor handles it for you or not) and are using and/or need the 'greater than' and/or 'lesser than' operations/symbols ('<' and/or '>'), such as (pseudocode): if (test.score >= 90) then test.grade = \"A\", as otherwise, quest will think these symbols are the coding tag symbols, and thus you'll have errors.\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>the 'GetDirectChildren' Function does NOT use/need parameters/arguments (inputs), so you need to change it to this:</p>\n<p>GetDirectChildren ()</p>\n<pre><code>    &lt;roomleave type=\"script\"&gt;&lt;![CDATA[\n      foreach (obj, GetDirectChildren ()) {\n        if (DoesInherit(obj, \"object_animal\")) {\n          destroy (obj.name)\n        }\n        else {\n        }\n      }\n    ]]&gt;&lt;/roomleave&gt;\n</code></pre>\n<hr>\n<pre><code>also, the '&lt;![CDATA[ /*scripting*/ ]]&gt;' tags is ONLY needed when you are working directly in-code (well, maybe if you use the [EXPRESSION] option in the GUI/Editor you need to include the CDATA tags, or maybe you don't, no idea if the GUI/Editor handles it for you or not) and are using and/or need the 'greater than' and/or 'lesser than' operations/symbols ('&lt;' and/or '&gt;'), such as (pseudocode): if (test.score &gt;= 90) then test.grade = \"A\", as otherwise, quest will think these symbols are the coding tag symbols, and thus you'll have errors.\n</code></pre>\n\n",
      "PostDate": "2016-12-30T14:11:35.6509249Z",
      "LastEditDate": "2016-12-30T14:16:37.8200749Z"
    },
    {
      "PostId": "498504e5-6ccd-4b81-b682-5b7c4d094f4e",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\"\r\nbut one thing I don't understand is what the advantage of creating both a generic animal type as well as types for each individual animal is. Would it be better to just create a generic animal type, and then create individual animal objects that inherit that generic type?\r\n(scrim)\r\n\"\r\n\r\n-----------------\r\n\r\noh, you certainly don't have to... it depends on how complex/deep and/or big (scale-wise) your design/game is... if your specific animal types (Object Types / Types) share the same Attributes, then it'd be good to make another Object Type / Type (which would have those shared/universal Attributes), and have the specific animal types inherit it. Less coding / less code redundency, better organization, etc etc etc. This is a bit more advanced coding design/structure topic, but it doesn't hurt to open it up for you to consider, or at least to think about.\r\n\r\nThere's two parts to coding:\r\n\r\n1. the coding itself (the basic scripting and concepts, syntax, what's available/built-in/\"instruction sets\" with the software you're using, etc etc etc)\r\n2. the design, structure, logic, and/or organization of the code\r\n\r\nonce you learn how to code... then the hard part is learning how to code well... (I'm still at this stage myself, as this is a really massive and very advanced topic)",
      "EditableFormat": "markdown",
      "HTML": "<p>\"<br>\nbut one thing I don't understand is what the advantage of creating both a generic animal type as well as types for each individual animal is. Would it be better to just create a generic animal type, and then create individual animal objects that inherit that generic type?<br>\n(scrim)<br>\n\"</p>\n<hr>\n<p>oh, you certainly don't have to... it depends on how complex/deep and/or big (scale-wise) your design/game is... if your specific animal types (Object Types / Types) share the same Attributes, then it'd be good to make another Object Type / Type (which would have those shared/universal Attributes), and have the specific animal types inherit it. Less coding / less code redundency, better organization, etc etc etc. This is a bit more advanced coding design/structure topic, but it doesn't hurt to open it up for you to consider, or at least to think about.</p>\n<p>There's two parts to coding:</p>\n<ol>\n<li>the coding itself (the basic scripting and concepts, syntax, what's available/built-in/\"instruction sets\" with the software you're using, etc etc etc)</li>\n<li>the design, structure, logic, and/or organization of the code</li>\n</ol>\n<p>once you learn how to code... then the hard part is learning how to code well... (I'm still at this stage myself, as this is a really massive and very advanced topic)</p>\n\n",
      "PostDate": "2016-12-30T14:20:50.9426771Z",
      "LastEditDate": "2016-12-30T14:28:54.8255235Z"
    },
    {
      "PostId": "3d26df55-b5ce-4ef8-9957-6b7d659d7519",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> the 'GetDirectChildren' Function does NOT use/need parameters/arguments (inputs)\r\n\r\nYes it does, it needs to know what object you want the children of:\r\nhttp://docs.textadventures.co.uk/quest/functions/getdirectchildren.html\r\n\r\n@scrimshaw04\r\n\r\nThe code looks good to me. What does happen? Is it possible you spelt \"object_animal\" differently somewhere? Are you sure the script is running (try adding a `msg` at the start, and see if the message appears).\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>the 'GetDirectChildren' Function does NOT use/need parameters/arguments (inputs)</p>\n</blockquote>\n<p>Yes it does, it needs to know what object you want the children of:<br>\nhttp://docs.textadventures.co.uk/quest/functions/getdirectchildren.html</p>\n<p>@scrimshaw04</p>\n<p>The code looks good to me. What does happen? Is it possible you spelt \"object_animal\" differently somewhere? Are you sure the script is running (try adding a <code>msg</code> at the start, and see if the message appears).</p>\n\n",
      "PostDate": "2016-12-30T16:47:51.8782319Z",
      "LastEditDate": null
    },
    {
      "PostId": "3d0f9339-7155-47cd-9c3b-3b4937868cf6",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "oops, my bad. For some reason I thought it automatically got the game.pov.parent, faulty memory... bugged (error) organic data structure design (my brain), laughs.",
      "EditableFormat": "markdown",
      "HTML": "<p>oops, my bad. For some reason I thought it automatically got the game.pov.parent, faulty memory... bugged (error) organic data structure design (my brain), laughs.</p>\n\n",
      "PostDate": "2016-12-30T21:01:41.6071102Z",
      "LastEditDate": "2016-12-30T21:02:59.6277061Z"
    },
    {
      "PostId": "d09bd600-f3c1-415b-bcab-d4e2211618b0",
      "UserId": 283832,
      "Username": "scrimshaw04",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8d126990ac9c6b79315d4db221bf6ef7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "No worries hegemon!\r\n\r\nI've triple checked spelling, and the object_animal should be spelled correctly everywhere, unless there's something I've missed. Or perhaps the animal objects aren't inheriting the object_animal type correctly? For each animal object I've added the object_animal type in the 'inherited types' field manually, but perhaps there's another way that I'm meant to do it?\r\n\r\nI tried throwing in messages for each step of the script, but none of them print. I tried that before, but I couldn't see any issues so I thought that it might be a quirk of quest. Maybe I've placed the leaveroom script in the wrong place? At the moment it immediately follows the roomenter tags, as a child of the game tags.",
      "EditableFormat": "markdown",
      "HTML": "<p>No worries hegemon!</p>\n<p>I've triple checked spelling, and the object_animal should be spelled correctly everywhere, unless there's something I've missed. Or perhaps the animal objects aren't inheriting the object_animal type correctly? For each animal object I've added the object_animal type in the 'inherited types' field manually, but perhaps there's another way that I'm meant to do it?</p>\n<p>I tried throwing in messages for each step of the script, but none of them print. I tried that before, but I couldn't see any issues so I thought that it might be a quirk of quest. Maybe I've placed the leaveroom script in the wrong place? At the moment it immediately follows the roomenter tags, as a child of the game tags.</p>\n\n",
      "PostDate": "2016-12-30T23:30:23.1302994Z",
      "LastEditDate": "2016-12-31T00:04:48.2767646Z"
    },
    {
      "PostId": "c566e237-6a16-4e3c-b271-57e1dc2ddde2",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sounds like the script is not getting run. Hard to tell why not without more information.",
      "EditableFormat": "markdown",
      "HTML": "<p>Sounds like the script is not getting run. Hard to tell why not without more information.</p>\n\n",
      "PostDate": "2016-12-31T09:08:30.375828Z",
      "LastEditDate": null
    },
    {
      "PostId": "de3386ef-7ac8-43d5-895f-24259dc35294",
      "UserId": 283832,
      "Username": "scrimshaw04",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8d126990ac9c6b79315d4db221bf6ef7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Seems that way, but I can't see the reason why. Is there an alternative way to run a script on leaving a room?\r\n\r\nOtherwise what information would help?",
      "EditableFormat": "markdown",
      "HTML": "<p>Seems that way, but I can't see the reason why. Is there an alternative way to run a script on leaving a room?</p>\n<p>Otherwise what information would help?</p>\n\n",
      "PostDate": "2016-12-31T09:36:02.6507915Z",
      "LastEditDate": "2016-12-31T09:43:27.1933646Z"
    },
    {
      "PostId": "3981bcf0-1b2b-4412-b370-10142409e067",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is this running when the player leaves any room? If so, I will gp back on what I said earlier. Go to the game object, and on the _Scripts_ tab you should see a script to run when entering a room. That would be the best place.",
      "EditableFormat": "markdown",
      "HTML": "<p>Is this running when the player leaves any room? If so, I will gp back on what I said earlier. Go to the game object, and on the <em>Scripts</em> tab you should see a script to run when entering a room. That would be the best place.</p>\n\n",
      "PostDate": "2016-12-31T14:33:39.6264377Z",
      "LastEditDate": null
    },
    {
      "PostId": "955a8fcd-525f-47fa-b715-0bcc53c2fcf6",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The room script invoked after you leave a room is called \"onexit\" not \"leaveroom\". I always use the Quest UI to create the scripts (e.g. with a dummy print), then I flesh them out, as I can never remember what they're called (and they're not consistent).\r\n\r\nKeep in mind that when the script is executed, the player is already in the next room. If you want the room the player just left, you can use \"this\".\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>The room script invoked after you leave a room is called \"onexit\" not \"leaveroom\". I always use the Quest UI to create the scripts (e.g. with a dummy print), then I flesh them out, as I can never remember what they're called (and they're not consistent).</p>\n<p>Keep in mind that when the script is executed, the player is already in the next room. If you want the room the player just left, you can use \"this\".</p>\n\n",
      "PostDate": "2016-12-31T23:38:34.9292461Z",
      "LastEditDate": "2016-12-31T23:41:45.6286513Z"
    },
    {
      "PostId": "4b952296-9c8a-478d-93f9-97a908bbaa50",
      "UserId": 283832,
      "Username": "scrimshaw04",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8d126990ac9c6b79315d4db221bf6ef7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks! That clears things up. \r\n\r\nI've been using the enterroom field on the game object to run a number of scripts. Unfortunately placing this script at the end of what's starting to be a pretty complicated series of scripts seems to remove animals as soon as they spawn.\r\n\r\n```\r\n      foreach (obj, GetDirectChildren (player.parent)) {\r\n        if (DoesInherit(obj, \"object_animal\")) {\r\n          destroy (obj.name)\r\n        }\r\n        else {\r\n        }\r\n      }\r\n```\r\n\r\nSo I made a copy of the default room type, and then added an an 'onexit' script to it. I also created an 'object' attribute on the player object called 'lastroom'. For the onexit script I used\r\n\r\n```\r\n    <onexit type=\"script\">\r\n      msg (\"Last Room was \" + player.lastroom)\r\n      foreach (obj, GetDirectChildren (player.lastroom)) {\r\n        if (DoesInherit(obj, \"object_animal\")) {\r\n          destroy (obj.name)\r\n        }\r\n        else {\r\n        }\r\n      }\r\n      player.lastroom = player.parent\r\n    </onexit>\r\n```\r\n\r\nMy goal was to run the script to remove all the animal objects in 'lastroom' and the redefine 'lastroom' to be the room that the player is currently in. Unfortunately, it still seems to destroy animals as soon as they spawn. It does seem to change the variable to be the previous room, though.\r\n\r\nAny ideas?",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks! That clears things up.</p>\n<p>I've been using the enterroom field on the game object to run a number of scripts. Unfortunately placing this script at the end of what's starting to be a pretty complicated series of scripts seems to remove animals as soon as they spawn.</p>\n<pre><code>      foreach (obj, GetDirectChildren (player.parent)) {\n        if (DoesInherit(obj, \"object_animal\")) {\n          destroy (obj.name)\n        }\n        else {\n        }\n      }\n</code></pre>\n<p>So I made a copy of the default room type, and then added an an 'onexit' script to it. I also created an 'object' attribute on the player object called 'lastroom'. For the onexit script I used</p>\n<pre><code>    &lt;onexit type=\"script\"&gt;\n      msg (\"Last Room was \" + player.lastroom)\n      foreach (obj, GetDirectChildren (player.lastroom)) {\n        if (DoesInherit(obj, \"object_animal\")) {\n          destroy (obj.name)\n        }\n        else {\n        }\n      }\n      player.lastroom = player.parent\n    &lt;/onexit&gt;\n</code></pre>\n<p>My goal was to run the script to remove all the animal objects in 'lastroom' and the redefine 'lastroom' to be the room that the player is currently in. Unfortunately, it still seems to destroy animals as soon as they spawn. It does seem to change the variable to be the previous room, though.</p>\n<p>Any ideas?</p>\n\n",
      "PostDate": "2017-01-02T03:07:41.1817496Z",
      "LastEditDate": "2017-01-02T03:42:12.2296994Z"
    },
    {
      "PostId": "e20b2614-2abf-4b2c-bde0-8d3153d5606b",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "hadn't looked at what you provided closely, but we may have to see your entire game code, as the issue may not be within the small section of code that you provided in your posts. The error could indeed just be in the code you provided in your posts, or you could have multiple errors, both in the code you provided and in code you've not provided.\r\n\r\nI'll see if I can spot any errors in the code you provided though I'm not quite following exactly what/design you're doing...\r\n\r\nbut again, we may need to see your entire game code, as it's easier for us to look at it, than for you to try to describe everything that you've done, lol.\r\n\r\n-------\r\n\r\nI can't tell from the code you've provided, we'll need to see your entire game code\r\n\r\nI have a feeling that it's with how you're handling your 'lastroom' Object Attribute and/or possibly with the 'onenter/onenterroom' and 'onexit/onexitroom'\r\n\r\nhandling an 'OLD/PREVIOUS_VALUE' is actually a bit more tricky than it seems, as you actually have to use two Attributes\r\n\r\nfor example:\r\n\r\n```\r\n<object name=\"room\"></object>\r\n<object name=\"room_1\"></object>\r\n<object name=\"room_2\"></object>\r\n<object name=\"room_3\"></object>\r\n\r\n<object name=\"player\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"previous_room_object_attribute\" type=\"object\">room</attr>\r\n  <attr name=\"current_room_object_attribute\" type=\"object\">room</attr>\r\n  <attr name=\"changedparent\" type=\"script\">\r\n    player.previous_room_object_attribute = player.current_room_object_attribute\r\n    player.current_room_object_attribute = player.parent\r\n  </attr>\r\n</object>\r\n\r\n// let's see how this is working:\r\n\r\nplayer.parent = room // initial location\r\nplayer.previous_room_object_attribute = room // initial value\r\nplayer.current_room_object_attribute = room // initial value\r\n\r\n// you move to and are now in room_3:\r\n\r\nplayer.parent = room_3\r\n// the 'changeparent' Script Attribute runs, and the results/changes are:\r\n// first we do this:\r\nplayer.previous_room_object_attribute = player.current_room_object_attribute // the 'player.current_room_object_attribute' still is equal to 'room', also the reason we need this 2nd Attribute, is because we can't use 'player.parent' as the 'player.parent' is now equal to 'room_3', it's no longer equal to 'room'\r\nplayer.previous_room_object_attribute = room\r\n// next/then/lastly we do this:\r\nplayer.current_room_object_attribute = player.parent // as 'player.parent' is now equal to 'room_3', it's no longer equal to 'room'\r\nplayer.current_room_object_attribute = room_3\r\n\r\n// you move to and are now in room_1:\r\n\r\nplayer.parent = room_1\r\n// the 'changeparent' Script Attribute runs, and the results/changes are:\r\n// first we do this:\r\nplayer.previous_room_object_attribute = player.current_room_object_attribute // the 'player.current_room_object_attribute' still is equal to 'room_3', also the reason we need this 2nd Attribute, is because we can't use 'player.parent' as the 'player.parent' is now equal to 'room_1', it's no longer equal to 'room_3'\r\nplayer.previous_room_object_attribute = room_3\r\n// next/then/lastly we do this:\r\nplayer.current_room_object_attribute = player.parent // as 'player.parent' is now equal to 'room_1', it's no longer equal to 'room_3'\r\nplayer.current_room_object_attribute = room_1\r\n\r\n// you move to and are now in room_2:\r\n\r\nplayer.parent = room_2\r\n// the 'changeparent' Script Attribute runs, and the results/changes are:\r\n// first we do this:\r\nplayer.previous_room_object_attribute = player.current_room_object_attribute // the 'player.current_room_object_attribute' still is equal to 'room_1', also the reason we need this 2nd Attribute, is because we can't use 'player.parent' as the 'player.parent' is now equal to 'room_2', it's no longer equal to 'room_1'\r\nplayer.previous_room_object_attribute = room_1\r\n// next/then/lastly we do this:\r\nplayer.current_room_object_attribute = player.parent // as 'player.parent' is now equal to 'room_2', it's no longer equal to 'room_3'\r\nplayer.current_room_object_attribute = room_2\r\n\r\n// hopefully you can see how this is working perfectly, we can use the 'player.previous_room_object_attribute' to return/move-back to the immediately previous room we were in (if we want to be able to go back to multiple previous rooms, we'd need to store multiple rooms, which would mean we'd need it to be an Object List Attribute, and not just an Object Attribute, and we'd be adding the current room attribute as items to our previous room objectlist attribute).\r\n```\r\n\r\n---------------\r\n\r\nand as for the 'enter/exit' it depends on how quest handles them, are they run before or after you're placed into the new room ???",
      "EditableFormat": "markdown",
      "HTML": "<p>hadn't looked at what you provided closely, but we may have to see your entire game code, as the issue may not be within the small section of code that you provided in your posts. The error could indeed just be in the code you provided in your posts, or you could have multiple errors, both in the code you provided and in code you've not provided.</p>\n<p>I'll see if I can spot any errors in the code you provided though I'm not quite following exactly what/design you're doing...</p>\n<p>but again, we may need to see your entire game code, as it's easier for us to look at it, than for you to try to describe everything that you've done, lol.</p>\n<hr>\n<p>I can't tell from the code you've provided, we'll need to see your entire game code</p>\n<p>I have a feeling that it's with how you're handling your 'lastroom' Object Attribute and/or possibly with the 'onenter/onenterroom' and 'onexit/onexitroom'</p>\n<p>handling an 'OLD/PREVIOUS_VALUE' is actually a bit more tricky than it seems, as you actually have to use two Attributes</p>\n<p>for example:</p>\n<pre><code>&lt;object name=\"room\"&gt;&lt;/object&gt;\n&lt;object name=\"room_1\"&gt;&lt;/object&gt;\n&lt;object name=\"room_2\"&gt;&lt;/object&gt;\n&lt;object name=\"room_3\"&gt;&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"previous_room_object_attribute\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"current_room_object_attribute\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"changedparent\" type=\"script\"&gt;\n    player.previous_room_object_attribute = player.current_room_object_attribute\n    player.current_room_object_attribute = player.parent\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n// let's see how this is working:\n\nplayer.parent = room // initial location\nplayer.previous_room_object_attribute = room // initial value\nplayer.current_room_object_attribute = room // initial value\n\n// you move to and are now in room_3:\n\nplayer.parent = room_3\n// the 'changeparent' Script Attribute runs, and the results/changes are:\n// first we do this:\nplayer.previous_room_object_attribute = player.current_room_object_attribute // the 'player.current_room_object_attribute' still is equal to 'room', also the reason we need this 2nd Attribute, is because we can't use 'player.parent' as the 'player.parent' is now equal to 'room_3', it's no longer equal to 'room'\nplayer.previous_room_object_attribute = room\n// next/then/lastly we do this:\nplayer.current_room_object_attribute = player.parent // as 'player.parent' is now equal to 'room_3', it's no longer equal to 'room'\nplayer.current_room_object_attribute = room_3\n\n// you move to and are now in room_1:\n\nplayer.parent = room_1\n// the 'changeparent' Script Attribute runs, and the results/changes are:\n// first we do this:\nplayer.previous_room_object_attribute = player.current_room_object_attribute // the 'player.current_room_object_attribute' still is equal to 'room_3', also the reason we need this 2nd Attribute, is because we can't use 'player.parent' as the 'player.parent' is now equal to 'room_1', it's no longer equal to 'room_3'\nplayer.previous_room_object_attribute = room_3\n// next/then/lastly we do this:\nplayer.current_room_object_attribute = player.parent // as 'player.parent' is now equal to 'room_1', it's no longer equal to 'room_3'\nplayer.current_room_object_attribute = room_1\n\n// you move to and are now in room_2:\n\nplayer.parent = room_2\n// the 'changeparent' Script Attribute runs, and the results/changes are:\n// first we do this:\nplayer.previous_room_object_attribute = player.current_room_object_attribute // the 'player.current_room_object_attribute' still is equal to 'room_1', also the reason we need this 2nd Attribute, is because we can't use 'player.parent' as the 'player.parent' is now equal to 'room_2', it's no longer equal to 'room_1'\nplayer.previous_room_object_attribute = room_1\n// next/then/lastly we do this:\nplayer.current_room_object_attribute = player.parent // as 'player.parent' is now equal to 'room_2', it's no longer equal to 'room_3'\nplayer.current_room_object_attribute = room_2\n\n// hopefully you can see how this is working perfectly, we can use the 'player.previous_room_object_attribute' to return/move-back to the immediately previous room we were in (if we want to be able to go back to multiple previous rooms, we'd need to store multiple rooms, which would mean we'd need it to be an Object List Attribute, and not just an Object Attribute, and we'd be adding the current room attribute as items to our previous room objectlist attribute).\n</code></pre>\n<hr>\n<p>and as for the 'enter/exit' it depends on how quest handles them, are they run before or after you're placed into the new room ???</p>\n\n",
      "PostDate": "2017-01-07T11:31:40.3277961Z",
      "LastEditDate": "2017-01-07T11:59:56.7148425Z"
    }
  ]
}
