{
  "Topic": {
    "TopicId": "158",
    "ForumId": "10",
    "Title": "Eh, Ramblings, Syntax Questioning, Theory, Etc.",
    "LastUpdated": "2003-11-01T03:37:06+00:00",
    "ReplyCount": 3
  },
  "Posts": [
    {
      "PostId": "789",
      "UserId": 0,
      "Username": "I think Im Dead",
      "UserAvatar": null,
      "UserGravatar": "662782b48efa4728f8d0773b83c01ddf",
      "EditableText": "Okay so I haven't coded anything in a while and I'm going after the skeleton I had of a grid system for rooms. Trying to make things run better and make more sense, be more self-sufficient sort of. \n\nA piece of syntax I'm wondering about is the old...\n\n[code:2q0wj5xw]\nfor &lt;i; 1; %thisnumber%&gt;\n[/code:2q0wj5xw]\n\nIs it possible to have two instances of that running in the same uh, \"process\". Let me explain better, ok, if a room has a layout of a grid, x and y, 10 by 10, and I wanted to visually represent this grid on the screen, sure I could just have quest get the x and y size of the room and print out a 10 box by 10 box little grid, that's easy enough. Now suppose we want to check each object in the room's properties to see if and what section of this grid it occupies, of course you can do a \"for each object\" type deal but it seems a little inefficient checking for each number of the grid. What I'm wondering is if a piece of syntax could look like this would work...\n\n[code:2q0wj5xw]\nfor &lt;x; 1; $objectproperty&#40;#quest&#46;currentroom#; x&#41;$&gt; AND for &lt;y; 1; $objectproperty&#40;#quest&#46;currentroom#; y&#41;$&gt; // maybe the and isn't necessary, perhaps just setting the variables to be anything on those scales is enough\n[/code:2q0wj5xw]\n\nIt seems like in some form it could work, Alex probably has it set up where the \"for\" only sets the variable as a \"sliding\" one and they can be combined, I just haven't tried it and wanted to shoot it by some people.\n\nAnother problem, though it seems easy enough, would be controlling view of objects through the direction they are facing. This seems easy to control via a scope type property on players, giving a virtual uh, peripheral vision. That seems easy to implement by only having the x and y co-ordinates of the map be positive numbers and in more sense a chart than a grid and processing only a cone type shape of the grid in that direction... ie:\n[code:2q0wj5xw]\n                 * pov\n1,1 1,2 1,3 1,4 1,5 1,6 1,7 1,8 1,9 1,10\n2,1 2,2 2,3 2,4 2,5 2,6 2,7 2,8 2,9 2,10\n3,1 3,2 3,3 3,4 3,5 3,6 3,7 3,8 3,9 3,10\n4,1 4,2 4,3 4,4 4,5 4,6 4,7 4,8 4,9 4,10\n5,1 5,1 5,3 5,4 5,5 5,6 5,7 5,8 5,9 5,10\n6,1 6,2 6,3 6,4 6,5 6,6 6,7 6,8 6,9 6,10\netc&#46;\nIf they are standing on 1,5 facing south, they can see 2,5 3,5 and 4,5 straight in front of them and a broad field of the according *,3 *,4 *,6 and *,7's as well&#46;\n[/code:2q0wj5xw]\n\nSo I suppose that seems sort of \"easy\" enough to do, right? I imagine to make it so quest can cout out the grid for viewing it would probably be best if it operated on some ansii graphic string variables that were preset. That way it tests each object in the room for it's \"grid\" position, stores those positions in variables with references to the object name, and these objects properties are tested to see if it is a mob, npc, piece of scenery, etc., and finally the grid can begin filling in empty squares get to a variable it knows an object is at, insert the appropriate little \"graphic\" and continue/repeat as necessary.\n\nEh, I don't know what this was about, just crap on my mind. As always, questions, comments, ideas, opinions and reaming is all welcome and all is open to interpretation.",
      "EditableFormat": "bbcode",
      "HTML": "Okay so I haven't coded anything in a while and I'm going after the skeleton I had of a grid system for rooms. Trying to make things run better and make more sense, be more self-sufficient sort of. <br/><br/>A piece of syntax I'm wondering about is the old...<br/><br/><pre><code><br/>for &lt;i; 1; %thisnumber%&gt;<br/></code></pre><br/><br/>Is it possible to have two instances of that running in the same uh, \"process\". Let me explain better, ok, if a room has a layout of a grid, x and y, 10 by 10, and I wanted to visually represent this grid on the screen, sure I could just have quest get the x and y size of the room and print out a 10 box by 10 box little grid, that's easy enough. Now suppose we want to check each object in the room's properties to see if and what section of this grid it occupies, of course you can do a \"for each object\" type deal but it seems a little inefficient checking for each number of the grid. What I'm wondering is if a piece of syntax could look like this would work...<br/><br/><pre><code><br/>for &lt;x; 1; $objectproperty&#40;#quest&#46;currentroom#; x&#41;$&gt; AND for &lt;y; 1; $objectproperty&#40;#quest&#46;currentroom#; y&#41;$&gt; // maybe the and isn't necessary, perhaps just setting the variables to be anything on those scales is enough<br/></code></pre><br/><br/>It seems like in some form it could work, Alex probably has it set up where the \"for\" only sets the variable as a \"sliding\" one and they can be combined, I just haven't tried it and wanted to shoot it by some people.<br/><br/>Another problem, though it seems easy enough, would be controlling view of objects through the direction they are facing. This seems easy to control via a scope type property on players, giving a virtual uh, peripheral vision. That seems easy to implement by only having the x and y co-ordinates of the map be positive numbers and in more sense a chart than a grid and processing only a cone type shape of the grid in that direction... ie:<br/><pre><code><br/>                 * pov<br/>1,1 1,2 1,3 1,4 1,5 1,6 1,7 1,8 1,9 1,10<br/>2,1 2,2 2,3 2,4 2,5 2,6 2,7 2,8 2,9 2,10<br/>3,1 3,2 3,3 3,4 3,5 3,6 3,7 3,8 3,9 3,10<br/>4,1 4,2 4,3 4,4 4,5 4,6 4,7 4,8 4,9 4,10<br/>5,1 5,1 5,3 5,4 5,5 5,6 5,7 5,8 5,9 5,10<br/>6,1 6,2 6,3 6,4 6,5 6,6 6,7 6,8 6,9 6,10<br/>etc&#46;<br/>If they are standing on 1,5 facing south, they can see 2,5 3,5 and 4,5 straight in front of them and a broad field of the according *,3 *,4 *,6 and *,7's as well&#46;<br/></code></pre><br/><br/>So I suppose that seems sort of \"easy\" enough to do, right? I imagine to make it so quest can cout out the grid for viewing it would probably be best if it operated on some ansii graphic string variables that were preset. That way it tests each object in the room for it's \"grid\" position, stores those positions in variables with references to the object name, and these objects properties are tested to see if it is a mob, npc, piece of scenery, etc., and finally the grid can begin filling in empty squares get to a variable it knows an object is at, insert the appropriate little \"graphic\" and continue/repeat as necessary.<br/><br/>Eh, I don't know what this was about, just crap on my mind. As always, questions, comments, ideas, opinions and reaming is all welcome and all is open to interpretation.",
      "PostDate": "2003-10-17T17:11:29+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "791",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "Right read most of the post ITID... Missed out some lines in your last 2 paragraphs I think (I'm a bit tired now... I'll re-read everything later and see if it makes more sense).\n\nFor your loops I would guess one within the other would do just fine. One loop counting the y's then a loop inside counting the x's....\nIe:\nloop1, = 1\nloop2:\n1,1 1,2 1,3 1,4 etc...\n\nthen loop1 = 2\nloop2:\n2,1 2,2 2,3 2,4 etc...\n\nI'm taking it your giving each object in the room a position vector property (ie property X and property Y) then just searching through it getting those values to see what is where (IMO the easiest way).\nYou can also move/drop these objects at different points on the grid easily, also throwing them shouldn't be too hard either - just alter the X and Y prop's.\n\nFor the perspective I would guess at 1, 3, 5, 5 being a good perspective...\nLet's example:\n[code:1dpox3kx]    # #\n  # # #\n# # # #\n  # # #\n    # #[/code:1dpox3kx]\nOr maybe something different. All you need to do is reference the players' position with his direction and alter the two loops from above to match this 1, 3, 5, 5 pattern.\nI may be able to go into more depth but I am quite tired (being awake for 24 hours AGAIN).... and hungry.... and thirsty....\n\nSlightly off topic but commenting on you going back to old work - I'm dreading going back to my RPG battle system after so long (about 1 month), I really want to get things going though as I don't honestly see things getting hard for quite a while! <!-- s:? --><img src=\"{SMILIES_PATH}/icon_e_confused.gif\" alt=\":?\" title=\"Confused\" /><!-- s:? -->",
      "EditableFormat": "bbcode",
      "HTML": "Right read most of the post ITID... Missed out some lines in your last 2 paragraphs I think (I'm a bit tired now... I'll re-read everything later and see if it makes more sense).<br/><br/>For your loops I would guess one within the other would do just fine. One loop counting the y's then a loop inside counting the x's....<br/>Ie:<br/>loop1, = 1<br/>loop2:<br/>1,1 1,2 1,3 1,4 etc...<br/><br/>then loop1 = 2<br/>loop2:<br/>2,1 2,2 2,3 2,4 etc...<br/><br/>I'm taking it your giving each object in the room a position vector property (ie property X and property Y) then just searching through it getting those values to see what is where (IMO the easiest way).<br/>You can also move/drop these objects at different points on the grid easily, also throwing them shouldn't be too hard either - just alter the X and Y prop's.<br/><br/>For the perspective I would guess at 1, 3, 5, 5 being a good perspective...<br/>Let's example:<br/><pre><code>    # #<br/>  # # #<br/># # # #<br/>  # # #<br/>    # #</code></pre><br/>Or maybe something different. All you need to do is reference the players' position with his direction and alter the two loops from above to match this 1, 3, 5, 5 pattern.<br/>I may be able to go into more depth but I am quite tired (being awake for 24 hours AGAIN).... and hungry.... and thirsty....<br/><br/>Slightly off topic but commenting on you going back to old work - I'm dreading going back to my RPG battle system after so long (about 1 month), I really want to get things going though as I don't honestly see things getting hard for quite a while! <!-- s:? --><img src=\"{SMILIES_PATH}/icon_e_confused.gif\" alt=\":?\" title=\"Confused\" /><!-- s:? -->",
      "PostDate": "2003-10-17T18:12:14+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "802",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "[quote:3ca85nca]Now suppose we want to check each object in the room's properties to see if and what section of this grid it occupies, of course you can do a \"for each object\" type deal but it seems a little inefficient checking for each number of the grid. What I'm wondering is if a piece of syntax could look like this would work... [/quote:3ca85nca]\n\nRe-read that... The thing that immediately comes to my mind is array!\nGo through a loop checking each object in the room and check the [b:3ca85nca]X[/b:3ca85nca] &amp; [b:3ca85nca]Y[/b:3ca85nca] properties. Then place this object in the array with the corrosponding [b:3ca85nca]X[/b:3ca85nca] and [b:3ca85nca]Y[/b:3ca85nca]....\nIE:\nObject 1 has properties &lt;X=2; Y=3&gt;\nAs you check through them you'd put object 1 in the array:\ncurrentroom[XY]\nIf you start at 0 and go to 9 then you can have a 10x10 grid stored easily.\nGetting the grid bigger is curious. I think the array right now is restricted to one-dimensional...\nSo work on a script to convert the Y in the example to 2 digits to get up to 9800-odd rooms. Or 3 digits for a higher grid.\n(NOTE: creating arrays above around 1000 means quest halts while it's creating them - Alex uses a Loop without \"do events\". I suggest you have rooms of 10x10 grids or 20x20 grids... I wanted a big array for my monsters I was working on. I found it wasn't necessary - more than 1000 monsters isn't needed??)\n\n.... Another problem arises when you put multiple objects in the same array space. This is easy if you put either markers to seperate the object names (/ or \\ does nicely) and use Quest's string processing functions to seperate them. You can always add numbers to the beginning to seperate certain criteria of objects if you want to use that to describe the squares or objects from players etc... I use this for monster actions FYI. I just need to actually move the code out of my head. <!-- s:wink: --><img src=\"{SMILIES_PATH}/icon_e_wink.gif\" alt=\":wink:\" title=\"Wink\" /><!-- s:wink: --> \n\nThe periferal(SP) vision I dealt with in my previous post as best as I could explain without taking up loads of space.\n\nAs for the displaying the object's etc - yes. A property maybe of \"sign=\" or \"type=\". Type would mean you take that, put it through a multiple \"if\" system and then display the result. The sign would mean it would display the sign as raw text. This (IMO) would be best as you can have slight variations etc... and put text code in there (|xb |cbl etc...) so it may be customizable to some degree.\nWith this customizability (yeesh! Long words aren't me!) comes the ability to ruin the map... The only help I can even attempt to offer here is to maybe stop text re-sizing, and stop anything over a certain amount... You can always allow the user to have a \"more info\" command for certain squares etc... Which can be stored in other properties!\n\nThis looks quite interesting... It would be very cool to be looking at a 10x10 grid seeing \"CW\" in red in a 'square'.\nOh, another thought entered my head - if you have 10 objects in a room then it will REALLY screw up the map. Maybe a key with \"1-10 objects = # 11-20 objects = #, 1-5 NPC's = #, 6-10 NPC's = #, 1-5 users = # etc...). That will limit the amount of distort by 100%, meaning they will need to ask for more details on certain squares to bring up the details.\n\nI've left the stuff above just as idea's for you - it may help, may not (the same applies for all of this post!)",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>Now suppose we want to check each object in the room's properties to see if and what section of this grid it occupies, of course you can do a \"for each object\" type deal but it seems a little inefficient checking for each number of the grid. What I'm wondering is if a piece of syntax could look like this would work... </p></blockquote><br/><br/>Re-read that... The thing that immediately comes to my mind is array!<br/>Go through a loop checking each object in the room and check the <span style=\"font-weight:bold;\">X</span> &amp; <span style=\"font-weight:bold;\">Y</span> properties. Then place this object in the array with the corrosponding <span style=\"font-weight:bold;\">X</span> and <span style=\"font-weight:bold;\">Y</span>....<br/>IE:<br/>Object 1 has properties &lt;X=2; Y=3&gt;<br/>As you check through them you'd put object 1 in the array:<br/>currentroom[XY]<br/>If you start at 0 and go to 9 then you can have a 10x10 grid stored easily.<br/>Getting the grid bigger is curious. I think the array right now is restricted to one-dimensional...<br/>So work on a script to convert the Y in the example to 2 digits to get up to 9800-odd rooms. Or 3 digits for a higher grid.<br/>(NOTE: creating arrays above around 1000 means quest halts while it's creating them - Alex uses a Loop without \"do events\". I suggest you have rooms of 10x10 grids or 20x20 grids... I wanted a big array for my monsters I was working on. I found it wasn't necessary - more than 1000 monsters isn't needed??)<br/><br/>.... Another problem arises when you put multiple objects in the same array space. This is easy if you put either markers to seperate the object names (/ or \\ does nicely) and use Quest's string processing functions to seperate them. You can always add numbers to the beginning to seperate certain criteria of objects if you want to use that to describe the squares or objects from players etc... I use this for monster actions FYI. I just need to actually move the code out of my head. <!-- s:wink: --><img src=\"{SMILIES_PATH}/icon_e_wink.gif\" alt=\":wink:\" title=\"Wink\" /><!-- s:wink: --> <br/><br/>The periferal(SP) vision I dealt with in my previous post as best as I could explain without taking up loads of space.<br/><br/>As for the displaying the object's etc - yes. A property maybe of \"sign=\" or \"type=\". Type would mean you take that, put it through a multiple \"if\" system and then display the result. The sign would mean it would display the sign as raw text. This (IMO) would be best as you can have slight variations etc... and put text code in there (|xb |cbl etc...) so it may be customizable to some degree.<br/>With this customizability (yeesh! Long words aren't me!) comes the ability to ruin the map... The only help I can even attempt to offer here is to maybe stop text re-sizing, and stop anything over a certain amount... You can always allow the user to have a \"more info\" command for certain squares etc... Which can be stored in other properties!<br/><br/>This looks quite interesting... It would be very cool to be looking at a 10x10 grid seeing \"CW\" in red in a 'square'.<br/>Oh, another thought entered my head - if you have 10 objects in a room then it will REALLY screw up the map. Maybe a key with \"1-10 objects = # 11-20 objects = #, 1-5 NPC's = #, 6-10 NPC's = #, 1-5 users = # etc...). That will limit the amount of distort by 100%, meaning they will need to ask for more details on certain squares to bring up the details.<br/><br/>I've left the stuff above just as idea's for you - it may help, may not (the same applies for all of this post!)",
      "PostDate": "2003-10-19T03:20:20+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "990",
      "UserId": 0,
      "Username": "codingmasters",
      "UserAvatar": null,
      "UserGravatar": "250751f8970f3fa0c377f52a0c81831f",
      "EditableText": "How do you get For/Next loops and arrays in QDK, like you were using above?\n\nMatthew G.",
      "EditableFormat": "bbcode",
      "HTML": "How do you get For/Next loops and arrays in QDK, like you were using above?<br/><br/>Matthew G.",
      "PostDate": "2003-11-01T03:37:06+00:00",
      "LastEditDate": null
    }
  ]
}
