{
  "Topic": {
    "TopicId": "fgwqpgse3e2hsq8_5ssvra",
    "ForumId": "10",
    "Title": "Clone Function/Attribute Question ^_^",
    "LastUpdated": "2017-02-07T04:13:18.3962047Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "052a8e98-f7b6-4967-ae16-a244778225a8",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/28lV6nMb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello! I might be shooting in the dark here, but is there a way to create a function that upon picking up a cloned item it assigns a random set of attributes? \r\n\r\nI know I could probably make an \"if script\" in the function, I was just wondering if there was an alternative way that I hadn't considered/thought about :) Thank you!\r\n\r\nAnonynn.  ",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello! I might be shooting in the dark here, but is there a way to create a function that upon picking up a cloned item it assigns a random set of attributes?</p>\n<p>I know I could probably make an \"if script\" in the function, I was just wondering if there was an alternative way that I hadn't considered/thought about :) Thank you!</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2017-02-07T04:13:18.3962047Z",
      "LastEditDate": null
    },
    {
      "PostId": "88a7ae54-0581-4fdb-aee0-a7cb2f7e2a11",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I had a load of them for Deeper. For example:\r\n```\r\n  <!--\r\n  Creates a monster from the given prototype and level, in the given room.\r\n  Gives treasure too via GiveTreasure\r\n  Note that a bigger scaling factor makes higher level monsters easier\r\n  -->\r\n  <function name=\"CreateFromPrototypeLevel\" parameters=\"obj, level, room\"><![CDATA[\r\n    o = CloneObjectAndMove(obj, room)\r\n    if (level < 1) {\r\n      level = 1\r\n    }\r\n    if (level > ListCount(obj.types)) {\r\n      level = ListCount(obj.types)\r\n    }\r\n    scalingfactor = 3\r\n    if (HasInt(obj, \"scalingfactor\")) {\r\n      scalingfactor = obj.scalingfactor\r\n    }\r\n    o.alias = CapFirst(StringListItem(obj.types, level - 1))\r\n    o.listalias = null\r\n    do(o, \"colourmylistalias\")\r\n    o.desc = StringListItem(obj.descs, level - 1)\r\n    o.level = level\r\n    o.hitpoints = 3 * o.hitpoints / 4 + 20 * level / scalingfactor\r\n    o.defence = o.defence + level / scalingfactor\r\n    o.armour = o.armour + (level - 2) / scalingfactor\r\n    o.attackbonus = o.attackbonus + level / scalingfactor\r\n    o.damagedicenumber = o.damagedicenumber + (level - 1) / scalingfactor\r\n    o.damagebonus = o.damagebonus + (level - 2) / scalingfactor\r\n    o.damagedicesides = o.damagedicesides + (level - 3) / scalingfactor\r\n    o.descs = null\r\n    o.types = null\r\n    o.original = null\r\n    foreach (attack, GetDirectChildren(obj)) {\r\n      newattack = CloneObjectAndMove (attack, o)\r\n      newattack.attackbonus = newattack.attackbonus + level / scalingfactor\r\n      newattack.damagedicenumber = newattack.damagedicenumber + (level - 1) / scalingfactor\r\n      newattack.damagebonus = newattack.damagebonus + (level - 2) / scalingfactor\r\n      newattack.damagedicesides = newattack.damagedicesides + (level - 3) / scalingfactor\r\n    }\r\n    GiveTreasure (o)\r\n  ]]></function>\r\n  \r\n  \r\n  <!--\r\n  Gives this monster treasure at random. By default, 5% of the time, but altered by\r\n  the monster's treasurechance attribute.\r\n  Treasure is picked at random from three rooms\r\n  rank1 if level less than 6\r\n  rank2 if level is 6 to 15\r\n  rank3 if level over 15\r\n  -->\r\n  <function name=\"GiveTreasure\" parameters=\"obj\">\r\n    if (RandomChance(obj.treasurechance)) {\r\n      if (RandomChance(3)) {\r\n        CreateScroll(obj.level, obj)\r\n      }\r\n      if (RandomChance(3)) {\r\n        CreateProtectionPotion(obj)\r\n      }\r\n      if (RandomChance(3)) {\r\n        CreateArmour(obj.level, obj)\r\n      }\r\n      if (RandomChance(6)) {\r\n        CloneObjectAndMove(masterhealingpotion, obj)\r\n      }\r\n      else {\r\n        master = GetTreasureMaster(obj.level)\r\n        CreateTreasure (master, obj)\r\n      }\r\n      GiveTreasure(obj)\r\n    }\r\n  </function>\r\n\r\n\r\n  <!--\r\n  Returns a string based on the input string, using text substitutions as the text\r\n  processor.\r\n  Additional these substitutions will be made:\r\n  %gem%     a gem\r\n  %metal%   a precious metal\r\n  %stone%   an ornamental stone\r\n  -->\r\n  <function name=\"Randomise\" parameters=\"s\" type=\"string\">\r\n    data = NewDictionary()\r\n    dictionary add (data, \"fulltext\", s)\r\n    s = ProcessTextSection(s, data)\r\n    s = Replace(s, \"%gem%\", PickOneStr(\"ruby|sapphire|crystal|amethyst|emerald|diamond|opal|moonstone|chrysoberyl|garnet|jade|onyx|sunstone|topaz|tourmaline|turquoise\"))\r\n    s = Replace(s, \"%metal%\", PickOneStr(\"electrum|gold|silver|white gold|crown gold|meteorite iron|mithril|adamantine|blood alloy\"))\r\n    s = Replace(s, \"%stone%\", PickOneStr(\"alabaster|soapstone|chlorite|wonderstone|limestone|onyx|obsidian|marble|moonstone|coral|amber\"))\r\n    return (s)\r\n  </function>\r\n  \r\n\r\n\r\n  <!--\r\n  Creates a randomised treasure from the given prototype in the given room.\r\n  -->\r\n  <function name=\"CreateTreasure\" parameters=\"obj, room\">\r\n    o = CloneObjectAndMove(obj, room)\r\n    if (HasString(o, \"look\")) o.look = Randomise(o.look)\r\n    o.price = o.price - GetRandomInt(o.price/-4, o.price/4)\r\n  </function>\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I had a load of them for Deeper. For example:</p>\n<pre><code>  &lt;!--\n  Creates a monster from the given prototype and level, in the given room.\n  Gives treasure too via GiveTreasure\n  Note that a bigger scaling factor makes higher level monsters easier\n  --&gt;\n  &lt;function name=\"CreateFromPrototypeLevel\" parameters=\"obj, level, room\"&gt;&lt;![CDATA[\n    o = CloneObjectAndMove(obj, room)\n    if (level &lt; 1) {\n      level = 1\n    }\n    if (level &gt; ListCount(obj.types)) {\n      level = ListCount(obj.types)\n    }\n    scalingfactor = 3\n    if (HasInt(obj, \"scalingfactor\")) {\n      scalingfactor = obj.scalingfactor\n    }\n    o.alias = CapFirst(StringListItem(obj.types, level - 1))\n    o.listalias = null\n    do(o, \"colourmylistalias\")\n    o.desc = StringListItem(obj.descs, level - 1)\n    o.level = level\n    o.hitpoints = 3 * o.hitpoints / 4 + 20 * level / scalingfactor\n    o.defence = o.defence + level / scalingfactor\n    o.armour = o.armour + (level - 2) / scalingfactor\n    o.attackbonus = o.attackbonus + level / scalingfactor\n    o.damagedicenumber = o.damagedicenumber + (level - 1) / scalingfactor\n    o.damagebonus = o.damagebonus + (level - 2) / scalingfactor\n    o.damagedicesides = o.damagedicesides + (level - 3) / scalingfactor\n    o.descs = null\n    o.types = null\n    o.original = null\n    foreach (attack, GetDirectChildren(obj)) {\n      newattack = CloneObjectAndMove (attack, o)\n      newattack.attackbonus = newattack.attackbonus + level / scalingfactor\n      newattack.damagedicenumber = newattack.damagedicenumber + (level - 1) / scalingfactor\n      newattack.damagebonus = newattack.damagebonus + (level - 2) / scalingfactor\n      newattack.damagedicesides = newattack.damagedicesides + (level - 3) / scalingfactor\n    }\n    GiveTreasure (o)\n  ]]&gt;&lt;/function&gt;\n  \n  \n  &lt;!--\n  Gives this monster treasure at random. By default, 5% of the time, but altered by\n  the monster's treasurechance attribute.\n  Treasure is picked at random from three rooms\n  rank1 if level less than 6\n  rank2 if level is 6 to 15\n  rank3 if level over 15\n  --&gt;\n  &lt;function name=\"GiveTreasure\" parameters=\"obj\"&gt;\n    if (RandomChance(obj.treasurechance)) {\n      if (RandomChance(3)) {\n        CreateScroll(obj.level, obj)\n      }\n      if (RandomChance(3)) {\n        CreateProtectionPotion(obj)\n      }\n      if (RandomChance(3)) {\n        CreateArmour(obj.level, obj)\n      }\n      if (RandomChance(6)) {\n        CloneObjectAndMove(masterhealingpotion, obj)\n      }\n      else {\n        master = GetTreasureMaster(obj.level)\n        CreateTreasure (master, obj)\n      }\n      GiveTreasure(obj)\n    }\n  &lt;/function&gt;\n\n\n  &lt;!--\n  Returns a string based on the input string, using text substitutions as the text\n  processor.\n  Additional these substitutions will be made:\n  %gem%     a gem\n  %metal%   a precious metal\n  %stone%   an ornamental stone\n  --&gt;\n  &lt;function name=\"Randomise\" parameters=\"s\" type=\"string\"&gt;\n    data = NewDictionary()\n    dictionary add (data, \"fulltext\", s)\n    s = ProcessTextSection(s, data)\n    s = Replace(s, \"%gem%\", PickOneStr(\"ruby|sapphire|crystal|amethyst|emerald|diamond|opal|moonstone|chrysoberyl|garnet|jade|onyx|sunstone|topaz|tourmaline|turquoise\"))\n    s = Replace(s, \"%metal%\", PickOneStr(\"electrum|gold|silver|white gold|crown gold|meteorite iron|mithril|adamantine|blood alloy\"))\n    s = Replace(s, \"%stone%\", PickOneStr(\"alabaster|soapstone|chlorite|wonderstone|limestone|onyx|obsidian|marble|moonstone|coral|amber\"))\n    return (s)\n  &lt;/function&gt;\n  \n\n\n  &lt;!--\n  Creates a randomised treasure from the given prototype in the given room.\n  --&gt;\n  &lt;function name=\"CreateTreasure\" parameters=\"obj, room\"&gt;\n    o = CloneObjectAndMove(obj, room)\n    if (HasString(o, \"look\")) o.look = Randomise(o.look)\n    o.price = o.price - GetRandomInt(o.price/-4, o.price/4)\n  &lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2017-02-07T08:05:53.2521446Z",
      "LastEditDate": null
    },
    {
      "PostId": "fa9b5c88-7851-4070-af9e-14cc2aa2fb55",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\n<object name=\"data_object\">\r\n</object>\r\n\r\n// this is to hold your desired attributes for use by the 'GetAttributeNames' Function (using an example of character attributes):\r\n// (think of this as your effective 'attribute list' as the 'GetAttributenames' Function takes all of an Object's Attributes and puts them into a list. SO, ONLY PUT IN YOUR DESIRED ATTRIBUTES HERE, don't put in any other attribtes --- actually, I may need to handle whatever default/built-in attributes are given automatically... doh... let me know if this is an issue and I'll try to handle it for you)\r\n\r\n<object name=\"character_attribute_data_object\">\r\n  <inherit name=\"character_attribute_type\" />\r\n  <attr name=\"condition_stringlist_attribute\" type=\"simplestringlist\">normal;alive</attr>\r\n  <attr name=\"strength_integer_attribute\" type=\"int\">0</attr>\r\n  // etc etc etc attributes\r\n</object>\r\n\r\n// this is to give your data object its needed attributes, that which though you do NOT want to be used by the 'GetAttributeNames' Function, as which you still need these attributes available for use in the Function:\r\n\r\n<type name=\"character_attribute_type\">\r\n  <attr name=\"parent\" type=\"object\">data_object</attr>\r\n  <attr name=\"alias\" type=\"string\">character attribute data object</attr>\r\n  <attr name=\"min_value_for_these_integer_attributes\" type=\"int\">0</attr>\r\n  <attr name=\"max_value_for_these_integer_attributes\" type=\"int\">100</attr>\r\n  <attr name=\"list_of_conditions_stringlist_attribute\" type=\"simplestringlist\">normal;alive;undead;poisoned;diseased;cursed;confused;parayled;asleep;etc etc etc</attr>\r\n</type>\r\n\r\n<function name=\"hk_in_progress_function_for_anonynn\" parameters=\"cloned_object_parameter, data_object_parameter\">\r\n\r\n  // creating a copy attribute stringlist (as a temporary-local VARIABLE: a stringlist Variable) so we can manipulate/work-with it in our/this Function:\r\n\r\n  attribute_stringlist_variable = NewStringList ()\r\n  foreach (attribute_variable, GetAttributeNames (data_object_parameter, false)) {\r\n    list add (attribute_stringlist_variable, attribute_variable)\r\n  }\r\n\r\n  // getting a random number for the getting of a random number-set of attributes to generate on the clone object:\r\n\r\n  random_number_set_of_attributes_variable = GetRandomInt (1, ListCount (attribute_stringlist_variable))\r\n\r\n  // generating/creating the random set of attributes and their values onto the cloned object:\r\n  // (ask if you need any parts of this explained)\r\n\r\n  for (not_used_variable, 1, random_number_set_of_attributes_variable) {\r\n    attribute_variable = StringListItem (attribute_stringlist_variable, GetRandomInt (0, ListCount (attribute_stringlist_variable) - 1))\r\n    if (TypeOf (data_object_parameter, attribute_variable) = \"int\") {\r\n      set (cloned_object_parameter, attribute_variable, GetRandomInt (GetInt (data_object_parameter, min_value_for_these_integer_attributes), GetInt (data_object_parameter, min_value_for_these_integer_attributes)))\r\n    }\r\n    // etc 'else if' handling for the other Attribute Types (let me know if you want/need the other attribute types to be handled)\r\n    else {\r\n      msg (\"Coding Error\")\r\n    }\r\n    list remove (attribute_stringlist_variable, attribute_variable)\r\n  }\r\n\r\n</function>\r\n```\r\n\r\n--------------\r\n\r\nP.S.\r\n\r\nlet me know, if you want this Function to also handle (and/or create) multiple and/or random cloned objects, as right now I just built it for taking in an already selected+created single clone object.",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>&lt;object name=\"data_object\"&gt;\n&lt;/object&gt;\n\n// this is to hold your desired attributes for use by the 'GetAttributeNames' Function (using an example of character attributes):\n// (think of this as your effective 'attribute list' as the 'GetAttributenames' Function takes all of an Object's Attributes and puts them into a list. SO, ONLY PUT IN YOUR DESIRED ATTRIBUTES HERE, don't put in any other attribtes --- actually, I may need to handle whatever default/built-in attributes are given automatically... doh... let me know if this is an issue and I'll try to handle it for you)\n\n&lt;object name=\"character_attribute_data_object\"&gt;\n  &lt;inherit name=\"character_attribute_type\" /&gt;\n  &lt;attr name=\"condition_stringlist_attribute\" type=\"simplestringlist\"&gt;normal;alive&lt;/attr&gt;\n  &lt;attr name=\"strength_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n  // etc etc etc attributes\n&lt;/object&gt;\n\n// this is to give your data object its needed attributes, that which though you do NOT want to be used by the 'GetAttributeNames' Function, as which you still need these attributes available for use in the Function:\n\n&lt;type name=\"character_attribute_type\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;data_object&lt;/attr&gt;\n  &lt;attr name=\"alias\" type=\"string\"&gt;character attribute data object&lt;/attr&gt;\n  &lt;attr name=\"min_value_for_these_integer_attributes\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"max_value_for_these_integer_attributes\" type=\"int\"&gt;100&lt;/attr&gt;\n  &lt;attr name=\"list_of_conditions_stringlist_attribute\" type=\"simplestringlist\"&gt;normal;alive;undead;poisoned;diseased;cursed;confused;parayled;asleep;etc etc etc&lt;/attr&gt;\n&lt;/type&gt;\n\n&lt;function name=\"hk_in_progress_function_for_anonynn\" parameters=\"cloned_object_parameter, data_object_parameter\"&gt;\n\n  // creating a copy attribute stringlist (as a temporary-local VARIABLE: a stringlist Variable) so we can manipulate/work-with it in our/this Function:\n\n  attribute_stringlist_variable = NewStringList ()\n  foreach (attribute_variable, GetAttributeNames (data_object_parameter, false)) {\n    list add (attribute_stringlist_variable, attribute_variable)\n  }\n\n  // getting a random number for the getting of a random number-set of attributes to generate on the clone object:\n\n  random_number_set_of_attributes_variable = GetRandomInt (1, ListCount (attribute_stringlist_variable))\n\n  // generating/creating the random set of attributes and their values onto the cloned object:\n  // (ask if you need any parts of this explained)\n\n  for (not_used_variable, 1, random_number_set_of_attributes_variable) {\n    attribute_variable = StringListItem (attribute_stringlist_variable, GetRandomInt (0, ListCount (attribute_stringlist_variable) - 1))\n    if (TypeOf (data_object_parameter, attribute_variable) = \"int\") {\n      set (cloned_object_parameter, attribute_variable, GetRandomInt (GetInt (data_object_parameter, min_value_for_these_integer_attributes), GetInt (data_object_parameter, min_value_for_these_integer_attributes)))\n    }\n    // etc 'else if' handling for the other Attribute Types (let me know if you want/need the other attribute types to be handled)\n    else {\n      msg (\"Coding Error\")\n    }\n    list remove (attribute_stringlist_variable, attribute_variable)\n  }\n\n&lt;/function&gt;\n</code></pre>\n<hr>\n<p>P.S.</p>\n<p>let me know, if you want this Function to also handle (and/or create) multiple and/or random cloned objects, as right now I just built it for taking in an already selected+created single clone object.</p>\n\n",
      "PostDate": "2017-02-07T08:09:39.4056722Z",
      "LastEditDate": "2017-02-07T08:30:28.4854974Z"
    },
    {
      "PostId": "08e5513a-fa24-42dc-bc0d-10ec640547b4",
      "UserId": 227864,
      "Username": "Talon",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3b6191c9adc337e83fec8e293e3fc584?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This stuff looks very interesting, have been using the ClonePrototype function alot, now i can see much more of where the logic behind it is..\r\n\r\none question i have though is there a way to reference the closed object.. like pulling an item out of a magicians hat, easily enough to have the object appear with a new alias, but i've had some trouble  having it referred to as the action triggers",
      "EditableFormat": "markdown",
      "HTML": "<p>This stuff looks very interesting, have been using the ClonePrototype function alot, now i can see much more of where the logic behind it is..</p>\n<p>one question i have though is there a way to reference the closed object.. like pulling an item out of a magicians hat, easily enough to have the object appear with a new alias, but i've had some trouble  having it referred to as the action triggers</p>\n\n",
      "PostDate": "2017-02-10T17:28:08.6901724Z",
      "LastEditDate": null
    }
  ]
}
