{
  "Topic": {
    "TopicId": "xl6z9fnkeemv-mtyiown_w",
    "ForumId": "10",
    "Title": "How to make a Combat Log with Status Panel Outputs",
    "LastUpdated": "2022-02-24T13:45:24.8139028Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "4eb13cbe-83dc-4be6-acd2-57d9e3fe62cd",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I am making a Combat Log which will use String Attributes to post Text with a variable component into the Status Panel.\r\n\r\nIt will work like so:\r\n```\r\nWhen [Current HP] is reduced,\r\n- Set game.pov.LOG_Old = game.pov.LOG_Mid\r\n- Set game.pov.LOG_Mid = game.pov.LOG_New\r\n- Set game.pov.LOG_New = {\"You took \" + [Value of Reduction of Current HP] + \"Damage.\"}\r\n```\r\nThe trouble is, I don't want to add this process to every single event which reduces a player's current HP.\r\n\r\nIs there a term I can use to record every single instance of game.pov.LIFE_C reduction to an Integer Attribute, which is then used to copy and paste that Integer into the [You took X Damage] String Attribute?",
      "EditableFormat": "markdown",
      "HTML": "<p>I am making a Combat Log which will use String Attributes to post Text with a variable component into the Status Panel.</p>\n<p>It will work like so:</p>\n<pre><code>When [Current HP] is reduced,\n- Set game.pov.LOG_Old = game.pov.LOG_Mid\n- Set game.pov.LOG_Mid = game.pov.LOG_New\n- Set game.pov.LOG_New = {\"You took \" + [Value of Reduction of Current HP] + \"Damage.\"}\n</code></pre>\n<p>The trouble is, I don't want to add this process to every single event which reduces a player's current HP.</p>\n<p>Is there a term I can use to record every single instance of game.pov.LIFE_C reduction to an Integer Attribute, which is then used to copy and paste that Integer into the [You took X Damage] String Attribute?</p>\n\n",
      "PostDate": "2022-02-24T13:45:24.8139028Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "05cc377d-02d0-4df4-9fd7-264fc6fd9e0b",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Maybe I can start each turn with\r\n```\r\nIf LIFE_StartTurn - LIFE_C > 0\r\n- Then\r\n- LIFE_LastDamage = LIFE_StartTurn - LIFE_C\r\n- game.pov.OLDLOG = game.pov.MIDLOG\r\n- game.pov.MIDLOG = game.pov.NEWLOG\r\n- game.pov.NEWLOG = \"You took \" + LIFE_LastDamage + \"Damage.\"\r\nLIFE_StartTurn = LIFE_C\r\n```\r\n\r\nDoes this work?",
      "EditableFormat": "markdown",
      "HTML": "<p>Maybe I can start each turn with</p>\n<pre><code>If LIFE_StartTurn - LIFE_C &gt; 0\n- Then\n- LIFE_LastDamage = LIFE_StartTurn - LIFE_C\n- game.pov.OLDLOG = game.pov.MIDLOG\n- game.pov.MIDLOG = game.pov.NEWLOG\n- game.pov.NEWLOG = \"You took \" + LIFE_LastDamage + \"Damage.\"\nLIFE_StartTurn = LIFE_C\n</code></pre>\n<p>Does this work?</p>\n\n",
      "PostDate": "2022-02-24T13:54:27.7742787Z",
      "LastEditDate": "2022-02-24T13:57:29.6863887Z",
      "link": null
    },
    {
      "PostId": "ba4b2d4b-a24c-411c-9706-9229232467fd",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I may also need to check if Satiation is 0 or lower, and if so, ignore the 1 damage lost from being hungry, but i may be fine with that 1 damage being included in the combat log's total...",
      "EditableFormat": "markdown",
      "HTML": "<p>I may also need to check if Satiation is 0 or lower, and if so, ignore the 1 damage lost from being hungry, but i may be fine with that 1 damage being included in the combat log's total...</p>\n\n",
      "PostDate": "2022-02-24T13:59:54.2253828Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "184f553a-de45-4a42-bc73-946fe512a07f",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have gotten a method working as such:\r\n```\r\nif (game.pov.LIFE_StartTurn - game.pov.LIFE_C > 0) {\r\n  game.pov.LIFE_LastDamage = game.pov.LIFE_StartTurn - game.pov.LIFE_C\r\n  game.pov.LOG_Old = \"---\" + game.pov.LOG_Mid\r\n  game.pov.LOG_Mid = \"---\" + game.pov.LOG_New\r\n  game.pov.LOG_New = \"---You lost \" + game.pov.LIFE_LastDamage + \" Health.\"\r\n}\r\ngame.pov.OLDLOG = game.pov.LOG_Old\r\ngame.pov.MIDLOG = game.pov.LOG_Mid\r\ngame.pov.NEWLOG = game.pov.LOG_New\r\ngame.pov.LIFE_StartTurn = game.pov.LIFE_C\r\n```\r\nDoes that look good? Or is there a much better way?",
      "EditableFormat": "markdown",
      "HTML": "<p>I have gotten a method working as such:</p>\n<pre><code>if (game.pov.LIFE_StartTurn - game.pov.LIFE_C &gt; 0) {\n  game.pov.LIFE_LastDamage = game.pov.LIFE_StartTurn - game.pov.LIFE_C\n  game.pov.LOG_Old = \"---\" + game.pov.LOG_Mid\n  game.pov.LOG_Mid = \"---\" + game.pov.LOG_New\n  game.pov.LOG_New = \"---You lost \" + game.pov.LIFE_LastDamage + \" Health.\"\n}\ngame.pov.OLDLOG = game.pov.LOG_Old\ngame.pov.MIDLOG = game.pov.LOG_Mid\ngame.pov.NEWLOG = game.pov.LOG_New\ngame.pov.LIFE_StartTurn = game.pov.LIFE_C\n</code></pre>\n<p>Does that look good? Or is there a much better way?</p>\n\n",
      "PostDate": "2022-02-24T14:26:28.4577043Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c0600ae8-c6b6-41c5-a6bc-81652fdc41d2",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Do you want to have a log for every event that reduces the player's HP, or every turn?\r\n\r\nI would probably make a function that reduces the player's HP and updates the messages, unless you want it to be one message per turn.\r\n\r\nI'm not sure what the difference is between `OLDLOG` and `LOG_Old`. Is there some reason you need 2 copies of those attributes?\r\n\r\nThis method seems logical as  long as you want a constant 3 lines of log; if you want more, it would probably make sense to switch to a list-based approach to avoid having three separate attributes.",
      "EditableFormat": "markdown",
      "HTML": "<p>Do you want to have a log for every event that reduces the player's HP, or every turn?</p>\n<p>I would probably make a function that reduces the player's HP and updates the messages, unless you want it to be one message per turn.</p>\n<p>I'm not sure what the difference is between <code>OLDLOG</code> and <code>LOG_Old</code>. Is there some reason you need 2 copies of those attributes?</p>\n<p>This method seems logical as  long as you want a constant 3 lines of log; if you want more, it would probably make sense to switch to a list-based approach to avoid having three separate attributes.</p>\n\n",
      "PostDate": "2022-02-24T17:04:41.0985457Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a096ce28-f10a-446d-a473-09428240288b",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OLDLOG is the Status that's in Game > Player\r\n\r\nLog_Old is the Attribute that's listed on the playable characters themselves.",
      "EditableFormat": "markdown",
      "HTML": "<p>OLDLOG is the Status that's in Game &gt; Player</p>\n<p>Log_Old is the Attribute that's listed on the playable characters themselves.</p>\n\n",
      "PostDate": "2022-02-24T19:44:48.9229992Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "10b0c76b-47da-4767-8d56-925614467f17",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I suppose a list would be better.\r\n\r\nIdeally, there would be the 3 last turns shown in panel, and a list of like... the last 20 - which can only be seen by use of a command like 'Com Log'",
      "EditableFormat": "markdown",
      "HTML": "<p>I suppose a list would be better.</p>\n<p>Ideally, there would be the 3 last turns shown in panel, and a list of like... the last 20 - which can only be seen by use of a command like 'Com Log'</p>\n\n",
      "PostDate": "2022-02-24T19:46:23.0935521Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "aed3faae-2930-41d7-9a30-98ad85250401",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(EDIT: Fixed a silly mistake)\r\n\r\n> OLDLOG is the Status that's in Game > Player\r\n>\r\n> Log_Old is the Attribute that's listed on the playable characters themselves.\r\n\r\nWhy don't you use the same attribute for both?\r\n\r\n<hr/>\r\n\r\n> I suppose a list would be better.\r\n> \r\n> Ideally, there would be the 3 last turns shown in panel, and a list of like... the last 20 - which can only be seen by use of a command like 'Com Log'\r\n\r\nThat's what I was thinking.\r\nYou could have a couple of functions to handle it, in case you decide you want to add stuff to the log at some point. You could have a function likeâ€¦\r\n\r\n```\r\n<function name=\"AddLogMessage\" parameters=\"message\">\r\n  // Create the list in case it doesn't exist\r\n  if (not HasAttribute (game.pov, \"logmessages\")) {\r\n    game.pov.logmessages = NewStringList()\r\n  }\r\n\r\n  // Add the new message\r\n  list add (game.pov.logmessages, message)\r\n\r\n  // If there's more than 20 messages saved, discard the oldest\r\n  while (ListCount (game.pov.logmessages) > 20) {\r\n    oldest = ListItem (game.pov.logmessages, 0)\r\n    list remove (game.pov.logmessages, oldest)\r\n  }\r\n\r\n  // And make a nice list that we can put in the statusattributes, using the last 3 messages\r\n  game.pov.LOG = \"<ul>\"\r\n  for (i, ListCount (game.pov.logmessages)-3, ListCount (game.pov.logmessages)-1) {\r\n    if (i >= 0) {\r\n      game.pov.LOG = game.pov.LOG + \"<li>\" + ListItem (game.pov.logmessages, i) + \"</li>\"\r\n    }\r\n  }\r\n  game.pov.LOG = game.pov.LOG + \"</ul>\"\r\n</function>\r\n```\r\n\r\nYou could call `AddLogMessage` from a `TakeDamage` function; from a turnscript; or from a `game.pov.changedLIFE_C` script.\r\nActually, I would probably use the changescript option, just because it works automatically. You could do something like:\r\n```\r\nif (IsDefined (\"oldvalue\")) {\r\n  damage = this.LIFE_C - oldvalue\r\n  if (HasString (this, \"damage_message\")) {\r\n    if (not this.damage_message = \"\") {\r\n      damage = \"\" + Abs(damage)\r\n      AddLogMessage (Replace (this.damage_message, \"!\", damage))\r\n    }\r\n    this.damage_message = null\r\n  }\r\n  else {\r\n    if (damage < 0) {\r\n      AddLogMessage (\"You healed \" + (0 - damage) + \"damage.\")\r\n    }\r\n    else {\r\n      AddLogMessage (\"You took \" + damage + \"damage.\")\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThat way, you can do something like:\r\n```\r\ngame.pov.LIFE_C = game.pov.LIFE_C - 10\r\n```\r\nand it generates the message automatically;\r\n\r\nor you could do:\r\n```\r\ngame.pov.damage_message = \"You burned yourself and took # damage.\"\r\ngame.pov.LIFE_C = game.pov.LIFE_C - GetRandomInt(2,4)\r\n```\r\nto get a more specific message\r\n\r\nor for slow damage like fatigue:\r\n```\r\ngame.pov.damage_message = \"\"\r\ngame.pov.LIFE_C = game.pov.LIFE_C - 1\r\n```\r\nstops a message from appearing for that specific damage type.",
      "EditableFormat": "markdown",
      "HTML": "<p>(EDIT: Fixed a silly mistake)</p>\n<blockquote>\n<p>OLDLOG is the Status that's in Game &gt; Player</p>\n<p>Log_Old is the Attribute that's listed on the playable characters themselves.</p>\n</blockquote>\n<p>Why don't you use the same attribute for both?</p>\n<hr>\n<blockquote>\n<p>I suppose a list would be better.</p>\n<p>Ideally, there would be the 3 last turns shown in panel, and a list of like... the last 20 - which can only be seen by use of a command like 'Com Log'</p>\n</blockquote>\n<p>That's what I was thinking.<br>\nYou could have a couple of functions to handle it, in case you decide you want to add stuff to the log at some point. You could have a function likeâ€¦</p>\n<pre><code>&lt;function name=\"AddLogMessage\" parameters=\"message\"&gt;\n  // Create the list in case it doesn't exist\n  if (not HasAttribute (game.pov, \"logmessages\")) {\n    game.pov.logmessages = NewStringList()\n  }\n\n  // Add the new message\n  list add (game.pov.logmessages, message)\n\n  // If there's more than 20 messages saved, discard the oldest\n  while (ListCount (game.pov.logmessages) &gt; 20) {\n    oldest = ListItem (game.pov.logmessages, 0)\n    list remove (game.pov.logmessages, oldest)\n  }\n\n  // And make a nice list that we can put in the statusattributes, using the last 3 messages\n  game.pov.LOG = \"&lt;ul&gt;\"\n  for (i, ListCount (game.pov.logmessages)-3, ListCount (game.pov.logmessages)-1) {\n    if (i &gt;= 0) {\n      game.pov.LOG = game.pov.LOG + \"&lt;li&gt;\" + ListItem (game.pov.logmessages, i) + \"&lt;/li&gt;\"\n    }\n  }\n  game.pov.LOG = game.pov.LOG + \"&lt;/ul&gt;\"\n&lt;/function&gt;\n</code></pre>\n<p>You could call <code>AddLogMessage</code> from a <code>TakeDamage</code> function; from a turnscript; or from a <code>game.pov.changedLIFE_C</code> script.<br>\nActually, I would probably use the changescript option, just because it works automatically. You could do something like:</p>\n<pre><code>if (IsDefined (\"oldvalue\")) {\n  damage = this.LIFE_C - oldvalue\n  if (HasString (this, \"damage_message\")) {\n    if (not this.damage_message = \"\") {\n      damage = \"\" + Abs(damage)\n      AddLogMessage (Replace (this.damage_message, \"!\", damage))\n    }\n    this.damage_message = null\n  }\n  else {\n    if (damage &lt; 0) {\n      AddLogMessage (\"You healed \" + (0 - damage) + \"damage.\")\n    }\n    else {\n      AddLogMessage (\"You took \" + damage + \"damage.\")\n    }\n  }\n}\n</code></pre>\n<p>That way, you can do something like:</p>\n<pre><code>game.pov.LIFE_C = game.pov.LIFE_C - 10\n</code></pre>\n<p>and it generates the message automatically;</p>\n<p>or you could do:</p>\n<pre><code>game.pov.damage_message = \"You burned yourself and took # damage.\"\ngame.pov.LIFE_C = game.pov.LIFE_C - GetRandomInt(2,4)\n</code></pre>\n<p>to get a more specific message</p>\n<p>or for slow damage like fatigue:</p>\n<pre><code>game.pov.damage_message = \"\"\ngame.pov.LIFE_C = game.pov.LIFE_C - 1\n</code></pre>\n<p>stops a message from appearing for that specific damage type.</p>\n\n",
      "PostDate": "2022-02-24T23:53:48.7897497Z",
      "LastEditDate": "2022-02-25T09:47:10.483123Z",
      "link": null
    },
    {
      "PostId": "79ea4bf4-28bd-4a28-8c5b-c6b09a6c3e4d",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I just only ever saw someone using the LIFE / LIFE_Current / LIFE_Max method, so i've been recreating it the same way for my satiation, inventory and combat log just in case it would cause problems not to have separate things...",
      "EditableFormat": "markdown",
      "HTML": "<p>I just only ever saw someone using the LIFE / LIFE_Current / LIFE_Max method, so i've been recreating it the same way for my satiation, inventory and combat log just in case it would cause problems not to have separate things...</p>\n\n",
      "PostDate": "2022-02-25T09:09:23.4514439Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2d2919c2-8b62-4ae5-8f5a-4e44c19c6823",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I just only ever saw someone using the LIFE / LIFE_Current / LIFE_Max method, so i've been recreating it the same way for my satiation, inventory and combat log just in case it would cause problems not to have separate things...\r\n\r\nAh, that makes sense.\r\n\r\nThe reason they're duplicated is because LIFE_Current and LIFE_Max are separate numbers, and need to be stored in separate attributes so that you can do arithmetic on them when the player takes damageâ€¦ but the status attributes pane shows a single value. So you need 2 values for arithmetic, and a combined one for the status attribute.\r\n\r\nThere's no need to duplicate an attribute unless there is something different.\r\n\r\nAs you'll see in my example of how you could use a list for the status log, there's a separate variable for the status pane: because `game.pov.logmessages` is a list of the last 20 messages, and `game.pov.LOG` is a string containing the last 3 messages (status attributes cannot be lists; but there's nothing to stop you putting more than one line of text in them)\r\n\r\nIn fact, if you wanted to, you could set up the whole status pane with a single status attribute.\r\nIn the list of status attributes, you'd put a single attribute, key `STATUS` and value `!`\r\nAnd then have a turnscript:\r\n```\r\ngame.text_processor_this = game.pov\r\ngame.pov.STATUS = ProcessText (\"Health: {this.LIFE_Current} / {this.LIFE_Max}<br/>Hunger: {this.HUNGER_Current} / {this.HUNGER_Max}<br/>{if this.POISON > 0:You are poisoned<br/>}Add more data hereâ€¦\")\r\n```\r\nThis method would have the advantage that you can easily have attributes that disappear when not needed (like only showing the \"ammo\" line when the player has a gun)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I just only ever saw someone using the LIFE / LIFE_Current / LIFE_Max method, so i've been recreating it the same way for my satiation, inventory and combat log just in case it would cause problems not to have separate things...</p>\n</blockquote>\n<p>Ah, that makes sense.</p>\n<p>The reason they're duplicated is because LIFE_Current and LIFE_Max are separate numbers, and need to be stored in separate attributes so that you can do arithmetic on them when the player takes damageâ€¦ but the status attributes pane shows a single value. So you need 2 values for arithmetic, and a combined one for the status attribute.</p>\n<p>There's no need to duplicate an attribute unless there is something different.</p>\n<p>As you'll see in my example of how you could use a list for the status log, there's a separate variable for the status pane: because <code>game.pov.logmessages</code> is a list of the last 20 messages, and <code>game.pov.LOG</code> is a string containing the last 3 messages (status attributes cannot be lists; but there's nothing to stop you putting more than one line of text in them)</p>\n<p>In fact, if you wanted to, you could set up the whole status pane with a single status attribute.<br>\nIn the list of status attributes, you'd put a single attribute, key <code>STATUS</code> and value <code>!</code><br>\nAnd then have a turnscript:</p>\n<pre><code>game.text_processor_this = game.pov\ngame.pov.STATUS = ProcessText (\"Health: {this.LIFE_Current} / {this.LIFE_Max}&lt;br/&gt;Hunger: {this.HUNGER_Current} / {this.HUNGER_Max}&lt;br/&gt;{if this.POISON &gt; 0:You are poisoned&lt;br/&gt;}Add more data hereâ€¦\")\n</code></pre>\n<p>This method would have the advantage that you can easily have attributes that disappear when not needed (like only showing the \"ammo\" line when the player has a gun)</p>\n\n",
      "PostDate": "2022-02-25T09:46:19.2324276Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c0775e5e-9576-4a6b-afca-0d69d01e57bd",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Interesting... It's going to take me a few reads to get my head around all this, but I think I will work on converting the Log to a list, and maybe even using that single TEXT status display...",
      "EditableFormat": "markdown",
      "HTML": "<p>Interesting... It's going to take me a few reads to get my head around all this, but I think I will work on converting the Log to a list, and maybe even using that single TEXT status display...</p>\n\n",
      "PostDate": "2022-02-25T09:54:04.8706881Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
