{
  "Topic": {
    "TopicId": "dfahayn6g0gckdeca7wowa",
    "ForumId": "10",
    "Title": "Random exits for random rooms",
    "LastUpdated": "2022-04-04T20:49:36.7844308Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "5f5b68d9-42b4-406c-9c81-6f93a7303a5b",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "A section of my game has a series of rooms where the locations of the rooms will be different each time you played the game.\r\nIn the example below, I want the _**'Stone Path'**_ and the _**'Woodland Glen'**_ to be fixed points, but the rooms under the heading _**'Section_Forest'**_, to be randomised, with maybe more than one exit to the rooms, so a random maze, between the two rooms.\r\nI've put the _**'north'**_ exit in from the 'woodland glen', so i can make sure its the same path, within the game, but different each time the game is played.\r\nI've had a go at starting the process off by 'going east from the stone path' takes you to a random room from the 'Section_Forest' list, but its all the connections in between that I need the help with.\r\n\r\n```\r\n<!--Saved by Quest 5.8.6836.13983-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Test - Random Rooms\">\r\n    <gameid>4bb0f984-8b49-4e7a-ac3c-5bdd45279561</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2022</firstpublished>\r\n    <start type=\"script\">\r\n      game.ForestList = NewObjectList()\r\n      foreach (o, GetDirectChildren(Section_Forest)) {\r\n        // msg (o.name)\r\n        list add (game.ForestList, o)\r\n      }\r\n    </start>\r\n    <attr name=\"autodescription_youarein_useprefix\" type=\"boolean\">false</attr>\r\n    <attr name=\"autodescription_description\" type=\"int\">2</attr>\r\n    <attr name=\"autodescription_youcansee\" type=\"int\">3</attr>\r\n    <attr name=\"autodescription_youcango\" type=\"int\">4</attr>\r\n  </game>\r\n  <object name=\"stone_path\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <usedefaultprefix />\r\n    <descprefix>You are on</descprefix>\r\n    <alias>stone path</alias>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"east\">\r\n      <inherit name=\"eastdirection\" />\r\n      <runscript />\r\n      <script type=\"script\">\r\n        firsttime {\r\n          stone_path.PickForest = PickOneObject (game.ForestList)\r\n          // msg (stone_path.PickForest)\r\n          create exit (\"west\", stone_path.PickForest, stone_path)\r\n          MoveObject (player, stone_path.PickForest)\r\n        }\r\n        otherwise {\r\n          MoveObject (player, stone_path.PickForest)\r\n        }\r\n      </script>\r\n    </exit>\r\n    <exit alias=\"south\" to=\"woodland_glen\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Section_Forest\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"clearing\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>clearing</alias>\r\n    </object>\r\n    <object name=\"pine_grove\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>pine grove</alias>\r\n    </object>\r\n    <object name=\"birches\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>birches</alias>\r\n    </object>\r\n    <object name=\"twilight\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>twilight</alias>\r\n    </object>\r\n    <object name=\"eerie_copse\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>eerie copse</alias>\r\n    </object>\r\n    <object name=\"willow\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>willow</alias>\r\n    </object>\r\n  </object>\r\n  <object name=\"woodland_glen\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>woodland glen</alias>\r\n    <exit alias=\"north\" to=\"stone_path\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n</asl>\r\n```\r\nI'm not using the built-in map, so not really bothered about overlapping rooms, etc\r\n\r\nAny help is gratefully received\r\n\r\nStill struggling with trying to create random exits to random rooms, if anyone can help.",
      "EditableFormat": "markdown",
      "HTML": "<p>A section of my game has a series of rooms where the locations of the rooms will be different each time you played the game.<br>\nIn the example below, I want the <em><strong>'Stone Path'</strong></em> and the <em><strong>'Woodland Glen'</strong></em> to be fixed points, but the rooms under the heading <em><strong>'Section_Forest'</strong></em>, to be randomised, with maybe more than one exit to the rooms, so a random maze, between the two rooms.<br>\nI've put the <em><strong>'north'</strong></em> exit in from the 'woodland glen', so i can make sure its the same path, within the game, but different each time the game is played.<br>\nI've had a go at starting the process off by 'going east from the stone path' takes you to a random room from the 'Section_Forest' list, but its all the connections in between that I need the help with.</p>\n<pre><code>&lt;!--Saved by Quest 5.8.6836.13983--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Test - Random Rooms\"&gt;\n    &lt;gameid&gt;4bb0f984-8b49-4e7a-ac3c-5bdd45279561&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2022&lt;/firstpublished&gt;\n    &lt;start type=\"script\"&gt;\n      game.ForestList = NewObjectList()\n      foreach (o, GetDirectChildren(Section_Forest)) {\n        // msg (o.name)\n        list add (game.ForestList, o)\n      }\n    &lt;/start&gt;\n    &lt;attr name=\"autodescription_youarein_useprefix\" type=\"boolean\"&gt;false&lt;/attr&gt;\n    &lt;attr name=\"autodescription_description\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youcansee\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youcango\" type=\"int\"&gt;4&lt;/attr&gt;\n  &lt;/game&gt;\n  &lt;object name=\"stone_path\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;usedefaultprefix /&gt;\n    &lt;descprefix&gt;You are on&lt;/descprefix&gt;\n    &lt;alias&gt;stone path&lt;/alias&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"east\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n      &lt;runscript /&gt;\n      &lt;script type=\"script\"&gt;\n        firsttime {\n          stone_path.PickForest = PickOneObject (game.ForestList)\n          // msg (stone_path.PickForest)\n          create exit (\"west\", stone_path.PickForest, stone_path)\n          MoveObject (player, stone_path.PickForest)\n        }\n        otherwise {\n          MoveObject (player, stone_path.PickForest)\n        }\n      &lt;/script&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"woodland_glen\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Section_Forest\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"clearing\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;clearing&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"pine_grove\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;pine grove&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"birches\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;birches&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"twilight\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;twilight&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"eerie_copse\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;eerie copse&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"willow\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;willow&lt;/alias&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=\"woodland_glen\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;woodland glen&lt;/alias&gt;\n    &lt;exit alias=\"north\" to=\"stone_path\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n<p>I'm not using the built-in map, so not really bothered about overlapping rooms, etc</p>\n<p>Any help is gratefully received</p>\n<p>Still struggling with trying to create random exits to random rooms, if anyone can help.</p>\n\n",
      "PostDate": "2022-04-04T20:49:36.7844308Z",
      "LastEditDate": "2022-04-10T15:53:18.2150197Z",
      "link": null
    },
    {
      "PostId": "f1b2e818-f2a6-4134-9b8a-e2e911725ead",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Still having problems with this, but I have come up with a solution of sorts, well two actually, both are in the following game.\r\nThe first one is the **Section_Forest**, which is quite linear, as the random location is decided by the players move and not perfect.\r\nThe second solution is the **Section_Maze**, which randomises the rooms at the start, but I'm having problems with the random element picking the same location for the exit leading to the same room.\r\nI had a go at trying to solve the problem by creating the function '_GetRandomLocation(MazeList)_',but that produced an error message.\r\nAnyway, here Is what I've done so far, and as always, any help is much appreciated.\r\n\r\n```\r\n<!--Saved by Quest 5.8.6836.13983-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Test - Random Rooms\">\r\n    <gameid>4bb0f984-8b49-4e7a-ac3c-5bdd45279561</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2022</firstpublished>\r\n    <attr name=\"autodescription_youarein_useprefix\" type=\"boolean\">false</attr>\r\n    <attr name=\"autodescription_description\" type=\"int\">2</attr>\r\n    <attr name=\"autodescription_youcansee\" type=\"int\">3</attr>\r\n    <attr name=\"autodescription_youcango\" type=\"int\">4</attr>\r\n    <start type=\"script\">\r\n      game.DirectionMasterList = NewStringList()\r\n      foreach (o, Split(\"north;south;east;west\")) {\r\n        list add (game.DirectionMasterList, o)\r\n      }\r\n      // msg (\"Direction Master List\" + game.DirectionMasterList)\r\n    </start>\r\n    <feature_annotations />\r\n  </game>\r\n  <object name=\"stone_path\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <usedefaultprefix />\r\n    <descprefix>You are on</descprefix>\r\n    <alias>stone path</alias>\r\n    <beforeenter type=\"script\">\r\n    </beforeenter>\r\n    <onexit type=\"script\">\r\n    </onexit>\r\n    <enter type=\"script\">\r\n    </enter>\r\n    <WhatIf type=\"int\">4</WhatIf>\r\n    <beforefirstenter type=\"script\">\r\n      GetRandomRoom (this, game.ForestList, woodland_glen)\r\n    </beforefirstenter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"south\" to=\"woodland_glen\">\r\n      <inherit name=\"southdirection\" />\r\n      <runscript type=\"boolean\">false</runscript>\r\n      <message type=\"string\"></message>\r\n      <script type=\"script\">\r\n      </script>\r\n    </exit>\r\n    <exit alias=\"east\" to=\"Maze1\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Section_Forest\">\r\n    <inherit name=\"editor_object\" />\r\n    <feature_startscript />\r\n    <attr name=\"_initialise_\" type=\"script\">\r\n      // msg (\"Initialise (game.ForestList)\")\r\n      game.ForestList = NewObjectList()\r\n      foreach (o, GetDirectChildren(Section_Forest)) {\r\n        // msg (o.name)\r\n        list add (game.ForestList, o)\r\n      }\r\n    </attr>\r\n    <object name=\"clearing\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>clearing</alias>\r\n      <beforeenter type=\"script\">\r\n      </beforeenter>\r\n      <beforefirstenter type=\"script\">\r\n        GetRandomRoom (this, game.ForestList, woodland_glen)\r\n      </beforefirstenter>\r\n      <firstenter type=\"script\">\r\n      </firstenter>\r\n    </object>\r\n    <object name=\"pine_grove\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>pine grove</alias>\r\n      <beforeenter type=\"script\">\r\n      </beforeenter>\r\n      <firstenter type=\"script\">\r\n      </firstenter>\r\n      <beforefirstenter type=\"script\">\r\n        GetRandomRoom (this, game.ForestList, woodland_glen)\r\n      </beforefirstenter>\r\n    </object>\r\n    <object name=\"birches\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>birches</alias>\r\n      <beforeenter type=\"script\">\r\n      </beforeenter>\r\n      <firstenter type=\"script\">\r\n      </firstenter>\r\n      <beforefirstenter type=\"script\">\r\n        GetRandomRoom (this, game.ForestList, woodland_glen)\r\n      </beforefirstenter>\r\n    </object>\r\n    <object name=\"twilight\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>twilight</alias>\r\n      <beforeenter type=\"script\">\r\n      </beforeenter>\r\n      <firstenter type=\"script\">\r\n      </firstenter>\r\n      <beforefirstenter type=\"script\">\r\n        GetRandomRoom (this, game.ForestList, woodland_glen)\r\n      </beforefirstenter>\r\n    </object>\r\n    <object name=\"eerie_copse\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>eerie copse</alias>\r\n      <beforeenter type=\"script\">\r\n      </beforeenter>\r\n      <firstenter type=\"script\">\r\n      </firstenter>\r\n      <beforefirstenter type=\"script\">\r\n        GetRandomRoom (this, game.ForestList, woodland_glen)\r\n      </beforefirstenter>\r\n    </object>\r\n    <object name=\"willow\">\r\n      <inherit name=\"editor_room\" />\r\n      <alias>willow</alias>\r\n      <beforeenter type=\"script\">\r\n      </beforeenter>\r\n      <firstenter type=\"script\">\r\n      </firstenter>\r\n      <beforefirstenter type=\"script\">\r\n        GetRandomRoom (this, game.ForestList, woodland_glen)\r\n      </beforefirstenter>\r\n    </object>\r\n  </object>\r\n  <object name=\"woodland_glen\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>woodland glen</alias>\r\n    <exit alias=\"north\" to=\"stone_path\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Section_Maze\">\r\n    <feature_startscript />\r\n    <attr name=\"_initialise_\" type=\"script\">\r\n      GetRandomMaze (stone_path)\r\n    </attr>\r\n    <attr name=\"implementation_notes\"><![CDATA[Problems to solve<br/><br/>RandomMazeLocation - PickOneObject(MazeList)<br/>How to prevent it being the same location as you are currently in<br/><br/>If the above line is changed to:<br/>RandomMazeLocation - GetRandomLocation(MazeList)<br/>Error]]></attr>\r\n    <object name=\"Maze1\">\r\n      <inherit name=\"editor_room\" />\r\n    </object>\r\n    <object name=\"Maze2\">\r\n      <inherit name=\"editor_room\" />\r\n    </object>\r\n    <object name=\"Maze3\">\r\n      <inherit name=\"editor_room\" />\r\n    </object>\r\n    <object name=\"Maze4\">\r\n      <inherit name=\"editor_room\" />\r\n    </object>\r\n    <object name=\"Maze5\">\r\n      <inherit name=\"editor_room\" />\r\n    </object>\r\n    <object name=\"Maze6\">\r\n      <inherit name=\"editor_room\" />\r\n    </object>\r\n    <object name=\"Maze7\">\r\n      <inherit name=\"editor_room\" />\r\n    </object>\r\n    <object name=\"Maze8\">\r\n      <inherit name=\"editor_room\" />\r\n    </object>\r\n  </object>\r\n  <function name=\"GetRandomRoom\" parameters=\"room, SectionList, endroom\"><![CDATA[\r\n    if (GetBoolean(endroom, \"created\")) {\r\n      // msg (\"Exits for \" + endroom.name + \" created - no further rooms in list\")\r\n    }\r\n    else {\r\n      room.directionlist = game.DirectionMasterList\r\n      // msg (\"Exits For this room: \" + ScopeExitsForRoom(room))\r\n      foreach (o, ScopeExitsForRoom(room)) {\r\n        // msg (o.alias)\r\n        list remove (room.directionlist, o.alias)\r\n      }\r\n      // msg (\"Available exits for \" + room.name + \": \" + room.directionlist)\r\n      // msg (\"List Count (\" + SectionList + \"): \" + ListCount(SectionList))\r\n      // msg (\"room.directionlist\" + ListCount(room.directionlist))\r\n      if (ListCount(SectionList) > 0) {\r\n        // msg (\"List Count: Greater than 0\")\r\n        room.RandomLocation = PickOneObject (SectionList)\r\n        list remove (SectionList, room.RandomLocation)\r\n      }\r\n      else {\r\n        if (not GetBoolean(endroom, \"created\")) {\r\n          SetObjectFlagOn (endroom, \"created\")\r\n          // msg (\"List Count: Equals 0\")\r\n          room.RandomLocation = endroom\r\n          foreach (o, ScopeExitsForRoom(endroom)) {\r\n            direction = o.alias\r\n            switch (direction) {\r\n              case (\"north\") {\r\n                reverse = \"south\"\r\n              }\r\n              case (\"south\") {\r\n                reverse = \"north\"\r\n              }\r\n              case (\"west\") {\r\n                reverse = \"east\"\r\n              }\r\n              case (\"east\") {\r\n                reverse = \"west\"\r\n              }\r\n            }\r\n            list remove (room.directionlist, reverse)\r\n            // msg (\"Exits for \" + endroom + \": \" + o.alias)\r\n            // msg (\"Exits for \" + endroom + \": \" + direction)\r\n            // msg (\"Exits for \" + endroom + \" removed: \" + reverse)\r\n          }\r\n        }\r\n      }\r\n      direction = PickOneString(room.directionlist)\r\n      switch (direction) {\r\n        case (\"north\") {\r\n          reverse = \"south\"\r\n        }\r\n        case (\"south\") {\r\n          reverse = \"north\"\r\n        }\r\n        case (\"west\") {\r\n          reverse = \"east\"\r\n        }\r\n        case (\"east\") {\r\n          reverse = \"west\"\r\n        }\r\n      }\r\n      // msg (\"Room Picked: \" + room.RandomLocation.name)\r\n      // msg (\"New \" + SectionList)\r\n      // msg (\"Exit from \" + room.name + \" to \" + room.RandomLocation.name + \": \" + direction)\r\n      // msg (\"Exit from \" + room.RandomLocation.name + \" to \" + room.name + \": \" + reverse)\r\n      create exit (direction, room, room.RandomLocation, direction+\"direction\")\r\n      create exit (reverse, room.RandomLocation, room, reverse+\"direction\")\r\n      // msg (\"Random Chance script for additional exits\")\r\n      if (RandomChance(50)) {\r\n        // msg (\"Random Chance Active!!!\")\r\n        if ((ListCount(SectionList) > 1) and (ListCount(room.directionlist) > 1)) {\r\n          // msg (\"Random Chance - Pass\")\r\n          GetRandomRoom (room, SectionList, woodland_glen)\r\n        }\r\n        else {\r\n          // msg (\"Random Chance - Fail\")\r\n        }\r\n      }\r\n    }\r\n  ]]></function>\r\n  <function name=\"GetRandomMaze\" parameters=\"endroom\">\r\n    MazeList = NewObjectList()\r\n    foreach (o, GetDirectChildren(Section_Maze)) {\r\n      // msg (o.name)\r\n      list add (MazeList, o)\r\n    }\r\n    dir = Split(\"north;south;east;west\")\r\n    RandomDirection = PickOneString(dir)\r\n    foreach (room, MazeList) {\r\n      // msg (room.name)\r\n      foreach (direction, dir) {\r\n        RandomMazeLocation = PickOneObject(MazeList)\r\n        if ((room = Maze8) and (direction = RandomDirection)) {\r\n          RandomMazeLocation = endroom\r\n        }\r\n        // msg (direction + \" - \" + RandomMazeLocation.name)\r\n        create exit (direction, room, RandomMazeLocation, direction+\"direction\")\r\n      }\r\n    }\r\n  </function>\r\n  <function name=\"GetRandomLocation\" parameters=\"room, list\" type=\"object\">\r\n    location = PickOneObject(list)\r\n    if (room = location) {\r\n      GetRandomLocation (room, list)\r\n    }\r\n    else {\r\n      return (location)\r\n    }\r\n  </function>\r\n</asl>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Still having problems with this, but I have come up with a solution of sorts, well two actually, both are in the following game.<br>\nThe first one is the <strong>Section_Forest</strong>, which is quite linear, as the random location is decided by the players move and not perfect.<br>\nThe second solution is the <strong>Section_Maze</strong>, which randomises the rooms at the start, but I'm having problems with the random element picking the same location for the exit leading to the same room.<br>\nI had a go at trying to solve the problem by creating the function '<em>GetRandomLocation(MazeList)</em>',but that produced an error message.<br>\nAnyway, here Is what I've done so far, and as always, any help is much appreciated.</p>\n<pre><code>&lt;!--Saved by Quest 5.8.6836.13983--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Test - Random Rooms\"&gt;\n    &lt;gameid&gt;4bb0f984-8b49-4e7a-ac3c-5bdd45279561&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2022&lt;/firstpublished&gt;\n    &lt;attr name=\"autodescription_youarein_useprefix\" type=\"boolean\"&gt;false&lt;/attr&gt;\n    &lt;attr name=\"autodescription_description\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youcansee\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youcango\" type=\"int\"&gt;4&lt;/attr&gt;\n    &lt;start type=\"script\"&gt;\n      game.DirectionMasterList = NewStringList()\n      foreach (o, Split(\"north;south;east;west\")) {\n        list add (game.DirectionMasterList, o)\n      }\n      // msg (\"Direction Master List\" + game.DirectionMasterList)\n    &lt;/start&gt;\n    &lt;feature_annotations /&gt;\n  &lt;/game&gt;\n  &lt;object name=\"stone_path\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;usedefaultprefix /&gt;\n    &lt;descprefix&gt;You are on&lt;/descprefix&gt;\n    &lt;alias&gt;stone path&lt;/alias&gt;\n    &lt;beforeenter type=\"script\"&gt;\n    &lt;/beforeenter&gt;\n    &lt;onexit type=\"script\"&gt;\n    &lt;/onexit&gt;\n    &lt;enter type=\"script\"&gt;\n    &lt;/enter&gt;\n    &lt;WhatIf type=\"int\"&gt;4&lt;/WhatIf&gt;\n    &lt;beforefirstenter type=\"script\"&gt;\n      GetRandomRoom (this, game.ForestList, woodland_glen)\n    &lt;/beforefirstenter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"south\" to=\"woodland_glen\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n      &lt;runscript type=\"boolean\"&gt;false&lt;/runscript&gt;\n      &lt;message type=\"string\"&gt;&lt;/message&gt;\n      &lt;script type=\"script\"&gt;\n      &lt;/script&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"east\" to=\"Maze1\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Section_Forest\"&gt;\n    &lt;inherit name=\"editor_object\" /&gt;\n    &lt;feature_startscript /&gt;\n    &lt;attr name=\"_initialise_\" type=\"script\"&gt;\n      // msg (\"Initialise (game.ForestList)\")\n      game.ForestList = NewObjectList()\n      foreach (o, GetDirectChildren(Section_Forest)) {\n        // msg (o.name)\n        list add (game.ForestList, o)\n      }\n    &lt;/attr&gt;\n    &lt;object name=\"clearing\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;clearing&lt;/alias&gt;\n      &lt;beforeenter type=\"script\"&gt;\n      &lt;/beforeenter&gt;\n      &lt;beforefirstenter type=\"script\"&gt;\n        GetRandomRoom (this, game.ForestList, woodland_glen)\n      &lt;/beforefirstenter&gt;\n      &lt;firstenter type=\"script\"&gt;\n      &lt;/firstenter&gt;\n    &lt;/object&gt;\n    &lt;object name=\"pine_grove\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;pine grove&lt;/alias&gt;\n      &lt;beforeenter type=\"script\"&gt;\n      &lt;/beforeenter&gt;\n      &lt;firstenter type=\"script\"&gt;\n      &lt;/firstenter&gt;\n      &lt;beforefirstenter type=\"script\"&gt;\n        GetRandomRoom (this, game.ForestList, woodland_glen)\n      &lt;/beforefirstenter&gt;\n    &lt;/object&gt;\n    &lt;object name=\"birches\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;birches&lt;/alias&gt;\n      &lt;beforeenter type=\"script\"&gt;\n      &lt;/beforeenter&gt;\n      &lt;firstenter type=\"script\"&gt;\n      &lt;/firstenter&gt;\n      &lt;beforefirstenter type=\"script\"&gt;\n        GetRandomRoom (this, game.ForestList, woodland_glen)\n      &lt;/beforefirstenter&gt;\n    &lt;/object&gt;\n    &lt;object name=\"twilight\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;twilight&lt;/alias&gt;\n      &lt;beforeenter type=\"script\"&gt;\n      &lt;/beforeenter&gt;\n      &lt;firstenter type=\"script\"&gt;\n      &lt;/firstenter&gt;\n      &lt;beforefirstenter type=\"script\"&gt;\n        GetRandomRoom (this, game.ForestList, woodland_glen)\n      &lt;/beforefirstenter&gt;\n    &lt;/object&gt;\n    &lt;object name=\"eerie_copse\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;eerie copse&lt;/alias&gt;\n      &lt;beforeenter type=\"script\"&gt;\n      &lt;/beforeenter&gt;\n      &lt;firstenter type=\"script\"&gt;\n      &lt;/firstenter&gt;\n      &lt;beforefirstenter type=\"script\"&gt;\n        GetRandomRoom (this, game.ForestList, woodland_glen)\n      &lt;/beforefirstenter&gt;\n    &lt;/object&gt;\n    &lt;object name=\"willow\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n      &lt;alias&gt;willow&lt;/alias&gt;\n      &lt;beforeenter type=\"script\"&gt;\n      &lt;/beforeenter&gt;\n      &lt;firstenter type=\"script\"&gt;\n      &lt;/firstenter&gt;\n      &lt;beforefirstenter type=\"script\"&gt;\n        GetRandomRoom (this, game.ForestList, woodland_glen)\n      &lt;/beforefirstenter&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=\"woodland_glen\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;woodland glen&lt;/alias&gt;\n    &lt;exit alias=\"north\" to=\"stone_path\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Section_Maze\"&gt;\n    &lt;feature_startscript /&gt;\n    &lt;attr name=\"_initialise_\" type=\"script\"&gt;\n      GetRandomMaze (stone_path)\n    &lt;/attr&gt;\n    &lt;attr name=\"implementation_notes\"&gt;&lt;![CDATA[Problems to solve&lt;br/&gt;&lt;br/&gt;RandomMazeLocation - PickOneObject(MazeList)&lt;br/&gt;How to prevent it being the same location as you are currently in&lt;br/&gt;&lt;br/&gt;If the above line is changed to:&lt;br/&gt;RandomMazeLocation - GetRandomLocation(MazeList)&lt;br/&gt;Error]]&gt;&lt;/attr&gt;\n    &lt;object name=\"Maze1\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Maze2\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Maze3\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Maze4\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Maze5\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Maze6\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Maze7\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Maze8\"&gt;\n      &lt;inherit name=\"editor_room\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;function name=\"GetRandomRoom\" parameters=\"room, SectionList, endroom\"&gt;&lt;![CDATA[\n    if (GetBoolean(endroom, \"created\")) {\n      // msg (\"Exits for \" + endroom.name + \" created - no further rooms in list\")\n    }\n    else {\n      room.directionlist = game.DirectionMasterList\n      // msg (\"Exits For this room: \" + ScopeExitsForRoom(room))\n      foreach (o, ScopeExitsForRoom(room)) {\n        // msg (o.alias)\n        list remove (room.directionlist, o.alias)\n      }\n      // msg (\"Available exits for \" + room.name + \": \" + room.directionlist)\n      // msg (\"List Count (\" + SectionList + \"): \" + ListCount(SectionList))\n      // msg (\"room.directionlist\" + ListCount(room.directionlist))\n      if (ListCount(SectionList) &gt; 0) {\n        // msg (\"List Count: Greater than 0\")\n        room.RandomLocation = PickOneObject (SectionList)\n        list remove (SectionList, room.RandomLocation)\n      }\n      else {\n        if (not GetBoolean(endroom, \"created\")) {\n          SetObjectFlagOn (endroom, \"created\")\n          // msg (\"List Count: Equals 0\")\n          room.RandomLocation = endroom\n          foreach (o, ScopeExitsForRoom(endroom)) {\n            direction = o.alias\n            switch (direction) {\n              case (\"north\") {\n                reverse = \"south\"\n              }\n              case (\"south\") {\n                reverse = \"north\"\n              }\n              case (\"west\") {\n                reverse = \"east\"\n              }\n              case (\"east\") {\n                reverse = \"west\"\n              }\n            }\n            list remove (room.directionlist, reverse)\n            // msg (\"Exits for \" + endroom + \": \" + o.alias)\n            // msg (\"Exits for \" + endroom + \": \" + direction)\n            // msg (\"Exits for \" + endroom + \" removed: \" + reverse)\n          }\n        }\n      }\n      direction = PickOneString(room.directionlist)\n      switch (direction) {\n        case (\"north\") {\n          reverse = \"south\"\n        }\n        case (\"south\") {\n          reverse = \"north\"\n        }\n        case (\"west\") {\n          reverse = \"east\"\n        }\n        case (\"east\") {\n          reverse = \"west\"\n        }\n      }\n      // msg (\"Room Picked: \" + room.RandomLocation.name)\n      // msg (\"New \" + SectionList)\n      // msg (\"Exit from \" + room.name + \" to \" + room.RandomLocation.name + \": \" + direction)\n      // msg (\"Exit from \" + room.RandomLocation.name + \" to \" + room.name + \": \" + reverse)\n      create exit (direction, room, room.RandomLocation, direction+\"direction\")\n      create exit (reverse, room.RandomLocation, room, reverse+\"direction\")\n      // msg (\"Random Chance script for additional exits\")\n      if (RandomChance(50)) {\n        // msg (\"Random Chance Active!!!\")\n        if ((ListCount(SectionList) &gt; 1) and (ListCount(room.directionlist) &gt; 1)) {\n          // msg (\"Random Chance - Pass\")\n          GetRandomRoom (room, SectionList, woodland_glen)\n        }\n        else {\n          // msg (\"Random Chance - Fail\")\n        }\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"GetRandomMaze\" parameters=\"endroom\"&gt;\n    MazeList = NewObjectList()\n    foreach (o, GetDirectChildren(Section_Maze)) {\n      // msg (o.name)\n      list add (MazeList, o)\n    }\n    dir = Split(\"north;south;east;west\")\n    RandomDirection = PickOneString(dir)\n    foreach (room, MazeList) {\n      // msg (room.name)\n      foreach (direction, dir) {\n        RandomMazeLocation = PickOneObject(MazeList)\n        if ((room = Maze8) and (direction = RandomDirection)) {\n          RandomMazeLocation = endroom\n        }\n        // msg (direction + \" - \" + RandomMazeLocation.name)\n        create exit (direction, room, RandomMazeLocation, direction+\"direction\")\n      }\n    }\n  &lt;/function&gt;\n  &lt;function name=\"GetRandomLocation\" parameters=\"room, list\" type=\"object\"&gt;\n    location = PickOneObject(list)\n    if (room = location) {\n      GetRandomLocation (room, list)\n    }\n    else {\n      return (location)\n    }\n  &lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2022-04-20T20:55:03.8792802Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
