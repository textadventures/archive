{
  "Topic": {
    "TopicId": "le_vgvbklec570dz6os7_a",
    "ForumId": "10",
    "Title": "Clone Object and then Destroy Clone [SOLVED]",
    "LastUpdated": "2017-04-30T21:26:38.4378582Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "1ebace43-54dc-4d59-a628-c25dd19afb8c",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/28lV6nMb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So I want to clone and object and move it to a room and then afterward if the player performs a certain action I want to destroy it. I tried this...\r\n```\r\nx = CloneObject (fresh_water)\r\nRemoveObject (x)\r\n```\r\nBut it didn't work. Even though this does...\r\n```\r\n x = CloneObject (fresh_water)\r\nMoveObjectHere (x)\r\n```\r\nAny ideas?\r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>So I want to clone and object and move it to a room and then afterward if the player performs a certain action I want to destroy it. I tried this...</p>\n<pre><code>x = CloneObject (fresh_water)\nRemoveObject (x)\n</code></pre>\n<p>But it didn't work. Even though this does...</p>\n<pre><code> x = CloneObject (fresh_water)\nMoveObjectHere (x)\n</code></pre>\n<p>Any ideas?</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2017-04-30T21:26:38.4378582Z",
      "LastEditDate": "2017-05-02T01:48:20.0844539Z"
    },
    {
      "PostId": "cc03e97a-8c16-4387-86d8-4b86f4bc2dc6",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "RemoveObject should work. Do you get an error message? That said, it does not really destroy the object, just sets its parent to null, which has the same effect and is quicker.",
      "EditableFormat": "markdown",
      "HTML": "<p>RemoveObject should work. Do you get an error message? That said, it does not really destroy the object, just sets its parent to null, which has the same effect and is quicker.</p>\n\n",
      "PostDate": "2017-04-30T22:22:45.8810772Z",
      "LastEditDate": null
    },
    {
      "PostId": "3cc553ba-1f6f-4dce-aa68-c91278d50592",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/28lV6nMb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "RemoveObject does not work---no error pops up, but it doesn't remove the Object either. \r\n\r\nBut I've noticed a strange ...something...happening when using an \"Openable/Closable\" container. On the _Switchable Tab_ \"After switching on the object:\" and \"After switching off the object:\" Quest doesn't always work properly (which is what this script is written on). I know something is wonky with it because I had another Object, openable and closeable curtains. But Quest, wasn't recognizing _isopen=True_ and _isopen=False_ and kept saying the curtains were perma-closed.\r\n\r\nMaybe I need to move the code to a verb instead?",
      "EditableFormat": "markdown",
      "HTML": "<p>RemoveObject does not work---no error pops up, but it doesn't remove the Object either.</p>\n<p>But I've noticed a strange ...something...happening when using an \"Openable/Closable\" container. On the <em>Switchable Tab</em> \"After switching on the object:\" and \"After switching off the object:\" Quest doesn't always work properly (which is what this script is written on). I know something is wonky with it because I had another Object, openable and closeable curtains. But Quest, wasn't recognizing <em>isopen=True</em> and <em>isopen=False</em> and kept saying the curtains were perma-closed.</p>\n<p>Maybe I need to move the code to a verb instead?</p>\n\n",
      "PostDate": "2017-04-30T23:13:50.6068765Z",
      "LastEditDate": null
    },
    {
      "PostId": "0efa1230-5273-4846-9e72-1a12de3b36f0",
      "UserId": 288307,
      "Username": "crystalwizard",
      "AvatarUrl": "http://i.imgur.com/3AxpbN7b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "are you sure you don't have some sort of tag conflict going on, which is confusing Quest as to which object you are acting on?",
      "EditableFormat": "markdown",
      "HTML": "<p>are you sure you don't have some sort of tag conflict going on, which is confusing Quest as to which object you are acting on?</p>\n\n",
      "PostDate": "2017-05-01T03:15:18.7852359Z",
      "LastEditDate": null
    },
    {
      "PostId": "76bf347f-f8cb-412a-bb2c-9f6f33cf523e",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/28lV6nMb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Pretty sure. I only had a short message, a flag and the isopen scripting on the curtains --- and when I moved the same code to a verb the scripting worked just fine. \r\n\r\nI still need to figure out why the destroy object isn't working. I'm going to experiment with making it a verb and let you guys know how it goes. Then we'll know whether or not it's a problem with the Openable/Closeable thing. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Pretty sure. I only had a short message, a flag and the isopen scripting on the curtains --- and when I moved the same code to a verb the scripting worked just fine.</p>\n<p>I still need to figure out why the destroy object isn't working. I'm going to experiment with making it a verb and let you guys know how it goes. Then we'll know whether or not it's a problem with the Openable/Closeable thing.</p>\n\n",
      "PostDate": "2017-05-01T03:23:22.941559Z",
      "LastEditDate": null
    },
    {
      "PostId": "dd074e08-609d-4299-a2fb-fccbe2915464",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Why not just move the object to another room that the player cannot reach???\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Why not just move the object to another room that the player cannot reach???</p>\n\n",
      "PostDate": "2017-05-01T04:50:26.4534461Z",
      "LastEditDate": null
    },
    {
      "PostId": "76db3f74-7f1b-4936-8b34-3545aad0ba18",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/28lV6nMb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I feel like if the RemoveObject isn't working properly then moving it to another room wouldn't either. Although, I haven't tried. \r\n\r\n_UPDATE_:\r\nThat didn't work either\r\n\r\nHere's the code in case it helps. \r\n\r\nAfter \"switching on\"...\r\n```\r\nmsg (\"<br/><font color= \\\"70edf5\\\">You turn on the faucet and fresh water comes pouring out.</font color><br/>\")\r\nx = CloneObject (fresh_water)\r\nMoveObjectHere (x)\r\ngh_sink.flag = True\r\n```\r\nAnd \"switching off\"..\r\n```\r\nmsg (\"<br/>You turn off the faucet. {once:What a good guest!}<br/>\")\r\nMoveObject (fresh_water, Part 1)\r\ngh_sink.flag = False\r\n```\r\nThis didn't work either...\r\n\r\nAfter \"switching off\"...\r\n```\r\nmsg (\"<br/>You turn off the faucet. {once:What a good guest!}<br/>\")\r\nRemoveObject (fresh_water)\r\ngh_sink.flag = False\r\n```\r\nI = stumped. I'm going to try moving this to a verb to see if it fixes the problem. If it does --- that could mean a potential conflict error in Quest \"Openable/Closeable\" feature, I think. \r\n\r\n-----------------\r\n**_UPDATE AGAIN_**:\r\n\r\nSo the same code in the verb versions, didn't work in removing the Fresh Water object either, although the game does now acknowledge that the object is getting turned off and on. Still can't figure out how to remove the Clone though. \r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I feel like if the RemoveObject isn't working properly then moving it to another room wouldn't either. Although, I haven't tried.</p>\n<p><em>UPDATE</em>:<br>\nThat didn't work either</p>\n<p>Here's the code in case it helps.</p>\n<p>After \"switching on\"...</p>\n<pre><code>msg (\"&lt;br/&gt;&lt;font color= \\\"70edf5\\\"&gt;You turn on the faucet and fresh water comes pouring out.&lt;/font color&gt;&lt;br/&gt;\")\nx = CloneObject (fresh_water)\nMoveObjectHere (x)\ngh_sink.flag = True\n</code></pre>\n<p>And \"switching off\"..</p>\n<pre><code>msg (\"&lt;br/&gt;You turn off the faucet. {once:What a good guest!}&lt;br/&gt;\")\nMoveObject (fresh_water, Part 1)\ngh_sink.flag = False\n</code></pre>\n<p>This didn't work either...</p>\n<p>After \"switching off\"...</p>\n<pre><code>msg (\"&lt;br/&gt;You turn off the faucet. {once:What a good guest!}&lt;br/&gt;\")\nRemoveObject (fresh_water)\ngh_sink.flag = False\n</code></pre>\n<p>I = stumped. I'm going to try moving this to a verb to see if it fixes the problem. If it does --- that could mean a potential conflict error in Quest \"Openable/Closeable\" feature, I think.</p>\n<hr>\n<p><strong><em>UPDATE AGAIN</em></strong>:</p>\n<p>So the same code in the verb versions, didn't work in removing the Fresh Water object either, although the game does now acknowledge that the object is getting turned off and on. Still can't figure out how to remove the Clone though.</p>\n\n",
      "PostDate": "2017-05-01T05:24:26.4003876Z",
      "LastEditDate": "2017-05-01T05:47:19.9254391Z"
    },
    {
      "PostId": "9fa9bee5-7558-455a-8065-77045742ca18",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I presume that the 'MoveObjectHere' Function is a custom function that takes an 'Object' Argument/Parameter and puts/moves that 'Object' inside of some set 'Object/Room Object', is this correct? (something like the below)\r\n\r\n```\r\n<function name=\"MoveObjecthere\" parameters=\"moving_object_parameter\">\r\n  moving_object_parameter.parent = NAME_OF_YOUR_DESTINATION_OBJECT\r\n</function>\r\n```\r\n\r\n----------------\r\n\r\nx = CloneObject (fresh_water)\r\nRemoveObject (x)\r\n\r\nthis just merely sets the CLONE_OBJECT's 'parent' Object Attribute to 'null', which effectively takes it out of any Objects (and moves/puts it directly into the 'asl' tag block)\r\n\r\nyour original 'fresh_water' Object remains in the room it is in\r\n\r\nfor example:\r\n\r\n```\r\n<object name=\"room\">\r\n  // <attr name=\"parent\" type=\"object\">null</attr>\r\n  <object name=\"player\">\r\n    // <attr name=\"parent\" type=\"object\">room</attr>\r\n  </object>\r\n</object>\r\n\r\n// RemoveObject (player)\r\n\r\n// now, the code would be changed (look like) to this:\r\n\r\n<object name=\"room\">\r\n  // <attr name=\"parent\" type=\"object\">null</attr>\r\n</object>\r\n<object name=\"player\">\r\n  // <attr name=\"parent\" type=\"object\">null</attr>\r\n</object>\r\n\r\n// -------------------------\r\n\r\n// or\r\n\r\n<object name=\"room\">\r\n  // <attr name=\"parent\" type=\"object\">null</attr>\r\n</object>\r\n<object name=\"player\">\r\n  // <attr name=\"parent\" type=\"object\">room</attr>\r\n</object>\r\n\r\n// RemoveObject (player)\r\n\r\n// now, the code would be changed (look like) to this:\r\n\r\n<object name=\"room\">\r\n  // <attr name=\"parent\" type=\"object\">null</attr>\r\n</object>\r\n<object name=\"player\">\r\n  // <attr name=\"parent\" type=\"object\">null</attr>\r\n</object>\r\n```\r\n\r\n-----------------------\r\n\r\n x = CloneObject (fresh_water)\r\nMoveObjectHere (x)\r\n\r\nthis, assuming my guess about the 'MoveObjectHere' Function, just moves the CLONE_OBJECT to whatever is the DESTINATION_ROOM defined in the Function.\r\n\r\nyour original 'fresh_water' Object remains in the room it is in\r\n\r\n-------\r\n\r\nif you're cloning your 'fresh_water' repeatedly.... DO NOTE: it creates a different CLONE Object each time: fresh_water1, fresh_water2, fresh_water3, fresh_water4, etc etc etc\r\n\r\nso, maybe you're removing 'fresh_water5' CLONE, but not all the other 'fresh_water#' CLONES\r\n\r\n------\r\n\r\nalso, note that:\r\n\r\nx = CloneObject (NAME_OF_OBJECT)\r\n\r\nthe 'x' is just a (local) Variable VARIABLE, so if you have another 'x = CloneObject (NAME_OF_OBJECT)' elsewhere in your game, it's its own/different 'x' and a different/new CLONE as well.\r\n\r\nif you want to globally store your CLONE OBJECT, you got to use a (global) Attribute VARIABLE, for example:\r\n\r\n// somewhere:\r\ngame.x = CloneObject (NAME_OF_OBJECT)\r\n\r\n// elsewhere:\r\nMoveObjectHere (game.x)\r\n\r\n// again, (a different), elsewhere:\r\nRemoveObject (game.x)\r\n\r\n---------\r\n\r\nso... maybe you wanted something like this?\r\n\r\n(I replaced your 'x' Attribute Name with something more descriptive: 'fresh_water_clone_object_attribute')\r\n\r\n```\r\n// after switching on:\r\n\r\nmsg (\"<br/><font color= \\\"70edf5\\\">You turn on the faucet and fresh water comes pouring out.</font color><br/>\")\r\ngame.fresh_water_clone_object_attribute = CloneObject (fresh_water)\r\nMoveObjectHere (game.fresh_water_clone_object_attribute)\r\ngh_sink.flag = True\r\n\r\n// and switching off:\r\n\r\nmsg (\"<br/>You turn off the faucet. {once:What a good guest!}<br/>\")\r\nMoveObject (game.fresh_water_clone_object_attribute, Part 1) // unless you did want to move your original 'fresh_water' Object, and not the CLONE...\r\ngh_sink.flag = False\r\n\r\n// after switching off:\r\n\r\nmsg (\"<br/>You turn off the faucet. {once:What a good guest!}<br/>\")\r\nRemoveObject (game.fresh_water_clone_object_attribute) // again, I assuming you went to remove your CLONE, and not your original 'fresh_water' Object\r\ngh_sink.flag = False\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I presume that the 'MoveObjectHere' Function is a custom function that takes an 'Object' Argument/Parameter and puts/moves that 'Object' inside of some set 'Object/Room Object', is this correct? (something like the below)</p>\n<pre><code>&lt;function name=\"MoveObjecthere\" parameters=\"moving_object_parameter\"&gt;\n  moving_object_parameter.parent = NAME_OF_YOUR_DESTINATION_OBJECT\n&lt;/function&gt;\n</code></pre>\n<hr>\n<p>x = CloneObject (fresh_water)<br>\nRemoveObject (x)</p>\n<p>this just merely sets the CLONE_OBJECT's 'parent' Object Attribute to 'null', which effectively takes it out of any Objects (and moves/puts it directly into the 'asl' tag block)</p>\n<p>your original 'fresh_water' Object remains in the room it is in</p>\n<p>for example:</p>\n<pre><code>&lt;object name=\"room\"&gt;\n  // &lt;attr name=\"parent\" type=\"object\"&gt;null&lt;/attr&gt;\n  &lt;object name=\"player\"&gt;\n    // &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;/object&gt;\n&lt;/object&gt;\n\n// RemoveObject (player)\n\n// now, the code would be changed (look like) to this:\n\n&lt;object name=\"room\"&gt;\n  // &lt;attr name=\"parent\" type=\"object\"&gt;null&lt;/attr&gt;\n&lt;/object&gt;\n&lt;object name=\"player\"&gt;\n  // &lt;attr name=\"parent\" type=\"object\"&gt;null&lt;/attr&gt;\n&lt;/object&gt;\n\n// -------------------------\n\n// or\n\n&lt;object name=\"room\"&gt;\n  // &lt;attr name=\"parent\" type=\"object\"&gt;null&lt;/attr&gt;\n&lt;/object&gt;\n&lt;object name=\"player\"&gt;\n  // &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n&lt;/object&gt;\n\n// RemoveObject (player)\n\n// now, the code would be changed (look like) to this:\n\n&lt;object name=\"room\"&gt;\n  // &lt;attr name=\"parent\" type=\"object\"&gt;null&lt;/attr&gt;\n&lt;/object&gt;\n&lt;object name=\"player\"&gt;\n  // &lt;attr name=\"parent\" type=\"object\"&gt;null&lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p>x = CloneObject (fresh_water)<br>\nMoveObjectHere (x)</p>\n<p>this, assuming my guess about the 'MoveObjectHere' Function, just moves the CLONE_OBJECT to whatever is the DESTINATION_ROOM defined in the Function.</p>\n<p>your original 'fresh_water' Object remains in the room it is in</p>\n<hr>\n<p>if you're cloning your 'fresh_water' repeatedly.... DO NOTE: it creates a different CLONE Object each time: fresh_water1, fresh_water2, fresh_water3, fresh_water4, etc etc etc</p>\n<p>so, maybe you're removing 'fresh_water5' CLONE, but not all the other 'fresh_water#' CLONES</p>\n<hr>\n<p>also, note that:</p>\n<p>x = CloneObject (NAME_OF_OBJECT)</p>\n<p>the 'x' is just a (local) Variable VARIABLE, so if you have another 'x = CloneObject (NAME_OF_OBJECT)' elsewhere in your game, it's its own/different 'x' and a different/new CLONE as well.</p>\n<p>if you want to globally store your CLONE OBJECT, you got to use a (global) Attribute VARIABLE, for example:</p>\n<p>// somewhere:<br>\ngame.x = CloneObject (NAME_OF_OBJECT)</p>\n<p>// elsewhere:<br>\nMoveObjectHere (game.x)</p>\n<p>// again, (a different), elsewhere:<br>\nRemoveObject (game.x)</p>\n<hr>\n<p>so... maybe you wanted something like this?</p>\n<p>(I replaced your 'x' Attribute Name with something more descriptive: 'fresh_water_clone_object_attribute')</p>\n<pre><code>// after switching on:\n\nmsg (\"&lt;br/&gt;&lt;font color= \\\"70edf5\\\"&gt;You turn on the faucet and fresh water comes pouring out.&lt;/font color&gt;&lt;br/&gt;\")\ngame.fresh_water_clone_object_attribute = CloneObject (fresh_water)\nMoveObjectHere (game.fresh_water_clone_object_attribute)\ngh_sink.flag = True\n\n// and switching off:\n\nmsg (\"&lt;br/&gt;You turn off the faucet. {once:What a good guest!}&lt;br/&gt;\")\nMoveObject (game.fresh_water_clone_object_attribute, Part 1) // unless you did want to move your original 'fresh_water' Object, and not the CLONE...\ngh_sink.flag = False\n\n// after switching off:\n\nmsg (\"&lt;br/&gt;You turn off the faucet. {once:What a good guest!}&lt;br/&gt;\")\nRemoveObject (game.fresh_water_clone_object_attribute) // again, I assuming you went to remove your CLONE, and not your original 'fresh_water' Object\ngh_sink.flag = False\n</code></pre>\n\n",
      "PostDate": "2017-05-01T07:26:39.0541077Z",
      "LastEditDate": "2017-05-01T07:30:05.2857504Z"
    },
    {
      "PostId": "c89551a0-bbf8-4969-b2be-0db1e1c19618",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Are you cloning the prototype, but the moving/removing the prototype, rather than the clone, so the clone is still there? the switch off code looks to remove the prototype:\r\n\r\n```\r\nmsg (\"<br/>You turn off the faucet. {once:What a good guest!}<br/>\")\r\nRemoveObject (fresh_water)\r\ngh_sink.flag = False\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Are you cloning the prototype, but the moving/removing the prototype, rather than the clone, so the clone is still there? the switch off code looks to remove the prototype:</p>\n<pre><code>msg (\"&lt;br/&gt;You turn off the faucet. {once:What a good guest!}&lt;br/&gt;\")\nRemoveObject (fresh_water)\ngh_sink.flag = False\n</code></pre>\n\n",
      "PostDate": "2017-05-01T08:09:43.8560647Z",
      "LastEditDate": null
    },
    {
      "PostId": "5fe0cfb2-67ca-4d6b-b2fc-17b0343d347c",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/28lV6nMb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm not sure. I'm doing...\r\n```\r\nx = CloneObject (fresh_water)\r\nMoveObjectHere (x)\r\n```\r\nSo if I'm removing a prototype than the remove code is definitely wrong. It needs to remove the clone.  I was thinking perhaps doing a...RemoveObject (fresh_water.alias) but I'm sure the game would throw an string-element error. Or maybe MoveObject (fresh_water.parent)\r\n\r\nWe need a RemoveCloneObject or RemoveObjectAlias. LOL! :P\r\n\r\n____\r\nNope, it's not a custom function, HK. Least as far as I know, it's just the built in \"MoveObjectHere\" (to current room the player object is in). And yup, I've been learning all sorts of things about \"null\" states lately! I know the answer is a simple one right on the tip of my tongue, like...moving the Object back to it's parent object (where the item is stored), but I just can't think of the right command. ",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not sure. I'm doing...</p>\n<pre><code>x = CloneObject (fresh_water)\nMoveObjectHere (x)\n</code></pre>\n<p>So if I'm removing a prototype than the remove code is definitely wrong. It needs to remove the clone.  I was thinking perhaps doing a...RemoveObject (fresh_water.alias) but I'm sure the game would throw an string-element error. Or maybe MoveObject (fresh_water.parent)</p>\n<p>We need a RemoveCloneObject or RemoveObjectAlias. LOL! :P</p>\n<hr>\n<p>Nope, it's not a custom function, HK. Least as far as I know, it's just the built in \"MoveObjectHere\" (to current room the player object is in). And yup, I've been learning all sorts of things about \"null\" states lately! I know the answer is a simple one right on the tip of my tongue, like...moving the Object back to it's parent object (where the item is stored), but I just can't think of the right command.</p>\n\n",
      "PostDate": "2017-05-01T16:39:01.0319404Z",
      "LastEditDate": null
    },
    {
      "PostId": "d28c8cb2-089e-4b32-a4ae-9c90e6218d36",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Probably the best way in this case (i.e., where the clone will not be moved, so remains linked to the room) is to save the clone as an attribute of the room or some permanent object in it:\r\n```\r\nx = CloneObject (fresh_water)\r\nMoveObjectHere (x)\r\ngh_sink.clone = x\r\n```\r\nThen later you can use that to destroy it:\r\n```\r\nRemoveObject(gh_sink.clone)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Probably the best way in this case (i.e., where the clone will not be moved, so remains linked to the room) is to save the clone as an attribute of the room or some permanent object in it:</p>\n<pre><code>x = CloneObject (fresh_water)\nMoveObjectHere (x)\ngh_sink.clone = x\n</code></pre>\n<p>Then later you can use that to destroy it:</p>\n<pre><code>RemoveObject(gh_sink.clone)\n</code></pre>\n\n",
      "PostDate": "2017-05-01T18:47:24.4297342Z",
      "LastEditDate": "2017-05-01T18:48:07.7990538Z"
    },
    {
      "PostId": "995f2302-74b0-4e72-97cc-793f10016ee6",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the problem is that each CLONE OBJECT is given a contigious number onto its name\r\n\r\nthus there's only two ways of getting at that CLONE OBJECT:\r\n\r\n1. store the CLONE OBJECT into an 'Object' Attribute:\r\n\r\ngame.fresh_water_clone_object_attribute = CloneObject (fresh_water)\r\n\r\nand then you can use that Attribute for whatever you want to do with that Clone OBJECT, for example:\r\n\r\nRemoveObject (game.fresh_water_clone_object_attribute)\r\n\r\n2. you'll have to iterate through all of the Objects in the Object containing your CLONE OBJECT and check if one of those Objects match up with your desired CLONE OBJECT, for example (pretending our desired CLONE OBJECT is in our inventory: inside of the 'player' Player Object):\r\n\r\n```\r\n<object name=\"player\">\r\n\r\n  // your original Object:\r\n  <object name=\"fresh_water\">\r\n  </object>\r\n\r\n  // your cloned/clone Objects (for this example, pretending, as I still not used a Clone yet, so I don't know how it concatenates the contigious number onto their names, lol: as in just the number or underscore and then the number, and whether the number starts at 0 or 1 or 2, lol):\r\n\r\n  <object name=\"fresh_water_2\">\r\n  </object>\r\n  <object name=\"fresh_water_3\">\r\n  </object>\r\n  <object name=\"fresh_water_4\">\r\n  </object>\r\n  <object name=\"fresh_water_5\">\r\n  </object>\r\n  <object name=\"fresh_water_6\">\r\n  </object>\r\n\r\n</object>\r\n\r\nforeach (object_variable, ScopeInventory()) {\r\n  if (object_variable.name = \"fresh_water_4\") { // let's say our desired clone object is: 'fresh_water_4'\r\n    // scripting/action(s), for example:\r\n    object_variable.drink // let's say that the 'drink' Verb/Script-Attribute itself does NOT remove the object, thus we do so below:\r\n    RemoveObject (object_variable) \r\n  }\r\n}\r\n\r\n// and the resulting effective code would look like this:\r\n\r\n<object name=\"player\">\r\n\r\n  // your original Object:\r\n  <object name=\"fresh_water\">\r\n  </object>\r\n\r\n  // your clone/cloned Object(s):\r\n  <object name=\"fresh_water_2\">\r\n  </object>\r\n  <object name=\"fresh_water_3\">\r\n  </object>\r\n  <object name=\"fresh_water_5\">\r\n  </object>\r\n  <object name=\"fresh_water_6\">\r\n  </object>\r\n</object>\r\n\r\n// the removed CLONE Object:\r\n<object name=\"fresh_water_4\">\r\n</object>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>the problem is that each CLONE OBJECT is given a contigious number onto its name</p>\n<p>thus there's only two ways of getting at that CLONE OBJECT:</p>\n<ol>\n<li>store the CLONE OBJECT into an 'Object' Attribute:</li>\n</ol>\n<p>game.fresh_water_clone_object_attribute = CloneObject (fresh_water)</p>\n<p>and then you can use that Attribute for whatever you want to do with that Clone OBJECT, for example:</p>\n<p>RemoveObject (game.fresh_water_clone_object_attribute)</p>\n<ol start=\"2\">\n<li>you'll have to iterate through all of the Objects in the Object containing your CLONE OBJECT and check if one of those Objects match up with your desired CLONE OBJECT, for example (pretending our desired CLONE OBJECT is in our inventory: inside of the 'player' Player Object):</li>\n</ol>\n<pre><code>&lt;object name=\"player\"&gt;\n\n  // your original Object:\n  &lt;object name=\"fresh_water\"&gt;\n  &lt;/object&gt;\n\n  // your cloned/clone Objects (for this example, pretending, as I still not used a Clone yet, so I don't know how it concatenates the contigious number onto their names, lol: as in just the number or underscore and then the number, and whether the number starts at 0 or 1 or 2, lol):\n\n  &lt;object name=\"fresh_water_2\"&gt;\n  &lt;/object&gt;\n  &lt;object name=\"fresh_water_3\"&gt;\n  &lt;/object&gt;\n  &lt;object name=\"fresh_water_4\"&gt;\n  &lt;/object&gt;\n  &lt;object name=\"fresh_water_5\"&gt;\n  &lt;/object&gt;\n  &lt;object name=\"fresh_water_6\"&gt;\n  &lt;/object&gt;\n\n&lt;/object&gt;\n\nforeach (object_variable, ScopeInventory()) {\n  if (object_variable.name = \"fresh_water_4\") { // let's say our desired clone object is: 'fresh_water_4'\n    // scripting/action(s), for example:\n    object_variable.drink // let's say that the 'drink' Verb/Script-Attribute itself does NOT remove the object, thus we do so below:\n    RemoveObject (object_variable) \n  }\n}\n\n// and the resulting effective code would look like this:\n\n&lt;object name=\"player\"&gt;\n\n  // your original Object:\n  &lt;object name=\"fresh_water\"&gt;\n  &lt;/object&gt;\n\n  // your clone/cloned Object(s):\n  &lt;object name=\"fresh_water_2\"&gt;\n  &lt;/object&gt;\n  &lt;object name=\"fresh_water_3\"&gt;\n  &lt;/object&gt;\n  &lt;object name=\"fresh_water_5\"&gt;\n  &lt;/object&gt;\n  &lt;object name=\"fresh_water_6\"&gt;\n  &lt;/object&gt;\n&lt;/object&gt;\n\n// the removed CLONE Object:\n&lt;object name=\"fresh_water_4\"&gt;\n&lt;/object&gt;\n</code></pre>\n\n",
      "PostDate": "2017-05-01T20:35:45.092404Z",
      "LastEditDate": "2017-05-01T20:39:31.8853979Z"
    },
    {
      "PostId": "5f6fe2cb-e675-40aa-b409-11a9fa0408f6",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/28lV6nMb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks guys :D",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks guys :D</p>\n\n",
      "PostDate": "2017-05-02T04:14:49.6586744Z",
      "LastEditDate": null
    }
  ]
}
