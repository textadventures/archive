{
  "Topic": {
    "TopicId": "ofe3yqayhuuymkhgo3sw1w",
    "ForumId": "10",
    "Title": "Best way to handle enterable containers/surfaces and enterable/rideable vehicles?",
    "LastUpdated": "2021-05-13T22:14:54.509824Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "4aa90331-5096-4bfd-8e49-e0d31a82affd",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I helped make a horse you could ride one time, but I don't recall how it worked.\r\n\r\nRecently, I needed a bed <s>you could lie in</s> in which you could lie, and I went through a few ideas before I just added a ```game.pov.in_bed``` boolean attribute to handle everything. I have to modify the commands which require touching any objects in the room around the bed this way, though -- especially if there's one object within reach from the bed but other objects which are out of reach. I'd rather modify the take script once than add verbs doing the same thing to each individual object.\r\n\r\nAt first, the bed was a transparent room inside of the Bedroom, and I had it working pretty well -- except I couldn't figure out where \"You can't reach into the Bedroom.\" printed from sometimes. I found one place, and I fixed it so it said \"You can't reach that from the bed.\", but there were other commands that still printed the default.  So, I decided that was too much work and went with the attribute thing.\r\n\r\nI'm pretty sure I could have made this work well if I knew where the code was that was printing that default response.\r\n\r\n\r\n\r\n---\r\nSomebody had some code for vehicles that simply changed the player object to the vehicle that mostly worked well, but I couldn't get that to behave like I expected it to, either.\r\n\r\nI think that was the horse, and I ended up using attributes (like with the bed) and moving the horse to each room I was headed to before I entered said room.\r\n\r\n---\r\nWhen using attributes like this, I modify the way it prints the room name, adding \" (in the shower)\" or \" (riding the war unicorn)\".\r\n\r\n---\r\nThe way I handle it doesn't really seem worth sharing, to be honest. Too many things have to be fine-tuned to make everything print as expected.\r\n\r\nThis is another thing I wish we had a solid solution for before Quest 6 is born and steals all our attention from Quest 5. I'm pretty sure Quest 5 will still be popular for years after 6 is released. People will still be trying to do things in Quest 5, but most of us who help out on the forum will be more inclined to focus on 6 because **(A)** it is pure JS and we like that, and **(B)** it will be new and there's sure to be bugs we'll enjoy hunting down and exterminating.\r\n\r\nThere aren't many things people have commonly requested that haven't eventually been added to Quest.  I don't know that vehicles and enterable containers are worthy of being included, but I do thing there should be a good library people could easily include. Plus, I don't like the idea of adding new features to Quest 5, per se; I think we should just try to fix all the known bugs for a final stable release.",
      "EditableFormat": "markdown",
      "HTML": "<p>I helped make a horse you could ride one time, but I don't recall how it worked.</p>\n<p>Recently, I needed a bed <s>you could lie in</s> in which you could lie, and I went through a few ideas before I just added a <code>game.pov.in_bed</code> boolean attribute to handle everything. I have to modify the commands which require touching any objects in the room around the bed this way, though -- especially if there's one object within reach from the bed but other objects which are out of reach. I'd rather modify the take script once than add verbs doing the same thing to each individual object.</p>\n<p>At first, the bed was a transparent room inside of the Bedroom, and I had it working pretty well -- except I couldn't figure out where \"You can't reach into the Bedroom.\" printed from sometimes. I found one place, and I fixed it so it said \"You can't reach that from the bed.\", but there were other commands that still printed the default.  So, I decided that was too much work and went with the attribute thing.</p>\n<p>I'm pretty sure I could have made this work well if I knew where the code was that was printing that default response.</p>\n<hr>\n<p>Somebody had some code for vehicles that simply changed the player object to the vehicle that mostly worked well, but I couldn't get that to behave like I expected it to, either.</p>\n<p>I think that was the horse, and I ended up using attributes (like with the bed) and moving the horse to each room I was headed to before I entered said room.</p>\n<hr>\n<p>When using attributes like this, I modify the way it prints the room name, adding \" (in the shower)\" or \" (riding the war unicorn)\".</p>\n<hr>\n<p>The way I handle it doesn't really seem worth sharing, to be honest. Too many things have to be fine-tuned to make everything print as expected.</p>\n<p>This is another thing I wish we had a solid solution for before Quest 6 is born and steals all our attention from Quest 5. I'm pretty sure Quest 5 will still be popular for years after 6 is released. People will still be trying to do things in Quest 5, but most of us who help out on the forum will be more inclined to focus on 6 because <strong>(A)</strong> it is pure JS and we like that, and <strong>(B)</strong> it will be new and there's sure to be bugs we'll enjoy hunting down and exterminating.</p>\n<p>There aren't many things people have commonly requested that haven't eventually been added to Quest.  I don't know that vehicles and enterable containers are worthy of being included, but I do thing there should be a good library people could easily include. Plus, I don't like the idea of adding new features to Quest 5, per se; I think we should just try to fix all the known bugs for a final stable release.</p>\n\n",
      "PostDate": "2021-05-13T22:14:54.509824Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "35139dbb-1329-494d-8ea4-f52f7327cdb5",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Back to this. . .\r\n\r\nAs far as vehicles are concerned:\r\n\r\n### Enterable vehicle\r\n\r\n- Can it be powered on and off?\r\n    - Does it require a key (or a code, or what have you)?\r\n    - Is it (or does it have) a light source?\r\n- Does it require any form of fuel (or battery charging)?\r\n- Is it ```transparent```? (Does it have windows that are always see-through? Can you see things in the vehicle's location?)\r\n  - Can the windows be opened and closed?\r\n- Does it have any form of a door?\r\n    - Does the door require a key?\r\n- Will it operate on land, on water, under water, in the air?\r\n- Is it too big to take indoors?\r\n- Can the player reach things outside of the vehicle if the door is open (or there is no door)?\r\n- Is it an NPC (perhaps a robot)?\r\n- How many passengers will fit inside?\r\n- Is it also a surface? (Can things be on it as well as in it?)\r\n- Can another vehicle fit inside of it? (Or on it?)\r\n\r\n### Rideable/mountable vehicle\r\n\r\n- Can it be powered on and off?\r\n    - Does it require a key (or a code, or what have you)?\r\n    - Is it (or does it have) a light source?\r\n- Does it require any form of fuel (or battery charging) (or food)?\r\n- Will it operate on land, on water, under water, in the air?\r\n- Is it too big to take indoors?\r\n- Can the player reach things in the vehicle's location?\r\n- What happens when the player drops something while on the vehicle? Where does the item go? On the vehicle, or in the vehicle's location?\r\n- Is it an NPC?\r\n- Is it also a container (or does it have a container as an [integral part](https://textadventures.co.uk/forum/quest/topic/nfszybirc0yme-ntgkvosw/integral-objects-and-body-parts))? (Can things be in it as well as on it?)",
      "EditableFormat": "markdown",
      "HTML": "<p>Back to this. . .</p>\n<p>As far as vehicles are concerned:</p>\n<h3>Enterable vehicle</h3>\n<ul>\n<li>Can it be powered on and off?\n<ul>\n<li>Does it require a key (or a code, or what have you)?</li>\n<li>Is it (or does it have) a light source?</li>\n</ul>\n</li>\n<li>Does it require any form of fuel (or battery charging)?</li>\n<li>Is it <code>transparent</code>? (Does it have windows that are always see-through? Can you see things in the vehicle's location?)\n<ul>\n<li>Can the windows be opened and closed?</li>\n</ul>\n</li>\n<li>Does it have any form of a door?\n<ul>\n<li>Does the door require a key?</li>\n</ul>\n</li>\n<li>Will it operate on land, on water, under water, in the air?</li>\n<li>Is it too big to take indoors?</li>\n<li>Can the player reach things outside of the vehicle if the door is open (or there is no door)?</li>\n<li>Is it an NPC (perhaps a robot)?</li>\n<li>How many passengers will fit inside?</li>\n<li>Is it also a surface? (Can things be on it as well as in it?)</li>\n<li>Can another vehicle fit inside of it? (Or on it?)</li>\n</ul>\n<h3>Rideable/mountable vehicle</h3>\n<ul>\n<li>Can it be powered on and off?\n<ul>\n<li>Does it require a key (or a code, or what have you)?</li>\n<li>Is it (or does it have) a light source?</li>\n</ul>\n</li>\n<li>Does it require any form of fuel (or battery charging) (or food)?</li>\n<li>Will it operate on land, on water, under water, in the air?</li>\n<li>Is it too big to take indoors?</li>\n<li>Can the player reach things in the vehicle's location?</li>\n<li>What happens when the player drops something while on the vehicle? Where does the item go? On the vehicle, or in the vehicle's location?</li>\n<li>Is it an NPC?</li>\n<li>Is it also a container (or does it have a container as an <a href=\"https://textadventures.co.uk/forum/quest/topic/nfszybirc0yme-ntgkvosw/integral-objects-and-body-parts\">integral part</a>)? (Can things be in it as well as on it?)</li>\n</ul>\n\n",
      "PostDate": "2021-06-18T21:22:40.0287806Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "808bde36-2a47-4604-94dc-8422c25d9e9e",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> At first, the bed was a transparent room inside of the Bedroom, and I had it working pretty well -- except I couldn't figure out where \"You can't reach into the Bedroom.\" printed from sometimes. I found one place, and I fixed it so it said \"You can't reach that from the bed.\", but there were other commands that still printed the default. So, I decided that was too much work and went with the attribute thing.\r\n\r\nThis is one thing that bugs me. So many of the default commands repeat the same logic for generating messages about why you can't do something. `DoTake`, for example, will say \"The (parent) is not open.\" if you attempt to take any object which is visible but not reachable. You can get around this by setting the room's `blockingmessage` (an attribute which isn't in the editor at all), but that seems a terrible bodge.\r\n\r\nThe function should be more like:\r\n<pre><code>  &lt;function name=\"BlockingMessage\" parameters=\"blocked, prefix\" type=\"string\">\r\n    obj = GetBlockingObject(blocked)\r\n    <b style=\"color: green\">if (Contains (obj, game.pov)) {\r\n      return (prefix + CapFirst (GetDisplayAlias (game.pov)) + \" can't reach \" + blocked.article + \" from \" + GetDefiniteName (game.pov.parent) + \".\")\r\n    }\r\n    else </b>if (HasString(obj, \"blockingmessage\")) {\r\n      return (prefix + obj.blockingmessage)\r\n    }\r\n    else {\r\n      return (prefix + DynamicTemplate(\"ObjectNotOpen\", obj))\r\n    }\r\n  &lt;/function></code></pre>",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>At first, the bed was a transparent room inside of the Bedroom, and I had it working pretty well -- except I couldn't figure out where \"You can't reach into the Bedroom.\" printed from sometimes. I found one place, and I fixed it so it said \"You can't reach that from the bed.\", but there were other commands that still printed the default. So, I decided that was too much work and went with the attribute thing.</p>\n</blockquote>\n<p>This is one thing that bugs me. So many of the default commands repeat the same logic for generating messages about why you can't do something. <code>DoTake</code>, for example, will say \"The (parent) is not open.\" if you attempt to take any object which is visible but not reachable. You can get around this by setting the room's <code>blockingmessage</code> (an attribute which isn't in the editor at all), but that seems a terrible bodge.</p>\n<p>The function should be more like:</p>\n<pre><code>  &lt;function name=\"BlockingMessage\" parameters=\"blocked, prefix\" type=\"string\"&gt;\n    obj = GetBlockingObject(blocked)\n    <b style=\"color: green\">if (Contains (obj, game.pov)) {\n      return (prefix + CapFirst (GetDisplayAlias (game.pov)) + \" can't reach \" + blocked.article + \" from \" + GetDefiniteName (game.pov.parent) + \".\")\n    }\n    else </b>if (HasString(obj, \"blockingmessage\")) {\n      return (prefix + obj.blockingmessage)\n    }\n    else {\n      return (prefix + DynamicTemplate(\"ObjectNotOpen\", obj))\n    }\n  &lt;/function&gt;</code></pre>\n\n",
      "PostDate": "2021-06-18T22:52:15.1934009Z",
      "LastEditDate": "2021-06-18T22:52:39.2926498Z",
      "link": null
    },
    {
      "PostId": "34cf482e-723a-476f-a8d0-9a8076e8ced6",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That looks pretty good.\r\n\r\nI also remember the room being dark and the bed not caring about that at all.\r\n\r\nI think I have some code (somewhere) from whenever I created this thread in which all the room description stuff checks for the non-transparent parent. It also adds everything in the actual parent to the scope, and the same goes for the parents in between the actual parent and the top non-transparent parent. I was at a place where I needed to add code to either allow or disallow handling (and examining) of certain things in certain places in certain scenarios, when I decided I'd just come back to all this another day. Now, I can't find that code, but I saved it somewhere, damn it.",
      "EditableFormat": "markdown",
      "HTML": "<p>That looks pretty good.</p>\n<p>I also remember the room being dark and the bed not caring about that at all.</p>\n<p>I think I have some code (somewhere) from whenever I created this thread in which all the room description stuff checks for the non-transparent parent. It also adds everything in the actual parent to the scope, and the same goes for the parents in between the actual parent and the top non-transparent parent. I was at a place where I needed to add code to either allow or disallow handling (and examining) of certain things in certain places in certain scenarios, when I decided I'd just come back to all this another day. Now, I can't find that code, but I saved it somewhere, damn it.</p>\n\n",
      "PostDate": "2021-06-19T00:01:58.4221995Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8f6b41a8-cd72-4fad-b76e-51e013088b20",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I also remember the room being dark and the bed not caring about that at all.\r\n\r\nHmm… it looks like it relies on `darklevel` already being set. So…\r\n\r\n<table border=\"1\"><tr><th colspan=\"2\">bedroom state<br/>(when the player last entered it)</th><td colspan=\"2\">dark</td><td colspan=\"2\">lit or unvisited</td></tr>\r\n<tr><th colspan=\"2\">bed state<br/>(when the player was last entered it)</th><td>dark</td><td>lit or unvisited</td><td>dark</td><td>lit or unvisited</td></tr>\r\n<tr><th rowspan=\"2\">Player in bed</th><td>Objects in bed appear:</td><td>hidden</td><td>reachable</td><td style=\"color: brown; font-weight: bold\">visible not reachable</td><td>reachable</td></tr>\r\n<tr><td>Objects in bedroom appear:</td><td colspan=\"2\">hidden</td><td colspan=\"2\">visible not reachable</td></tr><tr><th rowspan=\"2\">Player in bedroom</th><td>Objects in bed appear:</td><td colspan=\"2\" rowspan=\"2\">hidden</td><td colspan=\"2\" rowspan=\"2\">reachable</td></tr></tr>\r\n<tr><td>Objects in bedroom appear:</td></table><br/>\r\n\r\nSo… if there's a lamp in the room but your bed is dark, objects that are in the bed with you will appear to be outside it. That's because they are indirect children of the bedroom, so are in its `ContainsVisible`; but they're not in the bed's `ScopeVisible` so the function treats them as being in the room.\r\n\r\nTo be honest, I think that Quest's scope functions are a mess. `ScopeVisibleNotReachable` gets the visible scope for the outer room, and the reachable scope for the inner room, and then loops over them both removing one list from the other. `ScopeVisible`, on the other hand, runs both `ScopeReachable` and `ScopeVisibleNotReachable` and then adds them back to the same list. That means you're removing one list from another, only for the calling function to join them together again.\r\n\r\nThis also shows off a problem with the darkness system – `CheckDarkness` only checks the darkness level for the room the player is currently in. I previously wrestled with that in the case of a door whose description says what you can see through it. But it seems to be the case for a transparent room as well.\r\n\r\nI think it should be something like this:\r\n```\r\n<type name=\"defaultobject\">\r\n  <!-- Don't forget all the stuff that's already there -->\r\n\r\n  <changedparent type=\"script\">\r\n    if (GetBoolean (this, \"lightsource\")) {\r\n      if (IsDefined (\"oldvalue\")) {\r\n        CheckDarknessForRoom (oldvalue)\r\n      }\r\n      CheckDarknessForRoom (this.parent)\r\n    }\r\n    if (this = game.pov) {\r\n      // all the stuff that's already there\r\n    }\r\n  </changedparent>\r\n\r\n  <changedlightsource type=\"script\">\r\n    if (Equal (this.lightstrength, \"strong\")) {\r\n      if (this.lightsource) {\r\n        this.parent.darklevel = false\r\n      }\r\n      else {\r\n        CheckDarknessForRoom (this.parent)\r\n      }\r\n    }\r\n  </changedlightsource>\r\n\r\n  <changedlightstrength type=\"script\">\r\n    if (GetBoolean (this, \"lightsource\")) {\r\n      if (this.lightstrength = \"strong\") {\r\n        this.parent.darklevel = false\r\n      }\r\n      else {\r\n        CheckDarknessForRoom (this.parent)\r\n      }\r\n    }\r\n  </changedlightstrength>\r\n\r\n  <changeddarklevel>\r\n    // This should only be changed by CheckDarknessForRoom, or by a light in the room turning on\r\n    // so we can assume that either it's lit, or no child objects contain a light source\r\n    if (CanSeeThrough (this) and HasObject (this, \"parent\")) {\r\n      this.parent.darklevel = this.darklevel\r\n    }\r\n    foreach (obj, GetDirectChildren (this)) {\r\n      if (CanSeeThrough (obj)) {\r\n        obj.darklevel = this.darklevel\r\n      }\r\n    }\r\n  </changeddarklevel>\r\n</type>\r\n\r\n<function name=\"CheckDarknessForRoom\" parameters=\"room\" type=\"boolean\">\r\n  isdark = GetBoolean (room, \"dark\")\r\n  if (isdark and CanSeeThrough (room) and HasObject (room, \"parent\")) {\r\n    isdark = CheckDarknessForRoom (room.parent)\r\n  }\r\n  if (isdark) {\r\n    searchlist = GetDirectChildren (room)\r\n    while (isdark and ListCount (searchlist) > 0) {\r\n      obj = ListItem (searchlist, 0)\r\n      list remove (searchlist, obj)\r\n      if (obj.visible) {\r\n        if (GetBoolean (obj, \"lightsource\") and Equal (obj.lightstrength, \"strong\")) {\r\n          isdark = false\r\n        }\r\n        else if (CanSeeThrough (obj)) {\r\n          searchlist = ListCombine (searchlist, GetDirectChildren (obj))\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Still using the counterintuitive name \"darklevel\", rather than a more sensible \"isdark\" or \"darknow\"\r\n  // Really, the inverse boolean \"containslightsource\" would make more sense to me\r\n  // But I'll go with what existing scripts expect\r\n  room.darklevel = isdark\r\n  return (isdark)\r\n</function>\r\n\r\n<function name=\"CheckDarkness\" type=\"boolean\">\r\n  return (CheckDarknessForRoom (game.pov.parent))\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I also remember the room being dark and the bed not caring about that at all.</p>\n</blockquote>\n<p>Hmm… it looks like it relies on <code>darklevel</code> already being set. So…</p>\n<table border=\"1\"><tbody><tr><th colspan=\"2\">bedroom state<br>(when the player last entered it)</th><td colspan=\"2\">dark</td><td colspan=\"2\">lit or unvisited</td></tr>\n<tr><th colspan=\"2\">bed state<br>(when the player was last entered it)</th><td>dark</td><td>lit or unvisited</td><td>dark</td><td>lit or unvisited</td></tr>\n<tr><th rowspan=\"2\">Player in bed</th><td>Objects in bed appear:</td><td>hidden</td><td>reachable</td><td style=\"color: brown; font-weight: bold\">visible not reachable</td><td>reachable</td></tr>\n<tr><td>Objects in bedroom appear:</td><td colspan=\"2\">hidden</td><td colspan=\"2\">visible not reachable</td></tr><tr><th rowspan=\"2\">Player in bedroom</th><td>Objects in bed appear:</td><td colspan=\"2\" rowspan=\"2\">hidden</td><td colspan=\"2\" rowspan=\"2\">reachable</td></tr>\n<tr><td>Objects in bedroom appear:</td></tr></tbody></table><br>\n<p>So… if there's a lamp in the room but your bed is dark, objects that are in the bed with you will appear to be outside it. That's because they are indirect children of the bedroom, so are in its <code>ContainsVisible</code>; but they're not in the bed's <code>ScopeVisible</code> so the function treats them as being in the room.</p>\n<p>To be honest, I think that Quest's scope functions are a mess. <code>ScopeVisibleNotReachable</code> gets the visible scope for the outer room, and the reachable scope for the inner room, and then loops over them both removing one list from the other. <code>ScopeVisible</code>, on the other hand, runs both <code>ScopeReachable</code> and <code>ScopeVisibleNotReachable</code> and then adds them back to the same list. That means you're removing one list from another, only for the calling function to join them together again.</p>\n<p>This also shows off a problem with the darkness system – <code>CheckDarkness</code> only checks the darkness level for the room the player is currently in. I previously wrestled with that in the case of a door whose description says what you can see through it. But it seems to be the case for a transparent room as well.</p>\n<p>I think it should be something like this:</p>\n<pre><code>&lt;type name=\"defaultobject\"&gt;\n  &lt;!-- Don't forget all the stuff that's already there --&gt;\n\n  &lt;changedparent type=\"script\"&gt;\n    if (GetBoolean (this, \"lightsource\")) {\n      if (IsDefined (\"oldvalue\")) {\n        CheckDarknessForRoom (oldvalue)\n      }\n      CheckDarknessForRoom (this.parent)\n    }\n    if (this = game.pov) {\n      // all the stuff that's already there\n    }\n  &lt;/changedparent&gt;\n\n  &lt;changedlightsource type=\"script\"&gt;\n    if (Equal (this.lightstrength, \"strong\")) {\n      if (this.lightsource) {\n        this.parent.darklevel = false\n      }\n      else {\n        CheckDarknessForRoom (this.parent)\n      }\n    }\n  &lt;/changedlightsource&gt;\n\n  &lt;changedlightstrength type=\"script\"&gt;\n    if (GetBoolean (this, \"lightsource\")) {\n      if (this.lightstrength = \"strong\") {\n        this.parent.darklevel = false\n      }\n      else {\n        CheckDarknessForRoom (this.parent)\n      }\n    }\n  &lt;/changedlightstrength&gt;\n\n  &lt;changeddarklevel&gt;\n    // This should only be changed by CheckDarknessForRoom, or by a light in the room turning on\n    // so we can assume that either it's lit, or no child objects contain a light source\n    if (CanSeeThrough (this) and HasObject (this, \"parent\")) {\n      this.parent.darklevel = this.darklevel\n    }\n    foreach (obj, GetDirectChildren (this)) {\n      if (CanSeeThrough (obj)) {\n        obj.darklevel = this.darklevel\n      }\n    }\n  &lt;/changeddarklevel&gt;\n&lt;/type&gt;\n\n&lt;function name=\"CheckDarknessForRoom\" parameters=\"room\" type=\"boolean\"&gt;\n  isdark = GetBoolean (room, \"dark\")\n  if (isdark and CanSeeThrough (room) and HasObject (room, \"parent\")) {\n    isdark = CheckDarknessForRoom (room.parent)\n  }\n  if (isdark) {\n    searchlist = GetDirectChildren (room)\n    while (isdark and ListCount (searchlist) &gt; 0) {\n      obj = ListItem (searchlist, 0)\n      list remove (searchlist, obj)\n      if (obj.visible) {\n        if (GetBoolean (obj, \"lightsource\") and Equal (obj.lightstrength, \"strong\")) {\n          isdark = false\n        }\n        else if (CanSeeThrough (obj)) {\n          searchlist = ListCombine (searchlist, GetDirectChildren (obj))\n        }\n      }\n    }\n  }\n  // Still using the counterintuitive name \"darklevel\", rather than a more sensible \"isdark\" or \"darknow\"\n  // Really, the inverse boolean \"containslightsource\" would make more sense to me\n  // But I'll go with what existing scripts expect\n  room.darklevel = isdark\n  return (isdark)\n&lt;/function&gt;\n\n&lt;function name=\"CheckDarkness\" type=\"boolean\"&gt;\n  return (CheckDarknessForRoom (game.pov.parent))\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2021-06-19T11:00:10.6716815Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
