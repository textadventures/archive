{
  "Topic": {
    "TopicId": "qsgjng5whuwzpc6udh37cq",
    "ForumId": "10",
    "Title": "Showing the player that a new object has come into the current room?",
    "LastUpdated": "2020-02-02T11:52:58.8159675Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "a803d76c-e5a2-44c6-be11-8df823f19ebb",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If I type in a command that will cause an object to move to the current room there does not seem to be a script command such as LOOK to show the player the new object in the current room. I suspect the same applies to an invisible object becoming visible.\r\n\r\nBrian\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>If I type in a command that will cause an object to move to the current room there does not seem to be a script command such as LOOK to show the player the new object in the current room. I suspect the same applies to an invisible object becoming visible.</p>\n<p>Brian</p>\n\n",
      "PostDate": "2020-02-02T11:52:58.8159675Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b0ea6199-81e6-4803-9dcf-64555e8aac87",
      "UserId": 445604,
      "Username": "Y4T5UR0",
      "AvatarUrl": "https://i.imgur.com/HJN9Gwwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\n\"...there does not seem to be a script command such as LOOK to show the player the new object in the current room\"\r\n```\r\nFrom what I can take from what you said, you want the players to be noticed as soon as the new object arrives. I'm sorry if I misunderstand it >.<\r\n\r\nI'm not really a pro at this kind of stuff, but you may consider using a turnscript:\r\n```\r\nAdd script > IF... > If object.parent = player.parent\r\n//Put description (You may want to do it manually with add text script or do sth to trigger the description in the code)\r\n```\r\nor a change script on the object with similar content. Also, just a footnote, but I use \"object\" and \"player\" since I know neither the name (not alias) of your player nor that of your object and not because it is supposed to be written exactly like that.\r\n\r\nHope it helps, though I'm not sure it will",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>\"...there does not seem to be a script command such as LOOK to show the player the new object in the current room\"\n</code></pre>\n<p>From what I can take from what you said, you want the players to be noticed as soon as the new object arrives. I'm sorry if I misunderstand it &gt;.&lt;</p>\n<p>I'm not really a pro at this kind of stuff, but you may consider using a turnscript:</p>\n<pre><code>Add script &gt; IF... &gt; If object.parent = player.parent\n//Put description (You may want to do it manually with add text script or do sth to trigger the description in the code)\n</code></pre>\n<p>or a change script on the object with similar content. Also, just a footnote, but I use \"object\" and \"player\" since I know neither the name (not alias) of your player nor that of your object and not because it is supposed to be written exactly like that.</p>\n<p>Hope it helps, though I'm not sure it will</p>\n\n",
      "PostDate": "2020-02-02T12:20:47.0738441Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6b547b47-80a8-433a-abb4-3eec097ea6e6",
      "UserId": 26011,
      "Username": "onimike",
      "AvatarUrl": "http://i.imgur.com/yL1GRWab.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah just after moving object to room just use a print message or you could use an expression then type in\r\n\r\n```\r\n\"Standing there a \" +object.name+ \" appears in front of you!\"\r\n```\r\n\r\nthis will get the name of the object and display it in message.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah just after moving object to room just use a print message or you could use an expression then type in</p>\n<pre><code>\"Standing there a \" +object.name+ \" appears in front of you!\"\n</code></pre>\n<p>this will get the name of the object and display it in message.</p>\n\n",
      "PostDate": "2020-02-02T17:10:31.2182597Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "59c0f2cd-03e1-4260-8224-c82ba1fbe41d",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks but if I use the\r\n \"Standing there a \"+object.name+ \"appears in front of you\" \r\n then how do I use this if two objects have moved into the current room onimike?\r\n\r\nBrian\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks but if I use the<br>\n\"Standing there a \"+object.name+ \"appears in front of you\"<br>\nthen how do I use this if two objects have moved into the current room onimike?</p>\n<p>Brian</p>\n\n",
      "PostDate": "2020-02-03T09:52:21.422986Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "53d8b702-1b9a-434e-9be8-11a028d37c92",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm trying to understand what you wrote Y4T5UR0  but don't fully understand what you mean by\r\n//Put description (You may want to do it manually with add text script or do sth to trigger the description in the code)\r\n\r\nBrian",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm trying to understand what you wrote Y4T5UR0  but don't fully understand what you mean by<br>\n//Put description (You may want to do it manually with add text script or do sth to trigger the description in the code)</p>\n<p>Brian</p>\n\n",
      "PostDate": "2020-02-03T09:55:26.2644725Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ef531ac8-51b8-48f0-932a-1c23b24ec46a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You want `GetDisplayAlias (object)`, not `object.name`.\r\n\r\nIf you have a script that's moving multiple objects into the player's room, you can just list them manually:\r\n```\r\nmsg (\"You hear the sound of the door opening again behind you, and when you turn around you see a {object:bell}, a {object:book}, and a {object:colin} on the floor.\")\r\n```\r\nYou can do that as part of the code that moves the objects.\r\n\r\n<hr/>\r\n\r\nIf you're using the `changedparent` script to generate these messages, then it will display a message for each object that has moved, although that might look a bit weird if there are several objects.\r\n\r\nI can see two ways to make \"X and Y have entered the room\" messages, aside from doing in manually in the script that moves those objects. You could use the `roomenter` script to store a list of objects in the room, and then have a turnscript that compares this list against the current scope, displaying a list of objects that have entered or left. Or you could have the `changedparent` script add its message to a queue, and have a turnscript which combines identical messages before displaying them.\r\n\r\nI could show you the code for either of those methods; but I think they're overkill for 90% of the likely cases - in most games, objects will only enter the room if a script is moving them, so you can use that script to display the message.",
      "EditableFormat": "markdown",
      "HTML": "<p>You want <code>GetDisplayAlias (object)</code>, not <code>object.name</code>.</p>\n<p>If you have a script that's moving multiple objects into the player's room, you can just list them manually:</p>\n<pre><code>msg (\"You hear the sound of the door opening again behind you, and when you turn around you see a {object:bell}, a {object:book}, and a {object:colin} on the floor.\")\n</code></pre>\n<p>You can do that as part of the code that moves the objects.</p>\n<hr>\n<p>If you're using the <code>changedparent</code> script to generate these messages, then it will display a message for each object that has moved, although that might look a bit weird if there are several objects.</p>\n<p>I can see two ways to make \"X and Y have entered the room\" messages, aside from doing in manually in the script that moves those objects. You could use the <code>roomenter</code> script to store a list of objects in the room, and then have a turnscript that compares this list against the current scope, displaying a list of objects that have entered or left. Or you could have the <code>changedparent</code> script add its message to a queue, and have a turnscript which combines identical messages before displaying them.</p>\n<p>I could show you the code for either of those methods; but I think they're overkill for 90% of the likely cases - in most games, objects will only enter the room if a script is moving them, so you can use that script to display the message.</p>\n\n",
      "PostDate": "2020-02-03T10:10:40.1571675Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8172ec54-aa43-4449-ab7a-48ae8dcfba1d",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "onimike\r\nusing a script command to move an object to the current room I found that if I use the expression \"Standing there a \" +object.name+ \" appears in front of you!\" I get an error as Quest does not know the object name.\r\n\r\nBrian",
      "EditableFormat": "markdown",
      "HTML": "<p>onimike<br>\nusing a script command to move an object to the current room I found that if I use the expression \"Standing there a \" +object.name+ \" appears in front of you!\" I get an error as Quest does not know the object name.</p>\n<p>Brian</p>\n\n",
      "PostDate": "2020-02-03T10:20:52.3008912Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0377dabd-69bd-4c09-a621-13aa47af5e7a",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks mrangel.\r\n\r\nI was thinking that a Look command could deal with any random object entering the room.\r\nDoes Quest have a script command for entering text just like the player enters text\r\neg  Command(Wash Bottle) or Command(Look).\r\n\r\nThere is also a clear screen command so maybe that would cause a Look command to be performed to show the romm and its contents and if the script was run in the right order then the moved object would appear.\r\n\r\nBrian",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks mrangel.</p>\n<p>I was thinking that a Look command could deal with any random object entering the room.<br>\nDoes Quest have a script command for entering text just like the player enters text<br>\neg  Command(Wash Bottle) or Command(Look).</p>\n<p>There is also a clear screen command so maybe that would cause a Look command to be performed to show the romm and its contents and if the script was run in the right order then the moved object would appear.</p>\n<p>Brian</p>\n\n",
      "PostDate": "2020-02-03T10:32:53.0409614Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "202ef91b-86fb-4026-8a62-79eb2d6389cc",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi mrangel.\r\n\r\nIn your message to me you spoke of different types of scripts which were \"changedparent\" script and the \"roomenter\" script. \r\nI mainly use the users interface screen so I don't know if this can be done from that screen or are these coded in on the code screen. Can you give me an example of one of these scripts please.\r\n\r\nBrian",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi mrangel.</p>\n<p>In your message to me you spoke of different types of scripts which were \"changedparent\" script and the \"roomenter\" script.<br>\nI mainly use the users interface screen so I don't know if this can be done from that screen or are these coded in on the code screen. Can you give me an example of one of these scripts please.</p>\n<p>Brian</p>\n\n",
      "PostDate": "2020-02-03T10:52:50.3505438Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "572d1c97-f907-49ff-b070-89619fd6d2cb",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> using a script command to move an object to the current room I found that if I use the expression \"Standing there a \" +object.name+ \" appears in front of you!\" I get an error as Quest does not know the object name.\r\n\r\nIf you're using a script command to move an object, you know the name of the object.\r\n\r\nFor a script that always moves the same object, use the name of the object directly.\r\n\r\nFor a script that moves different objects around, that script must have a variable holding the object to move. Use the same variable to get the name of the moved object.\r\n\r\nBut as I said before, you should be using either `{object:name_of_object}` in a string, or `GetDisplayName (variable referring to object)` in an expression. An object's *name* is what Quest refers to it as internally.\r\n\r\n<hr/>\r\n\r\n> Does Quest have a script command for entering text just like the player enters text\r\neg Command(Wash Bottle) or Command(Look).\r\n\r\nYes, but you don't want to do that.\r\n\r\nA few methods. You should know about them in case you want to use them later, but right now you don't need them all.\r\n\r\n**Method 1. Just do the thing**\r\n\r\nThe script for the \"look\" command is very simple. It runs a single function.\r\nSo to display the room description again, you can call the same function:\r\n```\r\nShowRoomDescription()\r\n```\r\n\r\n**Method 2. Call the command script directly**\r\n\r\nIf you know the name of a command (which isn't always the same as its pattern), you can call that script using the `do` command.\r\n```\r\ndo (look, \"script\")\r\n```\r\n\r\nThis will act exactly as if the player had entered the command, but won't run any turnscripts or similar.\r\nIf you want to pass parameters to the command, you'd need to add them to a dictionary, like this:\r\n```\r\nparameters = NewDictionary()\r\ndictionary add (parameters, \"exit\", exit127)\r\ndo (go, \"script\", parameters)\r\n```\r\nor\r\n```\r\nparameters = NewDictionary()\r\ndictionary add (parameters, \"object1\", bunny)\r\ndictionary add (parameters, \"object2\", box)\r\ndo (go, \"script\", parameters)\r\n```\r\n\r\n**Method 3. Invoke the command parser**\r\n\r\n```\r\nHandleSingleCommand (\"look\")\r\nHandleSingleCommand (\"go north\")\r\nHandleSingleCommand (\"put the bunny in the box\")\r\n```\r\nThis is really inefficient, because it has to compare your text to every single command, just like it does when the player types something. This is one of the most processor intensive parts of the Quest engine, so you should try to avoid it unless there's really no other option.\r\n\r\nNote also that this will pop up a disambiguation menu if there's more than one visible object with the same name, or give the player an uninformative message if the object isn't visible. Just as if they'd entered the command.\r\nThis will also run turnscripts, so if your game is counting turns, it will count all of these commands.\r\n\r\nIt may also introduce some bugs, because your turnscripts will be running out of order.\r\nIf this causes a problem, it's better to do:\r\n```\r\nif (not HasAttribute (game.pov, \"commandqueue\")) {\r\n  game.pov.commandqueue = NewStringList()\r\n}\r\nlist add (game.pov.commandqueue, \"look at bunny\")\r\n```\r\nThis will cause the current command to finish, (running all turnscripts as necessary), and *then* run the command you specify (with all its command scripts).",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>using a script command to move an object to the current room I found that if I use the expression \"Standing there a \" +object.name+ \" appears in front of you!\" I get an error as Quest does not know the object name.</p>\n</blockquote>\n<p>If you're using a script command to move an object, you know the name of the object.</p>\n<p>For a script that always moves the same object, use the name of the object directly.</p>\n<p>For a script that moves different objects around, that script must have a variable holding the object to move. Use the same variable to get the name of the moved object.</p>\n<p>But as I said before, you should be using either <code>{object:name_of_object}</code> in a string, or <code>GetDisplayName (variable referring to object)</code> in an expression. An object's <em>name</em> is what Quest refers to it as internally.</p>\n<hr>\n<blockquote>\n<p>Does Quest have a script command for entering text just like the player enters text<br>\neg Command(Wash Bottle) or Command(Look).</p>\n</blockquote>\n<p>Yes, but you don't want to do that.</p>\n<p>A few methods. You should know about them in case you want to use them later, but right now you don't need them all.</p>\n<p><strong>Method 1. Just do the thing</strong></p>\n<p>The script for the \"look\" command is very simple. It runs a single function.<br>\nSo to display the room description again, you can call the same function:</p>\n<pre><code>ShowRoomDescription()\n</code></pre>\n<p><strong>Method 2. Call the command script directly</strong></p>\n<p>If you know the name of a command (which isn't always the same as its pattern), you can call that script using the <code>do</code> command.</p>\n<pre><code>do (look, \"script\")\n</code></pre>\n<p>This will act exactly as if the player had entered the command, but won't run any turnscripts or similar.<br>\nIf you want to pass parameters to the command, you'd need to add them to a dictionary, like this:</p>\n<pre><code>parameters = NewDictionary()\ndictionary add (parameters, \"exit\", exit127)\ndo (go, \"script\", parameters)\n</code></pre>\n<p>or</p>\n<pre><code>parameters = NewDictionary()\ndictionary add (parameters, \"object1\", bunny)\ndictionary add (parameters, \"object2\", box)\ndo (go, \"script\", parameters)\n</code></pre>\n<p><strong>Method 3. Invoke the command parser</strong></p>\n<pre><code>HandleSingleCommand (\"look\")\nHandleSingleCommand (\"go north\")\nHandleSingleCommand (\"put the bunny in the box\")\n</code></pre>\n<p>This is really inefficient, because it has to compare your text to every single command, just like it does when the player types something. This is one of the most processor intensive parts of the Quest engine, so you should try to avoid it unless there's really no other option.</p>\n<p>Note also that this will pop up a disambiguation menu if there's more than one visible object with the same name, or give the player an uninformative message if the object isn't visible. Just as if they'd entered the command.<br>\nThis will also run turnscripts, so if your game is counting turns, it will count all of these commands.</p>\n<p>It may also introduce some bugs, because your turnscripts will be running out of order.<br>\nIf this causes a problem, it's better to do:</p>\n<pre><code>if (not HasAttribute (game.pov, \"commandqueue\")) {\n  game.pov.commandqueue = NewStringList()\n}\nlist add (game.pov.commandqueue, \"look at bunny\")\n</code></pre>\n<p>This will cause the current command to finish, (running all turnscripts as necessary), and <em>then</em> run the command you specify (with all its command scripts).</p>\n\n",
      "PostDate": "2020-02-03T11:00:44.3951242Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7b997a4e-334f-468e-a548-90a69c295698",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> In your message to me you spoke of different types of scripts which were \"changedparent\" script and the \"roomenter\" script.\r\n\r\nOK. \"roomenter\" is a script attached to the game object. I *think* it's on the 'Scripts' tab of the game.\r\n\r\nThis is the script that is run every time the player enters a new room.\r\n\r\n\"changedparent\" is a script which is run automatically every time an object's \"parent\" attribute is changed. I believe in the desktop version of Quest you can change this on an object's 'Attributes' tab.\r\n`parent` is the room, container, or NPC that an object is currently in; so an object's `changedparent` script is run every time it is moved.\r\n\r\nBy default, all objects have a changedparent script which looks like this (English translation):\r\n```\r\nif (this object is the player) {\r\n  run the new room's enter scripts\r\n  show the room description\r\n  update the map\r\n}\r\n```\r\n\r\nfor objects that move around themselves, you could change it to something like (bits I added in bold):\r\n<pre><code>  if (game.pov = this) {\r\n    if (IsDefined(\"oldvalue\")) {\r\n      OnEnterRoom(oldvalue)\r\n    }\r\n    else {\r\n      OnEnterRoom(null)\r\n    }\r\n    if (game.gridmap) {\r\n      MergePOVCoordinates\r\n    }\r\n  }\r\n  <b>else if (this.parent = game.pov.parent) {\r\n    msg (CapFirst (GetDisplayName (this)) + \" has entered the room.\")\r\n  }\r\n  else if (IsDefined (\"oldvalue\")) {\r\n    if (oldvalue = game.pov.parent) {\r\n      msg (CapFirst (GetDisplayName (this)) + \" has left the room.\")\r\n    }\r\n  }</b>\r\n  this.hasbeenmoved = true\r\n</code></pre>",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>In your message to me you spoke of different types of scripts which were \"changedparent\" script and the \"roomenter\" script.</p>\n</blockquote>\n<p>OK. \"roomenter\" is a script attached to the game object. I <em>think</em> it's on the 'Scripts' tab of the game.</p>\n<p>This is the script that is run every time the player enters a new room.</p>\n<p>\"changedparent\" is a script which is run automatically every time an object's \"parent\" attribute is changed. I believe in the desktop version of Quest you can change this on an object's 'Attributes' tab.<br>\n<code>parent</code> is the room, container, or NPC that an object is currently in; so an object's <code>changedparent</code> script is run every time it is moved.</p>\n<p>By default, all objects have a changedparent script which looks like this (English translation):</p>\n<pre><code>if (this object is the player) {\n  run the new room's enter scripts\n  show the room description\n  update the map\n}\n</code></pre>\n<p>for objects that move around themselves, you could change it to something like (bits I added in bold):</p>\n<pre><code>  if (game.pov = this) {\n    if (IsDefined(\"oldvalue\")) {\n      OnEnterRoom(oldvalue)\n    }\n    else {\n      OnEnterRoom(null)\n    }\n    if (game.gridmap) {\n      MergePOVCoordinates\n    }\n  }\n  <b>else if (this.parent = game.pov.parent) {\n    msg (CapFirst (GetDisplayName (this)) + \" has entered the room.\")\n  }\n  else if (IsDefined (\"oldvalue\")) {\n    if (oldvalue = game.pov.parent) {\n      msg (CapFirst (GetDisplayName (this)) + \" has left the room.\")\n    }\n  }</b>\n  this.hasbeenmoved = true\n</code></pre>\n\n",
      "PostDate": "2020-02-03T11:11:31.5404711Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c1205162-c13b-40b6-a4f1-f0ddfbdc7e45",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks mrangel.\r\nI'll do some experimenting on what you have taught me.\r\n\r\nBrian",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks mrangel.<br>\nI'll do some experimenting on what you have taught me.</p>\n<p>Brian</p>\n\n",
      "PostDate": "2020-02-03T12:06:38.5143415Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
