{
  "Topic": {
    "TopicId": "5559",
    "ForumId": "18",
    "Title": "Attributes and 'IF' Script Guide by HK",
    "LastUpdated": "2015-12-23T16:49:49+00:00",
    "ReplyCount": 2
  },
  "Posts": [
    {
      "PostId": "38336",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I dug this up~out of mine from some post buried in the forum, hopefully, it'll be of some use to people\n\n-------------------------------\n\nHK's Attribute Comprehensive Guide:\n\n--------------\n\nwithin your question, due to not understanding Attributes (not your fault), you're describing a bit of a conflict between whether to use an Object, an Attribute, or an Object+Attribute.\n\nSo, let's just use an Attribute, as that is what you want to learn about using. Thus there's no 'dropping' as there's no 'item' (an Object) involved.\n\n-----------\n\nI like to describe quest's (and many other) code structure(s) in this way:\n\nreal world's tri-structure:\n\n1. matter: the physical stuff, examples: 'HK' and 'Exekieljd'\n2. energy~forces~waves: actions, example: talking\n3. traits~characteristics~properties~data~info: male (HK is a male) or wet (water is wet) or bright (the sun is bright)\n\nhuman's English language's tri-structure:\n\n1. nouns\n2. verbs\n3. adjectives and~or adverbs\n\nquest's code tri-structure:\n\nObject-Oriented Programming (OOP)\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/\">http://docs.textadventures.co.uk/quest/</a><!-- m -->\n\n1. OOP's OBJECTS: Elements (Objects, Exits, Functions, Verbs, Commands, Turnscripts, Timers, Object Types, etc): <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/\">http://docs.textadventures.co.uk/quest/elements/</a><!-- m -->\n\nya, the terminology is a bit confusing at this more technical level (hence my use of all caps OBJECT vs quest's Object), all you need to know is that the Elements (Objects, Exits, Verbs, Functions, etc) are your 'physical things', an Object is just one of those 'physical things'.\n\nObjects: holds~contains Attributes and~or other Objects\n\nExits: connectors of Room Objects, holds~contains Attributes\n\nFunctions: holds~contains scripting and Attributes\n\nVerbs: local ~ individual Object's Script Attributes: holds~contains scripting. Technically, this is actually a specialized (individual Objects) sub-Command\n\nCommands: global, able to use input by the person playing the game, holds~contains scripting and Attributes\n\nTurnscripts: basically (depending on the settings) an always activating~executing~running Function, on the quest engine's 'turn' underlying code\n\nTimers: same as Turnscripts, except uses real time (seconds) for when (at intervals) it activates~executes~runs\n\nObject Types: holds~contains Attributes and~or other Object Types (as Inherited Attributes)\n\netc Elements: too lazy to get into them\n\nfour types of Objects:\n\n(1) Game Object: the 'game' Game Object: a special Object, which contains~holds the global settings (Attributes) for your game\n(2) Player Objects: the controllable Objects (RPG term: pcs: playable characters) by the person playing the game: the default is the 'player' Player Object\n(3) Room Objects: self-explanatory functionality (Exits connect Room Objects)\n(4) (Other: non-player, non-room) Objects: these are everything else: npcs (RPG term: non-playable characters), furniture, trees, RPG items, equipment, etc\n\n(5) 'Other'+Room Objects: have both functionalities\n\nexample of Objects and their Attributes:\n\n[code:1wzkhzoe]&lt;object name=&quot;room&quot;&gt;\n  &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;alias&gt;home&lt;/alias&gt;\n  &lt;description&gt;This is HK's home&#46;&lt;/description&gt;\n  &lt;attr name=&quot;tidyness_state_string_attribute&quot; type=&quot;string&quot;&gt;messy&lt;/attr&gt;\n  &lt;object name=&quot;player&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n    &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;alias&gt;HK&lt;/alias&gt;\n    &lt;attr name=&quot;sex_string_attribute&quot; type=&quot;string&quot;&gt;male&lt;/attr&gt;\n    &lt;object name=&quot;sword_1&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;alias&gt;claymore&lt;/alias&gt;\n      &lt;attr name=&quot;damage_integer_attribute&quot; type=&quot;int&quot;&gt;50&lt;/attr&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/object&gt;[/code:1wzkhzoe]\n\nthe special 'game' Game Object in code below, corresponds to the GUI~Editor's:\n\n'game' Game Object ( left side's 'tree of stuff', click on it to highlight~choose it ) -&gt; (right side) -&gt; various Tabs -&gt; various options~settings (Attributes)\n\n[code:1wzkhzoe]&lt;game name=&quot;xxx&quot;&gt;\n  &lt;gameid&gt;xxx&lt;/gameid&gt;\n  &lt;firstpublished&gt;2015&lt;/firstpublished&gt;\n  &lt;version&gt;1&#46;0&lt;/version&gt;\n  &lt;author&gt;xxx&lt;/author&gt;\n  &lt;category&gt;xxx&lt;/category&gt;\n  &lt;description&gt;xxx&lt;/description&gt;\n  &lt;subtitle&gt;xxx&lt;/subtitle&gt;\n  // etc Attributes\n&lt;/game&gt;[/code:1wzkhzoe]\n\n2. Scriptings (code lines of action~events):\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/\">http://docs.textadventures.co.uk/quest/functions/</a><!-- m --> (categorical order)\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/index_allfunctions.html\">http://docs.textadventures.co.uk/quest/ ... tions.html</a><!-- m --> (alphabetical order)\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/\">http://docs.textadventures.co.uk/quest/scripts/</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/script.html\">http://docs.textadventures.co.uk/quest/ ... cript.html</a><!-- m -->\n\nthe main containers of scriptings:\n\n(GUI~Editor: run as script -&gt; add a~new script -&gt; etc)\n\n(Objects) -&gt; Script Attributes: <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/script.html\">http://docs.textadventures.co.uk/quest/ ... cript.html</a><!-- m -->\nFunctions\nVerbs (GUI~Editor): these are actually just an Object's Script Attributes (see two lines above)\nCommands\nTurnscripts\nTimers\n\n---------------------------------------\n\n\n[b:1wzkhzoe][size=150:1wzkhzoe]the two SUPER SCRIPTS, which especially when used together, lets you do 90% of everything that you want to do in~for your game:[/size:1wzkhzoe][/b:1wzkhzoe]\n\n\n(1) the GUI~Editor's 'set a variable or attribute' Script&#058;\n\nthis let's you set~create, re-set, add~remove, and~or change~alter~adjust any Attribute (during the game)\n\nrun as script -&gt; add a~new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; (set it up)\n\nand, JUST FOR INITIAL CREATION~SET'ting ONLY (before the game begins):\n\n'whatever' Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)\n\n(Object Name: whatever)\nAttribute Name: whatever\nAttribute Type: (String, Boolean, Integer, Double, Script, Lists, Dictionaries, etc)\nAttribute Value: (whatever, but depends upon the Attribute Type, of course)\n\nin code:\n\nObject_name.Attribute_name = Value_or_Expression\n\nexamples:\n\ngame.game_event_flag_state_integer_attribute = 0\ngame.game_event_flag_state_integer_attribute = game.game_event_flag_state_integer_attribute + 1\nplayer.strength_integer_attribute = 3\nplayer.offense = player.strength + player.endurance\nplayer.damage_double_attribute = 37.21 // or it's: &quot;37.21&quot; // I haven't worked with Doubles at all, so I don't know if they need the double quotes or not\nplayer.parent = room\nplayer.parent = room2\norc.dead_boolean_attribute = false\norc.dead_boolean_attribute = true\nHK.favorite_color_string_attribute = &quot;black&quot;\nHK.favorite_colors_stringlist_attribute = split (&quot;black;red&quot;, &quot;;&quot;)\n\nplayer.damage = player.weapon.damage + player.weapon.damage * player.strength / 100 - orc.armor.resistance - orc.armor_resistance * orc.endurance / 100\n\netc etc etc examples\n\n(2) the GUI~Editor's 'if' Script&#058;\n\nthis lets you act upon conditions~scenarios, the examples below will make more sense of this for you\n\nrun as script -&gt; add a~new script -&gt; scripts -&gt; 'if' Script -&gt; (set it up)\n\nin code (example in optional full form):\n\nOPERATORS:\n\n[code:1wzkhzoe]Addiition&#58; +\nSubtraction&#58; -\nMultiplication&#58; *\nDivision&#58; /\nEquals&#58; =\nNot Equals A&#58; &lt;&gt;\nNot Equals B&#58; not Object_name&#46;Attribute_name = Value_or_Expression\nGreater Than&#58; &gt;\nLesser Than&#58; &lt;\nGreater Than or Equals to&#58; &gt;=\nLesser Than or Equals to&#58; &lt;=\nString Comparison&#58; =\n*Concatinating (literally putting things together)&#58; +\nbitwise and&#58; and\nbitwise xor~or&#58; or\nbitwise not&#58; not\n\n*Concatinating&#58;\nMath&#58; 5+4 ===&gt; 9\nMath&#58; 5+5+5+5 ===&gt; 20\nMath&#58; 5+&quot;5&quot; ===&gt; ERROR!\nMath&#58; 5+&quot;Mama&quot; ===&gt; ERROR!\nMath&#58; &quot;Mama&quot;+&quot;Mia&quot; ===&gt; ERROR!\n~VS~\nConcatinating&#58; &quot;5&quot;+&quot;4&quot; ===&gt; &quot;54&quot;\nConcatinating&#58; &quot;5&quot;+&quot;5&quot;+&quot;5&quot;+&quot;5&quot; ===&gt; &quot;5555&quot;\nConcatinating&#58; &quot;5&quot;+&quot;Mia&quot; ===&gt; &quot;5Mia&quot;\nConcatinating&#58; &quot;Mama&quot;+&quot;Mia&quot; ===&gt; &quot;MamaMia&quot;\nConcatinating&#58; &quot;Mama&quot;+&quot;&quot;+&quot;Mia&quot; ====&gt; &quot;Mama Mia&quot;[/code:1wzkhzoe]\n\nexamples:\n\n[code:1wzkhzoe]if (Object_name&#46;Attribute_name OPERATOR Value_or_Expression) {\n  // whatever scripting\n}\nelse if (Object_name&#46;Attribute_name OPERATOR Value_or_Expression) {\n  // whatever scripting\n}\n// etc 'else ifs' if you want~need more\nelse {\n  // whatever scripting\n}\n\nif (orc&#46;dead = true) {\n  msg (&quot;The orc is already dead, silly&#46;&quot;)\n} else if (orc&#46;dead = false) {\n  msg (&quot;You attack and kill the orc&#46;&quot;)\n  orc&#46;dead = true\n}\n\nif (player&#46;condition = &quot;poisoned&quot;) {\n  player&#46;life = player&#46;life - 50\n  msg (&quot;The poison damages you for 50 hp&#46;&quot;)\n} else if (player&#46;condition = &quot;paralyzed&quot;) {\n  msg (&quot;You are paralyzed, unable to move, nor able to do anything&#46;&quot;)\n} else if (player&#46;condition = &quot;dead&quot;) {\n  msg (&quot;You were killed or died&#46;&quot;)\n  msg (&quot;GAME OVER&quot;)\n  finish\n}\n\nif (player&#46;strength_integer &gt; 100) {\n  player&#46;strength_integer = 100\n} else if (player&#46;strength_integer &lt; 0) {\n  player&#46;strength_integer = 0\n}\nif (player&#46;strength_integer &gt;= 67) {\n  player&#46;strength_string = &quot;strong&quot;\n} else if (player&#46;strength_integer &lt; 67 and player&#46;strength_integer &gt; 33) {\n  player&#46;strength_string = &quot;average&quot;\n} else if (player&#46;strength_integer &lt;= 33) {\n  player&#46;strength_string = &quot;weak&quot;\n}\n\nif (not npc_1&#46;parent = player&#46;parent) {\n  msg (&quot;Npc_1 follows along with you&#46;&quot;)\n  npc_1&#46;parent = player&#46;parent\n}[/code:1wzkhzoe]\n\n3. Attributes (data~properties~traits~characteristics): <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/\">http://docs.textadventures.co.uk/quest/types/</a><!-- m -->\n\nAttributes are hard to describe, as they behave as a combination of both being 'physical things' and 'scriptings'\n\nin the GUI~Editor (before the game begins):\n\n'whatever' Element -&gt; 'whatever' or the 'Attributes' Tab -&gt; the options~settings (Attributes) || or Attributes -&gt; Add -&gt; (set them up)\n\nin code (during the game: set~create, re-set, add~remove, and change~alter~adjust) examples:\n\nObject_name.Attribute_name = Value_or_Expression\n\nAttribute Types:\n\nString Attributes: a collection of symbols (alphabet, numbers, and some of the other symbols too):\n\n[code:1wzkhzoe]a\naaa\n1\n1234\na1a1\nifdsifhsdlkfhsdklf\ndead\ndead_boolean_attribute[/code:1wzkhzoe]\n\n(the Value must be encased in~by double quotes, or the textual parts within an Expression must be too)\n\nplayer.condition = &quot;poisoned&quot;\nplayer.alias = &quot;HK&quot;\nplayer.strength_integer_as_a_string = &quot;100&quot;\n\ngame.greeting = &quot;Hi, &quot; + player.alias + &quot; welcome to this game, have fun, but try not to die, as if you die in the game, then you die in real life, muwahaha! Good Luck! You'll need it...&quot;\n\nObject Attributes:\n\nthe Value must *NOT* have double quotes, it can't be the special~reserved (a Boolean Attribute's Values) 'true' nor 'false', and it must be an actual-existing Object in the game!\n\n[code:1wzkhzoe]player&#46;parent = room\nplayer&#46;left_hand = shield\nplayer&#46;right_hand = sword\n\n&lt;object name=&quot;player&quot;&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;room&quot;&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;shield&quot;&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;sword&quot;&gt;\n&lt;/object&gt;[/code:1wzkhzoe]\n\nBoolean Attributes: literally as 'true' or 'false'\n\nNO double quotes!\n\n// the orc starts out alive (duh, lol):\norc.dead = false\n\n// you kill the orc:\norc.dead = true\n\nexample of a built-in Boolean Attribute:\ntv.switchedon=false // or (too lazy to look it up): tv.SwitchedOn=false\ntv.switchedon=true // or (too lazy to look it up): tv.SwitchedOn=true\n\nInteger Attributes: any non-decimal number\n\nplayer.strength_integer = 100\ngame.event_flag_state = 0\nplayer.strength_integer = player.strength_integer + 3\n\nDouble (Float~Floating Point) Attribute: any decimal number\n\nplayer.damage_double = 45.2 // or: &quot;45.2&quot;, as I've never used Doubles, so I don't know if it needs the double quotes or not.\n\nList (Stringlists and Objectlists) Attributes: these are a bit more advanced, so not getting into them\n\nDictionary (Stringdictionaries, Objectdictionaries, and Scriptdictionaries) Attributes: these are even more advanced, so not getting into them\n\netc Attribute Types: too tired to get into them\n\n-----------------\n\nanyways, finally about your question, conceptually about Attribute usage:\n\nyou're used to using and thinking in terms of Object (physical thing) usage, but these are very unweildy, such as:\n\nimagine having actual individual 'silver and gold coins' Objects for your currency~transactions, the sheer quantity of them + having to move them around .. YUCK !!!!\n\nINSTEAD, you want to use Attributes!\n\nYour Objects have Attributes, which you can simply adjust, no moving of actual physical things around, nor in having those physical things. Attributes are awesome! see below, using the currency~transactions example (in code):\n\nwe're only moving the 'sword' Object around, no 'gold coins' and 'silver coins' extra Objects being moved around\n\nshop_owner.cash = 500\nplayer.cash = 100\nsword.price = 50\n\nBuying:\n\nsword.parent = shop_owner\n\nplayer.cash = player.cash - sword.price\nshop_owner.cash = shop_owner.cash + sword.price\nsword.parent = player\n\nSelling:\n\nsword.parent = player\n\nplayer.cash = player.cash + (sword.price / 2)\nshop_owner.cash = shop_owner.cash - (sword.price / 2)\nsword.parent = shop_owner\n\n*note: this should require 'if' scripting to check if you have enough 'cash' to buy the sword and the shop owner to buy the sword, of course, which I've left out, obviously.\n\n----------\n\nfinally for your question specifically:\n\nI would have your 'security' be an Integer Attribute on your 'player' Player Object, by creating~setting it to zero in the GUI~Editor:\n\n'player' Player Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)\n\n(Object Name: player)\nAttribute Name: security\nAttribute Type: int (integer)\nAttribute Value: 0\n\nin code as scripting: player.security = 0\n\nin code as creation tag:\n\n[code:1wzkhzoe]&lt;object name=&quot;player&quot;&gt;\n  // blah code lines\n  &lt;attr name=&quot;security&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n  // blah code lines\n&lt;/object&gt;[/code:1wzkhzoe]\n\nanyways, conceptually what we're doing is 'flag stating', which probably makes more sense in the examples below:\n\nplayer.security = 0 ~~~~~ you don't have any security clearance, no pretend security card\nplayer.security = 1+ ~~~~~ you have higher levels of security clearance\n\nlet's say you 'push' Verb on a 'machine button' Object, which in its scripting, gives you: player.security = 1\n\nthan on a 'computer' Object, there's a 'hack' Verb, which if successful (using 'if' scripting), each time but increasing harder, increases your security by 1:\nplayer.security = player.security + 1\n\nand lastly, you got 'teleporter door' that are 'Locked' Objects~Exits that require levels of security clearance, example in pseudo-code:\n\nif (player.security=0) {\n-&gt; msg (&quot;You don't ahve clearance.&quot;)\n} else if (player.security=1) {\n-&gt; msg (&quot;You get into, are moved to, noobie areas~rooms of the game.&quot;)\n} else if (player.security=2) {\n-&gt; msg (&quot;You get into, are moved to, intermediate areas~rooms of the game.&quot;)\n} else if (player.security=3) {\n-&gt; msg (&quot;You get into, are moved to, hard areas~rooms of the game.&quot;)\n} else if (player.security=4) {\n-&gt; msg (&quot;You get into, are moved to, the last area~room of the game.&quot;)\n}",
      "EditableFormat": "bbcode",
      "HTML": "I dug this up~out of mine from some post buried in the forum, hopefully, it'll be of some use to people<br/><br/>-------------------------------<br/><br/>HK's Attribute Comprehensive Guide:<br/><br/>--------------<br/><br/>within your question, due to not understanding Attributes (not your fault), you're describing a bit of a conflict between whether to use an Object, an Attribute, or an Object+Attribute.<br/><br/>So, let's just use an Attribute, as that is what you want to learn about using. Thus there's no 'dropping' as there's no 'item' (an Object) involved.<br/><br/>-----------<br/><br/>I like to describe quest's (and many other) code structure(s) in this way:<br/><br/>real world's tri-structure:<br/><br/>1. matter: the physical stuff, examples: 'HK' and 'Exekieljd'<br/>2. energy~forces~waves: actions, example: talking<br/>3. traits~characteristics~properties~data~info: male (HK is a male) or wet (water is wet) or bright (the sun is bright)<br/><br/>human's English language's tri-structure:<br/><br/>1. nouns<br/>2. verbs<br/>3. adjectives and~or adverbs<br/><br/>quest's code tri-structure:<br/><br/>Object-Oriented Programming (OOP)<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/\">http://docs.textadventures.co.uk/quest/</a><!-- m --><br/><br/>1. OOP's OBJECTS: Elements (Objects, Exits, Functions, Verbs, Commands, Turnscripts, Timers, Object Types, etc): <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/\">http://docs.textadventures.co.uk/quest/elements/</a><!-- m --><br/><br/>ya, the terminology is a bit confusing at this more technical level (hence my use of all caps OBJECT vs quest's Object), all you need to know is that the Elements (Objects, Exits, Verbs, Functions, etc) are your 'physical things', an Object is just one of those 'physical things'.<br/><br/>Objects: holds~contains Attributes and~or other Objects<br/><br/>Exits: connectors of Room Objects, holds~contains Attributes<br/><br/>Functions: holds~contains scripting and Attributes<br/><br/>Verbs: local ~ individual Object's Script Attributes: holds~contains scripting. Technically, this is actually a specialized (individual Objects) sub-Command<br/><br/>Commands: global, able to use input by the person playing the game, holds~contains scripting and Attributes<br/><br/>Turnscripts: basically (depending on the settings) an always activating~executing~running Function, on the quest engine's 'turn' underlying code<br/><br/>Timers: same as Turnscripts, except uses real time (seconds) for when (at intervals) it activates~executes~runs<br/><br/>Object Types: holds~contains Attributes and~or other Object Types (as Inherited Attributes)<br/><br/>etc Elements: too lazy to get into them<br/><br/>four types of Objects:<br/><br/>(1) Game Object: the 'game' Game Object: a special Object, which contains~holds the global settings (Attributes) for your game<br/>(2) Player Objects: the controllable Objects (RPG term: pcs: playable characters) by the person playing the game: the default is the 'player' Player Object<br/>(3) Room Objects: self-explanatory functionality (Exits connect Room Objects)<br/>(4) (Other: non-player, non-room) Objects: these are everything else: npcs (RPG term: non-playable characters), furniture, trees, RPG items, equipment, etc<br/><br/>(5) 'Other'+Room Objects: have both functionalities<br/><br/>example of Objects and their Attributes:<br/><br/><pre><code>&lt;object name=&quot;room&quot;&gt;<br/>  &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;alias&gt;home&lt;/alias&gt;<br/>  &lt;description&gt;This is HK's home&#46;&lt;/description&gt;<br/>  &lt;attr name=&quot;tidyness_state_string_attribute&quot; type=&quot;string&quot;&gt;messy&lt;/attr&gt;<br/>  &lt;object name=&quot;player&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>    &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;alias&gt;HK&lt;/alias&gt;<br/>    &lt;attr name=&quot;sex_string_attribute&quot; type=&quot;string&quot;&gt;male&lt;/attr&gt;<br/>    &lt;object name=&quot;sword_1&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;alias&gt;claymore&lt;/alias&gt;<br/>      &lt;attr name=&quot;damage_integer_attribute&quot; type=&quot;int&quot;&gt;50&lt;/attr&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>the special 'game' Game Object in code below, corresponds to the GUI~Editor's:<br/><br/>'game' Game Object ( left side's 'tree of stuff', click on it to highlight~choose it ) -&gt; (right side) -&gt; various Tabs -&gt; various options~settings (Attributes)<br/><br/><pre><code>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;gameid&gt;xxx&lt;/gameid&gt;<br/>  &lt;firstpublished&gt;2015&lt;/firstpublished&gt;<br/>  &lt;version&gt;1&#46;0&lt;/version&gt;<br/>  &lt;author&gt;xxx&lt;/author&gt;<br/>  &lt;category&gt;xxx&lt;/category&gt;<br/>  &lt;description&gt;xxx&lt;/description&gt;<br/>  &lt;subtitle&gt;xxx&lt;/subtitle&gt;<br/>  // etc Attributes<br/>&lt;/game&gt;</code></pre><br/><br/>2. Scriptings (code lines of action~events):<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/\">http://docs.textadventures.co.uk/quest/functions/</a><!-- m --> (categorical order)<br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/index_allfunctions.html\">http://docs.textadventures.co.uk/quest/ ... tions.html</a><!-- m --> (alphabetical order)<br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/\">http://docs.textadventures.co.uk/quest/scripts/</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/script.html\">http://docs.textadventures.co.uk/quest/ ... cript.html</a><!-- m --><br/><br/>the main containers of scriptings:<br/><br/>(GUI~Editor: run as script -&gt; add a~new script -&gt; etc)<br/><br/>(Objects) -&gt; Script Attributes: <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/script.html\">http://docs.textadventures.co.uk/quest/ ... cript.html</a><!-- m --><br/>Functions<br/>Verbs (GUI~Editor): these are actually just an Object's Script Attributes (see two lines above)<br/>Commands<br/>Turnscripts<br/>Timers<br/><br/>---------------------------------------<br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-size:150\">the two SUPER SCRIPTS, which especially when used together, lets you do 90% of everything that you want to do in~for your game:</span></span><br/><br/><br/>(1) the GUI~Editor's 'set a variable or attribute' Script&#058;<br/><br/>this let's you set~create, re-set, add~remove, and~or change~alter~adjust any Attribute (during the game)<br/><br/>run as script -&gt; add a~new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; (set it up)<br/><br/>and, JUST FOR INITIAL CREATION~SET'ting ONLY (before the game begins):<br/><br/>'whatever' Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)<br/><br/>(Object Name: whatever)<br/>Attribute Name: whatever<br/>Attribute Type: (String, Boolean, Integer, Double, Script, Lists, Dictionaries, etc)<br/>Attribute Value: (whatever, but depends upon the Attribute Type, of course)<br/><br/>in code:<br/><br/>Object_name.Attribute_name = Value_or_Expression<br/><br/>examples:<br/><br/>game.game_event_flag_state_integer_attribute = 0<br/>game.game_event_flag_state_integer_attribute = game.game_event_flag_state_integer_attribute + 1<br/>player.strength_integer_attribute = 3<br/>player.offense = player.strength + player.endurance<br/>player.damage_double_attribute = 37.21 // or it's: &quot;37.21&quot; // I haven't worked with Doubles at all, so I don't know if they need the double quotes or not<br/>player.parent = room<br/>player.parent = room2<br/>orc.dead_boolean_attribute = false<br/>orc.dead_boolean_attribute = true<br/>HK.favorite_color_string_attribute = &quot;black&quot;<br/>HK.favorite_colors_stringlist_attribute = split (&quot;black;red&quot;, &quot;;&quot;)<br/><br/>player.damage = player.weapon.damage + player.weapon.damage * player.strength / 100 - orc.armor.resistance - orc.armor_resistance * orc.endurance / 100<br/><br/>etc etc etc examples<br/><br/>(2) the GUI~Editor's 'if' Script&#058;<br/><br/>this lets you act upon conditions~scenarios, the examples below will make more sense of this for you<br/><br/>run as script -&gt; add a~new script -&gt; scripts -&gt; 'if' Script -&gt; (set it up)<br/><br/>in code (example in optional full form):<br/><br/>OPERATORS:<br/><br/><pre><code>Addiition&#58; +<br/>Subtraction&#58; -<br/>Multiplication&#58; *<br/>Division&#58; /<br/>Equals&#58; =<br/>Not Equals A&#58; &lt;&gt;<br/>Not Equals B&#58; not Object_name&#46;Attribute_name = Value_or_Expression<br/>Greater Than&#58; &gt;<br/>Lesser Than&#58; &lt;<br/>Greater Than or Equals to&#58; &gt;=<br/>Lesser Than or Equals to&#58; &lt;=<br/>String Comparison&#58; =<br/>*Concatinating (literally putting things together)&#58; +<br/>bitwise and&#58; and<br/>bitwise xor~or&#58; or<br/>bitwise not&#58; not<br/><br/>*Concatinating&#58;<br/>Math&#58; 5+4 ===&gt; 9<br/>Math&#58; 5+5+5+5 ===&gt; 20<br/>Math&#58; 5+&quot;5&quot; ===&gt; ERROR!<br/>Math&#58; 5+&quot;Mama&quot; ===&gt; ERROR!<br/>Math&#58; &quot;Mama&quot;+&quot;Mia&quot; ===&gt; ERROR!<br/>~VS~<br/>Concatinating&#58; &quot;5&quot;+&quot;4&quot; ===&gt; &quot;54&quot;<br/>Concatinating&#58; &quot;5&quot;+&quot;5&quot;+&quot;5&quot;+&quot;5&quot; ===&gt; &quot;5555&quot;<br/>Concatinating&#58; &quot;5&quot;+&quot;Mia&quot; ===&gt; &quot;5Mia&quot;<br/>Concatinating&#58; &quot;Mama&quot;+&quot;Mia&quot; ===&gt; &quot;MamaMia&quot;<br/>Concatinating&#58; &quot;Mama&quot;+&quot;&quot;+&quot;Mia&quot; ====&gt; &quot;Mama Mia&quot;</code></pre><br/><br/>examples:<br/><br/><pre><code>if (Object_name&#46;Attribute_name OPERATOR Value_or_Expression) {<br/>  // whatever scripting<br/>}<br/>else if (Object_name&#46;Attribute_name OPERATOR Value_or_Expression) {<br/>  // whatever scripting<br/>}<br/>// etc 'else ifs' if you want~need more<br/>else {<br/>  // whatever scripting<br/>}<br/><br/>if (orc&#46;dead = true) {<br/>  msg (&quot;The orc is already dead, silly&#46;&quot;)<br/>} else if (orc&#46;dead = false) {<br/>  msg (&quot;You attack and kill the orc&#46;&quot;)<br/>  orc&#46;dead = true<br/>}<br/><br/>if (player&#46;condition = &quot;poisoned&quot;) {<br/>  player&#46;life = player&#46;life - 50<br/>  msg (&quot;The poison damages you for 50 hp&#46;&quot;)<br/>} else if (player&#46;condition = &quot;paralyzed&quot;) {<br/>  msg (&quot;You are paralyzed, unable to move, nor able to do anything&#46;&quot;)<br/>} else if (player&#46;condition = &quot;dead&quot;) {<br/>  msg (&quot;You were killed or died&#46;&quot;)<br/>  msg (&quot;GAME OVER&quot;)<br/>  finish<br/>}<br/><br/>if (player&#46;strength_integer &gt; 100) {<br/>  player&#46;strength_integer = 100<br/>} else if (player&#46;strength_integer &lt; 0) {<br/>  player&#46;strength_integer = 0<br/>}<br/>if (player&#46;strength_integer &gt;= 67) {<br/>  player&#46;strength_string = &quot;strong&quot;<br/>} else if (player&#46;strength_integer &lt; 67 and player&#46;strength_integer &gt; 33) {<br/>  player&#46;strength_string = &quot;average&quot;<br/>} else if (player&#46;strength_integer &lt;= 33) {<br/>  player&#46;strength_string = &quot;weak&quot;<br/>}<br/><br/>if (not npc_1&#46;parent = player&#46;parent) {<br/>  msg (&quot;Npc_1 follows along with you&#46;&quot;)<br/>  npc_1&#46;parent = player&#46;parent<br/>}</code></pre><br/><br/>3. Attributes (data~properties~traits~characteristics): <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/\">http://docs.textadventures.co.uk/quest/types/</a><!-- m --><br/><br/>Attributes are hard to describe, as they behave as a combination of both being 'physical things' and 'scriptings'<br/><br/>in the GUI~Editor (before the game begins):<br/><br/>'whatever' Element -&gt; 'whatever' or the 'Attributes' Tab -&gt; the options~settings (Attributes) || or Attributes -&gt; Add -&gt; (set them up)<br/><br/>in code (during the game: set~create, re-set, add~remove, and change~alter~adjust) examples:<br/><br/>Object_name.Attribute_name = Value_or_Expression<br/><br/>Attribute Types:<br/><br/>String Attributes: a collection of symbols (alphabet, numbers, and some of the other symbols too):<br/><br/><pre><code>a<br/>aaa<br/>1<br/>1234<br/>a1a1<br/>ifdsifhsdlkfhsdklf<br/>dead<br/>dead_boolean_attribute</code></pre><br/><br/>(the Value must be encased in~by double quotes, or the textual parts within an Expression must be too)<br/><br/>player.condition = &quot;poisoned&quot;<br/>player.alias = &quot;HK&quot;<br/>player.strength_integer_as_a_string = &quot;100&quot;<br/><br/>game.greeting = &quot;Hi, &quot; + player.alias + &quot; welcome to this game, have fun, but try not to die, as if you die in the game, then you die in real life, muwahaha! Good Luck! You'll need it...&quot;<br/><br/>Object Attributes:<br/><br/>the Value must *NOT* have double quotes, it can't be the special~reserved (a Boolean Attribute's Values) 'true' nor 'false', and it must be an actual-existing Object in the game!<br/><br/><pre><code>player&#46;parent = room<br/>player&#46;left_hand = shield<br/>player&#46;right_hand = sword<br/><br/>&lt;object name=&quot;player&quot;&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;room&quot;&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;shield&quot;&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;sword&quot;&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>Boolean Attributes: literally as 'true' or 'false'<br/><br/>NO double quotes!<br/><br/>// the orc starts out alive (duh, lol):<br/>orc.dead = false<br/><br/>// you kill the orc:<br/>orc.dead = true<br/><br/>example of a built-in Boolean Attribute:<br/>tv.switchedon=false // or (too lazy to look it up): tv.SwitchedOn=false<br/>tv.switchedon=true // or (too lazy to look it up): tv.SwitchedOn=true<br/><br/>Integer Attributes: any non-decimal number<br/><br/>player.strength_integer = 100<br/>game.event_flag_state = 0<br/>player.strength_integer = player.strength_integer + 3<br/><br/>Double (Float~Floating Point) Attribute: any decimal number<br/><br/>player.damage_double = 45.2 // or: &quot;45.2&quot;, as I've never used Doubles, so I don't know if it needs the double quotes or not.<br/><br/>List (Stringlists and Objectlists) Attributes: these are a bit more advanced, so not getting into them<br/><br/>Dictionary (Stringdictionaries, Objectdictionaries, and Scriptdictionaries) Attributes: these are even more advanced, so not getting into them<br/><br/>etc Attribute Types: too tired to get into them<br/><br/>-----------------<br/><br/>anyways, finally about your question, conceptually about Attribute usage:<br/><br/>you're used to using and thinking in terms of Object (physical thing) usage, but these are very unweildy, such as:<br/><br/>imagine having actual individual 'silver and gold coins' Objects for your currency~transactions, the sheer quantity of them + having to move them around .. YUCK !!!!<br/><br/>INSTEAD, you want to use Attributes!<br/><br/>Your Objects have Attributes, which you can simply adjust, no moving of actual physical things around, nor in having those physical things. Attributes are awesome! see below, using the currency~transactions example (in code):<br/><br/>we're only moving the 'sword' Object around, no 'gold coins' and 'silver coins' extra Objects being moved around<br/><br/>shop_owner.cash = 500<br/>player.cash = 100<br/>sword.price = 50<br/><br/>Buying:<br/><br/>sword.parent = shop_owner<br/><br/>player.cash = player.cash - sword.price<br/>shop_owner.cash = shop_owner.cash + sword.price<br/>sword.parent = player<br/><br/>Selling:<br/><br/>sword.parent = player<br/><br/>player.cash = player.cash + (sword.price / 2)<br/>shop_owner.cash = shop_owner.cash - (sword.price / 2)<br/>sword.parent = shop_owner<br/><br/>*note: this should require 'if' scripting to check if you have enough 'cash' to buy the sword and the shop owner to buy the sword, of course, which I've left out, obviously.<br/><br/>----------<br/><br/>finally for your question specifically:<br/><br/>I would have your 'security' be an Integer Attribute on your 'player' Player Object, by creating~setting it to zero in the GUI~Editor:<br/><br/>'player' Player Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)<br/><br/>(Object Name: player)<br/>Attribute Name: security<br/>Attribute Type: int (integer)<br/>Attribute Value: 0<br/><br/>in code as scripting: player.security = 0<br/><br/>in code as creation tag:<br/><br/><pre><code>&lt;object name=&quot;player&quot;&gt;<br/>  // blah code lines<br/>  &lt;attr name=&quot;security&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/>  // blah code lines<br/>&lt;/object&gt;</code></pre><br/><br/>anyways, conceptually what we're doing is 'flag stating', which probably makes more sense in the examples below:<br/><br/>player.security = 0 ~~~~~ you don't have any security clearance, no pretend security card<br/>player.security = 1+ ~~~~~ you have higher levels of security clearance<br/><br/>let's say you 'push' Verb on a 'machine button' Object, which in its scripting, gives you: player.security = 1<br/><br/>than on a 'computer' Object, there's a 'hack' Verb, which if successful (using 'if' scripting), each time but increasing harder, increases your security by 1:<br/>player.security = player.security + 1<br/><br/>and lastly, you got 'teleporter door' that are 'Locked' Objects~Exits that require levels of security clearance, example in pseudo-code:<br/><br/>if (player.security=0) {<br/>-&gt; msg (&quot;You don't ahve clearance.&quot;)<br/>} else if (player.security=1) {<br/>-&gt; msg (&quot;You get into, are moved to, noobie areas~rooms of the game.&quot;)<br/>} else if (player.security=2) {<br/>-&gt; msg (&quot;You get into, are moved to, intermediate areas~rooms of the game.&quot;)<br/>} else if (player.security=3) {<br/>-&gt; msg (&quot;You get into, are moved to, hard areas~rooms of the game.&quot;)<br/>} else if (player.security=4) {<br/>-&gt; msg (&quot;You get into, are moved to, the last area~room of the game.&quot;)<br/>",
      "PostDate": "2015-10-13T06:27:24+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38431",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "and here's a link to using STATUS ATTRIBUTES:\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=5387&amp;p=37393&amp;hilit=statusattributes#p37375\">viewtopic.php?f=10&amp;t=5387&amp;p=37393&amp;hilit=statusattributes#p37375</a><!-- l -->\n\n(link includes a full sample game for you to use~study)",
      "EditableFormat": "bbcode",
      "HTML": "and here's a link to using STATUS ATTRIBUTES:<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=5387&amp;p=37393&amp;hilit=statusattributes#p37375\">viewtopic.php?f=10&amp;t=5387&amp;p=37393&amp;hilit=statusattributes#p37375</a><!-- l --><br/><br/>(link includes a full sample game for you to use~study)",
      "PostDate": "2015-10-25T04:24:13+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39951",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "the secret trick of writing msg expressions (text+VARIABLES):\n\nbreak it up into chunks\n\nthere's two types of chunks:\n\n1. &quot;text&quot;\n2. +VARIABLES+\n\nfor example:\n\nHK is a 18 year old adult male human warrior.\n\nplayer.alias = &quot;HK&quot;\nplayer.age_integer = 18 // I wish I was 18, lol\nplayer.age_string = &quot;adult&quot;\nplayer.sex = &quot;male&quot;\nplayer.race = &quot;human&quot;\nplayer.class = &quot;warrior&quot;\n\nmsg (player.alias + &quot; is a &quot; + player.age_integer + &quot; year old &quot; + player.age_string + &quot; &quot; + player.sex + &quot; &quot; + player.race + &quot; &quot; + player.class + &quot;.&quot;)\n\nthe chunks: 12\n\n01) player.alias +\n02) &quot; is a &quot;\n03) + player.age_integer +\n04) &quot; year old &quot;\n05) + player.age_string +\n06) &quot; &quot;\n07) + player.sex +\n08) &quot; &quot;\n09) + player.race +\n10) &quot; &quot;\n11) + player.class +\n12) &quot;.&quot;\n\n--------------------------\n\nsee if you can understand this, and then apply it to the string in your post\n\nthe backslash ( \\ ) is called an 'escape' character, it allows you to display characters that you normally wouldn't be able to display (and it does other things too, like a newline, tab, etc --- not sure what quest has programmed into it though). So, \\&quot;, causes the double quote to be displayed. The backslash~escape character is always on the left side and the character that goes with it is on its right side.\n\nbut, if you can't figure it out:\n\n[code:sq5l5bca]the chunks&#58;\n\n&quot;You say \\&quot;&quot; // Outputs&#58; You say &quot;\n+ text + // Outputs (example)&#58; hello // You say &quot;hello\n&quot;,\\&quot; but nobody replies&#46;&quot; // Outputs&#58; ,&quot; but nobody replies&#46; // You say &quot;hello,&quot; but nobody replies&#46;\n\n&quot;You say \\&quot;&quot; + text + &quot;,\\&quot; but nobody replies&#46;&quot;\n// outputs&#58; You say &quot;hello,&quot; but nobody replies&#46;[/code:sq5l5bca]",
      "EditableFormat": "bbcode",
      "HTML": "the secret trick of writing msg expressions (text+VARIABLES):<br/><br/>break it up into chunks<br/><br/>there's two types of chunks:<br/><br/>1. &quot;text&quot;<br/>2. +VARIABLES+<br/><br/>for example:<br/><br/>HK is a 18 year old adult male human warrior.<br/><br/>player.alias = &quot;HK&quot;<br/>player.age_integer = 18 // I wish I was 18, lol<br/>player.age_string = &quot;adult&quot;<br/>player.sex = &quot;male&quot;<br/>player.race = &quot;human&quot;<br/>player.class = &quot;warrior&quot;<br/><br/>msg (player.alias + &quot; is a &quot; + player.age_integer + &quot; year old &quot; + player.age_string + &quot; &quot; + player.sex + &quot; &quot; + player.race + &quot; &quot; + player.class + &quot;.&quot;)<br/><br/>the chunks: 12<br/><br/>01) player.alias +<br/>02) &quot; is a &quot;<br/>03) + player.age_integer +<br/>04) &quot; year old &quot;<br/>05) + player.age_string +<br/>06) &quot; &quot;<br/>07) + player.sex +<br/>08) &quot; &quot;<br/>09) + player.race +<br/>10) &quot; &quot;<br/>11) + player.class +<br/>12) &quot;.&quot;<br/><br/>--------------------------<br/><br/>see if you can understand this, and then apply it to the string in your post<br/><br/>the backslash ( \\ ) is called an 'escape' character, it allows you to display characters that you normally wouldn't be able to display (and it does other things too, like a newline, tab, etc --- not sure what quest has programmed into it though). So, \\&quot;, causes the double quote to be displayed. The backslash~escape character is always on the left side and the character that goes with it is on its right side.<br/><br/>but, if you can't figure it out:<br/><br/><pre><code>the chunks&#58;<br/><br/>&quot;You say \\&quot;&quot; // Outputs&#58; You say &quot;<br/>+ text + // Outputs (example)&#58; hello // You say &quot;hello<br/>&quot;,\\&quot; but nobody replies&#46;&quot; // Outputs&#58; ,&quot; but nobody replies&#46; // You say &quot;hello,&quot; but nobody replies&#46;<br/><br/>&quot;You say \\&quot;&quot; + text + &quot;,\\&quot; but nobody replies&#46;&quot;<br/>// outputs&#58; You say &quot;hello,&quot; but nobody replies&#46;</code></pre>",
      "PostDate": "2015-12-23T16:49:49+00:00",
      "LastEditDate": null
    }
  ]
}
