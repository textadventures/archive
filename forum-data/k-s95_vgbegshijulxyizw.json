{
  "Topic": {
    "TopicId": "k-s95_vgbegshijulxyizw",
    "ForumId": "10",
    "Title": "How to change an attribute's value in-game?",
    "LastUpdated": "2017-07-26T17:40:05.9949904Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "7f43865b-cfdb-4cd0-8ecc-7e87c42f809f",
      "UserId": 317482,
      "Username": "Arkantos",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Beginner to using Quest here. The tutorial has been really helpful for getting me started, but would hint at being able to do something without actually telling me how.\r\n\r\nFor example, it teaches you how to add the \"weight\" attribute to an object, so that you can use some flour to bake a cake or whatever. That's all fine and dandy. But I have the \"weight\" attribute set up for the flour, and can't change it in the game. I want to use up only *some* of the flour when I pour it. How would I change the value of the \"weight\" attribute by pouring it? How would you set up that script?\r\n\r\nI plan on having combat in my game, which means I'll be using Hit Points (like any proper rpg should), and I need to know how to change a character's HP after getting attacked. The fact that the tutorial left this information out is actually kind of shocking.",
      "EditableFormat": "markdown",
      "HTML": "<p>Beginner to using Quest here. The tutorial has been really helpful for getting me started, but would hint at being able to do something without actually telling me how.</p>\n<p>For example, it teaches you how to add the \"weight\" attribute to an object, so that you can use some flour to bake a cake or whatever. That's all fine and dandy. But I have the \"weight\" attribute set up for the flour, and can't change it in the game. I want to use up only <em>some</em> of the flour when I pour it. How would I change the value of the \"weight\" attribute by pouring it? How would you set up that script?</p>\n<p>I plan on having combat in my game, which means I'll be using Hit Points (like any proper rpg should), and I need to know how to change a character's HP after getting attacked. The fact that the tutorial left this information out is actually kind of shocking.</p>\n\n",
      "PostDate": "2017-07-26T17:40:05.9949904Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0e4bea7e-893c-4b51-b648-771c2870831e",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "### If you already have the attribute ```weight``` set to an integer on the object named ```flour```:\r\n\r\n---\r\n\r\nTo increase the weight by 1, you can use:\r\n\r\n```flour.weight = flour.weight + 1```\r\n\r\n---\r\nTo increase the weight by 50, you can use:\r\n\r\n```flour.weight = flour.weight +50```\r\n\r\n---\r\nTo decrease the weight by 1:\r\n\r\n```flour.weight = flour.weight - 1```\r\n\r\n--\r\nTo decrease by 42:\r\n```flour.weight = flour.weight - 42```",
      "EditableFormat": "markdown",
      "HTML": "<h3>If you already have the attribute <code>weight</code> set to an integer on the object named <code>flour</code>:</h3>\n<hr>\n<p>To increase the weight by 1, you can use:</p>\n<p><code>flour.weight = flour.weight + 1</code></p>\n<hr>\n<p>To increase the weight by 50, you can use:</p>\n<p><code>flour.weight = flour.weight +50</code></p>\n<hr>\n<p>To decrease the weight by 1:</p>\n<p><code>flour.weight = flour.weight - 1</code></p>\n<p>--<br>\nTo decrease by 42:<br>\n<code>flour.weight = flour.weight - 42</code></p>\n\n",
      "PostDate": "2017-07-26T18:04:40.872834Z",
      "LastEditDate": "2017-07-26T18:08:25.4084636Z",
      "link": null
    },
    {
      "PostId": "d4bdbbab-c9fb-4b86-942f-ea638354531a",
      "UserId": 317482,
      "Username": "Arkantos",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay, here's what I tried:\r\n\r\nI made a \"pour\" verb for the \"flour\" object. For the expression, I put **\"It empties until there's only \" + flour.weight = flour.weight - 2 + \" grams remaining.\"**\r\nI figured that would subtract 2 from the \"weight\" attribute, but whenever I try the command, I just get the error message \"FALSE\".\r\n\r\nWhat am I doing wrong here? Am I way off?",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay, here's what I tried:</p>\n<p>I made a \"pour\" verb for the \"flour\" object. For the expression, I put <strong>\"It empties until there's only \" + flour.weight = flour.weight - 2 + \" grams remaining.\"</strong><br>\nI figured that would subtract 2 from the \"weight\" attribute, but whenever I try the command, I just get the error message \"FALSE\".</p>\n<p>What am I doing wrong here? Am I way off?</p>\n\n",
      "PostDate": "2017-07-26T19:29:47.686106Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "420f510c-f7f0-482b-b0d9-905efaca47a4",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have a guide (it's a bit technical and more focused on code, but I do show how to do it in the GUI/Editor too), specifically scroll down to the 'Two Super Scripts' section of it (but you might want to read from the top down, as I try to give you an understanding of quest and of its coding and of coding in general to help you out with understanding this stuff better):\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5559/attributes-and-if-script-guide-by-hk\r\n\r\nalso, here is a step by step walkthrough guide in creating your own little demo game, on the basics of Attribute usage:\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/5387/i-really-need-help#37375\r\n\r\n(though it doesn't get into using the 'if' Script too much)\r\n\r\n-----------\r\n\r\nAbout your topic (this is covered in more detail in my top of post guide link):\r\n\r\nbasically, it's about using the 'two super scripts', which are:\r\n\r\n1. the 'Attribute' Script (creating/setting/re-setting/changing/altering/manipulating/etc):\r\n\r\nrun as script -> add new script -> 'variables' section/category -> 'set a variable or attribute' Script -> (see below, an example)\r\n\r\n(I like 'cheating' via using the '[EXPRESSION]' script option, as I don't know the GUI/Editor script options that well, lol)\r\n\r\ngeneral syntax:\r\n\r\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION\r\n\r\n(replace my all capitolized stuff with what you are actually using or want to use, your naming of this stuff, in your game)\r\n\r\nexample:\r\n\r\nset variable player.strength = [EXPRESSION] 100 // this creates this 'strength' Integer Attribute on the 'player' Player Object if it doesn't already exists. If it does already exist, then it is setting/re-setting the Value to now being '100'\r\n\r\n// and we can set/re-set it/change/manipulate/adjust it yet again:\r\nset variable player.strength = [EXPRESSION] 50\r\n\r\nthese are just a direct change/setting/re-setting of the Value\r\n\r\n-------------\r\n\r\nnow what about adjusting its (new) Value based upon its (old) Value (aka: arithmetic operations: addition, subtraction, multiplication, division) ???\r\n\r\nwe do it like this, an example (increasing it via addition operation and the incrementing value of 5):\r\n\r\n// initial value/setting: set variable player.strength = [EXPRESSION] 0\r\n\r\nset variable player.strength = [EXPRESSION] player.strength + 5\r\n\r\n// new value/setting: player.strength = 5\r\n// if done again:\r\n// new value/setting: player.strength = 10\r\n// new value/setting: player.strength = 15\r\n// etc etc etc\r\n\r\nconceptually how it works:\r\n\r\n// initial/old value: player.strength = 0\r\n\r\nplayer.strength = player.strength + 5\r\n// player.strength (NEW) = player.strength (OLD: 0) + 5\r\n// player.strength (NEW) = (0) + 5 = 5\r\n\r\n// new value: player.strength = 5\r\n\r\n----\r\n\r\n// old value: player.strength = 5\r\n\r\nplayer.strength = player.strength + 5\r\n// player.strength (NEW) = player.strength (OLD: 5) + 5\r\n// player.strength (NEW) = (5) + 5 = 10\r\n\r\n// new value: player.strength = 10\r\n\r\n---\r\n\r\n// old value: player.strength = 10\r\n\r\nplayer.strength = player.strength + 5\r\n// player.strength (NEW) = player.strength (OLD: 10) + 5\r\n// player.strength (NEW) = (10) + 5 = 15\r\n\r\n// new value: player.strength = 15\r\n\r\nyou get the idea...\r\n\r\n---------\r\n\r\nAddition:\r\n\r\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] NAME_OF_OBJECT.NAME_OF_ATTRIBUTE + VALUE_OR_EXPRESSION\r\n\r\nSubtraction:\r\n\r\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] NAME_OF_OBJECT.NAME_OF_ATTRIBUTE - VALUE_OR_EXPRESSION\r\n\r\nMultiplication:\r\n\r\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] NAME_OF_OBJECT.NAME_OF_ATTRIBUTE * VALUE_OR_EXPRESSION\r\n\r\nDivision:\r\n\r\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] NAME_OF_OBJECT.NAME_OF_ATTRIBUTE / VALUE_OR_EXPRESSION\r\n\r\n-------------\r\n\r\nyou can do more complex stuff too:\r\n\r\nset variable player.damage = [EXPRESSION] player.damage + (player.damage * player.strength / 100)\r\n\r\nset variable player.maximum_life = [EXPRESSION] ((player.strength + player.endurance) / 2) * 5",
      "EditableFormat": "markdown",
      "HTML": "<p>I have a guide (it's a bit technical and more focused on code, but I do show how to do it in the GUI/Editor too), specifically scroll down to the 'Two Super Scripts' section of it (but you might want to read from the top down, as I try to give you an understanding of quest and of its coding and of coding in general to help you out with understanding this stuff better):</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5559/attributes-and-if-script-guide-by-hk</p>\n<p>also, here is a step by step walkthrough guide in creating your own little demo game, on the basics of Attribute usage:</p>\n<p>http://textadventures.co.uk/forum/quest/topic/5387/i-really-need-help#37375</p>\n<p>(though it doesn't get into using the 'if' Script too much)</p>\n<hr>\n<p>About your topic (this is covered in more detail in my top of post guide link):</p>\n<p>basically, it's about using the 'two super scripts', which are:</p>\n<ol>\n<li>the 'Attribute' Script (creating/setting/re-setting/changing/altering/manipulating/etc):</li>\n</ol>\n<p>run as script -&gt; add new script -&gt; 'variables' section/category -&gt; 'set a variable or attribute' Script -&gt; (see below, an example)</p>\n<p>(I like 'cheating' via using the '[EXPRESSION]' script option, as I don't know the GUI/Editor script options that well, lol)</p>\n<p>general syntax:</p>\n<p>set variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION</p>\n<p>(replace my all capitolized stuff with what you are actually using or want to use, your naming of this stuff, in your game)</p>\n<p>example:</p>\n<p>set variable player.strength = [EXPRESSION] 100 // this creates this 'strength' Integer Attribute on the 'player' Player Object if it doesn't already exists. If it does already exist, then it is setting/re-setting the Value to now being '100'</p>\n<p>// and we can set/re-set it/change/manipulate/adjust it yet again:<br>\nset variable player.strength = [EXPRESSION] 50</p>\n<p>these are just a direct change/setting/re-setting of the Value</p>\n<hr>\n<p>now what about adjusting its (new) Value based upon its (old) Value (aka: arithmetic operations: addition, subtraction, multiplication, division) ???</p>\n<p>we do it like this, an example (increasing it via addition operation and the incrementing value of 5):</p>\n<p>// initial value/setting: set variable player.strength = [EXPRESSION] 0</p>\n<p>set variable player.strength = [EXPRESSION] player.strength + 5</p>\n<p>// new value/setting: player.strength = 5<br>\n// if done again:<br>\n// new value/setting: player.strength = 10<br>\n// new value/setting: player.strength = 15<br>\n// etc etc etc</p>\n<p>conceptually how it works:</p>\n<p>// initial/old value: player.strength = 0</p>\n<p>player.strength = player.strength + 5<br>\n// player.strength (NEW) = player.strength (OLD: 0) + 5<br>\n// player.strength (NEW) = (0) + 5 = 5</p>\n<p>// new value: player.strength = 5</p>\n<hr>\n<p>// old value: player.strength = 5</p>\n<p>player.strength = player.strength + 5<br>\n// player.strength (NEW) = player.strength (OLD: 5) + 5<br>\n// player.strength (NEW) = (5) + 5 = 10</p>\n<p>// new value: player.strength = 10</p>\n<hr>\n<p>// old value: player.strength = 10</p>\n<p>player.strength = player.strength + 5<br>\n// player.strength (NEW) = player.strength (OLD: 10) + 5<br>\n// player.strength (NEW) = (10) + 5 = 15</p>\n<p>// new value: player.strength = 15</p>\n<p>you get the idea...</p>\n<hr>\n<p>Addition:</p>\n<p>set variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] NAME_OF_OBJECT.NAME_OF_ATTRIBUTE + VALUE_OR_EXPRESSION</p>\n<p>Subtraction:</p>\n<p>set variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] NAME_OF_OBJECT.NAME_OF_ATTRIBUTE - VALUE_OR_EXPRESSION</p>\n<p>Multiplication:</p>\n<p>set variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] NAME_OF_OBJECT.NAME_OF_ATTRIBUTE * VALUE_OR_EXPRESSION</p>\n<p>Division:</p>\n<p>set variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] NAME_OF_OBJECT.NAME_OF_ATTRIBUTE / VALUE_OR_EXPRESSION</p>\n<hr>\n<p>you can do more complex stuff too:</p>\n<p>set variable player.damage = [EXPRESSION] player.damage + (player.damage * player.strength / 100)</p>\n<p>set variable player.maximum_life = [EXPRESSION] ((player.strength + player.endurance) / 2) * 5</p>\n\n",
      "PostDate": "2017-07-26T19:33:59.5653062Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3f0f8380-0ce2-419a-80ff-6b44588891f1",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\"Okay, here's what I tried:\r\n\r\nI made a \"pour\" verb for the \"flour\" object. For the expression, I put \"It empties until there's only \" + flour.weight = flour.weight - 2 + \" grams remaining.\"\r\nI figured that would subtract 2 from the \"weight\" attribute, but whenever I try the command, I just get the error message \"FALSE\".\r\n\r\nWhat am I doing wrong here? Am I way off? (Arkantos)\"\r\n\r\n-----------------------------\r\n\r\n'flour' Object -> 'Attributes' Tab -> Attributes -> Add -> (see below)\r\n\r\n(Object Name: flour)\r\nAttribute Name: weight\r\nAttribute Type: int // (integer)\r\nAttribute Value: 0\r\n\r\nin code scripting, doing this is the same as the above: flour.weight = 0\r\n\r\nin GUI/Editor's 'set a variable or attribute' Script's syntax (aka, scripting), it is the same as the above too: set variable flour.weight = [EXPRESSION] 0\r\n\r\n'flour' Object -> 'Verbs' Tab -> Add -> Name: pour -> (see below)\r\n\r\nadd new script -> set variable flour.weight = [EXPRESSION] flour.weight - 2\r\n\r\nadd new script -> print a message -> (see below)\r\n\r\nprint [EXPRESSION] \"You reduced the \" + this.name + \"'s weight by 2, so, now you only have \" + this.weight + \" weight of \" + this.name + \".\"\r\n\r\n// output: You reduced the flour's weight by 2, so, now you only have [new: flour.weight Value]  weight of flour.\r\n//\r\n// if your initial value was: flour.weight = 10\r\n// new value: flour.weight = 8\r\n// output:\r\n// You reduced the flour's weight by 2, so, now you only have 8 weight of flour.\r\n\r\n--------------\r\n\r\nhere's an example using combat, which hopefully should help you a lot with understanding this type of stuff:\r\n\r\n(the 'this' is a special key-word/key-command, which GETS the reference/pointer of the parent Object of the scripting)\r\n\r\n```\r\n<object name=\"room\">\r\n\r\n  <inherit name=\"editor_room\" />\r\n\r\n</object>\r\n\r\n<object name=\"player\">\r\n\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n\r\n  <attr name=\"parent\" type=\"object\">room</attr> // the built-in 'parent' Object reference/pointer Attribute is what actually controls/determines the location (containment/parent-child heirarchy) of Objects in your game // this is saying that the 'player' Player Object is contained within the 'room' Room Object\r\n\r\n  <attr name=\"current_life\" type=\"int\">999</attr>\r\n  <attr name=\"damage\" type=\"int\">100</attr>\r\n  <attr name=\"current_experience\" type=\"int\">0</attr>\r\n  <attr name=\"current_currency\" type=\"int\">0</attr>\r\n\r\n</object>\r\n\r\n<object name=\"orc\">\r\n\r\n  <attr name=\"parent\" type=\"object\">room</attr> // the built-in 'parent' Object reference/pointer Attribute is what actually controls/determines the location (containment/parent-child heirarchy) of Objects in your game // this is saying that the 'orc' Object is contained within the 'room' Room Object\r\n\r\n  <attr name=\"current_life\" type=\"int\">500</attr>\r\n  <attr name=\"damage\" type=\"int\">50</attr>\r\n  <attr name=\"dead\" type=\"boolean\">false</attr>\r\n  <attr name=\"experience\" type=\"int\">50</attr>\r\n  <attr name=\"currency\" type=\"int\">25</attr>\r\n\r\n  // this is our 'fight' Verb (yes, Verbs are just a Script Attribute with some additional coding, see the '<verb></verb>' further below, to make it functionally into a Verb):\r\n\r\n  <attr name=\"fight\" type=\"script\">\r\n    <![CDATA[\r\n      if (this.dead) { // if orc is dead\r\n        firsttime {\r\n          player.current_experience = player.current_experience + this.experience\r\n          player.current_currency = player.current_currency + this.experience\r\n          msg (\"You loot the dead orc's corpse, gaining +\" + this.experience + \" experience, and +\" + this.currency + \" currency, and so you now have: \" + player.current_currency + \" currency and \" + player.current_experience + \" experience.\"\r\n        } otherwise {\r\n          msg (\"You've already looted the dead orc's corpse, silly.\")\r\n        }\r\n      } else { // if orc is alive\r\n        // you go first, and attack/damage the orc:\r\n        this.current_life = this.current_life - player.damage\r\n        msg (\"You attack the \" + this.name + \" for \" + player.damage + \" damage\")\r\n        if (this.current_life < 1) { // if orc is killed\r\n          this.dead = true // setting the orc as actually being dead\r\n          msg (\"You killed the \" + this.name + \"!\")\r\n        } else { // if you didn't kill the orc\r\n          msg (\"The \" + this.name + \" still has \" + this.current_life + \" life remaining.\")\r\n          // the orc now gets it's combat turn, attacking/damaging you:\r\n          player.current_life = player.current_life - this.damage\r\n          msg (\"The \" + this.name + \" attacks you for \" + this.damage + \" damage\")\r\n          if (player.current_life < 1) { // if you were killed\r\n            msg (\"You were killed by the \" + this.name + \".\")\r\n            msg (\"GAME OVER\")\r\n            finish\r\n          } else { // if you were not killed\r\n            msg (\"You still have \" + player.current_life + \" life remaining.\")\r\n            do (this, \"fight\") // the combat round is over, and so we do another combat round (looping: doing/calling/invoking the 'orc.fight' Script Attribute / Verb again), this will continue, until one of you is dead\r\n          }\r\n        }\r\n      }\r\n    ]]>\r\n  </attr>\r\n\r\n</object>\r\n\r\n<verb>\r\n\r\n  <property>fight</property>\r\n  <pattern>fight</pattern>\r\n  <defaultexpression>You can't fight that!</defaultexpression>\r\n\r\n</verb>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>\"Okay, here's what I tried:</p>\n<p>I made a \"pour\" verb for the \"flour\" object. For the expression, I put \"It empties until there's only \" + flour.weight = flour.weight - 2 + \" grams remaining.\"<br>\nI figured that would subtract 2 from the \"weight\" attribute, but whenever I try the command, I just get the error message \"FALSE\".</p>\n<p>What am I doing wrong here? Am I way off? (Arkantos)\"</p>\n<hr>\n<p>'flour' Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)</p>\n<p>(Object Name: flour)<br>\nAttribute Name: weight<br>\nAttribute Type: int // (integer)<br>\nAttribute Value: 0</p>\n<p>in code scripting, doing this is the same as the above: flour.weight = 0</p>\n<p>in GUI/Editor's 'set a variable or attribute' Script's syntax (aka, scripting), it is the same as the above too: set variable flour.weight = [EXPRESSION] 0</p>\n<p>'flour' Object -&gt; 'Verbs' Tab -&gt; Add -&gt; Name: pour -&gt; (see below)</p>\n<p>add new script -&gt; set variable flour.weight = [EXPRESSION] flour.weight - 2</p>\n<p>add new script -&gt; print a message -&gt; (see below)</p>\n<p>print [EXPRESSION] \"You reduced the \" + this.name + \"'s weight by 2, so, now you only have \" + this.weight + \" weight of \" + this.name + \".\"</p>\n<p>// output: You reduced the flour's weight by 2, so, now you only have [new: flour.weight Value]  weight of flour.<br>\n//<br>\n// if your initial value was: flour.weight = 10<br>\n// new value: flour.weight = 8<br>\n// output:<br>\n// You reduced the flour's weight by 2, so, now you only have 8 weight of flour.</p>\n<hr>\n<p>here's an example using combat, which hopefully should help you a lot with understanding this type of stuff:</p>\n<p>(the 'this' is a special key-word/key-command, which GETS the reference/pointer of the parent Object of the scripting)</p>\n<pre><code>&lt;object name=\"room\"&gt;\n\n  &lt;inherit name=\"editor_room\" /&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt; // the built-in 'parent' Object reference/pointer Attribute is what actually controls/determines the location (containment/parent-child heirarchy) of Objects in your game // this is saying that the 'player' Player Object is contained within the 'room' Room Object\n\n  &lt;attr name=\"current_life\" type=\"int\"&gt;999&lt;/attr&gt;\n  &lt;attr name=\"damage\" type=\"int\"&gt;100&lt;/attr&gt;\n  &lt;attr name=\"current_experience\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"current_currency\" type=\"int\"&gt;0&lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"orc\"&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt; // the built-in 'parent' Object reference/pointer Attribute is what actually controls/determines the location (containment/parent-child heirarchy) of Objects in your game // this is saying that the 'orc' Object is contained within the 'room' Room Object\n\n  &lt;attr name=\"current_life\" type=\"int\"&gt;500&lt;/attr&gt;\n  &lt;attr name=\"damage\" type=\"int\"&gt;50&lt;/attr&gt;\n  &lt;attr name=\"dead\" type=\"boolean\"&gt;false&lt;/attr&gt;\n  &lt;attr name=\"experience\" type=\"int\"&gt;50&lt;/attr&gt;\n  &lt;attr name=\"currency\" type=\"int\"&gt;25&lt;/attr&gt;\n\n  // this is our 'fight' Verb (yes, Verbs are just a Script Attribute with some additional coding, see the '&lt;verb&gt;&lt;/verb&gt;' further below, to make it functionally into a Verb):\n\n  &lt;attr name=\"fight\" type=\"script\"&gt;\n    &lt;![CDATA[\n      if (this.dead) { // if orc is dead\n        firsttime {\n          player.current_experience = player.current_experience + this.experience\n          player.current_currency = player.current_currency + this.experience\n          msg (\"You loot the dead orc's corpse, gaining +\" + this.experience + \" experience, and +\" + this.currency + \" currency, and so you now have: \" + player.current_currency + \" currency and \" + player.current_experience + \" experience.\"\n        } otherwise {\n          msg (\"You've already looted the dead orc's corpse, silly.\")\n        }\n      } else { // if orc is alive\n        // you go first, and attack/damage the orc:\n        this.current_life = this.current_life - player.damage\n        msg (\"You attack the \" + this.name + \" for \" + player.damage + \" damage\")\n        if (this.current_life &lt; 1) { // if orc is killed\n          this.dead = true // setting the orc as actually being dead\n          msg (\"You killed the \" + this.name + \"!\")\n        } else { // if you didn't kill the orc\n          msg (\"The \" + this.name + \" still has \" + this.current_life + \" life remaining.\")\n          // the orc now gets it's combat turn, attacking/damaging you:\n          player.current_life = player.current_life - this.damage\n          msg (\"The \" + this.name + \" attacks you for \" + this.damage + \" damage\")\n          if (player.current_life &lt; 1) { // if you were killed\n            msg (\"You were killed by the \" + this.name + \".\")\n            msg (\"GAME OVER\")\n            finish\n          } else { // if you were not killed\n            msg (\"You still have \" + player.current_life + \" life remaining.\")\n            do (this, \"fight\") // the combat round is over, and so we do another combat round (looping: doing/calling/invoking the 'orc.fight' Script Attribute / Verb again), this will continue, until one of you is dead\n          }\n        }\n      }\n    ]]&gt;\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;verb&gt;\n\n  &lt;property&gt;fight&lt;/property&gt;\n  &lt;pattern&gt;fight&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't fight that!&lt;/defaultexpression&gt;\n\n&lt;/verb&gt;\n</code></pre>\n\n",
      "PostDate": "2017-07-26T19:45:09.5372592Z",
      "LastEditDate": "2017-07-26T20:19:56.337357Z",
      "link": null
    },
    {
      "PostId": "2f0619bf-87e4-412d-983c-d2fb653dcc34",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\"Okay, here's what I tried:\r\n\r\nI made a \"pour\" verb for the \"flour\" object. For the expression, I put \"It empties until there's only \" + flour.weight = flour.weight - 2 + \" grams remaining.\"\r\nI figured that would subtract 2 from the \"weight\" attribute, but whenever I try the command, I just get the error message \"FALSE\".\r\n\r\nWhat am I doing wrong here? Am I way off? (Arkantos)\"\r\n\r\n----------------\r\n\r\nif going by what (I think) you're describing exactly/precisely: \"It empties until there's only \" + flour.weight = flour.weight - 2 + \" grams remaining. (Arkantos)\", it's a bit more complex, see below (in-code example):\r\n\r\n(this is a bit pointless, unless you were to actually do something that matters with each iteration/loop (subtraction) of your flour scripting, as you can just directly set your flour's Value to being 2 less, instead of subtracting it down to being 2 less)\r\n\r\n```\r\n<object name=\"flour\">\r\n  <attr name=\"weight\" type=\"int\">\r\n  <attr name=\"pour\" type=\"script\">\r\n    <![CDATA[\r\n      target_weight_variable = this.weight - 2\r\n      msg (\"The \" + this.name + \" empties until there's only \" + target_weight_variable + \" grams of it remaining.\")\r\n      msg (\"You have \" + this.weight + \" grams of \" + this.name + \".\")\r\n      while (this.weight > target_weight_variable) {\r\n        this.weight = this.weight - 1\r\n        msg (\"You now have \" + this.weight + \" grams of \" + this.name + \".\")\r\n      }\r\n      msg (\"You now finally have \" + this.weight + \" grams of \" + this.name + \", which was/is your target weight of: \" + target_weight_variable + \" grams of \" + this.name + \".\")\r\n    ]]>\r\n  </attr>\r\n</object>\r\n\r\n<verb>\r\n  <property>pour</property>\r\n  <pattern>pour</pattern>\r\n  <defaultexpression>You can't pour that!</defaultexpression>\r\n</verb>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>\"Okay, here's what I tried:</p>\n<p>I made a \"pour\" verb for the \"flour\" object. For the expression, I put \"It empties until there's only \" + flour.weight = flour.weight - 2 + \" grams remaining.\"<br>\nI figured that would subtract 2 from the \"weight\" attribute, but whenever I try the command, I just get the error message \"FALSE\".</p>\n<p>What am I doing wrong here? Am I way off? (Arkantos)\"</p>\n<hr>\n<p>if going by what (I think) you're describing exactly/precisely: \"It empties until there's only \" + flour.weight = flour.weight - 2 + \" grams remaining. (Arkantos)\", it's a bit more complex, see below (in-code example):</p>\n<p>(this is a bit pointless, unless you were to actually do something that matters with each iteration/loop (subtraction) of your flour scripting, as you can just directly set your flour's Value to being 2 less, instead of subtracting it down to being 2 less)</p>\n<pre><code>&lt;object name=\"flour\"&gt;\n  &lt;attr name=\"weight\" type=\"int\"&gt;\n  &lt;attr name=\"pour\" type=\"script\"&gt;\n    &lt;![CDATA[\n      target_weight_variable = this.weight - 2\n      msg (\"The \" + this.name + \" empties until there's only \" + target_weight_variable + \" grams of it remaining.\")\n      msg (\"You have \" + this.weight + \" grams of \" + this.name + \".\")\n      while (this.weight &gt; target_weight_variable) {\n        this.weight = this.weight - 1\n        msg (\"You now have \" + this.weight + \" grams of \" + this.name + \".\")\n      }\n      msg (\"You now finally have \" + this.weight + \" grams of \" + this.name + \", which was/is your target weight of: \" + target_weight_variable + \" grams of \" + this.name + \".\")\n    ]]&gt;\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;pour&lt;/property&gt;\n  &lt;pattern&gt;pour&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't pour that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n</code></pre>\n\n",
      "PostDate": "2017-07-26T20:35:20.8849193Z",
      "LastEditDate": "2017-07-26T20:39:22.3991182Z",
      "link": null
    },
    {
      "PostId": "deda8065-b130-498d-b473-2110f4efdbdb",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello,\r\n\r\nIt needs to be on two separate lines.\r\n\r\nTry this script for that verb:\r\n\r\n```\r\nflour.weight = flour.weight - 2\r\nmsg (\"It empties until there's only \" + flour.weight + \" grams remaining.\")\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello,</p>\n<p>It needs to be on two separate lines.</p>\n<p>Try this script for that verb:</p>\n<pre><code>flour.weight = flour.weight - 2\nmsg (\"It empties until there's only \" + flour.weight + \" grams remaining.\")\n</code></pre>\n\n",
      "PostDate": "2017-07-26T20:42:06.1718792Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b4a64c54-ac35-4f3e-9dcd-0c51424b5082",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi,\r\nYou would also need a check on when the bag of flour is empty, otherwise you could end up with -2 grams remaining.\r\n\r\nIf flour.weight = 0 then msg (\"The bag of flour is empty\") else //[rest of pour script]\r\n\r\nPixie's tutorial 'Handling Water' details something similar to what you are trying\r\nhttp://docs.textadventures.co.uk/quest/handling_water.html\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi,<br>\nYou would also need a check on when the bag of flour is empty, otherwise you could end up with -2 grams remaining.</p>\n<p>If flour.weight = 0 then msg (\"The bag of flour is empty\") else //[rest of pour script]</p>\n<p>Pixie's tutorial 'Handling Water' details something similar to what you are trying<br>\nhttp://docs.textadventures.co.uk/quest/handling_water.html</p>\n\n",
      "PostDate": "2017-07-26T21:26:54.5151334Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ecd091f5-f1d4-440e-8590-f011693b7cea",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "thank you, Doctor Agon, I forgot about that check to handle, good catch!\r\n\r\n(though, if you want, you can work with negative values just fine as well, as I think quest is programmed to handle them well/correctly, but indeed, usually we don't work with negative numbers)\r\n\r\n------------------\r\n\r\nexamples of min/max checking:\r\n\r\n```\r\n// example min/max values:\r\n\r\n// NAME_OF_OBJECT.NAME_OF_MINIMUM_INTEGER/DOUBLE_ATTRIBUTE = 0\r\n// NAME_OF_OBJECT.NAME_OF_MAXIMUM_INTEGER/DOUBLE_ATTRIBUTE = 100\r\n\r\n// -----------------------------------------------\r\n\r\n// NAME_OF_OBJECT.NAME_OF_CURRENT_INTEGER/DOUBLE_ATTRIBUTE = [WHATEVER VALUE YOU WANT IT TO START AS]\r\n\r\n// ---------------------------------------------\r\n\r\n<![CDATA[\r\n  if (NAME_OF_OBJECT.NAME_OF_CURRENT_INTEGER/DOUBLE_ATTRIBUTE < NAME_OF_OBJECT.NAME_OF_MINIMUM_INTEGER/DOUBLE_ATTRIBUTE ) {\r\n    NAME_OF_OBJECT.NAME_OF_CURRENT_INTEGER/DOUBLE_ATTRIBUTE = NAME_OF_OBJECT.NAME_OF_MINIMUM_INTEGER/DOUBLE_ATTRIBUTE \r\n  } else if (NAME_OF_OBJECT.NAME_OF_CURRENT_INTEGER/DOUBLE_ATTRIBUTE > NAME_OF_OBJECT.NAME_OF_MAXIMUM_INTEGER/DOUBLE_ATTRIBUTE) {\r\n    NAME_OF_OBJECT.NAME_OF_CURRENT_INTEGER/DOUBLE_ATTRIBUTE = NAME_OF_OBJECT.NAME_OF_MAXIMUM_INTEGER/DOUBLE_ATTRIBUTE\r\n  }\r\n]]>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>thank you, Doctor Agon, I forgot about that check to handle, good catch!</p>\n<p>(though, if you want, you can work with negative values just fine as well, as I think quest is programmed to handle them well/correctly, but indeed, usually we don't work with negative numbers)</p>\n<hr>\n<p>examples of min/max checking:</p>\n<pre><code>// example min/max values:\n\n// NAME_OF_OBJECT.NAME_OF_MINIMUM_INTEGER/DOUBLE_ATTRIBUTE = 0\n// NAME_OF_OBJECT.NAME_OF_MAXIMUM_INTEGER/DOUBLE_ATTRIBUTE = 100\n\n// -----------------------------------------------\n\n// NAME_OF_OBJECT.NAME_OF_CURRENT_INTEGER/DOUBLE_ATTRIBUTE = [WHATEVER VALUE YOU WANT IT TO START AS]\n\n// ---------------------------------------------\n\n&lt;![CDATA[\n  if (NAME_OF_OBJECT.NAME_OF_CURRENT_INTEGER/DOUBLE_ATTRIBUTE &lt; NAME_OF_OBJECT.NAME_OF_MINIMUM_INTEGER/DOUBLE_ATTRIBUTE ) {\n    NAME_OF_OBJECT.NAME_OF_CURRENT_INTEGER/DOUBLE_ATTRIBUTE = NAME_OF_OBJECT.NAME_OF_MINIMUM_INTEGER/DOUBLE_ATTRIBUTE \n  } else if (NAME_OF_OBJECT.NAME_OF_CURRENT_INTEGER/DOUBLE_ATTRIBUTE &gt; NAME_OF_OBJECT.NAME_OF_MAXIMUM_INTEGER/DOUBLE_ATTRIBUTE) {\n    NAME_OF_OBJECT.NAME_OF_CURRENT_INTEGER/DOUBLE_ATTRIBUTE = NAME_OF_OBJECT.NAME_OF_MAXIMUM_INTEGER/DOUBLE_ATTRIBUTE\n  }\n]]&gt;\n</code></pre>\n\n",
      "PostDate": "2017-07-26T21:40:14.9527106Z",
      "LastEditDate": "2017-07-26T21:50:45.2535306Z",
      "link": null
    },
    {
      "PostId": "0fa53b86-0a24-47e3-ae83-dd0e8e4469ad",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Whoo-hoo!\r\n\r\nI just learned about min/max checking!\r\n\r\nHa! Now I can erase the 14 lines of code I wrote to keep the player from putting more than 6 bullets in the revolver!\r\n\r\n---\r\nYou know...\r\n\r\nI've never been to any other forum that provided answers before I even asked the question!",
      "EditableFormat": "markdown",
      "HTML": "<p>Whoo-hoo!</p>\n<p>I just learned about min/max checking!</p>\n<p>Ha! Now I can erase the 14 lines of code I wrote to keep the player from putting more than 6 bullets in the revolver!</p>\n<hr>\n<p>You know...</p>\n<p>I've never been to any other forum that provided answers before I even asked the question!</p>\n\n",
      "PostDate": "2017-07-26T23:41:54.9689227Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6a0e9037-a617-4b51-80e6-9002ef651b0a",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ Richard:\r\n\r\nya, you'd do these checks before your other scripting: to get the values back within your desired range/bounds, and so then you do all of your other scripting with 'correct / in-bound / in-range' Values.\r\n\r\nfor quick simple code example:\r\n\r\n(I couldn't think of any good/real/practical example at this moment - would require too much thinking which I don't want to do right now, lol, but it still works as an example, lol)\r\n\r\n(I used the special 'changed' Script Attribute, but you can also use a Turnscript/Timer too)\r\n\r\n```\r\n<game name=\"example_game\">\r\n  <attr name=\"start\" type=\"script\">\r\n    msg (\"Player Strength Integer: \" + player.strength_integer)\r\n    msg (\"Player Strength String: \" + player.strength_string)\r\n    player.strength_integer = 200\r\n  </attr>\r\n</game>\r\n\r\n<object name=\"room\">\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"strength_integer\" type=\"int\">-1</attr>\r\n  <attr name=\"strength_string\" type=\"string\">unknown</attr>\r\n  <attr name=\"changedstrength_integer\" type=\"script\">\r\n    <![CDATA[\r\n      msg (\"Player Strength Integer: \" + player.strength_integer)\r\n      msg (\"Player Strength String: \" + player.strength_string)\r\n      if (player.strength_integer > 100) {\r\n        player.strength_integer = 100\r\n      } else if (player.strength_integer < 0) {\r\n        player.strength_integer = 0\r\n      }\r\n      msg (\"Player Strength Integer: \" + player.strength_integer)\r\n      msg (\"Player Strength String: \" + player.strength_string)\r\n      if (player.strength_integer > 66) {\r\n        player.strength_string = \"strong\"\r\n      } else if (player.strength_integer > 33) {\r\n        player.strength_string = \"average\"\r\n      } else {\r\n        player.strength_string = \"weak\"\r\n      }\r\n      msg (\"Player Strength Integer: \" + player.strength_integer)\r\n      msg (\"Player Strength String: \" + player.strength_string)\r\n    ]]>\r\n  </attr>\r\n</object>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>@ Richard:</p>\n<p>ya, you'd do these checks before your other scripting: to get the values back within your desired range/bounds, and so then you do all of your other scripting with 'correct / in-bound / in-range' Values.</p>\n<p>for quick simple code example:</p>\n<p>(I couldn't think of any good/real/practical example at this moment - would require too much thinking which I don't want to do right now, lol, but it still works as an example, lol)</p>\n<p>(I used the special 'changed' Script Attribute, but you can also use a Turnscript/Timer too)</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    msg (\"Player Strength Integer: \" + player.strength_integer)\n    msg (\"Player Strength String: \" + player.strength_string)\n    player.strength_integer = 200\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;object name=\"room\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"strength_integer\" type=\"int\"&gt;-1&lt;/attr&gt;\n  &lt;attr name=\"strength_string\" type=\"string\"&gt;unknown&lt;/attr&gt;\n  &lt;attr name=\"changedstrength_integer\" type=\"script\"&gt;\n    &lt;![CDATA[\n      msg (\"Player Strength Integer: \" + player.strength_integer)\n      msg (\"Player Strength String: \" + player.strength_string)\n      if (player.strength_integer &gt; 100) {\n        player.strength_integer = 100\n      } else if (player.strength_integer &lt; 0) {\n        player.strength_integer = 0\n      }\n      msg (\"Player Strength Integer: \" + player.strength_integer)\n      msg (\"Player Strength String: \" + player.strength_string)\n      if (player.strength_integer &gt; 66) {\n        player.strength_string = \"strong\"\n      } else if (player.strength_integer &gt; 33) {\n        player.strength_string = \"average\"\n      } else {\n        player.strength_string = \"weak\"\n      }\n      msg (\"Player Strength Integer: \" + player.strength_integer)\n      msg (\"Player Strength String: \" + player.strength_string)\n    ]]&gt;\n  &lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n\n",
      "PostDate": "2017-07-27T02:04:12.0234205Z",
      "LastEditDate": "2017-07-27T02:36:18.5280591Z",
      "link": null
    }
  ]
}
