{
  "Topic": {
    "TopicId": "xr4saw2qw0siwtx94_frvw",
    "ForumId": "10",
    "Title": "Changing grid_length while playing?",
    "LastUpdated": "2020-10-07T07:31:06.298202Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "b1c0cedf-95f9-4500-8aba-bec701f42f70",
      "UserId": 187141,
      "Username": "Shadecerule",
      "AvatarUrl": "https://secure.gravatar.com/avatar/c73b5bde1f86d7098461d3f9889a386f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For my game's map, I want all the rooms in a specific area to have exits with a grid_length of 0 between them. The problem is that by looking at the map with this method, you can't see which rooms still have exits that you haven't explored yet. The grid lines are helpful in showing this, but it spoils the visual of a more connected area.\r\n\r\nIs there a way to change the value of grid_length while playing? I want to have exits begin with a grid_length value of 1 (to show an exit exists) and then set it to 0 on move. However, setting it to 0 doesn't erase the line from the map because it's already drawn. Is there a way to erase the line or rebuild the map before moving?",
      "EditableFormat": "markdown",
      "HTML": "<p>For my game's map, I want all the rooms in a specific area to have exits with a grid_length of 0 between them. The problem is that by looking at the map with this method, you can't see which rooms still have exits that you haven't explored yet. The grid lines are helpful in showing this, but it spoils the visual of a more connected area.</p>\n<p>Is there a way to change the value of grid_length while playing? I want to have exits begin with a grid_length value of 1 (to show an exit exists) and then set it to 0 on move. However, setting it to 0 doesn't erase the line from the map because it's already drawn. Is there a way to erase the line or rebuild the map before moving?</p>\n\n",
      "PostDate": "2020-10-07T07:31:06.298202Z",
      "LastEditDate": "2020-10-07T07:32:57.5192538Z",
      "link": null
    },
    {
      "PostId": "225e2ea3-ccfd-44ce-8d50-ace8cc779644",
      "UserId": 187141,
      "Username": "Shadecerule",
      "AvatarUrl": "https://secure.gravatar.com/avatar/c73b5bde1f86d7098461d3f9889a386f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is the current script I have tried, but it doesn't completely work. It'll erase the line but the room you travel to will have an empty space between it and the previous room. It will only redraw the map as desired when a second move is made.\r\n\r\n```\r\nToDestination.grid_length = 0\r\nJS.Grid_ClearAllLayers ()\r\nGrid_Redraw\r\nGrid_DrawPlayerInRoom (game.pov.parent)\r\nMoveObject (player, Destination)",
      "EditableFormat": "markdown",
      "HTML": "<p>This is the current script I have tried, but it doesn't completely work. It'll erase the line but the room you travel to will have an empty space between it and the previous room. It will only redraw the map as desired when a second move is made.</p>\n<pre><code>ToDestination.grid_length = 0\nJS.Grid_ClearAllLayers ()\nGrid_Redraw\nGrid_DrawPlayerInRoom (game.pov.parent)\nMoveObject (player, Destination)\n</code></pre>\n\n",
      "PostDate": "2020-10-07T07:47:54.0561778Z",
      "LastEditDate": "2020-10-07T09:45:10.931675Z",
      "link": null
    },
    {
      "PostId": "2601db53-1102-4e5d-867b-e643a131944c",
      "UserId": 187141,
      "Username": "Shadecerule",
      "AvatarUrl": "https://secure.gravatar.com/avatar/c73b5bde1f86d7098461d3f9889a386f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For instance, THIS will work, but there has to be a more elegant way to do it than duplicating the script? (Player begins game in 'Origin' and then moves to 'Destination'. 'ToDestination' is the exit from Origin to Destination.)\r\n\r\n```\r\nToDestination.grid_length = 0\r\n\r\nJS.Grid_ClearAllLayers ()\r\nGrid_Redraw\r\nGrid_DrawPlayerInRoom (game.pov.parent)\r\nMoveObject (player, Destination)\r\n\r\nMoveObject (player, Origin)\r\n\r\nJS.Grid_ClearAllLayers ()\r\nGrid_Redraw\r\nGrid_DrawPlayerInRoom (game.pov.parent)\r\nMoveObject (player, Destination)\r\n```\r\n\r\nEDIT: This will actually shift rooms outside of the Origin and Destination toward the opposite direction and destroy the map... So it's still not fully functional.",
      "EditableFormat": "markdown",
      "HTML": "<p>For instance, THIS will work, but there has to be a more elegant way to do it than duplicating the script? (Player begins game in 'Origin' and then moves to 'Destination'. 'ToDestination' is the exit from Origin to Destination.)</p>\n<pre><code>ToDestination.grid_length = 0\n\nJS.Grid_ClearAllLayers ()\nGrid_Redraw\nGrid_DrawPlayerInRoom (game.pov.parent)\nMoveObject (player, Destination)\n\nMoveObject (player, Origin)\n\nJS.Grid_ClearAllLayers ()\nGrid_Redraw\nGrid_DrawPlayerInRoom (game.pov.parent)\nMoveObject (player, Destination)\n</code></pre>\n<p>EDIT: This will actually shift rooms outside of the Origin and Destination toward the opposite direction and destroy the map... So it's still not fully functional.</p>\n\n",
      "PostDate": "2020-10-07T08:01:31.5206713Z",
      "LastEditDate": "2020-10-07T10:23:01.7511563Z",
      "link": null
    },
    {
      "PostId": "67de70cb-d2f1-4182-976a-6e741083285d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "When you first enter a room, it loops over all of the exits and generates the coordinates for any rooms that don't have any. So removing the extra exit wouldn't change the coordinates of the destination.\r\n\r\nThe coordinates of adjacent rooms are recalculated automatically when the player enters a room. So  your method is moving the player to the destination and back again forces Quest to recalculate the coordinates of the destination room when they re-enter origin. But you really don't need this; you can call `Grid_CalculateMapCoordinates` manually.\r\n\r\nIf you're doing this for an exit or a modified `go` command, you could do something like this:\r\n```\r\n// adjust the length\r\nToDestination.grid_length = 0\r\n\r\n// adjust the length of the exit in the opposite direction, so that\r\n//   going there doesn't move the origin room to the wrong coordinates\r\nFromDestination = GetExitByLink (Destination, Origin)\r\nif (TypeOf (FromDestination) = \"string\") {\r\n  FromDestination = GetObject (FromDestination)\r\n  FromDestination.grid_length = 0\r\n}\r\n\r\n// move the destination room to its new coordinates\r\nGrid_CalculateMapCoordinates (Origin, game.pov)\r\n\r\n// and redraw the grid\r\nJS.Grid_ClearAllLayers ()\r\nGrid_Redraw\r\n\r\n// move the player; this adds the new room to the map and draws the player in it\r\ngame.pov.parent = Destination\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>When you first enter a room, it loops over all of the exits and generates the coordinates for any rooms that don't have any. So removing the extra exit wouldn't change the coordinates of the destination.</p>\n<p>The coordinates of adjacent rooms are recalculated automatically when the player enters a room. So  your method is moving the player to the destination and back again forces Quest to recalculate the coordinates of the destination room when they re-enter origin. But you really don't need this; you can call <code>Grid_CalculateMapCoordinates</code> manually.</p>\n<p>If you're doing this for an exit or a modified <code>go</code> command, you could do something like this:</p>\n<pre><code>// adjust the length\nToDestination.grid_length = 0\n\n// adjust the length of the exit in the opposite direction, so that\n//   going there doesn't move the origin room to the wrong coordinates\nFromDestination = GetExitByLink (Destination, Origin)\nif (TypeOf (FromDestination) = \"string\") {\n  FromDestination = GetObject (FromDestination)\n  FromDestination.grid_length = 0\n}\n\n// move the destination room to its new coordinates\nGrid_CalculateMapCoordinates (Origin, game.pov)\n\n// and redraw the grid\nJS.Grid_ClearAllLayers ()\nGrid_Redraw\n\n// move the player; this adds the new room to the map and draws the player in it\ngame.pov.parent = Destination\n</code></pre>\n\n",
      "PostDate": "2020-10-07T11:32:19.8518665Z",
      "LastEditDate": "2020-10-07T19:39:10.9886841Z",
      "link": null
    },
    {
      "PostId": "ebbf2dd3-c2c0-49e7-b893-42fcd37b9226",
      "UserId": 187141,
      "Username": "Shadecerule",
      "AvatarUrl": "https://secure.gravatar.com/avatar/c73b5bde1f86d7098461d3f9889a386f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "With this code, I still get the issue I mentioned in my second post (the destination room is drawn with an empty space between it and the origin room). Then, when the player moves back to the original room, their marker will be in the empty space.",
      "EditableFormat": "markdown",
      "HTML": "<p>With this code, I still get the issue I mentioned in my second post (the destination room is drawn with an empty space between it and the origin room). Then, when the player moves back to the original room, their marker will be in the empty space.</p>\n\n",
      "PostDate": "2020-10-07T18:18:05.242652Z",
      "LastEditDate": "2020-10-07T18:19:47.7994083Z",
      "link": null
    },
    {
      "PostId": "66ff1998-c6dc-4450-8847-f8a5266f52fd",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Where are you putting the code?\r\n\r\nI'm trying to work through an example in my head, but it's not easy because I don't have a Windows computer (and I can't debug properly in the web version of Quest).\r\n\r\n<details><summary>OK, thinking out loud.</summary>\r\n\r\nImagine there's just 2 rooms. Origin is at `0/0/0` and Destination is to the East. So as soon as the player enters it, CalculateMapCoordinates will calculate that the exit between them connects the points `1/0.5/0` and `2/0.5/0`. And that Destination is at `2,0,0`.\r\n\r\nThe player moves through the exit. Assuming this script runs before they move; so it's an exit script or similar.\r\nThe length of the exit is set to 0.\r\nCalculateMapCoordinates is run for Origin again. This calculates that the exit now connects `1/0.5/0` to `1/0.5/0` (so it's got no length), and Destination is now at `1/0/0`.\r\n\r\nThe map is cleared and redrawn, showing only Origin.\r\n\r\nThen the player moves to Destination, which is drawn on the map. We rely on `OnEnterRoom` to add Destination to the map at the coordinates that have already been calculated.\r\nI can't see any other script that would result in the coordinates being wrong.\r\n</details>\r\n\r\nI'm going to try this myself, making a quick game just to do this; but it might  be easier if there was someone with the desktop editor that I could ask to test things.",
      "EditableFormat": "markdown",
      "HTML": "<p>Where are you putting the code?</p>\n<p>I'm trying to work through an example in my head, but it's not easy because I don't have a Windows computer (and I can't debug properly in the web version of Quest).</p>\n<details><summary>OK, thinking out loud.</summary>\n<p>Imagine there's just 2 rooms. Origin is at <code>0/0/0</code> and Destination is to the East. So as soon as the player enters it, CalculateMapCoordinates will calculate that the exit between them connects the points <code>1/0.5/0</code> and <code>2/0.5/0</code>. And that Destination is at <code>2,0,0</code>.</p>\n<p>The player moves through the exit. Assuming this script runs before they move; so it's an exit script or similar.<br>\nThe length of the exit is set to 0.<br>\nCalculateMapCoordinates is run for Origin again. This calculates that the exit now connects <code>1/0.5/0</code> to <code>1/0.5/0</code> (so it's got no length), and Destination is now at <code>1/0/0</code>.</p>\n<p>The map is cleared and redrawn, showing only Origin.</p>\n<p>Then the player moves to Destination, which is drawn on the map. We rely on <code>OnEnterRoom</code> to add Destination to the map at the coordinates that have already been calculated.<br>\nI can't see any other script that would result in the coordinates being wrong.</p>\n</details>\n<p>I'm going to try this myself, making a quick game just to do this; but it might  be easier if there was someone with the desktop editor that I could ask to test things.</p>\n\n",
      "PostDate": "2020-10-07T19:18:04.9923008Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5ff7d3df-ddaf-48d7-882d-c3f72008899e",
      "UserId": 187141,
      "Username": "Shadecerule",
      "AvatarUrl": "https://secure.gravatar.com/avatar/c73b5bde1f86d7098461d3f9889a386f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm using a desktop editor myself. I have this code placed into a function, and then I am calling the function in the desired exit's \"Run a script (instead of moving the player automatically)\" section. I pass through the names of the origin and destination as parameters.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm using a desktop editor myself. I have this code placed into a function, and then I am calling the function in the desired exit's \"Run a script (instead of moving the player automatically)\" section. I pass through the names of the origin and destination as parameters.</p>\n\n",
      "PostDate": "2020-10-07T19:31:43.8693352Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "732210b7-85d7-4eda-909b-4aa5b50145f2",
      "UserId": 187141,
      "Username": "Shadecerule",
      "AvatarUrl": "https://secure.gravatar.com/avatar/c73b5bde1f86d7098461d3f9889a386f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Considering that repeating the script after moving the player will position the rooms correctly, I think there is something key about actually entering the destination room.",
      "EditableFormat": "markdown",
      "HTML": "<p>Considering that repeating the script after moving the player will position the rooms correctly, I think there is something key about actually entering the destination room.</p>\n\n",
      "PostDate": "2020-10-07T19:38:44.0675131Z",
      "LastEditDate": "2020-10-07T19:39:39.0796026Z",
      "link": null
    },
    {
      "PostId": "a18fad7a-58f9-426c-9ee5-dbbddad96d42",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OK… I found the problem.\r\n\r\nI was an idiot, and typed the two parameters to `Grid_CalculateMapCoordinates` the wrong way around.\r\nHave corrected the script in the post above now.\r\n\r\nTested and it works. **But**, if you have a loop of rooms, any exits you haven't been through yet are still drawn as lines, even if you've been to the rooms on both sides. This means that you get lines across the middle of a room, which is awkward.\r\n\r\nI think it shouldn't be too hard to fix that.",
      "EditableFormat": "markdown",
      "HTML": "<p>OK… I found the problem.</p>\n<p>I was an idiot, and typed the two parameters to <code>Grid_CalculateMapCoordinates</code> the wrong way around.<br>\nHave corrected the script in the post above now.</p>\n<p>Tested and it works. <strong>But</strong>, if you have a loop of rooms, any exits you haven't been through yet are still drawn as lines, even if you've been to the rooms on both sides. This means that you get lines across the middle of a room, which is awkward.</p>\n<p>I think it shouldn't be too hard to fix that.</p>\n\n",
      "PostDate": "2020-10-07T19:42:07.3282819Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fd7544be-092f-4a49-a160-b3311588b12c",
      "UserId": 187141,
      "Username": "Shadecerule",
      "AvatarUrl": "https://secure.gravatar.com/avatar/c73b5bde1f86d7098461d3f9889a386f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Awesome, it seems to work perfectly now! Thank you so much.\r\n\r\nI think I understand what's going on in this script, so I should be able to implement a fix for looped rooms.",
      "EditableFormat": "markdown",
      "HTML": "<p>Awesome, it seems to work perfectly now! Thank you so much.</p>\n<p>I think I understand what's going on in this script, so I should be able to implement a fix for looped rooms.</p>\n\n",
      "PostDate": "2020-10-07T19:52:04.8844805Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "39f178d2-8af6-4c7a-b232-ded8e5e980df",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The looped room fix is a challenge. It makes more sense to do it in the player object's `changedparent` script (or in the `OnEnterRoom` function, but I can't modify that on the web version).\r\n\r\nThis seems to work well:\r\n<pre><code>  if (game.pov = this) {\r\n    <b>if (game.gridmap) {\r\n      <s>needs_redraw = false</s>\r\n      foreach (exit, AllExits()) {\r\n        if (HasInt (exit, \"real_grid_length\")) {\r\n          real_length = exit.real_grid_length\r\n        }\r\n        else {\r\n          real_length = 0\r\n        }\r\n        shrinkme = false\r\n        if (not exit.grid_length = real_length) {\r\n          if (exit.parent = this.parent) {\r\n            if (HasObject (exit, \"to\") and Grid_GetRoomBooleanForPlayer(game.pov, exit.to, \"grid_isdrawn\")) {\r\n              exit.grid_length = real_length\r\n              <s>needs_redraw = true</s>\r\n            }\r\n          }\r\n          else if (exit.to = this.parent and Grid_GetRoomBooleanForPlayer(game.pov, exit.parent, \"grid_isdrawn\")) {\r\n            exit.grid_length = real_length\r\n            <s>needs_redraw = true</s>\r\n            if (IsDefined (\"oldvalue\")) {\r\n              if (exit.parent = oldvalue) {\r\n                // this is the exit we just came through\r\n                // We've just reduced its length, so we need to recalculate the coordinates of the *current* room from the previous one\r\n                Grid_CalculateMapCoordinates (oldvalue, game.pov)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      <s>if (needs_redraw) {\r\n        JS.Grid_ClearAllLayers ()\r\n        Grid_Redraw\r\n      }</s>\r\n    }</b>\r\n    if (IsDefined(\"oldvalue\")) {\r\n      OnEnterRoom (oldvalue)\r\n    }\r\n    else {\r\n      OnEnterRoom (null)\r\n    }\r\n    if (game.gridmap) {\r\n      MergePOVCoordinates\r\n    }\r\n  }\r\n  this.hasbeenmoved = true</code></pre>\r\n\r\nBold is the code I added.\r\n\r\nIt allows an integer attribute `real_grid_length` on exits, in case you want some exits to be drawn with an actual length; otherwise they get shrunk down to zero.\r\n\r\nNote: We don't necessarily need to redraw the grid. By default, rooms are drawn as an opaque white box with a border, so as long as you calculate the coordinates correctly before `OnEnterRoom` is called, the unwanted exit line will disappear because the room is drawn on top of it. I've crossed those lines out in the code above - you only need them if you have a room whose grid width or height is less than the length of the exits, or if you have transparent rooms. Removing the redraw is a little better because the animation of the player moving into the new room works correctly.\r\n\r\nIt actually might make more sense to modify the Grid_CalculateMapCoordinates function if you can. You could make it ignore the exit's grid_length when calculating the coordinates for rooms. That way they don't need moving.",
      "EditableFormat": "markdown",
      "HTML": "<p>The looped room fix is a challenge. It makes more sense to do it in the player object's <code>changedparent</code> script (or in the <code>OnEnterRoom</code> function, but I can't modify that on the web version).</p>\n<p>This seems to work well:</p>\n<pre><code>  if (game.pov = this) {\n    <b>if (game.gridmap) {\n      <s>needs_redraw = false</s>\n      foreach (exit, AllExits()) {\n        if (HasInt (exit, \"real_grid_length\")) {\n          real_length = exit.real_grid_length\n        }\n        else {\n          real_length = 0\n        }\n        shrinkme = false\n        if (not exit.grid_length = real_length) {\n          if (exit.parent = this.parent) {\n            if (HasObject (exit, \"to\") and Grid_GetRoomBooleanForPlayer(game.pov, exit.to, \"grid_isdrawn\")) {\n              exit.grid_length = real_length\n              <s>needs_redraw = true</s>\n            }\n          }\n          else if (exit.to = this.parent and Grid_GetRoomBooleanForPlayer(game.pov, exit.parent, \"grid_isdrawn\")) {\n            exit.grid_length = real_length\n            <s>needs_redraw = true</s>\n            if (IsDefined (\"oldvalue\")) {\n              if (exit.parent = oldvalue) {\n                // this is the exit we just came through\n                // We've just reduced its length, so we need to recalculate the coordinates of the *current* room from the previous one\n                Grid_CalculateMapCoordinates (oldvalue, game.pov)\n              }\n            }\n          }\n        }\n      }\n      <s>if (needs_redraw) {\n        JS.Grid_ClearAllLayers ()\n        Grid_Redraw\n      }</s>\n    }</b>\n    if (IsDefined(\"oldvalue\")) {\n      OnEnterRoom (oldvalue)\n    }\n    else {\n      OnEnterRoom (null)\n    }\n    if (game.gridmap) {\n      MergePOVCoordinates\n    }\n  }\n  this.hasbeenmoved = true</code></pre>\n<p>Bold is the code I added.</p>\n<p>It allows an integer attribute <code>real_grid_length</code> on exits, in case you want some exits to be drawn with an actual length; otherwise they get shrunk down to zero.</p>\n<p>Note: We don't necessarily need to redraw the grid. By default, rooms are drawn as an opaque white box with a border, so as long as you calculate the coordinates correctly before <code>OnEnterRoom</code> is called, the unwanted exit line will disappear because the room is drawn on top of it. I've crossed those lines out in the code above - you only need them if you have a room whose grid width or height is less than the length of the exits, or if you have transparent rooms. Removing the redraw is a little better because the animation of the player moving into the new room works correctly.</p>\n<p>It actually might make more sense to modify the Grid_CalculateMapCoordinates function if you can. You could make it ignore the exit's grid_length when calculating the coordinates for rooms. That way they don't need moving.</p>\n\n",
      "PostDate": "2020-10-07T20:25:20.1241385Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cbcb0099-d96f-450f-b148-385e196795b4",
      "UserId": 187141,
      "Username": "Shadecerule",
      "AvatarUrl": "https://secure.gravatar.com/avatar/c73b5bde1f86d7098461d3f9889a386f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hmm, thank you! I think this could definitely come in handy. I'll have to play around with it and see what works best for my game.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hmm, thank you! I think this could definitely come in handy. I'll have to play around with it and see what works best for my game.</p>\n\n",
      "PostDate": "2020-10-07T20:30:37.3026614Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
