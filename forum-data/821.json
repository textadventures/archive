{
  "Topic": {
    "TopicId": "821",
    "ForumId": "10",
    "Title": "grid system....",
    "LastUpdated": "2005-07-13T19:34:50+01:00",
    "ReplyCount": 37
  },
  "Posts": [
    {
      "PostId": "6374",
      "UserId": 0,
      "Username": "Elexxorine",
      "UserAvatar": null,
      "UserGravatar": "a220ee44d8fe2f07029cf1f61b98bf40",
      "EditableText": "im' making a HUGE game world for my game TBC, and was thinking over the old grid system, is there a working example i could use, or any other good system that's better.... ( and trust me: it's stupidly huge, first area is 57,600 squares big so far <!-- s:o --><img src=\"{SMILIES_PATH}/icon_e_surprised.gif\" alt=\":o\" title=\"Surprised\" /><!-- s:o --> , might make it smaller, though...) thanks  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_e_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "EditableFormat": "bbcode",
      "HTML": "im' making a HUGE game world for my game TBC, and was thinking over the old grid system, is there a working example i could use, or any other good system that's better.... ( and trust me: it's stupidly huge, first area is 57,600 squares big so far <!-- s:o --><img src=\"{SMILIES_PATH}/icon_e_surprised.gif\" alt=\":o\" title=\"Surprised\" /><!-- s:o --> , might make it smaller, though...) thanks  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_e_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "PostDate": "2005-06-13T15:21:22+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6380",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Elexxorine wrote\n\n[quote:2e0tq2nh]trust me: it's stupidly huge, first area is 57,600 squares big so far [/quote:2e0tq2nh]\n\nYeah, I'd agree with that - '57600 squares' (240x240? treated as seperate locations presumably) is [b:2e0tq2nh]STUPIDLY[/b:2e0tq2nh]  <!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: -->  large...  Seriously, think again - your players will hate you with a passion if you get even remotely close to that figure...  <!-- s:roll: --><img src=\"{SMILIES_PATH}/icon_rolleyes.gif\" alt=\":roll:\" title=\"Rolling Eyes\" /><!-- s:roll: --> \n\nThat said, setting up a grid structure for movement within a room is not at all hard to do.  Here's a 5 x 5 grid (25 locations) - to make it bigger or rectangular you'd just change the xpos/ypos maximums to anything you like.\n\nIn my code the player enters the grid centre bottom row and can mooch about (exits appear disappear as needed).\n\n[code:2e0tq2nh]' Grid Locations\n\ndefine game &lt;Game Name&gt;\n\n\tasl-version &lt;350&gt;\n\t\n\tgametype singleplayer\n\t\n\tgame version &lt;1&#46;0&gt;\n\tgame author &lt;MaDbRiT&gt;\n\tgame copyright &lt;Â© 2005 AGB&gt;\n\tgame info &lt;Enter any additional information about this game here&#46;&gt;\n\t\n\tstart &lt;StartRoom&gt;\n\t\n\tstartscript &#123;\n\t\tset numeric &lt;xpos;3&gt;\n\t\tset numeric &lt;ypos;1&gt;\n\t&#125;\n\t\nend define\n\ndefine room &lt;StartRoom&gt;\n\n\tlook &lt;It looks very familiar&#46;&#46;&#46;&gt;\n\t\n\tnorth &#123;\n\t\tdo &lt;MakeExits&gt;\n\t\tgoto &lt;gridroom&gt;\n\t&#125;\n\t\t\nend define\n\ndefine room &lt;GridRoom&gt;\n\tscript &#123;\n\t\toutputon\n\t\texec &lt;look&gt;\n\t&#125;\n\tcommand &lt;north&gt; &#123;\n\t\toutputoff\n\t\texec &lt;north;normal&gt;\n\t&#125;\n\tcommand &lt;south&gt; &#123;\n\t\tif &#40;%xpos%&lt;&gt;3&#41; or &#40;%ypos%&lt;&gt;1&#41; then outputoff\n\t\texec &lt;south;normal&gt;\n\t&#125;\t\n\tcommand &lt;west&gt; &#123;\n\t\toutputoff\n\t\texec &lt;west;normal&gt;\n\t&#125;\n\tcommand &lt;east&gt; &#123;\n\t\toutputoff\n\t\texec &lt;east;normal&gt;\n\t&#125;\nend define\n\ndefine room &lt;North_Dummy&gt;\n\tscript &#123;\n\t\tinc &lt;ypos&gt;\n\t\tdo &lt;MakeExits&gt;\n\t\tgoto &lt;GridRoom&gt;\n\t&#125;\nend define\n\ndefine room &lt;South_Dummy&gt;\n\tscript &#123;\n\t\tdec &lt;ypos&gt;\n\t\tdo &lt;MakeExits&gt;\n\t\tgoto &lt;GridRoom&gt;\n\t&#125;\nend define\n\ndefine room &lt;East_Dummy&gt;\n\tscript &#123;\n\t\tinc &lt;xpos&gt;\n\t\tdo &lt;MakeExits&gt;\n\t\tgoto &lt;GridRoom&gt;\n\t&#125;\nend define\n\ndefine room &lt;West_Dummy&gt;\n\tscript &#123;\n\t\tdec &lt;xpos&gt;\n\t\tdo &lt;MakeExits&gt;\n\t\tgoto &lt;GridRoom&gt;\n\t&#125;\nend define\n\n\ndefine procedure &lt;MakeExits&gt;\n\toutputoff\n\tcreate exit north &lt;GridRoom;&gt;\n\tcreate exit south &lt;GridRoom;&gt;\t\n\tcreate exit east &lt;GridRoom;&gt;\n\tcreate exit west &lt;GridRoom;&gt;\n\tif &#40;%xpos% &lt;&gt;1&#41; then create exit west &lt;GridRoom; West_Dummy&gt;\n\tif &#40;%xpos% &lt;&gt;5&#41; then create exit east &lt;GridRoom; East_Dummy&gt;\n\tif &#40;%ypos% &lt;&gt;1&#41; then create exit south &lt;GridRoom; South_Dummy&gt;\n\tif &#40;%ypos% &lt;&gt;5&#41; then create exit north &lt;GridRoom; North_Dummy&gt;\n\tif &#40;%xpos% = 3&#41; and &#40;%ypos% =1&#41; then create exit south &lt;GridRoom; StartRoom&gt;\n\tproperty &lt;Gridroom;alias=Location X=%xpos%, Y=%ypos%&gt;\nend define\n\ndefine text &lt;intro&gt;\nEnter intro text here\nend define\n\ndefine text &lt;win&gt;\nEnter win text here\nend define\n\ndefine text &lt;lose&gt;\nEnter lose text here\nend define[/code:2e0tq2nh]\n\nShould you need to drop objects in grid locations - storing them in a dummy room and allocating them x / y variables to check and move them as required is easy.\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Elexxorine wrote<br/><br/><blockquote><p>trust me: it's stupidly huge, first area is 57,600 squares big so far </p></blockquote><br/><br/>Yeah, I'd agree with that - '57600 squares' (240x240? treated as seperate locations presumably) is <span style=\"font-weight:bold;\">STUPIDLY</span>  <!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: -->  large...  Seriously, think again - your players will hate you with a passion if you get even remotely close to that figure...  <!-- s:roll: --><img src=\"{SMILIES_PATH}/icon_rolleyes.gif\" alt=\":roll:\" title=\"Rolling Eyes\" /><!-- s:roll: --> <br/><br/>That said, setting up a grid structure for movement within a room is not at all hard to do.  Here's a 5 x 5 grid (25 locations) - to make it bigger or rectangular you'd just change the xpos/ypos maximums to anything you like.<br/><br/>In my code the player enters the grid centre bottom row and can mooch about (exits appear disappear as needed).<br/><br/><pre><code>' Grid Locations<br/><br/>define game &lt;Game Name&gt;<br/><br/>\tasl-version &lt;350&gt;<br/>\t<br/>\tgametype singleplayer<br/>\t<br/>\tgame version &lt;1&#46;0&gt;<br/>\tgame author &lt;MaDbRiT&gt;<br/>\tgame copyright &lt;Â© 2005 AGB&gt;<br/>\tgame info &lt;Enter any additional information about this game here&#46;&gt;<br/>\t<br/>\tstart &lt;StartRoom&gt;<br/>\t<br/>\tstartscript &#123;<br/>\t\tset numeric &lt;xpos;3&gt;<br/>\t\tset numeric &lt;ypos;1&gt;<br/>\t&#125;<br/>\t<br/>end define<br/><br/>define room &lt;StartRoom&gt;<br/><br/>\tlook &lt;It looks very familiar&#46;&#46;&#46;&gt;<br/>\t<br/>\tnorth &#123;<br/>\t\tdo &lt;MakeExits&gt;<br/>\t\tgoto &lt;gridroom&gt;<br/>\t&#125;<br/>\t\t<br/>end define<br/><br/>define room &lt;GridRoom&gt;<br/>\tscript &#123;<br/>\t\toutputon<br/>\t\texec &lt;look&gt;<br/>\t&#125;<br/>\tcommand &lt;north&gt; &#123;<br/>\t\toutputoff<br/>\t\texec &lt;north;normal&gt;<br/>\t&#125;<br/>\tcommand &lt;south&gt; &#123;<br/>\t\tif &#40;%xpos%&lt;&gt;3&#41; or &#40;%ypos%&lt;&gt;1&#41; then outputoff<br/>\t\texec &lt;south;normal&gt;<br/>\t&#125;\t<br/>\tcommand &lt;west&gt; &#123;<br/>\t\toutputoff<br/>\t\texec &lt;west;normal&gt;<br/>\t&#125;<br/>\tcommand &lt;east&gt; &#123;<br/>\t\toutputoff<br/>\t\texec &lt;east;normal&gt;<br/>\t&#125;<br/>end define<br/><br/>define room &lt;North_Dummy&gt;<br/>\tscript &#123;<br/>\t\tinc &lt;ypos&gt;<br/>\t\tdo &lt;MakeExits&gt;<br/>\t\tgoto &lt;GridRoom&gt;<br/>\t&#125;<br/>end define<br/><br/>define room &lt;South_Dummy&gt;<br/>\tscript &#123;<br/>\t\tdec &lt;ypos&gt;<br/>\t\tdo &lt;MakeExits&gt;<br/>\t\tgoto &lt;GridRoom&gt;<br/>\t&#125;<br/>end define<br/><br/>define room &lt;East_Dummy&gt;<br/>\tscript &#123;<br/>\t\tinc &lt;xpos&gt;<br/>\t\tdo &lt;MakeExits&gt;<br/>\t\tgoto &lt;GridRoom&gt;<br/>\t&#125;<br/>end define<br/><br/>define room &lt;West_Dummy&gt;<br/>\tscript &#123;<br/>\t\tdec &lt;xpos&gt;<br/>\t\tdo &lt;MakeExits&gt;<br/>\t\tgoto &lt;GridRoom&gt;<br/>\t&#125;<br/>end define<br/><br/><br/>define procedure &lt;MakeExits&gt;<br/>\toutputoff<br/>\tcreate exit north &lt;GridRoom;&gt;<br/>\tcreate exit south &lt;GridRoom;&gt;\t<br/>\tcreate exit east &lt;GridRoom;&gt;<br/>\tcreate exit west &lt;GridRoom;&gt;<br/>\tif &#40;%xpos% &lt;&gt;1&#41; then create exit west &lt;GridRoom; West_Dummy&gt;<br/>\tif &#40;%xpos% &lt;&gt;5&#41; then create exit east &lt;GridRoom; East_Dummy&gt;<br/>\tif &#40;%ypos% &lt;&gt;1&#41; then create exit south &lt;GridRoom; South_Dummy&gt;<br/>\tif &#40;%ypos% &lt;&gt;5&#41; then create exit north &lt;GridRoom; North_Dummy&gt;<br/>\tif &#40;%xpos% = 3&#41; and &#40;%ypos% =1&#41; then create exit south &lt;GridRoom; StartRoom&gt;<br/>\tproperty &lt;Gridroom;alias=Location X=%xpos%, Y=%ypos%&gt;<br/>end define<br/><br/>define text &lt;intro&gt;<br/>Enter intro text here<br/>end define<br/><br/>define text &lt;win&gt;<br/>Enter win text here<br/>end define<br/><br/>define text &lt;lose&gt;<br/>Enter lose text here<br/>end define</code></pre><br/><br/>Should you need to drop objects in grid locations - storing them in a dummy room and allocating them x / y variables to check and move them as required is easy.<br/><br/>Al (MaDbRiT)",
      "PostDate": "2005-06-13T22:39:20+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6381",
      "UserId": 0,
      "Username": "davidw",
      "UserAvatar": null,
      "UserGravatar": "5d9c9199ac213c3e7284cd76a2262c4a",
      "EditableText": "Ah, another uber-epic-massive game that everyone knows will never be finished.\n\nFirst there was Shadow Projekt, then there was Business Tycoon (or whatever it was called), now there's this...\n\nThe list just grows.",
      "EditableFormat": "bbcode",
      "HTML": "Ah, another uber-epic-massive game that everyone knows will never be finished.<br/><br/>First there was Shadow Projekt, then there was Business Tycoon (or whatever it was called), now there's this...<br/><br/>The list just grows.",
      "PostDate": "2005-06-13T23:21:16+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6385",
      "UserId": 0,
      "Username": "Elexxorine",
      "UserAvatar": null,
      "UserGravatar": "a220ee44d8fe2f07029cf1f61b98bf40",
      "EditableText": "yeah, thanks madbrit. how can i make bigger areas with lots of blockages. eg.\n[code:1vmfjf49]\n     +-----+-----+-----+-----+-----+\n     Â¦       Â¦      Â¦       Â¦       Â¦      Â¦\n     +-----+-----+-----+-----+-----+\n     Â¦       Â¦ ***Â¦       Â¦       Â¦      Â¦\n     +-----+-----+-----+-----+-----+\n     Â¦       Â¦      Â¦        Â¦ ***Â¦      Â¦\n     +-----+-----+-----+-----+-----+\n     Â¦       Â¦      Â¦        Â¦      Â¦      Â¦\n     +-----+-----+-----+-----+-----+\n                      Â¦ start Â¦ \n*** blockage&#46;[/code:1vmfjf49]\n\ni can't see how to do it.",
      "EditableFormat": "bbcode",
      "HTML": "yeah, thanks madbrit. how can i make bigger areas with lots of blockages. eg.<br/><pre><code><br/>     +-----+-----+-----+-----+-----+<br/>     Â¦       Â¦      Â¦       Â¦       Â¦      Â¦<br/>     +-----+-----+-----+-----+-----+<br/>     Â¦       Â¦ ***Â¦       Â¦       Â¦      Â¦<br/>     +-----+-----+-----+-----+-----+<br/>     Â¦       Â¦      Â¦        Â¦ ***Â¦      Â¦<br/>     +-----+-----+-----+-----+-----+<br/>     Â¦       Â¦      Â¦        Â¦      Â¦      Â¦<br/>     +-----+-----+-----+-----+-----+<br/>                      Â¦ start Â¦ <br/>*** blockage&#46;</code></pre><br/><br/>i can't see how to do it.",
      "PostDate": "2005-06-14T11:07:41+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6386",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Elexxorine wrote \n\n[quote:1ot7130s]how can i make bigger areas with lots of blockages[/quote:1ot7130s]\n\nWell if you want inaccessible 'squares' in your grid, I'd not use the system I gave above at all.  <!-- s:!: --><img src=\"{SMILIES_PATH}/icon_exclaim.gif\" alt=\":!:\" title=\"Exclamation\" /><!-- s:!: --> \n\nThe above method works great with minimal coding required for (say) wandering about in a featureless desert of forest or whatever, but if you want a \"maze\" (for want of a better word) you have to cater for too many exceptions for it to be a practical exercise.\n\nFor a maze I'd use a grid based on a simple numeric array. I won't try to explain it here because it isn't easy without an example and I'm at work presently so I don't have time to code one.\n\nI'll knock up a simple example later, assuming \"real life\" doesn't get in the way...\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Elexxorine wrote <br/><br/><blockquote><p>how can i make bigger areas with lots of blockages</p></blockquote><br/><br/>Well if you want inaccessible 'squares' in your grid, I'd not use the system I gave above at all.  <!-- s:!: --><img src=\"{SMILIES_PATH}/icon_exclaim.gif\" alt=\":!:\" title=\"Exclamation\" /><!-- s:!: --> <br/><br/>The above method works great with minimal coding required for (say) wandering about in a featureless desert of forest or whatever, but if you want a \"maze\" (for want of a better word) you have to cater for too many exceptions for it to be a practical exercise.<br/><br/>For a maze I'd use a grid based on a simple numeric array. I won't try to explain it here because it isn't easy without an example and I'm at work presently so I don't have time to code one.<br/><br/>I'll knock up a simple example later, assuming \"real life\" doesn't get in the way...<br/><br/>Al (MaDbRiT)",
      "PostDate": "2005-06-14T11:31:07+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6390",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "IIRC it's not of any good use right now because you can't destroy exit's. Objects or rooms I think you can, but exits you can't (last time I looked).\n\nGot in the way of another thing I was doing, so had to have a conditional in the north/south/east/west.\nBut yeah, I used a numeric array too.",
      "EditableFormat": "bbcode",
      "HTML": "IIRC it's not of any good use right now because you can't destroy exit's. Objects or rooms I think you can, but exits you can't (last time I looked).<br/><br/>Got in the way of another thing I was doing, so had to have a conditional in the north/south/east/west.<br/>But yeah, I used a numeric array too.",
      "PostDate": "2005-06-14T16:21:42+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6391",
      "UserId": 0,
      "Username": "Elexxorine",
      "UserAvatar": null,
      "UserGravatar": "a220ee44d8fe2f07029cf1f61b98bf40",
      "EditableText": "i have no idea how to use arrays. please help me there too... <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->",
      "EditableFormat": "bbcode",
      "HTML": "i have no idea how to use arrays. please help me there too... <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->",
      "PostDate": "2005-06-15T11:03:42+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6392",
      "UserId": 0,
      "Username": "francisstokes",
      "UserAvatar": null,
      "UserGravatar": "a4b7bf4c5684f5131a294bcd35564442",
      "EditableText": "an array is just like var, except u can store alot more numbers in them and reference them by one name.\n\nand how to use them is in the quest documentation.",
      "EditableFormat": "bbcode",
      "HTML": "an array is just like var, except u can store alot more numbers in them and reference them by one name.<br/><br/>and how to use them is in the quest documentation.",
      "PostDate": "2005-06-15T12:20:02+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6394",
      "UserId": 0,
      "Username": "Gary Brown",
      "UserAvatar": null,
      "UserGravatar": "f2d4725d407802bd77fba15b4776dfce",
      "EditableText": "You might wanna rethink that many locations in your mud.  It's up to you, but generally, 10,000 rooms is considered a rather large mud.  There are ways to write a smaller area, and just make it \"feel\" bigger.  Check out some old infocom games for ideas.  Just a thought.\n\nGary",
      "EditableFormat": "bbcode",
      "HTML": "You might wanna rethink that many locations in your mud.  It's up to you, but generally, 10,000 rooms is considered a rather large mud.  There are ways to write a smaller area, and just make it \"feel\" bigger.  Check out some old infocom games for ideas.  Just a thought.<br/><br/>Gary",
      "PostDate": "2005-06-15T19:08:18+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6477",
      "UserId": 0,
      "Username": "steve the gaming guy",
      "UserAvatar": null,
      "UserGravatar": "6577a0affcb6ea711c75baf052ffd08a",
      "EditableText": "[quote=&quot;MaDbRiT&quot;:1xhob2np]\nThe above method works great with minimal coding required for (say) wandering about in a featureless desert of forest or whatever, but if you want a \"maze\" (for want of a better word) you have to cater for too many exceptions for it to be a practical exercise.\n\nFor a maze I'd use a grid based on a simple numeric array. I won't try to explain it here because it isn't easy without an example and I'm at work presently so I don't have time to code one.\n\nI'll knock up a simple example later, assuming \"real life\" doesn't get in the way...\n\nAl (MaDbRiT)[/quote:1xhob2np]\n\nAl,\nI had received some great help a while back on how to build a grid for a large area instead of creating dozens of rooms.\nThis is a similar concept, however, it is in the form of hallways in a maze.  I believe it's about 40 rooms something similar to:\n\n[code:1xhob2np]X    X     \nXX   X   XXXXXX\n X   X   X\n XXXXXXXXX[/code:1xhob2np]\n\nThe example above represents about 23 rooms.  I made that up at random for example purposes where \"X\" equals a room.  Would this be a good enough example or is that too big for a quickie example coding?",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>MaDbRiT wrote:</cite><br/>The above method works great with minimal coding required for (say) wandering about in a featureless desert of forest or whatever, but if you want a \"maze\" (for want of a better word) you have to cater for too many exceptions for it to be a practical exercise.<br/><br/>For a maze I'd use a grid based on a simple numeric array. I won't try to explain it here because it isn't easy without an example and I'm at work presently so I don't have time to code one.<br/><br/>I'll knock up a simple example later, assuming \"real life\" doesn't get in the way...<br/><br/>Al (MaDbRiT)</blockquote><br/><br/>Al,<br/>I had received some great help a while back on how to build a grid for a large area instead of creating dozens of rooms.<br/>This is a similar concept, however, it is in the form of hallways in a maze.  I believe it's about 40 rooms something similar to:<br/><br/><pre><code>X    X     <br/>XX   X   XXXXXX<br/> X   X   X<br/> XXXXXXXXX</code></pre><br/><br/>The example above represents about 23 rooms.  I made that up at random for example purposes where \"X\" equals a room.  Would this be a good enough example or is that too big for a quickie example coding?",
      "PostDate": "2005-06-22T21:45:04+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6482",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Steve wrote\n\n[quote:2lj1q80s]Would this be a good enough example or is that too big for a quickie example coding[/quote:2lj1q80s]\n\nI got half way through coding a second grid example (suitable for mazes) and then got distracted by work...\n\nI'll try and finish it and post here soonest.\n\nAl (MaDbRiT)[/quote]",
      "EditableFormat": "bbcode",
      "HTML": "Steve wrote<br/><br/><blockquote><p>Would this be a good enough example or is that too big for a quickie example coding</p></blockquote><br/><br/>I got half way through coding a second grid example (suitable for mazes) and then got distracted by work...<br/><br/>I'll try and finish it and post here soonest.<br/><br/>Al (MaDbRiT)[/quote]",
      "PostDate": "2005-06-23T09:39:09+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6485",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Steve;\n\nOK then\n\nHere's the 10 x 10 cell (100 location) grid the example below is intended to implement.\n\n[img:wvwblcub]http&#58;//www&#46;meachersgroup&#46;com/football/grid&#46;gif[/img:wvwblcub]\n\nThe grey areas are inaccessible cells and it should be obvious that links to the outside of the grid are at cell 4 (the exit the player is trying to get to) and cell 95 (the entrance).\n\nAs should be obvious from the code below, I'm using a numeric array called 'grid' to store a single number which is a binary encoded representation of the available exits from each grid location.\n\nOne room 'gridroom' represents all the visitable cells.\n\nObviously I had to code 'special case' exits for the entrance and exit cells of the grid array - otherwise there's not a lot to it.\n\nYou can easily 'tweak' this code to get more grid locations if needed and setting which cells cannot be visited is just a question of calling the \"KillAccess\" procedure with the cell number as a parameter.\n\nIf anything needs further explanation, please ask.\n\n[code:wvwblcub]\n' Grid of locations within one room\n\ndefine game &lt;Grid Demo&gt;\n\n\tasl-version &lt;350&gt;\n\t\n\tgametype singleplayer\n\t\n\tgame version &lt;1&#46;0&gt;\n\tgame author &lt;MaDbRiT&gt;\n\tgame copyright &lt;Â© 2005 AGB&gt;\n\tgame info &lt;Demo&gt;\n\t\n\tstart &lt;StartRoom&gt;\n\t\n\tstartscript &#123;\n\t\tdo &lt;MakeGrid&gt;  'This builds a 10 x 10 grid &#40;with hard boundaries&#41;\n\n'  Calling 'KillAccess' procedure with the cell number as a parameter closes all\n'  &#40;N,S,E &amp; W&#41; entrances to the cell referenced&#46;\n\n\t\tdo &lt;KillAccess&#40;1&#41;&gt;\n\t\tdo &lt;KillAccess&#40;3&#41;&gt;\t\t\n\t\tfor &lt;x;5;11&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\n\t\tfor &lt;x;20;26&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t\n\t\tfor &lt;x;28;30&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t\n\t\tfor &lt;x;42;62;10&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t\n\t\tfor &lt;x;44;84;10&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t\n\t\tfor &lt;x;82;83&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t\n\t\tfor &lt;x;46;47&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t\n\t\tfor &lt;x;49;50&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\n\t\tdo &lt;KillAccess&#40;57&#41;&gt;\t\t\n\t\tfor &lt;x;66;70&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t\n\t\tdo &lt;KillAccess&#40;77&#41;&gt;\t\t\n\t\tdo &lt;KillAccess&#40;89&#41;&gt;\n\t\tfor &lt;x;96;99&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t\t\n\t\n'Open additional &#40;special&#41; Exits to south in Cell 95 and to north in cell 4\t\n'These are the entry to / exit from the gridroom maze\n\n\tset &lt;grid&#91;95&#93;;2&gt;\n\tset &lt;grid&#91;4&#93;;10&gt;\n\t&#125;\n\n\t\nend define\n\ndefine room &lt;StartRoom&gt;\n\talias &lt;a small, gloomy room&#46;&gt;\n\tlook &lt;The room is completely bare and featureless&#46;&gt;\n\tnorth &#123;\n\t\tset &lt;gridPos;95&gt;\n\t\tdo &lt;makeExits&gt;\n\t\tgoto &lt;gridroom&gt;\n\t&#125;\n\t\nend define\n\ndefine room &lt;exitroom&gt;\n\talias &lt;the treasure chamber&gt;\n\tlook &lt;Its a bit dark and spooky&#46;&gt;\n\tsouth &#123;\n\t\tset &lt;gridPos;4&gt;\n\t\tdo &lt;makeExits&gt;\n\t\tgoto &lt;gridroom&gt;\n\t&#125;\t\nend define\n\n\ndefine room &lt;GridRoom&gt;\n\tscript &#123;\n'\t\tmsg &lt;DEBUG&#58; Exit code for this &#40;%gridPos%&#41; room is = %grid&#91;gridPos&#93;%&gt;\n\t&#125;\n\talias &lt;a maze of seemingly identical corridors&gt;\n\t\n\tcommand &lt;north&gt; &#123;\n\t\tset &lt;gridPos;%gridPos%-10&gt;\n\t\tif &#40;%gridpos%&lt;&gt;-6&#41; then &#123;\n\t\t\tdo &lt;makeExits&gt;\n\t\t\tgoto &lt;GridRoom&gt;\n\t\t&#125;\n\t\telse goto &lt;exitroom&gt;\n\t&#125;\n\n\tcommand &lt;south&gt; &#123;\n\t\tset &lt;gridPos;%gridPos%+10&gt;\n\t\tif &#40;%gridpos%&lt;&gt;105&#41; then &#123;\n\t\t\tdo &lt;makeExits&gt;\n\t\t\tgoto &lt;GridRoom&gt;\n\t\t&#125;\n\t\telse goto &lt;startroom&gt;\n\t&#125;\n\n\tcommand &lt;east&gt; &#123;\n\t\tset &lt;gridPos;%gridPos%+1&gt;\n\t\tdo &lt;makeExits&gt;\n\t\tgoto &lt;GridRoom&gt;\n\t&#125;\n\n\tcommand &lt;west&gt; &#123;\n\t\tset &lt;gridPos;%gridPos%-1&gt;\n\t\tdo &lt;makeExits&gt;\n\t\tgoto &lt;GridRoom&gt;\n\t&#125;\t\n\t\nend define\n\ndefine room &lt;dummy&gt;\n\nend define\n\ndefine procedure &lt;MakeGrid&gt;\n\t\tset numeric &lt;gridPos;0&gt;\n\n'  ** Set Basic boundaries of 10 x 10 grid\n\n'  ** Set exit north OFF for top row of grid\t\t\n\t\tfor &lt;i;1;10&gt; &#123;\n\t\t\tset numeric &lt;grid&#91;i&#93;;1&gt;\n\t\t&#125;\n\n'  ** Set exit south OFF for bottom row of grid\t\t\n\t\tfor &lt;i;91;100&gt; &#123;\n\t\t\tset numeric &lt;grid&#91;i&#93;;4&gt;\n\t\t&#125;\t\t\n\t\t\n'  ** Set exit east OFF for right row of grid\t\t\n\t\tfor &lt;i;10;100;10&gt; &#123;\n\t\t\tset numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+2&gt;\n\t\t&#125;\n\n'  ** Set exit west OFF for left of grid\t\t\n\t\tfor &lt;i;1;91;10&gt; &#123;\n\t\t\tset numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+8&gt;\n\t\t&#125;\nend define\n\ndefine procedure &lt;makeExits&gt;\n\tcreate exit north &lt;GridRoom;dummy&gt;\n\tcreate exit east &lt;GridRoom;dummy&gt;\n\tcreate exit south &lt;GridRoom;dummy&gt;\n\tcreate exit west &lt;GridRoom;dummy&gt;\n\tset numeric &lt;gridVal;%grid&#91;gridPos&#93;%&gt;\n\t\n\tif &#40;%gridVal% &gt;7&#41; then &#123;\n\t\tcreate exit west &lt;GridRoom;&gt;\n\t\tset &lt;gridVal;%gridVal%-8&gt;\n\t&#125;\n\t\n\tif &#40;%gridVal% &gt;3&#41; then &#123;\n\t\tcreate exit south &lt;GridRoom;&gt;\n\t\tset &lt;gridVal;%gridVal%-4&gt;\n\t&#125;\n\t\n\tif &#40;%gridVal% &gt;1&#41; then &#123;\n\t\tcreate exit east &lt;GridRoom;&gt;\n\t\tset &lt;gridVal;%gridVal%-2&gt;\n\t&#125;\n\t\n\tif &#40;%gridVal% &gt;0&#41; then &#123;\n\t\tcreate exit north &lt;GridRoom;&gt;\n\t&#125;\t\nend define\n\ndefine procedure &lt;KillAccess&gt;\n\tset numeric &lt;BlockBox;$parameter&#40;1&#41;$&gt;\n\n'  In this procedure we need to modify the boxes bordering the chosen box\n'  rather than the box to be blocked itself&#46; First up is to block the \n'  exit to this box from the south&#46;\n'  Move down a row&#46;\n\tset &lt;BlockBox;%BlockBox%+10&gt;\n\tset numeric &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;\n\tif &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;     ' Discard WEST bit\n\tif &#40;%ExitsBlocked% &gt;3&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt;     ' Discard SOUTH bit\t\n\tif &#40;%ExitsBlocked% &gt;1&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-2&gt;     ' Discard EAST bit\t\n\tif &#40;%ExitsBlocked% =0&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+1&gt; ' Set NORTH bit if not set\t\n\t\n'Now the access from the north&#46;\n\tset &lt;BlockBox;%BlockBox%-20&gt; \n'  IF Makes sure we're not in the top row, &#40;we can ignore this stage if we are&#41; \n\tif &#40;%BlockBox%&gt;10&#41; then &#123;  \n\t\tset &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;\t\n\t\tif &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;     ' Discard WEST bit\n\t\tif &#40;%ExitsBlocked% &lt;4&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+4&gt; ' Set SOUTH bit if not set\t\n\t&#125;\n\n'Now the access from the west\n\tset &lt;BlockBox;%BlockBox%+9&gt;\n\t\n\tmake sure we aren't in the leftmost columnn\n\tset numeric &lt;isLeftCol;0&gt;\n\tfor &lt;i;10;100;10&gt; &#123;\n\t\tif &#40;%BlockBox%=%i%&#41; then set &lt;isLeftCol;1&gt;\t\n\t&#125;\n\tif &#40;%isLeftCol%&lt;&gt;1&#41; then &#123;\n\t\tset &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;\t\t\n\t\tif &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;     ' Discard WEST bit\n\t\tif &#40;%ExitsBlocked% &gt;3&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt;     ' Discard SOUTH bit\t\t\n\t\tif &#40;%ExitsBlocked% &lt;2&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+2&gt; ' Set EAST bit if not set\t\n\t&#125;\n\n'Now the access from the east\n\tset &lt;BlockBox;%BlockBox%+2&gt;\n\t\n\tmake sure we aren't in the rightmost columnn\n\tset numeric &lt;isRightCol;0&gt;\n\tfor &lt;i;1;91;10&gt; &#123;\n\t\tif &#40;%BlockBox%=%i%&#41; then set &lt;isRightCol;1&gt;\t\n\t&#125;\n\tif &#40;%isRightCol%&lt;&gt;1&#41; then &#123;\n\t\tset &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;\t\t\n\t\tif &#40;%ExitsBlocked% &lt;8&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+8&gt; ' Set WEST bit if not set\t\n\t&#125;\n\t\nend define\n\ndefine text &lt;intro&gt;\nA demonstration of using one Quest room to represent a grid of locations, in this example a 10 x 10 &#40;100 cell&#41; grid, with lots of the cells inaccessible to form a &quot;maze&quot;\nend define\n\ndefine text &lt;win&gt;\nEnter win text here\nend define\n\ndefine text &lt;lose&gt;\nEnter lose text here\nend define[/code:wvwblcub]\n\nOh yeah - this is a cut n'paste runnable providing you are careful to make sure the word-wrap from the firum doesn't mess it up\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Steve;<br/><br/>OK then<br/><br/>Here's the 10 x 10 cell (100 location) grid the example below is intended to implement.<br/><br/><img src=\"http&#58;//www&#46;meachersgroup&#46;com/football/grid&#46;gif\" alt=\"\" /><br/><br/>The grey areas are inaccessible cells and it should be obvious that links to the outside of the grid are at cell 4 (the exit the player is trying to get to) and cell 95 (the entrance).<br/><br/>As should be obvious from the code below, I'm using a numeric array called 'grid' to store a single number which is a binary encoded representation of the available exits from each grid location.<br/><br/>One room 'gridroom' represents all the visitable cells.<br/><br/>Obviously I had to code 'special case' exits for the entrance and exit cells of the grid array - otherwise there's not a lot to it.<br/><br/>You can easily 'tweak' this code to get more grid locations if needed and setting which cells cannot be visited is just a question of calling the \"KillAccess\" procedure with the cell number as a parameter.<br/><br/>If anything needs further explanation, please ask.<br/><br/><pre><code><br/>' Grid of locations within one room<br/><br/>define game &lt;Grid Demo&gt;<br/><br/>\tasl-version &lt;350&gt;<br/>\t<br/>\tgametype singleplayer<br/>\t<br/>\tgame version &lt;1&#46;0&gt;<br/>\tgame author &lt;MaDbRiT&gt;<br/>\tgame copyright &lt;Â© 2005 AGB&gt;<br/>\tgame info &lt;Demo&gt;<br/>\t<br/>\tstart &lt;StartRoom&gt;<br/>\t<br/>\tstartscript &#123;<br/>\t\tdo &lt;MakeGrid&gt;  'This builds a 10 x 10 grid &#40;with hard boundaries&#41;<br/><br/>'  Calling 'KillAccess' procedure with the cell number as a parameter closes all<br/>'  &#40;N,S,E &amp; W&#41; entrances to the cell referenced&#46;<br/><br/>\t\tdo &lt;KillAccess&#40;1&#41;&gt;<br/>\t\tdo &lt;KillAccess&#40;3&#41;&gt;\t\t<br/>\t\tfor &lt;x;5;11&gt; do &lt;KillAccess&#40;%x%&#41;&gt;<br/>\t\tfor &lt;x;20;26&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t<br/>\t\tfor &lt;x;28;30&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t<br/>\t\tfor &lt;x;42;62;10&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t<br/>\t\tfor &lt;x;44;84;10&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t<br/>\t\tfor &lt;x;82;83&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t<br/>\t\tfor &lt;x;46;47&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t<br/>\t\tfor &lt;x;49;50&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t<br/>\t\tdo &lt;KillAccess&#40;57&#41;&gt;\t\t<br/>\t\tfor &lt;x;66;70&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t<br/>\t\tdo &lt;KillAccess&#40;77&#41;&gt;\t\t<br/>\t\tdo &lt;KillAccess&#40;89&#41;&gt;<br/>\t\tfor &lt;x;96;99&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t\t<br/>\t<br/>'Open additional &#40;special&#41; Exits to south in Cell 95 and to north in cell 4\t<br/>'These are the entry to / exit from the gridroom maze<br/><br/>\tset &lt;grid&#91;95&#93;;2&gt;<br/>\tset &lt;grid&#91;4&#93;;10&gt;<br/>\t&#125;<br/><br/>\t<br/>end define<br/><br/>define room &lt;StartRoom&gt;<br/>\talias &lt;a small, gloomy room&#46;&gt;<br/>\tlook &lt;The room is completely bare and featureless&#46;&gt;<br/>\tnorth &#123;<br/>\t\tset &lt;gridPos;95&gt;<br/>\t\tdo &lt;makeExits&gt;<br/>\t\tgoto &lt;gridroom&gt;<br/>\t&#125;<br/>\t<br/>end define<br/><br/>define room &lt;exitroom&gt;<br/>\talias &lt;the treasure chamber&gt;<br/>\tlook &lt;Its a bit dark and spooky&#46;&gt;<br/>\tsouth &#123;<br/>\t\tset &lt;gridPos;4&gt;<br/>\t\tdo &lt;makeExits&gt;<br/>\t\tgoto &lt;gridroom&gt;<br/>\t&#125;\t<br/>end define<br/><br/><br/>define room &lt;GridRoom&gt;<br/>\tscript &#123;<br/>'\t\tmsg &lt;DEBUG&#58; Exit code for this &#40;%gridPos%&#41; room is = %grid&#91;gridPos&#93;%&gt;<br/>\t&#125;<br/>\talias &lt;a maze of seemingly identical corridors&gt;<br/>\t<br/>\tcommand &lt;north&gt; &#123;<br/>\t\tset &lt;gridPos;%gridPos%-10&gt;<br/>\t\tif &#40;%gridpos%&lt;&gt;-6&#41; then &#123;<br/>\t\t\tdo &lt;makeExits&gt;<br/>\t\t\tgoto &lt;GridRoom&gt;<br/>\t\t&#125;<br/>\t\telse goto &lt;exitroom&gt;<br/>\t&#125;<br/><br/>\tcommand &lt;south&gt; &#123;<br/>\t\tset &lt;gridPos;%gridPos%+10&gt;<br/>\t\tif &#40;%gridpos%&lt;&gt;105&#41; then &#123;<br/>\t\t\tdo &lt;makeExits&gt;<br/>\t\t\tgoto &lt;GridRoom&gt;<br/>\t\t&#125;<br/>\t\telse goto &lt;startroom&gt;<br/>\t&#125;<br/><br/>\tcommand &lt;east&gt; &#123;<br/>\t\tset &lt;gridPos;%gridPos%+1&gt;<br/>\t\tdo &lt;makeExits&gt;<br/>\t\tgoto &lt;GridRoom&gt;<br/>\t&#125;<br/><br/>\tcommand &lt;west&gt; &#123;<br/>\t\tset &lt;gridPos;%gridPos%-1&gt;<br/>\t\tdo &lt;makeExits&gt;<br/>\t\tgoto &lt;GridRoom&gt;<br/>\t&#125;\t<br/>\t<br/>end define<br/><br/>define room &lt;dummy&gt;<br/><br/>end define<br/><br/>define procedure &lt;MakeGrid&gt;<br/>\t\tset numeric &lt;gridPos;0&gt;<br/><br/>'  ** Set Basic boundaries of 10 x 10 grid<br/><br/>'  ** Set exit north OFF for top row of grid\t\t<br/>\t\tfor &lt;i;1;10&gt; &#123;<br/>\t\t\tset numeric &lt;grid&#91;i&#93;;1&gt;<br/>\t\t&#125;<br/><br/>'  ** Set exit south OFF for bottom row of grid\t\t<br/>\t\tfor &lt;i;91;100&gt; &#123;<br/>\t\t\tset numeric &lt;grid&#91;i&#93;;4&gt;<br/>\t\t&#125;\t\t<br/>\t\t<br/>'  ** Set exit east OFF for right row of grid\t\t<br/>\t\tfor &lt;i;10;100;10&gt; &#123;<br/>\t\t\tset numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+2&gt;<br/>\t\t&#125;<br/><br/>'  ** Set exit west OFF for left of grid\t\t<br/>\t\tfor &lt;i;1;91;10&gt; &#123;<br/>\t\t\tset numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+8&gt;<br/>\t\t&#125;<br/>end define<br/><br/>define procedure &lt;makeExits&gt;<br/>\tcreate exit north &lt;GridRoom;dummy&gt;<br/>\tcreate exit east &lt;GridRoom;dummy&gt;<br/>\tcreate exit south &lt;GridRoom;dummy&gt;<br/>\tcreate exit west &lt;GridRoom;dummy&gt;<br/>\tset numeric &lt;gridVal;%grid&#91;gridPos&#93;%&gt;<br/>\t<br/>\tif &#40;%gridVal% &gt;7&#41; then &#123;<br/>\t\tcreate exit west &lt;GridRoom;&gt;<br/>\t\tset &lt;gridVal;%gridVal%-8&gt;<br/>\t&#125;<br/>\t<br/>\tif &#40;%gridVal% &gt;3&#41; then &#123;<br/>\t\tcreate exit south &lt;GridRoom;&gt;<br/>\t\tset &lt;gridVal;%gridVal%-4&gt;<br/>\t&#125;<br/>\t<br/>\tif &#40;%gridVal% &gt;1&#41; then &#123;<br/>\t\tcreate exit east &lt;GridRoom;&gt;<br/>\t\tset &lt;gridVal;%gridVal%-2&gt;<br/>\t&#125;<br/>\t<br/>\tif &#40;%gridVal% &gt;0&#41; then &#123;<br/>\t\tcreate exit north &lt;GridRoom;&gt;<br/>\t&#125;\t<br/>end define<br/><br/>define procedure &lt;KillAccess&gt;<br/>\tset numeric &lt;BlockBox;$parameter&#40;1&#41;$&gt;<br/><br/>'  In this procedure we need to modify the boxes bordering the chosen box<br/>'  rather than the box to be blocked itself&#46; First up is to block the <br/>'  exit to this box from the south&#46;<br/>'  Move down a row&#46;<br/>\tset &lt;BlockBox;%BlockBox%+10&gt;<br/>\tset numeric &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;<br/>\tif &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;     ' Discard WEST bit<br/>\tif &#40;%ExitsBlocked% &gt;3&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt;     ' Discard SOUTH bit\t<br/>\tif &#40;%ExitsBlocked% &gt;1&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-2&gt;     ' Discard EAST bit\t<br/>\tif &#40;%ExitsBlocked% =0&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+1&gt; ' Set NORTH bit if not set\t<br/>\t<br/>'Now the access from the north&#46;<br/>\tset &lt;BlockBox;%BlockBox%-20&gt; <br/>'  IF Makes sure we're not in the top row, &#40;we can ignore this stage if we are&#41; <br/>\tif &#40;%BlockBox%&gt;10&#41; then &#123;  <br/>\t\tset &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;\t<br/>\t\tif &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;     ' Discard WEST bit<br/>\t\tif &#40;%ExitsBlocked% &lt;4&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+4&gt; ' Set SOUTH bit if not set\t<br/>\t&#125;<br/><br/>'Now the access from the west<br/>\tset &lt;BlockBox;%BlockBox%+9&gt;<br/>\t<br/>\tmake sure we aren't in the leftmost columnn<br/>\tset numeric &lt;isLeftCol;0&gt;<br/>\tfor &lt;i;10;100;10&gt; &#123;<br/>\t\tif &#40;%BlockBox%=%i%&#41; then set &lt;isLeftCol;1&gt;\t<br/>\t&#125;<br/>\tif &#40;%isLeftCol%&lt;&gt;1&#41; then &#123;<br/>\t\tset &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;\t\t<br/>\t\tif &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;     ' Discard WEST bit<br/>\t\tif &#40;%ExitsBlocked% &gt;3&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt;     ' Discard SOUTH bit\t\t<br/>\t\tif &#40;%ExitsBlocked% &lt;2&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+2&gt; ' Set EAST bit if not set\t<br/>\t&#125;<br/><br/>'Now the access from the east<br/>\tset &lt;BlockBox;%BlockBox%+2&gt;<br/>\t<br/>\tmake sure we aren't in the rightmost columnn<br/>\tset numeric &lt;isRightCol;0&gt;<br/>\tfor &lt;i;1;91;10&gt; &#123;<br/>\t\tif &#40;%BlockBox%=%i%&#41; then set &lt;isRightCol;1&gt;\t<br/>\t&#125;<br/>\tif &#40;%isRightCol%&lt;&gt;1&#41; then &#123;<br/>\t\tset &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;\t\t<br/>\t\tif &#40;%ExitsBlocked% &lt;8&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+8&gt; ' Set WEST bit if not set\t<br/>\t&#125;<br/>\t<br/>end define<br/><br/>define text &lt;intro&gt;<br/>A demonstration of using one Quest room to represent a grid of locations, in this example a 10 x 10 &#40;100 cell&#41; grid, with lots of the cells inaccessible to form a &quot;maze&quot;<br/>end define<br/><br/>define text &lt;win&gt;<br/>Enter win text here<br/>end define<br/><br/>define text &lt;lose&gt;<br/>Enter lose text here<br/>end define</code></pre><br/><br/>Oh yeah - this is a cut n'paste runnable providing you are careful to make sure the word-wrap from the firum doesn't mess it up<br/><br/>Al (MaDbRiT)",
      "PostDate": "2005-06-23T12:13:45+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6486",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "TWIMC\n\nIf anyone thinks its would be useful to them,  I could re-work the grid/maze code as given in the example to be a Quest Library at some time in the future.\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "TWIMC<br/><br/>If anyone thinks its would be useful to them,  I could re-work the grid/maze code as given in the example to be a Quest Library at some time in the future.<br/><br/>Al (MaDbRiT)",
      "PostDate": "2005-06-23T12:20:30+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6487",
      "UserId": 0,
      "Username": "Elexxorine",
      "UserAvatar": null,
      "UserGravatar": "a220ee44d8fe2f07029cf1f61b98bf40",
      "EditableText": "i kinda don't get it, its the arrays..... <!-- s:cry: --><img src=\"{SMILIES_PATH}/icon_cry.gif\" alt=\":cry:\" title=\"Crying or Very Sad\" /><!-- s:cry: --> help",
      "EditableFormat": "bbcode",
      "HTML": "i kinda don't get it, its the arrays..... <!-- s:cry: --><img src=\"{SMILIES_PATH}/icon_cry.gif\" alt=\":cry:\" title=\"Crying or Very Sad\" /><!-- s:cry: --> help",
      "PostDate": "2005-06-23T13:19:37+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6488",
      "UserId": 0,
      "Username": "steve the gaming guy",
      "UserAvatar": null,
      "UserGravatar": "6577a0affcb6ea711c75baf052ffd08a",
      "EditableText": "Wow, that's amazing.  I don't fully understand it yet...but still amazing.  I will try to incorporate that once I understand how to change the numbers based on my needs.\nIf I have trouble with it, I'll ask again!\n\nThanks!",
      "EditableFormat": "bbcode",
      "HTML": "Wow, that's amazing.  I don't fully understand it yet...but still amazing.  I will try to incorporate that once I understand how to change the numbers based on my needs.<br/>If I have trouble with it, I'll ask again!<br/><br/>Thanks!",
      "PostDate": "2005-06-23T16:22:42+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6489",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Elexxorine wrote:\n\n[quote:24hfrhtl]I kinda don't get it, its the arrays.....  help[/quote:24hfrhtl]\n\nIt isn't that bad really. <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->\n\nI've used a numeric array called 'grid', which has 100 elements,  each of these corresponds to a cell in the 10 x 10 grid of cells illustrated at the top of my post.\n\ne.g. grid[14] refers to the cell numbered 14 in my drawing.\n\nWith a grid system, I need to store the information regarding exits for each cell in the grid.  Look at cell 14, it has exits North, West &amp; East (but not south).\n\nBy using a bit of binary thinking, I store in the array grid[14] one number which represents all four exits. I build the number like so:\n\nstart from 0\nif there is an exit north  +1\nif there is an exit east +2\nif there is an exit south +4\nif there is an exit west +8\n\nSo the resulting number for the exits in cell 14 is stored in the grid array, by setting grid[14] = 11.\n\nThis means the exits for all 100 cells (potentially 300 odd exits) are stored in an array of 100 numbers.  The array is therefore just a simple numeric array, with each element containing a number between 0 and 15.\n\nIf you need explanations of how the binary bit for the exits works - that's a whole different topic.\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Elexxorine wrote:<br/><br/><blockquote><p>I kinda don't get it, its the arrays.....  help</p></blockquote><br/><br/>It isn't that bad really. <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --><br/><br/>I've used a numeric array called 'grid', which has 100 elements,  each of these corresponds to a cell in the 10 x 10 grid of cells illustrated at the top of my post.<br/><br/>e.g. grid[14] refers to the cell numbered 14 in my drawing.<br/><br/>With a grid system, I need to store the information regarding exits for each cell in the grid.  Look at cell 14, it has exits North, West &amp; East (but not south).<br/><br/>By using a bit of binary thinking, I store in the array grid[14] one number which represents all four exits. I build the number like so:<br/><br/>start from 0<br/>if there is an exit north  +1<br/>if there is an exit east +2<br/>if there is an exit south +4<br/>if there is an exit west +8<br/><br/>So the resulting number for the exits in cell 14 is stored in the grid array, by setting grid[14] = 11.<br/><br/>This means the exits for all 100 cells (potentially 300 odd exits) are stored in an array of 100 numbers.  The array is therefore just a simple numeric array, with each element containing a number between 0 and 15.<br/><br/>If you need explanations of how the binary bit for the exits works - that's a whole different topic.<br/><br/>Al (MaDbRiT)",
      "PostDate": "2005-06-23T17:14:10+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6493",
      "UserId": 0,
      "Username": "steve the gaming guy",
      "UserAvatar": null,
      "UserGravatar": "6577a0affcb6ea711c75baf052ffd08a",
      "EditableText": "Hmmm, I've been looking this over and I thought I had it until about part way through this section.  I'm sort of understanding the KillAccess (1), etc... all the way up until 30.\n\n\n[code:2pn7wjce]\n\n\t\tdo &lt;KillAccess&#40;1&#41;&gt;\n\t\tdo &lt;KillAccess&#40;3&#41;&gt;\t\t\n\t\tfor &lt;x;5;11&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\n\t\tfor &lt;x;20;26&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t\n\t\tfor &lt;x;28;30&gt; do &lt;KillAccess&#40;%x%&#41;&gt;[/code:2pn7wjce]\n\n....but then I don't understand why you go from 42 to 62 and throw a 10 in there...\n\n\t\t[code:2pn7wjce]\n\t\tfor &lt;x;42;62;10&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\n[/code:2pn7wjce]\n\n....same here but in regards to the 84, why wasn't it like the original rows where you wrote 20-26 as 20;26.  Couldn't it have been written 82;83?  \t\n\t[code:2pn7wjce]\n\t\tfor &lt;x;44;84;10&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t\n\t\tfor &lt;x;82;83&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t[/code:2pn7wjce]\n\nI was trying to create my code based on this and I just don't really know where to start because I don't know what it means.",
      "EditableFormat": "bbcode",
      "HTML": "Hmmm, I've been looking this over and I thought I had it until about part way through this section.  I'm sort of understanding the KillAccess (1), etc... all the way up until 30.<br/><br/><br/><pre><code><br/><br/>\t\tdo &lt;KillAccess&#40;1&#41;&gt;<br/>\t\tdo &lt;KillAccess&#40;3&#41;&gt;\t\t<br/>\t\tfor &lt;x;5;11&gt; do &lt;KillAccess&#40;%x%&#41;&gt;<br/>\t\tfor &lt;x;20;26&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t<br/>\t\tfor &lt;x;28;30&gt; do &lt;KillAccess&#40;%x%&#41;&gt;</code></pre><br/><br/>....but then I don't understand why you go from 42 to 62 and throw a 10 in there...<br/><br/>\t\t<pre><code><br/>\t\tfor &lt;x;42;62;10&gt; do &lt;KillAccess&#40;%x%&#41;&gt;<br/></code></pre><br/><br/>....same here but in regards to the 84, why wasn't it like the original rows where you wrote 20-26 as 20;26.  Couldn't it have been written 82;83?  \t<br/>\t<pre><code><br/>\t\tfor &lt;x;44;84;10&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t<br/>\t\tfor &lt;x;82;83&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\t\t</code></pre><br/><br/>I was trying to create my code based on this and I just don't really know where to start because I don't know what it means.",
      "PostDate": "2005-06-23T21:33:59+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6495",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Steve wrote;\n\n[quote:36ztbkt7]....but then I don't understand why you go from 42 to 62 and throw a 10 in there...[/quote:36ztbkt7]\n\n(in respect of this code)\n\n[code:36ztbkt7]  for &lt;x;42;62;10&gt; do &lt;KillAccess&#40;%x%&#41;&gt; [/code:36ztbkt7]\n\nit's because I don't want ALL the cells from 42 thru 62 to be disabled.\n\nWith a for loop, there is an optional third parameter known as STEP.. an example will make this clearer\n\n[code:36ztbkt7]for &lt;x;42;62&gt; do &lt;KillAccess&#40;%x%&#41;&gt; [/code:36ztbkt7]\n\nI'm sure you know that in this case KillAccess will be called with 42 as a parameter, then 43 then 44 and so on until it reaches 62 - at which point the loop will end. However if we include the third STEP parameter, say of 10 like so...\n\n[code:36ztbkt7]for &lt;x;42;62;10&gt; do &lt;KillAccess&#40;%x%&#41;&gt; [/code:36ztbkt7]\n\nat each iteration the counter (x) is incremented by 10, the STEP specified, so in fact  'KillAccess' will be called with 42 as a parameter, then 52 then finally 62 and the loop ends.  If you look at my diagram you will see how this makes sense.  I'm using both styles of for loops to cover all the cells I want to \"block\" with as little code as possible.\n\nAs a matter of fact, in a 'for loop' you can specify negative values as a STEP, have your START higher than your END and count backwards if you need to as well, but that's by the by.   <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> \n\nHope this helps.\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Steve wrote;<br/><br/><blockquote><p>....but then I don't understand why you go from 42 to 62 and throw a 10 in there...</p></blockquote><br/><br/>(in respect of this code)<br/><br/><pre><code>  for &lt;x;42;62;10&gt; do &lt;KillAccess&#40;%x%&#41;&gt; </code></pre><br/><br/>it's because I don't want ALL the cells from 42 thru 62 to be disabled.<br/><br/>With a for loop, there is an optional third parameter known as STEP.. an example will make this clearer<br/><br/><pre><code>for &lt;x;42;62&gt; do &lt;KillAccess&#40;%x%&#41;&gt; </code></pre><br/><br/>I'm sure you know that in this case KillAccess will be called with 42 as a parameter, then 43 then 44 and so on until it reaches 62 - at which point the loop will end. However if we include the third STEP parameter, say of 10 like so...<br/><br/><pre><code>for &lt;x;42;62;10&gt; do &lt;KillAccess&#40;%x%&#41;&gt; </code></pre><br/><br/>at each iteration the counter (x) is incremented by 10, the STEP specified, so in fact  'KillAccess' will be called with 42 as a parameter, then 52 then finally 62 and the loop ends.  If you look at my diagram you will see how this makes sense.  I'm using both styles of for loops to cover all the cells I want to \"block\" with as little code as possible.<br/><br/>As a matter of fact, in a 'for loop' you can specify negative values as a STEP, have your START higher than your END and count backwards if you need to as well, but that's by the by.   <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> <br/><br/>Hope this helps.<br/><br/>Al (MaDbRiT)",
      "PostDate": "2005-06-23T22:45:36+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6507",
      "UserId": 0,
      "Username": "Elexxorine",
      "UserAvatar": null,
      "UserGravatar": "a220ee44d8fe2f07029cf1f61b98bf40",
      "EditableText": "can you make me a general code for the array: like putting bits explaining each and every bit so i know what to put in myself.... sorry it's confusing.... <!-- s:roll: --><img src=\"{SMILIES_PATH}/icon_rolleyes.gif\" alt=\":roll:\" title=\"Rolling Eyes\" /><!-- s:roll: -->",
      "EditableFormat": "bbcode",
      "HTML": "can you make me a general code for the array: like putting bits explaining each and every bit so i know what to put in myself.... sorry it's confusing.... <!-- s:roll: --><img src=\"{SMILIES_PATH}/icon_rolleyes.gif\" alt=\":roll:\" title=\"Rolling Eyes\" /><!-- s:roll: -->",
      "PostDate": "2005-06-24T11:08:06+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6508",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Elexxorine asked;\n\n[quote:3rdaekbo]can you make me a general code for the array[/quote:3rdaekbo]\n\nSorry, I don't really understand what you mean by a 'general code'. Arrays are just a general purpose coding construct to be used however we as coders see fit.  \n\nThe array I'm using in the above code really is nothing more than an absolutely \"bog-standard\" numeric array. I'm doing some rather more advanced stuff in terms of what I'm storing in the array and how I'm using it to represent rooms, but that is more to do with [i:3rdaekbo]creative application of [/i:3rdaekbo]the basic 'array' construct, rather than anything to do with 'how to use arrays' in general.\n\nAsking for a 'general code' for the array construct is a bit like asking 'how do I use a computer?', it invites the response 'how do you use it to do what?' because an Array is a multi purpose tool, just like a computer.\n\nI'll try to explain what an array is, and hopefully the penny will drop!\n\nFirst of all, you need to understand what a variable is - I'm fairly sure you must, but just in case.\n\nA variable is a named storage space for a literal (either numeric or a string)\n\nSo by doing this\n\n[code:3rdaekbo]set numeric &lt;myvariable;10&gt;[/code:3rdaekbo]\n\nwe assign the name 'myvariable' to a storage space and in that space store the number 10.  We can then read the stored value (10) back by way of the variable name, or indeed change (vary) it. If you like visualising this, think of a large box, with the name 'myvariable' written on it containing 10 'wotsits'.\n\nKey fact: Variables exist to give us a way to assign meaningful names to storage space.\n\nNow sometimes you need a whole lot of similar variables.  Lets assume you have 50 bottles in your game and each one has a different amount of beer in it.  You could have 50 variables, named 'bottle1',  bottle2, bottle3 and so on to store the amounts of beer in each.  However if you want to (say) add up how much beer you have in total, the code becomes  horrendous to read, e.g.\n\n[code:3rdaekbo]set numeric &lt;totalBeer;%bottle1% + %bottle2% + %bottle3%+ %bottle2% + %bottle3%+ %bottle2% + %bottle3%+ %bottle4% + %bottle5%+ %bottle6% + %bottle6%+ %bottle8% + %bottle9%+ %bottle10% + %bottle11%+ %bottle12% + %bottle13%+ %bottle14% + %bottle15%+ %bottle16% + %bottle17%+ %bottle18% + %bottle19%+ %bottle20% + %bottle21%+ %bottle22% + %bottle23%+ %bottle24% + %bottle25%+ %bottle26% + %bottle27%+ %bottle28% + %bottle29%+ %bottle30% + %bottle31%+ %bottle32% + %bottle33%+ %bottle34% + %bottle35%+ %bottle36% + %bottle37+ %bottle38% + %bottle39%\n+ %bottle40% + %bottle41%+ %bottle42% + %bottle43%+ %bottle44% + %bottle45%+ %bottle46% + %bottle47%+ %bottle48% + %bottle49%+ %bottle50%&gt;[/code:3rdaekbo]\n\nThere has to be a better way, right? Well there is and it's using an array.\n\nGoing back to our simple variable 'box' imagine we put dividers into it so that it could hold 50 beer bottles and write the name BOTTLES on the side of the box.  We then number each of the 50 compartments in the box with a number, starting from 1 and ending at 50.\n\nAn array works like that divided box.  We can use each of the compartments as a seperate variable called 'bottles[n]' - where 'n' is the number of the compartment in the box we want to work with.\n\nThis pays off when we want to work with all the bottles - as in finding the total beer in them, instead of that horrible long chain addition code we have above we can do this...\n\n[code:3rdaekbo]for &lt;n;1;50&gt; &#123;\nset numeric &lt;totalbeer;%totalbeer% + %bottles&#91;n&#93;%&gt;\n&#125;[/code:3rdaekbo]\n\nThat's the beauty of arrays, you can use a loop to generate the index number (n) and it makes for much less (and much neater!) code.\n\nImagine you needed to find which of the beer bottles had the most beer in them... if they were individual variables that would be a horrible job requiring loads of error prone if-then tests, with an array you can do it in one loop...\n\n[code:3rdaekbo]\nset numeric &lt;mostBeer;0&gt;\nset numeric &lt;maxBeer;0&gt;\nfor &lt;n;1;50&gt; &#123;\nif &#40;%bottles&#91;n&#93;% &gt;%maxbeer%&#41; then &#123;\n   set numeric &lt;maxBeer;%bottles&#91;n&#93;%&gt;\n   set numeric &lt;mostbeer;%n%&gt;\n&#125;\n&#125;\n\n'This code will return the array index of the fullest bottle in the variable 'mostbeer'&#46;\n[/code:3rdaekbo]\n\nThe above ought to explain what arrays are, and how they can be useful to us as coders.  Exactly what uses we put them to is down to individual taste and ability.\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Elexxorine asked;<br/><br/><blockquote><p>can you make me a general code for the array</p></blockquote><br/><br/>Sorry, I don't really understand what you mean by a 'general code'. Arrays are just a general purpose coding construct to be used however we as coders see fit.  <br/><br/>The array I'm using in the above code really is nothing more than an absolutely \"bog-standard\" numeric array. I'm doing some rather more advanced stuff in terms of what I'm storing in the array and how I'm using it to represent rooms, but that is more to do with <span style=\"font-style:italic;\">creative application of </span>the basic 'array' construct, rather than anything to do with 'how to use arrays' in general.<br/><br/>Asking for a 'general code' for the array construct is a bit like asking 'how do I use a computer?', it invites the response 'how do you use it to do what?' because an Array is a multi purpose tool, just like a computer.<br/><br/>I'll try to explain what an array is, and hopefully the penny will drop!<br/><br/>First of all, you need to understand what a variable is - I'm fairly sure you must, but just in case.<br/><br/>A variable is a named storage space for a literal (either numeric or a string)<br/><br/>So by doing this<br/><br/><pre><code>set numeric &lt;myvariable;10&gt;</code></pre><br/><br/>we assign the name 'myvariable' to a storage space and in that space store the number 10.  We can then read the stored value (10) back by way of the variable name, or indeed change (vary) it. If you like visualising this, think of a large box, with the name 'myvariable' written on it containing 10 'wotsits'.<br/><br/>Key fact: Variables exist to give us a way to assign meaningful names to storage space.<br/><br/>Now sometimes you need a whole lot of similar variables.  Lets assume you have 50 bottles in your game and each one has a different amount of beer in it.  You could have 50 variables, named 'bottle1',  bottle2, bottle3 and so on to store the amounts of beer in each.  However if you want to (say) add up how much beer you have in total, the code becomes  horrendous to read, e.g.<br/><br/><pre><code>set numeric &lt;totalBeer;%bottle1% + %bottle2% + %bottle3%+ %bottle2% + %bottle3%+ %bottle2% + %bottle3%+ %bottle4% + %bottle5%+ %bottle6% + %bottle6%+ %bottle8% + %bottle9%+ %bottle10% + %bottle11%+ %bottle12% + %bottle13%+ %bottle14% + %bottle15%+ %bottle16% + %bottle17%+ %bottle18% + %bottle19%+ %bottle20% + %bottle21%+ %bottle22% + %bottle23%+ %bottle24% + %bottle25%+ %bottle26% + %bottle27%+ %bottle28% + %bottle29%+ %bottle30% + %bottle31%+ %bottle32% + %bottle33%+ %bottle34% + %bottle35%+ %bottle36% + %bottle37+ %bottle38% + %bottle39%<br/>+ %bottle40% + %bottle41%+ %bottle42% + %bottle43%+ %bottle44% + %bottle45%+ %bottle46% + %bottle47%+ %bottle48% + %bottle49%+ %bottle50%&gt;</code></pre><br/><br/>There has to be a better way, right? Well there is and it's using an array.<br/><br/>Going back to our simple variable 'box' imagine we put dividers into it so that it could hold 50 beer bottles and write the name BOTTLES on the side of the box.  We then number each of the 50 compartments in the box with a number, starting from 1 and ending at 50.<br/><br/>An array works like that divided box.  We can use each of the compartments as a seperate variable called 'bottles[n]' - where 'n' is the number of the compartment in the box we want to work with.<br/><br/>This pays off when we want to work with all the bottles - as in finding the total beer in them, instead of that horrible long chain addition code we have above we can do this...<br/><br/><pre><code>for &lt;n;1;50&gt; &#123;<br/>set numeric &lt;totalbeer;%totalbeer% + %bottles&#91;n&#93;%&gt;<br/>&#125;</code></pre><br/><br/>That's the beauty of arrays, you can use a loop to generate the index number (n) and it makes for much less (and much neater!) code.<br/><br/>Imagine you needed to find which of the beer bottles had the most beer in them... if they were individual variables that would be a horrible job requiring loads of error prone if-then tests, with an array you can do it in one loop...<br/><br/><pre><code><br/>set numeric &lt;mostBeer;0&gt;<br/>set numeric &lt;maxBeer;0&gt;<br/>for &lt;n;1;50&gt; &#123;<br/>if &#40;%bottles&#91;n&#93;% &gt;%maxbeer%&#41; then &#123;<br/>   set numeric &lt;maxBeer;%bottles&#91;n&#93;%&gt;<br/>   set numeric &lt;mostbeer;%n%&gt;<br/>&#125;<br/>&#125;<br/><br/>'This code will return the array index of the fullest bottle in the variable 'mostbeer'&#46;<br/></code></pre><br/><br/>The above ought to explain what arrays are, and how they can be useful to us as coders.  Exactly what uses we put them to is down to individual taste and ability.<br/><br/>Al (MaDbRiT)",
      "PostDate": "2005-06-24T13:00:28+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6509",
      "UserId": 0,
      "Username": "Elexxorine",
      "UserAvatar": null,
      "UserGravatar": "a220ee44d8fe2f07029cf1f61b98bf40",
      "EditableText": "ok i get arrays, there like a labled 'box' of variables, now can you go back and explain the logic of the maze (like the 0,1,2,4,8 thing) and also do you use 'n' like in your expaample in the real code?\n\n(ps. going to alton towers for weekend, be back on monday.... <!-- s:D --><img src=\"{SMILIES_PATH}/icon_e_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> )",
      "EditableFormat": "bbcode",
      "HTML": "ok i get arrays, there like a labled 'box' of variables, now can you go back and explain the logic of the maze (like the 0,1,2,4,8 thing) and also do you use 'n' like in your expaample in the real code?<br/><br/>(ps. going to alton towers for weekend, be back on monday.... <!-- s:D --><img src=\"{SMILIES_PATH}/icon_e_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> )",
      "PostDate": "2005-06-24T13:23:25+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6513",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Elexxorine;\n\nDo I use n in the real code? It doesn't matter - in the example n is a place holder for either a literal or a variable..\n\nYou can use \n\n[code:11i4wh7d]%array&#91;34&#93;%[/code:11i4wh7d]  \n\nwhich will return the value of the 34th element, or you can use a variable, say 'myvariable' is currently = 25\n\n[code:11i4wh7d]%array&#91;myvariable&#93;% [/code:11i4wh7d]\n\nwhich will return the value of the 25th element.\n\nWhat you use is up to you and the circumstances! \n\n[quote:11i4wh7d]can you go back and explain the logic of the maze (like the 0,1,2,4,8 thing)[/quote:11i4wh7d]\n\nIt's making use of simple binary maths.\n\nWe are used to counting in decimal (units of ten) using the digits 0-9 and then repeating them.  In binary we only use the digits 0 &amp; 1. It's easier to see how this works with a diagram:\n\n[img:11i4wh7d]http&#58;//www&#46;meachersgroup&#46;com/football/bin1&#46;gif[/img:11i4wh7d]\n\nYou should be able to see from the above how 4 binary digits (a.k.a. bits) can hold any number from 0-15. The useful part in this case is that you can allocate a direction to each bit, and then decide that when that bit=1 the exit in the corresponding direction is open when it's 0 the exit is closed,  something like this:\n\n[img:11i4wh7d]http&#58;//www&#46;meachersgroup&#46;com/football/bin2&#46;gif[/img:11i4wh7d]\n\nIn the above example, we can read off that having exits North, East and West will generate the decimal number 11.  This single number is therefore holding the status of all four possible exit directions, so we can store that in the array element relevant to the location.\n\nLater on, when a player enters the location, a little bit of logic is used to break the stored number (11 in this case) back into its four binary bits and the exits are created accordingly.\n\nYou are not tied to just using four bits of course, I only needed four to accomplish this task, but you can keep going 'ad-infinitum', commonly you use 8 bits (a.k.a. a 'byte') and then multiple bytes.\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Elexxorine;<br/><br/>Do I use n in the real code? It doesn't matter - in the example n is a place holder for either a literal or a variable..<br/><br/>You can use <br/><br/><pre><code>%array&#91;34&#93;%</code></pre>  <br/><br/>which will return the value of the 34th element, or you can use a variable, say 'myvariable' is currently = 25<br/><br/><pre><code>%array&#91;myvariable&#93;% </code></pre><br/><br/>which will return the value of the 25th element.<br/><br/>What you use is up to you and the circumstances! <br/><br/><blockquote><p>can you go back and explain the logic of the maze (like the 0,1,2,4,8 thing)</p></blockquote><br/><br/>It's making use of simple binary maths.<br/><br/>We are used to counting in decimal (units of ten) using the digits 0-9 and then repeating them.  In binary we only use the digits 0 &amp; 1. It's easier to see how this works with a diagram:<br/><br/><img src=\"http&#58;//www&#46;meachersgroup&#46;com/football/bin1&#46;gif\" alt=\"\" /><br/><br/>You should be able to see from the above how 4 binary digits (a.k.a. bits) can hold any number from 0-15. The useful part in this case is that you can allocate a direction to each bit, and then decide that when that bit=1 the exit in the corresponding direction is open when it's 0 the exit is closed,  something like this:<br/><br/><img src=\"http&#58;//www&#46;meachersgroup&#46;com/football/bin2&#46;gif\" alt=\"\" /><br/><br/>In the above example, we can read off that having exits North, East and West will generate the decimal number 11.  This single number is therefore holding the status of all four possible exit directions, so we can store that in the array element relevant to the location.<br/><br/>Later on, when a player enters the location, a little bit of logic is used to break the stored number (11 in this case) back into its four binary bits and the exits are created accordingly.<br/><br/>You are not tied to just using four bits of course, I only needed four to accomplish this task, but you can keep going 'ad-infinitum', commonly you use 8 bits (a.k.a. a 'byte') and then multiple bytes.<br/><br/>Al (MaDbRiT)",
      "PostDate": "2005-06-24T16:18:59+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6517",
      "UserId": 0,
      "Username": "steve the gaming guy",
      "UserAvatar": null,
      "UserGravatar": "6577a0affcb6ea711c75baf052ffd08a",
      "EditableText": "Wow!\n\nI'm pretty sure I understand what your &lt;42;62;10&gt; means now!  Since blocks 42, 52 and 62 were in the same column (and 10 cells apart), you told the program that those three blocks were inaccessible.\n\nI'm just about completely understood on your arrays explanation.\n\nAnd the binary thing, Wow!  That's cool!  What I'm looking at in your diagram is that depending on your total number, tells the program where the exits are.  \nSo if your total was one (1), then your exit would be W.\nIf your total was fifteen (15), then all four exits are open.\nIf your total was nine (9), then your exits are N and W.\n...and so on...\n\nAm I right?",
      "EditableFormat": "bbcode",
      "HTML": "Wow!<br/><br/>I'm pretty sure I understand what your &lt;42;62;10&gt; means now!  Since blocks 42, 52 and 62 were in the same column (and 10 cells apart), you told the program that those three blocks were inaccessible.<br/><br/>I'm just about completely understood on your arrays explanation.<br/><br/>And the binary thing, Wow!  That's cool!  What I'm looking at in your diagram is that depending on your total number, tells the program where the exits are.  <br/>So if your total was one (1), then your exit would be W.<br/>If your total was fifteen (15), then all four exits are open.<br/>If your total was nine (9), then your exits are N and W.<br/>...and so on...<br/><br/>Am I right?",
      "PostDate": "2005-06-24T18:23:10+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6519",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Steve wrote:\n\n[quote:2smbvss8]I'm pretty sure I understand what your &lt;42;62;10&gt; means now! Since blocks 42, 52 and 62 were in the same column (and 10 cells apart), you told the program that those three blocks were inaccessible. [/quote:2smbvss8]\n\nExactly that <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->  The for loop's 'STEP' parameter is useful don't you think?\n\n[quote:2smbvss8]I'm just about completely understood on your arrays explanation. [/quote:2smbvss8]\n\ni've been using arrays so long I found it difficult to think back to when I didn't understand them either (Sinclair ZX81 era!) - I hoped my compartments in a box comparison would prove a decent explanation.\n\n[quote:2smbvss8]And the binary thing, Wow! That's cool! What I'm looking at in your diagram is that depending on your total number, tells the program where the exits are. \nSo if your total was one (1), then your exit would be W. \nIf your total was fifteen (15), then all four exits are open. \nIf your total was nine (9), then your exits are N and W. \n...and so on... \n\nAm I right?[/quote:2smbvss8]\n\nYou have the[b:2smbvss8] idea [/b:2smbvss8]'spot on' - of course it would have helped understanding considerably if I had not reversed the bit order for the exits in my explanation from that I use in the demo code  <!-- s:oops: --><img src=\"{SMILIES_PATH}/icon_redface.gif\" alt=\":oops:\" title=\"Embarrassed\" /><!-- s:oops: --> \n\nThat's what comes of answering things 'blind' when at work, I could have SWORN I'd done it the same way in both !\n\nI've now fixed that by making the diagram agree to the demo...\n\nTake a look again now and hopefully it'll make even better sense.\n\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Steve wrote:<br/><br/><blockquote><p>I'm pretty sure I understand what your &lt;42;62;10&gt; means now! Since blocks 42, 52 and 62 were in the same column (and 10 cells apart), you told the program that those three blocks were inaccessible. </p></blockquote><br/><br/>Exactly that <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->  The for loop's 'STEP' parameter is useful don't you think?<br/><br/><blockquote><p>I'm just about completely understood on your arrays explanation. </p></blockquote><br/><br/>i've been using arrays so long I found it difficult to think back to when I didn't understand them either (Sinclair ZX81 era!) - I hoped my compartments in a box comparison would prove a decent explanation.<br/><br/><blockquote><p>And the binary thing, Wow! That's cool! What I'm looking at in your diagram is that depending on your total number, tells the program where the exits are. <br/>So if your total was one (1), then your exit would be W. <br/>If your total was fifteen (15), then all four exits are open. <br/>If your total was nine (9), then your exits are N and W. <br/>...and so on... <br/><br/>Am I right?</p></blockquote><br/><br/>You have the<span style=\"font-weight:bold;\"> idea </span>'spot on' - of course it would have helped understanding considerably if I had not reversed the bit order for the exits in my explanation from that I use in the demo code  <!-- s:oops: --><img src=\"{SMILIES_PATH}/icon_redface.gif\" alt=\":oops:\" title=\"Embarrassed\" /><!-- s:oops: --> <br/><br/>That's what comes of answering things 'blind' when at work, I could have SWORN I'd done it the same way in both !<br/><br/>I've now fixed that by making the diagram agree to the demo...<br/><br/>Take a look again now and hopefully it'll make even better sense.<br/><br/><br/>Al (MaDbRiT)",
      "PostDate": "2005-06-24T19:49:59+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6522",
      "UserId": 0,
      "Username": "steve the gaming guy",
      "UserAvatar": null,
      "UserGravatar": "6577a0affcb6ea711c75baf052ffd08a",
      "EditableText": "Yes, thank you...very helpful...\n\nAlright, I'm trying to break this down.  In the following code from your demo, what does the 2 and 10 mean? \n\n[code:axnn4fo3]   set &lt;grid&#91;95&#93;;2&gt; \n   set &lt;grid&#91;4&#93;;10&gt; [/code:axnn4fo3]\n\nWhat does the -6 and 105 in this part of the code?\n\n[code:axnn4fo3]define room &lt;GridRoom&gt;\n   script &#123;\n'      msg &lt;DEBUG&#58; Exit code for this &#40;%gridPos%&#41; room is = %grid&#91;gridPos&#93;%&gt;\n   &#125;\n   alias &lt;a maze of seemingly identical corridors&gt;\n   \n   command &lt;north&gt; &#123;\n      set &lt;gridPos;%gridPos%-10&gt;\n      if &#40;%gridpos%&lt;&gt;-6&#41; then &#123;\n         do &lt;makeExits&gt;\n         goto &lt;GridRoom&gt;\n      &#125;\n      else goto &lt;exitroom&gt;\n   &#125;\n\n   command &lt;south&gt; &#123;\n      set &lt;gridPos;%gridPos%+10&gt;\n      if &#40;%gridpos%&lt;&gt;105&#41; then &#123;\n         do &lt;makeExits&gt;\n         goto &lt;GridRoom&gt;\n      &#125;\n      else goto &lt;startroom&gt;\n   &#125;\n\n[/code:axnn4fo3]\n\n\n...and the 91's?\n\n[code:axnn4fo3]\ndefine procedure &lt;MakeGrid&gt;\n      set numeric &lt;gridPos;0&gt;\n\n'  ** Set Basic boundaries of 10 x 10 grid\n\n'  ** Set exit north OFF for top row of grid      \n      for &lt;i;1;10&gt; &#123;\n         set numeric &lt;grid&#91;i&#93;;1&gt;\n      &#125;\n\n'  ** Set exit south OFF for bottom row of grid      \n      for &lt;i;91;100&gt; &#123;\n         set numeric &lt;grid&#91;i&#93;;4&gt;\n      &#125;      \n      \n'  ** Set exit east OFF for right row of grid      \n      for &lt;i;10;100;10&gt; &#123;\n         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+2&gt;\n      &#125;\n\n'  ** Set exit west OFF for left of grid      \n      for &lt;i;1;91;10&gt; &#123;\n         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+8&gt;\n      &#125;\nend define [/code:axnn4fo3]\n\nOk, that's all my asking for now.  I was really trying to figure this out to the very last detail.  I am currently working on an 8x8 grid and I just needed to see what these certain numbers were for as you entered them above. ..",
      "EditableFormat": "bbcode",
      "HTML": "Yes, thank you...very helpful...<br/><br/>Alright, I'm trying to break this down.  In the following code from your demo, what does the 2 and 10 mean? <br/><br/><pre><code>   set &lt;grid&#91;95&#93;;2&gt; <br/>   set &lt;grid&#91;4&#93;;10&gt; </code></pre><br/><br/>What does the -6 and 105 in this part of the code?<br/><br/><pre><code>define room &lt;GridRoom&gt;<br/>   script &#123;<br/>'      msg &lt;DEBUG&#58; Exit code for this &#40;%gridPos%&#41; room is = %grid&#91;gridPos&#93;%&gt;<br/>   &#125;<br/>   alias &lt;a maze of seemingly identical corridors&gt;<br/>   <br/>   command &lt;north&gt; &#123;<br/>      set &lt;gridPos;%gridPos%-10&gt;<br/>      if &#40;%gridpos%&lt;&gt;-6&#41; then &#123;<br/>         do &lt;makeExits&gt;<br/>         goto &lt;GridRoom&gt;<br/>      &#125;<br/>      else goto &lt;exitroom&gt;<br/>   &#125;<br/><br/>   command &lt;south&gt; &#123;<br/>      set &lt;gridPos;%gridPos%+10&gt;<br/>      if &#40;%gridpos%&lt;&gt;105&#41; then &#123;<br/>         do &lt;makeExits&gt;<br/>         goto &lt;GridRoom&gt;<br/>      &#125;<br/>      else goto &lt;startroom&gt;<br/>   &#125;<br/><br/></code></pre><br/><br/><br/>...and the 91's?<br/><br/><pre><code><br/>define procedure &lt;MakeGrid&gt;<br/>      set numeric &lt;gridPos;0&gt;<br/><br/>'  ** Set Basic boundaries of 10 x 10 grid<br/><br/>'  ** Set exit north OFF for top row of grid      <br/>      for &lt;i;1;10&gt; &#123;<br/>         set numeric &lt;grid&#91;i&#93;;1&gt;<br/>      &#125;<br/><br/>'  ** Set exit south OFF for bottom row of grid      <br/>      for &lt;i;91;100&gt; &#123;<br/>         set numeric &lt;grid&#91;i&#93;;4&gt;<br/>      &#125;      <br/>      <br/>'  ** Set exit east OFF for right row of grid      <br/>      for &lt;i;10;100;10&gt; &#123;<br/>         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+2&gt;<br/>      &#125;<br/><br/>'  ** Set exit west OFF for left of grid      <br/>      for &lt;i;1;91;10&gt; &#123;<br/>         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+8&gt;<br/>      &#125;<br/>end define </code></pre><br/><br/>Ok, that's all my asking for now.  I was really trying to figure this out to the very last detail.  I am currently working on an 8x8 grid and I just needed to see what these certain numbers were for as you entered them above. ..",
      "PostDate": "2005-06-25T04:38:43+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6523",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Steve\n\n[quote:3h159ik9]Alright, I'm trying to break this down. In the following code from your demo, what does the 2 and 10 mean? [/quote:3h159ik9]\n[code:3h159ik9]\n   set &lt;grid&#91;95&#93;;2&gt; \n   set &lt;grid&#91;4&#93;;10&gt; [/code:3h159ik9]\n\nWell if you look at the grid you will see that locations 95 and 4 are 'special' in the sense that as well as providing exits to the other locations INSIDE the grid, they also each have an exit to rooms OUTSIDE the grid.\n\nBecause early on I have blocked all the north exits in the top row cells of the grid and all the south exits in the bottom row (using loops) I now need to tweak the exits for these two rooms so that they 'show' ways out of the grid when the player is in the grid location.\n\nSo I set grid[95] to 2, which means only exit 2 (EAST) is blocked, effectively this opens the way south I had blocked when I set all the bottom row south exits off earlier.\n\nSetting grid[4] to 10 has a similar effect, it means only exits EAST and WEST are blocked, so effectively opens the exit north, out of the grid/maze.\n\nYou might notice that in my working example I'm using a set bit to indicate a BLOCKED exit not an OPEN one,  this is simply because there are less blocked exits than open ones so I have less setting of bits to do.  If your maze/grid has more blocked than open, you might prefer to reverse this and use the set bit to indicate open (as I did in my later binary explanation) it doesn't REALLY matter which way you go on this., I'm just lazy enough to use the shorter way wherever possible <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->\n\n[quote:3h159ik9]What does the -6 and 105 in this part of the code? [/quote:3h159ik9]\n\nWell when the player moves around in the grid, as he selects a direction his destination cell is calculated and exits are set accordingly.\n\nIf he is in grid[4] and chooses to go North (that special exit I created as explained above) up a row means his location will be -10 from where he is now (theoretically the impossible grid[-6]).\n\nSo here I test whether a move north would put the player in grid[-6] - if not then he isn't in grid[4] and we process a move around the grid as normal, if he IS in grid[4] then we move him to 'exitroom' because he has found a way out of the grid.\n\nSo grid[95] is the other 'special' location - the only bottom row cell that allows a move SOUTH, same idea in that down a row = +10, so a move south here would have the player in grid[105] (which we don't want.)\nInstead if he selects SOUTH from grid[95] we move him back to the start room.\n\n[quote:3h159ik9]...and the 91's? [/quote:3h159ik9]\n\nThese bits of code are just setting the overall boundaries of the 10 x 10 grid.  The remarks tell you what each one does as well as i am able to!\n e.g. \n\n[code:3h159ik9]\nfor &lt;i;91;100&gt; &#123; \nset numeric &lt;grid&#91;i&#93;;4&gt; \n&#125;[/code:3h159ik9]\n\n[code:3h159ik9] \nfor &lt;i;1;91;10&gt; &#123; \nset numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+8&gt; \n&#125;\n[/code:3h159ik9]\n\nthe first loop runs along the bottom row of the grid (every cell from 91 to 100) closing  the exit to the south for each location.\n\nthe second loop runs down the left hand column of cells (1-91 in steps of 10 = 1,11,21,31 etc) closing the exit WEST for each cell.\n\nThe other two are similar working on the top row to kill exits NORTH and the right hand column to kill exits EAST.  Basically I am preventing the player 'wandering off the grid or (worse) wandering off the EAST side of the grid and reappearing a row lower on the WEST side <!-- s;-) --><img src=\"{SMILIES_PATH}/icon_e_wink.gif\" alt=\";-)\" title=\"Wink\" /><!-- s;-) -->\n\n[quote:3h159ik9]I was really trying to figure this out to the very last detail. I am currently working on an 8x8 grid and I just needed to see what these certain numbers were for [/quote:3h159ik9]\n\nIf you are a 'smart cookie' you will quickly realise that as your required 8 x 8 grid would fit inside my 10 x 10 example, you can use all the 'tricky' code above unaltered. <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->\n\nAll you'd need to do is alter two of the four 'Basic Boundaries' to get a working 8 x 8 grid - and then pop in your 'killaccess' cells and tweak the exits to where you want them.\n\nThink about this...  Set all the exits SOUTH in row 8 of my grid to blocked - you have 8 usable rows...  Set all the exits EAST in column 8 of my grid to blocked and you have 8 usable columns - hey presto an 8 x 8 grid!\n\nsomething like this;\n\n\n[code:3h159ik9]'  ** Set Basic boundaries of 8 x 8 grid \n\n'  ** Set exit north OFF for top row of grid      \n      for &lt;i;1;8&gt; &#123; \n         set numeric &lt;grid&#91;i&#93;;1&gt; \n      &#125; \n\n'  ** Set exit south OFF for bottom row of grid      \n      for &lt;i;71;80&gt; &#123; \n         set numeric &lt;grid&#91;i&#93;;4&gt; \n      &#125;      \n      \n'  ** Set exit east OFF for right row of grid      \n      for &lt;i;8;78;10&gt; &#123; \n         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+2&gt; \n      &#125; \n\n'  ** Set exit west OFF for left of grid      \n      for &lt;i;1;71;10&gt; &#123; \n         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+8&gt; \n      &#125; [/code:3h159ik9]\n\nI altered all four, but actually you could safely ignore the loops related to the left and top rows, I did it for neatness. \n\nor-\n\nYou could just use KILLACCESS in a loop to block the bottom two rows of my 10x10 and the rightmost two columns - that'll give you an 8 x 8 grid too.\n\nStrictly speaking you'll be wasting a few array elements - but that's no big deal!\n\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Steve<br/><br/><blockquote><p>Alright, I'm trying to break this down. In the following code from your demo, what does the 2 and 10 mean? </p></blockquote><br/><pre><code><br/>   set &lt;grid&#91;95&#93;;2&gt; <br/>   set &lt;grid&#91;4&#93;;10&gt; </code></pre><br/><br/>Well if you look at the grid you will see that locations 95 and 4 are 'special' in the sense that as well as providing exits to the other locations INSIDE the grid, they also each have an exit to rooms OUTSIDE the grid.<br/><br/>Because early on I have blocked all the north exits in the top row cells of the grid and all the south exits in the bottom row (using loops) I now need to tweak the exits for these two rooms so that they 'show' ways out of the grid when the player is in the grid location.<br/><br/>So I set grid[95] to 2, which means only exit 2 (EAST) is blocked, effectively this opens the way south I had blocked when I set all the bottom row south exits off earlier.<br/><br/>Setting grid[4] to 10 has a similar effect, it means only exits EAST and WEST are blocked, so effectively opens the exit north, out of the grid/maze.<br/><br/>You might notice that in my working example I'm using a set bit to indicate a BLOCKED exit not an OPEN one,  this is simply because there are less blocked exits than open ones so I have less setting of bits to do.  If your maze/grid has more blocked than open, you might prefer to reverse this and use the set bit to indicate open (as I did in my later binary explanation) it doesn't REALLY matter which way you go on this., I'm just lazy enough to use the shorter way wherever possible <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --><br/><br/><blockquote><p>What does the -6 and 105 in this part of the code? </p></blockquote><br/><br/>Well when the player moves around in the grid, as he selects a direction his destination cell is calculated and exits are set accordingly.<br/><br/>If he is in grid[4] and chooses to go North (that special exit I created as explained above) up a row means his location will be -10 from where he is now (theoretically the impossible grid[-6]).<br/><br/>So here I test whether a move north would put the player in grid[-6] - if not then he isn't in grid[4] and we process a move around the grid as normal, if he IS in grid[4] then we move him to 'exitroom' because he has found a way out of the grid.<br/><br/>So grid[95] is the other 'special' location - the only bottom row cell that allows a move SOUTH, same idea in that down a row = +10, so a move south here would have the player in grid[105] (which we don't want.)<br/>Instead if he selects SOUTH from grid[95] we move him back to the start room.<br/><br/><blockquote><p>...and the 91's? </p></blockquote><br/><br/>These bits of code are just setting the overall boundaries of the 10 x 10 grid.  The remarks tell you what each one does as well as i am able to!<br/> e.g. <br/><br/><pre><code><br/>for &lt;i;91;100&gt; &#123; <br/>set numeric &lt;grid&#91;i&#93;;4&gt; <br/>&#125;</code></pre><br/><br/><pre><code> <br/>for &lt;i;1;91;10&gt; &#123; <br/>set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+8&gt; <br/>&#125;<br/></code></pre><br/><br/>the first loop runs along the bottom row of the grid (every cell from 91 to 100) closing  the exit to the south for each location.<br/><br/>the second loop runs down the left hand column of cells (1-91 in steps of 10 = 1,11,21,31 etc) closing the exit WEST for each cell.<br/><br/>The other two are similar working on the top row to kill exits NORTH and the right hand column to kill exits EAST.  Basically I am preventing the player 'wandering off the grid or (worse) wandering off the EAST side of the grid and reappearing a row lower on the WEST side <!-- s;-) --><img src=\"{SMILIES_PATH}/icon_e_wink.gif\" alt=\";-)\" title=\"Wink\" /><!-- s;-) --><br/><br/><blockquote><p>I was really trying to figure this out to the very last detail. I am currently working on an 8x8 grid and I just needed to see what these certain numbers were for </p></blockquote><br/><br/>If you are a 'smart cookie' you will quickly realise that as your required 8 x 8 grid would fit inside my 10 x 10 example, you can use all the 'tricky' code above unaltered. <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --><br/><br/>All you'd need to do is alter two of the four 'Basic Boundaries' to get a working 8 x 8 grid - and then pop in your 'killaccess' cells and tweak the exits to where you want them.<br/><br/>Think about this...  Set all the exits SOUTH in row 8 of my grid to blocked - you have 8 usable rows...  Set all the exits EAST in column 8 of my grid to blocked and you have 8 usable columns - hey presto an 8 x 8 grid!<br/><br/>something like this;<br/><br/><br/><pre><code>'  ** Set Basic boundaries of 8 x 8 grid <br/><br/>'  ** Set exit north OFF for top row of grid      <br/>      for &lt;i;1;8&gt; &#123; <br/>         set numeric &lt;grid&#91;i&#93;;1&gt; <br/>      &#125; <br/><br/>'  ** Set exit south OFF for bottom row of grid      <br/>      for &lt;i;71;80&gt; &#123; <br/>         set numeric &lt;grid&#91;i&#93;;4&gt; <br/>      &#125;      <br/>      <br/>'  ** Set exit east OFF for right row of grid      <br/>      for &lt;i;8;78;10&gt; &#123; <br/>         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+2&gt; <br/>      &#125; <br/><br/>'  ** Set exit west OFF for left of grid      <br/>      for &lt;i;1;71;10&gt; &#123; <br/>         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+8&gt; <br/>      &#125; </code></pre><br/><br/>I altered all four, but actually you could safely ignore the loops related to the left and top rows, I did it for neatness. <br/><br/>or-<br/><br/>You could just use KILLACCESS in a loop to block the bottom two rows of my 10x10 and the rightmost two columns - that'll give you an 8 x 8 grid too.<br/><br/>Strictly speaking you'll be wasting a few array elements - but that's no big deal!<br/><br/><br/>Al (MaDbRiT)",
      "PostDate": "2005-06-25T09:47:46+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6524",
      "UserId": 0,
      "Username": "steve the gaming guy",
      "UserAvatar": null,
      "UserGravatar": "6577a0affcb6ea711c75baf052ffd08a",
      "EditableText": "Ok, here it is.  I have it start where you are dropped in at cell [35] marked in red in the center of the maze and there is only one exit the north at cell [5].  The other blue cell [48] is for later in the game where you re-enter the maze.  (I'll be working on that part later after I figure out how to get the maze itself working properly.  \nBelow, I've posted the latest version of the code and a picture of what it's supposed to be.\nSome of the maze works but eventually, it starts repeating in certain sections and then I get stuck.  \n\n[img:xz8pz4ii]http&#58;//img200&#46;echo&#46;cx/img200/9576/mazemap6ze&#46;jpg[/img:xz8pz4ii]\n\n\n[code:xz8pz4ii]' Grid of locations within one room \n\ndefine game &lt;Grid Demo&gt; \n\n   asl-version &lt;350&gt; \n    \n   gametype singleplayer \n    \n   game version &lt;1&#46;0&gt; \n   game author &lt;MaDbRiT&gt; \n   game copyright &lt;Â© 2005 AGB&gt; \n   game info &lt;Demo&gt; \n    \n   start &lt;StartRoom&gt; \n    \n   startscript &#123; \n      do &lt;MakeGrid&gt;  'This builds a 8 x 8 grid &#40;with hard boundaries&#41; \n\n'  Calling 'KillAccess' procedure with the cell number as a parameter \n\ncloses all \n'  &#40;N,S,E &amp; W&#41; entrances to the cell referenced&#46; \n\n      do &lt;KillAccess&#40;1&#41;&gt; \n      do &lt;KillAccess&#40;2&#41;&gt;\n      do &lt;KillAccess&#40;4&#41;&gt;       \n      for &lt;x;6;7&gt; do &lt;KillAccess&#40;%x%&#41;&gt; \n      do &lt;KillAccess&#40;9&#41;&gt;\n      do &lt;KillAccess&#40;12&#41;&gt;\n      do &lt;KillAccess&#40;19&#41;&gt;\n      for &lt;x;21;22&gt; do &lt;KillAccess&#40;%x%&#41;&gt;       \n      do &lt;KillAccess&#40;24&#41;&gt;\n      do &lt;KillAccess&#40;26&#41;&gt;\n      do &lt;KillAccess&#40;29&#41;&gt;\n      do &lt;KillAccess&#40;36&#41;&gt;\n      for &lt;x;39;42&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\n      do &lt;KillAccess&#40;46&#41;&gt; \n      do &lt;KillAccess&#40;50&#41;&gt;       \n      do &lt;KillAccess&#40;52&#41;&gt;       \n      do &lt;KillAccess&#40;56&#41;&gt; \n      do &lt;KillAccess&#40;62&#41;&gt;\n   \n'Open additional &#40;special&#41; Exits to south in Cell 95 and to north in \n\ncell 4    \n'These are the entry to / exit from the gridroom maze \n\n   set &lt;grid&#91;5&#93;;2&gt; \n   &#125; \n\n    \nend define \n\ndefine room &lt;StartRoom&gt;\n   alias &lt;a small, gloomy room&#46;&gt;\n   look &lt;The room is completely bare and featureless&#46;&gt;\n   north &#123;\n      set &lt;gridPos;27&gt;\n      do &lt;makeExits&gt;\n      goto &lt;gridroom&gt;\n   &#125;\n   south &#123;\n      set &lt;gridPos;43&gt;\n      do &lt;makeExits&gt;\n      goto &lt;gridroom&gt;\n   &#125;\n   west &#123;\n      set &lt;gridPos;34&gt; \n      do &lt;makeExits&gt;\n      goto &lt;gridroom&gt;\n   &#125;\n   \nend define \n\ndefine room &lt;DoorRoom&gt; \n   alias &lt;a small, gloomy room&#46;&gt; \n   look &lt;The room is completely bare and featureless except for a \n\nsingle door to the north&#46;&gt; \n\n    \nend define \n\n\ndefine room &lt;GridRoom&gt; \n   script &#123; \n'      msg &lt;DEBUG&#58; Exit code for this &#40;%gridPos%&#41; room is = \n\n%grid&#91;gridPos&#93;%&gt; \n   &#125; \n   alias &lt;a maze of seemingly identical corridors&gt; \n    \n   command &lt;north&gt; &#123; \n      set &lt;gridPos;%gridPos%-8&gt; \n      if &#40;%gridpos%&lt;&gt;-3&#41; then &#123; \n         do &lt;makeExits&gt; \n         goto &lt;GridRoom&gt; \n      &#125; \n      else goto &lt;exitroom&gt; \n   &#125; \n\n   command &lt;south&gt; &#123; \n      set &lt;gridPos;%gridPos%+8&gt; \n    '  if &#40;%gridpos%&lt;&gt;105&#41; then &#123; \n'\n'      &#125; \n'      else goto &lt;startroom&gt; \n         do &lt;makeExits&gt; \n         goto &lt;GridRoom&gt; \n   &#125; \n\n   command &lt;east&gt; &#123; \n      set &lt;gridPos;%gridPos%+1&gt; \n      do &lt;makeExits&gt; \n      goto &lt;GridRoom&gt; \n   &#125; \n\n   command &lt;west&gt; &#123; \n      set &lt;gridPos;%gridPos%-1&gt; \n      do &lt;makeExits&gt; \n      goto &lt;GridRoom&gt; \n   &#125;    \n    \nend define \n\ndefine room &lt;dummy&gt; \n\nend define \n\ndefine procedure &lt;MakeGrid&gt; \n      set numeric &lt;gridPos;0&gt; \n\n'  ** Set Basic boundaries of 10 x 10 grid \n\n'  ** Set exit north OFF for top row of grid       \n      for &lt;i;1;8&gt; &#123; \n         set numeric &lt;grid&#91;i&#93;;1&gt; \n      &#125; \n\n'  ** Set exit south OFF for bottom row of grid       \n      for &lt;i;71;80&gt; &#123; \n         set numeric &lt;grid&#91;i&#93;;4&gt; \n      &#125;       \n       \n'  ** Set exit east OFF for right row of grid       \n      for &lt;i;8;78;10&gt; &#123; \n         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+2&gt; \n      &#125; \n\n'  ** Set exit west OFF for left of grid       \n      for &lt;i;1;71;10&gt; &#123; \n         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+8&gt; \n      &#125; \nend define \n\ndefine procedure &lt;makeExits&gt; \n   create exit north &lt;GridRoom;dummy&gt; \n   create exit east &lt;GridRoom;dummy&gt; \n   create exit south &lt;GridRoom;dummy&gt; \n   create exit west &lt;GridRoom;dummy&gt; \n   set numeric &lt;gridVal;%grid&#91;gridPos&#93;%&gt; \n    \n   if &#40;%gridVal% &gt;7&#41; then &#123; \n      create exit west &lt;GridRoom;&gt; \n      set &lt;gridVal;%gridVal%-8&gt; \n   &#125; \n    \n   if &#40;%gridVal% &gt;3&#41; then &#123; \n      create exit south &lt;GridRoom;&gt; \n      set &lt;gridVal;%gridVal%-4&gt; \n   &#125; \n    \n   if &#40;%gridVal% &gt;1&#41; then &#123; \n      create exit east &lt;GridRoom;&gt; \n      set &lt;gridVal;%gridVal%-2&gt; \n   &#125; \n    \n   if &#40;%gridVal% &gt;0&#41; then &#123; \n      create exit north &lt;GridRoom;&gt; \n   &#125;    \nend define \n\ndefine procedure &lt;KillAccess&gt; \n   set numeric &lt;BlockBox;$parameter&#40;1&#41;$&gt; \n\n'  In this procedure we need to modify the boxes bordering the chosen \n\nbox \n'  rather than the box to be blocked itself&#46; First up is to block the \n'  exit to this box from the south&#46; \n'  Move down a row&#46; \n   set &lt;BlockBox;%BlockBox%+8&gt; \n   set numeric &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt; \n   if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;    \n\n ' Discard WEST bit \n   if &#40;%ExitsBlocked% &gt;3&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt;    \n\n ' Discard SOUTH bit    \n   if &#40;%ExitsBlocked% &gt;1&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-2&gt;    \n\n ' Discard EAST bit    \n   if &#40;%ExitsBlocked% =0&#41; then set \n\n&lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+1&gt; ' Set NORTH bit if not set    \n    \n'Now the access from the north&#46; \n   set &lt;BlockBox;%BlockBox%-16&gt; \n'  IF Makes sure we're not in the top row, &#40;we can ignore this stage \n\nif we are&#41; \n   if &#40;%BlockBox%&gt;8&#41; then &#123;  \n      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;    \n      if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt; \n\n    ' Discard WEST bit \n      if &#40;%ExitsBlocked% &lt;4&#41; then set \n\n&lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+4&gt; ' Set SOUTH bit if not set    \n   &#125; \n\n'Now the access from the west \n   set &lt;BlockBox;%BlockBox%+7&gt; \n    \n   make sure we aren't in the leftmost columnn \n   set numeric &lt;isLeftCol;0&gt; \n   for &lt;i;8;78;10&gt; &#123; \n      if &#40;%BlockBox%=%i%&#41; then set &lt;isLeftCol;1&gt;    \n   &#125; \n   if &#40;%isLeftCol%&lt;&gt;1&#41; then &#123; \n      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;       \n      if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt; \n\n    ' Discard WEST bit \n      if &#40;%ExitsBlocked% &gt;3&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt; \n\n    ' Discard SOUTH bit       \n      if &#40;%ExitsBlocked% &lt;2&#41; then set \n\n&lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+2&gt; ' Set EAST bit if not set    \n   &#125; \n\n'Now the access from the east \n   set &lt;BlockBox;%BlockBox%+2&gt; \n    \n   make sure we aren't in the rightmost columnn \n   set numeric &lt;isRightCol;0&gt; \n   for &lt;i;1;71;8&gt; &#123; \n      if &#40;%BlockBox%=%i%&#41; then set &lt;isRightCol;1&gt;    \n   &#125; \n   if &#40;%isRightCol%&lt;&gt;1&#41; then &#123; \n      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;       \n      if &#40;%ExitsBlocked% &lt;8&#41; then set \n\n\n&lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+8&gt; ' Set WEST bit if not set    \n   &#125; \n    \nend define \n\ndefine text &lt;intro&gt; \nA demonstration of using one Quest room to represent a grid of \n\nlocations, in this example a 8 x 8 &#40;64 cell&#41; grid, with lots of the \n\ncells inaccessible to form a &quot;maze&quot; \nend define \n\ndefine text &lt;win&gt; \nEnter win text here \nend define \n\ndefine text &lt;lose&gt; \nEnter lose text here \nend define[/code:xz8pz4ii]",
      "EditableFormat": "bbcode",
      "HTML": "Ok, here it is.  I have it start where you are dropped in at cell [35] marked in red in the center of the maze and there is only one exit the north at cell [5].  The other blue cell [48] is for later in the game where you re-enter the maze.  (I'll be working on that part later after I figure out how to get the maze itself working properly.  <br/>Below, I've posted the latest version of the code and a picture of what it's supposed to be.<br/>Some of the maze works but eventually, it starts repeating in certain sections and then I get stuck.  <br/><br/><img src=\"http&#58;//img200&#46;echo&#46;cx/img200/9576/mazemap6ze&#46;jpg\" alt=\"\" /><br/><br/><br/><pre><code>' Grid of locations within one room <br/><br/>define game &lt;Grid Demo&gt; <br/><br/>   asl-version &lt;350&gt; <br/>    <br/>   gametype singleplayer <br/>    <br/>   game version &lt;1&#46;0&gt; <br/>   game author &lt;MaDbRiT&gt; <br/>   game copyright &lt;Â© 2005 AGB&gt; <br/>   game info &lt;Demo&gt; <br/>    <br/>   start &lt;StartRoom&gt; <br/>    <br/>   startscript &#123; <br/>      do &lt;MakeGrid&gt;  'This builds a 8 x 8 grid &#40;with hard boundaries&#41; <br/><br/>'  Calling 'KillAccess' procedure with the cell number as a parameter <br/><br/>closes all <br/>'  &#40;N,S,E &amp; W&#41; entrances to the cell referenced&#46; <br/><br/>      do &lt;KillAccess&#40;1&#41;&gt; <br/>      do &lt;KillAccess&#40;2&#41;&gt;<br/>      do &lt;KillAccess&#40;4&#41;&gt;       <br/>      for &lt;x;6;7&gt; do &lt;KillAccess&#40;%x%&#41;&gt; <br/>      do &lt;KillAccess&#40;9&#41;&gt;<br/>      do &lt;KillAccess&#40;12&#41;&gt;<br/>      do &lt;KillAccess&#40;19&#41;&gt;<br/>      for &lt;x;21;22&gt; do &lt;KillAccess&#40;%x%&#41;&gt;       <br/>      do &lt;KillAccess&#40;24&#41;&gt;<br/>      do &lt;KillAccess&#40;26&#41;&gt;<br/>      do &lt;KillAccess&#40;29&#41;&gt;<br/>      do &lt;KillAccess&#40;36&#41;&gt;<br/>      for &lt;x;39;42&gt; do &lt;KillAccess&#40;%x%&#41;&gt;<br/>      do &lt;KillAccess&#40;46&#41;&gt; <br/>      do &lt;KillAccess&#40;50&#41;&gt;       <br/>      do &lt;KillAccess&#40;52&#41;&gt;       <br/>      do &lt;KillAccess&#40;56&#41;&gt; <br/>      do &lt;KillAccess&#40;62&#41;&gt;<br/>   <br/>'Open additional &#40;special&#41; Exits to south in Cell 95 and to north in <br/><br/>cell 4    <br/>'These are the entry to / exit from the gridroom maze <br/><br/>   set &lt;grid&#91;5&#93;;2&gt; <br/>   &#125; <br/><br/>    <br/>end define <br/><br/>define room &lt;StartRoom&gt;<br/>   alias &lt;a small, gloomy room&#46;&gt;<br/>   look &lt;The room is completely bare and featureless&#46;&gt;<br/>   north &#123;<br/>      set &lt;gridPos;27&gt;<br/>      do &lt;makeExits&gt;<br/>      goto &lt;gridroom&gt;<br/>   &#125;<br/>   south &#123;<br/>      set &lt;gridPos;43&gt;<br/>      do &lt;makeExits&gt;<br/>      goto &lt;gridroom&gt;<br/>   &#125;<br/>   west &#123;<br/>      set &lt;gridPos;34&gt; <br/>      do &lt;makeExits&gt;<br/>      goto &lt;gridroom&gt;<br/>   &#125;<br/>   <br/>end define <br/><br/>define room &lt;DoorRoom&gt; <br/>   alias &lt;a small, gloomy room&#46;&gt; <br/>   look &lt;The room is completely bare and featureless except for a <br/><br/>single door to the north&#46;&gt; <br/><br/>    <br/>end define <br/><br/><br/>define room &lt;GridRoom&gt; <br/>   script &#123; <br/>'      msg &lt;DEBUG&#58; Exit code for this &#40;%gridPos%&#41; room is = <br/><br/>%grid&#91;gridPos&#93;%&gt; <br/>   &#125; <br/>   alias &lt;a maze of seemingly identical corridors&gt; <br/>    <br/>   command &lt;north&gt; &#123; <br/>      set &lt;gridPos;%gridPos%-8&gt; <br/>      if &#40;%gridpos%&lt;&gt;-3&#41; then &#123; <br/>         do &lt;makeExits&gt; <br/>         goto &lt;GridRoom&gt; <br/>      &#125; <br/>      else goto &lt;exitroom&gt; <br/>   &#125; <br/><br/>   command &lt;south&gt; &#123; <br/>      set &lt;gridPos;%gridPos%+8&gt; <br/>    '  if &#40;%gridpos%&lt;&gt;105&#41; then &#123; <br/>'<br/>'      &#125; <br/>'      else goto &lt;startroom&gt; <br/>         do &lt;makeExits&gt; <br/>         goto &lt;GridRoom&gt; <br/>   &#125; <br/><br/>   command &lt;east&gt; &#123; <br/>      set &lt;gridPos;%gridPos%+1&gt; <br/>      do &lt;makeExits&gt; <br/>      goto &lt;GridRoom&gt; <br/>   &#125; <br/><br/>   command &lt;west&gt; &#123; <br/>      set &lt;gridPos;%gridPos%-1&gt; <br/>      do &lt;makeExits&gt; <br/>      goto &lt;GridRoom&gt; <br/>   &#125;    <br/>    <br/>end define <br/><br/>define room &lt;dummy&gt; <br/><br/>end define <br/><br/>define procedure &lt;MakeGrid&gt; <br/>      set numeric &lt;gridPos;0&gt; <br/><br/>'  ** Set Basic boundaries of 10 x 10 grid <br/><br/>'  ** Set exit north OFF for top row of grid       <br/>      for &lt;i;1;8&gt; &#123; <br/>         set numeric &lt;grid&#91;i&#93;;1&gt; <br/>      &#125; <br/><br/>'  ** Set exit south OFF for bottom row of grid       <br/>      for &lt;i;71;80&gt; &#123; <br/>         set numeric &lt;grid&#91;i&#93;;4&gt; <br/>      &#125;       <br/>       <br/>'  ** Set exit east OFF for right row of grid       <br/>      for &lt;i;8;78;10&gt; &#123; <br/>         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+2&gt; <br/>      &#125; <br/><br/>'  ** Set exit west OFF for left of grid       <br/>      for &lt;i;1;71;10&gt; &#123; <br/>         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+8&gt; <br/>      &#125; <br/>end define <br/><br/>define procedure &lt;makeExits&gt; <br/>   create exit north &lt;GridRoom;dummy&gt; <br/>   create exit east &lt;GridRoom;dummy&gt; <br/>   create exit south &lt;GridRoom;dummy&gt; <br/>   create exit west &lt;GridRoom;dummy&gt; <br/>   set numeric &lt;gridVal;%grid&#91;gridPos&#93;%&gt; <br/>    <br/>   if &#40;%gridVal% &gt;7&#41; then &#123; <br/>      create exit west &lt;GridRoom;&gt; <br/>      set &lt;gridVal;%gridVal%-8&gt; <br/>   &#125; <br/>    <br/>   if &#40;%gridVal% &gt;3&#41; then &#123; <br/>      create exit south &lt;GridRoom;&gt; <br/>      set &lt;gridVal;%gridVal%-4&gt; <br/>   &#125; <br/>    <br/>   if &#40;%gridVal% &gt;1&#41; then &#123; <br/>      create exit east &lt;GridRoom;&gt; <br/>      set &lt;gridVal;%gridVal%-2&gt; <br/>   &#125; <br/>    <br/>   if &#40;%gridVal% &gt;0&#41; then &#123; <br/>      create exit north &lt;GridRoom;&gt; <br/>   &#125;    <br/>end define <br/><br/>define procedure &lt;KillAccess&gt; <br/>   set numeric &lt;BlockBox;$parameter&#40;1&#41;$&gt; <br/><br/>'  In this procedure we need to modify the boxes bordering the chosen <br/><br/>box <br/>'  rather than the box to be blocked itself&#46; First up is to block the <br/>'  exit to this box from the south&#46; <br/>'  Move down a row&#46; <br/>   set &lt;BlockBox;%BlockBox%+8&gt; <br/>   set numeric &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt; <br/>   if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;    <br/><br/> ' Discard WEST bit <br/>   if &#40;%ExitsBlocked% &gt;3&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt;    <br/><br/> ' Discard SOUTH bit    <br/>   if &#40;%ExitsBlocked% &gt;1&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-2&gt;    <br/><br/> ' Discard EAST bit    <br/>   if &#40;%ExitsBlocked% =0&#41; then set <br/><br/>&lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+1&gt; ' Set NORTH bit if not set    <br/>    <br/>'Now the access from the north&#46; <br/>   set &lt;BlockBox;%BlockBox%-16&gt; <br/>'  IF Makes sure we're not in the top row, &#40;we can ignore this stage <br/><br/>if we are&#41; <br/>   if &#40;%BlockBox%&gt;8&#41; then &#123;  <br/>      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;    <br/>      if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt; <br/><br/>    ' Discard WEST bit <br/>      if &#40;%ExitsBlocked% &lt;4&#41; then set <br/><br/>&lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+4&gt; ' Set SOUTH bit if not set    <br/>   &#125; <br/><br/>'Now the access from the west <br/>   set &lt;BlockBox;%BlockBox%+7&gt; <br/>    <br/>   make sure we aren't in the leftmost columnn <br/>   set numeric &lt;isLeftCol;0&gt; <br/>   for &lt;i;8;78;10&gt; &#123; <br/>      if &#40;%BlockBox%=%i%&#41; then set &lt;isLeftCol;1&gt;    <br/>   &#125; <br/>   if &#40;%isLeftCol%&lt;&gt;1&#41; then &#123; <br/>      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;       <br/>      if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt; <br/><br/>    ' Discard WEST bit <br/>      if &#40;%ExitsBlocked% &gt;3&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt; <br/><br/>    ' Discard SOUTH bit       <br/>      if &#40;%ExitsBlocked% &lt;2&#41; then set <br/><br/>&lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+2&gt; ' Set EAST bit if not set    <br/>   &#125; <br/><br/>'Now the access from the east <br/>   set &lt;BlockBox;%BlockBox%+2&gt; <br/>    <br/>   make sure we aren't in the rightmost columnn <br/>   set numeric &lt;isRightCol;0&gt; <br/>   for &lt;i;1;71;8&gt; &#123; <br/>      if &#40;%BlockBox%=%i%&#41; then set &lt;isRightCol;1&gt;    <br/>   &#125; <br/>   if &#40;%isRightCol%&lt;&gt;1&#41; then &#123; <br/>      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;       <br/>      if &#40;%ExitsBlocked% &lt;8&#41; then set <br/><br/><br/>&lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+8&gt; ' Set WEST bit if not set    <br/>   &#125; <br/>    <br/>end define <br/><br/>define text &lt;intro&gt; <br/>A demonstration of using one Quest room to represent a grid of <br/><br/>locations, in this example a 8 x 8 &#40;64 cell&#41; grid, with lots of the <br/><br/>cells inaccessible to form a &quot;maze&quot; <br/>end define <br/><br/>define text &lt;win&gt; <br/>Enter win text here <br/>end define <br/><br/>define text &lt;lose&gt; <br/>Enter lose text here <br/>end define</code></pre>",
      "PostDate": "2005-06-26T14:21:00+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6525",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Steve:\n\nIn your alterations to my 10 x 10 grid code something has gone awry with your maths/logic and as posted above, you will get some very strange results that don't really match your illustration too well.\n\nRather than try and explain the wrong bits' - here's the code corrected to make it work:-\n\n[code:15bmn7zp]' Grid of locations within one room \n\ndefine game &lt;Grid Demo&gt; \n\n   asl-version &lt;350&gt; \n    \n   gametype singleplayer \n    \n   game version &lt;1&#46;0&gt; \n   game author &lt;MaDbRiT&gt; \n   game copyright &lt;Â© 2005 AGB&gt; \n   game info &lt;Demo&gt; \n    \n   start &lt;StartRoom&gt; \n    \n   startscript &#123; \n      do &lt;MakeGrid&gt;  'This builds a 8 x 8 grid &#40;with hard boundaries&#41; \n\n'  Calling 'KillAccess' procedure with the cell number as a parameter \n\ncloses all \n'  &#40;N,S,E &amp; W&#41; entrances to the cell referenced&#46; \n\n      do &lt;KillAccess&#40;1&#41;&gt; \n      do &lt;KillAccess&#40;2&#41;&gt; \n      do &lt;KillAccess&#40;4&#41;&gt;        \n      for &lt;x;6;7&gt; do &lt;KillAccess&#40;%x%&#41;&gt; \n      do &lt;KillAccess&#40;9&#41;&gt; \n      do &lt;KillAccess&#40;12&#41;&gt; \n      do &lt;KillAccess&#40;19&#41;&gt; \n      for &lt;x;21;22&gt; do &lt;KillAccess&#40;%x%&#41;&gt;        \n      do &lt;KillAccess&#40;24&#41;&gt; \n      do &lt;KillAccess&#40;26&#41;&gt; \n      do &lt;KillAccess&#40;29&#41;&gt; \n      do &lt;KillAccess&#40;36&#41;&gt; \n      for &lt;x;39;42&gt; do &lt;KillAccess&#40;%x%&#41;&gt; \n      do &lt;KillAccess&#40;46&#41;&gt; \n      do &lt;KillAccess&#40;50&#41;&gt;        \n      do &lt;KillAccess&#40;52&#41;&gt;        \n      do &lt;KillAccess&#40;56&#41;&gt; \n      do &lt;KillAccess&#40;62&#41;&gt; \n    \n'Open additional &#40;special&#41; Exits to north/south in Cell 5   \n\n'This is the exit from the gridroom maze \n\n   set &lt;grid&#91;5&#93;;10&gt; \n   &#125; \n\n    \nend define \n\ndefine room &lt;StartRoom&gt; \n   script &#123; \n      set &lt;gridPos;35&gt; \n      do &lt;makeExits&gt; \n      goto &lt;gridroom&gt; \n   &#125; \nend define \n\ndefine room &lt;DoorRoom&gt; \n   alias &lt;a small, gloomy room&#46;&gt; \n   look &lt;The room is completely bare and featureless except for a single door to the north&#46;&gt; \nend define \n\n\ndefine room &lt;GridRoom&gt; \n   script &#123; \n      msg &lt;DEBUG&#58; Exit code for this &#40;%gridPos%&#41; room is = %grid&#91;gridPos&#93;%&gt; \n   &#125; \n   alias &lt;a maze of seemingly identical corridors&gt; \n    \n   command &lt;north&gt; &#123; \n      set &lt;gridPos;%gridPos%-8&gt; \n      if &#40;%gridpos%&lt;&gt;5&#41; then &#123; \n         do &lt;makeExits&gt; \n         goto &lt;GridRoom&gt; \n      &#125; \n      else goto &lt;doorroom&gt; \n   &#125; \n\n   command &lt;south&gt; &#123; \n      set &lt;gridPos;%gridPos%+8&gt; \n      do &lt;makeExits&gt; \n      goto &lt;GridRoom&gt; \n   &#125; \n\n   command &lt;east&gt; &#123; \n      set &lt;gridPos;%gridPos%+1&gt; \n      do &lt;makeExits&gt; \n      goto &lt;GridRoom&gt; \n   &#125; \n\n   command &lt;west&gt; &#123; \n      set &lt;gridPos;%gridPos%-1&gt; \n      do &lt;makeExits&gt; \n      goto &lt;GridRoom&gt; \n   &#125;    \n    \nend define \n\ndefine room &lt;dummy&gt; \n\nend define \n\ndefine procedure &lt;MakeGrid&gt; \n      set numeric &lt;gridPos;0&gt; \n\n'  ** Set Basic boundaries of 8 x 8 grid \n\n'  ** Set exit north OFF for top row of grid        \n      for &lt;i;1;8&gt; &#123; \n         set numeric &lt;grid&#91;i&#93;;1&gt; \n      &#125; \n\n'  ** Set exit south OFF for bottom row of grid        \n      for &lt;i;57;64&gt; &#123; \n         set numeric &lt;grid&#91;i&#93;;4&gt; \n      &#125;        \n        \n'  ** Set exit east OFF for right row of grid        \n      for &lt;i;8;64;8&gt; &#123; \n         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+2&gt; \n      &#125; \n\n'  ** Set exit west OFF for left of grid        \n      for &lt;i;1;57;8&gt; &#123; \n         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+8&gt; \n      &#125; \nend define \n\ndefine procedure &lt;makeExits&gt; \n   create exit north &lt;GridRoom;dummy&gt; \n   create exit east &lt;GridRoom;dummy&gt; \n   create exit south &lt;GridRoom;dummy&gt; \n   create exit west &lt;GridRoom;dummy&gt; \n   set numeric &lt;gridVal;%grid&#91;gridPos&#93;%&gt; \n    \n   if &#40;%gridVal% &gt;7&#41; then &#123; \n      create exit west &lt;GridRoom;&gt; \n      set &lt;gridVal;%gridVal%-8&gt; \n   &#125; \n    \n   if &#40;%gridVal% &gt;3&#41; then &#123; \n      create exit south &lt;GridRoom;&gt; \n      set &lt;gridVal;%gridVal%-4&gt; \n   &#125; \n    \n   if &#40;%gridVal% &gt;1&#41; then &#123; \n      create exit east &lt;GridRoom;&gt; \n      set &lt;gridVal;%gridVal%-2&gt; \n   &#125; \n    \n   if &#40;%gridVal% &gt;0&#41; then &#123; \n      create exit north &lt;GridRoom;&gt; \n   &#125;    \nend define \n\ndefine procedure &lt;KillAccess&gt; \n   set numeric &lt;BlockBox;$parameter&#40;1&#41;$&gt; \n\n'  In this procedure we need to modify the boxes bordering the chosen box \n'  rather than the box to be blocked itself&#46; First up is to block the \n'  exit to this box from the south&#46; \n'  Move down a row&#46; \n   set &lt;BlockBox;%BlockBox%+8&gt; \n   set numeric &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt; \n   if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;    \n\n ' Discard WEST bit \n   if &#40;%ExitsBlocked% &gt;3&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt;    \n\n ' Discard SOUTH bit    \n   if &#40;%ExitsBlocked% &gt;1&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-2&gt;    \n\n ' Discard EAST bit    \n   if &#40;%ExitsBlocked% =0&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+1&gt; ' Set NORTH bit if not set    \n    \n'Now the access from the north&#46; \n   set &lt;BlockBox;%BlockBox%-16&gt; \n'  IF Makes sure we're not in the top row, &#40;we can ignore this stage if we are&#41; \n   if &#40;%BlockBox%&gt;8&#41; then &#123;  \n      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;    \n      if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt; \n\n    ' Discard WEST bit \n      if &#40;%ExitsBlocked% &lt;4&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+4&gt; ' Set SOUTH bit if not set    \n   &#125; \n\n'Now the access from the west \n   set &lt;BlockBox;%BlockBox%+7&gt; \n    \n   make sure we aren't in the leftmost columnn \n   set numeric &lt;isLeftCol;0&gt; \n   for &lt;i;8;64;8&gt; &#123; \n      if &#40;%BlockBox%=%i%&#41; then set &lt;isLeftCol;1&gt;    \n   &#125; \n   if &#40;%isLeftCol%&lt;&gt;1&#41; then &#123; \n      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;        \n      if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt; \n\n    ' Discard WEST bit \n      if &#40;%ExitsBlocked% &gt;3&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt; \n\n    ' Discard SOUTH bit        \n      if &#40;%ExitsBlocked% &lt;2&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+2&gt; ' Set EAST bit if not set    \n   &#125; \n\n'Now the access from the east \n   set &lt;BlockBox;%BlockBox%+2&gt; \n    \n   make sure we aren't in the rightmost columnn \n   set numeric &lt;isRightCol;0&gt; \n   for &lt;i;1;57;8&gt; &#123; \n      if &#40;%BlockBox%=%i%&#41; then set &lt;isRightCol;1&gt;    \n   &#125; \n   if &#40;%isRightCol%&lt;&gt;1&#41; then &#123; \n      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;        \n      if &#40;%ExitsBlocked% &lt;8&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+8&gt; ' Set WEST bit if not set    \n   &#125; \n    \nend define \n\ndefine text &lt;intro&gt; \nA demonstration of using one Quest room to represent a grid of locations, in this example a 8 x 8 &#40;64 cell&#41; grid, with lots of the cells inaccessible to form a &quot;maze&quot; \nend define \n\ndefine text &lt;win&gt; \nEnter win text here \nend define \n\ndefine text &lt;lose&gt; \nEnter lose text here \nend define[/code:15bmn7zp]\n\nThe most basic problem was the parts of the code that calculate the boundary cells, they were set for a 10 x 10 grid assuming two rows/columns would not be in use, as a result you renumbering your 8 x 8 grid 1-64 meant the offsets used were all over the place!  Essentially you altered some of my code for your 8 x 8 layout but not all of it. <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->\n\nAlso, you have dropped the 'player in the centre on the grid and tried to create more 'real' rooms that are inside the grid.  You don't need to do this (it is harder for a start!) so I reworked your entry and exit points too.\n\nI've put a little loop into the gridroom which tells you what cell you are in and what the exit code for that cell is - you can thus trundle about the now workking grid and check it against the map to see everything is as drawn.\n\nIf you need any help with further developing this idea, please ask.\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Steve:<br/><br/>In your alterations to my 10 x 10 grid code something has gone awry with your maths/logic and as posted above, you will get some very strange results that don't really match your illustration too well.<br/><br/>Rather than try and explain the wrong bits' - here's the code corrected to make it work:-<br/><br/><pre><code>' Grid of locations within one room <br/><br/>define game &lt;Grid Demo&gt; <br/><br/>   asl-version &lt;350&gt; <br/>    <br/>   gametype singleplayer <br/>    <br/>   game version &lt;1&#46;0&gt; <br/>   game author &lt;MaDbRiT&gt; <br/>   game copyright &lt;Â© 2005 AGB&gt; <br/>   game info &lt;Demo&gt; <br/>    <br/>   start &lt;StartRoom&gt; <br/>    <br/>   startscript &#123; <br/>      do &lt;MakeGrid&gt;  'This builds a 8 x 8 grid &#40;with hard boundaries&#41; <br/><br/>'  Calling 'KillAccess' procedure with the cell number as a parameter <br/><br/>closes all <br/>'  &#40;N,S,E &amp; W&#41; entrances to the cell referenced&#46; <br/><br/>      do &lt;KillAccess&#40;1&#41;&gt; <br/>      do &lt;KillAccess&#40;2&#41;&gt; <br/>      do &lt;KillAccess&#40;4&#41;&gt;        <br/>      for &lt;x;6;7&gt; do &lt;KillAccess&#40;%x%&#41;&gt; <br/>      do &lt;KillAccess&#40;9&#41;&gt; <br/>      do &lt;KillAccess&#40;12&#41;&gt; <br/>      do &lt;KillAccess&#40;19&#41;&gt; <br/>      for &lt;x;21;22&gt; do &lt;KillAccess&#40;%x%&#41;&gt;        <br/>      do &lt;KillAccess&#40;24&#41;&gt; <br/>      do &lt;KillAccess&#40;26&#41;&gt; <br/>      do &lt;KillAccess&#40;29&#41;&gt; <br/>      do &lt;KillAccess&#40;36&#41;&gt; <br/>      for &lt;x;39;42&gt; do &lt;KillAccess&#40;%x%&#41;&gt; <br/>      do &lt;KillAccess&#40;46&#41;&gt; <br/>      do &lt;KillAccess&#40;50&#41;&gt;        <br/>      do &lt;KillAccess&#40;52&#41;&gt;        <br/>      do &lt;KillAccess&#40;56&#41;&gt; <br/>      do &lt;KillAccess&#40;62&#41;&gt; <br/>    <br/>'Open additional &#40;special&#41; Exits to north/south in Cell 5   <br/><br/>'This is the exit from the gridroom maze <br/><br/>   set &lt;grid&#91;5&#93;;10&gt; <br/>   &#125; <br/><br/>    <br/>end define <br/><br/>define room &lt;StartRoom&gt; <br/>   script &#123; <br/>      set &lt;gridPos;35&gt; <br/>      do &lt;makeExits&gt; <br/>      goto &lt;gridroom&gt; <br/>   &#125; <br/>end define <br/><br/>define room &lt;DoorRoom&gt; <br/>   alias &lt;a small, gloomy room&#46;&gt; <br/>   look &lt;The room is completely bare and featureless except for a single door to the north&#46;&gt; <br/>end define <br/><br/><br/>define room &lt;GridRoom&gt; <br/>   script &#123; <br/>      msg &lt;DEBUG&#58; Exit code for this &#40;%gridPos%&#41; room is = %grid&#91;gridPos&#93;%&gt; <br/>   &#125; <br/>   alias &lt;a maze of seemingly identical corridors&gt; <br/>    <br/>   command &lt;north&gt; &#123; <br/>      set &lt;gridPos;%gridPos%-8&gt; <br/>      if &#40;%gridpos%&lt;&gt;5&#41; then &#123; <br/>         do &lt;makeExits&gt; <br/>         goto &lt;GridRoom&gt; <br/>      &#125; <br/>      else goto &lt;doorroom&gt; <br/>   &#125; <br/><br/>   command &lt;south&gt; &#123; <br/>      set &lt;gridPos;%gridPos%+8&gt; <br/>      do &lt;makeExits&gt; <br/>      goto &lt;GridRoom&gt; <br/>   &#125; <br/><br/>   command &lt;east&gt; &#123; <br/>      set &lt;gridPos;%gridPos%+1&gt; <br/>      do &lt;makeExits&gt; <br/>      goto &lt;GridRoom&gt; <br/>   &#125; <br/><br/>   command &lt;west&gt; &#123; <br/>      set &lt;gridPos;%gridPos%-1&gt; <br/>      do &lt;makeExits&gt; <br/>      goto &lt;GridRoom&gt; <br/>   &#125;    <br/>    <br/>end define <br/><br/>define room &lt;dummy&gt; <br/><br/>end define <br/><br/>define procedure &lt;MakeGrid&gt; <br/>      set numeric &lt;gridPos;0&gt; <br/><br/>'  ** Set Basic boundaries of 8 x 8 grid <br/><br/>'  ** Set exit north OFF for top row of grid        <br/>      for &lt;i;1;8&gt; &#123; <br/>         set numeric &lt;grid&#91;i&#93;;1&gt; <br/>      &#125; <br/><br/>'  ** Set exit south OFF for bottom row of grid        <br/>      for &lt;i;57;64&gt; &#123; <br/>         set numeric &lt;grid&#91;i&#93;;4&gt; <br/>      &#125;        <br/>        <br/>'  ** Set exit east OFF for right row of grid        <br/>      for &lt;i;8;64;8&gt; &#123; <br/>         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+2&gt; <br/>      &#125; <br/><br/>'  ** Set exit west OFF for left of grid        <br/>      for &lt;i;1;57;8&gt; &#123; <br/>         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+8&gt; <br/>      &#125; <br/>end define <br/><br/>define procedure &lt;makeExits&gt; <br/>   create exit north &lt;GridRoom;dummy&gt; <br/>   create exit east &lt;GridRoom;dummy&gt; <br/>   create exit south &lt;GridRoom;dummy&gt; <br/>   create exit west &lt;GridRoom;dummy&gt; <br/>   set numeric &lt;gridVal;%grid&#91;gridPos&#93;%&gt; <br/>    <br/>   if &#40;%gridVal% &gt;7&#41; then &#123; <br/>      create exit west &lt;GridRoom;&gt; <br/>      set &lt;gridVal;%gridVal%-8&gt; <br/>   &#125; <br/>    <br/>   if &#40;%gridVal% &gt;3&#41; then &#123; <br/>      create exit south &lt;GridRoom;&gt; <br/>      set &lt;gridVal;%gridVal%-4&gt; <br/>   &#125; <br/>    <br/>   if &#40;%gridVal% &gt;1&#41; then &#123; <br/>      create exit east &lt;GridRoom;&gt; <br/>      set &lt;gridVal;%gridVal%-2&gt; <br/>   &#125; <br/>    <br/>   if &#40;%gridVal% &gt;0&#41; then &#123; <br/>      create exit north &lt;GridRoom;&gt; <br/>   &#125;    <br/>end define <br/><br/>define procedure &lt;KillAccess&gt; <br/>   set numeric &lt;BlockBox;$parameter&#40;1&#41;$&gt; <br/><br/>'  In this procedure we need to modify the boxes bordering the chosen box <br/>'  rather than the box to be blocked itself&#46; First up is to block the <br/>'  exit to this box from the south&#46; <br/>'  Move down a row&#46; <br/>   set &lt;BlockBox;%BlockBox%+8&gt; <br/>   set numeric &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt; <br/>   if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;    <br/><br/> ' Discard WEST bit <br/>   if &#40;%ExitsBlocked% &gt;3&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt;    <br/><br/> ' Discard SOUTH bit    <br/>   if &#40;%ExitsBlocked% &gt;1&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-2&gt;    <br/><br/> ' Discard EAST bit    <br/>   if &#40;%ExitsBlocked% =0&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+1&gt; ' Set NORTH bit if not set    <br/>    <br/>'Now the access from the north&#46; <br/>   set &lt;BlockBox;%BlockBox%-16&gt; <br/>'  IF Makes sure we're not in the top row, &#40;we can ignore this stage if we are&#41; <br/>   if &#40;%BlockBox%&gt;8&#41; then &#123;  <br/>      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;    <br/>      if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt; <br/><br/>    ' Discard WEST bit <br/>      if &#40;%ExitsBlocked% &lt;4&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+4&gt; ' Set SOUTH bit if not set    <br/>   &#125; <br/><br/>'Now the access from the west <br/>   set &lt;BlockBox;%BlockBox%+7&gt; <br/>    <br/>   make sure we aren't in the leftmost columnn <br/>   set numeric &lt;isLeftCol;0&gt; <br/>   for &lt;i;8;64;8&gt; &#123; <br/>      if &#40;%BlockBox%=%i%&#41; then set &lt;isLeftCol;1&gt;    <br/>   &#125; <br/>   if &#40;%isLeftCol%&lt;&gt;1&#41; then &#123; <br/>      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;        <br/>      if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt; <br/><br/>    ' Discard WEST bit <br/>      if &#40;%ExitsBlocked% &gt;3&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt; <br/><br/>    ' Discard SOUTH bit        <br/>      if &#40;%ExitsBlocked% &lt;2&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+2&gt; ' Set EAST bit if not set    <br/>   &#125; <br/><br/>'Now the access from the east <br/>   set &lt;BlockBox;%BlockBox%+2&gt; <br/>    <br/>   make sure we aren't in the rightmost columnn <br/>   set numeric &lt;isRightCol;0&gt; <br/>   for &lt;i;1;57;8&gt; &#123; <br/>      if &#40;%BlockBox%=%i%&#41; then set &lt;isRightCol;1&gt;    <br/>   &#125; <br/>   if &#40;%isRightCol%&lt;&gt;1&#41; then &#123; <br/>      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;        <br/>      if &#40;%ExitsBlocked% &lt;8&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+8&gt; ' Set WEST bit if not set    <br/>   &#125; <br/>    <br/>end define <br/><br/>define text &lt;intro&gt; <br/>A demonstration of using one Quest room to represent a grid of locations, in this example a 8 x 8 &#40;64 cell&#41; grid, with lots of the cells inaccessible to form a &quot;maze&quot; <br/>end define <br/><br/>define text &lt;win&gt; <br/>Enter win text here <br/>end define <br/><br/>define text &lt;lose&gt; <br/>Enter lose text here <br/>end define</code></pre><br/><br/>The most basic problem was the parts of the code that calculate the boundary cells, they were set for a 10 x 10 grid assuming two rows/columns would not be in use, as a result you renumbering your 8 x 8 grid 1-64 meant the offsets used were all over the place!  Essentially you altered some of my code for your 8 x 8 layout but not all of it. <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --><br/><br/>Also, you have dropped the 'player in the centre on the grid and tried to create more 'real' rooms that are inside the grid.  You don't need to do this (it is harder for a start!) so I reworked your entry and exit points too.<br/><br/>I've put a little loop into the gridroom which tells you what cell you are in and what the exit code for that cell is - you can thus trundle about the now workking grid and check it against the map to see everything is as drawn.<br/><br/>If you need any help with further developing this idea, please ask.<br/><br/>Al (MaDbRiT)",
      "PostDate": "2005-06-26T19:12:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6559",
      "UserId": 0,
      "Username": "steve the gaming guy",
      "UserAvatar": null,
      "UserGravatar": "6577a0affcb6ea711c75baf052ffd08a",
      "EditableText": "That code works like a dream, MaDbRiT, but now Iâ€™m going to muddy up the waters some more.  &#61514;  I wanted to try a couple things with this.  In your code, when you finally reach the room with the door, you canâ€™t return south back into the maze.  So I thought if I put the south exit of the DoorRoom set to â€œGridRoomâ€, it would send me back into the maze.  After testing it, it seemed to work, however, if you go further into the maze and try to find the DoorRoom again, youâ€™ll get an error 9 and the game shuts down.  (Although it seems to be working currently)\n\nFurther, I wanted to make the room that you start out in different so people roaming through the maze would realize that theyâ€™re back to the room that they started in.  So in other words, I wanted them to get a description similar to â€œThis seems to be the room that you started from since you can see the open grate above youâ€.  Then of course, there should be an object in the room called â€œgrateâ€ so they can examine it if they chose to.\n\nFinally, I wanted to make three rooms [8, 49, 64] [b:f9s8j9v0](labeled as MonsterRoom, MonsterRoom2, and MonsterRoom3)[/b:f9s8j9v0]where a creature would randomly appear in.  The discussion of this general idea is in another recent thread but my question relates to the one above in reference to the DoorRoom.  Whether or not the creature is in the room, I want the player to be able to â€œnoticeâ€ that a creature had been in the room so these three rooms would have their own room descriptions similar to â€œIt appears that in this part of the maze, a creature has recently passed throughâ€\nWhen I began trying to create room 8, I received worse results than when I threw in the â€œGridRoomâ€ exit on the DoorRoom.  I couldnâ€™t even get an exit out of room 8.\n\nNow with all that being said, here is the mutilation of your previously working code trying to insert my own adjustments:\n\n[code:f9s8j9v0]\n' &quot;Grid Demo&quot;\n' Created with QDK 3&#46;53 - UNREGISTERED VERSION\n\ndefine game &lt;Grid Demo&gt;\n\tasl-version &lt;350&gt;\n\tgametype singleplayer\n\tstart &lt;StartRoom&gt;\n\tgame author &lt;MaDbRiT&gt;\n\tgame version &lt;1&#46;0&gt;\n\tgame copyright &lt;Â© 2005 AGB&gt;\n\tgame info &lt;Created with QDK 3&#46;53 - UNREGISTERED EVALUATION VERSION&#46;&gt;\n\tstartscript &#123;\n\t\tdo &lt;MakeGrid&gt;\n\t\tcloses all\n\t\tdo &lt;KillAccess&#40;1&#41;&gt;\n\t\tdo &lt;KillAccess&#40;2&#41;&gt;\n\t\tdo &lt;KillAccess&#40;4&#41;&gt;\n\t\tfor &lt;x;6;7&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\n\t\tdo &lt;KillAccess&#40;9&#41;&gt;\n\t\tdo &lt;KillAccess&#40;12&#41;&gt;\n\t\tdo &lt;KillAccess&#40;19&#41;&gt;\n\t\tfor &lt;x;21;22&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\n\t\tdo &lt;KillAccess&#40;24&#41;&gt;\n\t\tdo &lt;KillAccess&#40;26&#41;&gt;\n\t\tdo &lt;KillAccess&#40;29&#41;&gt;\n\t\tdo &lt;KillAccess&#40;36&#41;&gt;\n\t\tfor &lt;x;39;42&gt; do &lt;KillAccess&#40;%x%&#41;&gt;\n\t\tdo &lt;KillAccess&#40;46&#41;&gt;\n\t\tdo &lt;KillAccess&#40;50&#41;&gt;\n\t\tdo &lt;KillAccess&#40;52&#41;&gt;\n\t\tdo &lt;KillAccess&#40;56&#41;&gt;\n\t\tdo &lt;KillAccess&#40;62&#41;&gt;\n\t\tset &lt;grid&#91;5&#93;;10&gt;\n\t&#125;\nend define\n\ndefine synonyms\nend define\n\ndefine room &lt;StartRoom&gt;\n\tscript &#123;\n\t\tset &lt;gridPos;35&gt;\n\t\tdo &lt;makeExits&gt;\n\t\tgoto &lt;gridroom&gt;\n\t&#125;\nend define\n\ndefine room &lt;DoorRoom&gt;\n\talias &lt;a small, gloomy room&#46;&gt;\n\tlook &lt;The room is completely bare and featureless except for a single door to the north&#46;&gt;\n\tsouth &lt;GridRoom&gt;\n\tscript set &lt;gridPos;5&gt;\nend define\n\ndefine room &lt;GridRoom&gt;\n\talias &lt;a maze of seemingly identical corridors&gt;\n\tscript msg &lt;DEBUG&#58; Exit code for this &#40;%gridPos%&#41; room is = %grid&#91;gridPos&#93;%&gt;\n\tcommand &lt;north&gt; &#123;\n\t\tset &lt;gridPos;%gridPos%-8&gt;\n\t\tif &#40; %gridpos% &lt;&gt; 5 &#41; then &#123;\n\t\t\tdo &lt;makeExits&gt;\n\t\t\tgoto &lt;GridRoom&gt;\n\t\t&#125;\n\t\telse goto &lt;doorroom&gt;\n\t&#125;\n\tcommand &lt;south&gt; &#123;\n\t\tset &lt;gridPos;%gridPos%+8&gt;\n\t\tdo &lt;makeExits&gt;\n\t\tgoto &lt;GridRoom&gt;\n\t&#125;\n\tcommand &lt;east&gt; &#123;\n\t\tset &lt;gridPos;%gridPos%+1&gt;\n\t\tdo &lt;makeExits&gt;\n\t\tgoto &lt;GridRoom&gt;\n\t&#125;\n\tcommand &lt;west&gt; &#123;\n\t\tset &lt;gridPos;%gridPos%-1&gt;\n\t\tdo &lt;makeExits&gt;\n\t\tgoto &lt;GridRoom&gt;\n\t&#125;\nend define\n\ndefine room &lt;dummy&gt;\nend define\n\ndefine room &lt;DropRoom&gt;\n\tlook &lt;This is the part of the maze underneath the grate where Graham dropped in&#46;&gt;\n\tnorth &lt;GridRoom&gt;\n\tsouth &lt;GridRoom&gt;\n\twest &lt;GridRoom&gt;\n\tscript set &lt;gridPos; 35&gt;\nend define\n\ndefine room &lt;MonsterRoom&gt;\n\talias &lt;a maze of seemingly identical corridors&gt;\n\tlook &lt;In this area of the maze, it is evident that a creature has roamed through here&#46;&gt;\n\tsouth &lt;GridRoom&gt;\n\tscript set &lt;gridPos; 8&gt;\nend define\n\ndefine room &lt;MonsterRoom2&gt;\n\talias &lt;a maze of seemingly identical corridors&gt;\n\tlook &lt;In this area of the maze, it is evident that a creature has roamed through here&#46;&gt;\n\tsouth &lt;GridRoom&gt;\n\tscript set &lt;gridPos; 49&gt;\nend define\n\ndefine room &lt;MonsterRoom3&gt;\n\talias &lt;a maze of seemingly identical corridors&gt;\n\tlook &lt;In this area of the maze, it is evident that a creature has roamed through here&#46;&gt;\n\twest &lt;GridRoom&gt;\n\tscript set &lt;gridPos; 64&gt;\nend define\n\ndefine procedure &lt;MakeGrid&gt;\n\tset numeric &lt;gridPos;0&gt;\n\tfor &lt;i;1;8&gt; set numeric &lt;grid&#91;i&#93;;1&gt;\n\tfor &lt;i;57;64&gt; set numeric &lt;grid&#91;i&#93;;4&gt;\n\tfor &lt;i;8;64;8&gt; set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+2&gt;\n\tfor &lt;i;1;57;8&gt; set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+8&gt;\n\t\nend define\n\ndefine procedure &lt;makeExits&gt;\n\tcreate exit north &lt;GridRoom;dummy&gt;\n\tcreate exit east &lt;GridRoom;dummy&gt;\n\tcreate exit south &lt;GridRoom;dummy&gt;\n\tcreate exit west &lt;GridRoom;dummy&gt;\n\tset numeric &lt;gridVal;%grid&#91;gridPos&#93;%&gt;\n\tif &#40; %gridVal% &gt; 7 &#41; then &#123;\n\t\tcreate exit west &lt;GridRoom;&gt;\n\t\tset &lt;gridVal;%gridVal%-8&gt;\n\t&#125;\n\tif &#40; %gridVal% &gt; 3 &#41; then &#123;\n\t\tcreate exit south &lt;GridRoom;&gt;\n\t\tset &lt;gridVal;%gridVal%-4&gt;\n\t&#125;\n\tif &#40; %gridVal% &gt; 1 &#41; then &#123;\n\t\tcreate exit east &lt;GridRoom;&gt;\n\t\tset &lt;gridVal;%gridVal%-2&gt;\n\t&#125;\n\tif &#40; %gridVal% &gt; 0 &#41; then &#123;\n\t\tcreate exit north &lt;GridRoom;&gt;\n\t&#125;\n\t\nend define\n\ndefine procedure &lt;KillAccess&gt;\n\tset numeric &lt;BlockBox;$parameter&#40;1&#41;$&gt;\n\tset &lt;BlockBox;%BlockBox%+8&gt;\n\tset numeric &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;\n\tif &#40; %ExitsBlocked% &gt; 7 &#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;\n\tif &#40; %ExitsBlocked% &gt; 3 &#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt;\n\tif &#40; %ExitsBlocked% &gt; 1 &#41; then set &lt;ExitsBlocked;%ExitsBlocked%-2&gt;\n\tif &#40; %ExitsBlocked% = 0 &#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+1&gt;\n\tset &lt;BlockBox;%BlockBox%-16&gt;\n\tif &#40; %BlockBox% &gt; 8 &#41; then &#123;\n\t\tset &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;\n\t\tif &#40; %ExitsBlocked% &gt; 7 &#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;\n\t\tif &#40; %ExitsBlocked% &lt; 4 &#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+4&gt;\n\t&#125;\n\tset &lt;BlockBox;%BlockBox%+7&gt;\n\tmake sure we aren\n\tset numeric &lt;isLeftCol;0&gt;\n\tfor &lt;i;8;64;8&gt; &#123;\n\t\tif &#40; %BlockBox% = %i% &#41; then set &lt;isLeftCol;1&gt;\n\t&#125;\n\tif &#40; %isLeftCol% &lt;&gt; 1 &#41; then &#123;\n\t\tset &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;\n\t\tif &#40; %ExitsBlocked% &gt; 7 &#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;\n\t\tif &#40; %ExitsBlocked% &gt; 3 &#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt;\n\t\tif &#40; %ExitsBlocked% &lt; 2 &#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+2&gt;\n\t&#125;\n\tset &lt;BlockBox;%BlockBox%+2&gt;\n\tmake sure we aren\n\tset numeric &lt;isRightCol;0&gt;\n\tfor &lt;i;1;57;8&gt; &#123;\n\t\tif &#40; %BlockBox% = %i% &#41; then set &lt;isRightCol;1&gt;\n\t&#125;\n\tif &#40; %isRightCol% &lt;&gt; 1 &#41; then &#123;\n\t\tset &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;\n\t\tif &#40; %ExitsBlocked% &lt; 8 &#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+8&gt;\n\t&#125;\n\t\nend define\n\ndefine text &lt;intro&gt;\nA demonstration of using one Quest room to represent a grid of locations, in this example a 8 x 8 &#40;64 cell&#41; grid, with lots of the cells inaccessible to form a &quot;maze&quot;\nend define\n\ndefine text &lt;win&gt;\nEnter win text here\nend define\n\ndefine text &lt;lose&gt;\nEnter lose text here\nend define\n[/code:f9s8j9v0]",
      "EditableFormat": "bbcode",
      "HTML": "That code works like a dream, MaDbRiT, but now Iâ€™m going to muddy up the waters some more.  &#61514;  I wanted to try a couple things with this.  In your code, when you finally reach the room with the door, you canâ€™t return south back into the maze.  So I thought if I put the south exit of the DoorRoom set to â€œGridRoomâ€, it would send me back into the maze.  After testing it, it seemed to work, however, if you go further into the maze and try to find the DoorRoom again, youâ€™ll get an error 9 and the game shuts down.  (Although it seems to be working currently)<br/><br/>Further, I wanted to make the room that you start out in different so people roaming through the maze would realize that theyâ€™re back to the room that they started in.  So in other words, I wanted them to get a description similar to â€œThis seems to be the room that you started from since you can see the open grate above youâ€.  Then of course, there should be an object in the room called â€œgrateâ€ so they can examine it if they chose to.<br/><br/>Finally, I wanted to make three rooms [8, 49, 64] <span style=\"font-weight:bold;\">(labeled as MonsterRoom, MonsterRoom2, and MonsterRoom3)</span>where a creature would randomly appear in.  The discussion of this general idea is in another recent thread but my question relates to the one above in reference to the DoorRoom.  Whether or not the creature is in the room, I want the player to be able to â€œnoticeâ€ that a creature had been in the room so these three rooms would have their own room descriptions similar to â€œIt appears that in this part of the maze, a creature has recently passed throughâ€<br/>When I began trying to create room 8, I received worse results than when I threw in the â€œGridRoomâ€ exit on the DoorRoom.  I couldnâ€™t even get an exit out of room 8.<br/><br/>Now with all that being said, here is the mutilation of your previously working code trying to insert my own adjustments:<br/><br/><pre><code><br/>' &quot;Grid Demo&quot;<br/>' Created with QDK 3&#46;53 - UNREGISTERED VERSION<br/><br/>define game &lt;Grid Demo&gt;<br/>\tasl-version &lt;350&gt;<br/>\tgametype singleplayer<br/>\tstart &lt;StartRoom&gt;<br/>\tgame author &lt;MaDbRiT&gt;<br/>\tgame version &lt;1&#46;0&gt;<br/>\tgame copyright &lt;Â© 2005 AGB&gt;<br/>\tgame info &lt;Created with QDK 3&#46;53 - UNREGISTERED EVALUATION VERSION&#46;&gt;<br/>\tstartscript &#123;<br/>\t\tdo &lt;MakeGrid&gt;<br/>\t\tcloses all<br/>\t\tdo &lt;KillAccess&#40;1&#41;&gt;<br/>\t\tdo &lt;KillAccess&#40;2&#41;&gt;<br/>\t\tdo &lt;KillAccess&#40;4&#41;&gt;<br/>\t\tfor &lt;x;6;7&gt; do &lt;KillAccess&#40;%x%&#41;&gt;<br/>\t\tdo &lt;KillAccess&#40;9&#41;&gt;<br/>\t\tdo &lt;KillAccess&#40;12&#41;&gt;<br/>\t\tdo &lt;KillAccess&#40;19&#41;&gt;<br/>\t\tfor &lt;x;21;22&gt; do &lt;KillAccess&#40;%x%&#41;&gt;<br/>\t\tdo &lt;KillAccess&#40;24&#41;&gt;<br/>\t\tdo &lt;KillAccess&#40;26&#41;&gt;<br/>\t\tdo &lt;KillAccess&#40;29&#41;&gt;<br/>\t\tdo &lt;KillAccess&#40;36&#41;&gt;<br/>\t\tfor &lt;x;39;42&gt; do &lt;KillAccess&#40;%x%&#41;&gt;<br/>\t\tdo &lt;KillAccess&#40;46&#41;&gt;<br/>\t\tdo &lt;KillAccess&#40;50&#41;&gt;<br/>\t\tdo &lt;KillAccess&#40;52&#41;&gt;<br/>\t\tdo &lt;KillAccess&#40;56&#41;&gt;<br/>\t\tdo &lt;KillAccess&#40;62&#41;&gt;<br/>\t\tset &lt;grid&#91;5&#93;;10&gt;<br/>\t&#125;<br/>end define<br/><br/>define synonyms<br/>end define<br/><br/>define room &lt;StartRoom&gt;<br/>\tscript &#123;<br/>\t\tset &lt;gridPos;35&gt;<br/>\t\tdo &lt;makeExits&gt;<br/>\t\tgoto &lt;gridroom&gt;<br/>\t&#125;<br/>end define<br/><br/>define room &lt;DoorRoom&gt;<br/>\talias &lt;a small, gloomy room&#46;&gt;<br/>\tlook &lt;The room is completely bare and featureless except for a single door to the north&#46;&gt;<br/>\tsouth &lt;GridRoom&gt;<br/>\tscript set &lt;gridPos;5&gt;<br/>end define<br/><br/>define room &lt;GridRoom&gt;<br/>\talias &lt;a maze of seemingly identical corridors&gt;<br/>\tscript msg &lt;DEBUG&#58; Exit code for this &#40;%gridPos%&#41; room is = %grid&#91;gridPos&#93;%&gt;<br/>\tcommand &lt;north&gt; &#123;<br/>\t\tset &lt;gridPos;%gridPos%-8&gt;<br/>\t\tif &#40; %gridpos% &lt;&gt; 5 &#41; then &#123;<br/>\t\t\tdo &lt;makeExits&gt;<br/>\t\t\tgoto &lt;GridRoom&gt;<br/>\t\t&#125;<br/>\t\telse goto &lt;doorroom&gt;<br/>\t&#125;<br/>\tcommand &lt;south&gt; &#123;<br/>\t\tset &lt;gridPos;%gridPos%+8&gt;<br/>\t\tdo &lt;makeExits&gt;<br/>\t\tgoto &lt;GridRoom&gt;<br/>\t&#125;<br/>\tcommand &lt;east&gt; &#123;<br/>\t\tset &lt;gridPos;%gridPos%+1&gt;<br/>\t\tdo &lt;makeExits&gt;<br/>\t\tgoto &lt;GridRoom&gt;<br/>\t&#125;<br/>\tcommand &lt;west&gt; &#123;<br/>\t\tset &lt;gridPos;%gridPos%-1&gt;<br/>\t\tdo &lt;makeExits&gt;<br/>\t\tgoto &lt;GridRoom&gt;<br/>\t&#125;<br/>end define<br/><br/>define room &lt;dummy&gt;<br/>end define<br/><br/>define room &lt;DropRoom&gt;<br/>\tlook &lt;This is the part of the maze underneath the grate where Graham dropped in&#46;&gt;<br/>\tnorth &lt;GridRoom&gt;<br/>\tsouth &lt;GridRoom&gt;<br/>\twest &lt;GridRoom&gt;<br/>\tscript set &lt;gridPos; 35&gt;<br/>end define<br/><br/>define room &lt;MonsterRoom&gt;<br/>\talias &lt;a maze of seemingly identical corridors&gt;<br/>\tlook &lt;In this area of the maze, it is evident that a creature has roamed through here&#46;&gt;<br/>\tsouth &lt;GridRoom&gt;<br/>\tscript set &lt;gridPos; 8&gt;<br/>end define<br/><br/>define room &lt;MonsterRoom2&gt;<br/>\talias &lt;a maze of seemingly identical corridors&gt;<br/>\tlook &lt;In this area of the maze, it is evident that a creature has roamed through here&#46;&gt;<br/>\tsouth &lt;GridRoom&gt;<br/>\tscript set &lt;gridPos; 49&gt;<br/>end define<br/><br/>define room &lt;MonsterRoom3&gt;<br/>\talias &lt;a maze of seemingly identical corridors&gt;<br/>\tlook &lt;In this area of the maze, it is evident that a creature has roamed through here&#46;&gt;<br/>\twest &lt;GridRoom&gt;<br/>\tscript set &lt;gridPos; 64&gt;<br/>end define<br/><br/>define procedure &lt;MakeGrid&gt;<br/>\tset numeric &lt;gridPos;0&gt;<br/>\tfor &lt;i;1;8&gt; set numeric &lt;grid&#91;i&#93;;1&gt;<br/>\tfor &lt;i;57;64&gt; set numeric &lt;grid&#91;i&#93;;4&gt;<br/>\tfor &lt;i;8;64;8&gt; set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+2&gt;<br/>\tfor &lt;i;1;57;8&gt; set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+8&gt;<br/>\t<br/>end define<br/><br/>define procedure &lt;makeExits&gt;<br/>\tcreate exit north &lt;GridRoom;dummy&gt;<br/>\tcreate exit east &lt;GridRoom;dummy&gt;<br/>\tcreate exit south &lt;GridRoom;dummy&gt;<br/>\tcreate exit west &lt;GridRoom;dummy&gt;<br/>\tset numeric &lt;gridVal;%grid&#91;gridPos&#93;%&gt;<br/>\tif &#40; %gridVal% &gt; 7 &#41; then &#123;<br/>\t\tcreate exit west &lt;GridRoom;&gt;<br/>\t\tset &lt;gridVal;%gridVal%-8&gt;<br/>\t&#125;<br/>\tif &#40; %gridVal% &gt; 3 &#41; then &#123;<br/>\t\tcreate exit south &lt;GridRoom;&gt;<br/>\t\tset &lt;gridVal;%gridVal%-4&gt;<br/>\t&#125;<br/>\tif &#40; %gridVal% &gt; 1 &#41; then &#123;<br/>\t\tcreate exit east &lt;GridRoom;&gt;<br/>\t\tset &lt;gridVal;%gridVal%-2&gt;<br/>\t&#125;<br/>\tif &#40; %gridVal% &gt; 0 &#41; then &#123;<br/>\t\tcreate exit north &lt;GridRoom;&gt;<br/>\t&#125;<br/>\t<br/>end define<br/><br/>define procedure &lt;KillAccess&gt;<br/>\tset numeric &lt;BlockBox;$parameter&#40;1&#41;$&gt;<br/>\tset &lt;BlockBox;%BlockBox%+8&gt;<br/>\tset numeric &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;<br/>\tif &#40; %ExitsBlocked% &gt; 7 &#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;<br/>\tif &#40; %ExitsBlocked% &gt; 3 &#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt;<br/>\tif &#40; %ExitsBlocked% &gt; 1 &#41; then set &lt;ExitsBlocked;%ExitsBlocked%-2&gt;<br/>\tif &#40; %ExitsBlocked% = 0 &#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+1&gt;<br/>\tset &lt;BlockBox;%BlockBox%-16&gt;<br/>\tif &#40; %BlockBox% &gt; 8 &#41; then &#123;<br/>\t\tset &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;<br/>\t\tif &#40; %ExitsBlocked% &gt; 7 &#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;<br/>\t\tif &#40; %ExitsBlocked% &lt; 4 &#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+4&gt;<br/>\t&#125;<br/>\tset &lt;BlockBox;%BlockBox%+7&gt;<br/>\tmake sure we aren<br/>\tset numeric &lt;isLeftCol;0&gt;<br/>\tfor &lt;i;8;64;8&gt; &#123;<br/>\t\tif &#40; %BlockBox% = %i% &#41; then set &lt;isLeftCol;1&gt;<br/>\t&#125;<br/>\tif &#40; %isLeftCol% &lt;&gt; 1 &#41; then &#123;<br/>\t\tset &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;<br/>\t\tif &#40; %ExitsBlocked% &gt; 7 &#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;<br/>\t\tif &#40; %ExitsBlocked% &gt; 3 &#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt;<br/>\t\tif &#40; %ExitsBlocked% &lt; 2 &#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+2&gt;<br/>\t&#125;<br/>\tset &lt;BlockBox;%BlockBox%+2&gt;<br/>\tmake sure we aren<br/>\tset numeric &lt;isRightCol;0&gt;<br/>\tfor &lt;i;1;57;8&gt; &#123;<br/>\t\tif &#40; %BlockBox% = %i% &#41; then set &lt;isRightCol;1&gt;<br/>\t&#125;<br/>\tif &#40; %isRightCol% &lt;&gt; 1 &#41; then &#123;<br/>\t\tset &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;<br/>\t\tif &#40; %ExitsBlocked% &lt; 8 &#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+8&gt;<br/>\t&#125;<br/>\t<br/>end define<br/><br/>define text &lt;intro&gt;<br/>A demonstration of using one Quest room to represent a grid of locations, in this example a 8 x 8 &#40;64 cell&#41; grid, with lots of the cells inaccessible to form a &quot;maze&quot;<br/>end define<br/><br/>define text &lt;win&gt;<br/>Enter win text here<br/>end define<br/><br/>define text &lt;lose&gt;<br/>Enter lose text here<br/>end define<br/></code></pre>",
      "PostDate": "2005-06-30T22:32:36+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6560",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Steve wrote,\n\n[quote:2rgwh3kw]In your code, when you finally reach the room with the door, you canâ€™t return south back into the maze. So I thought if I put the south exit of the DoorRoom set to â€œGridRoomâ€, it would send me back into the maze. After testing it, it seemed to work, however, if you go further into the maze and try to find the DoorRoom again, youâ€™ll get an error 9 and the game shuts down.[/quote:2rgwh3kw]\n\nYou are basically right - you just need to call the 'makeExits' and set the 'gridpos' variable appropriately before moving the player back to the gridroom.  The reworked code below shows this.\n\n[quote:2rgwh3kw]Further, I wanted to make the room that you start out in different so people roaming through the maze would realize that theyâ€™re back to the room that they started in. So in other words, I wanted them to get a description similar to â€œThis seems to be the room that you started from since you can see the open grate above youâ€. Then of course, there should be an object in the room called â€œgrateâ€ so they can examine it if they chose to.[/quote:2rgwh3kw] \n\nYou can make the gridroom 'APPEAR' to be a different room without actually creating another room (which gets way too complicated!) by simply building a test that adds an appropriate description to the gridroom when you are at grid cell 35 - I've done that in the example below.  \n\nYou can then put a grate object in the gridroom and have a simple test in the 'makeExits' procedure which either conceals or reveals the grate object depending on whether you are at cell 35 - thus giving the impression of being in a different room.  I've done that in the code below too.\n\n[quote:2rgwh3kw]Finally, I wanted to make three rooms [8, 49, 64] (labeled as MonsterRoom, MonsterRoom2, and MonsterRoom3)where a creature would randomly appear in. The discussion of this general idea is in another recent thread but my question relates to the one above in reference to the DoorRoom. Whether or not the creature is in the room, I want the player to be able to â€œnoticeâ€ that a creature had been in the room so these three rooms would have their own room descriptions similar to â€œIt appears that in this part of the maze, a creature has recently passed throughâ€ \nWhen I began trying to create room 8, I received worse results than when I threw in the â€œGridRoomâ€ exit on the DoorRoom. I couldnâ€™t even get an exit out of room 8. [/quote:2rgwh3kw]\n\nOnce again, you don't need to create any more rooms, you just need to create the IMPRESSION of more rooms.  Just as I used a test to add a description to the gridroom when the cell value was 35, you can do exactly the same to add your rooms with evidence of creature passing through by testing the value of gridpos.\n\nI've added this to the code too.  In total these changes took maybe 20 or so lines of code to accomplish so it is much easier than messing about moving the player in and out of real and virtual rooms!\n\nHere's the code (watch for the word wrap as usual)\n\n[code:2rgwh3kw]' Grid of locations within one room \n\ndefine game &lt;Grid Demo&gt; \n\n   asl-version &lt;350&gt; \n    \n   gametype singleplayer \n    \n   game version &lt;1&#46;0&gt; \n   game author &lt;MaDbRiT&gt; \n   game copyright &lt;Â© 2005 AGB&gt; \n   game info &lt;Demo&gt; \n    \n   start &lt;StartRoom&gt; \n    \n   startscript &#123; \n      do &lt;MakeGrid&gt;  'This builds a 8 x 8 grid &#40;with hard boundaries&#41; \n\n'  Calling 'KillAccess' procedure with the cell number as a parameter closes all \n'  &#40;N,S,E &amp; W&#41; entrances to the cell referenced&#46; \n\n      do &lt;KillAccess&#40;1&#41;&gt; \n      do &lt;KillAccess&#40;2&#41;&gt; \n      do &lt;KillAccess&#40;4&#41;&gt;        \n      for &lt;x;6;7&gt; do &lt;KillAccess&#40;%x%&#41;&gt; \n      do &lt;KillAccess&#40;9&#41;&gt; \n      do &lt;KillAccess&#40;12&#41;&gt; \n      do &lt;KillAccess&#40;19&#41;&gt; \n      for &lt;x;21;22&gt; do &lt;KillAccess&#40;%x%&#41;&gt;        \n      do &lt;KillAccess&#40;24&#41;&gt; \n      do &lt;KillAccess&#40;26&#41;&gt; \n      do &lt;KillAccess&#40;29&#41;&gt; \n      do &lt;KillAccess&#40;36&#41;&gt; \n      for &lt;x;39;42&gt; do &lt;KillAccess&#40;%x%&#41;&gt; \n      do &lt;KillAccess&#40;46&#41;&gt; \n      do &lt;KillAccess&#40;50&#41;&gt;        \n      do &lt;KillAccess&#40;52&#41;&gt;        \n      do &lt;KillAccess&#40;56&#41;&gt; \n      do &lt;KillAccess&#40;62&#41;&gt; \n    \n'Open additional &#40;special&#41; Exits to north/south in Cell 5   \n\n'This is the exit from the gridroom maze \n\n   set &lt;grid&#91;5&#93;;10&gt; \n   &#125; \n\n    \nend define \n\ndefine room &lt;StartRoom&gt; \n   script &#123; \n      set &lt;gridPos;35&gt; \n      do &lt;makeExits&gt; \n      goto &lt;gridroom&gt; \n   &#125; \nend define \n\ndefine room &lt;DoorRoom&gt; \n   alias &lt;a small, gloomy room&#46;&gt; \n   look &lt;The room is completely bare and featureless except _\n   for a single door to the north&#46; A corridor leads south&#46;&#46;&#46;&gt; \n\tsouth &#123;\n      set &lt;gridPos;13&gt; \n      do &lt;makeExits&gt; \n      goto &lt;gridroom&gt; \t\t\n\t&#125;\nend define \n\n\ndefine room &lt;GridRoom&gt; \n   script &#123; \n'      msg &lt;DEBUG&#58; Exit code for this &#40;%gridPos%&#41; room is = %grid&#91;gridPos&#93;%&gt; \n   &#125; \n   alias &lt;a maze of seemingly identical corridors&gt; \n\n  description &#123;\n   \tif &#40; %gridpos%=35 &#41; then &#123;\n   \t\tmsg &lt;This is the part of the maze underneath the grate where Graham dropped in&#46; |nThere is a |bgrate|xb here&#46;&gt;   \t\t\n   \t&#125;\n   \tif &#40; %gridpos%=8 &#41; or &#40;%gridpos%=49&#41; or &#40;%gridpos%=64&#41; then &#123;\n   \t\tmsg &lt;In this area of the maze, it is evident that a creature has roamed through here&#46;&gt;\n   \t&#125;\n   &#125;\n\n   command &lt;north&gt; &#123; \n      set &lt;gridPos;%gridPos%-8&gt; \n      if &#40;%gridpos%&lt;&gt;5&#41; then &#123; \n         do &lt;makeExits&gt; \n         goto &lt;GridRoom&gt; \n      &#125; \n      else goto &lt;doorroom&gt; \n   &#125; \n\n   command &lt;south&gt; &#123; \n      set &lt;gridPos;%gridPos%+8&gt; \n      do &lt;makeExits&gt; \n      goto &lt;GridRoom&gt; \n   &#125; \n\n   command &lt;east&gt; &#123; \n      set &lt;gridPos;%gridPos%+1&gt; \n      do &lt;makeExits&gt; \n      goto &lt;GridRoom&gt; \n   &#125; \n\n   command &lt;west&gt; &#123; \n      set &lt;gridPos;%gridPos%-1&gt; \n      do &lt;makeExits&gt; \n      goto &lt;GridRoom&gt; \n   &#125;\n   \n   define object &lt;grate&gt;\n   \tlook &lt;a large ornamental grate&#46;&gt;\n   end define\n    \nend define \n\ndefine room &lt;dummy&gt; \n\nend define \n\ndefine procedure &lt;MakeGrid&gt; \n      set numeric &lt;gridPos;0&gt; \n\n'  ** Set Basic boundaries of 8 x 8 grid \n\n'  ** Set exit north OFF for top row of grid        \n      for &lt;i;1;8&gt; &#123; \n         set numeric &lt;grid&#91;i&#93;;1&gt; \n      &#125; \n\n'  ** Set exit south OFF for bottom row of grid        \n      for &lt;i;57;64&gt; &#123; \n         set numeric &lt;grid&#91;i&#93;;4&gt; \n      &#125;        \n        \n'  ** Set exit east OFF for right row of grid        \n      for &lt;i;8;64;8&gt; &#123; \n         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+2&gt; \n      &#125; \n\n'  ** Set exit west OFF for left of grid        \n      for &lt;i;1;57;8&gt; &#123; \n         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+8&gt; \n      &#125; \nend define \n\ndefine procedure &lt;makeExits&gt; \n   create exit north &lt;GridRoom;dummy&gt; \n   create exit east &lt;GridRoom;dummy&gt; \n   create exit south &lt;GridRoom;dummy&gt; \n   create exit west &lt;GridRoom;dummy&gt; \n   set numeric &lt;gridVal;%grid&#91;gridPos&#93;%&gt; \n   \n   if &#40;%gridpos%=35&#41; then reveal &lt;grate&gt;\n   else conceal &lt;grate&gt;\n   \n   if &#40;%gridVal% &gt;7&#41; then &#123; \n      create exit west &lt;GridRoom;&gt; \n      set &lt;gridVal;%gridVal%-8&gt; \n   &#125; \n    \n   if &#40;%gridVal% &gt;3&#41; then &#123; \n      create exit south &lt;GridRoom;&gt; \n      set &lt;gridVal;%gridVal%-4&gt; \n   &#125; \n    \n   if &#40;%gridVal% &gt;1&#41; then &#123; \n      create exit east &lt;GridRoom;&gt; \n      set &lt;gridVal;%gridVal%-2&gt; \n   &#125; \n    \n   if &#40;%gridVal% &gt;0&#41; then &#123; \n      create exit north &lt;GridRoom;&gt; \n   &#125;    \nend define \n\ndefine procedure &lt;KillAccess&gt; \n   set numeric &lt;BlockBox;$parameter&#40;1&#41;$&gt; \n\n'  In this procedure we need to modify the boxes bordering the chosen box \n'  rather than the box to be blocked itself&#46; First up is to block the \n'  exit to this box from the south&#46; \n'  Move down a row&#46; \n   set &lt;BlockBox;%BlockBox%+8&gt; \n   set numeric &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt; \n   if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;    \n\n ' Discard WEST bit \n   if &#40;%ExitsBlocked% &gt;3&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt;    \n\n ' Discard SOUTH bit    \n   if &#40;%ExitsBlocked% &gt;1&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-2&gt;    \n\n ' Discard EAST bit    \n   if &#40;%ExitsBlocked% =0&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+1&gt; ' Set NORTH bit if not set    \n    \n'Now the access from the north&#46; \n   set &lt;BlockBox;%BlockBox%-16&gt; \n'  IF Makes sure we're not in the top row, &#40;we can ignore this stage if we are&#41; \n   if &#40;%BlockBox%&gt;8&#41; then &#123;  \n      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;    \n      if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt; \n\n    ' Discard WEST bit \n      if &#40;%ExitsBlocked% &lt;4&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+4&gt; ' Set SOUTH bit if not set    \n   &#125; \n\n'Now the access from the west \n   set &lt;BlockBox;%BlockBox%+7&gt; \n    \n'  make sure we aren't in the leftmost columnn \n   set numeric &lt;isLeftCol;0&gt; \n   for &lt;i;8;64;8&gt; &#123; \n      if &#40;%BlockBox%=%i%&#41; then set &lt;isLeftCol;1&gt;    \n   &#125; \n   if &#40;%isLeftCol%&lt;&gt;1&#41; then &#123; \n      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;        \n      if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt; \n\n    ' Discard WEST bit \n      if &#40;%ExitsBlocked% &gt;3&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt; \n\n    ' Discard SOUTH bit        \n      if &#40;%ExitsBlocked% &lt;2&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+2&gt; ' Set EAST bit if not set    \n   &#125; \n\n'Now the access from the east \n   set &lt;BlockBox;%BlockBox%+2&gt; \n    \n'   make sure we aren't in the rightmost columnn \n   set numeric &lt;isRightCol;0&gt; \n   for &lt;i;1;57;8&gt; &#123; \n      if &#40;%BlockBox%=%i%&#41; then set &lt;isRightCol;1&gt;    \n   &#125; \n   if &#40;%isRightCol%&lt;&gt;1&#41; then &#123; \n      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;        \n      if &#40;%ExitsBlocked% &lt;8&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+8&gt; ' Set WEST bit if not set    \n   &#125; \n    \nend define \n\ndefine text &lt;intro&gt; \nA demonstration of using one Quest room to represent a grid of locations, in this example a 8 x 8 &#40;64 cell&#41; grid, with lots of the cells inaccessible to form a &quot;maze&quot; \nend define \n\ndefine text &lt;win&gt; \nEnter win text here \nend define \n\ndefine text &lt;lose&gt; \nEnter lose text here \nend define[/code:2rgwh3kw]\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Steve wrote,<br/><br/><blockquote><p>In your code, when you finally reach the room with the door, you canâ€™t return south back into the maze. So I thought if I put the south exit of the DoorRoom set to â€œGridRoomâ€, it would send me back into the maze. After testing it, it seemed to work, however, if you go further into the maze and try to find the DoorRoom again, youâ€™ll get an error 9 and the game shuts down.</p></blockquote><br/><br/>You are basically right - you just need to call the 'makeExits' and set the 'gridpos' variable appropriately before moving the player back to the gridroom.  The reworked code below shows this.<br/><br/><blockquote><p>Further, I wanted to make the room that you start out in different so people roaming through the maze would realize that theyâ€™re back to the room that they started in. So in other words, I wanted them to get a description similar to â€œThis seems to be the room that you started from since you can see the open grate above youâ€. Then of course, there should be an object in the room called â€œgrateâ€ so they can examine it if they chose to.</p></blockquote> <br/><br/>You can make the gridroom 'APPEAR' to be a different room without actually creating another room (which gets way too complicated!) by simply building a test that adds an appropriate description to the gridroom when you are at grid cell 35 - I've done that in the example below.  <br/><br/>You can then put a grate object in the gridroom and have a simple test in the 'makeExits' procedure which either conceals or reveals the grate object depending on whether you are at cell 35 - thus giving the impression of being in a different room.  I've done that in the code below too.<br/><br/><blockquote><p>Finally, I wanted to make three rooms [8, 49, 64] (labeled as MonsterRoom, MonsterRoom2, and MonsterRoom3)where a creature would randomly appear in. The discussion of this general idea is in another recent thread but my question relates to the one above in reference to the DoorRoom. Whether or not the creature is in the room, I want the player to be able to â€œnoticeâ€ that a creature had been in the room so these three rooms would have their own room descriptions similar to â€œIt appears that in this part of the maze, a creature has recently passed throughâ€ <br/>When I began trying to create room 8, I received worse results than when I threw in the â€œGridRoomâ€ exit on the DoorRoom. I couldnâ€™t even get an exit out of room 8. </p></blockquote><br/><br/>Once again, you don't need to create any more rooms, you just need to create the IMPRESSION of more rooms.  Just as I used a test to add a description to the gridroom when the cell value was 35, you can do exactly the same to add your rooms with evidence of creature passing through by testing the value of gridpos.<br/><br/>I've added this to the code too.  In total these changes took maybe 20 or so lines of code to accomplish so it is much easier than messing about moving the player in and out of real and virtual rooms!<br/><br/>Here's the code (watch for the word wrap as usual)<br/><br/><pre><code>' Grid of locations within one room <br/><br/>define game &lt;Grid Demo&gt; <br/><br/>   asl-version &lt;350&gt; <br/>    <br/>   gametype singleplayer <br/>    <br/>   game version &lt;1&#46;0&gt; <br/>   game author &lt;MaDbRiT&gt; <br/>   game copyright &lt;Â© 2005 AGB&gt; <br/>   game info &lt;Demo&gt; <br/>    <br/>   start &lt;StartRoom&gt; <br/>    <br/>   startscript &#123; <br/>      do &lt;MakeGrid&gt;  'This builds a 8 x 8 grid &#40;with hard boundaries&#41; <br/><br/>'  Calling 'KillAccess' procedure with the cell number as a parameter closes all <br/>'  &#40;N,S,E &amp; W&#41; entrances to the cell referenced&#46; <br/><br/>      do &lt;KillAccess&#40;1&#41;&gt; <br/>      do &lt;KillAccess&#40;2&#41;&gt; <br/>      do &lt;KillAccess&#40;4&#41;&gt;        <br/>      for &lt;x;6;7&gt; do &lt;KillAccess&#40;%x%&#41;&gt; <br/>      do &lt;KillAccess&#40;9&#41;&gt; <br/>      do &lt;KillAccess&#40;12&#41;&gt; <br/>      do &lt;KillAccess&#40;19&#41;&gt; <br/>      for &lt;x;21;22&gt; do &lt;KillAccess&#40;%x%&#41;&gt;        <br/>      do &lt;KillAccess&#40;24&#41;&gt; <br/>      do &lt;KillAccess&#40;26&#41;&gt; <br/>      do &lt;KillAccess&#40;29&#41;&gt; <br/>      do &lt;KillAccess&#40;36&#41;&gt; <br/>      for &lt;x;39;42&gt; do &lt;KillAccess&#40;%x%&#41;&gt; <br/>      do &lt;KillAccess&#40;46&#41;&gt; <br/>      do &lt;KillAccess&#40;50&#41;&gt;        <br/>      do &lt;KillAccess&#40;52&#41;&gt;        <br/>      do &lt;KillAccess&#40;56&#41;&gt; <br/>      do &lt;KillAccess&#40;62&#41;&gt; <br/>    <br/>'Open additional &#40;special&#41; Exits to north/south in Cell 5   <br/><br/>'This is the exit from the gridroom maze <br/><br/>   set &lt;grid&#91;5&#93;;10&gt; <br/>   &#125; <br/><br/>    <br/>end define <br/><br/>define room &lt;StartRoom&gt; <br/>   script &#123; <br/>      set &lt;gridPos;35&gt; <br/>      do &lt;makeExits&gt; <br/>      goto &lt;gridroom&gt; <br/>   &#125; <br/>end define <br/><br/>define room &lt;DoorRoom&gt; <br/>   alias &lt;a small, gloomy room&#46;&gt; <br/>   look &lt;The room is completely bare and featureless except _<br/>   for a single door to the north&#46; A corridor leads south&#46;&#46;&#46;&gt; <br/>\tsouth &#123;<br/>      set &lt;gridPos;13&gt; <br/>      do &lt;makeExits&gt; <br/>      goto &lt;gridroom&gt; \t\t<br/>\t&#125;<br/>end define <br/><br/><br/>define room &lt;GridRoom&gt; <br/>   script &#123; <br/>'      msg &lt;DEBUG&#58; Exit code for this &#40;%gridPos%&#41; room is = %grid&#91;gridPos&#93;%&gt; <br/>   &#125; <br/>   alias &lt;a maze of seemingly identical corridors&gt; <br/><br/>  description &#123;<br/>   \tif &#40; %gridpos%=35 &#41; then &#123;<br/>   \t\tmsg &lt;This is the part of the maze underneath the grate where Graham dropped in&#46; |nThere is a |bgrate|xb here&#46;&gt;   \t\t<br/>   \t&#125;<br/>   \tif &#40; %gridpos%=8 &#41; or &#40;%gridpos%=49&#41; or &#40;%gridpos%=64&#41; then &#123;<br/>   \t\tmsg &lt;In this area of the maze, it is evident that a creature has roamed through here&#46;&gt;<br/>   \t&#125;<br/>   &#125;<br/><br/>   command &lt;north&gt; &#123; <br/>      set &lt;gridPos;%gridPos%-8&gt; <br/>      if &#40;%gridpos%&lt;&gt;5&#41; then &#123; <br/>         do &lt;makeExits&gt; <br/>         goto &lt;GridRoom&gt; <br/>      &#125; <br/>      else goto &lt;doorroom&gt; <br/>   &#125; <br/><br/>   command &lt;south&gt; &#123; <br/>      set &lt;gridPos;%gridPos%+8&gt; <br/>      do &lt;makeExits&gt; <br/>      goto &lt;GridRoom&gt; <br/>   &#125; <br/><br/>   command &lt;east&gt; &#123; <br/>      set &lt;gridPos;%gridPos%+1&gt; <br/>      do &lt;makeExits&gt; <br/>      goto &lt;GridRoom&gt; <br/>   &#125; <br/><br/>   command &lt;west&gt; &#123; <br/>      set &lt;gridPos;%gridPos%-1&gt; <br/>      do &lt;makeExits&gt; <br/>      goto &lt;GridRoom&gt; <br/>   &#125;<br/>   <br/>   define object &lt;grate&gt;<br/>   \tlook &lt;a large ornamental grate&#46;&gt;<br/>   end define<br/>    <br/>end define <br/><br/>define room &lt;dummy&gt; <br/><br/>end define <br/><br/>define procedure &lt;MakeGrid&gt; <br/>      set numeric &lt;gridPos;0&gt; <br/><br/>'  ** Set Basic boundaries of 8 x 8 grid <br/><br/>'  ** Set exit north OFF for top row of grid        <br/>      for &lt;i;1;8&gt; &#123; <br/>         set numeric &lt;grid&#91;i&#93;;1&gt; <br/>      &#125; <br/><br/>'  ** Set exit south OFF for bottom row of grid        <br/>      for &lt;i;57;64&gt; &#123; <br/>         set numeric &lt;grid&#91;i&#93;;4&gt; <br/>      &#125;        <br/>        <br/>'  ** Set exit east OFF for right row of grid        <br/>      for &lt;i;8;64;8&gt; &#123; <br/>         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+2&gt; <br/>      &#125; <br/><br/>'  ** Set exit west OFF for left of grid        <br/>      for &lt;i;1;57;8&gt; &#123; <br/>         set numeric &lt;grid&#91;i&#93;;%grid&#91;i&#93;%+8&gt; <br/>      &#125; <br/>end define <br/><br/>define procedure &lt;makeExits&gt; <br/>   create exit north &lt;GridRoom;dummy&gt; <br/>   create exit east &lt;GridRoom;dummy&gt; <br/>   create exit south &lt;GridRoom;dummy&gt; <br/>   create exit west &lt;GridRoom;dummy&gt; <br/>   set numeric &lt;gridVal;%grid&#91;gridPos&#93;%&gt; <br/>   <br/>   if &#40;%gridpos%=35&#41; then reveal &lt;grate&gt;<br/>   else conceal &lt;grate&gt;<br/>   <br/>   if &#40;%gridVal% &gt;7&#41; then &#123; <br/>      create exit west &lt;GridRoom;&gt; <br/>      set &lt;gridVal;%gridVal%-8&gt; <br/>   &#125; <br/>    <br/>   if &#40;%gridVal% &gt;3&#41; then &#123; <br/>      create exit south &lt;GridRoom;&gt; <br/>      set &lt;gridVal;%gridVal%-4&gt; <br/>   &#125; <br/>    <br/>   if &#40;%gridVal% &gt;1&#41; then &#123; <br/>      create exit east &lt;GridRoom;&gt; <br/>      set &lt;gridVal;%gridVal%-2&gt; <br/>   &#125; <br/>    <br/>   if &#40;%gridVal% &gt;0&#41; then &#123; <br/>      create exit north &lt;GridRoom;&gt; <br/>   &#125;    <br/>end define <br/><br/>define procedure &lt;KillAccess&gt; <br/>   set numeric &lt;BlockBox;$parameter&#40;1&#41;$&gt; <br/><br/>'  In this procedure we need to modify the boxes bordering the chosen box <br/>'  rather than the box to be blocked itself&#46; First up is to block the <br/>'  exit to this box from the south&#46; <br/>'  Move down a row&#46; <br/>   set &lt;BlockBox;%BlockBox%+8&gt; <br/>   set numeric &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt; <br/>   if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt;    <br/><br/> ' Discard WEST bit <br/>   if &#40;%ExitsBlocked% &gt;3&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt;    <br/><br/> ' Discard SOUTH bit    <br/>   if &#40;%ExitsBlocked% &gt;1&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-2&gt;    <br/><br/> ' Discard EAST bit    <br/>   if &#40;%ExitsBlocked% =0&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+1&gt; ' Set NORTH bit if not set    <br/>    <br/>'Now the access from the north&#46; <br/>   set &lt;BlockBox;%BlockBox%-16&gt; <br/>'  IF Makes sure we're not in the top row, &#40;we can ignore this stage if we are&#41; <br/>   if &#40;%BlockBox%&gt;8&#41; then &#123;  <br/>      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;    <br/>      if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt; <br/><br/>    ' Discard WEST bit <br/>      if &#40;%ExitsBlocked% &lt;4&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+4&gt; ' Set SOUTH bit if not set    <br/>   &#125; <br/><br/>'Now the access from the west <br/>   set &lt;BlockBox;%BlockBox%+7&gt; <br/>    <br/>'  make sure we aren't in the leftmost columnn <br/>   set numeric &lt;isLeftCol;0&gt; <br/>   for &lt;i;8;64;8&gt; &#123; <br/>      if &#40;%BlockBox%=%i%&#41; then set &lt;isLeftCol;1&gt;    <br/>   &#125; <br/>   if &#40;%isLeftCol%&lt;&gt;1&#41; then &#123; <br/>      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;        <br/>      if &#40;%ExitsBlocked% &gt;7&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-8&gt; <br/><br/>    ' Discard WEST bit <br/>      if &#40;%ExitsBlocked% &gt;3&#41; then set &lt;ExitsBlocked;%ExitsBlocked%-4&gt; <br/><br/>    ' Discard SOUTH bit        <br/>      if &#40;%ExitsBlocked% &lt;2&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+2&gt; ' Set EAST bit if not set    <br/>   &#125; <br/><br/>'Now the access from the east <br/>   set &lt;BlockBox;%BlockBox%+2&gt; <br/>    <br/>'   make sure we aren't in the rightmost columnn <br/>   set numeric &lt;isRightCol;0&gt; <br/>   for &lt;i;1;57;8&gt; &#123; <br/>      if &#40;%BlockBox%=%i%&#41; then set &lt;isRightCol;1&gt;    <br/>   &#125; <br/>   if &#40;%isRightCol%&lt;&gt;1&#41; then &#123; <br/>      set &lt;ExitsBlocked;%grid&#91;BlockBox&#93;%&gt;        <br/>      if &#40;%ExitsBlocked% &lt;8&#41; then set &lt;grid&#91;BlockBox&#93;;%grid&#91;BlockBox&#93;%+8&gt; ' Set WEST bit if not set    <br/>   &#125; <br/>    <br/>end define <br/><br/>define text &lt;intro&gt; <br/>A demonstration of using one Quest room to represent a grid of locations, in this example a 8 x 8 &#40;64 cell&#41; grid, with lots of the cells inaccessible to form a &quot;maze&quot; <br/>end define <br/><br/>define text &lt;win&gt; <br/>Enter win text here <br/>end define <br/><br/>define text &lt;lose&gt; <br/>Enter lose text here <br/>end define</code></pre><br/><br/>Al (MaDbRiT)",
      "PostDate": "2005-06-30T23:54:58+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6577",
      "UserId": 0,
      "Username": "steve the gaming guy",
      "UserAvatar": null,
      "UserGravatar": "6577a0affcb6ea711c75baf052ffd08a",
      "EditableText": "Wow...that's amazing!  Thanks!  I am seeing the light!\n\nI have a quick question (which might lead into a longer discussion  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_e_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> )\n\nThe three \"rooms\" where the creature will randomly appear in...won't that be a little more difficult to make it appear in one of these three rooms when the rooms are actually the same room but different grid positions?\n\nBased on the NPC movement discussion [color=red:1k29x3iq][b:1k29x3iq][url=http&#58;//www&#46;axeuk&#46;com/phpBB2/viewtopic&#46;php?t=833:1k29x3iq]here[/url:1k29x3iq][/b:1k29x3iq][/color:1k29x3iq], it seems as though it would work quite differently on a grid system.  I'm thinking I would change the three rooms to three grid positions picked at random (among 8,49,64).  I'm just not sure how to twist all of it together.",
      "EditableFormat": "bbcode",
      "HTML": "Wow...that's amazing!  Thanks!  I am seeing the light!<br/><br/>I have a quick question (which might lead into a longer discussion  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_e_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> )<br/><br/>The three \"rooms\" where the creature will randomly appear in...won't that be a little more difficult to make it appear in one of these three rooms when the rooms are actually the same room but different grid positions?<br/><br/>Based on the NPC movement discussion <span style=\"color:red\"><span style=\"font-weight:bold;\"><a href=\"http&#58;//www&#46;axeuk&#46;com/phpBB2/viewtopic&#46;php?t=833\" rel=\"nofollow\">here</a></span></span>, it seems as though it would work quite differently on a grid system.  I'm thinking I would change the three rooms to three grid positions picked at random (among 8,49,64).  I'm just not sure how to twist all of it together.",
      "PostDate": "2005-07-02T03:49:25+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6578",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Steve wrote\n\n[quote:3426srhp]The three \"rooms\" where the creature will randomly appear in...won't that be a little more difficult to make it appear in one of these three rooms when the rooms are actually the same room but different grid positions? [/quote:3426srhp]\n\nA little more difficult possibly, but certainly nothing to cause a major headache.  You can't really apply the NPC movement theories for 'real rooms' directly to a 'grid of locations within a room' as implemented thus far.\n\nGiven you want the creature to appear randomly,  in specified locations it is actually a pretty easy 'tweak' of whatever random method you are choosing to position your creature.\n\nJust as with the 'grate' it exists in the gridroom all of the time, but is only made visible when the player is at grid location 35, you can do exactly the same with your monster - create it as hidden in the grid room,  then make it visible as a result of your random test.\n\nTry something like this,  define you monster [b:3426srhp]inside the gridroom [/b:3426srhp]with:\n\n[code:3426srhp]   define object &lt;monster&gt;\n   \tlook &lt;it looks very hungry, and you are snack-sized!&gt;\n   end define[/code:3426srhp]\n\nThen add the following code to the [b:3426srhp]makeExits[/b:3426srhp] procedure\n\n[code:3426srhp]   hide &lt;monster&gt;   \n   if &#40;%gridpos%=8&#41; or &#40;%gridpos%=64&#41; or &#40;%gridpos%=49&#41; then &#123;\n   \tset numeric &lt;monsterhere;$rand&#40;1;3&#41;$&gt;\n   \tif &#40;%monsterhere%=3&#41; then show &lt;monster&gt;\n   &#125;[/code:3426srhp]\n    \n\nand to tidy up the gridroom description, replace the current [b:3426srhp]'description' [/b:3426srhp]code with:\n\n[code:3426srhp]  description &#123; \n      if &#40; %gridpos%=35 &#41; then &#123; \n         msg &lt;This is the part of the maze underneath the grate where Graham dropped in&#46; |nThere is a |bgrate|xb here&#46;&gt;          \n      &#125; \n      if &#40; %gridpos%=8 &#41; or &#40;%gridpos%=49&#41; or &#40;%gridpos%=64&#41; and not here &lt;monster&gt; then &#123; \n         msg &lt;In this area of the maze, it is evident that a creature has roamed through here&#46;&gt; \n      &#125;\n      if here &lt;monster&gt; then msg &lt;|nI don't wish to alarm you, but there is a |bmonster|xb here!&gt;\n   &#125;[/code:3426srhp]\n\nYou might want to swop the reveal/conceal instructions for the GRATE object to be hide/show too - an oversight by me.\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Steve wrote<br/><br/><blockquote><p>The three \"rooms\" where the creature will randomly appear in...won't that be a little more difficult to make it appear in one of these three rooms when the rooms are actually the same room but different grid positions? </p></blockquote><br/><br/>A little more difficult possibly, but certainly nothing to cause a major headache.  You can't really apply the NPC movement theories for 'real rooms' directly to a 'grid of locations within a room' as implemented thus far.<br/><br/>Given you want the creature to appear randomly,  in specified locations it is actually a pretty easy 'tweak' of whatever random method you are choosing to position your creature.<br/><br/>Just as with the 'grate' it exists in the gridroom all of the time, but is only made visible when the player is at grid location 35, you can do exactly the same with your monster - create it as hidden in the grid room,  then make it visible as a result of your random test.<br/><br/>Try something like this,  define you monster <span style=\"font-weight:bold;\">inside the gridroom </span>with:<br/><br/><pre><code>   define object &lt;monster&gt;<br/>   \tlook &lt;it looks very hungry, and you are snack-sized!&gt;<br/>   end define</code></pre><br/><br/>Then add the following code to the <span style=\"font-weight:bold;\">makeExits</span> procedure<br/><br/><pre><code>   hide &lt;monster&gt;   <br/>   if &#40;%gridpos%=8&#41; or &#40;%gridpos%=64&#41; or &#40;%gridpos%=49&#41; then &#123;<br/>   \tset numeric &lt;monsterhere;$rand&#40;1;3&#41;$&gt;<br/>   \tif &#40;%monsterhere%=3&#41; then show &lt;monster&gt;<br/>   &#125;</code></pre><br/>    <br/><br/>and to tidy up the gridroom description, replace the current <span style=\"font-weight:bold;\">'description' </span>code with:<br/><br/><pre><code>  description &#123; <br/>      if &#40; %gridpos%=35 &#41; then &#123; <br/>         msg &lt;This is the part of the maze underneath the grate where Graham dropped in&#46; |nThere is a |bgrate|xb here&#46;&gt;          <br/>      &#125; <br/>      if &#40; %gridpos%=8 &#41; or &#40;%gridpos%=49&#41; or &#40;%gridpos%=64&#41; and not here &lt;monster&gt; then &#123; <br/>         msg &lt;In this area of the maze, it is evident that a creature has roamed through here&#46;&gt; <br/>      &#125;<br/>      if here &lt;monster&gt; then msg &lt;|nI don't wish to alarm you, but there is a |bmonster|xb here!&gt;<br/>   &#125;</code></pre><br/><br/>You might want to swop the reveal/conceal instructions for the GRATE object to be hide/show too - an oversight by me.<br/><br/>Al (MaDbRiT)",
      "PostDate": "2005-07-02T09:53:15+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6626",
      "UserId": 0,
      "Username": "steve the gaming guy",
      "UserAvatar": null,
      "UserGravatar": "6577a0affcb6ea711c75baf052ffd08a",
      "EditableText": "ooooh, I ran into a problem while testing.  Although it is quite convenient to use the map in the lower right corner, there are some players who prefer to type in the commands.  If you type nsw or e it sends you to the dummy room and youâ€™re done.  If you type it out (north, south, etc), it moves you correctly.  I did a quick fix by making synonyms (n=north, etc).  That actually fixed that problem.\nThe second and more important problem, if you type out your commands, although the map shows the correct exits available, the player can still walk through walls.  For instance, when you start on grid 35, there is no doorway east.  But when you type â€œeastâ€, you appear in grid 0.  If you try this in several different parts of the maze, you eventually get a code 9 error and it shuts the game down.",
      "EditableFormat": "bbcode",
      "HTML": "ooooh, I ran into a problem while testing.  Although it is quite convenient to use the map in the lower right corner, there are some players who prefer to type in the commands.  If you type nsw or e it sends you to the dummy room and youâ€™re done.  If you type it out (north, south, etc), it moves you correctly.  I did a quick fix by making synonyms (n=north, etc).  That actually fixed that problem.<br/>The second and more important problem, if you type out your commands, although the map shows the correct exits available, the player can still walk through walls.  For instance, when you start on grid 35, there is no doorway east.  But when you type â€œeastâ€, you appear in grid 0.  If you try this in several different parts of the maze, you eventually get a code 9 error and it shuts the game down.",
      "PostDate": "2005-07-11T20:56:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6629",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Hi Steve\n\n[quote:3eem6g14]ooooh, I ran into a problem while testing. Although it is quite convenient to use the map in the lower right corner, there are some players who prefer to type in the commands. If you type nsw or e it sends you to the dummy room and youâ€™re done. If you type it out (north, south, etc), it moves you correctly. I did a quick fix by making synonyms (n=north, etc). That actually fixed that problem[/quote:3eem6g14]\n\nYeah I was aware that you'd need to code synonyms for all the alternative commands N =north etc. you always have to do all the possibilities when you override a quest command - I should have mentioned I hadn't bothered to do it in my demo I suppose!\n\n[quote:3eem6g14]if you type out your commands, although the map shows the correct exits available, the player can still walk through walls. For instance, when you start on grid 35, there is no doorway east. But when you type â€œeastâ€, you appear in grid 0. If you try this in several different parts of the maze, you eventually get a code 9 error and it shuts the game down.[/quote:3eem6g14]\n\nThat sounds slightly wierd, a bug if ever I saw one!  As my copy of the code is at work and I am at home I can't check this out right now.  If I get a chance I'll dig it out and see why it happens tomorrow.\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Hi Steve<br/><br/><blockquote><p>ooooh, I ran into a problem while testing. Although it is quite convenient to use the map in the lower right corner, there are some players who prefer to type in the commands. If you type nsw or e it sends you to the dummy room and youâ€™re done. If you type it out (north, south, etc), it moves you correctly. I did a quick fix by making synonyms (n=north, etc). That actually fixed that problem</p></blockquote><br/><br/>Yeah I was aware that you'd need to code synonyms for all the alternative commands N =north etc. you always have to do all the possibilities when you override a quest command - I should have mentioned I hadn't bothered to do it in my demo I suppose!<br/><br/><blockquote><p>if you type out your commands, although the map shows the correct exits available, the player can still walk through walls. For instance, when you start on grid 35, there is no doorway east. But when you type â€œeastâ€, you appear in grid 0. If you try this in several different parts of the maze, you eventually get a code 9 error and it shuts the game down.</p></blockquote><br/><br/>That sounds slightly wierd, a bug if ever I saw one!  As my copy of the code is at work and I am at home I can't check this out right now.  If I get a chance I'll dig it out and see why it happens tomorrow.<br/><br/>Al (MaDbRiT)",
      "PostDate": "2005-07-11T23:43:36+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6630",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Steve\n\nAhem!   <!-- s:oops: --><img src=\"{SMILIES_PATH}/icon_redface.gif\" alt=\":oops:\" title=\"Embarrassed\" /><!-- s:oops: --> Just came to me that this is a simple oversight on my part, I've coded directional commands for north etc, and while the create/destroy exit routines I've done disable directions on the compass rose (navigation buttons) they don't affect execution of typed user commands (which override conventional things like needing exits!)\n\nEasy to fix though, just need to check that the exit chosen exists before letting the player pass through it... swopping the exits code for something like this should do it;\n\n\n[code:3mq3q1pu]\n   command &lt;north&gt; &#123; \n   \tif &#40;$instr&#40;#quest&#46;doorways&#46;dirs#,north&#41;$&lt;&gt;&#41; then &#123;\n      \tset &lt;gridPos;%gridPos%-8&gt; \n      \tif &#40;%gridpos%&lt;&gt;5&#41; then &#123; \n      \t   do &lt;makeExits&gt; \n      \t   goto &lt;GridRoom&gt; \n      \t&#125; \n      \telse goto &lt;doorroom&gt; \n      &#125;\n      else msg &lt;You can't go there&#46;&gt;\n   &#125; \n\n   command &lt;south&gt; &#123;\n \t\tif &#40;$instr&#40;#quest&#46;doorways&#46;dirs#,south&#41;$&lt;&gt;&#41; then &#123;\n      \tset &lt;gridPos;%gridPos%+8&gt; \n      \tdo &lt;makeExits&gt; \n      \tgoto &lt;GridRoom&gt; \n      &#125;\n      else msg &lt;You can't go there&#46;&gt;\n   &#125; \n\n   command &lt;east&gt; &#123; \n \t\tif &#40;$instr&#40;#quest&#46;doorways&#46;dirs#,east&#41;$&lt;&gt;&#41; then &#123;\n      \tset &lt;gridPos;%gridPos%+1&gt; \n      \tdo &lt;makeExits&gt; \n      \tgoto &lt;GridRoom&gt;\n      &#125;\n      else msg &lt;You can't go there&#46;&gt;\n   &#125; \n\n   command &lt;west&gt; &#123; \n    \tif &#40;$instr&#40;#quest&#46;doorways&#46;dirs#,west&#41;$&lt;&gt;&#41; then &#123;   \n      \tset &lt;gridPos;%gridPos%-1&gt; \n      \tdo &lt;makeExits&gt; \n      \tgoto &lt;GridRoom&gt; \n      &#125;\n      else msg &lt;You can't go there&#46;&gt;\n   &#125;[/code:3mq3q1pu]\n\nWith the synonyms in place, this should cater for player navigation by compass rose buttons or typed commands\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Steve<br/><br/>Ahem!   <!-- s:oops: --><img src=\"{SMILIES_PATH}/icon_redface.gif\" alt=\":oops:\" title=\"Embarrassed\" /><!-- s:oops: --> Just came to me that this is a simple oversight on my part, I've coded directional commands for north etc, and while the create/destroy exit routines I've done disable directions on the compass rose (navigation buttons) they don't affect execution of typed user commands (which override conventional things like needing exits!)<br/><br/>Easy to fix though, just need to check that the exit chosen exists before letting the player pass through it... swopping the exits code for something like this should do it;<br/><br/><br/><pre><code><br/>   command &lt;north&gt; &#123; <br/>   \tif &#40;$instr&#40;#quest&#46;doorways&#46;dirs#,north&#41;$&lt;&gt;&#41; then &#123;<br/>      \tset &lt;gridPos;%gridPos%-8&gt; <br/>      \tif &#40;%gridpos%&lt;&gt;5&#41; then &#123; <br/>      \t   do &lt;makeExits&gt; <br/>      \t   goto &lt;GridRoom&gt; <br/>      \t&#125; <br/>      \telse goto &lt;doorroom&gt; <br/>      &#125;<br/>      else msg &lt;You can't go there&#46;&gt;<br/>   &#125; <br/><br/>   command &lt;south&gt; &#123;<br/> \t\tif &#40;$instr&#40;#quest&#46;doorways&#46;dirs#,south&#41;$&lt;&gt;&#41; then &#123;<br/>      \tset &lt;gridPos;%gridPos%+8&gt; <br/>      \tdo &lt;makeExits&gt; <br/>      \tgoto &lt;GridRoom&gt; <br/>      &#125;<br/>      else msg &lt;You can't go there&#46;&gt;<br/>   &#125; <br/><br/>   command &lt;east&gt; &#123; <br/> \t\tif &#40;$instr&#40;#quest&#46;doorways&#46;dirs#,east&#41;$&lt;&gt;&#41; then &#123;<br/>      \tset &lt;gridPos;%gridPos%+1&gt; <br/>      \tdo &lt;makeExits&gt; <br/>      \tgoto &lt;GridRoom&gt;<br/>      &#125;<br/>      else msg &lt;You can't go there&#46;&gt;<br/>   &#125; <br/><br/>   command &lt;west&gt; &#123; <br/>    \tif &#40;$instr&#40;#quest&#46;doorways&#46;dirs#,west&#41;$&lt;&gt;&#41; then &#123;   <br/>      \tset &lt;gridPos;%gridPos%-1&gt; <br/>      \tdo &lt;makeExits&gt; <br/>      \tgoto &lt;GridRoom&gt; <br/>      &#125;<br/>      else msg &lt;You can't go there&#46;&gt;<br/>   &#125;</code></pre><br/><br/>With the synonyms in place, this should cater for player navigation by compass rose buttons or typed commands<br/><br/>Al (MaDbRiT)",
      "PostDate": "2005-07-12T00:16:38+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6631",
      "UserId": 0,
      "Username": "steve the gaming guy",
      "UserAvatar": null,
      "UserGravatar": "6577a0affcb6ea711c75baf052ffd08a",
      "EditableText": "You are quick with the responses!  Thank you!  I'll work on this tomorrow.   <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->\n\nEDIT:\nHmmmm, ok.  Now I've changed it and when you start the game, it shows the available exits but if you try to take any exits (even the non-exits), it says you can't go there.",
      "EditableFormat": "bbcode",
      "HTML": "You are quick with the responses!  Thank you!  I'll work on this tomorrow.   <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --><br/><br/>EDIT:<br/>Hmmmm, ok.  Now I've changed it and when you start the game, it shows the available exits but if you try to take any exits (even the non-exits), it says you can't go there.",
      "PostDate": "2005-07-12T02:55:17+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6633",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Steve wrote\n\n[quote:seteiczv]Now I've changed it and when you start the game, it shows the available exits but if you try to take any exits (even the non-exits), it says you can't go there.[/quote:seteiczv]\n\nThat's what comes of typing 'untried' stuff when you are tired. You b####r it up  <!-- s:oops: --><img src=\"{SMILIES_PATH}/icon_redface.gif\" alt=\":oops:\" title=\"Embarrassed\" /><!-- s:oops: --> \n\nI made a syntax error (substituted a comma for a semi-colon) and completely 'lost' the test condition ( &lt;&gt;0 ) - it SHOULD have looked like this...\n\n[code:seteiczv]   command &lt;north&gt; &#123; \n   \tif &#40;$instr&#40;#quest&#46;doorways&#46;dirs#;north&#41;$&lt;&gt;0&#41; then &#123;\n      \tset &lt;gridPos;%gridPos%-8&gt; \n      \tif &#40;%gridpos%&lt;&gt;5&#41; then &#123; \n      \t   do &lt;makeExits&gt; \n      \t   goto &lt;GridRoom&gt; \n      \t&#125; \n      \telse goto &lt;doorroom&gt; \n      &#125;\n      else msg &lt;You can't go there&#46;&gt;\n   &#125; \n\n   command &lt;south&gt; &#123;\n \t\tif &#40;$instr&#40;#quest&#46;doorways&#46;dirs#;south&#41;$&lt;&gt;0&#41; then &#123;\n      \tset &lt;gridPos;%gridPos%+8&gt; \n      \tdo &lt;makeExits&gt; \n      \tgoto &lt;GridRoom&gt; \n      &#125;\n      else msg &lt;You can't go there&#46;&gt;\n   &#125; \n\n   command &lt;east&gt; &#123; \n \t\tif &#40;$instr&#40;#quest&#46;doorways&#46;dirs#;east&#41;$&lt;&gt;0&#41; then &#123;\n      \tset &lt;gridPos;%gridPos%+1&gt; \n      \tdo &lt;makeExits&gt; \n      \tgoto &lt;GridRoom&gt;\n      &#125;\n      else msg &lt;You can't go there&#46;&gt;\n   &#125; \n\n   command &lt;west&gt; &#123; \n    \tif &#40;$instr&#40;#quest&#46;doorways&#46;dirs#;west&#41;$&lt;&gt;0&#41; then &#123;   \n      \tset &lt;gridPos;%gridPos%-1&gt; \n      \tdo &lt;makeExits&gt; \n      \tgoto &lt;GridRoom&gt; \n      &#125;\n      else msg &lt;You can't go there&#46;&gt;\n   &#125;[/code:seteiczv]\n\nNow that DOES work, 'cause I've actually tested it this time -  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> \n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Steve wrote<br/><br/><blockquote><p>Now I've changed it and when you start the game, it shows the available exits but if you try to take any exits (even the non-exits), it says you can't go there.</p></blockquote><br/><br/>That's what comes of typing 'untried' stuff when you are tired. You b####r it up  <!-- s:oops: --><img src=\"{SMILIES_PATH}/icon_redface.gif\" alt=\":oops:\" title=\"Embarrassed\" /><!-- s:oops: --> <br/><br/>I made a syntax error (substituted a comma for a semi-colon) and completely 'lost' the test condition ( &lt;&gt;0 ) - it SHOULD have looked like this...<br/><br/><pre><code>   command &lt;north&gt; &#123; <br/>   \tif &#40;$instr&#40;#quest&#46;doorways&#46;dirs#;north&#41;$&lt;&gt;0&#41; then &#123;<br/>      \tset &lt;gridPos;%gridPos%-8&gt; <br/>      \tif &#40;%gridpos%&lt;&gt;5&#41; then &#123; <br/>      \t   do &lt;makeExits&gt; <br/>      \t   goto &lt;GridRoom&gt; <br/>      \t&#125; <br/>      \telse goto &lt;doorroom&gt; <br/>      &#125;<br/>      else msg &lt;You can't go there&#46;&gt;<br/>   &#125; <br/><br/>   command &lt;south&gt; &#123;<br/> \t\tif &#40;$instr&#40;#quest&#46;doorways&#46;dirs#;south&#41;$&lt;&gt;0&#41; then &#123;<br/>      \tset &lt;gridPos;%gridPos%+8&gt; <br/>      \tdo &lt;makeExits&gt; <br/>      \tgoto &lt;GridRoom&gt; <br/>      &#125;<br/>      else msg &lt;You can't go there&#46;&gt;<br/>   &#125; <br/><br/>   command &lt;east&gt; &#123; <br/> \t\tif &#40;$instr&#40;#quest&#46;doorways&#46;dirs#;east&#41;$&lt;&gt;0&#41; then &#123;<br/>      \tset &lt;gridPos;%gridPos%+1&gt; <br/>      \tdo &lt;makeExits&gt; <br/>      \tgoto &lt;GridRoom&gt;<br/>      &#125;<br/>      else msg &lt;You can't go there&#46;&gt;<br/>   &#125; <br/><br/>   command &lt;west&gt; &#123; <br/>    \tif &#40;$instr&#40;#quest&#46;doorways&#46;dirs#;west&#41;$&lt;&gt;0&#41; then &#123;   <br/>      \tset &lt;gridPos;%gridPos%-1&gt; <br/>      \tdo &lt;makeExits&gt; <br/>      \tgoto &lt;GridRoom&gt; <br/>      &#125;<br/>      else msg &lt;You can't go there&#46;&gt;<br/>   &#125;</code></pre><br/><br/>Now that DOES work, 'cause I've actually tested it this time -  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> <br/><br/>Al (MaDbRiT)",
      "PostDate": "2005-07-12T21:43:02+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "6649",
      "UserId": 0,
      "Username": "steve the gaming guy",
      "UserAvatar": null,
      "UserGravatar": "6577a0affcb6ea711c75baf052ffd08a",
      "EditableText": "haha...ok thanks!  I'll work on it some time today.",
      "EditableFormat": "bbcode",
      "HTML": "haha...ok thanks!  I'll work on it some time today.",
      "PostDate": "2005-07-13T19:34:50+01:00",
      "LastEditDate": null
    }
  ]
}
