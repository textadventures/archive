{
  "Topic": {
    "TopicId": "oih0odb2pemv3to5yjgyjg",
    "ForumId": "10",
    "Title": "Yet Another Question About Cloning Rooms... [SOLVED]",
    "LastUpdated": "2022-02-18T01:14:50.174942Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "be4faa82-23da-47a7-b328-8a735634dc27",
      "UserId": 471465,
      "Username": "1234676543224",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b4dd66b147d09a81479b3d1538111622?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello again,\r\nI have yet another problem with my room-cloning game. It will create rooms over other existing rooms.\r\nI have noticed that I can, for example, that I can start in a room, go east once, go north twice, then west once and then south and the game will rebuild a room over my existing rooms. Are there any scripts that can check if a room is being built over?\r\n\r\nMy scripts are in an earlier post.\r\n\r\nThank you again",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello again,<br>\nI have yet another problem with my room-cloning game. It will create rooms over other existing rooms.<br>\nI have noticed that I can, for example, that I can start in a room, go east once, go north twice, then west once and then south and the game will rebuild a room over my existing rooms. Are there any scripts that can check if a room is being built over?</p>\n<p>My scripts are in an earlier post.</p>\n<p>Thank you again</p>\n\n",
      "PostDate": "2022-02-18T01:14:50.174942Z",
      "LastEditDate": "2022-02-25T23:23:20.828138Z",
      "link": null
    },
    {
      "PostId": "b0cc2f33-1f71-4e53-88f5-2f6141c4c37e",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you want to make it recognise the existence of a room, you will need to first have some concept of a room having a location. As far as Quest is concerned, rooms are connected by exits. They don't have a location. Only the map engine gives them coordinates.\r\n\r\nI would suggest you give each room a couple of attributes for its coordinates. One thought might be naming them something like `room1_4` or similar. Then you can use `GetObject` to test if the room already exists before creating it.\r\n\r\nI think you could make your 'create room'  function work something like:\r\n* if (room doesn't exist) {\r\n     * create the room\r\n* }\r\n* if (room is not visited) {\r\n    * create an exit to the room\r\n* }\r\n\r\nThat way you can have loops in the path (it creates an exit to an existing room rather than creating a new one) so long as the player hasn't already been to the room on the other side.",
      "EditableFormat": "markdown",
      "HTML": "<p>If you want to make it recognise the existence of a room, you will need to first have some concept of a room having a location. As far as Quest is concerned, rooms are connected by exits. They don't have a location. Only the map engine gives them coordinates.</p>\n<p>I would suggest you give each room a couple of attributes for its coordinates. One thought might be naming them something like <code>room1_4</code> or similar. Then you can use <code>GetObject</code> to test if the room already exists before creating it.</p>\n<p>I think you could make your 'create room'  function work something like:</p>\n<ul>\n<li>if (room doesn't exist) {\n<ul>\n<li>create the room</li>\n</ul>\n</li>\n<li>}</li>\n<li>if (room is not visited) {\n<ul>\n<li>create an exit to the room</li>\n</ul>\n</li>\n<li>}</li>\n</ul>\n<p>That way you can have loops in the path (it creates an exit to an existing room rather than creating a new one) so long as the player hasn't already been to the room on the other side.</p>\n\n",
      "PostDate": "2022-02-18T11:00:24.1840613Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "25ed16fc-6949-4e02-92da-befe90b90936",
      "UserId": 471465,
      "Username": "1234676543224",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b4dd66b147d09a81479b3d1538111622?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hmm, I believe this may be a bit beyond my coding experience. \r\nAlso, would this mean that I would have to go through every room that I had created before (the rooms that are not clones) and add in coordinates for them?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hmm, I believe this may be a bit beyond my coding experience.<br>\nAlso, would this mean that I would have to go through every room that I had created before (the rooms that are not clones) and add in coordinates for them?</p>\n\n",
      "PostDate": "2022-02-18T16:56:35.1702812Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "79bab0cc-519d-4386-aa46-f3d4bdf820d4",
      "UserId": 471465,
      "Username": "1234676543224",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b4dd66b147d09a81479b3d1538111622?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I tried this with this code in each 'create room' function:\r\n```\r\ncreate (\"room_\"+game.xpos+\"_\"+game.ypos)\r\nobj = GetObject(\"room_\"+game.xpos+\"_\"+game.ypos)\r\n```\r\nand then changed the code in the room that is continually being cloned to:\r\n```\r\nif (game.pov.parent.visited=false) {\r\n  sortedw = FilterByType(ScopeExitsForRoom(game.pov.parent),\"westdirection\")\r\n  sortede = FilterByType(ScopeExitsForRoom(game.pov.parent),\"eastdirection\")\r\n  sorteds = FilterByType(ScopeExitsForRoom(game.pov.parent),\"southdirection\")\r\n  sortedn = FilterByType(ScopeExitsForRoom(game.pov.parent),\"northdirection\")\r\n  if (not ListCount(sortede)=0) {\r\n    game.xpos = game.xpos-1\r\n  }\r\n  if (not ListCount(sortedw)=0) {\r\n    game.xpos = game.xpos+1\r\n  }\r\n  if (not ListCount(sortedn)=0) {\r\n    game.ypos = game.ypos-1\r\n  }\r\n  if (not ListCount(sorteds)=0) {\r\n    game.ypos = game.ypos+1\r\n  }\r\n}\r\nif (game.pov.parent.visited=false) {\r\n  if (ListCount(sortede)=0) {\r\n    clonexposroom (game.pov.parent, game.pov.parent, woods)\r\n  }\r\n  if (ListCount(sortedw)=0) {\r\n    clonexnegroom (game.pov.parent, game.pov.parent, woods)\r\n  }\r\n  if (ListCount(sortedn)=0) {\r\n    cloneyposroom (game.pov.parent, game.pov.parent, woods)\r\n  }\r\n  if (ListCount(sorteds)=0) {\r\n    cloneynegroom (game.pov.parent, game.pov.parent, woods)\r\n  }\r\n}\r\n```\r\nbut for some reason, this causes several problems. \r\n\r\nThe first time I try to go north, the map shows the yellow player dot moving south. The next time, it appears to work fine. Going south appears to be fine.\r\n\r\nAnother problem is going west or east. If I try to go west, the map shows the player moving south and a room is show on the map to the east (right). If I try to go east, the map also shows the player moving south, but this time it creates a room to the west.\r\n\r\nThe coordinates of the player when moving east and west work fine when moving in one direction but when trying to move back in the opposite direction, it takes several turns for the game to change the coordinates. Also, during this time, the map goes absolutely crazy.\r\n\r\nAlso, whenever I leave the starting room (which is not cloned), I want it to show the geometric coordinates of the player but instead it says, only if I go north or south, \"You are in room_0_0\" no matter which room I am in. Afterwards it works well and displays the coordinates fine.",
      "EditableFormat": "markdown",
      "HTML": "<p>I tried this with this code in each 'create room' function:</p>\n<pre><code>create (\"room_\"+game.xpos+\"_\"+game.ypos)\nobj = GetObject(\"room_\"+game.xpos+\"_\"+game.ypos)\n</code></pre>\n<p>and then changed the code in the room that is continually being cloned to:</p>\n<pre><code>if (game.pov.parent.visited=false) {\n  sortedw = FilterByType(ScopeExitsForRoom(game.pov.parent),\"westdirection\")\n  sortede = FilterByType(ScopeExitsForRoom(game.pov.parent),\"eastdirection\")\n  sorteds = FilterByType(ScopeExitsForRoom(game.pov.parent),\"southdirection\")\n  sortedn = FilterByType(ScopeExitsForRoom(game.pov.parent),\"northdirection\")\n  if (not ListCount(sortede)=0) {\n    game.xpos = game.xpos-1\n  }\n  if (not ListCount(sortedw)=0) {\n    game.xpos = game.xpos+1\n  }\n  if (not ListCount(sortedn)=0) {\n    game.ypos = game.ypos-1\n  }\n  if (not ListCount(sorteds)=0) {\n    game.ypos = game.ypos+1\n  }\n}\nif (game.pov.parent.visited=false) {\n  if (ListCount(sortede)=0) {\n    clonexposroom (game.pov.parent, game.pov.parent, woods)\n  }\n  if (ListCount(sortedw)=0) {\n    clonexnegroom (game.pov.parent, game.pov.parent, woods)\n  }\n  if (ListCount(sortedn)=0) {\n    cloneyposroom (game.pov.parent, game.pov.parent, woods)\n  }\n  if (ListCount(sorteds)=0) {\n    cloneynegroom (game.pov.parent, game.pov.parent, woods)\n  }\n}\n</code></pre>\n<p>but for some reason, this causes several problems.</p>\n<p>The first time I try to go north, the map shows the yellow player dot moving south. The next time, it appears to work fine. Going south appears to be fine.</p>\n<p>Another problem is going west or east. If I try to go west, the map shows the player moving south and a room is show on the map to the east (right). If I try to go east, the map also shows the player moving south, but this time it creates a room to the west.</p>\n<p>The coordinates of the player when moving east and west work fine when moving in one direction but when trying to move back in the opposite direction, it takes several turns for the game to change the coordinates. Also, during this time, the map goes absolutely crazy.</p>\n<p>Also, whenever I leave the starting room (which is not cloned), I want it to show the geometric coordinates of the player but instead it says, only if I go north or south, \"You are in room_0_0\" no matter which room I am in. Afterwards it works well and displays the coordinates fine.</p>\n\n",
      "PostDate": "2022-02-24T14:12:49.4498796Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2a43f521-dc79-40ee-8207-ee742fb25de1",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "First thing I notice is that you have `cloneyposroom`  for north and `cloneynegroom` for south; which seems to be the opposite way around from how Quest's map coordinates work. That likely isn't an issue, because the two coordinate systems shouldn't affect each other, but it could lead to confusion at some point.\r\n\r\n> in the room that is continually being cloned\r\n\r\nI'm a little confused by your terminology. You talk about a room being cloned, but you seem to be creating new rooms, not cloning.\r\n\r\nIt's hard to work out what the issue is here, because I don't seem to have the full context. Individual snippets of code without explanation of how they connect together don't give the full picture. Is it possible to share the game? Or to post all of the relevant code (including the function headers) from full code view?\r\n\r\nI think I could get my head around this more easily if I could walk through the code in my head, following what the state of your variables is at each point.",
      "EditableFormat": "markdown",
      "HTML": "<p>First thing I notice is that you have <code>cloneyposroom</code>  for north and <code>cloneynegroom</code> for south; which seems to be the opposite way around from how Quest's map coordinates work. That likely isn't an issue, because the two coordinate systems shouldn't affect each other, but it could lead to confusion at some point.</p>\n<blockquote>\n<p>in the room that is continually being cloned</p>\n</blockquote>\n<p>I'm a little confused by your terminology. You talk about a room being cloned, but you seem to be creating new rooms, not cloning.</p>\n<p>It's hard to work out what the issue is here, because I don't seem to have the full context. Individual snippets of code without explanation of how they connect together don't give the full picture. Is it possible to share the game? Or to post all of the relevant code (including the function headers) from full code view?</p>\n<p>I think I could get my head around this more easily if I could walk through the code in my head, following what the state of your variables is at each point.</p>\n\n",
      "PostDate": "2022-02-24T16:39:28.2494929Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6b034441-a774-432a-9c24-a448aaf5c131",
      "UserId": 471465,
      "Username": "1234676543224",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b4dd66b147d09a81479b3d1538111622?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sure, I'll share the game. Here's the [link](https://textadventures.co.uk/games/view/rytng4hwse6sjmcs_vzbfq/cloning-room-test \"link\"). My terminology was just an error.",
      "EditableFormat": "markdown",
      "HTML": "<p>Sure, I'll share the game. Here's the <a href=\"https://textadventures.co.uk/games/view/rytng4hwse6sjmcs_vzbfq/cloning-room-test\" title=\"link\">link</a>. My terminology was just an error.</p>\n\n",
      "PostDate": "2022-02-24T19:51:44.7206028Z",
      "LastEditDate": "2022-02-24T19:54:41.1577702Z",
      "link": null
    },
    {
      "PostId": "6ab4fe37-23ec-4bcc-ae4c-96e83a27dbd8",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This seems like there's an awful lot of repeated code for the new room; which is tripping over itself.\r\n\r\nSo… what you are doing is:\r\n\r\n* Enter the first room. `game.xpos` and `game.ypos` are both zero\r\n* If we haven't visited this room before:\r\n    * Check if there are exits to the east. If so, subtract 1 from `game.xpos`. (There aren't, so it's still `0`)\r\n    * Check if there are exits to the west. If so add 1 to `game.xpos`. (There aren't, so it's still `0`)\r\n    * Check if there are exits to the north. If so subtract 1 from `game.ypos`. (There aren't, so it's still `0`)\r\n    * Check if there are exits to the south. If so add 1 to `game.ypos`. (There aren't, so it's still `0`)\r\n* If we haven't visited this room before:\r\n    * Check if there are exits to the east. There aren't, so try to create the room specified by `xpos` and `ypos` (currently `room0_0`)\r\n        * The room already exists (it's this one), so just create an \"east\" exit leading to it\r\n    * Check if there are exits to the west. There is, the reverse exit for the one you just created, so do nothing.\r\n    * Check if there are exits to the north. There aren't, so try to create the room specified by `xpos` and `ypos` (currently `room0_0`)\r\n        * The room already exists (it's this one), so just create an \"north\" exit leading to it\r\n    * Check if there are exits to the south. There is, the reverse exit for the one you just created, so do nothing.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>This seems like there's an awful lot of repeated code for the new room; which is tripping over itself.</p>\n<p>So… what you are doing is:</p>\n<ul>\n<li>Enter the first room. <code>game.xpos</code> and <code>game.ypos</code> are both zero</li>\n<li>If we haven't visited this room before:\n<ul>\n<li>Check if there are exits to the east. If so, subtract 1 from <code>game.xpos</code>. (There aren't, so it's still <code>0</code>)</li>\n<li>Check if there are exits to the west. If so add 1 to <code>game.xpos</code>. (There aren't, so it's still <code>0</code>)</li>\n<li>Check if there are exits to the north. If so subtract 1 from <code>game.ypos</code>. (There aren't, so it's still <code>0</code>)</li>\n<li>Check if there are exits to the south. If so add 1 to <code>game.ypos</code>. (There aren't, so it's still <code>0</code>)</li>\n</ul>\n</li>\n<li>If we haven't visited this room before:\n<ul>\n<li>Check if there are exits to the east. There aren't, so try to create the room specified by <code>xpos</code> and <code>ypos</code> (currently <code>room0_0</code>)\n<ul>\n<li>The room already exists (it's this one), so just create an \"east\" exit leading to it</li>\n</ul>\n</li>\n<li>Check if there are exits to the west. There is, the reverse exit for the one you just created, so do nothing.</li>\n<li>Check if there are exits to the north. There aren't, so try to create the room specified by <code>xpos</code> and <code>ypos</code> (currently <code>room0_0</code>)\n<ul>\n<li>The room already exists (it's this one), so just create an \"north\" exit leading to it</li>\n</ul>\n</li>\n<li>Check if there are exits to the south. There is, the reverse exit for the one you just created, so do nothing.</li>\n</ul>\n</li>\n</ul>\n\n",
      "PostDate": "2022-02-25T00:17:22.4670203Z",
      "LastEditDate": "2022-02-25T00:38:03.5707716Z",
      "link": null
    },
    {
      "PostId": "b814ab37-f11f-4082-a640-50b5d8e56ab3",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I would suggest that each room, rather than the game, has an X and Y coordinate. And it doesn't seem efficient to have a separate function for each direction.\r\n\r\nSo you'd probably be better with just one function, something like:\r\n```\r\n<function name=\"createnewroom\" parameters=\"fromRoom, direction, template\">\r\n  // Work out the coordinates of the new room:\r\n  xpos = fromRoom.xpos\r\n  ypos = fromRoom.ypos\r\n  switch (direction) {\r\n    case (\"north\") {\r\n      ypos = ypos - 1\r\n      reverse = \"south\"\r\n    }\r\n    case (\"south\") {\r\n      ypos = ypos + 1\r\n      reverse = \"north\"\r\n    }\r\n    case (\"west\") {\r\n      xpos = xpos - 1\r\n      reverse = \"east\"\r\n    }\r\n    case (\"east\") {\r\n      xpos = xpos + 1\r\n      reverse = \"west\"\r\n    }\r\n  }\r\n\r\n  // Work out the name of the \"new\" room\r\n  roomname = \"room\"+xpos+\"_\"+ypos\r\n  // (can't have a negative number in a room name, so change it to a letter)\r\n  roomname = Replace (roomname, \"_-\", \"_n\")\r\n  roomname = Replace (roomname, \"-\", \"w\")\r\n  obj = GetObject (roomname)\r\n\r\n  // If the room doesn't exist, create it\r\n  if (obj = null) {\r\n\r\n    // If you have 'special' rooms that appear at specific coords, or something like that\r\n    // or if there is a chance of a room being a different type of terrain\r\n    // you could include code here to check for those xpos/ypos and change what is created\r\n\r\n    create (roomname)\r\n    obj = GetObject (roomname)\r\n    obj.xpos = xpos\r\n    obj.ypos = ypos\r\n\r\n    foreach (attribute, Split(\"enter;firstenter;exitslistprefix;descprefix;isroom;beforefirstenter;description;prefix;usedefaultprefix\")) {\r\n      set (obj, attr, GetAttribute (template, attr))\r\n    }\r\n    obj.parent = fromRoom.parent\r\n    obj.visited = false\r\n  }\r\n\r\n  // Now, we know that obj exists, whether we just created it or it was there before\r\n  // But we only want to create doors into it if we haven't been there before.\r\n  //    It would be weird creating new exits to a place the player has already been\r\n  if (not GetBoolean (obj, \"visited\")) {\r\n    create exit (direction, fromRoom, obj, direction+\"direction\")\r\n    create exit (reverse, obj, fromRoom, reverse+\"direction\")\r\n  }\r\n</function>\r\n```\r\n(That's pretty much the structure I suggested before: Check if the room exists before creating it, and then check if it's already been visited before creating new exits in it. Just moving the xpos/ypos  calculations inside the function)\r\n\r\nAnd then your `beforefirstenter` script would be:\r\n```\r\nexits = ScopeExitsForRoom (this)\r\nforeach (direction, Split(\"north;south;east;west\")) {\r\n  if (ListCount (FilterByType (exits, direction+\"direction\")) = 0) {\r\n    createnewroom (this, direction, woods)\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I would suggest that each room, rather than the game, has an X and Y coordinate. And it doesn't seem efficient to have a separate function for each direction.</p>\n<p>So you'd probably be better with just one function, something like:</p>\n<pre><code>&lt;function name=\"createnewroom\" parameters=\"fromRoom, direction, template\"&gt;\n  // Work out the coordinates of the new room:\n  xpos = fromRoom.xpos\n  ypos = fromRoom.ypos\n  switch (direction) {\n    case (\"north\") {\n      ypos = ypos - 1\n      reverse = \"south\"\n    }\n    case (\"south\") {\n      ypos = ypos + 1\n      reverse = \"north\"\n    }\n    case (\"west\") {\n      xpos = xpos - 1\n      reverse = \"east\"\n    }\n    case (\"east\") {\n      xpos = xpos + 1\n      reverse = \"west\"\n    }\n  }\n\n  // Work out the name of the \"new\" room\n  roomname = \"room\"+xpos+\"_\"+ypos\n  // (can't have a negative number in a room name, so change it to a letter)\n  roomname = Replace (roomname, \"_-\", \"_n\")\n  roomname = Replace (roomname, \"-\", \"w\")\n  obj = GetObject (roomname)\n\n  // If the room doesn't exist, create it\n  if (obj = null) {\n\n    // If you have 'special' rooms that appear at specific coords, or something like that\n    // or if there is a chance of a room being a different type of terrain\n    // you could include code here to check for those xpos/ypos and change what is created\n\n    create (roomname)\n    obj = GetObject (roomname)\n    obj.xpos = xpos\n    obj.ypos = ypos\n\n    foreach (attribute, Split(\"enter;firstenter;exitslistprefix;descprefix;isroom;beforefirstenter;description;prefix;usedefaultprefix\")) {\n      set (obj, attr, GetAttribute (template, attr))\n    }\n    obj.parent = fromRoom.parent\n    obj.visited = false\n  }\n\n  // Now, we know that obj exists, whether we just created it or it was there before\n  // But we only want to create doors into it if we haven't been there before.\n  //    It would be weird creating new exits to a place the player has already been\n  if (not GetBoolean (obj, \"visited\")) {\n    create exit (direction, fromRoom, obj, direction+\"direction\")\n    create exit (reverse, obj, fromRoom, reverse+\"direction\")\n  }\n&lt;/function&gt;\n</code></pre>\n<p>(That's pretty much the structure I suggested before: Check if the room exists before creating it, and then check if it's already been visited before creating new exits in it. Just moving the xpos/ypos  calculations inside the function)</p>\n<p>And then your <code>beforefirstenter</code> script would be:</p>\n<pre><code>exits = ScopeExitsForRoom (this)\nforeach (direction, Split(\"north;south;east;west\")) {\n  if (ListCount (FilterByType (exits, direction+\"direction\")) = 0) {\n    createnewroom (this, direction, woods)\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2022-02-25T00:36:54.6351725Z",
      "LastEditDate": "2022-02-25T00:45:59.899161Z",
      "link": null
    },
    {
      "PostId": "0895b91a-7d1c-4f83-8970-764493cd8bfb",
      "UserId": 471465,
      "Username": "1234676543224",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b4dd66b147d09a81479b3d1538111622?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you so much, this works well. \r\n\r\nWould you have any tips on how to continue the creation of rooms pretty much endlessly? Like in an open-world rpg.\r\n\r\nShould I put code in the beforefirstenter script of the room that is the template that creates more rooms? If so, what should I put as the room's xpos and ypos?",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you so much, this works well.</p>\n<p>Would you have any tips on how to continue the creation of rooms pretty much endlessly? Like in an open-world rpg.</p>\n<p>Should I put code in the beforefirstenter script of the room that is the template that creates more rooms? If so, what should I put as the room's xpos and ypos?</p>\n\n",
      "PostDate": "2022-02-25T18:06:28.0832811Z",
      "LastEditDate": "2022-02-25T18:59:06.2897284Z",
      "link": null
    },
    {
      "PostId": "0024a033-284e-4b7b-8b3a-59341c2361eb",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Would you have any tips on how to continue the creation of rooms pretty much endlessly? Like in an open-world rpg.\r\n>\r\n> Should I put code in the beforefirstenter script of the room that is the template that creates more rooms? If so, what should I put as the room's xpos and ypos?\r\n\r\nI assumed that was the intention; if every room has that beforefirstenter script, it should keep on creating rooms as far as the player walks.\r\n\r\n> If so, what should I put as the room's xpos and ypos?\r\n\r\nYou shouldn't need to, I think. Every time that script creates a room, it sets its `xpos` and `ypos` based on the adjacent room. The only room you need to give coordinates for is the first one, which I suspect would be 0_0.\r\n\r\nAs far as creating an open world, I think the next additions would be adding things to the rooms to make them distinct. You could do this when creating the rooms; or you could give the template rooms a `beforefirstenter` script that adds items or description to the room after creating the adjacent areas.\r\n\r\nHow you go about this would depend very much on the type of game you're trying to create. I've used a room-creation system before to both make a faerie woodland (where the map distorts itself and rooms move around on the map) and a random dungeon generator (with a dozen different room types which can be chosen at random); and the systems involved are quite different.\r\n\r\nI'd be happy to help out with any further coding issues :)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Would you have any tips on how to continue the creation of rooms pretty much endlessly? Like in an open-world rpg.</p>\n<p>Should I put code in the beforefirstenter script of the room that is the template that creates more rooms? If so, what should I put as the room's xpos and ypos?</p>\n</blockquote>\n<p>I assumed that was the intention; if every room has that beforefirstenter script, it should keep on creating rooms as far as the player walks.</p>\n<blockquote>\n<p>If so, what should I put as the room's xpos and ypos?</p>\n</blockquote>\n<p>You shouldn't need to, I think. Every time that script creates a room, it sets its <code>xpos</code> and <code>ypos</code> based on the adjacent room. The only room you need to give coordinates for is the first one, which I suspect would be 0_0.</p>\n<p>As far as creating an open world, I think the next additions would be adding things to the rooms to make them distinct. You could do this when creating the rooms; or you could give the template rooms a <code>beforefirstenter</code> script that adds items or description to the room after creating the adjacent areas.</p>\n<p>How you go about this would depend very much on the type of game you're trying to create. I've used a room-creation system before to both make a faerie woodland (where the map distorts itself and rooms move around on the map) and a random dungeon generator (with a dozen different room types which can be chosen at random); and the systems involved are quite different.</p>\n<p>I'd be happy to help out with any further coding issues :)</p>\n\n",
      "PostDate": "2022-02-25T20:17:01.0581102Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4f6fb62a-812d-4993-bbca-1d4870eebe9b",
      "UserId": 471465,
      "Username": "1234676543224",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b4dd66b147d09a81479b3d1538111622?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you so much!\r\n\r\nThis has given me some very interesting ideas to think over.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you so much!</p>\n<p>This has given me some very interesting ideas to think over.</p>\n\n",
      "PostDate": "2022-02-25T23:22:55.5329645Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
