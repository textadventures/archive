{
  "Topic": {
    "TopicId": "4047",
    "ForumId": "10",
    "Title": "switch and case",
    "LastUpdated": "2013-12-14T04:31:56+00:00",
    "ReplyCount": 4
  },
  "Posts": [
    {
      "PostId": "27096",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "I was reading about the switch and case statements and it seems like you can't test for truthy values with case, like you would in an if statement. Is that true?\n\nIn other words I would want to do something like, \n\n[code:13p1vjdg]\nnumber = GetRandomInt(0, 10)\nswitch (number) {\n  case (number &lt; 5) {\n    msg (&quot;Foooooo&quot;)\n    }\n  case (number &gt; 4) {\n    msg (&quot;Barrrrrr&quot;) \n    }\n  }\n[/code:13p1vjdg]\n\nBut it doesn't seem like that's possible (without specifically writing out all the values in each case statement). Or am I missing something?\n\nWhy does case work like this if so? It seems like it'd be really handy to have just a boolean test in case.",
      "EditableFormat": "bbcode",
      "HTML": "I was reading about the switch and case statements and it seems like you can't test for truthy values with case, like you would in an if statement. Is that true?<br/><br/>In other words I would want to do something like, <br/><br/><pre><code><br/>number = GetRandomInt(0, 10)<br/>switch (number) {<br/>  case (number &lt; 5) {<br/>    msg (&quot;Foooooo&quot;)<br/>    }<br/>  case (number &gt; 4) {<br/>    msg (&quot;Barrrrrr&quot;) <br/>    }<br/>  }<br/></code></pre><br/><br/>But it doesn't seem like that's possible (without specifically writing out all the values in each case statement). Or am I missing something?<br/><br/>Why does case work like this if so? It seems like it'd be really handy to have just a boolean test in case.",
      "PostDate": "2013-12-13T03:28:52+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27097",
      "UserId": 0,
      "Username": "Liam315",
      "UserAvatar": null,
      "UserGravatar": "ded290a24d340d761d42c897d08111aa",
      "EditableText": "I realize this may just be because you've used a simplified example, but if you're accounting for a range of values, why not just use if/else statements?\n\nBecause switches need to be specific values, you could try and do a mathematical something to resolve a range into a single digit before invoking the switch. e.g.\n[code:2y2lbeog]number = GetRandomInt(0, 99)\nnumber = number / 10\nswitch (number) {\n  case (0,1,2,3,4) {\n    msg (&quot;Foooooo&quot;)\n    }\n  case (5,6,7,8,9) {\n    msg (&quot;Barrrrrr&quot;) \n    }\n  }[/code:2y2lbeog]\n(When dividing integers rather than doubles, the remainder is ignored rather than rounded up or down.)\n\nThis is a basic example where your ranges are equal, but depending on what your doing you should be able to manipulate the number into a singular case before invoking the switch. Whether this is tidier and more efficient that simply using the if/else statements is up to you though.",
      "EditableFormat": "bbcode",
      "HTML": "I realize this may just be because you've used a simplified example, but if you're accounting for a range of values, why not just use if/else statements?<br/><br/>Because switches need to be specific values, you could try and do a mathematical something to resolve a range into a single digit before invoking the switch. e.g.<br/><pre><code>number = GetRandomInt(0, 99)<br/>number = number / 10<br/>switch (number) {<br/>  case (0,1,2,3,4) {<br/>    msg (&quot;Foooooo&quot;)<br/>    }<br/>  case (5,6,7,8,9) {<br/>    msg (&quot;Barrrrrr&quot;) <br/>    }<br/>  }</code></pre><br/>(When dividing integers rather than doubles, the remainder is ignored rather than rounded up or down.)<br/><br/>This is a basic example where your ranges are equal, but depending on what your doing you should be able to manipulate the number into a singular case before invoking the switch. Whether this is tidier and more efficient that simply using the if/else statements is up to you though.",
      "PostDate": "2013-12-13T04:56:32+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27098",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "Thanks Liam, you're right if/else works here, I was just curious about Quest's case, since it works differently than what I'm used to.",
      "EditableFormat": "bbcode",
      "HTML": "Thanks Liam, you're right if/else works here, I was just curious about Quest's case, since it works differently than what I'm used to.",
      "PostDate": "2013-12-13T15:33:00+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27099",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I almost hesitate to throw this out, because it's a bit of an abomination, but I can't help myself...  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> \n\nWhen you have a switch/case statement, Quest will run down the list of case statements and see which match the value in the switch part. The first one that matches is executed. Quest is different from other languages I've used in that the values in the case expressions don't need to be constant, and they don't need to be unique. So you can use strings, expressions (e.g. 3+4), etc.\n\nWhen I say &quot;don't need to be unique&quot;, I must qualify that. You can not have two values that literally look alike. For example, you can't have:\n\n[code:42v44xov]switch (sum) {\n   case(7) {\n       msg(&quot;first 7&quot;)\n   }\n   case(7) {\n       msg(&quot;second 7&quot;)\n   }\n}[/code:42v44xov]\nQuest will complain about duplicate keys. However, you *can* have this:\n[code:42v44xov]switch (sum) {\n   case(7) {\n       msg(&quot;first 7&quot;)\n   }\n   case(3+4) {\n       msg(&quot;second 7&quot;)\n   }\n}[/code:42v44xov]\nAnd that will execute properly. Of course, there's no point, as the first 7 means that 3+4 will never evaluated. But it does mean there is a way to do what you want, which is a sort of &quot;obscured if&quot;. You almost had it with your statement about Boolean values. The trick is that Boolean values only have two values, true and false. So if you want to have &quot;truthy&quot; values in your cases, then you need to have &quot;truthy&quot; values in your switch - in other words, either true or false.\n\nThis is bizarre, but it works:\n\n[code:42v44xov]number = GetRandomInt(0, 10)\nswitch (true) {\n  case (number &lt; 5) {\n    msg (&quot;Foooooo&quot;)\n    }\n  case (number &gt; 4) {\n    msg (&quot;Barrrrrr&quot;) \n    }\n  }[/code:42v44xov]\nWhat it does differently is that the switch value is simply &quot;true&quot;. This means the switch statement will search for the first case statement that evaluates to true. It's really non-standard, in terms of what I suspect Alex intended, but it does work!",
      "EditableFormat": "bbcode",
      "HTML": "I almost hesitate to throw this out, because it's a bit of an abomination, but I can't help myself...  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> <br/><br/>When you have a switch/case statement, Quest will run down the list of case statements and see which match the value in the switch part. The first one that matches is executed. Quest is different from other languages I've used in that the values in the case expressions don't need to be constant, and they don't need to be unique. So you can use strings, expressions (e.g. 3+4), etc.<br/><br/>When I say &quot;don't need to be unique&quot;, I must qualify that. You can not have two values that literally look alike. For example, you can't have:<br/><br/><pre><code>switch (sum) {<br/>   case(7) {<br/>       msg(&quot;first 7&quot;)<br/>   }<br/>   case(7) {<br/>       msg(&quot;second 7&quot;)<br/>   }<br/>}</code></pre><br/>Quest will complain about duplicate keys. However, you *can* have this:<br/><pre><code>switch (sum) {<br/>   case(7) {<br/>       msg(&quot;first 7&quot;)<br/>   }<br/>   case(3+4) {<br/>       msg(&quot;second 7&quot;)<br/>   }<br/>}</code></pre><br/>And that will execute properly. Of course, there's no point, as the first 7 means that 3+4 will never evaluated. But it does mean there is a way to do what you want, which is a sort of &quot;obscured if&quot;. You almost had it with your statement about Boolean values. The trick is that Boolean values only have two values, true and false. So if you want to have &quot;truthy&quot; values in your cases, then you need to have &quot;truthy&quot; values in your switch - in other words, either true or false.<br/><br/>This is bizarre, but it works:<br/><br/><pre><code>number = GetRandomInt(0, 10)<br/>switch (true) {<br/>  case (number &lt; 5) {<br/>    msg (&quot;Foooooo&quot;)<br/>    }<br/>  case (number &gt; 4) {<br/>    msg (&quot;Barrrrrr&quot;) <br/>    }<br/>  }</code></pre><br/>What it does differently is that the switch value is simply &quot;true&quot;. This means the switch statement will search for the first case statement that evaluates to true. It's really non-standard, in terms of what I suspect Alex intended, but it does work!",
      "PostDate": "2013-12-13T22:16:51+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27101",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "Ahh, it's so right in your face yet hard to see! Brilliant deduction Jay <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->.",
      "EditableFormat": "bbcode",
      "HTML": "Ahh, it's so right in your face yet hard to see! Brilliant deduction Jay <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->.",
      "PostDate": "2013-12-14T04:31:56+00:00",
      "LastEditDate": null
    }
  ]
}
