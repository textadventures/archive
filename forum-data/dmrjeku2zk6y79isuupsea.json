{
  "Topic": {
    "TopicId": "dmrjeku2zk6y79isuupsea",
    "ForumId": "10",
    "Title": "Buggy as Bloody Heck upon Reload",
    "LastUpdated": "2017-09-06T17:10:48.0098935Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "f257ae97-718d-4ef8-82fd-faa719754c5c",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi All,\r\n\r\nI'm doing TA with offline editor, latest Quest version.  I've just noticed at least 3 problems (!@#$) with my game when reloading it (but everything works fine with new game):\r\n\r\n1) MAP WON'T DISPLAY\r\nNew game: Map is turned on under \"Interface\" tab, but map display and map recording are then turned off in UserInitInterface (\"Advanced Scripts\" tab).  Player starts in a non-mapable area.  There is a mapable area elsewhere (where map display/recording are turned back on).  I save the game in the non-mapable area and then reload it, then enter the mapable area.  The map will not display (a blank map grid is displayed).  This happens whether or not I entered the mapable area before the game was saved.  However, if I save in a mapable area and reload, the map DOES show up.  I made a barebones game to demonstrate this:\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"MapTest\">\r\n    <gameid>f1511def-3569-40c0-9d6d-f59e7163e6d7</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n    <feature_advancedscripts />\r\n    <gridmap />\r\n    <mapexitwidth type=\"int\">1</mapexitwidth>\r\n    <mapexitcolour>Black</mapexitcolour>\r\n  </game>\r\n  <object name=\"MapableRoom\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">3</attr>\r\n    <attr name=\"grid_borderwidth\" type=\"int\">3</attr>\r\n    <attr name=\"grid_label\">Mapable Room</attr>\r\n    <attr name=\"grid_border\">Black</attr>\r\n    <beforeenter type=\"script\">\r\n      game.gridmap = True\r\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\r\n    </beforeenter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"south\" to=\"NonMapableRoom\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"NonMapableRoom\">\r\n    <inherit name=\"editor_room\" />\r\n    <beforeenter type=\"script\">\r\n      game.gridmap = False\r\n      JS.eval (\"$('#gridPanel').css('display', 'none')\")\r\n    </beforeenter>\r\n    <exit alias=\"north\" to=\"MapableRoom\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n</asl>\r\n```\r\n2) ATTRIBUTE NOT SAVED\r\nAt least one string attribute (player.power) doesn't get saved on reload?  At new game start, player.power = \"off\" (set inside the player object) .  I have a turn script that prints this out for debugging purposes.  I go somewhere that changes player.power = \"on\" (turn script verifies this).  I save game, then reload.  I type \"wait\" or \"look\" or whatever, and turn script shows that player.power = \"off\"!  So I guess that attribute never got saved correctly.  WTFreak?  Most or all other attributes did get saved correctly.  I never change the player object.\r\n\r\n3) DEFAULT ROOM \"REDRAWN\"\r\nWhen I save the game in a, say, 3x3 tile room and then reload, Quest will display the player in a 1x1 room (a default room) within the 3x3 room.  This only happens in the starting room, and strangely, it happens inconsistently (bug methinks?).  Actually, sometimes if I save in a 1x1 room with a white border and reload, I'll start in a 1x1 room with a black border (default room again -- just more noticeable in a 3x3 room).  This might be related to problem #1 and turning the map display/recording on and off in-game.\r\n\r\nNot to cast blame on the brilliant Pixie, but I've noticed a lot more of these types of reload issues have arisen since 5.7 came out.  I've been able to fix several of these up to now, but now I'm stumped (and exhausted).  I did try to separate my scripts properly to go under either the \"Scripts\" start tab or \"Advanced Scripts\" UI tab.  I even did a complete uninstall and clean install of Quest, without effect.\r\n\r\nType here...help, hints, 411, 911, tear hair out, etc.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi All,</p>\n<p>I'm doing TA with offline editor, latest Quest version.  I've just noticed at least 3 problems (!@#$) with my game when reloading it (but everything works fine with new game):</p>\n<ol>\n<li>MAP WON'T DISPLAY<br>\nNew game: Map is turned on under \"Interface\" tab, but map display and map recording are then turned off in UserInitInterface (\"Advanced Scripts\" tab).  Player starts in a non-mapable area.  There is a mapable area elsewhere (where map display/recording are turned back on).  I save the game in the non-mapable area and then reload it, then enter the mapable area.  The map will not display (a blank map grid is displayed).  This happens whether or not I entered the mapable area before the game was saved.  However, if I save in a mapable area and reload, the map DOES show up.  I made a barebones game to demonstrate this:</li>\n</ol>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"MapTest\"&gt;\n    &lt;gameid&gt;f1511def-3569-40c0-9d6d-f59e7163e6d7&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n    &lt;feature_advancedscripts /&gt;\n    &lt;gridmap /&gt;\n    &lt;mapexitwidth type=\"int\"&gt;1&lt;/mapexitwidth&gt;\n    &lt;mapexitcolour&gt;Black&lt;/mapexitcolour&gt;\n  &lt;/game&gt;\n  &lt;object name=\"MapableRoom\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_label\"&gt;Mapable Room&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Black&lt;/attr&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      game.gridmap = True\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\n    &lt;/beforeenter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"south\" to=\"NonMapableRoom\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"NonMapableRoom\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      game.gridmap = False\n      JS.eval (\"$('#gridPanel').css('display', 'none')\")\n    &lt;/beforeenter&gt;\n    &lt;exit alias=\"north\" to=\"MapableRoom\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n<ol start=\"2\">\n<li>\n<p>ATTRIBUTE NOT SAVED<br>\nAt least one string attribute (player.power) doesn't get saved on reload?  At new game start, player.power = \"off\" (set inside the player object) .  I have a turn script that prints this out for debugging purposes.  I go somewhere that changes player.power = \"on\" (turn script verifies this).  I save game, then reload.  I type \"wait\" or \"look\" or whatever, and turn script shows that player.power = \"off\"!  So I guess that attribute never got saved correctly.  WTFreak?  Most or all other attributes did get saved correctly.  I never change the player object.</p>\n</li>\n<li>\n<p>DEFAULT ROOM \"REDRAWN\"<br>\nWhen I save the game in a, say, 3x3 tile room and then reload, Quest will display the player in a 1x1 room (a default room) within the 3x3 room.  This only happens in the starting room, and strangely, it happens inconsistently (bug methinks?).  Actually, sometimes if I save in a 1x1 room with a white border and reload, I'll start in a 1x1 room with a black border (default room again -- just more noticeable in a 3x3 room).  This might be related to problem #1 and turning the map display/recording on and off in-game.</p>\n</li>\n</ol>\n<p>Not to cast blame on the brilliant Pixie, but I've noticed a lot more of these types of reload issues have arisen since 5.7 came out.  I've been able to fix several of these up to now, but now I'm stumped (and exhausted).  I did try to separate my scripts properly to go under either the \"Scripts\" start tab or \"Advanced Scripts\" UI tab.  I even did a complete uninstall and clean install of Quest, without effect.</p>\n<p>Type here...help, hints, 411, 911, tear hair out, etc.</p>\n\n",
      "PostDate": "2017-09-06T17:10:48.0098935Z",
      "LastEditDate": "2017-09-06T17:21:33.3304517Z",
      "link": null
    },
    {
      "PostId": "ac5d61a8-d410-4705-96de-a45bc4be6a82",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wow, no one else has problems when reloading a game?",
      "EditableFormat": "markdown",
      "HTML": "<p>Wow, no one else has problems when reloading a game?</p>\n\n",
      "PostDate": "2017-09-07T06:44:49.5887866Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c5bc82a4-e274-4db9-aadc-727ea1b288d2",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I would need to see more to know what is going on.\r\n\r\n1. I loaded up your barebones game, and in the first room the map can be seen, go south it disappears, go north it reappears. I did that a few times, and it seems to work fine.\r\n\r\n3. There are issues you need to be careful of with the interface initialisation script. Changing CSS values is generally fine, but, for example, printing to screen can mess it up. I would guess this is the issue, but would have to see the script (at least) to say more.",
      "EditableFormat": "markdown",
      "HTML": "<p>I would need to see more to know what is going on.</p>\n<ol>\n<li>\n<p>I loaded up your barebones game, and in the first room the map can be seen, go south it disappears, go north it reappears. I did that a few times, and it seems to work fine.</p>\n</li>\n<li>\n<p>There are issues you need to be careful of with the interface initialisation script. Changing CSS values is generally fine, but, for example, printing to screen can mess it up. I would guess this is the issue, but would have to see the script (at least) to say more.</p>\n</li>\n</ol>\n\n",
      "PostDate": "2017-09-07T06:59:46.7781867Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1476dc73-ae65-4eb9-886c-c5210c728a32",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks for the response, Pixie.\r\n\r\n1. The barebones game works until you save it in the area that is not mapable.  When you reload it and enter the mapable area, the map will not display.  I tried flipping the order of these scripts without effect:\r\n```\r\ngame.gridmap = True/False\r\nJS.eval (\"$('#gridPanel').css('display', 'block/none')\")\r\n```\r\n2. I went through all of the interface initialization tab and don't see anything that is printing to screen.  Anything that prints, I normally put under the Start tab.  I tried changing \"player.power\" to a boolean attribute without effect.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks for the response, Pixie.</p>\n<ol>\n<li>The barebones game works until you save it in the area that is not mapable.  When you reload it and enter the mapable area, the map will not display.  I tried flipping the order of these scripts without effect:</li>\n</ol>\n<pre><code>game.gridmap = True/False\nJS.eval (\"$('#gridPanel').css('display', 'block/none')\")\n</code></pre>\n<ol start=\"2\">\n<li>I went through all of the interface initialization tab and don't see anything that is printing to screen.  Anything that prints, I normally put under the Start tab.  I tried changing \"player.power\" to a boolean attribute without effect.</li>\n</ol>\n\n",
      "PostDate": "2017-09-07T07:45:29.0385014Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "705ac357-3c8a-415a-b912-d7e901367f55",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've had the map go crazy, but I thought it was just because I'm using PathLib.  I just turned my map off (since I'm not very fond of it anyway).  My problem was easy.\r\n\r\nWhat do I do to recreate your error?\r\n\r\nJust load it up, save, quit, and restart?",
      "EditableFormat": "markdown",
      "HTML": "<p>I've had the map go crazy, but I thought it was just because I'm using PathLib.  I just turned my map off (since I'm not very fond of it anyway).  My problem was easy.</p>\n<p>What do I do to recreate your error?</p>\n<p>Just load it up, save, quit, and restart?</p>\n\n",
      "PostDate": "2017-09-07T07:47:55.0541697Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c7f7bb53-032d-460c-864e-b22c95ce8873",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi KV,\r\n\r\nJust make a new game, then replace the game's code with my code (above) in full code view.  Run the game and go south into the non-mapable room.  Then save and reload.  When you go north back into the mapable room, the map won't display.\r\n\r\nPix: There's a script in my UI init tab that prints HTML -- could that be the problem?  To answer my own question, just deleted that script but there's no difference.  Deleted all other scripts that might cause printing problems but no effect.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi KV,</p>\n<p>Just make a new game, then replace the game's code with my code (above) in full code view.  Run the game and go south into the non-mapable room.  Then save and reload.  When you go north back into the mapable room, the map won't display.</p>\n<p>Pix: There's a script in my UI init tab that prints HTML -- could that be the problem?  To answer my own question, just deleted that script but there's no difference.  Deleted all other scripts that might cause printing problems but no effect.</p>\n\n",
      "PostDate": "2017-09-07T08:00:24.9978196Z",
      "LastEditDate": "2017-09-07T08:15:51.6382403Z",
      "link": null
    },
    {
      "PostId": "9adba4ef-a9fd-4ad1-acc9-bca1ca826e55",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok, just solved problem #2.  My own stupidity (again).  I found an obscure place in my UI init tab that made player.power = \"off\".  It was in a script that called a function that called another function (thus i didn't see it).  My bad.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok, just solved problem #2.  My own stupidity (again).  I found an obscure place in my UI init tab that made player.power = \"off\".  It was in a script that called a function that called another function (thus i didn't see it).  My bad.</p>\n\n",
      "PostDate": "2017-09-07T08:27:43.4603463Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "81c09748-3357-473e-afe9-088f01411dd7",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For 1, I think the issue is that if `game.gridmap` is false, Quest does not bother to save the map, so when you reload, no map, and if does not add to the map when you go in the other room because that room is flagged as visited.\r\n\r\nThe solution would be to override the SAVE command to turn on `game.gridmap`before doing the save, but that is not ideal, as on reload the unmapped room will be mapped.\r\n\r\nFor 3, could you paste your script into a post? There are various gotchas, and printing stuff in there is definitely going to cause issues.",
      "EditableFormat": "markdown",
      "HTML": "<p>For 1, I think the issue is that if <code>game.gridmap</code> is false, Quest does not bother to save the map, so when you reload, no map, and if does not add to the map when you go in the other room because that room is flagged as visited.</p>\n<p>The solution would be to override the SAVE command to turn on <code>game.gridmap</code>before doing the save, but that is not ideal, as on reload the unmapped room will be mapped.</p>\n<p>For 3, could you paste your script into a post? There are various gotchas, and printing stuff in there is definitely going to cause issues.</p>\n\n",
      "PostDate": "2017-09-07T09:19:27.0518559Z",
      "LastEditDate": "2017-09-07T09:20:11.0615297Z",
      "link": null
    },
    {
      "PostId": "267b6aaf-20b7-49d5-bfe0-3343300d852b",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Issue #1 MAP WON'T DISPLAY -\r\nPixie: Did more testing and you are right about your explanation.  However, the map doesn't display even if the mapable rooms have NOT been visited.  Also, I've confirmed via debugging turn script that \"game.gridmap = True\" even when the map doesn't display but should.\r\n\r\nTried different solutions and none really worked:\r\na) Added \"game.gridmap = True\" before a save, but like you indicated, upon reload and entering mapable area, a slew of error messages shows up and the map gets distorted at the starting point.\r\nb) Added \"game.gridmap = True\" before a save, and \"game.gridmap = False\" after the save, but on reload map doesn't display at all.\r\nc) Under the UI Init tab, flagged all mapable rooms as visited = False.  On reload, map still doesn't display.\r\n\r\nI discovered something else though -- Start a new game in NonMapRoom1 and do a save #1, then reload and enter MapRoom2 (map doesn't display as previously mentioned).  Then travel through the rest of the mapable rooms 3 and 4 (with the map not showing).  Go back to NonMapRoom1 and do a save #2.  Then reload and go to MapRoom2 and do a save #3 (map still not showing).  Reload one last time and the map displays (as previously mentioned, because you're reloading in a mapable area), BUT NOTE THAT THE MAP DISPLAYS ALL OF THE MAPABLE ROOMS THAT YOU TRAVELED THROUGH EARLIER! (between save #1 and #2).  You can see this in my new code:\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"MapTest\">\r\n    <gameid>f1511def-3569-40c0-9d6d-f59e7163e6d7</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n    <feature_advancedscripts />\r\n    <gridmap />\r\n    <mapexitwidth type=\"int\">1</mapexitwidth>\r\n    <mapexitcolour>Black</mapexitcolour>\r\n    <inituserinterface type=\"script\">\r\n      JS.setCommands (\"save\")\r\n    </inituserinterface>\r\n    <start type=\"script\">\r\n      JS.ShowGrid (0)\r\n      game.gridmap = False\r\n      JS.eval (\"$('#gridPanel').css('display', 'none')\")\r\n    </start>\r\n    <commandpane />\r\n  </game>\r\n  <object name=\"NonmapableRoom1\">\r\n    <inherit name=\"editor_room\" />\r\n    <beforeenter type=\"script\">\r\n      JS.ShowGrid (0)\r\n      game.gridmap = False\r\n      JS.eval (\"$('#gridPanel').css('display', 'none')\")\r\n    </beforeenter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"south\" to=\"MapableRoom2\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"MapableRoom2\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">3</attr>\r\n    <attr name=\"grid_borderwidth\" type=\"int\">2</attr>\r\n    <attr name=\"grid_label\">Mapable 2</attr>\r\n    <beforeenter type=\"script\">\r\n      JS.ShowGrid (300)\r\n      game.gridmap = True\r\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\r\n    </beforeenter>\r\n    <exit alias=\"north\" to=\"NonmapableRoom1\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"MapableRoom3\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"MapableRoom3\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">3</attr>\r\n    <attr name=\"grid_borderwidth\" type=\"int\">2</attr>\r\n    <attr name=\"grid_label\">Mapable 3</attr>\r\n    <beforeenter type=\"script\">\r\n      game.gridmap = True\r\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\r\n    </beforeenter>\r\n    <exit alias=\"north\" to=\"MapableRoom2\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"MapableRoom4\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"MapableRoom4\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">3</attr>\r\n    <attr name=\"grid_borderwidth\" type=\"int\">2</attr>\r\n    <attr name=\"grid_label\">Mapable 4</attr>\r\n    <beforeenter type=\"script\">\r\n      game.gridmap = True\r\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\r\n    </beforeenter>\r\n    <exit alias=\"north\" to=\"MapableRoom3\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n</asl>\r\n```\r\nThis means that even when you save in a non-mapable area (with game.gridmap = False), Quest remembers all the mapped rooms that you were in, even when it the map display is blank.  So the mapped info is stored somewhere -- how can I access this?\r\n\r\nIssue #3 DEFAULT ROOM REDRAWN -\r\nI'm letting this go for now, as I don't know how to demo this (it's inconsistent) and may be tied to issue #1.\r\n>There are various gotchas, and printing stuff in there is definitely going to cause issues.\r\n\r\nPix: if it's not too tedious, could you just list the various \"gotchas\" and I'll look at my UI Init tab to see if I've been \"gotten\".",
      "EditableFormat": "markdown",
      "HTML": "<p>Issue #1 MAP WON'T DISPLAY -<br>\nPixie: Did more testing and you are right about your explanation.  However, the map doesn't display even if the mapable rooms have NOT been visited.  Also, I've confirmed via debugging turn script that \"game.gridmap = True\" even when the map doesn't display but should.</p>\n<p>Tried different solutions and none really worked:<br>\na) Added \"game.gridmap = True\" before a save, but like you indicated, upon reload and entering mapable area, a slew of error messages shows up and the map gets distorted at the starting point.<br>\nb) Added \"game.gridmap = True\" before a save, and \"game.gridmap = False\" after the save, but on reload map doesn't display at all.<br>\nc) Under the UI Init tab, flagged all mapable rooms as visited = False.  On reload, map still doesn't display.</p>\n<p>I discovered something else though -- Start a new game in NonMapRoom1 and do a save #1, then reload and enter MapRoom2 (map doesn't display as previously mentioned).  Then travel through the rest of the mapable rooms 3 and 4 (with the map not showing).  Go back to NonMapRoom1 and do a save #2.  Then reload and go to MapRoom2 and do a save #3 (map still not showing).  Reload one last time and the map displays (as previously mentioned, because you're reloading in a mapable area), BUT NOTE THAT THE MAP DISPLAYS ALL OF THE MAPABLE ROOMS THAT YOU TRAVELED THROUGH EARLIER! (between save #1 and #2).  You can see this in my new code:</p>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"MapTest\"&gt;\n    &lt;gameid&gt;f1511def-3569-40c0-9d6d-f59e7163e6d7&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n    &lt;feature_advancedscripts /&gt;\n    &lt;gridmap /&gt;\n    &lt;mapexitwidth type=\"int\"&gt;1&lt;/mapexitwidth&gt;\n    &lt;mapexitcolour&gt;Black&lt;/mapexitcolour&gt;\n    &lt;inituserinterface type=\"script\"&gt;\n      JS.setCommands (\"save\")\n    &lt;/inituserinterface&gt;\n    &lt;start type=\"script\"&gt;\n      JS.ShowGrid (0)\n      game.gridmap = False\n      JS.eval (\"$('#gridPanel').css('display', 'none')\")\n    &lt;/start&gt;\n    &lt;commandpane /&gt;\n  &lt;/game&gt;\n  &lt;object name=\"NonmapableRoom1\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      JS.ShowGrid (0)\n      game.gridmap = False\n      JS.eval (\"$('#gridPanel').css('display', 'none')\")\n    &lt;/beforeenter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"south\" to=\"MapableRoom2\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"MapableRoom2\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_label\"&gt;Mapable 2&lt;/attr&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      JS.ShowGrid (300)\n      game.gridmap = True\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\n    &lt;/beforeenter&gt;\n    &lt;exit alias=\"north\" to=\"NonmapableRoom1\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"MapableRoom3\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"MapableRoom3\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_label\"&gt;Mapable 3&lt;/attr&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      game.gridmap = True\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\n    &lt;/beforeenter&gt;\n    &lt;exit alias=\"north\" to=\"MapableRoom2\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"MapableRoom4\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"MapableRoom4\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_label\"&gt;Mapable 4&lt;/attr&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      game.gridmap = True\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\n    &lt;/beforeenter&gt;\n    &lt;exit alias=\"north\" to=\"MapableRoom3\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n<p>This means that even when you save in a non-mapable area (with game.gridmap = False), Quest remembers all the mapped rooms that you were in, even when it the map display is blank.  So the mapped info is stored somewhere -- how can I access this?</p>\n<p>Issue #3 DEFAULT ROOM REDRAWN -<br>\nI'm letting this go for now, as I don't know how to demo this (it's inconsistent) and may be tied to issue #1.</p>\n<blockquote>\n<p>There are various gotchas, and printing stuff in there is definitely going to cause issues.</p>\n</blockquote>\n<p>Pix: if it's not too tedious, could you just list the various \"gotchas\" and I'll look at my UI Init tab to see if I've been \"gotten\".</p>\n\n",
      "PostDate": "2017-09-07T15:10:43.6617098Z",
      "LastEditDate": "2017-09-07T16:33:49.4108017Z",
      "link": null
    },
    {
      "PostId": "b1f92b2b-67ca-4631-bfa7-58010d89f87e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This **seems** to have 'fixed' the map problem:\r\n\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"MapTest\">\r\n    <gameid>f1511def-3569-40c0-9d6d-f59e7163e6d7</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n    <feature_advancedscripts />\r\n    <gridmap />\r\n    <mapexitwidth type=\"int\">1</mapexitwidth>\r\n    <mapexitcolour>Black</mapexitcolour>\r\n    <commandpane />\r\n    <inituserinterface type=\"script\">\r\n      JS.setCommands (\"save\")\r\n      if (player.parent = NonmapableRoom1) {\r\n        JS.ShowGrid (0)\r\n        JS.eval (\"$('#gridPanel').css('display', 'none')\")\r\n      }\r\n    </inituserinterface>\r\n    <start type=\"script\">\r\n      // JS.ShowGrid (0)\r\n      // game.gridmap = false\r\n      // JS.eval (\"$('#gridPanel').css('display', 'none')\")\r\n    </start>\r\n  </game>\r\n  <command name=\"save\">\r\n    <pattern type=\"string\">^save$</pattern>\r\n    <script>\r\n      game.gridmap = true\r\n      request (RequestSave, \"\")\r\n    </script>\r\n  </command>\r\n  <object name=\"NonmapableRoom1\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_borderwidth\" type=\"int\">0</attr>\r\n    <attr name=\"grid_border\">White</attr>\r\n    <beforeenter type=\"script\">\r\n      JS.ShowGrid (0)\r\n      game.gridmap = False\r\n      JS.eval (\"$('#gridPanel').css('display', 'none')\")\r\n    </beforeenter>\r\n    <enter type=\"script\">\r\n      // JS.ShowGrid (0)\r\n      // JS.eval (\"$('#gridPanel').css('display', 'none')\")\r\n    </enter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"south\" to=\"MapableRoom2\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"MapableRoom2\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">3</attr>\r\n    <attr name=\"grid_borderwidth\" type=\"int\">2</attr>\r\n    <attr name=\"grid_label\">Mapable 2</attr>\r\n    <beforeenter type=\"script\">\r\n      JS.ShowGrid (300)\r\n      game.gridmap = True\r\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\r\n    </beforeenter>\r\n    <exit alias=\"north\" to=\"NonmapableRoom1\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"MapableRoom3\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"MapableRoom3\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">3</attr>\r\n    <attr name=\"grid_borderwidth\" type=\"int\">2</attr>\r\n    <attr name=\"grid_label\">Mapable 3</attr>\r\n    <beforeenter type=\"script\">\r\n      game.gridmap = True\r\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\r\n    </beforeenter>\r\n    <exit alias=\"north\" to=\"MapableRoom2\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"MapableRoom4\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"MapableRoom4\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">3</attr>\r\n    <attr name=\"grid_borderwidth\" type=\"int\">2</attr>\r\n    <attr name=\"grid_label\">Mapable 4</attr>\r\n    <beforeenter type=\"script\">\r\n      game.gridmap = True\r\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\r\n    </beforeenter>\r\n    <exit alias=\"north\" to=\"MapableRoom3\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>This <strong>seems</strong> to have 'fixed' the map problem:</p>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"MapTest\"&gt;\n    &lt;gameid&gt;f1511def-3569-40c0-9d6d-f59e7163e6d7&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n    &lt;feature_advancedscripts /&gt;\n    &lt;gridmap /&gt;\n    &lt;mapexitwidth type=\"int\"&gt;1&lt;/mapexitwidth&gt;\n    &lt;mapexitcolour&gt;Black&lt;/mapexitcolour&gt;\n    &lt;commandpane /&gt;\n    &lt;inituserinterface type=\"script\"&gt;\n      JS.setCommands (\"save\")\n      if (player.parent = NonmapableRoom1) {\n        JS.ShowGrid (0)\n        JS.eval (\"$('#gridPanel').css('display', 'none')\")\n      }\n    &lt;/inituserinterface&gt;\n    &lt;start type=\"script\"&gt;\n      // JS.ShowGrid (0)\n      // game.gridmap = false\n      // JS.eval (\"$('#gridPanel').css('display', 'none')\")\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;command name=\"save\"&gt;\n    &lt;pattern type=\"string\"&gt;^save$&lt;/pattern&gt;\n    &lt;script&gt;\n      game.gridmap = true\n      request (RequestSave, \"\")\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;object name=\"NonmapableRoom1\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;White&lt;/attr&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      JS.ShowGrid (0)\n      game.gridmap = False\n      JS.eval (\"$('#gridPanel').css('display', 'none')\")\n    &lt;/beforeenter&gt;\n    &lt;enter type=\"script\"&gt;\n      // JS.ShowGrid (0)\n      // JS.eval (\"$('#gridPanel').css('display', 'none')\")\n    &lt;/enter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"south\" to=\"MapableRoom2\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"MapableRoom2\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_label\"&gt;Mapable 2&lt;/attr&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      JS.ShowGrid (300)\n      game.gridmap = True\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\n    &lt;/beforeenter&gt;\n    &lt;exit alias=\"north\" to=\"NonmapableRoom1\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"MapableRoom3\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"MapableRoom3\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_label\"&gt;Mapable 3&lt;/attr&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      game.gridmap = True\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\n    &lt;/beforeenter&gt;\n    &lt;exit alias=\"north\" to=\"MapableRoom2\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"MapableRoom4\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"MapableRoom4\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_label\"&gt;Mapable 4&lt;/attr&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      game.gridmap = True\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\n    &lt;/beforeenter&gt;\n    &lt;exit alias=\"north\" to=\"MapableRoom3\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2017-09-07T18:44:17.054577Z",
      "LastEditDate": "2017-09-07T19:14:24.0242424Z",
      "link": null
    },
    {
      "PostId": "8cfcf83e-ee2b-49c0-ad29-d65911d3e17b",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\n<inituserinterface type=\"script\">\r\n      JS.setCommands (\"save\")\r\n      if (player.parent = NonmapableRoom1) {\r\n        JS.ShowGrid (0)\r\n        JS.eval (\"$('#gridPanel').css('display', 'none')\")\r\n      }\r\n    </inituserinterface>\r\n```\r\n\r\n---\r\n```\r\n<command name=\"save\">\r\n    <pattern type=\"string\">^save$</pattern>\r\n    <script>\r\n      game.gridmap = true\r\n      request (RequestSave, \"\")\r\n    </script>\r\n  </command>\r\n```\r\n\r\n---\r\nI changed the grid_border to white so the little 1x1 doesn't show up on the map:\r\n```\r\n<object name=\"NonmapableRoom1\">\r\n    <inherit name=\"editor_room\" />\r\n    <beforeenter type=\"script\">\r\n      JS.ShowGrid (0)\r\n      game.gridmap = False\r\n      JS.eval (\"$('#gridPanel').css('display', 'none')\")\r\n    </beforeenter>\r\n    <enter type=\"script\">\r\n      JS.ShowGrid (0)\r\n      JS.eval (\"$('#gridPanel').css('display', 'none')\")\r\n    </enter>\r\n    <attr name=\"grid_borderwidth\" type=\"int\">0</attr>\r\n    <attr name=\"grid_border\">White</attr>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"south\" to=\"MapableRoom2\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n```\r\n\r\n\r\nI commented out the start script, too, and it doesn't seem to effect anything:\r\n\r\n```\r\n<start type=\"script\">\r\n      // JS.ShowGrid (0)\r\n      // game.gridmap = false\r\n      // JS.eval (\"$('#gridPanel').css('display', 'none')\")\r\n    </start>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>&lt;inituserinterface type=\"script\"&gt;\n      JS.setCommands (\"save\")\n      if (player.parent = NonmapableRoom1) {\n        JS.ShowGrid (0)\n        JS.eval (\"$('#gridPanel').css('display', 'none')\")\n      }\n    &lt;/inituserinterface&gt;\n</code></pre>\n<hr>\n<pre><code>&lt;command name=\"save\"&gt;\n    &lt;pattern type=\"string\"&gt;^save$&lt;/pattern&gt;\n    &lt;script&gt;\n      game.gridmap = true\n      request (RequestSave, \"\")\n    &lt;/script&gt;\n  &lt;/command&gt;\n</code></pre>\n<hr>\n<p>I changed the grid_border to white so the little 1x1 doesn't show up on the map:</p>\n<pre><code>&lt;object name=\"NonmapableRoom1\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      JS.ShowGrid (0)\n      game.gridmap = False\n      JS.eval (\"$('#gridPanel').css('display', 'none')\")\n    &lt;/beforeenter&gt;\n    &lt;enter type=\"script\"&gt;\n      JS.ShowGrid (0)\n      JS.eval (\"$('#gridPanel').css('display', 'none')\")\n    &lt;/enter&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;White&lt;/attr&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"south\" to=\"MapableRoom2\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n</code></pre>\n<p>I commented out the start script, too, and it doesn't seem to effect anything:</p>\n<pre><code>&lt;start type=\"script\"&gt;\n      // JS.ShowGrid (0)\n      // game.gridmap = false\n      // JS.eval (\"$('#gridPanel').css('display', 'none')\")\n    &lt;/start&gt;\n</code></pre>\n\n",
      "PostDate": "2017-09-07T19:13:26.2294454Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "06ed7b30-89b1-4be3-98c4-eeeded184c54",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Good job, KV.  That works in the test game, but it doesn't quite work in the actual game.  The problem being that there are rooms in the non-mapable area much further away from NonMapableRoom1 (and away from the mapable rooms).  So if I don't have game.gridmap = False in the UI Init tab, when I enter the first mapable room, it will show a map leading all the way back from the start.  But if I do have game.gridmap = False in the UI Init tab, when I enter the first mapable room, it will show a bunch of coordinate errors and the first mapable room will have its orientation distorted.\r\n\r\nBut good job, KV -- what you did helps because at least I get a map displayed now.  Now what I need is a way to tell Quest what the x, y coordinates are when I enter the first mapable room.",
      "EditableFormat": "markdown",
      "HTML": "<p>Good job, KV.  That works in the test game, but it doesn't quite work in the actual game.  The problem being that there are rooms in the non-mapable area much further away from NonMapableRoom1 (and away from the mapable rooms).  So if I don't have game.gridmap = False in the UI Init tab, when I enter the first mapable room, it will show a map leading all the way back from the start.  But if I do have game.gridmap = False in the UI Init tab, when I enter the first mapable room, it will show a bunch of coordinate errors and the first mapable room will have its orientation distorted.</p>\n<p>But good job, KV -- what you did helps because at least I get a map displayed now.  Now what I need is a way to tell Quest what the x, y coordinates are when I enter the first mapable room.</p>\n\n",
      "PostDate": "2017-09-07T23:22:21.1541347Z",
      "LastEditDate": "2017-09-07T23:36:03.3302052Z",
      "link": null
    },
    {
      "PostId": "fc3f289d-158c-42f3-b62b-27055ab826be",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details><summary>Revised code</summary>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"MapTest\">\r\n    <gameid>f1511def-3569-40c0-9d6d-f59e7163e6d7</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n    <feature_advancedscripts />\r\n    <gridmap />\r\n    <mapexitwidth type=\"int\">1</mapexitwidth>\r\n    <mapexitcolour>Black</mapexitcolour>\r\n    <commandpane />\r\n    <inituserinterface type=\"script\">\r\n      JS.setCommands (\"save\")\r\n      borderCheck\r\n      if ((HasAttribute(player.parent, \"noMap\")) and player.parent.noMap) {\r\n        JS.ShowGrid (0)\r\n        JS.eval (\"$('#gridPanel').css('display', 'none')\")\r\n      }\r\n    </inituserinterface>\r\n    <start type=\"script\">\r\n      msg (\"normal\")\r\n    </start>\r\n  </game>\r\n  <command name=\"save\">\r\n    <pattern type=\"string\">^save$</pattern>\r\n    <script>\r\n      game.gridmap = true\r\n      request (RequestSave, \"\")\r\n    </script>\r\n  </command>\r\n  <object name=\"NonmapableRoom1\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_borderwidth\" type=\"int\">0</attr>\r\n    <attr name=\"grid_border\">Black</attr>\r\n    <beforeenter type=\"script\">\r\n      JS.ShowGrid (0)\r\n      game.gridmap = False\r\n      JS.eval (\"$('#gridPanel').css('display', 'none')\")\r\n    </beforeenter>\r\n    <enter type=\"script\">\r\n      // JS.ShowGrid (0)\r\n      // JS.eval (\"$('#gridPanel').css('display', 'none')\")\r\n    </enter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"south\" to=\"MapableRoom2\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"MapableRoom2\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">3</attr>\r\n    <attr name=\"grid_borderwidth\" type=\"int\">2</attr>\r\n    <attr name=\"grid_label\">Mapable 2</attr>\r\n    <beforeenter type=\"script\">\r\n      JS.ShowGrid (300)\r\n      game.gridmap = True\r\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\r\n    </beforeenter>\r\n    <exit alias=\"north\" to=\"NonmapableRoom1\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"MapableRoom3\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"MapableRoom3\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">3</attr>\r\n    <attr name=\"grid_borderwidth\" type=\"int\">2</attr>\r\n    <attr name=\"grid_label\">Mapable 3</attr>\r\n    <beforeenter type=\"script\">\r\n      game.gridmap = True\r\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\r\n    </beforeenter>\r\n    <exit alias=\"north\" to=\"MapableRoom2\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"MapableRoom4\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"MapableRoom4\">\r\n    <inherit name=\"editor_room\" />\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">3</attr>\r\n    <attr name=\"grid_borderwidth\" type=\"int\">2</attr>\r\n    <attr name=\"grid_label\">Mapable 4</attr>\r\n    <beforeenter type=\"script\">\r\n      game.gridmap = True\r\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\r\n      JS.ShowGrid (300)\r\n    </beforeenter>\r\n    <exit alias=\"north\" to=\"MapableRoom3\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"NonmappableRoom2\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"NonmappableRoom2\">\r\n    <inherit name=\"editor_room\" />\r\n    <beforeenter type=\"script\">\r\n      JS.ShowGrid (0)\r\n      game.gridmap = False\r\n      JS.eval (\"$('#gridPanel').css('display', 'none')\")\r\n    </beforeenter>\r\n    <attr name=\"grid_borderwidth\" type=\"int\">0</attr>\r\n    <attr name=\"grid_border\">Black</attr>\r\n    <enter type=\"script\">\r\n    </enter>\r\n    <exit alias=\"north\" to=\"MapableRoom4\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <function name=\"borderCheck\">\r\n    foreach (nmr, AllObjects()) {\r\n      if (nmr.grid_borderwidth = 0) {\r\n        nmr.noMap = true\r\n      }\r\n    }\r\n  </function>\r\n</asl>\r\n```\r\n\r\n</details>\r\n\r\n---\r\nJust change the border width to 0 on the rooms you don't want to show up on the map.  (I had it where you'd have to set up an attribute, but I made a function that checks for border width then does that for you.  I added another unmapped room on the end to check it.  Seems to work.)\r\n\r\n\r\n---\r\nUPDATE\r\n\r\nOh!  I see!  I need to add a room in the middle to properly check!",
      "EditableFormat": "markdown",
      "HTML": "<details><summary>Revised code</summary>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"MapTest\"&gt;\n    &lt;gameid&gt;f1511def-3569-40c0-9d6d-f59e7163e6d7&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n    &lt;feature_advancedscripts /&gt;\n    &lt;gridmap /&gt;\n    &lt;mapexitwidth type=\"int\"&gt;1&lt;/mapexitwidth&gt;\n    &lt;mapexitcolour&gt;Black&lt;/mapexitcolour&gt;\n    &lt;commandpane /&gt;\n    &lt;inituserinterface type=\"script\"&gt;\n      JS.setCommands (\"save\")\n      borderCheck\n      if ((HasAttribute(player.parent, \"noMap\")) and player.parent.noMap) {\n        JS.ShowGrid (0)\n        JS.eval (\"$('#gridPanel').css('display', 'none')\")\n      }\n    &lt;/inituserinterface&gt;\n    &lt;start type=\"script\"&gt;\n      msg (\"normal\")\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;command name=\"save\"&gt;\n    &lt;pattern type=\"string\"&gt;^save$&lt;/pattern&gt;\n    &lt;script&gt;\n      game.gridmap = true\n      request (RequestSave, \"\")\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;object name=\"NonmapableRoom1\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Black&lt;/attr&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      JS.ShowGrid (0)\n      game.gridmap = False\n      JS.eval (\"$('#gridPanel').css('display', 'none')\")\n    &lt;/beforeenter&gt;\n    &lt;enter type=\"script\"&gt;\n      // JS.ShowGrid (0)\n      // JS.eval (\"$('#gridPanel').css('display', 'none')\")\n    &lt;/enter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"south\" to=\"MapableRoom2\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"MapableRoom2\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_label\"&gt;Mapable 2&lt;/attr&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      JS.ShowGrid (300)\n      game.gridmap = True\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\n    &lt;/beforeenter&gt;\n    &lt;exit alias=\"north\" to=\"NonmapableRoom1\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"MapableRoom3\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"MapableRoom3\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_label\"&gt;Mapable 3&lt;/attr&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      game.gridmap = True\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\n    &lt;/beforeenter&gt;\n    &lt;exit alias=\"north\" to=\"MapableRoom2\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"MapableRoom4\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"MapableRoom4\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_label\"&gt;Mapable 4&lt;/attr&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      game.gridmap = True\n      JS.eval (\"$('#gridPanel').css('display', 'block')\")\n      JS.ShowGrid (300)\n    &lt;/beforeenter&gt;\n    &lt;exit alias=\"north\" to=\"MapableRoom3\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"NonmappableRoom2\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"NonmappableRoom2\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      JS.ShowGrid (0)\n      game.gridmap = False\n      JS.eval (\"$('#gridPanel').css('display', 'none')\")\n    &lt;/beforeenter&gt;\n    &lt;attr name=\"grid_borderwidth\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Black&lt;/attr&gt;\n    &lt;enter type=\"script\"&gt;\n    &lt;/enter&gt;\n    &lt;exit alias=\"north\" to=\"MapableRoom4\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;function name=\"borderCheck\"&gt;\n    foreach (nmr, AllObjects()) {\n      if (nmr.grid_borderwidth = 0) {\n        nmr.noMap = true\n      }\n    }\n  &lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n<hr>\n<p>Just change the border width to 0 on the rooms you don't want to show up on the map.  (I had it where you'd have to set up an attribute, but I made a function that checks for border width then does that for you.  I added another unmapped room on the end to check it.  Seems to work.)</p>\n<hr>\n<p>UPDATE</p>\n<p>Oh!  I see!  I need to add a room in the middle to properly check!</p>\n\n",
      "PostDate": "2017-09-08T01:24:59.2576011Z",
      "LastEditDate": "2017-09-08T01:30:09.6991749Z",
      "link": null
    },
    {
      "PostId": "d6e40f87-3780-4bdf-a67a-c0e3c1de597e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I dropped an unmappable room in between mappable3 and mappable4, and, yeah... lots of errors...\r\n\r\nWe can probably just copy and adjust the function that adds to the dictionary... \r\n\r\nMaybe...\r\n\r\n(If not, Pixie will let us know.)\r\n\r\n---\r\n\r\nHere's everything I see in the save file:\r\n\r\n<details><summary> MANY Details</summary>\r\n\r\n```\r\n  <function name=\"Grid_SetScale\" parameters=\"scale\">\r\n    JS.Grid_SetScale (scale)\r\n  </function>\r\n  <function name=\"Grid_CalculateMapCoordinates\" parameters=\"room, playerobject\"><![CDATA[\r\n    if (room.parent <> null) {\r\n      if (room.grid_parent_offset_auto) {\r\n        room.grid_parent_offset_x = (room.parent.grid_width - room.grid_width) /2.0\r\n        room.grid_parent_offset_y = (room.parent.grid_length - room.grid_length) /2.0\r\n      }\r\n      Grid_SetGridCoordinateForPlayer (playerobject, room.parent, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") - room.grid_parent_offset_x)\r\n      Grid_SetGridCoordinateForPlayer (playerobject, room.parent, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") - room.grid_parent_offset_y)\r\n      Grid_SetGridCoordinateForPlayer (playerobject, room.parent, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\r\n      room.parent.grid_render = true\r\n      Grid_CalculateMapCoordinates (room.parent, playerobject)\r\n    }\r\n    foreach (exit, AllExits()) {\r\n      if (exit.parent = room and not GetBoolean(exit, \"lookonly\")) {\r\n        if (DoesInherit(exit, \"northdirection\")) {\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + room.grid_width/2.0 + exit.grid_offset_x)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + exit.grid_offset_y)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") - exit.to.grid_width/2.0)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", (Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") - exit.to.grid_length) - exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\"))\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") - exit.grid_length)\r\n          exit.grid_render = true\r\n          exit.to.grid_render = true\r\n        }\r\n        else if (DoesInherit(exit, \"eastdirection\")) {\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + room.grid_width + exit.grid_offset_x)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + room.grid_length/2.0 + exit.grid_offset_y)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") + exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") - exit.to.grid_length/2.0)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") + exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\"))\r\n          exit.grid_render = true\r\n          exit.to.grid_render = true\r\n        }\r\n        else if (DoesInherit(exit, \"southdirection\")) {\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + room.grid_width/2.0 + exit.grid_offset_x)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + room.grid_length + exit.grid_offset_y)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") - exit.to.grid_width/2.0)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") + exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\"))\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") + exit.grid_length)\r\n          exit.grid_render = true\r\n          exit.to.grid_render = true\r\n        }\r\n        else if (DoesInherit(exit, \"westdirection\")) {\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + exit.grid_offset_x)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + room.grid_length/2.0 + exit.grid_offset_y)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", (Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") - exit.to.grid_width) - exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") - exit.to.grid_length/2.0)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") - exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\"))\r\n          exit.grid_render = true\r\n          exit.to.grid_render = true\r\n        }\r\n        else if (DoesInherit(exit, \"northwestdirection\")) {\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + exit.grid_offset_x)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + exit.grid_offset_y)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", (Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") - exit.to.grid_width) - exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", (Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") - exit.to.grid_length) - exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") - exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") - exit.grid_length)\r\n          exit.grid_render = true\r\n          exit.to.grid_render = true\r\n        }\r\n        else if (DoesInherit(exit, \"northeastdirection\")) {\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + room.grid_width + exit.grid_offset_x)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + exit.grid_offset_y)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") + exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", (Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") - exit.to.grid_length) - exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") + exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") - exit.grid_length)\r\n          exit.grid_render = true\r\n          exit.to.grid_render = true\r\n        }\r\n        else if (DoesInherit(exit, \"southwestdirection\")) {\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + exit.grid_offset_x)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + room.grid_length + exit.grid_offset_y)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", (Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") - exit.to.grid_width) - exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") + exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") - exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") + exit.grid_length)\r\n          exit.grid_render = true\r\n          exit.to.grid_render = true\r\n        }\r\n        else if (DoesInherit(exit, \"southeastdirection\")) {\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + room.grid_width + exit.grid_offset_x)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + room.grid_length + exit.grid_offset_y)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") + exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") + exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") + exit.grid_length)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") + exit.grid_length)\r\n          exit.grid_render = true\r\n          exit.to.grid_render = true\r\n        }\r\n        else if (DoesInherit(exit, \"updirection\")) {\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + room.grid_width/2.0 - exit.to.grid_width/2.0 + exit.grid_offset_x)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + room.grid_length/2.0 - exit.to.grid_length/2.0 + exit.grid_offset_y)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\") + exit.grid_length)\r\n          exit.grid_render = false\r\n          exit.to.grid_render = true\r\n        }\r\n        else if (DoesInherit(exit, \"downdirection\")) {\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + room.grid_width/2.0 - exit.to.grid_width/2.0 + exit.grid_offset_x)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + room.grid_length/2.0 - exit.to.grid_length/2.0 + exit.grid_offset_y)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\") - exit.grid_length)\r\n          exit.grid_render = false\r\n          exit.to.grid_render = true\r\n        }\r\n        else if (DoesInherit(exit, \"indirection\") or DoesInherit(exit, \"outdirection\")) {\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + room.grid_width/2.0 - exit.to.grid_width/2.0 + exit.grid_offset_x)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + room.grid_length/2.0 - exit.to.grid_length/2.0 + exit.grid_offset_y)\r\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\r\n          exit.grid_render = false\r\n          exit.to.grid_render = true\r\n        }\r\n      }\r\n    }\r\n  ]]></function>\r\n  <function name=\"Grid_DrawPlayerInRoom\" parameters=\"room\">\r\n    if (room.grid_render) {\r\n      Grid_DrawRoom (room, false, game.pov)\r\n      player_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\r\n      player_y = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0\r\n      player_z = Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\")\r\n      JS.Grid_DrawPlayer (player_x, player_y, player_z, 5, \"black\", 2, \"yellow\")\r\n    }\r\n  </function>\r\n  <function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"><![CDATA[\r\n    if (room.grid_render) {\r\n      if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\r\n        if (room.parent <> null) {\r\n          Grid_DrawRoom (room.parent, redraw, playerobject)\r\n        }\r\n        JS.Grid_DrawBox (Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\r\n        if (LengthOf(room.grid_label) > 0) {\r\n          label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\r\n          label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\r\n          JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\r\n        }\r\n        foreach (exit, AllExits()) {\r\n          if (exit.grid_render and exit.parent = room and exit.grid_length > 0) {\r\n            Grid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\r\n          }\r\n        }\r\n        Grid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\r\n      }\r\n    }\r\n  ]]></function>\r\n  <function name=\"Grid_ShowCustomLayer\" parameters=\"visible\">\r\n    if (visible) {\r\n      JS.Grid_ShowCustomLayer (true)\r\n    }\r\n    else {\r\n      JS.Grid_ShowCustomLayer (false)\r\n    }\r\n  </function>\r\n  <function name=\"Grid_ClearCustomLayer\">\r\n    JS.Grid_ClearCustomLayer ()\r\n  </function>\r\n  <function name=\"Grid_DrawLine\" parameters=\"x1, y1, x2, y2, border, borderWidth\">\r\n    JS.Grid_DrawLine (x1, y1, x2, y2, border, borderWidth)\r\n  </function>\r\n  <function name=\"Grid_DrawArrow\" parameters=\"id, x1, y1, x2, y2, border, borderWidth\">\r\n    JS.Grid_DrawArrow (id, x1, y1, x2, y2, border, borderWidth)\r\n  </function>\r\n  <function name=\"Grid_DrawGridLines\" parameters=\"x1, y1, x2, y2, border\">\r\n    JS.Grid_DrawGridLines (x1, y1, x2, y2, border)\r\n  </function>\r\n  <function name=\"Grid_SetCentre\" parameters=\"x, y\">\r\n    JS.Grid_SetCentre (x, y)\r\n  </function>\r\n  <function name=\"Grid_DrawSquare\" parameters=\"id, x, y, width, height, text, fill\">\r\n    JS.Grid_DrawSquare (id, x, y, width, height, text, fill)\r\n  </function>\r\n  <function name=\"Grid_LoadSvg\" parameters=\"data, id\">\r\n    JS.Grid_LoadSvg (data, id)\r\n  </function>\r\n  <function name=\"Grid_DrawSvg\" parameters=\"id, symbolid, x, y, width, height\">\r\n    JS.Grid_DrawSvg (id, symbolid, x, y, width, height)\r\n  </function>\r\n  <function name=\"Grid_DrawImage\" parameters=\"id, url, x, y, width, height\">\r\n    JS.Grid_DrawImage (id, url, x, y, width, height)\r\n  </function>\r\n  <function name=\"Grid_AddNewShapePoint\" parameters=\"x, y\">\r\n    JS.Grid_AddNewShapePoint (x, y)\r\n  </function>\r\n  <function name=\"Grid_DrawShape\" parameters=\"id, border, fill, opacity\">\r\n    JS.Grid_DrawShape (id, border, fill, opacity)\r\n  </function>\r\n  <function name=\"JS_GridSquareClick\" parameters=\"parameterstring\">\r\n    parameters = Split(parameterstring, \";\")\r\n    x = ToInt(StringListItem(parameters, 0))\r\n    y = ToInt(StringListItem(parameters, 1))\r\n    GridSquareClick (x, y)\r\n  </function>\r\n  <function name=\"GridSquareClick\" parameters=\"x, y\">\r\n  </function>\r\n  <function name=\"Grid_Redraw\">\r\n    foreach (object, AllObjects()) {\r\n      if (Grid_GetRoomBooleanForPlayer(game.pov, object, \"grid_isdrawn\")) {\r\n        Grid_DrawRoom (object, true, game.pov)\r\n      }\r\n    }\r\n  </function>\r\n  <function name=\"Grid_SetGridCoordinateForPlayer\" parameters=\"playerobject, room, coordinate, value\">\r\n    coordinates = Grid_GetPlayerCoordinatesForRoom(playerobject, room)\r\n    if (DictionaryContains(coordinates, coordinate)) {\r\n      dictionary remove (coordinates, coordinate)\r\n    }\r\n    dictionary add (coordinates, coordinate, value * 1.0)\r\n  </function>\r\n  <function name=\"Grid_GetGridCoordinateForPlayer\" parameters=\"playerobject, room, coordinate\" type=\"double\">\r\n    coordinates = Grid_GetPlayerCoordinatesForRoom(playerobject, room)\r\n    return (DictionaryItem(coordinates, coordinate))\r\n  </function>\r\n  <function name=\"Grid_SetRoomBooleanForPlayer\" parameters=\"playerobject, room, coordinate, value\">\r\n    datadictionary = Grid_GetPlayerCoordinatesForRoom(playerobject, room)\r\n    if (DictionaryContains(datadictionary, coordinate)) {\r\n      dictionary remove (datadictionary, coordinate)\r\n    }\r\n    dictionary add (datadictionary, coordinate, value)\r\n  </function>\r\n  <function name=\"Grid_GetRoomBooleanForPlayer\" parameters=\"playerobject, room, attribute\" type=\"boolean\">\r\n    coordinatedata = Grid_GetPlayerCoordinateDictionary(playerobject)\r\n    if (not DictionaryContains(coordinatedata, room.name)) {\r\n      return (false)\r\n    }\r\n    else {\r\n      datadictionary = Grid_GetPlayerCoordinatesForRoom(playerobject, room)\r\n      if (DictionaryContains(datadictionary, attribute)) {\r\n        return (DictionaryItem(datadictionary, attribute))\r\n      }\r\n      else {\r\n        return (false)\r\n      }\r\n    }\r\n  </function>\r\n  <function name=\"Grid_GetPlayerCoordinateDictionary\" parameters=\"playerobject\" type=\"dictionary\">\r\n    if (HasAttribute(playerobject, \"grid_coordinates_delegate\")) {\r\n      return (Grid_GetPlayerCoordinateDictionary(playerobject.grid_coordinates_delegate))\r\n    }\r\n    else {\r\n      if (not HasAttribute(playerobject, \"grid_coordinates\")) {\r\n        playerobject.grid_coordinates = NewDictionary()\r\n        Grid_SetGridCoordinateForPlayer (playerobject, playerobject.parent, \"x\", 0)\r\n        Grid_SetGridCoordinateForPlayer (playerobject, playerobject.parent, \"y\", 0)\r\n        Grid_SetGridCoordinateForPlayer (playerobject, playerobject.parent, \"z\", 0)\r\n        playerobject.parent.grid_render = true\r\n        Grid_CalculateMapCoordinates (playerobject.parent, playerobject)\r\n      }\r\n      return (playerobject.grid_coordinates)\r\n    }\r\n  </function>\r\n  <function name=\"Grid_GetPlayerCoordinatesForRoom\" parameters=\"playerobject, room\" type=\"dictionary\">\r\n    coordinatedata = Grid_GetPlayerCoordinateDictionary(playerobject)\r\n    if (not DictionaryContains(coordinatedata, room.name)) {\r\n      dictionary add (coordinatedata, room.name, NewDictionary())\r\n    }\r\n    return (DictionaryItem(coordinatedata, room.name))\r\n  </function>\r\n  <function name=\"MergePOVCoordinates\"><![CDATA[\r\n    coordinateowner = GetCoordinateOwner(game.pov)\r\n    foreach (obj, GetDirectChildren(game.pov.parent)) {\r\n      if (obj <> game.pov and HasAttribute(obj, \"grid_coordinates\")) {\r\n        objcoordinateowner = GetCoordinateOwner(obj)\r\n        if (coordinateowner <> objcoordinateowner) {\r\n          MapPOVCoordinates (objcoordinateowner, coordinateowner)\r\n        }\r\n      }\r\n    }\r\n  ]]></function>\r\n  <function name=\"GetCoordinateOwner\" parameters=\"playerobject\" type=\"object\">\r\n    if (HasAttribute(playerobject, \"grid_coordinates_delegate\")) {\r\n      return (GetCoordinateOwner(playerobject.grid_coordinates_delegate))\r\n    }\r\n    else {\r\n      return (playerobject)\r\n    }\r\n  </function>\r\n  <function name=\"MapPOVCoordinates\" parameters=\"source, target\">\r\n    sourcecoordinates = Grid_GetPlayerCoordinateDictionary(source)\r\n    targetcoordinates = Grid_GetPlayerCoordinateDictionary(target)\r\n    xoffset = Grid_GetGridCoordinateForPlayer(target, game.pov.parent, \"x\") - Grid_GetGridCoordinateForPlayer(source, game.pov.parent, \"x\")\r\n    yoffset = Grid_GetGridCoordinateForPlayer(target, game.pov.parent, \"y\") - Grid_GetGridCoordinateForPlayer(source, game.pov.parent, \"y\")\r\n    zoffset = Grid_GetGridCoordinateForPlayer(target, game.pov.parent, \"z\") - Grid_GetGridCoordinateForPlayer(source, game.pov.parent, \"z\")\r\n    foreach (roomname, sourcecoordinates) {\r\n      coordinatedata = DictionaryItem(sourcecoordinates, roomname)\r\n      if (not DictionaryContains(targetcoordinates, roomname)) {\r\n        newroomdata = NewDictionary()\r\n        dictionary add (targetcoordinates, roomname, newroomdata)\r\n        MapPOVCoordinate (coordinatedata, newroomdata, \"x\", xoffset)\r\n        MapPOVCoordinate (coordinatedata, newroomdata, \"y\", yoffset)\r\n        MapPOVCoordinate (coordinatedata, newroomdata, \"z\", zoffset)\r\n        MapPOVCoordinate (coordinatedata, newroomdata, \"end_x\", xoffset)\r\n        MapPOVCoordinate (coordinatedata, newroomdata, \"end_y\", yoffset)\r\n      }\r\n      else {\r\n        newroomdata = DictionaryItem(targetcoordinates, roomname)\r\n      }\r\n      if (DictionaryContains(coordinatedata, \"grid_isdrawn\")) {\r\n        if (DictionaryContains(newroomdata, \"grid_isdrawn\")) {\r\n          dictionary remove (newroomdata, \"grid_isdrawn\")\r\n        }\r\n        dictionary add (newroomdata, \"grid_isdrawn\", DictionaryItem(coordinatedata, \"grid_isdrawn\"))\r\n      }\r\n    }\r\n    source.grid_coordinates_delegate = target\r\n    Grid_Redraw\r\n    Grid_DrawPlayerInRoom (game.pov.parent)\r\n  </function>\r\n  <function name=\"MapPOVCoordinate\" parameters=\"sourcedata, targetdata, name, offset\">\r\n    if (DictionaryContains(sourcedata, name)) {\r\n      value = DictionaryItem(sourcedata, name)\r\n      dictionary add (targetdata, name, value + offset)\r\n    }\r\n  </function>\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>I dropped an unmappable room in between mappable3 and mappable4, and, yeah... lots of errors...</p>\n<p>We can probably just copy and adjust the function that adds to the dictionary...</p>\n<p>Maybe...</p>\n<p>(If not, Pixie will let us know.)</p>\n<hr>\n<p>Here's everything I see in the save file:</p>\n<details><summary> MANY Details</summary>\n<pre><code>  &lt;function name=\"Grid_SetScale\" parameters=\"scale\"&gt;\n    JS.Grid_SetScale (scale)\n  &lt;/function&gt;\n  &lt;function name=\"Grid_CalculateMapCoordinates\" parameters=\"room, playerobject\"&gt;&lt;![CDATA[\n    if (room.parent &lt;&gt; null) {\n      if (room.grid_parent_offset_auto) {\n        room.grid_parent_offset_x = (room.parent.grid_width - room.grid_width) /2.0\n        room.grid_parent_offset_y = (room.parent.grid_length - room.grid_length) /2.0\n      }\n      Grid_SetGridCoordinateForPlayer (playerobject, room.parent, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") - room.grid_parent_offset_x)\n      Grid_SetGridCoordinateForPlayer (playerobject, room.parent, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") - room.grid_parent_offset_y)\n      Grid_SetGridCoordinateForPlayer (playerobject, room.parent, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\n      room.parent.grid_render = true\n      Grid_CalculateMapCoordinates (room.parent, playerobject)\n    }\n    foreach (exit, AllExits()) {\n      if (exit.parent = room and not GetBoolean(exit, \"lookonly\")) {\n        if (DoesInherit(exit, \"northdirection\")) {\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + room.grid_width/2.0 + exit.grid_offset_x)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + exit.grid_offset_y)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") - exit.to.grid_width/2.0)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", (Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") - exit.to.grid_length) - exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\"))\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") - exit.grid_length)\n          exit.grid_render = true\n          exit.to.grid_render = true\n        }\n        else if (DoesInherit(exit, \"eastdirection\")) {\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + room.grid_width + exit.grid_offset_x)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + room.grid_length/2.0 + exit.grid_offset_y)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") + exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") - exit.to.grid_length/2.0)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") + exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\"))\n          exit.grid_render = true\n          exit.to.grid_render = true\n        }\n        else if (DoesInherit(exit, \"southdirection\")) {\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + room.grid_width/2.0 + exit.grid_offset_x)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + room.grid_length + exit.grid_offset_y)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") - exit.to.grid_width/2.0)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") + exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\"))\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") + exit.grid_length)\n          exit.grid_render = true\n          exit.to.grid_render = true\n        }\n        else if (DoesInherit(exit, \"westdirection\")) {\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + exit.grid_offset_x)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + room.grid_length/2.0 + exit.grid_offset_y)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", (Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") - exit.to.grid_width) - exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") - exit.to.grid_length/2.0)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") - exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\"))\n          exit.grid_render = true\n          exit.to.grid_render = true\n        }\n        else if (DoesInherit(exit, \"northwestdirection\")) {\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + exit.grid_offset_x)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + exit.grid_offset_y)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", (Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") - exit.to.grid_width) - exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", (Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") - exit.to.grid_length) - exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") - exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") - exit.grid_length)\n          exit.grid_render = true\n          exit.to.grid_render = true\n        }\n        else if (DoesInherit(exit, \"northeastdirection\")) {\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + room.grid_width + exit.grid_offset_x)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + exit.grid_offset_y)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") + exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", (Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") - exit.to.grid_length) - exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") + exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") - exit.grid_length)\n          exit.grid_render = true\n          exit.to.grid_render = true\n        }\n        else if (DoesInherit(exit, \"southwestdirection\")) {\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + exit.grid_offset_x)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + room.grid_length + exit.grid_offset_y)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", (Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") - exit.to.grid_width) - exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") + exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") - exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") + exit.grid_length)\n          exit.grid_render = true\n          exit.to.grid_render = true\n        }\n        else if (DoesInherit(exit, \"southeastdirection\")) {\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + room.grid_width + exit.grid_offset_x)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + room.grid_length + exit.grid_offset_y)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") + exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") + exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_x\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"x\") + exit.grid_length)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit, \"end_y\", Grid_GetGridCoordinateForPlayer(playerobject, exit, \"y\") + exit.grid_length)\n          exit.grid_render = true\n          exit.to.grid_render = true\n        }\n        else if (DoesInherit(exit, \"updirection\")) {\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + room.grid_width/2.0 - exit.to.grid_width/2.0 + exit.grid_offset_x)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + room.grid_length/2.0 - exit.to.grid_length/2.0 + exit.grid_offset_y)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\") + exit.grid_length)\n          exit.grid_render = false\n          exit.to.grid_render = true\n        }\n        else if (DoesInherit(exit, \"downdirection\")) {\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + room.grid_width/2.0 - exit.to.grid_width/2.0 + exit.grid_offset_x)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + room.grid_length/2.0 - exit.to.grid_length/2.0 + exit.grid_offset_y)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\") - exit.grid_length)\n          exit.grid_render = false\n          exit.to.grid_render = true\n        }\n        else if (DoesInherit(exit, \"indirection\") or DoesInherit(exit, \"outdirection\")) {\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"x\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"x\") + room.grid_width/2.0 - exit.to.grid_width/2.0 + exit.grid_offset_x)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"y\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"y\") + room.grid_length/2.0 - exit.to.grid_length/2.0 + exit.grid_offset_y)\n          Grid_SetGridCoordinateForPlayer (playerobject, exit.to, \"z\", Grid_GetGridCoordinateForPlayer(playerobject, room, \"z\"))\n          exit.grid_render = false\n          exit.to.grid_render = true\n        }\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"Grid_DrawPlayerInRoom\" parameters=\"room\"&gt;\n    if (room.grid_render) {\n      Grid_DrawRoom (room, false, game.pov)\n      player_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\n      player_y = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0\n      player_z = Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\")\n      JS.Grid_DrawPlayer (player_x, player_y, player_z, 5, \"black\", 2, \"yellow\")\n    }\n  &lt;/function&gt;\n  &lt;function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"&gt;&lt;![CDATA[\n    if (room.grid_render) {\n      if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\n        if (room.parent &lt;&gt; null) {\n          Grid_DrawRoom (room.parent, redraw, playerobject)\n        }\n        JS.Grid_DrawBox (Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\n        if (LengthOf(room.grid_label) &gt; 0) {\n          label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\n          label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\n          JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\n        }\n        foreach (exit, AllExits()) {\n          if (exit.grid_render and exit.parent = room and exit.grid_length &gt; 0) {\n            Grid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\n          }\n        }\n        Grid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"Grid_ShowCustomLayer\" parameters=\"visible\"&gt;\n    if (visible) {\n      JS.Grid_ShowCustomLayer (true)\n    }\n    else {\n      JS.Grid_ShowCustomLayer (false)\n    }\n  &lt;/function&gt;\n  &lt;function name=\"Grid_ClearCustomLayer\"&gt;\n    JS.Grid_ClearCustomLayer ()\n  &lt;/function&gt;\n  &lt;function name=\"Grid_DrawLine\" parameters=\"x1, y1, x2, y2, border, borderWidth\"&gt;\n    JS.Grid_DrawLine (x1, y1, x2, y2, border, borderWidth)\n  &lt;/function&gt;\n  &lt;function name=\"Grid_DrawArrow\" parameters=\"id, x1, y1, x2, y2, border, borderWidth\"&gt;\n    JS.Grid_DrawArrow (id, x1, y1, x2, y2, border, borderWidth)\n  &lt;/function&gt;\n  &lt;function name=\"Grid_DrawGridLines\" parameters=\"x1, y1, x2, y2, border\"&gt;\n    JS.Grid_DrawGridLines (x1, y1, x2, y2, border)\n  &lt;/function&gt;\n  &lt;function name=\"Grid_SetCentre\" parameters=\"x, y\"&gt;\n    JS.Grid_SetCentre (x, y)\n  &lt;/function&gt;\n  &lt;function name=\"Grid_DrawSquare\" parameters=\"id, x, y, width, height, text, fill\"&gt;\n    JS.Grid_DrawSquare (id, x, y, width, height, text, fill)\n  &lt;/function&gt;\n  &lt;function name=\"Grid_LoadSvg\" parameters=\"data, id\"&gt;\n    JS.Grid_LoadSvg (data, id)\n  &lt;/function&gt;\n  &lt;function name=\"Grid_DrawSvg\" parameters=\"id, symbolid, x, y, width, height\"&gt;\n    JS.Grid_DrawSvg (id, symbolid, x, y, width, height)\n  &lt;/function&gt;\n  &lt;function name=\"Grid_DrawImage\" parameters=\"id, url, x, y, width, height\"&gt;\n    JS.Grid_DrawImage (id, url, x, y, width, height)\n  &lt;/function&gt;\n  &lt;function name=\"Grid_AddNewShapePoint\" parameters=\"x, y\"&gt;\n    JS.Grid_AddNewShapePoint (x, y)\n  &lt;/function&gt;\n  &lt;function name=\"Grid_DrawShape\" parameters=\"id, border, fill, opacity\"&gt;\n    JS.Grid_DrawShape (id, border, fill, opacity)\n  &lt;/function&gt;\n  &lt;function name=\"JS_GridSquareClick\" parameters=\"parameterstring\"&gt;\n    parameters = Split(parameterstring, \";\")\n    x = ToInt(StringListItem(parameters, 0))\n    y = ToInt(StringListItem(parameters, 1))\n    GridSquareClick (x, y)\n  &lt;/function&gt;\n  &lt;function name=\"GridSquareClick\" parameters=\"x, y\"&gt;\n  &lt;/function&gt;\n  &lt;function name=\"Grid_Redraw\"&gt;\n    foreach (object, AllObjects()) {\n      if (Grid_GetRoomBooleanForPlayer(game.pov, object, \"grid_isdrawn\")) {\n        Grid_DrawRoom (object, true, game.pov)\n      }\n    }\n  &lt;/function&gt;\n  &lt;function name=\"Grid_SetGridCoordinateForPlayer\" parameters=\"playerobject, room, coordinate, value\"&gt;\n    coordinates = Grid_GetPlayerCoordinatesForRoom(playerobject, room)\n    if (DictionaryContains(coordinates, coordinate)) {\n      dictionary remove (coordinates, coordinate)\n    }\n    dictionary add (coordinates, coordinate, value * 1.0)\n  &lt;/function&gt;\n  &lt;function name=\"Grid_GetGridCoordinateForPlayer\" parameters=\"playerobject, room, coordinate\" type=\"double\"&gt;\n    coordinates = Grid_GetPlayerCoordinatesForRoom(playerobject, room)\n    return (DictionaryItem(coordinates, coordinate))\n  &lt;/function&gt;\n  &lt;function name=\"Grid_SetRoomBooleanForPlayer\" parameters=\"playerobject, room, coordinate, value\"&gt;\n    datadictionary = Grid_GetPlayerCoordinatesForRoom(playerobject, room)\n    if (DictionaryContains(datadictionary, coordinate)) {\n      dictionary remove (datadictionary, coordinate)\n    }\n    dictionary add (datadictionary, coordinate, value)\n  &lt;/function&gt;\n  &lt;function name=\"Grid_GetRoomBooleanForPlayer\" parameters=\"playerobject, room, attribute\" type=\"boolean\"&gt;\n    coordinatedata = Grid_GetPlayerCoordinateDictionary(playerobject)\n    if (not DictionaryContains(coordinatedata, room.name)) {\n      return (false)\n    }\n    else {\n      datadictionary = Grid_GetPlayerCoordinatesForRoom(playerobject, room)\n      if (DictionaryContains(datadictionary, attribute)) {\n        return (DictionaryItem(datadictionary, attribute))\n      }\n      else {\n        return (false)\n      }\n    }\n  &lt;/function&gt;\n  &lt;function name=\"Grid_GetPlayerCoordinateDictionary\" parameters=\"playerobject\" type=\"dictionary\"&gt;\n    if (HasAttribute(playerobject, \"grid_coordinates_delegate\")) {\n      return (Grid_GetPlayerCoordinateDictionary(playerobject.grid_coordinates_delegate))\n    }\n    else {\n      if (not HasAttribute(playerobject, \"grid_coordinates\")) {\n        playerobject.grid_coordinates = NewDictionary()\n        Grid_SetGridCoordinateForPlayer (playerobject, playerobject.parent, \"x\", 0)\n        Grid_SetGridCoordinateForPlayer (playerobject, playerobject.parent, \"y\", 0)\n        Grid_SetGridCoordinateForPlayer (playerobject, playerobject.parent, \"z\", 0)\n        playerobject.parent.grid_render = true\n        Grid_CalculateMapCoordinates (playerobject.parent, playerobject)\n      }\n      return (playerobject.grid_coordinates)\n    }\n  &lt;/function&gt;\n  &lt;function name=\"Grid_GetPlayerCoordinatesForRoom\" parameters=\"playerobject, room\" type=\"dictionary\"&gt;\n    coordinatedata = Grid_GetPlayerCoordinateDictionary(playerobject)\n    if (not DictionaryContains(coordinatedata, room.name)) {\n      dictionary add (coordinatedata, room.name, NewDictionary())\n    }\n    return (DictionaryItem(coordinatedata, room.name))\n  &lt;/function&gt;\n  &lt;function name=\"MergePOVCoordinates\"&gt;&lt;![CDATA[\n    coordinateowner = GetCoordinateOwner(game.pov)\n    foreach (obj, GetDirectChildren(game.pov.parent)) {\n      if (obj &lt;&gt; game.pov and HasAttribute(obj, \"grid_coordinates\")) {\n        objcoordinateowner = GetCoordinateOwner(obj)\n        if (coordinateowner &lt;&gt; objcoordinateowner) {\n          MapPOVCoordinates (objcoordinateowner, coordinateowner)\n        }\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"GetCoordinateOwner\" parameters=\"playerobject\" type=\"object\"&gt;\n    if (HasAttribute(playerobject, \"grid_coordinates_delegate\")) {\n      return (GetCoordinateOwner(playerobject.grid_coordinates_delegate))\n    }\n    else {\n      return (playerobject)\n    }\n  &lt;/function&gt;\n  &lt;function name=\"MapPOVCoordinates\" parameters=\"source, target\"&gt;\n    sourcecoordinates = Grid_GetPlayerCoordinateDictionary(source)\n    targetcoordinates = Grid_GetPlayerCoordinateDictionary(target)\n    xoffset = Grid_GetGridCoordinateForPlayer(target, game.pov.parent, \"x\") - Grid_GetGridCoordinateForPlayer(source, game.pov.parent, \"x\")\n    yoffset = Grid_GetGridCoordinateForPlayer(target, game.pov.parent, \"y\") - Grid_GetGridCoordinateForPlayer(source, game.pov.parent, \"y\")\n    zoffset = Grid_GetGridCoordinateForPlayer(target, game.pov.parent, \"z\") - Grid_GetGridCoordinateForPlayer(source, game.pov.parent, \"z\")\n    foreach (roomname, sourcecoordinates) {\n      coordinatedata = DictionaryItem(sourcecoordinates, roomname)\n      if (not DictionaryContains(targetcoordinates, roomname)) {\n        newroomdata = NewDictionary()\n        dictionary add (targetcoordinates, roomname, newroomdata)\n        MapPOVCoordinate (coordinatedata, newroomdata, \"x\", xoffset)\n        MapPOVCoordinate (coordinatedata, newroomdata, \"y\", yoffset)\n        MapPOVCoordinate (coordinatedata, newroomdata, \"z\", zoffset)\n        MapPOVCoordinate (coordinatedata, newroomdata, \"end_x\", xoffset)\n        MapPOVCoordinate (coordinatedata, newroomdata, \"end_y\", yoffset)\n      }\n      else {\n        newroomdata = DictionaryItem(targetcoordinates, roomname)\n      }\n      if (DictionaryContains(coordinatedata, \"grid_isdrawn\")) {\n        if (DictionaryContains(newroomdata, \"grid_isdrawn\")) {\n          dictionary remove (newroomdata, \"grid_isdrawn\")\n        }\n        dictionary add (newroomdata, \"grid_isdrawn\", DictionaryItem(coordinatedata, \"grid_isdrawn\"))\n      }\n    }\n    source.grid_coordinates_delegate = target\n    Grid_Redraw\n    Grid_DrawPlayerInRoom (game.pov.parent)\n  &lt;/function&gt;\n  &lt;function name=\"MapPOVCoordinate\" parameters=\"sourcedata, targetdata, name, offset\"&gt;\n    if (DictionaryContains(sourcedata, name)) {\n      value = DictionaryItem(sourcedata, name)\n      dictionary add (targetdata, name, value + offset)\n    }\n  &lt;/function&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2017-09-08T01:42:30.6811921Z",
      "LastEditDate": "2017-09-08T01:44:32.163253Z",
      "link": null
    },
    {
      "PostId": "42498411-0cdd-4f95-a12b-ffedaba19c0d",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "not sure if this is going to help here, but Jay/Pixie would have code that quickly visits all of the rooms in the game, generating a map, upon starting the game, and/or, upon moving to a new section of the game, needing to re-generate a new map for this new section of the game, due to the sections of the game, not able to be connected as a single map (moving without Exits, moving up and down, etc. Well, at least these were the issues with the map in past versions of quest anyways, not sure if Pixie has improved upon them with his new versions of quest)",
      "EditableFormat": "markdown",
      "HTML": "<p>not sure if this is going to help here, but Jay/Pixie would have code that quickly visits all of the rooms in the game, generating a map, upon starting the game, and/or, upon moving to a new section of the game, needing to re-generate a new map for this new section of the game, due to the sections of the game, not able to be connected as a single map (moving without Exits, moving up and down, etc. Well, at least these were the issues with the map in past versions of quest anyways, not sure if Pixie has improved upon them with his new versions of quest)</p>\n\n",
      "PostDate": "2017-09-08T03:38:16.3662615Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a5d43bd3-aa8d-4d7f-a456-fc61ed121258",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ HK\r\n\r\nfrom http://docs.textadventures.co.uk/quest/showing_a_map.html\r\n\r\n<details><summary>Click here to view the **Mapping everywhere** section</summary>\r\n\r\n#### Mapping everywhere\r\n\r\nRestriction: Only works if all rooms are connected.\r\n\r\nAn alternative way to ensure teleportation works is to make Quest map the whole game from the start.\r\n\r\nCreate a new function, call it “VisitRoom”, and give it a single parameter, “room”. Paste in this code (the fourth line is commented out, if you remove the slashes at the start, the map will be fully visible from the start):\r\n\r\n```\r\nif (not GetBoolean(room, \"genvisited\")) {\r\n  room.genvisited = true\r\n  Grid_CalculateMapCoordinates (room, game.pov)\r\n  // Grid_DrawRoom (room, false, game.pov)\r\n  foreach (exit, AllExits()) {\r\n    if (exit.parent = room) {\r\n      VisitRoom (exit.to)\r\n    }\r\n  }\r\n}\r\n```\r\nThen in the start script:\r\n\r\n```\r\nVisitRoom (game.pov.parent)\r\n```\r\n\r\nNow you can move the player to any room, confident it is mapped.\r\n\r\n</details>\r\n\r\n---\r\n\r\nWouldn't this display unvisited rooms on the map?  \r\n\r\n\r\n---\r\nI found this too.  It looks like it may be what really works for Dcoder:\r\n\r\nhttps://textadventures.co.uk/forum/samples/topic/5719/guide-remaking-the-default-custom-map\r\n\r\n\r\nIt's two years old, though...",
      "EditableFormat": "markdown",
      "HTML": "<p>@ HK</p>\n<p>from http://docs.textadventures.co.uk/quest/showing_a_map.html</p>\n<details><summary>Click here to view the **Mapping everywhere** section</summary>\n<h4>Mapping everywhere</h4>\n<p>Restriction: Only works if all rooms are connected.</p>\n<p>An alternative way to ensure teleportation works is to make Quest map the whole game from the start.</p>\n<p>Create a new function, call it “VisitRoom”, and give it a single parameter, “room”. Paste in this code (the fourth line is commented out, if you remove the slashes at the start, the map will be fully visible from the start):</p>\n<pre><code>if (not GetBoolean(room, \"genvisited\")) {\n  room.genvisited = true\n  Grid_CalculateMapCoordinates (room, game.pov)\n  // Grid_DrawRoom (room, false, game.pov)\n  foreach (exit, AllExits()) {\n    if (exit.parent = room) {\n      VisitRoom (exit.to)\n    }\n  }\n}\n</code></pre>\n<p>Then in the start script:</p>\n<pre><code>VisitRoom (game.pov.parent)\n</code></pre>\n<p>Now you can move the player to any room, confident it is mapped.</p>\n</details>\n<hr>\n<p>Wouldn't this display unvisited rooms on the map?</p>\n<hr>\n<p>I found this too.  It looks like it may be what really works for Dcoder:</p>\n<p>https://textadventures.co.uk/forum/samples/topic/5719/guide-remaking-the-default-custom-map</p>\n<p>It's two years old, though...</p>\n\n",
      "PostDate": "2017-09-08T03:54:59.415343Z",
      "LastEditDate": "2017-09-08T04:28:52.8426692Z",
      "link": null
    },
    {
      "PostId": "4f755fcf-73b6-402b-88fb-432c761c6774",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I believe with Pixie/Jay code, that upon/before moving to a new section, they'd delete/hide the old map, and re-generate the new map for the new section, so you don't get errors when not using Exits (when rooms aren't connected): you generate a new map for each section of the game you go to, this way each section is separate as its own map, and thus no map errors.\r\n\r\nMaybe this doesn't work anymore...",
      "EditableFormat": "markdown",
      "HTML": "<p>I believe with Pixie/Jay code, that upon/before moving to a new section, they'd delete/hide the old map, and re-generate the new map for the new section, so you don't get errors when not using Exits (when rooms aren't connected): you generate a new map for each section of the game you go to, this way each section is separate as its own map, and thus no map errors.</p>\n<p>Maybe this doesn't work anymore...</p>\n\n",
      "PostDate": "2017-09-08T04:10:48.9003882Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fe1692ea-8e49-46ea-9f0f-cae9f3bba9d3",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "From http://docs.textadventures.co.uk/quest/showing_a_map.html (which is all I could find):\r\n\r\n<details><summary>See the related sections from <b>Showing a map</b></summary>\r\n\r\n---\r\n\r\n\r\n# Reset the map\r\n\r\n**Restriction: Best for isolated regions the player cannot return to.**\r\n\r\nAn alternative approach is to erase all the existing map data and start again. Here is the code to move the player to room:\r\n\r\n```\r\nplayer.grid_coordinates = null\r\nplayer.parent = room\r\nJS.Grid_ClearAllLayers ()\r\nGrid_Redraw\r\nGrid_DrawPlayerInRoom (game.pov.parent)\r\n```\r\n\r\nOf course, this is not ideal, as the player loses their map every time, and if she can teleport back, will be back to square one with regards to the map.\r\n\r\n# Save the map\r\n\r\n**Restriction: Only for isolated regions.***\r\n\r\nInstead of reseting the map, we can save it as an attribute.\r\n\r\nSay your game is divided into three regions, with no way for the player to walk between them. What you can do when the player teleports from area one to area two, is to save the map for area one, and then grab the previously saved data for area two.\r\n\r\nThis is not trivial, as you will need some way to tell which area the player is leaving. If you limit the player so she can only leave from a single location this is considerably easier…\r\n\r\n# Save the map, single departure\r\n\r\n**Restriction: Only for isolated regions, each with a single room the player can teleport to and from.**\r\n\r\nIf we limited the player to a single point of departure in each region, then we can use that to define the region. As an example, let us suppose a railway, and the station for area one is called “Station One”, etc. Station One then identifies the region, allowing us to save and retrieve the map for the region.\r\n\r\nWe will do the hard work in a function. Call it “TeleportTo”, and give it a single parameter, “to”, then paste in this code:\r\n\r\n```\r\nfrom = player.parent\r\nset (player, \"saved_map_for_\" + from.name, player.grid_coordinates)\r\nif (HasAttribute(player, \"saved_map_for_\" + to.name)) {\r\n  player.grid_coordinates = GetAttribute(player, \"saved_map_for_\" + to.name)\r\n}\r\nelse {\r\n  player.grid_coordinates = null\r\n}\r\nplayer.parent = to\r\nJS.Grid_ClearAllLayers ()\r\nGrid_Redraw\r\nGrid_DrawPlayerInRoom (game.pov.parent)\r\n```\r\n\r\nNow it is simply a matter if calling the function. For Station One, you will have some command or action that will move the player to Station Two. The code to do that looks like this:\r\n\r\n```\r\nTeleportTo(Station Two)\r\n```\r\n\r\nTo go from Station Two back to Station One, use the same code, but put in Station One.\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>From http://docs.textadventures.co.uk/quest/showing_a_map.html (which is all I could find):</p>\n<details><summary>See the related sections from <b>Showing a map</b></summary>\n<hr>\n<h1>Reset the map</h1>\n<p><strong>Restriction: Best for isolated regions the player cannot return to.</strong></p>\n<p>An alternative approach is to erase all the existing map data and start again. Here is the code to move the player to room:</p>\n<pre><code>player.grid_coordinates = null\nplayer.parent = room\nJS.Grid_ClearAllLayers ()\nGrid_Redraw\nGrid_DrawPlayerInRoom (game.pov.parent)\n</code></pre>\n<p>Of course, this is not ideal, as the player loses their map every time, and if she can teleport back, will be back to square one with regards to the map.</p>\n<h1>Save the map</h1>\n<p><strong>Restriction: Only for isolated regions.</strong>*</p>\n<p>Instead of reseting the map, we can save it as an attribute.</p>\n<p>Say your game is divided into three regions, with no way for the player to walk between them. What you can do when the player teleports from area one to area two, is to save the map for area one, and then grab the previously saved data for area two.</p>\n<p>This is not trivial, as you will need some way to tell which area the player is leaving. If you limit the player so she can only leave from a single location this is considerably easier…</p>\n<h1>Save the map, single departure</h1>\n<p><strong>Restriction: Only for isolated regions, each with a single room the player can teleport to and from.</strong></p>\n<p>If we limited the player to a single point of departure in each region, then we can use that to define the region. As an example, let us suppose a railway, and the station for area one is called “Station One”, etc. Station One then identifies the region, allowing us to save and retrieve the map for the region.</p>\n<p>We will do the hard work in a function. Call it “TeleportTo”, and give it a single parameter, “to”, then paste in this code:</p>\n<pre><code>from = player.parent\nset (player, \"saved_map_for_\" + from.name, player.grid_coordinates)\nif (HasAttribute(player, \"saved_map_for_\" + to.name)) {\n  player.grid_coordinates = GetAttribute(player, \"saved_map_for_\" + to.name)\n}\nelse {\n  player.grid_coordinates = null\n}\nplayer.parent = to\nJS.Grid_ClearAllLayers ()\nGrid_Redraw\nGrid_DrawPlayerInRoom (game.pov.parent)\n</code></pre>\n<p>Now it is simply a matter if calling the function. For Station One, you will have some command or action that will move the player to Station Two. The code to do that looks like this:</p>\n<pre><code>TeleportTo(Station Two)\n</code></pre>\n<p>To go from Station Two back to Station One, use the same code, but put in Station One.</p>\n</details>\n\n",
      "PostDate": "2017-09-08T04:24:44.2593879Z",
      "LastEditDate": "2017-09-08T04:27:12.2765037Z",
      "link": null
    },
    {
      "PostId": "eb772a40-d009-4028-b805-9664a49be4d8",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks guys, I'm looking at/testing some of this stuff...",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks guys, I'm looking at/testing some of this stuff...</p>\n\n",
      "PostDate": "2017-09-09T00:22:41.7692243Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0ee8d708-c80d-4f5e-a08e-af4897e75c88",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Let us know how it goes.  (Hopefully, it goes smoothly!)",
      "EditableFormat": "markdown",
      "HTML": "<p>Let us know how it goes.  (Hopefully, it goes smoothly!)</p>\n\n",
      "PostDate": "2017-09-09T03:36:26.2672408Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
