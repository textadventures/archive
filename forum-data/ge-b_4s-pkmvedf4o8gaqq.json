{
  "Topic": {
    "TopicId": "ge-b_4s-pkmvedf4o8gaqq",
    "ForumId": "10",
    "Title": "Wearables and cloned items",
    "LastUpdated": "2016-07-05T15:09:14.7462269Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "5825643b-244c-4fb9-a7ca-943ad7d5be5c",
      "UserId": 207026,
      "Username": "Pykrete",
      "UserAvatar": null,
      "UserGravatar": "1faa3bf756e9e15293c2bc5662f00a7f",
      "EditableText": "Not sure if I should post this here or make a post in one of the wearable library topics; apologies if this isn't the right place.\r\n\r\nIn either the Extended Wearables Library or the Alternate Clothing Library, is there any way to remotely manage cloned items?\r\n\r\nFor example, say I'm just using 1 'slot', which is body. One of my characters has 'casual clothing' on. A possible event leads to them being put in jail, which would require removing that 'casual clothing' and putting them in 'orange jumpsuit'.  This is easy enough - 'Do Remove' with the parameter 'casual clothing', and then 'DoWear' with the parameter 'orange jumpsuit'. Furthermore, I can make a function to check if they're wearing something else; say, 'business suit', or the rest of the potential clothing, and then have it only attempt to remove that one object instead of all of them.\r\n\r\nSo far so breezy, but problems arise when my objects are cloned...\r\n\r\nIn this example, the character has bought their clothing from a store. 'casual clothing' and 'business suit' were both bought, and because I want there to be more than 1 instance of these objects, they've been cloned rather than simply moved. This works out fine, right up until I run into a situation like above where I need to use DoRemove and DoWear. Attempting to 'DoRemove' 'casual clothing', when the object in question is actually a clone, results in nothing happening. Ditto for trying to 'DoWear' a clone of the orange jumpsuit.\r\n\r\nIs there any way around this, short of making a huge function with 'if casual clothing1, if casual clothing2, is casual clothing3', etc...'? That would be a massive pain to do. Is there a way to do, say, Remove Body, to remove whatever is being worn in a certain slot? If not, would that be possible to implement on my end?\r\n\r\nI'm not sure how to go about applying cloned clothing, either. Removing it could be handled by removing anything in a certain slot, but adding it... eesch. I don't even know where to begin.\r\n\r\nAny help would be appreciated.",
      "EditableFormat": "markdown",
      "HTML": "<p>Not sure if I should post this here or make a post in one of the wearable library topics; apologies if this isn't the right place.</p>\n<p>In either the Extended Wearables Library or the Alternate Clothing Library, is there any way to remotely manage cloned items?</p>\n<p>For example, say I'm just using 1 'slot', which is body. One of my characters has 'casual clothing' on. A possible event leads to them being put in jail, which would require removing that 'casual clothing' and putting them in 'orange jumpsuit'.  This is easy enough - 'Do Remove' with the parameter 'casual clothing', and then 'DoWear' with the parameter 'orange jumpsuit'. Furthermore, I can make a function to check if they're wearing something else; say, 'business suit', or the rest of the potential clothing, and then have it only attempt to remove that one object instead of all of them.</p>\n<p>So far so breezy, but problems arise when my objects are cloned...</p>\n<p>In this example, the character has bought their clothing from a store. 'casual clothing' and 'business suit' were both bought, and because I want there to be more than 1 instance of these objects, they've been cloned rather than simply moved. This works out fine, right up until I run into a situation like above where I need to use DoRemove and DoWear. Attempting to 'DoRemove' 'casual clothing', when the object in question is actually a clone, results in nothing happening. Ditto for trying to 'DoWear' a clone of the orange jumpsuit.</p>\n<p>Is there any way around this, short of making a huge function with 'if casual clothing1, if casual clothing2, is casual clothing3', etc...'? That would be a massive pain to do. Is there a way to do, say, Remove Body, to remove whatever is being worn in a certain slot? If not, would that be possible to implement on my end?</p>\n<p>I'm not sure how to go about applying cloned clothing, either. Removing it could be handled by removing anything in a certain slot, but adding it... eesch. I don't even know where to begin.</p>\n<p>Any help would be appreciated.</p>\n\n",
      "PostDate": "2016-07-05T15:09:14.7462269Z",
      "LastEditDate": null
    },
    {
      "PostId": "aa521d14-37e3-4b2b-9cc4-7bfda1c621fd",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Pixie and others probably have better solutions, but here's a way of doing it (not sure how to implement this into/with the library/ies you're using though):\r\n\r\nwhen you clone something and due to that the 'name' String Attribute is the ID for quest, it has to give your cloned Objects different names, which it does by adding numbers to its name.\r\n\r\nthe way around this, is to use the String/Text Manipulation Functions:\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/ (scroll down to the very bottom, to the 'String Functions' section/category)\r\n\r\nwhere you can check the Object's name, such as using the 'StartsWith', as your cloned Objects look like this, for examples:\r\n\r\noriginal Object's Name: potion\r\ncloned Objects' Names: potion1, potion2, etc ect etc\r\n\r\nthus by checking if the start of their name is \"potion\", then you got a script that'll work:\r\n\r\n```\r\nif (StartsWith (this.name, \"potion\")) {\r\n  // 'whatever' Script(s)\r\n}\r\n```\r\n\r\n--------------------\r\n\r\nanother method, would to be give your Object an 'indicator/flag' Attribute, which you can check:\r\n\r\n```\r\n<object name=\"potion\">\r\n  <attr name=\"type_of_object_string_attribute\" type=\"string\">potion</attr>\r\n</object>\r\n\r\n<object name=\"apple\">\r\n  <attr name=\"type_of_object_string_attribute\" type=\"string\">food</attr>\r\n</object>\r\n\r\nif (GetString (this, \"type_of_object_string_attribute\") = \"potion\") {\r\n  // 'whatever' Script(s)\r\n}\r\n```\r\n\r\nas, the clones will also have this same indicator/flag Attribute too.",
      "EditableFormat": "markdown",
      "HTML": "<p>Pixie and others probably have better solutions, but here's a way of doing it (not sure how to implement this into/with the library/ies you're using though):</p>\n<p>when you clone something and due to that the 'name' String Attribute is the ID for quest, it has to give your cloned Objects different names, which it does by adding numbers to its name.</p>\n<p>the way around this, is to use the String/Text Manipulation Functions:</p>\n<p>http://docs.textadventures.co.uk/quest/functions/ (scroll down to the very bottom, to the 'String Functions' section/category)</p>\n<p>where you can check the Object's name, such as using the 'StartsWith', as your cloned Objects look like this, for examples:</p>\n<p>original Object's Name: potion<br>\ncloned Objects' Names: potion1, potion2, etc ect etc</p>\n<p>thus by checking if the start of their name is \"potion\", then you got a script that'll work:</p>\n<pre><code>if (StartsWith (this.name, \"potion\")) {\n  // 'whatever' Script(s)\n}\n</code></pre>\n<hr>\n<p>another method, would to be give your Object an 'indicator/flag' Attribute, which you can check:</p>\n<pre><code>&lt;object name=\"potion\"&gt;\n  &lt;attr name=\"type_of_object_string_attribute\" type=\"string\"&gt;potion&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"apple\"&gt;\n  &lt;attr name=\"type_of_object_string_attribute\" type=\"string\"&gt;food&lt;/attr&gt;\n&lt;/object&gt;\n\nif (GetString (this, \"type_of_object_string_attribute\") = \"potion\") {\n  // 'whatever' Script(s)\n}\n</code></pre>\n<p>as, the clones will also have this same indicator/flag Attribute too.</p>\n\n",
      "PostDate": "2016-07-05T17:21:00.3656444Z",
      "LastEditDate": "2016-07-05T17:21:33.3760718Z"
    },
    {
      "PostId": "691396e2-e830-41cd-be90-9223ac36a841",
      "UserId": 207026,
      "Username": "Pykrete",
      "UserAvatar": null,
      "UserGravatar": "1faa3bf756e9e15293c2bc5662f00a7f",
      "EditableText": "Hey, HK.\r\n\r\nThat's some pretty useful info, thanks. Unfortunately, while it's great for detecting these cloned items, I don't know if it'll be much use in pinpointing them for the Wear/Remove functions, unless I'm missing something.\r\n\r\nThe library I need to work with is either the Extended Wearables Library or the Alternate Clothing Library. Alternate Clothing Library is the original, which I'm currently using with some tweaks, and the Extended Wearables Library is a version Pixie made with some extra functions and tweaks (among them, the ones I had to make. I've not upgraded as I don't need the other functions, but the option is there.)\r\n\r\nBoth function more or less the same, aside from those tweaks and additional functions. Wear and Remove are used to put on and take off an article of clothing or gear on the current game.pov.\r\n\r\nDoWear and DoRemove, when pointed to an item in the parameters section, perform these functions automatically/remotely. For example, as long as the character has the 'orange jumpsuit' in their inventory and isn't wearing anything else, DoWear (orange jumpsuit) would run the Wear function, including the 'after wearing' script and the 'message to display when worn' bit, allowing attribute changes to be made normally and for my own scripts to be run in turn. Conversely, if the character is already wearing something, it won't work.\r\n\r\nIn turn, DoRemove (orange jumpsuit) will remove the orange jumpsuit and run the appropriate scripts that follow that event, if any.\r\n\r\nMy problem, then is trying to pinpoint DoWear or DoRemove to cloned objects, instead of the original. (this is non-negotiable - I have multiple characters to play as, and multiple versions of the same clothing, gear and/or weapon are a must.) I can make a long long list for every piece of gear for every potential duplicate up to a point... but that's obviously not ideal. I need a way of scripting it so that it can either pinpoint, say, 'orange jumpsuit2' or 'orange jumpsuit5', or a way of looping through until it finds the right one to Remove.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey, HK.</p>\n<p>That's some pretty useful info, thanks. Unfortunately, while it's great for detecting these cloned items, I don't know if it'll be much use in pinpointing them for the Wear/Remove functions, unless I'm missing something.</p>\n<p>The library I need to work with is either the Extended Wearables Library or the Alternate Clothing Library. Alternate Clothing Library is the original, which I'm currently using with some tweaks, and the Extended Wearables Library is a version Pixie made with some extra functions and tweaks (among them, the ones I had to make. I've not upgraded as I don't need the other functions, but the option is there.)</p>\n<p>Both function more or less the same, aside from those tweaks and additional functions. Wear and Remove are used to put on and take off an article of clothing or gear on the current game.pov.</p>\n<p>DoWear and DoRemove, when pointed to an item in the parameters section, perform these functions automatically/remotely. For example, as long as the character has the 'orange jumpsuit' in their inventory and isn't wearing anything else, DoWear (orange jumpsuit) would run the Wear function, including the 'after wearing' script and the 'message to display when worn' bit, allowing attribute changes to be made normally and for my own scripts to be run in turn. Conversely, if the character is already wearing something, it won't work.</p>\n<p>In turn, DoRemove (orange jumpsuit) will remove the orange jumpsuit and run the appropriate scripts that follow that event, if any.</p>\n<p>My problem, then is trying to pinpoint DoWear or DoRemove to cloned objects, instead of the original. (this is non-negotiable - I have multiple characters to play as, and multiple versions of the same clothing, gear and/or weapon are a must.) I can make a long long list for every piece of gear for every potential duplicate up to a point... but that's obviously not ideal. I need a way of scripting it so that it can either pinpoint, say, 'orange jumpsuit2' or 'orange jumpsuit5', or a way of looping through until it finds the right one to Remove.</p>\n\n",
      "PostDate": "2016-07-05T17:58:49.628747Z",
      "LastEditDate": null
    },
    {
      "PostId": "0c838c36-e896-4245-8757-8d55c1d3c384",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I don't know the libraries (too lazy to open them up and study them, at the moment, lol), but you'll have to insert the stuff in my post into them (such as probably the 'DoWear' and 'DoRemove' Functions), but unless you know what you're doing, I'd wait for Pixie (or whoever else) to help you, and he/she may have better methods than mine, anyways.",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't know the libraries (too lazy to open them up and study them, at the moment, lol), but you'll have to insert the stuff in my post into them (such as probably the 'DoWear' and 'DoRemove' Functions), but unless you know what you're doing, I'd wait for Pixie (or whoever else) to help you, and he/she may have better methods than mine, anyways.</p>\n\n",
      "PostDate": "2016-07-05T18:30:52.9078614Z",
      "LastEditDate": null
    },
    {
      "PostId": "634a36bd-2ee1-44ea-b9e9-6f861c878555",
      "UserId": 207026,
      "Username": "Pykrete",
      "UserAvatar": null,
      "UserGravatar": "1faa3bf756e9e15293c2bc5662f00a7f",
      "EditableText": "Noted, thank you for your time.",
      "EditableFormat": "markdown",
      "HTML": "<p>Noted, thank you for your time.</p>\n\n",
      "PostDate": "2016-07-05T18:32:38.9097428Z",
      "LastEditDate": null
    },
    {
      "PostId": "f78d686a-1c72-4834-95a0-f957ac2d08bb",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "would this be soemthing like to what you need:\r\n\r\n(using a 'potion' Object as an example)\r\n\r\n~~~\r\nforeach (object_variable, AllObjects()) {\r\n  if (StartsWith (object_variable, \"potion\") and object_variable.parent = game.pov) {\r\n    // do whatever script you want with this/these cloned potion Object/s in your inventory\r\n  }\r\n}\r\n\r\n// or:\r\n\r\nforeach (object_variable, AllObjects()) {\r\n  if (GetString (object_variable, \"type_of_object_string_attribute\") = \"potion\" and object_variable.parent = game.pov) {\r\n    // do whatever script you want with this/these cloned potion Object/s in your inventory\r\n  }\r\n}\r\n~~~\r\n\r\nor, do you want/need the opposite, searching through your inventory (of your cloned objects) and you want to do actions upon the original object?\r\n\r\ncould you explain more in terms of exactly what you need (as I'm too lazy to study the libraries you're using), as that would help me in trying to be able to help you.",
      "EditableFormat": "markdown",
      "HTML": "<p>would this be soemthing like to what you need:</p>\n<p>(using a 'potion' Object as an example)</p>\n<pre><code>foreach (object_variable, AllObjects()) {\n  if (StartsWith (object_variable, \"potion\") and object_variable.parent = game.pov) {\n    // do whatever script you want with this/these cloned potion Object/s in your inventory\n  }\n}\n\n// or:\n\nforeach (object_variable, AllObjects()) {\n  if (GetString (object_variable, \"type_of_object_string_attribute\") = \"potion\" and object_variable.parent = game.pov) {\n    // do whatever script you want with this/these cloned potion Object/s in your inventory\n  }\n}\n</code></pre>\n<p>or, do you want/need the opposite, searching through your inventory (of your cloned objects) and you want to do actions upon the original object?</p>\n<p>could you explain more in terms of exactly what you need (as I'm too lazy to study the libraries you're using), as that would help me in trying to be able to help you.</p>\n\n",
      "PostDate": "2016-07-05T19:13:38.3997551Z",
      "LastEditDate": "2016-07-05T19:16:35.1823126Z"
    },
    {
      "PostId": "1d6ac93a-7d48-4a3d-a7b8-747b2713ccb2",
      "UserId": 207026,
      "Username": "Pykrete",
      "UserAvatar": null,
      "UserGravatar": "1faa3bf756e9e15293c2bc5662f00a7f",
      "EditableText": "Sorry man, but if I knew exactly what I needed, I don't think I'd be having this trouble.  The best way I can explain it is that I need a way to automatically set the parameters for DoRemove and DoWear, as I can't set them manually on cloned objects. If you've explained a way to do that, I'm afraid it's beyond my understanding as a novice scripter.",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry man, but if I knew exactly what I needed, I don't think I'd be having this trouble.  The best way I can explain it is that I need a way to automatically set the parameters for DoRemove and DoWear, as I can't set them manually on cloned objects. If you've explained a way to do that, I'm afraid it's beyond my understanding as a novice scripter.</p>\n\n",
      "PostDate": "2016-07-05T19:56:43.4869523Z",
      "LastEditDate": null
    },
    {
      "PostId": "6b91b8eb-e899-40ae-84cb-cdd50165a984",
      "UserId": 1346,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": ">In this example, the character has bought their clothing from a store. 'casual clothing' and 'business suit' were both bought, and because I want there to be more than 1 instance of these objects, they've been cloned rather than simply moved. This works out fine, right up until I run into a situation like above where I need to use DoRemove and DoWear. Attempting to 'DoRemove' 'casual clothing', when the object in question is actually a clone, results in nothing happening. Ditto for trying to 'DoWear' a clone of the orange jumpsuit.\r\n\r\nAs HK says, clones get a new name, as every name has to be unique. If you do DoRemove (orange jumpsuit), then it will try to remove the original, which I guess is still in the shop.\r\n\r\nThe trick is to use a stand-in for the orange jumpsuit object, something that represents it, whichever one it is, i.e., a variable containing the object. The question then is, how do you make sure the variable is pointing to the right clone? If you look in the libraries, the commands use object as a variable. For all Quest commands, this is the matched object. the player types WEAR JUMPSUIT, and Quest matches that to an object in the vicinity.\r\n\r\nI am not sure quite what your code is, but it seems likely that what you want to do is:\r\n```\r\nDoRemove (object)\r\n```\r\nBy the way, a good way to check what the clone is is to give the original an alias, say \"orange jumpsuit\", and then in you code test to see what the alias is - unlike the name, the alias will be the same.\r\n```\r\nif (object.alias = \"orange jumpsuit\") {\r\n  msg(\"You are wearing an orange jumpsuit\")\r\n}\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>In this example, the character has bought their clothing from a store. 'casual clothing' and 'business suit' were both bought, and because I want there to be more than 1 instance of these objects, they've been cloned rather than simply moved. This works out fine, right up until I run into a situation like above where I need to use DoRemove and DoWear. Attempting to 'DoRemove' 'casual clothing', when the object in question is actually a clone, results in nothing happening. Ditto for trying to 'DoWear' a clone of the orange jumpsuit.</p>\n</blockquote>\n<p>As HK says, clones get a new name, as every name has to be unique. If you do DoRemove (orange jumpsuit), then it will try to remove the original, which I guess is still in the shop.</p>\n<p>The trick is to use a stand-in for the orange jumpsuit object, something that represents it, whichever one it is, i.e., a variable containing the object. The question then is, how do you make sure the variable is pointing to the right clone? If you look in the libraries, the commands use object as a variable. For all Quest commands, this is the matched object. the player types WEAR JUMPSUIT, and Quest matches that to an object in the vicinity.</p>\n<p>I am not sure quite what your code is, but it seems likely that what you want to do is:</p>\n<pre><code>DoRemove (object)\n</code></pre>\n<p>By the way, a good way to check what the clone is is to give the original an alias, say \"orange jumpsuit\", and then in you code test to see what the alias is - unlike the name, the alias will be the same.</p>\n<pre><code>if (object.alias = \"orange jumpsuit\") {\n  msg(\"You are wearing an orange jumpsuit\")\n}\n</code></pre>\n\n",
      "PostDate": "2016-07-05T20:41:13.3350596Z",
      "LastEditDate": null
    },
    {
      "PostId": "2d951f0c-dae3-4d9e-8a0c-2e8339ada342",
      "UserId": 207026,
      "Username": "Pykrete",
      "UserAvatar": null,
      "UserGravatar": "1faa3bf756e9e15293c2bc5662f00a7f",
      "EditableText": "Yes, if I just do DoRemove (orange jumpsuit) then the original would be removed, naturally. So what I'm looking for is a way to tell Quest it needs to remove the right clone, which could be (orange jumpsuit1), (orange jumpsuit7), etc.\r\n\r\n'DoRemove (object)'\r\n\r\nOk, that seems about right. How do I tell Quest what to set (object) to? Is that a variable I can adjust on my end? Or is there a variable I can adjust which in turn adjusts that?\r\n\r\nWhen a character wears an object,  does it alter any variables outside of the ones it alters on the object itself? In essence, is there an attribute on the character or somewhere else that gets updated, which I can just hook into for 'if thing.thing = x then blah blah'?",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, if I just do DoRemove (orange jumpsuit) then the original would be removed, naturally. So what I'm looking for is a way to tell Quest it needs to remove the right clone, which could be (orange jumpsuit1), (orange jumpsuit7), etc.</p>\n<p>'DoRemove (object)'</p>\n<p>Ok, that seems about right. How do I tell Quest what to set (object) to? Is that a variable I can adjust on my end? Or is there a variable I can adjust which in turn adjusts that?</p>\n<p>When a character wears an object,  does it alter any variables outside of the ones it alters on the object itself? In essence, is there an attribute on the character or somewhere else that gets updated, which I can just hook into for 'if thing.thing = x then blah blah'?</p>\n\n",
      "PostDate": "2016-07-05T21:52:38.9260134Z",
      "LastEditDate": null
    },
    {
      "PostId": "b30474e4-ec74-47bd-bf17-4a6edf08d5df",
      "UserId": 251094,
      "Username": "bergedorfcacher",
      "UserAvatar": null,
      "UserGravatar": "ea7c0eff71476cd165c31f2605b2f755",
      "EditableText": "A disclaimer first: I'm a total quest beginner (though not a total coding beginner), so  possibly what I say may be totallly beside the point. :-) If  that's the case I apologise in advance.\r\n\r\nHow about writing a wrapper function for DoRemove? Let's call it DoRemoveClone(object):\r\n\r\nDoRemoveClone(object)\r\n\r\nFind an object that the player is actually wearing with alias = object.alias and call that wornobject\r\ncall DoRemoveClone(wornobject)\r\n\r\nWherever you wanted to use DoRemove(object) before, now use DoRemoveClone(object).\r\n\r\nIn case I have understood your problem and quest correctly (however unlikely that might be), the problem boils down to implementing 'find an object that ...'. I'd hope there is some list you can iterate over for that.",
      "EditableFormat": "markdown",
      "HTML": "<p>A disclaimer first: I'm a total quest beginner (though not a total coding beginner), so  possibly what I say may be totallly beside the point. :-) If  that's the case I apologise in advance.</p>\n<p>How about writing a wrapper function for DoRemove? Let's call it DoRemoveClone(object):</p>\n<p>DoRemoveClone(object)</p>\n<p>Find an object that the player is actually wearing with alias = object.alias and call that wornobject<br>\ncall DoRemoveClone(wornobject)</p>\n<p>Wherever you wanted to use DoRemove(object) before, now use DoRemoveClone(object).</p>\n<p>In case I have understood your problem and quest correctly (however unlikely that might be), the problem boils down to implementing 'find an object that ...'. I'd hope there is some list you can iterate over for that.</p>\n\n",
      "PostDate": "2016-07-06T04:40:05.4253784Z",
      "LastEditDate": null
    },
    {
      "PostId": "04f7bfac-c831-4236-9127-73e2108ed417",
      "UserId": 1346,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Pykrete, it depends on how you are using DoRemove. Is it in a command? If so, then the object variable should already by pointed to the right clone. If not, then give us some details, and we can try to solve it\r\n\r\nbergedorfcacher, that is probably the way forward. This code might work, assuming Pykrete gives the objects you will clone an alias.\r\n```\r\nforeach (obj, ScopeInventory()) {\r\n  if (object.alias = obj.alias) {\r\n    result = obj\r\n  }\r\n}\r\nif (not result = null) {\r\n  DoRemove(result) \r\n}\r\nelse {\r\n  msg(\"You're not wearing that.\")\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Pykrete, it depends on how you are using DoRemove. Is it in a command? If so, then the object variable should already by pointed to the right clone. If not, then give us some details, and we can try to solve it</p>\n<p>bergedorfcacher, that is probably the way forward. This code might work, assuming Pykrete gives the objects you will clone an alias.</p>\n<pre><code>foreach (obj, ScopeInventory()) {\n  if (object.alias = obj.alias) {\n    result = obj\n  }\n}\nif (not result = null) {\n  DoRemove(result) \n}\nelse {\n  msg(\"You're not wearing that.\")\n}\n</code></pre>\n\n",
      "PostDate": "2016-07-06T08:21:29.3610971Z",
      "LastEditDate": null
    },
    {
      "PostId": "2a641cc0-72ff-4b34-9396-1ba37ed8fe8f",
      "UserId": 207026,
      "Username": "Pykrete",
      "UserAvatar": null,
      "UserGravatar": "1faa3bf756e9e15293c2bc5662f00a7f",
      "EditableText": "It's not in a command, no. My 'strip' and 'force wear' are separate functions, called upon once a character progresses far enough in the story. So, they enter a room, story stuff happens, and they wake up in a prison, with the functions called in order before they wake up - at the end of the first room, before the next one is moved to.\r\n\r\nSo my original plan was just to have a 'strip' function to remove any possibly clothing they might have on, and then a 'force wear' function to place the appropriate clothes on them automatically. \r\n\r\nIn the code you posted above, is that something I need to fill in the blanks for, or, theoretically, might it work 'out of the box', so to speak?",
      "EditableFormat": "markdown",
      "HTML": "<p>It's not in a command, no. My 'strip' and 'force wear' are separate functions, called upon once a character progresses far enough in the story. So, they enter a room, story stuff happens, and they wake up in a prison, with the functions called in order before they wake up - at the end of the first room, before the next one is moved to.</p>\n<p>So my original plan was just to have a 'strip' function to remove any possibly clothing they might have on, and then a 'force wear' function to place the appropriate clothes on them automatically.</p>\n<p>In the code you posted above, is that something I need to fill in the blanks for, or, theoretically, might it work 'out of the box', so to speak?</p>\n\n",
      "PostDate": "2016-07-06T10:57:37.6669142Z",
      "LastEditDate": null
    },
    {
      "PostId": "b0b5584b-b0a8-4cdb-a6e3-0ec9c688a16a",
      "UserId": 1346,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Should work out of the box.\r\n\r\nThere may be better ways in your situation, however. To strip the player, go through his inventory and destroy any worn item (or move to another location, and set \"worn\" to false). When putting on the orange jumpsuit. you should be able to get the object from the clone function.\r\n```\r\nforeach (obj, ScopeInventory()) {\r\n  if (GetBoolean(obj, \"worn\")) {\r\n    destroy(obj.name)\r\n  }\r\n}\r\nojs = CloneObjectAndMove(orange jumpsuit, player)\r\nojs.worn = true\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Should work out of the box.</p>\n<p>There may be better ways in your situation, however. To strip the player, go through his inventory and destroy any worn item (or move to another location, and set \"worn\" to false). When putting on the orange jumpsuit. you should be able to get the object from the clone function.</p>\n<pre><code>foreach (obj, ScopeInventory()) {\n  if (GetBoolean(obj, \"worn\")) {\n    destroy(obj.name)\n  }\n}\nojs = CloneObjectAndMove(orange jumpsuit, player)\nojs.worn = true\n</code></pre>\n\n",
      "PostDate": "2016-07-06T13:42:49.5972676Z",
      "LastEditDate": "2016-07-06T14:58:21.3219191Z"
    },
    {
      "PostId": "ea60f372-c784-443a-b271-54f1bb70eb7b",
      "UserId": 207026,
      "Username": "Pykrete",
      "UserAvatar": null,
      "UserGravatar": "1faa3bf756e9e15293c2bc5662f00a7f",
      "EditableText": "Tried to run that as seperate function, and as a verb on a piece of clothing to be removed. Both instances give me this error;\r\n\r\n' Error running script: Error compiling expression 'object.worn': Unknown object or variable 'object' '\r\n\r\nOne thing that might be bringing up an issue here is that the characters I'm trying it on aren't the original 'player' object. Perhaps, anyway.\r\n\r\nThe same thing happens with the first bit of code you posted, though with a different error message. \r\n\r\n' Error running script: Error compiling expression 'object.alias = obj.alias': Unknown object or variable 'object' '\r\n\r\nIn both instances, Quest seems pretty adamant that 'object' isn't a thing... hmm.\r\n\r\nI feel like we're definitely almost there! But I'm not sure if I'm messing something up here, causing Quest to go 'object? What's that?'",
      "EditableFormat": "markdown",
      "HTML": "<p>Tried to run that as seperate function, and as a verb on a piece of clothing to be removed. Both instances give me this error;</p>\n<p>' Error running script: Error compiling expression 'object.worn': Unknown object or variable 'object' '</p>\n<p>One thing that might be bringing up an issue here is that the characters I'm trying it on aren't the original 'player' object. Perhaps, anyway.</p>\n<p>The same thing happens with the first bit of code you posted, though with a different error message.</p>\n<p>' Error running script: Error compiling expression 'object.alias = obj.alias': Unknown object or variable 'object' '</p>\n<p>In both instances, Quest seems pretty adamant that 'object' isn't a thing... hmm.</p>\n<p>I feel like we're definitely almost there! But I'm not sure if I'm messing something up here, causing Quest to go 'object? What's that?'</p>\n\n",
      "PostDate": "2016-07-06T14:14:00.3211921Z",
      "LastEditDate": "2016-07-06T14:15:29.2697731Z"
    },
    {
      "PostId": "b0945330-05a6-4ae9-87d4-5795fe0d3d89",
      "UserId": 1346,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Sorry, my bad. Should be \"obj\". Also, it now uses GetBoolean, which is safer, as some things will not have the \"worn\" attribute.",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry, my bad. Should be \"obj\". Also, it now uses GetBoolean, which is safer, as some things will not have the \"worn\" attribute.</p>\n\n",
      "PostDate": "2016-07-06T14:59:26.0485901Z",
      "LastEditDate": null
    },
    {
      "PostId": "cf5ffa10-2449-44ea-b06f-7e1c48861f8e",
      "UserId": 207026,
      "Username": "Pykrete",
      "UserAvatar": null,
      "UserGravatar": "1faa3bf756e9e15293c2bc5662f00a7f",
      "EditableText": "Aha! Perfect, perfect. That works like a charm. I don't want the items destroyed, so I'll just move them instead, after setting 'worn' to false.\r\n\r\nHowever, when my items are equipped and unequipped, I use those events to change stats on the current game.pov for RPG purposes. So, now I need a way of finding out what clothing they were wearing, so I can subtract the appropriate bonuses added earlier. Hmm...\r\n\r\nSo I need a list that checks to see what the alias of the item that got removed was. How might I go about that?\r\n\r\nAnd thank you very much for your time, by the way. Appreciated muchly!\r\n\r\nEdit: So, if I add a 'if obj.alias = \"casual clothes (worn)\", for example, I can then remove the status alterations made when it was put on, and reclone the object to place it back in either the player's inventory, or move it elsewhere. Excellent! Destroying the object also gets rid of the issue of trying to undo all the alterations made when it's worn. Destroying and recloning it is... well, it's a little 'shock and awe' when you think about it, but it works.\r\n\r\nIn turn, I can force equip the new gear, assign the stats required, and change the alias and 'worn' to be correct so it'll play nice with the normal system. I think - knock on wood - that that's me sorted.",
      "EditableFormat": "markdown",
      "HTML": "<p>Aha! Perfect, perfect. That works like a charm. I don't want the items destroyed, so I'll just move them instead, after setting 'worn' to false.</p>\n<p>However, when my items are equipped and unequipped, I use those events to change stats on the current game.pov for RPG purposes. So, now I need a way of finding out what clothing they were wearing, so I can subtract the appropriate bonuses added earlier. Hmm...</p>\n<p>So I need a list that checks to see what the alias of the item that got removed was. How might I go about that?</p>\n<p>And thank you very much for your time, by the way. Appreciated muchly!</p>\n<p>Edit: So, if I add a 'if obj.alias = \"casual clothes (worn)\", for example, I can then remove the status alterations made when it was put on, and reclone the object to place it back in either the player's inventory, or move it elsewhere. Excellent! Destroying the object also gets rid of the issue of trying to undo all the alterations made when it's worn. Destroying and recloning it is... well, it's a little 'shock and awe' when you think about it, but it works.</p>\n<p>In turn, I can force equip the new gear, assign the stats required, and change the alias and 'worn' to be correct so it'll play nice with the normal system. I think - knock on wood - that that's me sorted.</p>\n\n",
      "PostDate": "2016-07-06T15:35:38.7168706Z",
      "LastEditDate": "2016-07-06T16:54:00.5370023Z"
    },
    {
      "PostId": "83033aa3-3cee-493c-b375-ce0f134d1093",
      "UserId": 1346,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": ">However, when my items are equipped and unequipped, I use those events to change stats on the current game.pov for RPG purposes. So, now I need a way of finding out what clothing they were wearing, so I can subtract the appropriate bonuses added earlier. Hmm...\r\n\r\nIn the loop:\r\n```\r\nforeach (obj, ScopeInventory()) {\r\n  if (GetBoolean(obj, \"worn\")) {\r\n    obj.parent = limbo\r\n    obj.worn = false\r\n    // change any stats due to obj here\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>However, when my items are equipped and unequipped, I use those events to change stats on the current game.pov for RPG purposes. So, now I need a way of finding out what clothing they were wearing, so I can subtract the appropriate bonuses added earlier. Hmm...</p>\n</blockquote>\n<p>In the loop:</p>\n<pre><code>foreach (obj, ScopeInventory()) {\n  if (GetBoolean(obj, \"worn\")) {\n    obj.parent = limbo\n    obj.worn = false\n    // change any stats due to obj here\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2016-07-06T20:36:04.5362231Z",
      "LastEditDate": null
    }
  ]
}
