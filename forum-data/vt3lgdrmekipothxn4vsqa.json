{
  "Topic": {
    "TopicId": "vt3lgdrmekipothxn4vsqa",
    "ForumId": "10",
    "Title": "Open ended question help",
    "LastUpdated": "2018-10-10T02:53:49.1194642Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "6135f72a-bd37-4215-98a9-9f30e950b537",
      "UserId": 380239,
      "Username": "Nyquil",
      "AvatarUrl": "https://secure.gravatar.com/avatar/28d600161746d0063ea23a30ff94b127?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello, I am quite new to programming and I would like to ask if it is possible to create an open ended question. The question would be a prompt where the player can have multiple answers with each answer gaining or losing points. Once the player answers correctly a certain amount of times, a new prompt will be shown and the player will again have to guess multiple answers to move onto the next prompt.\r\n\r\nAn example for this would be:\r\nSet-up: You wake up in a film studio, the director is  looking at you waiting for your next move.\r\nQuestion/Prompt: The director screams action, what will you do?\r\nAnswers: jump (+1 point), lay down (-1 point), flip (+1 point), scream (+1 point), etc.\r\nResults: The player guesses enough correct answers to move onto the next prompt.\r\n\r\nHow can I go about creating a prompt that accepts multiple answers as well as take scores for each answer that will add up to unlock the next prompt question?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello, I am quite new to programming and I would like to ask if it is possible to create an open ended question. The question would be a prompt where the player can have multiple answers with each answer gaining or losing points. Once the player answers correctly a certain amount of times, a new prompt will be shown and the player will again have to guess multiple answers to move onto the next prompt.</p>\n<p>An example for this would be:<br>\nSet-up: You wake up in a film studio, the director is  looking at you waiting for your next move.<br>\nQuestion/Prompt: The director screams action, what will you do?<br>\nAnswers: jump (+1 point), lay down (-1 point), flip (+1 point), scream (+1 point), etc.<br>\nResults: The player guesses enough correct answers to move onto the next prompt.</p>\n<p>How can I go about creating a prompt that accepts multiple answers as well as take scores for each answer that will add up to unlock the next prompt question?</p>\n\n",
      "PostDate": "2018-10-10T02:53:49.1194642Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f18dd0ba-aec3-47e8-9b6a-e2e412ef9e18",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sound like a guessing game...\r\nBut unless you provide clues as to a \"correct\" answer, it will get a few plays.\r\nThis would (could) work in a table-top RPG game, but you would need to pre-think every possible choice before hand.\r\nSomething hard to do when it could take about 10% of your choices to get to the next round, then do it all over again for the next question.",
      "EditableFormat": "markdown",
      "HTML": "<p>Sound like a guessing game...<br>\nBut unless you provide clues as to a \"correct\" answer, it will get a few plays.<br>\nThis would (could) work in a table-top RPG game, but you would need to pre-think every possible choice before hand.<br>\nSomething hard to do when it could take about 10% of your choices to get to the next round, then do it all over again for the next question.</p>\n\n",
      "PostDate": "2018-10-10T03:18:29.0890147Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "205ef0c9-d28b-4c1e-b5cf-91964868502a",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Some of what you want is described here:\r\nhttp://docs.textadventures.co.uk/quest/asking_a_question.html",
      "EditableFormat": "markdown",
      "HTML": "<p>Some of what you want is described here:<br>\nhttp://docs.textadventures.co.uk/quest/asking_a_question.html</p>\n\n",
      "PostDate": "2018-10-10T06:56:12.2517189Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a4547498-ec1d-4f12-befa-2e699218e0e0",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'd probably end up making an object for each question. (You could use a dictionary, but Quest's limited support for them is kind of lame). Then have a function which displays the next question, called after each time an answer is given.\r\n\r\n<details><summary>A pretty awkward way to allow more than one choice from a menu</summary>\r\n\r\nIf you're allowing the same question more than once, it might be useful to know that you can save and restore a menu. After calling ShowMenu (actually after it, not in the response script) you have the code:\r\n```\r\ngame.savedmenuoutputsection = game.menuoutputsection\r\ngame.savedmenucallback = game.menucallback\r\ngame.savedmenuoptions = game.menuoptions\r\ngame.menuoutputsection = \"\"\r\n```\r\nThen in the result script (after handling `result` for the question) you would do:\r\n```\r\ngame.menucallback = game.savedmenucallback\r\ngame.menuoptions = game.savedmenuoptions\r\n```\r\nto allow the player to pick a second option.\r\nWhen the player has picked the last option, you would then do:\r\n```\r\ngame.menuoutputsection = game.savedmenuoutputsection\r\ngame.savedmenuoutputsection = null\r\nClearMenu\r\n```\r\nto hide the menu.\r\nIf you allow the user to cancel (entering another command instead of choosing a menu option) you would also want to have a turnscript to hide the menu in that case:\r\n```\r\nif (HasString (game, \"savedmenuoutputsection\") and not HasScript (game, \"menucallback\")) {\r\n  game.menuoutputsection = game.savedmenuoutputsection\r\n  game.savedmenuoutputsection = null\r\n  ClearMenu\r\n}\r\n```\r\nIf you want to disable options that have already been chosen, you'd want to have a javascript function:\r\n```\r\nDisableMenuOption = function (section, optionTag) {\r\n  $('#' + section + ' a[onclick$=\"ShowMenuResponse\\',\\'' + optionTag + '\\')\"]').addClass(\"disabled\").off(\"click\");\r\n};\r\n```\r\nwhich you can then call from the question's result-handling script using:\r\n```\r\nJS.DisableMenuOption(game.savedmenuoutputsection, EscapeQuotes(result))\r\n```\r\n</details>\r\n\r\n<hr />\r\n\r\nI'd put together a simple mockup, but there's a few things I'm not so clear on:\r\nYou said you want the question to repeat until the player gets a certain number of correct answers. Is that a number of answers, or a number of points, or a number of points excluding negatives?\r\nDo you want to display a result after each option has been chosen, or just ask the question again? Can the player choose the same option twice? (And if not, is the option removed from the menu, or do they just get told not to pick the same one twice?)\r\nDo you want to do something with the score (put it into an attribute maybe?) after the question has finished?",
      "EditableFormat": "markdown",
      "HTML": "<p>I'd probably end up making an object for each question. (You could use a dictionary, but Quest's limited support for them is kind of lame). Then have a function which displays the next question, called after each time an answer is given.</p>\n<details><summary>A pretty awkward way to allow more than one choice from a menu</summary>\n<p>If you're allowing the same question more than once, it might be useful to know that you can save and restore a menu. After calling ShowMenu (actually after it, not in the response script) you have the code:</p>\n<pre><code>game.savedmenuoutputsection = game.menuoutputsection\ngame.savedmenucallback = game.menucallback\ngame.savedmenuoptions = game.menuoptions\ngame.menuoutputsection = \"\"\n</code></pre>\n<p>Then in the result script (after handling <code>result</code> for the question) you would do:</p>\n<pre><code>game.menucallback = game.savedmenucallback\ngame.menuoptions = game.savedmenuoptions\n</code></pre>\n<p>to allow the player to pick a second option.<br>\nWhen the player has picked the last option, you would then do:</p>\n<pre><code>game.menuoutputsection = game.savedmenuoutputsection\ngame.savedmenuoutputsection = null\nClearMenu\n</code></pre>\n<p>to hide the menu.<br>\nIf you allow the user to cancel (entering another command instead of choosing a menu option) you would also want to have a turnscript to hide the menu in that case:</p>\n<pre><code>if (HasString (game, \"savedmenuoutputsection\") and not HasScript (game, \"menucallback\")) {\n  game.menuoutputsection = game.savedmenuoutputsection\n  game.savedmenuoutputsection = null\n  ClearMenu\n}\n</code></pre>\n<p>If you want to disable options that have already been chosen, you'd want to have a javascript function:</p>\n<pre><code>DisableMenuOption = function (section, optionTag) {\n  $('#' + section + ' a[onclick$=\"ShowMenuResponse\\',\\'' + optionTag + '\\')\"]').addClass(\"disabled\").off(\"click\");\n};\n</code></pre>\n<p>which you can then call from the question's result-handling script using:</p>\n<pre><code>JS.DisableMenuOption(game.savedmenuoutputsection, EscapeQuotes(result))\n</code></pre>\n</details>\n<hr>\n<p>I'd put together a simple mockup, but there's a few things I'm not so clear on:<br>\nYou said you want the question to repeat until the player gets a certain number of correct answers. Is that a number of answers, or a number of points, or a number of points excluding negatives?<br>\nDo you want to display a result after each option has been chosen, or just ask the question again? Can the player choose the same option twice? (And if not, is the option removed from the menu, or do they just get told not to pick the same one twice?)<br>\nDo you want to do something with the score (put it into an attribute maybe?) after the question has finished?</p>\n\n",
      "PostDate": "2018-10-10T08:12:26.8067477Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "56459273-6a24-4b96-b607-f0508b50514f",
      "UserId": 380239,
      "Username": "Nyquil",
      "AvatarUrl": "https://secure.gravatar.com/avatar/28d600161746d0063ea23a30ff94b127?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you for all of the responses! These examples are helping out a ton!\r\n\r\nTo answer your questions mrangel:\r\n\r\n-  I would like to have the question repeat (or only asked once if that is possible) until a certain number of points excluding \r\n   negatives is reached.\r\n- A result should be displayed after an option has been chosen.\r\n- The player shouldn't be able to choose the same option and if they do, there should be a displayed result telling them they \r\n   can't pick that option again.\r\n- I would like for the score to accumulate so that it unlocks the next question after you score a certain amount of points\r\n  (example: 5 points = second question, 10 points = third question, 15 = fourth question, etc.)\r\n\r\nFor the example of saving and restoring a menu, would that be a script placed in the room or would it be located elsewhere? Thanks for your detailed explanation!\r\n\r\nAlso, would it be possible to just create a list of each answer a player can respond with and have it display a response each time the player uses one of the list answers?\r\n\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you for all of the responses! These examples are helping out a ton!</p>\n<p>To answer your questions mrangel:</p>\n<ul>\n<li>I would like to have the question repeat (or only asked once if that is possible) until a certain number of points excluding<br>\nnegatives is reached.</li>\n<li>A result should be displayed after an option has been chosen.</li>\n<li>The player shouldn't be able to choose the same option and if they do, there should be a displayed result telling them they<br>\ncan't pick that option again.</li>\n<li>I would like for the score to accumulate so that it unlocks the next question after you score a certain amount of points<br>\n(example: 5 points = second question, 10 points = third question, 15 = fourth question, etc.)</li>\n</ul>\n<p>For the example of saving and restoring a menu, would that be a script placed in the room or would it be located elsewhere? Thanks for your detailed explanation!</p>\n<p>Also, would it be possible to just create a list of each answer a player can respond with and have it display a response each time the player uses one of the list answers?</p>\n\n",
      "PostDate": "2018-10-10T12:34:47.0341178Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "35daea73-c41f-4785-b905-3a5d3f950ac1",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah, I thought Pixie had linked you to a tutorial on ShowMenu, so I just posted some bits of code you can add to that, which will allow the player to choose more than one option from the same menu.\r\n\r\nIt looks like the people who've answered this post have different ideas what you're trying to do. I thought you wanted a question that presents the player with a list of answers to click on. Pixie gave a link to a tutorial that will let the player type an answer, and then check if their input meets one of the options.\r\n\r\nWhich one is your intention?",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah, I thought Pixie had linked you to a tutorial on ShowMenu, so I just posted some bits of code you can add to that, which will allow the player to choose more than one option from the same menu.</p>\n<p>It looks like the people who've answered this post have different ideas what you're trying to do. I thought you wanted a question that presents the player with a list of answers to click on. Pixie gave a link to a tutorial that will let the player type an answer, and then check if their input meets one of the options.</p>\n<p>Which one is your intention?</p>\n\n",
      "PostDate": "2018-10-10T12:49:17.7474765Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
