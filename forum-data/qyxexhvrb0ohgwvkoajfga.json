{
  "Topic": {
    "TopicId": "qyxexhvrb0ohgwvkoajfga",
    "ForumId": "10",
    "Title": "Quest timer lag [help]",
    "LastUpdated": "2016-07-26T15:49:43.2089907Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "65b1f79b-6f4a-4006-9135-5d0e501cc45c",
      "UserId": 190839,
      "Username": "RanDumSocks",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "First off, sorry if this is possible a duplicate/dumb question, I tried looking for some answers.\r\n\r\nSo when using a timer within Quest (5.6.1), I get a slight lag by about 0.32 seconds per command. This would make a 25 second timer 28.2 seconds if 10 commands were called during it run-time. The commands are not intensive either, just text prints. Is there any way to minimize this lag?",
      "EditableFormat": "markdown",
      "HTML": "<p>First off, sorry if this is possible a duplicate/dumb question, I tried looking for some answers.</p>\n<p>So when using a timer within Quest (5.6.1), I get a slight lag by about 0.32 seconds per command. This would make a 25 second timer 28.2 seconds if 10 commands were called during it run-time. The commands are not intensive either, just text prints. Is there any way to minimize this lag?</p>\n\n",
      "PostDate": "2016-07-26T15:49:43.2089907Z",
      "LastEditDate": null
    },
    {
      "PostId": "989c6a67-2d3d-4d98-9f02-21608c6e8c55",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Coding is a bunch of computer processes/operations (which take time, and also those processes/operations ultimately boil down to the time it takes the electricity in the circuits to physically travel across them), and also if you're playing online, then you got all the time issues with the networking processes/operations too. Better code design can reduce the number of processes/operations and/or uses more efficient operations/processes. if you really want to speed things up, you do as much of the operations/processes as you can, at the lower-level language level, such as doing it in assembly language. The high level languages, while to you seem like they're not that intensive operations/proceses are as there's a lot of overhead to create the high level languages (the high level languages are more user friendly) for the convenience of the users.\r\n\r\nthe short answer is:\r\n\r\nusing actual clock time (Timers) is very messy, especially when trying to implement for online play. You'd be better served to use quest's internal turns via using Turnscripts",
      "EditableFormat": "markdown",
      "HTML": "<p>Coding is a bunch of computer processes/operations (which take time, and also those processes/operations ultimately boil down to the time it takes the electricity in the circuits to physically travel across them), and also if you're playing online, then you got all the time issues with the networking processes/operations too. Better code design can reduce the number of processes/operations and/or uses more efficient operations/processes. if you really want to speed things up, you do as much of the operations/processes as you can, at the lower-level language level, such as doing it in assembly language. The high level languages, while to you seem like they're not that intensive operations/proceses are as there's a lot of overhead to create the high level languages (the high level languages are more user friendly) for the convenience of the users.</p>\n<p>the short answer is:</p>\n<p>using actual clock time (Timers) is very messy, especially when trying to implement for online play. You'd be better served to use quest's internal turns via using Turnscripts</p>\n\n",
      "PostDate": "2016-07-26T21:28:11.5010581Z",
      "LastEditDate": null
    }
  ]
}
