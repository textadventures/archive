{
  "Topic": {
    "TopicId": "m5zwo3qkuuwkv4dzhjwagg",
    "ForumId": "10",
    "Title": "UNCLEAR TUTORIALS?!",
    "LastUpdated": "2017-09-08T10:08:17.2362633Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "2ae7575d-8037-4764-be9b-330a7f4c6fb5",
      "UserId": 319573,
      "Username": "ITSLEO",
      "AvatarUrl": "https://secure.gravatar.com/avatar/51373272888dc66f7797031735ecdb7e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Some days ago i wrote an issue that i had trying to build conversation in my game, and the developer answered me with the official tutorials but didn't help beacause what i've understood is: dialogues needs libraries, but libraries need a script (where? Why?) so i searched on this site but it was a loop bringing me nowhere! I am using QUEST in the Desktop version..and i'm new to the program...so..how can i make conversations??? It is really important in my game.",
      "EditableFormat": "markdown",
      "HTML": "<p>Some days ago i wrote an issue that i had trying to build conversation in my game, and the developer answered me with the official tutorials but didn't help beacause what i've understood is: dialogues needs libraries, but libraries need a script (where? Why?) so i searched on this site but it was a loop bringing me nowhere! I am using QUEST in the Desktop version..and i'm new to the program...so..how can i make conversations??? It is really important in my game.</p>\n\n",
      "PostDate": "2017-09-08T10:08:17.2362633Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1d5e9843-e0e7-4d17-a07a-782bbbf2afcb",
      "UserId": 924,
      "Username": "Pertex",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4cc1e52f99452e841ecf4cbee9eadde9?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you had used the search function of the forum you would find a lot of posts about conversations e.g.\r\nhttps://github.com/ThePix/quest/wiki/Conversations:-Library",
      "EditableFormat": "markdown",
      "HTML": "<p>If you had used the search function of the forum you would find a lot of posts about conversations e.g.<br>\nhttps://github.com/ThePix/quest/wiki/Conversations:-Library</p>\n\n",
      "PostDate": "2017-09-08T10:52:57.5294173Z",
      "LastEditDate": "2017-09-08T10:53:22.3789698Z",
      "link": null
    },
    {
      "PostId": "b263b052-9830-4701-a580-86e6f78bb37b",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "### You can use the following method(s) without adding any libraries at all.\r\n\r\n\r\n<details><summary>Click here to view Part 1</summary>\r\n\r\n---\r\n#### SET UP **ASK**\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30208203-07e27cbe-9458-11e7-886a-a29709431c03.png)\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30208249-37c6f946-9458-11e7-911c-069c2a25640b.png)\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30208275-534da98a-9458-11e7-9cc1-ccc50f3c1ae4.png)\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30208362-ae6c71d4-9458-11e7-9d07-ec9453e4014a.png)\r\n\r\n\r\n\r\n---\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30208533-8a344fde-9459-11e7-995d-458b4d2704ad.png)\r\n\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30208566-b601ac74-9459-11e7-882f-96d28b231887.png)\r\n\r\n\r\n---\r\n## **NOTE:** SET UP **TELL** THE SAME WAY.\r\n\r\n---\r\n### NOW, ADD A **SPEAK TO** VERB:\r\n\r\n\r\n---\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30207984-339623c0-9457-11e7-8bfc-a87f42aa6ff0.png)\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30207997-480f5a7e-9457-11e7-824e-8f8c8d6d3918.png)\r\n\r\n\r\n\r\n---\r\n#### THE EASY ROUTE:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30208116-b01b04b0-9457-11e7-8e6e-143efe16e430.png)\r\n\r\n\r\n---\r\n***TRANSCRIPT***\r\n\r\n\r\n<div style=\"background:black;color:green;font-family:monospace;padding:14px;font-size:150%\">\r\n<CENTER><h3 style=\"font-size:250%\">conversations</h3></CENTER>\r\n\r\nYou are in a room.\r\nYou can see Rondo.\r\n\r\n\\> talk to rondo\r\nYou say something or other to Rondo.\r\n\r\nHe might respond bettter if you ASK RONDO ABOUT something...\r\n\r\n\r\n\\> ask rondo about the game\r\n\"Well, I think you'll like what my creator has cooked up for you, after all is said and done,\" says Rondo.\r\n\r\n\\> ask rondo about conversations\r\n\"They're not simple to set up,\" Rondo replies, \"but conversations are a bit complicated in real life, as well, aren't they?\"\r\n\r\n</div>\r\n\r\n---\r\n#### Sources:\r\n\r\nhttp://docs.textadventures.co.uk/quest/conversations.html\r\n\r\nhttp://docs.textadventures.co.uk/quest/ask_about.html\r\n\r\n---\r\n\r\n###  **UP NEXT:** A MORE COMPLICATED WAY TO SET UP THE **```SPEAK TO```** SCRIPT\r\n\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<h3>You can use the following method(s) without adding any libraries at all.</h3>\n<details><summary>Click here to view Part 1</summary>\n<hr>\n<h4>SET UP <strong>ASK</strong></h4>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30208203-07e27cbe-9458-11e7-886a-a29709431c03.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30208249-37c6f946-9458-11e7-911c-069c2a25640b.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30208275-534da98a-9458-11e7-9cc1-ccc50f3c1ae4.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30208362-ae6c71d4-9458-11e7-9d07-ec9453e4014a.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30208533-8a344fde-9459-11e7-995d-458b4d2704ad.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30208566-b601ac74-9459-11e7-882f-96d28b231887.png\" alt=\"image\"></p>\n<hr>\n<h2><strong>NOTE:</strong> SET UP <strong>TELL</strong> THE SAME WAY.</h2>\n<hr>\n<h3>NOW, ADD A <strong>SPEAK TO</strong> VERB:</h3>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30207984-339623c0-9457-11e7-8bfc-a87f42aa6ff0.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30207997-480f5a7e-9457-11e7-824e-8f8c8d6d3918.png\" alt=\"image\"></p>\n<hr>\n<h4>THE EASY ROUTE:</h4>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30208116-b01b04b0-9457-11e7-8e6e-143efe16e430.png\" alt=\"image\"></p>\n<hr>\n<p><strong><em>TRANSCRIPT</em></strong></p>\n<div style=\"background: black; color: green; font-family: monospace; padding: 14px; font-size: 150%\">\n<center><h3 style=\"font-size: 250%\">conversations</h3></center>\n<p>You are in a room.<br>\nYou can see Rondo.</p>\n<p>&gt; talk to rondo<br>\nYou say something or other to Rondo.</p>\n<p>He might respond bettter if you ASK RONDO ABOUT something...</p>\n<p>&gt; ask rondo about the game<br>\n\"Well, I think you'll like what my creator has cooked up for you, after all is said and done,\" says Rondo.</p>\n<p>&gt; ask rondo about conversations<br>\n\"They're not simple to set up,\" Rondo replies, \"but conversations are a bit complicated in real life, as well, aren't they?\"</p>\n</div>\n<hr>\n<h4>Sources:</h4>\n<p>http://docs.textadventures.co.uk/quest/conversations.html</p>\n<p>http://docs.textadventures.co.uk/quest/ask_about.html</p>\n<hr>\n<h3><strong>UP NEXT:</strong> A MORE COMPLICATED WAY TO SET UP THE <strong><code>SPEAK TO</code></strong> SCRIPT</h3>\n</details>\n\n",
      "PostDate": "2017-09-08T10:58:43.4638623Z",
      "LastEditDate": "2017-09-09T06:38:37.6194362Z",
      "link": null
    },
    {
      "PostId": "31738f50-e0d8-4a62-b96d-bc7c257d27a9",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "### PART 2\r\n### A MORE COMPLICATED WAY TO SET UP THE **```SPEAK TO```** SCRIPT\r\n\r\n<details><summary>Click here to view Part 2</summary>\r\n\r\n\r\nSet up an attribute for each NPC.  Call it **```topics```**.\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30209168-53eb4cea-945c-11e7-9957-99f0df74e6a9.png)\r\n\r\n---\r\nMake it a String List:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30209180-6a19486e-945c-11e7-8199-591c6f69a4a6.png)\r\n\r\n---\r\nNow, add a string to match each of your ASK topics:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30209224-9d0327a4-945c-11e7-8c0f-50d1f3af2525.png)\r\n\r\n---\r\nNow, back to our SPEAK TO verb...\r\n\r\nChange what's there to something like this:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30209242-ba7c4ef0-945c-11e7-9d8f-294ee85352d6.png)\r\n\r\n\r\n---\r\nOPTION A:\r\n![image](https://user-images.githubusercontent.com/30656341/30209613-92d12eaa-945e-11e7-9952-7141e17a43fb.png)\r\n\r\n\r\n---\r\nOPTION B:\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30209535-415e4f76-945e-11e7-877e-ce9fe673ef4e.png)\r\n\r\n\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30209410-97a227b4-945d-11e7-97a6-d1234385969a.png)\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30209626-a6bfc0a2-945e-11e7-90c4-08628fae907f.png)\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<h3>PART 2</h3>\n<h3>A MORE COMPLICATED WAY TO SET UP THE <strong><code>SPEAK TO</code></strong> SCRIPT</h3>\n<details><summary>Click here to view Part 2</summary>\n<p>Set up an attribute for each NPC.  Call it <strong><code>topics</code></strong>.</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30209168-53eb4cea-945c-11e7-9957-99f0df74e6a9.png\" alt=\"image\"></p>\n<hr>\n<p>Make it a String List:</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30209180-6a19486e-945c-11e7-8199-591c6f69a4a6.png\" alt=\"image\"></p>\n<hr>\n<p>Now, add a string to match each of your ASK topics:</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30209224-9d0327a4-945c-11e7-8c0f-50d1f3af2525.png\" alt=\"image\"></p>\n<hr>\n<p>Now, back to our SPEAK TO verb...</p>\n<p>Change what's there to something like this:</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30209242-ba7c4ef0-945c-11e7-9d8f-294ee85352d6.png\" alt=\"image\"></p>\n<hr>\n<p>OPTION A:<br>\n<img src=\"https://user-images.githubusercontent.com/30656341/30209613-92d12eaa-945e-11e7-9952-7141e17a43fb.png\" alt=\"image\"></p>\n<hr>\n<p>OPTION B:</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30209535-415e4f76-945e-11e7-877e-ce9fe673ef4e.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30209410-97a227b4-945d-11e7-97a6-d1234385969a.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30209626-a6bfc0a2-945e-11e7-90c4-08628fae907f.png\" alt=\"image\"></p>\n</details>\n\n",
      "PostDate": "2017-09-08T11:28:25.2464518Z",
      "LastEditDate": "2017-09-09T06:39:13.3799094Z",
      "link": null
    },
    {
      "PostId": "739f8f8d-83ab-4a54-951f-36934646e922",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "EXAMPLE 1:\r\n\r\n<details><summary>Click here to view the entire game code</summary>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"conversations\">\r\n    <gameid>d8c62ce2-69e0-4776-897d-8dcce76cac97</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n    <feature_asktell />\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"Rondo\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"namedmale\" />\r\n      <speak><![CDATA[You say something or other to Rondo.<br/><br/>He might respond bettter if you ASK RONDO ABOUT something...<br/>]]></speak>\r\n      <ask type=\"scriptdictionary\">\r\n        <item key=\"game author story\">\r\n          msg (\"\\\"Well, I think you'll like what my creator has cooked up for you, after all is said and done,\\\" says Rondo.\")\r\n        </item>\r\n        <item key=\"conversations conversation\">\r\n          msg (\"\\\"They're not simple to set up,\\\" Rondo replies, \\\"but conversations are a bit complicated in real life, as well, aren't they?\\\"\")\r\n        </item>\r\n      </ask>\r\n      <askdefault type=\"script\">\r\n        msg (\"Rondo just shrugs.\")\r\n      </askdefault>\r\n      <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    </object>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n</details>\r\n\r\n---\r\n\r\nEXAMPLE 2:\r\n\r\n<details><summary>Click here to view the entire game code</summary>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"conversations\">\r\n    <gameid>d8c62ce2-69e0-4776-897d-8dcce76cac97</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n    <feature_asktell />\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"Rondo\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"namedmale\" />\r\n      <speak type=\"script\">\r\n        ShowMenu (\"What would you like to ask Rondo about?\", Rondo.topics, true) {\r\n          if (not result = null) {\r\n            msg (\"You ask Rondo about \" + result + \".\")\r\n            HandleSingleCommand (\"ask Rondo about \" + result + \"\")\r\n          }\r\n        }\r\n      </speak>\r\n      <ask type=\"scriptdictionary\">\r\n        <item key=\"game author story\">\r\n          msg (\"\\\"Well, I think you'll like what my creator has cooked up for you, after all is said and done,\\\" says Rondo.\")\r\n        </item>\r\n        <item key=\"conversations conversation\">\r\n          msg (\"\\\"They're not simple to set up,\\\" Rondo replies, \\\"but conversations are a bit complicated in real life, as well, aren't they?\\\"\")\r\n        </item>\r\n      </ask>\r\n      <askdefault type=\"script\">\r\n        msg (\"Rondo just shrugs.\")\r\n      </askdefault>\r\n      <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n      <topics type=\"stringlist\">\r\n        <value>game</value>\r\n        <value>conversations</value>\r\n      </topics>\r\n    </object>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>EXAMPLE 1:</p>\n<details><summary>Click here to view the entire game code</summary>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"conversations\"&gt;\n    &lt;gameid&gt;d8c62ce2-69e0-4776-897d-8dcce76cac97&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n    &lt;feature_asktell /&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Rondo\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"namedmale\" /&gt;\n      &lt;speak&gt;&lt;![CDATA[You say something or other to Rondo.&lt;br/&gt;&lt;br/&gt;He might respond bettter if you ASK RONDO ABOUT something...&lt;br/&gt;]]&gt;&lt;/speak&gt;\n      &lt;ask type=\"scriptdictionary\"&gt;\n        &lt;item key=\"game author story\"&gt;\n          msg (\"\\\"Well, I think you'll like what my creator has cooked up for you, after all is said and done,\\\" says Rondo.\")\n        &lt;/item&gt;\n        &lt;item key=\"conversations conversation\"&gt;\n          msg (\"\\\"They're not simple to set up,\\\" Rondo replies, \\\"but conversations are a bit complicated in real life, as well, aren't they?\\\"\")\n        &lt;/item&gt;\n      &lt;/ask&gt;\n      &lt;askdefault type=\"script\"&gt;\n        msg (\"Rondo just shrugs.\")\n      &lt;/askdefault&gt;\n      &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n<hr>\n<p>EXAMPLE 2:</p>\n<details><summary>Click here to view the entire game code</summary>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"conversations\"&gt;\n    &lt;gameid&gt;d8c62ce2-69e0-4776-897d-8dcce76cac97&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n    &lt;feature_asktell /&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Rondo\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"namedmale\" /&gt;\n      &lt;speak type=\"script\"&gt;\n        ShowMenu (\"What would you like to ask Rondo about?\", Rondo.topics, true) {\n          if (not result = null) {\n            msg (\"You ask Rondo about \" + result + \".\")\n            HandleSingleCommand (\"ask Rondo about \" + result + \"\")\n          }\n        }\n      &lt;/speak&gt;\n      &lt;ask type=\"scriptdictionary\"&gt;\n        &lt;item key=\"game author story\"&gt;\n          msg (\"\\\"Well, I think you'll like what my creator has cooked up for you, after all is said and done,\\\" says Rondo.\")\n        &lt;/item&gt;\n        &lt;item key=\"conversations conversation\"&gt;\n          msg (\"\\\"They're not simple to set up,\\\" Rondo replies, \\\"but conversations are a bit complicated in real life, as well, aren't they?\\\"\")\n        &lt;/item&gt;\n      &lt;/ask&gt;\n      &lt;askdefault type=\"script\"&gt;\n        msg (\"Rondo just shrugs.\")\n      &lt;/askdefault&gt;\n      &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n      &lt;topics type=\"stringlist\"&gt;\n        &lt;value&gt;game&lt;/value&gt;\n        &lt;value&gt;conversations&lt;/value&gt;\n      &lt;/topics&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2017-09-08T11:36:04.8846084Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "83829637-9c25-4dd4-ad36-b2c2b93276b0",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "No, no. You download the game, and you download the library, and they should both be in the same folder/same place so Quest can use them. As long as they are in the same place, Quest will use them both when you open the game.\r\n\r\nOr, you can look at the start of my game, here. http://textadventures.co.uk/games/view/0p9uxrxu2ueatixrnt1ixg/pokemon-type-harley-johto-and-sinnoh I just put a bunch of object in as \"topics\". Or I put a bunch of \"topics\" in as objects....",
      "EditableFormat": "markdown",
      "HTML": "<p>No, no. You download the game, and you download the library, and they should both be in the same folder/same place so Quest can use them. As long as they are in the same place, Quest will use them both when you open the game.</p>\n<p>Or, you can look at the start of my game, here. http://textadventures.co.uk/games/view/0p9uxrxu2ueatixrnt1ixg/pokemon-type-harley-johto-and-sinnoh I just put a bunch of object in as \"topics\". Or I put a bunch of \"topics\" in as objects....</p>\n\n",
      "PostDate": "2017-09-08T13:39:09.3162596Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "475aa24f-12ff-4148-923d-1e449fb30ae1",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "## Part 3: An Alternate Method: PIXIE'S LIBRARY\r\n### Using ConvLib\r\n\r\n\r\n<details><summary>Click here to view Part 3</summary>\r\n\r\n\r\nRight click this to download it: [ConvLib](https://github.com/ThePix/quest/raw/master/ConvLib.aslx)\r\n\r\n#### **Make sure to copy/move the library to your game's main folder.**\r\n\r\n---\r\n#### Then, add the library:\r\n![image](https://user-images.githubusercontent.com/30656341/30224839-e15fc32e-9495-11e7-8f5f-a820b065ab01.png)\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30224871-fb20c4a2-9495-11e7-959d-a428c2f915aa.png)\r\n\r\n---\r\n#### Make sure you save then reload.\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30224890-0d82ee2c-9496-11e7-9b23-e8bae44f2d40.png)\r\n\r\n---\r\n#### You will now see the Conversation tab:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30225147-0af3a1fa-9497-11e7-8e8b-81c47efa15f4.png)\r\n\r\n\r\n---\r\n#### Set up an NPC, and make the NPC a Character under the Conversation tab:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30226304-294a7850-949b-11e7-8113-bce4e342fd53.png)\r\n\r\n\r\n---\r\n#### Then add TOPIC objects INSIDE of the NPC\r\n\r\n- Open the Conversation tab, and select Starting Conversation Topic\r\n- Add the NPC's response in the conversation field\r\n- Enter the topic as the object's alias\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30228696-6f3789e4-94a4-11e7-97b1-ef2b705a8320.png)\r\n\r\n---\r\n### That's it for this example.\r\n\r\n#### This will automatically set up speak/talk to on this NPC.\r\n\r\n**Just start up the game and check it out:**\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30226542-fc741042-949b-11e7-9566-2c3f8a357df3.png)\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30226632-5c7f5df2-949c-11e7-9421-0cf34f9c6da0.png)\r\n\r\n\r\n---\r\nFrom here, use Pixie's guide-in-progress to set things up (sorry, I haven't played with this until just now, and it's a little complex): \r\nhttps://github.com/ThePix/quest/wiki/Conversations:-Library\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<h2>Part 3: An Alternate Method: PIXIE'S LIBRARY</h2>\n<h3>Using ConvLib</h3>\n<details><summary>Click here to view Part 3</summary>\n<p>Right click this to download it: <a href=\"https://github.com/ThePix/quest/raw/master/ConvLib.aslx\">ConvLib</a></p>\n<h4><strong>Make sure to copy/move the library to your game's main folder.</strong></h4>\n<hr>\n<h4>Then, add the library:</h4>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30224839-e15fc32e-9495-11e7-8f5f-a820b065ab01.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30224871-fb20c4a2-9495-11e7-959d-a428c2f915aa.png\" alt=\"image\"></p>\n<hr>\n<h4>Make sure you save then reload.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30224890-0d82ee2c-9496-11e7-9b23-e8bae44f2d40.png\" alt=\"image\"></p>\n<hr>\n<h4>You will now see the Conversation tab:</h4>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30225147-0af3a1fa-9497-11e7-8e8b-81c47efa15f4.png\" alt=\"image\"></p>\n<hr>\n<h4>Set up an NPC, and make the NPC a Character under the Conversation tab:</h4>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30226304-294a7850-949b-11e7-8113-bce4e342fd53.png\" alt=\"image\"></p>\n<hr>\n<h4>Then add TOPIC objects INSIDE of the NPC</h4>\n<ul>\n<li>Open the Conversation tab, and select Starting Conversation Topic</li>\n<li>Add the NPC's response in the conversation field</li>\n<li>Enter the topic as the object's alias</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30228696-6f3789e4-94a4-11e7-97b1-ef2b705a8320.png\" alt=\"image\"></p>\n<hr>\n<h3>That's it for this example.</h3>\n<h4>This will automatically set up speak/talk to on this NPC.</h4>\n<p><strong>Just start up the game and check it out:</strong></p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30226542-fc741042-949b-11e7-9566-2c3f8a357df3.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30226632-5c7f5df2-949c-11e7-9421-0cf34f9c6da0.png\" alt=\"image\"></p>\n<hr>\n<p>From here, use Pixie's guide-in-progress to set things up (sorry, I haven't played with this until just now, and it's a little complex):<br>\nhttps://github.com/ThePix/quest/wiki/Conversations:-Library</p>\n</details>\n\n",
      "PostDate": "2017-09-08T18:18:40.5727999Z",
      "LastEditDate": "2017-09-09T06:39:46.8339727Z",
      "link": null
    },
    {
      "PostId": "e2aaa245-e9dd-4fa3-bece-6ae4c9e8b42e",
      "UserId": 319573,
      "Username": "ITSLEO",
      "AvatarUrl": "https://secure.gravatar.com/avatar/51373272888dc66f7797031735ecdb7e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "THANK YOU!",
      "EditableFormat": "markdown",
      "HTML": "<p>THANK YOU!</p>\n\n",
      "PostDate": "2017-09-08T19:14:28.0286391Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d70996c2-13d7-4905-aafa-c8712c968e9e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ThePix\r\n\r\n<s>**Informal pull request:**\r\n\r\nIt would rock if the library added **Speak to** to the Character's verbs list.  (Or does it, and I just messed something up?  I notice it definitely sets up Consult on those objects...)</s>\r\n\r\nUPDATE:\r\n\r\nNevermind.  It does set up **Speak to** on the object.  (I don't know what I did!  Ha-ha!)",
      "EditableFormat": "markdown",
      "HTML": "<p>@ThePix</p>\n<p><s><strong>Informal pull request:</strong></s></p><s>\n</s><p><s>It would rock if the library added <strong>Speak to</strong> to the Character's verbs list.  (Or does it, and I just messed something up?  I notice it definitely sets up Consult on those objects...)</s></p>\n<p>UPDATE:</p>\n<p>Nevermind.  It does set up <strong>Speak to</strong> on the object.  (I don't know what I did!  Ha-ha!)</p>\n\n",
      "PostDate": "2017-09-08T19:56:05.6505335Z",
      "LastEditDate": "2017-09-09T06:45:13.5947004Z",
      "link": null
    },
    {
      "PostId": "59a2c30a-dbaa-48ea-bdfa-c92bec01c8e2",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "# PART 4 \r\n### ConvLib (continued)\r\n\r\n<details><summary>Click here to view Part 4</summary>\r\n\r\n#### In the last post, we set up an ASK topic object for the dancer.  Now, we will build off of that.\r\n\r\n**Add a new topic to the NPC that you'd like to show up after it is brought up during play:**\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30230018-f454b368-94a9-11e7-8047-5032e591a332.png)\r\n\r\n---\r\n**Remember to add the alias:**\r\n![image](https://user-images.githubusercontent.com/30656341/30230050-1c5d2020-94aa-11e7-9172-826b5fc65151.png)\r\n\r\n---\r\n**Now go to the Conversation tab, and make it a ```Conversation Topic```**:\r\n![image](https://user-images.githubusercontent.com/30656341/30230093-55aa4754-94aa-11e7-98af-8371769d35d1.png)\r\n\r\n\r\n---\r\n**Now, go back to the ```dancer clear heels``` object and add the newly created topic to ```Follow-on topics```:**\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30230152-afd7fdf2-94aa-11e7-970f-df4f667daa85.png)\r\n\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30230208-e032be6a-94aa-11e7-8481-f1a6c7baa2e4.png)\r\n\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30230215-e9cad3b8-94aa-11e7-9a85-bd5bfb6bed5f.png)\r\n\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30230224-f336bade-94aa-11e7-8c61-2eeb17715dc7.png)\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<h1>PART 4</h1>\n<h3>ConvLib (continued)</h3>\n<details><summary>Click here to view Part 4</summary>\n<h4>In the last post, we set up an ASK topic object for the dancer.  Now, we will build off of that.</h4>\n<p><strong>Add a new topic to the NPC that you'd like to show up after it is brought up during play:</strong></p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30230018-f454b368-94a9-11e7-8047-5032e591a332.png\" alt=\"image\"></p>\n<hr>\n<p><strong>Remember to add the alias:</strong><br>\n<img src=\"https://user-images.githubusercontent.com/30656341/30230050-1c5d2020-94aa-11e7-9172-826b5fc65151.png\" alt=\"image\"></p>\n<hr>\n<p><strong>Now go to the Conversation tab, and make it a <code>Conversation Topic</code></strong>:<br>\n<img src=\"https://user-images.githubusercontent.com/30656341/30230093-55aa4754-94aa-11e7-98af-8371769d35d1.png\" alt=\"image\"></p>\n<hr>\n<p><strong>Now, go back to the <code>dancer clear heels</code> object and add the newly created topic to <code>Follow-on topics</code>:</strong></p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30230152-afd7fdf2-94aa-11e7-970f-df4f667daa85.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30230208-e032be6a-94aa-11e7-8481-f1a6c7baa2e4.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30230215-e9cad3b8-94aa-11e7-9a85-bd5bfb6bed5f.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30230224-f336bade-94aa-11e7-8c61-2eeb17715dc7.png\" alt=\"image\"></p>\n</details>\n\n",
      "PostDate": "2017-09-08T20:34:33.6289661Z",
      "LastEditDate": "2017-09-09T06:40:16.355047Z",
      "link": null
    },
    {
      "PostId": "040778cf-9e6d-4bc8-9faf-f469018eae19",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "## Part 5 (ConvLib continued (continued))\r\n\r\n### Dragging someone else into the conversation\r\n\r\n<details><summary>Click here to view Part 5</summary>\r\n\r\n####  Add a **Rondo** topic to the dancer.\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30231311-f45853aa-94af-11e7-82fb-61419bf56195.png)\r\n\r\n\r\n---\r\n#### Create a new topic, **dancer beer**, set up it's alias, and make it a **Conversation topic**\r\n\r\n- **I'm adding a script to this one, too.**\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30231094-e13c7658-94ae-11e7-9fa6-a96ca91f5d5d.png)\r\n\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30231418-66241906-94b0-11e7-86a8-6ffbc7102c34.png)\r\n\r\n\r\n---\r\n#### Add the newly created topic to the **Follow-on topics** of the **dancer rondo** topic object:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30231174-49d00d6a-94af-11e7-9d22-2aafbcc3bf76.png)\r\n\r\n\r\n---\r\n\r\n***TRANSCRIPT***\r\n\r\n<div style=\"background:black;color:green;font-family:monospace;font-size:150%;padding:14px\">\r\n<samp>\r\n\r\n<center><h3 style=\"font-size:175%\">conversations</h3></center>\r\n\r\nYou are in a room.\r\nYou can see [Rondo](#inactive \"This doesn't work! This isn't really the game!\") and [dancer](#inactive \"This doesn't work! This isn't really the game!\").\r\n\r\n\\> speak to [dancer](#inactive \"This doesn't work! This isn't really the game!\")\r\n\"Oh, Rondo's one of my FAVORITE customers!\" she replies.\r\n\r\nRondo hears his name and makes his way towards you and the dancer.\r\n\r\n\"Hey! Thanks, Darlin! You're my favorite, too!\"\r\n\r\nDarlin gives a little giggle at this. \"Well, ain't you just so sweet you make sugar taste just like salt! That's why you're ONE of my favorites, Rondo!\"\r\n\r\nRondo's face turns a little red at this. Darlin shoots you a quick nod in his direction and rolls her eyes when Rondo's not looking.\r\n\r\n\"Aw, shucks,\" Rondo kicks one foot at nothing in particular. \"You're a sweetheart! And you serve the BEST beer around, too!\r\n\r\n\"Hey, you!\" (This is directed towards you.) \"Ask her about her favorite beer! It's called Two-Fisted Ale, or something like that...\"\r\n\r\n\r\n\\> speak to [dancer](#inactive \"This doesn't work! This isn't really the game!\")\r\nYou ask the dancer about the beer.\r\n\r\n\"It's actually called Two-Hearted Ale. Here, have one! I snatched one out of XanMag's cooler while he was working on that Word document he's been working so hard on.\"\r\n\r\nShe produces a beer and hands it over.\r\n\r\n\r\n\\> drink[ bottle of Two-Hearted Ale](#inactive \"This doesn't work! This isn't really the game!\")\r\nYou take a drink, and it IS pretty good stuff!\r\n\r\n</samp>\r\n</div>\r\n\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<h2>Part 5 (ConvLib continued (continued))</h2>\n<h3>Dragging someone else into the conversation</h3>\n<details><summary>Click here to view Part 5</summary>\n<h4>Add a <strong>Rondo</strong> topic to the dancer.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30231311-f45853aa-94af-11e7-82fb-61419bf56195.png\" alt=\"image\"></p>\n<hr>\n<h4>Create a new topic, <strong>dancer beer</strong>, set up it's alias, and make it a <strong>Conversation topic</strong></h4>\n<ul>\n<li><strong>I'm adding a script to this one, too.</strong></li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30231094-e13c7658-94ae-11e7-9fa6-a96ca91f5d5d.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30231418-66241906-94b0-11e7-86a8-6ffbc7102c34.png\" alt=\"image\"></p>\n<hr>\n<h4>Add the newly created topic to the <strong>Follow-on topics</strong> of the <strong>dancer rondo</strong> topic object:</h4>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30231174-49d00d6a-94af-11e7-9d22-2aafbcc3bf76.png\" alt=\"image\"></p>\n<hr>\n<p><strong><em>TRANSCRIPT</em></strong></p>\n<div style=\"background: black; color: green; font-family: monospace; font-size: 150%; padding: 14px\">\n<samp>\n<center><h3 style=\"font-size: 175%\">conversations</h3></center>\n<p>You are in a room.<br>\nYou can see <a href=\"#inactive\" title=\"This doesn't work! This isn't really the game!\">Rondo</a> and <a href=\"#inactive\" title=\"This doesn't work! This isn't really the game!\">dancer</a>.</p>\n<p>&gt; speak to <a href=\"#inactive\" title=\"This doesn't work! This isn't really the game!\">dancer</a><br>\n\"Oh, Rondo's one of my FAVORITE customers!\" she replies.</p>\n<p>Rondo hears his name and makes his way towards you and the dancer.</p>\n<p>\"Hey! Thanks, Darlin! You're my favorite, too!\"</p>\n<p>Darlin gives a little giggle at this. \"Well, ain't you just so sweet you make sugar taste just like salt! That's why you're ONE of my favorites, Rondo!\"</p>\n<p>Rondo's face turns a little red at this. Darlin shoots you a quick nod in his direction and rolls her eyes when Rondo's not looking.</p>\n<p>\"Aw, shucks,\" Rondo kicks one foot at nothing in particular. \"You're a sweetheart! And you serve the BEST beer around, too!</p>\n<p>\"Hey, you!\" (This is directed towards you.) \"Ask her about her favorite beer! It's called Two-Fisted Ale, or something like that...\"</p>\n<p>&gt; speak to <a href=\"#inactive\" title=\"This doesn't work! This isn't really the game!\">dancer</a><br>\nYou ask the dancer about the beer.</p>\n<p>\"It's actually called Two-Hearted Ale. Here, have one! I snatched one out of XanMag's cooler while he was working on that Word document he's been working so hard on.\"</p>\n<p>She produces a beer and hands it over.</p>\n<p>&gt; drink<a href=\"#inactive\" title=\"This doesn't work! This isn't really the game!\"> bottle of Two-Hearted Ale</a><br>\nYou take a drink, and it IS pretty good stuff!</p>\n</samp>\n</div>\n</details>\n\n",
      "PostDate": "2017-09-08T21:21:15.6389795Z",
      "LastEditDate": "2017-09-09T06:40:45.7815042Z",
      "link": null
    },
    {
      "PostId": "a5c09d1d-58fd-4631-af61-1f6d75666d65",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "TIP FOR THE DAY:\r\n\r\nDisplay verbs for NPCs:\r\n\r\n- Remove **Take**\r\n- Add **Speak to**\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30231976-10b2417a-94b3-11e7-87eb-b3605b0a4c02.png)\r\n\r\n\r\nNOTE: ConvLib does this for you.",
      "EditableFormat": "markdown",
      "HTML": "<p>TIP FOR THE DAY:</p>\n<p>Display verbs for NPCs:</p>\n<ul>\n<li>Remove <strong>Take</strong></li>\n<li>Add <strong>Speak to</strong></li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30231976-10b2417a-94b3-11e7-87eb-b3605b0a4c02.png\" alt=\"image\"></p>\n<p>NOTE: ConvLib does this for you.</p>\n\n",
      "PostDate": "2017-09-08T21:31:46.2182781Z",
      "LastEditDate": "2017-09-09T06:46:03.9357937Z",
      "link": null
    },
    {
      "PostId": "c1bd242d-9db5-4f7e-b3ff-d4b759528155",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "# Part 6 (ConvLib (continued some more))\r\n\r\n### Setting up a Consultable obect\r\n\r\n<details><summary>Click here to view Part 6</summary>\r\n\r\n\r\n#### Create a guide, and make it **Consultable**:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30233951-bf110200-94be-11e7-9695-049c3c75282b.png)\r\n\r\n\r\n#### Add a topic object in it (just like you did in the previous steps), and uncheck **Automatically hide after showing** so the topics won't 'disappear' once they've been accessed:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30234016-3a3be8b4-94bf-11e7-9703-2be9453ae207.png)\r\n\r\n\r\n**(I've been adding ```JS.scrollToEnd``` to the end of all my scripts that utilize ```ShowMenu``` (and, in turn, ```ClearMenu```), but not all of the time.  Most of the time, it lines everything up the way I like it, but, if the menu is too long, it will scroll down past ALL of the outputted text.)**\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30234049-7ba227e6-94bf-11e7-88fe-748e5f2e95a0.png)\r\n\r\n\r\n#### Don't forget to add your topic's alias!  (Fix your display verbs, too.  Add 'Consult' and remove 'Take' if applicable.)\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30234088-b1d7b682-94bf-11e7-9e3d-130dae6ab03a.png)\r\n\r\n\r\n---\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30234127-eea30918-94bf-11e7-9a8b-123f13460717.png)\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30234134-f8731b4a-94bf-11e7-876d-a7f54873fa6c.png)\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30234138-0014ca38-94c0-11e7-9354-58c81f731487.png)\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<h1>Part 6 (ConvLib (continued some more))</h1>\n<h3>Setting up a Consultable obect</h3>\n<details><summary>Click here to view Part 6</summary>\n<h4>Create a guide, and make it <strong>Consultable</strong>:</h4>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30233951-bf110200-94be-11e7-9695-049c3c75282b.png\" alt=\"image\"></p>\n<h4>Add a topic object in it (just like you did in the previous steps), and uncheck <strong>Automatically hide after showing</strong> so the topics won't 'disappear' once they've been accessed:</h4>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30234016-3a3be8b4-94bf-11e7-9703-2be9453ae207.png\" alt=\"image\"></p>\n<p><strong>(I've been adding <code>JS.scrollToEnd</code> to the end of all my scripts that utilize <code>ShowMenu</code> (and, in turn, <code>ClearMenu</code>), but not all of the time.  Most of the time, it lines everything up the way I like it, but, if the menu is too long, it will scroll down past ALL of the outputted text.)</strong></p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30234049-7ba227e6-94bf-11e7-88fe-748e5f2e95a0.png\" alt=\"image\"></p>\n<h4>Don't forget to add your topic's alias!  (Fix your display verbs, too.  Add 'Consult' and remove 'Take' if applicable.)</h4>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30234088-b1d7b682-94bf-11e7-9e3d-130dae6ab03a.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30234127-eea30918-94bf-11e7-9a8b-123f13460717.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30234134-f8731b4a-94bf-11e7-876d-a7f54873fa6c.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30234138-0014ca38-94c0-11e7-9354-58c81f731487.png\" alt=\"image\"></p>\n</details>\n\n",
      "PostDate": "2017-09-08T23:06:08.5970113Z",
      "LastEditDate": "2017-09-09T06:41:14.7485467Z",
      "link": null
    },
    {
      "PostId": "583499bd-f854-4b35-a7a1-76733996d5a6",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That thar be sum kinda splannin. Nice job KV. Check's in the mail!",
      "EditableFormat": "markdown",
      "HTML": "<p>That thar be sum kinda splannin. Nice job KV. Check's in the mail!</p>\n\n",
      "PostDate": "2017-09-09T02:27:27.4009844Z",
      "LastEditDate": "2017-09-09T02:27:54.3387906Z",
      "link": null
    },
    {
      "PostId": "bd8de71e-4887-44de-90b0-cf0edba26745",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've used this for the last year.\r\n```\r\nif (ListCount(Orc Guard.thingstosay) = 0) {\r\n  msg (\"\\\"Thats all I have for now.\\\"\")\r\n}\r\nelse {\r\n  n = GetRandomInt (0, ListCount(Orc Guard.thingstosay) - 1)\r\n  msg (\"The Orc says, \" + StringListItem(Orc Guard.thingstosay, n))\r\n  list remove (Orc Guard.thingstosay, StringListItem(Orc Guard.thingstosay, n))\r\n}\r\n```\r\n\r\nIt randomly pick from string list each time you \"Speak to\" the orc guard. It removes each response until the list is empty, then will only respond \"That's all I have for now.\" then I can add new responses if the player discovers other things in the game. \r\n\r\nOr I can give subtle hints about things to discover. \r\n\r\nIt has been awhile but one of the other members gave me this piece of code. (Don't remember who.) But thanks if they are reading this. ;)\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I've used this for the last year.</p>\n<pre><code>if (ListCount(Orc Guard.thingstosay) = 0) {\n  msg (\"\\\"Thats all I have for now.\\\"\")\n}\nelse {\n  n = GetRandomInt (0, ListCount(Orc Guard.thingstosay) - 1)\n  msg (\"The Orc says, \" + StringListItem(Orc Guard.thingstosay, n))\n  list remove (Orc Guard.thingstosay, StringListItem(Orc Guard.thingstosay, n))\n}\n</code></pre>\n<p>It randomly pick from string list each time you \"Speak to\" the orc guard. It removes each response until the list is empty, then will only respond \"That's all I have for now.\" then I can add new responses if the player discovers other things in the game.</p>\n<p>Or I can give subtle hints about things to discover.</p>\n<p>It has been awhile but one of the other members gave me this piece of code. (Don't remember who.) But thanks if they are reading this. ;)</p>\n\n",
      "PostDate": "2017-09-09T02:46:06.6331429Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2de77102-1c58-4fc0-a763-c05ed764ed43",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**TODO:**\r\n\r\nMake Pixie's **Ask the room about** script work with this.\r\n\r\n<details><summary>Click here to see a bumbling attempt that DOES NOT WORK.</summary>\r\n\r\n**Command pattern:**\r\n```ask about #text#```\r\n\r\n***Script***\r\n```\r\nnpcs = NewObjectList()\r\nopts = NewStringDictionary()\r\nforeach (o, GetDirectChildren(player.parent)) {\r\n  if ((HasTopics(o)) or HasAttribute(o, \"ask\")) {\r\n    list add (npcs, o)\r\n    dictionary add (opts, o.name, GetDisplayAlias(o))\r\n  }\r\n}\r\nif (ListCount(npcs) = 0) {\r\n  msg (\"You can ask, but no one is here to tell you anything.\")\r\n}\r\nelse if (ListCount(npcs) = 1) {\r\n  if (HasAttribute(GetObject(ObjectListItem(npcs, 0))), \"ask\") {\r\n    DoAskTell (ObjectListItem(npcs, 0), text, \"ask\", \"askdefault\", \"DefaultAsk\")\r\n  }\r\n  else if (HasTopics(ObjectListItem(npcs, 0))) {\r\n    // TODO: Learn how to trigger the responses like Pixie does it.\r\n    msg (\"This part of the command is not set up yet.\")\r\n  }\r\n}\r\nelse {\r\n  game.npcs = npcs\r\n  game.askabouttext = text\r\n  ShowMenu (\"Ask who?\", opts, true) {\r\n    if (not result = null) {\r\n      o = GetObject(result)\r\n      if (HasAttribute(o, \"ask\")) {\r\n        DoAskTell (o, game.askabouttext, \"ask\", \"askdefault\", \"DefaultAsk\")\r\n      }\r\n      else if (HasTopics(o)) {\r\n        // TODO Learn how to trigger the responses like Pixie does it.\r\n        msg (\"This part of the command is not set up yet.\")\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n![image](https://user-images.githubusercontent.com/30656341/30236664-1816642e-94e4-11e7-92ae-7c00a470e7cb.png)\r\n\r\n\r\n---\r\nIt works for Rondo (who has the old setup, not ConvLib):\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30236674-57305ba6-94e4-11e7-9fbe-93c075e4d507.png)\r\n\r\n\r\n---\r\n### ALSO\r\n\r\nYou can't directly ASK NPC ABOUT a topic you set up with ConvLib.  You have to SPEAK TO THE NPC first and work from the menu.\r\n\r\nThis is to keep everything all tidy, you know.  Pix has this set up to keep up with every topic that's been discussed and all sorts of other things.\r\n\r\n\r\nSo...\r\n\r\n</details>\r\n\r\n---\r\nIgnore this post.\r\n\r\n I'm abandoning adding the ConvLib NPCs to this script.  It would most likely mess everything up if the player asked a question that wasn't supposed to be a topic yet.",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>TODO:</strong></p>\n<p>Make Pixie's <strong>Ask the room about</strong> script work with this.</p>\n<details><summary>Click here to see a bumbling attempt that DOES NOT WORK.</summary>\n<p><strong>Command pattern:</strong><br>\n<code>ask about #text#</code></p>\n<p><strong><em>Script</em></strong></p>\n<pre><code>npcs = NewObjectList()\nopts = NewStringDictionary()\nforeach (o, GetDirectChildren(player.parent)) {\n  if ((HasTopics(o)) or HasAttribute(o, \"ask\")) {\n    list add (npcs, o)\n    dictionary add (opts, o.name, GetDisplayAlias(o))\n  }\n}\nif (ListCount(npcs) = 0) {\n  msg (\"You can ask, but no one is here to tell you anything.\")\n}\nelse if (ListCount(npcs) = 1) {\n  if (HasAttribute(GetObject(ObjectListItem(npcs, 0))), \"ask\") {\n    DoAskTell (ObjectListItem(npcs, 0), text, \"ask\", \"askdefault\", \"DefaultAsk\")\n  }\n  else if (HasTopics(ObjectListItem(npcs, 0))) {\n    // TODO: Learn how to trigger the responses like Pixie does it.\n    msg (\"This part of the command is not set up yet.\")\n  }\n}\nelse {\n  game.npcs = npcs\n  game.askabouttext = text\n  ShowMenu (\"Ask who?\", opts, true) {\n    if (not result = null) {\n      o = GetObject(result)\n      if (HasAttribute(o, \"ask\")) {\n        DoAskTell (o, game.askabouttext, \"ask\", \"askdefault\", \"DefaultAsk\")\n      }\n      else if (HasTopics(o)) {\n        // TODO Learn how to trigger the responses like Pixie does it.\n        msg (\"This part of the command is not set up yet.\")\n      }\n    }\n  }\n}\n</code></pre>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30236664-1816642e-94e4-11e7-92ae-7c00a470e7cb.png\" alt=\"image\"></p>\n<hr>\n<p>It works for Rondo (who has the old setup, not ConvLib):</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30236674-57305ba6-94e4-11e7-9fbe-93c075e4d507.png\" alt=\"image\"></p>\n<hr>\n<h3>ALSO</h3>\n<p>You can't directly ASK NPC ABOUT a topic you set up with ConvLib.  You have to SPEAK TO THE NPC first and work from the menu.</p>\n<p>This is to keep everything all tidy, you know.  Pix has this set up to keep up with every topic that's been discussed and all sorts of other things.</p>\n<p>So...</p>\n</details>\n<hr>\n<p>Ignore this post.</p>\n<p>I'm abandoning adding the ConvLib NPCs to this script.  It would most likely mess everything up if the player asked a question that wasn't supposed to be a topic yet.</p>\n\n",
      "PostDate": "2017-09-09T03:03:06.4990105Z",
      "LastEditDate": "2017-09-09T06:48:25.192676Z",
      "link": null
    },
    {
      "PostId": "ab9a440c-f388-41a3-bea7-44e42bb9dd54",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ Forgewright\r\n\r\nThank you, thank you.\r\n\r\nI'm just copying and pasting, though.  Everything was already documented in different places... The forum, the docs, Pixie's wiki page...\r\n\r\n\r\n---\r\nIn related news: I'm \"borrowing\" your ```thingstosay``` script, if you don't mind.\r\n\r\n\r\n...and I've got a pretty sweet hints system cooked up, if you're interested in such things.",
      "EditableFormat": "markdown",
      "HTML": "<p>@ Forgewright</p>\n<p>Thank you, thank you.</p>\n<p>I'm just copying and pasting, though.  Everything was already documented in different places... The forum, the docs, Pixie's wiki page...</p>\n<hr>\n<p>In related news: I'm \"borrowing\" your <code>thingstosay</code> script, if you don't mind.</p>\n<p>...and I've got a pretty sweet hints system cooked up, if you're interested in such things.</p>\n\n",
      "PostDate": "2017-09-09T03:19:12.965958Z",
      "LastEditDate": "2017-09-09T06:48:53.7584477Z",
      "link": null
    },
    {
      "PostId": "2f9c8c75-7ab4-4ad2-9bc9-831cbc2d5578",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "# Part 7 (ConvLib -  Advanced pt 1 of 2)\r\n\r\n\r\n<details><summary>Click here to view Part 7</summary>\r\n\r\n#### Set up an attribute on **game**. Name it **showreactions**, make it a Boolean, and set it to **true**.\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30236802-2b8e5788-94e8-11e7-8fdc-a1ce7136e34e.png)\r\n\r\n---\r\n##### EXCERPT FROM PIXIE'S WIKI:\r\n\r\n---\r\n#### You should now find that characters have a Reactions tab, with a big text area.\r\n\r\nEach character can have a set of reactions. Each reaction will fire only once in a game, and will fire the first time the reaction's condition is true AND the character is in the same room as the player. A character will only ever have one reaction in any turn.\r\n\r\nEach reaction is described by four or more lines, composed thus:\r\n\r\nThe first line must be a ```@``` on a line on its own; this indicates the start of the reaction.\r\n\r\nThe second line is the name of the reaction. You can give a set of reactions the same name; only one will ever be used.\r\n\r\nThird is the condition. The condition should be standard Quest code that will evaluate to true or false (you can use \"this\" as normal to refer to the character).\r\n\r\nThe four and all subsequent lines are \"what will happen\". You can use these to change the game world (to a limited extent) and to display text. These lines can be of various types, depending on the first character, however, most text (anything beginning with a letter or number) will be printed directly to screen.\r\n\r\n\r\n---\r\n\r\n#### So, let's apply that:\r\n![image](https://user-images.githubusercontent.com/30656341/30237188-72ae7094-94f2-11e7-91dc-8444e16ccbf3.png)\r\n\r\nRondo will say 'Hi...' the first turn he's in the room with the player, and he'll say the next bit when the player is carrying the beer for the first time.\r\n\r\n##### **NOTE: I had to actually create the beer object in the editor, rather than on the fly like it was in the last example, or the turn script checking for the beer's location would throw an error every turn.**\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30237196-95afcdd6-94f2-11e7-84e8-9b07e21d7977.png)\r\n\r\n---\r\n\r\n#### Notice how the greeting didn't fire on the first turn even though we were in the room with Rondo?\r\n\r\n(Also notice I put the line reading ```&nbsp;``` before his line of dialogue?  A ```<br/>``` didn't work.  That did, though.)\r\n\r\n---\r\n\r\nPixie will probably show us a better way, but I turned the ```ReactionsTurnScript``` into a function (called ```ReactionsFunction```), then I call that function from the ```ReactionsTurnScript``` (from which I cut and pasted the code into ```ReactionsFunction```; am I being hard to follow? sorry if so).  I also call ```ReactionsFunction``` **AFTER** entering the first room for the first time.\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30237018-08508358-94ee-11e7-80ef-32658b3a5a8b.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30237002-b092133e-94ed-11e7-9d54-b29de3dd5012.png)\r\n\r\n\r\n#### Now, Rondo says 'Hi' when play begins. \r\n\r\n(NOTE: You may not want this to happen for numerous reasons, but I did in this instance, so I included it.)\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30237199-ab54088c-94f2-11e7-9b6d-b8b7edfa78d3.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30237437-81805600-94f7-11e7-80d8-863a80563f0f.png)\r\n\r\n\r\n---\r\n#### More from Pixie's wiki\r\n\r\nIf the line starts ```~``` then the rest of the line should be the name of another reaction for this character; that reaction will be removed along with this one.\r\n\r\nIf the line starts with &, then a script is run. The line should be in the format:\r\n\r\n```\r\n& mary myscript\r\n```\r\n\r\nYou can use \"this\" to stand in for the character the reaction is attached to.\r\n\r\n```\r\n& this myscript\r\n```\r\n\r\nIf the line starts with =, + or - then the given attribute is set to, incremented or decremented by the given amount. As before, \"this\" is supported. You can use strings with ```=```, but ```+``` and ```-``` are restricted to integers.\r\n\r\n\r\n---\r\n#### Okay, so let's give the dancer a name once you've asked her about herself...\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30237124-ddd77b2e-94f0-11e7-8903-b4b49ad9bc48.png)\r\n![image](https://user-images.githubusercontent.com/30656341/30237156-a52b2982-94f1-11e7-89e7-4bfb3e35be22.png)\r\n\r\n---\r\n#### And, just for giggles, lets add a reaction from Ralph (since he's had nothing to do so far):\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30237230-1f62887a-94f3-11e7-86c3-ff0ead195574.png)\r\n\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30237235-37ed9ce0-94f3-11e7-8f20-49384239524a.png)\r\n\r\n\r\n---\r\n## NEXT UP:  Part 8 - FINALE\r\n\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<h1>Part 7 (ConvLib -  Advanced pt 1 of 2)</h1>\n<details><summary>Click here to view Part 7</summary>\n<h4>Set up an attribute on <strong>game</strong>. Name it <strong>showreactions</strong>, make it a Boolean, and set it to <strong>true</strong>.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30236802-2b8e5788-94e8-11e7-8fdc-a1ce7136e34e.png\" alt=\"image\"></p>\n<hr>\n<h5>EXCERPT FROM PIXIE'S WIKI:</h5>\n<hr>\n<h4>You should now find that characters have a Reactions tab, with a big text area.</h4>\n<p>Each character can have a set of reactions. Each reaction will fire only once in a game, and will fire the first time the reaction's condition is true AND the character is in the same room as the player. A character will only ever have one reaction in any turn.</p>\n<p>Each reaction is described by four or more lines, composed thus:</p>\n<p>The first line must be a <code>@</code> on a line on its own; this indicates the start of the reaction.</p>\n<p>The second line is the name of the reaction. You can give a set of reactions the same name; only one will ever be used.</p>\n<p>Third is the condition. The condition should be standard Quest code that will evaluate to true or false (you can use \"this\" as normal to refer to the character).</p>\n<p>The four and all subsequent lines are \"what will happen\". You can use these to change the game world (to a limited extent) and to display text. These lines can be of various types, depending on the first character, however, most text (anything beginning with a letter or number) will be printed directly to screen.</p>\n<hr>\n<h4>So, let's apply that:</h4>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30237188-72ae7094-94f2-11e7-91dc-8444e16ccbf3.png\" alt=\"image\"></p>\n<p>Rondo will say 'Hi...' the first turn he's in the room with the player, and he'll say the next bit when the player is carrying the beer for the first time.</p>\n<h5><strong>NOTE: I had to actually create the beer object in the editor, rather than on the fly like it was in the last example, or the turn script checking for the beer's location would throw an error every turn.</strong></h5>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30237196-95afcdd6-94f2-11e7-84e8-9b07e21d7977.png\" alt=\"image\"></p>\n<hr>\n<h4>Notice how the greeting didn't fire on the first turn even though we were in the room with Rondo?</h4>\n<p>(Also notice I put the line reading <code>&amp;nbsp;</code> before his line of dialogue?  A <code>&lt;br/&gt;</code> didn't work.  That did, though.)</p>\n<hr>\n<p>Pixie will probably show us a better way, but I turned the <code>ReactionsTurnScript</code> into a function (called <code>ReactionsFunction</code>), then I call that function from the <code>ReactionsTurnScript</code> (from which I cut and pasted the code into <code>ReactionsFunction</code>; am I being hard to follow? sorry if so).  I also call <code>ReactionsFunction</code> <strong>AFTER</strong> entering the first room for the first time.</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30237018-08508358-94ee-11e7-80ef-32658b3a5a8b.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30237002-b092133e-94ed-11e7-9d54-b29de3dd5012.png\" alt=\"image\"></p>\n<h4>Now, Rondo says 'Hi' when play begins.</h4>\n<p>(NOTE: You may not want this to happen for numerous reasons, but I did in this instance, so I included it.)</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30237199-ab54088c-94f2-11e7-9b6d-b8b7edfa78d3.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30237437-81805600-94f7-11e7-80d8-863a80563f0f.png\" alt=\"image\"></p>\n<hr>\n<h4>More from Pixie's wiki</h4>\n<p>If the line starts <code>~</code> then the rest of the line should be the name of another reaction for this character; that reaction will be removed along with this one.</p>\n<p>If the line starts with &amp;, then a script is run. The line should be in the format:</p>\n<pre><code>&amp; mary myscript\n</code></pre>\n<p>You can use \"this\" to stand in for the character the reaction is attached to.</p>\n<pre><code>&amp; this myscript\n</code></pre>\n<p>If the line starts with =, + or - then the given attribute is set to, incremented or decremented by the given amount. As before, \"this\" is supported. You can use strings with <code>=</code>, but <code>+</code> and <code>-</code> are restricted to integers.</p>\n<hr>\n<h4>Okay, so let's give the dancer a name once you've asked her about herself...</h4>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30237124-ddd77b2e-94f0-11e7-8903-b4b49ad9bc48.png\" alt=\"image\"><br>\n<img src=\"https://user-images.githubusercontent.com/30656341/30237156-a52b2982-94f1-11e7-89e7-4bfb3e35be22.png\" alt=\"image\"></p>\n<hr>\n<h4>And, just for giggles, lets add a reaction from Ralph (since he's had nothing to do so far):</h4>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30237230-1f62887a-94f3-11e7-86c3-ff0ead195574.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30237235-37ed9ce0-94f3-11e7-8f20-49384239524a.png\" alt=\"image\"></p>\n<hr>\n<h2>NEXT UP:  Part 8 - FINALE</h2>\n</details>\n\n",
      "PostDate": "2017-09-09T05:42:03.819876Z",
      "LastEditDate": "2017-09-09T06:42:00.7214717Z",
      "link": null
    },
    {
      "PostId": "d056850b-f9dc-4a9e-ba5e-5ebb8a7d9303",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "# Part 8 (ConvLib - Advanced Part 2 of 2)\r\n\r\n<details><summary>Click here to view Part 8</summary>\r\n\r\n\r\n#### Set up a **Starting Conversation** object on Ralph:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30237509-314b9a30-94f9-11e7-8fb6-2468cd278265.png)\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30237505-287714ca-94f9-11e7-838c-8539c93febb4.png)\r\n\r\n---\r\n\r\n#### Now, set up a Reaction on Ralph that calls the script created in the script we just set up on the Starting Conversation\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30237516-691c035a-94f9-11e7-8c9d-d439ed935bdd.png)\r\n\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30237527-aa58196c-94f9-11e7-818e-ab524092c467.png)\r\n\r\n\r\n---\r\n## Here's the entire excerpt from the final section of Pixie's wiki page:\r\n\r\nYou should now find that characters have a Reactions tab, with a big text area.\r\n\r\nEach character can have a set of reactions. Each reaction will fire only once in a game, and will fire the first time the reaction's condition is true AND the character is in the same room as the player. A character will only ever have one reaction in any turn.\r\n\r\nEach reaction is described by four or more lines, composed thus:\r\n\r\nThe first line must be a @ on a line on its own; this indicates the start of the reaction.\r\n\r\nThe second line is the name of the reaction. You can give a set of reactions the same name; only one will ever be used.\r\n\r\nThird is the condition. The condition should be standard Quest code that will evaluate to true or false (you can use \"this\" as normal to refer to the character).\r\n\r\nThe four and all subsequent lines are \"what will happen\". You can use these to change the game world (to a limited extent) and to display text. These lines can be of various types, depending on the first character, however, most text (anything beginning with a letter or number) will be printed directly to screen.\r\n\r\nIf the line starts ~ then the rest of the line should be the name of another reaction for this character; that reaction will be removed along with this one.\r\n\r\nIf the line starts with &, then a script is run. The line should be in the format:\r\n\r\n```\r\n& mary excitedscript\r\n```\r\n\r\nYou can use \"this\" to stand in for the character the reaction is attached to.\r\n\r\n```\r\n& this excitedscript\r\n```\r\n\r\nIf the line starts with =, + or - then the given attribute is set to, incremented or decremented by the given amount. As before, \"this\" is supported. You can use strings with =, but + and - are restricted to ints.\r\n\r\nHere is an example, with five reactions. The first will fire immediately, and is just text. The second will fire when the player is wearing a plain hat, and the third when wearing a fancy hat. However, the third will delete the second, so if the plain puts on the fancy hat first, the second reaction will never be seen. The last two have the same name, so only one will ever fire.\r\n\r\n```\r\n@\r\ngreeting\r\ntrue\r\n'Hi!' says Mary\r\n\r\n@\r\nplain hat\r\n# ghhjhj\r\nplain_hat.worn\r\n'Oh, you are wearing a hat,' says Mary.\r\n& this testscript\r\n\r\n@\r\nfancy hat\r\nfancy_hat.worn\r\n'Wow, what a fancy hat,' says Mary.\r\n~ plain hat\r\n\r\n@\r\ntrophy\r\nplayer.won_competition and trophy.parent = player\r\n'Cool trophy,' says Mary.\r\n\r\n@\r\ntrophy\r\nplayer.won_competition\r\n'Hey I heard you won the completion,' says Mary.\r\n= this alias \"Happy Mary\"\r\n+ Mary happiness 5\r\n```\r\n\r\n\r\n---\r\n### Other things from the ConvLib guide that I didn't use here (just for the sake of completion):\r\n\r\n#### Consultables\r\n\r\nA new feature is the \"consultable\" type. Use this for encyclopedias and computers that the player can use to look stuff up on.\r\n\r\nTopics are set up exactly as with conversations. In this case you probably want to untick the \"Automatically hide\" checkbox for each one.\r\n\r\nAt its simplest, that is all there is to it, however, you might want to change the \"consult\" script to fit your system, for example to check if the computer is turned on and connected to the internet.\r\n\r\nGo to the object's Attributes tab, and find consult (it will be in grey). Click on Make editable copy, and then you can modify it as you wish.\r\n\r\nThe important bit is this line, which will handle the topics:\r\n\r\n```\r\n  Converse(this, \"Consult \")\r\n```\r\n\r\nHowever, you may want to test first that the computer is switched on for example (the keyword this refers to the object the script is attached to, by the way).\r\n\r\n```\r\n  if (not this.switchedon) {\r\n    msg(\"You wonder if you should turn on the computer to use it.\")\r\n  }\r\n  else {\r\n    Converse(this, \"Consult \")\r\n  }\r\n```\r\n\r\n#### Display and Hidden\r\n\r\nBehind the scenes, each topic has two flags controlling whether it will appear in the menu list or not, display and hidden. The topic will only get show if display is true and hidden is false. Any other combination and it will not appear.\r\n\r\nWhat this means is that if you set a topic to be hidden, and later set it to be displayed, the hidden will take priority, and it will stay hidden.\r\n\r\nTo get a topic to display, use the ShowTopic function. To hide it, use HideTopic.\r\n\r\n```\r\n  ShowTopic(topic)\r\n```\r\n\r\n```\r\n  HideTopic(topic) \r\n````\r\n\r\nHiding topics is useful when a player's actions stops that being an option. For example, if the player has to choose between two option, each option should hide the other one in the script section.\r\n\r\n#### Tracking status\r\n\r\nSetting something to be a Character will automatically give it an integer attribute called state, set to zero. This is not used by the conversation system, but can be useful for you when you are tracking the state of a character.\r\n\r\nEvery topic has an integer attribute called count, set to zero. This will be increased by one each time the topic is seen, so gives a quick way to check if the player has seen it yet.\r\n\r\n#### Testing\r\n\r\nThere is a function called TopicTest that will do some basic testing. You can add it to game.start to check your game; it will flag any obvious issues.\r\n\r\n#### Topics without aliases\r\n\r\nTopics that try to display new topics that do not exist\r\n\r\nDelete it from game.start before publishing!\r\n\r\n#### Alternative Topic Placement\r\n\r\nRather than having the topics inside the character, you can create a new room, and put them all in there. The new room must be named exactly the same, but with \"_topics\" appended. You may find this more convenient, especially if the character is carrying several items anyway.\r\n\r\nNote that you cannot have some topics in the character and some in the topics object. However, you can use one for one character and the other for another.\r\n\r\n#### Topics That Expire\r\n\r\nThere is a time and place for everything, and what may be a witty retort on moment is a sad and bitter comment ten minutes later. To have topics expire, you must set up a turn script, and have it call IncConvTime (no parameters).\r\n\r\nFor topics, tick the checkbox to have it expire, and then put the number of turns it will be until it disappears.\r\n\r\n#### More customisation\r\n\r\nVarious functions and templates can be overriden (i.e., you create your own version of them in your game), to further customise the library.\r\n\r\nThese are the dynamic templates it uses:\r\n\r\n```\r\n<dynamictemplate name=\"NoSpeakTopics\">\"You wonder what you can talk to \" + GetDisplayName(object) + \" about...\"</dynamictemplate>\r\n\t\r\n```\r\n\r\n```\r\n<dynamictemplate name=\"NoConsultTopics\">\"You wonder what you can look up with \" + GetDisplayName(object) + \".\"</dynamictemplate>\r\n```\r\n\r\n\r\nAddExtraTopics You can use this as a way to add extra topics, for example if you want all your characters to have some standard topics, add them this way.\r\n\r\n```\r\n  <function name=\"AddExtraTopics\" parameters=\"c, topics\">\r\n  </function>\r\n```\r\n\r\nAfterTopicEvent Override this to have something happen after each exchange.\r\n\r\n```\r\n  <function name=\"AfterTopicEvent\">\r\n  </function>\r\n```\r\n\r\n```P``` Generally I recommend meaningful names for functions; in this instance I am copying the name of a print function in Ruby.\r\n\r\nThis gets called only when the action is successful; for text that is part of the narrative. You can override this in your own code to flag that a command was successful or to display narrative text differently to meta text.\r\n\r\n```\r\n  <function name=\"P\" parameters=\"s\">\r\n    msg(s)\r\n  </function>\r\n```\r\n\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<h1>Part 8 (ConvLib - Advanced Part 2 of 2)</h1>\n<details><summary>Click here to view Part 8</summary>\n<h4>Set up a <strong>Starting Conversation</strong> object on Ralph:</h4>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30237509-314b9a30-94f9-11e7-8fb6-2468cd278265.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30237505-287714ca-94f9-11e7-838c-8539c93febb4.png\" alt=\"image\"></p>\n<hr>\n<h4>Now, set up a Reaction on Ralph that calls the script created in the script we just set up on the Starting Conversation</h4>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30237516-691c035a-94f9-11e7-8c9d-d439ed935bdd.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30237527-aa58196c-94f9-11e7-818e-ab524092c467.png\" alt=\"image\"></p>\n<hr>\n<h2>Here's the entire excerpt from the final section of Pixie's wiki page:</h2>\n<p>You should now find that characters have a Reactions tab, with a big text area.</p>\n<p>Each character can have a set of reactions. Each reaction will fire only once in a game, and will fire the first time the reaction's condition is true AND the character is in the same room as the player. A character will only ever have one reaction in any turn.</p>\n<p>Each reaction is described by four or more lines, composed thus:</p>\n<p>The first line must be a @ on a line on its own; this indicates the start of the reaction.</p>\n<p>The second line is the name of the reaction. You can give a set of reactions the same name; only one will ever be used.</p>\n<p>Third is the condition. The condition should be standard Quest code that will evaluate to true or false (you can use \"this\" as normal to refer to the character).</p>\n<p>The four and all subsequent lines are \"what will happen\". You can use these to change the game world (to a limited extent) and to display text. These lines can be of various types, depending on the first character, however, most text (anything beginning with a letter or number) will be printed directly to screen.</p>\n<p>If the line starts ~ then the rest of the line should be the name of another reaction for this character; that reaction will be removed along with this one.</p>\n<p>If the line starts with &amp;, then a script is run. The line should be in the format:</p>\n<pre><code>&amp; mary excitedscript\n</code></pre>\n<p>You can use \"this\" to stand in for the character the reaction is attached to.</p>\n<pre><code>&amp; this excitedscript\n</code></pre>\n<p>If the line starts with =, + or - then the given attribute is set to, incremented or decremented by the given amount. As before, \"this\" is supported. You can use strings with =, but + and - are restricted to ints.</p>\n<p>Here is an example, with five reactions. The first will fire immediately, and is just text. The second will fire when the player is wearing a plain hat, and the third when wearing a fancy hat. However, the third will delete the second, so if the plain puts on the fancy hat first, the second reaction will never be seen. The last two have the same name, so only one will ever fire.</p>\n<pre><code>@\ngreeting\ntrue\n'Hi!' says Mary\n\n@\nplain hat\n# ghhjhj\nplain_hat.worn\n'Oh, you are wearing a hat,' says Mary.\n&amp; this testscript\n\n@\nfancy hat\nfancy_hat.worn\n'Wow, what a fancy hat,' says Mary.\n~ plain hat\n\n@\ntrophy\nplayer.won_competition and trophy.parent = player\n'Cool trophy,' says Mary.\n\n@\ntrophy\nplayer.won_competition\n'Hey I heard you won the completion,' says Mary.\n= this alias \"Happy Mary\"\n+ Mary happiness 5\n</code></pre>\n<hr>\n<h3>Other things from the ConvLib guide that I didn't use here (just for the sake of completion):</h3>\n<h4>Consultables</h4>\n<p>A new feature is the \"consultable\" type. Use this for encyclopedias and computers that the player can use to look stuff up on.</p>\n<p>Topics are set up exactly as with conversations. In this case you probably want to untick the \"Automatically hide\" checkbox for each one.</p>\n<p>At its simplest, that is all there is to it, however, you might want to change the \"consult\" script to fit your system, for example to check if the computer is turned on and connected to the internet.</p>\n<p>Go to the object's Attributes tab, and find consult (it will be in grey). Click on Make editable copy, and then you can modify it as you wish.</p>\n<p>The important bit is this line, which will handle the topics:</p>\n<pre><code>  Converse(this, \"Consult \")\n</code></pre>\n<p>However, you may want to test first that the computer is switched on for example (the keyword this refers to the object the script is attached to, by the way).</p>\n<pre><code>  if (not this.switchedon) {\n    msg(\"You wonder if you should turn on the computer to use it.\")\n  }\n  else {\n    Converse(this, \"Consult \")\n  }\n</code></pre>\n<h4>Display and Hidden</h4>\n<p>Behind the scenes, each topic has two flags controlling whether it will appear in the menu list or not, display and hidden. The topic will only get show if display is true and hidden is false. Any other combination and it will not appear.</p>\n<p>What this means is that if you set a topic to be hidden, and later set it to be displayed, the hidden will take priority, and it will stay hidden.</p>\n<p>To get a topic to display, use the ShowTopic function. To hide it, use HideTopic.</p>\n<pre><code>  ShowTopic(topic)\n</code></pre>\n<pre><code>  HideTopic(topic) \n</code></pre>\n<p>Hiding topics is useful when a player's actions stops that being an option. For example, if the player has to choose between two option, each option should hide the other one in the script section.</p>\n<h4>Tracking status</h4>\n<p>Setting something to be a Character will automatically give it an integer attribute called state, set to zero. This is not used by the conversation system, but can be useful for you when you are tracking the state of a character.</p>\n<p>Every topic has an integer attribute called count, set to zero. This will be increased by one each time the topic is seen, so gives a quick way to check if the player has seen it yet.</p>\n<h4>Testing</h4>\n<p>There is a function called TopicTest that will do some basic testing. You can add it to game.start to check your game; it will flag any obvious issues.</p>\n<h4>Topics without aliases</h4>\n<p>Topics that try to display new topics that do not exist</p>\n<p>Delete it from game.start before publishing!</p>\n<h4>Alternative Topic Placement</h4>\n<p>Rather than having the topics inside the character, you can create a new room, and put them all in there. The new room must be named exactly the same, but with \"_topics\" appended. You may find this more convenient, especially if the character is carrying several items anyway.</p>\n<p>Note that you cannot have some topics in the character and some in the topics object. However, you can use one for one character and the other for another.</p>\n<h4>Topics That Expire</h4>\n<p>There is a time and place for everything, and what may be a witty retort on moment is a sad and bitter comment ten minutes later. To have topics expire, you must set up a turn script, and have it call IncConvTime (no parameters).</p>\n<p>For topics, tick the checkbox to have it expire, and then put the number of turns it will be until it disappears.</p>\n<h4>More customisation</h4>\n<p>Various functions and templates can be overriden (i.e., you create your own version of them in your game), to further customise the library.</p>\n<p>These are the dynamic templates it uses:</p>\n<pre><code>&lt;dynamictemplate name=\"NoSpeakTopics\"&gt;\"You wonder what you can talk to \" + GetDisplayName(object) + \" about...\"&lt;/dynamictemplate&gt;\n\t\n</code></pre>\n<pre><code>&lt;dynamictemplate name=\"NoConsultTopics\"&gt;\"You wonder what you can look up with \" + GetDisplayName(object) + \".\"&lt;/dynamictemplate&gt;\n</code></pre>\n<p>AddExtraTopics You can use this as a way to add extra topics, for example if you want all your characters to have some standard topics, add them this way.</p>\n<pre><code>  &lt;function name=\"AddExtraTopics\" parameters=\"c, topics\"&gt;\n  &lt;/function&gt;\n</code></pre>\n<p>AfterTopicEvent Override this to have something happen after each exchange.</p>\n<pre><code>  &lt;function name=\"AfterTopicEvent\"&gt;\n  &lt;/function&gt;\n</code></pre>\n<p><code>P</code> Generally I recommend meaningful names for functions; in this instance I am copying the name of a print function in Ruby.</p>\n<p>This gets called only when the action is successful; for text that is part of the narrative. You can override this in your own code to flag that a command was successful or to display narrative text differently to meta text.</p>\n<pre><code>  &lt;function name=\"P\" parameters=\"s\"&gt;\n    msg(s)\n  &lt;/function&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2017-09-09T06:04:19.3013096Z",
      "LastEditDate": "2017-09-09T06:42:27.1406483Z",
      "link": null
    },
    {
      "PostId": "862abbd7-9358-4122-8f70-a5847f1a5ab4",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "## NEXT UP\r\n\r\n#### Some errors I've made will most definitely be pointed out (and fixed), everyone else drops in and adds their own scripts to the mix<sup>1</sup>, and we learn even MORE awesome ways to handle conversations!\r\n\r\n\r\n**Footnote 1:** Every single script in this thread was taken from either the Quest documents, Pixie's Wiki, or from this forum anyway.  NONE OF THE SCRIPTS were written by me.  I only filled in the \"story's elements\".",
      "EditableFormat": "markdown",
      "HTML": "<h2>NEXT UP</h2>\n<h4>Some errors I've made will most definitely be pointed out (and fixed), everyone else drops in and adds their own scripts to the mix<sup>1</sup>, and we learn even MORE awesome ways to handle conversations!</h4>\n<p><strong>Footnote 1:</strong> Every single script in this thread was taken from either the Quest documents, Pixie's Wiki, or from this forum anyway.  NONE OF THE SCRIPTS were written by me.  I only filled in the \"story's elements\".</p>\n\n",
      "PostDate": "2017-09-09T06:08:09.6691295Z",
      "LastEditDate": "2017-09-09T06:49:11.2129814Z",
      "link": null
    },
    {
      "PostId": "928466bc-e224-4c1d-a812-e610becccb1b",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "### To set up a \"How are you\" command (flawed)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30350079-e3e435ec-97da-11e7-8549-d32c306e512b.png)\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30350189-5241dc06-97db-11e7-8537-923685268d06.png)\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30350446-407969a2-97dc-11e7-8623-9eecb39db8d3.png)\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30350514-9303e4cc-97dc-11e7-9c58-892880f64c57.png)\r\n\r\n\r\n---\r\n...but, \"How are you\" will be displayed on the menu if you set it up this way:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30350538-af8ad1b4-97dc-11e7-9306-6a67d2ecc9f4.png)\r\n\r\n---\r\nIf you don't want it to do that, check \"Disable automatically generated display verb list for this object\"\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30350563-d07e3442-97dc-11e7-8bb1-47d52703b349.png)\r\n\r\n\r\n---\r\n### NEXT UP: Little problems",
      "EditableFormat": "markdown",
      "HTML": "<h3>To set up a \"How are you\" command (flawed)</h3>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30350079-e3e435ec-97da-11e7-8549-d32c306e512b.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30350189-5241dc06-97db-11e7-8537-923685268d06.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30350446-407969a2-97dc-11e7-8623-9eecb39db8d3.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30350514-9303e4cc-97dc-11e7-9c58-892880f64c57.png\" alt=\"image\"></p>\n<hr>\n<p>...but, \"How are you\" will be displayed on the menu if you set it up this way:</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30350538-af8ad1b4-97dc-11e7-9306-6a67d2ecc9f4.png\" alt=\"image\"></p>\n<hr>\n<p>If you don't want it to do that, check \"Disable automatically generated display verb list for this object\"</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30350563-d07e3442-97dc-11e7-8bb1-47d52703b349.png\" alt=\"image\"></p>\n<hr>\n<h3>NEXT UP: Little problems</h3>\n\n",
      "PostDate": "2017-09-12T22:11:15.6756268Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0caa43ce-32cd-44f7-b476-bcd1d1959952",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You are in a room.\r\nYou can see KV.\r\n\r\n\\> how are you, kv?\r\nI can't see that. (how are you)\r\n\r\n\\> kv, how are you\r\nError running script: Error evaluating expression 'DynamicTemplate(defaulttemplate, object)': No template named 'DefaultTellTo'\r\n\r\n\\> kv, how are you?\r\nError running script: Error evaluating expression 'DynamicTemplate(defaulttemplate, object)': No template named 'DefaultTellTo'\r\n\r\n\\> how are you, kv\r\nI can't see that. (how are you)\r\n\r\n\\> how are you kv?\r\nI can't see that. (kv?)\r\n\r\n\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/30350784-d4640798-97dd-11e7-986b-b3e9d2f38afb.png)\r\n\r\n> kv, how are you?\r\nKV doesn't take orders from the likes of you.\r\n\r\n\\> how are you, kv?\r\nI can't see that. (how are you)\r\n\r\n\\> how are you, kv\r\nI can't see that. (how are you)\r\n\r\n\r\n---\r\nOkay...\r\n\r\nSo it wouldn't be easy to get around it that way...\r\n\r\nHow about we set up the verb with this pattern: ```how are you;how are you,```?\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30350872-3cc0ea90-97de-11e7-9a9c-66ec7bd01f3c.png)\r\n\r\nHrmm...  ```how are you, #object#```?\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30350872-3cc0ea90-97de-11e7-9a9c-66ec7bd01f3c.png)\r\n\r\n\r\n\r\nOkay, fine.  Let's go see what that's all about...\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30350916-6c8531f0-97de-11e7-9f08-f96d5789db81.png)\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30350940-933fa69a-97de-11e7-9831-2554da348098.png)\r\n\r\n\r\n---\r\nOkay, so any time we say an object's name with some text after that, which follows a comma (example: kv, how are you), Quest will think it's an 'Order/Tell to' command.\r\n\r\nSo, let's press COPY (at the top right) and play around a little.\r\n\r\nThis is the default script:\r\n\r\n```\r\nDoAskTell (object, text, \"tellto\", \"telltodefault\", \"DefaultTellTo\")\r\n```\r\n\r\nI'm going to add this line before that one:\r\n\r\n```\r\nif (EndsWith(text, \"?\")) msg (\"THIS WAS A QUESTION\")\r\n```\r\n\r\n---\r\n\\> kv, how are you?\r\nTHIS WAS A QUESTION\r\nKV doesn't take orders from the likes of you.\r\n\r\n\\> kv, how are you\r\nKV doesn't take orders from the likes of you.\r\n\r\n---\r\nOkay, but a command could still have a question mark, right? Sort of?  \r\n\r\nI mean, you could be Asking NPC to do something...\r\n\r\n\\>ITSLEO, will you give me a bite of that REAL pizza, please?\r\n\r\nSo, the question mark is ruled out.\r\n\r\n\r\nBUT...\r\n\r\nHow about this:\r\n\r\n```\r\ntext = LCase(text)\r\nif (StartsWith(text, \"how\")) {\r\n  msg (\"THIS WAS A QUESTION\")\r\n}\r\nDoAskTell (object, text, \"tellto\", \"telltodefault\", \"DefaultTellTo\")\r\n```\r\n\r\n(Or does Quest already differentiate 'how, when, why, where'?)\r\n\r\n---\r\n\\> kv, how are you\r\nTHIS WAS A QUESTION\r\nKV doesn't take orders from the likes of you.\r\n\r\n\r\n\r\n---\r\nSo here's a dirty fix for this one:\r\n\r\n```\r\ntext = LCase(text)\r\nif (StartsWith(text, \"how are you\")) {\r\n  HandleSingleCommand(text + \" \" + GetDisplayName(object))\r\n}\r\nelse {\r\nDoAskTell (object, text, \"tellto\", \"telltodefault\", \"DefaultTellTo\")\r\n}\r\n```\r\n\r\n\r\n---\r\n\\> kv, how are you\r\n\"I'm fine,\" KV replies. \"I hope you are, too!\"\r\n\r\n\\> kv, how are you?\r\nI don't understand your command.\r\n\r\n\r\n---\r\nThe question mark is a totally different problem.\r\n\r\nI'm pretty sure it and the comma can be handled the same way, but I understand that ```kv``` and ```kv?``` are not the same word.\r\n\r\nI'll find how it ignores the ```.``` when you turn on multiple commands (or how it looks for a comma in a command with multiple objects), then I shall return.",
      "EditableFormat": "markdown",
      "HTML": "<p>You are in a room.<br>\nYou can see KV.</p>\n<p>&gt; how are you, kv?<br>\nI can't see that. (how are you)</p>\n<p>&gt; kv, how are you<br>\nError running script: Error evaluating expression 'DynamicTemplate(defaulttemplate, object)': No template named 'DefaultTellTo'</p>\n<p>&gt; kv, how are you?<br>\nError running script: Error evaluating expression 'DynamicTemplate(defaulttemplate, object)': No template named 'DefaultTellTo'</p>\n<p>&gt; how are you, kv<br>\nI can't see that. (how are you)</p>\n<p>&gt; how are you kv?<br>\nI can't see that. (kv?)</p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30350784-d4640798-97dd-11e7-986b-b3e9d2f38afb.png\" alt=\"image\"></p>\n<blockquote>\n<p>kv, how are you?<br>\nKV doesn't take orders from the likes of you.</p>\n</blockquote>\n<p>&gt; how are you, kv?<br>\nI can't see that. (how are you)</p>\n<p>&gt; how are you, kv<br>\nI can't see that. (how are you)</p>\n<hr>\n<p>Okay...</p>\n<p>So it wouldn't be easy to get around it that way...</p>\n<p>How about we set up the verb with this pattern: <code>how are you;how are you,</code>?</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30350872-3cc0ea90-97de-11e7-9a9c-66ec7bd01f3c.png\" alt=\"image\"></p>\n<p>Hrmm...  <code>how are you, #object#</code>?</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30350872-3cc0ea90-97de-11e7-9a9c-66ec7bd01f3c.png\" alt=\"image\"></p>\n<p>Okay, fine.  Let's go see what that's all about...</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30350916-6c8531f0-97de-11e7-9f08-f96d5789db81.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30350940-933fa69a-97de-11e7-9831-2554da348098.png\" alt=\"image\"></p>\n<hr>\n<p>Okay, so any time we say an object's name with some text after that, which follows a comma (example: kv, how are you), Quest will think it's an 'Order/Tell to' command.</p>\n<p>So, let's press COPY (at the top right) and play around a little.</p>\n<p>This is the default script:</p>\n<pre><code>DoAskTell (object, text, \"tellto\", \"telltodefault\", \"DefaultTellTo\")\n</code></pre>\n<p>I'm going to add this line before that one:</p>\n<pre><code>if (EndsWith(text, \"?\")) msg (\"THIS WAS A QUESTION\")\n</code></pre>\n<hr>\n<p>&gt; kv, how are you?<br>\nTHIS WAS A QUESTION<br>\nKV doesn't take orders from the likes of you.</p>\n<p>&gt; kv, how are you<br>\nKV doesn't take orders from the likes of you.</p>\n<hr>\n<p>Okay, but a command could still have a question mark, right? Sort of?</p>\n<p>I mean, you could be Asking NPC to do something...</p>\n<p>&gt;ITSLEO, will you give me a bite of that REAL pizza, please?</p>\n<p>So, the question mark is ruled out.</p>\n<p>BUT...</p>\n<p>How about this:</p>\n<pre><code>text = LCase(text)\nif (StartsWith(text, \"how\")) {\n  msg (\"THIS WAS A QUESTION\")\n}\nDoAskTell (object, text, \"tellto\", \"telltodefault\", \"DefaultTellTo\")\n</code></pre>\n<p>(Or does Quest already differentiate 'how, when, why, where'?)</p>\n<hr>\n<p>&gt; kv, how are you<br>\nTHIS WAS A QUESTION<br>\nKV doesn't take orders from the likes of you.</p>\n<hr>\n<p>So here's a dirty fix for this one:</p>\n<pre><code>text = LCase(text)\nif (StartsWith(text, \"how are you\")) {\n  HandleSingleCommand(text + \" \" + GetDisplayName(object))\n}\nelse {\nDoAskTell (object, text, \"tellto\", \"telltodefault\", \"DefaultTellTo\")\n}\n</code></pre>\n<hr>\n<p>&gt; kv, how are you<br>\n\"I'm fine,\" KV replies. \"I hope you are, too!\"</p>\n<p>&gt; kv, how are you?<br>\nI don't understand your command.</p>\n<hr>\n<p>The question mark is a totally different problem.</p>\n<p>I'm pretty sure it and the comma can be handled the same way, but I understand that <code>kv</code> and <code>kv?</code> are not the same word.</p>\n<p>I'll find how it ignores the <code>.</code> when you turn on multiple commands (or how it looks for a comma in a command with multiple objects), then I shall return.</p>\n\n",
      "PostDate": "2017-09-12T22:37:34.2329377Z",
      "LastEditDate": "2017-09-12T22:40:12.4089626Z",
      "link": null
    },
    {
      "PostId": "204dd9cd-762d-4720-bab5-b323af062b38",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details><summary>EXAMPLE GAME'S CODE</summary>\r\n\r\n\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"for ITSLEO\">\r\n    <gameid>898e90ef-b9c6-4bc6-9afa-da13651c5f27</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n    <feature_asktell />\r\n  </game>\r\n  <command name=\"alttellto\">\r\n    <pattern type=\"string\"><![CDATA[^(?<object>.*), (?<text>.*)$]]></pattern>\r\n    <script>\r\n      text = LCase(text)\r\n      if (StartsWith(text, \"how are you\")) {\r\n        HandleSingleCommand (text + \" \" + GetDisplayName(object))\r\n      }\r\n      else {\r\n        DoAskTell (object, text, \"tellto\", \"telltodefault\", \"DefaultTellTo\")\r\n      }\r\n    </script>\r\n  </command>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"KV\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"namedmale\" />\r\n      <speak>\"Ciao!\" says KV.  \"Try entering: ASK KV ABOUT something.\"</speak>\r\n      <howareyou>\"I'm fine,\" KV replies.  \"I hope you are, too!\"</howareyou>\r\n      <askdefault type=\"script\">\r\n        msg (\"\\\"I'm not programmed to know that,\\\" shrugs KV.\")\r\n      </askdefault>\r\n      <telldefault type=\"script\">\r\n      </telldefault>\r\n      <ask type=\"scriptdictionary\">\r\n        <item key=\"game\">\r\n          msg (\"\\\"It's just an example game,\\\" says KV.\")\r\n        </item>\r\n      </ask>\r\n      <usestandardverblist />\r\n      <telltodefault type=\"script\">\r\n        msg (\"KV doesn't take orders from the likes of you.\")\r\n      </telltodefault>\r\n    </object>\r\n  </object>\r\n  <verb>\r\n    <property>howareyou</property>\r\n    <pattern>how are you</pattern>\r\n    <defaultexpression>\"You can't how are you \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n</asl>\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<details><summary>EXAMPLE GAME'S CODE</summary>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"for ITSLEO\"&gt;\n    &lt;gameid&gt;898e90ef-b9c6-4bc6-9afa-da13651c5f27&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n    &lt;feature_asktell /&gt;\n  &lt;/game&gt;\n  &lt;command name=\"alttellto\"&gt;\n    &lt;pattern type=\"string\"&gt;&lt;![CDATA[^(?&lt;object&gt;.*), (?&lt;text&gt;.*)$]]&gt;&lt;/pattern&gt;\n    &lt;script&gt;\n      text = LCase(text)\n      if (StartsWith(text, \"how are you\")) {\n        HandleSingleCommand (text + \" \" + GetDisplayName(object))\n      }\n      else {\n        DoAskTell (object, text, \"tellto\", \"telltodefault\", \"DefaultTellTo\")\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"KV\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"namedmale\" /&gt;\n      &lt;speak&gt;\"Ciao!\" says KV.  \"Try entering: ASK KV ABOUT something.\"&lt;/speak&gt;\n      &lt;howareyou&gt;\"I'm fine,\" KV replies.  \"I hope you are, too!\"&lt;/howareyou&gt;\n      &lt;askdefault type=\"script\"&gt;\n        msg (\"\\\"I'm not programmed to know that,\\\" shrugs KV.\")\n      &lt;/askdefault&gt;\n      &lt;telldefault type=\"script\"&gt;\n      &lt;/telldefault&gt;\n      &lt;ask type=\"scriptdictionary\"&gt;\n        &lt;item key=\"game\"&gt;\n          msg (\"\\\"It's just an example game,\\\" says KV.\")\n        &lt;/item&gt;\n      &lt;/ask&gt;\n      &lt;usestandardverblist /&gt;\n      &lt;telltodefault type=\"script\"&gt;\n        msg (\"KV doesn't take orders from the likes of you.\")\n      &lt;/telltodefault&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;verb&gt;\n    &lt;property&gt;howareyou&lt;/property&gt;\n    &lt;pattern&gt;how are you&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't how are you \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2017-09-12T22:42:55.2965505Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "60bf0cfd-5090-453c-ba32-43e2df8cc327",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "![image](https://user-images.githubusercontent.com/30656341/30352146-1a9f324a-97e4-11e7-9317-cb00541c7860.png)\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30352435-81d2d664-97e5-11e7-8007-17a8fb64ed43.png)\r\n\r\n\r\n---\r\nQUESTION:\r\n\r\nIs a verb not set up as a script dictionary on its object?  If it is, why didn't ```DoAskTell``` find it?\r\n\r\n**First (real) line of DoAskTell:**\r\n```\r\nif (TypeOf(object, property) = \"scriptdictionary\") {\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p><img src=\"https://user-images.githubusercontent.com/30656341/30352146-1a9f324a-97e4-11e7-9317-cb00541c7860.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30352435-81d2d664-97e5-11e7-8007-17a8fb64ed43.png\" alt=\"image\"></p>\n<hr>\n<p>QUESTION:</p>\n<p>Is a verb not set up as a script dictionary on its object?  If it is, why didn't <code>DoAskTell</code> find it?</p>\n<p><strong>First (real) line of DoAskTell:</strong></p>\n<pre><code>if (TypeOf(object, property) = \"scriptdictionary\") {\n</code></pre>\n\n",
      "PostDate": "2017-09-12T23:12:03.5254841Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d4576ae2-e1a0-4063-a2a5-6e0667c92e5c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "a 'Verb' is just a Script Attribute on an Object, but with some extra coding fluff to make it function as a 'Verb', a sub/specific type of a Command",
      "EditableFormat": "markdown",
      "HTML": "<p>a 'Verb' is just a Script Attribute on an Object, but with some extra coding fluff to make it function as a 'Verb', a sub/specific type of a Command</p>\n\n",
      "PostDate": "2017-09-12T23:16:18.3840662Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e2248c9c-af8a-414f-8343-029a0c740100",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh, so it's just a Script, not a Script Dictionary?\r\n\r\nSO if this checked for both, it could invoke any script set on the object?",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh, so it's just a Script, not a Script Dictionary?</p>\n<p>SO if this checked for both, it could invoke any script set on the object?</p>\n\n",
      "PostDate": "2017-09-12T23:27:35.6451672Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "84a85f7b-ae32-4a97-a164-6ceeecbf80b8",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think so, if this is how it works... (this area is beyond my knowledge)\r\n\r\nI really haven't dug that much into the built-in stuff of quest, as I'm putting it off as it's not easy to figure out how quest works, lol. You know more about how quest works than I do. I'll get around to learning how quest works better at some point... along with all of the UI/GUI customization/js/css/html/xml/etc type of stuff... and a lot of other stuff.... I'm just really lazy... sighs.",
      "EditableFormat": "markdown",
      "HTML": "<p>I think so, if this is how it works... (this area is beyond my knowledge)</p>\n<p>I really haven't dug that much into the built-in stuff of quest, as I'm putting it off as it's not easy to figure out how quest works, lol. You know more about how quest works than I do. I'll get around to learning how quest works better at some point... along with all of the UI/GUI customization/js/css/html/xml/etc type of stuff... and a lot of other stuff.... I'm just really lazy... sighs.</p>\n\n",
      "PostDate": "2017-09-13T00:19:08.7149321Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
