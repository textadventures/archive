{
  "Topic": {
    "TopicId": "5185",
    "ForumId": "10",
    "Title": "Proper way to use if DoesInherit",
    "LastUpdated": "2015-05-04T04:13:52+01:00",
    "ReplyCount": 6
  },
  "Posts": [
    {
      "PostId": "35834",
      "UserId": 0,
      "Username": "lightwriter",
      "UserAvatar": null,
      "UserGravatar": "4361dea0f293c64bea42cb1253ce25d4",
      "EditableText": "[code:2dz3iyv9]if (DoesInherit (player&#46;character, &quot;True&quot;)) {\n        msg (&quot;It's nice to meet you&quot; + player&#46;playername + &quot; who is a &quot; + player&#46;gender + &quot;and controls&quot;+ player&#46;class &quot;&#46;&quot;)\n      }[/code:2dz3iyv9]\nI used this as a guide [url:2dz3iyv9]http&#58;//docs&#46;textadventures&#46;co&#46;uk/quest/guides/using_types&#46;html[/url:2dz3iyv9]\nwondering if it was how it used to be in an old version.\nI also looked at this but don't understand the format:\n[url:2dz3iyv9]http&#58;//docs&#46;textadventures&#46;co&#46;uk/quest/functions/doesinherit&#46;html[/url:2dz3iyv9]\nBasically, I want something if player.character = true then it does 1 thing\nand if false then do something else.",
      "EditableFormat": "bbcode",
      "HTML": "<pre><code>if (DoesInherit (player&#46;character, &quot;True&quot;)) {<br/>        msg (&quot;It's nice to meet you&quot; + player&#46;playername + &quot; who is a &quot; + player&#46;gender + &quot;and controls&quot;+ player&#46;class &quot;&#46;&quot;)<br/>      }</code></pre><br/>I used this as a guide <a href=\"http&#58;//docs&#46;textadventures&#46;co&#46;uk/quest/guides/using_types&#46;html\" rel=\"nofollow\">http&#58;//docs&#46;textadventures&#46;co&#46;uk/quest/guides/using_types&#46;html</a><br/>wondering if it was how it used to be in an old version.<br/>I also looked at this but don't understand the format:<br/><a href=\"http&#58;//docs&#46;textadventures&#46;co&#46;uk/quest/functions/doesinherit&#46;html\" rel=\"nofollow\">http&#58;//docs&#46;textadventures&#46;co&#46;uk/quest/functions/doesinherit&#46;html</a><br/>Basically, I want something if player.character = true then it does 1 thing<br/>and if false then do something else.",
      "PostDate": "2015-05-03T18:35:55+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "35835",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "If that's all you want, then it's how you informally said it:\n\n[code:2sg1h16w]if (player&#46;character) {\n        msg (&quot;It's nice to meet you&quot; + player&#46;playername + &quot; who is a &quot; + player&#46;gender + &quot;and controls&quot;+ player&#46;class &quot;&#46;&quot;)\n      }[/code:2sg1h16w]\n\nI'm assuming you don't mean &quot;True&quot; as in the string &quot;True&quot; but just the boolean values true/false. If you do mean it as a string, then you'd have to do \n\n[code:2sg1h16w]if (player&#46;character = &quot;True&quot;)[/code:2sg1h16w]\n\nIf you don't know if &quot;character&quot; will be set initially, you can also do this, which is handy:\n\n[code:2sg1h16w]if (GetBoolean(player, &quot;character&quot;) {\n        msg (&quot;It's nice to meet you&quot; + player&#46;playername + &quot; who is a &quot; + player&#46;gender + &quot;and controls&quot;+ player&#46;class &quot;&#46;&quot;)\n      }[/code:2sg1h16w]\nGetBoolean returns false if the attribute is not set at all, otherwise the true/false value it contains.\n\nTo your original question, DoesInherit is used when you have objects that have base types. You can then see if an object inherits from a base type. If you're not using types, then that probably doesn't mean much!",
      "EditableFormat": "bbcode",
      "HTML": "If that's all you want, then it's how you informally said it:<br/><br/><pre><code>if (player&#46;character) {<br/>        msg (&quot;It's nice to meet you&quot; + player&#46;playername + &quot; who is a &quot; + player&#46;gender + &quot;and controls&quot;+ player&#46;class &quot;&#46;&quot;)<br/>      }</code></pre><br/><br/>I'm assuming you don't mean &quot;True&quot; as in the string &quot;True&quot; but just the boolean values true/false. If you do mean it as a string, then you'd have to do <br/><br/><pre><code>if (player&#46;character = &quot;True&quot;)</code></pre><br/><br/>If you don't know if &quot;character&quot; will be set initially, you can also do this, which is handy:<br/><br/><pre><code>if (GetBoolean(player, &quot;character&quot;) {<br/>        msg (&quot;It's nice to meet you&quot; + player&#46;playername + &quot; who is a &quot; + player&#46;gender + &quot;and controls&quot;+ player&#46;class &quot;&#46;&quot;)<br/>      }</code></pre><br/>GetBoolean returns false if the attribute is not set at all, otherwise the true/false value it contains.<br/><br/>To your original question, DoesInherit is used when you have objects that have base types. You can then see if an object inherits from a base type. If you're not using types, then that probably doesn't mean much!",
      "PostDate": "2015-05-03T18:44:04+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "35836",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "Is player.character it's own object or an attribute of the player object?\n\nIt looks to me like you're using the wrong input for the DoesInherit function\n\nAssuming you're trying to check if the player is inheriting the 'character' type, then it should look something like this\n[code:2uzo02lr]if (DoesInherit (player, &quot;character&quot;)) {\n\t// this returns 'true' to the 'if' statement when the player has inherited type 'character'\n        msg (&quot;It's nice to meet you&quot; + player&#46;playername + &quot; who is a &quot; + player&#46;gender + &quot;and controls&quot;+ player&#46;class &quot;&#46;&quot;)\n      }[/code:2uzo02lr]",
      "EditableFormat": "bbcode",
      "HTML": "Is player.character it's own object or an attribute of the player object?<br/><br/>It looks to me like you're using the wrong input for the DoesInherit function<br/><br/>Assuming you're trying to check if the player is inheriting the 'character' type, then it should look something like this<br/><pre><code>if (DoesInherit (player, &quot;character&quot;)) {<br/>\t// this returns 'true' to the 'if' statement when the player has inherited type 'character'<br/>        msg (&quot;It's nice to meet you&quot; + player&#46;playername + &quot; who is a &quot; + player&#46;gender + &quot;and controls&quot;+ player&#46;class &quot;&#46;&quot;)<br/>      }</code></pre>",
      "PostDate": "2015-05-03T18:47:08+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "35837",
      "UserId": 0,
      "Username": "lightwriter",
      "UserAvatar": null,
      "UserGravatar": "4361dea0f293c64bea42cb1253ce25d4",
      "EditableText": "oh, ok, so how do I check if a boolean is true or false?\nSee when I first did the = it says it couldn't work for a string or boolean but I must've forgotten the quotation marks around 'True'\nNow how would I go about re-running the script if the player selects false and wants to re-enter info such as name and gender?",
      "EditableFormat": "bbcode",
      "HTML": "oh, ok, so how do I check if a boolean is true or false?<br/>See when I first did the = it says it couldn't work for a string or boolean but I must've forgotten the quotation marks around 'True'<br/>Now how would I go about re-running the script if the player selects false and wants to re-enter info such as name and gender?",
      "PostDate": "2015-05-03T21:10:01+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "35838",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I showed you examples above of checking boolean, so I'm not sure what you're asking... (I would just give you the same answer, though I could change the names a bit).\n\nTo check if an attribute is true:\n\n[code:1jmzs06i]if (someobject&#46;someattribute) {\n}\n[/code:1jmzs06i]\nTo check if an attribute is false:\n\n[code:1jmzs06i]if (not someobject&#46;someattribute) {\n}[/code:1jmzs06i]\n\nYou might have gotten the error before if you didn't pre-define the attribute, setting it to some value like [b:1jmzs06i]false[/b:1jmzs06i]. That's where GetBoolean comes in handy, as the attribute doesn't have to be defined ahead of time.\n\n[code:1jmzs06i]if (GetBoolean(someobject, &quot;someattribute&quot;)) {\n}[/code:1jmzs06i]",
      "EditableFormat": "bbcode",
      "HTML": "I showed you examples above of checking boolean, so I'm not sure what you're asking... (I would just give you the same answer, though I could change the names a bit).<br/><br/>To check if an attribute is true:<br/><br/><pre><code>if (someobject&#46;someattribute) {<br/>}<br/></code></pre><br/>To check if an attribute is false:<br/><br/><pre><code>if (not someobject&#46;someattribute) {<br/>}</code></pre><br/><br/>You might have gotten the error before if you didn't pre-define the attribute, setting it to some value like <span style=\"font-weight:bold;\">false</span>. That's where GetBoolean comes in handy, as the attribute doesn't have to be defined ahead of time.<br/><br/><pre><code>if (GetBoolean(someobject, &quot;someattribute&quot;)) {<br/>}</code></pre>",
      "PostDate": "2015-05-03T22:02:54+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "35839",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "'GetBoolean' is probably your best bet here. It will check for a 'true' value in a boolean attribute, however it will still return false if the attribute is anything other than 'true' whether or not the actual value is 'false'.\n\nThat being said, considering a boolean case can only ever be true or false, there should only be two case, an if(true) and then an else. The 'GetBoolean' function should be sufficient here. If you absolutely must be sure that the value is either true or false and not something completely unrelated, you can use a 'HasBoolean' to check that the attribute you're looking for is indeed a boolean value.",
      "EditableFormat": "bbcode",
      "HTML": "'GetBoolean' is probably your best bet here. It will check for a 'true' value in a boolean attribute, however it will still return false if the attribute is anything other than 'true' whether or not the actual value is 'false'.<br/><br/>That being said, considering a boolean case can only ever be true or false, there should only be two case, an if(true) and then an else. The 'GetBoolean' function should be sufficient here. If you absolutely must be sure that the value is either true or false and not something completely unrelated, you can use a 'HasBoolean' to check that the attribute you're looking for is indeed a boolean value.",
      "PostDate": "2015-05-03T22:03:17+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "35857",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "you got your Attributes:\n\nObject_name.Attribute_name = Value_or_Expression\n\nString Attribute: Object_name.Attribute_name = &quot;Value&quot; // or: = Expression // (the textual~string parts require double quotes)\nexample 1: player.sex = &quot;male&quot;\nexample 2: game.greeting = &quot;Hi, &quot; + player.alias + &quot;. You're going to lose, muwahaha! This game is very difficult!&quot;\n\nObject Attribute: Object_1_name.Attribute_name = Object_2_name // except 'true' and 'false', as these are reserved for Boolean Attribute's Values\nexample 1: player.right_hand = sword\nexample 2: player.parent = room\n\nBoolean Attribute: Object_name.Attribute_name = false // or: true\nexample 1A: orc.dead = false\nexample: 1B: orc.dead = true\nexample 2A: player.flying = false\nexample 2B: player.flying = true\n\nInteger Attribute: Object_name.Attribute_name = 5 // or whatever integer (non-decimal) number // or: = Expression\nexample 1: player.strength = 100\nexample 2: player.damage = player.claymore.damage + player.claymore.damage * player.strength / 100\n\nDouble (Float ~ Floating Point) Attribute: Object_name.Attribute_name = 5.00 // or whatever decimal number // or: = Expression\nexample 1: player.damage = 67.23\nexample 2: player.damage = player.claymore.damage + player.claymore.damage * player.strength / 100\n\nStringlist Attribute: Object_name.Attribute_name = split (&quot;item~choice~option1;item~choice~option2;item~choice~option3;etc&quot;, &quot;;&quot;)\nexample 1: global_data_object.sex_stringlist_attribute = split (&quot;male;female&quot;, &quot;;&quot;)\nexample 2: HK.favorite_colors_stringlist_attribute = split (&quot;black;red&quot;, &quot;;&quot;)\nexample 3: game.season_stringlist_attribute = split (&quot;winter;spring;summer;autumn&quot;, &quot;;&quot;)\nexample 4: player.condition_stringlist_attribute = split (&quot;poisoned;confused&quot;, &quot;;&quot;)\n\nObjectlist Attribute: Object_name.Attribute_name = split (&quot;item~choice~option1;item~choice~option2;item~choice~option3;etc&quot;, &quot;;&quot;)\n\nexample:\n\n[code:30r9tyed]weapon_shop&#46;sword_objectlist_attribute = split (&quot;short_sword;long_sword;broad_sword;claymore;katana;rapier;scimitar;cutlass;saber;machete;flamberge&quot;, &quot;;&quot;)\n&lt;object name=&quot;short_sword&quot;&gt;\n&lt;/object&gt;\n&lt;object name=&quot;long_sword&quot;&gt;\n&lt;/object&gt;\n&lt;object name=&quot;broad_sword&quot;&gt;\n&lt;/object&gt;\n&lt;object name=&quot;claymore&quot;&gt;\n&lt;/object&gt;\n&lt;object name=&quot;katana&quot;&gt;\n&lt;/object&gt;\n&lt;object name=&quot;rapier&quot;&gt;\n&lt;/object&gt;\n&lt;object name=&quot;scimitar&quot;&gt;\n&lt;/object&gt;\n&lt;object name=&quot;cutlass&quot;&gt;\n&lt;/object&gt;\n&lt;object name=&quot;saber&quot;&gt;\n&lt;/object&gt;\n&lt;object name=&quot;machete&quot;&gt;\n&lt;/object&gt;\n&lt;object name=&quot;flamberge&quot;&gt;\n&lt;/object&gt;[/code:30r9tyed]\n\n---------\n\nto refer+check+act to~on them:\n\nOPERATORS: '=', '&gt;', '&lt;', '&lt;=', '&gt;=', and ( '&lt;&gt;' or 'not xxx = xxx' )\n(there is no '==', the '=' does both functionalities in quest: the engine handles the parsing for you)\n\n[code:30r9tyed]if (Object_name&#46;Attribute_name OPERATOR Value_or_Expression) {\n  Object_name&#46;Attribute_name = Value_or_Expression\n} else if (Object_name&#46;Attribute_name OPERATOR Value_or_Expression) {\n  Object_name&#46;Attribute_name = Value_or_Expression\n} else {\n  Object_name&#46;Attribute_name = Value_or_Expression\n}[/code:30r9tyed]\n\n----------\n\nObject Types:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/type.html\">http://docs.textadventures.co.uk/quest/ ... /type.html</a><!-- m -->\n\nThe 'Object Type' Element holds Attributes and~or other Object Types. Think of it as a basket that holds eggs, so instead of giving each Object indivually each 'egg' (Attribute), you can instead give each Object the basket (Object Type):\n\n[code:30r9tyed]&lt;object name=&quot;player&quot;&gt;\n  &lt;attr name=&quot;locomotion_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;bipedal;standing&lt;/attr&gt;\n  &lt;attr name=&quot;condition_stringlist_attribute type=&quot;simplestringlist&quot;&gt;alive;normal&lt;/attr&gt;\n  &lt;attr name=&quot;head_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;1&lt;/attr&gt;\n  &lt;attr name=&quot;head_quantity_string_attribute&quot; type=&quot;string&quot;&gt;one&lt;/attr&gt;\n  &lt;attr name=&quot;arm_quantity_string_attribute&quot; type=&quot;string&quot;&gt;two&lt;/attr&gt;\n  &lt;attr name=&quot;arm_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;2&lt;/attr&gt;\n  &lt;attr name=&quot;eye_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;1&lt;/attr&gt;\n  &lt;attr name=&quot;eye_quantity_string_attribute&quot; type=&quot;string&quot;&gt;one&lt;/attr&gt;\n  &lt;attr name=&quot;skin_type_string_attribute&quot; type=&quot;string&quot;&gt;skin&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;orc&quot;&gt;\n   &lt;attr name=&quot;locomotion_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;bipedal;standing&lt;/attr&gt;\n  &lt;attr name=&quot;condition_stringlist_attribute type=&quot;simplestringlist&quot;&gt;alive;normal&lt;/attr&gt;\n  &lt;attr name=&quot;head_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;1&lt;/attr&gt;\n  &lt;attr name=&quot;head_quantity_string_attribute&quot; type=&quot;string&quot;&gt;one&lt;/attr&gt;\n  &lt;attr name=&quot;arm_quantity_string_attribute&quot; type=&quot;string&quot;&gt;two&lt;/attr&gt;\n  &lt;attr name=&quot;arm_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;2&lt;/attr&gt;\n  &lt;attr name=&quot;eye_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;1&lt;/attr&gt;\n  &lt;attr name=&quot;eye_quantity_string_attribute&quot; type=&quot;string&quot;&gt;one&lt;/attr&gt;\n  &lt;attr name=&quot;skin_type_string_attribute&quot; type=&quot;string&quot;&gt;skin&lt;/attr&gt;\n&lt;/object&gt;[/code:30r9tyed]\n\nVS\n\n[code:30r9tyed]&lt;object name=&quot;player&quot;&gt;\n  &lt;inherit name=&quot;humanoid_object_type&quot; /&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;orc&quot;&gt;\n  &lt;inherit name=&quot;humanoid_object_type&quot; /&gt;\n&lt;/object&gt;\n\n&lt;type name=&quot;humanoid_object_type&quot;&gt;\n  &lt;attr name=&quot;locomotion_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;bipedal;standing&lt;/attr&gt;\n  &lt;attr name=&quot;condition_stringlist_attribute type=&quot;simplestringlist&quot;&gt;alive;normal&lt;/attr&gt;\n  &lt;attr name=&quot;head_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;1&lt;/attr&gt;\n  &lt;attr name=&quot;head_quantity_string_attribute&quot; type=&quot;string&quot;&gt;one&lt;/attr&gt;\n  &lt;attr name=&quot;arm_quantity_string_attribute&quot; type=&quot;string&quot;&gt;two&lt;/attr&gt;\n  &lt;attr name=&quot;arm_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;2&lt;/attr&gt;\n  &lt;attr name=&quot;eye_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;1&lt;/attr&gt;\n  &lt;attr name=&quot;eye_quantity_string_attribute&quot; type=&quot;string&quot;&gt;one&lt;/attr&gt;\n  &lt;attr name=&quot;skin_type_string_attribute&quot; type=&quot;string&quot;&gt;skin&lt;/attr&gt;\n&lt;/type&gt;[/code:30r9tyed]\n\n-----------------------\n\nto refer+check+act to~on them:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/doesinherit.html\">http://docs.textadventures.co.uk/quest/ ... herit.html</a><!-- m -->\n\nexample (using the above example, and pretend I made 'animal' Object Type too):\n\n[code:30r9tyed]if (DoesInherit (player, &quot;humanoid_object_type&quot;)) {\n  msg (&quot;You are a humanoid&#46;&quot;)\n} else if (DoesInherit (player, &quot;animal_object_type&quot;)) {\n  msg (&quot;You are an animal&#46;&quot;)\n} else {\n  msg (&quot;You are an alien&#46;&quot;)\n}[/code:30r9tyed]\n\nand you can do as many layers deep as you want, and checking on both Object Type and its Attributes:\n\n[code:30r9tyed]if (DoesInherit (monster_99, &quot;humanoid_object_type&quot;)) {\n  if (monster_99&#46;head_quantity_integer-attribute = 0) {\n    msg (monster_99&#46;alias + &quot; got decapitated by you&#46;&quot;)\n  }\n} else if (DoesInherit (monster_99, &quot;animal_object_type&quot;)) {\n  if (monster_99&#46;animal_type_string_attribute = &quot;dog&quot;) {\n    if (monster_99&#46;head_quantity_integer-attribute = 3) {\n      msg (monster_99&#46;alias + &quot; is the Kerberus of Greek Mythology&#46;&quot;)\n    } else if (monster_99&#46;head_quantity_integer-attribute = 1) {\n      msg (monster_99&#46;alias + &quot; is just an ordinary, but rabid, dog&#46;&quot;)\n    }\n  } else if (monster_99&#46;animal_type_string_attribute = &quot;cat&quot;) {\n    msg (monster_99&#46;alias + &quot; is just an ordinary cat&#46;&quot;)\n  }\n} else {\n  msg (monster_99&#46;alias + &quot; is an alien&#46;&quot;)\n}[/code:30r9tyed]",
      "EditableFormat": "bbcode",
      "HTML": "you got your Attributes:<br/><br/>Object_name.Attribute_name = Value_or_Expression<br/><br/>String Attribute: Object_name.Attribute_name = &quot;Value&quot; // or: = Expression // (the textual~string parts require double quotes)<br/>example 1: player.sex = &quot;male&quot;<br/>example 2: game.greeting = &quot;Hi, &quot; + player.alias + &quot;. You're going to lose, muwahaha! This game is very difficult!&quot;<br/><br/>Object Attribute: Object_1_name.Attribute_name = Object_2_name // except 'true' and 'false', as these are reserved for Boolean Attribute's Values<br/>example 1: player.right_hand = sword<br/>example 2: player.parent = room<br/><br/>Boolean Attribute: Object_name.Attribute_name = false // or: true<br/>example 1A: orc.dead = false<br/>example: 1B: orc.dead = true<br/>example 2A: player.flying = false<br/>example 2B: player.flying = true<br/><br/>Integer Attribute: Object_name.Attribute_name = 5 // or whatever integer (non-decimal) number // or: = Expression<br/>example 1: player.strength = 100<br/>example 2: player.damage = player.claymore.damage + player.claymore.damage * player.strength / 100<br/><br/>Double (Float ~ Floating Point) Attribute: Object_name.Attribute_name = 5.00 // or whatever decimal number // or: = Expression<br/>example 1: player.damage = 67.23<br/>example 2: player.damage = player.claymore.damage + player.claymore.damage * player.strength / 100<br/><br/>Stringlist Attribute: Object_name.Attribute_name = split (&quot;item~choice~option1;item~choice~option2;item~choice~option3;etc&quot;, &quot;;&quot;)<br/>example 1: global_data_object.sex_stringlist_attribute = split (&quot;male;female&quot;, &quot;;&quot;)<br/>example 2: HK.favorite_colors_stringlist_attribute = split (&quot;black;red&quot;, &quot;;&quot;)<br/>example 3: game.season_stringlist_attribute = split (&quot;winter;spring;summer;autumn&quot;, &quot;;&quot;)<br/>example 4: player.condition_stringlist_attribute = split (&quot;poisoned;confused&quot;, &quot;;&quot;)<br/><br/>Objectlist Attribute: Object_name.Attribute_name = split (&quot;item~choice~option1;item~choice~option2;item~choice~option3;etc&quot;, &quot;;&quot;)<br/><br/>example:<br/><br/><pre><code>weapon_shop&#46;sword_objectlist_attribute = split (&quot;short_sword;long_sword;broad_sword;claymore;katana;rapier;scimitar;cutlass;saber;machete;flamberge&quot;, &quot;;&quot;)<br/>&lt;object name=&quot;short_sword&quot;&gt;<br/>&lt;/object&gt;<br/>&lt;object name=&quot;long_sword&quot;&gt;<br/>&lt;/object&gt;<br/>&lt;object name=&quot;broad_sword&quot;&gt;<br/>&lt;/object&gt;<br/>&lt;object name=&quot;claymore&quot;&gt;<br/>&lt;/object&gt;<br/>&lt;object name=&quot;katana&quot;&gt;<br/>&lt;/object&gt;<br/>&lt;object name=&quot;rapier&quot;&gt;<br/>&lt;/object&gt;<br/>&lt;object name=&quot;scimitar&quot;&gt;<br/>&lt;/object&gt;<br/>&lt;object name=&quot;cutlass&quot;&gt;<br/>&lt;/object&gt;<br/>&lt;object name=&quot;saber&quot;&gt;<br/>&lt;/object&gt;<br/>&lt;object name=&quot;machete&quot;&gt;<br/>&lt;/object&gt;<br/>&lt;object name=&quot;flamberge&quot;&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>---------<br/><br/>to refer+check+act to~on them:<br/><br/>OPERATORS: '=', '&gt;', '&lt;', '&lt;=', '&gt;=', and ( '&lt;&gt;' or 'not xxx = xxx' )<br/>(there is no '==', the '=' does both functionalities in quest: the engine handles the parsing for you)<br/><br/><pre><code>if (Object_name&#46;Attribute_name OPERATOR Value_or_Expression) {<br/>  Object_name&#46;Attribute_name = Value_or_Expression<br/>} else if (Object_name&#46;Attribute_name OPERATOR Value_or_Expression) {<br/>  Object_name&#46;Attribute_name = Value_or_Expression<br/>} else {<br/>  Object_name&#46;Attribute_name = Value_or_Expression<br/>}</code></pre><br/><br/>----------<br/><br/>Object Types:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/type.html\">http://docs.textadventures.co.uk/quest/ ... /type.html</a><!-- m --><br/><br/>The 'Object Type' Element holds Attributes and~or other Object Types. Think of it as a basket that holds eggs, so instead of giving each Object indivually each 'egg' (Attribute), you can instead give each Object the basket (Object Type):<br/><br/><pre><code>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;attr name=&quot;locomotion_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;bipedal;standing&lt;/attr&gt;<br/>  &lt;attr name=&quot;condition_stringlist_attribute type=&quot;simplestringlist&quot;&gt;alive;normal&lt;/attr&gt;<br/>  &lt;attr name=&quot;head_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;1&lt;/attr&gt;<br/>  &lt;attr name=&quot;head_quantity_string_attribute&quot; type=&quot;string&quot;&gt;one&lt;/attr&gt;<br/>  &lt;attr name=&quot;arm_quantity_string_attribute&quot; type=&quot;string&quot;&gt;two&lt;/attr&gt;<br/>  &lt;attr name=&quot;arm_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;2&lt;/attr&gt;<br/>  &lt;attr name=&quot;eye_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;1&lt;/attr&gt;<br/>  &lt;attr name=&quot;eye_quantity_string_attribute&quot; type=&quot;string&quot;&gt;one&lt;/attr&gt;<br/>  &lt;attr name=&quot;skin_type_string_attribute&quot; type=&quot;string&quot;&gt;skin&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;orc&quot;&gt;<br/>   &lt;attr name=&quot;locomotion_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;bipedal;standing&lt;/attr&gt;<br/>  &lt;attr name=&quot;condition_stringlist_attribute type=&quot;simplestringlist&quot;&gt;alive;normal&lt;/attr&gt;<br/>  &lt;attr name=&quot;head_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;1&lt;/attr&gt;<br/>  &lt;attr name=&quot;head_quantity_string_attribute&quot; type=&quot;string&quot;&gt;one&lt;/attr&gt;<br/>  &lt;attr name=&quot;arm_quantity_string_attribute&quot; type=&quot;string&quot;&gt;two&lt;/attr&gt;<br/>  &lt;attr name=&quot;arm_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;2&lt;/attr&gt;<br/>  &lt;attr name=&quot;eye_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;1&lt;/attr&gt;<br/>  &lt;attr name=&quot;eye_quantity_string_attribute&quot; type=&quot;string&quot;&gt;one&lt;/attr&gt;<br/>  &lt;attr name=&quot;skin_type_string_attribute&quot; type=&quot;string&quot;&gt;skin&lt;/attr&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>VS<br/><br/><pre><code>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;inherit name=&quot;humanoid_object_type&quot; /&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;orc&quot;&gt;<br/>  &lt;inherit name=&quot;humanoid_object_type&quot; /&gt;<br/>&lt;/object&gt;<br/><br/>&lt;type name=&quot;humanoid_object_type&quot;&gt;<br/>  &lt;attr name=&quot;locomotion_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;bipedal;standing&lt;/attr&gt;<br/>  &lt;attr name=&quot;condition_stringlist_attribute type=&quot;simplestringlist&quot;&gt;alive;normal&lt;/attr&gt;<br/>  &lt;attr name=&quot;head_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;1&lt;/attr&gt;<br/>  &lt;attr name=&quot;head_quantity_string_attribute&quot; type=&quot;string&quot;&gt;one&lt;/attr&gt;<br/>  &lt;attr name=&quot;arm_quantity_string_attribute&quot; type=&quot;string&quot;&gt;two&lt;/attr&gt;<br/>  &lt;attr name=&quot;arm_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;2&lt;/attr&gt;<br/>  &lt;attr name=&quot;eye_quantity_integer_attribute&quot; type=&quot;int&quot;&gt;1&lt;/attr&gt;<br/>  &lt;attr name=&quot;eye_quantity_string_attribute&quot; type=&quot;string&quot;&gt;one&lt;/attr&gt;<br/>  &lt;attr name=&quot;skin_type_string_attribute&quot; type=&quot;string&quot;&gt;skin&lt;/attr&gt;<br/>&lt;/type&gt;</code></pre><br/><br/>-----------------------<br/><br/>to refer+check+act to~on them:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/doesinherit.html\">http://docs.textadventures.co.uk/quest/ ... herit.html</a><!-- m --><br/><br/>example (using the above example, and pretend I made 'animal' Object Type too):<br/><br/><pre><code>if (DoesInherit (player, &quot;humanoid_object_type&quot;)) {<br/>  msg (&quot;You are a humanoid&#46;&quot;)<br/>} else if (DoesInherit (player, &quot;animal_object_type&quot;)) {<br/>  msg (&quot;You are an animal&#46;&quot;)<br/>} else {<br/>  msg (&quot;You are an alien&#46;&quot;)<br/>}</code></pre><br/><br/>and you can do as many layers deep as you want, and checking on both Object Type and its Attributes:<br/><br/><pre><code>if (DoesInherit (monster_99, &quot;humanoid_object_type&quot;)) {<br/>  if (monster_99&#46;head_quantity_integer-attribute = 0) {<br/>    msg (monster_99&#46;alias + &quot; got decapitated by you&#46;&quot;)<br/>  }<br/>} else if (DoesInherit (monster_99, &quot;animal_object_type&quot;)) {<br/>  if (monster_99&#46;animal_type_string_attribute = &quot;dog&quot;) {<br/>    if (monster_99&#46;head_quantity_integer-attribute = 3) {<br/>      msg (monster_99&#46;alias + &quot; is the Kerberus of Greek Mythology&#46;&quot;)<br/>    } else if (monster_99&#46;head_quantity_integer-attribute = 1) {<br/>      msg (monster_99&#46;alias + &quot; is just an ordinary, but rabid, dog&#46;&quot;)<br/>    }<br/>  } else if (monster_99&#46;animal_type_string_attribute = &quot;cat&quot;) {<br/>    msg (monster_99&#46;alias + &quot; is just an ordinary cat&#46;&quot;)<br/>  }<br/>} else {<br/>  msg (monster_99&#46;alias + &quot; is an alien&#46;&quot;)<br/>}</code></pre>",
      "PostDate": "2015-05-04T04:13:52+01:00",
      "LastEditDate": null
    }
  ]
}
