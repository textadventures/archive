{
  "Topic": {
    "TopicId": "qekberujxus_8yl_bakmdq",
    "ForumId": "10",
    "Title": "Emulating a LABEL or GOTO (Solved)",
    "LastUpdated": "2018-09-01T09:13:02.7485695Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "a5c69da2-bf74-46ae-9a68-da097979afea",
      "UserId": 372999,
      "Username": "Nakita Block",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3bae1b35d822d93e538260a988f64861?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I certainly apologize for all my questions. Honestly I do read as much as I can and try to find answers for myself. Many questions I do find the answers for. I'm not seeing this one.\r\n\r\nI'm just trying to find or create an equivalent to a Label or a way to GOTO something. I'll try to give an example.\r\n\r\nI will shuffle a combination. But I don't want any of the numbers to be the same. We'll just say 6 numbers, all random from 0 to 5.\r\n\r\n```\r\nCreate LIST\r\nAdd first Random Number (0-5) to LIST\r\n \r\nCreate FOR/NEXT from 1 to 5 for the next numbers\r\nr = Random Number\r\nNest another FOR/NEXT to check previous numbers to see if r = any of those numbers\r\nIf it does, go back and generate another number.\r\n```\r\nSo how can I make it go back and create another number?",
      "EditableFormat": "markdown",
      "HTML": "<p>I certainly apologize for all my questions. Honestly I do read as much as I can and try to find answers for myself. Many questions I do find the answers for. I'm not seeing this one.</p>\n<p>I'm just trying to find or create an equivalent to a Label or a way to GOTO something. I'll try to give an example.</p>\n<p>I will shuffle a combination. But I don't want any of the numbers to be the same. We'll just say 6 numbers, all random from 0 to 5.</p>\n<pre><code>Create LIST\nAdd first Random Number (0-5) to LIST\n \nCreate FOR/NEXT from 1 to 5 for the next numbers\nr = Random Number\nNest another FOR/NEXT to check previous numbers to see if r = any of those numbers\nIf it does, go back and generate another number.\n</code></pre>\n<p>So how can I make it go back and create another number?</p>\n\n",
      "PostDate": "2018-09-01T09:13:02.7485695Z",
      "LastEditDate": "2018-09-01T13:40:27.2060696Z",
      "link": null
    },
    {
      "PostId": "06ab0cde-fbda-4689-89ba-a71939446318",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you want it to go back, that's what a while loop is good for:\r\n```\r\nnumbers = NewList()\r\nlist add (numbers, GetRandomInt(0, 5))\r\n\r\nfor (i, 1, 5) {\r\n  isduplicate = true\r\n  while (isduplicate) {\r\n    r = GetRandomInt (0, 5)\r\n    isduplicate = false\r\n    foreach (existing_number, numbers) {\r\n      if (existing_number = r) {\r\n        isduplicate = true\r\n      }\r\n    }\r\n  }\r\n  list add (numbers, r)\r\n}\r\n```\r\n\r\nHowever, in this case you don't need the inner loop, and you can make it a lot smoother:\r\n```\r\nnumbers = NewList()\r\nr = GetRandomInt (0, 5)\r\nlist add (numbers, r)\r\n\r\nfor (i, 1, 5) {\r\n  while (ListContains (numbers, r)) {\r\n    r = GetRandomInt (0,5)\r\n  }\r\n  list add (numbers, r)\r\n}\r\n```\r\n\r\nOr, a more common way to perturb a list:\r\n```\r\nremaining_numbers = Split(\"0;1;2;3;4;5\")\r\nshuffled_numbers = NewList()\r\nfor (1, 0, 5) {\r\n  r = PickOneString (remaining_numbers)\r\n  list remove (remaining_numbers, r)\r\n  list add (shuffled_numbers, ToInt(r))\r\n}\r\n```\r\n\r\n\r\nSorry to say, there isn't a GOTO statement. That's pretty normal for any modern programming language.\r\nBut on the bright side, asking \"How can I do this without GOTO\" nearly always results in a more efficient algorithm.\r\n\r\nA brief list of situations where you might want to use goto if you started programming on a language that has it, and the usual recommendations for how to deal with them:\r\n\r\n* **If you want to jump back,** you could try using a `while` loop, setting a boolean variable to let Quest know it should repeat\r\n* **If you want to jump forward,** just use an `if` statement to skip over the code in between\r\n* **If you want to jump out of a loop,** that's actually one place where Quest falls down. Most languages have statements with names like \"break\", \"last\", \"redo\", or \"continue\" which allow you to exit the loop you're currently in. Quest doesn't seem to do that. However, if you put the loop in a function, you can use `return`to get out of it immediately.\r\n* **If you want to jump into a loop,** why would you want to do that? What would the loop variables be set to? In languages that allow this, doing it is usually taken as a sign that you've done something dumb. The only counterexample I can think of is Duff's device in C, which puts a while loop in between a switch statement and its cases.\r\n* **If you're doing something more complicated,** try rethinking your code. If your plan requires a jump that's too complex to use one of the methods above, there is probably a better plan. There may be exceptions, in which case you can combine the other methods, but you should sit down and look at your plan first, and try to work out if there is a simpler way to accomplish your task.",
      "EditableFormat": "markdown",
      "HTML": "<p>If you want it to go back, that's what a while loop is good for:</p>\n<pre><code>numbers = NewList()\nlist add (numbers, GetRandomInt(0, 5))\n\nfor (i, 1, 5) {\n  isduplicate = true\n  while (isduplicate) {\n    r = GetRandomInt (0, 5)\n    isduplicate = false\n    foreach (existing_number, numbers) {\n      if (existing_number = r) {\n        isduplicate = true\n      }\n    }\n  }\n  list add (numbers, r)\n}\n</code></pre>\n<p>However, in this case you don't need the inner loop, and you can make it a lot smoother:</p>\n<pre><code>numbers = NewList()\nr = GetRandomInt (0, 5)\nlist add (numbers, r)\n\nfor (i, 1, 5) {\n  while (ListContains (numbers, r)) {\n    r = GetRandomInt (0,5)\n  }\n  list add (numbers, r)\n}\n</code></pre>\n<p>Or, a more common way to perturb a list:</p>\n<pre><code>remaining_numbers = Split(\"0;1;2;3;4;5\")\nshuffled_numbers = NewList()\nfor (1, 0, 5) {\n  r = PickOneString (remaining_numbers)\n  list remove (remaining_numbers, r)\n  list add (shuffled_numbers, ToInt(r))\n}\n</code></pre>\n<p>Sorry to say, there isn't a GOTO statement. That's pretty normal for any modern programming language.<br>\nBut on the bright side, asking \"How can I do this without GOTO\" nearly always results in a more efficient algorithm.</p>\n<p>A brief list of situations where you might want to use goto if you started programming on a language that has it, and the usual recommendations for how to deal with them:</p>\n<ul>\n<li><strong>If you want to jump back,</strong> you could try using a <code>while</code> loop, setting a boolean variable to let Quest know it should repeat</li>\n<li><strong>If you want to jump forward,</strong> just use an <code>if</code> statement to skip over the code in between</li>\n<li><strong>If you want to jump out of a loop,</strong> that's actually one place where Quest falls down. Most languages have statements with names like \"break\", \"last\", \"redo\", or \"continue\" which allow you to exit the loop you're currently in. Quest doesn't seem to do that. However, if you put the loop in a function, you can use <code>return</code>to get out of it immediately.</li>\n<li><strong>If you want to jump into a loop,</strong> why would you want to do that? What would the loop variables be set to? In languages that allow this, doing it is usually taken as a sign that you've done something dumb. The only counterexample I can think of is Duff's device in C, which puts a while loop in between a switch statement and its cases.</li>\n<li><strong>If you're doing something more complicated,</strong> try rethinking your code. If your plan requires a jump that's too complex to use one of the methods above, there is probably a better plan. There may be exceptions, in which case you can combine the other methods, but you should sit down and look at your plan first, and try to work out if there is a simpler way to accomplish your task.</li>\n</ul>\n\n",
      "PostDate": "2018-09-01T09:44:24.5959714Z",
      "LastEditDate": "2018-09-01T10:53:32.6762466Z",
      "link": null
    },
    {
      "PostId": "1670490f-786d-438a-a92f-b9c4f7bffa03",
      "UserId": 372999,
      "Username": "Nakita Block",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3bae1b35d822d93e538260a988f64861?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I can't believe I didn't think of While. Slap me with the idiot stick. Thank you once again.\r\n\r\nIn my defense I have really only mingled with BASIC most of my life.",
      "EditableFormat": "markdown",
      "HTML": "<p>I can't believe I didn't think of While. Slap me with the idiot stick. Thank you once again.</p>\n<p>In my defense I have really only mingled with BASIC most of my life.</p>\n\n",
      "PostDate": "2018-09-01T13:39:06.2775744Z",
      "LastEditDate": "2018-09-01T13:41:54.6258394Z",
      "link": null
    }
  ]
}
