{
  "Topic": {
    "TopicId": "26onmvks8ukoxsmzmysb0q",
    "ForumId": "10",
    "Title": "Passing Lists",
    "LastUpdated": "2018-04-15T04:13:52.2614601Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "1231cf0e-a694-4ed8-a3f6-d3d9b8f04fcb",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "When passing a list as a parameter, I can't access the list's attribute from within the script.\r\n\r\nI have a ```thing``` object.  If I pass ```thing.displayverbs``` to my function, I want my function's script to know if it is dealing with a ```displayverbs``` list.  Any idea how to accomplish this?\r\n\r\n```\r\n  <function name=\"ListAdd\" parameters=\"list, value\">\r\n    if (not EndsWith(TypeOf(list),\"list\")) {\r\n      error (\"ListAdd: \"+list+\" is not a list!\")\r\n    }\r\n    if (not ListContains(list,value)) {\r\n      list add (list, value)\r\n    }\r\n  </function>\r\n```\r\n\r\n---\r\nI wanted the function to be able to do this:\r\n```ListAdd (thing.displayverbs, \"Shake\")```\r\n\r\n...instead of having to do this:\r\n```\r\nthing.displayverbs = ListExclude(thing.displayverbs,\"\")\r\nListAdd (thing.displayverbs, \"Shake\")\r\n```\r\n\r\n---\r\n```ToString(list)``` doesn't work.  It returns the list as a string (of course).\r\n\r\n```JS.console.log(list)``` doesn't work.  It passes an array.\r\n\r\n```list.name``` doesn't work (throws an error, of course).\r\n\r\n\r\nIt's like I can't find out which attribute or variable is being passed here, but, if the list is not defined by an inherited type, this actually modifies an object's list attribute.\r\n\r\nI want the script to tell me that I'm working with ```thing.displayverbs```, if that's what I'm working with.",
      "EditableFormat": "markdown",
      "HTML": "<p>When passing a list as a parameter, I can't access the list's attribute from within the script.</p>\n<p>I have a <code>thing</code> object.  If I pass <code>thing.displayverbs</code> to my function, I want my function's script to know if it is dealing with a <code>displayverbs</code> list.  Any idea how to accomplish this?</p>\n<pre><code>  &lt;function name=\"ListAdd\" parameters=\"list, value\"&gt;\n    if (not EndsWith(TypeOf(list),\"list\")) {\n      error (\"ListAdd: \"+list+\" is not a list!\")\n    }\n    if (not ListContains(list,value)) {\n      list add (list, value)\n    }\n  &lt;/function&gt;\n</code></pre>\n<hr>\n<p>I wanted the function to be able to do this:<br>\n<code>ListAdd (thing.displayverbs, \"Shake\")</code></p>\n<p>...instead of having to do this:</p>\n<pre><code>thing.displayverbs = ListExclude(thing.displayverbs,\"\")\nListAdd (thing.displayverbs, \"Shake\")\n</code></pre>\n<hr>\n<p><code>ToString(list)</code> doesn't work.  It returns the list as a string (of course).</p>\n<p><code>JS.console.log(list)</code> doesn't work.  It passes an array.</p>\n<p><code>list.name</code> doesn't work (throws an error, of course).</p>\n<p>It's like I can't find out which attribute or variable is being passed here, but, if the list is not defined by an inherited type, this actually modifies an object's list attribute.</p>\n<p>I want the script to tell me that I'm working with <code>thing.displayverbs</code>, if that's what I'm working with.</p>\n\n",
      "PostDate": "2018-04-15T04:13:52.2614601Z",
      "LastEditDate": "2018-04-15T06:30:09.7563265Z",
      "link": null
    },
    {
      "PostId": "98224625-2c4a-4631-b2e3-8a5d29b8008a",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm a bit unclear on what you're asking for, but I'll try to help anyways, lol...\r\n\r\nthe 'TypeOf' should be working for checking what Attribute Type it is\r\n\r\nif you want to check the name of the Attribute, you should be able to use 'GetAttribute' (as there's no specific 'GetList/GetDictionary'): http://docs.textadventures.co.uk/quest/functions/getattribute.html\r\n\r\n```\r\ncreate (\"example_object\")\r\n\r\nexample_object.example_object_attribute = example_object\r\n\r\nexample_object.example_name_of_object_string_attribute = example_object.name\r\n\r\nexample_object.example_name_of_attribute_string_attribute = \"displayverbs\"\r\n\r\nexample_object.example_value_attribute = \"green\"\r\n\r\nexample_object.example_stringlist_attribute = NewStringList ()\r\nlist add (example_object.example_stringlist_attribute, \"red\")\r\nlist add (example_object.example_stringlist_attribute, \"blue\")\r\nlist add (example_object.example_stringlist_attribute, \"yellow\")\r\n\r\n// --------------\r\n\r\nexample_function (example_object.example_object_attribute, example_object.example_name_of_object_string_attribute, example_object.example_name_of_attribute_string_attribute, example_object.example_stringlist_attribute, example_object.example_value_attribute)\r\n\r\n// --------------\r\n\r\n\r\n<function name=\"example_function\" parameters=\"example_object_parameter, example_name_of_object_string_parameter, example_name_of_attribute_string_parameter, example_attribute_parameter, example_value_parameter\">\r\n\r\n  // the 'name_of_object' String Parameter/input/value isn't used in the scripting below, but it can be needed for whatever scripting you might have that needs it, though you can always convert between an 'Object' VARIABLE and a 'name' 'String' VARIABLE via 'GetObject (STRING)' and 'GetString (OBJECT, \"name\") or OBJECT.name', within the scripting too, I just show the function having this distinction in its function call/definition/header/signature, instead of doing it as scripting within the Function)\r\n\r\n  if (TypeOf (example_attribute_parameter) = \"stringlist\" or TypeOf (example_attribute_parameter) = \"objectlist\") {\r\n    if (GetAttribute (example_object_parameter, example_name_of_attribute_string_parameter) = \"displayverbs\") {\r\n      if (not ListContains (example_attribute_parameter, example_value_parameter)) {\r\n        list add (example_attribute_parameter, example_value_parameter)\r\n      } else {\r\n        msg (\"The list already contains the value, silly\")\r\n      }\r\n    } else {\r\n      msg (\"The list is not a 'displayverbs' list, silly\")\r\n    }\r\n  } else {\r\n    msg (\"The input is not a list (it's: not a Stringlist and not an Objectlist), silly\")\r\n  }\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm a bit unclear on what you're asking for, but I'll try to help anyways, lol...</p>\n<p>the 'TypeOf' should be working for checking what Attribute Type it is</p>\n<p>if you want to check the name of the Attribute, you should be able to use 'GetAttribute' (as there's no specific 'GetList/GetDictionary'): http://docs.textadventures.co.uk/quest/functions/getattribute.html</p>\n<pre><code>create (\"example_object\")\n\nexample_object.example_object_attribute = example_object\n\nexample_object.example_name_of_object_string_attribute = example_object.name\n\nexample_object.example_name_of_attribute_string_attribute = \"displayverbs\"\n\nexample_object.example_value_attribute = \"green\"\n\nexample_object.example_stringlist_attribute = NewStringList ()\nlist add (example_object.example_stringlist_attribute, \"red\")\nlist add (example_object.example_stringlist_attribute, \"blue\")\nlist add (example_object.example_stringlist_attribute, \"yellow\")\n\n// --------------\n\nexample_function (example_object.example_object_attribute, example_object.example_name_of_object_string_attribute, example_object.example_name_of_attribute_string_attribute, example_object.example_stringlist_attribute, example_object.example_value_attribute)\n\n// --------------\n\n\n&lt;function name=\"example_function\" parameters=\"example_object_parameter, example_name_of_object_string_parameter, example_name_of_attribute_string_parameter, example_attribute_parameter, example_value_parameter\"&gt;\n\n  // the 'name_of_object' String Parameter/input/value isn't used in the scripting below, but it can be needed for whatever scripting you might have that needs it, though you can always convert between an 'Object' VARIABLE and a 'name' 'String' VARIABLE via 'GetObject (STRING)' and 'GetString (OBJECT, \"name\") or OBJECT.name', within the scripting too, I just show the function having this distinction in its function call/definition/header/signature, instead of doing it as scripting within the Function)\n\n  if (TypeOf (example_attribute_parameter) = \"stringlist\" or TypeOf (example_attribute_parameter) = \"objectlist\") {\n    if (GetAttribute (example_object_parameter, example_name_of_attribute_string_parameter) = \"displayverbs\") {\n      if (not ListContains (example_attribute_parameter, example_value_parameter)) {\n        list add (example_attribute_parameter, example_value_parameter)\n      } else {\n        msg (\"The list already contains the value, silly\")\n      }\n    } else {\n      msg (\"The list is not a 'displayverbs' list, silly\")\n    }\n  } else {\n    msg (\"The input is not a list (it's: not a Stringlist and not an Objectlist), silly\")\n  }\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2018-04-15T05:50:39.8652749Z",
      "LastEditDate": "2018-04-15T06:13:06.4623364Z",
      "link": null
    },
    {
      "PostId": "5bd4f99f-955e-4d7e-b6f4-f08f290eb86d",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I want the script to tell me that I'm working with ```thing.displayverbs```, if that's what I'm working with.\r\n\r\n...or ```widget.inventoryverbs```, or whatever.  I want ```object.attribute```.\r\n\r\n```TypeOf(list)```just returns ```stringlist``` or whatever type of list it is.\r\n\r\nI can access the type of list.  I have the contents.  I want to know the object and the attribute name so I can clone the list if it's an inherited attribute list.  To do that, I need the ```object.attribute``` that was passed to the function.  Doing ```list = ListExclude(list,\"\")``` declares ```list``` as a new variable, the value of which is a clone of the list passed in the variable.  I don't want this.  I want to know that it is a specific object's specific attribute, so I can modify it properly, cloning it first if it's inherited.  This way, ```ListAdd``` will be less likely to throw an error.",
      "EditableFormat": "markdown",
      "HTML": "<p>I want the script to tell me that I'm working with <code>thing.displayverbs</code>, if that's what I'm working with.</p>\n<p>...or <code>widget.inventoryverbs</code>, or whatever.  I want <code>object.attribute</code>.</p>\n<p><code>TypeOf(list)</code>just returns <code>stringlist</code> or whatever type of list it is.</p>\n<p>I can access the type of list.  I have the contents.  I want to know the object and the attribute name so I can clone the list if it's an inherited attribute list.  To do that, I need the <code>object.attribute</code> that was passed to the function.  Doing <code>list = ListExclude(list,\"\")</code> declares <code>list</code> as a new variable, the value of which is a clone of the list passed in the variable.  I don't want this.  I want to know that it is a specific object's specific attribute, so I can modify it properly, cloning it first if it's inherited.  This way, <code>ListAdd</code> will be less likely to throw an error.</p>\n\n",
      "PostDate": "2018-04-15T06:07:51.9833198Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6b03df9c-680c-41f6-b1c2-78f3e15bdd03",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "edited my post, see if it works (or ask me if confused by it and need help/explanation of it), and let me know if it works or not.\r\n\r\n--------\r\n\r\nA List/Dictionary Attribute itself is just storing a pointer (name_of_list/dictionary_attribute) to its address location as its own actual value, with the values/items for it, stored in contigious address locations from the List/Dictionary Attribute's address location in memory.\r\n\r\nso, this (hopefully) is why the 'GetAttribute' works... lol... in checking if it's equal to \"displayverbs\"...\r\n\r\n--------------------\r\n\r\nmemory:\r\n\r\nmemory box A: stored data: address: 'name_of_object' String Data // Object 1\r\n\r\n-------\r\nObject 1's stored data:\r\n\r\nmemory box A+1: stored data: address: 'name_of_string/dictionary_attribute' String Data // List/Dictionary Attribute 1\r\nmemory box A+2 to B: stored data: the list/dictionary items/values // items/values of List/Dictionary Attribute 1\r\n\r\nmemory box B+1: stored data: address: 'name_of_string/dictionary_attribute' String Data // List/Dictionary Attribute 2\r\nmemory box B+2 to C: stored data: the list/dictionary items/values // items/values of List/Dictionary Attribute 2\r\n\r\n--------\r\n\r\nmemory box C+1: stored data: address: stored data: 'name_of_object' String Data // Object 2\r\n\r\n------\r\n\r\nObject 2's stored data:\r\n\r\nmemory box C+1: stored data: address: 'name_of_string/dictionary_attribute' String Data // List/Dictionary Attribute 3\r\nmemory box C+2 to D: stored data: the list/dictionary items/values // items/values of List/Dictionary Attribute 3\r\n\r\nmemory box D+1: stored data: address: 'name_of_string/dictionary_attribute' String Data // // List/Dictionary Attribute 4\r\nmemory box D+2 to E: stored data: the list/dictionary  items/values // items/values of List/Dictionary Attribute 4\r\n\r\n------\r\n\r\nmemory box E: stored data: address: stored data: 'name_of_object' String Data // Object 3",
      "EditableFormat": "markdown",
      "HTML": "<p>edited my post, see if it works (or ask me if confused by it and need help/explanation of it), and let me know if it works or not.</p>\n<hr>\n<p>A List/Dictionary Attribute itself is just storing a pointer (name_of_list/dictionary_attribute) to its address location as its own actual value, with the values/items for it, stored in contigious address locations from the List/Dictionary Attribute's address location in memory.</p>\n<p>so, this (hopefully) is why the 'GetAttribute' works... lol... in checking if it's equal to \"displayverbs\"...</p>\n<hr>\n<p>memory:</p>\n<p>memory box A: stored data: address: 'name_of_object' String Data // Object 1</p>\n<hr>\n<p>Object 1's stored data:</p>\n<p>memory box A+1: stored data: address: 'name_of_string/dictionary_attribute' String Data // List/Dictionary Attribute 1<br>\nmemory box A+2 to B: stored data: the list/dictionary items/values // items/values of List/Dictionary Attribute 1</p>\n<p>memory box B+1: stored data: address: 'name_of_string/dictionary_attribute' String Data // List/Dictionary Attribute 2<br>\nmemory box B+2 to C: stored data: the list/dictionary items/values // items/values of List/Dictionary Attribute 2</p>\n<hr>\n<p>memory box C+1: stored data: address: stored data: 'name_of_object' String Data // Object 2</p>\n<hr>\n<p>Object 2's stored data:</p>\n<p>memory box C+1: stored data: address: 'name_of_string/dictionary_attribute' String Data // List/Dictionary Attribute 3<br>\nmemory box C+2 to D: stored data: the list/dictionary items/values // items/values of List/Dictionary Attribute 3</p>\n<p>memory box D+1: stored data: address: 'name_of_string/dictionary_attribute' String Data // // List/Dictionary Attribute 4<br>\nmemory box D+2 to E: stored data: the list/dictionary  items/values // items/values of List/Dictionary Attribute 4</p>\n<hr>\n<p>memory box E: stored data: address: stored data: 'name_of_object' String Data // Object 3</p>\n\n",
      "PostDate": "2018-04-15T06:14:06.6055484Z",
      "LastEditDate": "2018-04-15T09:21:43.8166969Z",
      "link": null
    },
    {
      "PostId": "2c5200ab-753f-4cde-b005-23cd3703f4a0",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is my version of your example function:\r\n```\r\n<function name=\"ListAdd2\" parameters=\"object,attribute,value\">\r\n  list = GetAttribute(object,attribute)\r\n  if (not EndsWith(TypeOf (list),\"list\")) {\r\n    error (\"ListAdd2: \"+list+\" is not a list!\")\r\n  }\r\n  if (EndsWith(attribute,\"verbs\")){\r\n    set (object, attribute, ListExclude(list,\"\"))\r\n  }\r\n  if (not ListContains(list,value)){\r\n    list add (list, value)\r\n  }  \r\n</function>\r\n```\r\n\r\n---\r\nIt looks like it would work, but I want it to take the same parameters as ```list add```.  (Sorry.  I should have mentioned that.)\r\n\r\n---\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>This is my version of your example function:</p>\n<pre><code>&lt;function name=\"ListAdd2\" parameters=\"object,attribute,value\"&gt;\n  list = GetAttribute(object,attribute)\n  if (not EndsWith(TypeOf (list),\"list\")) {\n    error (\"ListAdd2: \"+list+\" is not a list!\")\n  }\n  if (EndsWith(attribute,\"verbs\")){\n    set (object, attribute, ListExclude(list,\"\"))\n  }\n  if (not ListContains(list,value)){\n    list add (list, value)\n  }  \n&lt;/function&gt;\n</code></pre>\n<hr>\n<p>It looks like it would work, but I want it to take the same parameters as <code>list add</code>.  (Sorry.  I should have mentioned that.)</p>\n<hr>\n\n",
      "PostDate": "2018-04-15T06:17:35.6651923Z",
      "LastEditDate": "2018-04-15T06:36:52.2145631Z",
      "link": null
    },
    {
      "PostId": "7f6aab63-d1f1-471d-9490-55849e8e698c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "does this work for you?\r\n\r\n--------------\r\n\r\nHK edit:\r\n\r\nokay...\r\n\r\nthe 'list add' only uses 2 parameters, and your example uses 3 (assuming this example of mine does indeed work, which you've adjusted for your own use), and you want it to use only 2 parameters, correct?\r\n\r\nthis means you're taking/using the 'name_of_object.name_of_attribute', but the 'GetAttribute' requires it to get split into:\r\n\r\n1. an Object Value\r\n2. a String Value\r\n\r\nI'm not sure if you can directly do this or not:\r\n\r\nstring_variable_1 = ToString (name_of_object.name_of_attribute)\r\n\r\nand then hopefully be able to use the String Manipulation Functions on 'string_variable_1' to extract 'name_of_object' and 'name_of_attribute' from it, as is required by/for-using the 'GetAttribute':\r\n\r\nobject_variable = GetObject (name_of_object)\r\n\r\nstring_variable_2 = name_of_attribute\r\n\r\nif (GetAttribute (object_variable, string_variable_2) = \"displaylist\")\r\n\r\n------\r\n\r\nyou're basically trying to do the reverse of 'GetAttribute':\r\n\r\nthe 'GetAttribute' takes an Object Value and a 'name_of_attribute' String Value (2 values) and combines them into an Attribute Value: name_of_object.name_of_attribute (one value)\r\n\r\nyou want to use only 1 value (as one parameter, and the other parameter is the 'value' parameter, to match up with the 'list add', instead of having 3 parameters/values: object value, name of attribute string value, value)\r\n\r\nso, you're trying to do the reverse of the 'GetAttribute', splitting the Attribute up, into its Object and its name of attribute String\r\n\r\n-------\r\n\r\nlist add (ATTRIBUTE: parameter/value 1+2, VALUE: parameter/value 3)\r\n\r\nthen in the scripting split ATTRIBUTE into 2 separate values:\r\n\r\nOBJECT: parameter/value 1\r\nSTRING: 'name of attribute' parameter/value 2\r\nand\r\nVALUE: parameter/value 3\r\n\r\nfor the 'GetAttribute' to use:\r\n\r\nGetAttribute (OBJECT, STRING) = \"VALUE\"\r\n\r\n---------\r\n\r\nas opposed to using a Function with the 3 values/parameters",
      "EditableFormat": "markdown",
      "HTML": "<p>does this work for you?</p>\n<hr>\n<p>HK edit:</p>\n<p>okay...</p>\n<p>the 'list add' only uses 2 parameters, and your example uses 3 (assuming this example of mine does indeed work, which you've adjusted for your own use), and you want it to use only 2 parameters, correct?</p>\n<p>this means you're taking/using the 'name_of_object.name_of_attribute', but the 'GetAttribute' requires it to get split into:</p>\n<ol>\n<li>an Object Value</li>\n<li>a String Value</li>\n</ol>\n<p>I'm not sure if you can directly do this or not:</p>\n<p>string_variable_1 = ToString (name_of_object.name_of_attribute)</p>\n<p>and then hopefully be able to use the String Manipulation Functions on 'string_variable_1' to extract 'name_of_object' and 'name_of_attribute' from it, as is required by/for-using the 'GetAttribute':</p>\n<p>object_variable = GetObject (name_of_object)</p>\n<p>string_variable_2 = name_of_attribute</p>\n<p>if (GetAttribute (object_variable, string_variable_2) = \"displaylist\")</p>\n<hr>\n<p>you're basically trying to do the reverse of 'GetAttribute':</p>\n<p>the 'GetAttribute' takes an Object Value and a 'name_of_attribute' String Value (2 values) and combines them into an Attribute Value: name_of_object.name_of_attribute (one value)</p>\n<p>you want to use only 1 value (as one parameter, and the other parameter is the 'value' parameter, to match up with the 'list add', instead of having 3 parameters/values: object value, name of attribute string value, value)</p>\n<p>so, you're trying to do the reverse of the 'GetAttribute', splitting the Attribute up, into its Object and its name of attribute String</p>\n<hr>\n<p>list add (ATTRIBUTE: parameter/value 1+2, VALUE: parameter/value 3)</p>\n<p>then in the scripting split ATTRIBUTE into 2 separate values:</p>\n<p>OBJECT: parameter/value 1<br>\nSTRING: 'name of attribute' parameter/value 2<br>\nand<br>\nVALUE: parameter/value 3</p>\n<p>for the 'GetAttribute' to use:</p>\n<p>GetAttribute (OBJECT, STRING) = \"VALUE\"</p>\n<hr>\n<p>as opposed to using a Function with the 3 values/parameters</p>\n\n",
      "PostDate": "2018-04-15T06:43:49.4532958Z",
      "LastEditDate": "2018-04-15T07:03:11.5609291Z",
      "link": null
    },
    {
      "PostId": "f7403c10-4114-4e6c-9b50-2a605f204164",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It doesn't do what I'm trying to do.\r\n\r\nI want it to take the same, exact parameters as ```list add```.\r\n\r\nQuest knows the parameter I'm passing.  I'm certain of that, because this changes the attribute's value:\r\n\r\n```\r\n  <function name=\"ListAdd\" parameters=\"list, value\">\r\n    if (not EndsWith(TypeOf(list),\"list\")) {\r\n      error (\"ListAdd: \"+list+\" is not a list!\")\r\n    }\r\n    if (not ListContains(list,value)) {\r\n      list add (list, value)\r\n    }\r\n  </function>\r\n```\r\n\r\n---\r\nIf I do ```ListAdd(Stimpy.alt, \"Ren\")```, the player will be able to refer to Stimpy as \"Ren\".\r\n\r\nSo, the script knows that it is dealing with ```Stimpy.alt```.  I want it to do something special when dealing with ```Stimpy.*verbs```, but I can't get ```list``` to tell me anything about itself besides the contents of its list inside of my script.\r\n\r\nI'm thinking this isn't possible without fooling around deep in the source code.",
      "EditableFormat": "markdown",
      "HTML": "<p>It doesn't do what I'm trying to do.</p>\n<p>I want it to take the same, exact parameters as <code>list add</code>.</p>\n<p>Quest knows the parameter I'm passing.  I'm certain of that, because this changes the attribute's value:</p>\n<pre><code>  &lt;function name=\"ListAdd\" parameters=\"list, value\"&gt;\n    if (not EndsWith(TypeOf(list),\"list\")) {\n      error (\"ListAdd: \"+list+\" is not a list!\")\n    }\n    if (not ListContains(list,value)) {\n      list add (list, value)\n    }\n  &lt;/function&gt;\n</code></pre>\n<hr>\n<p>If I do <code>ListAdd(Stimpy.alt, \"Ren\")</code>, the player will be able to refer to Stimpy as \"Ren\".</p>\n<p>So, the script knows that it is dealing with <code>Stimpy.alt</code>.  I want it to do something special when dealing with <code>Stimpy.*verbs</code>, but I can't get <code>list</code> to tell me anything about itself besides the contents of its list inside of my script.</p>\n<p>I'm thinking this isn't possible without fooling around deep in the source code.</p>\n\n",
      "PostDate": "2018-04-15T06:58:21.9274374Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d22a282d-b2ad-4090-894b-169d0db25e1d",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">  you're trying to do the reverse of the 'GetAttribute'\r\n\r\nSort of, but not really.\r\n\r\nQuest knows what object and attribute I'm passing to the function.  I just want it to tell me which one it is, rather than telling me its value.\r\n\r\n---\r\nThings I tried before creating this thread:\r\n\r\n```ToString(list)``` helps nothing.  It turns the list into a string, just like ```msg(list)``` would.\r\n\r\n```Split(list, \".\")``` throws an error, because it is dealing with a list, not a variable.\r\n\r\n```JS.console.log(list)``` sends an array to the console.\r\n\r\n```Log(list)``` throws an error because you can only pass strings to the log.\r\n\r\n```list.name``` is non-existent.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>you're trying to do the reverse of the 'GetAttribute'</p>\n</blockquote>\n<p>Sort of, but not really.</p>\n<p>Quest knows what object and attribute I'm passing to the function.  I just want it to tell me which one it is, rather than telling me its value.</p>\n<hr>\n<p>Things I tried before creating this thread:</p>\n<p><code>ToString(list)</code> helps nothing.  It turns the list into a string, just like <code>msg(list)</code> would.</p>\n<p><code>Split(list, \".\")</code> throws an error, because it is dealing with a list, not a variable.</p>\n<p><code>JS.console.log(list)</code> sends an array to the console.</p>\n<p><code>Log(list)</code> throws an error because you can only pass strings to the log.</p>\n<p><code>list.name</code> is non-existent.</p>\n\n",
      "PostDate": "2018-04-15T07:03:46.8081376Z",
      "LastEditDate": "2018-04-15T07:07:22.4357033Z",
      "link": null
    },
    {
      "PostId": "d4cbc51b-0ef3-4b58-a8ce-13bdb8505974",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "does the 'GetAttribute' work in checking/getting the name of the Attribute?\r\n\r\n(look at my previous post, I just edited it, trying to explain that you're going to have to split your 'Attribute' parameter into its 2 parts: object and 'name of attribute' string, for you to then use the 'GetAttribute')\r\n\r\ndoes your 3 parameter function adaptation of mine work? does it enable you to check the attribute (=\"alt\", EndsWith (\"verbs\"), =\"displayverbs\", etc etc etc) ???\r\n\r\nif it does... then it's now just a matter of how to (if it can be done, though this should be possible) convert the single parameter of an 'attribute' into its 2 parts, so you can use the GetAttribute, while thus keeping your function to only 2 parameters ( attribute (object+string), value), just like the 'list add' function, instead of using 3 parameters (object, string, value)",
      "EditableFormat": "markdown",
      "HTML": "<p>does the 'GetAttribute' work in checking/getting the name of the Attribute?</p>\n<p>(look at my previous post, I just edited it, trying to explain that you're going to have to split your 'Attribute' parameter into its 2 parts: object and 'name of attribute' string, for you to then use the 'GetAttribute')</p>\n<p>does your 3 parameter function adaptation of mine work? does it enable you to check the attribute (=\"alt\", EndsWith (\"verbs\"), =\"displayverbs\", etc etc etc) ???</p>\n<p>if it does... then it's now just a matter of how to (if it can be done, though this should be possible) convert the single parameter of an 'attribute' into its 2 parts, so you can use the GetAttribute, while thus keeping your function to only 2 parameters ( attribute (object+string), value), just like the 'list add' function, instead of using 3 parameters (object, string, value)</p>\n\n",
      "PostDate": "2018-04-15T07:07:56.5822377Z",
      "LastEditDate": "2018-04-15T07:10:01.3968926Z",
      "link": null
    },
    {
      "PostId": "91f2a97d-bebb-4112-9310-28974633a1b8",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n\r\n------------------\r\n\r\nif the 'ToString' works... than you can use the String Manipulation Functions to extract the object and 'name of attribute' string from it, which then can be put into the GetAttribute, as the 'GetAttribute' can't directly take an Attribute (object+string)\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/#string\r\n\r\nfor example...\r\n\r\n```\r\nexample_object.example_stringlist_attribute = NewStringList ()\r\nlist add (example_object.example_stringlist_attribute, \"red\")\r\nlist add (example_object.example_stringlist_attribute, \"blue\")\r\nlist add (example_object.example_stringlist_attribute, \"yellow\")\r\n\r\n// ---------------\r\n\r\nI have extra parameters just to make the function more useful/dynamic for your use of it, so it otherwise, still keeps only the same 2 parameters of the 'list add', that you want\r\n\r\n// -------------\r\n\r\ncustom_list_manipulation_function (example_object.example_stringlist_attribute, \"example_stringlist_attribute\", \"green\", \"add\")\r\n\r\n// -------------\r\n\r\n<function name=\"custom_list_manipulation_function\" parameters=\"attribute_parameter, checking_value_parameter, manipulation_value_parameter, manipulation_operation_string_parameter\">\r\n\r\n  attribute_converted_into_a_string_variable = ToString (attribute_parameter) // does this work or not? if not... hopefully there's some other method/way... hmm... lol\r\n\r\n  dot_location_list_count_integer_variable = Instr (attribute_converted_into_a_string_variable, \".\")\r\n\r\n  extracted_name_of_object_string = Mid (attribute_converted_into_a_string_variable, 1, dot_location_list_count_integer_variable - 2)\r\n\r\n  extracted_name_of_attribute_string = Mid (attribute_converted_into_a_string_variable, dot_location_list_count_integer_variable + 1)\r\n\r\n  object_variable = GetObject (extracted_name_of_object_string)\r\n\r\n  if (GetAttribute (object_variable, extracted_name_of_attribute_string) = checking_value_parameter) {\r\n    if (manipulation_operation_string_parameter = \"add\") {\r\n      if (not ListContains (attribute_parameter, manipulation_value_parameter) {\r\n        list add (attribute_parameter, manipulation_value_parameter)\r\n      } else {\r\n        msg (\"ERROR/BLAH\")\r\n      }\r\n    } else if (manipulation_operation_string_parameter = \"remove\") {\r\n      if (ListContains (attribute_parameter, manipulation_value_parameter) {\r\n        list remove (attribute_parameter, manipulation_value_parameter)\r\n      } else {\r\n        msg (\"ERROR/BLAH\")\r\n      }\r\n    } else {\r\n      msg (\"ERROR/BLAH\")\r\n    }\r\n  } else {\r\n    msg (\"ERROR/BLAH\")\r\n  }\r\n\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>if the 'ToString' works... than you can use the String Manipulation Functions to extract the object and 'name of attribute' string from it, which then can be put into the GetAttribute, as the 'GetAttribute' can't directly take an Attribute (object+string)</p>\n<p>http://docs.textadventures.co.uk/quest/functions/#string</p>\n<p>for example...</p>\n<pre><code>example_object.example_stringlist_attribute = NewStringList ()\nlist add (example_object.example_stringlist_attribute, \"red\")\nlist add (example_object.example_stringlist_attribute, \"blue\")\nlist add (example_object.example_stringlist_attribute, \"yellow\")\n\n// ---------------\n\nI have extra parameters just to make the function more useful/dynamic for your use of it, so it otherwise, still keeps only the same 2 parameters of the 'list add', that you want\n\n// -------------\n\ncustom_list_manipulation_function (example_object.example_stringlist_attribute, \"example_stringlist_attribute\", \"green\", \"add\")\n\n// -------------\n\n&lt;function name=\"custom_list_manipulation_function\" parameters=\"attribute_parameter, checking_value_parameter, manipulation_value_parameter, manipulation_operation_string_parameter\"&gt;\n\n  attribute_converted_into_a_string_variable = ToString (attribute_parameter) // does this work or not? if not... hopefully there's some other method/way... hmm... lol\n\n  dot_location_list_count_integer_variable = Instr (attribute_converted_into_a_string_variable, \".\")\n\n  extracted_name_of_object_string = Mid (attribute_converted_into_a_string_variable, 1, dot_location_list_count_integer_variable - 2)\n\n  extracted_name_of_attribute_string = Mid (attribute_converted_into_a_string_variable, dot_location_list_count_integer_variable + 1)\n\n  object_variable = GetObject (extracted_name_of_object_string)\n\n  if (GetAttribute (object_variable, extracted_name_of_attribute_string) = checking_value_parameter) {\n    if (manipulation_operation_string_parameter = \"add\") {\n      if (not ListContains (attribute_parameter, manipulation_value_parameter) {\n        list add (attribute_parameter, manipulation_value_parameter)\n      } else {\n        msg (\"ERROR/BLAH\")\n      }\n    } else if (manipulation_operation_string_parameter = \"remove\") {\n      if (ListContains (attribute_parameter, manipulation_value_parameter) {\n        list remove (attribute_parameter, manipulation_value_parameter)\n      } else {\n        msg (\"ERROR/BLAH\")\n      }\n    } else {\n      msg (\"ERROR/BLAH\")\n    }\n  } else {\n    msg (\"ERROR/BLAH\")\n  }\n\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2018-04-15T07:37:57.1716507Z",
      "LastEditDate": "2018-04-15T07:49:25.5059106Z",
      "link": null
    },
    {
      "PostId": "7e92f6ab-4b47-44c9-a37a-27ab94be1600",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> does the 'GetAttribute' work in checking/getting the name of the Attribute?\r\n\r\nIt would if I wanted the function to have an ```object``` parameter.  I do not.  I want it to have the same, exact parameters as ```list add```.\r\n\r\n---\r\n> does your 3 parameter function adaptation of mine work?\r\n\r\nTotally, but that is not at all what I'm wanting to do.\r\n\r\n---\r\n>if it does... then it's now just a matter of how to (if it can be done, though this should be possible) convert the single parameter of an 'attribute' into its 2 parts, so you can use the GetAttribute, while thus keeping your function to only 2 parameters ( attribute (object+string), value), just like the 'list add' function, instead of using 3 parameters (object, string, value)\r\n\r\nNow you're with me.  \r\n\r\nGo back through this thread and read all the stuff that I've posted having tried.\r\n\r\n---\r\n> if the 'ToString' works...\r\n\r\n```ToString(list)``` helps nothing. It turns the list into a string, just like ```msg(list)``` would.  I want a function like ```TellMeWhatParameterWasPassedInsteadOfItsValue(list)```, which would return ```thing.inventoryverbs```.  Even if that returned a string, I could do this:\r\n```\r\nif (not ListContains(list, value)){\r\n  arr = Split (TellMeWhatParameterWasPassedInsteadOfItsValue(list), \".\")\r\n  o = arr[0]\r\n  o = GetObject(o)\r\n  att = arr[1]\r\n  set (o, att, list + value)\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>does the 'GetAttribute' work in checking/getting the name of the Attribute?</p>\n</blockquote>\n<p>It would if I wanted the function to have an <code>object</code> parameter.  I do not.  I want it to have the same, exact parameters as <code>list add</code>.</p>\n<hr>\n<blockquote>\n<p>does your 3 parameter function adaptation of mine work?</p>\n</blockquote>\n<p>Totally, but that is not at all what I'm wanting to do.</p>\n<hr>\n<blockquote>\n<p>if it does... then it's now just a matter of how to (if it can be done, though this should be possible) convert the single parameter of an 'attribute' into its 2 parts, so you can use the GetAttribute, while thus keeping your function to only 2 parameters ( attribute (object+string), value), just like the 'list add' function, instead of using 3 parameters (object, string, value)</p>\n</blockquote>\n<p>Now you're with me.</p>\n<p>Go back through this thread and read all the stuff that I've posted having tried.</p>\n<hr>\n<blockquote>\n<p>if the 'ToString' works...</p>\n</blockquote>\n<p><code>ToString(list)</code> helps nothing. It turns the list into a string, just like <code>msg(list)</code> would.  I want a function like <code>TellMeWhatParameterWasPassedInsteadOfItsValue(list)</code>, which would return <code>thing.inventoryverbs</code>.  Even if that returned a string, I could do this:</p>\n<pre><code>if (not ListContains(list, value)){\n  arr = Split (TellMeWhatParameterWasPassedInsteadOfItsValue(list), \".\")\n  o = arr[0]\n  o = GetObject(o)\n  att = arr[1]\n  set (o, att, list + value)\n}\n</code></pre>\n\n",
      "PostDate": "2018-04-15T07:53:59.7025599Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7e0322ca-d1d6-4e11-8c93-9969a9e7d05f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "P.S.\r\n\r\nyou may be able to do this as well:\r\n\r\n```\r\nif (TypeOf (GetAttribute (object_variable, extracted_name_of_attribute_string)) = \"stringlist\") {\r\n  if (GetAttribute (object_variable, extracted_name_of_attribute_string)) = checking_value_parameter) {\r\n```\r\n\r\nso, my edited code with it added to it:\r\n\r\n```\r\nexample_object.example_stringlist_attribute = NewStringList ()\r\nlist add (example_object.example_stringlist_attribute, \"red\")\r\nlist add (example_object.example_stringlist_attribute, \"blue\")\r\nlist add (example_object.example_stringlist_attribute, \"yellow\")\r\n\r\n// ---------------\r\n\r\nI have extra parameters just to make the function more useful/dynamic for your use of it, so it otherwise, still keeps only the same 2 parameters of the 'list add', that you want\r\n\r\n// -------------\r\n\r\ncustom_list_manipulation_function (example_object.example_stringlist_attribute, \"example_stringlist_attribute\", \"green\", \"add\")\r\n\r\n// -------------\r\n\r\n<function name=\"custom_list_manipulation_function\" parameters=\"attribute_parameter, checking_value_parameter, manipulation_value_parameter, manipulation_operation_string_parameter\">\r\n\r\n  attribute_converted_into_a_string_variable = ToString (attribute_parameter) // does this work or not? if not... hopefully there's some other method/way... hmm... lol\r\n\r\n  dot_location_list_count_integer_variable = Instr (attribute_converted_into_a_string_variable, \".\")\r\n\r\n  extracted_name_of_object_string = Mid (attribute_converted_into_a_string_variable, 1, dot_location_list_count_integer_variable - 2)\r\n\r\n  extracted_name_of_attribute_string = Mid (attribute_converted_into_a_string_variable, dot_location_list_count_integer_variable + 1)\r\n\r\n  object_variable = GetObject (extracted_name_of_object_string)\r\n\r\n  if (TypeOf (GetAttribute (object_variable, extracted_name_of_attribute_string)) = \"stringlist\") {\r\n    if (GetAttribute (object_variable, extracted_name_of_attribute_string) = checking_value_parameter) {\r\n      if (manipulation_operation_string_parameter = \"add\") {\r\n        if (not ListContains (attribute_parameter, manipulation_value_parameter) {\r\n          list add (attribute_parameter, manipulation_value_parameter)\r\n        } else {\r\n          msg (\"ERROR/BLAH\")\r\n        }\r\n      } else if (manipulation_operation_string_parameter = \"remove\") {\r\n        if (ListContains (attribute_parameter, manipulation_value_parameter) {\r\n          list remove (attribute_parameter, manipulation_value_parameter)\r\n        } else {\r\n          msg (\"ERROR/BLAH\")\r\n        }\r\n      } else {\r\n        msg (\"ERROR/BLAH\")\r\n      }\r\n    } else {\r\n      msg (\"ERROR/BLAH\")\r\n    }\r\n  } else {\r\n    msg (\"ERROR/BLAH\")\r\n  }\r\n\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>P.S.</p>\n<p>you may be able to do this as well:</p>\n<pre><code>if (TypeOf (GetAttribute (object_variable, extracted_name_of_attribute_string)) = \"stringlist\") {\n  if (GetAttribute (object_variable, extracted_name_of_attribute_string)) = checking_value_parameter) {\n</code></pre>\n<p>so, my edited code with it added to it:</p>\n<pre><code>example_object.example_stringlist_attribute = NewStringList ()\nlist add (example_object.example_stringlist_attribute, \"red\")\nlist add (example_object.example_stringlist_attribute, \"blue\")\nlist add (example_object.example_stringlist_attribute, \"yellow\")\n\n// ---------------\n\nI have extra parameters just to make the function more useful/dynamic for your use of it, so it otherwise, still keeps only the same 2 parameters of the 'list add', that you want\n\n// -------------\n\ncustom_list_manipulation_function (example_object.example_stringlist_attribute, \"example_stringlist_attribute\", \"green\", \"add\")\n\n// -------------\n\n&lt;function name=\"custom_list_manipulation_function\" parameters=\"attribute_parameter, checking_value_parameter, manipulation_value_parameter, manipulation_operation_string_parameter\"&gt;\n\n  attribute_converted_into_a_string_variable = ToString (attribute_parameter) // does this work or not? if not... hopefully there's some other method/way... hmm... lol\n\n  dot_location_list_count_integer_variable = Instr (attribute_converted_into_a_string_variable, \".\")\n\n  extracted_name_of_object_string = Mid (attribute_converted_into_a_string_variable, 1, dot_location_list_count_integer_variable - 2)\n\n  extracted_name_of_attribute_string = Mid (attribute_converted_into_a_string_variable, dot_location_list_count_integer_variable + 1)\n\n  object_variable = GetObject (extracted_name_of_object_string)\n\n  if (TypeOf (GetAttribute (object_variable, extracted_name_of_attribute_string)) = \"stringlist\") {\n    if (GetAttribute (object_variable, extracted_name_of_attribute_string) = checking_value_parameter) {\n      if (manipulation_operation_string_parameter = \"add\") {\n        if (not ListContains (attribute_parameter, manipulation_value_parameter) {\n          list add (attribute_parameter, manipulation_value_parameter)\n        } else {\n          msg (\"ERROR/BLAH\")\n        }\n      } else if (manipulation_operation_string_parameter = \"remove\") {\n        if (ListContains (attribute_parameter, manipulation_value_parameter) {\n          list remove (attribute_parameter, manipulation_value_parameter)\n        } else {\n          msg (\"ERROR/BLAH\")\n        }\n      } else {\n        msg (\"ERROR/BLAH\")\n      }\n    } else {\n      msg (\"ERROR/BLAH\")\n    }\n  } else {\n    msg (\"ERROR/BLAH\")\n  }\n\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2018-04-15T07:55:34.5580485Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "439bc530-d12b-43ca-a6d3-7d33bbdc3016",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "hmm.. well, we can work with however it creates the String... might be a bit more (or maybe less) work with the String Manipulation Functions...\r\n\r\nI think if you look at my previous 2 posts with the big chunk of codes, I think you can understand what I've done and understand the concept/code design that needs to be done... but if not, let me know and we'll work on it together (I'll help)\r\n\r\n------\r\n\r\nwhat is the String that is created/displayed, when you do the 'ToString (NAME_OF_OBJECT.NAME_OF_ATTRIBUTE)'\r\n\r\n(too lazy to open up quest to test/see it myself, lol --- HK is always so lazy, likes theory crafting... then get burned cuz he was too lazy to just actually code/test it, lol)\r\n\r\nis it something like this?:\r\n\r\nObject: List: red, blue, yellow\r\n\r\n-------\r\n\r\nmy use of String Manipulation Functions, was based on it being able to direct convert the Attribute to a String:\r\n\r\nToString (NAME_OF_OBJECT.NAME_OF_ATTRIBUTE) ---> \"NAME_OF_ATTRIBUTE.NAME_OF_STRING\"\r\n\r\nwhich I then first found the integer position of the 'dot' via the 'Instr' String Manipulation Function, and then I can use that in the 'Mid' String Manipulation Function to extract the String of the 'NAME_OF_OBJECT' and the String of the 'NAME_OF_ATTRIBUTE', which I can then convert the 'NAME_OF_OBJECT' String into an Object via 'GetObject (NAME_OF_OBJECT)', and then now that I got the 2 needed values, I can the OBJECT value with the 'NAME_OF_ATTRIBUTE' String Value within the 'GetAttribute' Function\r\n\r\nbut we can also work with whatever the String is, such as if it's like this:\r\n\r\nObject: List: red, blue, yellow\r\n\r\nthough, it'll take more/less and/or different String Manipulation Function design/methods/ways to extr...\r\n\r\n----------------\r\n\r\nNVM!!!! WHOOPSY\r\n\r\n----------------\r\n\r\nya... we do got an issue... with the 'ToString' as it doesn't work... just realized... we got an issue if it displays/returns/gets something like this 'Object: List: red, blue, yellow' --- lol, whoopsy...\r\n\r\nhmm... hopefully something else can work to extract the 2 values we need... maybe .... 'Eval' Function? hmm... this might be not possible... I only just cuaght up to your thinkning KV.... sorry about being so stupid... sighs.",
      "EditableFormat": "markdown",
      "HTML": "<p>hmm.. well, we can work with however it creates the String... might be a bit more (or maybe less) work with the String Manipulation Functions...</p>\n<p>I think if you look at my previous 2 posts with the big chunk of codes, I think you can understand what I've done and understand the concept/code design that needs to be done... but if not, let me know and we'll work on it together (I'll help)</p>\n<hr>\n<p>what is the String that is created/displayed, when you do the 'ToString (NAME_OF_OBJECT.NAME_OF_ATTRIBUTE)'</p>\n<p>(too lazy to open up quest to test/see it myself, lol --- HK is always so lazy, likes theory crafting... then get burned cuz he was too lazy to just actually code/test it, lol)</p>\n<p>is it something like this?:</p>\n<p>Object: List: red, blue, yellow</p>\n<hr>\n<p>my use of String Manipulation Functions, was based on it being able to direct convert the Attribute to a String:</p>\n<p>ToString (NAME_OF_OBJECT.NAME_OF_ATTRIBUTE) ---&gt; \"NAME_OF_ATTRIBUTE.NAME_OF_STRING\"</p>\n<p>which I then first found the integer position of the 'dot' via the 'Instr' String Manipulation Function, and then I can use that in the 'Mid' String Manipulation Function to extract the String of the 'NAME_OF_OBJECT' and the String of the 'NAME_OF_ATTRIBUTE', which I can then convert the 'NAME_OF_OBJECT' String into an Object via 'GetObject (NAME_OF_OBJECT)', and then now that I got the 2 needed values, I can the OBJECT value with the 'NAME_OF_ATTRIBUTE' String Value within the 'GetAttribute' Function</p>\n<p>but we can also work with whatever the String is, such as if it's like this:</p>\n<p>Object: List: red, blue, yellow</p>\n<p>though, it'll take more/less and/or different String Manipulation Function design/methods/ways to extr...</p>\n<hr>\n<p>NVM!!!! WHOOPSY</p>\n<hr>\n<p>ya... we do got an issue... with the 'ToString' as it doesn't work... just realized... we got an issue if it displays/returns/gets something like this 'Object: List: red, blue, yellow' --- lol, whoopsy...</p>\n<p>hmm... hopefully something else can work to extract the 2 values we need... maybe .... 'Eval' Function? hmm... this might be not possible... I only just cuaght up to your thinkning KV.... sorry about being so stupid... sighs.</p>\n\n",
      "PostDate": "2018-04-15T07:59:37.5736066Z",
      "LastEditDate": "2018-04-15T08:11:15.946881Z",
      "link": null
    },
    {
      "PostId": "a01d32d0-3409-4678-9676-ce4a4f5b9c3f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I do not want any extra parameters.  Only the same, exact, two parameters as ```list add```.\r\n\r\nThe function I posted after your first example works, but that third parameter is exactly what I'm trying to avoid.\r\n\r\nI could make my function's first parameter have to be a string, like ```\"thing.displayverbs\"```, then break that down like I posted above, but, again, that would be changing the parameters, and I want it to take the same, exact, two parameters as ```list add```.\r\n\r\nThe only reason I'm creating this function is to avoid pointless errors.  When the list already contains the value, my function will just skip over adding the value, hence avoiding a pointless error during play.  I also want it to check whether or not it is modifying an inherited list before doing anything, and that is where I run into the issue.  Anything I try on ```list``` returns the list, and not ```thing.displayverbs``` or ```lamp.alt``` or whatever may have been passed as a parameter.\r\n\r\nI want ```ListAdd``` to be identical to ```list add```, only better.  For ```ListAdd``` to be perfect, it would clone an inherited list before attempting to modify it.  As far as I can tell, there is no way to check this.  So, authors will still need to clone inherited attribute lists before using ```ListAdd``` or ```ListRemove```.  (Sorry, authors.)\r\n\r\n---\r\nHere is an example game, in which I include every way to try to see what ```list``` is which doesn't throw an error, none of which return the parameter I pass, which is ```thing.displayverbs```.  They all return the value of that attribute.  BUT the function still modifies that attribute, so Quest definitely knows that it's dealing with ```thing.displayverbs``` within this script.\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"ListAdd\">\r\n    <gameid>850c8ad7-0432-4e1d-b550-dd066a8c9b94</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <enter type=\"script\">\r\n      thing.displayverbs = ListExclude(thing.displayverbs,\"\")\r\n      ListAdd (thing.displayverbs, \"Shake\")\r\n    </enter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"thing\">\r\n      <inherit name=\"editor_object\" />\r\n    </object>\r\n  </object>\r\n  <function name=\"ListAdd\" parameters=\"list, value\">\r\n    if (not EndsWith(TypeOf(list),\"list\")) {\r\n      error (\"ListAdd: \"+list+\" is not a list!\")\r\n    }\r\n    msg(list)\r\n    msg(TypeOf(list))\r\n    msg(ToString(list))\r\n    JS.console.log(list)\r\n    if (not ListContains(list,value)) {\r\n      list add (list, value)\r\n    }\r\n  </function>\r\n</asl>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I do not want any extra parameters.  Only the same, exact, two parameters as <code>list add</code>.</p>\n<p>The function I posted after your first example works, but that third parameter is exactly what I'm trying to avoid.</p>\n<p>I could make my function's first parameter have to be a string, like <code>\"thing.displayverbs\"</code>, then break that down like I posted above, but, again, that would be changing the parameters, and I want it to take the same, exact, two parameters as <code>list add</code>.</p>\n<p>The only reason I'm creating this function is to avoid pointless errors.  When the list already contains the value, my function will just skip over adding the value, hence avoiding a pointless error during play.  I also want it to check whether or not it is modifying an inherited list before doing anything, and that is where I run into the issue.  Anything I try on <code>list</code> returns the list, and not <code>thing.displayverbs</code> or <code>lamp.alt</code> or whatever may have been passed as a parameter.</p>\n<p>I want <code>ListAdd</code> to be identical to <code>list add</code>, only better.  For <code>ListAdd</code> to be perfect, it would clone an inherited list before attempting to modify it.  As far as I can tell, there is no way to check this.  So, authors will still need to clone inherited attribute lists before using <code>ListAdd</code> or <code>ListRemove</code>.  (Sorry, authors.)</p>\n<hr>\n<p>Here is an example game, in which I include every way to try to see what <code>list</code> is which doesn't throw an error, none of which return the parameter I pass, which is <code>thing.displayverbs</code>.  They all return the value of that attribute.  BUT the function still modifies that attribute, so Quest definitely knows that it's dealing with <code>thing.displayverbs</code> within this script.</p>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"ListAdd\"&gt;\n    &lt;gameid&gt;850c8ad7-0432-4e1d-b550-dd066a8c9b94&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;enter type=\"script\"&gt;\n      thing.displayverbs = ListExclude(thing.displayverbs,\"\")\n      ListAdd (thing.displayverbs, \"Shake\")\n    &lt;/enter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"thing\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;function name=\"ListAdd\" parameters=\"list, value\"&gt;\n    if (not EndsWith(TypeOf(list),\"list\")) {\n      error (\"ListAdd: \"+list+\" is not a list!\")\n    }\n    msg(list)\n    msg(TypeOf(list))\n    msg(ToString(list))\n    JS.console.log(list)\n    if (not ListContains(list,value)) {\n      list add (list, value)\n    }\n  &lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2018-04-15T08:13:35.7522Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6a6d7c48-54e4-48bd-93fd-ce444c8c30aa",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "hmm... how to convert an Attribute (extracting its 'name_of_object' and 'name_of_attribute') into a String... hmm....\r\n\r\n------\r\n\r\nprobably going to need Pixie's expertise (or mrangel's), as I'm stumped, now that I've no idea how to convert an Attribute into a String (meaning the string contains/extracts its two values: name_of_object and name_of_attribute)\r\n\r\n-----\r\n\r\nhmm....\r\n\r\nyou might just have to use an extra parameter(s) ... as there might be no way to do it that directly with only the Attribute (1/2 parameters that you want to have like 'list add') and the 'value' Parameter (the other 1/2 parameter)",
      "EditableFormat": "markdown",
      "HTML": "<p>hmm... how to convert an Attribute (extracting its 'name_of_object' and 'name_of_attribute') into a String... hmm....</p>\n<hr>\n<p>probably going to need Pixie's expertise (or mrangel's), as I'm stumped, now that I've no idea how to convert an Attribute into a String (meaning the string contains/extracts its two values: name_of_object and name_of_attribute)</p>\n<hr>\n<p>hmm....</p>\n<p>you might just have to use an extra parameter(s) ... as there might be no way to do it that directly with only the Attribute (1/2 parameters that you want to have like 'list add') and the 'value' Parameter (the other 1/2 parameter)</p>\n\n",
      "PostDate": "2018-04-15T08:14:29.6006002Z",
      "LastEditDate": "2018-04-15T08:20:51.3300348Z",
      "link": null
    },
    {
      "PostId": "0ddf7ba4-c4ee-48c7-8351-5614bba1c50e",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "well... there's a way around it... just thought of it... just now... lol\r\n\r\n...simply use a List Attribute within your Function's scripting, which has all of the names of the Attributes of that Object (or of ALL Attributes within the entire game, lol) ...\r\n\r\nas Attributes are global, they can trespass upon a Function with impunity lol...\r\n\r\nbut.. you still need a dynamic way of checking/determining/selecting what you want... which does require a parameter... as that is literally doing the selecting that is needed... hmm....\r\n\r\n--------------\r\n\r\nnever mind... we can use another Attribute to store the selection... hehe... HK's brain is now thinking... outside of the box... lol\r\n\r\n--------------\r\n\r\n```\r\nexample_object.all_attributes_stringlist_attribute = NewStringList ()\r\nlist add (example_object.all_attributes_stringlist_attribute, \"displayverbs\")\r\nlist add (example_object.all_attributes_stringlist_attribute, \"inventoryverbs\")\r\nlist add (example_object.all_attributes_stringlist_attribute, \"alt\")\r\nlist add (example_object.all_attributes_stringlist_attribute, \"take\")\r\nlist add (example_object.all_attributes_stringlist_attribute, \"drop\")\r\nlist add (example_object.all_attributes_stringlist_attribute, \"parent\")\r\n\r\n// ---------\r\n\r\nmsg (\"selection?\")\r\nget input {\r\n  if (ListContains (example_object.all_attributes_stringlist_attribute, result)) {\r\n    // hmm... still am a bit stumped... argh...\r\n  }\r\n}\r\n\r\n// --------\r\n\r\n<function name=\"ListAdd\" parameters=\"list_attribute_parameter, value_parameter\">\r\n<function>\r\n```\r\n\r\n----------\r\n\r\nactually... still am stumped... HK's brain while working... was working wrongly... lol\r\n\r\nI'm just creating two functions (one function to handle all the stuff you don't want to change of the other 'ListAdd' function)... lol.... which isn't really what you want... hmm....\r\n\r\n------\r\n\r\nnot want you want...\r\n\r\nbut by in the same wrong vein as above... you can use the 'foreach' for both your passed in 'list attribute' Parameter and an outside selected list attribute, and then within the Function you can 'foreach' check if they got the same items... as a way around possibly not being able to extract/convert your list attribute parameter into its two values of 'object' and 'name_of_attribute'... not really what you want though... lol...",
      "EditableFormat": "markdown",
      "HTML": "<p>well... there's a way around it... just thought of it... just now... lol</p>\n<p>...simply use a List Attribute within your Function's scripting, which has all of the names of the Attributes of that Object (or of ALL Attributes within the entire game, lol) ...</p>\n<p>as Attributes are global, they can trespass upon a Function with impunity lol...</p>\n<p>but.. you still need a dynamic way of checking/determining/selecting what you want... which does require a parameter... as that is literally doing the selecting that is needed... hmm....</p>\n<hr>\n<p>never mind... we can use another Attribute to store the selection... hehe... HK's brain is now thinking... outside of the box... lol</p>\n<hr>\n<pre><code>example_object.all_attributes_stringlist_attribute = NewStringList ()\nlist add (example_object.all_attributes_stringlist_attribute, \"displayverbs\")\nlist add (example_object.all_attributes_stringlist_attribute, \"inventoryverbs\")\nlist add (example_object.all_attributes_stringlist_attribute, \"alt\")\nlist add (example_object.all_attributes_stringlist_attribute, \"take\")\nlist add (example_object.all_attributes_stringlist_attribute, \"drop\")\nlist add (example_object.all_attributes_stringlist_attribute, \"parent\")\n\n// ---------\n\nmsg (\"selection?\")\nget input {\n  if (ListContains (example_object.all_attributes_stringlist_attribute, result)) {\n    // hmm... still am a bit stumped... argh...\n  }\n}\n\n// --------\n\n&lt;function name=\"ListAdd\" parameters=\"list_attribute_parameter, value_parameter\"&gt;\n&lt;function&gt;\n</code></pre>\n<hr>\n<p>actually... still am stumped... HK's brain while working... was working wrongly... lol</p>\n<p>I'm just creating two functions (one function to handle all the stuff you don't want to change of the other 'ListAdd' function)... lol.... which isn't really what you want... hmm....</p>\n<hr>\n<p>not want you want...</p>\n<p>but by in the same wrong vein as above... you can use the 'foreach' for both your passed in 'list attribute' Parameter and an outside selected list attribute, and then within the Function you can 'foreach' check if they got the same items... as a way around possibly not being able to extract/convert your list attribute parameter into its two values of 'object' and 'name_of_attribute'... not really what you want though... lol...</p>\n\n",
      "PostDate": "2018-04-15T08:35:04.043285Z",
      "LastEditDate": "2018-04-15T08:38:35.9910615Z",
      "link": null
    },
    {
      "PostId": "724b557c-f4df-42d3-aed2-7bf0c340ff9a",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "it's disappointing that this doesn't work, sighs\r\n\r\nstring_variable = example_object.example_stringlist_attribute.name\r\n\r\n--------\r\n\r\nmaybe the...\r\n\r\n'GetUniqueElementName'\r\n\r\nwill work?",
      "EditableFormat": "markdown",
      "HTML": "<p>it's disappointing that this doesn't work, sighs</p>\n<p>string_variable = example_object.example_stringlist_attribute.name</p>\n<hr>\n<p>maybe the...</p>\n<p>'GetUniqueElementName'</p>\n<p>will work?</p>\n\n",
      "PostDate": "2018-04-15T08:47:48.9516054Z",
      "LastEditDate": "2018-04-15T08:48:49.3569359Z",
      "link": null
    },
    {
      "PostId": "6c1ff4ec-bbd7-440e-bfc7-537c5c537398",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> you can use the 'foreach' for both your passed in 'list attribute' Parameter and an outside selected list attribute, and then within the Function you can 'foreach' check if they got the same items\r\n\r\nHehehe.\r\n\r\nThat might change the display verbs of every object with \"Look at;Take\"!\r\n\r\n...and I tried ```GetUniqueElementName``` just for the heck of it, and that only accepts a string for the parameter, and it's doing something totally different than what we want.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>you can use the 'foreach' for both your passed in 'list attribute' Parameter and an outside selected list attribute, and then within the Function you can 'foreach' check if they got the same items</p>\n</blockquote>\n<p>Hehehe.</p>\n<p>That might change the display verbs of every object with \"Look at;Take\"!</p>\n<p>...and I tried <code>GetUniqueElementName</code> just for the heck of it, and that only accepts a string for the parameter, and it's doing something totally different than what we want.</p>\n\n",
      "PostDate": "2018-04-15T08:53:09.7832293Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "658c092c-8a53-4239-a9d1-8a74a663dbc7",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Quest knows the parameter I'm passing. I'm certain of that, because this changes the attribute's value:\r\n\r\nNo, it doesn't.\r\nLists are passed by reference.\r\n\r\nImagine that every list variable is actually a signpost, giving you directions to a place in memory where the actual list of items starts. You can have multiple signs pointing to the same list, and they can have different names. As long as you follow one of them and change what it points to, then someone following any of the others will see your changes. But the list doesn't know what names are printed on the signs, and it doesn't know where the signs are.\r\n\r\n_BUT_… the equality operator compares two signposts to see if they point to the same place…\r\nYou could loop over AllObjects, and then loop over `ListExclude(GetAttributeNames(obj, true), GetAttributeNames(obj, false))` to find all their inherited attributes, and see if any of them are equal to the list you're looking at. I wrote the function to do this, then realised it probably won't help you.\r\n\r\n\"Find any objects who have an attribute that's a signpost pointing to this location, and change all of them\". But I think you probably only want to change one; and this will change every instance of the type. Because they all point to the same actual list.\r\n\r\nOn the plus side, we now have a way to change a list attribute for all objects that inherit the same type :p\r\n```\r\n<function name=\"ListAdd\" parameters=\"list,value\">\r\n  if (not EndsWith(TypeOf(list), \"list\")) {\r\n    error (\"Not a list!\")\r\n  }\r\n  original_list = list\r\n  foreach (obj, AllObjects()) {\r\n    foreach (attribute, ListExclude(GetAttributeNames(obj, true), GetAttributeNames(obj, false))) {\r\n      if (Equal(GetAttribute(obj, attribute), original_list)) {\r\n        if (original_list = list) {\r\n          list = ListExclude(list, \"\")\r\n        }\r\n        set (object, attribute, list)\r\n      }\r\n    }\r\n  }\r\n  list add (list, value)\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Quest knows the parameter I'm passing. I'm certain of that, because this changes the attribute's value:</p>\n</blockquote>\n<p>No, it doesn't.<br>\nLists are passed by reference.</p>\n<p>Imagine that every list variable is actually a signpost, giving you directions to a place in memory where the actual list of items starts. You can have multiple signs pointing to the same list, and they can have different names. As long as you follow one of them and change what it points to, then someone following any of the others will see your changes. But the list doesn't know what names are printed on the signs, and it doesn't know where the signs are.</p>\n<p><em>BUT</em>… the equality operator compares two signposts to see if they point to the same place…<br>\nYou could loop over AllObjects, and then loop over <code>ListExclude(GetAttributeNames(obj, true), GetAttributeNames(obj, false))</code> to find all their inherited attributes, and see if any of them are equal to the list you're looking at. I wrote the function to do this, then realised it probably won't help you.</p>\n<p>\"Find any objects who have an attribute that's a signpost pointing to this location, and change all of them\". But I think you probably only want to change one; and this will change every instance of the type. Because they all point to the same actual list.</p>\n<p>On the plus side, we now have a way to change a list attribute for all objects that inherit the same type :p</p>\n<pre><code>&lt;function name=\"ListAdd\" parameters=\"list,value\"&gt;\n  if (not EndsWith(TypeOf(list), \"list\")) {\n    error (\"Not a list!\")\n  }\n  original_list = list\n  foreach (obj, AllObjects()) {\n    foreach (attribute, ListExclude(GetAttributeNames(obj, true), GetAttributeNames(obj, false))) {\n      if (Equal(GetAttribute(obj, attribute), original_list)) {\n        if (original_list = list) {\n          list = ListExclude(list, \"\")\n        }\n        set (object, attribute, list)\n      }\n    }\n  }\n  list add (list, value)\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2018-04-15T08:57:33.3674686Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e9ed386c-5ea5-4cf6-8766-2d28a5647867",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "personally... unless Pixie or mrangel (or you figure something out, lol), I'd just go with using/creating a Function with the extra parameters, as trying to keep just having an 'attribute' (and the 'value') parameter... is becoming too much of a nightmare due to seemingly having no way of converting an attribute into a string of its two (or three) string values of a 'name of object' and 'name of attribute (and the 'dot' string value)\r\n\r\n-----\r\n\r\nand also...\r\n\r\nI'm pretty sure that using extra parameters is more efficient code wise than whatever scripting that might be possible, and it's easier for us than trying to come up with some really fancy (and hopefully concise/short/\"simple\") scripting...\r\n\r\neasier to pass extra needed data than trying to convert the limited data into what you need...",
      "EditableFormat": "markdown",
      "HTML": "<p>personally... unless Pixie or mrangel (or you figure something out, lol), I'd just go with using/creating a Function with the extra parameters, as trying to keep just having an 'attribute' (and the 'value') parameter... is becoming too much of a nightmare due to seemingly having no way of converting an attribute into a string of its two (or three) string values of a 'name of object' and 'name of attribute (and the 'dot' string value)</p>\n<hr>\n<p>and also...</p>\n<p>I'm pretty sure that using extra parameters is more efficient code wise than whatever scripting that might be possible, and it's easier for us than trying to come up with some really fancy (and hopefully concise/short/\"simple\") scripting...</p>\n<p>easier to pass extra needed data than trying to convert the limited data into what you need...</p>\n\n",
      "PostDate": "2018-04-15T08:59:50.2269046Z",
      "LastEditDate": "2018-04-15T09:02:49.7838657Z",
      "link": null
    },
    {
      "PostId": "9123eb76-bc92-4a45-96cc-931bc944fcfd",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "hmm...\r\n\r\nso there's no way of getting the 'name' data used as the pointer to the address... that sucks...\r\n\r\ncreate (\"katana\") // katana.name = \"katana\"\r\n\r\nkatana.damage = 50\r\n\r\nplayer.weapon = katana\r\n\r\nplayer.weapon.name // works ( = \"katana\") // object.pointer.value_(its 'name' string value)_of_the_data_at_the_pointer's_memory_location\r\n\r\nplayer.weapon.damage // works // object.pointer.value_(its 'damage' integer value)_of_the_data_at_the_pointer's_memory_location\r\n\r\nbut there's no way to extract/get this, I guess, sighs:\r\n\r\nplayer.weapon.name = \"weapon\"\r\nor\r\nweapon.name = \"weapon\"\r\n\r\nI thought that the 'name of object' and 'name of attribute' would be stored as data... that you could access... like everything else... but I guess not...\r\n\r\nwhen you create an Attribute, it doesn't store its 'name of object' and 'attribute name' (or its 'name_of_object.name_of_attribute') as part of its data (as 'string' data) ??? ....that sucks...\r\n\r\nAn Attribute should create and store a pointer to its current 'name of object' and its 'name of attribute' (or a pointer to a 'name_of_object.name_of_attribute' string data being stored)...\r\n\r\n----------\r\n\r\n@ mrangel:\r\n\r\nis there also no way of being able to convert an Attribute Value (NAME_OF_OBJECT.NAME_OF_ATTRIBUTE) into a String Value (\"NAME_OF_OBJECT.NAME_OF_ATTRIBUTE\"), or to \"extract/determine\" its two parts (NAME_OF_OBJECT and NAME_OF_ATTRIBUTE), at all, ???",
      "EditableFormat": "markdown",
      "HTML": "<p>hmm...</p>\n<p>so there's no way of getting the 'name' data used as the pointer to the address... that sucks...</p>\n<p>create (\"katana\") // katana.name = \"katana\"</p>\n<p>katana.damage = 50</p>\n<p>player.weapon = katana</p>\n<p>player.weapon.name // works ( = \"katana\") // object.pointer.value_(its 'name' string value)_of_the_data_at_the_pointer's_memory_location</p>\n<p>player.weapon.damage // works // object.pointer.value_(its 'damage' integer value)_of_the_data_at_the_pointer's_memory_location</p>\n<p>but there's no way to extract/get this, I guess, sighs:</p>\n<p>player.weapon.name = \"weapon\"<br>\nor<br>\nweapon.name = \"weapon\"</p>\n<p>I thought that the 'name of object' and 'name of attribute' would be stored as data... that you could access... like everything else... but I guess not...</p>\n<p>when you create an Attribute, it doesn't store its 'name of object' and 'attribute name' (or its 'name_of_object.name_of_attribute') as part of its data (as 'string' data) ??? ....that sucks...</p>\n<p>An Attribute should create and store a pointer to its current 'name of object' and its 'name of attribute' (or a pointer to a 'name_of_object.name_of_attribute' string data being stored)...</p>\n<hr>\n<p>@ mrangel:</p>\n<p>is there also no way of being able to convert an Attribute Value (NAME_OF_OBJECT.NAME_OF_ATTRIBUTE) into a String Value (\"NAME_OF_OBJECT.NAME_OF_ATTRIBUTE\"), or to \"extract/determine\" its two parts (NAME_OF_OBJECT and NAME_OF_ATTRIBUTE), at all, ???</p>\n\n",
      "PostDate": "2018-04-15T09:12:21.8604577Z",
      "LastEditDate": "2018-04-15T09:44:35.7508271Z",
      "link": null
    },
    {
      "PostId": "a3de17b6-d85d-40cd-8b19-8848ef263494",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Better metaphor:\r\n\r\nImagine your variables are pieces of paper. An integer is a piece of paper with a number on. A string is a piece of paper with words on.\r\nA list is a piece of paper with a treasure map on, telling you where to find a pile of paper.\r\n\r\nWhen you call a function, you're giving it a photocopy of some variables, and telling it to do something with them. In the case of a string, you have no way of seeing what the function has done with that photocopy unless it returns it to you.\r\n\r\nWith a list, if the function modifies it, you can tell. Because you and the function now have copies of the same map, so if the function puts a new item on top of the pile, you can follow the map yourself and see it.\r\n\r\nIn the case of inherited attributes, the stack of papers is inside some kind of display case. You can look at it, but not modify it. So you use ListExclude to make a copy of the whole list, and give the object a new map, pointing to your new list.\r\n\r\nSo your function here, you're giving the function a copy of a map, and a copy of some value. And you're telling it \"Go put this value on the pile of papers indicated by this map. If the pile is locked, copy it and change my map.\"\r\nIt can't do that, because it only has a copy of the map. Now, in the function I posted, it can search the whole world looking for maps identical to the one it's holding. I think that's not what you want; but it's the best you can do. Because the list doesn't tell you whose map you used to get to it.\r\n\r\nAnother example:\r\n```\r\nlist = NewStringList()\r\njohn.alt = list\r\nbob.alt = list\r\ndave.alt = list\r\nListAdd(list, \"That guy\")\r\n```\r\nYou said you want to get the object that the list belongs to. Which one? There are five maps pointing to the same list. John, Dave, and Bob all have a copy of the map. The variable \"list\" itself if a copy of the map. And the variable within the ListAdd function is another copy.",
      "EditableFormat": "markdown",
      "HTML": "<p>Better metaphor:</p>\n<p>Imagine your variables are pieces of paper. An integer is a piece of paper with a number on. A string is a piece of paper with words on.<br>\nA list is a piece of paper with a treasure map on, telling you where to find a pile of paper.</p>\n<p>When you call a function, you're giving it a photocopy of some variables, and telling it to do something with them. In the case of a string, you have no way of seeing what the function has done with that photocopy unless it returns it to you.</p>\n<p>With a list, if the function modifies it, you can tell. Because you and the function now have copies of the same map, so if the function puts a new item on top of the pile, you can follow the map yourself and see it.</p>\n<p>In the case of inherited attributes, the stack of papers is inside some kind of display case. You can look at it, but not modify it. So you use ListExclude to make a copy of the whole list, and give the object a new map, pointing to your new list.</p>\n<p>So your function here, you're giving the function a copy of a map, and a copy of some value. And you're telling it \"Go put this value on the pile of papers indicated by this map. If the pile is locked, copy it and change my map.\"<br>\nIt can't do that, because it only has a copy of the map. Now, in the function I posted, it can search the whole world looking for maps identical to the one it's holding. I think that's not what you want; but it's the best you can do. Because the list doesn't tell you whose map you used to get to it.</p>\n<p>Another example:</p>\n<pre><code>list = NewStringList()\njohn.alt = list\nbob.alt = list\ndave.alt = list\nListAdd(list, \"That guy\")\n</code></pre>\n<p>You said you want to get the object that the list belongs to. Which one? There are five maps pointing to the same list. John, Dave, and Bob all have a copy of the map. The variable \"list\" itself if a copy of the map. And the variable within the ListAdd function is another copy.</p>\n\n",
      "PostDate": "2018-04-15T09:20:28.39694Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c8ffd460-3434-4436-b500-6f067836cd7b",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I was trying to avoid iterating through everything.  I thought it would add that to every list which had the same values.\r\n\r\n---\r\n<s>```set``` throws the same inherited attribute error as ```list add```!\r\n\r\nSo, that does single out which object and attribute the script is dealing with (which was what I was trying to do), but it doesn't help my cause (because I thought ```set``` would work, and it doesn't).</s>\r\n\r\n```set``` does not throw an error when dealing with an inherited list, that code simply isn't firing.\r\n\r\nIf I put ```set (thing, \"displayverbs\", Split(\"Look at;Take:Shake\"))```, it works with no errors without cloning the list first.",
      "EditableFormat": "markdown",
      "HTML": "<p>I was trying to avoid iterating through everything.  I thought it would add that to every list which had the same values.</p>\n<hr>\n<p><s><code>set</code> throws the same inherited attribute error as <code>list add</code>!</s></p><s>\n</s><p><s>So, that does single out which object and attribute the script is dealing with (which was what I was trying to do), but it doesn't help my cause (because I thought <code>set</code> would work, and it doesn't).</s></p>\n<p><code>set</code> does not throw an error when dealing with an inherited list, that code simply isn't firing.</p>\n<p>If I put <code>set (thing, \"displayverbs\", Split(\"Look at;Take:Shake\"))</code>, it works with no errors without cloning the list first.</p>\n\n",
      "PostDate": "2018-04-15T09:32:38.2547705Z",
      "LastEditDate": "2018-04-15T10:25:52.5697875Z",
      "link": null
    },
    {
      "PostId": "7f5b36df-adf4-4936-ae21-438f9301a6d4",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> The variable \"list\" itself if a copy\r\n\r\nThat's how I always think of it, but these work:\r\n\r\n```list add (list, \"new thing\")```\r\n\r\n```list remove(list, \"old thing\")```\r\n\r\nSo, Quest knows what ```list``` is \"tied to\".\r\n\r\n---\r\nNote that doing this \"unties\" the ```list``` variable, and it will no longer effect ```thing.displayverbs```:\r\n\r\n```list = ListExclude(list,\"\")```\r\n\r\nDoing anything that begins ```list =``` redeclares the variable.\r\n\r\nThe only ways to modify it that I can find are ```list add``` or ```list remove```, and these will modify an inherited list.\r\n\r\nSo, the author will just have to make sure he or she clones an inherited list before using ```ListAdd``` (if they use my function).  Besides, that, it will not throw an error if the value already exists on the list.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>The variable \"list\" itself if a copy</p>\n</blockquote>\n<p>That's how I always think of it, but these work:</p>\n<p><code>list add (list, \"new thing\")</code></p>\n<p><code>list remove(list, \"old thing\")</code></p>\n<p>So, Quest knows what <code>list</code> is \"tied to\".</p>\n<hr>\n<p>Note that doing this \"unties\" the <code>list</code> variable, and it will no longer effect <code>thing.displayverbs</code>:</p>\n<p><code>list = ListExclude(list,\"\")</code></p>\n<p>Doing anything that begins <code>list =</code> redeclares the variable.</p>\n<p>The only ways to modify it that I can find are <code>list add</code> or <code>list remove</code>, and these will modify an inherited list.</p>\n<p>So, the author will just have to make sure he or she clones an inherited list before using <code>ListAdd</code> (if they use my function).  Besides, that, it will not throw an error if the value already exists on the list.</p>\n\n",
      "PostDate": "2018-04-15T09:39:26.3333695Z",
      "LastEditDate": "2018-04-15T10:26:44.1325112Z",
      "link": null
    },
    {
      "PostId": "101fc340-346d-4197-807d-e21d67c61314",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That works for me.\r\n\r\nI just tried it in my test game; `AddList(exit17.alt, \"downwind\")`. Adds an alias to all exits that inherit southwestdirection.\r\n(because objects that inherit a type all have maps directing them to the same actual list, and those maps are identical. So there's no possible way to tell whose map a copy was taken from to pass to the function)\r\n\r\nEdit: The function posted above has a typo, I have `object` instead of `obj` in the set function.",
      "EditableFormat": "markdown",
      "HTML": "<p>That works for me.</p>\n<p>I just tried it in my test game; <code>AddList(exit17.alt, \"downwind\")</code>. Adds an alias to all exits that inherit southwestdirection.<br>\n(because objects that inherit a type all have maps directing them to the same actual list, and those maps are identical. So there's no possible way to tell whose map a copy was taken from to pass to the function)</p>\n<p>Edit: The function posted above has a typo, I have <code>object</code> instead of <code>obj</code> in the set function.</p>\n\n",
      "PostDate": "2018-04-15T09:50:13.3373203Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "43e439cb-9a21-4bdf-a6e5-26008be1031f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I fixed that typo and still got the error when trying to add a display verb.",
      "EditableFormat": "markdown",
      "HTML": "<p>I fixed that typo and still got the error when trying to add a display verb.</p>\n\n",
      "PostDate": "2018-04-15T09:52:09.0592614Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c0b81f0c-cf7f-4d47-9e7b-806e7aa55b68",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here's my workaround (which only covers display and inventory verbs):\r\n\r\nREMOVED.  CODE DID NOT WORK.",
      "EditableFormat": "markdown",
      "HTML": "<p>Here's my workaround (which only covers display and inventory verbs):</p>\n<p>REMOVED.  CODE DID NOT WORK.</p>\n\n",
      "PostDate": "2018-04-15T09:53:53.7159811Z",
      "LastEditDate": "2018-04-15T10:56:04.6154567Z",
      "link": null
    },
    {
      "PostId": "a70eb433-f46c-4b5e-964c-6cff9696098e",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> So, Quest knows what list is \"tied to\".\r\n\r\nNo, it doesn't.\r\n\r\nIf I give you a copy of my treasure map, then you can go and bury something and I can go and dig it up.\r\n\r\nThat does not mean that your map knows it's tied to my map. Both maps know about the same treasure chest, but the chest doesn't need to know about the maps.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>So, Quest knows what list is \"tied to\".</p>\n</blockquote>\n<p>No, it doesn't.</p>\n<p>If I give you a copy of my treasure map, then you can go and bury something and I can go and dig it up.</p>\n<p>That does not mean that your map knows it's tied to my map. Both maps know about the same treasure chest, but the chest doesn't need to know about the maps.</p>\n\n",
      "PostDate": "2018-04-15T09:55:26.9013104Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f0afe69e-7ab5-4980-a026-ea628dffb20f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Something somewhere has to be keeping track, because this changes it:\r\n\r\n```\r\n  <function name=\"ListAdd\" parameters=\"list, value\">\r\n    if (not EndsWith(TypeOf(list),\"list\")) {\r\n      error (\"ListAdd: \"+list+\" is not a list!\")\r\n    }\r\n    if (not ListContains(list,value)) {\r\n      list add (list, value)\r\n    }\r\n  </function>\r\n```\r\n\r\n---\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"ListAdd\">\r\n    <gameid>850c8ad7-0432-4e1d-b550-dd066a8c9b94</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <beforeenter type=\"script\">\r\n      thing.displayverbs = ListExclude(thing.displayverbs, \"\")\r\n      ListAdd (thing.displayverbs, \"Shake\")\r\n    </beforeenter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"thing\">\r\n      <inherit name=\"editor_object\" />\r\n    </object>\r\n  </object>\r\n  <function name=\"ListAdd\" parameters=\"list, value\">\r\n    if (not EndsWith(TypeOf(list),\"list\")) {\r\n      error (\"ListAdd: \"+list+\" is not a list!\")\r\n    }\r\n    if (not ListContains(list,value)) {\r\n      list add (list, value)\r\n    }\r\n  </function>\r\n  <function name=\"ListRemove\" parameters=\"list, value\">\r\n    if (ListContains(list,value)) {\r\n      list remove (list, value)\r\n    }\r\n  </function>\r\n</asl>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Something somewhere has to be keeping track, because this changes it:</p>\n<pre><code>  &lt;function name=\"ListAdd\" parameters=\"list, value\"&gt;\n    if (not EndsWith(TypeOf(list),\"list\")) {\n      error (\"ListAdd: \"+list+\" is not a list!\")\n    }\n    if (not ListContains(list,value)) {\n      list add (list, value)\n    }\n  &lt;/function&gt;\n</code></pre>\n<hr>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"ListAdd\"&gt;\n    &lt;gameid&gt;850c8ad7-0432-4e1d-b550-dd066a8c9b94&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      thing.displayverbs = ListExclude(thing.displayverbs, \"\")\n      ListAdd (thing.displayverbs, \"Shake\")\n    &lt;/beforeenter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"thing\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;function name=\"ListAdd\" parameters=\"list, value\"&gt;\n    if (not EndsWith(TypeOf(list),\"list\")) {\n      error (\"ListAdd: \"+list+\" is not a list!\")\n    }\n    if (not ListContains(list,value)) {\n      list add (list, value)\n    }\n  &lt;/function&gt;\n  &lt;function name=\"ListRemove\" parameters=\"list, value\"&gt;\n    if (ListContains(list,value)) {\n      list remove (list, value)\n    }\n  &lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2018-04-15T10:06:48.8896806Z",
      "LastEditDate": "2018-04-15T10:57:18.2699345Z",
      "link": null
    },
    {
      "PostId": "8d6dc817-042e-43c5-ac19-c80ae86271e4",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This does nothing:\r\n\r\n```\r\n<function name=\"ListAdd\" parameters=\"list,value\">\r\n  if (not EndsWith(TypeOf(list), \"list\")) {\r\n    error (\"Not a list!\")\r\n  }\r\n  original_list = list\r\n  foreach (obj, AllObjects()) {\r\n    foreach (attribute, ListExclude(GetAttributeNames(obj, true), GetAttributeNames(obj, false))) {\r\n      if (Equal(GetAttribute(obj, attribute), original_list)) {\r\n        if (original_list = list) {\r\n          list = ListExclude(list, \"\")\r\n        }\r\n        set (obj, attribute, list)\r\n      }\r\n    }\r\n  }\r\n  list add (list, value)\r\n</function>\r\n```\r\n\r\n\r\n---\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"ListAdd\">\r\n    <gameid>850c8ad7-0432-4e1d-b550-dd066a8c9b94</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <enter type=\"script\">\r\n    </enter>\r\n    <beforeenter type=\"script\">\r\n      ListAdd (thing.displayverbs, \"Shake\")\r\n    </beforeenter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"thing\">\r\n      <inherit name=\"editor_object\" />\r\n    </object>\r\n  </object>\r\n<function name=\"ListAdd\" parameters=\"list,value\">\r\n  if (not EndsWith(TypeOf(list), \"list\")) {\r\n    error (\"Not a list!\")\r\n  }\r\n  original_list = list\r\n  foreach (obj, AllObjects()) {\r\n    foreach (attribute, ListExclude(GetAttributeNames(obj, true), GetAttributeNames(obj, false))) {\r\n      if (Equal(GetAttribute(obj, attribute), original_list)) {\r\n        if (original_list = list) {\r\n          list = ListExclude(list, \"\")\r\n        }\r\n        set (obj, attribute, list)\r\n      }\r\n    }\r\n  }\r\n  list add (list, value)\r\n</function>\r\n</asl>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>This does nothing:</p>\n<pre><code>&lt;function name=\"ListAdd\" parameters=\"list,value\"&gt;\n  if (not EndsWith(TypeOf(list), \"list\")) {\n    error (\"Not a list!\")\n  }\n  original_list = list\n  foreach (obj, AllObjects()) {\n    foreach (attribute, ListExclude(GetAttributeNames(obj, true), GetAttributeNames(obj, false))) {\n      if (Equal(GetAttribute(obj, attribute), original_list)) {\n        if (original_list = list) {\n          list = ListExclude(list, \"\")\n        }\n        set (obj, attribute, list)\n      }\n    }\n  }\n  list add (list, value)\n&lt;/function&gt;\n</code></pre>\n<hr>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"ListAdd\"&gt;\n    &lt;gameid&gt;850c8ad7-0432-4e1d-b550-dd066a8c9b94&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;enter type=\"script\"&gt;\n    &lt;/enter&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      ListAdd (thing.displayverbs, \"Shake\")\n    &lt;/beforeenter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"thing\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;function name=\"ListAdd\" parameters=\"list,value\"&gt;\n  if (not EndsWith(TypeOf(list), \"list\")) {\n    error (\"Not a list!\")\n  }\n  original_list = list\n  foreach (obj, AllObjects()) {\n    foreach (attribute, ListExclude(GetAttributeNames(obj, true), GetAttributeNames(obj, false))) {\n      if (Equal(GetAttribute(obj, attribute), original_list)) {\n        if (original_list = list) {\n          list = ListExclude(list, \"\")\n        }\n        set (obj, attribute, list)\n      }\n    }\n  }\n  list add (list, value)\n&lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2018-04-15T10:08:58.2293551Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "71c72be9-3365-4875-8367-5d65a9cabc47",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Adding debugging messages:\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"ListAdd\">\r\n    <gameid>850c8ad7-0432-4e1d-b550-dd066a8c9b94</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <enter type=\"script\">\r\n    </enter>\r\n    <beforeenter type=\"script\">\r\n      ListAdd (thing.displayverbs, \"Shake\")\r\n    </beforeenter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"thing\">\r\n      <inherit name=\"editor_object\" />\r\n    </object>\r\n  </object>      \r\n<function name=\"ListAdd\" parameters=\"list,value\">\r\n  if (not EndsWith(TypeOf(list), \"list\")) {\r\n    error (\"Not a list!\")\r\n  }\r\n  original_list = list\r\n  foreach (obj, AllObjects()) {\r\n    foreach (attribute, ListExclude(GetAttributeNames(obj, true), GetAttributeNames(obj, false))) {\r\n      if (Equal(GetAttribute(obj, attribute), original_list)) {\r\n        msg(obj)\r\n        msg(attribute)\r\n        msg(GetAttribute(obj, attribute))\r\n        if (original_list = list) {\r\n          list = ListExclude(list, \"\")\r\n        }\r\n        set (obj, attribute, list)\r\n      }\r\n    }\r\n  }\r\n  list add (list, value)\r\n</function>\r\n</asl>\r\n```\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/38777366-4d9e204e-406c-11e8-841f-f8b2b0b74306.png)\r\n\r\n---\r\nWhat am I doing differently, mrangel?\r\n\r\n..and why would ```original_list``` not equal ```list```?",
      "EditableFormat": "markdown",
      "HTML": "<p>Adding debugging messages:</p>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"ListAdd\"&gt;\n    &lt;gameid&gt;850c8ad7-0432-4e1d-b550-dd066a8c9b94&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;enter type=\"script\"&gt;\n    &lt;/enter&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      ListAdd (thing.displayverbs, \"Shake\")\n    &lt;/beforeenter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"thing\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;      \n&lt;function name=\"ListAdd\" parameters=\"list,value\"&gt;\n  if (not EndsWith(TypeOf(list), \"list\")) {\n    error (\"Not a list!\")\n  }\n  original_list = list\n  foreach (obj, AllObjects()) {\n    foreach (attribute, ListExclude(GetAttributeNames(obj, true), GetAttributeNames(obj, false))) {\n      if (Equal(GetAttribute(obj, attribute), original_list)) {\n        msg(obj)\n        msg(attribute)\n        msg(GetAttribute(obj, attribute))\n        if (original_list = list) {\n          list = ListExclude(list, \"\")\n        }\n        set (obj, attribute, list)\n      }\n    }\n  }\n  list add (list, value)\n&lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/38777366-4d9e204e-406c-11e8-841f-f8b2b0b74306.png\" alt=\"image\"></p>\n<hr>\n<p>What am I doing differently, mrangel?</p>\n<p>..and why would <code>original_list</code> not equal <code>list</code>?</p>\n\n",
      "PostDate": "2018-04-15T10:18:18.6224575Z",
      "LastEditDate": "2018-04-15T10:22:00.3651421Z",
      "link": null
    },
    {
      "PostId": "7ec3cb4c-4726-4893-b4e4-442450bde417",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "if you want, consolidating them (but this means having extra parameter/s, though it's only one Function compared to multiple Functions):\r\n\r\n(we could expand/consolidate this further, by: including in whether you want to sort it or not, and what type of sorting to do, including dictionary handling, and etc etc etc stuff that one can think of, lol)\r\n\r\n```\r\n// for example:\r\n\r\nListModify (orc.displayverbs, \"fight\", \"add\", \"displayverbs\") // adding 'fight'\r\n\r\n// then (just for continued example):\r\n\r\nListModify (orc.displayverbs, \"fight\", \"remove\", \"displayverbs\") // removing 'fight'\r\n\r\n// ----\r\n\r\n<function name=\"ListModify\" parameters=\"list, value, operation_string, check_string\">\r\n  // you might need this to happen repeatedly... not sure if first time will cause you issues or not, wouldn't you need to re-copy the lists every time they get modified?\r\n  firsttime {\r\n    CloneAllVerbsLists (check_string)\r\n  }\r\n  if (not EndsWith (TypeOf (list), \"list\")) {\r\n    error (\"ListAdd: \" + list + \" is not a list!\")\r\n  } else {\r\n    if (operation_string = \"add\") {\r\n      if (not ListContains (list, value))\r\n        list add (list, value)\r\n      } else {\r\n        msg (\"ERROR/BLAH\")\r\n      }\r\n    } else if (operation_string = \"remove\") {\r\n      if (ListContains (list, value))\r\n        list remove (list, value)\r\n      } else {\r\n        msg (\"ERROR/BLAH\")\r\n      }\r\n    }\r\n    // optional more operations like:\r\n    else if (operation_string = \"replace\") {\r\n      // scripting using the 'replace' Function (too lazy to look it up, lol)\r\n    }\r\n    // optional whatever other more operations\r\n    else {\r\n      msg (\"ERROR/BLAH\")\r\n    }\r\n  }\r\n</function>\r\n\r\n<function name=\"CloneAllVerbsLists\" parameters=\"check_string\">\r\n  foreach (o, AllObjects ()) {\r\n    if (HasAttribute (o, check_string)) {\r\n      o.check_string = o.check_string)\r\n    }\r\n  }\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>if you want, consolidating them (but this means having extra parameter/s, though it's only one Function compared to multiple Functions):</p>\n<p>(we could expand/consolidate this further, by: including in whether you want to sort it or not, and what type of sorting to do, including dictionary handling, and etc etc etc stuff that one can think of, lol)</p>\n<pre><code>// for example:\n\nListModify (orc.displayverbs, \"fight\", \"add\", \"displayverbs\") // adding 'fight'\n\n// then (just for continued example):\n\nListModify (orc.displayverbs, \"fight\", \"remove\", \"displayverbs\") // removing 'fight'\n\n// ----\n\n&lt;function name=\"ListModify\" parameters=\"list, value, operation_string, check_string\"&gt;\n  // you might need this to happen repeatedly... not sure if first time will cause you issues or not, wouldn't you need to re-copy the lists every time they get modified?\n  firsttime {\n    CloneAllVerbsLists (check_string)\n  }\n  if (not EndsWith (TypeOf (list), \"list\")) {\n    error (\"ListAdd: \" + list + \" is not a list!\")\n  } else {\n    if (operation_string = \"add\") {\n      if (not ListContains (list, value))\n        list add (list, value)\n      } else {\n        msg (\"ERROR/BLAH\")\n      }\n    } else if (operation_string = \"remove\") {\n      if (ListContains (list, value))\n        list remove (list, value)\n      } else {\n        msg (\"ERROR/BLAH\")\n      }\n    }\n    // optional more operations like:\n    else if (operation_string = \"replace\") {\n      // scripting using the 'replace' Function (too lazy to look it up, lol)\n    }\n    // optional whatever other more operations\n    else {\n      msg (\"ERROR/BLAH\")\n    }\n  }\n&lt;/function&gt;\n\n&lt;function name=\"CloneAllVerbsLists\" parameters=\"check_string\"&gt;\n  foreach (o, AllObjects ()) {\n    if (HasAttribute (o, check_string)) {\n      o.check_string = o.check_string)\n    }\n  }\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2018-04-15T10:19:00.1033603Z",
      "LastEditDate": "2018-04-15T10:38:40.1969812Z",
      "link": null
    },
    {
      "PostId": "47c4a63d-d9c9-490c-bc7c-4fbf58dc75fe",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OK, I need to poke this more.\r\n\r\nI've used lists as parameters for doing some weird stuff, and they act just like referenced lists in other languages.\r\nLists as attributes, maybe there's some very strange behaviour here.\r\n\r\nI'll look at this some time when I can avoid panic.",
      "EditableFormat": "markdown",
      "HTML": "<p>OK, I need to poke this more.</p>\n<p>I've used lists as parameters for doing some weird stuff, and they act just like referenced lists in other languages.<br>\nLists as attributes, maybe there's some very strange behaviour here.</p>\n<p>I'll look at this some time when I can avoid panic.</p>\n\n",
      "PostDate": "2018-04-15T10:21:40.8294412Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3e8074b7-7460-463d-80b5-d1ebfea2ac50",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah ... it looks like set implicitly copies the list?\r\nThat's really awkward, but I can kind of see why you'd do that.\r\n\r\nI want to keep on testing this, but I've got housemates pulling at me to do things that aren't the 8 hours of work I need to do to get back on target today. And I'm just getting \"Your session has timed out\"\r\n\r\nAm I right in thinking that after I do `object.attribute = somelist`, I can then do `msg (object.attribute = somelist)` and get \"false\"?",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah ... it looks like set implicitly copies the list?<br>\nThat's really awkward, but I can kind of see why you'd do that.</p>\n<p>I want to keep on testing this, but I've got housemates pulling at me to do things that aren't the 8 hours of work I need to do to get back on target today. And I'm just getting \"Your session has timed out\"</p>\n<p>Am I right in thinking that after I do <code>object.attribute = somelist</code>, I can then do <code>msg (object.attribute = somelist)</code> and get \"false\"?</p>\n\n",
      "PostDate": "2018-04-15T10:32:46.0659889Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f3c832d0-bf1b-4a37-8458-327591d696a0",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry, mrangel.\r\n\r\nI was just making sure someone didn't say I could put ```parameters{0}``` or something crazy like that.  I didn't mean to make you go crazy right along with me.\r\n\r\nIf ```list add``` and ```list remove``` didn't work, I could declare this mystery solved, but I'll just have to go with thinking this is happening in a script to which I have no access without changing some serious source code.",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry, mrangel.</p>\n<p>I was just making sure someone didn't say I could put <code>parameters{0}</code> or something crazy like that.  I didn't mean to make you go crazy right along with me.</p>\n<p>If <code>list add</code> and <code>list remove</code> didn't work, I could declare this mystery solved, but I'll just have to go with thinking this is happening in a script to which I have no access without changing some serious source code.</p>\n\n",
      "PostDate": "2018-04-15T10:40:36.7351718Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e30e632c-8755-4fbd-9b62-c7d84be04cc1",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I understand it now. It's a horrible, horrible bodge though.\r\n\r\n**Test 1**\r\n```\r\nsomelist = Split(\"a;b;c\")\r\nsomeobject.attribute = somelist\r\nmsg (someobject.attribute = somelist)\r\n```\r\ndisplays `false` - the attribute and the local variable point to two *different* copies of the same list. Modifying either of them will not affect the other.\r\n\r\n**Test 2**\r\n```\r\nsomeobject.attribute = Split(\"a;b;c\")\r\nsomelist = someobject.attribute\r\nmsg (someobject.attribute = somelist)\r\n```\r\ndisplays `true` - the attribute and the local variable are two variables pointing to the *same* list. Calling `list add` or `list remove` on either of them will affect the other, because they're just signs pointing to the same actual list.\r\n(Note that two variables still don't know about each other. The list doesn't know how many variables point to it; and may continue taking up space in memory for a while after the last one has been deleted)\r\n\r\nSo assigning something to an attribute, or calling `set`, implicitly copies the list.",
      "EditableFormat": "markdown",
      "HTML": "<p>I understand it now. It's a horrible, horrible bodge though.</p>\n<p><strong>Test 1</strong></p>\n<pre><code>somelist = Split(\"a;b;c\")\nsomeobject.attribute = somelist\nmsg (someobject.attribute = somelist)\n</code></pre>\n<p>displays <code>false</code> - the attribute and the local variable point to two <em>different</em> copies of the same list. Modifying either of them will not affect the other.</p>\n<p><strong>Test 2</strong></p>\n<pre><code>someobject.attribute = Split(\"a;b;c\")\nsomelist = someobject.attribute\nmsg (someobject.attribute = somelist)\n</code></pre>\n<p>displays <code>true</code> - the attribute and the local variable are two variables pointing to the <em>same</em> list. Calling <code>list add</code> or <code>list remove</code> on either of them will affect the other, because they're just signs pointing to the same actual list.<br>\n(Note that two variables still don't know about each other. The list doesn't know how many variables point to it; and may continue taking up space in memory for a while after the last one has been deleted)</p>\n<p>So assigning something to an attribute, or calling <code>set</code>, implicitly copies the list.</p>\n\n",
      "PostDate": "2018-04-15T16:19:25.1764531Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7c0c7eb0-6a15-400d-8a5f-5bd1e9bdba9f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah!\r\n\r\nThe plot thickens.\r\n\r\n```\r\n  <function name=\"ListAdd\" parameters=\"list, value\">\r\n    if (not EndsWith(TypeOf(list),\"list\")) {\r\n      error (\"ListAdd: \"+list+\" is not a list!\")\r\n    }\r\n    matched = false\r\n    foreach (obj, AllObjects()) {\r\n      foreach (attribute, GetAttributeNames(obj, true)) {\r\n        if (Equal(GetAttribute(obj, attribute), list)) {\r\n          matched = true\r\n          msg (obj)\r\n          msg (attribute)\r\n          msg (GetAttribute(obj, attribute))\r\n          clone = ListExclude(list,\"\")\r\n          set (obj, attribute, Split(\"NEW;VERBS\",\";\"))\r\n        }\r\n      }\r\n    }\r\n    if (matched){\r\n      if (not ListContains(list,value)) {\r\n        list add (list, value)\r\n      }\r\n    }\r\n  </function>\r\n```\r\n\r\nThis will change all matching verbs lists, but still throw the error.  \r\n\r\nYour last post taught me why.  \r\n\r\n```list``` is still pointing to a copy of an inherited list!  (Ha!  I love understanding stuff, even when I learn I can't do what I was attempting to do.)\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/38780869-b17150ec-40a2-11e8-8d19-b64be84d8b67.png)\r\n\r\n---\r\nSomething knows that ```list``` is pointing to ```thing.displayverbs``` in my script in the first post.\r\n\r\nMy mission was to make Quest tell me what ```list``` pointed to.  I failed.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah!</p>\n<p>The plot thickens.</p>\n<pre><code>  &lt;function name=\"ListAdd\" parameters=\"list, value\"&gt;\n    if (not EndsWith(TypeOf(list),\"list\")) {\n      error (\"ListAdd: \"+list+\" is not a list!\")\n    }\n    matched = false\n    foreach (obj, AllObjects()) {\n      foreach (attribute, GetAttributeNames(obj, true)) {\n        if (Equal(GetAttribute(obj, attribute), list)) {\n          matched = true\n          msg (obj)\n          msg (attribute)\n          msg (GetAttribute(obj, attribute))\n          clone = ListExclude(list,\"\")\n          set (obj, attribute, Split(\"NEW;VERBS\",\";\"))\n        }\n      }\n    }\n    if (matched){\n      if (not ListContains(list,value)) {\n        list add (list, value)\n      }\n    }\n  &lt;/function&gt;\n</code></pre>\n<p>This will change all matching verbs lists, but still throw the error.</p>\n<p>Your last post taught me why.</p>\n<p><code>list</code> is still pointing to a copy of an inherited list!  (Ha!  I love understanding stuff, even when I learn I can't do what I was attempting to do.)</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/38780869-b17150ec-40a2-11e8-8d19-b64be84d8b67.png\" alt=\"image\"></p>\n<hr>\n<p>Something knows that <code>list</code> is pointing to <code>thing.displayverbs</code> in my script in the first post.</p>\n<p>My mission was to make Quest tell me what <code>list</code> pointed to.  I failed.</p>\n\n",
      "PostDate": "2018-04-15T16:52:10.6768871Z",
      "LastEditDate": "2018-04-15T16:55:26.4997988Z",
      "link": null
    },
    {
      "PostId": "e376defc-8bb5-4676-b387-b191dfd80608",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The reason some code I posted (and removed because it didn't work) last night didn't work was because I was running ```CloneAllVerbsLists``` from the ```ListAdd``` function.  The last example I posted shows why that didn't work.  \r\n\r\nSo, if I am authoring a game in which I decide to modify even one object's verbs list, I shall be adding this to the start script of the game to cover the inherited attribute error for any display or inventory verbs lists:\r\n```\r\n  <function name=\"CloneAllVerbsLists\">\r\n    foreach (o, AllObjects()) {\r\n      if (HasAttribute(o,\"displayverbs\")) {\r\n        o.displayverbs = ListExclude(o.displayverbs,\"\")\r\n      }\r\n    }\r\n    foreach (o, AllObjects()) {\r\n      if (HasAttribute(o,\"inventoryverbs\")) {\r\n        o.inventoryverbs = ListExclude(o.inventoryverbs,\"\")\r\n      }\r\n    }\r\n  </function>\r\n```\r\n\r\n\r\n---\r\nNow, these functions will work fine (unless I try to modify some other inherited list):\r\n\r\n```\r\n  <function name=\"ListAdd\" parameters=\"list, value\">\r\n    if (not EndsWith(TypeOf(list),\"list\")) {\r\n      error (\"ListAdd: \"+list+\" is not a list!\")\r\n    }\r\n    if (not ListContains(list,value)) {\r\n      list add (list, value)\r\n    }\r\n  </function>\r\n```\r\n```\r\n  <function name=\"ListRemove\" parameters=\"list, value\">\r\n    if (ListContains(list,value)) {\r\n      list remove (list, value)\r\n    }\r\n  </function>\r\n```\r\n\r\n---\r\nExample game:\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"ListAdd\">\r\n    <gameid>850c8ad7-0432-4e1d-b550-dd066a8c9b94</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <start type=\"script\">\r\n      CloneAllVerbsLists\r\n    </start>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <beforeenter type=\"script\">\r\n      ListAdd (thing.displayverbs, \"Shake\")\r\n    </beforeenter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"thing\">\r\n      <inherit name=\"editor_object\" />\r\n    </object>\r\n  </object>\r\n  <function name=\"ListAdd\" parameters=\"list, value\">\r\n    if (not EndsWith(TypeOf(list),\"list\")) {\r\n      error (\"ListAdd: \"+list+\" is not a list!\")\r\n    }\r\n    if (not ListContains(list,value)) {\r\n      list add (list, value)\r\n    }\r\n  </function>\r\n  <function name=\"ListRemove\" parameters=\"list, value\">\r\n    if (ListContains(list,value)) {\r\n      list remove (list, value)\r\n    }\r\n  </function>\r\n  <function name=\"CloneAllVerbsLists\">\r\n    foreach (o, AllObjects()) {\r\n      if (HasAttribute(o,\"displayverbs\")) {\r\n        o.displayverbs = ListExclude(o.displayverbs,\"\")\r\n      }\r\n    }\r\n    foreach (o, AllObjects()) {\r\n      if (HasAttribute(o,\"inventoryverbs\")) {\r\n        o.inventoryverbs = ListExclude(o.inventoryverbs,\"\")\r\n      }\r\n    }\r\n  </function>\r\n</asl>\r\n```\r\n\r\n\r\n---\r\nThanks, mrangel!",
      "EditableFormat": "markdown",
      "HTML": "<p>The reason some code I posted (and removed because it didn't work) last night didn't work was because I was running <code>CloneAllVerbsLists</code> from the <code>ListAdd</code> function.  The last example I posted shows why that didn't work.</p>\n<p>So, if I am authoring a game in which I decide to modify even one object's verbs list, I shall be adding this to the start script of the game to cover the inherited attribute error for any display or inventory verbs lists:</p>\n<pre><code>  &lt;function name=\"CloneAllVerbsLists\"&gt;\n    foreach (o, AllObjects()) {\n      if (HasAttribute(o,\"displayverbs\")) {\n        o.displayverbs = ListExclude(o.displayverbs,\"\")\n      }\n    }\n    foreach (o, AllObjects()) {\n      if (HasAttribute(o,\"inventoryverbs\")) {\n        o.inventoryverbs = ListExclude(o.inventoryverbs,\"\")\n      }\n    }\n  &lt;/function&gt;\n</code></pre>\n<hr>\n<p>Now, these functions will work fine (unless I try to modify some other inherited list):</p>\n<pre><code>  &lt;function name=\"ListAdd\" parameters=\"list, value\"&gt;\n    if (not EndsWith(TypeOf(list),\"list\")) {\n      error (\"ListAdd: \"+list+\" is not a list!\")\n    }\n    if (not ListContains(list,value)) {\n      list add (list, value)\n    }\n  &lt;/function&gt;\n</code></pre>\n<pre><code>  &lt;function name=\"ListRemove\" parameters=\"list, value\"&gt;\n    if (ListContains(list,value)) {\n      list remove (list, value)\n    }\n  &lt;/function&gt;\n</code></pre>\n<hr>\n<p>Example game:</p>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"ListAdd\"&gt;\n    &lt;gameid&gt;850c8ad7-0432-4e1d-b550-dd066a8c9b94&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;start type=\"script\"&gt;\n      CloneAllVerbsLists\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      ListAdd (thing.displayverbs, \"Shake\")\n    &lt;/beforeenter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"thing\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;function name=\"ListAdd\" parameters=\"list, value\"&gt;\n    if (not EndsWith(TypeOf(list),\"list\")) {\n      error (\"ListAdd: \"+list+\" is not a list!\")\n    }\n    if (not ListContains(list,value)) {\n      list add (list, value)\n    }\n  &lt;/function&gt;\n  &lt;function name=\"ListRemove\" parameters=\"list, value\"&gt;\n    if (ListContains(list,value)) {\n      list remove (list, value)\n    }\n  &lt;/function&gt;\n  &lt;function name=\"CloneAllVerbsLists\"&gt;\n    foreach (o, AllObjects()) {\n      if (HasAttribute(o,\"displayverbs\")) {\n        o.displayverbs = ListExclude(o.displayverbs,\"\")\n      }\n    }\n    foreach (o, AllObjects()) {\n      if (HasAttribute(o,\"inventoryverbs\")) {\n        o.inventoryverbs = ListExclude(o.inventoryverbs,\"\")\n      }\n    }\n  &lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p>Thanks, mrangel!</p>\n\n",
      "PostDate": "2018-04-15T17:11:38.5545895Z",
      "LastEditDate": "2018-04-15T17:12:38.8384753Z",
      "link": null
    }
  ]
}
