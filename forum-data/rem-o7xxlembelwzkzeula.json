{
  "Topic": {
    "TopicId": "rem-o7xxlembelwzkzeula",
    "ForumId": "24",
    "Title": "Tips (include, service variables, and JS serialize)",
    "LastUpdated": "2016-12-22T13:30:07.9068466Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "d7ded152-946d-449c-a14d-309c491ee883",
      "UserId": 282099,
      "Username": "truevulcan",
      "AvatarUrl": "http://i.imgur.com/n0Z6djKb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello, \r\nI am a new user of Squiffy. I started writing a story and become familiar with the basic function of this software.\r\nI have downloaded it on Linux and I have found the bug of copy-paste, but also some problem when I delete parts of the text using backspace, so I moved my script on the web. (I have read this bug have been already reported).\r\n\r\nThe program at the moment is going well enough but I have some questions:\r\nMy knowledge of JS is basic but I scripted in Flash actionscript 1.0/2.0/3.0 in the past so I have some reminiscence to the similarity of language. I wrote a function that detects a skill of a character and evaluates it by adding random elements.\r\n\r\n    function abilityCheck(mn,mx,abilityname,spc,trg){\r\n      var ability = squiffy.get(abilityname);\r\n      var min = Math.ceil(mn);\r\n      var max = Math.floor(mx);\r\n      var dice = Math.floor(Math.random() * (max - min + 1)) + min;\r\n      var bonus = (Math.ceil(ability/5)*2)+spc;\r\n      var skillcheck = (dice+bonus)>=trg?\"success\":\"failure\";\r\n      if(skillcheck==\"success\"){\r\n     .......\r\n      }\r\n      alert(\"Target=\"+trg+\"\\nRoll 2d6=\"+dice+\"\\nBonus ability=\"+bonus+\"\\n\\nTotal=\"+(dice+bonus)+\"\\n\"+skillcheck);\r\n      return  dice+bonus-trg;\r\n    }\r\n\r\nAt the moment the function is not very functional because I should rewrite the same code in every part of the program where you want to call it. Is there a way to include this function in an external file with something like @include?\r\n\r\nSecond question. I have some \"service variables\" that I need to make checks on the script.\r\nFor example:\r\n\r\n    var spc=0;\r\n    squiffy.set( \"skillresult\", abilityCheck(2,12,\"characterdexterity\",spc,8) );\r\n\r\n{if skillresult>=0:bla bla bla bla}\r\n\r\nI would like to reset \"skillresult\" at the end of the block, so that if I read it on the next passage/section that variable is null or 0.\r\nBut if I put at the end of the textblock     squiffy.set(\"skillresult\", 0); or @unset skillresult, it does not work.\r\nIn fact if I try to display that var in the next page with {skillresult} the result is still stored.\r\nAn expedient would be to insert in the beginning and the top of the function the variable reset, but I wondered if there was another system.\r\n\r\nThird and last question.\r\nI wanted to create a variable that contained in memory all the equipment of the character (maximum 10 items). With a function then I could serialize the array, and another function at the right time of the script, find out whether the object exists in the array. Can someone help me?\r\nSomething like this:\r\n\r\n    var arr = [];\r\n    var arrSerialized = JSON.stringify(arr);\r\n    squiffy.set(\"charactersheetequipment\", arrSerialized);\r\n\r\nthanks in advance",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello,<br>\nI am a new user of Squiffy. I started writing a story and become familiar with the basic function of this software.<br>\nI have downloaded it on Linux and I have found the bug of copy-paste, but also some problem when I delete parts of the text using backspace, so I moved my script on the web. (I have read this bug have been already reported).</p>\n<p>The program at the moment is going well enough but I have some questions:<br>\nMy knowledge of JS is basic but I scripted in Flash actionscript 1.0/2.0/3.0 in the past so I have some reminiscence to the similarity of language. I wrote a function that detects a skill of a character and evaluates it by adding random elements.</p>\n<pre><code>function abilityCheck(mn,mx,abilityname,spc,trg){\n  var ability = squiffy.get(abilityname);\n  var min = Math.ceil(mn);\n  var max = Math.floor(mx);\n  var dice = Math.floor(Math.random() * (max - min + 1)) + min;\n  var bonus = (Math.ceil(ability/5)*2)+spc;\n  var skillcheck = (dice+bonus)&gt;=trg?\"success\":\"failure\";\n  if(skillcheck==\"success\"){\n .......\n  }\n  alert(\"Target=\"+trg+\"\\nRoll 2d6=\"+dice+\"\\nBonus ability=\"+bonus+\"\\n\\nTotal=\"+(dice+bonus)+\"\\n\"+skillcheck);\n  return  dice+bonus-trg;\n}\n</code></pre>\n<p>At the moment the function is not very functional because I should rewrite the same code in every part of the program where you want to call it. Is there a way to include this function in an external file with something like @include?</p>\n<p>Second question. I have some \"service variables\" that I need to make checks on the script.<br>\nFor example:</p>\n<pre><code>var spc=0;\nsquiffy.set( \"skillresult\", abilityCheck(2,12,\"characterdexterity\",spc,8) );\n</code></pre>\n<p>{if skillresult&gt;=0:bla bla bla bla}</p>\n<p>I would like to reset \"skillresult\" at the end of the block, so that if I read it on the next passage/section that variable is null or 0.<br>\nBut if I put at the end of the textblock     squiffy.set(\"skillresult\", 0); or @unset skillresult, it does not work.<br>\nIn fact if I try to display that var in the next page with {skillresult} the result is still stored.<br>\nAn expedient would be to insert in the beginning and the top of the function the variable reset, but I wondered if there was another system.</p>\n<p>Third and last question.<br>\nI wanted to create a variable that contained in memory all the equipment of the character (maximum 10 items). With a function then I could serialize the array, and another function at the right time of the script, find out whether the object exists in the array. Can someone help me?<br>\nSomething like this:</p>\n<pre><code>var arr = [];\nvar arrSerialized = JSON.stringify(arr);\nsquiffy.set(\"charactersheetequipment\", arrSerialized);\n</code></pre>\n<p>thanks in advance</p>\n\n",
      "PostDate": "2016-12-22T13:30:07.9068466Z",
      "LastEditDate": null
    },
    {
      "PostId": "28f347db-cc7b-49e1-bf45-8d5a5fcacdef",
      "UserId": 262022,
      "Username": "thetruespin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/dc591017d34e833aceb21f01abe265e1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In terms of your first point, could you not include the JS function in the main Squiffy HTML template, and then just call it in the normal way from within sections?\r\n\r\nIn terms of your second point, you might need to re-explain it to me, but you can reset / modify Squiffy attributes via links themselves, eg:\r\n\r\n    [[new section]](next, myattribute=+10)\r\n\r\nAgain, I think I might be misunderstanding your issue, so not sure if the above would help.\r\n\r\nWith regards to your last point, I'm sure it's possible but not something I have done myself. In fact, when I have wanted a basic inventory system, I have usually taken the simple road and just created a load of boolean variables for each potential item. Your solution would be more elegant though.",
      "EditableFormat": "markdown",
      "HTML": "<p>In terms of your first point, could you not include the JS function in the main Squiffy HTML template, and then just call it in the normal way from within sections?</p>\n<p>In terms of your second point, you might need to re-explain it to me, but you can reset / modify Squiffy attributes via links themselves, eg:</p>\n<pre><code>[[new section]](next, myattribute=+10)\n</code></pre>\n<p>Again, I think I might be misunderstanding your issue, so not sure if the above would help.</p>\n<p>With regards to your last point, I'm sure it's possible but not something I have done myself. In fact, when I have wanted a basic inventory system, I have usually taken the simple road and just created a load of boolean variables for each potential item. Your solution would be more elegant though.</p>\n\n",
      "PostDate": "2016-12-22T15:22:38.581055Z",
      "LastEditDate": null
    },
    {
      "PostId": "06beee4f-d570-4208-a939-646926957d56",
      "UserId": 282099,
      "Username": "truevulcan",
      "AvatarUrl": "http://i.imgur.com/n0Z6djKb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For the 1st point, I don't know how to include the function in the external Squiffy file.\r\nFor example if I write that function at the beginning of the script, that function is not available when I call it from a section in the center of the script. I have to rewrite that function everytime...\r\nI have read this http://docs.textadventures.co.uk/squiffy/import.html but I don't know the command-line version of Squiffy (and how it works).\r\n\r\nFor the 2nd point (excuse me for my bad English), I know the syntax [[new section]](next, myattribute=+10) but I need to do something different: \r\n[[mysection]]:\r\n\r\n     // the function set the var skillresult to some value\r\n     squiffy.set( \"skillresult\", abilityCheck(2,12,\"strenght\",0,8) );\r\n\r\nI have my text here. bla bla bla. Then I have to switch the text depending on whether the test went well. So,\r\n{if skillresult>=0:bla bla bla bla}{else: blablablabla}\r\nClick [[here]](nextsection) to continue.\r\n\r\nOk, in the next section, I would like to have my var \"skillresult\" cleaned. (0, null or NaN), but if I unset it in the previous section at the end of the text, it doesn't work (and I have understood why).\r\nClick [[here]](nextsection) to continue.\r\n@unset skillresult\r\n\r\nHow can I clean that var?\r\n\r\nFor the 3rd point, do you manage object like in this way?\r\n@set hashammer = 0\r\n@set hasring = 1\r\n@set hasrodoffire = 0\r\n@set hassword = 0\r\nand so on",
      "EditableFormat": "markdown",
      "HTML": "<p>For the 1st point, I don't know how to include the function in the external Squiffy file.<br>\nFor example if I write that function at the beginning of the script, that function is not available when I call it from a section in the center of the script. I have to rewrite that function everytime...<br>\nI have read this http://docs.textadventures.co.uk/squiffy/import.html but I don't know the command-line version of Squiffy (and how it works).</p>\n<p>For the 2nd point (excuse me for my bad English), I know the syntax [[new section]](next, myattribute=+10) but I need to do something different:<br>\n[[mysection]]:</p>\n<pre><code> // the function set the var skillresult to some value\n squiffy.set( \"skillresult\", abilityCheck(2,12,\"strenght\",0,8) );\n</code></pre>\n<p>I have my text here. bla bla bla. Then I have to switch the text depending on whether the test went well. So,<br>\n{if skillresult&gt;=0:bla bla bla bla}{else: blablablabla}<br>\nClick <a href=\"nextsection\">[here]</a> to continue.</p>\n<p>Ok, in the next section, I would like to have my var \"skillresult\" cleaned. (0, null or NaN), but if I unset it in the previous section at the end of the text, it doesn't work (and I have understood why).<br>\nClick <a href=\"nextsection\">[here]</a> to continue.<br>\n@unset skillresult</p>\n<p>How can I clean that var?</p>\n<p>For the 3rd point, do you manage object like in this way?<br>\n@set hashammer = 0<br>\n@set hasring = 1<br>\n@set hasrodoffire = 0<br>\n@set hassword = 0<br>\nand so on</p>\n\n",
      "PostDate": "2016-12-22T16:13:22.2090576Z",
      "LastEditDate": "2016-12-22T16:28:11.8183329Z"
    },
    {
      "PostId": "8001ea35-02fc-4b47-ac08-a0fe64803eb3",
      "UserId": 262022,
      "Username": "thetruespin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/dc591017d34e833aceb21f01abe265e1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you are using the desktop version of Squiffy you can modify the index.html template and, in that, include your javascript function. When you compile it will include the modified code. You can then call it when needed from individual sections. I'm on my phone at the moment, but I can point you to the relevant directory tomorrow. As mentioned, you'll need to be using the desktop version as the web-based one gives you no access to the html template. \r\n\r\nWith the third point, yes. That's what I meant. It's a bit clunky but provided you don't have too many items to deal with it's just easier, as you can manage everything via Squiffy attributes rather than having to convert back and forth between JS variables. \r\n\r\nI'll take another look at your second issue tomorrow (in bed with a cold at the moment). ",
      "EditableFormat": "markdown",
      "HTML": "<p>If you are using the desktop version of Squiffy you can modify the index.html template and, in that, include your javascript function. When you compile it will include the modified code. You can then call it when needed from individual sections. I'm on my phone at the moment, but I can point you to the relevant directory tomorrow. As mentioned, you'll need to be using the desktop version as the web-based one gives you no access to the html template.</p>\n<p>With the third point, yes. That's what I meant. It's a bit clunky but provided you don't have too many items to deal with it's just easier, as you can manage everything via Squiffy attributes rather than having to convert back and forth between JS variables.</p>\n<p>I'll take another look at your second issue tomorrow (in bed with a cold at the moment).</p>\n\n",
      "PostDate": "2016-12-22T21:02:43.5256053Z",
      "LastEditDate": "2016-12-22T21:10:12.6377754Z"
    },
    {
      "PostId": "775fb6c4-e7b9-4a9c-a3eb-7252cb8392ae",
      "UserId": 262022,
      "Username": "thetruespin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/dc591017d34e833aceb21f01abe265e1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You can only use Javascript at the start of a section. You can't swap freely between HTML / Text and Javascript. All Javascript has to be executed first.\r\n\r\nSo if you want to clear your Squiffy attribute \"skillresult\" after a section has been displayed, you could simply use:\r\n\r\n    {if skillresult>=0:bla bla bla bla}{else: blablablabla}\r\n    Click [here](here, skillresult=) to continue.\r\n\r\nIf you find yourself in a situation where you need to execute lots of Javascript after a section, you could always use something like:\r\n\r\n     [[next link]](setup)\r\n \r\n     [[setup]]:\r\n     // all the Javascript you want to execute can go here\r\n    squiffy.story.go(\"exitsetup\");\r\n\r\n    [[exitsetup]]:\r\n    The next normal bit of your story goes here.\r\n\r\nSo you basically put all your Javascript stuff into it's own section, and then use the squiffy.story.go function to automatically move the player to the next bit of the story.\r\n\r\nOh, and in terms of the index HTML template, if you're using the Windows version of Squiffy, the path is something like:\r\n\r\n    C:\\Program Files (x86)\\Squiffy\\resources\\app\\node_modules\\squiffy\r\n\r\nThe file is called index.template.\r\n\r\n\r\n    \r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>You can only use Javascript at the start of a section. You can't swap freely between HTML / Text and Javascript. All Javascript has to be executed first.</p>\n<p>So if you want to clear your Squiffy attribute \"skillresult\" after a section has been displayed, you could simply use:</p>\n<pre><code>{if skillresult&gt;=0:bla bla bla bla}{else: blablablabla}\nClick [here](here, skillresult=) to continue.\n</code></pre>\n<p>If you find yourself in a situation where you need to execute lots of Javascript after a section, you could always use something like:</p>\n<pre><code> [[next link]](setup)\n\n [[setup]]:\n // all the Javascript you want to execute can go here\nsquiffy.story.go(\"exitsetup\");\n\n[[exitsetup]]:\nThe next normal bit of your story goes here.\n</code></pre>\n<p>So you basically put all your Javascript stuff into it's own section, and then use the squiffy.story.go function to automatically move the player to the next bit of the story.</p>\n<p>Oh, and in terms of the index HTML template, if you're using the Windows version of Squiffy, the path is something like:</p>\n<pre><code>C:\\Program Files (x86)\\Squiffy\\resources\\app\\node_modules\\squiffy\n</code></pre>\n<p>The file is called index.template.</p>\n\n",
      "PostDate": "2016-12-23T08:48:53.9809119Z",
      "LastEditDate": null
    },
    {
      "PostId": "26fdda24-25ed-4ba5-9006-1f2f99968645",
      "UserId": 282099,
      "Username": "truevulcan",
      "AvatarUrl": "http://i.imgur.com/n0Z6djKb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you very much for the tips!\r\nUnder linux the file is located into /installpath/Squiffy-linux-x64/resources/app/node_modules/squiffy\r\nI have tried the code for the other questions but I have still not tried the include. I will do it tomorrow. Thank you",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you very much for the tips!<br>\nUnder linux the file is located into /installpath/Squiffy-linux-x64/resources/app/node_modules/squiffy<br>\nI have tried the code for the other questions but I have still not tried the include. I will do it tomorrow. Thank you</p>\n\n",
      "PostDate": "2016-12-23T22:12:52.3976377Z",
      "LastEditDate": null
    },
    {
      "PostId": "5b971579-5763-45a8-8174-d517bb6677de",
      "UserId": 282099,
      "Username": "truevulcan",
      "AvatarUrl": "http://i.imgur.com/n0Z6djKb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello. The trick of inserting functions under index.template.html seem not work.\r\nI have inserted my custom function after the Jquery.\r\nAny idea? :/ \r\n\r\n\t\t<script src=\"<!-- JQUERY -->\"></script>\r\n\t\t<script src=\"story.js\" charset=\"UTF-8\"></script>\r\n\t\t<!-- SCRIPTS -->\r\n\t\t<script>\r\n\t\t\tjQuery(function($){\r\n\t\t\t\t$('#squiffy').squiffy();\r\n\t\t\t\tvar restart = function () {\r\n\t\t\t\t\t$('#squiffy').squiffy('restart');\r\n\t\t\t\t};\r\n\t\t\t\t$('#restart').click(restart);\r\n\t\t\t\t$('#restart').keypress(function (e) {\r\n\t\t\t\t\tif (e.which !== 13) return;\r\n\t\t\t\t\trestart();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n    \r\n    function abilityCheck(mn,mx,abilityname,spc,trg){\r\n      var curxp = squiffy.get(\"charactersheetxp\");\r\n      var cursc = squiffy.get(\"charactersheetscore\");\r\n      var ability = squiffy.get(abilityname);\r\n      var min = Math.ceil(mn);\r\n      var max = Math.floor(mx);\r\n      [.............]\r\n      return  dice+bonus-trg;\r\n    }\r\n\t\t</script>\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello. The trick of inserting functions under index.template.html seem not work.<br>\nI have inserted my custom function after the Jquery.<br>\nAny idea? :/</p>\n<pre><code>\t&lt;script src=\"&lt;!-- JQUERY --&gt;\"&gt;&lt;/script&gt;\n\t&lt;script src=\"story.js\" charset=\"UTF-8\"&gt;&lt;/script&gt;\n\t&lt;!-- SCRIPTS --&gt;\n\t&lt;script&gt;\n\t\tjQuery(function($){\n\t\t\t$('#squiffy').squiffy();\n\t\t\tvar restart = function () {\n\t\t\t\t$('#squiffy').squiffy('restart');\n\t\t\t};\n\t\t\t$('#restart').click(restart);\n\t\t\t$('#restart').keypress(function (e) {\n\t\t\t\tif (e.which !== 13) return;\n\t\t\t\trestart();\n\t\t\t});\n\t\t});\n\n\nfunction abilityCheck(mn,mx,abilityname,spc,trg){\n  var curxp = squiffy.get(\"charactersheetxp\");\n  var cursc = squiffy.get(\"charactersheetscore\");\n  var ability = squiffy.get(abilityname);\n  var min = Math.ceil(mn);\n  var max = Math.floor(mx);\n  [.............]\n  return  dice+bonus-trg;\n}\n\t&lt;/script&gt;\n</code></pre>\n\n",
      "PostDate": "2016-12-26T20:54:37.5267198Z",
      "LastEditDate": null
    },
    {
      "PostId": "f3c08fa4-3788-475a-bb4f-2ecf513dc604",
      "UserId": 262022,
      "Username": "thetruespin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/dc591017d34e833aceb21f01abe265e1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Will have a look tomo. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Will have a look tomo.</p>\n\n",
      "PostDate": "2016-12-26T21:33:58.1598061Z",
      "LastEditDate": null
    },
    {
      "PostId": "f7a7ef18-f88f-4c95-b6ed-12e3538b34f6",
      "UserId": 282099,
      "Username": "truevulcan",
      "AvatarUrl": "http://i.imgur.com/n0Z6djKb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "thank you!",
      "EditableFormat": "markdown",
      "HTML": "<p>thank you!</p>\n\n",
      "PostDate": "2016-12-26T21:45:45.5479189Z",
      "LastEditDate": null
    },
    {
      "PostId": "db9b6634-88be-47d1-a9f3-3451e131f368",
      "UserId": 282099,
      "Username": "truevulcan",
      "AvatarUrl": "http://i.imgur.com/n0Z6djKb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have found the solution here:\r\nhttp://textadventures.co.uk/forum/squiffy/topic/6366/loading-variables-off-an-if-statement\r\n\r\nSo, the only thing to do is to put the function at the beginning of the script with this syntax:\r\n\r\n    @start Intro\r\n\r\n    [[]]:\r\n    // check ability function\r\n    squiffy.abilityCheck = function(mn,mx,abilityname,spc,trg){\r\n     //....\r\n    }\r\n\r\nAnd then, at any place of the script I can call it in this way.\r\n\r\n     squiffy.set( \"skillresult\", squiffy.abilityCheck(2,12,\"characterstatsdexterity\",spc,8) );",
      "EditableFormat": "markdown",
      "HTML": "<p>I have found the solution here:<br>\nhttp://textadventures.co.uk/forum/squiffy/topic/6366/loading-variables-off-an-if-statement</p>\n<p>So, the only thing to do is to put the function at the beginning of the script with this syntax:</p>\n<pre><code>@start Intro\n\n[[]]:\n// check ability function\nsquiffy.abilityCheck = function(mn,mx,abilityname,spc,trg){\n //....\n}\n</code></pre>\n<p>And then, at any place of the script I can call it in this way.</p>\n<pre><code> squiffy.set( \"skillresult\", squiffy.abilityCheck(2,12,\"characterstatsdexterity\",spc,8) );\n</code></pre>\n\n",
      "PostDate": "2017-01-09T13:57:47.5944443Z",
      "LastEditDate": null
    },
    {
      "PostId": "1a59416a-d4f9-4547-a367-5a86849a3822",
      "UserId": 262022,
      "Username": "thetruespin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/dc591017d34e833aceb21f01abe265e1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry didn't get back to you. Well done sorting it though. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry didn't get back to you. Well done sorting it though.</p>\n\n",
      "PostDate": "2017-01-10T21:19:53.7253158Z",
      "LastEditDate": null
    }
  ]
}
