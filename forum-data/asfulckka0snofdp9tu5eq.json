{
  "Topic": {
    "TopicId": "asfulckka0snofdp9tu5eq",
    "ForumId": "10",
    "Title": "Multiplayer Game?",
    "LastUpdated": "2018-03-13T15:06:00.6843138Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "02eca940-47c9-49d4-b563-5cc1c5737114",
      "UserId": 349151,
      "Username": "kinghubbabubbabeebooba",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello, I'm new to Quest so I'm sorry if this is a novice question but the reason I even got into Quest was to create games like  Oregon Trail, Where a single person plays it but has a group of friends in the room who are characters in the game and they get to name and choice their characters actions. Because to me Text Adventures or Choose Your Own Adventure Games are best with a group of friends arguing and laughing about the outcomes and events. It would almost be like Oregon Trail but maybe with more group interaction then them just watching their characters do stuff like maybe have aspects from The Yawhg where one persons actions effect everyone at the time or sometimes later on cause large changes in the story.  Is a game like this possible to make on Quest? Any thoughts, tips or tricks to doing this? Are there any tutorials to creating this type of game? ",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello, I'm new to Quest so I'm sorry if this is a novice question but the reason I even got into Quest was to create games like  Oregon Trail, Where a single person plays it but has a group of friends in the room who are characters in the game and they get to name and choice their characters actions. Because to me Text Adventures or Choose Your Own Adventure Games are best with a group of friends arguing and laughing about the outcomes and events. It would almost be like Oregon Trail but maybe with more group interaction then them just watching their characters do stuff like maybe have aspects from The Yawhg where one persons actions effect everyone at the time or sometimes later on cause large changes in the story.  Is a game like this possible to make on Quest? Any thoughts, tips or tricks to doing this? Are there any tutorials to creating this type of game?</p>\n\n",
      "PostDate": "2018-03-13T15:06:00.6843138Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "918c7c82-2e91-42d8-b997-dfab0323c99d",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The problem is that each person would need a turn at the keyboard to type in what they are doing...\r\nThis would be better in a graphics type of game with game controllers, movement, but no text typing...\r\n(Atari has a game called Ali Baba and the 40 thieves... multiplayer, but past 4 players and you needed to share controllers, which was not a problem because it was turn based...)\r\nIt \"may\" be doable... but you would need a loop to cycle through each active player and make the \"player\" become the \"active player\" (the person who's turn it is)\r\nMaybe as:\r\nprogram sets player to \"John\"\r\nJohn is active:> ..... (What John types...)\r\nprogram sets player to \"Sam\"\r\nSam is active:>... (Sam types...)\r\nprogram sets player to \"Joe\"\r\nJoe is active:>...\r\n\r\nYou would have 3 character objects, John, Sam, and Joe, and have them set as \"Player can become this object\"...\r\n(I think that could work...)\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>The problem is that each person would need a turn at the keyboard to type in what they are doing...<br>\nThis would be better in a graphics type of game with game controllers, movement, but no text typing...<br>\n(Atari has a game called Ali Baba and the 40 thieves... multiplayer, but past 4 players and you needed to share controllers, which was not a problem because it was turn based...)<br>\nIt \"may\" be doable... but you would need a loop to cycle through each active player and make the \"player\" become the \"active player\" (the person who's turn it is)<br>\nMaybe as:<br>\nprogram sets player to \"John\"<br>\nJohn is active:&gt; ..... (What John types...)<br>\nprogram sets player to \"Sam\"<br>\nSam is active:&gt;... (Sam types...)<br>\nprogram sets player to \"Joe\"<br>\nJoe is active:&gt;...</p>\n<p>You would have 3 character objects, John, Sam, and Joe, and have them set as \"Player can become this object\"...<br>\n(I think that could work...)</p>\n\n",
      "PostDate": "2018-03-14T03:10:45.4350006Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "23a76a9f-fb6a-46a8-85bd-d8b921a1adeb",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You could have a turnscript that iterates through each player in turn. Perhaps it checks if the last command was successful, and only goes to the next player if it was. If the players split up, it could get confusing for them trying to remember where they are.\r\n\r\nIt would probably be possible to divide the screen into quarters, each with its own text input, each tracking one character. They could then use the mouse to select one, and type in a command.  This would take some serious JavaScript trickery, but should be doable (ask KV, he likes a challenge!)",
      "EditableFormat": "markdown",
      "HTML": "<p>You could have a turnscript that iterates through each player in turn. Perhaps it checks if the last command was successful, and only goes to the next player if it was. If the players split up, it could get confusing for them trying to remember where they are.</p>\n<p>It would probably be possible to divide the screen into quarters, each with its own text input, each tracking one character. They could then use the mouse to select one, and type in a command.  This would take some serious JavaScript trickery, but should be doable (ask KV, he likes a challenge!)</p>\n\n",
      "PostDate": "2018-03-14T08:22:47.2322861Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "de4d9d0c-3036-4a21-b2fa-5c1415e4fec7",
      "UserId": 349151,
      "Username": "kinghubbabubbabeebooba",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\"The problem is that each person would need a turn at the keyboard to type in what they are doing...\r\nThis would be better in a graphics type of game with game controllers, movement, but no text typing...\"                                                                 \r\n \r\nyeah that would be fine for us because me and my friends plays games like that a lot, like one persons sits in front of the computer and we all play XCOM telling the one person what we want to do. Would it be easier with Quest's second game option like making it a Gamebook? so they are only choosing between options already there, thus cutting out a lot of the typing?\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>\"The problem is that each person would need a turn at the keyboard to type in what they are doing...<br>\nThis would be better in a graphics type of game with game controllers, movement, but no text typing...\"</p>\n<p>yeah that would be fine for us because me and my friends plays games like that a lot, like one persons sits in front of the computer and we all play XCOM telling the one person what we want to do. Would it be easier with Quest's second game option like making it a Gamebook? so they are only choosing between options already there, thus cutting out a lot of the typing?</p>\n\n",
      "PostDate": "2018-03-14T14:17:59.0940509Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "dd1720ca-4c2d-4c4f-aa23-2d7142fbeb1f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "We are talking about people in the same place taking turns on one computer; correct?",
      "EditableFormat": "markdown",
      "HTML": "<p>We are talking about people in the same place taking turns on one computer; correct?</p>\n\n",
      "PostDate": "2018-03-14T15:04:30.275941Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b56894d0-7cbd-4f32-95d2-fdd8a55648e2",
      "UserId": 349151,
      "Username": "kinghubbabubbabeebooba",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "yes, a whole bunch of people sitting on a couch together taking turns on the keyboard or being lazy and making one person do it by telling him what you want",
      "EditableFormat": "markdown",
      "HTML": "<p>yes, a whole bunch of people sitting on a couch together taking turns on the keyboard or being lazy and making one person do it by telling him what you want</p>\n\n",
      "PostDate": "2018-03-14T15:40:40.3560829Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9c8df668-aaac-465a-8cfe-bfa3a4d6ce82",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Although this might have limited appeal for multiplayer, it could as easily be done with one player controlling four characters at the same time, which would make for some interesting possibilities.",
      "EditableFormat": "markdown",
      "HTML": "<p>Although this might have limited appeal for multiplayer, it could as easily be done with one player controlling four characters at the same time, which would make for some interesting possibilities.</p>\n\n",
      "PostDate": "2018-03-14T16:14:44.5666436Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5e948139-487d-4c85-9527-25a8da9d4721",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've got something cooking.\r\n\r\nYou can choose how many players there will be, then set each character up.  Once finished, all the player objects are in the starting room, and player1 kicks things off.\r\n\r\n(I'm currently contemplating how to handle characters interacting with each other.  I'm thinking asking, telling, ordering, or speaking to another player will just switch the POV, allowing the player who is being addressed to respond.)\r\n\r\n---\r\nPuzzle ideas:\r\n\r\n1. Some rooms can only contain one person at a time.  One player will have to go through one room (i.e., crossing a rotten log) to open an exit the group can use to progress.  If more than one person enters the \"rotten log\" room, SOMEONE DIED! GAME OVER!\r\n\r\n2. A certain number of players will have to be holding certain objects for the current player to perform some action to progress.\r\n\r\n---\r\nSpeaking of someone dying...\r\n\r\nA single death could either end the game, simply remove that player from the list of active players, or be the event which changes the POV to a new player.\r\n\r\n---\r\nI can picture playing a game like this...\r\nIt would be all attacks.  We'd never finish the game.\r\n\r\n\\> slap XM\r\nYou slap XanMag.\r\n\r\nPLAYER 2's TURN:\r\n\r\n\\> slap KV\r\nYou slap KV.\r\n\r\nPLAYER 3's TURN:\r\n\\> slap XM\r\nYou slap XM.\r\n\r\nPLAYER 1's TURN:\r\n\\> kick DL\r\nYou kick Dark Lizerd.",
      "EditableFormat": "markdown",
      "HTML": "<p>I've got something cooking.</p>\n<p>You can choose how many players there will be, then set each character up.  Once finished, all the player objects are in the starting room, and player1 kicks things off.</p>\n<p>(I'm currently contemplating how to handle characters interacting with each other.  I'm thinking asking, telling, ordering, or speaking to another player will just switch the POV, allowing the player who is being addressed to respond.)</p>\n<hr>\n<p>Puzzle ideas:</p>\n<ol>\n<li>\n<p>Some rooms can only contain one person at a time.  One player will have to go through one room (i.e., crossing a rotten log) to open an exit the group can use to progress.  If more than one person enters the \"rotten log\" room, SOMEONE DIED! GAME OVER!</p>\n</li>\n<li>\n<p>A certain number of players will have to be holding certain objects for the current player to perform some action to progress.</p>\n</li>\n</ol>\n<hr>\n<p>Speaking of someone dying...</p>\n<p>A single death could either end the game, simply remove that player from the list of active players, or be the event which changes the POV to a new player.</p>\n<hr>\n<p>I can picture playing a game like this...<br>\nIt would be all attacks.  We'd never finish the game.</p>\n<p>&gt; slap XM<br>\nYou slap XanMag.</p>\n<p>PLAYER 2's TURN:</p>\n<p>&gt; slap KV<br>\nYou slap KV.</p>\n<p>PLAYER 3's TURN:<br>\n&gt; slap XM<br>\nYou slap XM.</p>\n<p>PLAYER 1's TURN:<br>\n&gt; kick DL<br>\nYou kick Dark Lizerd.</p>\n\n",
      "PostDate": "2018-03-14T16:37:06.2093486Z",
      "LastEditDate": "2018-03-14T16:52:07.8402035Z",
      "link": null
    },
    {
      "PostId": "5c43092a-7002-42ec-978e-c8765c658290",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay...\r\n\r\nThis isn't very good, but it may be a good foundation (I think).\r\n\r\nhttp://textadventures.co.uk/games/view/aapzwuvki0ss26_qctzjgg/multi-player-prototype\r\n\r\n---\r\nIt is VERY rough.  (The screen doesn't even clear after character creation.)\r\n\r\nThe instructions will display when play begins (or you can read the game description).\r\n\r\n---\r\n\r\n#### The code:\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Multi-player Prototype\">\r\n    <gameid>fbefdbc6-56a1-4759-be8f-bfd2ccfc5702</gameid>\r\n    <version>0.0.2</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <attr name=\"autodescription_youarein_useprefix\" type=\"boolean\">false</attr>\r\n    <customstatuspane />\r\n    <commandpane type=\"boolean\">false</commandpane>\r\n    <feature_advancedscripts />\r\n    <author>KV</author>\r\n    <description><![CDATA[This is a very rough prototype.  (The rooms don't even have descriptions.)<br/><br/>INSTRUCTIONS:<br/><br/>Select the number of players.  Then, enter the name, gender, and description of each player.<br/><br/>Each player gets 1 turn, then it will be the next player's turn.<br/><br/>The flag will be in a random part of the cave in each game.<br/><br/>The first player to get the flag wins.<br/><br/>At the moment, the items are only there for dropping (to map the cave), except for the compass, which will be in a random part of the cave in each game.   Whoever has the compass will have a compass pane.<br/><br/><br/>NOTES:<br/><br/>You can click on the map in the pane to view the full-size map.<br/>The Cave with the green outline on the map is the starting room.<br/>If you attack a player who is carrying something, they will drop one random item.]]></description>\r\n    <start type=\"script\">\r\n      JS.showPopupCustomSize (\"WELCOME!\", game.description, \"80%\", \"auto\")\r\n      int = GetRandomInt(2,23)\r\n      flag.parent = GetObject(\"Cave\"+int)\r\n      SetupMapPane\r\n      SetupStuff\r\n      JS.eval (\"$(\\\"#compassLabel,#compassAccordion\\\").hide()\")\r\n    </start>\r\n    <inituserinterface type=\"script\"><![CDATA[\r\n      js = Replace(javascript.description,\"<br/>\",\"\")\r\n      JS.eval (js)\r\n    ]]></inituserinterface>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n  </object>\r\n  <object name=\"Character Creation\">\r\n    <inherit name=\"editor_room\" />\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <firstenter type=\"script\">\r\n      SetupPlayers\r\n    </firstenter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n  </object>\r\n  <turnscript name=\"next_player\">\r\n    <script><![CDATA[\r\n      int = ListCount(game.player_list)\r\n      current = ToInt(Replace(game.pov.name,\"player\",\"\"))\r\n      if (int = current) {\r\n        o = player1\r\n      }\r\n      else {\r\n        o = GetObject(\"player\"+(current+1))\r\n      }\r\n      msg (\"<br/><h1>\"+UCase(o.name)+\"</h1>\")\r\n      ChangePOV (o)\r\n    ]]></script>\r\n  </turnscript>\r\n  <object name=\"Cave\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"north\" to=\"Cave11\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave2\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"southeast\" to=\"Cave11\">\r\n      <inherit name=\"southeastdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave3\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"southeast\" to=\"Cave18\">\r\n      <inherit name=\"southeastdirection\" />\r\n    </exit>\r\n    <exit alias=\"southwest\" to=\"Cave17\">\r\n      <inherit name=\"southwestdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave4\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"northeast\" to=\"Cave18\">\r\n      <inherit name=\"northeastdirection\" />\r\n    </exit>\r\n    <exit alias=\"southwest\" to=\"Cave5\">\r\n      <inherit name=\"southwestdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave5\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"south\" to=\"Cave20\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <exit alias=\"west\" to=\"Cave11\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n    <exit alias=\"northeast\" to=\"Cave4\">\r\n      <inherit name=\"northeastdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave6\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"north\" to=\"Cave8\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"southwest\" to=\"Cave16\">\r\n      <inherit name=\"southwestdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave7\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"west\" to=\"Cave17\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave8\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"south\" to=\"Cave6\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave9\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"south\" to=\"Cave16\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <exit alias=\"southwest\" to=\"Cave19\">\r\n      <inherit name=\"southwestdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave10\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"east\" to=\"Cave19\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n    <object name=\"flag\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>flag</alias>\r\n      <take type=\"script\"><![CDATA[\r\n        msg (\"<h1>YOU WIN!</h1>\")\r\n        finish\r\n      ]]></take>\r\n    </object>\r\n  </object>\r\n  <object name=\"Cave11\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"north\" to=\"Cave12\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"Cave\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <exit alias=\"east\" to=\"Cave5\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n    <exit alias=\"west\" to=\"Cave14\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n    <exit alias=\"northeast\" to=\"Cave23\">\r\n      <inherit name=\"northeastdirection\" />\r\n    </exit>\r\n    <exit alias=\"northwest\" to=\"Cave2\">\r\n      <inherit name=\"northwestdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave12\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"north\" to=\"Cave13\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"Cave11\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <exit alias=\"northeast\" to=\"Cave15\">\r\n      <inherit name=\"northeastdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave13\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"south\" to=\"Cave12\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <exit alias=\"east\" to=\"Cave15\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave14\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"south\" to=\"Cave11\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave15\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"west\" to=\"Cave13\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n    <exit alias=\"southwest\" to=\"Cave12\">\r\n      <inherit name=\"southwestdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave16\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"north\" to=\"Cave9\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"east\" to=\"Cave18\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n    <exit alias=\"northeast\" to=\"Cave6\">\r\n      <inherit name=\"northeastdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave17\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"east\" to=\"Cave7\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n    <exit alias=\"northeast\" to=\"Cave3\">\r\n      <inherit name=\"northeastdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave18\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"southeast\" to=\"Cave16\">\r\n      <inherit name=\"southeastdirection\" />\r\n    </exit>\r\n    <exit alias=\"southwest\" to=\"Cave4\">\r\n      <inherit name=\"southwestdirection\" />\r\n    </exit>\r\n    <exit alias=\"northwest\" to=\"Cave3\">\r\n      <inherit name=\"northwestdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave19\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"south\" to=\"Cave11\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <exit alias=\"west\" to=\"Cave10\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n    <exit alias=\"northeast\" to=\"Cave9\">\r\n      <inherit name=\"northeastdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave20\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"north\" to=\"Cave5\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"east\" to=\"Cave21\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave21\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"east\" to=\"Cave22\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n    <exit alias=\"west\" to=\"Cave20\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave22\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"north\" to=\"Cave23\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"west\" to=\"Cave21\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"Cave23\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>Cave</alias>\r\n    <attr name=\"grid_width\" type=\"int\">3</attr>\r\n    <attr name=\"grid_length\" type=\"int\">2</attr>\r\n    <attr name=\"grid_fill\">Transparent</attr>\r\n    <attr name=\"grid_border\">Transparent</attr>\r\n    <implementation_notes />\r\n    <exit alias=\"south\" to=\"Cave22\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <exit alias=\"southwest\" to=\"Cave11\">\r\n      <inherit name=\"southwestdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"javascript\">\r\n    <inherit name=\"editor_room\" />\r\n    <description><![CDATA[function showPopup(title, text) {<br/> $('#msgboxCaption').html(text);<br/><br/> var msgboxOptions = {<br/>  modal: true,<br/>  autoOpen: false,<br/>  title: title,<br/>  buttons: [<br/>   {<br/>    text: 'OK',<br/>    click: function () { $(this).dialog('close'); }<br/>   },<br/>  ],<br/>  closeOnEscape: false,<br/> };<br/><br/> $('#msgbox').dialog(msgboxOptions);<br/> $('#msgbox').dialog('open');<br/>};<br/><br/>function showPopupCustomSize(title, text, width, height) {<br/> $('#msgboxCaption').html(text);<br/><br/> var msgboxOptions = {<br/>  modal: true,<br/>  autoOpen: false,<br/>  title: title,<br/>  width: width,<br/>  height: height,<br/>  buttons: [<br/>   {<br/>    text: 'OK',<br/>    click: function () { $(this).dialog('close'); }<br/>   },<br/>  ],<br/>  closeOnEscape: false,<br/> };<br/><br/> $('#msgbox').dialog(msgboxOptions);<br/> $('#msgbox').dialog('open');<br/>};<br/><br/>function showPopupFullscreen(title, text) {<br/> $('#msgboxCaption').html(text);<br/><br/> var msgboxOptions = {<br/>  modal: true,<br/>  autoOpen: false,<br/>  title: title,<br/>  width: $(window).width(),<br/>  height: $(window).height(),<br/>  buttons: [<br/>   {<br/>    text: 'OK',<br/>    click: function () { $(this).dialog('close'); }<br/>   },<br/>  ],<br/>  closeOnEscape: false,<br/> };<br/><br/> $('#msgbox').dialog(msgboxOptions);<br/> $('#msgbox').dialog('open');<br/>};<br/><br/>  <br/>function turnGray(){<br/>  $(\"#msgboxCaption\").css({\"background\":\"lightgray\",\"min-height\":\"800px\",\"padding\":\"20px\"});<br/>}]]></description>\r\n  </object>\r\n  <object name=\"stuff\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"smallstick\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>small stick</alias>\r\n    </object>\r\n    <object name=\"largestick\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>large stick</alias>\r\n    </object>\r\n    <object name=\"rock\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>rock</alias>\r\n    </object>\r\n    <object name=\"stone\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>stone</alias>\r\n    </object>\r\n    <object name=\"towel\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>towel</alias>\r\n    </object>\r\n    <object name=\"brick\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>brick</alias>\r\n    </object>\r\n    <object name=\"book\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>book</alias>\r\n    </object>\r\n    <object name=\"marble\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>marble</alias>\r\n    </object>\r\n    <object name=\"scroll\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>scroll</alias>\r\n    </object>\r\n    <object name=\"sword\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>sword</alias>\r\n    </object>\r\n    <object name=\"knife\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>knife</alias>\r\n    </object>\r\n    <object name=\"bat\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>bat</alias>\r\n    </object>\r\n    <object name=\"ball\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>ball</alias>\r\n    </object>\r\n    <object name=\"metalspike\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>metal spike</alias>\r\n    </object>\r\n    <object name=\"brochure\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>brochure</alias>\r\n    </object>\r\n    <object name=\"toothbrush\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>toothbrush</alias>\r\n    </object>\r\n    <object name=\"screwdriver\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>screwdriver</alias>\r\n    </object>\r\n    <object name=\"rope\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>rope</alias>\r\n    </object>\r\n    <object name=\"dodofeather\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>dodo feather</alias>\r\n    </object>\r\n    <object name=\"smallwoodenboard\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>small wooden board</alias>\r\n    </object>\r\n    <object name=\"jewelencrustedegg\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>jewel-encrusted egg</alias>\r\n    </object>\r\n    <object name=\"compass\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>compass</alias>\r\n    </object>\r\n  </object>\r\n  <turnscript name=\"has_compass\">\r\n    <enabled />\r\n    <script>\r\n      if (compass.parent = game.pov) {\r\n        JS.eval (\"$(\\\"#compassLabel,#compassAccordion\\\").show()\")\r\n      }\r\n      else {\r\n        JS.eval (\"$(\\\"#compassLabel,#compassAccordion\\\").hide()\")\r\n      }\r\n    </script>\r\n  </turnscript>\r\n  <command name=\"no_take_all_cmd\">\r\n    <pattern type=\"string\">^(get|take)\\sall$</pattern>\r\n    <script>\r\n      msg (\"You can only pick up one item per turn.\")\r\n      game.suppressturnscripts = true\r\n    </script>\r\n  </command>\r\n  <command name=\"attack\">\r\n    <pattern>attack #object#</pattern>\r\n    <script><![CDATA[\r\n      if (not GetBoolean(object,\"feature_player\")) {\r\n        msg (\"You can't attack \"+object.article+\".\")\r\n      }\r\n      else {\r\n        msg (\"You attack \"+object.article+\".\")\r\n        if (ListCount(GetDirectChildren(object))>0) {\r\n          obj = PickOneChild(object)\r\n          msg (CapFirst(object.gender)+\" drops \"+GetDisplayName(obj)+\".\")\r\n          obj.parent = object.parent\r\n        }\r\n      }\r\n    ]]></script>\r\n  </command>\r\n  <function name=\"SetupPlayers\">\r\n    msg (\"Enter the number of players.\")\r\n    get input {\r\n      if (IsInt(result)) {\r\n        int = ToInt(result)\r\n        game.playercount = int\r\n        CharacterCreation\r\n      }\r\n      else {\r\n        msg (\"You must enter a number.\")\r\n        SetupPlayers\r\n      }\r\n    }\r\n  </function>\r\n  <function name=\"CharacterCreation\"><![CDATA[\r\n    firsttime {\r\n      game.playerscreatedcount = 0\r\n      game.player_list = NewObjectList()\r\n    }\r\n    game.playerscreatedcount = game.playerscreatedcount + 1\r\n    msg (\"<h1>Player \"+game.playerscreatedcount+\"</h1>\")\r\n    msg (\"Enter your character's name:\")\r\n    get input {\r\n      msg (\"<br/>Hello, \"+result+\"!<br/>\")\r\n      game.currentalias = result\r\n      GetGender\r\n    }\r\n  ]]></function>\r\n  <function name=\"GetGender\">\r\n    ShowMenu (\"Select the character's gender.\", Split(\"male;female;none\",\";\"), false) {\r\n      game.currentgender = result\r\n      switch (game.currentgender) {\r\n        case (\"none\") {\r\n          create (\"player\"+game.playerscreatedcount)\r\n        }\r\n        case (\"male\") {\r\n          create (\"player\"+game.playerscreatedcount, \"namedmale\")\r\n        }\r\n        case (\"female\") {\r\n          create (\"player\"+game.playerscreatedcount, \"namedfemale\")\r\n        }\r\n      }\r\n      obj = GetObject(\"player\"+game.playerscreatedcount)\r\n      obj.feature_player = true\r\n      game.this = obj\r\n      game.this.alias = game.currentalias\r\n      list add (game.player_list, game.this)\r\n      GetDescription\r\n    }\r\n  </function>\r\n  <function name=\"GetDescription\"><![CDATA[\r\n    msg (\"<br/>Please enter the character's description.\")\r\n    get input {\r\n      game.this.look = result\r\n      msg (\"<br/>\"+game.this.alias+\": setup complete!\")\r\n      game.this.displayverbs = game.this.displayverbs - \"Speak to\"\r\n      game.this.displayverbs = game.this.displayverbs + \"Attack\"\r\n      if (not game.playercount = game.playerscreatedcount) {\r\n        CharacterCreation\r\n      }\r\n      else {\r\n        CreationComplete\r\n      }\r\n    }\r\n  ]]></function>\r\n  <function name=\"CreationComplete\">\r\n    msg (\"Character creation complete!\")\r\n    foreach (o, game.player_list) {\r\n      MoveObject (o, Cave)\r\n    }\r\n    ChangePOV (player1)\r\n    game.currentalias = null\r\n    game.currentgender = null\r\n    game.this = null\r\n    SetTurnTimeout (1) {\r\n      next_player.enabled = true\r\n    }\r\n  </function>\r\n  <function name=\"SetupMapPane\"><![CDATA[\r\n    src = GetFileURL(\"cave_system.png\")\r\n    img = \"<img width=&quot;100%&quot; src=&quot;\"+src+\"&quot;/>\"\r\n    JS.setCustomStatus (\"<span style='cursor:pointer;' title='Click to view full-size map!' onclick=\\\"showPopupCustomSize('Map','\"+img+\"', '70%', 'auto')\\\"/><img width='100%' src='\"+GetFileURL(\"cave_system.png\")+\"'/></span>\")\r\n  ]]></function>\r\n  <function name=\"SetupStuff\">\r\n    foreach (o, GetDirectChildren(stuff)) {\r\n      o.take = true\r\n      o.inventoryverbs = o.inventoryverbs - \"Use\"\r\n      MoveObject (o, Cave)\r\n    }\r\n    int = GetRandomInt(1,23)\r\n    if (not int = 1) {\r\n      MoveObject (compass, GetObject(\"Cave\"+int))\r\n    }\r\n  </function>\r\n  <function name=\"FinishTurn\">\r\n    if (not GetBoolean(game, \"suppressturnscripts\")) {\r\n      RunTurnScripts\r\n    }\r\n    game.suppressturnscripts = false\r\n    UpdateStatusAttributes\r\n    CheckDarkness\r\n    UpdateObjectLinks\r\n  </function>\r\n</asl>\r\n```\r\n\r\n\r\n</details>\r\n\r\n<span style='display:none'>I really would like to post this here...</span>",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay...</p>\n<p>This isn't very good, but it may be a good foundation (I think).</p>\n<p>http://textadventures.co.uk/games/view/aapzwuvki0ss26_qctzjgg/multi-player-prototype</p>\n<hr>\n<p>It is VERY rough.  (The screen doesn't even clear after character creation.)</p>\n<p>The instructions will display when play begins (or you can read the game description).</p>\n<hr>\n<h4>The code:</h4>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Multi-player Prototype\"&gt;\n    &lt;gameid&gt;fbefdbc6-56a1-4759-be8f-bfd2ccfc5702&lt;/gameid&gt;\n    &lt;version&gt;0.0.2&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;attr name=\"autodescription_youarein_useprefix\" type=\"boolean\"&gt;false&lt;/attr&gt;\n    &lt;customstatuspane /&gt;\n    &lt;commandpane type=\"boolean\"&gt;false&lt;/commandpane&gt;\n    &lt;feature_advancedscripts /&gt;\n    &lt;author&gt;KV&lt;/author&gt;\n    &lt;description&gt;&lt;![CDATA[This is a very rough prototype.  (The rooms don't even have descriptions.)&lt;br/&gt;&lt;br/&gt;INSTRUCTIONS:&lt;br/&gt;&lt;br/&gt;Select the number of players.  Then, enter the name, gender, and description of each player.&lt;br/&gt;&lt;br/&gt;Each player gets 1 turn, then it will be the next player's turn.&lt;br/&gt;&lt;br/&gt;The flag will be in a random part of the cave in each game.&lt;br/&gt;&lt;br/&gt;The first player to get the flag wins.&lt;br/&gt;&lt;br/&gt;At the moment, the items are only there for dropping (to map the cave), except for the compass, which will be in a random part of the cave in each game.   Whoever has the compass will have a compass pane.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;NOTES:&lt;br/&gt;&lt;br/&gt;You can click on the map in the pane to view the full-size map.&lt;br/&gt;The Cave with the green outline on the map is the starting room.&lt;br/&gt;If you attack a player who is carrying something, they will drop one random item.]]&gt;&lt;/description&gt;\n    &lt;start type=\"script\"&gt;\n      JS.showPopupCustomSize (\"WELCOME!\", game.description, \"80%\", \"auto\")\n      int = GetRandomInt(2,23)\n      flag.parent = GetObject(\"Cave\"+int)\n      SetupMapPane\n      SetupStuff\n      JS.eval (\"$(\\\"#compassLabel,#compassAccordion\\\").hide()\")\n    &lt;/start&gt;\n    &lt;inituserinterface type=\"script\"&gt;&lt;![CDATA[\n      js = Replace(javascript.description,\"&lt;br/&gt;\",\"\")\n      JS.eval (js)\n    ]]&gt;&lt;/inituserinterface&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Character Creation\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;firstenter type=\"script\"&gt;\n      SetupPlayers\n    &lt;/firstenter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;turnscript name=\"next_player\"&gt;\n    &lt;script&gt;&lt;![CDATA[\n      int = ListCount(game.player_list)\n      current = ToInt(Replace(game.pov.name,\"player\",\"\"))\n      if (int = current) {\n        o = player1\n      }\n      else {\n        o = GetObject(\"player\"+(current+1))\n      }\n      msg (\"&lt;br/&gt;&lt;h1&gt;\"+UCase(o.name)+\"&lt;/h1&gt;\")\n      ChangePOV (o)\n    ]]&gt;&lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;object name=\"Cave\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"north\" to=\"Cave11\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave2\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"southeast\" to=\"Cave11\"&gt;\n      &lt;inherit name=\"southeastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave3\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"southeast\" to=\"Cave18\"&gt;\n      &lt;inherit name=\"southeastdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"southwest\" to=\"Cave17\"&gt;\n      &lt;inherit name=\"southwestdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave4\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"northeast\" to=\"Cave18\"&gt;\n      &lt;inherit name=\"northeastdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"southwest\" to=\"Cave5\"&gt;\n      &lt;inherit name=\"southwestdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave5\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"south\" to=\"Cave20\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"west\" to=\"Cave11\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"northeast\" to=\"Cave4\"&gt;\n      &lt;inherit name=\"northeastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave6\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"north\" to=\"Cave8\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"southwest\" to=\"Cave16\"&gt;\n      &lt;inherit name=\"southwestdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave7\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"west\" to=\"Cave17\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave8\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"south\" to=\"Cave6\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave9\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"south\" to=\"Cave16\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"southwest\" to=\"Cave19\"&gt;\n      &lt;inherit name=\"southwestdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave10\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"east\" to=\"Cave19\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;object name=\"flag\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;flag&lt;/alias&gt;\n      &lt;take type=\"script\"&gt;&lt;![CDATA[\n        msg (\"&lt;h1&gt;YOU WIN!&lt;/h1&gt;\")\n        finish\n      ]]&gt;&lt;/take&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave11\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"north\" to=\"Cave12\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"Cave\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"east\" to=\"Cave5\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"west\" to=\"Cave14\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"northeast\" to=\"Cave23\"&gt;\n      &lt;inherit name=\"northeastdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"northwest\" to=\"Cave2\"&gt;\n      &lt;inherit name=\"northwestdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave12\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"north\" to=\"Cave13\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"Cave11\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"northeast\" to=\"Cave15\"&gt;\n      &lt;inherit name=\"northeastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave13\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"south\" to=\"Cave12\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"east\" to=\"Cave15\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave14\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"south\" to=\"Cave11\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave15\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"west\" to=\"Cave13\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"southwest\" to=\"Cave12\"&gt;\n      &lt;inherit name=\"southwestdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave16\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"north\" to=\"Cave9\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"east\" to=\"Cave18\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"northeast\" to=\"Cave6\"&gt;\n      &lt;inherit name=\"northeastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave17\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"east\" to=\"Cave7\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"northeast\" to=\"Cave3\"&gt;\n      &lt;inherit name=\"northeastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave18\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"southeast\" to=\"Cave16\"&gt;\n      &lt;inherit name=\"southeastdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"southwest\" to=\"Cave4\"&gt;\n      &lt;inherit name=\"southwestdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"northwest\" to=\"Cave3\"&gt;\n      &lt;inherit name=\"northwestdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave19\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"south\" to=\"Cave11\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"west\" to=\"Cave10\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"northeast\" to=\"Cave9\"&gt;\n      &lt;inherit name=\"northeastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave20\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"north\" to=\"Cave5\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"east\" to=\"Cave21\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave21\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"east\" to=\"Cave22\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"west\" to=\"Cave20\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave22\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"north\" to=\"Cave23\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"west\" to=\"Cave21\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Cave23\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;Cave&lt;/alias&gt;\n    &lt;attr name=\"grid_width\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"grid_length\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"grid_fill\"&gt;Transparent&lt;/attr&gt;\n    &lt;attr name=\"grid_border\"&gt;Transparent&lt;/attr&gt;\n    &lt;implementation_notes /&gt;\n    &lt;exit alias=\"south\" to=\"Cave22\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"southwest\" to=\"Cave11\"&gt;\n      &lt;inherit name=\"southwestdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"javascript\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description&gt;&lt;![CDATA[function showPopup(title, text) {&lt;br/&gt; $('#msgboxCaption').html(text);&lt;br/&gt;&lt;br/&gt; var msgboxOptions = {&lt;br/&gt;  modal: true,&lt;br/&gt;  autoOpen: false,&lt;br/&gt;  title: title,&lt;br/&gt;  buttons: [&lt;br/&gt;   {&lt;br/&gt;    text: 'OK',&lt;br/&gt;    click: function () { $(this).dialog('close'); }&lt;br/&gt;   },&lt;br/&gt;  ],&lt;br/&gt;  closeOnEscape: false,&lt;br/&gt; };&lt;br/&gt;&lt;br/&gt; $('#msgbox').dialog(msgboxOptions);&lt;br/&gt; $('#msgbox').dialog('open');&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;function showPopupCustomSize(title, text, width, height) {&lt;br/&gt; $('#msgboxCaption').html(text);&lt;br/&gt;&lt;br/&gt; var msgboxOptions = {&lt;br/&gt;  modal: true,&lt;br/&gt;  autoOpen: false,&lt;br/&gt;  title: title,&lt;br/&gt;  width: width,&lt;br/&gt;  height: height,&lt;br/&gt;  buttons: [&lt;br/&gt;   {&lt;br/&gt;    text: 'OK',&lt;br/&gt;    click: function () { $(this).dialog('close'); }&lt;br/&gt;   },&lt;br/&gt;  ],&lt;br/&gt;  closeOnEscape: false,&lt;br/&gt; };&lt;br/&gt;&lt;br/&gt; $('#msgbox').dialog(msgboxOptions);&lt;br/&gt; $('#msgbox').dialog('open');&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;function showPopupFullscreen(title, text) {&lt;br/&gt; $('#msgboxCaption').html(text);&lt;br/&gt;&lt;br/&gt; var msgboxOptions = {&lt;br/&gt;  modal: true,&lt;br/&gt;  autoOpen: false,&lt;br/&gt;  title: title,&lt;br/&gt;  width: $(window).width(),&lt;br/&gt;  height: $(window).height(),&lt;br/&gt;  buttons: [&lt;br/&gt;   {&lt;br/&gt;    text: 'OK',&lt;br/&gt;    click: function () { $(this).dialog('close'); }&lt;br/&gt;   },&lt;br/&gt;  ],&lt;br/&gt;  closeOnEscape: false,&lt;br/&gt; };&lt;br/&gt;&lt;br/&gt; $('#msgbox').dialog(msgboxOptions);&lt;br/&gt; $('#msgbox').dialog('open');&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;  &lt;br/&gt;function turnGray(){&lt;br/&gt;  $(\"#msgboxCaption\").css({\"background\":\"lightgray\",\"min-height\":\"800px\",\"padding\":\"20px\"});&lt;br/&gt;}]]&gt;&lt;/description&gt;\n  &lt;/object&gt;\n  &lt;object name=\"stuff\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"smallstick\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;small stick&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"largestick\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;large stick&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"rock\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;rock&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"stone\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;stone&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"towel\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;towel&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"brick\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;brick&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"book\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;book&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"marble\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;marble&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"scroll\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;scroll&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"sword\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;sword&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"knife\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;knife&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"bat\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;bat&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"ball\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;ball&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"metalspike\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;metal spike&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"brochure\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;brochure&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"toothbrush\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;toothbrush&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"screwdriver\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;screwdriver&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"rope\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;rope&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"dodofeather\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;dodo feather&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"smallwoodenboard\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;small wooden board&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"jewelencrustedegg\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;jewel-encrusted egg&lt;/alias&gt;\n    &lt;/object&gt;\n    &lt;object name=\"compass\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;compass&lt;/alias&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;turnscript name=\"has_compass\"&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      if (compass.parent = game.pov) {\n        JS.eval (\"$(\\\"#compassLabel,#compassAccordion\\\").show()\")\n      }\n      else {\n        JS.eval (\"$(\\\"#compassLabel,#compassAccordion\\\").hide()\")\n      }\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;command name=\"no_take_all_cmd\"&gt;\n    &lt;pattern type=\"string\"&gt;^(get|take)\\sall$&lt;/pattern&gt;\n    &lt;script&gt;\n      msg (\"You can only pick up one item per turn.\")\n      game.suppressturnscripts = true\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;command name=\"attack\"&gt;\n    &lt;pattern&gt;attack #object#&lt;/pattern&gt;\n    &lt;script&gt;&lt;![CDATA[\n      if (not GetBoolean(object,\"feature_player\")) {\n        msg (\"You can't attack \"+object.article+\".\")\n      }\n      else {\n        msg (\"You attack \"+object.article+\".\")\n        if (ListCount(GetDirectChildren(object))&gt;0) {\n          obj = PickOneChild(object)\n          msg (CapFirst(object.gender)+\" drops \"+GetDisplayName(obj)+\".\")\n          obj.parent = object.parent\n        }\n      }\n    ]]&gt;&lt;/script&gt;\n  &lt;/command&gt;\n  &lt;function name=\"SetupPlayers\"&gt;\n    msg (\"Enter the number of players.\")\n    get input {\n      if (IsInt(result)) {\n        int = ToInt(result)\n        game.playercount = int\n        CharacterCreation\n      }\n      else {\n        msg (\"You must enter a number.\")\n        SetupPlayers\n      }\n    }\n  &lt;/function&gt;\n  &lt;function name=\"CharacterCreation\"&gt;&lt;![CDATA[\n    firsttime {\n      game.playerscreatedcount = 0\n      game.player_list = NewObjectList()\n    }\n    game.playerscreatedcount = game.playerscreatedcount + 1\n    msg (\"&lt;h1&gt;Player \"+game.playerscreatedcount+\"&lt;/h1&gt;\")\n    msg (\"Enter your character's name:\")\n    get input {\n      msg (\"&lt;br/&gt;Hello, \"+result+\"!&lt;br/&gt;\")\n      game.currentalias = result\n      GetGender\n    }\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"GetGender\"&gt;\n    ShowMenu (\"Select the character's gender.\", Split(\"male;female;none\",\";\"), false) {\n      game.currentgender = result\n      switch (game.currentgender) {\n        case (\"none\") {\n          create (\"player\"+game.playerscreatedcount)\n        }\n        case (\"male\") {\n          create (\"player\"+game.playerscreatedcount, \"namedmale\")\n        }\n        case (\"female\") {\n          create (\"player\"+game.playerscreatedcount, \"namedfemale\")\n        }\n      }\n      obj = GetObject(\"player\"+game.playerscreatedcount)\n      obj.feature_player = true\n      game.this = obj\n      game.this.alias = game.currentalias\n      list add (game.player_list, game.this)\n      GetDescription\n    }\n  &lt;/function&gt;\n  &lt;function name=\"GetDescription\"&gt;&lt;![CDATA[\n    msg (\"&lt;br/&gt;Please enter the character's description.\")\n    get input {\n      game.this.look = result\n      msg (\"&lt;br/&gt;\"+game.this.alias+\": setup complete!\")\n      game.this.displayverbs = game.this.displayverbs - \"Speak to\"\n      game.this.displayverbs = game.this.displayverbs + \"Attack\"\n      if (not game.playercount = game.playerscreatedcount) {\n        CharacterCreation\n      }\n      else {\n        CreationComplete\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"CreationComplete\"&gt;\n    msg (\"Character creation complete!\")\n    foreach (o, game.player_list) {\n      MoveObject (o, Cave)\n    }\n    ChangePOV (player1)\n    game.currentalias = null\n    game.currentgender = null\n    game.this = null\n    SetTurnTimeout (1) {\n      next_player.enabled = true\n    }\n  &lt;/function&gt;\n  &lt;function name=\"SetupMapPane\"&gt;&lt;![CDATA[\n    src = GetFileURL(\"cave_system.png\")\n    img = \"&lt;img width=&amp;quot;100%&amp;quot; src=&amp;quot;\"+src+\"&amp;quot;/&gt;\"\n    JS.setCustomStatus (\"&lt;span style='cursor:pointer;' title='Click to view full-size map!' onclick=\\\"showPopupCustomSize('Map','\"+img+\"', '70%', 'auto')\\\"/&gt;&lt;img width='100%' src='\"+GetFileURL(\"cave_system.png\")+\"'/&gt;&lt;/span&gt;\")\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"SetupStuff\"&gt;\n    foreach (o, GetDirectChildren(stuff)) {\n      o.take = true\n      o.inventoryverbs = o.inventoryverbs - \"Use\"\n      MoveObject (o, Cave)\n    }\n    int = GetRandomInt(1,23)\n    if (not int = 1) {\n      MoveObject (compass, GetObject(\"Cave\"+int))\n    }\n  &lt;/function&gt;\n  &lt;function name=\"FinishTurn\"&gt;\n    if (not GetBoolean(game, \"suppressturnscripts\")) {\n      RunTurnScripts\n    }\n    game.suppressturnscripts = false\n    UpdateStatusAttributes\n    CheckDarkness\n    UpdateObjectLinks\n  &lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n<p><span style=\"display: none\">I really would like to post this here...</span></p>\n\n",
      "PostDate": "2018-03-14T19:06:06.3192845Z",
      "LastEditDate": "2018-03-14T19:13:05.9287784Z",
      "link": null
    },
    {
      "PostId": "d89307f0-dd85-4bc9-b153-173a46ed3b44",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you'd like to create a Multi-User Dungeon crawler (and you can work the terminal), it looks like this MUD-building system might be cool:\r\n\r\nhttps://github.com/evennia/evennia/wiki/Evennia-Introduction",
      "EditableFormat": "markdown",
      "HTML": "<p>If you'd like to create a Multi-User Dungeon crawler (and you can work the terminal), it looks like this MUD-building system might be cool:</p>\n<p>https://github.com/evennia/evennia/wiki/Evennia-Introduction</p>\n\n",
      "PostDate": "2018-03-14T19:10:08.6011186Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4fdb82b2-8ca6-45a0-b6e2-e528946058ae",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "1. Quest can certainly do 'hot-seating' (one computer) MP play!\r\n\r\n2. but if you want an actual MP playing using multiple computers, that first takes high networking skills (connection, syncing/timing, compatibility), on top of, figuring out how to do it with quest (if it can even be done, may or may not be able to), as of yet, no one's been able to do this as far as I know, you'd have to be a networking professional, computer systems professional, and know quest and all of the languages that it uses.\r\n\r\n--------------\r\n\r\nfor the 'hot-seat' MP usage (#1): see below\r\n\r\n-------------\r\n\r\nQuest already has the 'pov' feature (able to change which is the currently controlled Player Object) set up for you to use, you'd just need to put/code in your own action and/or turn system for it, and everything else as well dealing with your game for it as well.\r\n\r\n-----------\r\n\r\nwhile these are 2D games, their 'MP' game mechanics/features/puzzles can be applied with/as quest text adventure game:\r\n\r\nexample (let's play) vids of these games (might not be the best vids, hadn't watched them):\r\n\r\nhttps://www.youtube.com/watch?v=L7oUArcVis0 (Maniac Mansion for NES)\r\nhttps://www.youtube.com/watch?v=Cizw9fBF24U (Lost Vikings 1 for SNES)\r\n\r\nyou can also do dungeon crawlers or whatever other type of game you can think of... if you got the skills... to create/code it up, lol",
      "EditableFormat": "markdown",
      "HTML": "<ol>\n<li>\n<p>Quest can certainly do 'hot-seating' (one computer) MP play!</p>\n</li>\n<li>\n<p>but if you want an actual MP playing using multiple computers, that first takes high networking skills (connection, syncing/timing, compatibility), on top of, figuring out how to do it with quest (if it can even be done, may or may not be able to), as of yet, no one's been able to do this as far as I know, you'd have to be a networking professional, computer systems professional, and know quest and all of the languages that it uses.</p>\n</li>\n</ol>\n<hr>\n<p>for the 'hot-seat' MP usage (#1): see below</p>\n<hr>\n<p>Quest already has the 'pov' feature (able to change which is the currently controlled Player Object) set up for you to use, you'd just need to put/code in your own action and/or turn system for it, and everything else as well dealing with your game for it as well.</p>\n<hr>\n<p>while these are 2D games, their 'MP' game mechanics/features/puzzles can be applied with/as quest text adventure game:</p>\n<p>example (let's play) vids of these games (might not be the best vids, hadn't watched them):</p>\n<p>https://www.youtube.com/watch?v=L7oUArcVis0 (Maniac Mansion for NES)<br>\nhttps://www.youtube.com/watch?v=Cizw9fBF24U (Lost Vikings 1 for SNES)</p>\n<p>you can also do dungeon crawlers or whatever other type of game you can think of... if you got the skills... to create/code it up, lol</p>\n\n",
      "PostDate": "2018-03-15T01:49:23.3783014Z",
      "LastEditDate": "2018-03-15T01:52:56.3871638Z",
      "link": null
    }
  ]
}
