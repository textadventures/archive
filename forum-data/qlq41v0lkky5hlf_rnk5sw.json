{
  "Topic": {
    "TopicId": "qlq41v0lkky5hlf_rnk5sw",
    "ForumId": "18",
    "Title": "Silly way to do page numbers (Quest gamebook)",
    "LastUpdated": "2024-01-18T19:59:27.2640605Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "70913db0-320e-4f7b-b403-62e9c6785c51",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**Edit:** Stupid typo (a `-` for a `=`)\r\n**Edit2:** Another silly mistake that didn't show up on my first test\r\n\r\nSomething recently prompted me to look at some of the gamebooks on my bookshelf, and I remembered that you were often turning dozens of pages at once. They never had a link to the next page; maybe because that would encourage cheating, or maybe so you didn't accidentally see a possible next option when flipping through pages.\r\n\r\nNow, that's not necessary in an online gamebook. But maybe having page numbers jumping all over the place gives you a feeling of nostalgia or something. So I made a script for Quest that will assign every page a number; attempting to maximise the number of pages that each link jumps over.\r\n\r\nTo use this code:\r\n* The page the player starts on will always be page 1\r\n* If you want a page to have a specific number (for example if you have \"when you solved the riddle, multiply the answer by 3 and turn to that page number\" type puzzles) you can give it a `pagenumber` int attribute.\r\n   * If you set `pagenumber` but also set `number_static` to `false`,  the page will start where you specify but can still move. This could be used to give the algorithm a hint about what would be a good order, so it starts faster.\r\n      * Or you could set one of the pages to be 999… and then it will scatter your pages over the range 1-999 even if there's spaces in the middle (I think… haven't tested that)\r\n* If you put the text `?#?` in a page's text part, it will be replaced with the page number.\r\n   * If you don't, the page number will be added to the beginning of the page\r\n      * If you want to suppress the page number, set the attribute `number_shown` to true\r\n* In the normal links, the text `?#?` will be replaced by the number of the page it goes to.\r\n   * If it's not included, it will append `(turn to page ?#?)` to each option… like in the gamebooks on my bookshelf\r\n* There is a limit set on how many attempts it will make to get the best order for the pages. I've set it to three times the number of pages, but I doubt it'll ever get that high.\r\n   * If it starts timing out on big gamebooks, search for the expression `maxnumber*3` and change it to something lower. This may result in some pages being close to their successors, but will finish quicker.\r\n   * If you want to see how long it's taking, look at the javascript console …\r\n\r\n\r\nThis code can go in the enter script, on the game's \"Scripts\" tab.\r\n```\r\nfirsttime {\r\n  allpages = AllObjects()\r\n  list remove (allpages, player)\r\n  maxnumber = ListCount (allpages)\r\n  next_number = 1\r\n  page_names_by_number = NewStringDictionary()\r\n  if (not HasInt (player.parent, \"pagenumber\")) {\r\n    player.parent.pagenumber = 1\r\n  }\r\n  foreach (page, allpages) {\r\n    if (HasInt (page, \"pagenumber\")) {\r\n      if (not HasBoolean (page, \"number_static\")) {\r\n        page.number_static = true\r\n      }\r\n      if (page.number_static and page.pagenumber > maxnumber) {\r\n        maxnumber = page.pagenumber\r\n      }\r\n    }\r\n    else {\r\n      while (FindWithAttribute (allpages, \"pagenumber\", next_number)) {\r\n        next_number = next_number + 1\r\n      }\r\n      page.pagenumber = next_number\r\n    }\r\n    dictionary add (page_names_by_number, \"\"+page.pagenumber, page.name)\r\n    if (page.pagenumber > maxnumber) {\r\n      maxnumber = page.pagenumber\r\n    }\r\n    if (not HasAttribute (page, \"bi_links\")) {\r\n      page.bi_links = NewObjectList()\r\n    }\r\n    if (HasAttribute (page, \"options\")) {\r\n      foreach (name, page.options) {\r\n        target = GetObject (name)\r\n        if (not target = null) {\r\n          if (not HasAttribute (target, \"bi_links\")) {\r\n            target.bi_links = NewObjectList()\r\n          }\r\n          if (not ListContains (page.bi_links, target)) {\r\n            list add (page.bi_links, target)\r\n          }\r\n          if (not ListContains (target.bi_links, page)) {\r\n            list add (target.bi_links, page)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  orders_tried = NewStringList()\r\n  currentorder = \"\"\r\n  while (not ListContains (orders_tried, currentorder) and ListCount (orders_tried) < maxnumber*3) {\r\n    list add (orders_tried, currentorder)\r\n    currentorder = \"\"\r\n    for (i, 1, maxnumber) {\r\n      currentorder = currentorder + \">\"\r\n      if (DictionaryContains (page_names_by_number, \"\"+i) and GetBoolean (GetObject (StringDictionaryItem (page_names_by_number, \"\"+i)), \"number_static\")) {\r\n        j = maxnumber + 1\r\n      }\r\n      else {\r\n        j = i + 1\r\n      }\r\n      while (DictionaryContains (page_names_by_number, \"\"+j) and GetBoolean (GetObject (StringDictionaryItem (page_names_by_number, \"\"+j)), \"number_static\")) {\r\n        j = j + 1\r\n      }\r\n      if (j <= maxnumber) {\r\n        pushswap = 0\r\n        leftpage = null\r\n        rightpage = null\r\n        if (DictionaryContains (page_names_by_number, \"\"+i)) {\r\n          leftpage = GetObject (StringDictionaryItem (page_names_by_number, \"\"+i))\r\n        }\r\n        if (not leftpage = null) {\r\n          foreach (comp, leftpage.bi_links) {\r\n            if (comp.pagenumber < i) {\r\n              diff = i - comp.pagenumber\r\n              while (diff < maxnumber+12) {\r\n                pushswap = pushswap + 1\r\n                diff = diff * 3/2\r\n                if (diff = 1) {\r\n                  diff = 2\r\n                }\r\n              }\r\n            }\r\n            else if (comp.pagenumber > j) {\r\n              diff = comp.pagenumber - j\r\n              while (diff < maxnumber+12) {\r\n                pushswap = pushswap - 1\r\n                diff = diff * 3/2\r\n                if (diff = 1) {\r\n                  diff = 2\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (DictionaryContains (page_names_by_number, \"\"+j)) {\r\n          rightpage = GetObject (StringDictionaryItem (page_names_by_number, \"\"+j))\r\n        }\r\n        if (not rightpage = null) {\r\n          foreach (comp, rightpage.bi_links) {\r\n            if (comp.pagenumber < i) {\r\n              diff = i - comp.pagenumber\r\n              while (diff < maxnumber+12) {\r\n                pushswap = pushswap - 1\r\n                diff = diff * 3/2\r\n                if (diff = 1) {\r\n                  diff = 2\r\n                }\r\n              }\r\n            }\r\n            else if (comp.pagenumber > j) {\r\n              diff = comp.pagenumber - j\r\n              while (diff < maxnumber+12) {\r\n                pushswap = pushswap + 1\r\n                diff = diff * 3/2\r\n                if (diff = 1) {\r\n                  diff = 2\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (pushswap > 1) {\r\n          if (DictionaryContains (page_names_by_number, \"\"+i)) {\r\n            dictionary remove (page_names_by_number, \"\"+i)\r\n          }\r\n          if (DictionaryContains (page_names_by_number, \"\"+(i+1))) {\r\n            dictionary remove (page_names_by_number, \"\"+(i+1))\r\n          }\r\n          if (not leftpage = null) {\r\n            leftpage.pagenumber = i + 1\r\n            dictionary add (page_names_by_number, \"\"+(i + 1), leftpage.name)\r\n          }\r\n          if (not rightpage = null) {\r\n            rightpage.pagenumber = i\r\n            dictionary add (page_names_by_number, \"\"+i, rightpage.name)\r\n          }\r\n        }\r\n      }\r\n      if (DictionaryContains (page_names_by_number, \"\"+i)) currentorder = currentorder + StringDictionaryItem (page_names_by_number, \"\"+i)\r\n    }\r\n    JS.console.log (\"Arranged order: \"+currentorder)\r\n  }\r\n  // Apply the new numbers to the pages\r\n  foreach (page, AllObjects()) {\r\n    if (HasString (page, \"description\") and HasString (page, \"pagenumber\")) {\r\n      if (Instr (page.description, \"?#?\") > 0 and not HasBoolean (page, \"number_shown\")) {\r\n        page.number_shown = true\r\n      }\r\n      page.description = Replace (page.description, \"?#?\", \"\"+page.pagenumber)\r\n    }\r\n    if (HasAttribute (page, \"options\")) {\r\n      new_options = NewStringDictionary()\r\n      foreach (option, page.options) {\r\n        number = \"???\"\r\n        target = GetObject (option)\r\n        link = DictionaryItem (page.options, option)\r\n        if (not target = null and HasInt (target, \"pagenumber\")) {\r\n          if (Instr (link, \"?#?\") > 0) {\r\n            link = Replace (link, \"?#?\", target.pagenumber)\r\n          }\r\n          else {\r\n            link = link + \" <small>(turn to page \" + target.pagenumber + \")</small>\"\r\n          }\r\n        }\r\n        dictionary add (new_options, option, link)\r\n      }\r\n      page.options = new_options\r\n    }\r\n  }\r\n}\r\nif (HasInt (player.parent, \"pagenumber\") and not GetBoolean (player.parent, \"number_shown\")) {\r\n  msg (\"<h4 align=\\\"center\\\">Page \" + player.parent.pagenumber + \"</h4>\")\r\n}\r\n```\r\nYou will also need this utility function:\r\n```\r\n<function name=\"FindWithAttribute\" type=\"boolean\" parameters=\"list,attr,value\">\r\n  foreach (obj, list) {\r\n    if (HasAttribute (obj, attr)) {\r\n      v = GetAttribute (obj, attr)\r\n      if (TypeOf (v) = TypeOf (value)) {\r\n        if (value = v) {\r\n          return (true)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return (false)\r\n</function>\r\n```\r\n(which checks a list to see if it contains any objects with a specific attribute value)\r\n\r\n**Note:** Yes, it's a spring tensor distribution algorithm implemented using bubble sort. As much as I'd like to do it more efficiently, every method I could think of ends up being way more complex thanks to the interesting quirks of Quest's data scructures.",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>Edit:</strong> Stupid typo (a <code>-</code> for a <code>=</code>)<br>\n<strong>Edit2:</strong> Another silly mistake that didn't show up on my first test</p>\n<p>Something recently prompted me to look at some of the gamebooks on my bookshelf, and I remembered that you were often turning dozens of pages at once. They never had a link to the next page; maybe because that would encourage cheating, or maybe so you didn't accidentally see a possible next option when flipping through pages.</p>\n<p>Now, that's not necessary in an online gamebook. But maybe having page numbers jumping all over the place gives you a feeling of nostalgia or something. So I made a script for Quest that will assign every page a number; attempting to maximise the number of pages that each link jumps over.</p>\n<p>To use this code:</p>\n<ul>\n<li>The page the player starts on will always be page 1</li>\n<li>If you want a page to have a specific number (for example if you have \"when you solved the riddle, multiply the answer by 3 and turn to that page number\" type puzzles) you can give it a <code>pagenumber</code> int attribute.\n<ul>\n<li>If you set <code>pagenumber</code> but also set <code>number_static</code> to <code>false</code>,  the page will start where you specify but can still move. This could be used to give the algorithm a hint about what would be a good order, so it starts faster.\n<ul>\n<li>Or you could set one of the pages to be 999… and then it will scatter your pages over the range 1-999 even if there's spaces in the middle (I think… haven't tested that)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>If you put the text <code>?#?</code> in a page's text part, it will be replaced with the page number.\n<ul>\n<li>If you don't, the page number will be added to the beginning of the page\n<ul>\n<li>If you want to suppress the page number, set the attribute <code>number_shown</code> to true</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>In the normal links, the text <code>?#?</code> will be replaced by the number of the page it goes to.\n<ul>\n<li>If it's not included, it will append <code>(turn to page ?#?)</code> to each option… like in the gamebooks on my bookshelf</li>\n</ul>\n</li>\n<li>There is a limit set on how many attempts it will make to get the best order for the pages. I've set it to three times the number of pages, but I doubt it'll ever get that high.\n<ul>\n<li>If it starts timing out on big gamebooks, search for the expression <code>maxnumber*3</code> and change it to something lower. This may result in some pages being close to their successors, but will finish quicker.</li>\n<li>If you want to see how long it's taking, look at the javascript console …</li>\n</ul>\n</li>\n</ul>\n<p>This code can go in the enter script, on the game's \"Scripts\" tab.</p>\n<pre><code>firsttime {\n  allpages = AllObjects()\n  list remove (allpages, player)\n  maxnumber = ListCount (allpages)\n  next_number = 1\n  page_names_by_number = NewStringDictionary()\n  if (not HasInt (player.parent, \"pagenumber\")) {\n    player.parent.pagenumber = 1\n  }\n  foreach (page, allpages) {\n    if (HasInt (page, \"pagenumber\")) {\n      if (not HasBoolean (page, \"number_static\")) {\n        page.number_static = true\n      }\n      if (page.number_static and page.pagenumber &gt; maxnumber) {\n        maxnumber = page.pagenumber\n      }\n    }\n    else {\n      while (FindWithAttribute (allpages, \"pagenumber\", next_number)) {\n        next_number = next_number + 1\n      }\n      page.pagenumber = next_number\n    }\n    dictionary add (page_names_by_number, \"\"+page.pagenumber, page.name)\n    if (page.pagenumber &gt; maxnumber) {\n      maxnumber = page.pagenumber\n    }\n    if (not HasAttribute (page, \"bi_links\")) {\n      page.bi_links = NewObjectList()\n    }\n    if (HasAttribute (page, \"options\")) {\n      foreach (name, page.options) {\n        target = GetObject (name)\n        if (not target = null) {\n          if (not HasAttribute (target, \"bi_links\")) {\n            target.bi_links = NewObjectList()\n          }\n          if (not ListContains (page.bi_links, target)) {\n            list add (page.bi_links, target)\n          }\n          if (not ListContains (target.bi_links, page)) {\n            list add (target.bi_links, page)\n          }\n        }\n      }\n    }\n  }\n  orders_tried = NewStringList()\n  currentorder = \"\"\n  while (not ListContains (orders_tried, currentorder) and ListCount (orders_tried) &lt; maxnumber*3) {\n    list add (orders_tried, currentorder)\n    currentorder = \"\"\n    for (i, 1, maxnumber) {\n      currentorder = currentorder + \"&gt;\"\n      if (DictionaryContains (page_names_by_number, \"\"+i) and GetBoolean (GetObject (StringDictionaryItem (page_names_by_number, \"\"+i)), \"number_static\")) {\n        j = maxnumber + 1\n      }\n      else {\n        j = i + 1\n      }\n      while (DictionaryContains (page_names_by_number, \"\"+j) and GetBoolean (GetObject (StringDictionaryItem (page_names_by_number, \"\"+j)), \"number_static\")) {\n        j = j + 1\n      }\n      if (j &lt;= maxnumber) {\n        pushswap = 0\n        leftpage = null\n        rightpage = null\n        if (DictionaryContains (page_names_by_number, \"\"+i)) {\n          leftpage = GetObject (StringDictionaryItem (page_names_by_number, \"\"+i))\n        }\n        if (not leftpage = null) {\n          foreach (comp, leftpage.bi_links) {\n            if (comp.pagenumber &lt; i) {\n              diff = i - comp.pagenumber\n              while (diff &lt; maxnumber+12) {\n                pushswap = pushswap + 1\n                diff = diff * 3/2\n                if (diff = 1) {\n                  diff = 2\n                }\n              }\n            }\n            else if (comp.pagenumber &gt; j) {\n              diff = comp.pagenumber - j\n              while (diff &lt; maxnumber+12) {\n                pushswap = pushswap - 1\n                diff = diff * 3/2\n                if (diff = 1) {\n                  diff = 2\n                }\n              }\n            }\n          }\n        }\n        if (DictionaryContains (page_names_by_number, \"\"+j)) {\n          rightpage = GetObject (StringDictionaryItem (page_names_by_number, \"\"+j))\n        }\n        if (not rightpage = null) {\n          foreach (comp, rightpage.bi_links) {\n            if (comp.pagenumber &lt; i) {\n              diff = i - comp.pagenumber\n              while (diff &lt; maxnumber+12) {\n                pushswap = pushswap - 1\n                diff = diff * 3/2\n                if (diff = 1) {\n                  diff = 2\n                }\n              }\n            }\n            else if (comp.pagenumber &gt; j) {\n              diff = comp.pagenumber - j\n              while (diff &lt; maxnumber+12) {\n                pushswap = pushswap + 1\n                diff = diff * 3/2\n                if (diff = 1) {\n                  diff = 2\n                }\n              }\n            }\n          }\n        }\n        if (pushswap &gt; 1) {\n          if (DictionaryContains (page_names_by_number, \"\"+i)) {\n            dictionary remove (page_names_by_number, \"\"+i)\n          }\n          if (DictionaryContains (page_names_by_number, \"\"+(i+1))) {\n            dictionary remove (page_names_by_number, \"\"+(i+1))\n          }\n          if (not leftpage = null) {\n            leftpage.pagenumber = i + 1\n            dictionary add (page_names_by_number, \"\"+(i + 1), leftpage.name)\n          }\n          if (not rightpage = null) {\n            rightpage.pagenumber = i\n            dictionary add (page_names_by_number, \"\"+i, rightpage.name)\n          }\n        }\n      }\n      if (DictionaryContains (page_names_by_number, \"\"+i)) currentorder = currentorder + StringDictionaryItem (page_names_by_number, \"\"+i)\n    }\n    JS.console.log (\"Arranged order: \"+currentorder)\n  }\n  // Apply the new numbers to the pages\n  foreach (page, AllObjects()) {\n    if (HasString (page, \"description\") and HasString (page, \"pagenumber\")) {\n      if (Instr (page.description, \"?#?\") &gt; 0 and not HasBoolean (page, \"number_shown\")) {\n        page.number_shown = true\n      }\n      page.description = Replace (page.description, \"?#?\", \"\"+page.pagenumber)\n    }\n    if (HasAttribute (page, \"options\")) {\n      new_options = NewStringDictionary()\n      foreach (option, page.options) {\n        number = \"???\"\n        target = GetObject (option)\n        link = DictionaryItem (page.options, option)\n        if (not target = null and HasInt (target, \"pagenumber\")) {\n          if (Instr (link, \"?#?\") &gt; 0) {\n            link = Replace (link, \"?#?\", target.pagenumber)\n          }\n          else {\n            link = link + \" &lt;small&gt;(turn to page \" + target.pagenumber + \")&lt;/small&gt;\"\n          }\n        }\n        dictionary add (new_options, option, link)\n      }\n      page.options = new_options\n    }\n  }\n}\nif (HasInt (player.parent, \"pagenumber\") and not GetBoolean (player.parent, \"number_shown\")) {\n  msg (\"&lt;h4 align=\\\"center\\\"&gt;Page \" + player.parent.pagenumber + \"&lt;/h4&gt;\")\n}\n</code></pre>\n<p>You will also need this utility function:</p>\n<pre><code>&lt;function name=\"FindWithAttribute\" type=\"boolean\" parameters=\"list,attr,value\"&gt;\n  foreach (obj, list) {\n    if (HasAttribute (obj, attr)) {\n      v = GetAttribute (obj, attr)\n      if (TypeOf (v) = TypeOf (value)) {\n        if (value = v) {\n          return (true)\n        }\n      }\n    }\n  }\n  return (false)\n&lt;/function&gt;\n</code></pre>\n<p>(which checks a list to see if it contains any objects with a specific attribute value)</p>\n<p><strong>Note:</strong> Yes, it's a spring tensor distribution algorithm implemented using bubble sort. As much as I'd like to do it more efficiently, every method I could think of ends up being way more complex thanks to the interesting quirks of Quest's data scructures.</p>\n\n",
      "PostDate": "2024-01-18T19:59:27.2640605Z",
      "LastEditDate": "2024-01-22T11:40:53.3100964Z",
      "link": null
    },
    {
      "PostId": "a63de269-58f3-41fd-b606-c38714dc63bc",
      "UserId": 31991,
      "Username": "daeun",
      "AvatarUrl": "https://i.imgur.com/cX50WTzb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I banged my head against the wall a few days until I made it worked, and your code turned up to be very useful. \r\nI was expecting the page numbers to be random every time the player starts up the game, Nope!, the page numbers are consistent, making it a true nostalgic returning trip to the golden age of real game books where you actually flip the books.\r\n\r\nI have used your code on my game and have credited mrangel.\r\n\r\nSo, for newcomers who is facing issue of adding this code, you can continue reading the following.\r\nThe code 1 of mrangel is straightforward, directly paste into gamebook, script tab as stated by mrangel.\r\nThe code 2 is the hard one, no matter how you paste it, it ain't going work.\r\n1. Paste it at game start script, doesn't works.\r\n2. Paste it at page 1, doesn't works.\r\n3. Paste it at function, doesn't works.\r\n\r\nSo, the answer is, right click the pages, + function.\r\nGive it a name of FindWithAttribute\r\nSet the return type to Boolean\r\nAdd in the parameters, list, attr, value (You should have 3 parameters in total.)\r\n\r\nCopy the simplified code 2 into the function called FindWithAttribute.\r\n```\r\nforeach (obj, list) {\r\n  if (HasAttribute (obj, attr)) {\r\n    v = GetAttribute (obj, attr)\r\n    if (TypeOf (v) = TypeOf (value)) {\r\n      if (value = v) {\r\n        return (true)\r\n      }\r\n    }\r\n  }\r\n}\r\nreturn (false)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I banged my head against the wall a few days until I made it worked, and your code turned up to be very useful.<br>\nI was expecting the page numbers to be random every time the player starts up the game, Nope!, the page numbers are consistent, making it a true nostalgic returning trip to the golden age of real game books where you actually flip the books.</p>\n<p>I have used your code on my game and have credited mrangel.</p>\n<p>So, for newcomers who is facing issue of adding this code, you can continue reading the following.<br>\nThe code 1 of mrangel is straightforward, directly paste into gamebook, script tab as stated by mrangel.<br>\nThe code 2 is the hard one, no matter how you paste it, it ain't going work.</p>\n<ol>\n<li>Paste it at game start script, doesn't works.</li>\n<li>Paste it at page 1, doesn't works.</li>\n<li>Paste it at function, doesn't works.</li>\n</ol>\n<p>So, the answer is, right click the pages, + function.<br>\nGive it a name of FindWithAttribute<br>\nSet the return type to Boolean<br>\nAdd in the parameters, list, attr, value (You should have 3 parameters in total.)</p>\n<p>Copy the simplified code 2 into the function called FindWithAttribute.</p>\n<pre><code>foreach (obj, list) {\n  if (HasAttribute (obj, attr)) {\n    v = GetAttribute (obj, attr)\n    if (TypeOf (v) = TypeOf (value)) {\n      if (value = v) {\n        return (true)\n      }\n    }\n  }\n}\nreturn (false)\n</code></pre>\n\n",
      "PostDate": "2024-01-21T14:42:31.2071637Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "02cc02fb-2bf2-4ffa-9767-96b240d3c857",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> The code 2 is the hard one, no matter how you paste it, it ain't going work.\r\n\r\nAh, sorry, didn't think about giving detailed directions. If you're on the desktop editor, you can also paste it in full code view; just putting it outside of any other objects or functions; but I guess that's not something most people know how to do either.\r\n\r\nGlad you could figure out how to use it :)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>The code 2 is the hard one, no matter how you paste it, it ain't going work.</p>\n</blockquote>\n<p>Ah, sorry, didn't think about giving detailed directions. If you're on the desktop editor, you can also paste it in full code view; just putting it outside of any other objects or functions; but I guess that's not something most people know how to do either.</p>\n<p>Glad you could figure out how to use it :)</p>\n\n",
      "PostDate": "2024-01-21T20:41:08.8036444Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ebaad387-6178-499f-ac92-aa9a7aea8696",
      "UserId": 31991,
      "Username": "daeun",
      "AvatarUrl": "https://i.imgur.com/cX50WTzb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Failed to load game.\r\nThe following errors occurred:\r\nInvalid XML: Name cannot begin with the '<' character, hexadecimal value 0x3C. Line 209, position 81.\r\n\r\nThis is not important, since the code is already working.\r\nBut just informing, that copy pasting code 2 into full code view doesn't work.\r\nOkay, maybe I placed in wrong place.\r\nSo, I created a fake function.\r\nThen I go to full code view and replace fake function with code 2, which still gives me the same error.",
      "EditableFormat": "markdown",
      "HTML": "<p>Failed to load game.<br>\nThe following errors occurred:<br>\nInvalid XML: Name cannot begin with the '&lt;' character, hexadecimal value 0x3C. Line 209, position 81.</p>\n<p>This is not important, since the code is already working.<br>\nBut just informing, that copy pasting code 2 into full code view doesn't work.<br>\nOkay, maybe I placed in wrong place.<br>\nSo, I created a fake function.<br>\nThen I go to full code view and replace fake function with code 2, which still gives me the same error.</p>\n\n",
      "PostDate": "2024-01-21T21:01:50.5029629Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "66bb5a49-e627-410b-86ff-41cf620ef4a5",
      "UserId": 31991,
      "Username": "daeun",
      "AvatarUrl": "https://i.imgur.com/cX50WTzb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I might have found the error the first line of code 2.\r\nThe last letter should be > and not <.\r\n\r\n```\r\n<function name=\"FindWithAttribute\" type=\"boolean\" parameters=\"list,attr,value\"<\r\n  foreach (obj, list) {\r\n    if (HasAttribute (obj, attr)) {\r\n      v = GetAttribute (obj, attr)\r\n      if (TypeOf (v) = TypeOf (value)) {\r\n        if (value = v) {\r\n          return (true)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return (false)\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I might have found the error the first line of code 2.<br>\nThe last letter should be &gt; and not &lt;.</p>\n<pre><code>&lt;function name=\"FindWithAttribute\" type=\"boolean\" parameters=\"list,attr,value\"&lt;\n  foreach (obj, list) {\n    if (HasAttribute (obj, attr)) {\n      v = GetAttribute (obj, attr)\n      if (TypeOf (v) = TypeOf (value)) {\n        if (value = v) {\n          return (true)\n        }\n      }\n    }\n  }\n  return (false)\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2024-01-21T21:07:44.7766102Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
