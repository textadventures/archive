{
  "Topic": {
    "TopicId": "5071",
    "ForumId": "10",
    "Title": "Help! new person",
    "LastUpdated": "2015-02-28T22:02:20+00:00",
    "ReplyCount": 21
  },
  "Posts": [
    {
      "PostId": "34966",
      "UserId": 0,
      "Username": "pacattack25",
      "UserAvatar": null,
      "UserGravatar": "f3df963e5c055cf9a7880e20443aea24",
      "EditableText": "Hello - I felt like trying to get into the quest world and ... there's a lot of stuff for me to get into I've been playing around and I find that there are certain things that are unintuitive to me. Like for instance get input is INFURIATING to me - after 6 years of JAVA/c++ I expect a method called &quot;GetInput&quot; to get the input maybe even put it into the variable that I want it to do... But this leads me to a problem... I find no way to set where the get input is going, and I don't know where the getinput is going to validate said input. I honestly have no idea what 'log' is supposed to do and the help files that I have seen don't explain it, picking inventory adds to inventory by default and doesn't give me an option to take from inventory, if not handled the best way (I can't put in if (Variable != &quot;true&quot; in the actual code without producing an error)) I feel like this is a programmer's nightmare - of course it said scripting language and C++ and Java aren't those... but I have done some powershell and Terminal practice under my belt as well, and the if is the same for just about everything. A method called &quot;GetInput&quot; is about the same in any language this is just... unintelligent to me personally that I can't get a hold of someone's input to validate it. I even put &quot;Validating input&quot; into the search bar and got NOTHING - this means one of three things: 1 either it's SO hard and unintuitive that no one has ever gotten a hold of how to do it, 2: it's so easy to do it I just have to get my programming knowledge out of the way first and restart from a world that expects no one to be a programmer - I just haven't figured it out yet, 3: The search doesn't find general terms meaning the same thing as what you put in... either way of the three there's a problem.",
      "EditableFormat": "bbcode",
      "HTML": "Hello - I felt like trying to get into the quest world and ... there's a lot of stuff for me to get into I've been playing around and I find that there are certain things that are unintuitive to me. Like for instance get input is INFURIATING to me - after 6 years of JAVA/c++ I expect a method called &quot;GetInput&quot; to get the input maybe even put it into the variable that I want it to do... But this leads me to a problem... I find no way to set where the get input is going, and I don't know where the getinput is going to validate said input. I honestly have no idea what 'log' is supposed to do and the help files that I have seen don't explain it, picking inventory adds to inventory by default and doesn't give me an option to take from inventory, if not handled the best way (I can't put in if (Variable != &quot;true&quot; in the actual code without producing an error)) I feel like this is a programmer's nightmare - of course it said scripting language and C++ and Java aren't those... but I have done some powershell and Terminal practice under my belt as well, and the if is the same for just about everything. A method called &quot;GetInput&quot; is about the same in any language this is just... unintelligent to me personally that I can't get a hold of someone's input to validate it. I even put &quot;Validating input&quot; into the search bar and got NOTHING - this means one of three things: 1 either it's SO hard and unintuitive that no one has ever gotten a hold of how to do it, 2: it's so easy to do it I just have to get my programming knowledge out of the way first and restart from a world that expects no one to be a programmer - I just haven't figured it out yet, 3: The search doesn't find general terms meaning the same thing as what you put in... either way of the three there's a problem.",
      "PostDate": "2015-02-27T03:56:59+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34967",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "DId you really check the wiki? If you search for &quot;getInput&quot; you get the answer that this function is deprecated and &quot;get input&quot; should be used (with link to the correct wiki page). And there you will find an example how to use it. And a programmer should know that some languages use  &quot;&lt;&gt;&quot; instead of &quot;!=&quot; .",
      "EditableFormat": "bbcode",
      "HTML": "DId you really check the wiki? If you search for &quot;getInput&quot; you get the answer that this function is deprecated and &quot;get input&quot; should be used (with link to the correct wiki page). And there you will find an example how to use it. And a programmer should know that some languages use  &quot;&lt;&gt;&quot; instead of &quot;!=&quot; .",
      "PostDate": "2015-02-27T06:55:45+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34968",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "Like this:\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=5055\">viewtopic.php?f=10&amp;t=5055</a><!-- l -->",
      "EditableFormat": "bbcode",
      "HTML": "Like this:<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=5055\">viewtopic.php?f=10&amp;t=5055</a><!-- l -->",
      "PostDate": "2015-02-27T07:44:01+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34969",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "some links for you:\n\n1. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/\">http://docs.textadventures.co.uk/quest/</a><!-- m -->\n\n2. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/upgrade_notes.html\">http://docs.textadventures.co.uk/quest/ ... notes.html</a><!-- m -->\n\n3. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/asl_requirements.html\">http://docs.textadventures.co.uk/quest/ ... ments.html</a><!-- m -->\n\n4. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/tutorial/\">http://docs.textadventures.co.uk/quest/tutorial/</a><!-- m -->\n5. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/\">http://docs.textadventures.co.uk/quest/guides/</a><!-- m -->\n6. <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewforum.php?f=18\">viewforum.php?f=18</a><!-- l -->\n7. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/character_creation.html\">http://docs.textadventures.co.uk/quest/ ... ation.html</a><!-- m -->\n\n8. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/\">http://docs.textadventures.co.uk/quest/elements/</a><!-- m -->\n9. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/\">http://docs.textadventures.co.uk/quest/types/</a><!-- m -->\n10. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/\">http://docs.textadventures.co.uk/quest/functions/</a><!-- m --> (category order)\n11. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/index_allfunctions.html\">http://docs.textadventures.co.uk/quest/ ... tions.html</a><!-- m --> (alphabetical order)\n12. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/\">http://docs.textadventures.co.uk/quest/scripts/</a><!-- m -->\n\n13. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/command.html\">http://docs.textadventures.co.uk/quest/ ... mmand.html</a><!-- m -->\n14. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/get_input.html\">http://docs.textadventures.co.uk/quest/ ... input.html</a><!-- m -->\n\n15. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/using_lists.html\">http://docs.textadventures.co.uk/quest/ ... lists.html</a><!-- m -->\n16. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/using_dictionaries.html\">http://docs.textadventures.co.uk/quest/ ... aries.html</a><!-- m -->\n\n17. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/pattern_matching.html\">http://docs.textadventures.co.uk/quest/ ... ching.html</a><!-- m -->\n18. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/using_templates.html\">http://docs.textadventures.co.uk/quest/ ... lates.html</a><!-- m -->\n\n19. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scopes.html\">http://docs.textadventures.co.uk/quest/scopes.html</a><!-- m --> , and the 'Gets' and the 'Alls' Functions too.\n\n-----------\n\nyou can use:\n\n'get input' Script\nand\nCOMMANDS\n\nfor using user~player (during game play) inputs\n\n------------\n\n'get input' sets whatever you type to a built-in Variable named~called~labeled as 'result'\n\nresult = your_typed_in_input_during_game_play\n\n---------\n\na quick thing about quest:\n\nVARIABLES:\n-&gt; Variables: local~temporary: only works for the scripting that it is directly within\n-&gt; Attributes: global~'permanent'~'save+load able' (as they're attached to Objects, ?Object-Oriented Programming?, so, so long as the Object exists, its Attribute can be referenced)\n-&gt; Parameters: Commands and Functions use them (this is probably what you're more used to in what you're talking about in your OP)\n\n---------\n\nVariable examples:\n\n(see Attribute Types, <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/\">http://docs.textadventures.co.uk/quest/types/</a><!-- m --> , for syntax for the different types of Attributes)\n\nvariable_string_label = Value_or_Expression\n\nresult = &quot;blah&quot;\nhandled = &quot;blah2&quot;\nyou_go_first = true\nvalue = 5\n\n--------------\n\nAttribute examples:\n\n(see Attribute Types, <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/\">http://docs.textadventures.co.uk/quest/types/</a><!-- m --> , for syntax for the different types of Attributes)\n\nObject_name.Attribute_name = Value_or_Expression\n\nplayer.strength_integer = 100\norc.dead_boolean = false\ngame.flag_string = &quot;1&quot;\ngame.greeting_string = &quot;hi, what is your name?&quot;\nplayer.left_hand_object = shield\nplayer.right_hand_object = sword\ngame.primary_color_stringlist = split (&quot;red;blue;yellow&quot;, &quot;;&quot;)\nplayer.condition_string = &quot;poisoned&quot;\nplayer.condition_stringlist = split (&quot;poisoned;paralyzed;petrified&quot;, &quot;;&quot;)\nplayer.equipment_body_slots_objectlist = split (&quot;head;chest;waist;arms;legs;feet;hands;left_hand;right_hand&quot;, &quot;;&quot;)\nplayer.equipment_body_slots_objectlist2 = split (&quot;helmet;mail;tasset;vambraces;greaves;boots;guantlets;shield;sword&quot;, &quot;;&quot;)\netc etc etc\n\nplayer.damage = player.weapon.damage + player.weapon.damage * player.strength / 100 - orc.armor.armor_class - orc.armor.armor_class * orc.endurance / 100\n\n-----\n\nanyways back to 'get input'... examples:\n\n[code:3mpqobnz]&lt;function name=&quot;name_function&quot;&gt;\n  msg (&quot;What is your name?&quot;)\n  get input {\n    // I type in&#58; HK\n    // quest automatically (hidden from you) does this&#58; result = HK\n    msg (&quot;Your name is &quot; + result + &quot;&#46;&quot;)\n  }\n&lt;/function&gt;\n\n&lt;function name=&quot;name_function_2&quot;&gt;\n  msg (&quot;Your name is &quot; + result + &quot;&#46;&quot;)\n  // ERROR !!!! 'result' is not defined\n&lt;/function&gt;[/code:3mpqobnz]\n\nor\n\n[code:3mpqobnz]&lt;function name=&quot;name_function&quot;&gt;\n  msg (&quot;What is your name?&quot;)\n  get input {\n    // I type in&#58; HK\n    // quest automatically (hidden from you) does this&#58; result = HK\n    // conceptually&#58; player&#46;alias = result = HK\n    player&#46;alias = result\n    msg (&quot;Your name is &quot; + player&#46;alias + &quot;&#46;&quot;)\n  }\n&lt;/function&gt;\n\n&lt;object name=&quot;player&quot;&gt;\n&lt;/object&gt;\n\n&lt;function name=&quot;name_function_2&quot;&gt;\n  msg (&quot;Your name is &quot; + player&#46;alias + &quot;&#46;&quot;)\n  // no error occurs\n&lt;/function&gt;[/code:3mpqobnz]\n\n----------------------------\n\nCommands:\n\nthis allows for none, one, or multiple inputs (as Parameters) to be used within its scripting\n\n(really lame examples)\n\npattern: 'activator text~word' (then optionally) 'connector text~word' (then optionally) '#Variable~Parameter1#' ... (optionally) '#Variable~Parameter2#' ... etc etc etc\n\n[code:3mpqobnz]&lt;command name=&quot;help_command&quot;&gt;\n  &lt;pattern&gt;help&lt;/pattern&gt;\n  &lt;script&gt;\n    // in the command bar during game play, you type&#58; help\n    msg (&quot;hi&quot;)\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;command name=&quot;help_command&quot;&gt;\n  &lt;pattern&gt;help #text#&lt;/pattern&gt;\n  &lt;script&gt;\n    // in the command bar during game play, you type&#58; help (whatever you want, for this example&#58; hint or godmode)\n    //\n    // in the command bar during game play, you type&#58; help hint\n    // or\n    // in the command bar during game play, you type&#58; help godmode\n    //\n    if (text = &quot;hint&quot;) {\n      msg (&quot;Here's a hint for you to get past this part of the game&quot;)\n    } else if (text = &quot;godmode&quot;) {\n      player&#46;invincible = true\n    }\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;command name=&quot;help_command&quot;&gt;\n  &lt;pattern&gt;help #text1# and #text2#&lt;/pattern&gt;\n  &lt;script&gt;\n    // in the command bar during game play, you type&#58; help (whatever you want, for this example&#58; hint or godmode)\n    //\n    // in the command bar during game play, you type&#58; help hint and red\n    // or\n    // in the command bar during game play, you type&#58; help godmode and blue\n    // or\n    // in the command bar during game play, you type&#58; help blah and blah\n    //\n    if (text1 = &quot;hint&quot; and text2 = &quot;red&quot;) {\n      msg (&quot;Here's a hint for you to get past this part of the game&quot;)\n    } else if (text1 = &quot;godmode&quot; and text2 = &quot;blue&quot;) {\n      player&#46;invincible = true\n    } else {\n      msg (&quot;bye&quot;)\n    }\n  &lt;/script&gt;\n&lt;/command&gt;[/code:3mpqobnz]\n\ninstead of #text#, you can also use #object#, both #text# and #object# have there pro and con uses (in requiring a bit of extra and different scripting)\n\n----------\n\nWe can get into (more) Parameter usage with Functions, just let me know, as I'm tired right now, lol.\n\n----------\n\nin quest the 'NAME' String Attribute is the ID for the quest engine, it~they must be unique. Whereas, 'ALIAS', is just a built in string that doesn't have to be unique for each thing.\n\n[code:3mpqobnz]&lt;object name=&quot;player&quot;&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;player&quot;&gt;\n&lt;/object&gt;\n\n// ERROR !!!![/code:3mpqobnz]\n\nvs\n\n[code:3mpqobnz]&lt;object name=&quot;player&quot;&gt;\n  &lt;attr name=&quot;alias&quot; type=&quot;string&quot;&gt;HK&lt;/attr&gt;\n  // String Attributes are shortened by the quest engine to this tag syntax&#58; &lt;alias&gt;HK&lt;/alias&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;player2&quot;&gt;\n  &lt;attr name=&quot;alias&quot; type=&quot;string&quot;&gt;HK&lt;/attr&gt;\n&lt;/object&gt;\n\n// NO error[/code:3mpqobnz]\n\nvs\n\n[code:3mpqobnz]&lt;object name=&quot;player&quot;&gt;\n  &lt;attr name=&quot;strength&quot; type=&quot;string&quot;&gt;strong&lt;/attr&gt;\n  &lt;attr name=&quot;strength&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n&lt;/object&gt;\n\n// ERROR !!!![/code:3mpqobnz]\n\nvs\n\n[code:3mpqobnz]&lt;object name=&quot;player&quot;&gt;\n  &lt;attr name=&quot;strength_string&quot; type=&quot;string&quot;&gt;strong&lt;/attr&gt;\n  &lt;attr name=&quot;strength_integer&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;\n&lt;/object&gt;\n\n// NO error[/code:3mpqobnz]\n\n--------\n\nthe quest engine does a lot of the programming stuff already for us (to make it easy to use for non-coders), you just need to learn its language, terms, and how quest works.\n\nP.S.\n\nQuest uses 'XML (eXtensible Markup Language)', but can also use: JQuery (I think) and JS too\n\nAlex is currently recreating~rebuilding quest (as the 'QuestKit' version) to use JS, as I guess XML isn't a common language, sighs (as I learnt all of my limited coding knowledge from quest and its XML usage, lol ~ I guess I'll be learning JS next, laughs)\n\nlastly, being a programmer, you're probably aware of good software already, but if not, I like using this one:\n\nnotepad++ ( <!-- m --><a class=\"postlink\" href=\"http://notepad-plus-plus.org/\">http://notepad-plus-plus.org/</a><!-- m --> )\n\nwhich, allows you to select 'XML' (along with MANY~MOST~ALL other languages), which can help you to learn its format~structure~syntax, if you need, as well as for reading, writing, and troublshooting the~quest's code, too.",
      "EditableFormat": "bbcode",
      "HTML": "some links for you:<br/><br/>1. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/\">http://docs.textadventures.co.uk/quest/</a><!-- m --><br/><br/>2. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/upgrade_notes.html\">http://docs.textadventures.co.uk/quest/ ... notes.html</a><!-- m --><br/><br/>3. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/asl_requirements.html\">http://docs.textadventures.co.uk/quest/ ... ments.html</a><!-- m --><br/><br/>4. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/tutorial/\">http://docs.textadventures.co.uk/quest/tutorial/</a><!-- m --><br/>5. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/\">http://docs.textadventures.co.uk/quest/guides/</a><!-- m --><br/>6. <!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewforum.php?f=18\">viewforum.php?f=18</a><!-- l --><br/>7. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/character_creation.html\">http://docs.textadventures.co.uk/quest/ ... ation.html</a><!-- m --><br/><br/>8. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/\">http://docs.textadventures.co.uk/quest/elements/</a><!-- m --><br/>9. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/\">http://docs.textadventures.co.uk/quest/types/</a><!-- m --><br/>10. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/\">http://docs.textadventures.co.uk/quest/functions/</a><!-- m --> (category order)<br/>11. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/index_allfunctions.html\">http://docs.textadventures.co.uk/quest/ ... tions.html</a><!-- m --> (alphabetical order)<br/>12. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/\">http://docs.textadventures.co.uk/quest/scripts/</a><!-- m --><br/><br/>13. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/command.html\">http://docs.textadventures.co.uk/quest/ ... mmand.html</a><!-- m --><br/>14. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/get_input.html\">http://docs.textadventures.co.uk/quest/ ... input.html</a><!-- m --><br/><br/>15. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/using_lists.html\">http://docs.textadventures.co.uk/quest/ ... lists.html</a><!-- m --><br/>16. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/using_dictionaries.html\">http://docs.textadventures.co.uk/quest/ ... aries.html</a><!-- m --><br/><br/>17. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/pattern_matching.html\">http://docs.textadventures.co.uk/quest/ ... ching.html</a><!-- m --><br/>18. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/using_templates.html\">http://docs.textadventures.co.uk/quest/ ... lates.html</a><!-- m --><br/><br/>19. <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scopes.html\">http://docs.textadventures.co.uk/quest/scopes.html</a><!-- m --> , and the 'Gets' and the 'Alls' Functions too.<br/><br/>-----------<br/><br/>you can use:<br/><br/>'get input' Script<br/>and<br/>COMMANDS<br/><br/>for using user~player (during game play) inputs<br/><br/>------------<br/><br/>'get input' sets whatever you type to a built-in Variable named~called~labeled as 'result'<br/><br/>result = your_typed_in_input_during_game_play<br/><br/>---------<br/><br/>a quick thing about quest:<br/><br/>VARIABLES:<br/>-&gt; Variables: local~temporary: only works for the scripting that it is directly within<br/>-&gt; Attributes: global~'permanent'~'save+load able' (as they're attached to Objects, ?Object-Oriented Programming?, so, so long as the Object exists, its Attribute can be referenced)<br/>-&gt; Parameters: Commands and Functions use them (this is probably what you're more used to in what you're talking about in your OP)<br/><br/>---------<br/><br/>Variable examples:<br/><br/>(see Attribute Types, <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/\">http://docs.textadventures.co.uk/quest/types/</a><!-- m --> , for syntax for the different types of Attributes)<br/><br/>variable_string_label = Value_or_Expression<br/><br/>result = &quot;blah&quot;<br/>handled = &quot;blah2&quot;<br/>you_go_first = true<br/>value = 5<br/><br/>--------------<br/><br/>Attribute examples:<br/><br/>(see Attribute Types, <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/\">http://docs.textadventures.co.uk/quest/types/</a><!-- m --> , for syntax for the different types of Attributes)<br/><br/>Object_name.Attribute_name = Value_or_Expression<br/><br/>player.strength_integer = 100<br/>orc.dead_boolean = false<br/>game.flag_string = &quot;1&quot;<br/>game.greeting_string = &quot;hi, what is your name?&quot;<br/>player.left_hand_object = shield<br/>player.right_hand_object = sword<br/>game.primary_color_stringlist = split (&quot;red;blue;yellow&quot;, &quot;;&quot;)<br/>player.condition_string = &quot;poisoned&quot;<br/>player.condition_stringlist = split (&quot;poisoned;paralyzed;petrified&quot;, &quot;;&quot;)<br/>player.equipment_body_slots_objectlist = split (&quot;head;chest;waist;arms;legs;feet;hands;left_hand;right_hand&quot;, &quot;;&quot;)<br/>player.equipment_body_slots_objectlist2 = split (&quot;helmet;mail;tasset;vambraces;greaves;boots;guantlets;shield;sword&quot;, &quot;;&quot;)<br/>etc etc etc<br/><br/>player.damage = player.weapon.damage + player.weapon.damage * player.strength / 100 - orc.armor.armor_class - orc.armor.armor_class * orc.endurance / 100<br/><br/>-----<br/><br/>anyways back to 'get input'... examples:<br/><br/><pre><code>&lt;function name=&quot;name_function&quot;&gt;<br/>  msg (&quot;What is your name?&quot;)<br/>  get input {<br/>    // I type in&#58; HK<br/>    // quest automatically (hidden from you) does this&#58; result = HK<br/>    msg (&quot;Your name is &quot; + result + &quot;&#46;&quot;)<br/>  }<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;name_function_2&quot;&gt;<br/>  msg (&quot;Your name is &quot; + result + &quot;&#46;&quot;)<br/>  // ERROR !!!! 'result' is not defined<br/>&lt;/function&gt;</code></pre><br/><br/>or<br/><br/><pre><code>&lt;function name=&quot;name_function&quot;&gt;<br/>  msg (&quot;What is your name?&quot;)<br/>  get input {<br/>    // I type in&#58; HK<br/>    // quest automatically (hidden from you) does this&#58; result = HK<br/>    // conceptually&#58; player&#46;alias = result = HK<br/>    player&#46;alias = result<br/>    msg (&quot;Your name is &quot; + player&#46;alias + &quot;&#46;&quot;)<br/>  }<br/>&lt;/function&gt;<br/><br/>&lt;object name=&quot;player&quot;&gt;<br/>&lt;/object&gt;<br/><br/>&lt;function name=&quot;name_function_2&quot;&gt;<br/>  msg (&quot;Your name is &quot; + player&#46;alias + &quot;&#46;&quot;)<br/>  // no error occurs<br/>&lt;/function&gt;</code></pre><br/><br/>----------------------------<br/><br/>Commands:<br/><br/>this allows for none, one, or multiple inputs (as Parameters) to be used within its scripting<br/><br/>(really lame examples)<br/><br/>pattern: 'activator text~word' (then optionally) 'connector text~word' (then optionally) '#Variable~Parameter1#' ... (optionally) '#Variable~Parameter2#' ... etc etc etc<br/><br/><pre><code>&lt;command name=&quot;help_command&quot;&gt;<br/>  &lt;pattern&gt;help&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    // in the command bar during game play, you type&#58; help<br/>    msg (&quot;hi&quot;)<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;command name=&quot;help_command&quot;&gt;<br/>  &lt;pattern&gt;help #text#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    // in the command bar during game play, you type&#58; help (whatever you want, for this example&#58; hint or godmode)<br/>    //<br/>    // in the command bar during game play, you type&#58; help hint<br/>    // or<br/>    // in the command bar during game play, you type&#58; help godmode<br/>    //<br/>    if (text = &quot;hint&quot;) {<br/>      msg (&quot;Here's a hint for you to get past this part of the game&quot;)<br/>    } else if (text = &quot;godmode&quot;) {<br/>      player&#46;invincible = true<br/>    }<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;command name=&quot;help_command&quot;&gt;<br/>  &lt;pattern&gt;help #text1# and #text2#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    // in the command bar during game play, you type&#58; help (whatever you want, for this example&#58; hint or godmode)<br/>    //<br/>    // in the command bar during game play, you type&#58; help hint and red<br/>    // or<br/>    // in the command bar during game play, you type&#58; help godmode and blue<br/>    // or<br/>    // in the command bar during game play, you type&#58; help blah and blah<br/>    //<br/>    if (text1 = &quot;hint&quot; and text2 = &quot;red&quot;) {<br/>      msg (&quot;Here's a hint for you to get past this part of the game&quot;)<br/>    } else if (text1 = &quot;godmode&quot; and text2 = &quot;blue&quot;) {<br/>      player&#46;invincible = true<br/>    } else {<br/>      msg (&quot;bye&quot;)<br/>    }<br/>  &lt;/script&gt;<br/>&lt;/command&gt;</code></pre><br/><br/>instead of #text#, you can also use #object#, both #text# and #object# have there pro and con uses (in requiring a bit of extra and different scripting)<br/><br/>----------<br/><br/>We can get into (more) Parameter usage with Functions, just let me know, as I'm tired right now, lol.<br/><br/>----------<br/><br/>in quest the 'NAME' String Attribute is the ID for the quest engine, it~they must be unique. Whereas, 'ALIAS', is just a built in string that doesn't have to be unique for each thing.<br/><br/><pre><code>&lt;object name=&quot;player&quot;&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;player&quot;&gt;<br/>&lt;/object&gt;<br/><br/>// ERROR !!!!</code></pre><br/><br/>vs<br/><br/><pre><code>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;attr name=&quot;alias&quot; type=&quot;string&quot;&gt;HK&lt;/attr&gt;<br/>  // String Attributes are shortened by the quest engine to this tag syntax&#58; &lt;alias&gt;HK&lt;/alias&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;player2&quot;&gt;<br/>  &lt;attr name=&quot;alias&quot; type=&quot;string&quot;&gt;HK&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>// NO error</code></pre><br/><br/>vs<br/><br/><pre><code>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;attr name=&quot;strength&quot; type=&quot;string&quot;&gt;strong&lt;/attr&gt;<br/>  &lt;attr name=&quot;strength&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>// ERROR !!!!</code></pre><br/><br/>vs<br/><br/><pre><code>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;attr name=&quot;strength_string&quot; type=&quot;string&quot;&gt;strong&lt;/attr&gt;<br/>  &lt;attr name=&quot;strength_integer&quot; type=&quot;int&quot;&gt;100&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>// NO error</code></pre><br/><br/>--------<br/><br/>the quest engine does a lot of the programming stuff already for us (to make it easy to use for non-coders), you just need to learn its language, terms, and how quest works.<br/><br/>P.S.<br/><br/>Quest uses 'XML (eXtensible Markup Language)', but can also use: JQuery (I think) and JS too<br/><br/>Alex is currently recreating~rebuilding quest (as the 'QuestKit' version) to use JS, as I guess XML isn't a common language, sighs (as I learnt all of my limited coding knowledge from quest and its XML usage, lol ~ I guess I'll be learning JS next, laughs)<br/><br/>lastly, being a programmer, you're probably aware of good software already, but if not, I like using this one:<br/><br/>notepad++ ( <!-- m --><a class=\"postlink\" href=\"http://notepad-plus-plus.org/\">http://notepad-plus-plus.org/</a><!-- m --> )<br/><br/>which, allows you to select 'XML' (along with MANY~MOST~ALL other languages), which can help you to learn its format~structure~syntax, if you need, as well as for reading, writing, and troublshooting the~quest's code, too.",
      "PostDate": "2015-02-27T11:41:08+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34970",
      "UserId": 0,
      "Username": "pacattack25",
      "UserAvatar": null,
      "UserGravatar": "f3df963e5c055cf9a7880e20443aea24",
      "EditableText": "This is a LOT of response - First: My bad that was the tutorial I was looking at - which really didn't help. I still can't find input VALIDATION (checking it) though... \n\n2nd: Get input - it's written ON THE BOX get input - how was I supposed to know I needed to put something in there? (an example of not being intuitive) I figured I needed to do SOMETHING - but had no idea what as I wasn't prompted wasn't told that I needed to do something, if fact I only figured out I needed to do something because I saw get input then and found no way to put that into the variable in the then.  But thank you for showing me how I need to make it work and like I said Java/C++ I had heard of some languages using &lt;&gt; but just haven't needed to use them thanks for that too in between that and the now knowing result is what I need to put into something I can check that with if. \n\n3rd: WARNING INFORMATION OVERLOAD: It might take me a little bit to get through that all - especially if I'm only trying to do a simple starter game to get a grip on the most basic tools I have and eventually work from the ground up. I'm sure that will all be useful to read when I get a chance though - thanks.",
      "EditableFormat": "bbcode",
      "HTML": "This is a LOT of response - First: My bad that was the tutorial I was looking at - which really didn't help. I still can't find input VALIDATION (checking it) though... <br/><br/>2nd: Get input - it's written ON THE BOX get input - how was I supposed to know I needed to put something in there? (an example of not being intuitive) I figured I needed to do SOMETHING - but had no idea what as I wasn't prompted wasn't told that I needed to do something, if fact I only figured out I needed to do something because I saw get input then and found no way to put that into the variable in the then.  But thank you for showing me how I need to make it work and like I said Java/C++ I had heard of some languages using &lt;&gt; but just haven't needed to use them thanks for that too in between that and the now knowing result is what I need to put into something I can check that with if. <br/><br/>3rd: WARNING INFORMATION OVERLOAD: It might take me a little bit to get through that all - especially if I'm only trying to do a simple starter game to get a grip on the most basic tools I have and eventually work from the ground up. I'm sure that will all be useful to read when I get a chance though - thanks.",
      "PostDate": "2015-02-27T14:24:44+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34971",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "I've never used get input with the gui. Just seems faster to do in code view.",
      "EditableFormat": "bbcode",
      "HTML": "I've never used get input with the gui. Just seems faster to do in code view.",
      "PostDate": "2015-02-27T15:04:58+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34972",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Are you using the GUI~Editor, or you working with (writing in) the code directly?\n\n------\n\nyou got to add~write in the 'msg' Scripts yourself, telling that an input is required and what type of input is being asked for, as the 'get input' is just that, a Script for the engine (telling it to get what is typed into the command box during game play), for example:\n\nin code:\n\n[code:22kbpl5h]msg (&quot;What is your name?&quot;)\nget input {\n  player&#46;alias = result\n}[/code:22kbpl5h]\n\nin GUI~Editor:\n\nrun as script -&gt; add a~new script -&gt; output -&gt; 'print a message' Script -&gt; [MESSAGE]:text or [EXPRESSION]:text+VARIABLES -&gt; (your message~question)\nadd a~new script -&gt; output -&gt; 'get input' Script\n-&gt; add a~new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; [EXPRESSION] -&gt; player.alias = result\n\n-------\n\nto understand quest (XML), all you need is to understand are these things:\n\nObject Oriented Programming:\n\nthe main unit in quest are the ELEMENTS ( <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/\">http://docs.textadventures.co.uk/quest/elements/</a><!-- m --> ):\n\nObjects (Room Objects, Player Objects, non-room non-player Other-Object Objects, and the special Game Object), Exits (Room Object connectors), Attributes (Strings, Scripts, Objects, Booleans ~ 'true or false' flags, Integers, Doubles ~ Floats ~ Floating Points ~ Decimal Numbers, Stringlists, Objectlists, Stringdictionaries, Objectdictionaries, Scriptdictionaries, Inherited, etc), Commands, Functions, Verbs, Object Types, Timers, Turnscripts, Templates, and etc\n\nThe ELEMENTS act as containers~baskets, being able to either hold Objects, Attributes, and~or Scripting. This is the concept of Object Oriented Programming (as best as I presume to understand it, lol).\n\nObjects: able to hold other Objects and~or Attributes\nVerbs, Commands, Functions, Timers, and Turnscripts: able to hold Scriptings\nObject Types: able to hold Attributes, including Inherited Attributes (other Object Types)\n\nScripting:\n\nObject_name.Attribute_name = Value_or_Expression\nor\nvariable_string_label = Value_or_Expression\n\nTag Blocks:\n\n[code:22kbpl5h]&lt;ELEMENT name=&quot;xxx&quot;&gt;\n  // contents&#58; Attributes, Objects, and~or Scriptings\n&lt;/ELEMENT&gt;[/code:22kbpl5h]\n\nAttributes (setting, re-setting, and~or altering):\n\nObject_name.Attribute_name = Value_or_Expression\n\n'if' Scripting:\n\n[code:22kbpl5h]if (Object_name&#46;Attribute_name OPERATOR Value_or_Expression) {\n  // scripting\n} else if (Object_name&#46;Attribute_name OPERATOR Value_or_Expression) {\n  // scripting\n} else {\n  // scripting\n}[/code:22kbpl5h]\n\n----------------\n\njust to highlight this link from my previous post, as it'll be a lot of help for you:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/character_creation.html\">http://docs.textadventures.co.uk/quest/ ... ation.html</a><!-- m -->\n\n(and also the rest of the guides here too: <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/\">http://docs.textadventures.co.uk/quest/guides/</a><!-- m --> )\n\nas this 'character creation' covers the basics of quest, laughs.",
      "EditableFormat": "bbcode",
      "HTML": "Are you using the GUI~Editor, or you working with (writing in) the code directly?<br/><br/>------<br/><br/>you got to add~write in the 'msg' Scripts yourself, telling that an input is required and what type of input is being asked for, as the 'get input' is just that, a Script for the engine (telling it to get what is typed into the command box during game play), for example:<br/><br/>in code:<br/><br/><pre><code>msg (&quot;What is your name?&quot;)<br/>get input {<br/>  player&#46;alias = result<br/>}</code></pre><br/><br/>in GUI~Editor:<br/><br/>run as script -&gt; add a~new script -&gt; output -&gt; 'print a message' Script -&gt; [MESSAGE]:text or [EXPRESSION]:text+VARIABLES -&gt; (your message~question)<br/>add a~new script -&gt; output -&gt; 'get input' Script<br/>-&gt; add a~new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; [EXPRESSION] -&gt; player.alias = result<br/><br/>-------<br/><br/>to understand quest (XML), all you need is to understand are these things:<br/><br/>Object Oriented Programming:<br/><br/>the main unit in quest are the ELEMENTS ( <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/\">http://docs.textadventures.co.uk/quest/elements/</a><!-- m --> ):<br/><br/>Objects (Room Objects, Player Objects, non-room non-player Other-Object Objects, and the special Game Object), Exits (Room Object connectors), Attributes (Strings, Scripts, Objects, Booleans ~ 'true or false' flags, Integers, Doubles ~ Floats ~ Floating Points ~ Decimal Numbers, Stringlists, Objectlists, Stringdictionaries, Objectdictionaries, Scriptdictionaries, Inherited, etc), Commands, Functions, Verbs, Object Types, Timers, Turnscripts, Templates, and etc<br/><br/>The ELEMENTS act as containers~baskets, being able to either hold Objects, Attributes, and~or Scripting. This is the concept of Object Oriented Programming (as best as I presume to understand it, lol).<br/><br/>Objects: able to hold other Objects and~or Attributes<br/>Verbs, Commands, Functions, Timers, and Turnscripts: able to hold Scriptings<br/>Object Types: able to hold Attributes, including Inherited Attributes (other Object Types)<br/><br/>Scripting:<br/><br/>Object_name.Attribute_name = Value_or_Expression<br/>or<br/>variable_string_label = Value_or_Expression<br/><br/>Tag Blocks:<br/><br/><pre><code>&lt;ELEMENT name=&quot;xxx&quot;&gt;<br/>  // contents&#58; Attributes, Objects, and~or Scriptings<br/>&lt;/ELEMENT&gt;</code></pre><br/><br/>Attributes (setting, re-setting, and~or altering):<br/><br/>Object_name.Attribute_name = Value_or_Expression<br/><br/>'if' Scripting:<br/><br/><pre><code>if (Object_name&#46;Attribute_name OPERATOR Value_or_Expression) {<br/>  // scripting<br/>} else if (Object_name&#46;Attribute_name OPERATOR Value_or_Expression) {<br/>  // scripting<br/>} else {<br/>  // scripting<br/>}</code></pre><br/><br/>----------------<br/><br/>just to highlight this link from my previous post, as it'll be a lot of help for you:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/character_creation.html\">http://docs.textadventures.co.uk/quest/ ... ation.html</a><!-- m --><br/><br/>(and also the rest of the guides here too: <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/\">http://docs.textadventures.co.uk/quest/guides/</a><!-- m --> )<br/><br/>as this 'character creation' covers the basics of quest, laughs.",
      "PostDate": "2015-02-27T15:09:20+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34973",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;pacattack25&quot;:25hb3bn4]This is a LOT of response - First: My bad that was the tutorial I was looking at - which really didn't help. I still can't find input VALIDATION (checking it) though...[/quote:25hb3bn4]\nMost of what the player types gets validated by Quest behind the scenes, and by the time it has passed control to your command, it has already found the items the player is referring to and determined they are in the vicinity at least. The [i:25hb3bn4]get input[/i:25hb3bn4] command is for exceptional cases, say you are asking the player his name or for the password. There is no built-in validation for that, as it would be specific  to your situation (but there are functions that will let you do it yourself).",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>pacattack25 wrote:</cite>This is a LOT of response - First: My bad that was the tutorial I was looking at - which really didn't help. I still can't find input VALIDATION (checking it) though...</blockquote><br/>Most of what the player types gets validated by Quest behind the scenes, and by the time it has passed control to your command, it has already found the items the player is referring to and determined they are in the vicinity at least. The <span style=\"font-style:italic;\">get input</span> command is for exceptional cases, say you are asking the player his name or for the password. There is no built-in validation for that, as it would be specific  to your situation (but there are functions that will let you do it yourself).",
      "PostDate": "2015-02-27T15:18:26+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34974",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "just to add to Pixie explaining this better then me and Silver (as we're still noobs to programming~coding), if you want to see all of the underlying code that quest already has built into it (the engine does a lot of this programming stuff already for us, such as your 'validating inputs', which me and Silver weren't understanding as we're noobs to programming~coding), then in Quest's GUI~Editor mode, in the lower left corner of the screen is:\n\nFilter -&gt; Show Library Elements -&gt; (toggle~check it in~on)\n\nthis will show all the built-in stuff as light grey text on the left pane's 'tree of stuff', (which you can alter ~ though obviously be careful or your game will be messed up, but not the quest program itself, due to the forced 'copy' button requirement safeguard that Alex has implemented in), and to then further look at the stuff, look under the 'Attributes' Tab on the right pane.\n\nI think the 'HANDLECOMMAND' does a lot of the needed programming, but Pixie can help better with where to find the 'validating inputs' within the built-in code, as I've not yet tried to learn it.\n\nOr, you can always just open up quest program folder's 'CORE' .aslx files too, don't mess up these, or you'll have to re-download and~or install quest again.",
      "EditableFormat": "bbcode",
      "HTML": "just to add to Pixie explaining this better then me and Silver (as we're still noobs to programming~coding), if you want to see all of the underlying code that quest already has built into it (the engine does a lot of this programming stuff already for us, such as your 'validating inputs', which me and Silver weren't understanding as we're noobs to programming~coding), then in Quest's GUI~Editor mode, in the lower left corner of the screen is:<br/><br/>Filter -&gt; Show Library Elements -&gt; (toggle~check it in~on)<br/><br/>this will show all the built-in stuff as light grey text on the left pane's 'tree of stuff', (which you can alter ~ though obviously be careful or your game will be messed up, but not the quest program itself, due to the forced 'copy' button requirement safeguard that Alex has implemented in), and to then further look at the stuff, look under the 'Attributes' Tab on the right pane.<br/><br/>I think the 'HANDLECOMMAND' does a lot of the needed programming, but Pixie can help better with where to find the 'validating inputs' within the built-in code, as I've not yet tried to learn it.<br/><br/>Or, you can always just open up quest program folder's 'CORE' .aslx files too, don't mess up these, or you'll have to re-download and~or install quest again.",
      "PostDate": "2015-02-27T15:32:03+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34977",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "Not sure what you mean by validate, but you can do this:\n\n[code:20ymghl9]if result = (&quot;yes&quot;) {\n  // run script\n} \nelse { \n  // run a different script\n}\n[/code:20ymghl9]\n\nUnless I've coded that wrong - not sitting near any of my own code presently!",
      "EditableFormat": "bbcode",
      "HTML": "Not sure what you mean by validate, but you can do this:<br/><br/><pre><code>if result = (&quot;yes&quot;) {<br/>  // run script<br/>} <br/>else { <br/>  // run a different script<br/>}<br/></code></pre><br/><br/>Unless I've coded that wrong - not sitting near any of my own code presently!",
      "PostDate": "2015-02-27T16:58:41+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34979",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "the 'validating' he's refering to is at a deeper ~ more base ~ foundational, level, is if there wasn't the quest software~engine doing this for us already.\n\nI think it's like how we do (not the best example ~ but it's all I can think of at the moment):\n\nMoveObject (player, room2)\n\nquest is already programmed to take 'room2' and search for an Object called room2, as well as with the 'player' Object too. This is a level of real programming that we don't understand. He~she as a programmer is wondering how to script in what the engine already does for him~her. We, just take the quest engine's programming for granted, laughs. Thus we've no idea what this 'validating' of input is, that he~she is talking about, lol.\n\n------\n\nor...\n\nmaybe he~she was just needing help with how to set the input to a variable, not knowing that for 'get input', quest uses the built-in variable: 'result'\n\nas, I've no idea what C++, JS, and etc real programming languages' format~syntax~structure looks like, nor how it works, compared to quest's XML\n\nI think some languages (AS ~ Action Script like how flash player, .swf, uses) are something like this:\n\nvar result=&quot;yes&quot;\n\n-------\n\nand you're just slightly off in your syntax:\n\nif (result = &quot;yes&quot;) {\n-&gt; // script\n} else {\n-&gt; // script\n}\n\nbut, I don't think this has to do with what he~she is asking about.",
      "EditableFormat": "bbcode",
      "HTML": "the 'validating' he's refering to is at a deeper ~ more base ~ foundational, level, is if there wasn't the quest software~engine doing this for us already.<br/><br/>I think it's like how we do (not the best example ~ but it's all I can think of at the moment):<br/><br/>MoveObject (player, room2)<br/><br/>quest is already programmed to take 'room2' and search for an Object called room2, as well as with the 'player' Object too. This is a level of real programming that we don't understand. He~she as a programmer is wondering how to script in what the engine already does for him~her. We, just take the quest engine's programming for granted, laughs. Thus we've no idea what this 'validating' of input is, that he~she is talking about, lol.<br/><br/>------<br/><br/>or...<br/><br/>maybe he~she was just needing help with how to set the input to a variable, not knowing that for 'get input', quest uses the built-in variable: 'result'<br/><br/>as, I've no idea what C++, JS, and etc real programming languages' format~syntax~structure looks like, nor how it works, compared to quest's XML<br/><br/>I think some languages (AS ~ Action Script like how flash player, .swf, uses) are something like this:<br/><br/>var result=&quot;yes&quot;<br/><br/>-------<br/><br/>and you're just slightly off in your syntax:<br/><br/>if (result = &quot;yes&quot;) {<br/>-&gt; // script<br/>} else {<br/>-&gt; // script<br/>}<br/><br/>but, I don't think this has to do with what he~she is asking about.",
      "PostDate": "2015-02-27T17:21:29+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34980",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "I see, and cheers! I can't even program basic stuff from memory yet lol.",
      "EditableFormat": "bbcode",
      "HTML": "I see, and cheers! I can't even program basic stuff from memory yet lol.",
      "PostDate": "2015-02-27T17:25:52+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34981",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "the entire expression for the 'if' Script is, result = &quot;yes&quot;, so this must be within the: if (________) { script }, as:\n\nif (result = &quot;yes&quot;) { script }",
      "EditableFormat": "bbcode",
      "HTML": "the entire expression for the 'if' Script is, result = &quot;yes&quot;, so this must be within the: if (________) { script }, as:<br/><br/>if (result = &quot;yes&quot;) { script }",
      "PostDate": "2015-02-27T17:28:00+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34983",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "I sort of knew that with functions\n\n[code:2ygq376w]name&#46;capitalised = CapFirst (result)[/code:2ygq376w]\n\nBut that knowledge didn't carry over to the If script for some reason.",
      "EditableFormat": "bbcode",
      "HTML": "I sort of knew that with functions<br/><br/><pre><code>name&#46;capitalised = CapFirst (result)</code></pre><br/><br/>But that knowledge didn't carry over to the If script for some reason.",
      "PostDate": "2015-02-27T17:39:42+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34985",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "just a typo by you, wink, you're only off by ~ 6 spaces with your left parenthesis, hehe. Yes, a simple typo mistake, and we all make typo mistakes.\n\nif result = (&quot;yes&quot;) { script }",
      "EditableFormat": "bbcode",
      "HTML": "just a typo by you, wink, you're only off by ~ 6 spaces with your left parenthesis, hehe. Yes, a simple typo mistake, and we all make typo mistakes.<br/><br/>if result = (&quot;yes&quot;) { script }",
      "PostDate": "2015-02-27T17:47:48+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34987",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "Well it wasn't really a typo, it was a misunderstanding. But I guess talking about it on here helps correct and reinforce this stuff until it's muscle memory (I've seen that expression used before and quite like it).",
      "EditableFormat": "bbcode",
      "HTML": "Well it wasn't really a typo, it was a misunderstanding. But I guess talking about it on here helps correct and reinforce this stuff until it's muscle memory (I've seen that expression used before and quite like it).",
      "PostDate": "2015-02-27T18:00:18+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34993",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;Silver&quot;:1vwdhtie]Not sure what you mean by validate, but you can do this:\n\n[code:1vwdhtie]if result = (&quot;yes&quot;) {\n  // run script\n} \nelse { \n  // run a different script\n}\n[/code:1vwdhtie]\n\nUnless I've coded that wrong - not sitting near any of my own code presently![/quote:1vwdhtie]\nIf you fill in a form on a web page that asks for your e-mail address, it might check that it has one and only one @ in it, before sending the form to the server. That is validation.\n\nIn Quest, if the player types READ BOOK, Quest will look for an appropriate object, book, and will only run the script on your READ command (or verb) if it is successful, so that is a type of validation too.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Silver wrote:</cite>Not sure what you mean by validate, but you can do this:<br/><br/><pre><code>if result = (&quot;yes&quot;) {<br/>  // run script<br/>} <br/>else { <br/>  // run a different script<br/>}<br/></code></pre><br/><br/>Unless I've coded that wrong - not sitting near any of my own code presently!</blockquote><br/>If you fill in a form on a web page that asks for your e-mail address, it might check that it has one and only one @ in it, before sending the form to the server. That is validation.<br/><br/>In Quest, if the player types READ BOOK, Quest will look for an appropriate object, book, and will only run the script on your READ command (or verb) if it is successful, so that is a type of validation too.",
      "PostDate": "2015-02-27T20:45:09+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34996",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "That's interesting. I did notice with Quest (if I'm remembering correctly) that you could type &quot;read the book&quot; and it would ignore 'the' and respond to 'read' and 'book' which is helpful regarding what people may input.",
      "EditableFormat": "bbcode",
      "HTML": "That's interesting. I did notice with Quest (if I'm remembering correctly) that you could type &quot;read the book&quot; and it would ignore 'the' and respond to 'read' and 'book' which is helpful regarding what people may input.",
      "PostDate": "2015-02-27T21:32:12+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "35003",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "that has to do with Commands (their 'pattern' setting):\n\n[code:3tge2en8]&lt;command name=&quot;read_command&quot;&gt;\n  &lt;pattern&gt;read the #object#&lt;/pattern&gt;\n  &lt;script&gt;\n    if (object = null) {\n      foreach (object_x, AllObjects () ) {\n        if (object_x&#46;alias = ToString (object) ) {\n          object = object_x\n        }\n      }\n    }\n    if (object = null) {\n      msg (&quot;Sorry, the object doesn't seem to exist&quot;)\n    } else {\n      msg (&quot;You read the book, &quot; + object&#46;name +&quot;&#46;&quot;)\n    }\n  &lt;/script&gt;\n&lt;/command&gt;[/code:3tge2en8]\n\nmy syntax or scripting-structure is probably wrong, as I've only used #text#, never learned how you work with using #ojbect#, lol",
      "EditableFormat": "bbcode",
      "HTML": "that has to do with Commands (their 'pattern' setting):<br/><br/><pre><code>&lt;command name=&quot;read_command&quot;&gt;<br/>  &lt;pattern&gt;read the #object#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    if (object = null) {<br/>      foreach (object_x, AllObjects () ) {<br/>        if (object_x&#46;alias = ToString (object) ) {<br/>          object = object_x<br/>        }<br/>      }<br/>    }<br/>    if (object = null) {<br/>      msg (&quot;Sorry, the object doesn't seem to exist&quot;)<br/>    } else {<br/>      msg (&quot;You read the book, &quot; + object&#46;name +&quot;&#46;&quot;)<br/>    }<br/>  &lt;/script&gt;<br/>&lt;/command&gt;</code></pre><br/><br/>my syntax or scripting-structure is probably wrong, as I've only used #text#, never learned how you work with using #ojbect#, lol",
      "PostDate": "2015-02-27T23:23:42+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "35012",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "#object# is how Quest does the validation, so most of what you have in your script is not needed. The value in object has already been identified as an object in scope. All you have to do is check the item can be read. Say you have an attribute on books called readtext, check that is present, and print it if it is.\n[code:184m30l9]&lt;command name=&quot;read_command&quot;&gt;\n  &lt;pattern&gt;read the #object#&lt;/pattern&gt;\n  &lt;script&gt;\n    if (HasString(object, &quot;readtext&quot;) {\n      msg (&quot;You read the &quot; + object&#46;name +&quot;&#58; &quot; + object&#46;readtext)\n    }\n    else {\n      msg(&quot;There is nothing worth reading on the &quot; + object&#46;name +&quot;&#46;&quot;)\n    }\n  &lt;/script&gt;\n&lt;/command&gt;[/code:184m30l9]",
      "EditableFormat": "bbcode",
      "HTML": "#object# is how Quest does the validation, so most of what you have in your script is not needed. The value in object has already been identified as an object in scope. All you have to do is check the item can be read. Say you have an attribute on books called readtext, check that is present, and print it if it is.<br/><pre><code>&lt;command name=&quot;read_command&quot;&gt;<br/>  &lt;pattern&gt;read the #object#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    if (HasString(object, &quot;readtext&quot;) {<br/>      msg (&quot;You read the &quot; + object&#46;name +&quot;&#58; &quot; + object&#46;readtext)<br/>    }<br/>    else {<br/>      msg(&quot;There is nothing worth reading on the &quot; + object&#46;name +&quot;&#46;&quot;)<br/>    }<br/>  &lt;/script&gt;<br/>&lt;/command&gt;</code></pre>",
      "PostDate": "2015-02-28T15:45:23+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "35021",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Ah, thanks Pixie, I was confused at what to do with using #object# within the scripting.\n\n(you basically just check for an attribute, if that is what your command's purpose is, to involve an attribute in doing something, otherwise, I guess you'd just be doing a simple msg with the Object's name~alias, or whatever else you could do, that I'm not able to think of at the moment. But, all the stuff that is needed when using the #text# isn't needed with using #object#, as that was what was confusing me, if and what I need to do of that stuff with the #object# or not)\n\n----------\n\nwhat happens if you type in something that isn't an object though? does it just display the 'else msg', or does it generate an error msg, or just does nothing (no notification of it failing) ???\n\nalso, were you saying that the underlying code validation, will already check if what you typed in is the alias of the object, or does it not do this type of check, and you do need to write in that check yourself in the scripting ??? exactly how thorough and~or what exactly takes place with the underlying code's validation? what are all of the validation checks that the underlying code does?",
      "EditableFormat": "bbcode",
      "HTML": "Ah, thanks Pixie, I was confused at what to do with using #object# within the scripting.<br/><br/>(you basically just check for an attribute, if that is what your command's purpose is, to involve an attribute in doing something, otherwise, I guess you'd just be doing a simple msg with the Object's name~alias, or whatever else you could do, that I'm not able to think of at the moment. But, all the stuff that is needed when using the #text# isn't needed with using #object#, as that was what was confusing me, if and what I need to do of that stuff with the #object# or not)<br/><br/>----------<br/><br/>what happens if you type in something that isn't an object though? does it just display the 'else msg', or does it generate an error msg, or just does nothing (no notification of it failing) ???<br/><br/>also, were you saying that the underlying code validation, will already check if what you typed in is the alias of the object, or does it not do this type of check, and you do need to write in that check yourself in the scripting ??? exactly how thorough and~or what exactly takes place with the underlying code's validation? what are all of the validation checks that the underlying code does?",
      "PostDate": "2015-02-28T21:17:06+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "35028",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "It says the same thing as it does in other cases (e.g. if you type &quot;x foobie&quot; when foobie isn't in the room), which is typically to print &quot;I can't see that.&quot;\n\nAnd it does all of those checks just as it does in other cases.",
      "EditableFormat": "bbcode",
      "HTML": "It says the same thing as it does in other cases (e.g. if you type &quot;x foobie&quot; when foobie isn't in the room), which is typically to print &quot;I can't see that.&quot;<br/><br/>And it does all of those checks just as it does in other cases.",
      "PostDate": "2015-02-28T22:02:20+00:00",
      "LastEditDate": null
    }
  ]
}
