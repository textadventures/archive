{
  "Topic": {
    "TopicId": "4989",
    "ForumId": "10",
    "Title": "An alternative to if-scripts?",
    "LastUpdated": "2015-01-23T18:44:22+00:00",
    "ReplyCount": 16
  },
  "Posts": [
    {
      "PostId": "34009",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "I'm trying to work on a highly reactive piece, where there are a lot of sensible variables, that the player can influence. The problem is, I'm using variables and if-scripts to get this done, which makes for extensive scripting, I have to account for all the different variable states and all the different combinations of those states, like if there would be the possible states A, B and C, I would also have to account for AB, BC, AC and ABC, and so on.\nI work with a lot of variables and states, so I create ridicolously large scripts, which take forever to load or change at times.\nSo my question is, is there a more streamlined way to do this, so the scripts can load faster and they are more overseeable. \nI am aware that I cannot reduce the amount of writing text for all the states, but I simply wonder if I could reduce some workload on the technical side of things.",
      "EditableFormat": "bbcode",
      "HTML": "I'm trying to work on a highly reactive piece, where there are a lot of sensible variables, that the player can influence. The problem is, I'm using variables and if-scripts to get this done, which makes for extensive scripting, I have to account for all the different variable states and all the different combinations of those states, like if there would be the possible states A, B and C, I would also have to account for AB, BC, AC and ABC, and so on.<br/>I work with a lot of variables and states, so I create ridicolously large scripts, which take forever to load or change at times.<br/>So my question is, is there a more streamlined way to do this, so the scripts can load faster and they are more overseeable. <br/>I am aware that I cannot reduce the amount of writing text for all the states, but I simply wonder if I could reduce some workload on the technical side of things.",
      "PostDate": "2015-01-20T10:49:43+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34010",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "If I'm understanding what you're asking correctly I would create an object for each state so you'd have:\n\nobject ab in the room (if that's it's present state) and then I'd have a room set up to store objects which isn't connected to any other room in the game where there would be:\n\nobject ac\nobject bc\nobject abc\n\nSo when the object changes state I'd simply run a script that swaps the object in the room with the one in its new state.",
      "EditableFormat": "bbcode",
      "HTML": "If I'm understanding what you're asking correctly I would create an object for each state so you'd have:<br/><br/>object ab in the room (if that's it's present state) and then I'd have a room set up to store objects which isn't connected to any other room in the game where there would be:<br/><br/>object ac<br/>object bc<br/>object abc<br/><br/>So when the object changes state I'd simply run a script that swaps the object in the room with the one in its new state.",
      "PostDate": "2015-01-20T12:32:49+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34011",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "Is that what you mean, or something else?",
      "EditableFormat": "bbcode",
      "HTML": "Is that what you mean, or something else?",
      "PostDate": "2015-01-20T12:34:06+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34013",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "If its the room itself that changes state you could still do the same as above just make the objects scenery objects. Then run an if script like\n\nif object ab is in room then blah blah\nelse if object ac is in room etc",
      "EditableFormat": "bbcode",
      "HTML": "If its the room itself that changes state you could still do the same as above just make the objects scenery objects. Then run an if script like<br/><br/>if object ab is in room then blah blah<br/>else if object ac is in room etc",
      "PostDate": "2015-01-20T12:39:23+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34015",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "The coders probably know a simpler solution though.",
      "EditableFormat": "bbcode",
      "HTML": "The coders probably know a simpler solution though.",
      "PostDate": "2015-01-20T12:44:13+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34016",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "No, it doesn't seem to address the issue. To be more clear, here is an example of my game.\n\nThe main principle of the game is, that you &quot;walk down a road&quot;, encounter random situations and then deal with them how you like, within those interactions I created for that situation. One of the encounters is, a dead body lying in the middle of the road. You can now, simply walk on by, you can examine the body, you can harm the body, you can desecrate the body and you can bury the body. Furthermore, if you've found some items before, you can use those items on the body, like, if you found a bean before, you can &quot;implant&quot; the bean into the body. And a couple other things. So I created for all the objects, the accordingly variables, like body.harmed, body.desecrated, etc. which is easy of course, and the influence of the player on those variables, is also fairly easy to implement. But I also want to reflect the changes the player made, in every appropriate text, for example, when the player encounters this place again, there should be a text, to reflect all the changes, the player has made, and so far I simply used if-scripts, like\n\nif body.buried=false\n  if body.harmed=0\n    if body.desecrated=false\n      if body.wears=0\n        etc.\n\nso, I did that for all the variables, for all the else if and else statements, all the combinations, and it's just huge.\nI'd just like to know, if there's a simpler way, to account for all those variables and states.",
      "EditableFormat": "bbcode",
      "HTML": "No, it doesn't seem to address the issue. To be more clear, here is an example of my game.<br/><br/>The main principle of the game is, that you &quot;walk down a road&quot;, encounter random situations and then deal with them how you like, within those interactions I created for that situation. One of the encounters is, a dead body lying in the middle of the road. You can now, simply walk on by, you can examine the body, you can harm the body, you can desecrate the body and you can bury the body. Furthermore, if you've found some items before, you can use those items on the body, like, if you found a bean before, you can &quot;implant&quot; the bean into the body. And a couple other things. So I created for all the objects, the accordingly variables, like body.harmed, body.desecrated, etc. which is easy of course, and the influence of the player on those variables, is also fairly easy to implement. But I also want to reflect the changes the player made, in every appropriate text, for example, when the player encounters this place again, there should be a text, to reflect all the changes, the player has made, and so far I simply used if-scripts, like<br/><br/>if body.buried=false<br/>  if body.harmed=0<br/>    if body.desecrated=false<br/>      if body.wears=0<br/>        etc.<br/><br/>so, I did that for all the variables, for all the else if and else statements, all the combinations, and it's just huge.<br/>I'd just like to know, if there's a simpler way, to account for all those variables and states.",
      "PostDate": "2015-01-20T13:03:09+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34017",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "Can you set an attribute for each state and then use the text processor in the room description? \n\n{if object.attribute:text}",
      "EditableFormat": "bbcode",
      "HTML": "Can you set an attribute for each state and then use the text processor in the room description? <br/><br/>{if object.attribute:text}",
      "PostDate": "2015-01-20T13:24:53+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34022",
      "UserId": 0,
      "Username": "jdpjdpjdp",
      "UserAvatar": null,
      "UserGravatar": "540c24bb58e5434b39c7bd72916f5510",
      "EditableText": "If the options are mutually exclusive, Silver's initial suggestion will work perfectly.\n\nI'll use your example, the body.  You have the body in the &quot;room&quot; in its original, unaltered state.  Then, in a dummy room (one the player can't access), you have objects for a buried body, a harmed body, a desecrated body, etc.  When the player comes along and, for example, harms the body, remove the original body object  and move the &quot;harmed body&quot; object into the room in its place.  Give them all the same alias, &quot;body&quot;, so the player won't even notice the switch, but each object can have its own unique description and interactions with other objects, without the need for endless variables and if statements.  Any object with more than one state would just be a unique game object, swapped out as needed, with unique interactions between them.",
      "EditableFormat": "bbcode",
      "HTML": "If the options are mutually exclusive, Silver's initial suggestion will work perfectly.<br/><br/>I'll use your example, the body.  You have the body in the &quot;room&quot; in its original, unaltered state.  Then, in a dummy room (one the player can't access), you have objects for a buried body, a harmed body, a desecrated body, etc.  When the player comes along and, for example, harms the body, remove the original body object  and move the &quot;harmed body&quot; object into the room in its place.  Give them all the same alias, &quot;body&quot;, so the player won't even notice the switch, but each object can have its own unique description and interactions with other objects, without the need for endless variables and if statements.  Any object with more than one state would just be a unique game object, swapped out as needed, with unique interactions between them.",
      "PostDate": "2015-01-20T18:34:52+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34026",
      "UserId": 0,
      "Username": "m4u",
      "UserAvatar": null,
      "UserGravatar": "71ebfc011d52b6e8d2e91bc9f2fdda5a",
      "EditableText": "I like this post. It happens to me too.  So, two solutions have been given:\n\n1. Create different objects with the same alias.  Nice idea!\n2. Use the text command if.  I use it a lot and it works great.\n\nI recommed a third that I use:\n\n3. Switch script function. Someone here can describe better how to use it.",
      "EditableFormat": "bbcode",
      "HTML": "I like this post. It happens to me too.  So, two solutions have been given:<br/><br/>1. Create different objects with the same alias.  Nice idea!<br/>2. Use the text command if.  I use it a lot and it works great.<br/><br/>I recommed a third that I use:<br/><br/>3. Switch script function. Someone here can describe better how to use it.",
      "PostDate": "2015-01-20T19:16:56+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34027",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "if you have a lot of combinations, you got a lot of combinations, I don't think even super advanced parsing~high level coding can do much about this (Jay, Pixie, Pertex, etc, and other coders can correct me if I'm wrong), but you can reduce the, lines ~ character count, to deal with those combinations, and that is dependant upon coding knowledge, as different designs are better and worse, so I won't be of much help as I still don't know much of coding, let alone advanced coding, you're going to need help from the coders, who know all of the high level coding designs and coding techniques that are still way beyond me.\n\n-------------------\n\na small bit of help:\n\nif body.buried=false\nif body.harmed=0\nif body.desecrated=false\nif body.wears=0\n\nthis shows me that you're using a lot of Boolean (true~false, and Integer flags: 0~1+) Attributes...\n\nfor my own example (I'm using this as it's well known if you ever played RPGs):\n\nstatus effects:\n\nplayer.poisoned = (true or false)\nplayer.asleep = (true or false)\nplayer.confused = (true or false)\nplayer.paralyzed = (true or false)\nplayer.petrified = (true or false)\nplayer.silenced = (true or false)\netc etc etc\n\nobviously Boolean usage is very cumbersome...\n\nyou can reduce the cumbersome-ness, by using: String Attributes\n\nplayer.condition_string = &quot; (poisoned or asleep or confused or paralyzed or petrified or silenced or etc) &quot;\n\n1 code line instead of (using my example above) 6+ code lines\n\nand, then there's using lists too, if you want to have multiple effects, in effect:\n\nplayer.condition_stringlist = split (&quot;poisoned; confused&quot;, &quot;;&quot;)\nyou add or remove the conditions from the list as you need\n\nnow, sometimes using Booleans is useful for what you need to do, sometimes using Strings are useful, and soemtimes Lists are useful, it depends upon the scenario~situation of what you want to do and how you want to do it and what's the best way to do it.\n\nand, there's probably many other (and better) methods too... which are beyond me... more advanced coding methods that I've still got to learn... lol",
      "EditableFormat": "bbcode",
      "HTML": "if you have a lot of combinations, you got a lot of combinations, I don't think even super advanced parsing~high level coding can do much about this (Jay, Pixie, Pertex, etc, and other coders can correct me if I'm wrong), but you can reduce the, lines ~ character count, to deal with those combinations, and that is dependant upon coding knowledge, as different designs are better and worse, so I won't be of much help as I still don't know much of coding, let alone advanced coding, you're going to need help from the coders, who know all of the high level coding designs and coding techniques that are still way beyond me.<br/><br/>-------------------<br/><br/>a small bit of help:<br/><br/>if body.buried=false<br/>if body.harmed=0<br/>if body.desecrated=false<br/>if body.wears=0<br/><br/>this shows me that you're using a lot of Boolean (true~false, and Integer flags: 0~1+) Attributes...<br/><br/>for my own example (I'm using this as it's well known if you ever played RPGs):<br/><br/>status effects:<br/><br/>player.poisoned = (true or false)<br/>player.asleep = (true or false)<br/>player.confused = (true or false)<br/>player.paralyzed = (true or false)<br/>player.petrified = (true or false)<br/>player.silenced = (true or false)<br/>etc etc etc<br/><br/>obviously Boolean usage is very cumbersome...<br/><br/>you can reduce the cumbersome-ness, by using: String Attributes<br/><br/>player.condition_string = &quot; (poisoned or asleep or confused or paralyzed or petrified or silenced or etc) &quot;<br/><br/>1 code line instead of (using my example above) 6+ code lines<br/><br/>and, then there's using lists too, if you want to have multiple effects, in effect:<br/><br/>player.condition_stringlist = split (&quot;poisoned; confused&quot;, &quot;;&quot;)<br/>you add or remove the conditions from the list as you need<br/><br/>now, sometimes using Booleans is useful for what you need to do, sometimes using Strings are useful, and soemtimes Lists are useful, it depends upon the scenario~situation of what you want to do and how you want to do it and what's the best way to do it.<br/><br/>and, there's probably many other (and better) methods too... which are beyond me... more advanced coding methods that I've still got to learn... lol",
      "PostDate": "2015-01-20T19:24:37+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34029",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "The switching objects technique would be how I'd do it. Mainly because I'm not even on the starting rung of coding. It'd solve the problem of the script being impossibly long because you'd just have one script that dealt with which object should be in the room based on how the player interacted with it and then the rest dealt with internally of each object. \n\nSo you could have an object called body and an object called desecrated body. desecrating the body object just runs a script to replace the two. You could then add an attribute to them both to manipulate the text in the room description.  \n\nYou are standing on a country lane and you can see a {if body.untouched:body lying on the floor.{if desacratedbody.whatever:body that has been tampered with.}\n\nThat's if I'm understanding attributes correctly. I'm yet to work with them. <!-- s:? --><img src=\"{SMILIES_PATH}/icon_confused.gif\" alt=\":?\" title=\"Confused\" /><!-- s:? -->",
      "EditableFormat": "bbcode",
      "HTML": "The switching objects technique would be how I'd do it. Mainly because I'm not even on the starting rung of coding. It'd solve the problem of the script being impossibly long because you'd just have one script that dealt with which object should be in the room based on how the player interacted with it and then the rest dealt with internally of each object. <br/><br/>So you could have an object called body and an object called desecrated body. desecrating the body object just runs a script to replace the two. You could then add an attribute to them both to manipulate the text in the room description.  <br/><br/>You are standing on a country lane and you can see a {if body.untouched:body lying on the floor.{if desacratedbody.whatever:body that has been tampered with.}<br/><br/>That's if I'm understanding attributes correctly. I'm yet to work with them. <!-- s:? --><img src=\"{SMILIES_PATH}/icon_confused.gif\" alt=\":?\" title=\"Confused\" /><!-- s:? -->",
      "PostDate": "2015-01-20T20:14:19+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34030",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "Actually the attribute thing needs some thought. Because the object would still have the attribute when removed from the room so the attribute in the text processor would need to reflect that. Maybe there's a better processor command to use. Is there a way to add/remove attributes in a script?",
      "EditableFormat": "bbcode",
      "HTML": "Actually the attribute thing needs some thought. Because the object would still have the attribute when removed from the room so the attribute in the text processor would need to reflect that. Maybe there's a better processor command to use. Is there a way to add/remove attributes in a script?",
      "PostDate": "2015-01-20T20:18:33+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34038",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;HegemonKhan&quot;:26zh8n4x]if you have a lot of combinations, you got a lot of combinations, ...[/quote:26zh8n4x]\nThis about sums it up.\n\nThere may be some mileage in compiling a string to display to cut down on the number of combinations. Something like:\n[code:26zh8n4x]if (not body&#46;buried) {\n  s = &quot;There is a body here&quot;\n  if (body&#46;mutalated) {\n    s = s + &quot;, that is heavily mutalated&quot;\n  }\n  if (body&#46;seedplanted) {\n    s = s + &quot;, with a small tree growing from it&quot;\n  }\n  msg(s + &quot;&#46;&quot;)\n}[/code:26zh8n4x]\nThat is all I can think of.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>HegemonKhan wrote:</cite>if you have a lot of combinations, you got a lot of combinations, ...</blockquote><br/>This about sums it up.<br/><br/>There may be some mileage in compiling a string to display to cut down on the number of combinations. Something like:<br/><pre><code>if (not body&#46;buried) {<br/>  s = &quot;There is a body here&quot;<br/>  if (body&#46;mutalated) {<br/>    s = s + &quot;, that is heavily mutalated&quot;<br/>  }<br/>  if (body&#46;seedplanted) {<br/>    s = s + &quot;, with a small tree growing from it&quot;<br/>  }<br/>  msg(s + &quot;&#46;&quot;)<br/>}</code></pre><br/>That is all I can think of.",
      "PostDate": "2015-01-20T20:41:11+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34075",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Thanks guys, I'll try some of it out, the &quot;an object for every state&quot;-thing sounds good. \nI'm also already using integer attributes to cover non-binary states, for some reason the string-attribute didn't work. is there something I have to keep in mind using that?",
      "EditableFormat": "bbcode",
      "HTML": "Thanks guys, I'll try some of it out, the &quot;an object for every state&quot;-thing sounds good. <br/>I'm also already using integer attributes to cover non-binary states, for some reason the string-attribute didn't work. is there something I have to keep in mind using that?",
      "PostDate": "2015-01-22T17:01:39+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34078",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "You mean with using the command {if object:attribute:text} ?\n\nI have no idea tbh, I was half guessing. It's a shame there isn't one for flags; I see that there's one for gamebooks. I haven't checked if it works for parser games but it's listed as being exclusively for gamebooks in the documentation.",
      "EditableFormat": "bbcode",
      "HTML": "You mean with using the command {if object:attribute:text} ?<br/><br/>I have no idea tbh, I was half guessing. It's a shame there isn't one for flags; I see that there's one for gamebooks. I haven't checked if it works for parser games but it's listed as being exclusively for gamebooks in the documentation.",
      "PostDate": "2015-01-22T17:30:06+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34085",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "String Attribute's Values must be within quotes:\n\nplayer.condition = &quot;poisoned&quot;\n\nwhy?\n\nbecause no quotes on the Value (unless it is numeric, which is a special value, telling quest that it is Type:Integer), tells quest that it is an Object, instead of text~word(s), aka a String.\n\nObject_name.Attribute_name = Value_or_Expression\n\nObject's 'name' String Attribute: Object_name.name = apple\nString Attribute: Object_name.Attribute_name = &quot;apple&quot;\n\napple -&gt; Type: Object\n&quot;apple&quot; -&gt; Type: String\n\n--------\n\n&lt;object name=&quot;sword&quot;&gt;\n-&gt; &lt;alias&gt;claymore&lt;/alias&gt;\n&lt;/object&gt;\n\nplayer.right_hand_object = sword\nsword.alias_string = &quot;claymore&quot;\n\n-------\n\nAttribute Types:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/\">http://docs.textadventures.co.uk/quest/types/</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/object.html\">http://docs.textadventures.co.uk/quest/ ... bject.html</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/string.html\">http://docs.textadventures.co.uk/quest/ ... tring.html</a><!-- m -->\n\n--------\n\nString Attributes:\n\nObject_name.Attribute_name = &quot;Value_or_Expression&quot;\n\nplayer.alias = &quot;HK&quot;\nplayer.condition = &quot;poisoned&quot;\ngame.event_flag = &quot;1&quot;\ngame.greeting = &quot;Hi, my name is HK, what is your name?&quot;\ngame.y = &quot;x&quot;\nplayer.y = &quot;x&quot;\n\nObject Attributes:\n\nObject_name.Attribute_name = Value (non-numeric)\n\nplayer.right_hand = sword\nplayer.left_hand = shield\nplayer.parent = room\nwizard.parent = tower\ngame.pov = player\ngame.pov = HK\ngame.pov = Chellkafka\n\nInteger Attributes:\n\nObject_name.Attribute_name = Value_or_Expression\n\nplayer.strength = 100\nplayer.damage = player.sword.damage + player.sword.damage * player.strength / 100",
      "EditableFormat": "bbcode",
      "HTML": "String Attribute's Values must be within quotes:<br/><br/>player.condition = &quot;poisoned&quot;<br/><br/>why?<br/><br/>because no quotes on the Value (unless it is numeric, which is a special value, telling quest that it is Type:Integer), tells quest that it is an Object, instead of text~word(s), aka a String.<br/><br/>Object_name.Attribute_name = Value_or_Expression<br/><br/>Object's 'name' String Attribute: Object_name.name = apple<br/>String Attribute: Object_name.Attribute_name = &quot;apple&quot;<br/><br/>apple -&gt; Type: Object<br/>&quot;apple&quot; -&gt; Type: String<br/><br/>--------<br/><br/>&lt;object name=&quot;sword&quot;&gt;<br/>-&gt; &lt;alias&gt;claymore&lt;/alias&gt;<br/>&lt;/object&gt;<br/><br/>player.right_hand_object = sword<br/>sword.alias_string = &quot;claymore&quot;<br/><br/>-------<br/><br/>Attribute Types:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/\">http://docs.textadventures.co.uk/quest/types/</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/object.html\">http://docs.textadventures.co.uk/quest/ ... bject.html</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/string.html\">http://docs.textadventures.co.uk/quest/ ... tring.html</a><!-- m --><br/><br/>--------<br/><br/>String Attributes:<br/><br/>Object_name.Attribute_name = &quot;Value_or_Expression&quot;<br/><br/>player.alias = &quot;HK&quot;<br/>player.condition = &quot;poisoned&quot;<br/>game.event_flag = &quot;1&quot;<br/>game.greeting = &quot;Hi, my name is HK, what is your name?&quot;<br/>game.y = &quot;x&quot;<br/>player.y = &quot;x&quot;<br/><br/>Object Attributes:<br/><br/>Object_name.Attribute_name = Value (non-numeric)<br/><br/>player.right_hand = sword<br/>player.left_hand = shield<br/>player.parent = room<br/>wizard.parent = tower<br/>game.pov = player<br/>game.pov = HK<br/>game.pov = Chellkafka<br/><br/>Integer Attributes:<br/><br/>Object_name.Attribute_name = Value_or_Expression<br/><br/>player.strength = 100<br/>player.damage = player.sword.damage + player.sword.damage * player.strength / 100",
      "PostDate": "2015-01-22T19:54:29+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "34118",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "ah, i see, thank you, hegemon.",
      "EditableFormat": "bbcode",
      "HTML": "ah, i see, thank you, hegemon.",
      "PostDate": "2015-01-23T18:44:22+00:00",
      "LastEditDate": null
    }
  ]
}
