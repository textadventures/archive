{
  "Topic": {
    "TopicId": "iee6ypvnhes9yzctrkxsyw",
    "ForumId": "10",
    "Title": "Shops and Stackables",
    "LastUpdated": "2021-09-01T19:20:10.2580882Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "678d965e-7617-4218-9ab0-58733ddd5eba",
      "UserId": 557126,
      "Username": "Platypus123",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a0e72978ecca216e6d184311a6b5d1a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello, I am using both Shoplib and Stacklib. But I made a stack called \"food\" and I put bread in the market. I want the bread to be stored in the food stack when you buy it. How can I do this?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello, I am using both Shoplib and Stacklib. But I made a stack called \"food\" and I put bread in the market. I want the bread to be stored in the food stack when you buy it. How can I do this?</p>\n\n",
      "PostDate": "2021-09-01T19:20:10.2580882Z",
      "LastEditDate": "2021-09-02T10:33:47.8604773Z",
      "link": null
    },
    {
      "PostId": "74b5834c-415c-4cf4-ad36-ddeba47d1126",
      "UserId": 557126,
      "Username": "Platypus123",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a0e72978ecca216e6d184311a6b5d1a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It's been almost 2 days and I still have not received an answer. I will be pleasured if you help me.",
      "EditableFormat": "markdown",
      "HTML": "<p>It's been almost 2 days and I still have not received an answer. I will be pleasured if you help me.</p>\n\n",
      "PostDate": "2021-09-03T13:38:42.6370257Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b4b31365-9523-4e62-b086-ef74e1661f3b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm not familiar with either stacklib or shoplib, but can usually answer people's questions by searching for those libraries and taking a quick look over them.\r\n\r\nI'll take a look after I've done my work today, but I expect this will be a large job. It might be worth looking over the code for the two libraries, and see if you can understand how they work. The Pixie usually includes some comments to explain how his libraries work. You might find that it's beyond your abilities; but if you get stuck on one part, you can ask for help with that – which is likely to get a quicker response than asking for someone to undertake a larger coding project for you.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not familiar with either stacklib or shoplib, but can usually answer people's questions by searching for those libraries and taking a quick look over them.</p>\n<p>I'll take a look after I've done my work today, but I expect this will be a large job. It might be worth looking over the code for the two libraries, and see if you can understand how they work. The Pixie usually includes some comments to explain how his libraries work. You might find that it's beyond your abilities; but if you get stuck on one part, you can ask for help with that – which is likely to get a quicker response than asking for someone to undertake a larger coding project for you.</p>\n\n",
      "PostDate": "2021-09-03T14:38:45.9074063Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "221d7b95-eab0-4234-8968-6556c8b15264",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OK… it looks like this might not be such a big problem. ShopLib has a function `DoBuy`, which adds an item to the player's inventory; while StackLib relies on giving a stackable object a `take` script that moves it to the container instead.\r\n\r\nIt should be possible to add a couple of lines to the DoBuy function so that it will run the `take` script rather than just giving the item to the player. Basically, manually running the \"take\" script on an object that's just been bought.\r\n\r\nThis may have weird effects on other items that have a script to run when they are taken – if you have any such items, it would be a good idea to test if this causes problems before putting them in the shop. If necessary, it  might help to move bought objects to `game.pov.parent` (put them on the floor next to the player) instead of `game.pov` (the inventory), and then run `DoTake` on them, to simulate the whole process of the \"take\" command.\r\n\r\nI believe the desktop editor has a way to copy library functions into your own project so you can edit them; but if you have problems with that you could ask someone who uses the desktop version.\r\n\r\nHere's my first attempt at the modified function:\r\n<pre><code>  &lt;function name=\"DoBuy\" parameters=\"obj\">\r\n      if (not HasInt (obj, \"price\")) {\r\n        msg (DynamicTemplate(\"NotForSale\", obj))\r\n      }\r\n      else {\r\n        buyingprice = BuyingPrice(obj)\r\n        if (buyingprice > game.pov.money) {\r\n          msg (DynamicTemplate(\"CannotAfford\", obj))\r\n        }\r\n        else {\r\n          if (GetBoolean(obj, \"cloneonpurchase\")) {\r\n            <b style=\"color: blue\">obj = </b>CloneObjectAndMove(obj, game.pov)\r\n          }\r\n          else {\r\n            obj.parent = game.pov\r\n          }\r\n          <b style=\"color: blue\">if (HasScript (obj, \"take\")) {\r\n            do (obj, \"take\")\r\n          }</b>\r\n          game.pov.money = game.pov.money - buyingprice\r\n          P (DynamicTemplate(\"BuySuccessful\", obj))\r\n        }\r\n      }\r\n  &lt;/function></code></pre>\r\n\r\nThis *may* cause problems for other libraries. If so, I can put together a more flexible system; but it might take a few tries to come up with something that  works neatly.\r\n\r\n(edit: Actually my second attempt at the function. On the first try I missed the extra <code style=\"color: blue\">obj =</code> which needs to be added so that it will run the take script for the correct clone, rather than the prototype.",
      "EditableFormat": "markdown",
      "HTML": "<p>OK… it looks like this might not be such a big problem. ShopLib has a function <code>DoBuy</code>, which adds an item to the player's inventory; while StackLib relies on giving a stackable object a <code>take</code> script that moves it to the container instead.</p>\n<p>It should be possible to add a couple of lines to the DoBuy function so that it will run the <code>take</code> script rather than just giving the item to the player. Basically, manually running the \"take\" script on an object that's just been bought.</p>\n<p>This may have weird effects on other items that have a script to run when they are taken – if you have any such items, it would be a good idea to test if this causes problems before putting them in the shop. If necessary, it  might help to move bought objects to <code>game.pov.parent</code> (put them on the floor next to the player) instead of <code>game.pov</code> (the inventory), and then run <code>DoTake</code> on them, to simulate the whole process of the \"take\" command.</p>\n<p>I believe the desktop editor has a way to copy library functions into your own project so you can edit them; but if you have problems with that you could ask someone who uses the desktop version.</p>\n<p>Here's my first attempt at the modified function:</p>\n<pre><code>  &lt;function name=\"DoBuy\" parameters=\"obj\"&gt;\n      if (not HasInt (obj, \"price\")) {\n        msg (DynamicTemplate(\"NotForSale\", obj))\n      }\n      else {\n        buyingprice = BuyingPrice(obj)\n        if (buyingprice &gt; game.pov.money) {\n          msg (DynamicTemplate(\"CannotAfford\", obj))\n        }\n        else {\n          if (GetBoolean(obj, \"cloneonpurchase\")) {\n            <b style=\"color: blue\">obj = </b>CloneObjectAndMove(obj, game.pov)\n          }\n          else {\n            obj.parent = game.pov\n          }\n          <b style=\"color: blue\">if (HasScript (obj, \"take\")) {\n            do (obj, \"take\")\n          }</b>\n          game.pov.money = game.pov.money - buyingprice\n          P (DynamicTemplate(\"BuySuccessful\", obj))\n        }\n      }\n  &lt;/function&gt;</code></pre>\n<p>This <em>may</em> cause problems for other libraries. If so, I can put together a more flexible system; but it might take a few tries to come up with something that  works neatly.</p>\n<p>(edit: Actually my second attempt at the function. On the first try I missed the extra <code style=\"color: blue\">obj =</code> which needs to be added so that it will run the take script for the correct clone, rather than the prototype.</p>\n\n",
      "PostDate": "2021-09-03T14:54:58.1117797Z",
      "LastEditDate": "2021-09-03T14:56:39.9120594Z",
      "link": null
    }
  ]
}
