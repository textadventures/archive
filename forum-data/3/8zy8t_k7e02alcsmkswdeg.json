{
  "Topic": {
    "TopicId": "8zy8t_k7e02alcsmkswdeg",
    "ForumId": "3",
    "Title": "[SOLVED] Seeking info concerning JS functions",
    "LastUpdated": "2020-12-04T20:30:21.0903816Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "06eb7772-dfb2-461a-a621-de0153848f49",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So, I created a function:\r\n\r\n```js\r\nvar setObjAttToVal(obj,att,val){\r\n    obj[att] = val;\r\n};\r\n```\r\n\r\n---\r\nNow, let's say ```game.player``` is an in-game object, and ```game.player.name``` is a string.\r\n\r\nI can do this:\r\n\r\n```\r\nsetObjectAttToVal(game.player,name,\"McLovin\")\r\n```\r\n\r\n...but I also wish to be able to do this:\r\n\r\n```js\r\ngame.player.setObjectAttToVal(name,\"McLovin\")\r\n```\r\n\r\n\r\n---\r\nIt seems like someone (possibly mrangel?) once showed me how to set functions up to work this way.  I've searched the forums (and the Google) for quite a while, but to no avail.\r\n\r\nDo I just have to set it up like this?  (On each object?)\r\n\r\n\r\n```js\r\ngame.player.setObjectAttToVal = function(att,val){ this[att] = val; }\r\n```\r\n\r\n...or is there a way to add that function to the prototype object (or something)?\r\n\r\nNot a huge deal.  It just seems like someone once told me how to do this.  If it can be done, it would make my code nicer.\r\n\r\n---\r\nNOTE:  This is not an actual function I wish to use.  Just an example.",
      "EditableFormat": "markdown",
      "HTML": "<p>So, I created a function:</p>\n<pre><code>var setObjAttToVal(obj,att,val){\n    obj[att] = val;\n};\n</code></pre>\n<hr>\n<p>Now, let's say <code>game.player</code> is an in-game object, and <code>game.player.name</code> is a string.</p>\n<p>I can do this:</p>\n<pre><code>setObjectAttToVal(game.player,name,\"McLovin\")\n</code></pre>\n<p>...but I also wish to be able to do this:</p>\n<pre><code>game.player.setObjectAttToVal(name,\"McLovin\")\n</code></pre>\n<hr>\n<p>It seems like someone (possibly mrangel?) once showed me how to set functions up to work this way.  I've searched the forums (and the Google) for quite a while, but to no avail.</p>\n<p>Do I just have to set it up like this?  (On each object?)</p>\n<pre><code>game.player.setObjectAttToVal = function(att,val){ this[att] = val; }\n</code></pre>\n<p>...or is there a way to add that function to the prototype object (or something)?</p>\n<p>Not a huge deal.  It just seems like someone once told me how to do this.  If it can be done, it would make my code nicer.</p>\n<hr>\n<p>NOTE:  This is not an actual function I wish to use.  Just an example.</p>\n\n",
      "PostDate": "2020-12-04T20:30:21.0903816Z",
      "LastEditDate": "2020-12-05T01:38:29.2192058Z",
      "link": null
    },
    {
      "PostId": "226da97e-b49a-4e80-80b5-54a49ae160da",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I can do this:\r\n> `setObjectAttToVal(game.player,name,\"McLovin\")`\r\n\r\nPedantry, sorry. But I think you want `\"name\"` there.\r\n\r\n> Do I just have to set it up like this? (On each object?)\r\n\r\nThat works :)\r\nIf the in-game objects are all the same class (I haven't looked at the codebase in a long time) then I think it would be:\r\n```\r\nClassName.prototype.setObjectAttToVal = function(att,val){ this[att] = val; };\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I can do this:<br>\n<code>setObjectAttToVal(game.player,name,\"McLovin\")</code></p>\n</blockquote>\n<p>Pedantry, sorry. But I think you want <code>\"name\"</code> there.</p>\n<blockquote>\n<p>Do I just have to set it up like this? (On each object?)</p>\n</blockquote>\n<p>That works :)<br>\nIf the in-game objects are all the same class (I haven't looked at the codebase in a long time) then I think it would be:</p>\n<pre><code>ClassName.prototype.setObjectAttToVal = function(att,val){ this[att] = val; };\n</code></pre>\n\n",
      "PostDate": "2020-12-04T20:36:53.4934991Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7f5e1f88-6474-4952-9e64-0472686e6839",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Aha!\r\n\r\nThank you!\r\n\r\n```js\r\nObject.prototype.isWearing = function(obj){ return isWearing(this,obj)};\r\n```\r\n\r\n---\r\nWow!\r\n\r\nNow I could just set it up this way.\r\n\r\n```js\r\nObject.prototype.isWearing = function(obj){ return (obj.getWorn() && obj.loc===this.name)};;\r\n```\r\n\r\n---\r\nThanks again, mrangel!",
      "EditableFormat": "markdown",
      "HTML": "<p>Aha!</p>\n<p>Thank you!</p>\n<pre><code>Object.prototype.isWearing = function(obj){ return isWearing(this,obj)};\n</code></pre>\n<hr>\n<p>Wow!</p>\n<p>Now I could just set it up this way.</p>\n<pre><code>Object.prototype.isWearing = function(obj){ return (obj.getWorn() &amp;&amp; obj.loc===this.name)};;\n</code></pre>\n<hr>\n<p>Thanks again, mrangel!</p>\n\n",
      "PostDate": "2020-12-04T21:40:20.5231184Z",
      "LastEditDate": "2020-12-04T21:49:32.2595863Z",
      "link": null
    },
    {
      "PostId": "c218d0d7-a89b-4fc4-bbfd-176e9cef2806",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "And like that, you can even do:\r\n`document.isWearing(w.headband)`\r\n\r\nOK, that's a silly thing to do. But I don't think it would cause any issues.",
      "EditableFormat": "markdown",
      "HTML": "<p>And like that, you can even do:<br>\n<code>document.isWearing(w.headband)</code></p>\n<p>OK, that's a silly thing to do. But I don't think it would cause any issues.</p>\n\n",
      "PostDate": "2020-12-04T23:37:07.383547Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
