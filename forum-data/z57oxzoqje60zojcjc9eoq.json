{
  "Topic": {
    "TopicId": "z57oxzoqje60zojcjc9eoq",
    "ForumId": "10",
    "Title": "stop player from entering certain rooms if they have an attribute",
    "LastUpdated": "2019-09-01T13:49:22.9728531Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "722f75e6-6b73-4226-be45-f0a885598191",
      "UserId": 383705,
      "Username": "mr.doge9508",
      "AvatarUrl": "https://i.imgur.com/SkD56Vkb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm trying to get it so that if the player object has a specific boolean attribute set to true, they can access some rooms but cannot access others, but if it is false, they can access all rooms. The way I'm denoting this is with a \"specialroom\" boolean I have on the rooms that can only be accessed with the attribute on false. Any help?",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm trying to get it so that if the player object has a specific boolean attribute set to true, they can access some rooms but cannot access others, but if it is false, they can access all rooms. The way I'm denoting this is with a \"specialroom\" boolean I have on the rooms that can only be accessed with the attribute on false. Any help?</p>\n\n",
      "PostDate": "2019-09-01T13:49:22.9728531Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2c8ef922-ce01-4e59-b409-5beb04926867",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'd suggest changing the `changedparent` script attribute of the player:\r\n```\r\n  if (game.pov = this) {\r\n    if (IsDefined(\"oldvalue\")) {\r\n      if (GetBoolean (this, \"restrictmovement\") and GetBoolean (this.parent, \"specialroom\")) {\r\n        msg (\"You can't go into special rooms right now!\")\r\n        this.suppressdescriptions = true\r\n        this.parent = oldvalue\r\n        this.suppressdescriptions = null\r\n      }\r\n      else if (not GetBoolean (this, \"suppressdescriptions\")) {\r\n        OnEnterRoom(oldvalue)\r\n      }\r\n    }\r\n    else {\r\n      OnEnterRoom(null)\r\n    }\r\n    if (game.gridmap) {\r\n      MergePOVCoordinates\r\n    }\r\n  }\r\n  this.hasbeenmoved = true\r\n```\r\n\r\nThat script checks the attributes whenever the player moves from one room to another. If they have the boolean `restrictmovement` and the room they're moving to has `specialroom`, it moves them back again instead of running the room's exit/enter scripts. It also uses a temporary attribute `suppressdescription` to make sure that moving them back doesn't trigger any \"on enter\" scripts for the room they were trying to leave.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'd suggest changing the <code>changedparent</code> script attribute of the player:</p>\n<pre><code>  if (game.pov = this) {\n    if (IsDefined(\"oldvalue\")) {\n      if (GetBoolean (this, \"restrictmovement\") and GetBoolean (this.parent, \"specialroom\")) {\n        msg (\"You can't go into special rooms right now!\")\n        this.suppressdescriptions = true\n        this.parent = oldvalue\n        this.suppressdescriptions = null\n      }\n      else if (not GetBoolean (this, \"suppressdescriptions\")) {\n        OnEnterRoom(oldvalue)\n      }\n    }\n    else {\n      OnEnterRoom(null)\n    }\n    if (game.gridmap) {\n      MergePOVCoordinates\n    }\n  }\n  this.hasbeenmoved = true\n</code></pre>\n<p>That script checks the attributes whenever the player moves from one room to another. If they have the boolean <code>restrictmovement</code> and the room they're moving to has <code>specialroom</code>, it moves them back again instead of running the room's exit/enter scripts. It also uses a temporary attribute <code>suppressdescription</code> to make sure that moving them back doesn't trigger any \"on enter\" scripts for the room they were trying to leave.</p>\n\n",
      "PostDate": "2019-09-01T14:24:09.5601181Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "58b51867-08df-4a2a-9721-2e6ad7c0b17e",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Mrangel's suggestion should work, but if you don't want to risk mucking around with changedparent, here's how I would do it:\r\n\r\nFirst, you have the right idea with the specialroom booleans. You have the attribute Player.CanAccessAll boolean and rooms with the SomeRoom.SpecialRoom boolean.\r\n\r\nBut how to make the player forbidden from going there to begin with?\r\n\r\nThe answer is exits, exits that instead of simply moving the player, instead run a script.\r\n\r\nAnd instead of just ANY old script, they run a Function, so that you can just write the code once instead of having to rewrite it for every exit.\r\n\r\nSo you have Room1, and Room2, and 2 exits leading back and forth. Room2 is special, so Room2.SpecialRoom=True.\r\n\r\nExit-From-Room1-To-Room2, then, you select 'run a script' instead of moving the player automatically.\r\n\r\nDon't put any script in yet! Next, create a new function. Call it, I dunno, SpecialRoomMove. Give it parameter Destination. And have the function's script be, in psuedocode:\r\n```\r\nif Destination.SpecialRoom=True and Player.CanAccessAll=False{\r\nmsg(\"That room is forbidden!\")\r\n}\r\nelse{\r\nmove Player to Destination\r\n}\r\n```\r\nAnd now just go back to your exit, plop that function in, with parameter 'this.to'. This should work; if player.CanAccessAll is false AND Destination.SpecialRoom is True, then they can't enter. In every other case, they move in like normal.\r\n\r\nHope this helps!",
      "EditableFormat": "markdown",
      "HTML": "<p>Mrangel's suggestion should work, but if you don't want to risk mucking around with changedparent, here's how I would do it:</p>\n<p>First, you have the right idea with the specialroom booleans. You have the attribute Player.CanAccessAll boolean and rooms with the SomeRoom.SpecialRoom boolean.</p>\n<p>But how to make the player forbidden from going there to begin with?</p>\n<p>The answer is exits, exits that instead of simply moving the player, instead run a script.</p>\n<p>And instead of just ANY old script, they run a Function, so that you can just write the code once instead of having to rewrite it for every exit.</p>\n<p>So you have Room1, and Room2, and 2 exits leading back and forth. Room2 is special, so Room2.SpecialRoom=True.</p>\n<p>Exit-From-Room1-To-Room2, then, you select 'run a script' instead of moving the player automatically.</p>\n<p>Don't put any script in yet! Next, create a new function. Call it, I dunno, SpecialRoomMove. Give it parameter Destination. And have the function's script be, in psuedocode:</p>\n<pre><code>if Destination.SpecialRoom=True and Player.CanAccessAll=False{\nmsg(\"That room is forbidden!\")\n}\nelse{\nmove Player to Destination\n}\n</code></pre>\n<p>And now just go back to your exit, plop that function in, with parameter 'this.to'. This should work; if player.CanAccessAll is false AND Destination.SpecialRoom is True, then they can't enter. In every other case, they move in like normal.</p>\n<p>Hope this helps!</p>\n\n",
      "PostDate": "2019-09-02T00:57:26.4518298Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b22a21e3-f995-4be9-b78e-45bb26b24724",
      "UserId": 383705,
      "Username": "mr.doge9508",
      "AvatarUrl": "https://i.imgur.com/SkD56Vkb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "mrangel's code seems to crash the program. Don't know if I did something wrong but when I set the attribute with DevMode and tried to move to a forbidden room the game seized up and crashed after a few seconds. As for lo's code, I have yet to put it on all exits in the game to get it working. Hopefully I can find something for the start script to do it because doing it manually for somewhere between 50-75 times does not seem particularly enticing.",
      "EditableFormat": "markdown",
      "HTML": "<p>mrangel's code seems to crash the program. Don't know if I did something wrong but when I set the attribute with DevMode and tried to move to a forbidden room the game seized up and crashed after a few seconds. As for lo's code, I have yet to put it on all exits in the game to get it working. Hopefully I can find something for the start script to do it because doing it manually for somewhere between 50-75 times does not seem particularly enticing.</p>\n\n",
      "PostDate": "2019-09-02T02:56:39.4189862Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9644ce89-2883-434e-90ab-c55f5c4195e5",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Keep in mind, it doesn't need to be in every exit to 'work', per say. It should work fine on a per-exit basis.\r\n\r\nAs for a StartScript... I guess you could search every object, use a FilterByAttribute to get the ones with a 'type' attribute of exit', and change their WhateverExit.runscript to True and WhateverExit.script to the necessary code.",
      "EditableFormat": "markdown",
      "HTML": "<p>Keep in mind, it doesn't need to be in every exit to 'work', per say. It should work fine on a per-exit basis.</p>\n<p>As for a StartScript... I guess you could search every object, use a FilterByAttribute to get the ones with a 'type' attribute of exit', and change their WhateverExit.runscript to True and WhateverExit.script to the necessary code.</p>\n\n",
      "PostDate": "2019-09-02T06:35:58.1982854Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3477eda4-c527-4d2b-ad17-e07d950a304c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I can't figure out what I've got wrong there.\r\n\r\nIt might crash if you set `restrictmovement` when the player is already in a special room, because as soon as they move it says \"You can't go there\", then moves the player back to where they were previously, which triggers the script again, which displays another message and tries to move them back, causing an infinite loop.\r\n\r\nA little tweak:\r\n```\r\n  if (game.pov = this) {\r\n    if (not GetBoolean (this, \"suppressdescriptions\")) {\r\n      if (IsDefined(\"oldvalue\")) {\r\n        if (GetBoolean (this, \"restrictmovement\") and GetBoolean (this.parent, \"specialroom\")) {\r\n          msg (\"You can't go into special rooms right now!\")\r\n          this.suppressdescriptions = true\r\n          this.parent = oldvalue\r\n          this.suppressdescriptions = null\r\n        }\r\n        else {\r\n          OnEnterRoom(oldvalue)\r\n        }\r\n      }\r\n      else {\r\n        OnEnterRoom(null)\r\n      }\r\n    }\r\n    if (game.gridmap) {\r\n      MergePOVCoordinates\r\n    }\r\n  }\r\n  this.hasbeenmoved = true\r\n```\r\n\r\nSorry about that; I didn't initially consider that possibility.",
      "EditableFormat": "markdown",
      "HTML": "<p>I can't figure out what I've got wrong there.</p>\n<p>It might crash if you set <code>restrictmovement</code> when the player is already in a special room, because as soon as they move it says \"You can't go there\", then moves the player back to where they were previously, which triggers the script again, which displays another message and tries to move them back, causing an infinite loop.</p>\n<p>A little tweak:</p>\n<pre><code>  if (game.pov = this) {\n    if (not GetBoolean (this, \"suppressdescriptions\")) {\n      if (IsDefined(\"oldvalue\")) {\n        if (GetBoolean (this, \"restrictmovement\") and GetBoolean (this.parent, \"specialroom\")) {\n          msg (\"You can't go into special rooms right now!\")\n          this.suppressdescriptions = true\n          this.parent = oldvalue\n          this.suppressdescriptions = null\n        }\n        else {\n          OnEnterRoom(oldvalue)\n        }\n      }\n      else {\n        OnEnterRoom(null)\n      }\n    }\n    if (game.gridmap) {\n      MergePOVCoordinates\n    }\n  }\n  this.hasbeenmoved = true\n</code></pre>\n<p>Sorry about that; I didn't initially consider that possibility.</p>\n\n",
      "PostDate": "2019-09-02T08:19:50.8579893Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "854b2e32-121d-4d10-9f24-c8f3996446a4",
      "UserId": 383705,
      "Username": "mr.doge9508",
      "AvatarUrl": "https://i.imgur.com/SkD56Vkb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I see. The start room is one of those special rooms and the player initially does not have the attribute. The loop thing probably explains it.",
      "EditableFormat": "markdown",
      "HTML": "<p>I see. The start room is one of those special rooms and the player initially does not have the attribute. The loop thing probably explains it.</p>\n\n",
      "PostDate": "2019-09-02T13:11:47.2894069Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a03d259a-a48e-4ab0-a4de-08da9abeb725",
      "UserId": 383705,
      "Username": "mr.doge9508",
      "AvatarUrl": "https://i.imgur.com/SkD56Vkb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "mrangels new option seems to be working wonderfully.",
      "EditableFormat": "markdown",
      "HTML": "<p>mrangels new option seems to be working wonderfully.</p>\n\n",
      "PostDate": "2019-09-06T02:46:59.0188816Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "14b8a7dd-c4c3-4d85-a3b6-dbd6bce8198b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It's probably worth noting that there are two different ways you could approach this. You could prevent the player from changing location (using the method shown above), or you could prevent them moving (by making a modification to the `go` command, or by locking all the exits).\r\n\r\nThe main difference between these two methods is that the one I suggested above will trigger whenever the player is moved. So it will also stop your other scripts from moving a player into a special room when the flag is set, which may not be desirable. If you have a script that moves the player into a special room and you want it to ignore the restriction, the easiest way would probably be to change the specialroom boolean on the destination to false, move the player, and then set it back to true again.",
      "EditableFormat": "markdown",
      "HTML": "<p>It's probably worth noting that there are two different ways you could approach this. You could prevent the player from changing location (using the method shown above), or you could prevent them moving (by making a modification to the <code>go</code> command, or by locking all the exits).</p>\n<p>The main difference between these two methods is that the one I suggested above will trigger whenever the player is moved. So it will also stop your other scripts from moving a player into a special room when the flag is set, which may not be desirable. If you have a script that moves the player into a special room and you want it to ignore the restriction, the easiest way would probably be to change the specialroom boolean on the destination to false, move the player, and then set it back to true again.</p>\n\n",
      "PostDate": "2019-09-06T08:23:12.6528729Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
