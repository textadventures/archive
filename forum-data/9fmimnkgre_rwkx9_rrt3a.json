{
  "Topic": {
    "TopicId": "9fmimnkgre_rwkx9_rrt3a",
    "ForumId": "24",
    "Title": "Making a \"go to previous page\" feature.",
    "LastUpdated": "2022-05-10T02:38:38.6107761Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "6c02c3b9-870d-4c54-b23a-a0aaa6e1c224",
      "UserId": 587025,
      "Username": "cconstant",
      "AvatarUrl": "https://i.imgur.com/bESRAYfb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey, I just published my game and have gotten feedback that navigating between pages was confusing, so I figured I would make a feature that lets you flip back to the last visited page. I would just use something like ```[[last page]](page 1)``` but multiple pages have shared links to each other, so you could end up in a different place than where you came from. My next idea was to make a system where each link to another page has an identifier like ```[[page3]](lastpage=p2)``` but I have no idea how to make the other side of that code that actually sends you to the place you came from.  Lemme know if you have a solution. \r\n\r\nOnce again, I am sorry for my unrelenting questions\r\n--constant",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey, I just published my game and have gotten feedback that navigating between pages was confusing, so I figured I would make a feature that lets you flip back to the last visited page. I would just use something like <code>[[last page]](page 1)</code> but multiple pages have shared links to each other, so you could end up in a different place than where you came from. My next idea was to make a system where each link to another page has an identifier like <code>[[page3]](lastpage=p2)</code> but I have no idea how to make the other side of that code that actually sends you to the place you came from.  Lemme know if you have a solution.</p>\n<p>Once again, I am sorry for my unrelenting questions<br>\n--constant</p>\n\n",
      "PostDate": "2022-05-10T02:38:38.6107761Z",
      "LastEditDate": "2022-05-10T06:21:10.2433977Z",
      "link": null
    },
    {
      "PostId": "967ff491-73c4-4bc8-bf09-670d460f73a1",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think you could do something like that; but I'd be more tempted to use a little javascript, so you don't have to add the attribute to every link.\r\nSomething like:\r\n```\r\n[[]]:\r\n    var s = squiffy.get(\"_section\");\r\n    var history = squiffy.get(\"_history\") || [];\r\n    if (s == \"back\") {\r\n        s = history.pop() && history.pop();\r\n        if (s && squiffy.story.sections[s]) {\r\n            squiffy.set(\"_section\", s);\r\n            squiffy.story.section = squiffy.story.sections[s]\r\n        }\r\n    }\r\n    history.push(s);\r\n    squiffy.set(\"_history\", history);\r\n\r\n[[back]]:\r\nThere's no more 'back' to go. (If there's anything in the history then [[back]] would take you there instead of here)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I think you could do something like that; but I'd be more tempted to use a little javascript, so you don't have to add the attribute to every link.<br>\nSomething like:</p>\n<pre><code>[[]]:\n    var s = squiffy.get(\"_section\");\n    var history = squiffy.get(\"_history\") || [];\n    if (s == \"back\") {\n        s = history.pop() &amp;&amp; history.pop();\n        if (s &amp;&amp; squiffy.story.sections[s]) {\n            squiffy.set(\"_section\", s);\n            squiffy.story.section = squiffy.story.sections[s]\n        }\n    }\n    history.push(s);\n    squiffy.set(\"_history\", history);\n\n[[back]]:\nThere's no more 'back' to go. (If there's anything in the history then [[back]] would take you there instead of here)\n</code></pre>\n\n",
      "PostDate": "2022-05-10T08:52:57.3596423Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1d10333a-4232-4098-a027-e005ac82fb07",
      "UserId": 587025,
      "Username": "cconstant",
      "AvatarUrl": "https://i.imgur.com/bESRAYfb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "how do I implement this? sorry",
      "EditableFormat": "markdown",
      "HTML": "<p>how do I implement this? sorry</p>\n\n",
      "PostDate": "2022-05-10T19:42:08.1050553Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6d4f0f0e-1bb7-45ad-962d-3d2c51ddf062",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I couldn't get mrangel's method to work either. It looks easy, though. Maybe make it a standard part of a future release? Here's what I do when I need a back option, but I don't like it much. Too wordy.\r\n\r\n```\r\n@start start\r\n[[start]]:\r\n@set back=1\r\n\r\n[[start]](1)\r\n\r\n[[1]]:\r\n1\r\n\r\n[[2]] [[3]] [[back]]({back}, back=1)\r\n\r\n[[2]]:\r\n\r\n2\r\n\r\n[[1]] [[3]] [[back]]({back}, back=2)\r\n\r\n[[3]]:\r\n\r\n3\r\n\r\n[[1]] [[2]] [[back]]({back}, back=3)",
      "EditableFormat": "markdown",
      "HTML": "<p>I couldn't get mrangel's method to work either. It looks easy, though. Maybe make it a standard part of a future release? Here's what I do when I need a back option, but I don't like it much. Too wordy.</p>\n<pre><code>@start start\n[[start]]:\n@set back=1\n\n[[start]](1)\n\n[[1]]:\n1\n\n[[2]] [[3]] [[back]]({back}, back=1)\n\n[[2]]:\n\n2\n\n[[1]] [[3]] [[back]]({back}, back=2)\n\n[[3]]:\n\n3\n\n[[1]] [[2]] [[back]]({back}, back=3)\n</code></pre>\n\n",
      "PostDate": "2022-05-10T23:33:06.7987941Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3f0babdf-0e7d-40f6-b497-ab9de05cb2cf",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OK, I screwed up. The code as shown would run the JS for the page it's going back to, but wouldn't display the text.\r\n\r\nThis one seems to work:\r\n```\r\n[[]]:\r\n    var s = squiffy.get(\"_section\");\r\n    var history = squiffy.get(\"_history\") || [];\r\n    if (s == \"back\") {\r\n        s = history.pop() && history.pop();\r\n        if (s && squiffy.story.sections[s]) {\r\n            squiffy.story.go(s);\r\n            // nerf section to prevent scripts running twice\r\n            //   this may have weird side effects that I've not found\r\n            squiffy.story.section = {passages: squiffy.story.section.passages};\r\n        }\r\n    }\r\n    history.push(s);\r\n    squiffy.set(\"_history\", history);\r\n\r\nThe pages you have been to are {_history}. Would you like to go [[back]]?\r\n\r\n[[back]]:\r\nThere's no more 'back' to go. (If there's anything in the history then [[back]] would take you there instead of here)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>OK, I screwed up. The code as shown would run the JS for the page it's going back to, but wouldn't display the text.</p>\n<p>This one seems to work:</p>\n<pre><code>[[]]:\n    var s = squiffy.get(\"_section\");\n    var history = squiffy.get(\"_history\") || [];\n    if (s == \"back\") {\n        s = history.pop() &amp;&amp; history.pop();\n        if (s &amp;&amp; squiffy.story.sections[s]) {\n            squiffy.story.go(s);\n            // nerf section to prevent scripts running twice\n            //   this may have weird side effects that I've not found\n            squiffy.story.section = {passages: squiffy.story.section.passages};\n        }\n    }\n    history.push(s);\n    squiffy.set(\"_history\", history);\n\nThe pages you have been to are {_history}. Would you like to go [[back]]?\n\n[[back]]:\nThere's no more 'back' to go. (If there's anything in the history then [[back]] would take you there instead of here)\n</code></pre>\n\n",
      "PostDate": "2022-05-11T11:24:13.7399842Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
