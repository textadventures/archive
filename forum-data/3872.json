{
  "Topic": {
    "TopicId": "3872",
    "ForumId": "10",
    "Title": "Combat Starter Training Guide for Noobs by HK",
    "LastUpdated": "2016-05-20T06:50:21+01:00",
    "ReplyCount": 3
  },
  "Posts": [
    {
      "PostId": "25917",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Note: please feel free to add this to the wiki pages! Just credit~mention me if you do, please.\n\n---------\n\nif you want to work on combat, then try to do it slowly, through the Verb Tab's add a~new scripts:\n\nhere you go, a quality STEP BY STEP &quot;noob-proof&quot; GUI~Editor usage guide, lol\n\n&quot;room&quot; (the default Room Object that contains your default &quot;player&quot; Player Object) -&gt; Objects (Tab) -&gt; Add -&gt;\n\nname: orc\n\norc -&gt; Verb (Tab) -&gt; Add -&gt;\n\nname: fight\n\nbox: RUN A SCRIPT (this allows us to add scripts, as you'll see the button for it show up upon changing to this setting)\n\nlet's start off trying something really simple:\n\n(by the way, hopefully you understandd that my &quot;-&gt;&quot; arrows in the front~left side, mean indenting ~ &quot;nesting&quot; the script ~ make sure you click on the correct &quot;add a~new script&quot; I-think-circular button, lol. Correct indenting~&quot;nesting&quot; is a MUST !!!, or your series of scripts won't work correctly!!!)\n\nit attacks you first doing damage to you and receiving a message of this act, and then you attack it for damage and receiving a message of this act\n\nAdd a~new script -&gt; Variables -&gt; Set an attribute or variable -&gt; player.hit_points = player.hit_points - orc.physical_damage\nAdd a~new script -&gt; Output -&gt; Print a message -&gt; Print [EXPRESSION] orc.alias + &quot; hits &quot; + player.alias + &quot; for &quot; + orc.physical_damage + &quot; damage, leaving &quot; + player.alias + &quot; with only &quot; + player.hit_points + &quot; hitpoints remaining.&quot;\nAdd a~new script -&gt; Variables -&gt; Set an attribute or variable -&gt; orc.hit_points = orc.hit_points - player.physical_damage\nAdd a~new script -&gt; Output -&gt; Print a message -&gt; Print [EXPRESSION] player.alias + &quot; hits &quot; + orc.alias + &quot; for &quot; + player.physical_damage + &quot; damage, leaving &quot; + orc.alias + &quot; with only &quot; + orc.hit_points + &quot; hitpoints remaining.&quot;\n\nokay, we've added our scripts for our &quot;orc&quot; Object's &quot;fight&quot; Verb, but now we need our &quot;player&quot; and &quot;orc&quot; Objects to actually have the attributes that are used in our &quot;orc&quot; Object's &quot;fight&quot; Verb script~code block.\n\nthe Objects involved:\n\nplayer\norc\n\nand their Attributes needed:\n\nhit_points\nphysical_damage\nalias\n\nplayer -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;\n\nName: hit_points\nType: int\nValue: 999 // or whatever amount you want to start with\n\nName: physical_damage\nType: int\nValue: 50 // or whatever amount you want to start with\n\nplayer -&gt; Setup (Tab) -&gt; Alias -&gt; onimike // or whatever you want, lol\n\nplayer -&gt; Attributes (Tab) -&gt; Status Attributes -&gt; Add -&gt; // so they'll be displayed on the right side while playing the game\n\nName: hit_points\nValue: (leave blank)\n\nName: physical_damage\nValue: (leave blank)\n\norc -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;\n\nName: hit_points\nType: int\nValue: 200 // or whatever amount you want it to have\n\nName: physical_damage\nType: int\nValue: 10 // or whatever amount you want it to have\n\norc -&gt; Setup (Tab) -&gt; Alias -&gt; kul'dan\n\ngoob job, but let's now try to do more now:\n\nwe need a reason for doing damage: killing the orc, or dying and losing the game, hehe. Also, let's have you get experience and cash for killing the orc too.\n\nso back to our &quot;orc&quot; Object's &quot;fight&quot; Verb, we got to add in some new lines~scripts:\n\nAdd a~new script -&gt; Scripts -&gt; If... -&gt; if [EXPRESSION] // or if [OBJECT DOES NOT HAVE FLAG] -&gt; orc.dead = false // or Object: orc, [flag name]: dead\nThen,\n-&gt; Add a~new script -&gt; Variables -&gt; Set an attribute or variable -&gt; player.hit_points = player.hit_points - orc.physical_damage\n-&gt; Add a~new script -&gt; Output -&gt; Print a message -&gt; Print [EXPRESSION] orc.alias + &quot; hits &quot; + player.alias + &quot; for &quot; + orc.physical_damage + &quot; damage, leaving &quot; + player.alias + &quot; with only &quot; + player.hit_points + &quot; hitpoints remaining.&quot;\n-&gt; Add a~new script -&gt; Scripts -&gt; If... -&gt; if [EXPRESSION] player.hit_points &lt;= 0 // we can't do [OBJECT ATTRIBUTE EQUALS] as I don't think there's any way to add in the &quot;equals and less than&quot; operator for it. As we've only got the &quot;equals&quot; operator, so this won't work for us.\n-&gt; then,\n-&gt;-&gt; Add a~new script -&gt; Game State -&gt; Finish the game\n-&gt; else,\n-&gt;-&gt; Add a~new script -&gt; Variables -&gt; Set an attribute or variable -&gt; orc.hit_points = orc.hit_points - player.physical_damage\n-&gt;-&gt; Add a~new script -&gt; Output -&gt; Print a message -&gt; Print [EXPRESSION] player.alias + &quot; hits &quot; + orc.alias + &quot; for &quot; + player.physical_damage + &quot; damage, leaving &quot; + orc.alias + &quot; with only &quot; + orc.hit_points + &quot; hitpoints remaining.&quot;\n-&gt;-&gt; Add a~new script -&gt; Scripts -&gt; If... -&gt; if [EXPRESSION] orc.hit_points &lt;= 0 // we can't do [OBJECT ATTRIBUTE EQUALS] as I don't think there's any way to add in the &quot;equals and less than&quot; operator for it. As we've only got the &quot;equals&quot; operator, so this won't work for us.\n-&gt;-&gt; then,\n-&gt;-&gt;-&gt; Add a~new script -&gt; Variables -&gt; Set an attribute or variable -&gt; player.experience_points = player.experience_points + orc.experience_points\n-&gt;-&gt;-&gt; Add a~new script -&gt; Variables -&gt; Set an attribute or variable -&gt; player.cash = player.cash + orc.cash\n-&gt;-&gt;-&gt; Add a~new script -&gt; Variables -&gt; Set a variable or attribute // or Set Object Flag -&gt; orc.dead=true // or Object: orc, [flag name]: dead\n-&gt;-&gt; else,\n-&gt;-&gt;-&gt; Add a~new script -&gt; Scripts -&gt; Run an object's script attribute // I think this will loop~do this &quot;fight&quot; Verb again, but if not, then remove~delete this script line! -&gt; run object [name] [orc] script attribute [name] fight, Using parameter dictionary (leave blank)\nelse,\n-&gt; Add a~new script -&gt; Output -&gt; Print a message -&gt; Print [EXPRESSION] orc.alias + &quot; is already dead.&quot;\n\nbut, let's not forget to add the new actual attributes to our objects!\n\norc -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;\n\nName: dead\nType: boolean\nValue: false\n\nName: experience_points\nType: int\nValue: 100 // or whatever amount you want it to have\n\nName: cash\nType: int\nValue: 50 // or whatever amount you want it to have\n\nplayer -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;\n\nName: experience_points\nType: int\nValue: 0 // or whatever amount you want to start with\n\nName: cash\nType: int\nValue: 0 // or whatever amount you want to start with\n\nplayer -&gt; Attributes (Tab) -&gt; Status Attributes -&gt; Add -&gt; // again, for these to be displayed on the right side while playing the game\n\nName: experience_points\nValue: (leave blank)\n\nName: cash\nValue: (leave blank)\n\nalright, that's good enough for my help for now, it's your turn to see what new or extra complexity you can add to or do on your own, hehe.\n\nTry to add in scripting that let's you choose whether to &quot;attack&quot; (physically: with a weapon or no weapon), &quot;cast&quot; (magic spells), &quot;use an item&quot;, &quot;run away&quot; (escape), and~or whatever else\n\nHints: &quot;Show a menu&quot;, &quot;If...&quot;, and &quot;Switch&quot;\n\nTry to script the enemy object with A.I. behaviors\n\nHint: &quot;GetRandomInt&quot;, &quot;If...&quot;, and &quot;Switch&quot;\n\nYou can also try to add in more complex Game Mechanics too (such as for doing physical damage)\n\nHint: &quot;Print a message -&gt; Print [EXPRESSION]&quot;, and Quest's engine recognizes math's &quot;order of operations&quot; thankfully, making this &quot;easy&quot; to write into the hinted at script.\n\n---------------------\n\nas can be seen by the amount of work this takes, it is so much easier to help people via code... lol. If you can learn to work with the code, it's so much easier and faster for us to help you! As helping~explaining through the GUI~Editor is a lot of work!\n\nI could do this same thing in code, in like 5 minutes, where this took me maybe 1-2 hrs to do, argh! <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --> just kidding, as I was a noob too, who couldn't work with the code either.",
      "EditableFormat": "bbcode",
      "HTML": "Note: please feel free to add this to the wiki pages! Just credit~mention me if you do, please.<br/><br/>---------<br/><br/>if you want to work on combat, then try to do it slowly, through the Verb Tab's add a~new scripts:<br/><br/>here you go, a quality STEP BY STEP &quot;noob-proof&quot; GUI~Editor usage guide, lol<br/><br/>&quot;room&quot; (the default Room Object that contains your default &quot;player&quot; Player Object) -&gt; Objects (Tab) -&gt; Add -&gt;<br/><br/>name: orc<br/><br/>orc -&gt; Verb (Tab) -&gt; Add -&gt;<br/><br/>name: fight<br/><br/>box: RUN A SCRIPT (this allows us to add scripts, as you'll see the button for it show up upon changing to this setting)<br/><br/>let's start off trying something really simple:<br/><br/>(by the way, hopefully you understandd that my &quot;-&gt;&quot; arrows in the front~left side, mean indenting ~ &quot;nesting&quot; the script ~ make sure you click on the correct &quot;add a~new script&quot; I-think-circular button, lol. Correct indenting~&quot;nesting&quot; is a MUST !!!, or your series of scripts won't work correctly!!!)<br/><br/>it attacks you first doing damage to you and receiving a message of this act, and then you attack it for damage and receiving a message of this act<br/><br/>Add a~new script -&gt; Variables -&gt; Set an attribute or variable -&gt; player.hit_points = player.hit_points - orc.physical_damage<br/>Add a~new script -&gt; Output -&gt; Print a message -&gt; Print [EXPRESSION] orc.alias + &quot; hits &quot; + player.alias + &quot; for &quot; + orc.physical_damage + &quot; damage, leaving &quot; + player.alias + &quot; with only &quot; + player.hit_points + &quot; hitpoints remaining.&quot;<br/>Add a~new script -&gt; Variables -&gt; Set an attribute or variable -&gt; orc.hit_points = orc.hit_points - player.physical_damage<br/>Add a~new script -&gt; Output -&gt; Print a message -&gt; Print [EXPRESSION] player.alias + &quot; hits &quot; + orc.alias + &quot; for &quot; + player.physical_damage + &quot; damage, leaving &quot; + orc.alias + &quot; with only &quot; + orc.hit_points + &quot; hitpoints remaining.&quot;<br/><br/>okay, we've added our scripts for our &quot;orc&quot; Object's &quot;fight&quot; Verb, but now we need our &quot;player&quot; and &quot;orc&quot; Objects to actually have the attributes that are used in our &quot;orc&quot; Object's &quot;fight&quot; Verb script~code block.<br/><br/>the Objects involved:<br/><br/>player<br/>orc<br/><br/>and their Attributes needed:<br/><br/>hit_points<br/>physical_damage<br/>alias<br/><br/>player -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;<br/><br/>Name: hit_points<br/>Type: int<br/>Value: 999 // or whatever amount you want to start with<br/><br/>Name: physical_damage<br/>Type: int<br/>Value: 50 // or whatever amount you want to start with<br/><br/>player -&gt; Setup (Tab) -&gt; Alias -&gt; onimike // or whatever you want, lol<br/><br/>player -&gt; Attributes (Tab) -&gt; Status Attributes -&gt; Add -&gt; // so they'll be displayed on the right side while playing the game<br/><br/>Name: hit_points<br/>Value: (leave blank)<br/><br/>Name: physical_damage<br/>Value: (leave blank)<br/><br/>orc -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;<br/><br/>Name: hit_points<br/>Type: int<br/>Value: 200 // or whatever amount you want it to have<br/><br/>Name: physical_damage<br/>Type: int<br/>Value: 10 // or whatever amount you want it to have<br/><br/>orc -&gt; Setup (Tab) -&gt; Alias -&gt; kul'dan<br/><br/>goob job, but let's now try to do more now:<br/><br/>we need a reason for doing damage: killing the orc, or dying and losing the game, hehe. Also, let's have you get experience and cash for killing the orc too.<br/><br/>so back to our &quot;orc&quot; Object's &quot;fight&quot; Verb, we got to add in some new lines~scripts:<br/><br/>Add a~new script -&gt; Scripts -&gt; If... -&gt; if [EXPRESSION] // or if [OBJECT DOES NOT HAVE FLAG] -&gt; orc.dead = false // or Object: orc, [flag name]: dead<br/>Then,<br/>-&gt; Add a~new script -&gt; Variables -&gt; Set an attribute or variable -&gt; player.hit_points = player.hit_points - orc.physical_damage<br/>-&gt; Add a~new script -&gt; Output -&gt; Print a message -&gt; Print [EXPRESSION] orc.alias + &quot; hits &quot; + player.alias + &quot; for &quot; + orc.physical_damage + &quot; damage, leaving &quot; + player.alias + &quot; with only &quot; + player.hit_points + &quot; hitpoints remaining.&quot;<br/>-&gt; Add a~new script -&gt; Scripts -&gt; If... -&gt; if [EXPRESSION] player.hit_points &lt;= 0 // we can't do [OBJECT ATTRIBUTE EQUALS] as I don't think there's any way to add in the &quot;equals and less than&quot; operator for it. As we've only got the &quot;equals&quot; operator, so this won't work for us.<br/>-&gt; then,<br/>-&gt;-&gt; Add a~new script -&gt; Game State -&gt; Finish the game<br/>-&gt; else,<br/>-&gt;-&gt; Add a~new script -&gt; Variables -&gt; Set an attribute or variable -&gt; orc.hit_points = orc.hit_points - player.physical_damage<br/>-&gt;-&gt; Add a~new script -&gt; Output -&gt; Print a message -&gt; Print [EXPRESSION] player.alias + &quot; hits &quot; + orc.alias + &quot; for &quot; + player.physical_damage + &quot; damage, leaving &quot; + orc.alias + &quot; with only &quot; + orc.hit_points + &quot; hitpoints remaining.&quot;<br/>-&gt;-&gt; Add a~new script -&gt; Scripts -&gt; If... -&gt; if [EXPRESSION] orc.hit_points &lt;= 0 // we can't do [OBJECT ATTRIBUTE EQUALS] as I don't think there's any way to add in the &quot;equals and less than&quot; operator for it. As we've only got the &quot;equals&quot; operator, so this won't work for us.<br/>-&gt;-&gt; then,<br/>-&gt;-&gt;-&gt; Add a~new script -&gt; Variables -&gt; Set an attribute or variable -&gt; player.experience_points = player.experience_points + orc.experience_points<br/>-&gt;-&gt;-&gt; Add a~new script -&gt; Variables -&gt; Set an attribute or variable -&gt; player.cash = player.cash + orc.cash<br/>-&gt;-&gt;-&gt; Add a~new script -&gt; Variables -&gt; Set a variable or attribute // or Set Object Flag -&gt; orc.dead=true // or Object: orc, [flag name]: dead<br/>-&gt;-&gt; else,<br/>-&gt;-&gt;-&gt; Add a~new script -&gt; Scripts -&gt; Run an object's script attribute // I think this will loop~do this &quot;fight&quot; Verb again, but if not, then remove~delete this script line! -&gt; run object [name] [orc] script attribute [name] fight, Using parameter dictionary (leave blank)<br/>else,<br/>-&gt; Add a~new script -&gt; Output -&gt; Print a message -&gt; Print [EXPRESSION] orc.alias + &quot; is already dead.&quot;<br/><br/>but, let's not forget to add the new actual attributes to our objects!<br/><br/>orc -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;<br/><br/>Name: dead<br/>Type: boolean<br/>Value: false<br/><br/>Name: experience_points<br/>Type: int<br/>Value: 100 // or whatever amount you want it to have<br/><br/>Name: cash<br/>Type: int<br/>Value: 50 // or whatever amount you want it to have<br/><br/>player -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;<br/><br/>Name: experience_points<br/>Type: int<br/>Value: 0 // or whatever amount you want to start with<br/><br/>Name: cash<br/>Type: int<br/>Value: 0 // or whatever amount you want to start with<br/><br/>player -&gt; Attributes (Tab) -&gt; Status Attributes -&gt; Add -&gt; // again, for these to be displayed on the right side while playing the game<br/><br/>Name: experience_points<br/>Value: (leave blank)<br/><br/>Name: cash<br/>Value: (leave blank)<br/><br/>alright, that's good enough for my help for now, it's your turn to see what new or extra complexity you can add to or do on your own, hehe.<br/><br/>Try to add in scripting that let's you choose whether to &quot;attack&quot; (physically: with a weapon or no weapon), &quot;cast&quot; (magic spells), &quot;use an item&quot;, &quot;run away&quot; (escape), and~or whatever else<br/><br/>Hints: &quot;Show a menu&quot;, &quot;If...&quot;, and &quot;Switch&quot;<br/><br/>Try to script the enemy object with A.I. behaviors<br/><br/>Hint: &quot;GetRandomInt&quot;, &quot;If...&quot;, and &quot;Switch&quot;<br/><br/>You can also try to add in more complex Game Mechanics too (such as for doing physical damage)<br/><br/>Hint: &quot;Print a message -&gt; Print [EXPRESSION]&quot;, and Quest's engine recognizes math's &quot;order of operations&quot; thankfully, making this &quot;easy&quot; to write into the hinted at script.<br/><br/>---------------------<br/><br/>as can be seen by the amount of work this takes, it is so much easier to help people via code... lol. If you can learn to work with the code, it's so much easier and faster for us to help you! As helping~explaining through the GUI~Editor is a lot of work!<br/><br/>I could do this same thing in code, in like 5 minutes, where this took me maybe 1-2 hrs to do, argh! <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --> just kidding, as I was a noob too, who couldn't work with the code either.",
      "PostDate": "2013-08-19T01:08:51+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42967",
      "UserId": 0,
      "Username": "TVJ",
      "UserAvatar": null,
      "UserGravatar": "136ddb06e62fbdd2fb8584803acf6c8b",
      "EditableText": "I could follow your instructions this far: box: RUN A SCRIPT (this allows us to add scripts, as you'll see the button for it show up upon changing to this setting)\n\nAs for the next paragraph:\n\n(by the way, hopefully you understandd that my &quot;-&gt;&quot; arrows in the front~left side, mean indenting ~ &quot;nesting&quot; the script ~ make sure you click on the correct &quot;add a~new script&quot; I-think-circular button, lol. Correct indenting~&quot;nesting&quot; is a MUST !!!, or your series of scripts won't work correctly!!!) --&gt; [b:urddkmmf]Nope, I'm afraid I don't understand (Gees, I'm feeling so dumb since I started to try and understand Quest. XD. So sorry!) What do you mean by 'nesting'? What do I have to do to 'nest' it?\n[/b:urddkmmf]\nit attacks you first doing damage to you and receiving a message of this act, and then you attack it for damage and receiving a message of this act\n\nAdd a~new script -&gt;[b:urddkmmf](Are we still in the 'verbs' tab of the orc object?)[/b:urddkmmf] Variables [b:urddkmmf](What? Where is that to be found?)[/b:urddkmmf]-&gt; Set an attribute or variable -&gt; player.hit_points = player.hit_points - orc.physical_damage[/color] [b:urddkmmf](Is this what I'm supposed to c&amp;p somewhere? If so, where?) Again, either my editor is completely different from yours or I'm lost once again. <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( -->[/b:urddkmmf]\n\n[b:urddkmmf]Oh heaven help me, this is giving me a severe headache. Whenever I try to solve my original problem I'm being lead to another bunch of problems which I don't understand either. <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( --> It's like looking up a word in a dictionary that gives you a description of the word you're looking for by using other words I don't know. XD Oh my... <!-- s:oops: --><img src=\"{SMILIES_PATH}/icon_redface.gif\" alt=\":oops:\" title=\"Embarassed\" /><!-- s:oops: --> Are there any Quest video tutorials that allow me to SEE where you're actually clicking, copy&amp;pasting etc.? [/color]\n\n(I'm so so sorry, I really don't want to waste your precious time! <!-- s:oops: --><img src=\"{SMILIES_PATH}/icon_redface.gif\" alt=\":oops:\" title=\"Embarassed\" /><!-- s:oops: --> )[/b:urddkmmf]",
      "EditableFormat": "bbcode",
      "HTML": "I could follow your instructions this far: box: RUN A SCRIPT (this allows us to add scripts, as you'll see the button for it show up upon changing to this setting)<br/><br/>As for the next paragraph:<br/><br/>(by the way, hopefully you understandd that my &quot;-&gt;&quot; arrows in the front~left side, mean indenting ~ &quot;nesting&quot; the script ~ make sure you click on the correct &quot;add a~new script&quot; I-think-circular button, lol. Correct indenting~&quot;nesting&quot; is a MUST !!!, or your series of scripts won't work correctly!!!) --&gt; <span style=\"font-weight:bold;\">Nope, I'm afraid I don't understand (Gees, I'm feeling so dumb since I started to try and understand Quest. XD. So sorry!) What do you mean by 'nesting'? What do I have to do to 'nest' it?<br/></span><br/>it attacks you first doing damage to you and receiving a message of this act, and then you attack it for damage and receiving a message of this act<br/><br/>Add a~new script -&gt;<span style=\"font-weight:bold;\">(Are we still in the 'verbs' tab of the orc object?)</span> Variables <span style=\"font-weight:bold;\">(What? Where is that to be found?)</span>-&gt; Set an attribute or variable -&gt; player.hit_points = player.hit_points - orc.physical_damage[/color] <span style=\"font-weight:bold;\">(Is this what I'm supposed to c&amp;p somewhere? If so, where?) Again, either my editor is completely different from yours or I'm lost once again. <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( --></span><br/><br/><span style=\"font-weight:bold;\">Oh heaven help me, this is giving me a severe headache. Whenever I try to solve my original problem I'm being lead to another bunch of problems which I don't understand either. <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( --> It's like looking up a word in a dictionary that gives you a description of the word you're looking for by using other words I don't know. XD Oh my... <!-- s:oops: --><img src=\"{SMILIES_PATH}/icon_redface.gif\" alt=\":oops:\" title=\"Embarassed\" /><!-- s:oops: --> Are there any Quest video tutorials that allow me to SEE where you're actually clicking, copy&amp;pasting etc.? [/color]<br/><br/>(I'm so so sorry, I really don't want to waste your precious time! <!-- s:oops: --><img src=\"{SMILIES_PATH}/icon_redface.gif\" alt=\":oops:\" title=\"Embarassed\" /><!-- s:oops: --> )</span>",
      "PostDate": "2016-05-19T18:51:44+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42975",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "sorry, &quot;nesting&quot; is a term used as programming lingo, it basically means &quot;indenting&quot; (when/for doing actual code writing) and/or &quot;inside of/contained within&quot;\n\nfor you, who use the GUI~Editor, this means you got to be clicking on the correct 'add new script' circle buttons, as which one you click on, makes a huge difference.\n\nthis may not help, but think of scripting (add new scripts) (aka: actions/events/operations), as creating the procedure of your actions/events/operations as an outline:\n\nI. earth\n-&gt; A. continents\n-&gt;-&gt; 1. europe\n-&gt;-&gt;-&gt; a. france\n-&gt;-&gt;-&gt;-&gt; (1) paris\n-&gt; B. oceans\n-&gt;-&gt; 1. atlantic\nII. Mars\n\nthe 'orc' Object's 'fight' Verb's scripting (add new scripts), shown as code, so you can see how it works like an outline:\n\nI. if (orc.dead) {\n-&gt; A. msg (&quot;It's already dead, silly.&quot;)\nI. }\nII. else {\n-&gt; A. orc.life = orc.life - player.damage\n-&gt; B. msg (&quot;You attack the orc, doing &quot; + player.damage + &quot; damage to it, leaving it with only &quot; + orc.life + &quot; life left.&quot;)\n-&gt; C. if (orc.life &lt;= 0) {\n-&gt;-&gt; 1. orc.dead - true\n-&gt;-&gt; 2. player.experience = player.experience + orc.experience\n-&gt;-&gt; 3. player.cash = player.cash + orc.cash\n-&gt;-&gt; 4. msg (&quot;You kill the orc and loot its corpse.&quot;)\n-&gt; C. }\n-&gt; D. else {\n-&gt;-&gt; 1. player.life = player.life - orc.damage\n-&gt;-&gt; 2. msg (&quot;The orc attacks you, doing &quot; + orc.damage + &quot; damage, leaving you with only &quot; + player.life + &quot; life left.&quot;)\n-&gt;-&gt; 3. if (player.life &lt;=0) {\n-&gt;-&gt;-&gt; a. msg (&quot;You were killed by the orc.&quot;)\n-&gt;-&gt;-&gt; b. msg (&quot;GAME OVER&quot;)\n-&gt;-&gt;-&gt; c. finish\n-&gt;-&gt; 3. }\n-&gt;-&gt; 4. else {\n-&gt;-&gt;-&gt; // loop (re-run) the Verb, via the 'invoke' or 'do' Script, using 'invoke' as example, in code it is this: invoke (orc.fight)\n-&gt;-&gt; } \n-&gt; D. }\nII. }\n\neach 'add new script' circle button corresponds to each line of the outline, so if you click on the wrong ones, you could get a totally screwed up outline, which obviously either will not work as you intended or not work at all. This outline concept is your 'order of operations' of your scripting (add new scripts), and thus it is vital that your 'order of operations' are correct.\n\nfor example, I think is how it looks in the GUI~Editor, for the 'if' Script block, using my 'fight' Verb for the 'orc' Object example:\n\nadd new script -&gt; scripts -&gt; 'if' Script -&gt; [EXPRESSION] -&gt; if [EXPRESSION] orc.dead\n\n1. -&gt; then, -&gt; add new script -&gt; output -&gt; 'print a message' Script -&gt; [MESSAGE] -&gt; print [MESSAGE] The orc is already dead, silly.\nVS\n2. add else -&gt; add new script -&gt; output -&gt; 'print a message' Script -&gt; [MESSAGE] -&gt; print [MESSAGE] The orc is already dead, silly.\nVS\n3. add new script -&gt; output -&gt; 'print a message' Script -&gt; [MESSAGE] -&gt; print [MESSAGE] The orc is already dead, silly.\n\nif you click on the '#1 add new script circle button', and add in the 'msg' (message) Script, then you correctly order-place the 'msg' Script&#058;\n\n[code:176pvgzn]if (orc&#46;dead) {\n  msg (&quot;The orc is already dead, silly&#46;&quot;)\n}[/code:176pvgzn]\n\nit will correctly display 'The orc is already dead, silly.' as you click on the 'orc' Object's 'fight' Verb, when the orc is dead.\n\n----\n\nwhereas if you click on' #2 add new script circle button', and add in the 'msg' (message) Script, then you incorrectly order-place the 'msg' Script&#058;\n\n[code:176pvgzn]if (orc&#46;dead) {\n\n} else {\n  msg (&quot;The orc is already dead, silly&#46;&quot;)\n}[/code:176pvgzn]\n\nthis is incorrect, as it'll display 'The orc is already dead, silly.'  as you click on the 'orc' Object's 'fight' Verb, when the orc is not dead. Wait, if the orc is not dead, why is it saying that the orc is dead? OOPSY!\n\n-----\n\nwhereas if you click on' #3 add new script circle button', and add in the 'msg' (message) Script, then you incorrectly order-place the 'msg' Script&#058;\n\n[code:176pvgzn]if (orc&#46;dead) {\n\n} else {\n\n}\nmsg (&quot;The orc is already dead,silly&#46;&quot;)[/code:176pvgzn]\n\nthis is incorrect, as it'll display 'The orc is already dead, silly.'  every time you click on the 'orc' Object's 'fight' Verb, which is also wrong!\n\n-------------------------------------\n\nyes, all the 'add new scripts' are within the 'orc' Object's 'fight' Verb, we want to make a 'scripting chain/block' of actions/operations/events for our 'orc' Object's 'fight' Verb.\n\nAnd sorry, I didn't realize that I give a few scripts to add into the 'fight' Verb, and then tell you to add in more scripts and/or change the scripts in the 'fight Verb again... thus you should do this instead:\n\nit's not easy to add in more scripts or to change scripts within a Verb in the GUI~Editor, I'd recommend deleting all the scripts and re-adding in all the scripts, as you're likely to mess up trying to add or change them anyways, likely deleting the scripts anyways, laughs.",
      "EditableFormat": "bbcode",
      "HTML": "sorry, &quot;nesting&quot; is a term used as programming lingo, it basically means &quot;indenting&quot; (when/for doing actual code writing) and/or &quot;inside of/contained within&quot;<br/><br/>for you, who use the GUI~Editor, this means you got to be clicking on the correct 'add new script' circle buttons, as which one you click on, makes a huge difference.<br/><br/>this may not help, but think of scripting (add new scripts) (aka: actions/events/operations), as creating the procedure of your actions/events/operations as an outline:<br/><br/>I. earth<br/>-&gt; A. continents<br/>-&gt;-&gt; 1. europe<br/>-&gt;-&gt;-&gt; a. france<br/>-&gt;-&gt;-&gt;-&gt; (1) paris<br/>-&gt; B. oceans<br/>-&gt;-&gt; 1. atlantic<br/>II. Mars<br/><br/>the 'orc' Object's 'fight' Verb's scripting (add new scripts), shown as code, so you can see how it works like an outline:<br/><br/>I. if (orc.dead) {<br/>-&gt; A. msg (&quot;It's already dead, silly.&quot;)<br/>I. }<br/>II. else {<br/>-&gt; A. orc.life = orc.life - player.damage<br/>-&gt; B. msg (&quot;You attack the orc, doing &quot; + player.damage + &quot; damage to it, leaving it with only &quot; + orc.life + &quot; life left.&quot;)<br/>-&gt; C. if (orc.life &lt;= 0) {<br/>-&gt;-&gt; 1. orc.dead - true<br/>-&gt;-&gt; 2. player.experience = player.experience + orc.experience<br/>-&gt;-&gt; 3. player.cash = player.cash + orc.cash<br/>-&gt;-&gt; 4. msg (&quot;You kill the orc and loot its corpse.&quot;)<br/>-&gt; C. }<br/>-&gt; D. else {<br/>-&gt;-&gt; 1. player.life = player.life - orc.damage<br/>-&gt;-&gt; 2. msg (&quot;The orc attacks you, doing &quot; + orc.damage + &quot; damage, leaving you with only &quot; + player.life + &quot; life left.&quot;)<br/>-&gt;-&gt; 3. if (player.life &lt;=0) {<br/>-&gt;-&gt;-&gt; a. msg (&quot;You were killed by the orc.&quot;)<br/>-&gt;-&gt;-&gt; b. msg (&quot;GAME OVER&quot;)<br/>-&gt;-&gt;-&gt; c. finish<br/>-&gt;-&gt; 3. }<br/>-&gt;-&gt; 4. else {<br/>-&gt;-&gt;-&gt; // loop (re-run) the Verb, via the 'invoke' or 'do' Script, using 'invoke' as example, in code it is this: invoke (orc.fight)<br/>-&gt;-&gt; } <br/>-&gt; D. }<br/>II. }<br/><br/>each 'add new script' circle button corresponds to each line of the outline, so if you click on the wrong ones, you could get a totally screwed up outline, which obviously either will not work as you intended or not work at all. This outline concept is your 'order of operations' of your scripting (add new scripts), and thus it is vital that your 'order of operations' are correct.<br/><br/>for example, I think is how it looks in the GUI~Editor, for the 'if' Script block, using my 'fight' Verb for the 'orc' Object example:<br/><br/>add new script -&gt; scripts -&gt; 'if' Script -&gt; [EXPRESSION] -&gt; if [EXPRESSION] orc.dead<br/><br/>1. -&gt; then, -&gt; add new script -&gt; output -&gt; 'print a message' Script -&gt; [MESSAGE] -&gt; print [MESSAGE] The orc is already dead, silly.<br/>VS<br/>2. add else -&gt; add new script -&gt; output -&gt; 'print a message' Script -&gt; [MESSAGE] -&gt; print [MESSAGE] The orc is already dead, silly.<br/>VS<br/>3. add new script -&gt; output -&gt; 'print a message' Script -&gt; [MESSAGE] -&gt; print [MESSAGE] The orc is already dead, silly.<br/><br/>if you click on the '#1 add new script circle button', and add in the 'msg' (message) Script, then you correctly order-place the 'msg' Script&#058;<br/><br/><pre><code>if (orc&#46;dead) {<br/>  msg (&quot;The orc is already dead, silly&#46;&quot;)<br/>}</code></pre><br/><br/>it will correctly display 'The orc is already dead, silly.' as you click on the 'orc' Object's 'fight' Verb, when the orc is dead.<br/><br/>----<br/><br/>whereas if you click on' #2 add new script circle button', and add in the 'msg' (message) Script, then you incorrectly order-place the 'msg' Script&#058;<br/><br/><pre><code>if (orc&#46;dead) {<br/><br/>} else {<br/>  msg (&quot;The orc is already dead, silly&#46;&quot;)<br/>}</code></pre><br/><br/>this is incorrect, as it'll display 'The orc is already dead, silly.'  as you click on the 'orc' Object's 'fight' Verb, when the orc is not dead. Wait, if the orc is not dead, why is it saying that the orc is dead? OOPSY!<br/><br/>-----<br/><br/>whereas if you click on' #3 add new script circle button', and add in the 'msg' (message) Script, then you incorrectly order-place the 'msg' Script&#058;<br/><br/><pre><code>if (orc&#46;dead) {<br/><br/>} else {<br/><br/>}<br/>msg (&quot;The orc is already dead,silly&#46;&quot;)</code></pre><br/><br/>this is incorrect, as it'll display 'The orc is already dead, silly.'  every time you click on the 'orc' Object's 'fight' Verb, which is also wrong!<br/><br/>-------------------------------------<br/><br/>yes, all the 'add new scripts' are within the 'orc' Object's 'fight' Verb, we want to make a 'scripting chain/block' of actions/operations/events for our 'orc' Object's 'fight' Verb.<br/><br/>And sorry, I didn't realize that I give a few scripts to add into the 'fight' Verb, and then tell you to add in more scripts and/or change the scripts in the 'fight Verb again... thus you should do this instead:<br/><br/>it's not easy to add in more scripts or to change scripts within a Verb in the GUI~Editor, I'd recommend deleting all the scripts and re-adding in all the scripts, as you're likely to mess up trying to add or change them anyways, likely deleting the scripts anyways, laughs.",
      "PostDate": "2016-05-20T06:23:48+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42976",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "the Elements ( <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/\">http://docs.textadventures.co.uk/quest/elements/</a><!-- m --> ) that can hold/contain/use/have scripting (actions/events/operations/orders):\n\nVerbs, Functions, Commands, Turnscripts, Timers, Object's Script Attributes, etc\n\nScripting (actions/events/operations/orders):\n\nrun as script -&gt; add new script -&gt; (see below)\n\nmain categories/sections of the scripts:\n\nOutput\nObjects\nScripts\nVariables\nGame State\nTimers\nTurnscripts\nEffects\n\nthe scripts:\n\nOutput\n-&gt; 'print a message' Script\n-&gt; etc etc etc Scripts\nObjects\n-&gt; 'Add to inventory' Script\n-&gt; etc etc etc Scripts\nScripts\n-&gt; 'Comment' Script\n-&gt; etc etc etc Scripts\nVariables\n-&gt; 'Set object flag' Script\n-&gt; etc etc etc Scripts\nGame State\n-&gt; 'Finish the game' Script\n-&gt; etc etc etc Scripts\nTimers\n-&gt; etc etc etc Scripts\nTurnscripts\n-&gt; etc etc etc Scripts\nEffects\n-&gt; etc etc etc Scripts\n\nyou get the idea...\n\nso, when I write this, for a quick sample example:\n\nrun as script -&gt; add new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; [EXPRESSION] -&gt; set variable orc.dead = [EXPRESSION] true\n\ndo you now understand it?\n\nfor a quick sample example\n\n'orc' Object -&gt; 'Verbs' Tab -&gt; Add -&gt; name: fight\n\nchoose the [run as script] option in the drop down box (it is defaultedly on the [print a message] option)\n\nclick on the (correct) 'add new script'\n\nscroll down to the 'variables' category/section, and click on (add) the 'set a variable or attribute' Script\n\n// type in what I have underlined:\nset variable [u:3km7ywgj]orc.dead[/u:3km7ywgj] = [EXPRESSION] [u:3km7ywgj]true[/u:3km7ywgj]\n\n// a Verb is actually a Script Attribute, so that is why we do this/go here to change/edit our 'orc' Object's 'fight' Verb, if we need to do so:\n// 'orc' Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; (find and click on our 'fight' Script Attribute in the list of Attributes for the 'orc' Object)",
      "EditableFormat": "bbcode",
      "HTML": "the Elements ( <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/\">http://docs.textadventures.co.uk/quest/elements/</a><!-- m --> ) that can hold/contain/use/have scripting (actions/events/operations/orders):<br/><br/>Verbs, Functions, Commands, Turnscripts, Timers, Object's Script Attributes, etc<br/><br/>Scripting (actions/events/operations/orders):<br/><br/>run as script -&gt; add new script -&gt; (see below)<br/><br/>main categories/sections of the scripts:<br/><br/>Output<br/>Objects<br/>Scripts<br/>Variables<br/>Game State<br/>Timers<br/>Turnscripts<br/>Effects<br/><br/>the scripts:<br/><br/>Output<br/>-&gt; 'print a message' Script<br/>-&gt; etc etc etc Scripts<br/>Objects<br/>-&gt; 'Add to inventory' Script<br/>-&gt; etc etc etc Scripts<br/>Scripts<br/>-&gt; 'Comment' Script<br/>-&gt; etc etc etc Scripts<br/>Variables<br/>-&gt; 'Set object flag' Script<br/>-&gt; etc etc etc Scripts<br/>Game State<br/>-&gt; 'Finish the game' Script<br/>-&gt; etc etc etc Scripts<br/>Timers<br/>-&gt; etc etc etc Scripts<br/>Turnscripts<br/>-&gt; etc etc etc Scripts<br/>Effects<br/>-&gt; etc etc etc Scripts<br/><br/>you get the idea...<br/><br/>so, when I write this, for a quick sample example:<br/><br/>run as script -&gt; add new script -&gt; variables -&gt; 'set a variable or attribute' Script -&gt; [EXPRESSION] -&gt; set variable orc.dead = [EXPRESSION] true<br/><br/>do you now understand it?<br/><br/>for a quick sample example<br/><br/>'orc' Object -&gt; 'Verbs' Tab -&gt; Add -&gt; name: fight<br/><br/>choose the [run as script] option in the drop down box (it is defaultedly on the [print a message] option)<br/><br/>click on the (correct) 'add new script'<br/><br/>scroll down to the 'variables' category/section, and click on (add) the 'set a variable or attribute' Script<br/><br/>// type in what I have underlined:<br/>set variable <span style=\"text-decoration:underline;\">orc.dead</span> = [EXPRESSION] <span style=\"text-decoration:underline;\">true</span><br/><br/>// a Verb is actually a Script Attribute, so that is why we do this/go here to change/edit our 'orc' Object's 'fight' Verb, if we need to do so:<br/>// 'orc' Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; (find and click on our 'fight' Script Attribute in the list of Attributes for the 'orc' Object)",
      "PostDate": "2016-05-20T06:50:21+01:00",
      "LastEditDate": null
    }
  ]
}
