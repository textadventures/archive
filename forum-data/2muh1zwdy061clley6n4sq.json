{
  "Topic": {
    "TopicId": "2muh1zwdy061clley6n4sq",
    "ForumId": "10",
    "Title": "Script for 'back'",
    "LastUpdated": "2016-12-12T20:18:49.1043864Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "3d03eb61-1822-4f8c-af8c-8c2d4b1a3fa8",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Instead of conventional compass directions, I'm using **go [room name]** during interior locations such as houses.\r\n\r\nAs there's a fair bit of flitting back and forth between rooms I would like to provide an option to use **back** and/or **b** to switch between rooms, so that instead of:\r\n```\r\nYou are in the hallway. The kitchen is at the far end.\r\n> go kitchen\r\n\r\nYou are in the kitchen. The doorway leads back to the hallway.\r\n> go hallway\r\n\r\nYou are in the hallway. The kitchen is at the far end.\r\n>\r\n```\r\nthey can use:\r\n```\r\nYou are in the hallway. The kitchen is at the far end.\r\n> go kitchen\r\n\r\nYou are in the kitchen. The doorway leads back to the hallway.\r\n> b\r\n\r\nYou are in the hallway. The kitchen is at the far end.\r\n>\r\n```\r\nIs there a global script of some sort that would do this? I'm thinking something along the lines of a command with **back; b; go back** and then a script: **goto PreviousLocation**",
      "EditableFormat": "markdown",
      "HTML": "<p>Instead of conventional compass directions, I'm using <strong>go [room name]</strong> during interior locations such as houses.</p>\n<p>As there's a fair bit of flitting back and forth between rooms I would like to provide an option to use <strong>back</strong> and/or <strong>b</strong> to switch between rooms, so that instead of:</p>\n<pre><code>You are in the hallway. The kitchen is at the far end.\n&gt; go kitchen\n\nYou are in the kitchen. The doorway leads back to the hallway.\n&gt; go hallway\n\nYou are in the hallway. The kitchen is at the far end.\n&gt;\n</code></pre>\n<p>they can use:</p>\n<pre><code>You are in the hallway. The kitchen is at the far end.\n&gt; go kitchen\n\nYou are in the kitchen. The doorway leads back to the hallway.\n&gt; b\n\nYou are in the hallway. The kitchen is at the far end.\n&gt;\n</code></pre>\n<p>Is there a global script of some sort that would do this? I'm thinking something along the lines of a command with <strong>back; b; go back</strong> and then a script: <strong>goto PreviousLocation</strong></p>\n\n",
      "PostDate": "2016-12-12T20:18:49.1043864Z",
      "LastEditDate": null
    },
    {
      "PostId": "d6fa26a7-1252-4bda-bdaf-943050646ecf",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There's an undo script, so a custom command with the following script does what I want.\r\n```\r\nundo\r\nShowRoomDescription\r\n```\r\nBut it displays a message saying **Undo: go living room**\r\n\r\nAny way to disable this? I've found the default Undo command in libraries, but I get errors if I customise it.\r\n\r\nIt also throws this error if I try to switch back and forth between two rooms with **b**\r\n```\r\nError running script: The given key was not present in the dictionary.\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>There's an undo script, so a custom command with the following script does what I want.</p>\n<pre><code>undo\nShowRoomDescription\n</code></pre>\n<p>But it displays a message saying <strong>Undo: go living room</strong></p>\n<p>Any way to disable this? I've found the default Undo command in libraries, but I get errors if I customise it.</p>\n<p>It also throws this error if I try to switch back and forth between two rooms with <strong>b</strong></p>\n<pre><code>Error running script: The given key was not present in the dictionary.\n</code></pre>\n\n",
      "PostDate": "2016-12-12T20:36:51.5984673Z",
      "LastEditDate": "2016-12-12T20:40:43.9415848Z"
    },
    {
      "PostId": "5fe7d25d-8394-465f-a4cc-33efc5dcf9d4",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What happens if the play goes to a room, picks something up, and then does BACK?",
      "EditableFormat": "markdown",
      "HTML": "<p>What happens if the play goes to a room, picks something up, and then does BACK?</p>\n\n",
      "PostDate": "2016-12-12T21:26:33.4838056Z",
      "LastEditDate": null
    },
    {
      "PostId": "7b5f6974-334e-4743-9094-03feb7f95cea",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah! Yes, they'll put it down. Well spotted.\r\n\r\nAny ideas then? Is there any kind of **PreviousLocation** script or jiggery pokery Black Magic that will do this?",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah! Yes, they'll put it down. Well spotted.</p>\n<p>Any ideas then? Is there any kind of <strong>PreviousLocation</strong> script or jiggery pokery Black Magic that will do this?</p>\n\n",
      "PostDate": "2016-12-12T22:27:50.2755842Z",
      "LastEditDate": null
    },
    {
      "PostId": "d4e1e3ab-d59c-4556-a206-efdcd23308bf",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you got to code/script that in... you need to store/save the old location/room to an Object Attribute, and then you can use that Object Attribute to go back to your previous location/room, but it's slightly more tricky too (to properly handle the correct value/room/location being put/stored/saved into your Object Attribute), see below, for example of such a scripting for moving:\r\n\r\n```\r\n// initially:\r\n\r\ngame.previous_room = room\r\ngame.current_room = room\r\n\r\n// before/as you move to a new location/room, you're still in the old room: room\r\n\r\ngame.previous_room = game.current_room // you haven't moved yet to the new location/room, so we're storing/saving this old room/location: room\r\nMoveObject (game.pov, room2) // now, you're moving to, and in, the new room: room2\r\ngame.current_room = game.pov.parent // game.current_room = game.pov.parent = room2\r\n\r\n// if we were to move to room3, executing the moving script again:\r\n\r\ngame.previous_room = game.current_room // you haven't moved yet to the new location/room, so we're storing/saving this old room/location: room2\r\nMoveObject (game.pov, room3) // now, you're moving to, and in, the new room: room3\r\ngame.current_room = game.pov.parent // game.current_room = game.pov.parent = room3\r\n\r\n// if we were to move to room4, executing the moving script again:\r\n\r\ngame.previous_room = game.current_room // you haven't moved yet to the new location/room, so we're storing/saving this old room/location: room3\r\nMoveObject (game.pov, room4) // now, you're moving to, and in, the new room: room4\r\ngame.current_room = game.pov.parent // game.current_room = game.pov.parent = room4\r\n\r\n// etc etc etc\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>you got to code/script that in... you need to store/save the old location/room to an Object Attribute, and then you can use that Object Attribute to go back to your previous location/room, but it's slightly more tricky too (to properly handle the correct value/room/location being put/stored/saved into your Object Attribute), see below, for example of such a scripting for moving:</p>\n<pre><code>// initially:\n\ngame.previous_room = room\ngame.current_room = room\n\n// before/as you move to a new location/room, you're still in the old room: room\n\ngame.previous_room = game.current_room // you haven't moved yet to the new location/room, so we're storing/saving this old room/location: room\nMoveObject (game.pov, room2) // now, you're moving to, and in, the new room: room2\ngame.current_room = game.pov.parent // game.current_room = game.pov.parent = room2\n\n// if we were to move to room3, executing the moving script again:\n\ngame.previous_room = game.current_room // you haven't moved yet to the new location/room, so we're storing/saving this old room/location: room2\nMoveObject (game.pov, room3) // now, you're moving to, and in, the new room: room3\ngame.current_room = game.pov.parent // game.current_room = game.pov.parent = room3\n\n// if we were to move to room4, executing the moving script again:\n\ngame.previous_room = game.current_room // you haven't moved yet to the new location/room, so we're storing/saving this old room/location: room3\nMoveObject (game.pov, room4) // now, you're moving to, and in, the new room: room4\ngame.current_room = game.pov.parent // game.current_room = game.pov.parent = room4\n\n// etc etc etc\n</code></pre>\n\n",
      "PostDate": "2016-12-12T23:30:47.9985508Z",
      "LastEditDate": "2016-12-12T23:45:26.0702233Z"
    },
    {
      "PostId": "f97030bd-1218-4937-a2f1-94cbdb45efae",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "and the 'back' Command, would be something like this, an example:\r\n\r\n```\r\n<command name=\"back_command\">\r\n  <pattern>back</pattern>\r\n  <script>\r\n    MoveObject (game.pov, game.previous_room)\r\n  </script>\r\n</command>\r\n```\r\n\r\n--------------------\r\n\r\nif you want to be able to (selectively choose how many) 'go backs multiple times', then you'd need to store/save (add) each of the previous rooms to an Objectlist Attribute instead, and the 'back' Command would be this:\r\n\r\n```\r\n<command name=\"selective_multiple_back_command\">\r\n  <pattern>back #text#</pattern>\r\n  <script><![CDATA[\r\n    if (IsInt (text) and GetInt (text) > 0 and GetInt (text) <= ListCount (game.previous_room_objectlist_attribute)) {\r\n      x_variable = GetInt (text) \r\n      MoveObject (game.pov, ObjectListItem (game.previous_room_objectlist_attribute, ListCount (game.previous_room_objectlist_attribute) - x_variable))\r\n    } else {\r\n      msg (\"Wrong input, your inputted value must be an integer greater than zero and an integer less than or equal to the number of items in your previous room Objectlist Attribute\")\r\n    }\r\n  ]]></script>\r\n</command>\r\n```\r\n\r\n// depends on what you want with design... we may need to remove those old locations from our Objectlist Attribute, or maybe you want/need to have two Objectlist Attributes, one that doesn't change and one that does change. I can explain why, if you don't see the design concept of why these would be needed to be done, if it's what your design requires.\r\n\r\n---------------\r\n\r\nif you just want it to go back multiple times --- no selection:\r\n\r\n```\r\n<command name=\"non_selective_multiple_back_command\">\r\n  <pattern>non_select_multiple_back</pattern>\r\n  <script>\r\n    object_variable = ObjectListItem (game.previous_room_objectlist_attribute, ListCount (game.previous_room_objectlist_attribute) - 1)\r\n    MoveObject (game.pov, object_variable)\r\n    list remove (game.previous_room_objectlist_attribute, object_variable)\r\n  </script>\r\n</command>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>and the 'back' Command, would be something like this, an example:</p>\n<pre><code>&lt;command name=\"back_command\"&gt;\n  &lt;pattern&gt;back&lt;/pattern&gt;\n  &lt;script&gt;\n    MoveObject (game.pov, game.previous_room)\n  &lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n<hr>\n<p>if you want to be able to (selectively choose how many) 'go backs multiple times', then you'd need to store/save (add) each of the previous rooms to an Objectlist Attribute instead, and the 'back' Command would be this:</p>\n<pre><code>&lt;command name=\"selective_multiple_back_command\"&gt;\n  &lt;pattern&gt;back #text#&lt;/pattern&gt;\n  &lt;script&gt;&lt;![CDATA[\n    if (IsInt (text) and GetInt (text) &gt; 0 and GetInt (text) &lt;= ListCount (game.previous_room_objectlist_attribute)) {\n      x_variable = GetInt (text) \n      MoveObject (game.pov, ObjectListItem (game.previous_room_objectlist_attribute, ListCount (game.previous_room_objectlist_attribute) - x_variable))\n    } else {\n      msg (\"Wrong input, your inputted value must be an integer greater than zero and an integer less than or equal to the number of items in your previous room Objectlist Attribute\")\n    }\n  ]]&gt;&lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n<p>// depends on what you want with design... we may need to remove those old locations from our Objectlist Attribute, or maybe you want/need to have two Objectlist Attributes, one that doesn't change and one that does change. I can explain why, if you don't see the design concept of why these would be needed to be done, if it's what your design requires.</p>\n<hr>\n<p>if you just want it to go back multiple times --- no selection:</p>\n<pre><code>&lt;command name=\"non_selective_multiple_back_command\"&gt;\n  &lt;pattern&gt;non_select_multiple_back&lt;/pattern&gt;\n  &lt;script&gt;\n    object_variable = ObjectListItem (game.previous_room_objectlist_attribute, ListCount (game.previous_room_objectlist_attribute) - 1)\n    MoveObject (game.pov, object_variable)\n    list remove (game.previous_room_objectlist_attribute, object_variable)\n  &lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n\n",
      "PostDate": "2016-12-12T23:49:02.2751717Z",
      "LastEditDate": "2016-12-13T00:28:50.3932251Z"
    },
    {
      "PostId": "89ad2ebd-9e66-4373-a1f0-4d2789bf331e",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks, hege, but if the only way to do this is to use that first block of code for EVERY single location, I can do without it.\r\n\r\nI just hoped there was some function like **GotoPreviousLocation** in the same way there's a **ShowRoomDescription**.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks, hege, but if the only way to do this is to use that first block of code for EVERY single location, I can do without it.</p>\n<p>I just hoped there was some function like <strong>GotoPreviousLocation</strong> in the same way there's a <strong>ShowRoomDescription</strong>.</p>\n\n",
      "PostDate": "2016-12-13T00:58:56.3673929Z",
      "LastEditDate": "2016-12-13T00:59:33.1624804Z"
    },
    {
      "PostId": "1cf13f9a-1d26-4867-834f-1f5a853bfda7",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "in terms of going back to a previous location, this works for every/any location and going to any location (just like ShowRoomDescription), such a place to put the scripting so you only have to place it once (no redundent code of copy-paste), would be to use the special (specifically) 'changedparent' Script Attribute on/for your 'game.pov' Player Object, for example:\r\n\r\n```\r\n<object name=\"room\">\r\n</object>\r\n\r\n<object name=\"room_1\">\r\n</object>\r\n\r\n<object name=\"room_2\">\r\n</object>\r\n\r\n<object name=\"room_3\">\r\n</object>\r\n\r\n<object name=\"room_4\">\r\n</object>\r\n\r\n<object name=\"room_99\">\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <attr name=\"parent\" type=\"object\">room</attr> // initial location\r\n  <attr name=\"previous_room\" type=\"object\">room</attr> // initial (object reference) value\r\n  <attr name=\"current_room\" type=\"object\">room</attr> // initial (object reference) value\r\n  <attr name=\"changedparent\" type=\"script\">\r\n    this.previous_room = this.current_room\r\n    this.current_room = this.parent\r\n  </attr>\r\n</object>\r\n\r\n<command name=\"goto_previous_room_command\">\r\n  <pattern>goto_previous_room</pattern>\r\n  <script>\r\n    MoveObject (game.pov, game.pov.previous_room)\r\n  </script>\r\n</command>\r\n```\r\n\r\n-------\r\n\r\nor you could try putting the scripting into here, IF you're moved into the room BEFORE this scripting is run (you have to see if it works or not --- if it doesn't work, then the scripting is run before you're moved into the room):\r\n\r\n(I did try this myself quite some time ago, so-but I this: forgot / don't remember, and I am too lazy to test it again myself, so you can test/try it, lol)\r\n\r\n'game' Game Object -> 'Scripts' Tab -> 'Script when entering a room' Script -> (add new script / set it up: see below)\r\n\r\ngame.pov.previous_room = game.pov.current_room\r\ngame.pov.current_room = game.pov.parent\r\n\r\nthis is an example of when/if using this (aka: you have the Attributes added/within your 'game.pov' Object):\r\n\r\n```\r\n<object name=\"room\">\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"previous_room\" type=\"object\">room</attr>\r\n  <attr name=\"current_room\" type=\"object\">room</attr>\r\n</object>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>in terms of going back to a previous location, this works for every/any location and going to any location (just like ShowRoomDescription), such a place to put the scripting so you only have to place it once (no redundent code of copy-paste), would be to use the special (specifically) 'changedparent' Script Attribute on/for your 'game.pov' Player Object, for example:</p>\n<pre><code>&lt;object name=\"room\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"room_1\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"room_2\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"room_3\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"room_4\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"room_99\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt; // initial location\n  &lt;attr name=\"previous_room\" type=\"object\"&gt;room&lt;/attr&gt; // initial (object reference) value\n  &lt;attr name=\"current_room\" type=\"object\"&gt;room&lt;/attr&gt; // initial (object reference) value\n  &lt;attr name=\"changedparent\" type=\"script\"&gt;\n    this.previous_room = this.current_room\n    this.current_room = this.parent\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;command name=\"goto_previous_room_command\"&gt;\n  &lt;pattern&gt;goto_previous_room&lt;/pattern&gt;\n  &lt;script&gt;\n    MoveObject (game.pov, game.pov.previous_room)\n  &lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n<hr>\n<p>or you could try putting the scripting into here, IF you're moved into the room BEFORE this scripting is run (you have to see if it works or not --- if it doesn't work, then the scripting is run before you're moved into the room):</p>\n<p>(I did try this myself quite some time ago, so-but I this: forgot / don't remember, and I am too lazy to test it again myself, so you can test/try it, lol)</p>\n<p>'game' Game Object -&gt; 'Scripts' Tab -&gt; 'Script when entering a room' Script -&gt; (add new script / set it up: see below)</p>\n<p>game.pov.previous_room = game.pov.current_room<br>\ngame.pov.current_room = game.pov.parent</p>\n<p>this is an example of when/if using this (aka: you have the Attributes added/within your 'game.pov' Object):</p>\n<pre><code>&lt;object name=\"room\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"previous_room\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"current_room\" type=\"object\"&gt;room&lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n\n",
      "PostDate": "2016-12-13T06:01:25.6182273Z",
      "LastEditDate": "2016-12-13T06:25:32.0529399Z"
    },
    {
      "PostId": "14500f3e-14e5-4d3d-9c75-4c7b54c771ab",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You should think what you want to happen if the player does:\r\n>BACK\r\n>BACK\r\n\r\nWould that leave the player in the original room, or two locations away? If the latter, change the `changedparent` script for the player to save the past locations in an object list.",
      "EditableFormat": "markdown",
      "HTML": "<p>You should think what you want to happen if the player does:</p>\n<blockquote>\n<p>BACK<br>\nBACK</p>\n</blockquote>\n<p>Would that leave the player in the original room, or two locations away? If the latter, change the <code>changedparent</code> script for the player to save the past locations in an object list.</p>\n\n",
      "PostDate": "2016-12-13T08:19:47.2025563Z",
      "LastEditDate": null
    },
    {
      "PostId": "bb820d8f-11b8-426f-a6a9-6436d946bc8f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "yes, indeed, my latest/previous post is just a very simple example design of directly going back to the previous room only (ie: you can continuously do this: roomA <----> roomB).\r\n\r\n------------\r\n\r\nMy earlier posts give examples of more advanced handling design.\r\n\r\n-----------\r\n\r\nIt also synchronously depends upon how OurJud designs his/her game too... Exits' and/or move-scripting's, and their paths', design...",
      "EditableFormat": "markdown",
      "HTML": "<p>yes, indeed, my latest/previous post is just a very simple example design of directly going back to the previous room only (ie: you can continuously do this: roomA &lt;----&gt; roomB).</p>\n<hr>\n<p>My earlier posts give examples of more advanced handling design.</p>\n<hr>\n<p>It also synchronously depends upon how OurJud designs his/her game too... Exits' and/or move-scripting's, and their paths', design...</p>\n\n",
      "PostDate": "2016-12-13T12:18:22.4545728Z",
      "LastEditDate": "2016-12-13T12:23:16.8110214Z"
    },
    {
      "PostId": "0f5ea930-0cf7-4c85-9013-a14071a6bd6a",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "All in all, given how complicated and time-consuming adding this script would be, not to mention the conflicts it could cause, it's not really a workable idea.",
      "EditableFormat": "markdown",
      "HTML": "<p>All in all, given how complicated and time-consuming adding this script would be, not to mention the conflicts it could cause, it's not really a workable idea.</p>\n\n",
      "PostDate": "2016-12-13T16:42:05.5647158Z",
      "LastEditDate": "2016-12-13T16:45:44.7501018Z"
    },
    {
      "PostId": "5a8382b5-96ff-4007-a75f-1e602813df96",
      "UserId": 168877,
      "Username": "TinFoilMkIV",
      "AvatarUrl": "http://i.imgur.com/j34jdCvb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you're still considering this at all I think I have a method for basic back functionality. Basically use a 'changedparent' script on the player to save their previous location. Then have back check the current exits 'to' attribute to see if any match the previous room,  if yes, then go there, if no let the player know they have no way to get back from there.\r\n\r\nIf you wanted to get somewhat fancy with multiple backs allowed you'd have to make a list out of previous locations then just remove the latest each time you went back.\r\n\r\nie:\r\n\r\nplayer 'changedparent' script\r\n<code>prevroom = oldvalue</code>\r\nback command\r\n<code>//check for exit leading to previous room\r\nforeach (exit , ScopeExits ()) {\r\nif (exit.to = game.pov.prevroom) {\r\ndestination = exit.alias\r\n}\r\n}\r\n//if found go there\r\nif(IsDefined (\"destination\")){\r\nHandleSingleCommand (\"go \" + destination)\r\n}\r\n//if not then no path is available\r\nelse {\r\nmsg(\"There doesn't seem to be a way back from here\")\r\n}</code>",
      "EditableFormat": "markdown",
      "HTML": "<p>If you're still considering this at all I think I have a method for basic back functionality. Basically use a 'changedparent' script on the player to save their previous location. Then have back check the current exits 'to' attribute to see if any match the previous room,  if yes, then go there, if no let the player know they have no way to get back from there.</p>\n<p>If you wanted to get somewhat fancy with multiple backs allowed you'd have to make a list out of previous locations then just remove the latest each time you went back.</p>\n<p>ie:</p>\n<p>player 'changedparent' script<br>\n<code>prevroom = oldvalue</code><br>\nback command<br>\n<code>//check for exit leading to previous room<br>\nforeach (exit , ScopeExits ()) {<br>\nif (exit.to = game.pov.prevroom) {<br>\ndestination = exit.alias<br>\n}<br>\n}<br>\n//if found go there<br>\nif(IsDefined (\"destination\")){<br>\nHandleSingleCommand (\"go \" + destination)<br>\n}<br>\n//if not then no path is available<br>\nelse {<br>\nmsg(\"There doesn't seem to be a way back from here\")<br>\n}</code></p>\n\n",
      "PostDate": "2016-12-14T17:47:21.285987Z",
      "LastEditDate": "2016-12-14T17:54:28.128104Z"
    },
    {
      "PostId": "b1e7d7f9-1c2b-41a9-b45b-0d8724ce7d11",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks for this, TinFoil, but my aim was to save people having to type **go [room name]** in full every time. This was before I realised they could just use the first letter of the room, meaning **go k** does the same as **go kitchen** which is far less of a pain.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks for this, TinFoil, but my aim was to save people having to type <strong>go [room name]</strong> in full every time. This was before I realised they could just use the first letter of the room, meaning <strong>go k</strong> does the same as <strong>go kitchen</strong> which is far less of a pain.</p>\n\n",
      "PostDate": "2016-12-14T17:59:14.5643045Z",
      "LastEditDate": null
    },
    {
      "PostId": "c9d4d70a-7c14-4a24-9311-9c11c067f035",
      "UserId": 168877,
      "Username": "TinFoilMkIV",
      "AvatarUrl": "http://i.imgur.com/j34jdCvb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "No worries, I wanted to see if I could get it for myself as well even though I have no immediate use for it either. Seems like it should be a useful bit of code to know.",
      "EditableFormat": "markdown",
      "HTML": "<p>No worries, I wanted to see if I could get it for myself as well even though I have no immediate use for it either. Seems like it should be a useful bit of code to know.</p>\n\n",
      "PostDate": "2016-12-14T18:45:54.5588937Z",
      "LastEditDate": null
    },
    {
      "PostId": "58fc26ac-20ac-4741-876d-0e07ed8efc66",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, definitely. Any snippets like this are worth cataloguing. Maybe an idea to post it in the library with full usage instruction - where it goes, etc.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, definitely. Any snippets like this are worth cataloguing. Maybe an idea to post it in the library with full usage instruction - where it goes, etc.</p>\n\n",
      "PostDate": "2016-12-14T19:27:50.6958704Z",
      "LastEditDate": "2016-12-14T19:28:02.3898198Z"
    },
    {
      "PostId": "e5113d42-dc9a-4f21-bf64-c051ddaf457c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sequentially going back (pushing/popping onto/off a stack --- via a list with quest: add/remove item from list, or even without removing items as well, iterating a stack: using an Attribute to hold the value that determines the index number for the list item) and selectively going back (using 'get input' and a list), isn't too code-wise complex, my previous post gave an example of each of these, as well as a simple immediate/single back too.\r\n\r\nThe curious question is what is the data size of a list/dictionary in quest, laughs. How many items can a list/dictionary have?",
      "EditableFormat": "markdown",
      "HTML": "<p>Sequentially going back (pushing/popping onto/off a stack --- via a list with quest: add/remove item from list, or even without removing items as well, iterating a stack: using an Attribute to hold the value that determines the index number for the list item) and selectively going back (using 'get input' and a list), isn't too code-wise complex, my previous post gave an example of each of these, as well as a simple immediate/single back too.</p>\n<p>The curious question is what is the data size of a list/dictionary in quest, laughs. How many items can a list/dictionary have?</p>\n\n",
      "PostDate": "2016-12-14T21:13:38.3866794Z",
      "LastEditDate": "2016-12-14T21:17:34.939253Z"
    }
  ]
}
