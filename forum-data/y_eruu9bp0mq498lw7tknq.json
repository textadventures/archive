{
  "Topic": {
    "TopicId": "y_eruu9bp0mq498lw7tknq",
    "ForumId": "18",
    "Title": "Too Many Tabs!! Adding your Library Tabs to the \"Features\" tabs so they can be toggled on/off",
    "LastUpdated": "2023-09-18T20:23:35.8901186Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "f66d833c-743b-4b0e-b463-d5caa5c5d2e0",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you're like me, you're using many of Pixie's Libraries, and you've created some of your own.   I'm just starting to work on integrating these additional libraries better with the Core.\r\n\r\nWhat started the project for me was having too many tabs from the added libraries.  I've discovered how to make them able to be toggled on/off, just like the containers tab.  I've even found out how to add liquids from Pixie's LiquidLib to the Containers tab.\r\n\r\nIf you want a checkbox on a Feature Tab that will toggle the library Tab on/off, you need to update either CoreEditorGame.aslx , CoreEditorObjectFeatures.aslx, or both.\r\n\r\nYou'll also need to at least one extra line of code to the Library Tab.\r\n\r\nHere's an example of what I've personally added to CoreEditorGame.aslx  it's on the tab with the caption [EditorGameFeatures]\r\n\r\n```\r\n      <control>\r\n        <controltype>checkbox</controltype>\r\n        <caption>NpcLib (using NpcLib)</caption>\r\n        <attribute>feature_npc</attribute>\r\n      </control>\t  \r\n\r\n      <control>\r\n        <controltype>checkbox</controltype>\r\n        <caption>Posturing allowed (Sit, stand, recline)</caption>\r\n        <attribute>feature_PostureLib</attribute>\r\n        <onlydisplayif>game.feature_npc</onlydisplayif> \r\n      </control>\t\r\n\r\n      <control>\r\n        <controltype>checkbox</controltype>\r\n        <caption>WeatherLib</caption>\r\n        <attribute>feature_WeatherLib</attribute>\r\n      </control>\t\r\n\r\n      <control>\r\n        <controltype>checkbox</controltype>\r\n        <caption>LiquidLib</caption>\r\n        <attribute>feature_LiquidLib</attribute>\r\n      </control>\r\n\r\n      <control>\r\n        <controltype>checkbox</controltype>\r\n        <caption>Ip Worlds(allows for typing of rooms and objects according to Ip style)</caption>\r\n        <attribute>feature_IpWorlds</attribute>\r\n      </control>\r\n\r\n      <control>\r\n        <controltype>checkbox</controltype>\r\n        <caption>Expanded Descriptions (Senses, Darkfeel, Ip, CombatLib)</caption>\r\n        <attribute>feature_DescriptionsTab</attribute>\r\n      </control>\t  \r\n\t  \r\n      <control>\r\n        <controltype>checkbox</controltype>\r\n        <caption>LiftLib</caption>\r\n        <attribute>LiftLib</attribute>\r\n      </control>\r\n```\r\nWith that added, there are now attributes which can be used with ```<onlydisplayif> ```on your Library Tab\r\n\r\nAlso I've updated my CoreEditorObjectFeatures.aslx as follows:\r\n\r\n```\r\n    <control>\r\n      <controltype>checkbox</controltype>\r\n      <caption>NPC (using NpcLib)</caption>\r\n      <attribute>feature_npc</attribute>\r\n      <onlydisplayif>game.feature_npc</onlydisplayif> \r\n    </control>\t\r\n\r\n    <control>\r\n      <controltype>checkbox</controltype>\r\n      <caption>Furniture or NPC Postures</caption>\r\n      <attribute>postureable</attribute>\r\n      <onlydisplayif>game.feature_PostureLib</onlydisplayif> \r\n    </control>\t\r\n\r\n\t\r\n    <control>\r\n      <controltype>checkbox</controltype>\r\n      <caption>ConvLib</caption>\r\n      <attribute>feature_ConvLib</attribute>\r\n    </control>\t\r\n\t\r\n    <control>\r\n      <controltype>checkbox</controltype>\r\n      <caption>StackLib (for stack related objects)</caption>\r\n      <attribute>feature_stackobject</attribute>\r\n    </control>\t\r\n\r\n    <control>\r\n      <controltype>checkbox</controltype>\r\n      <caption>Combat Object</caption>\r\n      <attribute>feature_combat</attribute>\r\n    </control>\t\r\n\r\n    <control>\r\n      <controltype>checkbox</controltype>\r\n      <caption>Holy (works with BornagainLib)</caption>\r\n      <attribute>feature_holy</attribute>\r\n    </control>\t\r\n```\r\nThese might reference a CoreEditorGame update, so they wouldn't show unless the checkbox is on the Game object first.  \r\nThen with these two set up the way you like.  You add the \"onlydisplayif\" with the \"attribute\" you picked for toggling your tab.\r\nHere's an example of my updated Stacklib Tab:\r\n\r\n```\r\n  <tab>\r\n    <parent>_ObjectEditor</parent>\r\n    <caption>Stackable</caption>\r\n    <mustnotinherit>editor_room; editor_player</mustnotinherit>\r\n    <onlydisplayif>this.feature_stackobject</onlydisplayif>\r\n```\r\n\r\nIt works great to clean up the interface.  In the case of adding LiquidLib to the containers Tab, I added Pixie's Liquid Types to the CoreTypes.aslx first.\r\n\r\nThen I was able to update CoreEditorObjectContainer.aslx with the following control:\r\n\r\n```\r\n    <control>\r\n      <controltype>dropdowntypes</controltype>\r\n      <caption>liquid?</caption>\r\n      <types>*=[TypeContainerNot]; liquidcontainer=Liquid Container</types>\r\n      <width>150</width>\r\n    </control>\r\n```\r\nTo add Liquid Container to the containers\r\n\r\nand at the bottom these parts from Pixie's original tab have been moved over:\r\n\r\n```\r\n    <!-- LiquidLib -->\t\r\n\r\n    <control>\r\n      <controltype>number</controltype>\r\n      <caption>[EditorObjectContainerLqdMaximumCapacity]</caption>\r\n      <attribute>capacity</attribute>\r\n      <width>100</width>\r\n      <mustinherit>liquidcontainer</mustinherit>\r\n      <minimum>0</minimum>\r\n    </control>\r\n    \r\n    <control>\r\n      <controltype>number</controltype>\r\n      <caption>[EditorObjectContainerLqdStartingVolume]</caption>\r\n      <attribute>full</attribute>\r\n      <width>100</width>\r\n      <mustinherit>liquidcontainer</mustinherit>\r\n      <minimum>0</minimum>\r\n    </control>\r\n    \r\n    <control>\r\n      <controltype>textbox</controltype>\r\n      <caption>[EditorObjectContainerNameStartingLiquid]</caption>\r\n      <attribute>liquidtype</attribute>\r\n      <mustinherit>liquidcontainer</mustinherit>\r\n    </control>\r\n```\r\nSo that the Tab for Liquids appears on rooms, but the containers portion appears on the containers tab.\r\n\r\nI'm going to work on cleaning up the very complicated descriptions tab I have for my big project next...\r\n\r\n but I intend to look into more fully integrating the libraries into the core, and blending together Pixie's NPC/Postures work possibly into the core or into one combined library.\r\n\r\nMy eventual goal would be something like a large update of Quest (at least for my own use if folks don't want a version where Pixie's libraries can all be toggled on/off as part of the core).\r\n\r\nHere's hoping that this information is interesting or useful to someone!",
      "EditableFormat": "markdown",
      "HTML": "<p>If you're like me, you're using many of Pixie's Libraries, and you've created some of your own.   I'm just starting to work on integrating these additional libraries better with the Core.</p>\n<p>What started the project for me was having too many tabs from the added libraries.  I've discovered how to make them able to be toggled on/off, just like the containers tab.  I've even found out how to add liquids from Pixie's LiquidLib to the Containers tab.</p>\n<p>If you want a checkbox on a Feature Tab that will toggle the library Tab on/off, you need to update either CoreEditorGame.aslx , CoreEditorObjectFeatures.aslx, or both.</p>\n<p>You'll also need to at least one extra line of code to the Library Tab.</p>\n<p>Here's an example of what I've personally added to CoreEditorGame.aslx  it's on the tab with the caption [EditorGameFeatures]</p>\n<pre><code>      &lt;control&gt;\n        &lt;controltype&gt;checkbox&lt;/controltype&gt;\n        &lt;caption&gt;NpcLib (using NpcLib)&lt;/caption&gt;\n        &lt;attribute&gt;feature_npc&lt;/attribute&gt;\n      &lt;/control&gt;\t  \n\n      &lt;control&gt;\n        &lt;controltype&gt;checkbox&lt;/controltype&gt;\n        &lt;caption&gt;Posturing allowed (Sit, stand, recline)&lt;/caption&gt;\n        &lt;attribute&gt;feature_PostureLib&lt;/attribute&gt;\n        &lt;onlydisplayif&gt;game.feature_npc&lt;/onlydisplayif&gt; \n      &lt;/control&gt;\t\n\n      &lt;control&gt;\n        &lt;controltype&gt;checkbox&lt;/controltype&gt;\n        &lt;caption&gt;WeatherLib&lt;/caption&gt;\n        &lt;attribute&gt;feature_WeatherLib&lt;/attribute&gt;\n      &lt;/control&gt;\t\n\n      &lt;control&gt;\n        &lt;controltype&gt;checkbox&lt;/controltype&gt;\n        &lt;caption&gt;LiquidLib&lt;/caption&gt;\n        &lt;attribute&gt;feature_LiquidLib&lt;/attribute&gt;\n      &lt;/control&gt;\n\n      &lt;control&gt;\n        &lt;controltype&gt;checkbox&lt;/controltype&gt;\n        &lt;caption&gt;Ip Worlds(allows for typing of rooms and objects according to Ip style)&lt;/caption&gt;\n        &lt;attribute&gt;feature_IpWorlds&lt;/attribute&gt;\n      &lt;/control&gt;\n\n      &lt;control&gt;\n        &lt;controltype&gt;checkbox&lt;/controltype&gt;\n        &lt;caption&gt;Expanded Descriptions (Senses, Darkfeel, Ip, CombatLib)&lt;/caption&gt;\n        &lt;attribute&gt;feature_DescriptionsTab&lt;/attribute&gt;\n      &lt;/control&gt;\t  \n\t  \n      &lt;control&gt;\n        &lt;controltype&gt;checkbox&lt;/controltype&gt;\n        &lt;caption&gt;LiftLib&lt;/caption&gt;\n        &lt;attribute&gt;LiftLib&lt;/attribute&gt;\n      &lt;/control&gt;\n</code></pre>\n<p>With that added, there are now attributes which can be used with <code>&lt;onlydisplayif&gt;</code>on your Library Tab</p>\n<p>Also I've updated my CoreEditorObjectFeatures.aslx as follows:</p>\n<pre><code>    &lt;control&gt;\n      &lt;controltype&gt;checkbox&lt;/controltype&gt;\n      &lt;caption&gt;NPC (using NpcLib)&lt;/caption&gt;\n      &lt;attribute&gt;feature_npc&lt;/attribute&gt;\n      &lt;onlydisplayif&gt;game.feature_npc&lt;/onlydisplayif&gt; \n    &lt;/control&gt;\t\n\n    &lt;control&gt;\n      &lt;controltype&gt;checkbox&lt;/controltype&gt;\n      &lt;caption&gt;Furniture or NPC Postures&lt;/caption&gt;\n      &lt;attribute&gt;postureable&lt;/attribute&gt;\n      &lt;onlydisplayif&gt;game.feature_PostureLib&lt;/onlydisplayif&gt; \n    &lt;/control&gt;\t\n\n\t\n    &lt;control&gt;\n      &lt;controltype&gt;checkbox&lt;/controltype&gt;\n      &lt;caption&gt;ConvLib&lt;/caption&gt;\n      &lt;attribute&gt;feature_ConvLib&lt;/attribute&gt;\n    &lt;/control&gt;\t\n\t\n    &lt;control&gt;\n      &lt;controltype&gt;checkbox&lt;/controltype&gt;\n      &lt;caption&gt;StackLib (for stack related objects)&lt;/caption&gt;\n      &lt;attribute&gt;feature_stackobject&lt;/attribute&gt;\n    &lt;/control&gt;\t\n\n    &lt;control&gt;\n      &lt;controltype&gt;checkbox&lt;/controltype&gt;\n      &lt;caption&gt;Combat Object&lt;/caption&gt;\n      &lt;attribute&gt;feature_combat&lt;/attribute&gt;\n    &lt;/control&gt;\t\n\n    &lt;control&gt;\n      &lt;controltype&gt;checkbox&lt;/controltype&gt;\n      &lt;caption&gt;Holy (works with BornagainLib)&lt;/caption&gt;\n      &lt;attribute&gt;feature_holy&lt;/attribute&gt;\n    &lt;/control&gt;\t\n</code></pre>\n<p>These might reference a CoreEditorGame update, so they wouldn't show unless the checkbox is on the Game object first.<br>\nThen with these two set up the way you like.  You add the \"onlydisplayif\" with the \"attribute\" you picked for toggling your tab.<br>\nHere's an example of my updated Stacklib Tab:</p>\n<pre><code>  &lt;tab&gt;\n    &lt;parent&gt;_ObjectEditor&lt;/parent&gt;\n    &lt;caption&gt;Stackable&lt;/caption&gt;\n    &lt;mustnotinherit&gt;editor_room; editor_player&lt;/mustnotinherit&gt;\n    &lt;onlydisplayif&gt;this.feature_stackobject&lt;/onlydisplayif&gt;\n</code></pre>\n<p>It works great to clean up the interface.  In the case of adding LiquidLib to the containers Tab, I added Pixie's Liquid Types to the CoreTypes.aslx first.</p>\n<p>Then I was able to update CoreEditorObjectContainer.aslx with the following control:</p>\n<pre><code>    &lt;control&gt;\n      &lt;controltype&gt;dropdowntypes&lt;/controltype&gt;\n      &lt;caption&gt;liquid?&lt;/caption&gt;\n      &lt;types&gt;*=[TypeContainerNot]; liquidcontainer=Liquid Container&lt;/types&gt;\n      &lt;width&gt;150&lt;/width&gt;\n    &lt;/control&gt;\n</code></pre>\n<p>To add Liquid Container to the containers</p>\n<p>and at the bottom these parts from Pixie's original tab have been moved over:</p>\n<pre><code>    &lt;!-- LiquidLib --&gt;\t\n\n    &lt;control&gt;\n      &lt;controltype&gt;number&lt;/controltype&gt;\n      &lt;caption&gt;[EditorObjectContainerLqdMaximumCapacity]&lt;/caption&gt;\n      &lt;attribute&gt;capacity&lt;/attribute&gt;\n      &lt;width&gt;100&lt;/width&gt;\n      &lt;mustinherit&gt;liquidcontainer&lt;/mustinherit&gt;\n      &lt;minimum&gt;0&lt;/minimum&gt;\n    &lt;/control&gt;\n    \n    &lt;control&gt;\n      &lt;controltype&gt;number&lt;/controltype&gt;\n      &lt;caption&gt;[EditorObjectContainerLqdStartingVolume]&lt;/caption&gt;\n      &lt;attribute&gt;full&lt;/attribute&gt;\n      &lt;width&gt;100&lt;/width&gt;\n      &lt;mustinherit&gt;liquidcontainer&lt;/mustinherit&gt;\n      &lt;minimum&gt;0&lt;/minimum&gt;\n    &lt;/control&gt;\n    \n    &lt;control&gt;\n      &lt;controltype&gt;textbox&lt;/controltype&gt;\n      &lt;caption&gt;[EditorObjectContainerNameStartingLiquid]&lt;/caption&gt;\n      &lt;attribute&gt;liquidtype&lt;/attribute&gt;\n      &lt;mustinherit&gt;liquidcontainer&lt;/mustinherit&gt;\n    &lt;/control&gt;\n</code></pre>\n<p>So that the Tab for Liquids appears on rooms, but the containers portion appears on the containers tab.</p>\n<p>I'm going to work on cleaning up the very complicated descriptions tab I have for my big project next...</p>\n<p>but I intend to look into more fully integrating the libraries into the core, and blending together Pixie's NPC/Postures work possibly into the core or into one combined library.</p>\n<p>My eventual goal would be something like a large update of Quest (at least for my own use if folks don't want a version where Pixie's libraries can all be toggled on/off as part of the core).</p>\n<p>Here's hoping that this information is interesting or useful to someone!</p>\n\n",
      "PostDate": "2023-09-18T20:23:35.8901186Z",
      "LastEditDate": "2023-09-18T20:26:21.5899675Z",
      "link": null
    },
    {
      "PostId": "e7c2026e-da1d-4501-90bc-19c6a4eecd81",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Update:\r\n\r\nHaving fun with this project.  The amounts of tabs are also lessening as different parts of each tab can be added to core editors like the example from LiquidLib above.  \r\n\r\nThe Object Setup tab can be used as a good place to have dropdowns for different selections of types.  Types then can be used to determine how the extant tabs look, which controls are added.  \r\n\r\nThe Game Start Script can be modified in the core to include \"if\" statements which check whether you wish to \"Activate\" a set of library features, like CombatLib.  If someone selects the checkbox that chooses to activate CombatLib on the features tab, as an example.  The game start script can read \"if HasAttribute(game, \"whateverthatcheckboxadds\")\"  then \"CombatInitialise\".\r\n\r\nWhen I first discovered Quest, I was merely excited that I'd be able to create my own Text Adventure games.  I've been very excited and happy to discover that through the documentation and help of users like Pixie and MrAngel, I've learned not to be scared of code.  I'm loving learning how to fully use the system.\r\n\r\nThanks for all who make this possible!\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Update:</p>\n<p>Having fun with this project.  The amounts of tabs are also lessening as different parts of each tab can be added to core editors like the example from LiquidLib above.</p>\n<p>The Object Setup tab can be used as a good place to have dropdowns for different selections of types.  Types then can be used to determine how the extant tabs look, which controls are added.</p>\n<p>The Game Start Script can be modified in the core to include \"if\" statements which check whether you wish to \"Activate\" a set of library features, like CombatLib.  If someone selects the checkbox that chooses to activate CombatLib on the features tab, as an example.  The game start script can read \"if HasAttribute(game, \"whateverthatcheckboxadds\")\"  then \"CombatInitialise\".</p>\n<p>When I first discovered Quest, I was merely excited that I'd be able to create my own Text Adventure games.  I've been very excited and happy to discover that through the documentation and help of users like Pixie and MrAngel, I've learned not to be scared of code.  I'm loving learning how to fully use the system.</p>\n<p>Thanks for all who make this possible!</p>\n\n",
      "PostDate": "2023-10-27T19:25:12.303567Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0fb44b80-6c0e-4faf-8665-bbafd11153d1",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So expanding upon the above.  The attribute for the feature which in the first core update I mentioned merely toggled a library tab on/off, can be used as a checking reference to initiate the library according to the documentation instructions.  \r\n\r\nIn the case of CombatLib, it was initially just an attribute naming the feature which would be the \"Only display if\" requirement for the Tab.  Building on that, you use that feature in other places like the UI and the Game Start places of the core.  \r\n\r\nIf the game has that feature then CombatInitialise, but also in the Interface, it can activate the \"Spells\" pane or \"2nd Inventory\" library, which with only one small update to the \"learn\" script will populate with known spells.  \r\n\r\nHere's an example of the two functions I've updated in Core so far as I've been working on more fully integrating the libraries:\r\n\r\n```\r\n  <function name=\"InitUserInterface\">\r\n    if (HasAttribute(game, \"feature_DescriptionsTab\")) {\r\n      InitInv2 (\"Spells\")\r\n      SetInv2 (spells_known)\r\n    }\r\n    if (HasAttribute(game, \"feature_holy\")) {\r\n      InitInv3 (\"Bible\")\r\n      SetInv3 (verses_known)\r\n    }\r\n  </function>\r\n  \r\n  <function name=\"StartGame\">\r\n    <![CDATA[\r\n    StartTurnOutputSection\r\n    if (game.showtitle) {\r\n      JS.StartOutputSection (\"title\")\r\n      PrintCentered (\"<span style=\\\"font-size:260%\\\">\" + game.gamename + \"</span>\")\r\n      if (game.subtitle <> null) {\r\n        if (LengthOf(game.subtitle) > 0) {\r\n          PrintCentered (\"<span style=\\\"font-size:130%\\\">\" + game.subtitle + \"</span>\")\r\n        }\r\n      }\r\n      if (game.author <> null) {\r\n        if (LengthOf(game.author) > 0) {\r\n          PrintCentered (\"<br/><span style=\\\"font-size:140%\\\">[By] \" + game.author + \"</span>\")\r\n        }\r\n      }\r\n      msg (\"<div style=\\\"margin-top:20px\\\"></div>\")\r\n      JS.EndOutputSection (\"title\")\r\n    }\r\n    if (game.pov = null) {\r\n      playerObject = GetObject(\"player\")\r\n      if (playerObject = null) {\r\n        if (ListCount(AllObjects()) > 0) {\r\n          firstRoom = ObjectListItem(AllObjects(), 0)\r\n        }\r\n        else {\r\n          create (\"room\")\r\n          firstRoom = room\r\n        }\r\n        create (\"player\")\r\n        player.parent = firstRoom\r\n      }\r\n      game.pov = player\r\n    }\r\n    else {\r\n      InitPOV (null, game.pov)\r\n    }\r\n    InitStatusAttributes\r\n    UpdateStatusAttributes\r\n    InitVerbsList\r\n    if ((HasAttribute(game, \"feature_DescriptionsTab\") and (HasAttribute(game, \"feature_holy\")))) {\r\n      CombatInitialise\r\n      game.scopebackdrop => {\r\n        foreach (o, GetDirectChildren(spells_known)) {\r\n          list add (items, o)\r\n        }\r\n        foreach (o, GetDirectChildren(verses_known)) {\r\n          list add (items, o)\r\n        }\r\n      }\r\n    }\r\n    else if (HasAttribute(game, \"feature_DescriptionsTab\")) {\r\n      CombatInitialise\r\n      game.scopebackdrop => {\r\n        foreach (o, GetDirectChildren(spells_known)) {\r\n          list add (items, o)\r\n        }\r\n      }\r\n    }\r\n    else if (HasAttribute(game, \"feature_holy\")) {\r\n      game.scopebackdrop => {\r\n        foreach (o, GetDirectChildren(verses_known)) {\r\n          list add (items, o)\r\n        }\r\n      }\r\n    }\r\n    if (HasAttribute(game, \"feature_IpWorlds\")) {\r\n      game.gamestorage = NewObjectList()\r\n      game.pervtype = NewObjectList()\r\n      foreach (obj, FilterByType (allobjects(), \"pervtype\")) {\r\n        list add (game.pervtype, obj)\r\n      }\r\n      foreach (obj, FilterByType (AllRooms(), \"gamestorage\")) {\r\n        list add (game.gamestorage, obj)\r\n      }\r\n    }\r\n    if (HasAttribute(game, \"feature_ShopLib\")) {\r\n      set (game, \"moneyformat\", £!1.2!)\r\n    }\r\n    if (HasAttribute(game, \"showreactions\")) {\r\n      player.contacts = NewObjectList()\r\n      foreach (obj, AllObjects()) {\r\n        if (HasAttribute(obj, \"playercontact\")) {\r\n          list add (player.contacts, obj)\r\n        }\r\n      }\r\n    }\r\n    if (HasScript(game, \"start\")) do (game, \"start\")\r\n    foreach (obj, AllObjects()) {\r\n      if (HasScript(obj, \"_initialise_\")) do (obj, \"_initialise_\")\r\n    }\r\n    UpdateStatusAttributes\r\n    UpdateObjectLinks\r\n    on ready {\r\n      if (game.gridmap) {\r\n        Grid_DrawPlayerInRoom (game.pov.parent)\r\n      }\r\n      if (game.displayroomdescriptiononstart) {\r\n        OnEnterRoom (null)\r\n      }\r\n      UpdateStatusAttributes\r\n      UpdateObjectLinks\r\n    }\r\n    // Added by KV to use the old JS clearScreen if the transcript is disabled\r\n    if (GetBoolean(game, \"notranscript\")){\r\n      JS.eval(\"transcriptEnabled = false;\")\r\n    }\r\n    game.runturnscripts = false\r\n    FinishTurn\r\n    ]]>\r\n  </function>\r\n```\r\nNOTE: Core.aslx is the one file that you cannot rename, and then have the other parts of the core call the new version.  (Example CoreEditor3.aslx)\r\n\r\nSo I Highly recommend keeping your Core variants in different folders for different versions before choosing which one to drop in your ProgramFiles-->Quest 5--> core folder.  That way you can \"switch\" which core games you're using without fear of losing the original quest core, or any of your versions.  \r\n\r\nI can easily revert back to the naked quest 5.8 engine, by copying \"core\" from my \"original\" folder to the \"Core\" folder.  Or switch to the version where only tabs toggle on/off by copying the \"core\" from \"Core2\" into the \"Core\" folder.  All other updates can sit next to eachother as long as each version = a file-name and \"includeref\" update for version number.\r\n\r\nHere's hoping this makes sense and is helpful for someone.  It's all been part of my learning process for coding and Quest.  I'm forever grateful to the quest creator, whomever that is, and also to my heroes Pixie, MrAngel, and other forum participants who educate us newbies into hobbyists.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>So expanding upon the above.  The attribute for the feature which in the first core update I mentioned merely toggled a library tab on/off, can be used as a checking reference to initiate the library according to the documentation instructions.</p>\n<p>In the case of CombatLib, it was initially just an attribute naming the feature which would be the \"Only display if\" requirement for the Tab.  Building on that, you use that feature in other places like the UI and the Game Start places of the core.</p>\n<p>If the game has that feature then CombatInitialise, but also in the Interface, it can activate the \"Spells\" pane or \"2nd Inventory\" library, which with only one small update to the \"learn\" script will populate with known spells.</p>\n<p>Here's an example of the two functions I've updated in Core so far as I've been working on more fully integrating the libraries:</p>\n<pre><code>  &lt;function name=\"InitUserInterface\"&gt;\n    if (HasAttribute(game, \"feature_DescriptionsTab\")) {\n      InitInv2 (\"Spells\")\n      SetInv2 (spells_known)\n    }\n    if (HasAttribute(game, \"feature_holy\")) {\n      InitInv3 (\"Bible\")\n      SetInv3 (verses_known)\n    }\n  &lt;/function&gt;\n  \n  &lt;function name=\"StartGame\"&gt;\n    &lt;![CDATA[\n    StartTurnOutputSection\n    if (game.showtitle) {\n      JS.StartOutputSection (\"title\")\n      PrintCentered (\"&lt;span style=\\\"font-size:260%\\\"&gt;\" + game.gamename + \"&lt;/span&gt;\")\n      if (game.subtitle &lt;&gt; null) {\n        if (LengthOf(game.subtitle) &gt; 0) {\n          PrintCentered (\"&lt;span style=\\\"font-size:130%\\\"&gt;\" + game.subtitle + \"&lt;/span&gt;\")\n        }\n      }\n      if (game.author &lt;&gt; null) {\n        if (LengthOf(game.author) &gt; 0) {\n          PrintCentered (\"&lt;br/&gt;&lt;span style=\\\"font-size:140%\\\"&gt;[By] \" + game.author + \"&lt;/span&gt;\")\n        }\n      }\n      msg (\"&lt;div style=\\\"margin-top:20px\\\"&gt;&lt;/div&gt;\")\n      JS.EndOutputSection (\"title\")\n    }\n    if (game.pov = null) {\n      playerObject = GetObject(\"player\")\n      if (playerObject = null) {\n        if (ListCount(AllObjects()) &gt; 0) {\n          firstRoom = ObjectListItem(AllObjects(), 0)\n        }\n        else {\n          create (\"room\")\n          firstRoom = room\n        }\n        create (\"player\")\n        player.parent = firstRoom\n      }\n      game.pov = player\n    }\n    else {\n      InitPOV (null, game.pov)\n    }\n    InitStatusAttributes\n    UpdateStatusAttributes\n    InitVerbsList\n    if ((HasAttribute(game, \"feature_DescriptionsTab\") and (HasAttribute(game, \"feature_holy\")))) {\n      CombatInitialise\n      game.scopebackdrop =&gt; {\n        foreach (o, GetDirectChildren(spells_known)) {\n          list add (items, o)\n        }\n        foreach (o, GetDirectChildren(verses_known)) {\n          list add (items, o)\n        }\n      }\n    }\n    else if (HasAttribute(game, \"feature_DescriptionsTab\")) {\n      CombatInitialise\n      game.scopebackdrop =&gt; {\n        foreach (o, GetDirectChildren(spells_known)) {\n          list add (items, o)\n        }\n      }\n    }\n    else if (HasAttribute(game, \"feature_holy\")) {\n      game.scopebackdrop =&gt; {\n        foreach (o, GetDirectChildren(verses_known)) {\n          list add (items, o)\n        }\n      }\n    }\n    if (HasAttribute(game, \"feature_IpWorlds\")) {\n      game.gamestorage = NewObjectList()\n      game.pervtype = NewObjectList()\n      foreach (obj, FilterByType (allobjects(), \"pervtype\")) {\n        list add (game.pervtype, obj)\n      }\n      foreach (obj, FilterByType (AllRooms(), \"gamestorage\")) {\n        list add (game.gamestorage, obj)\n      }\n    }\n    if (HasAttribute(game, \"feature_ShopLib\")) {\n      set (game, \"moneyformat\", £!1.2!)\n    }\n    if (HasAttribute(game, \"showreactions\")) {\n      player.contacts = NewObjectList()\n      foreach (obj, AllObjects()) {\n        if (HasAttribute(obj, \"playercontact\")) {\n          list add (player.contacts, obj)\n        }\n      }\n    }\n    if (HasScript(game, \"start\")) do (game, \"start\")\n    foreach (obj, AllObjects()) {\n      if (HasScript(obj, \"_initialise_\")) do (obj, \"_initialise_\")\n    }\n    UpdateStatusAttributes\n    UpdateObjectLinks\n    on ready {\n      if (game.gridmap) {\n        Grid_DrawPlayerInRoom (game.pov.parent)\n      }\n      if (game.displayroomdescriptiononstart) {\n        OnEnterRoom (null)\n      }\n      UpdateStatusAttributes\n      UpdateObjectLinks\n    }\n    // Added by KV to use the old JS clearScreen if the transcript is disabled\n    if (GetBoolean(game, \"notranscript\")){\n      JS.eval(\"transcriptEnabled = false;\")\n    }\n    game.runturnscripts = false\n    FinishTurn\n    ]]&gt;\n  &lt;/function&gt;\n</code></pre>\n<p>NOTE: Core.aslx is the one file that you cannot rename, and then have the other parts of the core call the new version.  (Example CoreEditor3.aslx)</p>\n<p>So I Highly recommend keeping your Core variants in different folders for different versions before choosing which one to drop in your ProgramFiles--&gt;Quest 5--&gt; core folder.  That way you can \"switch\" which core games you're using without fear of losing the original quest core, or any of your versions.</p>\n<p>I can easily revert back to the naked quest 5.8 engine, by copying \"core\" from my \"original\" folder to the \"Core\" folder.  Or switch to the version where only tabs toggle on/off by copying the \"core\" from \"Core2\" into the \"Core\" folder.  All other updates can sit next to eachother as long as each version = a file-name and \"includeref\" update for version number.</p>\n<p>Here's hoping this makes sense and is helpful for someone.  It's all been part of my learning process for coding and Quest.  I'm forever grateful to the quest creator, whomever that is, and also to my heroes Pixie, MrAngel, and other forum participants who educate us newbies into hobbyists.</p>\n\n",
      "PostDate": "2023-10-31T16:46:28.9508652Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d30f6bb6-718b-40a6-b642-1836b8e69daa",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Help!\r\n\r\nI hadn't made a multi-attack monster using Pixie's CombatLib yet, but as I'm testing my core integrations, I'm getting an error with the Shaman from the tutorial.  I made him a ritual knife as an additional object.  The Frost Blast executes fine, but when he attacks with the ritual knife, I get errors that are like this one.\r\n\r\n```\r\nError running script: Error compiling expression 'Replace(this.attackdesc, \"%\", CapFirst(GetDisplayAlias (owner))) + \" and misses.\"': FunctionCallElement: Could find not function 'Replace(Object, String, String)'\r\n```\r\nAt first I wondered if the function in question was put in the wrong place when I integrated combat stuff into the core, but it turns out this function isn't part of CombatLib  it's just frequently used by it.\r\n\r\nDoes anyone know what's causing the error?  Was this discussed in forums years ago when CombatLib was polished and first published?\r\n\r\nPlease and thanks for any info/direction.",
      "EditableFormat": "markdown",
      "HTML": "<p>Help!</p>\n<p>I hadn't made a multi-attack monster using Pixie's CombatLib yet, but as I'm testing my core integrations, I'm getting an error with the Shaman from the tutorial.  I made him a ritual knife as an additional object.  The Frost Blast executes fine, but when he attacks with the ritual knife, I get errors that are like this one.</p>\n<pre><code>Error running script: Error compiling expression 'Replace(this.attackdesc, \"%\", CapFirst(GetDisplayAlias (owner))) + \" and misses.\"': FunctionCallElement: Could find not function 'Replace(Object, String, String)'\n</code></pre>\n<p>At first I wondered if the function in question was put in the wrong place when I integrated combat stuff into the core, but it turns out this function isn't part of CombatLib  it's just frequently used by it.</p>\n<p>Does anyone know what's causing the error?  Was this discussed in forums years ago when CombatLib was polished and first published?</p>\n<p>Please and thanks for any info/direction.</p>\n\n",
      "PostDate": "2023-11-09T03:59:14.2479536Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3434de8f-0dd7-4e33-ad8c-2d836be44151",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "While tossing this little snafu with the multi-attack monsters on the back burner, i'm having a blast plugging away here at the integrations with CombatLib specifically.   \r\n\r\nPlaces where Pixie offers/recommends creating attributes, functions, scripts and/or overriding are getting added to the tabs and appear or not based on types and functions.  The editor_player type now has two attributes changedintelligence and changedmana_bonus which have an \"if\" script to check whether game.feature_mana is being used and runn SetMana if it's there.  So his Vanician magic option is now an option on the game features tab which becomes available if using CombatLib.\r\n\r\nThere are now a set of controls on that Combat tab which appear for editor_player type as well and \"onlydisplayif\" scenarios.\r\n\r\nAdded a string dictionary control to Game player tab for checking/adding attributes as I/people decide to create my/their own.\r\n\r\nI don't know why I have so much fun learning the quest code by studying my heroes this way, but I do.  And these integrations will make it even easier to create and customise my games without having to always go to the Attributes tab and remember everything or look it up.\r\n\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>While tossing this little snafu with the multi-attack monsters on the back burner, i'm having a blast plugging away here at the integrations with CombatLib specifically.</p>\n<p>Places where Pixie offers/recommends creating attributes, functions, scripts and/or overriding are getting added to the tabs and appear or not based on types and functions.  The editor_player type now has two attributes changedintelligence and changedmana_bonus which have an \"if\" script to check whether game.feature_mana is being used and runn SetMana if it's there.  So his Vanician magic option is now an option on the game features tab which becomes available if using CombatLib.</p>\n<p>There are now a set of controls on that Combat tab which appear for editor_player type as well and \"onlydisplayif\" scenarios.</p>\n<p>Added a string dictionary control to Game player tab for checking/adding attributes as I/people decide to create my/their own.</p>\n<p>I don't know why I have so much fun learning the quest code by studying my heroes this way, but I do.  And these integrations will make it even easier to create and customise my games without having to always go to the Attributes tab and remember everything or look it up.</p>\n\n",
      "PostDate": "2023-11-09T22:46:43.9161563Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "df5deb97-04df-4783-9c9e-5927c1c982ec",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Was inspired with the answer to the multi-attack monster issue reading in the other forum.  Mrangel answered someone elses' question and it helped me see what I need to do here.   Really, the only  issue is that the attackdescription is a required field so the attribute has to exist when the multi-attack monster scripts are running.  Below is the post when I figured out the answer in https://textadventures.co.uk/forum/quest/topic/br2wcmnfue_ar142pugg4a/2-status-attributes-on-same-line \r\n\r\nMrangel, this looks very similar to an error I'm working on in Pixie's combatlib. He's got something called a multi-attack monster. You drop several objects inside the monster, and his library scripts are meant to randomly pick one of the objects and then run the attack script using those attributes.\r\n\r\nThe error that comes back when the second attack comes in is like this:\r\n\r\nError running script: Error compiling expression 'Replace(this.attackdesc, \"%\", CapFirst(GetDisplayAlias (owner))) + \" and misses.\"': FunctionCallElement: Could find not function 'Replace(Object, String, String)'\r\n\r\nWhich looks very like what Jennifer Wren's error is saying.... but reading this combined with your discussion here gives me an idea!\r\n\r\nWhat if it's missing a required attribute? \"attackdesc\" isn't filled out on that second attack.... let me check...\r\n\r\nYes! That was it! You solved one of my problems while solving Ms. Jennifer's! all the library wants is an addition to the editor here \"Required for multi-attack types\" and probably also to be also on the appropriate combat tabs in the editor instead of only the \"description\" tab. That way when it is a monster attack, it's right with all the other fields that define it.\r\n\r\nThanks Mr. Angel. You're a hero in this forum! And also thanks Jennifer for your part in the inspiration and encouragement. It's encouraging to also see other folks learning as they try to build games!",
      "EditableFormat": "markdown",
      "HTML": "<p>Was inspired with the answer to the multi-attack monster issue reading in the other forum.  Mrangel answered someone elses' question and it helped me see what I need to do here.   Really, the only  issue is that the attackdescription is a required field so the attribute has to exist when the multi-attack monster scripts are running.  Below is the post when I figured out the answer in https://textadventures.co.uk/forum/quest/topic/br2wcmnfue_ar142pugg4a/2-status-attributes-on-same-line</p>\n<p>Mrangel, this looks very similar to an error I'm working on in Pixie's combatlib. He's got something called a multi-attack monster. You drop several objects inside the monster, and his library scripts are meant to randomly pick one of the objects and then run the attack script using those attributes.</p>\n<p>The error that comes back when the second attack comes in is like this:</p>\n<p>Error running script: Error compiling expression 'Replace(this.attackdesc, \"%\", CapFirst(GetDisplayAlias (owner))) + \" and misses.\"': FunctionCallElement: Could find not function 'Replace(Object, String, String)'</p>\n<p>Which looks very like what Jennifer Wren's error is saying.... but reading this combined with your discussion here gives me an idea!</p>\n<p>What if it's missing a required attribute? \"attackdesc\" isn't filled out on that second attack.... let me check...</p>\n<p>Yes! That was it! You solved one of my problems while solving Ms. Jennifer's! all the library wants is an addition to the editor here \"Required for multi-attack types\" and probably also to be also on the appropriate combat tabs in the editor instead of only the \"description\" tab. That way when it is a monster attack, it's right with all the other fields that define it.</p>\n<p>Thanks Mr. Angel. You're a hero in this forum! And also thanks Jennifer for your part in the inspiration and encouragement. It's encouraging to also see other folks learning as they try to build games!</p>\n\n",
      "PostDate": "2023-11-10T21:18:15.8071501Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
