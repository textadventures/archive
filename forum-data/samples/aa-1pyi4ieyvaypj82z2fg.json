{
  "Topic": {
    "TopicId": "aa-1pyi4ieyvaypj82z2fg",
    "ForumId": "18",
    "Title": "Troubleshooting / Debugging: Issues and Solutions",
    "LastUpdated": "2017-10-17T11:10:09.5687131Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "3c2321d5-f29b-4460-be25-cb479a953526",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post/thread, updated/posted)\r\n\r\n--------------------------------\r\n\r\n@ Everyone:\r\n\r\npurpose of this thread: to get a 'running' list of various strange/weird/quirky/irritating issues and (hopefully if able) solutions, so we can look here to possibly save us tons of time trying to figure out how to fix the issues/errors with our code not working.\r\n\r\nFor example, I keep forgetting that (with quest v550) I can't do the 'attr' syntax with Dictionaries, and I spend tons of time trying to troubleshoot the error, not realizing that it's just an error due to using the 'attr' syntax, which doesn't work with Dictionary Attributes (in quest v550), until tons of wasted time later (trying to troubleshoot my code design, when it's just me in using the non-working 'attr' syntax with Dictionary Attributes), as I try to troubleshoot the non-recognized error and thus why my code isn't working, lol.\r\n\r\nPlease post any quirky/strange/weird/irritating troubleshooting/Debugging issues, along with quest version, and (if/when able) their solutions (and label it as fixed for what version/s)\r\n\r\n(this is NOT for simple typos-mistakes, nor any faulty code logic/design, this is for various quest issues that effect everyone)\r\n\r\n--------------------------------------\r\n\r\n1. (see below, quest v550)\r\n\r\n```\r\n// this syntax WORKS for Dictionary Attributes:\r\n\r\n<NAME_OF_DICTIONARY_ATTRIBUTE type=\"NAME_OF_TYPE_OF_DICTIONARY_ATTRIBUTE\">\r\n  // CONTENT\r\n</NAME_OF_DICTIONARY_ATTRIBUTE>\r\n\r\n// this syntax does NOT work for Dictionary Attributes:\r\n\r\n<attr name=\"NAME_OF_DICTIONARY_ATTRIBUTE\" type=\"NAME_OF_TYPE_OF_DICTIONARY_ATTRIBUTE\">\r\n  // CONTENT\r\n</attr>\r\n\r\n// I don't know if Pixie fixed this with the newer versions of quest (can someone let me know?)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post/thread, updated/posted)</p>\n<hr>\n<p>@ Everyone:</p>\n<p>purpose of this thread: to get a 'running' list of various strange/weird/quirky/irritating issues and (hopefully if able) solutions, so we can look here to possibly save us tons of time trying to figure out how to fix the issues/errors with our code not working.</p>\n<p>For example, I keep forgetting that (with quest v550) I can't do the 'attr' syntax with Dictionaries, and I spend tons of time trying to troubleshoot the error, not realizing that it's just an error due to using the 'attr' syntax, which doesn't work with Dictionary Attributes (in quest v550), until tons of wasted time later (trying to troubleshoot my code design, when it's just me in using the non-working 'attr' syntax with Dictionary Attributes), as I try to troubleshoot the non-recognized error and thus why my code isn't working, lol.</p>\n<p>Please post any quirky/strange/weird/irritating troubleshooting/Debugging issues, along with quest version, and (if/when able) their solutions (and label it as fixed for what version/s)</p>\n<p>(this is NOT for simple typos-mistakes, nor any faulty code logic/design, this is for various quest issues that effect everyone)</p>\n<hr>\n<ol>\n<li>(see below, quest v550)</li>\n</ol>\n<pre><code>// this syntax WORKS for Dictionary Attributes:\n\n&lt;NAME_OF_DICTIONARY_ATTRIBUTE type=\"NAME_OF_TYPE_OF_DICTIONARY_ATTRIBUTE\"&gt;\n  // CONTENT\n&lt;/NAME_OF_DICTIONARY_ATTRIBUTE&gt;\n\n// this syntax does NOT work for Dictionary Attributes:\n\n&lt;attr name=\"NAME_OF_DICTIONARY_ATTRIBUTE\" type=\"NAME_OF_TYPE_OF_DICTIONARY_ATTRIBUTE\"&gt;\n  // CONTENT\n&lt;/attr&gt;\n\n// I don't know if Pixie fixed this with the newer versions of quest (can someone let me know?)\n</code></pre>\n\n",
      "PostDate": "2017-10-17T11:10:09.5687131Z",
      "LastEditDate": "2017-10-17T11:51:49.9791822Z",
      "link": null
    },
    {
      "PostId": "9f42db03-0870-4182-847a-f9e5b528c46e",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "1. I was not aware of that. Another way to put that is that you cannot have a space in the attribute name if it is a dictionary or list, but you can for strings, numbers, scripts and objects.\r\n\r\n2. This is not an error, it is doing what it should. It evaulates both conditions, and then does the AND on them. Some languages support a feature called short-circuit evaluation which is what you want here, but not Quest.",
      "EditableFormat": "markdown",
      "HTML": "<ol>\n<li>\n<p>I was not aware of that. Another way to put that is that you cannot have a space in the attribute name if it is a dictionary or list, but you can for strings, numbers, scripts and objects.</p>\n</li>\n<li>\n<p>This is not an error, it is doing what it should. It evaulates both conditions, and then does the AND on them. Some languages support a feature called short-circuit evaluation which is what you want here, but not Quest.</p>\n</li>\n</ol>\n\n",
      "PostDate": "2017-10-17T11:53:29.6735671Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "692cc117-354f-4b10-9ebd-e6ced7189f90",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In some languages `if (\"1\" = 1) {` will automatically cast the second variable to the same type as the first, and be true. In others, comparing different types is always false. In Quest it's a fatal error, which I've only seen in strongly-typed languages.\r\n\r\nIf you only pass one argument to `IsRegexMatch`, it will give the error `Unexpected character: \"`. Error message completely unrelated to the actual error.\r\n\r\n> Some languages support a feature called short-circuit evaluation which is what you want here, but not Quest.\r\n\r\nTo be more precise, evaluation is short-circuited, but the expression is validated first.\r\nSo `if (function1(o) and function2(o)) {` will only execute function2 if the first one is true. But (I think) if the second condition references a function that doesn't exist, it will error out before executing either.",
      "EditableFormat": "markdown",
      "HTML": "<p>In some languages <code>if (\"1\" = 1) {</code> will automatically cast the second variable to the same type as the first, and be true. In others, comparing different types is always false. In Quest it's a fatal error, which I've only seen in strongly-typed languages.</p>\n<p>If you only pass one argument to <code>IsRegexMatch</code>, it will give the error <code>Unexpected character: \"</code>. Error message completely unrelated to the actual error.</p>\n<blockquote>\n<p>Some languages support a feature called short-circuit evaluation which is what you want here, but not Quest.</p>\n</blockquote>\n<p>To be more precise, evaluation is short-circuited, but the expression is validated first.<br>\nSo <code>if (function1(o) and function2(o)) {</code> will only execute function2 if the first one is true. But (I think) if the second condition references a function that doesn't exist, it will error out before executing either.</p>\n\n",
      "PostDate": "2017-10-17T12:57:16.4162345Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3f87040c-ed47-4692-8490-8f087691e25c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ Pixie and MrAngel:\r\n\r\nsince you saw my #2 before I edited it out:\r\n\r\nI actually got it to work fine, the problem was some (more/hidden: unknown initially) stupid mistake(s) on my part, and not what I thought was a quest issue\r\n\r\n```\r\n// this WORKS:\r\n// (pseudocode, more skeletal example, as I'm lazy, lol)\r\n\r\nmy_variable = split (\"red;blue;yellow\", \";\")\r\n\r\nif (TypeOf (my_variable) = \"string\" and DictionaryContains (DICT, my_variable)) {\r\n  // scripting\r\n} else if (TypeOf (my_variable) = \"stringlist\") {\r\n  // scripting\r\n} else {\r\n  // scripting\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>@ Pixie and MrAngel:</p>\n<p>since you saw my #2 before I edited it out:</p>\n<p>I actually got it to work fine, the problem was some (more/hidden: unknown initially) stupid mistake(s) on my part, and not what I thought was a quest issue</p>\n<pre><code>// this WORKS:\n// (pseudocode, more skeletal example, as I'm lazy, lol)\n\nmy_variable = split (\"red;blue;yellow\", \";\")\n\nif (TypeOf (my_variable) = \"string\" and DictionaryContains (DICT, my_variable)) {\n  // scripting\n} else if (TypeOf (my_variable) = \"stringlist\") {\n  // scripting\n} else {\n  // scripting\n}\n</code></pre>\n\n",
      "PostDate": "2017-10-17T14:37:05.8774615Z",
      "LastEditDate": "2017-10-17T14:43:50.9612556Z",
      "link": null
    },
    {
      "PostId": "55ab4e66-14de-4d31-aa98-bc0a9c419485",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> In some languages if (\"1\" = 1) { will automatically cast the second variable to the same type as the first, and be true. In others, comparing different types is always false. In Quest it's a fatal error, which I've only seen in strongly-typed languages.\r\n\r\nI consider that a bug, and it might get fixed one day. As a temporary fix, there is an `Equal` functions.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>In some languages if (\"1\" = 1) { will automatically cast the second variable to the same type as the first, and be true. In others, comparing different types is always false. In Quest it's a fatal error, which I've only seen in strongly-typed languages.</p>\n</blockquote>\n<p>I consider that a bug, and it might get fixed one day. As a temporary fix, there is an <code>Equal</code> functions.</p>\n\n",
      "PostDate": "2017-10-17T14:58:33.1419157Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "53bded48-5813-4702-8572-da5eb5466be9",
      "UserId": 327452,
      "Username": "drcosby",
      "AvatarUrl": "https://secure.gravatar.com/avatar/c9129075b3db6d83d11dbdf760a066ad?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Deleting Library did not remove it completely from my project\r\n\r\nI recently loaded the ClockLib.aslx library; and it had a bug or two so I deleted it from my project. However, I am now getting an \"Error running script: Object reference not set to an instance of an object.\" error every time I input any action. I know that the Clock library captures every action so that it can increment the time, but I cannot figure out how it did it or find the object/code that was affected. Can a deleted library leave remains of its code (maybe overridden functions) in the project?",
      "EditableFormat": "markdown",
      "HTML": "<p>Deleting Library did not remove it completely from my project</p>\n<p>I recently loaded the ClockLib.aslx library; and it had a bug or two so I deleted it from my project. However, I am now getting an \"Error running script: Object reference not set to an instance of an object.\" error every time I input any action. I know that the Clock library captures every action so that it can increment the time, but I cannot figure out how it did it or find the object/code that was affected. Can a deleted library leave remains of its code (maybe overridden functions) in the project?</p>\n\n",
      "PostDate": "2017-10-31T05:56:26.5099253Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2c289c2a-9164-4713-9bd6-b882cce2bef5",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\nDid you change ```game_clock.clockmsg ``` or anything like that?  (Just taking a stab in the dark.)\r\n\r\n---\r\nIf you post a sample of the code, we can do our best to find something for you.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p>Did you change <code>game_clock.clockmsg</code> or anything like that?  (Just taking a stab in the dark.)</p>\n<hr>\n<p>If you post a sample of the code, we can do our best to find something for you.</p>\n\n",
      "PostDate": "2017-10-31T06:32:10.1327566Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a2738f3a-492d-4713-8904-6634c74805aa",
      "UserId": 327452,
      "Username": "drcosby",
      "AvatarUrl": "https://secure.gravatar.com/avatar/c9129075b3db6d83d11dbdf760a066ad?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I didn't. Could the process of loading the ClockLib libary update other libraries' functions?",
      "EditableFormat": "markdown",
      "HTML": "<p>I didn't. Could the process of loading the ClockLib libary update other libraries' functions?</p>\n\n",
      "PostDate": "2017-11-01T02:14:43.5907289Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "17e11f37-4e58-4626-bda1-310cc83aec8b",
      "UserId": 327452,
      "Username": "drcosby",
      "AvatarUrl": "https://i.imgur.com/1KR2W4Bb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Never mind. I figured it out. It was unrelated to ClockLib. I had added a timer object right around the same time as I loaded the ClockLib, and the error was in the timer. Thanks for your quick response, and I apologize for any time you spent on this issue.",
      "EditableFormat": "markdown",
      "HTML": "<p>Never mind. I figured it out. It was unrelated to ClockLib. I had added a timer object right around the same time as I loaded the ClockLib, and the error was in the timer. Thanks for your quick response, and I apologize for any time you spent on this issue.</p>\n\n",
      "PostDate": "2017-11-01T04:00:36.3703908Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
