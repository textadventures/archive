{
  "Topic": {
    "TopicId": "xooqdpdopueq1h-izjru-g",
    "ForumId": "10",
    "Title": "How to require multiple objects",
    "LastUpdated": "2017-10-11T20:39:29.1203102Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "64e768ff-5163-4589-9fa2-ea2b991cdf8f",
      "UserId": 325320,
      "Username": "erinlogan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How do I make something require the player to have multiple objects? For example, you have to turn on the object remote but in order to turn it on, the player must have picked up all 3 batteries?",
      "EditableFormat": "markdown",
      "HTML": "<p>How do I make something require the player to have multiple objects? For example, you have to turn on the object remote but in order to turn it on, the player must have picked up all 3 batteries?</p>\n\n",
      "PostDate": "2017-10-11T20:39:29.1203102Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "432d0ef6-6514-4e4a-85e8-a70574451864",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It depends on how those objects are set up.\r\n\r\nIf there's only 3 batteries in the game, then you could have something like\r\n`if (Got(battery 1) and Got(battery 2) and Got(battery 3)) {`\r\nin your code.\r\n\r\nIf there's more than 3 batteries and you need at least three of them, it becomes a bit more complicated. I can go into that if the above solution doesn't work for you.",
      "EditableFormat": "markdown",
      "HTML": "<p>It depends on how those objects are set up.</p>\n<p>If there's only 3 batteries in the game, then you could have something like<br>\n<code>if (Got(battery 1) and Got(battery 2) and Got(battery 3)) {</code><br>\nin your code.</p>\n<p>If there's more than 3 batteries and you need at least three of them, it becomes a bit more complicated. I can go into that if the above solution doesn't work for you.</p>\n\n",
      "PostDate": "2017-10-11T21:16:16.5698718Z",
      "LastEditDate": "2017-10-12T08:18:26.3297386Z",
      "link": null
    },
    {
      "PostId": "e403d0dc-6cce-439e-a497-63fab68f6f2d",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "just a small correction to mrangel's code:\r\n\r\nthe 'Got' Function/Script checks if the Object is contained within the 'player' Object\r\n\r\n(so, you'll have to be able to 'take' each battery object, and have all 3 of them in your: inventory === contained within your 'player' Player Object, at the same time, for it to do the scripting)\r\n\r\n(there is no 'Has' Function/Script, unless this is something Pixie added into a quest update)\r\n\r\n```\r\nif (Got (battery 1) and Got (battery 2) and Got (battery 3)) {\r\n  // scripting\r\n}\r\n```\r\n\r\n---------------------------\r\n\r\nyour choices of methods/designs, depend upon your game design setup, but mrangel is showing the simplest method/design for the simplest game design setup\r\n\r\nif you want/have a more complex game design and/or want a more complex method/design, then let us know.",
      "EditableFormat": "markdown",
      "HTML": "<p>just a small correction to mrangel's code:</p>\n<p>the 'Got' Function/Script checks if the Object is contained within the 'player' Object</p>\n<p>(so, you'll have to be able to 'take' each battery object, and have all 3 of them in your: inventory === contained within your 'player' Player Object, at the same time, for it to do the scripting)</p>\n<p>(there is no 'Has' Function/Script, unless this is something Pixie added into a quest update)</p>\n<pre><code>if (Got (battery 1) and Got (battery 2) and Got (battery 3)) {\n  // scripting\n}\n</code></pre>\n<hr>\n<p>your choices of methods/designs, depend upon your game design setup, but mrangel is showing the simplest method/design for the simplest game design setup</p>\n<p>if you want/have a more complex game design and/or want a more complex method/design, then let us know.</p>\n\n",
      "PostDate": "2017-10-12T00:56:23.2324309Z",
      "LastEditDate": "2017-10-12T01:01:39.4301761Z",
      "link": null
    },
    {
      "PostId": "57e4b607-6561-4ee3-8c7b-2bc1451abbe6",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The complication would arise if you had more than 3 batteries. eg:\r\n```\r\nif (Got(battery 1) and Got(battery 3) and Got(battery 4)) or (Got(battery 1) and Got(battery 2) and Got(battery 5)) or (Got(battery 4) and ...\r\n```\r\nYou get the idea.\r\nA simpler solution would be to have an attribute on the battery, so that when you picked the battery up, it added one(1) to the battery count. All you would then do is check for that:\r\n```\r\nIf battery.count=3 then ...\r\n```\r\nSorry about the code writing on the fly",
      "EditableFormat": "markdown",
      "HTML": "<p>The complication would arise if you had more than 3 batteries. eg:</p>\n<pre><code>if (Got(battery 1) and Got(battery 3) and Got(battery 4)) or (Got(battery 1) and Got(battery 2) and Got(battery 5)) or (Got(battery 4) and ...\n</code></pre>\n<p>You get the idea.<br>\nA simpler solution would be to have an attribute on the battery, so that when you picked the battery up, it added one(1) to the battery count. All you would then do is check for that:</p>\n<pre><code>If battery.count=3 then ...\n</code></pre>\n<p>Sorry about the code writing on the fly</p>\n\n",
      "PostDate": "2017-10-12T00:57:39.4974882Z",
      "LastEditDate": "2017-10-12T01:03:55.8390183Z",
      "link": null
    },
    {
      "PostId": "5b8e492f-6638-428b-b7fa-1507cf903a70",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Using a variable to count how many items you have is one way to do it :)\r\n\r\nI'd probably give the batteries an attribute \"item_type\" and set it to \"battery\". Then to check how many the player has:\r\n```\r\nbatteries_found = FilterByAttribute(ScopeInventory(), \"item_type\", \"battery\")\r\nif (ListCount(batteries_found) < 3) {\r\n  msg (\"You try to turn it on, but you don't have enough batteries.\")\r\n}\r\nelse {\r\n  // code to turn it on goes here\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Using a variable to count how many items you have is one way to do it :)</p>\n<p>I'd probably give the batteries an attribute \"item_type\" and set it to \"battery\". Then to check how many the player has:</p>\n<pre><code>batteries_found = FilterByAttribute(ScopeInventory(), \"item_type\", \"battery\")\nif (ListCount(batteries_found) &lt; 3) {\n  msg (\"You try to turn it on, but you don't have enough batteries.\")\n}\nelse {\n  // code to turn it on goes here\n}\n</code></pre>\n\n",
      "PostDate": "2017-10-12T08:27:10.3323064Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
