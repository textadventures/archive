{
  "Topic": {
    "TopicId": "adupwc_plesslkxkrotnfa",
    "ForumId": "18",
    "Title": "(Revised) Lightning effect",
    "LastUpdated": "2016-12-24T18:47:42.3196241Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "a5377343-0034-4c27-8dab-7cb8f9403cc5",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**Credit for the JavaScript goes to The Pixie (Thank you)**\r\n\r\n_NB: I suspect this will only be practical for those NOT using the default panes such as compass, etc, because of the custom width._\r\n\r\n• Set your game's background to black (or very dark colour)\r\n• Use a custom width of 1300, and left / right margins of 300\r\n• In your game code add the following JavaScript just before your ```</game>``` tag:\r\n```\r\n<js><![CDATA[\r\n    <script>\r\n      events = [0];\r\n      onColour = 'black';\r\n      offColour = 'white';\r\n      state = false;\r\n      startTime = 0;\r\n      active = null;\r\n      \r\n      function setTimer(col, s) {\r\n        if (active) return;\r\n        \r\n        offColour = $('#gameBorder').css('background-color');\r\n        events = [0];\r\n        onColour = col;\r\n        d = new Date();\r\n        startTime = d.getTime();\r\n        active = setInterval(myTimer, 10);\r\n        ary = s.split(';');\r\n        count = 0;\r\n        for (i = 0; i < ary.length; i++) {\r\n          count += parseInt(ary[i]);\r\n          events.push(count);\r\n        }\r\n        counter = events.length;\r\n      }\r\n\r\n      function myTimer() {\r\n        timeNow = new Date();\r\n        lapsed = timeNow.getTime() - startTime;\r\n        for (var i = 0; i < events.length; i++) { \r\n          if (events[i] < lapsed) {\r\n            if (state) {\r\n              $('#gameBorder').css('background-color', offColour);\r\n            } else {\r\n              $('#gameBorder').css('background-color', onColour);\r\n            }\r\n            state = !state;\r\n            events[i] = 9999999999;\r\n            counter--;\r\n          }\r\n        }\r\n        if (counter < 1) {\r\n          clearInterval(active);\r\n          active = null;\r\n        }\r\n      }\r\n    </script>\r\n    ]]></js>\r\n```\r\n• In your game's start script add:\r\n```\r\nJS.addText (game.js)\r\nJS.eval (\"$('#gamePanesRunning').css('background-color', 'transparent');\")\r\nJS.eval (\"$('#gamePanes').css('background-color', 'transparent');\")\r\n```\r\nAnd finally, where ever you want the lightning to trigger, use this script:\r\n```\r\nJS.eval (\"setTimer('white', '50;20;50');\")\r\n```\r\nThe values in the last script set the number of flashes and duration of each. You may add as many 'flashes' as you like and vary the duration by using a higher/lower value. You must ensure there are an odd number of flashes in, other wise the sequence will finish on white.",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>Credit for the JavaScript goes to The Pixie (Thank you)</strong></p>\n<p><em>NB: I suspect this will only be practical for those NOT using the default panes such as compass, etc, because of the custom width.</em></p>\n<ul>\n<li>Set your game's background to black (or very dark colour)</li>\n<li>Use a custom width of 1300, and left / right margins of 300</li>\n<li>In your game code add the following JavaScript just before your <code>&lt;/game&gt;</code> tag:</li>\n</ul>\n<pre><code>&lt;js&gt;&lt;![CDATA[\n    &lt;script&gt;\n      events = [0];\n      onColour = 'black';\n      offColour = 'white';\n      state = false;\n      startTime = 0;\n      active = null;\n      \n      function setTimer(col, s) {\n        if (active) return;\n        \n        offColour = $('#gameBorder').css('background-color');\n        events = [0];\n        onColour = col;\n        d = new Date();\n        startTime = d.getTime();\n        active = setInterval(myTimer, 10);\n        ary = s.split(';');\n        count = 0;\n        for (i = 0; i &lt; ary.length; i++) {\n          count += parseInt(ary[i]);\n          events.push(count);\n        }\n        counter = events.length;\n      }\n\n      function myTimer() {\n        timeNow = new Date();\n        lapsed = timeNow.getTime() - startTime;\n        for (var i = 0; i &lt; events.length; i++) { \n          if (events[i] &lt; lapsed) {\n            if (state) {\n              $('#gameBorder').css('background-color', offColour);\n            } else {\n              $('#gameBorder').css('background-color', onColour);\n            }\n            state = !state;\n            events[i] = 9999999999;\n            counter--;\n          }\n        }\n        if (counter &lt; 1) {\n          clearInterval(active);\n          active = null;\n        }\n      }\n    &lt;/script&gt;\n    ]]&gt;&lt;/js&gt;\n</code></pre>\n<ul>\n<li>In your game's start script add:</li>\n</ul>\n<pre><code>JS.addText (game.js)\nJS.eval (\"$('#gamePanesRunning').css('background-color', 'transparent');\")\nJS.eval (\"$('#gamePanes').css('background-color', 'transparent');\")\n</code></pre>\n<p>And finally, where ever you want the lightning to trigger, use this script:</p>\n<pre><code>JS.eval (\"setTimer('white', '50;20;50');\")\n</code></pre>\n<p>The values in the last script set the number of flashes and duration of each. You may add as many 'flashes' as you like and vary the duration by using a higher/lower value. You must ensure there are an odd number of flashes in, other wise the sequence will finish on white.</p>\n\n",
      "PostDate": "2016-12-24T18:47:42.3196241Z",
      "LastEditDate": "2016-12-24T18:50:51.4716687Z"
    }
  ]
}
