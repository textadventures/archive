{
  "Topic": {
    "TopicId": "cbqdk1cjk0evyjqptdweqw",
    "ForumId": "10",
    "Title": "Gamebook- Back to previous page",
    "LastUpdated": "2017-06-17T23:07:15.9347485Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "0ab33564-9ae1-4e9d-9bf0-3845278631bf",
      "UserId": 310984,
      "Username": "brenden.winger",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6cf701b9f546a2c94028bd14a2e89bc0?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is there a simple way you guys know of to go back to previously used page using Gamebook?",
      "EditableFormat": "markdown",
      "HTML": "<p>Is there a simple way you guys know of to go back to previously used page using Gamebook?</p>\n\n",
      "PostDate": "2017-06-17T23:07:15.9347485Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b6992c18-1c5d-44d6-be2c-a8843a3a9a95",
      "UserId": 185415,
      "Username": "major powers",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5a2fab185e3766767ad57fd12f0b369a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Simple answer: just make a manual link to the last page you were on.  :)\r\n\r\nBut if you want something more complex, like you want pages that can be visited from **multiple pages** throughout the story, but will always go back to the last page you were on,  HegemonKing (sp?) wrote it out for me a year or two ago, and it helped immensely.\r\n\r\nFor me, I use this so the player can check a character sheet (and any other number of things) from any page I give them the option, and then go back to the previously visited page with no hiccups.\r\n\r\nHere you go (Step 1):\r\n\r\nOn the \"game\" page, in the \"script\" tab, put this into the GUI code view (not the overarching code view, but just the code view for the page):\r\n```\r\nplayer.previous_page = player.current_page\r\nplayer.current_page = player.parent\r\nif (player.current_page = Character Sheet) {\r\n  player.parent.options = NewStringDictionary()\r\n  dictionary add (player.parent.options, player.previous_page.name, \"CONTINUE\")\r\n}\r\n```\r\nNotice in the code above the words **Character Sheet** and **\"CONTINUE\"** (in quotes).  Those can be whatever you want.   For me, I have a page named **Character Sheet**, and whenever I give the option to visit that page and the player goes there, at the bottom of that page it says **CONTINUE**, and when you press it, it automatically goes back to whatever page you were last on.  You can use this for anything, really.\r\n\r\nThen, (Step 2):\r\n\r\nOn the **Character Sheet** page (again, name it whatever you want) just put this code in somewhere in codeview:\r\n```\r\nplayer.current_page = player.parent\r\n```\r\nAnd that's literally it.  That code interacts with the code on the \"game\" page and tells it to do all the magical code things.\r\nAsk me if you have more questions if you're not familiar with the GUI and I can give you step by step instructions.",
      "EditableFormat": "markdown",
      "HTML": "<p>Simple answer: just make a manual link to the last page you were on.  :)</p>\n<p>But if you want something more complex, like you want pages that can be visited from <strong>multiple pages</strong> throughout the story, but will always go back to the last page you were on,  HegemonKing (sp?) wrote it out for me a year or two ago, and it helped immensely.</p>\n<p>For me, I use this so the player can check a character sheet (and any other number of things) from any page I give them the option, and then go back to the previously visited page with no hiccups.</p>\n<p>Here you go (Step 1):</p>\n<p>On the \"game\" page, in the \"script\" tab, put this into the GUI code view (not the overarching code view, but just the code view for the page):</p>\n<pre><code>player.previous_page = player.current_page\nplayer.current_page = player.parent\nif (player.current_page = Character Sheet) {\n  player.parent.options = NewStringDictionary()\n  dictionary add (player.parent.options, player.previous_page.name, \"CONTINUE\")\n}\n</code></pre>\n<p>Notice in the code above the words <strong>Character Sheet</strong> and <strong>\"CONTINUE\"</strong> (in quotes).  Those can be whatever you want.   For me, I have a page named <strong>Character Sheet</strong>, and whenever I give the option to visit that page and the player goes there, at the bottom of that page it says <strong>CONTINUE</strong>, and when you press it, it automatically goes back to whatever page you were last on.  You can use this for anything, really.</p>\n<p>Then, (Step 2):</p>\n<p>On the <strong>Character Sheet</strong> page (again, name it whatever you want) just put this code in somewhere in codeview:</p>\n<pre><code>player.current_page = player.parent\n</code></pre>\n<p>And that's literally it.  That code interacts with the code on the \"game\" page and tells it to do all the magical code things.<br>\nAsk me if you have more questions if you're not familiar with the GUI and I can give you step by step instructions.</p>\n\n",
      "PostDate": "2017-06-17T23:37:50.3095967Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "25a6f775-b812-40e6-8d65-e534253b800f",
      "UserId": 310984,
      "Username": "brenden.winger",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6cf701b9f546a2c94028bd14a2e89bc0?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks a lot, I'll try that = )\r\nIn a similar way, is there a simple way to have it reset/refresh the page?\r\nI tried a link to the same page you're on,  but apparently it doesn't like that..",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks a lot, I'll try that = )<br>\nIn a similar way, is there a simple way to have it reset/refresh the page?<br>\nI tried a link to the same page you're on,  but apparently it doesn't like that..</p>\n\n",
      "PostDate": "2017-06-17T23:52:51.5060445Z",
      "LastEditDate": "2017-06-17T23:58:25.4424552Z",
      "link": null
    },
    {
      "PostId": "890072d4-e188-4d3e-82a7-a4598679861a",
      "UserId": 185415,
      "Username": "major powers",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5a2fab185e3766767ad57fd12f0b369a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**That's actually a question I have!**  The Gamebook mode doesn't like you just \"refreshing\" a page it seems.  So I've been making alternate versions of pages that just bounce back and forth to each other (if it's like combat or a gambling game or what have you, and you are changing counters and flags and shit).",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>That's actually a question I have!</strong>  The Gamebook mode doesn't like you just \"refreshing\" a page it seems.  So I've been making alternate versions of pages that just bounce back and forth to each other (if it's like combat or a gambling game or what have you, and you are changing counters and flags and shit).</p>\n\n",
      "PostDate": "2017-06-18T00:02:48.9603625Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "735374c4-0641-420c-bec6-5e28faf3a317",
      "UserId": 310984,
      "Username": "brenden.winger",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6cf701b9f546a2c94028bd14a2e89bc0?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Nice to know that someone else is trying to figure this out xD\r\nHey that code worked great for a sort of Pause Menu.\r\nAre you primarily making a game using Gamebook?\r\nIt seems like most people on here prefer the Text Adventures because of the coding\r\n(edit: never mind answering here, I sent a message instead)",
      "EditableFormat": "markdown",
      "HTML": "<p>Nice to know that someone else is trying to figure this out xD<br>\nHey that code worked great for a sort of Pause Menu.<br>\nAre you primarily making a game using Gamebook?<br>\nIt seems like most people on here prefer the Text Adventures because of the coding<br>\n(edit: never mind answering here, I sent a message instead)</p>\n\n",
      "PostDate": "2017-06-18T00:17:26.7610965Z",
      "LastEditDate": "2017-06-18T00:21:42.790449Z",
      "link": null
    },
    {
      "PostId": "7858d07f-4cde-4dc5-b7cf-c5c298b469fd",
      "UserId": 185415,
      "Username": "major powers",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5a2fab185e3766767ad57fd12f0b369a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I never thought about it as a pause menu, that's a genius idea!\r\n\r\nI tried to open your message but the forums aren't letting me right now, it's returning an error.\r\n\r\nI've been trying to make an open world RPG game book for awhile now (you have stats and go everywhere and come back places and meet a bunch of people and have random encounters, but it's all Gamebooky, like, you're just clicking links and shit).  And while I know I should just learn the text adventure version and make it \"look\" like a gamebook, there's something about the UI that just feels more sane to me.  I sort of like working out against the boundaries, as opposed to feeling like I have limitless options and not know how to use any of them.  I recommend Gamebook for that reason for anyone working from the ground up and interested in learning how this crap works from a REALLY simple framework.\r\n\r\nI also responded to your \"if result add pagelink\" thread, check it out.  You're right, it doesn't work.  But MovePlayer works!",
      "EditableFormat": "markdown",
      "HTML": "<p>I never thought about it as a pause menu, that's a genius idea!</p>\n<p>I tried to open your message but the forums aren't letting me right now, it's returning an error.</p>\n<p>I've been trying to make an open world RPG game book for awhile now (you have stats and go everywhere and come back places and meet a bunch of people and have random encounters, but it's all Gamebooky, like, you're just clicking links and shit).  And while I know I should just learn the text adventure version and make it \"look\" like a gamebook, there's something about the UI that just feels more sane to me.  I sort of like working out against the boundaries, as opposed to feeling like I have limitless options and not know how to use any of them.  I recommend Gamebook for that reason for anyone working from the ground up and interested in learning how this crap works from a REALLY simple framework.</p>\n<p>I also responded to your \"if result add pagelink\" thread, check it out.  You're right, it doesn't work.  But MovePlayer works!</p>\n\n",
      "PostDate": "2017-06-18T00:38:05.6691806Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f60e6edc-6ca5-4249-91ee-f9a773b0ef6a",
      "UserId": 310984,
      "Username": "brenden.winger",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6cf701b9f546a2c94028bd14a2e89bc0?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh okay, that's weird about the message thingy.\r\nIf you want you can email brenden.winger@yahoo.com  \r\nor brenden_winger to type on skype\r\nI actually have the exact same mindset about building the game on here.\r\nI figured out a way where I can essentially allow changes in game based on the HasSeenPage mabob\r\nIf I can just sort out a couple other little things I should be able to to do nearly everything I want with an adventure/ puzzle story\r\n\r\n\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh okay, that's weird about the message thingy.<br>\nIf you want you can email brenden.winger@yahoo.com<br>\nor brenden_winger to type on skype<br>\nI actually have the exact same mindset about building the game on here.<br>\nI figured out a way where I can essentially allow changes in game based on the HasSeenPage mabob<br>\nIf I can just sort out a couple other little things I should be able to to do nearly everything I want with an adventure/ puzzle story</p>\n\n",
      "PostDate": "2017-06-18T00:49:08.9427589Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "538a170a-d469-4afb-aa5f-f7bffb0a01c2",
      "UserId": 185415,
      "Username": "major powers",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5a2fab185e3766767ad57fd12f0b369a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes!  Turning on/off flags makes it even **more easy**, along with HasSeenPage/HasNotSeenPage, and all kinds of shit with Counters.  You can make a SUPER robust game world in Gamebook mode, but it doesn't come without its pitfalls, of course.\r\n\r\nLet's stay in contact!  I'm nickpowers@live.com.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes!  Turning on/off flags makes it even <strong>more easy</strong>, along with HasSeenPage/HasNotSeenPage, and all kinds of shit with Counters.  You can make a SUPER robust game world in Gamebook mode, but it doesn't come without its pitfalls, of course.</p>\n<p>Let's stay in contact!  I'm nickpowers@live.com.</p>\n\n",
      "PostDate": "2017-06-18T00:55:46.376741Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8d29b750-bdf6-4e02-9bdb-ec5440d3789f",
      "UserId": 310984,
      "Username": "brenden.winger",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6cf701b9f546a2c94028bd14a2e89bc0?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hmm...I haven't gotten into Flag World yet. Maybe that'll solve some o' my issues.\r\n\r\n(Cool beans---I sent an email and a message request on skype)",
      "EditableFormat": "markdown",
      "HTML": "<p>Hmm...I haven't gotten into Flag World yet. Maybe that'll solve some o' my issues.</p>\n<p>(Cool beans---I sent an email and a message request on skype)</p>\n\n",
      "PostDate": "2017-06-18T01:10:35.1266301Z",
      "LastEditDate": "2017-06-18T01:12:06.7128983Z",
      "link": null
    },
    {
      "PostId": "b0731461-80a5-4ebd-9b7f-f2e88a5bcbc8",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "as Major Powers already said/helped in his posts:\r\n\r\nthe trick is to have two Attributes (in addition to using a 3rd Attribute: the built-in 'player.parent' Attribute), one for storing the 'old location(s)' and one to store the current location, as you got to 'music chairs' update your old location Attribute with the room you were currently in, when you move to a new room, for example of the logic (only storing the single and directly previous location for this example):\r\n\r\n// initial states:\r\nplayer.parent = room\r\nplayer.old_room = room\r\nplayer.current_room = room\r\n\r\nupon(after) moving to a new room (room to room2):\r\n\r\nplayer.parent = room2\r\nplayer.old_room = player.current_room // player.old_room = player.current_room = room\r\n// then we update the 'current_room' to the new current room we're now in:\r\nplayer.current_room = player.parent // player.current_room = player.parent = room2\r\n\r\nupon(after) moving to a new room (room2 to room3):\r\n\r\nplayer.parent = room3\r\nplayer.old_room = player.current_room // player.old_room = player.current_room = room2\r\n// then we update the 'current_room' to the new current room we're now in:\r\nplayer.current_room = player.parent // player.current_room = player.parent = room3\r\n\r\nupon(after) moving to a new room (room3 to room4):\r\n\r\nplayer.parent = room4\r\nplayer.old_room = player.current_room // player.old_room = player.current_room = room3\r\n// then we update the 'current_room' to the new current room we're now in:\r\nplayer.current_room = player.parent // player.current_room = player.parent = room4\r\n\r\nupon(after) moving to a new room (room4 to room5):\r\n\r\nplayer.parent = room5\r\nplayer.old_room = player.current_room // player.old_room = player.current_room = room4\r\n// then we update the 'current_room' to the new current room we're now in:\r\nplayer.current_room = player.parent // player.current_room = player.parent = room5\r\n\r\n// going backwards now to 'room' from 'room5':\r\n\r\n// initial states:\r\nplayer.parent = room5\r\nplayer.old_room = room4\r\nplayer.current_room = room5\r\n\r\nupon(after) moving to a new room (room5 to room4):\r\n\r\nplayer.parent = room4\r\nplayer.old_room = player.current_room // player.old_room = player.current_room = room5\r\n// then we update the 'current_room' to the new current room we're now in:\r\nplayer.current_room = player.parent // player.current_room = player.parent = room4\r\n\r\nupon(after) moving to a new room (room4 to room3):\r\n\r\nplayer.parent = room3\r\nplayer.old_room = player.current_room // player.old_room = player.current_room = room4\r\n// then we update the 'current_room' to the new current room we're now in:\r\nplayer.current_room = player.parent // player.current_room = player.parent = room3\r\n\r\nupon(after) moving to a new room (room3 to room2):\r\n\r\nplayer.parent = room2\r\nplayer.old_room = player.current_room // player.old_room = player.current_room = room3\r\n// then we update the 'current_room' to the new current room we're now in:\r\nplayer.current_room = player.parent // player.current_room = player.parent = room2\r\n\r\nupon(after) moving to a new room (room2 to room):\r\n\r\nplayer.parent = room\r\nplayer.old_room = player.current_room // player.old_room = player.current_room = room2\r\n// then we update the 'current_room' to the new current room we're now in:\r\nplayer.current_room = player.parent // player.current_room = player.parent = room\r\n\r\n// jumping/moving all over the place:\r\n\r\n// initial states:\r\nplayer.parent = room\r\nplayer.old_room = room\r\nplayer.current_room = room\r\n\r\nupon(after) moving to a new room (room to room5):\r\n\r\nplayer.parent = room5\r\nplayer.old_room = player.current_room // player.old_room = player.current_room = room\r\n// then we update the 'current_room' to the new current room we're now in:\r\nplayer.current_room = player.parent // player.current_room = player.parent = room5\r\n\r\nupon(after) moving to a new room (room5 to room2):\r\n\r\nplayer.parent = room2\r\nplayer.old_room = player.current_room // player.old_room = player.current_room = room5\r\n// then we update the 'current_room' to the new current room we're now in:\r\nplayer.current_room = player.parent // player.current_room = player.parent = room2\r\n\r\nupon(after) moving to a new room (room2 to room4):\r\n\r\nplayer.parent = room4\r\nplayer.old_room = player.current_room // player.old_room = player.current_room = room2\r\n// then we update the 'current_room' to the new current room we're now in:\r\nplayer.current_room = player.parent // player.current_room = player.parent = room4\r\n\r\nupon(after) moving to a new room (room4 to room):\r\n\r\nplayer.parent = room\r\nplayer.old_room = player.current_room // player.old_room = player.current_room = room4\r\n// then we update the 'current_room' to the new current room we're now in:\r\nplayer.current_room = player.parent // player.current_room = player.parent = room\r\n\r\n--------------\r\n\r\ndo you see how the 'musical chairs' of transfering/passing-along of updating between using the 'old_room' and 'current_room' Attributes are working?\r\n\r\nno matter where you move from where-ever to where-ever, the logic works, by having two Attributes ('old_room' and 'current_room') and a 3rd Attribute (the built-in 'player.parent' Attribute), and by first storing the 'current_room' Attribute's Value into the 'old_room' Attribute, and then you store the current room Value (via using 'player.parent') into the 'current_room' Attribute.",
      "EditableFormat": "markdown",
      "HTML": "<p>as Major Powers already said/helped in his posts:</p>\n<p>the trick is to have two Attributes (in addition to using a 3rd Attribute: the built-in 'player.parent' Attribute), one for storing the 'old location(s)' and one to store the current location, as you got to 'music chairs' update your old location Attribute with the room you were currently in, when you move to a new room, for example of the logic (only storing the single and directly previous location for this example):</p>\n<p>// initial states:<br>\nplayer.parent = room<br>\nplayer.old_room = room<br>\nplayer.current_room = room</p>\n<p>upon(after) moving to a new room (room to room2):</p>\n<p>player.parent = room2<br>\nplayer.old_room = player.current_room // player.old_room = player.current_room = room<br>\n// then we update the 'current_room' to the new current room we're now in:<br>\nplayer.current_room = player.parent // player.current_room = player.parent = room2</p>\n<p>upon(after) moving to a new room (room2 to room3):</p>\n<p>player.parent = room3<br>\nplayer.old_room = player.current_room // player.old_room = player.current_room = room2<br>\n// then we update the 'current_room' to the new current room we're now in:<br>\nplayer.current_room = player.parent // player.current_room = player.parent = room3</p>\n<p>upon(after) moving to a new room (room3 to room4):</p>\n<p>player.parent = room4<br>\nplayer.old_room = player.current_room // player.old_room = player.current_room = room3<br>\n// then we update the 'current_room' to the new current room we're now in:<br>\nplayer.current_room = player.parent // player.current_room = player.parent = room4</p>\n<p>upon(after) moving to a new room (room4 to room5):</p>\n<p>player.parent = room5<br>\nplayer.old_room = player.current_room // player.old_room = player.current_room = room4<br>\n// then we update the 'current_room' to the new current room we're now in:<br>\nplayer.current_room = player.parent // player.current_room = player.parent = room5</p>\n<p>// going backwards now to 'room' from 'room5':</p>\n<p>// initial states:<br>\nplayer.parent = room5<br>\nplayer.old_room = room4<br>\nplayer.current_room = room5</p>\n<p>upon(after) moving to a new room (room5 to room4):</p>\n<p>player.parent = room4<br>\nplayer.old_room = player.current_room // player.old_room = player.current_room = room5<br>\n// then we update the 'current_room' to the new current room we're now in:<br>\nplayer.current_room = player.parent // player.current_room = player.parent = room4</p>\n<p>upon(after) moving to a new room (room4 to room3):</p>\n<p>player.parent = room3<br>\nplayer.old_room = player.current_room // player.old_room = player.current_room = room4<br>\n// then we update the 'current_room' to the new current room we're now in:<br>\nplayer.current_room = player.parent // player.current_room = player.parent = room3</p>\n<p>upon(after) moving to a new room (room3 to room2):</p>\n<p>player.parent = room2<br>\nplayer.old_room = player.current_room // player.old_room = player.current_room = room3<br>\n// then we update the 'current_room' to the new current room we're now in:<br>\nplayer.current_room = player.parent // player.current_room = player.parent = room2</p>\n<p>upon(after) moving to a new room (room2 to room):</p>\n<p>player.parent = room<br>\nplayer.old_room = player.current_room // player.old_room = player.current_room = room2<br>\n// then we update the 'current_room' to the new current room we're now in:<br>\nplayer.current_room = player.parent // player.current_room = player.parent = room</p>\n<p>// jumping/moving all over the place:</p>\n<p>// initial states:<br>\nplayer.parent = room<br>\nplayer.old_room = room<br>\nplayer.current_room = room</p>\n<p>upon(after) moving to a new room (room to room5):</p>\n<p>player.parent = room5<br>\nplayer.old_room = player.current_room // player.old_room = player.current_room = room<br>\n// then we update the 'current_room' to the new current room we're now in:<br>\nplayer.current_room = player.parent // player.current_room = player.parent = room5</p>\n<p>upon(after) moving to a new room (room5 to room2):</p>\n<p>player.parent = room2<br>\nplayer.old_room = player.current_room // player.old_room = player.current_room = room5<br>\n// then we update the 'current_room' to the new current room we're now in:<br>\nplayer.current_room = player.parent // player.current_room = player.parent = room2</p>\n<p>upon(after) moving to a new room (room2 to room4):</p>\n<p>player.parent = room4<br>\nplayer.old_room = player.current_room // player.old_room = player.current_room = room2<br>\n// then we update the 'current_room' to the new current room we're now in:<br>\nplayer.current_room = player.parent // player.current_room = player.parent = room4</p>\n<p>upon(after) moving to a new room (room4 to room):</p>\n<p>player.parent = room<br>\nplayer.old_room = player.current_room // player.old_room = player.current_room = room4<br>\n// then we update the 'current_room' to the new current room we're now in:<br>\nplayer.current_room = player.parent // player.current_room = player.parent = room</p>\n<hr>\n<p>do you see how the 'musical chairs' of transfering/passing-along of updating between using the 'old_room' and 'current_room' Attributes are working?</p>\n<p>no matter where you move from where-ever to where-ever, the logic works, by having two Attributes ('old_room' and 'current_room') and a 3rd Attribute (the built-in 'player.parent' Attribute), and by first storing the 'current_room' Attribute's Value into the 'old_room' Attribute, and then you store the current room Value (via using 'player.parent') into the 'current_room' Attribute.</p>\n\n",
      "PostDate": "2017-06-18T01:17:24.3144679Z",
      "LastEditDate": "2017-06-18T01:29:27.2113983Z",
      "link": null
    },
    {
      "PostId": "9fea9144-4ebf-4e34-8f4a-b6b6cc42aafb",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "to refresh a page...\r\n\r\nif the Game Book has it, you can use the built-in 'ClearScreen' Function, and then re-run your page's scripts... though I'd have to look up what controls the activation/running/executing of a page's various scripts (such as the 'onenter' and 'onexit' Scripts, as well as the scripts you add to a page), maybe there's a single Function that does all of a page's scripts, otherwise, you got to re-run/re-call each of the various  Functions or whatever that controls each of the types of scripts individually for a page (ie, 'onenter', 'onexit', and your own added scripts)",
      "EditableFormat": "markdown",
      "HTML": "<p>to refresh a page...</p>\n<p>if the Game Book has it, you can use the built-in 'ClearScreen' Function, and then re-run your page's scripts... though I'd have to look up what controls the activation/running/executing of a page's various scripts (such as the 'onenter' and 'onexit' Scripts, as well as the scripts you add to a page), maybe there's a single Function that does all of a page's scripts, otherwise, you got to re-run/re-call each of the various  Functions or whatever that controls each of the types of scripts individually for a page (ie, 'onenter', 'onexit', and your own added scripts)</p>\n\n",
      "PostDate": "2017-06-18T01:34:41.5704639Z",
      "LastEditDate": "2017-06-18T01:35:22.6521283Z",
      "link": null
    },
    {
      "PostId": "07fbe33b-d14e-4220-a1db-3b75e65215d5",
      "UserId": 185415,
      "Username": "major powers",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5a2fab185e3766767ad57fd12f0b369a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "hegemonkhan!  I said HegemonKing, sorry.  \r\n\r\nGameBook has ClearScreen.  (but it just clears the text off the page and nothing else, as far a I can tell)\r\n\r\nThis is why I make alternating pages when counters/flags/etc. are changing.  You can't refresh a page if it reintroduces the conditions you already set.  If you keep refreshing a page that adds a gold to your coin purse, you just keep getting gold.  Alternating pages fixes that.\r\n\r\nIs there a \"IfYouJustReloadedThePage\" script?  :)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>hegemonkhan!  I said HegemonKing, sorry.</p>\n<p>GameBook has ClearScreen.  (but it just clears the text off the page and nothing else, as far a I can tell)</p>\n<p>This is why I make alternating pages when counters/flags/etc. are changing.  You can't refresh a page if it reintroduces the conditions you already set.  If you keep refreshing a page that adds a gold to your coin purse, you just keep getting gold.  Alternating pages fixes that.</p>\n<p>Is there a \"IfYouJustReloadedThePage\" script?  :)</p>\n\n",
      "PostDate": "2017-06-18T01:44:07.5274898Z",
      "LastEditDate": "2017-06-18T01:46:04.4118821Z",
      "link": null
    },
    {
      "PostId": "21ed090b-7789-4fd9-97f9-ee3fc6d5b678",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Boolean Attributes ('flags', but I don't like the use of 'flags' for Booleans, as all Attributes are 'flags/indicators' of Values/Data, as that's what Attributes are, they store Values/Data. The reason is because 'flags' are used for Booleans, is because Booleans/Binary are dualistic, 2 state Data Types, which are used as toggle:on/off controls in networking packets, with assembly language, and circuitry/digital-logic design. Dualism = 2 states = opposite states = Booleans: true/false. Binary: 1/0, electrical charges: +:pos/-:neg, conceptually: on/off, true = 1 = on = +:pos, false = 0 = off = -:neg, etc etc etc various 2 states / dualism: in/out, up/down, left/right, ugly/sexy, tall/short, fat/skinny, weak/string, good/evil, lazy/active, mean/nice, etc etc etc) are simple and thus nice to use, and can manage multiple states, but they can be quite cumbersome (and managing multiple states is a bit cumbersome too)... for example:\r\n\r\nthe  usage of (common) 'status effects' in RPGs:\r\n\r\nplayer.poisoned = false\r\nplayer.petrified = false\r\nplayer.paralyzed = false\r\nplayer.asleep = false\r\nplayer.dead = false\r\nplayer.unconscious = false\r\nplayer.stunned = false\r\nplayer.confused = false\r\nplayer.silenced = false\r\nplayer.blinded = false\r\netc etc etc\r\n(yuck! too many Attributes!)\r\n\r\nwhile this is simple to implement, if (player.poisoned) { msg (\"you are poisoned\") } else { msg (\"You're NOT poisoned\"), and easy to have multiple states at the same time (just change the desired Boolean Attributes from false to true and/or from true to false), it's quite cumbersome (you got a lot of Attributes to handle/manage/adjust)!\r\n\r\n-------\r\n\r\nusing String Attributes:\r\n\r\nplayer.condition = \"normal\" // or: \"poisoned\", \"petrified\", \"paralyzed\", etc etc etc\r\n\r\n(much better, much less Attributes!)\r\n\r\n```\r\nif (player.condition = \"poisoned\") {\r\n  msg (\"you're poisoned!\")\r\n} else if (player.condition = \"petrified\") {\r\n  msg (\"you're petrified!\")\r\n}\r\n// etc etc etc\r\n```\r\n\r\nnow, we only got a single Attribute to handle/manage/adjust, (and thus is very NOT cumbersome!), though we're stuck to having only a single state at a time (per String Attribute, anyways), when using String Attributes. And, using String Attributes (and thus having to use these string comparison operations is a bit more challenging to understand for those completely new to coding) is a bit more difficult than Boolean Attributes.\r\n\r\n--------------------\r\n\r\nList Attributes:\r\n\r\nplayer.condition_list = split (\"poisoned; petrified; paralyzed\", \";\") // we can have however many and which-ever conditions, this example is howing you with having 3 conditions: poisoned, petrified, and paralyzed\r\n\r\n```\r\nlist add (LIST, ITEM)\r\nlist remove (LIST, ITEM)\r\n\r\nand many more functions: ListContains (LIST, ITEM), ListCount (LIST), combining/joining, splitting/separating, excluding, including, sorting, etc\r\n```\r\n\r\nLists has the same characteristics as String Attributes, but you can have multiple states at a time (per List Attribute), however, this is the most complex to use, as you got to add/remove items from the list, and etc code work for doing various things and for their handling/management. But, if you know how to use Lists well, for large and/or complex games, they can save you a ton of work and be the most efficient/fast too. But, for very small and/or simple games, then they're more work than they're worth, and are less efficient and more slow than using Strings or Booleans.",
      "EditableFormat": "markdown",
      "HTML": "<p>Boolean Attributes ('flags', but I don't like the use of 'flags' for Booleans, as all Attributes are 'flags/indicators' of Values/Data, as that's what Attributes are, they store Values/Data. The reason is because 'flags' are used for Booleans, is because Booleans/Binary are dualistic, 2 state Data Types, which are used as toggle:on/off controls in networking packets, with assembly language, and circuitry/digital-logic design. Dualism = 2 states = opposite states = Booleans: true/false. Binary: 1/0, electrical charges: +:pos/-:neg, conceptually: on/off, true = 1 = on = +:pos, false = 0 = off = -:neg, etc etc etc various 2 states / dualism: in/out, up/down, left/right, ugly/sexy, tall/short, fat/skinny, weak/string, good/evil, lazy/active, mean/nice, etc etc etc) are simple and thus nice to use, and can manage multiple states, but they can be quite cumbersome (and managing multiple states is a bit cumbersome too)... for example:</p>\n<p>the  usage of (common) 'status effects' in RPGs:</p>\n<p>player.poisoned = false<br>\nplayer.petrified = false<br>\nplayer.paralyzed = false<br>\nplayer.asleep = false<br>\nplayer.dead = false<br>\nplayer.unconscious = false<br>\nplayer.stunned = false<br>\nplayer.confused = false<br>\nplayer.silenced = false<br>\nplayer.blinded = false<br>\netc etc etc<br>\n(yuck! too many Attributes!)</p>\n<p>while this is simple to implement, if (player.poisoned) { msg (\"you are poisoned\") } else { msg (\"You're NOT poisoned\"), and easy to have multiple states at the same time (just change the desired Boolean Attributes from false to true and/or from true to false), it's quite cumbersome (you got a lot of Attributes to handle/manage/adjust)!</p>\n<hr>\n<p>using String Attributes:</p>\n<p>player.condition = \"normal\" // or: \"poisoned\", \"petrified\", \"paralyzed\", etc etc etc</p>\n<p>(much better, much less Attributes!)</p>\n<pre><code>if (player.condition = \"poisoned\") {\n  msg (\"you're poisoned!\")\n} else if (player.condition = \"petrified\") {\n  msg (\"you're petrified!\")\n}\n// etc etc etc\n</code></pre>\n<p>now, we only got a single Attribute to handle/manage/adjust, (and thus is very NOT cumbersome!), though we're stuck to having only a single state at a time (per String Attribute, anyways), when using String Attributes. And, using String Attributes (and thus having to use these string comparison operations is a bit more challenging to understand for those completely new to coding) is a bit more difficult than Boolean Attributes.</p>\n<hr>\n<p>List Attributes:</p>\n<p>player.condition_list = split (\"poisoned; petrified; paralyzed\", \";\") // we can have however many and which-ever conditions, this example is howing you with having 3 conditions: poisoned, petrified, and paralyzed</p>\n<pre><code>list add (LIST, ITEM)\nlist remove (LIST, ITEM)\n\nand many more functions: ListContains (LIST, ITEM), ListCount (LIST), combining/joining, splitting/separating, excluding, including, sorting, etc\n</code></pre>\n<p>Lists has the same characteristics as String Attributes, but you can have multiple states at a time (per List Attribute), however, this is the most complex to use, as you got to add/remove items from the list, and etc code work for doing various things and for their handling/management. But, if you know how to use Lists well, for large and/or complex games, they can save you a ton of work and be the most efficient/fast too. But, for very small and/or simple games, then they're more work than they're worth, and are less efficient and more slow than using Strings or Booleans.</p>\n\n",
      "PostDate": "2017-06-18T02:27:09.5778678Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f1b2456f-25df-459e-ab6f-8712ab0d1e02",
      "UserId": 185415,
      "Username": "major powers",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5a2fab185e3766767ad57fd12f0b369a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok fuck this, I've been hiding it out of shame, but I'm about to code dump on you and ask you how to do it way better.  Pretend that the Counters for the **Player**, **Mulligan the Mischievous** and **Broth the Barbarian** are already set in this case; they have certain amounts of Silver.  I hand-coded this using my limited understanding of this bullshit.  Now remember, there is an \"Ante\" page that changes a counter, and an alternate page **that looks identical to this page below with the page links reversed** (beither of which I'm pasting below),  and I made a fully-working, VERY simple 33%-chance dice game.\r\n\r\nHow would you code this that would work in Gamebook mode, and make it WAY simpler?  Remember, has to work in Gamebook mode.   I'll paypal you 20 U.S. dollars if you do (by the way, there's some errant ```</b>```s in there that makes like the last  half of it all bolded and I'm not fixing that right now, but I have a working dice game of chance in one of my Inns right now, and I'm almost certain I can make this in 1,000 LESS lines of code but have no idea how:\r\n\r\n SetFlagOff (\"PlayerHeart\")\r\nSetFlagOff (\"PlayerSword\")\r\nSetFlagOff (\"PlayerShield\")\r\nSetFlagOff (\"MulliganHeart\")\r\nSetFlagOff (\"MulliganSword\")\r\nSetFlagOff (\"MulliganShield\")\r\nSetFlagOff (\"BrothHeart\")\r\nSetFlagOff (\"BrothSword\")\r\nSetFlagOff (\"BrothShield\")\r\nif (GetBoolean(game, \"DiceStart\")) {\r\n  ChangeCounter (\"Silver\", -1)\r\n  ChangeCounter (\"MulliganSilver\", -1)\r\n  ChangeCounter (\"BrothSilver\", -1)\r\n}\r\n// PLAYER ROLL\r\nmsg (\"<br/><b>You rolled:</b><br/>\")\r\nif (RandomChance(33)) {\r\n  picture (\"heart.jpg\")\r\n  SetFlagOn (\"PlayerHeart\")\r\n}\r\nelse {\r\n  if (RandomChance(50)) {\r\n    picture (\"sword.jpg\")\r\n    SetFlagOn (\"PlayerSword\")\r\n  }\r\n  else {\r\n    picture (\"shield.jpg\")\r\n    SetFlagOn (\"PlayerShield\")\r\n  }\r\n}\r\n// MULLIGAN ROLL\r\nmsg (\"<br/><b>Mulligan The Mischievous rolled:</b><br/>\")\r\nif (RandomChance(33)) {\r\n  picture (\"heart.jpg\")\r\n  SetFlagOn (\"MulliganHeart\")\r\n}\r\nelse {\r\n  if (RandomChance(50)) {\r\n    picture (\"sword.jpg\")\r\n    SetFlagOn (\"MulliganSword\")\r\n  }\r\n  else {\r\n    picture (\"shield.jpg\")\r\n    SetFlagOn (\"MulliganShield\")\r\n  }\r\n}\r\n// BROTH ROLL\r\nmsg (\"<br/><b>Broth The Barbarian rolled:</b><br/>\")\r\nif (RandomChance(33)) {\r\n  picture (\"heart.jpg\")\r\n  SetFlagOn (\"BrothHeart\")\r\n}\r\nelse {\r\n  if (RandomChance(50)) {\r\n    picture (\"sword.jpg\")\r\n    SetFlagOn (\"BrothSword\")\r\n  }\r\n  else {\r\n    picture (\"shield.jpg\")\r\n    SetFlagOn (\"BrothShield\")\r\n  }\r\n}\r\n// PLAYER WINS\r\nif (GetBoolean (game, \"PlayerHeart\") and (GetBoolean (game, \"MulliganSword\") or GetBoolean (game, \"MulliganShield\")) and (GetBoolean (game, \"BrothSword\") or GetBoolean (game, \"BrothShield\"))) {\r\n  msg (\"<br><br><b>YOU WIN {counter:DicePot} SILVER!</b>\")\r\n  msg (\"Mulligan: {random:\\\"Ya scurvy dog!\\\":\\\"Lucky roll.\\\":\\\"Nice one, kid.\\\":\\\"Let's roll again, shall we?\\\":\\\"You lout!\\\":\\\"I rolled my die wrong that time.\\\":\\\"Well played.\\\":\\\"Yer not done yet, are ya?\\\":\\\"I like this kid.\\\":\\\"Curse Pelor!\\\":\\\"May toads nibble yer toes.\\\":\\\"Seems yer the chosen one, this time.\\\"}\")\r\n  SetCounter (\"Silver\", game.Silver + game.DicePot)\r\n  msg (\"You now have <b>{counter:Silver}</b> silver.\")\r\n  if (GetInt(game, \"MulliganSilver\") < 1) {\r\n    msg (\"<br/><b>MULLIGAN IS OUT OF SILVER!</b><br/>Mulligan: \\\"Evil conspiring strumpets!  I am but a beggar now, out of coin and out of tricks.  I'll take my leave.  G'day to you both, toadies.\\\"<br/>Broth: \\\"Good game, Mulligan.\\\"<br/>Mulligan: \\\"No, it wasn't!\\\"<br/><br/>At that, Mulligan the Mischievous pushes his chair back from the table and limps out of the Old Soul.  It's only now that you notice his peg leg as the heavy oak door slams behind him.<br/><br/><b>THE GAME IS OVER FOR NOW.</b> <br/><i>You can return at a later time to see if other players join the table</i>.\")\r\n    AddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\\\"Thank you for the game.\\\" [Stand up from the table]</b>\")\r\n    RemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)\r\n    RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n    SetFlagOn (\"MulliganInTheWild\")\r\n  }\r\n  else if (GetInt(game, \"BrothSilver\") < 1) {\r\n    msg (\"<br/><b>BROTH IS OUT OF SILVER!</b><br/>Broth: \\\"Broth lose all silver.  Broth leave.  Broth sleep.\\\"<br/>Mulligan: \\\"Go find some more silver, you pack mule!\\\"<br/>Broth: \\\"Mulligan not nice.\\\"<br/>Mulligan: \\\"Broth not smart!\\\"<br/><br/>At that, the hulking barbarian strides out of the Old Soul.<br/><br/><b>THE GAME IS OVER FOR NOW.</b> <br/><i>You can return at a later time to see if other players join the table</i>.\")\r\n    AddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\\\"Thank you for the game.\\\" [Stand up from the table]</b>\")\r\n    RemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)\r\n    RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n    SetFlagOn (\"BrothInTheWild\")\r\n  }\r\n  else {\r\n    AddPageLink (OldSoulDiceRoll, OldSoulDiceAnte, \"<b>ANTE UP. [-1 Silver]</b>\")\r\n    AddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\\\"Thank you, gentlemen.\\\" [Stand up from the table]</b>\")\r\n    RemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)\r\n  }\r\n}\r\n// MULLIGAN WINS\r\nif (GetBoolean (game, \"MulliganHeart\") and (GetBoolean (game, \"PlayerSword\") or GetBoolean (game, \"PlayerShield\")) and (GetBoolean (game, \"BrothSword\") or GetBoolean (game, \"BrothShield\"))) {\r\n  msg (\"<br><br><b>MULLIGAN WINS {counter:DicePot} SILVER.</b>\")\r\n  msg (\"Mulligan: {random:\\\"Ha! I'll take that silver!\\\":\\\"I'm the humblest of winners.\\\":\\\"Ante up again, ya squirrels! Wanna play some more?\\\":\\\"My piles o' silver grow!\\\":\\\"Silver wise, gold foolish I am.\\\":\\\"I've been known to win.\\\"}\")\r\n  SetCounter (\"MulliganSilver\", game.MulliganSilver + game.DicePot)\r\n  msg (\"Mulligan now has <b>{counter:MulliganSilver}</b> silver.\")\r\n  if (GetInt(game, \"Silver\") < 1) {\r\n    msg (\"<br/><b>YOU ARE OUT OF SILVER.</b><br/>Mulligan: \\\"Come back and give us some more silver anytime!  Har har!\\\"<br/>Broth: \\\"Well fought battle.  See you again.\\\"\")\r\n    AddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\\\"Thank you for the game.\\\" [Stand up from the table]</b>\")\r\n    RemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)\r\n    RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n  }\r\n  else if (GetInt(game, \"BrothSilver\") < 1) {\r\n    msg (\"<br/><b>BROTH IS OUT OF SILVER!</b><br/>Broth: \\\"Broth lose all silver.  Broth leave.  Broth sleep.\\\"<br/>Mulligan: \\\"Go find some more silver, you pack mule!\\\"<br/>Broth: \\\"Mulligan not nice.\\\"<br/>Mulligan: \\\"Broth not smart!\\\"<br/><br/>At that, the hulking barbarian strides out of the Old Soul.<br/><br/><b>THE GAME IS OVER FOR NOW.</b> <br/><i>You can return at a later time to see if other players join the table</i>.\")\r\n    AddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\\\"Thank you for the game.\\\" [Stand up from the table]</b>\")\r\n    RemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)\r\n    RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n    SetFlagOn (\"BrothInTheWild\")\r\n  }\r\n  else {\r\n    msg (\"You now have <b>{counter:Silver}</b> silver.\")\r\n    AddPageLink (OldSoulDiceRoll, OldSoulDiceAnte, \"<b>ANTE UP. [-1 Silver]</b>\")\r\n    AddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\\\"Thank you, gentlemen.\\\" [Stand up from the table]</b>\")\r\n    RemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)\r\n  }\r\n}\r\n// BROTH WINS\r\nif (GetBoolean (game, \"BrothHeart\") and (GetBoolean (game, \"MulliganSword\") or GetBoolean (game, \"MulliganShield\")) and (GetBoolean (game, \"PlayerSword\") or GetBoolean (game, \"PlayerShield\"))) {\r\n  SetCounter (\"BrothSilver\", game.BrothSilver + game.DicePot)\r\n  msg (\"<br><br><b>BROTH WINS {counter:DicePot} SILVER.</b>\")\r\n  msg (\"Broth: {random:\\\"Broth like silver.\\\":\\\"Good day for dice.\\\":\\\"Broth roll dice like warrior swing sword.\\\":\\\"More silver for ale.\\\":\\\"They say this game of chance, I think this game of Broth.\\\"}\")\r\n  msg (\"Broth now has <b>{counter:BrothSilver}</b> silver.\")\r\n  if (GetInt(game, \"Silver\") < 1) {\r\n    msg (\"<br/><b>YOU ARE OUT OF SILVER.</b><br/>Mulligan: \\\"Come back and give us some more silver anytime!  Har har!\\\"<br/>Broth: \\\"Well fought battle.  See you again.\\\"\")\r\n    AddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\\\"Thank you for the game.\\\" [Stand up from the table]</b>\")\r\n    RemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)\r\n    RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n  }\r\n  else if (GetInt(game, \"MulliganSilver\") < 1) {\r\n    msg (\"<br/><b>MULLIGAN IS OUT OF SILVER!</b><br/>Mulligan: \\\"Evil conspiring strumpets!  I am but a beggar now, out of coin and out of tricks.  I'll take my leave.  G'day to you both, toadies.\\\"<br/>Broth: \\\"Good game, Mulligan.\\\"<br/>Mulligan: \\\"No, it wasn't!\\\"<br/><br/>At that, Mulligan the Mischievous pushes his chair back from the table and limps out of the Old Soul.  It's only now that you notice his peg leg as the heavy oak door slams behind him.<br/><br/><b>THE GAME IS OVER FOR NOW.</b> <br/><i>You can return at a later time to see if other players join the table</i>.\")\r\n    AddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\\\"Thank you for the game.\\\" [Stand up from the table]</b>\")\r\n    RemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)\r\n    RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n    SetFlagOn (\"MulliganInTheWild\")\r\n  }\r\n  else {\r\n    msg (\"You now have <b>{counter:Silver}</b> silver.\")\r\n    AddPageLink (OldSoulDiceRoll, OldSoulDiceAnte, \"<b>ANTE UP. [-1 Silver]</b>\")\r\n    AddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\\\"Thank you, gentlemen.\\\" [Stand up from the table]</b>\")\r\n    RemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)\r\n  }\r\n}\r\n// THREE SWORDS\r\nif (GetBoolean(game, \"PlayerSword\")) {\r\n  if (GetBoolean(game, \"MulliganSword\")) {\r\n    if (GetBoolean(game, \"BrothSword\")) {\r\n      msg (\"<br><br><b>THREE SWORDS!</b>\")\r\n      if (GetInt(game, \"Silver\") < game.DicePot) {\r\n        msg (\"Mulligan: Uh oh, looks like little squirrel can't match the pot!\")\r\n        msg (\"You indeed lack the silver to complete the bet.\")\r\n        msg (\"No one antes.\")\r\n        msg (\"<br><b>THE POT REMAINS {counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else if (GetInt(game, \"BrothSilver\") < game.DicePot) {\r\n        msg (\"Mulligan: Ar! Looks like our pal Brothy can't match the pot!\")\r\n        msg (\"Broth indeed lacks the silver to complete the bet.\")\r\n        msg (\"No one antes.\")\r\n        msg (\"<br><b>THE POT REMAINS {counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else if (GetInt(game, \"MulliganSilver\") < game.DicePot) {\r\n        msg (\"Broth: Mulligan almost out of silver. Heh.<br/>Mulligan: Piss off, sword-sitter!\")\r\n        msg (\"Mulligan indeed lacks the silver to complete the bet.\")\r\n        msg (\"No one antes.\")\r\n        msg (\"<br><b>THE POT REMAINS {counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else {\r\n        msg (\"Broth: {random:\\\"Broth like swords.\\\":\\\"Swords good, means more silver in pot.\\\"}\")\r\n        msg (\"Mulligan: {random:\\\"Ar, we're gettin' stab-happy, match the pot!\\\":\\\"Match the pot, ye toads!\\\"}\")\r\n        SetCounter (\"Silver\", game.Silver - game.DicePot)\r\n        SetCounter (\"MulliganSilver\", game.MulliganSilver - game.DicePot)\r\n        SetCounter (\"BrothSilver\", game.BrothSilver - game.DicePot)\r\n        msg (\"Everyone matches the pot. <b>[-{counter:DicePot} Silver]</b>\")\r\n        msg (\"You now have <b>{counter:Silver}</b> silver.\")\r\n        msg (\"Mulligan now has <b>{counter:MulliganSilver}<b> silver.\")\r\n        msg (\"Broth now has <b>{counter:BrothSilver}</b> silver.\")\r\n        SetCounter (\"DicePot\", game.DicePot + game.DicePot + game.DicePot + game.DicePot)\r\n        msg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n    }\r\n  }\r\n}\r\n// THREE SHIELDS\r\nif (GetBoolean(game, \"PlayerShield\")) {\r\n  if (GetBoolean(game, \"MulliganShield\")) {\r\n    if (GetBoolean(game, \"BrothShield\")) {\r\n      msg (\"<br><br><b>THREE SHIELDS!</b>\")\r\n      if (GetInt(game, \"Silver\") < 1) {\r\n        SetCounter (\"Silver\", 0)\r\n        msg (\"Mulligan: Uh oh, looks like our little beaver is out of silver!\")\r\n        msg (\"You indeed lack the silver to complete the bet.\")\r\n        msg (\"No one antes.\")\r\n        msg (\"<br><b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else if (GetInt(game, \"MulliganSilver\") < 1) {\r\n        SetCounter (\"MulliganSilver\", 0)\r\n        msg (\"Broth: Mulligan too broke to bet. Ha.<br/>Mulligan: Not for long!\")\r\n        msg (\"Mulligan indeed lacks the silver to complete the bet.\")\r\n        msg (\"No one antes.\")\r\n        msg (\"<br><b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else if (GetInt(game, \"BrothSilver\") < 1) {\r\n        SetCounter (\"BrothSilver\", 0)\r\n        msg (\"Mulligan: What's this? The dumb barbarian is almost broke?\")\r\n        msg (\"Broth indeed lacks the silver to complete the bet.\")\r\n        msg (\"No one antes.\")\r\n        msg (\"<br><b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else {\r\n        msg (\"Broth: {random:\\\"Broth like shields.\\\":\\\"Shields good.\\\"}\")\r\n        msg (\"Mulligan: {random:\\\"Now it's gettin' a bit more interestin'.\\\":\\\"E'rryone ante up, ya squirrels!\\\"}\")\r\n        ChangeCounter (\"Silver\", -1)\r\n        ChangeCounter (\"MulliganSilver\", -1)\r\n        ChangeCounter (\"BrothSilver\", -1)\r\n        msg (\"Everyone antes another silver. <b>[-1 Silver]</b>\")\r\n        msg (\"You now have <b>{counter:Silver}</b> silver.\")\r\n        msg (\"Mulligan now has <b>{counter:MulliganSilver}<b> silver.\")\r\n        msg (\"Broth now has <b>{counter:BrothSilver}</b> silver.\")\r\n        ChangeCounter (\"DicePot\", 3)\r\n        msg (\"<b>THE POT IS NOW <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n    }\r\n  }\r\n}\r\n// MULLIGAN LOSES\r\nif (GetBoolean(game, \"PlayerHeart\")) {\r\n  if (GetBoolean(game, \"BrothHeart\")) {\r\n    if (GetBoolean(game, \"MulliganSword\")) {\r\n      msg (\"<br><br><b>TWO HEARTS BEAT MULLIGAN'S SWORD!</b>\")\r\n      msg (\"Mulligan: \\\"Son of a-\\\"<br>Broth: \\\"Ante up, Mulligan.\\\"\")\r\n      if (GetInt(game, \"MulliganSilver\") < 1) {\r\n        SetCounter (\"MulliganSilver\", 0)\r\n        msg (\"Mulligan is out of silver pieces!  No one antes.  Roll the dice.\")\r\n        msg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else {\r\n        ChangeCounter (\"DicePot\", 1)\r\n        ChangeCounter (\"MulliganSilver\", -1)\r\n        msg (\"Mulligan antes another silver.\")\r\n        msg (\"Mulligan now has <b>{counter:MulliganSilver}</b> silver.\")\r\n        msg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n    }\r\n  }\r\n}\r\nif (GetBoolean(game, \"PlayerHeart\")) {\r\n  if (GetBoolean(game, \"BrothHeart\")) {\r\n    if (GetBoolean(game, \"MulliganShield\")) {\r\n      msg (\"<br><br><b>TWO HEARTS BEAT MULLIGAN'S SHIELD!</b>\")\r\n      msg (\"Mulligan: \\\"Yer gangin' up on me.\\\"<br/>Broth: \\\"More silver, Mulligan.\\\"\")\r\n      if (GetInt(game, \"MulliganSilver\") < 1) {\r\n        SetCounter (\"MulliganSilver\", 0)\r\n        msg (\"Mulligan is out of silver pieces!  No one antes.  Roll the dice.\")\r\n        msg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else {\r\n        ChangeCounter (\"DicePot\", 1)\r\n        ChangeCounter (\"MulliganSilver\", -1)\r\n        msg (\"Mulligan antes another silver.\")\r\n        msg (\"Mulligan now has <b>{counter:MulliganSilver}</b> silver.\")\r\n        msg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n    }\r\n  }\r\n}\r\nif (GetBoolean(game, \"PlayerSword\")) {\r\n  if (GetBoolean(game, \"BrothSword\")) {\r\n    if (GetBoolean(game, \"MulliganShield\")) {\r\n      msg (\"<br><br><b>TWO SWORDS BEAT MULLIGAN'S SHIELD!</b>\")\r\n      msg (\"Mulligan: \\\"Treachery!\\\"<br>Broth: \\\"Two swords beat one shield, Mulligan.\\\"\")\r\n      if (GetInt(game, \"MulliganSilver\") < 1) {\r\n        SetCounter (\"MulliganSilver\", 0)\r\n        msg (\"Mulligan is out of silver pieces!  No one antes.  Roll the dice.\")\r\n        msg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else {\r\n        ChangeCounter (\"DicePot\", 1)\r\n        ChangeCounter (\"MulliganSilver\", -1)\r\n        msg (\"Mulligan antes another silver.\")\r\n        msg (\"Mulligan now has <b>{counter:MulliganSilver}</b> silver.\")\r\n        msg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n    }\r\n  }\r\n}\r\nif (GetBoolean(game, \"PlayerShield\")) {\r\n  if (GetBoolean(game, \"BrothShield\")) {\r\n    if (GetBoolean(game, \"MulliganSword\")) {\r\n      msg (\"<br><br><b>TWO SHIELDS BEAT MULLIGAN'S SWORD!</b>\")\r\n      msg (\"Mulligan: \\\"Unfair!\\\"<br/>Broth: \\\"You stab with one sword, we block with two shield. Ante, Mulligan.\\\"\")\r\n      if (GetInt(game, \"MulliganSilver\") < 1) {\r\n        SetCounter (\"MulliganSilver\", 0)\r\n        msg (\"Mulligan is out of silver pieces!  No one antes.  Roll the dice.\")\r\n        msg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else {\r\n        ChangeCounter (\"DicePot\", 1)\r\n        ChangeCounter (\"MulliganSilver\", -1)\r\n        msg (\"Mulligan antes another silver.\")\r\n        msg (\"Mulligan now has <b>{counter:MulliganSilver}</b> silver.\")\r\n        msg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n    }\r\n  }\r\n}\r\n// PLAYER LOSES\r\nif (GetBoolean(game, \"MulliganHeart\")) {\r\n  if (GetBoolean(game, \"BrothHeart\")) {\r\n    if (GetBoolean(game, \"PlayerSword\")) {\r\n      msg (\"<br><br><b>TWO HEARTS BEAT YOUR SWORD.</b>\")\r\n      msg (\"Mulligan: {random:\\\"Ante up, ye scurvy dog!\\\":\\\"Another silver piece, boot-licker!\\\":\\\"Sorry kid, ante up.\\\":\\\"Put another silver in the pot, toad!\\\":\\\"I like playin' with you, you like to lose.\\\"}\")\r\n      if (GetInt(game, \"Silver\") < 1) {\r\n        SetCounter (\"Silver\", 0)\r\n        msg (\"You are out of silver pieces!  No one antes.  Roll the dice.\")\r\n        msg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else {\r\n        ChangeCounter (\"DicePot\", 1)\r\n        ChangeCounter (\"Silver\", -1)\r\n        msg (\"You ante another silver. <b>[-1 Silver]\")\r\n        msg (\"You now have <b>{counter:Silver}</b> silver.\")\r\n        msg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n    }\r\n  }\r\n}\r\nif (GetBoolean(game, \"MulliganHeart\")) {\r\n  if (GetBoolean(game, \"BrothHeart\")) {\r\n    if (GetBoolean(game, \"PlayerShield\")) {\r\n      msg (\"<br><br><b>TWO HEARTS BEAT YOUR SHIELD.</b>\")\r\n      msg (\"Mulligan: {random:\\\"Ante up, ye scurvy dog!\\\":\\\"Another silver piece, boot-licker!\\\":\\\"Sorry kid, ante up.\\\":\\\"Put another silver in the pot, toad!\\\":\\\"I like playin' with you, you like to lose.\\\"}\")\r\n      if (GetInt(game, \"Silver\") < 1) {\r\n        SetCounter (\"Silver\", 0)\r\n        msg (\"You are out of silver pieces!  No one antes.  Roll the dice.\")\r\n        msg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else {\r\n        ChangeCounter (\"DicePot\", 1)\r\n        ChangeCounter (\"Silver\", -1)\r\n        msg (\"You ante another silver. <b>[-1 Silver]\")\r\n        msg (\"You now have <b>{counter:Silver}</b> silver.\")\r\n        msg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n    }\r\n  }\r\n}\r\nif (GetBoolean(game, \"PlayerSword\")) {\r\n  if (GetBoolean(game, \"BrothShield\")) {\r\n    if (GetBoolean(game, \"MulliganShield\")) {\r\n      msg (\"<br><br><b>TWO SHIELDS BEAT YOUR SWORD.</b>\")\r\n      msg (\"Mulligan: {random:\\\"Ante up, ye scurvy dog!\\\":\\\"Another silver piece, boot-licker!\\\":\\\"Sorry kid, ante up.\\\":\\\"Put another silver in the pot, toad!\\\":\\\"I like playin' with you, you like to lose.\\\"}\")\r\n      if (GetInt(game, \"Silver\") < 1) {\r\n        SetCounter (\"Silver\", 0)\r\n        msg (\"You are out of silver pieces!  No one antes.  Roll the dice.\")\r\n        msg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else {\r\n        ChangeCounter (\"DicePot\", 1)\r\n        ChangeCounter (\"Silver\", -1)\r\n        msg (\"You ante another silver. <b>[-1 Silver]\")\r\n        msg (\"You now have <b>{counter:Silver}</b> silver.\")\r\n        msg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n    }\r\n  }\r\n}\r\nif (GetBoolean(game, \"PlayerShield\")) {\r\n  if (GetBoolean(game, \"BrothSword\")) {\r\n    if (GetBoolean(game, \"MulliganSword\")) {\r\n      msg (\"<br><br><b>TWO SWORDS BEAT YOUR SHIELD.</b>\")\r\n      msg (\"Broth: {random:\\\"Our swords break your shield.\\\":\\\"So many sword, so few shield.\\\":\\\"We stab twice, you block once.\\\":\\\"You lose.\\\":\\\"Broth don't like Mulligan, but Broth like beating you.\\\"}\")\r\n      if (GetInt(game, \"Silver\") < 1) {\r\n        SetCounter (\"Silver\", 0)\r\n        msg (\"You are out of silver pieces!  No one antes.  Roll the dice.\")\r\n        msg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else {\r\n        ChangeCounter (\"DicePot\", 1)\r\n        ChangeCounter (\"Silver\", -1)\r\n        msg (\"You ante another silver. <b>[-1 Silver]\")\r\n        msg (\"You now have <b>{counter:Silver}</b> silver.\")\r\n        msg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n    }\r\n  }\r\n}\r\n// BROTH LOSES\r\nif (GetBoolean(game, \"PlayerHeart\")) {\r\n  if (GetBoolean(game, \"MulliganHeart\")) {\r\n    if (GetBoolean(game, \"BrothSword\")) {\r\n      msg (\"<br><br><b>TWO HEARTS BEAT BROTH'S SWORD!</b>\")\r\n      msg (\"Broth: \\\"Love conquers my sword. Broth sad.\\\"<br/>Mulligan: \\\"Well I love your silver! Ante, ya half-wit sell-sword!\\\"\")\r\n      if (GetInt(game, \"BrothSilver\") < 1) {\r\n        SetCounter (\"BrothSilver\", 0)\r\n        msg (\"Broth is out of silver pieces!  No one antes.  Roll the dice.\")\r\n        msg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else {\r\n        ChangeCounter (\"DicePot\", 1)\r\n        ChangeCounter (\"BrothSilver\", -1)\r\n        msg (\"Broth antes another silver.\")\r\n        msg (\"Broth now has <b>{counter:BrothSilver}</b> silver.\")\r\n        msg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n    }\r\n  }\r\n}\r\nif (GetBoolean(game, \"PlayerHeart\")) {\r\n  if (GetBoolean(game, \"MulliganHeart\")) {\r\n    if (GetBoolean(game, \"BrothShield\")) {\r\n      msg (\"<br><br><b>TWO HEARTS BEAT BROTH'S SHIELD.</b>\")\r\n      msg (\"Broth: \\\"Too many hearts for Broth's shield.\\\"<br/>Mulligan: \\\"I have a heart for your silver, though! Ante, you dumb barbarian!\\\"\")\r\n      if (GetInt(game, \"BrothSilver\") < 1) {\r\n        SetCounter (\"BrothSilver\", 0)\r\n        msg (\"Broth is out of silver pieces!  No one antes.  Roll the dice.\")\r\n        msg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else {\r\n        ChangeCounter (\"DicePot\", 1)\r\n        ChangeCounter (\"BrothSilver\", -1)\r\n        msg (\"Broth antes another silver.\")\r\n        msg (\"Broth now has <b>{counter:BrothSilver}</b> silver.\")\r\n        msg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n    }\r\n  }\r\n}\r\nif (GetBoolean(game, \"PlayerSword\")) {\r\n  if (GetBoolean(game, \"MulliganSword\")) {\r\n    if (GetBoolean(game, \"BrothShield\")) {\r\n      msg (\"<br><br><b>TWO SWORDS BEAT BROTH'S SHIELD!</b>\")\r\n      msg (\"Broth: \\\"Too many sword to block.\\\"<br/>Mulligan: \\\"Get yer silver in there.\\\"\")\r\n      if (GetInt(game, \"BrothSilver\") < 1) {\r\n        SetCounter (\"BrothSilver\", 0)\r\n        msg (\"Broth is out of silver pieces!  No one antes.  Roll the dice.\")\r\n        msg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else {\r\n        ChangeCounter (\"DicePot\", 1)\r\n        ChangeCounter (\"BrothSilver\", -1)\r\n        msg (\"Broth antes another silver.\")\r\n        msg (\"Broth now has <b>{counter:BrothSilver}</b> silver.\")\r\n        msg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n    }\r\n  }\r\n}\r\nif (GetBoolean(game, \"PlayerShield\")) {\r\n  if (GetBoolean(game, \"MulliganShield\")) {\r\n    if (GetBoolean(game, \"BrothSword\")) {\r\n      msg (\"<br><br><b>TWO SHIELDS BEAT BROTH'S SWORD!</b>\")\r\n      msg (\"Broth: \\\"I can't beat two shield with one sword.\\\"<br>Mulligan: \\\"I thought you could kill two men with one blow! Grease the pot, ya mercenary.\\\"\")\r\n      if (GetInt(game, \"BrothSilver\") < 1) {\r\n        SetCounter (\"BrothSilver\", 0)\r\n        msg (\"Broth is out of silver pieces!  No one antes.  Roll the dice.\")\r\n        msg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else {\r\n        ChangeCounter (\"DicePot\", 1)\r\n        ChangeCounter (\"BrothSilver\", -1)\r\n        msg (\"Broth antes another silver.\")\r\n        msg (\"Broth now has <b>{counter:BrothSilver}</b> silver.\")\r\n        msg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n    }\r\n  }\r\n}\r\n// LOVE TRIANGLE\r\nif (GetBoolean(game, \"PlayerHeart\")) {\r\n  if (GetBoolean(game, \"MulliganHeart\")) {\r\n    if (GetBoolean(game, \"BrothHeart\")) {\r\n      msg (\"<br><br><b>LOVE TRIANGLE!</b>\")\r\n      if (GetInt(game, \"Silver\") < game.DicePot + game.DicePot) {\r\n        msg (\"Mulligan: Uh oh, looks like little squirrel can't double the pot!\")\r\n        msg (\"You indeed lack the silver to complete the bet.\")\r\n        msg (\"No one antes.\")\r\n        msg (\"<br><b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else if (GetInt(game, \"BrothSilver\") < game.DicePot + game.DicePot) {\r\n        msg (\"Mulligan: Ar! Looks like our pal Brothy can't double the pot!\")\r\n        msg (\"Broth indeed lacks the silver to complete the bet.\")\r\n        msg (\"No one antes.\")\r\n        msg (\"<br><b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else if (GetInt(game, \"MulliganSilver\") < game.DicePot + game.DicePot) {\r\n        msg (\"Broth: Mulligan almost out of silver. Heh.<br/>Mulligan: Piss off, sword-sitter!\")\r\n        msg (\"Mulligan indeed lacks the silver to complete the bet.\")\r\n        msg (\"No one antes.\")\r\n        msg (\"<br><b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n      else {\r\n        msg (\"Mulligan: \\\"Ho-HO! This is what I play for! E'rryone double the pot! Good luck, ya toads!\\\"\")\r\n        msg (\"Broth: \\\"Big silver in pot now, Broth like.\\\"\")\r\n        SetCounter (\"DicePotDouble\", game.DicePot + game.DicePot)\r\n        msg (\"Everyone loudly shoves <b>{counter:DicePotDouble}</b> silver into the middle of the table.\")\r\n        SetCounter (\"BrothSilver\", game.BrothSilver - game.DicePot - game.DicePot)\r\n        SetCounter (\"Silver\", game.Silver - game.DicePot - game.DicePot)\r\n        SetCounter (\"MulliganSilver\", game.MulliganSilver - game.DicePot - game.DicePot)\r\n        SetCounter (\"DicePot\", game.DicePot + game.DicePot + game.DicePot + game.DicePot + game.DicePot + game.DicePot + game.DicePot)\r\n        msg (\"You now have <b>{counter:Silver}</b> silver.\")\r\n        msg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")\r\n        AddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)\r\n        RemovePageLink (OldSoulDiceRoll, OldSoulReload)\r\n      }\r\n    }\r\n  }\r\n}",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok fuck this, I've been hiding it out of shame, but I'm about to code dump on you and ask you how to do it way better.  Pretend that the Counters for the <strong>Player</strong>, <strong>Mulligan the Mischievous</strong> and <strong>Broth the Barbarian</strong> are already set in this case; they have certain amounts of Silver.  I hand-coded this using my limited understanding of this bullshit.  Now remember, there is an \"Ante\" page that changes a counter, and an alternate page <strong>that looks identical to this page below with the page links reversed</strong> (beither of which I'm pasting below),  and I made a fully-working, VERY simple 33%-chance dice game.</p>\n<p>How would you code this that would work in Gamebook mode, and make it WAY simpler?  Remember, has to work in Gamebook mode.   I'll paypal you 20 U.S. dollars if you do (by the way, there's some errant <code>&lt;/b&gt;</code>s in there that makes like the last  half of it all bolded and I'm not fixing that right now, but I have a working dice game of chance in one of my Inns right now, and I'm almost certain I can make this in 1,000 LESS lines of code but have no idea how:</p>\n<p>SetFlagOff (\"PlayerHeart\")<br>\nSetFlagOff (\"PlayerSword\")<br>\nSetFlagOff (\"PlayerShield\")<br>\nSetFlagOff (\"MulliganHeart\")<br>\nSetFlagOff (\"MulliganSword\")<br>\nSetFlagOff (\"MulliganShield\")<br>\nSetFlagOff (\"BrothHeart\")<br>\nSetFlagOff (\"BrothSword\")<br>\nSetFlagOff (\"BrothShield\")<br>\nif (GetBoolean(game, \"DiceStart\")) {<br>\nChangeCounter (\"Silver\", -1)<br>\nChangeCounter (\"MulliganSilver\", -1)<br>\nChangeCounter (\"BrothSilver\", -1)<br>\n}<br>\n// PLAYER ROLL<br>\nmsg (\"<br><b>You rolled:</b><br>\")<br>\nif (RandomChance(33)) {<br>\npicture (\"heart.jpg\")<br>\nSetFlagOn (\"PlayerHeart\")<br>\n}<br>\nelse {<br>\nif (RandomChance(50)) {<br>\npicture (\"sword.jpg\")<br>\nSetFlagOn (\"PlayerSword\")<br>\n}<br>\nelse {<br>\npicture (\"shield.jpg\")<br>\nSetFlagOn (\"PlayerShield\")<br>\n}<br>\n}<br>\n// MULLIGAN ROLL<br>\nmsg (\"<br><b>Mulligan The Mischievous rolled:</b><br>\")<br>\nif (RandomChance(33)) {<br>\npicture (\"heart.jpg\")<br>\nSetFlagOn (\"MulliganHeart\")<br>\n}<br>\nelse {<br>\nif (RandomChance(50)) {<br>\npicture (\"sword.jpg\")<br>\nSetFlagOn (\"MulliganSword\")<br>\n}<br>\nelse {<br>\npicture (\"shield.jpg\")<br>\nSetFlagOn (\"MulliganShield\")<br>\n}<br>\n}<br>\n// BROTH ROLL<br>\nmsg (\"<br><b>Broth The Barbarian rolled:</b><br>\")<br>\nif (RandomChance(33)) {<br>\npicture (\"heart.jpg\")<br>\nSetFlagOn (\"BrothHeart\")<br>\n}<br>\nelse {<br>\nif (RandomChance(50)) {<br>\npicture (\"sword.jpg\")<br>\nSetFlagOn (\"BrothSword\")<br>\n}<br>\nelse {<br>\npicture (\"shield.jpg\")<br>\nSetFlagOn (\"BrothShield\")<br>\n}<br>\n}<br>\n// PLAYER WINS<br>\nif (GetBoolean (game, \"PlayerHeart\") and (GetBoolean (game, \"MulliganSword\") or GetBoolean (game, \"MulliganShield\")) and (GetBoolean (game, \"BrothSword\") or GetBoolean (game, \"BrothShield\"))) {<br>\nmsg (\"<br><br><b>YOU WIN {counter:DicePot} SILVER!</b>\")<br>\nmsg (\"Mulligan: {random:\"Ya scurvy dog!\":\"Lucky roll.\":\"Nice one, kid.\":\"Let's roll again, shall we?\":\"You lout!\":\"I rolled my die wrong that time.\":\"Well played.\":\"Yer not done yet, are ya?\":\"I like this kid.\":\"Curse Pelor!\":\"May toads nibble yer toes.\":\"Seems yer the chosen one, this time.\"}\")<br>\nSetCounter (\"Silver\", game.Silver + game.DicePot)<br>\nmsg (\"You now have <b>{counter:Silver}</b> silver.\")<br>\nif (GetInt(game, \"MulliganSilver\") &lt; 1) {<br>\nmsg (\"<br><b>MULLIGAN IS OUT OF SILVER!</b><br>Mulligan: \"Evil conspiring strumpets!  I am but a beggar now, out of coin and out of tricks.  I'll take my leave.  G'day to you both, toadies.\"<br>Broth: \"Good game, Mulligan.\"<br>Mulligan: \"No, it wasn't!\"<br><br>At that, Mulligan the Mischievous pushes his chair back from the table and limps out of the Old Soul.  It's only now that you notice his peg leg as the heavy oak door slams behind him.<br><br><b>THE GAME IS OVER FOR NOW.</b> <br><i>You can return at a later time to see if other players join the table</i>.\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\"Thank you for the game.\" [Stand up from the table]</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nSetFlagOn (\"MulliganInTheWild\")<br>\n}<br>\nelse if (GetInt(game, \"BrothSilver\") &lt; 1) {<br>\nmsg (\"<br><b>BROTH IS OUT OF SILVER!</b><br>Broth: \"Broth lose all silver.  Broth leave.  Broth sleep.\"<br>Mulligan: \"Go find some more silver, you pack mule!\"<br>Broth: \"Mulligan not nice.\"<br>Mulligan: \"Broth not smart!\"<br><br>At that, the hulking barbarian strides out of the Old Soul.<br><br><b>THE GAME IS OVER FOR NOW.</b> <br><i>You can return at a later time to see if other players join the table</i>.\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\"Thank you for the game.\" [Stand up from the table]</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nSetFlagOn (\"BrothInTheWild\")<br>\n}<br>\nelse {<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceAnte, \"<b>ANTE UP. [-1 Silver]</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\"Thank you, gentlemen.\" [Stand up from the table]</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)<br>\n}<br>\n}<br>\n// MULLIGAN WINS<br>\nif (GetBoolean (game, \"MulliganHeart\") and (GetBoolean (game, \"PlayerSword\") or GetBoolean (game, \"PlayerShield\")) and (GetBoolean (game, \"BrothSword\") or GetBoolean (game, \"BrothShield\"))) {<br>\nmsg (\"<br><br><b>MULLIGAN WINS {counter:DicePot} SILVER.</b>\")<br>\nmsg (\"Mulligan: {random:\"Ha! I'll take that silver!\":\"I'm the humblest of winners.\":\"Ante up again, ya squirrels! Wanna play some more?\":\"My piles o' silver grow!\":\"Silver wise, gold foolish I am.\":\"I've been known to win.\"}\")<br>\nSetCounter (\"MulliganSilver\", game.MulliganSilver + game.DicePot)<br>\nmsg (\"Mulligan now has <b>{counter:MulliganSilver}</b> silver.\")<br>\nif (GetInt(game, \"Silver\") &lt; 1) {<br>\nmsg (\"<br><b>YOU ARE OUT OF SILVER.</b><br>Mulligan: \"Come back and give us some more silver anytime!  Har har!\"<br>Broth: \"Well fought battle.  See you again.\"\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\"Thank you for the game.\" [Stand up from the table]</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\n}<br>\nelse if (GetInt(game, \"BrothSilver\") &lt; 1) {<br>\nmsg (\"<br><b>BROTH IS OUT OF SILVER!</b><br>Broth: \"Broth lose all silver.  Broth leave.  Broth sleep.\"<br>Mulligan: \"Go find some more silver, you pack mule!\"<br>Broth: \"Mulligan not nice.\"<br>Mulligan: \"Broth not smart!\"<br><br>At that, the hulking barbarian strides out of the Old Soul.<br><br><b>THE GAME IS OVER FOR NOW.</b> <br><i>You can return at a later time to see if other players join the table</i>.\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\"Thank you for the game.\" [Stand up from the table]</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nSetFlagOn (\"BrothInTheWild\")<br>\n}<br>\nelse {<br>\nmsg (\"You now have <b>{counter:Silver}</b> silver.\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceAnte, \"<b>ANTE UP. [-1 Silver]</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\"Thank you, gentlemen.\" [Stand up from the table]</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)<br>\n}<br>\n}<br>\n// BROTH WINS<br>\nif (GetBoolean (game, \"BrothHeart\") and (GetBoolean (game, \"MulliganSword\") or GetBoolean (game, \"MulliganShield\")) and (GetBoolean (game, \"PlayerSword\") or GetBoolean (game, \"PlayerShield\"))) {<br>\nSetCounter (\"BrothSilver\", game.BrothSilver + game.DicePot)<br>\nmsg (\"<br><br><b>BROTH WINS {counter:DicePot} SILVER.</b>\")<br>\nmsg (\"Broth: {random:\"Broth like silver.\":\"Good day for dice.\":\"Broth roll dice like warrior swing sword.\":\"More silver for ale.\":\"They say this game of chance, I think this game of Broth.\"}\")<br>\nmsg (\"Broth now has <b>{counter:BrothSilver}</b> silver.\")<br>\nif (GetInt(game, \"Silver\") &lt; 1) {<br>\nmsg (\"<br><b>YOU ARE OUT OF SILVER.</b><br>Mulligan: \"Come back and give us some more silver anytime!  Har har!\"<br>Broth: \"Well fought battle.  See you again.\"\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\"Thank you for the game.\" [Stand up from the table]</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\n}<br>\nelse if (GetInt(game, \"MulliganSilver\") &lt; 1) {<br>\nmsg (\"<br><b>MULLIGAN IS OUT OF SILVER!</b><br>Mulligan: \"Evil conspiring strumpets!  I am but a beggar now, out of coin and out of tricks.  I'll take my leave.  G'day to you both, toadies.\"<br>Broth: \"Good game, Mulligan.\"<br>Mulligan: \"No, it wasn't!\"<br><br>At that, Mulligan the Mischievous pushes his chair back from the table and limps out of the Old Soul.  It's only now that you notice his peg leg as the heavy oak door slams behind him.<br><br><b>THE GAME IS OVER FOR NOW.</b> <br><i>You can return at a later time to see if other players join the table</i>.\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\"Thank you for the game.\" [Stand up from the table]</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nSetFlagOn (\"MulliganInTheWild\")<br>\n}<br>\nelse {<br>\nmsg (\"You now have <b>{counter:Silver}</b> silver.\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceAnte, \"<b>ANTE UP. [-1 Silver]</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulReload, \"<b>\"Thank you, gentlemen.\" [Stand up from the table]</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceReroll)<br>\n}<br>\n}<br>\n// THREE SWORDS<br>\nif (GetBoolean(game, \"PlayerSword\")) {<br>\nif (GetBoolean(game, \"MulliganSword\")) {<br>\nif (GetBoolean(game, \"BrothSword\")) {<br>\nmsg (\"<br><br><b>THREE SWORDS!</b>\")<br>\nif (GetInt(game, \"Silver\") &lt; game.DicePot) {<br>\nmsg (\"Mulligan: Uh oh, looks like little squirrel can't match the pot!\")<br>\nmsg (\"You indeed lack the silver to complete the bet.\")<br>\nmsg (\"No one antes.\")<br>\nmsg (\"<br><b>THE POT REMAINS {counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse if (GetInt(game, \"BrothSilver\") &lt; game.DicePot) {<br>\nmsg (\"Mulligan: Ar! Looks like our pal Brothy can't match the pot!\")<br>\nmsg (\"Broth indeed lacks the silver to complete the bet.\")<br>\nmsg (\"No one antes.\")<br>\nmsg (\"<br><b>THE POT REMAINS {counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse if (GetInt(game, \"MulliganSilver\") &lt; game.DicePot) {<br>\nmsg (\"Broth: Mulligan almost out of silver. Heh.<br>Mulligan: Piss off, sword-sitter!\")<br>\nmsg (\"Mulligan indeed lacks the silver to complete the bet.\")<br>\nmsg (\"No one antes.\")<br>\nmsg (\"<br><b>THE POT REMAINS {counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse {<br>\nmsg (\"Broth: {random:\"Broth like swords.\":\"Swords good, means more silver in pot.\"}\")<br>\nmsg (\"Mulligan: {random:\"Ar, we're gettin' stab-happy, match the pot!\":\"Match the pot, ye toads!\"}\")<br>\nSetCounter (\"Silver\", game.Silver - game.DicePot)<br>\nSetCounter (\"MulliganSilver\", game.MulliganSilver - game.DicePot)<br>\nSetCounter (\"BrothSilver\", game.BrothSilver - game.DicePot)<br>\nmsg (\"Everyone matches the pot. <b>[-{counter:DicePot} Silver]</b>\")<br>\nmsg (\"You now have <b>{counter:Silver}</b> silver.\")<br>\nmsg (\"Mulligan now has <b>{counter:MulliganSilver}<b> silver.\")<br>\nmsg (\"Broth now has <b>{counter:BrothSilver}</b> silver.\")<br>\nSetCounter (\"DicePot\", game.DicePot + game.DicePot + game.DicePot + game.DicePot)<br>\nmsg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\n}<br>\n}<br>\n}<br>\n// THREE SHIELDS<br>\nif (GetBoolean(game, \"PlayerShield\")) {<br>\nif (GetBoolean(game, \"MulliganShield\")) {<br>\nif (GetBoolean(game, \"BrothShield\")) {<br>\nmsg (\"<br><br><b>THREE SHIELDS!</b>\")<br>\nif (GetInt(game, \"Silver\") &lt; 1) {<br>\nSetCounter (\"Silver\", 0)<br>\nmsg (\"Mulligan: Uh oh, looks like our little beaver is out of silver!\")<br>\nmsg (\"You indeed lack the silver to complete the bet.\")<br>\nmsg (\"No one antes.\")<br>\nmsg (\"<br><b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse if (GetInt(game, \"MulliganSilver\") &lt; 1) {<br>\nSetCounter (\"MulliganSilver\", 0)<br>\nmsg (\"Broth: Mulligan too broke to bet. Ha.<br>Mulligan: Not for long!\")<br>\nmsg (\"Mulligan indeed lacks the silver to complete the bet.\")<br>\nmsg (\"No one antes.\")<br>\nmsg (\"<br><b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse if (GetInt(game, \"BrothSilver\") &lt; 1) {<br>\nSetCounter (\"BrothSilver\", 0)<br>\nmsg (\"Mulligan: What's this? The dumb barbarian is almost broke?\")<br>\nmsg (\"Broth indeed lacks the silver to complete the bet.\")<br>\nmsg (\"No one antes.\")<br>\nmsg (\"<br><b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse {<br>\nmsg (\"Broth: {random:\"Broth like shields.\":\"Shields good.\"}\")<br>\nmsg (\"Mulligan: {random:\"Now it's gettin' a bit more interestin'.\":\"E'rryone ante up, ya squirrels!\"}\")<br>\nChangeCounter (\"Silver\", -1)<br>\nChangeCounter (\"MulliganSilver\", -1)<br>\nChangeCounter (\"BrothSilver\", -1)<br>\nmsg (\"Everyone antes another silver. <b>[-1 Silver]</b>\")<br>\nmsg (\"You now have <b>{counter:Silver}</b> silver.\")<br>\nmsg (\"Mulligan now has <b>{counter:MulliganSilver}<b> silver.\")<br>\nmsg (\"Broth now has <b>{counter:BrothSilver}</b> silver.\")<br>\nChangeCounter (\"DicePot\", 3)<br>\nmsg (\"<b>THE POT IS NOW <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\n}<br>\n}<br>\n}<br>\n// MULLIGAN LOSES<br>\nif (GetBoolean(game, \"PlayerHeart\")) {<br>\nif (GetBoolean(game, \"BrothHeart\")) {<br>\nif (GetBoolean(game, \"MulliganSword\")) {<br>\nmsg (\"<br><br><b>TWO HEARTS BEAT MULLIGAN'S SWORD!</b>\")<br>\nmsg (\"Mulligan: \"Son of a-\"<br>Broth: \"Ante up, Mulligan.\"\")<br>\nif (GetInt(game, \"MulliganSilver\") &lt; 1) {<br>\nSetCounter (\"MulliganSilver\", 0)<br>\nmsg (\"Mulligan is out of silver pieces!  No one antes.  Roll the dice.\")<br>\nmsg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse {<br>\nChangeCounter (\"DicePot\", 1)<br>\nChangeCounter (\"MulliganSilver\", -1)<br>\nmsg (\"Mulligan antes another silver.\")<br>\nmsg (\"Mulligan now has <b>{counter:MulliganSilver}</b> silver.\")<br>\nmsg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\n}<br>\n}<br>\n}<br>\nif (GetBoolean(game, \"PlayerHeart\")) {<br>\nif (GetBoolean(game, \"BrothHeart\")) {<br>\nif (GetBoolean(game, \"MulliganShield\")) {<br>\nmsg (\"<br><br><b>TWO HEARTS BEAT MULLIGAN'S SHIELD!</b>\")<br>\nmsg (\"Mulligan: \"Yer gangin' up on me.\"<br>Broth: \"More silver, Mulligan.\"\")<br>\nif (GetInt(game, \"MulliganSilver\") &lt; 1) {<br>\nSetCounter (\"MulliganSilver\", 0)<br>\nmsg (\"Mulligan is out of silver pieces!  No one antes.  Roll the dice.\")<br>\nmsg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse {<br>\nChangeCounter (\"DicePot\", 1)<br>\nChangeCounter (\"MulliganSilver\", -1)<br>\nmsg (\"Mulligan antes another silver.\")<br>\nmsg (\"Mulligan now has <b>{counter:MulliganSilver}</b> silver.\")<br>\nmsg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\n}<br>\n}<br>\n}<br>\nif (GetBoolean(game, \"PlayerSword\")) {<br>\nif (GetBoolean(game, \"BrothSword\")) {<br>\nif (GetBoolean(game, \"MulliganShield\")) {<br>\nmsg (\"<br><br><b>TWO SWORDS BEAT MULLIGAN'S SHIELD!</b>\")<br>\nmsg (\"Mulligan: \"Treachery!\"<br>Broth: \"Two swords beat one shield, Mulligan.\"\")<br>\nif (GetInt(game, \"MulliganSilver\") &lt; 1) {<br>\nSetCounter (\"MulliganSilver\", 0)<br>\nmsg (\"Mulligan is out of silver pieces!  No one antes.  Roll the dice.\")<br>\nmsg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse {<br>\nChangeCounter (\"DicePot\", 1)<br>\nChangeCounter (\"MulliganSilver\", -1)<br>\nmsg (\"Mulligan antes another silver.\")<br>\nmsg (\"Mulligan now has <b>{counter:MulliganSilver}</b> silver.\")<br>\nmsg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\n}<br>\n}<br>\n}<br>\nif (GetBoolean(game, \"PlayerShield\")) {<br>\nif (GetBoolean(game, \"BrothShield\")) {<br>\nif (GetBoolean(game, \"MulliganSword\")) {<br>\nmsg (\"<br><br><b>TWO SHIELDS BEAT MULLIGAN'S SWORD!</b>\")<br>\nmsg (\"Mulligan: \"Unfair!\"<br>Broth: \"You stab with one sword, we block with two shield. Ante, Mulligan.\"\")<br>\nif (GetInt(game, \"MulliganSilver\") &lt; 1) {<br>\nSetCounter (\"MulliganSilver\", 0)<br>\nmsg (\"Mulligan is out of silver pieces!  No one antes.  Roll the dice.\")<br>\nmsg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse {<br>\nChangeCounter (\"DicePot\", 1)<br>\nChangeCounter (\"MulliganSilver\", -1)<br>\nmsg (\"Mulligan antes another silver.\")<br>\nmsg (\"Mulligan now has <b>{counter:MulliganSilver}</b> silver.\")<br>\nmsg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\n}<br>\n}<br>\n}<br>\n// PLAYER LOSES<br>\nif (GetBoolean(game, \"MulliganHeart\")) {<br>\nif (GetBoolean(game, \"BrothHeart\")) {<br>\nif (GetBoolean(game, \"PlayerSword\")) {<br>\nmsg (\"<br><br><b>TWO HEARTS BEAT YOUR SWORD.</b>\")<br>\nmsg (\"Mulligan: {random:\"Ante up, ye scurvy dog!\":\"Another silver piece, boot-licker!\":\"Sorry kid, ante up.\":\"Put another silver in the pot, toad!\":\"I like playin' with you, you like to lose.\"}\")<br>\nif (GetInt(game, \"Silver\") &lt; 1) {<br>\nSetCounter (\"Silver\", 0)<br>\nmsg (\"You are out of silver pieces!  No one antes.  Roll the dice.\")<br>\nmsg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse {<br>\nChangeCounter (\"DicePot\", 1)<br>\nChangeCounter (\"Silver\", -1)<br>\nmsg (\"You ante another silver. <b>[-1 Silver]\")<br>\nmsg (\"You now have <b>{counter:Silver}</b> silver.\")<br>\nmsg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\n}<br>\n}<br>\n}<br>\nif (GetBoolean(game, \"MulliganHeart\")) {<br>\nif (GetBoolean(game, \"BrothHeart\")) {<br>\nif (GetBoolean(game, \"PlayerShield\")) {<br>\nmsg (\"<br><br><b>TWO HEARTS BEAT YOUR SHIELD.</b>\")<br>\nmsg (\"Mulligan: {random:\"Ante up, ye scurvy dog!\":\"Another silver piece, boot-licker!\":\"Sorry kid, ante up.\":\"Put another silver in the pot, toad!\":\"I like playin' with you, you like to lose.\"}\")<br>\nif (GetInt(game, \"Silver\") &lt; 1) {<br>\nSetCounter (\"Silver\", 0)<br>\nmsg (\"You are out of silver pieces!  No one antes.  Roll the dice.\")<br>\nmsg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse {<br>\nChangeCounter (\"DicePot\", 1)<br>\nChangeCounter (\"Silver\", -1)<br>\nmsg (\"You ante another silver. <b>[-1 Silver]\")<br>\nmsg (\"You now have <b>{counter:Silver}</b> silver.\")<br>\nmsg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\n}<br>\n}<br>\n}<br>\nif (GetBoolean(game, \"PlayerSword\")) {<br>\nif (GetBoolean(game, \"BrothShield\")) {<br>\nif (GetBoolean(game, \"MulliganShield\")) {<br>\nmsg (\"<br><br><b>TWO SHIELDS BEAT YOUR SWORD.</b>\")<br>\nmsg (\"Mulligan: {random:\"Ante up, ye scurvy dog!\":\"Another silver piece, boot-licker!\":\"Sorry kid, ante up.\":\"Put another silver in the pot, toad!\":\"I like playin' with you, you like to lose.\"}\")<br>\nif (GetInt(game, \"Silver\") &lt; 1) {<br>\nSetCounter (\"Silver\", 0)<br>\nmsg (\"You are out of silver pieces!  No one antes.  Roll the dice.\")<br>\nmsg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse {<br>\nChangeCounter (\"DicePot\", 1)<br>\nChangeCounter (\"Silver\", -1)<br>\nmsg (\"You ante another silver. <b>[-1 Silver]\")<br>\nmsg (\"You now have <b>{counter:Silver}</b> silver.\")<br>\nmsg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\n}<br>\n}<br>\n}<br>\nif (GetBoolean(game, \"PlayerShield\")) {<br>\nif (GetBoolean(game, \"BrothSword\")) {<br>\nif (GetBoolean(game, \"MulliganSword\")) {<br>\nmsg (\"<br><br><b>TWO SWORDS BEAT YOUR SHIELD.</b>\")<br>\nmsg (\"Broth: {random:\"Our swords break your shield.\":\"So many sword, so few shield.\":\"We stab twice, you block once.\":\"You lose.\":\"Broth don't like Mulligan, but Broth like beating you.\"}\")<br>\nif (GetInt(game, \"Silver\") &lt; 1) {<br>\nSetCounter (\"Silver\", 0)<br>\nmsg (\"You are out of silver pieces!  No one antes.  Roll the dice.\")<br>\nmsg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse {<br>\nChangeCounter (\"DicePot\", 1)<br>\nChangeCounter (\"Silver\", -1)<br>\nmsg (\"You ante another silver. <b>[-1 Silver]\")<br>\nmsg (\"You now have <b>{counter:Silver}</b> silver.\")<br>\nmsg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\n}<br>\n}<br>\n}<br>\n// BROTH LOSES<br>\nif (GetBoolean(game, \"PlayerHeart\")) {<br>\nif (GetBoolean(game, \"MulliganHeart\")) {<br>\nif (GetBoolean(game, \"BrothSword\")) {<br>\nmsg (\"<br><br><b>TWO HEARTS BEAT BROTH'S SWORD!</b>\")<br>\nmsg (\"Broth: \"Love conquers my sword. Broth sad.\"<br>Mulligan: \"Well I love your silver! Ante, ya half-wit sell-sword!\"\")<br>\nif (GetInt(game, \"BrothSilver\") &lt; 1) {<br>\nSetCounter (\"BrothSilver\", 0)<br>\nmsg (\"Broth is out of silver pieces!  No one antes.  Roll the dice.\")<br>\nmsg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse {<br>\nChangeCounter (\"DicePot\", 1)<br>\nChangeCounter (\"BrothSilver\", -1)<br>\nmsg (\"Broth antes another silver.\")<br>\nmsg (\"Broth now has <b>{counter:BrothSilver}</b> silver.\")<br>\nmsg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\n}<br>\n}<br>\n}<br>\nif (GetBoolean(game, \"PlayerHeart\")) {<br>\nif (GetBoolean(game, \"MulliganHeart\")) {<br>\nif (GetBoolean(game, \"BrothShield\")) {<br>\nmsg (\"<br><br><b>TWO HEARTS BEAT BROTH'S SHIELD.</b>\")<br>\nmsg (\"Broth: \"Too many hearts for Broth's shield.\"<br>Mulligan: \"I have a heart for your silver, though! Ante, you dumb barbarian!\"\")<br>\nif (GetInt(game, \"BrothSilver\") &lt; 1) {<br>\nSetCounter (\"BrothSilver\", 0)<br>\nmsg (\"Broth is out of silver pieces!  No one antes.  Roll the dice.\")<br>\nmsg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse {<br>\nChangeCounter (\"DicePot\", 1)<br>\nChangeCounter (\"BrothSilver\", -1)<br>\nmsg (\"Broth antes another silver.\")<br>\nmsg (\"Broth now has <b>{counter:BrothSilver}</b> silver.\")<br>\nmsg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\n}<br>\n}<br>\n}<br>\nif (GetBoolean(game, \"PlayerSword\")) {<br>\nif (GetBoolean(game, \"MulliganSword\")) {<br>\nif (GetBoolean(game, \"BrothShield\")) {<br>\nmsg (\"<br><br><b>TWO SWORDS BEAT BROTH'S SHIELD!</b>\")<br>\nmsg (\"Broth: \"Too many sword to block.\"<br>Mulligan: \"Get yer silver in there.\"\")<br>\nif (GetInt(game, \"BrothSilver\") &lt; 1) {<br>\nSetCounter (\"BrothSilver\", 0)<br>\nmsg (\"Broth is out of silver pieces!  No one antes.  Roll the dice.\")<br>\nmsg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse {<br>\nChangeCounter (\"DicePot\", 1)<br>\nChangeCounter (\"BrothSilver\", -1)<br>\nmsg (\"Broth antes another silver.\")<br>\nmsg (\"Broth now has <b>{counter:BrothSilver}</b> silver.\")<br>\nmsg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\n}<br>\n}<br>\n}<br>\nif (GetBoolean(game, \"PlayerShield\")) {<br>\nif (GetBoolean(game, \"MulliganShield\")) {<br>\nif (GetBoolean(game, \"BrothSword\")) {<br>\nmsg (\"<br><br><b>TWO SHIELDS BEAT BROTH'S SWORD!</b>\")<br>\nmsg (\"Broth: \"I can't beat two shield with one sword.\"<br>Mulligan: \"I thought you could kill two men with one blow! Grease the pot, ya mercenary.\"\")<br>\nif (GetInt(game, \"BrothSilver\") &lt; 1) {<br>\nSetCounter (\"BrothSilver\", 0)<br>\nmsg (\"Broth is out of silver pieces!  No one antes.  Roll the dice.\")<br>\nmsg (\"<b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse {<br>\nChangeCounter (\"DicePot\", 1)<br>\nChangeCounter (\"BrothSilver\", -1)<br>\nmsg (\"Broth antes another silver.\")<br>\nmsg (\"Broth now has <b>{counter:BrothSilver}</b> silver.\")<br>\nmsg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\n}<br>\n}<br>\n}<br>\n// LOVE TRIANGLE<br>\nif (GetBoolean(game, \"PlayerHeart\")) {<br>\nif (GetBoolean(game, \"MulliganHeart\")) {<br>\nif (GetBoolean(game, \"BrothHeart\")) {<br>\nmsg (\"<br><br><b>LOVE TRIANGLE!</b>\")<br>\nif (GetInt(game, \"Silver\") &lt; game.DicePot + game.DicePot) {<br>\nmsg (\"Mulligan: Uh oh, looks like little squirrel can't double the pot!\")<br>\nmsg (\"You indeed lack the silver to complete the bet.\")<br>\nmsg (\"No one antes.\")<br>\nmsg (\"<br><b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse if (GetInt(game, \"BrothSilver\") &lt; game.DicePot + game.DicePot) {<br>\nmsg (\"Mulligan: Ar! Looks like our pal Brothy can't double the pot!\")<br>\nmsg (\"Broth indeed lacks the silver to complete the bet.\")<br>\nmsg (\"No one antes.\")<br>\nmsg (\"<br><b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse if (GetInt(game, \"MulliganSilver\") &lt; game.DicePot + game.DicePot) {<br>\nmsg (\"Broth: Mulligan almost out of silver. Heh.<br>Mulligan: Piss off, sword-sitter!\")<br>\nmsg (\"Mulligan indeed lacks the silver to complete the bet.\")<br>\nmsg (\"No one antes.\")<br>\nmsg (\"<br><b>THE POT REMAINS <b>{counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\nelse {<br>\nmsg (\"Mulligan: \"Ho-HO! This is what I play for! E'rryone double the pot! Good luck, ya toads!\"\")<br>\nmsg (\"Broth: \"Big silver in pot now, Broth like.\"\")<br>\nSetCounter (\"DicePotDouble\", game.DicePot + game.DicePot)<br>\nmsg (\"Everyone loudly shoves <b>{counter:DicePotDouble}</b> silver into the middle of the table.\")<br>\nSetCounter (\"BrothSilver\", game.BrothSilver - game.DicePot - game.DicePot)<br>\nSetCounter (\"Silver\", game.Silver - game.DicePot - game.DicePot)<br>\nSetCounter (\"MulliganSilver\", game.MulliganSilver - game.DicePot - game.DicePot)<br>\nSetCounter (\"DicePot\", game.DicePot + game.DicePot + game.DicePot + game.DicePot + game.DicePot + game.DicePot + game.DicePot)<br>\nmsg (\"You now have <b>{counter:Silver}</b> silver.\")<br>\nmsg (\"<b>THE POT IS NOW {counter:DicePot} SILVER.</b>\")<br>\nAddPageLink (OldSoulDiceRoll, OldSoulDiceReroll, \"<b>ROLL THE DICE.</b>\")<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulDiceAnte)<br>\nRemovePageLink (OldSoulDiceRoll, OldSoulReload)<br>\n}<br>\n}<br>\n}<br>\n}</b></b></b></b></b></b></b></b></b></b></b></b></b></b></b></b></b></b></b></b></b></b></b></b></b></b></b></p><b><b>\n\n</b></b>",
      "PostDate": "2017-06-18T02:47:44.0365819Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5dd52e4b-7824-4371-a752-1bdb97272e8c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Khan is asian (mongolian) and arabic word for leader\r\nKing is a(n) (european, egyptian) word for leader\r\n\r\nthey're the same thing... but Khan is much more cool, hehe :D\r\n\r\n(Egyptian leaders are kings and queens - just like in europe, and NOT pharoahs. Pharoah means 'great house', but europeans have wrongly used 'pharaohs' for the names/titles of egyptian leaders, and now it's become popular, even though it's incorrect)\r\n\r\nGreek:\r\nhegemon = warlord\r\nhegemony = rule by warlord (rule by 'force' as you'll see in stupid dictionaries)\r\nhegemonic (adjective: of/like a warlord or of/like qualities of a warlord)\r\n\r\n(these are actual words, only heard in U.S. by politicians talking about political stuff: the hegemonic U.S., the hegemony of the U.S., etc etc etc)\r\n\r\n(so, no, 'hegemon', is not a type of pokemon/digimon, lol ... sighs)\r\n\r\nHegemonKhan = leader of the warlords :D\r\n\r\n(I like history, and I love the mongols, the greatest force of humanity of all time, though the Vikings can be reasonably-arguably tied with mongols, as the two greatest forces of humanity of all time, and too bad they never clashed/fought against each other, sighs. As, as much as I also love the vikings, who're very awesome too, the mongols would still pwn the vikings, hehe)\r\n\r\n(genghis khan: genghis = great, khan = leader, genghis khan = great leader, thus genghis khan is a title, not a name. His actual name was Chinghis or Tetujan.. --- can't spell and too lazy to look up at the moment, lol)\r\n\r\n------\r\n\r\nI certainly don't care what you call me, lol\r\n\r\nthough I'd recommend not typing out hegemonkhan... too long!\r\n\r\nHK, hk, hege, heg, hegemon, khan, kahn, mon, (and some people forget that hegemon has two E's): hag , hage, hagekhan, etc... or... pokemon/digimon (I'll know you're refering to me)... lol\r\n\r\nwhichever is used, I don't care, I'll know it's me, lol.",
      "EditableFormat": "markdown",
      "HTML": "<p>Khan is asian (mongolian) and arabic word for leader<br>\nKing is a(n) (european, egyptian) word for leader</p>\n<p>they're the same thing... but Khan is much more cool, hehe :D</p>\n<p>(Egyptian leaders are kings and queens - just like in europe, and NOT pharoahs. Pharoah means 'great house', but europeans have wrongly used 'pharaohs' for the names/titles of egyptian leaders, and now it's become popular, even though it's incorrect)</p>\n<p>Greek:<br>\nhegemon = warlord<br>\nhegemony = rule by warlord (rule by 'force' as you'll see in stupid dictionaries)<br>\nhegemonic (adjective: of/like a warlord or of/like qualities of a warlord)</p>\n<p>(these are actual words, only heard in U.S. by politicians talking about political stuff: the hegemonic U.S., the hegemony of the U.S., etc etc etc)</p>\n<p>(so, no, 'hegemon', is not a type of pokemon/digimon, lol ... sighs)</p>\n<p>HegemonKhan = leader of the warlords :D</p>\n<p>(I like history, and I love the mongols, the greatest force of humanity of all time, though the Vikings can be reasonably-arguably tied with mongols, as the two greatest forces of humanity of all time, and too bad they never clashed/fought against each other, sighs. As, as much as I also love the vikings, who're very awesome too, the mongols would still pwn the vikings, hehe)</p>\n<p>(genghis khan: genghis = great, khan = leader, genghis khan = great leader, thus genghis khan is a title, not a name. His actual name was Chinghis or Tetujan.. --- can't spell and too lazy to look up at the moment, lol)</p>\n<hr>\n<p>I certainly don't care what you call me, lol</p>\n<p>though I'd recommend not typing out hegemonkhan... too long!</p>\n<p>HK, hk, hege, heg, hegemon, khan, kahn, mon, (and some people forget that hegemon has two E's): hag , hage, hagekhan, etc... or... pokemon/digimon (I'll know you're refering to me)... lol</p>\n<p>whichever is used, I don't care, I'll know it's me, lol.</p>\n\n",
      "PostDate": "2017-06-18T02:48:57.5598016Z",
      "LastEditDate": "2017-06-18T03:01:20.2446331Z",
      "link": null
    },
    {
      "PostId": "32888625-4d54-4378-8723-d2fa7fda4309",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the 'ClearScreen' Function is just for clearing the screen\r\n\r\nyou'd certainly need to actually refresh the page too (re-do/re-call all of the page's scripts so whatever that needs to be done gets done and whatever needs to be displayed get displayed, effectively \"refreshing\" the page), of course.\r\n\r\n------\r\n\r\nalso, when you want to post code (or walls of text... mainly my problem/issue/usage/doing, lol), you do this (as it preserves all of the formatting: indenting and etc):\r\n\r\n```\r\nm```\r\n(paste your code, or walls of text lol, here)\r\nm```\r\n```\r\n\r\nbut without the m's in front, which will produce this:\r\n\r\n```\r\n(paste your code, or walls of text lol, here)\r\n```\r\n\r\nthose weird characters/symbols is the keyboard key above the left TAB key and to the left of the '1' key (of the horizontal row of numbers at the top of your keyboard).",
      "EditableFormat": "markdown",
      "HTML": "<p>the 'ClearScreen' Function is just for clearing the screen</p>\n<p>you'd certainly need to actually refresh the page too (re-do/re-call all of the page's scripts so whatever that needs to be done gets done and whatever needs to be displayed get displayed, effectively \"refreshing\" the page), of course.</p>\n<hr>\n<p>also, when you want to post code (or walls of text... mainly my problem/issue/usage/doing, lol), you do this (as it preserves all of the formatting: indenting and etc):</p>\n<pre><code>m```\n(paste your code, or walls of text lol, here)\nm```\n</code></pre>\n<p>but without the m's in front, which will produce this:</p>\n<pre><code>(paste your code, or walls of text lol, here)\n</code></pre>\n<p>those weird characters/symbols is the keyboard key above the left TAB key and to the left of the '1' key (of the horizontal row of numbers at the top of your keyboard).</p>\n\n",
      "PostDate": "2017-06-18T02:56:55.3735138Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5cf415c2-be46-4943-8e8b-f9998fa06ed8",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\"This is why I make alternating pages when counters/flags/etc. are changing. You can't refresh a page if it reintroduces the conditions you already set. If you keep refreshing a page that adds a gold to your coin purse, you just keep getting gold. Alternating pages fixes that. (Major Powers)\"\r\n\r\nthat's certainly true, you'd NOT want to re-run/re-do these Scripts for your effect of \"refreshing\" the page!\r\n\r\n--------\r\n\r\nI'm too lazy at the moment to try to look up how to refresh a Page...\r\n\r\nbut I think you can probably move the player to the same page to \"refresh\" the page, as it'll do all the page's scripts again, as it does when you move to any page, as this is built into quest (which I'm too lazy to look up and see how it does the page's scripts upon going to a new page, meh):\r\n\r\nplayer.parent = NAME_OF_SAME_PAGE_YOUR_CURRENTLY_WITHIN\r\n// or (maybe the above wouldn't work in scripting for re-activing, \"refreshing\", the Page's scripts):\r\nMoveObject (player, NAME_OF_SAME_PAGE_YOUR_CURRENTLY_WITHIN) // or is it: MovePlayer (NAME_OF_SAME_PAGE_YOUR_CURRENTLY_WITHIN), meh (whatever is the name of this moving-helper Function in Game Book)\r\n\r\n// also, you'd still have the issue of your (well pointed out issue of any) added scripts that you don't want to be re-done upon \"refreshing\" the page.\r\n\r\n// does the Game Book have the 'firsttime/otherwise' Script/Function ???\r\n// you can use this if it has it, though this would make the nested scripts be a one-time only occurence\r\n\r\n// otherwise, you can create your own control for it yourself, for example:\r\n\r\n```\r\n'NAME_OF_YOUR_STARTING_PAGE' Page -> 'Page' Tab -> Page Type: [script] or [text+script]\r\n\r\ngame.state = 0 // GUI/Editor: add new script -> 'variables' section/category -> 'set a variable or attribute' Script -> set variable game.state = [EXPRESSION] 0\r\n\r\nyour various 'NAME_OF_WHATEVER_PAGE' Pages -> 'Page' Tab -> Page Type: [script] or [text+script]\r\n\r\nif (game.state = 99) {\r\n  player.currency = player.currency + 50\r\n\r\n} else if (game.state = 50) {\r\n  player.currency = player.currency - 200\r\n} else if (game.state = 0) {\r\n  do (this, \"full_page_description\")\r\n} else if (game.state = 1) {\r\n  do (this, \"quick_page_description\")\r\n}\r\n// probably you want to return the 'game.state' to some default value for before when you go to move again:\r\n// game.state = 0\r\n\r\n// and of course, within your various Pages, you'll have to control/manage/adjust/change (via scripting) what 'game.state' you're in (game.state = ?) as you want/need such to be in (or not in) such 'game.state' Values/states\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>\"This is why I make alternating pages when counters/flags/etc. are changing. You can't refresh a page if it reintroduces the conditions you already set. If you keep refreshing a page that adds a gold to your coin purse, you just keep getting gold. Alternating pages fixes that. (Major Powers)\"</p>\n<p>that's certainly true, you'd NOT want to re-run/re-do these Scripts for your effect of \"refreshing\" the page!</p>\n<hr>\n<p>I'm too lazy at the moment to try to look up how to refresh a Page...</p>\n<p>but I think you can probably move the player to the same page to \"refresh\" the page, as it'll do all the page's scripts again, as it does when you move to any page, as this is built into quest (which I'm too lazy to look up and see how it does the page's scripts upon going to a new page, meh):</p>\n<p>player.parent = NAME_OF_SAME_PAGE_YOUR_CURRENTLY_WITHIN<br>\n// or (maybe the above wouldn't work in scripting for re-activing, \"refreshing\", the Page's scripts):<br>\nMoveObject (player, NAME_OF_SAME_PAGE_YOUR_CURRENTLY_WITHIN) // or is it: MovePlayer (NAME_OF_SAME_PAGE_YOUR_CURRENTLY_WITHIN), meh (whatever is the name of this moving-helper Function in Game Book)</p>\n<p>// also, you'd still have the issue of your (well pointed out issue of any) added scripts that you don't want to be re-done upon \"refreshing\" the page.</p>\n<p>// does the Game Book have the 'firsttime/otherwise' Script/Function ???<br>\n// you can use this if it has it, though this would make the nested scripts be a one-time only occurence</p>\n<p>// otherwise, you can create your own control for it yourself, for example:</p>\n<pre><code>'NAME_OF_YOUR_STARTING_PAGE' Page -&gt; 'Page' Tab -&gt; Page Type: [script] or [text+script]\n\ngame.state = 0 // GUI/Editor: add new script -&gt; 'variables' section/category -&gt; 'set a variable or attribute' Script -&gt; set variable game.state = [EXPRESSION] 0\n\nyour various 'NAME_OF_WHATEVER_PAGE' Pages -&gt; 'Page' Tab -&gt; Page Type: [script] or [text+script]\n\nif (game.state = 99) {\n  player.currency = player.currency + 50\n\n} else if (game.state = 50) {\n  player.currency = player.currency - 200\n} else if (game.state = 0) {\n  do (this, \"full_page_description\")\n} else if (game.state = 1) {\n  do (this, \"quick_page_description\")\n}\n// probably you want to return the 'game.state' to some default value for before when you go to move again:\n// game.state = 0\n\n// and of course, within your various Pages, you'll have to control/manage/adjust/change (via scripting) what 'game.state' you're in (game.state = ?) as you want/need such to be in (or not in) such 'game.state' Values/states\n</code></pre>\n\n",
      "PostDate": "2017-06-18T03:05:11.7473408Z",
      "LastEditDate": "2017-06-18T03:30:05.8117422Z",
      "link": null
    },
    {
      "PostId": "2ba065bf-7f8e-44f2-a58c-53eea2189e64",
      "UserId": 185415,
      "Username": "major powers",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5a2fab185e3766767ad57fd12f0b369a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah, I know what Khans are and I love them.  Now check out my code dump above.  Look at what I did to myself.  I made all that bullshit for a 3 player, three-sided dice game.  I wrote that whole thing out by hand using gamebook bullshit and not knowing how to code.  There has to be a way to write that in like 1/3rd of the code.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah, I know what Khans are and I love them.  Now check out my code dump above.  Look at what I did to myself.  I made all that bullshit for a 3 player, three-sided dice game.  I wrote that whole thing out by hand using gamebook bullshit and not knowing how to code.  There has to be a way to write that in like 1/3rd of the code.</p>\n\n",
      "PostDate": "2017-06-18T03:32:06.4117269Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6ac44343-502c-4d67-9e7a-79192215fec3",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "as for 'refactoring' (stream-lining, making better: more concise/effcient) your code:\r\n\r\nunfortunately, it's more of an art (takes a lot of experience), as we're talking about design...\r\n(this is the next stuff you start to learn after you learn the basics of scripting and using the language in actual programming course)\r\n\r\nwhich, I don't have much experience with myself.\r\n\r\nyou got to try to think in a 'top-down (top to down)' approach...\r\n\r\nwith the upper stuff doing very little, and the bottom-most stuff doing all the heavy duty actual stuff.\r\n\r\nmy 'python language' book from/for my class required material, has a walkthrough on making a somewhat similar game (I think it's a volleyball sim), explaining each step and the thought process of it, but that'd be too much for me to try to write/post here...\r\n\r\nin general it's something like this:\r\n\r\nthe highest level handles whether you want to do another game or not:quit, and displays your score (games/matches won, games/matches lost, games/matches tied -- whatever is the correct volleyball terminology lol)\r\n\r\nthe next level handles your game/match (the rounds, management of all the process/stuff that happens in a round like who's serving and etc - but still not the actual bulk work of equations/mechanics/calculations/attribute-stat-adjustments of the stuff you do in a round, until you win, lose, or tie the game/match - repeating rounds until done)\r\n\r\nlowest level handles all the actual action/stuff of the volleyball game (for example your action-choices and the coding for them as well as the A.I./random controls for its actions and the coding for them) ... like 90% of everything is done here.\r\n\r\n----------------\r\n\r\nyou can change these from Boolean Attributes to String Attributes, which will/should reduce some of your code:\r\n\r\nSetFlagOff (\"PlayerHeart\")\r\nSetFlagOff (\"PlayerSword\")\r\nSetFlagOff (\"PlayerShield\")\r\nto\r\nplayer.card = \"unknown\" // or: null // null = (blank) // and when you roll, you set it to the card you rolled: player.card = \"heart\" // or: player.card = \"sword\" // or: player.card = \"shield\"\r\n(and adjust the rest of your mass of code... for it)\r\n\r\nSetFlagOff (\"MulliganHeart\")\r\nSetFlagOff (\"MulliganSword\")\r\nSetFlagOff (\"MulliganShield\")\r\nto\r\ngame.mulligan_card = \"unknown\"\r\n\r\nSetFlagOff (\"BrothHeart\")\r\nSetFlagOff (\"BrothSword\")\r\nSetFlagOff (\"BrothShield\")\r\nto\r\ngame.broth_card = \"unknown\"",
      "EditableFormat": "markdown",
      "HTML": "<p>as for 'refactoring' (stream-lining, making better: more concise/effcient) your code:</p>\n<p>unfortunately, it's more of an art (takes a lot of experience), as we're talking about design...<br>\n(this is the next stuff you start to learn after you learn the basics of scripting and using the language in actual programming course)</p>\n<p>which, I don't have much experience with myself.</p>\n<p>you got to try to think in a 'top-down (top to down)' approach...</p>\n<p>with the upper stuff doing very little, and the bottom-most stuff doing all the heavy duty actual stuff.</p>\n<p>my 'python language' book from/for my class required material, has a walkthrough on making a somewhat similar game (I think it's a volleyball sim), explaining each step and the thought process of it, but that'd be too much for me to try to write/post here...</p>\n<p>in general it's something like this:</p>\n<p>the highest level handles whether you want to do another game or not:quit, and displays your score (games/matches won, games/matches lost, games/matches tied -- whatever is the correct volleyball terminology lol)</p>\n<p>the next level handles your game/match (the rounds, management of all the process/stuff that happens in a round like who's serving and etc - but still not the actual bulk work of equations/mechanics/calculations/attribute-stat-adjustments of the stuff you do in a round, until you win, lose, or tie the game/match - repeating rounds until done)</p>\n<p>lowest level handles all the actual action/stuff of the volleyball game (for example your action-choices and the coding for them as well as the A.I./random controls for its actions and the coding for them) ... like 90% of everything is done here.</p>\n<hr>\n<p>you can change these from Boolean Attributes to String Attributes, which will/should reduce some of your code:</p>\n<p>SetFlagOff (\"PlayerHeart\")<br>\nSetFlagOff (\"PlayerSword\")<br>\nSetFlagOff (\"PlayerShield\")<br>\nto<br>\nplayer.card = \"unknown\" // or: null // null = (blank) // and when you roll, you set it to the card you rolled: player.card = \"heart\" // or: player.card = \"sword\" // or: player.card = \"shield\"<br>\n(and adjust the rest of your mass of code... for it)</p>\n<p>SetFlagOff (\"MulliganHeart\")<br>\nSetFlagOff (\"MulliganSword\")<br>\nSetFlagOff (\"MulliganShield\")<br>\nto<br>\ngame.mulligan_card = \"unknown\"</p>\n<p>SetFlagOff (\"BrothHeart\")<br>\nSetFlagOff (\"BrothSword\")<br>\nSetFlagOff (\"BrothShield\")<br>\nto<br>\ngame.broth_card = \"unknown\"</p>\n\n",
      "PostDate": "2017-06-18T04:20:43.3449959Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cfc5cda9-940d-4dea-b007-8738ff55189e",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "also, look for any redundencies of actions/events of your game's/round's parts/designs and/or code parts:\r\n\r\nfor example, instead of coding for each of them winning/losing/tying, instead, code for what happens when you: win, lose, or tie, and have the scripting of each of these handles who (of broth and/or mulligan) wins, losses, and ties, aka, do whatever you want based upon that",
      "EditableFormat": "markdown",
      "HTML": "<p>also, look for any redundencies of actions/events of your game's/round's parts/designs and/or code parts:</p>\n<p>for example, instead of coding for each of them winning/losing/tying, instead, code for what happens when you: win, lose, or tie, and have the scripting of each of these handles who (of broth and/or mulligan) wins, losses, and ties, aka, do whatever you want based upon that</p>\n\n",
      "PostDate": "2017-06-18T04:33:52.648329Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "166e064c-58c1-47a8-8a85-16485e64535e",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "this most likely won't be of any help to you:\r\n\r\nhttp://textadventures.co.uk/forum/games/topic/4094/rock-paper-scissors-game-by-hk\r\n\r\nI made this back when i was learning to code, and it's far more simple than your game, and probably there's a way to make it more efficient... maybe I can figure out how now or maybe not, lol.\r\n\r\nI still struggle with re-factoring and good/efficient designs myself... I'm still a coding and programming noob, sighs.",
      "EditableFormat": "markdown",
      "HTML": "<p>this most likely won't be of any help to you:</p>\n<p>http://textadventures.co.uk/forum/games/topic/4094/rock-paper-scissors-game-by-hk</p>\n<p>I made this back when i was learning to code, and it's far more simple than your game, and probably there's a way to make it more efficient... maybe I can figure out how now or maybe not, lol.</p>\n<p>I still struggle with re-factoring and good/efficient designs myself... I'm still a coding and programming noob, sighs.</p>\n\n",
      "PostDate": "2017-06-18T04:41:09.8000167Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8b27b7c2-b440-430e-a03c-cc180526b2b6",
      "UserId": 185415,
      "Username": "major powers",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5a2fab185e3766767ad57fd12f0b369a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I love that.  You're using switches.  But I still have to track if someone gets to 0 money in the game --- that's the big kicker, I need every condition of the game to account for how much money everyone has.  If any one of the possible rolls are rolled where someone runs out of money, the game has to end. And I can't find a universal way to write it.  I'm writing it in for every \"condition.\"   That's really what makes the code so long...  Ouch.  I don't care, honestly, it works and I've moved on, I'm just ashamed because I know someone could look at that and go, \"wow you all you have to do is x, y, and z!\" ",
      "EditableFormat": "markdown",
      "HTML": "<p>I love that.  You're using switches.  But I still have to track if someone gets to 0 money in the game --- that's the big kicker, I need every condition of the game to account for how much money everyone has.  If any one of the possible rolls are rolled where someone runs out of money, the game has to end. And I can't find a universal way to write it.  I'm writing it in for every \"condition.\"   That's really what makes the code so long...  Ouch.  I don't care, honestly, it works and I've moved on, I'm just ashamed because I know someone could look at that and go, \"wow you all you have to do is x, y, and z!\"</p>\n\n",
      "PostDate": "2017-06-18T05:14:44.529891Z",
      "LastEditDate": "2017-06-18T05:15:46.9765454Z",
      "link": null
    },
    {
      "PostId": "8c2c226f-4db5-469a-8581-2b5cd0e2972e",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "try to look for redundency in your conditions and try come up with ways to reduce your (redundant) conditions to fewer (or best: 1) condition(s). Try to think more in terms of macro (top to down / top-down) design, try to completely re-think/re-design your entire code structure/design, completely new/different from the way you went about it and have it currently as, try to think of how to do all of your coding based upon something like this:\r\n\r\n```\r\nupper-most (top-most level/layer/function(s)/etc)\r\n1. handling continuing/quiting and/or displayment of score (wins, losses, ties of all of the card players or just of you)\r\n2. handling the game/round/hand sequence/process, and/or earnings/losses (of each of the card players and the game pile)\r\n3. handling the actions/mechanics of the various processes/sequence of the game/round\r\nlower-most (bottom-most level/layer/function(s)/etc)\r\n```\r\n\r\nas, this can greatly reduce all that redundency and mass of code you got... if you (or I too lol) can figure it out.... or maybe one of the good programmers can help us figure out how to do such a design... lol\r\n\r\n----------\r\n\r\nyou could also do something like this:\r\n\r\n```\r\ngame.winner = \"unknown\"\r\ngame.loser = \"unknown\"\r\ngame.tie_list = split (\"unknown\", \";\")\r\n\r\n// playing the game/round/hand, you determine who wins, losses, and/or ties (#2 or #3 in the top-down design), and set the Attributes accordingly\r\n\r\n// in #2 of the top-down design:\r\n// for each of your conditions: you'd just call this function as one of your scripts:\r\n<function name=\"currency_function\">\r\n  if (game.winner = \"player\") {\r\n    player.currency = player.currency + game.currency_pile\r\n    game.mulligan_currency = game.mulligan_currency - game.currency_pile\r\n    game.broth_currency = game.broth_currency - game.currency_pile\r\n  } else if (game.winner = \"mulligan\") {\r\n    game.mulligan_currency = game.mulligan_currency + game.currency_pile\r\n    player.currency = player.currency - game.currency_pile\r\n    game.broth_currency = game.broth_currency - game.currency_pile\r\n  } else if (game.winner = \"broth\") {\r\n    game.broth_currency = game.broth_currency + game.currency_pile\r\n    player.currency = player.currency - game.currency_pile\r\n    game.mulligan_currency = game.mulligan_currency - game.currency_pile\r\n  }\r\n  // then this is done (doing this comment to show that this is a separate 'if' block from the one above):\r\n  if (player.currency < 0) {\r\n    // blah\r\n    // finish (as the game is over, unless you got a way to get more currency to keep playing)\r\n  } else if (game.broth_currency < 0) {\r\n    // blah\r\n  } else if (game.broth_currency < 0) {\r\n    // blah\r\n  }\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>try to look for redundency in your conditions and try come up with ways to reduce your (redundant) conditions to fewer (or best: 1) condition(s). Try to think more in terms of macro (top to down / top-down) design, try to completely re-think/re-design your entire code structure/design, completely new/different from the way you went about it and have it currently as, try to think of how to do all of your coding based upon something like this:</p>\n<pre><code>upper-most (top-most level/layer/function(s)/etc)\n1. handling continuing/quiting and/or displayment of score (wins, losses, ties of all of the card players or just of you)\n2. handling the game/round/hand sequence/process, and/or earnings/losses (of each of the card players and the game pile)\n3. handling the actions/mechanics of the various processes/sequence of the game/round\nlower-most (bottom-most level/layer/function(s)/etc)\n</code></pre>\n<p>as, this can greatly reduce all that redundency and mass of code you got... if you (or I too lol) can figure it out.... or maybe one of the good programmers can help us figure out how to do such a design... lol</p>\n<hr>\n<p>you could also do something like this:</p>\n<pre><code>game.winner = \"unknown\"\ngame.loser = \"unknown\"\ngame.tie_list = split (\"unknown\", \";\")\n\n// playing the game/round/hand, you determine who wins, losses, and/or ties (#2 or #3 in the top-down design), and set the Attributes accordingly\n\n// in #2 of the top-down design:\n// for each of your conditions: you'd just call this function as one of your scripts:\n&lt;function name=\"currency_function\"&gt;\n  if (game.winner = \"player\") {\n    player.currency = player.currency + game.currency_pile\n    game.mulligan_currency = game.mulligan_currency - game.currency_pile\n    game.broth_currency = game.broth_currency - game.currency_pile\n  } else if (game.winner = \"mulligan\") {\n    game.mulligan_currency = game.mulligan_currency + game.currency_pile\n    player.currency = player.currency - game.currency_pile\n    game.broth_currency = game.broth_currency - game.currency_pile\n  } else if (game.winner = \"broth\") {\n    game.broth_currency = game.broth_currency + game.currency_pile\n    player.currency = player.currency - game.currency_pile\n    game.mulligan_currency = game.mulligan_currency - game.currency_pile\n  }\n  // then this is done (doing this comment to show that this is a separate 'if' block from the one above):\n  if (player.currency &lt; 0) {\n    // blah\n    // finish (as the game is over, unless you got a way to get more currency to keep playing)\n  } else if (game.broth_currency &lt; 0) {\n    // blah\n  } else if (game.broth_currency &lt; 0) {\n    // blah\n  }\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2017-06-18T05:46:14.9295871Z",
      "LastEditDate": "2017-06-18T06:04:42.516483Z",
      "link": null
    }
  ]
}
