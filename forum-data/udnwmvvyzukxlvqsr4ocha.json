{
  "Topic": {
    "TopicId": "udnwmvvyzukxlvqsr4ocha",
    "ForumId": "10",
    "Title": "A random security colour code.",
    "LastUpdated": "2017-11-13T20:54:42.9663058Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "79c2414e-7b93-49d6-9475-a5ef40b23e62",
      "UserId": 327619,
      "Username": "-=Darchy=-",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi everyone.\r\n\r\nSo, I have been playing around for a while now and with help from this forum and its crew, I have come along in leaps and bounds and hopefully will be able to make a released IF very soon.\r\n\r\nNow comes the ask. I have created a snippet of code here that converts random numbers to colour codes and it works, but I am wondering if I could have done it in a more efficient way. Please forgive the // notes.\r\n\r\nThanks in advance,\r\n-=Darchy=-\r\n```\r\n //\r\n// Create the list from Black to Silver.\r\n//\r\nc_list = Newlist()\r\nlist add (c_list, \"Black\")\r\nlist add (c_list, \"Brown\")\r\nlist add (c_list, \"Red\")\r\nlist add (c_list, \"Orange\")\r\nlist add (c_list, \"Yellow\")\r\nlist add (c_list, \"Green\")\r\nlist add (c_list, \"Blue\")\r\nlist add (c_list, \"Violet\")\r\nlist add (c_list, \"Grey\")\r\nlist add (c_list, \"White\")\r\nlist add (c_list, \"Gold\")\r\nlist add (c_list, \"Silver\")\r\n//\r\n// Generate 4 random numbers to be assigned to colour list - Remember to use zero!!\r\n//\r\ncol_gen_1 = GetRandomInt(0,11)\r\ncol_gen_2 = GetRandomInt(0,11)\r\ncol_gen_3 = GetRandomInt(0,11)\r\ncol_gen_4 = GetRandomInt(0,11)\r\nmsg (col_gen_1)\r\nmsg (col_gen_2)\r\nmsg (col_gen_3)\r\nmsg (col_gen_4)\r\n//\r\n// Below Tests that the correct colours are chosen - it works,\r\n//\r\n// msg (code_list)\r\n// msg (ListItem(c_list,col_gen_1))\r\n// msg (ListItem(c_list,col_gen_2))\r\n// msg (ListItem(c_list,col_gen_3))\r\n// msg (ListItem(c_list,col_gen_4))\r\n//\r\n// Convert the random numbers into to Colour Codes\r\n//\r\nthe_code_1 = (ListItem(c_list,col_gen_1))\r\nthe_code_2 = (ListItem(c_list,col_gen_2))\r\nthe_code_3 = (ListItem(c_list,col_gen_3))\r\nthe_code_4 = (ListItem(c_list,col_gen_4))\r\n//\r\n// Show the list of colours are correct then create a 4 colour string (including spaces)\r\n//\r\nmsg (the_code_1)\r\nmsg (the_code_2)\r\nmsg (the_code_3)\r\nmsg (the_code_4)\r\nmain_code = the_code_1 + \" \" + the_code_2 +\" \" +  the_code_3 +\" \" +  the_code_4\r\n//\r\n// Show the final outcome\r\n//\r\nmsg (main_code)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi everyone.</p>\n<p>So, I have been playing around for a while now and with help from this forum and its crew, I have come along in leaps and bounds and hopefully will be able to make a released IF very soon.</p>\n<p>Now comes the ask. I have created a snippet of code here that converts random numbers to colour codes and it works, but I am wondering if I could have done it in a more efficient way. Please forgive the // notes.</p>\n<p>Thanks in advance,<br>\n-=Darchy=-</p>\n<pre><code> //\n// Create the list from Black to Silver.\n//\nc_list = Newlist()\nlist add (c_list, \"Black\")\nlist add (c_list, \"Brown\")\nlist add (c_list, \"Red\")\nlist add (c_list, \"Orange\")\nlist add (c_list, \"Yellow\")\nlist add (c_list, \"Green\")\nlist add (c_list, \"Blue\")\nlist add (c_list, \"Violet\")\nlist add (c_list, \"Grey\")\nlist add (c_list, \"White\")\nlist add (c_list, \"Gold\")\nlist add (c_list, \"Silver\")\n//\n// Generate 4 random numbers to be assigned to colour list - Remember to use zero!!\n//\ncol_gen_1 = GetRandomInt(0,11)\ncol_gen_2 = GetRandomInt(0,11)\ncol_gen_3 = GetRandomInt(0,11)\ncol_gen_4 = GetRandomInt(0,11)\nmsg (col_gen_1)\nmsg (col_gen_2)\nmsg (col_gen_3)\nmsg (col_gen_4)\n//\n// Below Tests that the correct colours are chosen - it works,\n//\n// msg (code_list)\n// msg (ListItem(c_list,col_gen_1))\n// msg (ListItem(c_list,col_gen_2))\n// msg (ListItem(c_list,col_gen_3))\n// msg (ListItem(c_list,col_gen_4))\n//\n// Convert the random numbers into to Colour Codes\n//\nthe_code_1 = (ListItem(c_list,col_gen_1))\nthe_code_2 = (ListItem(c_list,col_gen_2))\nthe_code_3 = (ListItem(c_list,col_gen_3))\nthe_code_4 = (ListItem(c_list,col_gen_4))\n//\n// Show the list of colours are correct then create a 4 colour string (including spaces)\n//\nmsg (the_code_1)\nmsg (the_code_2)\nmsg (the_code_3)\nmsg (the_code_4)\nmain_code = the_code_1 + \" \" + the_code_2 +\" \" +  the_code_3 +\" \" +  the_code_4\n//\n// Show the final outcome\n//\nmsg (main_code)\n</code></pre>\n\n",
      "PostDate": "2017-11-13T20:54:42.9663058Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f76d1732-4bb9-4a7b-ac9c-e405e8ec592b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Not sure if you're using the intermediate variables for something else, but if not you could do something like:\r\n```\r\nc_list = Split(\"Black;Brown;Red;Orange;Yellow;Green;Blue;Violet;Grey;White;Gold;Silver\", \";\")\r\nthe_code = NewStringList()\r\nfor (i, 1, 4) {\r\n  list add (the_code, PickOneString(c_list))\r\n}\r\n\r\n// For demonstration, the individual colours\r\n//\r\nmsg (the_code[0])\r\nmsg (the_code[1])\r\nmsg (the_code[2])\r\nmsg (the_code[3])\r\n\r\n// And the final code\r\n//\r\nmain_code = Join (the_code, \" \")\r\nmsg (main_code)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Not sure if you're using the intermediate variables for something else, but if not you could do something like:</p>\n<pre><code>c_list = Split(\"Black;Brown;Red;Orange;Yellow;Green;Blue;Violet;Grey;White;Gold;Silver\", \";\")\nthe_code = NewStringList()\nfor (i, 1, 4) {\n  list add (the_code, PickOneString(c_list))\n}\n\n// For demonstration, the individual colours\n//\nmsg (the_code[0])\nmsg (the_code[1])\nmsg (the_code[2])\nmsg (the_code[3])\n\n// And the final code\n//\nmain_code = Join (the_code, \" \")\nmsg (main_code)\n</code></pre>\n\n",
      "PostDate": "2017-11-13T22:18:40.3928643Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8f10fbdb-90b6-4dce-a080-bad915fb23b9",
      "UserId": 327619,
      "Username": "-=Darchy=-",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you mrangel! - The intermediate variables I used are just my way of singurlarly checking individal parts then expanding upon them. ( I don't know if this is good practice or not)\r\n\r\nYour example does **exactly** what I was trying to do AND is a lot shorter. I am assuming that if I change the \"for (i, 1, 4)...\" to \"for (i, 1, 5 etc)\" - I can create a 5 or more colour code?\r\n\r\nI appreciate the help,\r\n\r\n-=Darchy=-",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you mrangel! - The intermediate variables I used are just my way of singurlarly checking individal parts then expanding upon them. ( I don't know if this is good practice or not)</p>\n<p>Your example does <strong>exactly</strong> what I was trying to do AND is a lot shorter. I am assuming that if I change the \"for (i, 1, 4)...\" to \"for (i, 1, 5 etc)\" - I can create a 5 or more colour code?</p>\n<p>I appreciate the help,</p>\n<p>-=Darchy=-</p>\n\n",
      "PostDate": "2017-11-13T23:38:31.448916Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "845be398-5c0c-4654-8fa2-e94011d38b2b",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Any code that helps you de-bug a program is good code... (or practice...)\r\nAlways keep the // notes... you never know if you will go back later for a \"trick\" you did on an old program, and need to use the trick again... Or if you want to revamp an old program to make it new, then have no idea what you did the first time and would find it easer to just stare all over...\r\nThe person that learns the least in programming is someone that makes no mistakes... (think about it...)\r\nShorter code is not always the best code, because it would be the hardest to de-bug...\r\nLearn to write bigger first, then learn to optimize later...\r\nThen when you get good, really good, you can write optimized code first...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Any code that helps you de-bug a program is good code... (or practice...)<br>\nAlways keep the // notes... you never know if you will go back later for a \"trick\" you did on an old program, and need to use the trick again... Or if you want to revamp an old program to make it new, then have no idea what you did the first time and would find it easer to just stare all over...<br>\nThe person that learns the least in programming is someone that makes no mistakes... (think about it...)<br>\nShorter code is not always the best code, because it would be the hardest to de-bug...<br>\nLearn to write bigger first, then learn to optimize later...<br>\nThen when you get good, really good, you can write optimized code first...</p>\n\n",
      "PostDate": "2017-11-14T02:54:17.9566239Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "822c40f4-cb96-4381-9946-b99054c9ca71",
      "UserId": 327619,
      "Username": "-=Darchy=-",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wise words indeed DarkLizerd. I remember when I first started to program using GFA basic - REM statements all over the place :D",
      "EditableFormat": "markdown",
      "HTML": "<p>Wise words indeed DarkLizerd. I remember when I first started to program using GFA basic - REM statements all over the place :D</p>\n\n",
      "PostDate": "2017-11-14T07:28:47.7716577Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "de6a5d40-c9ad-4496-bb4a-039c4b29be11",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks fellow Basic programmer...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks fellow Basic programmer...</p>\n\n",
      "PostDate": "2017-11-14T17:05:27.4815124Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "644b6ed0-ebb8-4ec8-ab01-904310fbf2d0",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is this to be used to randomize the colors of the game?",
      "EditableFormat": "markdown",
      "HTML": "<p>Is this to be used to randomize the colors of the game?</p>\n\n",
      "PostDate": "2017-11-14T18:36:04.5716373Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2a20ae5f-f0a9-466e-9646-0eb0de983925",
      "UserId": 5574,
      "Username": "R2T1",
      "AvatarUrl": "http://i.imgur.com/32ogfqMb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Looks like resistor colour codes to me. The first 10 are numbers and the Gold & Silver represent percentile tolerances.",
      "EditableFormat": "markdown",
      "HTML": "<p>Looks like resistor colour codes to me. The first 10 are numbers and the Gold &amp; Silver represent percentile tolerances.</p>\n\n",
      "PostDate": "2017-11-15T06:04:27.9763989Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f8d6cb35-0aea-4ee6-aa25-6fbd16012930",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\"Bad Boys Rape Our Young Girls, But Violet Gives Willingly...\"\r\nI did not catch that before!\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>\"Bad Boys Rape Our Young Girls, But Violet Gives Willingly...\"<br>\nI did not catch that before!</p>\n\n",
      "PostDate": "2017-11-15T17:22:22.8859882Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "aa341f2d-3401-4c2a-8f18-d029343315cd",
      "UserId": 327619,
      "Username": "-=Darchy=-",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@jmnevil54 - It can be used to do a few things, like print the colour of the given random colour in the random colour chosen by adding this code to it:\r\n```\r\nstr_0 = \"{color:\" + the_code[0] + \":\" + the_code[0] + \"}\"\r\nmsg (str_0)\r\n```\r\nbut in the initial instance I am using it for a random colour code generator.\r\n\r\n@R2T1 and @DarkLizerd - it is indeed the **Resistor Colour Code** - Well spotted guys! \r\n\r\nall the best,\r\n-=Darchy=-",
      "EditableFormat": "markdown",
      "HTML": "<p>@jmnevil54 - It can be used to do a few things, like print the colour of the given random colour in the random colour chosen by adding this code to it:</p>\n<pre><code>str_0 = \"{color:\" + the_code[0] + \":\" + the_code[0] + \"}\"\nmsg (str_0)\n</code></pre>\n<p>but in the initial instance I am using it for a random colour code generator.</p>\n<p>@R2T1 and @DarkLizerd - it is indeed the <strong>Resistor Colour Code</strong> - Well spotted guys!</p>\n<p>all the best,<br>\n-=Darchy=-</p>\n\n",
      "PostDate": "2017-11-16T09:06:03.0068976Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "25bb7099-31ac-4601-9c56-1e731142ca18",
      "UserId": 327619,
      "Username": "-=Darchy=-",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have altered the original code I was given from @mrangel, to produce a new list that is coloured using the randomly chosen colours - please forgive me my folly, but I find this so addictive.\r\n```\r\n// Set up random colour code generator.\r\n//\r\ngame.c_list = Split(\"Black;Brown;Red;Orange;Yellow;Green;Blue;Violet;Grey;White;Gold;Silver\", \";\")\r\ngame.the_code = NewStringList()\r\n//\r\n// Create secondary list to add the colours.\r\ngame.colour_list = NewStringList()\r\n//\r\nfor (i, 1, 4) {\r\n  list add (game.the_code, PickOneString(game.c_list))\r\n}\r\n//\r\n// Now to add the colours.\r\nlist add (game.colour_list, \"{color:\" + game.the_code[0] + \":\" + game.the_code[0] + \"}\")\r\nlist add (game.colour_list, \"{color:\" + game.the_code[1] + \":\" + game.the_code[1] + \"}\")\r\nlist add (game.colour_list, \"{color:\" + game.the_code[2] + \":\" + game.the_code[2] + \"}\")\r\nlist add (game.colour_list, \"{color:\" + game.the_code[3] + \":\" + game.the_code[3] + \"}\")\r\ngame.main_code = Join (game.the_code, \" \")\r\n//\r\n//  Make the colour string.\r\ngame.main_colour = Join (game.colour_list, \" \")\r\n//\r\nmsg (game.main_code)\r\n//\r\n// Print the coloured string.\r\nmsg (game.main_colour)\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I have altered the original code I was given from @mrangel, to produce a new list that is coloured using the randomly chosen colours - please forgive me my folly, but I find this so addictive.</p>\n<pre><code>// Set up random colour code generator.\n//\ngame.c_list = Split(\"Black;Brown;Red;Orange;Yellow;Green;Blue;Violet;Grey;White;Gold;Silver\", \";\")\ngame.the_code = NewStringList()\n//\n// Create secondary list to add the colours.\ngame.colour_list = NewStringList()\n//\nfor (i, 1, 4) {\n  list add (game.the_code, PickOneString(game.c_list))\n}\n//\n// Now to add the colours.\nlist add (game.colour_list, \"{color:\" + game.the_code[0] + \":\" + game.the_code[0] + \"}\")\nlist add (game.colour_list, \"{color:\" + game.the_code[1] + \":\" + game.the_code[1] + \"}\")\nlist add (game.colour_list, \"{color:\" + game.the_code[2] + \":\" + game.the_code[2] + \"}\")\nlist add (game.colour_list, \"{color:\" + game.the_code[3] + \":\" + game.the_code[3] + \"}\")\ngame.main_code = Join (game.the_code, \" \")\n//\n//  Make the colour string.\ngame.main_colour = Join (game.colour_list, \" \")\n//\nmsg (game.main_code)\n//\n// Print the coloured string.\nmsg (game.main_colour)\n</code></pre>\n\n",
      "PostDate": "2017-11-17T16:51:18.7722148Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9b5d7620-3b90-4541-803c-bb9ccdaafd6c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Alternatively, you could build the strings directly, and use the same loop twice.\r\n\r\n```\r\nc_list = Split(\"Black;Brown;Red;Orange;Yellow;Green;Blue;Violet;Grey;White;Gold;Silver\", \";\")\r\ngame.plain_code = \"\"\r\ngame.coloured_code = \"\"\r\n\r\nfor (i, 1, 4) {\r\n  randomcolour = PickOneString(c_list)\r\n  game.plain_code = Trim(game.plain_code) + \" \" + randomcolour\r\n  game.coloured_code = Trim(game.coloured_code) + \" {color:\" + randomcolour + \":\" + randomcolour + \"}\"\r\n}\r\n\r\nmsg (\"The plain code is \"+game.plain_code)\r\nmsg (\"And the coloured code is \"+game.coloured_code)\r\n```\r\nIf you're doing the same thing to each element of a list (like adding the `{color:...}` tag to it), it might be more efficient to put it in a loop. The same `for` loop can be used to add elements to both lists, or both strings; making it very slightly more efficient.\r\n\r\nAlso, 2 ways of making your string. You can either take an empty string, and add each colour in turn to the end of it; or you can use a stringlist and then stick them together using `Join`. Which one is easiest will depend on what you're doing with it; some things will be easier with the list, some easier with the string.\r\n(Note that if you're doing `somestring = somestring + \" \" + another_value` in a loop, you might need to use `Trim()` to  remove the extra space at the beginning)",
      "EditableFormat": "markdown",
      "HTML": "<p>Alternatively, you could build the strings directly, and use the same loop twice.</p>\n<pre><code>c_list = Split(\"Black;Brown;Red;Orange;Yellow;Green;Blue;Violet;Grey;White;Gold;Silver\", \";\")\ngame.plain_code = \"\"\ngame.coloured_code = \"\"\n\nfor (i, 1, 4) {\n  randomcolour = PickOneString(c_list)\n  game.plain_code = Trim(game.plain_code) + \" \" + randomcolour\n  game.coloured_code = Trim(game.coloured_code) + \" {color:\" + randomcolour + \":\" + randomcolour + \"}\"\n}\n\nmsg (\"The plain code is \"+game.plain_code)\nmsg (\"And the coloured code is \"+game.coloured_code)\n</code></pre>\n<p>If you're doing the same thing to each element of a list (like adding the <code>{color:...}</code> tag to it), it might be more efficient to put it in a loop. The same <code>for</code> loop can be used to add elements to both lists, or both strings; making it very slightly more efficient.</p>\n<p>Also, 2 ways of making your string. You can either take an empty string, and add each colour in turn to the end of it; or you can use a stringlist and then stick them together using <code>Join</code>. Which one is easiest will depend on what you're doing with it; some things will be easier with the list, some easier with the string.<br>\n(Note that if you're doing <code>somestring = somestring + \" \" + another_value</code> in a loop, you might need to use <code>Trim()</code> to  remove the extra space at the beginning)</p>\n\n",
      "PostDate": "2017-11-17T17:34:38.198835Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e4d0ad33-09d7-4b76-a752-31200290dd93",
      "UserId": 327619,
      "Username": "-=Darchy=-",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi mrangel,\r\n\r\nAwesome! - I will admit I tried to use the same loop, but I kept getting a non zero ... function error, but then again I didn't declare game.plain_code = \"\" or game.coloured_code = \"\" at the beginning :S\r\n\r\nYour method also makes more sense.\r\n\r\nThanks,\r\n\r\n-=Darchy=-",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi mrangel,</p>\n<p>Awesome! - I will admit I tried to use the same loop, but I kept getting a non zero ... function error, but then again I didn't declare game.plain_code = \"\" or game.coloured_code = \"\" at the beginning :S</p>\n<p>Your method also makes more sense.</p>\n<p>Thanks,</p>\n<p>-=Darchy=-</p>\n\n",
      "PostDate": "2017-11-17T21:57:53.1858749Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
