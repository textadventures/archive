{
  "Topic": {
    "TopicId": "6okkizs6leot-hyy-g8apw",
    "ForumId": "10",
    "Title": "Printing Blank Spaces   [Solved]",
    "LastUpdated": "2017-02-10T19:44:15.9337107Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "c0998b71-7d29-4dc6-9e8e-e544238255b1",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6bf915571362451733db8730696fe55d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Pixie's original code for typing blank spaces before a text message (like an indent):\r\n\r\n```\r\n<function name=\"Whitespaces\" parameters=\"number\" type=\"string\"><![CDATA[\r\n    game.command_successful = True\r\n    text = \"\"\r\n    for (x, 1, number) {\r\n      text = text+ \"&nbsp;\"\r\n    }\r\n    return (text)\r\n  ]]></function>\r\n```\r\nI pasted the code into the \"code view\" and it shows up fine as a new function named \"Whitespaces\".  Problem is, how do you make this function work with a printed message?  I tried calling the Whitespaces function, printing the message as an expression, etc., to no avail.  Help!\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Pixie's original code for typing blank spaces before a text message (like an indent):</p>\n<pre><code>&lt;function name=\"Whitespaces\" parameters=\"number\" type=\"string\"&gt;&lt;![CDATA[\n    game.command_successful = True\n    text = \"\"\n    for (x, 1, number) {\n      text = text+ \"&amp;nbsp;\"\n    }\n    return (text)\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<p>I pasted the code into the \"code view\" and it shows up fine as a new function named \"Whitespaces\".  Problem is, how do you make this function work with a printed message?  I tried calling the Whitespaces function, printing the message as an expression, etc., to no avail.  Help!</p>\n\n",
      "PostDate": "2017-02-10T19:44:15.9337107Z",
      "LastEditDate": "2017-02-10T21:43:11.5842804Z"
    },
    {
      "PostId": "d6822c13-79fe-468f-824f-ec10306c0bd7",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Pixie's Function returns a given number of spaces/whitespaces (it's like a dynamic-sized 'tab' key), so you got to concatenate (literally means put togehter) this 'dynamic tab' with the message/text you want.\r\n\r\n-------\r\n\r\nconcepts:\r\n\r\nConcatenation (only with strings can you do so):\r\n\r\n\"4\" + \"4\" = \"44\"\r\n\"44\" + \"44\" = \"4444\"\r\n\"44\" + \"44\" + \"44\" = \"444444\"\r\n\"mama\" + \"mia\" = \"mamamia\"\r\n\"mama\" + \" \" + \"mia\" = \"mama mia\"\r\n\"mama \" + \"mia\" = \"mama mia\"\r\n\"mama\" + \" mia\" = \"mama mia\"\r\n\"mama\" + \"4\" = \"mama4\"\r\n\"mama\" + \"4\" + \"mia\" = \"mama4mia\"\r\n\r\n\"mama\" + 4 = ERROR!\r\n\r\nVS\r\n\r\nAddition:\r\n\r\n4 + 4 = 8\r\n44 + 44 = 88\r\n44 + 44 + 44 = 132\r\n\r\n\"mama\" + 4 = ERROR!!\r\n\"4\" + 4 = ERROR!\r\n\r\n(though, I think quest, knows to / will automatically, parse a number into a string, so you won't have an error of doing: string + number/int-integer/double)\r\n\r\n---------\r\n\r\nthis is an example of how you'd do the catenation:\r\n\r\n```\r\n// in-code:\r\n\r\ndynamic_tab_string_variable = Whitespaces (8) // I forgot whether a normal tab is 4 or 8 spaces, lol.\r\nmsg (dynamic_tab_string_variable + \"blah blah blah\")\r\n\r\n// in GUI/Editor:\r\n\r\nset variable dynamic_tab_string_variable = [EXPRESSION] Whitespaces (8)\r\nprint [EXPRESSION] dynamic_tab_string_variable + \"blah blah blah\"\r\n\r\n-----\r\n\r\n// output (the underscores represent spaces/whitespaces):\r\n\r\n________blah blah blah\r\n\r\n// --------------------------------------------\r\n\r\n// P.S.\r\n\r\n// you can put this 'dynamic tab' anywhere, it doesn't have to be at the beginning of your message:\r\n\r\n// in-code:\r\n\r\ndynamic_tab_string_variable = Whitespaces (8) // I forgot whether a normal tab is 4 or 8 spaces, lol.\r\nmsg (\"blah blah blah\" + dynamic_tab_string_variable + \"blah blah blah\")\r\n\r\n// in GUI/Editor:\r\n\r\nset variable dynamic_tab_string_variable = [EXPRESSION] Whitespaces (8)\r\nprint [EXPRESSION] \"blah blah blah\" + dynamic_tab_string_variable + \"blah blah blah\"\r\n\r\n-------\r\n\r\noutput (underscores represent spaces/whitespaces):\r\n\r\nblah blah blah________blah blah blah\r\n\r\n// ----------\r\n\r\nalso, you can have your message be held by a VARIABLE of it's own too:\r\n\r\n(in-code example only, too lazy to show via using GUI/Editor, you already/should know how to do it)\r\n\r\nmy_msg = \"blah blah blah\"\r\ndynamic_tab_string_variable = Whitespaces (8)\r\n\r\nmsg (my_msg + dynamic_tab_string_variable + my_msg + dynamic_tab_string_variable + my_msg)\r\n\r\noutput: blah blah blah_______ blah blah blah_______blah blah blah\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Pixie's Function returns a given number of spaces/whitespaces (it's like a dynamic-sized 'tab' key), so you got to concatenate (literally means put togehter) this 'dynamic tab' with the message/text you want.</p>\n<hr>\n<p>concepts:</p>\n<p>Concatenation (only with strings can you do so):</p>\n<p>\"4\" + \"4\" = \"44\"<br>\n\"44\" + \"44\" = \"4444\"<br>\n\"44\" + \"44\" + \"44\" = \"444444\"<br>\n\"mama\" + \"mia\" = \"mamamia\"<br>\n\"mama\" + \" \" + \"mia\" = \"mama mia\"<br>\n\"mama \" + \"mia\" = \"mama mia\"<br>\n\"mama\" + \" mia\" = \"mama mia\"<br>\n\"mama\" + \"4\" = \"mama4\"<br>\n\"mama\" + \"4\" + \"mia\" = \"mama4mia\"</p>\n<p>\"mama\" + 4 = ERROR!</p>\n<p>VS</p>\n<p>Addition:</p>\n<p>4 + 4 = 8<br>\n44 + 44 = 88<br>\n44 + 44 + 44 = 132</p>\n<p>\"mama\" + 4 = ERROR!!<br>\n\"4\" + 4 = ERROR!</p>\n<p>(though, I think quest, knows to / will automatically, parse a number into a string, so you won't have an error of doing: string + number/int-integer/double)</p>\n<hr>\n<p>this is an example of how you'd do the catenation:</p>\n<pre><code>// in-code:\n\ndynamic_tab_string_variable = Whitespaces (8) // I forgot whether a normal tab is 4 or 8 spaces, lol.\nmsg (dynamic_tab_string_variable + \"blah blah blah\")\n\n// in GUI/Editor:\n\nset variable dynamic_tab_string_variable = [EXPRESSION] Whitespaces (8)\nprint [EXPRESSION] dynamic_tab_string_variable + \"blah blah blah\"\n\n-----\n\n// output (the underscores represent spaces/whitespaces):\n\n________blah blah blah\n\n// --------------------------------------------\n\n// P.S.\n\n// you can put this 'dynamic tab' anywhere, it doesn't have to be at the beginning of your message:\n\n// in-code:\n\ndynamic_tab_string_variable = Whitespaces (8) // I forgot whether a normal tab is 4 or 8 spaces, lol.\nmsg (\"blah blah blah\" + dynamic_tab_string_variable + \"blah blah blah\")\n\n// in GUI/Editor:\n\nset variable dynamic_tab_string_variable = [EXPRESSION] Whitespaces (8)\nprint [EXPRESSION] \"blah blah blah\" + dynamic_tab_string_variable + \"blah blah blah\"\n\n-------\n\noutput (underscores represent spaces/whitespaces):\n\nblah blah blah________blah blah blah\n\n// ----------\n\nalso, you can have your message be held by a VARIABLE of it's own too:\n\n(in-code example only, too lazy to show via using GUI/Editor, you already/should know how to do it)\n\nmy_msg = \"blah blah blah\"\ndynamic_tab_string_variable = Whitespaces (8)\n\nmsg (my_msg + dynamic_tab_string_variable + my_msg + dynamic_tab_string_variable + my_msg)\n\noutput: blah blah blah_______ blah blah blah_______blah blah blah\n</code></pre>\n\n",
      "PostDate": "2017-02-10T20:43:32.5826273Z",
      "LastEditDate": "2017-02-10T20:55:28.6637835Z"
    },
    {
      "PostId": "a2cf78f0-3d41-408b-8ee7-51cd5079fb43",
      "UserId": 924,
      "Username": "Pertex",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4cc1e52f99452e841ecf4cbee9eadde9?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You can call it this way:\r\n\r\n```\r\nmsg (\"Hello\" + Whitespaces(4) + \"World\")\r\n```\r\n\r\nBy the way you can remove this line:\r\n```\r\ngame.command_successful = True\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>You can call it this way:</p>\n<pre><code>msg (\"Hello\" + Whitespaces(4) + \"World\")\n</code></pre>\n<p>By the way you can remove this line:</p>\n<pre><code>game.command_successful = True\n</code></pre>\n\n",
      "PostDate": "2017-02-10T20:53:02.6766971Z",
      "LastEditDate": null
    },
    {
      "PostId": "015c60fd-62d9-4a35-a779-f76c87e5ae2e",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6bf915571362451733db8730696fe55d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "All right, it worked.  What I learned is that the last line:\r\n\r\n```\r\nreturn (text)\r\n```\r\nreturns the function as a string value that I can just plug into a printed expression.  Simple but very useful.\r\n\r\nNow on to vastly more complicated issues!  Thank you both for your quick responses!",
      "EditableFormat": "markdown",
      "HTML": "<p>All right, it worked.  What I learned is that the last line:</p>\n<pre><code>return (text)\n</code></pre>\n<p>returns the function as a string value that I can just plug into a printed expression.  Simple but very useful.</p>\n<p>Now on to vastly more complicated issues!  Thank you both for your quick responses!</p>\n\n",
      "PostDate": "2017-02-10T21:42:25.5279318Z",
      "LastEditDate": "2017-02-10T21:48:45.978223Z"
    },
    {
      "PostId": "85de4e68-2719-4788-9c9f-cd0cce971c65",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "http://docs.textadventures.co.uk/quest/elements/function.html\r\n\r\n```\r\nthe 'type' signature/header option specifies that this function (now) must have a return value and that value's type must be what it is to be specified as by you: return's attribute/data type, for examples:\r\n\r\nif you don't add/type in the 'type' signature/header option and its value (via in-code) and/or don't specify its type (via GUI/Editor), then your function has no return value, which is completely fine. Function's don't have to return a value.\r\n\r\n-----------\r\n\r\n<function name=\"return_string_concatenation_function\" parameters=\"string_1_parameter, string_2_parameter\" type=\"string\">\r\n  return (string_1_parameter + string_2_parameter)\r\n</function>\r\n\r\n// example scripting:\r\nstring_variable = return_string_concatenation_function (\"water\", \"world\")\r\nmsg (string_variable)\r\n// output: waterworld\r\n\r\n-------------\r\n\r\n<function name=\"return_integer_addition_function\" parameters=\"integer_1_parameter, integer_2_parameter\" type=\"int\">\r\n  return (integer_1_parameter + integer_2_parameter)\r\n</function>\r\n\r\n// example scripting:\r\ninteger_variable = return_integer_addition_function (23, 45)\r\nmsg (integer_variable)\r\n// output: 68\r\n\r\n----------\r\n\r\nyou get the idea.... of how the 'type' header/signiature option works now... I hope...\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>http://docs.textadventures.co.uk/quest/elements/function.html</p>\n<pre><code>the 'type' signature/header option specifies that this function (now) must have a return value and that value's type must be what it is to be specified as by you: return's attribute/data type, for examples:\n\nif you don't add/type in the 'type' signature/header option and its value (via in-code) and/or don't specify its type (via GUI/Editor), then your function has no return value, which is completely fine. Function's don't have to return a value.\n\n-----------\n\n&lt;function name=\"return_string_concatenation_function\" parameters=\"string_1_parameter, string_2_parameter\" type=\"string\"&gt;\n  return (string_1_parameter + string_2_parameter)\n&lt;/function&gt;\n\n// example scripting:\nstring_variable = return_string_concatenation_function (\"water\", \"world\")\nmsg (string_variable)\n// output: waterworld\n\n-------------\n\n&lt;function name=\"return_integer_addition_function\" parameters=\"integer_1_parameter, integer_2_parameter\" type=\"int\"&gt;\n  return (integer_1_parameter + integer_2_parameter)\n&lt;/function&gt;\n\n// example scripting:\ninteger_variable = return_integer_addition_function (23, 45)\nmsg (integer_variable)\n// output: 68\n\n----------\n\nyou get the idea.... of how the 'type' header/signiature option works now... I hope...\n</code></pre>\n\n",
      "PostDate": "2017-02-11T09:24:25.4753761Z",
      "LastEditDate": "2017-02-11T09:32:06.4569176Z"
    },
    {
      "PostId": "d54fa16f-8643-44ad-aa0d-44f78f2c0d96",
      "UserId": 115910,
      "Username": "Sebastian2203",
      "AvatarUrl": "https://secure.gravatar.com/avatar/2c6803847fee75ca6b74e1a846b79bc5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello, I am fairly new to Quest and I quickly skimmed to reply so sorry if I my advice will be wrong/useless to you but,\r\n\r\nas far as I understand you are trying to type blank spaces because pressing space five times will only result in ONE blank space.\r\n\r\nWell, if you quickly press  **ALT+0+1+6+1+0** it will create a special blank character that Quest won´t \"ignore\". \r\nThat´s all I know.\r\n\r\n  \r\n ",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello, I am fairly new to Quest and I quickly skimmed to reply so sorry if I my advice will be wrong/useless to you but,</p>\n<p>as far as I understand you are trying to type blank spaces because pressing space five times will only result in ONE blank space.</p>\n<p>Well, if you quickly press &nbsp;<strong>ALT+0+1+6+1+0</strong> it will create a special blank character that Quest won´t \"ignore\".<br>\nThat´s all I know.</p>\n<p>&nbsp;&nbsp;<br>\n&nbsp;</p>\n\n",
      "PostDate": "2017-02-11T17:04:15.5470264Z",
      "LastEditDate": "2017-02-11T17:04:54.900241Z"
    }
  ]
}
