{
  "Topic": {
    "TopicId": "4045",
    "ForumId": "20",
    "Title": "Combining game sections",
    "LastUpdated": "2013-12-12T08:23:17+00:00",
    "ReplyCount": 2
  },
  "Posts": [
    {
      "PostId": "27081",
      "UserId": 0,
      "Username": "TriangleGames",
      "UserAvatar": null,
      "UserGravatar": "134d9e995777da65c5cf8efda551d579",
      "EditableText": "There was an idea brought up at [url=http&#58;//www&#46;intfiction&#46;org/forum/viewtopic&#46;php?f=23&amp;t=10509#p62820:64erzhlt]intfiction.org[/url:64erzhlt] about having many people simultaneously constructing separate portions of a large multi-branching game. After I asked how hard it would be to combine everything, there was a rapid series of references to things I'm not familiar with, but I was wondering how that might work if someone tried to do it with Quest. Is it possible to do something similar to compiling separate game files, or could you have people write branches of game as library files and add them to a primary game file?",
      "EditableFormat": "bbcode",
      "HTML": "There was an idea brought up at <a href=\"http&#58;//www&#46;intfiction&#46;org/forum/viewtopic&#46;php?f=23&amp;t=10509#p62820\" rel=\"nofollow\">intfiction.org</a> about having many people simultaneously constructing separate portions of a large multi-branching game. After I asked how hard it would be to combine everything, there was a rapid series of references to things I'm not familiar with, but I was wondering how that might work if someone tried to do it with Quest. Is it possible to do something similar to compiling separate game files, or could you have people write branches of game as library files and add them to a primary game file?",
      "PostDate": "2013-12-12T00:46:11+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27082",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "Yep I think you'd want separate game files that you compiled as library files. I guess you could compile separate game files and do some interface trickery but it seems like that'd get messy really fast.",
      "EditableFormat": "bbcode",
      "HTML": "Yep I think you'd want separate game files that you compiled as library files. I guess you could compile separate game files and do some interface trickery but it seems like that'd get messy really fast.",
      "PostDate": "2013-12-12T07:20:30+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "27085",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "In theory it should be doable. You would need to have one person as project leader and he or she would handle things like commands, functions and types, and these would establish a framework. He would also have to specify what general attributes on the game and player object mean and what values they can take. He would also build the central nexus of rooms from which other parts leader off (assuming each contributor does an independent branch).\n\nPut all the functions, types and commands in a library, to leave just the nexus in the main file.\n\nEach contributor then gets a copy of the main file and function library, and uses it to build his own world. All attributes on the game and player objects that he uses and all room and object names would be prefixed with his initials to avoid name collisions.\n\nThe function library can be updated by the project leader and redistributed as required during development.\n\nWhen all is done, each contributor converts his game file to a library (deleting the original nexus), and the project leader adds the library to the master game file and relevant exits to the nexus rooms.\n\nYou would need to be careful about how objects from one section interact in another (eg one section has a ladder to solve a puzzle, but the ladder cannot be used in any other section), but certainly should be possible.",
      "EditableFormat": "bbcode",
      "HTML": "In theory it should be doable. You would need to have one person as project leader and he or she would handle things like commands, functions and types, and these would establish a framework. He would also have to specify what general attributes on the game and player object mean and what values they can take. He would also build the central nexus of rooms from which other parts leader off (assuming each contributor does an independent branch).<br/><br/>Put all the functions, types and commands in a library, to leave just the nexus in the main file.<br/><br/>Each contributor then gets a copy of the main file and function library, and uses it to build his own world. All attributes on the game and player objects that he uses and all room and object names would be prefixed with his initials to avoid name collisions.<br/><br/>The function library can be updated by the project leader and redistributed as required during development.<br/><br/>When all is done, each contributor converts his game file to a library (deleting the original nexus), and the project leader adds the library to the master game file and relevant exits to the nexus rooms.<br/><br/>You would need to be careful about how objects from one section interact in another (eg one section has a ladder to solve a puzzle, but the ladder cannot be used in any other section), but certainly should be possible.",
      "PostDate": "2013-12-12T08:23:17+00:00",
      "LastEditDate": null
    }
  ]
}
