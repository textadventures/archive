{
  "Topic": {
    "TopicId": "jdaxczojekc2ni4lp2u8cg",
    "ForumId": "10",
    "Title": "Changing temperature",
    "LastUpdated": "2021-02-06T01:48:20.6990563Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "ef1ba191-bb5b-4cc3-8817-98687bf25b10",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay. So I found a way to make the temperature 96.8 degrees fahrenheit. But now I need the temperature to change.\r\n\r\nI have two attributes, game.temperature = 96 and game.temperature2 = 8. Here's the code in my starting game script.\r\n```\r\nfirsttime {\r\n  msg (\"You wake up from your bed.\")\r\n}\r\nplayer.hitpoints = 12\r\ngame.temperature = 96\r\ngame.temperature2 = 8\r\ngame.statusattributes = NewStringDictionary()\r\nplayer.max = 12\r\nplayer.statusattributes = NewStringDictionary()\r\ndictionary add (player.statusattributes, \"hitpoints\", \"Hit points: !\")\r\nplayer.changedhitpoints => {\r\n  if (player.hitpoints > 0) {\r\n    msg (\"Hits points now \" + player.hitpoints + \".\")\r\n  }\r\n  else {\r\n    msg (\"You are dead!<br/><br/>Your body is being processed and oozed through the intestines!\")\r\n    MoveObject (player, Intestines)\r\n    MoveObject (Potion Bag, Dead Room)\r\n    MoveObject (Remote Control, Dead Room)\r\n    player.hitpoints = 0\r\n    DisableTimer (Stomach Acid)\r\n    DisableTimer (Stomach Acid 2)\r\n    EnableTimer (Disable Timer)\r\n  }\r\n}\r\nfirsttime {\r\n  SetTimeout (12) {\r\n    MoveObject (player, Mouth)\r\n  }\r\n}\r\ngame.tempasstring = game.temperature + \".\" + game.temperature2 + \" degrees F\"\r\ndictionary add (game.statusattributes, \"tempasstring\", \"Temp.: !\")\r\n```\r\nI have a string dictionary called status attributes. They make the game have the temperature status.\r\n```game.tempasstring = game.temperature + \".\" + game.temperature2 + \" degrees F\"``` Turns the two attributes into a string.\r\n```dictionary add (game.statusattributes, \"tempasstring\", \"Temp.: !\")``` is supposed to add the string to a dictionary.\r\n\r\nSo far it all works, but when you start to change the attributes in the code, absolutely nothing happens. There is no change, but I need change.\r\nI have scripts like this on each OnEnter in the rooms.\r\n```game.temperature = 97```\r\nI also have a timer called Temperature Timer. It goes off every two seconds. Here's the code for it:\r\n```\r\nroll = GetRandomInt(1,9)\r\ngame.temperature2 = roll\r\n```\r\nSo overall, the game starts off at a 96.8 temperature. When you enter a room, it sets the game.temperature to another number. When 2 seconds pass by, game.temperature changes as well. All of this is to mimic a dragon eating the player.\r\n\r\nThe first part works. The second part does not work. I even downloaded the game to see if it was just the website acting up. That didn't work. I need help!\r\n\r\nGame link here. http://textadventures.co.uk/games/view/nmttplgmnue4vmudzs4ovg/dragon-digestion-vore-game",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay. So I found a way to make the temperature 96.8 degrees fahrenheit. But now I need the temperature to change.</p>\n<p>I have two attributes, game.temperature = 96 and game.temperature2 = 8. Here's the code in my starting game script.</p>\n<pre><code>firsttime {\n  msg (\"You wake up from your bed.\")\n}\nplayer.hitpoints = 12\ngame.temperature = 96\ngame.temperature2 = 8\ngame.statusattributes = NewStringDictionary()\nplayer.max = 12\nplayer.statusattributes = NewStringDictionary()\ndictionary add (player.statusattributes, \"hitpoints\", \"Hit points: !\")\nplayer.changedhitpoints =&gt; {\n  if (player.hitpoints &gt; 0) {\n    msg (\"Hits points now \" + player.hitpoints + \".\")\n  }\n  else {\n    msg (\"You are dead!&lt;br/&gt;&lt;br/&gt;Your body is being processed and oozed through the intestines!\")\n    MoveObject (player, Intestines)\n    MoveObject (Potion Bag, Dead Room)\n    MoveObject (Remote Control, Dead Room)\n    player.hitpoints = 0\n    DisableTimer (Stomach Acid)\n    DisableTimer (Stomach Acid 2)\n    EnableTimer (Disable Timer)\n  }\n}\nfirsttime {\n  SetTimeout (12) {\n    MoveObject (player, Mouth)\n  }\n}\ngame.tempasstring = game.temperature + \".\" + game.temperature2 + \" degrees F\"\ndictionary add (game.statusattributes, \"tempasstring\", \"Temp.: !\")\n</code></pre>\n<p>I have a string dictionary called status attributes. They make the game have the temperature status.<br>\n<code>game.tempasstring = game.temperature + \".\" + game.temperature2 + \" degrees F\"</code> Turns the two attributes into a string.<br>\n<code>dictionary add (game.statusattributes, \"tempasstring\", \"Temp.: !\")</code> is supposed to add the string to a dictionary.</p>\n<p>So far it all works, but when you start to change the attributes in the code, absolutely nothing happens. There is no change, but I need change.<br>\nI have scripts like this on each OnEnter in the rooms.<br>\n<code>game.temperature = 97</code><br>\nI also have a timer called Temperature Timer. It goes off every two seconds. Here's the code for it:</p>\n<pre><code>roll = GetRandomInt(1,9)\ngame.temperature2 = roll\n</code></pre>\n<p>So overall, the game starts off at a 96.8 temperature. When you enter a room, it sets the game.temperature to another number. When 2 seconds pass by, game.temperature changes as well. All of this is to mimic a dragon eating the player.</p>\n<p>The first part works. The second part does not work. I even downloaded the game to see if it was just the website acting up. That didn't work. I need help!</p>\n<p>Game link here. http://textadventures.co.uk/games/view/nmttplgmnue4vmudzs4ovg/dragon-digestion-vore-game</p>\n\n",
      "PostDate": "2021-02-06T01:48:20.6990563Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6644883b-4619-487f-9090-2d76c9855b06",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The line `game.tempasstring = game.temperature + \".\" + game.temperature2 + \" degrees F\"` sets `tempastring` to be the combination of the two attributes.\r\n\r\nWhen you change those attributes, you need to run that line again to update `tempastring`.\r\n\r\n(I would also suggest using a javascript timer rather than a Quest timer if possible, so that you're not refreshing the page every 2 seconds just to change a status attribute. I think some players would like to have verb menus work correctly)",
      "EditableFormat": "markdown",
      "HTML": "<p>The line <code>game.tempasstring = game.temperature + \".\" + game.temperature2 + \" degrees F\"</code> sets <code>tempastring</code> to be the combination of the two attributes.</p>\n<p>When you change those attributes, you need to run that line again to update <code>tempastring</code>.</p>\n<p>(I would also suggest using a javascript timer rather than a Quest timer if possible, so that you're not refreshing the page every 2 seconds just to change a status attribute. I think some players would like to have verb menus work correctly)</p>\n\n",
      "PostDate": "2021-02-06T09:14:39.1106606Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "011e410f-9202-436c-aa1a-ac5c10e12339",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks mrangel!\r\nHow do I do a JavaScript timer?",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks mrangel!<br>\nHow do I do a JavaScript timer?</p>\n\n",
      "PostDate": "2021-02-06T17:14:46.9969481Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "439905cf-f7b8-481b-b285-0e53beae98f2",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It would depend if anything depends on the precise temperature - does the decimal part affect the game mechanics?\r\n\r\nIf it's just for display purposes (which fits with randomising it every 2 seconds) then you could run some javascript like…\r\n```\r\nvar temperature = $('<style>').appendTo('head');\r\nsetInterval (function () {\r\n  _pauseMode || temperature.text(\".temp::after {content: '.\"+Math.floor(Math.random()*10)+\"°F';}\");\r\n}, 2000);\r\n```\r\nand then in your Quest script, the line to add the status attribute would become:\r\n```\r\ndictionary add (game.statusattributes, \"temperature\", \"Temp.: <span class=\\\"temp\\\">!</span>\")\r\n```\r\n\r\nThis would cause an extra decimal point to be added to the end of the string when it's displayed, without actually refreshing the page. You also don't need `temperature2` (it's a javascript variable now), or `tempasstring` (because that's done in Javascript rather than Quest).\r\n\r\nYou could even set it to float up and down, rather than picking a new number every 2 seconds; or so that when the player enters a room with a different temperature, instead of jumping from 97.6 to 98.6 it would take a second or two going through all the numbers in between. I'm thinking that would feel more realistic from the player's point of view, but not sure if it would be worth the effort.\r\n\r\nHmm…\r\n```\r\nvar target;\r\nvar update = updateStatus;\r\nvar tempwhole;\r\nvar tempdecimal;\r\nvar tempdisplay;\r\nupdateStatus = function (text) {\r\n  update(text);\r\n  tempdisplay = $('.temp');\r\n  if (tempdisplay.length) {\r\n    target = parseInt(tempdisplay.text());\r\n    if (!tempwhole) {tempwhole = target;}\r\n    if (!tempdecimal) {tempdecimal = Math.floor(Math.random()*10);}\r\n  }\r\n  tempdisplay.text(tempwhole + '·' + tempdecimal + '°F');\r\n};\r\nsetInterval(function () {\r\n  if (tempdisplay) {\r\n    if (Math.random()*14 + 4*(target-tempwhole) - 2 >= tempdecimal) tempdecimal++;\r\n    if (Math.random()*14 + 4*(target-tempwhole) - 2 < tempdecimal) tempdecimal--;\r\n    if (tempdecimal == 10) {tempdecimal = 0; tempwhole++;}\r\n    if (tempdecimal == -1) {tempdecimal = 9; tempwhole--;}\r\n    tempdisplay.text(tempwhole + '·' + tempdecimal + '°F');\r\n  }\r\n}, 220);\r\n```\r\nI think that would make a number that bobs up and down slowly, floating close to the actual 'temperature' status attribute. It would mean that Quest doesn't have the exact number, but if you're not basing the game mechanics on it, this should be more stable.\r\n\r\nThis more complex version could be implemented by putting a compressed version:\r\n```\r\nJS.eval(\"$(function(){var a,b,c,d,e=updateStatus;updateStatus=function(f){e(f),d=$('.temp'),d.length&&(a=parseInt(d.text()),!b&&(b=a),!c&&(c=Math.floor(10*Math.random()))),d.text(b+'\\xB7'+c+'\\xB0F')},setInterval(function(){d&&(14*Math.random()+4*(a-b)-2>=c&&c++,14*Math.random()+4*(a-b)-2<c&&c--,10==c&&(c=0,b++),-1==c&&(c=9,b--),d.text(b+'\\xB7'+c+'\\xB0F'))},220)});\")\r\n```\r\nin your UI initialisation script, and adding temperature to the status attributes with the `<span>` as I mentioned above. I haven't tested this yet because I'm typing on my phone; but think it could be a good starting point for adding cosmetic alterations to a status attribute.",
      "EditableFormat": "markdown",
      "HTML": "<p>It would depend if anything depends on the precise temperature - does the decimal part affect the game mechanics?</p>\n<p>If it's just for display purposes (which fits with randomising it every 2 seconds) then you could run some javascript like…</p>\n<pre><code>var temperature = $('&lt;style&gt;').appendTo('head');\nsetInterval (function () {\n  _pauseMode || temperature.text(\".temp::after {content: '.\"+Math.floor(Math.random()*10)+\"°F';}\");\n}, 2000);\n</code></pre>\n<p>and then in your Quest script, the line to add the status attribute would become:</p>\n<pre><code>dictionary add (game.statusattributes, \"temperature\", \"Temp.: &lt;span class=\\\"temp\\\"&gt;!&lt;/span&gt;\")\n</code></pre>\n<p>This would cause an extra decimal point to be added to the end of the string when it's displayed, without actually refreshing the page. You also don't need <code>temperature2</code> (it's a javascript variable now), or <code>tempasstring</code> (because that's done in Javascript rather than Quest).</p>\n<p>You could even set it to float up and down, rather than picking a new number every 2 seconds; or so that when the player enters a room with a different temperature, instead of jumping from 97.6 to 98.6 it would take a second or two going through all the numbers in between. I'm thinking that would feel more realistic from the player's point of view, but not sure if it would be worth the effort.</p>\n<p>Hmm…</p>\n<pre><code>var target;\nvar update = updateStatus;\nvar tempwhole;\nvar tempdecimal;\nvar tempdisplay;\nupdateStatus = function (text) {\n  update(text);\n  tempdisplay = $('.temp');\n  if (tempdisplay.length) {\n    target = parseInt(tempdisplay.text());\n    if (!tempwhole) {tempwhole = target;}\n    if (!tempdecimal) {tempdecimal = Math.floor(Math.random()*10);}\n  }\n  tempdisplay.text(tempwhole + '·' + tempdecimal + '°F');\n};\nsetInterval(function () {\n  if (tempdisplay) {\n    if (Math.random()*14 + 4*(target-tempwhole) - 2 &gt;= tempdecimal) tempdecimal++;\n    if (Math.random()*14 + 4*(target-tempwhole) - 2 &lt; tempdecimal) tempdecimal--;\n    if (tempdecimal == 10) {tempdecimal = 0; tempwhole++;}\n    if (tempdecimal == -1) {tempdecimal = 9; tempwhole--;}\n    tempdisplay.text(tempwhole + '·' + tempdecimal + '°F');\n  }\n}, 220);\n</code></pre>\n<p>I think that would make a number that bobs up and down slowly, floating close to the actual 'temperature' status attribute. It would mean that Quest doesn't have the exact number, but if you're not basing the game mechanics on it, this should be more stable.</p>\n<p>This more complex version could be implemented by putting a compressed version:</p>\n<pre><code>JS.eval(\"$(function(){var a,b,c,d,e=updateStatus;updateStatus=function(f){e(f),d=$('.temp'),d.length&amp;&amp;(a=parseInt(d.text()),!b&amp;&amp;(b=a),!c&amp;&amp;(c=Math.floor(10*Math.random()))),d.text(b+'\\xB7'+c+'\\xB0F')},setInterval(function(){d&amp;&amp;(14*Math.random()+4*(a-b)-2&gt;=c&amp;&amp;c++,14*Math.random()+4*(a-b)-2&lt;c&amp;&amp;c--,10==c&amp;&amp;(c=0,b++),-1==c&amp;&amp;(c=9,b--),d.text(b+'\\xB7'+c+'\\xB0F'))},220)});\")\n</code></pre>\n<p>in your UI initialisation script, and adding temperature to the status attributes with the <code>&lt;span&gt;</code> as I mentioned above. I haven't tested this yet because I'm typing on my phone; but think it could be a good starting point for adding cosmetic alterations to a status attribute.</p>\n\n",
      "PostDate": "2021-02-06T18:23:51.3771675Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f03eb78d-a014-40c8-94f1-3d7fdfe835b9",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay, I'll see what I can do.",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay, I'll see what I can do.</p>\n\n",
      "PostDate": "2021-02-06T18:41:48.0034466Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
