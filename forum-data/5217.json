{
  "Topic": {
    "TopicId": "5217",
    "ForumId": "10",
    "Title": "Switch checking for 'get input' result?",
    "LastUpdated": "2015-05-08T18:47:01+01:00",
    "ReplyCount": 8
  },
  "Posts": [
    {
      "PostId": "35921",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "So here's the question, I'm using a Switch to check the result from a 'get input', I have a working method but ideally I'd like the case keys to just be &quot;whatever text the input is&quot;, and I'm not sure what a good/the best method for this is.\n\nWhat I'm using currently is this\n[code:3o4dawrh]\nmsg (&quot;enter a command&quot;)\nget input {\n  switch (true) {\n    case (IsRegexMatch(&quot;option1&quot;,LCase(result))) {\n      msg (&quot;do stuff here&quot;)\n    }\n    default {\n      msg (&quot;invalid input&quot;)\n    }\n  }\n}[/code:3o4dawrh]",
      "EditableFormat": "bbcode",
      "HTML": "So here's the question, I'm using a Switch to check the result from a 'get input', I have a working method but ideally I'd like the case keys to just be &quot;whatever text the input is&quot;, and I'm not sure what a good/the best method for this is.<br/><br/>What I'm using currently is this<br/><pre><code><br/>msg (&quot;enter a command&quot;)<br/>get input {<br/>  switch (true) {<br/>    case (IsRegexMatch(&quot;option1&quot;,LCase(result))) {<br/>      msg (&quot;do stuff here&quot;)<br/>    }<br/>    default {<br/>      msg (&quot;invalid input&quot;)<br/>    }<br/>  }<br/>}</code></pre>",
      "PostDate": "2015-05-06T20:33:51+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "35923",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "normally, the 'switch' use looks like this:\n\n[code:7srnelph]&lt;function name=&quot;example_1_function&quot;&gt;\n  msg (&quot;Type in 'red', 'blue', or 'yellow', please&#46;&quot;)\n  get input {\n    // for 'get input', the quest engine automatically (hidden from you) sets a built-in variable&#58; result = your_typed_in_input\n    // for 'show menu' (if you were to use this instead of the 'get input' thingy), the quest engine automatically (hidden from you) sets a built-in variable&#58; result = your_selected_choice_option\n    if (result = &quot;red&quot; or result = &quot;blue&quot; or result = &quot;yellow&quot;) {\n      // switch (your_Variable_name&#58; result)\n      // per case&#58; case (your_individual_Values_for_your_Variable)\n      // double quotes for String Values\n      // no double quotes for Object and Integer Values)\n      // no double quotes on the special~reserved 'true' and 'false' for Boolean Values\n      switch (result) {\n        case (&quot;red&quot;) {\n          msg (&quot;You get an apple&#46;&quot;)\n        }\n        case (&quot;blue&quot;) {\n          msg (&quot;You get a berry&#46;&quot;)\n        }\n        case (&quot;yellow&quot;) {\n          msg (&quot;You get a banana&#46;&quot;)\n        }\n      }\n    } else {\n      ClearScreen\n      example_1_function\n    }\n  }\n&lt;/function&gt;[/code:7srnelph]\n\n---------------\n\nI'm not sure if there is code to allow the 'switch' to handle dynamic or non-specified~defined Values (this is why I put in the 'if~else' check code lines), as I've still not dabbled in more complex code lines, such as your 'regex', and testing them in such Scripts~Commands~Functions~etc, like the 'switch' thingy.\n\nbut, there's always the 'if~if else~else' Scripts for that anyways.\n\n(remember the 'switch' thingy is just a more limited {me assumingly} but more 'user-friendly' design~structure of using multiple 'if~if else~else' Scripts)\n\n-----------\n\nhere's link:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/switch.html\">http://docs.textadventures.co.uk/quest/ ... witch.html</a><!-- m -->\n\n(ah, indeed there's a 'default' option, and I'm sure your 'regex' works too, as you said it does, that your 'switch' code, is functional)\n\nnow, I'm confused as to what are you asking about in your OP, lol.",
      "EditableFormat": "bbcode",
      "HTML": "normally, the 'switch' use looks like this:<br/><br/><pre><code>&lt;function name=&quot;example_1_function&quot;&gt;<br/>  msg (&quot;Type in 'red', 'blue', or 'yellow', please&#46;&quot;)<br/>  get input {<br/>    // for 'get input', the quest engine automatically (hidden from you) sets a built-in variable&#58; result = your_typed_in_input<br/>    // for 'show menu' (if you were to use this instead of the 'get input' thingy), the quest engine automatically (hidden from you) sets a built-in variable&#58; result = your_selected_choice_option<br/>    if (result = &quot;red&quot; or result = &quot;blue&quot; or result = &quot;yellow&quot;) {<br/>      // switch (your_Variable_name&#58; result)<br/>      // per case&#58; case (your_individual_Values_for_your_Variable)<br/>      // double quotes for String Values<br/>      // no double quotes for Object and Integer Values)<br/>      // no double quotes on the special~reserved 'true' and 'false' for Boolean Values<br/>      switch (result) {<br/>        case (&quot;red&quot;) {<br/>          msg (&quot;You get an apple&#46;&quot;)<br/>        }<br/>        case (&quot;blue&quot;) {<br/>          msg (&quot;You get a berry&#46;&quot;)<br/>        }<br/>        case (&quot;yellow&quot;) {<br/>          msg (&quot;You get a banana&#46;&quot;)<br/>        }<br/>      }<br/>    } else {<br/>      ClearScreen<br/>      example_1_function<br/>    }<br/>  }<br/>&lt;/function&gt;</code></pre><br/><br/>---------------<br/><br/>I'm not sure if there is code to allow the 'switch' to handle dynamic or non-specified~defined Values (this is why I put in the 'if~else' check code lines), as I've still not dabbled in more complex code lines, such as your 'regex', and testing them in such Scripts~Commands~Functions~etc, like the 'switch' thingy.<br/><br/>but, there's always the 'if~if else~else' Scripts for that anyways.<br/><br/>(remember the 'switch' thingy is just a more limited {me assumingly} but more 'user-friendly' design~structure of using multiple 'if~if else~else' Scripts)<br/><br/>-----------<br/><br/>here's link:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/switch.html\">http://docs.textadventures.co.uk/quest/ ... witch.html</a><!-- m --><br/><br/>(ah, indeed there's a 'default' option, and I'm sure your 'regex' works too, as you said it does, that your 'switch' code, is functional)<br/><br/>now, I'm confused as to what are you asking about in your OP, lol.",
      "PostDate": "2015-05-06T23:02:09+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "35926",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "Sorry it seems I wasn't entirely clear. The way you set it up does work. I was attempting to use pattern matching, so that either additional info added after the command or slight variations would just throw back an unknown choice.\n\nI'm essentially building a scenario which only accepts relevant commands, but I'd like it to be somewhat lenient on exactly what you enter they way you can use the pattern matching in the actual 'command' type object.\n\nI may actually opt to just go back to requiring an exact input though. I guess I'll look more into this before I decide.",
      "EditableFormat": "bbcode",
      "HTML": "Sorry it seems I wasn't entirely clear. The way you set it up does work. I was attempting to use pattern matching, so that either additional info added after the command or slight variations would just throw back an unknown choice.<br/><br/>I'm essentially building a scenario which only accepts relevant commands, but I'd like it to be somewhat lenient on exactly what you enter they way you can use the pattern matching in the actual 'command' type object.<br/><br/>I may actually opt to just go back to requiring an exact input though. I guess I'll look more into this before I decide.",
      "PostDate": "2015-05-07T05:26:06+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "35932",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;TinFoilMkIV&quot;:34cgce2a]So here's the question, I'm using a Switch to check the result from a 'get input', I have a working method but ideally I'd like the case keys to just be &quot;whatever text the input is&quot;, and I'm not sure what a good/the best method for this is.[/quote:34cgce2a]\nI do not think [i:34cgce2a]switch [/i:34cgce2a]allows that, I think the case values need to be string or integer literals (specifical values, not function calls, etc. Try this instead:\n[code:34cgce2a]msg (&quot;enter a command&quot;)\nget input {\n  if (IsRegexMatch(&quot;option1&quot;,LCase(result))) {\n    msg (&quot;do stuff here&quot;)\n  }\n  else if (IsRegexMatch(&quot;option2&quot;,LCase(result))) {\n    msg (&quot;do different stuff here&quot;)\n  }\n  else {\n    msg (&quot;invalid input&quot;)\n  }\n}[/code:34cgce2a]",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>TinFoilMkIV wrote:</cite>So here's the question, I'm using a Switch to check the result from a 'get input', I have a working method but ideally I'd like the case keys to just be &quot;whatever text the input is&quot;, and I'm not sure what a good/the best method for this is.</blockquote><br/>I do not think <span style=\"font-style:italic;\">switch </span>allows that, I think the case values need to be string or integer literals (specifical values, not function calls, etc. Try this instead:<br/><pre><code>msg (&quot;enter a command&quot;)<br/>get input {<br/>  if (IsRegexMatch(&quot;option1&quot;,LCase(result))) {<br/>    msg (&quot;do stuff here&quot;)<br/>  }<br/>  else if (IsRegexMatch(&quot;option2&quot;,LCase(result))) {<br/>    msg (&quot;do different stuff here&quot;)<br/>  }<br/>  else {<br/>    msg (&quot;invalid input&quot;)<br/>  }<br/>}</code></pre>",
      "PostDate": "2015-05-07T08:00:20+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "35934",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "using &quot;IsRegexMatch(&quot;option1&quot;,LCase(result))&quot; is actually allowed as a case key, but it's a lot of typing per key with more opportunity for errors and you can't actually read the fully key in GUI mode to see what options you already have entered. Even in code view you have to look through the key to determine which one you're actually looking at.\n\nI was hoping to simplify it to make reading the code easier as well as less opportunity for errors, but that may not be possible with this method without restricting the accepted input to be more specific.",
      "EditableFormat": "bbcode",
      "HTML": "using &quot;IsRegexMatch(&quot;option1&quot;,LCase(result))&quot; is actually allowed as a case key, but it's a lot of typing per key with more opportunity for errors and you can't actually read the fully key in GUI mode to see what options you already have entered. Even in code view you have to look through the key to determine which one you're actually looking at.<br/><br/>I was hoping to simplify it to make reading the code easier as well as less opportunity for errors, but that may not be possible with this method without restricting the accepted input to be more specific.",
      "PostDate": "2015-05-07T15:10:46+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "35935",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;TinFoilMkIV&quot;:lxh3qn3i]using &quot;IsRegexMatch(&quot;option1&quot;,LCase(result))&quot; is actually allowed as a case key...[/quote:lxh3qn3i]\nSo it is, I am surprised.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>TinFoilMkIV wrote:</cite>using &quot;IsRegexMatch(&quot;option1&quot;,LCase(result))&quot; is actually allowed as a case key...</blockquote><br/>So it is, I am surprised.",
      "PostDate": "2015-05-07T15:40:48+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "35937",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "it has to be checked against &quot;switch(true) {  } however, and that's not exactly easy to decipher when going back over code to check for errors. Makes it a bit tricky to easily find which block of code is doing what. Especially when all the keys are &quot;IsRegexMat....&quot;",
      "EditableFormat": "bbcode",
      "HTML": "it has to be checked against &quot;switch(true) {  } however, and that's not exactly easy to decipher when going back over code to check for errors. Makes it a bit tricky to easily find which block of code is doing what. Especially when all the keys are &quot;IsRegexMat....&quot;",
      "PostDate": "2015-05-07T15:44:52+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "35946",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Not sure if this seems better, but it's an alternate way: use a script dictionary (maps strings to scripts). Then loop through the keys in the dictionary and see if any matches (regex or otherwise). If so, invoke the corresponding script. The following sample game shows the technique.\n\n[code:2kaexug7]&lt;!--Saved by Quest 5&#46;5&#46;5328&#46;26617--&gt;\n&lt;asl version=&quot;550&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;sdtest&quot;&gt;\n    &lt;gameid&gt;e36b8c02-0b58-4d62-b130-520286181f49&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2015&lt;/firstpublished&gt;\n    &lt;matches type=&quot;scriptdictionary&quot;&gt;\n      &lt;item key=&quot;option1&quot;&gt;\n        msg (&quot;This happens for option1&quot;)\n      &lt;/item&gt;\n      &lt;item key=&quot;option2&quot;&gt;\n        msg (&quot;Option 2 seems nice&#46;&quot;)\n      &lt;/item&gt;\n      &lt;item key=&quot;option3&quot;&gt;\n        msg (&quot;Third time's the charm&#46;&quot;)\n      &lt;/item&gt;\n    &lt;/matches&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;command&gt;\n    &lt;pattern&gt;test&lt;/pattern&gt;\n    &lt;script&gt;\n      msg (&quot;Enter an option&quot;)\n      get input {\n      \tforeach(key, game&#46;matches) {\n      \t\tif (IsRegexMatch(key, LCase(result))) {\n      \t\t\tinvoke(ScriptDictionaryItem(game&#46;matches, key))\n      \t\t}\n      \t}\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n&lt;/asl&gt;[/code:2kaexug7]\nHIghlights: &quot;game.matches&quot; is a script dictionary. And there is a &quot;test&quot; command that asks for input and then tries to match an entry in the dictionary,",
      "EditableFormat": "bbcode",
      "HTML": "Not sure if this seems better, but it's an alternate way: use a script dictionary (maps strings to scripts). Then loop through the keys in the dictionary and see if any matches (regex or otherwise). If so, invoke the corresponding script. The following sample game shows the technique.<br/><br/><pre><code>&lt;!--Saved by Quest 5&#46;5&#46;5328&#46;26617--&gt;<br/>&lt;asl version=&quot;550&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;sdtest&quot;&gt;<br/>    &lt;gameid&gt;e36b8c02-0b58-4d62-b130-520286181f49&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2015&lt;/firstpublished&gt;<br/>    &lt;matches type=&quot;scriptdictionary&quot;&gt;<br/>      &lt;item key=&quot;option1&quot;&gt;<br/>        msg (&quot;This happens for option1&quot;)<br/>      &lt;/item&gt;<br/>      &lt;item key=&quot;option2&quot;&gt;<br/>        msg (&quot;Option 2 seems nice&#46;&quot;)<br/>      &lt;/item&gt;<br/>      &lt;item key=&quot;option3&quot;&gt;<br/>        msg (&quot;Third time's the charm&#46;&quot;)<br/>      &lt;/item&gt;<br/>    &lt;/matches&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;command&gt;<br/>    &lt;pattern&gt;test&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      msg (&quot;Enter an option&quot;)<br/>      get input {<br/>      \tforeach(key, game&#46;matches) {<br/>      \t\tif (IsRegexMatch(key, LCase(result))) {<br/>      \t\t\tinvoke(ScriptDictionaryItem(game&#46;matches, key))<br/>      \t\t}<br/>      \t}<br/>      }<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;<br/>&lt;/asl&gt;</code></pre><br/>HIghlights: &quot;game.matches&quot; is a script dictionary. And there is a &quot;test&quot; command that asks for input and then tries to match an entry in the dictionary,",
      "PostDate": "2015-05-07T21:02:17+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "35953",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "Hmm, yea not sure if it's actually &quot;better&quot; per se for code readability, but I think that method may at least keep things more organized and at least a bit easier to debug once you're used to how it's setup\n\nIdeally what I'd want would be the code to create what is essentially a limited scope 'command'. The argument against just using normal commands and flag checking if you're in the scope of where it should do anything is mainly ui clutter while editing the game. I really don't want to have to deal with sorting through a list of 300 something commands where every other command has a similar name with different patterns.",
      "EditableFormat": "bbcode",
      "HTML": "Hmm, yea not sure if it's actually &quot;better&quot; per se for code readability, but I think that method may at least keep things more organized and at least a bit easier to debug once you're used to how it's setup<br/><br/>Ideally what I'd want would be the code to create what is essentially a limited scope 'command'. The argument against just using normal commands and flag checking if you're in the scope of where it should do anything is mainly ui clutter while editing the game. I really don't want to have to deal with sorting through a list of 300 something commands where every other command has a similar name with different patterns.",
      "PostDate": "2015-05-08T18:47:01+01:00",
      "LastEditDate": null
    }
  ]
}
