{
  "Topic": {
    "TopicId": "4325",
    "ForumId": "10",
    "Title": "Reachable?",
    "LastUpdated": "2014-05-10T19:34:42+01:00",
    "ReplyCount": 3
  },
  "Posts": [
    {
      "PostId": "28715",
      "UserId": 0,
      "Username": "Espera",
      "UserAvatar": null,
      "UserGravatar": "04bdffe31cdc4e1c0d61f05a2f5a7532",
      "EditableText": "Simply, what does it mean for an boject to be reachable?",
      "EditableFormat": "bbcode",
      "HTML": "Simply, what does it mean for an boject to be reachable?",
      "PostDate": "2014-05-10T01:37:34+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28717",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "here's you go:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeReachable\">http://quest5.net/wiki/ScopeReachable</a><!-- m -->\n\n&quot;All objects in this scope can be interacted with directly by the player.&quot;\n\nso, for example, an object in a locked and closed container object, would *NOT* be 'reachable'.",
      "EditableFormat": "bbcode",
      "HTML": "here's you go:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeReachable\">http://quest5.net/wiki/ScopeReachable</a><!-- m --><br/><br/>&quot;All objects in this scope can be interacted with directly by the player.&quot;<br/><br/>so, for example, an object in a locked and closed container object, would *NOT* be 'reachable'.",
      "PostDate": "2014-05-10T04:09:08+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28719",
      "UserId": 0,
      "Username": "Espera",
      "UserAvatar": null,
      "UserGravatar": "04bdffe31cdc4e1c0d61f05a2f5a7532",
      "EditableText": "And I would presume that an object in another room is likewise not reachable.",
      "EditableFormat": "bbcode",
      "HTML": "And I would presume that an object in another room is likewise not reachable.",
      "PostDate": "2014-05-10T08:05:56+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28724",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "yes, you're correct. The 'reachable' Attribute (and underlying built-in Scope function with it, if I am understanding how it works) defines the object as being directly interact'able with: you don't have to do an initial pre-action like unlocking and~or opening another object, nor having to go to another room, to act upon the 'reachable' object.\n\nfor real life examples:\n\nif you got a plate on the dinner table in the room that you're in, you can grab that plate with your hand in one action, but if you got a plate on a table in another room, you got to do 2 actions: (1) walk into the other room and then (2) grab the plate, and if you got the plate in a cupboard, you have to do 2 actions also: (1) open the cupboard and then (2) grab the plate.\n\nnow, I believe these (same room and not inside of another object) are the only two things that make an object 'reachable or not reachable'.\n\nhowever, you can make your own 'my_reachable' attribute and function, whereas, you got more and or different 'checks' of if it's 'reachable or not reachable', for example:\n\nlet's say there's a key floating high above your head, so for your 'my_reachable' function you'd have a 'check' of:\n\nif (player.flying = true) {\n-&gt; key.reachable = true\n} else if (player.flying = false) {\n-&gt; key.reachable = false\n}\nif (key.reachable = true) {\n-&gt; // you take~get the key:\n-&gt; key.parent = player\n-&gt; msg (&quot;You take~get the key and put it into your pocket&quot;)\n} else if key.reachable = false) {\n-&gt; msg (&quot;The key isn't reachable, you can't take~get it&quot;)\n}\n\nI think this is similar to how the built-in 'reachable' attribute and function works for when an object is inside of another object.\n\nanother example of a check (for whether you can engage in combat or not):\n\nthere's a monster on the other side of a river, and neither of you can swim, nor do either of you have projectile weapons, nor able to cast any spells.\n\n--------\n\nso, 'reachable', 'visable', and etc attributes and functions are like 'conditions or states' of an object, which determine whether you can perform various actions upon or with that object.\n\nif 'take_able' (boolean attribute = true), then you can 'take' (Verb Script is enabled~allowed for) the object\nif 'equipable', then you can 'equip' an object\nif 'open_able', then you can 'open' an object\nif 'lock_able', then you can 'lock' an object\nif 'door', then you can 'open~close' an object\nif 'use_able', then you can 'use' an object\nif 'drop_able', then you can 'drop' an object\nif 'switch_able', then you can 'switch' an object 'on~off'\n\n------------------\n\nhere's the closest thing that I could find within the wiki for what is 'reachable', otherwise, you'll have to look through quest's built-in game engine~coding (in the GUI~Editor: left pane's 'tree of stuff' -&gt; Filter -&gt; Show Library Elements):\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ContainsReachable\">http://quest5.net/wiki/ContainsReachable</a><!-- m -->\n\nit seems to just be comparing the 'parent' and 'child' relationships, of whether it's 'reachable or not', so for example (if I myself understand it too, lol):\n\noutside house\n-&gt; HK\n-&gt;-&gt; HK's pants with pockets\n-&gt;-&gt;-&gt; wallet\n-&gt;-&gt;-&gt;-&gt; $1.00 dollar bill\n-&gt;-&gt;-&gt;-&gt; $5.00 dollar bill\n-&gt;-&gt; HK's shirt with a pocket\n-&gt;-&gt;-&gt; pen\ninside house\n-&gt; espera\n-&gt;-&gt; purse\n-&gt;-&gt;-&gt; mascara\n-&gt;-&gt;-&gt; gum\n-&gt;-&gt;-&gt; mirror\n-&gt;-&gt;-&gt; $1.00 dollar bill\n-&gt;-&gt;-&gt; $5.00 dollar bill",
      "EditableFormat": "bbcode",
      "HTML": "yes, you're correct. The 'reachable' Attribute (and underlying built-in Scope function with it, if I am understanding how it works) defines the object as being directly interact'able with: you don't have to do an initial pre-action like unlocking and~or opening another object, nor having to go to another room, to act upon the 'reachable' object.<br/><br/>for real life examples:<br/><br/>if you got a plate on the dinner table in the room that you're in, you can grab that plate with your hand in one action, but if you got a plate on a table in another room, you got to do 2 actions: (1) walk into the other room and then (2) grab the plate, and if you got the plate in a cupboard, you have to do 2 actions also: (1) open the cupboard and then (2) grab the plate.<br/><br/>now, I believe these (same room and not inside of another object) are the only two things that make an object 'reachable or not reachable'.<br/><br/>however, you can make your own 'my_reachable' attribute and function, whereas, you got more and or different 'checks' of if it's 'reachable or not reachable', for example:<br/><br/>let's say there's a key floating high above your head, so for your 'my_reachable' function you'd have a 'check' of:<br/><br/>if (player.flying = true) {<br/>-&gt; key.reachable = true<br/>} else if (player.flying = false) {<br/>-&gt; key.reachable = false<br/>}<br/>if (key.reachable = true) {<br/>-&gt; // you take~get the key:<br/>-&gt; key.parent = player<br/>-&gt; msg (&quot;You take~get the key and put it into your pocket&quot;)<br/>} else if key.reachable = false) {<br/>-&gt; msg (&quot;The key isn't reachable, you can't take~get it&quot;)<br/>}<br/><br/>I think this is similar to how the built-in 'reachable' attribute and function works for when an object is inside of another object.<br/><br/>another example of a check (for whether you can engage in combat or not):<br/><br/>there's a monster on the other side of a river, and neither of you can swim, nor do either of you have projectile weapons, nor able to cast any spells.<br/><br/>--------<br/><br/>so, 'reachable', 'visable', and etc attributes and functions are like 'conditions or states' of an object, which determine whether you can perform various actions upon or with that object.<br/><br/>if 'take_able' (boolean attribute = true), then you can 'take' (Verb Script is enabled~allowed for) the object<br/>if 'equipable', then you can 'equip' an object<br/>if 'open_able', then you can 'open' an object<br/>if 'lock_able', then you can 'lock' an object<br/>if 'door', then you can 'open~close' an object<br/>if 'use_able', then you can 'use' an object<br/>if 'drop_able', then you can 'drop' an object<br/>if 'switch_able', then you can 'switch' an object 'on~off'<br/><br/>------------------<br/><br/>here's the closest thing that I could find within the wiki for what is 'reachable', otherwise, you'll have to look through quest's built-in game engine~coding (in the GUI~Editor: left pane's 'tree of stuff' -&gt; Filter -&gt; Show Library Elements):<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ContainsReachable\">http://quest5.net/wiki/ContainsReachable</a><!-- m --><br/><br/>it seems to just be comparing the 'parent' and 'child' relationships, of whether it's 'reachable or not', so for example (if I myself understand it too, lol):<br/><br/>outside house<br/>-&gt; HK<br/>-&gt;-&gt; HK's pants with pockets<br/>-&gt;-&gt;-&gt; wallet<br/>-&gt;-&gt;-&gt;-&gt; $1.00 dollar bill<br/>-&gt;-&gt;-&gt;-&gt; $5.00 dollar bill<br/>-&gt;-&gt; HK's shirt with a pocket<br/>-&gt;-&gt;-&gt; pen<br/>inside house<br/>-&gt; espera<br/>-&gt;-&gt; purse<br/>-&gt;-&gt;-&gt; mascara<br/>-&gt;-&gt;-&gt; gum<br/>-&gt;-&gt;-&gt; mirror<br/>-&gt;-&gt;-&gt; $1.00 dollar bill<br/>-&gt;-&gt;-&gt; $5.00 dollar bill",
      "PostDate": "2014-05-10T19:34:42+01:00",
      "LastEditDate": null
    }
  ]
}
