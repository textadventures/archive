{
  "Topic": {
    "TopicId": "tdedgqxejuwrx9wkavkwtq",
    "ForumId": "10",
    "Title": "Turn Script Question ^_^ [SOLVED]",
    "LastUpdated": "2016-08-21T01:55:38.3954229Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "963f090b-93e9-47bb-afbe-374dd4379744",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/28lV6nMb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm not sure why this turn-script isn't working. I'm thinking maybe I have the syntax off or something but after double checking it three or four times now, I can't find anything that would be preventing it from working. \r\n\r\nSo I have a ripped up t-shirt item that will randomly become disheveled. I set up a flag.boolean (False). Changedflag.script \r\n```\r\nif (tattered_tshirt.flag=\"False\") {\r\n  if (player.gender=\"female\") {\r\n    EnableTurnScript (disheveled)\r\n  }\r\n}\r\n```\r\nThen I have a Verb \"Adjust\"\r\n```\r\nif (tattered_tshirt.worn=\"True\") {\r\n  if (player.gender=\"female\") {\r\n    if (tattered_tshirt.flag=\"True\") {\r\n      msg (\"<br/>You realize your shirt is disheveled\")\r\n      tattered_tshirt.flag = False\r\n    }\r\n    else {\r\n      msg (\"<br/>There's nothing to adjust at the moment. The tattered t-shirt is fitting just fine.<br/>\")\r\n      EnableTurnScript (disheveled)\r\n    }\r\n  }\r\n  else {\r\n    msg (\"<br/>You don't really need to worry about adjusting this given that you're a guy.\")\r\n  }\r\n}\r\nelse {\r\n  msg (\"<br/>There's no need to adjust this t-shirt right now given that you aren't wearing it. <br/>\")\r\n}\r\n```\r\nAnd the turn-script connected on the t-shirt object.\r\n```\r\nif (RandomChance(80)) {\r\n  msg (\"<br/>You suddenly feel a draft and realize your clothes are disheveled.<br/>\")\r\n  tattered_tshirt.flag = True\r\n}\r\n```\r\n\r\nBut for some reason the turn-script isn't activating even if I enable it in the beginning of the game. It's basically supposed to activate, be deactivated then randomly activated again with a 3% chance. At the moment it's set to 80% for testing. \r\n\r\nAnyone see what I'm doing wrong?",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not sure why this turn-script isn't working. I'm thinking maybe I have the syntax off or something but after double checking it three or four times now, I can't find anything that would be preventing it from working.</p>\n<p>So I have a ripped up t-shirt item that will randomly become disheveled. I set up a flag.boolean (False). Changedflag.script</p>\n<pre><code>if (tattered_tshirt.flag=\"False\") {\n  if (player.gender=\"female\") {\n    EnableTurnScript (disheveled)\n  }\n}\n</code></pre>\n<p>Then I have a Verb \"Adjust\"</p>\n<pre><code>if (tattered_tshirt.worn=\"True\") {\n  if (player.gender=\"female\") {\n    if (tattered_tshirt.flag=\"True\") {\n      msg (\"&lt;br/&gt;You realize your shirt is disheveled\")\n      tattered_tshirt.flag = False\n    }\n    else {\n      msg (\"&lt;br/&gt;There's nothing to adjust at the moment. The tattered t-shirt is fitting just fine.&lt;br/&gt;\")\n      EnableTurnScript (disheveled)\n    }\n  }\n  else {\n    msg (\"&lt;br/&gt;You don't really need to worry about adjusting this given that you're a guy.\")\n  }\n}\nelse {\n  msg (\"&lt;br/&gt;There's no need to adjust this t-shirt right now given that you aren't wearing it. &lt;br/&gt;\")\n}\n</code></pre>\n<p>And the turn-script connected on the t-shirt object.</p>\n<pre><code>if (RandomChance(80)) {\n  msg (\"&lt;br/&gt;You suddenly feel a draft and realize your clothes are disheveled.&lt;br/&gt;\")\n  tattered_tshirt.flag = True\n}\n</code></pre>\n<p>But for some reason the turn-script isn't activating even if I enable it in the beginning of the game. It's basically supposed to activate, be deactivated then randomly activated again with a 3% chance. At the moment it's set to 80% for testing.</p>\n<p>Anyone see what I'm doing wrong?</p>\n\n",
      "PostDate": "2016-08-21T01:55:38.3954229Z",
      "LastEditDate": "2016-08-21T18:23:45.3248231Z"
    },
    {
      "PostId": "4e9ad004-22d4-4fe4-8324-aaa3c9c7d103",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "if you put/added/created your Turnscript within an Object (a local Turnscript), then it doesn't fire/run its scripts unless/until you're in that Object too (even with it being enabled).\r\n\r\nif you have the Turnscript outside of Objects as a standalone Element within the game code, then it's a global Turnscript, and will fire/run its scripts(when its enabled of course), regardless of where you are.\r\n\r\n-------\r\n\r\nalso... do you have a 'disable turnscript' anywhere?\r\n\r\nalso... your Turnscript will continue to do 'RandomChance(80)' forever (always and continually setting/re-setting this over and over forever: 'tattered_tshirt.flag = true'), from what you provided me anyways as there's nothing that prevents the Turnscripts scripts from running nor any 'disable Turnscript' either. The 'RandomChance(80)' is a total waste of operation with how you got it all set up with what you provided me.",
      "EditableFormat": "markdown",
      "HTML": "<p>if you put/added/created your Turnscript within an Object (a local Turnscript), then it doesn't fire/run its scripts unless/until you're in that Object too (even with it being enabled).</p>\n<p>if you have the Turnscript outside of Objects as a standalone Element within the game code, then it's a global Turnscript, and will fire/run its scripts(when its enabled of course), regardless of where you are.</p>\n<hr>\n<p>also... do you have a 'disable turnscript' anywhere?</p>\n<p>also... your Turnscript will continue to do 'RandomChance(80)' forever (always and continually setting/re-setting this over and over forever: 'tattered_tshirt.flag = true'), from what you provided me anyways as there's nothing that prevents the Turnscripts scripts from running nor any 'disable Turnscript' either. The 'RandomChance(80)' is a total waste of operation with how you got it all set up with what you provided me.</p>\n\n",
      "PostDate": "2016-08-21T03:40:14.4257972Z",
      "LastEditDate": "2016-08-21T03:41:10.2348797Z"
    },
    {
      "PostId": "896807a5-0262-4cb4-9d9b-1b7b88b66a16",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/28lV6nMb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks HK :) I'll figure something else out then! \r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks HK :) I'll figure something else out then!</p>\n\n",
      "PostDate": "2016-08-21T05:03:57.9588027Z",
      "LastEditDate": null
    },
    {
      "PostId": "cfeb1982-7133-42ec-adbe-b43af42ba904",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "A couple of general points abiout this:\r\n```\r\nif (tattered_tshirt.flag=\"False\") {\r\n```\r\nYou are checking if flag is equal to a certain string, and yet you say flag is a Boolean. I would expect Quest to complain about that so there is probably somewhere else that flag is getting set to a string too. Also, it would be better to give the flag a proper name, say \"disheveled\". And I would have the change script on the \"worn\" attribute, so it goes off when the player puts it on or off.\r\n\r\nSo delete the current shancescript, and add a new one \"changedworn\" that looks like this:\r\n```\r\nif (player.gender=\"female\")\r\n  tattered_tshirt.disheveled = false\r\n  if (tattered_tshirt.worn) {\r\n    EnableTurnScript (disheveled)\r\n  }\r\n  else {\r\n    DisableTurnScript (disheveled)\r\n  }\r\n}\r\n```\r\nThe verb script needs slight changes at the top:\r\n```\r\nif (tattered_tshirt.worn) {\r\n  if (player.gender=\"female\") {\r\n    if (tattered_tshirt.disheveled) {\r\n...\r\n```\r\nThe turnscript should be fine, but as HK says should be global. Might be worth hecking if you have false or true in quotes anywhere else in your game, or set as string attributes.",
      "EditableFormat": "markdown",
      "HTML": "<p>A couple of general points abiout this:</p>\n<pre><code>if (tattered_tshirt.flag=\"False\") {\n</code></pre>\n<p>You are checking if flag is equal to a certain string, and yet you say flag is a Boolean. I would expect Quest to complain about that so there is probably somewhere else that flag is getting set to a string too. Also, it would be better to give the flag a proper name, say \"disheveled\". And I would have the change script on the \"worn\" attribute, so it goes off when the player puts it on or off.</p>\n<p>So delete the current shancescript, and add a new one \"changedworn\" that looks like this:</p>\n<pre><code>if (player.gender=\"female\")\n  tattered_tshirt.disheveled = false\n  if (tattered_tshirt.worn) {\n    EnableTurnScript (disheveled)\n  }\n  else {\n    DisableTurnScript (disheveled)\n  }\n}\n</code></pre>\n<p>The verb script needs slight changes at the top:</p>\n<pre><code>if (tattered_tshirt.worn) {\n  if (player.gender=\"female\") {\n    if (tattered_tshirt.disheveled) {\n...\n</code></pre>\n<p>The turnscript should be fine, but as HK says should be global. Might be worth hecking if you have false or true in quotes anywhere else in your game, or set as string attributes.</p>\n\n",
      "PostDate": "2016-08-21T07:43:45.9462971Z",
      "LastEditDate": null
    },
    {
      "PostId": "910ce0fc-8302-401a-9845-6b6a14456382",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/28lV6nMb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well, I'm avoiding adding unnecessary global turn-scripts that don't have anything to do with the main function of the game because eventually there are going to be a lot of important turn-scripts so I'd rather the game not be struggling at that point. What I ended up doing was leaving the flag and inserting a small 30% chance script at certain areas of the game where the clothing can become disheveled. ^_^ Less for Quest to keep track of!",
      "EditableFormat": "markdown",
      "HTML": "<p>Well, I'm avoiding adding unnecessary global turn-scripts that don't have anything to do with the main function of the game because eventually there are going to be a lot of important turn-scripts so I'd rather the game not be struggling at that point. What I ended up doing was leaving the flag and inserting a small 30% chance script at certain areas of the game where the clothing can become disheveled. ^_^ Less for Quest to keep track of!</p>\n\n",
      "PostDate": "2016-08-21T16:51:33.9252262Z",
      "LastEditDate": null
    },
    {
      "PostId": "84ed5e24-f569-4593-addd-07d1829226b4",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**Note:**\r\n\r\n1. all activation usually needs a corresponding de-activation too\r\n\r\n2. also, actually all of the below activation methods, can have conditions applied/added to their scripting, to control whether they run/fire their condition-controlled scripts or not, as well as the activation-handling methods themselves\r\n\r\n**activation by any/every/all actions by user, while being ANYWHERE IN THE GAME (it doesn't matter where you are):**\r\n\r\nglobal Turnscripts-(though you should just have a single global Turnscript), (if enabled, of course, and also if optional conditions are met/un-met), run/fire their scripts after every/any/all actions/internal-turns (click on a button or hyperlink with mouse, or type in an input and hit enter). So, if you need this to happen, then you use a global Turnscript\r\n\r\n**activation by any/every/all actions by user, BUT ONLY IF you're in the same room as the (local) Turnscript:**\r\n\r\nuse local Turnscripts (if you're in the same room as the local Turnscript, and if it is enalbed, of course), run/fire their scripts after every/any/all actions/internal-turns (click on a button or hyperlink with mouse, or type in an input and hit enter). So, if you need this to happen, then you use a local Turnscript\r\n\r\n**activation, when-ever/every-time, a specific Attribute's Value changes:**\r\n\r\nthe special 'changed' Script Attribute will run/fire its scripts\r\n\r\n**activation by user, via the user's input (and optionally be condition-based too), would be achieved through:**\r\n\r\n1. Verb usage (the action doesn't occur until the user clicks on a Verb's button or hyperlink)\r\n2. typed-in input (Commands and/or 'get input' Script/Function) usage (the action doesn't occur until you typed-in somthing and hit enter)\r\n\r\n**activation via changing the room you're in:**\r\n\r\n1. use the, GUI~Editor's / built-in Code, of the local or global, 'onenterroom or whatever it is called', Script\r\n2. using the special 'changed' Script Attribute and/or Turnscripts, with the 'parent' Attribute of the Player Object(s). Optional conditions are available to include via scripting design\r\n\r\n**and probably many more methods of activation that I can't think of, and/or don't want to list/describe, as they can be infinite in number, lol.**",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>Note:</strong></p>\n<ol>\n<li>\n<p>all activation usually needs a corresponding de-activation too</p>\n</li>\n<li>\n<p>also, actually all of the below activation methods, can have conditions applied/added to their scripting, to control whether they run/fire their condition-controlled scripts or not, as well as the activation-handling methods themselves</p>\n</li>\n</ol>\n<p><strong>activation by any/every/all actions by user, while being ANYWHERE IN THE GAME (it doesn't matter where you are):</strong></p>\n<p>global Turnscripts-(though you should just have a single global Turnscript), (if enabled, of course, and also if optional conditions are met/un-met), run/fire their scripts after every/any/all actions/internal-turns (click on a button or hyperlink with mouse, or type in an input and hit enter). So, if you need this to happen, then you use a global Turnscript</p>\n<p><strong>activation by any/every/all actions by user, BUT ONLY IF you're in the same room as the (local) Turnscript:</strong></p>\n<p>use local Turnscripts (if you're in the same room as the local Turnscript, and if it is enalbed, of course), run/fire their scripts after every/any/all actions/internal-turns (click on a button or hyperlink with mouse, or type in an input and hit enter). So, if you need this to happen, then you use a local Turnscript</p>\n<p><strong>activation, when-ever/every-time, a specific Attribute's Value changes:</strong></p>\n<p>the special 'changed' Script Attribute will run/fire its scripts</p>\n<p><strong>activation by user, via the user's input (and optionally be condition-based too), would be achieved through:</strong></p>\n<ol>\n<li>Verb usage (the action doesn't occur until the user clicks on a Verb's button or hyperlink)</li>\n<li>typed-in input (Commands and/or 'get input' Script/Function) usage (the action doesn't occur until you typed-in somthing and hit enter)</li>\n</ol>\n<p><strong>activation via changing the room you're in:</strong></p>\n<ol>\n<li>use the, GUI~Editor's / built-in Code, of the local or global, 'onenterroom or whatever it is called', Script</li>\n<li>using the special 'changed' Script Attribute and/or Turnscripts, with the 'parent' Attribute of the Player Object(s). Optional conditions are available to include via scripting design</li>\n</ol>\n<p><strong>and probably many more methods of activation that I can't think of, and/or don't want to list/describe, as they can be infinite in number, lol.</strong></p>\n\n",
      "PostDate": "2016-08-21T23:31:23.7667874Z",
      "LastEditDate": "2016-08-21T23:40:29.8074678Z"
    }
  ]
}
