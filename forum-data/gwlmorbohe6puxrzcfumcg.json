{
  "Topic": {
    "TopicId": "gwlmorbohe6puxrzcfumcg",
    "ForumId": "18",
    "Title": "The Last Room Visited (scripts, function, &  command)",
    "LastUpdated": "2017-08-08T06:38:09.7400212Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "fe64b874-d276-49f8-a375-fe556c2fc0a8",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "# Last Room Visited (updated 8/10/17)\r\n\r\n#### **Start script**\r\n```\r\ngame.last_room = NewObjectList()\r\n```\r\n\r\n\r\n\r\n#### **Before entering a room**\r\n```\r\nif ((ListCount(game.last_room)) > 1) {\r\n  lr = ListItem(game.last_room, 1)\r\n  // msg (lr)\r\n  list remove (game.last_room, ListItem(game.last_room, 1))\r\n  // msg (\"REMOVED 1\")\r\n  list remove (game.last_room, ListItem(game.last_room, 0))\r\n  // msg (\"REMOVED 0\")\r\n  // msg (game.last_room)\r\n  list add (game.last_room, lr)\r\n  list add (game.last_room, game.pov.parent)\r\n  // msg (game.last_room)\r\n  LastRoom\r\n}\r\nelse if ((ListCount(game.last_room)) = 1) {\r\n  list add (game.last_room, game.pov.parent)\r\n  // msg (lr)\r\n  // msg (game.last_room)\r\n  LastRoom\r\n}\r\nelse {\r\n  list add (game.last_room, game.pov.parent)\r\n}\r\n```\r\n\r\n---\r\n#### **Function: LastRoom**\r\n\r\n```\r\nif (ListCount(game.last_room) > 0) {\r\n  msg (\"Last room:\")\r\n  msg (ListItem(game.last_room, 0))\r\n  }\r\nelse {\r\n  msg (\"You've only been in this room at this point.\")\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<h1>Last Room Visited (updated 8/10/17)</h1>\n<h4><strong>Start script</strong></h4>\n<pre><code>game.last_room = NewObjectList()\n</code></pre>\n<h4><strong>Before entering a room</strong></h4>\n<pre><code>if ((ListCount(game.last_room)) &gt; 1) {\n  lr = ListItem(game.last_room, 1)\n  // msg (lr)\n  list remove (game.last_room, ListItem(game.last_room, 1))\n  // msg (\"REMOVED 1\")\n  list remove (game.last_room, ListItem(game.last_room, 0))\n  // msg (\"REMOVED 0\")\n  // msg (game.last_room)\n  list add (game.last_room, lr)\n  list add (game.last_room, game.pov.parent)\n  // msg (game.last_room)\n  LastRoom\n}\nelse if ((ListCount(game.last_room)) = 1) {\n  list add (game.last_room, game.pov.parent)\n  // msg (lr)\n  // msg (game.last_room)\n  LastRoom\n}\nelse {\n  list add (game.last_room, game.pov.parent)\n}\n</code></pre>\n<hr>\n<h4><strong>Function: LastRoom</strong></h4>\n<pre><code>if (ListCount(game.last_room) &gt; 0) {\n  msg (\"Last room:\")\n  msg (ListItem(game.last_room, 0))\n  }\nelse {\n  msg (\"You've only been in this room at this point.\")\n}\n</code></pre>\n\n",
      "PostDate": "2017-08-08T06:38:09.7400212Z",
      "LastEditDate": "2017-08-10T20:00:19.6826944Z",
      "link": null
    },
    {
      "PostId": "33b07efb-09f3-4458-9889-3ff707ad7f6d",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There is a variable oldroom. I cannot remember where it is available but i would guess the enter script.",
      "EditableFormat": "markdown",
      "HTML": "<p>There is a variable oldroom. I cannot remember where it is available but i would guess the enter script.</p>\n\n",
      "PostDate": "2017-08-08T10:07:16.5431673Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d493ac92-56ab-4707-bfee-fd5ac013440b",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Why make this a List Object instead of a simple variable?\r\nUnless you want to create a list of rooms visited.\r\nHmmm, maybe as a way to tell the player that they have visited all the rooms and that the region is completed...\r\nFor that, a list of room names then delete each room as it is entered...\r\nAnd when the list length=0, then all rooms visited.\r\nA boolean list, then change the current room to true, but may need the rooms numbered.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Why make this a List Object instead of a simple variable?<br>\nUnless you want to create a list of rooms visited.<br>\nHmmm, maybe as a way to tell the player that they have visited all the rooms and that the region is completed...<br>\nFor that, a list of room names then delete each room as it is entered...<br>\nAnd when the list length=0, then all rooms visited.<br>\nA boolean list, then change the current room to true, but may need the rooms numbered.</p>\n\n",
      "PostDate": "2017-08-08T17:56:26.9533789Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "90c94cd8-2f32-4922-b96a-7e1e9deaee69",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Aha!\r\n\r\nThank you!\r\n\r\n```if (IsDefined(\"oldRoom\")) {```\r\n\r\n\r\n**OnEnterRoom**\r\n\r\n```\r\n  <function name=\"OnEnterRoom\" parameters=\"oldRoom\">\r\n    <![CDATA[\r\n    game.displayroomdescriptiononstart = false\r\n    if (IsDefined(\"oldRoom\")) {\r\n      if (oldRoom <> null) {\r\n        if (game.clearscreenonroomenter) {\r\n          ClearScreen\r\n          if (not game.currentexitmessage = null) {\r\n            msg(game.currentexitmessage)\r\n            game.currentexitmessage = null\r\n          }\r\n        }\r\n        if (HasScript(oldRoom, \"onexit\")) {\r\n          do (oldRoom, \"onexit\")\r\n        }\r\n      }\r\n    }\r\n    \r\n    on ready {\r\n      if ((not GetBoolean(game.pov.parent, \"visited\")) and HasScript(game.pov.parent, \"beforefirstenter\")) {\r\n        do (game.pov.parent, \"beforefirstenter\")\r\n      }\r\n  \r\n      on ready {\r\n        if (HasScript(game.pov.parent, \"beforeenter\")) {\r\n          do (game.pov.parent, \"beforeenter\")\r\n        }\r\n    \r\n        on ready {\r\n          if (game.gridmap) {\r\n            Grid_CalculateMapCoordinates (game.pov.parent, game.pov)\r\n            Grid_DrawPlayerInRoom (game.pov.parent)\r\n          }\r\n          \r\n          if (IsDefined(\"oldRoom\")) {\r\n            if (oldRoom <> null and game.changeroom_newline and not game.command_newline) {\r\n              msg (\"\")\r\n            }            \r\n          }\r\n          \r\n          request (UpdateLocation, CapFirst(GetDisplayName(game.pov.parent)))\r\n          roomFrameExists = false\r\n          if (HasString(game.pov.parent, \"picture\")) {\r\n            if (LengthOf(game.pov.parent.picture) > 0) {\r\n              roomFrameExists = true\r\n              SetFramePicture(game.pov.parent.picture)\r\n            }\r\n          }\r\n          if (game.clearframe and not roomFrameExists) {\r\n            ClearFramePicture\r\n          }\r\n          if (game.showdescriptiononenter) {\r\n            ShowRoomDescription\r\n          }\r\n          \r\n          if (HasScript( game, \"roomenter\")) {\r\n            do (game, \"roomenter\")\r\n          }\r\n          on ready {     \r\n            if ((not GetBoolean(game.pov.parent, \"visited\")) and HasScript(game.pov.parent, \"firstenter\")) {\r\n              do (game.pov.parent, \"firstenter\")\r\n            }\r\n            on ready {\r\n              if (HasScript(game.pov.parent, \"enter\")) {\r\n                do (game.pov.parent, \"enter\")\r\n              }\r\n            }\r\n            set (game.pov.parent, \"visited\", true)\r\n          }\r\n        }  \r\n      }\r\n    }\r\n    ]]>\r\n  </function>\r\n```\r\n\r\n---\r\nUPDATE: ```oldRoom``` isn't always working, and I can't find where the parameter is being passed from. It doesn't appear to be an attribute that's tied to anything(?), nor is it a function.\r\n\r\n\r\n```\r\nKV@LAPTOP MSYS /c/Program Files (x86)/Quest 5\r\n$ grep -r oldRoom *\r\nCore/CoreDescriptions.aslx:  <function name=\"OnEnterRoom\" parameters=\"oldRoom\">\r\nCore/CoreDescriptions.aslx:    if (IsDefined(\"oldRoom\")) {\r\nCore/CoreDescriptions.aslx:      if (oldRoom <> null) {\r\nCore/CoreDescriptions.aslx:        if (HasScript(oldRoom, \"onexit\")) {\r\nCore/CoreDescriptions.aslx:          do (oldRoom, \"onexit\")\r\nCore/CoreDescriptions.aslx:          if (IsDefined(\"oldRoom\")) {\r\nCore/CoreDescriptions.aslx:            if (oldRoom <> null and game.changeroom_newline and not game.command_newline) {\r\n```\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Aha!</p>\n<p>Thank you!</p>\n<p><code>if (IsDefined(\"oldRoom\")) {</code></p>\n<p><strong>OnEnterRoom</strong></p>\n<pre><code>  &lt;function name=\"OnEnterRoom\" parameters=\"oldRoom\"&gt;\n    &lt;![CDATA[\n    game.displayroomdescriptiononstart = false\n    if (IsDefined(\"oldRoom\")) {\n      if (oldRoom &lt;&gt; null) {\n        if (game.clearscreenonroomenter) {\n          ClearScreen\n          if (not game.currentexitmessage = null) {\n            msg(game.currentexitmessage)\n            game.currentexitmessage = null\n          }\n        }\n        if (HasScript(oldRoom, \"onexit\")) {\n          do (oldRoom, \"onexit\")\n        }\n      }\n    }\n    \n    on ready {\n      if ((not GetBoolean(game.pov.parent, \"visited\")) and HasScript(game.pov.parent, \"beforefirstenter\")) {\n        do (game.pov.parent, \"beforefirstenter\")\n      }\n  \n      on ready {\n        if (HasScript(game.pov.parent, \"beforeenter\")) {\n          do (game.pov.parent, \"beforeenter\")\n        }\n    \n        on ready {\n          if (game.gridmap) {\n            Grid_CalculateMapCoordinates (game.pov.parent, game.pov)\n            Grid_DrawPlayerInRoom (game.pov.parent)\n          }\n          \n          if (IsDefined(\"oldRoom\")) {\n            if (oldRoom &lt;&gt; null and game.changeroom_newline and not game.command_newline) {\n              msg (\"\")\n            }            \n          }\n          \n          request (UpdateLocation, CapFirst(GetDisplayName(game.pov.parent)))\n          roomFrameExists = false\n          if (HasString(game.pov.parent, \"picture\")) {\n            if (LengthOf(game.pov.parent.picture) &gt; 0) {\n              roomFrameExists = true\n              SetFramePicture(game.pov.parent.picture)\n            }\n          }\n          if (game.clearframe and not roomFrameExists) {\n            ClearFramePicture\n          }\n          if (game.showdescriptiononenter) {\n            ShowRoomDescription\n          }\n          \n          if (HasScript( game, \"roomenter\")) {\n            do (game, \"roomenter\")\n          }\n          on ready {     \n            if ((not GetBoolean(game.pov.parent, \"visited\")) and HasScript(game.pov.parent, \"firstenter\")) {\n              do (game.pov.parent, \"firstenter\")\n            }\n            on ready {\n              if (HasScript(game.pov.parent, \"enter\")) {\n                do (game.pov.parent, \"enter\")\n              }\n            }\n            set (game.pov.parent, \"visited\", true)\n          }\n        }  \n      }\n    }\n    ]]&gt;\n  &lt;/function&gt;\n</code></pre>\n<hr>\n<p>UPDATE: <code>oldRoom</code> isn't always working, and I can't find where the parameter is being passed from. It doesn't appear to be an attribute that's tied to anything(?), nor is it a function.</p>\n<pre><code>KV@LAPTOP MSYS /c/Program Files (x86)/Quest 5\n$ grep -r oldRoom *\nCore/CoreDescriptions.aslx:  &lt;function name=\"OnEnterRoom\" parameters=\"oldRoom\"&gt;\nCore/CoreDescriptions.aslx:    if (IsDefined(\"oldRoom\")) {\nCore/CoreDescriptions.aslx:      if (oldRoom &lt;&gt; null) {\nCore/CoreDescriptions.aslx:        if (HasScript(oldRoom, \"onexit\")) {\nCore/CoreDescriptions.aslx:          do (oldRoom, \"onexit\")\nCore/CoreDescriptions.aslx:          if (IsDefined(\"oldRoom\")) {\nCore/CoreDescriptions.aslx:            if (oldRoom &lt;&gt; null and game.changeroom_newline and not game.command_newline) {\n</code></pre>\n\n",
      "PostDate": "2017-08-08T19:25:01.7240017Z",
      "LastEditDate": "2017-08-11T04:59:51.1152378Z",
      "link": null
    },
    {
      "PostId": "0d46749a-0fe1-41ee-bc6d-84763ec5ab25",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "an Object Attribute works fine for if you only want to go back to the room you just came from. The trick is that this actually takes 3 VARIABLES to do it: 'player.old_room', 'player.current_room', and 'player.parent', see below for an example:\r\n\r\nthee reason is that you got to transfer (\"musical chairs\") from the old current room to the old room, and from the room you've just moved to, to the current room, when you move to a new room.\r\n\r\nplayer.parent = room_1\r\nplayer.old_room = room_1\r\nplayer.current_room = room_1\r\n\r\nupon (after) moving:\r\nplayer.old_room = player.current_room // as can be seen, the old value of the old_room, get's discarded/replaced upon (after) moving\r\nplayer.current_room = player.parent // then, the current_room's value gets updated to the current room you're in right now (the room you've just moved to).\r\n\r\nlet's see how it works perfectly:\r\n\r\nyou move to room_2 from room_1:\r\n// player.old_room = player.current_room = room_1\r\n// player.current_room = player.parent = room_2\r\n\r\nyou move to room_3 from room_2:\r\n// player.old_room = player.current_room = room_2\r\n// player.current_room = player.parent = room_3\r\n\r\nyou move to room_4 from room_3:\r\n// player.old_room = player.current_room = room_3\r\n// player.current_room = player.parent = room_4\r\n\r\nyou move to room_5 from room_4:\r\n// player.old_room = player.current_room = room_4\r\n// player.current_room = player.parent = room_5\r\n\r\nyou move to room_3 from room_5:\r\n// player.old_room = player.current_room = room_5\r\n// player.current_room = player.parent = room_3\r\n\r\nyou move to room_1 from room_3:\r\n// player.old_room = player.current_room = room_3\r\n// player.current_room = player.parent = room_1\r\n\r\nyou move to room_4 from room_1:\r\n// player.old_room = player.current_room = room_1\r\n// player.current_room = player.parent = room_4\r\n\r\nyou move to room_2 from room_4:\r\n// player.old_room = player.current_room = room_4\r\n// player.current_room = player.parent = room_2\r\n\r\n------\r\n\r\nyou could do with only 2 VARIABLES:\r\n\r\nplayer.old_room\r\nplayer.parent\r\n\r\nbut this just doesn't work as well, because:\r\n\r\n// as you'd have to perform/ask-to-do the 'move back' scripting BEFORE you then do this as your very last script upon (after) moving to a new room: player.old_room = parent, and BEFORE you move to another new room\r\n\r\n--------\r\n\r\nbut you need an Object List Attribute for if you want to go back multiple room previous visits and/or in steps (one room at a time)\r\n\r\n---------\r\n\r\n@ K.V. (and others):\r\n\r\nwhen you add items to a list, they go to the end of the list.\r\n\r\nso the \"last room\", when you already added in, the current room you've just-moved-to, to the list, it is this: ListCount (LIST) - 2 // the second last item in the list. This is more likely to be used, as it works better.\r\n\r\nso the \"last room\", when you have NOT yet added the room you've currently just moved-to, is this: ListCount (LIST) - 1 // the last item in the list. This is less likely to be used, as it doesn't work as well. See the reason give for using an Object Attribute above.\r\n\r\nquest has the built-in setup and stuff for doing directly: (2nd) LIFO (second last in, first out/used).\r\n\r\nthis is just for being able to go back to rooms....\r\n\r\nhow to handle removing rooms from the list, can be a bit more involved, depending on how it needs to be done.",
      "EditableFormat": "markdown",
      "HTML": "<p>an Object Attribute works fine for if you only want to go back to the room you just came from. The trick is that this actually takes 3 VARIABLES to do it: 'player.old_room', 'player.current_room', and 'player.parent', see below for an example:</p>\n<p>thee reason is that you got to transfer (\"musical chairs\") from the old current room to the old room, and from the room you've just moved to, to the current room, when you move to a new room.</p>\n<p>player.parent = room_1<br>\nplayer.old_room = room_1<br>\nplayer.current_room = room_1</p>\n<p>upon (after) moving:<br>\nplayer.old_room = player.current_room // as can be seen, the old value of the old_room, get's discarded/replaced upon (after) moving<br>\nplayer.current_room = player.parent // then, the current_room's value gets updated to the current room you're in right now (the room you've just moved to).</p>\n<p>let's see how it works perfectly:</p>\n<p>you move to room_2 from room_1:<br>\n// player.old_room = player.current_room = room_1<br>\n// player.current_room = player.parent = room_2</p>\n<p>you move to room_3 from room_2:<br>\n// player.old_room = player.current_room = room_2<br>\n// player.current_room = player.parent = room_3</p>\n<p>you move to room_4 from room_3:<br>\n// player.old_room = player.current_room = room_3<br>\n// player.current_room = player.parent = room_4</p>\n<p>you move to room_5 from room_4:<br>\n// player.old_room = player.current_room = room_4<br>\n// player.current_room = player.parent = room_5</p>\n<p>you move to room_3 from room_5:<br>\n// player.old_room = player.current_room = room_5<br>\n// player.current_room = player.parent = room_3</p>\n<p>you move to room_1 from room_3:<br>\n// player.old_room = player.current_room = room_3<br>\n// player.current_room = player.parent = room_1</p>\n<p>you move to room_4 from room_1:<br>\n// player.old_room = player.current_room = room_1<br>\n// player.current_room = player.parent = room_4</p>\n<p>you move to room_2 from room_4:<br>\n// player.old_room = player.current_room = room_4<br>\n// player.current_room = player.parent = room_2</p>\n<hr>\n<p>you could do with only 2 VARIABLES:</p>\n<p>player.old_room<br>\nplayer.parent</p>\n<p>but this just doesn't work as well, because:</p>\n<p>// as you'd have to perform/ask-to-do the 'move back' scripting BEFORE you then do this as your very last script upon (after) moving to a new room: player.old_room = parent, and BEFORE you move to another new room</p>\n<hr>\n<p>but you need an Object List Attribute for if you want to go back multiple room previous visits and/or in steps (one room at a time)</p>\n<hr>\n<p>@ K.V. (and others):</p>\n<p>when you add items to a list, they go to the end of the list.</p>\n<p>so the \"last room\", when you already added in, the current room you've just-moved-to, to the list, it is this: ListCount (LIST) - 2 // the second last item in the list. This is more likely to be used, as it works better.</p>\n<p>so the \"last room\", when you have NOT yet added the room you've currently just moved-to, is this: ListCount (LIST) - 1 // the last item in the list. This is less likely to be used, as it doesn't work as well. See the reason give for using an Object Attribute above.</p>\n<p>quest has the built-in setup and stuff for doing directly: (2nd) LIFO (second last in, first out/used).</p>\n<p>this is just for being able to go back to rooms....</p>\n<p>how to handle removing rooms from the list, can be a bit more involved, depending on how it needs to be done.</p>\n\n",
      "PostDate": "2017-08-08T22:03:27.4881593Z",
      "LastEditDate": "2017-08-08T22:44:03.7523854Z",
      "link": null
    },
    {
      "PostId": "127ecd37-e22c-4d61-9be7-1c13bab04f7c",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "To get a list of rooms the player has visited:\r\n\r\n    list = FilterByAttributes(AllObjects(), \"visited\", true)",
      "EditableFormat": "markdown",
      "HTML": "<p>To get a list of rooms the player has visited:</p>\n<pre><code>list = FilterByAttributes(AllObjects(), \"visited\", true)\n</code></pre>\n\n",
      "PostDate": "2017-08-09T21:31:38.9696625Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "aa1a7dbe-455e-4fa0-b70f-3a5b67b1f0aa",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The scripts in my first post in this thread worked (but it didn't kick in until after the SECOND room - I just realized this, and the fix is included later on in this post)), but I *did* try to use Pixie's method, just to have one less extra unnecessary attribute.\r\n\r\n---\r\nI dropped the 's' (changing it to Attribute), and this sort of works, but it seems to list the rooms alphabetically:\r\n\r\n```\r\nlist = FilterByAttribute(AllObjects(), \"visited\", true)\r\nif (ListCount(list) > 0) msg (list)\r\nif (ListCount(list) > 0) msg (GetDisplayName(ListItem(list, ((ListCount(list))) - 1 )))\r\n```\r\n\r\n\r\n\r\nYou are in a room.\r\nYou can go north.\r\n\r\n> north\r\n\r\nYou are in a room2.\r\nYou can go south or north.\r\nList: Object: room; \r\na room\r\n\r\n> north\r\n\r\nYou are in a room3.\r\nYou can go south or north.\r\nList: Object: room; Object: room2; \r\na room2\r\n\r\n> north\r\n\r\nYou are in a room4.\r\nYou can go north or south.\r\nList: Object: room; Object: room2; Object: room3; \r\na room3\r\n\r\n> south\r\n\r\nYou are in a room3.\r\nYou can go south or north.\r\nList: Object: room; Object: room2; Object: room3; Object: room4; \r\na room4\r\n\r\n> south\r\n\r\nYou are in a room2.\r\nYou can go south or north.\r\nList: Object: room; Object: room2; Object: room3; Object: room4; \r\na room4\r\n\r\n> south\r\n\r\nYou are in a room.\r\nYou can go north.\r\nList: Object: room; Object: room2; Object: room3; Object: room4; \r\na room4\r\n\r\n> north\r\n\r\nYou are in a room2.\r\nYou can go south or north.\r\nList: Object: room; Object: room2; Object: room3; Object: room4; \r\na room4\r\n\r\n> north\r\n\r\nYou are in a room3.\r\nYou can go south or north.\r\nList: Object: room; Object: room2; Object: room3; Object: room4; \r\na room4\r\n\r\n\r\n---\r\n### So:\r\n I went back and altered the **before entering room** script as well as the function from my first post:\r\nhttp://textadventures.co.uk/forum/samples/topic/gwlmorbohe6puxrzcfumcg/the-last-room-visited-scripts-function-command#fe64b874-d276-49f8-a375-fe556c2fc0a8\r\n\r\nIt works perfectly now:\r\n\r\n---\r\nYou are in a room.\r\nYou can go north.\r\n\r\n> north\r\n\r\nYou are in a room2.\r\nYou can go south or north.\r\nLast room:\r\nObject: room\r\n\r\n> north\r\n\r\nYou are in a room3.\r\nYou can go south or north.\r\nLast room:\r\nObject: room2\r\n\r\n> north\r\n\r\nYou are in a room4.\r\nYou can go north or south.\r\nLast room:\r\nObject: room3\r\n\r\n> north\r\n\r\nYou are in a room5.\r\nYou can go south.\r\nLast room:\r\nObject: room4\r\n\r\n> south\r\n\r\nYou are in a room4.\r\nYou can go north or south.\r\nLast room:\r\nObject: room5\r\n\r\n> south\r\n\r\nYou are in a room3.\r\nYou can go south or north.\r\nLast room:\r\nObject: room4\r\n\r\n> south\r\n\r\nYou are in a room2.\r\nYou can go south or north.\r\nLast room:\r\nObject: room3\r\n\r\n> north\r\n\r\nYou are in a room3.\r\nYou can go south or north.\r\nLast room:\r\nObject: room2\r\n\r\n> south\r\n\r\nYou are in a room2.\r\nYou can go south or north.\r\nLast room:\r\nObject: room3\r\n\r\n---\r\n\r\nI didn't even need to be using the list count to find the item in the function's script. (The first way I had written it, I had the list growing longer with each room change. I fixed that, but never thought that I could just use item 0 until I was writing this to explain that part.)",
      "EditableFormat": "markdown",
      "HTML": "<p>The scripts in my first post in this thread worked (but it didn't kick in until after the SECOND room - I just realized this, and the fix is included later on in this post)), but I <em>did</em> try to use Pixie's method, just to have one less extra unnecessary attribute.</p>\n<hr>\n<p>I dropped the 's' (changing it to Attribute), and this sort of works, but it seems to list the rooms alphabetically:</p>\n<pre><code>list = FilterByAttribute(AllObjects(), \"visited\", true)\nif (ListCount(list) &gt; 0) msg (list)\nif (ListCount(list) &gt; 0) msg (GetDisplayName(ListItem(list, ((ListCount(list))) - 1 )))\n</code></pre>\n<p>You are in a room.<br>\nYou can go north.</p>\n<blockquote>\n<p>north</p>\n</blockquote>\n<p>You are in a room2.<br>\nYou can go south or north.<br>\nList: Object: room;<br>\na room</p>\n<blockquote>\n<p>north</p>\n</blockquote>\n<p>You are in a room3.<br>\nYou can go south or north.<br>\nList: Object: room; Object: room2;<br>\na room2</p>\n<blockquote>\n<p>north</p>\n</blockquote>\n<p>You are in a room4.<br>\nYou can go north or south.<br>\nList: Object: room; Object: room2; Object: room3;<br>\na room3</p>\n<blockquote>\n<p>south</p>\n</blockquote>\n<p>You are in a room3.<br>\nYou can go south or north.<br>\nList: Object: room; Object: room2; Object: room3; Object: room4;<br>\na room4</p>\n<blockquote>\n<p>south</p>\n</blockquote>\n<p>You are in a room2.<br>\nYou can go south or north.<br>\nList: Object: room; Object: room2; Object: room3; Object: room4;<br>\na room4</p>\n<blockquote>\n<p>south</p>\n</blockquote>\n<p>You are in a room.<br>\nYou can go north.<br>\nList: Object: room; Object: room2; Object: room3; Object: room4;<br>\na room4</p>\n<blockquote>\n<p>north</p>\n</blockquote>\n<p>You are in a room2.<br>\nYou can go south or north.<br>\nList: Object: room; Object: room2; Object: room3; Object: room4;<br>\na room4</p>\n<blockquote>\n<p>north</p>\n</blockquote>\n<p>You are in a room3.<br>\nYou can go south or north.<br>\nList: Object: room; Object: room2; Object: room3; Object: room4;<br>\na room4</p>\n<hr>\n<h3>So:</h3>\n<p>I went back and altered the <strong>before entering room</strong> script as well as the function from my first post:<br>\nhttp://textadventures.co.uk/forum/samples/topic/gwlmorbohe6puxrzcfumcg/the-last-room-visited-scripts-function-command#fe64b874-d276-49f8-a375-fe556c2fc0a8</p>\n<p>It works perfectly now:</p>\n<hr>\n<p>You are in a room.<br>\nYou can go north.</p>\n<blockquote>\n<p>north</p>\n</blockquote>\n<p>You are in a room2.<br>\nYou can go south or north.<br>\nLast room:<br>\nObject: room</p>\n<blockquote>\n<p>north</p>\n</blockquote>\n<p>You are in a room3.<br>\nYou can go south or north.<br>\nLast room:<br>\nObject: room2</p>\n<blockquote>\n<p>north</p>\n</blockquote>\n<p>You are in a room4.<br>\nYou can go north or south.<br>\nLast room:<br>\nObject: room3</p>\n<blockquote>\n<p>north</p>\n</blockquote>\n<p>You are in a room5.<br>\nYou can go south.<br>\nLast room:<br>\nObject: room4</p>\n<blockquote>\n<p>south</p>\n</blockquote>\n<p>You are in a room4.<br>\nYou can go north or south.<br>\nLast room:<br>\nObject: room5</p>\n<blockquote>\n<p>south</p>\n</blockquote>\n<p>You are in a room3.<br>\nYou can go south or north.<br>\nLast room:<br>\nObject: room4</p>\n<blockquote>\n<p>south</p>\n</blockquote>\n<p>You are in a room2.<br>\nYou can go south or north.<br>\nLast room:<br>\nObject: room3</p>\n<blockquote>\n<p>north</p>\n</blockquote>\n<p>You are in a room3.<br>\nYou can go south or north.<br>\nLast room:<br>\nObject: room2</p>\n<blockquote>\n<p>south</p>\n</blockquote>\n<p>You are in a room2.<br>\nYou can go south or north.<br>\nLast room:<br>\nObject: room3</p>\n<hr>\n<p>I didn't even need to be using the list count to find the item in the function's script. (The first way I had written it, I had the list growing longer with each room change. I fixed that, but never thought that I could just use item 0 until I was writing this to explain that part.)</p>\n\n",
      "PostDate": "2017-08-10T02:57:33.5653565Z",
      "LastEditDate": "2017-08-10T20:01:46.9957352Z",
      "link": null
    },
    {
      "PostId": "e319b8d6-ef77-4cc1-9f4e-f5c5a9b939bc",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "And... back to the point...\r\nWhy a list of 1 item and not just the variable player.LastRoom???\r\nOr, game.LastRoom?\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>And... back to the point...<br>\nWhy a list of 1 item and not just the variable player.LastRoom???<br>\nOr, game.LastRoom?</p>\n\n",
      "PostDate": "2017-08-10T04:21:30.9648125Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2efcd97f-ef93-46b4-a21a-8a233de293fa",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Why a list of 1 item and not just the variable player.LastRoom???\r\nOr, game.LastRoom?\r\n\r\nProbably because I'm over-complicating it, but I don't know...\r\n\r\nI've got this on the ```before entering a room``` script for the entire game, not individually tailored for specific rooms so this can be used as a library.\r\n\r\nI also want the game to keep track of the last room AFTER it's printed the room description. It seems that this method doesn't quite work that way: (```Entrance.Last_Room = \"Cave6\"```) \r\n\r\nI'm keeping track of the last rooms of the player and all the NPCs with the attribute 'shadowing' (or sometimes whistled,; in the instance you've told the horse to stay and left the room she's in, you can whistle and she will come to your location, room by room, turn by turn.)\r\n\r\nThis also utilizes PathLib. Any NPC following any animate object will take the shortest route to it's target room.  Then, a message prints that informs the player which direction the NPC has just arrived from (but only when the player is in the target room).  This comes into play because one member of the player's posse is dirty, back-stabbing son-of-a-buck.\r\n\r\nAt times, there can be up to 6 followers in the player's posse, and any number of antagonists who have been set up to target the player or any one of the player's posse. You can also tell your NPC buddies to follow bad guys or each other.\r\n\r\nShort example:\r\n\r\n---\r\n\r\nValley\r\nYou can see Ralph and Sally.\r\nYou can go west, east or north.\r\nThere is a dried up riverbed underfoot, which leads from east to west.\r\n\r\nYour friend, Chainsaw, lives just east of here.\r\n\r\n\\> sally, stay\r\nSally stops following you.\r\n\r\n\\> n\r\n\r\nTop of the Hill\r\nYou can see The Harbinger.\r\nYou can go south or north.\r\nRalph arrives from the south.\r\n\r\n\\> n\r\n\r\nTown Limits\r\nYou can see a badge.\r\nYou can go south or north.\r\nRalph arrives from the south.\r\n\r\n\\> n\r\n\r\nIntersection of Alain St. and Farthing St.\r\nYou can go south, north or east.\r\nRalph arrives from the south.\r\n\r\n\\> n\r\n\r\nAlain Street\r\nYou can go south, north or east.\r\nRalph arrives from the south.\r\n\r\n\\> n\r\n\r\nIntersection of Alain St. and Third St.\r\nYou can go east or south.\r\nRalph arrives from the south.\r\n\r\n#### **NOTE: There is a random chance an antagonist will appear and magically move the player to a random room. This next command/cheat emulates that by moving **only the player** across the map, hence breaking the normal way to have followers follow you:**\r\n\\> cheat move Adventure Street\r\n\r\nAdventure Street\r\nYou can go south, north, west or in.\r\nRalph is in Third Street, and headed your way. (for testing)\r\n\r\n\\> whistle\r\nSally is in Top of the Hill, and headed your way. (for testing)\r\nRalph is in intersection of Third St. and Adventure St., and headed your way. (for testing)\r\n\r\n\\> z\r\nYou wait 1 minute.\r\nSally is in Town Limits, and headed your way. (for testing)\r\nRalph arrives from the north.\r\n\r\n\\> z\r\nYou wait 1 minute.\r\nSally is in intersection of Alain St. and Farthing St., and headed your way. (for testing)\r\n\r\n\\> z\r\nYou wait 1 minute.\r\nSally is in Alain Street, and headed your way. (for testing)\r\n\r\n\\> z\r\nYou wait 1 minute.\r\nSally is in Mundane Corral, and headed your way. (for testing)\r\n\r\n\\> z\r\nYou wait 1 minute.\r\nSally arrives from the west.\r\n\r\n---\r\nI'm porting my game from Inform 7 to Quest, you see. So, I'm trying to make the mechanics identical. (It's been fun, but I have the followers script working together with PathLib now, which was the biggest obstacle. I'll be updating that post today, by the way.)\r\n\r\nHere's the link to the port in progress. I still have to add in all of the funny bits, most of the bad guys, a few red herrings, responses, etc., but the world model and mechanics are pretty much set up now.\r\n\r\n(NOTE: You will see testing messages appear once in a while.)\r\n\r\nhttp://textadventures.co.uk/games/view/rr9vezzxkeaovamsaqgxcw/they-call-ya-mister-quest-prototype-in-progress",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Why a list of 1 item and not just the variable player.LastRoom???<br>\nOr, game.LastRoom?</p>\n</blockquote>\n<p>Probably because I'm over-complicating it, but I don't know...</p>\n<p>I've got this on the <code>before entering a room</code> script for the entire game, not individually tailored for specific rooms so this can be used as a library.</p>\n<p>I also want the game to keep track of the last room AFTER it's printed the room description. It seems that this method doesn't quite work that way: (<code>Entrance.Last_Room = \"Cave6\"</code>)</p>\n<p>I'm keeping track of the last rooms of the player and all the NPCs with the attribute 'shadowing' (or sometimes whistled,; in the instance you've told the horse to stay and left the room she's in, you can whistle and she will come to your location, room by room, turn by turn.)</p>\n<p>This also utilizes PathLib. Any NPC following any animate object will take the shortest route to it's target room.  Then, a message prints that informs the player which direction the NPC has just arrived from (but only when the player is in the target room).  This comes into play because one member of the player's posse is dirty, back-stabbing son-of-a-buck.</p>\n<p>At times, there can be up to 6 followers in the player's posse, and any number of antagonists who have been set up to target the player or any one of the player's posse. You can also tell your NPC buddies to follow bad guys or each other.</p>\n<p>Short example:</p>\n<hr>\n<p>Valley<br>\nYou can see Ralph and Sally.<br>\nYou can go west, east or north.<br>\nThere is a dried up riverbed underfoot, which leads from east to west.</p>\n<p>Your friend, Chainsaw, lives just east of here.</p>\n<p>&gt; sally, stay<br>\nSally stops following you.</p>\n<p>&gt; n</p>\n<p>Top of the Hill<br>\nYou can see The Harbinger.<br>\nYou can go south or north.<br>\nRalph arrives from the south.</p>\n<p>&gt; n</p>\n<p>Town Limits<br>\nYou can see a badge.<br>\nYou can go south or north.<br>\nRalph arrives from the south.</p>\n<p>&gt; n</p>\n<p>Intersection of Alain St. and Farthing St.<br>\nYou can go south, north or east.<br>\nRalph arrives from the south.</p>\n<p>&gt; n</p>\n<p>Alain Street<br>\nYou can go south, north or east.<br>\nRalph arrives from the south.</p>\n<p>&gt; n</p>\n<p>Intersection of Alain St. and Third St.<br>\nYou can go east or south.<br>\nRalph arrives from the south.</p>\n<h4><strong>NOTE: There is a random chance an antagonist will appear and magically move the player to a random room. This next command/cheat emulates that by moving <strong>only the player</strong> across the map, hence breaking the normal way to have followers follow you:</strong></h4>\n<p>&gt; cheat move Adventure Street</p>\n<p>Adventure Street<br>\nYou can go south, north, west or in.<br>\nRalph is in Third Street, and headed your way. (for testing)</p>\n<p>&gt; whistle<br>\nSally is in Top of the Hill, and headed your way. (for testing)<br>\nRalph is in intersection of Third St. and Adventure St., and headed your way. (for testing)</p>\n<p>&gt; z<br>\nYou wait 1 minute.<br>\nSally is in Town Limits, and headed your way. (for testing)<br>\nRalph arrives from the north.</p>\n<p>&gt; z<br>\nYou wait 1 minute.<br>\nSally is in intersection of Alain St. and Farthing St., and headed your way. (for testing)</p>\n<p>&gt; z<br>\nYou wait 1 minute.<br>\nSally is in Alain Street, and headed your way. (for testing)</p>\n<p>&gt; z<br>\nYou wait 1 minute.<br>\nSally is in Mundane Corral, and headed your way. (for testing)</p>\n<p>&gt; z<br>\nYou wait 1 minute.<br>\nSally arrives from the west.</p>\n<hr>\n<p>I'm porting my game from Inform 7 to Quest, you see. So, I'm trying to make the mechanics identical. (It's been fun, but I have the followers script working together with PathLib now, which was the biggest obstacle. I'll be updating that post today, by the way.)</p>\n<p>Here's the link to the port in progress. I still have to add in all of the funny bits, most of the bad guys, a few red herrings, responses, etc., but the world model and mechanics are pretty much set up now.</p>\n<p>(NOTE: You will see testing messages appear once in a while.)</p>\n<p>http://textadventures.co.uk/games/view/rr9vezzxkeaovamsaqgxcw/they-call-ya-mister-quest-prototype-in-progress</p>\n\n",
      "PostDate": "2017-08-10T13:56:31.7781539Z",
      "LastEditDate": "2017-08-10T14:46:31.2063961Z",
      "link": null
    },
    {
      "PostId": "c9f82c86-e099-4ff0-89b7-984365e50acf",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you are using it so that a following NPC can follow you, then the NPC will follow in your footprints, but not move directly towards you.\r\nIE: You move: E, E, N, N, W S, S, S,...\r\nThe NPC starts at your location with you.\r\nThen the NPC would follow the same path, 8 steps.\r\nBut to get to you, all it takes is 2 steps, E, S.\r\nThere are pathing programs out there (I think I have one for BASIC) that would do this easer.\r\n\"This also utilizes PathLib\"... Oh, you are using one...\r\nIs PathLib from Inform 7? I don't find it in Quest.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>If you are using it so that a following NPC can follow you, then the NPC will follow in your footprints, but not move directly towards you.<br>\nIE: You move: E, E, N, N, W S, S, S,...<br>\nThe NPC starts at your location with you.<br>\nThen the NPC would follow the same path, 8 steps.<br>\nBut to get to you, all it takes is 2 steps, E, S.<br>\nThere are pathing programs out there (I think I have one for BASIC) that would do this easer.<br>\n\"This also utilizes PathLib\"... Oh, you are using one...<br>\nIs PathLib from Inform 7? I don't find it in Quest.</p>\n\n",
      "PostDate": "2017-08-10T17:09:41.3843215Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5f2ad469-cdae-40e9-89bc-edd67bcf79c2",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It's Quest.\r\n\r\n(Digging through files........)\r\n\r\n[PathLib.asxl](https://gist.githubusercontent.com/KVonGit/ef664a6074f554decdc2938af46461d2/raw/039779814fa529724e088597a9ae45bf7f9c4f8f/PathLib.aslx)\r\n\r\n``` xml\r\n\r\n<!--\r\n     PathLib  - v0.9\r\n\r\n     === Description ===\r\n\r\n     This library implements some simple path determining functions. \r\n     \r\n     === Functions ===\r\n\r\n     - PathLib_GetPath: Pass the start and end rooms, and it will return a list of exits which\r\n     can be used to navigate from start to end.\r\n       * If there is no path from start to end, null is returned\r\n       * If the start and end are the same room, an empty list is returned\r\n       * Otherwise, a list of one or more exits is returned. Given the way the algorithm\r\n         works, this should, in theory, be the shortest path between start and end.\r\n     Note that this function will use all exits existing in the world to determine the path.\r\n     \r\n     - PathLib_GetRestrictedPath: The same as GetPath, except the path is only searched up to a\r\n     maximum length. If the target room is not found within that length, it simply stops\r\n     and returns null. This allows local searches. Passing -1 for maxlength provides the\r\n     same behavior as GetPath.\r\n\r\n     - PathLib_GetDistance: Get the distance between two rooms.\r\n\r\n     - PathLib_GetPathExt: Full-blown search API. Takes the start room, end room, max path and a list\r\n     of exits to use as its search set. This allows path searches to only use a certain subset\r\n     of exits. Pass -1 for maxlength to perform an unrestricted search.\r\n     Note: the only requirement for an \"exit\" in the list is that it be an object\r\n     with a \"parent\" room and a \"to\" room. There is no requirement that it be an actual\r\n     Quest exit.\r\n     \r\n     === History ===\r\n     v0.7 - 2012-09-24 (Jay Nabonne): Initial revision\r\n     v0.8 - 2012-09-25 (Jay Nabonne): Renamed functions and added GetDistance functions\r\n     v0.9 - 2013-05-08 (Jay Nabonne): Optimizations.\r\n-->\r\n\r\n<library>\r\n  <!-- Find a path from start to end using all the exits in the world. -->\r\n  <function name=\"PathLib_GetPath\" parameters=\"start, end\" type=\"objectlist\">\r\n    return (PathLib_GetPathExt(start, end, AllExits(), -1))\r\n  </function>\r\n\r\n  <!-- Find a path from start to end using all the exits in the world, to a maximum length. -->\r\n  <function name=\"PathLib_GetRestrictedPath\" parameters=\"start, end, maxlength\" type=\"objectlist\">\r\n    return (PathLib_GetPathExt(start, end, AllExits(), maxlength))\r\n  </function>\r\n\r\n  <!-- Compute the distance between two rooms. Returns -1 if no path found. -->\r\n  <function name=\"PathLib_GetDistance\" parameters=\"start, end\" type=\"int\">\r\n    return (PathLib_GetDistanceExt(start, end, AllExits(), -1))\r\n  </function>\r\n\r\n  <!-- Compute the distance between two rooms. Returns -1 if no path found. -->\r\n  <function name=\"PathLib_GetRestrictedDistance\" parameters=\"start, end, maxlength\" type=\"int\">\r\n    return (PathLib_GetDistanceExt(start, end, AllExits(), maxlength))\r\n  </function>\r\n\r\n  <!-- Compute the distance between two rooms, with restricted search depth. Returns -1 if no path found. -->\r\n  <function name=\"PathLib_GetDistanceExt\" parameters=\"start, end, exits, maxlength\" type=\"int\">\r\n    path = PathLib_GetPathExt(start, end, exits, maxlength)\r\n    if (path = null) {\r\n      distance = -1\r\n    }\r\n    else {\r\n      distance = ListCount(path)\r\n    }\r\n    return (distance)\r\n  </function>\r\n\r\n  <!-- Find a path from start to end using a set of exits and maxlength passed. -->\r\n  <function name=\"PathLib_GetPathExt\" parameters=\"start, end, exits, maxlength\" type=\"objectlist\">\r\n    <![CDATA[\r\n    //msg(\"GetPathExt from \" + start + \" to \" + end)\r\n    // It is more efficient to mark the rooms rather than track them in lists.\r\n    if (not HasInt(game, \"pathID\")) {\r\n      game.pathID = 0\r\n    }\r\n    // Bump the path ID for this path. This saves us from having to unmark all previously marked rooms.\r\n    game.pathID = game.pathID + 1\r\n\r\n    path = null\r\n    current = NewList()\r\n    entry = _PathLib_AddEntry(current, start)\r\n    dictionary add(entry, \"path\", NewObjectList())\r\n    length = 0\r\n    iterations = 0\r\n  \twhile (ListCount(current) <> 0 and path = null and (maxlength = -1 or length <= maxlength)) {\r\n      iterations = iterations + 1\r\n  \t\tentry = current[0]\r\n  \t\tlist remove(current, entry)\r\n      room = entry[\"room\"]\r\n      room.pathlib_visited = game.pathID\r\n      if (room = end) {\r\n        path = entry[\"path\"]\r\n      } else {\r\n        foreach (exit, exits) {\r\n          toRoom = exit.to\r\n          //msg(\"toRoom = \" + toRoom)\r\n          if (toRoom <> null) {\r\n            if (exit.parent = room and not GetBoolean(exit, \"excludeFromPaths\")) {\r\n              // This is a room to be investigated.\r\n              if (GetInt(toRoom, \"pathlib_current\") <> game.pathID and GetInt(toRoom, \"pathlib_visited\") <> game.pathID) {\r\n                // We have not touched this room yet. Add its exit to the list.\r\n                newEntry = _PathLib_AddEntry(current, toRoom)\r\n                // Assign to an object attribute to force a copy.\r\n                game.PathLib_pathtemp = entry[\"path\"]\r\n                list add(game.PathLib_pathtemp, exit)\r\n                dictionary add(newEntry, \"path\", game.PathLib_pathtemp)\r\n                game.PathLib_pathtemp = null\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      length = ListCount(entry[\"path\"])\r\n  \t}\r\n    //msg(\"iterations = \" + iterations + \", path count = \" + ListCount(path))\r\n  \treturn (path)\r\n    ]]>\r\n  </function>\r\n\r\n  <!-- Add a room entry to the list. -->\r\n  <function name=\"_PathLib_AddEntry\" parameters=\"list, room\" type=\"dictionary\">\r\n    <!-- msg (\"Add entry: \" + room.name + \"(length:\" + ListCount(list) + \")\") -->\r\n    entry = NewDictionary()\r\n    dictionary add(entry, \"room\", room)\r\n    list add(list, entry)\r\n    room.pathlib_current = game.pathID\r\n    return (entry)\r\n  </function>\r\n\r\n</library>\r\n\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>It's Quest.</p>\n<p>(Digging through files........)</p>\n<p><a href=\"https://gist.githubusercontent.com/KVonGit/ef664a6074f554decdc2938af46461d2/raw/039779814fa529724e088597a9ae45bf7f9c4f8f/PathLib.aslx\">PathLib.asxl</a></p>\n<pre><code>\n&lt;!--\n     PathLib  - v0.9\n\n     === Description ===\n\n     This library implements some simple path determining functions. \n     \n     === Functions ===\n\n     - PathLib_GetPath: Pass the start and end rooms, and it will return a list of exits which\n     can be used to navigate from start to end.\n       * If there is no path from start to end, null is returned\n       * If the start and end are the same room, an empty list is returned\n       * Otherwise, a list of one or more exits is returned. Given the way the algorithm\n         works, this should, in theory, be the shortest path between start and end.\n     Note that this function will use all exits existing in the world to determine the path.\n     \n     - PathLib_GetRestrictedPath: The same as GetPath, except the path is only searched up to a\n     maximum length. If the target room is not found within that length, it simply stops\n     and returns null. This allows local searches. Passing -1 for maxlength provides the\n     same behavior as GetPath.\n\n     - PathLib_GetDistance: Get the distance between two rooms.\n\n     - PathLib_GetPathExt: Full-blown search API. Takes the start room, end room, max path and a list\n     of exits to use as its search set. This allows path searches to only use a certain subset\n     of exits. Pass -1 for maxlength to perform an unrestricted search.\n     Note: the only requirement for an \"exit\" in the list is that it be an object\n     with a \"parent\" room and a \"to\" room. There is no requirement that it be an actual\n     Quest exit.\n     \n     === History ===\n     v0.7 - 2012-09-24 (Jay Nabonne): Initial revision\n     v0.8 - 2012-09-25 (Jay Nabonne): Renamed functions and added GetDistance functions\n     v0.9 - 2013-05-08 (Jay Nabonne): Optimizations.\n--&gt;\n\n&lt;library&gt;\n  &lt;!-- Find a path from start to end using all the exits in the world. --&gt;\n  &lt;function name=\"PathLib_GetPath\" parameters=\"start, end\" type=\"objectlist\"&gt;\n    return (PathLib_GetPathExt(start, end, AllExits(), -1))\n  &lt;/function&gt;\n\n  &lt;!-- Find a path from start to end using all the exits in the world, to a maximum length. --&gt;\n  &lt;function name=\"PathLib_GetRestrictedPath\" parameters=\"start, end, maxlength\" type=\"objectlist\"&gt;\n    return (PathLib_GetPathExt(start, end, AllExits(), maxlength))\n  &lt;/function&gt;\n\n  &lt;!-- Compute the distance between two rooms. Returns -1 if no path found. --&gt;\n  &lt;function name=\"PathLib_GetDistance\" parameters=\"start, end\" type=\"int\"&gt;\n    return (PathLib_GetDistanceExt(start, end, AllExits(), -1))\n  &lt;/function&gt;\n\n  &lt;!-- Compute the distance between two rooms. Returns -1 if no path found. --&gt;\n  &lt;function name=\"PathLib_GetRestrictedDistance\" parameters=\"start, end, maxlength\" type=\"int\"&gt;\n    return (PathLib_GetDistanceExt(start, end, AllExits(), maxlength))\n  &lt;/function&gt;\n\n  &lt;!-- Compute the distance between two rooms, with restricted search depth. Returns -1 if no path found. --&gt;\n  &lt;function name=\"PathLib_GetDistanceExt\" parameters=\"start, end, exits, maxlength\" type=\"int\"&gt;\n    path = PathLib_GetPathExt(start, end, exits, maxlength)\n    if (path = null) {\n      distance = -1\n    }\n    else {\n      distance = ListCount(path)\n    }\n    return (distance)\n  &lt;/function&gt;\n\n  &lt;!-- Find a path from start to end using a set of exits and maxlength passed. --&gt;\n  &lt;function name=\"PathLib_GetPathExt\" parameters=\"start, end, exits, maxlength\" type=\"objectlist\"&gt;\n    &lt;![CDATA[\n    //msg(\"GetPathExt from \" + start + \" to \" + end)\n    // It is more efficient to mark the rooms rather than track them in lists.\n    if (not HasInt(game, \"pathID\")) {\n      game.pathID = 0\n    }\n    // Bump the path ID for this path. This saves us from having to unmark all previously marked rooms.\n    game.pathID = game.pathID + 1\n\n    path = null\n    current = NewList()\n    entry = _PathLib_AddEntry(current, start)\n    dictionary add(entry, \"path\", NewObjectList())\n    length = 0\n    iterations = 0\n  \twhile (ListCount(current) &lt;&gt; 0 and path = null and (maxlength = -1 or length &lt;= maxlength)) {\n      iterations = iterations + 1\n  \t\tentry = current[0]\n  \t\tlist remove(current, entry)\n      room = entry[\"room\"]\n      room.pathlib_visited = game.pathID\n      if (room = end) {\n        path = entry[\"path\"]\n      } else {\n        foreach (exit, exits) {\n          toRoom = exit.to\n          //msg(\"toRoom = \" + toRoom)\n          if (toRoom &lt;&gt; null) {\n            if (exit.parent = room and not GetBoolean(exit, \"excludeFromPaths\")) {\n              // This is a room to be investigated.\n              if (GetInt(toRoom, \"pathlib_current\") &lt;&gt; game.pathID and GetInt(toRoom, \"pathlib_visited\") &lt;&gt; game.pathID) {\n                // We have not touched this room yet. Add its exit to the list.\n                newEntry = _PathLib_AddEntry(current, toRoom)\n                // Assign to an object attribute to force a copy.\n                game.PathLib_pathtemp = entry[\"path\"]\n                list add(game.PathLib_pathtemp, exit)\n                dictionary add(newEntry, \"path\", game.PathLib_pathtemp)\n                game.PathLib_pathtemp = null\n              }\n            }\n          }\n        }\n      }\n      length = ListCount(entry[\"path\"])\n  \t}\n    //msg(\"iterations = \" + iterations + \", path count = \" + ListCount(path))\n  \treturn (path)\n    ]]&gt;\n  &lt;/function&gt;\n\n  &lt;!-- Add a room entry to the list. --&gt;\n  &lt;function name=\"_PathLib_AddEntry\" parameters=\"list, room\" type=\"dictionary\"&gt;\n    &lt;!-- msg (\"Add entry: \" + room.name + \"(length:\" + ListCount(list) + \")\") --&gt;\n    entry = NewDictionary()\n    dictionary add(entry, \"room\", room)\n    list add(list, entry)\n    room.pathlib_current = game.pathID\n    return (entry)\n  &lt;/function&gt;\n\n&lt;/library&gt;\n\n</code></pre>\n\n",
      "PostDate": "2017-08-10T17:26:44.5599034Z",
      "LastEditDate": "2017-08-10T18:50:22.6508365Z",
      "link": null
    },
    {
      "PostId": "e8ddfb99-12ec-4b67-8c33-ad5ebb8add45",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've got NPCs coming at you from numerous directions at any given time, while keeping track of everyone's last room to tell you where they've arrived from (which is sometimes important plot-wise).\r\n\r\nIf you stay still, they target you. If you're on the move, they target you.\r\n\r\nThe same goes for if an NPC is following another NPC. (You can command them to do this, but they sometimes do it on their own. I.e., during the big shoot-out, if Handthing is in play, he will follow Murphy around and keep the player from having to chase Murphy around. (NOTE: This is in the Inform version (playable on this site) as I type this, but I haven't written/copied and pasted any of the easy parts into the port yet. I was getting the mechanics down first.)\r\n\r\n---\r\nWhat made me want to set this up this way?\r\n\r\nWell, as I say, I originally made the game in Inform 7, and Emily Short provides an extension[*](#HoverForNote \"An extension is basically a library\") called Simple Followers.\r\n\r\nHer extension sets all of this up. I just tried to make the best use of it that I could. (There were only two followers in the beginning: Ralph and the horse. BUT I had this awesome extension, where you could make anyone target anyone from anywhere, so I figured: that's how Western's work, right? When the [expletive deleted] goes down, you and your friends scatter, and the bad guys come at you from all around...)",
      "EditableFormat": "markdown",
      "HTML": "<p>I've got NPCs coming at you from numerous directions at any given time, while keeping track of everyone's last room to tell you where they've arrived from (which is sometimes important plot-wise).</p>\n<p>If you stay still, they target you. If you're on the move, they target you.</p>\n<p>The same goes for if an NPC is following another NPC. (You can command them to do this, but they sometimes do it on their own. I.e., during the big shoot-out, if Handthing is in play, he will follow Murphy around and keep the player from having to chase Murphy around. (NOTE: This is in the Inform version (playable on this site) as I type this, but I haven't written/copied and pasted any of the easy parts into the port yet. I was getting the mechanics down first.)</p>\n<hr>\n<p>What made me want to set this up this way?</p>\n<p>Well, as I say, I originally made the game in Inform 7, and Emily Short provides an extension<a href=\"#HoverForNote\" title=\"An extension is basically a library\">*</a> called Simple Followers.</p>\n<p>Her extension sets all of this up. I just tried to make the best use of it that I could. (There were only two followers in the beginning: Ralph and the horse. BUT I had this awesome extension, where you could make anyone target anyone from anywhere, so I figured: that's how Western's work, right? When the [expletive deleted] goes down, you and your friends scatter, and the bad guys come at you from all around...)</p>\n\n",
      "PostDate": "2017-08-10T17:38:30.8130138Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e6464249-21d1-4f0d-a30d-d4439bb2ec04",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">There are pathing programs out there (I think I have one for BASIC) that would do this easer.\r\n\r\nYes, please! I'd like the one for BASIC! (My old Tandy keyboard has recently been uncovered, and I'll eventually record a text adventure to its cassette 'drive'. (I don't like to call it a cassette deck. It thinks it's a drive.))",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>There are pathing programs out there (I think I have one for BASIC) that would do this easer.</p>\n</blockquote>\n<p>Yes, please! I'd like the one for BASIC! (My old Tandy keyboard has recently been uncovered, and I'll eventually record a text adventure to its cassette 'drive'. (I don't like to call it a cassette deck. It thinks it's a drive.))</p>\n\n",
      "PostDate": "2017-08-10T17:42:11.2482991Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "856ee867-6842-443b-929f-f5f4ee5cdf6d",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "K.V. Are you looking to do something in Basic?\r\nI haven't tried to do a parser, but a set of command buttons is easy to do.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>K.V. Are you looking to do something in Basic?<br>\nI haven't tried to do a parser, but a set of command buttons is easy to do.</p>\n\n",
      "PostDate": "2017-08-10T17:56:27.6461371Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "27fb7579-152b-4eaf-90c2-e423a4b0fe97",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Are you looking to do something in Basic?\r\n\r\nI will be soon. My mother reported having found the Tandy yesterday, but I haven't picked it up yet.\r\n\r\nI think it's a Color Computer II\r\n\r\nhttps://en.wikipedia.org/wiki/TRS-80_Color_Computer#Color_Computer_2_.281983.E2.80.931986.29\r\n\r\n\r\n>I haven't tried to do a parser, but a set of command buttons is easy to do.\r\n\r\nCool!\r\n\r\nI was around eight years old the last time I wrote anything in BASIC.\r\n\r\n(The only kinds of buttons I knew of in those days were tangible.)\r\n\r\nI don't know if I've still got the joystick, but I know I never had a mouse.\r\n\r\nThe only things I remember doing with it were writing/copying the BASIC programs from the Radio Shack catalogue, and playing **Downland**.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Are you looking to do something in Basic?</p>\n</blockquote>\n<p>I will be soon. My mother reported having found the Tandy yesterday, but I haven't picked it up yet.</p>\n<p>I think it's a Color Computer II</p>\n<p>https://en.wikipedia.org/wiki/TRS-80_Color_Computer#Color_Computer_2_.281983.E2.80.931986.29</p>\n<blockquote>\n<p>I haven't tried to do a parser, but a set of command buttons is easy to do.</p>\n</blockquote>\n<p>Cool!</p>\n<p>I was around eight years old the last time I wrote anything in BASIC.</p>\n<p>(The only kinds of buttons I knew of in those days were tangible.)</p>\n<p>I don't know if I've still got the joystick, but I know I never had a mouse.</p>\n<p>The only things I remember doing with it were writing/copying the BASIC programs from the Radio Shack catalogue, and playing <strong>Downland</strong>.</p>\n\n",
      "PostDate": "2017-08-10T18:49:06.4857771Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "96d50d26-912f-4b0e-8b34-bdad9b6be219",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That is how I learned to program... and to troubleshoot... :D \r\nI still got 3 books of basic games, well, programs, not all were games.\r\n\r\nIf you got a story, I think I can put a program around it...\r\nI had a Coco back when, still got it, but I'm sure it is dead. \r\nCoco 2, 16k ram, with built in color basic...\r\nThe people today do not know the hardships of writing code to fit in such a small space!!!\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>That is how I learned to program... and to troubleshoot... :D<br>\nI still got 3 books of basic games, well, programs, not all were games.</p>\n<p>If you got a story, I think I can put a program around it...<br>\nI had a Coco back when, still got it, but I'm sure it is dead.<br>\nCoco 2, 16k ram, with built in color basic...<br>\nThe people today do not know the hardships of writing code to fit in such a small space!!!</p>\n\n",
      "PostDate": "2017-08-10T20:44:36.4251224Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "66a07753-129f-45fc-a0eb-194bedea2a67",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ K.V.\r\n\r\nif you are not understanding:\r\n\r\nEntrance.Last_Room = \"Cave6\" // the double quotes makes this be a String Value and thus a String Attribute\r\n\r\nyou need to do this:\r\n\r\nEntrance.Last_Room = Cave6 // no double quotes makes this be an Object (reference/pointer) Value and an Object (reference/pointer) Attribute\r\n\r\nwhich can then be used, for example:\r\n\r\nplayer.parent = Entrance.Last_Room\r\n// player.parent = Cave6\r\n\r\n----------\r\n\r\nanother example:\r\n\r\nkatana.damage = 50\r\nplayer.right_hand = katana\r\nplayer.strength = 100\r\nplayer.damage = player.right_hand.damage + player.right_hand.damage * player.strength / 100\r\n// player.damage = (50) + (50 * 1) = 100\r\n\r\nshort_sword.damage = 5\r\nplayer.right_hand = short_sword\r\nplayer.strength = 100\r\nplayer.damage = player.right_hand.damage + player.right_hand.damage * player.strength / 100\r\n// player.damage = (5) + (5 * 1) = 10",
      "EditableFormat": "markdown",
      "HTML": "<p>@ K.V.</p>\n<p>if you are not understanding:</p>\n<p>Entrance.Last_Room = \"Cave6\" // the double quotes makes this be a String Value and thus a String Attribute</p>\n<p>you need to do this:</p>\n<p>Entrance.Last_Room = Cave6 // no double quotes makes this be an Object (reference/pointer) Value and an Object (reference/pointer) Attribute</p>\n<p>which can then be used, for example:</p>\n<p>player.parent = Entrance.Last_Room<br>\n// player.parent = Cave6</p>\n<hr>\n<p>another example:</p>\n<p>katana.damage = 50<br>\nplayer.right_hand = katana<br>\nplayer.strength = 100<br>\nplayer.damage = player.right_hand.damage + player.right_hand.damage * player.strength / 100<br>\n// player.damage = (50) + (50 * 1) = 100</p>\n<p>short_sword.damage = 5<br>\nplayer.right_hand = short_sword<br>\nplayer.strength = 100<br>\nplayer.damage = player.right_hand.damage + player.right_hand.damage * player.strength / 100<br>\n// player.damage = (5) + (5 * 1) = 10</p>\n\n",
      "PostDate": "2017-08-11T00:05:52.3146786Z",
      "LastEditDate": "2017-08-11T00:09:42.1957127Z",
      "link": null
    },
    {
      "PostId": "55718c2b-91e8-4fa7-aa10-c5f101a2b285",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Got the easy tracker solved...\r\nUnlike the pathing program, this one is much easer AND realistic!\r\nAfter all, a tracker can not track someone that has not visited a location...\r\nJust add an attribute to each room that determines if the player was here and which direction they went.\r\nCould also add one for each NPC and maybe the tracker (s) if you want an NPC to follow a tracker or another NPC.\r\nLike P_go, which will contain the room name the player went to (picture foot prints)\r\nWhen a tracker  comes across the \"tracks\" then the tracker can follow the player...\r\nSame for any NPC's, using NPC1_go... (or the NPC's name)\r\nWhen the player re-enters the room, then leaves again, his \"footprints\" will lead to a different room...\r\nSo, when the player teleports, the footprint trail ends and the tracker can no longer follow the player...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Got the easy tracker solved...<br>\nUnlike the pathing program, this one is much easer AND realistic!<br>\nAfter all, a tracker can not track someone that has not visited a location...<br>\nJust add an attribute to each room that determines if the player was here and which direction they went.<br>\nCould also add one for each NPC and maybe the tracker (s) if you want an NPC to follow a tracker or another NPC.<br>\nLike P_go, which will contain the room name the player went to (picture foot prints)<br>\nWhen a tracker  comes across the \"tracks\" then the tracker can follow the player...<br>\nSame for any NPC's, using NPC1_go... (or the NPC's name)<br>\nWhen the player re-enters the room, then leaves again, his \"footprints\" will lead to a different room...<br>\nSo, when the player teleports, the footprint trail ends and the tracker can no longer follow the player...</p>\n\n",
      "PostDate": "2017-08-11T02:31:10.3938981Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "da652f09-3429-4b28-9663-dbe4155395fe",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "HK,\r\n\r\nThose quotation marks definitely did kick my [expletive deleted] for the first week or four, but I finally got it figured out (just after you showed me how to do it, of course). \\<insert laugh here>\r\n\r\nI was really just sharing my code (the first post), though. It works.\r\n\r\n---\r\n```Entrance.Last_Room = \"Cave6\"```isn't my code, and, although it does work in DL's Cave, it doesn't work in my game (and it wouldn't, even if it ***were*** actually referencing an object/room -- because I'm keeping track of multiple moving objects, their last rooms, and the player's last room). If I don't use the two-object/room list to shift things around, my orchestrated NPCs lose their way, and chaos ensues.\r\n\r\nDL's just using it to help the player navigate through his cave, but you would definitely need to change his code to ```Entrance.Last_Room = player.parent``` or ```Entrance.Last_Room = game.pov.parent``` to be able to use that attribute as room in any scripts. \r\n\r\n```Entrance.Last_Room = \"Cave6\"```doesn't reference an object/room (like you say), and it wouldn't work even if Cave6 was a room name. (HK is absolutely correct about the quatation marks!) It would need to be ```Entrance.Last_Room = Cave6```(assuming Cave6 was a room name) to be able to use ```MoveObject(player, Entrance.Last_Room)```. \r\n\r\nThe quotation marks save the text as a string. (Right?)\r\n\r\n---\r\nJust to avoid sullying DL's good name: his code does work perfectly in **his** game, because he's only using to display, 'you climb in/climb up/slip down from wherever.' Which is all he wants to do.\r\n\r\n---\r\n\r\nMy code (the first post in this thread), though, references the last room for each and every animate object that can move through my map, with no need for entering scripts specific to each and every room.\r\n\r\nI'm really only using this to display the direction from which the NPCs are entering the player's location.\r\n\r\n\r\nCheck it out:\r\n\r\nhttp://textadventures.co.uk/games/view/rr9vezzxkeaovamsaqgxcw/they-call-ya-mister-quest-prototype-in-progress\r\n\r\n---\r\n(And I do appreciate (and still <del>occasionally</del> frequently need) the help! Don't take me the wrong way!)\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>HK,</p>\n<p>Those quotation marks definitely did kick my [expletive deleted] for the first week or four, but I finally got it figured out (just after you showed me how to do it, of course). &lt;insert laugh here&gt;</p>\n<p>I was really just sharing my code (the first post), though. It works.</p>\n<hr>\n<p><code>Entrance.Last_Room = \"Cave6\"</code>isn't my code, and, although it does work in DL's Cave, it doesn't work in my game (and it wouldn't, even if it <strong><em>were</em></strong> actually referencing an object/room -- because I'm keeping track of multiple moving objects, their last rooms, and the player's last room). If I don't use the two-object/room list to shift things around, my orchestrated NPCs lose their way, and chaos ensues.</p>\n<p>DL's just using it to help the player navigate through his cave, but you would definitely need to change his code to <code>Entrance.Last_Room = player.parent</code> or <code>Entrance.Last_Room = game.pov.parent</code> to be able to use that attribute as room in any scripts.</p>\n<p><code>Entrance.Last_Room = \"Cave6\"</code>doesn't reference an object/room (like you say), and it wouldn't work even if Cave6 was a room name. (HK is absolutely correct about the quatation marks!) It would need to be <code>Entrance.Last_Room = Cave6</code>(assuming Cave6 was a room name) to be able to use <code>MoveObject(player, Entrance.Last_Room)</code>.</p>\n<p>The quotation marks save the text as a string. (Right?)</p>\n<hr>\n<p>Just to avoid sullying DL's good name: his code does work perfectly in <strong>his</strong> game, because he's only using to display, 'you climb in/climb up/slip down from wherever.' Which is all he wants to do.</p>\n<hr>\n<p>My code (the first post in this thread), though, references the last room for each and every animate object that can move through my map, with no need for entering scripts specific to each and every room.</p>\n<p>I'm really only using this to display the direction from which the NPCs are entering the player's location.</p>\n<p>Check it out:</p>\n<p>http://textadventures.co.uk/games/view/rr9vezzxkeaovamsaqgxcw/they-call-ya-mister-quest-prototype-in-progress</p>\n<hr>\n<p>(And I do appreciate (and still <del>occasionally</del> frequently need) the help! Don't take me the wrong way!)</p>\n\n",
      "PostDate": "2017-08-11T03:18:26.0021426Z",
      "LastEditDate": "2017-08-12T05:45:17.8341232Z",
      "link": null
    },
    {
      "PostId": "bdace11a-dfd8-4c1a-83e2-5dbb42c7d049",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "### **NOTE:**\r\n\r\nEach code that everyone has posted in this thread keeps track of visited/last rooms in different ways.\r\n\r\nWhich one **you** need to use depends upon your purpose for keeping track of the room(s) in the first place.",
      "EditableFormat": "markdown",
      "HTML": "<h3><strong>NOTE:</strong></h3>\n<p>Each code that everyone has posted in this thread keeps track of visited/last rooms in different ways.</p>\n<p>Which one <strong>you</strong> need to use depends upon your purpose for keeping track of the room(s) in the first place.</p>\n\n",
      "PostDate": "2017-08-11T05:03:06.0816849Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b2db3da4-36b2-43aa-9c99-8e29afc9de89",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I am NOT an object programmer, I am a BASIC programmer...\r\nI think in ways that work for me, and if you thought like I do, (heaven forbid!!! :LOL ) then it would work for you too.\r\nFor me, yes, \"Cave6\" is a string and was used to determine which way the player was moving to give the different room descriptions... I could have just used \"1\", \"2\", \"3\"... but when I first wrote the cave, \"Cave1\" was the room name, I just changed the names later.\r\nAltho, just now thought of it, I could have used \"up\" or \"down\" to determine the room descriptions...\r\n(All the more proof that there are several ways to do the same thing...)\r\nTo me:\r\nEntrance.Last_Room = Cave6 \r\nIs assigning the value of the variable Cave6 to Entrance.Last_Room.\r\nIE: Cave6=9   (The # 9)\r\nthen...\r\nEntrance.Last_Room = Cave6\r\nmeans Entrance.Last_Room = 9\r\nNot that it equals the object Cave6...\r\nThat will be tripping be up for some time...\r\n\r\n\"Don't take me the wrong way!\"\r\nI'll take you any way I choose... And I choose \"funny\"!!!  (LOL...)\r\nLife for humans is too short to take you guy too serious...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I am NOT an object programmer, I am a BASIC programmer...<br>\nI think in ways that work for me, and if you thought like I do, (heaven forbid!!! :LOL ) then it would work for you too.<br>\nFor me, yes, \"Cave6\" is a string and was used to determine which way the player was moving to give the different room descriptions... I could have just used \"1\", \"2\", \"3\"... but when I first wrote the cave, \"Cave1\" was the room name, I just changed the names later.<br>\nAltho, just now thought of it, I could have used \"up\" or \"down\" to determine the room descriptions...<br>\n(All the more proof that there are several ways to do the same thing...)<br>\nTo me:<br>\nEntrance.Last_Room = Cave6<br>\nIs assigning the value of the variable Cave6 to Entrance.Last_Room.<br>\nIE: Cave6=9   (The # 9)<br>\nthen...<br>\nEntrance.Last_Room = Cave6<br>\nmeans Entrance.Last_Room = 9<br>\nNot that it equals the object Cave6...<br>\nThat will be tripping be up for some time...</p>\n<p>\"Don't take me the wrong way!\"<br>\nI'll take you any way I choose... And I choose \"funny\"!!!  (LOL...)<br>\nLife for humans is too short to take you guy too serious...</p>\n\n",
      "PostDate": "2017-08-11T05:07:03.8339237Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5cb9d805-fd0f-4d85-b500-8f87320018fe",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "anything in double quotes is a String Value, including a number: \"4\" is a String Value, NOT an Integer value\r\n\r\nanything not in double quotes and not numerical (integer/double) and not a special/reserved word, is an Object (reference/pointer) Value\r\n\r\na number without double quotes is either: an Integer (example: 4) or a Double (example: 4.56) Value\r\n\r\nthe 'true/false' Values are special and reserved as Boolean Values\r\n\r\nall VARIABLES are special/reserved words technically\r\n\r\nthe 'this' key-word/key-command is special/reserved\r\n\r\nalso 'object' is used internally by quest, so it's a special/reserved word\r\n\r\n-------------\r\n\r\nOh, you can certainly use List/Dictionary Attributes too, just showing you how to use an Object (reference/pointer) Attribute\r\n\r\nalso... you can do this too:\r\n\r\ngame.string_attribute = \"Cave6\"\r\ngame.object_attribute = GetObject (game.string_attribute)\r\nplayer.parent = game.object_attribute",
      "EditableFormat": "markdown",
      "HTML": "<p>anything in double quotes is a String Value, including a number: \"4\" is a String Value, NOT an Integer value</p>\n<p>anything not in double quotes and not numerical (integer/double) and not a special/reserved word, is an Object (reference/pointer) Value</p>\n<p>a number without double quotes is either: an Integer (example: 4) or a Double (example: 4.56) Value</p>\n<p>the 'true/false' Values are special and reserved as Boolean Values</p>\n<p>all VARIABLES are special/reserved words technically</p>\n<p>the 'this' key-word/key-command is special/reserved</p>\n<p>also 'object' is used internally by quest, so it's a special/reserved word</p>\n<hr>\n<p>Oh, you can certainly use List/Dictionary Attributes too, just showing you how to use an Object (reference/pointer) Attribute</p>\n<p>also... you can do this too:</p>\n<p>game.string_attribute = \"Cave6\"<br>\ngame.object_attribute = GetObject (game.string_attribute)<br>\nplayer.parent = game.object_attribute</p>\n\n",
      "PostDate": "2017-08-11T08:36:47.4556264Z",
      "LastEditDate": "2017-08-11T08:40:04.0716669Z",
      "link": null
    },
    {
      "PostId": "51b0761d-51f9-4748-81a3-19c30609189c",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">I think in ways that work for me, and if you thought like I do, (heaven forbid!!! :LOL ) then it would work for you too.\r\n\r\nThis statement encapsulates the beauty of Quest!\r\n\r\nThere are SO MANY different ways to do things!\r\n\r\n---\r\n>Altho, just now thought of it, I could have used \"up\" or \"down\" to determine the room descriptions...\r\n\r\nIf I had a nickel for every time I came up with improvements to my scripts while discussing them on this forum...\r\n\r\n---\r\n>\"Don't take me the wrong way!\"\r\n\r\nHa-ha!\r\nI just meant that I wasn't bashing anyone's suggestions, seeming how they were all correct. <span style=\"font-size:200%\">&#9996;<span>\r\n\r\n>I'll take you any way I choose... And I choose \"funny\"!!! (LOL...)\r\n\r\nFunny? What'dya mean ***funny***?!? You mean the way I talk?\r\n\r\nFunny...\r\nYou think I'm funny...\r\n\r\nAre you saying I'm some kinda clown? Here to amuse you?\r\n\r\n(Everyone ***has*** seen **GOODFELLAS**, right?)\r\n\r\n---\r\n>IE: Cave6=9 (The # 9)\r\nthen...\r\nEntrance.Last_Room = Cave6\r\nmeans Entrance.Last_Room = 9\r\nNot that it equals the object Cave6...\r\nThat will be tripping be up for some time...\r\n\r\nIt doesn't look like that's tripping you up at all. You got that [expletive deleted] down pat!\r\n\r\n---\r\nIt should also be noted that DL has a **before entering** script, to print the message: 'you just came in from ...', and he has an **AFTER entering** script, which sets his last room attribute to the current room. (This is true for each room.)\r\n\r\n\r\nThis is exactly what he needs to keep track of the player's movements in his cave system, and it works flawlessly.\r\n\r\n---\r\nI'm too lazy to do all that room by room. \r\n\r\nI'll do all the coding in the beginning, setting up an attribute as a constantly updated, two-item object list I can refer to with a function at any point and for any room.\r\n\r\nExample:\r\nAdding the starting room to the list as ```list item 0```, then adding the second room as ```list item 1```, then, in every room thereafter, moving ```list item 1``` to ```list item 0```, then deleting ```list item 1```, then adding the current room as ```list item 1```, then referencing ```list item 0```to find the last room was just the easiest way I could find to keep track of the last room without doing any room specific stuff.\r\n\r\nNow I can add rooms and not even fool with the extra attribute for each one, and I can save all the scripts I worked up as libraries to use in my upcoming creations.\r\n\r\nDoes that make sense? Or is this one of those things I'll go back and read over a few weeks from now, wondering what I could have possibly been thinking?\r\n\r\n\r\n---\r\nHK,\r\n\r\n>the 'this' key-word/key-command is special/reserved\r\n\r\nDoes 'this' only exist once the player has interacted with an object in the game?\r\n\r\n(I can't remember how I tried to use it in a script, but I remember being defeated and going a different route...)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I think in ways that work for me, and if you thought like I do, (heaven forbid!!! :LOL ) then it would work for you too.</p>\n</blockquote>\n<p>This statement encapsulates the beauty of Quest!</p>\n<p>There are SO MANY different ways to do things!</p>\n<hr>\n<blockquote>\n<p>Altho, just now thought of it, I could have used \"up\" or \"down\" to determine the room descriptions...</p>\n</blockquote>\n<p>If I had a nickel for every time I came up with improvements to my scripts while discussing them on this forum...</p>\n<hr>\n<blockquote>\n<p>\"Don't take me the wrong way!\"</p>\n</blockquote>\n<p>Ha-ha!<br>\nI just meant that I wasn't bashing anyone's suggestions, seeming how they were all correct. <span style=\"font-size: 200%\">✌<span></span></span></p>\n<blockquote>\n<p>I'll take you any way I choose... And I choose \"funny\"!!! (LOL...)</p>\n</blockquote>\n<p>Funny? What'dya mean <strong><em>funny</em></strong>?!? You mean the way I talk?</p>\n<p>Funny...<br>\nYou think I'm funny...</p>\n<p>Are you saying I'm some kinda clown? Here to amuse you?</p>\n<p>(Everyone <strong><em>has</em></strong> seen <strong>GOODFELLAS</strong>, right?)</p>\n<hr>\n<blockquote>\n<p>IE: Cave6=9 (The # 9)<br>\nthen...<br>\nEntrance.Last_Room = Cave6<br>\nmeans Entrance.Last_Room = 9<br>\nNot that it equals the object Cave6...<br>\nThat will be tripping be up for some time...</p>\n</blockquote>\n<p>It doesn't look like that's tripping you up at all. You got that [expletive deleted] down pat!</p>\n<hr>\n<p>It should also be noted that DL has a <strong>before entering</strong> script, to print the message: 'you just came in from ...', and he has an <strong>AFTER entering</strong> script, which sets his last room attribute to the current room. (This is true for each room.)</p>\n<p>This is exactly what he needs to keep track of the player's movements in his cave system, and it works flawlessly.</p>\n<hr>\n<p>I'm too lazy to do all that room by room.</p>\n<p>I'll do all the coding in the beginning, setting up an attribute as a constantly updated, two-item object list I can refer to with a function at any point and for any room.</p>\n<p>Example:<br>\nAdding the starting room to the list as <code>list item 0</code>, then adding the second room as <code>list item 1</code>, then, in every room thereafter, moving <code>list item 1</code> to <code>list item 0</code>, then deleting <code>list item 1</code>, then adding the current room as <code>list item 1</code>, then referencing <code>list item 0</code>to find the last room was just the easiest way I could find to keep track of the last room without doing any room specific stuff.</p>\n<p>Now I can add rooms and not even fool with the extra attribute for each one, and I can save all the scripts I worked up as libraries to use in my upcoming creations.</p>\n<p>Does that make sense? Or is this one of those things I'll go back and read over a few weeks from now, wondering what I could have possibly been thinking?</p>\n<hr>\n<p>HK,</p>\n<blockquote>\n<p>the 'this' key-word/key-command is special/reserved</p>\n</blockquote>\n<p>Does 'this' only exist once the player has interacted with an object in the game?</p>\n<p>(I can't remember how I tried to use it in a script, but I remember being defeated and going a different route...)</p>\n\n",
      "PostDate": "2017-08-11T16:21:06.3900334Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "61e8b915-c631-4058-bbeb-83a4d43865dd",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the 'this' key-word/key-command GETS the parent Object (of the scripting that it is used within):\r\n\r\n```\r\n<object name=\"orc_1\">\r\n  <attr name=\"alias\" type=\"string\">orc</attr>\r\n  <attr name=\"look\" type=\"script\">\r\n    msg (\"The \" + this.name + \"'s name is \" + this.alias + \".\")\r\n  </attr>\r\n</object>\r\n\r\n<object name=\"ogre_1\">\r\n  <attr name=\"alias\" type=\"string\">ogre</attr>\r\n  <attr name=\"look\" type=\"script\">\r\n    msg (\"The \" + this.name + \"'s name is \" + this.alias + \".\")\r\n  </attr>\r\n</object>\r\n```\r\n\r\nbasically, it's used with an Object's Script Attribute's scripting (it can NOT be used in Functions/Commands/Turnscripts/Timers), but if you need to use other Objects in your scripting, then you can't use 'this', as it is only for GETTING the parent Object, and not other non-parent Objects:\r\n\r\n```\r\n<object name=\"ogre_1\">\r\n  <attr name=\"alias\" type=\"string\">ogre</attr>\r\n  <attr name=\"look\" type=\"script\">\r\n    msg (\"The \" + this.name + \"'s name is \" + this.alias + \". And, the \" + player.name + \"'s name is \" + player.alias + \".\") // the 'this' only works for the 'ogre_1' Object, not for the other non-parent Object, which in this example is the 'player' Player Object\r\n  </attr>\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <attr name=\"alias\" type=\"string\">HK</attr>\r\n</object>\r\n```\r\n\r\n---------\r\n\r\nit's really useful for Object Types:\r\n\r\n```\r\n<type name=\"monster_type\">\r\n  <attr name=\"look\" type=\"script\">\r\n    msg (\"The \" + this.name + \"'s name is \" + this.alias + \".\")\r\n  </attr>\r\n</type>\r\n\r\n<object name=\"orc_1\">\r\n  <inherit name=\"monster_type\" />\r\n  <attr name=\"alias\" type=\"string\">orc</attr>\r\n</object>\r\n\r\n<object name=\"ogre_1\">\r\n  <inherit name=\"monster_type\" />\r\n  <attr name=\"alias\" type=\"string\">ogre</attr>\r\n</object>\r\n\r\n<object name=\"troll_1\">\r\n  <inherit name=\"monster_type\" />\r\n  <attr name=\"alias\" type=\"string\">troll</attr>\r\n</object>\r\n\r\n<object name=\"goblin_1\">\r\n  <inherit name=\"monster_type\" />\r\n  <attr name=\"alias\" type=\"string\">goblin</attr>\r\n</object>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>the 'this' key-word/key-command GETS the parent Object (of the scripting that it is used within):</p>\n<pre><code>&lt;object name=\"orc_1\"&gt;\n  &lt;attr name=\"alias\" type=\"string\"&gt;orc&lt;/attr&gt;\n  &lt;attr name=\"look\" type=\"script\"&gt;\n    msg (\"The \" + this.name + \"'s name is \" + this.alias + \".\")\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"ogre_1\"&gt;\n  &lt;attr name=\"alias\" type=\"string\"&gt;ogre&lt;/attr&gt;\n  &lt;attr name=\"look\" type=\"script\"&gt;\n    msg (\"The \" + this.name + \"'s name is \" + this.alias + \".\")\n  &lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n<p>basically, it's used with an Object's Script Attribute's scripting (it can NOT be used in Functions/Commands/Turnscripts/Timers), but if you need to use other Objects in your scripting, then you can't use 'this', as it is only for GETTING the parent Object, and not other non-parent Objects:</p>\n<pre><code>&lt;object name=\"ogre_1\"&gt;\n  &lt;attr name=\"alias\" type=\"string\"&gt;ogre&lt;/attr&gt;\n  &lt;attr name=\"look\" type=\"script\"&gt;\n    msg (\"The \" + this.name + \"'s name is \" + this.alias + \". And, the \" + player.name + \"'s name is \" + player.alias + \".\") // the 'this' only works for the 'ogre_1' Object, not for the other non-parent Object, which in this example is the 'player' Player Object\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;attr name=\"alias\" type=\"string\"&gt;HK&lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p>it's really useful for Object Types:</p>\n<pre><code>&lt;type name=\"monster_type\"&gt;\n  &lt;attr name=\"look\" type=\"script\"&gt;\n    msg (\"The \" + this.name + \"'s name is \" + this.alias + \".\")\n  &lt;/attr&gt;\n&lt;/type&gt;\n\n&lt;object name=\"orc_1\"&gt;\n  &lt;inherit name=\"monster_type\" /&gt;\n  &lt;attr name=\"alias\" type=\"string\"&gt;orc&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"ogre_1\"&gt;\n  &lt;inherit name=\"monster_type\" /&gt;\n  &lt;attr name=\"alias\" type=\"string\"&gt;ogre&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"troll_1\"&gt;\n  &lt;inherit name=\"monster_type\" /&gt;\n  &lt;attr name=\"alias\" type=\"string\"&gt;troll&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"goblin_1\"&gt;\n  &lt;inherit name=\"monster_type\" /&gt;\n  &lt;attr name=\"alias\" type=\"string\"&gt;goblin&lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n\n",
      "PostDate": "2017-08-12T08:20:39.2640055Z",
      "LastEditDate": "2017-08-12T08:24:51.7505629Z",
      "link": null
    },
    {
      "PostId": "5511cad1-14cf-46c0-a32c-b97ef75d0269",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@HK\r\n\r\nSweet!\r\n\r\nThank you, kindly, sir!",
      "EditableFormat": "markdown",
      "HTML": "<p>@HK</p>\n<p>Sweet!</p>\n<p>Thank you, kindly, sir!</p>\n\n",
      "PostDate": "2017-08-12T10:13:53.3070197Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7074c1f7-219b-4798-a89f-c4b4181a32d7",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you can use 'this' as an Argument/Input (withing an Object's Script Attribute) for a Function's Parameter, but you can't use the 'this' within the Function's scripting:\r\n\r\n```\r\n<game name=\"example_game\">\r\n  <attr name=\"example_string_attribute\" type=\"string\">hi</attr>\r\n  <attr name=\"start\" type=\"script\">\r\n    example_function (this.example_string_attribute) // this = game // this.example_string_attribute = game.example_string_attribute = \"hi\"\r\n    // example_function (this.example_string_attribute) = example_function (\"hi\")\r\n  </attr>\r\n</game>\r\n\r\n<function name=\"example_function\" parameters=\"string_parameter\">\r\n  msg (string_parameter)\r\n</function>\r\n```\r\n\r\n------------\r\n\r\n```\r\n<object name=\"player\">\r\n  <attr name=\"example_string_attribute\" type=\"string\">hi</attr>\r\n  <attr name=\"example_script_attribute\" type=\"script\">\r\n    example_function (this.example_string_attribute) // this = player // this.example_string_attribute = player.example_string_attribute = \"hi\"\r\n    // example_function (this.example_string_attribute) = example_function (\"hi\")\r\n  </attr>\r\n</game>\r\n\r\n<function name=\"example_function\" parameters=\"string_parameter\">\r\n  msg (string_parameter)\r\n</function>\r\n```\r\n\r\n-------------\r\n\r\n```\r\n<object name=\"ball\">\r\n  <attr name=\"example_string_attribute\" type=\"string\">hi</attr>\r\n  <attr name=\"example_script_attribute\" type=\"script\">\r\n    example_function (this.example_string_attribute) // this = ball // this.example_string_attribute = ball.example_string_attribute = \"hi\"\r\n    // example_function (this.example_string_attribute) = example_function (\"hi\")\r\n  </attr>\r\n</game>\r\n\r\n<function name=\"example_function\" parameters=\"string_parameter\">\r\n  msg (string_parameter)\r\n</function>\r\n```\r\n\r\n-----------\r\n\r\nyou can also use 'this' with 'do' and 'set' too (still though as scripting within an Object's Script Attribute)",
      "EditableFormat": "markdown",
      "HTML": "<p>you can use 'this' as an Argument/Input (withing an Object's Script Attribute) for a Function's Parameter, but you can't use the 'this' within the Function's scripting:</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"example_string_attribute\" type=\"string\"&gt;hi&lt;/attr&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    example_function (this.example_string_attribute) // this = game // this.example_string_attribute = game.example_string_attribute = \"hi\"\n    // example_function (this.example_string_attribute) = example_function (\"hi\")\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;function name=\"example_function\" parameters=\"string_parameter\"&gt;\n  msg (string_parameter)\n&lt;/function&gt;\n</code></pre>\n<hr>\n<pre><code>&lt;object name=\"player\"&gt;\n  &lt;attr name=\"example_string_attribute\" type=\"string\"&gt;hi&lt;/attr&gt;\n  &lt;attr name=\"example_script_attribute\" type=\"script\"&gt;\n    example_function (this.example_string_attribute) // this = player // this.example_string_attribute = player.example_string_attribute = \"hi\"\n    // example_function (this.example_string_attribute) = example_function (\"hi\")\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;function name=\"example_function\" parameters=\"string_parameter\"&gt;\n  msg (string_parameter)\n&lt;/function&gt;\n</code></pre>\n<hr>\n<pre><code>&lt;object name=\"ball\"&gt;\n  &lt;attr name=\"example_string_attribute\" type=\"string\"&gt;hi&lt;/attr&gt;\n  &lt;attr name=\"example_script_attribute\" type=\"script\"&gt;\n    example_function (this.example_string_attribute) // this = ball // this.example_string_attribute = ball.example_string_attribute = \"hi\"\n    // example_function (this.example_string_attribute) = example_function (\"hi\")\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;function name=\"example_function\" parameters=\"string_parameter\"&gt;\n  msg (string_parameter)\n&lt;/function&gt;\n</code></pre>\n<hr>\n<p>you can also use 'this' with 'do' and 'set' too (still though as scripting within an Object's Script Attribute)</p>\n\n",
      "PostDate": "2017-08-12T13:47:48.4683221Z",
      "LastEditDate": "2017-08-12T13:56:38.3346455Z",
      "link": null
    },
    {
      "PostId": "1a0f22be-9582-41ea-8e2c-af2417a27cfc",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "EDIT:\r\n\r\nWhoops! \r\n\r\nWrong thread!",
      "EditableFormat": "markdown",
      "HTML": "<p>EDIT:</p>\n<p>Whoops!</p>\n<p>Wrong thread!</p>\n\n",
      "PostDate": "2017-09-23T03:55:54.8478592Z",
      "LastEditDate": "2017-09-23T03:56:54.1246641Z",
      "link": null
    },
    {
      "PostId": "d022241a-19a7-4af8-8a68-77d785bb8a0d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Only sw this post just now… was this thread before I started using Quest?\r\n\r\nBut felt I should respond to HK…\r\n\r\n> but you can't use the 'this' within the Function's scripting\r\n\r\nI think you can :-p It just doesn't refer to the object you probably intended it to. Unless I'm getting confused again.",
      "EditableFormat": "markdown",
      "HTML": "<p>Only sw this post just now… was this thread before I started using Quest?</p>\n<p>But felt I should respond to HK…</p>\n<blockquote>\n<p>but you can't use the 'this' within the Function's scripting</p>\n</blockquote>\n<p>I think you can :-p It just doesn't refer to the object you probably intended it to. Unless I'm getting confused again.</p>\n\n",
      "PostDate": "2017-09-24T00:19:13.5381402Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cecc8fa3-f66a-4831-b5ef-cfac8c0656e9",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "not sure if 'this' can be used or not, but that's indeed what I meant by my comment in my post. Some people new to coding, have a bit of a hard time understanding what 'this' is and how to use it correctly and not incorrectly (where it can and can't be used).",
      "EditableFormat": "markdown",
      "HTML": "<p>not sure if 'this' can be used or not, but that's indeed what I meant by my comment in my post. Some people new to coding, have a bit of a hard time understanding what 'this' is and how to use it correctly and not incorrectly (where it can and can't be used).</p>\n\n",
      "PostDate": "2017-09-24T03:18:55.0823217Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6a5d5da0-558b-488b-9870-8b670db9dca5",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "game.lastobjects is what holds 'this' (as far as I can tell).\r\n\r\n...and it works when I toy with it.\r\n\r\nLet's say the player enters a room, and I print \"You can see a WIDGET here!\"\r\n\r\nI can put this in the room enter script, too:\r\n\r\n```\r\ngame.lastobjects = Split(\"widget\", \";\")\r\n```\r\n\r\n---\r\nNow, when the player walks in, the message prints \"<samp>A WIDGET!</samp>\", and the command **<input placeholder=\"examine it\">** examines the widget.",
      "EditableFormat": "markdown",
      "HTML": "<p>game.lastobjects is what holds 'this' (as far as I can tell).</p>\n<p>...and it works when I toy with it.</p>\n<p>Let's say the player enters a room, and I print \"You can see a WIDGET here!\"</p>\n<p>I can put this in the room enter script, too:</p>\n<pre><code>game.lastobjects = Split(\"widget\", \";\")\n</code></pre>\n<hr>\n<p>Now, when the player walks in, the message prints \"<samp>A WIDGET!</samp>\", and the command <strong><input placeholder=\"examine it\"></strong> examines the widget.</p>\n\n",
      "PostDate": "2017-09-24T03:42:02.960738Z",
      "LastEditDate": "2017-09-24T03:43:50.5794869Z",
      "link": null
    },
    {
      "PostId": "70e6d453-20f8-40fb-a9cc-e9e1af23d388",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Not being an object programmer, but a Basic programmer, I see thing a little bit different and sometime more direct...\r\nI made a short program that used a player variable to determine which direction the player was moving and determined the room description based on that.\r\nLike this:\r\n```<!--Saved by Quest 5.7.6360.27113-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"DL_Lost_Cave\">\r\n    <gameid>09ea19be-1e27-46e1-b5d4-0fb706b0e100</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n    <showpanes type=\"boolean\">false</showpanes>\r\n    <borderlesscursor />\r\n    <showcommandbar />\r\n    <commandcursor><![CDATA[>]]></commandcursor>\r\n    <echohyperlinks type=\"boolean\">false</echohyperlinks>\r\n    <autodisplayverbs type=\"boolean\">false</autodisplayverbs>\r\n    <attr name=\"autodescription_youarein_useprefix\" type=\"boolean\">false</attr>\r\n    <attr name=\"autodescription_youcango\" type=\"int\">0</attr>\r\n    <attr name=\"autodescription_youcansee\" type=\"int\">0</attr>\r\n    <attr name=\"autodescription_description\" type=\"int\">2</attr>\r\n    <attr name=\"autodescription_youarein\" type=\"int\">1</attr>\r\n    <turnoffsavebutton />\r\n    <autodescription />\r\n    <showtitle type=\"boolean\">false</showtitle>\r\n    <start type=\"script\">\r\n      player.Last_Room = \"Outside\"\r\n    </start>\r\n    <defaultfont>'Lucida Console', Monaco, monospace</defaultfont>\r\n  </game>\r\n  <object name=\"DL_Cave1\">\r\n    <inherit name=\"editor_room\" />\r\n    <objectslistprefix type=\"string\"></objectslistprefix>\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <alias>Cave entrance</alias>\r\n    <description type=\"script\">\r\n      if (player.Last_Room=\"Outside\") {\r\n        msg (\"You crawl through the hole and into the cool of the cave and look around. Other than the cave entrance behind you, there is only the downward sloping passage to the east. The cave seems to be a natral cavern that has been widened by the use of tools.\")\r\n      }\r\n      else {\r\n        msg (\"You make your way back to the entrance.\")\r\n      }\r\n    </description>\r\n    <enter type=\"script\">\r\n      player.Last_Room = \"Cave1\"\r\n    </enter>\r\n    <beforeenter type=\"script\">\r\n    </beforeenter>\r\n    <exit alias=\"east\" to=\"DL_Cave2\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n    <exit alias=\"west\" to=\"DL_Entrance\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n    <exit alias=\"out\" to=\"DL_Entrance\">\r\n      <inherit name=\"outdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"DL_Cave2\">\r\n    <inherit name=\"editor_room\" />\r\n    <objectslistprefix type=\"string\"></objectslistprefix>\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <alias>Decending Passage</alias>\r\n    <description type=\"script\"><![CDATA[\r\n      if (player.Last_Room=\"Cave1\") {\r\n        msg (\"The passage continues down to the east and rises sharply to the west. There are more signs of tool marks on the cavern walls. This is a sure sign that someone worked this passage. You know that worked passages leads to treasure. You start to get more excited with every step.<br/>\")\r\n      }\r\n      else {\r\n        msg (\"You climb back up from the decending passage.\")\r\n      }\r\n    ]]></description>\r\n    <enter type=\"script\">\r\n      player.Last_Room = \"Cave2\"\r\n    </enter>\r\n    <exit alias=\"west\" to=\"DL_Cave1\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n    <exit alias=\"east\" to=\"DL_Cave3\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"DL_Cave3\">\r\n    <inherit name=\"editor_room\" />\r\n    <objectslistprefix type=\"string\"></objectslistprefix>\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <alias>Cavern</alias>\r\n    <description type=\"script\">\r\n      if (player.Last_Room=\"Cave2\") {\r\n        msg (\"The passages flatens out somewhat here, but still continues down to the east and up in the west. This section is mostly worked walls with little sign of where the original cave was. Someone put in a lot of work to make this passage for it to go nowhere.\")\r\n      }\r\n      else {\r\n        msg (\"You are relieved to reach this point. The climb back up will be much easer now.\")\r\n      }\r\n    </description>\r\n    <enter type=\"script\">\r\n      player.Last_Room = \"Cave3\"\r\n    </enter>\r\n    <exit alias=\"west\" to=\"DL_Cave2\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n    <exit alias=\"east\" to=\"DL_Cave4\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"DL_Cave4\">\r\n    <inherit name=\"editor_room\" />\r\n    <objectslistprefix type=\"string\"></objectslistprefix>\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <alias>Steep sandy passage</alias>\r\n    <description type=\"script\">\r\n      if (player.Last_Room=\"Cave3\") {\r\n        msg (\"You slip on some loose sand here and almost fall down. The passage sloops much more now and it looks like it gets steeper a little further to the east. If this is a trap, then this is your first sign. The loose sand is making every step just a little bit more hazardus.\")\r\n      }\r\n      else if (player.Last_Room=\"Cave5\") {\r\n        msg (\"You manage to climb higher out of the sloppery passage.\")\r\n      }\r\n    </description>\r\n    <enter type=\"script\">\r\n      player.Last_Room = \"Cave4\"\r\n    </enter>\r\n    <exit alias=\"west\" to=\"DL_Cave3\">\r\n      <inherit name=\"westdirection\" />\r\n    </exit>\r\n    <exit alias=\"east\" to=\"DL_Cave5\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"DL_Cave5\">\r\n    <inherit name=\"editor_room\" />\r\n    <objectslistprefix type=\"string\"></objectslistprefix>\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <alias>Steep sandy passage</alias>\r\n    <description type=\"script\">\r\n      if (player.Last_Room=\"Cave4\") {\r\n        msg (\"You continue down the slope. The sides have been worked smooth just like the floor which it covered in more sand. Every step you make is more slipery than the last. If you continue this way, you may not be able to climb back out. But, if there is a treasure at the bottom of this, it could be worth the risk.\")\r\n      }\r\n      else if (player.Last_Room=\"Cave6\") {\r\n        msg (\"You managed to climb back up from the trap.\")\r\n      }\r\n    </description>\r\n    <enter type=\"script\">\r\n      player.Last_Room = \"Cave5\"\r\n    </enter>\r\n    <exit alias=\"west\" to=\"DL_Cave4\">\r\n      <inherit name=\"westdirection\" />\r\n      <runscript />\r\n      <script type=\"script\">\r\n        R = GetRandomInt(1,6)\r\n        if (R=1 or R=2 or R=3 or R=4) {\r\n          msg (\"You try to climb the sloop but it is too slippery and you slide back down.\")\r\n          // MoveObject (player, DL_Cave5)\r\n        }\r\n        if (R=5 or R=6) {\r\n          msg (\"You manage to climb the slope, but after many failed attempts.\")\r\n          MoveObject (player, DL_Cave4)\r\n        }\r\n      </script>\r\n    </exit>\r\n    <exit alias=\"east\" to=\"DL_Cave6\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"DL_Cave6\">\r\n    <inherit name=\"editor_room\" />\r\n    <objectslistprefix type=\"string\"></objectslistprefix>\r\n    <description><![CDATA[The last few steps were more of a slide than steps. But, you made it to the bottom. You look around at the blank walls. There is no indication of any treasure, just a bunch of bones scatteres around the floor. Some human, some animal, and some neither. <br/>Well, if there was a treasure, someone else got it out, and from the looks of the scatered bones, several did not make it out. Looking around, you are begining to wonder if your bones will be added to the piles.<br/>]]></description>\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <alias>Bottom of passage</alias>\r\n    <enter type=\"script\">\r\n      player.Last_Room = \"Cave6\"\r\n    </enter>\r\n    <exit alias=\"west\" to=\"DL_Cave5\">\r\n      <inherit name=\"westdirection\" />\r\n      <runscript />\r\n      <script type=\"script\">\r\n        R = GetRandomInt(1,6)\r\n        if (R=1 or R=2 or R=3 or R=4) {\r\n          msg (\"You try to climb the sloop but it is too slippery and you slide back down.\")\r\n          // MoveObject (player, DL_Cave6)\r\n        }\r\n        if (R=5 or R=6) {\r\n          msg (\"You manage to climb the slope, but after many failed attempts.\")\r\n          MoveObject (player, DL_Cave5)\r\n        }\r\n      </script>\r\n    </exit>\r\n  </object>\r\n  <object name=\"DL_Entrance\">\r\n    <inherit name=\"editor_room\" />\r\n    <alias>A cave entrance</alias>\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <description type=\"script\">\r\n      if (player.Last_Room=\"Outside\") {\r\n        msg (\"You are following the mountain trail when you notice a small opening in the rock to the east. It is not much more than 3 foot round, and mostly hidden by the brush. It looks like it could be an animal den, but you know that looks could be deceiving.\")\r\n      }\r\n      else {\r\n        msg (\"You leave the cave and continue your travels.\")\r\n      }\r\n    </description>\r\n    <beforeenter type=\"script\">\r\n    </beforeenter>\r\n    <enter type=\"script\">\r\n      player.Last_Room = \"Outside\"\r\n    </enter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n      <statusattributes type=\"stringdictionary\" />\r\n    </object>\r\n    <exit alias=\"in\" to=\"DL_Cave1\">\r\n      <inherit name=\"indirection\" />\r\n    </exit>\r\n    <exit alias=\"east\" to=\"DL_Cave1\">\r\n      <inherit name=\"eastdirection\" />\r\n    </exit>\r\n  </object>\r\n</asl>\r\n```\r\nI guess I could have tweaked the descriptions based on it the player had visited the room before or not...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Not being an object programmer, but a Basic programmer, I see thing a little bit different and sometime more direct...<br>\nI made a short program that used a player variable to determine which direction the player was moving and determined the room description based on that.<br>\nLike this:</p>\n<pre><code>&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"DL_Lost_Cave\"&gt;\n    &lt;gameid&gt;09ea19be-1e27-46e1-b5d4-0fb706b0e100&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n    &lt;showpanes type=\"boolean\"&gt;false&lt;/showpanes&gt;\n    &lt;borderlesscursor /&gt;\n    &lt;showcommandbar /&gt;\n    &lt;commandcursor&gt;&lt;![CDATA[&gt;]]&gt;&lt;/commandcursor&gt;\n    &lt;echohyperlinks type=\"boolean\"&gt;false&lt;/echohyperlinks&gt;\n    &lt;autodisplayverbs type=\"boolean\"&gt;false&lt;/autodisplayverbs&gt;\n    &lt;attr name=\"autodescription_youarein_useprefix\" type=\"boolean\"&gt;false&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youcango\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youcansee\" type=\"int\"&gt;0&lt;/attr&gt;\n    &lt;attr name=\"autodescription_description\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youarein\" type=\"int\"&gt;1&lt;/attr&gt;\n    &lt;turnoffsavebutton /&gt;\n    &lt;autodescription /&gt;\n    &lt;showtitle type=\"boolean\"&gt;false&lt;/showtitle&gt;\n    &lt;start type=\"script\"&gt;\n      player.Last_Room = \"Outside\"\n    &lt;/start&gt;\n    &lt;defaultfont&gt;'Lucida Console', Monaco, monospace&lt;/defaultfont&gt;\n  &lt;/game&gt;\n  &lt;object name=\"DL_Cave1\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;objectslistprefix type=\"string\"&gt;&lt;/objectslistprefix&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;alias&gt;Cave entrance&lt;/alias&gt;\n    &lt;description type=\"script\"&gt;\n      if (player.Last_Room=\"Outside\") {\n        msg (\"You crawl through the hole and into the cool of the cave and look around. Other than the cave entrance behind you, there is only the downward sloping passage to the east. The cave seems to be a natral cavern that has been widened by the use of tools.\")\n      }\n      else {\n        msg (\"You make your way back to the entrance.\")\n      }\n    &lt;/description&gt;\n    &lt;enter type=\"script\"&gt;\n      player.Last_Room = \"Cave1\"\n    &lt;/enter&gt;\n    &lt;beforeenter type=\"script\"&gt;\n    &lt;/beforeenter&gt;\n    &lt;exit alias=\"east\" to=\"DL_Cave2\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"west\" to=\"DL_Entrance\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"out\" to=\"DL_Entrance\"&gt;\n      &lt;inherit name=\"outdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"DL_Cave2\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;objectslistprefix type=\"string\"&gt;&lt;/objectslistprefix&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;alias&gt;Decending Passage&lt;/alias&gt;\n    &lt;description type=\"script\"&gt;&lt;![CDATA[\n      if (player.Last_Room=\"Cave1\") {\n        msg (\"The passage continues down to the east and rises sharply to the west. There are more signs of tool marks on the cavern walls. This is a sure sign that someone worked this passage. You know that worked passages leads to treasure. You start to get more excited with every step.&lt;br/&gt;\")\n      }\n      else {\n        msg (\"You climb back up from the decending passage.\")\n      }\n    ]]&gt;&lt;/description&gt;\n    &lt;enter type=\"script\"&gt;\n      player.Last_Room = \"Cave2\"\n    &lt;/enter&gt;\n    &lt;exit alias=\"west\" to=\"DL_Cave1\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"east\" to=\"DL_Cave3\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"DL_Cave3\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;objectslistprefix type=\"string\"&gt;&lt;/objectslistprefix&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;alias&gt;Cavern&lt;/alias&gt;\n    &lt;description type=\"script\"&gt;\n      if (player.Last_Room=\"Cave2\") {\n        msg (\"The passages flatens out somewhat here, but still continues down to the east and up in the west. This section is mostly worked walls with little sign of where the original cave was. Someone put in a lot of work to make this passage for it to go nowhere.\")\n      }\n      else {\n        msg (\"You are relieved to reach this point. The climb back up will be much easer now.\")\n      }\n    &lt;/description&gt;\n    &lt;enter type=\"script\"&gt;\n      player.Last_Room = \"Cave3\"\n    &lt;/enter&gt;\n    &lt;exit alias=\"west\" to=\"DL_Cave2\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"east\" to=\"DL_Cave4\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"DL_Cave4\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;objectslistprefix type=\"string\"&gt;&lt;/objectslistprefix&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;alias&gt;Steep sandy passage&lt;/alias&gt;\n    &lt;description type=\"script\"&gt;\n      if (player.Last_Room=\"Cave3\") {\n        msg (\"You slip on some loose sand here and almost fall down. The passage sloops much more now and it looks like it gets steeper a little further to the east. If this is a trap, then this is your first sign. The loose sand is making every step just a little bit more hazardus.\")\n      }\n      else if (player.Last_Room=\"Cave5\") {\n        msg (\"You manage to climb higher out of the sloppery passage.\")\n      }\n    &lt;/description&gt;\n    &lt;enter type=\"script\"&gt;\n      player.Last_Room = \"Cave4\"\n    &lt;/enter&gt;\n    &lt;exit alias=\"west\" to=\"DL_Cave3\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"east\" to=\"DL_Cave5\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"DL_Cave5\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;objectslistprefix type=\"string\"&gt;&lt;/objectslistprefix&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;alias&gt;Steep sandy passage&lt;/alias&gt;\n    &lt;description type=\"script\"&gt;\n      if (player.Last_Room=\"Cave4\") {\n        msg (\"You continue down the slope. The sides have been worked smooth just like the floor which it covered in more sand. Every step you make is more slipery than the last. If you continue this way, you may not be able to climb back out. But, if there is a treasure at the bottom of this, it could be worth the risk.\")\n      }\n      else if (player.Last_Room=\"Cave6\") {\n        msg (\"You managed to climb back up from the trap.\")\n      }\n    &lt;/description&gt;\n    &lt;enter type=\"script\"&gt;\n      player.Last_Room = \"Cave5\"\n    &lt;/enter&gt;\n    &lt;exit alias=\"west\" to=\"DL_Cave4\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n      &lt;runscript /&gt;\n      &lt;script type=\"script\"&gt;\n        R = GetRandomInt(1,6)\n        if (R=1 or R=2 or R=3 or R=4) {\n          msg (\"You try to climb the sloop but it is too slippery and you slide back down.\")\n          // MoveObject (player, DL_Cave5)\n        }\n        if (R=5 or R=6) {\n          msg (\"You manage to climb the slope, but after many failed attempts.\")\n          MoveObject (player, DL_Cave4)\n        }\n      &lt;/script&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"east\" to=\"DL_Cave6\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"DL_Cave6\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;objectslistprefix type=\"string\"&gt;&lt;/objectslistprefix&gt;\n    &lt;description&gt;&lt;![CDATA[The last few steps were more of a slide than steps. But, you made it to the bottom. You look around at the blank walls. There is no indication of any treasure, just a bunch of bones scatteres around the floor. Some human, some animal, and some neither. &lt;br/&gt;Well, if there was a treasure, someone else got it out, and from the looks of the scatered bones, several did not make it out. Looking around, you are begining to wonder if your bones will be added to the piles.&lt;br/&gt;]]&gt;&lt;/description&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;alias&gt;Bottom of passage&lt;/alias&gt;\n    &lt;enter type=\"script\"&gt;\n      player.Last_Room = \"Cave6\"\n    &lt;/enter&gt;\n    &lt;exit alias=\"west\" to=\"DL_Cave5\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n      &lt;runscript /&gt;\n      &lt;script type=\"script\"&gt;\n        R = GetRandomInt(1,6)\n        if (R=1 or R=2 or R=3 or R=4) {\n          msg (\"You try to climb the sloop but it is too slippery and you slide back down.\")\n          // MoveObject (player, DL_Cave6)\n        }\n        if (R=5 or R=6) {\n          msg (\"You manage to climb the slope, but after many failed attempts.\")\n          MoveObject (player, DL_Cave5)\n        }\n      &lt;/script&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"DL_Entrance\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;alias&gt;A cave entrance&lt;/alias&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;description type=\"script\"&gt;\n      if (player.Last_Room=\"Outside\") {\n        msg (\"You are following the mountain trail when you notice a small opening in the rock to the east. It is not much more than 3 foot round, and mostly hidden by the brush. It looks like it could be an animal den, but you know that looks could be deceiving.\")\n      }\n      else {\n        msg (\"You leave the cave and continue your travels.\")\n      }\n    &lt;/description&gt;\n    &lt;beforeenter type=\"script\"&gt;\n    &lt;/beforeenter&gt;\n    &lt;enter type=\"script\"&gt;\n      player.Last_Room = \"Outside\"\n    &lt;/enter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n      &lt;statusattributes type=\"stringdictionary\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"in\" to=\"DL_Cave1\"&gt;\n      &lt;inherit name=\"indirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"east\" to=\"DL_Cave1\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n<p>I guess I could have tweaked the descriptions based on it the player had visited the room before or not...</p>\n\n",
      "PostDate": "2017-09-24T17:03:35.0886991Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f9bd7d81-7560-4c63-a858-bcd04ba7c96a",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have played DL's game, and it does work flawlessly.  (It's pretty cool, too!)",
      "EditableFormat": "markdown",
      "HTML": "<p>I have played DL's game, and it does work flawlessly.  (It's pretty cool, too!)</p>\n\n",
      "PostDate": "2017-09-24T21:42:53.3930237Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "dbe85c94-c14c-400e-a655-5f18d99b899f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Another comment, vaguely relevant to the OP in case anyone is looking for an alternate method of tracking where a player came from.\r\n\r\nIf the player used the \"go\" command to get here, then `DictionaryItem(game.pov.currentcommandresolvedelements, \"exit\")` looks like it will give you the exit they walked through (if used in an onenter script, you would probably want to check that the specified exit's `to` actually leads here, to make sure they haven't been redirected by some script, or teleported by a turnscript after moving).",
      "EditableFormat": "markdown",
      "HTML": "<p>Another comment, vaguely relevant to the OP in case anyone is looking for an alternate method of tracking where a player came from.</p>\n<p>If the player used the \"go\" command to get here, then <code>DictionaryItem(game.pov.currentcommandresolvedelements, \"exit\")</code> looks like it will give you the exit they walked through (if used in an onenter script, you would probably want to check that the specified exit's <code>to</code> actually leads here, to make sure they haven't been redirected by some script, or teleported by a turnscript after moving).</p>\n\n",
      "PostDate": "2017-10-01T10:11:33.7539173Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
