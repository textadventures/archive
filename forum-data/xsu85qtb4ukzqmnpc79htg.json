{
  "Topic": {
    "TopicId": "xsu85qtb4ukzqmnpc79htg",
    "ForumId": "10",
    "Title": "How to target the first enemy in a room?",
    "LastUpdated": "2024-08-05T06:19:59.8750153Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "6173dd56-5a3e-475a-9ea8-65f58f442c80",
      "UserId": 31991,
      "Username": "daeun",
      "AvatarUrl": "https://i.imgur.com/Xvt8zzBb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For reference, previous version of enemy targeter (Which can only target the last enemy in a room)\r\nhttps://textadventures.co.uk/forum/quest/topic/dpwwos2no0i6wg_cji0yig/how-to-use-timer-to-detect-the-last-enemys-attribute-in-the-room\r\n\r\nAs usual, I appreciate both coding solutions and little-coding creative walkaround solutions because I am not that good at coding\r\n\r\nThis is for a future game, if you see this topic too late but still have answers, please do answer\r\n\r\n________________________________________________\r\n\r\npseudo code (untested)\r\non enter all rooms script\r\nand on combat teammates' deaths\r\nand on enemies death\r\n```\r\nplaceorder = 1\r\nforeach (enemy, GetDirectChildren (game.pov.parent)) {\r\n  if (HasAttribute(enemy, \"enemy\")) {\r\n    enemy.position = placeorder\r\n    placeorder = placeorder+1\r\n  }\r\n}\r\n```\r\non every 1 turn in turn script (player uses lightning blade)\r\n```\r\nforeach (enemy, GetDirectChildren (game.pov.parent)) {\r\n  if (HasAttribute(enemy, \"enemy\")) {\r\n    if (enemy.position = 1) {\r\n      enemy.hp = enemy.hp - player.atk\r\n    }\r\n  }\r\n}\r\n```\r\non every 1 turn in turn script (player uses laser beam (area of effect))\r\n```\r\nforeach (enemy, GetDirectChildren (game.pov.parent)) {\r\n  if (HasAttribute(enemy, \"enemy\")) {\r\n    if (enemy.position <= 3 ) {\r\n      enemy.hp = enemy.hp - player.atk\r\n    }\r\n  }\r\n}\r\n```\r\n____________________________________________\r\n\r\nThe problem with my pseudo code is my code tends to be messy and it always turns out that there are simpler and shorter codes to directly target the enemy's position\r\nAlso, the game gets more and more complex\r\n1. The player may find combat teammates which follows the player everywhere until the player click 'say goodbye' verb, this means the enemy will need to target the player's and combat teammates' positions as well\r\n2. There may be a strategic button to change player's team formation, same for the enemy, for example, player by default is always position 1, but what if you hire a paladin, you would want to him to be blocking most of the enemies' attacks right, so it would be better if he is at position 1, how do I do this stragetic button?\r\n3. It is very messy to equip weapons and armour to each combat teammates, so what I would be doing is probably to level them up to a maximum of level 10, so at different levels, they can possibly become powerful aoe attacker which needs to be protected, or they can become healer and can be placed anywhere\r\n4. Powerful game reversals may happen: Player resurrects one of his teammate, this changes the positions once again. Enemy calls in reinforcement, this adds more position number which needs to be targeted\r\n\r\nI am sure my pseudo code can solve all of these issues, but imagine, how much code I need to write compared to a proper coding that directly targets the enemy's position or \"placement order in a room\"\r\n\r\n====================================================================\r\n\r\nCongratulations! you have arrived at question 2,\r\nyour prize reward is a digital hug\r\n\r\nAs this game is going to be more complex and huger than even before, there are many concerns on how the fighting, travelling rooms, solving puzzles and buying shop items should work out\r\n\r\nAs you can see the combat have been changed into turn scripts from using of timers in the previous game,\r\nbut is every 1 turn script or auto combat too fast for the player?\r\nIf you had tried my previous game, you will know that the enemies can chase you to any rooms you enter,\r\nso what if the player is just walking back to a marketplace to buy items, what if the player had already defeated enemies in a room which respawns annoyingly and that the player only wants to solve the puzzle in the room\r\n\r\nAs far as I know, the way turn scripts works, is no matter what button the player presses, the the turn script will fire, so if there are enemies in the room, players are going to find it especially difficult to just purchase shop items or solve dungeon puzzles\r\n\r\nHow do I set the combat turn script not to fire when player is not interested in combat or is sneaking pass overleveled enemies?\r\nHow do create a verb button \"auto battle\" that sets the combat turn script to automatic without the player requiring to press any button? (This is for highly confident player that have powerful stats and is just exploring around for full completion of maps)\r\n\r\n==================================================================\r\n\r\nPart 3 - Game's description\r\n\r\nThis is just an explanation on why the game have combat teammates\r\ndifferent combat teammates can deal different elemental attacks or provided elemental resistance buffs to player and other teammates\r\nThis makes the game more interesting as the player now not only have to collect spells and weapons, he will need to find and swap teammates for different dungeons with different elemental enemies\r\n\r\nBecause in our previous game, after many playtests, we know that there are either too powerful or too weak players because of how well they play and understand the game, especially in the level up stats, this creates a problem whereby the weak players lose to most enemies and the strong players kills everything like boring rats\r\n\r\n=============================================\r\n\r\nquestion 4\r\n\r\nElemental attacks and combat teammates might be akin to jrpg,\r\nthis already makes the game coding a huge volcano,\r\nwhich is why I am skipping parrying,\r\nbut if you have a simple idea on introducing back my timer parrying into turn script parrying,\r\nI am all ears for it\r\n\r\n====================================================\r\n\r\nquestion 5\r\n\r\npreviously, our game is yolo, yes, the player have only one life,\r\nI am intending to switch back to \"on player's death, respawn at room1\",\r\nso how should I handle the combat teammates' deaths? \r\nRespawning at room1 sounds weird, respawning at their original found location is too much trouble to code and for the player refind his teammates\r\n\r\nAlso, if players and combat teammates can keep respawning, this makes killing enemies a breeze,\r\nwe can't reset the enemies' hp to max whenever the player enters a room, because it is possible that the player is not attacking an enemy dungeon room but rather, it happens because the enemies are chasing the player, therefore the enemies should not restore to max hp on all occassions (on enter all rooms script)\r\n\r\nHow should we balance this small wall cracking issue which might bring down the whole house?",
      "EditableFormat": "markdown",
      "HTML": "<p>For reference, previous version of enemy targeter (Which can only target the last enemy in a room)<br>\nhttps://textadventures.co.uk/forum/quest/topic/dpwwos2no0i6wg_cji0yig/how-to-use-timer-to-detect-the-last-enemys-attribute-in-the-room</p>\n<p>As usual, I appreciate both coding solutions and little-coding creative walkaround solutions because I am not that good at coding</p>\n<p>This is for a future game, if you see this topic too late but still have answers, please do answer</p>\n<hr>\n<p>pseudo code (untested)<br>\non enter all rooms script<br>\nand on combat teammates' deaths<br>\nand on enemies death</p>\n<pre><code>placeorder = 1\nforeach (enemy, GetDirectChildren (game.pov.parent)) {\n  if (HasAttribute(enemy, \"enemy\")) {\n    enemy.position = placeorder\n    placeorder = placeorder+1\n  }\n}\n</code></pre>\n<p>on every 1 turn in turn script (player uses lightning blade)</p>\n<pre><code>foreach (enemy, GetDirectChildren (game.pov.parent)) {\n  if (HasAttribute(enemy, \"enemy\")) {\n    if (enemy.position = 1) {\n      enemy.hp = enemy.hp - player.atk\n    }\n  }\n}\n</code></pre>\n<p>on every 1 turn in turn script (player uses laser beam (area of effect))</p>\n<pre><code>foreach (enemy, GetDirectChildren (game.pov.parent)) {\n  if (HasAttribute(enemy, \"enemy\")) {\n    if (enemy.position &lt;= 3 ) {\n      enemy.hp = enemy.hp - player.atk\n    }\n  }\n}\n</code></pre>\n<hr>\n<p>The problem with my pseudo code is my code tends to be messy and it always turns out that there are simpler and shorter codes to directly target the enemy's position<br>\nAlso, the game gets more and more complex</p>\n<ol>\n<li>The player may find combat teammates which follows the player everywhere until the player click 'say goodbye' verb, this means the enemy will need to target the player's and combat teammates' positions as well</li>\n<li>There may be a strategic button to change player's team formation, same for the enemy, for example, player by default is always position 1, but what if you hire a paladin, you would want to him to be blocking most of the enemies' attacks right, so it would be better if he is at position 1, how do I do this stragetic button?</li>\n<li>It is very messy to equip weapons and armour to each combat teammates, so what I would be doing is probably to level them up to a maximum of level 10, so at different levels, they can possibly become powerful aoe attacker which needs to be protected, or they can become healer and can be placed anywhere</li>\n<li>Powerful game reversals may happen: Player resurrects one of his teammate, this changes the positions once again. Enemy calls in reinforcement, this adds more position number which needs to be targeted</li>\n</ol>\n<p>I am sure my pseudo code can solve all of these issues, but imagine, how much code I need to write compared to a proper coding that directly targets the enemy's position or \"placement order in a room\"</p>\n<p>====================================================================</p>\n<p>Congratulations! you have arrived at question 2,<br>\nyour prize reward is a digital hug</p>\n<p>As this game is going to be more complex and huger than even before, there are many concerns on how the fighting, travelling rooms, solving puzzles and buying shop items should work out</p>\n<p>As you can see the combat have been changed into turn scripts from using of timers in the previous game,<br>\nbut is every 1 turn script or auto combat too fast for the player?<br>\nIf you had tried my previous game, you will know that the enemies can chase you to any rooms you enter,<br>\nso what if the player is just walking back to a marketplace to buy items, what if the player had already defeated enemies in a room which respawns annoyingly and that the player only wants to solve the puzzle in the room</p>\n<p>As far as I know, the way turn scripts works, is no matter what button the player presses, the the turn script will fire, so if there are enemies in the room, players are going to find it especially difficult to just purchase shop items or solve dungeon puzzles</p>\n<p>How do I set the combat turn script not to fire when player is not interested in combat or is sneaking pass overleveled enemies?<br>\nHow do create a verb button \"auto battle\" that sets the combat turn script to automatic without the player requiring to press any button? (This is for highly confident player that have powerful stats and is just exploring around for full completion of maps)</p>\n<p>==================================================================</p>\n<p>Part 3 - Game's description</p>\n<p>This is just an explanation on why the game have combat teammates<br>\ndifferent combat teammates can deal different elemental attacks or provided elemental resistance buffs to player and other teammates<br>\nThis makes the game more interesting as the player now not only have to collect spells and weapons, he will need to find and swap teammates for different dungeons with different elemental enemies</p>\n<p>Because in our previous game, after many playtests, we know that there are either too powerful or too weak players because of how well they play and understand the game, especially in the level up stats, this creates a problem whereby the weak players lose to most enemies and the strong players kills everything like boring rats</p>\n<p>=============================================</p>\n<p>question 4</p>\n<p>Elemental attacks and combat teammates might be akin to jrpg,<br>\nthis already makes the game coding a huge volcano,<br>\nwhich is why I am skipping parrying,<br>\nbut if you have a simple idea on introducing back my timer parrying into turn script parrying,<br>\nI am all ears for it</p>\n<p>====================================================</p>\n<p>question 5</p>\n<p>previously, our game is yolo, yes, the player have only one life,<br>\nI am intending to switch back to \"on player's death, respawn at room1\",<br>\nso how should I handle the combat teammates' deaths?<br>\nRespawning at room1 sounds weird, respawning at their original found location is too much trouble to code and for the player refind his teammates</p>\n<p>Also, if players and combat teammates can keep respawning, this makes killing enemies a breeze,<br>\nwe can't reset the enemies' hp to max whenever the player enters a room, because it is possible that the player is not attacking an enemy dungeon room but rather, it happens because the enemies are chasing the player, therefore the enemies should not restore to max hp on all occassions (on enter all rooms script)</p>\n<p>How should we balance this small wall cracking issue which might bring down the whole house?</p>\n\n",
      "PostDate": "2024-08-05T06:19:59.8750153Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e75dd1ab-fe30-4b0d-8880-edc5539c802d",
      "UserId": 31991,
      "Username": "daeun",
      "AvatarUrl": "https://i.imgur.com/Xvt8zzBb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I am sure my pseudo code can solve all of these issues, but imagine, how much code I need to write compared to a proper coding that directly targets the enemy's position or \"placement order in a room\"\r\n\r\nYou can directly put your pseudo code into the start of your combat turn script rather than \r\neverywhere: (on enter all rooms script, and on combat teammates' deaths, on enemies death, on Player resurrects one of his teammate, (this changes the positions once again), on enemy calls in reinforcement (this adds more position number which needs to be targeted)\r\n\r\n```\r\nplaceorder = 1\r\nforeach (enemy, GetDirectChildren (game.pov.parent)) {\r\n  if (HasAttribute(enemy, \"enemy\")) {\r\n    enemy.position = placeorder\r\n    placeorder = placeorder+1\r\n  }\r\n}\r\n```\r\nBecause your combat turn script fires every turn, it will automatically ensure the enemy's position is always updated,\r\nof course, there will be attack miss cases like enemy calls in reinforcement because their position wasn't updated yet, but usually these attack miss cases usually lasts for one turn only\r\n\r\n============================================================================\r\n\r\n> 1. There may be a strategic button to change player's team formation, same for the enemy, for example, player by default is always position 1, but what if you hire a paladin, you would want to him to be blocking most of the enemies' attacks right, so it would be better if he is at position 1, how do I do this stragetic button?\r\n>2. It is very messy to equip weapons and armour to each combat teammates, so what I would be doing is probably to level them up to a maximum of level 10, so at different levels, they can possibly become powerful aoe attacker which needs to be protected, or they can become healer and can be placed anywhere\r\n\r\nThe code should be similar to the enemy's place order function\r\n```\r\nplaceorder = 1\r\nforeach (ally, GetDirectChildren (game.pov)) {\r\n  if (HasAttribute(ally, \"ally\")) {\r\n    ally.position = placeorder\r\n    placeorder = placeorder+1\r\n  }\r\n}\r\n```\r\nThis function automatically sets the combat teammates according to how the player drop and take these allies, so yes, rather than have the allies follow you, they now sits in your inventory instead\r\n\r\nSo what about the order of the player's position?\r\nSimple, you simply create a pseudo \"player\" object, perhaps call it Isaac, then the player can choose to drop Isaac and take him to set himself into the correct fighting position\r\n\r\n======================================================================\r\n\r\n>How do create a verb button \"auto battle\" that sets the combat turn script to automatic without the player requiring to press any button? (This is for highly confident player that have powerful stats and is just exploring around for full completion of maps)\r\n\r\n```\r\nfor (attacktimes, 1, player.battlespeed, 1) {\r\n  combatfunction\r\n}\r\n```\r\nThis code is very simple, the player can adjust his battlespeed from 1 to 10,\r\nif he sets it to 5, it means every turnscript fire, the player and enemies attack a total of 5 times\r\n\r\n=================================================================\r\n\r\n>As far as I know, the way turn scripts works, is no matter what button the player presses, the the turn script will fire, so if there are enemies in the room, players are going to find it especially difficult to just purchase shop items or solve dungeon puzzles\r\n\r\nAlthough we can simply allow battlespeed to 0 to stop combat every turn script fire, the game wouldn't feel anxious and scary, enemies chasing you but can't attack you is just plain boring\r\n\r\nTherefore we modify the enemy chase function by simply adding one line \"enemy.parent.peace\"\r\nBasically in rooms where you dun want battles to occur, simply add an attribute to that room named \"peace\"\r\n\r\nEven though the combat turn scripts still fire, since the enemies can't chase you into peaceful zones, you won't be attacked anymore\r\n\r\n```\r\nforeach (enemy, AllObjects()) {\r\n  if (HasAttribute(enemy, \"enemy\") and HasAttribute(enemy, \"aggro\")) {\r\n    if (enemy.aggro=true and enemy.hp>0 and enemy.parent.peace) {\r\n      if (RandomChance(50)) {\r\n        msg (enemy.alias1+ \" catched up to you\")\r\n        MoveObject (enemy, game.pov.parent)\r\n        if (RandomChance(50)) {\r\n          msg (enemy.alias1+ \" strikes you for \"+enemy.atk+\" damage\")\r\n          player.hp = player.hp-(enemy.atk)\r\n        }\r\n      }\r\n      else {\r\n        enemy.aggro = false\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I am sure my pseudo code can solve all of these issues, but imagine, how much code I need to write compared to a proper coding that directly targets the enemy's position or \"placement order in a room\"</p>\n</blockquote>\n<p>You can directly put your pseudo code into the start of your combat turn script rather than<br>\neverywhere: (on enter all rooms script, and on combat teammates' deaths, on enemies death, on Player resurrects one of his teammate, (this changes the positions once again), on enemy calls in reinforcement (this adds more position number which needs to be targeted)</p>\n<pre><code>placeorder = 1\nforeach (enemy, GetDirectChildren (game.pov.parent)) {\n  if (HasAttribute(enemy, \"enemy\")) {\n    enemy.position = placeorder\n    placeorder = placeorder+1\n  }\n}\n</code></pre>\n<p>Because your combat turn script fires every turn, it will automatically ensure the enemy's position is always updated,<br>\nof course, there will be attack miss cases like enemy calls in reinforcement because their position wasn't updated yet, but usually these attack miss cases usually lasts for one turn only</p>\n<p>============================================================================</p>\n<blockquote>\n<ol>\n<li>There may be a strategic button to change player's team formation, same for the enemy, for example, player by default is always position 1, but what if you hire a paladin, you would want to him to be blocking most of the enemies' attacks right, so it would be better if he is at position 1, how do I do this stragetic button?</li>\n<li>It is very messy to equip weapons and armour to each combat teammates, so what I would be doing is probably to level them up to a maximum of level 10, so at different levels, they can possibly become powerful aoe attacker which needs to be protected, or they can become healer and can be placed anywhere</li>\n</ol>\n</blockquote>\n<p>The code should be similar to the enemy's place order function</p>\n<pre><code>placeorder = 1\nforeach (ally, GetDirectChildren (game.pov)) {\n  if (HasAttribute(ally, \"ally\")) {\n    ally.position = placeorder\n    placeorder = placeorder+1\n  }\n}\n</code></pre>\n<p>This function automatically sets the combat teammates according to how the player drop and take these allies, so yes, rather than have the allies follow you, they now sits in your inventory instead</p>\n<p>So what about the order of the player's position?<br>\nSimple, you simply create a pseudo \"player\" object, perhaps call it Isaac, then the player can choose to drop Isaac and take him to set himself into the correct fighting position</p>\n<p>======================================================================</p>\n<blockquote>\n<p>How do create a verb button \"auto battle\" that sets the combat turn script to automatic without the player requiring to press any button? (This is for highly confident player that have powerful stats and is just exploring around for full completion of maps)</p>\n</blockquote>\n<pre><code>for (attacktimes, 1, player.battlespeed, 1) {\n  combatfunction\n}\n</code></pre>\n<p>This code is very simple, the player can adjust his battlespeed from 1 to 10,<br>\nif he sets it to 5, it means every turnscript fire, the player and enemies attack a total of 5 times</p>\n<p>=================================================================</p>\n<blockquote>\n<p>As far as I know, the way turn scripts works, is no matter what button the player presses, the the turn script will fire, so if there are enemies in the room, players are going to find it especially difficult to just purchase shop items or solve dungeon puzzles</p>\n</blockquote>\n<p>Although we can simply allow battlespeed to 0 to stop combat every turn script fire, the game wouldn't feel anxious and scary, enemies chasing you but can't attack you is just plain boring</p>\n<p>Therefore we modify the enemy chase function by simply adding one line \"enemy.parent.peace\"<br>\nBasically in rooms where you dun want battles to occur, simply add an attribute to that room named \"peace\"</p>\n<p>Even though the combat turn scripts still fire, since the enemies can't chase you into peaceful zones, you won't be attacked anymore</p>\n<pre><code>foreach (enemy, AllObjects()) {\n  if (HasAttribute(enemy, \"enemy\") and HasAttribute(enemy, \"aggro\")) {\n    if (enemy.aggro=true and enemy.hp&gt;0 and enemy.parent.peace) {\n      if (RandomChance(50)) {\n        msg (enemy.alias1+ \" catched up to you\")\n        MoveObject (enemy, game.pov.parent)\n        if (RandomChance(50)) {\n          msg (enemy.alias1+ \" strikes you for \"+enemy.atk+\" damage\")\n          player.hp = player.hp-(enemy.atk)\n        }\n      }\n      else {\n        enemy.aggro = false\n      }\n    }\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2024-08-08T14:36:14.5268267Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "69f0180a-cb37-4450-8cb3-7105fe98d705",
      "UserId": 31991,
      "Username": "daeun",
      "AvatarUrl": "https://i.imgur.com/Xvt8zzBb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Because in our previous game, after many playtests, we know that there are either too powerful or too weak players because of how well they play and understand the game, especially in the level up stats, this creates a problem whereby the weak players lose to most enemies and the strong players kills everything like boring rats\r\n\r\nBesides adding elemental attacks and resistance which are newbie friendly tactics, we can also suppress the power of all stats, when the stat reaches a too high number, its effectiveness starts to drop sharply and becomes exponentially useless, forcing the players to invest in other stats, this stops any stat from becoming overpowered while making all varieties of player builds into more similar and predictable level of power\r\n\r\n=============================================================\r\n\r\n>but if you have a simple idea on introducing back my timer parrying into turn script parrying,\r\nI am all ears for it\r\n\r\nPreviously in timer parrying, you can see the enemy's attack before he does that attack, in our new game, it will of course not happen due to how much coding that had taken, so instead, the player will have to fight with the enemies a few rounds and see whether the enemies are mostly a physical melee attacker, if so, the player can swap attack to parrying to block all those attacks receiving 0 damage and after a set amount of times deal a heavy parry atk damage to the parried enemies\r\n\r\nObviously this looks too overpowered, so the revelation is that when the player is in parry mode, he receives tripled damage from enemy's attacks that are not physical melee damage\r\nAnd to make things more tricky, all enemies with physical melee attacks will have at least a 25% to do non-physical melee attacks like fireball spell\r\nSo even if the player is very informed of the enemies attack patterns, there is still a 25% of parry failure leading to taking in tripled incoming enemy damage\r\n\r\n===================================================\r\n\r\n> so how should I handle the combat teammates' deaths?\r\nRespawning at room1 sounds weird, respawning at their original found location is too much trouble to code and for the player refind his teammates\r\n\r\nWhen the combat teammates are knockedout, they simply stay in the player's inventory,\r\nset the ally's attribute \"knockedout\" = true\r\nand basically adjust all combat turn scripts with requiring of ally.knockedout=false\r\nin order to participate in battle\r\n\r\n====================================================================\r\n\r\n> Also, if players and combat teammates can keep respawning, this makes killing enemies a breeze,\r\nwe can't reset the enemies' hp to max whenever the player enters a room, because it is possible that the player is not attacking an enemy dungeon room but rather, it happens because the enemies are chasing the player, therefore the enemies should not restore to max hp on all occassions (on enter all rooms script)\r\n\r\nRather than setting the enemies' hp to max whenever the player enters a room,\r\ninstead, set all alive enemies' hp to max whenever players and/or combat teammates respawn",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Because in our previous game, after many playtests, we know that there are either too powerful or too weak players because of how well they play and understand the game, especially in the level up stats, this creates a problem whereby the weak players lose to most enemies and the strong players kills everything like boring rats</p>\n</blockquote>\n<p>Besides adding elemental attacks and resistance which are newbie friendly tactics, we can also suppress the power of all stats, when the stat reaches a too high number, its effectiveness starts to drop sharply and becomes exponentially useless, forcing the players to invest in other stats, this stops any stat from becoming overpowered while making all varieties of player builds into more similar and predictable level of power</p>\n<p>=============================================================</p>\n<blockquote>\n<p>but if you have a simple idea on introducing back my timer parrying into turn script parrying,<br>\nI am all ears for it</p>\n</blockquote>\n<p>Previously in timer parrying, you can see the enemy's attack before he does that attack, in our new game, it will of course not happen due to how much coding that had taken, so instead, the player will have to fight with the enemies a few rounds and see whether the enemies are mostly a physical melee attacker, if so, the player can swap attack to parrying to block all those attacks receiving 0 damage and after a set amount of times deal a heavy parry atk damage to the parried enemies</p>\n<p>Obviously this looks too overpowered, so the revelation is that when the player is in parry mode, he receives tripled damage from enemy's attacks that are not physical melee damage<br>\nAnd to make things more tricky, all enemies with physical melee attacks will have at least a 25% to do non-physical melee attacks like fireball spell<br>\nSo even if the player is very informed of the enemies attack patterns, there is still a 25% of parry failure leading to taking in tripled incoming enemy damage</p>\n<p>===================================================</p>\n<blockquote>\n<p>so how should I handle the combat teammates' deaths?<br>\nRespawning at room1 sounds weird, respawning at their original found location is too much trouble to code and for the player refind his teammates</p>\n</blockquote>\n<p>When the combat teammates are knockedout, they simply stay in the player's inventory,<br>\nset the ally's attribute \"knockedout\" = true<br>\nand basically adjust all combat turn scripts with requiring of ally.knockedout=false<br>\nin order to participate in battle</p>\n<p>====================================================================</p>\n<blockquote>\n<p>Also, if players and combat teammates can keep respawning, this makes killing enemies a breeze,<br>\nwe can't reset the enemies' hp to max whenever the player enters a room, because it is possible that the player is not attacking an enemy dungeon room but rather, it happens because the enemies are chasing the player, therefore the enemies should not restore to max hp on all occassions (on enter all rooms script)</p>\n</blockquote>\n<p>Rather than setting the enemies' hp to max whenever the player enters a room,<br>\ninstead, set all alive enemies' hp to max whenever players and/or combat teammates respawn</p>\n\n",
      "PostDate": "2024-08-08T14:43:04.612808Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d03bbd77-521a-4730-b6eb-d6e9d132e30a",
      "UserId": 695092,
      "Username": "charlesdaven",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks for your answer. I got it!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks for your answer. I got it!</p>\n\n",
      "PostDate": "2024-08-16T06:44:49.6088275Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d71a38d9-26f8-4339-9e58-5080baffb0d0",
      "UserId": 31991,
      "Username": "daeun",
      "AvatarUrl": "https://i.imgur.com/Xvt8zzBb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Thanks for your answer. I got it!\r\n\r\nI dunno wat u talking bout,\r\ncharlesdaven is an advertisement bot",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Thanks for your answer. I got it!</p>\n</blockquote>\n<p>I dunno wat u talking bout,<br>\ncharlesdaven is an advertisement bot</p>\n\n",
      "PostDate": "2024-08-16T09:01:26.9906698Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ba4e0a79-3519-4a0c-ab9d-179f0af3682b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm wondering if there is a benefit to this `placeorder` system rather than just maintaining a list of enemies.\r\n\r\nLooking at the code in the first post, I wonder if it might be more efficient to modify it like:\r\n\r\n> pseudo code (untested)\r\non enter all rooms script\r\nand on combat teammates' deaths\r\nand on enemies death\r\n```\r\ngame.enemyorder = FilterByNotAttribute (GetDirectChildren (game.pov.parent), \"enemy\", null)\r\n```\r\n(this creates an objectlist of all objects which have an `enemy` attribute)\r\n\r\n> on every 1 turn in turn script (player uses lightning blade)\r\n```\r\nif (ListCount (game.enemyorder) > 0) {\r\n  enemy = ListItem (game.enemyorder, 0)\r\n  enemy.hp = enemy.hp - player.atk\r\n}\r\n```\r\n(in this case, rather than searching every object in the room again to find the one in the first place, you just look at the list you already made)\r\n\r\n> on every 1 turn in turn script (player uses laser beam (area of effect))\r\n```\r\nfor (i, 0, 2) {\r\n  if (ListCount (game.enemyorder) > i) {\r\n    enemy = ListItem (game.enemyorder, i)\r\n    enemy.hp = enemy.hp - player.atk\r\n  }\r\n}\r\n```\r\n\r\n(that's just based on your first post… I wrote a response already and apparently didn't finish it)\r\n\r\nAs to the question about enemies/allies wanting to change positions, like putting your tanks at the front, that's simple enough. Just give them an attribute like `preferred_combat_position` which says where they want to be - low numbers for the front, and high for the back.\r\n\r\nThen your list-making function becomes:\r\n```\r\ngame.enemyorder = FilterByNotAttribute (GetDirectChildren (game.pov.parent), \"enemy\", null)\r\ngame.enemyorder = ObjectListSort (game.enemyorder, \"preferred_combat_position\")\r\n```\r\n\r\nIn this case, enemies/allies with the same preference will be put in standard order (the order they appear in the game file for objects that existed from the start; or the order they were created for cloned objects)",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm wondering if there is a benefit to this <code>placeorder</code> system rather than just maintaining a list of enemies.</p>\n<p>Looking at the code in the first post, I wonder if it might be more efficient to modify it like:</p>\n<blockquote>\n<p>pseudo code (untested)<br>\non enter all rooms script<br>\nand on combat teammates' deaths<br>\nand on enemies death</p>\n</blockquote>\n<pre><code>game.enemyorder = FilterByNotAttribute (GetDirectChildren (game.pov.parent), \"enemy\", null)\n</code></pre>\n<p>(this creates an objectlist of all objects which have an <code>enemy</code> attribute)</p>\n<blockquote>\n<p>on every 1 turn in turn script (player uses lightning blade)</p>\n</blockquote>\n<pre><code>if (ListCount (game.enemyorder) &gt; 0) {\n  enemy = ListItem (game.enemyorder, 0)\n  enemy.hp = enemy.hp - player.atk\n}\n</code></pre>\n<p>(in this case, rather than searching every object in the room again to find the one in the first place, you just look at the list you already made)</p>\n<blockquote>\n<p>on every 1 turn in turn script (player uses laser beam (area of effect))</p>\n</blockquote>\n<pre><code>for (i, 0, 2) {\n  if (ListCount (game.enemyorder) &gt; i) {\n    enemy = ListItem (game.enemyorder, i)\n    enemy.hp = enemy.hp - player.atk\n  }\n}\n</code></pre>\n<p>(that's just based on your first post… I wrote a response already and apparently didn't finish it)</p>\n<p>As to the question about enemies/allies wanting to change positions, like putting your tanks at the front, that's simple enough. Just give them an attribute like <code>preferred_combat_position</code> which says where they want to be - low numbers for the front, and high for the back.</p>\n<p>Then your list-making function becomes:</p>\n<pre><code>game.enemyorder = FilterByNotAttribute (GetDirectChildren (game.pov.parent), \"enemy\", null)\ngame.enemyorder = ObjectListSort (game.enemyorder, \"preferred_combat_position\")\n</code></pre>\n<p>In this case, enemies/allies with the same preference will be put in standard order (the order they appear in the game file for objects that existed from the start; or the order they were created for cloned objects)</p>\n\n",
      "PostDate": "2024-08-16T11:50:36.8874568Z",
      "LastEditDate": "2024-08-16T11:59:47.6857211Z",
      "link": null
    },
    {
      "PostId": "dd6330b2-4752-4c64-b6f9-799a86af6ff9",
      "UserId": 31991,
      "Username": "daeun",
      "AvatarUrl": "https://i.imgur.com/Xvt8zzBb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I'm wondering if there is a benefit to this placeorder system rather than just maintaining a list of enemies.\r\n\r\nThe point is only to keep the enemies' position updated every turn script, and your coding does so\r\n\r\nBecause the ally might resurrect combat teammates while the enemies can call in reinforcement\r\nhalfway in the battle\r\n\r\n> (that's just based on your first post… I wrote a response already and apparently didn't post it)\r\n\r\nYou might have accidentally typed in an advertising keyword by copying and paste my message,\r\nin this forum thread, I had a few times \"You can't post that here\" error,\r\nI keep on changing my words until my posts finally got through\r\n\r\nI personally save my message before I create a forum post, but yeah, it is tedious\r\n\r\n______________________________________________________________\r\n\r\n> Looking at the code in the first post, I wonder if it might be more efficient to modify it like:\r\n\r\nI often run into system out of memory, so my coding is definitely whacky,\r\nI asked the bot about your coding, and it agrees yours is better and complained my coding were\r\n\r\n1. Redundant Code: The code to find enemies would need to be repeated in every place where an action might affect enemies, which can lead to redundancy and harder-to-maintain code.\r\n2. Error-Prone: Managing enemy interactions without a central list can lead to inconsistencies, especially if objects change frequently.\r\n\r\n________________________________________________________________\r\n\r\nBut perhaps, because I am not familiar with\r\n1. FilterByNotAttribute\r\n2. ListCount\r\n\r\nI find it hard to visualize what you are doing as compared to my coding even after asking the bot to explain,\r\n\r\nwhy is \r\n```\r\ngame.enemyorder = FilterByNotAttribute (GetDirectChildren (game.pov.parent), \"enemy\", null)\r\n```\r\nfaster than\r\n```\r\nplaceorder = 1\r\nforeach (enemy, GetDirectChildren (game.pov.parent)) {\r\n  if (HasAttribute(enemy, \"enemy\")) {\r\n    enemy.position = placeorder\r\n    placeorder = placeorder+1\r\n  }\r\n}\r\n```\r\n_______________________________________________________________\r\n\r\nI was expecting this code to fail, as it sounds like it is deducting all enemies' hp, but when tested, it did only reduced the first enemy's hp, even though the coding works, I have no idea why \r\n```\r\nif (ListCount (game.enemyorder) > 0) {\r\n  enemy = ListItem (game.enemyorder, 0)\r\n  enemy.hp = enemy.hp - player.atk\r\n}\r\n```\r\nThe below is my imagination for your code\r\nBecause you have never set the enemy's position to 1,\r\nhow the heck does the code knows you are asking it to choose the\r\nfirst item in the list?\r\n\r\n```\r\nforeach (enemy, GetDirectChildren (game.pov.parent)) {\r\n  if (HasAttribute(enemy, \"enemy\")) {\r\n   i̶f̶ ̶(̶e̶n̶e̶m̶y̶.̶p̶o̶s̶i̶t̶i̶o̶n̶ ̶=̶ ̶1̶)̶ ̶{̶\r\n      enemy.hp = enemy.hp - player.atk\r\n    }\r\n  }\r\n}\r\n```\r\nOr perhaps, you can ignore my elementary questions,\r\nI just need time for my brain to adjust\r\n________________________________________________________________________\r\ndemo 1 (This is just early testing, it does not feature any significant breakthrough yet)\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.8.6836.13983-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"test9\">\r\n    <gameid>1379648f-eef8-49c6-974e-a9ba68783226</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2024</firstpublished>\r\n    <roomenter type=\"script\">\r\n    </roomenter>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n      <atk type=\"int\">1</atk>\r\n    </object>\r\n    <exit alias=\"south\" to=\"room1\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"room1\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"north\" to=\"room\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"room2\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <object name=\"goblin\">\r\n      <inherit name=\"editor_object\" />\r\n      <enemy type=\"string\"></enemy>\r\n      <hp type=\"int\">7</hp>\r\n    </object>\r\n    <object name=\"goblin1\">\r\n      <inherit name=\"editor_object\" />\r\n      <enemy type=\"string\"></enemy>\r\n      <hp type=\"int\">7</hp>\r\n    </object>\r\n  </object>\r\n  <object name=\"room2\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"north\" to=\"room1\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"room3\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <object name=\"goblin2\">\r\n      <inherit name=\"editor_object\" />\r\n      <enemy type=\"string\"></enemy>\r\n      <hp type=\"int\">7</hp>\r\n    </object>\r\n  </object>\r\n  <object name=\"room3\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"north\" to=\"room2\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"room4\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <object name=\"goblin3\">\r\n      <inherit name=\"editor_object\" />\r\n      <enemy type=\"string\"></enemy>\r\n      <hp type=\"int\">7</hp>\r\n    </object>\r\n    <object name=\"goblin4\">\r\n      <inherit name=\"editor_object\" />\r\n      <enemy type=\"string\"></enemy>\r\n      <hp type=\"int\">7</hp>\r\n    </object>\r\n    <object name=\"goblin5\">\r\n      <inherit name=\"editor_object\" />\r\n      <enemy type=\"string\"></enemy>\r\n      <hp type=\"int\">7</hp>\r\n    </object>\r\n  </object>\r\n  <object name=\"room4\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"north\" to=\"room3\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"room5\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <object name=\"goblin6\">\r\n      <inherit name=\"editor_object\" />\r\n      <enemy type=\"string\"></enemy>\r\n      <hp type=\"int\">7</hp>\r\n    </object>\r\n    <object name=\"goblin7\">\r\n      <inherit name=\"editor_object\" />\r\n      <enemy type=\"string\"></enemy>\r\n      <hp type=\"int\">7</hp>\r\n    </object>\r\n    <object name=\"goblin8\">\r\n      <inherit name=\"editor_object\" />\r\n      <enemy type=\"string\"></enemy>\r\n      <hp type=\"int\">7</hp>\r\n    </object>\r\n    <object name=\"goblin9\">\r\n      <inherit name=\"editor_object\" />\r\n      <enemy type=\"string\"></enemy>\r\n      <hp type=\"int\">7</hp>\r\n    </object>\r\n  </object>\r\n  <object name=\"room5\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"north\" to=\"room4\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"room6\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"room6\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"north\" to=\"room5\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <exit alias=\"south\" to=\"room7\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"room7\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"north\" to=\"room6\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"room8\">\r\n    <inherit name=\"editor_room\" />\r\n  </object>\r\n  <object name=\"room9\">\r\n    <inherit name=\"editor_room\" />\r\n  </object>\r\n  <object name=\"room10\">\r\n    <inherit name=\"editor_room\" />\r\n  </object>\r\n  <turnscript>\r\n    <script><![CDATA[\r\n      game.enemyorder = FilterByNotAttribute (GetDirectChildren (game.pov.parent), \"enemy\", null)\r\n      msg (\"\"+game.enemyorder)\r\n      if (ListCount (game.enemyorder) > 0) {\r\n        enemy = ListItem (game.enemyorder, 0)\r\n        enemy.hp = enemy.hp - player.atk\r\n        if (enemy.hp<1) {\r\n          RemoveObject (enemy)\r\n        }\r\n        foreach (enemy, GetDirectChildren (game.pov.parent)) {\r\n          if (HasAttribute(enemy, \"enemy\")) {\r\n            msg (enemy.name+\": \"+enemy.hp+\" hp\")\r\n          }\r\n        }\r\n      }\r\n    ]]></script>\r\n    <enabled />\r\n  </turnscript>\r\n</asl>\r\n```\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I'm wondering if there is a benefit to this placeorder system rather than just maintaining a list of enemies.</p>\n</blockquote>\n<p>The point is only to keep the enemies' position updated every turn script, and your coding does so</p>\n<p>Because the ally might resurrect combat teammates while the enemies can call in reinforcement<br>\nhalfway in the battle</p>\n<blockquote>\n<p>(that's just based on your first post… I wrote a response already and apparently didn't post it)</p>\n</blockquote>\n<p>You might have accidentally typed in an advertising keyword by copying and paste my message,<br>\nin this forum thread, I had a few times \"You can't post that here\" error,<br>\nI keep on changing my words until my posts finally got through</p>\n<p>I personally save my message before I create a forum post, but yeah, it is tedious</p>\n<hr>\n<blockquote>\n<p>Looking at the code in the first post, I wonder if it might be more efficient to modify it like:</p>\n</blockquote>\n<p>I often run into system out of memory, so my coding is definitely whacky,<br>\nI asked the bot about your coding, and it agrees yours is better and complained my coding were</p>\n<ol>\n<li>Redundant Code: The code to find enemies would need to be repeated in every place where an action might affect enemies, which can lead to redundancy and harder-to-maintain code.</li>\n<li>Error-Prone: Managing enemy interactions without a central list can lead to inconsistencies, especially if objects change frequently.</li>\n</ol>\n<hr>\n<p>But perhaps, because I am not familiar with</p>\n<ol>\n<li>FilterByNotAttribute</li>\n<li>ListCount</li>\n</ol>\n<p>I find it hard to visualize what you are doing as compared to my coding even after asking the bot to explain,</p>\n<p>why is</p>\n<pre><code>game.enemyorder = FilterByNotAttribute (GetDirectChildren (game.pov.parent), \"enemy\", null)\n</code></pre>\n<p>faster than</p>\n<pre><code>placeorder = 1\nforeach (enemy, GetDirectChildren (game.pov.parent)) {\n  if (HasAttribute(enemy, \"enemy\")) {\n    enemy.position = placeorder\n    placeorder = placeorder+1\n  }\n}\n</code></pre>\n<hr>\n<p>I was expecting this code to fail, as it sounds like it is deducting all enemies' hp, but when tested, it did only reduced the first enemy's hp, even though the coding works, I have no idea why</p>\n<pre><code>if (ListCount (game.enemyorder) &gt; 0) {\n  enemy = ListItem (game.enemyorder, 0)\n  enemy.hp = enemy.hp - player.atk\n}\n</code></pre>\n<p>The below is my imagination for your code<br>\nBecause you have never set the enemy's position to 1,<br>\nhow the heck does the code knows you are asking it to choose the<br>\nfirst item in the list?</p>\n<pre><code>foreach (enemy, GetDirectChildren (game.pov.parent)) {\n  if (HasAttribute(enemy, \"enemy\")) {\n   i̶f̶ ̶(̶e̶n̶e̶m̶y̶.̶p̶o̶s̶i̶t̶i̶o̶n̶ ̶=̶ ̶1̶)̶ ̶{̶\n      enemy.hp = enemy.hp - player.atk\n    }\n  }\n}\n</code></pre>\n<p>Or perhaps, you can ignore my elementary questions,<br>\nI just need time for my brain to adjust</p>\n<hr>\n<p>demo 1 (This is just early testing, it does not feature any significant breakthrough yet)</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.8.6836.13983--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"test9\"&gt;\n    &lt;gameid&gt;1379648f-eef8-49c6-974e-a9ba68783226&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2024&lt;/firstpublished&gt;\n    &lt;roomenter type=\"script\"&gt;\n    &lt;/roomenter&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n      &lt;atk type=\"int\"&gt;1&lt;/atk&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"south\" to=\"room1\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room1\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"north\" to=\"room\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"room2\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;object name=\"goblin\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;enemy type=\"string\"&gt;&lt;/enemy&gt;\n      &lt;hp type=\"int\"&gt;7&lt;/hp&gt;\n    &lt;/object&gt;\n    &lt;object name=\"goblin1\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;enemy type=\"string\"&gt;&lt;/enemy&gt;\n      &lt;hp type=\"int\"&gt;7&lt;/hp&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room2\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"north\" to=\"room1\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"room3\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;object name=\"goblin2\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;enemy type=\"string\"&gt;&lt;/enemy&gt;\n      &lt;hp type=\"int\"&gt;7&lt;/hp&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room3\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"north\" to=\"room2\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"room4\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;object name=\"goblin3\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;enemy type=\"string\"&gt;&lt;/enemy&gt;\n      &lt;hp type=\"int\"&gt;7&lt;/hp&gt;\n    &lt;/object&gt;\n    &lt;object name=\"goblin4\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;enemy type=\"string\"&gt;&lt;/enemy&gt;\n      &lt;hp type=\"int\"&gt;7&lt;/hp&gt;\n    &lt;/object&gt;\n    &lt;object name=\"goblin5\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;enemy type=\"string\"&gt;&lt;/enemy&gt;\n      &lt;hp type=\"int\"&gt;7&lt;/hp&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room4\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"north\" to=\"room3\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"room5\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;object name=\"goblin6\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;enemy type=\"string\"&gt;&lt;/enemy&gt;\n      &lt;hp type=\"int\"&gt;7&lt;/hp&gt;\n    &lt;/object&gt;\n    &lt;object name=\"goblin7\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;enemy type=\"string\"&gt;&lt;/enemy&gt;\n      &lt;hp type=\"int\"&gt;7&lt;/hp&gt;\n    &lt;/object&gt;\n    &lt;object name=\"goblin8\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;enemy type=\"string\"&gt;&lt;/enemy&gt;\n      &lt;hp type=\"int\"&gt;7&lt;/hp&gt;\n    &lt;/object&gt;\n    &lt;object name=\"goblin9\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;enemy type=\"string\"&gt;&lt;/enemy&gt;\n      &lt;hp type=\"int\"&gt;7&lt;/hp&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room5\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"north\" to=\"room4\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"room6\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room6\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"north\" to=\"room5\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=\"south\" to=\"room7\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room7\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"north\" to=\"room6\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room8\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room9\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room10\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n  &lt;/object&gt;\n  &lt;turnscript&gt;\n    &lt;script&gt;&lt;![CDATA[\n      game.enemyorder = FilterByNotAttribute (GetDirectChildren (game.pov.parent), \"enemy\", null)\n      msg (\"\"+game.enemyorder)\n      if (ListCount (game.enemyorder) &gt; 0) {\n        enemy = ListItem (game.enemyorder, 0)\n        enemy.hp = enemy.hp - player.atk\n        if (enemy.hp&lt;1) {\n          RemoveObject (enemy)\n        }\n        foreach (enemy, GetDirectChildren (game.pov.parent)) {\n          if (HasAttribute(enemy, \"enemy\")) {\n            msg (enemy.name+\": \"+enemy.hp+\" hp\")\n          }\n        }\n      }\n    ]]&gt;&lt;/script&gt;\n    &lt;enabled /&gt;\n  &lt;/turnscript&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2024-08-16T13:50:49.1971426Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c5deef7b-d6ee-430a-a770-73907350feb4",
      "UserId": 31991,
      "Username": "daeun",
      "AvatarUrl": "https://i.imgur.com/Xvt8zzBb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> As to the question about enemies/allies wanting to change positions, like putting your tanks at the front, that's simple enough. Just give them an attribute like preferred_combat_position which says where they want to be - low numbers for the front, and high for the back.\r\n\r\nI know this code will work, but I can't visualize it so I am asking is the player able to change the order for the combat teammates' positions?\r\nOr do I have to create an enter \"position number\" recorder for the player to manually adjust the allies position?\r\n\r\n_________________________________________________________\r\n\r\n> In this case, enemies/allies with the same preference will be put in standard order (the order they appear in the game file for objects that existed from the start; or the order they were created for cloned objects)\r\n\r\nIf I am not wrong, this means two enemies with \"preferred_combat_position\" = 1 will not crash the quest app, and it will sort it out automatically based on coding order in quest file",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>As to the question about enemies/allies wanting to change positions, like putting your tanks at the front, that's simple enough. Just give them an attribute like preferred_combat_position which says where they want to be - low numbers for the front, and high for the back.</p>\n</blockquote>\n<p>I know this code will work, but I can't visualize it so I am asking is the player able to change the order for the combat teammates' positions?<br>\nOr do I have to create an enter \"position number\" recorder for the player to manually adjust the allies position?</p>\n<hr>\n<blockquote>\n<p>In this case, enemies/allies with the same preference will be put in standard order (the order they appear in the game file for objects that existed from the start; or the order they were created for cloned objects)</p>\n</blockquote>\n<p>If I am not wrong, this means two enemies with \"preferred_combat_position\" = 1 will not crash the quest app, and it will sort it out automatically based on coding order in quest file</p>\n\n",
      "PostDate": "2024-08-16T14:01:07.7064982Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "463c5977-0db4-474b-8b4b-1a288ed8fc84",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> You might have accidentally typed in an advertising keyword by copying and paste my message,\r\n\r\nNo, I mean that I had a tab open with half a reply written. I must have got distracted while writing it.\r\n\r\n> But perhaps, because I am not familiar with\r\n> 1. FilterByNotAttribute\r\n> 2. ListCount\r\n\r\nThe use of `FilterByNotAttribute` here is is a little weird. Basically, <code>FilterByNotAttribute (<em style=\"color: blue;\">GetDirectChildren (game.pov.parent)</em>, \"<em style=\"color: green;\">enemy</em>\", <em style=\"color: orange\">null</em>)</code> gives you an *objectlist* containing all objects in <em style=\"color: blue;\">the current room</em> which have an <code style=\"color: green;\">enemy</code> attribute with a value that isn't <code style=\"color: orange\">null</code>.\r\n\r\nMore often, you would use `FilterByAttribute` to find an attribute with a specific value. However, because an attribute that doesn't exist has the special value `null`, that means that we can search for values that are not null to find objects that have a specific attribute. Does that make sense?\r\n\r\n`ListCount` is much simpler - it tells you how many objects are in a list. In the example, we check if `ListCount` is greater than zero to make sure there are actually enemies in the list. In the example where we're looking for the first three enemies, it checks each time. So for example if there are 3 enemies present, `ListCount (game.enemyorder)` will be 3, and you can access the enemies by using `ListItem (game.enemyorder, 0)`, `ListItem (game.enemyorder, 1)`, and `ListItem (game.enemyorder, 2)`.\r\n\r\nDoes that make sense? I'm not sure if you're used to working with lists like this.\r\n\r\n> why is [...] faster than [...]\r\n\r\nIt isn't really – it's doing the same thing, just storing the results differently.\r\n\r\nThe difference is that your code stores a number in an attribute on each enemy. While mine stores a list of enemies in a single attribute.\r\n\r\nWhen you need to find the enemy in a given position, your code is looking at every object in the room again, checking them all to see if they have the right number; you have another loop. But my code just uses `ListItem` to extract the first enemy from the list.\r\n\r\n> I was expecting this code to fail, as it sounds like it is deducting all enemies' hp, but when tested, it did only reduced the first enemy's hp, even though the coding works, I have no idea why\r\n\r\nIt can't touch all enemies; it doesn't have a `foreach`.\r\nIt has the line `enemy = ListItem (game.enemyorder, 0)` - which sets the `enemy` variable to be the first object in the list `game.enemyorder`.\r\n\r\nThis is a lot faster than using `foreach`, because it only need to look at one object, not all of them.\r\n\r\n> I know this code will work, but I can't visualize it so I am asking is the player able to change the order for the combat teammates' positions?\r\nOr do I have to create an enter \"position number\" recorder for the player to manually adjust the allies position?\r\n\r\nI would probably allow the player to choose \"front\", \"middle\", or \"back\", and set the attribute to 1, 2, or 3 … but that's just a preference. You can do it however you want.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>You might have accidentally typed in an advertising keyword by copying and paste my message,</p>\n</blockquote>\n<p>No, I mean that I had a tab open with half a reply written. I must have got distracted while writing it.</p>\n<blockquote>\n<p>But perhaps, because I am not familiar with</p>\n<ol>\n<li>FilterByNotAttribute</li>\n<li>ListCount</li>\n</ol>\n</blockquote>\n<p>The use of <code>FilterByNotAttribute</code> here is is a little weird. Basically, <code>FilterByNotAttribute (<em style=\"color: blue\">GetDirectChildren (game.pov.parent)</em>, \"<em style=\"color: green\">enemy</em>\", <em style=\"color: orange\">null</em>)</code> gives you an <em>objectlist</em> containing all objects in <em style=\"color: blue\">the current room</em> which have an <code style=\"color: green\">enemy</code> attribute with a value that isn't <code style=\"color: orange\">null</code>.</p>\n<p>More often, you would use <code>FilterByAttribute</code> to find an attribute with a specific value. However, because an attribute that doesn't exist has the special value <code>null</code>, that means that we can search for values that are not null to find objects that have a specific attribute. Does that make sense?</p>\n<p><code>ListCount</code> is much simpler - it tells you how many objects are in a list. In the example, we check if <code>ListCount</code> is greater than zero to make sure there are actually enemies in the list. In the example where we're looking for the first three enemies, it checks each time. So for example if there are 3 enemies present, <code>ListCount (game.enemyorder)</code> will be 3, and you can access the enemies by using <code>ListItem (game.enemyorder, 0)</code>, <code>ListItem (game.enemyorder, 1)</code>, and <code>ListItem (game.enemyorder, 2)</code>.</p>\n<p>Does that make sense? I'm not sure if you're used to working with lists like this.</p>\n<blockquote>\n<p>why is [...] faster than [...]</p>\n</blockquote>\n<p>It isn't really – it's doing the same thing, just storing the results differently.</p>\n<p>The difference is that your code stores a number in an attribute on each enemy. While mine stores a list of enemies in a single attribute.</p>\n<p>When you need to find the enemy in a given position, your code is looking at every object in the room again, checking them all to see if they have the right number; you have another loop. But my code just uses <code>ListItem</code> to extract the first enemy from the list.</p>\n<blockquote>\n<p>I was expecting this code to fail, as it sounds like it is deducting all enemies' hp, but when tested, it did only reduced the first enemy's hp, even though the coding works, I have no idea why</p>\n</blockquote>\n<p>It can't touch all enemies; it doesn't have a <code>foreach</code>.<br>\nIt has the line <code>enemy = ListItem (game.enemyorder, 0)</code> - which sets the <code>enemy</code> variable to be the first object in the list <code>game.enemyorder</code>.</p>\n<p>This is a lot faster than using <code>foreach</code>, because it only need to look at one object, not all of them.</p>\n<blockquote>\n<p>I know this code will work, but I can't visualize it so I am asking is the player able to change the order for the combat teammates' positions?<br>\nOr do I have to create an enter \"position number\" recorder for the player to manually adjust the allies position?</p>\n</blockquote>\n<p>I would probably allow the player to choose \"front\", \"middle\", or \"back\", and set the attribute to 1, 2, or 3 … but that's just a preference. You can do it however you want.</p>\n\n",
      "PostDate": "2024-08-17T09:23:26.2041315Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "79c61530-95f6-4a39-94a7-5e1e499b4ee9",
      "UserId": 31991,
      "Username": "daeun",
      "AvatarUrl": "https://i.imgur.com/Xvt8zzBb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> charlesdaven\r\n\r\nI apologize, you are a human",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>charlesdaven</p>\n</blockquote>\n<p>I apologize, you are a human</p>\n\n",
      "PostDate": "2024-08-22T06:46:36.2154977Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "59ae580d-9856-42a3-92c3-ea2081f40967",
      "UserId": 520558,
      "Username": "Jackson the Emperor",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You sound like a bot this time.",
      "EditableFormat": "markdown",
      "HTML": "<p>You sound like a bot this time.</p>\n\n",
      "PostDate": "2024-08-23T01:43:34.6061186Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
