{
  "Topic": {
    "TopicId": "4031",
    "ForumId": "10",
    "Title": "Return should terminate execution of a script",
    "LastUpdated": "2013-12-03T10:15:00+00:00",
    "ReplyCount": 5
  },
  "Posts": [
    {
      "PostId": "26979",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Often you want to test a series of conditions. I was looking at adding a &quot;select&quot; option to the text processor, and the if-else blocks quickly built up:\n\n[code:35aazxy6]if (not ListCount (objectandattlist) = 2) {\n  return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)\n}\nelse {\n  object = GetObject (StringListItem (objectandattlist, 0))\n  if (object = null) {\n    return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)\n  }\n  else if (not HasInt (object, StringListItem (objectandattlist, 1))) {\n    return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)\n  }\n  else {\n    index = GetInt(object, StringListItem (objectandattlist, 1))\n    if ((0 &gt; index) or (index &gt;= Listcount (elementslist))) {\n      return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)\n    }\n    else {\n      return (ProcessTextSection(ListItem(elementslist, index), data))\n    }\n  }\n}[/code:35aazxy6]\n\nHow much better would it be if return stopped execution? A series of steps when you test something at each point, and abort if it fails.\n\n[code:35aazxy6]if (not ListCount (objectandattlist) = 2) {\n  return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)\n}\n\nobject = GetObject (StringListItem (objectandattlist, 0))\nif (object = null) {\n  return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)\n}\n\nif (not HasInt (object, StringListItem (objectandattlist, 1))) {\n  return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)\n}\n\nindex = GetInt(object, StringListItem (objectandattlist, 1))\nif ((0 &gt; index) or (index &gt;= Listcount (elementslist))) {\n  return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)\n}\n\nreturn (ProcessTextSection(ListItem(elementslist, index), data))[/code:35aazxy6]\n\nThis is not some isolated example. Often I am writing a script for a command, and test a series of conditions to see if the command can be completed (is the object in the right place, etc.). If it fails a test, I just want the script to stop. What I end up with though, is a heavily nested maze of curly braces. Then I remember some other condition I need to test for. I should be able to add an extra few steps, but instead I am figuring out which if else goes with what, and indents blocks even more.\n\nI believe the latter format is far more readable, and far less error prone. Furthermore, it would then be consistent with every other language. What do others think? Does anyone every use return in a way that requires the script to continue to the end?",
      "EditableFormat": "bbcode",
      "HTML": "Often you want to test a series of conditions. I was looking at adding a &quot;select&quot; option to the text processor, and the if-else blocks quickly built up:<br/><br/><pre><code>if (not ListCount (objectandattlist) = 2) {<br/>  return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)<br/>}<br/>else {<br/>  object = GetObject (StringListItem (objectandattlist, 0))<br/>  if (object = null) {<br/>    return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)<br/>  }<br/>  else if (not HasInt (object, StringListItem (objectandattlist, 1))) {<br/>    return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)<br/>  }<br/>  else {<br/>    index = GetInt(object, StringListItem (objectandattlist, 1))<br/>    if ((0 &gt; index) or (index &gt;= Listcount (elementslist))) {<br/>      return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)<br/>    }<br/>    else {<br/>      return (ProcessTextSection(ListItem(elementslist, index), data))<br/>    }<br/>  }<br/>}</code></pre><br/><br/>How much better would it be if return stopped execution? A series of steps when you test something at each point, and abort if it fails.<br/><br/><pre><code>if (not ListCount (objectandattlist) = 2) {<br/>  return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)<br/>}<br/><br/>object = GetObject (StringListItem (objectandattlist, 0))<br/>if (object = null) {<br/>  return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)<br/>}<br/><br/>if (not HasInt (object, StringListItem (objectandattlist, 1))) {<br/>  return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)<br/>}<br/><br/>index = GetInt(object, StringListItem (objectandattlist, 1))<br/>if ((0 &gt; index) or (index &gt;= Listcount (elementslist))) {<br/>  return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)<br/>}<br/><br/>return (ProcessTextSection(ListItem(elementslist, index), data))</code></pre><br/><br/>This is not some isolated example. Often I am writing a script for a command, and test a series of conditions to see if the command can be completed (is the object in the right place, etc.). If it fails a test, I just want the script to stop. What I end up with though, is a heavily nested maze of curly braces. Then I remember some other condition I need to test for. I should be able to add an extra few steps, but instead I am figuring out which if else goes with what, and indents blocks even more.<br/><br/>I believe the latter format is far more readable, and far less error prone. Furthermore, it would then be consistent with every other language. What do others think? Does anyone every use return in a way that requires the script to continue to the end?",
      "PostDate": "2013-12-02T13:27:18+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26980",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "Check the new nigthly build of Q5.5!\n<!-- m --><a class=\"postlink\" href=\"http://quest.codeplex.com/workitem/1305\">http://quest.codeplex.com/workitem/1305</a><!-- m -->",
      "EditableFormat": "bbcode",
      "HTML": "Check the new nigthly build of Q5.5!<br/><!-- m --><a class=\"postlink\" href=\"http://quest.codeplex.com/workitem/1305\">http://quest.codeplex.com/workitem/1305</a><!-- m -->",
      "PostDate": "2013-12-02T13:38:50+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26981",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "I could be misinterpreting what you need here but isn't stuff like this better with switch and case statements? Or in the series of tests are you mutating state along the way and so a switch wouldn't work?",
      "EditableFormat": "bbcode",
      "HTML": "I could be misinterpreting what you need here but isn't stuff like this better with switch and case statements? Or in the series of tests are you mutating state along the way and so a switch wouldn't work?",
      "PostDate": "2013-12-02T16:01:45+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26984",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "A switch would not work. The first condition is based on the length of a list, then an assignment is made and the next bit depends on that, etc.",
      "EditableFormat": "bbcode",
      "HTML": "A switch would not work. The first condition is based on the length of a list, then an assignment is made and the next bit depends on that, etc.",
      "PostDate": "2013-12-02T22:23:40+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26989",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "So any idea when version 5.5 will be out? It looks like there are no outstanding items at CodePlex scheduled for it.",
      "EditableFormat": "bbcode",
      "HTML": "So any idea when version 5.5 will be out? It looks like there are no outstanding items at CodePlex scheduled for it.",
      "PostDate": "2013-12-03T07:59:46+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26990",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "There are a couple of other things on my list but I'll probably get around to releasing it as a beta in the next couple of weeks.",
      "EditableFormat": "bbcode",
      "HTML": "There are a couple of other things on my list but I'll probably get around to releasing it as a beta in the next couple of weeks.",
      "PostDate": "2013-12-03T10:15:00+00:00",
      "LastEditDate": null
    }
  ]
}
