{
  "Topic": {
    "TopicId": "5127",
    "ForumId": "10",
    "Title": "Display inventory in menu",
    "LastUpdated": "2015-03-27T09:23:16+00:00",
    "ReplyCount": 4
  },
  "Posts": [
    {
      "PostId": "35508",
      "UserId": 0,
      "Username": "Sir_Numybuns",
      "UserAvatar": null,
      "UserGravatar": "6db9deceb5b329a22ecf509eb03bce93",
      "EditableText": "Hey pplz, quick noob question, when using the display a menu command, how can i get it to display all the items the player is currently carrying? Thank you in advance for any responses",
      "EditableFormat": "bbcode",
      "HTML": "Hey pplz, quick noob question, when using the display a menu command, how can i get it to display all the items the player is currently carrying? Thank you in advance for any responses",
      "PostDate": "2015-03-26T06:03:43+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "35510",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "First of all, I hope you are happy using code. This link will tell you how to paste it into your game if not.\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4771\">viewtopic.php?f=18&amp;t=4771</a><!-- l -->\n\n[code:2zm0ux4m]// Lines starting with two slashes are comments so you know what is happening!\n// Get a list of the names of the objects held\n// Start from an empty list\nstring_list = NewStringList()\n// Loop through each item held, and add its name to the list\nforeach (obj, ScopeInventory()) {\n  // Add the name or alias to the list\n  list add (string_list, GetDisplayName(obj))\n}\n// Show the menu\nShowMenu (&quot;Pick an item&quot;, string_list, true) {\n  // The selection goes in a variable called &quot;result&quot;\n  // We have to search the inventory to find the object with that name\n  // so again we loop through it\n  foreach (obj, ScopeInventory()) {\n    // Does the name or alias match?\n    if (result = GetDisplayName(obj)) {\n      // Now we know the player picked whatever is in the obj variable\n      // we can do something with it\n      msg (&quot;You selected the &quot; + GetDisplayName(obj))\n    }\n  }\n}[/code:2zm0ux4m]",
      "EditableFormat": "bbcode",
      "HTML": "First of all, I hope you are happy using code. This link will tell you how to paste it into your game if not.<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4771\">viewtopic.php?f=18&amp;t=4771</a><!-- l --><br/><br/><pre><code>// Lines starting with two slashes are comments so you know what is happening!<br/>// Get a list of the names of the objects held<br/>// Start from an empty list<br/>string_list = NewStringList()<br/>// Loop through each item held, and add its name to the list<br/>foreach (obj, ScopeInventory()) {<br/>  // Add the name or alias to the list<br/>  list add (string_list, GetDisplayName(obj))<br/>}<br/>// Show the menu<br/>ShowMenu (&quot;Pick an item&quot;, string_list, true) {<br/>  // The selection goes in a variable called &quot;result&quot;<br/>  // We have to search the inventory to find the object with that name<br/>  // so again we loop through it<br/>  foreach (obj, ScopeInventory()) {<br/>    // Does the name or alias match?<br/>    if (result = GetDisplayName(obj)) {<br/>      // Now we know the player picked whatever is in the obj variable<br/>      // we can do something with it<br/>      msg (&quot;You selected the &quot; + GetDisplayName(obj))<br/>    }<br/>  }<br/>}</code></pre>",
      "PostDate": "2015-03-26T08:06:27+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "35515",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "You can also use the dictionary form of ShowMenu (mapping object to display name), which eliminates the need to find the object from the display name once chosen (and will work properly if multiple objects have the same display name, which shouldn't happen, but...). If you use the dictionary form, then the result will just be the desired object.",
      "EditableFormat": "bbcode",
      "HTML": "You can also use the dictionary form of ShowMenu (mapping object to display name), which eliminates the need to find the object from the display name once chosen (and will work properly if multiple objects have the same display name, which shouldn't happen, but...). If you use the dictionary form, then the result will just be the desired object.",
      "PostDate": "2015-03-26T12:09:44+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "35517",
      "UserId": 0,
      "Username": "Sir_Numybuns",
      "UserAvatar": null,
      "UserGravatar": "6db9deceb5b329a22ecf509eb03bce93",
      "EditableText": "Thanks, i got it working! my only problem is that it occasionally prints the same message twice after picking an option, but minor details...",
      "EditableFormat": "bbcode",
      "HTML": "Thanks, i got it working! my only problem is that it occasionally prints the same message twice after picking an option, but minor details...",
      "PostDate": "2015-03-26T15:07:37+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "35524",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;jaynabonne&quot;:qbvkf9vz]You can also use the dictionary form of ShowMenu (mapping object to display name), which eliminates the need to find the object from the display name once chosen (and will work properly if multiple objects have the same display name, which shouldn't happen, but...). If you use the dictionary form, then the result will just be the desired object.[/quote:qbvkf9vz]\nGood point, that is better:\n[code:qbvkf9vz]// Lines starting with two slashes are comments so you know what is happening!\n// Get a dictionary of the names of the objects held\n// Start from an empty dictionary\nstring_dict = NewStringDictionary()\n// Loop through each item held, and add its name and display name to the dictionary\nforeach (obj, ScopeInventory()) {\n  // Add to the dictionary\n  // the name is the key, the display name is the value\n  dictionary add (string_dict, obj&#46;name, GetDisplayName(obj))\n}\n// Show the menu (shows the values from the dictionary)\nShowMenu (&quot;Pick an item&quot;, string_dict, true) {\n  // The selection key goes in a variable called &quot;result&quot;\n  obj = GetObject(result)\n  // Do stuff weith it\n  msg (&quot;You selected the &quot; + GetDisplayName(obj))\n}[/code:qbvkf9vz]",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>You can also use the dictionary form of ShowMenu (mapping object to display name), which eliminates the need to find the object from the display name once chosen (and will work properly if multiple objects have the same display name, which shouldn't happen, but...). If you use the dictionary form, then the result will just be the desired object.</blockquote><br/>Good point, that is better:<br/><pre><code>// Lines starting with two slashes are comments so you know what is happening!<br/>// Get a dictionary of the names of the objects held<br/>// Start from an empty dictionary<br/>string_dict = NewStringDictionary()<br/>// Loop through each item held, and add its name and display name to the dictionary<br/>foreach (obj, ScopeInventory()) {<br/>  // Add to the dictionary<br/>  // the name is the key, the display name is the value<br/>  dictionary add (string_dict, obj&#46;name, GetDisplayName(obj))<br/>}<br/>// Show the menu (shows the values from the dictionary)<br/>ShowMenu (&quot;Pick an item&quot;, string_dict, true) {<br/>  // The selection key goes in a variable called &quot;result&quot;<br/>  obj = GetObject(result)<br/>  // Do stuff weith it<br/>  msg (&quot;You selected the &quot; + GetDisplayName(obj))<br/>}</code></pre>",
      "PostDate": "2015-03-27T09:23:16+00:00",
      "LastEditDate": null
    }
  ]
}
