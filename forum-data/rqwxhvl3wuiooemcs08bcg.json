{
  "Topic": {
    "TopicId": "rqwxhvl3wuiooemcs08bcg",
    "ForumId": "10",
    "Title": "Nesting Objects",
    "LastUpdated": "2016-11-22T03:31:54.64847Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "71a92c95-fbaa-464f-9569-cda217835651",
      "UserId": 277720,
      "Username": "creakinator",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6a7377939ce069bbf1fd6265d8835556?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I came across this system yesterday and started to experiment with it.  I started to build a 'farm' starting with the farmhouse and, of course, it would have the other items on a farm - barn, fields, etc.  \r\n\r\nIn creating the house, how should I 'nest' the objects, ie, the large items (Building) and the rooms in them. Since I'm going to have different objects with different rooms, should I do it like this under Objects (-> means and indent):\r\nFarmhouse\r\n-> kitchen\r\n-> living room\r\n-> bedroom\r\nFields\r\n-> corn\r\n-> wheat\r\nBarn\r\n\r\nor \r\nliving room\r\nbedroom\r\nkitchen\r\nbarn\r\ncorn field\r\nwheat field\r\n\r\nI understand that items in a room (kitchen would contain a table, refrigerator, stove) and these items would be contained in that room.  Would it make sense that a house would contain the different rooms inside it?  I don't know enough about this game to know if this nesting would cause me issues later and have a 'flat' (like in my second example) would be better for the house example.\r\n\r\nThanks for your help.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I came across this system yesterday and started to experiment with it.  I started to build a 'farm' starting with the farmhouse and, of course, it would have the other items on a farm - barn, fields, etc.</p>\n<p>In creating the house, how should I 'nest' the objects, ie, the large items (Building) and the rooms in them. Since I'm going to have different objects with different rooms, should I do it like this under Objects (-&gt; means and indent):<br>\nFarmhouse<br>\n-&gt; kitchen<br>\n-&gt; living room<br>\n-&gt; bedroom<br>\nFields<br>\n-&gt; corn<br>\n-&gt; wheat<br>\nBarn</p>\n<p>or<br>\nliving room<br>\nbedroom<br>\nkitchen<br>\nbarn<br>\ncorn field<br>\nwheat field</p>\n<p>I understand that items in a room (kitchen would contain a table, refrigerator, stove) and these items would be contained in that room.  Would it make sense that a house would contain the different rooms inside it?  I don't know enough about this game to know if this nesting would cause me issues later and have a 'flat' (like in my second example) would be better for the house example.</p>\n<p>Thanks for your help.</p>\n\n",
      "PostDate": "2016-11-22T03:31:54.64847Z",
      "LastEditDate": null
    },
    {
      "PostId": "02ca5528-0c07-4869-8848-905094d3f180",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I would not try and put rooms inside of rooms or rooms inside 'buildings'.  Doing so would cause my head to explode trying to track and map exits and such.  Each room should be a separate entity with exits to other rooms..  The objects for each room should be in that room parent.  If I understand you correctly the nesting should be like this:\r\n\r\nFarmhouse\r\nKitchen (children = stove, fridge, cabinet, etc)\r\nLiving Room (children = sofa, table, tv, rug, etc)\r\netc, etc, etc.",
      "EditableFormat": "markdown",
      "HTML": "<p>I would not try and put rooms inside of rooms or rooms inside 'buildings'.  Doing so would cause my head to explode trying to track and map exits and such.  Each room should be a separate entity with exits to other rooms..  The objects for each room should be in that room parent.  If I understand you correctly the nesting should be like this:</p>\n<p>Farmhouse<br>\nKitchen (children = stove, fridge, cabinet, etc)<br>\nLiving Room (children = sofa, table, tv, rug, etc)<br>\netc, etc, etc.</p>\n\n",
      "PostDate": "2016-11-22T04:26:20.025096Z",
      "LastEditDate": null
    },
    {
      "PostId": "2c6c65d9-e188-472e-b508-546a775ef2a2",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "aside of how the map/grid works, there's only two things that I know of that effects game play (impacts the person playing the game):\r\n\r\n1. containment: 'movement' is actually determined by the 'parent' Object Attribute and/or using Exits (which may underneath also use the 'parent' Object Attribute or not --- no idea how Exits work)\r\n\r\n2. displayment (the default UI shows nested/sub/child Objects)\r\n\r\nthus, how you organize/nest Objects (in-code / GUI~Editor) is entirely for your own organization as game maker, aside from how the grid/map works and with dealing with displayment (I'm sure you can control what gets displayed), as movement is done by Exits and/or the 'parent' Object Attribute, which are completely independant of how your organize/nest your Objects.\r\n\r\nA parent/root/super Object can either be visitable by the person playing the game, or not (it simply being for your internal organization as game maker).\r\n\r\nUsing your example, your 'farmhouse/field/barn' Objects can either be visitable room objects by the person playing the game or not (it just acts as an organizational group/category/section placeholder for its member/sub/child room objects -- these which are actually visited by the person playing the game, but not the parent/root Object as organizational placeholder for them)\r\n\r\n---------\r\n\r\nI would personally have your Objects be organized for your own sanity (as well as having a good naming/labeling system/convention too), you can decide on whether these Objects are actually visited by the person playing the game or not, depending on how you want to go about designing this aspect of your game.",
      "EditableFormat": "markdown",
      "HTML": "<p>aside of how the map/grid works, there's only two things that I know of that effects game play (impacts the person playing the game):</p>\n<ol>\n<li>\n<p>containment: 'movement' is actually determined by the 'parent' Object Attribute and/or using Exits (which may underneath also use the 'parent' Object Attribute or not --- no idea how Exits work)</p>\n</li>\n<li>\n<p>displayment (the default UI shows nested/sub/child Objects)</p>\n</li>\n</ol>\n<p>thus, how you organize/nest Objects (in-code / GUI~Editor) is entirely for your own organization as game maker, aside from how the grid/map works and with dealing with displayment (I'm sure you can control what gets displayed), as movement is done by Exits and/or the 'parent' Object Attribute, which are completely independant of how your organize/nest your Objects.</p>\n<p>A parent/root/super Object can either be visitable by the person playing the game, or not (it simply being for your internal organization as game maker).</p>\n<p>Using your example, your 'farmhouse/field/barn' Objects can either be visitable room objects by the person playing the game or not (it just acts as an organizational group/category/section placeholder for its member/sub/child room objects -- these which are actually visited by the person playing the game, but not the parent/root Object as organizational placeholder for them)</p>\n<hr>\n<p>I would personally have your Objects be organized for your own sanity (as well as having a good naming/labeling system/convention too), you can decide on whether these Objects are actually visited by the person playing the game or not, depending on how you want to go about designing this aspect of your game.</p>\n\n",
      "PostDate": "2016-11-22T06:30:10.1270088Z",
      "LastEditDate": "2016-11-22T06:39:57.1704267Z"
    }
  ]
}
