{
  "Topic": {
    "TopicId": "gjczlze6lugklfvgsaeduq",
    "ForumId": "10",
    "Title": "Wait Issue with Game Panes",
    "LastUpdated": "2019-06-08T12:12:55.2347896Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "415d75dc-be80-4cf1-9fe3-95cef839a282",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've had problems with the use of 'wait' before but usually in complex situations. Here is a simple case that may help detect an underlying problem. Failing that, can anyone suggest a workaround?\r\n\r\nThe code is so simple I've given it completely below. In essence, there is an item in a room which when looked at executes:\r\n```\r\nmsg (\"Blah!\")\r\nwait {\r\n  msg (\"Blah!\")\r\n}\r\n``` \r\nTo trigger the problem select 'look at' for the item in the game pane, and then hit the space bar or return when 'continue' appears. The error message is \"_Error running script: Only one wait can be in progress at a time._\" Clicking on 'continue' is okay, as is accessing the item in the main window or typing commands?\r\n```\r\n<!--Saved by Quest 5.8.6809.15141-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Wait Problem\">\r\n    <gameid>12459b48-c2d3-42a6-a10c-7c05a49b46da</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2019</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"item\">\r\n      <inherit name=\"editor_object\" />\r\n      <look type=\"script\">\r\n        msg (\"Blah!\")\r\n        wait {\r\n          msg (\"Blah!\")\r\n        }\r\n      </look>\r\n    </object>\r\n  </object>\r\n</asl>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I've had problems with the use of 'wait' before but usually in complex situations. Here is a simple case that may help detect an underlying problem. Failing that, can anyone suggest a workaround?</p>\n<p>The code is so simple I've given it completely below. In essence, there is an item in a room which when looked at executes:</p>\n<pre><code>msg (\"Blah!\")\nwait {\n  msg (\"Blah!\")\n}\n</code></pre>\n<p>To trigger the problem select 'look at' for the item in the game pane, and then hit the space bar or return when 'continue' appears. The error message is \"<em>Error running script: Only one wait can be in progress at a time.</em>\" Clicking on 'continue' is okay, as is accessing the item in the main window or typing commands?</p>\n<pre><code>&lt;!--Saved by Quest 5.8.6809.15141--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Wait Problem\"&gt;\n    &lt;gameid&gt;12459b48-c2d3-42a6-a10c-7c05a49b46da&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2019&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"item\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;look type=\"script\"&gt;\n        msg (\"Blah!\")\n        wait {\n          msg (\"Blah!\")\n        }\n      &lt;/look&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2019-06-08T12:12:55.2347896Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "76370a48-04fa-4015-b3f1-998c4b27ac5c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I assume that after you clicked the pane command button, it still has focus, so further keypresses trigger it again rather than cascading normally.\r\n\r\nOne possible solution:\r\n<pre><code>function paneButtonClick(target, button) {\r\n    <b style=\"color: purple\">if (_waitMode) return false;</b>\r\n    var selectedListItem = $(target + \" .ui-selected\");\r\n    var selectedObject = selectedListItem.text();\r\n    var selectedElementId = selectedListItem.data(\"elementid\");\r\n    var selectedElementName = selectedListItem.data(\"elementname\");\r\n    var verb = button.data(\"verb\");\r\n    var metadata = new Object();\r\n    metadata[selectedElementName] = selectedElementId;\r\n    var metadataString = JSON.stringify(metadata);\r\n\r\n    if (selectedObject.length > 0) {\r\n        var cmd = verb.toLowerCase() + \" \" + selectedElementName;\r\n        sendCommand(cmd, metadataString);\r\n    }\r\n}</code></pre>\r\n\r\n(though this may confuse the player, as they press a key and nothing happens)\r\n\r\nOr you could make sure that the focus is in a sensible place by changing:\r\n<pre><code>function beginWait() {\r\n    _waitMode = true;\r\n    $(\"#txtCommand\").hide();\r\n    $(\"#endWaitLink\").show()<b style=\"color: purple\">.focus()</b>;\r\n    markScrollPosition();\r\n}</code></pre>\r\n\r\n(3 functions copied from playercore.js; my changes to them highlighted in each case. Top of my head, not tested, usual disclaimer)",
      "EditableFormat": "markdown",
      "HTML": "<p>I assume that after you clicked the pane command button, it still has focus, so further keypresses trigger it again rather than cascading normally.</p>\n<p>One possible solution:</p>\n<pre><code>function paneButtonClick(target, button) {\n    <b style=\"color: purple\">if (_waitMode) return false;</b>\n    var selectedListItem = $(target + \" .ui-selected\");\n    var selectedObject = selectedListItem.text();\n    var selectedElementId = selectedListItem.data(\"elementid\");\n    var selectedElementName = selectedListItem.data(\"elementname\");\n    var verb = button.data(\"verb\");\n    var metadata = new Object();\n    metadata[selectedElementName] = selectedElementId;\n    var metadataString = JSON.stringify(metadata);\n\n    if (selectedObject.length &gt; 0) {\n        var cmd = verb.toLowerCase() + \" \" + selectedElementName;\n        sendCommand(cmd, metadataString);\n    }\n}</code></pre>\n<p>(though this may confuse the player, as they press a key and nothing happens)</p>\n<p>Or you could make sure that the focus is in a sensible place by changing:</p>\n<pre><code>function beginWait() {\n    _waitMode = true;\n    $(\"#txtCommand\").hide();\n    $(\"#endWaitLink\").show()<b style=\"color: purple\">.focus()</b>;\n    markScrollPosition();\n}</code></pre>\n<p>(3 functions copied from playercore.js; my changes to them highlighted in each case. Top of my head, not tested, usual disclaimer)</p>\n\n",
      "PostDate": "2019-06-08T12:54:23.107663Z",
      "LastEditDate": "2019-06-08T14:09:09.0571218Z",
      "link": null
    },
    {
      "PostId": "bf022380-0c65-44a8-8b5c-a647b47ddec0",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Many thanks mrangel, but after posting I tried using the fix provided previously for a nested wait problem (https://textadventures.co.uk/forum/quest/topic/fi7rs8pxxkmfgb6z2xk5eg/unexpected-error-messages-with-nested-wait) , and that seems to solve the problem as well!\r\n\r\nThe code provided by K.V. at the end of that discussion (as an insert to initusinterface) was:\r\n```\r\n// Apply WAIT fix\r\nJS.eval(\"$(window).on('keydown',function(e){     if(_waitMode){     \tendWait();     \te.preventDefault();     \te.stopPropagation();     } });  $('#divOutuput').on('click',function(e){     if(_waitMode){     \tendWait();     \te.preventDefault();     \te.stopPropagation();     } });\")\r\n```\r\nI think I'll just put this code into all games I work on!! Sorry for not thinking of this earlier.",
      "EditableFormat": "markdown",
      "HTML": "<p>Many thanks mrangel, but after posting I tried using the fix provided previously for a nested wait problem (https://textadventures.co.uk/forum/quest/topic/fi7rs8pxxkmfgb6z2xk5eg/unexpected-error-messages-with-nested-wait) , and that seems to solve the problem as well!</p>\n<p>The code provided by K.V. at the end of that discussion (as an insert to initusinterface) was:</p>\n<pre><code>// Apply WAIT fix\nJS.eval(\"$(window).on('keydown',function(e){     if(_waitMode){     \tendWait();     \te.preventDefault();     \te.stopPropagation();     } });  $('#divOutuput').on('click',function(e){     if(_waitMode){     \tendWait();     \te.preventDefault();     \te.stopPropagation();     } });\")\n</code></pre>\n<p>I think I'll just put this code into all games I work on!! Sorry for not thinking of this earlier.</p>\n\n",
      "PostDate": "2019-06-08T17:39:19.4647637Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
