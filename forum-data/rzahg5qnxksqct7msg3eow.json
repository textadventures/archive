{
  "Topic": {
    "TopicId": "rzahg5qnxksqct7msg3eow",
    "ForumId": "24",
    "Title": "[SOLVED] Squiffy Editor Won't Open (Desktop Version - on Linux)",
    "LastUpdated": "2021-04-14T01:23:53.3199797Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "c58cbf9d-660b-4b9f-9e06-dd4aac871e84",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here all the nasty details: https://gist.github.com/KVonGit/46dd2928aea6066c3d9fab3655677956\r\n\r\nTo summarize, though:\r\n\r\n1. I have to use **node-js** v10.19.0 to build the Squiffy editor from source code.\r\n2. After that, it builds -- but won't run because I'm missing **libgconf**.  So, I built that and installed it, and ...\r\n3. I get a **PANGO** error, saying my ```Harfbuzz is too old (1.4.2)```.  \r\n\r\n![image](https://user-images.githubusercontent.com/30656341/114644551-57193380-9c9d-11eb-8377-a12e087fe59d.png)\r\n\r\n---\r\n\r\nAnd that is where I'm stuck.\r\n\r\nAlso, for the record, I tried to run the current release as well as my previous build of Squiffy which used to work on Arch Linux just a few months ago before I decided building it from the current source code might help. I had the same problems with **libgconf** and **Harfbuzz**.)\r\n\r\nFunny thing is, my harfbuzz version is 2.8.0-1; so I am thoroughly confused.\r\n\r\nAnyone have any ideas or insight?\r\n\r\n---\r\nI'm going to try it on Linux Mint (which sorta kinda might as well be Ubuntu).  Maybe Arch Linux has just gotten too far ahead of everyone else, as Arch is prone to do.",
      "EditableFormat": "markdown",
      "HTML": "<p>Here all the nasty details: https://gist.github.com/KVonGit/46dd2928aea6066c3d9fab3655677956</p>\n<p>To summarize, though:</p>\n<ol>\n<li>I have to use <strong>node-js</strong> v10.19.0 to build the Squiffy editor from source code.</li>\n<li>After that, it builds -- but won't run because I'm missing <strong>libgconf</strong>.  So, I built that and installed it, and ...</li>\n<li>I get a <strong>PANGO</strong> error, saying my <code>Harfbuzz is too old (1.4.2)</code>.</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/114644551-57193380-9c9d-11eb-8377-a12e087fe59d.png\" alt=\"image\"></p>\n<hr>\n<p>And that is where I'm stuck.</p>\n<p>Also, for the record, I tried to run the current release as well as my previous build of Squiffy which used to work on Arch Linux just a few months ago before I decided building it from the current source code might help. I had the same problems with <strong>libgconf</strong> and <strong>Harfbuzz</strong>.)</p>\n<p>Funny thing is, my harfbuzz version is 2.8.0-1; so I am thoroughly confused.</p>\n<p>Anyone have any ideas or insight?</p>\n<hr>\n<p>I'm going to try it on Linux Mint (which sorta kinda might as well be Ubuntu).  Maybe Arch Linux has just gotten too far ahead of everyone else, as Arch is prone to do.</p>\n\n",
      "PostDate": "2021-04-14T01:23:53.3199797Z",
      "LastEditDate": "2021-04-14T18:45:12.7096524Z",
      "link": null
    },
    {
      "PostId": "df7d0ca4-07dc-462f-a28d-6b3830dbf7ef",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I get the same end result on Linux Mint -- \"Harfbuzz too old\".\r\n\r\nIt wasn't as hard to build it on Linux Mint, though.  On Linux Mint, the \"current\" version **node-js** is version 10.19.0, and it built the editor with no errors.  I had to use ```apt``` to install **libgconf-2-4** to get past that error, though.  And I am finally stuck at the Harfbuzz error.\r\n\r\nI entered **npm run-script web** to run it in my browser on Linux Mint and on Arch Linux, and it loaded, but it wouldn't Run a game.  I got an error concerning ```msgs``` being undefined.\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/114644191-a7dc5c80-9c9c-11eb-98f7-8f1a703b9c2b.png)",
      "EditableFormat": "markdown",
      "HTML": "<p>I get the same end result on Linux Mint -- \"Harfbuzz too old\".</p>\n<p>It wasn't as hard to build it on Linux Mint, though.  On Linux Mint, the \"current\" version <strong>node-js</strong> is version 10.19.0, and it built the editor with no errors.  I had to use <code>apt</code> to install <strong>libgconf-2-4</strong> to get past that error, though.  And I am finally stuck at the Harfbuzz error.</p>\n<p>I entered <strong>npm run-script web</strong> to run it in my browser on Linux Mint and on Arch Linux, and it loaded, but it wouldn't Run a game.  I got an error concerning <code>msgs</code> being undefined.</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/114644191-a7dc5c80-9c9c-11eb-98f7-8f1a703b9c2b.png\" alt=\"image\"></p>\n\n",
      "PostDate": "2021-04-14T02:14:17.6858405Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2fa9060a-d917-4e87-8035-32670d9010cd",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "On Windows 10, I get this when I use the current version of node-js (14.16.0):\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/114650090-3e158000-9ca7-11eb-993c-1ea333beb577.png)\r\n\r\n---\r\n...but...\r\n\r\n I can use ```nvm use 11.15.0```, and build it with **node-js** v11.15.0.  (This is the newest version that doesn't throw the \"primordials\" error, after trial and error.)\r\n\r\nAfter I ran ```gulp windows```, the editor opened, but everything was just blank.\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/114650405-d0b61f00-9ca7-11eb-9b7c-78a6e27f2b10.png)\r\n\r\n---\r\nI opened the DevTools and saw an error that **jquery** was missing from the app's \"node_modules\" folder.\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/114650509-fc390980-9ca7-11eb-9090-81eb924f9c86.png)\r\n\r\n---\r\nSo, I copied the \"jquery\" folder from \"squiffy-editor\\bower_components\\\" to \"squiffy-editor\\Squiffy-win32-ia32\\resources\\app\\node_modules\\\", and now it runs and everything seems to work correctly on Windows 10.\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/114650603-28548a80-9ca8-11eb-9aa7-d47ab9677381.png)\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>On Windows 10, I get this when I use the current version of node-js (14.16.0):</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/114650090-3e158000-9ca7-11eb-993c-1ea333beb577.png\" alt=\"image\"></p>\n<hr>\n<p>...but...</p>\n<p>I can use <code>nvm use 11.15.0</code>, and build it with <strong>node-js</strong> v11.15.0.  (This is the newest version that doesn't throw the \"primordials\" error, after trial and error.)</p>\n<p>After I ran <code>gulp windows</code>, the editor opened, but everything was just blank.</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/114650405-d0b61f00-9ca7-11eb-9b7c-78a6e27f2b10.png\" alt=\"image\"></p>\n<hr>\n<p>I opened the DevTools and saw an error that <strong>jquery</strong> was missing from the app's \"node_modules\" folder.</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/114650509-fc390980-9ca7-11eb-9090-81eb924f9c86.png\" alt=\"image\"></p>\n<hr>\n<p>So, I copied the \"jquery\" folder from \"squiffy-editor\\bower_components\" to \"squiffy-editor\\Squiffy-win32-ia32\\resources\\app\\node_modules\", and now it runs and everything seems to work correctly on Windows 10.</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/114650603-28548a80-9ca8-11eb-9aa7-d47ab9677381.png\" alt=\"image\"></p>\n\n",
      "PostDate": "2021-04-14T03:11:07.690054Z",
      "LastEditDate": "2021-04-14T03:34:50.1217893Z",
      "link": null
    },
    {
      "PostId": "ce2f01d2-4dd9-4e4a-ba84-0a5d01445566",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Back on Linux, I can enter ```npm start``` and it will open and work properly.\r\n\r\nBut I can run ```gulp linux``` and the build won't even open, throwing the the PANGO error concerning Harfbuzz.\r\n\r\nHrmm...  I know that I had to manually add the jquery folder to the Windows build . . .\r\n\r\nWait . . .\r\n\r\nNope.  I added the \"jquery\" directory to the Linux build (and it *was* missing), but I still get the Harfbuzz crap.\r\n\r\nSomething else has to be missing.  Meaning there has to be something that needs to be included in the build that handles something concerning Pango and Harfbuzz, and that something has to be in the main directory -- because that something has to be there for ```npm start``` to successfully run the Squiffy editor.  Right?\r\n\r\nWhat am I missing?\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Back on Linux, I can enter <code>npm start</code> and it will open and work properly.</p>\n<p>But I can run <code>gulp linux</code> and the build won't even open, throwing the the PANGO error concerning Harfbuzz.</p>\n<p>Hrmm...  I know that I had to manually add the jquery folder to the Windows build . . .</p>\n<p>Wait . . .</p>\n<p>Nope.  I added the \"jquery\" directory to the Linux build (and it <em>was</em> missing), but I still get the Harfbuzz crap.</p>\n<p>Something else has to be missing.  Meaning there has to be something that needs to be included in the build that handles something concerning Pango and Harfbuzz, and that something has to be in the main directory -- because that something has to be there for <code>npm start</code> to successfully run the Squiffy editor.  Right?</p>\n<p>What am I missing?</p>\n\n",
      "PostDate": "2021-04-14T16:55:16.0502122Z",
      "LastEditDate": "2021-04-14T16:55:47.2914164Z",
      "link": null
    },
    {
      "PostId": "cf725f99-4ed8-4a51-8e58-bf06d1ab9e3a",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Alright!\r\n\r\nOn Linux, open the **gulpfile.js** file in a text editor, and on line 11, change the ```electronVersion``` value from \"1.8.1\" to \"4.2.12\".\r\n\r\nIt seems the Electron people fixed this issue with version 4.2.x.  (see: https://github.com/electron/electron/issues/20348#issuecomment-538490939)\r\n\r\nAfter that, ```gulp linux``` will build a Squiffy editor that will open!  Hurray!  Well... you still have to copy the \"jquery\" directory from \"bower_components/\" to \"Squiffy-linux-x64/resources/app/node_modules/\", but it works after that!\r\n\r\n---\r\nOn Arch Linux, I *do* get a Fontconfig warning:\r\n\r\n```zsh\r\nFontconfig warning: \"/usr/share/fontconfig/conf.avail/05-reset-dirs-sample.conf\", line 6: unknown element \"reset-dirs\"\r\n```\r\n\r\n...but it still works, and I don't see any font issues (although I haven't really tested things out, as far as fonts are concerned).\r\n\r\n---\r\n### NOTE\r\n\r\nI also changed the Electron version in the \"package.json\" file to \"~4.2.12\", but you have to change the version in \"gulpfile.js\" for it to change which version of Electron is used in the build.",
      "EditableFormat": "markdown",
      "HTML": "<p>Alright!</p>\n<p>On Linux, open the <strong>gulpfile.js</strong> file in a text editor, and on line 11, change the <code>electronVersion</code> value from \"1.8.1\" to \"4.2.12\".</p>\n<p>It seems the Electron people fixed this issue with version 4.2.x.  (see: https://github.com/electron/electron/issues/20348#issuecomment-538490939)</p>\n<p>After that, <code>gulp linux</code> will build a Squiffy editor that will open!  Hurray!  Well... you still have to copy the \"jquery\" directory from \"bower_components/\" to \"Squiffy-linux-x64/resources/app/node_modules/\", but it works after that!</p>\n<hr>\n<p>On Arch Linux, I <em>do</em> get a Fontconfig warning:</p>\n<pre><code>Fontconfig warning: \"/usr/share/fontconfig/conf.avail/05-reset-dirs-sample.conf\", line 6: unknown element \"reset-dirs\"\n</code></pre>\n<p>...but it still works, and I don't see any font issues (although I haven't really tested things out, as far as fonts are concerned).</p>\n<hr>\n<h3>NOTE</h3>\n<p>I also changed the Electron version in the \"package.json\" file to \"~4.2.12\", but you have to change the version in \"gulpfile.js\" for it to change which version of Electron is used in the build.</p>\n\n",
      "PostDate": "2021-04-14T18:43:21.0287084Z",
      "LastEditDate": "2021-04-14T18:44:54.5647208Z",
      "link": null
    },
    {
      "PostId": "0874737a-6726-4671-95e4-97275b4e70d4",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "On Linux Mint (sorta kinda basically pretty much the same as Ubuntu), I can follow the same steps as on Arch Linux.\r\n\r\nIn gulpfile.js, I change the ```electronVersion``` variable's value from \"1.8.1\" to \"4.2.12\", and in package.json, I changed the Electron version to \"~4.2.12\". \r\n\r\nThose are the only two changes I made to files.\r\n\r\nAfter building with ```gulp linux```, I have to copy the \"jquery\" directory from \"bower_components\" to \"resources/app/node_modules/\".\r\n\r\nAfter those three extra steps, the build will run on Linux Mint.\r\n\r\n---\r\nNOTE 1: Linux Mint is currently using node-js version 10.19.0.\r\n\r\nNOTE 2: Any version of node-js up to 11.15.0 seems to work with the Squiffy editor, but any version more recent than that will throw the error concerning \"primordials\".",
      "EditableFormat": "markdown",
      "HTML": "<p>On Linux Mint (sorta kinda basically pretty much the same as Ubuntu), I can follow the same steps as on Arch Linux.</p>\n<p>In gulpfile.js, I change the <code>electronVersion</code> variable's value from \"1.8.1\" to \"4.2.12\", and in package.json, I changed the Electron version to \"~4.2.12\".</p>\n<p>Those are the only two changes I made to files.</p>\n<p>After building with <code>gulp linux</code>, I have to copy the \"jquery\" directory from \"bower_components\" to \"resources/app/node_modules/\".</p>\n<p>After those three extra steps, the build will run on Linux Mint.</p>\n<hr>\n<p>NOTE 1: Linux Mint is currently using node-js version 10.19.0.</p>\n<p>NOTE 2: Any version of node-js up to 11.15.0 seems to work with the Squiffy editor, but any version more recent than that will throw the error concerning \"primordials\".</p>\n\n",
      "PostDate": "2021-04-14T19:47:55.5412321Z",
      "LastEditDate": "2021-04-14T19:48:22.7126219Z",
      "link": null
    },
    {
      "PostId": "bf6921e1-6190-4802-bbed-e69b9d270569",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Upgrading Electron to version 4.2.12 in both **gulpfile.js** and **package.json** seems to be a good idea.\r\n\r\nI've downloaded the squiffy-editor repo, made those changes, and successfully built a working Squiffy editor in Windows 10, Arch Linux, and Linux Mint.\r\n\r\nI have to add the \"jquery\" directory to \"resources/app/node_modules\" to the build after it builds, no matter what OS I'm using.\r\n\r\nAfter that, though, the Squiffy editor works on every OS I have to test it with.\r\n\r\n---\r\nIf someone has a Mac and **nvm**, **node-js**, and **npm** installed, can you (please) try to build the Squiffy editor after making these changes?\r\n\r\nhttps://github.com/textadventures/squiffy-editor\r\n\r\n1. Clone the repo.\r\n2. In the file **gulpfile.js**, line 11 sets the variable ```electronVersion``` to \"1.8.1\".  Change that to \"4.2.12\".\r\n3. In the file **package.json**, line 18 sets the Electron version to \"^1.8.1\".  Change that to \"~4.2.12\".\r\n4. Make sure the version of node-js you are currently using is **11.15.0** or lower. (To check, ```node --version```.)\r\n5. Follow the normal instructions.\r\n- Make sure you have **bower** and **gulp-cli** installed. (To check, ```bower --version``` and ```gulp --version```. If not installed, ```npm i bower -g``` and/or ```npm i gulp-cli -g```, depending on which you need to install.  NOTE that you *might* need to run this as ```sudo```, but not if you are using **nvm** to install **node-js**.\r\n- From the \"squiffy-editor\" directory, run ```npm install```.\r\n- From the \"squiffy-editor\" directory, run ```bower install```.\r\n- From the \"squiffy-editor\" directory, run ```gulp osx```.\r\n\r\nAfter that, I presume you will have a new directory: **Squiffy-darwin-x64\\\\**.\r\n\r\nIn that directory, I think you'll find \"resources/app/node_modules/\".  You will need to copy the \"jquery\" directory from \"squiffy-editor/bower_components/\" into \"squiffy-editor/Squiffy-darwin-x64/resources/app/node_modules\".  In Linux (which I think is pretty much like this works on a Mac), I do that from the command line by running this command from the \"squiffy-editor\" directory: ```cp -R bower_components/jquery Squiffy-darwin-x64/resources/app/node_modules/```\r\n\r\nI *think* that's how it works on a Mac, too, but, if you make it that far, surely you don't need my help to copy a directory anyway, now that I think about it.  :)\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Upgrading Electron to version 4.2.12 in both <strong>gulpfile.js</strong> and <strong>package.json</strong> seems to be a good idea.</p>\n<p>I've downloaded the squiffy-editor repo, made those changes, and successfully built a working Squiffy editor in Windows 10, Arch Linux, and Linux Mint.</p>\n<p>I have to add the \"jquery\" directory to \"resources/app/node_modules\" to the build after it builds, no matter what OS I'm using.</p>\n<p>After that, though, the Squiffy editor works on every OS I have to test it with.</p>\n<hr>\n<p>If someone has a Mac and <strong>nvm</strong>, <strong>node-js</strong>, and <strong>npm</strong> installed, can you (please) try to build the Squiffy editor after making these changes?</p>\n<p>https://github.com/textadventures/squiffy-editor</p>\n<ol>\n<li>Clone the repo.</li>\n<li>In the file <strong>gulpfile.js</strong>, line 11 sets the variable <code>electronVersion</code> to \"1.8.1\".  Change that to \"4.2.12\".</li>\n<li>In the file <strong>package.json</strong>, line 18 sets the Electron version to \"^1.8.1\".  Change that to \"~4.2.12\".</li>\n<li>Make sure the version of node-js you are currently using is <strong>11.15.0</strong> or lower. (To check, <code>node --version</code>.)</li>\n<li>Follow the normal instructions.</li>\n</ol>\n<ul>\n<li>Make sure you have <strong>bower</strong> and <strong>gulp-cli</strong> installed. (To check, <code>bower --version</code> and <code>gulp --version</code>. If not installed, <code>npm i bower -g</code> and/or <code>npm i gulp-cli -g</code>, depending on which you need to install.  NOTE that you <em>might</em> need to run this as <code>sudo</code>, but not if you are using <strong>nvm</strong> to install <strong>node-js</strong>.</li>\n<li>From the \"squiffy-editor\" directory, run <code>npm install</code>.</li>\n<li>From the \"squiffy-editor\" directory, run <code>bower install</code>.</li>\n<li>From the \"squiffy-editor\" directory, run <code>gulp osx</code>.</li>\n</ul>\n<p>After that, I presume you will have a new directory: <strong>Squiffy-darwin-x64\\</strong>.</p>\n<p>In that directory, I think you'll find \"resources/app/node_modules/\".  You will need to copy the \"jquery\" directory from \"squiffy-editor/bower_components/\" into \"squiffy-editor/Squiffy-darwin-x64/resources/app/node_modules\".  In Linux (which I think is pretty much like this works on a Mac), I do that from the command line by running this command from the \"squiffy-editor\" directory: <code>cp -R bower_components/jquery Squiffy-darwin-x64/resources/app/node_modules/</code></p>\n<p>I <em>think</em> that's how it works on a Mac, too, but, if you make it that far, surely you don't need my help to copy a directory anyway, now that I think about it.  :)</p>\n\n",
      "PostDate": "2021-04-14T20:51:57.8199442Z",
      "LastEditDate": "2021-04-14T20:52:47.1116709Z",
      "link": null
    }
  ]
}
