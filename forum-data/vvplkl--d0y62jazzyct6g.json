{
  "Topic": {
    "TopicId": "vvplkl--d0y62jazzyct6g",
    "ForumId": "10",
    "Title": "Is there a way to set a maximum and a minimum for a attribute",
    "LastUpdated": "2021-03-12T05:34:38.7919018Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "118ca3bb-7616-49f8-82ad-32cead1645ea",
      "UserId": 528049,
      "Username": "Atokrad",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cf78b93345acd10a7319b23dee5e8655?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For an attribute like health is there a way to ensure that a player can't get more than the maximum intended amount of health but still be able to up that later in the game? For example, you can give the player 40 hitpoints but when they level up you can up that to 60 without letting the player go above either amount.",
      "EditableFormat": "markdown",
      "HTML": "<p>For an attribute like health is there a way to ensure that a player can't get more than the maximum intended amount of health but still be able to up that later in the game? For example, you can give the player 40 hitpoints but when they level up you can up that to 60 without letting the player go above either amount.</p>\n\n",
      "PostDate": "2021-03-12T05:34:38.7919018Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "519b381e-cf57-4402-81d5-1c02d1d85916",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The normal way to do this would be to have two attributes, `health` and `maxhealth`. Then you'd give `health` a *changescript* (which is actually just a script attribute named `changedhealth`). You'd make it something like:\r\n```\r\nif (this.health > this.maxhealth) {\r\n  this.health = this.maxhealth\r\n}\r\nelse if (this.health <= 0) {\r\n  // whatever code you want to use\r\n  // for telling the player they are dead or KO\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>The normal way to do this would be to have two attributes, <code>health</code> and <code>maxhealth</code>. Then you'd give <code>health</code> a <em>changescript</em> (which is actually just a script attribute named <code>changedhealth</code>). You'd make it something like:</p>\n<pre><code>if (this.health &gt; this.maxhealth) {\n  this.health = this.maxhealth\n}\nelse if (this.health &lt;= 0) {\n  // whatever code you want to use\n  // for telling the player they are dead or KO\n}\n</code></pre>\n\n",
      "PostDate": "2021-03-12T09:27:36.0665798Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b43639ee-bee6-47f0-9145-9a2037ca8854",
      "UserId": 528049,
      "Username": "Atokrad",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cf78b93345acd10a7319b23dee5e8655?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How would I sent the player to a room, I want to let a player have a save point in an area that can be changeable, I was thinking about using an attribute but I don't think that would work.",
      "EditableFormat": "markdown",
      "HTML": "<p>How would I sent the player to a room, I want to let a player have a save point in an area that can be changeable, I was thinking about using an attribute but I don't think that would work.</p>\n\n",
      "PostDate": "2021-03-13T00:23:10.7327524Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ed869495-e06c-4ca7-b140-b1b72f883e91",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you want to send them to a room, just move them to that room.\r\nThere's a built in function to do that:\r\n<pre><code>MovePlayer (<em style=\"color: blue; font-family:initial\">kitchen</em>)</code></pre>\r\nalthough that's actually the same as \r\n<pre><code>MoveObject (game.pov, <em style=\"color: blue; font-family:initial\">kitchen</em>)</code></pre>\r\nwhich is the same as\r\n<pre><code>game.pov.parent = <em style=\"color: blue; font-family:initial\">kitchen</em></code></pre>\r\n\r\n(the first one is obvious what it does when you read it, which is why that's the code the GUI creates. The last one is the most efficient, but might be harder to understand until you get used to it. `game.pov` is an attribute that contains the current player object)\r\n\r\nIf you want to send them to a different place each time, you can just store the room in an attribute. For example, when the player uses a save point, you would run the script:\r\n```\r\ngame.savepoint  = game.pov.parent\r\n```\r\nand then to go back there, you would use:\r\n```\r\ngame.pov.parent = game.savepoint\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>If you want to send them to a room, just move them to that room.<br>\nThere's a built in function to do that:</p>\n<pre><code>MovePlayer (<em style=\"color: blue; font-family: initial\">kitchen</em>)</code></pre>\n<p>although that's actually the same as</p>\n<pre><code>MoveObject (game.pov, <em style=\"color: blue; font-family: initial\">kitchen</em>)</code></pre>\n<p>which is the same as</p>\n<pre><code>game.pov.parent = <em style=\"color: blue; font-family: initial\">kitchen</em></code></pre>\n<p>(the first one is obvious what it does when you read it, which is why that's the code the GUI creates. The last one is the most efficient, but might be harder to understand until you get used to it. <code>game.pov</code> is an attribute that contains the current player object)</p>\n<p>If you want to send them to a different place each time, you can just store the room in an attribute. For example, when the player uses a save point, you would run the script:</p>\n<pre><code>game.savepoint  = game.pov.parent\n</code></pre>\n<p>and then to go back there, you would use:</p>\n<pre><code>game.pov.parent = game.savepoint\n</code></pre>\n\n",
      "PostDate": "2021-03-13T01:22:18.2600315Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
