{
  "Topic": {
    "TopicId": "1ikpy9nhpugqpyhajjzxmq",
    "ForumId": "18",
    "Title": "Pretty Inventory (and Places and Objects) Lists",
    "LastUpdated": "2018-05-21T02:11:27.7927162Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "6260aa1c-b212-4cf8-9cbf-247ca69c7670",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "# This can be done online or offline\r\n\r\n---\r\n# Desktop users can skip these steps and [download the library](https://gist.github.com/KVonGit/0abae33abf498e814771e335f29901f1/archive/191365b270fd1293b63bba9c9abc8bbae3337519.zip).\r\n\r\n---\r\n## Step 1\r\n\r\n### Enable the advanced scripts feature (if you haven't already done so).\r\n\r\n<a href=\"https://user-images.githubusercontent.com/30656341/40286792-e8148e74-5c6e-11e8-8bf9-4a737dc48089.png\"><img src=\"https://user-images.githubusercontent.com/30656341/40286792-e8148e74-5c6e-11e8-8bf9-4a737dc48089.png\"/></a>\r\n\r\n---\r\n## Step 2 \r\n\r\n### Add this to the \"User Interface Initialisation\" script in code view (under the 'Advanced Scripts' tab):\r\n\r\n```\r\nif (not game.timeelapsed = 0) {\r\n  UpdateContentsInLists\r\n}\r\n```\r\n\r\n\r\n\r\n---\r\n## Step 3 \r\n\r\n### Add this to the start script in code view:\r\n\r\n```\r\nUpdateContentsInLists\r\n```\r\n\r\n\r\n\r\n---\r\n## Step 4\r\n\r\n### Create a turn script (the name doesn't matter, just be sure to ENABLE it).  Put this for the script in code view:\r\n\r\n```\r\nUpdateContentsInLists\r\n```\r\n\r\n\r\n---\r\n## Step 5\r\n\r\n### Create a function named ```UpdateContentsInLists``` (no parameters nor return type), and put this for the script in code view:\r\n\r\n```\r\nforeach (o, ListExclude(ScopeVisible(),game.pov)) {\r\n  if (not HasAttribute(o, \"listalias\")) {\r\n    o.listalias = GetDisplayAlias(o)\r\n  }\r\n  o.listalias = Replace(o.listalias,\"&nbsp;\",\"\")\r\n  containers = ListExclude(ListParents(o), game.pov)\r\n  containers = ListExclude(containers, ListParents(game.pov))\r\n  foreach (c, containers) {\r\n    o.listalias = \"&nbsp;&nbsp;\" + o.listalias\r\n  }\r\n}\r\n```\r\n\r\n---\r\n## Step 6\r\n\r\n### Create a function named ```PrettyInventory``` (no parameters nor return type), and put this for the script in code view:\r\n```\r\nstuff = ScopeInventory()\r\nlist = \"\"\r\nint = 0\r\nforeach (o, stuff) {\r\n  int = int + 1\r\n  o.prettyalias = \"&nbsp;&nbsp;\" + GetDisplayNameLink(o, \"object\")\r\n  foreach (c, ListExclude(ListParents(o), game.pov)) {\r\n    if (ListContains (stuff, c)) {\r\n      o.prettyalias = \"&nbsp;&nbsp;\" + o.prettyalias\r\n    }\r\n  }\r\n  br = \"\"\r\n  if (int > 1) {\r\n    br = \"<br/>\"\r\n  }\r\n  list = list + br + o.prettyalias\r\n}\r\nmsg (\"You are carrying:\")\r\nmsg (list)\r\n```\r\n\r\n---\r\n## Step 7\r\n\r\n### Create an INVENTORY command\r\n\r\n1\\. Create a command named ```pretty_inventory_cmd```.\r\n\r\n2\\. **Set the pattern to 'Regular Expression'.**\r\n\r\n3\\. Put this for the pattern:  ```^i$|^inv$|^inventory$```\r\n\r\n4\\. Put this for the script in code view:\r\n```\r\nlist = FormatObjectList(Template(\"CarryingListHeader\"), game.pov, Template(\"And\"), \".\")\r\nif (list = \"\") {\r\n  msg (Template(\"NotCarryingAnything\"))\r\n}\r\nelse {\r\n  PrettyInventory\r\n}\r\n```\r\n\r\n---\r\n## CONCERNING SCENERY\r\n\r\nIf a scenery object is inside of any object which is in the player's inventory, the scenery object WILL BE DISPLAYED in the inventory pane, but...\r\n\r\nThere is no reason to fool around with scenery objects in containers. If something is scenery, it shouldn't be in the player's inventory (or inside of anything in the player's inventory).\r\n\r\nIf we want to hide something until a certain event has taken place, we need to set visible to false.\r\n\r\nIf we want something to exist just in case the player tries to interact with it, we need to make it scenery. (Sidenote: Once something set as scenery is directly taken, its scenery attribute is set to false.)\r\n\r\n---\r\n# Example Game\r\n\r\nhttp://textadventures.co.uk/games/view/tc6_kfxsteafa-ecf7sqew/pretty-lists\r\n\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Pretty Lists\">\r\n    <gameid>ced348c0-a06d-4c0f-b9d2-a99b6ba6a322</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <feature_advancedscripts />\r\n    <start type=\"script\">\r\n      UpdateContentsInLists\r\n      bowl.inventoryverbs = ListExclude(bowl.inventoryverbs, Split(\"Open;Close;Use\", \";\"))\r\n    </start>\r\n    <inituserinterface type=\"script\">\r\n      if (not game.timeelapsed = 0) {\r\n        UpdateContentsInLists\r\n      }\r\n    </inituserinterface>\r\n    <author>KV</author>\r\n    <description><![CDATA[An example game with pretty lists.<br/><br/>Much thanks to mrangel and DavyB!]]></description>\r\n  </game>\r\n  <command name=\"pretty_inventory_cmd\">\r\n    <pattern type=\"string\">^i$|^inv$|^inventory$</pattern>\r\n    <script>\r\n      list = FormatObjectList(Template(\"CarryingListHeader\"), game.pov, Template(\"And\"), \".\")\r\n      if (list = \"\") {\r\n        msg (Template(\"NotCarryingAnything\"))\r\n      }\r\n      else {\r\n        PrettyInventory\r\n      }\r\n    </script>\r\n  </command>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"table\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"surface\" />\r\n      <feature_container />\r\n      <listchildren />\r\n      <listchildrenprefix>On it, you see</listchildrenprefix>\r\n      <takemsg>It's too big to take.</takemsg>\r\n      <look><![CDATA[An oak dining table.<br/>]]></look>\r\n      <displayverbs type=\"stringlist\">\r\n        <value>Look at</value>\r\n      </displayverbs>\r\n      <object name=\"bowl\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"container_open\" />\r\n        <feature_container />\r\n        <close type=\"boolean\">false</close>\r\n        <open type=\"boolean\">false</open>\r\n        <displayverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n          <value>Take</value>\r\n        </displayverbs>\r\n        <take />\r\n        <listchildren />\r\n        <look><![CDATA[A plastic bowl.<br/>]]></look>\r\n        <object name=\"apple\">\r\n          <inherit name=\"editor_object\" />\r\n          <inherit name=\"edible\" />\r\n          <take />\r\n          <feature_edible />\r\n          <visible type=\"boolean\">false</visible>\r\n          <look><![CDATA[A red apple.<br/>]]></look>\r\n          <eat type=\"script\"><![CDATA[\r\n            if (HasString(this, \"eatmsg\")) {\r\n              msg (this.eatmsg)\r\n            }\r\n            else {\r\n              msg (DynamicTemplate(\"Eaten\", this))\r\n            }\r\n            if (HasInt(game.pov, \"health\")) {\r\n              game.pov.health = game.pov.health + this.eathealth\r\n            }\r\n            destroy (this.name)\r\n            msg (\"<h3>You have won!</h3>\")\r\n            finish\r\n          ]]></eat>\r\n        </object>\r\n        <object name=\"orange\">\r\n          <inherit name=\"editor_object\" />\r\n          <inherit name=\"edible\" />\r\n          <take />\r\n          <feature_edible />\r\n          <look><![CDATA[A navel orange.<br/>]]></look>\r\n          <eat type=\"script\">\r\n            if (HasString(this, \"eatmsg\")) {\r\n              msg (this.eatmsg)\r\n            }\r\n            else {\r\n              msg (DynamicTemplate(\"Eaten\", this))\r\n            }\r\n            if (HasInt(game.pov, \"health\")) {\r\n              game.pov.health = game.pov.health + this.eathealth\r\n            }\r\n            destroy (this.name)\r\n            apple.visible = true\r\n            if (ListContains(ScopeReachable(),bowl)) {\r\n              msg (\"By some strange (but much appreciated) coincidence, an apple has magically appeared in the bowl!\")\r\n            }\r\n          </eat>\r\n        </object>\r\n      </object>\r\n      <object name=\"lazy susan\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"surface\" />\r\n        <feature_container />\r\n        <listchildren />\r\n        <listchildrenprefix>On it, you see</listchildrenprefix>\r\n        <look>A lazy susan.  You can spin it to move items around the table.  (Your grandparents used to have one.)</look>\r\n        <spin>You spin it.</spin>\r\n        <displayverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n        </displayverbs>\r\n        <takemsg>It {once:appears to be}{notfirst:is} attached to the table.</takemsg>\r\n      </object>\r\n      <object name=\"hat\">\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"wearable\" />\r\n        <take />\r\n        <look><![CDATA[It's just like Indiana Jones's hat.<br/>]]></look>\r\n        <feature_wearable />\r\n      </object>\r\n    </object>\r\n    <object name=\"manpurse\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"container_open\" />\r\n      <inherit name=\"wearable\" />\r\n      <take />\r\n      <feature_container />\r\n      <feature_wearable />\r\n      <alias>Man Purse</alias>\r\n      <look><![CDATA[A leather satchel.<br/>]]></look>\r\n      <listchildren />\r\n      <alt type=\"stringlist\">\r\n        <value>satchel</value>\r\n        <value>bag</value>\r\n      </alt>\r\n    </object>\r\n  </object>\r\n  <turnscript name=\"update_contents_in_lists_turnscript\">\r\n    <enabled />\r\n    <script>\r\n      UpdateContentsInLists\r\n    </script>\r\n  </turnscript>\r\n  <verb>\r\n    <property>spin</property>\r\n    <pattern>spin</pattern>\r\n    <defaultexpression>\"You can't spin \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n  <function name=\"UpdateContentsInLists\"><![CDATA[\r\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\r\n      if (not HasAttribute(o, \"listalias\")) {\r\n        o.listalias = GetDisplayAlias(o)\r\n      }\r\n      o.listalias = Replace(o.listalias,\"&nbsp;\",\"\")\r\n      containers = ListExclude(ListParents(o), game.pov)\r\n      containers = ListExclude(containers, ListParents(game.pov))\r\n      foreach (c, containers) {\r\n        o.listalias = \"&nbsp;&nbsp;\" + o.listalias\r\n      }\r\n    }\r\n  ]]></function>\r\n  <function name=\"PrettyInventory\"><![CDATA[\r\n    stuff = ScopeInventory()\r\n    list = \"\"\r\n    int = 0\r\n    foreach (o, stuff) {\r\n      int = int + 1\r\n      o.prettyalias = \"&nbsp;&nbsp;\" + GetDisplayNameLink(o, \"object\")\r\n      foreach (c, ListExclude(ListParents(o), game.pov)) {\r\n        if (ListContains (stuff, c)) {\r\n          o.prettyalias = \"&nbsp;&nbsp;\" + o.prettyalias\r\n        }\r\n      }\r\n      br = \"\"\r\n      if (int > 1) {\r\n        br = \"<br/>\"\r\n      }\r\n      list = list + br + o.prettyalias\r\n    }\r\n    msg (\"You are carrying:\")\r\n    msg (list)\r\n  ]]></function>\r\n</asl>\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<h1>This can be done online or offline</h1>\n<hr>\n<h1>Desktop users can skip these steps and <a href=\"https://gist.github.com/KVonGit/0abae33abf498e814771e335f29901f1/archive/191365b270fd1293b63bba9c9abc8bbae3337519.zip\">download the library</a>.</h1>\n<hr>\n<h2>Step 1</h2>\n<h3>Enable the advanced scripts feature (if you haven't already done so).</h3>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/40286792-e8148e74-5c6e-11e8-8bf9-4a737dc48089.png\"><img src=\"https://user-images.githubusercontent.com/30656341/40286792-e8148e74-5c6e-11e8-8bf9-4a737dc48089.png\"></a></p>\n<hr>\n<h2>Step 2</h2>\n<h3>Add this to the \"User Interface Initialisation\" script in code view (under the 'Advanced Scripts' tab):</h3>\n<pre><code>if (not game.timeelapsed = 0) {\n  UpdateContentsInLists\n}\n</code></pre>\n<hr>\n<h2>Step 3</h2>\n<h3>Add this to the start script in code view:</h3>\n<pre><code>UpdateContentsInLists\n</code></pre>\n<hr>\n<h2>Step 4</h2>\n<h3>Create a turn script (the name doesn't matter, just be sure to ENABLE it).  Put this for the script in code view:</h3>\n<pre><code>UpdateContentsInLists\n</code></pre>\n<hr>\n<h2>Step 5</h2>\n<h3>Create a function named <code>UpdateContentsInLists</code> (no parameters nor return type), and put this for the script in code view:</h3>\n<pre><code>foreach (o, ListExclude(ScopeVisible(),game.pov)) {\n  if (not HasAttribute(o, \"listalias\")) {\n    o.listalias = GetDisplayAlias(o)\n  }\n  o.listalias = Replace(o.listalias,\"&amp;nbsp;\",\"\")\n  containers = ListExclude(ListParents(o), game.pov)\n  containers = ListExclude(containers, ListParents(game.pov))\n  foreach (c, containers) {\n    o.listalias = \"&amp;nbsp;&amp;nbsp;\" + o.listalias\n  }\n}\n</code></pre>\n<hr>\n<h2>Step 6</h2>\n<h3>Create a function named <code>PrettyInventory</code> (no parameters nor return type), and put this for the script in code view:</h3>\n<pre><code>stuff = ScopeInventory()\nlist = \"\"\nint = 0\nforeach (o, stuff) {\n  int = int + 1\n  o.prettyalias = \"&amp;nbsp;&amp;nbsp;\" + GetDisplayNameLink(o, \"object\")\n  foreach (c, ListExclude(ListParents(o), game.pov)) {\n    if (ListContains (stuff, c)) {\n      o.prettyalias = \"&amp;nbsp;&amp;nbsp;\" + o.prettyalias\n    }\n  }\n  br = \"\"\n  if (int &gt; 1) {\n    br = \"&lt;br/&gt;\"\n  }\n  list = list + br + o.prettyalias\n}\nmsg (\"You are carrying:\")\nmsg (list)\n</code></pre>\n<hr>\n<h2>Step 7</h2>\n<h3>Create an INVENTORY command</h3>\n<p>1. Create a command named <code>pretty_inventory_cmd</code>.</p>\n<p>2. <strong>Set the pattern to 'Regular Expression'.</strong></p>\n<p>3. Put this for the pattern:  <code>^i$|^inv$|^inventory$</code></p>\n<p>4. Put this for the script in code view:</p>\n<pre><code>list = FormatObjectList(Template(\"CarryingListHeader\"), game.pov, Template(\"And\"), \".\")\nif (list = \"\") {\n  msg (Template(\"NotCarryingAnything\"))\n}\nelse {\n  PrettyInventory\n}\n</code></pre>\n<hr>\n<h2>CONCERNING SCENERY</h2>\n<p>If a scenery object is inside of any object which is in the player's inventory, the scenery object WILL BE DISPLAYED in the inventory pane, but...</p>\n<p>There is no reason to fool around with scenery objects in containers. If something is scenery, it shouldn't be in the player's inventory (or inside of anything in the player's inventory).</p>\n<p>If we want to hide something until a certain event has taken place, we need to set visible to false.</p>\n<p>If we want something to exist just in case the player tries to interact with it, we need to make it scenery. (Sidenote: Once something set as scenery is directly taken, its scenery attribute is set to false.)</p>\n<hr>\n<h1>Example Game</h1>\n<p>http://textadventures.co.uk/games/view/tc6_kfxsteafa-ecf7sqew/pretty-lists</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Pretty Lists\"&gt;\n    &lt;gameid&gt;ced348c0-a06d-4c0f-b9d2-a99b6ba6a322&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;feature_advancedscripts /&gt;\n    &lt;start type=\"script\"&gt;\n      UpdateContentsInLists\n      bowl.inventoryverbs = ListExclude(bowl.inventoryverbs, Split(\"Open;Close;Use\", \";\"))\n    &lt;/start&gt;\n    &lt;inituserinterface type=\"script\"&gt;\n      if (not game.timeelapsed = 0) {\n        UpdateContentsInLists\n      }\n    &lt;/inituserinterface&gt;\n    &lt;author&gt;KV&lt;/author&gt;\n    &lt;description&gt;&lt;![CDATA[An example game with pretty lists.&lt;br/&gt;&lt;br/&gt;Much thanks to mrangel and DavyB!]]&gt;&lt;/description&gt;\n  &lt;/game&gt;\n  &lt;command name=\"pretty_inventory_cmd\"&gt;\n    &lt;pattern type=\"string\"&gt;^i$|^inv$|^inventory$&lt;/pattern&gt;\n    &lt;script&gt;\n      list = FormatObjectList(Template(\"CarryingListHeader\"), game.pov, Template(\"And\"), \".\")\n      if (list = \"\") {\n        msg (Template(\"NotCarryingAnything\"))\n      }\n      else {\n        PrettyInventory\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"table\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"surface\" /&gt;\n      &lt;feature_container /&gt;\n      &lt;listchildren /&gt;\n      &lt;listchildrenprefix&gt;On it, you see&lt;/listchildrenprefix&gt;\n      &lt;takemsg&gt;It's too big to take.&lt;/takemsg&gt;\n      &lt;look&gt;&lt;![CDATA[An oak dining table.&lt;br/&gt;]]&gt;&lt;/look&gt;\n      &lt;displayverbs type=\"stringlist\"&gt;\n        &lt;value&gt;Look at&lt;/value&gt;\n      &lt;/displayverbs&gt;\n      &lt;object name=\"bowl\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"container_open\" /&gt;\n        &lt;feature_container /&gt;\n        &lt;close type=\"boolean\"&gt;false&lt;/close&gt;\n        &lt;open type=\"boolean\"&gt;false&lt;/open&gt;\n        &lt;displayverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n          &lt;value&gt;Take&lt;/value&gt;\n        &lt;/displayverbs&gt;\n        &lt;take /&gt;\n        &lt;listchildren /&gt;\n        &lt;look&gt;&lt;![CDATA[A plastic bowl.&lt;br/&gt;]]&gt;&lt;/look&gt;\n        &lt;object name=\"apple\"&gt;\n          &lt;inherit name=\"editor_object\" /&gt;\n          &lt;inherit name=\"edible\" /&gt;\n          &lt;take /&gt;\n          &lt;feature_edible /&gt;\n          &lt;visible type=\"boolean\"&gt;false&lt;/visible&gt;\n          &lt;look&gt;&lt;![CDATA[A red apple.&lt;br/&gt;]]&gt;&lt;/look&gt;\n          &lt;eat type=\"script\"&gt;&lt;![CDATA[\n            if (HasString(this, \"eatmsg\")) {\n              msg (this.eatmsg)\n            }\n            else {\n              msg (DynamicTemplate(\"Eaten\", this))\n            }\n            if (HasInt(game.pov, \"health\")) {\n              game.pov.health = game.pov.health + this.eathealth\n            }\n            destroy (this.name)\n            msg (\"&lt;h3&gt;You have won!&lt;/h3&gt;\")\n            finish\n          ]]&gt;&lt;/eat&gt;\n        &lt;/object&gt;\n        &lt;object name=\"orange\"&gt;\n          &lt;inherit name=\"editor_object\" /&gt;\n          &lt;inherit name=\"edible\" /&gt;\n          &lt;take /&gt;\n          &lt;feature_edible /&gt;\n          &lt;look&gt;&lt;![CDATA[A navel orange.&lt;br/&gt;]]&gt;&lt;/look&gt;\n          &lt;eat type=\"script\"&gt;\n            if (HasString(this, \"eatmsg\")) {\n              msg (this.eatmsg)\n            }\n            else {\n              msg (DynamicTemplate(\"Eaten\", this))\n            }\n            if (HasInt(game.pov, \"health\")) {\n              game.pov.health = game.pov.health + this.eathealth\n            }\n            destroy (this.name)\n            apple.visible = true\n            if (ListContains(ScopeReachable(),bowl)) {\n              msg (\"By some strange (but much appreciated) coincidence, an apple has magically appeared in the bowl!\")\n            }\n          &lt;/eat&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n      &lt;object name=\"lazy susan\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"surface\" /&gt;\n        &lt;feature_container /&gt;\n        &lt;listchildren /&gt;\n        &lt;listchildrenprefix&gt;On it, you see&lt;/listchildrenprefix&gt;\n        &lt;look&gt;A lazy susan.  You can spin it to move items around the table.  (Your grandparents used to have one.)&lt;/look&gt;\n        &lt;spin&gt;You spin it.&lt;/spin&gt;\n        &lt;displayverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n        &lt;/displayverbs&gt;\n        &lt;takemsg&gt;It {once:appears to be}{notfirst:is} attached to the table.&lt;/takemsg&gt;\n      &lt;/object&gt;\n      &lt;object name=\"hat\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"wearable\" /&gt;\n        &lt;take /&gt;\n        &lt;look&gt;&lt;![CDATA[It's just like Indiana Jones's hat.&lt;br/&gt;]]&gt;&lt;/look&gt;\n        &lt;feature_wearable /&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n    &lt;object name=\"manpurse\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"container_open\" /&gt;\n      &lt;inherit name=\"wearable\" /&gt;\n      &lt;take /&gt;\n      &lt;feature_container /&gt;\n      &lt;feature_wearable /&gt;\n      &lt;alias&gt;Man Purse&lt;/alias&gt;\n      &lt;look&gt;&lt;![CDATA[A leather satchel.&lt;br/&gt;]]&gt;&lt;/look&gt;\n      &lt;listchildren /&gt;\n      &lt;alt type=\"stringlist\"&gt;\n        &lt;value&gt;satchel&lt;/value&gt;\n        &lt;value&gt;bag&lt;/value&gt;\n      &lt;/alt&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;turnscript name=\"update_contents_in_lists_turnscript\"&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      UpdateContentsInLists\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;verb&gt;\n    &lt;property&gt;spin&lt;/property&gt;\n    &lt;pattern&gt;spin&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't spin \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;function name=\"UpdateContentsInLists\"&gt;&lt;![CDATA[\n    foreach (o, ListExclude(ScopeVisible(),game.pov)) {\n      if (not HasAttribute(o, \"listalias\")) {\n        o.listalias = GetDisplayAlias(o)\n      }\n      o.listalias = Replace(o.listalias,\"&amp;nbsp;\",\"\")\n      containers = ListExclude(ListParents(o), game.pov)\n      containers = ListExclude(containers, ListParents(game.pov))\n      foreach (c, containers) {\n        o.listalias = \"&amp;nbsp;&amp;nbsp;\" + o.listalias\n      }\n    }\n  ]]&gt;&lt;/function&gt;\n  &lt;function name=\"PrettyInventory\"&gt;&lt;![CDATA[\n    stuff = ScopeInventory()\n    list = \"\"\n    int = 0\n    foreach (o, stuff) {\n      int = int + 1\n      o.prettyalias = \"&amp;nbsp;&amp;nbsp;\" + GetDisplayNameLink(o, \"object\")\n      foreach (c, ListExclude(ListParents(o), game.pov)) {\n        if (ListContains (stuff, c)) {\n          o.prettyalias = \"&amp;nbsp;&amp;nbsp;\" + o.prettyalias\n        }\n      }\n      br = \"\"\n      if (int &gt; 1) {\n        br = \"&lt;br/&gt;\"\n      }\n      list = list + br + o.prettyalias\n    }\n    msg (\"You are carrying:\")\n    msg (list)\n  ]]&gt;&lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2018-05-21T02:11:27.7927162Z",
      "LastEditDate": "2018-05-27T08:12:56.0516768Z",
      "link": null
    },
    {
      "PostId": "0744c15e-28f8-4ccf-a6d0-8dbedc469da3",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "[PrettyInventoryLib.zip](https://gist.github.com/KVonGit/0abae33abf498e814771e335f29901f1/archive/191365b270fd1293b63bba9c9abc8bbae3337519.zip)",
      "EditableFormat": "markdown",
      "HTML": "<p><a href=\"https://gist.github.com/KVonGit/0abae33abf498e814771e335f29901f1/archive/191365b270fd1293b63bba9c9abc8bbae3337519.zip\">PrettyInventoryLib.zip</a></p>\n\n",
      "PostDate": "2018-05-21T03:36:07.4742283Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b6bce980-fe96-44ae-a718-36ee65949745",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> If something is scenery, it shouldn't be in the player's inventory (or inside of anything in the player's inventory).\r\n\r\nI think there's a place for scenery in the inventory. A bag might contain scenery objects for its handle/strap/zipper/etc. Any parts mentioned in the description, in case the player wants to try looking closer at them. Or the handle on a fork. Or lint on a sweater.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>If something is scenery, it shouldn't be in the player's inventory (or inside of anything in the player's inventory).</p>\n</blockquote>\n<p>I think there's a place for scenery in the inventory. A bag might contain scenery objects for its handle/strap/zipper/etc. Any parts mentioned in the description, in case the player wants to try looking closer at them. Or the handle on a fork. Or lint on a sweater.</p>\n\n",
      "PostDate": "2018-05-21T10:51:21.0118302Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d070e999-4e72-4cbe-a522-fde16cd7deab",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I think there's a place for scenery in the inventory. A bag might contain scenery objects for its handle/strap/zipper/etc. Any parts mentioned in the description, in case the player wants to try looking closer at them. Or the handle on a fork. Or lint on a sweater.\r\n\r\nI agree!\r\n\r\nI was just trying to explain it from Quest's perspective (or Alex's perspective, I guess).",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I think there's a place for scenery in the inventory. A bag might contain scenery objects for its handle/strap/zipper/etc. Any parts mentioned in the description, in case the player wants to try looking closer at them. Or the handle on a fork. Or lint on a sweater.</p>\n</blockquote>\n<p>I agree!</p>\n<p>I was just trying to explain it from Quest's perspective (or Alex's perspective, I guess).</p>\n\n",
      "PostDate": "2018-05-21T12:34:35.3715846Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "be9e58ce-887c-4d86-a856-b9d50e317797",
      "UserId": 341771,
      "Username": "JenniferCampbell",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8b9a63b5bbacc531368953df3a1709ec?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Examine bag\r\n*It's a burlap sack with straps sewn onto it.*\r\nExamine strap\r\n*It is made of leather and sewn on with strong thread.*\r\nExamine thread\r\n*It is* Talon Superlock *Spun Polyester.  A little strange given the medieval setting, wouldn't you say?*\r\nRemove thread\r\n*You do not have a Thread Ripping Tool.*\r\nExamine polyester\r\n*It is a synthetic resin in which the polymer units are linked by ester groups.*\r\nExamine polymer\r\n*You do not have Microscope.*\r\n\r\n\"Damn, this the most detailed game ever!\"\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Examine bag<br>\n<em>It's a burlap sack with straps sewn onto it.</em><br>\nExamine strap<br>\n<em>It is made of leather and sewn on with strong thread.</em><br>\nExamine thread<br>\n<em>It is</em> Talon Superlock <em>Spun Polyester.  A little strange given the medieval setting, wouldn't you say?</em><br>\nRemove thread<br>\n<em>You do not have a Thread Ripping Tool.</em><br>\nExamine polyester<br>\n<em>It is a synthetic resin in which the polymer units are linked by ester groups.</em><br>\nExamine polymer<br>\n<em>You do not have Microscope.</em></p>\n<p>\"Damn, this the most detailed game ever!\"</p>\n\n",
      "PostDate": "2018-05-21T12:37:43.0526963Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bc615578-cb3b-4ea5-9cad-cd399425ea5e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's funny stuff!\r\n\r\n\r\n...and, sadly, I am guilty of this!  Well, I only coded down to the thread...",
      "EditableFormat": "markdown",
      "HTML": "<p>That's funny stuff!</p>\n<p>...and, sadly, I am guilty of this!  Well, I only coded down to the thread...</p>\n\n",
      "PostDate": "2018-05-21T13:08:39.7369183Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d3420c02-117c-41fb-b7f3-37b2434fd32e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Updated the INVENTORY command to display object links in the above code.",
      "EditableFormat": "markdown",
      "HTML": "<p>Updated the INVENTORY command to display object links in the above code.</p>\n\n",
      "PostDate": "2018-05-27T08:11:21.0963176Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
