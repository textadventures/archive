{
  "Topic": {
    "TopicId": "esqfoyuzs0m183590xucga",
    "ForumId": "10",
    "Title": "I need an exit to appear when I open a door",
    "LastUpdated": "2020-02-16T06:26:10.2830237Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "f46e3233-4cc8-45ff-b0b7-a967280bbcaf",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "First I'm trying to find a way for the same door to appear in both rooms so the player can walk from hall to kitchen and from kitchen to hall.  I know there is something about this in the Quest help file but there is not much information bout it. The door needs to appear as an object in the room or as part of the room text description.\r\n\r\nIs there a way to have an new exit appear when I open the door? At the moment after the door is opened the player can go to  another room by typing \"GO DOOR\" which is a command but not all players would know to do, so I thought an exit appearing would be better when the player has opened the door.\r\n\r\nThe third problem is when there is more than one door in the room so if the player typed \"open door\" then Quest needs to know which door, the only solution I can think of is for the player to type \"OPEN SOUTH DOOR\" or \"OPEN EAST DOOR\" but then would the player know that you need to type this in. \r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>First I'm trying to find a way for the same door to appear in both rooms so the player can walk from hall to kitchen and from kitchen to hall.  I know there is something about this in the Quest help file but there is not much information bout it. The door needs to appear as an object in the room or as part of the room text description.</p>\n<p>Is there a way to have an new exit appear when I open the door? At the moment after the door is opened the player can go to  another room by typing \"GO DOOR\" which is a command but not all players would know to do, so I thought an exit appearing would be better when the player has opened the door.</p>\n<p>The third problem is when there is more than one door in the room so if the player typed \"open door\" then Quest needs to know which door, the only solution I can think of is for the player to type \"OPEN SOUTH DOOR\" or \"OPEN EAST DOOR\" but then would the player know that you need to type this in.</p>\n\n",
      "PostDate": "2020-02-16T06:26:10.2830237Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a172272c-5594-46d7-b17a-eeed11e172b5",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(As you mentioned having multiple doors, for code samples in this post I'm assuming that the doors are named something like `door1`, `door2`, `door3` and so on, while the exits are named `exit125`, `exit126`, and so on. You can change them to whatever your doors/exits are actually named)\r\n\r\nI'd normally suggest making each door a container. This gives you the \"open\" / \"close\" functionality, and also allows you to add \"lock\" / \"unlock\" with just a couple of clicks. Doors aren't really containers, so you'd probably want to set the `addscript` so that it displays a message rather than allowing the player to put something in the door. (The script titled *Script to run when trying to add an object* on the Container tab). You could either display a simple \"You can't do that\" message, or move the object to the other side of the door (so \"put fish in door\" is basically throwing an object through the door)\r\n\r\nIf there's a door in the lounge which leads to the kitchen, and a door in the kitchen leading to the lounge, you'd want to make sure they're open at the same time. There are two scripts `onopen` and `onclose` (\"After opening\" and \"After closing\" in the GUI), which you would set to:\r\n```\r\ndoor2.isopen = this.isopen\r\n```\r\n(using the name of the door on the other side, so that opening or closing the door opens or closes both sides of it, adding to the impression that they're a single object visible from both rooms.\r\n\r\n> First I'm trying to find a way for the same door to appear in both rooms so the player can walk from hall to kitchen and from kitchen to hall. I know there is something about this in the Quest help file but there is not much information bout it. The door needs to appear as an object in the room or as part of the room text description.\r\n\r\nI'd suggest creating the exits to start with, and not allowing the player to go through it until the door is open. An exit can have a script which runs instead of moving the player to another room. You'd set it to something like:\r\n```\r\nif (GetBoolean (door1, \"isopen\")) {\r\n  MovePlayer (this.to)\r\n}\r\nelse {\r\n  msg (\"You can't go that way while the {object:door1:door} is closed.\")\r\n}\r\n```\r\n\r\n> Is there a way to have an new exit appear when I open the door?\r\n\r\nYes. Theoretically you can create an exit:\r\n```\r\ncreate exit (\"north door\", hall, kitchen, \"northdirection\")\r\n```\r\nor you could have the exit already there but invisible, and set it to visible when you want the player to access it.\r\n\r\nWith the method I described above (a script on the exit), the exit will show on the compass or in the \"You can go:\" line, but attempting to go through it will display a message saying the door is closed. If you make the exit invisible, it won't be shown to the player until the door is opened, and attempting \"go north\" prematurely would just say \"You can't go that way.\" with no explanation. Choosing between the two is a matter of personal taste.\r\n\r\n> The third problem is when there is more than one door in the room so if the player typed \"open door\" then Quest needs to know which door, the only solution I can think of is for the player to type \"OPEN SOUTH DOOR\" or \"OPEN EAST DOOR\" but then would the player know that you need to type this in.\r\n\r\nIf you have the exits be directional, then the player can use them in the same way they would every other exit (using the compass, or clicking the links in the room description). If you really want \"go door\" to work, you could give the exit an alias like \"north door\", while having it still inherit `northdirection`, so that the commands \"go door\", \"go north\", and \"n\" are all equivalent. In this case, typing \"go door\" would be ambiguous in a room with multiple doors, so it would pop up a menu asking if the player meant north door or east door.\r\n\r\nOne thing I've played with before is changing a door's alias once it is opened. On the \"After opening\" script, it would be something like:\r\n```\r\ndoorr4.isopen = true\r\nif (this.alias = \"north door\") {\r\n  msg (\"The door creaks open to reveal a grimy domestic kitchen beyond.\")\r\n  this.alias = \"kitchen door\"\r\n  this.alt = Split (\"north door\")\r\n  exit199.alias = \"kitchen door\"\r\n  exit199.alt = Split (\"north door;north;n\")\r\n}\r\n```\r\nThis means that once the door is open, it becomes \"door to kitchen\" in the Places/Objects pane and room descriptions (if you're using them), and the player could do \"close kitchen door\" or similar. They can also enter \"north\", \"go door\", \"go north door\", or \"go kitchen\" as they wish.",
      "EditableFormat": "markdown",
      "HTML": "<p>(As you mentioned having multiple doors, for code samples in this post I'm assuming that the doors are named something like <code>door1</code>, <code>door2</code>, <code>door3</code> and so on, while the exits are named <code>exit125</code>, <code>exit126</code>, and so on. You can change them to whatever your doors/exits are actually named)</p>\n<p>I'd normally suggest making each door a container. This gives you the \"open\" / \"close\" functionality, and also allows you to add \"lock\" / \"unlock\" with just a couple of clicks. Doors aren't really containers, so you'd probably want to set the <code>addscript</code> so that it displays a message rather than allowing the player to put something in the door. (The script titled <em>Script to run when trying to add an object</em> on the Container tab). You could either display a simple \"You can't do that\" message, or move the object to the other side of the door (so \"put fish in door\" is basically throwing an object through the door)</p>\n<p>If there's a door in the lounge which leads to the kitchen, and a door in the kitchen leading to the lounge, you'd want to make sure they're open at the same time. There are two scripts <code>onopen</code> and <code>onclose</code> (\"After opening\" and \"After closing\" in the GUI), which you would set to:</p>\n<pre><code>door2.isopen = this.isopen\n</code></pre>\n<p>(using the name of the door on the other side, so that opening or closing the door opens or closes both sides of it, adding to the impression that they're a single object visible from both rooms.</p>\n<blockquote>\n<p>First I'm trying to find a way for the same door to appear in both rooms so the player can walk from hall to kitchen and from kitchen to hall. I know there is something about this in the Quest help file but there is not much information bout it. The door needs to appear as an object in the room or as part of the room text description.</p>\n</blockquote>\n<p>I'd suggest creating the exits to start with, and not allowing the player to go through it until the door is open. An exit can have a script which runs instead of moving the player to another room. You'd set it to something like:</p>\n<pre><code>if (GetBoolean (door1, \"isopen\")) {\n  MovePlayer (this.to)\n}\nelse {\n  msg (\"You can't go that way while the {object:door1:door} is closed.\")\n}\n</code></pre>\n<blockquote>\n<p>Is there a way to have an new exit appear when I open the door?</p>\n</blockquote>\n<p>Yes. Theoretically you can create an exit:</p>\n<pre><code>create exit (\"north door\", hall, kitchen, \"northdirection\")\n</code></pre>\n<p>or you could have the exit already there but invisible, and set it to visible when you want the player to access it.</p>\n<p>With the method I described above (a script on the exit), the exit will show on the compass or in the \"You can go:\" line, but attempting to go through it will display a message saying the door is closed. If you make the exit invisible, it won't be shown to the player until the door is opened, and attempting \"go north\" prematurely would just say \"You can't go that way.\" with no explanation. Choosing between the two is a matter of personal taste.</p>\n<blockquote>\n<p>The third problem is when there is more than one door in the room so if the player typed \"open door\" then Quest needs to know which door, the only solution I can think of is for the player to type \"OPEN SOUTH DOOR\" or \"OPEN EAST DOOR\" but then would the player know that you need to type this in.</p>\n</blockquote>\n<p>If you have the exits be directional, then the player can use them in the same way they would every other exit (using the compass, or clicking the links in the room description). If you really want \"go door\" to work, you could give the exit an alias like \"north door\", while having it still inherit <code>northdirection</code>, so that the commands \"go door\", \"go north\", and \"n\" are all equivalent. In this case, typing \"go door\" would be ambiguous in a room with multiple doors, so it would pop up a menu asking if the player meant north door or east door.</p>\n<p>One thing I've played with before is changing a door's alias once it is opened. On the \"After opening\" script, it would be something like:</p>\n<pre><code>doorr4.isopen = true\nif (this.alias = \"north door\") {\n  msg (\"The door creaks open to reveal a grimy domestic kitchen beyond.\")\n  this.alias = \"kitchen door\"\n  this.alt = Split (\"north door\")\n  exit199.alias = \"kitchen door\"\n  exit199.alt = Split (\"north door;north;n\")\n}\n</code></pre>\n<p>This means that once the door is open, it becomes \"door to kitchen\" in the Places/Objects pane and room descriptions (if you're using them), and the player could do \"close kitchen door\" or similar. They can also enter \"north\", \"go door\", \"go north door\", or \"go kitchen\" as they wish.</p>\n\n",
      "PostDate": "2020-02-16T10:30:54.4356581Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1eec281b-3cfb-46c3-a739-d364d2a2e407",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi mrangel.\r\n\r\nI like your suggestions thanks.\r\nThe  \"have the exit already there but invisible, and set it to visible when you want the player to access it\" makes it easy for the programmer writing the script but like you said it does not provide a reason why the player can't move in a certain direction.\r\n\r\nThe other ideas I thought of but are a bit lazy.\r\nIf the player goes north or types 'go door' then the player could get a message \"you open the door and enter into another room\" after moving the player to another room. \r\nAlso opening the door could automatically move the player to another room with the same above message.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi mrangel.</p>\n<p>I like your suggestions thanks.<br>\nThe  \"have the exit already there but invisible, and set it to visible when you want the player to access it\" makes it easy for the programmer writing the script but like you said it does not provide a reason why the player can't move in a certain direction.</p>\n<p>The other ideas I thought of but are a bit lazy.<br>\nIf the player goes north or types 'go door' then the player could get a message \"you open the door and enter into another room\" after moving the player to another room.<br>\nAlso opening the door could automatically move the player to another room with the same above message.</p>\n\n",
      "PostDate": "2020-02-17T01:25:44.260593Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
