{
  "Topic": {
    "TopicId": "c1seisf66k2cmtzjgf5u7g",
    "ForumId": "10",
    "Title": "attribute different to",
    "LastUpdated": "2016-11-29T12:40:22.8447222Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "d9f3b185-64df-4b3f-ba3d-c194c46cd62c",
      "UserId": 163617,
      "Username": "Deckrect ",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello, people. A dumb question. I use GUI most of the time, and i know how creating a condition of \"If Object has attribute equals to\". However, i wish creating a condition where things happens \"If Object has attribute different to\". How may i express 'different'? \"<>\"?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello, people. A dumb question. I use GUI most of the time, and i know how creating a condition of \"If Object has attribute equals to\". However, i wish creating a condition where things happens \"If Object has attribute different to\". How may i express 'different'? \"&lt;&gt;\"?</p>\n\n",
      "PostDate": "2016-11-29T12:40:22.8447222Z",
      "LastEditDate": null
    },
    {
      "PostId": "115fad4c-3140-4039-8543-4b15353db298",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You should be able to use it as an If, then else statement.  \r\n\r\nIf the attribute is equal to 2, then print message, do this, do that...\r\n\r\nElse If equal to 3 do this, do that...\r\n\r\nElse if equal to 4 do this, do that...\r\n\r\nElse (this is your \"different\") do this, do that...\r\n\r\nLet me know if that makes sense!",
      "EditableFormat": "markdown",
      "HTML": "<p>You should be able to use it as an If, then else statement.</p>\n<p>If the attribute is equal to 2, then print message, do this, do that...</p>\n<p>Else If equal to 3 do this, do that...</p>\n<p>Else if equal to 4 do this, do that...</p>\n<p>Else (this is your \"different\") do this, do that...</p>\n<p>Let me know if that makes sense!</p>\n\n",
      "PostDate": "2016-11-29T18:39:33.3692812Z",
      "LastEditDate": null
    },
    {
      "PostId": "5c157a84-ba75-48fc-8212-03aa1e7a2c23",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, \"<>\".",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, \"&lt;&gt;\".</p>\n\n",
      "PostDate": "2016-11-29T20:00:47.5575589Z",
      "LastEditDate": null
    },
    {
      "PostId": "c689a3b8-a21b-47bc-b1ca-86076e7e5dc7",
      "UserId": 163617,
      "Username": "Deckrect ",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks, guys!\r\n\r\nI may switch to code in order to alter the symbol Pixie hinted. But it is also interesting i did never think the other way around, as XanMag suggested. Of course, the good about using the \"<>\" is i need only one IF statement!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks, guys!</p>\n<p>I may switch to code in order to alter the symbol Pixie hinted. But it is also interesting i did never think the other way around, as XanMag suggested. Of course, the good about using the \"&lt;&gt;\" is i need only one IF statement!</p>\n\n",
      "PostDate": "2016-11-29T20:47:06.0259708Z",
      "LastEditDate": null
    },
    {
      "PostId": "3cc88a15-28bb-4061-88c2-6c527a7e9da6",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "also:\r\n\r\nif [EXPRESSION] not YOUR_EXPRESSION\r\n\r\nfor examples:\r\n\r\n// Attribute scripting as your Expressions:\r\n\r\nif [EXPRESSION] not player.alias = \"HK\"\r\nif EXPRESSION] not player.strength_integer_attribute > 66\r\nif [EXPRESSION] not player.strength_integer_attribute = 100\r\nif [EXPRESSION] not player.flying_boolean_attribute\r\netc etc etc\r\n\r\n// Functions as your Expressions:\r\n\r\nif [EXPRESSION] not Got (ball)\r\nif [EXPRESSION] not HasInt (player, \"strength_integer_attribte\")\r\netc etc etc\r\n\r\n------------------\r\n\r\nusing Pixie's mentioned alternative command/symbol/operation for not: '<>', examples:\r\n\r\nif [EXPRESSION] player.alias <> \"HK\"\r\nif [EXPRESSION] not player.strength_integer_attribute <> 100\r\nif [EXPRESSION] player.flying_boolean_attribute <> true\r\n\r\n--------------\r\n\r\nNegation (Not / Not Equals):\r\n\r\nnot xxx // Boolean Attributes only (I think)\r\nor\r\nnot xxx = xxx\r\nor:\r\nxxx <> xxx",
      "EditableFormat": "markdown",
      "HTML": "<p>also:</p>\n<p>if [EXPRESSION] not YOUR_EXPRESSION</p>\n<p>for examples:</p>\n<p>// Attribute scripting as your Expressions:</p>\n<p>if [EXPRESSION] not player.alias = \"HK\"<br>\nif EXPRESSION] not player.strength_integer_attribute &gt; 66<br>\nif [EXPRESSION] not player.strength_integer_attribute = 100<br>\nif [EXPRESSION] not player.flying_boolean_attribute<br>\netc etc etc</p>\n<p>// Functions as your Expressions:</p>\n<p>if [EXPRESSION] not Got (ball)<br>\nif [EXPRESSION] not HasInt (player, \"strength_integer_attribte\")<br>\netc etc etc</p>\n<hr>\n<p>using Pixie's mentioned alternative command/symbol/operation for not: '&lt;&gt;', examples:</p>\n<p>if [EXPRESSION] player.alias &lt;&gt; \"HK\"<br>\nif [EXPRESSION] not player.strength_integer_attribute &lt;&gt; 100<br>\nif [EXPRESSION] player.flying_boolean_attribute &lt;&gt; true</p>\n<hr>\n<p>Negation (Not / Not Equals):</p>\n<p>not xxx // Boolean Attributes only (I think)<br>\nor<br>\nnot xxx = xxx<br>\nor:<br>\nxxx &lt;&gt; xxx</p>\n\n",
      "PostDate": "2016-11-29T20:52:57.4613379Z",
      "LastEditDate": "2016-11-30T03:41:08.0141136Z"
    },
    {
      "PostId": "e1aa2952-3397-42bb-a4a9-7853409ca072",
      "UserId": 163617,
      "Username": "Deckrect ",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I am curious about this example, HK: \"if [EXPRESSION] not Got (ball)\"\r\n\r\nWhat does it do?",
      "EditableFormat": "markdown",
      "HTML": "<p>I am curious about this example, HK: \"if [EXPRESSION] not Got (ball)\"</p>\n<p>What does it do?</p>\n\n",
      "PostDate": "2016-11-29T21:01:25.1669266Z",
      "LastEditDate": null
    },
    {
      "PostId": "93ac1571-0c4a-431f-b9df-0f17db59a63f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the '[EXPRESSION]' option in the GUI/Editor's scripting allows for you to type in the code/action/operation you want, though it's syntax is a bit different in some cases from the syntax of doing direct coding (in-code), which causes some frustration for people.\r\n\r\nIt's my way to 'cheat' to be able to help people through doing something in the GUI/Editor, as I don't know its script options that well.\r\n\r\n---------------\r\n\r\nas for the 'Got' Script/Function:\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/corelibrary/got.html\r\nhttp://docs.textadventures.co.uk/quest/functions/index_allfunctions.html (scroll down to the 'Got' Function)\r\n\r\nalso my 'ball' would have to be an actual existing (or still existing) Object in the game:\r\n\r\n```\r\n<object name=\"ball\">\r\n</object>\r\n```\r\n\r\nif not, then you get an error.\r\n\r\n(and if you use the 'not' operator: not Got (ball), then it's checking for effectively if you do NOT have a 'ball' Object in your inventory, as opposed to checking if you DO have a 'ball' Object in your inventory)\r\n\r\nif you do have a 'ball' Object, the 'Got' Script/Function checks the 'game.pov' (the currently controlled Player Object if you have multiple Player Objects, or just your single Player Object, such as the default 'player' Player Object) Player Object, to see if it contains that Object (the 'ball' Object): TRUE, or not: FALSE\r\n\r\nit's a shortcut Script/Function for iterating (via 'foreach' Script/Function) through the 'ScopeInventory' Objectlist Attribute (of specifically the 'game.pov' / currently controlled Player Object) for a 'ball' item / the 'ball' Object:\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/corelibrary/scopeinventory.html\r\nhttp://docs.textadventures.co.uk/quest/scopes.html (same as the below link, conveniently separated out as its own page)\r\nhttp://docs.textadventures.co.uk/quest/functions/index_allfunctions.html (scroll down to the 'ScopeXXX' Functions)\r\n\r\nalso, you can achieve the same thing this way too, using the 'Contains' Script/Function:\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/contains.html\r\n\r\nif (Contains (player, ball)) {\r\n\r\nand, you can also do this too:\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/listcontains.html\r\n\r\nif (ListContains (ScopeInventory(), ball)) {",
      "EditableFormat": "markdown",
      "HTML": "<p>the '[EXPRESSION]' option in the GUI/Editor's scripting allows for you to type in the code/action/operation you want, though it's syntax is a bit different in some cases from the syntax of doing direct coding (in-code), which causes some frustration for people.</p>\n<p>It's my way to 'cheat' to be able to help people through doing something in the GUI/Editor, as I don't know its script options that well.</p>\n<hr>\n<p>as for the 'Got' Script/Function:</p>\n<p>http://docs.textadventures.co.uk/quest/functions/corelibrary/got.html<br>\nhttp://docs.textadventures.co.uk/quest/functions/index_allfunctions.html (scroll down to the 'Got' Function)</p>\n<p>also my 'ball' would have to be an actual existing (or still existing) Object in the game:</p>\n<pre><code>&lt;object name=\"ball\"&gt;\n&lt;/object&gt;\n</code></pre>\n<p>if not, then you get an error.</p>\n<p>(and if you use the 'not' operator: not Got (ball), then it's checking for effectively if you do NOT have a 'ball' Object in your inventory, as opposed to checking if you DO have a 'ball' Object in your inventory)</p>\n<p>if you do have a 'ball' Object, the 'Got' Script/Function checks the 'game.pov' (the currently controlled Player Object if you have multiple Player Objects, or just your single Player Object, such as the default 'player' Player Object) Player Object, to see if it contains that Object (the 'ball' Object): TRUE, or not: FALSE</p>\n<p>it's a shortcut Script/Function for iterating (via 'foreach' Script/Function) through the 'ScopeInventory' Objectlist Attribute (of specifically the 'game.pov' / currently controlled Player Object) for a 'ball' item / the 'ball' Object:</p>\n<p>http://docs.textadventures.co.uk/quest/functions/corelibrary/scopeinventory.html<br>\nhttp://docs.textadventures.co.uk/quest/scopes.html (same as the below link, conveniently separated out as its own page)<br>\nhttp://docs.textadventures.co.uk/quest/functions/index_allfunctions.html (scroll down to the 'ScopeXXX' Functions)</p>\n<p>also, you can achieve the same thing this way too, using the 'Contains' Script/Function:</p>\n<p>http://docs.textadventures.co.uk/quest/functions/contains.html</p>\n<p>if (Contains (player, ball)) {</p>\n<p>and, you can also do this too:</p>\n<p>http://docs.textadventures.co.uk/quest/functions/listcontains.html</p>\n<p>if (ListContains (ScopeInventory(), ball)) {</p>\n\n",
      "PostDate": "2016-11-30T03:29:00.6342807Z",
      "LastEditDate": "2016-11-30T03:39:48.4624677Z"
    },
    {
      "PostId": "df6ea018-2956-445b-896d-295f96ebe447",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "example of what the 'Got' Function probably does (in its underneath coding) for you:\r\n\r\n```\r\nif (Got (ball)) { /* scripts */ }\r\n\r\nis the same as doing:\r\n\r\nif (my_got_function (ball)) { /* scripts */ }\r\n\r\n<function name=\"my_got_function\" parameters=\"object_parameter\" type=\"boolean\">\r\n  boolean_variable = false\r\n  foreach (object_variable, ScopeInventory()) {\r\n    if (object_variable = object_parameter) {\r\n      boolean_variable = true\r\n    }\r\n  }\r\n  return (boolean_variable)\r\n</function>\r\n```\r\n\r\n-----------\r\n\r\n(quest could really use, loops-iterations and scripting, interrupts and terminators, if it's possible... to do so)",
      "EditableFormat": "markdown",
      "HTML": "<p>example of what the 'Got' Function probably does (in its underneath coding) for you:</p>\n<pre><code>if (Got (ball)) { /* scripts */ }\n\nis the same as doing:\n\nif (my_got_function (ball)) { /* scripts */ }\n\n&lt;function name=\"my_got_function\" parameters=\"object_parameter\" type=\"boolean\"&gt;\n  boolean_variable = false\n  foreach (object_variable, ScopeInventory()) {\n    if (object_variable = object_parameter) {\n      boolean_variable = true\n    }\n  }\n  return (boolean_variable)\n&lt;/function&gt;\n</code></pre>\n<hr>\n<p>(quest could really use, loops-iterations and scripting, interrupts and terminators, if it's possible... to do so)</p>\n\n",
      "PostDate": "2016-11-30T03:47:27.5155784Z",
      "LastEditDate": "2016-11-30T03:55:28.3607579Z"
    },
    {
      "PostId": "308863d1-dbdc-4569-be1f-feb887b0f34a",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The actual script for the `Got` function is:\r\n```\r\nreturn (ListContains(ScopeInventory(), obj))",
      "EditableFormat": "markdown",
      "HTML": "<p>The actual script for the <code>Got</code> function is:</p>\n<pre><code>return (ListContains(ScopeInventory(), obj))\n</code></pre>\n\n",
      "PostDate": "2016-11-30T08:14:55.0571655Z",
      "LastEditDate": null
    },
    {
      "PostId": "cf427f6f-07c2-4e58-97ad-ed90bf8a9b7c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "hmm... is the 'ListContains' doing an iteration operation/scripting to find/check if item is in the list, or is it able to completely bypass doing an iteration method, possibly from how quest is underlyingly coded (via its OOP design) ???\r\n\r\nSomeday, I'm going to dive into quest's coding, and get familiarized with it... so busy with school work, sighs.",
      "EditableFormat": "markdown",
      "HTML": "<p>hmm... is the 'ListContains' doing an iteration operation/scripting to find/check if item is in the list, or is it able to completely bypass doing an iteration method, possibly from how quest is underlyingly coded (via its OOP design) ???</p>\n<p>Someday, I'm going to dive into quest's coding, and get familiarized with it... so busy with school work, sighs.</p>\n\n",
      "PostDate": "2016-11-30T09:01:43.3924012Z",
      "LastEditDate": null
    },
    {
      "PostId": "3e03e737-62f7-416c-9b6f-e1d02a5d9968",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There is a function to do that in C#, called `Contains`, and I guess it uses that. That well be written in C or even machine code for speed, given how often it will get used, so may not be OOP coded ultimately. At whatever level it does the actual work, it will iterate thrpugh the list as you have, I assume, though it is likely to jump out of the loop when it finds a match (which you could have done with a `return(true)`)",
      "EditableFormat": "markdown",
      "HTML": "<p>There is a function to do that in C#, called <code>Contains</code>, and I guess it uses that. That well be written in C or even machine code for speed, given how often it will get used, so may not be OOP coded ultimately. At whatever level it does the actual work, it will iterate thrpugh the list as you have, I assume, though it is likely to jump out of the loop when it finds a match (which you could have done with a <code>return(true)</code>)</p>\n\n",
      "PostDate": "2016-11-30T09:24:52.6738482Z",
      "LastEditDate": "2016-11-30T09:26:13.8779572Z"
    },
    {
      "PostId": "cc9e1974-85a6-4ed6-9a2c-1825e4c11dd2",
      "UserId": 163617,
      "Username": "Deckrect ",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh, got it. It is the GUI's \"If Object had Object\".",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh, got it. It is the GUI's \"If Object had Object\".</p>\n\n",
      "PostDate": "2016-11-30T19:38:08.5644487Z",
      "LastEditDate": null
    }
  ]
}
