{
  "Topic": {
    "TopicId": "0fgd15pcgu2xwjlyfvkivq",
    "ForumId": "10",
    "Title": "Drop Script Issue",
    "LastUpdated": "2020-05-01T08:24:35.7733594Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "4ecef88f-88ef-4890-9966-dd7d38c1dc32",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I get this error from a new script I added in the drop script of an object named wood_shield. It allows for the dropping of an equipped item.\r\n```\r\nError running script: Error evaluating expression 'ListContains(player.equipped, this)': Unable to cast object of type 'TextAdventures.Quest.Element' to type 'System.String'.\r\n```\r\n**This is the drop script.**\r\n```\r\nif (player.shield = this) {\r\n  DropEquipped (this)\r\n}\r\nelse if (ListContains(player.equipped, this)) { /// A string list but I tried an objectlist too.\r\n  MoveObject (this, player.parent.dropdestination)\r\n  msg (\"You drop your \" + this.alias + \".\")\r\n}\r\nelse {\r\n  msg (\"You are not carrying \" + this.prefix + \" \" + this.alias + \".\")\r\n}\r\n```\r\nTwo days now and can't fix.\r\nI need player.equipped to be a list. My functions work off it.\r\n\r\n**The function DropEquipped**\r\n```\r\nlist remove (object.inventoryverbs, \"Unequip\")\r\nobject.listalias = Replace(object.listalias, \" (equipped)\", \"\")\r\nif (HasAttribute (object, \"one_handed\")) {\r\n  player.onehanded = null\r\n}\r\nif (HasAttribute (object, \"one_handed\")) {\r\n  player.onehanded2 = null\r\n}\r\nif (HasAttribute (object, \"two_handed\")) {\r\n  player.twohanded = null\r\n}\r\nif (HasAttribute (object, \"shield\")) {\r\n  player.shield = null\r\n}\r\nobject.equipped = False\r\nMoveObject (object, player.parent.dropdestination)\r\nClearTurn\r\nmsg (\"You lower your \" + object.alias + \" and drop it.\")\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I get this error from a new script I added in the drop script of an object named wood_shield. It allows for the dropping of an equipped item.</p>\n<pre><code>Error running script: Error evaluating expression 'ListContains(player.equipped, this)': Unable to cast object of type 'TextAdventures.Quest.Element' to type 'System.String'.\n</code></pre>\n<p><strong>This is the drop script.</strong></p>\n<pre><code>if (player.shield = this) {\n  DropEquipped (this)\n}\nelse if (ListContains(player.equipped, this)) { /// A string list but I tried an objectlist too.\n  MoveObject (this, player.parent.dropdestination)\n  msg (\"You drop your \" + this.alias + \".\")\n}\nelse {\n  msg (\"You are not carrying \" + this.prefix + \" \" + this.alias + \".\")\n}\n</code></pre>\n<p>Two days now and can't fix.<br>\nI need player.equipped to be a list. My functions work off it.</p>\n<p><strong>The function DropEquipped</strong></p>\n<pre><code>list remove (object.inventoryverbs, \"Unequip\")\nobject.listalias = Replace(object.listalias, \" (equipped)\", \"\")\nif (HasAttribute (object, \"one_handed\")) {\n  player.onehanded = null\n}\nif (HasAttribute (object, \"one_handed\")) {\n  player.onehanded2 = null\n}\nif (HasAttribute (object, \"two_handed\")) {\n  player.twohanded = null\n}\nif (HasAttribute (object, \"shield\")) {\n  player.shield = null\n}\nobject.equipped = False\nMoveObject (object, player.parent.dropdestination)\nClearTurn\nmsg (\"You lower your \" + object.alias + \" and drop it.\")\n</code></pre>\n\n",
      "PostDate": "2020-05-01T08:24:35.7733594Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "25689d2b-775f-4ff8-8049-d11778341e06",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's a strange error message; I've only seen that when trying to use ListContains on a dictionary (ooops).\r\n\r\nI'll try poking it later, see if I can figure out what's going on.\r\n\r\n> `else if (ListContains(player.equipped, this)) { /// A string list but I tried an objectlist too`\r\n\r\nA stringlist will generate an error (but I wouldn't expect *that* error). `this` is an object, so it can only go in an objectlist\r\n\r\n<hr />\r\n\r\nBut beyond that, your logic seems a little confused. `player.equipped` is a list of objects which aren't equipped but can be dropped? If an object is in the inventory but not in `player.equipped`, it displays the message \"You aren't carrying …\"? And if an object is both in that list and in the inventory, the player can drop it but it remains in the list?\r\n\r\nI hope you know what those variables represent, because it isn't obvious from the names :p",
      "EditableFormat": "markdown",
      "HTML": "<p>That's a strange error message; I've only seen that when trying to use ListContains on a dictionary (ooops).</p>\n<p>I'll try poking it later, see if I can figure out what's going on.</p>\n<blockquote>\n<p><code>else if (ListContains(player.equipped, this)) { /// A string list but I tried an objectlist too</code></p>\n</blockquote>\n<p>A stringlist will generate an error (but I wouldn't expect <em>that</em> error). <code>this</code> is an object, so it can only go in an objectlist</p>\n<hr>\n<p>But beyond that, your logic seems a little confused. <code>player.equipped</code> is a list of objects which aren't equipped but can be dropped? If an object is in the inventory but not in <code>player.equipped</code>, it displays the message \"You aren't carrying …\"? And if an object is both in that list and in the inventory, the player can drop it but it remains in the list?</p>\n<p>I hope you know what those variables represent, because it isn't obvious from the names :p</p>\n\n",
      "PostDate": "2020-05-01T09:53:24.1611574Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "eaf0b2e5-2ece-4913-8bfe-7ff4d2605474",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">player.equipped is a list of objects which aren't equipped but can be dropped?\r\n\r\nThese are going to be a list of different weapons and or shields that can be equipped and, yes, dropped.  I could not see why a player could not drop an equipped weapon so I am trying to do just that.\r\n\r\nThe other line needs to be changed again. I was messing with the script and left that line from another setup. It should read\r\n```else if ( not ListContains(player.equipped, this) and this.parent = player)``` (if that is correct code.)\r\n\r\n\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>player.equipped is a list of objects which aren't equipped but can be dropped?</p>\n</blockquote>\n<p>These are going to be a list of different weapons and or shields that can be equipped and, yes, dropped.  I could not see why a player could not drop an equipped weapon so I am trying to do just that.</p>\n<p>The other line needs to be changed again. I was messing with the script and left that line from another setup. It should read<br>\n<code>else if ( not ListContains(player.equipped, this) and this.parent = player)</code> (if that is correct code.)</p>\n\n",
      "PostDate": "2020-05-01T10:17:16.3145371Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8672ce4f-e8e4-4213-a7c8-9f7b70826043",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You don't need to check for `this.parent = player` - if it isn't, the drop script won't even be run.\r\n\r\nSo `player.equipped` is a list of items that *can* be equipped? It seems strange to check that in the drop script; in that case it's only meaningful to know if the item is currently equipped.\r\n\r\nAlso, looking at the function presented there, it looks like a player can equip two single-handed weapons; but dropping either of them will unequip both but leave the other one with \"(equipped)\" in its listalias.\r\n\r\nThis is very confusing code :p",
      "EditableFormat": "markdown",
      "HTML": "<p>You don't need to check for <code>this.parent = player</code> - if it isn't, the drop script won't even be run.</p>\n<p>So <code>player.equipped</code> is a list of items that <em>can</em> be equipped? It seems strange to check that in the drop script; in that case it's only meaningful to know if the item is currently equipped.</p>\n<p>Also, looking at the function presented there, it looks like a player can equip two single-handed weapons; but dropping either of them will unequip both but leave the other one with \"(equipped)\" in its listalias.</p>\n<p>This is very confusing code :p</p>\n\n",
      "PostDate": "2020-05-01T12:18:20.6305423Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6e31c065-822a-4cf4-92b4-f8aa445eb4ae",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have been making so many changes and in desperation, I posted a script in mid change. I thought the error would be something obvious. I clean it up later. Been up to long trying to fix it. Time to rest and regroup.\r\nThe second \r\n```\r\nif (HasAttribute (object, \"one_handed\")) {\r\n  player.onehanded2 = null\r\n}\r\n```\r\nshould be\r\n```\r\nif (HasAttribute (object, \"one_handed2\")) {\r\n  player.onehanded2 = null\r\n}\r\n```\r\nI was thinking of allowing a dual sword thing but needed to fix the issue first.  Anyway. lol.  I'll get it as close to right as I can the repost.\r\nwait. I grabbed this from an older copy of game.\r\n```\r\nif (ListContains(player.equipped, this)) {\r\n  DropEquipped (this)\r\n}\r\nelse {\r\n  MoveObject (this, player.parent.dropdestination)\r\n  msg (\"You drop your \" + this.alias + \".\")\r\n}\r\nelse {\r\n  msg (\"You are not carrying \" + this.prefix + \" \" + this.alias + \".\")\r\n}\r\n```\r\nOh yeah, the List player.equipped is not a list of objects that **can** be equipped but **are** equipped at the time.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I have been making so many changes and in desperation, I posted a script in mid change. I thought the error would be something obvious. I clean it up later. Been up to long trying to fix it. Time to rest and regroup.<br>\nThe second</p>\n<pre><code>if (HasAttribute (object, \"one_handed\")) {\n  player.onehanded2 = null\n}\n</code></pre>\n<p>should be</p>\n<pre><code>if (HasAttribute (object, \"one_handed2\")) {\n  player.onehanded2 = null\n}\n</code></pre>\n<p>I was thinking of allowing a dual sword thing but needed to fix the issue first.  Anyway. lol.  I'll get it as close to right as I can the repost.<br>\nwait. I grabbed this from an older copy of game.</p>\n<pre><code>if (ListContains(player.equipped, this)) {\n  DropEquipped (this)\n}\nelse {\n  MoveObject (this, player.parent.dropdestination)\n  msg (\"You drop your \" + this.alias + \".\")\n}\nelse {\n  msg (\"You are not carrying \" + this.prefix + \" \" + this.alias + \".\")\n}\n</code></pre>\n<p>Oh yeah, the List player.equipped is not a list of objects that <strong>can</strong> be equipped but <strong>are</strong> equipped at the time.</p>\n\n",
      "PostDate": "2020-05-01T13:21:27.5410894Z",
      "LastEditDate": "2020-05-01T13:32:39.8634427Z",
      "link": null
    },
    {
      "PostId": "fb007382-d6ee-42e3-aca3-ec343166c0e0",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I also note that you're using `player.parent.dropdestination` - that's a bad idea, because the drop script is also run when the player enters \"put X in Y\".\r\n\r\nIn a drop script, you should use the provided variable `destination` to tell you where the object should go. This will always be the place an object would be sent to if there wasn't a drop script (dropdestination if it exists, game.pov.parent otherwise, and a container if the player's command was \"put X in Y\")\r\n\r\nHope you don't mind me poking at your code; but thought it might be easier to point out a potential problem that might not be so obvious.\r\n\r\nFrom the code I see so far (kind of guessing what some of your variables are used for), I suspect that I would have it looking more like:\r\n```\r\nmessage = \"You drop your \" + this.alias + \".\"\r\nforeach (slot, Split(\"onehanded;onehanded2;twohanded;shield\")) {\r\n  if (GetAttribute (player, slot) = this) {\r\n    message = \"You lower your \" + this.alias + \" and drop \" + this.article + \".\"\r\n    set (player, slot, null)\r\n    list remove (this.inventoryverbs, \"Unequip\")\r\n    this.listalias = Replace (this.listalias, \" (equipped)\", \"\")\r\n  }\r\n}\r\nMoveObject (this, destination)\r\nClearTurn\r\nmsg (message)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I also note that you're using <code>player.parent.dropdestination</code> - that's a bad idea, because the drop script is also run when the player enters \"put X in Y\".</p>\n<p>In a drop script, you should use the provided variable <code>destination</code> to tell you where the object should go. This will always be the place an object would be sent to if there wasn't a drop script (dropdestination if it exists, game.pov.parent otherwise, and a container if the player's command was \"put X in Y\")</p>\n<p>Hope you don't mind me poking at your code; but thought it might be easier to point out a potential problem that might not be so obvious.</p>\n<p>From the code I see so far (kind of guessing what some of your variables are used for), I suspect that I would have it looking more like:</p>\n<pre><code>message = \"You drop your \" + this.alias + \".\"\nforeach (slot, Split(\"onehanded;onehanded2;twohanded;shield\")) {\n  if (GetAttribute (player, slot) = this) {\n    message = \"You lower your \" + this.alias + \" and drop \" + this.article + \".\"\n    set (player, slot, null)\n    list remove (this.inventoryverbs, \"Unequip\")\n    this.listalias = Replace (this.listalias, \" (equipped)\", \"\")\n  }\n}\nMoveObject (this, destination)\nClearTurn\nmsg (message)\n</code></pre>\n\n",
      "PostDate": "2020-05-01T17:50:09.741584Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "85ed89b1-5af2-4286-a670-a790d97a2acd",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well, now that I've rested a bit and went over your advice, I didn't realize when making your own script that some of the default Quest functions stayed in effect. \r\n\r\nI just need to add this to the object's drop script.  (For Equippable objects)\r\n```\r\nthis.equipped = False\r\nplayer.shield = null\r\nlist remove (this.inventoryverbs, \"Unequip\")\r\nthis.listalias = Replace(this.listalias, \" (equipped)\", \"\")\r\nMoveObject (this, player.parent.dropdestination)\r\nClearTurn\r\nmsg (\"You lower your \" + this.alias + \" and drop it.\")\r\n```\r\nSheesh and Thanks 😁",
      "EditableFormat": "markdown",
      "HTML": "<p>Well, now that I've rested a bit and went over your advice, I didn't realize when making your own script that some of the default Quest functions stayed in effect.</p>\n<p>I just need to add this to the object's drop script.  (For Equippable objects)</p>\n<pre><code>this.equipped = False\nplayer.shield = null\nlist remove (this.inventoryverbs, \"Unequip\")\nthis.listalias = Replace(this.listalias, \" (equipped)\", \"\")\nMoveObject (this, player.parent.dropdestination)\nClearTurn\nmsg (\"You lower your \" + this.alias + \" and drop it.\")\n</code></pre>\n<p>Sheesh and Thanks 😁</p>\n\n",
      "PostDate": "2020-05-01T18:42:08.8814072Z",
      "LastEditDate": "2020-05-01T18:44:09.9602868Z",
      "link": null
    },
    {
      "PostId": "156ec51a-7003-4092-8791-9fc3759ede13",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh, added a line to remove any bonus the item gives.\r\n```\r\ndo (player.onehanded, \"no_bonus\")\r\n```\r\nAnd I should be able to create a type for each kind of equipment item and add this whole drop script to it. Right?",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh, added a line to remove any bonus the item gives.</p>\n<pre><code>do (player.onehanded, \"no_bonus\")\n</code></pre>\n<p>And I should be able to create a type for each kind of equipment item and add this whole drop script to it. Right?</p>\n\n",
      "PostDate": "2020-05-01T18:55:09.4676374Z",
      "LastEditDate": "2020-05-01T19:01:55.4762136Z",
      "link": null
    },
    {
      "PostId": "c8ca81d7-12ea-473c-b8f3-a52b76538718",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Presumably with the line `player.shield = null` being different for each type :-p\r\n\r\nYou also still have `player.parent.dropdestination` rather than `destination`; and you're now not checking if the object is equipped.\r\n\r\nAssuming that `this.equipped` is set to true when the object is equipped, that would be:\r\n```\r\nClearTurn\r\nMoveObject (this, destination)\r\nif (this.equipped) {\r\n  this.equipped = False\r\n  player.shield = null\r\n  list remove (this.inventoryverbs, \"Unequip\")\r\n  this.listalias = Replace(this.listalias, \" (equipped)\", \"\")\r\n  msg (\"You lower your \" + this.alias + \" and drop it.\")\r\n}\r\nelse {\r\n  msg (\"You drop the \" + this.alias + \".\")\r\n}\r\n```\r\n\r\n(I would also expect \"Equip\" to be added to its inventoryverbs; but maybe you add that elsewhere)",
      "EditableFormat": "markdown",
      "HTML": "<p>Presumably with the line <code>player.shield = null</code> being different for each type :-p</p>\n<p>You also still have <code>player.parent.dropdestination</code> rather than <code>destination</code>; and you're now not checking if the object is equipped.</p>\n<p>Assuming that <code>this.equipped</code> is set to true when the object is equipped, that would be:</p>\n<pre><code>ClearTurn\nMoveObject (this, destination)\nif (this.equipped) {\n  this.equipped = False\n  player.shield = null\n  list remove (this.inventoryverbs, \"Unequip\")\n  this.listalias = Replace(this.listalias, \" (equipped)\", \"\")\n  msg (\"You lower your \" + this.alias + \" and drop it.\")\n}\nelse {\n  msg (\"You drop the \" + this.alias + \".\")\n}\n</code></pre>\n<p>(I would also expect \"Equip\" to be added to its inventoryverbs; but maybe you add that elsewhere)</p>\n\n",
      "PostDate": "2020-05-01T20:40:50.7087592Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
