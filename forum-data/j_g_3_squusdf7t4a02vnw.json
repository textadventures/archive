{
  "Topic": {
    "TopicId": "j_g_3_squusdf7t4a02vnw",
    "ForumId": "24",
    "Title": "Player wanting to change name after asking for confirmation?",
    "LastUpdated": "2021-09-24T18:50:03.0163086Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "9aa1fe3e-17f3-49c3-9e5b-3d550d1b5f47",
      "UserId": 560902,
      "Username": "Ozzy_Headwinged",
      "AvatarUrl": "https://secure.gravatar.com/avatar/17fd796ef8d0165f6a2cf63cf3d23ba0?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I want to give the player the ability to choose their name. But to make sure that it's not wrong I want to confirm it. How do I turn the player back into answering the name if they pick \"no\"? Can I even put the player back and erase the player's first choice of \"Name\"? I just want to make sure that they can have the name they want.\r\n```\r\nIt's nice to meet someone so interesting as...\r\n\r\nWell...\r\n\r\n[[What is your name?]]\r\n\r\n[[What is your name?]]:\r\n\r\n<textarea id=\"text_first\"></textarea>\r\n\r\n[[Is this the name you want?]](Click here when done)\r\n\r\n[[Click here when done]]:\r\n\r\n    squiffy.set(\"Name\", jQuery(\"#text_first\").val());\r\n\r\nSo your name is {Name}?\r\n\r\n[Yeah]\r\n[No]\r\n\r\n[No]:\r\n[[What is your name?]]\r\n\r\n[Yeah]:\r\nHow nice to know your name, {Name}!\r\n```\r\n\r\nThe problem is that it keeps the first chosen name and doesn't update it. I want to maybe be able to go back and change it fully replacing the \"Name\" with the new one that the player has chosen.",
      "EditableFormat": "markdown",
      "HTML": "<p>I want to give the player the ability to choose their name. But to make sure that it's not wrong I want to confirm it. How do I turn the player back into answering the name if they pick \"no\"? Can I even put the player back and erase the player's first choice of \"Name\"? I just want to make sure that they can have the name they want.</p>\n<pre><code>It's nice to meet someone so interesting as...\n\nWell...\n\n[[What is your name?]]\n\n[[What is your name?]]:\n\n&lt;textarea id=\"text_first\"&gt;&lt;/textarea&gt;\n\n[[Is this the name you want?]](Click here when done)\n\n[[Click here when done]]:\n\n    squiffy.set(\"Name\", jQuery(\"#text_first\").val());\n\nSo your name is {Name}?\n\n[Yeah]\n[No]\n\n[No]:\n[[What is your name?]]\n\n[Yeah]:\nHow nice to know your name, {Name}!\n</code></pre>\n<p>The problem is that it keeps the first chosen name and doesn't update it. I want to maybe be able to go back and change it fully replacing the \"Name\" with the new one that the player has chosen.</p>\n\n",
      "PostDate": "2021-09-24T18:50:03.0163086Z",
      "LastEditDate": "2021-09-24T19:09:53.7594137Z",
      "link": null
    },
    {
      "PostId": "9194458e-dec8-46ba-9dfd-5f03708aaf5b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I suspect that the problem is that you've got 2 textareas with the same ID, and when you do that jQuery only finds the first.\r\n\r\nIf the player scrolled up and changed their name in the *first* input, then it would let them change it.\r\n\r\nOne way to do this would be to remove the first form field, so that it isn't there for jQuery to find the second time. Or to replace it with plain text. For example, changing the javascript  line to:\r\n```\r\n    jQuery(\"#text_first\").replaceWith(function () {\r\n        squiffy.set(\"Name\", jQuery(this).val());\r\n        return ($('<p>').text($(this).val()));\r\n    });\r\n```\r\nEdit: Missing brackets. Sorry about that.",
      "EditableFormat": "markdown",
      "HTML": "<p>I suspect that the problem is that you've got 2 textareas with the same ID, and when you do that jQuery only finds the first.</p>\n<p>If the player scrolled up and changed their name in the <em>first</em> input, then it would let them change it.</p>\n<p>One way to do this would be to remove the first form field, so that it isn't there for jQuery to find the second time. Or to replace it with plain text. For example, changing the javascript  line to:</p>\n<pre><code>    jQuery(\"#text_first\").replaceWith(function () {\n        squiffy.set(\"Name\", jQuery(this).val());\n        return ($('&lt;p&gt;').text($(this).val()));\n    });\n</code></pre>\n<p>Edit: Missing brackets. Sorry about that.</p>\n\n",
      "PostDate": "2021-09-24T19:50:55.7597742Z",
      "LastEditDate": "2021-09-25T00:44:42.3891768Z",
      "link": null
    },
    {
      "PostId": "502d8664-d168-4b34-812d-7f4c3d7d37b1",
      "UserId": 560902,
      "Username": "Ozzy_Headwinged",
      "AvatarUrl": "https://secure.gravatar.com/avatar/17fd796ef8d0165f6a2cf63cf3d23ba0?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Now it doesn't want to continue forward to the question of keeping the name?\r\n\r\n```\r\nWell...\r\n\r\n[[What is your name?]]\r\n\r\n[[What is your name?]]:\r\n\r\n<textarea id=\"text_first\"></textarea>\r\n\r\n[[Is this the name you want?]](Click here when done)\r\n\r\n[[Click here when done]]:\r\n\r\n    jQuery(\"#text_first\").replaceWith(function () {\r\n        squiffy.set(\"Name\", jQuery(this).val());\r\n        return ($('<p>').text(this.val()));\r\n    });\r\n\r\nSo your name is {Name}?\r\n```\r\nDid I miss something?",
      "EditableFormat": "markdown",
      "HTML": "<p>Now it doesn't want to continue forward to the question of keeping the name?</p>\n<pre><code>Well...\n\n[[What is your name?]]\n\n[[What is your name?]]:\n\n&lt;textarea id=\"text_first\"&gt;&lt;/textarea&gt;\n\n[[Is this the name you want?]](Click here when done)\n\n[[Click here when done]]:\n\n    jQuery(\"#text_first\").replaceWith(function () {\n        squiffy.set(\"Name\", jQuery(this).val());\n        return ($('&lt;p&gt;').text(this.val()));\n    });\n\nSo your name is {Name}?\n</code></pre>\n<p>Did I miss something?</p>\n\n",
      "PostDate": "2021-09-24T20:20:23.7897522Z",
      "LastEditDate": "2021-09-24T20:24:06.4703822Z",
      "link": null
    },
    {
      "PostId": "abc7eff7-6546-4ced-b8dc-27d8f5ee932f",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "mrangel's JS answers are consistently brief, elegant, and seemingly magical. I'm only recently learning that there's a difference between inefficient and readable JS and efficient magic-spell-looking JS. I'm sorta getting the hang of the former. Sorta.\r\n\r\nI always try to find a pure Squiffy or mostly Squiffy answer for everything. If you don't mind clearing your screen with ```@clear```, this solution allows the player to change their name or continue on:\r\n```It's nice to meet someone so interesting as...\r\n\r\nWell...\r\n\r\n[[What is your name?]]\r\n\r\n[[What is your name?]]:\r\n@clear\r\n\r\n<input id=\"text_first\">\r\n\r\n[[Is this the name you want?]](Click here when done)\r\n\r\n[[Click here when done]]:\r\n\r\n    squiffy.set(\"Name\", jQuery(\"#text_first\").val());\r\n\r\nSo your name is {Name}?\r\n\r\n[Yeah]\r\n[No]\r\n\r\n[No]:\r\n[[What is your name?]]\r\n\r\n[Yeah]:\r\nHow nice to know your name, {Name}!\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>mrangel's JS answers are consistently brief, elegant, and seemingly magical. I'm only recently learning that there's a difference between inefficient and readable JS and efficient magic-spell-looking JS. I'm sorta getting the hang of the former. Sorta.</p>\n<p>I always try to find a pure Squiffy or mostly Squiffy answer for everything. If you don't mind clearing your screen with <code>@clear</code>, this solution allows the player to change their name or continue on:</p>\n<pre><code>\nWell...\n\n[[What is your name?]]\n\n[[What is your name?]]:\n@clear\n\n&lt;input id=\"text_first\"&gt;\n\n[[Is this the name you want?]](Click here when done)\n\n[[Click here when done]]:\n\n    squiffy.set(\"Name\", jQuery(\"#text_first\").val());\n\nSo your name is {Name}?\n\n[Yeah]\n[No]\n\n[No]:\n[[What is your name?]]\n\n[Yeah]:\nHow nice to know your name, {Name}!\n</code></pre>\n\n",
      "PostDate": "2021-09-24T22:41:45.0457934Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d0dce63f-cbd6-4f0b-a07b-44395f96cbfe",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry, my bad. Not sure how I managed to make an error like that; but in the last script I posted there was a `this` that should be `$(this)`. I edited it now.",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry, my bad. Not sure how I managed to make an error like that; but in the last script I posted there was a <code>this</code> that should be <code>$(this)</code>. I edited it now.</p>\n\n",
      "PostDate": "2021-09-25T00:46:20.6825022Z",
      "LastEditDate": "2021-09-25T01:02:22.765212Z",
      "link": null
    },
    {
      "PostId": "2574b4c6-4bec-4073-a9ce-a36c9a208b24",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "An alternative solution would be changing it so that if there's more than one `#text_first` it takes the last one; by changing `jQuery('#text_first')` to `jQuery('input#text_first').last()`. ",
      "EditableFormat": "markdown",
      "HTML": "<p>An alternative solution would be changing it so that if there's more than one <code>#text_first</code> it takes the last one; by changing <code>jQuery('#text_first')</code> to <code>jQuery('input#text_first').last()</code>.</p>\n\n",
      "PostDate": "2021-09-25T01:01:58.8631196Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fff7512c-92de-4f7c-a0f8-2ee2bee3f97e",
      "UserId": 560902,
      "Username": "Ozzy_Headwinged",
      "AvatarUrl": "https://secure.gravatar.com/avatar/17fd796ef8d0165f6a2cf63cf3d23ba0?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The code from both IfforClassroom and mrangel works just as well. I just want the player to see the small message before the question so mrangel's answer worked the best for me. I think that using @clear makes it harder for the player to remember what was just talked about. But I do think that it could work for the people that don't want to make the story out of too much code.\r\n\r\nThank you for the help!",
      "EditableFormat": "markdown",
      "HTML": "<p>The code from both IfforClassroom and mrangel works just as well. I just want the player to see the small message before the question so mrangel's answer worked the best for me. I think that using @clear makes it harder for the player to remember what was just talked about. But I do think that it could work for the people that don't want to make the story out of too much code.</p>\n<p>Thank you for the help!</p>\n\n",
      "PostDate": "2021-09-25T21:25:15.4534545Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
