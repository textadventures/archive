{
  "Topic": {
    "TopicId": "y5y0n51odecgqy_0hgmqfg",
    "ForumId": "10",
    "Title": "Arranging Functions ",
    "LastUpdated": "2017-08-03T14:28:50.8187044Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "2dfd9850-cf42-437b-acb1-2fffd962a887",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Heya all,\r\n\r\nIs there any way to rearrange functions in the Quest UI? It really grinds me sometimes how I can't group my functions to a particular area. Even more annoying, I seem to have found Quest goes nuts if I try and rename a function after it's already connected to things, throwing up errors and making the UI seem to hate me, so renaming all my functions to be used in a particular method that allows them to be searched easier for is proving a pain.",
      "EditableFormat": "markdown",
      "HTML": "<p>Heya all,</p>\n<p>Is there any way to rearrange functions in the Quest UI? It really grinds me sometimes how I can't group my functions to a particular area. Even more annoying, I seem to have found Quest goes nuts if I try and rename a function after it's already connected to things, throwing up errors and making the UI seem to hate me, so renaming all my functions to be used in a particular method that allows them to be searched easier for is proving a pain.</p>\n\n",
      "PostDate": "2017-08-03T14:28:50.8187044Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e761a1bb-0250-48ce-a0b3-63e1bc942b4e",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This has come up before, in general with quest re-arranging/re-sorting your Elements (Functions, Objects, etc), and I don't think Pixie has found out where this is done within quest's underlying code.\r\n\r\n--------\r\n\r\nunfortunately, the naming/labeling can't be helped... aside from knowing/creating a great system immediately already, that you never need to go back and re-name/re-label stuff (I've had to re-name/re-label stuff many times myself, very NOT fun, indeed, lol). And this only comes from practice/experience/trial-n-error. Eventually, you start developing a better and better naming/labeling convention/system/scheme, but it takes time and practice, slowly getting experience as to how to do the naming/labeling better.\r\n\r\nI myself still haven't got a good naming/labeling system either, I'm still having to go back and re-name/re-label stuff, sighs.\r\n\r\nand ya, if you change the name of something, you got to find EVERYWHERE in your code, and change all of the instances of it, from the old name to the new name, as again, the 'name' is the ID for quest, just as DNA is the ID for life. If I survived radiation mutating my cells/DNA, all uses of my DNA would be useless until updated to my new DNA, such as finger prints, DNA forensics, medical records, blood type, allergies, medicine/drugs, nutrition/diet/health, etc etc etc.\r\n\r\n------------\r\n\r\nif you want to take the time, if you learn how Delegates work, you can use Objects and their Script Attributes, which is great for organization and structure/design and application, instead of using Functions.\r\n\r\n-------------\r\n\r\nor, a more simple solution is to work directly in code, as then you can write your Functions where you want them, as well as do other documentary stuff too (like section comments and etc), for an example with a library file of how I like to organize it (if I were just using a single library file ---- I now use multiple library files):\r\n\r\n(I can't include every thing that I do though in it, but you should get the idea, and you of course can add the stuff you want in it) \r\n\r\n(this would NOT be a library file that is sued by the game file, rather it's just a resource file, for you to copy and paste what you want/need from it into your game file or other library files)\r\n\r\n```\r\n<library>\r\n\r\n  <!--\r\n  Templates:\r\n  -->\r\n\r\n  <!--\r\n  Dynamic Templates\r\n  -->\r\n\r\n  // blah dynamic templates\r\n\r\n  <!--\r\n  Verb Templates\r\n  -->\r\n\r\n  // blah Verb Templates\r\n\r\n  <!--\r\n  Verbs\r\n  -->\r\n\r\n  // blah verbs\r\n\r\n  <!--\r\n  Commands\r\n  -->\r\n\r\n  // blah commands\r\n\r\n  <!--\r\n  Functions\r\n  -->\r\n\r\n  // blah functions\r\n\r\n  <!--\r\n  Turnscripts\r\n  -->\r\n\r\n  // blah turnscripts\r\n\r\n  <!--\r\n  Timers\r\n  -->\r\n\r\n  // blah timers\r\n\r\n  <!--\r\n  Object Types / Types\r\n  -->\r\n\r\n  // blah Object Types / Types\r\n\r\n  <!--\r\n  Objects\r\n  -->\r\n\r\n  <!--\r\n  Player Objects\r\n  -->\r\n\r\n  // blah player objects\r\n\r\n  <!--\r\n  Room Objects\r\n  -->\r\n\r\n  // blah room objects\r\n \r\n  <!--\r\n  Other Objects (non-room, non-player)\r\n  -->\r\n\r\n  <!--\r\n  NPC Objects\r\n  -->\r\n\r\n  // blah npc objects\r\n\r\n  <!--\r\n  Equipment Objects\r\n  -->\r\n\r\n  // blah equipment objects\r\n\r\n  <!--\r\n  Spell Objects\r\n  -->\r\n\r\n  // blah spell objects\r\n\r\n   <!--\r\n  Item Objects\r\n  -->\r\n\r\n  // blah item objects\r\n  \r\n  <!--\r\n  Attributes\r\n  -->\r\n\r\n  <!--\r\n  Boolean Attributes\r\n  -->\r\n\r\n  // blah boolean attributes\r\n\r\n  <!--\r\n  Integer Attributes\r\n  -->\r\n\r\n  // blah integer attributes\r\n\r\n  <!--\r\n  Double Attributes\r\n  -->\r\n\r\n  // blah double attributes\r\n\r\n  <!--\r\n  String Attributes\r\n  -->\r\n\r\n  // blah string attributes\r\n\r\n  <!--\r\n  Object (reference/pointer) Attributes\r\n  -->\r\n\r\n  // blah object (reference/pointer) attributes\r\n\r\n  <!--\r\n List Attributes\r\n  -->\r\n\r\n  <!--\r\n String List Attributes\r\n  -->\r\n\r\n  // blah string list attributes\r\n\r\n  <!--\r\n Object List Attributes\r\n  -->\r\n\r\n  // blah object list attributes\r\n\r\n  <!--\r\n  Dictionary Attributes\r\n  -->\r\n\r\n  <!--\r\n String Dictionary Attributes\r\n  -->\r\n\r\n  // blah string dictionary attributes\r\n\r\n <!--\r\n Object Dictionary Attributes\r\n  -->\r\n\r\n  // blah object dictionary attributes\r\n\r\n  <!--\r\n Script Dictionary Attributes\r\n  -->\r\n\r\n  // blah script dictionary attributes\r\n\r\n  <!--\r\n  Worlds\r\n  -->\r\n\r\n  <!--\r\n  World 1\r\n  -->\r\n\r\n  // blah content/stuff/Elements/Objects/etc\r\n\r\n<!--\r\n  World 2\r\n  -->\r\n\r\n  // blah content/stuff/Elements/Objects/etc\r\n\r\n  <!--\r\n  Combat System\r\n  -->\r\n\r\n  <!--\r\n  Magic System\r\n  -->\r\n\r\n  <!--\r\n  Item System\r\n  -->\r\n\r\n  <!--\r\n  Equipment system\r\n  -->\r\n\r\n  <!--\r\n  Storage System\r\n  -->\r\n\r\n  <!--\r\n  Diplomacy (Dialogue/Conversation/Topic) System\r\n  -->\r\n\r\n  <!--\r\n  Stealth System\r\n  -->\r\n\r\n  <!--\r\n  Transaction System (bartering/shopping)\r\n  -->\r\n\r\n  <!--\r\n  Game Mechanics/Equations/Formulas\r\n  -->\r\n\r\n  <!--\r\n  Additional Notes\r\n  -->\r\n\r\n</library>\r\n```\r\n\r\n-------------------\r\n\r\nAlso....\r\n\r\nyou can always use the software's 'find' feature too, as almost all such software has the 'find' feature in it, for finding stuff in your code or essay or whatever, lol\r\n\r\n--------------\r\n\r\nwhere/when you can, try to use 'this' in your scripting, as this way if you change the parent Object's name, you don't need to worry about changing the scripting, as 'this' GETS whatever is the parent Object of the scripting, for example:\r\n\r\n```\r\n<object name=\"joe\">\r\n  <attr name=\"talk\" type=\"script\">\r\n    msg (\"Hi, my name is \" + this.name)\r\n  </attr>\r\n</object>\r\n\r\nand if I were to change the name:\r\n\r\n<object name=\"john\">\r\n  <attr name=\"talk\" type=\"script\">\r\n    msg (\"Hi, my name is \" + this.name)\r\n  </attr>\r\n</object>\r\n\r\n// NO error! it (the scripting) still works! And I didn't have to change the 'this.name', either!\r\n\r\n// (this might not seem like a big deal, but take this and scale it up to a huge game with lots of Objects and lots of scripting and lots of uses of those Objects and their Attributes in other scriptings (Functions, Commands, etc) all over your gam, and now it is a big deal!)\r\n\r\n// ----------------\r\n\r\nwhereas... (YUCK!)....\r\n\r\n<object name=\"joe\">\r\n  <attr name=\"talk\" type=\"script\">\r\n    msg (\"Hi, my name is \" + joe.name)\r\n  </attr>\r\n</object>\r\n\r\nand if I were to change the name:\r\n\r\n<object name=\"john\">\r\n  <attr name=\"talk\" type=\"script\">\r\n    msg (\"Hi, my name is \" + joe.name)\r\n  </attr>\r\n</object>\r\n\r\n// ERROR, as I didn't change all the uses of 'joe' to 'john'\r\n\r\nfixed up so NO error:\r\n\r\n<object name=\"john\">\r\n  <attr name=\"talk\" type=\"script\">\r\n    msg (\"Hi, my name is \" + john.name)\r\n  </attr>\r\n</object>\r\n\r\n// but as you scale this up... it's a real pain to have to change the uses of the names... so use 'this' where/when you can in scripting.\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>This has come up before, in general with quest re-arranging/re-sorting your Elements (Functions, Objects, etc), and I don't think Pixie has found out where this is done within quest's underlying code.</p>\n<hr>\n<p>unfortunately, the naming/labeling can't be helped... aside from knowing/creating a great system immediately already, that you never need to go back and re-name/re-label stuff (I've had to re-name/re-label stuff many times myself, very NOT fun, indeed, lol). And this only comes from practice/experience/trial-n-error. Eventually, you start developing a better and better naming/labeling convention/system/scheme, but it takes time and practice, slowly getting experience as to how to do the naming/labeling better.</p>\n<p>I myself still haven't got a good naming/labeling system either, I'm still having to go back and re-name/re-label stuff, sighs.</p>\n<p>and ya, if you change the name of something, you got to find EVERYWHERE in your code, and change all of the instances of it, from the old name to the new name, as again, the 'name' is the ID for quest, just as DNA is the ID for life. If I survived radiation mutating my cells/DNA, all uses of my DNA would be useless until updated to my new DNA, such as finger prints, DNA forensics, medical records, blood type, allergies, medicine/drugs, nutrition/diet/health, etc etc etc.</p>\n<hr>\n<p>if you want to take the time, if you learn how Delegates work, you can use Objects and their Script Attributes, which is great for organization and structure/design and application, instead of using Functions.</p>\n<hr>\n<p>or, a more simple solution is to work directly in code, as then you can write your Functions where you want them, as well as do other documentary stuff too (like section comments and etc), for an example with a library file of how I like to organize it (if I were just using a single library file ---- I now use multiple library files):</p>\n<p>(I can't include every thing that I do though in it, but you should get the idea, and you of course can add the stuff you want in it)</p>\n<p>(this would NOT be a library file that is sued by the game file, rather it's just a resource file, for you to copy and paste what you want/need from it into your game file or other library files)</p>\n<pre><code>&lt;library&gt;\n\n  &lt;!--\n  Templates:\n  --&gt;\n\n  &lt;!--\n  Dynamic Templates\n  --&gt;\n\n  // blah dynamic templates\n\n  &lt;!--\n  Verb Templates\n  --&gt;\n\n  // blah Verb Templates\n\n  &lt;!--\n  Verbs\n  --&gt;\n\n  // blah verbs\n\n  &lt;!--\n  Commands\n  --&gt;\n\n  // blah commands\n\n  &lt;!--\n  Functions\n  --&gt;\n\n  // blah functions\n\n  &lt;!--\n  Turnscripts\n  --&gt;\n\n  // blah turnscripts\n\n  &lt;!--\n  Timers\n  --&gt;\n\n  // blah timers\n\n  &lt;!--\n  Object Types / Types\n  --&gt;\n\n  // blah Object Types / Types\n\n  &lt;!--\n  Objects\n  --&gt;\n\n  &lt;!--\n  Player Objects\n  --&gt;\n\n  // blah player objects\n\n  &lt;!--\n  Room Objects\n  --&gt;\n\n  // blah room objects\n \n  &lt;!--\n  Other Objects (non-room, non-player)\n  --&gt;\n\n  &lt;!--\n  NPC Objects\n  --&gt;\n\n  // blah npc objects\n\n  &lt;!--\n  Equipment Objects\n  --&gt;\n\n  // blah equipment objects\n\n  &lt;!--\n  Spell Objects\n  --&gt;\n\n  // blah spell objects\n\n   &lt;!--\n  Item Objects\n  --&gt;\n\n  // blah item objects\n  \n  &lt;!--\n  Attributes\n  --&gt;\n\n  &lt;!--\n  Boolean Attributes\n  --&gt;\n\n  // blah boolean attributes\n\n  &lt;!--\n  Integer Attributes\n  --&gt;\n\n  // blah integer attributes\n\n  &lt;!--\n  Double Attributes\n  --&gt;\n\n  // blah double attributes\n\n  &lt;!--\n  String Attributes\n  --&gt;\n\n  // blah string attributes\n\n  &lt;!--\n  Object (reference/pointer) Attributes\n  --&gt;\n\n  // blah object (reference/pointer) attributes\n\n  &lt;!--\n List Attributes\n  --&gt;\n\n  &lt;!--\n String List Attributes\n  --&gt;\n\n  // blah string list attributes\n\n  &lt;!--\n Object List Attributes\n  --&gt;\n\n  // blah object list attributes\n\n  &lt;!--\n  Dictionary Attributes\n  --&gt;\n\n  &lt;!--\n String Dictionary Attributes\n  --&gt;\n\n  // blah string dictionary attributes\n\n &lt;!--\n Object Dictionary Attributes\n  --&gt;\n\n  // blah object dictionary attributes\n\n  &lt;!--\n Script Dictionary Attributes\n  --&gt;\n\n  // blah script dictionary attributes\n\n  &lt;!--\n  Worlds\n  --&gt;\n\n  &lt;!--\n  World 1\n  --&gt;\n\n  // blah content/stuff/Elements/Objects/etc\n\n&lt;!--\n  World 2\n  --&gt;\n\n  // blah content/stuff/Elements/Objects/etc\n\n  &lt;!--\n  Combat System\n  --&gt;\n\n  &lt;!--\n  Magic System\n  --&gt;\n\n  &lt;!--\n  Item System\n  --&gt;\n\n  &lt;!--\n  Equipment system\n  --&gt;\n\n  &lt;!--\n  Storage System\n  --&gt;\n\n  &lt;!--\n  Diplomacy (Dialogue/Conversation/Topic) System\n  --&gt;\n\n  &lt;!--\n  Stealth System\n  --&gt;\n\n  &lt;!--\n  Transaction System (bartering/shopping)\n  --&gt;\n\n  &lt;!--\n  Game Mechanics/Equations/Formulas\n  --&gt;\n\n  &lt;!--\n  Additional Notes\n  --&gt;\n\n&lt;/library&gt;\n</code></pre>\n<hr>\n<p>Also....</p>\n<p>you can always use the software's 'find' feature too, as almost all such software has the 'find' feature in it, for finding stuff in your code or essay or whatever, lol</p>\n<hr>\n<p>where/when you can, try to use 'this' in your scripting, as this way if you change the parent Object's name, you don't need to worry about changing the scripting, as 'this' GETS whatever is the parent Object of the scripting, for example:</p>\n<pre><code>&lt;object name=\"joe\"&gt;\n  &lt;attr name=\"talk\" type=\"script\"&gt;\n    msg (\"Hi, my name is \" + this.name)\n  &lt;/attr&gt;\n&lt;/object&gt;\n\nand if I were to change the name:\n\n&lt;object name=\"john\"&gt;\n  &lt;attr name=\"talk\" type=\"script\"&gt;\n    msg (\"Hi, my name is \" + this.name)\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n// NO error! it (the scripting) still works! And I didn't have to change the 'this.name', either!\n\n// (this might not seem like a big deal, but take this and scale it up to a huge game with lots of Objects and lots of scripting and lots of uses of those Objects and their Attributes in other scriptings (Functions, Commands, etc) all over your gam, and now it is a big deal!)\n\n// ----------------\n\nwhereas... (YUCK!)....\n\n&lt;object name=\"joe\"&gt;\n  &lt;attr name=\"talk\" type=\"script\"&gt;\n    msg (\"Hi, my name is \" + joe.name)\n  &lt;/attr&gt;\n&lt;/object&gt;\n\nand if I were to change the name:\n\n&lt;object name=\"john\"&gt;\n  &lt;attr name=\"talk\" type=\"script\"&gt;\n    msg (\"Hi, my name is \" + joe.name)\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n// ERROR, as I didn't change all the uses of 'joe' to 'john'\n\nfixed up so NO error:\n\n&lt;object name=\"john\"&gt;\n  &lt;attr name=\"talk\" type=\"script\"&gt;\n    msg (\"Hi, my name is \" + john.name)\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n// but as you scale this up... it's a real pain to have to change the uses of the names... so use 'this' where/when you can in scripting.\n</code></pre>\n\n",
      "PostDate": "2017-08-03T19:21:49.9437841Z",
      "LastEditDate": "2017-08-03T19:36:01.2708232Z",
      "link": null
    },
    {
      "PostId": "a07a4205-60fc-47ef-b98b-61e849241b90",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Just copy and paste the functions in full code view.  Then delete the copied code so there is no duplication.  Just make sure the nesting (indentation) is exact when you paste the moved code.  E.g., if you move a function's code, make sure when you paste it that its indentation is flush with the adjacent functions' indentations.  If not, the game won't even load and you have to undo the paste.",
      "EditableFormat": "markdown",
      "HTML": "<p>Just copy and paste the functions in full code view.  Then delete the copied code so there is no duplication.  Just make sure the nesting (indentation) is exact when you paste the moved code.  E.g., if you move a function's code, make sure when you paste it that its indentation is flush with the adjacent functions' indentations.  If not, the game won't even load and you have to undo the paste.</p>\n\n",
      "PostDate": "2017-08-03T22:08:51.6657624Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bd516bc9-601c-4622-a77e-ca9b9aff6ed0",
      "UserId": 194873,
      "Username": "ShadowsEdge19",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a24333a42009e96c558cb89dc0c26d30?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have been working directly on code from my 2nd day using Quest and split out into multiple library files and primarily the bulk of my game is in functions, I don't have issues with indentation causing errors, just if I forget that the opening { has to stay on the same line as the function like IF (A =B) {. It doesn't like it if you separate then.",
      "EditableFormat": "markdown",
      "HTML": "<p>I have been working directly on code from my 2nd day using Quest and split out into multiple library files and primarily the bulk of my game is in functions, I don't have issues with indentation causing errors, just if I forget that the opening { has to stay on the same line as the function like IF (A =B) {. It doesn't like it if you separate then.</p>\n\n",
      "PostDate": "2017-08-03T22:59:47.7554086Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
