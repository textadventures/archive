{
  "Topic": {
    "TopicId": "2180",
    "ForumId": "10",
    "Title": "BAD PRESS!",
    "LastUpdated": "2009-08-30T18:10:59+01:00",
    "ReplyCount": 13
  },
  "Posts": [
    {
      "PostId": "16973",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Not sure how many read the I F Newsgroups, but for those that don't I refer you to the topic titled 'Anyone knows any good Quest games'.\n\nQuest gets a bit of a mauling.\n\nNow I have to say that I think a lot of the criticism (that relating to the numerous bug-ridden 'games' that should never have been released - at least not without a lot more testing) is fair comment.  What I don't agree with is that Quest itself is the problem.\n\n[quote:1fij97fk]&quot;It's just too flawed, too poorly designed, too buggy...&quot;[/quote:1fij97fk]\n\nDon't agree.  While a lot of the 'games' made with Quest certainly deserve that indictment (and worse to be honest) I do not think it is due to any inherent defect in Quest.  The problem remains that anyone can go from zero knowlege to knocking out a 'game' in Quest that 'sort of works' in a few hours.\n\nNow if you put a tyro produced 3 hr first effort out as a game - then it is surely going to suffer when compared to games made in other systems which have a much longer learning curve before one can produce anything that works as a game.  it's a fairly safe bet that a game that took 100 + hours to write is going to be a considerably better and more polished product than one that was knocked up on one wet sunday afternoon when there was nothing on TV...\n\nAnyone care to comment?\n\nMaDbRiT",
      "EditableFormat": "bbcode",
      "HTML": "Not sure how many read the I F Newsgroups, but for those that don't I refer you to the topic titled 'Anyone knows any good Quest games'.<br/><br/>Quest gets a bit of a mauling.<br/><br/>Now I have to say that I think a lot of the criticism (that relating to the numerous bug-ridden 'games' that should never have been released - at least not without a lot more testing) is fair comment.  What I don't agree with is that Quest itself is the problem.<br/><br/><blockquote><p>&quot;It's just too flawed, too poorly designed, too buggy...&quot;</p></blockquote><br/><br/>Don't agree.  While a lot of the 'games' made with Quest certainly deserve that indictment (and worse to be honest) I do not think it is due to any inherent defect in Quest.  The problem remains that anyone can go from zero knowlege to knocking out a 'game' in Quest that 'sort of works' in a few hours.<br/><br/>Now if you put a tyro produced 3 hr first effort out as a game - then it is surely going to suffer when compared to games made in other systems which have a much longer learning curve before one can produce anything that works as a game.  it's a fairly safe bet that a game that took 100 + hours to write is going to be a considerably better and more polished product than one that was knocked up on one wet sunday afternoon when there was nothing on TV...<br/><br/>Anyone care to comment?<br/><br/>MaDbRiT",
      "PostDate": "2009-08-28T12:12:06+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16974",
      "UserId": 0,
      "Username": "Alf",
      "UserAvatar": null,
      "UserGravatar": "df6fcdbeed91f46db8f5428ad267174e",
      "EditableText": "I wholeheartedly agree!\n\nAs we've discussed in other threads, the quality of a game is dependent upon the amount of time that went into it.\n\nIMO - Worst offenders:  Spelling, grammar, conversational style, unintended dead ends, to name a few.  Next: Tricky (i.e. stupid) puzzles which are supposed to add to the gameplay, but only confuse the player.\n\nQuest, like others, makes it easy to create a game.  But that's like saying that owning a car makes it easy to drive.  Both take time and effort to develop the skills required to do it well.  Another requirement (in both) is the advice and opinions of others.  When designing a game, we [hopefully] already know how the game is to be played.  Don't stop there - get a friend that knows nothing about the game to play it through and see if he/she gets the same results.  Ask them to be critical!\n\nAs I'm writing this, I am reminded of Colossal Cave.  As far as I can remember, this is where it all started.  At least on the version I played (COBOL on a Prime 50 Series computer), it was perfect!  CC should be a &quot;must play&quot; for one who wishes to create quality text adventures.",
      "EditableFormat": "bbcode",
      "HTML": "I wholeheartedly agree!<br/><br/>As we've discussed in other threads, the quality of a game is dependent upon the amount of time that went into it.<br/><br/>IMO - Worst offenders:  Spelling, grammar, conversational style, unintended dead ends, to name a few.  Next: Tricky (i.e. stupid) puzzles which are supposed to add to the gameplay, but only confuse the player.<br/><br/>Quest, like others, makes it easy to create a game.  But that's like saying that owning a car makes it easy to drive.  Both take time and effort to develop the skills required to do it well.  Another requirement (in both) is the advice and opinions of others.  When designing a game, we [hopefully] already know how the game is to be played.  Don't stop there - get a friend that knows nothing about the game to play it through and see if he/she gets the same results.  Ask them to be critical!<br/><br/>As I'm writing this, I am reminded of Colossal Cave.  As far as I can remember, this is where it all started.  At least on the version I played (COBOL on a Prime 50 Series computer), it was perfect!  CC should be a &quot;must play&quot; for one who wishes to create quality text adventures.",
      "PostDate": "2009-08-28T13:24:13+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16975",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "90% of ____ games are crud.  That's just Sturgeon's Law (paraphrased), and it's true for all systems.  Everybody posting knows that.  Systems aren't judged by the 90% crud; they are judged by the 10% that isn't crud.\n\nQuest does not have as much power as the Tier 1 languages.  Period.\n\nMuseum of Inform collects a series of demonstrations of what Inform can do.  Try porting that to Quest and see how they compare.\n\nSource: <!-- m --><a class=\"postlink\" href=\"http://ifarchive.giga.or.at/if-archive/infocom/compilers/inform6/examples/Museum.inf\">http://ifarchive.giga.or.at/if-archive/ ... Museum.inf</a><!-- m -->\nOlder compiled version: <!-- m --><a class=\"postlink\" href=\"http://ifarchive.giga.or.at/if-archive/infocom/compilers/inform5/examples/Museum.z5\">http://ifarchive.giga.or.at/if-archive/ ... /Museum.z5</a><!-- m -->",
      "EditableFormat": "bbcode",
      "HTML": "90% of ____ games are crud.  That's just Sturgeon's Law (paraphrased), and it's true for all systems.  Everybody posting knows that.  Systems aren't judged by the 90% crud; they are judged by the 10% that isn't crud.<br/><br/>Quest does not have as much power as the Tier 1 languages.  Period.<br/><br/>Museum of Inform collects a series of demonstrations of what Inform can do.  Try porting that to Quest and see how they compare.<br/><br/>Source: <!-- m --><a class=\"postlink\" href=\"http://ifarchive.giga.or.at/if-archive/infocom/compilers/inform6/examples/Museum.inf\">http://ifarchive.giga.or.at/if-archive/ ... Museum.inf</a><!-- m --><br/>Older compiled version: <!-- m --><a class=\"postlink\" href=\"http://ifarchive.giga.or.at/if-archive/infocom/compilers/inform5/examples/Museum.z5\">http://ifarchive.giga.or.at/if-archive/ ... /Museum.z5</a><!-- m -->",
      "PostDate": "2009-08-28T17:51:59+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16976",
      "UserId": 0,
      "Username": "davidw",
      "UserAvatar": null,
      "UserGravatar": "5d9c9199ac213c3e7284cd76a2262c4a",
      "EditableText": "&quot;It's just too flawed, too poorly designed, too buggy...&quot;\n\nI stand by that comment as my own experiences with Quest have shown it to be horribly buggy. The last time I used it, it was prone to crashing and often wouldn't re-open game files after crashes, forcing me to constantly rewrite. Several times I was forced to debug the code manually despite the fact that I had written it using the GUI. Flawed? Poorly designed? It lacks the power of any of the other systems (except maybe Adrift) and the ease of use of Inform or Adrift. Even when a decent Quest game comes along - Gathered in Darkness - it's hard to play it and not think how much better it would have been had it been written in TADS or Inform instead.",
      "EditableFormat": "bbcode",
      "HTML": "&quot;It's just too flawed, too poorly designed, too buggy...&quot;<br/><br/>I stand by that comment as my own experiences with Quest have shown it to be horribly buggy. The last time I used it, it was prone to crashing and often wouldn't re-open game files after crashes, forcing me to constantly rewrite. Several times I was forced to debug the code manually despite the fact that I had written it using the GUI. Flawed? Poorly designed? It lacks the power of any of the other systems (except maybe Adrift) and the ease of use of Inform or Adrift. Even when a decent Quest game comes along - Gathered in Darkness - it's hard to play it and not think how much better it would have been had it been written in TADS or Inform instead.",
      "PostDate": "2009-08-28T19:19:47+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16977",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "David wrote\n\n[quote:3449qty3]I stand by that comment as my own experiences with Quest have shown it to be horribly buggy. [/quote:3449qty3]\n\nWell, if that is your experience with it, it's fair comment and I can only sympathise.  I've not found Quest to be particularly 'crash prone' on any of my computers.  As for code made via the GUI being iffy, well, I'm a textpad sort of guy so I really can't comment on that area much (other than to say the latest GUI seems a lot less messy than the previous incarnation).\n\nI am intrigued that you group Inform with Adrift in ease of use.  Inform 6 was never exactly easy to use and I find Inform 7 slow and frustrating (although the concept is quite brilliant, my instructions never seem to parse to the code I expect them to!)\n\n[quote:3449qty3]how much better it would have been had it been written in TADS or Inform[/quote:3449qty3]\n\nYes - assuming an author had the time and inclination to learn one of those two (relatively) heavyweight systems the result might well be somewhat better.  Of course the extra time it would have taken to learn TADS could have been spent on making the Quest version better instead.  Better enough to make a real difference? - tough call!\n\nI still believe it is possible to write a perfectly good game in Quest.  Maybe not a 'brilliant' one that pushes the limits of what I.F. can do, but a properly sorted and entertaining piece should be possible.\n\nMaDbRiT",
      "EditableFormat": "bbcode",
      "HTML": "David wrote<br/><br/><blockquote><p>I stand by that comment as my own experiences with Quest have shown it to be horribly buggy. </p></blockquote><br/><br/>Well, if that is your experience with it, it's fair comment and I can only sympathise.  I've not found Quest to be particularly 'crash prone' on any of my computers.  As for code made via the GUI being iffy, well, I'm a textpad sort of guy so I really can't comment on that area much (other than to say the latest GUI seems a lot less messy than the previous incarnation).<br/><br/>I am intrigued that you group Inform with Adrift in ease of use.  Inform 6 was never exactly easy to use and I find Inform 7 slow and frustrating (although the concept is quite brilliant, my instructions never seem to parse to the code I expect them to!)<br/><br/><blockquote><p>how much better it would have been had it been written in TADS or Inform</p></blockquote><br/><br/>Yes - assuming an author had the time and inclination to learn one of those two (relatively) heavyweight systems the result might well be somewhat better.  Of course the extra time it would have taken to learn TADS could have been spent on making the Quest version better instead.  Better enough to make a real difference? - tough call!<br/><br/>I still believe it is possible to write a perfectly good game in Quest.  Maybe not a 'brilliant' one that pushes the limits of what I.F. can do, but a properly sorted and entertaining piece should be possible.<br/><br/>MaDbRiT",
      "PostDate": "2009-08-28T20:50:53+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16978",
      "UserId": 0,
      "Username": "davidw",
      "UserAvatar": null,
      "UserGravatar": "5d9c9199ac213c3e7284cd76a2262c4a",
      "EditableText": "&quot;I am intrigued that you group Inform with Adrift in ease of use. Inform 6 was never exactly easy to use and I find Inform 7 slow and frustrating (although the concept is quite brilliant, my instructions never seem to parse to the code I expect them to!)&quot;\n\nI should probably have clarified that for ease of use I meant Inform 7. I'm not a coder so 6 was just foreign to me most of the time. But yes, I find Inform 7, at least the basics, very easy to use. It's not as easy as Adrift, and it's certainly not 'natural language' the way its designers claim, but putting together a relatively straightforward game in 7 isn't hard at all.\n\n&quot;Yes - assuming an author had the time and inclination to learn one of those two (relatively) heavyweight systems the result might well be somewhat better.&quot;\n\nAs I said above, I'm not a coder so I don't really know how much harder it would be to learn TADS or Quest, but I do see tutorials galore around the internet for TADS. I see none for Quest. If I was going to learn one, which would I choose - the one with tutorials explaining the finer aspects of coding and the one which has a very good reputation or the one with no (or very few) tutorials and a terrible reputation?\n\n&quot;Of course the extra time it would have taken to learn TADS could have been spent on making the Quest version better instead. Better enough to make a real difference? - tough call!&quot;\n\nTo be honest, you'd have to spend one heck of a long time improving your Quest version before it came close to the standards of a TADS game. Even then, you'd still be stuck having people play your game in the default Quest player which would put it way behind the TADS version anyway.\n\n&quot;I still believe it is possible to write a perfectly good game in Quest. Maybe not a 'brilliant' one that pushes the limits of what I.F. can do, but a properly sorted and entertaining piece should be possible.&quot;\n\nI think I said something similar in my review of Gathered in Darkness. But - and here's the thing I never really understand - why settle for writing a game in one badly flawed system when you could write it in another far better system?",
      "EditableFormat": "bbcode",
      "HTML": "&quot;I am intrigued that you group Inform with Adrift in ease of use. Inform 6 was never exactly easy to use and I find Inform 7 slow and frustrating (although the concept is quite brilliant, my instructions never seem to parse to the code I expect them to!)&quot;<br/><br/>I should probably have clarified that for ease of use I meant Inform 7. I'm not a coder so 6 was just foreign to me most of the time. But yes, I find Inform 7, at least the basics, very easy to use. It's not as easy as Adrift, and it's certainly not 'natural language' the way its designers claim, but putting together a relatively straightforward game in 7 isn't hard at all.<br/><br/>&quot;Yes - assuming an author had the time and inclination to learn one of those two (relatively) heavyweight systems the result might well be somewhat better.&quot;<br/><br/>As I said above, I'm not a coder so I don't really know how much harder it would be to learn TADS or Quest, but I do see tutorials galore around the internet for TADS. I see none for Quest. If I was going to learn one, which would I choose - the one with tutorials explaining the finer aspects of coding and the one which has a very good reputation or the one with no (or very few) tutorials and a terrible reputation?<br/><br/>&quot;Of course the extra time it would have taken to learn TADS could have been spent on making the Quest version better instead. Better enough to make a real difference? - tough call!&quot;<br/><br/>To be honest, you'd have to spend one heck of a long time improving your Quest version before it came close to the standards of a TADS game. Even then, you'd still be stuck having people play your game in the default Quest player which would put it way behind the TADS version anyway.<br/><br/>&quot;I still believe it is possible to write a perfectly good game in Quest. Maybe not a 'brilliant' one that pushes the limits of what I.F. can do, but a properly sorted and entertaining piece should be possible.&quot;<br/><br/>I think I said something similar in my review of Gathered in Darkness. But - and here's the thing I never really understand - why settle for writing a game in one badly flawed system when you could write it in another far better system?",
      "PostDate": "2009-08-28T21:31:58+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16979",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "MaDbRiT:\n\nJust so we can establish a common frame of reference, could you list some games (Quest and non-Quest) that you have played?\n\nAlso:\n\n1)  In Quest:\n- A, B, and C are tests.\n- Does &quot;if A or B and C then ...&quot; mean &quot;if (A or B) and C then ...&quot; or &quot;if A or (B and C) then ...&quot;?\n\n2)  In Quest, how do you test whether two variables are exactly equal?",
      "EditableFormat": "bbcode",
      "HTML": "MaDbRiT:<br/><br/>Just so we can establish a common frame of reference, could you list some games (Quest and non-Quest) that you have played?<br/><br/>Also:<br/><br/>1)  In Quest:<br/>- A, B, and C are tests.<br/>- Does &quot;if A or B and C then ...&quot; mean &quot;if (A or B) and C then ...&quot; or &quot;if A or (B and C) then ...&quot;?<br/><br/>2)  In Quest, how do you test whether two variables are exactly equal?",
      "PostDate": "2009-08-28T22:29:48+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16982",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "Freak wrote\n\n[quote:2d2rr0ll]\nJust so we can establish a common frame of reference, could you list some games (Quest and non-Quest) that you have played?\n[/quote:2d2rr0ll]\n\nAs in`what is my base for comparisons?'\n\nWell, I first played Adventure games way back before Inform existed, and back then even wrote a (rather poor) game myself in Sinclair Basic on my ZX81. I bought a lot of the 'classic' adventures to play on the various 8 bit micros, but as the commercial viability of I.F. waned, Infocom &amp; Magnetic Scrolls disappeared and my I.F. source became the downloading of some of the entries to the annual I F competition.  I admit I only download those entries that have instant appeal to me, and I don't always finish them - either because I lose interest or (more often) other demands on my time get in the way.\n\nQuest wise, if you discount the 90% of possible downloads that require no more than a cursory glance to tell they are dross (and I'm being very kind there) there are not a lot of Quest games left and I have probably downloaded most of them.  Notice I did not say 'played' most of them, David &amp; I may not agree on everything, but it seems we both have a similar lack of patience when we encounter glaring faults that should have never got past even a minimal amount of play testing.\n\n[code:2d2rr0ll]\nIn Quest&#58;\n- A, B, and C are tests&#46;\n- Does &quot;if A or B and C then &#46;&#46;&#46;&quot; mean &quot;if (A or B) and C then &#46;&#46;&#46;&quot; or &quot;if A or (B and C) then &#46;&#46;&#46;&quot;?\n[/code:2d2rr0ll]\n\n'if A or B and C' would I think be regarded as ambiguous by Quest as you have to use parentheses around conditions.  I've simplified the actual conditions slightly here, but this is essentially how Quest would require it\n\nif ((has matches) or (has lighter)) and (has petrol) then {\ndo &lt;startfire&gt;\n}\n\n2) In Quest, how do you test whether two variables are exactly equal?\n\nif (%A% = %B%) then  {               This will  run if variables a &amp; b are equal  (for numeric variables)\nif (#A# = #B#) then {                 This will  run if variables a &amp; b are equal  (for string variables)\n\nMaDbRiT",
      "EditableFormat": "bbcode",
      "HTML": "Freak wrote<br/><br/><blockquote><p><br/>Just so we can establish a common frame of reference, could you list some games (Quest and non-Quest) that you have played?<br/></p></blockquote><br/><br/>As in`what is my base for comparisons?'<br/><br/>Well, I first played Adventure games way back before Inform existed, and back then even wrote a (rather poor) game myself in Sinclair Basic on my ZX81. I bought a lot of the 'classic' adventures to play on the various 8 bit micros, but as the commercial viability of I.F. waned, Infocom &amp; Magnetic Scrolls disappeared and my I.F. source became the downloading of some of the entries to the annual I F competition.  I admit I only download those entries that have instant appeal to me, and I don't always finish them - either because I lose interest or (more often) other demands on my time get in the way.<br/><br/>Quest wise, if you discount the 90% of possible downloads that require no more than a cursory glance to tell they are dross (and I'm being very kind there) there are not a lot of Quest games left and I have probably downloaded most of them.  Notice I did not say 'played' most of them, David &amp; I may not agree on everything, but it seems we both have a similar lack of patience when we encounter glaring faults that should have never got past even a minimal amount of play testing.<br/><br/><pre><code><br/>In Quest&#58;<br/>- A, B, and C are tests&#46;<br/>- Does &quot;if A or B and C then &#46;&#46;&#46;&quot; mean &quot;if (A or B) and C then &#46;&#46;&#46;&quot; or &quot;if A or (B and C) then &#46;&#46;&#46;&quot;?<br/></code></pre><br/><br/>'if A or B and C' would I think be regarded as ambiguous by Quest as you have to use parentheses around conditions.  I've simplified the actual conditions slightly here, but this is essentially how Quest would require it<br/><br/>if ((has matches) or (has lighter)) and (has petrol) then {<br/>do &lt;startfire&gt;<br/>}<br/><br/>2) In Quest, how do you test whether two variables are exactly equal?<br/><br/>if (%A% = %B%) then  {               This will  run if variables a &amp; b are equal  (for numeric variables)<br/>if (#A# = #B#) then {                 This will  run if variables a &amp; b are equal  (for string variables)<br/><br/>MaDbRiT",
      "PostDate": "2009-08-29T09:03:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16983",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "[quote:1skhbjqa]\nhere's the thing I never really understand - why settle for writing a game in one badly flawed system when you could write it in another far better system?[/quote:1skhbjqa]\n\nEase of Use.  Why does anyone use ADRIFT when TADS exists? Because ADRIFT is a lot easier to use, especially for the non coder.  Some people will claim anyone can learn TADS in no time at all, but frankly that's just wrong. Take a look at the TADS library, to use TADS effectively you really need to understand how it works and indeed have a working knowledge of object oriented programming,  which for most people is surely a non-trivial thing to grasp. \n\nMaDbRiT",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p><br/>here's the thing I never really understand - why settle for writing a game in one badly flawed system when you could write it in another far better system?</p></blockquote><br/><br/>Ease of Use.  Why does anyone use ADRIFT when TADS exists? Because ADRIFT is a lot easier to use, especially for the non coder.  Some people will claim anyone can learn TADS in no time at all, but frankly that's just wrong. Take a look at the TADS library, to use TADS effectively you really need to understand how it works and indeed have a working knowledge of object oriented programming,  which for most people is surely a non-trivial thing to grasp. <br/><br/>MaDbRiT",
      "PostDate": "2009-08-29T09:31:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16984",
      "UserId": 0,
      "Username": "davidw",
      "UserAvatar": null,
      "UserGravatar": "5d9c9199ac213c3e7284cd76a2262c4a",
      "EditableText": "But in what way is writing a game in Quest easier than writing a game in Inform 7? Granted, it's probably easier to code in Quest than in TADS but even myself, a non-programmer, managed to get to grips with Inform 7. However I look at it, I can't understand the reasons for people choosing Quest over any other system. If you're a coder, go with Inform or TADS; if not, go with Adrift. Put another way: what does Quest offer that the other systems don't?\n\nMy reasons for using Adrift for so many years were simply down to the fact that it was the only sensible choice for me. I wasn't a coder, I had little real desire to learn, but I *did* want to write IF. My choices were either Adrift or Quest. The first was easy to use, seemed reasonably stable and had produced some good games: the second was confusing, prone to crash and had nothing but bad games. Is it any wonder I picked Adrift?",
      "EditableFormat": "bbcode",
      "HTML": "But in what way is writing a game in Quest easier than writing a game in Inform 7? Granted, it's probably easier to code in Quest than in TADS but even myself, a non-programmer, managed to get to grips with Inform 7. However I look at it, I can't understand the reasons for people choosing Quest over any other system. If you're a coder, go with Inform or TADS; if not, go with Adrift. Put another way: what does Quest offer that the other systems don't?<br/><br/>My reasons for using Adrift for so many years were simply down to the fact that it was the only sensible choice for me. I wasn't a coder, I had little real desire to learn, but I *did* want to write IF. My choices were either Adrift or Quest. The first was easy to use, seemed reasonably stable and had produced some good games: the second was confusing, prone to crash and had nothing but bad games. Is it any wonder I picked Adrift?",
      "PostDate": "2009-08-29T12:38:12+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16985",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "[quote=&quot;MaDbRiT&quot;:j8z2od1p]Freak wrote\n\n[quote:j8z2od1p]\nJust so we can establish a common frame of reference, could you list some games (Quest and non-Quest) that you have played?\n[/quote:j8z2od1p]\n\nAs in`what is my base for comparisons?'\n\nWell, I first played Adventure games way back before Inform existed, and back then even wrote a (rather poor) game myself in Sinclair Basic on my ZX81. I bought a lot of the 'classic' adventures to play on the various 8 bit micros, but as the commercial viability of I.F. waned, Infocom &amp; Magnetic Scrolls disappeared and my I.F. source became the downloading of some of the entries to the annual I F competition.  I admit I only download those entries that have instant appeal to me, and I don't always finish them - either because I lose interest or (more often) other demands on my time get in the way.\n\nQuest wise, if you discount the 90% of possible downloads that require no more than a cursory glance to tell they are dross (and I'm being very kind there) there are not a lot of Quest games left and I have probably downloaded most of them.  Notice I did not say 'played' most of them, David &amp; I may not agree on everything, but it seems we both have a similar lack of patience when we encounter glaring faults that should have never got past even a minimal amount of play testing.[/quote:j8z2od1p]\n\nPlease give some names.  Of the non-dross games, which Quest games have you played, and where would you rank them compared to the modern non-Quest games you've played?\n\n[quote:j8z2od1p][code:j8z2od1p]\nIn Quest&#58;\n- A, B, and C are tests&#46;\n- Does &quot;if A or B and C then &#46;&#46;&#46;&quot; mean &quot;if (A or B) and C then &#46;&#46;&#46;&quot; or &quot;if A or (B and C) then &#46;&#46;&#46;&quot;?\n[/code:j8z2od1p]\n\n'if A or B and C' would I think be regarded as ambiguous by Quest as you have to use parentheses around conditions.  I've simplified the actual conditions slightly here, but this is essentially how Quest would require it\n\nif ((has matches) or (has lighter)) and (has petrol) then {\ndo &lt;startfire&gt;\n}[/quote:j8z2od1p]\n\nWhat's the correct syntax for parenthesizing?  I tried\n[code:j8z2od1p]command &lt;make fire 2&gt; if (got &lt;matches&gt; or got &lt;lighter&gt;) and got &lt;petrol&gt; then msg &lt;There's no need to make a fire at present&#46;&gt; else msg &lt;You can't make a fire&#46;  You'd need a lighter or matches, plus some petrol&#46;&gt;[/code:j8z2od1p]\nbut Quest barfs when it tries to load that.\n\nAnd that's not the question I asked.  Yes, it's ambiguous, but how does Quest resolve that ambiguity by default?\n\n[quote:j8z2od1p]2) In Quest, how do you test whether two variables are exactly equal?\n\nif (%A% = %B%) then  {               This will  run if variables a &amp; b are equal  (for numeric variables)\nif (#A# = #B#) then {                 This will  run if variables a &amp; b are equal  (for string variables)\n\nMaDbRiT[/quote:j8z2od1p]\n\nTry again.\n[code:j8z2od1p]\tcommand &lt;test&gt; {\n\t\tmsg &lt;Enter two strings to compare&#46;&gt;\n\t\tenter &lt;var1&gt;\n\t\tenter &lt;var2&gt;\n\t\tmsg &lt;Comparing &quot;#var1#&quot; to &quot;#var2#&quot;&#46;&gt;\n\t\tif ( #var1# = #var2# ) then msg &lt;They're equal!&gt; else msg &lt;They're not equal!&gt;\n\t}[/code:j8z2od1p]\n\nResult: [quote:j8z2od1p]&gt; test\nEnter two strings to compare.\nComparing &quot;x&quot; to &quot;x &quot;.\nThey're equal![/quote:j8z2od1p]\n\nThey're not equal.  One has a space at the end.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>MaDbRiT wrote:</cite>Freak wrote<br/><br/><blockquote><p><br/>Just so we can establish a common frame of reference, could you list some games (Quest and non-Quest) that you have played?<br/></blockquote><br/><br/>As in`what is my base for comparisons?'<br/><br/>Well, I first played Adventure games way back before Inform existed, and back then even wrote a (rather poor) game myself in Sinclair Basic on my ZX81. I bought a lot of the 'classic' adventures to play on the various 8 bit micros, but as the commercial viability of I.F. waned, Infocom &amp; Magnetic Scrolls disappeared and my I.F. source became the downloading of some of the entries to the annual I F competition.  I admit I only download those entries that have instant appeal to me, and I don't always finish them - either because I lose interest or (more often) other demands on my time get in the way.<br/><br/>Quest wise, if you discount the 90% of possible downloads that require no more than a cursory glance to tell they are dross (and I'm being very kind there) there are not a lot of Quest games left and I have probably downloaded most of them.  Notice I did not say 'played' most of them, David &amp; I may not agree on everything, but it seems we both have a similar lack of patience when we encounter glaring faults that should have never got past even a minimal amount of play testing.</p></blockquote><br/><br/>Please give some names.  Of the non-dross games, which Quest games have you played, and where would you rank them compared to the modern non-Quest games you've played?<br/><br/><blockquote><p><pre><code><br/>In Quest&#58;<br/>- A, B, and C are tests&#46;<br/>- Does &quot;if A or B and C then &#46;&#46;&#46;&quot; mean &quot;if (A or B) and C then &#46;&#46;&#46;&quot; or &quot;if A or (B and C) then &#46;&#46;&#46;&quot;?<br/></code></pre><br/><br/>'if A or B and C' would I think be regarded as ambiguous by Quest as you have to use parentheses around conditions.  I've simplified the actual conditions slightly here, but this is essentially how Quest would require it<br/><br/>if ((has matches) or (has lighter)) and (has petrol) then {<br/>do &lt;startfire&gt;<br/>}</p></blockquote><br/><br/>What's the correct syntax for parenthesizing?  I tried<br/><pre><code>command &lt;make fire 2&gt; if (got &lt;matches&gt; or got &lt;lighter&gt;) and got &lt;petrol&gt; then msg &lt;There's no need to make a fire at present&#46;&gt; else msg &lt;You can't make a fire&#46;  You'd need a lighter or matches, plus some petrol&#46;&gt;</code></pre><br/>but Quest barfs when it tries to load that.<br/><br/>And that's not the question I asked.  Yes, it's ambiguous, but how does Quest resolve that ambiguity by default?<br/><br/><blockquote><p>2) In Quest, how do you test whether two variables are exactly equal?<br/><br/>if (%A% = %B%) then  {               This will  run if variables a &amp; b are equal  (for numeric variables)<br/>if (#A# = #B#) then {                 This will  run if variables a &amp; b are equal  (for string variables)<br/><br/>MaDbRiT</p></blockquote><br/><br/>Try again.<br/><pre><code>\tcommand &lt;test&gt; {<br/>\t\tmsg &lt;Enter two strings to compare&#46;&gt;<br/>\t\tenter &lt;var1&gt;<br/>\t\tenter &lt;var2&gt;<br/>\t\tmsg &lt;Comparing &quot;#var1#&quot; to &quot;#var2#&quot;&#46;&gt;<br/>\t\tif ( #var1# = #var2# ) then msg &lt;They're equal!&gt; else msg &lt;They're not equal!&gt;<br/>\t}</code></pre><br/><br/>Result: <blockquote><p>&gt; test<br/>Enter two strings to compare.<br/>Comparing &quot;x&quot; to &quot;x &quot;.<br/>They're equal!</p></blockquote><br/><br/>They're not equal.  One has a space at the end.",
      "PostDate": "2009-08-29T13:37:41+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16986",
      "UserId": 0,
      "Username": "MaDbRiT",
      "UserAvatar": null,
      "UserGravatar": "c3dda772bea28be252abe6e4a646a54a",
      "EditableText": "[quote:1yge0cf6]But in what way is writing a game in Quest easier than writing a game in Inform 7? [/quote:1yge0cf6]\n\nQuest is Adrift-like in the sense it has a GUI, and yet it still has the facility to code manually in a relatively simple scripting language like (say) Alan.\n\nInform 7 has moved Inform towards ADRIFT &amp; Quest in ease of use, but there is still a gap.\n\nF.W.I.W. I agree that for you ADRIFT was the obvious and better choice of system - most definitely so at the time you chose it. It seems you have now moved to Inform 7 and I'm sure that is a very good choice too.\n\nFrankly, with my original posting I was hoping more of Quest's actual users would chime in and turn this topic into a discussion of 'how do we improve our games' - to get the output up to that potentially quite decent standard I harp on about, but it hasn't happened. \n\n&quot;You can lead a horse to water...&quot; and all that .\n\nI give up. As far as I am concerned, this topic is dead.\n\nMaDbRiT\n\nNow where did I put that TADS 3 Manual...",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>But in what way is writing a game in Quest easier than writing a game in Inform 7? </p></blockquote><br/><br/>Quest is Adrift-like in the sense it has a GUI, and yet it still has the facility to code manually in a relatively simple scripting language like (say) Alan.<br/><br/>Inform 7 has moved Inform towards ADRIFT &amp; Quest in ease of use, but there is still a gap.<br/><br/>F.W.I.W. I agree that for you ADRIFT was the obvious and better choice of system - most definitely so at the time you chose it. It seems you have now moved to Inform 7 and I'm sure that is a very good choice too.<br/><br/>Frankly, with my original posting I was hoping more of Quest's actual users would chime in and turn this topic into a discussion of 'how do we improve our games' - to get the output up to that potentially quite decent standard I harp on about, but it hasn't happened. <br/><br/>&quot;You can lead a horse to water...&quot; and all that .<br/><br/>I give up. As far as I am concerned, this topic is dead.<br/><br/>MaDbRiT<br/><br/>Now where did I put that TADS 3 Manual...",
      "PostDate": "2009-08-29T17:05:12+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16987",
      "UserId": 0,
      "Username": "lyteside",
      "UserAvatar": null,
      "UserGravatar": "8a1935c84e0128360167bbb363a419cc",
      "EditableText": "The last thing Al just wrote resonates with me concerning quest verses Adrift.  I tried both when I first got started.  I'm not a programmer, but my vision for my game ended up being something I needed programming for.  Quest simply allowed me the flexibility to start venturing into that territory on an instant gratification process.  Now at this point, Im caught in two conflicting goals...\n\n1) Now that quest has gotten me interested in programming, I can rewrite my entire game in something better and more efficient; Something that doesn't use up as much space and is more organized, etc.  Something that even breaks less...\n\n2) I can just finish my game in quest, now that Im waist deep in it, and still have fun playing and testing, and knowing that for users, I just have to make it seem clean and user friendly.",
      "EditableFormat": "bbcode",
      "HTML": "The last thing Al just wrote resonates with me concerning quest verses Adrift.  I tried both when I first got started.  I'm not a programmer, but my vision for my game ended up being something I needed programming for.  Quest simply allowed me the flexibility to start venturing into that territory on an instant gratification process.  Now at this point, Im caught in two conflicting goals...<br/><br/>1) Now that quest has gotten me interested in programming, I can rewrite my entire game in something better and more efficient; Something that doesn't use up as much space and is more organized, etc.  Something that even breaks less...<br/><br/>2) I can just finish my game in quest, now that Im waist deep in it, and still have fun playing and testing, and knowing that for users, I just have to make it seem clean and user friendly.",
      "PostDate": "2009-08-29T18:07:31+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "16988",
      "UserId": 0,
      "Username": "Freak",
      "UserAvatar": null,
      "UserGravatar": "325ed9ac125e00c9937be0d3aea0916d",
      "EditableText": "ADRIFT is limited as far as programmability goes, but it has a good standard library and a fairly shallow learning curve, and there have been a number of good games written with it.  (&quot;Goldilocks is a FOX!&quot;, &quot;The PK Girl&quot;, and &quot;Back to Life, Unfortunately&quot; to name three.)\n\n.asl is kind of similar to .t or .inf, except inconsistent and very limited, and QDK is ultimately a thin wrapper on top of .asl.\n\nSo, until the fundamental problems with .asl are fixed (and that's not going to happen unless it gets a complete rewrite), Quest's reputation isn't going to improve.\n\nOr try porting some good games to Quest and comparing the result to the original.  That'll control all the factors of game quality (such as writing quality or puzzle design) except those related to Quest.",
      "EditableFormat": "bbcode",
      "HTML": "ADRIFT is limited as far as programmability goes, but it has a good standard library and a fairly shallow learning curve, and there have been a number of good games written with it.  (&quot;Goldilocks is a FOX!&quot;, &quot;The PK Girl&quot;, and &quot;Back to Life, Unfortunately&quot; to name three.)<br/><br/>.asl is kind of similar to .t or .inf, except inconsistent and very limited, and QDK is ultimately a thin wrapper on top of .asl.<br/><br/>So, until the fundamental problems with .asl are fixed (and that's not going to happen unless it gets a complete rewrite), Quest's reputation isn't going to improve.<br/><br/>Or try porting some good games to Quest and comparing the result to the original.  That'll control all the factors of game quality (such as writing quality or puzzle design) except those related to Quest.",
      "PostDate": "2009-08-30T18:10:59+01:00",
      "LastEditDate": null
    }
  ]
}
