{
  "Topic": {
    "TopicId": "7uqjhgtrductmlpf8kweyw",
    "ForumId": "10",
    "Title": "Dice rolling in a Gamebook",
    "LastUpdated": "2022-04-29T08:06:11.0244605Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "0e9aa412-a879-48d0-bd58-cd2ca299d667",
      "UserId": 578638,
      "Username": "Inquisitor Kane",
      "AvatarUrl": "https://i.imgur.com/LJnsv6Nb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello,\r\n\r\nWhen making a random chance event in a Gamebook, is there a way how to show the player what number was \"rolled\"?\r\n\r\nI want to make the clickable link to say i.e. **\"Pry the lock open (roll 1xd6 - 50% chance)\"** or **\"Persuade the barmaid (60%)\"** and once clicked, I would like the next page to start with the value rolled, so the player sees what happened - as when you roll a die during table top RPG. \r\n\r\nI.e \"_You have rolled 3._ **You broke the lock and now nobody will be able to open it.\"** or \"_Persuasion failed (42)._ **The barmaid laughs at your proposal and walks off.\"**\r\n\r\nIt would be easy to fake it with random command to be shown at the start of the page for d6  - ```You rolled {random:1:2:3}``` for fail page and ```You rolled {random:4:5:6}``` for success page. But to do this for d100 that would be quite a chore.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello,</p>\n<p>When making a random chance event in a Gamebook, is there a way how to show the player what number was \"rolled\"?</p>\n<p>I want to make the clickable link to say i.e. <strong>\"Pry the lock open (roll 1xd6 - 50% chance)\"</strong> or <strong>\"Persuade the barmaid (60%)\"</strong> and once clicked, I would like the next page to start with the value rolled, so the player sees what happened - as when you roll a die during table top RPG.</p>\n<p>I.e \"<em>You have rolled 3.</em> <strong>You broke the lock and now nobody will be able to open it.\"</strong> or \"<em>Persuasion failed (42).</em> <strong>The barmaid laughs at your proposal and walks off.\"</strong></p>\n<p>It would be easy to fake it with random command to be shown at the start of the page for d6  - <code>You rolled {random:1:2:3}</code> for fail page and <code>You rolled {random:4:5:6}</code> for success page. But to do this for d100 that would be quite a chore.</p>\n\n",
      "PostDate": "2022-04-29T08:06:11.0244605Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "dd47b96a-3477-4dbd-86ba-f24c465948e3",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It would be normal to use a script for that.\r\n\r\nYou can use the function `GetRandomInt()` to roll a die, and put that number in an attribute. Then compare that number to a target, and use the result to decide which page to send the player to.\r\n\r\nIt looks like your existing system is using 2 random numbers; one to determine which page the player goes to, and then choosing a separate dice roll afterwards. This is pretty weird, but if you really want to do it that way, you could. Just use `{=` in the text  processor to evaluate a Quest expression. For a 60% example, you could have `You rolled {=GetRandomInt(1,60)}` on the success page, and `You rolled {=GetRandomInt(61,100)}` on the failure page.",
      "EditableFormat": "markdown",
      "HTML": "<p>It would be normal to use a script for that.</p>\n<p>You can use the function <code>GetRandomInt()</code> to roll a die, and put that number in an attribute. Then compare that number to a target, and use the result to decide which page to send the player to.</p>\n<p>It looks like your existing system is using 2 random numbers; one to determine which page the player goes to, and then choosing a separate dice roll afterwards. This is pretty weird, but if you really want to do it that way, you could. Just use <code>{=</code> in the text  processor to evaluate a Quest expression. For a 60% example, you could have <code>You rolled {=GetRandomInt(1,60)}</code> on the success page, and <code>You rolled {=GetRandomInt(61,100)}</code> on the failure page.</p>\n\n",
      "PostDate": "2022-04-29T09:17:09.6066222Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bdb61445-6d94-45a5-9f4c-4351a255d446",
      "UserId": 578638,
      "Username": "Inquisitor Kane",
      "AvatarUrl": "https://i.imgur.com/LJnsv6Nb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you very much **mrangel**!\r\n\r\nI have used 2 scripts indeed - one for real RNG chance, the other one to fake the result, as I had no idea you can actually make the editor to do the roll and show the number rolled too. Thanks a lot for the help!\r\n\r\nI am still using the wysiwyg editor and am not well versed in scripts. This is very helpful and now I know what should I look into in more detail.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you very much <strong>mrangel</strong>!</p>\n<p>I have used 2 scripts indeed - one for real RNG chance, the other one to fake the result, as I had no idea you can actually make the editor to do the roll and show the number rolled too. Thanks a lot for the help!</p>\n<p>I am still using the wysiwyg editor and am not well versed in scripts. This is very helpful and now I know what should I look into in more detail.</p>\n\n",
      "PostDate": "2022-04-30T08:12:04.5782299Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b3e94a02-402c-4ed5-9e43-461657c11a40",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I had no idea you can actually make the editor to do the roll and show the number rolled too. Thanks a lot for the help!\r\n\r\nThere's 2 main ways to do it, with their own advantages and disadvantages. A lot of gamebook scripting stuff ends up being the same basic structure, so it's  probably worth knowing how to do them.\r\n\r\nThe first would be having an option take you to a 'script' page which does the calculation. This makes the code a little simpler, but gives the player one more page to click through.\r\n(For the examples, I'm assuming that \"Page9\" is the diceroll page, you need 4+ on 1d6 to succeed the task, \"Page10\" is the destination if you succeed, and \"Page11\" is there for failure)\r\n\r\nYou'd have something like:\r\n```\r\nthis.diceroll = GetRandomInt (1,6)\r\nmsg (\"{i:You rolled a {Page9.diceroll}.\")\r\nif (this.diceroll >= 4) {\r\n  msg (\"You push hard, and the door gives way.\")\r\n  msg (\"{page:Page10:Continue}\")\r\n}\r\nelse {\r\n  msg (\"You push hard, but the door is stuck fast.\")\r\n  msg (\"{page:Page11:Continue}\")\r\n}\r\n```\r\n\r\nRather than displaying a message, you could just send the player straight to another page, and have the success/failure messages on pages 10 and 11. Like this:\r\n```\r\nthis.diceroll = GetRandomInt (1,6)\r\nif (this.diceroll >= 4) {\r\n  MovePlayer (Page10)\r\n}\r\nelse {\r\n  MovePlayer (Page11)\r\n}\r\n```\r\n(You can then use `{Page9.diceroll}` in the text on those pages to get the dice roll. The word `this` that I used in the script  is a shortcut for \"the current page\", but it only works in script sections, not inside `{}` sections in the text. I have no idea why not, because in gamebook mode it would literally be one line added to  the core code)\r\n\r\nNote that if you use this method, checking for whether Page9 has been seen will always be false, because the player didn't end their turn there.\r\n\r\nThe other main method is to put the dice roll in the page that contains the link. This means there's no extra page, but the code is slightly more complex. You basically have a link that changes its destination based on some random choice. You'd make the page \"Script and text\", and have script like:\r\n```\r\nthis.door_roll = GetRandomInt (1,6)\r\nif (this.door_roll >= 4) {\r\n  RemovePageLink (this, Page11)\r\n  AddPageLink (this, Page10, \"Force the door (roll 1d6, needs 4+)\")\r\n}\r\nelse {\r\n  RemovePageLink (this, Page10)\r\n  AddPageLink (this, Page11, \"Force the door (roll 1d6, needs 4+)\")\r\n}\r\n```\r\nThis adds one of two options based on a dice roll, but the player can't see which one has been chosen. This is a useful technique to know, because it's quite common for gamebooks to have some options that are only available based on where you've been before, or similar.\r\n\r\nYou might not need the `RemovePageLink` lines; I put them there so that it will still work if the player returns to this page a second time (so it removes the other option in case you got a different roll last time). I also named the attribute `door_diceroll` this time; so if you've got more than one choice that requires a dice roll, you can roll them all in advance and store them in different attributes. Then you can access whichever one you need from the results pages.\r\n\r\n(Sorry for all the code; if you want to see what it looks like in the GUI, you can just paste it into the code view and then switch back; it's just that code is the easy way to share it on the forums)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I had no idea you can actually make the editor to do the roll and show the number rolled too. Thanks a lot for the help!</p>\n</blockquote>\n<p>There's 2 main ways to do it, with their own advantages and disadvantages. A lot of gamebook scripting stuff ends up being the same basic structure, so it's  probably worth knowing how to do them.</p>\n<p>The first would be having an option take you to a 'script' page which does the calculation. This makes the code a little simpler, but gives the player one more page to click through.<br>\n(For the examples, I'm assuming that \"Page9\" is the diceroll page, you need 4+ on 1d6 to succeed the task, \"Page10\" is the destination if you succeed, and \"Page11\" is there for failure)</p>\n<p>You'd have something like:</p>\n<pre><code>this.diceroll = GetRandomInt (1,6)\nmsg (\"{i:You rolled a {Page9.diceroll}.\")\nif (this.diceroll &gt;= 4) {\n  msg (\"You push hard, and the door gives way.\")\n  msg (\"{page:Page10:Continue}\")\n}\nelse {\n  msg (\"You push hard, but the door is stuck fast.\")\n  msg (\"{page:Page11:Continue}\")\n}\n</code></pre>\n<p>Rather than displaying a message, you could just send the player straight to another page, and have the success/failure messages on pages 10 and 11. Like this:</p>\n<pre><code>this.diceroll = GetRandomInt (1,6)\nif (this.diceroll &gt;= 4) {\n  MovePlayer (Page10)\n}\nelse {\n  MovePlayer (Page11)\n}\n</code></pre>\n<p>(You can then use <code>{Page9.diceroll}</code> in the text on those pages to get the dice roll. The word <code>this</code> that I used in the script  is a shortcut for \"the current page\", but it only works in script sections, not inside <code>{}</code> sections in the text. I have no idea why not, because in gamebook mode it would literally be one line added to  the core code)</p>\n<p>Note that if you use this method, checking for whether Page9 has been seen will always be false, because the player didn't end their turn there.</p>\n<p>The other main method is to put the dice roll in the page that contains the link. This means there's no extra page, but the code is slightly more complex. You basically have a link that changes its destination based on some random choice. You'd make the page \"Script and text\", and have script like:</p>\n<pre><code>this.door_roll = GetRandomInt (1,6)\nif (this.door_roll &gt;= 4) {\n  RemovePageLink (this, Page11)\n  AddPageLink (this, Page10, \"Force the door (roll 1d6, needs 4+)\")\n}\nelse {\n  RemovePageLink (this, Page10)\n  AddPageLink (this, Page11, \"Force the door (roll 1d6, needs 4+)\")\n}\n</code></pre>\n<p>This adds one of two options based on a dice roll, but the player can't see which one has been chosen. This is a useful technique to know, because it's quite common for gamebooks to have some options that are only available based on where you've been before, or similar.</p>\n<p>You might not need the <code>RemovePageLink</code> lines; I put them there so that it will still work if the player returns to this page a second time (so it removes the other option in case you got a different roll last time). I also named the attribute <code>door_diceroll</code> this time; so if you've got more than one choice that requires a dice roll, you can roll them all in advance and store them in different attributes. Then you can access whichever one you need from the results pages.</p>\n<p>(Sorry for all the code; if you want to see what it looks like in the GUI, you can just paste it into the code view and then switch back; it's just that code is the easy way to share it on the forums)</p>\n\n",
      "PostDate": "2022-04-30T09:18:03.3295915Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4924d5da-96af-40bc-a8dd-ff4f9bd180ec",
      "UserId": 578638,
      "Username": "Inquisitor Kane",
      "AvatarUrl": "https://i.imgur.com/LJnsv6Nb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you very much! I will definitely play around it. :)",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you very much! I will definitely play around it. :)</p>\n\n",
      "PostDate": "2022-05-04T17:51:18.4400846Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
