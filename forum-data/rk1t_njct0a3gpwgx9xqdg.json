{
  "Topic": {
    "TopicId": "rk1t_njct0a3gpwgx9xqdg",
    "ForumId": "24",
    "Title": "Another revisit to mrangel's lovely sidebar inventory",
    "LastUpdated": "2022-10-01T07:41:24.2873659Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "eceb2fdd-125e-4110-8785-ade3758ffdf3",
      "UserId": 312695,
      "Username": "broadwaydude",
      "AvatarUrl": "https://i.imgur.com/ZtaIo6Yb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here's the original question: \r\nhttp://textadventures.co.uk/forum/squiffy/topic/twsu7sqjoegndwy3_g_qxq/inventory-show-hide\r\n\r\nAnywho, I'm having a blast with this new system. I've made modifications to it to fit my own style of gameplay (once it's done, I might post the code for it on the forum).\r\n\r\nBut what I'm trying to figure out is how to make the inventory items in a chronological list of when you picked it up (most recent being at the top). This is like adding to an array, but I don't know how to do that with squiffy. Any help?",
      "EditableFormat": "markdown",
      "HTML": "<p>Here's the original question:<br>\nhttp://textadventures.co.uk/forum/squiffy/topic/twsu7sqjoegndwy3_g_qxq/inventory-show-hide</p>\n<p>Anywho, I'm having a blast with this new system. I've made modifications to it to fit my own style of gameplay (once it's done, I might post the code for it on the forum).</p>\n<p>But what I'm trying to figure out is how to make the inventory items in a chronological list of when you picked it up (most recent being at the top). This is like adding to an array, but I don't know how to do that with squiffy. Any help?</p>\n\n",
      "PostDate": "2022-10-01T07:41:24.2873659Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2a392c27-b260-4da6-b9eb-04415a9e4abb",
      "UserId": 312695,
      "Username": "broadwaydude",
      "AvatarUrl": "https://i.imgur.com/ZtaIo6Yb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wanted to check in if anyone has any comments on how this could be done. Thanks for any help!",
      "EditableFormat": "markdown",
      "HTML": "<p>Wanted to check in if anyone has any comments on how this could be done. Thanks for any help!</p>\n\n",
      "PostDate": "2022-10-17T04:14:13.3071276Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e655996d-812d-42ff-9b50-ee6215a0d977",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think if you want to use arrays, you'll have to work in JS. Not sure how that will interact with the sidebar; but a lot of that sidebar code is a little flaky (I originally wrote it in response to someone asking for help with the JS, so that was the first time I ever opened Squiffy and I was building it by trial and error without knowing the system). So perhaps I should work on improving it.\r\n\r\nOr, if you want to just display stuff in chronological order and you've already guarded against (for example) picking the same item up twice, you could have an attribute which you add every new item to the end (or beginning) of; then the sidebar can just display a single attribute.",
      "EditableFormat": "markdown",
      "HTML": "<p>I think if you want to use arrays, you'll have to work in JS. Not sure how that will interact with the sidebar; but a lot of that sidebar code is a little flaky (I originally wrote it in response to someone asking for help with the JS, so that was the first time I ever opened Squiffy and I was building it by trial and error without knowing the system). So perhaps I should work on improving it.</p>\n<p>Or, if you want to just display stuff in chronological order and you've already guarded against (for example) picking the same item up twice, you could have an attribute which you add every new item to the end (or beginning) of; then the sidebar can just display a single attribute.</p>\n\n",
      "PostDate": "2022-10-17T12:35:54.8673534Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "68aca3fe-f28a-409c-9e85-2876d2b7beba",
      "UserId": 312695,
      "Username": "broadwaydude",
      "AvatarUrl": "https://i.imgur.com/ZtaIo6Yb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry for not getting back sooner. The aim is to make the items list themselves out in chronological order as simple as possible. \r\n\r\n```\"...you could have an attribute which you add every new item to the end (or beginning) of; then the sidebar can just display a single attribute.\"```\r\n\r\nI'm not exactly sure what you mean by this. Could you explain this a little bit more for me? Thank you!",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry for not getting back sooner. The aim is to make the items list themselves out in chronological order as simple as possible.</p>\n<p><code>\"...you could have an attribute which you add every new item to the end (or beginning) of; then the sidebar can just display a single attribute.\"</code></p>\n<p>I'm not exactly sure what you mean by this. Could you explain this a little bit more for me? Thank you!</p>\n\n",
      "PostDate": "2022-11-06T22:29:31.783481Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8f7858bf-4a86-416d-8785-9d8d29808b9b",
      "UserId": 8923,
      "Username": "CrisisSDK",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a1e2fe3ea718f55772fbbce83cb4016e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I haven't used the sidebar inventory, nor have I looked at it properly.\r\n\r\nFor what mrangel is saying, I think something like having a string variable where you add each item to the same string, such as ending up with `apple <br> ball <br> key <br>` in the varaible (the `<br>` should end up being a newline.)\r\n\r\nFor arrays in Squiffy, it's pretty easy to do in Javascript in my opinion. I gave an example a few years ago here:\r\nhttps://textadventures.co.uk/forum/squiffy/topic/spwky_zgi02bvmw3btzm2w/user-selects-multiple-from-a-list\r\n\r\nBasically, in Javascript, you initialiase the array like `set('inventory', []);`, preferably at the start of your game.\r\n\r\nThen you can use Javascript to add and remove and test. \r\n\r\nAdding is easy, just use `set('inventory', get('inventory').concat('apple'));` to add an item.\r\n\r\nTesting is also easy, \r\n```\r\nif (get('inventory').includes('apple'))\r\n{\r\n\t//you have an apple, so probably want to go to the section with that:\r\n\tsquiffy.story.go('has_apple_section');\r\n}\r\n```\r\n\r\nRemoving is a bit harder. The following should work well as long as you never have any duplicates:\r\n```\r\nset('inventory', get('inventory').filter((x => x !== 'apple'));\r\n```\r\n(If you do have duplicates, it will remove all of them)\r\n\r\nFor something that should only remove the first item that matches the given string:\r\n```\r\nlet inventoryArray = get('inventory');\r\ninventoryArray.splice(inventoryArray.indexOf('apple'), 1);\r\nset('inventory', inventoryArray);\r\n```\r\n(Only do this if you are sure the item is in the inventory array!)\r\n\r\n<br>\r\n\r\nNow... I completely understand if this isn't exactly easy for someone who doesn't have a job in software development where you have to deal with Javascript.\r\nAdding some proper array support to Squiffy is something I've thought about, but since I can get around it myself easily enough I haven't yet. \r\n\r\n\r\nFeel free to ask any other questions, especially if I haven't been clear in my attempt at explaining things.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I haven't used the sidebar inventory, nor have I looked at it properly.</p>\n<p>For what mrangel is saying, I think something like having a string variable where you add each item to the same string, such as ending up with <code>apple &lt;br&gt; ball &lt;br&gt; key &lt;br&gt;</code> in the varaible (the <code>&lt;br&gt;</code> should end up being a newline.)</p>\n<p>For arrays in Squiffy, it's pretty easy to do in Javascript in my opinion. I gave an example a few years ago here:<br>\nhttps://textadventures.co.uk/forum/squiffy/topic/spwky_zgi02bvmw3btzm2w/user-selects-multiple-from-a-list</p>\n<p>Basically, in Javascript, you initialiase the array like <code>set('inventory', []);</code>, preferably at the start of your game.</p>\n<p>Then you can use Javascript to add and remove and test.</p>\n<p>Adding is easy, just use <code>set('inventory', get('inventory').concat('apple'));</code> to add an item.</p>\n<p>Testing is also easy,</p>\n<pre><code>if (get('inventory').includes('apple'))\n{\n\t//you have an apple, so probably want to go to the section with that:\n\tsquiffy.story.go('has_apple_section');\n}\n</code></pre>\n<p>Removing is a bit harder. The following should work well as long as you never have any duplicates:</p>\n<pre><code>set('inventory', get('inventory').filter((x =&gt; x !== 'apple'));\n</code></pre>\n<p>(If you do have duplicates, it will remove all of them)</p>\n<p>For something that should only remove the first item that matches the given string:</p>\n<pre><code>let inventoryArray = get('inventory');\ninventoryArray.splice(inventoryArray.indexOf('apple'), 1);\nset('inventory', inventoryArray);\n</code></pre>\n<p>(Only do this if you are sure the item is in the inventory array!)</p>\n<br>\n<p>Now... I completely understand if this isn't exactly easy for someone who doesn't have a job in software development where you have to deal with Javascript.<br>\nAdding some proper array support to Squiffy is something I've thought about, but since I can get around it myself easily enough I haven't yet.</p>\n<p>Feel free to ask any other questions, especially if I haven't been clear in my attempt at explaining things.</p>\n\n",
      "PostDate": "2022-11-07T22:59:06.7787464Z",
      "LastEditDate": "2022-11-07T23:05:17.2029895Z",
      "link": null
    },
    {
      "PostId": "bf8f0d62-896d-43dc-802f-02c4757d2332",
      "UserId": 312695,
      "Username": "broadwaydude",
      "AvatarUrl": "https://i.imgur.com/ZtaIo6Yb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is extremely helpful! I'll let you know if I need anything else. Thank you!",
      "EditableFormat": "markdown",
      "HTML": "<p>This is extremely helpful! I'll let you know if I need anything else. Thank you!</p>\n\n",
      "PostDate": "2022-11-30T07:15:20.8464413Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1afd0a1d-72cb-4047-8c9c-5925dd2cd46b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I just thought of an interesting way to do it using the sidebar, minimising the javascript.\r\n\r\nIf you used the modified attributes code from one of these other threads, you could add items to a list by doing something like:\r\n```\r\n@set inventory := {inventory}<li>[apple]</li>\r\n```\r\nIncluding the existing value of the inventory, so that it adds the apple to the end of the list.\r\n\r\nAnd then in the sidebar, you would have something like:\r\n```\r\n<ul id=\"inventoryList\">{inventory}</ul>\r\n```\r\nwhich you could apply style to if you want to control how all the inventory items work.\r\n\r\nAnd then in the page which handles using an inventory item, you could have the common JS:\r\n```\r\n    var used = $('#inventoryList li:has(a.disabled)');\r\n    if (used.length) {\r\n        used.remove();\r\n        squiffy.set('inventory', $('#inventoryList').html());\r\n    }\r\n```\r\nThis uses jQuery to remove all clicked links from the inventory, and then updates the attribute to match the page.\r\n\r\nIn the case that the player clicks on an object they can't use at the moment, you would instead do:\r\n```\r\n    $('#inventoryList a.disabled').removeClass('disabled');\r\n```\r\nwhich prevents the link being automatically disabled after the player clicks on it.\r\n\r\n\r\nI'm not sure, but I think this might only work if you are using passages for your inventory items. (A version of the sidebar code which includes the master-section-passages feature)",
      "EditableFormat": "markdown",
      "HTML": "<p>I just thought of an interesting way to do it using the sidebar, minimising the javascript.</p>\n<p>If you used the modified attributes code from one of these other threads, you could add items to a list by doing something like:</p>\n<pre><code>@set inventory := {inventory}&lt;li&gt;[apple]&lt;/li&gt;\n</code></pre>\n<p>Including the existing value of the inventory, so that it adds the apple to the end of the list.</p>\n<p>And then in the sidebar, you would have something like:</p>\n<pre><code>&lt;ul id=\"inventoryList\"&gt;{inventory}&lt;/ul&gt;\n</code></pre>\n<p>which you could apply style to if you want to control how all the inventory items work.</p>\n<p>And then in the page which handles using an inventory item, you could have the common JS:</p>\n<pre><code>    var used = $('#inventoryList li:has(a.disabled)');\n    if (used.length) {\n        used.remove();\n        squiffy.set('inventory', $('#inventoryList').html());\n    }\n</code></pre>\n<p>This uses jQuery to remove all clicked links from the inventory, and then updates the attribute to match the page.</p>\n<p>In the case that the player clicks on an object they can't use at the moment, you would instead do:</p>\n<pre><code>    $('#inventoryList a.disabled').removeClass('disabled');\n</code></pre>\n<p>which prevents the link being automatically disabled after the player clicks on it.</p>\n<p>I'm not sure, but I think this might only work if you are using passages for your inventory items. (A version of the sidebar code which includes the master-section-passages feature)</p>\n\n",
      "PostDate": "2022-11-30T08:03:36.8692083Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7bda6b95-f819-45c4-926a-a20edff5cd9c",
      "UserId": 312695,
      "Username": "broadwaydude",
      "AvatarUrl": "https://i.imgur.com/ZtaIo6Yb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oooh! Looks interesting. I'll let you know how it goes once I try implementing it into my already existing code.",
      "EditableFormat": "markdown",
      "HTML": "<p>Oooh! Looks interesting. I'll let you know how it goes once I try implementing it into my already existing code.</p>\n\n",
      "PostDate": "2022-12-08T15:55:47.2988112Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5768f36e-29c1-4b7b-98ce-702c0976d407",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Now you've got me thinking about letting the player change the order of inventory items… but that would be a little silly.\r\n\r\nI think it would actually be pretty simple to let them drag items up and down, and have little buttons to sort by order added or alphabetically. But making newly-added items appear in a sensible place would be harder; as would avoiding possible glitches that could make an item vanish (If you have some slow javascript, and the player drags an item to a new position at the same time your script ends and gives them a new item, there's a possibility for weirdness).",
      "EditableFormat": "markdown",
      "HTML": "<p>Now you've got me thinking about letting the player change the order of inventory items… but that would be a little silly.</p>\n<p>I think it would actually be pretty simple to let them drag items up and down, and have little buttons to sort by order added or alphabetically. But making newly-added items appear in a sensible place would be harder; as would avoiding possible glitches that could make an item vanish (If you have some slow javascript, and the player drags an item to a new position at the same time your script ends and gives them a new item, there's a possibility for weirdness).</p>\n\n",
      "PostDate": "2022-12-08T17:04:59.2427699Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
