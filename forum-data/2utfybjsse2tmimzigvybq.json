{
  "Topic": {
    "TopicId": "2utfybjsse2tmimzigvybq",
    "ForumId": "10",
    "Title": "object reference",
    "LastUpdated": "2016-07-08T05:32:47.4149633Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "2f1c66f3-f9cc-47f7-aaaa-9824c4242d8b",
      "UserId": 251094,
      "Username": "bergedorfcacher",
      "UserAvatar": null,
      "UserGravatar": "ea7c0eff71476cd165c31f2605b2f755",
      "EditableText": "Hi, \r\n\r\nunder verbs I'm using 'Require another object'. Is there a generic way to get a reference to the second object for this script? I want to call a function there like DoSomething(this,target). While I can fill in the target name each time, just copying the same script would be a bit more convenient. (I will need to do this for nearly all oject combinations, so probably a couple of hundred times!)",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi,</p>\n<p>under verbs I'm using 'Require another object'. Is there a generic way to get a reference to the second object for this script? I want to call a function there like DoSomething(this,target). While I can fill in the target name each time, just copying the same script would be a bit more convenient. (I will need to do this for nearly all oject combinations, so probably a couple of hundred times!)</p>\n\n",
      "PostDate": "2016-07-08T05:32:47.4149633Z",
      "LastEditDate": null
    },
    {
      "PostId": "0b86a65d-cfca-486e-a47e-ccf14caf149d",
      "UserId": 924,
      "Username": "Pertex",
      "UserAvatar": null,
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "You can import the core function ShowMenuResponse and add this line at the beginning\r\n\r\n>game.menuobject = option\r\n\r\nIn your function you can use this attribute then.\r\n\r\n```\r\n <function name=\"ShowMenuResponse\" parameters=\"option\">\r\ngame.menuobject = option\r\nif (game.menucallback = null) {\r\n      error (\"Unexpected menu response\")\r\n }\r\n else {\r\n      parameters = NewStringDictionary()\r\n      dictionary add (parameters, \"result\", option)\r\n      script = game.menucallback\r\n      ClearMenu\r\n      invoke (script, parameters)\r\n    }\r\n  </function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>You can import the core function ShowMenuResponse and add this line at the beginning</p>\n<blockquote>\n<p>game.menuobject = option</p>\n</blockquote>\n<p>In your function you can use this attribute then.</p>\n<pre><code> &lt;function name=\"ShowMenuResponse\" parameters=\"option\"&gt;\ngame.menuobject = option\nif (game.menucallback = null) {\n      error (\"Unexpected menu response\")\n }\n else {\n      parameters = NewStringDictionary()\n      dictionary add (parameters, \"result\", option)\n      script = game.menucallback\n      ClearMenu\n      invoke (script, parameters)\n    }\n  &lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2016-07-08T06:51:08.557946Z",
      "LastEditDate": null
    },
    {
      "PostId": "aaaf8457-c263-408a-bd9f-b43e744f55f3",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'm not that knowledgeable on the built-in stuff, so take this with a grain of salt (wait for the more knowledgeable people to respond):\r\n\r\nVerbs are Script Attributes of a/an specific/individual Object, so you got only these universal things to use:\r\n\r\nthe special 'this' keyword/keycommand, which GETS/RETURNS/OUTPUTS the Object containing the Script Attribute (Verb) which you're using 'this' within it. So for example, if I had an 'orc' Object with a 'fight' Script Attribute (a 'fight' Verb), then using 'this' inside of it, would GET/RETURN/OUTPUT the 'orc' Object.\r\n\r\nand you can always use the 'game.pov' (your currently controlled Player Object) too within any scripting.\r\n\r\nLastly, if you can use a specific/individual Object, then you can use that (but obviously this is not any good when you need/want to do dynamic scripting).\r\n\r\n------\r\n\r\nI don't think there's any way with the Script Attribute (Verb) itself to reference more Objects, except maybe through using Delegates for your Script Attribute (Verb).\r\n\r\nThough, you can always have the scripting reference whatever you want, such as using iterations with whatever Object's List/Dictionary Attributes, and etc methods.\r\n\r\n-----\r\n\r\notherwise, you can use Commands, if you need to use more referencing. And I think there's maybe a way to join your Command with a Verb... but I forgot now where I saw it (as this was long ago, probably... one of Pixie's old libraries... I think....), and it was beyond my understanding anyways.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not that knowledgeable on the built-in stuff, so take this with a grain of salt (wait for the more knowledgeable people to respond):</p>\n<p>Verbs are Script Attributes of a/an specific/individual Object, so you got only these universal things to use:</p>\n<p>the special 'this' keyword/keycommand, which GETS/RETURNS/OUTPUTS the Object containing the Script Attribute (Verb) which you're using 'this' within it. So for example, if I had an 'orc' Object with a 'fight' Script Attribute (a 'fight' Verb), then using 'this' inside of it, would GET/RETURN/OUTPUT the 'orc' Object.</p>\n<p>and you can always use the 'game.pov' (your currently controlled Player Object) too within any scripting.</p>\n<p>Lastly, if you can use a specific/individual Object, then you can use that (but obviously this is not any good when you need/want to do dynamic scripting).</p>\n<hr>\n<p>I don't think there's any way with the Script Attribute (Verb) itself to reference more Objects, except maybe through using Delegates for your Script Attribute (Verb).</p>\n<p>Though, you can always have the scripting reference whatever you want, such as using iterations with whatever Object's List/Dictionary Attributes, and etc methods.</p>\n<hr>\n<p>otherwise, you can use Commands, if you need to use more referencing. And I think there's maybe a way to join your Command with a Verb... but I forgot now where I saw it (as this was long ago, probably... one of Pixie's old libraries... I think....), and it was beyond my understanding anyways.</p>\n\n",
      "PostDate": "2016-07-08T06:52:20.6007745Z",
      "LastEditDate": null
    },
    {
      "PostId": "682793ce-b135-4804-abad-e47e56f39bf2",
      "UserId": 251094,
      "Username": "bergedorfcacher",
      "UserAvatar": null,
      "UserGravatar": "ea7c0eff71476cd165c31f2605b2f755",
      "EditableText": "@hegemonkhan: Thanks for your thoughts. I', using 'this' all the time, here I was more looking for something like 'that'. :-) I'm slowly learning about the differnce between verbs and commands. Not quite there yet.\r\n\r\n@Pertex: Thanks, works like a charm. (After I got across the small hurdle of using GetObject(game.menuobject) instead of game.menuobject. \r\n\r\nI'm working with quest now for less than a week and I must say I'm really overwhelmed by the responsiveness and friendlyness in this community!",
      "EditableFormat": "markdown",
      "HTML": "<p>@hegemonkhan: Thanks for your thoughts. I', using 'this' all the time, here I was more looking for something like 'that'. :-) I'm slowly learning about the differnce between verbs and commands. Not quite there yet.</p>\n<p>@Pertex: Thanks, works like a charm. (After I got across the small hurdle of using GetObject(game.menuobject) instead of game.menuobject.</p>\n<p>I'm working with quest now for less than a week and I must say I'm really overwhelmed by the responsiveness and friendlyness in this community!</p>\n\n",
      "PostDate": "2016-07-08T08:52:30.489847Z",
      "LastEditDate": null
    }
  ]
}
