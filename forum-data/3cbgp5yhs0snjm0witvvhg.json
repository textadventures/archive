{
  "Topic": {
    "TopicId": "3cbgp5yhs0snjm0witvvhg",
    "ForumId": "10",
    "Title": "Help with Updating Canvas",
    "LastUpdated": "2024-06-06T17:33:42.9778766Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "dc620288-915f-45c8-8fa6-b10d1b92b654",
      "UserId": 391695,
      "Username": "GamerOver9000",
      "AvatarUrl": "https://secure.gravatar.com/avatar/36e6a025a2710445d7e878e7864013d4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have a canvas that I'm able to change the height/width of. Its supposed to display a 2d tile map so I added in the option to enter a world size. After I've entered everything I have an update button that clears the screen and displays the canvas with tiles drawn onto it. The first time I click the update button everything works fine, but after that it stops working, even if I don't change any of the settings. I was wondering if anyone could help me figure out why that is. Thank you in advance.\r\n\r\nI've added the canvas into the game using the following **Draw Map** function:\r\n\r\n    ClearScreen\r\n    html = \"<canvas id='gameCanvas'\"\r\n    html = html + \" width='\" + ToString(game.canvas_width) + \"' height='\" + ToString(game.canvas_height) + \"' style='border:1px \r\n    solid #000000;'>\"\r\n    html = html + \"</canvas>\"\r\n    msg (html)\r\n    JS.drawCanvas()\r\n\r\nHere is the **JS.drawCanvas()** function that I have in a separate .js file:\r\n\r\n    function drawCanvas() {\r\n\t canvas = document.getElementById(\"gameCanvas\");\r\n\t\r\n\t ctx = canvas.getContext(\"2d\");\r\n\t\r\n\t const mapWidth = parseInt(document.getElementById(\"mapWidth\").value);\r\n\t const mapHeight = parseInt(document.getElementById(\"mapHeight\").value);\r\n\t const worldSize = parseInt(document.getElementById(\"worldSize\").value);\r\n\t\r\n\t for (var y = 0; y < worldSize; y++) {\r\n\t\t for (var x = 0; x < worldSize; x++) {\r\n\t\t \t var rx = x * (mapWidth / worldSize);\r\n\t\t\t var ry = y * (mapHeight / worldSize);\r\n\t\t\t var rw = mapWidth / worldSize;\r\n\t\t\t var rh = mapHeight / worldSize;\r\n\t\t\t\r\n\t\t\t ctx.strokeRect(rx, ry, rw, rh);\r\n\t\t }\r\n\t }\r\n    }\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I have a canvas that I'm able to change the height/width of. Its supposed to display a 2d tile map so I added in the option to enter a world size. After I've entered everything I have an update button that clears the screen and displays the canvas with tiles drawn onto it. The first time I click the update button everything works fine, but after that it stops working, even if I don't change any of the settings. I was wondering if anyone could help me figure out why that is. Thank you in advance.</p>\n<p>I've added the canvas into the game using the following <strong>Draw Map</strong> function:</p>\n<pre><code>ClearScreen\nhtml = \"&lt;canvas id='gameCanvas'\"\nhtml = html + \" width='\" + ToString(game.canvas_width) + \"' height='\" + ToString(game.canvas_height) + \"' style='border:1px \nsolid #000000;'&gt;\"\nhtml = html + \"&lt;/canvas&gt;\"\nmsg (html)\nJS.drawCanvas()\n</code></pre>\n<p>Here is the <strong>JS.drawCanvas()</strong> function that I have in a separate .js file:</p>\n<pre><code>function drawCanvas() {\n canvas = document.getElementById(\"gameCanvas\");\n\n ctx = canvas.getContext(\"2d\");\n\n const mapWidth = parseInt(document.getElementById(\"mapWidth\").value);\n const mapHeight = parseInt(document.getElementById(\"mapHeight\").value);\n const worldSize = parseInt(document.getElementById(\"worldSize\").value);\n\n for (var y = 0; y &lt; worldSize; y++) {\n\t for (var x = 0; x &lt; worldSize; x++) {\n\t \t var rx = x * (mapWidth / worldSize);\n\t\t var ry = y * (mapHeight / worldSize);\n\t\t var rw = mapWidth / worldSize;\n\t\t var rh = mapHeight / worldSize;\n\t\t\n\t\t ctx.strokeRect(rx, ry, rw, rh);\n\t }\n }\n}\n</code></pre>\n\n",
      "PostDate": "2024-06-06T17:33:42.9778766Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6beb12e0-c8a1-45ef-a9fe-e2c7fe1a4740",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ClearScreen might hide the previous output (for logging purposes) rather than deleting it. In which case, getElementById will still give you the first one, which might not be visible. I would suggest three possible ways to deal with this:\r\n1. Check for an existing canvas and delete it before outputting the new one.\r\n2. Keep track of how many times this function has been called, and give the new canvas a different ID each time.\r\n3. Check for an existing canvas, clear it, and move it to the end of the output area instead of creating a new one.\r\n4. Instead of getting the canvas by its ID, use a class to recognise it (or just look for canvases if you don't have one for something else) and then pick the last one. Or something like `ctx = $('canvas').filter('#gameCanvas').last().get(0).getContext('2d');`",
      "EditableFormat": "markdown",
      "HTML": "<p>ClearScreen might hide the previous output (for logging purposes) rather than deleting it. In which case, getElementById will still give you the first one, which might not be visible. I would suggest three possible ways to deal with this:</p>\n<ol>\n<li>Check for an existing canvas and delete it before outputting the new one.</li>\n<li>Keep track of how many times this function has been called, and give the new canvas a different ID each time.</li>\n<li>Check for an existing canvas, clear it, and move it to the end of the output area instead of creating a new one.</li>\n<li>Instead of getting the canvas by its ID, use a class to recognise it (or just look for canvases if you don't have one for something else) and then pick the last one. Or something like <code>ctx = $('canvas').filter('#gameCanvas').last().get(0).getContext('2d');</code></li>\n</ol>\n\n",
      "PostDate": "2024-06-06T19:58:24.0553247Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5390c901-b833-4c69-9da9-060615e16f59",
      "UserId": 391695,
      "Username": "GamerOver9000",
      "AvatarUrl": "https://secure.gravatar.com/avatar/36e6a025a2710445d7e878e7864013d4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I did the first thing you (@mrangel) listed and I got it to work.\r\n\r\nI created the following function and called it before drawing the map:\r\n\r\n    function delCanvas() {\r\n        if (document.getElementById(\"gameCanvas\") != null) {\r\n            canvas = document.getElementById(\"gameCanvas\");\r\n            canvas.remove()\r\n        }\r\n    }\r\nThank you for your help!",
      "EditableFormat": "markdown",
      "HTML": "<p>I did the first thing you (@mrangel) listed and I got it to work.</p>\n<p>I created the following function and called it before drawing the map:</p>\n<pre><code>function delCanvas() {\n    if (document.getElementById(\"gameCanvas\") != null) {\n        canvas = document.getElementById(\"gameCanvas\");\n        canvas.remove()\n    }\n}\n</code></pre>\n<p>Thank you for your help!</p>\n\n",
      "PostDate": "2024-06-07T20:29:56.0407669Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "012ee764-b8ff-40cf-920d-1377322d3f3b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I would probably have written it using the jQuery functions for simplicity `$('#gameCanvas').remove();`, but I think that's pretty much the same thing. (no need for the `if` in the jQuery version, because using its methods on an empty selector will just do nothing).",
      "EditableFormat": "markdown",
      "HTML": "<p>I would probably have written it using the jQuery functions for simplicity <code>$('#gameCanvas').remove();</code>, but I think that's pretty much the same thing. (no need for the <code>if</code> in the jQuery version, because using its methods on an empty selector will just do nothing).</p>\n\n",
      "PostDate": "2024-06-08T10:22:45.7646095Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f143369e-ac81-4ddf-904a-b2861a7e206a",
      "UserId": 391695,
      "Username": "GamerOver9000",
      "AvatarUrl": "https://secure.gravatar.com/avatar/36e6a025a2710445d7e878e7864013d4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah that's way more concise. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah that's way more concise.</p>\n\n",
      "PostDate": "2024-06-09T22:52:53.4216266Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
