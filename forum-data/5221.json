{
  "Topic": {
    "TopicId": "5221",
    "ForumId": "10",
    "Title": "Function~Delegate Parameter'ing Help Needed",
    "LastUpdated": "2015-05-09T19:48:14+01:00",
    "ReplyCount": 3
  },
  "Posts": [
    {
      "PostId": "35955",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'm not exactly sure how to describe my question~problem~situation correctly... if need be, I'll provide my code to better describe what I'm asking about.\n\nbut I'll give it a try using sample pseudo code ...is there any way to do this in quest:\n\n[code:2itt7opj]// scripting&#58;\n\nif (xxx) {\n  function_variable = function_1\n} else (xxx) {\n  function_variable = function_2\n}\nfunction_0 (function_variable)\n\n// ---------------------------------------------\n\n&lt;function name=&quot;function_0&quot; parameters=&quot;function_parameter&quot;&gt;\n  function_parameter\n&lt;/function&gt;\n\n&lt;function name=&quot;function_1&quot;&gt;\n&lt;/function&#58;&gt;\n\n&lt;function name=&quot;function_2&quot;&gt;\n&lt;/function&gt;[/code:2itt7opj]\n\nI'm still confused by Delegates, so I'm not sure if these can be used for doing this as a substitute for Functions (which so far, seems not to work ~ didn't see anything in the wiki for a command for it to do this functionality: 'GetFunction (Function_name)', I tried the 'GetUniqueElementName (xxx)' as it was the only thing that looked like it might work, but this didn't work, sighs). I don't think the 'GetObject' refers to 'Object Oriented Programming's OBJECTS: ELEMENTS in quest', only to 'Objects (a subtype of ELEMENTS) in quest', right?",
      "EditableFormat": "bbcode",
      "HTML": "I'm not exactly sure how to describe my question~problem~situation correctly... if need be, I'll provide my code to better describe what I'm asking about.<br/><br/>but I'll give it a try using sample pseudo code ...is there any way to do this in quest:<br/><br/><pre><code>// scripting&#58;<br/><br/>if (xxx) {<br/>  function_variable = function_1<br/>} else (xxx) {<br/>  function_variable = function_2<br/>}<br/>function_0 (function_variable)<br/><br/>// ---------------------------------------------<br/><br/>&lt;function name=&quot;function_0&quot; parameters=&quot;function_parameter&quot;&gt;<br/>  function_parameter<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;function_1&quot;&gt;<br/>&lt;/function&#58;&gt;<br/><br/>&lt;function name=&quot;function_2&quot;&gt;<br/>&lt;/function&gt;</code></pre><br/><br/>I'm still confused by Delegates, so I'm not sure if these can be used for doing this as a substitute for Functions (which so far, seems not to work ~ didn't see anything in the wiki for a command for it to do this functionality: 'GetFunction (Function_name)', I tried the 'GetUniqueElementName (xxx)' as it was the only thing that looked like it might work, but this didn't work, sighs). I don't think the 'GetObject' refers to 'Object Oriented Programming's OBJECTS: ELEMENTS in quest', only to 'Objects (a subtype of ELEMENTS) in quest', right?",
      "PostDate": "2015-05-09T02:57:30+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "35958",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "A different approach is to use &quot;eval&quot;. Say you have a function called &quot;test1&quot;, you could do this to call it:\n[code:t20hykf4]s = &quot;test1&quot;\nresult = eval(s + &quot;()&quot;)[/code:t20hykf4]\nNote that eval has to return a value, so you need to assign that to something, even if you do nothing with it, and that also means that your function, test1, has to return a value, even if that is meaningless (just return true).\n\nETA: There is a good page on delegates here, but I am not sure they are what you need in this situation.\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/using_delegates.html\">http://docs.textadventures.co.uk/quest/ ... gates.html</a><!-- m -->",
      "EditableFormat": "bbcode",
      "HTML": "A different approach is to use &quot;eval&quot;. Say you have a function called &quot;test1&quot;, you could do this to call it:<br/><pre><code>s = &quot;test1&quot;<br/>result = eval(s + &quot;()&quot;)</code></pre><br/>Note that eval has to return a value, so you need to assign that to something, even if you do nothing with it, and that also means that your function, test1, has to return a value, even if that is meaningless (just return true).<br/><br/>ETA: There is a good page on delegates here, but I am not sure they are what you need in this situation.<br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/using_delegates.html\">http://docs.textadventures.co.uk/quest/ ... gates.html</a><!-- m -->",
      "PostDate": "2015-05-09T07:58:01+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "35962",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Another alternative: you can use scripts as &quot;function thunks&quot;, that is have scripts that call the functions for you. Then pass the scripts to your function. You'll have to use invoke instead of a direct call, but there is no way in Quest that I know of to call a function indirectly.\n\nYour example this way:\n\n[code:3qriw0dn]  &lt;function name=&quot;function_0&quot; parameters=&quot;function_parameter&quot;&gt;\n  \tinvoke(function_parameter)\n  &lt;/function&gt;\n  &lt;function name=&quot;function_1&quot;&gt;\n  \tmsg(&quot;This is function_1&quot;)\n  &lt;/function&gt;\n  &lt;function name=&quot;function_2&quot;&gt;\n  \tmsg(&quot;This is function_2&quot;)\n  &lt;/function&gt;\n  &lt;command&gt;\n    &lt;pattern&gt;test&lt;/pattern&gt;\n    &lt;script&gt;\n      if (GetRandomInt(0,1) = 0) {\n      \ts =&gt; { function_1() }\n      } else {\n      \ts =&gt; { function_2() }\n      }\n      function_0(s)\n    &lt;/script&gt;\n  &lt;/command&gt;[/code:3qriw0dn]\nIn this case, &quot;{ function_1() }&quot; is an anonymous script that calls a function. And &quot;=&gt;&quot; is the way you assign such a script to a variable. It could be any sort of script you like. For example, this is valid (though a bit stupid):\n\n[code:3qriw0dn]s =&gt; {\n\tmsg(&quot;Greetings, sir&quot;)\n\tif (player&#46;clothed) {\n\t\tmsg(&quot;Glad to see you are ready for the day&#46;&quot;)\n\t}\n}[/code:3qriw0dn]\nThat will make &quot;s&quot; contain the script body you assign it. It's not a very common thing - you can just as easily create scripts as attributes and reference them the same way.\n\nIf they don't have to be functions, then you can just hang scripts off an object and pass them directly. It will invoke the script.\n\nDelegates are just special script-like things that take parameters and/or return values. They can't hold a function as such either.",
      "EditableFormat": "bbcode",
      "HTML": "Another alternative: you can use scripts as &quot;function thunks&quot;, that is have scripts that call the functions for you. Then pass the scripts to your function. You'll have to use invoke instead of a direct call, but there is no way in Quest that I know of to call a function indirectly.<br/><br/>Your example this way:<br/><br/><pre><code>  &lt;function name=&quot;function_0&quot; parameters=&quot;function_parameter&quot;&gt;<br/>  \tinvoke(function_parameter)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;function_1&quot;&gt;<br/>  \tmsg(&quot;This is function_1&quot;)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;function_2&quot;&gt;<br/>  \tmsg(&quot;This is function_2&quot;)<br/>  &lt;/function&gt;<br/>  &lt;command&gt;<br/>    &lt;pattern&gt;test&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      if (GetRandomInt(0,1) = 0) {<br/>      \ts =&gt; { function_1() }<br/>      } else {<br/>      \ts =&gt; { function_2() }<br/>      }<br/>      function_0(s)<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;</code></pre><br/>In this case, &quot;{ function_1() }&quot; is an anonymous script that calls a function. And &quot;=&gt;&quot; is the way you assign such a script to a variable. It could be any sort of script you like. For example, this is valid (though a bit stupid):<br/><br/><pre><code>s =&gt; {<br/>\tmsg(&quot;Greetings, sir&quot;)<br/>\tif (player&#46;clothed) {<br/>\t\tmsg(&quot;Glad to see you are ready for the day&#46;&quot;)<br/>\t}<br/>}</code></pre><br/>That will make &quot;s&quot; contain the script body you assign it. It's not a very common thing - you can just as easily create scripts as attributes and reference them the same way.<br/><br/>If they don't have to be functions, then you can just hang scripts off an object and pass them directly. It will invoke the script.<br/><br/>Delegates are just special script-like things that take parameters and/or return values. They can't hold a function as such either.",
      "PostDate": "2015-05-09T19:42:22+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "35963",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Just to follow up, if they don't need to be functions per se, then I'd just use script attributes directly. Create some sort of holder object (or even use the game itself). Then you can just do things like:\n\n[code:1ldtvpo7]     if (GetRandomInt(0,1) = 0) {\n         s = game&#46;script_1\n      } else {\n         s = game&#46;script_2\n      }\n      function_0(s)[/code:1ldtvpo7]\n\nfunction_0 would be the same (still uses invoke).",
      "EditableFormat": "bbcode",
      "HTML": "Just to follow up, if they don't need to be functions per se, then I'd just use script attributes directly. Create some sort of holder object (or even use the game itself). Then you can just do things like:<br/><br/><pre><code>     if (GetRandomInt(0,1) = 0) {<br/>         s = game&#46;script_1<br/>      } else {<br/>         s = game&#46;script_2<br/>      }<br/>      function_0(s)</code></pre><br/><br/>function_0 would be the same (still uses invoke).",
      "PostDate": "2015-05-09T19:48:14+01:00",
      "LastEditDate": null
    }
  ]
}
