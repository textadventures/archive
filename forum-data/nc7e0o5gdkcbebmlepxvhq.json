{
  "Topic": {
    "TopicId": "nc7e0o5gdkcbebmlepxvhq",
    "ForumId": "15",
    "Title": "It's all in the Commands - Assistance with commands please",
    "LastUpdated": "2022-05-07T21:48:54.3436405Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "99d85465-94fc-4263-8a22-a0fea017bd34",
      "UserId": 420406,
      "Username": "Starrigger",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey, I am creating a command to handle a thrown item. this is what I have so far:\r\n```\r\ncommands.unshift(new Cmd('Throw',{\r\n\tregex:/^(?:throw|toss|chuck) (.+) (?:at|through|on|over|under|out) (.+)$/,\r\n\tobjects:[\r\n\t\t{scope:parser.isHeld},\r\n\t\t{scope:parser.isPresent},\r\n\t],\r\n\t\r\n\tscript:function(objects) {\r\n\t\treturn handleThrowAt(game.player, objects)\r\n\t},\r\n}))\r\n\r\nfunction handleThrowAt(char, objects) {\r\n\tlet success = false\r\n\tconst throwThis = objects[0][0]\r\n\tconst atThis = objects[1][0]\r\n\t\r\n\tmsg(throwThis.name)\r\n\tmsg(atThis.name)\r\n\tif(throwThis.name === 'oldest_wire_cutters') {\r\n\t\tif(atThis.name === 'broken_window') {\r\n\t\t\tif(w.boards.boardsOpen) {\r\n\t\t\t\tmsg(\"Response string here\")\r\n\t\t\t\tw.oldest_wire_cutters.loc = 'backyard'\r\n\t\t\t\tsuccess = true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tif(!success) msg(\"Failed response string\");\r\n\treturn success ? world.SUCCESS : world.FAILED;\r\n}\r\n\r\n```\r\nthe code is created in the code.js module.\r\n\r\nNot sure but there could be issues with the documents on this page https://github.com/ThePix/QuestJS/wiki/Creating-Commands\r\n\r\nExample: I was not able to get this to work:\r\n```\r\nreturn success ? SUCCESS : FAILED;\r\n```\r\nFor this example I am told that FAILED is not defined. When I changed it to this however, it worked:\r\n```\r\nreturn success ? world.SUCCESS : world.FAILED;\r\n```\r\n\r\nThanks,\r\nSteve\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey, I am creating a command to handle a thrown item. this is what I have so far:</p>\n<pre><code>commands.unshift(new Cmd('Throw',{\n\tregex:/^(?:throw|toss|chuck) (.+) (?:at|through|on|over|under|out) (.+)$/,\n\tobjects:[\n\t\t{scope:parser.isHeld},\n\t\t{scope:parser.isPresent},\n\t],\n\t\n\tscript:function(objects) {\n\t\treturn handleThrowAt(game.player, objects)\n\t},\n}))\n\nfunction handleThrowAt(char, objects) {\n\tlet success = false\n\tconst throwThis = objects[0][0]\n\tconst atThis = objects[1][0]\n\t\n\tmsg(throwThis.name)\n\tmsg(atThis.name)\n\tif(throwThis.name === 'oldest_wire_cutters') {\n\t\tif(atThis.name === 'broken_window') {\n\t\t\tif(w.boards.boardsOpen) {\n\t\t\t\tmsg(\"Response string here\")\n\t\t\t\tw.oldest_wire_cutters.loc = 'backyard'\n\t\t\t\tsuccess = true\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif(!success) msg(\"Failed response string\");\n\treturn success ? world.SUCCESS : world.FAILED;\n}\n\n</code></pre>\n<p>the code is created in the code.js module.</p>\n<p>Not sure but there could be issues with the documents on this page https://github.com/ThePix/QuestJS/wiki/Creating-Commands</p>\n<p>Example: I was not able to get this to work:</p>\n<pre><code>return success ? SUCCESS : FAILED;\n</code></pre>\n<p>For this example I am told that FAILED is not defined. When I changed it to this however, it worked:</p>\n<pre><code>return success ? world.SUCCESS : world.FAILED;\n</code></pre>\n<p>Thanks,<br>\nSteve</p>\n\n",
      "PostDate": "2022-05-07T21:48:54.3436405Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e24866eb-c885-4742-b47a-e6ddfb895232",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks, I realised there were a number of issues with that page due to numerous updates to QuestQR since it was written. Hopefully now resolved.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks, I realised there were a number of issues with that page due to numerous updates to QuestQR since it was written. Hopefully now resolved.</p>\n\n",
      "PostDate": "2022-05-08T07:21:50.5392676Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
