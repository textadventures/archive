{
  "Topic": {
    "TopicId": "3961",
    "ForumId": "10",
    "Title": "make output text nouns clickable to send to command line?",
    "LastUpdated": "2013-10-22T19:44:15+01:00",
    "ReplyCount": 15
  },
  "Posts": [
    {
      "PostId": "26571",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "Some of you might be familiar with the feature in iphonefrotz where you can tap on a word to send it to the command line. I'm interested in doing something like that with Quest. What would I need to code to make that happen?\n\nFrom what I already know it seems like I might have to work with the existing functionality for drop-down verb menus. Also I'm not sure if it's possible to write a word to the command line without executing the command line. Any pointers?",
      "EditableFormat": "bbcode",
      "HTML": "Some of you might be familiar with the feature in iphonefrotz where you can tap on a word to send it to the command line. I'm interested in doing something like that with Quest. What would I need to code to make that happen?<br/><br/>From what I already know it seems like I might have to work with the existing functionality for drop-down verb menus. Also I'm not sure if it's possible to write a word to the command line without executing the command line. Any pointers?",
      "PostDate": "2013-10-15T16:48:40+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26574",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Since I'm not familiar with iphonefrotz, it might be helpful to describe the behavior you'd like to see. I get generally that you want to click on a word and have it enter/execute something at the command line, but I'm not sure of the specifics. Do you mean you'd click a word like &quot;apple&quot; and have it do &quot;look apple&quot;, or would it be more like you'd have a word for &quot;look&quot; and have it execute look?\n\nQuest has support for different styles of hyperlinks. You can have an &quot;object&quot; hyperlink which will pop up object's verb menu when clicked on. \n\n[code:10dx6xin]msg(&quot;You see an {object&#58;apple}&#46;&quot;)[/code:10dx6xin]\nYou can have a &quot;command&quot; link which will execute a command when clicked on.\n\n[code:10dx6xin]msg(&quot;Would you like to {cmd&#58;KillTroll&#58;kill the troll} or {cmd&#58;Escape&#58;run for the hills}?&quot;)[/code:10dx6xin]\nIn this case, you will see &quot;kill the troll&quot; and &quot;run for the hills&quot; as hyperlinks, and when clicked, they will execute the command KillTroll and Escape respectively.\n\nLet me know if that is along the lines you're referring to. If you want to click on &quot;apple&quot; and have it enter &quot;apple&quot; at the command line, then you'd need to adapt the parser to handle object input like that- that is, a bare object name on its own (and still decide what you want it to do).",
      "EditableFormat": "bbcode",
      "HTML": "Since I'm not familiar with iphonefrotz, it might be helpful to describe the behavior you'd like to see. I get generally that you want to click on a word and have it enter/execute something at the command line, but I'm not sure of the specifics. Do you mean you'd click a word like &quot;apple&quot; and have it do &quot;look apple&quot;, or would it be more like you'd have a word for &quot;look&quot; and have it execute look?<br/><br/>Quest has support for different styles of hyperlinks. You can have an &quot;object&quot; hyperlink which will pop up object's verb menu when clicked on. <br/><br/><pre><code>msg(&quot;You see an {object&#58;apple}&#46;&quot;)</code></pre><br/>You can have a &quot;command&quot; link which will execute a command when clicked on.<br/><br/><pre><code>msg(&quot;Would you like to {cmd&#58;KillTroll&#58;kill the troll} or {cmd&#58;Escape&#58;run for the hills}?&quot;)</code></pre><br/>In this case, you will see &quot;kill the troll&quot; and &quot;run for the hills&quot; as hyperlinks, and when clicked, they will execute the command KillTroll and Escape respectively.<br/><br/>Let me know if that is along the lines you're referring to. If you want to click on &quot;apple&quot; and have it enter &quot;apple&quot; at the command line, then you'd need to adapt the parser to handle object input like that- that is, a bare object name on its own (and still decide what you want it to do).",
      "PostDate": "2013-10-15T19:37:02+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26579",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "[quote=&quot;jaynabonne&quot;:28ffs0vc]If you want to click on &quot;apple&quot; and have it enter &quot;apple&quot; at the command line, then you'd need to adapt the parser to handle object input like that- that is, a bare object name on its own (and still decide what you want it to do).[/quote:28ffs0vc]\n\nThat is more what I'm going for. So you click on 'apple' and it enters it on the command line, without executing anything. To execute you would still press return or perhaps a button on the command line. So for example, you could type 'look', click on 'apple' in the room description, and it would send apple to the command line. Then you could press enter to do 'look apple'. Not that I'd want to do it this way! But just for a simple example.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>If you want to click on &quot;apple&quot; and have it enter &quot;apple&quot; at the command line, then you'd need to adapt the parser to handle object input like that- that is, a bare object name on its own (and still decide what you want it to do).</blockquote><br/><br/>That is more what I'm going for. So you click on 'apple' and it enters it on the command line, without executing anything. To execute you would still press return or perhaps a button on the command line. So for example, you could type 'look', click on 'apple' in the room description, and it would send apple to the command line. Then you could press enter to do 'look apple'. Not that I'd want to do it this way! But just for a simple example.",
      "PostDate": "2013-10-16T03:00:53+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26581",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "It could be done using some HTML and JavaScript code. If I get a little time, I could try to whip something up.\n\nMy take though: it might be a bit strange for people who are used to hyperlinks just *doing* something (whether it be execute a command or just bring up choices). I'm sure people could figure out, as long as you hyperlinks are consistently used, but it might be a bit jarring at first to have to type *and* click on things to complete a single command. I'm curious to see how it would work. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "It could be done using some HTML and JavaScript code. If I get a little time, I could try to whip something up.<br/><br/>My take though: it might be a bit strange for people who are used to hyperlinks just *doing* something (whether it be execute a command or just bring up choices). I'm sure people could figure out, as long as you hyperlinks are consistently used, but it might be a bit jarring at first to have to type *and* click on things to complete a single command. I'm curious to see how it would work. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-10-16T10:15:09+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26583",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "[quote=&quot;jaynabonne&quot;:3rnkvdu0]but it might be a bit jarring at first to have to type *and* click on things to complete a single command. I'm curious to see how it would work.[/quote:3rnkvdu0]\n\nYes, but you could completely remove the typing if you could display a list off verbs in an extra bar next to the buttom of the screen. So you could first click a verb and then the object to create a valid command. You wouldn't need to use the verb menu of an object and you would get a game like the old scumm games like Maniac Mansion. Sounds great",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>but it might be a bit jarring at first to have to type *and* click on things to complete a single command. I'm curious to see how it would work.</blockquote><br/><br/>Yes, but you could completely remove the typing if you could display a list off verbs in an extra bar next to the buttom of the screen. So you could first click a verb and then the object to create a valid command. You wouldn't need to use the verb menu of an object and you would get a game like the old scumm games like Maniac Mansion. Sounds great",
      "PostDate": "2013-10-16T13:12:53+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26589",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "Yes I agree for the simple case of look or go this would be a little weird, but I'm imagining it used for more complex actions. Still unsure of how it would all work but if we can get a working prototype then we can play with it.\n\nSo when you say this could be done using HTML and JS do we have to insert the word clicked into an HTML element (the command line) or something like that? Then in Quest when you press return or 'do command' button or whatever that will take whatever is in the element and execute it?",
      "EditableFormat": "bbcode",
      "HTML": "Yes I agree for the simple case of look or go this would be a little weird, but I'm imagining it used for more complex actions. Still unsure of how it would all work but if we can get a working prototype then we can play with it.<br/><br/>So when you say this could be done using HTML and JS do we have to insert the word clicked into an HTML element (the command line) or something like that? Then in Quest when you press return or 'do command' button or whatever that will take whatever is in the element and execute it?",
      "PostDate": "2013-10-16T16:11:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26591",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Yes, that's exactly what I was thinking. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Yes, that's exactly what I was thinking. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-10-16T16:59:20+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26594",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Ok, here's a sample. Let me know if you need any improvements.\n\nYou need to send to Quest the InsertInputScript field contents somehow. I chose to make it a game string attribute and then send it using OutputTextNoBr. This needs to be done whenever the screen is cleared, unfortunately. If that is too onerous, we can create a .js file that you simply include in your game. It all depends on which you consider the lesser pain.\n\nYou then indicate a word is &quot;clickable&quot; by calling the function ClickText with the word. It will return a string to be output.\n\n[attachment=0:18okps9c]<!-- ia0 -->ClickInput.aslx<!-- ia0 -->[/attachment:18okps9c]",
      "EditableFormat": "bbcode",
      "HTML": "Ok, here's a sample. Let me know if you need any improvements.<br/><br/>You need to send to Quest the InsertInputScript field contents somehow. I chose to make it a game string attribute and then send it using OutputTextNoBr. This needs to be done whenever the screen is cleared, unfortunately. If that is too onerous, we can create a .js file that you simply include in your game. It all depends on which you consider the lesser pain.<br/><br/>You then indicate a word is &quot;clickable&quot; by calling the function ClickText with the word. It will return a string to be output.<br/><br/><div><a href=\"/attachment/750\">ClickInput.aslx</a></div>",
      "PostDate": "2013-10-17T00:17:18+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26595",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "That's brilliant!\n\nHere is maybe the trickier part. I'd like [i:1tb9jium]all [/i:1tb9jium]the output text to have this functionality. Well, at least the nouns. And it would be nice if I didn't have to explicitly apply ClickText in every piece of game text I write. Is there a single function where all the game output text passes through that I could somehow hijack, such that I could parse the output text for game dictionary nouns (like apple, chair, etc.), and then apply ClickText to each noun? \n\nOr maybe a different idea could work...can each noun's name be written as an expression, so that whenever it's printed, it's basically printed as the expression ClickText([i:1tb9jium]noun[/i:1tb9jium])? I suppose that's not much better than what we have now though.\n\nedit: So it didn't occur to me at first, but much of this machinery must be in Core right? So I'm seeing a few likely candidates for hijacking...ShowRoomDescription for example. Perhaps GetDisplayName is a better choice? ...or ProcessTextSection? \n\nI'm a little in the weeds here, so any advice is appreciated.\n\n[b:1tb9jium]second edit:[/b:1tb9jium] Whoa, so I think I found it!\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=3547&amp;p=23499&amp;hilit=outputtext#p23499\">viewtopic.php?f=10&amp;t=3547&amp;p=23499&amp;hilit=outputtext#p23499</a><!-- l -->\n\n[quote:1tb9jium]In Quest 5.4, msg calls the OutputText function in CoreOutput.aslx so you can insert Log calls there etc. This would also be a good place to call some new Request perhaps, which could instruct the player UI to write to a transcript file.[/quote:1tb9jium]\n\nAm I correct in thinking that if I modify OutputText I can get what I'm after? I'll have to give it a go...\n\n[b:1tb9jium][size=150:1tb9jium]third edit:[/size:1tb9jium][/b:1tb9jium] wow, it works! That's awesome!\n\nAll I did was uppercase all output, doing the ClickText on nouns will be more involved, but does it seem like the basic principle should work with OutputText? Maybe I'm still better off doing it through GetDisplayName....\n\n[b:1tb9jium][size=160:1tb9jium]fourth (and final, I promise) edit: [/size:1tb9jium][/b:1tb9jium] So I'm at a bit of a roadblock...If I modify the result of GetDisplayAlias with ClickText, I just get the HTML span in the output (which makes sense I suppose since GetDisplayAlias returns a string). Doing it in GetDisplayNameLink (as GetDisplayName seems to default to it) gives a weird result (I get a ClickText'd room name above all the output text). So, I might have to parse OutputText for nouns after all?\n\n[b:1tb9jium][size=165:1tb9jium]fifth edit (I know it's getting ridiculous[/size:1tb9jium][/b:1tb9jium]): So I think I was confused before in wrapping the result of GetDisplayName with ClickText -- it wasn't a weird result, just normal Quest behaviour. In any case, no matter what I do, I can't get apple wrapped in ClickText properly (I've deleted all its display verbs and such so it should be just a normal word I guess).",
      "EditableFormat": "bbcode",
      "HTML": "That's brilliant!<br/><br/>Here is maybe the trickier part. I'd like <span style=\"font-style:italic;\">all </span>the output text to have this functionality. Well, at least the nouns. And it would be nice if I didn't have to explicitly apply ClickText in every piece of game text I write. Is there a single function where all the game output text passes through that I could somehow hijack, such that I could parse the output text for game dictionary nouns (like apple, chair, etc.), and then apply ClickText to each noun? <br/><br/>Or maybe a different idea could work...can each noun's name be written as an expression, so that whenever it's printed, it's basically printed as the expression ClickText(<span style=\"font-style:italic;\">noun</span>)? I suppose that's not much better than what we have now though.<br/><br/>edit: So it didn't occur to me at first, but much of this machinery must be in Core right? So I'm seeing a few likely candidates for hijacking...ShowRoomDescription for example. Perhaps GetDisplayName is a better choice? ...or ProcessTextSection? <br/><br/>I'm a little in the weeds here, so any advice is appreciated.<br/><br/><span style=\"font-weight:bold;\">second edit:</span> Whoa, so I think I found it!<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=3547&amp;p=23499&amp;hilit=outputtext#p23499\">viewtopic.php?f=10&amp;t=3547&amp;p=23499&amp;hilit=outputtext#p23499</a><!-- l --><br/><br/><blockquote><p>In Quest 5.4, msg calls the OutputText function in CoreOutput.aslx so you can insert Log calls there etc. This would also be a good place to call some new Request perhaps, which could instruct the player UI to write to a transcript file.</p></blockquote><br/><br/>Am I correct in thinking that if I modify OutputText I can get what I'm after? I'll have to give it a go...<br/><br/><span style=\"font-weight:bold;\"><span style=\"font-size:150\">third edit:</span></span> wow, it works! That's awesome!<br/><br/>All I did was uppercase all output, doing the ClickText on nouns will be more involved, but does it seem like the basic principle should work with OutputText? Maybe I'm still better off doing it through GetDisplayName....<br/><br/><span style=\"font-weight:bold;\"><span style=\"font-size:160\">fourth (and final, I promise) edit: </span></span> So I'm at a bit of a roadblock...If I modify the result of GetDisplayAlias with ClickText, I just get the HTML span in the output (which makes sense I suppose since GetDisplayAlias returns a string). Doing it in GetDisplayNameLink (as GetDisplayName seems to default to it) gives a weird result (I get a ClickText'd room name above all the output text). So, I might have to parse OutputText for nouns after all?<br/><br/><span style=\"font-weight:bold;\"><span style=\"font-size:165\">fifth edit (I know it's getting ridiculous</span></span>): So I think I was confused before in wrapping the result of GetDisplayName with ClickText -- it wasn't a weird result, just normal Quest behaviour. In any case, no matter what I do, I can't get apple wrapped in ClickText properly (I've deleted all its display verbs and such so it should be just a normal word I guess).",
      "PostDate": "2013-10-17T01:49:54+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26598",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Would you be able to post what you have done so far? It might be a simple change from there.\n\nWhat you are doing is similar to something I had done. I didn't go the &quot;find all nouns&quot; route because I wanted to highlight words that didn't necesssarily correspond to nouns. But I had a markup like: &quot;You can see an {!apple!}.&quot; and it would then replace &quot;{!&quot; and &quot;!}&quot; with the appropriate parts. Of course, I was funneling all output through my own function (before hitting msg), so I had control. If you want to have this behavior with all text (even Quest generated) then you probably don't have much choice than to do a search. (I hope that won't be a big performance problem them searching the space of all visible objects for each word!)",
      "EditableFormat": "bbcode",
      "HTML": "Would you be able to post what you have done so far? It might be a simple change from there.<br/><br/>What you are doing is similar to something I had done. I didn't go the &quot;find all nouns&quot; route because I wanted to highlight words that didn't necesssarily correspond to nouns. But I had a markup like: &quot;You can see an {!apple!}.&quot; and it would then replace &quot;{!&quot; and &quot;!}&quot; with the appropriate parts. Of course, I was funneling all output through my own function (before hitting msg), so I had control. If you want to have this behavior with all text (even Quest generated) then you probably don't have much choice than to do a search. (I hope that won't be a big performance problem them searching the space of all visible objects for each word!)",
      "PostDate": "2013-10-17T10:37:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26601",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "I feel like applying the hehavior to all Quest text should work in theory, if I can find the right point in Quest's machinery to insert the function. I've investigated a bit more and I have an inkling of what's going on though. ClickText will wrap the span around its keyword, but depending on when you apply ClickText that keyword may already have markup around it. I think the inner markup has precedence if there are conflicting elements. I think that's happening with apple in the test since I [i:2ah6fbmn]can [/i:2ah6fbmn]get all the output text [i:2ah6fbmn]but [/i:2ah6fbmn]apple to have ClickText functionality (it's quite funny to send whole sentences to the command line with one click by the way! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> ). \n\nI'll have some more time tonight to look into it.",
      "EditableFormat": "bbcode",
      "HTML": "I feel like applying the hehavior to all Quest text should work in theory, if I can find the right point in Quest's machinery to insert the function. I've investigated a bit more and I have an inkling of what's going on though. ClickText will wrap the span around its keyword, but depending on when you apply ClickText that keyword may already have markup around it. I think the inner markup has precedence if there are conflicting elements. I think that's happening with apple in the test since I <span style=\"font-style:italic;\">can </span>get all the output text <span style=\"font-style:italic;\">but </span>apple to have ClickText functionality (it's quite funny to send whole sentences to the command line with one click by the way! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> ). <br/><br/>I'll have some more time tonight to look into it.",
      "PostDate": "2013-10-17T16:11:01+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26612",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "Progress!\n\nI made a very simple change to ProcessTextCommand_Object. This seems to be the function that deals with game objects in output. This is the function, \n\n[code:2ejdhzmi]\n  &lt;function name=&quot;ProcessTextCommand_Object&quot; type=&quot;string&quot; parameters=&quot;section, data&quot;&gt;\n    &lt;!&#91;CDATA&#91;\n    objectname = Mid(section, 8)\n    text = &quot;&quot;\n    colon = Instr(objectname, &quot;&#58;&quot;)\n    if (colon &gt; 0) {\n      text = Mid(objectname, colon + 1)\n      objectname = Left(objectname, colon - 1)\n    }\n    object = GetObject(objectname)\n    if (object = null) {\n      return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)\n    }\n    else {\n      if (LengthOf(text) = 0) {\n        text = SafeXML(GetDisplayAlias(object))\n      }\n      if (game&#46;enablehyperlinks) {\n        if (not HasInt(game, &quot;lastlinkid&quot;)) {\n          game&#46;lastlinkid = 0\n        }\n        game&#46;lastlinkid = game&#46;lastlinkid + 1\n        linkid = &quot;verblink&quot; + game&#46;lastlinkid\n        colour = &quot;&quot;\n        if (HasString(object, &quot;linkcolour&quot;) and GetUIOption(&quot;UseGameColours&quot;) = &quot;true&quot;) {\n          colour = object&#46;linkcolour\n        }\n        else {\n          colour = GetLinkTextColour()\n        }\n        style = GetCurrentTextFormat(colour)\n\n// * * * I changed the following * * * \n\n        return (&quot;&lt;a id=\\&quot;&quot; + linkid + &quot;\\&quot; style=\\&quot;&quot; + style + &quot;\\&quot; class=\\&quot;cmdlink elementmenu\\&quot; data-elementid=\\&quot;&quot; + object&#46;name + &quot;\\&quot;&gt;&quot; + text + &quot;&lt;/a&gt;&quot;)\n      }\n      else {\n        return (text)\n      }\n    }\n    &#93;&#93;&gt;\n  &lt;/function&gt;\n[/code:2ejdhzmi]\n\nAll I did was add jaynabonne's code to the anchor element. So I made it look like this, \n\n[code:2ejdhzmi]\n&quot;&lt;a onclick=\\&quot;InsertInput((this&#46;innerText || this&#46;textContent))\\&quot;  id=\\&quot;&quot; + linkid + &quot;\\&quot; style=\\&quot;&quot; + style + &quot;\\&quot; class=\\&quot;cmdlink elementmenu\\&quot; data-elementid=\\&quot;&quot; + object&#46;name + &quot;\\&quot;&gt;&quot; + text + &quot;&lt;/a&gt;&quot;\n[/code:2ejdhzmi]\n\nSo now to make an actual prototype to see how well this works in a real game! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Of course, this is only part of the puzzle...I still need something that can parse all the text of descriptions and such for nouns (anything where the object name isn't generated by the Object I suppose).",
      "EditableFormat": "bbcode",
      "HTML": "Progress!<br/><br/>I made a very simple change to ProcessTextCommand_Object. This seems to be the function that deals with game objects in output. This is the function, <br/><br/><pre><code><br/>  &lt;function name=&quot;ProcessTextCommand_Object&quot; type=&quot;string&quot; parameters=&quot;section, data&quot;&gt;<br/>    &lt;!&#91;CDATA&#91;<br/>    objectname = Mid(section, 8)<br/>    text = &quot;&quot;<br/>    colon = Instr(objectname, &quot;&#58;&quot;)<br/>    if (colon &gt; 0) {<br/>      text = Mid(objectname, colon + 1)<br/>      objectname = Left(objectname, colon - 1)<br/>    }<br/>    object = GetObject(objectname)<br/>    if (object = null) {<br/>      return (&quot;{&quot; + ProcessTextSection(section, data) + &quot;}&quot;)<br/>    }<br/>    else {<br/>      if (LengthOf(text) = 0) {<br/>        text = SafeXML(GetDisplayAlias(object))<br/>      }<br/>      if (game&#46;enablehyperlinks) {<br/>        if (not HasInt(game, &quot;lastlinkid&quot;)) {<br/>          game&#46;lastlinkid = 0<br/>        }<br/>        game&#46;lastlinkid = game&#46;lastlinkid + 1<br/>        linkid = &quot;verblink&quot; + game&#46;lastlinkid<br/>        colour = &quot;&quot;<br/>        if (HasString(object, &quot;linkcolour&quot;) and GetUIOption(&quot;UseGameColours&quot;) = &quot;true&quot;) {<br/>          colour = object&#46;linkcolour<br/>        }<br/>        else {<br/>          colour = GetLinkTextColour()<br/>        }<br/>        style = GetCurrentTextFormat(colour)<br/><br/>// * * * I changed the following * * * <br/><br/>        return (&quot;&lt;a id=\\&quot;&quot; + linkid + &quot;\\&quot; style=\\&quot;&quot; + style + &quot;\\&quot; class=\\&quot;cmdlink elementmenu\\&quot; data-elementid=\\&quot;&quot; + object&#46;name + &quot;\\&quot;&gt;&quot; + text + &quot;&lt;/a&gt;&quot;)<br/>      }<br/>      else {<br/>        return (text)<br/>      }<br/>    }<br/>    &#93;&#93;&gt;<br/>  &lt;/function&gt;<br/></code></pre><br/><br/>All I did was add jaynabonne's code to the anchor element. So I made it look like this, <br/><br/><pre><code><br/>&quot;&lt;a onclick=\\&quot;InsertInput((this&#46;innerText || this&#46;textContent))\\&quot;  id=\\&quot;&quot; + linkid + &quot;\\&quot; style=\\&quot;&quot; + style + &quot;\\&quot; class=\\&quot;cmdlink elementmenu\\&quot; data-elementid=\\&quot;&quot; + object&#46;name + &quot;\\&quot;&gt;&quot; + text + &quot;&lt;/a&gt;&quot;<br/></code></pre><br/><br/>So now to make an actual prototype to see how well this works in a real game! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Of course, this is only part of the puzzle...I still need something that can parse all the text of descriptions and such for nouns (anything where the object name isn't generated by the Object I suppose).",
      "PostDate": "2013-10-18T07:23:16+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26637",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "Hi Jay,\ndo you have an idea how to change InsertInput to send the created command to Quest so the command is executed?",
      "EditableFormat": "bbcode",
      "HTML": "Hi Jay,<br/>do you have an idea how to change InsertInput to send the created command to Quest so the command is executed?",
      "PostDate": "2013-10-21T20:59:24+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26639",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Do you mean when you click on &quot;apple&quot;, it sends &quot;apple&quot; as the command? Or do you mean have something you can click on to execute the command when done assembling it with the various words?",
      "EditableFormat": "bbcode",
      "HTML": "Do you mean when you click on &quot;apple&quot;, it sends &quot;apple&quot; as the command? Or do you mean have something you can click on to execute the command when done assembling it with the various words?",
      "PostDate": "2013-10-21T22:24:39+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26641",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "But if you just want to send what you click on as a command, then change the onclick to this:\n\n[code:2u1dzynw]onclick='sendCommand(this&#46;innerText || this&#46;textContent)'[/code:2u1dzynw]\nReplace InsertText with sendCommand.",
      "EditableFormat": "bbcode",
      "HTML": "But if you just want to send what you click on as a command, then change the onclick to this:<br/><br/><pre><code>onclick='sendCommand(this&#46;innerText || this&#46;textContent)'</code></pre><br/>Replace InsertText with sendCommand.",
      "PostDate": "2013-10-21T22:37:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26667",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "Great, it works! Thanx",
      "EditableFormat": "bbcode",
      "HTML": "Great, it works! Thanx",
      "PostDate": "2013-10-22T19:44:15+01:00",
      "LastEditDate": null
    }
  ]
}
