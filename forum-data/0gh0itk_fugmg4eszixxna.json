{
  "Topic": {
    "TopicId": "0gh0itk_fugmg4eszixxna",
    "ForumId": "24",
    "Title": "Anyone know how to do this better?",
    "LastUpdated": "2019-04-02T02:51:05.6180473Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "5fb95aff-4b97-4966-874f-3dba3ee2ba19",
      "UserId": 251768,
      "Username": "Bluevoss",
      "AvatarUrl": "https://i.imgur.com/6mfIIbhb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In my game, you can pick up trinkets. Someone asked if they could be stored and I came up with this brute force method of randomly assigning trinkets a value. Maybe you always get the trink1, then trink2, then trink3 and the number randomly assigned to it provides a description? Not sure. Interested in if someone can do this better...\r\n\r\n```\r\n[[Start]]:\r\n\r\n    //RANDOM NUMBER GENERATOR\r\n    squiffy.getRndInteger = function(min,max){\r\n        return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n    };\r\n    \r\n@set trink1=0\r\n@set trink2=0\r\n@set trink3=0\r\n\r\n@set count=1\r\n\r\n[[Ready to try this?]](Init Loop Head)\r\n\r\n[[Init Loop Head]]:\r\n\r\n    set(\"genNum\", squiffy.getRndInteger(1,3));\r\n\r\n    if ((get(\"genNum\")==1) && (get(\"trink1\")==0)){\r\n        set(\"trink1\",get(\"count\"));\r\n        set(\"count\",get(\"count\")+1);\r\n    }\r\n    \r\n    if ((get(\"genNum\")==2) && (get(\"trink2\")==0)){\r\n        set(\"trink2\",get(\"count\"));\r\n        set(\"count\",get(\"count\")+1);\r\n    }\r\n    \r\n    if ((get(\"genNum\")==3) && (get(\"trink3\")==0)){\r\n        set(\"trink3\",get(\"count\"));\r\n        set(\"count\",get(\"count\")+1);\r\n    }\r\n    \r\n    if (get(\"count\")==4){squiffy.story.go(\"End Loop\");}\r\n    else {squiffy.story.go(\"Init Loop Head\");}\r\n    \r\n[[End Loop]]:\r\n\r\ntrink1 = {trink1}<br>\r\ntrink2 = {trink2}<br>\r\ntrink3 = {trink3}<br>\r\n\r\n[[Try again?]](Start)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>In my game, you can pick up trinkets. Someone asked if they could be stored and I came up with this brute force method of randomly assigning trinkets a value. Maybe you always get the trink1, then trink2, then trink3 and the number randomly assigned to it provides a description? Not sure. Interested in if someone can do this better...</p>\n<pre><code>[[Start]]:\n\n    //RANDOM NUMBER GENERATOR\n    squiffy.getRndInteger = function(min,max){\n        return Math.floor(Math.random() * (max - min + 1) ) + min;\n    };\n    \n@set trink1=0\n@set trink2=0\n@set trink3=0\n\n@set count=1\n\n[[Ready to try this?]](Init Loop Head)\n\n[[Init Loop Head]]:\n\n    set(\"genNum\", squiffy.getRndInteger(1,3));\n\n    if ((get(\"genNum\")==1) &amp;&amp; (get(\"trink1\")==0)){\n        set(\"trink1\",get(\"count\"));\n        set(\"count\",get(\"count\")+1);\n    }\n    \n    if ((get(\"genNum\")==2) &amp;&amp; (get(\"trink2\")==0)){\n        set(\"trink2\",get(\"count\"));\n        set(\"count\",get(\"count\")+1);\n    }\n    \n    if ((get(\"genNum\")==3) &amp;&amp; (get(\"trink3\")==0)){\n        set(\"trink3\",get(\"count\"));\n        set(\"count\",get(\"count\")+1);\n    }\n    \n    if (get(\"count\")==4){squiffy.story.go(\"End Loop\");}\n    else {squiffy.story.go(\"Init Loop Head\");}\n    \n[[End Loop]]:\n\ntrink1 = {trink1}&lt;br&gt;\ntrink2 = {trink2}&lt;br&gt;\ntrink3 = {trink3}&lt;br&gt;\n\n[[Try again?]](Start)\n</code></pre>\n\n",
      "PostDate": "2019-04-02T02:51:05.6180473Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "32f879b7-39ad-4e2f-9714-a882de306631",
      "UserId": 251768,
      "Username": "Bluevoss",
      "AvatarUrl": "https://i.imgur.com/6mfIIbhb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The end result is that each trinket should have a unique value. But boy, is this ever a sledgehammer approach.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>The end result is that each trinket should have a unique value. But boy, is this ever a sledgehammer approach.</p>\n\n",
      "PostDate": "2019-04-02T03:42:44.7356477Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
