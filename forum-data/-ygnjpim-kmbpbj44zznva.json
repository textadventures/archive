{
  "Topic": {
    "TopicId": "-ygnjpim-kmbpbj44zznva",
    "ForumId": "18",
    "Title": "ATTENTION: QUEST AUTHORS WHO USE THE ENTER VERB",
    "LastUpdated": "2021-05-11T03:45:45.3942214Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "051ef9bd-859a-46e6-9807-1fc5dfc9a26d",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In Quest 5.8.0:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/117754377-d8ea7700-b1df-11eb-995e-e5e0ee7413ca.png)\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/117754419-f3bceb80-b1df-11eb-8878-7949f5dac508.png)\r\n\r\n---\r\n# The Fix\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/117754535-21099980-b1e0-11eb-90b7-cd3624f0291e.png)\r\n\r\n---\r\n^^^ Show the library elements.\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/117754617-4c8c8400-b1e0-11eb-81c0-44bbdfc0f857.png)\r\n\r\n---\r\n^^^ Select the ```enter_verb``` verb, and click the \"Copy\" button to copy it into the game's main code.\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/117754677-6f1e9d00-b1e0-11eb-86c6-a345866feb10.png)\r\n\r\n---\r\n^^^ Now it is editable.\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/117754739-8e1d2f00-b1e0-11eb-8324-91a63120ef55.png)\r\n\r\n---\r\n^^^ All we need to is copy that pattern to the clipboard, then change the pattern's drop down from \"Regular expression\" to \"Command pattern\".\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/117754866-cf154380-b1e0-11eb-8fdc-145b3f738413.png)\r\n\r\n---\r\n^^^ Paste the pattern back in.  (It's ```enter #object#```, if you forgot to copy it.)\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/117754933-ed7b3f00-b1e0-11eb-8c4b-60389bb047bb.png)\r\n\r\n---\r\nNow the dropdown menu shows \"Enter\" rather than \"enterverb\", which is already a good sign; right?!?\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/117754995-0ab00d80-b1e1-11eb-92d0-4889b3f0fa40.png)\r\n\r\n---\r\n...and now it works as expected!\r\n\r\nI reported this [issue on GitHub](https://github.com/textadventures/quest/issues/1121) already.\r\n\r\nThis should be fixed the next time Quest 5 gets updated.",
      "EditableFormat": "markdown",
      "HTML": "<p>In Quest 5.8.0:</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/117754377-d8ea7700-b1df-11eb-995e-e5e0ee7413ca.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/117754419-f3bceb80-b1df-11eb-8878-7949f5dac508.png\" alt=\"image\"></p>\n<hr>\n<h1>The Fix</h1>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/117754535-21099980-b1e0-11eb-90b7-cd3624f0291e.png\" alt=\"image\"></p>\n<hr>\n<p>^^^ Show the library elements.</p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/117754617-4c8c8400-b1e0-11eb-81c0-44bbdfc0f857.png\" alt=\"image\"></p>\n<hr>\n<p>^^^ Select the <code>enter_verb</code> verb, and click the \"Copy\" button to copy it into the game's main code.</p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/117754677-6f1e9d00-b1e0-11eb-86c6-a345866feb10.png\" alt=\"image\"></p>\n<hr>\n<p>^^^ Now it is editable.</p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/117754739-8e1d2f00-b1e0-11eb-8324-91a63120ef55.png\" alt=\"image\"></p>\n<hr>\n<p>^^^ All we need to is copy that pattern to the clipboard, then change the pattern's drop down from \"Regular expression\" to \"Command pattern\".</p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/117754866-cf154380-b1e0-11eb-8fdc-145b3f738413.png\" alt=\"image\"></p>\n<hr>\n<p>^^^ Paste the pattern back in.  (It's <code>enter #object#</code>, if you forgot to copy it.)</p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/117754933-ed7b3f00-b1e0-11eb-8c4b-60389bb047bb.png\" alt=\"image\"></p>\n<hr>\n<p>Now the dropdown menu shows \"Enter\" rather than \"enterverb\", which is already a good sign; right?!?</p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/117754995-0ab00d80-b1e1-11eb-92d0-4889b3f0fa40.png\" alt=\"image\"></p>\n<hr>\n<p>...and now it works as expected!</p>\n<p>I reported this <a href=\"https://github.com/textadventures/quest/issues/1121\">issue on GitHub</a> already.</p>\n<p>This should be fixed the next time Quest 5 gets updated.</p>\n\n",
      "PostDate": "2021-05-11T03:45:45.3942214Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1d0a3a09-5887-4805-84bc-42fdeb2ce8f8",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you want a verb's displayed name to be something other than its name or property, you can do something like:\r\n```\r\nenter_verb.displayverb = \"enter\"\r\n```\r\n\r\n> I reported this issue on GitHub already.\r\n> \r\n> This should be fixed the next time Quest 5 gets updated.\r\n\r\nWhich library contains the enter verb? I suspect filing a bug request with whoever maintains that library would be more helpful. (I note that the verb is apparently named `enter_verb`, presumably because the Quest core won't allow you to create a verb named `enter`; it says that you should use a command rather than a verb for that task)",
      "EditableFormat": "markdown",
      "HTML": "<p>If you want a verb's displayed name to be something other than its name or property, you can do something like:</p>\n<pre><code>enter_verb.displayverb = \"enter\"\n</code></pre>\n<blockquote>\n<p>I reported this issue on GitHub already.</p>\n<p>This should be fixed the next time Quest 5 gets updated.</p>\n</blockquote>\n<p>Which library contains the enter verb? I suspect filing a bug request with whoever maintains that library would be more helpful. (I note that the verb is apparently named <code>enter_verb</code>, presumably because the Quest core won't allow you to create a verb named <code>enter</code>; it says that you should use a command rather than a verb for that task)</p>\n\n",
      "PostDate": "2021-05-11T09:28:44.3477023Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e5f4fdec-1d03-466b-92ef-74d02561113c",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Which library contains the enter verb? I suspect filing a bug request with whoever maintains that library would be more helpful.\r\n\r\nhttps://github.com/textadventures/quest/blob/master/WorldModel/WorldModel/Core/Languages/English.aslx#L515\r\n\r\n```\r\n\r\n  <!-- Need a special verb in English because of the name collision with the \"enter\" script rooms use -->\r\n  <verb name=\"enter_verb\">\r\n    <pattern>enter #object#</pattern>\r\n    <property>enterverb</property>\r\n    <defaultexpression>\"You can't enter \"+object.article+\".\"</defaultexpression>\r\n    <scope>notheld</scope>\r\n  </verb>\r\n```\r\n\r\n---\r\nThat's the existing code on GitHub.\r\n\r\nFunny thing is, that should be correct.\r\n\r\nThis is treated as a regular expression: ```<pattern type=\"string\">enter #object#</pattern>```\r\n\r\nThis is treated a command pattern: ```<pattern>enter #object#</pattern>```\r\n\r\n---\r\nHere's the code when I copy ```enter_verb``` into the game:\r\n\r\n```\r\n  <verb name=\"enter_verb\">\r\n    <pattern type=\"string\">enter #object#</pattern>\r\n    <property>enterverb</property>\r\n    <defaultexpression>\"You can't enter \"+object.article+\".\"</defaultexpression>\r\n    <scope>notheld</scope>\r\n  </verb>\r\n```\r\n\r\n---\r\nBut this is what's actually in Core/Languages/English.aslx in the Quest directory (same as on GitHub, of course):\r\n\r\n```\r\n  <verb name=\"enter_verb\">\r\n    <pattern>enter #object#</pattern>\r\n    <property>enterverb</property>\r\n    <defaultexpression>\"You can't enter \"+object.article+\".\"</defaultexpression>\r\n    <scope>notheld</scope>\r\n  </verb>\r\n```\r\n\r\n---\r\nI don't understand why the editor is changing it like that, but this is the best actual fix to apply to the source code I've come up with:\r\n\r\n```\r\nBAD CODE REMOVED\r\n\r\nSCROLL DOWN TO NEXT POST FOR CODE\r\n```\r\n\r\n---\r\nAlso, I already have a fork of Quest with a [pending pull request to fix a different issue](https://github.com/textadventures/quest/pull/1119).\r\n\r\nThe last time I tried to put in more than one pull request, there were merging problems.\r\n\r\n---\r\n> If you want a verb's displayed name to be something other than its name or property, you can do something like: ```enter_verb.displayverb = \"enter\"```\r\n\r\nI was not aware of that.\r\n\r\nI bet that will come in handy one day!\r\n\r\n---\r\n> note that the verb is apparently named ```enter_verb```, presumably because the Quest core won't allow you to create a verb named ```enter```; it says that you should use a command rather than a verb for that task\r\n\r\nYeah, the ```enter``` attribute is for the after entering scripts.\r\n\r\n---\r\nHistory shows that this is my fault, by the way:\r\n\r\nhttps://textadventures.co.uk/forum/quest/topic/o5h4rt5qcuoyqdbfvnwnaw/how-to-use-enter-as-a-verb\r\n\r\nhttps://textadventures.co.uk/forum/quest/topic/1tfgwylwrkyw2-mpmcpnrq/the-command-enter-solved",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Which library contains the enter verb? I suspect filing a bug request with whoever maintains that library would be more helpful.</p>\n</blockquote>\n<p>https://github.com/textadventures/quest/blob/master/WorldModel/WorldModel/Core/Languages/English.aslx#L515</p>\n<pre><code>\n  &lt;!-- Need a special verb in English because of the name collision with the \"enter\" script rooms use --&gt;\n  &lt;verb name=\"enter_verb\"&gt;\n    &lt;pattern&gt;enter #object#&lt;/pattern&gt;\n    &lt;property&gt;enterverb&lt;/property&gt;\n    &lt;defaultexpression&gt;\"You can't enter \"+object.article+\".\"&lt;/defaultexpression&gt;\n    &lt;scope&gt;notheld&lt;/scope&gt;\n  &lt;/verb&gt;\n</code></pre>\n<hr>\n<p>That's the existing code on GitHub.</p>\n<p>Funny thing is, that should be correct.</p>\n<p>This is treated as a regular expression: <code>&lt;pattern type=\"string\"&gt;enter #object#&lt;/pattern&gt;</code></p>\n<p>This is treated a command pattern: <code>&lt;pattern&gt;enter #object#&lt;/pattern&gt;</code></p>\n<hr>\n<p>Here's the code when I copy <code>enter_verb</code> into the game:</p>\n<pre><code>  &lt;verb name=\"enter_verb\"&gt;\n    &lt;pattern type=\"string\"&gt;enter #object#&lt;/pattern&gt;\n    &lt;property&gt;enterverb&lt;/property&gt;\n    &lt;defaultexpression&gt;\"You can't enter \"+object.article+\".\"&lt;/defaultexpression&gt;\n    &lt;scope&gt;notheld&lt;/scope&gt;\n  &lt;/verb&gt;\n</code></pre>\n<hr>\n<p>But this is what's actually in Core/Languages/English.aslx in the Quest directory (same as on GitHub, of course):</p>\n<pre><code>  &lt;verb name=\"enter_verb\"&gt;\n    &lt;pattern&gt;enter #object#&lt;/pattern&gt;\n    &lt;property&gt;enterverb&lt;/property&gt;\n    &lt;defaultexpression&gt;\"You can't enter \"+object.article+\".\"&lt;/defaultexpression&gt;\n    &lt;scope&gt;notheld&lt;/scope&gt;\n  &lt;/verb&gt;\n</code></pre>\n<hr>\n<p>I don't understand why the editor is changing it like that, but this is the best actual fix to apply to the source code I've come up with:</p>\n<pre><code>BAD CODE REMOVED\n\nSCROLL DOWN TO NEXT POST FOR CODE\n</code></pre>\n<hr>\n<p>Also, I already have a fork of Quest with a <a href=\"https://github.com/textadventures/quest/pull/1119\">pending pull request to fix a different issue</a>.</p>\n<p>The last time I tried to put in more than one pull request, there were merging problems.</p>\n<hr>\n<blockquote>\n<p>If you want a verb's displayed name to be something other than its name or property, you can do something like: <code>enter_verb.displayverb = \"enter\"</code></p>\n</blockquote>\n<p>I was not aware of that.</p>\n<p>I bet that will come in handy one day!</p>\n<hr>\n<blockquote>\n<p>note that the verb is apparently named <code>enter_verb</code>, presumably because the Quest core won't allow you to create a verb named <code>enter</code>; it says that you should use a command rather than a verb for that task</p>\n</blockquote>\n<p>Yeah, the <code>enter</code> attribute is for the after entering scripts.</p>\n<hr>\n<p>History shows that this is my fault, by the way:</p>\n<p>https://textadventures.co.uk/forum/quest/topic/o5h4rt5qcuoyqdbfvnwnaw/how-to-use-enter-as-a-verb</p>\n<p>https://textadventures.co.uk/forum/quest/topic/1tfgwylwrkyw2-mpmcpnrq/the-command-enter-solved</p>\n\n",
      "PostDate": "2021-05-11T15:49:36.146351Z",
      "LastEditDate": "2021-05-11T18:08:24.8201631Z",
      "link": null
    },
    {
      "PostId": "24d81278-b64f-461d-a9f4-49c9c224ed74",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry, mrangel.\r\n\r\nI should have been more detailed in the first post.\r\n\r\nI am porting a huge game from ZIL to Quest right now, and that's how I keep finding all this odd behavior in the dark corners of the code.\r\n\r\nI am consumed by the porting process, and I'm a little more scatter-brained than I normally am (which is really saying something, when you think about it).",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry, mrangel.</p>\n<p>I should have been more detailed in the first post.</p>\n<p>I am porting a huge game from ZIL to Quest right now, and that's how I keep finding all this odd behavior in the dark corners of the code.</p>\n<p>I am consumed by the porting process, and I'm a little more scatter-brained than I normally am (which is really saying something, when you think about it).</p>\n\n",
      "PostDate": "2021-05-11T16:48:51.9245878Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "56e557f8-1c1f-480e-8d5c-1c74cb851e33",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Nope. That last code I posted broke a game with the existing ```enter_verb``` copied into it.\r\n\r\nI had to change the property to \"enter_verb\" so it named it correctly (like the existing one).\r\n\r\n```xml\r\n  <verbtemplate name=\"enter_verb\">enter</verbtemplate>\r\n  <dynamictemplate name=\"DefaultEnter\">WriteVerb(game.pov, \"can't\") + \" enter \" + object.article + \".\"</dynamictemplate>\r\n  <verb template=\"enter_verb\" property=\"enter_verb\" response=\"DefaultEnter\"/>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Nope. That last code I posted broke a game with the existing <code>enter_verb</code> copied into it.</p>\n<p>I had to change the property to \"enter_verb\" so it named it correctly (like the existing one).</p>\n<pre><code>  &lt;verbtemplate name=\"enter_verb\"&gt;enter&lt;/verbtemplate&gt;\n  &lt;dynamictemplate name=\"DefaultEnter\"&gt;WriteVerb(game.pov, \"can't\") + \" enter \" + object.article + \".\"&lt;/dynamictemplate&gt;\n  &lt;verb template=\"enter_verb\" property=\"enter_verb\" response=\"DefaultEnter\"/&gt;\n</code></pre>\n\n",
      "PostDate": "2021-05-11T18:07:38.8278164Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8a98a01d-8769-4ea2-8fb8-83858ada7efd",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah… I thought I'd not seen that verb before, and checked in the core files… didn't think to look in the language library.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah… I thought I'd not seen that verb before, and checked in the core files… didn't think to look in the language library.</p>\n\n",
      "PostDate": "2021-05-11T20:06:27.2095797Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ad969697-346c-4293-802b-d35a5002449d",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">  didn't think to look in the language library\r\n\r\nNeither did I. I had to use grep to find that sucker.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>didn't think to look in the language library</p>\n</blockquote>\n<p>Neither did I. I had to use grep to find that sucker.</p>\n\n",
      "PostDate": "2021-05-11T20:31:03.5825944Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c959d61d-235e-4d4e-b9a8-73e1dbd73fcb",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Neither did I. I had to use grep to find that sucker.\r\n\r\nYeah :p\r\n\r\nI did\r\n```\r\ngrep enter_verb $QUESTCORE/*\r\n```\r\nWhich didn't find it, so I assumed it must have been pulled into your project from some other library :p\r\nAlthough… I'm looking now, and I don't see it in the language file either, so I'm assuming this is new \r\n\r\nPutting it in the language file is a weird move. Names of things should be in the language file, but functional code shouldn't be.\r\n\r\n>      <!-- Need a special verb in English because of the name collision with the \"enter\" script rooms use -->\r\n\r\nThat is a little silly. The property/attribute names for verbs are in English regardless of the target language, so the name collision is just as much an issue in other languages. The verb should be defined in `CoreCommands.aslx`.\r\n\r\nIf I'm understanding correctly, in `CoreCommands.aslx` it should be something like:\r\n```\r\n  <verb name=\"enter\" template=\"enter\" property=\"enter_verb\" displayverb=\"[enter]\" response=\"DefaultEnter\"/>\r\n```\r\nand in `English.aslx`\r\n```\r\n  <verbtemplate name=\"enter\">enter</verbtemplate>\r\n  <verbtemplate name=\"enter\">go in</verbtemplate>\r\n  <verbtemplate name=\"enter\">go into</verbtemplate>\r\n  <verbtemplate name=\"enter\">get in</verbtemplate>\r\n  <verbtemplate name=\"enter\">get into</verbtemplate>\r\n  <dynamictemplate name=\"DefaultEnter\">WriteVerb(game.pov, \"can't\") + \" enter \" + object.article + \".\"</dynamictemplate>\r\n```\r\nand in `CoreEditorObjectVerbs.aslx`, change:\r\n<pre><code style=\"color: brown\">        &lt;item>\r\n          &lt;key>enter&lt;/key>\r\n          &lt;value>Use a command, rather than a verb, to allow the player to enter this object.&lt;/value>\r\n        &lt;/item></code></pre>\r\nto something like:\r\n```\r\n        <item>\r\n          <key>enter</key>\r\n          <value>Input the verb name as \"enter_verb\". It will appear as \"enter\" to the player.</value>\r\n        </item>\r\n```\r\n\r\n(Just realised I didn't see all of your replies, as Chrome was being weird and only scrolling a page at a time earlier. Looking at your code… is it necessary to use `enter_verb` anywhere other than the \"property\" field? As far as I can tell neither object names nor templates should clash with an attribute name that is used for something else. If this is another oddity of the editor, I'd appreciate knowing about it)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Neither did I. I had to use grep to find that sucker.</p>\n</blockquote>\n<p>Yeah :p</p>\n<p>I did</p>\n<pre><code>grep enter_verb $QUESTCORE/*\n</code></pre>\n<p>Which didn't find it, so I assumed it must have been pulled into your project from some other library :p<br>\nAlthough… I'm looking now, and I don't see it in the language file either, so I'm assuming this is new</p>\n<p>Putting it in the language file is a weird move. Names of things should be in the language file, but functional code shouldn't be.</p>\n<blockquote>\n<pre><code> &lt;!-- Need a special verb in English because of the name collision with the \"enter\" script rooms use --&gt;\n</code></pre>\n</blockquote>\n<p>That is a little silly. The property/attribute names for verbs are in English regardless of the target language, so the name collision is just as much an issue in other languages. The verb should be defined in <code>CoreCommands.aslx</code>.</p>\n<p>If I'm understanding correctly, in <code>CoreCommands.aslx</code> it should be something like:</p>\n<pre><code>  &lt;verb name=\"enter\" template=\"enter\" property=\"enter_verb\" displayverb=\"[enter]\" response=\"DefaultEnter\"/&gt;\n</code></pre>\n<p>and in <code>English.aslx</code></p>\n<pre><code>  &lt;verbtemplate name=\"enter\"&gt;enter&lt;/verbtemplate&gt;\n  &lt;verbtemplate name=\"enter\"&gt;go in&lt;/verbtemplate&gt;\n  &lt;verbtemplate name=\"enter\"&gt;go into&lt;/verbtemplate&gt;\n  &lt;verbtemplate name=\"enter\"&gt;get in&lt;/verbtemplate&gt;\n  &lt;verbtemplate name=\"enter\"&gt;get into&lt;/verbtemplate&gt;\n  &lt;dynamictemplate name=\"DefaultEnter\"&gt;WriteVerb(game.pov, \"can't\") + \" enter \" + object.article + \".\"&lt;/dynamictemplate&gt;\n</code></pre>\n<p>and in <code>CoreEditorObjectVerbs.aslx</code>, change:</p>\n<pre><code style=\"color: brown\">        &lt;item&gt;\n          &lt;key&gt;enter&lt;/key&gt;\n          &lt;value&gt;Use a command, rather than a verb, to allow the player to enter this object.&lt;/value&gt;\n        &lt;/item&gt;</code></pre>\n<p>to something like:</p>\n<pre><code>        &lt;item&gt;\n          &lt;key&gt;enter&lt;/key&gt;\n          &lt;value&gt;Input the verb name as \"enter_verb\". It will appear as \"enter\" to the player.&lt;/value&gt;\n        &lt;/item&gt;\n</code></pre>\n<p>(Just realised I didn't see all of your replies, as Chrome was being weird and only scrolling a page at a time earlier. Looking at your code… is it necessary to use <code>enter_verb</code> anywhere other than the \"property\" field? As far as I can tell neither object names nor templates should clash with an attribute name that is used for something else. If this is another oddity of the editor, I'd appreciate knowing about it)</p>\n\n",
      "PostDate": "2021-05-11T21:34:24.8203391Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0cb23608-c60b-47a4-83db-001c2c95c886",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(Also, looking at the updates on github since the version I have… I see that some of my idiocy made it on there. I was quite proud of the modifications to `Conjugate`, but only later realised that there should be special treatment for \"will\" and \"can\". These auxiliary verbs in English are weird and follow their own rules; they are never conjugated. But we have other verbs meaning other things: \"can\" meaning to put something in a can, and \"will\" meaning to intend, which are conjugated normally. So I think that for real consistency, it would be ideal to have `Conjugate` not called for messages that use these verbs)\r\n\r\nAlso… this just occurred to me while writing the post above. Can we have text processor functions for \"conjugate\", \"writeverb\", and \"capfirst\"? It would make so much of the language file neater.",
      "EditableFormat": "markdown",
      "HTML": "<p>(Also, looking at the updates on github since the version I have… I see that some of my idiocy made it on there. I was quite proud of the modifications to <code>Conjugate</code>, but only later realised that there should be special treatment for \"will\" and \"can\". These auxiliary verbs in English are weird and follow their own rules; they are never conjugated. But we have other verbs meaning other things: \"can\" meaning to put something in a can, and \"will\" meaning to intend, which are conjugated normally. So I think that for real consistency, it would be ideal to have <code>Conjugate</code> not called for messages that use these verbs)</p>\n<p>Also… this just occurred to me while writing the post above. Can we have text processor functions for \"conjugate\", \"writeverb\", and \"capfirst\"? It would make so much of the language file neater.</p>\n\n",
      "PostDate": "2021-05-11T21:49:25.6953822Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "846ac8ea-b3ab-4b75-8f9a-fe49755fc946",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "1. See all that stuff you came up with that I didn't even think about?  That's another reason I hadn't done a pull request yet.\r\n\r\n2. I abuse grep. I just go into the main quest directory and ```grep -rn enter_verb *```.\r\n\r\n---\r\n> Looking at your code… is it necessary to use enter_verb anywhere other than the \"property\" field?  As far as I can tell neither object names nor templates should clash with an attribute name that is used for something else. If this is another oddity of the editor, I'd appreciate knowing about it\r\n\r\nOh, I don't really know.  I was just trying to copy how the other verbs I found were coded.\r\n\r\nI definitely defer to you concerning verbs.\r\n\r\n---\r\n> Also, looking at the updates on github since the version I have… I see that some of my idiocy made it on there.\r\n\r\nHey!\r\n\r\nThat's the same thing that led us here!\r\n\r\nI posted the ```enter_verb``` code that's in Quest right now, and I reckon it seemed like a good idea to include it.\r\n\r\nI mean, it *is* a good idea to include it -- just with the proper code. (Ha!)\r\n\r\n---\r\n> Also… this just occurred to me while writing the post above. Can we have text processor functions for \"conjugate\", \"writeverb\", and \"capfirst\"? It would make so much of the language file neater. \r\n\r\nI don't see why not, as long as we test it thoroughly before including it.\r\n\r\nI know a guy who has access to the files on GitHub now. So, if you've got some code, create a pull request (or an issue).\r\n\r\nPlus, since Quest 6 will be coming out sometime in the far-away future, I'm trying to help get all the little bugs in Quest 5 ironed out so the next release can be the stable (and possibly final) release.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<ol>\n<li>\n<p>See all that stuff you came up with that I didn't even think about?  That's another reason I hadn't done a pull request yet.</p>\n</li>\n<li>\n<p>I abuse grep. I just go into the main quest directory and <code>grep -rn enter_verb *</code>.</p>\n</li>\n</ol>\n<hr>\n<blockquote>\n<p>Looking at your code… is it necessary to use enter_verb anywhere other than the \"property\" field?  As far as I can tell neither object names nor templates should clash with an attribute name that is used for something else. If this is another oddity of the editor, I'd appreciate knowing about it</p>\n</blockquote>\n<p>Oh, I don't really know.  I was just trying to copy how the other verbs I found were coded.</p>\n<p>I definitely defer to you concerning verbs.</p>\n<hr>\n<blockquote>\n<p>Also, looking at the updates on github since the version I have… I see that some of my idiocy made it on there.</p>\n</blockquote>\n<p>Hey!</p>\n<p>That's the same thing that led us here!</p>\n<p>I posted the <code>enter_verb</code> code that's in Quest right now, and I reckon it seemed like a good idea to include it.</p>\n<p>I mean, it <em>is</em> a good idea to include it -- just with the proper code. (Ha!)</p>\n<hr>\n<blockquote>\n<p>Also… this just occurred to me while writing the post above. Can we have text processor functions for \"conjugate\", \"writeverb\", and \"capfirst\"? It would make so much of the language file neater.</p>\n</blockquote>\n<p>I don't see why not, as long as we test it thoroughly before including it.</p>\n<p>I know a guy who has access to the files on GitHub now. So, if you've got some code, create a pull request (or an issue).</p>\n<p>Plus, since Quest 6 will be coming out sometime in the far-away future, I'm trying to help get all the little bugs in Quest 5 ironed out so the next release can be the stable (and possibly final) release.</p>\n\n",
      "PostDate": "2021-05-11T23:40:27.0626868Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
