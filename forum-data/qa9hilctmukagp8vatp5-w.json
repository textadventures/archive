{
  "Topic": {
    "TopicId": "qa9hilctmukagp8vatp5-w",
    "ForumId": "24",
    "Title": "Javascript arrays",
    "LastUpdated": "2019-07-05T19:46:57.519175Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "b8d0e94f-542b-43af-8098-7882d0094c88",
      "UserId": 251768,
      "Username": "Bluevoss",
      "AvatarUrl": "https://i.imgur.com/6mfIIbhb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I understand how to do a 1D array in Javascript. Is there a way to do a 2D? Can someone provide an example?\r\n\r\nI'm coming up with a game filled with NPC characters (each with a name, statistic, current attitude towards you, etc). I need a way to keep track of all this.\r\n\r\nThanks in advance.",
      "EditableFormat": "markdown",
      "HTML": "<p>I understand how to do a 1D array in Javascript. Is there a way to do a 2D? Can someone provide an example?</p>\n<p>I'm coming up with a game filled with NPC characters (each with a name, statistic, current attitude towards you, etc). I need a way to keep track of all this.</p>\n<p>Thanks in advance.</p>\n\n",
      "PostDate": "2019-07-05T19:46:57.519175Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bb6743fc-588d-445e-8729-830f3f11b6ac",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I am not at all familiar with Squiffy, but in JavaScript I would do that as an array of dictionaries, like this:\r\n```\r\nconst characters = [\r\n  { name:\"Fred\", happy:6, met:false },\r\n  { name:\"Mary\", happy:4, met:false },\r\n  { name:\"Horatio\", happy:12, met:false },\r\n]\r\n\r\ncharacters[1].happy = 5;",
      "EditableFormat": "markdown",
      "HTML": "<p>I am not at all familiar with Squiffy, but in JavaScript I would do that as an array of dictionaries, like this:</p>\n<pre><code>const characters = [\n  { name:\"Fred\", happy:6, met:false },\n  { name:\"Mary\", happy:4, met:false },\n  { name:\"Horatio\", happy:12, met:false },\n]\n\ncharacters[1].happy = 5;\n</code></pre>\n\n",
      "PostDate": "2019-07-05T21:19:28.110391Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "25a67c10-2034-4ffb-8b06-73a69d6a790d",
      "UserId": 290676,
      "Username": "jwpfox",
      "AvatarUrl": "https://secure.gravatar.com/avatar/adfcd9b63078f8b3b8b51361481d1aeb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Just to expand on the excellent answer by **The Pixie**.\r\nIn that answer we are setting `Mary`'s happy score to 5 using:\r\n\r\n```\r\ncharacters[1].happy = 5;\r\n```\r\nThat is a totally fine way to achieve that and in no way is wrong but it does require the programmer to keep track of the location of the various character information in the array.\r\n\r\nThe `updateHappy` function below does that same thing in a way that may be a little more intuitive to use (once the function is written). Hope it makes sense and prompts some even better ideas on how to use the idea in your story.\r\n\r\nPlease ask if any of it doesn't make sense.\r\n\r\n```\r\nvar characters = [\r\n  { name:\"Fred\", happy:6, met:false },\r\n  { name:\"Mary\", happy:4, met:false },\r\n  { name:\"Horatio\", happy:12, met:false },\r\n]\r\n\r\n// Defining the function.\r\nfunction updateHappy(nameToUpdate, newHappyValue){\r\n  for(character in characters){\r\n    if(characters[character].name == nameToUpdate){\r\n      characters[character].happy = newHappyValue;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\n// Calling the function.\r\nupdateHappy('Mary', 5);\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Just to expand on the excellent answer by <strong>The Pixie</strong>.<br>\nIn that answer we are setting <code>Mary</code>'s happy score to 5 using:</p>\n<pre><code>characters[1].happy = 5;\n</code></pre>\n<p>That is a totally fine way to achieve that and in no way is wrong but it does require the programmer to keep track of the location of the various character information in the array.</p>\n<p>The <code>updateHappy</code> function below does that same thing in a way that may be a little more intuitive to use (once the function is written). Hope it makes sense and prompts some even better ideas on how to use the idea in your story.</p>\n<p>Please ask if any of it doesn't make sense.</p>\n<pre><code>var characters = [\n  { name:\"Fred\", happy:6, met:false },\n  { name:\"Mary\", happy:4, met:false },\n  { name:\"Horatio\", happy:12, met:false },\n]\n\n// Defining the function.\nfunction updateHappy(nameToUpdate, newHappyValue){\n  for(character in characters){\n    if(characters[character].name == nameToUpdate){\n      characters[character].happy = newHappyValue;\n      break;\n    }\n  }\n}\n\n// Calling the function.\nupdateHappy('Mary', 5);\n</code></pre>\n\n",
      "PostDate": "2019-07-06T10:30:58.6242473Z",
      "LastEditDate": "2019-07-06T14:07:58.5444184Z",
      "link": null
    },
    {
      "PostId": "722589d0-5e9e-4704-a52c-4e47eb01ccf2",
      "UserId": 251768,
      "Username": "Bluevoss",
      "AvatarUrl": "https://i.imgur.com/6mfIIbhb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks, all. This gives me the missing link between what I was reading on the JavaScript pages and practical applications. With a little effort, a huge list of characters (and items) could easily be constructed.\r\n\r\nThanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks, all. This gives me the missing link between what I was reading on the JavaScript pages and practical applications. With a little effort, a huge list of characters (and items) could easily be constructed.</p>\n<p>Thanks!</p>\n\n",
      "PostDate": "2019-07-08T02:31:32.3471579Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c0ab3a91-c88a-45da-a0cc-5781342b2eec",
      "UserId": 429245,
      "Username": "phm",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f34dbea43968fb97bbd714365e7b3990?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi,\r\nI'm also looking for a way to use arrays and I stumbled on your discussion.\r\nI used your example and tried to get the variable using:\r\n`{characters[0].happy}`\r\nbut I always get:\r\n` there is a link to a passage called [0], which doesn't exist`\r\n\r\n`{characters}` exists as `characters = [object Object],[object Object],[object Object]`\r\n\r\nSo, how do you get a value from the array?\r\nThank you :)",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi,<br>\nI'm also looking for a way to use arrays and I stumbled on your discussion.<br>\nI used your example and tried to get the variable using:<br>\n<code>{characters[0].happy}</code><br>\nbut I always get:<br>\n<code>there is a link to a passage called [0], which doesn't exist</code></p>\n<p><code>{characters}</code> exists as <code>characters = [object Object],[object Object],[object Object]</code></p>\n<p>So, how do you get a value from the array?<br>\nThank you :)</p>\n\n",
      "PostDate": "2019-07-22T12:39:42.0093025Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a168a008-73f6-4f06-a578-92083cfc9671",
      "UserId": 429245,
      "Username": "phm",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f34dbea43968fb97bbd714365e7b3990?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@jwpfox, any idea?",
      "EditableFormat": "markdown",
      "HTML": "<p>@jwpfox, any idea?</p>\n\n",
      "PostDate": "2019-07-23T16:36:17.3716374Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bd97e643-ff9e-493b-b47e-dd769851c4bf",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I can't get arrays with objects to work with the Squiffy code.  (I tried every method I could think of.)\r\n\r\nIf someone gets this working, please post working code for everyone.\r\n\r\nThanks in advance!",
      "EditableFormat": "markdown",
      "HTML": "<p>I can't get arrays with objects to work with the Squiffy code.  (I tried every method I could think of.)</p>\n<p>If someone gets this working, please post working code for everyone.</p>\n<p>Thanks in advance!</p>\n\n",
      "PostDate": "2019-07-24T03:14:06.2349659Z",
      "LastEditDate": "2019-07-24T03:14:53.4269076Z",
      "link": null
    },
    {
      "PostId": "3d1ebd0c-45f7-4c57-a439-d37c95ae41ed",
      "UserId": 251768,
      "Username": "Bluevoss",
      "AvatarUrl": "https://i.imgur.com/6mfIIbhb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay, I haven't had too much time to play with it. It looks like you can transfer array values back into squiffy pretty easily. Of course, functions would be better for this - haven't had too much time to play with it.\r\n\r\n```\r\n[[test]]:\r\n\r\n    const characters = [\r\n      { name:\"Fred\", happy:6, met:false },\r\n      { name:\"Mary\", happy:4, met:false },\r\n      { name:\"Horatio\", happy:12, met:false },\r\n    ]\r\n    \r\n    characters[1].happy = 5;\r\n    \r\n    set(\"X\",characters[1].happy);\r\n    \r\nX={X}\r\n```\r\nThis seems to work. I think if I wrote it as a function, that would work too.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay, I haven't had too much time to play with it. It looks like you can transfer array values back into squiffy pretty easily. Of course, functions would be better for this - haven't had too much time to play with it.</p>\n<pre><code>[[test]]:\n\n    const characters = [\n      { name:\"Fred\", happy:6, met:false },\n      { name:\"Mary\", happy:4, met:false },\n      { name:\"Horatio\", happy:12, met:false },\n    ]\n    \n    characters[1].happy = 5;\n    \n    set(\"X\",characters[1].happy);\n    \nX={X}\n</code></pre>\n<p>This seems to work. I think if I wrote it as a function, that would work too.</p>\n\n",
      "PostDate": "2019-07-24T15:27:22.4522564Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "15f96e56-d639-4801-aa8e-ca6cb8d71981",
      "UserId": 429245,
      "Username": "phm",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f34dbea43968fb97bbd714365e7b3990?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@Bluevoss thanks! It works.\r\nIt looks like we'll juggle with temp vars all the way.\r\nThis also mean that writing back to the JavaScript array/object needs a function \r\n... and that the array needs to be in a file, \r\n... writable (met=true), \r\n... JSON I guess.\r\n\r\nSo we need a common way to read/write to a local JSON file.\r\nIf someone has a solution, please feel free to share.\r\nThanks!\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>@Bluevoss thanks! It works.<br>\nIt looks like we'll juggle with temp vars all the way.<br>\nThis also mean that writing back to the JavaScript array/object needs a function<br>\n... and that the array needs to be in a file,<br>\n... writable (met=true),<br>\n... JSON I guess.</p>\n<p>So we need a common way to read/write to a local JSON file.<br>\nIf someone has a solution, please feel free to share.<br>\nThanks!</p>\n\n",
      "PostDate": "2019-07-24T17:59:51.5176783Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "68c7de1c-47c1-4487-80a0-a73127942bcb",
      "UserId": 251768,
      "Username": "Bluevoss",
      "AvatarUrl": "https://i.imgur.com/6mfIIbhb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay, here's how to do it with functions...\r\n\r\n```\r\n[[test]]:\r\n\r\n    var characters = [\r\n      { name:\"Fred\", happy:6, met:false },\r\n      { name:\"Mary\", happy:4, met:false },\r\n      { name:\"Horatio\", happy:12, met:false },\r\n    ]\r\n    \r\n    // Defining the function.\r\n    squiffy.updateHappy=function(nameToUpdate, newHappyValue){\r\n        var character;\r\n        for (character in characters){\r\n            if(characters[character].name == nameToUpdate){\r\n                characters[character].happy = newHappyValue;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    squiffy.fetchHappy=function(nameToFetch){\r\n        var character;\r\n        for (character in characters){\r\n            if(characters[character].name == nameToFetch){\r\n                return(characters[character].happy);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    squiffy.updateHappy('Mary', 10);\r\n    set(\"X\",squiffy.fetchHappy('Mary'));\r\n    \r\nDone\r\nX={X}\r\n```\r\nHave fun!\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay, here's how to do it with functions...</p>\n<pre><code>[[test]]:\n\n    var characters = [\n      { name:\"Fred\", happy:6, met:false },\n      { name:\"Mary\", happy:4, met:false },\n      { name:\"Horatio\", happy:12, met:false },\n    ]\n    \n    // Defining the function.\n    squiffy.updateHappy=function(nameToUpdate, newHappyValue){\n        var character;\n        for (character in characters){\n            if(characters[character].name == nameToUpdate){\n                characters[character].happy = newHappyValue;\n                break;\n            }\n        }\n    }\n    \n    squiffy.fetchHappy=function(nameToFetch){\n        var character;\n        for (character in characters){\n            if(characters[character].name == nameToFetch){\n                return(characters[character].happy);\n                break;\n            }\n        }\n    }\n    \n    squiffy.updateHappy('Mary', 10);\n    set(\"X\",squiffy.fetchHappy('Mary'));\n    \nDone\nX={X}\n</code></pre>\n<p>Have fun!</p>\n\n",
      "PostDate": "2019-07-25T12:19:35.4469891Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9a37e053-0adb-46ca-99ff-28c455bf907c",
      "UserId": 429245,
      "Username": "phm",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f34dbea43968fb97bbd714365e7b3990?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks Bluevoss!\r\nHave a great summer everyone.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks Bluevoss!<br>\nHave a great summer everyone.</p>\n\n",
      "PostDate": "2019-07-26T06:10:46.7010556Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
