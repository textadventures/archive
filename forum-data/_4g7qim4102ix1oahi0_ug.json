{
  "Topic": {
    "TopicId": "_4g7qim4102ix1oahi0_ug",
    "ForumId": "24",
    "Title": "Random Value - Squiffy",
    "LastUpdated": "2016-11-06T03:55:52.4528853Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "10265820-ee31-40cb-b1a3-8d64cfbac8f5",
      "UserId": 273035,
      "Username": "RVS",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7894a6895dd5dec6d2f66af4b7ef643f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "a",
      "EditableFormat": "markdown",
      "HTML": "<p>a</p>\n\n",
      "PostDate": "2016-11-06T03:55:52.4528853Z",
      "LastEditDate": "2016-11-28T12:02:15.8087423Z"
    },
    {
      "PostId": "4e8ee01f-8611-4fa3-9282-a480ced063f8",
      "UserId": 236857,
      "Username": "felixp7",
      "AvatarUrl": "http://i.imgur.com/KMhOzNPb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The help page about [setting and getting attributes](http://docs.textadventures.co.uk/squiffy/attributes.html) includes instructions on how to do it from Javascript. In your case:\r\n\r\n    if (i < 9)\r\n        squiffy.set(\"money\", squiffy.get(\"money\") - 5);\r\n\r\nI haven't tested this, hope it works. Good luck!",
      "EditableFormat": "markdown",
      "HTML": "<p>The help page about <a href=\"http://docs.textadventures.co.uk/squiffy/attributes.html\">setting and getting attributes</a> includes instructions on how to do it from Javascript. In your case:</p>\n<pre><code>if (i &lt; 9)\n    squiffy.set(\"money\", squiffy.get(\"money\") - 5);\n</code></pre>\n<p>I haven't tested this, hope it works. Good luck!</p>\n\n",
      "PostDate": "2016-11-06T15:37:10.0106524Z",
      "LastEditDate": null
    },
    {
      "PostId": "19413526-ca31-4cbc-bf2e-9579b565c35d",
      "UserId": 273035,
      "Username": "RVS",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7894a6895dd5dec6d2f66af4b7ef643f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "a",
      "EditableFormat": "markdown",
      "HTML": "<p>a</p>\n\n",
      "PostDate": "2016-11-07T03:21:55.3754985Z",
      "LastEditDate": "2016-11-28T12:02:25.200494Z"
    },
    {
      "PostId": "b737ffb9-86d7-4b81-a44c-0c769e29ef20",
      "UserId": 262022,
      "Username": "thetruespin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/dc591017d34e833aceb21f01abe265e1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't believe you can put the @dec within an else statement. I could be wrong, but I suspect that's why it's being executed regardless. \r\n\r\nSadly the conditional logic in Squiffy using Markdown is quite limited. \r\n\r\nThe fix would be to deal with the reduction in cash via javascript prior to your if else statement. I'd have a javascript variable for money, and a corresponding squiffy attribute. All modifications to the sum would be first calculated in JS, and then the JS variable converted to the standard Squiffy attribute, which you can output with the standard {myattribute}  call. \r\n\r\nSo basically you keep all calculations within the JS element, and the Squiffy attribute is simply updated to match. ",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't believe you can put the @dec within an else statement. I could be wrong, but I suspect that's why it's being executed regardless.</p>\n<p>Sadly the conditional logic in Squiffy using Markdown is quite limited.</p>\n<p>The fix would be to deal with the reduction in cash via javascript prior to your if else statement. I'd have a javascript variable for money, and a corresponding squiffy attribute. All modifications to the sum would be first calculated in JS, and then the JS variable converted to the standard Squiffy attribute, which you can output with the standard {myattribute}  call.</p>\n<p>So basically you keep all calculations within the JS element, and the Squiffy attribute is simply updated to match.</p>\n\n",
      "PostDate": "2016-11-07T13:42:26.8551698Z",
      "LastEditDate": "2016-11-07T13:51:47.4564611Z"
    },
    {
      "PostId": "fb53aba3-5d4f-45b6-8969-a56f2479e6b3",
      "UserId": 262022,
      "Username": "thetruespin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/dc591017d34e833aceb21f01abe265e1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I threw this together. In this example it's basically a 50/50 chance rather than 1 in 10, but the principle is the same.\r\n\r\n        var money = 70;\r\n        var x = Math.floor(Math.random() * 2 + 1);\r\n        \r\n        if (x===1)\r\n        {\r\n        var money = money\r\n        }\r\n        else if(x===2)\r\n        {\r\n        var money = money - 6\r\n        }\r\n        squiffy.set(\"mymoney\", money);\r\n        squiffy.set(\"mynumber\", x);\r\n\r\n    {if mynumber=1:Congrats! Because you were the 100th customer that day, you won a free burrito! It tasted delicious, because free food always tastes better. You spent no money and still have ${mymoney}.}{else:You spent $6 on a burrito. Yum. You now have ${mymoney}} \r\n    <br><br>\r\n    [Continue]  \r\n\r\nI tested the above and it works fine. \r\n\r\n- First we set two JS variables, money and x. \r\n- We generate a random number between 1 and 2 and set this as x.\r\n- A basic if/else statements then either decreases or leaves our money variable the same (depending on the value of x).\r\n- We then take our two javascript variables and convert them into Squiffy attributes, which we can now access via Markdown\r\n- Your section code then works as expected.\r\n\r\nIt's important to remember that if you're using this method regularly during your game, you'll need to ensure that your Squiffy attribute mymoney and your Javascript variable are kept in sync. This can easily be accomplished using:\r\n\r\n    var money = squiffy.get(\"mymoney\");\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I threw this together. In this example it's basically a 50/50 chance rather than 1 in 10, but the principle is the same.</p>\n<pre><code>    var money = 70;\n    var x = Math.floor(Math.random() * 2 + 1);\n    \n    if (x===1)\n    {\n    var money = money\n    }\n    else if(x===2)\n    {\n    var money = money - 6\n    }\n    squiffy.set(\"mymoney\", money);\n    squiffy.set(\"mynumber\", x);\n\n{if mynumber=1:Congrats! Because you were the 100th customer that day, you won a free burrito! It tasted delicious, because free food always tastes better. You spent no money and still have ${mymoney}.}{else:You spent $6 on a burrito. Yum. You now have ${mymoney}} \n&lt;br&gt;&lt;br&gt;\n[Continue]  \n</code></pre>\n<p>I tested the above and it works fine.</p>\n<ul>\n<li>First we set two JS variables, money and x.</li>\n<li>We generate a random number between 1 and 2 and set this as x.</li>\n<li>A basic if/else statements then either decreases or leaves our money variable the same (depending on the value of x).</li>\n<li>We then take our two javascript variables and convert them into Squiffy attributes, which we can now access via Markdown</li>\n<li>Your section code then works as expected.</li>\n</ul>\n<p>It's important to remember that if you're using this method regularly during your game, you'll need to ensure that your Squiffy attribute mymoney and your Javascript variable are kept in sync. This can easily be accomplished using:</p>\n<pre><code>var money = squiffy.get(\"mymoney\");\n</code></pre>\n\n",
      "PostDate": "2016-11-07T21:15:27.90821Z",
      "LastEditDate": "2016-11-07T21:37:05.4599434Z"
    },
    {
      "PostId": "21a7598b-00d2-43b0-83c5-74c4c14db05f",
      "UserId": 273035,
      "Username": "RVS",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7894a6895dd5dec6d2f66af4b7ef643f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks!</p>\n\n",
      "PostDate": "2016-11-07T22:21:17.6440278Z",
      "LastEditDate": null
    }
  ]
}
