{
  "Topic": {
    "TopicId": "6404",
    "ForumId": "18",
    "Title": "A step towards an alternative save game system?",
    "LastUpdated": "2016-07-03T03:59:46+00:00",
    "ReplyCount": 19
  },
  "Posts": [
    {
      "PostId": "43332",
      "UserId": 0,
      "Username": "The Pixie",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Sometimes the existing save game mechanism is not what you want; perhaps you want a system that preserves saved game across updates to the game.\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=3&amp;t=6386\">viewtopic.php?f=3&amp;t=6386</a><!-- l -->\n\nThis is going to be a nightmare! Be clear on this before you start. You will need to save the state of anything that can change in your game, such as player attributes, the position of anything moveable, the state of anything that can change, such as any NPC, the visited state of every room, and perhaps more. You will need to [i:2sl9tnmi]not [/i:2sl9tnmi]save anything that will potentially updated (this is the issue with the existing system, it assumes anything can be changed, so saves the lot). You will also need to ensure every update can handle save games from every previous version.\n\nAlternatively, you might want to make a series of linked games, and need a way to transfer player data from one game to another. You can use exactly the same mechanism (but do not have to worry about saving the state of every object and room, unless the player can go back to previous games).\n\nWhat I am offering here is a basic save mechanism. Quest cannot save files, so the only way to do this is to present a dialog box, and ask the player to paste the code into a text file, and save that.\n\n[i:2sl9tnmi]ETA: Look at the second post on the second page; it supersedes this post, and takes the second step towards an alternative save game system by implementing the two functions for you.[/i:2sl9tnmi]\n\nHere is the library file:\n[code:2sl9tnmi]&lt;library&gt;\n\n  &lt;object name=&quot;saveloaddata&quot;&gt;\n    &lt;saveloadtext&gt;&lt;!&#91;CDATA&#91;\n      &lt;script src=&quot;https&#58;//cdnjs&#46;cloudflare&#46;com/ajax/libs/crypto-js/3&#46;1&#46;2/rollups/aes&#46;js&quot;&gt;&lt;/script&gt;\n      &lt;script&gt;\n        var secretPassphrase = 'UltraSecret Passphrase';\n        \n        function loadGame2() {\n          s = prompt(&quot;Copy-and-paste your save game code here&quot;, &quot;&quot;);\n          if (s) {\n            decode(s);\n          }\n        }\n          \n        function decode(s) {\n          s = CryptoJS&#46;AES&#46;decrypt(s, secretPassphrase);\n          s = s&#46;toString();\n          str = '';\n          for (i = 0; i &lt; s&#46;length; i += 2) {\n            s2 = s&#46;charAt(i) + s&#46;charAt(i + 1);\n            n = parseInt(s2, 16);\n            str += String&#46;fromCharCode(n);\n          }\n          ASLEvent(&quot;LoadGame&quot;, str);\n        }\n      \n        var loadDialog = $(&quot;#load-dialog&quot;)&#46;dialog({\n          autoOpen&#58; false,\n          width&#58; 600,\n          height&#58; 500,\n            buttons&#58; { \n              Ok&#58; function() {\n                  decode($('textarea#data')&#46;val());\n                  $(this)&#46;dialog(&quot;close&quot;);\n              },\n              Cancel&#58; function () {\n                  $(this)&#46;dialog(&quot;close&quot;);\n              }\n          }\n        });\n\n        var saveDialog = $(&quot;#save-dialog&quot;)&#46;dialog({\n          autoOpen&#58; false,\n          width&#58; 600,\n          height&#58; 500,\n            buttons&#58; { \n              Ok&#58; function() {\n                  $(this)&#46;dialog(&quot;close&quot;);\n              },\n          }\n        });\n\n        function loadGame() {\n          loadDialog&#46;dialog(&quot;open&quot;);\n        }\n\n        function saveGame(s) {\n          str = CryptoJS&#46;AES&#46;encrypt(s, secretPassphrase);\n          $('textarea#savedata')&#46;val(str);\n          saveDialog&#46;dialog(&quot;open&quot;);\n        }\n\n      &lt;/script&gt;\n      &lt;div id=&quot;load-dialog&quot;&gt;\n        &lt;p&gt;Please paste your save game here&#58;&lt;/p&gt;\n        &lt;textarea id=&quot;data&quot; rows=&quot;13&quot; cols=&quot;49&quot;&gt;&lt;/textarea&gt;\n      &lt;/div&gt;\n      &lt;div id=&quot;save-dialog&quot;&gt;\n        &lt;p&gt;Please copy-and-paste your save game into a text file from here&#58;&lt;/p&gt;\n        &lt;textarea id=&quot;savedata&quot; rows=&quot;13&quot; cols=&quot;49&quot;&gt;&lt;/textarea&gt;\n      &lt;/div&gt;\n    &#93;&#93;&gt;&lt;/saveloadtext&gt;\n  &lt;/object&gt;\n  \n  \n  &lt;command name=&quot;savecmd&quot;&gt;\n    &lt;pattern&gt;save&lt;/pattern&gt;\n    &lt;script&gt;\n      JS&#46;eval (&quot;saveGame('&quot; + SaveGame() + &quot;');&quot;)\n    &lt;/script&gt;\n  &lt;/command&gt;\n  \n  \n  &lt;command name=&quot;loadcmd&quot;&gt;\n    &lt;pattern&gt;load&lt;/pattern&gt;\n    &lt;script&gt;\n      JS&#46;eval (&quot;loadGame();&quot;)\n    &lt;/script&gt;\n  &lt;/command&gt;\n  \n  &lt;function name=&quot;SaveLoadInit&quot;&gt;\n    OutputTextNoBr (saveloaddata&#46;saveloadtext)\n  &lt;/function&gt;\n  \n\n&lt;/library&gt;[/code:2sl9tnmi]\nIt is full of JavaScript so I cannot upload it to the forum as a file; you will need to copy-and-paste to a text file, and name the text file saveload.aslx. You can then include the library in your game as normal.\n\nTo use it, add this to your start script on the game object:\n[code:2sl9tnmi]SaveLoadInit[/code:2sl9tnmi]\n...and create two new functions, LoadGame and SaveGame. What goes in them depends on your game. SaveGame should return a string, and that string will contain all the game state data. LoadGame should take a string parameter, which has all that data, and set the game state from it.\n\nHere is an example that just stores a simple string, and then prints. You can use that to convince yourself the data is saved.\n[code:2sl9tnmi]  &lt;function name=&quot;SaveGame&quot; type=&quot;string&quot;&gt;\n    return (&quot;some text to be remembered&quot;)\n  &lt;/function&gt;\n  &lt;function name=&quot;LoadGame&quot; parameters=&quot;s&quot;&gt;\n    msg (s)\n  &lt;/function&gt;[/code:2sl9tnmi]\nETA: [i:2sl9tnmi]See my second post of 28-Jun-16 to see how to implement these to junctions.[/i:2sl9tnmi]",
      "EditableFormat": "bbcode",
      "HTML": "Sometimes the existing save game mechanism is not what you want; perhaps you want a system that preserves saved game across updates to the game.<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=3&amp;t=6386\">viewtopic.php?f=3&amp;t=6386</a><!-- l --><br/><br/>This is going to be a nightmare! Be clear on this before you start. You will need to save the state of anything that can change in your game, such as player attributes, the position of anything moveable, the state of anything that can change, such as any NPC, the visited state of every room, and perhaps more. You will need to <span style=\"font-style:italic;\">not </span>save anything that will potentially updated (this is the issue with the existing system, it assumes anything can be changed, so saves the lot). You will also need to ensure every update can handle save games from every previous version.<br/><br/>Alternatively, you might want to make a series of linked games, and need a way to transfer player data from one game to another. You can use exactly the same mechanism (but do not have to worry about saving the state of every object and room, unless the player can go back to previous games).<br/><br/>What I am offering here is a basic save mechanism. Quest cannot save files, so the only way to do this is to present a dialog box, and ask the player to paste the code into a text file, and save that.<br/><br/><span style=\"font-style:italic;\">ETA: Look at the second post on the second page; it supersedes this post, and takes the second step towards an alternative save game system by implementing the two functions for you.</span><br/><br/>Here is the library file:<br/><pre><code>&lt;library&gt;<br/><br/>  &lt;object name=&quot;saveloaddata&quot;&gt;<br/>    &lt;saveloadtext&gt;&lt;!&#91;CDATA&#91;<br/>      &lt;script src=&quot;https&#58;//cdnjs&#46;cloudflare&#46;com/ajax/libs/crypto-js/3&#46;1&#46;2/rollups/aes&#46;js&quot;&gt;&lt;/script&gt;<br/>      &lt;script&gt;<br/>        var secretPassphrase = 'UltraSecret Passphrase';<br/>        <br/>        function loadGame2() {<br/>          s = prompt(&quot;Copy-and-paste your save game code here&quot;, &quot;&quot;);<br/>          if (s) {<br/>            decode(s);<br/>          }<br/>        }<br/>          <br/>        function decode(s) {<br/>          s = CryptoJS&#46;AES&#46;decrypt(s, secretPassphrase);<br/>          s = s&#46;toString();<br/>          str = '';<br/>          for (i = 0; i &lt; s&#46;length; i += 2) {<br/>            s2 = s&#46;charAt(i) + s&#46;charAt(i + 1);<br/>            n = parseInt(s2, 16);<br/>            str += String&#46;fromCharCode(n);<br/>          }<br/>          ASLEvent(&quot;LoadGame&quot;, str);<br/>        }<br/>      <br/>        var loadDialog = $(&quot;#load-dialog&quot;)&#46;dialog({<br/>          autoOpen&#58; false,<br/>          width&#58; 600,<br/>          height&#58; 500,<br/>            buttons&#58; { <br/>              Ok&#58; function() {<br/>                  decode($('textarea#data')&#46;val());<br/>                  $(this)&#46;dialog(&quot;close&quot;);<br/>              },<br/>              Cancel&#58; function () {<br/>                  $(this)&#46;dialog(&quot;close&quot;);<br/>              }<br/>          }<br/>        });<br/><br/>        var saveDialog = $(&quot;#save-dialog&quot;)&#46;dialog({<br/>          autoOpen&#58; false,<br/>          width&#58; 600,<br/>          height&#58; 500,<br/>            buttons&#58; { <br/>              Ok&#58; function() {<br/>                  $(this)&#46;dialog(&quot;close&quot;);<br/>              },<br/>          }<br/>        });<br/><br/>        function loadGame() {<br/>          loadDialog&#46;dialog(&quot;open&quot;);<br/>        }<br/><br/>        function saveGame(s) {<br/>          str = CryptoJS&#46;AES&#46;encrypt(s, secretPassphrase);<br/>          $('textarea#savedata')&#46;val(str);<br/>          saveDialog&#46;dialog(&quot;open&quot;);<br/>        }<br/><br/>      &lt;/script&gt;<br/>      &lt;div id=&quot;load-dialog&quot;&gt;<br/>        &lt;p&gt;Please paste your save game here&#58;&lt;/p&gt;<br/>        &lt;textarea id=&quot;data&quot; rows=&quot;13&quot; cols=&quot;49&quot;&gt;&lt;/textarea&gt;<br/>      &lt;/div&gt;<br/>      &lt;div id=&quot;save-dialog&quot;&gt;<br/>        &lt;p&gt;Please copy-and-paste your save game into a text file from here&#58;&lt;/p&gt;<br/>        &lt;textarea id=&quot;savedata&quot; rows=&quot;13&quot; cols=&quot;49&quot;&gt;&lt;/textarea&gt;<br/>      &lt;/div&gt;<br/>    &#93;&#93;&gt;&lt;/saveloadtext&gt;<br/>  &lt;/object&gt;<br/>  <br/>  <br/>  &lt;command name=&quot;savecmd&quot;&gt;<br/>    &lt;pattern&gt;save&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      JS&#46;eval (&quot;saveGame('&quot; + SaveGame() + &quot;');&quot;)<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;<br/>  <br/>  <br/>  &lt;command name=&quot;loadcmd&quot;&gt;<br/>    &lt;pattern&gt;load&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      JS&#46;eval (&quot;loadGame();&quot;)<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;<br/>  <br/>  &lt;function name=&quot;SaveLoadInit&quot;&gt;<br/>    OutputTextNoBr (saveloaddata&#46;saveloadtext)<br/>  &lt;/function&gt;<br/>  <br/><br/>&lt;/library&gt;</code></pre><br/>It is full of JavaScript so I cannot upload it to the forum as a file; you will need to copy-and-paste to a text file, and name the text file saveload.aslx. You can then include the library in your game as normal.<br/><br/>To use it, add this to your start script on the game object:<br/><pre><code>SaveLoadInit</code></pre><br/>...and create two new functions, LoadGame and SaveGame. What goes in them depends on your game. SaveGame should return a string, and that string will contain all the game state data. LoadGame should take a string parameter, which has all that data, and set the game state from it.<br/><br/>Here is an example that just stores a simple string, and then prints. You can use that to convince yourself the data is saved.<br/><pre><code>  &lt;function name=&quot;SaveGame&quot; type=&quot;string&quot;&gt;<br/>    return (&quot;some text to be remembered&quot;)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;LoadGame&quot; parameters=&quot;s&quot;&gt;<br/>    msg (s)<br/>  &lt;/function&gt;</code></pre><br/>ETA: <span style=\"font-style:italic;\">See my second post of 28-Jun-16 to see how to implement these to junctions.</span>",
      "PostDate": "2016-06-06T09:26:40+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43371",
      "UserId": 0,
      "Username": "Anonynn",
      "AvatarUrl": null,
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Hmm! This looks really great! \n\nShould we start implementing this one? Or are you working on something more elaborate/is this the first draft? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Hmm! This looks really great! <br/><br/>Should we start implementing this one? Or are you working on something more elaborate/is this the first draft? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2016-06-08T18:49:27+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43383",
      "UserId": 0,
      "Username": "The Pixie",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "That bit works fine. What you have to do is create a SaveGame function that stores all the data you want saved, and a LoadGame that takes that data and sets attributes from it. It is a start:\n[code:1zpjly8s]s = player&#46;alias\ns = s + &quot;;&quot; + player&#46;intelligence\ns = s + &quot;;&quot; + player&#46;strength\netc&#46;&#46;&#46;\nreturn(s)[/code:1zpjly8s]\n\n[code:1zpjly8s]ary = Split(s, &quot;;&quot;)\nplayer&#46;alias = StringListItem(ary, 0)\nplayer&#46;intelligence = ToInt(StringListItem(ary, 1))\nplayer&#46;strength= ToInt(StringListItem(ary, 2))\netc&#46;&#46;&#46;[/code:1zpjly8s]",
      "EditableFormat": "bbcode",
      "HTML": "That bit works fine. What you have to do is create a SaveGame function that stores all the data you want saved, and a LoadGame that takes that data and sets attributes from it. It is a start:<br/><pre><code>s = player&#46;alias<br/>s = s + &quot;;&quot; + player&#46;intelligence<br/>s = s + &quot;;&quot; + player&#46;strength<br/>etc&#46;&#46;&#46;<br/>return(s)</code></pre><br/><br/><pre><code>ary = Split(s, &quot;;&quot;)<br/>player&#46;alias = StringListItem(ary, 0)<br/>player&#46;intelligence = ToInt(StringListItem(ary, 1))<br/>player&#46;strength= ToInt(StringListItem(ary, 2))<br/>etc&#46;&#46;&#46;</code></pre>",
      "PostDate": "2016-06-09T07:15:00+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43449",
      "UserId": 0,
      "Username": "dfisher",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "c202a1de77ea69fe4ef5affe2b3081c7",
      "EditableText": "A quick thought: another approach is to save the original commands entered by the player, and re-run them after the game is updated.\n\nNot recommending this as a general approach to saving, though (since loading would take longer and longer as the transcript grows) - just for handling game updates.",
      "EditableFormat": "bbcode",
      "HTML": "A quick thought: another approach is to save the original commands entered by the player, and re-run them after the game is updated.<br/><br/>Not recommending this as a general approach to saving, though (since loading would take longer and longer as the transcript grows) - just for handling game updates.",
      "PostDate": "2016-06-14T21:50:09+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43468",
      "UserId": 0,
      "Username": "XanMag",
      "AvatarUrl": null,
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "The problem with saving all the original commands the player entered and re-running them is that if the player enters a command that works but shouldn't (i.e. picking up an object that might not now be there, exiting through an unlocked exit that should have been locked, any command that triggers a Boolean switch, etc), all other commands after that are moot.  It's similar to using a walkthrough to test your games while you make them (all input is saved and rerun so you don't have to type everything again).  This would work well for grammar issues resolved in updates but would probably not work for fixing 90% of found bugs/game-breakers.  Unless the grammar is terrible, I won't update a game of mine unless I am correcting some bug.  When I do that, I will also correct any grammar issues identified up until that point.  From personal experience, when I updated when fixing bugs pre-publishing, I either had to go into the walkthrough FIND and adjust specific inputs where I knew the bug started or, in some cases, it was easier to start the walkthrough all over again.",
      "EditableFormat": "bbcode",
      "HTML": "The problem with saving all the original commands the player entered and re-running them is that if the player enters a command that works but shouldn't (i.e. picking up an object that might not now be there, exiting through an unlocked exit that should have been locked, any command that triggers a Boolean switch, etc), all other commands after that are moot.  It's similar to using a walkthrough to test your games while you make them (all input is saved and rerun so you don't have to type everything again).  This would work well for grammar issues resolved in updates but would probably not work for fixing 90% of found bugs/game-breakers.  Unless the grammar is terrible, I won't update a game of mine unless I am correcting some bug.  When I do that, I will also correct any grammar issues identified up until that point.  From personal experience, when I updated when fixing bugs pre-publishing, I either had to go into the walkthrough FIND and adjust specific inputs where I knew the bug started or, in some cases, it was easier to start the walkthrough all over again.",
      "PostDate": "2016-06-15T16:03:42+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43504",
      "UserId": 0,
      "Username": "dfisher",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "c202a1de77ea69fe4ef5affe2b3081c7",
      "EditableText": "[quote=&quot;XanMag&quot;:2iatzqaw]The problem with saving all the original commands the player entered and re-running them is that if the player enters a command that works but shouldn't [...] all other commands after that are moot.[/quote:2iatzqaw]\nGood point.\n\nAnother possibility is to have checkpoints the player can fast forward to (which would only work for certain games). The author of the Inform 7 game Scroll Thief mentioned doing that in [url=http&#58;//www&#46;intfiction&#46;org/forum/viewtopic&#46;php?f=19&amp;t=18399&amp;start=20#p95756:2iatzqaw]this[/url:2iatzqaw] post on the IF forum.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>XanMag wrote:</cite>The problem with saving all the original commands the player entered and re-running them is that if the player enters a command that works but shouldn't [...] all other commands after that are moot.</blockquote><br/>Good point.<br/><br/>Another possibility is to have checkpoints the player can fast forward to (which would only work for certain games). The author of the Inform 7 game Scroll Thief mentioned doing that in <a href=\"http&#58;//www&#46;intfiction&#46;org/forum/viewtopic&#46;php?f=19&amp;t=18399&amp;start=20#p95756\" rel=\"nofollow\">this</a> post on the IF forum.",
      "PostDate": "2016-06-16T13:26:55+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43506",
      "UserId": 0,
      "Username": "The Pixie",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;dfisher&quot;:ypatpxgu]Another possibility is to have checkpoints the player can fast forward to (which would only work for certain games). The author of the Inform 7 game Scroll Thief mentioned doing that in [url=http&#58;//www&#46;intfiction&#46;org/forum/viewtopic&#46;php?f=19&amp;t=18399&amp;start=20#p95756:ypatpxgu]this[/url:ypatpxgu] post on the IF forum.[/quote:ypatpxgu]\nThat is a clever idea, and would be fairly easy to implement. Very useful for debugging big games too if you can jump to where you need to be.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>dfisher wrote:</cite>Another possibility is to have checkpoints the player can fast forward to (which would only work for certain games). The author of the Inform 7 game Scroll Thief mentioned doing that in <a href=\"http&#58;//www&#46;intfiction&#46;org/forum/viewtopic&#46;php?f=19&amp;t=18399&amp;start=20#p95756\" rel=\"nofollow\">this</a> post on the IF forum.</blockquote><br/>That is a clever idea, and would be fairly easy to implement. Very useful for debugging big games too if you can jump to where you need to be.",
      "PostDate": "2016-06-16T14:27:42+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43514",
      "UserId": 0,
      "Username": "XanMag",
      "AvatarUrl": null,
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "How would you go about saving current game states in a walk-through?  I might try to set up checkpoints with codes if there is a way to save everything as is at those points.  That way an update won't necessarily force the player to restart.  It wouldn't be perfect but it would certainly be helpful.\n\nDoes that make sense?",
      "EditableFormat": "bbcode",
      "HTML": "How would you go about saving current game states in a walk-through?  I might try to set up checkpoints with codes if there is a way to save everything as is at those points.  That way an update won't necessarily force the player to restart.  It wouldn't be perfect but it would certainly be helpful.<br/><br/>Does that make sense?",
      "PostDate": "2016-06-16T17:37:14+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43526",
      "UserId": 0,
      "Username": "The Pixie",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Or have an update command that loads a data file from a website, and creates the new objects, rooms and exits from the file. As far as I know you cannot add scripts, so it would be limited to expanding the world, you could not correct bugs in code, or add functions, types or commands.\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5512\">viewtopic.php?f=18&amp;t=5512</a><!-- l -->",
      "EditableFormat": "bbcode",
      "HTML": "Or have an update command that loads a data file from a website, and creates the new objects, rooms and exits from the file. As far as I know you cannot add scripts, so it would be limited to expanding the world, you could not correct bugs in code, or add functions, types or commands.<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5512\">viewtopic.php?f=18&amp;t=5512</a><!-- l -->",
      "PostDate": "2016-06-16T19:47:22+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43670",
      "UserId": 0,
      "Username": "Anonynn",
      "AvatarUrl": null,
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "So I'm beginning to implement the save, so I thought I would ask in the beginning of the game about whether or not the player has a saved game or not so that they didn't have to slog through the creation process over and over just to get to a point where they could load their game. So everything works if they say &quot;no&quot; because it goes through the character process like normal. However if they say &quot;yes&quot; I leave a place for them to implement the loaded game, however if they type in something wrong the game ends with a game-over. Is there a way to loop the question or any suggestions about how to go about that? Here's the code I have so far...\n\n[code:27x6pv1b]msg (&quot;&lt;br/&gt;Would you like to &lt;i&gt;load&lt;/i&gt; a previously saved game?&lt;br/&gt;&lt;br/&gt;&lt;i&gt;Yes&lt;/i&gt; or &lt;i&gt;No&lt;/i&gt;&lt;br/&gt;&quot;)\nget input {\n  switch (LCase(result)) {\n    case (&quot;yes&quot;) {\n      msg (&quot;Please &lt;i&gt;Paste&lt;/i&gt; In Your Saved Code&#46; Then Press &lt;i&gt;Enter&lt;/i&gt;&quot;)\n      get input {\n      }\n    }\n    default {[/code:27x6pv1b]\n\n\nAlso...I just want to make sure I understand this. On the LoadGame Function...\n\n[code:27x6pv1b]ary = Split(s, &quot;;&quot;)\nplayer&#46;alias = StringListItem(ary, 0)\nplayer&#46;intelligence = ToInt(StringListItem(ary, 1))\nplayer&#46;strength= ToInt(StringListItem(ary, 2))\netc&#46;&#46;&#46;[/code:27x6pv1b]\n\nWhat is this part supposed to entail?\n(ary, 1))\n(ary, 2))\n\nAnd are &quot;Booleans&quot; that need to be kept track off also considered &quot;StringListItem&quot;? Would they be written like..\nplayer.blahblah = Boolean(StringListItem(ary, 1))",
      "EditableFormat": "bbcode",
      "HTML": "So I'm beginning to implement the save, so I thought I would ask in the beginning of the game about whether or not the player has a saved game or not so that they didn't have to slog through the creation process over and over just to get to a point where they could load their game. So everything works if they say &quot;no&quot; because it goes through the character process like normal. However if they say &quot;yes&quot; I leave a place for them to implement the loaded game, however if they type in something wrong the game ends with a game-over. Is there a way to loop the question or any suggestions about how to go about that? Here's the code I have so far...<br/><br/><pre><code>msg (&quot;&lt;br/&gt;Would you like to &lt;i&gt;load&lt;/i&gt; a previously saved game?&lt;br/&gt;&lt;br/&gt;&lt;i&gt;Yes&lt;/i&gt; or &lt;i&gt;No&lt;/i&gt;&lt;br/&gt;&quot;)<br/>get input {<br/>  switch (LCase(result)) {<br/>    case (&quot;yes&quot;) {<br/>      msg (&quot;Please &lt;i&gt;Paste&lt;/i&gt; In Your Saved Code&#46; Then Press &lt;i&gt;Enter&lt;/i&gt;&quot;)<br/>      get input {<br/>      }<br/>    }<br/>    default {</code></pre><br/><br/><br/>Also...I just want to make sure I understand this. On the LoadGame Function...<br/><br/><pre><code>ary = Split(s, &quot;;&quot;)<br/>player&#46;alias = StringListItem(ary, 0)<br/>player&#46;intelligence = ToInt(StringListItem(ary, 1))<br/>player&#46;strength= ToInt(StringListItem(ary, 2))<br/>etc&#46;&#46;&#46;</code></pre><br/><br/>What is this part supposed to entail?<br/>(ary, 1))<br/>(ary, 2))<br/><br/>And are &quot;Booleans&quot; that need to be kept track off also considered &quot;StringListItem&quot;? Would they be written like..<br/>player.blahblah = Boolean(StringListItem(ary, 1))",
      "PostDate": "2016-06-22T19:36:47+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43674",
      "UserId": 0,
      "Username": "HegemonKhan",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "to loop:\n\n1. have the scripting in a Function (Functions have/allow-for useful Parameters if they're needed), and then (re)call (loop) the Function:\n\nGUI~Editor: run as script -&gt; add new script -&gt; 'output' category/section I think -&gt; 'call function' Script -&gt; (type in the name of your function into the skinny rectangle text box, and if need, add in any Arguments/Parameters as you want via the 'add Parameters' button of the big box)\n\n[code:3srugjmh]&lt;game name=&quot;xxx&quot;&gt;\n  &lt;pov type=&quot;object&quot;&gt;player&lt;/pov&gt;\n  &lt;start type=&quot;script&quot;&gt;\n    load_game_function (game&#46;pov)\n  &lt;/start&gt;\n&lt;/game&gt;\n\n&lt;function name=&quot;load_game_function&quot;  parameters=&quot;character_parameter&quot;&gt;\n  msg (&quot;&lt;br/&gt;Would you like to &lt;i&gt;load&lt;/i&gt; a previously saved game?&lt;br/&gt;&lt;br/&gt;&lt;i&gt;Yes&lt;/i&gt; or &lt;i&gt;No&lt;/i&gt;&lt;br/&gt;&quot;)\n  get input {\n    ClearScreen\n    switch (LCase(result)) {\n      case (&quot;yes&quot;) {\n        msg (&quot;Please &lt;i&gt;Paste&lt;/i&gt; In Your Saved Code&#46; Then Press &lt;i&gt;Enter&lt;/i&gt;&quot;)\n        get input {\n        }\n      }\n      case (&quot;no&quot;) {\n        character_creation_function (character_parameter)\n      }\n      default {\n        load_game_function (character_parameter)\n      }\n    }\n  }\n&lt;/function&gt;\n\n&lt;function name=&quot;character_creation_function&quot; parameters=&quot;character_parameter&quot;&gt;\n  msg (&quot;Name?&quot;)\n  get input {\n    character_parameter&#46;alias = result\n  }\n  // etc etc etc\n&lt;/function&gt;[/code:3srugjmh]\n\n2. have the scripting be a Script Attribute of an Object, and (re)call/run (via using 'do/invoke'), the Script Attribute, however, Script Attributes have no Argument/Parameter ability, which makes it very limited:\n\n[code:3srugjmh]&lt;game name=&quot;xxx&quot;&gt;\n  &lt;pov type=&quot;object&quot;&gt;player&lt;/pov&gt;\n  &lt;start type=&quot;script&quot;&gt;\n    invoke (load_game_object&#46;load_game_script_attribute)\n  &lt;/start&gt;\n&lt;/game&gt;\n\n&lt;object name=&quot;load_game_object&quot;&gt;\n  &lt;attr name=&quot;load_game_script_attribute&quot; type=&quot;script&quot;&gt;\n    msg (&quot;&lt;br/&gt;Would you like to &lt;i&gt;load&lt;/i&gt; a previously saved game?&lt;br/&gt;&lt;br/&gt;&lt;i&gt;Yes&lt;/i&gt; or &lt;i&gt;No&lt;/i&gt;&lt;br/&gt;&quot;)\n    get input {\n      ClearScreen\n      switch (LCase(result)) {\n        case (&quot;yes&quot;) {\n          msg (&quot;Please &lt;i&gt;Paste&lt;/i&gt; In Your Saved Code&#46; Then Press &lt;i&gt;Enter&lt;/i&gt;&quot;)\n          get input {\n          }\n        }\n        case (&quot;no&quot;) {\n          character_creation_function (game&#46;pov)\n        }\n        default {\n          ClearScreen\n          invoke (load_game_object&#46;load_game_script_attribute)\n        }\n&lt;/object&gt;\n\n&lt;function name=&quot;character_creation_function&quot; parameters=&quot;character_parameter&quot;&gt;\n  msg (&quot;Name?&quot;)\n  get input {\n    character_parameter&#46;alias = result\n  }\n  // etc etc etc\n&lt;/function&gt;[/code:3srugjmh]\n\n3. Delegates: these are like a hybrid of Script Attributes (using Objects I think) and Functions (having the ability of Parameters/Arguments), but I personally had a bit difficulty in understanding how to use them (when I tried to learn them a long time ago now). Though, I'm sure Pixie/Jay can help you with using them, if you want to use them.\n\n--------------------------------------\n\n[quote=&quot;anonynn&quot;:3srugjmh]Also...I just want to make sure I understand this. On the LoadGame Function...\n\nplayer.intelligence = ToInt(StringListItem(ary, 1))\nplayer.strength= ToInt(StringListItem(ary, 2))[/quote:3srugjmh]\n\nthe 'StringListItem()' Function/Script selects and returns an item from a list, Pixie's 'ary' is his/her local temporary Stringlist Variable, and the '0...N' numbers, are the index numbers (which is what item you want to get from the list)\n\nhow a list works:\n\ngame.my_list = split (&quot;red; blue; yellow&quot;)\n\nindex number: item (item quantity count / max item quantity)\n\n0: red (1/3)\n1: blue (2/3)\n2: yellow (3/3)\n\nListCount (game.my_list): 3\n\nStringListItem (game.my_list, 0): red\nStringListItem (game.my_list, 1): blue\nStringListItem (game.my_list, 2): yellow\nStringListItem (game.my_list, 3): ERROR, there is no 4th item!\n\ngame.my_list = split (&quot;yellow; red; blue&quot;)\n\nthe leftmost item is the first item (index number: 0)\nor, in the GUI~Editor, the first added item, is the first item (index number: 0)\n\nindex number: ~ item ~ (item quantity count)\n\n0: yellow (1/3)\n1: red (2/3)\n2: blue (3/3)\n\nListCount (game.my_list): 3 total items\nLast Item (index number) in the List: ListCount (game.my_list) - 1: (3) - 1 = 2: 2 is the last index number, the last item in a 3 item list\n\nStringListItem (game.my_list, 0): yellow\nStringListItem (game.my_list, 1): red\nStringListItem (game.my_list, 2): blue\nStringListItem (game.my_list, 3): ERROR, there is no 4th item!\n\nrandomization:\n\nVARIABLE = StringListItem (game.my_list, GetRandomInt (0, ListCount (game.my_list) - 1))\n// VARIABLE = (red/blue/yellow)\n\n---------------\n\n[quote=&quot;anonynn&quot;:3srugjmh]And are &quot;Booleans&quot; that need to be kept track off also considered &quot;StringListItem&quot;? Would they be written like..\nplayer.blahblah = Boolean(StringListItem(ary, 1)[/quote:3srugjmh]\n\nI believe that you're putting/getting all data from your game code into a long string, and thus using a StringList to split it up, and then to rematch the data over to the new/loaded game's data\n\nso, for putting your Boolean Attributes (data) back into your new/loaded game code, you'd need to do something like this (wait for Pixie though for an accurate answer though, as I'm just guessing here), an example:\n\n(err... this is a bit too complicated for me to do quickly, or if at all, lol)\n\n// pretend that we've got something like this (conceptual pseudo code only below, NOT actual proper code):\nary = split (&quot;player.strength=100;player.endurance=100;player.dexterity=100;orc.dead=false;troll.dead=true;ogre.dead=false&quot;, &quot;;&quot;)\nStringListItem (ary, 0) -&gt; set (player, &quot;strength&quot;, 100)\nStringListItem (ary, 1) -&gt; set (player, &quot;endurance&quot;, 100)\nStringListItem (ary, 2) -&gt; set (player, &quot;dexterity&quot;, 100)\nStringListItem (ary, 3) -&gt; set (orc, &quot;dead&quot;, false)\nStringListItem (ary, 4) -&gt; set (troll, &quot;dead&quot;, true)\nStringListItem (ary, 5) -&gt; set (ogre, &quot;dead&quot;, false)",
      "EditableFormat": "bbcode",
      "HTML": "to loop:<br/><br/>1. have the scripting in a Function (Functions have/allow-for useful Parameters if they're needed), and then (re)call (loop) the Function:<br/><br/>GUI~Editor: run as script -&gt; add new script -&gt; 'output' category/section I think -&gt; 'call function' Script -&gt; (type in the name of your function into the skinny rectangle text box, and if need, add in any Arguments/Parameters as you want via the 'add Parameters' button of the big box)<br/><br/><pre><code>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;pov type=&quot;object&quot;&gt;player&lt;/pov&gt;<br/>  &lt;start type=&quot;script&quot;&gt;<br/>    load_game_function (game&#46;pov)<br/>  &lt;/start&gt;<br/>&lt;/game&gt;<br/><br/>&lt;function name=&quot;load_game_function&quot;  parameters=&quot;character_parameter&quot;&gt;<br/>  msg (&quot;&lt;br/&gt;Would you like to &lt;i&gt;load&lt;/i&gt; a previously saved game?&lt;br/&gt;&lt;br/&gt;&lt;i&gt;Yes&lt;/i&gt; or &lt;i&gt;No&lt;/i&gt;&lt;br/&gt;&quot;)<br/>  get input {<br/>    ClearScreen<br/>    switch (LCase(result)) {<br/>      case (&quot;yes&quot;) {<br/>        msg (&quot;Please &lt;i&gt;Paste&lt;/i&gt; In Your Saved Code&#46; Then Press &lt;i&gt;Enter&lt;/i&gt;&quot;)<br/>        get input {<br/>        }<br/>      }<br/>      case (&quot;no&quot;) {<br/>        character_creation_function (character_parameter)<br/>      }<br/>      default {<br/>        load_game_function (character_parameter)<br/>      }<br/>    }<br/>  }<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;character_creation_function&quot; parameters=&quot;character_parameter&quot;&gt;<br/>  msg (&quot;Name?&quot;)<br/>  get input {<br/>    character_parameter&#46;alias = result<br/>  }<br/>  // etc etc etc<br/>&lt;/function&gt;</code></pre><br/><br/>2. have the scripting be a Script Attribute of an Object, and (re)call/run (via using 'do/invoke'), the Script Attribute, however, Script Attributes have no Argument/Parameter ability, which makes it very limited:<br/><br/><pre><code>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;pov type=&quot;object&quot;&gt;player&lt;/pov&gt;<br/>  &lt;start type=&quot;script&quot;&gt;<br/>    invoke (load_game_object&#46;load_game_script_attribute)<br/>  &lt;/start&gt;<br/>&lt;/game&gt;<br/><br/>&lt;object name=&quot;load_game_object&quot;&gt;<br/>  &lt;attr name=&quot;load_game_script_attribute&quot; type=&quot;script&quot;&gt;<br/>    msg (&quot;&lt;br/&gt;Would you like to &lt;i&gt;load&lt;/i&gt; a previously saved game?&lt;br/&gt;&lt;br/&gt;&lt;i&gt;Yes&lt;/i&gt; or &lt;i&gt;No&lt;/i&gt;&lt;br/&gt;&quot;)<br/>    get input {<br/>      ClearScreen<br/>      switch (LCase(result)) {<br/>        case (&quot;yes&quot;) {<br/>          msg (&quot;Please &lt;i&gt;Paste&lt;/i&gt; In Your Saved Code&#46; Then Press &lt;i&gt;Enter&lt;/i&gt;&quot;)<br/>          get input {<br/>          }<br/>        }<br/>        case (&quot;no&quot;) {<br/>          character_creation_function (game&#46;pov)<br/>        }<br/>        default {<br/>          ClearScreen<br/>          invoke (load_game_object&#46;load_game_script_attribute)<br/>        }<br/>&lt;/object&gt;<br/><br/>&lt;function name=&quot;character_creation_function&quot; parameters=&quot;character_parameter&quot;&gt;<br/>  msg (&quot;Name?&quot;)<br/>  get input {<br/>    character_parameter&#46;alias = result<br/>  }<br/>  // etc etc etc<br/>&lt;/function&gt;</code></pre><br/><br/>3. Delegates: these are like a hybrid of Script Attributes (using Objects I think) and Functions (having the ability of Parameters/Arguments), but I personally had a bit difficulty in understanding how to use them (when I tried to learn them a long time ago now). Though, I'm sure Pixie/Jay can help you with using them, if you want to use them.<br/><br/>--------------------------------------<br/><br/><blockquote><cite>anonynn wrote:</cite>Also...I just want to make sure I understand this. On the LoadGame Function...<br/><br/>player.intelligence = ToInt(StringListItem(ary, 1))<br/>player.strength= ToInt(StringListItem(ary, 2))</blockquote><br/><br/>the 'StringListItem()' Function/Script selects and returns an item from a list, Pixie's 'ary' is his/her local temporary Stringlist Variable, and the '0...N' numbers, are the index numbers (which is what item you want to get from the list)<br/><br/>how a list works:<br/><br/>game.my_list = split (&quot;red; blue; yellow&quot;)<br/><br/>index number: item (item quantity count / max item quantity)<br/><br/>0: red (1/3)<br/>1: blue (2/3)<br/>2: yellow (3/3)<br/><br/>ListCount (game.my_list): 3<br/><br/>StringListItem (game.my_list, 0): red<br/>StringListItem (game.my_list, 1): blue<br/>StringListItem (game.my_list, 2): yellow<br/>StringListItem (game.my_list, 3): ERROR, there is no 4th item!<br/><br/>game.my_list = split (&quot;yellow; red; blue&quot;)<br/><br/>the leftmost item is the first item (index number: 0)<br/>or, in the GUI~Editor, the first added item, is the first item (index number: 0)<br/><br/>index number: ~ item ~ (item quantity count)<br/><br/>0: yellow (1/3)<br/>1: red (2/3)<br/>2: blue (3/3)<br/><br/>ListCount (game.my_list): 3 total items<br/>Last Item (index number) in the List: ListCount (game.my_list) - 1: (3) - 1 = 2: 2 is the last index number, the last item in a 3 item list<br/><br/>StringListItem (game.my_list, 0): yellow<br/>StringListItem (game.my_list, 1): red<br/>StringListItem (game.my_list, 2): blue<br/>StringListItem (game.my_list, 3): ERROR, there is no 4th item!<br/><br/>randomization:<br/><br/>VARIABLE = StringListItem (game.my_list, GetRandomInt (0, ListCount (game.my_list) - 1))<br/>// VARIABLE = (red/blue/yellow)<br/><br/>---------------<br/><br/><blockquote><cite>anonynn wrote:</cite>And are &quot;Booleans&quot; that need to be kept track off also considered &quot;StringListItem&quot;? Would they be written like..<br/>player.blahblah = Boolean(StringListItem(ary, 1)</blockquote><br/><br/>I believe that you're putting/getting all data from your game code into a long string, and thus using a StringList to split it up, and then to rematch the data over to the new/loaded game's data<br/><br/>so, for putting your Boolean Attributes (data) back into your new/loaded game code, you'd need to do something like this (wait for Pixie though for an accurate answer though, as I'm just guessing here), an example:<br/><br/>(err... this is a bit too complicated for me to do quickly, or if at all, lol)<br/><br/>// pretend that we've got something like this (conceptual pseudo code only below, NOT actual proper code):<br/>ary = split (&quot;player.strength=100;player.endurance=100;player.dexterity=100;orc.dead=false;troll.dead=true;ogre.dead=false&quot;, &quot;;&quot;)<br/>StringListItem (ary, 0) -&gt; set (player, &quot;strength&quot;, 100)<br/>StringListItem (ary, 1) -&gt; set (player, &quot;endurance&quot;, 100)<br/>StringListItem (ary, 2) -&gt; set (player, &quot;dexterity&quot;, 100)<br/>StringListItem (ary, 3) -&gt; set (orc, &quot;dead&quot;, false)<br/>StringListItem (ary, 4) -&gt; set (troll, &quot;dead&quot;, true)<br/>StringListItem (ary, 5) -&gt; set (ogre, &quot;dead&quot;, false)",
      "PostDate": "2016-06-23T00:15:14+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43713",
      "UserId": 0,
      "Username": "The Pixie",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Hi Anonynn\n\nNot sure why it happens as you say, but I suggest you try this and see what happens:\n[code:1oab6itz]msg (&quot;&lt;br/&gt;Would you like to &lt;i&gt;load&lt;/i&gt; a previously saved game?&lt;br/&gt;&lt;br/&gt;&lt;i&gt;Yes&lt;/i&gt; or &lt;i&gt;No&lt;/i&gt;&lt;br/&gt;&quot;)\nget input {\n  switch (LCase(result)) {\n    case (&quot;yes&quot;) {\n      JS&#46;eval (&quot;loadGame();&quot;)\n    }\n    default {\n      // do the normal stuff\n    }\n  }\n}[/code:1oab6itz]\n[quote:1oab6itz]Also...I just want to make sure I understand this. On the LoadGame Function...\n\n[code:1oab6itz]ary = Split(s, &quot;;&quot;)\nplayer&#46;alias = StringListItem(ary, 0)\nplayer&#46;intelligence = ToInt(StringListItem(ary, 1))\nplayer&#46;strength= ToInt(StringListItem(ary, 2))\netc&#46;&#46;&#46;[/code:1oab6itz]\n\nWhat is this part supposed to entail?\n(ary, 1))\n(ary, 2))\n\nAnd are &quot;Booleans&quot; that need to be kept track off also considered &quot;StringListItem&quot;? Would they be written like..\nplayer.blahblah = Boolean(StringListItem(ary, 1))[/quote:1oab6itz]\nThe data is save as a string of values separated by semi-colons (which makes me think it will mess up big time if you save anything with a semi-colon...). When you load it splits that into an array of strings, so it is always StringListItem to get the value. You then need to convert it into an integer or string as appropiate.\n\nI have just found there is no built-in function to conver a string to a Boolean, so do this instead:\nplayer.blahblah = (LCase(StringListItem(ary, 1)) = &quot;true&quot;)",
      "EditableFormat": "bbcode",
      "HTML": "Hi Anonynn<br/><br/>Not sure why it happens as you say, but I suggest you try this and see what happens:<br/><pre><code>msg (&quot;&lt;br/&gt;Would you like to &lt;i&gt;load&lt;/i&gt; a previously saved game?&lt;br/&gt;&lt;br/&gt;&lt;i&gt;Yes&lt;/i&gt; or &lt;i&gt;No&lt;/i&gt;&lt;br/&gt;&quot;)<br/>get input {<br/>  switch (LCase(result)) {<br/>    case (&quot;yes&quot;) {<br/>      JS&#46;eval (&quot;loadGame();&quot;)<br/>    }<br/>    default {<br/>      // do the normal stuff<br/>    }<br/>  }<br/>}</code></pre><br/><blockquote><p>Also...I just want to make sure I understand this. On the LoadGame Function...<br/><br/><pre><code>ary = Split(s, &quot;;&quot;)<br/>player&#46;alias = StringListItem(ary, 0)<br/>player&#46;intelligence = ToInt(StringListItem(ary, 1))<br/>player&#46;strength= ToInt(StringListItem(ary, 2))<br/>etc&#46;&#46;&#46;</code></pre><br/><br/>What is this part supposed to entail?<br/>(ary, 1))<br/>(ary, 2))<br/><br/>And are &quot;Booleans&quot; that need to be kept track off also considered &quot;StringListItem&quot;? Would they be written like..<br/>player.blahblah = Boolean(StringListItem(ary, 1))</p></blockquote><br/>The data is save as a string of values separated by semi-colons (which makes me think it will mess up big time if you save anything with a semi-colon...). When you load it splits that into an array of strings, so it is always StringListItem to get the value. You then need to convert it into an integer or string as appropiate.<br/><br/>I have just found there is no built-in function to conver a string to a Boolean, so do this instead:<br/>player.blahblah = (LCase(StringListItem(ary, 1)) = &quot;true&quot;)",
      "PostDate": "2016-06-24T07:48:41+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43793",
      "UserId": 0,
      "Username": "Anonynn",
      "AvatarUrl": null,
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "[quote:2mlsohx8]Not sure why it happens as you say, but I suggest you try this and see what happens:[/quote:2mlsohx8]\n\nI think it happens because if the game doesn't go through the character creation process, it doesn't receive any values for the player's health and therefore starts the game and assumes they have died because they have &quot;0&quot; health. That's my theory anyway. That's why I'm not sure what to do if the player goes to input their &quot;game save code&quot; and it fails somehow or isn't the right code, it'll probably go to instant game over.\n\n[quote:2mlsohx8]What is this part supposed to entail?\n(ary, 1))\n(ary, 2))[/quote:2mlsohx8]\n\nI meant more like what are the numbers? Are they a sequence order like ....\n(ary, 1))\n(ary, 2))\n(ary, 3))\n(ary, 4))\n\nOr are they supposed to fit the values of integers out of 100? Like, for example...\n\nplayer.intelligence = ToInt(StringListItem(ary, 100))\nplayer.strength= ToInt(StringListItem(ary, 100))\n\nAlso, what would the code be for like recording what the player has in their inventory? Or the values of their inventory, like the entries of a journal item?",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>Not sure why it happens as you say, but I suggest you try this and see what happens:</p></blockquote><br/><br/>I think it happens because if the game doesn't go through the character creation process, it doesn't receive any values for the player's health and therefore starts the game and assumes they have died because they have &quot;0&quot; health. That's my theory anyway. That's why I'm not sure what to do if the player goes to input their &quot;game save code&quot; and it fails somehow or isn't the right code, it'll probably go to instant game over.<br/><br/><blockquote><p>What is this part supposed to entail?<br/>(ary, 1))<br/>(ary, 2))</p></blockquote><br/><br/>I meant more like what are the numbers? Are they a sequence order like ....<br/>(ary, 1))<br/>(ary, 2))<br/>(ary, 3))<br/>(ary, 4))<br/><br/>Or are they supposed to fit the values of integers out of 100? Like, for example...<br/><br/>player.intelligence = ToInt(StringListItem(ary, 100))<br/>player.strength= ToInt(StringListItem(ary, 100))<br/><br/>Also, what would the code be for like recording what the player has in their inventory? Or the values of their inventory, like the entries of a journal item?",
      "PostDate": "2016-06-28T02:32:58+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43794",
      "UserId": 0,
      "Username": "The Pixie",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;Anonynn&quot;:28di2cnh]I think it happens because if the game doesn't go through the character creation process, it doesn't receive any values for the player's health and therefore starts the game and assumes they have died because they have &quot;0&quot; health. That's my theory anyway. That's why I'm not sure what to do if the player goes to input their &quot;game save code&quot; and it fails somehow or isn't the right code, it'll probably go to instant game over.[/quote:28di2cnh]\nMakes sense. That will be tricky to handle, because of the way the JavaScript call back works. I will have a think about it.\n[quote:28di2cnh]I meant more like what are the numbers? Are they a sequence order like ....\n(ary, 1))\n(ary, 2))\n(ary, 3))\n(ary, 4))[/quote:28di2cnh]\nIt is a sequence (that starts at zero!). The data is stored as a string, perhaps this:\nMary;4;1;0;true;6\nThe load file uses each in turn, so:\n[code:28di2cnh]player&#46;name = StringListItem(ary, 0)   // Mary\nplayer&#46;intelligence = ToInt(StringListItem(ary, 1))  //4\nplayer&#46;strength= ToInt(StringListItem(ary, 2))  //1\netc&#46;[/code:28di2cnh]\n[quote:28di2cnh]Also, what would the code be for like recording what the player has in their inventory? Or the values of their inventory, like the entries of a journal item?[/quote:28di2cnh]\nThe basic strategy is to convert to and from a string.\n\nYou would need to record the location of each object (not just those in the inventory). The location is held in the parent attribute, so you need to save the name of the parent object and then find that object when you load. For an object called hat:\n[code:28di2cnh]// When saving\ns = s + &quot;;&quot; + hat&#46;parent&#46;name\n// When loading\nhat&#46;parent = GetObject(StringListItem(ary, 74))[/code:28di2cnh]\nFor a string list, you will need to convert that to a string, and back.\n[code:28di2cnh]// When saving\ns = s + &quot;;&quot; + Join(journal&#46;entries, &quot;|&quot;)\n// When loading\njournal&#46;entries = Split(StringListItem(ary, 104), &quot;|&quot;)[/code:28di2cnh]\nIf you have an object list, it will be even more complicated...",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Anonynn wrote:</cite>I think it happens because if the game doesn't go through the character creation process, it doesn't receive any values for the player's health and therefore starts the game and assumes they have died because they have &quot;0&quot; health. That's my theory anyway. That's why I'm not sure what to do if the player goes to input their &quot;game save code&quot; and it fails somehow or isn't the right code, it'll probably go to instant game over.</blockquote><br/>Makes sense. That will be tricky to handle, because of the way the JavaScript call back works. I will have a think about it.<br/><blockquote><p>I meant more like what are the numbers? Are they a sequence order like ....<br/>(ary, 1))<br/>(ary, 2))<br/>(ary, 3))<br/>(ary, 4))</p></blockquote><br/>It is a sequence (that starts at zero!). The data is stored as a string, perhaps this:<br/>Mary;4;1;0;true;6<br/>The load file uses each in turn, so:<br/><pre><code>player&#46;name = StringListItem(ary, 0)   // Mary<br/>player&#46;intelligence = ToInt(StringListItem(ary, 1))  //4<br/>player&#46;strength= ToInt(StringListItem(ary, 2))  //1<br/>etc&#46;</code></pre><br/><blockquote><p>Also, what would the code be for like recording what the player has in their inventory? Or the values of their inventory, like the entries of a journal item?</p></blockquote><br/>The basic strategy is to convert to and from a string.<br/><br/>You would need to record the location of each object (not just those in the inventory). The location is held in the parent attribute, so you need to save the name of the parent object and then find that object when you load. For an object called hat:<br/><pre><code>// When saving<br/>s = s + &quot;;&quot; + hat&#46;parent&#46;name<br/>// When loading<br/>hat&#46;parent = GetObject(StringListItem(ary, 74))</code></pre><br/>For a string list, you will need to convert that to a string, and back.<br/><pre><code>// When saving<br/>s = s + &quot;;&quot; + Join(journal&#46;entries, &quot;|&quot;)<br/>// When loading<br/>journal&#46;entries = Split(StringListItem(ary, 104), &quot;|&quot;)</code></pre><br/>If you have an object list, it will be even more complicated...",
      "PostDate": "2016-06-28T07:00:05+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43795",
      "UserId": 0,
      "Username": "The Pixie",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "I am wondering if a better approach would be to have a list of things that need saving, and have Quest iterate through that. Call it [i:3rr9rc9z]saveloadatts[/i:3rr9rc9z] and put it on the game object. Each entry would then look like this:\n[code:3rr9rc9z]hat&#46;alias&#46;string\nplayer&#46;parent&#46;object\nplayer&#46;strength&#46;int\nplayer&#46;flag&#46;boolean[/code:3rr9rc9z]\nSo there are three parts, separated by dots. The first is the name of the object, the second is the name of the attribute. These must be exactly as you have them in your game. The third part is the type of attribute, which must be one of: object, integer (or int), boolean (or flag), list (and it must be a string list) or string (which is actually the default).\n\nYour LoadGame and SaveGame functions will than look like this:\n[code:3rr9rc9z]  &lt;function name=&quot;LoadGame&quot; parameters=&quot;s&quot;&gt;\n    pos = 0\n    foreach (val, Split(s, &quot;;&quot;)) {\n      ary = Split(StringListItem(game&#46;saveloadatts, pos), &quot;&#46;&quot;)\n      pos = pos + 1\n      obj = GetObject(StringListItem (ary, 0))\n      att = StringListItem (ary, 1)\n      type = LCase(StringListItem (ary, 2))\n      msg (&quot;obj=&quot; + obj)\n      msg (&quot;att=&quot; + att)\n      msg (&quot;val=&quot; + val)\n      if (type = &quot;object&quot;) {\n        set (obj, att, GetObject(val))\n      }\n      else if (type = &quot;list&quot;) {\n        set (obj, att, Split(val, &quot;|&quot;))\n      }\n      else if (type = &quot;int&quot; or type = &quot;integer&quot;) {\n        set (obj, att, ToInt(val))\n      }\n      else if (type = &quot;boolean&quot; or type = &quot;flag&quot;) {\n        set (obj, att, LCase(val) = &quot;true&quot;)\n      }\n      else {\n        set (obj, att, Replace(val, &quot;@@@semicolon@@@&quot;, &quot;;&quot;))\n      }\n    }\n  &lt;/function&gt;\n  &lt;function name=&quot;SaveGame&quot; type=&quot;string&quot;&gt;\n    data = NewStringList()\n    foreach (att, game&#46;saveloadatts) {\n      ary = Split(att, &quot;&#46;&quot;)\n      obj = GetObject(StringListItem (ary, 0))\n      att = StringListItem (ary, 1)\n      type = LCase(StringListItem (ary, 2))\n      val = GetAttribute(obj, att)\n      msg (&quot;obj=&quot; + obj)\n      msg (&quot;att=&quot; + att)\n      msg (&quot;val=&quot; + val)\n      if (type = &quot;object&quot;) {\n        list add (data, val&#46;name)\n      }\n      else if (type = &quot;list&quot;) {\n        list add (data, Join(val, &quot;|&quot;))\n      }\n      else if (type = &quot;int&quot; or type = &quot;integer&quot;) {\n        list add (data, &quot;&quot; + val)\n      }\n      else if (type = &quot;boolean&quot; or type = &quot;flag&quot;) {\n        list add (data, &quot;&quot; + val)\n      }\n      else {\n        list add (data, Replace(val, &quot;;&quot;, &quot;@@@semicolon@@@&quot;))\n      }\n    }\n    return (Join(data, &quot;;&quot;))\n  &lt;/function&gt;[/code:3rr9rc9z]",
      "EditableFormat": "bbcode",
      "HTML": "I am wondering if a better approach would be to have a list of things that need saving, and have Quest iterate through that. Call it <span style=\"font-style:italic;\">saveloadatts</span> and put it on the game object. Each entry would then look like this:<br/><pre><code>hat&#46;alias&#46;string<br/>player&#46;parent&#46;object<br/>player&#46;strength&#46;int<br/>player&#46;flag&#46;boolean</code></pre><br/>So there are three parts, separated by dots. The first is the name of the object, the second is the name of the attribute. These must be exactly as you have them in your game. The third part is the type of attribute, which must be one of: object, integer (or int), boolean (or flag), list (and it must be a string list) or string (which is actually the default).<br/><br/>Your LoadGame and SaveGame functions will than look like this:<br/><pre><code>  &lt;function name=&quot;LoadGame&quot; parameters=&quot;s&quot;&gt;<br/>    pos = 0<br/>    foreach (val, Split(s, &quot;;&quot;)) {<br/>      ary = Split(StringListItem(game&#46;saveloadatts, pos), &quot;&#46;&quot;)<br/>      pos = pos + 1<br/>      obj = GetObject(StringListItem (ary, 0))<br/>      att = StringListItem (ary, 1)<br/>      type = LCase(StringListItem (ary, 2))<br/>      msg (&quot;obj=&quot; + obj)<br/>      msg (&quot;att=&quot; + att)<br/>      msg (&quot;val=&quot; + val)<br/>      if (type = &quot;object&quot;) {<br/>        set (obj, att, GetObject(val))<br/>      }<br/>      else if (type = &quot;list&quot;) {<br/>        set (obj, att, Split(val, &quot;|&quot;))<br/>      }<br/>      else if (type = &quot;int&quot; or type = &quot;integer&quot;) {<br/>        set (obj, att, ToInt(val))<br/>      }<br/>      else if (type = &quot;boolean&quot; or type = &quot;flag&quot;) {<br/>        set (obj, att, LCase(val) = &quot;true&quot;)<br/>      }<br/>      else {<br/>        set (obj, att, Replace(val, &quot;@@@semicolon@@@&quot;, &quot;;&quot;))<br/>      }<br/>    }<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;SaveGame&quot; type=&quot;string&quot;&gt;<br/>    data = NewStringList()<br/>    foreach (att, game&#46;saveloadatts) {<br/>      ary = Split(att, &quot;&#46;&quot;)<br/>      obj = GetObject(StringListItem (ary, 0))<br/>      att = StringListItem (ary, 1)<br/>      type = LCase(StringListItem (ary, 2))<br/>      val = GetAttribute(obj, att)<br/>      msg (&quot;obj=&quot; + obj)<br/>      msg (&quot;att=&quot; + att)<br/>      msg (&quot;val=&quot; + val)<br/>      if (type = &quot;object&quot;) {<br/>        list add (data, val&#46;name)<br/>      }<br/>      else if (type = &quot;list&quot;) {<br/>        list add (data, Join(val, &quot;|&quot;))<br/>      }<br/>      else if (type = &quot;int&quot; or type = &quot;integer&quot;) {<br/>        list add (data, &quot;&quot; + val)<br/>      }<br/>      else if (type = &quot;boolean&quot; or type = &quot;flag&quot;) {<br/>        list add (data, &quot;&quot; + val)<br/>      }<br/>      else {<br/>        list add (data, Replace(val, &quot;;&quot;, &quot;@@@semicolon@@@&quot;))<br/>      }<br/>    }<br/>    return (Join(data, &quot;;&quot;))<br/>  &lt;/function&gt;</code></pre>",
      "PostDate": "2016-06-28T07:39:14+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43796",
      "UserId": 0,
      "Username": "HegemonKhan",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "[quote=&quot;Anonynn&quot;:14wj4emb]I meant more like what are the numbers? Are they a sequence order like ....\n(ary, 1))\n(ary, 2))\n(ary, 3))\n(ary, 4))\n\nOr are they supposed to fit the values of integers out of 100? Like, for example...\n\nplayer.intelligence = ToInt(StringListItem(ary, 100))\nplayer.strength= ToInt(StringListItem(ary, 100))[/quote:14wj4emb]\n\n(this below is basis of what you're doing, but it's extremely much more complicated as your using encoding/decoding with it, which Pixie is helping you through it's coding process/work)\n\nthink of List Attributes (Stringlist and Objectlist Attributes) as your grocery shopping list:\n\nplayer.grocery_shopping_list = split (&quot;milk;eggs;bread&quot;, &quot;;&quot;)\n\n1. milk\n2. eggs\n3. bread\n\nexcept your list starts with 0, NOT 1:\n\n0. milk\n1. eggs\n2. bread\n\nI need to get item (index number) 0 -&gt; ListItem (player.grocery_shopping_list, 0) -&gt; you get the 'milk' (the name of the item) from the 'grocery store' (your List Attribute), which you can then use that item's name to do actions upon that item, be it the name of a String or an Object)\n\nI need to get item (index number) 1 -&gt; ListItem (player.grocery_shopping_list, 1) -&gt; you get the 'eggs' (the name of the item) from the 'grocery store' (your List Attribute), which you can then use that item's name to do actions upon that item, be it the name of a String or an Object)\n\nI need to get item (index number) 2 -&gt; ListItem (player.grocery_shopping_list, 2) -&gt; you get the 'bread' (the name of the item) from the 'grocery store' (your List Attribute), which you can then use that item's name to do actions upon that item, be it the name of a String or an Object)\n\nI need to get item (index number) 3 -&gt; ERROR! Whoopsy... I/you don't have a 4th item on my/your grocery shopping list!\n\n---------------------\n\n[quote=&quot;anonynn&quot;:14wj4emb]Or are they supposed to fit the values of integers out of 100? Like, for example...\n\nplayer.intelligence = ToInt(StringListItem(ary, 100))\nplayer.strength= ToInt(StringListItem(ary, 100))[/quote:14wj4emb]\n\nwhereas, using Dictionary Attributes would/could allow you to include the Values of those Attributes, but this is too difficult for me to explain, especially in conjunction with the encoding/decoding that Pixie is helping you with.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Anonynn wrote:</cite>I meant more like what are the numbers? Are they a sequence order like ....<br/>(ary, 1))<br/>(ary, 2))<br/>(ary, 3))<br/>(ary, 4))<br/><br/>Or are they supposed to fit the values of integers out of 100? Like, for example...<br/><br/>player.intelligence = ToInt(StringListItem(ary, 100))<br/>player.strength= ToInt(StringListItem(ary, 100))</blockquote><br/><br/>(this below is basis of what you're doing, but it's extremely much more complicated as your using encoding/decoding with it, which Pixie is helping you through it's coding process/work)<br/><br/>think of List Attributes (Stringlist and Objectlist Attributes) as your grocery shopping list:<br/><br/>player.grocery_shopping_list = split (&quot;milk;eggs;bread&quot;, &quot;;&quot;)<br/><br/>1. milk<br/>2. eggs<br/>3. bread<br/><br/>except your list starts with 0, NOT 1:<br/><br/>0. milk<br/>1. eggs<br/>2. bread<br/><br/>I need to get item (index number) 0 -&gt; ListItem (player.grocery_shopping_list, 0) -&gt; you get the 'milk' (the name of the item) from the 'grocery store' (your List Attribute), which you can then use that item's name to do actions upon that item, be it the name of a String or an Object)<br/><br/>I need to get item (index number) 1 -&gt; ListItem (player.grocery_shopping_list, 1) -&gt; you get the 'eggs' (the name of the item) from the 'grocery store' (your List Attribute), which you can then use that item's name to do actions upon that item, be it the name of a String or an Object)<br/><br/>I need to get item (index number) 2 -&gt; ListItem (player.grocery_shopping_list, 2) -&gt; you get the 'bread' (the name of the item) from the 'grocery store' (your List Attribute), which you can then use that item's name to do actions upon that item, be it the name of a String or an Object)<br/><br/>I need to get item (index number) 3 -&gt; ERROR! Whoopsy... I/you don't have a 4th item on my/your grocery shopping list!<br/><br/>---------------------<br/><br/><blockquote><cite>anonynn wrote:</cite>Or are they supposed to fit the values of integers out of 100? Like, for example...<br/><br/>player.intelligence = ToInt(StringListItem(ary, 100))<br/>player.strength= ToInt(StringListItem(ary, 100))</blockquote><br/><br/>whereas, using Dictionary Attributes would/could allow you to include the Values of those Attributes, but this is too difficult for me to explain, especially in conjunction with the encoding/decoding that Pixie is helping you with.",
      "PostDate": "2016-06-28T08:26:13+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43839",
      "UserId": 0,
      "Username": "The Pixie",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Here is a revised version that incorporates the functions of my previous post. As before, you need to save the code at the end into a text file called saveload.aslx, and save that in your game folder. Load into your game as normal. Then put this in your game &quot;Start&quot; script&#058;\n[code:1aflh29l]SaveLoadInit[/code:1aflh29l]\nThen you need to tell it what data is to be saved. This is done with a string list attribute called &quot;saveloadatts&quot; on the game object. Each entry would then look like this:\n[code:1aflh29l]hat&#46;alias&#46;string\nplayer&#46;parent&#46;object\nplayer&#46;strength&#46;int\nplayer&#46;flag&#46;boolean[/code:1aflh29l]\nSo there are three parts, separated by dots. The first is the name of the object, the second is the name of the attribute. These must be exactly as you have them in your game. The third part is the type of attribute, which must be one of: object, integer (or int), boolean (or flag), list (and it must be a string list) or string (which is actually the default).\n\nWhen you release updates to your released game, you can add to this list, but you can never edit or remove the existing entries if you want players to use saves from earlier versions.\n\nHere is the code for the library\n[code:1aflh29l]&lt;library&gt;\n\n  &lt;object name=&quot;saveloaddata&quot;&gt;\n    &lt;saveloadtext&gt;&lt;!&#91;CDATA&#91;\n      &lt;script src=&quot;https&#58;//cdnjs&#46;cloudflare&#46;com/ajax/libs/crypto-js/3&#46;1&#46;2/rollups/aes&#46;js&quot;&gt;&lt;/script&gt;\n      &lt;script&gt;\n        var secretPassphrase = 'UltraSecret Passphrase';\n       \n        function loadGame2() {\n          s = prompt(&quot;Copy-and-paste your save game code here&quot;, &quot;&quot;);\n          if (s) {\n            decode(s);\n          }\n        }\n         \n        function decode(s) {\n          s = CryptoJS&#46;AES&#46;decrypt(s, secretPassphrase);\n          s = s&#46;toString();\n          str = '';\n          for (i = 0; i &lt; s&#46;length; i += 2) {\n            s2 = s&#46;charAt(i) + s&#46;charAt(i + 1);\n            n = parseInt(s2, 16);\n            str += String&#46;fromCharCode(n);\n          }\n          ASLEvent(&quot;LoadGame&quot;, str);\n        }\n     \n        var loadDialog = $(&quot;#load-dialog&quot;)&#46;dialog({\n          autoOpen&#58; false,\n          width&#58; 600,\n          height&#58; 500,\n            buttons&#58; {\n              Ok&#58; function() {\n                  decode($('textarea#data')&#46;val());\n                  $(this)&#46;dialog(&quot;close&quot;);\n              },\n              Cancel&#58; function () {\n                  $(this)&#46;dialog(&quot;close&quot;);\n              }\n          }\n        });\n\n        var saveDialog = $(&quot;#save-dialog&quot;)&#46;dialog({\n          autoOpen&#58; false,\n          width&#58; 600,\n          height&#58; 500,\n            buttons&#58; {\n              Ok&#58; function() {\n                  $(this)&#46;dialog(&quot;close&quot;);\n              },\n          }\n        });\n\n        function loadGame() {\n          loadDialog&#46;dialog(&quot;open&quot;);\n        }\n\n        function saveGame(s) {\n          str = CryptoJS&#46;AES&#46;encrypt(s, secretPassphrase);\n          $('textarea#savedata')&#46;val(str);\n          saveDialog&#46;dialog(&quot;open&quot;);\n        }\n\n      &lt;/script&gt;\n      &lt;div id=&quot;load-dialog&quot;&gt;\n        &lt;p&gt;Please paste your save game here&#58;&lt;/p&gt;\n        &lt;textarea id=&quot;data&quot; rows=&quot;13&quot; cols=&quot;49&quot;&gt;&lt;/textarea&gt;\n      &lt;/div&gt;\n      &lt;div id=&quot;save-dialog&quot;&gt;\n        &lt;p&gt;Please copy-and-paste your save game into a text file from here&#58;&lt;/p&gt;\n        &lt;textarea id=&quot;savedata&quot; rows=&quot;13&quot; cols=&quot;49&quot;&gt;&lt;/textarea&gt;\n      &lt;/div&gt;\n    &#93;&#93;&gt;&lt;/saveloadtext&gt;\n  &lt;/object&gt;\n \n \n  &lt;command name=&quot;savecmd&quot;&gt;\n    &lt;pattern&gt;save&lt;/pattern&gt;\n    &lt;script&gt;\n      JS&#46;eval (&quot;saveGame('&quot; + SaveGame() + &quot;');&quot;)\n    &lt;/script&gt;\n  &lt;/command&gt;\n \n \n  &lt;command name=&quot;loadcmd&quot;&gt;\n    &lt;pattern&gt;load&lt;/pattern&gt;\n    &lt;script&gt;\n      JS&#46;eval (&quot;loadGame();&quot;)\n    &lt;/script&gt;\n  &lt;/command&gt;\n \n \n  &lt;function name=&quot;SaveLoadInit&quot;&gt;\n    OutputTextNoBr (saveloaddata&#46;saveloadtext)\n  &lt;/function&gt;\n  \n  \n  &lt;function name=&quot;LoadGame&quot; parameters=&quot;s&quot;&gt;\n    pos = 0\n    foreach (val, Split(s, &quot;;&quot;)) {\n      ary = Split(StringListItem(game&#46;saveloadatts, pos), &quot;&#46;&quot;)\n      pos = pos + 1\n      obj = GetObject(StringListItem (ary, 0))\n      att = StringListItem (ary, 1)\n      type = LCase(StringListItem (ary, 2))\n      if (type = &quot;object&quot;) {\n        set (obj, att, GetObject(val))\n      }\n      else if (type = &quot;list&quot;) {\n        set (obj, att, Split(val, &quot;|&quot;))\n      }\n      else if (type = &quot;int&quot; or type = &quot;integer&quot;) {\n        set (obj, att, ToInt(val))\n      }\n      else if (type = &quot;boolean&quot; or type = &quot;flag&quot;) {\n        set (obj, att, LCase(val) = &quot;true&quot;)\n      }\n      else {\n        set (obj, att, Replace(val, &quot;@@@semicolon@@@&quot;, &quot;;&quot;))\n      }\n    }\n  &lt;/function&gt;\n  \n  \n  &lt;function name=&quot;SaveGame&quot; type=&quot;string&quot;&gt;\n    data = NewStringList()\n    foreach (att, game&#46;saveloadatts) {\n      ary = Split(att, &quot;&#46;&quot;)\n      obj = GetObject(StringListItem (ary, 0))\n      att = StringListItem (ary, 1)\n      type = LCase(StringListItem (ary, 2))\n      val = GetAttribute(obj, att)\n      if (type = &quot;object&quot;) {\n        list add (data, val&#46;name)\n      }\n      else if (type = &quot;list&quot;) {\n        list add (data, Join(val, &quot;|&quot;))\n      }\n      else if (type = &quot;int&quot; or type = &quot;integer&quot;) {\n        list add (data, &quot;&quot; + val)\n      }\n      else if (type = &quot;boolean&quot; or type = &quot;flag&quot;) {\n        list add (data, &quot;&quot; + val)\n      }\n      else {\n        list add (data, Replace(val, &quot;;&quot;, &quot;@@@semicolon@@@&quot;))\n      }\n    }\n    return (Join(data, &quot;;&quot;))\n  &lt;/function&gt;\n\n&lt;/library&gt;[/code:1aflh29l]",
      "EditableFormat": "bbcode",
      "HTML": "Here is a revised version that incorporates the functions of my previous post. As before, you need to save the code at the end into a text file called saveload.aslx, and save that in your game folder. Load into your game as normal. Then put this in your game &quot;Start&quot; script&#058;<br/><pre><code>SaveLoadInit</code></pre><br/>Then you need to tell it what data is to be saved. This is done with a string list attribute called &quot;saveloadatts&quot; on the game object. Each entry would then look like this:<br/><pre><code>hat&#46;alias&#46;string<br/>player&#46;parent&#46;object<br/>player&#46;strength&#46;int<br/>player&#46;flag&#46;boolean</code></pre><br/>So there are three parts, separated by dots. The first is the name of the object, the second is the name of the attribute. These must be exactly as you have them in your game. The third part is the type of attribute, which must be one of: object, integer (or int), boolean (or flag), list (and it must be a string list) or string (which is actually the default).<br/><br/>When you release updates to your released game, you can add to this list, but you can never edit or remove the existing entries if you want players to use saves from earlier versions.<br/><br/>Here is the code for the library<br/><pre><code>&lt;library&gt;<br/><br/>  &lt;object name=&quot;saveloaddata&quot;&gt;<br/>    &lt;saveloadtext&gt;&lt;!&#91;CDATA&#91;<br/>      &lt;script src=&quot;https&#58;//cdnjs&#46;cloudflare&#46;com/ajax/libs/crypto-js/3&#46;1&#46;2/rollups/aes&#46;js&quot;&gt;&lt;/script&gt;<br/>      &lt;script&gt;<br/>        var secretPassphrase = 'UltraSecret Passphrase';<br/>       <br/>        function loadGame2() {<br/>          s = prompt(&quot;Copy-and-paste your save game code here&quot;, &quot;&quot;);<br/>          if (s) {<br/>            decode(s);<br/>          }<br/>        }<br/>         <br/>        function decode(s) {<br/>          s = CryptoJS&#46;AES&#46;decrypt(s, secretPassphrase);<br/>          s = s&#46;toString();<br/>          str = '';<br/>          for (i = 0; i &lt; s&#46;length; i += 2) {<br/>            s2 = s&#46;charAt(i) + s&#46;charAt(i + 1);<br/>            n = parseInt(s2, 16);<br/>            str += String&#46;fromCharCode(n);<br/>          }<br/>          ASLEvent(&quot;LoadGame&quot;, str);<br/>        }<br/>     <br/>        var loadDialog = $(&quot;#load-dialog&quot;)&#46;dialog({<br/>          autoOpen&#58; false,<br/>          width&#58; 600,<br/>          height&#58; 500,<br/>            buttons&#58; {<br/>              Ok&#58; function() {<br/>                  decode($('textarea#data')&#46;val());<br/>                  $(this)&#46;dialog(&quot;close&quot;);<br/>              },<br/>              Cancel&#58; function () {<br/>                  $(this)&#46;dialog(&quot;close&quot;);<br/>              }<br/>          }<br/>        });<br/><br/>        var saveDialog = $(&quot;#save-dialog&quot;)&#46;dialog({<br/>          autoOpen&#58; false,<br/>          width&#58; 600,<br/>          height&#58; 500,<br/>            buttons&#58; {<br/>              Ok&#58; function() {<br/>                  $(this)&#46;dialog(&quot;close&quot;);<br/>              },<br/>          }<br/>        });<br/><br/>        function loadGame() {<br/>          loadDialog&#46;dialog(&quot;open&quot;);<br/>        }<br/><br/>        function saveGame(s) {<br/>          str = CryptoJS&#46;AES&#46;encrypt(s, secretPassphrase);<br/>          $('textarea#savedata')&#46;val(str);<br/>          saveDialog&#46;dialog(&quot;open&quot;);<br/>        }<br/><br/>      &lt;/script&gt;<br/>      &lt;div id=&quot;load-dialog&quot;&gt;<br/>        &lt;p&gt;Please paste your save game here&#58;&lt;/p&gt;<br/>        &lt;textarea id=&quot;data&quot; rows=&quot;13&quot; cols=&quot;49&quot;&gt;&lt;/textarea&gt;<br/>      &lt;/div&gt;<br/>      &lt;div id=&quot;save-dialog&quot;&gt;<br/>        &lt;p&gt;Please copy-and-paste your save game into a text file from here&#58;&lt;/p&gt;<br/>        &lt;textarea id=&quot;savedata&quot; rows=&quot;13&quot; cols=&quot;49&quot;&gt;&lt;/textarea&gt;<br/>      &lt;/div&gt;<br/>    &#93;&#93;&gt;&lt;/saveloadtext&gt;<br/>  &lt;/object&gt;<br/> <br/> <br/>  &lt;command name=&quot;savecmd&quot;&gt;<br/>    &lt;pattern&gt;save&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      JS&#46;eval (&quot;saveGame('&quot; + SaveGame() + &quot;');&quot;)<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;<br/> <br/> <br/>  &lt;command name=&quot;loadcmd&quot;&gt;<br/>    &lt;pattern&gt;load&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      JS&#46;eval (&quot;loadGame();&quot;)<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;<br/> <br/> <br/>  &lt;function name=&quot;SaveLoadInit&quot;&gt;<br/>    OutputTextNoBr (saveloaddata&#46;saveloadtext)<br/>  &lt;/function&gt;<br/>  <br/>  <br/>  &lt;function name=&quot;LoadGame&quot; parameters=&quot;s&quot;&gt;<br/>    pos = 0<br/>    foreach (val, Split(s, &quot;;&quot;)) {<br/>      ary = Split(StringListItem(game&#46;saveloadatts, pos), &quot;&#46;&quot;)<br/>      pos = pos + 1<br/>      obj = GetObject(StringListItem (ary, 0))<br/>      att = StringListItem (ary, 1)<br/>      type = LCase(StringListItem (ary, 2))<br/>      if (type = &quot;object&quot;) {<br/>        set (obj, att, GetObject(val))<br/>      }<br/>      else if (type = &quot;list&quot;) {<br/>        set (obj, att, Split(val, &quot;|&quot;))<br/>      }<br/>      else if (type = &quot;int&quot; or type = &quot;integer&quot;) {<br/>        set (obj, att, ToInt(val))<br/>      }<br/>      else if (type = &quot;boolean&quot; or type = &quot;flag&quot;) {<br/>        set (obj, att, LCase(val) = &quot;true&quot;)<br/>      }<br/>      else {<br/>        set (obj, att, Replace(val, &quot;@@@semicolon@@@&quot;, &quot;;&quot;))<br/>      }<br/>    }<br/>  &lt;/function&gt;<br/>  <br/>  <br/>  &lt;function name=&quot;SaveGame&quot; type=&quot;string&quot;&gt;<br/>    data = NewStringList()<br/>    foreach (att, game&#46;saveloadatts) {<br/>      ary = Split(att, &quot;&#46;&quot;)<br/>      obj = GetObject(StringListItem (ary, 0))<br/>      att = StringListItem (ary, 1)<br/>      type = LCase(StringListItem (ary, 2))<br/>      val = GetAttribute(obj, att)<br/>      if (type = &quot;object&quot;) {<br/>        list add (data, val&#46;name)<br/>      }<br/>      else if (type = &quot;list&quot;) {<br/>        list add (data, Join(val, &quot;|&quot;))<br/>      }<br/>      else if (type = &quot;int&quot; or type = &quot;integer&quot;) {<br/>        list add (data, &quot;&quot; + val)<br/>      }<br/>      else if (type = &quot;boolean&quot; or type = &quot;flag&quot;) {<br/>        list add (data, &quot;&quot; + val)<br/>      }<br/>      else {<br/>        list add (data, Replace(val, &quot;;&quot;, &quot;@@@semicolon@@@&quot;))<br/>      }<br/>    }<br/>    return (Join(data, &quot;;&quot;))<br/>  &lt;/function&gt;<br/><br/>&lt;/library&gt;</code></pre>",
      "PostDate": "2016-07-01T07:46:21+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43864",
      "UserId": 0,
      "Username": "Anonynn",
      "AvatarUrl": null,
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Just curious. On the new version when I uploaded the library, I didn't see the Functions &quot;SaveGame&quot; and &quot;LoadGame&quot;. When I tried to add them as Functions the game said they already existed. I deleted them from the old version.",
      "EditableFormat": "bbcode",
      "HTML": "Just curious. On the new version when I uploaded the library, I didn't see the Functions &quot;SaveGame&quot; and &quot;LoadGame&quot;. When I tried to add them as Functions the game said they already existed. I deleted them from the old version.",
      "PostDate": "2016-07-02T02:39:55+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43870",
      "UserId": 0,
      "Username": "The Pixie",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "That is right, they are now implemented in the library.",
      "EditableFormat": "bbcode",
      "HTML": "That is right, they are now implemented in the library.",
      "PostDate": "2016-07-02T15:33:32+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "43880",
      "UserId": 0,
      "Username": "Anonynn",
      "AvatarUrl": null,
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Gotcha. I figured that's what you meant, I'm a dummy though and had to ask just to make sure.",
      "EditableFormat": "bbcode",
      "HTML": "Gotcha. I figured that's what you meant, I'm a dummy though and had to ask just to make sure.",
      "PostDate": "2016-07-03T03:59:46+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "7efb5462-122e-4ef8-b629-69a0c8f0fb33",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is an updated version of the library. All the comments in my post of 1st July still apply, so look there for how to use it.\r\n\r\nThis version is more robust; it will warn you if your attribute values do not make sense. Also, if the load game dialogue gets displayed, but no data is entered, the game will terminate.\r\n\r\nNote that this version can handle the \"once\" text processor command, but you will need to save the data that handles it, so include this entry in your list of attributes:\r\n```\r\ngame.textprocessor_seen.dictionaryoflists\r\n```\r\nNote that the `firsttime` and `otherwise` script commands cannot be handled, so if the player loads a game, Quest will assume it is the first time for them as though the player is playing from the start.\r\n```\r\n<library>\r\n\r\n  <object name=\"saveloaddata\">\r\n    <saveloadtext><![CDATA[\r\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/rollups/aes.js\">\r\n      </script>\r\n      <script>\r\n        var secretPassphrase = 'UltraSecret Passphrase';\r\n       \r\n        function loadGame2() {\r\n          s = prompt(\"Copy-and-paste your save game code here\", \"\");\r\n          if (s) {\r\n            decode(s);\r\n          }\r\n        }\r\n         \r\n        function decode(s) {\r\n          s = CryptoJS.AES.decrypt(s, secretPassphrase);\r\n          s = s.toString();\r\n          str = '';\r\n          for (i = 0; i < s.length; i += 2) {\r\n            s2 = s.charAt(i) + s.charAt(i + 1);\r\n            n = parseInt(s2, 16);\r\n            str += String.fromCharCode(n);\r\n          }\r\n          ASLEvent(\"LoadGame\", str);\r\n        }\r\n     \r\n        var loadDialog = $(\"#load-dialog\").dialog({\r\n          autoOpen: false,\r\n          width: 600,\r\n          height: 500,\r\n            buttons: {\r\n              Ok: function() {\r\n                  decode($('textarea#data').val());\r\n                  $(this).dialog(\"close\");\r\n              }\r\n          }\r\n        });\r\n\r\n        var saveDialog = $(\"#save-dialog\").dialog({\r\n          autoOpen: false,\r\n          width: 600,\r\n          height: 500,\r\n            buttons: {\r\n              Ok: function() {\r\n                  $(this).dialog(\"close\");\r\n              },\r\n          }\r\n        });\r\n\r\n        function loadGame() {\r\n          loadDialog.dialog(\"open\");\r\n        }\r\n\r\n        function saveGame(s) {\r\n          str = CryptoJS.AES.encrypt(s, secretPassphrase);\r\n          $('textarea#savedata').val(str);\r\n          saveDialog.dialog(\"open\");\r\n        }\r\n\r\n      </script>\r\n      <div id=\"load-dialog\">\r\n        <p>Please paste your save game here:</p>\r\n        <textarea id=\"data\" rows=\"13\" cols=\"49\"></textarea>\r\n      </div>\r\n      <div id=\"save-dialog\">\r\n        <p>Please copy-and-paste your save game into a text file from here:</p>\r\n        <textarea id=\"savedata\" rows=\"13\" cols=\"49\"></textarea>\r\n      </div>\r\n    ]]></saveloadtext>\r\n  </object>\r\n \r\n \r\n  <command name=\"savecmd\">\r\n    <pattern>save</pattern>\r\n    <script>\r\n      JS.eval (\"saveGame('\" + SaveGame() + \"');\")\r\n    </script>\r\n  </command>\r\n \r\n \r\n  <command name=\"loadcmd\">\r\n    <pattern>load</pattern>\r\n    <script>\r\n      JS.eval (\"loadGame();\")\r\n    </script>\r\n  </command>\r\n \r\n \r\n  <function name=\"SaveLoadInit\">\r\n    OutputTextNoBr (saveloaddata.saveloadtext)\r\n  </function>\r\n \r\n \r\n  <function name=\"LoadGame\" parameters=\"s\">\r\n    if (s = \"\") {\r\n      msg(\"No save game data found.\")\r\n      finish\r\n    }\r\n    pos = 0\r\n    foreach (val, Split(s, \";\")) {\r\n      ary = Split(StringListItem(game.saveloadatts, pos), \".\")\r\n      obj = GetObject(StringListItem (ary, 0))\r\n      att = StringListItem (ary, 1)\r\n      type = LCase(StringListItem (ary, 2))\r\n      if (val = \"\" or TypeOf(val) = \"null\") {\r\n        // Do nothing, this attribute has not been set\r\n      }\r\n      else if (type = \"object\") {\r\n        set (obj, att, GetObject(val))\r\n      }\r\n      else if (type = \"list\") {\r\n        set (obj, att, Split(val, \"|\"))\r\n      }\r\n      else if (type = \"int\" or type = \"integer\") {\r\n        if (IsInt(val)) {\r\n          set (obj, att, ToInt(val))\r\n        }\r\n        else {\r\n          msg(\"Load error: Cannot convert \\\"\" + val + \"\\\" to an integer for \" + StringListItem(game.saveloadatts, pos))\r\n        }\r\n      }\r\n      else if (type = \"boolean\" or type = \"flag\") {\r\n        set (obj, att, LCase(val) = \"true\")\r\n      }\r\n      else if (type = \"dictionaryoflists\") {\r\n        set (obj, att, DictSplit(val, 0))\r\n      }\r\n      else {\r\n        set (obj, att, Replace(val, \"@@@semicolon@@@\", \";\"))\r\n      }\r\n      pos = pos + 1\r\n    }\r\n    game.loading = false\r\n  </function>\r\n  \r\n  \r\n  \r\n\r\n  <function name=\"SaveGame\" type=\"string\">\r\n    data = NewStringList()\r\n    foreach (att, game.saveloadatts) {\r\n      ary = Split(att, \".\")\r\n      obj = GetObject(StringListItem (ary, 0))\r\n      if (not ListCount(ary) = 3) {\r\n        msg(\"Save error: Badly formatted entry: \" + att)\r\n      }\r\n      else if (obj = null) {\r\n        msg(\"Save error: Failed to find an object called: \" + StringListItem (ary, 0))\r\n      }\r\n      else {\r\n        att = StringListItem (ary, 1)\r\n        type = LCase(StringListItem (ary, 2))\r\n        val = GetAttribute(obj, att)\r\n        if (TypeOf(val) = \"null\") {\r\n          list add (data, \"\")\r\n        }\r\n        else if (type = \"object\") {\r\n          list add (data, val.name)\r\n        }\r\n        else if (type = \"list\") {\r\n          list add (data, Join(val, \"|\"))\r\n        }\r\n        else if (type = \"int\" or type = \"integer\") {\r\n          list add (data, \"\" + val)\r\n        }\r\n        else if (type = \"boolean\" or type = \"flag\") {\r\n          list add (data, \"\" + val)\r\n        }\r\n        else if (type = \"dictionaryoflists\") {\r\n          list add (data, SuperJoin(val))\r\n        }\r\n        else if (type = \"string\") {\r\n          list add (data, Replace(val, \";\", \"@@@semicolon@@@\"))\r\n        }\r\n        else {\r\n          msg(\"Save error: Invalid type for \" + StringListItem (ary, 0) + \": \" + type)\r\n        }\r\n      }\r\n    }\r\n    return (Join(data, \";\"))\r\n  </function>  \r\n \r\n  <!--\r\n  Will join a diction or list into a string. The dictionary or list can itself contain\r\n  further lists and dictionaries, which in turn can contain even more.  \r\n  -->  \r\n  <function name=\"SuperJoin\" parameters=\"col\" type=\"string\">\r\n    return (_SuperJoin(col, 0))\r\n  </function>\r\n \r\n  <function name=\"_SuperJoin\" parameters=\"col, n\" type=\"string\">\r\n    if (TypeOf(col) = \"dictionary\") {\r\n      sublist = NewStringList()\r\n      foreach (key, col) {\r\n        if (not TypeOf(key) = \"string\") {\r\n          msg(\"Error; key is a \" + TypeOf(key))\r\n          msg(key)\r\n        }\r\n        val = DictionaryItem(col, key)\r\n        s2 = _SuperJoin(val, n + 1)\r\n        s = key + \"~\" + n + s2\r\n        list add (sublist, s)\r\n      }\r\n      return(Join(sublist, \"|\" + n))\r\n    }\r\n    else if (TypeOf(col) = \"list\") {\r\n      sublist = NewStringList()\r\n      foreach (s, col) {\r\n        list add(sublist, _SuperJoin(s, n + 1))\r\n      }\r\n      return(Join(sublist, \"|\" + n))\r\n    }\r\n    else if (TypeOf(col) = \"stringlist\") {\r\n      return(Join(col, \"|\" + n))\r\n    }\r\n    else {\r\n      return (\"\" + col)\r\n    }\r\n  </function>\r\n \r\n \r\n  <function name=\"DictSplit\" parameters=\"str, n\" type=\"dictionary\">\r\n    dict = NewDictionary()\r\n    list = Split(str, \"|\" + n)\r\n    foreach (s, list) {\r\n      sublist = Split(s, \"~\" + n)\r\n      key = StringListItem(sublist, 0)\r\n      value = StringListItem(sublist, 1) // here\r\n      if (Instr(value, \"|\" + (n+1)) = 0) {\r\n        // Not a collection, just use the value\r\n        dictionary add(dict, key, value)\r\n      }\r\n      else if (Instr(s, \"~\" + (n+1)) = 0) {\r\n        // A list\r\n        dictionary add(dict, key, ListSplit(value, n + 1))\r\n      }\r\n      else {\r\n        // A dict\r\n        dictionary add(dict, key, DictSplit(value, n + 1))\r\n      }\r\n    }\r\n    return(dict)\r\n  </function>\r\n\r\n\r\n  <function name=\"ListSplit\" parameters=\"str, n\" type=\"list\">\r\n    l = NewList()\r\n    list = Split(str, \"|\" + n)\r\n    foreach (s, list) {\r\n      if (Instr(s, \"|\" + (n+1)) = 0) {\r\n        // Not a collection, just use the value\r\n        list add(l, s)\r\n      }\r\n      else if (Instr(s, \"~\" + (n+1)) = 0) {\r\n        // A list\r\n        list add(l, ListSplit(value, n + 1))\r\n      }\r\n      else {\r\n        // A dict\r\n        list add(l, DictSplit(value, n + 1))\r\n      }\r\n    }\r\n    return(l)\r\n  </function>\r\n\r\n\r\n</library>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>This is an updated version of the library. All the comments in my post of 1st July still apply, so look there for how to use it.</p>\n<p>This version is more robust; it will warn you if your attribute values do not make sense. Also, if the load game dialogue gets displayed, but no data is entered, the game will terminate.</p>\n<p>Note that this version can handle the \"once\" text processor command, but you will need to save the data that handles it, so include this entry in your list of attributes:</p>\n<pre><code>game.textprocessor_seen.dictionaryoflists\n</code></pre>\n<p>Note that the <code>firsttime</code> and <code>otherwise</code> script commands cannot be handled, so if the player loads a game, Quest will assume it is the first time for them as though the player is playing from the start.</p>\n<pre><code>&lt;library&gt;\n\n  &lt;object name=\"saveloaddata\"&gt;\n    &lt;saveloadtext&gt;&lt;![CDATA[\n      &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/rollups/aes.js\"&gt;\n      &lt;/script&gt;\n      &lt;script&gt;\n        var secretPassphrase = 'UltraSecret Passphrase';\n       \n        function loadGame2() {\n          s = prompt(\"Copy-and-paste your save game code here\", \"\");\n          if (s) {\n            decode(s);\n          }\n        }\n         \n        function decode(s) {\n          s = CryptoJS.AES.decrypt(s, secretPassphrase);\n          s = s.toString();\n          str = '';\n          for (i = 0; i &lt; s.length; i += 2) {\n            s2 = s.charAt(i) + s.charAt(i + 1);\n            n = parseInt(s2, 16);\n            str += String.fromCharCode(n);\n          }\n          ASLEvent(\"LoadGame\", str);\n        }\n     \n        var loadDialog = $(\"#load-dialog\").dialog({\n          autoOpen: false,\n          width: 600,\n          height: 500,\n            buttons: {\n              Ok: function() {\n                  decode($('textarea#data').val());\n                  $(this).dialog(\"close\");\n              }\n          }\n        });\n\n        var saveDialog = $(\"#save-dialog\").dialog({\n          autoOpen: false,\n          width: 600,\n          height: 500,\n            buttons: {\n              Ok: function() {\n                  $(this).dialog(\"close\");\n              },\n          }\n        });\n\n        function loadGame() {\n          loadDialog.dialog(\"open\");\n        }\n\n        function saveGame(s) {\n          str = CryptoJS.AES.encrypt(s, secretPassphrase);\n          $('textarea#savedata').val(str);\n          saveDialog.dialog(\"open\");\n        }\n\n      &lt;/script&gt;\n      &lt;div id=\"load-dialog\"&gt;\n        &lt;p&gt;Please paste your save game here:&lt;/p&gt;\n        &lt;textarea id=\"data\" rows=\"13\" cols=\"49\"&gt;&lt;/textarea&gt;\n      &lt;/div&gt;\n      &lt;div id=\"save-dialog\"&gt;\n        &lt;p&gt;Please copy-and-paste your save game into a text file from here:&lt;/p&gt;\n        &lt;textarea id=\"savedata\" rows=\"13\" cols=\"49\"&gt;&lt;/textarea&gt;\n      &lt;/div&gt;\n    ]]&gt;&lt;/saveloadtext&gt;\n  &lt;/object&gt;\n \n \n  &lt;command name=\"savecmd\"&gt;\n    &lt;pattern&gt;save&lt;/pattern&gt;\n    &lt;script&gt;\n      JS.eval (\"saveGame('\" + SaveGame() + \"');\")\n    &lt;/script&gt;\n  &lt;/command&gt;\n \n \n  &lt;command name=\"loadcmd\"&gt;\n    &lt;pattern&gt;load&lt;/pattern&gt;\n    &lt;script&gt;\n      JS.eval (\"loadGame();\")\n    &lt;/script&gt;\n  &lt;/command&gt;\n \n \n  &lt;function name=\"SaveLoadInit\"&gt;\n    OutputTextNoBr (saveloaddata.saveloadtext)\n  &lt;/function&gt;\n \n \n  &lt;function name=\"LoadGame\" parameters=\"s\"&gt;\n    if (s = \"\") {\n      msg(\"No save game data found.\")\n      finish\n    }\n    pos = 0\n    foreach (val, Split(s, \";\")) {\n      ary = Split(StringListItem(game.saveloadatts, pos), \".\")\n      obj = GetObject(StringListItem (ary, 0))\n      att = StringListItem (ary, 1)\n      type = LCase(StringListItem (ary, 2))\n      if (val = \"\" or TypeOf(val) = \"null\") {\n        // Do nothing, this attribute has not been set\n      }\n      else if (type = \"object\") {\n        set (obj, att, GetObject(val))\n      }\n      else if (type = \"list\") {\n        set (obj, att, Split(val, \"|\"))\n      }\n      else if (type = \"int\" or type = \"integer\") {\n        if (IsInt(val)) {\n          set (obj, att, ToInt(val))\n        }\n        else {\n          msg(\"Load error: Cannot convert \\\"\" + val + \"\\\" to an integer for \" + StringListItem(game.saveloadatts, pos))\n        }\n      }\n      else if (type = \"boolean\" or type = \"flag\") {\n        set (obj, att, LCase(val) = \"true\")\n      }\n      else if (type = \"dictionaryoflists\") {\n        set (obj, att, DictSplit(val, 0))\n      }\n      else {\n        set (obj, att, Replace(val, \"@@@semicolon@@@\", \";\"))\n      }\n      pos = pos + 1\n    }\n    game.loading = false\n  &lt;/function&gt;\n  \n  \n  \n\n  &lt;function name=\"SaveGame\" type=\"string\"&gt;\n    data = NewStringList()\n    foreach (att, game.saveloadatts) {\n      ary = Split(att, \".\")\n      obj = GetObject(StringListItem (ary, 0))\n      if (not ListCount(ary) = 3) {\n        msg(\"Save error: Badly formatted entry: \" + att)\n      }\n      else if (obj = null) {\n        msg(\"Save error: Failed to find an object called: \" + StringListItem (ary, 0))\n      }\n      else {\n        att = StringListItem (ary, 1)\n        type = LCase(StringListItem (ary, 2))\n        val = GetAttribute(obj, att)\n        if (TypeOf(val) = \"null\") {\n          list add (data, \"\")\n        }\n        else if (type = \"object\") {\n          list add (data, val.name)\n        }\n        else if (type = \"list\") {\n          list add (data, Join(val, \"|\"))\n        }\n        else if (type = \"int\" or type = \"integer\") {\n          list add (data, \"\" + val)\n        }\n        else if (type = \"boolean\" or type = \"flag\") {\n          list add (data, \"\" + val)\n        }\n        else if (type = \"dictionaryoflists\") {\n          list add (data, SuperJoin(val))\n        }\n        else if (type = \"string\") {\n          list add (data, Replace(val, \";\", \"@@@semicolon@@@\"))\n        }\n        else {\n          msg(\"Save error: Invalid type for \" + StringListItem (ary, 0) + \": \" + type)\n        }\n      }\n    }\n    return (Join(data, \";\"))\n  &lt;/function&gt;  \n \n  &lt;!--\n  Will join a diction or list into a string. The dictionary or list can itself contain\n  further lists and dictionaries, which in turn can contain even more.  \n  --&gt;  \n  &lt;function name=\"SuperJoin\" parameters=\"col\" type=\"string\"&gt;\n    return (_SuperJoin(col, 0))\n  &lt;/function&gt;\n \n  &lt;function name=\"_SuperJoin\" parameters=\"col, n\" type=\"string\"&gt;\n    if (TypeOf(col) = \"dictionary\") {\n      sublist = NewStringList()\n      foreach (key, col) {\n        if (not TypeOf(key) = \"string\") {\n          msg(\"Error; key is a \" + TypeOf(key))\n          msg(key)\n        }\n        val = DictionaryItem(col, key)\n        s2 = _SuperJoin(val, n + 1)\n        s = key + \"~\" + n + s2\n        list add (sublist, s)\n      }\n      return(Join(sublist, \"|\" + n))\n    }\n    else if (TypeOf(col) = \"list\") {\n      sublist = NewStringList()\n      foreach (s, col) {\n        list add(sublist, _SuperJoin(s, n + 1))\n      }\n      return(Join(sublist, \"|\" + n))\n    }\n    else if (TypeOf(col) = \"stringlist\") {\n      return(Join(col, \"|\" + n))\n    }\n    else {\n      return (\"\" + col)\n    }\n  &lt;/function&gt;\n \n \n  &lt;function name=\"DictSplit\" parameters=\"str, n\" type=\"dictionary\"&gt;\n    dict = NewDictionary()\n    list = Split(str, \"|\" + n)\n    foreach (s, list) {\n      sublist = Split(s, \"~\" + n)\n      key = StringListItem(sublist, 0)\n      value = StringListItem(sublist, 1) // here\n      if (Instr(value, \"|\" + (n+1)) = 0) {\n        // Not a collection, just use the value\n        dictionary add(dict, key, value)\n      }\n      else if (Instr(s, \"~\" + (n+1)) = 0) {\n        // A list\n        dictionary add(dict, key, ListSplit(value, n + 1))\n      }\n      else {\n        // A dict\n        dictionary add(dict, key, DictSplit(value, n + 1))\n      }\n    }\n    return(dict)\n  &lt;/function&gt;\n\n\n  &lt;function name=\"ListSplit\" parameters=\"str, n\" type=\"list\"&gt;\n    l = NewList()\n    list = Split(str, \"|\" + n)\n    foreach (s, list) {\n      if (Instr(s, \"|\" + (n+1)) = 0) {\n        // Not a collection, just use the value\n        list add(l, s)\n      }\n      else if (Instr(s, \"~\" + (n+1)) = 0) {\n        // A list\n        list add(l, ListSplit(value, n + 1))\n      }\n      else {\n        // A dict\n        list add(l, DictSplit(value, n + 1))\n      }\n    }\n    return(l)\n  &lt;/function&gt;\n\n\n&lt;/library&gt;\n</code></pre>\n\n",
      "PostDate": "2016-08-19T09:27:54.2934912Z",
      "LastEditDate": "2016-08-22T09:19:37.2669845Z"
    },
    {
      "PostId": "e3416515-2b70-402e-aa50-3c8aeeb80dcc",
      "UserId": 26011,
      "Username": "onimike",
      "AvatarUrl": "http://i.imgur.com/yL1GRWab.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey Pixie thanks for the save and load features really awesome, question though. I made the library, added it to game, call on Start game \r\n```\r\nSaveLoadInit\r\n```\r\nThen when I save i get a message box telling me to copy and paste a bunch of letters in the saveload library but also get a error\r\n```\r\n > save\r\nError running script: Cannot foreach over '' as it is not a list\r\n```\r\nAm I doing this right? Did I miss a step? And what function names do i call if I wanted to add a button for save and load? \r\nAlso does this save positions on map for objects? And do i make 'saveloadatts' Attribute in every object I want to save? Sorry for so many questions just really want to use this function :)\r\n\r\nThanks Again for everything Pixie really awesome stuff you do for us.\r\n\r\nMike",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey Pixie thanks for the save and load features really awesome, question though. I made the library, added it to game, call on Start game</p>\n<pre><code>SaveLoadInit\n</code></pre>\n<p>Then when I save i get a message box telling me to copy and paste a bunch of letters in the saveload library but also get a error</p>\n<pre><code> &gt; save\nError running script: Cannot foreach over '' as it is not a list\n</code></pre>\n<p>Am I doing this right? Did I miss a step? And what function names do i call if I wanted to add a button for save and load?<br>\nAlso does this save positions on map for objects? And do i make 'saveloadatts' Attribute in every object I want to save? Sorry for so many questions just really want to use this function :)</p>\n<p>Thanks Again for everything Pixie really awesome stuff you do for us.</p>\n<p>Mike</p>\n\n",
      "PostDate": "2016-09-15T22:39:17.7114332Z",
      "LastEditDate": "2016-09-15T22:44:41.3066247Z"
    }
  ]
}
