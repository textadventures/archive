{
  "Topic": {
    "TopicId": "q9e7i3naskmtyxagbstd5g",
    "ForumId": "10",
    "Title": "Turn On/Off SAPI during Game?",
    "LastUpdated": "2017-12-27T13:40:54.3346693Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "a77bd416-83d8-4586-b5e2-3f36adca3d65",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "On the Menu bar, under Tools --> Options... --> checkbox \"Speak all text (via SAPI)\", you can turn a computer voice on/off.  Is there a way to run a script to do this during the game?  Would be a cool sound effect...",
      "EditableFormat": "markdown",
      "HTML": "<p>On the Menu bar, under Tools --&gt; Options... --&gt; checkbox \"Speak all text (via SAPI)\", you can turn a computer voice on/off.  Is there a way to run a script to do this during the game?  Would be a cool sound effect...</p>\n\n",
      "PostDate": "2017-12-27T13:40:54.3346693Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "304edacd-bc47-4ff8-bdbb-9712639ac5af",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "oh wow, quest can use the Speech-API too?! That's so cool! I don't know much of computer-system/microsoft stuff, but I found code to just access the Speech-API, to get your computer to 'talk', hehe.\r\n\r\n(If you understand/know more about the Speech-API, I would love some help in learning more in how to use it and etc!)",
      "EditableFormat": "markdown",
      "HTML": "<p>oh wow, quest can use the Speech-API too?! That's so cool! I don't know much of computer-system/microsoft stuff, but I found code to just access the Speech-API, to get your computer to 'talk', hehe.</p>\n<p>(If you understand/know more about the Speech-API, I would love some help in learning more in how to use it and etc!)</p>\n\n",
      "PostDate": "2017-12-27T19:40:34.9726453Z",
      "LastEditDate": "2017-12-27T19:45:18.1094807Z",
      "link": null
    },
    {
      "PostId": "c9c74aef-74a6-4693-9b86-1ab9baf2401a",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Te0Y5FPb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't think the game itself even knows if that feature is being used or not.\r\n\r\n(I tried to figure this out once before, but I didn't try very hard, so, I may be mistaken.)",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't think the game itself even knows if that feature is being used or not.</p>\n<p>(I tried to figure this out once before, but I didn't try very hard, so, I may be mistaken.)</p>\n\n",
      "PostDate": "2017-12-27T19:48:22.3686352Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b59a651c-7ebe-4fca-80cb-f76b6c2042d8",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Te0Y5FPb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm trying to make speak.js work, but ```speakWorker``` and ```importScripts``` don't seem to work correctly because they need to import files from the local drive, which I don't believe is going to happen unless I wrap all this in ```JS.eval()``` or come up with some funky ```ASLEvent``` which allows me to use ```GetFileURL```...\r\n\r\n\r\n---\r\n\r\nI changed the script so ```speakWorker``` equaled the ```onmessage()``` function from the file from which the script was trying to read (speakWorker.js), but that threw an error about ```postMessage()``` being undefined, which is where I am currently stuck.\r\n\r\nI added the script from speakWorker.js to speakClient.js, and that didn't seem to effect anything.\r\n\r\nNOTE:  I have all three JS files included as Javascript files in one test game, and I have a separate game with the files in the game's folder, which uses the HTML \\<script> method, but neither one works in the desktop player (at the moment) for me.\r\n\r\nhttps://github.com/kripken/speak.js\r\n\r\nhttps://github.com/kripken/speak.js/blob/master/README.markdown\r\n\r\n---\r\nOne problem (I think):\r\n\r\n```\r\nspeakWorker = new Worker('speakWorker.js');\r\n```\r\n\r\n\r\nThe other problem (I think):\r\n```\r\nimportScripts('speakGenerator.js');\r\n```\r\n\r\n---\r\nIf this could be modified to work, you could just enter ```JS.speak('Hello, Quest Forum!')``` (or whatever else you wanted to 'say').",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm trying to make speak.js work, but <code>speakWorker</code> and <code>importScripts</code> don't seem to work correctly because they need to import files from the local drive, which I don't believe is going to happen unless I wrap all this in <code>JS.eval()</code> or come up with some funky <code>ASLEvent</code> which allows me to use <code>GetFileURL</code>...</p>\n<hr>\n<p>I changed the script so <code>speakWorker</code> equaled the <code>onmessage()</code> function from the file from which the script was trying to read (speakWorker.js), but that threw an error about <code>postMessage()</code> being undefined, which is where I am currently stuck.</p>\n<p>I added the script from speakWorker.js to speakClient.js, and that didn't seem to effect anything.</p>\n<p>NOTE:  I have all three JS files included as Javascript files in one test game, and I have a separate game with the files in the game's folder, which uses the HTML &lt;script&gt; method, but neither one works in the desktop player (at the moment) for me.</p>\n<p>https://github.com/kripken/speak.js</p>\n<p>https://github.com/kripken/speak.js/blob/master/README.markdown</p>\n<hr>\n<p>One problem (I think):</p>\n<pre><code>speakWorker = new Worker('speakWorker.js');\n</code></pre>\n<p>The other problem (I think):</p>\n<pre><code>importScripts('speakGenerator.js');\n</code></pre>\n<hr>\n<p>If this could be modified to work, you could just enter <code>JS.speak('Hello, Quest Forum!')</code> (or whatever else you wanted to 'say').</p>\n\n",
      "PostDate": "2017-12-27T21:02:31.513766Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a50c430d-96bb-4fca-91e3-f0e7728be298",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Te0Y5FPb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Dirty tricks + speak.js + Lots of free time = http://textadventures.co.uk/games/view/bwilf7iehecgchbiixexwq/speaking-with-js\r\n\r\n---\r\nIt doesn't really turn on SAPI, but it reads whatever I tell it to read in a similar voice.\r\n\r\n[REQUIRES AN INTERNET CONNECTION, BUT \"WORKS\" IN EITHER WEB OR DESKTOP PLAYER.]\r\n\r\n---\r\nEDIT\r\n\r\nOkay... This is extremely dirty.\r\n\r\nI made an .html file:\r\n\r\n\r\n**index.html**\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<script src=\"speakClient.js\"></script>\r\n</head>\r\n<body>\r\n\r\n<div id=\"audio\"></div>\r\n\r\n<script>\r\nspeak(\"Greetings, Adventurer!  Welcome to the game!  You can enter HELP if you require assistance!\"); \r\n</script>\r\n</body>\r\n</html>\r\n```\r\n\r\n---\r\nI zipped it up along with speakClient.js, speakGenerator.js, and Worker.js, which I downloaded from the link to speak.js in the above post.  Then, I submitted that zipped file as a game.\r\n\r\n---\r\nThen, I made this game:\r\n\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Speaking with JS\">\r\n    <gameid>9d039dd2-2842-4221-bb28-0f396a5a37dc</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <description type=\"script\"><![CDATA[\r\n      msg (\"<iframe id='speakDiv' width='0' height='0' src='http://media.textadventures.co.uk/games/2wHZlJ6i-kWuIdZek09HfA/index.html'></iframe>\")\r\n      JS.eval (\"$('#speakDiv').hide();\")\r\n      msg (\"You should hear the voice in a few moments.  (It won't read the text from the screen.  ...but, it might later, after a little work.)\")\r\n    ]]></description>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n--- \r\nNow, I must learn how to modify those JS scripts so all required functions are accessible without importing files.  That way, it won't be dependent upon the uploaded HTML 'game'.\r\n\r\n(Anyone suggestions?)\r\n\r\n---\r\n\r\nI shall return.",
      "EditableFormat": "markdown",
      "HTML": "<p>Dirty tricks + speak.js + Lots of free time = http://textadventures.co.uk/games/view/bwilf7iehecgchbiixexwq/speaking-with-js</p>\n<hr>\n<p>It doesn't really turn on SAPI, but it reads whatever I tell it to read in a similar voice.</p>\n<p>[REQUIRES AN INTERNET CONNECTION, BUT \"WORKS\" IN EITHER WEB OR DESKTOP PLAYER.]</p>\n<hr>\n<p>EDIT</p>\n<p>Okay... This is extremely dirty.</p>\n<p>I made an .html file:</p>\n<p><strong>index.html</strong></p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;script src=\"speakClient.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;div id=\"audio\"&gt;&lt;/div&gt;\n\n&lt;script&gt;\nspeak(\"Greetings, Adventurer!  Welcome to the game!  You can enter HELP if you require assistance!\"); \n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<hr>\n<p>I zipped it up along with speakClient.js, speakGenerator.js, and Worker.js, which I downloaded from the link to speak.js in the above post.  Then, I submitted that zipped file as a game.</p>\n<hr>\n<p>Then, I made this game:</p>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Speaking with JS\"&gt;\n    &lt;gameid&gt;9d039dd2-2842-4221-bb28-0f396a5a37dc&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description type=\"script\"&gt;&lt;![CDATA[\n      msg (\"&lt;iframe id='speakDiv' width='0' height='0' src='http://media.textadventures.co.uk/games/2wHZlJ6i-kWuIdZek09HfA/index.html'&gt;&lt;/iframe&gt;\")\n      JS.eval (\"$('#speakDiv').hide();\")\n      msg (\"You should hear the voice in a few moments.  (It won't read the text from the screen.  ...but, it might later, after a little work.)\")\n    ]]&gt;&lt;/description&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p>Now, I must learn how to modify those JS scripts so all required functions are accessible without importing files.  That way, it won't be dependent upon the uploaded HTML 'game'.</p>\n<p>(Anyone suggestions?)</p>\n<hr>\n<p>I shall return.</p>\n\n",
      "PostDate": "2017-12-27T21:40:10.9484735Z",
      "LastEditDate": "2017-12-27T22:12:42.2531475Z",
      "link": null
    },
    {
      "PostId": "1c30f23d-143d-4b6a-8dbe-160948baa21f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Te0Y5FPb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You can open up Audacity (which can be found [here](https://www.audacityteam.org/)) and switch **Windows WASAPI** to ```Speakers``` to record whatever your PC is putting out.\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/34395976-f3c86624-eb2a-11e7-8710-f3023e16eb73.png)\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/34395979-faf7acf2-eb2a-11e7-9670-ae7cb438a43a.png)\r\n\r\n---\r\nSo, I hit \"RECORD\" on that, then opened my web page.  Now, I have the audio file of the text being read by speak.js, which I can include in the game and bypass the extra web page.\r\n\r\n---\r\nI'm still working on getting the JS to work in the game.\r\n\r\nI don't believe the problem is insurmountable.\r\n\r\n---\r\nIs this sort of answering the question, or have I gotten too far off track?  (It's cool with me either way.  I'm just making sure I'm not cluttering up the thread with things which aren't helpful.  (Hehehe.))\r\n\r\nAre you wanting a computer voice to read exactly what you tell it to read (be it room descriptions or whatever else you decide)?  Or are you wanting to actually switch SAPI on and off during play?",
      "EditableFormat": "markdown",
      "HTML": "<p>You can open up Audacity (which can be found <a href=\"https://www.audacityteam.org/\">here</a>) and switch <strong>Windows WASAPI</strong> to <code>Speakers</code> to record whatever your PC is putting out.</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/34395976-f3c86624-eb2a-11e7-8710-f3023e16eb73.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/34395979-faf7acf2-eb2a-11e7-9670-ae7cb438a43a.png\" alt=\"image\"></p>\n<hr>\n<p>So, I hit \"RECORD\" on that, then opened my web page.  Now, I have the audio file of the text being read by speak.js, which I can include in the game and bypass the extra web page.</p>\n<hr>\n<p>I'm still working on getting the JS to work in the game.</p>\n<p>I don't believe the problem is insurmountable.</p>\n<hr>\n<p>Is this sort of answering the question, or have I gotten too far off track?  (It's cool with me either way.  I'm just making sure I'm not cluttering up the thread with things which aren't helpful.  (Hehehe.))</p>\n<p>Are you wanting a computer voice to read exactly what you tell it to read (be it room descriptions or whatever else you decide)?  Or are you wanting to actually switch SAPI on and off during play?</p>\n\n",
      "PostDate": "2017-12-27T23:34:06.3335563Z",
      "LastEditDate": "2017-12-27T23:34:51.9388334Z",
      "link": null
    },
    {
      "PostId": "3b40b8e9-3e1d-4e26-ad08-a9b0830a36e1",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you again, KV, for all your experimenting.  It's hard for me to reply as I'm just trying to understand what you're doing.  I didn't need to actually turn SAPI on/off; I just wanted a computer voice to speak the text that I wanted.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you again, KV, for all your experimenting.  It's hard for me to reply as I'm just trying to understand what you're doing.  I didn't need to actually turn SAPI on/off; I just wanted a computer voice to speak the text that I wanted.</p>\n\n",
      "PostDate": "2017-12-28T02:05:08.1849267Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "88313e0d-c1fd-4ae1-a0d6-db79fadff81a",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Te0Y5FPb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh, okay.  We're rockin' and rollin', then.\r\n\r\n..and it's no problem, really.  I like to help (and to learn), so it's all gravy!\r\n\r\n---\r\nI'm trying to understand what I'm doing, too!  (Ha-ha! )\r\n\r\n- speak.js is a thing someone else created, which is available from GitHub\r\n\r\n- We can include JS files in Quest, just like libraries, but things don't quite work right sometimes.\r\n    - This is one of those times, of course.\r\n\r\n- If the speak.js functions all worked properly, we could just put ```JS.speak(\"Welcome to the game, Adventurer!\")```, and the SAPI voice would say that.\r\n\r\n- I couldn't get it to work inside a Quest game, so I opened up Notepad++ and created an .html file (posted above), which includes the .js files required for speak.js (the ones that Quest doesn't like).  This HTML page calls ```speak('Greetings, Adventurer!  Blah, blah, blah...')```.  When the page loads, the SAPI voice reads the dialog.\r\n\r\n- I named that HTML file **index.html**, then I zipped it up with the three required .js files from speak.js.\r\n\r\n- I uploaded *that* zipped file to this site as a game.  (It's only a web page that 'reads' my dialog in the SAPI voice.)\r\n\r\n- I created an actual Quest game, with an iframe element, the source of which is the HTML game's URL, which I just got when I submitted that zip file.\r\n\r\n- I used JS in Quest to hide the iframe element, but the sound still plays.\r\n\r\n---\r\n#### Later, I decided to bypass the extra \"game\" with the audio to keep from depending upon an external web page.\r\n\r\n- I opened Audacity and switched the recording device from the system's microphone to the system's speakers.\r\n\r\n- I pressed RECORD in Audacity and opened up the HTML page, which read the text aloud in the SAPI voice.\r\n\r\n- I flipped back to Audacity and exported the audio file as an .ogg, named sapi_dialog1.ogg.\r\n\r\n- Now, I can just play this file instead of using an iframe, and there's no need to link to an external webpage.\r\n\r\n---\r\n**NOTES:**\r\n\r\n- I haven't uploaded the version that uses the .ogg.  What's online still has the iframe which loads an external page for the sound.\r\n\r\n- I still plan to make the JS work inside of Quest, so we can just enter ```speak(\"BWAHAHAHAHA!  The princess is in another castle!\")```.\r\n\r\n- What I think the problem is:\r\n    - Two of the JS files import each other (or something).  One of them does it as a Worker (which is a process I'm not familiar with).\r\n     - I assume this is just like including the JS file in the script in an HTML file, but I don't know how to just skip the importing and set the variable to the contents of the file it's importing in JS.\r\n\r\n---\r\nUsually typing things out forces me to get a better grasp on what it is I'm doing, but not this time.  (Sorry.  Hehehe.)",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh, okay.  We're rockin' and rollin', then.</p>\n<p>..and it's no problem, really.  I like to help (and to learn), so it's all gravy!</p>\n<hr>\n<p>I'm trying to understand what I'm doing, too!  (Ha-ha! )</p>\n<ul>\n<li>\n<p>speak.js is a thing someone else created, which is available from GitHub</p>\n</li>\n<li>\n<p>We can include JS files in Quest, just like libraries, but things don't quite work right sometimes.</p>\n<ul>\n<li>This is one of those times, of course.</li>\n</ul>\n</li>\n<li>\n<p>If the speak.js functions all worked properly, we could just put <code>JS.speak(\"Welcome to the game, Adventurer!\")</code>, and the SAPI voice would say that.</p>\n</li>\n<li>\n<p>I couldn't get it to work inside a Quest game, so I opened up Notepad++ and created an .html file (posted above), which includes the .js files required for speak.js (the ones that Quest doesn't like).  This HTML page calls <code>speak('Greetings, Adventurer! Blah, blah, blah...')</code>.  When the page loads, the SAPI voice reads the dialog.</p>\n</li>\n<li>\n<p>I named that HTML file <strong>index.html</strong>, then I zipped it up with the three required .js files from speak.js.</p>\n</li>\n<li>\n<p>I uploaded <em>that</em> zipped file to this site as a game.  (It's only a web page that 'reads' my dialog in the SAPI voice.)</p>\n</li>\n<li>\n<p>I created an actual Quest game, with an iframe element, the source of which is the HTML game's URL, which I just got when I submitted that zip file.</p>\n</li>\n<li>\n<p>I used JS in Quest to hide the iframe element, but the sound still plays.</p>\n</li>\n</ul>\n<hr>\n<h4>Later, I decided to bypass the extra \"game\" with the audio to keep from depending upon an external web page.</h4>\n<ul>\n<li>\n<p>I opened Audacity and switched the recording device from the system's microphone to the system's speakers.</p>\n</li>\n<li>\n<p>I pressed RECORD in Audacity and opened up the HTML page, which read the text aloud in the SAPI voice.</p>\n</li>\n<li>\n<p>I flipped back to Audacity and exported the audio file as an .ogg, named sapi_dialog1.ogg.</p>\n</li>\n<li>\n<p>Now, I can just play this file instead of using an iframe, and there's no need to link to an external webpage.</p>\n</li>\n</ul>\n<hr>\n<p><strong>NOTES:</strong></p>\n<ul>\n<li>\n<p>I haven't uploaded the version that uses the .ogg.  What's online still has the iframe which loads an external page for the sound.</p>\n</li>\n<li>\n<p>I still plan to make the JS work inside of Quest, so we can just enter <code>speak(\"BWAHAHAHAHA! The princess is in another castle!\")</code>.</p>\n</li>\n<li>\n<p>What I think the problem is:</p>\n<ul>\n<li>Two of the JS files import each other (or something).  One of them does it as a Worker (which is a process I'm not familiar with).</li>\n<li>I assume this is just like including the JS file in the script in an HTML file, but I don't know how to just skip the importing and set the variable to the contents of the file it's importing in JS.</li>\n</ul>\n</li>\n</ul>\n<hr>\n<p>Usually typing things out forces me to get a better grasp on what it is I'm doing, but not this time.  (Sorry.  Hehehe.)</p>\n\n",
      "PostDate": "2017-12-28T02:55:54.2454445Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1da4a256-1fae-4827-98af-dd649f746bdf",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is a great synopsis of what you just did, and very understandable to a layperson such as myself.  Thanks for your efforts.  I guess my initial question was if there was an \"easy\" way to have the computer voice in a game, the answer being \"no\" (haha).",
      "EditableFormat": "markdown",
      "HTML": "<p>This is a great synopsis of what you just did, and very understandable to a layperson such as myself.  Thanks for your efforts.  I guess my initial question was if there was an \"easy\" way to have the computer voice in a game, the answer being \"no\" (haha).</p>\n\n",
      "PostDate": "2017-12-29T00:00:19.9390039Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
