{
  "Topic": {
    "TopicId": "0x4f8qb4wu2opx_qhyr5gg",
    "ForumId": "10",
    "Title": "Adding a script fragment to an existing script",
    "LastUpdated": "2017-10-10T02:01:02.2524183Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "fd9124ac-4f4b-4f6c-9baf-7734ba9df3ef",
      "UserId": 313914,
      "Username": "SoonGames",
      "AvatarUrl": "https://i.imgur.com/hvzLt5Qb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi community.\r\n\r\nIs there a way to add something to a script fragment, such as object.changedparent? Like a variable:\r\n\r\nstring = string + \"Contents\"\r\n\r\nscript = script + => Addscript\r\nobject. changedparent = object. changedparent + => Script\r\n\r\nsalutation\r\nSoonGames",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi community.</p>\n<p>Is there a way to add something to a script fragment, such as object.changedparent? Like a variable:</p>\n<p>string = string + \"Contents\"</p>\n<p>script = script + =&gt; Addscript<br>\nobject. changedparent = object. changedparent + =&gt; Script</p>\n<p>salutation<br>\nSoonGames</p>\n\n",
      "PostDate": "2017-10-10T02:01:02.2524183Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "685ca323-596a-44ba-afda-be92f2da55c1",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post. updated/posted)\r\n\r\n------------\r\n\r\n(finally a topic that I can help with pretty well, for once, hehe)\r\n\r\nyes, it involves using 'Delegates', here's documentation:\r\n\r\nhttp://docs.textadventures.co.uk/quest/types/using_delegates.html\r\nhttps://docs.textadventures.co.uk/quest/elements/delegate.html\r\nhttp://docs.textadventures.co.uk/quest/scripts/rundelegate.html\r\nhttp://docs.textadventures.co.uk/quest/functions/rundelegatefunction.html\r\nhttp://docs.textadventures.co.uk/quest/functions/hasdelegateimplementation.html\r\n\r\n(after I learned how delegates work... I now hardly ever use Functions, as I like working with Objects for encapsulation and organization, hehe)\r\n\r\n---------\r\n\r\nbasically a delegate is like a 'prototype' but for Script Attributes instead of functions\r\n\r\nand the delegate enables a Script Attribute to have the same functionality as a Function (parameters and/or returning a value)\r\n\r\n-----\r\n\r\nhere's an example of it:\r\n\r\n(this is using an Integer Parameter VARIABLE, but you can use an Object Parameter VARIABLE, for what you want to do in your OP, or any of the Data/Attribute Types: Strings/Doubles/Booleans/Lists/Dictionaries/Integers/Objects, just like with a Function)\r\n\r\n```\r\n<include ref=\"English.aslx\" />\r\n<include ref=\"Core.aslx\" />\r\n\r\n<!--\r\nThis is a good location for Delegates, to ensure they get compiled first, so you can then use them (without/no errors):\r\n-->\r\n\r\n<delegate name=\"two_integers_and_return_delegate\" type=\"int\" parameters=\"integer_parameter_1, integer_parameter_2\" />\r\n\r\n<!--\r\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r\n-->\r\n\r\n<game name=\"example_game\">\r\n  <attr name=\"start\" type=\"script\">\r\n    msg (\"Addition Result: \" + addition_script_attribute (5, 10))\r\n    msg (\"Multiplication Result: \" + multiplication_script_attribute (5, 10))\r\n  </attr>\r\n  <attr name=\"addition_script_attribute\" type=\"two_integers_and_return_delegate\">\r\n    return (integer_parameter_1 + integer_parameter_2)\r\n  </attr>\r\n  <attr name=\"multiplication_script_attribute\" type=\"two_integers_and_return_delegate\">\r\n    return (integer_parameter_1 * integer_parameter_2)\r\n  </attr>\r\n</game>\r\n\r\n// output/results:\r\nAddition Result: 15\r\nMultiplication Result: 50\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post. updated/posted)</p>\n<hr>\n<p>(finally a topic that I can help with pretty well, for once, hehe)</p>\n<p>yes, it involves using 'Delegates', here's documentation:</p>\n<p>http://docs.textadventures.co.uk/quest/types/using_delegates.html<br>\nhttps://docs.textadventures.co.uk/quest/elements/delegate.html<br>\nhttp://docs.textadventures.co.uk/quest/scripts/rundelegate.html<br>\nhttp://docs.textadventures.co.uk/quest/functions/rundelegatefunction.html<br>\nhttp://docs.textadventures.co.uk/quest/functions/hasdelegateimplementation.html</p>\n<p>(after I learned how delegates work... I now hardly ever use Functions, as I like working with Objects for encapsulation and organization, hehe)</p>\n<hr>\n<p>basically a delegate is like a 'prototype' but for Script Attributes instead of functions</p>\n<p>and the delegate enables a Script Attribute to have the same functionality as a Function (parameters and/or returning a value)</p>\n<hr>\n<p>here's an example of it:</p>\n<p>(this is using an Integer Parameter VARIABLE, but you can use an Object Parameter VARIABLE, for what you want to do in your OP, or any of the Data/Attribute Types: Strings/Doubles/Booleans/Lists/Dictionaries/Integers/Objects, just like with a Function)</p>\n<pre><code>&lt;include ref=\"English.aslx\" /&gt;\n&lt;include ref=\"Core.aslx\" /&gt;\n\n&lt;!--\nThis is a good location for Delegates, to ensure they get compiled first, so you can then use them (without/no errors):\n--&gt;\n\n&lt;delegate name=\"two_integers_and_return_delegate\" type=\"int\" parameters=\"integer_parameter_1, integer_parameter_2\" /&gt;\n\n&lt;!--\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n--&gt;\n\n&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    msg (\"Addition Result: \" + addition_script_attribute (5, 10))\n    msg (\"Multiplication Result: \" + multiplication_script_attribute (5, 10))\n  &lt;/attr&gt;\n  &lt;attr name=\"addition_script_attribute\" type=\"two_integers_and_return_delegate\"&gt;\n    return (integer_parameter_1 + integer_parameter_2)\n  &lt;/attr&gt;\n  &lt;attr name=\"multiplication_script_attribute\" type=\"two_integers_and_return_delegate\"&gt;\n    return (integer_parameter_1 * integer_parameter_2)\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n// output/results:\nAddition Result: 15\nMultiplication Result: 50\n</code></pre>\n\n",
      "PostDate": "2017-10-10T02:22:43.6327964Z",
      "LastEditDate": "2017-10-10T02:33:16.3297269Z",
      "link": null
    },
    {
      "PostId": "4ee994e5-59b3-40b4-8bc8-fbf7f0715b04",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "yes, you can do concatenation:\r\n\r\n(simple/quick example)\r\n\r\n```\r\nstring_variable = \"Hi\"\r\nstring_variable = string_variable + \", my name is HK\"\r\nmsg (string_variable)\r\n\r\n// output/result:\r\n\r\nHi, my name is HK\r\n```\r\n\r\n------------------------------\r\n\r\nyou can also use the 'set' Function:\r\n\r\n```\r\nstring_variable = \"Khan\"\r\nset (player, \"alias\", \"Hegemon\" + string_variable)\r\nmsg (player.alias)\r\n\r\n// output/results:\r\n\r\nHegemonKhan\r\n```\r\n\r\n-----------\r\n\r\nfor scripting / script Attributes, you can use the 'do' Function for doing concatenation:\r\n\r\n(just a quick example)\r\n\r\n```\r\n// Thanks KV for the correction (was missing the curly braces):\r\n\r\njoe.run_laps_script_attribute => { msg (this.name + \" runs laps\") }\r\njim.run_laps_script_attribute => { msg (this.name + \" runs laps\") }\r\n\r\ngame.my_objectlist_attribute = NewObjectList ()\r\nlist add (game.my_objectlist_attribute, joe)\r\nlist add (game.my_objectlist_attribute, jim)\r\n\r\nstring_variable = \"run_laps\"\r\n\r\nforeach (object_variable, game.my_objectlist_attribute) {\r\n  do (object_variable, string_variable + \"_script_attribute\")\r\n}\r\n\r\n// output/results:\r\njoe runs laps\r\njim runs laps\r\n```\r\n\r\n----------\r\n\r\nbut I'm not sure about the 'Script Attribute' stuff... hopefully someone else can help with it...",
      "EditableFormat": "markdown",
      "HTML": "<p>yes, you can do concatenation:</p>\n<p>(simple/quick example)</p>\n<pre><code>string_variable = \"Hi\"\nstring_variable = string_variable + \", my name is HK\"\nmsg (string_variable)\n\n// output/result:\n\nHi, my name is HK\n</code></pre>\n<hr>\n<p>you can also use the 'set' Function:</p>\n<pre><code>string_variable = \"Khan\"\nset (player, \"alias\", \"Hegemon\" + string_variable)\nmsg (player.alias)\n\n// output/results:\n\nHegemonKhan\n</code></pre>\n<hr>\n<p>for scripting / script Attributes, you can use the 'do' Function for doing concatenation:</p>\n<p>(just a quick example)</p>\n<pre><code>// Thanks KV for the correction (was missing the curly braces):\n\njoe.run_laps_script_attribute =&gt; { msg (this.name + \" runs laps\") }\njim.run_laps_script_attribute =&gt; { msg (this.name + \" runs laps\") }\n\ngame.my_objectlist_attribute = NewObjectList ()\nlist add (game.my_objectlist_attribute, joe)\nlist add (game.my_objectlist_attribute, jim)\n\nstring_variable = \"run_laps\"\n\nforeach (object_variable, game.my_objectlist_attribute) {\n  do (object_variable, string_variable + \"_script_attribute\")\n}\n\n// output/results:\njoe runs laps\njim runs laps\n</code></pre>\n<hr>\n<p>but I'm not sure about the 'Script Attribute' stuff... hopefully someone else can help with it...</p>\n\n",
      "PostDate": "2017-10-10T02:39:08.4764223Z",
      "LastEditDate": "2017-10-10T04:31:02.7205259Z",
      "link": null
    },
    {
      "PostId": "c870ac69-f5c9-424e-ba20-e05d93eda1b4",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I know you can make a script like this:\r\n\r\n```\r\ngame.myScript => {\r\n  ClearScreen\r\n  msg (\"Blah, blah, blah...\")\r\n}\r\n```\r\n\r\nThen, you can:\r\n\r\n```myOldScript = game.myScript```\r\n\r\n...but I don't know if you can add on to the script like you can a string.",
      "EditableFormat": "markdown",
      "HTML": "<p>I know you can make a script like this:</p>\n<pre><code>game.myScript =&gt; {\n  ClearScreen\n  msg (\"Blah, blah, blah...\")\n}\n</code></pre>\n<p>Then, you can:</p>\n<p><code>myOldScript = game.myScript</code></p>\n<p>...but I don't know if you can add on to the script like you can a string.</p>\n\n",
      "PostDate": "2017-10-10T03:12:31.0796659Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "26730d7c-057f-42d0-9bd6-ef497a4c9ee3",
      "UserId": 924,
      "Username": "Pertex",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4cc1e52f99452e841ecf4cbee9eadde9?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You want to create scripts at runtime? Uuuu... A cold shiver runs down my spine. :-)",
      "EditableFormat": "markdown",
      "HTML": "<p>You want to create scripts at runtime? Uuuu... A cold shiver runs down my spine. :-)</p>\n\n",
      "PostDate": "2017-10-10T06:12:53.9772685Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "98ec34ba-67c9-44e2-a69b-88dd5ef19b01",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you just want to add something to the default script, it'd be easier to copy the default script into your code.\r\nOr `this.oldchangedparent = this.changedparent`, and then set a new script which does `do (this, \"oldchangedparent\")` at the end.\r\n\r\nIf you might be adding multiple scripts, here's a way to do it…\r\n(warning: this is massive overkill for anything you are really likely to want)\r\n```\r\nif (not HasAttribute(this, \"listchangedparent\")) {\r\n  this.listchangedparent = NewList()\r\n  if (HasScript(this, \"changedparent\")) {\r\n    list add (this.listchangedparent, this.changedparent)\r\n  }\r\n  this.changedparent => {\r\n    parameters = NewDictionary()\r\n    if (IsDefined(\"oldvalue\")) {\r\n      dictionary add (parameters, \"oldvalue\", oldvalue)\r\n    }\r\n    for (i, 0, ListCount(this.listchangedparent)-1) {\r\n      set (this, \"scriptpart_changedparent\"+i, ListItem(this.listchangedparent, i))\r\n      do (this, \"scriptpart_changedparent\"+i, parameters)\r\n    }\r\n  }\r\n}\r\nnewscript => {\r\n  // Script you want to add goes here\r\n}\r\nlist add (this.listchangedparent, newscript)\r\n```\r\n\r\n(In the past I've looped over a list of scripts calling them with `invoke`; in this case it's probably easier to add them to numbered script attributes so that they can all use `this` normally. But it's easier to add/remove/check-existence for lists, so easier to keep them in a list and then map onto the numbered attributes when they're needed)",
      "EditableFormat": "markdown",
      "HTML": "<p>If you just want to add something to the default script, it'd be easier to copy the default script into your code.<br>\nOr <code>this.oldchangedparent = this.changedparent</code>, and then set a new script which does <code>do (this, \"oldchangedparent\")</code> at the end.</p>\n<p>If you might be adding multiple scripts, here's a way to do it…<br>\n(warning: this is massive overkill for anything you are really likely to want)</p>\n<pre><code>if (not HasAttribute(this, \"listchangedparent\")) {\n  this.listchangedparent = NewList()\n  if (HasScript(this, \"changedparent\")) {\n    list add (this.listchangedparent, this.changedparent)\n  }\n  this.changedparent =&gt; {\n    parameters = NewDictionary()\n    if (IsDefined(\"oldvalue\")) {\n      dictionary add (parameters, \"oldvalue\", oldvalue)\n    }\n    for (i, 0, ListCount(this.listchangedparent)-1) {\n      set (this, \"scriptpart_changedparent\"+i, ListItem(this.listchangedparent, i))\n      do (this, \"scriptpart_changedparent\"+i, parameters)\n    }\n  }\n}\nnewscript =&gt; {\n  // Script you want to add goes here\n}\nlist add (this.listchangedparent, newscript)\n</code></pre>\n<p>(In the past I've looped over a list of scripts calling them with <code>invoke</code>; in this case it's probably easier to add them to numbered script attributes so that they can all use <code>this</code> normally. But it's easier to add/remove/check-existence for lists, so easier to keep them in a list and then map onto the numbered attributes when they're needed)</p>\n\n",
      "PostDate": "2017-10-10T08:38:06.1072988Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
