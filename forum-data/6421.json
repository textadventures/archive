{
  "Topic": {
    "TopicId": "6421",
    "ForumId": "5",
    "Title": "ResponsIF",
    "LastUpdated": "2016-06-19T17:21:42+01:00",
    "ReplyCount": 21
  },
  "Posts": [
    {
      "PostId": "43446",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "This isn't a game as such, but I hope this sort of announcement is ok as well.\n\nFor the past year and a half, I've been working on a JavaScript version of the original Quest &quot;Response Library&quot;, but as a standalone SDK. I feel it's to a point now where people can look at it without running away in terror (though that might still be a reaction). It doesn't have a complete game worked up yet, and I haven't proven all the things I want to prove are possible with it yet, and it doesn't include some key features like being able to save and reload a game in progress. But it's in a form where people can look at it and see if it seems interesting.\n\nIt's available from github:\n<!-- m --><a class=\"postlink\" href=\"https://github.com/jaynabonne/responsif\">https://github.com/jaynabonne/responsif</a><!-- m -->\n\nThere is a doc folder with two PDFs: a &quot;user's guide&quot; ([url:21gwv649]https&#58;//github&#46;com/jaynabonne/responsif/blob/master/doc/ResponsIF%20User's%20Guide&#46;pdf[/url:21gwv649]) and a &quot;phrase book&quot; ([url:21gwv649]https&#58;//github&#46;com/jaynabonne/responsif/blob/master/doc/ResponsIF%20Riff%20Phrase%20Book&#46;pdf[/url:21gwv649]). The concepts in the former might help make sense of the latter. You don't have to download the repo to look at the docs. You can click on them directly or download them individually.\n\nIf you do wish to try it out, just clone the repository or download it as a zip. Once it's local, you should be able to open the samples with a browser (Chrome has problems, though, in that it can't deal with local files without a command line switch. I have successfully used Internet Explorer, Firefox and Opera. I've had to set up a local node http server to use Chrome.)\n\nThe Meek sample and the samples in the &quot;sample&quot; folder all have the same structure: a main index.html file and style sheet, with the actual ResponsIF source file(s) in the &quot;data&quot; folder. Double-click the index.html to launch it. (The Meek sample is the game I've been using to drive the development. It's barely beyond the &quot;started&quot; phase, with a title screen and some initial interactions. There are lots of holes and things to be fleshed out. But it might give a feel.)\n\nNot all of the samples are polished. They were mostly experiments I made when working on features to make sure they worked, and I enshrined them as samples, as they seemed potentially of interest. They should be good to look at to see how things can work, but they're not terribly exciting.\n\nUnfortunately, for now, you have to create riffs using a text editor. I don't have a GUI front-end for it, yet. I hope to someday, but it's not a reality yet.\n\nIt's suited more for CYOA/gamebook/hyperlink games as it stands, though you could slap a parser on the front if you wish.\n\nTo make your own riffs, you can copy a sample and edit it. (Since it has references to the JavaScript files, it might be easiest to keep any such tries in the sample folder. Ask if you need to package it up separately.)\n\nIf you wish to publish to the internet, you can zip up your folder along with the JS files and then upload it to the textadventures site. You would have to get it in the right structure to do that. If you happen to get that far along and you have trouble (high class problems), let me know, and I'll be more than happy to help. But that's down the road a bit, I assume...\n\nAt any rate, if you're curious check it out. The docs might be interesting even if you never actually try it out.\n\nAnd it's free!",
      "EditableFormat": "bbcode",
      "HTML": "This isn't a game as such, but I hope this sort of announcement is ok as well.<br/><br/>For the past year and a half, I've been working on a JavaScript version of the original Quest &quot;Response Library&quot;, but as a standalone SDK. I feel it's to a point now where people can look at it without running away in terror (though that might still be a reaction). It doesn't have a complete game worked up yet, and I haven't proven all the things I want to prove are possible with it yet, and it doesn't include some key features like being able to save and reload a game in progress. But it's in a form where people can look at it and see if it seems interesting.<br/><br/>It's available from github:<br/><!-- m --><a class=\"postlink\" href=\"https://github.com/jaynabonne/responsif\">https://github.com/jaynabonne/responsif</a><!-- m --><br/><br/>There is a doc folder with two PDFs: a &quot;user's guide&quot; (<a href=\"https&#58;//github&#46;com/jaynabonne/responsif/blob/master/doc/ResponsIF%20User's%20Guide&#46;pdf\" rel=\"nofollow\">https&#58;//github&#46;com/jaynabonne/responsif/blob/master/doc/ResponsIF%20User's%20Guide&#46;pdf</a>) and a &quot;phrase book&quot; (<a href=\"https&#58;//github&#46;com/jaynabonne/responsif/blob/master/doc/ResponsIF%20Riff%20Phrase%20Book&#46;pdf\" rel=\"nofollow\">https&#58;//github&#46;com/jaynabonne/responsif/blob/master/doc/ResponsIF%20Riff%20Phrase%20Book&#46;pdf</a>). The concepts in the former might help make sense of the latter. You don't have to download the repo to look at the docs. You can click on them directly or download them individually.<br/><br/>If you do wish to try it out, just clone the repository or download it as a zip. Once it's local, you should be able to open the samples with a browser (Chrome has problems, though, in that it can't deal with local files without a command line switch. I have successfully used Internet Explorer, Firefox and Opera. I've had to set up a local node http server to use Chrome.)<br/><br/>The Meek sample and the samples in the &quot;sample&quot; folder all have the same structure: a main index.html file and style sheet, with the actual ResponsIF source file(s) in the &quot;data&quot; folder. Double-click the index.html to launch it. (The Meek sample is the game I've been using to drive the development. It's barely beyond the &quot;started&quot; phase, with a title screen and some initial interactions. There are lots of holes and things to be fleshed out. But it might give a feel.)<br/><br/>Not all of the samples are polished. They were mostly experiments I made when working on features to make sure they worked, and I enshrined them as samples, as they seemed potentially of interest. They should be good to look at to see how things can work, but they're not terribly exciting.<br/><br/>Unfortunately, for now, you have to create riffs using a text editor. I don't have a GUI front-end for it, yet. I hope to someday, but it's not a reality yet.<br/><br/>It's suited more for CYOA/gamebook/hyperlink games as it stands, though you could slap a parser on the front if you wish.<br/><br/>To make your own riffs, you can copy a sample and edit it. (Since it has references to the JavaScript files, it might be easiest to keep any such tries in the sample folder. Ask if you need to package it up separately.)<br/><br/>If you wish to publish to the internet, you can zip up your folder along with the JS files and then upload it to the textadventures site. You would have to get it in the right structure to do that. If you happen to get that far along and you have trouble (high class problems), let me know, and I'll be more than happy to help. But that's down the road a bit, I assume...<br/><br/>At any rate, if you're curious check it out. The docs might be interesting even if you never actually try it out.<br/><br/>And it's free!",
      "PostDate": "2016-06-14T20:19:22+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43447",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I also have the beginning of a blog of sorts, with random rumblings, some related to ResponsIF. In case anyone finds *that* interesting as well...\n\n<!-- m --><a class=\"postlink\" href=\"https://aniamosity.wordpress.com/\">https://aniamosity.wordpress.com/</a><!-- m -->\n\nOk, self-promotion done.",
      "EditableFormat": "bbcode",
      "HTML": "I also have the beginning of a blog of sorts, with random rumblings, some related to ResponsIF. In case anyone finds *that* interesting as well...<br/><br/><!-- m --><a class=\"postlink\" href=\"https://aniamosity.wordpress.com/\">https://aniamosity.wordpress.com/</a><!-- m --><br/><br/>Ok, self-promotion done.",
      "PostDate": "2016-06-14T20:30:04+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43448",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "One thing I need to mention is that how the world state gets set up has changed. Before there were immediate &quot;set&quot; and &quot;move&quot; phrases, which have been removed. There is now a general &quot;setup&quot; phrase, which the samples and the phrase book shows. The user's guide doc is out of date in that respect.",
      "EditableFormat": "bbcode",
      "HTML": "One thing I need to mention is that how the world state gets set up has changed. Before there were immediate &quot;set&quot; and &quot;move&quot; phrases, which have been removed. There is now a general &quot;setup&quot; phrase, which the samples and the phrase book shows. The user's guide doc is out of date in that respect.",
      "PostDate": "2016-06-14T20:47:13+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43452",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "[quote=&quot;jaynabonne&quot;:mkutuyup]I also have the beginning of a blog of sorts, with random rumblings, some related to ResponsIF. In case anyone finds *that* interesting as well...\n\n<!-- m --><a class=\"postlink\" href=\"https://aniamosity.wordpress.com/\">https://aniamosity.wordpress.com/</a><!-- m -->\n\nOk, self-promotion done.[/quote:mkutuyup]\n...Holy cow.  I think I understand what you intend to do, or more so what you already have been doing with ResponsIF.  I think the idea is fascinating, but unfortunately I have a hard time understanding the code that would drive this.  I think you intend on creating it and making it publicly available to use?  If I'm correct, I either hope I get to the point where I can understand it OR I hope you create it in a way that is really user-friendly!  Perhaps it will be both.\n\nIf you want I'd be glad to help in any way possible but keep it in the testing, game creation realm for now and away from the coding part of it!\n\nGood luck and keep me (us) updated!",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>I also have the beginning of a blog of sorts, with random rumblings, some related to ResponsIF. In case anyone finds *that* interesting as well...<br/><br/><!-- m --><a class=\"postlink\" href=\"https://aniamosity.wordpress.com/\">https://aniamosity.wordpress.com/</a><!-- m --><br/><br/>Ok, self-promotion done.</blockquote><br/>...Holy cow.  I think I understand what you intend to do, or more so what you already have been doing with ResponsIF.  I think the idea is fascinating, but unfortunately I have a hard time understanding the code that would drive this.  I think you intend on creating it and making it publicly available to use?  If I'm correct, I either hope I get to the point where I can understand it OR I hope you create it in a way that is really user-friendly!  Perhaps it will be both.<br/><br/>If you want I'd be glad to help in any way possible but keep it in the testing, game creation realm for now and away from the coding part of it!<br/><br/>Good luck and keep me (us) updated!",
      "PostDate": "2016-06-15T03:40:55+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43456",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Actually, I'm more interested in anyone willing to try to use it to make games. I'm fine with the coding side, unless anyone wants to chip in. But it's really someone on the &quot;using&quot; end I'd be really wanting to have a look and maybe try. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Actually, I'm more interested in anyone willing to try to use it to make games. I'm fine with the coding side, unless anyone wants to chip in. But it's really someone on the &quot;using&quot; end I'd be really wanting to have a look and maybe try. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2016-06-15T05:33:24+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43458",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "Sign me up.",
      "EditableFormat": "bbcode",
      "HTML": "Sign me up.",
      "PostDate": "2016-06-15T08:20:08+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43476",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Sounds great! Probably the best place to start is the docs. (In fact, you might want to peruse them before you sign up for anything, if you haven't. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> )\n\nAnd let me know if you have any questions.",
      "EditableFormat": "bbcode",
      "HTML": "Sounds great! Probably the best place to start is the docs. (In fact, you might want to peruse them before you sign up for anything, if you haven't. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> )<br/><br/>And let me know if you have any questions.",
      "PostDate": "2016-06-15T22:47:27+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43528",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "Cool Jay, maybe get your blog on <!-- m --><a class=\"postlink\" href=\"http://www.planet-if.com/\">http://www.planet-if.com/</a><!-- m --> ?\n\nJust starting to skim the RIF repo, and I was wondering if you had a look yet at Inkle's scripting language Ink. Just an idle thought. <!-- m --><a class=\"postlink\" href=\"https://github.com/inkle/ink\">https://github.com/inkle/ink</a><!-- m --> . Your data files made me think of it.",
      "EditableFormat": "bbcode",
      "HTML": "Cool Jay, maybe get your blog on <!-- m --><a class=\"postlink\" href=\"http://www.planet-if.com/\">http://www.planet-if.com/</a><!-- m --> ?<br/><br/>Just starting to skim the RIF repo, and I was wondering if you had a look yet at Inkle's scripting language Ink. Just an idle thought. <!-- m --><a class=\"postlink\" href=\"https://github.com/inkle/ink\">https://github.com/inkle/ink</a><!-- m --> . Your data files made me think of it.",
      "PostDate": "2016-06-17T03:27:46+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43542",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Thanks, George! I'll check out planet-if.\n\nAs far as Ink goes, I did a quick scan. I'll have to take a deeper look later.",
      "EditableFormat": "bbcode",
      "HTML": "Thanks, George! I'll check out planet-if.<br/><br/>As far as Ink goes, I did a quick scan. I'll have to take a deeper look later.",
      "PostDate": "2016-06-17T21:50:11+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43547",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "Well I just finished reading the user guide, and I have to say this is an impressive piece of work. I've seen plenty of IF systems but rarely one like this that has exciting [i:2zkz72b9]ideas[/i:2zkz72b9] about how to develop IF. I'm going to start playing with it this weekend!\n\nDo you have any plans to move the pdf docs to a wiki or anything like that?",
      "EditableFormat": "bbcode",
      "HTML": "Well I just finished reading the user guide, and I have to say this is an impressive piece of work. I've seen plenty of IF systems but rarely one like this that has exciting <span style=\"font-style:italic;\">ideas</span> about how to develop IF. I'm going to start playing with it this weekend!<br/><br/>Do you have any plans to move the pdf docs to a wiki or anything like that?",
      "PostDate": "2016-06-18T06:45:15+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43559",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "That's great, George! I look forward to any feedback or thoughts you may have.\n\nTo be honest, I had no plans for a wiki because, until you mentioned it, it hadn't occurred to me. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> My concern at this point is more about the lack of a forum for people to communicate about ResponsIF. It's something I need to work on. A wiki sounds interesting, but I see it as an alternative form to the PDF docs at the moment, and one that requires you to be online, to boot. Out of curiosity, are there advantages you can see to a Wiki over a PDF (beyond, perhaps, that it can be community maintained)?",
      "EditableFormat": "bbcode",
      "HTML": "That's great, George! I look forward to any feedback or thoughts you may have.<br/><br/>To be honest, I had no plans for a wiki because, until you mentioned it, it hadn't occurred to me. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> My concern at this point is more about the lack of a forum for people to communicate about ResponsIF. It's something I need to work on. A wiki sounds interesting, but I see it as an alternative form to the PDF docs at the moment, and one that requires you to be online, to boot. Out of curiosity, are there advantages you can see to a Wiki over a PDF (beyond, perhaps, that it can be community maintained)?",
      "PostDate": "2016-06-18T15:52:41+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43573",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "I think the main advantage of a wiki is it'd be a little easier to browse, and also to point people to specific sections of it via URL. Also at a certain point you might be able to automatically generate API docs (like the phrase book) and put them in the wiki as well. It'd be a central spot for people to put tutorials, etc. Something like this, <!-- m --><a class=\"postlink\" href=\"https://github.com/evennia/evennia/wiki\">https://github.com/evennia/evennia/wiki</a><!-- m --> . Incidentally, if the wiki is on Github you can clone the repo and have it offline. \n\nForum-wise it seems like, by the good graces of Alex, you could hijack this forum for a while <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->.",
      "EditableFormat": "bbcode",
      "HTML": "I think the main advantage of a wiki is it'd be a little easier to browse, and also to point people to specific sections of it via URL. Also at a certain point you might be able to automatically generate API docs (like the phrase book) and put them in the wiki as well. It'd be a central spot for people to put tutorials, etc. Something like this, <!-- m --><a class=\"postlink\" href=\"https://github.com/evennia/evennia/wiki\">https://github.com/evennia/evennia/wiki</a><!-- m --> . Incidentally, if the wiki is on Github you can clone the repo and have it offline. <br/><br/>Forum-wise it seems like, by the good graces of Alex, you could hijack this forum for a while <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->.",
      "PostDate": "2016-06-18T17:56:31+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43574",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "The blog has moved: <!-- m --><a class=\"postlink\" href=\"http://www.aniamosity.net/\">http://www.aniamosity.net/</a><!-- m -->\n\nSelf-hosted instead of wordpress.com. Now to see how to set up forums!",
      "EditableFormat": "bbcode",
      "HTML": "The blog has moved: <!-- m --><a class=\"postlink\" href=\"http://www.aniamosity.net/\">http://www.aniamosity.net/</a><!-- m --><br/><br/>Self-hosted instead of wordpress.com. Now to see how to set up forums!",
      "PostDate": "2016-06-18T17:57:22+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43575",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "[quote=&quot;george&quot;:jdminqak]Forum-wise it seems like, by the good graces of Alex, you could hijack this forum for a while <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->.[/quote:jdminqak]\n\nJust saw this. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Ah well. Assuming I don't make a complete botch of it, there can always be links!\n\nI hadn't thought of a wiki on github (or known of such a thing). A lot to learn yet. Thanks for the information. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>george wrote:</cite>Forum-wise it seems like, by the good graces of Alex, you could hijack this forum for a while <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->.</blockquote><br/><br/>Just saw this. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Ah well. Assuming I don't make a complete botch of it, there can always be links!<br/><br/>I hadn't thought of a wiki on github (or known of such a thing). A lot to learn yet. Thanks for the information. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2016-06-18T17:58:42+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43583",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "Samples work well, I like the styling of Meek, nice job!\n\nJust curious, which node http server do you use to serve the files (as I primarily use Chrome for web browsing)? This one, <!-- m --><a class=\"postlink\" href=\"https://www.npmjs.com/package/node-http-server\">https://www.npmjs.com/package/node-http-server</a><!-- m -->?\n\nI'm using Python's standard server now but I don't have much experience with node.",
      "EditableFormat": "bbcode",
      "HTML": "Samples work well, I like the styling of Meek, nice job!<br/><br/>Just curious, which node http server do you use to serve the files (as I primarily use Chrome for web browsing)? This one, <!-- m --><a class=\"postlink\" href=\"https://www.npmjs.com/package/node-http-server\">https://www.npmjs.com/package/node-http-server</a><!-- m -->?<br/><br/>I'm using Python's standard server now but I don't have much experience with node.",
      "PostDate": "2016-06-18T20:09:12+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43585",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Yes, that's the one I use. You can use npm to install it, and then just run http-server in the directory you want to serve. I have a batch file with these lines:\n\ncd C:\\Users\\jay\\MyPath\nhttp-server",
      "EditableFormat": "bbcode",
      "HTML": "Yes, that's the one I use. You can use npm to install it, and then just run http-server in the directory you want to serve. I have a batch file with these lines:<br/><br/>cd C:\\Users\\jay\\MyPath<br/>http-server",
      "PostDate": "2016-06-18T21:09:09+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43591",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Well after battling trying to get things the way I wanted (during which time, it would randomly go missing), I finally gave up and left it with the default location. So some nascent forums are here:\n\n<!-- m --><a class=\"postlink\" href=\"http://www.aniamosity.net/forums/forum/responsif/\">http://www.aniamosity.net/forums/forum/responsif/</a><!-- m -->",
      "EditableFormat": "bbcode",
      "HTML": "Well after battling trying to get things the way I wanted (during which time, it would randomly go missing), I finally gave up and left it with the default location. So some nascent forums are here:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://www.aniamosity.net/forums/forum/responsif/\">http://www.aniamosity.net/forums/forum/responsif/</a><!-- m -->",
      "PostDate": "2016-06-18T22:26:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43607",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "Are you adding login credentials manually Jay? I didn't see a register link.",
      "EditableFormat": "bbcode",
      "HTML": "Are you adding login credentials manually Jay? I didn't see a register link.",
      "PostDate": "2016-06-19T06:21:23+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43608",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "First question, I'll put it here for now. I'd like a typewriter effect, however I don't know how to make it work with the way RIF outputs text. For example, given the response\n\n[code:3g3h73cd]\n&#46;responses player\n    &#46;response START\n        &#46;does\n            &#46;invokes\n                var string = &quot;This is a sentence to typewrite&#46;&#46;&#46;&quot;;\n                split = string&#46;split(&quot;&quot;);\n                len = split&#46;length;\n                count = 0;\n                function callback() {\n                   if (count != len) {\n                       interact&#46;say({ text&#58; split&#91;count&#93;}, responder);\n                       count++;\n                   }\n                };\n                setInterval(callback, 200);\n&#46;end\n[/code:3g3h73cd]\n\nThe text output looks like\n\n[quote:3g3h73cd]\nT h i s i s a s e n t e n c e t o t y p e w r i t e . . .\n[/quote:3g3h73cd]\n\nI guess because [b:3g3h73cd]interact.say[/b:3g3h73cd] automatically adds a space? What's a good way to change that?\n\n\nedit: \n\nHere's one idea, what do you think?\n\n[code:3g3h73cd]\n&#46;responses player\n    &#46;response START\n        &#46;does\n            &#46;says &lt;span id=&quot;container&quot;&gt;&lt;/span&gt;\n            &#46;invokes\n                var string = &quot;This is a sentence to typewrite&#46;&#46;&#46;&quot;;\n                split = string&#46;split(&quot;&quot;);\n                len = split&#46;length;\n                count = 0;\n                line = &quot;&quot;;\n                function callback() {\n                   if (count != len) {\n                       line += split&#91;count&#93;;\n                       interact&#46;say({ text&#58; line, into&#58; &quot;#container&quot;}, responder);\n                       count++;\n                   }\n                };\n                setInterval(callback, 200);\n&#46;end\n[/code:3g3h73cd]",
      "EditableFormat": "bbcode",
      "HTML": "First question, I'll put it here for now. I'd like a typewriter effect, however I don't know how to make it work with the way RIF outputs text. For example, given the response<br/><br/><pre><code><br/>&#46;responses player<br/>    &#46;response START<br/>        &#46;does<br/>            &#46;invokes<br/>                var string = &quot;This is a sentence to typewrite&#46;&#46;&#46;&quot;;<br/>                split = string&#46;split(&quot;&quot;);<br/>                len = split&#46;length;<br/>                count = 0;<br/>                function callback() {<br/>                   if (count != len) {<br/>                       interact&#46;say({ text&#58; split&#91;count&#93;}, responder);<br/>                       count++;<br/>                   }<br/>                };<br/>                setInterval(callback, 200);<br/>&#46;end<br/></code></pre><br/><br/>The text output looks like<br/><br/><blockquote><p><br/>T h i s i s a s e n t e n c e t o t y p e w r i t e . . .<br/></p></blockquote><br/><br/>I guess because <span style=\"font-weight:bold;\">interact.say</span> automatically adds a space? What's a good way to change that?<br/><br/><br/>edit: <br/><br/>Here's one idea, what do you think?<br/><br/><pre><code><br/>&#46;responses player<br/>    &#46;response START<br/>        &#46;does<br/>            &#46;says &lt;span id=&quot;container&quot;&gt;&lt;/span&gt;<br/>            &#46;invokes<br/>                var string = &quot;This is a sentence to typewrite&#46;&#46;&#46;&quot;;<br/>                split = string&#46;split(&quot;&quot;);<br/>                len = split&#46;length;<br/>                count = 0;<br/>                line = &quot;&quot;;<br/>                function callback() {<br/>                   if (count != len) {<br/>                       line += split&#91;count&#93;;<br/>                       interact&#46;say({ text&#58; line, into&#58; &quot;#container&quot;}, responder);<br/>                       count++;<br/>                   }<br/>                };<br/>                setInterval(callback, 200);<br/>&#46;end<br/></code></pre>",
      "PostDate": "2016-06-19T06:54:47+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43609",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I think the second approach would work.\n\nThis brings to mind a possible feature: having &quot;onto&quot; instead of just &quot;into&quot;. &quot;into&quot; would replace the text. &quot;onto&quot; would append. That way you could just keep adding characters, one by one, by saying onto... I could look into adding that. It wouldn't be too hard.",
      "EditableFormat": "bbcode",
      "HTML": "I think the second approach would work.<br/><br/>This brings to mind a possible feature: having &quot;onto&quot; instead of just &quot;into&quot;. &quot;into&quot; would replace the text. &quot;onto&quot; would append. That way you could just keep adding characters, one by one, by saying onto... I could look into adding that. It wouldn't be too hard.",
      "PostDate": "2016-06-19T07:15:35+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43618",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Ok, I have implemented &quot;onto&quot;. And it seems to work, too.  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> It has been pushed to the github site. NOTE: If you update to the latest code, you will probably need to clear your browser cache. Browsers seem to like to use cached versions of .js code even when it has been updated.\n\nSo you can just &quot;say&quot; characters onto the element, and they will be appended. This typewriter thing does cause some thoughts for me, though.\n\nFirst, for what you're trying to do, you might be better off just appending the characters to the span yourself with simple JavaScript. The reason is that &quot;say&quot;'s real power comes from things like expanding the various kinds of markup, applying styles, etc. And these simple sort of typewriter effect implementations (character by character) suffer from not being able to deal with any sort of markup, even HTML tags, as you can't output them a character at a time. The code would need to be smarter and parse the string to see what's text and what's markup and then apply the markup intelligently as characters are being output. That could be an interesting programming challenge.\n\nHere is a different way to handle a typewriter effect, though not necessarily a good one (but more in line with a response approach):\n\n[code:35gnbju1]&#46;define says-next\n    &#46;says &#46;&lt;value&gt; &#46;onto #container\n&#46;enddef\n\n&#46;responses player\n    &#46;response START\n        &#46;does &#46;says &lt;span id=&quot;container&quot;&gt;&lt;/span&gt;\n        &#46;invokes\n            setInterval(function() {\n                interact&#46;call(&#91;{keyword&#58; &quot;NEXT&quot;}&#93;)\n            }, 100);\n\n    &#46;response NEXT\n        &#46;does 1 &#46;says-next T\n        &#46;does 2 &#46;says-next h\n        &#46;does 3 &#46;says-next i\n        &#46;does 4 &#46;says-next s\n        &#46;does 5 &#46;says-next &amp;nbsp;\n        &#46;does 6 &#46;says-next i\n        &#46;does 7 &#46;says-next s\n        &#46;does 8 &#46;says-next &amp;nbsp;\n        &#46;does 9 &#46;says-next i\n        &#46;does 10 &#46;says-next t\n        &#46;does 11 &#46;says-next !\n\n&#46;end[/code:35gnbju1]\nUgly, I know, and a pain if you had long text, or a lot of it. It could lend itself, though, to other situations, like if you wanted to output words instead of characters (like what spondre did on its title screen). It also would allow you to put markup in the stream, though it would have to be output in chunks (e.g. an entire name). (It does need a way to stop the timer though. Otherwise, it will keep calling the NEXT topic over and over forever. I think it would be useful to expose a function like &quot;is topic supported&quot;, and you could then call the topic until it's no longer supported.)\n\nThat makes me realize that the markup processing abilities of &quot;say&quot; should be able to be leveraged in non-output situations: for example, building a string. (That's one thing I had wished Quest had - the ability to parse the text processor markup into a string instead of just to output.) I'm just about to slightly rip the &quot;say&quot; code apart, trying to get &quot;as&quot; to work on nested calls (e.g. with call markup). Right now, the &quot;as&quot; class is applied after the entire string has been assembled, which works for simple cases but isn't right in general. I need the code to be able to apply classes piece-by-piece,w which means being able to hang onto a non-text representation internally.  So I've been refactoring the code in preparation for that. I'll keep in mind how easy it would be to have it be able to generate a string instead of HTML DOM elements. That way, you could fully expand a string (with variables, call markup, etc) and then output it in typewriter fashion, or do whatever you want with it.\n\nMy example also makes me think it would be useful to have a better sequential notation than the &quot;does ###&quot; one, since the number has to vary each time and be explicitly stated. I'll have to think about that. (Perhaps &quot;does next&quot; or something. Then that part could be rolled up into the macro as well.)\n\nProbably more detail than you needed, but where my head is right now. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nIt certainly seems like people like this typewriter effect.",
      "EditableFormat": "bbcode",
      "HTML": "Ok, I have implemented &quot;onto&quot;. And it seems to work, too.  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> It has been pushed to the github site. NOTE: If you update to the latest code, you will probably need to clear your browser cache. Browsers seem to like to use cached versions of .js code even when it has been updated.<br/><br/>So you can just &quot;say&quot; characters onto the element, and they will be appended. This typewriter thing does cause some thoughts for me, though.<br/><br/>First, for what you're trying to do, you might be better off just appending the characters to the span yourself with simple JavaScript. The reason is that &quot;say&quot;'s real power comes from things like expanding the various kinds of markup, applying styles, etc. And these simple sort of typewriter effect implementations (character by character) suffer from not being able to deal with any sort of markup, even HTML tags, as you can't output them a character at a time. The code would need to be smarter and parse the string to see what's text and what's markup and then apply the markup intelligently as characters are being output. That could be an interesting programming challenge.<br/><br/>Here is a different way to handle a typewriter effect, though not necessarily a good one (but more in line with a response approach):<br/><br/><pre><code>&#46;define says-next<br/>    &#46;says &#46;&lt;value&gt; &#46;onto #container<br/>&#46;enddef<br/><br/>&#46;responses player<br/>    &#46;response START<br/>        &#46;does &#46;says &lt;span id=&quot;container&quot;&gt;&lt;/span&gt;<br/>        &#46;invokes<br/>            setInterval(function() {<br/>                interact&#46;call(&#91;{keyword&#58; &quot;NEXT&quot;}&#93;)<br/>            }, 100);<br/><br/>    &#46;response NEXT<br/>        &#46;does 1 &#46;says-next T<br/>        &#46;does 2 &#46;says-next h<br/>        &#46;does 3 &#46;says-next i<br/>        &#46;does 4 &#46;says-next s<br/>        &#46;does 5 &#46;says-next &amp;nbsp;<br/>        &#46;does 6 &#46;says-next i<br/>        &#46;does 7 &#46;says-next s<br/>        &#46;does 8 &#46;says-next &amp;nbsp;<br/>        &#46;does 9 &#46;says-next i<br/>        &#46;does 10 &#46;says-next t<br/>        &#46;does 11 &#46;says-next !<br/><br/>&#46;end</code></pre><br/>Ugly, I know, and a pain if you had long text, or a lot of it. It could lend itself, though, to other situations, like if you wanted to output words instead of characters (like what spondre did on its title screen). It also would allow you to put markup in the stream, though it would have to be output in chunks (e.g. an entire name). (It does need a way to stop the timer though. Otherwise, it will keep calling the NEXT topic over and over forever. I think it would be useful to expose a function like &quot;is topic supported&quot;, and you could then call the topic until it's no longer supported.)<br/><br/>That makes me realize that the markup processing abilities of &quot;say&quot; should be able to be leveraged in non-output situations: for example, building a string. (That's one thing I had wished Quest had - the ability to parse the text processor markup into a string instead of just to output.) I'm just about to slightly rip the &quot;say&quot; code apart, trying to get &quot;as&quot; to work on nested calls (e.g. with call markup). Right now, the &quot;as&quot; class is applied after the entire string has been assembled, which works for simple cases but isn't right in general. I need the code to be able to apply classes piece-by-piece,w which means being able to hang onto a non-text representation internally.  So I've been refactoring the code in preparation for that. I'll keep in mind how easy it would be to have it be able to generate a string instead of HTML DOM elements. That way, you could fully expand a string (with variables, call markup, etc) and then output it in typewriter fashion, or do whatever you want with it.<br/><br/>My example also makes me think it would be useful to have a better sequential notation than the &quot;does ###&quot; one, since the number has to vary each time and be explicitly stated. I'll have to think about that. (Perhaps &quot;does next&quot; or something. Then that part could be rolled up into the macro as well.)<br/><br/>Probably more detail than you needed, but where my head is right now. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>It certainly seems like people like this typewriter effect.",
      "PostDate": "2016-06-19T17:19:22+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43619",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I also need to come up (I think) with a way to pass multiple parameters to a macro expansion. I keep wanting to bury my head in the sand and say, &quot;One is enough. One is enough.&quot; But I keep running into situations where multiple variable parts would be useful. Another for the &quot;to do&quot; list.",
      "EditableFormat": "bbcode",
      "HTML": "I also need to come up (I think) with a way to pass multiple parameters to a macro expansion. I keep wanting to bury my head in the sand and say, &quot;One is enough. One is enough.&quot; But I keep running into situations where multiple variable parts would be useful. Another for the &quot;to do&quot; list.",
      "PostDate": "2016-06-19T17:21:42+01:00",
      "LastEditDate": null
    }
  ]
}
