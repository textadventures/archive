{
  "Topic": {
    "TopicId": "tdkgofzjmeyuet_c10vvta",
    "ForumId": "10",
    "Title": "No verb {object:object} on hover",
    "LastUpdated": "2024-03-18T15:49:58.1397022Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "37f0fae3-e6fa-463b-a906-649aa98f6522",
      "UserId": 579655,
      "Username": "Jennifer Wren",
      "AvatarUrl": "https://i.imgur.com/t1XUS1Kb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have a script that lists all the objects in the room as object links, but the verbs are finiky and show up less often than not, do they are underlined and highlighted, but nothing can be done with them, or else the verb flickers.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I have a script that lists all the objects in the room as object links, but the verbs are finiky and show up less often than not, do they are underlined and highlighted, but nothing can be done with them, or else the verb flickers.</p>\n\n",
      "PostDate": "2024-03-18T15:49:58.1397022Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a802bdc4-b5bc-49b5-b5c1-63bad165f984",
      "UserId": 31991,
      "Username": "daeun",
      "AvatarUrl": "https://i.imgur.com/Xvt8zzBb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I am going to guess links works better when automatically underlined, highlighted, font changed by the system and recommend you not to change it but I could be misunderstanding your question.",
      "EditableFormat": "markdown",
      "HTML": "<p>I am going to guess links works better when automatically underlined, highlighted, font changed by the system and recommend you not to change it but I could be misunderstanding your question.</p>\n\n",
      "PostDate": "2024-03-19T03:01:25.2741899Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5c70a880-7500-4f14-af63-328c967083c4",
      "UserId": 579655,
      "Username": "Jennifer Wren",
      "AvatarUrl": "https://i.imgur.com/t1XUS1Kb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You did misunderstand me. I was just saying nothing looked amiss\r\n\r\nI solved my problem, if it is solved, as it seems to be, at least, by asking Copilot to look into it. It's advice sent me to an answer written to somebody else a long time ago, by mrangel.\r\nThe answer included a script\r\nUpdateObjectLinks()\r\nAnd the script works well.\r\nThanks mrangel. Thanks Copilot AI. \r\nThanks everyone else, as well. \r\n\r\nI am not sure what caused the jam, but I understand it was a jam.",
      "EditableFormat": "markdown",
      "HTML": "<p>You did misunderstand me. I was just saying nothing looked amiss</p>\n<p>I solved my problem, if it is solved, as it seems to be, at least, by asking Copilot to look into it. It's advice sent me to an answer written to somebody else a long time ago, by mrangel.<br>\nThe answer included a script<br>\nUpdateObjectLinks()<br>\nAnd the script works well.<br>\nThanks mrangel. Thanks Copilot AI.<br>\nThanks everyone else, as well.</p>\n<p>I am not sure what caused the jam, but I understand it was a jam.</p>\n\n",
      "PostDate": "2024-03-19T03:09:35.4134635Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5368319f-8d55-4cda-acd1-c65738a10ee1",
      "UserId": 31991,
      "Username": "daeun",
      "AvatarUrl": "https://i.imgur.com/Xvt8zzBb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That makes sense, thanks for the update.",
      "EditableFormat": "markdown",
      "HTML": "<p>That makes sense, thanks for the update.</p>\n\n",
      "PostDate": "2024-03-19T03:58:45.4588175Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4893cf04-df70-4e87-910e-32fd9f59b335",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Are you using timers?\r\n\r\nThe function `UpdateObjectLinks` basically compiles a list of verbs for all visible objects, and sends them to the frontend. This updates the verbs attached to object links, and may also disable object links for objects which aren't in the list.\r\n\r\nThis used to be called from the function `FinishTurn`, which was run to synchronise the frontend and backend whenever the Quest interpreter returns control to the browser. However, `FinishTurn` *also* runs turnscripts; which you might not want to run during every sync.\r\n\r\nDuring the transition from Quest 5.7.2 to 5.8, I suggested modifying FinishTurn and/or RunTurnScripts so that the user can choose whether their turnscripts run once-per-turn or once-per-sync. But for some reason the engine was instead changed to only run FinishTurn immediately after a command from the player is successfully executed. So… this means that if an object becomes accessible as a result of a timer, or something else that isn't part of a command, you can't rely on `UpdateObjectLinks` being done automatically.",
      "EditableFormat": "markdown",
      "HTML": "<p>Are you using timers?</p>\n<p>The function <code>UpdateObjectLinks</code> basically compiles a list of verbs for all visible objects, and sends them to the frontend. This updates the verbs attached to object links, and may also disable object links for objects which aren't in the list.</p>\n<p>This used to be called from the function <code>FinishTurn</code>, which was run to synchronise the frontend and backend whenever the Quest interpreter returns control to the browser. However, <code>FinishTurn</code> <em>also</em> runs turnscripts; which you might not want to run during every sync.</p>\n<p>During the transition from Quest 5.7.2 to 5.8, I suggested modifying FinishTurn and/or RunTurnScripts so that the user can choose whether their turnscripts run once-per-turn or once-per-sync. But for some reason the engine was instead changed to only run FinishTurn immediately after a command from the player is successfully executed. So… this means that if an object becomes accessible as a result of a timer, or something else that isn't part of a command, you can't rely on <code>UpdateObjectLinks</code> being done automatically.</p>\n\n",
      "PostDate": "2024-03-19T15:49:49.5150885Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0d81959c-25b2-4b2f-abc7-f8ccafbae8aa",
      "UserId": 579655,
      "Username": "Jennifer Wren",
      "AvatarUrl": "https://i.imgur.com/t1XUS1Kb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well, I don't know. \r\nI was using one timer when the problem occurred, but I have a script in the timer itself to list all old and new objects in the room.\r\nI had honestly thought that would be enough.\r\nHowever, it wasn't working well, so I added it,\r\nUpdateObjectLinks ()\r\nAnd it is running perfectly now.\r\nSo I guess it was the timer, somehow.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Well, I don't know.<br>\nI was using one timer when the problem occurred, but I have a script in the timer itself to list all old and new objects in the room.<br>\nI had honestly thought that would be enough.<br>\nHowever, it wasn't working well, so I added it,<br>\nUpdateObjectLinks ()<br>\nAnd it is running perfectly now.<br>\nSo I guess it was the timer, somehow.</p>\n\n",
      "PostDate": "2024-03-19T21:09:33.4432298Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "55eb8319-9f72-4a78-836b-5437e8ffa43f",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Mr.Angel!  Your question and explanation just solved a bug I had flagged for \"one day when I understand better\" I think!  In my updated WeatherLib for Pixie's WeatherLib, there were several things I had to work on and fix.  Some of them were as simple as learning that GetBoolean was what was truly wanted and not HasAttribute (which then changed other things).\r\n\r\nBut I have added turnscripts which move day and night time weather objects to follow the player around if the \"currentweather\" room was flagged that they should be there, and the player was outside (slightly different if the player was inside but could see outside).  The only thing I didn't understand after fixing my other bugs with the system was why it sometimes left the objects so that you couldn't interact with them using your first command, \"look at rain.\"\r\n\r\nWhat you're saying makes me think it's related to the changes you mentioned.    I could either update the turnscripts with the appropriate function to update these scenery objects... or ... as I think of it... maybe there's a way to incorporate some of this into \"on room enter\" script for \"outside\" and \"windowed\" flagged rooms. hmm.\r\n\r\nAnyway, thanks to both Jennifer and Mr. Angel for sharing.  I learn just by reading what other folks are working on sometimes.",
      "EditableFormat": "markdown",
      "HTML": "<p>Mr.Angel!  Your question and explanation just solved a bug I had flagged for \"one day when I understand better\" I think!  In my updated WeatherLib for Pixie's WeatherLib, there were several things I had to work on and fix.  Some of them were as simple as learning that GetBoolean was what was truly wanted and not HasAttribute (which then changed other things).</p>\n<p>But I have added turnscripts which move day and night time weather objects to follow the player around if the \"currentweather\" room was flagged that they should be there, and the player was outside (slightly different if the player was inside but could see outside).  The only thing I didn't understand after fixing my other bugs with the system was why it sometimes left the objects so that you couldn't interact with them using your first command, \"look at rain.\"</p>\n<p>What you're saying makes me think it's related to the changes you mentioned.    I could either update the turnscripts with the appropriate function to update these scenery objects... or ... as I think of it... maybe there's a way to incorporate some of this into \"on room enter\" script for \"outside\" and \"windowed\" flagged rooms. hmm.</p>\n<p>Anyway, thanks to both Jennifer and Mr. Angel for sharing.  I learn just by reading what other folks are working on sometimes.</p>\n\n",
      "PostDate": "2024-03-23T04:52:47.0746627Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4d61ed78-0546-44f1-91b0-91742e003ebc",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> But I have added turnscripts which move day and night time weather objects to follow the player around if the \"currentweather\" room was flagged that they should be there, and the player was outside (slightly different if the player was inside but could see outside). The only thing I didn't understand after fixing my other bugs with the system was why it sometimes left the objects so that you couldn't interact with them using your first command, \"look at rain.\"\r\n\r\nThis seems odd. I wouldn't think it would be caused by the `FinishTurn` changes, because FinishTurn should call `RunTurnScripts` before `UpdateStatusAttributes`, `CheckDarkness`, and `UpdateObjectLinks`.\r\n\r\n> What you're saying makes me think it's related to the changes you mentioned. I could either update the turnscripts with the appropriate function to update these scenery objects... or ... as I think of it... maybe there's a way to incorporate some of this into \"on room enter\" script for \"outside\" and \"windowed\" flagged rooms. hmm.\r\n\r\nIf you want the objects to follow the player, I think it might make more sense to put this code in the `game.roomenter` script, which runs every time the player enters a new room (after showing the description, but before the room's own 'enter' scripts).\r\n\r\nOr, of course, to modify the background scope script to make the relevant objects reachable without actually moving them - although this could lead to performance issues if it's a complex script.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>But I have added turnscripts which move day and night time weather objects to follow the player around if the \"currentweather\" room was flagged that they should be there, and the player was outside (slightly different if the player was inside but could see outside). The only thing I didn't understand after fixing my other bugs with the system was why it sometimes left the objects so that you couldn't interact with them using your first command, \"look at rain.\"</p>\n</blockquote>\n<p>This seems odd. I wouldn't think it would be caused by the <code>FinishTurn</code> changes, because FinishTurn should call <code>RunTurnScripts</code> before <code>UpdateStatusAttributes</code>, <code>CheckDarkness</code>, and <code>UpdateObjectLinks</code>.</p>\n<blockquote>\n<p>What you're saying makes me think it's related to the changes you mentioned. I could either update the turnscripts with the appropriate function to update these scenery objects... or ... as I think of it... maybe there's a way to incorporate some of this into \"on room enter\" script for \"outside\" and \"windowed\" flagged rooms. hmm.</p>\n</blockquote>\n<p>If you want the objects to follow the player, I think it might make more sense to put this code in the <code>game.roomenter</code> script, which runs every time the player enters a new room (after showing the description, but before the room's own 'enter' scripts).</p>\n<p>Or, of course, to modify the background scope script to make the relevant objects reachable without actually moving them - although this could lead to performance issues if it's a complex script.</p>\n\n",
      "PostDate": "2024-03-23T10:02:59.1406264Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "533f390b-de77-4b2f-9c7f-65fa590a7b09",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I like the idea of putting it on game.roomenter, except that I'm trying to make an integrated core that incorporates the libraries as cleanly as possible.  If I add it to the gametype in as the roomenter type script, it will show in red and ask the user to override it on the game object whether they're using the WeatherLib feature or not.\r\n\r\nThe current new core already includes a check for the feature_WeatherLib flag on the Game object to call the WeatherReport function in that spot and it would go there too. \r\n\r\nBut there's also already flags on the \"weather\" tab to check whether a room is \"inside\" or whether it's \"windowed\"  which the WeatherReport and turnscripts use to move these weather objects and read the attributes of game.currentweather (whichever current room the \"weather\" is in) respectively.  No flags means the room will display the weatherreport and have weather objects by default if the weather feature is enabled.\r\n\r\nThere's also already a Type dropdown on the Weather tab to select whether a room is \"weather\" , meaning that its attributes are included and scoped, etc by reading game.currentweather, or \"not weather\" = no special features.   So what I'm thinking is to change these flags for \"indoor\" and \"windowed\" into types in the dropdown now.  \r\n\r\n Then, instead of having the chunk of what's now in the turnscript all on the game object, it could be included separately in each room that's changed to a specific type on the weather tab.  As I think of it, it would be better to update the WeatherReport and move it also to the weather room types i'm imagining creating.  I think I'll also review the library so that it's checking/running based on \"outside\" and \"windowed\" rooms rather than \"inside\" or \"windowed\" with a default for all rooms running the weather report.  \r\n\r\nIt seems more intuitive that a creator would only want to go deal with the \"weather\" tab when they're working with rooms where the weather is something they're creating.  That way if they forget to go to the weather tab, they're not having weather in an inside room because they didn't go disable it with a checkbox. \r\n\r\nThis thing with not being able to look at the weather seems to happen only if it's your first command in the room you start in (assuming it's supposed to have weather).  hmmm.\r\n\r\nAnyway, does this all make sense to you, Mr. Angel?  Pixie's WeatherLib is pretty cool, and I enjoy my enhancements, but it is taking a little bit to incorporate them into the core and editors so it would be easy for a non-coder to just use as a feature.\r\n\r\nWhat I'm thinking at the moment after all this is to create two new types for rooms and change one of the existing labels in the dropdown:\r\n\"Outside\" which will be the new default for full weather interactions\r\n\"windowed\" which will be the one with modified weather interactions\r\n\"weather\" which can remain the same for customizing different types of weather you want to program into your game\r\nand change \"Notweather\" to \"inside\" which is just the label for no type in WeatherLib.\r\n\r\nThen change whatever is needed in the setup so that weather only \"happens\" for \"outside\" and \"windowed\" typed rooms.\r\n\r\nI'm thinking it's worth the work, because that could make it easy for creators to override what moves into their room if they want by having these show only on \"outside\" and \"windowed\" room scripts.   Maybe move the objects before entering room and call the weather report after entering room.  That frees up the game object so it's not checking whether to call the weather report literally on every room enter.\r\n\r\nI just realized that all this discussion is happening in a forum question that was about something else!  I'm sorry for taking up space on this thread, Ms. Jennifer et. al!  Mr. Angel, feel free to message me with any helpful thoughts, or to share them over in the Libraries forum where I've got a thread with updates on my core work.  \r\nhttps://textadventures.co.uk/forum/samples/topic/5nwc3eltt02p2bwh_5zdaw/integrating-favourite-libraries-into-the-core-of-quest-5-8-core3\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I like the idea of putting it on game.roomenter, except that I'm trying to make an integrated core that incorporates the libraries as cleanly as possible.  If I add it to the gametype in as the roomenter type script, it will show in red and ask the user to override it on the game object whether they're using the WeatherLib feature or not.</p>\n<p>The current new core already includes a check for the feature_WeatherLib flag on the Game object to call the WeatherReport function in that spot and it would go there too.</p>\n<p>But there's also already flags on the \"weather\" tab to check whether a room is \"inside\" or whether it's \"windowed\"  which the WeatherReport and turnscripts use to move these weather objects and read the attributes of game.currentweather (whichever current room the \"weather\" is in) respectively.  No flags means the room will display the weatherreport and have weather objects by default if the weather feature is enabled.</p>\n<p>There's also already a Type dropdown on the Weather tab to select whether a room is \"weather\" , meaning that its attributes are included and scoped, etc by reading game.currentweather, or \"not weather\" = no special features.   So what I'm thinking is to change these flags for \"indoor\" and \"windowed\" into types in the dropdown now.</p>\n<p>Then, instead of having the chunk of what's now in the turnscript all on the game object, it could be included separately in each room that's changed to a specific type on the weather tab.  As I think of it, it would be better to update the WeatherReport and move it also to the weather room types i'm imagining creating.  I think I'll also review the library so that it's checking/running based on \"outside\" and \"windowed\" rooms rather than \"inside\" or \"windowed\" with a default for all rooms running the weather report.</p>\n<p>It seems more intuitive that a creator would only want to go deal with the \"weather\" tab when they're working with rooms where the weather is something they're creating.  That way if they forget to go to the weather tab, they're not having weather in an inside room because they didn't go disable it with a checkbox.</p>\n<p>This thing with not being able to look at the weather seems to happen only if it's your first command in the room you start in (assuming it's supposed to have weather).  hmmm.</p>\n<p>Anyway, does this all make sense to you, Mr. Angel?  Pixie's WeatherLib is pretty cool, and I enjoy my enhancements, but it is taking a little bit to incorporate them into the core and editors so it would be easy for a non-coder to just use as a feature.</p>\n<p>What I'm thinking at the moment after all this is to create two new types for rooms and change one of the existing labels in the dropdown:<br>\n\"Outside\" which will be the new default for full weather interactions<br>\n\"windowed\" which will be the one with modified weather interactions<br>\n\"weather\" which can remain the same for customizing different types of weather you want to program into your game<br>\nand change \"Notweather\" to \"inside\" which is just the label for no type in WeatherLib.</p>\n<p>Then change whatever is needed in the setup so that weather only \"happens\" for \"outside\" and \"windowed\" typed rooms.</p>\n<p>I'm thinking it's worth the work, because that could make it easy for creators to override what moves into their room if they want by having these show only on \"outside\" and \"windowed\" room scripts.   Maybe move the objects before entering room and call the weather report after entering room.  That frees up the game object so it's not checking whether to call the weather report literally on every room enter.</p>\n<p>I just realized that all this discussion is happening in a forum question that was about something else!  I'm sorry for taking up space on this thread, Ms. Jennifer et. al!  Mr. Angel, feel free to message me with any helpful thoughts, or to share them over in the Libraries forum where I've got a thread with updates on my core work.<br>\nhttps://textadventures.co.uk/forum/samples/topic/5nwc3eltt02p2bwh_5zdaw/integrating-favourite-libraries-into-the-core-of-quest-5-8-core3</p>\n\n",
      "PostDate": "2024-03-29T19:55:47.5030251Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "dd25cc4c-e26a-4c0f-a92d-2d165e3d34dd",
      "UserId": 579655,
      "Username": "Jennifer Wren",
      "AvatarUrl": "https://i.imgur.com/t1XUS1Kb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wouldn't weather also affect the inside, if differently from how it affects the outside? Inside, on a hot day is either muggy or airconditioned. And inside on an extremely cold day, the furnace is hot but the walls are dangerously cold and they creak. When it rains, roofs leak. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Wouldn't weather also affect the inside, if differently from how it affects the outside? Inside, on a hot day is either muggy or airconditioned. And inside on an extremely cold day, the furnace is hot but the walls are dangerously cold and they creak. When it rains, roofs leak.</p>\n\n",
      "PostDate": "2024-03-30T20:53:23.3018671Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2ba37448-92e0-4a5b-9e56-73c55fcbf6e7",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello Ms. Jennifer!  It certainly could!\r\n\r\nThe WeatherLib and enhanced WeatherLib are meant to help a game programmer create weather which can be random, or can be very controlled.  \r\n\r\nI think if someone using Weatherlib wanted to then use the weather that they created to determine if there's a leak in the room's roof, for instance, you'd create a check on game.currentweather\r\n\r\nSomething like \r\n''' \r\nIf  GetBoolean(game.currentweather, \"presentrain\"){\r\n     moveobject (drip, game.pov.parent)\r\n     msg (There's an annoying drip coming down from the corner of one of the ceiling tiles.  It's either raining outside, or someone's left the water running in the tub.)\r\n\r\n'''\r\n\r\nSorry, that's from memory, but the weather objects all have flags one checks if they're present on the weather tab of a weather room.   Once checked that they're present, the fields for adding description/script attributes for that object appear.  It originally was meant to keep the tab interface fairly clean and not so overwhelming with fields you didn't want to use.  But the flags are also handy for boolean checks. ;-)\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello Ms. Jennifer!  It certainly could!</p>\n<p>The WeatherLib and enhanced WeatherLib are meant to help a game programmer create weather which can be random, or can be very controlled.</p>\n<p>I think if someone using Weatherlib wanted to then use the weather that they created to determine if there's a leak in the room's roof, for instance, you'd create a check on game.currentweather</p>\n<p>Something like<br>\n'''<br>\nIf  GetBoolean(game.currentweather, \"presentrain\"){<br>\nmoveobject (drip, game.pov.parent)<br>\nmsg (There's an annoying drip coming down from the corner of one of the ceiling tiles.  It's either raining outside, or someone's left the water running in the tub.)</p>\n<p>'''</p>\n<p>Sorry, that's from memory, but the weather objects all have flags one checks if they're present on the weather tab of a weather room.   Once checked that they're present, the fields for adding description/script attributes for that object appear.  It originally was meant to keep the tab interface fairly clean and not so overwhelming with fields you didn't want to use.  But the flags are also handy for boolean checks. ;-)</p>\n\n",
      "PostDate": "2024-03-31T01:59:01.0598744Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "19ef761b-e85c-451b-8d94-1085fef73211",
      "UserId": 579655,
      "Username": "Jennifer Wren",
      "AvatarUrl": "https://i.imgur.com/t1XUS1Kb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That sounds fantastic, but move object isn't working for me, right now. I don't know what's wrong, if it's just my current game or my game file or if it's my game engine, but I would really rather know how it happened than know where it is. Sorry. It's just that you said something about the move script and all I could think was, yes, a move script would be a nice thing to have access to!!!\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>That sounds fantastic, but move object isn't working for me, right now. I don't know what's wrong, if it's just my current game or my game file or if it's my game engine, but I would really rather know how it happened than know where it is. Sorry. It's just that you said something about the move script and all I could think was, yes, a move script would be a nice thing to have access to!!!</p>\n\n",
      "PostDate": "2024-03-31T03:03:02.9309227Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7a076924-2e20-46b9-b60d-91d83163d924",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hmmmm.  If I remember correctly, you were the one experimenting with a completely different grid system, right?  Maybe that did something to the \"moveobject\" function?  Maybe it calculates based on the original grid?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hmmmm.  If I remember correctly, you were the one experimenting with a completely different grid system, right?  Maybe that did something to the \"moveobject\" function?  Maybe it calculates based on the original grid?</p>\n\n",
      "PostDate": "2024-04-04T04:16:16.646816Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ace89fbe-2c7d-4573-aa55-4cf14ba0bdcf",
      "UserId": 579655,
      "Username": "Jennifer Wren",
      "AvatarUrl": "https://i.imgur.com/t1XUS1Kb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't think so. I don't know if I am that person you are thinking of. Move object is a pretty basic tab. Apparantly, Add to Inventory does not do all of the same things as Take.",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't think so. I don't know if I am that person you are thinking of. Move object is a pretty basic tab. Apparantly, Add to Inventory does not do all of the same things as Take.</p>\n\n",
      "PostDate": "2024-04-04T20:24:42.9389507Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
