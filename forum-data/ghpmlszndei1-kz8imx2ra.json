{
  "Topic": {
    "TopicId": "ghpmlszndei1-kz8imx2ra",
    "ForumId": "10",
    "Title": "How to stop showing player object in custom object list function",
    "LastUpdated": "2022-04-28T17:54:16.5289043Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "cb48fcc8-6e40-4d28-8b03-f13f9274fb27",
      "UserId": 587281,
      "Username": "PsychoVyse",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f359107abf9dc8cfe62bba1e4a8e84a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm currently displaying a custom list of objects for a room but it's actually displaying the Player object verb in the output which shouldn't happen.\r\n\r\n```\r\nmsg (FancyObjectList (\"You can see \", GetDirectChildren(Reception), \".\", \"\")) \r\n```\r\n\r\nhttps://i.imgur.com/Uik7leW.png\r\n\r\n```\r\n  <function name=\"FancyObjectList\" parameters=\"preList, objects, postList, empty, joiner\" type=\"string\"><![CDATA[\r\n    if (not IsDefined (\"joiner\")) {\r\n      joiner = \"and\"\r\n    }\r\n    if (TypeOf (objects) = \"object\") {\r\n      objects = GetDirectChildren (objects)\r\n    }\r\n    if (ListCount (objects) = 0) {\r\n      if (IsDefined (\"empty\")) {\r\n        return (empty)\r\n      }\r\n      else {\r\n        return (\"\")\r\n      }\r\n    }\r\n    else {\r\n      result = \"\"\r\n      itemsLeft = ListCount(objects)\r\n      foreach (item, objects) {\r\n        switch (TypeOf(item)) {\r\n          case (\"object\") {\r\n            if (DoesInherit (item, \"defaultexit\")) {\r\n              result = result + GetDisplayNameLink(item, \"exit\")\r\n            }\r\n            else {\r\n              result = result + GetDisplayNameLink(item, \"object\")\r\n            }\r\n          }\r\n          case (\"string\") {\r\n            result = result + item\r\n          }\r\n          default {\r\n            result = result + ToString (item)\r\n          }\r\n        }\r\n        itemsLeft = itemsLeft - 1\r\n        if (itemsLeft > 0) {\r\n          if (itemsLeft > 1 or (GetBoolean(game, \"oxfordcomma\") and not ListCount (objects) = 2)) {\r\n            result = result + \", \"\r\n          }\r\n          else {\r\n            result = result + \" \"\r\n          }\r\n          if (itemsLeft = 1) {\r\n            result = result + joiner + \" \"\r\n          }\r\n        }\r\n      }\r\n      result = preList + result + postList\r\n      return (Trim (result))\r\n    }\r\n  ]]></function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm currently displaying a custom list of objects for a room but it's actually displaying the Player object verb in the output which shouldn't happen.</p>\n<pre><code>msg (FancyObjectList (\"You can see \", GetDirectChildren(Reception), \".\", \"\")) \n</code></pre>\n<p>https://i.imgur.com/Uik7leW.png</p>\n<pre><code>  &lt;function name=\"FancyObjectList\" parameters=\"preList, objects, postList, empty, joiner\" type=\"string\"&gt;&lt;![CDATA[\n    if (not IsDefined (\"joiner\")) {\n      joiner = \"and\"\n    }\n    if (TypeOf (objects) = \"object\") {\n      objects = GetDirectChildren (objects)\n    }\n    if (ListCount (objects) = 0) {\n      if (IsDefined (\"empty\")) {\n        return (empty)\n      }\n      else {\n        return (\"\")\n      }\n    }\n    else {\n      result = \"\"\n      itemsLeft = ListCount(objects)\n      foreach (item, objects) {\n        switch (TypeOf(item)) {\n          case (\"object\") {\n            if (DoesInherit (item, \"defaultexit\")) {\n              result = result + GetDisplayNameLink(item, \"exit\")\n            }\n            else {\n              result = result + GetDisplayNameLink(item, \"object\")\n            }\n          }\n          case (\"string\") {\n            result = result + item\n          }\n          default {\n            result = result + ToString (item)\n          }\n        }\n        itemsLeft = itemsLeft - 1\n        if (itemsLeft &gt; 0) {\n          if (itemsLeft &gt; 1 or (GetBoolean(game, \"oxfordcomma\") and not ListCount (objects) = 2)) {\n            result = result + \", \"\n          }\n          else {\n            result = result + \" \"\n          }\n          if (itemsLeft = 1) {\n            result = result + joiner + \" \"\n          }\n        }\n      }\n      result = preList + result + postList\n      return (Trim (result))\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2022-04-28T17:54:16.5289043Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "420ce94c-733e-4cd8-be66-04a1c86721eb",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It seems a little weird to be using `GetDirectChildren`.\r\n\r\nHowever, I would suggest the best fix for this is simply to remove the player from the list. Before:\r\n```\r\n    if (ListCount (objects) = 0) {\r\n```\r\nyou could add a simple check:\r\n```\r\n    while (ListContains (objects, game.pov)) {\r\n      list remove (objects, game.pov)\r\n    }\r\n```\r\n(assuming you never want to use this function to display a list that includes the player - if you do, you'd need to put  the list into a temporary variable and remove the player from it before calling the function)\r\n\r\n(in case you've not come across it, the attribute `game.pov` refers to the current player object. Using that rather than referring directly to an object named `player` is a good habit to get into)",
      "EditableFormat": "markdown",
      "HTML": "<p>It seems a little weird to be using <code>GetDirectChildren</code>.</p>\n<p>However, I would suggest the best fix for this is simply to remove the player from the list. Before:</p>\n<pre><code>    if (ListCount (objects) = 0) {\n</code></pre>\n<p>you could add a simple check:</p>\n<pre><code>    while (ListContains (objects, game.pov)) {\n      list remove (objects, game.pov)\n    }\n</code></pre>\n<p>(assuming you never want to use this function to display a list that includes the player - if you do, you'd need to put  the list into a temporary variable and remove the player from it before calling the function)</p>\n<p>(in case you've not come across it, the attribute <code>game.pov</code> refers to the current player object. Using that rather than referring directly to an object named <code>player</code> is a good habit to get into)</p>\n\n",
      "PostDate": "2022-04-29T00:07:20.5583075Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9282aeae-172a-441d-8b4f-20f664e39346",
      "UserId": 587281,
      "Username": "PsychoVyse",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f359107abf9dc8cfe62bba1e4a8e84a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks, looks like that did the trick :)",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks, looks like that did the trick :)</p>\n\n",
      "PostDate": "2022-04-29T16:36:12.6410965Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e22bc329-6e11-4eec-b114-d31391d49c7f",
      "UserId": 587281,
      "Username": "PsychoVyse",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f359107abf9dc8cfe62bba1e4a8e84a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I want to also hide invisible objects but I'm sure of how to get a list of all direct children that are just visible ones only. I kind of need to make my own version of GetDirectChildren() but I don't know how.",
      "EditableFormat": "markdown",
      "HTML": "<p>I want to also hide invisible objects but I'm sure of how to get a list of all direct children that are just visible ones only. I kind of need to make my own version of GetDirectChildren() but I don't know how.</p>\n\n",
      "PostDate": "2022-05-01T10:41:57.8817239Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ea3a3645-a171-4076-a69b-df446c82e94b",
      "UserId": 587281,
      "Username": "PsychoVyse",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f359107abf9dc8cfe62bba1e4a8e84a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Nevermind, I fixed it with this line after the last one removing the player object pov.\r\n\r\n```\r\nvisibleobjectsonly = FilterByAttribute(objects, \"visible\", true)\r\n```\r\n\r\nThen replaced the use of \"objects\" going forwards with \"visibleobjectsonly\".\r\n\r\nSo the full function is this now:\r\n\r\n```\r\n  <function name=\"FancyObjectList\" parameters=\"preList, objects, postList, empty, joiner\" type=\"string\"><![CDATA[\r\n    if (not IsDefined (\"joiner\")) {\r\n      joiner = \"and\"\r\n    }\r\n    if (TypeOf (objects) = \"object\") {\r\n      objects = GetDirectChildren (objects)\r\n    }\r\n    while (ListContains (objects, game.pov)) {\r\n      // Remove the game player object from the scope of the list\r\n      list remove (objects, game.pov)\r\n    }\r\n\tvisibleobjectsonly = FilterByAttribute(objects, \"visible\", true)\r\n    if (ListCount (visibleobjectsonly) = 0) {\r\n      if (IsDefined (\"empty\")) {\r\n        return (empty)\r\n      }\r\n      else {\r\n        return (\"\")\r\n      }\r\n    }\r\n    else {\r\n      result = \"\"\r\n      itemsLeft = ListCount(visibleobjectsonly)\r\n      foreach (item, visibleobjectsonly) {\r\n        switch (TypeOf(item)) {\r\n          case (\"object\") {\r\n              if (DoesInherit (item, \"defaultexit\")) {\r\n                result = result + GetDisplayNameLink(item, \"exit\")\r\n              }\r\n              else {\r\n                result = result + GetDisplayNameLink(item, \"object\")\r\n              }\r\n          }\r\n          case (\"string\") {\r\n            result = result + item\r\n          }\r\n          default {\r\n            result = result + ToString (item)\r\n          }\r\n        }\r\n        itemsLeft = itemsLeft - 1\r\n        if (itemsLeft > 0) {\r\n          if (itemsLeft > 1 or (GetBoolean(game, \"oxfordcomma\") and not ListCount (visibleobjectsonly) = 2)) {\r\n            result = result + \", \"\r\n          }\r\n          else {\r\n            result = result + \" \"\r\n          }\r\n          if (itemsLeft = 1) {\r\n            result = result + joiner + \" \"\r\n          }\r\n        }\r\n      }\r\n      result = preList + result + postList\r\n      return (Trim (result))\r\n    }\r\n  ]]></function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Nevermind, I fixed it with this line after the last one removing the player object pov.</p>\n<pre><code>visibleobjectsonly = FilterByAttribute(objects, \"visible\", true)\n</code></pre>\n<p>Then replaced the use of \"objects\" going forwards with \"visibleobjectsonly\".</p>\n<p>So the full function is this now:</p>\n<pre><code>  &lt;function name=\"FancyObjectList\" parameters=\"preList, objects, postList, empty, joiner\" type=\"string\"&gt;&lt;![CDATA[\n    if (not IsDefined (\"joiner\")) {\n      joiner = \"and\"\n    }\n    if (TypeOf (objects) = \"object\") {\n      objects = GetDirectChildren (objects)\n    }\n    while (ListContains (objects, game.pov)) {\n      // Remove the game player object from the scope of the list\n      list remove (objects, game.pov)\n    }\n\tvisibleobjectsonly = FilterByAttribute(objects, \"visible\", true)\n    if (ListCount (visibleobjectsonly) = 0) {\n      if (IsDefined (\"empty\")) {\n        return (empty)\n      }\n      else {\n        return (\"\")\n      }\n    }\n    else {\n      result = \"\"\n      itemsLeft = ListCount(visibleobjectsonly)\n      foreach (item, visibleobjectsonly) {\n        switch (TypeOf(item)) {\n          case (\"object\") {\n              if (DoesInherit (item, \"defaultexit\")) {\n                result = result + GetDisplayNameLink(item, \"exit\")\n              }\n              else {\n                result = result + GetDisplayNameLink(item, \"object\")\n              }\n          }\n          case (\"string\") {\n            result = result + item\n          }\n          default {\n            result = result + ToString (item)\n          }\n        }\n        itemsLeft = itemsLeft - 1\n        if (itemsLeft &gt; 0) {\n          if (itemsLeft &gt; 1 or (GetBoolean(game, \"oxfordcomma\") and not ListCount (visibleobjectsonly) = 2)) {\n            result = result + \", \"\n          }\n          else {\n            result = result + \" \"\n          }\n          if (itemsLeft = 1) {\n            result = result + joiner + \" \"\n          }\n        }\n      }\n      result = preList + result + postList\n      return (Trim (result))\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2022-05-01T10:50:16.2325268Z",
      "LastEditDate": "2022-05-01T10:50:51.6956831Z",
      "link": null
    },
    {
      "PostId": "910c82f3-4af3-4dda-9dba-d16c7db5cd51",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I want to also hide invisible objects but I'm sure of how to get a list of all direct children that are just visible ones only. I kind of need to make my own version of GetDirectChildren() but I don't know how.\r\n\r\nYou could also use `RemoveSceneryObjects` if that's useful.\r\n\r\n```\r\nobjects = RemoveSceneryObjects (objects)\r\n```\r\nThat removes objects that are scenery, objects that aren't visible, and the player object. It's what the core function `FormatObjectList` uses.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I want to also hide invisible objects but I'm sure of how to get a list of all direct children that are just visible ones only. I kind of need to make my own version of GetDirectChildren() but I don't know how.</p>\n</blockquote>\n<p>You could also use <code>RemoveSceneryObjects</code> if that's useful.</p>\n<pre><code>objects = RemoveSceneryObjects (objects)\n</code></pre>\n<p>That removes objects that are scenery, objects that aren't visible, and the player object. It's what the core function <code>FormatObjectList</code> uses.</p>\n\n",
      "PostDate": "2022-05-01T11:12:11.2212959Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
